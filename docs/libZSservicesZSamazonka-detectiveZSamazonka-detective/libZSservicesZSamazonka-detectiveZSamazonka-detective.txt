-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/

@package libZSservicesZSamazonka-detectiveZSamazonka-detective
@version 2.0


module Network.AWS.Detective.Types.Account

-- | An AWS account that is the administrator account of or a member of a
--   behavior graph.
--   
--   <i>See:</i> <a>newAccount</a> smart constructor.
data Account
Account' :: Text -> Text -> Account

-- | The account identifier of the AWS account.
[$sel:accountId:Account'] :: Account -> Text

-- | The AWS account root user email address for the AWS account.
[$sel:emailAddress:Account'] :: Account -> Text

-- | Create a value of <a>Account</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:accountId:Account'</a>, <a>account_accountId</a> - The account
--   identifier of the AWS account.
--   
--   <a>$sel:emailAddress:Account'</a>, <a>account_emailAddress</a> - The
--   AWS account root user email address for the AWS account.
newAccount :: Text -> Text -> Account

-- | The account identifier of the AWS account.
account_accountId :: Lens' Account Text

-- | The AWS account root user email address for the AWS account.
account_emailAddress :: Lens' Account Text
instance GHC.Generics.Generic Network.AWS.Detective.Types.Account.Account
instance GHC.Show.Show Network.AWS.Detective.Types.Account.Account
instance GHC.Read.Read Network.AWS.Detective.Types.Account.Account
instance GHC.Classes.Eq Network.AWS.Detective.Types.Account.Account
instance Data.Hashable.Class.Hashable Network.AWS.Detective.Types.Account.Account
instance Control.DeepSeq.NFData Network.AWS.Detective.Types.Account.Account
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Detective.Types.Account.Account


module Network.AWS.Detective.Types.Graph

-- | A behavior graph in Detective.
--   
--   <i>See:</i> <a>newGraph</a> smart constructor.
data Graph
Graph' :: Maybe Text -> Maybe POSIX -> Graph

-- | The ARN of the behavior graph.
[$sel:arn:Graph'] :: Graph -> Maybe Text

-- | The date and time that the behavior graph was created. The value is in
--   milliseconds since the epoch.
[$sel:createdTime:Graph'] :: Graph -> Maybe POSIX

-- | Create a value of <a>Graph</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:Graph'</a>, <a>graph_arn</a> - The ARN of the behavior
--   graph.
--   
--   <a>$sel:createdTime:Graph'</a>, <a>graph_createdTime</a> - The date
--   and time that the behavior graph was created. The value is in
--   milliseconds since the epoch.
newGraph :: Graph

-- | The ARN of the behavior graph.
graph_arn :: Lens' Graph (Maybe Text)

-- | The date and time that the behavior graph was created. The value is in
--   milliseconds since the epoch.
graph_createdTime :: Lens' Graph (Maybe UTCTime)
instance GHC.Generics.Generic Network.AWS.Detective.Types.Graph.Graph
instance GHC.Show.Show Network.AWS.Detective.Types.Graph.Graph
instance GHC.Read.Read Network.AWS.Detective.Types.Graph.Graph
instance GHC.Classes.Eq Network.AWS.Detective.Types.Graph.Graph
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Detective.Types.Graph.Graph
instance Data.Hashable.Class.Hashable Network.AWS.Detective.Types.Graph.Graph
instance Control.DeepSeq.NFData Network.AWS.Detective.Types.Graph.Graph


module Network.AWS.Detective.Types.MemberDisabledReason
newtype MemberDisabledReason
MemberDisabledReason' :: Text -> MemberDisabledReason
[fromMemberDisabledReason] :: MemberDisabledReason -> Text
pattern MemberDisabledReason_VOLUME_TOO_HIGH :: MemberDisabledReason
pattern MemberDisabledReason_VOLUME_UNKNOWN :: MemberDisabledReason
instance Network.AWS.Data.XML.ToXML Network.AWS.Detective.Types.MemberDisabledReason.MemberDisabledReason
instance Network.AWS.Data.XML.FromXML Network.AWS.Detective.Types.MemberDisabledReason.MemberDisabledReason
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Detective.Types.MemberDisabledReason.MemberDisabledReason
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Detective.Types.MemberDisabledReason.MemberDisabledReason
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Detective.Types.MemberDisabledReason.MemberDisabledReason
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Detective.Types.MemberDisabledReason.MemberDisabledReason
instance Network.AWS.Data.Query.ToQuery Network.AWS.Detective.Types.MemberDisabledReason.MemberDisabledReason
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Detective.Types.MemberDisabledReason.MemberDisabledReason
instance Network.AWS.Data.Log.ToLog Network.AWS.Detective.Types.MemberDisabledReason.MemberDisabledReason
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Detective.Types.MemberDisabledReason.MemberDisabledReason
instance Network.AWS.Data.Text.ToText Network.AWS.Detective.Types.MemberDisabledReason.MemberDisabledReason
instance Network.AWS.Data.Text.FromText Network.AWS.Detective.Types.MemberDisabledReason.MemberDisabledReason
instance Control.DeepSeq.NFData Network.AWS.Detective.Types.MemberDisabledReason.MemberDisabledReason
instance Data.Hashable.Class.Hashable Network.AWS.Detective.Types.MemberDisabledReason.MemberDisabledReason
instance GHC.Generics.Generic Network.AWS.Detective.Types.MemberDisabledReason.MemberDisabledReason
instance GHC.Classes.Ord Network.AWS.Detective.Types.MemberDisabledReason.MemberDisabledReason
instance GHC.Classes.Eq Network.AWS.Detective.Types.MemberDisabledReason.MemberDisabledReason
instance GHC.Read.Read Network.AWS.Detective.Types.MemberDisabledReason.MemberDisabledReason
instance GHC.Show.Show Network.AWS.Detective.Types.MemberDisabledReason.MemberDisabledReason


module Network.AWS.Detective.Types.MemberStatus
newtype MemberStatus
MemberStatus' :: Text -> MemberStatus
[fromMemberStatus] :: MemberStatus -> Text
pattern MemberStatus_ACCEPTED_BUT_DISABLED :: MemberStatus
pattern MemberStatus_ENABLED :: MemberStatus
pattern MemberStatus_INVITED :: MemberStatus
pattern MemberStatus_VERIFICATION_FAILED :: MemberStatus
pattern MemberStatus_VERIFICATION_IN_PROGRESS :: MemberStatus
instance Network.AWS.Data.XML.ToXML Network.AWS.Detective.Types.MemberStatus.MemberStatus
instance Network.AWS.Data.XML.FromXML Network.AWS.Detective.Types.MemberStatus.MemberStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Detective.Types.MemberStatus.MemberStatus
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Detective.Types.MemberStatus.MemberStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Detective.Types.MemberStatus.MemberStatus
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Detective.Types.MemberStatus.MemberStatus
instance Network.AWS.Data.Query.ToQuery Network.AWS.Detective.Types.MemberStatus.MemberStatus
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Detective.Types.MemberStatus.MemberStatus
instance Network.AWS.Data.Log.ToLog Network.AWS.Detective.Types.MemberStatus.MemberStatus
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Detective.Types.MemberStatus.MemberStatus
instance Network.AWS.Data.Text.ToText Network.AWS.Detective.Types.MemberStatus.MemberStatus
instance Network.AWS.Data.Text.FromText Network.AWS.Detective.Types.MemberStatus.MemberStatus
instance Control.DeepSeq.NFData Network.AWS.Detective.Types.MemberStatus.MemberStatus
instance Data.Hashable.Class.Hashable Network.AWS.Detective.Types.MemberStatus.MemberStatus
instance GHC.Generics.Generic Network.AWS.Detective.Types.MemberStatus.MemberStatus
instance GHC.Classes.Ord Network.AWS.Detective.Types.MemberStatus.MemberStatus
instance GHC.Classes.Eq Network.AWS.Detective.Types.MemberStatus.MemberStatus
instance GHC.Read.Read Network.AWS.Detective.Types.MemberStatus.MemberStatus
instance GHC.Show.Show Network.AWS.Detective.Types.MemberStatus.MemberStatus


module Network.AWS.Detective.Types.MemberDetail

-- | Details about a member account that was invited to contribute to a
--   behavior graph.
--   
--   <i>See:</i> <a>newMemberDetail</a> smart constructor.
data MemberDetail
MemberDetail' :: Maybe POSIX -> Maybe MemberStatus -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe MemberDisabledReason -> Maybe Double -> Maybe Text -> Maybe POSIX -> Maybe POSIX -> Maybe Integer -> MemberDetail

-- | The date and time when the graph utilization percentage was last
--   updated.
[$sel:percentOfGraphUtilizationUpdatedTime:MemberDetail'] :: MemberDetail -> Maybe POSIX

-- | The current membership status of the member account. The status can
--   have one of the following values:
--   
--   <ul>
--   <li><tt>INVITED</tt> - Indicates that the member was sent an
--   invitation but has not yet responded.</li>
--   <li><tt>VERIFICATION_IN_PROGRESS</tt> - Indicates that Detective is
--   verifying that the account identifier and email address provided for
--   the member account match. If they do match, then Detective sends the
--   invitation. If the email address and account identifier don't match,
--   then the member cannot be added to the behavior graph.</li>
--   <li><tt>VERIFICATION_FAILED</tt> - Indicates that the account and
--   email address provided for the member account do not match, and
--   Detective did not send an invitation to the account.</li>
--   <li><tt>ENABLED</tt> - Indicates that the member account accepted the
--   invitation to contribute to the behavior graph.</li>
--   <li><tt>ACCEPTED_BUT_DISABLED</tt> - Indicates that the member account
--   accepted the invitation but is prevented from contributing data to the
--   behavior graph. <tt>DisabledReason</tt> provides the reason why the
--   member account is not enabled.</li>
--   </ul>
--   
--   Member accounts that declined an invitation or that were removed from
--   the behavior graph are not included.
[$sel:status:MemberDetail'] :: MemberDetail -> Maybe MemberStatus

-- | The date and time that Detective sent the invitation to the member
--   account. The value is in milliseconds since the epoch.
[$sel:invitedTime:MemberDetail'] :: MemberDetail -> Maybe POSIX

-- | The AWS account identifier of the administrator account for the
--   behavior graph.
[$sel:administratorId:MemberDetail'] :: MemberDetail -> Maybe Text

-- | The ARN of the behavior graph that the member account was invited to.
[$sel:graphArn:MemberDetail'] :: MemberDetail -> Maybe Text

-- | The AWS account identifier of the administrator account for the
--   behavior graph.
[$sel:masterId:MemberDetail'] :: MemberDetail -> Maybe Text

-- | The AWS account identifier for the member account.
[$sel:accountId:MemberDetail'] :: MemberDetail -> Maybe Text

-- | For member accounts with a status of <tt>ACCEPTED_BUT_DISABLED</tt>,
--   the reason that the member account is not enabled.
--   
--   The reason can have one of the following values:
--   
--   <ul>
--   <li><tt>VOLUME_TOO_HIGH</tt> - Indicates that adding the member
--   account would cause the data volume for the behavior graph to be too
--   high.</li>
--   <li><tt>VOLUME_UNKNOWN</tt> - Indicates that Detective is unable to
--   verify the data volume for the member account. This is usually because
--   the member account is not enrolled in Amazon GuardDuty.</li>
--   </ul>
[$sel:disabledReason:MemberDetail'] :: MemberDetail -> Maybe MemberDisabledReason

-- | The member account data volume as a percentage of the maximum allowed
--   data volume. 0 indicates 0 percent, and 100 indicates 100 percent.
--   
--   Note that this is not the percentage of the behavior graph data
--   volume.
--   
--   For example, the data volume for the behavior graph is 80 GB per day.
--   The maximum data volume is 160 GB per day. If the data volume for the
--   member account is 40 GB per day, then
--   <tt>PercentOfGraphUtilization</tt> is 25. It represents 25% of the
--   maximum allowed data volume.
[$sel:percentOfGraphUtilization:MemberDetail'] :: MemberDetail -> Maybe Double

-- | The AWS account root user email address for the member account.
[$sel:emailAddress:MemberDetail'] :: MemberDetail -> Maybe Text

-- | The data and time when the member account data volume was last
--   updated.
[$sel:volumeUsageUpdatedTime:MemberDetail'] :: MemberDetail -> Maybe POSIX

-- | The date and time that the member account was last updated. The value
--   is in milliseconds since the epoch.
[$sel:updatedTime:MemberDetail'] :: MemberDetail -> Maybe POSIX

-- | The data volume in bytes per day for the member account.
[$sel:volumeUsageInBytes:MemberDetail'] :: MemberDetail -> Maybe Integer

-- | Create a value of <a>MemberDetail</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:percentOfGraphUtilizationUpdatedTime:MemberDetail'</a>,
--   <a>memberDetail_percentOfGraphUtilizationUpdatedTime</a> - The date
--   and time when the graph utilization percentage was last updated.
--   
--   <a>$sel:status:MemberDetail'</a>, <a>memberDetail_status</a> - The
--   current membership status of the member account. The status can have
--   one of the following values:
--   
--   <ul>
--   <li><tt>INVITED</tt> - Indicates that the member was sent an
--   invitation but has not yet responded.</li>
--   <li><tt>VERIFICATION_IN_PROGRESS</tt> - Indicates that Detective is
--   verifying that the account identifier and email address provided for
--   the member account match. If they do match, then Detective sends the
--   invitation. If the email address and account identifier don't match,
--   then the member cannot be added to the behavior graph.</li>
--   <li><tt>VERIFICATION_FAILED</tt> - Indicates that the account and
--   email address provided for the member account do not match, and
--   Detective did not send an invitation to the account.</li>
--   <li><tt>ENABLED</tt> - Indicates that the member account accepted the
--   invitation to contribute to the behavior graph.</li>
--   <li><tt>ACCEPTED_BUT_DISABLED</tt> - Indicates that the member account
--   accepted the invitation but is prevented from contributing data to the
--   behavior graph. <tt>DisabledReason</tt> provides the reason why the
--   member account is not enabled.</li>
--   </ul>
--   
--   Member accounts that declined an invitation or that were removed from
--   the behavior graph are not included.
--   
--   <a>$sel:invitedTime:MemberDetail'</a>, <a>memberDetail_invitedTime</a>
--   - The date and time that Detective sent the invitation to the member
--   account. The value is in milliseconds since the epoch.
--   
--   <a>$sel:administratorId:MemberDetail'</a>,
--   <a>memberDetail_administratorId</a> - The AWS account identifier of
--   the administrator account for the behavior graph.
--   
--   <a>$sel:graphArn:MemberDetail'</a>, <a>memberDetail_graphArn</a> - The
--   ARN of the behavior graph that the member account was invited to.
--   
--   <a>$sel:masterId:MemberDetail'</a>, <a>memberDetail_masterId</a> - The
--   AWS account identifier of the administrator account for the behavior
--   graph.
--   
--   <a>$sel:accountId:MemberDetail'</a>, <a>memberDetail_accountId</a> -
--   The AWS account identifier for the member account.
--   
--   <a>$sel:disabledReason:MemberDetail'</a>,
--   <a>memberDetail_disabledReason</a> - For member accounts with a status
--   of <tt>ACCEPTED_BUT_DISABLED</tt>, the reason that the member account
--   is not enabled.
--   
--   The reason can have one of the following values:
--   
--   <ul>
--   <li><tt>VOLUME_TOO_HIGH</tt> - Indicates that adding the member
--   account would cause the data volume for the behavior graph to be too
--   high.</li>
--   <li><tt>VOLUME_UNKNOWN</tt> - Indicates that Detective is unable to
--   verify the data volume for the member account. This is usually because
--   the member account is not enrolled in Amazon GuardDuty.</li>
--   </ul>
--   
--   <a>$sel:percentOfGraphUtilization:MemberDetail'</a>,
--   <a>memberDetail_percentOfGraphUtilization</a> - The member account
--   data volume as a percentage of the maximum allowed data volume. 0
--   indicates 0 percent, and 100 indicates 100 percent.
--   
--   Note that this is not the percentage of the behavior graph data
--   volume.
--   
--   For example, the data volume for the behavior graph is 80 GB per day.
--   The maximum data volume is 160 GB per day. If the data volume for the
--   member account is 40 GB per day, then
--   <tt>PercentOfGraphUtilization</tt> is 25. It represents 25% of the
--   maximum allowed data volume.
--   
--   <a>$sel:emailAddress:MemberDetail'</a>,
--   <a>memberDetail_emailAddress</a> - The AWS account root user email
--   address for the member account.
--   
--   <a>$sel:volumeUsageUpdatedTime:MemberDetail'</a>,
--   <a>memberDetail_volumeUsageUpdatedTime</a> - The data and time when
--   the member account data volume was last updated.
--   
--   <a>$sel:updatedTime:MemberDetail'</a>, <a>memberDetail_updatedTime</a>
--   - The date and time that the member account was last updated. The
--   value is in milliseconds since the epoch.
--   
--   <a>$sel:volumeUsageInBytes:MemberDetail'</a>,
--   <a>memberDetail_volumeUsageInBytes</a> - The data volume in bytes per
--   day for the member account.
newMemberDetail :: MemberDetail

-- | The date and time when the graph utilization percentage was last
--   updated.
memberDetail_percentOfGraphUtilizationUpdatedTime :: Lens' MemberDetail (Maybe UTCTime)

-- | The current membership status of the member account. The status can
--   have one of the following values:
--   
--   <ul>
--   <li><tt>INVITED</tt> - Indicates that the member was sent an
--   invitation but has not yet responded.</li>
--   <li><tt>VERIFICATION_IN_PROGRESS</tt> - Indicates that Detective is
--   verifying that the account identifier and email address provided for
--   the member account match. If they do match, then Detective sends the
--   invitation. If the email address and account identifier don't match,
--   then the member cannot be added to the behavior graph.</li>
--   <li><tt>VERIFICATION_FAILED</tt> - Indicates that the account and
--   email address provided for the member account do not match, and
--   Detective did not send an invitation to the account.</li>
--   <li><tt>ENABLED</tt> - Indicates that the member account accepted the
--   invitation to contribute to the behavior graph.</li>
--   <li><tt>ACCEPTED_BUT_DISABLED</tt> - Indicates that the member account
--   accepted the invitation but is prevented from contributing data to the
--   behavior graph. <tt>DisabledReason</tt> provides the reason why the
--   member account is not enabled.</li>
--   </ul>
--   
--   Member accounts that declined an invitation or that were removed from
--   the behavior graph are not included.
memberDetail_status :: Lens' MemberDetail (Maybe MemberStatus)

-- | The date and time that Detective sent the invitation to the member
--   account. The value is in milliseconds since the epoch.
memberDetail_invitedTime :: Lens' MemberDetail (Maybe UTCTime)

-- | The AWS account identifier of the administrator account for the
--   behavior graph.
memberDetail_administratorId :: Lens' MemberDetail (Maybe Text)

-- | The ARN of the behavior graph that the member account was invited to.
memberDetail_graphArn :: Lens' MemberDetail (Maybe Text)

-- | The AWS account identifier of the administrator account for the
--   behavior graph.
memberDetail_masterId :: Lens' MemberDetail (Maybe Text)

-- | The AWS account identifier for the member account.
memberDetail_accountId :: Lens' MemberDetail (Maybe Text)

-- | For member accounts with a status of <tt>ACCEPTED_BUT_DISABLED</tt>,
--   the reason that the member account is not enabled.
--   
--   The reason can have one of the following values:
--   
--   <ul>
--   <li><tt>VOLUME_TOO_HIGH</tt> - Indicates that adding the member
--   account would cause the data volume for the behavior graph to be too
--   high.</li>
--   <li><tt>VOLUME_UNKNOWN</tt> - Indicates that Detective is unable to
--   verify the data volume for the member account. This is usually because
--   the member account is not enrolled in Amazon GuardDuty.</li>
--   </ul>
memberDetail_disabledReason :: Lens' MemberDetail (Maybe MemberDisabledReason)

-- | The member account data volume as a percentage of the maximum allowed
--   data volume. 0 indicates 0 percent, and 100 indicates 100 percent.
--   
--   Note that this is not the percentage of the behavior graph data
--   volume.
--   
--   For example, the data volume for the behavior graph is 80 GB per day.
--   The maximum data volume is 160 GB per day. If the data volume for the
--   member account is 40 GB per day, then
--   <tt>PercentOfGraphUtilization</tt> is 25. It represents 25% of the
--   maximum allowed data volume.
memberDetail_percentOfGraphUtilization :: Lens' MemberDetail (Maybe Double)

-- | The AWS account root user email address for the member account.
memberDetail_emailAddress :: Lens' MemberDetail (Maybe Text)

-- | The data and time when the member account data volume was last
--   updated.
memberDetail_volumeUsageUpdatedTime :: Lens' MemberDetail (Maybe UTCTime)

-- | The date and time that the member account was last updated. The value
--   is in milliseconds since the epoch.
memberDetail_updatedTime :: Lens' MemberDetail (Maybe UTCTime)

-- | The data volume in bytes per day for the member account.
memberDetail_volumeUsageInBytes :: Lens' MemberDetail (Maybe Integer)
instance GHC.Generics.Generic Network.AWS.Detective.Types.MemberDetail.MemberDetail
instance GHC.Show.Show Network.AWS.Detective.Types.MemberDetail.MemberDetail
instance GHC.Read.Read Network.AWS.Detective.Types.MemberDetail.MemberDetail
instance GHC.Classes.Eq Network.AWS.Detective.Types.MemberDetail.MemberDetail
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Detective.Types.MemberDetail.MemberDetail
instance Data.Hashable.Class.Hashable Network.AWS.Detective.Types.MemberDetail.MemberDetail
instance Control.DeepSeq.NFData Network.AWS.Detective.Types.MemberDetail.MemberDetail


module Network.AWS.Detective.Types.UnprocessedAccount

-- | A member account that was included in a request but for which the
--   request could not be processed.
--   
--   <i>See:</i> <a>newUnprocessedAccount</a> smart constructor.
data UnprocessedAccount
UnprocessedAccount' :: Maybe Text -> Maybe Text -> UnprocessedAccount

-- | The AWS account identifier of the member account that was not
--   processed.
[$sel:accountId:UnprocessedAccount'] :: UnprocessedAccount -> Maybe Text

-- | The reason that the member account request could not be processed.
[$sel:reason:UnprocessedAccount'] :: UnprocessedAccount -> Maybe Text

-- | Create a value of <a>UnprocessedAccount</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:accountId:UnprocessedAccount'</a>,
--   <a>unprocessedAccount_accountId</a> - The AWS account identifier of
--   the member account that was not processed.
--   
--   <a>$sel:reason:UnprocessedAccount'</a>,
--   <a>unprocessedAccount_reason</a> - The reason that the member account
--   request could not be processed.
newUnprocessedAccount :: UnprocessedAccount

-- | The AWS account identifier of the member account that was not
--   processed.
unprocessedAccount_accountId :: Lens' UnprocessedAccount (Maybe Text)

-- | The reason that the member account request could not be processed.
unprocessedAccount_reason :: Lens' UnprocessedAccount (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Detective.Types.UnprocessedAccount.UnprocessedAccount
instance GHC.Show.Show Network.AWS.Detective.Types.UnprocessedAccount.UnprocessedAccount
instance GHC.Read.Read Network.AWS.Detective.Types.UnprocessedAccount.UnprocessedAccount
instance GHC.Classes.Eq Network.AWS.Detective.Types.UnprocessedAccount.UnprocessedAccount
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Detective.Types.UnprocessedAccount.UnprocessedAccount
instance Data.Hashable.Class.Hashable Network.AWS.Detective.Types.UnprocessedAccount.UnprocessedAccount
instance Control.DeepSeq.NFData Network.AWS.Detective.Types.UnprocessedAccount.UnprocessedAccount


module Network.AWS.Detective.Types

-- | API version <tt>2018-10-26</tt> of the Amazon Detective SDK
--   configuration.
defaultService :: Service

-- | The request parameters are invalid.
_ValidationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request attempted an invalid action.
_ConflictException :: AsError a => Getting (First ServiceError) a ServiceError

-- | This request cannot be completed for one of the following reasons.
--   
--   <ul>
--   <li>The request would cause the number of member accounts in the
--   behavior graph to exceed the maximum allowed. A behavior graph cannot
--   have more than 1000 member accounts.</li>
--   <li>The request would cause the data rate for the behavior graph to
--   exceed the maximum allowed.</li>
--   <li>Detective is unable to verify the data rate for the member
--   account. This is usually because the member account is not enrolled in
--   Amazon GuardDuty.</li>
--   </ul>
_ServiceQuotaExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request was valid but failed because of a problem with the
--   service.
_InternalServerException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request refers to a nonexistent resource.
_ResourceNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError
newtype MemberDisabledReason
MemberDisabledReason' :: Text -> MemberDisabledReason
[fromMemberDisabledReason] :: MemberDisabledReason -> Text
pattern MemberDisabledReason_VOLUME_TOO_HIGH :: MemberDisabledReason
pattern MemberDisabledReason_VOLUME_UNKNOWN :: MemberDisabledReason
newtype MemberStatus
MemberStatus' :: Text -> MemberStatus
[fromMemberStatus] :: MemberStatus -> Text
pattern MemberStatus_ACCEPTED_BUT_DISABLED :: MemberStatus
pattern MemberStatus_ENABLED :: MemberStatus
pattern MemberStatus_INVITED :: MemberStatus
pattern MemberStatus_VERIFICATION_FAILED :: MemberStatus
pattern MemberStatus_VERIFICATION_IN_PROGRESS :: MemberStatus

-- | An AWS account that is the administrator account of or a member of a
--   behavior graph.
--   
--   <i>See:</i> <a>newAccount</a> smart constructor.
data Account
Account' :: Text -> Text -> Account

-- | The account identifier of the AWS account.
[$sel:accountId:Account'] :: Account -> Text

-- | The AWS account root user email address for the AWS account.
[$sel:emailAddress:Account'] :: Account -> Text

-- | Create a value of <a>Account</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:accountId:Account'</a>, <a>account_accountId</a> - The account
--   identifier of the AWS account.
--   
--   <a>$sel:emailAddress:Account'</a>, <a>account_emailAddress</a> - The
--   AWS account root user email address for the AWS account.
newAccount :: Text -> Text -> Account

-- | The account identifier of the AWS account.
account_accountId :: Lens' Account Text

-- | The AWS account root user email address for the AWS account.
account_emailAddress :: Lens' Account Text

-- | A behavior graph in Detective.
--   
--   <i>See:</i> <a>newGraph</a> smart constructor.
data Graph
Graph' :: Maybe Text -> Maybe POSIX -> Graph

-- | The ARN of the behavior graph.
[$sel:arn:Graph'] :: Graph -> Maybe Text

-- | The date and time that the behavior graph was created. The value is in
--   milliseconds since the epoch.
[$sel:createdTime:Graph'] :: Graph -> Maybe POSIX

-- | Create a value of <a>Graph</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:Graph'</a>, <a>graph_arn</a> - The ARN of the behavior
--   graph.
--   
--   <a>$sel:createdTime:Graph'</a>, <a>graph_createdTime</a> - The date
--   and time that the behavior graph was created. The value is in
--   milliseconds since the epoch.
newGraph :: Graph

-- | The ARN of the behavior graph.
graph_arn :: Lens' Graph (Maybe Text)

-- | The date and time that the behavior graph was created. The value is in
--   milliseconds since the epoch.
graph_createdTime :: Lens' Graph (Maybe UTCTime)

-- | Details about a member account that was invited to contribute to a
--   behavior graph.
--   
--   <i>See:</i> <a>newMemberDetail</a> smart constructor.
data MemberDetail
MemberDetail' :: Maybe POSIX -> Maybe MemberStatus -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe MemberDisabledReason -> Maybe Double -> Maybe Text -> Maybe POSIX -> Maybe POSIX -> Maybe Integer -> MemberDetail

-- | The date and time when the graph utilization percentage was last
--   updated.
[$sel:percentOfGraphUtilizationUpdatedTime:MemberDetail'] :: MemberDetail -> Maybe POSIX

-- | The current membership status of the member account. The status can
--   have one of the following values:
--   
--   <ul>
--   <li><tt>INVITED</tt> - Indicates that the member was sent an
--   invitation but has not yet responded.</li>
--   <li><tt>VERIFICATION_IN_PROGRESS</tt> - Indicates that Detective is
--   verifying that the account identifier and email address provided for
--   the member account match. If they do match, then Detective sends the
--   invitation. If the email address and account identifier don't match,
--   then the member cannot be added to the behavior graph.</li>
--   <li><tt>VERIFICATION_FAILED</tt> - Indicates that the account and
--   email address provided for the member account do not match, and
--   Detective did not send an invitation to the account.</li>
--   <li><tt>ENABLED</tt> - Indicates that the member account accepted the
--   invitation to contribute to the behavior graph.</li>
--   <li><tt>ACCEPTED_BUT_DISABLED</tt> - Indicates that the member account
--   accepted the invitation but is prevented from contributing data to the
--   behavior graph. <tt>DisabledReason</tt> provides the reason why the
--   member account is not enabled.</li>
--   </ul>
--   
--   Member accounts that declined an invitation or that were removed from
--   the behavior graph are not included.
[$sel:status:MemberDetail'] :: MemberDetail -> Maybe MemberStatus

-- | The date and time that Detective sent the invitation to the member
--   account. The value is in milliseconds since the epoch.
[$sel:invitedTime:MemberDetail'] :: MemberDetail -> Maybe POSIX

-- | The AWS account identifier of the administrator account for the
--   behavior graph.
[$sel:administratorId:MemberDetail'] :: MemberDetail -> Maybe Text

-- | The ARN of the behavior graph that the member account was invited to.
[$sel:graphArn:MemberDetail'] :: MemberDetail -> Maybe Text

-- | The AWS account identifier of the administrator account for the
--   behavior graph.
[$sel:masterId:MemberDetail'] :: MemberDetail -> Maybe Text

-- | The AWS account identifier for the member account.
[$sel:accountId:MemberDetail'] :: MemberDetail -> Maybe Text

-- | For member accounts with a status of <tt>ACCEPTED_BUT_DISABLED</tt>,
--   the reason that the member account is not enabled.
--   
--   The reason can have one of the following values:
--   
--   <ul>
--   <li><tt>VOLUME_TOO_HIGH</tt> - Indicates that adding the member
--   account would cause the data volume for the behavior graph to be too
--   high.</li>
--   <li><tt>VOLUME_UNKNOWN</tt> - Indicates that Detective is unable to
--   verify the data volume for the member account. This is usually because
--   the member account is not enrolled in Amazon GuardDuty.</li>
--   </ul>
[$sel:disabledReason:MemberDetail'] :: MemberDetail -> Maybe MemberDisabledReason

-- | The member account data volume as a percentage of the maximum allowed
--   data volume. 0 indicates 0 percent, and 100 indicates 100 percent.
--   
--   Note that this is not the percentage of the behavior graph data
--   volume.
--   
--   For example, the data volume for the behavior graph is 80 GB per day.
--   The maximum data volume is 160 GB per day. If the data volume for the
--   member account is 40 GB per day, then
--   <tt>PercentOfGraphUtilization</tt> is 25. It represents 25% of the
--   maximum allowed data volume.
[$sel:percentOfGraphUtilization:MemberDetail'] :: MemberDetail -> Maybe Double

-- | The AWS account root user email address for the member account.
[$sel:emailAddress:MemberDetail'] :: MemberDetail -> Maybe Text

-- | The data and time when the member account data volume was last
--   updated.
[$sel:volumeUsageUpdatedTime:MemberDetail'] :: MemberDetail -> Maybe POSIX

-- | The date and time that the member account was last updated. The value
--   is in milliseconds since the epoch.
[$sel:updatedTime:MemberDetail'] :: MemberDetail -> Maybe POSIX

-- | The data volume in bytes per day for the member account.
[$sel:volumeUsageInBytes:MemberDetail'] :: MemberDetail -> Maybe Integer

-- | Create a value of <a>MemberDetail</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:percentOfGraphUtilizationUpdatedTime:MemberDetail'</a>,
--   <a>memberDetail_percentOfGraphUtilizationUpdatedTime</a> - The date
--   and time when the graph utilization percentage was last updated.
--   
--   <a>$sel:status:MemberDetail'</a>, <a>memberDetail_status</a> - The
--   current membership status of the member account. The status can have
--   one of the following values:
--   
--   <ul>
--   <li><tt>INVITED</tt> - Indicates that the member was sent an
--   invitation but has not yet responded.</li>
--   <li><tt>VERIFICATION_IN_PROGRESS</tt> - Indicates that Detective is
--   verifying that the account identifier and email address provided for
--   the member account match. If they do match, then Detective sends the
--   invitation. If the email address and account identifier don't match,
--   then the member cannot be added to the behavior graph.</li>
--   <li><tt>VERIFICATION_FAILED</tt> - Indicates that the account and
--   email address provided for the member account do not match, and
--   Detective did not send an invitation to the account.</li>
--   <li><tt>ENABLED</tt> - Indicates that the member account accepted the
--   invitation to contribute to the behavior graph.</li>
--   <li><tt>ACCEPTED_BUT_DISABLED</tt> - Indicates that the member account
--   accepted the invitation but is prevented from contributing data to the
--   behavior graph. <tt>DisabledReason</tt> provides the reason why the
--   member account is not enabled.</li>
--   </ul>
--   
--   Member accounts that declined an invitation or that were removed from
--   the behavior graph are not included.
--   
--   <a>$sel:invitedTime:MemberDetail'</a>, <a>memberDetail_invitedTime</a>
--   - The date and time that Detective sent the invitation to the member
--   account. The value is in milliseconds since the epoch.
--   
--   <a>$sel:administratorId:MemberDetail'</a>,
--   <a>memberDetail_administratorId</a> - The AWS account identifier of
--   the administrator account for the behavior graph.
--   
--   <a>$sel:graphArn:MemberDetail'</a>, <a>memberDetail_graphArn</a> - The
--   ARN of the behavior graph that the member account was invited to.
--   
--   <a>$sel:masterId:MemberDetail'</a>, <a>memberDetail_masterId</a> - The
--   AWS account identifier of the administrator account for the behavior
--   graph.
--   
--   <a>$sel:accountId:MemberDetail'</a>, <a>memberDetail_accountId</a> -
--   The AWS account identifier for the member account.
--   
--   <a>$sel:disabledReason:MemberDetail'</a>,
--   <a>memberDetail_disabledReason</a> - For member accounts with a status
--   of <tt>ACCEPTED_BUT_DISABLED</tt>, the reason that the member account
--   is not enabled.
--   
--   The reason can have one of the following values:
--   
--   <ul>
--   <li><tt>VOLUME_TOO_HIGH</tt> - Indicates that adding the member
--   account would cause the data volume for the behavior graph to be too
--   high.</li>
--   <li><tt>VOLUME_UNKNOWN</tt> - Indicates that Detective is unable to
--   verify the data volume for the member account. This is usually because
--   the member account is not enrolled in Amazon GuardDuty.</li>
--   </ul>
--   
--   <a>$sel:percentOfGraphUtilization:MemberDetail'</a>,
--   <a>memberDetail_percentOfGraphUtilization</a> - The member account
--   data volume as a percentage of the maximum allowed data volume. 0
--   indicates 0 percent, and 100 indicates 100 percent.
--   
--   Note that this is not the percentage of the behavior graph data
--   volume.
--   
--   For example, the data volume for the behavior graph is 80 GB per day.
--   The maximum data volume is 160 GB per day. If the data volume for the
--   member account is 40 GB per day, then
--   <tt>PercentOfGraphUtilization</tt> is 25. It represents 25% of the
--   maximum allowed data volume.
--   
--   <a>$sel:emailAddress:MemberDetail'</a>,
--   <a>memberDetail_emailAddress</a> - The AWS account root user email
--   address for the member account.
--   
--   <a>$sel:volumeUsageUpdatedTime:MemberDetail'</a>,
--   <a>memberDetail_volumeUsageUpdatedTime</a> - The data and time when
--   the member account data volume was last updated.
--   
--   <a>$sel:updatedTime:MemberDetail'</a>, <a>memberDetail_updatedTime</a>
--   - The date and time that the member account was last updated. The
--   value is in milliseconds since the epoch.
--   
--   <a>$sel:volumeUsageInBytes:MemberDetail'</a>,
--   <a>memberDetail_volumeUsageInBytes</a> - The data volume in bytes per
--   day for the member account.
newMemberDetail :: MemberDetail

-- | The date and time when the graph utilization percentage was last
--   updated.
memberDetail_percentOfGraphUtilizationUpdatedTime :: Lens' MemberDetail (Maybe UTCTime)

-- | The current membership status of the member account. The status can
--   have one of the following values:
--   
--   <ul>
--   <li><tt>INVITED</tt> - Indicates that the member was sent an
--   invitation but has not yet responded.</li>
--   <li><tt>VERIFICATION_IN_PROGRESS</tt> - Indicates that Detective is
--   verifying that the account identifier and email address provided for
--   the member account match. If they do match, then Detective sends the
--   invitation. If the email address and account identifier don't match,
--   then the member cannot be added to the behavior graph.</li>
--   <li><tt>VERIFICATION_FAILED</tt> - Indicates that the account and
--   email address provided for the member account do not match, and
--   Detective did not send an invitation to the account.</li>
--   <li><tt>ENABLED</tt> - Indicates that the member account accepted the
--   invitation to contribute to the behavior graph.</li>
--   <li><tt>ACCEPTED_BUT_DISABLED</tt> - Indicates that the member account
--   accepted the invitation but is prevented from contributing data to the
--   behavior graph. <tt>DisabledReason</tt> provides the reason why the
--   member account is not enabled.</li>
--   </ul>
--   
--   Member accounts that declined an invitation or that were removed from
--   the behavior graph are not included.
memberDetail_status :: Lens' MemberDetail (Maybe MemberStatus)

-- | The date and time that Detective sent the invitation to the member
--   account. The value is in milliseconds since the epoch.
memberDetail_invitedTime :: Lens' MemberDetail (Maybe UTCTime)

-- | The AWS account identifier of the administrator account for the
--   behavior graph.
memberDetail_administratorId :: Lens' MemberDetail (Maybe Text)

-- | The ARN of the behavior graph that the member account was invited to.
memberDetail_graphArn :: Lens' MemberDetail (Maybe Text)

-- | The AWS account identifier of the administrator account for the
--   behavior graph.
memberDetail_masterId :: Lens' MemberDetail (Maybe Text)

-- | The AWS account identifier for the member account.
memberDetail_accountId :: Lens' MemberDetail (Maybe Text)

-- | For member accounts with a status of <tt>ACCEPTED_BUT_DISABLED</tt>,
--   the reason that the member account is not enabled.
--   
--   The reason can have one of the following values:
--   
--   <ul>
--   <li><tt>VOLUME_TOO_HIGH</tt> - Indicates that adding the member
--   account would cause the data volume for the behavior graph to be too
--   high.</li>
--   <li><tt>VOLUME_UNKNOWN</tt> - Indicates that Detective is unable to
--   verify the data volume for the member account. This is usually because
--   the member account is not enrolled in Amazon GuardDuty.</li>
--   </ul>
memberDetail_disabledReason :: Lens' MemberDetail (Maybe MemberDisabledReason)

-- | The member account data volume as a percentage of the maximum allowed
--   data volume. 0 indicates 0 percent, and 100 indicates 100 percent.
--   
--   Note that this is not the percentage of the behavior graph data
--   volume.
--   
--   For example, the data volume for the behavior graph is 80 GB per day.
--   The maximum data volume is 160 GB per day. If the data volume for the
--   member account is 40 GB per day, then
--   <tt>PercentOfGraphUtilization</tt> is 25. It represents 25% of the
--   maximum allowed data volume.
memberDetail_percentOfGraphUtilization :: Lens' MemberDetail (Maybe Double)

-- | The AWS account root user email address for the member account.
memberDetail_emailAddress :: Lens' MemberDetail (Maybe Text)

-- | The data and time when the member account data volume was last
--   updated.
memberDetail_volumeUsageUpdatedTime :: Lens' MemberDetail (Maybe UTCTime)

-- | The date and time that the member account was last updated. The value
--   is in milliseconds since the epoch.
memberDetail_updatedTime :: Lens' MemberDetail (Maybe UTCTime)

-- | The data volume in bytes per day for the member account.
memberDetail_volumeUsageInBytes :: Lens' MemberDetail (Maybe Integer)

-- | A member account that was included in a request but for which the
--   request could not be processed.
--   
--   <i>See:</i> <a>newUnprocessedAccount</a> smart constructor.
data UnprocessedAccount
UnprocessedAccount' :: Maybe Text -> Maybe Text -> UnprocessedAccount

-- | The AWS account identifier of the member account that was not
--   processed.
[$sel:accountId:UnprocessedAccount'] :: UnprocessedAccount -> Maybe Text

-- | The reason that the member account request could not be processed.
[$sel:reason:UnprocessedAccount'] :: UnprocessedAccount -> Maybe Text

-- | Create a value of <a>UnprocessedAccount</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:accountId:UnprocessedAccount'</a>,
--   <a>unprocessedAccount_accountId</a> - The AWS account identifier of
--   the member account that was not processed.
--   
--   <a>$sel:reason:UnprocessedAccount'</a>,
--   <a>unprocessedAccount_reason</a> - The reason that the member account
--   request could not be processed.
newUnprocessedAccount :: UnprocessedAccount

-- | The AWS account identifier of the member account that was not
--   processed.
unprocessedAccount_accountId :: Lens' UnprocessedAccount (Maybe Text)

-- | The reason that the member account request could not be processed.
unprocessedAccount_reason :: Lens' UnprocessedAccount (Maybe Text)


-- | Applies tag values to a behavior graph.
module Network.AWS.Detective.TagResource

-- | <i>See:</i> <a>newTagResource</a> smart constructor.
data TagResource
TagResource' :: Text -> HashMap Text Text -> TagResource

-- | The ARN of the behavior graph to assign the tags to.
[$sel:resourceArn:TagResource'] :: TagResource -> Text

-- | The tags to assign to the behavior graph. You can add up to 50 tags.
--   For each tag, you provide the tag key and the tag value. Each tag key
--   can contain up to 128 characters. Each tag value can contain up to 256
--   characters.
[$sel:tags:TagResource'] :: TagResource -> HashMap Text Text

-- | Create a value of <a>TagResource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:TagResource'</a>, <a>tagResource_resourceArn</a> -
--   The ARN of the behavior graph to assign the tags to.
--   
--   <a>$sel:tags:TagResource'</a>, <a>tagResource_tags</a> - The tags to
--   assign to the behavior graph. You can add up to 50 tags. For each tag,
--   you provide the tag key and the tag value. Each tag key can contain up
--   to 128 characters. Each tag value can contain up to 256 characters.
newTagResource :: Text -> TagResource

-- | The ARN of the behavior graph to assign the tags to.
tagResource_resourceArn :: Lens' TagResource Text

-- | The tags to assign to the behavior graph. You can add up to 50 tags.
--   For each tag, you provide the tag key and the tag value. Each tag key
--   can contain up to 128 characters. Each tag value can contain up to 256
--   characters.
tagResource_tags :: Lens' TagResource (HashMap Text Text)

-- | <i>See:</i> <a>newTagResourceResponse</a> smart constructor.
data TagResourceResponse
TagResourceResponse' :: Int -> TagResourceResponse

-- | The response's http status code.
[$sel:httpStatus:TagResourceResponse'] :: TagResourceResponse -> Int

-- | Create a value of <a>TagResourceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:TagResourceResponse'</a>,
--   <a>tagResourceResponse_httpStatus</a> - The response's http status
--   code.
newTagResourceResponse :: Int -> TagResourceResponse

-- | The response's http status code.
tagResourceResponse_httpStatus :: Lens' TagResourceResponse Int
instance GHC.Generics.Generic Network.AWS.Detective.TagResource.TagResource
instance GHC.Show.Show Network.AWS.Detective.TagResource.TagResource
instance GHC.Read.Read Network.AWS.Detective.TagResource.TagResource
instance GHC.Classes.Eq Network.AWS.Detective.TagResource.TagResource
instance GHC.Generics.Generic Network.AWS.Detective.TagResource.TagResourceResponse
instance GHC.Show.Show Network.AWS.Detective.TagResource.TagResourceResponse
instance GHC.Read.Read Network.AWS.Detective.TagResource.TagResourceResponse
instance GHC.Classes.Eq Network.AWS.Detective.TagResource.TagResourceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Detective.TagResource.TagResource
instance Control.DeepSeq.NFData Network.AWS.Detective.TagResource.TagResourceResponse
instance Data.Hashable.Class.Hashable Network.AWS.Detective.TagResource.TagResource
instance Control.DeepSeq.NFData Network.AWS.Detective.TagResource.TagResource
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Detective.TagResource.TagResource
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Detective.TagResource.TagResource
instance Network.AWS.Data.Path.ToPath Network.AWS.Detective.TagResource.TagResource
instance Network.AWS.Data.Query.ToQuery Network.AWS.Detective.TagResource.TagResource


-- | Sends a request to enable data ingest for a member account that has a
--   status of <tt>ACCEPTED_BUT_DISABLED</tt>.
--   
--   For valid member accounts, the status is updated as follows.
--   
--   <ul>
--   <li>If Detective enabled the member account, then the new status is
--   <tt>ENABLED</tt>.</li>
--   <li>If Detective cannot enable the member account, the status remains
--   <tt>ACCEPTED_BUT_DISABLED</tt>.</li>
--   </ul>
module Network.AWS.Detective.StartMonitoringMember

-- | <i>See:</i> <a>newStartMonitoringMember</a> smart constructor.
data StartMonitoringMember
StartMonitoringMember' :: Text -> Text -> StartMonitoringMember

-- | The ARN of the behavior graph.
[$sel:graphArn:StartMonitoringMember'] :: StartMonitoringMember -> Text

-- | The account ID of the member account to try to enable.
--   
--   The account must be an invited member account with a status of
--   <tt>ACCEPTED_BUT_DISABLED</tt>.
[$sel:accountId:StartMonitoringMember'] :: StartMonitoringMember -> Text

-- | Create a value of <a>StartMonitoringMember</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:graphArn:StartMonitoringMember'</a>,
--   <a>startMonitoringMember_graphArn</a> - The ARN of the behavior graph.
--   
--   <a>$sel:accountId:StartMonitoringMember'</a>,
--   <a>startMonitoringMember_accountId</a> - The account ID of the member
--   account to try to enable.
--   
--   The account must be an invited member account with a status of
--   <tt>ACCEPTED_BUT_DISABLED</tt>.
newStartMonitoringMember :: Text -> Text -> StartMonitoringMember

-- | The ARN of the behavior graph.
startMonitoringMember_graphArn :: Lens' StartMonitoringMember Text

-- | The account ID of the member account to try to enable.
--   
--   The account must be an invited member account with a status of
--   <tt>ACCEPTED_BUT_DISABLED</tt>.
startMonitoringMember_accountId :: Lens' StartMonitoringMember Text

-- | <i>See:</i> <a>newStartMonitoringMemberResponse</a> smart constructor.
data StartMonitoringMemberResponse
StartMonitoringMemberResponse' :: StartMonitoringMemberResponse

-- | Create a value of <a>StartMonitoringMemberResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newStartMonitoringMemberResponse :: StartMonitoringMemberResponse
instance GHC.Generics.Generic Network.AWS.Detective.StartMonitoringMember.StartMonitoringMember
instance GHC.Show.Show Network.AWS.Detective.StartMonitoringMember.StartMonitoringMember
instance GHC.Read.Read Network.AWS.Detective.StartMonitoringMember.StartMonitoringMember
instance GHC.Classes.Eq Network.AWS.Detective.StartMonitoringMember.StartMonitoringMember
instance GHC.Generics.Generic Network.AWS.Detective.StartMonitoringMember.StartMonitoringMemberResponse
instance GHC.Show.Show Network.AWS.Detective.StartMonitoringMember.StartMonitoringMemberResponse
instance GHC.Read.Read Network.AWS.Detective.StartMonitoringMember.StartMonitoringMemberResponse
instance GHC.Classes.Eq Network.AWS.Detective.StartMonitoringMember.StartMonitoringMemberResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Detective.StartMonitoringMember.StartMonitoringMember
instance Control.DeepSeq.NFData Network.AWS.Detective.StartMonitoringMember.StartMonitoringMemberResponse
instance Data.Hashable.Class.Hashable Network.AWS.Detective.StartMonitoringMember.StartMonitoringMember
instance Control.DeepSeq.NFData Network.AWS.Detective.StartMonitoringMember.StartMonitoringMember
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Detective.StartMonitoringMember.StartMonitoringMember
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Detective.StartMonitoringMember.StartMonitoringMember
instance Network.AWS.Data.Path.ToPath Network.AWS.Detective.StartMonitoringMember.StartMonitoringMember
instance Network.AWS.Data.Query.ToQuery Network.AWS.Detective.StartMonitoringMember.StartMonitoringMember


-- | Rejects an invitation to contribute the account data to a behavior
--   graph. This operation must be called by a member account that has the
--   <tt>INVITED</tt> status.
module Network.AWS.Detective.RejectInvitation

-- | <i>See:</i> <a>newRejectInvitation</a> smart constructor.
data RejectInvitation
RejectInvitation' :: Text -> RejectInvitation

-- | The ARN of the behavior graph to reject the invitation to.
--   
--   The member account's current member status in the behavior graph must
--   be <tt>INVITED</tt>.
[$sel:graphArn:RejectInvitation'] :: RejectInvitation -> Text

-- | Create a value of <a>RejectInvitation</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:graphArn:RejectInvitation'</a>,
--   <a>rejectInvitation_graphArn</a> - The ARN of the behavior graph to
--   reject the invitation to.
--   
--   The member account's current member status in the behavior graph must
--   be <tt>INVITED</tt>.
newRejectInvitation :: Text -> RejectInvitation

-- | The ARN of the behavior graph to reject the invitation to.
--   
--   The member account's current member status in the behavior graph must
--   be <tt>INVITED</tt>.
rejectInvitation_graphArn :: Lens' RejectInvitation Text

-- | <i>See:</i> <a>newRejectInvitationResponse</a> smart constructor.
data RejectInvitationResponse
RejectInvitationResponse' :: RejectInvitationResponse

-- | Create a value of <a>RejectInvitationResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newRejectInvitationResponse :: RejectInvitationResponse
instance GHC.Generics.Generic Network.AWS.Detective.RejectInvitation.RejectInvitation
instance GHC.Show.Show Network.AWS.Detective.RejectInvitation.RejectInvitation
instance GHC.Read.Read Network.AWS.Detective.RejectInvitation.RejectInvitation
instance GHC.Classes.Eq Network.AWS.Detective.RejectInvitation.RejectInvitation
instance GHC.Generics.Generic Network.AWS.Detective.RejectInvitation.RejectInvitationResponse
instance GHC.Show.Show Network.AWS.Detective.RejectInvitation.RejectInvitationResponse
instance GHC.Read.Read Network.AWS.Detective.RejectInvitation.RejectInvitationResponse
instance GHC.Classes.Eq Network.AWS.Detective.RejectInvitation.RejectInvitationResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Detective.RejectInvitation.RejectInvitation
instance Control.DeepSeq.NFData Network.AWS.Detective.RejectInvitation.RejectInvitationResponse
instance Data.Hashable.Class.Hashable Network.AWS.Detective.RejectInvitation.RejectInvitation
instance Control.DeepSeq.NFData Network.AWS.Detective.RejectInvitation.RejectInvitation
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Detective.RejectInvitation.RejectInvitation
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Detective.RejectInvitation.RejectInvitation
instance Network.AWS.Data.Path.ToPath Network.AWS.Detective.RejectInvitation.RejectInvitation
instance Network.AWS.Data.Query.ToQuery Network.AWS.Detective.RejectInvitation.RejectInvitation


-- | Returns the tag values that are assigned to a behavior graph.
module Network.AWS.Detective.ListTagsForResource

-- | <i>See:</i> <a>newListTagsForResource</a> smart constructor.
data ListTagsForResource
ListTagsForResource' :: Text -> ListTagsForResource

-- | The ARN of the behavior graph for which to retrieve the tag values.
[$sel:resourceArn:ListTagsForResource'] :: ListTagsForResource -> Text

-- | Create a value of <a>ListTagsForResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:ListTagsForResource'</a>,
--   <a>listTagsForResource_resourceArn</a> - The ARN of the behavior graph
--   for which to retrieve the tag values.
newListTagsForResource :: Text -> ListTagsForResource

-- | The ARN of the behavior graph for which to retrieve the tag values.
listTagsForResource_resourceArn :: Lens' ListTagsForResource Text

-- | <i>See:</i> <a>newListTagsForResourceResponse</a> smart constructor.
data ListTagsForResourceResponse
ListTagsForResourceResponse' :: Maybe (HashMap Text Text) -> Int -> ListTagsForResourceResponse

-- | The tag values that are assigned to the behavior graph. The request
--   returns up to 50 tag values.
[$sel:tags:ListTagsForResourceResponse'] :: ListTagsForResourceResponse -> Maybe (HashMap Text Text)

-- | The response's http status code.
[$sel:httpStatus:ListTagsForResourceResponse'] :: ListTagsForResourceResponse -> Int

-- | Create a value of <a>ListTagsForResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_tags</a> - The tag values that are
--   assigned to the behavior graph. The request returns up to 50 tag
--   values.
--   
--   <a>$sel:httpStatus:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_httpStatus</a> - The response's http
--   status code.
newListTagsForResourceResponse :: Int -> ListTagsForResourceResponse

-- | The tag values that are assigned to the behavior graph. The request
--   returns up to 50 tag values.
listTagsForResourceResponse_tags :: Lens' ListTagsForResourceResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
listTagsForResourceResponse_httpStatus :: Lens' ListTagsForResourceResponse Int
instance GHC.Generics.Generic Network.AWS.Detective.ListTagsForResource.ListTagsForResource
instance GHC.Show.Show Network.AWS.Detective.ListTagsForResource.ListTagsForResource
instance GHC.Read.Read Network.AWS.Detective.ListTagsForResource.ListTagsForResource
instance GHC.Classes.Eq Network.AWS.Detective.ListTagsForResource.ListTagsForResource
instance GHC.Generics.Generic Network.AWS.Detective.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Show.Show Network.AWS.Detective.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Read.Read Network.AWS.Detective.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Classes.Eq Network.AWS.Detective.ListTagsForResource.ListTagsForResourceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Detective.ListTagsForResource.ListTagsForResource
instance Control.DeepSeq.NFData Network.AWS.Detective.ListTagsForResource.ListTagsForResourceResponse
instance Data.Hashable.Class.Hashable Network.AWS.Detective.ListTagsForResource.ListTagsForResource
instance Control.DeepSeq.NFData Network.AWS.Detective.ListTagsForResource.ListTagsForResource
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Detective.ListTagsForResource.ListTagsForResource
instance Network.AWS.Data.Path.ToPath Network.AWS.Detective.ListTagsForResource.ListTagsForResource
instance Network.AWS.Data.Query.ToQuery Network.AWS.Detective.ListTagsForResource.ListTagsForResource


-- | Retrieves the list of member accounts for a behavior graph. Does not
--   return member accounts that were removed from the behavior graph.
module Network.AWS.Detective.ListMembers

-- | <i>See:</i> <a>newListMembers</a> smart constructor.
data ListMembers
ListMembers' :: Maybe Text -> Maybe Natural -> Text -> ListMembers

-- | For requests to retrieve the next page of member account results, the
--   pagination token that was returned with the previous page of results.
--   The initial request does not include a pagination token.
[$sel:nextToken:ListMembers'] :: ListMembers -> Maybe Text

-- | The maximum number of member accounts to include in the response. The
--   total must be less than the overall limit on the number of results to
--   return, which is currently 200.
[$sel:maxResults:ListMembers'] :: ListMembers -> Maybe Natural

-- | The ARN of the behavior graph for which to retrieve the list of member
--   accounts.
[$sel:graphArn:ListMembers'] :: ListMembers -> Text

-- | Create a value of <a>ListMembers</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListMembers'</a>, <a>listMembers_nextToken</a> - For
--   requests to retrieve the next page of member account results, the
--   pagination token that was returned with the previous page of results.
--   The initial request does not include a pagination token.
--   
--   <a>$sel:maxResults:ListMembers'</a>, <a>listMembers_maxResults</a> -
--   The maximum number of member accounts to include in the response. The
--   total must be less than the overall limit on the number of results to
--   return, which is currently 200.
--   
--   <a>$sel:graphArn:ListMembers'</a>, <a>listMembers_graphArn</a> - The
--   ARN of the behavior graph for which to retrieve the list of member
--   accounts.
newListMembers :: Text -> ListMembers

-- | For requests to retrieve the next page of member account results, the
--   pagination token that was returned with the previous page of results.
--   The initial request does not include a pagination token.
listMembers_nextToken :: Lens' ListMembers (Maybe Text)

-- | The maximum number of member accounts to include in the response. The
--   total must be less than the overall limit on the number of results to
--   return, which is currently 200.
listMembers_maxResults :: Lens' ListMembers (Maybe Natural)

-- | The ARN of the behavior graph for which to retrieve the list of member
--   accounts.
listMembers_graphArn :: Lens' ListMembers Text

-- | <i>See:</i> <a>newListMembersResponse</a> smart constructor.
data ListMembersResponse
ListMembersResponse' :: Maybe [MemberDetail] -> Maybe Text -> Int -> ListMembersResponse

-- | The list of member accounts in the behavior graph.
--   
--   The results include member accounts that did not pass verification and
--   member accounts that have not yet accepted the invitation to the
--   behavior graph. The results do not include member accounts that were
--   removed from the behavior graph.
[$sel:memberDetails:ListMembersResponse'] :: ListMembersResponse -> Maybe [MemberDetail]

-- | If there are more member accounts remaining in the results, then this
--   is the pagination token to use to request the next page of member
--   accounts.
[$sel:nextToken:ListMembersResponse'] :: ListMembersResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListMembersResponse'] :: ListMembersResponse -> Int

-- | Create a value of <a>ListMembersResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:memberDetails:ListMembersResponse'</a>,
--   <a>listMembersResponse_memberDetails</a> - The list of member accounts
--   in the behavior graph.
--   
--   The results include member accounts that did not pass verification and
--   member accounts that have not yet accepted the invitation to the
--   behavior graph. The results do not include member accounts that were
--   removed from the behavior graph.
--   
--   <a>$sel:nextToken:ListMembers'</a>,
--   <a>listMembersResponse_nextToken</a> - If there are more member
--   accounts remaining in the results, then this is the pagination token
--   to use to request the next page of member accounts.
--   
--   <a>$sel:httpStatus:ListMembersResponse'</a>,
--   <a>listMembersResponse_httpStatus</a> - The response's http status
--   code.
newListMembersResponse :: Int -> ListMembersResponse

-- | The list of member accounts in the behavior graph.
--   
--   The results include member accounts that did not pass verification and
--   member accounts that have not yet accepted the invitation to the
--   behavior graph. The results do not include member accounts that were
--   removed from the behavior graph.
listMembersResponse_memberDetails :: Lens' ListMembersResponse (Maybe [MemberDetail])

-- | If there are more member accounts remaining in the results, then this
--   is the pagination token to use to request the next page of member
--   accounts.
listMembersResponse_nextToken :: Lens' ListMembersResponse (Maybe Text)

-- | The response's http status code.
listMembersResponse_httpStatus :: Lens' ListMembersResponse Int
instance GHC.Generics.Generic Network.AWS.Detective.ListMembers.ListMembers
instance GHC.Show.Show Network.AWS.Detective.ListMembers.ListMembers
instance GHC.Read.Read Network.AWS.Detective.ListMembers.ListMembers
instance GHC.Classes.Eq Network.AWS.Detective.ListMembers.ListMembers
instance GHC.Generics.Generic Network.AWS.Detective.ListMembers.ListMembersResponse
instance GHC.Show.Show Network.AWS.Detective.ListMembers.ListMembersResponse
instance GHC.Read.Read Network.AWS.Detective.ListMembers.ListMembersResponse
instance GHC.Classes.Eq Network.AWS.Detective.ListMembers.ListMembersResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Detective.ListMembers.ListMembers
instance Control.DeepSeq.NFData Network.AWS.Detective.ListMembers.ListMembersResponse
instance Data.Hashable.Class.Hashable Network.AWS.Detective.ListMembers.ListMembers
instance Control.DeepSeq.NFData Network.AWS.Detective.ListMembers.ListMembers
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Detective.ListMembers.ListMembers
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Detective.ListMembers.ListMembers
instance Network.AWS.Data.Path.ToPath Network.AWS.Detective.ListMembers.ListMembers
instance Network.AWS.Data.Query.ToQuery Network.AWS.Detective.ListMembers.ListMembers


-- | Retrieves the list of open and accepted behavior graph invitations for
--   the member account. This operation can only be called by a member
--   account.
--   
--   Open invitations are invitations that the member account has not
--   responded to.
--   
--   The results do not include behavior graphs for which the member
--   account declined the invitation. The results also do not include
--   behavior graphs that the member account resigned from or was removed
--   from.
module Network.AWS.Detective.ListInvitations

-- | <i>See:</i> <a>newListInvitations</a> smart constructor.
data ListInvitations
ListInvitations' :: Maybe Text -> Maybe Natural -> ListInvitations

-- | For requests to retrieve the next page of results, the pagination
--   token that was returned with the previous page of results. The initial
--   request does not include a pagination token.
[$sel:nextToken:ListInvitations'] :: ListInvitations -> Maybe Text

-- | The maximum number of behavior graph invitations to return in the
--   response. The total must be less than the overall limit on the number
--   of results to return, which is currently 200.
[$sel:maxResults:ListInvitations'] :: ListInvitations -> Maybe Natural

-- | Create a value of <a>ListInvitations</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListInvitations'</a>,
--   <a>listInvitations_nextToken</a> - For requests to retrieve the next
--   page of results, the pagination token that was returned with the
--   previous page of results. The initial request does not include a
--   pagination token.
--   
--   <a>$sel:maxResults:ListInvitations'</a>,
--   <a>listInvitations_maxResults</a> - The maximum number of behavior
--   graph invitations to return in the response. The total must be less
--   than the overall limit on the number of results to return, which is
--   currently 200.
newListInvitations :: ListInvitations

-- | For requests to retrieve the next page of results, the pagination
--   token that was returned with the previous page of results. The initial
--   request does not include a pagination token.
listInvitations_nextToken :: Lens' ListInvitations (Maybe Text)

-- | The maximum number of behavior graph invitations to return in the
--   response. The total must be less than the overall limit on the number
--   of results to return, which is currently 200.
listInvitations_maxResults :: Lens' ListInvitations (Maybe Natural)

-- | <i>See:</i> <a>newListInvitationsResponse</a> smart constructor.
data ListInvitationsResponse
ListInvitationsResponse' :: Maybe [MemberDetail] -> Maybe Text -> Int -> ListInvitationsResponse

-- | The list of behavior graphs for which the member account has open or
--   accepted invitations.
[$sel:invitations:ListInvitationsResponse'] :: ListInvitationsResponse -> Maybe [MemberDetail]

-- | If there are more behavior graphs remaining in the results, then this
--   is the pagination token to use to request the next page of behavior
--   graphs.
[$sel:nextToken:ListInvitationsResponse'] :: ListInvitationsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListInvitationsResponse'] :: ListInvitationsResponse -> Int

-- | Create a value of <a>ListInvitationsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:invitations:ListInvitationsResponse'</a>,
--   <a>listInvitationsResponse_invitations</a> - The list of behavior
--   graphs for which the member account has open or accepted invitations.
--   
--   <a>$sel:nextToken:ListInvitations'</a>,
--   <a>listInvitationsResponse_nextToken</a> - If there are more behavior
--   graphs remaining in the results, then this is the pagination token to
--   use to request the next page of behavior graphs.
--   
--   <a>$sel:httpStatus:ListInvitationsResponse'</a>,
--   <a>listInvitationsResponse_httpStatus</a> - The response's http status
--   code.
newListInvitationsResponse :: Int -> ListInvitationsResponse

-- | The list of behavior graphs for which the member account has open or
--   accepted invitations.
listInvitationsResponse_invitations :: Lens' ListInvitationsResponse (Maybe [MemberDetail])

-- | If there are more behavior graphs remaining in the results, then this
--   is the pagination token to use to request the next page of behavior
--   graphs.
listInvitationsResponse_nextToken :: Lens' ListInvitationsResponse (Maybe Text)

-- | The response's http status code.
listInvitationsResponse_httpStatus :: Lens' ListInvitationsResponse Int
instance GHC.Generics.Generic Network.AWS.Detective.ListInvitations.ListInvitations
instance GHC.Show.Show Network.AWS.Detective.ListInvitations.ListInvitations
instance GHC.Read.Read Network.AWS.Detective.ListInvitations.ListInvitations
instance GHC.Classes.Eq Network.AWS.Detective.ListInvitations.ListInvitations
instance GHC.Generics.Generic Network.AWS.Detective.ListInvitations.ListInvitationsResponse
instance GHC.Show.Show Network.AWS.Detective.ListInvitations.ListInvitationsResponse
instance GHC.Read.Read Network.AWS.Detective.ListInvitations.ListInvitationsResponse
instance GHC.Classes.Eq Network.AWS.Detective.ListInvitations.ListInvitationsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Detective.ListInvitations.ListInvitations
instance Control.DeepSeq.NFData Network.AWS.Detective.ListInvitations.ListInvitationsResponse
instance Data.Hashable.Class.Hashable Network.AWS.Detective.ListInvitations.ListInvitations
instance Control.DeepSeq.NFData Network.AWS.Detective.ListInvitations.ListInvitations
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Detective.ListInvitations.ListInvitations
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Detective.ListInvitations.ListInvitations
instance Network.AWS.Data.Path.ToPath Network.AWS.Detective.ListInvitations.ListInvitations
instance Network.AWS.Data.Query.ToQuery Network.AWS.Detective.ListInvitations.ListInvitations


-- | Returns the list of behavior graphs that the calling account is an
--   administrator account of. This operation can only be called by an
--   administrator account.
--   
--   Because an account can currently only be the administrator of one
--   behavior graph within a Region, the results always contain a single
--   behavior graph.
module Network.AWS.Detective.ListGraphs

-- | <i>See:</i> <a>newListGraphs</a> smart constructor.
data ListGraphs
ListGraphs' :: Maybe Text -> Maybe Natural -> ListGraphs

-- | For requests to get the next page of results, the pagination token
--   that was returned with the previous set of results. The initial
--   request does not include a pagination token.
[$sel:nextToken:ListGraphs'] :: ListGraphs -> Maybe Text

-- | The maximum number of graphs to return at a time. The total must be
--   less than the overall limit on the number of results to return, which
--   is currently 200.
[$sel:maxResults:ListGraphs'] :: ListGraphs -> Maybe Natural

-- | Create a value of <a>ListGraphs</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListGraphs'</a>, <a>listGraphs_nextToken</a> - For
--   requests to get the next page of results, the pagination token that
--   was returned with the previous set of results. The initial request
--   does not include a pagination token.
--   
--   <a>$sel:maxResults:ListGraphs'</a>, <a>listGraphs_maxResults</a> - The
--   maximum number of graphs to return at a time. The total must be less
--   than the overall limit on the number of results to return, which is
--   currently 200.
newListGraphs :: ListGraphs

-- | For requests to get the next page of results, the pagination token
--   that was returned with the previous set of results. The initial
--   request does not include a pagination token.
listGraphs_nextToken :: Lens' ListGraphs (Maybe Text)

-- | The maximum number of graphs to return at a time. The total must be
--   less than the overall limit on the number of results to return, which
--   is currently 200.
listGraphs_maxResults :: Lens' ListGraphs (Maybe Natural)

-- | <i>See:</i> <a>newListGraphsResponse</a> smart constructor.
data ListGraphsResponse
ListGraphsResponse' :: Maybe Text -> Maybe [Graph] -> Int -> ListGraphsResponse

-- | If there are more behavior graphs remaining in the results, then this
--   is the pagination token to use to request the next page of behavior
--   graphs.
[$sel:nextToken:ListGraphsResponse'] :: ListGraphsResponse -> Maybe Text

-- | A list of behavior graphs that the account is an administrator account
--   for.
[$sel:graphList:ListGraphsResponse'] :: ListGraphsResponse -> Maybe [Graph]

-- | The response's http status code.
[$sel:httpStatus:ListGraphsResponse'] :: ListGraphsResponse -> Int

-- | Create a value of <a>ListGraphsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListGraphs'</a>, <a>listGraphsResponse_nextToken</a>
--   - If there are more behavior graphs remaining in the results, then
--   this is the pagination token to use to request the next page of
--   behavior graphs.
--   
--   <a>$sel:graphList:ListGraphsResponse'</a>,
--   <a>listGraphsResponse_graphList</a> - A list of behavior graphs that
--   the account is an administrator account for.
--   
--   <a>$sel:httpStatus:ListGraphsResponse'</a>,
--   <a>listGraphsResponse_httpStatus</a> - The response's http status
--   code.
newListGraphsResponse :: Int -> ListGraphsResponse

-- | If there are more behavior graphs remaining in the results, then this
--   is the pagination token to use to request the next page of behavior
--   graphs.
listGraphsResponse_nextToken :: Lens' ListGraphsResponse (Maybe Text)

-- | A list of behavior graphs that the account is an administrator account
--   for.
listGraphsResponse_graphList :: Lens' ListGraphsResponse (Maybe [Graph])

-- | The response's http status code.
listGraphsResponse_httpStatus :: Lens' ListGraphsResponse Int
instance GHC.Generics.Generic Network.AWS.Detective.ListGraphs.ListGraphs
instance GHC.Show.Show Network.AWS.Detective.ListGraphs.ListGraphs
instance GHC.Read.Read Network.AWS.Detective.ListGraphs.ListGraphs
instance GHC.Classes.Eq Network.AWS.Detective.ListGraphs.ListGraphs
instance GHC.Generics.Generic Network.AWS.Detective.ListGraphs.ListGraphsResponse
instance GHC.Show.Show Network.AWS.Detective.ListGraphs.ListGraphsResponse
instance GHC.Read.Read Network.AWS.Detective.ListGraphs.ListGraphsResponse
instance GHC.Classes.Eq Network.AWS.Detective.ListGraphs.ListGraphsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Detective.ListGraphs.ListGraphs
instance Control.DeepSeq.NFData Network.AWS.Detective.ListGraphs.ListGraphsResponse
instance Data.Hashable.Class.Hashable Network.AWS.Detective.ListGraphs.ListGraphs
instance Control.DeepSeq.NFData Network.AWS.Detective.ListGraphs.ListGraphs
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Detective.ListGraphs.ListGraphs
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Detective.ListGraphs.ListGraphs
instance Network.AWS.Data.Path.ToPath Network.AWS.Detective.ListGraphs.ListGraphs
instance Network.AWS.Data.Query.ToQuery Network.AWS.Detective.ListGraphs.ListGraphs


-- | Returns the membership details for specified member accounts for a
--   behavior graph.
module Network.AWS.Detective.GetMembers

-- | <i>See:</i> <a>newGetMembers</a> smart constructor.
data GetMembers
GetMembers' :: Text -> NonEmpty Text -> GetMembers

-- | The ARN of the behavior graph for which to request the member details.
[$sel:graphArn:GetMembers'] :: GetMembers -> Text

-- | The list of AWS account identifiers for the member account for which
--   to return member details. You can request details for up to 50 member
--   accounts at a time.
--   
--   You cannot use <tt>GetMembers</tt> to retrieve information about
--   member accounts that were removed from the behavior graph.
[$sel:accountIds:GetMembers'] :: GetMembers -> NonEmpty Text

-- | Create a value of <a>GetMembers</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:graphArn:GetMembers'</a>, <a>getMembers_graphArn</a> - The ARN
--   of the behavior graph for which to request the member details.
--   
--   <a>$sel:accountIds:GetMembers'</a>, <a>getMembers_accountIds</a> - The
--   list of AWS account identifiers for the member account for which to
--   return member details. You can request details for up to 50 member
--   accounts at a time.
--   
--   You cannot use <tt>GetMembers</tt> to retrieve information about
--   member accounts that were removed from the behavior graph.
newGetMembers :: Text -> NonEmpty Text -> GetMembers

-- | The ARN of the behavior graph for which to request the member details.
getMembers_graphArn :: Lens' GetMembers Text

-- | The list of AWS account identifiers for the member account for which
--   to return member details. You can request details for up to 50 member
--   accounts at a time.
--   
--   You cannot use <tt>GetMembers</tt> to retrieve information about
--   member accounts that were removed from the behavior graph.
getMembers_accountIds :: Lens' GetMembers (NonEmpty Text)

-- | <i>See:</i> <a>newGetMembersResponse</a> smart constructor.
data GetMembersResponse
GetMembersResponse' :: Maybe [MemberDetail] -> Maybe [UnprocessedAccount] -> Int -> GetMembersResponse

-- | The member account details that Detective is returning in response to
--   the request.
[$sel:memberDetails:GetMembersResponse'] :: GetMembersResponse -> Maybe [MemberDetail]

-- | The requested member accounts for which Detective was unable to return
--   member details.
--   
--   For each account, provides the reason why the request could not be
--   processed.
[$sel:unprocessedAccounts:GetMembersResponse'] :: GetMembersResponse -> Maybe [UnprocessedAccount]

-- | The response's http status code.
[$sel:httpStatus:GetMembersResponse'] :: GetMembersResponse -> Int

-- | Create a value of <a>GetMembersResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:memberDetails:GetMembersResponse'</a>,
--   <a>getMembersResponse_memberDetails</a> - The member account details
--   that Detective is returning in response to the request.
--   
--   <a>$sel:unprocessedAccounts:GetMembersResponse'</a>,
--   <a>getMembersResponse_unprocessedAccounts</a> - The requested member
--   accounts for which Detective was unable to return member details.
--   
--   For each account, provides the reason why the request could not be
--   processed.
--   
--   <a>$sel:httpStatus:GetMembersResponse'</a>,
--   <a>getMembersResponse_httpStatus</a> - The response's http status
--   code.
newGetMembersResponse :: Int -> GetMembersResponse

-- | The member account details that Detective is returning in response to
--   the request.
getMembersResponse_memberDetails :: Lens' GetMembersResponse (Maybe [MemberDetail])

-- | The requested member accounts for which Detective was unable to return
--   member details.
--   
--   For each account, provides the reason why the request could not be
--   processed.
getMembersResponse_unprocessedAccounts :: Lens' GetMembersResponse (Maybe [UnprocessedAccount])

-- | The response's http status code.
getMembersResponse_httpStatus :: Lens' GetMembersResponse Int
instance GHC.Generics.Generic Network.AWS.Detective.GetMembers.GetMembers
instance GHC.Show.Show Network.AWS.Detective.GetMembers.GetMembers
instance GHC.Read.Read Network.AWS.Detective.GetMembers.GetMembers
instance GHC.Classes.Eq Network.AWS.Detective.GetMembers.GetMembers
instance GHC.Generics.Generic Network.AWS.Detective.GetMembers.GetMembersResponse
instance GHC.Show.Show Network.AWS.Detective.GetMembers.GetMembersResponse
instance GHC.Read.Read Network.AWS.Detective.GetMembers.GetMembersResponse
instance GHC.Classes.Eq Network.AWS.Detective.GetMembers.GetMembersResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Detective.GetMembers.GetMembers
instance Control.DeepSeq.NFData Network.AWS.Detective.GetMembers.GetMembersResponse
instance Data.Hashable.Class.Hashable Network.AWS.Detective.GetMembers.GetMembers
instance Control.DeepSeq.NFData Network.AWS.Detective.GetMembers.GetMembers
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Detective.GetMembers.GetMembers
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Detective.GetMembers.GetMembers
instance Network.AWS.Data.Path.ToPath Network.AWS.Detective.GetMembers.GetMembers
instance Network.AWS.Data.Query.ToQuery Network.AWS.Detective.GetMembers.GetMembers


-- | Removes the member account from the specified behavior graph. This
--   operation can only be called by a member account that has the
--   <tt>ENABLED</tt> status.
module Network.AWS.Detective.DisassociateMembership

-- | <i>See:</i> <a>newDisassociateMembership</a> smart constructor.
data DisassociateMembership
DisassociateMembership' :: Text -> DisassociateMembership

-- | The ARN of the behavior graph to remove the member account from.
--   
--   The member account's member status in the behavior graph must be
--   <tt>ENABLED</tt>.
[$sel:graphArn:DisassociateMembership'] :: DisassociateMembership -> Text

-- | Create a value of <a>DisassociateMembership</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:graphArn:DisassociateMembership'</a>,
--   <a>disassociateMembership_graphArn</a> - The ARN of the behavior graph
--   to remove the member account from.
--   
--   The member account's member status in the behavior graph must be
--   <tt>ENABLED</tt>.
newDisassociateMembership :: Text -> DisassociateMembership

-- | The ARN of the behavior graph to remove the member account from.
--   
--   The member account's member status in the behavior graph must be
--   <tt>ENABLED</tt>.
disassociateMembership_graphArn :: Lens' DisassociateMembership Text

-- | <i>See:</i> <a>newDisassociateMembershipResponse</a> smart
--   constructor.
data DisassociateMembershipResponse
DisassociateMembershipResponse' :: DisassociateMembershipResponse

-- | Create a value of <a>DisassociateMembershipResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDisassociateMembershipResponse :: DisassociateMembershipResponse
instance GHC.Generics.Generic Network.AWS.Detective.DisassociateMembership.DisassociateMembership
instance GHC.Show.Show Network.AWS.Detective.DisassociateMembership.DisassociateMembership
instance GHC.Read.Read Network.AWS.Detective.DisassociateMembership.DisassociateMembership
instance GHC.Classes.Eq Network.AWS.Detective.DisassociateMembership.DisassociateMembership
instance GHC.Generics.Generic Network.AWS.Detective.DisassociateMembership.DisassociateMembershipResponse
instance GHC.Show.Show Network.AWS.Detective.DisassociateMembership.DisassociateMembershipResponse
instance GHC.Read.Read Network.AWS.Detective.DisassociateMembership.DisassociateMembershipResponse
instance GHC.Classes.Eq Network.AWS.Detective.DisassociateMembership.DisassociateMembershipResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Detective.DisassociateMembership.DisassociateMembership
instance Control.DeepSeq.NFData Network.AWS.Detective.DisassociateMembership.DisassociateMembershipResponse
instance Data.Hashable.Class.Hashable Network.AWS.Detective.DisassociateMembership.DisassociateMembership
instance Control.DeepSeq.NFData Network.AWS.Detective.DisassociateMembership.DisassociateMembership
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Detective.DisassociateMembership.DisassociateMembership
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Detective.DisassociateMembership.DisassociateMembership
instance Network.AWS.Data.Path.ToPath Network.AWS.Detective.DisassociateMembership.DisassociateMembership
instance Network.AWS.Data.Query.ToQuery Network.AWS.Detective.DisassociateMembership.DisassociateMembership


-- | Deletes one or more member accounts from the administrator account's
--   behavior graph. This operation can only be called by a Detective
--   administrator account. That account cannot use <tt>DeleteMembers</tt>
--   to delete their own account from the behavior graph. To disable a
--   behavior graph, the administrator account uses the
--   <tt>DeleteGraph</tt> API method.
module Network.AWS.Detective.DeleteMembers

-- | <i>See:</i> <a>newDeleteMembers</a> smart constructor.
data DeleteMembers
DeleteMembers' :: Text -> NonEmpty Text -> DeleteMembers

-- | The ARN of the behavior graph to delete members from.
[$sel:graphArn:DeleteMembers'] :: DeleteMembers -> Text

-- | The list of AWS account identifiers for the member accounts to delete
--   from the behavior graph. You can delete up to 50 member accounts at a
--   time.
[$sel:accountIds:DeleteMembers'] :: DeleteMembers -> NonEmpty Text

-- | Create a value of <a>DeleteMembers</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:graphArn:DeleteMembers'</a>, <a>deleteMembers_graphArn</a> -
--   The ARN of the behavior graph to delete members from.
--   
--   <a>$sel:accountIds:DeleteMembers'</a>, <a>deleteMembers_accountIds</a>
--   - The list of AWS account identifiers for the member accounts to
--   delete from the behavior graph. You can delete up to 50 member
--   accounts at a time.
newDeleteMembers :: Text -> NonEmpty Text -> DeleteMembers

-- | The ARN of the behavior graph to delete members from.
deleteMembers_graphArn :: Lens' DeleteMembers Text

-- | The list of AWS account identifiers for the member accounts to delete
--   from the behavior graph. You can delete up to 50 member accounts at a
--   time.
deleteMembers_accountIds :: Lens' DeleteMembers (NonEmpty Text)

-- | <i>See:</i> <a>newDeleteMembersResponse</a> smart constructor.
data DeleteMembersResponse
DeleteMembersResponse' :: Maybe (NonEmpty Text) -> Maybe [UnprocessedAccount] -> Int -> DeleteMembersResponse

-- | The list of AWS account identifiers for the member accounts that
--   Detective successfully deleted from the behavior graph.
[$sel:accountIds:DeleteMembersResponse'] :: DeleteMembersResponse -> Maybe (NonEmpty Text)

-- | The list of member accounts that Detective was not able to delete from
--   the behavior graph. For each member account, provides the reason that
--   the deletion could not be processed.
[$sel:unprocessedAccounts:DeleteMembersResponse'] :: DeleteMembersResponse -> Maybe [UnprocessedAccount]

-- | The response's http status code.
[$sel:httpStatus:DeleteMembersResponse'] :: DeleteMembersResponse -> Int

-- | Create a value of <a>DeleteMembersResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:accountIds:DeleteMembers'</a>,
--   <a>deleteMembersResponse_accountIds</a> - The list of AWS account
--   identifiers for the member accounts that Detective successfully
--   deleted from the behavior graph.
--   
--   <a>$sel:unprocessedAccounts:DeleteMembersResponse'</a>,
--   <a>deleteMembersResponse_unprocessedAccounts</a> - The list of member
--   accounts that Detective was not able to delete from the behavior
--   graph. For each member account, provides the reason that the deletion
--   could not be processed.
--   
--   <a>$sel:httpStatus:DeleteMembersResponse'</a>,
--   <a>deleteMembersResponse_httpStatus</a> - The response's http status
--   code.
newDeleteMembersResponse :: Int -> DeleteMembersResponse

-- | The list of AWS account identifiers for the member accounts that
--   Detective successfully deleted from the behavior graph.
deleteMembersResponse_accountIds :: Lens' DeleteMembersResponse (Maybe (NonEmpty Text))

-- | The list of member accounts that Detective was not able to delete from
--   the behavior graph. For each member account, provides the reason that
--   the deletion could not be processed.
deleteMembersResponse_unprocessedAccounts :: Lens' DeleteMembersResponse (Maybe [UnprocessedAccount])

-- | The response's http status code.
deleteMembersResponse_httpStatus :: Lens' DeleteMembersResponse Int
instance GHC.Generics.Generic Network.AWS.Detective.DeleteMembers.DeleteMembers
instance GHC.Show.Show Network.AWS.Detective.DeleteMembers.DeleteMembers
instance GHC.Read.Read Network.AWS.Detective.DeleteMembers.DeleteMembers
instance GHC.Classes.Eq Network.AWS.Detective.DeleteMembers.DeleteMembers
instance GHC.Generics.Generic Network.AWS.Detective.DeleteMembers.DeleteMembersResponse
instance GHC.Show.Show Network.AWS.Detective.DeleteMembers.DeleteMembersResponse
instance GHC.Read.Read Network.AWS.Detective.DeleteMembers.DeleteMembersResponse
instance GHC.Classes.Eq Network.AWS.Detective.DeleteMembers.DeleteMembersResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Detective.DeleteMembers.DeleteMembers
instance Control.DeepSeq.NFData Network.AWS.Detective.DeleteMembers.DeleteMembersResponse
instance Data.Hashable.Class.Hashable Network.AWS.Detective.DeleteMembers.DeleteMembers
instance Control.DeepSeq.NFData Network.AWS.Detective.DeleteMembers.DeleteMembers
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Detective.DeleteMembers.DeleteMembers
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Detective.DeleteMembers.DeleteMembers
instance Network.AWS.Data.Path.ToPath Network.AWS.Detective.DeleteMembers.DeleteMembers
instance Network.AWS.Data.Query.ToQuery Network.AWS.Detective.DeleteMembers.DeleteMembers


-- | Disables the specified behavior graph and queues it to be deleted.
--   This operation removes the graph from each member account's list of
--   behavior graphs.
--   
--   <tt>DeleteGraph</tt> can only be called by the administrator account
--   for a behavior graph.
module Network.AWS.Detective.DeleteGraph

-- | <i>See:</i> <a>newDeleteGraph</a> smart constructor.
data DeleteGraph
DeleteGraph' :: Text -> DeleteGraph

-- | The ARN of the behavior graph to disable.
[$sel:graphArn:DeleteGraph'] :: DeleteGraph -> Text

-- | Create a value of <a>DeleteGraph</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:graphArn:DeleteGraph'</a>, <a>deleteGraph_graphArn</a> - The
--   ARN of the behavior graph to disable.
newDeleteGraph :: Text -> DeleteGraph

-- | The ARN of the behavior graph to disable.
deleteGraph_graphArn :: Lens' DeleteGraph Text

-- | <i>See:</i> <a>newDeleteGraphResponse</a> smart constructor.
data DeleteGraphResponse
DeleteGraphResponse' :: DeleteGraphResponse

-- | Create a value of <a>DeleteGraphResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteGraphResponse :: DeleteGraphResponse
instance GHC.Generics.Generic Network.AWS.Detective.DeleteGraph.DeleteGraph
instance GHC.Show.Show Network.AWS.Detective.DeleteGraph.DeleteGraph
instance GHC.Read.Read Network.AWS.Detective.DeleteGraph.DeleteGraph
instance GHC.Classes.Eq Network.AWS.Detective.DeleteGraph.DeleteGraph
instance GHC.Generics.Generic Network.AWS.Detective.DeleteGraph.DeleteGraphResponse
instance GHC.Show.Show Network.AWS.Detective.DeleteGraph.DeleteGraphResponse
instance GHC.Read.Read Network.AWS.Detective.DeleteGraph.DeleteGraphResponse
instance GHC.Classes.Eq Network.AWS.Detective.DeleteGraph.DeleteGraphResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Detective.DeleteGraph.DeleteGraph
instance Control.DeepSeq.NFData Network.AWS.Detective.DeleteGraph.DeleteGraphResponse
instance Data.Hashable.Class.Hashable Network.AWS.Detective.DeleteGraph.DeleteGraph
instance Control.DeepSeq.NFData Network.AWS.Detective.DeleteGraph.DeleteGraph
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Detective.DeleteGraph.DeleteGraph
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Detective.DeleteGraph.DeleteGraph
instance Network.AWS.Data.Path.ToPath Network.AWS.Detective.DeleteGraph.DeleteGraph
instance Network.AWS.Data.Query.ToQuery Network.AWS.Detective.DeleteGraph.DeleteGraph


-- | Sends a request to invite the specified AWS accounts to be member
--   accounts in the behavior graph. This operation can only be called by
--   the administrator account for a behavior graph.
--   
--   <tt>CreateMembers</tt> verifies the accounts and then invites the
--   verified accounts. The administrator can optionally specify to not
--   send invitation emails to the member accounts. This would be used when
--   the administrator manages their member accounts centrally.
--   
--   The request provides the behavior graph ARN and the list of accounts
--   to invite.
--   
--   The response separates the requested accounts into two lists:
--   
--   <ul>
--   <li>The accounts that <tt>CreateMembers</tt> was able to start the
--   verification for. This list includes member accounts that are being
--   verified, that have passed verification and are to be invited, and
--   that have failed verification.</li>
--   <li>The accounts that <tt>CreateMembers</tt> was unable to process.
--   This list includes accounts that were already invited to be member
--   accounts in the behavior graph.</li>
--   </ul>
module Network.AWS.Detective.CreateMembers

-- | <i>See:</i> <a>newCreateMembers</a> smart constructor.
data CreateMembers
CreateMembers' :: Maybe Bool -> Maybe Text -> Text -> NonEmpty Account -> CreateMembers

-- | if set to <tt>true</tt>, then the member accounts do not receive email
--   notifications. By default, this is set to <tt>false</tt>, and the
--   member accounts receive email notifications.
[$sel:disableEmailNotification:CreateMembers'] :: CreateMembers -> Maybe Bool

-- | Customized message text to include in the invitation email message to
--   the invited member accounts.
[$sel:message:CreateMembers'] :: CreateMembers -> Maybe Text

-- | The ARN of the behavior graph to invite the member accounts to
--   contribute their data to.
[$sel:graphArn:CreateMembers'] :: CreateMembers -> Text

-- | The list of AWS accounts to invite to become member accounts in the
--   behavior graph. You can invite up to 50 accounts at a time. For each
--   invited account, the account list contains the account identifier and
--   the AWS account root user email address.
[$sel:accounts:CreateMembers'] :: CreateMembers -> NonEmpty Account

-- | Create a value of <a>CreateMembers</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:disableEmailNotification:CreateMembers'</a>,
--   <a>createMembers_disableEmailNotification</a> - if set to
--   <tt>true</tt>, then the member accounts do not receive email
--   notifications. By default, this is set to <tt>false</tt>, and the
--   member accounts receive email notifications.
--   
--   <a>$sel:message:CreateMembers'</a>, <a>createMembers_message</a> -
--   Customized message text to include in the invitation email message to
--   the invited member accounts.
--   
--   <a>$sel:graphArn:CreateMembers'</a>, <a>createMembers_graphArn</a> -
--   The ARN of the behavior graph to invite the member accounts to
--   contribute their data to.
--   
--   <a>$sel:accounts:CreateMembers'</a>, <a>createMembers_accounts</a> -
--   The list of AWS accounts to invite to become member accounts in the
--   behavior graph. You can invite up to 50 accounts at a time. For each
--   invited account, the account list contains the account identifier and
--   the AWS account root user email address.
newCreateMembers :: Text -> NonEmpty Account -> CreateMembers

-- | if set to <tt>true</tt>, then the member accounts do not receive email
--   notifications. By default, this is set to <tt>false</tt>, and the
--   member accounts receive email notifications.
createMembers_disableEmailNotification :: Lens' CreateMembers (Maybe Bool)

-- | Customized message text to include in the invitation email message to
--   the invited member accounts.
createMembers_message :: Lens' CreateMembers (Maybe Text)

-- | The ARN of the behavior graph to invite the member accounts to
--   contribute their data to.
createMembers_graphArn :: Lens' CreateMembers Text

-- | The list of AWS accounts to invite to become member accounts in the
--   behavior graph. You can invite up to 50 accounts at a time. For each
--   invited account, the account list contains the account identifier and
--   the AWS account root user email address.
createMembers_accounts :: Lens' CreateMembers (NonEmpty Account)

-- | <i>See:</i> <a>newCreateMembersResponse</a> smart constructor.
data CreateMembersResponse
CreateMembersResponse' :: Maybe [MemberDetail] -> Maybe [UnprocessedAccount] -> Int -> CreateMembersResponse

-- | The set of member account invitation requests that Detective was able
--   to process. This includes accounts that are being verified, that
--   failed verification, and that passed verification and are being sent
--   an invitation.
[$sel:members:CreateMembersResponse'] :: CreateMembersResponse -> Maybe [MemberDetail]

-- | The list of accounts for which Detective was unable to process the
--   invitation request. For each account, the list provides the reason why
--   the request could not be processed. The list includes accounts that
--   are already member accounts in the behavior graph.
[$sel:unprocessedAccounts:CreateMembersResponse'] :: CreateMembersResponse -> Maybe [UnprocessedAccount]

-- | The response's http status code.
[$sel:httpStatus:CreateMembersResponse'] :: CreateMembersResponse -> Int

-- | Create a value of <a>CreateMembersResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:members:CreateMembersResponse'</a>,
--   <a>createMembersResponse_members</a> - The set of member account
--   invitation requests that Detective was able to process. This includes
--   accounts that are being verified, that failed verification, and that
--   passed verification and are being sent an invitation.
--   
--   <a>$sel:unprocessedAccounts:CreateMembersResponse'</a>,
--   <a>createMembersResponse_unprocessedAccounts</a> - The list of
--   accounts for which Detective was unable to process the invitation
--   request. For each account, the list provides the reason why the
--   request could not be processed. The list includes accounts that are
--   already member accounts in the behavior graph.
--   
--   <a>$sel:httpStatus:CreateMembersResponse'</a>,
--   <a>createMembersResponse_httpStatus</a> - The response's http status
--   code.
newCreateMembersResponse :: Int -> CreateMembersResponse

-- | The set of member account invitation requests that Detective was able
--   to process. This includes accounts that are being verified, that
--   failed verification, and that passed verification and are being sent
--   an invitation.
createMembersResponse_members :: Lens' CreateMembersResponse (Maybe [MemberDetail])

-- | The list of accounts for which Detective was unable to process the
--   invitation request. For each account, the list provides the reason why
--   the request could not be processed. The list includes accounts that
--   are already member accounts in the behavior graph.
createMembersResponse_unprocessedAccounts :: Lens' CreateMembersResponse (Maybe [UnprocessedAccount])

-- | The response's http status code.
createMembersResponse_httpStatus :: Lens' CreateMembersResponse Int
instance GHC.Generics.Generic Network.AWS.Detective.CreateMembers.CreateMembers
instance GHC.Show.Show Network.AWS.Detective.CreateMembers.CreateMembers
instance GHC.Read.Read Network.AWS.Detective.CreateMembers.CreateMembers
instance GHC.Classes.Eq Network.AWS.Detective.CreateMembers.CreateMembers
instance GHC.Generics.Generic Network.AWS.Detective.CreateMembers.CreateMembersResponse
instance GHC.Show.Show Network.AWS.Detective.CreateMembers.CreateMembersResponse
instance GHC.Read.Read Network.AWS.Detective.CreateMembers.CreateMembersResponse
instance GHC.Classes.Eq Network.AWS.Detective.CreateMembers.CreateMembersResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Detective.CreateMembers.CreateMembers
instance Control.DeepSeq.NFData Network.AWS.Detective.CreateMembers.CreateMembersResponse
instance Data.Hashable.Class.Hashable Network.AWS.Detective.CreateMembers.CreateMembers
instance Control.DeepSeq.NFData Network.AWS.Detective.CreateMembers.CreateMembers
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Detective.CreateMembers.CreateMembers
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Detective.CreateMembers.CreateMembers
instance Network.AWS.Data.Path.ToPath Network.AWS.Detective.CreateMembers.CreateMembers
instance Network.AWS.Data.Query.ToQuery Network.AWS.Detective.CreateMembers.CreateMembers


-- | Creates a new behavior graph for the calling account, and sets that
--   account as the administrator account. This operation is called by the
--   account that is enabling Detective.
--   
--   Before you try to enable Detective, make sure that your account has
--   been enrolled in Amazon GuardDuty for at least 48 hours. If you do not
--   meet this requirement, you cannot enable Detective. If you do meet the
--   GuardDuty prerequisite, then when you make the request to enable
--   Detective, it checks whether your data volume is within the Detective
--   quota. If it exceeds the quota, then you cannot enable Detective.
--   
--   The operation also enables Detective for the calling account in the
--   currently selected Region. It returns the ARN of the new behavior
--   graph.
--   
--   <tt>CreateGraph</tt> triggers a process to create the corresponding
--   data tables for the new behavior graph.
--   
--   An account can only be the administrator account for one behavior
--   graph within a Region. If the same account calls <tt>CreateGraph</tt>
--   with the same administrator account, it always returns the same
--   behavior graph ARN. It does not create a new behavior graph.
module Network.AWS.Detective.CreateGraph

-- | <i>See:</i> <a>newCreateGraph</a> smart constructor.
data CreateGraph
CreateGraph' :: Maybe (HashMap Text Text) -> CreateGraph

-- | The tags to assign to the new behavior graph. You can add up to 50
--   tags. For each tag, you provide the tag key and the tag value. Each
--   tag key can contain up to 128 characters. Each tag value can contain
--   up to 256 characters.
[$sel:tags:CreateGraph'] :: CreateGraph -> Maybe (HashMap Text Text)

-- | Create a value of <a>CreateGraph</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:CreateGraph'</a>, <a>createGraph_tags</a> - The tags to
--   assign to the new behavior graph. You can add up to 50 tags. For each
--   tag, you provide the tag key and the tag value. Each tag key can
--   contain up to 128 characters. Each tag value can contain up to 256
--   characters.
newCreateGraph :: CreateGraph

-- | The tags to assign to the new behavior graph. You can add up to 50
--   tags. For each tag, you provide the tag key and the tag value. Each
--   tag key can contain up to 128 characters. Each tag value can contain
--   up to 256 characters.
createGraph_tags :: Lens' CreateGraph (Maybe (HashMap Text Text))

-- | <i>See:</i> <a>newCreateGraphResponse</a> smart constructor.
data CreateGraphResponse
CreateGraphResponse' :: Maybe Text -> Int -> CreateGraphResponse

-- | The ARN of the new behavior graph.
[$sel:graphArn:CreateGraphResponse'] :: CreateGraphResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:CreateGraphResponse'] :: CreateGraphResponse -> Int

-- | Create a value of <a>CreateGraphResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:graphArn:CreateGraphResponse'</a>,
--   <a>createGraphResponse_graphArn</a> - The ARN of the new behavior
--   graph.
--   
--   <a>$sel:httpStatus:CreateGraphResponse'</a>,
--   <a>createGraphResponse_httpStatus</a> - The response's http status
--   code.
newCreateGraphResponse :: Int -> CreateGraphResponse

-- | The ARN of the new behavior graph.
createGraphResponse_graphArn :: Lens' CreateGraphResponse (Maybe Text)

-- | The response's http status code.
createGraphResponse_httpStatus :: Lens' CreateGraphResponse Int
instance GHC.Generics.Generic Network.AWS.Detective.CreateGraph.CreateGraph
instance GHC.Show.Show Network.AWS.Detective.CreateGraph.CreateGraph
instance GHC.Read.Read Network.AWS.Detective.CreateGraph.CreateGraph
instance GHC.Classes.Eq Network.AWS.Detective.CreateGraph.CreateGraph
instance GHC.Generics.Generic Network.AWS.Detective.CreateGraph.CreateGraphResponse
instance GHC.Show.Show Network.AWS.Detective.CreateGraph.CreateGraphResponse
instance GHC.Read.Read Network.AWS.Detective.CreateGraph.CreateGraphResponse
instance GHC.Classes.Eq Network.AWS.Detective.CreateGraph.CreateGraphResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Detective.CreateGraph.CreateGraph
instance Control.DeepSeq.NFData Network.AWS.Detective.CreateGraph.CreateGraphResponse
instance Data.Hashable.Class.Hashable Network.AWS.Detective.CreateGraph.CreateGraph
instance Control.DeepSeq.NFData Network.AWS.Detective.CreateGraph.CreateGraph
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Detective.CreateGraph.CreateGraph
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Detective.CreateGraph.CreateGraph
instance Network.AWS.Data.Path.ToPath Network.AWS.Detective.CreateGraph.CreateGraph
instance Network.AWS.Data.Query.ToQuery Network.AWS.Detective.CreateGraph.CreateGraph


-- | Accepts an invitation for the member account to contribute data to a
--   behavior graph. This operation can only be called by an invited member
--   account.
--   
--   The request provides the ARN of behavior graph.
--   
--   The member account status in the graph must be <tt>INVITED</tt>.
module Network.AWS.Detective.AcceptInvitation

-- | <i>See:</i> <a>newAcceptInvitation</a> smart constructor.
data AcceptInvitation
AcceptInvitation' :: Text -> AcceptInvitation

-- | The ARN of the behavior graph that the member account is accepting the
--   invitation for.
--   
--   The member account status in the behavior graph must be
--   <tt>INVITED</tt>.
[$sel:graphArn:AcceptInvitation'] :: AcceptInvitation -> Text

-- | Create a value of <a>AcceptInvitation</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:graphArn:AcceptInvitation'</a>,
--   <a>acceptInvitation_graphArn</a> - The ARN of the behavior graph that
--   the member account is accepting the invitation for.
--   
--   The member account status in the behavior graph must be
--   <tt>INVITED</tt>.
newAcceptInvitation :: Text -> AcceptInvitation

-- | The ARN of the behavior graph that the member account is accepting the
--   invitation for.
--   
--   The member account status in the behavior graph must be
--   <tt>INVITED</tt>.
acceptInvitation_graphArn :: Lens' AcceptInvitation Text

-- | <i>See:</i> <a>newAcceptInvitationResponse</a> smart constructor.
data AcceptInvitationResponse
AcceptInvitationResponse' :: AcceptInvitationResponse

-- | Create a value of <a>AcceptInvitationResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newAcceptInvitationResponse :: AcceptInvitationResponse
instance GHC.Generics.Generic Network.AWS.Detective.AcceptInvitation.AcceptInvitation
instance GHC.Show.Show Network.AWS.Detective.AcceptInvitation.AcceptInvitation
instance GHC.Read.Read Network.AWS.Detective.AcceptInvitation.AcceptInvitation
instance GHC.Classes.Eq Network.AWS.Detective.AcceptInvitation.AcceptInvitation
instance GHC.Generics.Generic Network.AWS.Detective.AcceptInvitation.AcceptInvitationResponse
instance GHC.Show.Show Network.AWS.Detective.AcceptInvitation.AcceptInvitationResponse
instance GHC.Read.Read Network.AWS.Detective.AcceptInvitation.AcceptInvitationResponse
instance GHC.Classes.Eq Network.AWS.Detective.AcceptInvitation.AcceptInvitationResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Detective.AcceptInvitation.AcceptInvitation
instance Control.DeepSeq.NFData Network.AWS.Detective.AcceptInvitation.AcceptInvitationResponse
instance Data.Hashable.Class.Hashable Network.AWS.Detective.AcceptInvitation.AcceptInvitation
instance Control.DeepSeq.NFData Network.AWS.Detective.AcceptInvitation.AcceptInvitation
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Detective.AcceptInvitation.AcceptInvitation
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Detective.AcceptInvitation.AcceptInvitation
instance Network.AWS.Data.Path.ToPath Network.AWS.Detective.AcceptInvitation.AcceptInvitation
instance Network.AWS.Data.Query.ToQuery Network.AWS.Detective.AcceptInvitation.AcceptInvitation


-- | Removes tags from a behavior graph.
module Network.AWS.Detective.UntagResource

-- | <i>See:</i> <a>newUntagResource</a> smart constructor.
data UntagResource
UntagResource' :: Text -> NonEmpty Text -> UntagResource

-- | The ARN of the behavior graph to remove the tags from.
[$sel:resourceArn:UntagResource'] :: UntagResource -> Text

-- | The tag keys of the tags to remove from the behavior graph. You can
--   remove up to 50 tags at a time.
[$sel:tagKeys:UntagResource'] :: UntagResource -> NonEmpty Text

-- | Create a value of <a>UntagResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:UntagResource'</a>,
--   <a>untagResource_resourceArn</a> - The ARN of the behavior graph to
--   remove the tags from.
--   
--   <a>$sel:tagKeys:UntagResource'</a>, <a>untagResource_tagKeys</a> - The
--   tag keys of the tags to remove from the behavior graph. You can remove
--   up to 50 tags at a time.
newUntagResource :: Text -> NonEmpty Text -> UntagResource

-- | The ARN of the behavior graph to remove the tags from.
untagResource_resourceArn :: Lens' UntagResource Text

-- | The tag keys of the tags to remove from the behavior graph. You can
--   remove up to 50 tags at a time.
untagResource_tagKeys :: Lens' UntagResource (NonEmpty Text)

-- | <i>See:</i> <a>newUntagResourceResponse</a> smart constructor.
data UntagResourceResponse
UntagResourceResponse' :: Int -> UntagResourceResponse

-- | The response's http status code.
[$sel:httpStatus:UntagResourceResponse'] :: UntagResourceResponse -> Int

-- | Create a value of <a>UntagResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UntagResourceResponse'</a>,
--   <a>untagResourceResponse_httpStatus</a> - The response's http status
--   code.
newUntagResourceResponse :: Int -> UntagResourceResponse

-- | The response's http status code.
untagResourceResponse_httpStatus :: Lens' UntagResourceResponse Int
instance GHC.Generics.Generic Network.AWS.Detective.UntagResource.UntagResource
instance GHC.Show.Show Network.AWS.Detective.UntagResource.UntagResource
instance GHC.Read.Read Network.AWS.Detective.UntagResource.UntagResource
instance GHC.Classes.Eq Network.AWS.Detective.UntagResource.UntagResource
instance GHC.Generics.Generic Network.AWS.Detective.UntagResource.UntagResourceResponse
instance GHC.Show.Show Network.AWS.Detective.UntagResource.UntagResourceResponse
instance GHC.Read.Read Network.AWS.Detective.UntagResource.UntagResourceResponse
instance GHC.Classes.Eq Network.AWS.Detective.UntagResource.UntagResourceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Detective.UntagResource.UntagResource
instance Control.DeepSeq.NFData Network.AWS.Detective.UntagResource.UntagResourceResponse
instance Data.Hashable.Class.Hashable Network.AWS.Detective.UntagResource.UntagResource
instance Control.DeepSeq.NFData Network.AWS.Detective.UntagResource.UntagResource
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Detective.UntagResource.UntagResource
instance Network.AWS.Data.Path.ToPath Network.AWS.Detective.UntagResource.UntagResource
instance Network.AWS.Data.Query.ToQuery Network.AWS.Detective.UntagResource.UntagResource


module Network.AWS.Detective.Lens

-- | The ARN of the behavior graph.
startMonitoringMember_graphArn :: Lens' StartMonitoringMember Text

-- | The account ID of the member account to try to enable.
--   
--   The account must be an invited member account with a status of
--   <tt>ACCEPTED_BUT_DISABLED</tt>.
startMonitoringMember_accountId :: Lens' StartMonitoringMember Text

-- | The ARN of the behavior graph to delete members from.
deleteMembers_graphArn :: Lens' DeleteMembers Text

-- | The list of AWS account identifiers for the member accounts to delete
--   from the behavior graph. You can delete up to 50 member accounts at a
--   time.
deleteMembers_accountIds :: Lens' DeleteMembers (NonEmpty Text)

-- | The list of AWS account identifiers for the member accounts that
--   Detective successfully deleted from the behavior graph.
deleteMembersResponse_accountIds :: Lens' DeleteMembersResponse (Maybe (NonEmpty Text))

-- | The list of member accounts that Detective was not able to delete from
--   the behavior graph. For each member account, provides the reason that
--   the deletion could not be processed.
deleteMembersResponse_unprocessedAccounts :: Lens' DeleteMembersResponse (Maybe [UnprocessedAccount])

-- | The response's http status code.
deleteMembersResponse_httpStatus :: Lens' DeleteMembersResponse Int

-- | The ARN of the behavior graph for which to retrieve the tag values.
listTagsForResource_resourceArn :: Lens' ListTagsForResource Text

-- | The tag values that are assigned to the behavior graph. The request
--   returns up to 50 tag values.
listTagsForResourceResponse_tags :: Lens' ListTagsForResourceResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
listTagsForResourceResponse_httpStatus :: Lens' ListTagsForResourceResponse Int

-- | The ARN of the behavior graph to disable.
deleteGraph_graphArn :: Lens' DeleteGraph Text

-- | For requests to retrieve the next page of results, the pagination
--   token that was returned with the previous page of results. The initial
--   request does not include a pagination token.
listInvitations_nextToken :: Lens' ListInvitations (Maybe Text)

-- | The maximum number of behavior graph invitations to return in the
--   response. The total must be less than the overall limit on the number
--   of results to return, which is currently 200.
listInvitations_maxResults :: Lens' ListInvitations (Maybe Natural)

-- | The list of behavior graphs for which the member account has open or
--   accepted invitations.
listInvitationsResponse_invitations :: Lens' ListInvitationsResponse (Maybe [MemberDetail])

-- | If there are more behavior graphs remaining in the results, then this
--   is the pagination token to use to request the next page of behavior
--   graphs.
listInvitationsResponse_nextToken :: Lens' ListInvitationsResponse (Maybe Text)

-- | The response's http status code.
listInvitationsResponse_httpStatus :: Lens' ListInvitationsResponse Int

-- | The ARN of the behavior graph to remove the member account from.
--   
--   The member account's member status in the behavior graph must be
--   <tt>ENABLED</tt>.
disassociateMembership_graphArn :: Lens' DisassociateMembership Text

-- | The ARN of the behavior graph that the member account is accepting the
--   invitation for.
--   
--   The member account status in the behavior graph must be
--   <tt>INVITED</tt>.
acceptInvitation_graphArn :: Lens' AcceptInvitation Text

-- | For requests to retrieve the next page of member account results, the
--   pagination token that was returned with the previous page of results.
--   The initial request does not include a pagination token.
listMembers_nextToken :: Lens' ListMembers (Maybe Text)

-- | The maximum number of member accounts to include in the response. The
--   total must be less than the overall limit on the number of results to
--   return, which is currently 200.
listMembers_maxResults :: Lens' ListMembers (Maybe Natural)

-- | The ARN of the behavior graph for which to retrieve the list of member
--   accounts.
listMembers_graphArn :: Lens' ListMembers Text

-- | The list of member accounts in the behavior graph.
--   
--   The results include member accounts that did not pass verification and
--   member accounts that have not yet accepted the invitation to the
--   behavior graph. The results do not include member accounts that were
--   removed from the behavior graph.
listMembersResponse_memberDetails :: Lens' ListMembersResponse (Maybe [MemberDetail])

-- | If there are more member accounts remaining in the results, then this
--   is the pagination token to use to request the next page of member
--   accounts.
listMembersResponse_nextToken :: Lens' ListMembersResponse (Maybe Text)

-- | The response's http status code.
listMembersResponse_httpStatus :: Lens' ListMembersResponse Int

-- | if set to <tt>true</tt>, then the member accounts do not receive email
--   notifications. By default, this is set to <tt>false</tt>, and the
--   member accounts receive email notifications.
createMembers_disableEmailNotification :: Lens' CreateMembers (Maybe Bool)

-- | Customized message text to include in the invitation email message to
--   the invited member accounts.
createMembers_message :: Lens' CreateMembers (Maybe Text)

-- | The ARN of the behavior graph to invite the member accounts to
--   contribute their data to.
createMembers_graphArn :: Lens' CreateMembers Text

-- | The list of AWS accounts to invite to become member accounts in the
--   behavior graph. You can invite up to 50 accounts at a time. For each
--   invited account, the account list contains the account identifier and
--   the AWS account root user email address.
createMembers_accounts :: Lens' CreateMembers (NonEmpty Account)

-- | The set of member account invitation requests that Detective was able
--   to process. This includes accounts that are being verified, that
--   failed verification, and that passed verification and are being sent
--   an invitation.
createMembersResponse_members :: Lens' CreateMembersResponse (Maybe [MemberDetail])

-- | The list of accounts for which Detective was unable to process the
--   invitation request. For each account, the list provides the reason why
--   the request could not be processed. The list includes accounts that
--   are already member accounts in the behavior graph.
createMembersResponse_unprocessedAccounts :: Lens' CreateMembersResponse (Maybe [UnprocessedAccount])

-- | The response's http status code.
createMembersResponse_httpStatus :: Lens' CreateMembersResponse Int

-- | The ARN of the behavior graph for which to request the member details.
getMembers_graphArn :: Lens' GetMembers Text

-- | The list of AWS account identifiers for the member account for which
--   to return member details. You can request details for up to 50 member
--   accounts at a time.
--   
--   You cannot use <tt>GetMembers</tt> to retrieve information about
--   member accounts that were removed from the behavior graph.
getMembers_accountIds :: Lens' GetMembers (NonEmpty Text)

-- | The member account details that Detective is returning in response to
--   the request.
getMembersResponse_memberDetails :: Lens' GetMembersResponse (Maybe [MemberDetail])

-- | The requested member accounts for which Detective was unable to return
--   member details.
--   
--   For each account, provides the reason why the request could not be
--   processed.
getMembersResponse_unprocessedAccounts :: Lens' GetMembersResponse (Maybe [UnprocessedAccount])

-- | The response's http status code.
getMembersResponse_httpStatus :: Lens' GetMembersResponse Int

-- | For requests to get the next page of results, the pagination token
--   that was returned with the previous set of results. The initial
--   request does not include a pagination token.
listGraphs_nextToken :: Lens' ListGraphs (Maybe Text)

-- | The maximum number of graphs to return at a time. The total must be
--   less than the overall limit on the number of results to return, which
--   is currently 200.
listGraphs_maxResults :: Lens' ListGraphs (Maybe Natural)

-- | If there are more behavior graphs remaining in the results, then this
--   is the pagination token to use to request the next page of behavior
--   graphs.
listGraphsResponse_nextToken :: Lens' ListGraphsResponse (Maybe Text)

-- | A list of behavior graphs that the account is an administrator account
--   for.
listGraphsResponse_graphList :: Lens' ListGraphsResponse (Maybe [Graph])

-- | The response's http status code.
listGraphsResponse_httpStatus :: Lens' ListGraphsResponse Int

-- | The ARN of the behavior graph to assign the tags to.
tagResource_resourceArn :: Lens' TagResource Text

-- | The tags to assign to the behavior graph. You can add up to 50 tags.
--   For each tag, you provide the tag key and the tag value. Each tag key
--   can contain up to 128 characters. Each tag value can contain up to 256
--   characters.
tagResource_tags :: Lens' TagResource (HashMap Text Text)

-- | The response's http status code.
tagResourceResponse_httpStatus :: Lens' TagResourceResponse Int

-- | The tags to assign to the new behavior graph. You can add up to 50
--   tags. For each tag, you provide the tag key and the tag value. Each
--   tag key can contain up to 128 characters. Each tag value can contain
--   up to 256 characters.
createGraph_tags :: Lens' CreateGraph (Maybe (HashMap Text Text))

-- | The ARN of the new behavior graph.
createGraphResponse_graphArn :: Lens' CreateGraphResponse (Maybe Text)

-- | The response's http status code.
createGraphResponse_httpStatus :: Lens' CreateGraphResponse Int

-- | The ARN of the behavior graph to remove the tags from.
untagResource_resourceArn :: Lens' UntagResource Text

-- | The tag keys of the tags to remove from the behavior graph. You can
--   remove up to 50 tags at a time.
untagResource_tagKeys :: Lens' UntagResource (NonEmpty Text)

-- | The response's http status code.
untagResourceResponse_httpStatus :: Lens' UntagResourceResponse Int

-- | The ARN of the behavior graph to reject the invitation to.
--   
--   The member account's current member status in the behavior graph must
--   be <tt>INVITED</tt>.
rejectInvitation_graphArn :: Lens' RejectInvitation Text

-- | The account identifier of the AWS account.
account_accountId :: Lens' Account Text

-- | The AWS account root user email address for the AWS account.
account_emailAddress :: Lens' Account Text

-- | The ARN of the behavior graph.
graph_arn :: Lens' Graph (Maybe Text)

-- | The date and time that the behavior graph was created. The value is in
--   milliseconds since the epoch.
graph_createdTime :: Lens' Graph (Maybe UTCTime)

-- | The date and time when the graph utilization percentage was last
--   updated.
memberDetail_percentOfGraphUtilizationUpdatedTime :: Lens' MemberDetail (Maybe UTCTime)

-- | The current membership status of the member account. The status can
--   have one of the following values:
--   
--   <ul>
--   <li><tt>INVITED</tt> - Indicates that the member was sent an
--   invitation but has not yet responded.</li>
--   <li><tt>VERIFICATION_IN_PROGRESS</tt> - Indicates that Detective is
--   verifying that the account identifier and email address provided for
--   the member account match. If they do match, then Detective sends the
--   invitation. If the email address and account identifier don't match,
--   then the member cannot be added to the behavior graph.</li>
--   <li><tt>VERIFICATION_FAILED</tt> - Indicates that the account and
--   email address provided for the member account do not match, and
--   Detective did not send an invitation to the account.</li>
--   <li><tt>ENABLED</tt> - Indicates that the member account accepted the
--   invitation to contribute to the behavior graph.</li>
--   <li><tt>ACCEPTED_BUT_DISABLED</tt> - Indicates that the member account
--   accepted the invitation but is prevented from contributing data to the
--   behavior graph. <tt>DisabledReason</tt> provides the reason why the
--   member account is not enabled.</li>
--   </ul>
--   
--   Member accounts that declined an invitation or that were removed from
--   the behavior graph are not included.
memberDetail_status :: Lens' MemberDetail (Maybe MemberStatus)

-- | The date and time that Detective sent the invitation to the member
--   account. The value is in milliseconds since the epoch.
memberDetail_invitedTime :: Lens' MemberDetail (Maybe UTCTime)

-- | The AWS account identifier of the administrator account for the
--   behavior graph.
memberDetail_administratorId :: Lens' MemberDetail (Maybe Text)

-- | The ARN of the behavior graph that the member account was invited to.
memberDetail_graphArn :: Lens' MemberDetail (Maybe Text)

-- | The AWS account identifier of the administrator account for the
--   behavior graph.
memberDetail_masterId :: Lens' MemberDetail (Maybe Text)

-- | The AWS account identifier for the member account.
memberDetail_accountId :: Lens' MemberDetail (Maybe Text)

-- | For member accounts with a status of <tt>ACCEPTED_BUT_DISABLED</tt>,
--   the reason that the member account is not enabled.
--   
--   The reason can have one of the following values:
--   
--   <ul>
--   <li><tt>VOLUME_TOO_HIGH</tt> - Indicates that adding the member
--   account would cause the data volume for the behavior graph to be too
--   high.</li>
--   <li><tt>VOLUME_UNKNOWN</tt> - Indicates that Detective is unable to
--   verify the data volume for the member account. This is usually because
--   the member account is not enrolled in Amazon GuardDuty.</li>
--   </ul>
memberDetail_disabledReason :: Lens' MemberDetail (Maybe MemberDisabledReason)

-- | The member account data volume as a percentage of the maximum allowed
--   data volume. 0 indicates 0 percent, and 100 indicates 100 percent.
--   
--   Note that this is not the percentage of the behavior graph data
--   volume.
--   
--   For example, the data volume for the behavior graph is 80 GB per day.
--   The maximum data volume is 160 GB per day. If the data volume for the
--   member account is 40 GB per day, then
--   <tt>PercentOfGraphUtilization</tt> is 25. It represents 25% of the
--   maximum allowed data volume.
memberDetail_percentOfGraphUtilization :: Lens' MemberDetail (Maybe Double)

-- | The AWS account root user email address for the member account.
memberDetail_emailAddress :: Lens' MemberDetail (Maybe Text)

-- | The data and time when the member account data volume was last
--   updated.
memberDetail_volumeUsageUpdatedTime :: Lens' MemberDetail (Maybe UTCTime)

-- | The date and time that the member account was last updated. The value
--   is in milliseconds since the epoch.
memberDetail_updatedTime :: Lens' MemberDetail (Maybe UTCTime)

-- | The data volume in bytes per day for the member account.
memberDetail_volumeUsageInBytes :: Lens' MemberDetail (Maybe Integer)

-- | The AWS account identifier of the member account that was not
--   processed.
unprocessedAccount_accountId :: Lens' UnprocessedAccount (Maybe Text)

-- | The reason that the member account request could not be processed.
unprocessedAccount_reason :: Lens' UnprocessedAccount (Maybe Text)


module Network.AWS.Detective.Waiters


-- | Derived from API version <tt>2018-10-26</tt> of the AWS service
--   descriptions, licensed under Apache 2.0.
--   
--   Detective uses machine learning and purpose-built visualizations to
--   help you analyze and investigate security issues across your Amazon
--   Web Services (AWS) workloads. Detective automatically extracts
--   time-based events such as login attempts, API calls, and network
--   traffic from AWS CloudTrail and Amazon Virtual Private Cloud (Amazon
--   VPC) flow logs. It also extracts findings detected by Amazon
--   GuardDuty.
--   
--   The Detective API primarily supports the creation and management of
--   behavior graphs. A behavior graph contains the extracted data from a
--   set of member accounts, and is created and managed by an administrator
--   account.
--   
--   Every behavior graph is specific to a Region. You can only use the API
--   to manage graphs that belong to the Region that is associated with the
--   currently selected endpoint.
--   
--   A Detective administrator account can use the Detective API to do the
--   following:
--   
--   <ul>
--   <li>Enable and disable Detective. Enabling Detective creates a new
--   behavior graph.</li>
--   <li>View the list of member accounts in a behavior graph.</li>
--   <li>Add member accounts to a behavior graph.</li>
--   <li>Remove member accounts from a behavior graph.</li>
--   </ul>
--   
--   A member account can use the Detective API to do the following:
--   
--   <ul>
--   <li>View the list of behavior graphs that they are invited to.</li>
--   <li>Accept an invitation to contribute to a behavior graph.</li>
--   <li>Decline an invitation to contribute to a behavior graph.</li>
--   <li>Remove their account from a behavior graph.</li>
--   </ul>
--   
--   All API actions are logged as CloudTrail events. See <a>Logging
--   Detective API Calls with CloudTrail</a>.
--   
--   We replaced the term "master account" with the term "administrator
--   account." An administrator account is used to centrally manage
--   multiple accounts. In the case of Detective, the administrator account
--   manages the accounts in their behavior graph.
module Network.AWS.Detective

-- | API version <tt>2018-10-26</tt> of the Amazon Detective SDK
--   configuration.
defaultService :: Service

-- | The request parameters are invalid.
_ValidationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request attempted an invalid action.
_ConflictException :: AsError a => Getting (First ServiceError) a ServiceError

-- | This request cannot be completed for one of the following reasons.
--   
--   <ul>
--   <li>The request would cause the number of member accounts in the
--   behavior graph to exceed the maximum allowed. A behavior graph cannot
--   have more than 1000 member accounts.</li>
--   <li>The request would cause the data rate for the behavior graph to
--   exceed the maximum allowed.</li>
--   <li>Detective is unable to verify the data rate for the member
--   account. This is usually because the member account is not enrolled in
--   Amazon GuardDuty.</li>
--   </ul>
_ServiceQuotaExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request was valid but failed because of a problem with the
--   service.
_InternalServerException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request refers to a nonexistent resource.
_ResourceNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | <i>See:</i> <a>newStartMonitoringMember</a> smart constructor.
data StartMonitoringMember
StartMonitoringMember' :: Text -> Text -> StartMonitoringMember

-- | Create a value of <a>StartMonitoringMember</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:graphArn:StartMonitoringMember'</a>,
--   <a>startMonitoringMember_graphArn</a> - The ARN of the behavior graph.
--   
--   <a>$sel:accountId:StartMonitoringMember'</a>,
--   <a>startMonitoringMember_accountId</a> - The account ID of the member
--   account to try to enable.
--   
--   The account must be an invited member account with a status of
--   <tt>ACCEPTED_BUT_DISABLED</tt>.
newStartMonitoringMember :: Text -> Text -> StartMonitoringMember

-- | <i>See:</i> <a>newStartMonitoringMemberResponse</a> smart constructor.
data StartMonitoringMemberResponse
StartMonitoringMemberResponse' :: StartMonitoringMemberResponse

-- | Create a value of <a>StartMonitoringMemberResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newStartMonitoringMemberResponse :: StartMonitoringMemberResponse

-- | <i>See:</i> <a>newDeleteMembers</a> smart constructor.
data DeleteMembers
DeleteMembers' :: Text -> NonEmpty Text -> DeleteMembers

-- | Create a value of <a>DeleteMembers</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:graphArn:DeleteMembers'</a>, <a>deleteMembers_graphArn</a> -
--   The ARN of the behavior graph to delete members from.
--   
--   <a>$sel:accountIds:DeleteMembers'</a>, <a>deleteMembers_accountIds</a>
--   - The list of AWS account identifiers for the member accounts to
--   delete from the behavior graph. You can delete up to 50 member
--   accounts at a time.
newDeleteMembers :: Text -> NonEmpty Text -> DeleteMembers

-- | <i>See:</i> <a>newDeleteMembersResponse</a> smart constructor.
data DeleteMembersResponse
DeleteMembersResponse' :: Maybe (NonEmpty Text) -> Maybe [UnprocessedAccount] -> Int -> DeleteMembersResponse

-- | Create a value of <a>DeleteMembersResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:accountIds:DeleteMembers'</a>,
--   <a>deleteMembersResponse_accountIds</a> - The list of AWS account
--   identifiers for the member accounts that Detective successfully
--   deleted from the behavior graph.
--   
--   <a>$sel:unprocessedAccounts:DeleteMembersResponse'</a>,
--   <a>deleteMembersResponse_unprocessedAccounts</a> - The list of member
--   accounts that Detective was not able to delete from the behavior
--   graph. For each member account, provides the reason that the deletion
--   could not be processed.
--   
--   <a>$sel:httpStatus:DeleteMembersResponse'</a>,
--   <a>deleteMembersResponse_httpStatus</a> - The response's http status
--   code.
newDeleteMembersResponse :: Int -> DeleteMembersResponse

-- | <i>See:</i> <a>newListTagsForResource</a> smart constructor.
data ListTagsForResource
ListTagsForResource' :: Text -> ListTagsForResource

-- | Create a value of <a>ListTagsForResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:ListTagsForResource'</a>,
--   <a>listTagsForResource_resourceArn</a> - The ARN of the behavior graph
--   for which to retrieve the tag values.
newListTagsForResource :: Text -> ListTagsForResource

-- | <i>See:</i> <a>newListTagsForResourceResponse</a> smart constructor.
data ListTagsForResourceResponse
ListTagsForResourceResponse' :: Maybe (HashMap Text Text) -> Int -> ListTagsForResourceResponse

-- | Create a value of <a>ListTagsForResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_tags</a> - The tag values that are
--   assigned to the behavior graph. The request returns up to 50 tag
--   values.
--   
--   <a>$sel:httpStatus:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_httpStatus</a> - The response's http
--   status code.
newListTagsForResourceResponse :: Int -> ListTagsForResourceResponse

-- | <i>See:</i> <a>newDeleteGraph</a> smart constructor.
data DeleteGraph
DeleteGraph' :: Text -> DeleteGraph

-- | Create a value of <a>DeleteGraph</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:graphArn:DeleteGraph'</a>, <a>deleteGraph_graphArn</a> - The
--   ARN of the behavior graph to disable.
newDeleteGraph :: Text -> DeleteGraph

-- | <i>See:</i> <a>newDeleteGraphResponse</a> smart constructor.
data DeleteGraphResponse
DeleteGraphResponse' :: DeleteGraphResponse

-- | Create a value of <a>DeleteGraphResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteGraphResponse :: DeleteGraphResponse

-- | <i>See:</i> <a>newListInvitations</a> smart constructor.
data ListInvitations
ListInvitations' :: Maybe Text -> Maybe Natural -> ListInvitations

-- | Create a value of <a>ListInvitations</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListInvitations'</a>,
--   <a>listInvitations_nextToken</a> - For requests to retrieve the next
--   page of results, the pagination token that was returned with the
--   previous page of results. The initial request does not include a
--   pagination token.
--   
--   <a>$sel:maxResults:ListInvitations'</a>,
--   <a>listInvitations_maxResults</a> - The maximum number of behavior
--   graph invitations to return in the response. The total must be less
--   than the overall limit on the number of results to return, which is
--   currently 200.
newListInvitations :: ListInvitations

-- | <i>See:</i> <a>newListInvitationsResponse</a> smart constructor.
data ListInvitationsResponse
ListInvitationsResponse' :: Maybe [MemberDetail] -> Maybe Text -> Int -> ListInvitationsResponse

-- | Create a value of <a>ListInvitationsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:invitations:ListInvitationsResponse'</a>,
--   <a>listInvitationsResponse_invitations</a> - The list of behavior
--   graphs for which the member account has open or accepted invitations.
--   
--   <a>$sel:nextToken:ListInvitations'</a>,
--   <a>listInvitationsResponse_nextToken</a> - If there are more behavior
--   graphs remaining in the results, then this is the pagination token to
--   use to request the next page of behavior graphs.
--   
--   <a>$sel:httpStatus:ListInvitationsResponse'</a>,
--   <a>listInvitationsResponse_httpStatus</a> - The response's http status
--   code.
newListInvitationsResponse :: Int -> ListInvitationsResponse

-- | <i>See:</i> <a>newDisassociateMembership</a> smart constructor.
data DisassociateMembership
DisassociateMembership' :: Text -> DisassociateMembership

-- | Create a value of <a>DisassociateMembership</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:graphArn:DisassociateMembership'</a>,
--   <a>disassociateMembership_graphArn</a> - The ARN of the behavior graph
--   to remove the member account from.
--   
--   The member account's member status in the behavior graph must be
--   <tt>ENABLED</tt>.
newDisassociateMembership :: Text -> DisassociateMembership

-- | <i>See:</i> <a>newDisassociateMembershipResponse</a> smart
--   constructor.
data DisassociateMembershipResponse
DisassociateMembershipResponse' :: DisassociateMembershipResponse

-- | Create a value of <a>DisassociateMembershipResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDisassociateMembershipResponse :: DisassociateMembershipResponse

-- | <i>See:</i> <a>newAcceptInvitation</a> smart constructor.
data AcceptInvitation
AcceptInvitation' :: Text -> AcceptInvitation

-- | Create a value of <a>AcceptInvitation</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:graphArn:AcceptInvitation'</a>,
--   <a>acceptInvitation_graphArn</a> - The ARN of the behavior graph that
--   the member account is accepting the invitation for.
--   
--   The member account status in the behavior graph must be
--   <tt>INVITED</tt>.
newAcceptInvitation :: Text -> AcceptInvitation

-- | <i>See:</i> <a>newAcceptInvitationResponse</a> smart constructor.
data AcceptInvitationResponse
AcceptInvitationResponse' :: AcceptInvitationResponse

-- | Create a value of <a>AcceptInvitationResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newAcceptInvitationResponse :: AcceptInvitationResponse

-- | <i>See:</i> <a>newListMembers</a> smart constructor.
data ListMembers
ListMembers' :: Maybe Text -> Maybe Natural -> Text -> ListMembers

-- | Create a value of <a>ListMembers</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListMembers'</a>, <a>listMembers_nextToken</a> - For
--   requests to retrieve the next page of member account results, the
--   pagination token that was returned with the previous page of results.
--   The initial request does not include a pagination token.
--   
--   <a>$sel:maxResults:ListMembers'</a>, <a>listMembers_maxResults</a> -
--   The maximum number of member accounts to include in the response. The
--   total must be less than the overall limit on the number of results to
--   return, which is currently 200.
--   
--   <a>$sel:graphArn:ListMembers'</a>, <a>listMembers_graphArn</a> - The
--   ARN of the behavior graph for which to retrieve the list of member
--   accounts.
newListMembers :: Text -> ListMembers

-- | <i>See:</i> <a>newListMembersResponse</a> smart constructor.
data ListMembersResponse
ListMembersResponse' :: Maybe [MemberDetail] -> Maybe Text -> Int -> ListMembersResponse

-- | Create a value of <a>ListMembersResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:memberDetails:ListMembersResponse'</a>,
--   <a>listMembersResponse_memberDetails</a> - The list of member accounts
--   in the behavior graph.
--   
--   The results include member accounts that did not pass verification and
--   member accounts that have not yet accepted the invitation to the
--   behavior graph. The results do not include member accounts that were
--   removed from the behavior graph.
--   
--   <a>$sel:nextToken:ListMembers'</a>,
--   <a>listMembersResponse_nextToken</a> - If there are more member
--   accounts remaining in the results, then this is the pagination token
--   to use to request the next page of member accounts.
--   
--   <a>$sel:httpStatus:ListMembersResponse'</a>,
--   <a>listMembersResponse_httpStatus</a> - The response's http status
--   code.
newListMembersResponse :: Int -> ListMembersResponse

-- | <i>See:</i> <a>newCreateMembers</a> smart constructor.
data CreateMembers
CreateMembers' :: Maybe Bool -> Maybe Text -> Text -> NonEmpty Account -> CreateMembers

-- | Create a value of <a>CreateMembers</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:disableEmailNotification:CreateMembers'</a>,
--   <a>createMembers_disableEmailNotification</a> - if set to
--   <tt>true</tt>, then the member accounts do not receive email
--   notifications. By default, this is set to <tt>false</tt>, and the
--   member accounts receive email notifications.
--   
--   <a>$sel:message:CreateMembers'</a>, <a>createMembers_message</a> -
--   Customized message text to include in the invitation email message to
--   the invited member accounts.
--   
--   <a>$sel:graphArn:CreateMembers'</a>, <a>createMembers_graphArn</a> -
--   The ARN of the behavior graph to invite the member accounts to
--   contribute their data to.
--   
--   <a>$sel:accounts:CreateMembers'</a>, <a>createMembers_accounts</a> -
--   The list of AWS accounts to invite to become member accounts in the
--   behavior graph. You can invite up to 50 accounts at a time. For each
--   invited account, the account list contains the account identifier and
--   the AWS account root user email address.
newCreateMembers :: Text -> NonEmpty Account -> CreateMembers

-- | <i>See:</i> <a>newCreateMembersResponse</a> smart constructor.
data CreateMembersResponse
CreateMembersResponse' :: Maybe [MemberDetail] -> Maybe [UnprocessedAccount] -> Int -> CreateMembersResponse

-- | Create a value of <a>CreateMembersResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:members:CreateMembersResponse'</a>,
--   <a>createMembersResponse_members</a> - The set of member account
--   invitation requests that Detective was able to process. This includes
--   accounts that are being verified, that failed verification, and that
--   passed verification and are being sent an invitation.
--   
--   <a>$sel:unprocessedAccounts:CreateMembersResponse'</a>,
--   <a>createMembersResponse_unprocessedAccounts</a> - The list of
--   accounts for which Detective was unable to process the invitation
--   request. For each account, the list provides the reason why the
--   request could not be processed. The list includes accounts that are
--   already member accounts in the behavior graph.
--   
--   <a>$sel:httpStatus:CreateMembersResponse'</a>,
--   <a>createMembersResponse_httpStatus</a> - The response's http status
--   code.
newCreateMembersResponse :: Int -> CreateMembersResponse

-- | <i>See:</i> <a>newGetMembers</a> smart constructor.
data GetMembers
GetMembers' :: Text -> NonEmpty Text -> GetMembers

-- | Create a value of <a>GetMembers</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:graphArn:GetMembers'</a>, <a>getMembers_graphArn</a> - The ARN
--   of the behavior graph for which to request the member details.
--   
--   <a>$sel:accountIds:GetMembers'</a>, <a>getMembers_accountIds</a> - The
--   list of AWS account identifiers for the member account for which to
--   return member details. You can request details for up to 50 member
--   accounts at a time.
--   
--   You cannot use <tt>GetMembers</tt> to retrieve information about
--   member accounts that were removed from the behavior graph.
newGetMembers :: Text -> NonEmpty Text -> GetMembers

-- | <i>See:</i> <a>newGetMembersResponse</a> smart constructor.
data GetMembersResponse
GetMembersResponse' :: Maybe [MemberDetail] -> Maybe [UnprocessedAccount] -> Int -> GetMembersResponse

-- | Create a value of <a>GetMembersResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:memberDetails:GetMembersResponse'</a>,
--   <a>getMembersResponse_memberDetails</a> - The member account details
--   that Detective is returning in response to the request.
--   
--   <a>$sel:unprocessedAccounts:GetMembersResponse'</a>,
--   <a>getMembersResponse_unprocessedAccounts</a> - The requested member
--   accounts for which Detective was unable to return member details.
--   
--   For each account, provides the reason why the request could not be
--   processed.
--   
--   <a>$sel:httpStatus:GetMembersResponse'</a>,
--   <a>getMembersResponse_httpStatus</a> - The response's http status
--   code.
newGetMembersResponse :: Int -> GetMembersResponse

-- | <i>See:</i> <a>newListGraphs</a> smart constructor.
data ListGraphs
ListGraphs' :: Maybe Text -> Maybe Natural -> ListGraphs

-- | Create a value of <a>ListGraphs</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListGraphs'</a>, <a>listGraphs_nextToken</a> - For
--   requests to get the next page of results, the pagination token that
--   was returned with the previous set of results. The initial request
--   does not include a pagination token.
--   
--   <a>$sel:maxResults:ListGraphs'</a>, <a>listGraphs_maxResults</a> - The
--   maximum number of graphs to return at a time. The total must be less
--   than the overall limit on the number of results to return, which is
--   currently 200.
newListGraphs :: ListGraphs

-- | <i>See:</i> <a>newListGraphsResponse</a> smart constructor.
data ListGraphsResponse
ListGraphsResponse' :: Maybe Text -> Maybe [Graph] -> Int -> ListGraphsResponse

-- | Create a value of <a>ListGraphsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListGraphs'</a>, <a>listGraphsResponse_nextToken</a>
--   - If there are more behavior graphs remaining in the results, then
--   this is the pagination token to use to request the next page of
--   behavior graphs.
--   
--   <a>$sel:graphList:ListGraphsResponse'</a>,
--   <a>listGraphsResponse_graphList</a> - A list of behavior graphs that
--   the account is an administrator account for.
--   
--   <a>$sel:httpStatus:ListGraphsResponse'</a>,
--   <a>listGraphsResponse_httpStatus</a> - The response's http status
--   code.
newListGraphsResponse :: Int -> ListGraphsResponse

-- | <i>See:</i> <a>newTagResource</a> smart constructor.
data TagResource
TagResource' :: Text -> HashMap Text Text -> TagResource

-- | Create a value of <a>TagResource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:TagResource'</a>, <a>tagResource_resourceArn</a> -
--   The ARN of the behavior graph to assign the tags to.
--   
--   <a>$sel:tags:TagResource'</a>, <a>tagResource_tags</a> - The tags to
--   assign to the behavior graph. You can add up to 50 tags. For each tag,
--   you provide the tag key and the tag value. Each tag key can contain up
--   to 128 characters. Each tag value can contain up to 256 characters.
newTagResource :: Text -> TagResource

-- | <i>See:</i> <a>newTagResourceResponse</a> smart constructor.
data TagResourceResponse
TagResourceResponse' :: Int -> TagResourceResponse

-- | Create a value of <a>TagResourceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:TagResourceResponse'</a>,
--   <a>tagResourceResponse_httpStatus</a> - The response's http status
--   code.
newTagResourceResponse :: Int -> TagResourceResponse

-- | <i>See:</i> <a>newCreateGraph</a> smart constructor.
data CreateGraph
CreateGraph' :: Maybe (HashMap Text Text) -> CreateGraph

-- | Create a value of <a>CreateGraph</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:CreateGraph'</a>, <a>createGraph_tags</a> - The tags to
--   assign to the new behavior graph. You can add up to 50 tags. For each
--   tag, you provide the tag key and the tag value. Each tag key can
--   contain up to 128 characters. Each tag value can contain up to 256
--   characters.
newCreateGraph :: CreateGraph

-- | <i>See:</i> <a>newCreateGraphResponse</a> smart constructor.
data CreateGraphResponse
CreateGraphResponse' :: Maybe Text -> Int -> CreateGraphResponse

-- | Create a value of <a>CreateGraphResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:graphArn:CreateGraphResponse'</a>,
--   <a>createGraphResponse_graphArn</a> - The ARN of the new behavior
--   graph.
--   
--   <a>$sel:httpStatus:CreateGraphResponse'</a>,
--   <a>createGraphResponse_httpStatus</a> - The response's http status
--   code.
newCreateGraphResponse :: Int -> CreateGraphResponse

-- | <i>See:</i> <a>newUntagResource</a> smart constructor.
data UntagResource
UntagResource' :: Text -> NonEmpty Text -> UntagResource

-- | Create a value of <a>UntagResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:UntagResource'</a>,
--   <a>untagResource_resourceArn</a> - The ARN of the behavior graph to
--   remove the tags from.
--   
--   <a>$sel:tagKeys:UntagResource'</a>, <a>untagResource_tagKeys</a> - The
--   tag keys of the tags to remove from the behavior graph. You can remove
--   up to 50 tags at a time.
newUntagResource :: Text -> NonEmpty Text -> UntagResource

-- | <i>See:</i> <a>newUntagResourceResponse</a> smart constructor.
data UntagResourceResponse
UntagResourceResponse' :: Int -> UntagResourceResponse

-- | Create a value of <a>UntagResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UntagResourceResponse'</a>,
--   <a>untagResourceResponse_httpStatus</a> - The response's http status
--   code.
newUntagResourceResponse :: Int -> UntagResourceResponse

-- | <i>See:</i> <a>newRejectInvitation</a> smart constructor.
data RejectInvitation
RejectInvitation' :: Text -> RejectInvitation

-- | Create a value of <a>RejectInvitation</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:graphArn:RejectInvitation'</a>,
--   <a>rejectInvitation_graphArn</a> - The ARN of the behavior graph to
--   reject the invitation to.
--   
--   The member account's current member status in the behavior graph must
--   be <tt>INVITED</tt>.
newRejectInvitation :: Text -> RejectInvitation

-- | <i>See:</i> <a>newRejectInvitationResponse</a> smart constructor.
data RejectInvitationResponse
RejectInvitationResponse' :: RejectInvitationResponse

-- | Create a value of <a>RejectInvitationResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newRejectInvitationResponse :: RejectInvitationResponse
newtype MemberDisabledReason
MemberDisabledReason' :: Text -> MemberDisabledReason
[fromMemberDisabledReason] :: MemberDisabledReason -> Text
pattern MemberDisabledReason_VOLUME_TOO_HIGH :: MemberDisabledReason
pattern MemberDisabledReason_VOLUME_UNKNOWN :: MemberDisabledReason
newtype MemberStatus
MemberStatus' :: Text -> MemberStatus
[fromMemberStatus] :: MemberStatus -> Text
pattern MemberStatus_ACCEPTED_BUT_DISABLED :: MemberStatus
pattern MemberStatus_ENABLED :: MemberStatus
pattern MemberStatus_INVITED :: MemberStatus
pattern MemberStatus_VERIFICATION_FAILED :: MemberStatus
pattern MemberStatus_VERIFICATION_IN_PROGRESS :: MemberStatus

-- | An AWS account that is the administrator account of or a member of a
--   behavior graph.
--   
--   <i>See:</i> <a>newAccount</a> smart constructor.
data Account
Account' :: Text -> Text -> Account

-- | Create a value of <a>Account</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:accountId:Account'</a>, <a>account_accountId</a> - The account
--   identifier of the AWS account.
--   
--   <a>$sel:emailAddress:Account'</a>, <a>account_emailAddress</a> - The
--   AWS account root user email address for the AWS account.
newAccount :: Text -> Text -> Account

-- | A behavior graph in Detective.
--   
--   <i>See:</i> <a>newGraph</a> smart constructor.
data Graph
Graph' :: Maybe Text -> Maybe POSIX -> Graph

-- | Create a value of <a>Graph</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:Graph'</a>, <a>graph_arn</a> - The ARN of the behavior
--   graph.
--   
--   <a>$sel:createdTime:Graph'</a>, <a>graph_createdTime</a> - The date
--   and time that the behavior graph was created. The value is in
--   milliseconds since the epoch.
newGraph :: Graph

-- | Details about a member account that was invited to contribute to a
--   behavior graph.
--   
--   <i>See:</i> <a>newMemberDetail</a> smart constructor.
data MemberDetail
MemberDetail' :: Maybe POSIX -> Maybe MemberStatus -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe MemberDisabledReason -> Maybe Double -> Maybe Text -> Maybe POSIX -> Maybe POSIX -> Maybe Integer -> MemberDetail

-- | Create a value of <a>MemberDetail</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:percentOfGraphUtilizationUpdatedTime:MemberDetail'</a>,
--   <a>memberDetail_percentOfGraphUtilizationUpdatedTime</a> - The date
--   and time when the graph utilization percentage was last updated.
--   
--   <a>$sel:status:MemberDetail'</a>, <a>memberDetail_status</a> - The
--   current membership status of the member account. The status can have
--   one of the following values:
--   
--   <ul>
--   <li><tt>INVITED</tt> - Indicates that the member was sent an
--   invitation but has not yet responded.</li>
--   <li><tt>VERIFICATION_IN_PROGRESS</tt> - Indicates that Detective is
--   verifying that the account identifier and email address provided for
--   the member account match. If they do match, then Detective sends the
--   invitation. If the email address and account identifier don't match,
--   then the member cannot be added to the behavior graph.</li>
--   <li><tt>VERIFICATION_FAILED</tt> - Indicates that the account and
--   email address provided for the member account do not match, and
--   Detective did not send an invitation to the account.</li>
--   <li><tt>ENABLED</tt> - Indicates that the member account accepted the
--   invitation to contribute to the behavior graph.</li>
--   <li><tt>ACCEPTED_BUT_DISABLED</tt> - Indicates that the member account
--   accepted the invitation but is prevented from contributing data to the
--   behavior graph. <tt>DisabledReason</tt> provides the reason why the
--   member account is not enabled.</li>
--   </ul>
--   
--   Member accounts that declined an invitation or that were removed from
--   the behavior graph are not included.
--   
--   <a>$sel:invitedTime:MemberDetail'</a>, <a>memberDetail_invitedTime</a>
--   - The date and time that Detective sent the invitation to the member
--   account. The value is in milliseconds since the epoch.
--   
--   <a>$sel:administratorId:MemberDetail'</a>,
--   <a>memberDetail_administratorId</a> - The AWS account identifier of
--   the administrator account for the behavior graph.
--   
--   <a>$sel:graphArn:MemberDetail'</a>, <a>memberDetail_graphArn</a> - The
--   ARN of the behavior graph that the member account was invited to.
--   
--   <a>$sel:masterId:MemberDetail'</a>, <a>memberDetail_masterId</a> - The
--   AWS account identifier of the administrator account for the behavior
--   graph.
--   
--   <a>$sel:accountId:MemberDetail'</a>, <a>memberDetail_accountId</a> -
--   The AWS account identifier for the member account.
--   
--   <a>$sel:disabledReason:MemberDetail'</a>,
--   <a>memberDetail_disabledReason</a> - For member accounts with a status
--   of <tt>ACCEPTED_BUT_DISABLED</tt>, the reason that the member account
--   is not enabled.
--   
--   The reason can have one of the following values:
--   
--   <ul>
--   <li><tt>VOLUME_TOO_HIGH</tt> - Indicates that adding the member
--   account would cause the data volume for the behavior graph to be too
--   high.</li>
--   <li><tt>VOLUME_UNKNOWN</tt> - Indicates that Detective is unable to
--   verify the data volume for the member account. This is usually because
--   the member account is not enrolled in Amazon GuardDuty.</li>
--   </ul>
--   
--   <a>$sel:percentOfGraphUtilization:MemberDetail'</a>,
--   <a>memberDetail_percentOfGraphUtilization</a> - The member account
--   data volume as a percentage of the maximum allowed data volume. 0
--   indicates 0 percent, and 100 indicates 100 percent.
--   
--   Note that this is not the percentage of the behavior graph data
--   volume.
--   
--   For example, the data volume for the behavior graph is 80 GB per day.
--   The maximum data volume is 160 GB per day. If the data volume for the
--   member account is 40 GB per day, then
--   <tt>PercentOfGraphUtilization</tt> is 25. It represents 25% of the
--   maximum allowed data volume.
--   
--   <a>$sel:emailAddress:MemberDetail'</a>,
--   <a>memberDetail_emailAddress</a> - The AWS account root user email
--   address for the member account.
--   
--   <a>$sel:volumeUsageUpdatedTime:MemberDetail'</a>,
--   <a>memberDetail_volumeUsageUpdatedTime</a> - The data and time when
--   the member account data volume was last updated.
--   
--   <a>$sel:updatedTime:MemberDetail'</a>, <a>memberDetail_updatedTime</a>
--   - The date and time that the member account was last updated. The
--   value is in milliseconds since the epoch.
--   
--   <a>$sel:volumeUsageInBytes:MemberDetail'</a>,
--   <a>memberDetail_volumeUsageInBytes</a> - The data volume in bytes per
--   day for the member account.
newMemberDetail :: MemberDetail

-- | A member account that was included in a request but for which the
--   request could not be processed.
--   
--   <i>See:</i> <a>newUnprocessedAccount</a> smart constructor.
data UnprocessedAccount
UnprocessedAccount' :: Maybe Text -> Maybe Text -> UnprocessedAccount

-- | Create a value of <a>UnprocessedAccount</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:accountId:UnprocessedAccount'</a>,
--   <a>unprocessedAccount_accountId</a> - The AWS account identifier of
--   the member account that was not processed.
--   
--   <a>$sel:reason:UnprocessedAccount'</a>,
--   <a>unprocessedAccount_reason</a> - The reason that the member account
--   request could not be processed.
newUnprocessedAccount :: UnprocessedAccount
