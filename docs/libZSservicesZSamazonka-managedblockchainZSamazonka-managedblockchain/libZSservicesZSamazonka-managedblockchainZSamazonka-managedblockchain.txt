-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/

@package libZSservicesZSamazonka-managedblockchainZSamazonka-managedblockchain
@version 2.0


module Network.AWS.ManagedBlockChain.Types.Edition
newtype Edition
Edition' :: Text -> Edition
[fromEdition] :: Edition -> Text
pattern Edition_STANDARD :: Edition
pattern Edition_STARTER :: Edition
instance Network.AWS.Data.XML.ToXML Network.AWS.ManagedBlockChain.Types.Edition.Edition
instance Network.AWS.Data.XML.FromXML Network.AWS.ManagedBlockChain.Types.Edition.Edition
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.ManagedBlockChain.Types.Edition.Edition
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ManagedBlockChain.Types.Edition.Edition
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.ManagedBlockChain.Types.Edition.Edition
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ManagedBlockChain.Types.Edition.Edition
instance Network.AWS.Data.Query.ToQuery Network.AWS.ManagedBlockChain.Types.Edition.Edition
instance Network.AWS.Data.Headers.ToHeader Network.AWS.ManagedBlockChain.Types.Edition.Edition
instance Network.AWS.Data.Log.ToLog Network.AWS.ManagedBlockChain.Types.Edition.Edition
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.ManagedBlockChain.Types.Edition.Edition
instance Network.AWS.Data.Text.ToText Network.AWS.ManagedBlockChain.Types.Edition.Edition
instance Network.AWS.Data.Text.FromText Network.AWS.ManagedBlockChain.Types.Edition.Edition
instance Control.DeepSeq.NFData Network.AWS.ManagedBlockChain.Types.Edition.Edition
instance Data.Hashable.Class.Hashable Network.AWS.ManagedBlockChain.Types.Edition.Edition
instance GHC.Generics.Generic Network.AWS.ManagedBlockChain.Types.Edition.Edition
instance GHC.Classes.Ord Network.AWS.ManagedBlockChain.Types.Edition.Edition
instance GHC.Classes.Eq Network.AWS.ManagedBlockChain.Types.Edition.Edition
instance GHC.Read.Read Network.AWS.ManagedBlockChain.Types.Edition.Edition
instance GHC.Show.Show Network.AWS.ManagedBlockChain.Types.Edition.Edition


module Network.AWS.ManagedBlockChain.Types.Framework
newtype Framework
Framework' :: Text -> Framework
[fromFramework] :: Framework -> Text
pattern Framework_ETHEREUM :: Framework
pattern Framework_HYPERLEDGER_FABRIC :: Framework
instance Network.AWS.Data.XML.ToXML Network.AWS.ManagedBlockChain.Types.Framework.Framework
instance Network.AWS.Data.XML.FromXML Network.AWS.ManagedBlockChain.Types.Framework.Framework
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.ManagedBlockChain.Types.Framework.Framework
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ManagedBlockChain.Types.Framework.Framework
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.ManagedBlockChain.Types.Framework.Framework
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ManagedBlockChain.Types.Framework.Framework
instance Network.AWS.Data.Query.ToQuery Network.AWS.ManagedBlockChain.Types.Framework.Framework
instance Network.AWS.Data.Headers.ToHeader Network.AWS.ManagedBlockChain.Types.Framework.Framework
instance Network.AWS.Data.Log.ToLog Network.AWS.ManagedBlockChain.Types.Framework.Framework
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.ManagedBlockChain.Types.Framework.Framework
instance Network.AWS.Data.Text.ToText Network.AWS.ManagedBlockChain.Types.Framework.Framework
instance Network.AWS.Data.Text.FromText Network.AWS.ManagedBlockChain.Types.Framework.Framework
instance Control.DeepSeq.NFData Network.AWS.ManagedBlockChain.Types.Framework.Framework
instance Data.Hashable.Class.Hashable Network.AWS.ManagedBlockChain.Types.Framework.Framework
instance GHC.Generics.Generic Network.AWS.ManagedBlockChain.Types.Framework.Framework
instance GHC.Classes.Ord Network.AWS.ManagedBlockChain.Types.Framework.Framework
instance GHC.Classes.Eq Network.AWS.ManagedBlockChain.Types.Framework.Framework
instance GHC.Read.Read Network.AWS.ManagedBlockChain.Types.Framework.Framework
instance GHC.Show.Show Network.AWS.ManagedBlockChain.Types.Framework.Framework


module Network.AWS.ManagedBlockChain.Types.InvitationStatus
newtype InvitationStatus
InvitationStatus' :: Text -> InvitationStatus
[fromInvitationStatus] :: InvitationStatus -> Text
pattern InvitationStatus_ACCEPTED :: InvitationStatus
pattern InvitationStatus_ACCEPTING :: InvitationStatus
pattern InvitationStatus_EXPIRED :: InvitationStatus
pattern InvitationStatus_PENDING :: InvitationStatus
pattern InvitationStatus_REJECTED :: InvitationStatus
instance Network.AWS.Data.XML.ToXML Network.AWS.ManagedBlockChain.Types.InvitationStatus.InvitationStatus
instance Network.AWS.Data.XML.FromXML Network.AWS.ManagedBlockChain.Types.InvitationStatus.InvitationStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.ManagedBlockChain.Types.InvitationStatus.InvitationStatus
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ManagedBlockChain.Types.InvitationStatus.InvitationStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.ManagedBlockChain.Types.InvitationStatus.InvitationStatus
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ManagedBlockChain.Types.InvitationStatus.InvitationStatus
instance Network.AWS.Data.Query.ToQuery Network.AWS.ManagedBlockChain.Types.InvitationStatus.InvitationStatus
instance Network.AWS.Data.Headers.ToHeader Network.AWS.ManagedBlockChain.Types.InvitationStatus.InvitationStatus
instance Network.AWS.Data.Log.ToLog Network.AWS.ManagedBlockChain.Types.InvitationStatus.InvitationStatus
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.ManagedBlockChain.Types.InvitationStatus.InvitationStatus
instance Network.AWS.Data.Text.ToText Network.AWS.ManagedBlockChain.Types.InvitationStatus.InvitationStatus
instance Network.AWS.Data.Text.FromText Network.AWS.ManagedBlockChain.Types.InvitationStatus.InvitationStatus
instance Control.DeepSeq.NFData Network.AWS.ManagedBlockChain.Types.InvitationStatus.InvitationStatus
instance Data.Hashable.Class.Hashable Network.AWS.ManagedBlockChain.Types.InvitationStatus.InvitationStatus
instance GHC.Generics.Generic Network.AWS.ManagedBlockChain.Types.InvitationStatus.InvitationStatus
instance GHC.Classes.Ord Network.AWS.ManagedBlockChain.Types.InvitationStatus.InvitationStatus
instance GHC.Classes.Eq Network.AWS.ManagedBlockChain.Types.InvitationStatus.InvitationStatus
instance GHC.Read.Read Network.AWS.ManagedBlockChain.Types.InvitationStatus.InvitationStatus
instance GHC.Show.Show Network.AWS.ManagedBlockChain.Types.InvitationStatus.InvitationStatus


module Network.AWS.ManagedBlockChain.Types.InviteAction

-- | An action to invite a specific AWS account to create a member and join
--   the network. The <tt>InviteAction</tt> is carried out when a
--   <tt>Proposal</tt> is <tt>APPROVED</tt>.
--   
--   Applies only to Hyperledger Fabric.
--   
--   <i>See:</i> <a>newInviteAction</a> smart constructor.
data InviteAction
InviteAction' :: Text -> InviteAction

-- | The AWS account ID to invite.
[$sel:principal:InviteAction'] :: InviteAction -> Text

-- | Create a value of <a>InviteAction</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:principal:InviteAction'</a>, <a>inviteAction_principal</a> -
--   The AWS account ID to invite.
newInviteAction :: Text -> InviteAction

-- | The AWS account ID to invite.
inviteAction_principal :: Lens' InviteAction Text
instance GHC.Generics.Generic Network.AWS.ManagedBlockChain.Types.InviteAction.InviteAction
instance GHC.Show.Show Network.AWS.ManagedBlockChain.Types.InviteAction.InviteAction
instance GHC.Read.Read Network.AWS.ManagedBlockChain.Types.InviteAction.InviteAction
instance GHC.Classes.Eq Network.AWS.ManagedBlockChain.Types.InviteAction.InviteAction
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ManagedBlockChain.Types.InviteAction.InviteAction
instance Data.Hashable.Class.Hashable Network.AWS.ManagedBlockChain.Types.InviteAction.InviteAction
instance Control.DeepSeq.NFData Network.AWS.ManagedBlockChain.Types.InviteAction.InviteAction
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ManagedBlockChain.Types.InviteAction.InviteAction


module Network.AWS.ManagedBlockChain.Types.LogConfiguration

-- | A configuration for logging events.
--   
--   <i>See:</i> <a>newLogConfiguration</a> smart constructor.
data LogConfiguration
LogConfiguration' :: Maybe Bool -> LogConfiguration

-- | Indicates whether logging is enabled.
[$sel:enabled:LogConfiguration'] :: LogConfiguration -> Maybe Bool

-- | Create a value of <a>LogConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:enabled:LogConfiguration'</a>, <a>logConfiguration_enabled</a>
--   - Indicates whether logging is enabled.
newLogConfiguration :: LogConfiguration

-- | Indicates whether logging is enabled.
logConfiguration_enabled :: Lens' LogConfiguration (Maybe Bool)
instance GHC.Generics.Generic Network.AWS.ManagedBlockChain.Types.LogConfiguration.LogConfiguration
instance GHC.Show.Show Network.AWS.ManagedBlockChain.Types.LogConfiguration.LogConfiguration
instance GHC.Read.Read Network.AWS.ManagedBlockChain.Types.LogConfiguration.LogConfiguration
instance GHC.Classes.Eq Network.AWS.ManagedBlockChain.Types.LogConfiguration.LogConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ManagedBlockChain.Types.LogConfiguration.LogConfiguration
instance Data.Hashable.Class.Hashable Network.AWS.ManagedBlockChain.Types.LogConfiguration.LogConfiguration
instance Control.DeepSeq.NFData Network.AWS.ManagedBlockChain.Types.LogConfiguration.LogConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ManagedBlockChain.Types.LogConfiguration.LogConfiguration


module Network.AWS.ManagedBlockChain.Types.LogConfigurations

-- | A collection of log configurations.
--   
--   <i>See:</i> <a>newLogConfigurations</a> smart constructor.
data LogConfigurations
LogConfigurations' :: Maybe LogConfiguration -> LogConfigurations

-- | Parameters for publishing logs to Amazon CloudWatch Logs.
[$sel:cloudwatch:LogConfigurations'] :: LogConfigurations -> Maybe LogConfiguration

-- | Create a value of <a>LogConfigurations</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cloudwatch:LogConfigurations'</a>,
--   <a>logConfigurations_cloudwatch</a> - Parameters for publishing logs
--   to Amazon CloudWatch Logs.
newLogConfigurations :: LogConfigurations

-- | Parameters for publishing logs to Amazon CloudWatch Logs.
logConfigurations_cloudwatch :: Lens' LogConfigurations (Maybe LogConfiguration)
instance GHC.Generics.Generic Network.AWS.ManagedBlockChain.Types.LogConfigurations.LogConfigurations
instance GHC.Show.Show Network.AWS.ManagedBlockChain.Types.LogConfigurations.LogConfigurations
instance GHC.Read.Read Network.AWS.ManagedBlockChain.Types.LogConfigurations.LogConfigurations
instance GHC.Classes.Eq Network.AWS.ManagedBlockChain.Types.LogConfigurations.LogConfigurations
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ManagedBlockChain.Types.LogConfigurations.LogConfigurations
instance Data.Hashable.Class.Hashable Network.AWS.ManagedBlockChain.Types.LogConfigurations.LogConfigurations
instance Control.DeepSeq.NFData Network.AWS.ManagedBlockChain.Types.LogConfigurations.LogConfigurations
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ManagedBlockChain.Types.LogConfigurations.LogConfigurations


module Network.AWS.ManagedBlockChain.Types.MemberFabricAttributes

-- | Attributes of Hyperledger Fabric for a member in a Managed Blockchain
--   network using the Hyperledger Fabric framework.
--   
--   <i>See:</i> <a>newMemberFabricAttributes</a> smart constructor.
data MemberFabricAttributes
MemberFabricAttributes' :: Maybe Text -> Maybe Text -> MemberFabricAttributes

-- | The endpoint used to access the member's certificate authority.
[$sel:caEndpoint:MemberFabricAttributes'] :: MemberFabricAttributes -> Maybe Text

-- | The user name for the initial administrator user for the member.
[$sel:adminUsername:MemberFabricAttributes'] :: MemberFabricAttributes -> Maybe Text

-- | Create a value of <a>MemberFabricAttributes</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:caEndpoint:MemberFabricAttributes'</a>,
--   <a>memberFabricAttributes_caEndpoint</a> - The endpoint used to access
--   the member's certificate authority.
--   
--   <a>$sel:adminUsername:MemberFabricAttributes'</a>,
--   <a>memberFabricAttributes_adminUsername</a> - The user name for the
--   initial administrator user for the member.
newMemberFabricAttributes :: MemberFabricAttributes

-- | The endpoint used to access the member's certificate authority.
memberFabricAttributes_caEndpoint :: Lens' MemberFabricAttributes (Maybe Text)

-- | The user name for the initial administrator user for the member.
memberFabricAttributes_adminUsername :: Lens' MemberFabricAttributes (Maybe Text)
instance GHC.Generics.Generic Network.AWS.ManagedBlockChain.Types.MemberFabricAttributes.MemberFabricAttributes
instance GHC.Show.Show Network.AWS.ManagedBlockChain.Types.MemberFabricAttributes.MemberFabricAttributes
instance GHC.Read.Read Network.AWS.ManagedBlockChain.Types.MemberFabricAttributes.MemberFabricAttributes
instance GHC.Classes.Eq Network.AWS.ManagedBlockChain.Types.MemberFabricAttributes.MemberFabricAttributes
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ManagedBlockChain.Types.MemberFabricAttributes.MemberFabricAttributes
instance Data.Hashable.Class.Hashable Network.AWS.ManagedBlockChain.Types.MemberFabricAttributes.MemberFabricAttributes
instance Control.DeepSeq.NFData Network.AWS.ManagedBlockChain.Types.MemberFabricAttributes.MemberFabricAttributes


module Network.AWS.ManagedBlockChain.Types.MemberFabricConfiguration

-- | Configuration properties for Hyperledger Fabric for a member in a
--   Managed Blockchain network using the Hyperledger Fabric framework.
--   
--   <i>See:</i> <a>newMemberFabricConfiguration</a> smart constructor.
data MemberFabricConfiguration
MemberFabricConfiguration' :: Text -> Sensitive Text -> MemberFabricConfiguration

-- | The user name for the member's initial administrative user.
[$sel:adminUsername:MemberFabricConfiguration'] :: MemberFabricConfiguration -> Text

-- | The password for the member's initial administrative user. The
--   <tt>AdminPassword</tt> must be at least eight characters long and no
--   more than 32 characters. It must contain at least one uppercase
--   letter, one lowercase letter, and one digit. It cannot have a single
--   quotation mark (‘), a double quotation marks (“), a forward slash(/),
--   a backward slash(\), @, or a space.
[$sel:adminPassword:MemberFabricConfiguration'] :: MemberFabricConfiguration -> Sensitive Text

-- | Create a value of <a>MemberFabricConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:adminUsername:MemberFabricConfiguration'</a>,
--   <a>memberFabricConfiguration_adminUsername</a> - The user name for the
--   member's initial administrative user.
--   
--   <a>$sel:adminPassword:MemberFabricConfiguration'</a>,
--   <a>memberFabricConfiguration_adminPassword</a> - The password for the
--   member's initial administrative user. The <tt>AdminPassword</tt> must
--   be at least eight characters long and no more than 32 characters. It
--   must contain at least one uppercase letter, one lowercase letter, and
--   one digit. It cannot have a single quotation mark (‘), a double
--   quotation marks (“), a forward slash(/), a backward slash(\), @, or a
--   space.
newMemberFabricConfiguration :: Text -> Text -> MemberFabricConfiguration

-- | The user name for the member's initial administrative user.
memberFabricConfiguration_adminUsername :: Lens' MemberFabricConfiguration Text

-- | The password for the member's initial administrative user. The
--   <tt>AdminPassword</tt> must be at least eight characters long and no
--   more than 32 characters. It must contain at least one uppercase
--   letter, one lowercase letter, and one digit. It cannot have a single
--   quotation mark (‘), a double quotation marks (“), a forward slash(/),
--   a backward slash(\), @, or a space.
memberFabricConfiguration_adminPassword :: Lens' MemberFabricConfiguration Text
instance GHC.Generics.Generic Network.AWS.ManagedBlockChain.Types.MemberFabricConfiguration.MemberFabricConfiguration
instance GHC.Show.Show Network.AWS.ManagedBlockChain.Types.MemberFabricConfiguration.MemberFabricConfiguration
instance GHC.Classes.Eq Network.AWS.ManagedBlockChain.Types.MemberFabricConfiguration.MemberFabricConfiguration
instance Data.Hashable.Class.Hashable Network.AWS.ManagedBlockChain.Types.MemberFabricConfiguration.MemberFabricConfiguration
instance Control.DeepSeq.NFData Network.AWS.ManagedBlockChain.Types.MemberFabricConfiguration.MemberFabricConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ManagedBlockChain.Types.MemberFabricConfiguration.MemberFabricConfiguration


module Network.AWS.ManagedBlockChain.Types.MemberFabricLogPublishingConfiguration

-- | Configuration properties for logging events associated with a member
--   of a Managed Blockchain network using the Hyperledger Fabric
--   framework.
--   
--   <i>See:</i> <a>newMemberFabricLogPublishingConfiguration</a> smart
--   constructor.
data MemberFabricLogPublishingConfiguration
MemberFabricLogPublishingConfiguration' :: Maybe LogConfigurations -> MemberFabricLogPublishingConfiguration

-- | Configuration properties for logging events associated with a member's
--   Certificate Authority (CA). CA logs help you determine when a member
--   in your account joins the network, or when new peers register with a
--   member CA.
[$sel:caLogs:MemberFabricLogPublishingConfiguration'] :: MemberFabricLogPublishingConfiguration -> Maybe LogConfigurations

-- | Create a value of <a>MemberFabricLogPublishingConfiguration</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:caLogs:MemberFabricLogPublishingConfiguration'</a>,
--   <a>memberFabricLogPublishingConfiguration_caLogs</a> - Configuration
--   properties for logging events associated with a member's Certificate
--   Authority (CA). CA logs help you determine when a member in your
--   account joins the network, or when new peers register with a member
--   CA.
newMemberFabricLogPublishingConfiguration :: MemberFabricLogPublishingConfiguration

-- | Configuration properties for logging events associated with a member's
--   Certificate Authority (CA). CA logs help you determine when a member
--   in your account joins the network, or when new peers register with a
--   member CA.
memberFabricLogPublishingConfiguration_caLogs :: Lens' MemberFabricLogPublishingConfiguration (Maybe LogConfigurations)
instance GHC.Generics.Generic Network.AWS.ManagedBlockChain.Types.MemberFabricLogPublishingConfiguration.MemberFabricLogPublishingConfiguration
instance GHC.Show.Show Network.AWS.ManagedBlockChain.Types.MemberFabricLogPublishingConfiguration.MemberFabricLogPublishingConfiguration
instance GHC.Read.Read Network.AWS.ManagedBlockChain.Types.MemberFabricLogPublishingConfiguration.MemberFabricLogPublishingConfiguration
instance GHC.Classes.Eq Network.AWS.ManagedBlockChain.Types.MemberFabricLogPublishingConfiguration.MemberFabricLogPublishingConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ManagedBlockChain.Types.MemberFabricLogPublishingConfiguration.MemberFabricLogPublishingConfiguration
instance Data.Hashable.Class.Hashable Network.AWS.ManagedBlockChain.Types.MemberFabricLogPublishingConfiguration.MemberFabricLogPublishingConfiguration
instance Control.DeepSeq.NFData Network.AWS.ManagedBlockChain.Types.MemberFabricLogPublishingConfiguration.MemberFabricLogPublishingConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ManagedBlockChain.Types.MemberFabricLogPublishingConfiguration.MemberFabricLogPublishingConfiguration


module Network.AWS.ManagedBlockChain.Types.MemberFrameworkAttributes

-- | Attributes relevant to a member for the blockchain framework that the
--   Managed Blockchain network uses.
--   
--   <i>See:</i> <a>newMemberFrameworkAttributes</a> smart constructor.
data MemberFrameworkAttributes
MemberFrameworkAttributes' :: Maybe MemberFabricAttributes -> MemberFrameworkAttributes

-- | Attributes of Hyperledger Fabric relevant to a member on a Managed
--   Blockchain network that uses Hyperledger Fabric.
[$sel:fabric:MemberFrameworkAttributes'] :: MemberFrameworkAttributes -> Maybe MemberFabricAttributes

-- | Create a value of <a>MemberFrameworkAttributes</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fabric:MemberFrameworkAttributes'</a>,
--   <a>memberFrameworkAttributes_fabric</a> - Attributes of Hyperledger
--   Fabric relevant to a member on a Managed Blockchain network that uses
--   Hyperledger Fabric.
newMemberFrameworkAttributes :: MemberFrameworkAttributes

-- | Attributes of Hyperledger Fabric relevant to a member on a Managed
--   Blockchain network that uses Hyperledger Fabric.
memberFrameworkAttributes_fabric :: Lens' MemberFrameworkAttributes (Maybe MemberFabricAttributes)
instance GHC.Generics.Generic Network.AWS.ManagedBlockChain.Types.MemberFrameworkAttributes.MemberFrameworkAttributes
instance GHC.Show.Show Network.AWS.ManagedBlockChain.Types.MemberFrameworkAttributes.MemberFrameworkAttributes
instance GHC.Read.Read Network.AWS.ManagedBlockChain.Types.MemberFrameworkAttributes.MemberFrameworkAttributes
instance GHC.Classes.Eq Network.AWS.ManagedBlockChain.Types.MemberFrameworkAttributes.MemberFrameworkAttributes
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ManagedBlockChain.Types.MemberFrameworkAttributes.MemberFrameworkAttributes
instance Data.Hashable.Class.Hashable Network.AWS.ManagedBlockChain.Types.MemberFrameworkAttributes.MemberFrameworkAttributes
instance Control.DeepSeq.NFData Network.AWS.ManagedBlockChain.Types.MemberFrameworkAttributes.MemberFrameworkAttributes


module Network.AWS.ManagedBlockChain.Types.MemberFrameworkConfiguration

-- | Configuration properties relevant to a member for the blockchain
--   framework that the Managed Blockchain network uses.
--   
--   <i>See:</i> <a>newMemberFrameworkConfiguration</a> smart constructor.
data MemberFrameworkConfiguration
MemberFrameworkConfiguration' :: Maybe MemberFabricConfiguration -> MemberFrameworkConfiguration

-- | Attributes of Hyperledger Fabric for a member on a Managed Blockchain
--   network that uses Hyperledger Fabric.
[$sel:fabric:MemberFrameworkConfiguration'] :: MemberFrameworkConfiguration -> Maybe MemberFabricConfiguration

-- | Create a value of <a>MemberFrameworkConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fabric:MemberFrameworkConfiguration'</a>,
--   <a>memberFrameworkConfiguration_fabric</a> - Attributes of Hyperledger
--   Fabric for a member on a Managed Blockchain network that uses
--   Hyperledger Fabric.
newMemberFrameworkConfiguration :: MemberFrameworkConfiguration

-- | Attributes of Hyperledger Fabric for a member on a Managed Blockchain
--   network that uses Hyperledger Fabric.
memberFrameworkConfiguration_fabric :: Lens' MemberFrameworkConfiguration (Maybe MemberFabricConfiguration)
instance GHC.Generics.Generic Network.AWS.ManagedBlockChain.Types.MemberFrameworkConfiguration.MemberFrameworkConfiguration
instance GHC.Show.Show Network.AWS.ManagedBlockChain.Types.MemberFrameworkConfiguration.MemberFrameworkConfiguration
instance GHC.Classes.Eq Network.AWS.ManagedBlockChain.Types.MemberFrameworkConfiguration.MemberFrameworkConfiguration
instance Data.Hashable.Class.Hashable Network.AWS.ManagedBlockChain.Types.MemberFrameworkConfiguration.MemberFrameworkConfiguration
instance Control.DeepSeq.NFData Network.AWS.ManagedBlockChain.Types.MemberFrameworkConfiguration.MemberFrameworkConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ManagedBlockChain.Types.MemberFrameworkConfiguration.MemberFrameworkConfiguration


module Network.AWS.ManagedBlockChain.Types.MemberLogPublishingConfiguration

-- | Configuration properties for logging events associated with a member
--   of a Managed Blockchain network.
--   
--   <i>See:</i> <a>newMemberLogPublishingConfiguration</a> smart
--   constructor.
data MemberLogPublishingConfiguration
MemberLogPublishingConfiguration' :: Maybe MemberFabricLogPublishingConfiguration -> MemberLogPublishingConfiguration

-- | Configuration properties for logging events associated with a member
--   of a Managed Blockchain network using the Hyperledger Fabric
--   framework.
[$sel:fabric:MemberLogPublishingConfiguration'] :: MemberLogPublishingConfiguration -> Maybe MemberFabricLogPublishingConfiguration

-- | Create a value of <a>MemberLogPublishingConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fabric:MemberLogPublishingConfiguration'</a>,
--   <a>memberLogPublishingConfiguration_fabric</a> - Configuration
--   properties for logging events associated with a member of a Managed
--   Blockchain network using the Hyperledger Fabric framework.
newMemberLogPublishingConfiguration :: MemberLogPublishingConfiguration

-- | Configuration properties for logging events associated with a member
--   of a Managed Blockchain network using the Hyperledger Fabric
--   framework.
memberLogPublishingConfiguration_fabric :: Lens' MemberLogPublishingConfiguration (Maybe MemberFabricLogPublishingConfiguration)
instance GHC.Generics.Generic Network.AWS.ManagedBlockChain.Types.MemberLogPublishingConfiguration.MemberLogPublishingConfiguration
instance GHC.Show.Show Network.AWS.ManagedBlockChain.Types.MemberLogPublishingConfiguration.MemberLogPublishingConfiguration
instance GHC.Read.Read Network.AWS.ManagedBlockChain.Types.MemberLogPublishingConfiguration.MemberLogPublishingConfiguration
instance GHC.Classes.Eq Network.AWS.ManagedBlockChain.Types.MemberLogPublishingConfiguration.MemberLogPublishingConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ManagedBlockChain.Types.MemberLogPublishingConfiguration.MemberLogPublishingConfiguration
instance Data.Hashable.Class.Hashable Network.AWS.ManagedBlockChain.Types.MemberLogPublishingConfiguration.MemberLogPublishingConfiguration
instance Control.DeepSeq.NFData Network.AWS.ManagedBlockChain.Types.MemberLogPublishingConfiguration.MemberLogPublishingConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ManagedBlockChain.Types.MemberLogPublishingConfiguration.MemberLogPublishingConfiguration


module Network.AWS.ManagedBlockChain.Types.MemberConfiguration

-- | Configuration properties of the member.
--   
--   Applies only to Hyperledger Fabric.
--   
--   <i>See:</i> <a>newMemberConfiguration</a> smart constructor.
data MemberConfiguration
MemberConfiguration' :: Maybe Text -> Maybe MemberLogPublishingConfiguration -> Maybe Text -> Maybe (HashMap Text Text) -> Text -> MemberFrameworkConfiguration -> MemberConfiguration

-- | The Amazon Resource Name (ARN) of the customer managed key in AWS Key
--   Management Service (AWS KMS) to use for encryption at rest in the
--   member. This parameter is inherited by any nodes that this member
--   creates.
--   
--   Use one of the following options to specify this parameter:
--   
--   <ul>
--   <li><b>Undefined or empty string</b> - The member uses an AWS owned
--   KMS key for encryption by default.</li>
--   <li><b>A valid symmetric customer managed KMS key</b> - The member
--   uses the specified key for encryption.Amazon Managed Blockchain
--   doesn't support asymmetric keys. For more information, see <a>Using
--   symmetric and asymmetric keys</a> in the <i>AWS Key Management Service
--   Developer Guide</i>.The following is an example of a KMS key ARN:
--   <tt>arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</tt></li>
--   </ul>
[$sel:kmsKeyArn:MemberConfiguration'] :: MemberConfiguration -> Maybe Text

-- | Configuration properties for logging events associated with a member
--   of a Managed Blockchain network.
[$sel:logPublishingConfiguration:MemberConfiguration'] :: MemberConfiguration -> Maybe MemberLogPublishingConfiguration

-- | An optional description of the member.
[$sel:description:MemberConfiguration'] :: MemberConfiguration -> Maybe Text

-- | Tags assigned to the member. Tags consist of a key and optional value.
--   For more information about tags, see <a>Tagging Resources</a> in the
--   <i>Amazon Managed Blockchain Hyperledger Fabric Developer Guide</i>.
--   
--   When specifying tags during creation, you can specify multiple
--   key-value pairs in a single request, with an overall maximum of 50
--   tags added to each resource.
[$sel:tags:MemberConfiguration'] :: MemberConfiguration -> Maybe (HashMap Text Text)

-- | The name of the member.
[$sel:name:MemberConfiguration'] :: MemberConfiguration -> Text

-- | Configuration properties of the blockchain framework relevant to the
--   member.
[$sel:frameworkConfiguration:MemberConfiguration'] :: MemberConfiguration -> MemberFrameworkConfiguration

-- | Create a value of <a>MemberConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:kmsKeyArn:MemberConfiguration'</a>,
--   <a>memberConfiguration_kmsKeyArn</a> - The Amazon Resource Name (ARN)
--   of the customer managed key in AWS Key Management Service (AWS KMS) to
--   use for encryption at rest in the member. This parameter is inherited
--   by any nodes that this member creates.
--   
--   Use one of the following options to specify this parameter:
--   
--   <ul>
--   <li><b>Undefined or empty string</b> - The member uses an AWS owned
--   KMS key for encryption by default.</li>
--   <li><b>A valid symmetric customer managed KMS key</b> - The member
--   uses the specified key for encryption.Amazon Managed Blockchain
--   doesn't support asymmetric keys. For more information, see <a>Using
--   symmetric and asymmetric keys</a> in the <i>AWS Key Management Service
--   Developer Guide</i>.The following is an example of a KMS key ARN:
--   <tt>arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</tt></li>
--   </ul>
--   
--   <a>$sel:logPublishingConfiguration:MemberConfiguration'</a>,
--   <a>memberConfiguration_logPublishingConfiguration</a> - Configuration
--   properties for logging events associated with a member of a Managed
--   Blockchain network.
--   
--   <a>$sel:description:MemberConfiguration'</a>,
--   <a>memberConfiguration_description</a> - An optional description of
--   the member.
--   
--   <a>$sel:tags:MemberConfiguration'</a>, <a>memberConfiguration_tags</a>
--   - Tags assigned to the member. Tags consist of a key and optional
--   value. For more information about tags, see <a>Tagging Resources</a>
--   in the <i>Amazon Managed Blockchain Hyperledger Fabric Developer
--   Guide</i>.
--   
--   When specifying tags during creation, you can specify multiple
--   key-value pairs in a single request, with an overall maximum of 50
--   tags added to each resource.
--   
--   <a>$sel:name:MemberConfiguration'</a>, <a>memberConfiguration_name</a>
--   - The name of the member.
--   
--   <a>$sel:frameworkConfiguration:MemberConfiguration'</a>,
--   <a>memberConfiguration_frameworkConfiguration</a> - Configuration
--   properties of the blockchain framework relevant to the member.
newMemberConfiguration :: Text -> MemberFrameworkConfiguration -> MemberConfiguration

-- | The Amazon Resource Name (ARN) of the customer managed key in AWS Key
--   Management Service (AWS KMS) to use for encryption at rest in the
--   member. This parameter is inherited by any nodes that this member
--   creates.
--   
--   Use one of the following options to specify this parameter:
--   
--   <ul>
--   <li><b>Undefined or empty string</b> - The member uses an AWS owned
--   KMS key for encryption by default.</li>
--   <li><b>A valid symmetric customer managed KMS key</b> - The member
--   uses the specified key for encryption.Amazon Managed Blockchain
--   doesn't support asymmetric keys. For more information, see <a>Using
--   symmetric and asymmetric keys</a> in the <i>AWS Key Management Service
--   Developer Guide</i>.The following is an example of a KMS key ARN:
--   <tt>arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</tt></li>
--   </ul>
memberConfiguration_kmsKeyArn :: Lens' MemberConfiguration (Maybe Text)

-- | Configuration properties for logging events associated with a member
--   of a Managed Blockchain network.
memberConfiguration_logPublishingConfiguration :: Lens' MemberConfiguration (Maybe MemberLogPublishingConfiguration)

-- | An optional description of the member.
memberConfiguration_description :: Lens' MemberConfiguration (Maybe Text)

-- | Tags assigned to the member. Tags consist of a key and optional value.
--   For more information about tags, see <a>Tagging Resources</a> in the
--   <i>Amazon Managed Blockchain Hyperledger Fabric Developer Guide</i>.
--   
--   When specifying tags during creation, you can specify multiple
--   key-value pairs in a single request, with an overall maximum of 50
--   tags added to each resource.
memberConfiguration_tags :: Lens' MemberConfiguration (Maybe (HashMap Text Text))

-- | The name of the member.
memberConfiguration_name :: Lens' MemberConfiguration Text

-- | Configuration properties of the blockchain framework relevant to the
--   member.
memberConfiguration_frameworkConfiguration :: Lens' MemberConfiguration MemberFrameworkConfiguration
instance GHC.Generics.Generic Network.AWS.ManagedBlockChain.Types.MemberConfiguration.MemberConfiguration
instance GHC.Show.Show Network.AWS.ManagedBlockChain.Types.MemberConfiguration.MemberConfiguration
instance GHC.Classes.Eq Network.AWS.ManagedBlockChain.Types.MemberConfiguration.MemberConfiguration
instance Data.Hashable.Class.Hashable Network.AWS.ManagedBlockChain.Types.MemberConfiguration.MemberConfiguration
instance Control.DeepSeq.NFData Network.AWS.ManagedBlockChain.Types.MemberConfiguration.MemberConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ManagedBlockChain.Types.MemberConfiguration.MemberConfiguration


module Network.AWS.ManagedBlockChain.Types.MemberStatus
newtype MemberStatus
MemberStatus' :: Text -> MemberStatus
[fromMemberStatus] :: MemberStatus -> Text
pattern MemberStatus_AVAILABLE :: MemberStatus
pattern MemberStatus_CREATE_FAILED :: MemberStatus
pattern MemberStatus_CREATING :: MemberStatus
pattern MemberStatus_DELETED :: MemberStatus
pattern MemberStatus_DELETING :: MemberStatus
pattern MemberStatus_INACCESSIBLE_ENCRYPTION_KEY :: MemberStatus
pattern MemberStatus_UPDATING :: MemberStatus
instance Network.AWS.Data.XML.ToXML Network.AWS.ManagedBlockChain.Types.MemberStatus.MemberStatus
instance Network.AWS.Data.XML.FromXML Network.AWS.ManagedBlockChain.Types.MemberStatus.MemberStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.ManagedBlockChain.Types.MemberStatus.MemberStatus
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ManagedBlockChain.Types.MemberStatus.MemberStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.ManagedBlockChain.Types.MemberStatus.MemberStatus
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ManagedBlockChain.Types.MemberStatus.MemberStatus
instance Network.AWS.Data.Query.ToQuery Network.AWS.ManagedBlockChain.Types.MemberStatus.MemberStatus
instance Network.AWS.Data.Headers.ToHeader Network.AWS.ManagedBlockChain.Types.MemberStatus.MemberStatus
instance Network.AWS.Data.Log.ToLog Network.AWS.ManagedBlockChain.Types.MemberStatus.MemberStatus
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.ManagedBlockChain.Types.MemberStatus.MemberStatus
instance Network.AWS.Data.Text.ToText Network.AWS.ManagedBlockChain.Types.MemberStatus.MemberStatus
instance Network.AWS.Data.Text.FromText Network.AWS.ManagedBlockChain.Types.MemberStatus.MemberStatus
instance Control.DeepSeq.NFData Network.AWS.ManagedBlockChain.Types.MemberStatus.MemberStatus
instance Data.Hashable.Class.Hashable Network.AWS.ManagedBlockChain.Types.MemberStatus.MemberStatus
instance GHC.Generics.Generic Network.AWS.ManagedBlockChain.Types.MemberStatus.MemberStatus
instance GHC.Classes.Ord Network.AWS.ManagedBlockChain.Types.MemberStatus.MemberStatus
instance GHC.Classes.Eq Network.AWS.ManagedBlockChain.Types.MemberStatus.MemberStatus
instance GHC.Read.Read Network.AWS.ManagedBlockChain.Types.MemberStatus.MemberStatus
instance GHC.Show.Show Network.AWS.ManagedBlockChain.Types.MemberStatus.MemberStatus


module Network.AWS.ManagedBlockChain.Types.Member

-- | Member configuration properties.
--   
--   Applies only to Hyperledger Fabric.
--   
--   <i>See:</i> <a>newMember</a> smart constructor.
data Member
Member' :: Maybe MemberStatus -> Maybe Text -> Maybe MemberLogPublishingConfiguration -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe MemberFrameworkAttributes -> Maybe Text -> Maybe (HashMap Text Text) -> Member

-- | The status of a member.
--   
--   <ul>
--   <li><tt>CREATING</tt> - The AWS account is in the process of creating
--   a member.</li>
--   <li><tt>AVAILABLE</tt> - The member has been created and can
--   participate in the network.</li>
--   <li><tt>CREATE_FAILED</tt> - The AWS account attempted to create a
--   member and creation failed.</li>
--   <li><tt>UPDATING</tt> - The member is in the process of being
--   updated.</li>
--   <li><tt>DELETING</tt> - The member and all associated resources are in
--   the process of being deleted. Either the AWS account that owns the
--   member deleted it, or the member is being deleted as the result of an
--   <tt>APPROVED</tt> <tt>PROPOSAL</tt> to remove the member.</li>
--   <li><tt>DELETED</tt> - The member can no longer participate on the
--   network and all associated resources are deleted. Either the AWS
--   account that owns the member deleted it, or the member is being
--   deleted as the result of an <tt>APPROVED</tt> <tt>PROPOSAL</tt> to
--   remove the member.</li>
--   <li><tt>INACCESSIBLE_ENCRYPTION_KEY</tt> - The member is impaired and
--   might not function as expected because it cannot access the specified
--   customer managed key in AWS KMS for encryption at rest. Either the KMS
--   key was disabled or deleted, or the grants on the key were revoked.The
--   effect of disabling or deleting a key, or revoking a grant is not
--   immediate. The member resource might take some time to find that the
--   key is inaccessible. When a resource is in this state, we recommend
--   deleting and recreating the resource.</li>
--   </ul>
[$sel:status:Member'] :: Member -> Maybe MemberStatus

-- | The Amazon Resource Name (ARN) of the customer managed key in AWS Key
--   Management Service (AWS KMS) that the member uses for encryption at
--   rest. If the value of this parameter is <tt>"AWS Owned KMS Key"</tt>,
--   the member uses an AWS owned KMS key for encryption. This parameter is
--   inherited by the nodes that this member owns.
[$sel:kmsKeyArn:Member'] :: Member -> Maybe Text

-- | Configuration properties for logging events associated with a member.
[$sel:logPublishingConfiguration:Member'] :: Member -> Maybe MemberLogPublishingConfiguration

-- | The Amazon Resource Name (ARN) of the member. For more information
--   about ARNs and their format, see <a>Amazon Resource Names (ARNs)</a>
--   in the <i>AWS General Reference</i>.
[$sel:arn:Member'] :: Member -> Maybe Text

-- | The unique identifier of the network to which the member belongs.
[$sel:networkId:Member'] :: Member -> Maybe Text

-- | The name of the member.
[$sel:name:Member'] :: Member -> Maybe Text

-- | The unique identifier of the member.
[$sel:id:Member'] :: Member -> Maybe Text

-- | The date and time that the member was created.
[$sel:creationDate:Member'] :: Member -> Maybe POSIX

-- | Attributes relevant to a member for the blockchain framework that the
--   Managed Blockchain network uses.
[$sel:frameworkAttributes:Member'] :: Member -> Maybe MemberFrameworkAttributes

-- | An optional description for the member.
[$sel:description:Member'] :: Member -> Maybe Text

-- | Tags assigned to the member. Tags consist of a key and optional value.
--   For more information about tags, see <a>Tagging Resources</a> in the
--   <i>Amazon Managed Blockchain Hyperledger Fabric Developer Guide</i>.
[$sel:tags:Member'] :: Member -> Maybe (HashMap Text Text)

-- | Create a value of <a>Member</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:Member'</a>, <a>member_status</a> - The status of a
--   member.
--   
--   <ul>
--   <li><tt>CREATING</tt> - The AWS account is in the process of creating
--   a member.</li>
--   <li><tt>AVAILABLE</tt> - The member has been created and can
--   participate in the network.</li>
--   <li><tt>CREATE_FAILED</tt> - The AWS account attempted to create a
--   member and creation failed.</li>
--   <li><tt>UPDATING</tt> - The member is in the process of being
--   updated.</li>
--   <li><tt>DELETING</tt> - The member and all associated resources are in
--   the process of being deleted. Either the AWS account that owns the
--   member deleted it, or the member is being deleted as the result of an
--   <tt>APPROVED</tt> <tt>PROPOSAL</tt> to remove the member.</li>
--   <li><tt>DELETED</tt> - The member can no longer participate on the
--   network and all associated resources are deleted. Either the AWS
--   account that owns the member deleted it, or the member is being
--   deleted as the result of an <tt>APPROVED</tt> <tt>PROPOSAL</tt> to
--   remove the member.</li>
--   <li><tt>INACCESSIBLE_ENCRYPTION_KEY</tt> - The member is impaired and
--   might not function as expected because it cannot access the specified
--   customer managed key in AWS KMS for encryption at rest. Either the KMS
--   key was disabled or deleted, or the grants on the key were revoked.The
--   effect of disabling or deleting a key, or revoking a grant is not
--   immediate. The member resource might take some time to find that the
--   key is inaccessible. When a resource is in this state, we recommend
--   deleting and recreating the resource.</li>
--   </ul>
--   
--   <a>$sel:kmsKeyArn:Member'</a>, <a>member_kmsKeyArn</a> - The Amazon
--   Resource Name (ARN) of the customer managed key in AWS Key Management
--   Service (AWS KMS) that the member uses for encryption at rest. If the
--   value of this parameter is <tt>"AWS Owned KMS Key"</tt>, the member
--   uses an AWS owned KMS key for encryption. This parameter is inherited
--   by the nodes that this member owns.
--   
--   <a>$sel:logPublishingConfiguration:Member'</a>,
--   <a>member_logPublishingConfiguration</a> - Configuration properties
--   for logging events associated with a member.
--   
--   <a>$sel:arn:Member'</a>, <a>member_arn</a> - The Amazon Resource Name
--   (ARN) of the member. For more information about ARNs and their format,
--   see <a>Amazon Resource Names (ARNs)</a> in the <i>AWS General
--   Reference</i>.
--   
--   <a>$sel:networkId:Member'</a>, <a>member_networkId</a> - The unique
--   identifier of the network to which the member belongs.
--   
--   <a>$sel:name:Member'</a>, <a>member_name</a> - The name of the member.
--   
--   <a>$sel:id:Member'</a>, <a>member_id</a> - The unique identifier of
--   the member.
--   
--   <a>$sel:creationDate:Member'</a>, <a>member_creationDate</a> - The
--   date and time that the member was created.
--   
--   <a>$sel:frameworkAttributes:Member'</a>,
--   <a>member_frameworkAttributes</a> - Attributes relevant to a member
--   for the blockchain framework that the Managed Blockchain network uses.
--   
--   <a>$sel:description:Member'</a>, <a>member_description</a> - An
--   optional description for the member.
--   
--   <a>$sel:tags:Member'</a>, <a>member_tags</a> - Tags assigned to the
--   member. Tags consist of a key and optional value. For more information
--   about tags, see <a>Tagging Resources</a> in the <i>Amazon Managed
--   Blockchain Hyperledger Fabric Developer Guide</i>.
newMember :: Member

-- | The status of a member.
--   
--   <ul>
--   <li><tt>CREATING</tt> - The AWS account is in the process of creating
--   a member.</li>
--   <li><tt>AVAILABLE</tt> - The member has been created and can
--   participate in the network.</li>
--   <li><tt>CREATE_FAILED</tt> - The AWS account attempted to create a
--   member and creation failed.</li>
--   <li><tt>UPDATING</tt> - The member is in the process of being
--   updated.</li>
--   <li><tt>DELETING</tt> - The member and all associated resources are in
--   the process of being deleted. Either the AWS account that owns the
--   member deleted it, or the member is being deleted as the result of an
--   <tt>APPROVED</tt> <tt>PROPOSAL</tt> to remove the member.</li>
--   <li><tt>DELETED</tt> - The member can no longer participate on the
--   network and all associated resources are deleted. Either the AWS
--   account that owns the member deleted it, or the member is being
--   deleted as the result of an <tt>APPROVED</tt> <tt>PROPOSAL</tt> to
--   remove the member.</li>
--   <li><tt>INACCESSIBLE_ENCRYPTION_KEY</tt> - The member is impaired and
--   might not function as expected because it cannot access the specified
--   customer managed key in AWS KMS for encryption at rest. Either the KMS
--   key was disabled or deleted, or the grants on the key were revoked.The
--   effect of disabling or deleting a key, or revoking a grant is not
--   immediate. The member resource might take some time to find that the
--   key is inaccessible. When a resource is in this state, we recommend
--   deleting and recreating the resource.</li>
--   </ul>
member_status :: Lens' Member (Maybe MemberStatus)

-- | The Amazon Resource Name (ARN) of the customer managed key in AWS Key
--   Management Service (AWS KMS) that the member uses for encryption at
--   rest. If the value of this parameter is <tt>"AWS Owned KMS Key"</tt>,
--   the member uses an AWS owned KMS key for encryption. This parameter is
--   inherited by the nodes that this member owns.
member_kmsKeyArn :: Lens' Member (Maybe Text)

-- | Configuration properties for logging events associated with a member.
member_logPublishingConfiguration :: Lens' Member (Maybe MemberLogPublishingConfiguration)

-- | The Amazon Resource Name (ARN) of the member. For more information
--   about ARNs and their format, see <a>Amazon Resource Names (ARNs)</a>
--   in the <i>AWS General Reference</i>.
member_arn :: Lens' Member (Maybe Text)

-- | The unique identifier of the network to which the member belongs.
member_networkId :: Lens' Member (Maybe Text)

-- | The name of the member.
member_name :: Lens' Member (Maybe Text)

-- | The unique identifier of the member.
member_id :: Lens' Member (Maybe Text)

-- | The date and time that the member was created.
member_creationDate :: Lens' Member (Maybe UTCTime)

-- | Attributes relevant to a member for the blockchain framework that the
--   Managed Blockchain network uses.
member_frameworkAttributes :: Lens' Member (Maybe MemberFrameworkAttributes)

-- | An optional description for the member.
member_description :: Lens' Member (Maybe Text)

-- | Tags assigned to the member. Tags consist of a key and optional value.
--   For more information about tags, see <a>Tagging Resources</a> in the
--   <i>Amazon Managed Blockchain Hyperledger Fabric Developer Guide</i>.
member_tags :: Lens' Member (Maybe (HashMap Text Text))
instance GHC.Generics.Generic Network.AWS.ManagedBlockChain.Types.Member.Member
instance GHC.Show.Show Network.AWS.ManagedBlockChain.Types.Member.Member
instance GHC.Read.Read Network.AWS.ManagedBlockChain.Types.Member.Member
instance GHC.Classes.Eq Network.AWS.ManagedBlockChain.Types.Member.Member
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ManagedBlockChain.Types.Member.Member
instance Data.Hashable.Class.Hashable Network.AWS.ManagedBlockChain.Types.Member.Member
instance Control.DeepSeq.NFData Network.AWS.ManagedBlockChain.Types.Member.Member


module Network.AWS.ManagedBlockChain.Types.MemberSummary

-- | A summary of configuration properties for a member.
--   
--   Applies only to Hyperledger Fabric.
--   
--   <i>See:</i> <a>newMemberSummary</a> smart constructor.
data MemberSummary
MemberSummary' :: Maybe MemberStatus -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe POSIX -> Maybe Text -> MemberSummary

-- | The status of the member.
--   
--   <ul>
--   <li><tt>CREATING</tt> - The AWS account is in the process of creating
--   a member.</li>
--   <li><tt>AVAILABLE</tt> - The member has been created and can
--   participate in the network.</li>
--   <li><tt>CREATE_FAILED</tt> - The AWS account attempted to create a
--   member and creation failed.</li>
--   <li><tt>UPDATING</tt> - The member is in the process of being
--   updated.</li>
--   <li><tt>DELETING</tt> - The member and all associated resources are in
--   the process of being deleted. Either the AWS account that owns the
--   member deleted it, or the member is being deleted as the result of an
--   <tt>APPROVED</tt> <tt>PROPOSAL</tt> to remove the member.</li>
--   <li><tt>DELETED</tt> - The member can no longer participate on the
--   network and all associated resources are deleted. Either the AWS
--   account that owns the member deleted it, or the member is being
--   deleted as the result of an <tt>APPROVED</tt> <tt>PROPOSAL</tt> to
--   remove the member.</li>
--   <li><tt>INACCESSIBLE_ENCRYPTION_KEY</tt> - The member is impaired and
--   might not function as expected because it cannot access the specified
--   customer managed key in AWS Key Management Service (AWS KMS) for
--   encryption at rest. Either the KMS key was disabled or deleted, or the
--   grants on the key were revoked.The effect of disabling or deleting a
--   key, or revoking a grant is not immediate. The member resource might
--   take some time to find that the key is inaccessible. When a resource
--   is in this state, we recommend deleting and recreating the
--   resource.</li>
--   </ul>
[$sel:status:MemberSummary'] :: MemberSummary -> Maybe MemberStatus

-- | The Amazon Resource Name (ARN) of the member. For more information
--   about ARNs and their format, see <a>Amazon Resource Names (ARNs)</a>
--   in the <i>AWS General Reference</i>.
[$sel:arn:MemberSummary'] :: MemberSummary -> Maybe Text

-- | The name of the member.
[$sel:name:MemberSummary'] :: MemberSummary -> Maybe Text

-- | The unique identifier of the member.
[$sel:id:MemberSummary'] :: MemberSummary -> Maybe Text

-- | An indicator of whether the member is owned by your AWS account or a
--   different AWS account.
[$sel:isOwned:MemberSummary'] :: MemberSummary -> Maybe Bool

-- | The date and time that the member was created.
[$sel:creationDate:MemberSummary'] :: MemberSummary -> Maybe POSIX

-- | An optional description of the member.
[$sel:description:MemberSummary'] :: MemberSummary -> Maybe Text

-- | Create a value of <a>MemberSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:MemberSummary'</a>, <a>memberSummary_status</a> - The
--   status of the member.
--   
--   <ul>
--   <li><tt>CREATING</tt> - The AWS account is in the process of creating
--   a member.</li>
--   <li><tt>AVAILABLE</tt> - The member has been created and can
--   participate in the network.</li>
--   <li><tt>CREATE_FAILED</tt> - The AWS account attempted to create a
--   member and creation failed.</li>
--   <li><tt>UPDATING</tt> - The member is in the process of being
--   updated.</li>
--   <li><tt>DELETING</tt> - The member and all associated resources are in
--   the process of being deleted. Either the AWS account that owns the
--   member deleted it, or the member is being deleted as the result of an
--   <tt>APPROVED</tt> <tt>PROPOSAL</tt> to remove the member.</li>
--   <li><tt>DELETED</tt> - The member can no longer participate on the
--   network and all associated resources are deleted. Either the AWS
--   account that owns the member deleted it, or the member is being
--   deleted as the result of an <tt>APPROVED</tt> <tt>PROPOSAL</tt> to
--   remove the member.</li>
--   <li><tt>INACCESSIBLE_ENCRYPTION_KEY</tt> - The member is impaired and
--   might not function as expected because it cannot access the specified
--   customer managed key in AWS Key Management Service (AWS KMS) for
--   encryption at rest. Either the KMS key was disabled or deleted, or the
--   grants on the key were revoked.The effect of disabling or deleting a
--   key, or revoking a grant is not immediate. The member resource might
--   take some time to find that the key is inaccessible. When a resource
--   is in this state, we recommend deleting and recreating the
--   resource.</li>
--   </ul>
--   
--   <a>$sel:arn:MemberSummary'</a>, <a>memberSummary_arn</a> - The Amazon
--   Resource Name (ARN) of the member. For more information about ARNs and
--   their format, see <a>Amazon Resource Names (ARNs)</a> in the <i>AWS
--   General Reference</i>.
--   
--   <a>$sel:name:MemberSummary'</a>, <a>memberSummary_name</a> - The name
--   of the member.
--   
--   <a>$sel:id:MemberSummary'</a>, <a>memberSummary_id</a> - The unique
--   identifier of the member.
--   
--   <a>$sel:isOwned:MemberSummary'</a>, <a>memberSummary_isOwned</a> - An
--   indicator of whether the member is owned by your AWS account or a
--   different AWS account.
--   
--   <a>$sel:creationDate:MemberSummary'</a>,
--   <a>memberSummary_creationDate</a> - The date and time that the member
--   was created.
--   
--   <a>$sel:description:MemberSummary'</a>,
--   <a>memberSummary_description</a> - An optional description of the
--   member.
newMemberSummary :: MemberSummary

-- | The status of the member.
--   
--   <ul>
--   <li><tt>CREATING</tt> - The AWS account is in the process of creating
--   a member.</li>
--   <li><tt>AVAILABLE</tt> - The member has been created and can
--   participate in the network.</li>
--   <li><tt>CREATE_FAILED</tt> - The AWS account attempted to create a
--   member and creation failed.</li>
--   <li><tt>UPDATING</tt> - The member is in the process of being
--   updated.</li>
--   <li><tt>DELETING</tt> - The member and all associated resources are in
--   the process of being deleted. Either the AWS account that owns the
--   member deleted it, or the member is being deleted as the result of an
--   <tt>APPROVED</tt> <tt>PROPOSAL</tt> to remove the member.</li>
--   <li><tt>DELETED</tt> - The member can no longer participate on the
--   network and all associated resources are deleted. Either the AWS
--   account that owns the member deleted it, or the member is being
--   deleted as the result of an <tt>APPROVED</tt> <tt>PROPOSAL</tt> to
--   remove the member.</li>
--   <li><tt>INACCESSIBLE_ENCRYPTION_KEY</tt> - The member is impaired and
--   might not function as expected because it cannot access the specified
--   customer managed key in AWS Key Management Service (AWS KMS) for
--   encryption at rest. Either the KMS key was disabled or deleted, or the
--   grants on the key were revoked.The effect of disabling or deleting a
--   key, or revoking a grant is not immediate. The member resource might
--   take some time to find that the key is inaccessible. When a resource
--   is in this state, we recommend deleting and recreating the
--   resource.</li>
--   </ul>
memberSummary_status :: Lens' MemberSummary (Maybe MemberStatus)

-- | The Amazon Resource Name (ARN) of the member. For more information
--   about ARNs and their format, see <a>Amazon Resource Names (ARNs)</a>
--   in the <i>AWS General Reference</i>.
memberSummary_arn :: Lens' MemberSummary (Maybe Text)

-- | The name of the member.
memberSummary_name :: Lens' MemberSummary (Maybe Text)

-- | The unique identifier of the member.
memberSummary_id :: Lens' MemberSummary (Maybe Text)

-- | An indicator of whether the member is owned by your AWS account or a
--   different AWS account.
memberSummary_isOwned :: Lens' MemberSummary (Maybe Bool)

-- | The date and time that the member was created.
memberSummary_creationDate :: Lens' MemberSummary (Maybe UTCTime)

-- | An optional description of the member.
memberSummary_description :: Lens' MemberSummary (Maybe Text)
instance GHC.Generics.Generic Network.AWS.ManagedBlockChain.Types.MemberSummary.MemberSummary
instance GHC.Show.Show Network.AWS.ManagedBlockChain.Types.MemberSummary.MemberSummary
instance GHC.Read.Read Network.AWS.ManagedBlockChain.Types.MemberSummary.MemberSummary
instance GHC.Classes.Eq Network.AWS.ManagedBlockChain.Types.MemberSummary.MemberSummary
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ManagedBlockChain.Types.MemberSummary.MemberSummary
instance Data.Hashable.Class.Hashable Network.AWS.ManagedBlockChain.Types.MemberSummary.MemberSummary
instance Control.DeepSeq.NFData Network.AWS.ManagedBlockChain.Types.MemberSummary.MemberSummary


module Network.AWS.ManagedBlockChain.Types.NetworkEthereumAttributes

-- | Attributes of Ethereum for a network.
--   
--   <i>See:</i> <a>newNetworkEthereumAttributes</a> smart constructor.
data NetworkEthereumAttributes
NetworkEthereumAttributes' :: Maybe Text -> NetworkEthereumAttributes

-- | The Ethereum <tt>CHAIN_ID</tt> associated with the Ethereum network.
--   Chain IDs are as follows:
--   
--   <ul>
--   <li>mainnet = <tt>1</tt></li>
--   <li>rinkeby = <tt>4</tt></li>
--   <li>ropsten = <tt>3</tt></li>
--   </ul>
[$sel:chainId:NetworkEthereumAttributes'] :: NetworkEthereumAttributes -> Maybe Text

-- | Create a value of <a>NetworkEthereumAttributes</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:chainId:NetworkEthereumAttributes'</a>,
--   <a>networkEthereumAttributes_chainId</a> - The Ethereum
--   <tt>CHAIN_ID</tt> associated with the Ethereum network. Chain IDs are
--   as follows:
--   
--   <ul>
--   <li>mainnet = <tt>1</tt></li>
--   <li>rinkeby = <tt>4</tt></li>
--   <li>ropsten = <tt>3</tt></li>
--   </ul>
newNetworkEthereumAttributes :: NetworkEthereumAttributes

-- | The Ethereum <tt>CHAIN_ID</tt> associated with the Ethereum network.
--   Chain IDs are as follows:
--   
--   <ul>
--   <li>mainnet = <tt>1</tt></li>
--   <li>rinkeby = <tt>4</tt></li>
--   <li>ropsten = <tt>3</tt></li>
--   </ul>
networkEthereumAttributes_chainId :: Lens' NetworkEthereumAttributes (Maybe Text)
instance GHC.Generics.Generic Network.AWS.ManagedBlockChain.Types.NetworkEthereumAttributes.NetworkEthereumAttributes
instance GHC.Show.Show Network.AWS.ManagedBlockChain.Types.NetworkEthereumAttributes.NetworkEthereumAttributes
instance GHC.Read.Read Network.AWS.ManagedBlockChain.Types.NetworkEthereumAttributes.NetworkEthereumAttributes
instance GHC.Classes.Eq Network.AWS.ManagedBlockChain.Types.NetworkEthereumAttributes.NetworkEthereumAttributes
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ManagedBlockChain.Types.NetworkEthereumAttributes.NetworkEthereumAttributes
instance Data.Hashable.Class.Hashable Network.AWS.ManagedBlockChain.Types.NetworkEthereumAttributes.NetworkEthereumAttributes
instance Control.DeepSeq.NFData Network.AWS.ManagedBlockChain.Types.NetworkEthereumAttributes.NetworkEthereumAttributes


module Network.AWS.ManagedBlockChain.Types.NetworkFabricAttributes

-- | Attributes of Hyperledger Fabric for a network.
--   
--   <i>See:</i> <a>newNetworkFabricAttributes</a> smart constructor.
data NetworkFabricAttributes
NetworkFabricAttributes' :: Maybe Edition -> Maybe Text -> NetworkFabricAttributes

-- | The edition of Amazon Managed Blockchain that Hyperledger Fabric uses.
--   For more information, see <a>Amazon Managed Blockchain Pricing</a>.
[$sel:edition:NetworkFabricAttributes'] :: NetworkFabricAttributes -> Maybe Edition

-- | The endpoint of the ordering service for the network.
[$sel:orderingServiceEndpoint:NetworkFabricAttributes'] :: NetworkFabricAttributes -> Maybe Text

-- | Create a value of <a>NetworkFabricAttributes</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:edition:NetworkFabricAttributes'</a>,
--   <a>networkFabricAttributes_edition</a> - The edition of Amazon Managed
--   Blockchain that Hyperledger Fabric uses. For more information, see
--   <a>Amazon Managed Blockchain Pricing</a>.
--   
--   <a>$sel:orderingServiceEndpoint:NetworkFabricAttributes'</a>,
--   <a>networkFabricAttributes_orderingServiceEndpoint</a> - The endpoint
--   of the ordering service for the network.
newNetworkFabricAttributes :: NetworkFabricAttributes

-- | The edition of Amazon Managed Blockchain that Hyperledger Fabric uses.
--   For more information, see <a>Amazon Managed Blockchain Pricing</a>.
networkFabricAttributes_edition :: Lens' NetworkFabricAttributes (Maybe Edition)

-- | The endpoint of the ordering service for the network.
networkFabricAttributes_orderingServiceEndpoint :: Lens' NetworkFabricAttributes (Maybe Text)
instance GHC.Generics.Generic Network.AWS.ManagedBlockChain.Types.NetworkFabricAttributes.NetworkFabricAttributes
instance GHC.Show.Show Network.AWS.ManagedBlockChain.Types.NetworkFabricAttributes.NetworkFabricAttributes
instance GHC.Read.Read Network.AWS.ManagedBlockChain.Types.NetworkFabricAttributes.NetworkFabricAttributes
instance GHC.Classes.Eq Network.AWS.ManagedBlockChain.Types.NetworkFabricAttributes.NetworkFabricAttributes
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ManagedBlockChain.Types.NetworkFabricAttributes.NetworkFabricAttributes
instance Data.Hashable.Class.Hashable Network.AWS.ManagedBlockChain.Types.NetworkFabricAttributes.NetworkFabricAttributes
instance Control.DeepSeq.NFData Network.AWS.ManagedBlockChain.Types.NetworkFabricAttributes.NetworkFabricAttributes


module Network.AWS.ManagedBlockChain.Types.NetworkFabricConfiguration

-- | Hyperledger Fabric configuration properties for the network.
--   
--   <i>See:</i> <a>newNetworkFabricConfiguration</a> smart constructor.
data NetworkFabricConfiguration
NetworkFabricConfiguration' :: Edition -> NetworkFabricConfiguration

-- | The edition of Amazon Managed Blockchain that the network uses. For
--   more information, see <a>Amazon Managed Blockchain Pricing</a>.
[$sel:edition:NetworkFabricConfiguration'] :: NetworkFabricConfiguration -> Edition

-- | Create a value of <a>NetworkFabricConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:edition:NetworkFabricConfiguration'</a>,
--   <a>networkFabricConfiguration_edition</a> - The edition of Amazon
--   Managed Blockchain that the network uses. For more information, see
--   <a>Amazon Managed Blockchain Pricing</a>.
newNetworkFabricConfiguration :: Edition -> NetworkFabricConfiguration

-- | The edition of Amazon Managed Blockchain that the network uses. For
--   more information, see <a>Amazon Managed Blockchain Pricing</a>.
networkFabricConfiguration_edition :: Lens' NetworkFabricConfiguration Edition
instance GHC.Generics.Generic Network.AWS.ManagedBlockChain.Types.NetworkFabricConfiguration.NetworkFabricConfiguration
instance GHC.Show.Show Network.AWS.ManagedBlockChain.Types.NetworkFabricConfiguration.NetworkFabricConfiguration
instance GHC.Read.Read Network.AWS.ManagedBlockChain.Types.NetworkFabricConfiguration.NetworkFabricConfiguration
instance GHC.Classes.Eq Network.AWS.ManagedBlockChain.Types.NetworkFabricConfiguration.NetworkFabricConfiguration
instance Data.Hashable.Class.Hashable Network.AWS.ManagedBlockChain.Types.NetworkFabricConfiguration.NetworkFabricConfiguration
instance Control.DeepSeq.NFData Network.AWS.ManagedBlockChain.Types.NetworkFabricConfiguration.NetworkFabricConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ManagedBlockChain.Types.NetworkFabricConfiguration.NetworkFabricConfiguration


module Network.AWS.ManagedBlockChain.Types.NetworkFrameworkAttributes

-- | Attributes relevant to the network for the blockchain framework that
--   the network uses.
--   
--   <i>See:</i> <a>newNetworkFrameworkAttributes</a> smart constructor.
data NetworkFrameworkAttributes
NetworkFrameworkAttributes' :: Maybe NetworkFabricAttributes -> Maybe NetworkEthereumAttributes -> NetworkFrameworkAttributes

-- | Attributes of Hyperledger Fabric for a Managed Blockchain network that
--   uses Hyperledger Fabric.
[$sel:fabric:NetworkFrameworkAttributes'] :: NetworkFrameworkAttributes -> Maybe NetworkFabricAttributes

-- | Attributes of an Ethereum network for Managed Blockchain resources
--   participating in an Ethereum network.
[$sel:ethereum:NetworkFrameworkAttributes'] :: NetworkFrameworkAttributes -> Maybe NetworkEthereumAttributes

-- | Create a value of <a>NetworkFrameworkAttributes</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fabric:NetworkFrameworkAttributes'</a>,
--   <a>networkFrameworkAttributes_fabric</a> - Attributes of Hyperledger
--   Fabric for a Managed Blockchain network that uses Hyperledger Fabric.
--   
--   <a>$sel:ethereum:NetworkFrameworkAttributes'</a>,
--   <a>networkFrameworkAttributes_ethereum</a> - Attributes of an Ethereum
--   network for Managed Blockchain resources participating in an Ethereum
--   network.
newNetworkFrameworkAttributes :: NetworkFrameworkAttributes

-- | Attributes of Hyperledger Fabric for a Managed Blockchain network that
--   uses Hyperledger Fabric.
networkFrameworkAttributes_fabric :: Lens' NetworkFrameworkAttributes (Maybe NetworkFabricAttributes)

-- | Attributes of an Ethereum network for Managed Blockchain resources
--   participating in an Ethereum network.
networkFrameworkAttributes_ethereum :: Lens' NetworkFrameworkAttributes (Maybe NetworkEthereumAttributes)
instance GHC.Generics.Generic Network.AWS.ManagedBlockChain.Types.NetworkFrameworkAttributes.NetworkFrameworkAttributes
instance GHC.Show.Show Network.AWS.ManagedBlockChain.Types.NetworkFrameworkAttributes.NetworkFrameworkAttributes
instance GHC.Read.Read Network.AWS.ManagedBlockChain.Types.NetworkFrameworkAttributes.NetworkFrameworkAttributes
instance GHC.Classes.Eq Network.AWS.ManagedBlockChain.Types.NetworkFrameworkAttributes.NetworkFrameworkAttributes
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ManagedBlockChain.Types.NetworkFrameworkAttributes.NetworkFrameworkAttributes
instance Data.Hashable.Class.Hashable Network.AWS.ManagedBlockChain.Types.NetworkFrameworkAttributes.NetworkFrameworkAttributes
instance Control.DeepSeq.NFData Network.AWS.ManagedBlockChain.Types.NetworkFrameworkAttributes.NetworkFrameworkAttributes


module Network.AWS.ManagedBlockChain.Types.NetworkFrameworkConfiguration

-- | Configuration properties relevant to the network for the blockchain
--   framework that the network uses.
--   
--   <i>See:</i> <a>newNetworkFrameworkConfiguration</a> smart constructor.
data NetworkFrameworkConfiguration
NetworkFrameworkConfiguration' :: Maybe NetworkFabricConfiguration -> NetworkFrameworkConfiguration

-- | Hyperledger Fabric configuration properties for a Managed Blockchain
--   network that uses Hyperledger Fabric.
[$sel:fabric:NetworkFrameworkConfiguration'] :: NetworkFrameworkConfiguration -> Maybe NetworkFabricConfiguration

-- | Create a value of <a>NetworkFrameworkConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fabric:NetworkFrameworkConfiguration'</a>,
--   <a>networkFrameworkConfiguration_fabric</a> - Hyperledger Fabric
--   configuration properties for a Managed Blockchain network that uses
--   Hyperledger Fabric.
newNetworkFrameworkConfiguration :: NetworkFrameworkConfiguration

-- | Hyperledger Fabric configuration properties for a Managed Blockchain
--   network that uses Hyperledger Fabric.
networkFrameworkConfiguration_fabric :: Lens' NetworkFrameworkConfiguration (Maybe NetworkFabricConfiguration)
instance GHC.Generics.Generic Network.AWS.ManagedBlockChain.Types.NetworkFrameworkConfiguration.NetworkFrameworkConfiguration
instance GHC.Show.Show Network.AWS.ManagedBlockChain.Types.NetworkFrameworkConfiguration.NetworkFrameworkConfiguration
instance GHC.Read.Read Network.AWS.ManagedBlockChain.Types.NetworkFrameworkConfiguration.NetworkFrameworkConfiguration
instance GHC.Classes.Eq Network.AWS.ManagedBlockChain.Types.NetworkFrameworkConfiguration.NetworkFrameworkConfiguration
instance Data.Hashable.Class.Hashable Network.AWS.ManagedBlockChain.Types.NetworkFrameworkConfiguration.NetworkFrameworkConfiguration
instance Control.DeepSeq.NFData Network.AWS.ManagedBlockChain.Types.NetworkFrameworkConfiguration.NetworkFrameworkConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ManagedBlockChain.Types.NetworkFrameworkConfiguration.NetworkFrameworkConfiguration


module Network.AWS.ManagedBlockChain.Types.NetworkStatus
newtype NetworkStatus
NetworkStatus' :: Text -> NetworkStatus
[fromNetworkStatus] :: NetworkStatus -> Text
pattern NetworkStatus_AVAILABLE :: NetworkStatus
pattern NetworkStatus_CREATE_FAILED :: NetworkStatus
pattern NetworkStatus_CREATING :: NetworkStatus
pattern NetworkStatus_DELETED :: NetworkStatus
pattern NetworkStatus_DELETING :: NetworkStatus
instance Network.AWS.Data.XML.ToXML Network.AWS.ManagedBlockChain.Types.NetworkStatus.NetworkStatus
instance Network.AWS.Data.XML.FromXML Network.AWS.ManagedBlockChain.Types.NetworkStatus.NetworkStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.ManagedBlockChain.Types.NetworkStatus.NetworkStatus
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ManagedBlockChain.Types.NetworkStatus.NetworkStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.ManagedBlockChain.Types.NetworkStatus.NetworkStatus
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ManagedBlockChain.Types.NetworkStatus.NetworkStatus
instance Network.AWS.Data.Query.ToQuery Network.AWS.ManagedBlockChain.Types.NetworkStatus.NetworkStatus
instance Network.AWS.Data.Headers.ToHeader Network.AWS.ManagedBlockChain.Types.NetworkStatus.NetworkStatus
instance Network.AWS.Data.Log.ToLog Network.AWS.ManagedBlockChain.Types.NetworkStatus.NetworkStatus
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.ManagedBlockChain.Types.NetworkStatus.NetworkStatus
instance Network.AWS.Data.Text.ToText Network.AWS.ManagedBlockChain.Types.NetworkStatus.NetworkStatus
instance Network.AWS.Data.Text.FromText Network.AWS.ManagedBlockChain.Types.NetworkStatus.NetworkStatus
instance Control.DeepSeq.NFData Network.AWS.ManagedBlockChain.Types.NetworkStatus.NetworkStatus
instance Data.Hashable.Class.Hashable Network.AWS.ManagedBlockChain.Types.NetworkStatus.NetworkStatus
instance GHC.Generics.Generic Network.AWS.ManagedBlockChain.Types.NetworkStatus.NetworkStatus
instance GHC.Classes.Ord Network.AWS.ManagedBlockChain.Types.NetworkStatus.NetworkStatus
instance GHC.Classes.Eq Network.AWS.ManagedBlockChain.Types.NetworkStatus.NetworkStatus
instance GHC.Read.Read Network.AWS.ManagedBlockChain.Types.NetworkStatus.NetworkStatus
instance GHC.Show.Show Network.AWS.ManagedBlockChain.Types.NetworkStatus.NetworkStatus


module Network.AWS.ManagedBlockChain.Types.NetworkSummary

-- | A summary of network configuration properties.
--   
--   <i>See:</i> <a>newNetworkSummary</a> smart constructor.
data NetworkSummary
NetworkSummary' :: Maybe NetworkStatus -> Maybe Framework -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> NetworkSummary

-- | The current status of the network.
[$sel:status:NetworkSummary'] :: NetworkSummary -> Maybe NetworkStatus

-- | The blockchain framework that the network uses.
[$sel:framework:NetworkSummary'] :: NetworkSummary -> Maybe Framework

-- | The Amazon Resource Name (ARN) of the network. For more information
--   about ARNs and their format, see <a>Amazon Resource Names (ARNs)</a>
--   in the <i>AWS General Reference</i>.
[$sel:arn:NetworkSummary'] :: NetworkSummary -> Maybe Text

-- | The version of the blockchain framework that the network uses.
[$sel:frameworkVersion:NetworkSummary'] :: NetworkSummary -> Maybe Text

-- | The name of the network.
[$sel:name:NetworkSummary'] :: NetworkSummary -> Maybe Text

-- | The unique identifier of the network.
[$sel:id:NetworkSummary'] :: NetworkSummary -> Maybe Text

-- | The date and time that the network was created.
[$sel:creationDate:NetworkSummary'] :: NetworkSummary -> Maybe POSIX

-- | An optional description of the network.
[$sel:description:NetworkSummary'] :: NetworkSummary -> Maybe Text

-- | Create a value of <a>NetworkSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:NetworkSummary'</a>, <a>networkSummary_status</a> - The
--   current status of the network.
--   
--   <a>$sel:framework:NetworkSummary'</a>, <a>networkSummary_framework</a>
--   - The blockchain framework that the network uses.
--   
--   <a>$sel:arn:NetworkSummary'</a>, <a>networkSummary_arn</a> - The
--   Amazon Resource Name (ARN) of the network. For more information about
--   ARNs and their format, see <a>Amazon Resource Names (ARNs)</a> in the
--   <i>AWS General Reference</i>.
--   
--   <a>$sel:frameworkVersion:NetworkSummary'</a>,
--   <a>networkSummary_frameworkVersion</a> - The version of the blockchain
--   framework that the network uses.
--   
--   <a>$sel:name:NetworkSummary'</a>, <a>networkSummary_name</a> - The
--   name of the network.
--   
--   <a>$sel:id:NetworkSummary'</a>, <a>networkSummary_id</a> - The unique
--   identifier of the network.
--   
--   <a>$sel:creationDate:NetworkSummary'</a>,
--   <a>networkSummary_creationDate</a> - The date and time that the
--   network was created.
--   
--   <a>$sel:description:NetworkSummary'</a>,
--   <a>networkSummary_description</a> - An optional description of the
--   network.
newNetworkSummary :: NetworkSummary

-- | The current status of the network.
networkSummary_status :: Lens' NetworkSummary (Maybe NetworkStatus)

-- | The blockchain framework that the network uses.
networkSummary_framework :: Lens' NetworkSummary (Maybe Framework)

-- | The Amazon Resource Name (ARN) of the network. For more information
--   about ARNs and their format, see <a>Amazon Resource Names (ARNs)</a>
--   in the <i>AWS General Reference</i>.
networkSummary_arn :: Lens' NetworkSummary (Maybe Text)

-- | The version of the blockchain framework that the network uses.
networkSummary_frameworkVersion :: Lens' NetworkSummary (Maybe Text)

-- | The name of the network.
networkSummary_name :: Lens' NetworkSummary (Maybe Text)

-- | The unique identifier of the network.
networkSummary_id :: Lens' NetworkSummary (Maybe Text)

-- | The date and time that the network was created.
networkSummary_creationDate :: Lens' NetworkSummary (Maybe UTCTime)

-- | An optional description of the network.
networkSummary_description :: Lens' NetworkSummary (Maybe Text)
instance GHC.Generics.Generic Network.AWS.ManagedBlockChain.Types.NetworkSummary.NetworkSummary
instance GHC.Show.Show Network.AWS.ManagedBlockChain.Types.NetworkSummary.NetworkSummary
instance GHC.Read.Read Network.AWS.ManagedBlockChain.Types.NetworkSummary.NetworkSummary
instance GHC.Classes.Eq Network.AWS.ManagedBlockChain.Types.NetworkSummary.NetworkSummary
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ManagedBlockChain.Types.NetworkSummary.NetworkSummary
instance Data.Hashable.Class.Hashable Network.AWS.ManagedBlockChain.Types.NetworkSummary.NetworkSummary
instance Control.DeepSeq.NFData Network.AWS.ManagedBlockChain.Types.NetworkSummary.NetworkSummary


module Network.AWS.ManagedBlockChain.Types.Invitation

-- | An invitation to an AWS account to create a member and join the
--   network.
--   
--   Applies only to Hyperledger Fabric.
--   
--   <i>See:</i> <a>newInvitation</a> smart constructor.
data Invitation
Invitation' :: Maybe InvitationStatus -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe NetworkSummary -> Maybe POSIX -> Invitation

-- | The status of the invitation:
--   
--   <ul>
--   <li><tt>PENDING</tt> - The invitee has not created a member to join
--   the network, and the invitation has not yet expired.</li>
--   <li><tt>ACCEPTING</tt> - The invitee has begun creating a member, and
--   creation has not yet completed.</li>
--   <li><tt>ACCEPTED</tt> - The invitee created a member and joined the
--   network using the <tt>InvitationID</tt>.</li>
--   <li><tt>REJECTED</tt> - The invitee rejected the invitation.</li>
--   <li><tt>EXPIRED</tt> - The invitee neither created a member nor
--   rejected the invitation before the <tt>ExpirationDate</tt>.</li>
--   </ul>
[$sel:status:Invitation'] :: Invitation -> Maybe InvitationStatus

-- | The Amazon Resource Name (ARN) of the invitation. For more information
--   about ARNs and their format, see <a>Amazon Resource Names (ARNs)</a>
--   in the <i>AWS General Reference</i>.
[$sel:arn:Invitation'] :: Invitation -> Maybe Text

-- | The unique identifier for the invitation.
[$sel:invitationId:Invitation'] :: Invitation -> Maybe Text

-- | The date and time that the invitation expires. This is the
--   <tt>CreationDate</tt> plus the <tt>ProposalDurationInHours</tt> that
--   is specified in the <tt>ProposalThresholdPolicy</tt>. After this date
--   and time, the invitee can no longer create a member and join the
--   network using this <tt>InvitationId</tt>.
[$sel:expirationDate:Invitation'] :: Invitation -> Maybe POSIX
[$sel:networkSummary:Invitation'] :: Invitation -> Maybe NetworkSummary

-- | The date and time that the invitation was created.
[$sel:creationDate:Invitation'] :: Invitation -> Maybe POSIX

-- | Create a value of <a>Invitation</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:Invitation'</a>, <a>invitation_status</a> - The status
--   of the invitation:
--   
--   <ul>
--   <li><tt>PENDING</tt> - The invitee has not created a member to join
--   the network, and the invitation has not yet expired.</li>
--   <li><tt>ACCEPTING</tt> - The invitee has begun creating a member, and
--   creation has not yet completed.</li>
--   <li><tt>ACCEPTED</tt> - The invitee created a member and joined the
--   network using the <tt>InvitationID</tt>.</li>
--   <li><tt>REJECTED</tt> - The invitee rejected the invitation.</li>
--   <li><tt>EXPIRED</tt> - The invitee neither created a member nor
--   rejected the invitation before the <tt>ExpirationDate</tt>.</li>
--   </ul>
--   
--   <a>$sel:arn:Invitation'</a>, <a>invitation_arn</a> - The Amazon
--   Resource Name (ARN) of the invitation. For more information about ARNs
--   and their format, see <a>Amazon Resource Names (ARNs)</a> in the
--   <i>AWS General Reference</i>.
--   
--   <a>$sel:invitationId:Invitation'</a>, <a>invitation_invitationId</a> -
--   The unique identifier for the invitation.
--   
--   <a>$sel:expirationDate:Invitation'</a>,
--   <a>invitation_expirationDate</a> - The date and time that the
--   invitation expires. This is the <tt>CreationDate</tt> plus the
--   <tt>ProposalDurationInHours</tt> that is specified in the
--   <tt>ProposalThresholdPolicy</tt>. After this date and time, the
--   invitee can no longer create a member and join the network using this
--   <tt>InvitationId</tt>.
--   
--   <a>$sel:networkSummary:Invitation'</a>,
--   <a>invitation_networkSummary</a> - Undocumented member.
--   
--   <a>$sel:creationDate:Invitation'</a>, <a>invitation_creationDate</a> -
--   The date and time that the invitation was created.
newInvitation :: Invitation

-- | The status of the invitation:
--   
--   <ul>
--   <li><tt>PENDING</tt> - The invitee has not created a member to join
--   the network, and the invitation has not yet expired.</li>
--   <li><tt>ACCEPTING</tt> - The invitee has begun creating a member, and
--   creation has not yet completed.</li>
--   <li><tt>ACCEPTED</tt> - The invitee created a member and joined the
--   network using the <tt>InvitationID</tt>.</li>
--   <li><tt>REJECTED</tt> - The invitee rejected the invitation.</li>
--   <li><tt>EXPIRED</tt> - The invitee neither created a member nor
--   rejected the invitation before the <tt>ExpirationDate</tt>.</li>
--   </ul>
invitation_status :: Lens' Invitation (Maybe InvitationStatus)

-- | The Amazon Resource Name (ARN) of the invitation. For more information
--   about ARNs and their format, see <a>Amazon Resource Names (ARNs)</a>
--   in the <i>AWS General Reference</i>.
invitation_arn :: Lens' Invitation (Maybe Text)

-- | The unique identifier for the invitation.
invitation_invitationId :: Lens' Invitation (Maybe Text)

-- | The date and time that the invitation expires. This is the
--   <tt>CreationDate</tt> plus the <tt>ProposalDurationInHours</tt> that
--   is specified in the <tt>ProposalThresholdPolicy</tt>. After this date
--   and time, the invitee can no longer create a member and join the
--   network using this <tt>InvitationId</tt>.
invitation_expirationDate :: Lens' Invitation (Maybe UTCTime)

-- | Undocumented member.
invitation_networkSummary :: Lens' Invitation (Maybe NetworkSummary)

-- | The date and time that the invitation was created.
invitation_creationDate :: Lens' Invitation (Maybe UTCTime)
instance GHC.Generics.Generic Network.AWS.ManagedBlockChain.Types.Invitation.Invitation
instance GHC.Show.Show Network.AWS.ManagedBlockChain.Types.Invitation.Invitation
instance GHC.Read.Read Network.AWS.ManagedBlockChain.Types.Invitation.Invitation
instance GHC.Classes.Eq Network.AWS.ManagedBlockChain.Types.Invitation.Invitation
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ManagedBlockChain.Types.Invitation.Invitation
instance Data.Hashable.Class.Hashable Network.AWS.ManagedBlockChain.Types.Invitation.Invitation
instance Control.DeepSeq.NFData Network.AWS.ManagedBlockChain.Types.Invitation.Invitation


module Network.AWS.ManagedBlockChain.Types.NodeEthereumAttributes

-- | Attributes of an Ethereum node.
--   
--   <i>See:</i> <a>newNodeEthereumAttributes</a> smart constructor.
data NodeEthereumAttributes
NodeEthereumAttributes' :: Maybe Text -> Maybe Text -> NodeEthereumAttributes

-- | The endpoint on which the Ethereum node listens to run Ethereum
--   JSON-RPC methods over HTTP connections from a client. Use this
--   endpoint in client code for smart contracts when using an HTTP
--   connection. Connections to this endpoint are authenticated using
--   <a>Signature Version 4</a>.
[$sel:httpEndpoint:NodeEthereumAttributes'] :: NodeEthereumAttributes -> Maybe Text

-- | The endpoint on which the Ethereum node listens to run Ethereum
--   JSON-RPC methods over WebSockets connections from a client. Use this
--   endpoint in client code for smart contracts when using a WebSockets
--   connection. Connections to this endpoint are authenticated using
--   <a>Signature Version 4</a>.
[$sel:webSocketEndpoint:NodeEthereumAttributes'] :: NodeEthereumAttributes -> Maybe Text

-- | Create a value of <a>NodeEthereumAttributes</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpEndpoint:NodeEthereumAttributes'</a>,
--   <a>nodeEthereumAttributes_httpEndpoint</a> - The endpoint on which the
--   Ethereum node listens to run Ethereum JSON-RPC methods over HTTP
--   connections from a client. Use this endpoint in client code for smart
--   contracts when using an HTTP connection. Connections to this endpoint
--   are authenticated using <a>Signature Version 4</a>.
--   
--   <a>$sel:webSocketEndpoint:NodeEthereumAttributes'</a>,
--   <a>nodeEthereumAttributes_webSocketEndpoint</a> - The endpoint on
--   which the Ethereum node listens to run Ethereum JSON-RPC methods over
--   WebSockets connections from a client. Use this endpoint in client code
--   for smart contracts when using a WebSockets connection. Connections to
--   this endpoint are authenticated using <a>Signature Version 4</a>.
newNodeEthereumAttributes :: NodeEthereumAttributes

-- | The endpoint on which the Ethereum node listens to run Ethereum
--   JSON-RPC methods over HTTP connections from a client. Use this
--   endpoint in client code for smart contracts when using an HTTP
--   connection. Connections to this endpoint are authenticated using
--   <a>Signature Version 4</a>.
nodeEthereumAttributes_httpEndpoint :: Lens' NodeEthereumAttributes (Maybe Text)

-- | The endpoint on which the Ethereum node listens to run Ethereum
--   JSON-RPC methods over WebSockets connections from a client. Use this
--   endpoint in client code for smart contracts when using a WebSockets
--   connection. Connections to this endpoint are authenticated using
--   <a>Signature Version 4</a>.
nodeEthereumAttributes_webSocketEndpoint :: Lens' NodeEthereumAttributes (Maybe Text)
instance GHC.Generics.Generic Network.AWS.ManagedBlockChain.Types.NodeEthereumAttributes.NodeEthereumAttributes
instance GHC.Show.Show Network.AWS.ManagedBlockChain.Types.NodeEthereumAttributes.NodeEthereumAttributes
instance GHC.Read.Read Network.AWS.ManagedBlockChain.Types.NodeEthereumAttributes.NodeEthereumAttributes
instance GHC.Classes.Eq Network.AWS.ManagedBlockChain.Types.NodeEthereumAttributes.NodeEthereumAttributes
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ManagedBlockChain.Types.NodeEthereumAttributes.NodeEthereumAttributes
instance Data.Hashable.Class.Hashable Network.AWS.ManagedBlockChain.Types.NodeEthereumAttributes.NodeEthereumAttributes
instance Control.DeepSeq.NFData Network.AWS.ManagedBlockChain.Types.NodeEthereumAttributes.NodeEthereumAttributes


module Network.AWS.ManagedBlockChain.Types.NodeFabricAttributes

-- | Attributes of Hyperledger Fabric for a peer node on a Hyperledger
--   Fabric network on Managed Blockchain.
--   
--   <i>See:</i> <a>newNodeFabricAttributes</a> smart constructor.
data NodeFabricAttributes
NodeFabricAttributes' :: Maybe Text -> Maybe Text -> NodeFabricAttributes

-- | The endpoint that identifies the peer node for peer channel-based
--   event services.
[$sel:peerEventEndpoint:NodeFabricAttributes'] :: NodeFabricAttributes -> Maybe Text

-- | The endpoint that identifies the peer node for all services except
--   peer channel-based event services.
[$sel:peerEndpoint:NodeFabricAttributes'] :: NodeFabricAttributes -> Maybe Text

-- | Create a value of <a>NodeFabricAttributes</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:peerEventEndpoint:NodeFabricAttributes'</a>,
--   <a>nodeFabricAttributes_peerEventEndpoint</a> - The endpoint that
--   identifies the peer node for peer channel-based event services.
--   
--   <a>$sel:peerEndpoint:NodeFabricAttributes'</a>,
--   <a>nodeFabricAttributes_peerEndpoint</a> - The endpoint that
--   identifies the peer node for all services except peer channel-based
--   event services.
newNodeFabricAttributes :: NodeFabricAttributes

-- | The endpoint that identifies the peer node for peer channel-based
--   event services.
nodeFabricAttributes_peerEventEndpoint :: Lens' NodeFabricAttributes (Maybe Text)

-- | The endpoint that identifies the peer node for all services except
--   peer channel-based event services.
nodeFabricAttributes_peerEndpoint :: Lens' NodeFabricAttributes (Maybe Text)
instance GHC.Generics.Generic Network.AWS.ManagedBlockChain.Types.NodeFabricAttributes.NodeFabricAttributes
instance GHC.Show.Show Network.AWS.ManagedBlockChain.Types.NodeFabricAttributes.NodeFabricAttributes
instance GHC.Read.Read Network.AWS.ManagedBlockChain.Types.NodeFabricAttributes.NodeFabricAttributes
instance GHC.Classes.Eq Network.AWS.ManagedBlockChain.Types.NodeFabricAttributes.NodeFabricAttributes
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ManagedBlockChain.Types.NodeFabricAttributes.NodeFabricAttributes
instance Data.Hashable.Class.Hashable Network.AWS.ManagedBlockChain.Types.NodeFabricAttributes.NodeFabricAttributes
instance Control.DeepSeq.NFData Network.AWS.ManagedBlockChain.Types.NodeFabricAttributes.NodeFabricAttributes


module Network.AWS.ManagedBlockChain.Types.NodeFabricLogPublishingConfiguration

-- | Configuration properties for logging events associated with a peer
--   node owned by a member in a Managed Blockchain network.
--   
--   <i>See:</i> <a>newNodeFabricLogPublishingConfiguration</a> smart
--   constructor.
data NodeFabricLogPublishingConfiguration
NodeFabricLogPublishingConfiguration' :: Maybe LogConfigurations -> Maybe LogConfigurations -> NodeFabricLogPublishingConfiguration

-- | Configuration properties for logging events associated with chaincode
--   execution on a peer node. Chaincode logs contain the results of
--   instantiating, invoking, and querying the chaincode. A peer can run
--   multiple instances of chaincode. When enabled, a log stream is created
--   for all chaincodes, with an individual log stream for each chaincode.
[$sel:chaincodeLogs:NodeFabricLogPublishingConfiguration'] :: NodeFabricLogPublishingConfiguration -> Maybe LogConfigurations

-- | Configuration properties for a peer node log. Peer node logs contain
--   messages generated when your client submits transaction proposals to
--   peer nodes, requests to join channels, enrolls an admin peer, and
--   lists the chaincode instances on a peer node.
[$sel:peerLogs:NodeFabricLogPublishingConfiguration'] :: NodeFabricLogPublishingConfiguration -> Maybe LogConfigurations

-- | Create a value of <a>NodeFabricLogPublishingConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:chaincodeLogs:NodeFabricLogPublishingConfiguration'</a>,
--   <a>nodeFabricLogPublishingConfiguration_chaincodeLogs</a> -
--   Configuration properties for logging events associated with chaincode
--   execution on a peer node. Chaincode logs contain the results of
--   instantiating, invoking, and querying the chaincode. A peer can run
--   multiple instances of chaincode. When enabled, a log stream is created
--   for all chaincodes, with an individual log stream for each chaincode.
--   
--   <a>$sel:peerLogs:NodeFabricLogPublishingConfiguration'</a>,
--   <a>nodeFabricLogPublishingConfiguration_peerLogs</a> - Configuration
--   properties for a peer node log. Peer node logs contain messages
--   generated when your client submits transaction proposals to peer
--   nodes, requests to join channels, enrolls an admin peer, and lists the
--   chaincode instances on a peer node.
newNodeFabricLogPublishingConfiguration :: NodeFabricLogPublishingConfiguration

-- | Configuration properties for logging events associated with chaincode
--   execution on a peer node. Chaincode logs contain the results of
--   instantiating, invoking, and querying the chaincode. A peer can run
--   multiple instances of chaincode. When enabled, a log stream is created
--   for all chaincodes, with an individual log stream for each chaincode.
nodeFabricLogPublishingConfiguration_chaincodeLogs :: Lens' NodeFabricLogPublishingConfiguration (Maybe LogConfigurations)

-- | Configuration properties for a peer node log. Peer node logs contain
--   messages generated when your client submits transaction proposals to
--   peer nodes, requests to join channels, enrolls an admin peer, and
--   lists the chaincode instances on a peer node.
nodeFabricLogPublishingConfiguration_peerLogs :: Lens' NodeFabricLogPublishingConfiguration (Maybe LogConfigurations)
instance GHC.Generics.Generic Network.AWS.ManagedBlockChain.Types.NodeFabricLogPublishingConfiguration.NodeFabricLogPublishingConfiguration
instance GHC.Show.Show Network.AWS.ManagedBlockChain.Types.NodeFabricLogPublishingConfiguration.NodeFabricLogPublishingConfiguration
instance GHC.Read.Read Network.AWS.ManagedBlockChain.Types.NodeFabricLogPublishingConfiguration.NodeFabricLogPublishingConfiguration
instance GHC.Classes.Eq Network.AWS.ManagedBlockChain.Types.NodeFabricLogPublishingConfiguration.NodeFabricLogPublishingConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ManagedBlockChain.Types.NodeFabricLogPublishingConfiguration.NodeFabricLogPublishingConfiguration
instance Data.Hashable.Class.Hashable Network.AWS.ManagedBlockChain.Types.NodeFabricLogPublishingConfiguration.NodeFabricLogPublishingConfiguration
instance Control.DeepSeq.NFData Network.AWS.ManagedBlockChain.Types.NodeFabricLogPublishingConfiguration.NodeFabricLogPublishingConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ManagedBlockChain.Types.NodeFabricLogPublishingConfiguration.NodeFabricLogPublishingConfiguration


module Network.AWS.ManagedBlockChain.Types.NodeFrameworkAttributes

-- | Attributes relevant to a node on a Managed Blockchain network for the
--   blockchain framework that the network uses.
--   
--   <i>See:</i> <a>newNodeFrameworkAttributes</a> smart constructor.
data NodeFrameworkAttributes
NodeFrameworkAttributes' :: Maybe NodeFabricAttributes -> Maybe NodeEthereumAttributes -> NodeFrameworkAttributes

-- | Attributes of Hyperledger Fabric for a peer node on a Managed
--   Blockchain network that uses Hyperledger Fabric.
[$sel:fabric:NodeFrameworkAttributes'] :: NodeFrameworkAttributes -> Maybe NodeFabricAttributes

-- | Attributes of Ethereum for a node on a Managed Blockchain network that
--   uses Ethereum.
[$sel:ethereum:NodeFrameworkAttributes'] :: NodeFrameworkAttributes -> Maybe NodeEthereumAttributes

-- | Create a value of <a>NodeFrameworkAttributes</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fabric:NodeFrameworkAttributes'</a>,
--   <a>nodeFrameworkAttributes_fabric</a> - Attributes of Hyperledger
--   Fabric for a peer node on a Managed Blockchain network that uses
--   Hyperledger Fabric.
--   
--   <a>$sel:ethereum:NodeFrameworkAttributes'</a>,
--   <a>nodeFrameworkAttributes_ethereum</a> - Attributes of Ethereum for a
--   node on a Managed Blockchain network that uses Ethereum.
newNodeFrameworkAttributes :: NodeFrameworkAttributes

-- | Attributes of Hyperledger Fabric for a peer node on a Managed
--   Blockchain network that uses Hyperledger Fabric.
nodeFrameworkAttributes_fabric :: Lens' NodeFrameworkAttributes (Maybe NodeFabricAttributes)

-- | Attributes of Ethereum for a node on a Managed Blockchain network that
--   uses Ethereum.
nodeFrameworkAttributes_ethereum :: Lens' NodeFrameworkAttributes (Maybe NodeEthereumAttributes)
instance GHC.Generics.Generic Network.AWS.ManagedBlockChain.Types.NodeFrameworkAttributes.NodeFrameworkAttributes
instance GHC.Show.Show Network.AWS.ManagedBlockChain.Types.NodeFrameworkAttributes.NodeFrameworkAttributes
instance GHC.Read.Read Network.AWS.ManagedBlockChain.Types.NodeFrameworkAttributes.NodeFrameworkAttributes
instance GHC.Classes.Eq Network.AWS.ManagedBlockChain.Types.NodeFrameworkAttributes.NodeFrameworkAttributes
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ManagedBlockChain.Types.NodeFrameworkAttributes.NodeFrameworkAttributes
instance Data.Hashable.Class.Hashable Network.AWS.ManagedBlockChain.Types.NodeFrameworkAttributes.NodeFrameworkAttributes
instance Control.DeepSeq.NFData Network.AWS.ManagedBlockChain.Types.NodeFrameworkAttributes.NodeFrameworkAttributes


module Network.AWS.ManagedBlockChain.Types.NodeLogPublishingConfiguration

-- | Configuration properties for logging events associated with a peer
--   node on a Hyperledger Fabric network on Managed Blockchain.
--   
--   <i>See:</i> <a>newNodeLogPublishingConfiguration</a> smart
--   constructor.
data NodeLogPublishingConfiguration
NodeLogPublishingConfiguration' :: Maybe NodeFabricLogPublishingConfiguration -> NodeLogPublishingConfiguration

-- | Configuration properties for logging events associated with a node
--   that is owned by a member of a Managed Blockchain network using the
--   Hyperledger Fabric framework.
[$sel:fabric:NodeLogPublishingConfiguration'] :: NodeLogPublishingConfiguration -> Maybe NodeFabricLogPublishingConfiguration

-- | Create a value of <a>NodeLogPublishingConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fabric:NodeLogPublishingConfiguration'</a>,
--   <a>nodeLogPublishingConfiguration_fabric</a> - Configuration
--   properties for logging events associated with a node that is owned by
--   a member of a Managed Blockchain network using the Hyperledger Fabric
--   framework.
newNodeLogPublishingConfiguration :: NodeLogPublishingConfiguration

-- | Configuration properties for logging events associated with a node
--   that is owned by a member of a Managed Blockchain network using the
--   Hyperledger Fabric framework.
nodeLogPublishingConfiguration_fabric :: Lens' NodeLogPublishingConfiguration (Maybe NodeFabricLogPublishingConfiguration)
instance GHC.Generics.Generic Network.AWS.ManagedBlockChain.Types.NodeLogPublishingConfiguration.NodeLogPublishingConfiguration
instance GHC.Show.Show Network.AWS.ManagedBlockChain.Types.NodeLogPublishingConfiguration.NodeLogPublishingConfiguration
instance GHC.Read.Read Network.AWS.ManagedBlockChain.Types.NodeLogPublishingConfiguration.NodeLogPublishingConfiguration
instance GHC.Classes.Eq Network.AWS.ManagedBlockChain.Types.NodeLogPublishingConfiguration.NodeLogPublishingConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ManagedBlockChain.Types.NodeLogPublishingConfiguration.NodeLogPublishingConfiguration
instance Data.Hashable.Class.Hashable Network.AWS.ManagedBlockChain.Types.NodeLogPublishingConfiguration.NodeLogPublishingConfiguration
instance Control.DeepSeq.NFData Network.AWS.ManagedBlockChain.Types.NodeLogPublishingConfiguration.NodeLogPublishingConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ManagedBlockChain.Types.NodeLogPublishingConfiguration.NodeLogPublishingConfiguration


module Network.AWS.ManagedBlockChain.Types.NodeStatus
newtype NodeStatus
NodeStatus' :: Text -> NodeStatus
[fromNodeStatus] :: NodeStatus -> Text
pattern NodeStatus_AVAILABLE :: NodeStatus
pattern NodeStatus_CREATE_FAILED :: NodeStatus
pattern NodeStatus_CREATING :: NodeStatus
pattern NodeStatus_DELETED :: NodeStatus
pattern NodeStatus_DELETING :: NodeStatus
pattern NodeStatus_FAILED :: NodeStatus
pattern NodeStatus_INACCESSIBLE_ENCRYPTION_KEY :: NodeStatus
pattern NodeStatus_UNHEALTHY :: NodeStatus
pattern NodeStatus_UPDATING :: NodeStatus
instance Network.AWS.Data.XML.ToXML Network.AWS.ManagedBlockChain.Types.NodeStatus.NodeStatus
instance Network.AWS.Data.XML.FromXML Network.AWS.ManagedBlockChain.Types.NodeStatus.NodeStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.ManagedBlockChain.Types.NodeStatus.NodeStatus
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ManagedBlockChain.Types.NodeStatus.NodeStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.ManagedBlockChain.Types.NodeStatus.NodeStatus
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ManagedBlockChain.Types.NodeStatus.NodeStatus
instance Network.AWS.Data.Query.ToQuery Network.AWS.ManagedBlockChain.Types.NodeStatus.NodeStatus
instance Network.AWS.Data.Headers.ToHeader Network.AWS.ManagedBlockChain.Types.NodeStatus.NodeStatus
instance Network.AWS.Data.Log.ToLog Network.AWS.ManagedBlockChain.Types.NodeStatus.NodeStatus
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.ManagedBlockChain.Types.NodeStatus.NodeStatus
instance Network.AWS.Data.Text.ToText Network.AWS.ManagedBlockChain.Types.NodeStatus.NodeStatus
instance Network.AWS.Data.Text.FromText Network.AWS.ManagedBlockChain.Types.NodeStatus.NodeStatus
instance Control.DeepSeq.NFData Network.AWS.ManagedBlockChain.Types.NodeStatus.NodeStatus
instance Data.Hashable.Class.Hashable Network.AWS.ManagedBlockChain.Types.NodeStatus.NodeStatus
instance GHC.Generics.Generic Network.AWS.ManagedBlockChain.Types.NodeStatus.NodeStatus
instance GHC.Classes.Ord Network.AWS.ManagedBlockChain.Types.NodeStatus.NodeStatus
instance GHC.Classes.Eq Network.AWS.ManagedBlockChain.Types.NodeStatus.NodeStatus
instance GHC.Read.Read Network.AWS.ManagedBlockChain.Types.NodeStatus.NodeStatus
instance GHC.Show.Show Network.AWS.ManagedBlockChain.Types.NodeStatus.NodeStatus


module Network.AWS.ManagedBlockChain.Types.NodeSummary

-- | A summary of configuration properties for a node.
--   
--   <i>See:</i> <a>newNodeSummary</a> smart constructor.
data NodeSummary
NodeSummary' :: Maybe NodeStatus -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> NodeSummary

-- | The status of the node.
[$sel:status:NodeSummary'] :: NodeSummary -> Maybe NodeStatus

-- | The Amazon Resource Name (ARN) of the node. For more information about
--   ARNs and their format, see <a>Amazon Resource Names (ARNs)</a> in the
--   <i>AWS General Reference</i>.
[$sel:arn:NodeSummary'] :: NodeSummary -> Maybe Text

-- | The EC2 instance type for the node.
[$sel:instanceType:NodeSummary'] :: NodeSummary -> Maybe Text

-- | The Availability Zone in which the node exists.
[$sel:availabilityZone:NodeSummary'] :: NodeSummary -> Maybe Text

-- | The unique identifier of the node.
[$sel:id:NodeSummary'] :: NodeSummary -> Maybe Text

-- | The date and time that the node was created.
[$sel:creationDate:NodeSummary'] :: NodeSummary -> Maybe POSIX

-- | Create a value of <a>NodeSummary</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:NodeSummary'</a>, <a>nodeSummary_status</a> - The
--   status of the node.
--   
--   <a>$sel:arn:NodeSummary'</a>, <a>nodeSummary_arn</a> - The Amazon
--   Resource Name (ARN) of the node. For more information about ARNs and
--   their format, see <a>Amazon Resource Names (ARNs)</a> in the <i>AWS
--   General Reference</i>.
--   
--   <a>$sel:instanceType:NodeSummary'</a>, <a>nodeSummary_instanceType</a>
--   - The EC2 instance type for the node.
--   
--   <a>$sel:availabilityZone:NodeSummary'</a>,
--   <a>nodeSummary_availabilityZone</a> - The Availability Zone in which
--   the node exists.
--   
--   <a>$sel:id:NodeSummary'</a>, <a>nodeSummary_id</a> - The unique
--   identifier of the node.
--   
--   <a>$sel:creationDate:NodeSummary'</a>, <a>nodeSummary_creationDate</a>
--   - The date and time that the node was created.
newNodeSummary :: NodeSummary

-- | The status of the node.
nodeSummary_status :: Lens' NodeSummary (Maybe NodeStatus)

-- | The Amazon Resource Name (ARN) of the node. For more information about
--   ARNs and their format, see <a>Amazon Resource Names (ARNs)</a> in the
--   <i>AWS General Reference</i>.
nodeSummary_arn :: Lens' NodeSummary (Maybe Text)

-- | The EC2 instance type for the node.
nodeSummary_instanceType :: Lens' NodeSummary (Maybe Text)

-- | The Availability Zone in which the node exists.
nodeSummary_availabilityZone :: Lens' NodeSummary (Maybe Text)

-- | The unique identifier of the node.
nodeSummary_id :: Lens' NodeSummary (Maybe Text)

-- | The date and time that the node was created.
nodeSummary_creationDate :: Lens' NodeSummary (Maybe UTCTime)
instance GHC.Generics.Generic Network.AWS.ManagedBlockChain.Types.NodeSummary.NodeSummary
instance GHC.Show.Show Network.AWS.ManagedBlockChain.Types.NodeSummary.NodeSummary
instance GHC.Read.Read Network.AWS.ManagedBlockChain.Types.NodeSummary.NodeSummary
instance GHC.Classes.Eq Network.AWS.ManagedBlockChain.Types.NodeSummary.NodeSummary
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ManagedBlockChain.Types.NodeSummary.NodeSummary
instance Data.Hashable.Class.Hashable Network.AWS.ManagedBlockChain.Types.NodeSummary.NodeSummary
instance Control.DeepSeq.NFData Network.AWS.ManagedBlockChain.Types.NodeSummary.NodeSummary


module Network.AWS.ManagedBlockChain.Types.ProposalStatus
newtype ProposalStatus
ProposalStatus' :: Text -> ProposalStatus
[fromProposalStatus] :: ProposalStatus -> Text
pattern ProposalStatus_ACTION_FAILED :: ProposalStatus
pattern ProposalStatus_APPROVED :: ProposalStatus
pattern ProposalStatus_EXPIRED :: ProposalStatus
pattern ProposalStatus_IN_PROGRESS :: ProposalStatus
pattern ProposalStatus_REJECTED :: ProposalStatus
instance Network.AWS.Data.XML.ToXML Network.AWS.ManagedBlockChain.Types.ProposalStatus.ProposalStatus
instance Network.AWS.Data.XML.FromXML Network.AWS.ManagedBlockChain.Types.ProposalStatus.ProposalStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.ManagedBlockChain.Types.ProposalStatus.ProposalStatus
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ManagedBlockChain.Types.ProposalStatus.ProposalStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.ManagedBlockChain.Types.ProposalStatus.ProposalStatus
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ManagedBlockChain.Types.ProposalStatus.ProposalStatus
instance Network.AWS.Data.Query.ToQuery Network.AWS.ManagedBlockChain.Types.ProposalStatus.ProposalStatus
instance Network.AWS.Data.Headers.ToHeader Network.AWS.ManagedBlockChain.Types.ProposalStatus.ProposalStatus
instance Network.AWS.Data.Log.ToLog Network.AWS.ManagedBlockChain.Types.ProposalStatus.ProposalStatus
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.ManagedBlockChain.Types.ProposalStatus.ProposalStatus
instance Network.AWS.Data.Text.ToText Network.AWS.ManagedBlockChain.Types.ProposalStatus.ProposalStatus
instance Network.AWS.Data.Text.FromText Network.AWS.ManagedBlockChain.Types.ProposalStatus.ProposalStatus
instance Control.DeepSeq.NFData Network.AWS.ManagedBlockChain.Types.ProposalStatus.ProposalStatus
instance Data.Hashable.Class.Hashable Network.AWS.ManagedBlockChain.Types.ProposalStatus.ProposalStatus
instance GHC.Generics.Generic Network.AWS.ManagedBlockChain.Types.ProposalStatus.ProposalStatus
instance GHC.Classes.Ord Network.AWS.ManagedBlockChain.Types.ProposalStatus.ProposalStatus
instance GHC.Classes.Eq Network.AWS.ManagedBlockChain.Types.ProposalStatus.ProposalStatus
instance GHC.Read.Read Network.AWS.ManagedBlockChain.Types.ProposalStatus.ProposalStatus
instance GHC.Show.Show Network.AWS.ManagedBlockChain.Types.ProposalStatus.ProposalStatus


module Network.AWS.ManagedBlockChain.Types.ProposalSummary

-- | Properties of a proposal.
--   
--   Applies only to Hyperledger Fabric.
--   
--   <i>See:</i> <a>newProposalSummary</a> smart constructor.
data ProposalSummary
ProposalSummary' :: Maybe ProposalStatus -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe POSIX -> Maybe Text -> ProposalSummary

-- | The status of the proposal. Values are as follows:
--   
--   <ul>
--   <li><tt>IN_PROGRESS</tt> - The proposal is active and open for member
--   voting.</li>
--   <li><tt>APPROVED</tt> - The proposal was approved with sufficient
--   <tt>YES</tt> votes among members according to the
--   <tt>VotingPolicy</tt> specified for the <tt>Network</tt>. The
--   specified proposal actions are carried out.</li>
--   <li><tt>REJECTED</tt> - The proposal was rejected with insufficient
--   <tt>YES</tt> votes among members according to the
--   <tt>VotingPolicy</tt> specified for the <tt>Network</tt>. The
--   specified <tt>ProposalActions</tt> are not carried out.</li>
--   <li><tt>EXPIRED</tt> - Members did not cast the number of votes
--   required to determine the proposal outcome before the proposal
--   expired. The specified <tt>ProposalActions</tt> are not carried
--   out.</li>
--   <li><tt>ACTION_FAILED</tt> - One or more of the specified
--   <tt>ProposalActions</tt> in a proposal that was approved could not be
--   completed because of an error.</li>
--   </ul>
[$sel:status:ProposalSummary'] :: ProposalSummary -> Maybe ProposalStatus

-- | The Amazon Resource Name (ARN) of the proposal. For more information
--   about ARNs and their format, see <a>Amazon Resource Names (ARNs)</a>
--   in the <i>AWS General Reference</i>.
[$sel:arn:ProposalSummary'] :: ProposalSummary -> Maybe Text

-- | The unique identifier of the member that created the proposal.
[$sel:proposedByMemberId:ProposalSummary'] :: ProposalSummary -> Maybe Text

-- | The unique identifier of the proposal.
[$sel:proposalId:ProposalSummary'] :: ProposalSummary -> Maybe Text

-- | The name of the member that created the proposal.
[$sel:proposedByMemberName:ProposalSummary'] :: ProposalSummary -> Maybe Text

-- | The date and time that the proposal expires. This is the
--   <tt>CreationDate</tt> plus the <tt>ProposalDurationInHours</tt> that
--   is specified in the <tt>ProposalThresholdPolicy</tt>. After this date
--   and time, if members have not cast enough votes to determine the
--   outcome according to the voting policy, the proposal is
--   <tt>EXPIRED</tt> and <tt>Actions</tt> are not carried out.
[$sel:expirationDate:ProposalSummary'] :: ProposalSummary -> Maybe POSIX

-- | The date and time that the proposal was created.
[$sel:creationDate:ProposalSummary'] :: ProposalSummary -> Maybe POSIX

-- | The description of the proposal.
[$sel:description:ProposalSummary'] :: ProposalSummary -> Maybe Text

-- | Create a value of <a>ProposalSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:ProposalSummary'</a>, <a>proposalSummary_status</a> -
--   The status of the proposal. Values are as follows:
--   
--   <ul>
--   <li><tt>IN_PROGRESS</tt> - The proposal is active and open for member
--   voting.</li>
--   <li><tt>APPROVED</tt> - The proposal was approved with sufficient
--   <tt>YES</tt> votes among members according to the
--   <tt>VotingPolicy</tt> specified for the <tt>Network</tt>. The
--   specified proposal actions are carried out.</li>
--   <li><tt>REJECTED</tt> - The proposal was rejected with insufficient
--   <tt>YES</tt> votes among members according to the
--   <tt>VotingPolicy</tt> specified for the <tt>Network</tt>. The
--   specified <tt>ProposalActions</tt> are not carried out.</li>
--   <li><tt>EXPIRED</tt> - Members did not cast the number of votes
--   required to determine the proposal outcome before the proposal
--   expired. The specified <tt>ProposalActions</tt> are not carried
--   out.</li>
--   <li><tt>ACTION_FAILED</tt> - One or more of the specified
--   <tt>ProposalActions</tt> in a proposal that was approved could not be
--   completed because of an error.</li>
--   </ul>
--   
--   <a>$sel:arn:ProposalSummary'</a>, <a>proposalSummary_arn</a> - The
--   Amazon Resource Name (ARN) of the proposal. For more information about
--   ARNs and their format, see <a>Amazon Resource Names (ARNs)</a> in the
--   <i>AWS General Reference</i>.
--   
--   <a>$sel:proposedByMemberId:ProposalSummary'</a>,
--   <a>proposalSummary_proposedByMemberId</a> - The unique identifier of
--   the member that created the proposal.
--   
--   <a>$sel:proposalId:ProposalSummary'</a>,
--   <a>proposalSummary_proposalId</a> - The unique identifier of the
--   proposal.
--   
--   <a>$sel:proposedByMemberName:ProposalSummary'</a>,
--   <a>proposalSummary_proposedByMemberName</a> - The name of the member
--   that created the proposal.
--   
--   <a>$sel:expirationDate:ProposalSummary'</a>,
--   <a>proposalSummary_expirationDate</a> - The date and time that the
--   proposal expires. This is the <tt>CreationDate</tt> plus the
--   <tt>ProposalDurationInHours</tt> that is specified in the
--   <tt>ProposalThresholdPolicy</tt>. After this date and time, if members
--   have not cast enough votes to determine the outcome according to the
--   voting policy, the proposal is <tt>EXPIRED</tt> and <tt>Actions</tt>
--   are not carried out.
--   
--   <a>$sel:creationDate:ProposalSummary'</a>,
--   <a>proposalSummary_creationDate</a> - The date and time that the
--   proposal was created.
--   
--   <a>$sel:description:ProposalSummary'</a>,
--   <a>proposalSummary_description</a> - The description of the proposal.
newProposalSummary :: ProposalSummary

-- | The status of the proposal. Values are as follows:
--   
--   <ul>
--   <li><tt>IN_PROGRESS</tt> - The proposal is active and open for member
--   voting.</li>
--   <li><tt>APPROVED</tt> - The proposal was approved with sufficient
--   <tt>YES</tt> votes among members according to the
--   <tt>VotingPolicy</tt> specified for the <tt>Network</tt>. The
--   specified proposal actions are carried out.</li>
--   <li><tt>REJECTED</tt> - The proposal was rejected with insufficient
--   <tt>YES</tt> votes among members according to the
--   <tt>VotingPolicy</tt> specified for the <tt>Network</tt>. The
--   specified <tt>ProposalActions</tt> are not carried out.</li>
--   <li><tt>EXPIRED</tt> - Members did not cast the number of votes
--   required to determine the proposal outcome before the proposal
--   expired. The specified <tt>ProposalActions</tt> are not carried
--   out.</li>
--   <li><tt>ACTION_FAILED</tt> - One or more of the specified
--   <tt>ProposalActions</tt> in a proposal that was approved could not be
--   completed because of an error.</li>
--   </ul>
proposalSummary_status :: Lens' ProposalSummary (Maybe ProposalStatus)

-- | The Amazon Resource Name (ARN) of the proposal. For more information
--   about ARNs and their format, see <a>Amazon Resource Names (ARNs)</a>
--   in the <i>AWS General Reference</i>.
proposalSummary_arn :: Lens' ProposalSummary (Maybe Text)

-- | The unique identifier of the member that created the proposal.
proposalSummary_proposedByMemberId :: Lens' ProposalSummary (Maybe Text)

-- | The unique identifier of the proposal.
proposalSummary_proposalId :: Lens' ProposalSummary (Maybe Text)

-- | The name of the member that created the proposal.
proposalSummary_proposedByMemberName :: Lens' ProposalSummary (Maybe Text)

-- | The date and time that the proposal expires. This is the
--   <tt>CreationDate</tt> plus the <tt>ProposalDurationInHours</tt> that
--   is specified in the <tt>ProposalThresholdPolicy</tt>. After this date
--   and time, if members have not cast enough votes to determine the
--   outcome according to the voting policy, the proposal is
--   <tt>EXPIRED</tt> and <tt>Actions</tt> are not carried out.
proposalSummary_expirationDate :: Lens' ProposalSummary (Maybe UTCTime)

-- | The date and time that the proposal was created.
proposalSummary_creationDate :: Lens' ProposalSummary (Maybe UTCTime)

-- | The description of the proposal.
proposalSummary_description :: Lens' ProposalSummary (Maybe Text)
instance GHC.Generics.Generic Network.AWS.ManagedBlockChain.Types.ProposalSummary.ProposalSummary
instance GHC.Show.Show Network.AWS.ManagedBlockChain.Types.ProposalSummary.ProposalSummary
instance GHC.Read.Read Network.AWS.ManagedBlockChain.Types.ProposalSummary.ProposalSummary
instance GHC.Classes.Eq Network.AWS.ManagedBlockChain.Types.ProposalSummary.ProposalSummary
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ManagedBlockChain.Types.ProposalSummary.ProposalSummary
instance Data.Hashable.Class.Hashable Network.AWS.ManagedBlockChain.Types.ProposalSummary.ProposalSummary
instance Control.DeepSeq.NFData Network.AWS.ManagedBlockChain.Types.ProposalSummary.ProposalSummary


module Network.AWS.ManagedBlockChain.Types.RemoveAction

-- | An action to remove a member from a Managed Blockchain network as the
--   result of a removal proposal that is <tt>APPROVED</tt>. The member and
--   all associated resources are deleted from the network.
--   
--   Applies only to Hyperledger Fabric.
--   
--   <i>See:</i> <a>newRemoveAction</a> smart constructor.
data RemoveAction
RemoveAction' :: Text -> RemoveAction

-- | The unique identifier of the member to remove.
[$sel:memberId:RemoveAction'] :: RemoveAction -> Text

-- | Create a value of <a>RemoveAction</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:memberId:RemoveAction'</a>, <a>removeAction_memberId</a> - The
--   unique identifier of the member to remove.
newRemoveAction :: Text -> RemoveAction

-- | The unique identifier of the member to remove.
removeAction_memberId :: Lens' RemoveAction Text
instance GHC.Generics.Generic Network.AWS.ManagedBlockChain.Types.RemoveAction.RemoveAction
instance GHC.Show.Show Network.AWS.ManagedBlockChain.Types.RemoveAction.RemoveAction
instance GHC.Read.Read Network.AWS.ManagedBlockChain.Types.RemoveAction.RemoveAction
instance GHC.Classes.Eq Network.AWS.ManagedBlockChain.Types.RemoveAction.RemoveAction
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ManagedBlockChain.Types.RemoveAction.RemoveAction
instance Data.Hashable.Class.Hashable Network.AWS.ManagedBlockChain.Types.RemoveAction.RemoveAction
instance Control.DeepSeq.NFData Network.AWS.ManagedBlockChain.Types.RemoveAction.RemoveAction
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ManagedBlockChain.Types.RemoveAction.RemoveAction


module Network.AWS.ManagedBlockChain.Types.ProposalActions

-- | The actions to carry out if a proposal is <tt>APPROVED</tt>.
--   
--   Applies only to Hyperledger Fabric.
--   
--   <i>See:</i> <a>newProposalActions</a> smart constructor.
data ProposalActions
ProposalActions' :: Maybe [InviteAction] -> Maybe [RemoveAction] -> ProposalActions

-- | The actions to perform for an <tt>APPROVED</tt> proposal to invite an
--   AWS account to create a member and join the network.
[$sel:invitations:ProposalActions'] :: ProposalActions -> Maybe [InviteAction]

-- | The actions to perform for an <tt>APPROVED</tt> proposal to remove a
--   member from the network, which deletes the member and all associated
--   member resources from the network.
[$sel:removals:ProposalActions'] :: ProposalActions -> Maybe [RemoveAction]

-- | Create a value of <a>ProposalActions</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:invitations:ProposalActions'</a>,
--   <a>proposalActions_invitations</a> - The actions to perform for an
--   <tt>APPROVED</tt> proposal to invite an AWS account to create a member
--   and join the network.
--   
--   <a>$sel:removals:ProposalActions'</a>, <a>proposalActions_removals</a>
--   - The actions to perform for an <tt>APPROVED</tt> proposal to remove a
--   member from the network, which deletes the member and all associated
--   member resources from the network.
newProposalActions :: ProposalActions

-- | The actions to perform for an <tt>APPROVED</tt> proposal to invite an
--   AWS account to create a member and join the network.
proposalActions_invitations :: Lens' ProposalActions (Maybe [InviteAction])

-- | The actions to perform for an <tt>APPROVED</tt> proposal to remove a
--   member from the network, which deletes the member and all associated
--   member resources from the network.
proposalActions_removals :: Lens' ProposalActions (Maybe [RemoveAction])
instance GHC.Generics.Generic Network.AWS.ManagedBlockChain.Types.ProposalActions.ProposalActions
instance GHC.Show.Show Network.AWS.ManagedBlockChain.Types.ProposalActions.ProposalActions
instance GHC.Read.Read Network.AWS.ManagedBlockChain.Types.ProposalActions.ProposalActions
instance GHC.Classes.Eq Network.AWS.ManagedBlockChain.Types.ProposalActions.ProposalActions
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ManagedBlockChain.Types.ProposalActions.ProposalActions
instance Data.Hashable.Class.Hashable Network.AWS.ManagedBlockChain.Types.ProposalActions.ProposalActions
instance Control.DeepSeq.NFData Network.AWS.ManagedBlockChain.Types.ProposalActions.ProposalActions
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ManagedBlockChain.Types.ProposalActions.ProposalActions


module Network.AWS.ManagedBlockChain.Types.Proposal

-- | Properties of a proposal on a Managed Blockchain network.
--   
--   Applies only to Hyperledger Fabric.
--   
--   <i>See:</i> <a>newProposal</a> smart constructor.
data Proposal
Proposal' :: Maybe ProposalStatus -> Maybe Int -> Maybe Int -> Maybe Text -> Maybe ProposalActions -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe POSIX -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe Int -> Proposal

-- | The status of the proposal. Values are as follows:
--   
--   <ul>
--   <li><tt>IN_PROGRESS</tt> - The proposal is active and open for member
--   voting.</li>
--   <li><tt>APPROVED</tt> - The proposal was approved with sufficient
--   <tt>YES</tt> votes among members according to the
--   <tt>VotingPolicy</tt> specified for the <tt>Network</tt>. The
--   specified proposal actions are carried out.</li>
--   <li><tt>REJECTED</tt> - The proposal was rejected with insufficient
--   <tt>YES</tt> votes among members according to the
--   <tt>VotingPolicy</tt> specified for the <tt>Network</tt>. The
--   specified <tt>ProposalActions</tt> are not carried out.</li>
--   <li><tt>EXPIRED</tt> - Members did not cast the number of votes
--   required to determine the proposal outcome before the proposal
--   expired. The specified <tt>ProposalActions</tt> are not carried
--   out.</li>
--   <li><tt>ACTION_FAILED</tt> - One or more of the specified
--   <tt>ProposalActions</tt> in a proposal that was approved could not be
--   completed because of an error. The <tt>ACTION_FAILED</tt> status
--   occurs even if only one ProposalAction fails and other actions are
--   successful.</li>
--   </ul>
[$sel:status:Proposal'] :: Proposal -> Maybe ProposalStatus

-- | The current total of <tt>YES</tt> votes cast on the proposal by
--   members.
[$sel:yesVoteCount:Proposal'] :: Proposal -> Maybe Int

-- | The current total of <tt>NO</tt> votes cast on the proposal by
--   members.
[$sel:noVoteCount:Proposal'] :: Proposal -> Maybe Int

-- | The Amazon Resource Name (ARN) of the proposal. For more information
--   about ARNs and their format, see <a>Amazon Resource Names (ARNs)</a>
--   in the <i>AWS General Reference</i>.
[$sel:arn:Proposal'] :: Proposal -> Maybe Text

-- | The actions to perform on the network if the proposal is
--   <tt>APPROVED</tt>.
[$sel:actions:Proposal'] :: Proposal -> Maybe ProposalActions

-- | The unique identifier of the network for which the proposal is made.
[$sel:networkId:Proposal'] :: Proposal -> Maybe Text

-- | The unique identifier of the member that created the proposal.
[$sel:proposedByMemberId:Proposal'] :: Proposal -> Maybe Text

-- | The unique identifier of the proposal.
[$sel:proposalId:Proposal'] :: Proposal -> Maybe Text

-- | The name of the member that created the proposal.
[$sel:proposedByMemberName:Proposal'] :: Proposal -> Maybe Text

-- | The date and time that the proposal expires. This is the
--   <tt>CreationDate</tt> plus the <tt>ProposalDurationInHours</tt> that
--   is specified in the <tt>ProposalThresholdPolicy</tt>. After this date
--   and time, if members have not cast enough votes to determine the
--   outcome according to the voting policy, the proposal is
--   <tt>EXPIRED</tt> and <tt>Actions</tt> are not carried out.
[$sel:expirationDate:Proposal'] :: Proposal -> Maybe POSIX

-- | The date and time that the proposal was created.
[$sel:creationDate:Proposal'] :: Proposal -> Maybe POSIX

-- | The description of the proposal.
[$sel:description:Proposal'] :: Proposal -> Maybe Text

-- | Tags assigned to the proposal. Each tag consists of a key and optional
--   value.
--   
--   For more information about tags, see <a>Tagging Resources</a> in the
--   <i>Amazon Managed Blockchain Ethereum Developer Guide</i>, or
--   <a>Tagging Resources</a> in the <i>Amazon Managed Blockchain
--   Hyperledger Fabric Developer Guide</i>.
[$sel:tags:Proposal'] :: Proposal -> Maybe (HashMap Text Text)

-- | The number of votes remaining to be cast on the proposal by members.
--   In other words, the number of members minus the sum of <tt>YES</tt>
--   votes and <tt>NO</tt> votes.
[$sel:outstandingVoteCount:Proposal'] :: Proposal -> Maybe Int

-- | Create a value of <a>Proposal</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:Proposal'</a>, <a>proposal_status</a> - The status of
--   the proposal. Values are as follows:
--   
--   <ul>
--   <li><tt>IN_PROGRESS</tt> - The proposal is active and open for member
--   voting.</li>
--   <li><tt>APPROVED</tt> - The proposal was approved with sufficient
--   <tt>YES</tt> votes among members according to the
--   <tt>VotingPolicy</tt> specified for the <tt>Network</tt>. The
--   specified proposal actions are carried out.</li>
--   <li><tt>REJECTED</tt> - The proposal was rejected with insufficient
--   <tt>YES</tt> votes among members according to the
--   <tt>VotingPolicy</tt> specified for the <tt>Network</tt>. The
--   specified <tt>ProposalActions</tt> are not carried out.</li>
--   <li><tt>EXPIRED</tt> - Members did not cast the number of votes
--   required to determine the proposal outcome before the proposal
--   expired. The specified <tt>ProposalActions</tt> are not carried
--   out.</li>
--   <li><tt>ACTION_FAILED</tt> - One or more of the specified
--   <tt>ProposalActions</tt> in a proposal that was approved could not be
--   completed because of an error. The <tt>ACTION_FAILED</tt> status
--   occurs even if only one ProposalAction fails and other actions are
--   successful.</li>
--   </ul>
--   
--   <a>$sel:yesVoteCount:Proposal'</a>, <a>proposal_yesVoteCount</a> - The
--   current total of <tt>YES</tt> votes cast on the proposal by members.
--   
--   <a>$sel:noVoteCount:Proposal'</a>, <a>proposal_noVoteCount</a> - The
--   current total of <tt>NO</tt> votes cast on the proposal by members.
--   
--   <a>$sel:arn:Proposal'</a>, <a>proposal_arn</a> - The Amazon Resource
--   Name (ARN) of the proposal. For more information about ARNs and their
--   format, see <a>Amazon Resource Names (ARNs)</a> in the <i>AWS General
--   Reference</i>.
--   
--   <a>$sel:actions:Proposal'</a>, <a>proposal_actions</a> - The actions
--   to perform on the network if the proposal is <tt>APPROVED</tt>.
--   
--   <a>$sel:networkId:Proposal'</a>, <a>proposal_networkId</a> - The
--   unique identifier of the network for which the proposal is made.
--   
--   <a>$sel:proposedByMemberId:Proposal'</a>,
--   <a>proposal_proposedByMemberId</a> - The unique identifier of the
--   member that created the proposal.
--   
--   <a>$sel:proposalId:Proposal'</a>, <a>proposal_proposalId</a> - The
--   unique identifier of the proposal.
--   
--   <a>$sel:proposedByMemberName:Proposal'</a>,
--   <a>proposal_proposedByMemberName</a> - The name of the member that
--   created the proposal.
--   
--   <a>$sel:expirationDate:Proposal'</a>, <a>proposal_expirationDate</a> -
--   The date and time that the proposal expires. This is the
--   <tt>CreationDate</tt> plus the <tt>ProposalDurationInHours</tt> that
--   is specified in the <tt>ProposalThresholdPolicy</tt>. After this date
--   and time, if members have not cast enough votes to determine the
--   outcome according to the voting policy, the proposal is
--   <tt>EXPIRED</tt> and <tt>Actions</tt> are not carried out.
--   
--   <a>$sel:creationDate:Proposal'</a>, <a>proposal_creationDate</a> - The
--   date and time that the proposal was created.
--   
--   <a>$sel:description:Proposal'</a>, <a>proposal_description</a> - The
--   description of the proposal.
--   
--   <a>$sel:tags:Proposal'</a>, <a>proposal_tags</a> - Tags assigned to
--   the proposal. Each tag consists of a key and optional value.
--   
--   For more information about tags, see <a>Tagging Resources</a> in the
--   <i>Amazon Managed Blockchain Ethereum Developer Guide</i>, or
--   <a>Tagging Resources</a> in the <i>Amazon Managed Blockchain
--   Hyperledger Fabric Developer Guide</i>.
--   
--   <a>$sel:outstandingVoteCount:Proposal'</a>,
--   <a>proposal_outstandingVoteCount</a> - The number of votes remaining
--   to be cast on the proposal by members. In other words, the number of
--   members minus the sum of <tt>YES</tt> votes and <tt>NO</tt> votes.
newProposal :: Proposal

-- | The status of the proposal. Values are as follows:
--   
--   <ul>
--   <li><tt>IN_PROGRESS</tt> - The proposal is active and open for member
--   voting.</li>
--   <li><tt>APPROVED</tt> - The proposal was approved with sufficient
--   <tt>YES</tt> votes among members according to the
--   <tt>VotingPolicy</tt> specified for the <tt>Network</tt>. The
--   specified proposal actions are carried out.</li>
--   <li><tt>REJECTED</tt> - The proposal was rejected with insufficient
--   <tt>YES</tt> votes among members according to the
--   <tt>VotingPolicy</tt> specified for the <tt>Network</tt>. The
--   specified <tt>ProposalActions</tt> are not carried out.</li>
--   <li><tt>EXPIRED</tt> - Members did not cast the number of votes
--   required to determine the proposal outcome before the proposal
--   expired. The specified <tt>ProposalActions</tt> are not carried
--   out.</li>
--   <li><tt>ACTION_FAILED</tt> - One or more of the specified
--   <tt>ProposalActions</tt> in a proposal that was approved could not be
--   completed because of an error. The <tt>ACTION_FAILED</tt> status
--   occurs even if only one ProposalAction fails and other actions are
--   successful.</li>
--   </ul>
proposal_status :: Lens' Proposal (Maybe ProposalStatus)

-- | The current total of <tt>YES</tt> votes cast on the proposal by
--   members.
proposal_yesVoteCount :: Lens' Proposal (Maybe Int)

-- | The current total of <tt>NO</tt> votes cast on the proposal by
--   members.
proposal_noVoteCount :: Lens' Proposal (Maybe Int)

-- | The Amazon Resource Name (ARN) of the proposal. For more information
--   about ARNs and their format, see <a>Amazon Resource Names (ARNs)</a>
--   in the <i>AWS General Reference</i>.
proposal_arn :: Lens' Proposal (Maybe Text)

-- | The actions to perform on the network if the proposal is
--   <tt>APPROVED</tt>.
proposal_actions :: Lens' Proposal (Maybe ProposalActions)

-- | The unique identifier of the network for which the proposal is made.
proposal_networkId :: Lens' Proposal (Maybe Text)

-- | The unique identifier of the member that created the proposal.
proposal_proposedByMemberId :: Lens' Proposal (Maybe Text)

-- | The unique identifier of the proposal.
proposal_proposalId :: Lens' Proposal (Maybe Text)

-- | The name of the member that created the proposal.
proposal_proposedByMemberName :: Lens' Proposal (Maybe Text)

-- | The date and time that the proposal expires. This is the
--   <tt>CreationDate</tt> plus the <tt>ProposalDurationInHours</tt> that
--   is specified in the <tt>ProposalThresholdPolicy</tt>. After this date
--   and time, if members have not cast enough votes to determine the
--   outcome according to the voting policy, the proposal is
--   <tt>EXPIRED</tt> and <tt>Actions</tt> are not carried out.
proposal_expirationDate :: Lens' Proposal (Maybe UTCTime)

-- | The date and time that the proposal was created.
proposal_creationDate :: Lens' Proposal (Maybe UTCTime)

-- | The description of the proposal.
proposal_description :: Lens' Proposal (Maybe Text)

-- | Tags assigned to the proposal. Each tag consists of a key and optional
--   value.
--   
--   For more information about tags, see <a>Tagging Resources</a> in the
--   <i>Amazon Managed Blockchain Ethereum Developer Guide</i>, or
--   <a>Tagging Resources</a> in the <i>Amazon Managed Blockchain
--   Hyperledger Fabric Developer Guide</i>.
proposal_tags :: Lens' Proposal (Maybe (HashMap Text Text))

-- | The number of votes remaining to be cast on the proposal by members.
--   In other words, the number of members minus the sum of <tt>YES</tt>
--   votes and <tt>NO</tt> votes.
proposal_outstandingVoteCount :: Lens' Proposal (Maybe Int)
instance GHC.Generics.Generic Network.AWS.ManagedBlockChain.Types.Proposal.Proposal
instance GHC.Show.Show Network.AWS.ManagedBlockChain.Types.Proposal.Proposal
instance GHC.Read.Read Network.AWS.ManagedBlockChain.Types.Proposal.Proposal
instance GHC.Classes.Eq Network.AWS.ManagedBlockChain.Types.Proposal.Proposal
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ManagedBlockChain.Types.Proposal.Proposal
instance Data.Hashable.Class.Hashable Network.AWS.ManagedBlockChain.Types.Proposal.Proposal
instance Control.DeepSeq.NFData Network.AWS.ManagedBlockChain.Types.Proposal.Proposal


module Network.AWS.ManagedBlockChain.Types.StateDBType
newtype StateDBType
StateDBType' :: Text -> StateDBType
[fromStateDBType] :: StateDBType -> Text
pattern StateDBType_CouchDB :: StateDBType
pattern StateDBType_LevelDB :: StateDBType
instance Network.AWS.Data.XML.ToXML Network.AWS.ManagedBlockChain.Types.StateDBType.StateDBType
instance Network.AWS.Data.XML.FromXML Network.AWS.ManagedBlockChain.Types.StateDBType.StateDBType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.ManagedBlockChain.Types.StateDBType.StateDBType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ManagedBlockChain.Types.StateDBType.StateDBType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.ManagedBlockChain.Types.StateDBType.StateDBType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ManagedBlockChain.Types.StateDBType.StateDBType
instance Network.AWS.Data.Query.ToQuery Network.AWS.ManagedBlockChain.Types.StateDBType.StateDBType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.ManagedBlockChain.Types.StateDBType.StateDBType
instance Network.AWS.Data.Log.ToLog Network.AWS.ManagedBlockChain.Types.StateDBType.StateDBType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.ManagedBlockChain.Types.StateDBType.StateDBType
instance Network.AWS.Data.Text.ToText Network.AWS.ManagedBlockChain.Types.StateDBType.StateDBType
instance Network.AWS.Data.Text.FromText Network.AWS.ManagedBlockChain.Types.StateDBType.StateDBType
instance Control.DeepSeq.NFData Network.AWS.ManagedBlockChain.Types.StateDBType.StateDBType
instance Data.Hashable.Class.Hashable Network.AWS.ManagedBlockChain.Types.StateDBType.StateDBType
instance GHC.Generics.Generic Network.AWS.ManagedBlockChain.Types.StateDBType.StateDBType
instance GHC.Classes.Ord Network.AWS.ManagedBlockChain.Types.StateDBType.StateDBType
instance GHC.Classes.Eq Network.AWS.ManagedBlockChain.Types.StateDBType.StateDBType
instance GHC.Read.Read Network.AWS.ManagedBlockChain.Types.StateDBType.StateDBType
instance GHC.Show.Show Network.AWS.ManagedBlockChain.Types.StateDBType.StateDBType


module Network.AWS.ManagedBlockChain.Types.NodeConfiguration

-- | Configuration properties of a node.
--   
--   <i>See:</i> <a>newNodeConfiguration</a> smart constructor.
data NodeConfiguration
NodeConfiguration' :: Maybe NodeLogPublishingConfiguration -> Maybe StateDBType -> Maybe Text -> Text -> NodeConfiguration

-- | Configuration properties for logging events associated with a peer
--   node on a Hyperledger Fabric network on Managed Blockchain.
[$sel:logPublishingConfiguration:NodeConfiguration'] :: NodeConfiguration -> Maybe NodeLogPublishingConfiguration

-- | The state database that the node uses. Values are <tt>LevelDB</tt> or
--   <tt>CouchDB</tt>. When using an Amazon Managed Blockchain network with
--   Hyperledger Fabric version 1.4 or later, the default is
--   <tt>CouchDB</tt>.
--   
--   Applies only to Hyperledger Fabric.
[$sel:stateDB:NodeConfiguration'] :: NodeConfiguration -> Maybe StateDBType

-- | The Availability Zone in which the node exists. Required for Ethereum
--   nodes.
[$sel:availabilityZone:NodeConfiguration'] :: NodeConfiguration -> Maybe Text

-- | The Amazon Managed Blockchain instance type for the node.
[$sel:instanceType:NodeConfiguration'] :: NodeConfiguration -> Text

-- | Create a value of <a>NodeConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:logPublishingConfiguration:NodeConfiguration'</a>,
--   <a>nodeConfiguration_logPublishingConfiguration</a> - Configuration
--   properties for logging events associated with a peer node on a
--   Hyperledger Fabric network on Managed Blockchain.
--   
--   <a>$sel:stateDB:NodeConfiguration'</a>,
--   <a>nodeConfiguration_stateDB</a> - The state database that the node
--   uses. Values are <tt>LevelDB</tt> or <tt>CouchDB</tt>. When using an
--   Amazon Managed Blockchain network with Hyperledger Fabric version 1.4
--   or later, the default is <tt>CouchDB</tt>.
--   
--   Applies only to Hyperledger Fabric.
--   
--   <a>$sel:availabilityZone:NodeConfiguration'</a>,
--   <a>nodeConfiguration_availabilityZone</a> - The Availability Zone in
--   which the node exists. Required for Ethereum nodes.
--   
--   <a>$sel:instanceType:NodeConfiguration'</a>,
--   <a>nodeConfiguration_instanceType</a> - The Amazon Managed Blockchain
--   instance type for the node.
newNodeConfiguration :: Text -> NodeConfiguration

-- | Configuration properties for logging events associated with a peer
--   node on a Hyperledger Fabric network on Managed Blockchain.
nodeConfiguration_logPublishingConfiguration :: Lens' NodeConfiguration (Maybe NodeLogPublishingConfiguration)

-- | The state database that the node uses. Values are <tt>LevelDB</tt> or
--   <tt>CouchDB</tt>. When using an Amazon Managed Blockchain network with
--   Hyperledger Fabric version 1.4 or later, the default is
--   <tt>CouchDB</tt>.
--   
--   Applies only to Hyperledger Fabric.
nodeConfiguration_stateDB :: Lens' NodeConfiguration (Maybe StateDBType)

-- | The Availability Zone in which the node exists. Required for Ethereum
--   nodes.
nodeConfiguration_availabilityZone :: Lens' NodeConfiguration (Maybe Text)

-- | The Amazon Managed Blockchain instance type for the node.
nodeConfiguration_instanceType :: Lens' NodeConfiguration Text
instance GHC.Generics.Generic Network.AWS.ManagedBlockChain.Types.NodeConfiguration.NodeConfiguration
instance GHC.Show.Show Network.AWS.ManagedBlockChain.Types.NodeConfiguration.NodeConfiguration
instance GHC.Read.Read Network.AWS.ManagedBlockChain.Types.NodeConfiguration.NodeConfiguration
instance GHC.Classes.Eq Network.AWS.ManagedBlockChain.Types.NodeConfiguration.NodeConfiguration
instance Data.Hashable.Class.Hashable Network.AWS.ManagedBlockChain.Types.NodeConfiguration.NodeConfiguration
instance Control.DeepSeq.NFData Network.AWS.ManagedBlockChain.Types.NodeConfiguration.NodeConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ManagedBlockChain.Types.NodeConfiguration.NodeConfiguration


module Network.AWS.ManagedBlockChain.Types.Node

-- | Configuration properties of a node.
--   
--   <i>See:</i> <a>newNode</a> smart constructor.
data Node
Node' :: Maybe NodeStatus -> Maybe Text -> Maybe NodeLogPublishingConfiguration -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe StateDBType -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe NodeFrameworkAttributes -> Maybe (HashMap Text Text) -> Node

-- | The status of the node.
--   
--   <ul>
--   <li><tt>CREATING</tt> - The AWS account is in the process of creating
--   a node.</li>
--   <li><tt>AVAILABLE</tt> - The node has been created and can participate
--   in the network.</li>
--   <li><tt>UNHEALTHY</tt> - The node is impaired and might not function
--   as expected. Amazon Managed Blockchain automatically finds nodes in
--   this state and tries to recover them. If a node is recoverable, it
--   returns to <tt>AVAILABLE</tt>. Otherwise, it moves to <tt>FAILED</tt>
--   status.</li>
--   <li><tt>CREATE_FAILED</tt> - The AWS account attempted to create a
--   node and creation failed.</li>
--   <li><tt>UPDATING</tt> - The node is in the process of being
--   updated.</li>
--   <li><tt>DELETING</tt> - The node is in the process of being
--   deleted.</li>
--   <li><tt>DELETED</tt> - The node can no longer participate on the
--   network.</li>
--   <li><tt>FAILED</tt> - The node is no longer functional, cannot be
--   recovered, and must be deleted.</li>
--   <li><tt>INACCESSIBLE_ENCRYPTION_KEY</tt> - The node is impaired and
--   might not function as expected because it cannot access the specified
--   customer managed key in AWS KMS for encryption at rest. Either the KMS
--   key was disabled or deleted, or the grants on the key were revoked.The
--   effect of disabling or deleting a key, or revoking a grant is not
--   immediate. The node resource might take some time to find that the key
--   is inaccessible. When a resource is in this state, we recommend
--   deleting and recreating the resource.</li>
--   </ul>
[$sel:status:Node'] :: Node -> Maybe NodeStatus

-- | The Amazon Resource Name (ARN) of the customer managed key in AWS Key
--   Management Service (AWS KMS) that the node uses for encryption at
--   rest. If the value of this parameter is <tt>"AWS Owned KMS Key"</tt>,
--   the node uses an AWS owned KMS key for encryption. The node inherits
--   this parameter from the member that it belongs to.
--   
--   Applies only to Hyperledger Fabric.
[$sel:kmsKeyArn:Node'] :: Node -> Maybe Text

-- | Configuration properties for logging events associated with a peer
--   node on a Hyperledger Fabric network on Managed Blockchain.
[$sel:logPublishingConfiguration:Node'] :: Node -> Maybe NodeLogPublishingConfiguration

-- | The unique identifier of the member to which the node belongs.
--   
--   Applies only to Hyperledger Fabric.
[$sel:memberId:Node'] :: Node -> Maybe Text

-- | The Amazon Resource Name (ARN) of the node. For more information about
--   ARNs and their format, see <a>Amazon Resource Names (ARNs)</a> in the
--   <i>AWS General Reference</i>.
[$sel:arn:Node'] :: Node -> Maybe Text

-- | The unique identifier of the network that the node is on.
[$sel:networkId:Node'] :: Node -> Maybe Text

-- | The instance type of the node.
[$sel:instanceType:Node'] :: Node -> Maybe Text

-- | The state database that the node uses. Values are <tt>LevelDB</tt> or
--   <tt>CouchDB</tt>.
--   
--   Applies only to Hyperledger Fabric.
[$sel:stateDB:Node'] :: Node -> Maybe StateDBType

-- | The Availability Zone in which the node exists. Required for Ethereum
--   nodes.
[$sel:availabilityZone:Node'] :: Node -> Maybe Text

-- | The unique identifier of the node.
[$sel:id:Node'] :: Node -> Maybe Text

-- | The date and time that the node was created.
[$sel:creationDate:Node'] :: Node -> Maybe POSIX

-- | Attributes of the blockchain framework being used.
[$sel:frameworkAttributes:Node'] :: Node -> Maybe NodeFrameworkAttributes

-- | Tags assigned to the node. Each tag consists of a key and optional
--   value.
--   
--   For more information about tags, see <a>Tagging Resources</a> in the
--   <i>Amazon Managed Blockchain Ethereum Developer Guide</i>, or
--   <a>Tagging Resources</a> in the <i>Amazon Managed Blockchain
--   Hyperledger Fabric Developer Guide</i>.
[$sel:tags:Node'] :: Node -> Maybe (HashMap Text Text)

-- | Create a value of <a>Node</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:Node'</a>, <a>node_status</a> - The status of the node.
--   
--   <ul>
--   <li><tt>CREATING</tt> - The AWS account is in the process of creating
--   a node.</li>
--   <li><tt>AVAILABLE</tt> - The node has been created and can participate
--   in the network.</li>
--   <li><tt>UNHEALTHY</tt> - The node is impaired and might not function
--   as expected. Amazon Managed Blockchain automatically finds nodes in
--   this state and tries to recover them. If a node is recoverable, it
--   returns to <tt>AVAILABLE</tt>. Otherwise, it moves to <tt>FAILED</tt>
--   status.</li>
--   <li><tt>CREATE_FAILED</tt> - The AWS account attempted to create a
--   node and creation failed.</li>
--   <li><tt>UPDATING</tt> - The node is in the process of being
--   updated.</li>
--   <li><tt>DELETING</tt> - The node is in the process of being
--   deleted.</li>
--   <li><tt>DELETED</tt> - The node can no longer participate on the
--   network.</li>
--   <li><tt>FAILED</tt> - The node is no longer functional, cannot be
--   recovered, and must be deleted.</li>
--   <li><tt>INACCESSIBLE_ENCRYPTION_KEY</tt> - The node is impaired and
--   might not function as expected because it cannot access the specified
--   customer managed key in AWS KMS for encryption at rest. Either the KMS
--   key was disabled or deleted, or the grants on the key were revoked.The
--   effect of disabling or deleting a key, or revoking a grant is not
--   immediate. The node resource might take some time to find that the key
--   is inaccessible. When a resource is in this state, we recommend
--   deleting and recreating the resource.</li>
--   </ul>
--   
--   <a>$sel:kmsKeyArn:Node'</a>, <a>node_kmsKeyArn</a> - The Amazon
--   Resource Name (ARN) of the customer managed key in AWS Key Management
--   Service (AWS KMS) that the node uses for encryption at rest. If the
--   value of this parameter is <tt>"AWS Owned KMS Key"</tt>, the node uses
--   an AWS owned KMS key for encryption. The node inherits this parameter
--   from the member that it belongs to.
--   
--   Applies only to Hyperledger Fabric.
--   
--   <a>$sel:logPublishingConfiguration:Node'</a>,
--   <a>node_logPublishingConfiguration</a> - Configuration properties for
--   logging events associated with a peer node on a Hyperledger Fabric
--   network on Managed Blockchain.
--   
--   <a>$sel:memberId:Node'</a>, <a>node_memberId</a> - The unique
--   identifier of the member to which the node belongs.
--   
--   Applies only to Hyperledger Fabric.
--   
--   <a>$sel:arn:Node'</a>, <a>node_arn</a> - The Amazon Resource Name
--   (ARN) of the node. For more information about ARNs and their format,
--   see <a>Amazon Resource Names (ARNs)</a> in the <i>AWS General
--   Reference</i>.
--   
--   <a>$sel:networkId:Node'</a>, <a>node_networkId</a> - The unique
--   identifier of the network that the node is on.
--   
--   <a>$sel:instanceType:Node'</a>, <a>node_instanceType</a> - The
--   instance type of the node.
--   
--   <a>$sel:stateDB:Node'</a>, <a>node_stateDB</a> - The state database
--   that the node uses. Values are <tt>LevelDB</tt> or <tt>CouchDB</tt>.
--   
--   Applies only to Hyperledger Fabric.
--   
--   <a>$sel:availabilityZone:Node'</a>, <a>node_availabilityZone</a> - The
--   Availability Zone in which the node exists. Required for Ethereum
--   nodes.
--   
--   <a>$sel:id:Node'</a>, <a>node_id</a> - The unique identifier of the
--   node.
--   
--   <a>$sel:creationDate:Node'</a>, <a>node_creationDate</a> - The date
--   and time that the node was created.
--   
--   <a>$sel:frameworkAttributes:Node'</a>, <a>node_frameworkAttributes</a>
--   - Attributes of the blockchain framework being used.
--   
--   <a>$sel:tags:Node'</a>, <a>node_tags</a> - Tags assigned to the node.
--   Each tag consists of a key and optional value.
--   
--   For more information about tags, see <a>Tagging Resources</a> in the
--   <i>Amazon Managed Blockchain Ethereum Developer Guide</i>, or
--   <a>Tagging Resources</a> in the <i>Amazon Managed Blockchain
--   Hyperledger Fabric Developer Guide</i>.
newNode :: Node

-- | The status of the node.
--   
--   <ul>
--   <li><tt>CREATING</tt> - The AWS account is in the process of creating
--   a node.</li>
--   <li><tt>AVAILABLE</tt> - The node has been created and can participate
--   in the network.</li>
--   <li><tt>UNHEALTHY</tt> - The node is impaired and might not function
--   as expected. Amazon Managed Blockchain automatically finds nodes in
--   this state and tries to recover them. If a node is recoverable, it
--   returns to <tt>AVAILABLE</tt>. Otherwise, it moves to <tt>FAILED</tt>
--   status.</li>
--   <li><tt>CREATE_FAILED</tt> - The AWS account attempted to create a
--   node and creation failed.</li>
--   <li><tt>UPDATING</tt> - The node is in the process of being
--   updated.</li>
--   <li><tt>DELETING</tt> - The node is in the process of being
--   deleted.</li>
--   <li><tt>DELETED</tt> - The node can no longer participate on the
--   network.</li>
--   <li><tt>FAILED</tt> - The node is no longer functional, cannot be
--   recovered, and must be deleted.</li>
--   <li><tt>INACCESSIBLE_ENCRYPTION_KEY</tt> - The node is impaired and
--   might not function as expected because it cannot access the specified
--   customer managed key in AWS KMS for encryption at rest. Either the KMS
--   key was disabled or deleted, or the grants on the key were revoked.The
--   effect of disabling or deleting a key, or revoking a grant is not
--   immediate. The node resource might take some time to find that the key
--   is inaccessible. When a resource is in this state, we recommend
--   deleting and recreating the resource.</li>
--   </ul>
node_status :: Lens' Node (Maybe NodeStatus)

-- | The Amazon Resource Name (ARN) of the customer managed key in AWS Key
--   Management Service (AWS KMS) that the node uses for encryption at
--   rest. If the value of this parameter is <tt>"AWS Owned KMS Key"</tt>,
--   the node uses an AWS owned KMS key for encryption. The node inherits
--   this parameter from the member that it belongs to.
--   
--   Applies only to Hyperledger Fabric.
node_kmsKeyArn :: Lens' Node (Maybe Text)

-- | Configuration properties for logging events associated with a peer
--   node on a Hyperledger Fabric network on Managed Blockchain.
node_logPublishingConfiguration :: Lens' Node (Maybe NodeLogPublishingConfiguration)

-- | The unique identifier of the member to which the node belongs.
--   
--   Applies only to Hyperledger Fabric.
node_memberId :: Lens' Node (Maybe Text)

-- | The Amazon Resource Name (ARN) of the node. For more information about
--   ARNs and their format, see <a>Amazon Resource Names (ARNs)</a> in the
--   <i>AWS General Reference</i>.
node_arn :: Lens' Node (Maybe Text)

-- | The unique identifier of the network that the node is on.
node_networkId :: Lens' Node (Maybe Text)

-- | The instance type of the node.
node_instanceType :: Lens' Node (Maybe Text)

-- | The state database that the node uses. Values are <tt>LevelDB</tt> or
--   <tt>CouchDB</tt>.
--   
--   Applies only to Hyperledger Fabric.
node_stateDB :: Lens' Node (Maybe StateDBType)

-- | The Availability Zone in which the node exists. Required for Ethereum
--   nodes.
node_availabilityZone :: Lens' Node (Maybe Text)

-- | The unique identifier of the node.
node_id :: Lens' Node (Maybe Text)

-- | The date and time that the node was created.
node_creationDate :: Lens' Node (Maybe UTCTime)

-- | Attributes of the blockchain framework being used.
node_frameworkAttributes :: Lens' Node (Maybe NodeFrameworkAttributes)

-- | Tags assigned to the node. Each tag consists of a key and optional
--   value.
--   
--   For more information about tags, see <a>Tagging Resources</a> in the
--   <i>Amazon Managed Blockchain Ethereum Developer Guide</i>, or
--   <a>Tagging Resources</a> in the <i>Amazon Managed Blockchain
--   Hyperledger Fabric Developer Guide</i>.
node_tags :: Lens' Node (Maybe (HashMap Text Text))
instance GHC.Generics.Generic Network.AWS.ManagedBlockChain.Types.Node.Node
instance GHC.Show.Show Network.AWS.ManagedBlockChain.Types.Node.Node
instance GHC.Read.Read Network.AWS.ManagedBlockChain.Types.Node.Node
instance GHC.Classes.Eq Network.AWS.ManagedBlockChain.Types.Node.Node
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ManagedBlockChain.Types.Node.Node
instance Data.Hashable.Class.Hashable Network.AWS.ManagedBlockChain.Types.Node.Node
instance Control.DeepSeq.NFData Network.AWS.ManagedBlockChain.Types.Node.Node


module Network.AWS.ManagedBlockChain.Types.ThresholdComparator
newtype ThresholdComparator
ThresholdComparator' :: Text -> ThresholdComparator
[fromThresholdComparator] :: ThresholdComparator -> Text
pattern ThresholdComparator_GREATER_THAN :: ThresholdComparator
pattern ThresholdComparator_GREATER_THAN_OR_EQUAL_TO :: ThresholdComparator
instance Network.AWS.Data.XML.ToXML Network.AWS.ManagedBlockChain.Types.ThresholdComparator.ThresholdComparator
instance Network.AWS.Data.XML.FromXML Network.AWS.ManagedBlockChain.Types.ThresholdComparator.ThresholdComparator
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.ManagedBlockChain.Types.ThresholdComparator.ThresholdComparator
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ManagedBlockChain.Types.ThresholdComparator.ThresholdComparator
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.ManagedBlockChain.Types.ThresholdComparator.ThresholdComparator
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ManagedBlockChain.Types.ThresholdComparator.ThresholdComparator
instance Network.AWS.Data.Query.ToQuery Network.AWS.ManagedBlockChain.Types.ThresholdComparator.ThresholdComparator
instance Network.AWS.Data.Headers.ToHeader Network.AWS.ManagedBlockChain.Types.ThresholdComparator.ThresholdComparator
instance Network.AWS.Data.Log.ToLog Network.AWS.ManagedBlockChain.Types.ThresholdComparator.ThresholdComparator
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.ManagedBlockChain.Types.ThresholdComparator.ThresholdComparator
instance Network.AWS.Data.Text.ToText Network.AWS.ManagedBlockChain.Types.ThresholdComparator.ThresholdComparator
instance Network.AWS.Data.Text.FromText Network.AWS.ManagedBlockChain.Types.ThresholdComparator.ThresholdComparator
instance Control.DeepSeq.NFData Network.AWS.ManagedBlockChain.Types.ThresholdComparator.ThresholdComparator
instance Data.Hashable.Class.Hashable Network.AWS.ManagedBlockChain.Types.ThresholdComparator.ThresholdComparator
instance GHC.Generics.Generic Network.AWS.ManagedBlockChain.Types.ThresholdComparator.ThresholdComparator
instance GHC.Classes.Ord Network.AWS.ManagedBlockChain.Types.ThresholdComparator.ThresholdComparator
instance GHC.Classes.Eq Network.AWS.ManagedBlockChain.Types.ThresholdComparator.ThresholdComparator
instance GHC.Read.Read Network.AWS.ManagedBlockChain.Types.ThresholdComparator.ThresholdComparator
instance GHC.Show.Show Network.AWS.ManagedBlockChain.Types.ThresholdComparator.ThresholdComparator


module Network.AWS.ManagedBlockChain.Types.ApprovalThresholdPolicy

-- | A policy type that defines the voting rules for the network. The rules
--   decide if a proposal is approved. Approval may be based on criteria
--   such as the percentage of <tt>YES</tt> votes and the duration of the
--   proposal. The policy applies to all proposals and is specified when
--   the network is created.
--   
--   Applies only to Hyperledger Fabric.
--   
--   <i>See:</i> <a>newApprovalThresholdPolicy</a> smart constructor.
data ApprovalThresholdPolicy
ApprovalThresholdPolicy' :: Maybe Natural -> Maybe ThresholdComparator -> Maybe Natural -> ApprovalThresholdPolicy

-- | The percentage of votes among all members that must be <tt>YES</tt>
--   for a proposal to be approved. For example, a
--   <tt>ThresholdPercentage</tt> value of <tt>50</tt> indicates 50%. The
--   <tt>ThresholdComparator</tt> determines the precise comparison. If a
--   <tt>ThresholdPercentage</tt> value of <tt>50</tt> is specified on a
--   network with 10 members, along with a <tt>ThresholdComparator</tt>
--   value of <tt>GREATER_THAN</tt>, this indicates that 6 <tt>YES</tt>
--   votes are required for the proposal to be approved.
[$sel:thresholdPercentage:ApprovalThresholdPolicy'] :: ApprovalThresholdPolicy -> Maybe Natural

-- | Determines whether the vote percentage must be greater than the
--   <tt>ThresholdPercentage</tt> or must be greater than or equal to the
--   <tt>ThreholdPercentage</tt> to be approved.
[$sel:thresholdComparator:ApprovalThresholdPolicy'] :: ApprovalThresholdPolicy -> Maybe ThresholdComparator

-- | The duration from the time that a proposal is created until it
--   expires. If members cast neither the required number of <tt>YES</tt>
--   votes to approve the proposal nor the number of <tt>NO</tt> votes
--   required to reject it before the duration expires, the proposal is
--   <tt>EXPIRED</tt> and <tt>ProposalActions</tt> are not carried out.
[$sel:proposalDurationInHours:ApprovalThresholdPolicy'] :: ApprovalThresholdPolicy -> Maybe Natural

-- | Create a value of <a>ApprovalThresholdPolicy</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:thresholdPercentage:ApprovalThresholdPolicy'</a>,
--   <a>approvalThresholdPolicy_thresholdPercentage</a> - The percentage of
--   votes among all members that must be <tt>YES</tt> for a proposal to be
--   approved. For example, a <tt>ThresholdPercentage</tt> value of
--   <tt>50</tt> indicates 50%. The <tt>ThresholdComparator</tt> determines
--   the precise comparison. If a <tt>ThresholdPercentage</tt> value of
--   <tt>50</tt> is specified on a network with 10 members, along with a
--   <tt>ThresholdComparator</tt> value of <tt>GREATER_THAN</tt>, this
--   indicates that 6 <tt>YES</tt> votes are required for the proposal to
--   be approved.
--   
--   <a>$sel:thresholdComparator:ApprovalThresholdPolicy'</a>,
--   <a>approvalThresholdPolicy_thresholdComparator</a> - Determines
--   whether the vote percentage must be greater than the
--   <tt>ThresholdPercentage</tt> or must be greater than or equal to the
--   <tt>ThreholdPercentage</tt> to be approved.
--   
--   <a>$sel:proposalDurationInHours:ApprovalThresholdPolicy'</a>,
--   <a>approvalThresholdPolicy_proposalDurationInHours</a> - The duration
--   from the time that a proposal is created until it expires. If members
--   cast neither the required number of <tt>YES</tt> votes to approve the
--   proposal nor the number of <tt>NO</tt> votes required to reject it
--   before the duration expires, the proposal is <tt>EXPIRED</tt> and
--   <tt>ProposalActions</tt> are not carried out.
newApprovalThresholdPolicy :: ApprovalThresholdPolicy

-- | The percentage of votes among all members that must be <tt>YES</tt>
--   for a proposal to be approved. For example, a
--   <tt>ThresholdPercentage</tt> value of <tt>50</tt> indicates 50%. The
--   <tt>ThresholdComparator</tt> determines the precise comparison. If a
--   <tt>ThresholdPercentage</tt> value of <tt>50</tt> is specified on a
--   network with 10 members, along with a <tt>ThresholdComparator</tt>
--   value of <tt>GREATER_THAN</tt>, this indicates that 6 <tt>YES</tt>
--   votes are required for the proposal to be approved.
approvalThresholdPolicy_thresholdPercentage :: Lens' ApprovalThresholdPolicy (Maybe Natural)

-- | Determines whether the vote percentage must be greater than the
--   <tt>ThresholdPercentage</tt> or must be greater than or equal to the
--   <tt>ThreholdPercentage</tt> to be approved.
approvalThresholdPolicy_thresholdComparator :: Lens' ApprovalThresholdPolicy (Maybe ThresholdComparator)

-- | The duration from the time that a proposal is created until it
--   expires. If members cast neither the required number of <tt>YES</tt>
--   votes to approve the proposal nor the number of <tt>NO</tt> votes
--   required to reject it before the duration expires, the proposal is
--   <tt>EXPIRED</tt> and <tt>ProposalActions</tt> are not carried out.
approvalThresholdPolicy_proposalDurationInHours :: Lens' ApprovalThresholdPolicy (Maybe Natural)
instance GHC.Generics.Generic Network.AWS.ManagedBlockChain.Types.ApprovalThresholdPolicy.ApprovalThresholdPolicy
instance GHC.Show.Show Network.AWS.ManagedBlockChain.Types.ApprovalThresholdPolicy.ApprovalThresholdPolicy
instance GHC.Read.Read Network.AWS.ManagedBlockChain.Types.ApprovalThresholdPolicy.ApprovalThresholdPolicy
instance GHC.Classes.Eq Network.AWS.ManagedBlockChain.Types.ApprovalThresholdPolicy.ApprovalThresholdPolicy
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ManagedBlockChain.Types.ApprovalThresholdPolicy.ApprovalThresholdPolicy
instance Data.Hashable.Class.Hashable Network.AWS.ManagedBlockChain.Types.ApprovalThresholdPolicy.ApprovalThresholdPolicy
instance Control.DeepSeq.NFData Network.AWS.ManagedBlockChain.Types.ApprovalThresholdPolicy.ApprovalThresholdPolicy
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ManagedBlockChain.Types.ApprovalThresholdPolicy.ApprovalThresholdPolicy


module Network.AWS.ManagedBlockChain.Types.VoteValue
newtype VoteValue
VoteValue' :: Text -> VoteValue
[fromVoteValue] :: VoteValue -> Text
pattern VoteValue_NO :: VoteValue
pattern VoteValue_YES :: VoteValue
instance Network.AWS.Data.XML.ToXML Network.AWS.ManagedBlockChain.Types.VoteValue.VoteValue
instance Network.AWS.Data.XML.FromXML Network.AWS.ManagedBlockChain.Types.VoteValue.VoteValue
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.ManagedBlockChain.Types.VoteValue.VoteValue
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ManagedBlockChain.Types.VoteValue.VoteValue
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.ManagedBlockChain.Types.VoteValue.VoteValue
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ManagedBlockChain.Types.VoteValue.VoteValue
instance Network.AWS.Data.Query.ToQuery Network.AWS.ManagedBlockChain.Types.VoteValue.VoteValue
instance Network.AWS.Data.Headers.ToHeader Network.AWS.ManagedBlockChain.Types.VoteValue.VoteValue
instance Network.AWS.Data.Log.ToLog Network.AWS.ManagedBlockChain.Types.VoteValue.VoteValue
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.ManagedBlockChain.Types.VoteValue.VoteValue
instance Network.AWS.Data.Text.ToText Network.AWS.ManagedBlockChain.Types.VoteValue.VoteValue
instance Network.AWS.Data.Text.FromText Network.AWS.ManagedBlockChain.Types.VoteValue.VoteValue
instance Control.DeepSeq.NFData Network.AWS.ManagedBlockChain.Types.VoteValue.VoteValue
instance Data.Hashable.Class.Hashable Network.AWS.ManagedBlockChain.Types.VoteValue.VoteValue
instance GHC.Generics.Generic Network.AWS.ManagedBlockChain.Types.VoteValue.VoteValue
instance GHC.Classes.Ord Network.AWS.ManagedBlockChain.Types.VoteValue.VoteValue
instance GHC.Classes.Eq Network.AWS.ManagedBlockChain.Types.VoteValue.VoteValue
instance GHC.Read.Read Network.AWS.ManagedBlockChain.Types.VoteValue.VoteValue
instance GHC.Show.Show Network.AWS.ManagedBlockChain.Types.VoteValue.VoteValue


module Network.AWS.ManagedBlockChain.Types.VoteSummary

-- | Properties of an individual vote that a member cast for a proposal.
--   
--   Applies only to Hyperledger Fabric.
--   
--   <i>See:</i> <a>newVoteSummary</a> smart constructor.
data VoteSummary
VoteSummary' :: Maybe Text -> Maybe Text -> Maybe VoteValue -> VoteSummary

-- | The name of the member that cast the vote.
[$sel:memberName:VoteSummary'] :: VoteSummary -> Maybe Text

-- | The unique identifier of the member that cast the vote.
[$sel:memberId:VoteSummary'] :: VoteSummary -> Maybe Text

-- | The vote value, either <tt>YES</tt> or <tt>NO</tt>.
[$sel:vote:VoteSummary'] :: VoteSummary -> Maybe VoteValue

-- | Create a value of <a>VoteSummary</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:memberName:VoteSummary'</a>, <a>voteSummary_memberName</a> -
--   The name of the member that cast the vote.
--   
--   <a>$sel:memberId:VoteSummary'</a>, <a>voteSummary_memberId</a> - The
--   unique identifier of the member that cast the vote.
--   
--   <a>$sel:vote:VoteSummary'</a>, <a>voteSummary_vote</a> - The vote
--   value, either <tt>YES</tt> or <tt>NO</tt>.
newVoteSummary :: VoteSummary

-- | The name of the member that cast the vote.
voteSummary_memberName :: Lens' VoteSummary (Maybe Text)

-- | The unique identifier of the member that cast the vote.
voteSummary_memberId :: Lens' VoteSummary (Maybe Text)

-- | The vote value, either <tt>YES</tt> or <tt>NO</tt>.
voteSummary_vote :: Lens' VoteSummary (Maybe VoteValue)
instance GHC.Generics.Generic Network.AWS.ManagedBlockChain.Types.VoteSummary.VoteSummary
instance GHC.Show.Show Network.AWS.ManagedBlockChain.Types.VoteSummary.VoteSummary
instance GHC.Read.Read Network.AWS.ManagedBlockChain.Types.VoteSummary.VoteSummary
instance GHC.Classes.Eq Network.AWS.ManagedBlockChain.Types.VoteSummary.VoteSummary
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ManagedBlockChain.Types.VoteSummary.VoteSummary
instance Data.Hashable.Class.Hashable Network.AWS.ManagedBlockChain.Types.VoteSummary.VoteSummary
instance Control.DeepSeq.NFData Network.AWS.ManagedBlockChain.Types.VoteSummary.VoteSummary


module Network.AWS.ManagedBlockChain.Types.VotingPolicy

-- | The voting rules for the network to decide if a proposal is accepted
--   
--   Applies only to Hyperledger Fabric.
--   
--   <i>See:</i> <a>newVotingPolicy</a> smart constructor.
data VotingPolicy
VotingPolicy' :: Maybe ApprovalThresholdPolicy -> VotingPolicy

-- | Defines the rules for the network for voting on proposals, such as the
--   percentage of <tt>YES</tt> votes required for the proposal to be
--   approved and the duration of the proposal. The policy applies to all
--   proposals and is specified when the network is created.
[$sel:approvalThresholdPolicy:VotingPolicy'] :: VotingPolicy -> Maybe ApprovalThresholdPolicy

-- | Create a value of <a>VotingPolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:approvalThresholdPolicy:VotingPolicy'</a>,
--   <a>votingPolicy_approvalThresholdPolicy</a> - Defines the rules for
--   the network for voting on proposals, such as the percentage of
--   <tt>YES</tt> votes required for the proposal to be approved and the
--   duration of the proposal. The policy applies to all proposals and is
--   specified when the network is created.
newVotingPolicy :: VotingPolicy

-- | Defines the rules for the network for voting on proposals, such as the
--   percentage of <tt>YES</tt> votes required for the proposal to be
--   approved and the duration of the proposal. The policy applies to all
--   proposals and is specified when the network is created.
votingPolicy_approvalThresholdPolicy :: Lens' VotingPolicy (Maybe ApprovalThresholdPolicy)
instance GHC.Generics.Generic Network.AWS.ManagedBlockChain.Types.VotingPolicy.VotingPolicy
instance GHC.Show.Show Network.AWS.ManagedBlockChain.Types.VotingPolicy.VotingPolicy
instance GHC.Read.Read Network.AWS.ManagedBlockChain.Types.VotingPolicy.VotingPolicy
instance GHC.Classes.Eq Network.AWS.ManagedBlockChain.Types.VotingPolicy.VotingPolicy
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ManagedBlockChain.Types.VotingPolicy.VotingPolicy
instance Data.Hashable.Class.Hashable Network.AWS.ManagedBlockChain.Types.VotingPolicy.VotingPolicy
instance Control.DeepSeq.NFData Network.AWS.ManagedBlockChain.Types.VotingPolicy.VotingPolicy
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ManagedBlockChain.Types.VotingPolicy.VotingPolicy


module Network.AWS.ManagedBlockChain.Types.Network

-- | Network configuration properties.
--   
--   <i>See:</i> <a>newNetwork</a> smart constructor.
data Network
Network' :: Maybe NetworkStatus -> Maybe Framework -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe VotingPolicy -> Maybe POSIX -> Maybe NetworkFrameworkAttributes -> Maybe Text -> Maybe (HashMap Text Text) -> Network

-- | The current status of the network.
[$sel:status:Network'] :: Network -> Maybe NetworkStatus

-- | The blockchain framework that the network uses.
[$sel:framework:Network'] :: Network -> Maybe Framework

-- | The Amazon Resource Name (ARN) of the network. For more information
--   about ARNs and their format, see <a>Amazon Resource Names (ARNs)</a>
--   in the <i>AWS General Reference</i>.
[$sel:arn:Network'] :: Network -> Maybe Text

-- | The version of the blockchain framework that the network uses.
[$sel:frameworkVersion:Network'] :: Network -> Maybe Text

-- | The VPC endpoint service name of the VPC endpoint service of the
--   network. Members use the VPC endpoint service name to create a VPC
--   endpoint to access network resources.
[$sel:vpcEndpointServiceName:Network'] :: Network -> Maybe Text

-- | The name of the network.
[$sel:name:Network'] :: Network -> Maybe Text

-- | The unique identifier of the network.
[$sel:id:Network'] :: Network -> Maybe Text

-- | The voting rules for the network to decide if a proposal is accepted.
[$sel:votingPolicy:Network'] :: Network -> Maybe VotingPolicy

-- | The date and time that the network was created.
[$sel:creationDate:Network'] :: Network -> Maybe POSIX

-- | Attributes of the blockchain framework that the network uses.
[$sel:frameworkAttributes:Network'] :: Network -> Maybe NetworkFrameworkAttributes

-- | Attributes of the blockchain framework for the network.
[$sel:description:Network'] :: Network -> Maybe Text

-- | Tags assigned to the network. Each tag consists of a key and optional
--   value.
--   
--   For more information about tags, see <a>Tagging Resources</a> in the
--   <i>Amazon Managed Blockchain Ethereum Developer Guide</i>, or
--   <a>Tagging Resources</a> in the <i>Amazon Managed Blockchain
--   Hyperledger Fabric Developer Guide</i>.
[$sel:tags:Network'] :: Network -> Maybe (HashMap Text Text)

-- | Create a value of <a>Network</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:Network'</a>, <a>network_status</a> - The current
--   status of the network.
--   
--   <a>$sel:framework:Network'</a>, <a>network_framework</a> - The
--   blockchain framework that the network uses.
--   
--   <a>$sel:arn:Network'</a>, <a>network_arn</a> - The Amazon Resource
--   Name (ARN) of the network. For more information about ARNs and their
--   format, see <a>Amazon Resource Names (ARNs)</a> in the <i>AWS General
--   Reference</i>.
--   
--   <a>$sel:frameworkVersion:Network'</a>, <a>network_frameworkVersion</a>
--   - The version of the blockchain framework that the network uses.
--   
--   <a>$sel:vpcEndpointServiceName:Network'</a>,
--   <a>network_vpcEndpointServiceName</a> - The VPC endpoint service name
--   of the VPC endpoint service of the network. Members use the VPC
--   endpoint service name to create a VPC endpoint to access network
--   resources.
--   
--   <a>$sel:name:Network'</a>, <a>network_name</a> - The name of the
--   network.
--   
--   <a>$sel:id:Network'</a>, <a>network_id</a> - The unique identifier of
--   the network.
--   
--   <a>$sel:votingPolicy:Network'</a>, <a>network_votingPolicy</a> - The
--   voting rules for the network to decide if a proposal is accepted.
--   
--   <a>$sel:creationDate:Network'</a>, <a>network_creationDate</a> - The
--   date and time that the network was created.
--   
--   <a>$sel:frameworkAttributes:Network'</a>,
--   <a>network_frameworkAttributes</a> - Attributes of the blockchain
--   framework that the network uses.
--   
--   <a>$sel:description:Network'</a>, <a>network_description</a> -
--   Attributes of the blockchain framework for the network.
--   
--   <a>$sel:tags:Network'</a>, <a>network_tags</a> - Tags assigned to the
--   network. Each tag consists of a key and optional value.
--   
--   For more information about tags, see <a>Tagging Resources</a> in the
--   <i>Amazon Managed Blockchain Ethereum Developer Guide</i>, or
--   <a>Tagging Resources</a> in the <i>Amazon Managed Blockchain
--   Hyperledger Fabric Developer Guide</i>.
newNetwork :: Network

-- | The current status of the network.
network_status :: Lens' Network (Maybe NetworkStatus)

-- | The blockchain framework that the network uses.
network_framework :: Lens' Network (Maybe Framework)

-- | The Amazon Resource Name (ARN) of the network. For more information
--   about ARNs and their format, see <a>Amazon Resource Names (ARNs)</a>
--   in the <i>AWS General Reference</i>.
network_arn :: Lens' Network (Maybe Text)

-- | The version of the blockchain framework that the network uses.
network_frameworkVersion :: Lens' Network (Maybe Text)

-- | The VPC endpoint service name of the VPC endpoint service of the
--   network. Members use the VPC endpoint service name to create a VPC
--   endpoint to access network resources.
network_vpcEndpointServiceName :: Lens' Network (Maybe Text)

-- | The name of the network.
network_name :: Lens' Network (Maybe Text)

-- | The unique identifier of the network.
network_id :: Lens' Network (Maybe Text)

-- | The voting rules for the network to decide if a proposal is accepted.
network_votingPolicy :: Lens' Network (Maybe VotingPolicy)

-- | The date and time that the network was created.
network_creationDate :: Lens' Network (Maybe UTCTime)

-- | Attributes of the blockchain framework that the network uses.
network_frameworkAttributes :: Lens' Network (Maybe NetworkFrameworkAttributes)

-- | Attributes of the blockchain framework for the network.
network_description :: Lens' Network (Maybe Text)

-- | Tags assigned to the network. Each tag consists of a key and optional
--   value.
--   
--   For more information about tags, see <a>Tagging Resources</a> in the
--   <i>Amazon Managed Blockchain Ethereum Developer Guide</i>, or
--   <a>Tagging Resources</a> in the <i>Amazon Managed Blockchain
--   Hyperledger Fabric Developer Guide</i>.
network_tags :: Lens' Network (Maybe (HashMap Text Text))
instance GHC.Generics.Generic Network.AWS.ManagedBlockChain.Types.Network.Network
instance GHC.Show.Show Network.AWS.ManagedBlockChain.Types.Network.Network
instance GHC.Read.Read Network.AWS.ManagedBlockChain.Types.Network.Network
instance GHC.Classes.Eq Network.AWS.ManagedBlockChain.Types.Network.Network
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ManagedBlockChain.Types.Network.Network
instance Data.Hashable.Class.Hashable Network.AWS.ManagedBlockChain.Types.Network.Network
instance Control.DeepSeq.NFData Network.AWS.ManagedBlockChain.Types.Network.Network


module Network.AWS.ManagedBlockChain.Types

-- | API version <tt>2018-09-24</tt> of the Amazon Managed Blockchain SDK
--   configuration.
defaultService :: Service

-- | You do not have sufficient access to perform this action.
_AccessDeniedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The action or operation requested is invalid. Verify that the action
--   is typed correctly.
_InvalidRequestException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A resource request is issued for a resource that already exists.
_ResourceAlreadyExistsException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The maximum number of resources of that type already exist. Ensure the
--   resources requested are within the boundaries of the service edition
--   and your account limits.
_ResourceLimitExceededException :: AsError a => Getting (First ServiceError) a ServiceError

_TooManyTagsException :: AsError a => Getting (First ServiceError) a ServiceError

_IllegalActionException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request or operation could not be performed because a service is
--   throttling requests. The most common source of throttling errors is
--   launching EC2 instances such that your service limit for EC2 instances
--   is exceeded. Request a limit increase or delete unused resources if
--   possible.
_ThrottlingException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request processing has failed because of an unknown error,
--   exception or failure.
_InternalServiceErrorException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The requested resource exists but is not in a status that can complete
--   the operation.
_ResourceNotReadyException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A requested resource does not exist. It may have been deleted or
--   referenced inaccurately.
_ResourceNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError
newtype Edition
Edition' :: Text -> Edition
[fromEdition] :: Edition -> Text
pattern Edition_STANDARD :: Edition
pattern Edition_STARTER :: Edition
newtype Framework
Framework' :: Text -> Framework
[fromFramework] :: Framework -> Text
pattern Framework_ETHEREUM :: Framework
pattern Framework_HYPERLEDGER_FABRIC :: Framework
newtype InvitationStatus
InvitationStatus' :: Text -> InvitationStatus
[fromInvitationStatus] :: InvitationStatus -> Text
pattern InvitationStatus_ACCEPTED :: InvitationStatus
pattern InvitationStatus_ACCEPTING :: InvitationStatus
pattern InvitationStatus_EXPIRED :: InvitationStatus
pattern InvitationStatus_PENDING :: InvitationStatus
pattern InvitationStatus_REJECTED :: InvitationStatus
newtype MemberStatus
MemberStatus' :: Text -> MemberStatus
[fromMemberStatus] :: MemberStatus -> Text
pattern MemberStatus_AVAILABLE :: MemberStatus
pattern MemberStatus_CREATE_FAILED :: MemberStatus
pattern MemberStatus_CREATING :: MemberStatus
pattern MemberStatus_DELETED :: MemberStatus
pattern MemberStatus_DELETING :: MemberStatus
pattern MemberStatus_INACCESSIBLE_ENCRYPTION_KEY :: MemberStatus
pattern MemberStatus_UPDATING :: MemberStatus
newtype NetworkStatus
NetworkStatus' :: Text -> NetworkStatus
[fromNetworkStatus] :: NetworkStatus -> Text
pattern NetworkStatus_AVAILABLE :: NetworkStatus
pattern NetworkStatus_CREATE_FAILED :: NetworkStatus
pattern NetworkStatus_CREATING :: NetworkStatus
pattern NetworkStatus_DELETED :: NetworkStatus
pattern NetworkStatus_DELETING :: NetworkStatus
newtype NodeStatus
NodeStatus' :: Text -> NodeStatus
[fromNodeStatus] :: NodeStatus -> Text
pattern NodeStatus_AVAILABLE :: NodeStatus
pattern NodeStatus_CREATE_FAILED :: NodeStatus
pattern NodeStatus_CREATING :: NodeStatus
pattern NodeStatus_DELETED :: NodeStatus
pattern NodeStatus_DELETING :: NodeStatus
pattern NodeStatus_FAILED :: NodeStatus
pattern NodeStatus_INACCESSIBLE_ENCRYPTION_KEY :: NodeStatus
pattern NodeStatus_UNHEALTHY :: NodeStatus
pattern NodeStatus_UPDATING :: NodeStatus
newtype ProposalStatus
ProposalStatus' :: Text -> ProposalStatus
[fromProposalStatus] :: ProposalStatus -> Text
pattern ProposalStatus_ACTION_FAILED :: ProposalStatus
pattern ProposalStatus_APPROVED :: ProposalStatus
pattern ProposalStatus_EXPIRED :: ProposalStatus
pattern ProposalStatus_IN_PROGRESS :: ProposalStatus
pattern ProposalStatus_REJECTED :: ProposalStatus
newtype StateDBType
StateDBType' :: Text -> StateDBType
[fromStateDBType] :: StateDBType -> Text
pattern StateDBType_CouchDB :: StateDBType
pattern StateDBType_LevelDB :: StateDBType
newtype ThresholdComparator
ThresholdComparator' :: Text -> ThresholdComparator
[fromThresholdComparator] :: ThresholdComparator -> Text
pattern ThresholdComparator_GREATER_THAN :: ThresholdComparator
pattern ThresholdComparator_GREATER_THAN_OR_EQUAL_TO :: ThresholdComparator
newtype VoteValue
VoteValue' :: Text -> VoteValue
[fromVoteValue] :: VoteValue -> Text
pattern VoteValue_NO :: VoteValue
pattern VoteValue_YES :: VoteValue

-- | A policy type that defines the voting rules for the network. The rules
--   decide if a proposal is approved. Approval may be based on criteria
--   such as the percentage of <tt>YES</tt> votes and the duration of the
--   proposal. The policy applies to all proposals and is specified when
--   the network is created.
--   
--   Applies only to Hyperledger Fabric.
--   
--   <i>See:</i> <a>newApprovalThresholdPolicy</a> smart constructor.
data ApprovalThresholdPolicy
ApprovalThresholdPolicy' :: Maybe Natural -> Maybe ThresholdComparator -> Maybe Natural -> ApprovalThresholdPolicy

-- | The percentage of votes among all members that must be <tt>YES</tt>
--   for a proposal to be approved. For example, a
--   <tt>ThresholdPercentage</tt> value of <tt>50</tt> indicates 50%. The
--   <tt>ThresholdComparator</tt> determines the precise comparison. If a
--   <tt>ThresholdPercentage</tt> value of <tt>50</tt> is specified on a
--   network with 10 members, along with a <tt>ThresholdComparator</tt>
--   value of <tt>GREATER_THAN</tt>, this indicates that 6 <tt>YES</tt>
--   votes are required for the proposal to be approved.
[$sel:thresholdPercentage:ApprovalThresholdPolicy'] :: ApprovalThresholdPolicy -> Maybe Natural

-- | Determines whether the vote percentage must be greater than the
--   <tt>ThresholdPercentage</tt> or must be greater than or equal to the
--   <tt>ThreholdPercentage</tt> to be approved.
[$sel:thresholdComparator:ApprovalThresholdPolicy'] :: ApprovalThresholdPolicy -> Maybe ThresholdComparator

-- | The duration from the time that a proposal is created until it
--   expires. If members cast neither the required number of <tt>YES</tt>
--   votes to approve the proposal nor the number of <tt>NO</tt> votes
--   required to reject it before the duration expires, the proposal is
--   <tt>EXPIRED</tt> and <tt>ProposalActions</tt> are not carried out.
[$sel:proposalDurationInHours:ApprovalThresholdPolicy'] :: ApprovalThresholdPolicy -> Maybe Natural

-- | Create a value of <a>ApprovalThresholdPolicy</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:thresholdPercentage:ApprovalThresholdPolicy'</a>,
--   <a>approvalThresholdPolicy_thresholdPercentage</a> - The percentage of
--   votes among all members that must be <tt>YES</tt> for a proposal to be
--   approved. For example, a <tt>ThresholdPercentage</tt> value of
--   <tt>50</tt> indicates 50%. The <tt>ThresholdComparator</tt> determines
--   the precise comparison. If a <tt>ThresholdPercentage</tt> value of
--   <tt>50</tt> is specified on a network with 10 members, along with a
--   <tt>ThresholdComparator</tt> value of <tt>GREATER_THAN</tt>, this
--   indicates that 6 <tt>YES</tt> votes are required for the proposal to
--   be approved.
--   
--   <a>$sel:thresholdComparator:ApprovalThresholdPolicy'</a>,
--   <a>approvalThresholdPolicy_thresholdComparator</a> - Determines
--   whether the vote percentage must be greater than the
--   <tt>ThresholdPercentage</tt> or must be greater than or equal to the
--   <tt>ThreholdPercentage</tt> to be approved.
--   
--   <a>$sel:proposalDurationInHours:ApprovalThresholdPolicy'</a>,
--   <a>approvalThresholdPolicy_proposalDurationInHours</a> - The duration
--   from the time that a proposal is created until it expires. If members
--   cast neither the required number of <tt>YES</tt> votes to approve the
--   proposal nor the number of <tt>NO</tt> votes required to reject it
--   before the duration expires, the proposal is <tt>EXPIRED</tt> and
--   <tt>ProposalActions</tt> are not carried out.
newApprovalThresholdPolicy :: ApprovalThresholdPolicy

-- | The percentage of votes among all members that must be <tt>YES</tt>
--   for a proposal to be approved. For example, a
--   <tt>ThresholdPercentage</tt> value of <tt>50</tt> indicates 50%. The
--   <tt>ThresholdComparator</tt> determines the precise comparison. If a
--   <tt>ThresholdPercentage</tt> value of <tt>50</tt> is specified on a
--   network with 10 members, along with a <tt>ThresholdComparator</tt>
--   value of <tt>GREATER_THAN</tt>, this indicates that 6 <tt>YES</tt>
--   votes are required for the proposal to be approved.
approvalThresholdPolicy_thresholdPercentage :: Lens' ApprovalThresholdPolicy (Maybe Natural)

-- | Determines whether the vote percentage must be greater than the
--   <tt>ThresholdPercentage</tt> or must be greater than or equal to the
--   <tt>ThreholdPercentage</tt> to be approved.
approvalThresholdPolicy_thresholdComparator :: Lens' ApprovalThresholdPolicy (Maybe ThresholdComparator)

-- | The duration from the time that a proposal is created until it
--   expires. If members cast neither the required number of <tt>YES</tt>
--   votes to approve the proposal nor the number of <tt>NO</tt> votes
--   required to reject it before the duration expires, the proposal is
--   <tt>EXPIRED</tt> and <tt>ProposalActions</tt> are not carried out.
approvalThresholdPolicy_proposalDurationInHours :: Lens' ApprovalThresholdPolicy (Maybe Natural)

-- | An invitation to an AWS account to create a member and join the
--   network.
--   
--   Applies only to Hyperledger Fabric.
--   
--   <i>See:</i> <a>newInvitation</a> smart constructor.
data Invitation
Invitation' :: Maybe InvitationStatus -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe NetworkSummary -> Maybe POSIX -> Invitation

-- | The status of the invitation:
--   
--   <ul>
--   <li><tt>PENDING</tt> - The invitee has not created a member to join
--   the network, and the invitation has not yet expired.</li>
--   <li><tt>ACCEPTING</tt> - The invitee has begun creating a member, and
--   creation has not yet completed.</li>
--   <li><tt>ACCEPTED</tt> - The invitee created a member and joined the
--   network using the <tt>InvitationID</tt>.</li>
--   <li><tt>REJECTED</tt> - The invitee rejected the invitation.</li>
--   <li><tt>EXPIRED</tt> - The invitee neither created a member nor
--   rejected the invitation before the <tt>ExpirationDate</tt>.</li>
--   </ul>
[$sel:status:Invitation'] :: Invitation -> Maybe InvitationStatus

-- | The Amazon Resource Name (ARN) of the invitation. For more information
--   about ARNs and their format, see <a>Amazon Resource Names (ARNs)</a>
--   in the <i>AWS General Reference</i>.
[$sel:arn:Invitation'] :: Invitation -> Maybe Text

-- | The unique identifier for the invitation.
[$sel:invitationId:Invitation'] :: Invitation -> Maybe Text

-- | The date and time that the invitation expires. This is the
--   <tt>CreationDate</tt> plus the <tt>ProposalDurationInHours</tt> that
--   is specified in the <tt>ProposalThresholdPolicy</tt>. After this date
--   and time, the invitee can no longer create a member and join the
--   network using this <tt>InvitationId</tt>.
[$sel:expirationDate:Invitation'] :: Invitation -> Maybe POSIX
[$sel:networkSummary:Invitation'] :: Invitation -> Maybe NetworkSummary

-- | The date and time that the invitation was created.
[$sel:creationDate:Invitation'] :: Invitation -> Maybe POSIX

-- | Create a value of <a>Invitation</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:Invitation'</a>, <a>invitation_status</a> - The status
--   of the invitation:
--   
--   <ul>
--   <li><tt>PENDING</tt> - The invitee has not created a member to join
--   the network, and the invitation has not yet expired.</li>
--   <li><tt>ACCEPTING</tt> - The invitee has begun creating a member, and
--   creation has not yet completed.</li>
--   <li><tt>ACCEPTED</tt> - The invitee created a member and joined the
--   network using the <tt>InvitationID</tt>.</li>
--   <li><tt>REJECTED</tt> - The invitee rejected the invitation.</li>
--   <li><tt>EXPIRED</tt> - The invitee neither created a member nor
--   rejected the invitation before the <tt>ExpirationDate</tt>.</li>
--   </ul>
--   
--   <a>$sel:arn:Invitation'</a>, <a>invitation_arn</a> - The Amazon
--   Resource Name (ARN) of the invitation. For more information about ARNs
--   and their format, see <a>Amazon Resource Names (ARNs)</a> in the
--   <i>AWS General Reference</i>.
--   
--   <a>$sel:invitationId:Invitation'</a>, <a>invitation_invitationId</a> -
--   The unique identifier for the invitation.
--   
--   <a>$sel:expirationDate:Invitation'</a>,
--   <a>invitation_expirationDate</a> - The date and time that the
--   invitation expires. This is the <tt>CreationDate</tt> plus the
--   <tt>ProposalDurationInHours</tt> that is specified in the
--   <tt>ProposalThresholdPolicy</tt>. After this date and time, the
--   invitee can no longer create a member and join the network using this
--   <tt>InvitationId</tt>.
--   
--   <a>$sel:networkSummary:Invitation'</a>,
--   <a>invitation_networkSummary</a> - Undocumented member.
--   
--   <a>$sel:creationDate:Invitation'</a>, <a>invitation_creationDate</a> -
--   The date and time that the invitation was created.
newInvitation :: Invitation

-- | The status of the invitation:
--   
--   <ul>
--   <li><tt>PENDING</tt> - The invitee has not created a member to join
--   the network, and the invitation has not yet expired.</li>
--   <li><tt>ACCEPTING</tt> - The invitee has begun creating a member, and
--   creation has not yet completed.</li>
--   <li><tt>ACCEPTED</tt> - The invitee created a member and joined the
--   network using the <tt>InvitationID</tt>.</li>
--   <li><tt>REJECTED</tt> - The invitee rejected the invitation.</li>
--   <li><tt>EXPIRED</tt> - The invitee neither created a member nor
--   rejected the invitation before the <tt>ExpirationDate</tt>.</li>
--   </ul>
invitation_status :: Lens' Invitation (Maybe InvitationStatus)

-- | The Amazon Resource Name (ARN) of the invitation. For more information
--   about ARNs and their format, see <a>Amazon Resource Names (ARNs)</a>
--   in the <i>AWS General Reference</i>.
invitation_arn :: Lens' Invitation (Maybe Text)

-- | The unique identifier for the invitation.
invitation_invitationId :: Lens' Invitation (Maybe Text)

-- | The date and time that the invitation expires. This is the
--   <tt>CreationDate</tt> plus the <tt>ProposalDurationInHours</tt> that
--   is specified in the <tt>ProposalThresholdPolicy</tt>. After this date
--   and time, the invitee can no longer create a member and join the
--   network using this <tt>InvitationId</tt>.
invitation_expirationDate :: Lens' Invitation (Maybe UTCTime)

-- | Undocumented member.
invitation_networkSummary :: Lens' Invitation (Maybe NetworkSummary)

-- | The date and time that the invitation was created.
invitation_creationDate :: Lens' Invitation (Maybe UTCTime)

-- | An action to invite a specific AWS account to create a member and join
--   the network. The <tt>InviteAction</tt> is carried out when a
--   <tt>Proposal</tt> is <tt>APPROVED</tt>.
--   
--   Applies only to Hyperledger Fabric.
--   
--   <i>See:</i> <a>newInviteAction</a> smart constructor.
data InviteAction
InviteAction' :: Text -> InviteAction

-- | The AWS account ID to invite.
[$sel:principal:InviteAction'] :: InviteAction -> Text

-- | Create a value of <a>InviteAction</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:principal:InviteAction'</a>, <a>inviteAction_principal</a> -
--   The AWS account ID to invite.
newInviteAction :: Text -> InviteAction

-- | The AWS account ID to invite.
inviteAction_principal :: Lens' InviteAction Text

-- | A configuration for logging events.
--   
--   <i>See:</i> <a>newLogConfiguration</a> smart constructor.
data LogConfiguration
LogConfiguration' :: Maybe Bool -> LogConfiguration

-- | Indicates whether logging is enabled.
[$sel:enabled:LogConfiguration'] :: LogConfiguration -> Maybe Bool

-- | Create a value of <a>LogConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:enabled:LogConfiguration'</a>, <a>logConfiguration_enabled</a>
--   - Indicates whether logging is enabled.
newLogConfiguration :: LogConfiguration

-- | Indicates whether logging is enabled.
logConfiguration_enabled :: Lens' LogConfiguration (Maybe Bool)

-- | A collection of log configurations.
--   
--   <i>See:</i> <a>newLogConfigurations</a> smart constructor.
data LogConfigurations
LogConfigurations' :: Maybe LogConfiguration -> LogConfigurations

-- | Parameters for publishing logs to Amazon CloudWatch Logs.
[$sel:cloudwatch:LogConfigurations'] :: LogConfigurations -> Maybe LogConfiguration

-- | Create a value of <a>LogConfigurations</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cloudwatch:LogConfigurations'</a>,
--   <a>logConfigurations_cloudwatch</a> - Parameters for publishing logs
--   to Amazon CloudWatch Logs.
newLogConfigurations :: LogConfigurations

-- | Parameters for publishing logs to Amazon CloudWatch Logs.
logConfigurations_cloudwatch :: Lens' LogConfigurations (Maybe LogConfiguration)

-- | Member configuration properties.
--   
--   Applies only to Hyperledger Fabric.
--   
--   <i>See:</i> <a>newMember</a> smart constructor.
data Member
Member' :: Maybe MemberStatus -> Maybe Text -> Maybe MemberLogPublishingConfiguration -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe MemberFrameworkAttributes -> Maybe Text -> Maybe (HashMap Text Text) -> Member

-- | The status of a member.
--   
--   <ul>
--   <li><tt>CREATING</tt> - The AWS account is in the process of creating
--   a member.</li>
--   <li><tt>AVAILABLE</tt> - The member has been created and can
--   participate in the network.</li>
--   <li><tt>CREATE_FAILED</tt> - The AWS account attempted to create a
--   member and creation failed.</li>
--   <li><tt>UPDATING</tt> - The member is in the process of being
--   updated.</li>
--   <li><tt>DELETING</tt> - The member and all associated resources are in
--   the process of being deleted. Either the AWS account that owns the
--   member deleted it, or the member is being deleted as the result of an
--   <tt>APPROVED</tt> <tt>PROPOSAL</tt> to remove the member.</li>
--   <li><tt>DELETED</tt> - The member can no longer participate on the
--   network and all associated resources are deleted. Either the AWS
--   account that owns the member deleted it, or the member is being
--   deleted as the result of an <tt>APPROVED</tt> <tt>PROPOSAL</tt> to
--   remove the member.</li>
--   <li><tt>INACCESSIBLE_ENCRYPTION_KEY</tt> - The member is impaired and
--   might not function as expected because it cannot access the specified
--   customer managed key in AWS KMS for encryption at rest. Either the KMS
--   key was disabled or deleted, or the grants on the key were revoked.The
--   effect of disabling or deleting a key, or revoking a grant is not
--   immediate. The member resource might take some time to find that the
--   key is inaccessible. When a resource is in this state, we recommend
--   deleting and recreating the resource.</li>
--   </ul>
[$sel:status:Member'] :: Member -> Maybe MemberStatus

-- | The Amazon Resource Name (ARN) of the customer managed key in AWS Key
--   Management Service (AWS KMS) that the member uses for encryption at
--   rest. If the value of this parameter is <tt>"AWS Owned KMS Key"</tt>,
--   the member uses an AWS owned KMS key for encryption. This parameter is
--   inherited by the nodes that this member owns.
[$sel:kmsKeyArn:Member'] :: Member -> Maybe Text

-- | Configuration properties for logging events associated with a member.
[$sel:logPublishingConfiguration:Member'] :: Member -> Maybe MemberLogPublishingConfiguration

-- | The Amazon Resource Name (ARN) of the member. For more information
--   about ARNs and their format, see <a>Amazon Resource Names (ARNs)</a>
--   in the <i>AWS General Reference</i>.
[$sel:arn:Member'] :: Member -> Maybe Text

-- | The unique identifier of the network to which the member belongs.
[$sel:networkId:Member'] :: Member -> Maybe Text

-- | The name of the member.
[$sel:name:Member'] :: Member -> Maybe Text

-- | The unique identifier of the member.
[$sel:id:Member'] :: Member -> Maybe Text

-- | The date and time that the member was created.
[$sel:creationDate:Member'] :: Member -> Maybe POSIX

-- | Attributes relevant to a member for the blockchain framework that the
--   Managed Blockchain network uses.
[$sel:frameworkAttributes:Member'] :: Member -> Maybe MemberFrameworkAttributes

-- | An optional description for the member.
[$sel:description:Member'] :: Member -> Maybe Text

-- | Tags assigned to the member. Tags consist of a key and optional value.
--   For more information about tags, see <a>Tagging Resources</a> in the
--   <i>Amazon Managed Blockchain Hyperledger Fabric Developer Guide</i>.
[$sel:tags:Member'] :: Member -> Maybe (HashMap Text Text)

-- | Create a value of <a>Member</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:Member'</a>, <a>member_status</a> - The status of a
--   member.
--   
--   <ul>
--   <li><tt>CREATING</tt> - The AWS account is in the process of creating
--   a member.</li>
--   <li><tt>AVAILABLE</tt> - The member has been created and can
--   participate in the network.</li>
--   <li><tt>CREATE_FAILED</tt> - The AWS account attempted to create a
--   member and creation failed.</li>
--   <li><tt>UPDATING</tt> - The member is in the process of being
--   updated.</li>
--   <li><tt>DELETING</tt> - The member and all associated resources are in
--   the process of being deleted. Either the AWS account that owns the
--   member deleted it, or the member is being deleted as the result of an
--   <tt>APPROVED</tt> <tt>PROPOSAL</tt> to remove the member.</li>
--   <li><tt>DELETED</tt> - The member can no longer participate on the
--   network and all associated resources are deleted. Either the AWS
--   account that owns the member deleted it, or the member is being
--   deleted as the result of an <tt>APPROVED</tt> <tt>PROPOSAL</tt> to
--   remove the member.</li>
--   <li><tt>INACCESSIBLE_ENCRYPTION_KEY</tt> - The member is impaired and
--   might not function as expected because it cannot access the specified
--   customer managed key in AWS KMS for encryption at rest. Either the KMS
--   key was disabled or deleted, or the grants on the key were revoked.The
--   effect of disabling or deleting a key, or revoking a grant is not
--   immediate. The member resource might take some time to find that the
--   key is inaccessible. When a resource is in this state, we recommend
--   deleting and recreating the resource.</li>
--   </ul>
--   
--   <a>$sel:kmsKeyArn:Member'</a>, <a>member_kmsKeyArn</a> - The Amazon
--   Resource Name (ARN) of the customer managed key in AWS Key Management
--   Service (AWS KMS) that the member uses for encryption at rest. If the
--   value of this parameter is <tt>"AWS Owned KMS Key"</tt>, the member
--   uses an AWS owned KMS key for encryption. This parameter is inherited
--   by the nodes that this member owns.
--   
--   <a>$sel:logPublishingConfiguration:Member'</a>,
--   <a>member_logPublishingConfiguration</a> - Configuration properties
--   for logging events associated with a member.
--   
--   <a>$sel:arn:Member'</a>, <a>member_arn</a> - The Amazon Resource Name
--   (ARN) of the member. For more information about ARNs and their format,
--   see <a>Amazon Resource Names (ARNs)</a> in the <i>AWS General
--   Reference</i>.
--   
--   <a>$sel:networkId:Member'</a>, <a>member_networkId</a> - The unique
--   identifier of the network to which the member belongs.
--   
--   <a>$sel:name:Member'</a>, <a>member_name</a> - The name of the member.
--   
--   <a>$sel:id:Member'</a>, <a>member_id</a> - The unique identifier of
--   the member.
--   
--   <a>$sel:creationDate:Member'</a>, <a>member_creationDate</a> - The
--   date and time that the member was created.
--   
--   <a>$sel:frameworkAttributes:Member'</a>,
--   <a>member_frameworkAttributes</a> - Attributes relevant to a member
--   for the blockchain framework that the Managed Blockchain network uses.
--   
--   <a>$sel:description:Member'</a>, <a>member_description</a> - An
--   optional description for the member.
--   
--   <a>$sel:tags:Member'</a>, <a>member_tags</a> - Tags assigned to the
--   member. Tags consist of a key and optional value. For more information
--   about tags, see <a>Tagging Resources</a> in the <i>Amazon Managed
--   Blockchain Hyperledger Fabric Developer Guide</i>.
newMember :: Member

-- | The status of a member.
--   
--   <ul>
--   <li><tt>CREATING</tt> - The AWS account is in the process of creating
--   a member.</li>
--   <li><tt>AVAILABLE</tt> - The member has been created and can
--   participate in the network.</li>
--   <li><tt>CREATE_FAILED</tt> - The AWS account attempted to create a
--   member and creation failed.</li>
--   <li><tt>UPDATING</tt> - The member is in the process of being
--   updated.</li>
--   <li><tt>DELETING</tt> - The member and all associated resources are in
--   the process of being deleted. Either the AWS account that owns the
--   member deleted it, or the member is being deleted as the result of an
--   <tt>APPROVED</tt> <tt>PROPOSAL</tt> to remove the member.</li>
--   <li><tt>DELETED</tt> - The member can no longer participate on the
--   network and all associated resources are deleted. Either the AWS
--   account that owns the member deleted it, or the member is being
--   deleted as the result of an <tt>APPROVED</tt> <tt>PROPOSAL</tt> to
--   remove the member.</li>
--   <li><tt>INACCESSIBLE_ENCRYPTION_KEY</tt> - The member is impaired and
--   might not function as expected because it cannot access the specified
--   customer managed key in AWS KMS for encryption at rest. Either the KMS
--   key was disabled or deleted, or the grants on the key were revoked.The
--   effect of disabling or deleting a key, or revoking a grant is not
--   immediate. The member resource might take some time to find that the
--   key is inaccessible. When a resource is in this state, we recommend
--   deleting and recreating the resource.</li>
--   </ul>
member_status :: Lens' Member (Maybe MemberStatus)

-- | The Amazon Resource Name (ARN) of the customer managed key in AWS Key
--   Management Service (AWS KMS) that the member uses for encryption at
--   rest. If the value of this parameter is <tt>"AWS Owned KMS Key"</tt>,
--   the member uses an AWS owned KMS key for encryption. This parameter is
--   inherited by the nodes that this member owns.
member_kmsKeyArn :: Lens' Member (Maybe Text)

-- | Configuration properties for logging events associated with a member.
member_logPublishingConfiguration :: Lens' Member (Maybe MemberLogPublishingConfiguration)

-- | The Amazon Resource Name (ARN) of the member. For more information
--   about ARNs and their format, see <a>Amazon Resource Names (ARNs)</a>
--   in the <i>AWS General Reference</i>.
member_arn :: Lens' Member (Maybe Text)

-- | The unique identifier of the network to which the member belongs.
member_networkId :: Lens' Member (Maybe Text)

-- | The name of the member.
member_name :: Lens' Member (Maybe Text)

-- | The unique identifier of the member.
member_id :: Lens' Member (Maybe Text)

-- | The date and time that the member was created.
member_creationDate :: Lens' Member (Maybe UTCTime)

-- | Attributes relevant to a member for the blockchain framework that the
--   Managed Blockchain network uses.
member_frameworkAttributes :: Lens' Member (Maybe MemberFrameworkAttributes)

-- | An optional description for the member.
member_description :: Lens' Member (Maybe Text)

-- | Tags assigned to the member. Tags consist of a key and optional value.
--   For more information about tags, see <a>Tagging Resources</a> in the
--   <i>Amazon Managed Blockchain Hyperledger Fabric Developer Guide</i>.
member_tags :: Lens' Member (Maybe (HashMap Text Text))

-- | Configuration properties of the member.
--   
--   Applies only to Hyperledger Fabric.
--   
--   <i>See:</i> <a>newMemberConfiguration</a> smart constructor.
data MemberConfiguration
MemberConfiguration' :: Maybe Text -> Maybe MemberLogPublishingConfiguration -> Maybe Text -> Maybe (HashMap Text Text) -> Text -> MemberFrameworkConfiguration -> MemberConfiguration

-- | The Amazon Resource Name (ARN) of the customer managed key in AWS Key
--   Management Service (AWS KMS) to use for encryption at rest in the
--   member. This parameter is inherited by any nodes that this member
--   creates.
--   
--   Use one of the following options to specify this parameter:
--   
--   <ul>
--   <li><b>Undefined or empty string</b> - The member uses an AWS owned
--   KMS key for encryption by default.</li>
--   <li><b>A valid symmetric customer managed KMS key</b> - The member
--   uses the specified key for encryption.Amazon Managed Blockchain
--   doesn't support asymmetric keys. For more information, see <a>Using
--   symmetric and asymmetric keys</a> in the <i>AWS Key Management Service
--   Developer Guide</i>.The following is an example of a KMS key ARN:
--   <tt>arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</tt></li>
--   </ul>
[$sel:kmsKeyArn:MemberConfiguration'] :: MemberConfiguration -> Maybe Text

-- | Configuration properties for logging events associated with a member
--   of a Managed Blockchain network.
[$sel:logPublishingConfiguration:MemberConfiguration'] :: MemberConfiguration -> Maybe MemberLogPublishingConfiguration

-- | An optional description of the member.
[$sel:description:MemberConfiguration'] :: MemberConfiguration -> Maybe Text

-- | Tags assigned to the member. Tags consist of a key and optional value.
--   For more information about tags, see <a>Tagging Resources</a> in the
--   <i>Amazon Managed Blockchain Hyperledger Fabric Developer Guide</i>.
--   
--   When specifying tags during creation, you can specify multiple
--   key-value pairs in a single request, with an overall maximum of 50
--   tags added to each resource.
[$sel:tags:MemberConfiguration'] :: MemberConfiguration -> Maybe (HashMap Text Text)

-- | The name of the member.
[$sel:name:MemberConfiguration'] :: MemberConfiguration -> Text

-- | Configuration properties of the blockchain framework relevant to the
--   member.
[$sel:frameworkConfiguration:MemberConfiguration'] :: MemberConfiguration -> MemberFrameworkConfiguration

-- | Create a value of <a>MemberConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:kmsKeyArn:MemberConfiguration'</a>,
--   <a>memberConfiguration_kmsKeyArn</a> - The Amazon Resource Name (ARN)
--   of the customer managed key in AWS Key Management Service (AWS KMS) to
--   use for encryption at rest in the member. This parameter is inherited
--   by any nodes that this member creates.
--   
--   Use one of the following options to specify this parameter:
--   
--   <ul>
--   <li><b>Undefined or empty string</b> - The member uses an AWS owned
--   KMS key for encryption by default.</li>
--   <li><b>A valid symmetric customer managed KMS key</b> - The member
--   uses the specified key for encryption.Amazon Managed Blockchain
--   doesn't support asymmetric keys. For more information, see <a>Using
--   symmetric and asymmetric keys</a> in the <i>AWS Key Management Service
--   Developer Guide</i>.The following is an example of a KMS key ARN:
--   <tt>arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</tt></li>
--   </ul>
--   
--   <a>$sel:logPublishingConfiguration:MemberConfiguration'</a>,
--   <a>memberConfiguration_logPublishingConfiguration</a> - Configuration
--   properties for logging events associated with a member of a Managed
--   Blockchain network.
--   
--   <a>$sel:description:MemberConfiguration'</a>,
--   <a>memberConfiguration_description</a> - An optional description of
--   the member.
--   
--   <a>$sel:tags:MemberConfiguration'</a>, <a>memberConfiguration_tags</a>
--   - Tags assigned to the member. Tags consist of a key and optional
--   value. For more information about tags, see <a>Tagging Resources</a>
--   in the <i>Amazon Managed Blockchain Hyperledger Fabric Developer
--   Guide</i>.
--   
--   When specifying tags during creation, you can specify multiple
--   key-value pairs in a single request, with an overall maximum of 50
--   tags added to each resource.
--   
--   <a>$sel:name:MemberConfiguration'</a>, <a>memberConfiguration_name</a>
--   - The name of the member.
--   
--   <a>$sel:frameworkConfiguration:MemberConfiguration'</a>,
--   <a>memberConfiguration_frameworkConfiguration</a> - Configuration
--   properties of the blockchain framework relevant to the member.
newMemberConfiguration :: Text -> MemberFrameworkConfiguration -> MemberConfiguration

-- | The Amazon Resource Name (ARN) of the customer managed key in AWS Key
--   Management Service (AWS KMS) to use for encryption at rest in the
--   member. This parameter is inherited by any nodes that this member
--   creates.
--   
--   Use one of the following options to specify this parameter:
--   
--   <ul>
--   <li><b>Undefined or empty string</b> - The member uses an AWS owned
--   KMS key for encryption by default.</li>
--   <li><b>A valid symmetric customer managed KMS key</b> - The member
--   uses the specified key for encryption.Amazon Managed Blockchain
--   doesn't support asymmetric keys. For more information, see <a>Using
--   symmetric and asymmetric keys</a> in the <i>AWS Key Management Service
--   Developer Guide</i>.The following is an example of a KMS key ARN:
--   <tt>arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</tt></li>
--   </ul>
memberConfiguration_kmsKeyArn :: Lens' MemberConfiguration (Maybe Text)

-- | Configuration properties for logging events associated with a member
--   of a Managed Blockchain network.
memberConfiguration_logPublishingConfiguration :: Lens' MemberConfiguration (Maybe MemberLogPublishingConfiguration)

-- | An optional description of the member.
memberConfiguration_description :: Lens' MemberConfiguration (Maybe Text)

-- | Tags assigned to the member. Tags consist of a key and optional value.
--   For more information about tags, see <a>Tagging Resources</a> in the
--   <i>Amazon Managed Blockchain Hyperledger Fabric Developer Guide</i>.
--   
--   When specifying tags during creation, you can specify multiple
--   key-value pairs in a single request, with an overall maximum of 50
--   tags added to each resource.
memberConfiguration_tags :: Lens' MemberConfiguration (Maybe (HashMap Text Text))

-- | The name of the member.
memberConfiguration_name :: Lens' MemberConfiguration Text

-- | Configuration properties of the blockchain framework relevant to the
--   member.
memberConfiguration_frameworkConfiguration :: Lens' MemberConfiguration MemberFrameworkConfiguration

-- | Attributes of Hyperledger Fabric for a member in a Managed Blockchain
--   network using the Hyperledger Fabric framework.
--   
--   <i>See:</i> <a>newMemberFabricAttributes</a> smart constructor.
data MemberFabricAttributes
MemberFabricAttributes' :: Maybe Text -> Maybe Text -> MemberFabricAttributes

-- | The endpoint used to access the member's certificate authority.
[$sel:caEndpoint:MemberFabricAttributes'] :: MemberFabricAttributes -> Maybe Text

-- | The user name for the initial administrator user for the member.
[$sel:adminUsername:MemberFabricAttributes'] :: MemberFabricAttributes -> Maybe Text

-- | Create a value of <a>MemberFabricAttributes</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:caEndpoint:MemberFabricAttributes'</a>,
--   <a>memberFabricAttributes_caEndpoint</a> - The endpoint used to access
--   the member's certificate authority.
--   
--   <a>$sel:adminUsername:MemberFabricAttributes'</a>,
--   <a>memberFabricAttributes_adminUsername</a> - The user name for the
--   initial administrator user for the member.
newMemberFabricAttributes :: MemberFabricAttributes

-- | The endpoint used to access the member's certificate authority.
memberFabricAttributes_caEndpoint :: Lens' MemberFabricAttributes (Maybe Text)

-- | The user name for the initial administrator user for the member.
memberFabricAttributes_adminUsername :: Lens' MemberFabricAttributes (Maybe Text)

-- | Configuration properties for Hyperledger Fabric for a member in a
--   Managed Blockchain network using the Hyperledger Fabric framework.
--   
--   <i>See:</i> <a>newMemberFabricConfiguration</a> smart constructor.
data MemberFabricConfiguration
MemberFabricConfiguration' :: Text -> Sensitive Text -> MemberFabricConfiguration

-- | The user name for the member's initial administrative user.
[$sel:adminUsername:MemberFabricConfiguration'] :: MemberFabricConfiguration -> Text

-- | The password for the member's initial administrative user. The
--   <tt>AdminPassword</tt> must be at least eight characters long and no
--   more than 32 characters. It must contain at least one uppercase
--   letter, one lowercase letter, and one digit. It cannot have a single
--   quotation mark (‘), a double quotation marks (“), a forward slash(/),
--   a backward slash(\), @, or a space.
[$sel:adminPassword:MemberFabricConfiguration'] :: MemberFabricConfiguration -> Sensitive Text

-- | Create a value of <a>MemberFabricConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:adminUsername:MemberFabricConfiguration'</a>,
--   <a>memberFabricConfiguration_adminUsername</a> - The user name for the
--   member's initial administrative user.
--   
--   <a>$sel:adminPassword:MemberFabricConfiguration'</a>,
--   <a>memberFabricConfiguration_adminPassword</a> - The password for the
--   member's initial administrative user. The <tt>AdminPassword</tt> must
--   be at least eight characters long and no more than 32 characters. It
--   must contain at least one uppercase letter, one lowercase letter, and
--   one digit. It cannot have a single quotation mark (‘), a double
--   quotation marks (“), a forward slash(/), a backward slash(\), @, or a
--   space.
newMemberFabricConfiguration :: Text -> Text -> MemberFabricConfiguration

-- | The user name for the member's initial administrative user.
memberFabricConfiguration_adminUsername :: Lens' MemberFabricConfiguration Text

-- | The password for the member's initial administrative user. The
--   <tt>AdminPassword</tt> must be at least eight characters long and no
--   more than 32 characters. It must contain at least one uppercase
--   letter, one lowercase letter, and one digit. It cannot have a single
--   quotation mark (‘), a double quotation marks (“), a forward slash(/),
--   a backward slash(\), @, or a space.
memberFabricConfiguration_adminPassword :: Lens' MemberFabricConfiguration Text

-- | Configuration properties for logging events associated with a member
--   of a Managed Blockchain network using the Hyperledger Fabric
--   framework.
--   
--   <i>See:</i> <a>newMemberFabricLogPublishingConfiguration</a> smart
--   constructor.
data MemberFabricLogPublishingConfiguration
MemberFabricLogPublishingConfiguration' :: Maybe LogConfigurations -> MemberFabricLogPublishingConfiguration

-- | Configuration properties for logging events associated with a member's
--   Certificate Authority (CA). CA logs help you determine when a member
--   in your account joins the network, or when new peers register with a
--   member CA.
[$sel:caLogs:MemberFabricLogPublishingConfiguration'] :: MemberFabricLogPublishingConfiguration -> Maybe LogConfigurations

-- | Create a value of <a>MemberFabricLogPublishingConfiguration</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:caLogs:MemberFabricLogPublishingConfiguration'</a>,
--   <a>memberFabricLogPublishingConfiguration_caLogs</a> - Configuration
--   properties for logging events associated with a member's Certificate
--   Authority (CA). CA logs help you determine when a member in your
--   account joins the network, or when new peers register with a member
--   CA.
newMemberFabricLogPublishingConfiguration :: MemberFabricLogPublishingConfiguration

-- | Configuration properties for logging events associated with a member's
--   Certificate Authority (CA). CA logs help you determine when a member
--   in your account joins the network, or when new peers register with a
--   member CA.
memberFabricLogPublishingConfiguration_caLogs :: Lens' MemberFabricLogPublishingConfiguration (Maybe LogConfigurations)

-- | Attributes relevant to a member for the blockchain framework that the
--   Managed Blockchain network uses.
--   
--   <i>See:</i> <a>newMemberFrameworkAttributes</a> smart constructor.
data MemberFrameworkAttributes
MemberFrameworkAttributes' :: Maybe MemberFabricAttributes -> MemberFrameworkAttributes

-- | Attributes of Hyperledger Fabric relevant to a member on a Managed
--   Blockchain network that uses Hyperledger Fabric.
[$sel:fabric:MemberFrameworkAttributes'] :: MemberFrameworkAttributes -> Maybe MemberFabricAttributes

-- | Create a value of <a>MemberFrameworkAttributes</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fabric:MemberFrameworkAttributes'</a>,
--   <a>memberFrameworkAttributes_fabric</a> - Attributes of Hyperledger
--   Fabric relevant to a member on a Managed Blockchain network that uses
--   Hyperledger Fabric.
newMemberFrameworkAttributes :: MemberFrameworkAttributes

-- | Attributes of Hyperledger Fabric relevant to a member on a Managed
--   Blockchain network that uses Hyperledger Fabric.
memberFrameworkAttributes_fabric :: Lens' MemberFrameworkAttributes (Maybe MemberFabricAttributes)

-- | Configuration properties relevant to a member for the blockchain
--   framework that the Managed Blockchain network uses.
--   
--   <i>See:</i> <a>newMemberFrameworkConfiguration</a> smart constructor.
data MemberFrameworkConfiguration
MemberFrameworkConfiguration' :: Maybe MemberFabricConfiguration -> MemberFrameworkConfiguration

-- | Attributes of Hyperledger Fabric for a member on a Managed Blockchain
--   network that uses Hyperledger Fabric.
[$sel:fabric:MemberFrameworkConfiguration'] :: MemberFrameworkConfiguration -> Maybe MemberFabricConfiguration

-- | Create a value of <a>MemberFrameworkConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fabric:MemberFrameworkConfiguration'</a>,
--   <a>memberFrameworkConfiguration_fabric</a> - Attributes of Hyperledger
--   Fabric for a member on a Managed Blockchain network that uses
--   Hyperledger Fabric.
newMemberFrameworkConfiguration :: MemberFrameworkConfiguration

-- | Attributes of Hyperledger Fabric for a member on a Managed Blockchain
--   network that uses Hyperledger Fabric.
memberFrameworkConfiguration_fabric :: Lens' MemberFrameworkConfiguration (Maybe MemberFabricConfiguration)

-- | Configuration properties for logging events associated with a member
--   of a Managed Blockchain network.
--   
--   <i>See:</i> <a>newMemberLogPublishingConfiguration</a> smart
--   constructor.
data MemberLogPublishingConfiguration
MemberLogPublishingConfiguration' :: Maybe MemberFabricLogPublishingConfiguration -> MemberLogPublishingConfiguration

-- | Configuration properties for logging events associated with a member
--   of a Managed Blockchain network using the Hyperledger Fabric
--   framework.
[$sel:fabric:MemberLogPublishingConfiguration'] :: MemberLogPublishingConfiguration -> Maybe MemberFabricLogPublishingConfiguration

-- | Create a value of <a>MemberLogPublishingConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fabric:MemberLogPublishingConfiguration'</a>,
--   <a>memberLogPublishingConfiguration_fabric</a> - Configuration
--   properties for logging events associated with a member of a Managed
--   Blockchain network using the Hyperledger Fabric framework.
newMemberLogPublishingConfiguration :: MemberLogPublishingConfiguration

-- | Configuration properties for logging events associated with a member
--   of a Managed Blockchain network using the Hyperledger Fabric
--   framework.
memberLogPublishingConfiguration_fabric :: Lens' MemberLogPublishingConfiguration (Maybe MemberFabricLogPublishingConfiguration)

-- | A summary of configuration properties for a member.
--   
--   Applies only to Hyperledger Fabric.
--   
--   <i>See:</i> <a>newMemberSummary</a> smart constructor.
data MemberSummary
MemberSummary' :: Maybe MemberStatus -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe POSIX -> Maybe Text -> MemberSummary

-- | The status of the member.
--   
--   <ul>
--   <li><tt>CREATING</tt> - The AWS account is in the process of creating
--   a member.</li>
--   <li><tt>AVAILABLE</tt> - The member has been created and can
--   participate in the network.</li>
--   <li><tt>CREATE_FAILED</tt> - The AWS account attempted to create a
--   member and creation failed.</li>
--   <li><tt>UPDATING</tt> - The member is in the process of being
--   updated.</li>
--   <li><tt>DELETING</tt> - The member and all associated resources are in
--   the process of being deleted. Either the AWS account that owns the
--   member deleted it, or the member is being deleted as the result of an
--   <tt>APPROVED</tt> <tt>PROPOSAL</tt> to remove the member.</li>
--   <li><tt>DELETED</tt> - The member can no longer participate on the
--   network and all associated resources are deleted. Either the AWS
--   account that owns the member deleted it, or the member is being
--   deleted as the result of an <tt>APPROVED</tt> <tt>PROPOSAL</tt> to
--   remove the member.</li>
--   <li><tt>INACCESSIBLE_ENCRYPTION_KEY</tt> - The member is impaired and
--   might not function as expected because it cannot access the specified
--   customer managed key in AWS Key Management Service (AWS KMS) for
--   encryption at rest. Either the KMS key was disabled or deleted, or the
--   grants on the key were revoked.The effect of disabling or deleting a
--   key, or revoking a grant is not immediate. The member resource might
--   take some time to find that the key is inaccessible. When a resource
--   is in this state, we recommend deleting and recreating the
--   resource.</li>
--   </ul>
[$sel:status:MemberSummary'] :: MemberSummary -> Maybe MemberStatus

-- | The Amazon Resource Name (ARN) of the member. For more information
--   about ARNs and their format, see <a>Amazon Resource Names (ARNs)</a>
--   in the <i>AWS General Reference</i>.
[$sel:arn:MemberSummary'] :: MemberSummary -> Maybe Text

-- | The name of the member.
[$sel:name:MemberSummary'] :: MemberSummary -> Maybe Text

-- | The unique identifier of the member.
[$sel:id:MemberSummary'] :: MemberSummary -> Maybe Text

-- | An indicator of whether the member is owned by your AWS account or a
--   different AWS account.
[$sel:isOwned:MemberSummary'] :: MemberSummary -> Maybe Bool

-- | The date and time that the member was created.
[$sel:creationDate:MemberSummary'] :: MemberSummary -> Maybe POSIX

-- | An optional description of the member.
[$sel:description:MemberSummary'] :: MemberSummary -> Maybe Text

-- | Create a value of <a>MemberSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:MemberSummary'</a>, <a>memberSummary_status</a> - The
--   status of the member.
--   
--   <ul>
--   <li><tt>CREATING</tt> - The AWS account is in the process of creating
--   a member.</li>
--   <li><tt>AVAILABLE</tt> - The member has been created and can
--   participate in the network.</li>
--   <li><tt>CREATE_FAILED</tt> - The AWS account attempted to create a
--   member and creation failed.</li>
--   <li><tt>UPDATING</tt> - The member is in the process of being
--   updated.</li>
--   <li><tt>DELETING</tt> - The member and all associated resources are in
--   the process of being deleted. Either the AWS account that owns the
--   member deleted it, or the member is being deleted as the result of an
--   <tt>APPROVED</tt> <tt>PROPOSAL</tt> to remove the member.</li>
--   <li><tt>DELETED</tt> - The member can no longer participate on the
--   network and all associated resources are deleted. Either the AWS
--   account that owns the member deleted it, or the member is being
--   deleted as the result of an <tt>APPROVED</tt> <tt>PROPOSAL</tt> to
--   remove the member.</li>
--   <li><tt>INACCESSIBLE_ENCRYPTION_KEY</tt> - The member is impaired and
--   might not function as expected because it cannot access the specified
--   customer managed key in AWS Key Management Service (AWS KMS) for
--   encryption at rest. Either the KMS key was disabled or deleted, or the
--   grants on the key were revoked.The effect of disabling or deleting a
--   key, or revoking a grant is not immediate. The member resource might
--   take some time to find that the key is inaccessible. When a resource
--   is in this state, we recommend deleting and recreating the
--   resource.</li>
--   </ul>
--   
--   <a>$sel:arn:MemberSummary'</a>, <a>memberSummary_arn</a> - The Amazon
--   Resource Name (ARN) of the member. For more information about ARNs and
--   their format, see <a>Amazon Resource Names (ARNs)</a> in the <i>AWS
--   General Reference</i>.
--   
--   <a>$sel:name:MemberSummary'</a>, <a>memberSummary_name</a> - The name
--   of the member.
--   
--   <a>$sel:id:MemberSummary'</a>, <a>memberSummary_id</a> - The unique
--   identifier of the member.
--   
--   <a>$sel:isOwned:MemberSummary'</a>, <a>memberSummary_isOwned</a> - An
--   indicator of whether the member is owned by your AWS account or a
--   different AWS account.
--   
--   <a>$sel:creationDate:MemberSummary'</a>,
--   <a>memberSummary_creationDate</a> - The date and time that the member
--   was created.
--   
--   <a>$sel:description:MemberSummary'</a>,
--   <a>memberSummary_description</a> - An optional description of the
--   member.
newMemberSummary :: MemberSummary

-- | The status of the member.
--   
--   <ul>
--   <li><tt>CREATING</tt> - The AWS account is in the process of creating
--   a member.</li>
--   <li><tt>AVAILABLE</tt> - The member has been created and can
--   participate in the network.</li>
--   <li><tt>CREATE_FAILED</tt> - The AWS account attempted to create a
--   member and creation failed.</li>
--   <li><tt>UPDATING</tt> - The member is in the process of being
--   updated.</li>
--   <li><tt>DELETING</tt> - The member and all associated resources are in
--   the process of being deleted. Either the AWS account that owns the
--   member deleted it, or the member is being deleted as the result of an
--   <tt>APPROVED</tt> <tt>PROPOSAL</tt> to remove the member.</li>
--   <li><tt>DELETED</tt> - The member can no longer participate on the
--   network and all associated resources are deleted. Either the AWS
--   account that owns the member deleted it, or the member is being
--   deleted as the result of an <tt>APPROVED</tt> <tt>PROPOSAL</tt> to
--   remove the member.</li>
--   <li><tt>INACCESSIBLE_ENCRYPTION_KEY</tt> - The member is impaired and
--   might not function as expected because it cannot access the specified
--   customer managed key in AWS Key Management Service (AWS KMS) for
--   encryption at rest. Either the KMS key was disabled or deleted, or the
--   grants on the key were revoked.The effect of disabling or deleting a
--   key, or revoking a grant is not immediate. The member resource might
--   take some time to find that the key is inaccessible. When a resource
--   is in this state, we recommend deleting and recreating the
--   resource.</li>
--   </ul>
memberSummary_status :: Lens' MemberSummary (Maybe MemberStatus)

-- | The Amazon Resource Name (ARN) of the member. For more information
--   about ARNs and their format, see <a>Amazon Resource Names (ARNs)</a>
--   in the <i>AWS General Reference</i>.
memberSummary_arn :: Lens' MemberSummary (Maybe Text)

-- | The name of the member.
memberSummary_name :: Lens' MemberSummary (Maybe Text)

-- | The unique identifier of the member.
memberSummary_id :: Lens' MemberSummary (Maybe Text)

-- | An indicator of whether the member is owned by your AWS account or a
--   different AWS account.
memberSummary_isOwned :: Lens' MemberSummary (Maybe Bool)

-- | The date and time that the member was created.
memberSummary_creationDate :: Lens' MemberSummary (Maybe UTCTime)

-- | An optional description of the member.
memberSummary_description :: Lens' MemberSummary (Maybe Text)

-- | Network configuration properties.
--   
--   <i>See:</i> <a>newNetwork</a> smart constructor.
data Network
Network' :: Maybe NetworkStatus -> Maybe Framework -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe VotingPolicy -> Maybe POSIX -> Maybe NetworkFrameworkAttributes -> Maybe Text -> Maybe (HashMap Text Text) -> Network

-- | The current status of the network.
[$sel:status:Network'] :: Network -> Maybe NetworkStatus

-- | The blockchain framework that the network uses.
[$sel:framework:Network'] :: Network -> Maybe Framework

-- | The Amazon Resource Name (ARN) of the network. For more information
--   about ARNs and their format, see <a>Amazon Resource Names (ARNs)</a>
--   in the <i>AWS General Reference</i>.
[$sel:arn:Network'] :: Network -> Maybe Text

-- | The version of the blockchain framework that the network uses.
[$sel:frameworkVersion:Network'] :: Network -> Maybe Text

-- | The VPC endpoint service name of the VPC endpoint service of the
--   network. Members use the VPC endpoint service name to create a VPC
--   endpoint to access network resources.
[$sel:vpcEndpointServiceName:Network'] :: Network -> Maybe Text

-- | The name of the network.
[$sel:name:Network'] :: Network -> Maybe Text

-- | The unique identifier of the network.
[$sel:id:Network'] :: Network -> Maybe Text

-- | The voting rules for the network to decide if a proposal is accepted.
[$sel:votingPolicy:Network'] :: Network -> Maybe VotingPolicy

-- | The date and time that the network was created.
[$sel:creationDate:Network'] :: Network -> Maybe POSIX

-- | Attributes of the blockchain framework that the network uses.
[$sel:frameworkAttributes:Network'] :: Network -> Maybe NetworkFrameworkAttributes

-- | Attributes of the blockchain framework for the network.
[$sel:description:Network'] :: Network -> Maybe Text

-- | Tags assigned to the network. Each tag consists of a key and optional
--   value.
--   
--   For more information about tags, see <a>Tagging Resources</a> in the
--   <i>Amazon Managed Blockchain Ethereum Developer Guide</i>, or
--   <a>Tagging Resources</a> in the <i>Amazon Managed Blockchain
--   Hyperledger Fabric Developer Guide</i>.
[$sel:tags:Network'] :: Network -> Maybe (HashMap Text Text)

-- | Create a value of <a>Network</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:Network'</a>, <a>network_status</a> - The current
--   status of the network.
--   
--   <a>$sel:framework:Network'</a>, <a>network_framework</a> - The
--   blockchain framework that the network uses.
--   
--   <a>$sel:arn:Network'</a>, <a>network_arn</a> - The Amazon Resource
--   Name (ARN) of the network. For more information about ARNs and their
--   format, see <a>Amazon Resource Names (ARNs)</a> in the <i>AWS General
--   Reference</i>.
--   
--   <a>$sel:frameworkVersion:Network'</a>, <a>network_frameworkVersion</a>
--   - The version of the blockchain framework that the network uses.
--   
--   <a>$sel:vpcEndpointServiceName:Network'</a>,
--   <a>network_vpcEndpointServiceName</a> - The VPC endpoint service name
--   of the VPC endpoint service of the network. Members use the VPC
--   endpoint service name to create a VPC endpoint to access network
--   resources.
--   
--   <a>$sel:name:Network'</a>, <a>network_name</a> - The name of the
--   network.
--   
--   <a>$sel:id:Network'</a>, <a>network_id</a> - The unique identifier of
--   the network.
--   
--   <a>$sel:votingPolicy:Network'</a>, <a>network_votingPolicy</a> - The
--   voting rules for the network to decide if a proposal is accepted.
--   
--   <a>$sel:creationDate:Network'</a>, <a>network_creationDate</a> - The
--   date and time that the network was created.
--   
--   <a>$sel:frameworkAttributes:Network'</a>,
--   <a>network_frameworkAttributes</a> - Attributes of the blockchain
--   framework that the network uses.
--   
--   <a>$sel:description:Network'</a>, <a>network_description</a> -
--   Attributes of the blockchain framework for the network.
--   
--   <a>$sel:tags:Network'</a>, <a>network_tags</a> - Tags assigned to the
--   network. Each tag consists of a key and optional value.
--   
--   For more information about tags, see <a>Tagging Resources</a> in the
--   <i>Amazon Managed Blockchain Ethereum Developer Guide</i>, or
--   <a>Tagging Resources</a> in the <i>Amazon Managed Blockchain
--   Hyperledger Fabric Developer Guide</i>.
newNetwork :: Network

-- | The current status of the network.
network_status :: Lens' Network (Maybe NetworkStatus)

-- | The blockchain framework that the network uses.
network_framework :: Lens' Network (Maybe Framework)

-- | The Amazon Resource Name (ARN) of the network. For more information
--   about ARNs and their format, see <a>Amazon Resource Names (ARNs)</a>
--   in the <i>AWS General Reference</i>.
network_arn :: Lens' Network (Maybe Text)

-- | The version of the blockchain framework that the network uses.
network_frameworkVersion :: Lens' Network (Maybe Text)

-- | The VPC endpoint service name of the VPC endpoint service of the
--   network. Members use the VPC endpoint service name to create a VPC
--   endpoint to access network resources.
network_vpcEndpointServiceName :: Lens' Network (Maybe Text)

-- | The name of the network.
network_name :: Lens' Network (Maybe Text)

-- | The unique identifier of the network.
network_id :: Lens' Network (Maybe Text)

-- | The voting rules for the network to decide if a proposal is accepted.
network_votingPolicy :: Lens' Network (Maybe VotingPolicy)

-- | The date and time that the network was created.
network_creationDate :: Lens' Network (Maybe UTCTime)

-- | Attributes of the blockchain framework that the network uses.
network_frameworkAttributes :: Lens' Network (Maybe NetworkFrameworkAttributes)

-- | Attributes of the blockchain framework for the network.
network_description :: Lens' Network (Maybe Text)

-- | Tags assigned to the network. Each tag consists of a key and optional
--   value.
--   
--   For more information about tags, see <a>Tagging Resources</a> in the
--   <i>Amazon Managed Blockchain Ethereum Developer Guide</i>, or
--   <a>Tagging Resources</a> in the <i>Amazon Managed Blockchain
--   Hyperledger Fabric Developer Guide</i>.
network_tags :: Lens' Network (Maybe (HashMap Text Text))

-- | Attributes of Ethereum for a network.
--   
--   <i>See:</i> <a>newNetworkEthereumAttributes</a> smart constructor.
data NetworkEthereumAttributes
NetworkEthereumAttributes' :: Maybe Text -> NetworkEthereumAttributes

-- | The Ethereum <tt>CHAIN_ID</tt> associated with the Ethereum network.
--   Chain IDs are as follows:
--   
--   <ul>
--   <li>mainnet = <tt>1</tt></li>
--   <li>rinkeby = <tt>4</tt></li>
--   <li>ropsten = <tt>3</tt></li>
--   </ul>
[$sel:chainId:NetworkEthereumAttributes'] :: NetworkEthereumAttributes -> Maybe Text

-- | Create a value of <a>NetworkEthereumAttributes</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:chainId:NetworkEthereumAttributes'</a>,
--   <a>networkEthereumAttributes_chainId</a> - The Ethereum
--   <tt>CHAIN_ID</tt> associated with the Ethereum network. Chain IDs are
--   as follows:
--   
--   <ul>
--   <li>mainnet = <tt>1</tt></li>
--   <li>rinkeby = <tt>4</tt></li>
--   <li>ropsten = <tt>3</tt></li>
--   </ul>
newNetworkEthereumAttributes :: NetworkEthereumAttributes

-- | The Ethereum <tt>CHAIN_ID</tt> associated with the Ethereum network.
--   Chain IDs are as follows:
--   
--   <ul>
--   <li>mainnet = <tt>1</tt></li>
--   <li>rinkeby = <tt>4</tt></li>
--   <li>ropsten = <tt>3</tt></li>
--   </ul>
networkEthereumAttributes_chainId :: Lens' NetworkEthereumAttributes (Maybe Text)

-- | Attributes of Hyperledger Fabric for a network.
--   
--   <i>See:</i> <a>newNetworkFabricAttributes</a> smart constructor.
data NetworkFabricAttributes
NetworkFabricAttributes' :: Maybe Edition -> Maybe Text -> NetworkFabricAttributes

-- | The edition of Amazon Managed Blockchain that Hyperledger Fabric uses.
--   For more information, see <a>Amazon Managed Blockchain Pricing</a>.
[$sel:edition:NetworkFabricAttributes'] :: NetworkFabricAttributes -> Maybe Edition

-- | The endpoint of the ordering service for the network.
[$sel:orderingServiceEndpoint:NetworkFabricAttributes'] :: NetworkFabricAttributes -> Maybe Text

-- | Create a value of <a>NetworkFabricAttributes</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:edition:NetworkFabricAttributes'</a>,
--   <a>networkFabricAttributes_edition</a> - The edition of Amazon Managed
--   Blockchain that Hyperledger Fabric uses. For more information, see
--   <a>Amazon Managed Blockchain Pricing</a>.
--   
--   <a>$sel:orderingServiceEndpoint:NetworkFabricAttributes'</a>,
--   <a>networkFabricAttributes_orderingServiceEndpoint</a> - The endpoint
--   of the ordering service for the network.
newNetworkFabricAttributes :: NetworkFabricAttributes

-- | The edition of Amazon Managed Blockchain that Hyperledger Fabric uses.
--   For more information, see <a>Amazon Managed Blockchain Pricing</a>.
networkFabricAttributes_edition :: Lens' NetworkFabricAttributes (Maybe Edition)

-- | The endpoint of the ordering service for the network.
networkFabricAttributes_orderingServiceEndpoint :: Lens' NetworkFabricAttributes (Maybe Text)

-- | Hyperledger Fabric configuration properties for the network.
--   
--   <i>See:</i> <a>newNetworkFabricConfiguration</a> smart constructor.
data NetworkFabricConfiguration
NetworkFabricConfiguration' :: Edition -> NetworkFabricConfiguration

-- | The edition of Amazon Managed Blockchain that the network uses. For
--   more information, see <a>Amazon Managed Blockchain Pricing</a>.
[$sel:edition:NetworkFabricConfiguration'] :: NetworkFabricConfiguration -> Edition

-- | Create a value of <a>NetworkFabricConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:edition:NetworkFabricConfiguration'</a>,
--   <a>networkFabricConfiguration_edition</a> - The edition of Amazon
--   Managed Blockchain that the network uses. For more information, see
--   <a>Amazon Managed Blockchain Pricing</a>.
newNetworkFabricConfiguration :: Edition -> NetworkFabricConfiguration

-- | The edition of Amazon Managed Blockchain that the network uses. For
--   more information, see <a>Amazon Managed Blockchain Pricing</a>.
networkFabricConfiguration_edition :: Lens' NetworkFabricConfiguration Edition

-- | Attributes relevant to the network for the blockchain framework that
--   the network uses.
--   
--   <i>See:</i> <a>newNetworkFrameworkAttributes</a> smart constructor.
data NetworkFrameworkAttributes
NetworkFrameworkAttributes' :: Maybe NetworkFabricAttributes -> Maybe NetworkEthereumAttributes -> NetworkFrameworkAttributes

-- | Attributes of Hyperledger Fabric for a Managed Blockchain network that
--   uses Hyperledger Fabric.
[$sel:fabric:NetworkFrameworkAttributes'] :: NetworkFrameworkAttributes -> Maybe NetworkFabricAttributes

-- | Attributes of an Ethereum network for Managed Blockchain resources
--   participating in an Ethereum network.
[$sel:ethereum:NetworkFrameworkAttributes'] :: NetworkFrameworkAttributes -> Maybe NetworkEthereumAttributes

-- | Create a value of <a>NetworkFrameworkAttributes</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fabric:NetworkFrameworkAttributes'</a>,
--   <a>networkFrameworkAttributes_fabric</a> - Attributes of Hyperledger
--   Fabric for a Managed Blockchain network that uses Hyperledger Fabric.
--   
--   <a>$sel:ethereum:NetworkFrameworkAttributes'</a>,
--   <a>networkFrameworkAttributes_ethereum</a> - Attributes of an Ethereum
--   network for Managed Blockchain resources participating in an Ethereum
--   network.
newNetworkFrameworkAttributes :: NetworkFrameworkAttributes

-- | Attributes of Hyperledger Fabric for a Managed Blockchain network that
--   uses Hyperledger Fabric.
networkFrameworkAttributes_fabric :: Lens' NetworkFrameworkAttributes (Maybe NetworkFabricAttributes)

-- | Attributes of an Ethereum network for Managed Blockchain resources
--   participating in an Ethereum network.
networkFrameworkAttributes_ethereum :: Lens' NetworkFrameworkAttributes (Maybe NetworkEthereumAttributes)

-- | Configuration properties relevant to the network for the blockchain
--   framework that the network uses.
--   
--   <i>See:</i> <a>newNetworkFrameworkConfiguration</a> smart constructor.
data NetworkFrameworkConfiguration
NetworkFrameworkConfiguration' :: Maybe NetworkFabricConfiguration -> NetworkFrameworkConfiguration

-- | Hyperledger Fabric configuration properties for a Managed Blockchain
--   network that uses Hyperledger Fabric.
[$sel:fabric:NetworkFrameworkConfiguration'] :: NetworkFrameworkConfiguration -> Maybe NetworkFabricConfiguration

-- | Create a value of <a>NetworkFrameworkConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fabric:NetworkFrameworkConfiguration'</a>,
--   <a>networkFrameworkConfiguration_fabric</a> - Hyperledger Fabric
--   configuration properties for a Managed Blockchain network that uses
--   Hyperledger Fabric.
newNetworkFrameworkConfiguration :: NetworkFrameworkConfiguration

-- | Hyperledger Fabric configuration properties for a Managed Blockchain
--   network that uses Hyperledger Fabric.
networkFrameworkConfiguration_fabric :: Lens' NetworkFrameworkConfiguration (Maybe NetworkFabricConfiguration)

-- | A summary of network configuration properties.
--   
--   <i>See:</i> <a>newNetworkSummary</a> smart constructor.
data NetworkSummary
NetworkSummary' :: Maybe NetworkStatus -> Maybe Framework -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> NetworkSummary

-- | The current status of the network.
[$sel:status:NetworkSummary'] :: NetworkSummary -> Maybe NetworkStatus

-- | The blockchain framework that the network uses.
[$sel:framework:NetworkSummary'] :: NetworkSummary -> Maybe Framework

-- | The Amazon Resource Name (ARN) of the network. For more information
--   about ARNs and their format, see <a>Amazon Resource Names (ARNs)</a>
--   in the <i>AWS General Reference</i>.
[$sel:arn:NetworkSummary'] :: NetworkSummary -> Maybe Text

-- | The version of the blockchain framework that the network uses.
[$sel:frameworkVersion:NetworkSummary'] :: NetworkSummary -> Maybe Text

-- | The name of the network.
[$sel:name:NetworkSummary'] :: NetworkSummary -> Maybe Text

-- | The unique identifier of the network.
[$sel:id:NetworkSummary'] :: NetworkSummary -> Maybe Text

-- | The date and time that the network was created.
[$sel:creationDate:NetworkSummary'] :: NetworkSummary -> Maybe POSIX

-- | An optional description of the network.
[$sel:description:NetworkSummary'] :: NetworkSummary -> Maybe Text

-- | Create a value of <a>NetworkSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:NetworkSummary'</a>, <a>networkSummary_status</a> - The
--   current status of the network.
--   
--   <a>$sel:framework:NetworkSummary'</a>, <a>networkSummary_framework</a>
--   - The blockchain framework that the network uses.
--   
--   <a>$sel:arn:NetworkSummary'</a>, <a>networkSummary_arn</a> - The
--   Amazon Resource Name (ARN) of the network. For more information about
--   ARNs and their format, see <a>Amazon Resource Names (ARNs)</a> in the
--   <i>AWS General Reference</i>.
--   
--   <a>$sel:frameworkVersion:NetworkSummary'</a>,
--   <a>networkSummary_frameworkVersion</a> - The version of the blockchain
--   framework that the network uses.
--   
--   <a>$sel:name:NetworkSummary'</a>, <a>networkSummary_name</a> - The
--   name of the network.
--   
--   <a>$sel:id:NetworkSummary'</a>, <a>networkSummary_id</a> - The unique
--   identifier of the network.
--   
--   <a>$sel:creationDate:NetworkSummary'</a>,
--   <a>networkSummary_creationDate</a> - The date and time that the
--   network was created.
--   
--   <a>$sel:description:NetworkSummary'</a>,
--   <a>networkSummary_description</a> - An optional description of the
--   network.
newNetworkSummary :: NetworkSummary

-- | The current status of the network.
networkSummary_status :: Lens' NetworkSummary (Maybe NetworkStatus)

-- | The blockchain framework that the network uses.
networkSummary_framework :: Lens' NetworkSummary (Maybe Framework)

-- | The Amazon Resource Name (ARN) of the network. For more information
--   about ARNs and their format, see <a>Amazon Resource Names (ARNs)</a>
--   in the <i>AWS General Reference</i>.
networkSummary_arn :: Lens' NetworkSummary (Maybe Text)

-- | The version of the blockchain framework that the network uses.
networkSummary_frameworkVersion :: Lens' NetworkSummary (Maybe Text)

-- | The name of the network.
networkSummary_name :: Lens' NetworkSummary (Maybe Text)

-- | The unique identifier of the network.
networkSummary_id :: Lens' NetworkSummary (Maybe Text)

-- | The date and time that the network was created.
networkSummary_creationDate :: Lens' NetworkSummary (Maybe UTCTime)

-- | An optional description of the network.
networkSummary_description :: Lens' NetworkSummary (Maybe Text)

-- | Configuration properties of a node.
--   
--   <i>See:</i> <a>newNode</a> smart constructor.
data Node
Node' :: Maybe NodeStatus -> Maybe Text -> Maybe NodeLogPublishingConfiguration -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe StateDBType -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe NodeFrameworkAttributes -> Maybe (HashMap Text Text) -> Node

-- | The status of the node.
--   
--   <ul>
--   <li><tt>CREATING</tt> - The AWS account is in the process of creating
--   a node.</li>
--   <li><tt>AVAILABLE</tt> - The node has been created and can participate
--   in the network.</li>
--   <li><tt>UNHEALTHY</tt> - The node is impaired and might not function
--   as expected. Amazon Managed Blockchain automatically finds nodes in
--   this state and tries to recover them. If a node is recoverable, it
--   returns to <tt>AVAILABLE</tt>. Otherwise, it moves to <tt>FAILED</tt>
--   status.</li>
--   <li><tt>CREATE_FAILED</tt> - The AWS account attempted to create a
--   node and creation failed.</li>
--   <li><tt>UPDATING</tt> - The node is in the process of being
--   updated.</li>
--   <li><tt>DELETING</tt> - The node is in the process of being
--   deleted.</li>
--   <li><tt>DELETED</tt> - The node can no longer participate on the
--   network.</li>
--   <li><tt>FAILED</tt> - The node is no longer functional, cannot be
--   recovered, and must be deleted.</li>
--   <li><tt>INACCESSIBLE_ENCRYPTION_KEY</tt> - The node is impaired and
--   might not function as expected because it cannot access the specified
--   customer managed key in AWS KMS for encryption at rest. Either the KMS
--   key was disabled or deleted, or the grants on the key were revoked.The
--   effect of disabling or deleting a key, or revoking a grant is not
--   immediate. The node resource might take some time to find that the key
--   is inaccessible. When a resource is in this state, we recommend
--   deleting and recreating the resource.</li>
--   </ul>
[$sel:status:Node'] :: Node -> Maybe NodeStatus

-- | The Amazon Resource Name (ARN) of the customer managed key in AWS Key
--   Management Service (AWS KMS) that the node uses for encryption at
--   rest. If the value of this parameter is <tt>"AWS Owned KMS Key"</tt>,
--   the node uses an AWS owned KMS key for encryption. The node inherits
--   this parameter from the member that it belongs to.
--   
--   Applies only to Hyperledger Fabric.
[$sel:kmsKeyArn:Node'] :: Node -> Maybe Text

-- | Configuration properties for logging events associated with a peer
--   node on a Hyperledger Fabric network on Managed Blockchain.
[$sel:logPublishingConfiguration:Node'] :: Node -> Maybe NodeLogPublishingConfiguration

-- | The unique identifier of the member to which the node belongs.
--   
--   Applies only to Hyperledger Fabric.
[$sel:memberId:Node'] :: Node -> Maybe Text

-- | The Amazon Resource Name (ARN) of the node. For more information about
--   ARNs and their format, see <a>Amazon Resource Names (ARNs)</a> in the
--   <i>AWS General Reference</i>.
[$sel:arn:Node'] :: Node -> Maybe Text

-- | The unique identifier of the network that the node is on.
[$sel:networkId:Node'] :: Node -> Maybe Text

-- | The instance type of the node.
[$sel:instanceType:Node'] :: Node -> Maybe Text

-- | The state database that the node uses. Values are <tt>LevelDB</tt> or
--   <tt>CouchDB</tt>.
--   
--   Applies only to Hyperledger Fabric.
[$sel:stateDB:Node'] :: Node -> Maybe StateDBType

-- | The Availability Zone in which the node exists. Required for Ethereum
--   nodes.
[$sel:availabilityZone:Node'] :: Node -> Maybe Text

-- | The unique identifier of the node.
[$sel:id:Node'] :: Node -> Maybe Text

-- | The date and time that the node was created.
[$sel:creationDate:Node'] :: Node -> Maybe POSIX

-- | Attributes of the blockchain framework being used.
[$sel:frameworkAttributes:Node'] :: Node -> Maybe NodeFrameworkAttributes

-- | Tags assigned to the node. Each tag consists of a key and optional
--   value.
--   
--   For more information about tags, see <a>Tagging Resources</a> in the
--   <i>Amazon Managed Blockchain Ethereum Developer Guide</i>, or
--   <a>Tagging Resources</a> in the <i>Amazon Managed Blockchain
--   Hyperledger Fabric Developer Guide</i>.
[$sel:tags:Node'] :: Node -> Maybe (HashMap Text Text)

-- | Create a value of <a>Node</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:Node'</a>, <a>node_status</a> - The status of the node.
--   
--   <ul>
--   <li><tt>CREATING</tt> - The AWS account is in the process of creating
--   a node.</li>
--   <li><tt>AVAILABLE</tt> - The node has been created and can participate
--   in the network.</li>
--   <li><tt>UNHEALTHY</tt> - The node is impaired and might not function
--   as expected. Amazon Managed Blockchain automatically finds nodes in
--   this state and tries to recover them. If a node is recoverable, it
--   returns to <tt>AVAILABLE</tt>. Otherwise, it moves to <tt>FAILED</tt>
--   status.</li>
--   <li><tt>CREATE_FAILED</tt> - The AWS account attempted to create a
--   node and creation failed.</li>
--   <li><tt>UPDATING</tt> - The node is in the process of being
--   updated.</li>
--   <li><tt>DELETING</tt> - The node is in the process of being
--   deleted.</li>
--   <li><tt>DELETED</tt> - The node can no longer participate on the
--   network.</li>
--   <li><tt>FAILED</tt> - The node is no longer functional, cannot be
--   recovered, and must be deleted.</li>
--   <li><tt>INACCESSIBLE_ENCRYPTION_KEY</tt> - The node is impaired and
--   might not function as expected because it cannot access the specified
--   customer managed key in AWS KMS for encryption at rest. Either the KMS
--   key was disabled or deleted, or the grants on the key were revoked.The
--   effect of disabling or deleting a key, or revoking a grant is not
--   immediate. The node resource might take some time to find that the key
--   is inaccessible. When a resource is in this state, we recommend
--   deleting and recreating the resource.</li>
--   </ul>
--   
--   <a>$sel:kmsKeyArn:Node'</a>, <a>node_kmsKeyArn</a> - The Amazon
--   Resource Name (ARN) of the customer managed key in AWS Key Management
--   Service (AWS KMS) that the node uses for encryption at rest. If the
--   value of this parameter is <tt>"AWS Owned KMS Key"</tt>, the node uses
--   an AWS owned KMS key for encryption. The node inherits this parameter
--   from the member that it belongs to.
--   
--   Applies only to Hyperledger Fabric.
--   
--   <a>$sel:logPublishingConfiguration:Node'</a>,
--   <a>node_logPublishingConfiguration</a> - Configuration properties for
--   logging events associated with a peer node on a Hyperledger Fabric
--   network on Managed Blockchain.
--   
--   <a>$sel:memberId:Node'</a>, <a>node_memberId</a> - The unique
--   identifier of the member to which the node belongs.
--   
--   Applies only to Hyperledger Fabric.
--   
--   <a>$sel:arn:Node'</a>, <a>node_arn</a> - The Amazon Resource Name
--   (ARN) of the node. For more information about ARNs and their format,
--   see <a>Amazon Resource Names (ARNs)</a> in the <i>AWS General
--   Reference</i>.
--   
--   <a>$sel:networkId:Node'</a>, <a>node_networkId</a> - The unique
--   identifier of the network that the node is on.
--   
--   <a>$sel:instanceType:Node'</a>, <a>node_instanceType</a> - The
--   instance type of the node.
--   
--   <a>$sel:stateDB:Node'</a>, <a>node_stateDB</a> - The state database
--   that the node uses. Values are <tt>LevelDB</tt> or <tt>CouchDB</tt>.
--   
--   Applies only to Hyperledger Fabric.
--   
--   <a>$sel:availabilityZone:Node'</a>, <a>node_availabilityZone</a> - The
--   Availability Zone in which the node exists. Required for Ethereum
--   nodes.
--   
--   <a>$sel:id:Node'</a>, <a>node_id</a> - The unique identifier of the
--   node.
--   
--   <a>$sel:creationDate:Node'</a>, <a>node_creationDate</a> - The date
--   and time that the node was created.
--   
--   <a>$sel:frameworkAttributes:Node'</a>, <a>node_frameworkAttributes</a>
--   - Attributes of the blockchain framework being used.
--   
--   <a>$sel:tags:Node'</a>, <a>node_tags</a> - Tags assigned to the node.
--   Each tag consists of a key and optional value.
--   
--   For more information about tags, see <a>Tagging Resources</a> in the
--   <i>Amazon Managed Blockchain Ethereum Developer Guide</i>, or
--   <a>Tagging Resources</a> in the <i>Amazon Managed Blockchain
--   Hyperledger Fabric Developer Guide</i>.
newNode :: Node

-- | The status of the node.
--   
--   <ul>
--   <li><tt>CREATING</tt> - The AWS account is in the process of creating
--   a node.</li>
--   <li><tt>AVAILABLE</tt> - The node has been created and can participate
--   in the network.</li>
--   <li><tt>UNHEALTHY</tt> - The node is impaired and might not function
--   as expected. Amazon Managed Blockchain automatically finds nodes in
--   this state and tries to recover them. If a node is recoverable, it
--   returns to <tt>AVAILABLE</tt>. Otherwise, it moves to <tt>FAILED</tt>
--   status.</li>
--   <li><tt>CREATE_FAILED</tt> - The AWS account attempted to create a
--   node and creation failed.</li>
--   <li><tt>UPDATING</tt> - The node is in the process of being
--   updated.</li>
--   <li><tt>DELETING</tt> - The node is in the process of being
--   deleted.</li>
--   <li><tt>DELETED</tt> - The node can no longer participate on the
--   network.</li>
--   <li><tt>FAILED</tt> - The node is no longer functional, cannot be
--   recovered, and must be deleted.</li>
--   <li><tt>INACCESSIBLE_ENCRYPTION_KEY</tt> - The node is impaired and
--   might not function as expected because it cannot access the specified
--   customer managed key in AWS KMS for encryption at rest. Either the KMS
--   key was disabled or deleted, or the grants on the key were revoked.The
--   effect of disabling or deleting a key, or revoking a grant is not
--   immediate. The node resource might take some time to find that the key
--   is inaccessible. When a resource is in this state, we recommend
--   deleting and recreating the resource.</li>
--   </ul>
node_status :: Lens' Node (Maybe NodeStatus)

-- | The Amazon Resource Name (ARN) of the customer managed key in AWS Key
--   Management Service (AWS KMS) that the node uses for encryption at
--   rest. If the value of this parameter is <tt>"AWS Owned KMS Key"</tt>,
--   the node uses an AWS owned KMS key for encryption. The node inherits
--   this parameter from the member that it belongs to.
--   
--   Applies only to Hyperledger Fabric.
node_kmsKeyArn :: Lens' Node (Maybe Text)

-- | Configuration properties for logging events associated with a peer
--   node on a Hyperledger Fabric network on Managed Blockchain.
node_logPublishingConfiguration :: Lens' Node (Maybe NodeLogPublishingConfiguration)

-- | The unique identifier of the member to which the node belongs.
--   
--   Applies only to Hyperledger Fabric.
node_memberId :: Lens' Node (Maybe Text)

-- | The Amazon Resource Name (ARN) of the node. For more information about
--   ARNs and their format, see <a>Amazon Resource Names (ARNs)</a> in the
--   <i>AWS General Reference</i>.
node_arn :: Lens' Node (Maybe Text)

-- | The unique identifier of the network that the node is on.
node_networkId :: Lens' Node (Maybe Text)

-- | The instance type of the node.
node_instanceType :: Lens' Node (Maybe Text)

-- | The state database that the node uses. Values are <tt>LevelDB</tt> or
--   <tt>CouchDB</tt>.
--   
--   Applies only to Hyperledger Fabric.
node_stateDB :: Lens' Node (Maybe StateDBType)

-- | The Availability Zone in which the node exists. Required for Ethereum
--   nodes.
node_availabilityZone :: Lens' Node (Maybe Text)

-- | The unique identifier of the node.
node_id :: Lens' Node (Maybe Text)

-- | The date and time that the node was created.
node_creationDate :: Lens' Node (Maybe UTCTime)

-- | Attributes of the blockchain framework being used.
node_frameworkAttributes :: Lens' Node (Maybe NodeFrameworkAttributes)

-- | Tags assigned to the node. Each tag consists of a key and optional
--   value.
--   
--   For more information about tags, see <a>Tagging Resources</a> in the
--   <i>Amazon Managed Blockchain Ethereum Developer Guide</i>, or
--   <a>Tagging Resources</a> in the <i>Amazon Managed Blockchain
--   Hyperledger Fabric Developer Guide</i>.
node_tags :: Lens' Node (Maybe (HashMap Text Text))

-- | Configuration properties of a node.
--   
--   <i>See:</i> <a>newNodeConfiguration</a> smart constructor.
data NodeConfiguration
NodeConfiguration' :: Maybe NodeLogPublishingConfiguration -> Maybe StateDBType -> Maybe Text -> Text -> NodeConfiguration

-- | Configuration properties for logging events associated with a peer
--   node on a Hyperledger Fabric network on Managed Blockchain.
[$sel:logPublishingConfiguration:NodeConfiguration'] :: NodeConfiguration -> Maybe NodeLogPublishingConfiguration

-- | The state database that the node uses. Values are <tt>LevelDB</tt> or
--   <tt>CouchDB</tt>. When using an Amazon Managed Blockchain network with
--   Hyperledger Fabric version 1.4 or later, the default is
--   <tt>CouchDB</tt>.
--   
--   Applies only to Hyperledger Fabric.
[$sel:stateDB:NodeConfiguration'] :: NodeConfiguration -> Maybe StateDBType

-- | The Availability Zone in which the node exists. Required for Ethereum
--   nodes.
[$sel:availabilityZone:NodeConfiguration'] :: NodeConfiguration -> Maybe Text

-- | The Amazon Managed Blockchain instance type for the node.
[$sel:instanceType:NodeConfiguration'] :: NodeConfiguration -> Text

-- | Create a value of <a>NodeConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:logPublishingConfiguration:NodeConfiguration'</a>,
--   <a>nodeConfiguration_logPublishingConfiguration</a> - Configuration
--   properties for logging events associated with a peer node on a
--   Hyperledger Fabric network on Managed Blockchain.
--   
--   <a>$sel:stateDB:NodeConfiguration'</a>,
--   <a>nodeConfiguration_stateDB</a> - The state database that the node
--   uses. Values are <tt>LevelDB</tt> or <tt>CouchDB</tt>. When using an
--   Amazon Managed Blockchain network with Hyperledger Fabric version 1.4
--   or later, the default is <tt>CouchDB</tt>.
--   
--   Applies only to Hyperledger Fabric.
--   
--   <a>$sel:availabilityZone:NodeConfiguration'</a>,
--   <a>nodeConfiguration_availabilityZone</a> - The Availability Zone in
--   which the node exists. Required for Ethereum nodes.
--   
--   <a>$sel:instanceType:NodeConfiguration'</a>,
--   <a>nodeConfiguration_instanceType</a> - The Amazon Managed Blockchain
--   instance type for the node.
newNodeConfiguration :: Text -> NodeConfiguration

-- | Configuration properties for logging events associated with a peer
--   node on a Hyperledger Fabric network on Managed Blockchain.
nodeConfiguration_logPublishingConfiguration :: Lens' NodeConfiguration (Maybe NodeLogPublishingConfiguration)

-- | The state database that the node uses. Values are <tt>LevelDB</tt> or
--   <tt>CouchDB</tt>. When using an Amazon Managed Blockchain network with
--   Hyperledger Fabric version 1.4 or later, the default is
--   <tt>CouchDB</tt>.
--   
--   Applies only to Hyperledger Fabric.
nodeConfiguration_stateDB :: Lens' NodeConfiguration (Maybe StateDBType)

-- | The Availability Zone in which the node exists. Required for Ethereum
--   nodes.
nodeConfiguration_availabilityZone :: Lens' NodeConfiguration (Maybe Text)

-- | The Amazon Managed Blockchain instance type for the node.
nodeConfiguration_instanceType :: Lens' NodeConfiguration Text

-- | Attributes of an Ethereum node.
--   
--   <i>See:</i> <a>newNodeEthereumAttributes</a> smart constructor.
data NodeEthereumAttributes
NodeEthereumAttributes' :: Maybe Text -> Maybe Text -> NodeEthereumAttributes

-- | The endpoint on which the Ethereum node listens to run Ethereum
--   JSON-RPC methods over HTTP connections from a client. Use this
--   endpoint in client code for smart contracts when using an HTTP
--   connection. Connections to this endpoint are authenticated using
--   <a>Signature Version 4</a>.
[$sel:httpEndpoint:NodeEthereumAttributes'] :: NodeEthereumAttributes -> Maybe Text

-- | The endpoint on which the Ethereum node listens to run Ethereum
--   JSON-RPC methods over WebSockets connections from a client. Use this
--   endpoint in client code for smart contracts when using a WebSockets
--   connection. Connections to this endpoint are authenticated using
--   <a>Signature Version 4</a>.
[$sel:webSocketEndpoint:NodeEthereumAttributes'] :: NodeEthereumAttributes -> Maybe Text

-- | Create a value of <a>NodeEthereumAttributes</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpEndpoint:NodeEthereumAttributes'</a>,
--   <a>nodeEthereumAttributes_httpEndpoint</a> - The endpoint on which the
--   Ethereum node listens to run Ethereum JSON-RPC methods over HTTP
--   connections from a client. Use this endpoint in client code for smart
--   contracts when using an HTTP connection. Connections to this endpoint
--   are authenticated using <a>Signature Version 4</a>.
--   
--   <a>$sel:webSocketEndpoint:NodeEthereumAttributes'</a>,
--   <a>nodeEthereumAttributes_webSocketEndpoint</a> - The endpoint on
--   which the Ethereum node listens to run Ethereum JSON-RPC methods over
--   WebSockets connections from a client. Use this endpoint in client code
--   for smart contracts when using a WebSockets connection. Connections to
--   this endpoint are authenticated using <a>Signature Version 4</a>.
newNodeEthereumAttributes :: NodeEthereumAttributes

-- | The endpoint on which the Ethereum node listens to run Ethereum
--   JSON-RPC methods over HTTP connections from a client. Use this
--   endpoint in client code for smart contracts when using an HTTP
--   connection. Connections to this endpoint are authenticated using
--   <a>Signature Version 4</a>.
nodeEthereumAttributes_httpEndpoint :: Lens' NodeEthereumAttributes (Maybe Text)

-- | The endpoint on which the Ethereum node listens to run Ethereum
--   JSON-RPC methods over WebSockets connections from a client. Use this
--   endpoint in client code for smart contracts when using a WebSockets
--   connection. Connections to this endpoint are authenticated using
--   <a>Signature Version 4</a>.
nodeEthereumAttributes_webSocketEndpoint :: Lens' NodeEthereumAttributes (Maybe Text)

-- | Attributes of Hyperledger Fabric for a peer node on a Hyperledger
--   Fabric network on Managed Blockchain.
--   
--   <i>See:</i> <a>newNodeFabricAttributes</a> smart constructor.
data NodeFabricAttributes
NodeFabricAttributes' :: Maybe Text -> Maybe Text -> NodeFabricAttributes

-- | The endpoint that identifies the peer node for peer channel-based
--   event services.
[$sel:peerEventEndpoint:NodeFabricAttributes'] :: NodeFabricAttributes -> Maybe Text

-- | The endpoint that identifies the peer node for all services except
--   peer channel-based event services.
[$sel:peerEndpoint:NodeFabricAttributes'] :: NodeFabricAttributes -> Maybe Text

-- | Create a value of <a>NodeFabricAttributes</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:peerEventEndpoint:NodeFabricAttributes'</a>,
--   <a>nodeFabricAttributes_peerEventEndpoint</a> - The endpoint that
--   identifies the peer node for peer channel-based event services.
--   
--   <a>$sel:peerEndpoint:NodeFabricAttributes'</a>,
--   <a>nodeFabricAttributes_peerEndpoint</a> - The endpoint that
--   identifies the peer node for all services except peer channel-based
--   event services.
newNodeFabricAttributes :: NodeFabricAttributes

-- | The endpoint that identifies the peer node for peer channel-based
--   event services.
nodeFabricAttributes_peerEventEndpoint :: Lens' NodeFabricAttributes (Maybe Text)

-- | The endpoint that identifies the peer node for all services except
--   peer channel-based event services.
nodeFabricAttributes_peerEndpoint :: Lens' NodeFabricAttributes (Maybe Text)

-- | Configuration properties for logging events associated with a peer
--   node owned by a member in a Managed Blockchain network.
--   
--   <i>See:</i> <a>newNodeFabricLogPublishingConfiguration</a> smart
--   constructor.
data NodeFabricLogPublishingConfiguration
NodeFabricLogPublishingConfiguration' :: Maybe LogConfigurations -> Maybe LogConfigurations -> NodeFabricLogPublishingConfiguration

-- | Configuration properties for logging events associated with chaincode
--   execution on a peer node. Chaincode logs contain the results of
--   instantiating, invoking, and querying the chaincode. A peer can run
--   multiple instances of chaincode. When enabled, a log stream is created
--   for all chaincodes, with an individual log stream for each chaincode.
[$sel:chaincodeLogs:NodeFabricLogPublishingConfiguration'] :: NodeFabricLogPublishingConfiguration -> Maybe LogConfigurations

-- | Configuration properties for a peer node log. Peer node logs contain
--   messages generated when your client submits transaction proposals to
--   peer nodes, requests to join channels, enrolls an admin peer, and
--   lists the chaincode instances on a peer node.
[$sel:peerLogs:NodeFabricLogPublishingConfiguration'] :: NodeFabricLogPublishingConfiguration -> Maybe LogConfigurations

-- | Create a value of <a>NodeFabricLogPublishingConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:chaincodeLogs:NodeFabricLogPublishingConfiguration'</a>,
--   <a>nodeFabricLogPublishingConfiguration_chaincodeLogs</a> -
--   Configuration properties for logging events associated with chaincode
--   execution on a peer node. Chaincode logs contain the results of
--   instantiating, invoking, and querying the chaincode. A peer can run
--   multiple instances of chaincode. When enabled, a log stream is created
--   for all chaincodes, with an individual log stream for each chaincode.
--   
--   <a>$sel:peerLogs:NodeFabricLogPublishingConfiguration'</a>,
--   <a>nodeFabricLogPublishingConfiguration_peerLogs</a> - Configuration
--   properties for a peer node log. Peer node logs contain messages
--   generated when your client submits transaction proposals to peer
--   nodes, requests to join channels, enrolls an admin peer, and lists the
--   chaincode instances on a peer node.
newNodeFabricLogPublishingConfiguration :: NodeFabricLogPublishingConfiguration

-- | Configuration properties for logging events associated with chaincode
--   execution on a peer node. Chaincode logs contain the results of
--   instantiating, invoking, and querying the chaincode. A peer can run
--   multiple instances of chaincode. When enabled, a log stream is created
--   for all chaincodes, with an individual log stream for each chaincode.
nodeFabricLogPublishingConfiguration_chaincodeLogs :: Lens' NodeFabricLogPublishingConfiguration (Maybe LogConfigurations)

-- | Configuration properties for a peer node log. Peer node logs contain
--   messages generated when your client submits transaction proposals to
--   peer nodes, requests to join channels, enrolls an admin peer, and
--   lists the chaincode instances on a peer node.
nodeFabricLogPublishingConfiguration_peerLogs :: Lens' NodeFabricLogPublishingConfiguration (Maybe LogConfigurations)

-- | Attributes relevant to a node on a Managed Blockchain network for the
--   blockchain framework that the network uses.
--   
--   <i>See:</i> <a>newNodeFrameworkAttributes</a> smart constructor.
data NodeFrameworkAttributes
NodeFrameworkAttributes' :: Maybe NodeFabricAttributes -> Maybe NodeEthereumAttributes -> NodeFrameworkAttributes

-- | Attributes of Hyperledger Fabric for a peer node on a Managed
--   Blockchain network that uses Hyperledger Fabric.
[$sel:fabric:NodeFrameworkAttributes'] :: NodeFrameworkAttributes -> Maybe NodeFabricAttributes

-- | Attributes of Ethereum for a node on a Managed Blockchain network that
--   uses Ethereum.
[$sel:ethereum:NodeFrameworkAttributes'] :: NodeFrameworkAttributes -> Maybe NodeEthereumAttributes

-- | Create a value of <a>NodeFrameworkAttributes</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fabric:NodeFrameworkAttributes'</a>,
--   <a>nodeFrameworkAttributes_fabric</a> - Attributes of Hyperledger
--   Fabric for a peer node on a Managed Blockchain network that uses
--   Hyperledger Fabric.
--   
--   <a>$sel:ethereum:NodeFrameworkAttributes'</a>,
--   <a>nodeFrameworkAttributes_ethereum</a> - Attributes of Ethereum for a
--   node on a Managed Blockchain network that uses Ethereum.
newNodeFrameworkAttributes :: NodeFrameworkAttributes

-- | Attributes of Hyperledger Fabric for a peer node on a Managed
--   Blockchain network that uses Hyperledger Fabric.
nodeFrameworkAttributes_fabric :: Lens' NodeFrameworkAttributes (Maybe NodeFabricAttributes)

-- | Attributes of Ethereum for a node on a Managed Blockchain network that
--   uses Ethereum.
nodeFrameworkAttributes_ethereum :: Lens' NodeFrameworkAttributes (Maybe NodeEthereumAttributes)

-- | Configuration properties for logging events associated with a peer
--   node on a Hyperledger Fabric network on Managed Blockchain.
--   
--   <i>See:</i> <a>newNodeLogPublishingConfiguration</a> smart
--   constructor.
data NodeLogPublishingConfiguration
NodeLogPublishingConfiguration' :: Maybe NodeFabricLogPublishingConfiguration -> NodeLogPublishingConfiguration

-- | Configuration properties for logging events associated with a node
--   that is owned by a member of a Managed Blockchain network using the
--   Hyperledger Fabric framework.
[$sel:fabric:NodeLogPublishingConfiguration'] :: NodeLogPublishingConfiguration -> Maybe NodeFabricLogPublishingConfiguration

-- | Create a value of <a>NodeLogPublishingConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fabric:NodeLogPublishingConfiguration'</a>,
--   <a>nodeLogPublishingConfiguration_fabric</a> - Configuration
--   properties for logging events associated with a node that is owned by
--   a member of a Managed Blockchain network using the Hyperledger Fabric
--   framework.
newNodeLogPublishingConfiguration :: NodeLogPublishingConfiguration

-- | Configuration properties for logging events associated with a node
--   that is owned by a member of a Managed Blockchain network using the
--   Hyperledger Fabric framework.
nodeLogPublishingConfiguration_fabric :: Lens' NodeLogPublishingConfiguration (Maybe NodeFabricLogPublishingConfiguration)

-- | A summary of configuration properties for a node.
--   
--   <i>See:</i> <a>newNodeSummary</a> smart constructor.
data NodeSummary
NodeSummary' :: Maybe NodeStatus -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> NodeSummary

-- | The status of the node.
[$sel:status:NodeSummary'] :: NodeSummary -> Maybe NodeStatus

-- | The Amazon Resource Name (ARN) of the node. For more information about
--   ARNs and their format, see <a>Amazon Resource Names (ARNs)</a> in the
--   <i>AWS General Reference</i>.
[$sel:arn:NodeSummary'] :: NodeSummary -> Maybe Text

-- | The EC2 instance type for the node.
[$sel:instanceType:NodeSummary'] :: NodeSummary -> Maybe Text

-- | The Availability Zone in which the node exists.
[$sel:availabilityZone:NodeSummary'] :: NodeSummary -> Maybe Text

-- | The unique identifier of the node.
[$sel:id:NodeSummary'] :: NodeSummary -> Maybe Text

-- | The date and time that the node was created.
[$sel:creationDate:NodeSummary'] :: NodeSummary -> Maybe POSIX

-- | Create a value of <a>NodeSummary</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:NodeSummary'</a>, <a>nodeSummary_status</a> - The
--   status of the node.
--   
--   <a>$sel:arn:NodeSummary'</a>, <a>nodeSummary_arn</a> - The Amazon
--   Resource Name (ARN) of the node. For more information about ARNs and
--   their format, see <a>Amazon Resource Names (ARNs)</a> in the <i>AWS
--   General Reference</i>.
--   
--   <a>$sel:instanceType:NodeSummary'</a>, <a>nodeSummary_instanceType</a>
--   - The EC2 instance type for the node.
--   
--   <a>$sel:availabilityZone:NodeSummary'</a>,
--   <a>nodeSummary_availabilityZone</a> - The Availability Zone in which
--   the node exists.
--   
--   <a>$sel:id:NodeSummary'</a>, <a>nodeSummary_id</a> - The unique
--   identifier of the node.
--   
--   <a>$sel:creationDate:NodeSummary'</a>, <a>nodeSummary_creationDate</a>
--   - The date and time that the node was created.
newNodeSummary :: NodeSummary

-- | The status of the node.
nodeSummary_status :: Lens' NodeSummary (Maybe NodeStatus)

-- | The Amazon Resource Name (ARN) of the node. For more information about
--   ARNs and their format, see <a>Amazon Resource Names (ARNs)</a> in the
--   <i>AWS General Reference</i>.
nodeSummary_arn :: Lens' NodeSummary (Maybe Text)

-- | The EC2 instance type for the node.
nodeSummary_instanceType :: Lens' NodeSummary (Maybe Text)

-- | The Availability Zone in which the node exists.
nodeSummary_availabilityZone :: Lens' NodeSummary (Maybe Text)

-- | The unique identifier of the node.
nodeSummary_id :: Lens' NodeSummary (Maybe Text)

-- | The date and time that the node was created.
nodeSummary_creationDate :: Lens' NodeSummary (Maybe UTCTime)

-- | Properties of a proposal on a Managed Blockchain network.
--   
--   Applies only to Hyperledger Fabric.
--   
--   <i>See:</i> <a>newProposal</a> smart constructor.
data Proposal
Proposal' :: Maybe ProposalStatus -> Maybe Int -> Maybe Int -> Maybe Text -> Maybe ProposalActions -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe POSIX -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe Int -> Proposal

-- | The status of the proposal. Values are as follows:
--   
--   <ul>
--   <li><tt>IN_PROGRESS</tt> - The proposal is active and open for member
--   voting.</li>
--   <li><tt>APPROVED</tt> - The proposal was approved with sufficient
--   <tt>YES</tt> votes among members according to the
--   <tt>VotingPolicy</tt> specified for the <tt>Network</tt>. The
--   specified proposal actions are carried out.</li>
--   <li><tt>REJECTED</tt> - The proposal was rejected with insufficient
--   <tt>YES</tt> votes among members according to the
--   <tt>VotingPolicy</tt> specified for the <tt>Network</tt>. The
--   specified <tt>ProposalActions</tt> are not carried out.</li>
--   <li><tt>EXPIRED</tt> - Members did not cast the number of votes
--   required to determine the proposal outcome before the proposal
--   expired. The specified <tt>ProposalActions</tt> are not carried
--   out.</li>
--   <li><tt>ACTION_FAILED</tt> - One or more of the specified
--   <tt>ProposalActions</tt> in a proposal that was approved could not be
--   completed because of an error. The <tt>ACTION_FAILED</tt> status
--   occurs even if only one ProposalAction fails and other actions are
--   successful.</li>
--   </ul>
[$sel:status:Proposal'] :: Proposal -> Maybe ProposalStatus

-- | The current total of <tt>YES</tt> votes cast on the proposal by
--   members.
[$sel:yesVoteCount:Proposal'] :: Proposal -> Maybe Int

-- | The current total of <tt>NO</tt> votes cast on the proposal by
--   members.
[$sel:noVoteCount:Proposal'] :: Proposal -> Maybe Int

-- | The Amazon Resource Name (ARN) of the proposal. For more information
--   about ARNs and their format, see <a>Amazon Resource Names (ARNs)</a>
--   in the <i>AWS General Reference</i>.
[$sel:arn:Proposal'] :: Proposal -> Maybe Text

-- | The actions to perform on the network if the proposal is
--   <tt>APPROVED</tt>.
[$sel:actions:Proposal'] :: Proposal -> Maybe ProposalActions

-- | The unique identifier of the network for which the proposal is made.
[$sel:networkId:Proposal'] :: Proposal -> Maybe Text

-- | The unique identifier of the member that created the proposal.
[$sel:proposedByMemberId:Proposal'] :: Proposal -> Maybe Text

-- | The unique identifier of the proposal.
[$sel:proposalId:Proposal'] :: Proposal -> Maybe Text

-- | The name of the member that created the proposal.
[$sel:proposedByMemberName:Proposal'] :: Proposal -> Maybe Text

-- | The date and time that the proposal expires. This is the
--   <tt>CreationDate</tt> plus the <tt>ProposalDurationInHours</tt> that
--   is specified in the <tt>ProposalThresholdPolicy</tt>. After this date
--   and time, if members have not cast enough votes to determine the
--   outcome according to the voting policy, the proposal is
--   <tt>EXPIRED</tt> and <tt>Actions</tt> are not carried out.
[$sel:expirationDate:Proposal'] :: Proposal -> Maybe POSIX

-- | The date and time that the proposal was created.
[$sel:creationDate:Proposal'] :: Proposal -> Maybe POSIX

-- | The description of the proposal.
[$sel:description:Proposal'] :: Proposal -> Maybe Text

-- | Tags assigned to the proposal. Each tag consists of a key and optional
--   value.
--   
--   For more information about tags, see <a>Tagging Resources</a> in the
--   <i>Amazon Managed Blockchain Ethereum Developer Guide</i>, or
--   <a>Tagging Resources</a> in the <i>Amazon Managed Blockchain
--   Hyperledger Fabric Developer Guide</i>.
[$sel:tags:Proposal'] :: Proposal -> Maybe (HashMap Text Text)

-- | The number of votes remaining to be cast on the proposal by members.
--   In other words, the number of members minus the sum of <tt>YES</tt>
--   votes and <tt>NO</tt> votes.
[$sel:outstandingVoteCount:Proposal'] :: Proposal -> Maybe Int

-- | Create a value of <a>Proposal</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:Proposal'</a>, <a>proposal_status</a> - The status of
--   the proposal. Values are as follows:
--   
--   <ul>
--   <li><tt>IN_PROGRESS</tt> - The proposal is active and open for member
--   voting.</li>
--   <li><tt>APPROVED</tt> - The proposal was approved with sufficient
--   <tt>YES</tt> votes among members according to the
--   <tt>VotingPolicy</tt> specified for the <tt>Network</tt>. The
--   specified proposal actions are carried out.</li>
--   <li><tt>REJECTED</tt> - The proposal was rejected with insufficient
--   <tt>YES</tt> votes among members according to the
--   <tt>VotingPolicy</tt> specified for the <tt>Network</tt>. The
--   specified <tt>ProposalActions</tt> are not carried out.</li>
--   <li><tt>EXPIRED</tt> - Members did not cast the number of votes
--   required to determine the proposal outcome before the proposal
--   expired. The specified <tt>ProposalActions</tt> are not carried
--   out.</li>
--   <li><tt>ACTION_FAILED</tt> - One or more of the specified
--   <tt>ProposalActions</tt> in a proposal that was approved could not be
--   completed because of an error. The <tt>ACTION_FAILED</tt> status
--   occurs even if only one ProposalAction fails and other actions are
--   successful.</li>
--   </ul>
--   
--   <a>$sel:yesVoteCount:Proposal'</a>, <a>proposal_yesVoteCount</a> - The
--   current total of <tt>YES</tt> votes cast on the proposal by members.
--   
--   <a>$sel:noVoteCount:Proposal'</a>, <a>proposal_noVoteCount</a> - The
--   current total of <tt>NO</tt> votes cast on the proposal by members.
--   
--   <a>$sel:arn:Proposal'</a>, <a>proposal_arn</a> - The Amazon Resource
--   Name (ARN) of the proposal. For more information about ARNs and their
--   format, see <a>Amazon Resource Names (ARNs)</a> in the <i>AWS General
--   Reference</i>.
--   
--   <a>$sel:actions:Proposal'</a>, <a>proposal_actions</a> - The actions
--   to perform on the network if the proposal is <tt>APPROVED</tt>.
--   
--   <a>$sel:networkId:Proposal'</a>, <a>proposal_networkId</a> - The
--   unique identifier of the network for which the proposal is made.
--   
--   <a>$sel:proposedByMemberId:Proposal'</a>,
--   <a>proposal_proposedByMemberId</a> - The unique identifier of the
--   member that created the proposal.
--   
--   <a>$sel:proposalId:Proposal'</a>, <a>proposal_proposalId</a> - The
--   unique identifier of the proposal.
--   
--   <a>$sel:proposedByMemberName:Proposal'</a>,
--   <a>proposal_proposedByMemberName</a> - The name of the member that
--   created the proposal.
--   
--   <a>$sel:expirationDate:Proposal'</a>, <a>proposal_expirationDate</a> -
--   The date and time that the proposal expires. This is the
--   <tt>CreationDate</tt> plus the <tt>ProposalDurationInHours</tt> that
--   is specified in the <tt>ProposalThresholdPolicy</tt>. After this date
--   and time, if members have not cast enough votes to determine the
--   outcome according to the voting policy, the proposal is
--   <tt>EXPIRED</tt> and <tt>Actions</tt> are not carried out.
--   
--   <a>$sel:creationDate:Proposal'</a>, <a>proposal_creationDate</a> - The
--   date and time that the proposal was created.
--   
--   <a>$sel:description:Proposal'</a>, <a>proposal_description</a> - The
--   description of the proposal.
--   
--   <a>$sel:tags:Proposal'</a>, <a>proposal_tags</a> - Tags assigned to
--   the proposal. Each tag consists of a key and optional value.
--   
--   For more information about tags, see <a>Tagging Resources</a> in the
--   <i>Amazon Managed Blockchain Ethereum Developer Guide</i>, or
--   <a>Tagging Resources</a> in the <i>Amazon Managed Blockchain
--   Hyperledger Fabric Developer Guide</i>.
--   
--   <a>$sel:outstandingVoteCount:Proposal'</a>,
--   <a>proposal_outstandingVoteCount</a> - The number of votes remaining
--   to be cast on the proposal by members. In other words, the number of
--   members minus the sum of <tt>YES</tt> votes and <tt>NO</tt> votes.
newProposal :: Proposal

-- | The status of the proposal. Values are as follows:
--   
--   <ul>
--   <li><tt>IN_PROGRESS</tt> - The proposal is active and open for member
--   voting.</li>
--   <li><tt>APPROVED</tt> - The proposal was approved with sufficient
--   <tt>YES</tt> votes among members according to the
--   <tt>VotingPolicy</tt> specified for the <tt>Network</tt>. The
--   specified proposal actions are carried out.</li>
--   <li><tt>REJECTED</tt> - The proposal was rejected with insufficient
--   <tt>YES</tt> votes among members according to the
--   <tt>VotingPolicy</tt> specified for the <tt>Network</tt>. The
--   specified <tt>ProposalActions</tt> are not carried out.</li>
--   <li><tt>EXPIRED</tt> - Members did not cast the number of votes
--   required to determine the proposal outcome before the proposal
--   expired. The specified <tt>ProposalActions</tt> are not carried
--   out.</li>
--   <li><tt>ACTION_FAILED</tt> - One or more of the specified
--   <tt>ProposalActions</tt> in a proposal that was approved could not be
--   completed because of an error. The <tt>ACTION_FAILED</tt> status
--   occurs even if only one ProposalAction fails and other actions are
--   successful.</li>
--   </ul>
proposal_status :: Lens' Proposal (Maybe ProposalStatus)

-- | The current total of <tt>YES</tt> votes cast on the proposal by
--   members.
proposal_yesVoteCount :: Lens' Proposal (Maybe Int)

-- | The current total of <tt>NO</tt> votes cast on the proposal by
--   members.
proposal_noVoteCount :: Lens' Proposal (Maybe Int)

-- | The Amazon Resource Name (ARN) of the proposal. For more information
--   about ARNs and their format, see <a>Amazon Resource Names (ARNs)</a>
--   in the <i>AWS General Reference</i>.
proposal_arn :: Lens' Proposal (Maybe Text)

-- | The actions to perform on the network if the proposal is
--   <tt>APPROVED</tt>.
proposal_actions :: Lens' Proposal (Maybe ProposalActions)

-- | The unique identifier of the network for which the proposal is made.
proposal_networkId :: Lens' Proposal (Maybe Text)

-- | The unique identifier of the member that created the proposal.
proposal_proposedByMemberId :: Lens' Proposal (Maybe Text)

-- | The unique identifier of the proposal.
proposal_proposalId :: Lens' Proposal (Maybe Text)

-- | The name of the member that created the proposal.
proposal_proposedByMemberName :: Lens' Proposal (Maybe Text)

-- | The date and time that the proposal expires. This is the
--   <tt>CreationDate</tt> plus the <tt>ProposalDurationInHours</tt> that
--   is specified in the <tt>ProposalThresholdPolicy</tt>. After this date
--   and time, if members have not cast enough votes to determine the
--   outcome according to the voting policy, the proposal is
--   <tt>EXPIRED</tt> and <tt>Actions</tt> are not carried out.
proposal_expirationDate :: Lens' Proposal (Maybe UTCTime)

-- | The date and time that the proposal was created.
proposal_creationDate :: Lens' Proposal (Maybe UTCTime)

-- | The description of the proposal.
proposal_description :: Lens' Proposal (Maybe Text)

-- | Tags assigned to the proposal. Each tag consists of a key and optional
--   value.
--   
--   For more information about tags, see <a>Tagging Resources</a> in the
--   <i>Amazon Managed Blockchain Ethereum Developer Guide</i>, or
--   <a>Tagging Resources</a> in the <i>Amazon Managed Blockchain
--   Hyperledger Fabric Developer Guide</i>.
proposal_tags :: Lens' Proposal (Maybe (HashMap Text Text))

-- | The number of votes remaining to be cast on the proposal by members.
--   In other words, the number of members minus the sum of <tt>YES</tt>
--   votes and <tt>NO</tt> votes.
proposal_outstandingVoteCount :: Lens' Proposal (Maybe Int)

-- | The actions to carry out if a proposal is <tt>APPROVED</tt>.
--   
--   Applies only to Hyperledger Fabric.
--   
--   <i>See:</i> <a>newProposalActions</a> smart constructor.
data ProposalActions
ProposalActions' :: Maybe [InviteAction] -> Maybe [RemoveAction] -> ProposalActions

-- | The actions to perform for an <tt>APPROVED</tt> proposal to invite an
--   AWS account to create a member and join the network.
[$sel:invitations:ProposalActions'] :: ProposalActions -> Maybe [InviteAction]

-- | The actions to perform for an <tt>APPROVED</tt> proposal to remove a
--   member from the network, which deletes the member and all associated
--   member resources from the network.
[$sel:removals:ProposalActions'] :: ProposalActions -> Maybe [RemoveAction]

-- | Create a value of <a>ProposalActions</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:invitations:ProposalActions'</a>,
--   <a>proposalActions_invitations</a> - The actions to perform for an
--   <tt>APPROVED</tt> proposal to invite an AWS account to create a member
--   and join the network.
--   
--   <a>$sel:removals:ProposalActions'</a>, <a>proposalActions_removals</a>
--   - The actions to perform for an <tt>APPROVED</tt> proposal to remove a
--   member from the network, which deletes the member and all associated
--   member resources from the network.
newProposalActions :: ProposalActions

-- | The actions to perform for an <tt>APPROVED</tt> proposal to invite an
--   AWS account to create a member and join the network.
proposalActions_invitations :: Lens' ProposalActions (Maybe [InviteAction])

-- | The actions to perform for an <tt>APPROVED</tt> proposal to remove a
--   member from the network, which deletes the member and all associated
--   member resources from the network.
proposalActions_removals :: Lens' ProposalActions (Maybe [RemoveAction])

-- | Properties of a proposal.
--   
--   Applies only to Hyperledger Fabric.
--   
--   <i>See:</i> <a>newProposalSummary</a> smart constructor.
data ProposalSummary
ProposalSummary' :: Maybe ProposalStatus -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe POSIX -> Maybe Text -> ProposalSummary

-- | The status of the proposal. Values are as follows:
--   
--   <ul>
--   <li><tt>IN_PROGRESS</tt> - The proposal is active and open for member
--   voting.</li>
--   <li><tt>APPROVED</tt> - The proposal was approved with sufficient
--   <tt>YES</tt> votes among members according to the
--   <tt>VotingPolicy</tt> specified for the <tt>Network</tt>. The
--   specified proposal actions are carried out.</li>
--   <li><tt>REJECTED</tt> - The proposal was rejected with insufficient
--   <tt>YES</tt> votes among members according to the
--   <tt>VotingPolicy</tt> specified for the <tt>Network</tt>. The
--   specified <tt>ProposalActions</tt> are not carried out.</li>
--   <li><tt>EXPIRED</tt> - Members did not cast the number of votes
--   required to determine the proposal outcome before the proposal
--   expired. The specified <tt>ProposalActions</tt> are not carried
--   out.</li>
--   <li><tt>ACTION_FAILED</tt> - One or more of the specified
--   <tt>ProposalActions</tt> in a proposal that was approved could not be
--   completed because of an error.</li>
--   </ul>
[$sel:status:ProposalSummary'] :: ProposalSummary -> Maybe ProposalStatus

-- | The Amazon Resource Name (ARN) of the proposal. For more information
--   about ARNs and their format, see <a>Amazon Resource Names (ARNs)</a>
--   in the <i>AWS General Reference</i>.
[$sel:arn:ProposalSummary'] :: ProposalSummary -> Maybe Text

-- | The unique identifier of the member that created the proposal.
[$sel:proposedByMemberId:ProposalSummary'] :: ProposalSummary -> Maybe Text

-- | The unique identifier of the proposal.
[$sel:proposalId:ProposalSummary'] :: ProposalSummary -> Maybe Text

-- | The name of the member that created the proposal.
[$sel:proposedByMemberName:ProposalSummary'] :: ProposalSummary -> Maybe Text

-- | The date and time that the proposal expires. This is the
--   <tt>CreationDate</tt> plus the <tt>ProposalDurationInHours</tt> that
--   is specified in the <tt>ProposalThresholdPolicy</tt>. After this date
--   and time, if members have not cast enough votes to determine the
--   outcome according to the voting policy, the proposal is
--   <tt>EXPIRED</tt> and <tt>Actions</tt> are not carried out.
[$sel:expirationDate:ProposalSummary'] :: ProposalSummary -> Maybe POSIX

-- | The date and time that the proposal was created.
[$sel:creationDate:ProposalSummary'] :: ProposalSummary -> Maybe POSIX

-- | The description of the proposal.
[$sel:description:ProposalSummary'] :: ProposalSummary -> Maybe Text

-- | Create a value of <a>ProposalSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:ProposalSummary'</a>, <a>proposalSummary_status</a> -
--   The status of the proposal. Values are as follows:
--   
--   <ul>
--   <li><tt>IN_PROGRESS</tt> - The proposal is active and open for member
--   voting.</li>
--   <li><tt>APPROVED</tt> - The proposal was approved with sufficient
--   <tt>YES</tt> votes among members according to the
--   <tt>VotingPolicy</tt> specified for the <tt>Network</tt>. The
--   specified proposal actions are carried out.</li>
--   <li><tt>REJECTED</tt> - The proposal was rejected with insufficient
--   <tt>YES</tt> votes among members according to the
--   <tt>VotingPolicy</tt> specified for the <tt>Network</tt>. The
--   specified <tt>ProposalActions</tt> are not carried out.</li>
--   <li><tt>EXPIRED</tt> - Members did not cast the number of votes
--   required to determine the proposal outcome before the proposal
--   expired. The specified <tt>ProposalActions</tt> are not carried
--   out.</li>
--   <li><tt>ACTION_FAILED</tt> - One or more of the specified
--   <tt>ProposalActions</tt> in a proposal that was approved could not be
--   completed because of an error.</li>
--   </ul>
--   
--   <a>$sel:arn:ProposalSummary'</a>, <a>proposalSummary_arn</a> - The
--   Amazon Resource Name (ARN) of the proposal. For more information about
--   ARNs and their format, see <a>Amazon Resource Names (ARNs)</a> in the
--   <i>AWS General Reference</i>.
--   
--   <a>$sel:proposedByMemberId:ProposalSummary'</a>,
--   <a>proposalSummary_proposedByMemberId</a> - The unique identifier of
--   the member that created the proposal.
--   
--   <a>$sel:proposalId:ProposalSummary'</a>,
--   <a>proposalSummary_proposalId</a> - The unique identifier of the
--   proposal.
--   
--   <a>$sel:proposedByMemberName:ProposalSummary'</a>,
--   <a>proposalSummary_proposedByMemberName</a> - The name of the member
--   that created the proposal.
--   
--   <a>$sel:expirationDate:ProposalSummary'</a>,
--   <a>proposalSummary_expirationDate</a> - The date and time that the
--   proposal expires. This is the <tt>CreationDate</tt> plus the
--   <tt>ProposalDurationInHours</tt> that is specified in the
--   <tt>ProposalThresholdPolicy</tt>. After this date and time, if members
--   have not cast enough votes to determine the outcome according to the
--   voting policy, the proposal is <tt>EXPIRED</tt> and <tt>Actions</tt>
--   are not carried out.
--   
--   <a>$sel:creationDate:ProposalSummary'</a>,
--   <a>proposalSummary_creationDate</a> - The date and time that the
--   proposal was created.
--   
--   <a>$sel:description:ProposalSummary'</a>,
--   <a>proposalSummary_description</a> - The description of the proposal.
newProposalSummary :: ProposalSummary

-- | The status of the proposal. Values are as follows:
--   
--   <ul>
--   <li><tt>IN_PROGRESS</tt> - The proposal is active and open for member
--   voting.</li>
--   <li><tt>APPROVED</tt> - The proposal was approved with sufficient
--   <tt>YES</tt> votes among members according to the
--   <tt>VotingPolicy</tt> specified for the <tt>Network</tt>. The
--   specified proposal actions are carried out.</li>
--   <li><tt>REJECTED</tt> - The proposal was rejected with insufficient
--   <tt>YES</tt> votes among members according to the
--   <tt>VotingPolicy</tt> specified for the <tt>Network</tt>. The
--   specified <tt>ProposalActions</tt> are not carried out.</li>
--   <li><tt>EXPIRED</tt> - Members did not cast the number of votes
--   required to determine the proposal outcome before the proposal
--   expired. The specified <tt>ProposalActions</tt> are not carried
--   out.</li>
--   <li><tt>ACTION_FAILED</tt> - One or more of the specified
--   <tt>ProposalActions</tt> in a proposal that was approved could not be
--   completed because of an error.</li>
--   </ul>
proposalSummary_status :: Lens' ProposalSummary (Maybe ProposalStatus)

-- | The Amazon Resource Name (ARN) of the proposal. For more information
--   about ARNs and their format, see <a>Amazon Resource Names (ARNs)</a>
--   in the <i>AWS General Reference</i>.
proposalSummary_arn :: Lens' ProposalSummary (Maybe Text)

-- | The unique identifier of the member that created the proposal.
proposalSummary_proposedByMemberId :: Lens' ProposalSummary (Maybe Text)

-- | The unique identifier of the proposal.
proposalSummary_proposalId :: Lens' ProposalSummary (Maybe Text)

-- | The name of the member that created the proposal.
proposalSummary_proposedByMemberName :: Lens' ProposalSummary (Maybe Text)

-- | The date and time that the proposal expires. This is the
--   <tt>CreationDate</tt> plus the <tt>ProposalDurationInHours</tt> that
--   is specified in the <tt>ProposalThresholdPolicy</tt>. After this date
--   and time, if members have not cast enough votes to determine the
--   outcome according to the voting policy, the proposal is
--   <tt>EXPIRED</tt> and <tt>Actions</tt> are not carried out.
proposalSummary_expirationDate :: Lens' ProposalSummary (Maybe UTCTime)

-- | The date and time that the proposal was created.
proposalSummary_creationDate :: Lens' ProposalSummary (Maybe UTCTime)

-- | The description of the proposal.
proposalSummary_description :: Lens' ProposalSummary (Maybe Text)

-- | An action to remove a member from a Managed Blockchain network as the
--   result of a removal proposal that is <tt>APPROVED</tt>. The member and
--   all associated resources are deleted from the network.
--   
--   Applies only to Hyperledger Fabric.
--   
--   <i>See:</i> <a>newRemoveAction</a> smart constructor.
data RemoveAction
RemoveAction' :: Text -> RemoveAction

-- | The unique identifier of the member to remove.
[$sel:memberId:RemoveAction'] :: RemoveAction -> Text

-- | Create a value of <a>RemoveAction</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:memberId:RemoveAction'</a>, <a>removeAction_memberId</a> - The
--   unique identifier of the member to remove.
newRemoveAction :: Text -> RemoveAction

-- | The unique identifier of the member to remove.
removeAction_memberId :: Lens' RemoveAction Text

-- | Properties of an individual vote that a member cast for a proposal.
--   
--   Applies only to Hyperledger Fabric.
--   
--   <i>See:</i> <a>newVoteSummary</a> smart constructor.
data VoteSummary
VoteSummary' :: Maybe Text -> Maybe Text -> Maybe VoteValue -> VoteSummary

-- | The name of the member that cast the vote.
[$sel:memberName:VoteSummary'] :: VoteSummary -> Maybe Text

-- | The unique identifier of the member that cast the vote.
[$sel:memberId:VoteSummary'] :: VoteSummary -> Maybe Text

-- | The vote value, either <tt>YES</tt> or <tt>NO</tt>.
[$sel:vote:VoteSummary'] :: VoteSummary -> Maybe VoteValue

-- | Create a value of <a>VoteSummary</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:memberName:VoteSummary'</a>, <a>voteSummary_memberName</a> -
--   The name of the member that cast the vote.
--   
--   <a>$sel:memberId:VoteSummary'</a>, <a>voteSummary_memberId</a> - The
--   unique identifier of the member that cast the vote.
--   
--   <a>$sel:vote:VoteSummary'</a>, <a>voteSummary_vote</a> - The vote
--   value, either <tt>YES</tt> or <tt>NO</tt>.
newVoteSummary :: VoteSummary

-- | The name of the member that cast the vote.
voteSummary_memberName :: Lens' VoteSummary (Maybe Text)

-- | The unique identifier of the member that cast the vote.
voteSummary_memberId :: Lens' VoteSummary (Maybe Text)

-- | The vote value, either <tt>YES</tt> or <tt>NO</tt>.
voteSummary_vote :: Lens' VoteSummary (Maybe VoteValue)

-- | The voting rules for the network to decide if a proposal is accepted
--   
--   Applies only to Hyperledger Fabric.
--   
--   <i>See:</i> <a>newVotingPolicy</a> smart constructor.
data VotingPolicy
VotingPolicy' :: Maybe ApprovalThresholdPolicy -> VotingPolicy

-- | Defines the rules for the network for voting on proposals, such as the
--   percentage of <tt>YES</tt> votes required for the proposal to be
--   approved and the duration of the proposal. The policy applies to all
--   proposals and is specified when the network is created.
[$sel:approvalThresholdPolicy:VotingPolicy'] :: VotingPolicy -> Maybe ApprovalThresholdPolicy

-- | Create a value of <a>VotingPolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:approvalThresholdPolicy:VotingPolicy'</a>,
--   <a>votingPolicy_approvalThresholdPolicy</a> - Defines the rules for
--   the network for voting on proposals, such as the percentage of
--   <tt>YES</tt> votes required for the proposal to be approved and the
--   duration of the proposal. The policy applies to all proposals and is
--   specified when the network is created.
newVotingPolicy :: VotingPolicy

-- | Defines the rules for the network for voting on proposals, such as the
--   percentage of <tt>YES</tt> votes required for the proposal to be
--   approved and the duration of the proposal. The policy applies to all
--   proposals and is specified when the network is created.
votingPolicy_approvalThresholdPolicy :: Lens' VotingPolicy (Maybe ApprovalThresholdPolicy)


-- | Adds or overwrites the specified tags for the specified Amazon Managed
--   Blockchain resource. Each tag consists of a key and optional value.
--   
--   When you specify a tag key that already exists, the tag value is
--   overwritten with the new value. Use <tt>UntagResource</tt> to remove
--   tag keys.
--   
--   A resource can have up to 50 tags. If you try to create more than 50
--   tags for a resource, your request fails and returns an error.
--   
--   For more information about tags, see <a>Tagging Resources</a> in the
--   <i>Amazon Managed Blockchain Ethereum Developer Guide</i>, or
--   <a>Tagging Resources</a> in the <i>Amazon Managed Blockchain
--   Hyperledger Fabric Developer Guide</i>.
module Network.AWS.ManagedBlockChain.TagResource

-- | <i>See:</i> <a>newTagResource</a> smart constructor.
data TagResource
TagResource' :: Text -> HashMap Text Text -> TagResource

-- | The Amazon Resource Name (ARN) of the resource. For more information
--   about ARNs and their format, see <a>Amazon Resource Names (ARNs)</a>
--   in the <i>AWS General Reference</i>.
[$sel:resourceArn:TagResource'] :: TagResource -> Text

-- | The tags to assign to the specified resource. Tag values can be empty,
--   for example, <tt>"MyTagKey" : ""</tt>. You can specify multiple
--   key-value pairs in a single request, with an overall maximum of 50
--   tags added to each resource.
[$sel:tags:TagResource'] :: TagResource -> HashMap Text Text

-- | Create a value of <a>TagResource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:TagResource'</a>, <a>tagResource_resourceArn</a> -
--   The Amazon Resource Name (ARN) of the resource. For more information
--   about ARNs and their format, see <a>Amazon Resource Names (ARNs)</a>
--   in the <i>AWS General Reference</i>.
--   
--   <a>$sel:tags:TagResource'</a>, <a>tagResource_tags</a> - The tags to
--   assign to the specified resource. Tag values can be empty, for
--   example, <tt>"MyTagKey" : ""</tt>. You can specify multiple key-value
--   pairs in a single request, with an overall maximum of 50 tags added to
--   each resource.
newTagResource :: Text -> TagResource

-- | The Amazon Resource Name (ARN) of the resource. For more information
--   about ARNs and their format, see <a>Amazon Resource Names (ARNs)</a>
--   in the <i>AWS General Reference</i>.
tagResource_resourceArn :: Lens' TagResource Text

-- | The tags to assign to the specified resource. Tag values can be empty,
--   for example, <tt>"MyTagKey" : ""</tt>. You can specify multiple
--   key-value pairs in a single request, with an overall maximum of 50
--   tags added to each resource.
tagResource_tags :: Lens' TagResource (HashMap Text Text)

-- | <i>See:</i> <a>newTagResourceResponse</a> smart constructor.
data TagResourceResponse
TagResourceResponse' :: Int -> TagResourceResponse

-- | The response's http status code.
[$sel:httpStatus:TagResourceResponse'] :: TagResourceResponse -> Int

-- | Create a value of <a>TagResourceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:TagResourceResponse'</a>,
--   <a>tagResourceResponse_httpStatus</a> - The response's http status
--   code.
newTagResourceResponse :: Int -> TagResourceResponse

-- | The response's http status code.
tagResourceResponse_httpStatus :: Lens' TagResourceResponse Int
instance GHC.Generics.Generic Network.AWS.ManagedBlockChain.TagResource.TagResource
instance GHC.Show.Show Network.AWS.ManagedBlockChain.TagResource.TagResource
instance GHC.Read.Read Network.AWS.ManagedBlockChain.TagResource.TagResource
instance GHC.Classes.Eq Network.AWS.ManagedBlockChain.TagResource.TagResource
instance GHC.Generics.Generic Network.AWS.ManagedBlockChain.TagResource.TagResourceResponse
instance GHC.Show.Show Network.AWS.ManagedBlockChain.TagResource.TagResourceResponse
instance GHC.Read.Read Network.AWS.ManagedBlockChain.TagResource.TagResourceResponse
instance GHC.Classes.Eq Network.AWS.ManagedBlockChain.TagResource.TagResourceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ManagedBlockChain.TagResource.TagResource
instance Control.DeepSeq.NFData Network.AWS.ManagedBlockChain.TagResource.TagResourceResponse
instance Data.Hashable.Class.Hashable Network.AWS.ManagedBlockChain.TagResource.TagResource
instance Control.DeepSeq.NFData Network.AWS.ManagedBlockChain.TagResource.TagResource
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ManagedBlockChain.TagResource.TagResource
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ManagedBlockChain.TagResource.TagResource
instance Network.AWS.Data.Path.ToPath Network.AWS.ManagedBlockChain.TagResource.TagResource
instance Network.AWS.Data.Query.ToQuery Network.AWS.ManagedBlockChain.TagResource.TagResource


-- | Rejects an invitation to join a network. This action can be called by
--   a principal in an AWS account that has received an invitation to
--   create a member and join a network.
--   
--   Applies only to Hyperledger Fabric.
module Network.AWS.ManagedBlockChain.RejectInvitation

-- | <i>See:</i> <a>newRejectInvitation</a> smart constructor.
data RejectInvitation
RejectInvitation' :: Text -> RejectInvitation

-- | The unique identifier of the invitation to reject.
[$sel:invitationId:RejectInvitation'] :: RejectInvitation -> Text

-- | Create a value of <a>RejectInvitation</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:invitationId:RejectInvitation'</a>,
--   <a>rejectInvitation_invitationId</a> - The unique identifier of the
--   invitation to reject.
newRejectInvitation :: Text -> RejectInvitation

-- | The unique identifier of the invitation to reject.
rejectInvitation_invitationId :: Lens' RejectInvitation Text

-- | <i>See:</i> <a>newRejectInvitationResponse</a> smart constructor.
data RejectInvitationResponse
RejectInvitationResponse' :: Int -> RejectInvitationResponse

-- | The response's http status code.
[$sel:httpStatus:RejectInvitationResponse'] :: RejectInvitationResponse -> Int

-- | Create a value of <a>RejectInvitationResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:RejectInvitationResponse'</a>,
--   <a>rejectInvitationResponse_httpStatus</a> - The response's http
--   status code.
newRejectInvitationResponse :: Int -> RejectInvitationResponse

-- | The response's http status code.
rejectInvitationResponse_httpStatus :: Lens' RejectInvitationResponse Int
instance GHC.Generics.Generic Network.AWS.ManagedBlockChain.RejectInvitation.RejectInvitation
instance GHC.Show.Show Network.AWS.ManagedBlockChain.RejectInvitation.RejectInvitation
instance GHC.Read.Read Network.AWS.ManagedBlockChain.RejectInvitation.RejectInvitation
instance GHC.Classes.Eq Network.AWS.ManagedBlockChain.RejectInvitation.RejectInvitation
instance GHC.Generics.Generic Network.AWS.ManagedBlockChain.RejectInvitation.RejectInvitationResponse
instance GHC.Show.Show Network.AWS.ManagedBlockChain.RejectInvitation.RejectInvitationResponse
instance GHC.Read.Read Network.AWS.ManagedBlockChain.RejectInvitation.RejectInvitationResponse
instance GHC.Classes.Eq Network.AWS.ManagedBlockChain.RejectInvitation.RejectInvitationResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ManagedBlockChain.RejectInvitation.RejectInvitation
instance Control.DeepSeq.NFData Network.AWS.ManagedBlockChain.RejectInvitation.RejectInvitationResponse
instance Data.Hashable.Class.Hashable Network.AWS.ManagedBlockChain.RejectInvitation.RejectInvitation
instance Control.DeepSeq.NFData Network.AWS.ManagedBlockChain.RejectInvitation.RejectInvitation
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ManagedBlockChain.RejectInvitation.RejectInvitation
instance Network.AWS.Data.Path.ToPath Network.AWS.ManagedBlockChain.RejectInvitation.RejectInvitation
instance Network.AWS.Data.Query.ToQuery Network.AWS.ManagedBlockChain.RejectInvitation.RejectInvitation


-- | Returns a list of tags for the specified resource. Each tag consists
--   of a key and optional value.
--   
--   For more information about tags, see <a>Tagging Resources</a> in the
--   <i>Amazon Managed Blockchain Ethereum Developer Guide</i>, or
--   <a>Tagging Resources</a> in the <i>Amazon Managed Blockchain
--   Hyperledger Fabric Developer Guide</i>.
module Network.AWS.ManagedBlockChain.ListTagsForResource

-- | <i>See:</i> <a>newListTagsForResource</a> smart constructor.
data ListTagsForResource
ListTagsForResource' :: Text -> ListTagsForResource

-- | The Amazon Resource Name (ARN) of the resource. For more information
--   about ARNs and their format, see <a>Amazon Resource Names (ARNs)</a>
--   in the <i>AWS General Reference</i>.
[$sel:resourceArn:ListTagsForResource'] :: ListTagsForResource -> Text

-- | Create a value of <a>ListTagsForResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:ListTagsForResource'</a>,
--   <a>listTagsForResource_resourceArn</a> - The Amazon Resource Name
--   (ARN) of the resource. For more information about ARNs and their
--   format, see <a>Amazon Resource Names (ARNs)</a> in the <i>AWS General
--   Reference</i>.
newListTagsForResource :: Text -> ListTagsForResource

-- | The Amazon Resource Name (ARN) of the resource. For more information
--   about ARNs and their format, see <a>Amazon Resource Names (ARNs)</a>
--   in the <i>AWS General Reference</i>.
listTagsForResource_resourceArn :: Lens' ListTagsForResource Text

-- | <i>See:</i> <a>newListTagsForResourceResponse</a> smart constructor.
data ListTagsForResourceResponse
ListTagsForResourceResponse' :: Maybe (HashMap Text Text) -> Int -> ListTagsForResourceResponse

-- | The tags assigned to the resource.
[$sel:tags:ListTagsForResourceResponse'] :: ListTagsForResourceResponse -> Maybe (HashMap Text Text)

-- | The response's http status code.
[$sel:httpStatus:ListTagsForResourceResponse'] :: ListTagsForResourceResponse -> Int

-- | Create a value of <a>ListTagsForResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_tags</a> - The tags assigned to the
--   resource.
--   
--   <a>$sel:httpStatus:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_httpStatus</a> - The response's http
--   status code.
newListTagsForResourceResponse :: Int -> ListTagsForResourceResponse

-- | The tags assigned to the resource.
listTagsForResourceResponse_tags :: Lens' ListTagsForResourceResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
listTagsForResourceResponse_httpStatus :: Lens' ListTagsForResourceResponse Int
instance GHC.Generics.Generic Network.AWS.ManagedBlockChain.ListTagsForResource.ListTagsForResource
instance GHC.Show.Show Network.AWS.ManagedBlockChain.ListTagsForResource.ListTagsForResource
instance GHC.Read.Read Network.AWS.ManagedBlockChain.ListTagsForResource.ListTagsForResource
instance GHC.Classes.Eq Network.AWS.ManagedBlockChain.ListTagsForResource.ListTagsForResource
instance GHC.Generics.Generic Network.AWS.ManagedBlockChain.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Show.Show Network.AWS.ManagedBlockChain.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Read.Read Network.AWS.ManagedBlockChain.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Classes.Eq Network.AWS.ManagedBlockChain.ListTagsForResource.ListTagsForResourceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ManagedBlockChain.ListTagsForResource.ListTagsForResource
instance Control.DeepSeq.NFData Network.AWS.ManagedBlockChain.ListTagsForResource.ListTagsForResourceResponse
instance Data.Hashable.Class.Hashable Network.AWS.ManagedBlockChain.ListTagsForResource.ListTagsForResource
instance Control.DeepSeq.NFData Network.AWS.ManagedBlockChain.ListTagsForResource.ListTagsForResource
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ManagedBlockChain.ListTagsForResource.ListTagsForResource
instance Network.AWS.Data.Path.ToPath Network.AWS.ManagedBlockChain.ListTagsForResource.ListTagsForResource
instance Network.AWS.Data.Query.ToQuery Network.AWS.ManagedBlockChain.ListTagsForResource.ListTagsForResource


-- | Returns a list of proposals for the network.
--   
--   Applies only to Hyperledger Fabric.
module Network.AWS.ManagedBlockChain.ListProposals

-- | <i>See:</i> <a>newListProposals</a> smart constructor.
data ListProposals
ListProposals' :: Maybe Text -> Maybe Natural -> Text -> ListProposals

-- | The pagination token that indicates the next set of results to
--   retrieve.
[$sel:nextToken:ListProposals'] :: ListProposals -> Maybe Text

-- | The maximum number of proposals to return.
[$sel:maxResults:ListProposals'] :: ListProposals -> Maybe Natural

-- | The unique identifier of the network.
[$sel:networkId:ListProposals'] :: ListProposals -> Text

-- | Create a value of <a>ListProposals</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListProposals'</a>, <a>listProposals_nextToken</a> -
--   The pagination token that indicates the next set of results to
--   retrieve.
--   
--   <a>$sel:maxResults:ListProposals'</a>, <a>listProposals_maxResults</a>
--   - The maximum number of proposals to return.
--   
--   <a>$sel:networkId:ListProposals'</a>, <a>listProposals_networkId</a> -
--   The unique identifier of the network.
newListProposals :: Text -> ListProposals

-- | The pagination token that indicates the next set of results to
--   retrieve.
listProposals_nextToken :: Lens' ListProposals (Maybe Text)

-- | The maximum number of proposals to return.
listProposals_maxResults :: Lens' ListProposals (Maybe Natural)

-- | The unique identifier of the network.
listProposals_networkId :: Lens' ListProposals Text

-- | <i>See:</i> <a>newListProposalsResponse</a> smart constructor.
data ListProposalsResponse
ListProposalsResponse' :: Maybe [ProposalSummary] -> Maybe Text -> Int -> ListProposalsResponse

-- | The summary of each proposal made on the network.
[$sel:proposals:ListProposalsResponse'] :: ListProposalsResponse -> Maybe [ProposalSummary]

-- | The pagination token that indicates the next set of results to
--   retrieve.
[$sel:nextToken:ListProposalsResponse'] :: ListProposalsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListProposalsResponse'] :: ListProposalsResponse -> Int

-- | Create a value of <a>ListProposalsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:proposals:ListProposalsResponse'</a>,
--   <a>listProposalsResponse_proposals</a> - The summary of each proposal
--   made on the network.
--   
--   <a>$sel:nextToken:ListProposals'</a>,
--   <a>listProposalsResponse_nextToken</a> - The pagination token that
--   indicates the next set of results to retrieve.
--   
--   <a>$sel:httpStatus:ListProposalsResponse'</a>,
--   <a>listProposalsResponse_httpStatus</a> - The response's http status
--   code.
newListProposalsResponse :: Int -> ListProposalsResponse

-- | The summary of each proposal made on the network.
listProposalsResponse_proposals :: Lens' ListProposalsResponse (Maybe [ProposalSummary])

-- | The pagination token that indicates the next set of results to
--   retrieve.
listProposalsResponse_nextToken :: Lens' ListProposalsResponse (Maybe Text)

-- | The response's http status code.
listProposalsResponse_httpStatus :: Lens' ListProposalsResponse Int
instance GHC.Generics.Generic Network.AWS.ManagedBlockChain.ListProposals.ListProposals
instance GHC.Show.Show Network.AWS.ManagedBlockChain.ListProposals.ListProposals
instance GHC.Read.Read Network.AWS.ManagedBlockChain.ListProposals.ListProposals
instance GHC.Classes.Eq Network.AWS.ManagedBlockChain.ListProposals.ListProposals
instance GHC.Generics.Generic Network.AWS.ManagedBlockChain.ListProposals.ListProposalsResponse
instance GHC.Show.Show Network.AWS.ManagedBlockChain.ListProposals.ListProposalsResponse
instance GHC.Read.Read Network.AWS.ManagedBlockChain.ListProposals.ListProposalsResponse
instance GHC.Classes.Eq Network.AWS.ManagedBlockChain.ListProposals.ListProposalsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ManagedBlockChain.ListProposals.ListProposals
instance Control.DeepSeq.NFData Network.AWS.ManagedBlockChain.ListProposals.ListProposalsResponse
instance Data.Hashable.Class.Hashable Network.AWS.ManagedBlockChain.ListProposals.ListProposals
instance Control.DeepSeq.NFData Network.AWS.ManagedBlockChain.ListProposals.ListProposals
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ManagedBlockChain.ListProposals.ListProposals
instance Network.AWS.Data.Path.ToPath Network.AWS.ManagedBlockChain.ListProposals.ListProposals
instance Network.AWS.Data.Query.ToQuery Network.AWS.ManagedBlockChain.ListProposals.ListProposals


-- | Returns the list of votes for a specified proposal, including the
--   value of each vote and the unique identifier of the member that cast
--   the vote.
--   
--   Applies only to Hyperledger Fabric.
module Network.AWS.ManagedBlockChain.ListProposalVotes

-- | <i>See:</i> <a>newListProposalVotes</a> smart constructor.
data ListProposalVotes
ListProposalVotes' :: Maybe Text -> Maybe Natural -> Text -> Text -> ListProposalVotes

-- | The pagination token that indicates the next set of results to
--   retrieve.
[$sel:nextToken:ListProposalVotes'] :: ListProposalVotes -> Maybe Text

-- | The maximum number of votes to return.
[$sel:maxResults:ListProposalVotes'] :: ListProposalVotes -> Maybe Natural

-- | The unique identifier of the network.
[$sel:networkId:ListProposalVotes'] :: ListProposalVotes -> Text

-- | The unique identifier of the proposal.
[$sel:proposalId:ListProposalVotes'] :: ListProposalVotes -> Text

-- | Create a value of <a>ListProposalVotes</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListProposalVotes'</a>,
--   <a>listProposalVotes_nextToken</a> - The pagination token that
--   indicates the next set of results to retrieve.
--   
--   <a>$sel:maxResults:ListProposalVotes'</a>,
--   <a>listProposalVotes_maxResults</a> - The maximum number of votes to
--   return.
--   
--   <a>$sel:networkId:ListProposalVotes'</a>,
--   <a>listProposalVotes_networkId</a> - The unique identifier of the
--   network.
--   
--   <a>$sel:proposalId:ListProposalVotes'</a>,
--   <a>listProposalVotes_proposalId</a> - The unique identifier of the
--   proposal.
newListProposalVotes :: Text -> Text -> ListProposalVotes

-- | The pagination token that indicates the next set of results to
--   retrieve.
listProposalVotes_nextToken :: Lens' ListProposalVotes (Maybe Text)

-- | The maximum number of votes to return.
listProposalVotes_maxResults :: Lens' ListProposalVotes (Maybe Natural)

-- | The unique identifier of the network.
listProposalVotes_networkId :: Lens' ListProposalVotes Text

-- | The unique identifier of the proposal.
listProposalVotes_proposalId :: Lens' ListProposalVotes Text

-- | <i>See:</i> <a>newListProposalVotesResponse</a> smart constructor.
data ListProposalVotesResponse
ListProposalVotesResponse' :: Maybe Text -> Maybe [VoteSummary] -> Int -> ListProposalVotesResponse

-- | The pagination token that indicates the next set of results to
--   retrieve.
[$sel:nextToken:ListProposalVotesResponse'] :: ListProposalVotesResponse -> Maybe Text

-- | The list of votes.
[$sel:proposalVotes:ListProposalVotesResponse'] :: ListProposalVotesResponse -> Maybe [VoteSummary]

-- | The response's http status code.
[$sel:httpStatus:ListProposalVotesResponse'] :: ListProposalVotesResponse -> Int

-- | Create a value of <a>ListProposalVotesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListProposalVotes'</a>,
--   <a>listProposalVotesResponse_nextToken</a> - The pagination token that
--   indicates the next set of results to retrieve.
--   
--   <a>$sel:proposalVotes:ListProposalVotesResponse'</a>,
--   <a>listProposalVotesResponse_proposalVotes</a> - The list of votes.
--   
--   <a>$sel:httpStatus:ListProposalVotesResponse'</a>,
--   <a>listProposalVotesResponse_httpStatus</a> - The response's http
--   status code.
newListProposalVotesResponse :: Int -> ListProposalVotesResponse

-- | The pagination token that indicates the next set of results to
--   retrieve.
listProposalVotesResponse_nextToken :: Lens' ListProposalVotesResponse (Maybe Text)

-- | The list of votes.
listProposalVotesResponse_proposalVotes :: Lens' ListProposalVotesResponse (Maybe [VoteSummary])

-- | The response's http status code.
listProposalVotesResponse_httpStatus :: Lens' ListProposalVotesResponse Int
instance GHC.Generics.Generic Network.AWS.ManagedBlockChain.ListProposalVotes.ListProposalVotes
instance GHC.Show.Show Network.AWS.ManagedBlockChain.ListProposalVotes.ListProposalVotes
instance GHC.Read.Read Network.AWS.ManagedBlockChain.ListProposalVotes.ListProposalVotes
instance GHC.Classes.Eq Network.AWS.ManagedBlockChain.ListProposalVotes.ListProposalVotes
instance GHC.Generics.Generic Network.AWS.ManagedBlockChain.ListProposalVotes.ListProposalVotesResponse
instance GHC.Show.Show Network.AWS.ManagedBlockChain.ListProposalVotes.ListProposalVotesResponse
instance GHC.Read.Read Network.AWS.ManagedBlockChain.ListProposalVotes.ListProposalVotesResponse
instance GHC.Classes.Eq Network.AWS.ManagedBlockChain.ListProposalVotes.ListProposalVotesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ManagedBlockChain.ListProposalVotes.ListProposalVotes
instance Control.DeepSeq.NFData Network.AWS.ManagedBlockChain.ListProposalVotes.ListProposalVotesResponse
instance Data.Hashable.Class.Hashable Network.AWS.ManagedBlockChain.ListProposalVotes.ListProposalVotes
instance Control.DeepSeq.NFData Network.AWS.ManagedBlockChain.ListProposalVotes.ListProposalVotes
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ManagedBlockChain.ListProposalVotes.ListProposalVotes
instance Network.AWS.Data.Path.ToPath Network.AWS.ManagedBlockChain.ListProposalVotes.ListProposalVotes
instance Network.AWS.Data.Query.ToQuery Network.AWS.ManagedBlockChain.ListProposalVotes.ListProposalVotes


-- | Returns information about the nodes within a network.
--   
--   Applies to Hyperledger Fabric and Ethereum.
module Network.AWS.ManagedBlockChain.ListNodes

-- | <i>See:</i> <a>newListNodes</a> smart constructor.
data ListNodes
ListNodes' :: Maybe NodeStatus -> Maybe Text -> Maybe Text -> Maybe Natural -> Text -> ListNodes

-- | An optional status specifier. If provided, only nodes currently in
--   this status are listed.
[$sel:status:ListNodes'] :: ListNodes -> Maybe NodeStatus

-- | The unique identifier of the member who owns the nodes to list.
--   
--   Applies only to Hyperledger Fabric and is required for Hyperledger
--   Fabric.
[$sel:memberId:ListNodes'] :: ListNodes -> Maybe Text

-- | The pagination token that indicates the next set of results to
--   retrieve.
[$sel:nextToken:ListNodes'] :: ListNodes -> Maybe Text

-- | The maximum number of nodes to list.
[$sel:maxResults:ListNodes'] :: ListNodes -> Maybe Natural

-- | The unique identifier of the network for which to list nodes.
[$sel:networkId:ListNodes'] :: ListNodes -> Text

-- | Create a value of <a>ListNodes</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:ListNodes'</a>, <a>listNodes_status</a> - An optional
--   status specifier. If provided, only nodes currently in this status are
--   listed.
--   
--   <a>$sel:memberId:ListNodes'</a>, <a>listNodes_memberId</a> - The
--   unique identifier of the member who owns the nodes to list.
--   
--   Applies only to Hyperledger Fabric and is required for Hyperledger
--   Fabric.
--   
--   <a>$sel:nextToken:ListNodes'</a>, <a>listNodes_nextToken</a> - The
--   pagination token that indicates the next set of results to retrieve.
--   
--   <a>$sel:maxResults:ListNodes'</a>, <a>listNodes_maxResults</a> - The
--   maximum number of nodes to list.
--   
--   <a>$sel:networkId:ListNodes'</a>, <a>listNodes_networkId</a> - The
--   unique identifier of the network for which to list nodes.
newListNodes :: Text -> ListNodes

-- | An optional status specifier. If provided, only nodes currently in
--   this status are listed.
listNodes_status :: Lens' ListNodes (Maybe NodeStatus)

-- | The unique identifier of the member who owns the nodes to list.
--   
--   Applies only to Hyperledger Fabric and is required for Hyperledger
--   Fabric.
listNodes_memberId :: Lens' ListNodes (Maybe Text)

-- | The pagination token that indicates the next set of results to
--   retrieve.
listNodes_nextToken :: Lens' ListNodes (Maybe Text)

-- | The maximum number of nodes to list.
listNodes_maxResults :: Lens' ListNodes (Maybe Natural)

-- | The unique identifier of the network for which to list nodes.
listNodes_networkId :: Lens' ListNodes Text

-- | <i>See:</i> <a>newListNodesResponse</a> smart constructor.
data ListNodesResponse
ListNodesResponse' :: Maybe Text -> Maybe [NodeSummary] -> Int -> ListNodesResponse

-- | The pagination token that indicates the next set of results to
--   retrieve.
[$sel:nextToken:ListNodesResponse'] :: ListNodesResponse -> Maybe Text

-- | An array of <tt>NodeSummary</tt> objects that contain configuration
--   properties for each node.
[$sel:nodes:ListNodesResponse'] :: ListNodesResponse -> Maybe [NodeSummary]

-- | The response's http status code.
[$sel:httpStatus:ListNodesResponse'] :: ListNodesResponse -> Int

-- | Create a value of <a>ListNodesResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListNodes'</a>, <a>listNodesResponse_nextToken</a> -
--   The pagination token that indicates the next set of results to
--   retrieve.
--   
--   <a>$sel:nodes:ListNodesResponse'</a>, <a>listNodesResponse_nodes</a> -
--   An array of <tt>NodeSummary</tt> objects that contain configuration
--   properties for each node.
--   
--   <a>$sel:httpStatus:ListNodesResponse'</a>,
--   <a>listNodesResponse_httpStatus</a> - The response's http status code.
newListNodesResponse :: Int -> ListNodesResponse

-- | The pagination token that indicates the next set of results to
--   retrieve.
listNodesResponse_nextToken :: Lens' ListNodesResponse (Maybe Text)

-- | An array of <tt>NodeSummary</tt> objects that contain configuration
--   properties for each node.
listNodesResponse_nodes :: Lens' ListNodesResponse (Maybe [NodeSummary])

-- | The response's http status code.
listNodesResponse_httpStatus :: Lens' ListNodesResponse Int
instance GHC.Generics.Generic Network.AWS.ManagedBlockChain.ListNodes.ListNodes
instance GHC.Show.Show Network.AWS.ManagedBlockChain.ListNodes.ListNodes
instance GHC.Read.Read Network.AWS.ManagedBlockChain.ListNodes.ListNodes
instance GHC.Classes.Eq Network.AWS.ManagedBlockChain.ListNodes.ListNodes
instance GHC.Generics.Generic Network.AWS.ManagedBlockChain.ListNodes.ListNodesResponse
instance GHC.Show.Show Network.AWS.ManagedBlockChain.ListNodes.ListNodesResponse
instance GHC.Read.Read Network.AWS.ManagedBlockChain.ListNodes.ListNodesResponse
instance GHC.Classes.Eq Network.AWS.ManagedBlockChain.ListNodes.ListNodesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ManagedBlockChain.ListNodes.ListNodes
instance Control.DeepSeq.NFData Network.AWS.ManagedBlockChain.ListNodes.ListNodesResponse
instance Data.Hashable.Class.Hashable Network.AWS.ManagedBlockChain.ListNodes.ListNodes
instance Control.DeepSeq.NFData Network.AWS.ManagedBlockChain.ListNodes.ListNodes
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ManagedBlockChain.ListNodes.ListNodes
instance Network.AWS.Data.Path.ToPath Network.AWS.ManagedBlockChain.ListNodes.ListNodes
instance Network.AWS.Data.Query.ToQuery Network.AWS.ManagedBlockChain.ListNodes.ListNodes


-- | Returns information about the networks in which the current AWS
--   account participates.
--   
--   Applies to Hyperledger Fabric and Ethereum.
module Network.AWS.ManagedBlockChain.ListNetworks

-- | <i>See:</i> <a>newListNetworks</a> smart constructor.
data ListNetworks
ListNetworks' :: Maybe NetworkStatus -> Maybe Framework -> Maybe Text -> Maybe Text -> Maybe Natural -> ListNetworks

-- | An optional status specifier. If provided, only networks currently in
--   this status are listed.
--   
--   Applies only to Hyperledger Fabric.
[$sel:status:ListNetworks'] :: ListNetworks -> Maybe NetworkStatus

-- | An optional framework specifier. If provided, only networks of this
--   framework type are listed.
[$sel:framework:ListNetworks'] :: ListNetworks -> Maybe Framework

-- | The pagination token that indicates the next set of results to
--   retrieve.
[$sel:nextToken:ListNetworks'] :: ListNetworks -> Maybe Text

-- | The name of the network.
[$sel:name:ListNetworks'] :: ListNetworks -> Maybe Text

-- | The maximum number of networks to list.
[$sel:maxResults:ListNetworks'] :: ListNetworks -> Maybe Natural

-- | Create a value of <a>ListNetworks</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:ListNetworks'</a>, <a>listNetworks_status</a> - An
--   optional status specifier. If provided, only networks currently in
--   this status are listed.
--   
--   Applies only to Hyperledger Fabric.
--   
--   <a>$sel:framework:ListNetworks'</a>, <a>listNetworks_framework</a> -
--   An optional framework specifier. If provided, only networks of this
--   framework type are listed.
--   
--   <a>$sel:nextToken:ListNetworks'</a>, <a>listNetworks_nextToken</a> -
--   The pagination token that indicates the next set of results to
--   retrieve.
--   
--   <a>$sel:name:ListNetworks'</a>, <a>listNetworks_name</a> - The name of
--   the network.
--   
--   <a>$sel:maxResults:ListNetworks'</a>, <a>listNetworks_maxResults</a> -
--   The maximum number of networks to list.
newListNetworks :: ListNetworks

-- | An optional status specifier. If provided, only networks currently in
--   this status are listed.
--   
--   Applies only to Hyperledger Fabric.
listNetworks_status :: Lens' ListNetworks (Maybe NetworkStatus)

-- | An optional framework specifier. If provided, only networks of this
--   framework type are listed.
listNetworks_framework :: Lens' ListNetworks (Maybe Framework)

-- | The pagination token that indicates the next set of results to
--   retrieve.
listNetworks_nextToken :: Lens' ListNetworks (Maybe Text)

-- | The name of the network.
listNetworks_name :: Lens' ListNetworks (Maybe Text)

-- | The maximum number of networks to list.
listNetworks_maxResults :: Lens' ListNetworks (Maybe Natural)

-- | <i>See:</i> <a>newListNetworksResponse</a> smart constructor.
data ListNetworksResponse
ListNetworksResponse' :: Maybe [NetworkSummary] -> Maybe Text -> Int -> ListNetworksResponse

-- | An array of <tt>NetworkSummary</tt> objects that contain configuration
--   properties for each network.
[$sel:networks:ListNetworksResponse'] :: ListNetworksResponse -> Maybe [NetworkSummary]

-- | The pagination token that indicates the next set of results to
--   retrieve.
[$sel:nextToken:ListNetworksResponse'] :: ListNetworksResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListNetworksResponse'] :: ListNetworksResponse -> Int

-- | Create a value of <a>ListNetworksResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:networks:ListNetworksResponse'</a>,
--   <a>listNetworksResponse_networks</a> - An array of
--   <tt>NetworkSummary</tt> objects that contain configuration properties
--   for each network.
--   
--   <a>$sel:nextToken:ListNetworks'</a>,
--   <a>listNetworksResponse_nextToken</a> - The pagination token that
--   indicates the next set of results to retrieve.
--   
--   <a>$sel:httpStatus:ListNetworksResponse'</a>,
--   <a>listNetworksResponse_httpStatus</a> - The response's http status
--   code.
newListNetworksResponse :: Int -> ListNetworksResponse

-- | An array of <tt>NetworkSummary</tt> objects that contain configuration
--   properties for each network.
listNetworksResponse_networks :: Lens' ListNetworksResponse (Maybe [NetworkSummary])

-- | The pagination token that indicates the next set of results to
--   retrieve.
listNetworksResponse_nextToken :: Lens' ListNetworksResponse (Maybe Text)

-- | The response's http status code.
listNetworksResponse_httpStatus :: Lens' ListNetworksResponse Int
instance GHC.Generics.Generic Network.AWS.ManagedBlockChain.ListNetworks.ListNetworks
instance GHC.Show.Show Network.AWS.ManagedBlockChain.ListNetworks.ListNetworks
instance GHC.Read.Read Network.AWS.ManagedBlockChain.ListNetworks.ListNetworks
instance GHC.Classes.Eq Network.AWS.ManagedBlockChain.ListNetworks.ListNetworks
instance GHC.Generics.Generic Network.AWS.ManagedBlockChain.ListNetworks.ListNetworksResponse
instance GHC.Show.Show Network.AWS.ManagedBlockChain.ListNetworks.ListNetworksResponse
instance GHC.Read.Read Network.AWS.ManagedBlockChain.ListNetworks.ListNetworksResponse
instance GHC.Classes.Eq Network.AWS.ManagedBlockChain.ListNetworks.ListNetworksResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ManagedBlockChain.ListNetworks.ListNetworks
instance Control.DeepSeq.NFData Network.AWS.ManagedBlockChain.ListNetworks.ListNetworksResponse
instance Data.Hashable.Class.Hashable Network.AWS.ManagedBlockChain.ListNetworks.ListNetworks
instance Control.DeepSeq.NFData Network.AWS.ManagedBlockChain.ListNetworks.ListNetworks
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ManagedBlockChain.ListNetworks.ListNetworks
instance Network.AWS.Data.Path.ToPath Network.AWS.ManagedBlockChain.ListNetworks.ListNetworks
instance Network.AWS.Data.Query.ToQuery Network.AWS.ManagedBlockChain.ListNetworks.ListNetworks


-- | Returns a list of the members in a network and properties of their
--   configurations.
--   
--   Applies only to Hyperledger Fabric.
module Network.AWS.ManagedBlockChain.ListMembers

-- | <i>See:</i> <a>newListMembers</a> smart constructor.
data ListMembers
ListMembers' :: Maybe MemberStatus -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe Natural -> Text -> ListMembers

-- | An optional status specifier. If provided, only members currently in
--   this status are listed.
[$sel:status:ListMembers'] :: ListMembers -> Maybe MemberStatus

-- | The pagination token that indicates the next set of results to
--   retrieve.
[$sel:nextToken:ListMembers'] :: ListMembers -> Maybe Text

-- | The optional name of the member to list.
[$sel:name:ListMembers'] :: ListMembers -> Maybe Text

-- | An optional Boolean value. If provided, the request is limited either
--   to members that the current AWS account owns (<tt>true</tt>) or that
--   other AWS accounts own (<tt>false</tt>). If omitted, all members are
--   listed.
[$sel:isOwned:ListMembers'] :: ListMembers -> Maybe Bool

-- | The maximum number of members to return in the request.
[$sel:maxResults:ListMembers'] :: ListMembers -> Maybe Natural

-- | The unique identifier of the network for which to list members.
[$sel:networkId:ListMembers'] :: ListMembers -> Text

-- | Create a value of <a>ListMembers</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:ListMembers'</a>, <a>listMembers_status</a> - An
--   optional status specifier. If provided, only members currently in this
--   status are listed.
--   
--   <a>$sel:nextToken:ListMembers'</a>, <a>listMembers_nextToken</a> - The
--   pagination token that indicates the next set of results to retrieve.
--   
--   <a>$sel:name:ListMembers'</a>, <a>listMembers_name</a> - The optional
--   name of the member to list.
--   
--   <a>$sel:isOwned:ListMembers'</a>, <a>listMembers_isOwned</a> - An
--   optional Boolean value. If provided, the request is limited either to
--   members that the current AWS account owns (<tt>true</tt>) or that
--   other AWS accounts own (<tt>false</tt>). If omitted, all members are
--   listed.
--   
--   <a>$sel:maxResults:ListMembers'</a>, <a>listMembers_maxResults</a> -
--   The maximum number of members to return in the request.
--   
--   <a>$sel:networkId:ListMembers'</a>, <a>listMembers_networkId</a> - The
--   unique identifier of the network for which to list members.
newListMembers :: Text -> ListMembers

-- | An optional status specifier. If provided, only members currently in
--   this status are listed.
listMembers_status :: Lens' ListMembers (Maybe MemberStatus)

-- | The pagination token that indicates the next set of results to
--   retrieve.
listMembers_nextToken :: Lens' ListMembers (Maybe Text)

-- | The optional name of the member to list.
listMembers_name :: Lens' ListMembers (Maybe Text)

-- | An optional Boolean value. If provided, the request is limited either
--   to members that the current AWS account owns (<tt>true</tt>) or that
--   other AWS accounts own (<tt>false</tt>). If omitted, all members are
--   listed.
listMembers_isOwned :: Lens' ListMembers (Maybe Bool)

-- | The maximum number of members to return in the request.
listMembers_maxResults :: Lens' ListMembers (Maybe Natural)

-- | The unique identifier of the network for which to list members.
listMembers_networkId :: Lens' ListMembers Text

-- | <i>See:</i> <a>newListMembersResponse</a> smart constructor.
data ListMembersResponse
ListMembersResponse' :: Maybe [MemberSummary] -> Maybe Text -> Int -> ListMembersResponse

-- | An array of <tt>MemberSummary</tt> objects. Each object contains
--   details about a network member.
[$sel:members:ListMembersResponse'] :: ListMembersResponse -> Maybe [MemberSummary]

-- | The pagination token that indicates the next set of results to
--   retrieve.
[$sel:nextToken:ListMembersResponse'] :: ListMembersResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListMembersResponse'] :: ListMembersResponse -> Int

-- | Create a value of <a>ListMembersResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:members:ListMembersResponse'</a>,
--   <a>listMembersResponse_members</a> - An array of
--   <tt>MemberSummary</tt> objects. Each object contains details about a
--   network member.
--   
--   <a>$sel:nextToken:ListMembers'</a>,
--   <a>listMembersResponse_nextToken</a> - The pagination token that
--   indicates the next set of results to retrieve.
--   
--   <a>$sel:httpStatus:ListMembersResponse'</a>,
--   <a>listMembersResponse_httpStatus</a> - The response's http status
--   code.
newListMembersResponse :: Int -> ListMembersResponse

-- | An array of <tt>MemberSummary</tt> objects. Each object contains
--   details about a network member.
listMembersResponse_members :: Lens' ListMembersResponse (Maybe [MemberSummary])

-- | The pagination token that indicates the next set of results to
--   retrieve.
listMembersResponse_nextToken :: Lens' ListMembersResponse (Maybe Text)

-- | The response's http status code.
listMembersResponse_httpStatus :: Lens' ListMembersResponse Int
instance GHC.Generics.Generic Network.AWS.ManagedBlockChain.ListMembers.ListMembers
instance GHC.Show.Show Network.AWS.ManagedBlockChain.ListMembers.ListMembers
instance GHC.Read.Read Network.AWS.ManagedBlockChain.ListMembers.ListMembers
instance GHC.Classes.Eq Network.AWS.ManagedBlockChain.ListMembers.ListMembers
instance GHC.Generics.Generic Network.AWS.ManagedBlockChain.ListMembers.ListMembersResponse
instance GHC.Show.Show Network.AWS.ManagedBlockChain.ListMembers.ListMembersResponse
instance GHC.Read.Read Network.AWS.ManagedBlockChain.ListMembers.ListMembersResponse
instance GHC.Classes.Eq Network.AWS.ManagedBlockChain.ListMembers.ListMembersResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ManagedBlockChain.ListMembers.ListMembers
instance Control.DeepSeq.NFData Network.AWS.ManagedBlockChain.ListMembers.ListMembersResponse
instance Data.Hashable.Class.Hashable Network.AWS.ManagedBlockChain.ListMembers.ListMembers
instance Control.DeepSeq.NFData Network.AWS.ManagedBlockChain.ListMembers.ListMembers
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ManagedBlockChain.ListMembers.ListMembers
instance Network.AWS.Data.Path.ToPath Network.AWS.ManagedBlockChain.ListMembers.ListMembers
instance Network.AWS.Data.Query.ToQuery Network.AWS.ManagedBlockChain.ListMembers.ListMembers


-- | Returns a list of all invitations for the current AWS account.
--   
--   Applies only to Hyperledger Fabric.
module Network.AWS.ManagedBlockChain.ListInvitations

-- | <i>See:</i> <a>newListInvitations</a> smart constructor.
data ListInvitations
ListInvitations' :: Maybe Text -> Maybe Natural -> ListInvitations

-- | The pagination token that indicates the next set of results to
--   retrieve.
[$sel:nextToken:ListInvitations'] :: ListInvitations -> Maybe Text

-- | The maximum number of invitations to return.
[$sel:maxResults:ListInvitations'] :: ListInvitations -> Maybe Natural

-- | Create a value of <a>ListInvitations</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListInvitations'</a>,
--   <a>listInvitations_nextToken</a> - The pagination token that indicates
--   the next set of results to retrieve.
--   
--   <a>$sel:maxResults:ListInvitations'</a>,
--   <a>listInvitations_maxResults</a> - The maximum number of invitations
--   to return.
newListInvitations :: ListInvitations

-- | The pagination token that indicates the next set of results to
--   retrieve.
listInvitations_nextToken :: Lens' ListInvitations (Maybe Text)

-- | The maximum number of invitations to return.
listInvitations_maxResults :: Lens' ListInvitations (Maybe Natural)

-- | <i>See:</i> <a>newListInvitationsResponse</a> smart constructor.
data ListInvitationsResponse
ListInvitationsResponse' :: Maybe [Invitation] -> Maybe Text -> Int -> ListInvitationsResponse

-- | The invitations for the network.
[$sel:invitations:ListInvitationsResponse'] :: ListInvitationsResponse -> Maybe [Invitation]

-- | The pagination token that indicates the next set of results to
--   retrieve.
[$sel:nextToken:ListInvitationsResponse'] :: ListInvitationsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListInvitationsResponse'] :: ListInvitationsResponse -> Int

-- | Create a value of <a>ListInvitationsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:invitations:ListInvitationsResponse'</a>,
--   <a>listInvitationsResponse_invitations</a> - The invitations for the
--   network.
--   
--   <a>$sel:nextToken:ListInvitations'</a>,
--   <a>listInvitationsResponse_nextToken</a> - The pagination token that
--   indicates the next set of results to retrieve.
--   
--   <a>$sel:httpStatus:ListInvitationsResponse'</a>,
--   <a>listInvitationsResponse_httpStatus</a> - The response's http status
--   code.
newListInvitationsResponse :: Int -> ListInvitationsResponse

-- | The invitations for the network.
listInvitationsResponse_invitations :: Lens' ListInvitationsResponse (Maybe [Invitation])

-- | The pagination token that indicates the next set of results to
--   retrieve.
listInvitationsResponse_nextToken :: Lens' ListInvitationsResponse (Maybe Text)

-- | The response's http status code.
listInvitationsResponse_httpStatus :: Lens' ListInvitationsResponse Int
instance GHC.Generics.Generic Network.AWS.ManagedBlockChain.ListInvitations.ListInvitations
instance GHC.Show.Show Network.AWS.ManagedBlockChain.ListInvitations.ListInvitations
instance GHC.Read.Read Network.AWS.ManagedBlockChain.ListInvitations.ListInvitations
instance GHC.Classes.Eq Network.AWS.ManagedBlockChain.ListInvitations.ListInvitations
instance GHC.Generics.Generic Network.AWS.ManagedBlockChain.ListInvitations.ListInvitationsResponse
instance GHC.Show.Show Network.AWS.ManagedBlockChain.ListInvitations.ListInvitationsResponse
instance GHC.Read.Read Network.AWS.ManagedBlockChain.ListInvitations.ListInvitationsResponse
instance GHC.Classes.Eq Network.AWS.ManagedBlockChain.ListInvitations.ListInvitationsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ManagedBlockChain.ListInvitations.ListInvitations
instance Control.DeepSeq.NFData Network.AWS.ManagedBlockChain.ListInvitations.ListInvitationsResponse
instance Data.Hashable.Class.Hashable Network.AWS.ManagedBlockChain.ListInvitations.ListInvitations
instance Control.DeepSeq.NFData Network.AWS.ManagedBlockChain.ListInvitations.ListInvitations
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ManagedBlockChain.ListInvitations.ListInvitations
instance Network.AWS.Data.Path.ToPath Network.AWS.ManagedBlockChain.ListInvitations.ListInvitations
instance Network.AWS.Data.Query.ToQuery Network.AWS.ManagedBlockChain.ListInvitations.ListInvitations


-- | Returns detailed information about a proposal.
--   
--   Applies only to Hyperledger Fabric.
module Network.AWS.ManagedBlockChain.GetProposal

-- | <i>See:</i> <a>newGetProposal</a> smart constructor.
data GetProposal
GetProposal' :: Text -> Text -> GetProposal

-- | The unique identifier of the network for which the proposal is made.
[$sel:networkId:GetProposal'] :: GetProposal -> Text

-- | The unique identifier of the proposal.
[$sel:proposalId:GetProposal'] :: GetProposal -> Text

-- | Create a value of <a>GetProposal</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:networkId:GetProposal'</a>, <a>getProposal_networkId</a> - The
--   unique identifier of the network for which the proposal is made.
--   
--   <a>$sel:proposalId:GetProposal'</a>, <a>getProposal_proposalId</a> -
--   The unique identifier of the proposal.
newGetProposal :: Text -> Text -> GetProposal

-- | The unique identifier of the network for which the proposal is made.
getProposal_networkId :: Lens' GetProposal Text

-- | The unique identifier of the proposal.
getProposal_proposalId :: Lens' GetProposal Text

-- | <i>See:</i> <a>newGetProposalResponse</a> smart constructor.
data GetProposalResponse
GetProposalResponse' :: Maybe Proposal -> Int -> GetProposalResponse

-- | Information about a proposal.
[$sel:proposal:GetProposalResponse'] :: GetProposalResponse -> Maybe Proposal

-- | The response's http status code.
[$sel:httpStatus:GetProposalResponse'] :: GetProposalResponse -> Int

-- | Create a value of <a>GetProposalResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:proposal:GetProposalResponse'</a>,
--   <a>getProposalResponse_proposal</a> - Information about a proposal.
--   
--   <a>$sel:httpStatus:GetProposalResponse'</a>,
--   <a>getProposalResponse_httpStatus</a> - The response's http status
--   code.
newGetProposalResponse :: Int -> GetProposalResponse

-- | Information about a proposal.
getProposalResponse_proposal :: Lens' GetProposalResponse (Maybe Proposal)

-- | The response's http status code.
getProposalResponse_httpStatus :: Lens' GetProposalResponse Int
instance GHC.Generics.Generic Network.AWS.ManagedBlockChain.GetProposal.GetProposal
instance GHC.Show.Show Network.AWS.ManagedBlockChain.GetProposal.GetProposal
instance GHC.Read.Read Network.AWS.ManagedBlockChain.GetProposal.GetProposal
instance GHC.Classes.Eq Network.AWS.ManagedBlockChain.GetProposal.GetProposal
instance GHC.Generics.Generic Network.AWS.ManagedBlockChain.GetProposal.GetProposalResponse
instance GHC.Show.Show Network.AWS.ManagedBlockChain.GetProposal.GetProposalResponse
instance GHC.Read.Read Network.AWS.ManagedBlockChain.GetProposal.GetProposalResponse
instance GHC.Classes.Eq Network.AWS.ManagedBlockChain.GetProposal.GetProposalResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ManagedBlockChain.GetProposal.GetProposal
instance Control.DeepSeq.NFData Network.AWS.ManagedBlockChain.GetProposal.GetProposalResponse
instance Data.Hashable.Class.Hashable Network.AWS.ManagedBlockChain.GetProposal.GetProposal
instance Control.DeepSeq.NFData Network.AWS.ManagedBlockChain.GetProposal.GetProposal
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ManagedBlockChain.GetProposal.GetProposal
instance Network.AWS.Data.Path.ToPath Network.AWS.ManagedBlockChain.GetProposal.GetProposal
instance Network.AWS.Data.Query.ToQuery Network.AWS.ManagedBlockChain.GetProposal.GetProposal


-- | Returns detailed information about a node.
--   
--   Applies to Hyperledger Fabric and Ethereum.
module Network.AWS.ManagedBlockChain.GetNode

-- | <i>See:</i> <a>newGetNode</a> smart constructor.
data GetNode
GetNode' :: Maybe Text -> Text -> Text -> GetNode

-- | The unique identifier of the member that owns the node.
--   
--   Applies only to Hyperledger Fabric and is required for Hyperledger
--   Fabric.
[$sel:memberId:GetNode'] :: GetNode -> Maybe Text

-- | The unique identifier of the network that the node is on.
[$sel:networkId:GetNode'] :: GetNode -> Text

-- | The unique identifier of the node.
[$sel:nodeId:GetNode'] :: GetNode -> Text

-- | Create a value of <a>GetNode</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:memberId:GetNode'</a>, <a>getNode_memberId</a> - The unique
--   identifier of the member that owns the node.
--   
--   Applies only to Hyperledger Fabric and is required for Hyperledger
--   Fabric.
--   
--   <a>$sel:networkId:GetNode'</a>, <a>getNode_networkId</a> - The unique
--   identifier of the network that the node is on.
--   
--   <a>$sel:nodeId:GetNode'</a>, <a>getNode_nodeId</a> - The unique
--   identifier of the node.
newGetNode :: Text -> Text -> GetNode

-- | The unique identifier of the member that owns the node.
--   
--   Applies only to Hyperledger Fabric and is required for Hyperledger
--   Fabric.
getNode_memberId :: Lens' GetNode (Maybe Text)

-- | The unique identifier of the network that the node is on.
getNode_networkId :: Lens' GetNode Text

-- | The unique identifier of the node.
getNode_nodeId :: Lens' GetNode Text

-- | <i>See:</i> <a>newGetNodeResponse</a> smart constructor.
data GetNodeResponse
GetNodeResponse' :: Maybe Node -> Int -> GetNodeResponse

-- | Properties of the node configuration.
[$sel:node:GetNodeResponse'] :: GetNodeResponse -> Maybe Node

-- | The response's http status code.
[$sel:httpStatus:GetNodeResponse'] :: GetNodeResponse -> Int

-- | Create a value of <a>GetNodeResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:node:GetNodeResponse'</a>, <a>getNodeResponse_node</a> -
--   Properties of the node configuration.
--   
--   <a>$sel:httpStatus:GetNodeResponse'</a>,
--   <a>getNodeResponse_httpStatus</a> - The response's http status code.
newGetNodeResponse :: Int -> GetNodeResponse

-- | Properties of the node configuration.
getNodeResponse_node :: Lens' GetNodeResponse (Maybe Node)

-- | The response's http status code.
getNodeResponse_httpStatus :: Lens' GetNodeResponse Int
instance GHC.Generics.Generic Network.AWS.ManagedBlockChain.GetNode.GetNode
instance GHC.Show.Show Network.AWS.ManagedBlockChain.GetNode.GetNode
instance GHC.Read.Read Network.AWS.ManagedBlockChain.GetNode.GetNode
instance GHC.Classes.Eq Network.AWS.ManagedBlockChain.GetNode.GetNode
instance GHC.Generics.Generic Network.AWS.ManagedBlockChain.GetNode.GetNodeResponse
instance GHC.Show.Show Network.AWS.ManagedBlockChain.GetNode.GetNodeResponse
instance GHC.Read.Read Network.AWS.ManagedBlockChain.GetNode.GetNodeResponse
instance GHC.Classes.Eq Network.AWS.ManagedBlockChain.GetNode.GetNodeResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ManagedBlockChain.GetNode.GetNode
instance Control.DeepSeq.NFData Network.AWS.ManagedBlockChain.GetNode.GetNodeResponse
instance Data.Hashable.Class.Hashable Network.AWS.ManagedBlockChain.GetNode.GetNode
instance Control.DeepSeq.NFData Network.AWS.ManagedBlockChain.GetNode.GetNode
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ManagedBlockChain.GetNode.GetNode
instance Network.AWS.Data.Path.ToPath Network.AWS.ManagedBlockChain.GetNode.GetNode
instance Network.AWS.Data.Query.ToQuery Network.AWS.ManagedBlockChain.GetNode.GetNode


-- | Returns detailed information about a network.
--   
--   Applies to Hyperledger Fabric and Ethereum.
module Network.AWS.ManagedBlockChain.GetNetwork

-- | <i>See:</i> <a>newGetNetwork</a> smart constructor.
data GetNetwork
GetNetwork' :: Text -> GetNetwork

-- | The unique identifier of the network to get information about.
[$sel:networkId:GetNetwork'] :: GetNetwork -> Text

-- | Create a value of <a>GetNetwork</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:networkId:GetNetwork'</a>, <a>getNetwork_networkId</a> - The
--   unique identifier of the network to get information about.
newGetNetwork :: Text -> GetNetwork

-- | The unique identifier of the network to get information about.
getNetwork_networkId :: Lens' GetNetwork Text

-- | <i>See:</i> <a>newGetNetworkResponse</a> smart constructor.
data GetNetworkResponse
GetNetworkResponse' :: Maybe Network -> Int -> GetNetworkResponse

-- | An object containing network configuration parameters.
[$sel:network:GetNetworkResponse'] :: GetNetworkResponse -> Maybe Network

-- | The response's http status code.
[$sel:httpStatus:GetNetworkResponse'] :: GetNetworkResponse -> Int

-- | Create a value of <a>GetNetworkResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:network:GetNetworkResponse'</a>,
--   <a>getNetworkResponse_network</a> - An object containing network
--   configuration parameters.
--   
--   <a>$sel:httpStatus:GetNetworkResponse'</a>,
--   <a>getNetworkResponse_httpStatus</a> - The response's http status
--   code.
newGetNetworkResponse :: Int -> GetNetworkResponse

-- | An object containing network configuration parameters.
getNetworkResponse_network :: Lens' GetNetworkResponse (Maybe Network)

-- | The response's http status code.
getNetworkResponse_httpStatus :: Lens' GetNetworkResponse Int
instance GHC.Generics.Generic Network.AWS.ManagedBlockChain.GetNetwork.GetNetwork
instance GHC.Show.Show Network.AWS.ManagedBlockChain.GetNetwork.GetNetwork
instance GHC.Read.Read Network.AWS.ManagedBlockChain.GetNetwork.GetNetwork
instance GHC.Classes.Eq Network.AWS.ManagedBlockChain.GetNetwork.GetNetwork
instance GHC.Generics.Generic Network.AWS.ManagedBlockChain.GetNetwork.GetNetworkResponse
instance GHC.Show.Show Network.AWS.ManagedBlockChain.GetNetwork.GetNetworkResponse
instance GHC.Read.Read Network.AWS.ManagedBlockChain.GetNetwork.GetNetworkResponse
instance GHC.Classes.Eq Network.AWS.ManagedBlockChain.GetNetwork.GetNetworkResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ManagedBlockChain.GetNetwork.GetNetwork
instance Control.DeepSeq.NFData Network.AWS.ManagedBlockChain.GetNetwork.GetNetworkResponse
instance Data.Hashable.Class.Hashable Network.AWS.ManagedBlockChain.GetNetwork.GetNetwork
instance Control.DeepSeq.NFData Network.AWS.ManagedBlockChain.GetNetwork.GetNetwork
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ManagedBlockChain.GetNetwork.GetNetwork
instance Network.AWS.Data.Path.ToPath Network.AWS.ManagedBlockChain.GetNetwork.GetNetwork
instance Network.AWS.Data.Query.ToQuery Network.AWS.ManagedBlockChain.GetNetwork.GetNetwork


-- | Returns detailed information about a member.
--   
--   Applies only to Hyperledger Fabric.
module Network.AWS.ManagedBlockChain.GetMember

-- | <i>See:</i> <a>newGetMember</a> smart constructor.
data GetMember
GetMember' :: Text -> Text -> GetMember

-- | The unique identifier of the network to which the member belongs.
[$sel:networkId:GetMember'] :: GetMember -> Text

-- | The unique identifier of the member.
[$sel:memberId:GetMember'] :: GetMember -> Text

-- | Create a value of <a>GetMember</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:networkId:GetMember'</a>, <a>getMember_networkId</a> - The
--   unique identifier of the network to which the member belongs.
--   
--   <a>$sel:memberId:GetMember'</a>, <a>getMember_memberId</a> - The
--   unique identifier of the member.
newGetMember :: Text -> Text -> GetMember

-- | The unique identifier of the network to which the member belongs.
getMember_networkId :: Lens' GetMember Text

-- | The unique identifier of the member.
getMember_memberId :: Lens' GetMember Text

-- | <i>See:</i> <a>newGetMemberResponse</a> smart constructor.
data GetMemberResponse
GetMemberResponse' :: Maybe Member -> Int -> GetMemberResponse

-- | The properties of a member.
[$sel:member:GetMemberResponse'] :: GetMemberResponse -> Maybe Member

-- | The response's http status code.
[$sel:httpStatus:GetMemberResponse'] :: GetMemberResponse -> Int

-- | Create a value of <a>GetMemberResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:member:GetMemberResponse'</a>, <a>getMemberResponse_member</a>
--   - The properties of a member.
--   
--   <a>$sel:httpStatus:GetMemberResponse'</a>,
--   <a>getMemberResponse_httpStatus</a> - The response's http status code.
newGetMemberResponse :: Int -> GetMemberResponse

-- | The properties of a member.
getMemberResponse_member :: Lens' GetMemberResponse (Maybe Member)

-- | The response's http status code.
getMemberResponse_httpStatus :: Lens' GetMemberResponse Int
instance GHC.Generics.Generic Network.AWS.ManagedBlockChain.GetMember.GetMember
instance GHC.Show.Show Network.AWS.ManagedBlockChain.GetMember.GetMember
instance GHC.Read.Read Network.AWS.ManagedBlockChain.GetMember.GetMember
instance GHC.Classes.Eq Network.AWS.ManagedBlockChain.GetMember.GetMember
instance GHC.Generics.Generic Network.AWS.ManagedBlockChain.GetMember.GetMemberResponse
instance GHC.Show.Show Network.AWS.ManagedBlockChain.GetMember.GetMemberResponse
instance GHC.Read.Read Network.AWS.ManagedBlockChain.GetMember.GetMemberResponse
instance GHC.Classes.Eq Network.AWS.ManagedBlockChain.GetMember.GetMemberResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ManagedBlockChain.GetMember.GetMember
instance Control.DeepSeq.NFData Network.AWS.ManagedBlockChain.GetMember.GetMemberResponse
instance Data.Hashable.Class.Hashable Network.AWS.ManagedBlockChain.GetMember.GetMember
instance Control.DeepSeq.NFData Network.AWS.ManagedBlockChain.GetMember.GetMember
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ManagedBlockChain.GetMember.GetMember
instance Network.AWS.Data.Path.ToPath Network.AWS.ManagedBlockChain.GetMember.GetMember
instance Network.AWS.Data.Query.ToQuery Network.AWS.ManagedBlockChain.GetMember.GetMember


-- | Deletes a node that your AWS account owns. All data on the node is
--   lost and cannot be recovered.
--   
--   Applies to Hyperledger Fabric and Ethereum.
module Network.AWS.ManagedBlockChain.DeleteNode

-- | <i>See:</i> <a>newDeleteNode</a> smart constructor.
data DeleteNode
DeleteNode' :: Maybe Text -> Text -> Text -> DeleteNode

-- | The unique identifier of the member that owns this node.
--   
--   Applies only to Hyperledger Fabric and is required for Hyperledger
--   Fabric.
[$sel:memberId:DeleteNode'] :: DeleteNode -> Maybe Text

-- | The unique identifier of the network that the node is on.
--   
--   Ethereum public networks have the following <tt>NetworkId</tt>s:
--   
--   <ul>
--   <li><pre>n-ethereum-mainnet</pre></li>
--   <li><pre>n-ethereum-rinkeby</pre></li>
--   <li><pre>n-ethereum-ropsten</pre></li>
--   </ul>
[$sel:networkId:DeleteNode'] :: DeleteNode -> Text

-- | The unique identifier of the node.
[$sel:nodeId:DeleteNode'] :: DeleteNode -> Text

-- | Create a value of <a>DeleteNode</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:memberId:DeleteNode'</a>, <a>deleteNode_memberId</a> - The
--   unique identifier of the member that owns this node.
--   
--   Applies only to Hyperledger Fabric and is required for Hyperledger
--   Fabric.
--   
--   <a>$sel:networkId:DeleteNode'</a>, <a>deleteNode_networkId</a> - The
--   unique identifier of the network that the node is on.
--   
--   Ethereum public networks have the following <tt>NetworkId</tt>s:
--   
--   <ul>
--   <li><pre>n-ethereum-mainnet</pre></li>
--   <li><pre>n-ethereum-rinkeby</pre></li>
--   <li><pre>n-ethereum-ropsten</pre></li>
--   </ul>
--   
--   <a>$sel:nodeId:DeleteNode'</a>, <a>deleteNode_nodeId</a> - The unique
--   identifier of the node.
newDeleteNode :: Text -> Text -> DeleteNode

-- | The unique identifier of the member that owns this node.
--   
--   Applies only to Hyperledger Fabric and is required for Hyperledger
--   Fabric.
deleteNode_memberId :: Lens' DeleteNode (Maybe Text)

-- | The unique identifier of the network that the node is on.
--   
--   Ethereum public networks have the following <tt>NetworkId</tt>s:
--   
--   <ul>
--   <li><pre>n-ethereum-mainnet</pre></li>
--   <li><pre>n-ethereum-rinkeby</pre></li>
--   <li><pre>n-ethereum-ropsten</pre></li>
--   </ul>
deleteNode_networkId :: Lens' DeleteNode Text

-- | The unique identifier of the node.
deleteNode_nodeId :: Lens' DeleteNode Text

-- | <i>See:</i> <a>newDeleteNodeResponse</a> smart constructor.
data DeleteNodeResponse
DeleteNodeResponse' :: Int -> DeleteNodeResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteNodeResponse'] :: DeleteNodeResponse -> Int

-- | Create a value of <a>DeleteNodeResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteNodeResponse'</a>,
--   <a>deleteNodeResponse_httpStatus</a> - The response's http status
--   code.
newDeleteNodeResponse :: Int -> DeleteNodeResponse

-- | The response's http status code.
deleteNodeResponse_httpStatus :: Lens' DeleteNodeResponse Int
instance GHC.Generics.Generic Network.AWS.ManagedBlockChain.DeleteNode.DeleteNode
instance GHC.Show.Show Network.AWS.ManagedBlockChain.DeleteNode.DeleteNode
instance GHC.Read.Read Network.AWS.ManagedBlockChain.DeleteNode.DeleteNode
instance GHC.Classes.Eq Network.AWS.ManagedBlockChain.DeleteNode.DeleteNode
instance GHC.Generics.Generic Network.AWS.ManagedBlockChain.DeleteNode.DeleteNodeResponse
instance GHC.Show.Show Network.AWS.ManagedBlockChain.DeleteNode.DeleteNodeResponse
instance GHC.Read.Read Network.AWS.ManagedBlockChain.DeleteNode.DeleteNodeResponse
instance GHC.Classes.Eq Network.AWS.ManagedBlockChain.DeleteNode.DeleteNodeResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ManagedBlockChain.DeleteNode.DeleteNode
instance Control.DeepSeq.NFData Network.AWS.ManagedBlockChain.DeleteNode.DeleteNodeResponse
instance Data.Hashable.Class.Hashable Network.AWS.ManagedBlockChain.DeleteNode.DeleteNode
instance Control.DeepSeq.NFData Network.AWS.ManagedBlockChain.DeleteNode.DeleteNode
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ManagedBlockChain.DeleteNode.DeleteNode
instance Network.AWS.Data.Path.ToPath Network.AWS.ManagedBlockChain.DeleteNode.DeleteNode
instance Network.AWS.Data.Query.ToQuery Network.AWS.ManagedBlockChain.DeleteNode.DeleteNode


-- | Deletes a member. Deleting a member removes the member and all
--   associated resources from the network. <tt>DeleteMember</tt> can only
--   be called for a specified <tt>MemberId</tt> if the principal
--   performing the action is associated with the AWS account that owns the
--   member. In all other cases, the <tt>DeleteMember</tt> action is
--   carried out as the result of an approved proposal to remove a member.
--   If <tt>MemberId</tt> is the last member in a network specified by the
--   last AWS account, the network is deleted also.
--   
--   Applies only to Hyperledger Fabric.
module Network.AWS.ManagedBlockChain.DeleteMember

-- | <i>See:</i> <a>newDeleteMember</a> smart constructor.
data DeleteMember
DeleteMember' :: Text -> Text -> DeleteMember

-- | The unique identifier of the network from which the member is removed.
[$sel:networkId:DeleteMember'] :: DeleteMember -> Text

-- | The unique identifier of the member to remove.
[$sel:memberId:DeleteMember'] :: DeleteMember -> Text

-- | Create a value of <a>DeleteMember</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:networkId:DeleteMember'</a>, <a>deleteMember_networkId</a> -
--   The unique identifier of the network from which the member is removed.
--   
--   <a>$sel:memberId:DeleteMember'</a>, <a>deleteMember_memberId</a> - The
--   unique identifier of the member to remove.
newDeleteMember :: Text -> Text -> DeleteMember

-- | The unique identifier of the network from which the member is removed.
deleteMember_networkId :: Lens' DeleteMember Text

-- | The unique identifier of the member to remove.
deleteMember_memberId :: Lens' DeleteMember Text

-- | <i>See:</i> <a>newDeleteMemberResponse</a> smart constructor.
data DeleteMemberResponse
DeleteMemberResponse' :: Int -> DeleteMemberResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteMemberResponse'] :: DeleteMemberResponse -> Int

-- | Create a value of <a>DeleteMemberResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteMemberResponse'</a>,
--   <a>deleteMemberResponse_httpStatus</a> - The response's http status
--   code.
newDeleteMemberResponse :: Int -> DeleteMemberResponse

-- | The response's http status code.
deleteMemberResponse_httpStatus :: Lens' DeleteMemberResponse Int
instance GHC.Generics.Generic Network.AWS.ManagedBlockChain.DeleteMember.DeleteMember
instance GHC.Show.Show Network.AWS.ManagedBlockChain.DeleteMember.DeleteMember
instance GHC.Read.Read Network.AWS.ManagedBlockChain.DeleteMember.DeleteMember
instance GHC.Classes.Eq Network.AWS.ManagedBlockChain.DeleteMember.DeleteMember
instance GHC.Generics.Generic Network.AWS.ManagedBlockChain.DeleteMember.DeleteMemberResponse
instance GHC.Show.Show Network.AWS.ManagedBlockChain.DeleteMember.DeleteMemberResponse
instance GHC.Read.Read Network.AWS.ManagedBlockChain.DeleteMember.DeleteMemberResponse
instance GHC.Classes.Eq Network.AWS.ManagedBlockChain.DeleteMember.DeleteMemberResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ManagedBlockChain.DeleteMember.DeleteMember
instance Control.DeepSeq.NFData Network.AWS.ManagedBlockChain.DeleteMember.DeleteMemberResponse
instance Data.Hashable.Class.Hashable Network.AWS.ManagedBlockChain.DeleteMember.DeleteMember
instance Control.DeepSeq.NFData Network.AWS.ManagedBlockChain.DeleteMember.DeleteMember
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ManagedBlockChain.DeleteMember.DeleteMember
instance Network.AWS.Data.Path.ToPath Network.AWS.ManagedBlockChain.DeleteMember.DeleteMember
instance Network.AWS.Data.Query.ToQuery Network.AWS.ManagedBlockChain.DeleteMember.DeleteMember


-- | Creates a proposal for a change to the network that other members of
--   the network can vote on, for example, a proposal to add a new member
--   to the network. Any member can create a proposal.
--   
--   Applies only to Hyperledger Fabric.
module Network.AWS.ManagedBlockChain.CreateProposal

-- | <i>See:</i> <a>newCreateProposal</a> smart constructor.
data CreateProposal
CreateProposal' :: Maybe Text -> Maybe (HashMap Text Text) -> Text -> Text -> Text -> ProposalActions -> CreateProposal

-- | A description for the proposal that is visible to voting members, for
--   example, "Proposal to add Example Corp. as member."
[$sel:description:CreateProposal'] :: CreateProposal -> Maybe Text

-- | Tags to assign to the proposal. Each tag consists of a key and
--   optional value.
--   
--   When specifying tags during creation, you can specify multiple
--   key-value pairs in a single request, with an overall maximum of 50
--   tags added to each resource. If the proposal is for a network
--   invitation, the invitation inherits the tags added to the proposal.
--   
--   For more information about tags, see <a>Tagging Resources</a> in the
--   <i>Amazon Managed Blockchain Ethereum Developer Guide</i>, or
--   <a>Tagging Resources</a> in the <i>Amazon Managed Blockchain
--   Hyperledger Fabric Developer Guide</i>.
[$sel:tags:CreateProposal'] :: CreateProposal -> Maybe (HashMap Text Text)

-- | A unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the operation. An idempotent operation completes no
--   more than one time. This identifier is required only if you make a
--   service request directly using an HTTP client. It is generated
--   automatically if you use an AWS SDK or the AWS CLI.
[$sel:clientRequestToken:CreateProposal'] :: CreateProposal -> Text

-- | The unique identifier of the network for which the proposal is made.
[$sel:networkId:CreateProposal'] :: CreateProposal -> Text

-- | The unique identifier of the member that is creating the proposal.
--   This identifier is especially useful for identifying the member making
--   the proposal when multiple members exist in a single AWS account.
[$sel:memberId:CreateProposal'] :: CreateProposal -> Text

-- | The type of actions proposed, such as inviting a member or removing a
--   member. The types of <tt>Actions</tt> in a proposal are mutually
--   exclusive. For example, a proposal with <tt>Invitations</tt> actions
--   cannot also contain <tt>Removals</tt> actions.
[$sel:actions:CreateProposal'] :: CreateProposal -> ProposalActions

-- | Create a value of <a>CreateProposal</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:description:CreateProposal'</a>,
--   <a>createProposal_description</a> - A description for the proposal
--   that is visible to voting members, for example, "Proposal to add
--   Example Corp. as member."
--   
--   <a>$sel:tags:CreateProposal'</a>, <a>createProposal_tags</a> - Tags to
--   assign to the proposal. Each tag consists of a key and optional value.
--   
--   When specifying tags during creation, you can specify multiple
--   key-value pairs in a single request, with an overall maximum of 50
--   tags added to each resource. If the proposal is for a network
--   invitation, the invitation inherits the tags added to the proposal.
--   
--   For more information about tags, see <a>Tagging Resources</a> in the
--   <i>Amazon Managed Blockchain Ethereum Developer Guide</i>, or
--   <a>Tagging Resources</a> in the <i>Amazon Managed Blockchain
--   Hyperledger Fabric Developer Guide</i>.
--   
--   <a>$sel:clientRequestToken:CreateProposal'</a>,
--   <a>createProposal_clientRequestToken</a> - A unique, case-sensitive
--   identifier that you provide to ensure the idempotency of the
--   operation. An idempotent operation completes no more than one time.
--   This identifier is required only if you make a service request
--   directly using an HTTP client. It is generated automatically if you
--   use an AWS SDK or the AWS CLI.
--   
--   <a>$sel:networkId:CreateProposal'</a>, <a>createProposal_networkId</a>
--   - The unique identifier of the network for which the proposal is made.
--   
--   <a>$sel:memberId:CreateProposal'</a>, <a>createProposal_memberId</a> -
--   The unique identifier of the member that is creating the proposal.
--   This identifier is especially useful for identifying the member making
--   the proposal when multiple members exist in a single AWS account.
--   
--   <a>$sel:actions:CreateProposal'</a>, <a>createProposal_actions</a> -
--   The type of actions proposed, such as inviting a member or removing a
--   member. The types of <tt>Actions</tt> in a proposal are mutually
--   exclusive. For example, a proposal with <tt>Invitations</tt> actions
--   cannot also contain <tt>Removals</tt> actions.
newCreateProposal :: Text -> Text -> Text -> ProposalActions -> CreateProposal

-- | A description for the proposal that is visible to voting members, for
--   example, "Proposal to add Example Corp. as member."
createProposal_description :: Lens' CreateProposal (Maybe Text)

-- | Tags to assign to the proposal. Each tag consists of a key and
--   optional value.
--   
--   When specifying tags during creation, you can specify multiple
--   key-value pairs in a single request, with an overall maximum of 50
--   tags added to each resource. If the proposal is for a network
--   invitation, the invitation inherits the tags added to the proposal.
--   
--   For more information about tags, see <a>Tagging Resources</a> in the
--   <i>Amazon Managed Blockchain Ethereum Developer Guide</i>, or
--   <a>Tagging Resources</a> in the <i>Amazon Managed Blockchain
--   Hyperledger Fabric Developer Guide</i>.
createProposal_tags :: Lens' CreateProposal (Maybe (HashMap Text Text))

-- | A unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the operation. An idempotent operation completes no
--   more than one time. This identifier is required only if you make a
--   service request directly using an HTTP client. It is generated
--   automatically if you use an AWS SDK or the AWS CLI.
createProposal_clientRequestToken :: Lens' CreateProposal Text

-- | The unique identifier of the network for which the proposal is made.
createProposal_networkId :: Lens' CreateProposal Text

-- | The unique identifier of the member that is creating the proposal.
--   This identifier is especially useful for identifying the member making
--   the proposal when multiple members exist in a single AWS account.
createProposal_memberId :: Lens' CreateProposal Text

-- | The type of actions proposed, such as inviting a member or removing a
--   member. The types of <tt>Actions</tt> in a proposal are mutually
--   exclusive. For example, a proposal with <tt>Invitations</tt> actions
--   cannot also contain <tt>Removals</tt> actions.
createProposal_actions :: Lens' CreateProposal ProposalActions

-- | <i>See:</i> <a>newCreateProposalResponse</a> smart constructor.
data CreateProposalResponse
CreateProposalResponse' :: Maybe Text -> Int -> CreateProposalResponse

-- | The unique identifier of the proposal.
[$sel:proposalId:CreateProposalResponse'] :: CreateProposalResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:CreateProposalResponse'] :: CreateProposalResponse -> Int

-- | Create a value of <a>CreateProposalResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:proposalId:CreateProposalResponse'</a>,
--   <a>createProposalResponse_proposalId</a> - The unique identifier of
--   the proposal.
--   
--   <a>$sel:httpStatus:CreateProposalResponse'</a>,
--   <a>createProposalResponse_httpStatus</a> - The response's http status
--   code.
newCreateProposalResponse :: Int -> CreateProposalResponse

-- | The unique identifier of the proposal.
createProposalResponse_proposalId :: Lens' CreateProposalResponse (Maybe Text)

-- | The response's http status code.
createProposalResponse_httpStatus :: Lens' CreateProposalResponse Int
instance GHC.Generics.Generic Network.AWS.ManagedBlockChain.CreateProposal.CreateProposal
instance GHC.Show.Show Network.AWS.ManagedBlockChain.CreateProposal.CreateProposal
instance GHC.Read.Read Network.AWS.ManagedBlockChain.CreateProposal.CreateProposal
instance GHC.Classes.Eq Network.AWS.ManagedBlockChain.CreateProposal.CreateProposal
instance GHC.Generics.Generic Network.AWS.ManagedBlockChain.CreateProposal.CreateProposalResponse
instance GHC.Show.Show Network.AWS.ManagedBlockChain.CreateProposal.CreateProposalResponse
instance GHC.Read.Read Network.AWS.ManagedBlockChain.CreateProposal.CreateProposalResponse
instance GHC.Classes.Eq Network.AWS.ManagedBlockChain.CreateProposal.CreateProposalResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ManagedBlockChain.CreateProposal.CreateProposal
instance Control.DeepSeq.NFData Network.AWS.ManagedBlockChain.CreateProposal.CreateProposalResponse
instance Data.Hashable.Class.Hashable Network.AWS.ManagedBlockChain.CreateProposal.CreateProposal
instance Control.DeepSeq.NFData Network.AWS.ManagedBlockChain.CreateProposal.CreateProposal
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ManagedBlockChain.CreateProposal.CreateProposal
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ManagedBlockChain.CreateProposal.CreateProposal
instance Network.AWS.Data.Path.ToPath Network.AWS.ManagedBlockChain.CreateProposal.CreateProposal
instance Network.AWS.Data.Query.ToQuery Network.AWS.ManagedBlockChain.CreateProposal.CreateProposal


-- | Creates a node on the specified blockchain network.
--   
--   Applies to Hyperledger Fabric and Ethereum.
module Network.AWS.ManagedBlockChain.CreateNode

-- | <i>See:</i> <a>newCreateNode</a> smart constructor.
data CreateNode
CreateNode' :: Maybe Text -> Maybe (HashMap Text Text) -> Text -> Text -> NodeConfiguration -> CreateNode

-- | The unique identifier of the member that owns this node.
--   
--   Applies only to Hyperledger Fabric.
[$sel:memberId:CreateNode'] :: CreateNode -> Maybe Text

-- | Tags to assign to the node. Each tag consists of a key and optional
--   value.
--   
--   When specifying tags during creation, you can specify multiple
--   key-value pairs in a single request, with an overall maximum of 50
--   tags added to each resource.
--   
--   For more information about tags, see <a>Tagging Resources</a> in the
--   <i>Amazon Managed Blockchain Ethereum Developer Guide</i>, or
--   <a>Tagging Resources</a> in the <i>Amazon Managed Blockchain
--   Hyperledger Fabric Developer Guide</i>.
[$sel:tags:CreateNode'] :: CreateNode -> Maybe (HashMap Text Text)

-- | A unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the operation. An idempotent operation completes no
--   more than one time. This identifier is required only if you make a
--   service request directly using an HTTP client. It is generated
--   automatically if you use an AWS SDK or the AWS CLI.
[$sel:clientRequestToken:CreateNode'] :: CreateNode -> Text

-- | The unique identifier of the network for the node.
--   
--   Ethereum public networks have the following <tt>NetworkId</tt>s:
--   
--   <ul>
--   <li><pre>n-ethereum-mainnet</pre></li>
--   <li><pre>n-ethereum-rinkeby</pre></li>
--   <li><pre>n-ethereum-ropsten</pre></li>
--   </ul>
[$sel:networkId:CreateNode'] :: CreateNode -> Text

-- | The properties of a node configuration.
[$sel:nodeConfiguration:CreateNode'] :: CreateNode -> NodeConfiguration

-- | Create a value of <a>CreateNode</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:memberId:CreateNode'</a>, <a>createNode_memberId</a> - The
--   unique identifier of the member that owns this node.
--   
--   Applies only to Hyperledger Fabric.
--   
--   <a>$sel:tags:CreateNode'</a>, <a>createNode_tags</a> - Tags to assign
--   to the node. Each tag consists of a key and optional value.
--   
--   When specifying tags during creation, you can specify multiple
--   key-value pairs in a single request, with an overall maximum of 50
--   tags added to each resource.
--   
--   For more information about tags, see <a>Tagging Resources</a> in the
--   <i>Amazon Managed Blockchain Ethereum Developer Guide</i>, or
--   <a>Tagging Resources</a> in the <i>Amazon Managed Blockchain
--   Hyperledger Fabric Developer Guide</i>.
--   
--   <a>$sel:clientRequestToken:CreateNode'</a>,
--   <a>createNode_clientRequestToken</a> - A unique, case-sensitive
--   identifier that you provide to ensure the idempotency of the
--   operation. An idempotent operation completes no more than one time.
--   This identifier is required only if you make a service request
--   directly using an HTTP client. It is generated automatically if you
--   use an AWS SDK or the AWS CLI.
--   
--   <a>$sel:networkId:CreateNode'</a>, <a>createNode_networkId</a> - The
--   unique identifier of the network for the node.
--   
--   Ethereum public networks have the following <tt>NetworkId</tt>s:
--   
--   <ul>
--   <li><pre>n-ethereum-mainnet</pre></li>
--   <li><pre>n-ethereum-rinkeby</pre></li>
--   <li><pre>n-ethereum-ropsten</pre></li>
--   </ul>
--   
--   <a>$sel:nodeConfiguration:CreateNode'</a>,
--   <a>createNode_nodeConfiguration</a> - The properties of a node
--   configuration.
newCreateNode :: Text -> Text -> NodeConfiguration -> CreateNode

-- | The unique identifier of the member that owns this node.
--   
--   Applies only to Hyperledger Fabric.
createNode_memberId :: Lens' CreateNode (Maybe Text)

-- | Tags to assign to the node. Each tag consists of a key and optional
--   value.
--   
--   When specifying tags during creation, you can specify multiple
--   key-value pairs in a single request, with an overall maximum of 50
--   tags added to each resource.
--   
--   For more information about tags, see <a>Tagging Resources</a> in the
--   <i>Amazon Managed Blockchain Ethereum Developer Guide</i>, or
--   <a>Tagging Resources</a> in the <i>Amazon Managed Blockchain
--   Hyperledger Fabric Developer Guide</i>.
createNode_tags :: Lens' CreateNode (Maybe (HashMap Text Text))

-- | A unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the operation. An idempotent operation completes no
--   more than one time. This identifier is required only if you make a
--   service request directly using an HTTP client. It is generated
--   automatically if you use an AWS SDK or the AWS CLI.
createNode_clientRequestToken :: Lens' CreateNode Text

-- | The unique identifier of the network for the node.
--   
--   Ethereum public networks have the following <tt>NetworkId</tt>s:
--   
--   <ul>
--   <li><pre>n-ethereum-mainnet</pre></li>
--   <li><pre>n-ethereum-rinkeby</pre></li>
--   <li><pre>n-ethereum-ropsten</pre></li>
--   </ul>
createNode_networkId :: Lens' CreateNode Text

-- | The properties of a node configuration.
createNode_nodeConfiguration :: Lens' CreateNode NodeConfiguration

-- | <i>See:</i> <a>newCreateNodeResponse</a> smart constructor.
data CreateNodeResponse
CreateNodeResponse' :: Maybe Text -> Int -> CreateNodeResponse

-- | The unique identifier of the node.
[$sel:nodeId:CreateNodeResponse'] :: CreateNodeResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:CreateNodeResponse'] :: CreateNodeResponse -> Int

-- | Create a value of <a>CreateNodeResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nodeId:CreateNodeResponse'</a>,
--   <a>createNodeResponse_nodeId</a> - The unique identifier of the node.
--   
--   <a>$sel:httpStatus:CreateNodeResponse'</a>,
--   <a>createNodeResponse_httpStatus</a> - The response's http status
--   code.
newCreateNodeResponse :: Int -> CreateNodeResponse

-- | The unique identifier of the node.
createNodeResponse_nodeId :: Lens' CreateNodeResponse (Maybe Text)

-- | The response's http status code.
createNodeResponse_httpStatus :: Lens' CreateNodeResponse Int
instance GHC.Generics.Generic Network.AWS.ManagedBlockChain.CreateNode.CreateNode
instance GHC.Show.Show Network.AWS.ManagedBlockChain.CreateNode.CreateNode
instance GHC.Read.Read Network.AWS.ManagedBlockChain.CreateNode.CreateNode
instance GHC.Classes.Eq Network.AWS.ManagedBlockChain.CreateNode.CreateNode
instance GHC.Generics.Generic Network.AWS.ManagedBlockChain.CreateNode.CreateNodeResponse
instance GHC.Show.Show Network.AWS.ManagedBlockChain.CreateNode.CreateNodeResponse
instance GHC.Read.Read Network.AWS.ManagedBlockChain.CreateNode.CreateNodeResponse
instance GHC.Classes.Eq Network.AWS.ManagedBlockChain.CreateNode.CreateNodeResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ManagedBlockChain.CreateNode.CreateNode
instance Control.DeepSeq.NFData Network.AWS.ManagedBlockChain.CreateNode.CreateNodeResponse
instance Data.Hashable.Class.Hashable Network.AWS.ManagedBlockChain.CreateNode.CreateNode
instance Control.DeepSeq.NFData Network.AWS.ManagedBlockChain.CreateNode.CreateNode
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ManagedBlockChain.CreateNode.CreateNode
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ManagedBlockChain.CreateNode.CreateNode
instance Network.AWS.Data.Path.ToPath Network.AWS.ManagedBlockChain.CreateNode.CreateNode
instance Network.AWS.Data.Query.ToQuery Network.AWS.ManagedBlockChain.CreateNode.CreateNode


-- | Creates a new blockchain network using Amazon Managed Blockchain.
--   
--   Applies only to Hyperledger Fabric.
module Network.AWS.ManagedBlockChain.CreateNetwork

-- | <i>See:</i> <a>newCreateNetwork</a> smart constructor.
data CreateNetwork
CreateNetwork' :: Maybe NetworkFrameworkConfiguration -> Maybe Text -> Maybe (HashMap Text Text) -> Text -> Text -> Framework -> Text -> VotingPolicy -> MemberConfiguration -> CreateNetwork

-- | Configuration properties of the blockchain framework relevant to the
--   network configuration.
[$sel:frameworkConfiguration:CreateNetwork'] :: CreateNetwork -> Maybe NetworkFrameworkConfiguration

-- | An optional description for the network.
[$sel:description:CreateNetwork'] :: CreateNetwork -> Maybe Text

-- | Tags to assign to the network. Each tag consists of a key and optional
--   value.
--   
--   When specifying tags during creation, you can specify multiple
--   key-value pairs in a single request, with an overall maximum of 50
--   tags added to each resource.
--   
--   For more information about tags, see <a>Tagging Resources</a> in the
--   <i>Amazon Managed Blockchain Ethereum Developer Guide</i>, or
--   <a>Tagging Resources</a> in the <i>Amazon Managed Blockchain
--   Hyperledger Fabric Developer Guide</i>.
[$sel:tags:CreateNetwork'] :: CreateNetwork -> Maybe (HashMap Text Text)

-- | A unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the operation. An idempotent operation completes no
--   more than one time. This identifier is required only if you make a
--   service request directly using an HTTP client. It is generated
--   automatically if you use an AWS SDK or the AWS CLI.
[$sel:clientRequestToken:CreateNetwork'] :: CreateNetwork -> Text

-- | The name of the network.
[$sel:name:CreateNetwork'] :: CreateNetwork -> Text

-- | The blockchain framework that the network uses.
[$sel:framework:CreateNetwork'] :: CreateNetwork -> Framework

-- | The version of the blockchain framework that the network uses.
[$sel:frameworkVersion:CreateNetwork'] :: CreateNetwork -> Text

-- | The voting rules used by the network to determine if a proposal is
--   approved.
[$sel:votingPolicy:CreateNetwork'] :: CreateNetwork -> VotingPolicy

-- | Configuration properties for the first member within the network.
[$sel:memberConfiguration:CreateNetwork'] :: CreateNetwork -> MemberConfiguration

-- | Create a value of <a>CreateNetwork</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:frameworkConfiguration:CreateNetwork'</a>,
--   <a>createNetwork_frameworkConfiguration</a> - Configuration properties
--   of the blockchain framework relevant to the network configuration.
--   
--   <a>$sel:description:CreateNetwork'</a>,
--   <a>createNetwork_description</a> - An optional description for the
--   network.
--   
--   <a>$sel:tags:CreateNetwork'</a>, <a>createNetwork_tags</a> - Tags to
--   assign to the network. Each tag consists of a key and optional value.
--   
--   When specifying tags during creation, you can specify multiple
--   key-value pairs in a single request, with an overall maximum of 50
--   tags added to each resource.
--   
--   For more information about tags, see <a>Tagging Resources</a> in the
--   <i>Amazon Managed Blockchain Ethereum Developer Guide</i>, or
--   <a>Tagging Resources</a> in the <i>Amazon Managed Blockchain
--   Hyperledger Fabric Developer Guide</i>.
--   
--   <a>$sel:clientRequestToken:CreateNetwork'</a>,
--   <a>createNetwork_clientRequestToken</a> - A unique, case-sensitive
--   identifier that you provide to ensure the idempotency of the
--   operation. An idempotent operation completes no more than one time.
--   This identifier is required only if you make a service request
--   directly using an HTTP client. It is generated automatically if you
--   use an AWS SDK or the AWS CLI.
--   
--   <a>$sel:name:CreateNetwork'</a>, <a>createNetwork_name</a> - The name
--   of the network.
--   
--   <a>$sel:framework:CreateNetwork'</a>, <a>createNetwork_framework</a> -
--   The blockchain framework that the network uses.
--   
--   <a>$sel:frameworkVersion:CreateNetwork'</a>,
--   <a>createNetwork_frameworkVersion</a> - The version of the blockchain
--   framework that the network uses.
--   
--   <a>$sel:votingPolicy:CreateNetwork'</a>,
--   <a>createNetwork_votingPolicy</a> - The voting rules used by the
--   network to determine if a proposal is approved.
--   
--   <a>$sel:memberConfiguration:CreateNetwork'</a>,
--   <a>createNetwork_memberConfiguration</a> - Configuration properties
--   for the first member within the network.
newCreateNetwork :: Text -> Text -> Framework -> Text -> VotingPolicy -> MemberConfiguration -> CreateNetwork

-- | Configuration properties of the blockchain framework relevant to the
--   network configuration.
createNetwork_frameworkConfiguration :: Lens' CreateNetwork (Maybe NetworkFrameworkConfiguration)

-- | An optional description for the network.
createNetwork_description :: Lens' CreateNetwork (Maybe Text)

-- | Tags to assign to the network. Each tag consists of a key and optional
--   value.
--   
--   When specifying tags during creation, you can specify multiple
--   key-value pairs in a single request, with an overall maximum of 50
--   tags added to each resource.
--   
--   For more information about tags, see <a>Tagging Resources</a> in the
--   <i>Amazon Managed Blockchain Ethereum Developer Guide</i>, or
--   <a>Tagging Resources</a> in the <i>Amazon Managed Blockchain
--   Hyperledger Fabric Developer Guide</i>.
createNetwork_tags :: Lens' CreateNetwork (Maybe (HashMap Text Text))

-- | A unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the operation. An idempotent operation completes no
--   more than one time. This identifier is required only if you make a
--   service request directly using an HTTP client. It is generated
--   automatically if you use an AWS SDK or the AWS CLI.
createNetwork_clientRequestToken :: Lens' CreateNetwork Text

-- | The name of the network.
createNetwork_name :: Lens' CreateNetwork Text

-- | The blockchain framework that the network uses.
createNetwork_framework :: Lens' CreateNetwork Framework

-- | The version of the blockchain framework that the network uses.
createNetwork_frameworkVersion :: Lens' CreateNetwork Text

-- | The voting rules used by the network to determine if a proposal is
--   approved.
createNetwork_votingPolicy :: Lens' CreateNetwork VotingPolicy

-- | Configuration properties for the first member within the network.
createNetwork_memberConfiguration :: Lens' CreateNetwork MemberConfiguration

-- | <i>See:</i> <a>newCreateNetworkResponse</a> smart constructor.
data CreateNetworkResponse
CreateNetworkResponse' :: Maybe Text -> Maybe Text -> Int -> CreateNetworkResponse

-- | The unique identifier for the first member within the network.
[$sel:memberId:CreateNetworkResponse'] :: CreateNetworkResponse -> Maybe Text

-- | The unique identifier for the network.
[$sel:networkId:CreateNetworkResponse'] :: CreateNetworkResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:CreateNetworkResponse'] :: CreateNetworkResponse -> Int

-- | Create a value of <a>CreateNetworkResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:memberId:CreateNetworkResponse'</a>,
--   <a>createNetworkResponse_memberId</a> - The unique identifier for the
--   first member within the network.
--   
--   <a>$sel:networkId:CreateNetworkResponse'</a>,
--   <a>createNetworkResponse_networkId</a> - The unique identifier for the
--   network.
--   
--   <a>$sel:httpStatus:CreateNetworkResponse'</a>,
--   <a>createNetworkResponse_httpStatus</a> - The response's http status
--   code.
newCreateNetworkResponse :: Int -> CreateNetworkResponse

-- | The unique identifier for the first member within the network.
createNetworkResponse_memberId :: Lens' CreateNetworkResponse (Maybe Text)

-- | The unique identifier for the network.
createNetworkResponse_networkId :: Lens' CreateNetworkResponse (Maybe Text)

-- | The response's http status code.
createNetworkResponse_httpStatus :: Lens' CreateNetworkResponse Int
instance GHC.Generics.Generic Network.AWS.ManagedBlockChain.CreateNetwork.CreateNetwork
instance GHC.Show.Show Network.AWS.ManagedBlockChain.CreateNetwork.CreateNetwork
instance GHC.Classes.Eq Network.AWS.ManagedBlockChain.CreateNetwork.CreateNetwork
instance GHC.Generics.Generic Network.AWS.ManagedBlockChain.CreateNetwork.CreateNetworkResponse
instance GHC.Show.Show Network.AWS.ManagedBlockChain.CreateNetwork.CreateNetworkResponse
instance GHC.Read.Read Network.AWS.ManagedBlockChain.CreateNetwork.CreateNetworkResponse
instance GHC.Classes.Eq Network.AWS.ManagedBlockChain.CreateNetwork.CreateNetworkResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ManagedBlockChain.CreateNetwork.CreateNetwork
instance Control.DeepSeq.NFData Network.AWS.ManagedBlockChain.CreateNetwork.CreateNetworkResponse
instance Data.Hashable.Class.Hashable Network.AWS.ManagedBlockChain.CreateNetwork.CreateNetwork
instance Control.DeepSeq.NFData Network.AWS.ManagedBlockChain.CreateNetwork.CreateNetwork
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ManagedBlockChain.CreateNetwork.CreateNetwork
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ManagedBlockChain.CreateNetwork.CreateNetwork
instance Network.AWS.Data.Path.ToPath Network.AWS.ManagedBlockChain.CreateNetwork.CreateNetwork
instance Network.AWS.Data.Query.ToQuery Network.AWS.ManagedBlockChain.CreateNetwork.CreateNetwork


-- | Creates a member within a Managed Blockchain network.
--   
--   Applies only to Hyperledger Fabric.
module Network.AWS.ManagedBlockChain.CreateMember

-- | <i>See:</i> <a>newCreateMember</a> smart constructor.
data CreateMember
CreateMember' :: Text -> Text -> Text -> MemberConfiguration -> CreateMember

-- | A unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the operation. An idempotent operation completes no
--   more than one time. This identifier is required only if you make a
--   service request directly using an HTTP client. It is generated
--   automatically if you use an AWS SDK or the AWS CLI.
[$sel:clientRequestToken:CreateMember'] :: CreateMember -> Text

-- | The unique identifier of the invitation that is sent to the member to
--   join the network.
[$sel:invitationId:CreateMember'] :: CreateMember -> Text

-- | The unique identifier of the network in which the member is created.
[$sel:networkId:CreateMember'] :: CreateMember -> Text

-- | Member configuration parameters.
[$sel:memberConfiguration:CreateMember'] :: CreateMember -> MemberConfiguration

-- | Create a value of <a>CreateMember</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientRequestToken:CreateMember'</a>,
--   <a>createMember_clientRequestToken</a> - A unique, case-sensitive
--   identifier that you provide to ensure the idempotency of the
--   operation. An idempotent operation completes no more than one time.
--   This identifier is required only if you make a service request
--   directly using an HTTP client. It is generated automatically if you
--   use an AWS SDK or the AWS CLI.
--   
--   <a>$sel:invitationId:CreateMember'</a>,
--   <a>createMember_invitationId</a> - The unique identifier of the
--   invitation that is sent to the member to join the network.
--   
--   <a>$sel:networkId:CreateMember'</a>, <a>createMember_networkId</a> -
--   The unique identifier of the network in which the member is created.
--   
--   <a>$sel:memberConfiguration:CreateMember'</a>,
--   <a>createMember_memberConfiguration</a> - Member configuration
--   parameters.
newCreateMember :: Text -> Text -> Text -> MemberConfiguration -> CreateMember

-- | A unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the operation. An idempotent operation completes no
--   more than one time. This identifier is required only if you make a
--   service request directly using an HTTP client. It is generated
--   automatically if you use an AWS SDK or the AWS CLI.
createMember_clientRequestToken :: Lens' CreateMember Text

-- | The unique identifier of the invitation that is sent to the member to
--   join the network.
createMember_invitationId :: Lens' CreateMember Text

-- | The unique identifier of the network in which the member is created.
createMember_networkId :: Lens' CreateMember Text

-- | Member configuration parameters.
createMember_memberConfiguration :: Lens' CreateMember MemberConfiguration

-- | <i>See:</i> <a>newCreateMemberResponse</a> smart constructor.
data CreateMemberResponse
CreateMemberResponse' :: Maybe Text -> Int -> CreateMemberResponse

-- | The unique identifier of the member.
[$sel:memberId:CreateMemberResponse'] :: CreateMemberResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:CreateMemberResponse'] :: CreateMemberResponse -> Int

-- | Create a value of <a>CreateMemberResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:memberId:CreateMemberResponse'</a>,
--   <a>createMemberResponse_memberId</a> - The unique identifier of the
--   member.
--   
--   <a>$sel:httpStatus:CreateMemberResponse'</a>,
--   <a>createMemberResponse_httpStatus</a> - The response's http status
--   code.
newCreateMemberResponse :: Int -> CreateMemberResponse

-- | The unique identifier of the member.
createMemberResponse_memberId :: Lens' CreateMemberResponse (Maybe Text)

-- | The response's http status code.
createMemberResponse_httpStatus :: Lens' CreateMemberResponse Int
instance GHC.Generics.Generic Network.AWS.ManagedBlockChain.CreateMember.CreateMember
instance GHC.Show.Show Network.AWS.ManagedBlockChain.CreateMember.CreateMember
instance GHC.Classes.Eq Network.AWS.ManagedBlockChain.CreateMember.CreateMember
instance GHC.Generics.Generic Network.AWS.ManagedBlockChain.CreateMember.CreateMemberResponse
instance GHC.Show.Show Network.AWS.ManagedBlockChain.CreateMember.CreateMemberResponse
instance GHC.Read.Read Network.AWS.ManagedBlockChain.CreateMember.CreateMemberResponse
instance GHC.Classes.Eq Network.AWS.ManagedBlockChain.CreateMember.CreateMemberResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ManagedBlockChain.CreateMember.CreateMember
instance Control.DeepSeq.NFData Network.AWS.ManagedBlockChain.CreateMember.CreateMemberResponse
instance Data.Hashable.Class.Hashable Network.AWS.ManagedBlockChain.CreateMember.CreateMember
instance Control.DeepSeq.NFData Network.AWS.ManagedBlockChain.CreateMember.CreateMember
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ManagedBlockChain.CreateMember.CreateMember
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ManagedBlockChain.CreateMember.CreateMember
instance Network.AWS.Data.Path.ToPath Network.AWS.ManagedBlockChain.CreateMember.CreateMember
instance Network.AWS.Data.Query.ToQuery Network.AWS.ManagedBlockChain.CreateMember.CreateMember


-- | Removes the specified tags from the Amazon Managed Blockchain
--   resource.
--   
--   For more information about tags, see <a>Tagging Resources</a> in the
--   <i>Amazon Managed Blockchain Ethereum Developer Guide</i>, or
--   <a>Tagging Resources</a> in the <i>Amazon Managed Blockchain
--   Hyperledger Fabric Developer Guide</i>.
module Network.AWS.ManagedBlockChain.UntagResource

-- | <i>See:</i> <a>newUntagResource</a> smart constructor.
data UntagResource
UntagResource' :: Text -> [Text] -> UntagResource

-- | The Amazon Resource Name (ARN) of the resource. For more information
--   about ARNs and their format, see <a>Amazon Resource Names (ARNs)</a>
--   in the <i>AWS General Reference</i>.
[$sel:resourceArn:UntagResource'] :: UntagResource -> Text

-- | The tag keys.
[$sel:tagKeys:UntagResource'] :: UntagResource -> [Text]

-- | Create a value of <a>UntagResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:UntagResource'</a>,
--   <a>untagResource_resourceArn</a> - The Amazon Resource Name (ARN) of
--   the resource. For more information about ARNs and their format, see
--   <a>Amazon Resource Names (ARNs)</a> in the <i>AWS General
--   Reference</i>.
--   
--   <a>$sel:tagKeys:UntagResource'</a>, <a>untagResource_tagKeys</a> - The
--   tag keys.
newUntagResource :: Text -> UntagResource

-- | The Amazon Resource Name (ARN) of the resource. For more information
--   about ARNs and their format, see <a>Amazon Resource Names (ARNs)</a>
--   in the <i>AWS General Reference</i>.
untagResource_resourceArn :: Lens' UntagResource Text

-- | The tag keys.
untagResource_tagKeys :: Lens' UntagResource [Text]

-- | <i>See:</i> <a>newUntagResourceResponse</a> smart constructor.
data UntagResourceResponse
UntagResourceResponse' :: Int -> UntagResourceResponse

-- | The response's http status code.
[$sel:httpStatus:UntagResourceResponse'] :: UntagResourceResponse -> Int

-- | Create a value of <a>UntagResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UntagResourceResponse'</a>,
--   <a>untagResourceResponse_httpStatus</a> - The response's http status
--   code.
newUntagResourceResponse :: Int -> UntagResourceResponse

-- | The response's http status code.
untagResourceResponse_httpStatus :: Lens' UntagResourceResponse Int
instance GHC.Generics.Generic Network.AWS.ManagedBlockChain.UntagResource.UntagResource
instance GHC.Show.Show Network.AWS.ManagedBlockChain.UntagResource.UntagResource
instance GHC.Read.Read Network.AWS.ManagedBlockChain.UntagResource.UntagResource
instance GHC.Classes.Eq Network.AWS.ManagedBlockChain.UntagResource.UntagResource
instance GHC.Generics.Generic Network.AWS.ManagedBlockChain.UntagResource.UntagResourceResponse
instance GHC.Show.Show Network.AWS.ManagedBlockChain.UntagResource.UntagResourceResponse
instance GHC.Read.Read Network.AWS.ManagedBlockChain.UntagResource.UntagResourceResponse
instance GHC.Classes.Eq Network.AWS.ManagedBlockChain.UntagResource.UntagResourceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ManagedBlockChain.UntagResource.UntagResource
instance Control.DeepSeq.NFData Network.AWS.ManagedBlockChain.UntagResource.UntagResourceResponse
instance Data.Hashable.Class.Hashable Network.AWS.ManagedBlockChain.UntagResource.UntagResource
instance Control.DeepSeq.NFData Network.AWS.ManagedBlockChain.UntagResource.UntagResource
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ManagedBlockChain.UntagResource.UntagResource
instance Network.AWS.Data.Path.ToPath Network.AWS.ManagedBlockChain.UntagResource.UntagResource
instance Network.AWS.Data.Query.ToQuery Network.AWS.ManagedBlockChain.UntagResource.UntagResource


-- | Updates a member configuration with new parameters.
--   
--   Applies only to Hyperledger Fabric.
module Network.AWS.ManagedBlockChain.UpdateMember

-- | <i>See:</i> <a>newUpdateMember</a> smart constructor.
data UpdateMember
UpdateMember' :: Maybe MemberLogPublishingConfiguration -> Text -> Text -> UpdateMember

-- | Configuration properties for publishing to Amazon CloudWatch Logs.
[$sel:logPublishingConfiguration:UpdateMember'] :: UpdateMember -> Maybe MemberLogPublishingConfiguration

-- | The unique identifier of the Managed Blockchain network to which the
--   member belongs.
[$sel:networkId:UpdateMember'] :: UpdateMember -> Text

-- | The unique identifier of the member.
[$sel:memberId:UpdateMember'] :: UpdateMember -> Text

-- | Create a value of <a>UpdateMember</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:logPublishingConfiguration:UpdateMember'</a>,
--   <a>updateMember_logPublishingConfiguration</a> - Configuration
--   properties for publishing to Amazon CloudWatch Logs.
--   
--   <a>$sel:networkId:UpdateMember'</a>, <a>updateMember_networkId</a> -
--   The unique identifier of the Managed Blockchain network to which the
--   member belongs.
--   
--   <a>$sel:memberId:UpdateMember'</a>, <a>updateMember_memberId</a> - The
--   unique identifier of the member.
newUpdateMember :: Text -> Text -> UpdateMember

-- | Configuration properties for publishing to Amazon CloudWatch Logs.
updateMember_logPublishingConfiguration :: Lens' UpdateMember (Maybe MemberLogPublishingConfiguration)

-- | The unique identifier of the Managed Blockchain network to which the
--   member belongs.
updateMember_networkId :: Lens' UpdateMember Text

-- | The unique identifier of the member.
updateMember_memberId :: Lens' UpdateMember Text

-- | <i>See:</i> <a>newUpdateMemberResponse</a> smart constructor.
data UpdateMemberResponse
UpdateMemberResponse' :: Int -> UpdateMemberResponse

-- | The response's http status code.
[$sel:httpStatus:UpdateMemberResponse'] :: UpdateMemberResponse -> Int

-- | Create a value of <a>UpdateMemberResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateMemberResponse'</a>,
--   <a>updateMemberResponse_httpStatus</a> - The response's http status
--   code.
newUpdateMemberResponse :: Int -> UpdateMemberResponse

-- | The response's http status code.
updateMemberResponse_httpStatus :: Lens' UpdateMemberResponse Int
instance GHC.Generics.Generic Network.AWS.ManagedBlockChain.UpdateMember.UpdateMember
instance GHC.Show.Show Network.AWS.ManagedBlockChain.UpdateMember.UpdateMember
instance GHC.Read.Read Network.AWS.ManagedBlockChain.UpdateMember.UpdateMember
instance GHC.Classes.Eq Network.AWS.ManagedBlockChain.UpdateMember.UpdateMember
instance GHC.Generics.Generic Network.AWS.ManagedBlockChain.UpdateMember.UpdateMemberResponse
instance GHC.Show.Show Network.AWS.ManagedBlockChain.UpdateMember.UpdateMemberResponse
instance GHC.Read.Read Network.AWS.ManagedBlockChain.UpdateMember.UpdateMemberResponse
instance GHC.Classes.Eq Network.AWS.ManagedBlockChain.UpdateMember.UpdateMemberResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ManagedBlockChain.UpdateMember.UpdateMember
instance Control.DeepSeq.NFData Network.AWS.ManagedBlockChain.UpdateMember.UpdateMemberResponse
instance Data.Hashable.Class.Hashable Network.AWS.ManagedBlockChain.UpdateMember.UpdateMember
instance Control.DeepSeq.NFData Network.AWS.ManagedBlockChain.UpdateMember.UpdateMember
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ManagedBlockChain.UpdateMember.UpdateMember
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ManagedBlockChain.UpdateMember.UpdateMember
instance Network.AWS.Data.Path.ToPath Network.AWS.ManagedBlockChain.UpdateMember.UpdateMember
instance Network.AWS.Data.Query.ToQuery Network.AWS.ManagedBlockChain.UpdateMember.UpdateMember


-- | Updates a node configuration with new parameters.
--   
--   Applies only to Hyperledger Fabric.
module Network.AWS.ManagedBlockChain.UpdateNode

-- | <i>See:</i> <a>newUpdateNode</a> smart constructor.
data UpdateNode
UpdateNode' :: Maybe NodeLogPublishingConfiguration -> Maybe Text -> Text -> Text -> UpdateNode

-- | Configuration properties for publishing to Amazon CloudWatch Logs.
[$sel:logPublishingConfiguration:UpdateNode'] :: UpdateNode -> Maybe NodeLogPublishingConfiguration

-- | The unique identifier of the member that owns the node.
--   
--   Applies only to Hyperledger Fabric.
[$sel:memberId:UpdateNode'] :: UpdateNode -> Maybe Text

-- | The unique identifier of the network that the node is on.
[$sel:networkId:UpdateNode'] :: UpdateNode -> Text

-- | The unique identifier of the node.
[$sel:nodeId:UpdateNode'] :: UpdateNode -> Text

-- | Create a value of <a>UpdateNode</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:logPublishingConfiguration:UpdateNode'</a>,
--   <a>updateNode_logPublishingConfiguration</a> - Configuration
--   properties for publishing to Amazon CloudWatch Logs.
--   
--   <a>$sel:memberId:UpdateNode'</a>, <a>updateNode_memberId</a> - The
--   unique identifier of the member that owns the node.
--   
--   Applies only to Hyperledger Fabric.
--   
--   <a>$sel:networkId:UpdateNode'</a>, <a>updateNode_networkId</a> - The
--   unique identifier of the network that the node is on.
--   
--   <a>$sel:nodeId:UpdateNode'</a>, <a>updateNode_nodeId</a> - The unique
--   identifier of the node.
newUpdateNode :: Text -> Text -> UpdateNode

-- | Configuration properties for publishing to Amazon CloudWatch Logs.
updateNode_logPublishingConfiguration :: Lens' UpdateNode (Maybe NodeLogPublishingConfiguration)

-- | The unique identifier of the member that owns the node.
--   
--   Applies only to Hyperledger Fabric.
updateNode_memberId :: Lens' UpdateNode (Maybe Text)

-- | The unique identifier of the network that the node is on.
updateNode_networkId :: Lens' UpdateNode Text

-- | The unique identifier of the node.
updateNode_nodeId :: Lens' UpdateNode Text

-- | <i>See:</i> <a>newUpdateNodeResponse</a> smart constructor.
data UpdateNodeResponse
UpdateNodeResponse' :: Int -> UpdateNodeResponse

-- | The response's http status code.
[$sel:httpStatus:UpdateNodeResponse'] :: UpdateNodeResponse -> Int

-- | Create a value of <a>UpdateNodeResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateNodeResponse'</a>,
--   <a>updateNodeResponse_httpStatus</a> - The response's http status
--   code.
newUpdateNodeResponse :: Int -> UpdateNodeResponse

-- | The response's http status code.
updateNodeResponse_httpStatus :: Lens' UpdateNodeResponse Int
instance GHC.Generics.Generic Network.AWS.ManagedBlockChain.UpdateNode.UpdateNode
instance GHC.Show.Show Network.AWS.ManagedBlockChain.UpdateNode.UpdateNode
instance GHC.Read.Read Network.AWS.ManagedBlockChain.UpdateNode.UpdateNode
instance GHC.Classes.Eq Network.AWS.ManagedBlockChain.UpdateNode.UpdateNode
instance GHC.Generics.Generic Network.AWS.ManagedBlockChain.UpdateNode.UpdateNodeResponse
instance GHC.Show.Show Network.AWS.ManagedBlockChain.UpdateNode.UpdateNodeResponse
instance GHC.Read.Read Network.AWS.ManagedBlockChain.UpdateNode.UpdateNodeResponse
instance GHC.Classes.Eq Network.AWS.ManagedBlockChain.UpdateNode.UpdateNodeResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ManagedBlockChain.UpdateNode.UpdateNode
instance Control.DeepSeq.NFData Network.AWS.ManagedBlockChain.UpdateNode.UpdateNodeResponse
instance Data.Hashable.Class.Hashable Network.AWS.ManagedBlockChain.UpdateNode.UpdateNode
instance Control.DeepSeq.NFData Network.AWS.ManagedBlockChain.UpdateNode.UpdateNode
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ManagedBlockChain.UpdateNode.UpdateNode
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ManagedBlockChain.UpdateNode.UpdateNode
instance Network.AWS.Data.Path.ToPath Network.AWS.ManagedBlockChain.UpdateNode.UpdateNode
instance Network.AWS.Data.Query.ToQuery Network.AWS.ManagedBlockChain.UpdateNode.UpdateNode


-- | Casts a vote for a specified <tt>ProposalId</tt> on behalf of a
--   member. The member to vote as, specified by <tt>VoterMemberId</tt>,
--   must be in the same AWS account as the principal that calls the
--   action.
--   
--   Applies only to Hyperledger Fabric.
module Network.AWS.ManagedBlockChain.VoteOnProposal

-- | <i>See:</i> <a>newVoteOnProposal</a> smart constructor.
data VoteOnProposal
VoteOnProposal' :: Text -> Text -> Text -> VoteValue -> VoteOnProposal

-- | The unique identifier of the network.
[$sel:networkId:VoteOnProposal'] :: VoteOnProposal -> Text

-- | The unique identifier of the proposal.
[$sel:proposalId:VoteOnProposal'] :: VoteOnProposal -> Text

-- | The unique identifier of the member casting the vote.
[$sel:voterMemberId:VoteOnProposal'] :: VoteOnProposal -> Text

-- | The value of the vote.
[$sel:vote:VoteOnProposal'] :: VoteOnProposal -> VoteValue

-- | Create a value of <a>VoteOnProposal</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:networkId:VoteOnProposal'</a>, <a>voteOnProposal_networkId</a>
--   - The unique identifier of the network.
--   
--   <a>$sel:proposalId:VoteOnProposal'</a>,
--   <a>voteOnProposal_proposalId</a> - The unique identifier of the
--   proposal.
--   
--   <a>$sel:voterMemberId:VoteOnProposal'</a>,
--   <a>voteOnProposal_voterMemberId</a> - The unique identifier of the
--   member casting the vote.
--   
--   <a>$sel:vote:VoteOnProposal'</a>, <a>voteOnProposal_vote</a> - The
--   value of the vote.
newVoteOnProposal :: Text -> Text -> Text -> VoteValue -> VoteOnProposal

-- | The unique identifier of the network.
voteOnProposal_networkId :: Lens' VoteOnProposal Text

-- | The unique identifier of the proposal.
voteOnProposal_proposalId :: Lens' VoteOnProposal Text

-- | The unique identifier of the member casting the vote.
voteOnProposal_voterMemberId :: Lens' VoteOnProposal Text

-- | The value of the vote.
voteOnProposal_vote :: Lens' VoteOnProposal VoteValue

-- | <i>See:</i> <a>newVoteOnProposalResponse</a> smart constructor.
data VoteOnProposalResponse
VoteOnProposalResponse' :: Int -> VoteOnProposalResponse

-- | The response's http status code.
[$sel:httpStatus:VoteOnProposalResponse'] :: VoteOnProposalResponse -> Int

-- | Create a value of <a>VoteOnProposalResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:VoteOnProposalResponse'</a>,
--   <a>voteOnProposalResponse_httpStatus</a> - The response's http status
--   code.
newVoteOnProposalResponse :: Int -> VoteOnProposalResponse

-- | The response's http status code.
voteOnProposalResponse_httpStatus :: Lens' VoteOnProposalResponse Int
instance GHC.Generics.Generic Network.AWS.ManagedBlockChain.VoteOnProposal.VoteOnProposal
instance GHC.Show.Show Network.AWS.ManagedBlockChain.VoteOnProposal.VoteOnProposal
instance GHC.Read.Read Network.AWS.ManagedBlockChain.VoteOnProposal.VoteOnProposal
instance GHC.Classes.Eq Network.AWS.ManagedBlockChain.VoteOnProposal.VoteOnProposal
instance GHC.Generics.Generic Network.AWS.ManagedBlockChain.VoteOnProposal.VoteOnProposalResponse
instance GHC.Show.Show Network.AWS.ManagedBlockChain.VoteOnProposal.VoteOnProposalResponse
instance GHC.Read.Read Network.AWS.ManagedBlockChain.VoteOnProposal.VoteOnProposalResponse
instance GHC.Classes.Eq Network.AWS.ManagedBlockChain.VoteOnProposal.VoteOnProposalResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ManagedBlockChain.VoteOnProposal.VoteOnProposal
instance Control.DeepSeq.NFData Network.AWS.ManagedBlockChain.VoteOnProposal.VoteOnProposalResponse
instance Data.Hashable.Class.Hashable Network.AWS.ManagedBlockChain.VoteOnProposal.VoteOnProposal
instance Control.DeepSeq.NFData Network.AWS.ManagedBlockChain.VoteOnProposal.VoteOnProposal
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ManagedBlockChain.VoteOnProposal.VoteOnProposal
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ManagedBlockChain.VoteOnProposal.VoteOnProposal
instance Network.AWS.Data.Path.ToPath Network.AWS.ManagedBlockChain.VoteOnProposal.VoteOnProposal
instance Network.AWS.Data.Query.ToQuery Network.AWS.ManagedBlockChain.VoteOnProposal.VoteOnProposal


module Network.AWS.ManagedBlockChain.Lens

-- | A unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the operation. An idempotent operation completes no
--   more than one time. This identifier is required only if you make a
--   service request directly using an HTTP client. It is generated
--   automatically if you use an AWS SDK or the AWS CLI.
createMember_clientRequestToken :: Lens' CreateMember Text

-- | The unique identifier of the invitation that is sent to the member to
--   join the network.
createMember_invitationId :: Lens' CreateMember Text

-- | The unique identifier of the network in which the member is created.
createMember_networkId :: Lens' CreateMember Text

-- | Member configuration parameters.
createMember_memberConfiguration :: Lens' CreateMember MemberConfiguration

-- | The unique identifier of the member.
createMemberResponse_memberId :: Lens' CreateMemberResponse (Maybe Text)

-- | The response's http status code.
createMemberResponse_httpStatus :: Lens' CreateMemberResponse Int

-- | An optional status specifier. If provided, only networks currently in
--   this status are listed.
--   
--   Applies only to Hyperledger Fabric.
listNetworks_status :: Lens' ListNetworks (Maybe NetworkStatus)

-- | An optional framework specifier. If provided, only networks of this
--   framework type are listed.
listNetworks_framework :: Lens' ListNetworks (Maybe Framework)

-- | The pagination token that indicates the next set of results to
--   retrieve.
listNetworks_nextToken :: Lens' ListNetworks (Maybe Text)

-- | The name of the network.
listNetworks_name :: Lens' ListNetworks (Maybe Text)

-- | The maximum number of networks to list.
listNetworks_maxResults :: Lens' ListNetworks (Maybe Natural)

-- | An array of <tt>NetworkSummary</tt> objects that contain configuration
--   properties for each network.
listNetworksResponse_networks :: Lens' ListNetworksResponse (Maybe [NetworkSummary])

-- | The pagination token that indicates the next set of results to
--   retrieve.
listNetworksResponse_nextToken :: Lens' ListNetworksResponse (Maybe Text)

-- | The response's http status code.
listNetworksResponse_httpStatus :: Lens' ListNetworksResponse Int

-- | The unique identifier of the network for which the proposal is made.
getProposal_networkId :: Lens' GetProposal Text

-- | The unique identifier of the proposal.
getProposal_proposalId :: Lens' GetProposal Text

-- | Information about a proposal.
getProposalResponse_proposal :: Lens' GetProposalResponse (Maybe Proposal)

-- | The response's http status code.
getProposalResponse_httpStatus :: Lens' GetProposalResponse Int

-- | The Amazon Resource Name (ARN) of the resource. For more information
--   about ARNs and their format, see <a>Amazon Resource Names (ARNs)</a>
--   in the <i>AWS General Reference</i>.
listTagsForResource_resourceArn :: Lens' ListTagsForResource Text

-- | The tags assigned to the resource.
listTagsForResourceResponse_tags :: Lens' ListTagsForResourceResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
listTagsForResourceResponse_httpStatus :: Lens' ListTagsForResourceResponse Int

-- | Configuration properties of the blockchain framework relevant to the
--   network configuration.
createNetwork_frameworkConfiguration :: Lens' CreateNetwork (Maybe NetworkFrameworkConfiguration)

-- | An optional description for the network.
createNetwork_description :: Lens' CreateNetwork (Maybe Text)

-- | Tags to assign to the network. Each tag consists of a key and optional
--   value.
--   
--   When specifying tags during creation, you can specify multiple
--   key-value pairs in a single request, with an overall maximum of 50
--   tags added to each resource.
--   
--   For more information about tags, see <a>Tagging Resources</a> in the
--   <i>Amazon Managed Blockchain Ethereum Developer Guide</i>, or
--   <a>Tagging Resources</a> in the <i>Amazon Managed Blockchain
--   Hyperledger Fabric Developer Guide</i>.
createNetwork_tags :: Lens' CreateNetwork (Maybe (HashMap Text Text))

-- | A unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the operation. An idempotent operation completes no
--   more than one time. This identifier is required only if you make a
--   service request directly using an HTTP client. It is generated
--   automatically if you use an AWS SDK or the AWS CLI.
createNetwork_clientRequestToken :: Lens' CreateNetwork Text

-- | The name of the network.
createNetwork_name :: Lens' CreateNetwork Text

-- | The blockchain framework that the network uses.
createNetwork_framework :: Lens' CreateNetwork Framework

-- | The version of the blockchain framework that the network uses.
createNetwork_frameworkVersion :: Lens' CreateNetwork Text

-- | The voting rules used by the network to determine if a proposal is
--   approved.
createNetwork_votingPolicy :: Lens' CreateNetwork VotingPolicy

-- | Configuration properties for the first member within the network.
createNetwork_memberConfiguration :: Lens' CreateNetwork MemberConfiguration

-- | The unique identifier for the first member within the network.
createNetworkResponse_memberId :: Lens' CreateNetworkResponse (Maybe Text)

-- | The unique identifier for the network.
createNetworkResponse_networkId :: Lens' CreateNetworkResponse (Maybe Text)

-- | The response's http status code.
createNetworkResponse_httpStatus :: Lens' CreateNetworkResponse Int

-- | The pagination token that indicates the next set of results to
--   retrieve.
listProposals_nextToken :: Lens' ListProposals (Maybe Text)

-- | The maximum number of proposals to return.
listProposals_maxResults :: Lens' ListProposals (Maybe Natural)

-- | The unique identifier of the network.
listProposals_networkId :: Lens' ListProposals Text

-- | The summary of each proposal made on the network.
listProposalsResponse_proposals :: Lens' ListProposalsResponse (Maybe [ProposalSummary])

-- | The pagination token that indicates the next set of results to
--   retrieve.
listProposalsResponse_nextToken :: Lens' ListProposalsResponse (Maybe Text)

-- | The response's http status code.
listProposalsResponse_httpStatus :: Lens' ListProposalsResponse Int

-- | The pagination token that indicates the next set of results to
--   retrieve.
listInvitations_nextToken :: Lens' ListInvitations (Maybe Text)

-- | The maximum number of invitations to return.
listInvitations_maxResults :: Lens' ListInvitations (Maybe Natural)

-- | The invitations for the network.
listInvitationsResponse_invitations :: Lens' ListInvitationsResponse (Maybe [Invitation])

-- | The pagination token that indicates the next set of results to
--   retrieve.
listInvitationsResponse_nextToken :: Lens' ListInvitationsResponse (Maybe Text)

-- | The response's http status code.
listInvitationsResponse_httpStatus :: Lens' ListInvitationsResponse Int

-- | A description for the proposal that is visible to voting members, for
--   example, "Proposal to add Example Corp. as member."
createProposal_description :: Lens' CreateProposal (Maybe Text)

-- | Tags to assign to the proposal. Each tag consists of a key and
--   optional value.
--   
--   When specifying tags during creation, you can specify multiple
--   key-value pairs in a single request, with an overall maximum of 50
--   tags added to each resource. If the proposal is for a network
--   invitation, the invitation inherits the tags added to the proposal.
--   
--   For more information about tags, see <a>Tagging Resources</a> in the
--   <i>Amazon Managed Blockchain Ethereum Developer Guide</i>, or
--   <a>Tagging Resources</a> in the <i>Amazon Managed Blockchain
--   Hyperledger Fabric Developer Guide</i>.
createProposal_tags :: Lens' CreateProposal (Maybe (HashMap Text Text))

-- | A unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the operation. An idempotent operation completes no
--   more than one time. This identifier is required only if you make a
--   service request directly using an HTTP client. It is generated
--   automatically if you use an AWS SDK or the AWS CLI.
createProposal_clientRequestToken :: Lens' CreateProposal Text

-- | The unique identifier of the network for which the proposal is made.
createProposal_networkId :: Lens' CreateProposal Text

-- | The unique identifier of the member that is creating the proposal.
--   This identifier is especially useful for identifying the member making
--   the proposal when multiple members exist in a single AWS account.
createProposal_memberId :: Lens' CreateProposal Text

-- | The type of actions proposed, such as inviting a member or removing a
--   member. The types of <tt>Actions</tt> in a proposal are mutually
--   exclusive. For example, a proposal with <tt>Invitations</tt> actions
--   cannot also contain <tt>Removals</tt> actions.
createProposal_actions :: Lens' CreateProposal ProposalActions

-- | The unique identifier of the proposal.
createProposalResponse_proposalId :: Lens' CreateProposalResponse (Maybe Text)

-- | The response's http status code.
createProposalResponse_httpStatus :: Lens' CreateProposalResponse Int

-- | The unique identifier of the network to get information about.
getNetwork_networkId :: Lens' GetNetwork Text

-- | An object containing network configuration parameters.
getNetworkResponse_network :: Lens' GetNetworkResponse (Maybe Network)

-- | The response's http status code.
getNetworkResponse_httpStatus :: Lens' GetNetworkResponse Int

-- | The unique identifier of the member that owns the node.
--   
--   Applies only to Hyperledger Fabric and is required for Hyperledger
--   Fabric.
getNode_memberId :: Lens' GetNode (Maybe Text)

-- | The unique identifier of the network that the node is on.
getNode_networkId :: Lens' GetNode Text

-- | The unique identifier of the node.
getNode_nodeId :: Lens' GetNode Text

-- | Properties of the node configuration.
getNodeResponse_node :: Lens' GetNodeResponse (Maybe Node)

-- | The response's http status code.
getNodeResponse_httpStatus :: Lens' GetNodeResponse Int

-- | Configuration properties for publishing to Amazon CloudWatch Logs.
updateMember_logPublishingConfiguration :: Lens' UpdateMember (Maybe MemberLogPublishingConfiguration)

-- | The unique identifier of the Managed Blockchain network to which the
--   member belongs.
updateMember_networkId :: Lens' UpdateMember Text

-- | The unique identifier of the member.
updateMember_memberId :: Lens' UpdateMember Text

-- | The response's http status code.
updateMemberResponse_httpStatus :: Lens' UpdateMemberResponse Int

-- | The unique identifier of the network from which the member is removed.
deleteMember_networkId :: Lens' DeleteMember Text

-- | The unique identifier of the member to remove.
deleteMember_memberId :: Lens' DeleteMember Text

-- | The response's http status code.
deleteMemberResponse_httpStatus :: Lens' DeleteMemberResponse Int

-- | An optional status specifier. If provided, only members currently in
--   this status are listed.
listMembers_status :: Lens' ListMembers (Maybe MemberStatus)

-- | The pagination token that indicates the next set of results to
--   retrieve.
listMembers_nextToken :: Lens' ListMembers (Maybe Text)

-- | The optional name of the member to list.
listMembers_name :: Lens' ListMembers (Maybe Text)

-- | An optional Boolean value. If provided, the request is limited either
--   to members that the current AWS account owns (<tt>true</tt>) or that
--   other AWS accounts own (<tt>false</tt>). If omitted, all members are
--   listed.
listMembers_isOwned :: Lens' ListMembers (Maybe Bool)

-- | The maximum number of members to return in the request.
listMembers_maxResults :: Lens' ListMembers (Maybe Natural)

-- | The unique identifier of the network for which to list members.
listMembers_networkId :: Lens' ListMembers Text

-- | An array of <tt>MemberSummary</tt> objects. Each object contains
--   details about a network member.
listMembersResponse_members :: Lens' ListMembersResponse (Maybe [MemberSummary])

-- | The pagination token that indicates the next set of results to
--   retrieve.
listMembersResponse_nextToken :: Lens' ListMembersResponse (Maybe Text)

-- | The response's http status code.
listMembersResponse_httpStatus :: Lens' ListMembersResponse Int

-- | The unique identifier of the member that owns this node.
--   
--   Applies only to Hyperledger Fabric.
createNode_memberId :: Lens' CreateNode (Maybe Text)

-- | Tags to assign to the node. Each tag consists of a key and optional
--   value.
--   
--   When specifying tags during creation, you can specify multiple
--   key-value pairs in a single request, with an overall maximum of 50
--   tags added to each resource.
--   
--   For more information about tags, see <a>Tagging Resources</a> in the
--   <i>Amazon Managed Blockchain Ethereum Developer Guide</i>, or
--   <a>Tagging Resources</a> in the <i>Amazon Managed Blockchain
--   Hyperledger Fabric Developer Guide</i>.
createNode_tags :: Lens' CreateNode (Maybe (HashMap Text Text))

-- | A unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the operation. An idempotent operation completes no
--   more than one time. This identifier is required only if you make a
--   service request directly using an HTTP client. It is generated
--   automatically if you use an AWS SDK or the AWS CLI.
createNode_clientRequestToken :: Lens' CreateNode Text

-- | The unique identifier of the network for the node.
--   
--   Ethereum public networks have the following <tt>NetworkId</tt>s:
--   
--   <ul>
--   <li><pre>n-ethereum-mainnet</pre></li>
--   <li><pre>n-ethereum-rinkeby</pre></li>
--   <li><pre>n-ethereum-ropsten</pre></li>
--   </ul>
createNode_networkId :: Lens' CreateNode Text

-- | The properties of a node configuration.
createNode_nodeConfiguration :: Lens' CreateNode NodeConfiguration

-- | The unique identifier of the node.
createNodeResponse_nodeId :: Lens' CreateNodeResponse (Maybe Text)

-- | The response's http status code.
createNodeResponse_httpStatus :: Lens' CreateNodeResponse Int

-- | The pagination token that indicates the next set of results to
--   retrieve.
listProposalVotes_nextToken :: Lens' ListProposalVotes (Maybe Text)

-- | The maximum number of votes to return.
listProposalVotes_maxResults :: Lens' ListProposalVotes (Maybe Natural)

-- | The unique identifier of the network.
listProposalVotes_networkId :: Lens' ListProposalVotes Text

-- | The unique identifier of the proposal.
listProposalVotes_proposalId :: Lens' ListProposalVotes Text

-- | The pagination token that indicates the next set of results to
--   retrieve.
listProposalVotesResponse_nextToken :: Lens' ListProposalVotesResponse (Maybe Text)

-- | The list of votes.
listProposalVotesResponse_proposalVotes :: Lens' ListProposalVotesResponse (Maybe [VoteSummary])

-- | The response's http status code.
listProposalVotesResponse_httpStatus :: Lens' ListProposalVotesResponse Int

-- | The unique identifier of the network.
voteOnProposal_networkId :: Lens' VoteOnProposal Text

-- | The unique identifier of the proposal.
voteOnProposal_proposalId :: Lens' VoteOnProposal Text

-- | The unique identifier of the member casting the vote.
voteOnProposal_voterMemberId :: Lens' VoteOnProposal Text

-- | The value of the vote.
voteOnProposal_vote :: Lens' VoteOnProposal VoteValue

-- | The response's http status code.
voteOnProposalResponse_httpStatus :: Lens' VoteOnProposalResponse Int

-- | The Amazon Resource Name (ARN) of the resource. For more information
--   about ARNs and their format, see <a>Amazon Resource Names (ARNs)</a>
--   in the <i>AWS General Reference</i>.
tagResource_resourceArn :: Lens' TagResource Text

-- | The tags to assign to the specified resource. Tag values can be empty,
--   for example, <tt>"MyTagKey" : ""</tt>. You can specify multiple
--   key-value pairs in a single request, with an overall maximum of 50
--   tags added to each resource.
tagResource_tags :: Lens' TagResource (HashMap Text Text)

-- | The response's http status code.
tagResourceResponse_httpStatus :: Lens' TagResourceResponse Int

-- | The Amazon Resource Name (ARN) of the resource. For more information
--   about ARNs and their format, see <a>Amazon Resource Names (ARNs)</a>
--   in the <i>AWS General Reference</i>.
untagResource_resourceArn :: Lens' UntagResource Text

-- | The tag keys.
untagResource_tagKeys :: Lens' UntagResource [Text]

-- | The response's http status code.
untagResourceResponse_httpStatus :: Lens' UntagResourceResponse Int

-- | The unique identifier of the network to which the member belongs.
getMember_networkId :: Lens' GetMember Text

-- | The unique identifier of the member.
getMember_memberId :: Lens' GetMember Text

-- | The properties of a member.
getMemberResponse_member :: Lens' GetMemberResponse (Maybe Member)

-- | The response's http status code.
getMemberResponse_httpStatus :: Lens' GetMemberResponse Int

-- | The unique identifier of the invitation to reject.
rejectInvitation_invitationId :: Lens' RejectInvitation Text

-- | The response's http status code.
rejectInvitationResponse_httpStatus :: Lens' RejectInvitationResponse Int

-- | Configuration properties for publishing to Amazon CloudWatch Logs.
updateNode_logPublishingConfiguration :: Lens' UpdateNode (Maybe NodeLogPublishingConfiguration)

-- | The unique identifier of the member that owns the node.
--   
--   Applies only to Hyperledger Fabric.
updateNode_memberId :: Lens' UpdateNode (Maybe Text)

-- | The unique identifier of the network that the node is on.
updateNode_networkId :: Lens' UpdateNode Text

-- | The unique identifier of the node.
updateNode_nodeId :: Lens' UpdateNode Text

-- | The response's http status code.
updateNodeResponse_httpStatus :: Lens' UpdateNodeResponse Int

-- | The unique identifier of the member that owns this node.
--   
--   Applies only to Hyperledger Fabric and is required for Hyperledger
--   Fabric.
deleteNode_memberId :: Lens' DeleteNode (Maybe Text)

-- | The unique identifier of the network that the node is on.
--   
--   Ethereum public networks have the following <tt>NetworkId</tt>s:
--   
--   <ul>
--   <li><pre>n-ethereum-mainnet</pre></li>
--   <li><pre>n-ethereum-rinkeby</pre></li>
--   <li><pre>n-ethereum-ropsten</pre></li>
--   </ul>
deleteNode_networkId :: Lens' DeleteNode Text

-- | The unique identifier of the node.
deleteNode_nodeId :: Lens' DeleteNode Text

-- | The response's http status code.
deleteNodeResponse_httpStatus :: Lens' DeleteNodeResponse Int

-- | An optional status specifier. If provided, only nodes currently in
--   this status are listed.
listNodes_status :: Lens' ListNodes (Maybe NodeStatus)

-- | The unique identifier of the member who owns the nodes to list.
--   
--   Applies only to Hyperledger Fabric and is required for Hyperledger
--   Fabric.
listNodes_memberId :: Lens' ListNodes (Maybe Text)

-- | The pagination token that indicates the next set of results to
--   retrieve.
listNodes_nextToken :: Lens' ListNodes (Maybe Text)

-- | The maximum number of nodes to list.
listNodes_maxResults :: Lens' ListNodes (Maybe Natural)

-- | The unique identifier of the network for which to list nodes.
listNodes_networkId :: Lens' ListNodes Text

-- | The pagination token that indicates the next set of results to
--   retrieve.
listNodesResponse_nextToken :: Lens' ListNodesResponse (Maybe Text)

-- | An array of <tt>NodeSummary</tt> objects that contain configuration
--   properties for each node.
listNodesResponse_nodes :: Lens' ListNodesResponse (Maybe [NodeSummary])

-- | The response's http status code.
listNodesResponse_httpStatus :: Lens' ListNodesResponse Int

-- | The percentage of votes among all members that must be <tt>YES</tt>
--   for a proposal to be approved. For example, a
--   <tt>ThresholdPercentage</tt> value of <tt>50</tt> indicates 50%. The
--   <tt>ThresholdComparator</tt> determines the precise comparison. If a
--   <tt>ThresholdPercentage</tt> value of <tt>50</tt> is specified on a
--   network with 10 members, along with a <tt>ThresholdComparator</tt>
--   value of <tt>GREATER_THAN</tt>, this indicates that 6 <tt>YES</tt>
--   votes are required for the proposal to be approved.
approvalThresholdPolicy_thresholdPercentage :: Lens' ApprovalThresholdPolicy (Maybe Natural)

-- | Determines whether the vote percentage must be greater than the
--   <tt>ThresholdPercentage</tt> or must be greater than or equal to the
--   <tt>ThreholdPercentage</tt> to be approved.
approvalThresholdPolicy_thresholdComparator :: Lens' ApprovalThresholdPolicy (Maybe ThresholdComparator)

-- | The duration from the time that a proposal is created until it
--   expires. If members cast neither the required number of <tt>YES</tt>
--   votes to approve the proposal nor the number of <tt>NO</tt> votes
--   required to reject it before the duration expires, the proposal is
--   <tt>EXPIRED</tt> and <tt>ProposalActions</tt> are not carried out.
approvalThresholdPolicy_proposalDurationInHours :: Lens' ApprovalThresholdPolicy (Maybe Natural)

-- | The status of the invitation:
--   
--   <ul>
--   <li><tt>PENDING</tt> - The invitee has not created a member to join
--   the network, and the invitation has not yet expired.</li>
--   <li><tt>ACCEPTING</tt> - The invitee has begun creating a member, and
--   creation has not yet completed.</li>
--   <li><tt>ACCEPTED</tt> - The invitee created a member and joined the
--   network using the <tt>InvitationID</tt>.</li>
--   <li><tt>REJECTED</tt> - The invitee rejected the invitation.</li>
--   <li><tt>EXPIRED</tt> - The invitee neither created a member nor
--   rejected the invitation before the <tt>ExpirationDate</tt>.</li>
--   </ul>
invitation_status :: Lens' Invitation (Maybe InvitationStatus)

-- | The Amazon Resource Name (ARN) of the invitation. For more information
--   about ARNs and their format, see <a>Amazon Resource Names (ARNs)</a>
--   in the <i>AWS General Reference</i>.
invitation_arn :: Lens' Invitation (Maybe Text)

-- | The unique identifier for the invitation.
invitation_invitationId :: Lens' Invitation (Maybe Text)

-- | The date and time that the invitation expires. This is the
--   <tt>CreationDate</tt> plus the <tt>ProposalDurationInHours</tt> that
--   is specified in the <tt>ProposalThresholdPolicy</tt>. After this date
--   and time, the invitee can no longer create a member and join the
--   network using this <tt>InvitationId</tt>.
invitation_expirationDate :: Lens' Invitation (Maybe UTCTime)

-- | Undocumented member.
invitation_networkSummary :: Lens' Invitation (Maybe NetworkSummary)

-- | The date and time that the invitation was created.
invitation_creationDate :: Lens' Invitation (Maybe UTCTime)

-- | The AWS account ID to invite.
inviteAction_principal :: Lens' InviteAction Text

-- | Indicates whether logging is enabled.
logConfiguration_enabled :: Lens' LogConfiguration (Maybe Bool)

-- | Parameters for publishing logs to Amazon CloudWatch Logs.
logConfigurations_cloudwatch :: Lens' LogConfigurations (Maybe LogConfiguration)

-- | The status of a member.
--   
--   <ul>
--   <li><tt>CREATING</tt> - The AWS account is in the process of creating
--   a member.</li>
--   <li><tt>AVAILABLE</tt> - The member has been created and can
--   participate in the network.</li>
--   <li><tt>CREATE_FAILED</tt> - The AWS account attempted to create a
--   member and creation failed.</li>
--   <li><tt>UPDATING</tt> - The member is in the process of being
--   updated.</li>
--   <li><tt>DELETING</tt> - The member and all associated resources are in
--   the process of being deleted. Either the AWS account that owns the
--   member deleted it, or the member is being deleted as the result of an
--   <tt>APPROVED</tt> <tt>PROPOSAL</tt> to remove the member.</li>
--   <li><tt>DELETED</tt> - The member can no longer participate on the
--   network and all associated resources are deleted. Either the AWS
--   account that owns the member deleted it, or the member is being
--   deleted as the result of an <tt>APPROVED</tt> <tt>PROPOSAL</tt> to
--   remove the member.</li>
--   <li><tt>INACCESSIBLE_ENCRYPTION_KEY</tt> - The member is impaired and
--   might not function as expected because it cannot access the specified
--   customer managed key in AWS KMS for encryption at rest. Either the KMS
--   key was disabled or deleted, or the grants on the key were revoked.The
--   effect of disabling or deleting a key, or revoking a grant is not
--   immediate. The member resource might take some time to find that the
--   key is inaccessible. When a resource is in this state, we recommend
--   deleting and recreating the resource.</li>
--   </ul>
member_status :: Lens' Member (Maybe MemberStatus)

-- | The Amazon Resource Name (ARN) of the customer managed key in AWS Key
--   Management Service (AWS KMS) that the member uses for encryption at
--   rest. If the value of this parameter is <tt>"AWS Owned KMS Key"</tt>,
--   the member uses an AWS owned KMS key for encryption. This parameter is
--   inherited by the nodes that this member owns.
member_kmsKeyArn :: Lens' Member (Maybe Text)

-- | Configuration properties for logging events associated with a member.
member_logPublishingConfiguration :: Lens' Member (Maybe MemberLogPublishingConfiguration)

-- | The Amazon Resource Name (ARN) of the member. For more information
--   about ARNs and their format, see <a>Amazon Resource Names (ARNs)</a>
--   in the <i>AWS General Reference</i>.
member_arn :: Lens' Member (Maybe Text)

-- | The unique identifier of the network to which the member belongs.
member_networkId :: Lens' Member (Maybe Text)

-- | The name of the member.
member_name :: Lens' Member (Maybe Text)

-- | The unique identifier of the member.
member_id :: Lens' Member (Maybe Text)

-- | The date and time that the member was created.
member_creationDate :: Lens' Member (Maybe UTCTime)

-- | Attributes relevant to a member for the blockchain framework that the
--   Managed Blockchain network uses.
member_frameworkAttributes :: Lens' Member (Maybe MemberFrameworkAttributes)

-- | An optional description for the member.
member_description :: Lens' Member (Maybe Text)

-- | Tags assigned to the member. Tags consist of a key and optional value.
--   For more information about tags, see <a>Tagging Resources</a> in the
--   <i>Amazon Managed Blockchain Hyperledger Fabric Developer Guide</i>.
member_tags :: Lens' Member (Maybe (HashMap Text Text))

-- | The Amazon Resource Name (ARN) of the customer managed key in AWS Key
--   Management Service (AWS KMS) to use for encryption at rest in the
--   member. This parameter is inherited by any nodes that this member
--   creates.
--   
--   Use one of the following options to specify this parameter:
--   
--   <ul>
--   <li><b>Undefined or empty string</b> - The member uses an AWS owned
--   KMS key for encryption by default.</li>
--   <li><b>A valid symmetric customer managed KMS key</b> - The member
--   uses the specified key for encryption.Amazon Managed Blockchain
--   doesn't support asymmetric keys. For more information, see <a>Using
--   symmetric and asymmetric keys</a> in the <i>AWS Key Management Service
--   Developer Guide</i>.The following is an example of a KMS key ARN:
--   <tt>arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</tt></li>
--   </ul>
memberConfiguration_kmsKeyArn :: Lens' MemberConfiguration (Maybe Text)

-- | Configuration properties for logging events associated with a member
--   of a Managed Blockchain network.
memberConfiguration_logPublishingConfiguration :: Lens' MemberConfiguration (Maybe MemberLogPublishingConfiguration)

-- | An optional description of the member.
memberConfiguration_description :: Lens' MemberConfiguration (Maybe Text)

-- | Tags assigned to the member. Tags consist of a key and optional value.
--   For more information about tags, see <a>Tagging Resources</a> in the
--   <i>Amazon Managed Blockchain Hyperledger Fabric Developer Guide</i>.
--   
--   When specifying tags during creation, you can specify multiple
--   key-value pairs in a single request, with an overall maximum of 50
--   tags added to each resource.
memberConfiguration_tags :: Lens' MemberConfiguration (Maybe (HashMap Text Text))

-- | The name of the member.
memberConfiguration_name :: Lens' MemberConfiguration Text

-- | Configuration properties of the blockchain framework relevant to the
--   member.
memberConfiguration_frameworkConfiguration :: Lens' MemberConfiguration MemberFrameworkConfiguration

-- | The endpoint used to access the member's certificate authority.
memberFabricAttributes_caEndpoint :: Lens' MemberFabricAttributes (Maybe Text)

-- | The user name for the initial administrator user for the member.
memberFabricAttributes_adminUsername :: Lens' MemberFabricAttributes (Maybe Text)

-- | The user name for the member's initial administrative user.
memberFabricConfiguration_adminUsername :: Lens' MemberFabricConfiguration Text

-- | The password for the member's initial administrative user. The
--   <tt>AdminPassword</tt> must be at least eight characters long and no
--   more than 32 characters. It must contain at least one uppercase
--   letter, one lowercase letter, and one digit. It cannot have a single
--   quotation mark (‘), a double quotation marks (“), a forward slash(/),
--   a backward slash(\), @, or a space.
memberFabricConfiguration_adminPassword :: Lens' MemberFabricConfiguration Text

-- | Configuration properties for logging events associated with a member's
--   Certificate Authority (CA). CA logs help you determine when a member
--   in your account joins the network, or when new peers register with a
--   member CA.
memberFabricLogPublishingConfiguration_caLogs :: Lens' MemberFabricLogPublishingConfiguration (Maybe LogConfigurations)

-- | Attributes of Hyperledger Fabric relevant to a member on a Managed
--   Blockchain network that uses Hyperledger Fabric.
memberFrameworkAttributes_fabric :: Lens' MemberFrameworkAttributes (Maybe MemberFabricAttributes)

-- | Attributes of Hyperledger Fabric for a member on a Managed Blockchain
--   network that uses Hyperledger Fabric.
memberFrameworkConfiguration_fabric :: Lens' MemberFrameworkConfiguration (Maybe MemberFabricConfiguration)

-- | Configuration properties for logging events associated with a member
--   of a Managed Blockchain network using the Hyperledger Fabric
--   framework.
memberLogPublishingConfiguration_fabric :: Lens' MemberLogPublishingConfiguration (Maybe MemberFabricLogPublishingConfiguration)

-- | The status of the member.
--   
--   <ul>
--   <li><tt>CREATING</tt> - The AWS account is in the process of creating
--   a member.</li>
--   <li><tt>AVAILABLE</tt> - The member has been created and can
--   participate in the network.</li>
--   <li><tt>CREATE_FAILED</tt> - The AWS account attempted to create a
--   member and creation failed.</li>
--   <li><tt>UPDATING</tt> - The member is in the process of being
--   updated.</li>
--   <li><tt>DELETING</tt> - The member and all associated resources are in
--   the process of being deleted. Either the AWS account that owns the
--   member deleted it, or the member is being deleted as the result of an
--   <tt>APPROVED</tt> <tt>PROPOSAL</tt> to remove the member.</li>
--   <li><tt>DELETED</tt> - The member can no longer participate on the
--   network and all associated resources are deleted. Either the AWS
--   account that owns the member deleted it, or the member is being
--   deleted as the result of an <tt>APPROVED</tt> <tt>PROPOSAL</tt> to
--   remove the member.</li>
--   <li><tt>INACCESSIBLE_ENCRYPTION_KEY</tt> - The member is impaired and
--   might not function as expected because it cannot access the specified
--   customer managed key in AWS Key Management Service (AWS KMS) for
--   encryption at rest. Either the KMS key was disabled or deleted, or the
--   grants on the key were revoked.The effect of disabling or deleting a
--   key, or revoking a grant is not immediate. The member resource might
--   take some time to find that the key is inaccessible. When a resource
--   is in this state, we recommend deleting and recreating the
--   resource.</li>
--   </ul>
memberSummary_status :: Lens' MemberSummary (Maybe MemberStatus)

-- | The Amazon Resource Name (ARN) of the member. For more information
--   about ARNs and their format, see <a>Amazon Resource Names (ARNs)</a>
--   in the <i>AWS General Reference</i>.
memberSummary_arn :: Lens' MemberSummary (Maybe Text)

-- | The name of the member.
memberSummary_name :: Lens' MemberSummary (Maybe Text)

-- | The unique identifier of the member.
memberSummary_id :: Lens' MemberSummary (Maybe Text)

-- | An indicator of whether the member is owned by your AWS account or a
--   different AWS account.
memberSummary_isOwned :: Lens' MemberSummary (Maybe Bool)

-- | The date and time that the member was created.
memberSummary_creationDate :: Lens' MemberSummary (Maybe UTCTime)

-- | An optional description of the member.
memberSummary_description :: Lens' MemberSummary (Maybe Text)

-- | The current status of the network.
network_status :: Lens' Network (Maybe NetworkStatus)

-- | The blockchain framework that the network uses.
network_framework :: Lens' Network (Maybe Framework)

-- | The Amazon Resource Name (ARN) of the network. For more information
--   about ARNs and their format, see <a>Amazon Resource Names (ARNs)</a>
--   in the <i>AWS General Reference</i>.
network_arn :: Lens' Network (Maybe Text)

-- | The version of the blockchain framework that the network uses.
network_frameworkVersion :: Lens' Network (Maybe Text)

-- | The VPC endpoint service name of the VPC endpoint service of the
--   network. Members use the VPC endpoint service name to create a VPC
--   endpoint to access network resources.
network_vpcEndpointServiceName :: Lens' Network (Maybe Text)

-- | The name of the network.
network_name :: Lens' Network (Maybe Text)

-- | The unique identifier of the network.
network_id :: Lens' Network (Maybe Text)

-- | The voting rules for the network to decide if a proposal is accepted.
network_votingPolicy :: Lens' Network (Maybe VotingPolicy)

-- | The date and time that the network was created.
network_creationDate :: Lens' Network (Maybe UTCTime)

-- | Attributes of the blockchain framework that the network uses.
network_frameworkAttributes :: Lens' Network (Maybe NetworkFrameworkAttributes)

-- | Attributes of the blockchain framework for the network.
network_description :: Lens' Network (Maybe Text)

-- | Tags assigned to the network. Each tag consists of a key and optional
--   value.
--   
--   For more information about tags, see <a>Tagging Resources</a> in the
--   <i>Amazon Managed Blockchain Ethereum Developer Guide</i>, or
--   <a>Tagging Resources</a> in the <i>Amazon Managed Blockchain
--   Hyperledger Fabric Developer Guide</i>.
network_tags :: Lens' Network (Maybe (HashMap Text Text))

-- | The Ethereum <tt>CHAIN_ID</tt> associated with the Ethereum network.
--   Chain IDs are as follows:
--   
--   <ul>
--   <li>mainnet = <tt>1</tt></li>
--   <li>rinkeby = <tt>4</tt></li>
--   <li>ropsten = <tt>3</tt></li>
--   </ul>
networkEthereumAttributes_chainId :: Lens' NetworkEthereumAttributes (Maybe Text)

-- | The edition of Amazon Managed Blockchain that Hyperledger Fabric uses.
--   For more information, see <a>Amazon Managed Blockchain Pricing</a>.
networkFabricAttributes_edition :: Lens' NetworkFabricAttributes (Maybe Edition)

-- | The endpoint of the ordering service for the network.
networkFabricAttributes_orderingServiceEndpoint :: Lens' NetworkFabricAttributes (Maybe Text)

-- | The edition of Amazon Managed Blockchain that the network uses. For
--   more information, see <a>Amazon Managed Blockchain Pricing</a>.
networkFabricConfiguration_edition :: Lens' NetworkFabricConfiguration Edition

-- | Attributes of Hyperledger Fabric for a Managed Blockchain network that
--   uses Hyperledger Fabric.
networkFrameworkAttributes_fabric :: Lens' NetworkFrameworkAttributes (Maybe NetworkFabricAttributes)

-- | Attributes of an Ethereum network for Managed Blockchain resources
--   participating in an Ethereum network.
networkFrameworkAttributes_ethereum :: Lens' NetworkFrameworkAttributes (Maybe NetworkEthereumAttributes)

-- | Hyperledger Fabric configuration properties for a Managed Blockchain
--   network that uses Hyperledger Fabric.
networkFrameworkConfiguration_fabric :: Lens' NetworkFrameworkConfiguration (Maybe NetworkFabricConfiguration)

-- | The current status of the network.
networkSummary_status :: Lens' NetworkSummary (Maybe NetworkStatus)

-- | The blockchain framework that the network uses.
networkSummary_framework :: Lens' NetworkSummary (Maybe Framework)

-- | The Amazon Resource Name (ARN) of the network. For more information
--   about ARNs and their format, see <a>Amazon Resource Names (ARNs)</a>
--   in the <i>AWS General Reference</i>.
networkSummary_arn :: Lens' NetworkSummary (Maybe Text)

-- | The version of the blockchain framework that the network uses.
networkSummary_frameworkVersion :: Lens' NetworkSummary (Maybe Text)

-- | The name of the network.
networkSummary_name :: Lens' NetworkSummary (Maybe Text)

-- | The unique identifier of the network.
networkSummary_id :: Lens' NetworkSummary (Maybe Text)

-- | The date and time that the network was created.
networkSummary_creationDate :: Lens' NetworkSummary (Maybe UTCTime)

-- | An optional description of the network.
networkSummary_description :: Lens' NetworkSummary (Maybe Text)

-- | The status of the node.
--   
--   <ul>
--   <li><tt>CREATING</tt> - The AWS account is in the process of creating
--   a node.</li>
--   <li><tt>AVAILABLE</tt> - The node has been created and can participate
--   in the network.</li>
--   <li><tt>UNHEALTHY</tt> - The node is impaired and might not function
--   as expected. Amazon Managed Blockchain automatically finds nodes in
--   this state and tries to recover them. If a node is recoverable, it
--   returns to <tt>AVAILABLE</tt>. Otherwise, it moves to <tt>FAILED</tt>
--   status.</li>
--   <li><tt>CREATE_FAILED</tt> - The AWS account attempted to create a
--   node and creation failed.</li>
--   <li><tt>UPDATING</tt> - The node is in the process of being
--   updated.</li>
--   <li><tt>DELETING</tt> - The node is in the process of being
--   deleted.</li>
--   <li><tt>DELETED</tt> - The node can no longer participate on the
--   network.</li>
--   <li><tt>FAILED</tt> - The node is no longer functional, cannot be
--   recovered, and must be deleted.</li>
--   <li><tt>INACCESSIBLE_ENCRYPTION_KEY</tt> - The node is impaired and
--   might not function as expected because it cannot access the specified
--   customer managed key in AWS KMS for encryption at rest. Either the KMS
--   key was disabled or deleted, or the grants on the key were revoked.The
--   effect of disabling or deleting a key, or revoking a grant is not
--   immediate. The node resource might take some time to find that the key
--   is inaccessible. When a resource is in this state, we recommend
--   deleting and recreating the resource.</li>
--   </ul>
node_status :: Lens' Node (Maybe NodeStatus)

-- | The Amazon Resource Name (ARN) of the customer managed key in AWS Key
--   Management Service (AWS KMS) that the node uses for encryption at
--   rest. If the value of this parameter is <tt>"AWS Owned KMS Key"</tt>,
--   the node uses an AWS owned KMS key for encryption. The node inherits
--   this parameter from the member that it belongs to.
--   
--   Applies only to Hyperledger Fabric.
node_kmsKeyArn :: Lens' Node (Maybe Text)

-- | Configuration properties for logging events associated with a peer
--   node on a Hyperledger Fabric network on Managed Blockchain.
node_logPublishingConfiguration :: Lens' Node (Maybe NodeLogPublishingConfiguration)

-- | The unique identifier of the member to which the node belongs.
--   
--   Applies only to Hyperledger Fabric.
node_memberId :: Lens' Node (Maybe Text)

-- | The Amazon Resource Name (ARN) of the node. For more information about
--   ARNs and their format, see <a>Amazon Resource Names (ARNs)</a> in the
--   <i>AWS General Reference</i>.
node_arn :: Lens' Node (Maybe Text)

-- | The unique identifier of the network that the node is on.
node_networkId :: Lens' Node (Maybe Text)

-- | The instance type of the node.
node_instanceType :: Lens' Node (Maybe Text)

-- | The state database that the node uses. Values are <tt>LevelDB</tt> or
--   <tt>CouchDB</tt>.
--   
--   Applies only to Hyperledger Fabric.
node_stateDB :: Lens' Node (Maybe StateDBType)

-- | The Availability Zone in which the node exists. Required for Ethereum
--   nodes.
node_availabilityZone :: Lens' Node (Maybe Text)

-- | The unique identifier of the node.
node_id :: Lens' Node (Maybe Text)

-- | The date and time that the node was created.
node_creationDate :: Lens' Node (Maybe UTCTime)

-- | Attributes of the blockchain framework being used.
node_frameworkAttributes :: Lens' Node (Maybe NodeFrameworkAttributes)

-- | Tags assigned to the node. Each tag consists of a key and optional
--   value.
--   
--   For more information about tags, see <a>Tagging Resources</a> in the
--   <i>Amazon Managed Blockchain Ethereum Developer Guide</i>, or
--   <a>Tagging Resources</a> in the <i>Amazon Managed Blockchain
--   Hyperledger Fabric Developer Guide</i>.
node_tags :: Lens' Node (Maybe (HashMap Text Text))

-- | Configuration properties for logging events associated with a peer
--   node on a Hyperledger Fabric network on Managed Blockchain.
nodeConfiguration_logPublishingConfiguration :: Lens' NodeConfiguration (Maybe NodeLogPublishingConfiguration)

-- | The state database that the node uses. Values are <tt>LevelDB</tt> or
--   <tt>CouchDB</tt>. When using an Amazon Managed Blockchain network with
--   Hyperledger Fabric version 1.4 or later, the default is
--   <tt>CouchDB</tt>.
--   
--   Applies only to Hyperledger Fabric.
nodeConfiguration_stateDB :: Lens' NodeConfiguration (Maybe StateDBType)

-- | The Availability Zone in which the node exists. Required for Ethereum
--   nodes.
nodeConfiguration_availabilityZone :: Lens' NodeConfiguration (Maybe Text)

-- | The Amazon Managed Blockchain instance type for the node.
nodeConfiguration_instanceType :: Lens' NodeConfiguration Text

-- | The endpoint on which the Ethereum node listens to run Ethereum
--   JSON-RPC methods over HTTP connections from a client. Use this
--   endpoint in client code for smart contracts when using an HTTP
--   connection. Connections to this endpoint are authenticated using
--   <a>Signature Version 4</a>.
nodeEthereumAttributes_httpEndpoint :: Lens' NodeEthereumAttributes (Maybe Text)

-- | The endpoint on which the Ethereum node listens to run Ethereum
--   JSON-RPC methods over WebSockets connections from a client. Use this
--   endpoint in client code for smart contracts when using a WebSockets
--   connection. Connections to this endpoint are authenticated using
--   <a>Signature Version 4</a>.
nodeEthereumAttributes_webSocketEndpoint :: Lens' NodeEthereumAttributes (Maybe Text)

-- | The endpoint that identifies the peer node for peer channel-based
--   event services.
nodeFabricAttributes_peerEventEndpoint :: Lens' NodeFabricAttributes (Maybe Text)

-- | The endpoint that identifies the peer node for all services except
--   peer channel-based event services.
nodeFabricAttributes_peerEndpoint :: Lens' NodeFabricAttributes (Maybe Text)

-- | Configuration properties for logging events associated with chaincode
--   execution on a peer node. Chaincode logs contain the results of
--   instantiating, invoking, and querying the chaincode. A peer can run
--   multiple instances of chaincode. When enabled, a log stream is created
--   for all chaincodes, with an individual log stream for each chaincode.
nodeFabricLogPublishingConfiguration_chaincodeLogs :: Lens' NodeFabricLogPublishingConfiguration (Maybe LogConfigurations)

-- | Configuration properties for a peer node log. Peer node logs contain
--   messages generated when your client submits transaction proposals to
--   peer nodes, requests to join channels, enrolls an admin peer, and
--   lists the chaincode instances on a peer node.
nodeFabricLogPublishingConfiguration_peerLogs :: Lens' NodeFabricLogPublishingConfiguration (Maybe LogConfigurations)

-- | Attributes of Hyperledger Fabric for a peer node on a Managed
--   Blockchain network that uses Hyperledger Fabric.
nodeFrameworkAttributes_fabric :: Lens' NodeFrameworkAttributes (Maybe NodeFabricAttributes)

-- | Attributes of Ethereum for a node on a Managed Blockchain network that
--   uses Ethereum.
nodeFrameworkAttributes_ethereum :: Lens' NodeFrameworkAttributes (Maybe NodeEthereumAttributes)

-- | Configuration properties for logging events associated with a node
--   that is owned by a member of a Managed Blockchain network using the
--   Hyperledger Fabric framework.
nodeLogPublishingConfiguration_fabric :: Lens' NodeLogPublishingConfiguration (Maybe NodeFabricLogPublishingConfiguration)

-- | The status of the node.
nodeSummary_status :: Lens' NodeSummary (Maybe NodeStatus)

-- | The Amazon Resource Name (ARN) of the node. For more information about
--   ARNs and their format, see <a>Amazon Resource Names (ARNs)</a> in the
--   <i>AWS General Reference</i>.
nodeSummary_arn :: Lens' NodeSummary (Maybe Text)

-- | The EC2 instance type for the node.
nodeSummary_instanceType :: Lens' NodeSummary (Maybe Text)

-- | The Availability Zone in which the node exists.
nodeSummary_availabilityZone :: Lens' NodeSummary (Maybe Text)

-- | The unique identifier of the node.
nodeSummary_id :: Lens' NodeSummary (Maybe Text)

-- | The date and time that the node was created.
nodeSummary_creationDate :: Lens' NodeSummary (Maybe UTCTime)

-- | The status of the proposal. Values are as follows:
--   
--   <ul>
--   <li><tt>IN_PROGRESS</tt> - The proposal is active and open for member
--   voting.</li>
--   <li><tt>APPROVED</tt> - The proposal was approved with sufficient
--   <tt>YES</tt> votes among members according to the
--   <tt>VotingPolicy</tt> specified for the <tt>Network</tt>. The
--   specified proposal actions are carried out.</li>
--   <li><tt>REJECTED</tt> - The proposal was rejected with insufficient
--   <tt>YES</tt> votes among members according to the
--   <tt>VotingPolicy</tt> specified for the <tt>Network</tt>. The
--   specified <tt>ProposalActions</tt> are not carried out.</li>
--   <li><tt>EXPIRED</tt> - Members did not cast the number of votes
--   required to determine the proposal outcome before the proposal
--   expired. The specified <tt>ProposalActions</tt> are not carried
--   out.</li>
--   <li><tt>ACTION_FAILED</tt> - One or more of the specified
--   <tt>ProposalActions</tt> in a proposal that was approved could not be
--   completed because of an error. The <tt>ACTION_FAILED</tt> status
--   occurs even if only one ProposalAction fails and other actions are
--   successful.</li>
--   </ul>
proposal_status :: Lens' Proposal (Maybe ProposalStatus)

-- | The current total of <tt>YES</tt> votes cast on the proposal by
--   members.
proposal_yesVoteCount :: Lens' Proposal (Maybe Int)

-- | The current total of <tt>NO</tt> votes cast on the proposal by
--   members.
proposal_noVoteCount :: Lens' Proposal (Maybe Int)

-- | The Amazon Resource Name (ARN) of the proposal. For more information
--   about ARNs and their format, see <a>Amazon Resource Names (ARNs)</a>
--   in the <i>AWS General Reference</i>.
proposal_arn :: Lens' Proposal (Maybe Text)

-- | The actions to perform on the network if the proposal is
--   <tt>APPROVED</tt>.
proposal_actions :: Lens' Proposal (Maybe ProposalActions)

-- | The unique identifier of the network for which the proposal is made.
proposal_networkId :: Lens' Proposal (Maybe Text)

-- | The unique identifier of the member that created the proposal.
proposal_proposedByMemberId :: Lens' Proposal (Maybe Text)

-- | The unique identifier of the proposal.
proposal_proposalId :: Lens' Proposal (Maybe Text)

-- | The name of the member that created the proposal.
proposal_proposedByMemberName :: Lens' Proposal (Maybe Text)

-- | The date and time that the proposal expires. This is the
--   <tt>CreationDate</tt> plus the <tt>ProposalDurationInHours</tt> that
--   is specified in the <tt>ProposalThresholdPolicy</tt>. After this date
--   and time, if members have not cast enough votes to determine the
--   outcome according to the voting policy, the proposal is
--   <tt>EXPIRED</tt> and <tt>Actions</tt> are not carried out.
proposal_expirationDate :: Lens' Proposal (Maybe UTCTime)

-- | The date and time that the proposal was created.
proposal_creationDate :: Lens' Proposal (Maybe UTCTime)

-- | The description of the proposal.
proposal_description :: Lens' Proposal (Maybe Text)

-- | Tags assigned to the proposal. Each tag consists of a key and optional
--   value.
--   
--   For more information about tags, see <a>Tagging Resources</a> in the
--   <i>Amazon Managed Blockchain Ethereum Developer Guide</i>, or
--   <a>Tagging Resources</a> in the <i>Amazon Managed Blockchain
--   Hyperledger Fabric Developer Guide</i>.
proposal_tags :: Lens' Proposal (Maybe (HashMap Text Text))

-- | The number of votes remaining to be cast on the proposal by members.
--   In other words, the number of members minus the sum of <tt>YES</tt>
--   votes and <tt>NO</tt> votes.
proposal_outstandingVoteCount :: Lens' Proposal (Maybe Int)

-- | The actions to perform for an <tt>APPROVED</tt> proposal to invite an
--   AWS account to create a member and join the network.
proposalActions_invitations :: Lens' ProposalActions (Maybe [InviteAction])

-- | The actions to perform for an <tt>APPROVED</tt> proposal to remove a
--   member from the network, which deletes the member and all associated
--   member resources from the network.
proposalActions_removals :: Lens' ProposalActions (Maybe [RemoveAction])

-- | The status of the proposal. Values are as follows:
--   
--   <ul>
--   <li><tt>IN_PROGRESS</tt> - The proposal is active and open for member
--   voting.</li>
--   <li><tt>APPROVED</tt> - The proposal was approved with sufficient
--   <tt>YES</tt> votes among members according to the
--   <tt>VotingPolicy</tt> specified for the <tt>Network</tt>. The
--   specified proposal actions are carried out.</li>
--   <li><tt>REJECTED</tt> - The proposal was rejected with insufficient
--   <tt>YES</tt> votes among members according to the
--   <tt>VotingPolicy</tt> specified for the <tt>Network</tt>. The
--   specified <tt>ProposalActions</tt> are not carried out.</li>
--   <li><tt>EXPIRED</tt> - Members did not cast the number of votes
--   required to determine the proposal outcome before the proposal
--   expired. The specified <tt>ProposalActions</tt> are not carried
--   out.</li>
--   <li><tt>ACTION_FAILED</tt> - One or more of the specified
--   <tt>ProposalActions</tt> in a proposal that was approved could not be
--   completed because of an error.</li>
--   </ul>
proposalSummary_status :: Lens' ProposalSummary (Maybe ProposalStatus)

-- | The Amazon Resource Name (ARN) of the proposal. For more information
--   about ARNs and their format, see <a>Amazon Resource Names (ARNs)</a>
--   in the <i>AWS General Reference</i>.
proposalSummary_arn :: Lens' ProposalSummary (Maybe Text)

-- | The unique identifier of the member that created the proposal.
proposalSummary_proposedByMemberId :: Lens' ProposalSummary (Maybe Text)

-- | The unique identifier of the proposal.
proposalSummary_proposalId :: Lens' ProposalSummary (Maybe Text)

-- | The name of the member that created the proposal.
proposalSummary_proposedByMemberName :: Lens' ProposalSummary (Maybe Text)

-- | The date and time that the proposal expires. This is the
--   <tt>CreationDate</tt> plus the <tt>ProposalDurationInHours</tt> that
--   is specified in the <tt>ProposalThresholdPolicy</tt>. After this date
--   and time, if members have not cast enough votes to determine the
--   outcome according to the voting policy, the proposal is
--   <tt>EXPIRED</tt> and <tt>Actions</tt> are not carried out.
proposalSummary_expirationDate :: Lens' ProposalSummary (Maybe UTCTime)

-- | The date and time that the proposal was created.
proposalSummary_creationDate :: Lens' ProposalSummary (Maybe UTCTime)

-- | The description of the proposal.
proposalSummary_description :: Lens' ProposalSummary (Maybe Text)

-- | The unique identifier of the member to remove.
removeAction_memberId :: Lens' RemoveAction Text

-- | The name of the member that cast the vote.
voteSummary_memberName :: Lens' VoteSummary (Maybe Text)

-- | The unique identifier of the member that cast the vote.
voteSummary_memberId :: Lens' VoteSummary (Maybe Text)

-- | The vote value, either <tt>YES</tt> or <tt>NO</tt>.
voteSummary_vote :: Lens' VoteSummary (Maybe VoteValue)

-- | Defines the rules for the network for voting on proposals, such as the
--   percentage of <tt>YES</tt> votes required for the proposal to be
--   approved and the duration of the proposal. The policy applies to all
--   proposals and is specified when the network is created.
votingPolicy_approvalThresholdPolicy :: Lens' VotingPolicy (Maybe ApprovalThresholdPolicy)


module Network.AWS.ManagedBlockChain.Waiters


-- | Derived from API version <tt>2018-09-24</tt> of the AWS service
--   descriptions, licensed under Apache 2.0.
--   
--   Amazon Managed Blockchain is a fully managed service for creating and
--   managing blockchain networks using open-source frameworks. Blockchain
--   allows you to build applications where multiple parties can securely
--   and transparently run transactions and share data without the need for
--   a trusted, central authority.
--   
--   Managed Blockchain supports the Hyperledger Fabric and Ethereum
--   open-source frameworks. Because of fundamental differences between the
--   frameworks, some API actions or data types may only apply in the
--   context of one framework and not the other. For example, actions
--   related to Hyperledger Fabric network members such as
--   <tt>CreateMember</tt> and <tt>DeleteMember</tt> do not apply to
--   Ethereum.
--   
--   The description for each action indicates the framework or frameworks
--   to which it applies. Data types and properties that apply only in the
--   context of a particular framework are similarly indicated.
module Network.AWS.ManagedBlockChain

-- | API version <tt>2018-09-24</tt> of the Amazon Managed Blockchain SDK
--   configuration.
defaultService :: Service

-- | You do not have sufficient access to perform this action.
_AccessDeniedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The action or operation requested is invalid. Verify that the action
--   is typed correctly.
_InvalidRequestException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A resource request is issued for a resource that already exists.
_ResourceAlreadyExistsException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The maximum number of resources of that type already exist. Ensure the
--   resources requested are within the boundaries of the service edition
--   and your account limits.
_ResourceLimitExceededException :: AsError a => Getting (First ServiceError) a ServiceError

_TooManyTagsException :: AsError a => Getting (First ServiceError) a ServiceError

_IllegalActionException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request or operation could not be performed because a service is
--   throttling requests. The most common source of throttling errors is
--   launching EC2 instances such that your service limit for EC2 instances
--   is exceeded. Request a limit increase or delete unused resources if
--   possible.
_ThrottlingException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request processing has failed because of an unknown error,
--   exception or failure.
_InternalServiceErrorException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The requested resource exists but is not in a status that can complete
--   the operation.
_ResourceNotReadyException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A requested resource does not exist. It may have been deleted or
--   referenced inaccurately.
_ResourceNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | <i>See:</i> <a>newCreateMember</a> smart constructor.
data CreateMember
CreateMember' :: Text -> Text -> Text -> MemberConfiguration -> CreateMember

-- | Create a value of <a>CreateMember</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientRequestToken:CreateMember'</a>,
--   <a>createMember_clientRequestToken</a> - A unique, case-sensitive
--   identifier that you provide to ensure the idempotency of the
--   operation. An idempotent operation completes no more than one time.
--   This identifier is required only if you make a service request
--   directly using an HTTP client. It is generated automatically if you
--   use an AWS SDK or the AWS CLI.
--   
--   <a>$sel:invitationId:CreateMember'</a>,
--   <a>createMember_invitationId</a> - The unique identifier of the
--   invitation that is sent to the member to join the network.
--   
--   <a>$sel:networkId:CreateMember'</a>, <a>createMember_networkId</a> -
--   The unique identifier of the network in which the member is created.
--   
--   <a>$sel:memberConfiguration:CreateMember'</a>,
--   <a>createMember_memberConfiguration</a> - Member configuration
--   parameters.
newCreateMember :: Text -> Text -> Text -> MemberConfiguration -> CreateMember

-- | <i>See:</i> <a>newCreateMemberResponse</a> smart constructor.
data CreateMemberResponse
CreateMemberResponse' :: Maybe Text -> Int -> CreateMemberResponse

-- | Create a value of <a>CreateMemberResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:memberId:CreateMemberResponse'</a>,
--   <a>createMemberResponse_memberId</a> - The unique identifier of the
--   member.
--   
--   <a>$sel:httpStatus:CreateMemberResponse'</a>,
--   <a>createMemberResponse_httpStatus</a> - The response's http status
--   code.
newCreateMemberResponse :: Int -> CreateMemberResponse

-- | <i>See:</i> <a>newListNetworks</a> smart constructor.
data ListNetworks
ListNetworks' :: Maybe NetworkStatus -> Maybe Framework -> Maybe Text -> Maybe Text -> Maybe Natural -> ListNetworks

-- | Create a value of <a>ListNetworks</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:ListNetworks'</a>, <a>listNetworks_status</a> - An
--   optional status specifier. If provided, only networks currently in
--   this status are listed.
--   
--   Applies only to Hyperledger Fabric.
--   
--   <a>$sel:framework:ListNetworks'</a>, <a>listNetworks_framework</a> -
--   An optional framework specifier. If provided, only networks of this
--   framework type are listed.
--   
--   <a>$sel:nextToken:ListNetworks'</a>, <a>listNetworks_nextToken</a> -
--   The pagination token that indicates the next set of results to
--   retrieve.
--   
--   <a>$sel:name:ListNetworks'</a>, <a>listNetworks_name</a> - The name of
--   the network.
--   
--   <a>$sel:maxResults:ListNetworks'</a>, <a>listNetworks_maxResults</a> -
--   The maximum number of networks to list.
newListNetworks :: ListNetworks

-- | <i>See:</i> <a>newListNetworksResponse</a> smart constructor.
data ListNetworksResponse
ListNetworksResponse' :: Maybe [NetworkSummary] -> Maybe Text -> Int -> ListNetworksResponse

-- | Create a value of <a>ListNetworksResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:networks:ListNetworksResponse'</a>,
--   <a>listNetworksResponse_networks</a> - An array of
--   <tt>NetworkSummary</tt> objects that contain configuration properties
--   for each network.
--   
--   <a>$sel:nextToken:ListNetworks'</a>,
--   <a>listNetworksResponse_nextToken</a> - The pagination token that
--   indicates the next set of results to retrieve.
--   
--   <a>$sel:httpStatus:ListNetworksResponse'</a>,
--   <a>listNetworksResponse_httpStatus</a> - The response's http status
--   code.
newListNetworksResponse :: Int -> ListNetworksResponse

-- | <i>See:</i> <a>newGetProposal</a> smart constructor.
data GetProposal
GetProposal' :: Text -> Text -> GetProposal

-- | Create a value of <a>GetProposal</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:networkId:GetProposal'</a>, <a>getProposal_networkId</a> - The
--   unique identifier of the network for which the proposal is made.
--   
--   <a>$sel:proposalId:GetProposal'</a>, <a>getProposal_proposalId</a> -
--   The unique identifier of the proposal.
newGetProposal :: Text -> Text -> GetProposal

-- | <i>See:</i> <a>newGetProposalResponse</a> smart constructor.
data GetProposalResponse
GetProposalResponse' :: Maybe Proposal -> Int -> GetProposalResponse

-- | Create a value of <a>GetProposalResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:proposal:GetProposalResponse'</a>,
--   <a>getProposalResponse_proposal</a> - Information about a proposal.
--   
--   <a>$sel:httpStatus:GetProposalResponse'</a>,
--   <a>getProposalResponse_httpStatus</a> - The response's http status
--   code.
newGetProposalResponse :: Int -> GetProposalResponse

-- | <i>See:</i> <a>newListTagsForResource</a> smart constructor.
data ListTagsForResource
ListTagsForResource' :: Text -> ListTagsForResource

-- | Create a value of <a>ListTagsForResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:ListTagsForResource'</a>,
--   <a>listTagsForResource_resourceArn</a> - The Amazon Resource Name
--   (ARN) of the resource. For more information about ARNs and their
--   format, see <a>Amazon Resource Names (ARNs)</a> in the <i>AWS General
--   Reference</i>.
newListTagsForResource :: Text -> ListTagsForResource

-- | <i>See:</i> <a>newListTagsForResourceResponse</a> smart constructor.
data ListTagsForResourceResponse
ListTagsForResourceResponse' :: Maybe (HashMap Text Text) -> Int -> ListTagsForResourceResponse

-- | Create a value of <a>ListTagsForResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_tags</a> - The tags assigned to the
--   resource.
--   
--   <a>$sel:httpStatus:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_httpStatus</a> - The response's http
--   status code.
newListTagsForResourceResponse :: Int -> ListTagsForResourceResponse

-- | <i>See:</i> <a>newCreateNetwork</a> smart constructor.
data CreateNetwork
CreateNetwork' :: Maybe NetworkFrameworkConfiguration -> Maybe Text -> Maybe (HashMap Text Text) -> Text -> Text -> Framework -> Text -> VotingPolicy -> MemberConfiguration -> CreateNetwork

-- | Create a value of <a>CreateNetwork</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:frameworkConfiguration:CreateNetwork'</a>,
--   <a>createNetwork_frameworkConfiguration</a> - Configuration properties
--   of the blockchain framework relevant to the network configuration.
--   
--   <a>$sel:description:CreateNetwork'</a>,
--   <a>createNetwork_description</a> - An optional description for the
--   network.
--   
--   <a>$sel:tags:CreateNetwork'</a>, <a>createNetwork_tags</a> - Tags to
--   assign to the network. Each tag consists of a key and optional value.
--   
--   When specifying tags during creation, you can specify multiple
--   key-value pairs in a single request, with an overall maximum of 50
--   tags added to each resource.
--   
--   For more information about tags, see <a>Tagging Resources</a> in the
--   <i>Amazon Managed Blockchain Ethereum Developer Guide</i>, or
--   <a>Tagging Resources</a> in the <i>Amazon Managed Blockchain
--   Hyperledger Fabric Developer Guide</i>.
--   
--   <a>$sel:clientRequestToken:CreateNetwork'</a>,
--   <a>createNetwork_clientRequestToken</a> - A unique, case-sensitive
--   identifier that you provide to ensure the idempotency of the
--   operation. An idempotent operation completes no more than one time.
--   This identifier is required only if you make a service request
--   directly using an HTTP client. It is generated automatically if you
--   use an AWS SDK or the AWS CLI.
--   
--   <a>$sel:name:CreateNetwork'</a>, <a>createNetwork_name</a> - The name
--   of the network.
--   
--   <a>$sel:framework:CreateNetwork'</a>, <a>createNetwork_framework</a> -
--   The blockchain framework that the network uses.
--   
--   <a>$sel:frameworkVersion:CreateNetwork'</a>,
--   <a>createNetwork_frameworkVersion</a> - The version of the blockchain
--   framework that the network uses.
--   
--   <a>$sel:votingPolicy:CreateNetwork'</a>,
--   <a>createNetwork_votingPolicy</a> - The voting rules used by the
--   network to determine if a proposal is approved.
--   
--   <a>$sel:memberConfiguration:CreateNetwork'</a>,
--   <a>createNetwork_memberConfiguration</a> - Configuration properties
--   for the first member within the network.
newCreateNetwork :: Text -> Text -> Framework -> Text -> VotingPolicy -> MemberConfiguration -> CreateNetwork

-- | <i>See:</i> <a>newCreateNetworkResponse</a> smart constructor.
data CreateNetworkResponse
CreateNetworkResponse' :: Maybe Text -> Maybe Text -> Int -> CreateNetworkResponse

-- | Create a value of <a>CreateNetworkResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:memberId:CreateNetworkResponse'</a>,
--   <a>createNetworkResponse_memberId</a> - The unique identifier for the
--   first member within the network.
--   
--   <a>$sel:networkId:CreateNetworkResponse'</a>,
--   <a>createNetworkResponse_networkId</a> - The unique identifier for the
--   network.
--   
--   <a>$sel:httpStatus:CreateNetworkResponse'</a>,
--   <a>createNetworkResponse_httpStatus</a> - The response's http status
--   code.
newCreateNetworkResponse :: Int -> CreateNetworkResponse

-- | <i>See:</i> <a>newListProposals</a> smart constructor.
data ListProposals
ListProposals' :: Maybe Text -> Maybe Natural -> Text -> ListProposals

-- | Create a value of <a>ListProposals</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListProposals'</a>, <a>listProposals_nextToken</a> -
--   The pagination token that indicates the next set of results to
--   retrieve.
--   
--   <a>$sel:maxResults:ListProposals'</a>, <a>listProposals_maxResults</a>
--   - The maximum number of proposals to return.
--   
--   <a>$sel:networkId:ListProposals'</a>, <a>listProposals_networkId</a> -
--   The unique identifier of the network.
newListProposals :: Text -> ListProposals

-- | <i>See:</i> <a>newListProposalsResponse</a> smart constructor.
data ListProposalsResponse
ListProposalsResponse' :: Maybe [ProposalSummary] -> Maybe Text -> Int -> ListProposalsResponse

-- | Create a value of <a>ListProposalsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:proposals:ListProposalsResponse'</a>,
--   <a>listProposalsResponse_proposals</a> - The summary of each proposal
--   made on the network.
--   
--   <a>$sel:nextToken:ListProposals'</a>,
--   <a>listProposalsResponse_nextToken</a> - The pagination token that
--   indicates the next set of results to retrieve.
--   
--   <a>$sel:httpStatus:ListProposalsResponse'</a>,
--   <a>listProposalsResponse_httpStatus</a> - The response's http status
--   code.
newListProposalsResponse :: Int -> ListProposalsResponse

-- | <i>See:</i> <a>newListInvitations</a> smart constructor.
data ListInvitations
ListInvitations' :: Maybe Text -> Maybe Natural -> ListInvitations

-- | Create a value of <a>ListInvitations</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListInvitations'</a>,
--   <a>listInvitations_nextToken</a> - The pagination token that indicates
--   the next set of results to retrieve.
--   
--   <a>$sel:maxResults:ListInvitations'</a>,
--   <a>listInvitations_maxResults</a> - The maximum number of invitations
--   to return.
newListInvitations :: ListInvitations

-- | <i>See:</i> <a>newListInvitationsResponse</a> smart constructor.
data ListInvitationsResponse
ListInvitationsResponse' :: Maybe [Invitation] -> Maybe Text -> Int -> ListInvitationsResponse

-- | Create a value of <a>ListInvitationsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:invitations:ListInvitationsResponse'</a>,
--   <a>listInvitationsResponse_invitations</a> - The invitations for the
--   network.
--   
--   <a>$sel:nextToken:ListInvitations'</a>,
--   <a>listInvitationsResponse_nextToken</a> - The pagination token that
--   indicates the next set of results to retrieve.
--   
--   <a>$sel:httpStatus:ListInvitationsResponse'</a>,
--   <a>listInvitationsResponse_httpStatus</a> - The response's http status
--   code.
newListInvitationsResponse :: Int -> ListInvitationsResponse

-- | <i>See:</i> <a>newCreateProposal</a> smart constructor.
data CreateProposal
CreateProposal' :: Maybe Text -> Maybe (HashMap Text Text) -> Text -> Text -> Text -> ProposalActions -> CreateProposal

-- | Create a value of <a>CreateProposal</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:description:CreateProposal'</a>,
--   <a>createProposal_description</a> - A description for the proposal
--   that is visible to voting members, for example, "Proposal to add
--   Example Corp. as member."
--   
--   <a>$sel:tags:CreateProposal'</a>, <a>createProposal_tags</a> - Tags to
--   assign to the proposal. Each tag consists of a key and optional value.
--   
--   When specifying tags during creation, you can specify multiple
--   key-value pairs in a single request, with an overall maximum of 50
--   tags added to each resource. If the proposal is for a network
--   invitation, the invitation inherits the tags added to the proposal.
--   
--   For more information about tags, see <a>Tagging Resources</a> in the
--   <i>Amazon Managed Blockchain Ethereum Developer Guide</i>, or
--   <a>Tagging Resources</a> in the <i>Amazon Managed Blockchain
--   Hyperledger Fabric Developer Guide</i>.
--   
--   <a>$sel:clientRequestToken:CreateProposal'</a>,
--   <a>createProposal_clientRequestToken</a> - A unique, case-sensitive
--   identifier that you provide to ensure the idempotency of the
--   operation. An idempotent operation completes no more than one time.
--   This identifier is required only if you make a service request
--   directly using an HTTP client. It is generated automatically if you
--   use an AWS SDK or the AWS CLI.
--   
--   <a>$sel:networkId:CreateProposal'</a>, <a>createProposal_networkId</a>
--   - The unique identifier of the network for which the proposal is made.
--   
--   <a>$sel:memberId:CreateProposal'</a>, <a>createProposal_memberId</a> -
--   The unique identifier of the member that is creating the proposal.
--   This identifier is especially useful for identifying the member making
--   the proposal when multiple members exist in a single AWS account.
--   
--   <a>$sel:actions:CreateProposal'</a>, <a>createProposal_actions</a> -
--   The type of actions proposed, such as inviting a member or removing a
--   member. The types of <tt>Actions</tt> in a proposal are mutually
--   exclusive. For example, a proposal with <tt>Invitations</tt> actions
--   cannot also contain <tt>Removals</tt> actions.
newCreateProposal :: Text -> Text -> Text -> ProposalActions -> CreateProposal

-- | <i>See:</i> <a>newCreateProposalResponse</a> smart constructor.
data CreateProposalResponse
CreateProposalResponse' :: Maybe Text -> Int -> CreateProposalResponse

-- | Create a value of <a>CreateProposalResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:proposalId:CreateProposalResponse'</a>,
--   <a>createProposalResponse_proposalId</a> - The unique identifier of
--   the proposal.
--   
--   <a>$sel:httpStatus:CreateProposalResponse'</a>,
--   <a>createProposalResponse_httpStatus</a> - The response's http status
--   code.
newCreateProposalResponse :: Int -> CreateProposalResponse

-- | <i>See:</i> <a>newGetNetwork</a> smart constructor.
data GetNetwork
GetNetwork' :: Text -> GetNetwork

-- | Create a value of <a>GetNetwork</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:networkId:GetNetwork'</a>, <a>getNetwork_networkId</a> - The
--   unique identifier of the network to get information about.
newGetNetwork :: Text -> GetNetwork

-- | <i>See:</i> <a>newGetNetworkResponse</a> smart constructor.
data GetNetworkResponse
GetNetworkResponse' :: Maybe Network -> Int -> GetNetworkResponse

-- | Create a value of <a>GetNetworkResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:network:GetNetworkResponse'</a>,
--   <a>getNetworkResponse_network</a> - An object containing network
--   configuration parameters.
--   
--   <a>$sel:httpStatus:GetNetworkResponse'</a>,
--   <a>getNetworkResponse_httpStatus</a> - The response's http status
--   code.
newGetNetworkResponse :: Int -> GetNetworkResponse

-- | <i>See:</i> <a>newGetNode</a> smart constructor.
data GetNode
GetNode' :: Maybe Text -> Text -> Text -> GetNode

-- | Create a value of <a>GetNode</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:memberId:GetNode'</a>, <a>getNode_memberId</a> - The unique
--   identifier of the member that owns the node.
--   
--   Applies only to Hyperledger Fabric and is required for Hyperledger
--   Fabric.
--   
--   <a>$sel:networkId:GetNode'</a>, <a>getNode_networkId</a> - The unique
--   identifier of the network that the node is on.
--   
--   <a>$sel:nodeId:GetNode'</a>, <a>getNode_nodeId</a> - The unique
--   identifier of the node.
newGetNode :: Text -> Text -> GetNode

-- | <i>See:</i> <a>newGetNodeResponse</a> smart constructor.
data GetNodeResponse
GetNodeResponse' :: Maybe Node -> Int -> GetNodeResponse

-- | Create a value of <a>GetNodeResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:node:GetNodeResponse'</a>, <a>getNodeResponse_node</a> -
--   Properties of the node configuration.
--   
--   <a>$sel:httpStatus:GetNodeResponse'</a>,
--   <a>getNodeResponse_httpStatus</a> - The response's http status code.
newGetNodeResponse :: Int -> GetNodeResponse

-- | <i>See:</i> <a>newUpdateMember</a> smart constructor.
data UpdateMember
UpdateMember' :: Maybe MemberLogPublishingConfiguration -> Text -> Text -> UpdateMember

-- | Create a value of <a>UpdateMember</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:logPublishingConfiguration:UpdateMember'</a>,
--   <a>updateMember_logPublishingConfiguration</a> - Configuration
--   properties for publishing to Amazon CloudWatch Logs.
--   
--   <a>$sel:networkId:UpdateMember'</a>, <a>updateMember_networkId</a> -
--   The unique identifier of the Managed Blockchain network to which the
--   member belongs.
--   
--   <a>$sel:memberId:UpdateMember'</a>, <a>updateMember_memberId</a> - The
--   unique identifier of the member.
newUpdateMember :: Text -> Text -> UpdateMember

-- | <i>See:</i> <a>newUpdateMemberResponse</a> smart constructor.
data UpdateMemberResponse
UpdateMemberResponse' :: Int -> UpdateMemberResponse

-- | Create a value of <a>UpdateMemberResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateMemberResponse'</a>,
--   <a>updateMemberResponse_httpStatus</a> - The response's http status
--   code.
newUpdateMemberResponse :: Int -> UpdateMemberResponse

-- | <i>See:</i> <a>newDeleteMember</a> smart constructor.
data DeleteMember
DeleteMember' :: Text -> Text -> DeleteMember

-- | Create a value of <a>DeleteMember</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:networkId:DeleteMember'</a>, <a>deleteMember_networkId</a> -
--   The unique identifier of the network from which the member is removed.
--   
--   <a>$sel:memberId:DeleteMember'</a>, <a>deleteMember_memberId</a> - The
--   unique identifier of the member to remove.
newDeleteMember :: Text -> Text -> DeleteMember

-- | <i>See:</i> <a>newDeleteMemberResponse</a> smart constructor.
data DeleteMemberResponse
DeleteMemberResponse' :: Int -> DeleteMemberResponse

-- | Create a value of <a>DeleteMemberResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteMemberResponse'</a>,
--   <a>deleteMemberResponse_httpStatus</a> - The response's http status
--   code.
newDeleteMemberResponse :: Int -> DeleteMemberResponse

-- | <i>See:</i> <a>newListMembers</a> smart constructor.
data ListMembers
ListMembers' :: Maybe MemberStatus -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe Natural -> Text -> ListMembers

-- | Create a value of <a>ListMembers</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:ListMembers'</a>, <a>listMembers_status</a> - An
--   optional status specifier. If provided, only members currently in this
--   status are listed.
--   
--   <a>$sel:nextToken:ListMembers'</a>, <a>listMembers_nextToken</a> - The
--   pagination token that indicates the next set of results to retrieve.
--   
--   <a>$sel:name:ListMembers'</a>, <a>listMembers_name</a> - The optional
--   name of the member to list.
--   
--   <a>$sel:isOwned:ListMembers'</a>, <a>listMembers_isOwned</a> - An
--   optional Boolean value. If provided, the request is limited either to
--   members that the current AWS account owns (<tt>true</tt>) or that
--   other AWS accounts own (<tt>false</tt>). If omitted, all members are
--   listed.
--   
--   <a>$sel:maxResults:ListMembers'</a>, <a>listMembers_maxResults</a> -
--   The maximum number of members to return in the request.
--   
--   <a>$sel:networkId:ListMembers'</a>, <a>listMembers_networkId</a> - The
--   unique identifier of the network for which to list members.
newListMembers :: Text -> ListMembers

-- | <i>See:</i> <a>newListMembersResponse</a> smart constructor.
data ListMembersResponse
ListMembersResponse' :: Maybe [MemberSummary] -> Maybe Text -> Int -> ListMembersResponse

-- | Create a value of <a>ListMembersResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:members:ListMembersResponse'</a>,
--   <a>listMembersResponse_members</a> - An array of
--   <tt>MemberSummary</tt> objects. Each object contains details about a
--   network member.
--   
--   <a>$sel:nextToken:ListMembers'</a>,
--   <a>listMembersResponse_nextToken</a> - The pagination token that
--   indicates the next set of results to retrieve.
--   
--   <a>$sel:httpStatus:ListMembersResponse'</a>,
--   <a>listMembersResponse_httpStatus</a> - The response's http status
--   code.
newListMembersResponse :: Int -> ListMembersResponse

-- | <i>See:</i> <a>newCreateNode</a> smart constructor.
data CreateNode
CreateNode' :: Maybe Text -> Maybe (HashMap Text Text) -> Text -> Text -> NodeConfiguration -> CreateNode

-- | Create a value of <a>CreateNode</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:memberId:CreateNode'</a>, <a>createNode_memberId</a> - The
--   unique identifier of the member that owns this node.
--   
--   Applies only to Hyperledger Fabric.
--   
--   <a>$sel:tags:CreateNode'</a>, <a>createNode_tags</a> - Tags to assign
--   to the node. Each tag consists of a key and optional value.
--   
--   When specifying tags during creation, you can specify multiple
--   key-value pairs in a single request, with an overall maximum of 50
--   tags added to each resource.
--   
--   For more information about tags, see <a>Tagging Resources</a> in the
--   <i>Amazon Managed Blockchain Ethereum Developer Guide</i>, or
--   <a>Tagging Resources</a> in the <i>Amazon Managed Blockchain
--   Hyperledger Fabric Developer Guide</i>.
--   
--   <a>$sel:clientRequestToken:CreateNode'</a>,
--   <a>createNode_clientRequestToken</a> - A unique, case-sensitive
--   identifier that you provide to ensure the idempotency of the
--   operation. An idempotent operation completes no more than one time.
--   This identifier is required only if you make a service request
--   directly using an HTTP client. It is generated automatically if you
--   use an AWS SDK or the AWS CLI.
--   
--   <a>$sel:networkId:CreateNode'</a>, <a>createNode_networkId</a> - The
--   unique identifier of the network for the node.
--   
--   Ethereum public networks have the following <tt>NetworkId</tt>s:
--   
--   <ul>
--   <li><pre>n-ethereum-mainnet</pre></li>
--   <li><pre>n-ethereum-rinkeby</pre></li>
--   <li><pre>n-ethereum-ropsten</pre></li>
--   </ul>
--   
--   <a>$sel:nodeConfiguration:CreateNode'</a>,
--   <a>createNode_nodeConfiguration</a> - The properties of a node
--   configuration.
newCreateNode :: Text -> Text -> NodeConfiguration -> CreateNode

-- | <i>See:</i> <a>newCreateNodeResponse</a> smart constructor.
data CreateNodeResponse
CreateNodeResponse' :: Maybe Text -> Int -> CreateNodeResponse

-- | Create a value of <a>CreateNodeResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nodeId:CreateNodeResponse'</a>,
--   <a>createNodeResponse_nodeId</a> - The unique identifier of the node.
--   
--   <a>$sel:httpStatus:CreateNodeResponse'</a>,
--   <a>createNodeResponse_httpStatus</a> - The response's http status
--   code.
newCreateNodeResponse :: Int -> CreateNodeResponse

-- | <i>See:</i> <a>newListProposalVotes</a> smart constructor.
data ListProposalVotes
ListProposalVotes' :: Maybe Text -> Maybe Natural -> Text -> Text -> ListProposalVotes

-- | Create a value of <a>ListProposalVotes</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListProposalVotes'</a>,
--   <a>listProposalVotes_nextToken</a> - The pagination token that
--   indicates the next set of results to retrieve.
--   
--   <a>$sel:maxResults:ListProposalVotes'</a>,
--   <a>listProposalVotes_maxResults</a> - The maximum number of votes to
--   return.
--   
--   <a>$sel:networkId:ListProposalVotes'</a>,
--   <a>listProposalVotes_networkId</a> - The unique identifier of the
--   network.
--   
--   <a>$sel:proposalId:ListProposalVotes'</a>,
--   <a>listProposalVotes_proposalId</a> - The unique identifier of the
--   proposal.
newListProposalVotes :: Text -> Text -> ListProposalVotes

-- | <i>See:</i> <a>newListProposalVotesResponse</a> smart constructor.
data ListProposalVotesResponse
ListProposalVotesResponse' :: Maybe Text -> Maybe [VoteSummary] -> Int -> ListProposalVotesResponse

-- | Create a value of <a>ListProposalVotesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListProposalVotes'</a>,
--   <a>listProposalVotesResponse_nextToken</a> - The pagination token that
--   indicates the next set of results to retrieve.
--   
--   <a>$sel:proposalVotes:ListProposalVotesResponse'</a>,
--   <a>listProposalVotesResponse_proposalVotes</a> - The list of votes.
--   
--   <a>$sel:httpStatus:ListProposalVotesResponse'</a>,
--   <a>listProposalVotesResponse_httpStatus</a> - The response's http
--   status code.
newListProposalVotesResponse :: Int -> ListProposalVotesResponse

-- | <i>See:</i> <a>newVoteOnProposal</a> smart constructor.
data VoteOnProposal
VoteOnProposal' :: Text -> Text -> Text -> VoteValue -> VoteOnProposal

-- | Create a value of <a>VoteOnProposal</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:networkId:VoteOnProposal'</a>, <a>voteOnProposal_networkId</a>
--   - The unique identifier of the network.
--   
--   <a>$sel:proposalId:VoteOnProposal'</a>,
--   <a>voteOnProposal_proposalId</a> - The unique identifier of the
--   proposal.
--   
--   <a>$sel:voterMemberId:VoteOnProposal'</a>,
--   <a>voteOnProposal_voterMemberId</a> - The unique identifier of the
--   member casting the vote.
--   
--   <a>$sel:vote:VoteOnProposal'</a>, <a>voteOnProposal_vote</a> - The
--   value of the vote.
newVoteOnProposal :: Text -> Text -> Text -> VoteValue -> VoteOnProposal

-- | <i>See:</i> <a>newVoteOnProposalResponse</a> smart constructor.
data VoteOnProposalResponse
VoteOnProposalResponse' :: Int -> VoteOnProposalResponse

-- | Create a value of <a>VoteOnProposalResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:VoteOnProposalResponse'</a>,
--   <a>voteOnProposalResponse_httpStatus</a> - The response's http status
--   code.
newVoteOnProposalResponse :: Int -> VoteOnProposalResponse

-- | <i>See:</i> <a>newTagResource</a> smart constructor.
data TagResource
TagResource' :: Text -> HashMap Text Text -> TagResource

-- | Create a value of <a>TagResource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:TagResource'</a>, <a>tagResource_resourceArn</a> -
--   The Amazon Resource Name (ARN) of the resource. For more information
--   about ARNs and their format, see <a>Amazon Resource Names (ARNs)</a>
--   in the <i>AWS General Reference</i>.
--   
--   <a>$sel:tags:TagResource'</a>, <a>tagResource_tags</a> - The tags to
--   assign to the specified resource. Tag values can be empty, for
--   example, <tt>"MyTagKey" : ""</tt>. You can specify multiple key-value
--   pairs in a single request, with an overall maximum of 50 tags added to
--   each resource.
newTagResource :: Text -> TagResource

-- | <i>See:</i> <a>newTagResourceResponse</a> smart constructor.
data TagResourceResponse
TagResourceResponse' :: Int -> TagResourceResponse

-- | Create a value of <a>TagResourceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:TagResourceResponse'</a>,
--   <a>tagResourceResponse_httpStatus</a> - The response's http status
--   code.
newTagResourceResponse :: Int -> TagResourceResponse

-- | <i>See:</i> <a>newUntagResource</a> smart constructor.
data UntagResource
UntagResource' :: Text -> [Text] -> UntagResource

-- | Create a value of <a>UntagResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:UntagResource'</a>,
--   <a>untagResource_resourceArn</a> - The Amazon Resource Name (ARN) of
--   the resource. For more information about ARNs and their format, see
--   <a>Amazon Resource Names (ARNs)</a> in the <i>AWS General
--   Reference</i>.
--   
--   <a>$sel:tagKeys:UntagResource'</a>, <a>untagResource_tagKeys</a> - The
--   tag keys.
newUntagResource :: Text -> UntagResource

-- | <i>See:</i> <a>newUntagResourceResponse</a> smart constructor.
data UntagResourceResponse
UntagResourceResponse' :: Int -> UntagResourceResponse

-- | Create a value of <a>UntagResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UntagResourceResponse'</a>,
--   <a>untagResourceResponse_httpStatus</a> - The response's http status
--   code.
newUntagResourceResponse :: Int -> UntagResourceResponse

-- | <i>See:</i> <a>newGetMember</a> smart constructor.
data GetMember
GetMember' :: Text -> Text -> GetMember

-- | Create a value of <a>GetMember</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:networkId:GetMember'</a>, <a>getMember_networkId</a> - The
--   unique identifier of the network to which the member belongs.
--   
--   <a>$sel:memberId:GetMember'</a>, <a>getMember_memberId</a> - The
--   unique identifier of the member.
newGetMember :: Text -> Text -> GetMember

-- | <i>See:</i> <a>newGetMemberResponse</a> smart constructor.
data GetMemberResponse
GetMemberResponse' :: Maybe Member -> Int -> GetMemberResponse

-- | Create a value of <a>GetMemberResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:member:GetMemberResponse'</a>, <a>getMemberResponse_member</a>
--   - The properties of a member.
--   
--   <a>$sel:httpStatus:GetMemberResponse'</a>,
--   <a>getMemberResponse_httpStatus</a> - The response's http status code.
newGetMemberResponse :: Int -> GetMemberResponse

-- | <i>See:</i> <a>newRejectInvitation</a> smart constructor.
data RejectInvitation
RejectInvitation' :: Text -> RejectInvitation

-- | Create a value of <a>RejectInvitation</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:invitationId:RejectInvitation'</a>,
--   <a>rejectInvitation_invitationId</a> - The unique identifier of the
--   invitation to reject.
newRejectInvitation :: Text -> RejectInvitation

-- | <i>See:</i> <a>newRejectInvitationResponse</a> smart constructor.
data RejectInvitationResponse
RejectInvitationResponse' :: Int -> RejectInvitationResponse

-- | Create a value of <a>RejectInvitationResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:RejectInvitationResponse'</a>,
--   <a>rejectInvitationResponse_httpStatus</a> - The response's http
--   status code.
newRejectInvitationResponse :: Int -> RejectInvitationResponse

-- | <i>See:</i> <a>newUpdateNode</a> smart constructor.
data UpdateNode
UpdateNode' :: Maybe NodeLogPublishingConfiguration -> Maybe Text -> Text -> Text -> UpdateNode

-- | Create a value of <a>UpdateNode</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:logPublishingConfiguration:UpdateNode'</a>,
--   <a>updateNode_logPublishingConfiguration</a> - Configuration
--   properties for publishing to Amazon CloudWatch Logs.
--   
--   <a>$sel:memberId:UpdateNode'</a>, <a>updateNode_memberId</a> - The
--   unique identifier of the member that owns the node.
--   
--   Applies only to Hyperledger Fabric.
--   
--   <a>$sel:networkId:UpdateNode'</a>, <a>updateNode_networkId</a> - The
--   unique identifier of the network that the node is on.
--   
--   <a>$sel:nodeId:UpdateNode'</a>, <a>updateNode_nodeId</a> - The unique
--   identifier of the node.
newUpdateNode :: Text -> Text -> UpdateNode

-- | <i>See:</i> <a>newUpdateNodeResponse</a> smart constructor.
data UpdateNodeResponse
UpdateNodeResponse' :: Int -> UpdateNodeResponse

-- | Create a value of <a>UpdateNodeResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateNodeResponse'</a>,
--   <a>updateNodeResponse_httpStatus</a> - The response's http status
--   code.
newUpdateNodeResponse :: Int -> UpdateNodeResponse

-- | <i>See:</i> <a>newDeleteNode</a> smart constructor.
data DeleteNode
DeleteNode' :: Maybe Text -> Text -> Text -> DeleteNode

-- | Create a value of <a>DeleteNode</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:memberId:DeleteNode'</a>, <a>deleteNode_memberId</a> - The
--   unique identifier of the member that owns this node.
--   
--   Applies only to Hyperledger Fabric and is required for Hyperledger
--   Fabric.
--   
--   <a>$sel:networkId:DeleteNode'</a>, <a>deleteNode_networkId</a> - The
--   unique identifier of the network that the node is on.
--   
--   Ethereum public networks have the following <tt>NetworkId</tt>s:
--   
--   <ul>
--   <li><pre>n-ethereum-mainnet</pre></li>
--   <li><pre>n-ethereum-rinkeby</pre></li>
--   <li><pre>n-ethereum-ropsten</pre></li>
--   </ul>
--   
--   <a>$sel:nodeId:DeleteNode'</a>, <a>deleteNode_nodeId</a> - The unique
--   identifier of the node.
newDeleteNode :: Text -> Text -> DeleteNode

-- | <i>See:</i> <a>newDeleteNodeResponse</a> smart constructor.
data DeleteNodeResponse
DeleteNodeResponse' :: Int -> DeleteNodeResponse

-- | Create a value of <a>DeleteNodeResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteNodeResponse'</a>,
--   <a>deleteNodeResponse_httpStatus</a> - The response's http status
--   code.
newDeleteNodeResponse :: Int -> DeleteNodeResponse

-- | <i>See:</i> <a>newListNodes</a> smart constructor.
data ListNodes
ListNodes' :: Maybe NodeStatus -> Maybe Text -> Maybe Text -> Maybe Natural -> Text -> ListNodes

-- | Create a value of <a>ListNodes</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:ListNodes'</a>, <a>listNodes_status</a> - An optional
--   status specifier. If provided, only nodes currently in this status are
--   listed.
--   
--   <a>$sel:memberId:ListNodes'</a>, <a>listNodes_memberId</a> - The
--   unique identifier of the member who owns the nodes to list.
--   
--   Applies only to Hyperledger Fabric and is required for Hyperledger
--   Fabric.
--   
--   <a>$sel:nextToken:ListNodes'</a>, <a>listNodes_nextToken</a> - The
--   pagination token that indicates the next set of results to retrieve.
--   
--   <a>$sel:maxResults:ListNodes'</a>, <a>listNodes_maxResults</a> - The
--   maximum number of nodes to list.
--   
--   <a>$sel:networkId:ListNodes'</a>, <a>listNodes_networkId</a> - The
--   unique identifier of the network for which to list nodes.
newListNodes :: Text -> ListNodes

-- | <i>See:</i> <a>newListNodesResponse</a> smart constructor.
data ListNodesResponse
ListNodesResponse' :: Maybe Text -> Maybe [NodeSummary] -> Int -> ListNodesResponse

-- | Create a value of <a>ListNodesResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListNodes'</a>, <a>listNodesResponse_nextToken</a> -
--   The pagination token that indicates the next set of results to
--   retrieve.
--   
--   <a>$sel:nodes:ListNodesResponse'</a>, <a>listNodesResponse_nodes</a> -
--   An array of <tt>NodeSummary</tt> objects that contain configuration
--   properties for each node.
--   
--   <a>$sel:httpStatus:ListNodesResponse'</a>,
--   <a>listNodesResponse_httpStatus</a> - The response's http status code.
newListNodesResponse :: Int -> ListNodesResponse
newtype Edition
Edition' :: Text -> Edition
[fromEdition] :: Edition -> Text
pattern Edition_STANDARD :: Edition
pattern Edition_STARTER :: Edition
newtype Framework
Framework' :: Text -> Framework
[fromFramework] :: Framework -> Text
pattern Framework_ETHEREUM :: Framework
pattern Framework_HYPERLEDGER_FABRIC :: Framework
newtype InvitationStatus
InvitationStatus' :: Text -> InvitationStatus
[fromInvitationStatus] :: InvitationStatus -> Text
pattern InvitationStatus_ACCEPTED :: InvitationStatus
pattern InvitationStatus_ACCEPTING :: InvitationStatus
pattern InvitationStatus_EXPIRED :: InvitationStatus
pattern InvitationStatus_PENDING :: InvitationStatus
pattern InvitationStatus_REJECTED :: InvitationStatus
newtype MemberStatus
MemberStatus' :: Text -> MemberStatus
[fromMemberStatus] :: MemberStatus -> Text
pattern MemberStatus_AVAILABLE :: MemberStatus
pattern MemberStatus_CREATE_FAILED :: MemberStatus
pattern MemberStatus_CREATING :: MemberStatus
pattern MemberStatus_DELETED :: MemberStatus
pattern MemberStatus_DELETING :: MemberStatus
pattern MemberStatus_INACCESSIBLE_ENCRYPTION_KEY :: MemberStatus
pattern MemberStatus_UPDATING :: MemberStatus
newtype NetworkStatus
NetworkStatus' :: Text -> NetworkStatus
[fromNetworkStatus] :: NetworkStatus -> Text
pattern NetworkStatus_AVAILABLE :: NetworkStatus
pattern NetworkStatus_CREATE_FAILED :: NetworkStatus
pattern NetworkStatus_CREATING :: NetworkStatus
pattern NetworkStatus_DELETED :: NetworkStatus
pattern NetworkStatus_DELETING :: NetworkStatus
newtype NodeStatus
NodeStatus' :: Text -> NodeStatus
[fromNodeStatus] :: NodeStatus -> Text
pattern NodeStatus_AVAILABLE :: NodeStatus
pattern NodeStatus_CREATE_FAILED :: NodeStatus
pattern NodeStatus_CREATING :: NodeStatus
pattern NodeStatus_DELETED :: NodeStatus
pattern NodeStatus_DELETING :: NodeStatus
pattern NodeStatus_FAILED :: NodeStatus
pattern NodeStatus_INACCESSIBLE_ENCRYPTION_KEY :: NodeStatus
pattern NodeStatus_UNHEALTHY :: NodeStatus
pattern NodeStatus_UPDATING :: NodeStatus
newtype ProposalStatus
ProposalStatus' :: Text -> ProposalStatus
[fromProposalStatus] :: ProposalStatus -> Text
pattern ProposalStatus_ACTION_FAILED :: ProposalStatus
pattern ProposalStatus_APPROVED :: ProposalStatus
pattern ProposalStatus_EXPIRED :: ProposalStatus
pattern ProposalStatus_IN_PROGRESS :: ProposalStatus
pattern ProposalStatus_REJECTED :: ProposalStatus
newtype StateDBType
StateDBType' :: Text -> StateDBType
[fromStateDBType] :: StateDBType -> Text
pattern StateDBType_CouchDB :: StateDBType
pattern StateDBType_LevelDB :: StateDBType
newtype ThresholdComparator
ThresholdComparator' :: Text -> ThresholdComparator
[fromThresholdComparator] :: ThresholdComparator -> Text
pattern ThresholdComparator_GREATER_THAN :: ThresholdComparator
pattern ThresholdComparator_GREATER_THAN_OR_EQUAL_TO :: ThresholdComparator
newtype VoteValue
VoteValue' :: Text -> VoteValue
[fromVoteValue] :: VoteValue -> Text
pattern VoteValue_NO :: VoteValue
pattern VoteValue_YES :: VoteValue

-- | A policy type that defines the voting rules for the network. The rules
--   decide if a proposal is approved. Approval may be based on criteria
--   such as the percentage of <tt>YES</tt> votes and the duration of the
--   proposal. The policy applies to all proposals and is specified when
--   the network is created.
--   
--   Applies only to Hyperledger Fabric.
--   
--   <i>See:</i> <a>newApprovalThresholdPolicy</a> smart constructor.
data ApprovalThresholdPolicy
ApprovalThresholdPolicy' :: Maybe Natural -> Maybe ThresholdComparator -> Maybe Natural -> ApprovalThresholdPolicy

-- | Create a value of <a>ApprovalThresholdPolicy</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:thresholdPercentage:ApprovalThresholdPolicy'</a>,
--   <a>approvalThresholdPolicy_thresholdPercentage</a> - The percentage of
--   votes among all members that must be <tt>YES</tt> for a proposal to be
--   approved. For example, a <tt>ThresholdPercentage</tt> value of
--   <tt>50</tt> indicates 50%. The <tt>ThresholdComparator</tt> determines
--   the precise comparison. If a <tt>ThresholdPercentage</tt> value of
--   <tt>50</tt> is specified on a network with 10 members, along with a
--   <tt>ThresholdComparator</tt> value of <tt>GREATER_THAN</tt>, this
--   indicates that 6 <tt>YES</tt> votes are required for the proposal to
--   be approved.
--   
--   <a>$sel:thresholdComparator:ApprovalThresholdPolicy'</a>,
--   <a>approvalThresholdPolicy_thresholdComparator</a> - Determines
--   whether the vote percentage must be greater than the
--   <tt>ThresholdPercentage</tt> or must be greater than or equal to the
--   <tt>ThreholdPercentage</tt> to be approved.
--   
--   <a>$sel:proposalDurationInHours:ApprovalThresholdPolicy'</a>,
--   <a>approvalThresholdPolicy_proposalDurationInHours</a> - The duration
--   from the time that a proposal is created until it expires. If members
--   cast neither the required number of <tt>YES</tt> votes to approve the
--   proposal nor the number of <tt>NO</tt> votes required to reject it
--   before the duration expires, the proposal is <tt>EXPIRED</tt> and
--   <tt>ProposalActions</tt> are not carried out.
newApprovalThresholdPolicy :: ApprovalThresholdPolicy

-- | An invitation to an AWS account to create a member and join the
--   network.
--   
--   Applies only to Hyperledger Fabric.
--   
--   <i>See:</i> <a>newInvitation</a> smart constructor.
data Invitation
Invitation' :: Maybe InvitationStatus -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe NetworkSummary -> Maybe POSIX -> Invitation

-- | Create a value of <a>Invitation</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:Invitation'</a>, <a>invitation_status</a> - The status
--   of the invitation:
--   
--   <ul>
--   <li><tt>PENDING</tt> - The invitee has not created a member to join
--   the network, and the invitation has not yet expired.</li>
--   <li><tt>ACCEPTING</tt> - The invitee has begun creating a member, and
--   creation has not yet completed.</li>
--   <li><tt>ACCEPTED</tt> - The invitee created a member and joined the
--   network using the <tt>InvitationID</tt>.</li>
--   <li><tt>REJECTED</tt> - The invitee rejected the invitation.</li>
--   <li><tt>EXPIRED</tt> - The invitee neither created a member nor
--   rejected the invitation before the <tt>ExpirationDate</tt>.</li>
--   </ul>
--   
--   <a>$sel:arn:Invitation'</a>, <a>invitation_arn</a> - The Amazon
--   Resource Name (ARN) of the invitation. For more information about ARNs
--   and their format, see <a>Amazon Resource Names (ARNs)</a> in the
--   <i>AWS General Reference</i>.
--   
--   <a>$sel:invitationId:Invitation'</a>, <a>invitation_invitationId</a> -
--   The unique identifier for the invitation.
--   
--   <a>$sel:expirationDate:Invitation'</a>,
--   <a>invitation_expirationDate</a> - The date and time that the
--   invitation expires. This is the <tt>CreationDate</tt> plus the
--   <tt>ProposalDurationInHours</tt> that is specified in the
--   <tt>ProposalThresholdPolicy</tt>. After this date and time, the
--   invitee can no longer create a member and join the network using this
--   <tt>InvitationId</tt>.
--   
--   <a>$sel:networkSummary:Invitation'</a>,
--   <a>invitation_networkSummary</a> - Undocumented member.
--   
--   <a>$sel:creationDate:Invitation'</a>, <a>invitation_creationDate</a> -
--   The date and time that the invitation was created.
newInvitation :: Invitation

-- | An action to invite a specific AWS account to create a member and join
--   the network. The <tt>InviteAction</tt> is carried out when a
--   <tt>Proposal</tt> is <tt>APPROVED</tt>.
--   
--   Applies only to Hyperledger Fabric.
--   
--   <i>See:</i> <a>newInviteAction</a> smart constructor.
data InviteAction
InviteAction' :: Text -> InviteAction

-- | Create a value of <a>InviteAction</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:principal:InviteAction'</a>, <a>inviteAction_principal</a> -
--   The AWS account ID to invite.
newInviteAction :: Text -> InviteAction

-- | A configuration for logging events.
--   
--   <i>See:</i> <a>newLogConfiguration</a> smart constructor.
data LogConfiguration
LogConfiguration' :: Maybe Bool -> LogConfiguration

-- | Create a value of <a>LogConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:enabled:LogConfiguration'</a>, <a>logConfiguration_enabled</a>
--   - Indicates whether logging is enabled.
newLogConfiguration :: LogConfiguration

-- | A collection of log configurations.
--   
--   <i>See:</i> <a>newLogConfigurations</a> smart constructor.
data LogConfigurations
LogConfigurations' :: Maybe LogConfiguration -> LogConfigurations

-- | Create a value of <a>LogConfigurations</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cloudwatch:LogConfigurations'</a>,
--   <a>logConfigurations_cloudwatch</a> - Parameters for publishing logs
--   to Amazon CloudWatch Logs.
newLogConfigurations :: LogConfigurations

-- | Member configuration properties.
--   
--   Applies only to Hyperledger Fabric.
--   
--   <i>See:</i> <a>newMember</a> smart constructor.
data Member
Member' :: Maybe MemberStatus -> Maybe Text -> Maybe MemberLogPublishingConfiguration -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe MemberFrameworkAttributes -> Maybe Text -> Maybe (HashMap Text Text) -> Member

-- | Create a value of <a>Member</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:Member'</a>, <a>member_status</a> - The status of a
--   member.
--   
--   <ul>
--   <li><tt>CREATING</tt> - The AWS account is in the process of creating
--   a member.</li>
--   <li><tt>AVAILABLE</tt> - The member has been created and can
--   participate in the network.</li>
--   <li><tt>CREATE_FAILED</tt> - The AWS account attempted to create a
--   member and creation failed.</li>
--   <li><tt>UPDATING</tt> - The member is in the process of being
--   updated.</li>
--   <li><tt>DELETING</tt> - The member and all associated resources are in
--   the process of being deleted. Either the AWS account that owns the
--   member deleted it, or the member is being deleted as the result of an
--   <tt>APPROVED</tt> <tt>PROPOSAL</tt> to remove the member.</li>
--   <li><tt>DELETED</tt> - The member can no longer participate on the
--   network and all associated resources are deleted. Either the AWS
--   account that owns the member deleted it, or the member is being
--   deleted as the result of an <tt>APPROVED</tt> <tt>PROPOSAL</tt> to
--   remove the member.</li>
--   <li><tt>INACCESSIBLE_ENCRYPTION_KEY</tt> - The member is impaired and
--   might not function as expected because it cannot access the specified
--   customer managed key in AWS KMS for encryption at rest. Either the KMS
--   key was disabled or deleted, or the grants on the key were revoked.The
--   effect of disabling or deleting a key, or revoking a grant is not
--   immediate. The member resource might take some time to find that the
--   key is inaccessible. When a resource is in this state, we recommend
--   deleting and recreating the resource.</li>
--   </ul>
--   
--   <a>$sel:kmsKeyArn:Member'</a>, <a>member_kmsKeyArn</a> - The Amazon
--   Resource Name (ARN) of the customer managed key in AWS Key Management
--   Service (AWS KMS) that the member uses for encryption at rest. If the
--   value of this parameter is <tt>"AWS Owned KMS Key"</tt>, the member
--   uses an AWS owned KMS key for encryption. This parameter is inherited
--   by the nodes that this member owns.
--   
--   <a>$sel:logPublishingConfiguration:Member'</a>,
--   <a>member_logPublishingConfiguration</a> - Configuration properties
--   for logging events associated with a member.
--   
--   <a>$sel:arn:Member'</a>, <a>member_arn</a> - The Amazon Resource Name
--   (ARN) of the member. For more information about ARNs and their format,
--   see <a>Amazon Resource Names (ARNs)</a> in the <i>AWS General
--   Reference</i>.
--   
--   <a>$sel:networkId:Member'</a>, <a>member_networkId</a> - The unique
--   identifier of the network to which the member belongs.
--   
--   <a>$sel:name:Member'</a>, <a>member_name</a> - The name of the member.
--   
--   <a>$sel:id:Member'</a>, <a>member_id</a> - The unique identifier of
--   the member.
--   
--   <a>$sel:creationDate:Member'</a>, <a>member_creationDate</a> - The
--   date and time that the member was created.
--   
--   <a>$sel:frameworkAttributes:Member'</a>,
--   <a>member_frameworkAttributes</a> - Attributes relevant to a member
--   for the blockchain framework that the Managed Blockchain network uses.
--   
--   <a>$sel:description:Member'</a>, <a>member_description</a> - An
--   optional description for the member.
--   
--   <a>$sel:tags:Member'</a>, <a>member_tags</a> - Tags assigned to the
--   member. Tags consist of a key and optional value. For more information
--   about tags, see <a>Tagging Resources</a> in the <i>Amazon Managed
--   Blockchain Hyperledger Fabric Developer Guide</i>.
newMember :: Member

-- | Configuration properties of the member.
--   
--   Applies only to Hyperledger Fabric.
--   
--   <i>See:</i> <a>newMemberConfiguration</a> smart constructor.
data MemberConfiguration
MemberConfiguration' :: Maybe Text -> Maybe MemberLogPublishingConfiguration -> Maybe Text -> Maybe (HashMap Text Text) -> Text -> MemberFrameworkConfiguration -> MemberConfiguration

-- | Create a value of <a>MemberConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:kmsKeyArn:MemberConfiguration'</a>,
--   <a>memberConfiguration_kmsKeyArn</a> - The Amazon Resource Name (ARN)
--   of the customer managed key in AWS Key Management Service (AWS KMS) to
--   use for encryption at rest in the member. This parameter is inherited
--   by any nodes that this member creates.
--   
--   Use one of the following options to specify this parameter:
--   
--   <ul>
--   <li><b>Undefined or empty string</b> - The member uses an AWS owned
--   KMS key for encryption by default.</li>
--   <li><b>A valid symmetric customer managed KMS key</b> - The member
--   uses the specified key for encryption.Amazon Managed Blockchain
--   doesn't support asymmetric keys. For more information, see <a>Using
--   symmetric and asymmetric keys</a> in the <i>AWS Key Management Service
--   Developer Guide</i>.The following is an example of a KMS key ARN:
--   <tt>arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</tt></li>
--   </ul>
--   
--   <a>$sel:logPublishingConfiguration:MemberConfiguration'</a>,
--   <a>memberConfiguration_logPublishingConfiguration</a> - Configuration
--   properties for logging events associated with a member of a Managed
--   Blockchain network.
--   
--   <a>$sel:description:MemberConfiguration'</a>,
--   <a>memberConfiguration_description</a> - An optional description of
--   the member.
--   
--   <a>$sel:tags:MemberConfiguration'</a>, <a>memberConfiguration_tags</a>
--   - Tags assigned to the member. Tags consist of a key and optional
--   value. For more information about tags, see <a>Tagging Resources</a>
--   in the <i>Amazon Managed Blockchain Hyperledger Fabric Developer
--   Guide</i>.
--   
--   When specifying tags during creation, you can specify multiple
--   key-value pairs in a single request, with an overall maximum of 50
--   tags added to each resource.
--   
--   <a>$sel:name:MemberConfiguration'</a>, <a>memberConfiguration_name</a>
--   - The name of the member.
--   
--   <a>$sel:frameworkConfiguration:MemberConfiguration'</a>,
--   <a>memberConfiguration_frameworkConfiguration</a> - Configuration
--   properties of the blockchain framework relevant to the member.
newMemberConfiguration :: Text -> MemberFrameworkConfiguration -> MemberConfiguration

-- | Attributes of Hyperledger Fabric for a member in a Managed Blockchain
--   network using the Hyperledger Fabric framework.
--   
--   <i>See:</i> <a>newMemberFabricAttributes</a> smart constructor.
data MemberFabricAttributes
MemberFabricAttributes' :: Maybe Text -> Maybe Text -> MemberFabricAttributes

-- | Create a value of <a>MemberFabricAttributes</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:caEndpoint:MemberFabricAttributes'</a>,
--   <a>memberFabricAttributes_caEndpoint</a> - The endpoint used to access
--   the member's certificate authority.
--   
--   <a>$sel:adminUsername:MemberFabricAttributes'</a>,
--   <a>memberFabricAttributes_adminUsername</a> - The user name for the
--   initial administrator user for the member.
newMemberFabricAttributes :: MemberFabricAttributes

-- | Configuration properties for Hyperledger Fabric for a member in a
--   Managed Blockchain network using the Hyperledger Fabric framework.
--   
--   <i>See:</i> <a>newMemberFabricConfiguration</a> smart constructor.
data MemberFabricConfiguration
MemberFabricConfiguration' :: Text -> Sensitive Text -> MemberFabricConfiguration

-- | Create a value of <a>MemberFabricConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:adminUsername:MemberFabricConfiguration'</a>,
--   <a>memberFabricConfiguration_adminUsername</a> - The user name for the
--   member's initial administrative user.
--   
--   <a>$sel:adminPassword:MemberFabricConfiguration'</a>,
--   <a>memberFabricConfiguration_adminPassword</a> - The password for the
--   member's initial administrative user. The <tt>AdminPassword</tt> must
--   be at least eight characters long and no more than 32 characters. It
--   must contain at least one uppercase letter, one lowercase letter, and
--   one digit. It cannot have a single quotation mark (‘), a double
--   quotation marks (“), a forward slash(/), a backward slash(\), @, or a
--   space.
newMemberFabricConfiguration :: Text -> Text -> MemberFabricConfiguration

-- | Configuration properties for logging events associated with a member
--   of a Managed Blockchain network using the Hyperledger Fabric
--   framework.
--   
--   <i>See:</i> <a>newMemberFabricLogPublishingConfiguration</a> smart
--   constructor.
data MemberFabricLogPublishingConfiguration
MemberFabricLogPublishingConfiguration' :: Maybe LogConfigurations -> MemberFabricLogPublishingConfiguration

-- | Create a value of <a>MemberFabricLogPublishingConfiguration</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:caLogs:MemberFabricLogPublishingConfiguration'</a>,
--   <a>memberFabricLogPublishingConfiguration_caLogs</a> - Configuration
--   properties for logging events associated with a member's Certificate
--   Authority (CA). CA logs help you determine when a member in your
--   account joins the network, or when new peers register with a member
--   CA.
newMemberFabricLogPublishingConfiguration :: MemberFabricLogPublishingConfiguration

-- | Attributes relevant to a member for the blockchain framework that the
--   Managed Blockchain network uses.
--   
--   <i>See:</i> <a>newMemberFrameworkAttributes</a> smart constructor.
data MemberFrameworkAttributes
MemberFrameworkAttributes' :: Maybe MemberFabricAttributes -> MemberFrameworkAttributes

-- | Create a value of <a>MemberFrameworkAttributes</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fabric:MemberFrameworkAttributes'</a>,
--   <a>memberFrameworkAttributes_fabric</a> - Attributes of Hyperledger
--   Fabric relevant to a member on a Managed Blockchain network that uses
--   Hyperledger Fabric.
newMemberFrameworkAttributes :: MemberFrameworkAttributes

-- | Configuration properties relevant to a member for the blockchain
--   framework that the Managed Blockchain network uses.
--   
--   <i>See:</i> <a>newMemberFrameworkConfiguration</a> smart constructor.
data MemberFrameworkConfiguration
MemberFrameworkConfiguration' :: Maybe MemberFabricConfiguration -> MemberFrameworkConfiguration

-- | Create a value of <a>MemberFrameworkConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fabric:MemberFrameworkConfiguration'</a>,
--   <a>memberFrameworkConfiguration_fabric</a> - Attributes of Hyperledger
--   Fabric for a member on a Managed Blockchain network that uses
--   Hyperledger Fabric.
newMemberFrameworkConfiguration :: MemberFrameworkConfiguration

-- | Configuration properties for logging events associated with a member
--   of a Managed Blockchain network.
--   
--   <i>See:</i> <a>newMemberLogPublishingConfiguration</a> smart
--   constructor.
data MemberLogPublishingConfiguration
MemberLogPublishingConfiguration' :: Maybe MemberFabricLogPublishingConfiguration -> MemberLogPublishingConfiguration

-- | Create a value of <a>MemberLogPublishingConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fabric:MemberLogPublishingConfiguration'</a>,
--   <a>memberLogPublishingConfiguration_fabric</a> - Configuration
--   properties for logging events associated with a member of a Managed
--   Blockchain network using the Hyperledger Fabric framework.
newMemberLogPublishingConfiguration :: MemberLogPublishingConfiguration

-- | A summary of configuration properties for a member.
--   
--   Applies only to Hyperledger Fabric.
--   
--   <i>See:</i> <a>newMemberSummary</a> smart constructor.
data MemberSummary
MemberSummary' :: Maybe MemberStatus -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe POSIX -> Maybe Text -> MemberSummary

-- | Create a value of <a>MemberSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:MemberSummary'</a>, <a>memberSummary_status</a> - The
--   status of the member.
--   
--   <ul>
--   <li><tt>CREATING</tt> - The AWS account is in the process of creating
--   a member.</li>
--   <li><tt>AVAILABLE</tt> - The member has been created and can
--   participate in the network.</li>
--   <li><tt>CREATE_FAILED</tt> - The AWS account attempted to create a
--   member and creation failed.</li>
--   <li><tt>UPDATING</tt> - The member is in the process of being
--   updated.</li>
--   <li><tt>DELETING</tt> - The member and all associated resources are in
--   the process of being deleted. Either the AWS account that owns the
--   member deleted it, or the member is being deleted as the result of an
--   <tt>APPROVED</tt> <tt>PROPOSAL</tt> to remove the member.</li>
--   <li><tt>DELETED</tt> - The member can no longer participate on the
--   network and all associated resources are deleted. Either the AWS
--   account that owns the member deleted it, or the member is being
--   deleted as the result of an <tt>APPROVED</tt> <tt>PROPOSAL</tt> to
--   remove the member.</li>
--   <li><tt>INACCESSIBLE_ENCRYPTION_KEY</tt> - The member is impaired and
--   might not function as expected because it cannot access the specified
--   customer managed key in AWS Key Management Service (AWS KMS) for
--   encryption at rest. Either the KMS key was disabled or deleted, or the
--   grants on the key were revoked.The effect of disabling or deleting a
--   key, or revoking a grant is not immediate. The member resource might
--   take some time to find that the key is inaccessible. When a resource
--   is in this state, we recommend deleting and recreating the
--   resource.</li>
--   </ul>
--   
--   <a>$sel:arn:MemberSummary'</a>, <a>memberSummary_arn</a> - The Amazon
--   Resource Name (ARN) of the member. For more information about ARNs and
--   their format, see <a>Amazon Resource Names (ARNs)</a> in the <i>AWS
--   General Reference</i>.
--   
--   <a>$sel:name:MemberSummary'</a>, <a>memberSummary_name</a> - The name
--   of the member.
--   
--   <a>$sel:id:MemberSummary'</a>, <a>memberSummary_id</a> - The unique
--   identifier of the member.
--   
--   <a>$sel:isOwned:MemberSummary'</a>, <a>memberSummary_isOwned</a> - An
--   indicator of whether the member is owned by your AWS account or a
--   different AWS account.
--   
--   <a>$sel:creationDate:MemberSummary'</a>,
--   <a>memberSummary_creationDate</a> - The date and time that the member
--   was created.
--   
--   <a>$sel:description:MemberSummary'</a>,
--   <a>memberSummary_description</a> - An optional description of the
--   member.
newMemberSummary :: MemberSummary

-- | Network configuration properties.
--   
--   <i>See:</i> <a>newNetwork</a> smart constructor.
data Network
Network' :: Maybe NetworkStatus -> Maybe Framework -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe VotingPolicy -> Maybe POSIX -> Maybe NetworkFrameworkAttributes -> Maybe Text -> Maybe (HashMap Text Text) -> Network

-- | Create a value of <a>Network</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:Network'</a>, <a>network_status</a> - The current
--   status of the network.
--   
--   <a>$sel:framework:Network'</a>, <a>network_framework</a> - The
--   blockchain framework that the network uses.
--   
--   <a>$sel:arn:Network'</a>, <a>network_arn</a> - The Amazon Resource
--   Name (ARN) of the network. For more information about ARNs and their
--   format, see <a>Amazon Resource Names (ARNs)</a> in the <i>AWS General
--   Reference</i>.
--   
--   <a>$sel:frameworkVersion:Network'</a>, <a>network_frameworkVersion</a>
--   - The version of the blockchain framework that the network uses.
--   
--   <a>$sel:vpcEndpointServiceName:Network'</a>,
--   <a>network_vpcEndpointServiceName</a> - The VPC endpoint service name
--   of the VPC endpoint service of the network. Members use the VPC
--   endpoint service name to create a VPC endpoint to access network
--   resources.
--   
--   <a>$sel:name:Network'</a>, <a>network_name</a> - The name of the
--   network.
--   
--   <a>$sel:id:Network'</a>, <a>network_id</a> - The unique identifier of
--   the network.
--   
--   <a>$sel:votingPolicy:Network'</a>, <a>network_votingPolicy</a> - The
--   voting rules for the network to decide if a proposal is accepted.
--   
--   <a>$sel:creationDate:Network'</a>, <a>network_creationDate</a> - The
--   date and time that the network was created.
--   
--   <a>$sel:frameworkAttributes:Network'</a>,
--   <a>network_frameworkAttributes</a> - Attributes of the blockchain
--   framework that the network uses.
--   
--   <a>$sel:description:Network'</a>, <a>network_description</a> -
--   Attributes of the blockchain framework for the network.
--   
--   <a>$sel:tags:Network'</a>, <a>network_tags</a> - Tags assigned to the
--   network. Each tag consists of a key and optional value.
--   
--   For more information about tags, see <a>Tagging Resources</a> in the
--   <i>Amazon Managed Blockchain Ethereum Developer Guide</i>, or
--   <a>Tagging Resources</a> in the <i>Amazon Managed Blockchain
--   Hyperledger Fabric Developer Guide</i>.
newNetwork :: Network

-- | Attributes of Ethereum for a network.
--   
--   <i>See:</i> <a>newNetworkEthereumAttributes</a> smart constructor.
data NetworkEthereumAttributes
NetworkEthereumAttributes' :: Maybe Text -> NetworkEthereumAttributes

-- | Create a value of <a>NetworkEthereumAttributes</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:chainId:NetworkEthereumAttributes'</a>,
--   <a>networkEthereumAttributes_chainId</a> - The Ethereum
--   <tt>CHAIN_ID</tt> associated with the Ethereum network. Chain IDs are
--   as follows:
--   
--   <ul>
--   <li>mainnet = <tt>1</tt></li>
--   <li>rinkeby = <tt>4</tt></li>
--   <li>ropsten = <tt>3</tt></li>
--   </ul>
newNetworkEthereumAttributes :: NetworkEthereumAttributes

-- | Attributes of Hyperledger Fabric for a network.
--   
--   <i>See:</i> <a>newNetworkFabricAttributes</a> smart constructor.
data NetworkFabricAttributes
NetworkFabricAttributes' :: Maybe Edition -> Maybe Text -> NetworkFabricAttributes

-- | Create a value of <a>NetworkFabricAttributes</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:edition:NetworkFabricAttributes'</a>,
--   <a>networkFabricAttributes_edition</a> - The edition of Amazon Managed
--   Blockchain that Hyperledger Fabric uses. For more information, see
--   <a>Amazon Managed Blockchain Pricing</a>.
--   
--   <a>$sel:orderingServiceEndpoint:NetworkFabricAttributes'</a>,
--   <a>networkFabricAttributes_orderingServiceEndpoint</a> - The endpoint
--   of the ordering service for the network.
newNetworkFabricAttributes :: NetworkFabricAttributes

-- | Hyperledger Fabric configuration properties for the network.
--   
--   <i>See:</i> <a>newNetworkFabricConfiguration</a> smart constructor.
data NetworkFabricConfiguration
NetworkFabricConfiguration' :: Edition -> NetworkFabricConfiguration

-- | Create a value of <a>NetworkFabricConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:edition:NetworkFabricConfiguration'</a>,
--   <a>networkFabricConfiguration_edition</a> - The edition of Amazon
--   Managed Blockchain that the network uses. For more information, see
--   <a>Amazon Managed Blockchain Pricing</a>.
newNetworkFabricConfiguration :: Edition -> NetworkFabricConfiguration

-- | Attributes relevant to the network for the blockchain framework that
--   the network uses.
--   
--   <i>See:</i> <a>newNetworkFrameworkAttributes</a> smart constructor.
data NetworkFrameworkAttributes
NetworkFrameworkAttributes' :: Maybe NetworkFabricAttributes -> Maybe NetworkEthereumAttributes -> NetworkFrameworkAttributes

-- | Create a value of <a>NetworkFrameworkAttributes</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fabric:NetworkFrameworkAttributes'</a>,
--   <a>networkFrameworkAttributes_fabric</a> - Attributes of Hyperledger
--   Fabric for a Managed Blockchain network that uses Hyperledger Fabric.
--   
--   <a>$sel:ethereum:NetworkFrameworkAttributes'</a>,
--   <a>networkFrameworkAttributes_ethereum</a> - Attributes of an Ethereum
--   network for Managed Blockchain resources participating in an Ethereum
--   network.
newNetworkFrameworkAttributes :: NetworkFrameworkAttributes

-- | Configuration properties relevant to the network for the blockchain
--   framework that the network uses.
--   
--   <i>See:</i> <a>newNetworkFrameworkConfiguration</a> smart constructor.
data NetworkFrameworkConfiguration
NetworkFrameworkConfiguration' :: Maybe NetworkFabricConfiguration -> NetworkFrameworkConfiguration

-- | Create a value of <a>NetworkFrameworkConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fabric:NetworkFrameworkConfiguration'</a>,
--   <a>networkFrameworkConfiguration_fabric</a> - Hyperledger Fabric
--   configuration properties for a Managed Blockchain network that uses
--   Hyperledger Fabric.
newNetworkFrameworkConfiguration :: NetworkFrameworkConfiguration

-- | A summary of network configuration properties.
--   
--   <i>See:</i> <a>newNetworkSummary</a> smart constructor.
data NetworkSummary
NetworkSummary' :: Maybe NetworkStatus -> Maybe Framework -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> NetworkSummary

-- | Create a value of <a>NetworkSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:NetworkSummary'</a>, <a>networkSummary_status</a> - The
--   current status of the network.
--   
--   <a>$sel:framework:NetworkSummary'</a>, <a>networkSummary_framework</a>
--   - The blockchain framework that the network uses.
--   
--   <a>$sel:arn:NetworkSummary'</a>, <a>networkSummary_arn</a> - The
--   Amazon Resource Name (ARN) of the network. For more information about
--   ARNs and their format, see <a>Amazon Resource Names (ARNs)</a> in the
--   <i>AWS General Reference</i>.
--   
--   <a>$sel:frameworkVersion:NetworkSummary'</a>,
--   <a>networkSummary_frameworkVersion</a> - The version of the blockchain
--   framework that the network uses.
--   
--   <a>$sel:name:NetworkSummary'</a>, <a>networkSummary_name</a> - The
--   name of the network.
--   
--   <a>$sel:id:NetworkSummary'</a>, <a>networkSummary_id</a> - The unique
--   identifier of the network.
--   
--   <a>$sel:creationDate:NetworkSummary'</a>,
--   <a>networkSummary_creationDate</a> - The date and time that the
--   network was created.
--   
--   <a>$sel:description:NetworkSummary'</a>,
--   <a>networkSummary_description</a> - An optional description of the
--   network.
newNetworkSummary :: NetworkSummary

-- | Configuration properties of a node.
--   
--   <i>See:</i> <a>newNode</a> smart constructor.
data Node
Node' :: Maybe NodeStatus -> Maybe Text -> Maybe NodeLogPublishingConfiguration -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe StateDBType -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe NodeFrameworkAttributes -> Maybe (HashMap Text Text) -> Node

-- | Create a value of <a>Node</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:Node'</a>, <a>node_status</a> - The status of the node.
--   
--   <ul>
--   <li><tt>CREATING</tt> - The AWS account is in the process of creating
--   a node.</li>
--   <li><tt>AVAILABLE</tt> - The node has been created and can participate
--   in the network.</li>
--   <li><tt>UNHEALTHY</tt> - The node is impaired and might not function
--   as expected. Amazon Managed Blockchain automatically finds nodes in
--   this state and tries to recover them. If a node is recoverable, it
--   returns to <tt>AVAILABLE</tt>. Otherwise, it moves to <tt>FAILED</tt>
--   status.</li>
--   <li><tt>CREATE_FAILED</tt> - The AWS account attempted to create a
--   node and creation failed.</li>
--   <li><tt>UPDATING</tt> - The node is in the process of being
--   updated.</li>
--   <li><tt>DELETING</tt> - The node is in the process of being
--   deleted.</li>
--   <li><tt>DELETED</tt> - The node can no longer participate on the
--   network.</li>
--   <li><tt>FAILED</tt> - The node is no longer functional, cannot be
--   recovered, and must be deleted.</li>
--   <li><tt>INACCESSIBLE_ENCRYPTION_KEY</tt> - The node is impaired and
--   might not function as expected because it cannot access the specified
--   customer managed key in AWS KMS for encryption at rest. Either the KMS
--   key was disabled or deleted, or the grants on the key were revoked.The
--   effect of disabling or deleting a key, or revoking a grant is not
--   immediate. The node resource might take some time to find that the key
--   is inaccessible. When a resource is in this state, we recommend
--   deleting and recreating the resource.</li>
--   </ul>
--   
--   <a>$sel:kmsKeyArn:Node'</a>, <a>node_kmsKeyArn</a> - The Amazon
--   Resource Name (ARN) of the customer managed key in AWS Key Management
--   Service (AWS KMS) that the node uses for encryption at rest. If the
--   value of this parameter is <tt>"AWS Owned KMS Key"</tt>, the node uses
--   an AWS owned KMS key for encryption. The node inherits this parameter
--   from the member that it belongs to.
--   
--   Applies only to Hyperledger Fabric.
--   
--   <a>$sel:logPublishingConfiguration:Node'</a>,
--   <a>node_logPublishingConfiguration</a> - Configuration properties for
--   logging events associated with a peer node on a Hyperledger Fabric
--   network on Managed Blockchain.
--   
--   <a>$sel:memberId:Node'</a>, <a>node_memberId</a> - The unique
--   identifier of the member to which the node belongs.
--   
--   Applies only to Hyperledger Fabric.
--   
--   <a>$sel:arn:Node'</a>, <a>node_arn</a> - The Amazon Resource Name
--   (ARN) of the node. For more information about ARNs and their format,
--   see <a>Amazon Resource Names (ARNs)</a> in the <i>AWS General
--   Reference</i>.
--   
--   <a>$sel:networkId:Node'</a>, <a>node_networkId</a> - The unique
--   identifier of the network that the node is on.
--   
--   <a>$sel:instanceType:Node'</a>, <a>node_instanceType</a> - The
--   instance type of the node.
--   
--   <a>$sel:stateDB:Node'</a>, <a>node_stateDB</a> - The state database
--   that the node uses. Values are <tt>LevelDB</tt> or <tt>CouchDB</tt>.
--   
--   Applies only to Hyperledger Fabric.
--   
--   <a>$sel:availabilityZone:Node'</a>, <a>node_availabilityZone</a> - The
--   Availability Zone in which the node exists. Required for Ethereum
--   nodes.
--   
--   <a>$sel:id:Node'</a>, <a>node_id</a> - The unique identifier of the
--   node.
--   
--   <a>$sel:creationDate:Node'</a>, <a>node_creationDate</a> - The date
--   and time that the node was created.
--   
--   <a>$sel:frameworkAttributes:Node'</a>, <a>node_frameworkAttributes</a>
--   - Attributes of the blockchain framework being used.
--   
--   <a>$sel:tags:Node'</a>, <a>node_tags</a> - Tags assigned to the node.
--   Each tag consists of a key and optional value.
--   
--   For more information about tags, see <a>Tagging Resources</a> in the
--   <i>Amazon Managed Blockchain Ethereum Developer Guide</i>, or
--   <a>Tagging Resources</a> in the <i>Amazon Managed Blockchain
--   Hyperledger Fabric Developer Guide</i>.
newNode :: Node

-- | Configuration properties of a node.
--   
--   <i>See:</i> <a>newNodeConfiguration</a> smart constructor.
data NodeConfiguration
NodeConfiguration' :: Maybe NodeLogPublishingConfiguration -> Maybe StateDBType -> Maybe Text -> Text -> NodeConfiguration

-- | Create a value of <a>NodeConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:logPublishingConfiguration:NodeConfiguration'</a>,
--   <a>nodeConfiguration_logPublishingConfiguration</a> - Configuration
--   properties for logging events associated with a peer node on a
--   Hyperledger Fabric network on Managed Blockchain.
--   
--   <a>$sel:stateDB:NodeConfiguration'</a>,
--   <a>nodeConfiguration_stateDB</a> - The state database that the node
--   uses. Values are <tt>LevelDB</tt> or <tt>CouchDB</tt>. When using an
--   Amazon Managed Blockchain network with Hyperledger Fabric version 1.4
--   or later, the default is <tt>CouchDB</tt>.
--   
--   Applies only to Hyperledger Fabric.
--   
--   <a>$sel:availabilityZone:NodeConfiguration'</a>,
--   <a>nodeConfiguration_availabilityZone</a> - The Availability Zone in
--   which the node exists. Required for Ethereum nodes.
--   
--   <a>$sel:instanceType:NodeConfiguration'</a>,
--   <a>nodeConfiguration_instanceType</a> - The Amazon Managed Blockchain
--   instance type for the node.
newNodeConfiguration :: Text -> NodeConfiguration

-- | Attributes of an Ethereum node.
--   
--   <i>See:</i> <a>newNodeEthereumAttributes</a> smart constructor.
data NodeEthereumAttributes
NodeEthereumAttributes' :: Maybe Text -> Maybe Text -> NodeEthereumAttributes

-- | Create a value of <a>NodeEthereumAttributes</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpEndpoint:NodeEthereumAttributes'</a>,
--   <a>nodeEthereumAttributes_httpEndpoint</a> - The endpoint on which the
--   Ethereum node listens to run Ethereum JSON-RPC methods over HTTP
--   connections from a client. Use this endpoint in client code for smart
--   contracts when using an HTTP connection. Connections to this endpoint
--   are authenticated using <a>Signature Version 4</a>.
--   
--   <a>$sel:webSocketEndpoint:NodeEthereumAttributes'</a>,
--   <a>nodeEthereumAttributes_webSocketEndpoint</a> - The endpoint on
--   which the Ethereum node listens to run Ethereum JSON-RPC methods over
--   WebSockets connections from a client. Use this endpoint in client code
--   for smart contracts when using a WebSockets connection. Connections to
--   this endpoint are authenticated using <a>Signature Version 4</a>.
newNodeEthereumAttributes :: NodeEthereumAttributes

-- | Attributes of Hyperledger Fabric for a peer node on a Hyperledger
--   Fabric network on Managed Blockchain.
--   
--   <i>See:</i> <a>newNodeFabricAttributes</a> smart constructor.
data NodeFabricAttributes
NodeFabricAttributes' :: Maybe Text -> Maybe Text -> NodeFabricAttributes

-- | Create a value of <a>NodeFabricAttributes</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:peerEventEndpoint:NodeFabricAttributes'</a>,
--   <a>nodeFabricAttributes_peerEventEndpoint</a> - The endpoint that
--   identifies the peer node for peer channel-based event services.
--   
--   <a>$sel:peerEndpoint:NodeFabricAttributes'</a>,
--   <a>nodeFabricAttributes_peerEndpoint</a> - The endpoint that
--   identifies the peer node for all services except peer channel-based
--   event services.
newNodeFabricAttributes :: NodeFabricAttributes

-- | Configuration properties for logging events associated with a peer
--   node owned by a member in a Managed Blockchain network.
--   
--   <i>See:</i> <a>newNodeFabricLogPublishingConfiguration</a> smart
--   constructor.
data NodeFabricLogPublishingConfiguration
NodeFabricLogPublishingConfiguration' :: Maybe LogConfigurations -> Maybe LogConfigurations -> NodeFabricLogPublishingConfiguration

-- | Create a value of <a>NodeFabricLogPublishingConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:chaincodeLogs:NodeFabricLogPublishingConfiguration'</a>,
--   <a>nodeFabricLogPublishingConfiguration_chaincodeLogs</a> -
--   Configuration properties for logging events associated with chaincode
--   execution on a peer node. Chaincode logs contain the results of
--   instantiating, invoking, and querying the chaincode. A peer can run
--   multiple instances of chaincode. When enabled, a log stream is created
--   for all chaincodes, with an individual log stream for each chaincode.
--   
--   <a>$sel:peerLogs:NodeFabricLogPublishingConfiguration'</a>,
--   <a>nodeFabricLogPublishingConfiguration_peerLogs</a> - Configuration
--   properties for a peer node log. Peer node logs contain messages
--   generated when your client submits transaction proposals to peer
--   nodes, requests to join channels, enrolls an admin peer, and lists the
--   chaincode instances on a peer node.
newNodeFabricLogPublishingConfiguration :: NodeFabricLogPublishingConfiguration

-- | Attributes relevant to a node on a Managed Blockchain network for the
--   blockchain framework that the network uses.
--   
--   <i>See:</i> <a>newNodeFrameworkAttributes</a> smart constructor.
data NodeFrameworkAttributes
NodeFrameworkAttributes' :: Maybe NodeFabricAttributes -> Maybe NodeEthereumAttributes -> NodeFrameworkAttributes

-- | Create a value of <a>NodeFrameworkAttributes</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fabric:NodeFrameworkAttributes'</a>,
--   <a>nodeFrameworkAttributes_fabric</a> - Attributes of Hyperledger
--   Fabric for a peer node on a Managed Blockchain network that uses
--   Hyperledger Fabric.
--   
--   <a>$sel:ethereum:NodeFrameworkAttributes'</a>,
--   <a>nodeFrameworkAttributes_ethereum</a> - Attributes of Ethereum for a
--   node on a Managed Blockchain network that uses Ethereum.
newNodeFrameworkAttributes :: NodeFrameworkAttributes

-- | Configuration properties for logging events associated with a peer
--   node on a Hyperledger Fabric network on Managed Blockchain.
--   
--   <i>See:</i> <a>newNodeLogPublishingConfiguration</a> smart
--   constructor.
data NodeLogPublishingConfiguration
NodeLogPublishingConfiguration' :: Maybe NodeFabricLogPublishingConfiguration -> NodeLogPublishingConfiguration

-- | Create a value of <a>NodeLogPublishingConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fabric:NodeLogPublishingConfiguration'</a>,
--   <a>nodeLogPublishingConfiguration_fabric</a> - Configuration
--   properties for logging events associated with a node that is owned by
--   a member of a Managed Blockchain network using the Hyperledger Fabric
--   framework.
newNodeLogPublishingConfiguration :: NodeLogPublishingConfiguration

-- | A summary of configuration properties for a node.
--   
--   <i>See:</i> <a>newNodeSummary</a> smart constructor.
data NodeSummary
NodeSummary' :: Maybe NodeStatus -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> NodeSummary

-- | Create a value of <a>NodeSummary</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:NodeSummary'</a>, <a>nodeSummary_status</a> - The
--   status of the node.
--   
--   <a>$sel:arn:NodeSummary'</a>, <a>nodeSummary_arn</a> - The Amazon
--   Resource Name (ARN) of the node. For more information about ARNs and
--   their format, see <a>Amazon Resource Names (ARNs)</a> in the <i>AWS
--   General Reference</i>.
--   
--   <a>$sel:instanceType:NodeSummary'</a>, <a>nodeSummary_instanceType</a>
--   - The EC2 instance type for the node.
--   
--   <a>$sel:availabilityZone:NodeSummary'</a>,
--   <a>nodeSummary_availabilityZone</a> - The Availability Zone in which
--   the node exists.
--   
--   <a>$sel:id:NodeSummary'</a>, <a>nodeSummary_id</a> - The unique
--   identifier of the node.
--   
--   <a>$sel:creationDate:NodeSummary'</a>, <a>nodeSummary_creationDate</a>
--   - The date and time that the node was created.
newNodeSummary :: NodeSummary

-- | Properties of a proposal on a Managed Blockchain network.
--   
--   Applies only to Hyperledger Fabric.
--   
--   <i>See:</i> <a>newProposal</a> smart constructor.
data Proposal
Proposal' :: Maybe ProposalStatus -> Maybe Int -> Maybe Int -> Maybe Text -> Maybe ProposalActions -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe POSIX -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe Int -> Proposal

-- | Create a value of <a>Proposal</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:Proposal'</a>, <a>proposal_status</a> - The status of
--   the proposal. Values are as follows:
--   
--   <ul>
--   <li><tt>IN_PROGRESS</tt> - The proposal is active and open for member
--   voting.</li>
--   <li><tt>APPROVED</tt> - The proposal was approved with sufficient
--   <tt>YES</tt> votes among members according to the
--   <tt>VotingPolicy</tt> specified for the <tt>Network</tt>. The
--   specified proposal actions are carried out.</li>
--   <li><tt>REJECTED</tt> - The proposal was rejected with insufficient
--   <tt>YES</tt> votes among members according to the
--   <tt>VotingPolicy</tt> specified for the <tt>Network</tt>. The
--   specified <tt>ProposalActions</tt> are not carried out.</li>
--   <li><tt>EXPIRED</tt> - Members did not cast the number of votes
--   required to determine the proposal outcome before the proposal
--   expired. The specified <tt>ProposalActions</tt> are not carried
--   out.</li>
--   <li><tt>ACTION_FAILED</tt> - One or more of the specified
--   <tt>ProposalActions</tt> in a proposal that was approved could not be
--   completed because of an error. The <tt>ACTION_FAILED</tt> status
--   occurs even if only one ProposalAction fails and other actions are
--   successful.</li>
--   </ul>
--   
--   <a>$sel:yesVoteCount:Proposal'</a>, <a>proposal_yesVoteCount</a> - The
--   current total of <tt>YES</tt> votes cast on the proposal by members.
--   
--   <a>$sel:noVoteCount:Proposal'</a>, <a>proposal_noVoteCount</a> - The
--   current total of <tt>NO</tt> votes cast on the proposal by members.
--   
--   <a>$sel:arn:Proposal'</a>, <a>proposal_arn</a> - The Amazon Resource
--   Name (ARN) of the proposal. For more information about ARNs and their
--   format, see <a>Amazon Resource Names (ARNs)</a> in the <i>AWS General
--   Reference</i>.
--   
--   <a>$sel:actions:Proposal'</a>, <a>proposal_actions</a> - The actions
--   to perform on the network if the proposal is <tt>APPROVED</tt>.
--   
--   <a>$sel:networkId:Proposal'</a>, <a>proposal_networkId</a> - The
--   unique identifier of the network for which the proposal is made.
--   
--   <a>$sel:proposedByMemberId:Proposal'</a>,
--   <a>proposal_proposedByMemberId</a> - The unique identifier of the
--   member that created the proposal.
--   
--   <a>$sel:proposalId:Proposal'</a>, <a>proposal_proposalId</a> - The
--   unique identifier of the proposal.
--   
--   <a>$sel:proposedByMemberName:Proposal'</a>,
--   <a>proposal_proposedByMemberName</a> - The name of the member that
--   created the proposal.
--   
--   <a>$sel:expirationDate:Proposal'</a>, <a>proposal_expirationDate</a> -
--   The date and time that the proposal expires. This is the
--   <tt>CreationDate</tt> plus the <tt>ProposalDurationInHours</tt> that
--   is specified in the <tt>ProposalThresholdPolicy</tt>. After this date
--   and time, if members have not cast enough votes to determine the
--   outcome according to the voting policy, the proposal is
--   <tt>EXPIRED</tt> and <tt>Actions</tt> are not carried out.
--   
--   <a>$sel:creationDate:Proposal'</a>, <a>proposal_creationDate</a> - The
--   date and time that the proposal was created.
--   
--   <a>$sel:description:Proposal'</a>, <a>proposal_description</a> - The
--   description of the proposal.
--   
--   <a>$sel:tags:Proposal'</a>, <a>proposal_tags</a> - Tags assigned to
--   the proposal. Each tag consists of a key and optional value.
--   
--   For more information about tags, see <a>Tagging Resources</a> in the
--   <i>Amazon Managed Blockchain Ethereum Developer Guide</i>, or
--   <a>Tagging Resources</a> in the <i>Amazon Managed Blockchain
--   Hyperledger Fabric Developer Guide</i>.
--   
--   <a>$sel:outstandingVoteCount:Proposal'</a>,
--   <a>proposal_outstandingVoteCount</a> - The number of votes remaining
--   to be cast on the proposal by members. In other words, the number of
--   members minus the sum of <tt>YES</tt> votes and <tt>NO</tt> votes.
newProposal :: Proposal

-- | The actions to carry out if a proposal is <tt>APPROVED</tt>.
--   
--   Applies only to Hyperledger Fabric.
--   
--   <i>See:</i> <a>newProposalActions</a> smart constructor.
data ProposalActions
ProposalActions' :: Maybe [InviteAction] -> Maybe [RemoveAction] -> ProposalActions

-- | Create a value of <a>ProposalActions</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:invitations:ProposalActions'</a>,
--   <a>proposalActions_invitations</a> - The actions to perform for an
--   <tt>APPROVED</tt> proposal to invite an AWS account to create a member
--   and join the network.
--   
--   <a>$sel:removals:ProposalActions'</a>, <a>proposalActions_removals</a>
--   - The actions to perform for an <tt>APPROVED</tt> proposal to remove a
--   member from the network, which deletes the member and all associated
--   member resources from the network.
newProposalActions :: ProposalActions

-- | Properties of a proposal.
--   
--   Applies only to Hyperledger Fabric.
--   
--   <i>See:</i> <a>newProposalSummary</a> smart constructor.
data ProposalSummary
ProposalSummary' :: Maybe ProposalStatus -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe POSIX -> Maybe Text -> ProposalSummary

-- | Create a value of <a>ProposalSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:ProposalSummary'</a>, <a>proposalSummary_status</a> -
--   The status of the proposal. Values are as follows:
--   
--   <ul>
--   <li><tt>IN_PROGRESS</tt> - The proposal is active and open for member
--   voting.</li>
--   <li><tt>APPROVED</tt> - The proposal was approved with sufficient
--   <tt>YES</tt> votes among members according to the
--   <tt>VotingPolicy</tt> specified for the <tt>Network</tt>. The
--   specified proposal actions are carried out.</li>
--   <li><tt>REJECTED</tt> - The proposal was rejected with insufficient
--   <tt>YES</tt> votes among members according to the
--   <tt>VotingPolicy</tt> specified for the <tt>Network</tt>. The
--   specified <tt>ProposalActions</tt> are not carried out.</li>
--   <li><tt>EXPIRED</tt> - Members did not cast the number of votes
--   required to determine the proposal outcome before the proposal
--   expired. The specified <tt>ProposalActions</tt> are not carried
--   out.</li>
--   <li><tt>ACTION_FAILED</tt> - One or more of the specified
--   <tt>ProposalActions</tt> in a proposal that was approved could not be
--   completed because of an error.</li>
--   </ul>
--   
--   <a>$sel:arn:ProposalSummary'</a>, <a>proposalSummary_arn</a> - The
--   Amazon Resource Name (ARN) of the proposal. For more information about
--   ARNs and their format, see <a>Amazon Resource Names (ARNs)</a> in the
--   <i>AWS General Reference</i>.
--   
--   <a>$sel:proposedByMemberId:ProposalSummary'</a>,
--   <a>proposalSummary_proposedByMemberId</a> - The unique identifier of
--   the member that created the proposal.
--   
--   <a>$sel:proposalId:ProposalSummary'</a>,
--   <a>proposalSummary_proposalId</a> - The unique identifier of the
--   proposal.
--   
--   <a>$sel:proposedByMemberName:ProposalSummary'</a>,
--   <a>proposalSummary_proposedByMemberName</a> - The name of the member
--   that created the proposal.
--   
--   <a>$sel:expirationDate:ProposalSummary'</a>,
--   <a>proposalSummary_expirationDate</a> - The date and time that the
--   proposal expires. This is the <tt>CreationDate</tt> plus the
--   <tt>ProposalDurationInHours</tt> that is specified in the
--   <tt>ProposalThresholdPolicy</tt>. After this date and time, if members
--   have not cast enough votes to determine the outcome according to the
--   voting policy, the proposal is <tt>EXPIRED</tt> and <tt>Actions</tt>
--   are not carried out.
--   
--   <a>$sel:creationDate:ProposalSummary'</a>,
--   <a>proposalSummary_creationDate</a> - The date and time that the
--   proposal was created.
--   
--   <a>$sel:description:ProposalSummary'</a>,
--   <a>proposalSummary_description</a> - The description of the proposal.
newProposalSummary :: ProposalSummary

-- | An action to remove a member from a Managed Blockchain network as the
--   result of a removal proposal that is <tt>APPROVED</tt>. The member and
--   all associated resources are deleted from the network.
--   
--   Applies only to Hyperledger Fabric.
--   
--   <i>See:</i> <a>newRemoveAction</a> smart constructor.
data RemoveAction
RemoveAction' :: Text -> RemoveAction

-- | Create a value of <a>RemoveAction</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:memberId:RemoveAction'</a>, <a>removeAction_memberId</a> - The
--   unique identifier of the member to remove.
newRemoveAction :: Text -> RemoveAction

-- | Properties of an individual vote that a member cast for a proposal.
--   
--   Applies only to Hyperledger Fabric.
--   
--   <i>See:</i> <a>newVoteSummary</a> smart constructor.
data VoteSummary
VoteSummary' :: Maybe Text -> Maybe Text -> Maybe VoteValue -> VoteSummary

-- | Create a value of <a>VoteSummary</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:memberName:VoteSummary'</a>, <a>voteSummary_memberName</a> -
--   The name of the member that cast the vote.
--   
--   <a>$sel:memberId:VoteSummary'</a>, <a>voteSummary_memberId</a> - The
--   unique identifier of the member that cast the vote.
--   
--   <a>$sel:vote:VoteSummary'</a>, <a>voteSummary_vote</a> - The vote
--   value, either <tt>YES</tt> or <tt>NO</tt>.
newVoteSummary :: VoteSummary

-- | The voting rules for the network to decide if a proposal is accepted
--   
--   Applies only to Hyperledger Fabric.
--   
--   <i>See:</i> <a>newVotingPolicy</a> smart constructor.
data VotingPolicy
VotingPolicy' :: Maybe ApprovalThresholdPolicy -> VotingPolicy

-- | Create a value of <a>VotingPolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:approvalThresholdPolicy:VotingPolicy'</a>,
--   <a>votingPolicy_approvalThresholdPolicy</a> - Defines the rules for
--   the network for voting on proposals, such as the percentage of
--   <tt>YES</tt> votes required for the proposal to be approved and the
--   duration of the proposal. The policy applies to all proposals and is
--   specified when the network is created.
newVotingPolicy :: VotingPolicy
