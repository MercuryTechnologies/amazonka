-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/

@package libZSservicesZSamazonka-chime-sdk-messagingZSamazonka-chime-sdk-messaging
@version 2.0


module Network.AWS.ChimeSDKMessaging.Types.ChannelMembershipType
newtype ChannelMembershipType
ChannelMembershipType' :: Text -> ChannelMembershipType
[fromChannelMembershipType] :: ChannelMembershipType -> Text
pattern ChannelMembershipType_DEFAULT :: ChannelMembershipType
pattern ChannelMembershipType_HIDDEN :: ChannelMembershipType
instance Network.AWS.Data.XML.ToXML Network.AWS.ChimeSDKMessaging.Types.ChannelMembershipType.ChannelMembershipType
instance Network.AWS.Data.XML.FromXML Network.AWS.ChimeSDKMessaging.Types.ChannelMembershipType.ChannelMembershipType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.ChimeSDKMessaging.Types.ChannelMembershipType.ChannelMembershipType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ChimeSDKMessaging.Types.ChannelMembershipType.ChannelMembershipType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.ChimeSDKMessaging.Types.ChannelMembershipType.ChannelMembershipType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ChimeSDKMessaging.Types.ChannelMembershipType.ChannelMembershipType
instance Network.AWS.Data.Query.ToQuery Network.AWS.ChimeSDKMessaging.Types.ChannelMembershipType.ChannelMembershipType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.ChimeSDKMessaging.Types.ChannelMembershipType.ChannelMembershipType
instance Network.AWS.Data.Log.ToLog Network.AWS.ChimeSDKMessaging.Types.ChannelMembershipType.ChannelMembershipType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.ChimeSDKMessaging.Types.ChannelMembershipType.ChannelMembershipType
instance Network.AWS.Data.Text.ToText Network.AWS.ChimeSDKMessaging.Types.ChannelMembershipType.ChannelMembershipType
instance Network.AWS.Data.Text.FromText Network.AWS.ChimeSDKMessaging.Types.ChannelMembershipType.ChannelMembershipType
instance Control.DeepSeq.NFData Network.AWS.ChimeSDKMessaging.Types.ChannelMembershipType.ChannelMembershipType
instance Data.Hashable.Class.Hashable Network.AWS.ChimeSDKMessaging.Types.ChannelMembershipType.ChannelMembershipType
instance GHC.Generics.Generic Network.AWS.ChimeSDKMessaging.Types.ChannelMembershipType.ChannelMembershipType
instance GHC.Classes.Ord Network.AWS.ChimeSDKMessaging.Types.ChannelMembershipType.ChannelMembershipType
instance GHC.Classes.Eq Network.AWS.ChimeSDKMessaging.Types.ChannelMembershipType.ChannelMembershipType
instance GHC.Read.Read Network.AWS.ChimeSDKMessaging.Types.ChannelMembershipType.ChannelMembershipType
instance GHC.Show.Show Network.AWS.ChimeSDKMessaging.Types.ChannelMembershipType.ChannelMembershipType


module Network.AWS.ChimeSDKMessaging.Types.AppInstanceUserMembershipSummary

-- | Summary of the membership details of an <tt>AppInstanceUser</tt>.
--   
--   <i>See:</i> <a>newAppInstanceUserMembershipSummary</a> smart
--   constructor.
data AppInstanceUserMembershipSummary
AppInstanceUserMembershipSummary' :: Maybe POSIX -> Maybe ChannelMembershipType -> AppInstanceUserMembershipSummary

-- | The time at which a message was last read.
[$sel:readMarkerTimestamp:AppInstanceUserMembershipSummary'] :: AppInstanceUserMembershipSummary -> Maybe POSIX

-- | The type of <tt>ChannelMembership</tt>.
[$sel:type':AppInstanceUserMembershipSummary'] :: AppInstanceUserMembershipSummary -> Maybe ChannelMembershipType

-- | Create a value of <a>AppInstanceUserMembershipSummary</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:readMarkerTimestamp:AppInstanceUserMembershipSummary'</a>,
--   <a>appInstanceUserMembershipSummary_readMarkerTimestamp</a> - The time
--   at which a message was last read.
--   
--   <a>$sel:type':AppInstanceUserMembershipSummary'</a>,
--   <a>appInstanceUserMembershipSummary_type</a> - The type of
--   <tt>ChannelMembership</tt>.
newAppInstanceUserMembershipSummary :: AppInstanceUserMembershipSummary

-- | The time at which a message was last read.
appInstanceUserMembershipSummary_readMarkerTimestamp :: Lens' AppInstanceUserMembershipSummary (Maybe UTCTime)

-- | The type of <tt>ChannelMembership</tt>.
appInstanceUserMembershipSummary_type :: Lens' AppInstanceUserMembershipSummary (Maybe ChannelMembershipType)
instance GHC.Generics.Generic Network.AWS.ChimeSDKMessaging.Types.AppInstanceUserMembershipSummary.AppInstanceUserMembershipSummary
instance GHC.Show.Show Network.AWS.ChimeSDKMessaging.Types.AppInstanceUserMembershipSummary.AppInstanceUserMembershipSummary
instance GHC.Read.Read Network.AWS.ChimeSDKMessaging.Types.AppInstanceUserMembershipSummary.AppInstanceUserMembershipSummary
instance GHC.Classes.Eq Network.AWS.ChimeSDKMessaging.Types.AppInstanceUserMembershipSummary.AppInstanceUserMembershipSummary
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ChimeSDKMessaging.Types.AppInstanceUserMembershipSummary.AppInstanceUserMembershipSummary
instance Data.Hashable.Class.Hashable Network.AWS.ChimeSDKMessaging.Types.AppInstanceUserMembershipSummary.AppInstanceUserMembershipSummary
instance Control.DeepSeq.NFData Network.AWS.ChimeSDKMessaging.Types.AppInstanceUserMembershipSummary.AppInstanceUserMembershipSummary


module Network.AWS.ChimeSDKMessaging.Types.ChannelMessageCallback

-- | Stores information about a callback.
--   
--   <i>See:</i> <a>newChannelMessageCallback</a> smart constructor.
data ChannelMessageCallback
ChannelMessageCallback' :: Maybe (Sensitive Text) -> Maybe (Sensitive Text) -> Text -> ChannelMessageCallback

-- | The message content.
[$sel:content:ChannelMessageCallback'] :: ChannelMessageCallback -> Maybe (Sensitive Text)

-- | The message metadata.
[$sel:metadata:ChannelMessageCallback'] :: ChannelMessageCallback -> Maybe (Sensitive Text)

-- | The message ID.
[$sel:messageId:ChannelMessageCallback'] :: ChannelMessageCallback -> Text

-- | Create a value of <a>ChannelMessageCallback</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:content:ChannelMessageCallback'</a>,
--   <a>channelMessageCallback_content</a> - The message content.
--   
--   <a>$sel:metadata:ChannelMessageCallback'</a>,
--   <a>channelMessageCallback_metadata</a> - The message metadata.
--   
--   <a>$sel:messageId:ChannelMessageCallback'</a>,
--   <a>channelMessageCallback_messageId</a> - The message ID.
newChannelMessageCallback :: Text -> ChannelMessageCallback

-- | The message content.
channelMessageCallback_content :: Lens' ChannelMessageCallback (Maybe Text)

-- | The message metadata.
channelMessageCallback_metadata :: Lens' ChannelMessageCallback (Maybe Text)

-- | The message ID.
channelMessageCallback_messageId :: Lens' ChannelMessageCallback Text
instance GHC.Generics.Generic Network.AWS.ChimeSDKMessaging.Types.ChannelMessageCallback.ChannelMessageCallback
instance GHC.Show.Show Network.AWS.ChimeSDKMessaging.Types.ChannelMessageCallback.ChannelMessageCallback
instance GHC.Classes.Eq Network.AWS.ChimeSDKMessaging.Types.ChannelMessageCallback.ChannelMessageCallback
instance Data.Hashable.Class.Hashable Network.AWS.ChimeSDKMessaging.Types.ChannelMessageCallback.ChannelMessageCallback
instance Control.DeepSeq.NFData Network.AWS.ChimeSDKMessaging.Types.ChannelMessageCallback.ChannelMessageCallback
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ChimeSDKMessaging.Types.ChannelMessageCallback.ChannelMessageCallback


module Network.AWS.ChimeSDKMessaging.Types.ChannelMessagePersistenceType
newtype ChannelMessagePersistenceType
ChannelMessagePersistenceType' :: Text -> ChannelMessagePersistenceType
[fromChannelMessagePersistenceType] :: ChannelMessagePersistenceType -> Text
pattern ChannelMessagePersistenceType_NON_PERSISTENT :: ChannelMessagePersistenceType
pattern ChannelMessagePersistenceType_PERSISTENT :: ChannelMessagePersistenceType
instance Network.AWS.Data.XML.ToXML Network.AWS.ChimeSDKMessaging.Types.ChannelMessagePersistenceType.ChannelMessagePersistenceType
instance Network.AWS.Data.XML.FromXML Network.AWS.ChimeSDKMessaging.Types.ChannelMessagePersistenceType.ChannelMessagePersistenceType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.ChimeSDKMessaging.Types.ChannelMessagePersistenceType.ChannelMessagePersistenceType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ChimeSDKMessaging.Types.ChannelMessagePersistenceType.ChannelMessagePersistenceType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.ChimeSDKMessaging.Types.ChannelMessagePersistenceType.ChannelMessagePersistenceType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ChimeSDKMessaging.Types.ChannelMessagePersistenceType.ChannelMessagePersistenceType
instance Network.AWS.Data.Query.ToQuery Network.AWS.ChimeSDKMessaging.Types.ChannelMessagePersistenceType.ChannelMessagePersistenceType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.ChimeSDKMessaging.Types.ChannelMessagePersistenceType.ChannelMessagePersistenceType
instance Network.AWS.Data.Log.ToLog Network.AWS.ChimeSDKMessaging.Types.ChannelMessagePersistenceType.ChannelMessagePersistenceType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.ChimeSDKMessaging.Types.ChannelMessagePersistenceType.ChannelMessagePersistenceType
instance Network.AWS.Data.Text.ToText Network.AWS.ChimeSDKMessaging.Types.ChannelMessagePersistenceType.ChannelMessagePersistenceType
instance Network.AWS.Data.Text.FromText Network.AWS.ChimeSDKMessaging.Types.ChannelMessagePersistenceType.ChannelMessagePersistenceType
instance Control.DeepSeq.NFData Network.AWS.ChimeSDKMessaging.Types.ChannelMessagePersistenceType.ChannelMessagePersistenceType
instance Data.Hashable.Class.Hashable Network.AWS.ChimeSDKMessaging.Types.ChannelMessagePersistenceType.ChannelMessagePersistenceType
instance GHC.Generics.Generic Network.AWS.ChimeSDKMessaging.Types.ChannelMessagePersistenceType.ChannelMessagePersistenceType
instance GHC.Classes.Ord Network.AWS.ChimeSDKMessaging.Types.ChannelMessagePersistenceType.ChannelMessagePersistenceType
instance GHC.Classes.Eq Network.AWS.ChimeSDKMessaging.Types.ChannelMessagePersistenceType.ChannelMessagePersistenceType
instance GHC.Read.Read Network.AWS.ChimeSDKMessaging.Types.ChannelMessagePersistenceType.ChannelMessagePersistenceType
instance GHC.Show.Show Network.AWS.ChimeSDKMessaging.Types.ChannelMessagePersistenceType.ChannelMessagePersistenceType


module Network.AWS.ChimeSDKMessaging.Types.ChannelMessageStatus
newtype ChannelMessageStatus
ChannelMessageStatus' :: Text -> ChannelMessageStatus
[fromChannelMessageStatus] :: ChannelMessageStatus -> Text
pattern ChannelMessageStatus_DENIED :: ChannelMessageStatus
pattern ChannelMessageStatus_FAILED :: ChannelMessageStatus
pattern ChannelMessageStatus_PENDING :: ChannelMessageStatus
pattern ChannelMessageStatus_SENT :: ChannelMessageStatus
instance Network.AWS.Data.XML.ToXML Network.AWS.ChimeSDKMessaging.Types.ChannelMessageStatus.ChannelMessageStatus
instance Network.AWS.Data.XML.FromXML Network.AWS.ChimeSDKMessaging.Types.ChannelMessageStatus.ChannelMessageStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.ChimeSDKMessaging.Types.ChannelMessageStatus.ChannelMessageStatus
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ChimeSDKMessaging.Types.ChannelMessageStatus.ChannelMessageStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.ChimeSDKMessaging.Types.ChannelMessageStatus.ChannelMessageStatus
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ChimeSDKMessaging.Types.ChannelMessageStatus.ChannelMessageStatus
instance Network.AWS.Data.Query.ToQuery Network.AWS.ChimeSDKMessaging.Types.ChannelMessageStatus.ChannelMessageStatus
instance Network.AWS.Data.Headers.ToHeader Network.AWS.ChimeSDKMessaging.Types.ChannelMessageStatus.ChannelMessageStatus
instance Network.AWS.Data.Log.ToLog Network.AWS.ChimeSDKMessaging.Types.ChannelMessageStatus.ChannelMessageStatus
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.ChimeSDKMessaging.Types.ChannelMessageStatus.ChannelMessageStatus
instance Network.AWS.Data.Text.ToText Network.AWS.ChimeSDKMessaging.Types.ChannelMessageStatus.ChannelMessageStatus
instance Network.AWS.Data.Text.FromText Network.AWS.ChimeSDKMessaging.Types.ChannelMessageStatus.ChannelMessageStatus
instance Control.DeepSeq.NFData Network.AWS.ChimeSDKMessaging.Types.ChannelMessageStatus.ChannelMessageStatus
instance Data.Hashable.Class.Hashable Network.AWS.ChimeSDKMessaging.Types.ChannelMessageStatus.ChannelMessageStatus
instance GHC.Generics.Generic Network.AWS.ChimeSDKMessaging.Types.ChannelMessageStatus.ChannelMessageStatus
instance GHC.Classes.Ord Network.AWS.ChimeSDKMessaging.Types.ChannelMessageStatus.ChannelMessageStatus
instance GHC.Classes.Eq Network.AWS.ChimeSDKMessaging.Types.ChannelMessageStatus.ChannelMessageStatus
instance GHC.Read.Read Network.AWS.ChimeSDKMessaging.Types.ChannelMessageStatus.ChannelMessageStatus
instance GHC.Show.Show Network.AWS.ChimeSDKMessaging.Types.ChannelMessageStatus.ChannelMessageStatus


module Network.AWS.ChimeSDKMessaging.Types.ChannelMessageStatusStructure

-- | Stores information about a message status.
--   
--   <i>See:</i> <a>newChannelMessageStatusStructure</a> smart constructor.
data ChannelMessageStatusStructure
ChannelMessageStatusStructure' :: Maybe ChannelMessageStatus -> Maybe Text -> ChannelMessageStatusStructure

-- | The message status value.
[$sel:value:ChannelMessageStatusStructure'] :: ChannelMessageStatusStructure -> Maybe ChannelMessageStatus

-- | Contains more details about the messasge status.
[$sel:detail:ChannelMessageStatusStructure'] :: ChannelMessageStatusStructure -> Maybe Text

-- | Create a value of <a>ChannelMessageStatusStructure</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:value:ChannelMessageStatusStructure'</a>,
--   <a>channelMessageStatusStructure_value</a> - The message status value.
--   
--   <a>$sel:detail:ChannelMessageStatusStructure'</a>,
--   <a>channelMessageStatusStructure_detail</a> - Contains more details
--   about the messasge status.
newChannelMessageStatusStructure :: ChannelMessageStatusStructure

-- | The message status value.
channelMessageStatusStructure_value :: Lens' ChannelMessageStatusStructure (Maybe ChannelMessageStatus)

-- | Contains more details about the messasge status.
channelMessageStatusStructure_detail :: Lens' ChannelMessageStatusStructure (Maybe Text)
instance GHC.Generics.Generic Network.AWS.ChimeSDKMessaging.Types.ChannelMessageStatusStructure.ChannelMessageStatusStructure
instance GHC.Show.Show Network.AWS.ChimeSDKMessaging.Types.ChannelMessageStatusStructure.ChannelMessageStatusStructure
instance GHC.Read.Read Network.AWS.ChimeSDKMessaging.Types.ChannelMessageStatusStructure.ChannelMessageStatusStructure
instance GHC.Classes.Eq Network.AWS.ChimeSDKMessaging.Types.ChannelMessageStatusStructure.ChannelMessageStatusStructure
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ChimeSDKMessaging.Types.ChannelMessageStatusStructure.ChannelMessageStatusStructure
instance Data.Hashable.Class.Hashable Network.AWS.ChimeSDKMessaging.Types.ChannelMessageStatusStructure.ChannelMessageStatusStructure
instance Control.DeepSeq.NFData Network.AWS.ChimeSDKMessaging.Types.ChannelMessageStatusStructure.ChannelMessageStatusStructure


module Network.AWS.ChimeSDKMessaging.Types.ChannelMessageType
newtype ChannelMessageType
ChannelMessageType' :: Text -> ChannelMessageType
[fromChannelMessageType] :: ChannelMessageType -> Text
pattern ChannelMessageType_CONTROL :: ChannelMessageType
pattern ChannelMessageType_STANDARD :: ChannelMessageType
instance Network.AWS.Data.XML.ToXML Network.AWS.ChimeSDKMessaging.Types.ChannelMessageType.ChannelMessageType
instance Network.AWS.Data.XML.FromXML Network.AWS.ChimeSDKMessaging.Types.ChannelMessageType.ChannelMessageType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.ChimeSDKMessaging.Types.ChannelMessageType.ChannelMessageType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ChimeSDKMessaging.Types.ChannelMessageType.ChannelMessageType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.ChimeSDKMessaging.Types.ChannelMessageType.ChannelMessageType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ChimeSDKMessaging.Types.ChannelMessageType.ChannelMessageType
instance Network.AWS.Data.Query.ToQuery Network.AWS.ChimeSDKMessaging.Types.ChannelMessageType.ChannelMessageType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.ChimeSDKMessaging.Types.ChannelMessageType.ChannelMessageType
instance Network.AWS.Data.Log.ToLog Network.AWS.ChimeSDKMessaging.Types.ChannelMessageType.ChannelMessageType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.ChimeSDKMessaging.Types.ChannelMessageType.ChannelMessageType
instance Network.AWS.Data.Text.ToText Network.AWS.ChimeSDKMessaging.Types.ChannelMessageType.ChannelMessageType
instance Network.AWS.Data.Text.FromText Network.AWS.ChimeSDKMessaging.Types.ChannelMessageType.ChannelMessageType
instance Control.DeepSeq.NFData Network.AWS.ChimeSDKMessaging.Types.ChannelMessageType.ChannelMessageType
instance Data.Hashable.Class.Hashable Network.AWS.ChimeSDKMessaging.Types.ChannelMessageType.ChannelMessageType
instance GHC.Generics.Generic Network.AWS.ChimeSDKMessaging.Types.ChannelMessageType.ChannelMessageType
instance GHC.Classes.Ord Network.AWS.ChimeSDKMessaging.Types.ChannelMessageType.ChannelMessageType
instance GHC.Classes.Eq Network.AWS.ChimeSDKMessaging.Types.ChannelMessageType.ChannelMessageType
instance GHC.Read.Read Network.AWS.ChimeSDKMessaging.Types.ChannelMessageType.ChannelMessageType
instance GHC.Show.Show Network.AWS.ChimeSDKMessaging.Types.ChannelMessageType.ChannelMessageType


module Network.AWS.ChimeSDKMessaging.Types.ChannelMode
newtype ChannelMode
ChannelMode' :: Text -> ChannelMode
[fromChannelMode] :: ChannelMode -> Text
pattern ChannelMode_RESTRICTED :: ChannelMode
pattern ChannelMode_UNRESTRICTED :: ChannelMode
instance Network.AWS.Data.XML.ToXML Network.AWS.ChimeSDKMessaging.Types.ChannelMode.ChannelMode
instance Network.AWS.Data.XML.FromXML Network.AWS.ChimeSDKMessaging.Types.ChannelMode.ChannelMode
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.ChimeSDKMessaging.Types.ChannelMode.ChannelMode
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ChimeSDKMessaging.Types.ChannelMode.ChannelMode
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.ChimeSDKMessaging.Types.ChannelMode.ChannelMode
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ChimeSDKMessaging.Types.ChannelMode.ChannelMode
instance Network.AWS.Data.Query.ToQuery Network.AWS.ChimeSDKMessaging.Types.ChannelMode.ChannelMode
instance Network.AWS.Data.Headers.ToHeader Network.AWS.ChimeSDKMessaging.Types.ChannelMode.ChannelMode
instance Network.AWS.Data.Log.ToLog Network.AWS.ChimeSDKMessaging.Types.ChannelMode.ChannelMode
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.ChimeSDKMessaging.Types.ChannelMode.ChannelMode
instance Network.AWS.Data.Text.ToText Network.AWS.ChimeSDKMessaging.Types.ChannelMode.ChannelMode
instance Network.AWS.Data.Text.FromText Network.AWS.ChimeSDKMessaging.Types.ChannelMode.ChannelMode
instance Control.DeepSeq.NFData Network.AWS.ChimeSDKMessaging.Types.ChannelMode.ChannelMode
instance Data.Hashable.Class.Hashable Network.AWS.ChimeSDKMessaging.Types.ChannelMode.ChannelMode
instance GHC.Generics.Generic Network.AWS.ChimeSDKMessaging.Types.ChannelMode.ChannelMode
instance GHC.Classes.Ord Network.AWS.ChimeSDKMessaging.Types.ChannelMode.ChannelMode
instance GHC.Classes.Eq Network.AWS.ChimeSDKMessaging.Types.ChannelMode.ChannelMode
instance GHC.Read.Read Network.AWS.ChimeSDKMessaging.Types.ChannelMode.ChannelMode
instance GHC.Show.Show Network.AWS.ChimeSDKMessaging.Types.ChannelMode.ChannelMode


module Network.AWS.ChimeSDKMessaging.Types.ChannelPrivacy
newtype ChannelPrivacy
ChannelPrivacy' :: Text -> ChannelPrivacy
[fromChannelPrivacy] :: ChannelPrivacy -> Text
pattern ChannelPrivacy_PRIVATE :: ChannelPrivacy
pattern ChannelPrivacy_PUBLIC :: ChannelPrivacy
instance Network.AWS.Data.XML.ToXML Network.AWS.ChimeSDKMessaging.Types.ChannelPrivacy.ChannelPrivacy
instance Network.AWS.Data.XML.FromXML Network.AWS.ChimeSDKMessaging.Types.ChannelPrivacy.ChannelPrivacy
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.ChimeSDKMessaging.Types.ChannelPrivacy.ChannelPrivacy
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ChimeSDKMessaging.Types.ChannelPrivacy.ChannelPrivacy
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.ChimeSDKMessaging.Types.ChannelPrivacy.ChannelPrivacy
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ChimeSDKMessaging.Types.ChannelPrivacy.ChannelPrivacy
instance Network.AWS.Data.Query.ToQuery Network.AWS.ChimeSDKMessaging.Types.ChannelPrivacy.ChannelPrivacy
instance Network.AWS.Data.Headers.ToHeader Network.AWS.ChimeSDKMessaging.Types.ChannelPrivacy.ChannelPrivacy
instance Network.AWS.Data.Log.ToLog Network.AWS.ChimeSDKMessaging.Types.ChannelPrivacy.ChannelPrivacy
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.ChimeSDKMessaging.Types.ChannelPrivacy.ChannelPrivacy
instance Network.AWS.Data.Text.ToText Network.AWS.ChimeSDKMessaging.Types.ChannelPrivacy.ChannelPrivacy
instance Network.AWS.Data.Text.FromText Network.AWS.ChimeSDKMessaging.Types.ChannelPrivacy.ChannelPrivacy
instance Control.DeepSeq.NFData Network.AWS.ChimeSDKMessaging.Types.ChannelPrivacy.ChannelPrivacy
instance Data.Hashable.Class.Hashable Network.AWS.ChimeSDKMessaging.Types.ChannelPrivacy.ChannelPrivacy
instance GHC.Generics.Generic Network.AWS.ChimeSDKMessaging.Types.ChannelPrivacy.ChannelPrivacy
instance GHC.Classes.Ord Network.AWS.ChimeSDKMessaging.Types.ChannelPrivacy.ChannelPrivacy
instance GHC.Classes.Eq Network.AWS.ChimeSDKMessaging.Types.ChannelPrivacy.ChannelPrivacy
instance GHC.Read.Read Network.AWS.ChimeSDKMessaging.Types.ChannelPrivacy.ChannelPrivacy
instance GHC.Show.Show Network.AWS.ChimeSDKMessaging.Types.ChannelPrivacy.ChannelPrivacy


module Network.AWS.ChimeSDKMessaging.Types.ChannelAssociatedWithFlowSummary

-- | Summary of details of a channel associated with channel flow.
--   
--   <i>See:</i> <a>newChannelAssociatedWithFlowSummary</a> smart
--   constructor.
data ChannelAssociatedWithFlowSummary
ChannelAssociatedWithFlowSummary' :: Maybe ChannelMode -> Maybe Text -> Maybe ChannelPrivacy -> Maybe (Sensitive Text) -> Maybe (Sensitive Text) -> ChannelAssociatedWithFlowSummary

-- | The mode of the channel.
[$sel:mode:ChannelAssociatedWithFlowSummary'] :: ChannelAssociatedWithFlowSummary -> Maybe ChannelMode

-- | The ARN of the channel.
[$sel:channelArn:ChannelAssociatedWithFlowSummary'] :: ChannelAssociatedWithFlowSummary -> Maybe Text

-- | The channel's privacy setting.
[$sel:privacy:ChannelAssociatedWithFlowSummary'] :: ChannelAssociatedWithFlowSummary -> Maybe ChannelPrivacy

-- | The name of the channel flow.
[$sel:name:ChannelAssociatedWithFlowSummary'] :: ChannelAssociatedWithFlowSummary -> Maybe (Sensitive Text)

-- | The channel's metadata.
[$sel:metadata:ChannelAssociatedWithFlowSummary'] :: ChannelAssociatedWithFlowSummary -> Maybe (Sensitive Text)

-- | Create a value of <a>ChannelAssociatedWithFlowSummary</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:mode:ChannelAssociatedWithFlowSummary'</a>,
--   <a>channelAssociatedWithFlowSummary_mode</a> - The mode of the
--   channel.
--   
--   <a>$sel:channelArn:ChannelAssociatedWithFlowSummary'</a>,
--   <a>channelAssociatedWithFlowSummary_channelArn</a> - The ARN of the
--   channel.
--   
--   <a>$sel:privacy:ChannelAssociatedWithFlowSummary'</a>,
--   <a>channelAssociatedWithFlowSummary_privacy</a> - The channel's
--   privacy setting.
--   
--   <a>$sel:name:ChannelAssociatedWithFlowSummary'</a>,
--   <a>channelAssociatedWithFlowSummary_name</a> - The name of the channel
--   flow.
--   
--   <a>$sel:metadata:ChannelAssociatedWithFlowSummary'</a>,
--   <a>channelAssociatedWithFlowSummary_metadata</a> - The channel's
--   metadata.
newChannelAssociatedWithFlowSummary :: ChannelAssociatedWithFlowSummary

-- | The mode of the channel.
channelAssociatedWithFlowSummary_mode :: Lens' ChannelAssociatedWithFlowSummary (Maybe ChannelMode)

-- | The ARN of the channel.
channelAssociatedWithFlowSummary_channelArn :: Lens' ChannelAssociatedWithFlowSummary (Maybe Text)

-- | The channel's privacy setting.
channelAssociatedWithFlowSummary_privacy :: Lens' ChannelAssociatedWithFlowSummary (Maybe ChannelPrivacy)

-- | The name of the channel flow.
channelAssociatedWithFlowSummary_name :: Lens' ChannelAssociatedWithFlowSummary (Maybe Text)

-- | The channel's metadata.
channelAssociatedWithFlowSummary_metadata :: Lens' ChannelAssociatedWithFlowSummary (Maybe Text)
instance GHC.Generics.Generic Network.AWS.ChimeSDKMessaging.Types.ChannelAssociatedWithFlowSummary.ChannelAssociatedWithFlowSummary
instance GHC.Show.Show Network.AWS.ChimeSDKMessaging.Types.ChannelAssociatedWithFlowSummary.ChannelAssociatedWithFlowSummary
instance GHC.Classes.Eq Network.AWS.ChimeSDKMessaging.Types.ChannelAssociatedWithFlowSummary.ChannelAssociatedWithFlowSummary
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ChimeSDKMessaging.Types.ChannelAssociatedWithFlowSummary.ChannelAssociatedWithFlowSummary
instance Data.Hashable.Class.Hashable Network.AWS.ChimeSDKMessaging.Types.ChannelAssociatedWithFlowSummary.ChannelAssociatedWithFlowSummary
instance Control.DeepSeq.NFData Network.AWS.ChimeSDKMessaging.Types.ChannelAssociatedWithFlowSummary.ChannelAssociatedWithFlowSummary


module Network.AWS.ChimeSDKMessaging.Types.ChannelSummary

-- | Summary of the details of a <tt>Channel</tt>.
--   
--   <i>See:</i> <a>newChannelSummary</a> smart constructor.
data ChannelSummary
ChannelSummary' :: Maybe ChannelMode -> Maybe Text -> Maybe ChannelPrivacy -> Maybe POSIX -> Maybe (Sensitive Text) -> Maybe (Sensitive Text) -> ChannelSummary

-- | The mode of the channel.
[$sel:mode:ChannelSummary'] :: ChannelSummary -> Maybe ChannelMode

-- | The ARN of the channel.
[$sel:channelArn:ChannelSummary'] :: ChannelSummary -> Maybe Text

-- | The privacy setting of the channel.
[$sel:privacy:ChannelSummary'] :: ChannelSummary -> Maybe ChannelPrivacy

-- | The time at which the last message in a channel was sent.
[$sel:lastMessageTimestamp:ChannelSummary'] :: ChannelSummary -> Maybe POSIX

-- | The name of the channel.
[$sel:name:ChannelSummary'] :: ChannelSummary -> Maybe (Sensitive Text)

-- | The metadata of the channel.
[$sel:metadata:ChannelSummary'] :: ChannelSummary -> Maybe (Sensitive Text)

-- | Create a value of <a>ChannelSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:mode:ChannelSummary'</a>, <a>channelSummary_mode</a> - The
--   mode of the channel.
--   
--   <a>$sel:channelArn:ChannelSummary'</a>,
--   <a>channelSummary_channelArn</a> - The ARN of the channel.
--   
--   <a>$sel:privacy:ChannelSummary'</a>, <a>channelSummary_privacy</a> -
--   The privacy setting of the channel.
--   
--   <a>$sel:lastMessageTimestamp:ChannelSummary'</a>,
--   <a>channelSummary_lastMessageTimestamp</a> - The time at which the
--   last message in a channel was sent.
--   
--   <a>$sel:name:ChannelSummary'</a>, <a>channelSummary_name</a> - The
--   name of the channel.
--   
--   <a>$sel:metadata:ChannelSummary'</a>, <a>channelSummary_metadata</a> -
--   The metadata of the channel.
newChannelSummary :: ChannelSummary

-- | The mode of the channel.
channelSummary_mode :: Lens' ChannelSummary (Maybe ChannelMode)

-- | The ARN of the channel.
channelSummary_channelArn :: Lens' ChannelSummary (Maybe Text)

-- | The privacy setting of the channel.
channelSummary_privacy :: Lens' ChannelSummary (Maybe ChannelPrivacy)

-- | The time at which the last message in a channel was sent.
channelSummary_lastMessageTimestamp :: Lens' ChannelSummary (Maybe UTCTime)

-- | The name of the channel.
channelSummary_name :: Lens' ChannelSummary (Maybe Text)

-- | The metadata of the channel.
channelSummary_metadata :: Lens' ChannelSummary (Maybe Text)
instance GHC.Generics.Generic Network.AWS.ChimeSDKMessaging.Types.ChannelSummary.ChannelSummary
instance GHC.Show.Show Network.AWS.ChimeSDKMessaging.Types.ChannelSummary.ChannelSummary
instance GHC.Classes.Eq Network.AWS.ChimeSDKMessaging.Types.ChannelSummary.ChannelSummary
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ChimeSDKMessaging.Types.ChannelSummary.ChannelSummary
instance Data.Hashable.Class.Hashable Network.AWS.ChimeSDKMessaging.Types.ChannelSummary.ChannelSummary
instance Control.DeepSeq.NFData Network.AWS.ChimeSDKMessaging.Types.ChannelSummary.ChannelSummary


module Network.AWS.ChimeSDKMessaging.Types.ChannelModeratedByAppInstanceUserSummary

-- | Summary of the details of a moderated channel.
--   
--   <i>See:</i> <a>newChannelModeratedByAppInstanceUserSummary</a> smart
--   constructor.
data ChannelModeratedByAppInstanceUserSummary
ChannelModeratedByAppInstanceUserSummary' :: Maybe ChannelSummary -> ChannelModeratedByAppInstanceUserSummary

-- | Summary of the details of a <tt>Channel</tt>.
[$sel:channelSummary:ChannelModeratedByAppInstanceUserSummary'] :: ChannelModeratedByAppInstanceUserSummary -> Maybe ChannelSummary

-- | Create a value of <a>ChannelModeratedByAppInstanceUserSummary</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:channelSummary:ChannelModeratedByAppInstanceUserSummary'</a>,
--   <a>channelModeratedByAppInstanceUserSummary_channelSummary</a> -
--   Summary of the details of a <tt>Channel</tt>.
newChannelModeratedByAppInstanceUserSummary :: ChannelModeratedByAppInstanceUserSummary

-- | Summary of the details of a <tt>Channel</tt>.
channelModeratedByAppInstanceUserSummary_channelSummary :: Lens' ChannelModeratedByAppInstanceUserSummary (Maybe ChannelSummary)
instance GHC.Generics.Generic Network.AWS.ChimeSDKMessaging.Types.ChannelModeratedByAppInstanceUserSummary.ChannelModeratedByAppInstanceUserSummary
instance GHC.Show.Show Network.AWS.ChimeSDKMessaging.Types.ChannelModeratedByAppInstanceUserSummary.ChannelModeratedByAppInstanceUserSummary
instance GHC.Classes.Eq Network.AWS.ChimeSDKMessaging.Types.ChannelModeratedByAppInstanceUserSummary.ChannelModeratedByAppInstanceUserSummary
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ChimeSDKMessaging.Types.ChannelModeratedByAppInstanceUserSummary.ChannelModeratedByAppInstanceUserSummary
instance Data.Hashable.Class.Hashable Network.AWS.ChimeSDKMessaging.Types.ChannelModeratedByAppInstanceUserSummary.ChannelModeratedByAppInstanceUserSummary
instance Control.DeepSeq.NFData Network.AWS.ChimeSDKMessaging.Types.ChannelModeratedByAppInstanceUserSummary.ChannelModeratedByAppInstanceUserSummary


module Network.AWS.ChimeSDKMessaging.Types.ChannelMembershipForAppInstanceUserSummary

-- | Summary of the channel membership details of an
--   <tt>AppInstanceUser</tt>.
--   
--   <i>See:</i> <a>newChannelMembershipForAppInstanceUserSummary</a> smart
--   constructor.
data ChannelMembershipForAppInstanceUserSummary
ChannelMembershipForAppInstanceUserSummary' :: Maybe AppInstanceUserMembershipSummary -> Maybe ChannelSummary -> ChannelMembershipForAppInstanceUserSummary

-- | Returns the channel membership data for an <tt>AppInstance</tt>.
[$sel:appInstanceUserMembershipSummary:ChannelMembershipForAppInstanceUserSummary'] :: ChannelMembershipForAppInstanceUserSummary -> Maybe AppInstanceUserMembershipSummary

-- | Returns the channel data for an <tt>AppInstance</tt>.
[$sel:channelSummary:ChannelMembershipForAppInstanceUserSummary'] :: ChannelMembershipForAppInstanceUserSummary -> Maybe ChannelSummary

-- | Create a value of <a>ChannelMembershipForAppInstanceUserSummary</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:appInstanceUserMembershipSummary:ChannelMembershipForAppInstanceUserSummary'</a>,
--   <a>channelMembershipForAppInstanceUserSummary_appInstanceUserMembershipSummary</a>
--   - Returns the channel membership data for an <tt>AppInstance</tt>.
--   
--   
--   <a>$sel:channelSummary:ChannelMembershipForAppInstanceUserSummary'</a>,
--   <a>channelMembershipForAppInstanceUserSummary_channelSummary</a> -
--   Returns the channel data for an <tt>AppInstance</tt>.
newChannelMembershipForAppInstanceUserSummary :: ChannelMembershipForAppInstanceUserSummary

-- | Returns the channel membership data for an <tt>AppInstance</tt>.
channelMembershipForAppInstanceUserSummary_appInstanceUserMembershipSummary :: Lens' ChannelMembershipForAppInstanceUserSummary (Maybe AppInstanceUserMembershipSummary)

-- | Returns the channel data for an <tt>AppInstance</tt>.
channelMembershipForAppInstanceUserSummary_channelSummary :: Lens' ChannelMembershipForAppInstanceUserSummary (Maybe ChannelSummary)
instance GHC.Generics.Generic Network.AWS.ChimeSDKMessaging.Types.ChannelMembershipForAppInstanceUserSummary.ChannelMembershipForAppInstanceUserSummary
instance GHC.Show.Show Network.AWS.ChimeSDKMessaging.Types.ChannelMembershipForAppInstanceUserSummary.ChannelMembershipForAppInstanceUserSummary
instance GHC.Classes.Eq Network.AWS.ChimeSDKMessaging.Types.ChannelMembershipForAppInstanceUserSummary.ChannelMembershipForAppInstanceUserSummary
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ChimeSDKMessaging.Types.ChannelMembershipForAppInstanceUserSummary.ChannelMembershipForAppInstanceUserSummary
instance Data.Hashable.Class.Hashable Network.AWS.ChimeSDKMessaging.Types.ChannelMembershipForAppInstanceUserSummary.ChannelMembershipForAppInstanceUserSummary
instance Control.DeepSeq.NFData Network.AWS.ChimeSDKMessaging.Types.ChannelMembershipForAppInstanceUserSummary.ChannelMembershipForAppInstanceUserSummary


module Network.AWS.ChimeSDKMessaging.Types.ErrorCode
newtype ErrorCode
ErrorCode' :: Text -> ErrorCode
[fromErrorCode] :: ErrorCode -> Text
pattern ErrorCode_AccessDenied :: ErrorCode
pattern ErrorCode_BadRequest :: ErrorCode
pattern ErrorCode_Conflict :: ErrorCode
pattern ErrorCode_Forbidden :: ErrorCode
pattern ErrorCode_NotFound :: ErrorCode
pattern ErrorCode_PhoneNumberAssociationsExist :: ErrorCode
pattern ErrorCode_PreconditionFailed :: ErrorCode
pattern ErrorCode_ResourceLimitExceeded :: ErrorCode
pattern ErrorCode_ServiceFailure :: ErrorCode
pattern ErrorCode_ServiceUnavailable :: ErrorCode
pattern ErrorCode_Throttled :: ErrorCode
pattern ErrorCode_Throttling :: ErrorCode
pattern ErrorCode_Unauthorized :: ErrorCode
pattern ErrorCode_Unprocessable :: ErrorCode
pattern ErrorCode_VoiceConnectorGroupAssociationsExist :: ErrorCode
instance Network.AWS.Data.XML.ToXML Network.AWS.ChimeSDKMessaging.Types.ErrorCode.ErrorCode
instance Network.AWS.Data.XML.FromXML Network.AWS.ChimeSDKMessaging.Types.ErrorCode.ErrorCode
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.ChimeSDKMessaging.Types.ErrorCode.ErrorCode
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ChimeSDKMessaging.Types.ErrorCode.ErrorCode
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.ChimeSDKMessaging.Types.ErrorCode.ErrorCode
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ChimeSDKMessaging.Types.ErrorCode.ErrorCode
instance Network.AWS.Data.Query.ToQuery Network.AWS.ChimeSDKMessaging.Types.ErrorCode.ErrorCode
instance Network.AWS.Data.Headers.ToHeader Network.AWS.ChimeSDKMessaging.Types.ErrorCode.ErrorCode
instance Network.AWS.Data.Log.ToLog Network.AWS.ChimeSDKMessaging.Types.ErrorCode.ErrorCode
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.ChimeSDKMessaging.Types.ErrorCode.ErrorCode
instance Network.AWS.Data.Text.ToText Network.AWS.ChimeSDKMessaging.Types.ErrorCode.ErrorCode
instance Network.AWS.Data.Text.FromText Network.AWS.ChimeSDKMessaging.Types.ErrorCode.ErrorCode
instance Control.DeepSeq.NFData Network.AWS.ChimeSDKMessaging.Types.ErrorCode.ErrorCode
instance Data.Hashable.Class.Hashable Network.AWS.ChimeSDKMessaging.Types.ErrorCode.ErrorCode
instance GHC.Generics.Generic Network.AWS.ChimeSDKMessaging.Types.ErrorCode.ErrorCode
instance GHC.Classes.Ord Network.AWS.ChimeSDKMessaging.Types.ErrorCode.ErrorCode
instance GHC.Classes.Eq Network.AWS.ChimeSDKMessaging.Types.ErrorCode.ErrorCode
instance GHC.Read.Read Network.AWS.ChimeSDKMessaging.Types.ErrorCode.ErrorCode
instance GHC.Show.Show Network.AWS.ChimeSDKMessaging.Types.ErrorCode.ErrorCode


module Network.AWS.ChimeSDKMessaging.Types.BatchCreateChannelMembershipError

-- | A list of failed member ARNs, error codes, and error messages.
--   
--   <i>See:</i> <a>newBatchCreateChannelMembershipError</a> smart
--   constructor.
data BatchCreateChannelMembershipError
BatchCreateChannelMembershipError' :: Maybe ErrorCode -> Maybe Text -> Maybe Text -> BatchCreateChannelMembershipError

-- | The error code.
[$sel:errorCode:BatchCreateChannelMembershipError'] :: BatchCreateChannelMembershipError -> Maybe ErrorCode

-- | The ARN of the member that the service couldn't add.
[$sel:memberArn:BatchCreateChannelMembershipError'] :: BatchCreateChannelMembershipError -> Maybe Text

-- | The error message.
[$sel:errorMessage:BatchCreateChannelMembershipError'] :: BatchCreateChannelMembershipError -> Maybe Text

-- | Create a value of <a>BatchCreateChannelMembershipError</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:errorCode:BatchCreateChannelMembershipError'</a>,
--   <a>batchCreateChannelMembershipError_errorCode</a> - The error code.
--   
--   <a>$sel:memberArn:BatchCreateChannelMembershipError'</a>,
--   <a>batchCreateChannelMembershipError_memberArn</a> - The ARN of the
--   member that the service couldn't add.
--   
--   <a>$sel:errorMessage:BatchCreateChannelMembershipError'</a>,
--   <a>batchCreateChannelMembershipError_errorMessage</a> - The error
--   message.
newBatchCreateChannelMembershipError :: BatchCreateChannelMembershipError

-- | The error code.
batchCreateChannelMembershipError_errorCode :: Lens' BatchCreateChannelMembershipError (Maybe ErrorCode)

-- | The ARN of the member that the service couldn't add.
batchCreateChannelMembershipError_memberArn :: Lens' BatchCreateChannelMembershipError (Maybe Text)

-- | The error message.
batchCreateChannelMembershipError_errorMessage :: Lens' BatchCreateChannelMembershipError (Maybe Text)
instance GHC.Generics.Generic Network.AWS.ChimeSDKMessaging.Types.BatchCreateChannelMembershipError.BatchCreateChannelMembershipError
instance GHC.Show.Show Network.AWS.ChimeSDKMessaging.Types.BatchCreateChannelMembershipError.BatchCreateChannelMembershipError
instance GHC.Read.Read Network.AWS.ChimeSDKMessaging.Types.BatchCreateChannelMembershipError.BatchCreateChannelMembershipError
instance GHC.Classes.Eq Network.AWS.ChimeSDKMessaging.Types.BatchCreateChannelMembershipError.BatchCreateChannelMembershipError
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ChimeSDKMessaging.Types.BatchCreateChannelMembershipError.BatchCreateChannelMembershipError
instance Data.Hashable.Class.Hashable Network.AWS.ChimeSDKMessaging.Types.BatchCreateChannelMembershipError.BatchCreateChannelMembershipError
instance Control.DeepSeq.NFData Network.AWS.ChimeSDKMessaging.Types.BatchCreateChannelMembershipError.BatchCreateChannelMembershipError


module Network.AWS.ChimeSDKMessaging.Types.FallbackAction
newtype FallbackAction
FallbackAction' :: Text -> FallbackAction
[fromFallbackAction] :: FallbackAction -> Text
pattern FallbackAction_ABORT :: FallbackAction
pattern FallbackAction_CONTINUE :: FallbackAction
instance Network.AWS.Data.XML.ToXML Network.AWS.ChimeSDKMessaging.Types.FallbackAction.FallbackAction
instance Network.AWS.Data.XML.FromXML Network.AWS.ChimeSDKMessaging.Types.FallbackAction.FallbackAction
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.ChimeSDKMessaging.Types.FallbackAction.FallbackAction
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ChimeSDKMessaging.Types.FallbackAction.FallbackAction
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.ChimeSDKMessaging.Types.FallbackAction.FallbackAction
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ChimeSDKMessaging.Types.FallbackAction.FallbackAction
instance Network.AWS.Data.Query.ToQuery Network.AWS.ChimeSDKMessaging.Types.FallbackAction.FallbackAction
instance Network.AWS.Data.Headers.ToHeader Network.AWS.ChimeSDKMessaging.Types.FallbackAction.FallbackAction
instance Network.AWS.Data.Log.ToLog Network.AWS.ChimeSDKMessaging.Types.FallbackAction.FallbackAction
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.ChimeSDKMessaging.Types.FallbackAction.FallbackAction
instance Network.AWS.Data.Text.ToText Network.AWS.ChimeSDKMessaging.Types.FallbackAction.FallbackAction
instance Network.AWS.Data.Text.FromText Network.AWS.ChimeSDKMessaging.Types.FallbackAction.FallbackAction
instance Control.DeepSeq.NFData Network.AWS.ChimeSDKMessaging.Types.FallbackAction.FallbackAction
instance Data.Hashable.Class.Hashable Network.AWS.ChimeSDKMessaging.Types.FallbackAction.FallbackAction
instance GHC.Generics.Generic Network.AWS.ChimeSDKMessaging.Types.FallbackAction.FallbackAction
instance GHC.Classes.Ord Network.AWS.ChimeSDKMessaging.Types.FallbackAction.FallbackAction
instance GHC.Classes.Eq Network.AWS.ChimeSDKMessaging.Types.FallbackAction.FallbackAction
instance GHC.Read.Read Network.AWS.ChimeSDKMessaging.Types.FallbackAction.FallbackAction
instance GHC.Show.Show Network.AWS.ChimeSDKMessaging.Types.FallbackAction.FallbackAction


module Network.AWS.ChimeSDKMessaging.Types.Identity

-- | The details of a user.
--   
--   <i>See:</i> <a>newIdentity</a> smart constructor.
data Identity
Identity' :: Maybe Text -> Maybe (Sensitive Text) -> Identity

-- | The ARN in an Identity.
[$sel:arn:Identity'] :: Identity -> Maybe Text

-- | The name in an Identity.
[$sel:name:Identity'] :: Identity -> Maybe (Sensitive Text)

-- | Create a value of <a>Identity</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:Identity'</a>, <a>identity_arn</a> - The ARN in an
--   Identity.
--   
--   <a>$sel:name:Identity'</a>, <a>identity_name</a> - The name in an
--   Identity.
newIdentity :: Identity

-- | The ARN in an Identity.
identity_arn :: Lens' Identity (Maybe Text)

-- | The name in an Identity.
identity_name :: Lens' Identity (Maybe Text)
instance GHC.Generics.Generic Network.AWS.ChimeSDKMessaging.Types.Identity.Identity
instance GHC.Show.Show Network.AWS.ChimeSDKMessaging.Types.Identity.Identity
instance GHC.Classes.Eq Network.AWS.ChimeSDKMessaging.Types.Identity.Identity
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ChimeSDKMessaging.Types.Identity.Identity
instance Data.Hashable.Class.Hashable Network.AWS.ChimeSDKMessaging.Types.Identity.Identity
instance Control.DeepSeq.NFData Network.AWS.ChimeSDKMessaging.Types.Identity.Identity


module Network.AWS.ChimeSDKMessaging.Types.ChannelModeratorSummary

-- | Summary of the details of a <tt>ChannelModerator</tt>.
--   
--   <i>See:</i> <a>newChannelModeratorSummary</a> smart constructor.
data ChannelModeratorSummary
ChannelModeratorSummary' :: Maybe Identity -> ChannelModeratorSummary

-- | The data for a moderator.
[$sel:moderator:ChannelModeratorSummary'] :: ChannelModeratorSummary -> Maybe Identity

-- | Create a value of <a>ChannelModeratorSummary</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:moderator:ChannelModeratorSummary'</a>,
--   <a>channelModeratorSummary_moderator</a> - The data for a moderator.
newChannelModeratorSummary :: ChannelModeratorSummary

-- | The data for a moderator.
channelModeratorSummary_moderator :: Lens' ChannelModeratorSummary (Maybe Identity)
instance GHC.Generics.Generic Network.AWS.ChimeSDKMessaging.Types.ChannelModeratorSummary.ChannelModeratorSummary
instance GHC.Show.Show Network.AWS.ChimeSDKMessaging.Types.ChannelModeratorSummary.ChannelModeratorSummary
instance GHC.Classes.Eq Network.AWS.ChimeSDKMessaging.Types.ChannelModeratorSummary.ChannelModeratorSummary
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ChimeSDKMessaging.Types.ChannelModeratorSummary.ChannelModeratorSummary
instance Data.Hashable.Class.Hashable Network.AWS.ChimeSDKMessaging.Types.ChannelModeratorSummary.ChannelModeratorSummary
instance Control.DeepSeq.NFData Network.AWS.ChimeSDKMessaging.Types.ChannelModeratorSummary.ChannelModeratorSummary


module Network.AWS.ChimeSDKMessaging.Types.ChannelModerator

-- | The details of a channel moderator.
--   
--   <i>See:</i> <a>newChannelModerator</a> smart constructor.
data ChannelModerator
ChannelModerator' :: Maybe Identity -> Maybe Text -> Maybe POSIX -> Maybe Identity -> ChannelModerator

-- | The <tt>AppInstanceUser</tt> who created the moderator.
[$sel:createdBy:ChannelModerator'] :: ChannelModerator -> Maybe Identity

-- | The ARN of the moderator's channel.
[$sel:channelArn:ChannelModerator'] :: ChannelModerator -> Maybe Text

-- | The time at which the moderator was created.
[$sel:createdTimestamp:ChannelModerator'] :: ChannelModerator -> Maybe POSIX

-- | The moderator's data.
[$sel:moderator:ChannelModerator'] :: ChannelModerator -> Maybe Identity

-- | Create a value of <a>ChannelModerator</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:createdBy:ChannelModerator'</a>,
--   <a>channelModerator_createdBy</a> - The <tt>AppInstanceUser</tt> who
--   created the moderator.
--   
--   <a>$sel:channelArn:ChannelModerator'</a>,
--   <a>channelModerator_channelArn</a> - The ARN of the moderator's
--   channel.
--   
--   <a>$sel:createdTimestamp:ChannelModerator'</a>,
--   <a>channelModerator_createdTimestamp</a> - The time at which the
--   moderator was created.
--   
--   <a>$sel:moderator:ChannelModerator'</a>,
--   <a>channelModerator_moderator</a> - The moderator's data.
newChannelModerator :: ChannelModerator

-- | The <tt>AppInstanceUser</tt> who created the moderator.
channelModerator_createdBy :: Lens' ChannelModerator (Maybe Identity)

-- | The ARN of the moderator's channel.
channelModerator_channelArn :: Lens' ChannelModerator (Maybe Text)

-- | The time at which the moderator was created.
channelModerator_createdTimestamp :: Lens' ChannelModerator (Maybe UTCTime)

-- | The moderator's data.
channelModerator_moderator :: Lens' ChannelModerator (Maybe Identity)
instance GHC.Generics.Generic Network.AWS.ChimeSDKMessaging.Types.ChannelModerator.ChannelModerator
instance GHC.Show.Show Network.AWS.ChimeSDKMessaging.Types.ChannelModerator.ChannelModerator
instance GHC.Classes.Eq Network.AWS.ChimeSDKMessaging.Types.ChannelModerator.ChannelModerator
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ChimeSDKMessaging.Types.ChannelModerator.ChannelModerator
instance Data.Hashable.Class.Hashable Network.AWS.ChimeSDKMessaging.Types.ChannelModerator.ChannelModerator
instance Control.DeepSeq.NFData Network.AWS.ChimeSDKMessaging.Types.ChannelModerator.ChannelModerator


module Network.AWS.ChimeSDKMessaging.Types.ChannelMessageSummary

-- | Summary of the messages in a <tt>Channel</tt>.
--   
--   <i>See:</i> <a>newChannelMessageSummary</a> smart constructor.
data ChannelMessageSummary
ChannelMessageSummary' :: Maybe ChannelMessageStatusStructure -> Maybe Identity -> Maybe (Sensitive Text) -> Maybe Bool -> Maybe (Sensitive Text) -> Maybe ChannelMessageType -> Maybe POSIX -> Maybe Text -> Maybe POSIX -> Maybe POSIX -> ChannelMessageSummary

-- | The message status. The status value is <tt>SENT</tt> for messages
--   sent to a channel without a channel flow. For channels associated with
--   channel flow, the value determines the processing stage.
[$sel:status:ChannelMessageSummary'] :: ChannelMessageSummary -> Maybe ChannelMessageStatusStructure

-- | The message sender.
[$sel:sender:ChannelMessageSummary'] :: ChannelMessageSummary -> Maybe Identity

-- | The content of the message.
[$sel:content:ChannelMessageSummary'] :: ChannelMessageSummary -> Maybe (Sensitive Text)

-- | Indicates whether a message was redacted.
[$sel:redacted:ChannelMessageSummary'] :: ChannelMessageSummary -> Maybe Bool

-- | The metadata of the message.
[$sel:metadata:ChannelMessageSummary'] :: ChannelMessageSummary -> Maybe (Sensitive Text)

-- | The type of message.
[$sel:type':ChannelMessageSummary'] :: ChannelMessageSummary -> Maybe ChannelMessageType

-- | The time at which the message summary was created.
[$sel:createdTimestamp:ChannelMessageSummary'] :: ChannelMessageSummary -> Maybe POSIX

-- | The ID of the message.
[$sel:messageId:ChannelMessageSummary'] :: ChannelMessageSummary -> Maybe Text

-- | The time at which a message was last updated.
[$sel:lastUpdatedTimestamp:ChannelMessageSummary'] :: ChannelMessageSummary -> Maybe POSIX

-- | The time at which a message was last edited.
[$sel:lastEditedTimestamp:ChannelMessageSummary'] :: ChannelMessageSummary -> Maybe POSIX

-- | Create a value of <a>ChannelMessageSummary</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:ChannelMessageSummary'</a>,
--   <a>channelMessageSummary_status</a> - The message status. The status
--   value is <tt>SENT</tt> for messages sent to a channel without a
--   channel flow. For channels associated with channel flow, the value
--   determines the processing stage.
--   
--   <a>$sel:sender:ChannelMessageSummary'</a>,
--   <a>channelMessageSummary_sender</a> - The message sender.
--   
--   <a>$sel:content:ChannelMessageSummary'</a>,
--   <a>channelMessageSummary_content</a> - The content of the message.
--   
--   <a>$sel:redacted:ChannelMessageSummary'</a>,
--   <a>channelMessageSummary_redacted</a> - Indicates whether a message
--   was redacted.
--   
--   <a>$sel:metadata:ChannelMessageSummary'</a>,
--   <a>channelMessageSummary_metadata</a> - The metadata of the message.
--   
--   <a>$sel:type':ChannelMessageSummary'</a>,
--   <a>channelMessageSummary_type</a> - The type of message.
--   
--   <a>$sel:createdTimestamp:ChannelMessageSummary'</a>,
--   <a>channelMessageSummary_createdTimestamp</a> - The time at which the
--   message summary was created.
--   
--   <a>$sel:messageId:ChannelMessageSummary'</a>,
--   <a>channelMessageSummary_messageId</a> - The ID of the message.
--   
--   <a>$sel:lastUpdatedTimestamp:ChannelMessageSummary'</a>,
--   <a>channelMessageSummary_lastUpdatedTimestamp</a> - The time at which
--   a message was last updated.
--   
--   <a>$sel:lastEditedTimestamp:ChannelMessageSummary'</a>,
--   <a>channelMessageSummary_lastEditedTimestamp</a> - The time at which a
--   message was last edited.
newChannelMessageSummary :: ChannelMessageSummary

-- | The message status. The status value is <tt>SENT</tt> for messages
--   sent to a channel without a channel flow. For channels associated with
--   channel flow, the value determines the processing stage.
channelMessageSummary_status :: Lens' ChannelMessageSummary (Maybe ChannelMessageStatusStructure)

-- | The message sender.
channelMessageSummary_sender :: Lens' ChannelMessageSummary (Maybe Identity)

-- | The content of the message.
channelMessageSummary_content :: Lens' ChannelMessageSummary (Maybe Text)

-- | Indicates whether a message was redacted.
channelMessageSummary_redacted :: Lens' ChannelMessageSummary (Maybe Bool)

-- | The metadata of the message.
channelMessageSummary_metadata :: Lens' ChannelMessageSummary (Maybe Text)

-- | The type of message.
channelMessageSummary_type :: Lens' ChannelMessageSummary (Maybe ChannelMessageType)

-- | The time at which the message summary was created.
channelMessageSummary_createdTimestamp :: Lens' ChannelMessageSummary (Maybe UTCTime)

-- | The ID of the message.
channelMessageSummary_messageId :: Lens' ChannelMessageSummary (Maybe Text)

-- | The time at which a message was last updated.
channelMessageSummary_lastUpdatedTimestamp :: Lens' ChannelMessageSummary (Maybe UTCTime)

-- | The time at which a message was last edited.
channelMessageSummary_lastEditedTimestamp :: Lens' ChannelMessageSummary (Maybe UTCTime)
instance GHC.Generics.Generic Network.AWS.ChimeSDKMessaging.Types.ChannelMessageSummary.ChannelMessageSummary
instance GHC.Show.Show Network.AWS.ChimeSDKMessaging.Types.ChannelMessageSummary.ChannelMessageSummary
instance GHC.Classes.Eq Network.AWS.ChimeSDKMessaging.Types.ChannelMessageSummary.ChannelMessageSummary
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ChimeSDKMessaging.Types.ChannelMessageSummary.ChannelMessageSummary
instance Data.Hashable.Class.Hashable Network.AWS.ChimeSDKMessaging.Types.ChannelMessageSummary.ChannelMessageSummary
instance Control.DeepSeq.NFData Network.AWS.ChimeSDKMessaging.Types.ChannelMessageSummary.ChannelMessageSummary


module Network.AWS.ChimeSDKMessaging.Types.ChannelMessage

-- | The details of a message in a channel.
--   
--   <i>See:</i> <a>newChannelMessage</a> smart constructor.
data ChannelMessage
ChannelMessage' :: Maybe ChannelMessageStatusStructure -> Maybe Identity -> Maybe Text -> Maybe (Sensitive Text) -> Maybe Bool -> Maybe ChannelMessagePersistenceType -> Maybe (Sensitive Text) -> Maybe ChannelMessageType -> Maybe POSIX -> Maybe Text -> Maybe POSIX -> Maybe POSIX -> ChannelMessage

-- | The status of the channel message.
[$sel:status:ChannelMessage'] :: ChannelMessage -> Maybe ChannelMessageStatusStructure

-- | The message sender.
[$sel:sender:ChannelMessage'] :: ChannelMessage -> Maybe Identity

-- | The ARN of the channel.
[$sel:channelArn:ChannelMessage'] :: ChannelMessage -> Maybe Text

-- | The message content.
[$sel:content:ChannelMessage'] :: ChannelMessage -> Maybe (Sensitive Text)

-- | Hides the content of a message.
[$sel:redacted:ChannelMessage'] :: ChannelMessage -> Maybe Bool

-- | The persistence setting for a channel message.
[$sel:persistence:ChannelMessage'] :: ChannelMessage -> Maybe ChannelMessagePersistenceType

-- | The message metadata.
[$sel:metadata:ChannelMessage'] :: ChannelMessage -> Maybe (Sensitive Text)

-- | The message type.
[$sel:type':ChannelMessage'] :: ChannelMessage -> Maybe ChannelMessageType

-- | The time at which the message was created.
[$sel:createdTimestamp:ChannelMessage'] :: ChannelMessage -> Maybe POSIX

-- | The ID of a message.
[$sel:messageId:ChannelMessage'] :: ChannelMessage -> Maybe Text

-- | The time at which a message was updated.
[$sel:lastUpdatedTimestamp:ChannelMessage'] :: ChannelMessage -> Maybe POSIX

-- | The time at which a message was edited.
[$sel:lastEditedTimestamp:ChannelMessage'] :: ChannelMessage -> Maybe POSIX

-- | Create a value of <a>ChannelMessage</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:ChannelMessage'</a>, <a>channelMessage_status</a> - The
--   status of the channel message.
--   
--   <a>$sel:sender:ChannelMessage'</a>, <a>channelMessage_sender</a> - The
--   message sender.
--   
--   <a>$sel:channelArn:ChannelMessage'</a>,
--   <a>channelMessage_channelArn</a> - The ARN of the channel.
--   
--   <a>$sel:content:ChannelMessage'</a>, <a>channelMessage_content</a> -
--   The message content.
--   
--   <a>$sel:redacted:ChannelMessage'</a>, <a>channelMessage_redacted</a> -
--   Hides the content of a message.
--   
--   <a>$sel:persistence:ChannelMessage'</a>,
--   <a>channelMessage_persistence</a> - The persistence setting for a
--   channel message.
--   
--   <a>$sel:metadata:ChannelMessage'</a>, <a>channelMessage_metadata</a> -
--   The message metadata.
--   
--   <a>$sel:type':ChannelMessage'</a>, <a>channelMessage_type</a> - The
--   message type.
--   
--   <a>$sel:createdTimestamp:ChannelMessage'</a>,
--   <a>channelMessage_createdTimestamp</a> - The time at which the message
--   was created.
--   
--   <a>$sel:messageId:ChannelMessage'</a>, <a>channelMessage_messageId</a>
--   - The ID of a message.
--   
--   <a>$sel:lastUpdatedTimestamp:ChannelMessage'</a>,
--   <a>channelMessage_lastUpdatedTimestamp</a> - The time at which a
--   message was updated.
--   
--   <a>$sel:lastEditedTimestamp:ChannelMessage'</a>,
--   <a>channelMessage_lastEditedTimestamp</a> - The time at which a
--   message was edited.
newChannelMessage :: ChannelMessage

-- | The status of the channel message.
channelMessage_status :: Lens' ChannelMessage (Maybe ChannelMessageStatusStructure)

-- | The message sender.
channelMessage_sender :: Lens' ChannelMessage (Maybe Identity)

-- | The ARN of the channel.
channelMessage_channelArn :: Lens' ChannelMessage (Maybe Text)

-- | The message content.
channelMessage_content :: Lens' ChannelMessage (Maybe Text)

-- | Hides the content of a message.
channelMessage_redacted :: Lens' ChannelMessage (Maybe Bool)

-- | The persistence setting for a channel message.
channelMessage_persistence :: Lens' ChannelMessage (Maybe ChannelMessagePersistenceType)

-- | The message metadata.
channelMessage_metadata :: Lens' ChannelMessage (Maybe Text)

-- | The message type.
channelMessage_type :: Lens' ChannelMessage (Maybe ChannelMessageType)

-- | The time at which the message was created.
channelMessage_createdTimestamp :: Lens' ChannelMessage (Maybe UTCTime)

-- | The ID of a message.
channelMessage_messageId :: Lens' ChannelMessage (Maybe Text)

-- | The time at which a message was updated.
channelMessage_lastUpdatedTimestamp :: Lens' ChannelMessage (Maybe UTCTime)

-- | The time at which a message was edited.
channelMessage_lastEditedTimestamp :: Lens' ChannelMessage (Maybe UTCTime)
instance GHC.Generics.Generic Network.AWS.ChimeSDKMessaging.Types.ChannelMessage.ChannelMessage
instance GHC.Show.Show Network.AWS.ChimeSDKMessaging.Types.ChannelMessage.ChannelMessage
instance GHC.Classes.Eq Network.AWS.ChimeSDKMessaging.Types.ChannelMessage.ChannelMessage
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ChimeSDKMessaging.Types.ChannelMessage.ChannelMessage
instance Data.Hashable.Class.Hashable Network.AWS.ChimeSDKMessaging.Types.ChannelMessage.ChannelMessage
instance Control.DeepSeq.NFData Network.AWS.ChimeSDKMessaging.Types.ChannelMessage.ChannelMessage


module Network.AWS.ChimeSDKMessaging.Types.ChannelMembershipSummary

-- | Summary of the details of a <tt>ChannelMembership</tt>.
--   
--   <i>See:</i> <a>newChannelMembershipSummary</a> smart constructor.
data ChannelMembershipSummary
ChannelMembershipSummary' :: Maybe Identity -> ChannelMembershipSummary

-- | A member's summary data.
[$sel:member:ChannelMembershipSummary'] :: ChannelMembershipSummary -> Maybe Identity

-- | Create a value of <a>ChannelMembershipSummary</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:member:ChannelMembershipSummary'</a>,
--   <a>channelMembershipSummary_member</a> - A member's summary data.
newChannelMembershipSummary :: ChannelMembershipSummary

-- | A member's summary data.
channelMembershipSummary_member :: Lens' ChannelMembershipSummary (Maybe Identity)
instance GHC.Generics.Generic Network.AWS.ChimeSDKMessaging.Types.ChannelMembershipSummary.ChannelMembershipSummary
instance GHC.Show.Show Network.AWS.ChimeSDKMessaging.Types.ChannelMembershipSummary.ChannelMembershipSummary
instance GHC.Classes.Eq Network.AWS.ChimeSDKMessaging.Types.ChannelMembershipSummary.ChannelMembershipSummary
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ChimeSDKMessaging.Types.ChannelMembershipSummary.ChannelMembershipSummary
instance Data.Hashable.Class.Hashable Network.AWS.ChimeSDKMessaging.Types.ChannelMembershipSummary.ChannelMembershipSummary
instance Control.DeepSeq.NFData Network.AWS.ChimeSDKMessaging.Types.ChannelMembershipSummary.ChannelMembershipSummary


module Network.AWS.ChimeSDKMessaging.Types.ChannelMembership

-- | The details of a channel member.
--   
--   <i>See:</i> <a>newChannelMembership</a> smart constructor.
data ChannelMembership
ChannelMembership' :: Maybe Text -> Maybe Identity -> Maybe ChannelMembershipType -> Maybe Identity -> Maybe POSIX -> Maybe POSIX -> ChannelMembership

-- | The ARN of the member's channel.
[$sel:channelArn:ChannelMembership'] :: ChannelMembership -> Maybe Text

-- | The data of the channel member.
[$sel:member:ChannelMembership'] :: ChannelMembership -> Maybe Identity

-- | The membership type set for the channel member.
[$sel:type':ChannelMembership'] :: ChannelMembership -> Maybe ChannelMembershipType

-- | The identifier of the member who invited another member.
[$sel:invitedBy:ChannelMembership'] :: ChannelMembership -> Maybe Identity

-- | The time at which the channel membership was created.
[$sel:createdTimestamp:ChannelMembership'] :: ChannelMembership -> Maybe POSIX

-- | The time at which a channel membership was last updated.
[$sel:lastUpdatedTimestamp:ChannelMembership'] :: ChannelMembership -> Maybe POSIX

-- | Create a value of <a>ChannelMembership</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:channelArn:ChannelMembership'</a>,
--   <a>channelMembership_channelArn</a> - The ARN of the member's channel.
--   
--   <a>$sel:member:ChannelMembership'</a>, <a>channelMembership_member</a>
--   - The data of the channel member.
--   
--   <a>$sel:type':ChannelMembership'</a>, <a>channelMembership_type</a> -
--   The membership type set for the channel member.
--   
--   <a>$sel:invitedBy:ChannelMembership'</a>,
--   <a>channelMembership_invitedBy</a> - The identifier of the member who
--   invited another member.
--   
--   <a>$sel:createdTimestamp:ChannelMembership'</a>,
--   <a>channelMembership_createdTimestamp</a> - The time at which the
--   channel membership was created.
--   
--   <a>$sel:lastUpdatedTimestamp:ChannelMembership'</a>,
--   <a>channelMembership_lastUpdatedTimestamp</a> - The time at which a
--   channel membership was last updated.
newChannelMembership :: ChannelMembership

-- | The ARN of the member's channel.
channelMembership_channelArn :: Lens' ChannelMembership (Maybe Text)

-- | The data of the channel member.
channelMembership_member :: Lens' ChannelMembership (Maybe Identity)

-- | The membership type set for the channel member.
channelMembership_type :: Lens' ChannelMembership (Maybe ChannelMembershipType)

-- | The identifier of the member who invited another member.
channelMembership_invitedBy :: Lens' ChannelMembership (Maybe Identity)

-- | The time at which the channel membership was created.
channelMembership_createdTimestamp :: Lens' ChannelMembership (Maybe UTCTime)

-- | The time at which a channel membership was last updated.
channelMembership_lastUpdatedTimestamp :: Lens' ChannelMembership (Maybe UTCTime)
instance GHC.Generics.Generic Network.AWS.ChimeSDKMessaging.Types.ChannelMembership.ChannelMembership
instance GHC.Show.Show Network.AWS.ChimeSDKMessaging.Types.ChannelMembership.ChannelMembership
instance GHC.Classes.Eq Network.AWS.ChimeSDKMessaging.Types.ChannelMembership.ChannelMembership
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ChimeSDKMessaging.Types.ChannelMembership.ChannelMembership
instance Data.Hashable.Class.Hashable Network.AWS.ChimeSDKMessaging.Types.ChannelMembership.ChannelMembership
instance Control.DeepSeq.NFData Network.AWS.ChimeSDKMessaging.Types.ChannelMembership.ChannelMembership


module Network.AWS.ChimeSDKMessaging.Types.ChannelBanSummary

-- | Summary of the details of a <tt>ChannelBan</tt>.
--   
--   <i>See:</i> <a>newChannelBanSummary</a> smart constructor.
data ChannelBanSummary
ChannelBanSummary' :: Maybe Identity -> ChannelBanSummary

-- | The member being banned from a channel.
[$sel:member:ChannelBanSummary'] :: ChannelBanSummary -> Maybe Identity

-- | Create a value of <a>ChannelBanSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:member:ChannelBanSummary'</a>, <a>channelBanSummary_member</a>
--   - The member being banned from a channel.
newChannelBanSummary :: ChannelBanSummary

-- | The member being banned from a channel.
channelBanSummary_member :: Lens' ChannelBanSummary (Maybe Identity)
instance GHC.Generics.Generic Network.AWS.ChimeSDKMessaging.Types.ChannelBanSummary.ChannelBanSummary
instance GHC.Show.Show Network.AWS.ChimeSDKMessaging.Types.ChannelBanSummary.ChannelBanSummary
instance GHC.Classes.Eq Network.AWS.ChimeSDKMessaging.Types.ChannelBanSummary.ChannelBanSummary
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ChimeSDKMessaging.Types.ChannelBanSummary.ChannelBanSummary
instance Data.Hashable.Class.Hashable Network.AWS.ChimeSDKMessaging.Types.ChannelBanSummary.ChannelBanSummary
instance Control.DeepSeq.NFData Network.AWS.ChimeSDKMessaging.Types.ChannelBanSummary.ChannelBanSummary


module Network.AWS.ChimeSDKMessaging.Types.ChannelBan

-- | The details of a channel ban.
--   
--   <i>See:</i> <a>newChannelBan</a> smart constructor.
data ChannelBan
ChannelBan' :: Maybe Identity -> Maybe Text -> Maybe Identity -> Maybe POSIX -> ChannelBan

-- | The <tt>AppInstanceUser</tt> who created the ban.
[$sel:createdBy:ChannelBan'] :: ChannelBan -> Maybe Identity

-- | The ARN of the channel from which a member is being banned.
[$sel:channelArn:ChannelBan'] :: ChannelBan -> Maybe Text

-- | The member being banned from the channel.
[$sel:member:ChannelBan'] :: ChannelBan -> Maybe Identity

-- | The time at which the ban was created.
[$sel:createdTimestamp:ChannelBan'] :: ChannelBan -> Maybe POSIX

-- | Create a value of <a>ChannelBan</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:createdBy:ChannelBan'</a>, <a>channelBan_createdBy</a> - The
--   <tt>AppInstanceUser</tt> who created the ban.
--   
--   <a>$sel:channelArn:ChannelBan'</a>, <a>channelBan_channelArn</a> - The
--   ARN of the channel from which a member is being banned.
--   
--   <a>$sel:member:ChannelBan'</a>, <a>channelBan_member</a> - The member
--   being banned from the channel.
--   
--   <a>$sel:createdTimestamp:ChannelBan'</a>,
--   <a>channelBan_createdTimestamp</a> - The time at which the ban was
--   created.
newChannelBan :: ChannelBan

-- | The <tt>AppInstanceUser</tt> who created the ban.
channelBan_createdBy :: Lens' ChannelBan (Maybe Identity)

-- | The ARN of the channel from which a member is being banned.
channelBan_channelArn :: Lens' ChannelBan (Maybe Text)

-- | The member being banned from the channel.
channelBan_member :: Lens' ChannelBan (Maybe Identity)

-- | The time at which the ban was created.
channelBan_createdTimestamp :: Lens' ChannelBan (Maybe UTCTime)
instance GHC.Generics.Generic Network.AWS.ChimeSDKMessaging.Types.ChannelBan.ChannelBan
instance GHC.Show.Show Network.AWS.ChimeSDKMessaging.Types.ChannelBan.ChannelBan
instance GHC.Classes.Eq Network.AWS.ChimeSDKMessaging.Types.ChannelBan.ChannelBan
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ChimeSDKMessaging.Types.ChannelBan.ChannelBan
instance Data.Hashable.Class.Hashable Network.AWS.ChimeSDKMessaging.Types.ChannelBan.ChannelBan
instance Control.DeepSeq.NFData Network.AWS.ChimeSDKMessaging.Types.ChannelBan.ChannelBan


module Network.AWS.ChimeSDKMessaging.Types.Channel

-- | The details of a channel.
--   
--   <i>See:</i> <a>newChannel</a> smart constructor.
data Channel
Channel' :: Maybe ChannelMode -> Maybe Identity -> Maybe Text -> Maybe ChannelPrivacy -> Maybe Text -> Maybe POSIX -> Maybe (Sensitive Text) -> Maybe (Sensitive Text) -> Maybe POSIX -> Maybe POSIX -> Channel

-- | The mode of the channel.
[$sel:mode:Channel'] :: Channel -> Maybe ChannelMode

-- | The <tt>AppInstanceUser</tt> who created the channel.
[$sel:createdBy:Channel'] :: Channel -> Maybe Identity

-- | The ARN of a channel.
[$sel:channelArn:Channel'] :: Channel -> Maybe Text

-- | The channel's privacy setting.
[$sel:privacy:Channel'] :: Channel -> Maybe ChannelPrivacy

-- | The ARN of the channel flow.
[$sel:channelFlowArn:Channel'] :: Channel -> Maybe Text

-- | The time at which a member sent the last message in the channel.
[$sel:lastMessageTimestamp:Channel'] :: Channel -> Maybe POSIX

-- | The name of a channel.
[$sel:name:Channel'] :: Channel -> Maybe (Sensitive Text)

-- | The channel's metadata.
[$sel:metadata:Channel'] :: Channel -> Maybe (Sensitive Text)

-- | The time at which the <tt>AppInstanceUser</tt> created the channel.
[$sel:createdTimestamp:Channel'] :: Channel -> Maybe POSIX

-- | The time at which a channel was last updated.
[$sel:lastUpdatedTimestamp:Channel'] :: Channel -> Maybe POSIX

-- | Create a value of <a>Channel</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:mode:Channel'</a>, <a>channel_mode</a> - The mode of the
--   channel.
--   
--   <a>$sel:createdBy:Channel'</a>, <a>channel_createdBy</a> - The
--   <tt>AppInstanceUser</tt> who created the channel.
--   
--   <a>$sel:channelArn:Channel'</a>, <a>channel_channelArn</a> - The ARN
--   of a channel.
--   
--   <a>$sel:privacy:Channel'</a>, <a>channel_privacy</a> - The channel's
--   privacy setting.
--   
--   <a>$sel:channelFlowArn:Channel'</a>, <a>channel_channelFlowArn</a> -
--   The ARN of the channel flow.
--   
--   <a>$sel:lastMessageTimestamp:Channel'</a>,
--   <a>channel_lastMessageTimestamp</a> - The time at which a member sent
--   the last message in the channel.
--   
--   <a>$sel:name:Channel'</a>, <a>channel_name</a> - The name of a
--   channel.
--   
--   <a>$sel:metadata:Channel'</a>, <a>channel_metadata</a> - The channel's
--   metadata.
--   
--   <a>$sel:createdTimestamp:Channel'</a>, <a>channel_createdTimestamp</a>
--   - The time at which the <tt>AppInstanceUser</tt> created the channel.
--   
--   <a>$sel:lastUpdatedTimestamp:Channel'</a>,
--   <a>channel_lastUpdatedTimestamp</a> - The time at which a channel was
--   last updated.
newChannel :: Channel

-- | The mode of the channel.
channel_mode :: Lens' Channel (Maybe ChannelMode)

-- | The <tt>AppInstanceUser</tt> who created the channel.
channel_createdBy :: Lens' Channel (Maybe Identity)

-- | The ARN of a channel.
channel_channelArn :: Lens' Channel (Maybe Text)

-- | The channel's privacy setting.
channel_privacy :: Lens' Channel (Maybe ChannelPrivacy)

-- | The ARN of the channel flow.
channel_channelFlowArn :: Lens' Channel (Maybe Text)

-- | The time at which a member sent the last message in the channel.
channel_lastMessageTimestamp :: Lens' Channel (Maybe UTCTime)

-- | The name of a channel.
channel_name :: Lens' Channel (Maybe Text)

-- | The channel's metadata.
channel_metadata :: Lens' Channel (Maybe Text)

-- | The time at which the <tt>AppInstanceUser</tt> created the channel.
channel_createdTimestamp :: Lens' Channel (Maybe UTCTime)

-- | The time at which a channel was last updated.
channel_lastUpdatedTimestamp :: Lens' Channel (Maybe UTCTime)
instance GHC.Generics.Generic Network.AWS.ChimeSDKMessaging.Types.Channel.Channel
instance GHC.Show.Show Network.AWS.ChimeSDKMessaging.Types.Channel.Channel
instance GHC.Classes.Eq Network.AWS.ChimeSDKMessaging.Types.Channel.Channel
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ChimeSDKMessaging.Types.Channel.Channel
instance Data.Hashable.Class.Hashable Network.AWS.ChimeSDKMessaging.Types.Channel.Channel
instance Control.DeepSeq.NFData Network.AWS.ChimeSDKMessaging.Types.Channel.Channel


module Network.AWS.ChimeSDKMessaging.Types.BatchChannelMemberships

-- | The membership information, including member ARNs, the channel ARN,
--   and membership types.
--   
--   <i>See:</i> <a>newBatchChannelMemberships</a> smart constructor.
data BatchChannelMemberships
BatchChannelMemberships' :: Maybe [Identity] -> Maybe Text -> Maybe ChannelMembershipType -> Maybe Identity -> BatchChannelMemberships

-- | The users successfully added to the request.
[$sel:members:BatchChannelMemberships'] :: BatchChannelMemberships -> Maybe [Identity]

-- | The ARN of the channel to which you're adding users.
[$sel:channelArn:BatchChannelMemberships'] :: BatchChannelMemberships -> Maybe Text

-- | The membership types set for the channel users.
[$sel:type':BatchChannelMemberships'] :: BatchChannelMemberships -> Maybe ChannelMembershipType

-- | The identifier of the member who invited another member.
[$sel:invitedBy:BatchChannelMemberships'] :: BatchChannelMemberships -> Maybe Identity

-- | Create a value of <a>BatchChannelMemberships</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:members:BatchChannelMemberships'</a>,
--   <a>batchChannelMemberships_members</a> - The users successfully added
--   to the request.
--   
--   <a>$sel:channelArn:BatchChannelMemberships'</a>,
--   <a>batchChannelMemberships_channelArn</a> - The ARN of the channel to
--   which you're adding users.
--   
--   <a>$sel:type':BatchChannelMemberships'</a>,
--   <a>batchChannelMemberships_type</a> - The membership types set for the
--   channel users.
--   
--   <a>$sel:invitedBy:BatchChannelMemberships'</a>,
--   <a>batchChannelMemberships_invitedBy</a> - The identifier of the
--   member who invited another member.
newBatchChannelMemberships :: BatchChannelMemberships

-- | The users successfully added to the request.
batchChannelMemberships_members :: Lens' BatchChannelMemberships (Maybe [Identity])

-- | The ARN of the channel to which you're adding users.
batchChannelMemberships_channelArn :: Lens' BatchChannelMemberships (Maybe Text)

-- | The membership types set for the channel users.
batchChannelMemberships_type :: Lens' BatchChannelMemberships (Maybe ChannelMembershipType)

-- | The identifier of the member who invited another member.
batchChannelMemberships_invitedBy :: Lens' BatchChannelMemberships (Maybe Identity)
instance GHC.Generics.Generic Network.AWS.ChimeSDKMessaging.Types.BatchChannelMemberships.BatchChannelMemberships
instance GHC.Show.Show Network.AWS.ChimeSDKMessaging.Types.BatchChannelMemberships.BatchChannelMemberships
instance GHC.Classes.Eq Network.AWS.ChimeSDKMessaging.Types.BatchChannelMemberships.BatchChannelMemberships
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ChimeSDKMessaging.Types.BatchChannelMemberships.BatchChannelMemberships
instance Data.Hashable.Class.Hashable Network.AWS.ChimeSDKMessaging.Types.BatchChannelMemberships.BatchChannelMemberships
instance Control.DeepSeq.NFData Network.AWS.ChimeSDKMessaging.Types.BatchChannelMemberships.BatchChannelMemberships


module Network.AWS.ChimeSDKMessaging.Types.InvocationType
newtype InvocationType
InvocationType' :: Text -> InvocationType
[fromInvocationType] :: InvocationType -> Text
pattern InvocationType_ASYNC :: InvocationType
instance Network.AWS.Data.XML.ToXML Network.AWS.ChimeSDKMessaging.Types.InvocationType.InvocationType
instance Network.AWS.Data.XML.FromXML Network.AWS.ChimeSDKMessaging.Types.InvocationType.InvocationType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.ChimeSDKMessaging.Types.InvocationType.InvocationType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ChimeSDKMessaging.Types.InvocationType.InvocationType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.ChimeSDKMessaging.Types.InvocationType.InvocationType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ChimeSDKMessaging.Types.InvocationType.InvocationType
instance Network.AWS.Data.Query.ToQuery Network.AWS.ChimeSDKMessaging.Types.InvocationType.InvocationType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.ChimeSDKMessaging.Types.InvocationType.InvocationType
instance Network.AWS.Data.Log.ToLog Network.AWS.ChimeSDKMessaging.Types.InvocationType.InvocationType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.ChimeSDKMessaging.Types.InvocationType.InvocationType
instance Network.AWS.Data.Text.ToText Network.AWS.ChimeSDKMessaging.Types.InvocationType.InvocationType
instance Network.AWS.Data.Text.FromText Network.AWS.ChimeSDKMessaging.Types.InvocationType.InvocationType
instance Control.DeepSeq.NFData Network.AWS.ChimeSDKMessaging.Types.InvocationType.InvocationType
instance Data.Hashable.Class.Hashable Network.AWS.ChimeSDKMessaging.Types.InvocationType.InvocationType
instance GHC.Generics.Generic Network.AWS.ChimeSDKMessaging.Types.InvocationType.InvocationType
instance GHC.Classes.Ord Network.AWS.ChimeSDKMessaging.Types.InvocationType.InvocationType
instance GHC.Classes.Eq Network.AWS.ChimeSDKMessaging.Types.InvocationType.InvocationType
instance GHC.Read.Read Network.AWS.ChimeSDKMessaging.Types.InvocationType.InvocationType
instance GHC.Show.Show Network.AWS.ChimeSDKMessaging.Types.InvocationType.InvocationType


module Network.AWS.ChimeSDKMessaging.Types.LambdaConfiguration

-- | Stores metadata about a Lambda processor.
--   
--   <i>See:</i> <a>newLambdaConfiguration</a> smart constructor.
data LambdaConfiguration
LambdaConfiguration' :: Text -> InvocationType -> LambdaConfiguration

-- | The ARN of the Lambda message processing function.
[$sel:resourceArn:LambdaConfiguration'] :: LambdaConfiguration -> Text

-- | Controls how the Lambda function is invoked.
[$sel:invocationType:LambdaConfiguration'] :: LambdaConfiguration -> InvocationType

-- | Create a value of <a>LambdaConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:LambdaConfiguration'</a>,
--   <a>lambdaConfiguration_resourceArn</a> - The ARN of the Lambda message
--   processing function.
--   
--   <a>$sel:invocationType:LambdaConfiguration'</a>,
--   <a>lambdaConfiguration_invocationType</a> - Controls how the Lambda
--   function is invoked.
newLambdaConfiguration :: Text -> InvocationType -> LambdaConfiguration

-- | The ARN of the Lambda message processing function.
lambdaConfiguration_resourceArn :: Lens' LambdaConfiguration Text

-- | Controls how the Lambda function is invoked.
lambdaConfiguration_invocationType :: Lens' LambdaConfiguration InvocationType
instance GHC.Generics.Generic Network.AWS.ChimeSDKMessaging.Types.LambdaConfiguration.LambdaConfiguration
instance GHC.Show.Show Network.AWS.ChimeSDKMessaging.Types.LambdaConfiguration.LambdaConfiguration
instance GHC.Read.Read Network.AWS.ChimeSDKMessaging.Types.LambdaConfiguration.LambdaConfiguration
instance GHC.Classes.Eq Network.AWS.ChimeSDKMessaging.Types.LambdaConfiguration.LambdaConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ChimeSDKMessaging.Types.LambdaConfiguration.LambdaConfiguration
instance Data.Hashable.Class.Hashable Network.AWS.ChimeSDKMessaging.Types.LambdaConfiguration.LambdaConfiguration
instance Control.DeepSeq.NFData Network.AWS.ChimeSDKMessaging.Types.LambdaConfiguration.LambdaConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ChimeSDKMessaging.Types.LambdaConfiguration.LambdaConfiguration


module Network.AWS.ChimeSDKMessaging.Types.MessagingSessionEndpoint

-- | The websocket endpoint used to connect to Amazon Chime SDK messaging.
--   
--   <i>See:</i> <a>newMessagingSessionEndpoint</a> smart constructor.
data MessagingSessionEndpoint
MessagingSessionEndpoint' :: Maybe Text -> MessagingSessionEndpoint

-- | The endpoint to which you establish a websocket connection.
[$sel:url:MessagingSessionEndpoint'] :: MessagingSessionEndpoint -> Maybe Text

-- | Create a value of <a>MessagingSessionEndpoint</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:url:MessagingSessionEndpoint'</a>,
--   <a>messagingSessionEndpoint_url</a> - The endpoint to which you
--   establish a websocket connection.
newMessagingSessionEndpoint :: MessagingSessionEndpoint

-- | The endpoint to which you establish a websocket connection.
messagingSessionEndpoint_url :: Lens' MessagingSessionEndpoint (Maybe Text)
instance GHC.Generics.Generic Network.AWS.ChimeSDKMessaging.Types.MessagingSessionEndpoint.MessagingSessionEndpoint
instance GHC.Show.Show Network.AWS.ChimeSDKMessaging.Types.MessagingSessionEndpoint.MessagingSessionEndpoint
instance GHC.Read.Read Network.AWS.ChimeSDKMessaging.Types.MessagingSessionEndpoint.MessagingSessionEndpoint
instance GHC.Classes.Eq Network.AWS.ChimeSDKMessaging.Types.MessagingSessionEndpoint.MessagingSessionEndpoint
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ChimeSDKMessaging.Types.MessagingSessionEndpoint.MessagingSessionEndpoint
instance Data.Hashable.Class.Hashable Network.AWS.ChimeSDKMessaging.Types.MessagingSessionEndpoint.MessagingSessionEndpoint
instance Control.DeepSeq.NFData Network.AWS.ChimeSDKMessaging.Types.MessagingSessionEndpoint.MessagingSessionEndpoint


module Network.AWS.ChimeSDKMessaging.Types.ProcessorConfiguration

-- | A processor's metadata.
--   
--   <i>See:</i> <a>newProcessorConfiguration</a> smart constructor.
data ProcessorConfiguration
ProcessorConfiguration' :: LambdaConfiguration -> ProcessorConfiguration

-- | Indicates that the processor is of type Lambda.
[$sel:lambda:ProcessorConfiguration'] :: ProcessorConfiguration -> LambdaConfiguration

-- | Create a value of <a>ProcessorConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lambda:ProcessorConfiguration'</a>,
--   <a>processorConfiguration_lambda</a> - Indicates that the processor is
--   of type Lambda.
newProcessorConfiguration :: LambdaConfiguration -> ProcessorConfiguration

-- | Indicates that the processor is of type Lambda.
processorConfiguration_lambda :: Lens' ProcessorConfiguration LambdaConfiguration
instance GHC.Generics.Generic Network.AWS.ChimeSDKMessaging.Types.ProcessorConfiguration.ProcessorConfiguration
instance GHC.Show.Show Network.AWS.ChimeSDKMessaging.Types.ProcessorConfiguration.ProcessorConfiguration
instance GHC.Read.Read Network.AWS.ChimeSDKMessaging.Types.ProcessorConfiguration.ProcessorConfiguration
instance GHC.Classes.Eq Network.AWS.ChimeSDKMessaging.Types.ProcessorConfiguration.ProcessorConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ChimeSDKMessaging.Types.ProcessorConfiguration.ProcessorConfiguration
instance Data.Hashable.Class.Hashable Network.AWS.ChimeSDKMessaging.Types.ProcessorConfiguration.ProcessorConfiguration
instance Control.DeepSeq.NFData Network.AWS.ChimeSDKMessaging.Types.ProcessorConfiguration.ProcessorConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ChimeSDKMessaging.Types.ProcessorConfiguration.ProcessorConfiguration


module Network.AWS.ChimeSDKMessaging.Types.Processor

-- | The information about a processor in a channel flow.
--   
--   <i>See:</i> <a>newProcessor</a> smart constructor.
data Processor
Processor' :: Sensitive Text -> ProcessorConfiguration -> Natural -> FallbackAction -> Processor

-- | The name of the channel flow.
[$sel:name:Processor'] :: Processor -> Sensitive Text

-- | The information about the type of processor and its identifier.
[$sel:configuration:Processor'] :: Processor -> ProcessorConfiguration

-- | The sequence in which processors run. If you have multiple processors
--   in a channel flow, message processing goes through each processor in
--   the sequence. The value determines the sequence. At this point, we
--   support only 1 processor within a flow.
[$sel:executionOrder:Processor'] :: Processor -> Natural

-- | Determines whether to continue or stop processing if communication
--   with processor fails. If the last processor in a channel flow sequence
--   has a fallback action of CONTINUE, and communication with the
--   processor fails, the message is considered processed and sent to the
--   recipients in the channel.
[$sel:fallbackAction:Processor'] :: Processor -> FallbackAction

-- | Create a value of <a>Processor</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:Processor'</a>, <a>processor_name</a> - The name of the
--   channel flow.
--   
--   <a>$sel:configuration:Processor'</a>, <a>processor_configuration</a> -
--   The information about the type of processor and its identifier.
--   
--   <a>$sel:executionOrder:Processor'</a>, <a>processor_executionOrder</a>
--   - The sequence in which processors run. If you have multiple
--   processors in a channel flow, message processing goes through each
--   processor in the sequence. The value determines the sequence. At this
--   point, we support only 1 processor within a flow.
--   
--   <a>$sel:fallbackAction:Processor'</a>, <a>processor_fallbackAction</a>
--   - Determines whether to continue or stop processing if communication
--   with processor fails. If the last processor in a channel flow sequence
--   has a fallback action of CONTINUE, and communication with the
--   processor fails, the message is considered processed and sent to the
--   recipients in the channel.
newProcessor :: Text -> ProcessorConfiguration -> Natural -> FallbackAction -> Processor

-- | The name of the channel flow.
processor_name :: Lens' Processor Text

-- | The information about the type of processor and its identifier.
processor_configuration :: Lens' Processor ProcessorConfiguration

-- | The sequence in which processors run. If you have multiple processors
--   in a channel flow, message processing goes through each processor in
--   the sequence. The value determines the sequence. At this point, we
--   support only 1 processor within a flow.
processor_executionOrder :: Lens' Processor Natural

-- | Determines whether to continue or stop processing if communication
--   with processor fails. If the last processor in a channel flow sequence
--   has a fallback action of CONTINUE, and communication with the
--   processor fails, the message is considered processed and sent to the
--   recipients in the channel.
processor_fallbackAction :: Lens' Processor FallbackAction
instance GHC.Generics.Generic Network.AWS.ChimeSDKMessaging.Types.Processor.Processor
instance GHC.Show.Show Network.AWS.ChimeSDKMessaging.Types.Processor.Processor
instance GHC.Classes.Eq Network.AWS.ChimeSDKMessaging.Types.Processor.Processor
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ChimeSDKMessaging.Types.Processor.Processor
instance Data.Hashable.Class.Hashable Network.AWS.ChimeSDKMessaging.Types.Processor.Processor
instance Control.DeepSeq.NFData Network.AWS.ChimeSDKMessaging.Types.Processor.Processor
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ChimeSDKMessaging.Types.Processor.Processor


module Network.AWS.ChimeSDKMessaging.Types.ChannelFlowSummary

-- | Summary of details of a channel flow.
--   
--   <i>See:</i> <a>newChannelFlowSummary</a> smart constructor.
data ChannelFlowSummary
ChannelFlowSummary' :: Maybe (NonEmpty Processor) -> Maybe Text -> Maybe (Sensitive Text) -> ChannelFlowSummary

-- | Information about the processor Lambda functions.
[$sel:processors:ChannelFlowSummary'] :: ChannelFlowSummary -> Maybe (NonEmpty Processor)

-- | The ARN of the channel flow.
[$sel:channelFlowArn:ChannelFlowSummary'] :: ChannelFlowSummary -> Maybe Text

-- | The name of the channel flow.
[$sel:name:ChannelFlowSummary'] :: ChannelFlowSummary -> Maybe (Sensitive Text)

-- | Create a value of <a>ChannelFlowSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:processors:ChannelFlowSummary'</a>,
--   <a>channelFlowSummary_processors</a> - Information about the processor
--   Lambda functions.
--   
--   <a>$sel:channelFlowArn:ChannelFlowSummary'</a>,
--   <a>channelFlowSummary_channelFlowArn</a> - The ARN of the channel
--   flow.
--   
--   <a>$sel:name:ChannelFlowSummary'</a>, <a>channelFlowSummary_name</a> -
--   The name of the channel flow.
newChannelFlowSummary :: ChannelFlowSummary

-- | Information about the processor Lambda functions.
channelFlowSummary_processors :: Lens' ChannelFlowSummary (Maybe (NonEmpty Processor))

-- | The ARN of the channel flow.
channelFlowSummary_channelFlowArn :: Lens' ChannelFlowSummary (Maybe Text)

-- | The name of the channel flow.
channelFlowSummary_name :: Lens' ChannelFlowSummary (Maybe Text)
instance GHC.Generics.Generic Network.AWS.ChimeSDKMessaging.Types.ChannelFlowSummary.ChannelFlowSummary
instance GHC.Show.Show Network.AWS.ChimeSDKMessaging.Types.ChannelFlowSummary.ChannelFlowSummary
instance GHC.Classes.Eq Network.AWS.ChimeSDKMessaging.Types.ChannelFlowSummary.ChannelFlowSummary
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ChimeSDKMessaging.Types.ChannelFlowSummary.ChannelFlowSummary
instance Data.Hashable.Class.Hashable Network.AWS.ChimeSDKMessaging.Types.ChannelFlowSummary.ChannelFlowSummary
instance Control.DeepSeq.NFData Network.AWS.ChimeSDKMessaging.Types.ChannelFlowSummary.ChannelFlowSummary


module Network.AWS.ChimeSDKMessaging.Types.ChannelFlow

-- | The details of a channel flow.
--   
--   <i>See:</i> <a>newChannelFlow</a> smart constructor.
data ChannelFlow
ChannelFlow' :: Maybe (NonEmpty Processor) -> Maybe Text -> Maybe (Sensitive Text) -> Maybe POSIX -> Maybe POSIX -> ChannelFlow

-- | Information about the processor Lambda functions.
[$sel:processors:ChannelFlow'] :: ChannelFlow -> Maybe (NonEmpty Processor)

-- | The ARN of the channel flow.
[$sel:channelFlowArn:ChannelFlow'] :: ChannelFlow -> Maybe Text

-- | The name of the channel flow.
[$sel:name:ChannelFlow'] :: ChannelFlow -> Maybe (Sensitive Text)

-- | The time at which the channel flow was created.
[$sel:createdTimestamp:ChannelFlow'] :: ChannelFlow -> Maybe POSIX

-- | The time at which a channel flow was updated.
[$sel:lastUpdatedTimestamp:ChannelFlow'] :: ChannelFlow -> Maybe POSIX

-- | Create a value of <a>ChannelFlow</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:processors:ChannelFlow'</a>, <a>channelFlow_processors</a> -
--   Information about the processor Lambda functions.
--   
--   <a>$sel:channelFlowArn:ChannelFlow'</a>,
--   <a>channelFlow_channelFlowArn</a> - The ARN of the channel flow.
--   
--   <a>$sel:name:ChannelFlow'</a>, <a>channelFlow_name</a> - The name of
--   the channel flow.
--   
--   <a>$sel:createdTimestamp:ChannelFlow'</a>,
--   <a>channelFlow_createdTimestamp</a> - The time at which the channel
--   flow was created.
--   
--   <a>$sel:lastUpdatedTimestamp:ChannelFlow'</a>,
--   <a>channelFlow_lastUpdatedTimestamp</a> - The time at which a channel
--   flow was updated.
newChannelFlow :: ChannelFlow

-- | Information about the processor Lambda functions.
channelFlow_processors :: Lens' ChannelFlow (Maybe (NonEmpty Processor))

-- | The ARN of the channel flow.
channelFlow_channelFlowArn :: Lens' ChannelFlow (Maybe Text)

-- | The name of the channel flow.
channelFlow_name :: Lens' ChannelFlow (Maybe Text)

-- | The time at which the channel flow was created.
channelFlow_createdTimestamp :: Lens' ChannelFlow (Maybe UTCTime)

-- | The time at which a channel flow was updated.
channelFlow_lastUpdatedTimestamp :: Lens' ChannelFlow (Maybe UTCTime)
instance GHC.Generics.Generic Network.AWS.ChimeSDKMessaging.Types.ChannelFlow.ChannelFlow
instance GHC.Show.Show Network.AWS.ChimeSDKMessaging.Types.ChannelFlow.ChannelFlow
instance GHC.Classes.Eq Network.AWS.ChimeSDKMessaging.Types.ChannelFlow.ChannelFlow
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ChimeSDKMessaging.Types.ChannelFlow.ChannelFlow
instance Data.Hashable.Class.Hashable Network.AWS.ChimeSDKMessaging.Types.ChannelFlow.ChannelFlow
instance Control.DeepSeq.NFData Network.AWS.ChimeSDKMessaging.Types.ChannelFlow.ChannelFlow


module Network.AWS.ChimeSDKMessaging.Types.SortOrder
newtype SortOrder
SortOrder' :: Text -> SortOrder
[fromSortOrder] :: SortOrder -> Text
pattern SortOrder_ASCENDING :: SortOrder
pattern SortOrder_DESCENDING :: SortOrder
instance Network.AWS.Data.XML.ToXML Network.AWS.ChimeSDKMessaging.Types.SortOrder.SortOrder
instance Network.AWS.Data.XML.FromXML Network.AWS.ChimeSDKMessaging.Types.SortOrder.SortOrder
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.ChimeSDKMessaging.Types.SortOrder.SortOrder
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ChimeSDKMessaging.Types.SortOrder.SortOrder
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.ChimeSDKMessaging.Types.SortOrder.SortOrder
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ChimeSDKMessaging.Types.SortOrder.SortOrder
instance Network.AWS.Data.Query.ToQuery Network.AWS.ChimeSDKMessaging.Types.SortOrder.SortOrder
instance Network.AWS.Data.Headers.ToHeader Network.AWS.ChimeSDKMessaging.Types.SortOrder.SortOrder
instance Network.AWS.Data.Log.ToLog Network.AWS.ChimeSDKMessaging.Types.SortOrder.SortOrder
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.ChimeSDKMessaging.Types.SortOrder.SortOrder
instance Network.AWS.Data.Text.ToText Network.AWS.ChimeSDKMessaging.Types.SortOrder.SortOrder
instance Network.AWS.Data.Text.FromText Network.AWS.ChimeSDKMessaging.Types.SortOrder.SortOrder
instance Control.DeepSeq.NFData Network.AWS.ChimeSDKMessaging.Types.SortOrder.SortOrder
instance Data.Hashable.Class.Hashable Network.AWS.ChimeSDKMessaging.Types.SortOrder.SortOrder
instance GHC.Generics.Generic Network.AWS.ChimeSDKMessaging.Types.SortOrder.SortOrder
instance GHC.Classes.Ord Network.AWS.ChimeSDKMessaging.Types.SortOrder.SortOrder
instance GHC.Classes.Eq Network.AWS.ChimeSDKMessaging.Types.SortOrder.SortOrder
instance GHC.Read.Read Network.AWS.ChimeSDKMessaging.Types.SortOrder.SortOrder
instance GHC.Show.Show Network.AWS.ChimeSDKMessaging.Types.SortOrder.SortOrder


module Network.AWS.ChimeSDKMessaging.Types.Tag

-- | A tag object containing a key-value pair.
--   
--   <i>See:</i> <a>newTag</a> smart constructor.
data Tag
Tag' :: Sensitive Text -> Sensitive Text -> Tag

-- | The key in a tag.
[$sel:key:Tag'] :: Tag -> Sensitive Text

-- | The value in a tag.
[$sel:value:Tag'] :: Tag -> Sensitive Text

-- | Create a value of <a>Tag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:Tag'</a>, <a>tag_key</a> - The key in a tag.
--   
--   <a>$sel:value:Tag'</a>, <a>tag_value</a> - The value in a tag.
newTag :: Text -> Text -> Tag

-- | The key in a tag.
tag_key :: Lens' Tag Text

-- | The value in a tag.
tag_value :: Lens' Tag Text
instance GHC.Generics.Generic Network.AWS.ChimeSDKMessaging.Types.Tag.Tag
instance GHC.Show.Show Network.AWS.ChimeSDKMessaging.Types.Tag.Tag
instance GHC.Classes.Eq Network.AWS.ChimeSDKMessaging.Types.Tag.Tag
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ChimeSDKMessaging.Types.Tag.Tag
instance Data.Hashable.Class.Hashable Network.AWS.ChimeSDKMessaging.Types.Tag.Tag
instance Control.DeepSeq.NFData Network.AWS.ChimeSDKMessaging.Types.Tag.Tag
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ChimeSDKMessaging.Types.Tag.Tag


module Network.AWS.ChimeSDKMessaging.Types

-- | API version <tt>2021-05-15</tt> of the Amazon Chime SDK Messaging SDK
--   configuration.
defaultService :: Service

-- | The client exceeded its request rate limit.
_ThrottledClientException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request exceeds the resource limit.
_ResourceLimitExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request could not be processed because of conflict in the current
--   state of the resource.
_ConflictException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The client is permanently forbidden from making the request.
_ForbiddenException :: AsError a => Getting (First ServiceError) a ServiceError

-- | One or more of the resources in the request does not exist in the
--   system.
_NotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The service encountered an unexpected error.
_ServiceFailureException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The client is not currently authorized to make the request.
_UnauthorizedClientException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The service is currently unavailable.
_ServiceUnavailableException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The input parameters don't match the service's restrictions.
_BadRequestException :: AsError a => Getting (First ServiceError) a ServiceError
newtype ChannelMembershipType
ChannelMembershipType' :: Text -> ChannelMembershipType
[fromChannelMembershipType] :: ChannelMembershipType -> Text
pattern ChannelMembershipType_DEFAULT :: ChannelMembershipType
pattern ChannelMembershipType_HIDDEN :: ChannelMembershipType
newtype ChannelMessagePersistenceType
ChannelMessagePersistenceType' :: Text -> ChannelMessagePersistenceType
[fromChannelMessagePersistenceType] :: ChannelMessagePersistenceType -> Text
pattern ChannelMessagePersistenceType_NON_PERSISTENT :: ChannelMessagePersistenceType
pattern ChannelMessagePersistenceType_PERSISTENT :: ChannelMessagePersistenceType
newtype ChannelMessageStatus
ChannelMessageStatus' :: Text -> ChannelMessageStatus
[fromChannelMessageStatus] :: ChannelMessageStatus -> Text
pattern ChannelMessageStatus_DENIED :: ChannelMessageStatus
pattern ChannelMessageStatus_FAILED :: ChannelMessageStatus
pattern ChannelMessageStatus_PENDING :: ChannelMessageStatus
pattern ChannelMessageStatus_SENT :: ChannelMessageStatus
newtype ChannelMessageType
ChannelMessageType' :: Text -> ChannelMessageType
[fromChannelMessageType] :: ChannelMessageType -> Text
pattern ChannelMessageType_CONTROL :: ChannelMessageType
pattern ChannelMessageType_STANDARD :: ChannelMessageType
newtype ChannelMode
ChannelMode' :: Text -> ChannelMode
[fromChannelMode] :: ChannelMode -> Text
pattern ChannelMode_RESTRICTED :: ChannelMode
pattern ChannelMode_UNRESTRICTED :: ChannelMode
newtype ChannelPrivacy
ChannelPrivacy' :: Text -> ChannelPrivacy
[fromChannelPrivacy] :: ChannelPrivacy -> Text
pattern ChannelPrivacy_PRIVATE :: ChannelPrivacy
pattern ChannelPrivacy_PUBLIC :: ChannelPrivacy
newtype ErrorCode
ErrorCode' :: Text -> ErrorCode
[fromErrorCode] :: ErrorCode -> Text
pattern ErrorCode_AccessDenied :: ErrorCode
pattern ErrorCode_BadRequest :: ErrorCode
pattern ErrorCode_Conflict :: ErrorCode
pattern ErrorCode_Forbidden :: ErrorCode
pattern ErrorCode_NotFound :: ErrorCode
pattern ErrorCode_PhoneNumberAssociationsExist :: ErrorCode
pattern ErrorCode_PreconditionFailed :: ErrorCode
pattern ErrorCode_ResourceLimitExceeded :: ErrorCode
pattern ErrorCode_ServiceFailure :: ErrorCode
pattern ErrorCode_ServiceUnavailable :: ErrorCode
pattern ErrorCode_Throttled :: ErrorCode
pattern ErrorCode_Throttling :: ErrorCode
pattern ErrorCode_Unauthorized :: ErrorCode
pattern ErrorCode_Unprocessable :: ErrorCode
pattern ErrorCode_VoiceConnectorGroupAssociationsExist :: ErrorCode
newtype FallbackAction
FallbackAction' :: Text -> FallbackAction
[fromFallbackAction] :: FallbackAction -> Text
pattern FallbackAction_ABORT :: FallbackAction
pattern FallbackAction_CONTINUE :: FallbackAction
newtype InvocationType
InvocationType' :: Text -> InvocationType
[fromInvocationType] :: InvocationType -> Text
pattern InvocationType_ASYNC :: InvocationType
newtype SortOrder
SortOrder' :: Text -> SortOrder
[fromSortOrder] :: SortOrder -> Text
pattern SortOrder_ASCENDING :: SortOrder
pattern SortOrder_DESCENDING :: SortOrder

-- | Summary of the membership details of an <tt>AppInstanceUser</tt>.
--   
--   <i>See:</i> <a>newAppInstanceUserMembershipSummary</a> smart
--   constructor.
data AppInstanceUserMembershipSummary
AppInstanceUserMembershipSummary' :: Maybe POSIX -> Maybe ChannelMembershipType -> AppInstanceUserMembershipSummary

-- | The time at which a message was last read.
[$sel:readMarkerTimestamp:AppInstanceUserMembershipSummary'] :: AppInstanceUserMembershipSummary -> Maybe POSIX

-- | The type of <tt>ChannelMembership</tt>.
[$sel:type':AppInstanceUserMembershipSummary'] :: AppInstanceUserMembershipSummary -> Maybe ChannelMembershipType

-- | Create a value of <a>AppInstanceUserMembershipSummary</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:readMarkerTimestamp:AppInstanceUserMembershipSummary'</a>,
--   <a>appInstanceUserMembershipSummary_readMarkerTimestamp</a> - The time
--   at which a message was last read.
--   
--   <a>$sel:type':AppInstanceUserMembershipSummary'</a>,
--   <a>appInstanceUserMembershipSummary_type</a> - The type of
--   <tt>ChannelMembership</tt>.
newAppInstanceUserMembershipSummary :: AppInstanceUserMembershipSummary

-- | The time at which a message was last read.
appInstanceUserMembershipSummary_readMarkerTimestamp :: Lens' AppInstanceUserMembershipSummary (Maybe UTCTime)

-- | The type of <tt>ChannelMembership</tt>.
appInstanceUserMembershipSummary_type :: Lens' AppInstanceUserMembershipSummary (Maybe ChannelMembershipType)

-- | The membership information, including member ARNs, the channel ARN,
--   and membership types.
--   
--   <i>See:</i> <a>newBatchChannelMemberships</a> smart constructor.
data BatchChannelMemberships
BatchChannelMemberships' :: Maybe [Identity] -> Maybe Text -> Maybe ChannelMembershipType -> Maybe Identity -> BatchChannelMemberships

-- | The users successfully added to the request.
[$sel:members:BatchChannelMemberships'] :: BatchChannelMemberships -> Maybe [Identity]

-- | The ARN of the channel to which you're adding users.
[$sel:channelArn:BatchChannelMemberships'] :: BatchChannelMemberships -> Maybe Text

-- | The membership types set for the channel users.
[$sel:type':BatchChannelMemberships'] :: BatchChannelMemberships -> Maybe ChannelMembershipType

-- | The identifier of the member who invited another member.
[$sel:invitedBy:BatchChannelMemberships'] :: BatchChannelMemberships -> Maybe Identity

-- | Create a value of <a>BatchChannelMemberships</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:members:BatchChannelMemberships'</a>,
--   <a>batchChannelMemberships_members</a> - The users successfully added
--   to the request.
--   
--   <a>$sel:channelArn:BatchChannelMemberships'</a>,
--   <a>batchChannelMemberships_channelArn</a> - The ARN of the channel to
--   which you're adding users.
--   
--   <a>$sel:type':BatchChannelMemberships'</a>,
--   <a>batchChannelMemberships_type</a> - The membership types set for the
--   channel users.
--   
--   <a>$sel:invitedBy:BatchChannelMemberships'</a>,
--   <a>batchChannelMemberships_invitedBy</a> - The identifier of the
--   member who invited another member.
newBatchChannelMemberships :: BatchChannelMemberships

-- | The users successfully added to the request.
batchChannelMemberships_members :: Lens' BatchChannelMemberships (Maybe [Identity])

-- | The ARN of the channel to which you're adding users.
batchChannelMemberships_channelArn :: Lens' BatchChannelMemberships (Maybe Text)

-- | The membership types set for the channel users.
batchChannelMemberships_type :: Lens' BatchChannelMemberships (Maybe ChannelMembershipType)

-- | The identifier of the member who invited another member.
batchChannelMemberships_invitedBy :: Lens' BatchChannelMemberships (Maybe Identity)

-- | A list of failed member ARNs, error codes, and error messages.
--   
--   <i>See:</i> <a>newBatchCreateChannelMembershipError</a> smart
--   constructor.
data BatchCreateChannelMembershipError
BatchCreateChannelMembershipError' :: Maybe ErrorCode -> Maybe Text -> Maybe Text -> BatchCreateChannelMembershipError

-- | The error code.
[$sel:errorCode:BatchCreateChannelMembershipError'] :: BatchCreateChannelMembershipError -> Maybe ErrorCode

-- | The ARN of the member that the service couldn't add.
[$sel:memberArn:BatchCreateChannelMembershipError'] :: BatchCreateChannelMembershipError -> Maybe Text

-- | The error message.
[$sel:errorMessage:BatchCreateChannelMembershipError'] :: BatchCreateChannelMembershipError -> Maybe Text

-- | Create a value of <a>BatchCreateChannelMembershipError</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:errorCode:BatchCreateChannelMembershipError'</a>,
--   <a>batchCreateChannelMembershipError_errorCode</a> - The error code.
--   
--   <a>$sel:memberArn:BatchCreateChannelMembershipError'</a>,
--   <a>batchCreateChannelMembershipError_memberArn</a> - The ARN of the
--   member that the service couldn't add.
--   
--   <a>$sel:errorMessage:BatchCreateChannelMembershipError'</a>,
--   <a>batchCreateChannelMembershipError_errorMessage</a> - The error
--   message.
newBatchCreateChannelMembershipError :: BatchCreateChannelMembershipError

-- | The error code.
batchCreateChannelMembershipError_errorCode :: Lens' BatchCreateChannelMembershipError (Maybe ErrorCode)

-- | The ARN of the member that the service couldn't add.
batchCreateChannelMembershipError_memberArn :: Lens' BatchCreateChannelMembershipError (Maybe Text)

-- | The error message.
batchCreateChannelMembershipError_errorMessage :: Lens' BatchCreateChannelMembershipError (Maybe Text)

-- | The details of a channel.
--   
--   <i>See:</i> <a>newChannel</a> smart constructor.
data Channel
Channel' :: Maybe ChannelMode -> Maybe Identity -> Maybe Text -> Maybe ChannelPrivacy -> Maybe Text -> Maybe POSIX -> Maybe (Sensitive Text) -> Maybe (Sensitive Text) -> Maybe POSIX -> Maybe POSIX -> Channel

-- | The mode of the channel.
[$sel:mode:Channel'] :: Channel -> Maybe ChannelMode

-- | The <tt>AppInstanceUser</tt> who created the channel.
[$sel:createdBy:Channel'] :: Channel -> Maybe Identity

-- | The ARN of a channel.
[$sel:channelArn:Channel'] :: Channel -> Maybe Text

-- | The channel's privacy setting.
[$sel:privacy:Channel'] :: Channel -> Maybe ChannelPrivacy

-- | The ARN of the channel flow.
[$sel:channelFlowArn:Channel'] :: Channel -> Maybe Text

-- | The time at which a member sent the last message in the channel.
[$sel:lastMessageTimestamp:Channel'] :: Channel -> Maybe POSIX

-- | The name of a channel.
[$sel:name:Channel'] :: Channel -> Maybe (Sensitive Text)

-- | The channel's metadata.
[$sel:metadata:Channel'] :: Channel -> Maybe (Sensitive Text)

-- | The time at which the <tt>AppInstanceUser</tt> created the channel.
[$sel:createdTimestamp:Channel'] :: Channel -> Maybe POSIX

-- | The time at which a channel was last updated.
[$sel:lastUpdatedTimestamp:Channel'] :: Channel -> Maybe POSIX

-- | Create a value of <a>Channel</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:mode:Channel'</a>, <a>channel_mode</a> - The mode of the
--   channel.
--   
--   <a>$sel:createdBy:Channel'</a>, <a>channel_createdBy</a> - The
--   <tt>AppInstanceUser</tt> who created the channel.
--   
--   <a>$sel:channelArn:Channel'</a>, <a>channel_channelArn</a> - The ARN
--   of a channel.
--   
--   <a>$sel:privacy:Channel'</a>, <a>channel_privacy</a> - The channel's
--   privacy setting.
--   
--   <a>$sel:channelFlowArn:Channel'</a>, <a>channel_channelFlowArn</a> -
--   The ARN of the channel flow.
--   
--   <a>$sel:lastMessageTimestamp:Channel'</a>,
--   <a>channel_lastMessageTimestamp</a> - The time at which a member sent
--   the last message in the channel.
--   
--   <a>$sel:name:Channel'</a>, <a>channel_name</a> - The name of a
--   channel.
--   
--   <a>$sel:metadata:Channel'</a>, <a>channel_metadata</a> - The channel's
--   metadata.
--   
--   <a>$sel:createdTimestamp:Channel'</a>, <a>channel_createdTimestamp</a>
--   - The time at which the <tt>AppInstanceUser</tt> created the channel.
--   
--   <a>$sel:lastUpdatedTimestamp:Channel'</a>,
--   <a>channel_lastUpdatedTimestamp</a> - The time at which a channel was
--   last updated.
newChannel :: Channel

-- | The mode of the channel.
channel_mode :: Lens' Channel (Maybe ChannelMode)

-- | The <tt>AppInstanceUser</tt> who created the channel.
channel_createdBy :: Lens' Channel (Maybe Identity)

-- | The ARN of a channel.
channel_channelArn :: Lens' Channel (Maybe Text)

-- | The channel's privacy setting.
channel_privacy :: Lens' Channel (Maybe ChannelPrivacy)

-- | The ARN of the channel flow.
channel_channelFlowArn :: Lens' Channel (Maybe Text)

-- | The time at which a member sent the last message in the channel.
channel_lastMessageTimestamp :: Lens' Channel (Maybe UTCTime)

-- | The name of a channel.
channel_name :: Lens' Channel (Maybe Text)

-- | The channel's metadata.
channel_metadata :: Lens' Channel (Maybe Text)

-- | The time at which the <tt>AppInstanceUser</tt> created the channel.
channel_createdTimestamp :: Lens' Channel (Maybe UTCTime)

-- | The time at which a channel was last updated.
channel_lastUpdatedTimestamp :: Lens' Channel (Maybe UTCTime)

-- | Summary of details of a channel associated with channel flow.
--   
--   <i>See:</i> <a>newChannelAssociatedWithFlowSummary</a> smart
--   constructor.
data ChannelAssociatedWithFlowSummary
ChannelAssociatedWithFlowSummary' :: Maybe ChannelMode -> Maybe Text -> Maybe ChannelPrivacy -> Maybe (Sensitive Text) -> Maybe (Sensitive Text) -> ChannelAssociatedWithFlowSummary

-- | The mode of the channel.
[$sel:mode:ChannelAssociatedWithFlowSummary'] :: ChannelAssociatedWithFlowSummary -> Maybe ChannelMode

-- | The ARN of the channel.
[$sel:channelArn:ChannelAssociatedWithFlowSummary'] :: ChannelAssociatedWithFlowSummary -> Maybe Text

-- | The channel's privacy setting.
[$sel:privacy:ChannelAssociatedWithFlowSummary'] :: ChannelAssociatedWithFlowSummary -> Maybe ChannelPrivacy

-- | The name of the channel flow.
[$sel:name:ChannelAssociatedWithFlowSummary'] :: ChannelAssociatedWithFlowSummary -> Maybe (Sensitive Text)

-- | The channel's metadata.
[$sel:metadata:ChannelAssociatedWithFlowSummary'] :: ChannelAssociatedWithFlowSummary -> Maybe (Sensitive Text)

-- | Create a value of <a>ChannelAssociatedWithFlowSummary</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:mode:ChannelAssociatedWithFlowSummary'</a>,
--   <a>channelAssociatedWithFlowSummary_mode</a> - The mode of the
--   channel.
--   
--   <a>$sel:channelArn:ChannelAssociatedWithFlowSummary'</a>,
--   <a>channelAssociatedWithFlowSummary_channelArn</a> - The ARN of the
--   channel.
--   
--   <a>$sel:privacy:ChannelAssociatedWithFlowSummary'</a>,
--   <a>channelAssociatedWithFlowSummary_privacy</a> - The channel's
--   privacy setting.
--   
--   <a>$sel:name:ChannelAssociatedWithFlowSummary'</a>,
--   <a>channelAssociatedWithFlowSummary_name</a> - The name of the channel
--   flow.
--   
--   <a>$sel:metadata:ChannelAssociatedWithFlowSummary'</a>,
--   <a>channelAssociatedWithFlowSummary_metadata</a> - The channel's
--   metadata.
newChannelAssociatedWithFlowSummary :: ChannelAssociatedWithFlowSummary

-- | The mode of the channel.
channelAssociatedWithFlowSummary_mode :: Lens' ChannelAssociatedWithFlowSummary (Maybe ChannelMode)

-- | The ARN of the channel.
channelAssociatedWithFlowSummary_channelArn :: Lens' ChannelAssociatedWithFlowSummary (Maybe Text)

-- | The channel's privacy setting.
channelAssociatedWithFlowSummary_privacy :: Lens' ChannelAssociatedWithFlowSummary (Maybe ChannelPrivacy)

-- | The name of the channel flow.
channelAssociatedWithFlowSummary_name :: Lens' ChannelAssociatedWithFlowSummary (Maybe Text)

-- | The channel's metadata.
channelAssociatedWithFlowSummary_metadata :: Lens' ChannelAssociatedWithFlowSummary (Maybe Text)

-- | The details of a channel ban.
--   
--   <i>See:</i> <a>newChannelBan</a> smart constructor.
data ChannelBan
ChannelBan' :: Maybe Identity -> Maybe Text -> Maybe Identity -> Maybe POSIX -> ChannelBan

-- | The <tt>AppInstanceUser</tt> who created the ban.
[$sel:createdBy:ChannelBan'] :: ChannelBan -> Maybe Identity

-- | The ARN of the channel from which a member is being banned.
[$sel:channelArn:ChannelBan'] :: ChannelBan -> Maybe Text

-- | The member being banned from the channel.
[$sel:member:ChannelBan'] :: ChannelBan -> Maybe Identity

-- | The time at which the ban was created.
[$sel:createdTimestamp:ChannelBan'] :: ChannelBan -> Maybe POSIX

-- | Create a value of <a>ChannelBan</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:createdBy:ChannelBan'</a>, <a>channelBan_createdBy</a> - The
--   <tt>AppInstanceUser</tt> who created the ban.
--   
--   <a>$sel:channelArn:ChannelBan'</a>, <a>channelBan_channelArn</a> - The
--   ARN of the channel from which a member is being banned.
--   
--   <a>$sel:member:ChannelBan'</a>, <a>channelBan_member</a> - The member
--   being banned from the channel.
--   
--   <a>$sel:createdTimestamp:ChannelBan'</a>,
--   <a>channelBan_createdTimestamp</a> - The time at which the ban was
--   created.
newChannelBan :: ChannelBan

-- | The <tt>AppInstanceUser</tt> who created the ban.
channelBan_createdBy :: Lens' ChannelBan (Maybe Identity)

-- | The ARN of the channel from which a member is being banned.
channelBan_channelArn :: Lens' ChannelBan (Maybe Text)

-- | The member being banned from the channel.
channelBan_member :: Lens' ChannelBan (Maybe Identity)

-- | The time at which the ban was created.
channelBan_createdTimestamp :: Lens' ChannelBan (Maybe UTCTime)

-- | Summary of the details of a <tt>ChannelBan</tt>.
--   
--   <i>See:</i> <a>newChannelBanSummary</a> smart constructor.
data ChannelBanSummary
ChannelBanSummary' :: Maybe Identity -> ChannelBanSummary

-- | The member being banned from a channel.
[$sel:member:ChannelBanSummary'] :: ChannelBanSummary -> Maybe Identity

-- | Create a value of <a>ChannelBanSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:member:ChannelBanSummary'</a>, <a>channelBanSummary_member</a>
--   - The member being banned from a channel.
newChannelBanSummary :: ChannelBanSummary

-- | The member being banned from a channel.
channelBanSummary_member :: Lens' ChannelBanSummary (Maybe Identity)

-- | The details of a channel flow.
--   
--   <i>See:</i> <a>newChannelFlow</a> smart constructor.
data ChannelFlow
ChannelFlow' :: Maybe (NonEmpty Processor) -> Maybe Text -> Maybe (Sensitive Text) -> Maybe POSIX -> Maybe POSIX -> ChannelFlow

-- | Information about the processor Lambda functions.
[$sel:processors:ChannelFlow'] :: ChannelFlow -> Maybe (NonEmpty Processor)

-- | The ARN of the channel flow.
[$sel:channelFlowArn:ChannelFlow'] :: ChannelFlow -> Maybe Text

-- | The name of the channel flow.
[$sel:name:ChannelFlow'] :: ChannelFlow -> Maybe (Sensitive Text)

-- | The time at which the channel flow was created.
[$sel:createdTimestamp:ChannelFlow'] :: ChannelFlow -> Maybe POSIX

-- | The time at which a channel flow was updated.
[$sel:lastUpdatedTimestamp:ChannelFlow'] :: ChannelFlow -> Maybe POSIX

-- | Create a value of <a>ChannelFlow</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:processors:ChannelFlow'</a>, <a>channelFlow_processors</a> -
--   Information about the processor Lambda functions.
--   
--   <a>$sel:channelFlowArn:ChannelFlow'</a>,
--   <a>channelFlow_channelFlowArn</a> - The ARN of the channel flow.
--   
--   <a>$sel:name:ChannelFlow'</a>, <a>channelFlow_name</a> - The name of
--   the channel flow.
--   
--   <a>$sel:createdTimestamp:ChannelFlow'</a>,
--   <a>channelFlow_createdTimestamp</a> - The time at which the channel
--   flow was created.
--   
--   <a>$sel:lastUpdatedTimestamp:ChannelFlow'</a>,
--   <a>channelFlow_lastUpdatedTimestamp</a> - The time at which a channel
--   flow was updated.
newChannelFlow :: ChannelFlow

-- | Information about the processor Lambda functions.
channelFlow_processors :: Lens' ChannelFlow (Maybe (NonEmpty Processor))

-- | The ARN of the channel flow.
channelFlow_channelFlowArn :: Lens' ChannelFlow (Maybe Text)

-- | The name of the channel flow.
channelFlow_name :: Lens' ChannelFlow (Maybe Text)

-- | The time at which the channel flow was created.
channelFlow_createdTimestamp :: Lens' ChannelFlow (Maybe UTCTime)

-- | The time at which a channel flow was updated.
channelFlow_lastUpdatedTimestamp :: Lens' ChannelFlow (Maybe UTCTime)

-- | Summary of details of a channel flow.
--   
--   <i>See:</i> <a>newChannelFlowSummary</a> smart constructor.
data ChannelFlowSummary
ChannelFlowSummary' :: Maybe (NonEmpty Processor) -> Maybe Text -> Maybe (Sensitive Text) -> ChannelFlowSummary

-- | Information about the processor Lambda functions.
[$sel:processors:ChannelFlowSummary'] :: ChannelFlowSummary -> Maybe (NonEmpty Processor)

-- | The ARN of the channel flow.
[$sel:channelFlowArn:ChannelFlowSummary'] :: ChannelFlowSummary -> Maybe Text

-- | The name of the channel flow.
[$sel:name:ChannelFlowSummary'] :: ChannelFlowSummary -> Maybe (Sensitive Text)

-- | Create a value of <a>ChannelFlowSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:processors:ChannelFlowSummary'</a>,
--   <a>channelFlowSummary_processors</a> - Information about the processor
--   Lambda functions.
--   
--   <a>$sel:channelFlowArn:ChannelFlowSummary'</a>,
--   <a>channelFlowSummary_channelFlowArn</a> - The ARN of the channel
--   flow.
--   
--   <a>$sel:name:ChannelFlowSummary'</a>, <a>channelFlowSummary_name</a> -
--   The name of the channel flow.
newChannelFlowSummary :: ChannelFlowSummary

-- | Information about the processor Lambda functions.
channelFlowSummary_processors :: Lens' ChannelFlowSummary (Maybe (NonEmpty Processor))

-- | The ARN of the channel flow.
channelFlowSummary_channelFlowArn :: Lens' ChannelFlowSummary (Maybe Text)

-- | The name of the channel flow.
channelFlowSummary_name :: Lens' ChannelFlowSummary (Maybe Text)

-- | The details of a channel member.
--   
--   <i>See:</i> <a>newChannelMembership</a> smart constructor.
data ChannelMembership
ChannelMembership' :: Maybe Text -> Maybe Identity -> Maybe ChannelMembershipType -> Maybe Identity -> Maybe POSIX -> Maybe POSIX -> ChannelMembership

-- | The ARN of the member's channel.
[$sel:channelArn:ChannelMembership'] :: ChannelMembership -> Maybe Text

-- | The data of the channel member.
[$sel:member:ChannelMembership'] :: ChannelMembership -> Maybe Identity

-- | The membership type set for the channel member.
[$sel:type':ChannelMembership'] :: ChannelMembership -> Maybe ChannelMembershipType

-- | The identifier of the member who invited another member.
[$sel:invitedBy:ChannelMembership'] :: ChannelMembership -> Maybe Identity

-- | The time at which the channel membership was created.
[$sel:createdTimestamp:ChannelMembership'] :: ChannelMembership -> Maybe POSIX

-- | The time at which a channel membership was last updated.
[$sel:lastUpdatedTimestamp:ChannelMembership'] :: ChannelMembership -> Maybe POSIX

-- | Create a value of <a>ChannelMembership</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:channelArn:ChannelMembership'</a>,
--   <a>channelMembership_channelArn</a> - The ARN of the member's channel.
--   
--   <a>$sel:member:ChannelMembership'</a>, <a>channelMembership_member</a>
--   - The data of the channel member.
--   
--   <a>$sel:type':ChannelMembership'</a>, <a>channelMembership_type</a> -
--   The membership type set for the channel member.
--   
--   <a>$sel:invitedBy:ChannelMembership'</a>,
--   <a>channelMembership_invitedBy</a> - The identifier of the member who
--   invited another member.
--   
--   <a>$sel:createdTimestamp:ChannelMembership'</a>,
--   <a>channelMembership_createdTimestamp</a> - The time at which the
--   channel membership was created.
--   
--   <a>$sel:lastUpdatedTimestamp:ChannelMembership'</a>,
--   <a>channelMembership_lastUpdatedTimestamp</a> - The time at which a
--   channel membership was last updated.
newChannelMembership :: ChannelMembership

-- | The ARN of the member's channel.
channelMembership_channelArn :: Lens' ChannelMembership (Maybe Text)

-- | The data of the channel member.
channelMembership_member :: Lens' ChannelMembership (Maybe Identity)

-- | The membership type set for the channel member.
channelMembership_type :: Lens' ChannelMembership (Maybe ChannelMembershipType)

-- | The identifier of the member who invited another member.
channelMembership_invitedBy :: Lens' ChannelMembership (Maybe Identity)

-- | The time at which the channel membership was created.
channelMembership_createdTimestamp :: Lens' ChannelMembership (Maybe UTCTime)

-- | The time at which a channel membership was last updated.
channelMembership_lastUpdatedTimestamp :: Lens' ChannelMembership (Maybe UTCTime)

-- | Summary of the channel membership details of an
--   <tt>AppInstanceUser</tt>.
--   
--   <i>See:</i> <a>newChannelMembershipForAppInstanceUserSummary</a> smart
--   constructor.
data ChannelMembershipForAppInstanceUserSummary
ChannelMembershipForAppInstanceUserSummary' :: Maybe AppInstanceUserMembershipSummary -> Maybe ChannelSummary -> ChannelMembershipForAppInstanceUserSummary

-- | Returns the channel membership data for an <tt>AppInstance</tt>.
[$sel:appInstanceUserMembershipSummary:ChannelMembershipForAppInstanceUserSummary'] :: ChannelMembershipForAppInstanceUserSummary -> Maybe AppInstanceUserMembershipSummary

-- | Returns the channel data for an <tt>AppInstance</tt>.
[$sel:channelSummary:ChannelMembershipForAppInstanceUserSummary'] :: ChannelMembershipForAppInstanceUserSummary -> Maybe ChannelSummary

-- | Create a value of <a>ChannelMembershipForAppInstanceUserSummary</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:appInstanceUserMembershipSummary:ChannelMembershipForAppInstanceUserSummary'</a>,
--   <a>channelMembershipForAppInstanceUserSummary_appInstanceUserMembershipSummary</a>
--   - Returns the channel membership data for an <tt>AppInstance</tt>.
--   
--   
--   <a>$sel:channelSummary:ChannelMembershipForAppInstanceUserSummary'</a>,
--   <a>channelMembershipForAppInstanceUserSummary_channelSummary</a> -
--   Returns the channel data for an <tt>AppInstance</tt>.
newChannelMembershipForAppInstanceUserSummary :: ChannelMembershipForAppInstanceUserSummary

-- | Returns the channel membership data for an <tt>AppInstance</tt>.
channelMembershipForAppInstanceUserSummary_appInstanceUserMembershipSummary :: Lens' ChannelMembershipForAppInstanceUserSummary (Maybe AppInstanceUserMembershipSummary)

-- | Returns the channel data for an <tt>AppInstance</tt>.
channelMembershipForAppInstanceUserSummary_channelSummary :: Lens' ChannelMembershipForAppInstanceUserSummary (Maybe ChannelSummary)

-- | Summary of the details of a <tt>ChannelMembership</tt>.
--   
--   <i>See:</i> <a>newChannelMembershipSummary</a> smart constructor.
data ChannelMembershipSummary
ChannelMembershipSummary' :: Maybe Identity -> ChannelMembershipSummary

-- | A member's summary data.
[$sel:member:ChannelMembershipSummary'] :: ChannelMembershipSummary -> Maybe Identity

-- | Create a value of <a>ChannelMembershipSummary</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:member:ChannelMembershipSummary'</a>,
--   <a>channelMembershipSummary_member</a> - A member's summary data.
newChannelMembershipSummary :: ChannelMembershipSummary

-- | A member's summary data.
channelMembershipSummary_member :: Lens' ChannelMembershipSummary (Maybe Identity)

-- | The details of a message in a channel.
--   
--   <i>See:</i> <a>newChannelMessage</a> smart constructor.
data ChannelMessage
ChannelMessage' :: Maybe ChannelMessageStatusStructure -> Maybe Identity -> Maybe Text -> Maybe (Sensitive Text) -> Maybe Bool -> Maybe ChannelMessagePersistenceType -> Maybe (Sensitive Text) -> Maybe ChannelMessageType -> Maybe POSIX -> Maybe Text -> Maybe POSIX -> Maybe POSIX -> ChannelMessage

-- | The status of the channel message.
[$sel:status:ChannelMessage'] :: ChannelMessage -> Maybe ChannelMessageStatusStructure

-- | The message sender.
[$sel:sender:ChannelMessage'] :: ChannelMessage -> Maybe Identity

-- | The ARN of the channel.
[$sel:channelArn:ChannelMessage'] :: ChannelMessage -> Maybe Text

-- | The message content.
[$sel:content:ChannelMessage'] :: ChannelMessage -> Maybe (Sensitive Text)

-- | Hides the content of a message.
[$sel:redacted:ChannelMessage'] :: ChannelMessage -> Maybe Bool

-- | The persistence setting for a channel message.
[$sel:persistence:ChannelMessage'] :: ChannelMessage -> Maybe ChannelMessagePersistenceType

-- | The message metadata.
[$sel:metadata:ChannelMessage'] :: ChannelMessage -> Maybe (Sensitive Text)

-- | The message type.
[$sel:type':ChannelMessage'] :: ChannelMessage -> Maybe ChannelMessageType

-- | The time at which the message was created.
[$sel:createdTimestamp:ChannelMessage'] :: ChannelMessage -> Maybe POSIX

-- | The ID of a message.
[$sel:messageId:ChannelMessage'] :: ChannelMessage -> Maybe Text

-- | The time at which a message was updated.
[$sel:lastUpdatedTimestamp:ChannelMessage'] :: ChannelMessage -> Maybe POSIX

-- | The time at which a message was edited.
[$sel:lastEditedTimestamp:ChannelMessage'] :: ChannelMessage -> Maybe POSIX

-- | Create a value of <a>ChannelMessage</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:ChannelMessage'</a>, <a>channelMessage_status</a> - The
--   status of the channel message.
--   
--   <a>$sel:sender:ChannelMessage'</a>, <a>channelMessage_sender</a> - The
--   message sender.
--   
--   <a>$sel:channelArn:ChannelMessage'</a>,
--   <a>channelMessage_channelArn</a> - The ARN of the channel.
--   
--   <a>$sel:content:ChannelMessage'</a>, <a>channelMessage_content</a> -
--   The message content.
--   
--   <a>$sel:redacted:ChannelMessage'</a>, <a>channelMessage_redacted</a> -
--   Hides the content of a message.
--   
--   <a>$sel:persistence:ChannelMessage'</a>,
--   <a>channelMessage_persistence</a> - The persistence setting for a
--   channel message.
--   
--   <a>$sel:metadata:ChannelMessage'</a>, <a>channelMessage_metadata</a> -
--   The message metadata.
--   
--   <a>$sel:type':ChannelMessage'</a>, <a>channelMessage_type</a> - The
--   message type.
--   
--   <a>$sel:createdTimestamp:ChannelMessage'</a>,
--   <a>channelMessage_createdTimestamp</a> - The time at which the message
--   was created.
--   
--   <a>$sel:messageId:ChannelMessage'</a>, <a>channelMessage_messageId</a>
--   - The ID of a message.
--   
--   <a>$sel:lastUpdatedTimestamp:ChannelMessage'</a>,
--   <a>channelMessage_lastUpdatedTimestamp</a> - The time at which a
--   message was updated.
--   
--   <a>$sel:lastEditedTimestamp:ChannelMessage'</a>,
--   <a>channelMessage_lastEditedTimestamp</a> - The time at which a
--   message was edited.
newChannelMessage :: ChannelMessage

-- | The status of the channel message.
channelMessage_status :: Lens' ChannelMessage (Maybe ChannelMessageStatusStructure)

-- | The message sender.
channelMessage_sender :: Lens' ChannelMessage (Maybe Identity)

-- | The ARN of the channel.
channelMessage_channelArn :: Lens' ChannelMessage (Maybe Text)

-- | The message content.
channelMessage_content :: Lens' ChannelMessage (Maybe Text)

-- | Hides the content of a message.
channelMessage_redacted :: Lens' ChannelMessage (Maybe Bool)

-- | The persistence setting for a channel message.
channelMessage_persistence :: Lens' ChannelMessage (Maybe ChannelMessagePersistenceType)

-- | The message metadata.
channelMessage_metadata :: Lens' ChannelMessage (Maybe Text)

-- | The message type.
channelMessage_type :: Lens' ChannelMessage (Maybe ChannelMessageType)

-- | The time at which the message was created.
channelMessage_createdTimestamp :: Lens' ChannelMessage (Maybe UTCTime)

-- | The ID of a message.
channelMessage_messageId :: Lens' ChannelMessage (Maybe Text)

-- | The time at which a message was updated.
channelMessage_lastUpdatedTimestamp :: Lens' ChannelMessage (Maybe UTCTime)

-- | The time at which a message was edited.
channelMessage_lastEditedTimestamp :: Lens' ChannelMessage (Maybe UTCTime)

-- | Stores information about a callback.
--   
--   <i>See:</i> <a>newChannelMessageCallback</a> smart constructor.
data ChannelMessageCallback
ChannelMessageCallback' :: Maybe (Sensitive Text) -> Maybe (Sensitive Text) -> Text -> ChannelMessageCallback

-- | The message content.
[$sel:content:ChannelMessageCallback'] :: ChannelMessageCallback -> Maybe (Sensitive Text)

-- | The message metadata.
[$sel:metadata:ChannelMessageCallback'] :: ChannelMessageCallback -> Maybe (Sensitive Text)

-- | The message ID.
[$sel:messageId:ChannelMessageCallback'] :: ChannelMessageCallback -> Text

-- | Create a value of <a>ChannelMessageCallback</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:content:ChannelMessageCallback'</a>,
--   <a>channelMessageCallback_content</a> - The message content.
--   
--   <a>$sel:metadata:ChannelMessageCallback'</a>,
--   <a>channelMessageCallback_metadata</a> - The message metadata.
--   
--   <a>$sel:messageId:ChannelMessageCallback'</a>,
--   <a>channelMessageCallback_messageId</a> - The message ID.
newChannelMessageCallback :: Text -> ChannelMessageCallback

-- | The message content.
channelMessageCallback_content :: Lens' ChannelMessageCallback (Maybe Text)

-- | The message metadata.
channelMessageCallback_metadata :: Lens' ChannelMessageCallback (Maybe Text)

-- | The message ID.
channelMessageCallback_messageId :: Lens' ChannelMessageCallback Text

-- | Stores information about a message status.
--   
--   <i>See:</i> <a>newChannelMessageStatusStructure</a> smart constructor.
data ChannelMessageStatusStructure
ChannelMessageStatusStructure' :: Maybe ChannelMessageStatus -> Maybe Text -> ChannelMessageStatusStructure

-- | The message status value.
[$sel:value:ChannelMessageStatusStructure'] :: ChannelMessageStatusStructure -> Maybe ChannelMessageStatus

-- | Contains more details about the messasge status.
[$sel:detail:ChannelMessageStatusStructure'] :: ChannelMessageStatusStructure -> Maybe Text

-- | Create a value of <a>ChannelMessageStatusStructure</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:value:ChannelMessageStatusStructure'</a>,
--   <a>channelMessageStatusStructure_value</a> - The message status value.
--   
--   <a>$sel:detail:ChannelMessageStatusStructure'</a>,
--   <a>channelMessageStatusStructure_detail</a> - Contains more details
--   about the messasge status.
newChannelMessageStatusStructure :: ChannelMessageStatusStructure

-- | The message status value.
channelMessageStatusStructure_value :: Lens' ChannelMessageStatusStructure (Maybe ChannelMessageStatus)

-- | Contains more details about the messasge status.
channelMessageStatusStructure_detail :: Lens' ChannelMessageStatusStructure (Maybe Text)

-- | Summary of the messages in a <tt>Channel</tt>.
--   
--   <i>See:</i> <a>newChannelMessageSummary</a> smart constructor.
data ChannelMessageSummary
ChannelMessageSummary' :: Maybe ChannelMessageStatusStructure -> Maybe Identity -> Maybe (Sensitive Text) -> Maybe Bool -> Maybe (Sensitive Text) -> Maybe ChannelMessageType -> Maybe POSIX -> Maybe Text -> Maybe POSIX -> Maybe POSIX -> ChannelMessageSummary

-- | The message status. The status value is <tt>SENT</tt> for messages
--   sent to a channel without a channel flow. For channels associated with
--   channel flow, the value determines the processing stage.
[$sel:status:ChannelMessageSummary'] :: ChannelMessageSummary -> Maybe ChannelMessageStatusStructure

-- | The message sender.
[$sel:sender:ChannelMessageSummary'] :: ChannelMessageSummary -> Maybe Identity

-- | The content of the message.
[$sel:content:ChannelMessageSummary'] :: ChannelMessageSummary -> Maybe (Sensitive Text)

-- | Indicates whether a message was redacted.
[$sel:redacted:ChannelMessageSummary'] :: ChannelMessageSummary -> Maybe Bool

-- | The metadata of the message.
[$sel:metadata:ChannelMessageSummary'] :: ChannelMessageSummary -> Maybe (Sensitive Text)

-- | The type of message.
[$sel:type':ChannelMessageSummary'] :: ChannelMessageSummary -> Maybe ChannelMessageType

-- | The time at which the message summary was created.
[$sel:createdTimestamp:ChannelMessageSummary'] :: ChannelMessageSummary -> Maybe POSIX

-- | The ID of the message.
[$sel:messageId:ChannelMessageSummary'] :: ChannelMessageSummary -> Maybe Text

-- | The time at which a message was last updated.
[$sel:lastUpdatedTimestamp:ChannelMessageSummary'] :: ChannelMessageSummary -> Maybe POSIX

-- | The time at which a message was last edited.
[$sel:lastEditedTimestamp:ChannelMessageSummary'] :: ChannelMessageSummary -> Maybe POSIX

-- | Create a value of <a>ChannelMessageSummary</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:ChannelMessageSummary'</a>,
--   <a>channelMessageSummary_status</a> - The message status. The status
--   value is <tt>SENT</tt> for messages sent to a channel without a
--   channel flow. For channels associated with channel flow, the value
--   determines the processing stage.
--   
--   <a>$sel:sender:ChannelMessageSummary'</a>,
--   <a>channelMessageSummary_sender</a> - The message sender.
--   
--   <a>$sel:content:ChannelMessageSummary'</a>,
--   <a>channelMessageSummary_content</a> - The content of the message.
--   
--   <a>$sel:redacted:ChannelMessageSummary'</a>,
--   <a>channelMessageSummary_redacted</a> - Indicates whether a message
--   was redacted.
--   
--   <a>$sel:metadata:ChannelMessageSummary'</a>,
--   <a>channelMessageSummary_metadata</a> - The metadata of the message.
--   
--   <a>$sel:type':ChannelMessageSummary'</a>,
--   <a>channelMessageSummary_type</a> - The type of message.
--   
--   <a>$sel:createdTimestamp:ChannelMessageSummary'</a>,
--   <a>channelMessageSummary_createdTimestamp</a> - The time at which the
--   message summary was created.
--   
--   <a>$sel:messageId:ChannelMessageSummary'</a>,
--   <a>channelMessageSummary_messageId</a> - The ID of the message.
--   
--   <a>$sel:lastUpdatedTimestamp:ChannelMessageSummary'</a>,
--   <a>channelMessageSummary_lastUpdatedTimestamp</a> - The time at which
--   a message was last updated.
--   
--   <a>$sel:lastEditedTimestamp:ChannelMessageSummary'</a>,
--   <a>channelMessageSummary_lastEditedTimestamp</a> - The time at which a
--   message was last edited.
newChannelMessageSummary :: ChannelMessageSummary

-- | The message status. The status value is <tt>SENT</tt> for messages
--   sent to a channel without a channel flow. For channels associated with
--   channel flow, the value determines the processing stage.
channelMessageSummary_status :: Lens' ChannelMessageSummary (Maybe ChannelMessageStatusStructure)

-- | The message sender.
channelMessageSummary_sender :: Lens' ChannelMessageSummary (Maybe Identity)

-- | The content of the message.
channelMessageSummary_content :: Lens' ChannelMessageSummary (Maybe Text)

-- | Indicates whether a message was redacted.
channelMessageSummary_redacted :: Lens' ChannelMessageSummary (Maybe Bool)

-- | The metadata of the message.
channelMessageSummary_metadata :: Lens' ChannelMessageSummary (Maybe Text)

-- | The type of message.
channelMessageSummary_type :: Lens' ChannelMessageSummary (Maybe ChannelMessageType)

-- | The time at which the message summary was created.
channelMessageSummary_createdTimestamp :: Lens' ChannelMessageSummary (Maybe UTCTime)

-- | The ID of the message.
channelMessageSummary_messageId :: Lens' ChannelMessageSummary (Maybe Text)

-- | The time at which a message was last updated.
channelMessageSummary_lastUpdatedTimestamp :: Lens' ChannelMessageSummary (Maybe UTCTime)

-- | The time at which a message was last edited.
channelMessageSummary_lastEditedTimestamp :: Lens' ChannelMessageSummary (Maybe UTCTime)

-- | Summary of the details of a moderated channel.
--   
--   <i>See:</i> <a>newChannelModeratedByAppInstanceUserSummary</a> smart
--   constructor.
data ChannelModeratedByAppInstanceUserSummary
ChannelModeratedByAppInstanceUserSummary' :: Maybe ChannelSummary -> ChannelModeratedByAppInstanceUserSummary

-- | Summary of the details of a <tt>Channel</tt>.
[$sel:channelSummary:ChannelModeratedByAppInstanceUserSummary'] :: ChannelModeratedByAppInstanceUserSummary -> Maybe ChannelSummary

-- | Create a value of <a>ChannelModeratedByAppInstanceUserSummary</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:channelSummary:ChannelModeratedByAppInstanceUserSummary'</a>,
--   <a>channelModeratedByAppInstanceUserSummary_channelSummary</a> -
--   Summary of the details of a <tt>Channel</tt>.
newChannelModeratedByAppInstanceUserSummary :: ChannelModeratedByAppInstanceUserSummary

-- | Summary of the details of a <tt>Channel</tt>.
channelModeratedByAppInstanceUserSummary_channelSummary :: Lens' ChannelModeratedByAppInstanceUserSummary (Maybe ChannelSummary)

-- | The details of a channel moderator.
--   
--   <i>See:</i> <a>newChannelModerator</a> smart constructor.
data ChannelModerator
ChannelModerator' :: Maybe Identity -> Maybe Text -> Maybe POSIX -> Maybe Identity -> ChannelModerator

-- | The <tt>AppInstanceUser</tt> who created the moderator.
[$sel:createdBy:ChannelModerator'] :: ChannelModerator -> Maybe Identity

-- | The ARN of the moderator's channel.
[$sel:channelArn:ChannelModerator'] :: ChannelModerator -> Maybe Text

-- | The time at which the moderator was created.
[$sel:createdTimestamp:ChannelModerator'] :: ChannelModerator -> Maybe POSIX

-- | The moderator's data.
[$sel:moderator:ChannelModerator'] :: ChannelModerator -> Maybe Identity

-- | Create a value of <a>ChannelModerator</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:createdBy:ChannelModerator'</a>,
--   <a>channelModerator_createdBy</a> - The <tt>AppInstanceUser</tt> who
--   created the moderator.
--   
--   <a>$sel:channelArn:ChannelModerator'</a>,
--   <a>channelModerator_channelArn</a> - The ARN of the moderator's
--   channel.
--   
--   <a>$sel:createdTimestamp:ChannelModerator'</a>,
--   <a>channelModerator_createdTimestamp</a> - The time at which the
--   moderator was created.
--   
--   <a>$sel:moderator:ChannelModerator'</a>,
--   <a>channelModerator_moderator</a> - The moderator's data.
newChannelModerator :: ChannelModerator

-- | The <tt>AppInstanceUser</tt> who created the moderator.
channelModerator_createdBy :: Lens' ChannelModerator (Maybe Identity)

-- | The ARN of the moderator's channel.
channelModerator_channelArn :: Lens' ChannelModerator (Maybe Text)

-- | The time at which the moderator was created.
channelModerator_createdTimestamp :: Lens' ChannelModerator (Maybe UTCTime)

-- | The moderator's data.
channelModerator_moderator :: Lens' ChannelModerator (Maybe Identity)

-- | Summary of the details of a <tt>ChannelModerator</tt>.
--   
--   <i>See:</i> <a>newChannelModeratorSummary</a> smart constructor.
data ChannelModeratorSummary
ChannelModeratorSummary' :: Maybe Identity -> ChannelModeratorSummary

-- | The data for a moderator.
[$sel:moderator:ChannelModeratorSummary'] :: ChannelModeratorSummary -> Maybe Identity

-- | Create a value of <a>ChannelModeratorSummary</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:moderator:ChannelModeratorSummary'</a>,
--   <a>channelModeratorSummary_moderator</a> - The data for a moderator.
newChannelModeratorSummary :: ChannelModeratorSummary

-- | The data for a moderator.
channelModeratorSummary_moderator :: Lens' ChannelModeratorSummary (Maybe Identity)

-- | Summary of the details of a <tt>Channel</tt>.
--   
--   <i>See:</i> <a>newChannelSummary</a> smart constructor.
data ChannelSummary
ChannelSummary' :: Maybe ChannelMode -> Maybe Text -> Maybe ChannelPrivacy -> Maybe POSIX -> Maybe (Sensitive Text) -> Maybe (Sensitive Text) -> ChannelSummary

-- | The mode of the channel.
[$sel:mode:ChannelSummary'] :: ChannelSummary -> Maybe ChannelMode

-- | The ARN of the channel.
[$sel:channelArn:ChannelSummary'] :: ChannelSummary -> Maybe Text

-- | The privacy setting of the channel.
[$sel:privacy:ChannelSummary'] :: ChannelSummary -> Maybe ChannelPrivacy

-- | The time at which the last message in a channel was sent.
[$sel:lastMessageTimestamp:ChannelSummary'] :: ChannelSummary -> Maybe POSIX

-- | The name of the channel.
[$sel:name:ChannelSummary'] :: ChannelSummary -> Maybe (Sensitive Text)

-- | The metadata of the channel.
[$sel:metadata:ChannelSummary'] :: ChannelSummary -> Maybe (Sensitive Text)

-- | Create a value of <a>ChannelSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:mode:ChannelSummary'</a>, <a>channelSummary_mode</a> - The
--   mode of the channel.
--   
--   <a>$sel:channelArn:ChannelSummary'</a>,
--   <a>channelSummary_channelArn</a> - The ARN of the channel.
--   
--   <a>$sel:privacy:ChannelSummary'</a>, <a>channelSummary_privacy</a> -
--   The privacy setting of the channel.
--   
--   <a>$sel:lastMessageTimestamp:ChannelSummary'</a>,
--   <a>channelSummary_lastMessageTimestamp</a> - The time at which the
--   last message in a channel was sent.
--   
--   <a>$sel:name:ChannelSummary'</a>, <a>channelSummary_name</a> - The
--   name of the channel.
--   
--   <a>$sel:metadata:ChannelSummary'</a>, <a>channelSummary_metadata</a> -
--   The metadata of the channel.
newChannelSummary :: ChannelSummary

-- | The mode of the channel.
channelSummary_mode :: Lens' ChannelSummary (Maybe ChannelMode)

-- | The ARN of the channel.
channelSummary_channelArn :: Lens' ChannelSummary (Maybe Text)

-- | The privacy setting of the channel.
channelSummary_privacy :: Lens' ChannelSummary (Maybe ChannelPrivacy)

-- | The time at which the last message in a channel was sent.
channelSummary_lastMessageTimestamp :: Lens' ChannelSummary (Maybe UTCTime)

-- | The name of the channel.
channelSummary_name :: Lens' ChannelSummary (Maybe Text)

-- | The metadata of the channel.
channelSummary_metadata :: Lens' ChannelSummary (Maybe Text)

-- | The details of a user.
--   
--   <i>See:</i> <a>newIdentity</a> smart constructor.
data Identity
Identity' :: Maybe Text -> Maybe (Sensitive Text) -> Identity

-- | The ARN in an Identity.
[$sel:arn:Identity'] :: Identity -> Maybe Text

-- | The name in an Identity.
[$sel:name:Identity'] :: Identity -> Maybe (Sensitive Text)

-- | Create a value of <a>Identity</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:Identity'</a>, <a>identity_arn</a> - The ARN in an
--   Identity.
--   
--   <a>$sel:name:Identity'</a>, <a>identity_name</a> - The name in an
--   Identity.
newIdentity :: Identity

-- | The ARN in an Identity.
identity_arn :: Lens' Identity (Maybe Text)

-- | The name in an Identity.
identity_name :: Lens' Identity (Maybe Text)

-- | Stores metadata about a Lambda processor.
--   
--   <i>See:</i> <a>newLambdaConfiguration</a> smart constructor.
data LambdaConfiguration
LambdaConfiguration' :: Text -> InvocationType -> LambdaConfiguration

-- | The ARN of the Lambda message processing function.
[$sel:resourceArn:LambdaConfiguration'] :: LambdaConfiguration -> Text

-- | Controls how the Lambda function is invoked.
[$sel:invocationType:LambdaConfiguration'] :: LambdaConfiguration -> InvocationType

-- | Create a value of <a>LambdaConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:LambdaConfiguration'</a>,
--   <a>lambdaConfiguration_resourceArn</a> - The ARN of the Lambda message
--   processing function.
--   
--   <a>$sel:invocationType:LambdaConfiguration'</a>,
--   <a>lambdaConfiguration_invocationType</a> - Controls how the Lambda
--   function is invoked.
newLambdaConfiguration :: Text -> InvocationType -> LambdaConfiguration

-- | The ARN of the Lambda message processing function.
lambdaConfiguration_resourceArn :: Lens' LambdaConfiguration Text

-- | Controls how the Lambda function is invoked.
lambdaConfiguration_invocationType :: Lens' LambdaConfiguration InvocationType

-- | The websocket endpoint used to connect to Amazon Chime SDK messaging.
--   
--   <i>See:</i> <a>newMessagingSessionEndpoint</a> smart constructor.
data MessagingSessionEndpoint
MessagingSessionEndpoint' :: Maybe Text -> MessagingSessionEndpoint

-- | The endpoint to which you establish a websocket connection.
[$sel:url:MessagingSessionEndpoint'] :: MessagingSessionEndpoint -> Maybe Text

-- | Create a value of <a>MessagingSessionEndpoint</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:url:MessagingSessionEndpoint'</a>,
--   <a>messagingSessionEndpoint_url</a> - The endpoint to which you
--   establish a websocket connection.
newMessagingSessionEndpoint :: MessagingSessionEndpoint

-- | The endpoint to which you establish a websocket connection.
messagingSessionEndpoint_url :: Lens' MessagingSessionEndpoint (Maybe Text)

-- | The information about a processor in a channel flow.
--   
--   <i>See:</i> <a>newProcessor</a> smart constructor.
data Processor
Processor' :: Sensitive Text -> ProcessorConfiguration -> Natural -> FallbackAction -> Processor

-- | The name of the channel flow.
[$sel:name:Processor'] :: Processor -> Sensitive Text

-- | The information about the type of processor and its identifier.
[$sel:configuration:Processor'] :: Processor -> ProcessorConfiguration

-- | The sequence in which processors run. If you have multiple processors
--   in a channel flow, message processing goes through each processor in
--   the sequence. The value determines the sequence. At this point, we
--   support only 1 processor within a flow.
[$sel:executionOrder:Processor'] :: Processor -> Natural

-- | Determines whether to continue or stop processing if communication
--   with processor fails. If the last processor in a channel flow sequence
--   has a fallback action of CONTINUE, and communication with the
--   processor fails, the message is considered processed and sent to the
--   recipients in the channel.
[$sel:fallbackAction:Processor'] :: Processor -> FallbackAction

-- | Create a value of <a>Processor</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:Processor'</a>, <a>processor_name</a> - The name of the
--   channel flow.
--   
--   <a>$sel:configuration:Processor'</a>, <a>processor_configuration</a> -
--   The information about the type of processor and its identifier.
--   
--   <a>$sel:executionOrder:Processor'</a>, <a>processor_executionOrder</a>
--   - The sequence in which processors run. If you have multiple
--   processors in a channel flow, message processing goes through each
--   processor in the sequence. The value determines the sequence. At this
--   point, we support only 1 processor within a flow.
--   
--   <a>$sel:fallbackAction:Processor'</a>, <a>processor_fallbackAction</a>
--   - Determines whether to continue or stop processing if communication
--   with processor fails. If the last processor in a channel flow sequence
--   has a fallback action of CONTINUE, and communication with the
--   processor fails, the message is considered processed and sent to the
--   recipients in the channel.
newProcessor :: Text -> ProcessorConfiguration -> Natural -> FallbackAction -> Processor

-- | The name of the channel flow.
processor_name :: Lens' Processor Text

-- | The information about the type of processor and its identifier.
processor_configuration :: Lens' Processor ProcessorConfiguration

-- | The sequence in which processors run. If you have multiple processors
--   in a channel flow, message processing goes through each processor in
--   the sequence. The value determines the sequence. At this point, we
--   support only 1 processor within a flow.
processor_executionOrder :: Lens' Processor Natural

-- | Determines whether to continue or stop processing if communication
--   with processor fails. If the last processor in a channel flow sequence
--   has a fallback action of CONTINUE, and communication with the
--   processor fails, the message is considered processed and sent to the
--   recipients in the channel.
processor_fallbackAction :: Lens' Processor FallbackAction

-- | A processor's metadata.
--   
--   <i>See:</i> <a>newProcessorConfiguration</a> smart constructor.
data ProcessorConfiguration
ProcessorConfiguration' :: LambdaConfiguration -> ProcessorConfiguration

-- | Indicates that the processor is of type Lambda.
[$sel:lambda:ProcessorConfiguration'] :: ProcessorConfiguration -> LambdaConfiguration

-- | Create a value of <a>ProcessorConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lambda:ProcessorConfiguration'</a>,
--   <a>processorConfiguration_lambda</a> - Indicates that the processor is
--   of type Lambda.
newProcessorConfiguration :: LambdaConfiguration -> ProcessorConfiguration

-- | Indicates that the processor is of type Lambda.
processorConfiguration_lambda :: Lens' ProcessorConfiguration LambdaConfiguration

-- | A tag object containing a key-value pair.
--   
--   <i>See:</i> <a>newTag</a> smart constructor.
data Tag
Tag' :: Sensitive Text -> Sensitive Text -> Tag

-- | The key in a tag.
[$sel:key:Tag'] :: Tag -> Sensitive Text

-- | The value in a tag.
[$sel:value:Tag'] :: Tag -> Sensitive Text

-- | Create a value of <a>Tag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:Tag'</a>, <a>tag_key</a> - The key in a tag.
--   
--   <a>$sel:value:Tag'</a>, <a>tag_value</a> - The value in a tag.
newTag :: Text -> Text -> Tag

-- | The key in a tag.
tag_key :: Lens' Tag Text

-- | The value in a tag.
tag_value :: Lens' Tag Text


-- | Applies the specified tags to the specified Amazon Chime SDK messaging
--   resource.
module Network.AWS.ChimeSDKMessaging.TagResource

-- | <i>See:</i> <a>newTagResource</a> smart constructor.
data TagResource
TagResource' :: Text -> NonEmpty Tag -> TagResource

-- | The resource ARN.
[$sel:resourceARN:TagResource'] :: TagResource -> Text

-- | The tag key-value pairs.
[$sel:tags:TagResource'] :: TagResource -> NonEmpty Tag

-- | Create a value of <a>TagResource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceARN:TagResource'</a>, <a>tagResource_resourceARN</a> -
--   The resource ARN.
--   
--   <a>$sel:tags:TagResource'</a>, <a>tagResource_tags</a> - The tag
--   key-value pairs.
newTagResource :: Text -> NonEmpty Tag -> TagResource

-- | The resource ARN.
tagResource_resourceARN :: Lens' TagResource Text

-- | The tag key-value pairs.
tagResource_tags :: Lens' TagResource (NonEmpty Tag)

-- | <i>See:</i> <a>newTagResourceResponse</a> smart constructor.
data TagResourceResponse
TagResourceResponse' :: TagResourceResponse

-- | Create a value of <a>TagResourceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newTagResourceResponse :: TagResourceResponse
instance GHC.Generics.Generic Network.AWS.ChimeSDKMessaging.TagResource.TagResource
instance GHC.Show.Show Network.AWS.ChimeSDKMessaging.TagResource.TagResource
instance GHC.Classes.Eq Network.AWS.ChimeSDKMessaging.TagResource.TagResource
instance GHC.Generics.Generic Network.AWS.ChimeSDKMessaging.TagResource.TagResourceResponse
instance GHC.Show.Show Network.AWS.ChimeSDKMessaging.TagResource.TagResourceResponse
instance GHC.Read.Read Network.AWS.ChimeSDKMessaging.TagResource.TagResourceResponse
instance GHC.Classes.Eq Network.AWS.ChimeSDKMessaging.TagResource.TagResourceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ChimeSDKMessaging.TagResource.TagResource
instance Control.DeepSeq.NFData Network.AWS.ChimeSDKMessaging.TagResource.TagResourceResponse
instance Data.Hashable.Class.Hashable Network.AWS.ChimeSDKMessaging.TagResource.TagResource
instance Control.DeepSeq.NFData Network.AWS.ChimeSDKMessaging.TagResource.TagResource
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ChimeSDKMessaging.TagResource.TagResource
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ChimeSDKMessaging.TagResource.TagResource
instance Network.AWS.Data.Path.ToPath Network.AWS.ChimeSDKMessaging.TagResource.TagResource
instance Network.AWS.Data.Query.ToQuery Network.AWS.ChimeSDKMessaging.TagResource.TagResource


-- | Sends a message to a particular channel that the member is a part of.
--   
--   The <tt>x-amz-chime-bearer</tt> request header is mandatory. Use the
--   <tt>AppInstanceUserArn</tt> of the user that makes the API call as the
--   value in the header.
--   
--   Also, <tt>STANDARD</tt> messages can contain 4KB of data and the 1KB
--   of metadata. <tt>CONTROL</tt> messages can contain 30 bytes of data
--   and no metadata.
module Network.AWS.ChimeSDKMessaging.SendChannelMessage

-- | <i>See:</i> <a>newSendChannelMessage</a> smart constructor.
data SendChannelMessage
SendChannelMessage' :: Maybe (Sensitive Text) -> Text -> Sensitive Text -> ChannelMessageType -> ChannelMessagePersistenceType -> Sensitive Text -> Text -> SendChannelMessage

-- | The optional metadata for each message.
[$sel:metadata:SendChannelMessage'] :: SendChannelMessage -> Maybe (Sensitive Text)

-- | The ARN of the channel.
[$sel:channelArn:SendChannelMessage'] :: SendChannelMessage -> Text

-- | The content of the message.
[$sel:content:SendChannelMessage'] :: SendChannelMessage -> Sensitive Text

-- | The type of message, <tt>STANDARD</tt> or <tt>CONTROL</tt>.
[$sel:type':SendChannelMessage'] :: SendChannelMessage -> ChannelMessageType

-- | Boolean that controls whether the message is persisted on the back
--   end. Required.
[$sel:persistence:SendChannelMessage'] :: SendChannelMessage -> ChannelMessagePersistenceType

-- | The <tt>Idempotency</tt> token for each client request.
[$sel:clientRequestToken:SendChannelMessage'] :: SendChannelMessage -> Sensitive Text

-- | The <tt>AppInstanceUserArn</tt> of the user that makes the API call.
[$sel:chimeBearer:SendChannelMessage'] :: SendChannelMessage -> Text

-- | Create a value of <a>SendChannelMessage</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:metadata:SendChannelMessage'</a>,
--   <a>sendChannelMessage_metadata</a> - The optional metadata for each
--   message.
--   
--   <a>$sel:channelArn:SendChannelMessage'</a>,
--   <a>sendChannelMessage_channelArn</a> - The ARN of the channel.
--   
--   <a>$sel:content:SendChannelMessage'</a>,
--   <a>sendChannelMessage_content</a> - The content of the message.
--   
--   <a>$sel:type':SendChannelMessage'</a>, <a>sendChannelMessage_type</a>
--   - The type of message, <tt>STANDARD</tt> or <tt>CONTROL</tt>.
--   
--   <a>$sel:persistence:SendChannelMessage'</a>,
--   <a>sendChannelMessage_persistence</a> - Boolean that controls whether
--   the message is persisted on the back end. Required.
--   
--   <a>$sel:clientRequestToken:SendChannelMessage'</a>,
--   <a>sendChannelMessage_clientRequestToken</a> - The
--   <tt>Idempotency</tt> token for each client request.
--   
--   <a>$sel:chimeBearer:SendChannelMessage'</a>,
--   <a>sendChannelMessage_chimeBearer</a> - The
--   <tt>AppInstanceUserArn</tt> of the user that makes the API call.
newSendChannelMessage :: Text -> Text -> ChannelMessageType -> ChannelMessagePersistenceType -> Text -> Text -> SendChannelMessage

-- | The optional metadata for each message.
sendChannelMessage_metadata :: Lens' SendChannelMessage (Maybe Text)

-- | The ARN of the channel.
sendChannelMessage_channelArn :: Lens' SendChannelMessage Text

-- | The content of the message.
sendChannelMessage_content :: Lens' SendChannelMessage Text

-- | The type of message, <tt>STANDARD</tt> or <tt>CONTROL</tt>.
sendChannelMessage_type :: Lens' SendChannelMessage ChannelMessageType

-- | Boolean that controls whether the message is persisted on the back
--   end. Required.
sendChannelMessage_persistence :: Lens' SendChannelMessage ChannelMessagePersistenceType

-- | The <tt>Idempotency</tt> token for each client request.
sendChannelMessage_clientRequestToken :: Lens' SendChannelMessage Text

-- | The <tt>AppInstanceUserArn</tt> of the user that makes the API call.
sendChannelMessage_chimeBearer :: Lens' SendChannelMessage Text

-- | <i>See:</i> <a>newSendChannelMessageResponse</a> smart constructor.
data SendChannelMessageResponse
SendChannelMessageResponse' :: Maybe ChannelMessageStatusStructure -> Maybe Text -> Maybe Text -> Int -> SendChannelMessageResponse

-- | The status of the channel message.
[$sel:status:SendChannelMessageResponse'] :: SendChannelMessageResponse -> Maybe ChannelMessageStatusStructure

-- | The ARN of the channel.
[$sel:channelArn:SendChannelMessageResponse'] :: SendChannelMessageResponse -> Maybe Text

-- | The ID string assigned to each message.
[$sel:messageId:SendChannelMessageResponse'] :: SendChannelMessageResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:SendChannelMessageResponse'] :: SendChannelMessageResponse -> Int

-- | Create a value of <a>SendChannelMessageResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:SendChannelMessageResponse'</a>,
--   <a>sendChannelMessageResponse_status</a> - The status of the channel
--   message.
--   
--   <a>$sel:channelArn:SendChannelMessage'</a>,
--   <a>sendChannelMessageResponse_channelArn</a> - The ARN of the channel.
--   
--   <a>$sel:messageId:SendChannelMessageResponse'</a>,
--   <a>sendChannelMessageResponse_messageId</a> - The ID string assigned
--   to each message.
--   
--   <a>$sel:httpStatus:SendChannelMessageResponse'</a>,
--   <a>sendChannelMessageResponse_httpStatus</a> - The response's http
--   status code.
newSendChannelMessageResponse :: Int -> SendChannelMessageResponse

-- | The status of the channel message.
sendChannelMessageResponse_status :: Lens' SendChannelMessageResponse (Maybe ChannelMessageStatusStructure)

-- | The ARN of the channel.
sendChannelMessageResponse_channelArn :: Lens' SendChannelMessageResponse (Maybe Text)

-- | The ID string assigned to each message.
sendChannelMessageResponse_messageId :: Lens' SendChannelMessageResponse (Maybe Text)

-- | The response's http status code.
sendChannelMessageResponse_httpStatus :: Lens' SendChannelMessageResponse Int
instance GHC.Generics.Generic Network.AWS.ChimeSDKMessaging.SendChannelMessage.SendChannelMessage
instance GHC.Show.Show Network.AWS.ChimeSDKMessaging.SendChannelMessage.SendChannelMessage
instance GHC.Classes.Eq Network.AWS.ChimeSDKMessaging.SendChannelMessage.SendChannelMessage
instance GHC.Generics.Generic Network.AWS.ChimeSDKMessaging.SendChannelMessage.SendChannelMessageResponse
instance GHC.Show.Show Network.AWS.ChimeSDKMessaging.SendChannelMessage.SendChannelMessageResponse
instance GHC.Read.Read Network.AWS.ChimeSDKMessaging.SendChannelMessage.SendChannelMessageResponse
instance GHC.Classes.Eq Network.AWS.ChimeSDKMessaging.SendChannelMessage.SendChannelMessageResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ChimeSDKMessaging.SendChannelMessage.SendChannelMessage
instance Control.DeepSeq.NFData Network.AWS.ChimeSDKMessaging.SendChannelMessage.SendChannelMessageResponse
instance Data.Hashable.Class.Hashable Network.AWS.ChimeSDKMessaging.SendChannelMessage.SendChannelMessage
instance Control.DeepSeq.NFData Network.AWS.ChimeSDKMessaging.SendChannelMessage.SendChannelMessage
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ChimeSDKMessaging.SendChannelMessage.SendChannelMessage
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ChimeSDKMessaging.SendChannelMessage.SendChannelMessage
instance Network.AWS.Data.Path.ToPath Network.AWS.ChimeSDKMessaging.SendChannelMessage.SendChannelMessage
instance Network.AWS.Data.Query.ToQuery Network.AWS.ChimeSDKMessaging.SendChannelMessage.SendChannelMessage


-- | Redacts message content, but not metadata. The message exists in the
--   back end, but the action returns null content, and the state shows as
--   redacted.
--   
--   The <tt>x-amz-chime-bearer</tt> request header is mandatory. Use the
--   <tt>AppInstanceUserArn</tt> of the user that makes the API call as the
--   value in the header.
module Network.AWS.ChimeSDKMessaging.RedactChannelMessage

-- | <i>See:</i> <a>newRedactChannelMessage</a> smart constructor.
data RedactChannelMessage
RedactChannelMessage' :: Text -> Text -> Text -> RedactChannelMessage

-- | The ARN of the channel containing the messages that you want to
--   redact.
[$sel:channelArn:RedactChannelMessage'] :: RedactChannelMessage -> Text

-- | The ID of the message being redacted.
[$sel:messageId:RedactChannelMessage'] :: RedactChannelMessage -> Text

-- | The <tt>AppInstanceUserArn</tt> of the user that makes the API call.
[$sel:chimeBearer:RedactChannelMessage'] :: RedactChannelMessage -> Text

-- | Create a value of <a>RedactChannelMessage</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:channelArn:RedactChannelMessage'</a>,
--   <a>redactChannelMessage_channelArn</a> - The ARN of the channel
--   containing the messages that you want to redact.
--   
--   <a>$sel:messageId:RedactChannelMessage'</a>,
--   <a>redactChannelMessage_messageId</a> - The ID of the message being
--   redacted.
--   
--   <a>$sel:chimeBearer:RedactChannelMessage'</a>,
--   <a>redactChannelMessage_chimeBearer</a> - The
--   <tt>AppInstanceUserArn</tt> of the user that makes the API call.
newRedactChannelMessage :: Text -> Text -> Text -> RedactChannelMessage

-- | The ARN of the channel containing the messages that you want to
--   redact.
redactChannelMessage_channelArn :: Lens' RedactChannelMessage Text

-- | The ID of the message being redacted.
redactChannelMessage_messageId :: Lens' RedactChannelMessage Text

-- | The <tt>AppInstanceUserArn</tt> of the user that makes the API call.
redactChannelMessage_chimeBearer :: Lens' RedactChannelMessage Text

-- | <i>See:</i> <a>newRedactChannelMessageResponse</a> smart constructor.
data RedactChannelMessageResponse
RedactChannelMessageResponse' :: Maybe Text -> Maybe Text -> Int -> RedactChannelMessageResponse

-- | The ARN of the channel containing the messages that you want to
--   redact.
[$sel:channelArn:RedactChannelMessageResponse'] :: RedactChannelMessageResponse -> Maybe Text

-- | The ID of the message being redacted.
[$sel:messageId:RedactChannelMessageResponse'] :: RedactChannelMessageResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:RedactChannelMessageResponse'] :: RedactChannelMessageResponse -> Int

-- | Create a value of <a>RedactChannelMessageResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:channelArn:RedactChannelMessage'</a>,
--   <a>redactChannelMessageResponse_channelArn</a> - The ARN of the
--   channel containing the messages that you want to redact.
--   
--   <a>$sel:messageId:RedactChannelMessage'</a>,
--   <a>redactChannelMessageResponse_messageId</a> - The ID of the message
--   being redacted.
--   
--   <a>$sel:httpStatus:RedactChannelMessageResponse'</a>,
--   <a>redactChannelMessageResponse_httpStatus</a> - The response's http
--   status code.
newRedactChannelMessageResponse :: Int -> RedactChannelMessageResponse

-- | The ARN of the channel containing the messages that you want to
--   redact.
redactChannelMessageResponse_channelArn :: Lens' RedactChannelMessageResponse (Maybe Text)

-- | The ID of the message being redacted.
redactChannelMessageResponse_messageId :: Lens' RedactChannelMessageResponse (Maybe Text)

-- | The response's http status code.
redactChannelMessageResponse_httpStatus :: Lens' RedactChannelMessageResponse Int
instance GHC.Generics.Generic Network.AWS.ChimeSDKMessaging.RedactChannelMessage.RedactChannelMessage
instance GHC.Show.Show Network.AWS.ChimeSDKMessaging.RedactChannelMessage.RedactChannelMessage
instance GHC.Read.Read Network.AWS.ChimeSDKMessaging.RedactChannelMessage.RedactChannelMessage
instance GHC.Classes.Eq Network.AWS.ChimeSDKMessaging.RedactChannelMessage.RedactChannelMessage
instance GHC.Generics.Generic Network.AWS.ChimeSDKMessaging.RedactChannelMessage.RedactChannelMessageResponse
instance GHC.Show.Show Network.AWS.ChimeSDKMessaging.RedactChannelMessage.RedactChannelMessageResponse
instance GHC.Read.Read Network.AWS.ChimeSDKMessaging.RedactChannelMessage.RedactChannelMessageResponse
instance GHC.Classes.Eq Network.AWS.ChimeSDKMessaging.RedactChannelMessage.RedactChannelMessageResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ChimeSDKMessaging.RedactChannelMessage.RedactChannelMessage
instance Control.DeepSeq.NFData Network.AWS.ChimeSDKMessaging.RedactChannelMessage.RedactChannelMessageResponse
instance Data.Hashable.Class.Hashable Network.AWS.ChimeSDKMessaging.RedactChannelMessage.RedactChannelMessage
instance Control.DeepSeq.NFData Network.AWS.ChimeSDKMessaging.RedactChannelMessage.RedactChannelMessage
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ChimeSDKMessaging.RedactChannelMessage.RedactChannelMessage
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ChimeSDKMessaging.RedactChannelMessage.RedactChannelMessage
instance Network.AWS.Data.Path.ToPath Network.AWS.ChimeSDKMessaging.RedactChannelMessage.RedactChannelMessage
instance Network.AWS.Data.Query.ToQuery Network.AWS.ChimeSDKMessaging.RedactChannelMessage.RedactChannelMessage


-- | Lists the tags applied to an Amazon Chime SDK messaging resource.
module Network.AWS.ChimeSDKMessaging.ListTagsForResource

-- | <i>See:</i> <a>newListTagsForResource</a> smart constructor.
data ListTagsForResource
ListTagsForResource' :: Text -> ListTagsForResource

-- | The ARN of the resource.
[$sel:resourceARN:ListTagsForResource'] :: ListTagsForResource -> Text

-- | Create a value of <a>ListTagsForResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceARN:ListTagsForResource'</a>,
--   <a>listTagsForResource_resourceARN</a> - The ARN of the resource.
newListTagsForResource :: Text -> ListTagsForResource

-- | The ARN of the resource.
listTagsForResource_resourceARN :: Lens' ListTagsForResource Text

-- | <i>See:</i> <a>newListTagsForResourceResponse</a> smart constructor.
data ListTagsForResourceResponse
ListTagsForResourceResponse' :: Maybe (NonEmpty Tag) -> Int -> ListTagsForResourceResponse

-- | The tag key-value pairs.
[$sel:tags:ListTagsForResourceResponse'] :: ListTagsForResourceResponse -> Maybe (NonEmpty Tag)

-- | The response's http status code.
[$sel:httpStatus:ListTagsForResourceResponse'] :: ListTagsForResourceResponse -> Int

-- | Create a value of <a>ListTagsForResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_tags</a> - The tag key-value pairs.
--   
--   <a>$sel:httpStatus:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_httpStatus</a> - The response's http
--   status code.
newListTagsForResourceResponse :: Int -> ListTagsForResourceResponse

-- | The tag key-value pairs.
listTagsForResourceResponse_tags :: Lens' ListTagsForResourceResponse (Maybe (NonEmpty Tag))

-- | The response's http status code.
listTagsForResourceResponse_httpStatus :: Lens' ListTagsForResourceResponse Int
instance GHC.Generics.Generic Network.AWS.ChimeSDKMessaging.ListTagsForResource.ListTagsForResource
instance GHC.Show.Show Network.AWS.ChimeSDKMessaging.ListTagsForResource.ListTagsForResource
instance GHC.Read.Read Network.AWS.ChimeSDKMessaging.ListTagsForResource.ListTagsForResource
instance GHC.Classes.Eq Network.AWS.ChimeSDKMessaging.ListTagsForResource.ListTagsForResource
instance GHC.Generics.Generic Network.AWS.ChimeSDKMessaging.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Show.Show Network.AWS.ChimeSDKMessaging.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Classes.Eq Network.AWS.ChimeSDKMessaging.ListTagsForResource.ListTagsForResourceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ChimeSDKMessaging.ListTagsForResource.ListTagsForResource
instance Control.DeepSeq.NFData Network.AWS.ChimeSDKMessaging.ListTagsForResource.ListTagsForResourceResponse
instance Data.Hashable.Class.Hashable Network.AWS.ChimeSDKMessaging.ListTagsForResource.ListTagsForResource
instance Control.DeepSeq.NFData Network.AWS.ChimeSDKMessaging.ListTagsForResource.ListTagsForResource
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ChimeSDKMessaging.ListTagsForResource.ListTagsForResource
instance Network.AWS.Data.Path.ToPath Network.AWS.ChimeSDKMessaging.ListTagsForResource.ListTagsForResource
instance Network.AWS.Data.Query.ToQuery Network.AWS.ChimeSDKMessaging.ListTagsForResource.ListTagsForResource


-- | A list of the channels moderated by an <tt>AppInstanceUser</tt>.
--   
--   The <tt>x-amz-chime-bearer</tt> request header is mandatory. Use the
--   <tt>AppInstanceUserArn</tt> of the user that makes the API call as the
--   value in the header.
module Network.AWS.ChimeSDKMessaging.ListChannelsModeratedByAppInstanceUser

-- | <i>See:</i> <a>newListChannelsModeratedByAppInstanceUser</a> smart
--   constructor.
data ListChannelsModeratedByAppInstanceUser
ListChannelsModeratedByAppInstanceUser' :: Maybe Text -> Maybe (Sensitive Text) -> Maybe Natural -> Text -> ListChannelsModeratedByAppInstanceUser

-- | The ARN of the user in the moderated channel.
[$sel:appInstanceUserArn:ListChannelsModeratedByAppInstanceUser'] :: ListChannelsModeratedByAppInstanceUser -> Maybe Text

-- | The token returned from previous API requests until the number of
--   channels moderated by the user is reached.
[$sel:nextToken:ListChannelsModeratedByAppInstanceUser'] :: ListChannelsModeratedByAppInstanceUser -> Maybe (Sensitive Text)

-- | The maximum number of channels in the request.
[$sel:maxResults:ListChannelsModeratedByAppInstanceUser'] :: ListChannelsModeratedByAppInstanceUser -> Maybe Natural

-- | The <tt>AppInstanceUserArn</tt> of the user that makes the API call.
[$sel:chimeBearer:ListChannelsModeratedByAppInstanceUser'] :: ListChannelsModeratedByAppInstanceUser -> Text

-- | Create a value of <a>ListChannelsModeratedByAppInstanceUser</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:appInstanceUserArn:ListChannelsModeratedByAppInstanceUser'</a>,
--   <a>listChannelsModeratedByAppInstanceUser_appInstanceUserArn</a> - The
--   ARN of the user in the moderated channel.
--   
--   <a>$sel:nextToken:ListChannelsModeratedByAppInstanceUser'</a>,
--   <a>listChannelsModeratedByAppInstanceUser_nextToken</a> - The token
--   returned from previous API requests until the number of channels
--   moderated by the user is reached.
--   
--   <a>$sel:maxResults:ListChannelsModeratedByAppInstanceUser'</a>,
--   <a>listChannelsModeratedByAppInstanceUser_maxResults</a> - The maximum
--   number of channels in the request.
--   
--   <a>$sel:chimeBearer:ListChannelsModeratedByAppInstanceUser'</a>,
--   <a>listChannelsModeratedByAppInstanceUser_chimeBearer</a> - The
--   <tt>AppInstanceUserArn</tt> of the user that makes the API call.
newListChannelsModeratedByAppInstanceUser :: Text -> ListChannelsModeratedByAppInstanceUser

-- | The ARN of the user in the moderated channel.
listChannelsModeratedByAppInstanceUser_appInstanceUserArn :: Lens' ListChannelsModeratedByAppInstanceUser (Maybe Text)

-- | The token returned from previous API requests until the number of
--   channels moderated by the user is reached.
listChannelsModeratedByAppInstanceUser_nextToken :: Lens' ListChannelsModeratedByAppInstanceUser (Maybe Text)

-- | The maximum number of channels in the request.
listChannelsModeratedByAppInstanceUser_maxResults :: Lens' ListChannelsModeratedByAppInstanceUser (Maybe Natural)

-- | The <tt>AppInstanceUserArn</tt> of the user that makes the API call.
listChannelsModeratedByAppInstanceUser_chimeBearer :: Lens' ListChannelsModeratedByAppInstanceUser Text

-- | <i>See:</i> <a>newListChannelsModeratedByAppInstanceUserResponse</a>
--   smart constructor.
data ListChannelsModeratedByAppInstanceUserResponse
ListChannelsModeratedByAppInstanceUserResponse' :: Maybe [ChannelModeratedByAppInstanceUserSummary] -> Maybe (Sensitive Text) -> Int -> ListChannelsModeratedByAppInstanceUserResponse

-- | The moderated channels in the request.
[$sel:channels:ListChannelsModeratedByAppInstanceUserResponse'] :: ListChannelsModeratedByAppInstanceUserResponse -> Maybe [ChannelModeratedByAppInstanceUserSummary]

-- | The token returned from previous API requests until the number of
--   channels moderated by the user is reached.
[$sel:nextToken:ListChannelsModeratedByAppInstanceUserResponse'] :: ListChannelsModeratedByAppInstanceUserResponse -> Maybe (Sensitive Text)

-- | The response's http status code.
[$sel:httpStatus:ListChannelsModeratedByAppInstanceUserResponse'] :: ListChannelsModeratedByAppInstanceUserResponse -> Int

-- | Create a value of
--   <a>ListChannelsModeratedByAppInstanceUserResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:channels:ListChannelsModeratedByAppInstanceUserResponse'</a>,
--   <a>listChannelsModeratedByAppInstanceUserResponse_channels</a> - The
--   moderated channels in the request.
--   
--   <a>$sel:nextToken:ListChannelsModeratedByAppInstanceUser'</a>,
--   <a>listChannelsModeratedByAppInstanceUserResponse_nextToken</a> - The
--   token returned from previous API requests until the number of channels
--   moderated by the user is reached.
--   
--   
--   <a>$sel:httpStatus:ListChannelsModeratedByAppInstanceUserResponse'</a>,
--   <a>listChannelsModeratedByAppInstanceUserResponse_httpStatus</a> - The
--   response's http status code.
newListChannelsModeratedByAppInstanceUserResponse :: Int -> ListChannelsModeratedByAppInstanceUserResponse

-- | The moderated channels in the request.
listChannelsModeratedByAppInstanceUserResponse_channels :: Lens' ListChannelsModeratedByAppInstanceUserResponse (Maybe [ChannelModeratedByAppInstanceUserSummary])

-- | The token returned from previous API requests until the number of
--   channels moderated by the user is reached.
listChannelsModeratedByAppInstanceUserResponse_nextToken :: Lens' ListChannelsModeratedByAppInstanceUserResponse (Maybe Text)

-- | The response's http status code.
listChannelsModeratedByAppInstanceUserResponse_httpStatus :: Lens' ListChannelsModeratedByAppInstanceUserResponse Int
instance GHC.Generics.Generic Network.AWS.ChimeSDKMessaging.ListChannelsModeratedByAppInstanceUser.ListChannelsModeratedByAppInstanceUser
instance GHC.Show.Show Network.AWS.ChimeSDKMessaging.ListChannelsModeratedByAppInstanceUser.ListChannelsModeratedByAppInstanceUser
instance GHC.Classes.Eq Network.AWS.ChimeSDKMessaging.ListChannelsModeratedByAppInstanceUser.ListChannelsModeratedByAppInstanceUser
instance GHC.Generics.Generic Network.AWS.ChimeSDKMessaging.ListChannelsModeratedByAppInstanceUser.ListChannelsModeratedByAppInstanceUserResponse
instance GHC.Show.Show Network.AWS.ChimeSDKMessaging.ListChannelsModeratedByAppInstanceUser.ListChannelsModeratedByAppInstanceUserResponse
instance GHC.Classes.Eq Network.AWS.ChimeSDKMessaging.ListChannelsModeratedByAppInstanceUser.ListChannelsModeratedByAppInstanceUserResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ChimeSDKMessaging.ListChannelsModeratedByAppInstanceUser.ListChannelsModeratedByAppInstanceUser
instance Control.DeepSeq.NFData Network.AWS.ChimeSDKMessaging.ListChannelsModeratedByAppInstanceUser.ListChannelsModeratedByAppInstanceUserResponse
instance Data.Hashable.Class.Hashable Network.AWS.ChimeSDKMessaging.ListChannelsModeratedByAppInstanceUser.ListChannelsModeratedByAppInstanceUser
instance Control.DeepSeq.NFData Network.AWS.ChimeSDKMessaging.ListChannelsModeratedByAppInstanceUser.ListChannelsModeratedByAppInstanceUser
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ChimeSDKMessaging.ListChannelsModeratedByAppInstanceUser.ListChannelsModeratedByAppInstanceUser
instance Network.AWS.Data.Path.ToPath Network.AWS.ChimeSDKMessaging.ListChannelsModeratedByAppInstanceUser.ListChannelsModeratedByAppInstanceUser
instance Network.AWS.Data.Query.ToQuery Network.AWS.ChimeSDKMessaging.ListChannelsModeratedByAppInstanceUser.ListChannelsModeratedByAppInstanceUser


-- | Lists all channels associated with a specified channel flow. You can
--   associate a channel flow with multiple channels, but you can only
--   associate a channel with one channel flow. This is a developer API.
module Network.AWS.ChimeSDKMessaging.ListChannelsAssociatedWithChannelFlow

-- | <i>See:</i> <a>newListChannelsAssociatedWithChannelFlow</a> smart
--   constructor.
data ListChannelsAssociatedWithChannelFlow
ListChannelsAssociatedWithChannelFlow' :: Maybe (Sensitive Text) -> Maybe Natural -> Text -> ListChannelsAssociatedWithChannelFlow

-- | The token passed by previous API calls until all requested channels
--   are returned.
[$sel:nextToken:ListChannelsAssociatedWithChannelFlow'] :: ListChannelsAssociatedWithChannelFlow -> Maybe (Sensitive Text)

-- | The maximum number of channels that you want to return.
[$sel:maxResults:ListChannelsAssociatedWithChannelFlow'] :: ListChannelsAssociatedWithChannelFlow -> Maybe Natural

-- | The ARN of the channel flow.
[$sel:channelFlowArn:ListChannelsAssociatedWithChannelFlow'] :: ListChannelsAssociatedWithChannelFlow -> Text

-- | Create a value of <a>ListChannelsAssociatedWithChannelFlow</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListChannelsAssociatedWithChannelFlow'</a>,
--   <a>listChannelsAssociatedWithChannelFlow_nextToken</a> - The token
--   passed by previous API calls until all requested channels are
--   returned.
--   
--   <a>$sel:maxResults:ListChannelsAssociatedWithChannelFlow'</a>,
--   <a>listChannelsAssociatedWithChannelFlow_maxResults</a> - The maximum
--   number of channels that you want to return.
--   
--   <a>$sel:channelFlowArn:ListChannelsAssociatedWithChannelFlow'</a>,
--   <a>listChannelsAssociatedWithChannelFlow_channelFlowArn</a> - The ARN
--   of the channel flow.
newListChannelsAssociatedWithChannelFlow :: Text -> ListChannelsAssociatedWithChannelFlow

-- | The token passed by previous API calls until all requested channels
--   are returned.
listChannelsAssociatedWithChannelFlow_nextToken :: Lens' ListChannelsAssociatedWithChannelFlow (Maybe Text)

-- | The maximum number of channels that you want to return.
listChannelsAssociatedWithChannelFlow_maxResults :: Lens' ListChannelsAssociatedWithChannelFlow (Maybe Natural)

-- | The ARN of the channel flow.
listChannelsAssociatedWithChannelFlow_channelFlowArn :: Lens' ListChannelsAssociatedWithChannelFlow Text

-- | <i>See:</i> <a>newListChannelsAssociatedWithChannelFlowResponse</a>
--   smart constructor.
data ListChannelsAssociatedWithChannelFlowResponse
ListChannelsAssociatedWithChannelFlowResponse' :: Maybe [ChannelAssociatedWithFlowSummary] -> Maybe (Sensitive Text) -> Int -> ListChannelsAssociatedWithChannelFlowResponse

-- | The information about each channel.
[$sel:channels:ListChannelsAssociatedWithChannelFlowResponse'] :: ListChannelsAssociatedWithChannelFlowResponse -> Maybe [ChannelAssociatedWithFlowSummary]

-- | The token passed by previous API calls until all requested channels
--   are returned.
[$sel:nextToken:ListChannelsAssociatedWithChannelFlowResponse'] :: ListChannelsAssociatedWithChannelFlowResponse -> Maybe (Sensitive Text)

-- | The response's http status code.
[$sel:httpStatus:ListChannelsAssociatedWithChannelFlowResponse'] :: ListChannelsAssociatedWithChannelFlowResponse -> Int

-- | Create a value of <a>ListChannelsAssociatedWithChannelFlowResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:channels:ListChannelsAssociatedWithChannelFlowResponse'</a>,
--   <a>listChannelsAssociatedWithChannelFlowResponse_channels</a> - The
--   information about each channel.
--   
--   <a>$sel:nextToken:ListChannelsAssociatedWithChannelFlow'</a>,
--   <a>listChannelsAssociatedWithChannelFlowResponse_nextToken</a> - The
--   token passed by previous API calls until all requested channels are
--   returned.
--   
--   <a>$sel:httpStatus:ListChannelsAssociatedWithChannelFlowResponse'</a>,
--   <a>listChannelsAssociatedWithChannelFlowResponse_httpStatus</a> - The
--   response's http status code.
newListChannelsAssociatedWithChannelFlowResponse :: Int -> ListChannelsAssociatedWithChannelFlowResponse

-- | The information about each channel.
listChannelsAssociatedWithChannelFlowResponse_channels :: Lens' ListChannelsAssociatedWithChannelFlowResponse (Maybe [ChannelAssociatedWithFlowSummary])

-- | The token passed by previous API calls until all requested channels
--   are returned.
listChannelsAssociatedWithChannelFlowResponse_nextToken :: Lens' ListChannelsAssociatedWithChannelFlowResponse (Maybe Text)

-- | The response's http status code.
listChannelsAssociatedWithChannelFlowResponse_httpStatus :: Lens' ListChannelsAssociatedWithChannelFlowResponse Int
instance GHC.Generics.Generic Network.AWS.ChimeSDKMessaging.ListChannelsAssociatedWithChannelFlow.ListChannelsAssociatedWithChannelFlow
instance GHC.Show.Show Network.AWS.ChimeSDKMessaging.ListChannelsAssociatedWithChannelFlow.ListChannelsAssociatedWithChannelFlow
instance GHC.Classes.Eq Network.AWS.ChimeSDKMessaging.ListChannelsAssociatedWithChannelFlow.ListChannelsAssociatedWithChannelFlow
instance GHC.Generics.Generic Network.AWS.ChimeSDKMessaging.ListChannelsAssociatedWithChannelFlow.ListChannelsAssociatedWithChannelFlowResponse
instance GHC.Show.Show Network.AWS.ChimeSDKMessaging.ListChannelsAssociatedWithChannelFlow.ListChannelsAssociatedWithChannelFlowResponse
instance GHC.Classes.Eq Network.AWS.ChimeSDKMessaging.ListChannelsAssociatedWithChannelFlow.ListChannelsAssociatedWithChannelFlowResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ChimeSDKMessaging.ListChannelsAssociatedWithChannelFlow.ListChannelsAssociatedWithChannelFlow
instance Control.DeepSeq.NFData Network.AWS.ChimeSDKMessaging.ListChannelsAssociatedWithChannelFlow.ListChannelsAssociatedWithChannelFlowResponse
instance Data.Hashable.Class.Hashable Network.AWS.ChimeSDKMessaging.ListChannelsAssociatedWithChannelFlow.ListChannelsAssociatedWithChannelFlow
instance Control.DeepSeq.NFData Network.AWS.ChimeSDKMessaging.ListChannelsAssociatedWithChannelFlow.ListChannelsAssociatedWithChannelFlow
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ChimeSDKMessaging.ListChannelsAssociatedWithChannelFlow.ListChannelsAssociatedWithChannelFlow
instance Network.AWS.Data.Path.ToPath Network.AWS.ChimeSDKMessaging.ListChannelsAssociatedWithChannelFlow.ListChannelsAssociatedWithChannelFlow
instance Network.AWS.Data.Query.ToQuery Network.AWS.ChimeSDKMessaging.ListChannelsAssociatedWithChannelFlow.ListChannelsAssociatedWithChannelFlow


-- | Lists all Channels created under a single Chime App as a paginated
--   list. You can specify filters to narrow results.
--   
--   <b>Functionality &amp; restrictions</b>
--   
--   <ul>
--   <li>Use privacy = <tt>PUBLIC</tt> to retrieve all public channels in
--   the account.</li>
--   <li>Only an <tt>AppInstanceAdmin</tt> can set privacy =
--   <tt>PRIVATE</tt> to list the private channels in an account.</li>
--   </ul>
--   
--   The <tt>x-amz-chime-bearer</tt> request header is mandatory. Use the
--   <tt>AppInstanceUserArn</tt> of the user that makes the API call as the
--   value in the header.
module Network.AWS.ChimeSDKMessaging.ListChannels

-- | <i>See:</i> <a>newListChannels</a> smart constructor.
data ListChannels
ListChannels' :: Maybe ChannelPrivacy -> Maybe (Sensitive Text) -> Maybe Natural -> Text -> Text -> ListChannels

-- | The privacy setting. <tt>PUBLIC</tt> retrieves all the public
--   channels. <tt>PRIVATE</tt> retrieves private channels. Only an
--   <tt>AppInstanceAdmin</tt> can retrieve private channels.
[$sel:privacy:ListChannels'] :: ListChannels -> Maybe ChannelPrivacy

-- | The token passed by previous API calls until all requested channels
--   are returned.
[$sel:nextToken:ListChannels'] :: ListChannels -> Maybe (Sensitive Text)

-- | The maximum number of channels that you want to return.
[$sel:maxResults:ListChannels'] :: ListChannels -> Maybe Natural

-- | The ARN of the <tt>AppInstance</tt>.
[$sel:appInstanceArn:ListChannels'] :: ListChannels -> Text

-- | The <tt>AppInstanceUserArn</tt> of the user that makes the API call.
[$sel:chimeBearer:ListChannels'] :: ListChannels -> Text

-- | Create a value of <a>ListChannels</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:privacy:ListChannels'</a>, <a>listChannels_privacy</a> - The
--   privacy setting. <tt>PUBLIC</tt> retrieves all the public channels.
--   <tt>PRIVATE</tt> retrieves private channels. Only an
--   <tt>AppInstanceAdmin</tt> can retrieve private channels.
--   
--   <a>$sel:nextToken:ListChannels'</a>, <a>listChannels_nextToken</a> -
--   The token passed by previous API calls until all requested channels
--   are returned.
--   
--   <a>$sel:maxResults:ListChannels'</a>, <a>listChannels_maxResults</a> -
--   The maximum number of channels that you want to return.
--   
--   <a>$sel:appInstanceArn:ListChannels'</a>,
--   <a>listChannels_appInstanceArn</a> - The ARN of the
--   <tt>AppInstance</tt>.
--   
--   <a>$sel:chimeBearer:ListChannels'</a>, <a>listChannels_chimeBearer</a>
--   - The <tt>AppInstanceUserArn</tt> of the user that makes the API call.
newListChannels :: Text -> Text -> ListChannels

-- | The privacy setting. <tt>PUBLIC</tt> retrieves all the public
--   channels. <tt>PRIVATE</tt> retrieves private channels. Only an
--   <tt>AppInstanceAdmin</tt> can retrieve private channels.
listChannels_privacy :: Lens' ListChannels (Maybe ChannelPrivacy)

-- | The token passed by previous API calls until all requested channels
--   are returned.
listChannels_nextToken :: Lens' ListChannels (Maybe Text)

-- | The maximum number of channels that you want to return.
listChannels_maxResults :: Lens' ListChannels (Maybe Natural)

-- | The ARN of the <tt>AppInstance</tt>.
listChannels_appInstanceArn :: Lens' ListChannels Text

-- | The <tt>AppInstanceUserArn</tt> of the user that makes the API call.
listChannels_chimeBearer :: Lens' ListChannels Text

-- | <i>See:</i> <a>newListChannelsResponse</a> smart constructor.
data ListChannelsResponse
ListChannelsResponse' :: Maybe [ChannelSummary] -> Maybe (Sensitive Text) -> Int -> ListChannelsResponse

-- | The information about each channel.
[$sel:channels:ListChannelsResponse'] :: ListChannelsResponse -> Maybe [ChannelSummary]

-- | The token returned from previous API requests until the number of
--   channels is reached.
[$sel:nextToken:ListChannelsResponse'] :: ListChannelsResponse -> Maybe (Sensitive Text)

-- | The response's http status code.
[$sel:httpStatus:ListChannelsResponse'] :: ListChannelsResponse -> Int

-- | Create a value of <a>ListChannelsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:channels:ListChannelsResponse'</a>,
--   <a>listChannelsResponse_channels</a> - The information about each
--   channel.
--   
--   <a>$sel:nextToken:ListChannels'</a>,
--   <a>listChannelsResponse_nextToken</a> - The token returned from
--   previous API requests until the number of channels is reached.
--   
--   <a>$sel:httpStatus:ListChannelsResponse'</a>,
--   <a>listChannelsResponse_httpStatus</a> - The response's http status
--   code.
newListChannelsResponse :: Int -> ListChannelsResponse

-- | The information about each channel.
listChannelsResponse_channels :: Lens' ListChannelsResponse (Maybe [ChannelSummary])

-- | The token returned from previous API requests until the number of
--   channels is reached.
listChannelsResponse_nextToken :: Lens' ListChannelsResponse (Maybe Text)

-- | The response's http status code.
listChannelsResponse_httpStatus :: Lens' ListChannelsResponse Int
instance GHC.Generics.Generic Network.AWS.ChimeSDKMessaging.ListChannels.ListChannels
instance GHC.Show.Show Network.AWS.ChimeSDKMessaging.ListChannels.ListChannels
instance GHC.Classes.Eq Network.AWS.ChimeSDKMessaging.ListChannels.ListChannels
instance GHC.Generics.Generic Network.AWS.ChimeSDKMessaging.ListChannels.ListChannelsResponse
instance GHC.Show.Show Network.AWS.ChimeSDKMessaging.ListChannels.ListChannelsResponse
instance GHC.Classes.Eq Network.AWS.ChimeSDKMessaging.ListChannels.ListChannelsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ChimeSDKMessaging.ListChannels.ListChannels
instance Control.DeepSeq.NFData Network.AWS.ChimeSDKMessaging.ListChannels.ListChannelsResponse
instance Data.Hashable.Class.Hashable Network.AWS.ChimeSDKMessaging.ListChannels.ListChannels
instance Control.DeepSeq.NFData Network.AWS.ChimeSDKMessaging.ListChannels.ListChannels
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ChimeSDKMessaging.ListChannels.ListChannels
instance Network.AWS.Data.Path.ToPath Network.AWS.ChimeSDKMessaging.ListChannels.ListChannels
instance Network.AWS.Data.Query.ToQuery Network.AWS.ChimeSDKMessaging.ListChannels.ListChannels


-- | Lists all the moderators for a channel.
--   
--   The <tt>x-amz-chime-bearer</tt> request header is mandatory. Use the
--   <tt>AppInstanceUserArn</tt> of the user that makes the API call as the
--   value in the header.
module Network.AWS.ChimeSDKMessaging.ListChannelModerators

-- | <i>See:</i> <a>newListChannelModerators</a> smart constructor.
data ListChannelModerators
ListChannelModerators' :: Maybe (Sensitive Text) -> Maybe Natural -> Text -> Text -> ListChannelModerators

-- | The token passed by previous API calls until all requested moderators
--   are returned.
[$sel:nextToken:ListChannelModerators'] :: ListChannelModerators -> Maybe (Sensitive Text)

-- | The maximum number of moderators that you want returned.
[$sel:maxResults:ListChannelModerators'] :: ListChannelModerators -> Maybe Natural

-- | The ARN of the channel.
[$sel:channelArn:ListChannelModerators'] :: ListChannelModerators -> Text

-- | The <tt>AppInstanceUserArn</tt> of the user that makes the API call.
[$sel:chimeBearer:ListChannelModerators'] :: ListChannelModerators -> Text

-- | Create a value of <a>ListChannelModerators</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListChannelModerators'</a>,
--   <a>listChannelModerators_nextToken</a> - The token passed by previous
--   API calls until all requested moderators are returned.
--   
--   <a>$sel:maxResults:ListChannelModerators'</a>,
--   <a>listChannelModerators_maxResults</a> - The maximum number of
--   moderators that you want returned.
--   
--   <a>$sel:channelArn:ListChannelModerators'</a>,
--   <a>listChannelModerators_channelArn</a> - The ARN of the channel.
--   
--   <a>$sel:chimeBearer:ListChannelModerators'</a>,
--   <a>listChannelModerators_chimeBearer</a> - The
--   <tt>AppInstanceUserArn</tt> of the user that makes the API call.
newListChannelModerators :: Text -> Text -> ListChannelModerators

-- | The token passed by previous API calls until all requested moderators
--   are returned.
listChannelModerators_nextToken :: Lens' ListChannelModerators (Maybe Text)

-- | The maximum number of moderators that you want returned.
listChannelModerators_maxResults :: Lens' ListChannelModerators (Maybe Natural)

-- | The ARN of the channel.
listChannelModerators_channelArn :: Lens' ListChannelModerators Text

-- | The <tt>AppInstanceUserArn</tt> of the user that makes the API call.
listChannelModerators_chimeBearer :: Lens' ListChannelModerators Text

-- | <i>See:</i> <a>newListChannelModeratorsResponse</a> smart constructor.
data ListChannelModeratorsResponse
ListChannelModeratorsResponse' :: Maybe Text -> Maybe (Sensitive Text) -> Maybe [ChannelModeratorSummary] -> Int -> ListChannelModeratorsResponse

-- | The ARN of the channel.
[$sel:channelArn:ListChannelModeratorsResponse'] :: ListChannelModeratorsResponse -> Maybe Text

-- | The token passed by previous API calls until all requested moderators
--   are returned.
[$sel:nextToken:ListChannelModeratorsResponse'] :: ListChannelModeratorsResponse -> Maybe (Sensitive Text)

-- | The information about and names of each moderator.
[$sel:channelModerators:ListChannelModeratorsResponse'] :: ListChannelModeratorsResponse -> Maybe [ChannelModeratorSummary]

-- | The response's http status code.
[$sel:httpStatus:ListChannelModeratorsResponse'] :: ListChannelModeratorsResponse -> Int

-- | Create a value of <a>ListChannelModeratorsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:channelArn:ListChannelModerators'</a>,
--   <a>listChannelModeratorsResponse_channelArn</a> - The ARN of the
--   channel.
--   
--   <a>$sel:nextToken:ListChannelModerators'</a>,
--   <a>listChannelModeratorsResponse_nextToken</a> - The token passed by
--   previous API calls until all requested moderators are returned.
--   
--   <a>$sel:channelModerators:ListChannelModeratorsResponse'</a>,
--   <a>listChannelModeratorsResponse_channelModerators</a> - The
--   information about and names of each moderator.
--   
--   <a>$sel:httpStatus:ListChannelModeratorsResponse'</a>,
--   <a>listChannelModeratorsResponse_httpStatus</a> - The response's http
--   status code.
newListChannelModeratorsResponse :: Int -> ListChannelModeratorsResponse

-- | The ARN of the channel.
listChannelModeratorsResponse_channelArn :: Lens' ListChannelModeratorsResponse (Maybe Text)

-- | The token passed by previous API calls until all requested moderators
--   are returned.
listChannelModeratorsResponse_nextToken :: Lens' ListChannelModeratorsResponse (Maybe Text)

-- | The information about and names of each moderator.
listChannelModeratorsResponse_channelModerators :: Lens' ListChannelModeratorsResponse (Maybe [ChannelModeratorSummary])

-- | The response's http status code.
listChannelModeratorsResponse_httpStatus :: Lens' ListChannelModeratorsResponse Int
instance GHC.Generics.Generic Network.AWS.ChimeSDKMessaging.ListChannelModerators.ListChannelModerators
instance GHC.Show.Show Network.AWS.ChimeSDKMessaging.ListChannelModerators.ListChannelModerators
instance GHC.Classes.Eq Network.AWS.ChimeSDKMessaging.ListChannelModerators.ListChannelModerators
instance GHC.Generics.Generic Network.AWS.ChimeSDKMessaging.ListChannelModerators.ListChannelModeratorsResponse
instance GHC.Show.Show Network.AWS.ChimeSDKMessaging.ListChannelModerators.ListChannelModeratorsResponse
instance GHC.Classes.Eq Network.AWS.ChimeSDKMessaging.ListChannelModerators.ListChannelModeratorsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ChimeSDKMessaging.ListChannelModerators.ListChannelModerators
instance Control.DeepSeq.NFData Network.AWS.ChimeSDKMessaging.ListChannelModerators.ListChannelModeratorsResponse
instance Data.Hashable.Class.Hashable Network.AWS.ChimeSDKMessaging.ListChannelModerators.ListChannelModerators
instance Control.DeepSeq.NFData Network.AWS.ChimeSDKMessaging.ListChannelModerators.ListChannelModerators
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ChimeSDKMessaging.ListChannelModerators.ListChannelModerators
instance Network.AWS.Data.Path.ToPath Network.AWS.ChimeSDKMessaging.ListChannelModerators.ListChannelModerators
instance Network.AWS.Data.Query.ToQuery Network.AWS.ChimeSDKMessaging.ListChannelModerators.ListChannelModerators


-- | List all the messages in a channel. Returns a paginated list of
--   <tt>ChannelMessages</tt>. By default, sorted by creation timestamp in
--   descending order.
--   
--   Redacted messages appear in the results as empty, since they are only
--   redacted, not deleted. Deleted messages do not appear in the results.
--   This action always returns the latest version of an edited message.
--   
--   Also, the x-amz-chime-bearer request header is mandatory. Use the
--   <tt>AppInstanceUserArn</tt> of the user that makes the API call as the
--   value in the header.
module Network.AWS.ChimeSDKMessaging.ListChannelMessages

-- | <i>See:</i> <a>newListChannelMessages</a> smart constructor.
data ListChannelMessages
ListChannelMessages' :: Maybe (Sensitive Text) -> Maybe POSIX -> Maybe SortOrder -> Maybe Natural -> Maybe POSIX -> Text -> Text -> ListChannelMessages

-- | The token passed by previous API calls until all requested messages
--   are returned.
[$sel:nextToken:ListChannelMessages'] :: ListChannelMessages -> Maybe (Sensitive Text)

-- | The initial or starting time stamp for your requested messages.
[$sel:notBefore:ListChannelMessages'] :: ListChannelMessages -> Maybe POSIX

-- | The order in which you want messages sorted. Default is Descending,
--   based on time created.
[$sel:sortOrder:ListChannelMessages'] :: ListChannelMessages -> Maybe SortOrder

-- | The maximum number of messages that you want returned.
[$sel:maxResults:ListChannelMessages'] :: ListChannelMessages -> Maybe Natural

-- | The final or ending time stamp for your requested messages.
[$sel:notAfter:ListChannelMessages'] :: ListChannelMessages -> Maybe POSIX

-- | The ARN of the channel.
[$sel:channelArn:ListChannelMessages'] :: ListChannelMessages -> Text

-- | The <tt>AppInstanceUserArn</tt> of the user that makes the API call.
[$sel:chimeBearer:ListChannelMessages'] :: ListChannelMessages -> Text

-- | Create a value of <a>ListChannelMessages</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListChannelMessages'</a>,
--   <a>listChannelMessages_nextToken</a> - The token passed by previous
--   API calls until all requested messages are returned.
--   
--   <a>$sel:notBefore:ListChannelMessages'</a>,
--   <a>listChannelMessages_notBefore</a> - The initial or starting time
--   stamp for your requested messages.
--   
--   <a>$sel:sortOrder:ListChannelMessages'</a>,
--   <a>listChannelMessages_sortOrder</a> - The order in which you want
--   messages sorted. Default is Descending, based on time created.
--   
--   <a>$sel:maxResults:ListChannelMessages'</a>,
--   <a>listChannelMessages_maxResults</a> - The maximum number of messages
--   that you want returned.
--   
--   <a>$sel:notAfter:ListChannelMessages'</a>,
--   <a>listChannelMessages_notAfter</a> - The final or ending time stamp
--   for your requested messages.
--   
--   <a>$sel:channelArn:ListChannelMessages'</a>,
--   <a>listChannelMessages_channelArn</a> - The ARN of the channel.
--   
--   <a>$sel:chimeBearer:ListChannelMessages'</a>,
--   <a>listChannelMessages_chimeBearer</a> - The
--   <tt>AppInstanceUserArn</tt> of the user that makes the API call.
newListChannelMessages :: Text -> Text -> ListChannelMessages

-- | The token passed by previous API calls until all requested messages
--   are returned.
listChannelMessages_nextToken :: Lens' ListChannelMessages (Maybe Text)

-- | The initial or starting time stamp for your requested messages.
listChannelMessages_notBefore :: Lens' ListChannelMessages (Maybe UTCTime)

-- | The order in which you want messages sorted. Default is Descending,
--   based on time created.
listChannelMessages_sortOrder :: Lens' ListChannelMessages (Maybe SortOrder)

-- | The maximum number of messages that you want returned.
listChannelMessages_maxResults :: Lens' ListChannelMessages (Maybe Natural)

-- | The final or ending time stamp for your requested messages.
listChannelMessages_notAfter :: Lens' ListChannelMessages (Maybe UTCTime)

-- | The ARN of the channel.
listChannelMessages_channelArn :: Lens' ListChannelMessages Text

-- | The <tt>AppInstanceUserArn</tt> of the user that makes the API call.
listChannelMessages_chimeBearer :: Lens' ListChannelMessages Text

-- | <i>See:</i> <a>newListChannelMessagesResponse</a> smart constructor.
data ListChannelMessagesResponse
ListChannelMessagesResponse' :: Maybe Text -> Maybe (Sensitive Text) -> Maybe [ChannelMessageSummary] -> Int -> ListChannelMessagesResponse

-- | The ARN of the channel containing the requested messages.
[$sel:channelArn:ListChannelMessagesResponse'] :: ListChannelMessagesResponse -> Maybe Text

-- | The token passed by previous API calls until all requested messages
--   are returned.
[$sel:nextToken:ListChannelMessagesResponse'] :: ListChannelMessagesResponse -> Maybe (Sensitive Text)

-- | The information about, and content of, each requested message.
[$sel:channelMessages:ListChannelMessagesResponse'] :: ListChannelMessagesResponse -> Maybe [ChannelMessageSummary]

-- | The response's http status code.
[$sel:httpStatus:ListChannelMessagesResponse'] :: ListChannelMessagesResponse -> Int

-- | Create a value of <a>ListChannelMessagesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:channelArn:ListChannelMessages'</a>,
--   <a>listChannelMessagesResponse_channelArn</a> - The ARN of the channel
--   containing the requested messages.
--   
--   <a>$sel:nextToken:ListChannelMessages'</a>,
--   <a>listChannelMessagesResponse_nextToken</a> - The token passed by
--   previous API calls until all requested messages are returned.
--   
--   <a>$sel:channelMessages:ListChannelMessagesResponse'</a>,
--   <a>listChannelMessagesResponse_channelMessages</a> - The information
--   about, and content of, each requested message.
--   
--   <a>$sel:httpStatus:ListChannelMessagesResponse'</a>,
--   <a>listChannelMessagesResponse_httpStatus</a> - The response's http
--   status code.
newListChannelMessagesResponse :: Int -> ListChannelMessagesResponse

-- | The ARN of the channel containing the requested messages.
listChannelMessagesResponse_channelArn :: Lens' ListChannelMessagesResponse (Maybe Text)

-- | The token passed by previous API calls until all requested messages
--   are returned.
listChannelMessagesResponse_nextToken :: Lens' ListChannelMessagesResponse (Maybe Text)

-- | The information about, and content of, each requested message.
listChannelMessagesResponse_channelMessages :: Lens' ListChannelMessagesResponse (Maybe [ChannelMessageSummary])

-- | The response's http status code.
listChannelMessagesResponse_httpStatus :: Lens' ListChannelMessagesResponse Int
instance GHC.Generics.Generic Network.AWS.ChimeSDKMessaging.ListChannelMessages.ListChannelMessages
instance GHC.Show.Show Network.AWS.ChimeSDKMessaging.ListChannelMessages.ListChannelMessages
instance GHC.Classes.Eq Network.AWS.ChimeSDKMessaging.ListChannelMessages.ListChannelMessages
instance GHC.Generics.Generic Network.AWS.ChimeSDKMessaging.ListChannelMessages.ListChannelMessagesResponse
instance GHC.Show.Show Network.AWS.ChimeSDKMessaging.ListChannelMessages.ListChannelMessagesResponse
instance GHC.Classes.Eq Network.AWS.ChimeSDKMessaging.ListChannelMessages.ListChannelMessagesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ChimeSDKMessaging.ListChannelMessages.ListChannelMessages
instance Control.DeepSeq.NFData Network.AWS.ChimeSDKMessaging.ListChannelMessages.ListChannelMessagesResponse
instance Data.Hashable.Class.Hashable Network.AWS.ChimeSDKMessaging.ListChannelMessages.ListChannelMessages
instance Control.DeepSeq.NFData Network.AWS.ChimeSDKMessaging.ListChannelMessages.ListChannelMessages
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ChimeSDKMessaging.ListChannelMessages.ListChannelMessages
instance Network.AWS.Data.Path.ToPath Network.AWS.ChimeSDKMessaging.ListChannelMessages.ListChannelMessages
instance Network.AWS.Data.Query.ToQuery Network.AWS.ChimeSDKMessaging.ListChannelMessages.ListChannelMessages


-- | Lists all channels that a particular <tt>AppInstanceUser</tt> is a
--   part of. Only an <tt>AppInstanceAdmin</tt> can call the API with a
--   user ARN that is not their own.
--   
--   The <tt>x-amz-chime-bearer</tt> request header is mandatory. Use the
--   <tt>AppInstanceUserArn</tt> of the user that makes the API call as the
--   value in the header.
module Network.AWS.ChimeSDKMessaging.ListChannelMembershipsForAppInstanceUser

-- | <i>See:</i> <a>newListChannelMembershipsForAppInstanceUser</a> smart
--   constructor.
data ListChannelMembershipsForAppInstanceUser
ListChannelMembershipsForAppInstanceUser' :: Maybe Text -> Maybe (Sensitive Text) -> Maybe Natural -> Text -> ListChannelMembershipsForAppInstanceUser

-- | The ARN of the <tt>AppInstanceUser</tt>s
[$sel:appInstanceUserArn:ListChannelMembershipsForAppInstanceUser'] :: ListChannelMembershipsForAppInstanceUser -> Maybe Text

-- | The token returned from previous API requests until the number of
--   channel memberships is reached.
[$sel:nextToken:ListChannelMembershipsForAppInstanceUser'] :: ListChannelMembershipsForAppInstanceUser -> Maybe (Sensitive Text)

-- | The maximum number of users that you want returned.
[$sel:maxResults:ListChannelMembershipsForAppInstanceUser'] :: ListChannelMembershipsForAppInstanceUser -> Maybe Natural

-- | The <tt>AppInstanceUserArn</tt> of the user that makes the API call.
[$sel:chimeBearer:ListChannelMembershipsForAppInstanceUser'] :: ListChannelMembershipsForAppInstanceUser -> Text

-- | Create a value of <a>ListChannelMembershipsForAppInstanceUser</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:appInstanceUserArn:ListChannelMembershipsForAppInstanceUser'</a>,
--   <a>listChannelMembershipsForAppInstanceUser_appInstanceUserArn</a> -
--   The ARN of the <tt>AppInstanceUser</tt>s
--   
--   <a>$sel:nextToken:ListChannelMembershipsForAppInstanceUser'</a>,
--   <a>listChannelMembershipsForAppInstanceUser_nextToken</a> - The token
--   returned from previous API requests until the number of channel
--   memberships is reached.
--   
--   <a>$sel:maxResults:ListChannelMembershipsForAppInstanceUser'</a>,
--   <a>listChannelMembershipsForAppInstanceUser_maxResults</a> - The
--   maximum number of users that you want returned.
--   
--   <a>$sel:chimeBearer:ListChannelMembershipsForAppInstanceUser'</a>,
--   <a>listChannelMembershipsForAppInstanceUser_chimeBearer</a> - The
--   <tt>AppInstanceUserArn</tt> of the user that makes the API call.
newListChannelMembershipsForAppInstanceUser :: Text -> ListChannelMembershipsForAppInstanceUser

-- | The ARN of the <tt>AppInstanceUser</tt>s
listChannelMembershipsForAppInstanceUser_appInstanceUserArn :: Lens' ListChannelMembershipsForAppInstanceUser (Maybe Text)

-- | The token returned from previous API requests until the number of
--   channel memberships is reached.
listChannelMembershipsForAppInstanceUser_nextToken :: Lens' ListChannelMembershipsForAppInstanceUser (Maybe Text)

-- | The maximum number of users that you want returned.
listChannelMembershipsForAppInstanceUser_maxResults :: Lens' ListChannelMembershipsForAppInstanceUser (Maybe Natural)

-- | The <tt>AppInstanceUserArn</tt> of the user that makes the API call.
listChannelMembershipsForAppInstanceUser_chimeBearer :: Lens' ListChannelMembershipsForAppInstanceUser Text

-- | <i>See:</i> <a>newListChannelMembershipsForAppInstanceUserResponse</a>
--   smart constructor.
data ListChannelMembershipsForAppInstanceUserResponse
ListChannelMembershipsForAppInstanceUserResponse' :: Maybe [ChannelMembershipForAppInstanceUserSummary] -> Maybe (Sensitive Text) -> Int -> ListChannelMembershipsForAppInstanceUserResponse

-- | The token passed by previous API calls until all requested users are
--   returned.
[$sel:channelMemberships:ListChannelMembershipsForAppInstanceUserResponse'] :: ListChannelMembershipsForAppInstanceUserResponse -> Maybe [ChannelMembershipForAppInstanceUserSummary]

-- | The token passed by previous API calls until all requested users are
--   returned.
[$sel:nextToken:ListChannelMembershipsForAppInstanceUserResponse'] :: ListChannelMembershipsForAppInstanceUserResponse -> Maybe (Sensitive Text)

-- | The response's http status code.
[$sel:httpStatus:ListChannelMembershipsForAppInstanceUserResponse'] :: ListChannelMembershipsForAppInstanceUserResponse -> Int

-- | Create a value of
--   <a>ListChannelMembershipsForAppInstanceUserResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:channelMemberships:ListChannelMembershipsForAppInstanceUserResponse'</a>,
--   <a>listChannelMembershipsForAppInstanceUserResponse_channelMemberships</a>
--   - The token passed by previous API calls until all requested users are
--   returned.
--   
--   <a>$sel:nextToken:ListChannelMembershipsForAppInstanceUser'</a>,
--   <a>listChannelMembershipsForAppInstanceUserResponse_nextToken</a> -
--   The token passed by previous API calls until all requested users are
--   returned.
--   
--   
--   <a>$sel:httpStatus:ListChannelMembershipsForAppInstanceUserResponse'</a>,
--   <a>listChannelMembershipsForAppInstanceUserResponse_httpStatus</a> -
--   The response's http status code.
newListChannelMembershipsForAppInstanceUserResponse :: Int -> ListChannelMembershipsForAppInstanceUserResponse

-- | The token passed by previous API calls until all requested users are
--   returned.
listChannelMembershipsForAppInstanceUserResponse_channelMemberships :: Lens' ListChannelMembershipsForAppInstanceUserResponse (Maybe [ChannelMembershipForAppInstanceUserSummary])

-- | The token passed by previous API calls until all requested users are
--   returned.
listChannelMembershipsForAppInstanceUserResponse_nextToken :: Lens' ListChannelMembershipsForAppInstanceUserResponse (Maybe Text)

-- | The response's http status code.
listChannelMembershipsForAppInstanceUserResponse_httpStatus :: Lens' ListChannelMembershipsForAppInstanceUserResponse Int
instance GHC.Generics.Generic Network.AWS.ChimeSDKMessaging.ListChannelMembershipsForAppInstanceUser.ListChannelMembershipsForAppInstanceUser
instance GHC.Show.Show Network.AWS.ChimeSDKMessaging.ListChannelMembershipsForAppInstanceUser.ListChannelMembershipsForAppInstanceUser
instance GHC.Classes.Eq Network.AWS.ChimeSDKMessaging.ListChannelMembershipsForAppInstanceUser.ListChannelMembershipsForAppInstanceUser
instance GHC.Generics.Generic Network.AWS.ChimeSDKMessaging.ListChannelMembershipsForAppInstanceUser.ListChannelMembershipsForAppInstanceUserResponse
instance GHC.Show.Show Network.AWS.ChimeSDKMessaging.ListChannelMembershipsForAppInstanceUser.ListChannelMembershipsForAppInstanceUserResponse
instance GHC.Classes.Eq Network.AWS.ChimeSDKMessaging.ListChannelMembershipsForAppInstanceUser.ListChannelMembershipsForAppInstanceUserResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ChimeSDKMessaging.ListChannelMembershipsForAppInstanceUser.ListChannelMembershipsForAppInstanceUser
instance Control.DeepSeq.NFData Network.AWS.ChimeSDKMessaging.ListChannelMembershipsForAppInstanceUser.ListChannelMembershipsForAppInstanceUserResponse
instance Data.Hashable.Class.Hashable Network.AWS.ChimeSDKMessaging.ListChannelMembershipsForAppInstanceUser.ListChannelMembershipsForAppInstanceUser
instance Control.DeepSeq.NFData Network.AWS.ChimeSDKMessaging.ListChannelMembershipsForAppInstanceUser.ListChannelMembershipsForAppInstanceUser
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ChimeSDKMessaging.ListChannelMembershipsForAppInstanceUser.ListChannelMembershipsForAppInstanceUser
instance Network.AWS.Data.Path.ToPath Network.AWS.ChimeSDKMessaging.ListChannelMembershipsForAppInstanceUser.ListChannelMembershipsForAppInstanceUser
instance Network.AWS.Data.Query.ToQuery Network.AWS.ChimeSDKMessaging.ListChannelMembershipsForAppInstanceUser.ListChannelMembershipsForAppInstanceUser


-- | Lists all channel memberships in a channel.
--   
--   The <tt>x-amz-chime-bearer</tt> request header is mandatory. Use the
--   <tt>AppInstanceUserArn</tt> of the user that makes the API call as the
--   value in the header.
module Network.AWS.ChimeSDKMessaging.ListChannelMemberships

-- | <i>See:</i> <a>newListChannelMemberships</a> smart constructor.
data ListChannelMemberships
ListChannelMemberships' :: Maybe (Sensitive Text) -> Maybe ChannelMembershipType -> Maybe Natural -> Text -> Text -> ListChannelMemberships

-- | The token passed by previous API calls until all requested channel
--   memberships are returned.
[$sel:nextToken:ListChannelMemberships'] :: ListChannelMemberships -> Maybe (Sensitive Text)

-- | The membership type of a user, <tt>DEFAULT</tt> or <tt>HIDDEN</tt>.
--   Default members are always returned as part of
--   <tt>ListChannelMemberships</tt>. Hidden members are only returned if
--   the type filter in <tt>ListChannelMemberships</tt> equals
--   <tt>HIDDEN</tt>. Otherwise hidden members are not returned.
[$sel:type':ListChannelMemberships'] :: ListChannelMemberships -> Maybe ChannelMembershipType

-- | The maximum number of channel memberships that you want returned.
[$sel:maxResults:ListChannelMemberships'] :: ListChannelMemberships -> Maybe Natural

-- | The maximum number of channel memberships that you want returned.
[$sel:channelArn:ListChannelMemberships'] :: ListChannelMemberships -> Text

-- | The <tt>AppInstanceUserArn</tt> of the user that makes the API call.
[$sel:chimeBearer:ListChannelMemberships'] :: ListChannelMemberships -> Text

-- | Create a value of <a>ListChannelMemberships</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListChannelMemberships'</a>,
--   <a>listChannelMemberships_nextToken</a> - The token passed by previous
--   API calls until all requested channel memberships are returned.
--   
--   <a>$sel:type':ListChannelMemberships'</a>,
--   <a>listChannelMemberships_type</a> - The membership type of a user,
--   <tt>DEFAULT</tt> or <tt>HIDDEN</tt>. Default members are always
--   returned as part of <tt>ListChannelMemberships</tt>. Hidden members
--   are only returned if the type filter in
--   <tt>ListChannelMemberships</tt> equals <tt>HIDDEN</tt>. Otherwise
--   hidden members are not returned.
--   
--   <a>$sel:maxResults:ListChannelMemberships'</a>,
--   <a>listChannelMemberships_maxResults</a> - The maximum number of
--   channel memberships that you want returned.
--   
--   <a>$sel:channelArn:ListChannelMemberships'</a>,
--   <a>listChannelMemberships_channelArn</a> - The maximum number of
--   channel memberships that you want returned.
--   
--   <a>$sel:chimeBearer:ListChannelMemberships'</a>,
--   <a>listChannelMemberships_chimeBearer</a> - The
--   <tt>AppInstanceUserArn</tt> of the user that makes the API call.
newListChannelMemberships :: Text -> Text -> ListChannelMemberships

-- | The token passed by previous API calls until all requested channel
--   memberships are returned.
listChannelMemberships_nextToken :: Lens' ListChannelMemberships (Maybe Text)

-- | The membership type of a user, <tt>DEFAULT</tt> or <tt>HIDDEN</tt>.
--   Default members are always returned as part of
--   <tt>ListChannelMemberships</tt>. Hidden members are only returned if
--   the type filter in <tt>ListChannelMemberships</tt> equals
--   <tt>HIDDEN</tt>. Otherwise hidden members are not returned.
listChannelMemberships_type :: Lens' ListChannelMemberships (Maybe ChannelMembershipType)

-- | The maximum number of channel memberships that you want returned.
listChannelMemberships_maxResults :: Lens' ListChannelMemberships (Maybe Natural)

-- | The maximum number of channel memberships that you want returned.
listChannelMemberships_channelArn :: Lens' ListChannelMemberships Text

-- | The <tt>AppInstanceUserArn</tt> of the user that makes the API call.
listChannelMemberships_chimeBearer :: Lens' ListChannelMemberships Text

-- | <i>See:</i> <a>newListChannelMembershipsResponse</a> smart
--   constructor.
data ListChannelMembershipsResponse
ListChannelMembershipsResponse' :: Maybe [ChannelMembershipSummary] -> Maybe Text -> Maybe (Sensitive Text) -> Int -> ListChannelMembershipsResponse

-- | The information for the requested channel memberships.
[$sel:channelMemberships:ListChannelMembershipsResponse'] :: ListChannelMembershipsResponse -> Maybe [ChannelMembershipSummary]

-- | The ARN of the channel.
[$sel:channelArn:ListChannelMembershipsResponse'] :: ListChannelMembershipsResponse -> Maybe Text

-- | The token passed by previous API calls until all requested channel
--   memberships are returned.
[$sel:nextToken:ListChannelMembershipsResponse'] :: ListChannelMembershipsResponse -> Maybe (Sensitive Text)

-- | The response's http status code.
[$sel:httpStatus:ListChannelMembershipsResponse'] :: ListChannelMembershipsResponse -> Int

-- | Create a value of <a>ListChannelMembershipsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:channelMemberships:ListChannelMembershipsResponse'</a>,
--   <a>listChannelMembershipsResponse_channelMemberships</a> - The
--   information for the requested channel memberships.
--   
--   <a>$sel:channelArn:ListChannelMemberships'</a>,
--   <a>listChannelMembershipsResponse_channelArn</a> - The ARN of the
--   channel.
--   
--   <a>$sel:nextToken:ListChannelMemberships'</a>,
--   <a>listChannelMembershipsResponse_nextToken</a> - The token passed by
--   previous API calls until all requested channel memberships are
--   returned.
--   
--   <a>$sel:httpStatus:ListChannelMembershipsResponse'</a>,
--   <a>listChannelMembershipsResponse_httpStatus</a> - The response's http
--   status code.
newListChannelMembershipsResponse :: Int -> ListChannelMembershipsResponse

-- | The information for the requested channel memberships.
listChannelMembershipsResponse_channelMemberships :: Lens' ListChannelMembershipsResponse (Maybe [ChannelMembershipSummary])

-- | The ARN of the channel.
listChannelMembershipsResponse_channelArn :: Lens' ListChannelMembershipsResponse (Maybe Text)

-- | The token passed by previous API calls until all requested channel
--   memberships are returned.
listChannelMembershipsResponse_nextToken :: Lens' ListChannelMembershipsResponse (Maybe Text)

-- | The response's http status code.
listChannelMembershipsResponse_httpStatus :: Lens' ListChannelMembershipsResponse Int
instance GHC.Generics.Generic Network.AWS.ChimeSDKMessaging.ListChannelMemberships.ListChannelMemberships
instance GHC.Show.Show Network.AWS.ChimeSDKMessaging.ListChannelMemberships.ListChannelMemberships
instance GHC.Classes.Eq Network.AWS.ChimeSDKMessaging.ListChannelMemberships.ListChannelMemberships
instance GHC.Generics.Generic Network.AWS.ChimeSDKMessaging.ListChannelMemberships.ListChannelMembershipsResponse
instance GHC.Show.Show Network.AWS.ChimeSDKMessaging.ListChannelMemberships.ListChannelMembershipsResponse
instance GHC.Classes.Eq Network.AWS.ChimeSDKMessaging.ListChannelMemberships.ListChannelMembershipsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ChimeSDKMessaging.ListChannelMemberships.ListChannelMemberships
instance Control.DeepSeq.NFData Network.AWS.ChimeSDKMessaging.ListChannelMemberships.ListChannelMembershipsResponse
instance Data.Hashable.Class.Hashable Network.AWS.ChimeSDKMessaging.ListChannelMemberships.ListChannelMemberships
instance Control.DeepSeq.NFData Network.AWS.ChimeSDKMessaging.ListChannelMemberships.ListChannelMemberships
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ChimeSDKMessaging.ListChannelMemberships.ListChannelMemberships
instance Network.AWS.Data.Path.ToPath Network.AWS.ChimeSDKMessaging.ListChannelMemberships.ListChannelMemberships
instance Network.AWS.Data.Query.ToQuery Network.AWS.ChimeSDKMessaging.ListChannelMemberships.ListChannelMemberships


-- | Returns a paginated lists of all the channel flows created under a
--   single Chime. This is a developer API.
module Network.AWS.ChimeSDKMessaging.ListChannelFlows

-- | <i>See:</i> <a>newListChannelFlows</a> smart constructor.
data ListChannelFlows
ListChannelFlows' :: Maybe (Sensitive Text) -> Maybe Natural -> Text -> ListChannelFlows

-- | The token passed by previous API calls until all requested channel
--   flows are returned.
[$sel:nextToken:ListChannelFlows'] :: ListChannelFlows -> Maybe (Sensitive Text)

-- | The maximum number of channel flows that you want to return.
[$sel:maxResults:ListChannelFlows'] :: ListChannelFlows -> Maybe Natural

-- | The ARN of the app instance.
[$sel:appInstanceArn:ListChannelFlows'] :: ListChannelFlows -> Text

-- | Create a value of <a>ListChannelFlows</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListChannelFlows'</a>,
--   <a>listChannelFlows_nextToken</a> - The token passed by previous API
--   calls until all requested channel flows are returned.
--   
--   <a>$sel:maxResults:ListChannelFlows'</a>,
--   <a>listChannelFlows_maxResults</a> - The maximum number of channel
--   flows that you want to return.
--   
--   <a>$sel:appInstanceArn:ListChannelFlows'</a>,
--   <a>listChannelFlows_appInstanceArn</a> - The ARN of the app instance.
newListChannelFlows :: Text -> ListChannelFlows

-- | The token passed by previous API calls until all requested channel
--   flows are returned.
listChannelFlows_nextToken :: Lens' ListChannelFlows (Maybe Text)

-- | The maximum number of channel flows that you want to return.
listChannelFlows_maxResults :: Lens' ListChannelFlows (Maybe Natural)

-- | The ARN of the app instance.
listChannelFlows_appInstanceArn :: Lens' ListChannelFlows Text

-- | <i>See:</i> <a>newListChannelFlowsResponse</a> smart constructor.
data ListChannelFlowsResponse
ListChannelFlowsResponse' :: Maybe [ChannelFlowSummary] -> Maybe (Sensitive Text) -> Int -> ListChannelFlowsResponse

-- | The information about each channel flow.
[$sel:channelFlows:ListChannelFlowsResponse'] :: ListChannelFlowsResponse -> Maybe [ChannelFlowSummary]

-- | The token passed by previous API calls until all requested channels
--   are returned.
[$sel:nextToken:ListChannelFlowsResponse'] :: ListChannelFlowsResponse -> Maybe (Sensitive Text)

-- | The response's http status code.
[$sel:httpStatus:ListChannelFlowsResponse'] :: ListChannelFlowsResponse -> Int

-- | Create a value of <a>ListChannelFlowsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:channelFlows:ListChannelFlowsResponse'</a>,
--   <a>listChannelFlowsResponse_channelFlows</a> - The information about
--   each channel flow.
--   
--   <a>$sel:nextToken:ListChannelFlows'</a>,
--   <a>listChannelFlowsResponse_nextToken</a> - The token passed by
--   previous API calls until all requested channels are returned.
--   
--   <a>$sel:httpStatus:ListChannelFlowsResponse'</a>,
--   <a>listChannelFlowsResponse_httpStatus</a> - The response's http
--   status code.
newListChannelFlowsResponse :: Int -> ListChannelFlowsResponse

-- | The information about each channel flow.
listChannelFlowsResponse_channelFlows :: Lens' ListChannelFlowsResponse (Maybe [ChannelFlowSummary])

-- | The token passed by previous API calls until all requested channels
--   are returned.
listChannelFlowsResponse_nextToken :: Lens' ListChannelFlowsResponse (Maybe Text)

-- | The response's http status code.
listChannelFlowsResponse_httpStatus :: Lens' ListChannelFlowsResponse Int
instance GHC.Generics.Generic Network.AWS.ChimeSDKMessaging.ListChannelFlows.ListChannelFlows
instance GHC.Show.Show Network.AWS.ChimeSDKMessaging.ListChannelFlows.ListChannelFlows
instance GHC.Classes.Eq Network.AWS.ChimeSDKMessaging.ListChannelFlows.ListChannelFlows
instance GHC.Generics.Generic Network.AWS.ChimeSDKMessaging.ListChannelFlows.ListChannelFlowsResponse
instance GHC.Show.Show Network.AWS.ChimeSDKMessaging.ListChannelFlows.ListChannelFlowsResponse
instance GHC.Classes.Eq Network.AWS.ChimeSDKMessaging.ListChannelFlows.ListChannelFlowsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ChimeSDKMessaging.ListChannelFlows.ListChannelFlows
instance Control.DeepSeq.NFData Network.AWS.ChimeSDKMessaging.ListChannelFlows.ListChannelFlowsResponse
instance Data.Hashable.Class.Hashable Network.AWS.ChimeSDKMessaging.ListChannelFlows.ListChannelFlows
instance Control.DeepSeq.NFData Network.AWS.ChimeSDKMessaging.ListChannelFlows.ListChannelFlows
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ChimeSDKMessaging.ListChannelFlows.ListChannelFlows
instance Network.AWS.Data.Path.ToPath Network.AWS.ChimeSDKMessaging.ListChannelFlows.ListChannelFlows
instance Network.AWS.Data.Query.ToQuery Network.AWS.ChimeSDKMessaging.ListChannelFlows.ListChannelFlows


-- | Lists all the users banned from a particular channel.
--   
--   The <tt>x-amz-chime-bearer</tt> request header is mandatory. Use the
--   <tt>AppInstanceUserArn</tt> of the user that makes the API call as the
--   value in the header.
module Network.AWS.ChimeSDKMessaging.ListChannelBans

-- | <i>See:</i> <a>newListChannelBans</a> smart constructor.
data ListChannelBans
ListChannelBans' :: Maybe (Sensitive Text) -> Maybe Natural -> Text -> Text -> ListChannelBans

-- | The token passed by previous API calls until all requested bans are
--   returned.
[$sel:nextToken:ListChannelBans'] :: ListChannelBans -> Maybe (Sensitive Text)

-- | The maximum number of bans that you want returned.
[$sel:maxResults:ListChannelBans'] :: ListChannelBans -> Maybe Natural

-- | The ARN of the channel.
[$sel:channelArn:ListChannelBans'] :: ListChannelBans -> Text

-- | The <tt>AppInstanceUserArn</tt> of the user that makes the API call.
[$sel:chimeBearer:ListChannelBans'] :: ListChannelBans -> Text

-- | Create a value of <a>ListChannelBans</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListChannelBans'</a>,
--   <a>listChannelBans_nextToken</a> - The token passed by previous API
--   calls until all requested bans are returned.
--   
--   <a>$sel:maxResults:ListChannelBans'</a>,
--   <a>listChannelBans_maxResults</a> - The maximum number of bans that
--   you want returned.
--   
--   <a>$sel:channelArn:ListChannelBans'</a>,
--   <a>listChannelBans_channelArn</a> - The ARN of the channel.
--   
--   <a>$sel:chimeBearer:ListChannelBans'</a>,
--   <a>listChannelBans_chimeBearer</a> - The <tt>AppInstanceUserArn</tt>
--   of the user that makes the API call.
newListChannelBans :: Text -> Text -> ListChannelBans

-- | The token passed by previous API calls until all requested bans are
--   returned.
listChannelBans_nextToken :: Lens' ListChannelBans (Maybe Text)

-- | The maximum number of bans that you want returned.
listChannelBans_maxResults :: Lens' ListChannelBans (Maybe Natural)

-- | The ARN of the channel.
listChannelBans_channelArn :: Lens' ListChannelBans Text

-- | The <tt>AppInstanceUserArn</tt> of the user that makes the API call.
listChannelBans_chimeBearer :: Lens' ListChannelBans Text

-- | <i>See:</i> <a>newListChannelBansResponse</a> smart constructor.
data ListChannelBansResponse
ListChannelBansResponse' :: Maybe Text -> Maybe (Sensitive Text) -> Maybe [ChannelBanSummary] -> Int -> ListChannelBansResponse

-- | The ARN of the channel.
[$sel:channelArn:ListChannelBansResponse'] :: ListChannelBansResponse -> Maybe Text

-- | The token passed by previous API calls until all requested bans are
--   returned.
[$sel:nextToken:ListChannelBansResponse'] :: ListChannelBansResponse -> Maybe (Sensitive Text)

-- | The information for each requested ban.
[$sel:channelBans:ListChannelBansResponse'] :: ListChannelBansResponse -> Maybe [ChannelBanSummary]

-- | The response's http status code.
[$sel:httpStatus:ListChannelBansResponse'] :: ListChannelBansResponse -> Int

-- | Create a value of <a>ListChannelBansResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:channelArn:ListChannelBans'</a>,
--   <a>listChannelBansResponse_channelArn</a> - The ARN of the channel.
--   
--   <a>$sel:nextToken:ListChannelBans'</a>,
--   <a>listChannelBansResponse_nextToken</a> - The token passed by
--   previous API calls until all requested bans are returned.
--   
--   <a>$sel:channelBans:ListChannelBansResponse'</a>,
--   <a>listChannelBansResponse_channelBans</a> - The information for each
--   requested ban.
--   
--   <a>$sel:httpStatus:ListChannelBansResponse'</a>,
--   <a>listChannelBansResponse_httpStatus</a> - The response's http status
--   code.
newListChannelBansResponse :: Int -> ListChannelBansResponse

-- | The ARN of the channel.
listChannelBansResponse_channelArn :: Lens' ListChannelBansResponse (Maybe Text)

-- | The token passed by previous API calls until all requested bans are
--   returned.
listChannelBansResponse_nextToken :: Lens' ListChannelBansResponse (Maybe Text)

-- | The information for each requested ban.
listChannelBansResponse_channelBans :: Lens' ListChannelBansResponse (Maybe [ChannelBanSummary])

-- | The response's http status code.
listChannelBansResponse_httpStatus :: Lens' ListChannelBansResponse Int
instance GHC.Generics.Generic Network.AWS.ChimeSDKMessaging.ListChannelBans.ListChannelBans
instance GHC.Show.Show Network.AWS.ChimeSDKMessaging.ListChannelBans.ListChannelBans
instance GHC.Classes.Eq Network.AWS.ChimeSDKMessaging.ListChannelBans.ListChannelBans
instance GHC.Generics.Generic Network.AWS.ChimeSDKMessaging.ListChannelBans.ListChannelBansResponse
instance GHC.Show.Show Network.AWS.ChimeSDKMessaging.ListChannelBans.ListChannelBansResponse
instance GHC.Classes.Eq Network.AWS.ChimeSDKMessaging.ListChannelBans.ListChannelBansResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ChimeSDKMessaging.ListChannelBans.ListChannelBans
instance Control.DeepSeq.NFData Network.AWS.ChimeSDKMessaging.ListChannelBans.ListChannelBansResponse
instance Data.Hashable.Class.Hashable Network.AWS.ChimeSDKMessaging.ListChannelBans.ListChannelBans
instance Control.DeepSeq.NFData Network.AWS.ChimeSDKMessaging.ListChannelBans.ListChannelBans
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ChimeSDKMessaging.ListChannelBans.ListChannelBans
instance Network.AWS.Data.Path.ToPath Network.AWS.ChimeSDKMessaging.ListChannelBans.ListChannelBans
instance Network.AWS.Data.Query.ToQuery Network.AWS.ChimeSDKMessaging.ListChannelBans.ListChannelBans


-- | The details of the endpoint for the messaging session.
module Network.AWS.ChimeSDKMessaging.GetMessagingSessionEndpoint

-- | <i>See:</i> <a>newGetMessagingSessionEndpoint</a> smart constructor.
data GetMessagingSessionEndpoint
GetMessagingSessionEndpoint' :: GetMessagingSessionEndpoint

-- | Create a value of <a>GetMessagingSessionEndpoint</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newGetMessagingSessionEndpoint :: GetMessagingSessionEndpoint

-- | <i>See:</i> <a>newGetMessagingSessionEndpointResponse</a> smart
--   constructor.
data GetMessagingSessionEndpointResponse
GetMessagingSessionEndpointResponse' :: Maybe MessagingSessionEndpoint -> Int -> GetMessagingSessionEndpointResponse

-- | The endpoint returned in the response.
[$sel:endpoint:GetMessagingSessionEndpointResponse'] :: GetMessagingSessionEndpointResponse -> Maybe MessagingSessionEndpoint

-- | The response's http status code.
[$sel:httpStatus:GetMessagingSessionEndpointResponse'] :: GetMessagingSessionEndpointResponse -> Int

-- | Create a value of <a>GetMessagingSessionEndpointResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:endpoint:GetMessagingSessionEndpointResponse'</a>,
--   <a>getMessagingSessionEndpointResponse_endpoint</a> - The endpoint
--   returned in the response.
--   
--   <a>$sel:httpStatus:GetMessagingSessionEndpointResponse'</a>,
--   <a>getMessagingSessionEndpointResponse_httpStatus</a> - The response's
--   http status code.
newGetMessagingSessionEndpointResponse :: Int -> GetMessagingSessionEndpointResponse

-- | The endpoint returned in the response.
getMessagingSessionEndpointResponse_endpoint :: Lens' GetMessagingSessionEndpointResponse (Maybe MessagingSessionEndpoint)

-- | The response's http status code.
getMessagingSessionEndpointResponse_httpStatus :: Lens' GetMessagingSessionEndpointResponse Int
instance GHC.Generics.Generic Network.AWS.ChimeSDKMessaging.GetMessagingSessionEndpoint.GetMessagingSessionEndpoint
instance GHC.Show.Show Network.AWS.ChimeSDKMessaging.GetMessagingSessionEndpoint.GetMessagingSessionEndpoint
instance GHC.Read.Read Network.AWS.ChimeSDKMessaging.GetMessagingSessionEndpoint.GetMessagingSessionEndpoint
instance GHC.Classes.Eq Network.AWS.ChimeSDKMessaging.GetMessagingSessionEndpoint.GetMessagingSessionEndpoint
instance GHC.Generics.Generic Network.AWS.ChimeSDKMessaging.GetMessagingSessionEndpoint.GetMessagingSessionEndpointResponse
instance GHC.Show.Show Network.AWS.ChimeSDKMessaging.GetMessagingSessionEndpoint.GetMessagingSessionEndpointResponse
instance GHC.Read.Read Network.AWS.ChimeSDKMessaging.GetMessagingSessionEndpoint.GetMessagingSessionEndpointResponse
instance GHC.Classes.Eq Network.AWS.ChimeSDKMessaging.GetMessagingSessionEndpoint.GetMessagingSessionEndpointResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ChimeSDKMessaging.GetMessagingSessionEndpoint.GetMessagingSessionEndpoint
instance Control.DeepSeq.NFData Network.AWS.ChimeSDKMessaging.GetMessagingSessionEndpoint.GetMessagingSessionEndpointResponse
instance Data.Hashable.Class.Hashable Network.AWS.ChimeSDKMessaging.GetMessagingSessionEndpoint.GetMessagingSessionEndpoint
instance Control.DeepSeq.NFData Network.AWS.ChimeSDKMessaging.GetMessagingSessionEndpoint.GetMessagingSessionEndpoint
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ChimeSDKMessaging.GetMessagingSessionEndpoint.GetMessagingSessionEndpoint
instance Network.AWS.Data.Path.ToPath Network.AWS.ChimeSDKMessaging.GetMessagingSessionEndpoint.GetMessagingSessionEndpoint
instance Network.AWS.Data.Query.ToQuery Network.AWS.ChimeSDKMessaging.GetMessagingSessionEndpoint.GetMessagingSessionEndpoint


-- | Gets message status for a specified <tt>messageId</tt>. Use this API
--   to determine the intermediate status of messages going through channel
--   flow processing. The API provides an alternative to retrieving message
--   status if the event was not received because a client wasn't connected
--   to a websocket.
--   
--   Messages can have any one of these statuses.
--   
--   <ul>
--   <li><i>SENT</i> Message processed successfully</li>
--   <li><i>PENDING</i> Ongoing processing</li>
--   <li><i>FAILED</i> Processing failed</li>
--   <li><i>DENIED</i> Messasge denied by the processor</li>
--   </ul>
--   
--   <ul>
--   <li>This API does not return statuses for denied messages, because we
--   don't store them once the processor denies them.</li>
--   <li>Only the message sender can invoke this API.</li>
--   <li>The <tt>x-amz-chime-bearer</tt> request header is mandatory. Use
--   the <tt>AppInstanceUserArn</tt> of the user that makes the API call as
--   the value in the header</li>
--   </ul>
module Network.AWS.ChimeSDKMessaging.GetChannelMessageStatus

-- | <i>See:</i> <a>newGetChannelMessageStatus</a> smart constructor.
data GetChannelMessageStatus
GetChannelMessageStatus' :: Text -> Text -> Text -> GetChannelMessageStatus

-- | The ARN of the channel
[$sel:channelArn:GetChannelMessageStatus'] :: GetChannelMessageStatus -> Text

-- | The ID of the message.
[$sel:messageId:GetChannelMessageStatus'] :: GetChannelMessageStatus -> Text

-- | The <tt>AppInstanceUserArn</tt> of the user making the API call.
[$sel:chimeBearer:GetChannelMessageStatus'] :: GetChannelMessageStatus -> Text

-- | Create a value of <a>GetChannelMessageStatus</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:channelArn:GetChannelMessageStatus'</a>,
--   <a>getChannelMessageStatus_channelArn</a> - The ARN of the channel
--   
--   <a>$sel:messageId:GetChannelMessageStatus'</a>,
--   <a>getChannelMessageStatus_messageId</a> - The ID of the message.
--   
--   <a>$sel:chimeBearer:GetChannelMessageStatus'</a>,
--   <a>getChannelMessageStatus_chimeBearer</a> - The
--   <tt>AppInstanceUserArn</tt> of the user making the API call.
newGetChannelMessageStatus :: Text -> Text -> Text -> GetChannelMessageStatus

-- | The ARN of the channel
getChannelMessageStatus_channelArn :: Lens' GetChannelMessageStatus Text

-- | The ID of the message.
getChannelMessageStatus_messageId :: Lens' GetChannelMessageStatus Text

-- | The <tt>AppInstanceUserArn</tt> of the user making the API call.
getChannelMessageStatus_chimeBearer :: Lens' GetChannelMessageStatus Text

-- | <i>See:</i> <a>newGetChannelMessageStatusResponse</a> smart
--   constructor.
data GetChannelMessageStatusResponse
GetChannelMessageStatusResponse' :: Maybe ChannelMessageStatusStructure -> Int -> GetChannelMessageStatusResponse

-- | The message status and details.
[$sel:status:GetChannelMessageStatusResponse'] :: GetChannelMessageStatusResponse -> Maybe ChannelMessageStatusStructure

-- | The response's http status code.
[$sel:httpStatus:GetChannelMessageStatusResponse'] :: GetChannelMessageStatusResponse -> Int

-- | Create a value of <a>GetChannelMessageStatusResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:GetChannelMessageStatusResponse'</a>,
--   <a>getChannelMessageStatusResponse_status</a> - The message status and
--   details.
--   
--   <a>$sel:httpStatus:GetChannelMessageStatusResponse'</a>,
--   <a>getChannelMessageStatusResponse_httpStatus</a> - The response's
--   http status code.
newGetChannelMessageStatusResponse :: Int -> GetChannelMessageStatusResponse

-- | The message status and details.
getChannelMessageStatusResponse_status :: Lens' GetChannelMessageStatusResponse (Maybe ChannelMessageStatusStructure)

-- | The response's http status code.
getChannelMessageStatusResponse_httpStatus :: Lens' GetChannelMessageStatusResponse Int
instance GHC.Generics.Generic Network.AWS.ChimeSDKMessaging.GetChannelMessageStatus.GetChannelMessageStatus
instance GHC.Show.Show Network.AWS.ChimeSDKMessaging.GetChannelMessageStatus.GetChannelMessageStatus
instance GHC.Read.Read Network.AWS.ChimeSDKMessaging.GetChannelMessageStatus.GetChannelMessageStatus
instance GHC.Classes.Eq Network.AWS.ChimeSDKMessaging.GetChannelMessageStatus.GetChannelMessageStatus
instance GHC.Generics.Generic Network.AWS.ChimeSDKMessaging.GetChannelMessageStatus.GetChannelMessageStatusResponse
instance GHC.Show.Show Network.AWS.ChimeSDKMessaging.GetChannelMessageStatus.GetChannelMessageStatusResponse
instance GHC.Read.Read Network.AWS.ChimeSDKMessaging.GetChannelMessageStatus.GetChannelMessageStatusResponse
instance GHC.Classes.Eq Network.AWS.ChimeSDKMessaging.GetChannelMessageStatus.GetChannelMessageStatusResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ChimeSDKMessaging.GetChannelMessageStatus.GetChannelMessageStatus
instance Control.DeepSeq.NFData Network.AWS.ChimeSDKMessaging.GetChannelMessageStatus.GetChannelMessageStatusResponse
instance Data.Hashable.Class.Hashable Network.AWS.ChimeSDKMessaging.GetChannelMessageStatus.GetChannelMessageStatus
instance Control.DeepSeq.NFData Network.AWS.ChimeSDKMessaging.GetChannelMessageStatus.GetChannelMessageStatus
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ChimeSDKMessaging.GetChannelMessageStatus.GetChannelMessageStatus
instance Network.AWS.Data.Path.ToPath Network.AWS.ChimeSDKMessaging.GetChannelMessageStatus.GetChannelMessageStatus
instance Network.AWS.Data.Query.ToQuery Network.AWS.ChimeSDKMessaging.GetChannelMessageStatus.GetChannelMessageStatus


-- | Gets the full details of a channel message.
--   
--   The x-amz-chime-bearer request header is mandatory. Use the
--   <tt>AppInstanceUserArn</tt> of the user that makes the API call as the
--   value in the header.
module Network.AWS.ChimeSDKMessaging.GetChannelMessage

-- | <i>See:</i> <a>newGetChannelMessage</a> smart constructor.
data GetChannelMessage
GetChannelMessage' :: Text -> Text -> Text -> GetChannelMessage

-- | The ARN of the channel.
[$sel:channelArn:GetChannelMessage'] :: GetChannelMessage -> Text

-- | The ID of the message.
[$sel:messageId:GetChannelMessage'] :: GetChannelMessage -> Text

-- | The <tt>AppInstanceUserArn</tt> of the user that makes the API call.
[$sel:chimeBearer:GetChannelMessage'] :: GetChannelMessage -> Text

-- | Create a value of <a>GetChannelMessage</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:channelArn:GetChannelMessage'</a>,
--   <a>getChannelMessage_channelArn</a> - The ARN of the channel.
--   
--   <a>$sel:messageId:GetChannelMessage'</a>,
--   <a>getChannelMessage_messageId</a> - The ID of the message.
--   
--   <a>$sel:chimeBearer:GetChannelMessage'</a>,
--   <a>getChannelMessage_chimeBearer</a> - The <tt>AppInstanceUserArn</tt>
--   of the user that makes the API call.
newGetChannelMessage :: Text -> Text -> Text -> GetChannelMessage

-- | The ARN of the channel.
getChannelMessage_channelArn :: Lens' GetChannelMessage Text

-- | The ID of the message.
getChannelMessage_messageId :: Lens' GetChannelMessage Text

-- | The <tt>AppInstanceUserArn</tt> of the user that makes the API call.
getChannelMessage_chimeBearer :: Lens' GetChannelMessage Text

-- | <i>See:</i> <a>newGetChannelMessageResponse</a> smart constructor.
data GetChannelMessageResponse
GetChannelMessageResponse' :: Maybe ChannelMessage -> Int -> GetChannelMessageResponse

-- | The details of and content in the message.
[$sel:channelMessage:GetChannelMessageResponse'] :: GetChannelMessageResponse -> Maybe ChannelMessage

-- | The response's http status code.
[$sel:httpStatus:GetChannelMessageResponse'] :: GetChannelMessageResponse -> Int

-- | Create a value of <a>GetChannelMessageResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:channelMessage:GetChannelMessageResponse'</a>,
--   <a>getChannelMessageResponse_channelMessage</a> - The details of and
--   content in the message.
--   
--   <a>$sel:httpStatus:GetChannelMessageResponse'</a>,
--   <a>getChannelMessageResponse_httpStatus</a> - The response's http
--   status code.
newGetChannelMessageResponse :: Int -> GetChannelMessageResponse

-- | The details of and content in the message.
getChannelMessageResponse_channelMessage :: Lens' GetChannelMessageResponse (Maybe ChannelMessage)

-- | The response's http status code.
getChannelMessageResponse_httpStatus :: Lens' GetChannelMessageResponse Int
instance GHC.Generics.Generic Network.AWS.ChimeSDKMessaging.GetChannelMessage.GetChannelMessage
instance GHC.Show.Show Network.AWS.ChimeSDKMessaging.GetChannelMessage.GetChannelMessage
instance GHC.Read.Read Network.AWS.ChimeSDKMessaging.GetChannelMessage.GetChannelMessage
instance GHC.Classes.Eq Network.AWS.ChimeSDKMessaging.GetChannelMessage.GetChannelMessage
instance GHC.Generics.Generic Network.AWS.ChimeSDKMessaging.GetChannelMessage.GetChannelMessageResponse
instance GHC.Show.Show Network.AWS.ChimeSDKMessaging.GetChannelMessage.GetChannelMessageResponse
instance GHC.Classes.Eq Network.AWS.ChimeSDKMessaging.GetChannelMessage.GetChannelMessageResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ChimeSDKMessaging.GetChannelMessage.GetChannelMessage
instance Control.DeepSeq.NFData Network.AWS.ChimeSDKMessaging.GetChannelMessage.GetChannelMessageResponse
instance Data.Hashable.Class.Hashable Network.AWS.ChimeSDKMessaging.GetChannelMessage.GetChannelMessage
instance Control.DeepSeq.NFData Network.AWS.ChimeSDKMessaging.GetChannelMessage.GetChannelMessage
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ChimeSDKMessaging.GetChannelMessage.GetChannelMessage
instance Network.AWS.Data.Path.ToPath Network.AWS.ChimeSDKMessaging.GetChannelMessage.GetChannelMessage
instance Network.AWS.Data.Query.ToQuery Network.AWS.ChimeSDKMessaging.GetChannelMessage.GetChannelMessage


-- | Disassociates a channel flow from all its channels. Once
--   disassociated, all messages to that channel stop going through the
--   channel flow processor.
--   
--   Only administrators or channel moderators can disassociate a channel
--   flow. The <tt>x-amz-chime-bearer</tt> request header is mandatory. Use
--   the <tt>AppInstanceUserArn</tt> of the user that makes the API call as
--   the value in the header.
module Network.AWS.ChimeSDKMessaging.DisassociateChannelFlow

-- | <i>See:</i> <a>newDisassociateChannelFlow</a> smart constructor.
data DisassociateChannelFlow
DisassociateChannelFlow' :: Text -> Text -> Text -> DisassociateChannelFlow

-- | The ARN of the channel.
[$sel:channelArn:DisassociateChannelFlow'] :: DisassociateChannelFlow -> Text

-- | The ARN of the channel flow.
[$sel:channelFlowArn:DisassociateChannelFlow'] :: DisassociateChannelFlow -> Text

-- | The <tt>AppInstanceUserArn</tt> of the user making the API call.
[$sel:chimeBearer:DisassociateChannelFlow'] :: DisassociateChannelFlow -> Text

-- | Create a value of <a>DisassociateChannelFlow</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:channelArn:DisassociateChannelFlow'</a>,
--   <a>disassociateChannelFlow_channelArn</a> - The ARN of the channel.
--   
--   <a>$sel:channelFlowArn:DisassociateChannelFlow'</a>,
--   <a>disassociateChannelFlow_channelFlowArn</a> - The ARN of the channel
--   flow.
--   
--   <a>$sel:chimeBearer:DisassociateChannelFlow'</a>,
--   <a>disassociateChannelFlow_chimeBearer</a> - The
--   <tt>AppInstanceUserArn</tt> of the user making the API call.
newDisassociateChannelFlow :: Text -> Text -> Text -> DisassociateChannelFlow

-- | The ARN of the channel.
disassociateChannelFlow_channelArn :: Lens' DisassociateChannelFlow Text

-- | The ARN of the channel flow.
disassociateChannelFlow_channelFlowArn :: Lens' DisassociateChannelFlow Text

-- | The <tt>AppInstanceUserArn</tt> of the user making the API call.
disassociateChannelFlow_chimeBearer :: Lens' DisassociateChannelFlow Text

-- | <i>See:</i> <a>newDisassociateChannelFlowResponse</a> smart
--   constructor.
data DisassociateChannelFlowResponse
DisassociateChannelFlowResponse' :: DisassociateChannelFlowResponse

-- | Create a value of <a>DisassociateChannelFlowResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDisassociateChannelFlowResponse :: DisassociateChannelFlowResponse
instance GHC.Generics.Generic Network.AWS.ChimeSDKMessaging.DisassociateChannelFlow.DisassociateChannelFlow
instance GHC.Show.Show Network.AWS.ChimeSDKMessaging.DisassociateChannelFlow.DisassociateChannelFlow
instance GHC.Read.Read Network.AWS.ChimeSDKMessaging.DisassociateChannelFlow.DisassociateChannelFlow
instance GHC.Classes.Eq Network.AWS.ChimeSDKMessaging.DisassociateChannelFlow.DisassociateChannelFlow
instance GHC.Generics.Generic Network.AWS.ChimeSDKMessaging.DisassociateChannelFlow.DisassociateChannelFlowResponse
instance GHC.Show.Show Network.AWS.ChimeSDKMessaging.DisassociateChannelFlow.DisassociateChannelFlowResponse
instance GHC.Read.Read Network.AWS.ChimeSDKMessaging.DisassociateChannelFlow.DisassociateChannelFlowResponse
instance GHC.Classes.Eq Network.AWS.ChimeSDKMessaging.DisassociateChannelFlow.DisassociateChannelFlowResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ChimeSDKMessaging.DisassociateChannelFlow.DisassociateChannelFlow
instance Control.DeepSeq.NFData Network.AWS.ChimeSDKMessaging.DisassociateChannelFlow.DisassociateChannelFlowResponse
instance Data.Hashable.Class.Hashable Network.AWS.ChimeSDKMessaging.DisassociateChannelFlow.DisassociateChannelFlow
instance Control.DeepSeq.NFData Network.AWS.ChimeSDKMessaging.DisassociateChannelFlow.DisassociateChannelFlow
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ChimeSDKMessaging.DisassociateChannelFlow.DisassociateChannelFlow
instance Network.AWS.Data.Path.ToPath Network.AWS.ChimeSDKMessaging.DisassociateChannelFlow.DisassociateChannelFlow
instance Network.AWS.Data.Query.ToQuery Network.AWS.ChimeSDKMessaging.DisassociateChannelFlow.DisassociateChannelFlow


-- | Returns the full details of a single ChannelModerator.
--   
--   The <tt>x-amz-chime-bearer</tt> request header is mandatory. Use the
--   <tt>AppInstanceUserArn</tt> of the user that makes the API call as the
--   value in the header.
module Network.AWS.ChimeSDKMessaging.DescribeChannelModerator

-- | <i>See:</i> <a>newDescribeChannelModerator</a> smart constructor.
data DescribeChannelModerator
DescribeChannelModerator' :: Text -> Text -> Text -> DescribeChannelModerator

-- | The ARN of the channel.
[$sel:channelArn:DescribeChannelModerator'] :: DescribeChannelModerator -> Text

-- | The ARN of the channel moderator.
[$sel:channelModeratorArn:DescribeChannelModerator'] :: DescribeChannelModerator -> Text

-- | The <tt>AppInstanceUserArn</tt> of the user that makes the API call.
[$sel:chimeBearer:DescribeChannelModerator'] :: DescribeChannelModerator -> Text

-- | Create a value of <a>DescribeChannelModerator</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:channelArn:DescribeChannelModerator'</a>,
--   <a>describeChannelModerator_channelArn</a> - The ARN of the channel.
--   
--   <a>$sel:channelModeratorArn:DescribeChannelModerator'</a>,
--   <a>describeChannelModerator_channelModeratorArn</a> - The ARN of the
--   channel moderator.
--   
--   <a>$sel:chimeBearer:DescribeChannelModerator'</a>,
--   <a>describeChannelModerator_chimeBearer</a> - The
--   <tt>AppInstanceUserArn</tt> of the user that makes the API call.
newDescribeChannelModerator :: Text -> Text -> Text -> DescribeChannelModerator

-- | The ARN of the channel.
describeChannelModerator_channelArn :: Lens' DescribeChannelModerator Text

-- | The ARN of the channel moderator.
describeChannelModerator_channelModeratorArn :: Lens' DescribeChannelModerator Text

-- | The <tt>AppInstanceUserArn</tt> of the user that makes the API call.
describeChannelModerator_chimeBearer :: Lens' DescribeChannelModerator Text

-- | <i>See:</i> <a>newDescribeChannelModeratorResponse</a> smart
--   constructor.
data DescribeChannelModeratorResponse
DescribeChannelModeratorResponse' :: Maybe ChannelModerator -> Int -> DescribeChannelModeratorResponse

-- | The details of the channel moderator.
[$sel:channelModerator:DescribeChannelModeratorResponse'] :: DescribeChannelModeratorResponse -> Maybe ChannelModerator

-- | The response's http status code.
[$sel:httpStatus:DescribeChannelModeratorResponse'] :: DescribeChannelModeratorResponse -> Int

-- | Create a value of <a>DescribeChannelModeratorResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:channelModerator:DescribeChannelModeratorResponse'</a>,
--   <a>describeChannelModeratorResponse_channelModerator</a> - The details
--   of the channel moderator.
--   
--   <a>$sel:httpStatus:DescribeChannelModeratorResponse'</a>,
--   <a>describeChannelModeratorResponse_httpStatus</a> - The response's
--   http status code.
newDescribeChannelModeratorResponse :: Int -> DescribeChannelModeratorResponse

-- | The details of the channel moderator.
describeChannelModeratorResponse_channelModerator :: Lens' DescribeChannelModeratorResponse (Maybe ChannelModerator)

-- | The response's http status code.
describeChannelModeratorResponse_httpStatus :: Lens' DescribeChannelModeratorResponse Int
instance GHC.Generics.Generic Network.AWS.ChimeSDKMessaging.DescribeChannelModerator.DescribeChannelModerator
instance GHC.Show.Show Network.AWS.ChimeSDKMessaging.DescribeChannelModerator.DescribeChannelModerator
instance GHC.Read.Read Network.AWS.ChimeSDKMessaging.DescribeChannelModerator.DescribeChannelModerator
instance GHC.Classes.Eq Network.AWS.ChimeSDKMessaging.DescribeChannelModerator.DescribeChannelModerator
instance GHC.Generics.Generic Network.AWS.ChimeSDKMessaging.DescribeChannelModerator.DescribeChannelModeratorResponse
instance GHC.Show.Show Network.AWS.ChimeSDKMessaging.DescribeChannelModerator.DescribeChannelModeratorResponse
instance GHC.Classes.Eq Network.AWS.ChimeSDKMessaging.DescribeChannelModerator.DescribeChannelModeratorResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ChimeSDKMessaging.DescribeChannelModerator.DescribeChannelModerator
instance Control.DeepSeq.NFData Network.AWS.ChimeSDKMessaging.DescribeChannelModerator.DescribeChannelModeratorResponse
instance Data.Hashable.Class.Hashable Network.AWS.ChimeSDKMessaging.DescribeChannelModerator.DescribeChannelModerator
instance Control.DeepSeq.NFData Network.AWS.ChimeSDKMessaging.DescribeChannelModerator.DescribeChannelModerator
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ChimeSDKMessaging.DescribeChannelModerator.DescribeChannelModerator
instance Network.AWS.Data.Path.ToPath Network.AWS.ChimeSDKMessaging.DescribeChannelModerator.DescribeChannelModerator
instance Network.AWS.Data.Query.ToQuery Network.AWS.ChimeSDKMessaging.DescribeChannelModerator.DescribeChannelModerator


-- | Returns the full details of a channel moderated by the specified
--   <tt>AppInstanceUser</tt>.
--   
--   The <tt>x-amz-chime-bearer</tt> request header is mandatory. Use the
--   <tt>AppInstanceUserArn</tt> of the user that makes the API call as the
--   value in the header.
module Network.AWS.ChimeSDKMessaging.DescribeChannelModeratedByAppInstanceUser

-- | <i>See:</i> <a>newDescribeChannelModeratedByAppInstanceUser</a> smart
--   constructor.
data DescribeChannelModeratedByAppInstanceUser
DescribeChannelModeratedByAppInstanceUser' :: Text -> Text -> Text -> DescribeChannelModeratedByAppInstanceUser

-- | The ARN of the moderated channel.
[$sel:channelArn:DescribeChannelModeratedByAppInstanceUser'] :: DescribeChannelModeratedByAppInstanceUser -> Text

-- | The ARN of the <tt>AppInstanceUser</tt> in the moderated channel.
[$sel:appInstanceUserArn:DescribeChannelModeratedByAppInstanceUser'] :: DescribeChannelModeratedByAppInstanceUser -> Text

-- | The <tt>AppInstanceUserArn</tt> of the user that makes the API call.
[$sel:chimeBearer:DescribeChannelModeratedByAppInstanceUser'] :: DescribeChannelModeratedByAppInstanceUser -> Text

-- | Create a value of <a>DescribeChannelModeratedByAppInstanceUser</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:channelArn:DescribeChannelModeratedByAppInstanceUser'</a>,
--   <a>describeChannelModeratedByAppInstanceUser_channelArn</a> - The ARN
--   of the moderated channel.
--   
--   
--   <a>$sel:appInstanceUserArn:DescribeChannelModeratedByAppInstanceUser'</a>,
--   <a>describeChannelModeratedByAppInstanceUser_appInstanceUserArn</a> -
--   The ARN of the <tt>AppInstanceUser</tt> in the moderated channel.
--   
--   <a>$sel:chimeBearer:DescribeChannelModeratedByAppInstanceUser'</a>,
--   <a>describeChannelModeratedByAppInstanceUser_chimeBearer</a> - The
--   <tt>AppInstanceUserArn</tt> of the user that makes the API call.
newDescribeChannelModeratedByAppInstanceUser :: Text -> Text -> Text -> DescribeChannelModeratedByAppInstanceUser

-- | The ARN of the moderated channel.
describeChannelModeratedByAppInstanceUser_channelArn :: Lens' DescribeChannelModeratedByAppInstanceUser Text

-- | The ARN of the <tt>AppInstanceUser</tt> in the moderated channel.
describeChannelModeratedByAppInstanceUser_appInstanceUserArn :: Lens' DescribeChannelModeratedByAppInstanceUser Text

-- | The <tt>AppInstanceUserArn</tt> of the user that makes the API call.
describeChannelModeratedByAppInstanceUser_chimeBearer :: Lens' DescribeChannelModeratedByAppInstanceUser Text

-- | <i>See:</i>
--   <a>newDescribeChannelModeratedByAppInstanceUserResponse</a> smart
--   constructor.
data DescribeChannelModeratedByAppInstanceUserResponse
DescribeChannelModeratedByAppInstanceUserResponse' :: Maybe ChannelModeratedByAppInstanceUserSummary -> Int -> DescribeChannelModeratedByAppInstanceUserResponse

-- | The moderated channel.
[$sel:channel:DescribeChannelModeratedByAppInstanceUserResponse'] :: DescribeChannelModeratedByAppInstanceUserResponse -> Maybe ChannelModeratedByAppInstanceUserSummary

-- | The response's http status code.
[$sel:httpStatus:DescribeChannelModeratedByAppInstanceUserResponse'] :: DescribeChannelModeratedByAppInstanceUserResponse -> Int

-- | Create a value of
--   <a>DescribeChannelModeratedByAppInstanceUserResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:channel:DescribeChannelModeratedByAppInstanceUserResponse'</a>,
--   <a>describeChannelModeratedByAppInstanceUserResponse_channel</a> - The
--   moderated channel.
--   
--   
--   <a>$sel:httpStatus:DescribeChannelModeratedByAppInstanceUserResponse'</a>,
--   <a>describeChannelModeratedByAppInstanceUserResponse_httpStatus</a> -
--   The response's http status code.
newDescribeChannelModeratedByAppInstanceUserResponse :: Int -> DescribeChannelModeratedByAppInstanceUserResponse

-- | The moderated channel.
describeChannelModeratedByAppInstanceUserResponse_channel :: Lens' DescribeChannelModeratedByAppInstanceUserResponse (Maybe ChannelModeratedByAppInstanceUserSummary)

-- | The response's http status code.
describeChannelModeratedByAppInstanceUserResponse_httpStatus :: Lens' DescribeChannelModeratedByAppInstanceUserResponse Int
instance GHC.Generics.Generic Network.AWS.ChimeSDKMessaging.DescribeChannelModeratedByAppInstanceUser.DescribeChannelModeratedByAppInstanceUser
instance GHC.Show.Show Network.AWS.ChimeSDKMessaging.DescribeChannelModeratedByAppInstanceUser.DescribeChannelModeratedByAppInstanceUser
instance GHC.Read.Read Network.AWS.ChimeSDKMessaging.DescribeChannelModeratedByAppInstanceUser.DescribeChannelModeratedByAppInstanceUser
instance GHC.Classes.Eq Network.AWS.ChimeSDKMessaging.DescribeChannelModeratedByAppInstanceUser.DescribeChannelModeratedByAppInstanceUser
instance GHC.Generics.Generic Network.AWS.ChimeSDKMessaging.DescribeChannelModeratedByAppInstanceUser.DescribeChannelModeratedByAppInstanceUserResponse
instance GHC.Show.Show Network.AWS.ChimeSDKMessaging.DescribeChannelModeratedByAppInstanceUser.DescribeChannelModeratedByAppInstanceUserResponse
instance GHC.Classes.Eq Network.AWS.ChimeSDKMessaging.DescribeChannelModeratedByAppInstanceUser.DescribeChannelModeratedByAppInstanceUserResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ChimeSDKMessaging.DescribeChannelModeratedByAppInstanceUser.DescribeChannelModeratedByAppInstanceUser
instance Control.DeepSeq.NFData Network.AWS.ChimeSDKMessaging.DescribeChannelModeratedByAppInstanceUser.DescribeChannelModeratedByAppInstanceUserResponse
instance Data.Hashable.Class.Hashable Network.AWS.ChimeSDKMessaging.DescribeChannelModeratedByAppInstanceUser.DescribeChannelModeratedByAppInstanceUser
instance Control.DeepSeq.NFData Network.AWS.ChimeSDKMessaging.DescribeChannelModeratedByAppInstanceUser.DescribeChannelModeratedByAppInstanceUser
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ChimeSDKMessaging.DescribeChannelModeratedByAppInstanceUser.DescribeChannelModeratedByAppInstanceUser
instance Network.AWS.Data.Path.ToPath Network.AWS.ChimeSDKMessaging.DescribeChannelModeratedByAppInstanceUser.DescribeChannelModeratedByAppInstanceUser
instance Network.AWS.Data.Query.ToQuery Network.AWS.ChimeSDKMessaging.DescribeChannelModeratedByAppInstanceUser.DescribeChannelModeratedByAppInstanceUser


-- | Returns the details of a channel based on the membership of the
--   specified <tt>AppInstanceUser</tt>.
--   
--   The <tt>x-amz-chime-bearer</tt> request header is mandatory. Use the
--   <tt>AppInstanceUserArn</tt> of the user that makes the API call as the
--   value in the header.
module Network.AWS.ChimeSDKMessaging.DescribeChannelMembershipForAppInstanceUser

-- | <i>See:</i> <a>newDescribeChannelMembershipForAppInstanceUser</a>
--   smart constructor.
data DescribeChannelMembershipForAppInstanceUser
DescribeChannelMembershipForAppInstanceUser' :: Text -> Text -> Text -> DescribeChannelMembershipForAppInstanceUser

-- | The ARN of the channel to which the user belongs.
[$sel:channelArn:DescribeChannelMembershipForAppInstanceUser'] :: DescribeChannelMembershipForAppInstanceUser -> Text

-- | The ARN of the user in a channel.
[$sel:appInstanceUserArn:DescribeChannelMembershipForAppInstanceUser'] :: DescribeChannelMembershipForAppInstanceUser -> Text

-- | The <tt>AppInstanceUserArn</tt> of the user that makes the API call.
[$sel:chimeBearer:DescribeChannelMembershipForAppInstanceUser'] :: DescribeChannelMembershipForAppInstanceUser -> Text

-- | Create a value of <a>DescribeChannelMembershipForAppInstanceUser</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:channelArn:DescribeChannelMembershipForAppInstanceUser'</a>,
--   <a>describeChannelMembershipForAppInstanceUser_channelArn</a> - The
--   ARN of the channel to which the user belongs.
--   
--   
--   <a>$sel:appInstanceUserArn:DescribeChannelMembershipForAppInstanceUser'</a>,
--   <a>describeChannelMembershipForAppInstanceUser_appInstanceUserArn</a>
--   - The ARN of the user in a channel.
--   
--   <a>$sel:chimeBearer:DescribeChannelMembershipForAppInstanceUser'</a>,
--   <a>describeChannelMembershipForAppInstanceUser_chimeBearer</a> - The
--   <tt>AppInstanceUserArn</tt> of the user that makes the API call.
newDescribeChannelMembershipForAppInstanceUser :: Text -> Text -> Text -> DescribeChannelMembershipForAppInstanceUser

-- | The ARN of the channel to which the user belongs.
describeChannelMembershipForAppInstanceUser_channelArn :: Lens' DescribeChannelMembershipForAppInstanceUser Text

-- | The ARN of the user in a channel.
describeChannelMembershipForAppInstanceUser_appInstanceUserArn :: Lens' DescribeChannelMembershipForAppInstanceUser Text

-- | The <tt>AppInstanceUserArn</tt> of the user that makes the API call.
describeChannelMembershipForAppInstanceUser_chimeBearer :: Lens' DescribeChannelMembershipForAppInstanceUser Text

-- | <i>See:</i>
--   <a>newDescribeChannelMembershipForAppInstanceUserResponse</a> smart
--   constructor.
data DescribeChannelMembershipForAppInstanceUserResponse
DescribeChannelMembershipForAppInstanceUserResponse' :: Maybe ChannelMembershipForAppInstanceUserSummary -> Int -> DescribeChannelMembershipForAppInstanceUserResponse

-- | The channel to which a user belongs.
[$sel:channelMembership:DescribeChannelMembershipForAppInstanceUserResponse'] :: DescribeChannelMembershipForAppInstanceUserResponse -> Maybe ChannelMembershipForAppInstanceUserSummary

-- | The response's http status code.
[$sel:httpStatus:DescribeChannelMembershipForAppInstanceUserResponse'] :: DescribeChannelMembershipForAppInstanceUserResponse -> Int

-- | Create a value of
--   <a>DescribeChannelMembershipForAppInstanceUserResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:channelMembership:DescribeChannelMembershipForAppInstanceUserResponse'</a>,
--   <a>describeChannelMembershipForAppInstanceUserResponse_channelMembership</a>
--   - The channel to which a user belongs.
--   
--   
--   <a>$sel:httpStatus:DescribeChannelMembershipForAppInstanceUserResponse'</a>,
--   <a>describeChannelMembershipForAppInstanceUserResponse_httpStatus</a>
--   - The response's http status code.
newDescribeChannelMembershipForAppInstanceUserResponse :: Int -> DescribeChannelMembershipForAppInstanceUserResponse

-- | The channel to which a user belongs.
describeChannelMembershipForAppInstanceUserResponse_channelMembership :: Lens' DescribeChannelMembershipForAppInstanceUserResponse (Maybe ChannelMembershipForAppInstanceUserSummary)

-- | The response's http status code.
describeChannelMembershipForAppInstanceUserResponse_httpStatus :: Lens' DescribeChannelMembershipForAppInstanceUserResponse Int
instance GHC.Generics.Generic Network.AWS.ChimeSDKMessaging.DescribeChannelMembershipForAppInstanceUser.DescribeChannelMembershipForAppInstanceUser
instance GHC.Show.Show Network.AWS.ChimeSDKMessaging.DescribeChannelMembershipForAppInstanceUser.DescribeChannelMembershipForAppInstanceUser
instance GHC.Read.Read Network.AWS.ChimeSDKMessaging.DescribeChannelMembershipForAppInstanceUser.DescribeChannelMembershipForAppInstanceUser
instance GHC.Classes.Eq Network.AWS.ChimeSDKMessaging.DescribeChannelMembershipForAppInstanceUser.DescribeChannelMembershipForAppInstanceUser
instance GHC.Generics.Generic Network.AWS.ChimeSDKMessaging.DescribeChannelMembershipForAppInstanceUser.DescribeChannelMembershipForAppInstanceUserResponse
instance GHC.Show.Show Network.AWS.ChimeSDKMessaging.DescribeChannelMembershipForAppInstanceUser.DescribeChannelMembershipForAppInstanceUserResponse
instance GHC.Classes.Eq Network.AWS.ChimeSDKMessaging.DescribeChannelMembershipForAppInstanceUser.DescribeChannelMembershipForAppInstanceUserResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ChimeSDKMessaging.DescribeChannelMembershipForAppInstanceUser.DescribeChannelMembershipForAppInstanceUser
instance Control.DeepSeq.NFData Network.AWS.ChimeSDKMessaging.DescribeChannelMembershipForAppInstanceUser.DescribeChannelMembershipForAppInstanceUserResponse
instance Data.Hashable.Class.Hashable Network.AWS.ChimeSDKMessaging.DescribeChannelMembershipForAppInstanceUser.DescribeChannelMembershipForAppInstanceUser
instance Control.DeepSeq.NFData Network.AWS.ChimeSDKMessaging.DescribeChannelMembershipForAppInstanceUser.DescribeChannelMembershipForAppInstanceUser
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ChimeSDKMessaging.DescribeChannelMembershipForAppInstanceUser.DescribeChannelMembershipForAppInstanceUser
instance Network.AWS.Data.Path.ToPath Network.AWS.ChimeSDKMessaging.DescribeChannelMembershipForAppInstanceUser.DescribeChannelMembershipForAppInstanceUser
instance Network.AWS.Data.Query.ToQuery Network.AWS.ChimeSDKMessaging.DescribeChannelMembershipForAppInstanceUser.DescribeChannelMembershipForAppInstanceUser


-- | Returns the full details of a user's channel membership.
--   
--   The <tt>x-amz-chime-bearer</tt> request header is mandatory. Use the
--   <tt>AppInstanceUserArn</tt> of the user that makes the API call as the
--   value in the header.
module Network.AWS.ChimeSDKMessaging.DescribeChannelMembership

-- | <i>See:</i> <a>newDescribeChannelMembership</a> smart constructor.
data DescribeChannelMembership
DescribeChannelMembership' :: Text -> Text -> Text -> DescribeChannelMembership

-- | The ARN of the channel.
[$sel:channelArn:DescribeChannelMembership'] :: DescribeChannelMembership -> Text

-- | The ARN of the member.
[$sel:memberArn:DescribeChannelMembership'] :: DescribeChannelMembership -> Text

-- | The <tt>AppInstanceUserArn</tt> of the user that makes the API call.
[$sel:chimeBearer:DescribeChannelMembership'] :: DescribeChannelMembership -> Text

-- | Create a value of <a>DescribeChannelMembership</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:channelArn:DescribeChannelMembership'</a>,
--   <a>describeChannelMembership_channelArn</a> - The ARN of the channel.
--   
--   <a>$sel:memberArn:DescribeChannelMembership'</a>,
--   <a>describeChannelMembership_memberArn</a> - The ARN of the member.
--   
--   <a>$sel:chimeBearer:DescribeChannelMembership'</a>,
--   <a>describeChannelMembership_chimeBearer</a> - The
--   <tt>AppInstanceUserArn</tt> of the user that makes the API call.
newDescribeChannelMembership :: Text -> Text -> Text -> DescribeChannelMembership

-- | The ARN of the channel.
describeChannelMembership_channelArn :: Lens' DescribeChannelMembership Text

-- | The ARN of the member.
describeChannelMembership_memberArn :: Lens' DescribeChannelMembership Text

-- | The <tt>AppInstanceUserArn</tt> of the user that makes the API call.
describeChannelMembership_chimeBearer :: Lens' DescribeChannelMembership Text

-- | <i>See:</i> <a>newDescribeChannelMembershipResponse</a> smart
--   constructor.
data DescribeChannelMembershipResponse
DescribeChannelMembershipResponse' :: Maybe ChannelMembership -> Int -> DescribeChannelMembershipResponse

-- | The details of the membership.
[$sel:channelMembership:DescribeChannelMembershipResponse'] :: DescribeChannelMembershipResponse -> Maybe ChannelMembership

-- | The response's http status code.
[$sel:httpStatus:DescribeChannelMembershipResponse'] :: DescribeChannelMembershipResponse -> Int

-- | Create a value of <a>DescribeChannelMembershipResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:channelMembership:DescribeChannelMembershipResponse'</a>,
--   <a>describeChannelMembershipResponse_channelMembership</a> - The
--   details of the membership.
--   
--   <a>$sel:httpStatus:DescribeChannelMembershipResponse'</a>,
--   <a>describeChannelMembershipResponse_httpStatus</a> - The response's
--   http status code.
newDescribeChannelMembershipResponse :: Int -> DescribeChannelMembershipResponse

-- | The details of the membership.
describeChannelMembershipResponse_channelMembership :: Lens' DescribeChannelMembershipResponse (Maybe ChannelMembership)

-- | The response's http status code.
describeChannelMembershipResponse_httpStatus :: Lens' DescribeChannelMembershipResponse Int
instance GHC.Generics.Generic Network.AWS.ChimeSDKMessaging.DescribeChannelMembership.DescribeChannelMembership
instance GHC.Show.Show Network.AWS.ChimeSDKMessaging.DescribeChannelMembership.DescribeChannelMembership
instance GHC.Read.Read Network.AWS.ChimeSDKMessaging.DescribeChannelMembership.DescribeChannelMembership
instance GHC.Classes.Eq Network.AWS.ChimeSDKMessaging.DescribeChannelMembership.DescribeChannelMembership
instance GHC.Generics.Generic Network.AWS.ChimeSDKMessaging.DescribeChannelMembership.DescribeChannelMembershipResponse
instance GHC.Show.Show Network.AWS.ChimeSDKMessaging.DescribeChannelMembership.DescribeChannelMembershipResponse
instance GHC.Classes.Eq Network.AWS.ChimeSDKMessaging.DescribeChannelMembership.DescribeChannelMembershipResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ChimeSDKMessaging.DescribeChannelMembership.DescribeChannelMembership
instance Control.DeepSeq.NFData Network.AWS.ChimeSDKMessaging.DescribeChannelMembership.DescribeChannelMembershipResponse
instance Data.Hashable.Class.Hashable Network.AWS.ChimeSDKMessaging.DescribeChannelMembership.DescribeChannelMembership
instance Control.DeepSeq.NFData Network.AWS.ChimeSDKMessaging.DescribeChannelMembership.DescribeChannelMembership
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ChimeSDKMessaging.DescribeChannelMembership.DescribeChannelMembership
instance Network.AWS.Data.Path.ToPath Network.AWS.ChimeSDKMessaging.DescribeChannelMembership.DescribeChannelMembership
instance Network.AWS.Data.Query.ToQuery Network.AWS.ChimeSDKMessaging.DescribeChannelMembership.DescribeChannelMembership


-- | Returns the full details of a channel flow in an Amazon Chime
--   <tt>AppInstance</tt>. This is a developer API.
module Network.AWS.ChimeSDKMessaging.DescribeChannelFlow

-- | <i>See:</i> <a>newDescribeChannelFlow</a> smart constructor.
data DescribeChannelFlow
DescribeChannelFlow' :: Text -> DescribeChannelFlow

-- | The ARN of the channel flow.
[$sel:channelFlowArn:DescribeChannelFlow'] :: DescribeChannelFlow -> Text

-- | Create a value of <a>DescribeChannelFlow</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:channelFlowArn:DescribeChannelFlow'</a>,
--   <a>describeChannelFlow_channelFlowArn</a> - The ARN of the channel
--   flow.
newDescribeChannelFlow :: Text -> DescribeChannelFlow

-- | The ARN of the channel flow.
describeChannelFlow_channelFlowArn :: Lens' DescribeChannelFlow Text

-- | <i>See:</i> <a>newDescribeChannelFlowResponse</a> smart constructor.
data DescribeChannelFlowResponse
DescribeChannelFlowResponse' :: Maybe ChannelFlow -> Int -> DescribeChannelFlowResponse

-- | The channel flow details.
[$sel:channelFlow:DescribeChannelFlowResponse'] :: DescribeChannelFlowResponse -> Maybe ChannelFlow

-- | The response's http status code.
[$sel:httpStatus:DescribeChannelFlowResponse'] :: DescribeChannelFlowResponse -> Int

-- | Create a value of <a>DescribeChannelFlowResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:channelFlow:DescribeChannelFlowResponse'</a>,
--   <a>describeChannelFlowResponse_channelFlow</a> - The channel flow
--   details.
--   
--   <a>$sel:httpStatus:DescribeChannelFlowResponse'</a>,
--   <a>describeChannelFlowResponse_httpStatus</a> - The response's http
--   status code.
newDescribeChannelFlowResponse :: Int -> DescribeChannelFlowResponse

-- | The channel flow details.
describeChannelFlowResponse_channelFlow :: Lens' DescribeChannelFlowResponse (Maybe ChannelFlow)

-- | The response's http status code.
describeChannelFlowResponse_httpStatus :: Lens' DescribeChannelFlowResponse Int
instance GHC.Generics.Generic Network.AWS.ChimeSDKMessaging.DescribeChannelFlow.DescribeChannelFlow
instance GHC.Show.Show Network.AWS.ChimeSDKMessaging.DescribeChannelFlow.DescribeChannelFlow
instance GHC.Read.Read Network.AWS.ChimeSDKMessaging.DescribeChannelFlow.DescribeChannelFlow
instance GHC.Classes.Eq Network.AWS.ChimeSDKMessaging.DescribeChannelFlow.DescribeChannelFlow
instance GHC.Generics.Generic Network.AWS.ChimeSDKMessaging.DescribeChannelFlow.DescribeChannelFlowResponse
instance GHC.Show.Show Network.AWS.ChimeSDKMessaging.DescribeChannelFlow.DescribeChannelFlowResponse
instance GHC.Classes.Eq Network.AWS.ChimeSDKMessaging.DescribeChannelFlow.DescribeChannelFlowResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ChimeSDKMessaging.DescribeChannelFlow.DescribeChannelFlow
instance Control.DeepSeq.NFData Network.AWS.ChimeSDKMessaging.DescribeChannelFlow.DescribeChannelFlowResponse
instance Data.Hashable.Class.Hashable Network.AWS.ChimeSDKMessaging.DescribeChannelFlow.DescribeChannelFlow
instance Control.DeepSeq.NFData Network.AWS.ChimeSDKMessaging.DescribeChannelFlow.DescribeChannelFlow
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ChimeSDKMessaging.DescribeChannelFlow.DescribeChannelFlow
instance Network.AWS.Data.Path.ToPath Network.AWS.ChimeSDKMessaging.DescribeChannelFlow.DescribeChannelFlow
instance Network.AWS.Data.Query.ToQuery Network.AWS.ChimeSDKMessaging.DescribeChannelFlow.DescribeChannelFlow


-- | Returns the full details of a channel ban.
--   
--   The <tt>x-amz-chime-bearer</tt> request header is mandatory. Use the
--   <tt>AppInstanceUserArn</tt> of the user that makes the API call as the
--   value in the header.
module Network.AWS.ChimeSDKMessaging.DescribeChannelBan

-- | <i>See:</i> <a>newDescribeChannelBan</a> smart constructor.
data DescribeChannelBan
DescribeChannelBan' :: Text -> Text -> Text -> DescribeChannelBan

-- | The ARN of the channel from which the user is banned.
[$sel:channelArn:DescribeChannelBan'] :: DescribeChannelBan -> Text

-- | The ARN of the member being banned.
[$sel:memberArn:DescribeChannelBan'] :: DescribeChannelBan -> Text

-- | The <tt>AppInstanceUserArn</tt> of the user that makes the API call.
[$sel:chimeBearer:DescribeChannelBan'] :: DescribeChannelBan -> Text

-- | Create a value of <a>DescribeChannelBan</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:channelArn:DescribeChannelBan'</a>,
--   <a>describeChannelBan_channelArn</a> - The ARN of the channel from
--   which the user is banned.
--   
--   <a>$sel:memberArn:DescribeChannelBan'</a>,
--   <a>describeChannelBan_memberArn</a> - The ARN of the member being
--   banned.
--   
--   <a>$sel:chimeBearer:DescribeChannelBan'</a>,
--   <a>describeChannelBan_chimeBearer</a> - The
--   <tt>AppInstanceUserArn</tt> of the user that makes the API call.
newDescribeChannelBan :: Text -> Text -> Text -> DescribeChannelBan

-- | The ARN of the channel from which the user is banned.
describeChannelBan_channelArn :: Lens' DescribeChannelBan Text

-- | The ARN of the member being banned.
describeChannelBan_memberArn :: Lens' DescribeChannelBan Text

-- | The <tt>AppInstanceUserArn</tt> of the user that makes the API call.
describeChannelBan_chimeBearer :: Lens' DescribeChannelBan Text

-- | <i>See:</i> <a>newDescribeChannelBanResponse</a> smart constructor.
data DescribeChannelBanResponse
DescribeChannelBanResponse' :: Maybe ChannelBan -> Int -> DescribeChannelBanResponse

-- | The details of the ban.
[$sel:channelBan:DescribeChannelBanResponse'] :: DescribeChannelBanResponse -> Maybe ChannelBan

-- | The response's http status code.
[$sel:httpStatus:DescribeChannelBanResponse'] :: DescribeChannelBanResponse -> Int

-- | Create a value of <a>DescribeChannelBanResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:channelBan:DescribeChannelBanResponse'</a>,
--   <a>describeChannelBanResponse_channelBan</a> - The details of the ban.
--   
--   <a>$sel:httpStatus:DescribeChannelBanResponse'</a>,
--   <a>describeChannelBanResponse_httpStatus</a> - The response's http
--   status code.
newDescribeChannelBanResponse :: Int -> DescribeChannelBanResponse

-- | The details of the ban.
describeChannelBanResponse_channelBan :: Lens' DescribeChannelBanResponse (Maybe ChannelBan)

-- | The response's http status code.
describeChannelBanResponse_httpStatus :: Lens' DescribeChannelBanResponse Int
instance GHC.Generics.Generic Network.AWS.ChimeSDKMessaging.DescribeChannelBan.DescribeChannelBan
instance GHC.Show.Show Network.AWS.ChimeSDKMessaging.DescribeChannelBan.DescribeChannelBan
instance GHC.Read.Read Network.AWS.ChimeSDKMessaging.DescribeChannelBan.DescribeChannelBan
instance GHC.Classes.Eq Network.AWS.ChimeSDKMessaging.DescribeChannelBan.DescribeChannelBan
instance GHC.Generics.Generic Network.AWS.ChimeSDKMessaging.DescribeChannelBan.DescribeChannelBanResponse
instance GHC.Show.Show Network.AWS.ChimeSDKMessaging.DescribeChannelBan.DescribeChannelBanResponse
instance GHC.Classes.Eq Network.AWS.ChimeSDKMessaging.DescribeChannelBan.DescribeChannelBanResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ChimeSDKMessaging.DescribeChannelBan.DescribeChannelBan
instance Control.DeepSeq.NFData Network.AWS.ChimeSDKMessaging.DescribeChannelBan.DescribeChannelBanResponse
instance Data.Hashable.Class.Hashable Network.AWS.ChimeSDKMessaging.DescribeChannelBan.DescribeChannelBan
instance Control.DeepSeq.NFData Network.AWS.ChimeSDKMessaging.DescribeChannelBan.DescribeChannelBan
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ChimeSDKMessaging.DescribeChannelBan.DescribeChannelBan
instance Network.AWS.Data.Path.ToPath Network.AWS.ChimeSDKMessaging.DescribeChannelBan.DescribeChannelBan
instance Network.AWS.Data.Query.ToQuery Network.AWS.ChimeSDKMessaging.DescribeChannelBan.DescribeChannelBan


-- | Returns the full details of a channel in an Amazon Chime
--   <tt>AppInstance</tt>.
--   
--   The <tt>x-amz-chime-bearer</tt> request header is mandatory. Use the
--   <tt>AppInstanceUserArn</tt> of the user that makes the API call as the
--   value in the header.
module Network.AWS.ChimeSDKMessaging.DescribeChannel

-- | <i>See:</i> <a>newDescribeChannel</a> smart constructor.
data DescribeChannel
DescribeChannel' :: Text -> Text -> DescribeChannel

-- | The ARN of the channel.
[$sel:channelArn:DescribeChannel'] :: DescribeChannel -> Text

-- | The <tt>AppInstanceUserArn</tt> of the user that makes the API call.
[$sel:chimeBearer:DescribeChannel'] :: DescribeChannel -> Text

-- | Create a value of <a>DescribeChannel</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:channelArn:DescribeChannel'</a>,
--   <a>describeChannel_channelArn</a> - The ARN of the channel.
--   
--   <a>$sel:chimeBearer:DescribeChannel'</a>,
--   <a>describeChannel_chimeBearer</a> - The <tt>AppInstanceUserArn</tt>
--   of the user that makes the API call.
newDescribeChannel :: Text -> Text -> DescribeChannel

-- | The ARN of the channel.
describeChannel_channelArn :: Lens' DescribeChannel Text

-- | The <tt>AppInstanceUserArn</tt> of the user that makes the API call.
describeChannel_chimeBearer :: Lens' DescribeChannel Text

-- | <i>See:</i> <a>newDescribeChannelResponse</a> smart constructor.
data DescribeChannelResponse
DescribeChannelResponse' :: Maybe Channel -> Int -> DescribeChannelResponse

-- | The channel details.
[$sel:channel:DescribeChannelResponse'] :: DescribeChannelResponse -> Maybe Channel

-- | The response's http status code.
[$sel:httpStatus:DescribeChannelResponse'] :: DescribeChannelResponse -> Int

-- | Create a value of <a>DescribeChannelResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:channel:DescribeChannelResponse'</a>,
--   <a>describeChannelResponse_channel</a> - The channel details.
--   
--   <a>$sel:httpStatus:DescribeChannelResponse'</a>,
--   <a>describeChannelResponse_httpStatus</a> - The response's http status
--   code.
newDescribeChannelResponse :: Int -> DescribeChannelResponse

-- | The channel details.
describeChannelResponse_channel :: Lens' DescribeChannelResponse (Maybe Channel)

-- | The response's http status code.
describeChannelResponse_httpStatus :: Lens' DescribeChannelResponse Int
instance GHC.Generics.Generic Network.AWS.ChimeSDKMessaging.DescribeChannel.DescribeChannel
instance GHC.Show.Show Network.AWS.ChimeSDKMessaging.DescribeChannel.DescribeChannel
instance GHC.Read.Read Network.AWS.ChimeSDKMessaging.DescribeChannel.DescribeChannel
instance GHC.Classes.Eq Network.AWS.ChimeSDKMessaging.DescribeChannel.DescribeChannel
instance GHC.Generics.Generic Network.AWS.ChimeSDKMessaging.DescribeChannel.DescribeChannelResponse
instance GHC.Show.Show Network.AWS.ChimeSDKMessaging.DescribeChannel.DescribeChannelResponse
instance GHC.Classes.Eq Network.AWS.ChimeSDKMessaging.DescribeChannel.DescribeChannelResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ChimeSDKMessaging.DescribeChannel.DescribeChannel
instance Control.DeepSeq.NFData Network.AWS.ChimeSDKMessaging.DescribeChannel.DescribeChannelResponse
instance Data.Hashable.Class.Hashable Network.AWS.ChimeSDKMessaging.DescribeChannel.DescribeChannel
instance Control.DeepSeq.NFData Network.AWS.ChimeSDKMessaging.DescribeChannel.DescribeChannel
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ChimeSDKMessaging.DescribeChannel.DescribeChannel
instance Network.AWS.Data.Path.ToPath Network.AWS.ChimeSDKMessaging.DescribeChannel.DescribeChannel
instance Network.AWS.Data.Query.ToQuery Network.AWS.ChimeSDKMessaging.DescribeChannel.DescribeChannel


-- | Deletes a channel moderator.
--   
--   The <tt>x-amz-chime-bearer</tt> request header is mandatory. Use the
--   <tt>AppInstanceUserArn</tt> of the user that makes the API call as the
--   value in the header.
module Network.AWS.ChimeSDKMessaging.DeleteChannelModerator

-- | <i>See:</i> <a>newDeleteChannelModerator</a> smart constructor.
data DeleteChannelModerator
DeleteChannelModerator' :: Text -> Text -> Text -> DeleteChannelModerator

-- | The ARN of the channel.
[$sel:channelArn:DeleteChannelModerator'] :: DeleteChannelModerator -> Text

-- | The ARN of the moderator being deleted.
[$sel:channelModeratorArn:DeleteChannelModerator'] :: DeleteChannelModerator -> Text

-- | The <tt>AppInstanceUserArn</tt> of the user that makes the API call.
[$sel:chimeBearer:DeleteChannelModerator'] :: DeleteChannelModerator -> Text

-- | Create a value of <a>DeleteChannelModerator</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:channelArn:DeleteChannelModerator'</a>,
--   <a>deleteChannelModerator_channelArn</a> - The ARN of the channel.
--   
--   <a>$sel:channelModeratorArn:DeleteChannelModerator'</a>,
--   <a>deleteChannelModerator_channelModeratorArn</a> - The ARN of the
--   moderator being deleted.
--   
--   <a>$sel:chimeBearer:DeleteChannelModerator'</a>,
--   <a>deleteChannelModerator_chimeBearer</a> - The
--   <tt>AppInstanceUserArn</tt> of the user that makes the API call.
newDeleteChannelModerator :: Text -> Text -> Text -> DeleteChannelModerator

-- | The ARN of the channel.
deleteChannelModerator_channelArn :: Lens' DeleteChannelModerator Text

-- | The ARN of the moderator being deleted.
deleteChannelModerator_channelModeratorArn :: Lens' DeleteChannelModerator Text

-- | The <tt>AppInstanceUserArn</tt> of the user that makes the API call.
deleteChannelModerator_chimeBearer :: Lens' DeleteChannelModerator Text

-- | <i>See:</i> <a>newDeleteChannelModeratorResponse</a> smart
--   constructor.
data DeleteChannelModeratorResponse
DeleteChannelModeratorResponse' :: DeleteChannelModeratorResponse

-- | Create a value of <a>DeleteChannelModeratorResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteChannelModeratorResponse :: DeleteChannelModeratorResponse
instance GHC.Generics.Generic Network.AWS.ChimeSDKMessaging.DeleteChannelModerator.DeleteChannelModerator
instance GHC.Show.Show Network.AWS.ChimeSDKMessaging.DeleteChannelModerator.DeleteChannelModerator
instance GHC.Read.Read Network.AWS.ChimeSDKMessaging.DeleteChannelModerator.DeleteChannelModerator
instance GHC.Classes.Eq Network.AWS.ChimeSDKMessaging.DeleteChannelModerator.DeleteChannelModerator
instance GHC.Generics.Generic Network.AWS.ChimeSDKMessaging.DeleteChannelModerator.DeleteChannelModeratorResponse
instance GHC.Show.Show Network.AWS.ChimeSDKMessaging.DeleteChannelModerator.DeleteChannelModeratorResponse
instance GHC.Read.Read Network.AWS.ChimeSDKMessaging.DeleteChannelModerator.DeleteChannelModeratorResponse
instance GHC.Classes.Eq Network.AWS.ChimeSDKMessaging.DeleteChannelModerator.DeleteChannelModeratorResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ChimeSDKMessaging.DeleteChannelModerator.DeleteChannelModerator
instance Control.DeepSeq.NFData Network.AWS.ChimeSDKMessaging.DeleteChannelModerator.DeleteChannelModeratorResponse
instance Data.Hashable.Class.Hashable Network.AWS.ChimeSDKMessaging.DeleteChannelModerator.DeleteChannelModerator
instance Control.DeepSeq.NFData Network.AWS.ChimeSDKMessaging.DeleteChannelModerator.DeleteChannelModerator
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ChimeSDKMessaging.DeleteChannelModerator.DeleteChannelModerator
instance Network.AWS.Data.Path.ToPath Network.AWS.ChimeSDKMessaging.DeleteChannelModerator.DeleteChannelModerator
instance Network.AWS.Data.Query.ToQuery Network.AWS.ChimeSDKMessaging.DeleteChannelModerator.DeleteChannelModerator


-- | Deletes a channel message. Only admins can perform this action.
--   Deletion makes messages inaccessible immediately. A background process
--   deletes any revisions created by <tt>UpdateChannelMessage</tt>.
--   
--   The <tt>x-amz-chime-bearer</tt> request header is mandatory. Use the
--   <tt>AppInstanceUserArn</tt> of the user that makes the API call as the
--   value in the header.
module Network.AWS.ChimeSDKMessaging.DeleteChannelMessage

-- | <i>See:</i> <a>newDeleteChannelMessage</a> smart constructor.
data DeleteChannelMessage
DeleteChannelMessage' :: Text -> Text -> Text -> DeleteChannelMessage

-- | The ARN of the channel.
[$sel:channelArn:DeleteChannelMessage'] :: DeleteChannelMessage -> Text

-- | The ID of the message being deleted.
[$sel:messageId:DeleteChannelMessage'] :: DeleteChannelMessage -> Text

-- | The <tt>AppInstanceUserArn</tt> of the user that makes the API call.
[$sel:chimeBearer:DeleteChannelMessage'] :: DeleteChannelMessage -> Text

-- | Create a value of <a>DeleteChannelMessage</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:channelArn:DeleteChannelMessage'</a>,
--   <a>deleteChannelMessage_channelArn</a> - The ARN of the channel.
--   
--   <a>$sel:messageId:DeleteChannelMessage'</a>,
--   <a>deleteChannelMessage_messageId</a> - The ID of the message being
--   deleted.
--   
--   <a>$sel:chimeBearer:DeleteChannelMessage'</a>,
--   <a>deleteChannelMessage_chimeBearer</a> - The
--   <tt>AppInstanceUserArn</tt> of the user that makes the API call.
newDeleteChannelMessage :: Text -> Text -> Text -> DeleteChannelMessage

-- | The ARN of the channel.
deleteChannelMessage_channelArn :: Lens' DeleteChannelMessage Text

-- | The ID of the message being deleted.
deleteChannelMessage_messageId :: Lens' DeleteChannelMessage Text

-- | The <tt>AppInstanceUserArn</tt> of the user that makes the API call.
deleteChannelMessage_chimeBearer :: Lens' DeleteChannelMessage Text

-- | <i>See:</i> <a>newDeleteChannelMessageResponse</a> smart constructor.
data DeleteChannelMessageResponse
DeleteChannelMessageResponse' :: DeleteChannelMessageResponse

-- | Create a value of <a>DeleteChannelMessageResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteChannelMessageResponse :: DeleteChannelMessageResponse
instance GHC.Generics.Generic Network.AWS.ChimeSDKMessaging.DeleteChannelMessage.DeleteChannelMessage
instance GHC.Show.Show Network.AWS.ChimeSDKMessaging.DeleteChannelMessage.DeleteChannelMessage
instance GHC.Read.Read Network.AWS.ChimeSDKMessaging.DeleteChannelMessage.DeleteChannelMessage
instance GHC.Classes.Eq Network.AWS.ChimeSDKMessaging.DeleteChannelMessage.DeleteChannelMessage
instance GHC.Generics.Generic Network.AWS.ChimeSDKMessaging.DeleteChannelMessage.DeleteChannelMessageResponse
instance GHC.Show.Show Network.AWS.ChimeSDKMessaging.DeleteChannelMessage.DeleteChannelMessageResponse
instance GHC.Read.Read Network.AWS.ChimeSDKMessaging.DeleteChannelMessage.DeleteChannelMessageResponse
instance GHC.Classes.Eq Network.AWS.ChimeSDKMessaging.DeleteChannelMessage.DeleteChannelMessageResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ChimeSDKMessaging.DeleteChannelMessage.DeleteChannelMessage
instance Control.DeepSeq.NFData Network.AWS.ChimeSDKMessaging.DeleteChannelMessage.DeleteChannelMessageResponse
instance Data.Hashable.Class.Hashable Network.AWS.ChimeSDKMessaging.DeleteChannelMessage.DeleteChannelMessage
instance Control.DeepSeq.NFData Network.AWS.ChimeSDKMessaging.DeleteChannelMessage.DeleteChannelMessage
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ChimeSDKMessaging.DeleteChannelMessage.DeleteChannelMessage
instance Network.AWS.Data.Path.ToPath Network.AWS.ChimeSDKMessaging.DeleteChannelMessage.DeleteChannelMessage
instance Network.AWS.Data.Query.ToQuery Network.AWS.ChimeSDKMessaging.DeleteChannelMessage.DeleteChannelMessage


-- | Removes a member from a channel.
--   
--   The <tt>x-amz-chime-bearer</tt> request header is mandatory. Use the
--   <tt>AppInstanceUserArn</tt> of the user that makes the API call as the
--   value in the header.
module Network.AWS.ChimeSDKMessaging.DeleteChannelMembership

-- | <i>See:</i> <a>newDeleteChannelMembership</a> smart constructor.
data DeleteChannelMembership
DeleteChannelMembership' :: Text -> Text -> Text -> DeleteChannelMembership

-- | The ARN of the channel from which you want to remove the user.
[$sel:channelArn:DeleteChannelMembership'] :: DeleteChannelMembership -> Text

-- | The ARN of the member that you're removing from the channel.
[$sel:memberArn:DeleteChannelMembership'] :: DeleteChannelMembership -> Text

-- | The <tt>AppInstanceUserArn</tt> of the user that makes the API call.
[$sel:chimeBearer:DeleteChannelMembership'] :: DeleteChannelMembership -> Text

-- | Create a value of <a>DeleteChannelMembership</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:channelArn:DeleteChannelMembership'</a>,
--   <a>deleteChannelMembership_channelArn</a> - The ARN of the channel
--   from which you want to remove the user.
--   
--   <a>$sel:memberArn:DeleteChannelMembership'</a>,
--   <a>deleteChannelMembership_memberArn</a> - The ARN of the member that
--   you're removing from the channel.
--   
--   <a>$sel:chimeBearer:DeleteChannelMembership'</a>,
--   <a>deleteChannelMembership_chimeBearer</a> - The
--   <tt>AppInstanceUserArn</tt> of the user that makes the API call.
newDeleteChannelMembership :: Text -> Text -> Text -> DeleteChannelMembership

-- | The ARN of the channel from which you want to remove the user.
deleteChannelMembership_channelArn :: Lens' DeleteChannelMembership Text

-- | The ARN of the member that you're removing from the channel.
deleteChannelMembership_memberArn :: Lens' DeleteChannelMembership Text

-- | The <tt>AppInstanceUserArn</tt> of the user that makes the API call.
deleteChannelMembership_chimeBearer :: Lens' DeleteChannelMembership Text

-- | <i>See:</i> <a>newDeleteChannelMembershipResponse</a> smart
--   constructor.
data DeleteChannelMembershipResponse
DeleteChannelMembershipResponse' :: DeleteChannelMembershipResponse

-- | Create a value of <a>DeleteChannelMembershipResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteChannelMembershipResponse :: DeleteChannelMembershipResponse
instance GHC.Generics.Generic Network.AWS.ChimeSDKMessaging.DeleteChannelMembership.DeleteChannelMembership
instance GHC.Show.Show Network.AWS.ChimeSDKMessaging.DeleteChannelMembership.DeleteChannelMembership
instance GHC.Read.Read Network.AWS.ChimeSDKMessaging.DeleteChannelMembership.DeleteChannelMembership
instance GHC.Classes.Eq Network.AWS.ChimeSDKMessaging.DeleteChannelMembership.DeleteChannelMembership
instance GHC.Generics.Generic Network.AWS.ChimeSDKMessaging.DeleteChannelMembership.DeleteChannelMembershipResponse
instance GHC.Show.Show Network.AWS.ChimeSDKMessaging.DeleteChannelMembership.DeleteChannelMembershipResponse
instance GHC.Read.Read Network.AWS.ChimeSDKMessaging.DeleteChannelMembership.DeleteChannelMembershipResponse
instance GHC.Classes.Eq Network.AWS.ChimeSDKMessaging.DeleteChannelMembership.DeleteChannelMembershipResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ChimeSDKMessaging.DeleteChannelMembership.DeleteChannelMembership
instance Control.DeepSeq.NFData Network.AWS.ChimeSDKMessaging.DeleteChannelMembership.DeleteChannelMembershipResponse
instance Data.Hashable.Class.Hashable Network.AWS.ChimeSDKMessaging.DeleteChannelMembership.DeleteChannelMembership
instance Control.DeepSeq.NFData Network.AWS.ChimeSDKMessaging.DeleteChannelMembership.DeleteChannelMembership
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ChimeSDKMessaging.DeleteChannelMembership.DeleteChannelMembership
instance Network.AWS.Data.Path.ToPath Network.AWS.ChimeSDKMessaging.DeleteChannelMembership.DeleteChannelMembership
instance Network.AWS.Data.Query.ToQuery Network.AWS.ChimeSDKMessaging.DeleteChannelMembership.DeleteChannelMembership


-- | Deletes a channel flow, an irreversible process. This is a developer
--   API.
--   
--   This API works only when the channel flow is not associated with any
--   channel. To get a list of all channels that a channel flow is
--   associated with, use the
--   <tt>ListChannelsAssociatedWithChannelFlow</tt> API. Use the
--   <tt>DisassociateChannelFlow</tt> API to disassociate a channel flow
--   from all channels.
module Network.AWS.ChimeSDKMessaging.DeleteChannelFlow

-- | <i>See:</i> <a>newDeleteChannelFlow</a> smart constructor.
data DeleteChannelFlow
DeleteChannelFlow' :: Text -> DeleteChannelFlow

-- | The ARN of the channel flow.
[$sel:channelFlowArn:DeleteChannelFlow'] :: DeleteChannelFlow -> Text

-- | Create a value of <a>DeleteChannelFlow</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:channelFlowArn:DeleteChannelFlow'</a>,
--   <a>deleteChannelFlow_channelFlowArn</a> - The ARN of the channel flow.
newDeleteChannelFlow :: Text -> DeleteChannelFlow

-- | The ARN of the channel flow.
deleteChannelFlow_channelFlowArn :: Lens' DeleteChannelFlow Text

-- | <i>See:</i> <a>newDeleteChannelFlowResponse</a> smart constructor.
data DeleteChannelFlowResponse
DeleteChannelFlowResponse' :: DeleteChannelFlowResponse

-- | Create a value of <a>DeleteChannelFlowResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteChannelFlowResponse :: DeleteChannelFlowResponse
instance GHC.Generics.Generic Network.AWS.ChimeSDKMessaging.DeleteChannelFlow.DeleteChannelFlow
instance GHC.Show.Show Network.AWS.ChimeSDKMessaging.DeleteChannelFlow.DeleteChannelFlow
instance GHC.Read.Read Network.AWS.ChimeSDKMessaging.DeleteChannelFlow.DeleteChannelFlow
instance GHC.Classes.Eq Network.AWS.ChimeSDKMessaging.DeleteChannelFlow.DeleteChannelFlow
instance GHC.Generics.Generic Network.AWS.ChimeSDKMessaging.DeleteChannelFlow.DeleteChannelFlowResponse
instance GHC.Show.Show Network.AWS.ChimeSDKMessaging.DeleteChannelFlow.DeleteChannelFlowResponse
instance GHC.Read.Read Network.AWS.ChimeSDKMessaging.DeleteChannelFlow.DeleteChannelFlowResponse
instance GHC.Classes.Eq Network.AWS.ChimeSDKMessaging.DeleteChannelFlow.DeleteChannelFlowResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ChimeSDKMessaging.DeleteChannelFlow.DeleteChannelFlow
instance Control.DeepSeq.NFData Network.AWS.ChimeSDKMessaging.DeleteChannelFlow.DeleteChannelFlowResponse
instance Data.Hashable.Class.Hashable Network.AWS.ChimeSDKMessaging.DeleteChannelFlow.DeleteChannelFlow
instance Control.DeepSeq.NFData Network.AWS.ChimeSDKMessaging.DeleteChannelFlow.DeleteChannelFlow
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ChimeSDKMessaging.DeleteChannelFlow.DeleteChannelFlow
instance Network.AWS.Data.Path.ToPath Network.AWS.ChimeSDKMessaging.DeleteChannelFlow.DeleteChannelFlow
instance Network.AWS.Data.Query.ToQuery Network.AWS.ChimeSDKMessaging.DeleteChannelFlow.DeleteChannelFlow


-- | Removes a user from a channel's ban list.
--   
--   The <tt>x-amz-chime-bearer</tt> request header is mandatory. Use the
--   <tt>AppInstanceUserArn</tt> of the user that makes the API call as the
--   value in the header.
module Network.AWS.ChimeSDKMessaging.DeleteChannelBan

-- | <i>See:</i> <a>newDeleteChannelBan</a> smart constructor.
data DeleteChannelBan
DeleteChannelBan' :: Text -> Text -> Text -> DeleteChannelBan

-- | The ARN of the channel from which the <tt>AppInstanceUser</tt> was
--   banned.
[$sel:channelArn:DeleteChannelBan'] :: DeleteChannelBan -> Text

-- | The ARN of the <tt>AppInstanceUser</tt> that you want to reinstate.
[$sel:memberArn:DeleteChannelBan'] :: DeleteChannelBan -> Text

-- | The <tt>AppInstanceUserArn</tt> of the user that makes the API call.
[$sel:chimeBearer:DeleteChannelBan'] :: DeleteChannelBan -> Text

-- | Create a value of <a>DeleteChannelBan</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:channelArn:DeleteChannelBan'</a>,
--   <a>deleteChannelBan_channelArn</a> - The ARN of the channel from which
--   the <tt>AppInstanceUser</tt> was banned.
--   
--   <a>$sel:memberArn:DeleteChannelBan'</a>,
--   <a>deleteChannelBan_memberArn</a> - The ARN of the
--   <tt>AppInstanceUser</tt> that you want to reinstate.
--   
--   <a>$sel:chimeBearer:DeleteChannelBan'</a>,
--   <a>deleteChannelBan_chimeBearer</a> - The <tt>AppInstanceUserArn</tt>
--   of the user that makes the API call.
newDeleteChannelBan :: Text -> Text -> Text -> DeleteChannelBan

-- | The ARN of the channel from which the <tt>AppInstanceUser</tt> was
--   banned.
deleteChannelBan_channelArn :: Lens' DeleteChannelBan Text

-- | The ARN of the <tt>AppInstanceUser</tt> that you want to reinstate.
deleteChannelBan_memberArn :: Lens' DeleteChannelBan Text

-- | The <tt>AppInstanceUserArn</tt> of the user that makes the API call.
deleteChannelBan_chimeBearer :: Lens' DeleteChannelBan Text

-- | <i>See:</i> <a>newDeleteChannelBanResponse</a> smart constructor.
data DeleteChannelBanResponse
DeleteChannelBanResponse' :: DeleteChannelBanResponse

-- | Create a value of <a>DeleteChannelBanResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteChannelBanResponse :: DeleteChannelBanResponse
instance GHC.Generics.Generic Network.AWS.ChimeSDKMessaging.DeleteChannelBan.DeleteChannelBan
instance GHC.Show.Show Network.AWS.ChimeSDKMessaging.DeleteChannelBan.DeleteChannelBan
instance GHC.Read.Read Network.AWS.ChimeSDKMessaging.DeleteChannelBan.DeleteChannelBan
instance GHC.Classes.Eq Network.AWS.ChimeSDKMessaging.DeleteChannelBan.DeleteChannelBan
instance GHC.Generics.Generic Network.AWS.ChimeSDKMessaging.DeleteChannelBan.DeleteChannelBanResponse
instance GHC.Show.Show Network.AWS.ChimeSDKMessaging.DeleteChannelBan.DeleteChannelBanResponse
instance GHC.Read.Read Network.AWS.ChimeSDKMessaging.DeleteChannelBan.DeleteChannelBanResponse
instance GHC.Classes.Eq Network.AWS.ChimeSDKMessaging.DeleteChannelBan.DeleteChannelBanResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ChimeSDKMessaging.DeleteChannelBan.DeleteChannelBan
instance Control.DeepSeq.NFData Network.AWS.ChimeSDKMessaging.DeleteChannelBan.DeleteChannelBanResponse
instance Data.Hashable.Class.Hashable Network.AWS.ChimeSDKMessaging.DeleteChannelBan.DeleteChannelBan
instance Control.DeepSeq.NFData Network.AWS.ChimeSDKMessaging.DeleteChannelBan.DeleteChannelBan
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ChimeSDKMessaging.DeleteChannelBan.DeleteChannelBan
instance Network.AWS.Data.Path.ToPath Network.AWS.ChimeSDKMessaging.DeleteChannelBan.DeleteChannelBan
instance Network.AWS.Data.Query.ToQuery Network.AWS.ChimeSDKMessaging.DeleteChannelBan.DeleteChannelBan


-- | Immediately makes a channel and its memberships inaccessible and marks
--   them for deletion. This is an irreversible process.
--   
--   The <tt>x-amz-chime-bearer</tt> request header is mandatory. Use the
--   <tt>AppInstanceUserArn</tt> of the user that makes the API call as the
--   value in the header.
module Network.AWS.ChimeSDKMessaging.DeleteChannel

-- | <i>See:</i> <a>newDeleteChannel</a> smart constructor.
data DeleteChannel
DeleteChannel' :: Text -> Text -> DeleteChannel

-- | The ARN of the channel being deleted.
[$sel:channelArn:DeleteChannel'] :: DeleteChannel -> Text

-- | The <tt>AppInstanceUserArn</tt> of the user that makes the API call.
[$sel:chimeBearer:DeleteChannel'] :: DeleteChannel -> Text

-- | Create a value of <a>DeleteChannel</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:channelArn:DeleteChannel'</a>, <a>deleteChannel_channelArn</a>
--   - The ARN of the channel being deleted.
--   
--   <a>$sel:chimeBearer:DeleteChannel'</a>,
--   <a>deleteChannel_chimeBearer</a> - The <tt>AppInstanceUserArn</tt> of
--   the user that makes the API call.
newDeleteChannel :: Text -> Text -> DeleteChannel

-- | The ARN of the channel being deleted.
deleteChannel_channelArn :: Lens' DeleteChannel Text

-- | The <tt>AppInstanceUserArn</tt> of the user that makes the API call.
deleteChannel_chimeBearer :: Lens' DeleteChannel Text

-- | <i>See:</i> <a>newDeleteChannelResponse</a> smart constructor.
data DeleteChannelResponse
DeleteChannelResponse' :: DeleteChannelResponse

-- | Create a value of <a>DeleteChannelResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteChannelResponse :: DeleteChannelResponse
instance GHC.Generics.Generic Network.AWS.ChimeSDKMessaging.DeleteChannel.DeleteChannel
instance GHC.Show.Show Network.AWS.ChimeSDKMessaging.DeleteChannel.DeleteChannel
instance GHC.Read.Read Network.AWS.ChimeSDKMessaging.DeleteChannel.DeleteChannel
instance GHC.Classes.Eq Network.AWS.ChimeSDKMessaging.DeleteChannel.DeleteChannel
instance GHC.Generics.Generic Network.AWS.ChimeSDKMessaging.DeleteChannel.DeleteChannelResponse
instance GHC.Show.Show Network.AWS.ChimeSDKMessaging.DeleteChannel.DeleteChannelResponse
instance GHC.Read.Read Network.AWS.ChimeSDKMessaging.DeleteChannel.DeleteChannelResponse
instance GHC.Classes.Eq Network.AWS.ChimeSDKMessaging.DeleteChannel.DeleteChannelResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ChimeSDKMessaging.DeleteChannel.DeleteChannel
instance Control.DeepSeq.NFData Network.AWS.ChimeSDKMessaging.DeleteChannel.DeleteChannelResponse
instance Data.Hashable.Class.Hashable Network.AWS.ChimeSDKMessaging.DeleteChannel.DeleteChannel
instance Control.DeepSeq.NFData Network.AWS.ChimeSDKMessaging.DeleteChannel.DeleteChannel
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ChimeSDKMessaging.DeleteChannel.DeleteChannel
instance Network.AWS.Data.Path.ToPath Network.AWS.ChimeSDKMessaging.DeleteChannel.DeleteChannel
instance Network.AWS.Data.Query.ToQuery Network.AWS.ChimeSDKMessaging.DeleteChannel.DeleteChannel


-- | Creates a new <tt>ChannelModerator</tt>. A channel moderator can:
--   
--   <ul>
--   <li>Add and remove other members of the channel.</li>
--   <li>Add and remove other moderators of the channel.</li>
--   <li>Add and remove user bans for the channel.</li>
--   <li>Redact messages in the channel.</li>
--   <li>List messages in the channel.</li>
--   </ul>
--   
--   The <tt>x-amz-chime-bearer</tt> request header is mandatory. Use the
--   <tt>AppInstanceUserArn</tt> of the user that makes the API call as the
--   value in the header.
module Network.AWS.ChimeSDKMessaging.CreateChannelModerator

-- | <i>See:</i> <a>newCreateChannelModerator</a> smart constructor.
data CreateChannelModerator
CreateChannelModerator' :: Text -> Text -> Text -> CreateChannelModerator

-- | The ARN of the channel.
[$sel:channelArn:CreateChannelModerator'] :: CreateChannelModerator -> Text

-- | The ARN of the moderator.
[$sel:channelModeratorArn:CreateChannelModerator'] :: CreateChannelModerator -> Text

-- | The <tt>AppInstanceUserArn</tt> of the user that makes the API call.
[$sel:chimeBearer:CreateChannelModerator'] :: CreateChannelModerator -> Text

-- | Create a value of <a>CreateChannelModerator</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:channelArn:CreateChannelModerator'</a>,
--   <a>createChannelModerator_channelArn</a> - The ARN of the channel.
--   
--   <a>$sel:channelModeratorArn:CreateChannelModerator'</a>,
--   <a>createChannelModerator_channelModeratorArn</a> - The ARN of the
--   moderator.
--   
--   <a>$sel:chimeBearer:CreateChannelModerator'</a>,
--   <a>createChannelModerator_chimeBearer</a> - The
--   <tt>AppInstanceUserArn</tt> of the user that makes the API call.
newCreateChannelModerator :: Text -> Text -> Text -> CreateChannelModerator

-- | The ARN of the channel.
createChannelModerator_channelArn :: Lens' CreateChannelModerator Text

-- | The ARN of the moderator.
createChannelModerator_channelModeratorArn :: Lens' CreateChannelModerator Text

-- | The <tt>AppInstanceUserArn</tt> of the user that makes the API call.
createChannelModerator_chimeBearer :: Lens' CreateChannelModerator Text

-- | <i>See:</i> <a>newCreateChannelModeratorResponse</a> smart
--   constructor.
data CreateChannelModeratorResponse
CreateChannelModeratorResponse' :: Maybe Identity -> Maybe Text -> Int -> CreateChannelModeratorResponse

-- | The ARNs of the channel and the moderator.
[$sel:channelModerator:CreateChannelModeratorResponse'] :: CreateChannelModeratorResponse -> Maybe Identity

-- | The ARN of the channel.
[$sel:channelArn:CreateChannelModeratorResponse'] :: CreateChannelModeratorResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:CreateChannelModeratorResponse'] :: CreateChannelModeratorResponse -> Int

-- | Create a value of <a>CreateChannelModeratorResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:channelModerator:CreateChannelModeratorResponse'</a>,
--   <a>createChannelModeratorResponse_channelModerator</a> - The ARNs of
--   the channel and the moderator.
--   
--   <a>$sel:channelArn:CreateChannelModerator'</a>,
--   <a>createChannelModeratorResponse_channelArn</a> - The ARN of the
--   channel.
--   
--   <a>$sel:httpStatus:CreateChannelModeratorResponse'</a>,
--   <a>createChannelModeratorResponse_httpStatus</a> - The response's http
--   status code.
newCreateChannelModeratorResponse :: Int -> CreateChannelModeratorResponse

-- | The ARNs of the channel and the moderator.
createChannelModeratorResponse_channelModerator :: Lens' CreateChannelModeratorResponse (Maybe Identity)

-- | The ARN of the channel.
createChannelModeratorResponse_channelArn :: Lens' CreateChannelModeratorResponse (Maybe Text)

-- | The response's http status code.
createChannelModeratorResponse_httpStatus :: Lens' CreateChannelModeratorResponse Int
instance GHC.Generics.Generic Network.AWS.ChimeSDKMessaging.CreateChannelModerator.CreateChannelModerator
instance GHC.Show.Show Network.AWS.ChimeSDKMessaging.CreateChannelModerator.CreateChannelModerator
instance GHC.Read.Read Network.AWS.ChimeSDKMessaging.CreateChannelModerator.CreateChannelModerator
instance GHC.Classes.Eq Network.AWS.ChimeSDKMessaging.CreateChannelModerator.CreateChannelModerator
instance GHC.Generics.Generic Network.AWS.ChimeSDKMessaging.CreateChannelModerator.CreateChannelModeratorResponse
instance GHC.Show.Show Network.AWS.ChimeSDKMessaging.CreateChannelModerator.CreateChannelModeratorResponse
instance GHC.Classes.Eq Network.AWS.ChimeSDKMessaging.CreateChannelModerator.CreateChannelModeratorResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ChimeSDKMessaging.CreateChannelModerator.CreateChannelModerator
instance Control.DeepSeq.NFData Network.AWS.ChimeSDKMessaging.CreateChannelModerator.CreateChannelModeratorResponse
instance Data.Hashable.Class.Hashable Network.AWS.ChimeSDKMessaging.CreateChannelModerator.CreateChannelModerator
instance Control.DeepSeq.NFData Network.AWS.ChimeSDKMessaging.CreateChannelModerator.CreateChannelModerator
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ChimeSDKMessaging.CreateChannelModerator.CreateChannelModerator
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ChimeSDKMessaging.CreateChannelModerator.CreateChannelModerator
instance Network.AWS.Data.Path.ToPath Network.AWS.ChimeSDKMessaging.CreateChannelModerator.CreateChannelModerator
instance Network.AWS.Data.Query.ToQuery Network.AWS.ChimeSDKMessaging.CreateChannelModerator.CreateChannelModerator


-- | Adds a user to a channel. The <tt>InvitedBy</tt> response field is
--   derived from the request header. A channel member can:
--   
--   <ul>
--   <li>List messages</li>
--   <li>Send messages</li>
--   <li>Receive messages</li>
--   <li>Edit their own messages</li>
--   <li>Leave the channel</li>
--   </ul>
--   
--   Privacy settings impact this action as follows:
--   
--   <ul>
--   <li>Public Channels: You do not need to be a member to list messages,
--   but you must be a member to send messages.</li>
--   <li>Private Channels: You must be a member to list or send
--   messages.</li>
--   </ul>
--   
--   The <tt>x-amz-chime-bearer</tt> request header is mandatory. Use the
--   <tt>AppInstanceUserArn</tt> of the user that makes the API call as the
--   value in the header.
module Network.AWS.ChimeSDKMessaging.CreateChannelMembership

-- | <i>See:</i> <a>newCreateChannelMembership</a> smart constructor.
data CreateChannelMembership
CreateChannelMembership' :: Text -> Text -> ChannelMembershipType -> Text -> CreateChannelMembership

-- | The ARN of the channel to which you're adding users.
[$sel:channelArn:CreateChannelMembership'] :: CreateChannelMembership -> Text

-- | The ARN of the member you want to add to the channel.
[$sel:memberArn:CreateChannelMembership'] :: CreateChannelMembership -> Text

-- | The membership type of a user, <tt>DEFAULT</tt> or <tt>HIDDEN</tt>.
--   Default members are always returned as part of
--   <tt>ListChannelMemberships</tt>. Hidden members are only returned if
--   the type filter in <tt>ListChannelMemberships</tt> equals
--   <tt>HIDDEN</tt>. Otherwise hidden members are not returned. This is
--   only supported by moderators.
[$sel:type':CreateChannelMembership'] :: CreateChannelMembership -> ChannelMembershipType

-- | The <tt>AppInstanceUserArn</tt> of the user that makes the API call.
[$sel:chimeBearer:CreateChannelMembership'] :: CreateChannelMembership -> Text

-- | Create a value of <a>CreateChannelMembership</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:channelArn:CreateChannelMembership'</a>,
--   <a>createChannelMembership_channelArn</a> - The ARN of the channel to
--   which you're adding users.
--   
--   <a>$sel:memberArn:CreateChannelMembership'</a>,
--   <a>createChannelMembership_memberArn</a> - The ARN of the member you
--   want to add to the channel.
--   
--   <a>$sel:type':CreateChannelMembership'</a>,
--   <a>createChannelMembership_type</a> - The membership type of a user,
--   <tt>DEFAULT</tt> or <tt>HIDDEN</tt>. Default members are always
--   returned as part of <tt>ListChannelMemberships</tt>. Hidden members
--   are only returned if the type filter in
--   <tt>ListChannelMemberships</tt> equals <tt>HIDDEN</tt>. Otherwise
--   hidden members are not returned. This is only supported by moderators.
--   
--   <a>$sel:chimeBearer:CreateChannelMembership'</a>,
--   <a>createChannelMembership_chimeBearer</a> - The
--   <tt>AppInstanceUserArn</tt> of the user that makes the API call.
newCreateChannelMembership :: Text -> Text -> ChannelMembershipType -> Text -> CreateChannelMembership

-- | The ARN of the channel to which you're adding users.
createChannelMembership_channelArn :: Lens' CreateChannelMembership Text

-- | The ARN of the member you want to add to the channel.
createChannelMembership_memberArn :: Lens' CreateChannelMembership Text

-- | The membership type of a user, <tt>DEFAULT</tt> or <tt>HIDDEN</tt>.
--   Default members are always returned as part of
--   <tt>ListChannelMemberships</tt>. Hidden members are only returned if
--   the type filter in <tt>ListChannelMemberships</tt> equals
--   <tt>HIDDEN</tt>. Otherwise hidden members are not returned. This is
--   only supported by moderators.
createChannelMembership_type :: Lens' CreateChannelMembership ChannelMembershipType

-- | The <tt>AppInstanceUserArn</tt> of the user that makes the API call.
createChannelMembership_chimeBearer :: Lens' CreateChannelMembership Text

-- | <i>See:</i> <a>newCreateChannelMembershipResponse</a> smart
--   constructor.
data CreateChannelMembershipResponse
CreateChannelMembershipResponse' :: Maybe Text -> Maybe Identity -> Int -> CreateChannelMembershipResponse

-- | The ARN of the channel.
[$sel:channelArn:CreateChannelMembershipResponse'] :: CreateChannelMembershipResponse -> Maybe Text

-- | The ARN and metadata of the member being added.
[$sel:member:CreateChannelMembershipResponse'] :: CreateChannelMembershipResponse -> Maybe Identity

-- | The response's http status code.
[$sel:httpStatus:CreateChannelMembershipResponse'] :: CreateChannelMembershipResponse -> Int

-- | Create a value of <a>CreateChannelMembershipResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:channelArn:CreateChannelMembership'</a>,
--   <a>createChannelMembershipResponse_channelArn</a> - The ARN of the
--   channel.
--   
--   <a>$sel:member:CreateChannelMembershipResponse'</a>,
--   <a>createChannelMembershipResponse_member</a> - The ARN and metadata
--   of the member being added.
--   
--   <a>$sel:httpStatus:CreateChannelMembershipResponse'</a>,
--   <a>createChannelMembershipResponse_httpStatus</a> - The response's
--   http status code.
newCreateChannelMembershipResponse :: Int -> CreateChannelMembershipResponse

-- | The ARN of the channel.
createChannelMembershipResponse_channelArn :: Lens' CreateChannelMembershipResponse (Maybe Text)

-- | The ARN and metadata of the member being added.
createChannelMembershipResponse_member :: Lens' CreateChannelMembershipResponse (Maybe Identity)

-- | The response's http status code.
createChannelMembershipResponse_httpStatus :: Lens' CreateChannelMembershipResponse Int
instance GHC.Generics.Generic Network.AWS.ChimeSDKMessaging.CreateChannelMembership.CreateChannelMembership
instance GHC.Show.Show Network.AWS.ChimeSDKMessaging.CreateChannelMembership.CreateChannelMembership
instance GHC.Read.Read Network.AWS.ChimeSDKMessaging.CreateChannelMembership.CreateChannelMembership
instance GHC.Classes.Eq Network.AWS.ChimeSDKMessaging.CreateChannelMembership.CreateChannelMembership
instance GHC.Generics.Generic Network.AWS.ChimeSDKMessaging.CreateChannelMembership.CreateChannelMembershipResponse
instance GHC.Show.Show Network.AWS.ChimeSDKMessaging.CreateChannelMembership.CreateChannelMembershipResponse
instance GHC.Classes.Eq Network.AWS.ChimeSDKMessaging.CreateChannelMembership.CreateChannelMembershipResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ChimeSDKMessaging.CreateChannelMembership.CreateChannelMembership
instance Control.DeepSeq.NFData Network.AWS.ChimeSDKMessaging.CreateChannelMembership.CreateChannelMembershipResponse
instance Data.Hashable.Class.Hashable Network.AWS.ChimeSDKMessaging.CreateChannelMembership.CreateChannelMembership
instance Control.DeepSeq.NFData Network.AWS.ChimeSDKMessaging.CreateChannelMembership.CreateChannelMembership
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ChimeSDKMessaging.CreateChannelMembership.CreateChannelMembership
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ChimeSDKMessaging.CreateChannelMembership.CreateChannelMembership
instance Network.AWS.Data.Path.ToPath Network.AWS.ChimeSDKMessaging.CreateChannelMembership.CreateChannelMembership
instance Network.AWS.Data.Query.ToQuery Network.AWS.ChimeSDKMessaging.CreateChannelMembership.CreateChannelMembership


-- | Creates a channel flow, a container for processors. Processors are AWS
--   Lambda functions that perform actions on chat messages, such as
--   stripping out profanity. You can associate channel flows with
--   channels, and the processors in the channel flow then take action on
--   all messages sent to that channel. This is a developer API.
--   
--   Channel flows process the following items:
--   
--   <ol>
--   <li>New and updated messages</li>
--   <li>Persistent and non-persistent messages</li>
--   <li>The Standard message type</li>
--   </ol>
--   
--   Channel flows don't process Control or System messages. For more
--   information about the message types provided by Chime SDK Messaging,
--   refer to <a>Message types</a> in the <i>Amazon Chime developer
--   guide</i>.
module Network.AWS.ChimeSDKMessaging.CreateChannelFlow

-- | <i>See:</i> <a>newCreateChannelFlow</a> smart constructor.
data CreateChannelFlow
CreateChannelFlow' :: Maybe (NonEmpty Tag) -> Text -> NonEmpty Processor -> Sensitive Text -> Sensitive Text -> CreateChannelFlow

-- | The tags for the creation request.
[$sel:tags:CreateChannelFlow'] :: CreateChannelFlow -> Maybe (NonEmpty Tag)

-- | The ARN of the channel flow request.
[$sel:appInstanceArn:CreateChannelFlow'] :: CreateChannelFlow -> Text

-- | Information about the processor Lambda functions.
[$sel:processors:CreateChannelFlow'] :: CreateChannelFlow -> NonEmpty Processor

-- | The name of the channel flow.
[$sel:name:CreateChannelFlow'] :: CreateChannelFlow -> Sensitive Text

-- | The client token for the request. An Idempotency token.
[$sel:clientRequestToken:CreateChannelFlow'] :: CreateChannelFlow -> Sensitive Text

-- | Create a value of <a>CreateChannelFlow</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:CreateChannelFlow'</a>, <a>createChannelFlow_tags</a> -
--   The tags for the creation request.
--   
--   <a>$sel:appInstanceArn:CreateChannelFlow'</a>,
--   <a>createChannelFlow_appInstanceArn</a> - The ARN of the channel flow
--   request.
--   
--   <a>$sel:processors:CreateChannelFlow'</a>,
--   <a>createChannelFlow_processors</a> - Information about the processor
--   Lambda functions.
--   
--   <a>$sel:name:CreateChannelFlow'</a>, <a>createChannelFlow_name</a> -
--   The name of the channel flow.
--   
--   <a>$sel:clientRequestToken:CreateChannelFlow'</a>,
--   <a>createChannelFlow_clientRequestToken</a> - The client token for the
--   request. An Idempotency token.
newCreateChannelFlow :: Text -> NonEmpty Processor -> Text -> Text -> CreateChannelFlow

-- | The tags for the creation request.
createChannelFlow_tags :: Lens' CreateChannelFlow (Maybe (NonEmpty Tag))

-- | The ARN of the channel flow request.
createChannelFlow_appInstanceArn :: Lens' CreateChannelFlow Text

-- | Information about the processor Lambda functions.
createChannelFlow_processors :: Lens' CreateChannelFlow (NonEmpty Processor)

-- | The name of the channel flow.
createChannelFlow_name :: Lens' CreateChannelFlow Text

-- | The client token for the request. An Idempotency token.
createChannelFlow_clientRequestToken :: Lens' CreateChannelFlow Text

-- | <i>See:</i> <a>newCreateChannelFlowResponse</a> smart constructor.
data CreateChannelFlowResponse
CreateChannelFlowResponse' :: Maybe Text -> Int -> CreateChannelFlowResponse

-- | The ARN of the channel flow.
[$sel:channelFlowArn:CreateChannelFlowResponse'] :: CreateChannelFlowResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:CreateChannelFlowResponse'] :: CreateChannelFlowResponse -> Int

-- | Create a value of <a>CreateChannelFlowResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:channelFlowArn:CreateChannelFlowResponse'</a>,
--   <a>createChannelFlowResponse_channelFlowArn</a> - The ARN of the
--   channel flow.
--   
--   <a>$sel:httpStatus:CreateChannelFlowResponse'</a>,
--   <a>createChannelFlowResponse_httpStatus</a> - The response's http
--   status code.
newCreateChannelFlowResponse :: Int -> CreateChannelFlowResponse

-- | The ARN of the channel flow.
createChannelFlowResponse_channelFlowArn :: Lens' CreateChannelFlowResponse (Maybe Text)

-- | The response's http status code.
createChannelFlowResponse_httpStatus :: Lens' CreateChannelFlowResponse Int
instance GHC.Generics.Generic Network.AWS.ChimeSDKMessaging.CreateChannelFlow.CreateChannelFlow
instance GHC.Show.Show Network.AWS.ChimeSDKMessaging.CreateChannelFlow.CreateChannelFlow
instance GHC.Classes.Eq Network.AWS.ChimeSDKMessaging.CreateChannelFlow.CreateChannelFlow
instance GHC.Generics.Generic Network.AWS.ChimeSDKMessaging.CreateChannelFlow.CreateChannelFlowResponse
instance GHC.Show.Show Network.AWS.ChimeSDKMessaging.CreateChannelFlow.CreateChannelFlowResponse
instance GHC.Read.Read Network.AWS.ChimeSDKMessaging.CreateChannelFlow.CreateChannelFlowResponse
instance GHC.Classes.Eq Network.AWS.ChimeSDKMessaging.CreateChannelFlow.CreateChannelFlowResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ChimeSDKMessaging.CreateChannelFlow.CreateChannelFlow
instance Control.DeepSeq.NFData Network.AWS.ChimeSDKMessaging.CreateChannelFlow.CreateChannelFlowResponse
instance Data.Hashable.Class.Hashable Network.AWS.ChimeSDKMessaging.CreateChannelFlow.CreateChannelFlow
instance Control.DeepSeq.NFData Network.AWS.ChimeSDKMessaging.CreateChannelFlow.CreateChannelFlow
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ChimeSDKMessaging.CreateChannelFlow.CreateChannelFlow
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ChimeSDKMessaging.CreateChannelFlow.CreateChannelFlow
instance Network.AWS.Data.Path.ToPath Network.AWS.ChimeSDKMessaging.CreateChannelFlow.CreateChannelFlow
instance Network.AWS.Data.Query.ToQuery Network.AWS.ChimeSDKMessaging.CreateChannelFlow.CreateChannelFlow


-- | Permanently bans a member from a channel. Moderators can't add banned
--   members to a channel. To undo a ban, you first have to
--   <tt>DeleteChannelBan</tt>, and then <tt>CreateChannelMembership</tt>.
--   Bans are cleaned up when you delete users or channels.
--   
--   If you ban a user who is already part of a channel, that user is
--   automatically kicked from the channel.
--   
--   The <tt>x-amz-chime-bearer</tt> request header is mandatory. Use the
--   <tt>AppInstanceUserArn</tt> of the user that makes the API call as the
--   value in the header.
module Network.AWS.ChimeSDKMessaging.CreateChannelBan

-- | <i>See:</i> <a>newCreateChannelBan</a> smart constructor.
data CreateChannelBan
CreateChannelBan' :: Text -> Text -> Text -> CreateChannelBan

-- | The ARN of the ban request.
[$sel:channelArn:CreateChannelBan'] :: CreateChannelBan -> Text

-- | The ARN of the member being banned.
[$sel:memberArn:CreateChannelBan'] :: CreateChannelBan -> Text

-- | The <tt>AppInstanceUserArn</tt> of the user that makes the API call.
[$sel:chimeBearer:CreateChannelBan'] :: CreateChannelBan -> Text

-- | Create a value of <a>CreateChannelBan</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:channelArn:CreateChannelBan'</a>,
--   <a>createChannelBan_channelArn</a> - The ARN of the ban request.
--   
--   <a>$sel:memberArn:CreateChannelBan'</a>,
--   <a>createChannelBan_memberArn</a> - The ARN of the member being
--   banned.
--   
--   <a>$sel:chimeBearer:CreateChannelBan'</a>,
--   <a>createChannelBan_chimeBearer</a> - The <tt>AppInstanceUserArn</tt>
--   of the user that makes the API call.
newCreateChannelBan :: Text -> Text -> Text -> CreateChannelBan

-- | The ARN of the ban request.
createChannelBan_channelArn :: Lens' CreateChannelBan Text

-- | The ARN of the member being banned.
createChannelBan_memberArn :: Lens' CreateChannelBan Text

-- | The <tt>AppInstanceUserArn</tt> of the user that makes the API call.
createChannelBan_chimeBearer :: Lens' CreateChannelBan Text

-- | <i>See:</i> <a>newCreateChannelBanResponse</a> smart constructor.
data CreateChannelBanResponse
CreateChannelBanResponse' :: Maybe Text -> Maybe Identity -> Int -> CreateChannelBanResponse

-- | The ARN of the response to the ban request.
[$sel:channelArn:CreateChannelBanResponse'] :: CreateChannelBanResponse -> Maybe Text

-- | The <tt>ChannelArn</tt> and <tt>BannedIdentity</tt> of the member in
--   the ban response.
[$sel:member:CreateChannelBanResponse'] :: CreateChannelBanResponse -> Maybe Identity

-- | The response's http status code.
[$sel:httpStatus:CreateChannelBanResponse'] :: CreateChannelBanResponse -> Int

-- | Create a value of <a>CreateChannelBanResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:channelArn:CreateChannelBan'</a>,
--   <a>createChannelBanResponse_channelArn</a> - The ARN of the response
--   to the ban request.
--   
--   <a>$sel:member:CreateChannelBanResponse'</a>,
--   <a>createChannelBanResponse_member</a> - The <tt>ChannelArn</tt> and
--   <tt>BannedIdentity</tt> of the member in the ban response.
--   
--   <a>$sel:httpStatus:CreateChannelBanResponse'</a>,
--   <a>createChannelBanResponse_httpStatus</a> - The response's http
--   status code.
newCreateChannelBanResponse :: Int -> CreateChannelBanResponse

-- | The ARN of the response to the ban request.
createChannelBanResponse_channelArn :: Lens' CreateChannelBanResponse (Maybe Text)

-- | The <tt>ChannelArn</tt> and <tt>BannedIdentity</tt> of the member in
--   the ban response.
createChannelBanResponse_member :: Lens' CreateChannelBanResponse (Maybe Identity)

-- | The response's http status code.
createChannelBanResponse_httpStatus :: Lens' CreateChannelBanResponse Int
instance GHC.Generics.Generic Network.AWS.ChimeSDKMessaging.CreateChannelBan.CreateChannelBan
instance GHC.Show.Show Network.AWS.ChimeSDKMessaging.CreateChannelBan.CreateChannelBan
instance GHC.Read.Read Network.AWS.ChimeSDKMessaging.CreateChannelBan.CreateChannelBan
instance GHC.Classes.Eq Network.AWS.ChimeSDKMessaging.CreateChannelBan.CreateChannelBan
instance GHC.Generics.Generic Network.AWS.ChimeSDKMessaging.CreateChannelBan.CreateChannelBanResponse
instance GHC.Show.Show Network.AWS.ChimeSDKMessaging.CreateChannelBan.CreateChannelBanResponse
instance GHC.Classes.Eq Network.AWS.ChimeSDKMessaging.CreateChannelBan.CreateChannelBanResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ChimeSDKMessaging.CreateChannelBan.CreateChannelBan
instance Control.DeepSeq.NFData Network.AWS.ChimeSDKMessaging.CreateChannelBan.CreateChannelBanResponse
instance Data.Hashable.Class.Hashable Network.AWS.ChimeSDKMessaging.CreateChannelBan.CreateChannelBan
instance Control.DeepSeq.NFData Network.AWS.ChimeSDKMessaging.CreateChannelBan.CreateChannelBan
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ChimeSDKMessaging.CreateChannelBan.CreateChannelBan
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ChimeSDKMessaging.CreateChannelBan.CreateChannelBan
instance Network.AWS.Data.Path.ToPath Network.AWS.ChimeSDKMessaging.CreateChannelBan.CreateChannelBan
instance Network.AWS.Data.Query.ToQuery Network.AWS.ChimeSDKMessaging.CreateChannelBan.CreateChannelBan


-- | Creates a channel to which you can add users and send messages.
--   
--   <b>Restriction</b>: You can't change a channel's privacy.
--   
--   The <tt>x-amz-chime-bearer</tt> request header is mandatory. Use the
--   <tt>AppInstanceUserArn</tt> of the user that makes the API call as the
--   value in the header.
module Network.AWS.ChimeSDKMessaging.CreateChannel

-- | <i>See:</i> <a>newCreateChannel</a> smart constructor.
data CreateChannel
CreateChannel' :: Maybe ChannelMode -> Maybe ChannelPrivacy -> Maybe (Sensitive Text) -> Maybe (NonEmpty Tag) -> Text -> Sensitive Text -> Sensitive Text -> Text -> CreateChannel

-- | The channel mode: <tt>UNRESTRICTED</tt> or <tt>RESTRICTED</tt>.
--   Administrators, moderators, and channel members can add themselves and
--   other members to unrestricted channels. Only administrators and
--   moderators can add members to restricted channels.
[$sel:mode:CreateChannel'] :: CreateChannel -> Maybe ChannelMode

-- | The channel's privacy level: <tt>PUBLIC</tt> or <tt>PRIVATE</tt>.
--   Private channels aren't discoverable by users outside the channel.
--   Public channels are discoverable by anyone in the
--   <tt>AppInstance</tt>.
[$sel:privacy:CreateChannel'] :: CreateChannel -> Maybe ChannelPrivacy

-- | The metadata of the creation request. Limited to 1KB and UTF-8.
[$sel:metadata:CreateChannel'] :: CreateChannel -> Maybe (Sensitive Text)

-- | The tags for the creation request.
[$sel:tags:CreateChannel'] :: CreateChannel -> Maybe (NonEmpty Tag)

-- | The ARN of the channel request.
[$sel:appInstanceArn:CreateChannel'] :: CreateChannel -> Text

-- | The name of the channel.
[$sel:name:CreateChannel'] :: CreateChannel -> Sensitive Text

-- | The client token for the request. An <tt>Idempotency</tt> token.
[$sel:clientRequestToken:CreateChannel'] :: CreateChannel -> Sensitive Text

-- | The <tt>AppInstanceUserArn</tt> of the user that makes the API call.
[$sel:chimeBearer:CreateChannel'] :: CreateChannel -> Text

-- | Create a value of <a>CreateChannel</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:mode:CreateChannel'</a>, <a>createChannel_mode</a> - The
--   channel mode: <tt>UNRESTRICTED</tt> or <tt>RESTRICTED</tt>.
--   Administrators, moderators, and channel members can add themselves and
--   other members to unrestricted channels. Only administrators and
--   moderators can add members to restricted channels.
--   
--   <a>$sel:privacy:CreateChannel'</a>, <a>createChannel_privacy</a> - The
--   channel's privacy level: <tt>PUBLIC</tt> or <tt>PRIVATE</tt>. Private
--   channels aren't discoverable by users outside the channel. Public
--   channels are discoverable by anyone in the <tt>AppInstance</tt>.
--   
--   <a>$sel:metadata:CreateChannel'</a>, <a>createChannel_metadata</a> -
--   The metadata of the creation request. Limited to 1KB and UTF-8.
--   
--   <a>$sel:tags:CreateChannel'</a>, <a>createChannel_tags</a> - The tags
--   for the creation request.
--   
--   <a>$sel:appInstanceArn:CreateChannel'</a>,
--   <a>createChannel_appInstanceArn</a> - The ARN of the channel request.
--   
--   <a>$sel:name:CreateChannel'</a>, <a>createChannel_name</a> - The name
--   of the channel.
--   
--   <a>$sel:clientRequestToken:CreateChannel'</a>,
--   <a>createChannel_clientRequestToken</a> - The client token for the
--   request. An <tt>Idempotency</tt> token.
--   
--   <a>$sel:chimeBearer:CreateChannel'</a>,
--   <a>createChannel_chimeBearer</a> - The <tt>AppInstanceUserArn</tt> of
--   the user that makes the API call.
newCreateChannel :: Text -> Text -> Text -> Text -> CreateChannel

-- | The channel mode: <tt>UNRESTRICTED</tt> or <tt>RESTRICTED</tt>.
--   Administrators, moderators, and channel members can add themselves and
--   other members to unrestricted channels. Only administrators and
--   moderators can add members to restricted channels.
createChannel_mode :: Lens' CreateChannel (Maybe ChannelMode)

-- | The channel's privacy level: <tt>PUBLIC</tt> or <tt>PRIVATE</tt>.
--   Private channels aren't discoverable by users outside the channel.
--   Public channels are discoverable by anyone in the
--   <tt>AppInstance</tt>.
createChannel_privacy :: Lens' CreateChannel (Maybe ChannelPrivacy)

-- | The metadata of the creation request. Limited to 1KB and UTF-8.
createChannel_metadata :: Lens' CreateChannel (Maybe Text)

-- | The tags for the creation request.
createChannel_tags :: Lens' CreateChannel (Maybe (NonEmpty Tag))

-- | The ARN of the channel request.
createChannel_appInstanceArn :: Lens' CreateChannel Text

-- | The name of the channel.
createChannel_name :: Lens' CreateChannel Text

-- | The client token for the request. An <tt>Idempotency</tt> token.
createChannel_clientRequestToken :: Lens' CreateChannel Text

-- | The <tt>AppInstanceUserArn</tt> of the user that makes the API call.
createChannel_chimeBearer :: Lens' CreateChannel Text

-- | <i>See:</i> <a>newCreateChannelResponse</a> smart constructor.
data CreateChannelResponse
CreateChannelResponse' :: Maybe Text -> Int -> CreateChannelResponse

-- | The ARN of the channel.
[$sel:channelArn:CreateChannelResponse'] :: CreateChannelResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:CreateChannelResponse'] :: CreateChannelResponse -> Int

-- | Create a value of <a>CreateChannelResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:channelArn:CreateChannelResponse'</a>,
--   <a>createChannelResponse_channelArn</a> - The ARN of the channel.
--   
--   <a>$sel:httpStatus:CreateChannelResponse'</a>,
--   <a>createChannelResponse_httpStatus</a> - The response's http status
--   code.
newCreateChannelResponse :: Int -> CreateChannelResponse

-- | The ARN of the channel.
createChannelResponse_channelArn :: Lens' CreateChannelResponse (Maybe Text)

-- | The response's http status code.
createChannelResponse_httpStatus :: Lens' CreateChannelResponse Int
instance GHC.Generics.Generic Network.AWS.ChimeSDKMessaging.CreateChannel.CreateChannel
instance GHC.Show.Show Network.AWS.ChimeSDKMessaging.CreateChannel.CreateChannel
instance GHC.Classes.Eq Network.AWS.ChimeSDKMessaging.CreateChannel.CreateChannel
instance GHC.Generics.Generic Network.AWS.ChimeSDKMessaging.CreateChannel.CreateChannelResponse
instance GHC.Show.Show Network.AWS.ChimeSDKMessaging.CreateChannel.CreateChannelResponse
instance GHC.Read.Read Network.AWS.ChimeSDKMessaging.CreateChannel.CreateChannelResponse
instance GHC.Classes.Eq Network.AWS.ChimeSDKMessaging.CreateChannel.CreateChannelResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ChimeSDKMessaging.CreateChannel.CreateChannel
instance Control.DeepSeq.NFData Network.AWS.ChimeSDKMessaging.CreateChannel.CreateChannelResponse
instance Data.Hashable.Class.Hashable Network.AWS.ChimeSDKMessaging.CreateChannel.CreateChannel
instance Control.DeepSeq.NFData Network.AWS.ChimeSDKMessaging.CreateChannel.CreateChannel
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ChimeSDKMessaging.CreateChannel.CreateChannel
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ChimeSDKMessaging.CreateChannel.CreateChannel
instance Network.AWS.Data.Path.ToPath Network.AWS.ChimeSDKMessaging.CreateChannel.CreateChannel
instance Network.AWS.Data.Query.ToQuery Network.AWS.ChimeSDKMessaging.CreateChannel.CreateChannel


-- | Calls back Chime SDK Messaging with a processing response message.
--   This should be invoked from the processor Lambda. This is a developer
--   API.
--   
--   You can return one of the following processing responses:
--   
--   <ul>
--   <li>Update message content or metadata</li>
--   <li>Deny a message</li>
--   <li>Make no changes to the message</li>
--   </ul>
module Network.AWS.ChimeSDKMessaging.ChannelFlowCallback

-- | <i>See:</i> <a>newChannelFlowCallback</a> smart constructor.
data ChannelFlowCallback
ChannelFlowCallback' :: Maybe Bool -> Text -> Text -> ChannelMessageCallback -> ChannelFlowCallback

-- | When a processor determines that a message needs to be
--   <tt>DENIED</tt>, pass this parameter with a value of true.
[$sel:deleteResource:ChannelFlowCallback'] :: ChannelFlowCallback -> Maybe Bool

-- | The identifier passed to the processor by the service when invoked.
--   Use the identifier to call back the service.
[$sel:callbackId:ChannelFlowCallback'] :: ChannelFlowCallback -> Text

-- | The ARN of the channel.
[$sel:channelArn:ChannelFlowCallback'] :: ChannelFlowCallback -> Text

-- | Stores information about the processed message.
[$sel:channelMessage:ChannelFlowCallback'] :: ChannelFlowCallback -> ChannelMessageCallback

-- | Create a value of <a>ChannelFlowCallback</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deleteResource:ChannelFlowCallback'</a>,
--   <a>channelFlowCallback_deleteResource</a> - When a processor
--   determines that a message needs to be <tt>DENIED</tt>, pass this
--   parameter with a value of true.
--   
--   <a>$sel:callbackId:ChannelFlowCallback'</a>,
--   <a>channelFlowCallback_callbackId</a> - The identifier passed to the
--   processor by the service when invoked. Use the identifier to call back
--   the service.
--   
--   <a>$sel:channelArn:ChannelFlowCallback'</a>,
--   <a>channelFlowCallback_channelArn</a> - The ARN of the channel.
--   
--   <a>$sel:channelMessage:ChannelFlowCallback'</a>,
--   <a>channelFlowCallback_channelMessage</a> - Stores information about
--   the processed message.
newChannelFlowCallback :: Text -> Text -> ChannelMessageCallback -> ChannelFlowCallback

-- | When a processor determines that a message needs to be
--   <tt>DENIED</tt>, pass this parameter with a value of true.
channelFlowCallback_deleteResource :: Lens' ChannelFlowCallback (Maybe Bool)

-- | The identifier passed to the processor by the service when invoked.
--   Use the identifier to call back the service.
channelFlowCallback_callbackId :: Lens' ChannelFlowCallback Text

-- | The ARN of the channel.
channelFlowCallback_channelArn :: Lens' ChannelFlowCallback Text

-- | Stores information about the processed message.
channelFlowCallback_channelMessage :: Lens' ChannelFlowCallback ChannelMessageCallback

-- | <i>See:</i> <a>newChannelFlowCallbackResponse</a> smart constructor.
data ChannelFlowCallbackResponse
ChannelFlowCallbackResponse' :: Maybe Text -> Maybe Text -> Int -> ChannelFlowCallbackResponse

-- | The call back ID passed in the request.
[$sel:callbackId:ChannelFlowCallbackResponse'] :: ChannelFlowCallbackResponse -> Maybe Text

-- | The ARN of the channel.
[$sel:channelArn:ChannelFlowCallbackResponse'] :: ChannelFlowCallbackResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ChannelFlowCallbackResponse'] :: ChannelFlowCallbackResponse -> Int

-- | Create a value of <a>ChannelFlowCallbackResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:callbackId:ChannelFlowCallback'</a>,
--   <a>channelFlowCallbackResponse_callbackId</a> - The call back ID
--   passed in the request.
--   
--   <a>$sel:channelArn:ChannelFlowCallback'</a>,
--   <a>channelFlowCallbackResponse_channelArn</a> - The ARN of the
--   channel.
--   
--   <a>$sel:httpStatus:ChannelFlowCallbackResponse'</a>,
--   <a>channelFlowCallbackResponse_httpStatus</a> - The response's http
--   status code.
newChannelFlowCallbackResponse :: Int -> ChannelFlowCallbackResponse

-- | The call back ID passed in the request.
channelFlowCallbackResponse_callbackId :: Lens' ChannelFlowCallbackResponse (Maybe Text)

-- | The ARN of the channel.
channelFlowCallbackResponse_channelArn :: Lens' ChannelFlowCallbackResponse (Maybe Text)

-- | The response's http status code.
channelFlowCallbackResponse_httpStatus :: Lens' ChannelFlowCallbackResponse Int
instance GHC.Generics.Generic Network.AWS.ChimeSDKMessaging.ChannelFlowCallback.ChannelFlowCallback
instance GHC.Show.Show Network.AWS.ChimeSDKMessaging.ChannelFlowCallback.ChannelFlowCallback
instance GHC.Classes.Eq Network.AWS.ChimeSDKMessaging.ChannelFlowCallback.ChannelFlowCallback
instance GHC.Generics.Generic Network.AWS.ChimeSDKMessaging.ChannelFlowCallback.ChannelFlowCallbackResponse
instance GHC.Show.Show Network.AWS.ChimeSDKMessaging.ChannelFlowCallback.ChannelFlowCallbackResponse
instance GHC.Read.Read Network.AWS.ChimeSDKMessaging.ChannelFlowCallback.ChannelFlowCallbackResponse
instance GHC.Classes.Eq Network.AWS.ChimeSDKMessaging.ChannelFlowCallback.ChannelFlowCallbackResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ChimeSDKMessaging.ChannelFlowCallback.ChannelFlowCallback
instance Control.DeepSeq.NFData Network.AWS.ChimeSDKMessaging.ChannelFlowCallback.ChannelFlowCallbackResponse
instance Data.Hashable.Class.Hashable Network.AWS.ChimeSDKMessaging.ChannelFlowCallback.ChannelFlowCallback
instance Control.DeepSeq.NFData Network.AWS.ChimeSDKMessaging.ChannelFlowCallback.ChannelFlowCallback
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ChimeSDKMessaging.ChannelFlowCallback.ChannelFlowCallback
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ChimeSDKMessaging.ChannelFlowCallback.ChannelFlowCallback
instance Network.AWS.Data.Path.ToPath Network.AWS.ChimeSDKMessaging.ChannelFlowCallback.ChannelFlowCallback
instance Network.AWS.Data.Query.ToQuery Network.AWS.ChimeSDKMessaging.ChannelFlowCallback.ChannelFlowCallback


-- | Adds a specified number of users to a channel.
module Network.AWS.ChimeSDKMessaging.BatchCreateChannelMembership

-- | <i>See:</i> <a>newBatchCreateChannelMembership</a> smart constructor.
data BatchCreateChannelMembership
BatchCreateChannelMembership' :: Maybe ChannelMembershipType -> Text -> NonEmpty Text -> Text -> BatchCreateChannelMembership

-- | The membership type of a user, <tt>DEFAULT</tt> or <tt>HIDDEN</tt>.
--   Default members are always returned as part of
--   <tt>ListChannelMemberships</tt>. Hidden members are only returned if
--   the type filter in <tt>ListChannelMemberships</tt> equals
--   <tt>HIDDEN</tt>. Otherwise hidden members are not returned. This is
--   only supported by moderators.
[$sel:type':BatchCreateChannelMembership'] :: BatchCreateChannelMembership -> Maybe ChannelMembershipType

-- | The ARN of the channel to which you're adding users.
[$sel:channelArn:BatchCreateChannelMembership'] :: BatchCreateChannelMembership -> Text

-- | The ARNs of the members you want to add to the channel.
[$sel:memberArns:BatchCreateChannelMembership'] :: BatchCreateChannelMembership -> NonEmpty Text

-- | The <tt>AppInstanceUserArn</tt> of the user that makes the API call.
[$sel:chimeBearer:BatchCreateChannelMembership'] :: BatchCreateChannelMembership -> Text

-- | Create a value of <a>BatchCreateChannelMembership</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:type':BatchCreateChannelMembership'</a>,
--   <a>batchCreateChannelMembership_type</a> - The membership type of a
--   user, <tt>DEFAULT</tt> or <tt>HIDDEN</tt>. Default members are always
--   returned as part of <tt>ListChannelMemberships</tt>. Hidden members
--   are only returned if the type filter in
--   <tt>ListChannelMemberships</tt> equals <tt>HIDDEN</tt>. Otherwise
--   hidden members are not returned. This is only supported by moderators.
--   
--   <a>$sel:channelArn:BatchCreateChannelMembership'</a>,
--   <a>batchCreateChannelMembership_channelArn</a> - The ARN of the
--   channel to which you're adding users.
--   
--   <a>$sel:memberArns:BatchCreateChannelMembership'</a>,
--   <a>batchCreateChannelMembership_memberArns</a> - The ARNs of the
--   members you want to add to the channel.
--   
--   <a>$sel:chimeBearer:BatchCreateChannelMembership'</a>,
--   <a>batchCreateChannelMembership_chimeBearer</a> - The
--   <tt>AppInstanceUserArn</tt> of the user that makes the API call.
newBatchCreateChannelMembership :: Text -> NonEmpty Text -> Text -> BatchCreateChannelMembership

-- | The membership type of a user, <tt>DEFAULT</tt> or <tt>HIDDEN</tt>.
--   Default members are always returned as part of
--   <tt>ListChannelMemberships</tt>. Hidden members are only returned if
--   the type filter in <tt>ListChannelMemberships</tt> equals
--   <tt>HIDDEN</tt>. Otherwise hidden members are not returned. This is
--   only supported by moderators.
batchCreateChannelMembership_type :: Lens' BatchCreateChannelMembership (Maybe ChannelMembershipType)

-- | The ARN of the channel to which you're adding users.
batchCreateChannelMembership_channelArn :: Lens' BatchCreateChannelMembership Text

-- | The ARNs of the members you want to add to the channel.
batchCreateChannelMembership_memberArns :: Lens' BatchCreateChannelMembership (NonEmpty Text)

-- | The <tt>AppInstanceUserArn</tt> of the user that makes the API call.
batchCreateChannelMembership_chimeBearer :: Lens' BatchCreateChannelMembership Text

-- | <i>See:</i> <a>newBatchCreateChannelMembershipResponse</a> smart
--   constructor.
data BatchCreateChannelMembershipResponse
BatchCreateChannelMembershipResponse' :: Maybe [BatchCreateChannelMembershipError] -> Maybe BatchChannelMemberships -> Int -> BatchCreateChannelMembershipResponse

-- | If the action fails for one or more of the memberships in the request,
--   a list of the memberships is returned, along with error codes and
--   error messages.
[$sel:errors:BatchCreateChannelMembershipResponse'] :: BatchCreateChannelMembershipResponse -> Maybe [BatchCreateChannelMembershipError]

-- | The list of channel memberships in the response.
[$sel:batchChannelMemberships:BatchCreateChannelMembershipResponse'] :: BatchCreateChannelMembershipResponse -> Maybe BatchChannelMemberships

-- | The response's http status code.
[$sel:httpStatus:BatchCreateChannelMembershipResponse'] :: BatchCreateChannelMembershipResponse -> Int

-- | Create a value of <a>BatchCreateChannelMembershipResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:errors:BatchCreateChannelMembershipResponse'</a>,
--   <a>batchCreateChannelMembershipResponse_errors</a> - If the action
--   fails for one or more of the memberships in the request, a list of the
--   memberships is returned, along with error codes and error messages.
--   
--   
--   <a>$sel:batchChannelMemberships:BatchCreateChannelMembershipResponse'</a>,
--   <a>batchCreateChannelMembershipResponse_batchChannelMemberships</a> -
--   The list of channel memberships in the response.
--   
--   <a>$sel:httpStatus:BatchCreateChannelMembershipResponse'</a>,
--   <a>batchCreateChannelMembershipResponse_httpStatus</a> - The
--   response's http status code.
newBatchCreateChannelMembershipResponse :: Int -> BatchCreateChannelMembershipResponse

-- | If the action fails for one or more of the memberships in the request,
--   a list of the memberships is returned, along with error codes and
--   error messages.
batchCreateChannelMembershipResponse_errors :: Lens' BatchCreateChannelMembershipResponse (Maybe [BatchCreateChannelMembershipError])

-- | The list of channel memberships in the response.
batchCreateChannelMembershipResponse_batchChannelMemberships :: Lens' BatchCreateChannelMembershipResponse (Maybe BatchChannelMemberships)

-- | The response's http status code.
batchCreateChannelMembershipResponse_httpStatus :: Lens' BatchCreateChannelMembershipResponse Int
instance GHC.Generics.Generic Network.AWS.ChimeSDKMessaging.BatchCreateChannelMembership.BatchCreateChannelMembership
instance GHC.Show.Show Network.AWS.ChimeSDKMessaging.BatchCreateChannelMembership.BatchCreateChannelMembership
instance GHC.Read.Read Network.AWS.ChimeSDKMessaging.BatchCreateChannelMembership.BatchCreateChannelMembership
instance GHC.Classes.Eq Network.AWS.ChimeSDKMessaging.BatchCreateChannelMembership.BatchCreateChannelMembership
instance GHC.Generics.Generic Network.AWS.ChimeSDKMessaging.BatchCreateChannelMembership.BatchCreateChannelMembershipResponse
instance GHC.Show.Show Network.AWS.ChimeSDKMessaging.BatchCreateChannelMembership.BatchCreateChannelMembershipResponse
instance GHC.Classes.Eq Network.AWS.ChimeSDKMessaging.BatchCreateChannelMembership.BatchCreateChannelMembershipResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ChimeSDKMessaging.BatchCreateChannelMembership.BatchCreateChannelMembership
instance Control.DeepSeq.NFData Network.AWS.ChimeSDKMessaging.BatchCreateChannelMembership.BatchCreateChannelMembershipResponse
instance Data.Hashable.Class.Hashable Network.AWS.ChimeSDKMessaging.BatchCreateChannelMembership.BatchCreateChannelMembership
instance Control.DeepSeq.NFData Network.AWS.ChimeSDKMessaging.BatchCreateChannelMembership.BatchCreateChannelMembership
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ChimeSDKMessaging.BatchCreateChannelMembership.BatchCreateChannelMembership
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ChimeSDKMessaging.BatchCreateChannelMembership.BatchCreateChannelMembership
instance Network.AWS.Data.Path.ToPath Network.AWS.ChimeSDKMessaging.BatchCreateChannelMembership.BatchCreateChannelMembership
instance Network.AWS.Data.Query.ToQuery Network.AWS.ChimeSDKMessaging.BatchCreateChannelMembership.BatchCreateChannelMembership


-- | Associates a channel flow with a channel. Once associated, all
--   messages to that channel go through channel flow processors. To stop
--   processing, use the <tt>DisassociateChannelFlow</tt> API.
--   
--   Only administrators or channel moderators can associate a channel
--   flow. The <tt>x-amz-chime-bearer</tt> request header is mandatory. Use
--   the <tt>AppInstanceUserArn</tt> of the user that makes the API call as
--   the value in the header.
module Network.AWS.ChimeSDKMessaging.AssociateChannelFlow

-- | <i>See:</i> <a>newAssociateChannelFlow</a> smart constructor.
data AssociateChannelFlow
AssociateChannelFlow' :: Text -> Text -> Text -> AssociateChannelFlow

-- | The ARN of the channel.
[$sel:channelArn:AssociateChannelFlow'] :: AssociateChannelFlow -> Text

-- | The ARN of the channel flow.
[$sel:channelFlowArn:AssociateChannelFlow'] :: AssociateChannelFlow -> Text

-- | The <tt>AppInstanceUserArn</tt> of the user making the API call.
[$sel:chimeBearer:AssociateChannelFlow'] :: AssociateChannelFlow -> Text

-- | Create a value of <a>AssociateChannelFlow</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:channelArn:AssociateChannelFlow'</a>,
--   <a>associateChannelFlow_channelArn</a> - The ARN of the channel.
--   
--   <a>$sel:channelFlowArn:AssociateChannelFlow'</a>,
--   <a>associateChannelFlow_channelFlowArn</a> - The ARN of the channel
--   flow.
--   
--   <a>$sel:chimeBearer:AssociateChannelFlow'</a>,
--   <a>associateChannelFlow_chimeBearer</a> - The
--   <tt>AppInstanceUserArn</tt> of the user making the API call.
newAssociateChannelFlow :: Text -> Text -> Text -> AssociateChannelFlow

-- | The ARN of the channel.
associateChannelFlow_channelArn :: Lens' AssociateChannelFlow Text

-- | The ARN of the channel flow.
associateChannelFlow_channelFlowArn :: Lens' AssociateChannelFlow Text

-- | The <tt>AppInstanceUserArn</tt> of the user making the API call.
associateChannelFlow_chimeBearer :: Lens' AssociateChannelFlow Text

-- | <i>See:</i> <a>newAssociateChannelFlowResponse</a> smart constructor.
data AssociateChannelFlowResponse
AssociateChannelFlowResponse' :: AssociateChannelFlowResponse

-- | Create a value of <a>AssociateChannelFlowResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newAssociateChannelFlowResponse :: AssociateChannelFlowResponse
instance GHC.Generics.Generic Network.AWS.ChimeSDKMessaging.AssociateChannelFlow.AssociateChannelFlow
instance GHC.Show.Show Network.AWS.ChimeSDKMessaging.AssociateChannelFlow.AssociateChannelFlow
instance GHC.Read.Read Network.AWS.ChimeSDKMessaging.AssociateChannelFlow.AssociateChannelFlow
instance GHC.Classes.Eq Network.AWS.ChimeSDKMessaging.AssociateChannelFlow.AssociateChannelFlow
instance GHC.Generics.Generic Network.AWS.ChimeSDKMessaging.AssociateChannelFlow.AssociateChannelFlowResponse
instance GHC.Show.Show Network.AWS.ChimeSDKMessaging.AssociateChannelFlow.AssociateChannelFlowResponse
instance GHC.Read.Read Network.AWS.ChimeSDKMessaging.AssociateChannelFlow.AssociateChannelFlowResponse
instance GHC.Classes.Eq Network.AWS.ChimeSDKMessaging.AssociateChannelFlow.AssociateChannelFlowResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ChimeSDKMessaging.AssociateChannelFlow.AssociateChannelFlow
instance Control.DeepSeq.NFData Network.AWS.ChimeSDKMessaging.AssociateChannelFlow.AssociateChannelFlowResponse
instance Data.Hashable.Class.Hashable Network.AWS.ChimeSDKMessaging.AssociateChannelFlow.AssociateChannelFlow
instance Control.DeepSeq.NFData Network.AWS.ChimeSDKMessaging.AssociateChannelFlow.AssociateChannelFlow
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ChimeSDKMessaging.AssociateChannelFlow.AssociateChannelFlow
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ChimeSDKMessaging.AssociateChannelFlow.AssociateChannelFlow
instance Network.AWS.Data.Path.ToPath Network.AWS.ChimeSDKMessaging.AssociateChannelFlow.AssociateChannelFlow
instance Network.AWS.Data.Query.ToQuery Network.AWS.ChimeSDKMessaging.AssociateChannelFlow.AssociateChannelFlow


-- | Removes the specified tags from the specified Amazon Chime SDK
--   messaging resource.
module Network.AWS.ChimeSDKMessaging.UntagResource

-- | <i>See:</i> <a>newUntagResource</a> smart constructor.
data UntagResource
UntagResource' :: Text -> NonEmpty (Sensitive Text) -> UntagResource

-- | The resource ARN.
[$sel:resourceARN:UntagResource'] :: UntagResource -> Text

-- | The tag keys.
[$sel:tagKeys:UntagResource'] :: UntagResource -> NonEmpty (Sensitive Text)

-- | Create a value of <a>UntagResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceARN:UntagResource'</a>,
--   <a>untagResource_resourceARN</a> - The resource ARN.
--   
--   <a>$sel:tagKeys:UntagResource'</a>, <a>untagResource_tagKeys</a> - The
--   tag keys.
newUntagResource :: Text -> NonEmpty Text -> UntagResource

-- | The resource ARN.
untagResource_resourceARN :: Lens' UntagResource Text

-- | The tag keys.
untagResource_tagKeys :: Lens' UntagResource (NonEmpty Text)

-- | <i>See:</i> <a>newUntagResourceResponse</a> smart constructor.
data UntagResourceResponse
UntagResourceResponse' :: UntagResourceResponse

-- | Create a value of <a>UntagResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newUntagResourceResponse :: UntagResourceResponse
instance GHC.Generics.Generic Network.AWS.ChimeSDKMessaging.UntagResource.UntagResource
instance GHC.Show.Show Network.AWS.ChimeSDKMessaging.UntagResource.UntagResource
instance GHC.Classes.Eq Network.AWS.ChimeSDKMessaging.UntagResource.UntagResource
instance GHC.Generics.Generic Network.AWS.ChimeSDKMessaging.UntagResource.UntagResourceResponse
instance GHC.Show.Show Network.AWS.ChimeSDKMessaging.UntagResource.UntagResourceResponse
instance GHC.Read.Read Network.AWS.ChimeSDKMessaging.UntagResource.UntagResourceResponse
instance GHC.Classes.Eq Network.AWS.ChimeSDKMessaging.UntagResource.UntagResourceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ChimeSDKMessaging.UntagResource.UntagResource
instance Control.DeepSeq.NFData Network.AWS.ChimeSDKMessaging.UntagResource.UntagResourceResponse
instance Data.Hashable.Class.Hashable Network.AWS.ChimeSDKMessaging.UntagResource.UntagResource
instance Control.DeepSeq.NFData Network.AWS.ChimeSDKMessaging.UntagResource.UntagResource
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ChimeSDKMessaging.UntagResource.UntagResource
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ChimeSDKMessaging.UntagResource.UntagResource
instance Network.AWS.Data.Path.ToPath Network.AWS.ChimeSDKMessaging.UntagResource.UntagResource
instance Network.AWS.Data.Query.ToQuery Network.AWS.ChimeSDKMessaging.UntagResource.UntagResource


-- | Update a channel's attributes.
--   
--   <b>Restriction</b>: You can't change a channel's privacy.
--   
--   The <tt>x-amz-chime-bearer</tt> request header is mandatory. Use the
--   <tt>AppInstanceUserArn</tt> of the user that makes the API call as the
--   value in the header.
module Network.AWS.ChimeSDKMessaging.UpdateChannel

-- | <i>See:</i> <a>newUpdateChannel</a> smart constructor.
data UpdateChannel
UpdateChannel' :: Maybe (Sensitive Text) -> Text -> Sensitive Text -> ChannelMode -> Text -> UpdateChannel

-- | The metadata for the update request.
[$sel:metadata:UpdateChannel'] :: UpdateChannel -> Maybe (Sensitive Text)

-- | The ARN of the channel.
[$sel:channelArn:UpdateChannel'] :: UpdateChannel -> Text

-- | The name of the channel.
[$sel:name:UpdateChannel'] :: UpdateChannel -> Sensitive Text

-- | The mode of the update request.
[$sel:mode:UpdateChannel'] :: UpdateChannel -> ChannelMode

-- | The <tt>AppInstanceUserArn</tt> of the user that makes the API call.
[$sel:chimeBearer:UpdateChannel'] :: UpdateChannel -> Text

-- | Create a value of <a>UpdateChannel</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:metadata:UpdateChannel'</a>, <a>updateChannel_metadata</a> -
--   The metadata for the update request.
--   
--   <a>$sel:channelArn:UpdateChannel'</a>, <a>updateChannel_channelArn</a>
--   - The ARN of the channel.
--   
--   <a>$sel:name:UpdateChannel'</a>, <a>updateChannel_name</a> - The name
--   of the channel.
--   
--   <a>$sel:mode:UpdateChannel'</a>, <a>updateChannel_mode</a> - The mode
--   of the update request.
--   
--   <a>$sel:chimeBearer:UpdateChannel'</a>,
--   <a>updateChannel_chimeBearer</a> - The <tt>AppInstanceUserArn</tt> of
--   the user that makes the API call.
newUpdateChannel :: Text -> Text -> ChannelMode -> Text -> UpdateChannel

-- | The metadata for the update request.
updateChannel_metadata :: Lens' UpdateChannel (Maybe Text)

-- | The ARN of the channel.
updateChannel_channelArn :: Lens' UpdateChannel Text

-- | The name of the channel.
updateChannel_name :: Lens' UpdateChannel Text

-- | The mode of the update request.
updateChannel_mode :: Lens' UpdateChannel ChannelMode

-- | The <tt>AppInstanceUserArn</tt> of the user that makes the API call.
updateChannel_chimeBearer :: Lens' UpdateChannel Text

-- | <i>See:</i> <a>newUpdateChannelResponse</a> smart constructor.
data UpdateChannelResponse
UpdateChannelResponse' :: Maybe Text -> Int -> UpdateChannelResponse

-- | The ARN of the channel.
[$sel:channelArn:UpdateChannelResponse'] :: UpdateChannelResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:UpdateChannelResponse'] :: UpdateChannelResponse -> Int

-- | Create a value of <a>UpdateChannelResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:channelArn:UpdateChannel'</a>,
--   <a>updateChannelResponse_channelArn</a> - The ARN of the channel.
--   
--   <a>$sel:httpStatus:UpdateChannelResponse'</a>,
--   <a>updateChannelResponse_httpStatus</a> - The response's http status
--   code.
newUpdateChannelResponse :: Int -> UpdateChannelResponse

-- | The ARN of the channel.
updateChannelResponse_channelArn :: Lens' UpdateChannelResponse (Maybe Text)

-- | The response's http status code.
updateChannelResponse_httpStatus :: Lens' UpdateChannelResponse Int
instance GHC.Generics.Generic Network.AWS.ChimeSDKMessaging.UpdateChannel.UpdateChannel
instance GHC.Show.Show Network.AWS.ChimeSDKMessaging.UpdateChannel.UpdateChannel
instance GHC.Classes.Eq Network.AWS.ChimeSDKMessaging.UpdateChannel.UpdateChannel
instance GHC.Generics.Generic Network.AWS.ChimeSDKMessaging.UpdateChannel.UpdateChannelResponse
instance GHC.Show.Show Network.AWS.ChimeSDKMessaging.UpdateChannel.UpdateChannelResponse
instance GHC.Read.Read Network.AWS.ChimeSDKMessaging.UpdateChannel.UpdateChannelResponse
instance GHC.Classes.Eq Network.AWS.ChimeSDKMessaging.UpdateChannel.UpdateChannelResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ChimeSDKMessaging.UpdateChannel.UpdateChannel
instance Control.DeepSeq.NFData Network.AWS.ChimeSDKMessaging.UpdateChannel.UpdateChannelResponse
instance Data.Hashable.Class.Hashable Network.AWS.ChimeSDKMessaging.UpdateChannel.UpdateChannel
instance Control.DeepSeq.NFData Network.AWS.ChimeSDKMessaging.UpdateChannel.UpdateChannel
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ChimeSDKMessaging.UpdateChannel.UpdateChannel
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ChimeSDKMessaging.UpdateChannel.UpdateChannel
instance Network.AWS.Data.Path.ToPath Network.AWS.ChimeSDKMessaging.UpdateChannel.UpdateChannel
instance Network.AWS.Data.Query.ToQuery Network.AWS.ChimeSDKMessaging.UpdateChannel.UpdateChannel


-- | Updates channel flow attributes. This is a developer API.
module Network.AWS.ChimeSDKMessaging.UpdateChannelFlow

-- | <i>See:</i> <a>newUpdateChannelFlow</a> smart constructor.
data UpdateChannelFlow
UpdateChannelFlow' :: Text -> NonEmpty Processor -> Sensitive Text -> UpdateChannelFlow

-- | The ARN of the channel flow.
[$sel:channelFlowArn:UpdateChannelFlow'] :: UpdateChannelFlow -> Text

-- | Information about the processor Lambda functions
[$sel:processors:UpdateChannelFlow'] :: UpdateChannelFlow -> NonEmpty Processor

-- | The name of the channel flow.
[$sel:name:UpdateChannelFlow'] :: UpdateChannelFlow -> Sensitive Text

-- | Create a value of <a>UpdateChannelFlow</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:channelFlowArn:UpdateChannelFlow'</a>,
--   <a>updateChannelFlow_channelFlowArn</a> - The ARN of the channel flow.
--   
--   <a>$sel:processors:UpdateChannelFlow'</a>,
--   <a>updateChannelFlow_processors</a> - Information about the processor
--   Lambda functions
--   
--   <a>$sel:name:UpdateChannelFlow'</a>, <a>updateChannelFlow_name</a> -
--   The name of the channel flow.
newUpdateChannelFlow :: Text -> NonEmpty Processor -> Text -> UpdateChannelFlow

-- | The ARN of the channel flow.
updateChannelFlow_channelFlowArn :: Lens' UpdateChannelFlow Text

-- | Information about the processor Lambda functions
updateChannelFlow_processors :: Lens' UpdateChannelFlow (NonEmpty Processor)

-- | The name of the channel flow.
updateChannelFlow_name :: Lens' UpdateChannelFlow Text

-- | <i>See:</i> <a>newUpdateChannelFlowResponse</a> smart constructor.
data UpdateChannelFlowResponse
UpdateChannelFlowResponse' :: Maybe Text -> Int -> UpdateChannelFlowResponse

-- | The ARN of the channel flow.
[$sel:channelFlowArn:UpdateChannelFlowResponse'] :: UpdateChannelFlowResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:UpdateChannelFlowResponse'] :: UpdateChannelFlowResponse -> Int

-- | Create a value of <a>UpdateChannelFlowResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:channelFlowArn:UpdateChannelFlow'</a>,
--   <a>updateChannelFlowResponse_channelFlowArn</a> - The ARN of the
--   channel flow.
--   
--   <a>$sel:httpStatus:UpdateChannelFlowResponse'</a>,
--   <a>updateChannelFlowResponse_httpStatus</a> - The response's http
--   status code.
newUpdateChannelFlowResponse :: Int -> UpdateChannelFlowResponse

-- | The ARN of the channel flow.
updateChannelFlowResponse_channelFlowArn :: Lens' UpdateChannelFlowResponse (Maybe Text)

-- | The response's http status code.
updateChannelFlowResponse_httpStatus :: Lens' UpdateChannelFlowResponse Int
instance GHC.Generics.Generic Network.AWS.ChimeSDKMessaging.UpdateChannelFlow.UpdateChannelFlow
instance GHC.Show.Show Network.AWS.ChimeSDKMessaging.UpdateChannelFlow.UpdateChannelFlow
instance GHC.Classes.Eq Network.AWS.ChimeSDKMessaging.UpdateChannelFlow.UpdateChannelFlow
instance GHC.Generics.Generic Network.AWS.ChimeSDKMessaging.UpdateChannelFlow.UpdateChannelFlowResponse
instance GHC.Show.Show Network.AWS.ChimeSDKMessaging.UpdateChannelFlow.UpdateChannelFlowResponse
instance GHC.Read.Read Network.AWS.ChimeSDKMessaging.UpdateChannelFlow.UpdateChannelFlowResponse
instance GHC.Classes.Eq Network.AWS.ChimeSDKMessaging.UpdateChannelFlow.UpdateChannelFlowResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ChimeSDKMessaging.UpdateChannelFlow.UpdateChannelFlow
instance Control.DeepSeq.NFData Network.AWS.ChimeSDKMessaging.UpdateChannelFlow.UpdateChannelFlowResponse
instance Data.Hashable.Class.Hashable Network.AWS.ChimeSDKMessaging.UpdateChannelFlow.UpdateChannelFlow
instance Control.DeepSeq.NFData Network.AWS.ChimeSDKMessaging.UpdateChannelFlow.UpdateChannelFlow
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ChimeSDKMessaging.UpdateChannelFlow.UpdateChannelFlow
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ChimeSDKMessaging.UpdateChannelFlow.UpdateChannelFlow
instance Network.AWS.Data.Path.ToPath Network.AWS.ChimeSDKMessaging.UpdateChannelFlow.UpdateChannelFlow
instance Network.AWS.Data.Query.ToQuery Network.AWS.ChimeSDKMessaging.UpdateChannelFlow.UpdateChannelFlow


-- | Updates the content of a message.
--   
--   The <tt>x-amz-chime-bearer</tt> request header is mandatory. Use the
--   <tt>AppInstanceUserArn</tt> of the user that makes the API call as the
--   value in the header.
module Network.AWS.ChimeSDKMessaging.UpdateChannelMessage

-- | <i>See:</i> <a>newUpdateChannelMessage</a> smart constructor.
data UpdateChannelMessage
UpdateChannelMessage' :: Maybe (Sensitive Text) -> Maybe (Sensitive Text) -> Text -> Text -> Text -> UpdateChannelMessage

-- | The content of the message being updated.
[$sel:content:UpdateChannelMessage'] :: UpdateChannelMessage -> Maybe (Sensitive Text)

-- | The metadata of the message being updated.
[$sel:metadata:UpdateChannelMessage'] :: UpdateChannelMessage -> Maybe (Sensitive Text)

-- | The ARN of the channel.
[$sel:channelArn:UpdateChannelMessage'] :: UpdateChannelMessage -> Text

-- | The ID string of the message being updated.
[$sel:messageId:UpdateChannelMessage'] :: UpdateChannelMessage -> Text

-- | The <tt>AppInstanceUserArn</tt> of the user that makes the API call.
[$sel:chimeBearer:UpdateChannelMessage'] :: UpdateChannelMessage -> Text

-- | Create a value of <a>UpdateChannelMessage</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:content:UpdateChannelMessage'</a>,
--   <a>updateChannelMessage_content</a> - The content of the message being
--   updated.
--   
--   <a>$sel:metadata:UpdateChannelMessage'</a>,
--   <a>updateChannelMessage_metadata</a> - The metadata of the message
--   being updated.
--   
--   <a>$sel:channelArn:UpdateChannelMessage'</a>,
--   <a>updateChannelMessage_channelArn</a> - The ARN of the channel.
--   
--   <a>$sel:messageId:UpdateChannelMessage'</a>,
--   <a>updateChannelMessage_messageId</a> - The ID string of the message
--   being updated.
--   
--   <a>$sel:chimeBearer:UpdateChannelMessage'</a>,
--   <a>updateChannelMessage_chimeBearer</a> - The
--   <tt>AppInstanceUserArn</tt> of the user that makes the API call.
newUpdateChannelMessage :: Text -> Text -> Text -> UpdateChannelMessage

-- | The content of the message being updated.
updateChannelMessage_content :: Lens' UpdateChannelMessage (Maybe Text)

-- | The metadata of the message being updated.
updateChannelMessage_metadata :: Lens' UpdateChannelMessage (Maybe Text)

-- | The ARN of the channel.
updateChannelMessage_channelArn :: Lens' UpdateChannelMessage Text

-- | The ID string of the message being updated.
updateChannelMessage_messageId :: Lens' UpdateChannelMessage Text

-- | The <tt>AppInstanceUserArn</tt> of the user that makes the API call.
updateChannelMessage_chimeBearer :: Lens' UpdateChannelMessage Text

-- | <i>See:</i> <a>newUpdateChannelMessageResponse</a> smart constructor.
data UpdateChannelMessageResponse
UpdateChannelMessageResponse' :: Maybe ChannelMessageStatusStructure -> Maybe Text -> Maybe Text -> Int -> UpdateChannelMessageResponse

-- | The status of the message update.
[$sel:status:UpdateChannelMessageResponse'] :: UpdateChannelMessageResponse -> Maybe ChannelMessageStatusStructure

-- | The ARN of the channel.
[$sel:channelArn:UpdateChannelMessageResponse'] :: UpdateChannelMessageResponse -> Maybe Text

-- | The ID string of the message being updated.
[$sel:messageId:UpdateChannelMessageResponse'] :: UpdateChannelMessageResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:UpdateChannelMessageResponse'] :: UpdateChannelMessageResponse -> Int

-- | Create a value of <a>UpdateChannelMessageResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:UpdateChannelMessageResponse'</a>,
--   <a>updateChannelMessageResponse_status</a> - The status of the message
--   update.
--   
--   <a>$sel:channelArn:UpdateChannelMessage'</a>,
--   <a>updateChannelMessageResponse_channelArn</a> - The ARN of the
--   channel.
--   
--   <a>$sel:messageId:UpdateChannelMessage'</a>,
--   <a>updateChannelMessageResponse_messageId</a> - The ID string of the
--   message being updated.
--   
--   <a>$sel:httpStatus:UpdateChannelMessageResponse'</a>,
--   <a>updateChannelMessageResponse_httpStatus</a> - The response's http
--   status code.
newUpdateChannelMessageResponse :: Int -> UpdateChannelMessageResponse

-- | The status of the message update.
updateChannelMessageResponse_status :: Lens' UpdateChannelMessageResponse (Maybe ChannelMessageStatusStructure)

-- | The ARN of the channel.
updateChannelMessageResponse_channelArn :: Lens' UpdateChannelMessageResponse (Maybe Text)

-- | The ID string of the message being updated.
updateChannelMessageResponse_messageId :: Lens' UpdateChannelMessageResponse (Maybe Text)

-- | The response's http status code.
updateChannelMessageResponse_httpStatus :: Lens' UpdateChannelMessageResponse Int
instance GHC.Generics.Generic Network.AWS.ChimeSDKMessaging.UpdateChannelMessage.UpdateChannelMessage
instance GHC.Show.Show Network.AWS.ChimeSDKMessaging.UpdateChannelMessage.UpdateChannelMessage
instance GHC.Classes.Eq Network.AWS.ChimeSDKMessaging.UpdateChannelMessage.UpdateChannelMessage
instance GHC.Generics.Generic Network.AWS.ChimeSDKMessaging.UpdateChannelMessage.UpdateChannelMessageResponse
instance GHC.Show.Show Network.AWS.ChimeSDKMessaging.UpdateChannelMessage.UpdateChannelMessageResponse
instance GHC.Read.Read Network.AWS.ChimeSDKMessaging.UpdateChannelMessage.UpdateChannelMessageResponse
instance GHC.Classes.Eq Network.AWS.ChimeSDKMessaging.UpdateChannelMessage.UpdateChannelMessageResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ChimeSDKMessaging.UpdateChannelMessage.UpdateChannelMessage
instance Control.DeepSeq.NFData Network.AWS.ChimeSDKMessaging.UpdateChannelMessage.UpdateChannelMessageResponse
instance Data.Hashable.Class.Hashable Network.AWS.ChimeSDKMessaging.UpdateChannelMessage.UpdateChannelMessage
instance Control.DeepSeq.NFData Network.AWS.ChimeSDKMessaging.UpdateChannelMessage.UpdateChannelMessage
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ChimeSDKMessaging.UpdateChannelMessage.UpdateChannelMessage
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ChimeSDKMessaging.UpdateChannelMessage.UpdateChannelMessage
instance Network.AWS.Data.Path.ToPath Network.AWS.ChimeSDKMessaging.UpdateChannelMessage.UpdateChannelMessage
instance Network.AWS.Data.Query.ToQuery Network.AWS.ChimeSDKMessaging.UpdateChannelMessage.UpdateChannelMessage


-- | The details of the time when a user last read messages in a channel.
--   
--   The <tt>x-amz-chime-bearer</tt> request header is mandatory. Use the
--   <tt>AppInstanceUserArn</tt> of the user that makes the API call as the
--   value in the header.
module Network.AWS.ChimeSDKMessaging.UpdateChannelReadMarker

-- | <i>See:</i> <a>newUpdateChannelReadMarker</a> smart constructor.
data UpdateChannelReadMarker
UpdateChannelReadMarker' :: Text -> Text -> UpdateChannelReadMarker

-- | The ARN of the channel.
[$sel:channelArn:UpdateChannelReadMarker'] :: UpdateChannelReadMarker -> Text

-- | The <tt>AppInstanceUserArn</tt> of the user that makes the API call.
[$sel:chimeBearer:UpdateChannelReadMarker'] :: UpdateChannelReadMarker -> Text

-- | Create a value of <a>UpdateChannelReadMarker</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:channelArn:UpdateChannelReadMarker'</a>,
--   <a>updateChannelReadMarker_channelArn</a> - The ARN of the channel.
--   
--   <a>$sel:chimeBearer:UpdateChannelReadMarker'</a>,
--   <a>updateChannelReadMarker_chimeBearer</a> - The
--   <tt>AppInstanceUserArn</tt> of the user that makes the API call.
newUpdateChannelReadMarker :: Text -> Text -> UpdateChannelReadMarker

-- | The ARN of the channel.
updateChannelReadMarker_channelArn :: Lens' UpdateChannelReadMarker Text

-- | The <tt>AppInstanceUserArn</tt> of the user that makes the API call.
updateChannelReadMarker_chimeBearer :: Lens' UpdateChannelReadMarker Text

-- | <i>See:</i> <a>newUpdateChannelReadMarkerResponse</a> smart
--   constructor.
data UpdateChannelReadMarkerResponse
UpdateChannelReadMarkerResponse' :: Maybe Text -> Int -> UpdateChannelReadMarkerResponse

-- | The ARN of the channel.
[$sel:channelArn:UpdateChannelReadMarkerResponse'] :: UpdateChannelReadMarkerResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:UpdateChannelReadMarkerResponse'] :: UpdateChannelReadMarkerResponse -> Int

-- | Create a value of <a>UpdateChannelReadMarkerResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:channelArn:UpdateChannelReadMarker'</a>,
--   <a>updateChannelReadMarkerResponse_channelArn</a> - The ARN of the
--   channel.
--   
--   <a>$sel:httpStatus:UpdateChannelReadMarkerResponse'</a>,
--   <a>updateChannelReadMarkerResponse_httpStatus</a> - The response's
--   http status code.
newUpdateChannelReadMarkerResponse :: Int -> UpdateChannelReadMarkerResponse

-- | The ARN of the channel.
updateChannelReadMarkerResponse_channelArn :: Lens' UpdateChannelReadMarkerResponse (Maybe Text)

-- | The response's http status code.
updateChannelReadMarkerResponse_httpStatus :: Lens' UpdateChannelReadMarkerResponse Int
instance GHC.Generics.Generic Network.AWS.ChimeSDKMessaging.UpdateChannelReadMarker.UpdateChannelReadMarker
instance GHC.Show.Show Network.AWS.ChimeSDKMessaging.UpdateChannelReadMarker.UpdateChannelReadMarker
instance GHC.Read.Read Network.AWS.ChimeSDKMessaging.UpdateChannelReadMarker.UpdateChannelReadMarker
instance GHC.Classes.Eq Network.AWS.ChimeSDKMessaging.UpdateChannelReadMarker.UpdateChannelReadMarker
instance GHC.Generics.Generic Network.AWS.ChimeSDKMessaging.UpdateChannelReadMarker.UpdateChannelReadMarkerResponse
instance GHC.Show.Show Network.AWS.ChimeSDKMessaging.UpdateChannelReadMarker.UpdateChannelReadMarkerResponse
instance GHC.Read.Read Network.AWS.ChimeSDKMessaging.UpdateChannelReadMarker.UpdateChannelReadMarkerResponse
instance GHC.Classes.Eq Network.AWS.ChimeSDKMessaging.UpdateChannelReadMarker.UpdateChannelReadMarkerResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ChimeSDKMessaging.UpdateChannelReadMarker.UpdateChannelReadMarker
instance Control.DeepSeq.NFData Network.AWS.ChimeSDKMessaging.UpdateChannelReadMarker.UpdateChannelReadMarkerResponse
instance Data.Hashable.Class.Hashable Network.AWS.ChimeSDKMessaging.UpdateChannelReadMarker.UpdateChannelReadMarker
instance Control.DeepSeq.NFData Network.AWS.ChimeSDKMessaging.UpdateChannelReadMarker.UpdateChannelReadMarker
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ChimeSDKMessaging.UpdateChannelReadMarker.UpdateChannelReadMarker
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ChimeSDKMessaging.UpdateChannelReadMarker.UpdateChannelReadMarker
instance Network.AWS.Data.Path.ToPath Network.AWS.ChimeSDKMessaging.UpdateChannelReadMarker.UpdateChannelReadMarker
instance Network.AWS.Data.Query.ToQuery Network.AWS.ChimeSDKMessaging.UpdateChannelReadMarker.UpdateChannelReadMarker


module Network.AWS.ChimeSDKMessaging.Lens

-- | The ARN of the channel.
describeChannelMembership_channelArn :: Lens' DescribeChannelMembership Text

-- | The ARN of the member.
describeChannelMembership_memberArn :: Lens' DescribeChannelMembership Text

-- | The <tt>AppInstanceUserArn</tt> of the user that makes the API call.
describeChannelMembership_chimeBearer :: Lens' DescribeChannelMembership Text

-- | The details of the membership.
describeChannelMembershipResponse_channelMembership :: Lens' DescribeChannelMembershipResponse (Maybe ChannelMembership)

-- | The response's http status code.
describeChannelMembershipResponse_httpStatus :: Lens' DescribeChannelMembershipResponse Int

-- | The ARN of the channel flow.
describeChannelFlow_channelFlowArn :: Lens' DescribeChannelFlow Text

-- | The channel flow details.
describeChannelFlowResponse_channelFlow :: Lens' DescribeChannelFlowResponse (Maybe ChannelFlow)

-- | The response's http status code.
describeChannelFlowResponse_httpStatus :: Lens' DescribeChannelFlowResponse Int

-- | The privacy setting. <tt>PUBLIC</tt> retrieves all the public
--   channels. <tt>PRIVATE</tt> retrieves private channels. Only an
--   <tt>AppInstanceAdmin</tt> can retrieve private channels.
listChannels_privacy :: Lens' ListChannels (Maybe ChannelPrivacy)

-- | The token passed by previous API calls until all requested channels
--   are returned.
listChannels_nextToken :: Lens' ListChannels (Maybe Text)

-- | The maximum number of channels that you want to return.
listChannels_maxResults :: Lens' ListChannels (Maybe Natural)

-- | The ARN of the <tt>AppInstance</tt>.
listChannels_appInstanceArn :: Lens' ListChannels Text

-- | The <tt>AppInstanceUserArn</tt> of the user that makes the API call.
listChannels_chimeBearer :: Lens' ListChannels Text

-- | The information about each channel.
listChannelsResponse_channels :: Lens' ListChannelsResponse (Maybe [ChannelSummary])

-- | The token returned from previous API requests until the number of
--   channels is reached.
listChannelsResponse_nextToken :: Lens' ListChannelsResponse (Maybe Text)

-- | The response's http status code.
listChannelsResponse_httpStatus :: Lens' ListChannelsResponse Int

-- | The ARN of the resource.
listTagsForResource_resourceARN :: Lens' ListTagsForResource Text

-- | The tag key-value pairs.
listTagsForResourceResponse_tags :: Lens' ListTagsForResourceResponse (Maybe (NonEmpty Tag))

-- | The response's http status code.
listTagsForResourceResponse_httpStatus :: Lens' ListTagsForResourceResponse Int

-- | The ARN of the channel being deleted.
deleteChannel_channelArn :: Lens' DeleteChannel Text

-- | The <tt>AppInstanceUserArn</tt> of the user that makes the API call.
deleteChannel_chimeBearer :: Lens' DeleteChannel Text

-- | The metadata for the update request.
updateChannel_metadata :: Lens' UpdateChannel (Maybe Text)

-- | The ARN of the channel.
updateChannel_channelArn :: Lens' UpdateChannel Text

-- | The name of the channel.
updateChannel_name :: Lens' UpdateChannel Text

-- | The mode of the update request.
updateChannel_mode :: Lens' UpdateChannel ChannelMode

-- | The <tt>AppInstanceUserArn</tt> of the user that makes the API call.
updateChannel_chimeBearer :: Lens' UpdateChannel Text

-- | The ARN of the channel.
updateChannelResponse_channelArn :: Lens' UpdateChannelResponse (Maybe Text)

-- | The response's http status code.
updateChannelResponse_httpStatus :: Lens' UpdateChannelResponse Int

-- | The ARN of the channel.
associateChannelFlow_channelArn :: Lens' AssociateChannelFlow Text

-- | The ARN of the channel flow.
associateChannelFlow_channelFlowArn :: Lens' AssociateChannelFlow Text

-- | The <tt>AppInstanceUserArn</tt> of the user making the API call.
associateChannelFlow_chimeBearer :: Lens' AssociateChannelFlow Text

-- | The endpoint returned in the response.
getMessagingSessionEndpointResponse_endpoint :: Lens' GetMessagingSessionEndpointResponse (Maybe MessagingSessionEndpoint)

-- | The response's http status code.
getMessagingSessionEndpointResponse_httpStatus :: Lens' GetMessagingSessionEndpointResponse Int

-- | The ARN of the user in the moderated channel.
listChannelsModeratedByAppInstanceUser_appInstanceUserArn :: Lens' ListChannelsModeratedByAppInstanceUser (Maybe Text)

-- | The token returned from previous API requests until the number of
--   channels moderated by the user is reached.
listChannelsModeratedByAppInstanceUser_nextToken :: Lens' ListChannelsModeratedByAppInstanceUser (Maybe Text)

-- | The maximum number of channels in the request.
listChannelsModeratedByAppInstanceUser_maxResults :: Lens' ListChannelsModeratedByAppInstanceUser (Maybe Natural)

-- | The <tt>AppInstanceUserArn</tt> of the user that makes the API call.
listChannelsModeratedByAppInstanceUser_chimeBearer :: Lens' ListChannelsModeratedByAppInstanceUser Text

-- | The moderated channels in the request.
listChannelsModeratedByAppInstanceUserResponse_channels :: Lens' ListChannelsModeratedByAppInstanceUserResponse (Maybe [ChannelModeratedByAppInstanceUserSummary])

-- | The token returned from previous API requests until the number of
--   channels moderated by the user is reached.
listChannelsModeratedByAppInstanceUserResponse_nextToken :: Lens' ListChannelsModeratedByAppInstanceUserResponse (Maybe Text)

-- | The response's http status code.
listChannelsModeratedByAppInstanceUserResponse_httpStatus :: Lens' ListChannelsModeratedByAppInstanceUserResponse Int

-- | The ARN of the channel containing the messages that you want to
--   redact.
redactChannelMessage_channelArn :: Lens' RedactChannelMessage Text

-- | The ID of the message being redacted.
redactChannelMessage_messageId :: Lens' RedactChannelMessage Text

-- | The <tt>AppInstanceUserArn</tt> of the user that makes the API call.
redactChannelMessage_chimeBearer :: Lens' RedactChannelMessage Text

-- | The ARN of the channel containing the messages that you want to
--   redact.
redactChannelMessageResponse_channelArn :: Lens' RedactChannelMessageResponse (Maybe Text)

-- | The ID of the message being redacted.
redactChannelMessageResponse_messageId :: Lens' RedactChannelMessageResponse (Maybe Text)

-- | The response's http status code.
redactChannelMessageResponse_httpStatus :: Lens' RedactChannelMessageResponse Int

-- | The token passed by previous API calls until all requested channel
--   flows are returned.
listChannelFlows_nextToken :: Lens' ListChannelFlows (Maybe Text)

-- | The maximum number of channel flows that you want to return.
listChannelFlows_maxResults :: Lens' ListChannelFlows (Maybe Natural)

-- | The ARN of the app instance.
listChannelFlows_appInstanceArn :: Lens' ListChannelFlows Text

-- | The information about each channel flow.
listChannelFlowsResponse_channelFlows :: Lens' ListChannelFlowsResponse (Maybe [ChannelFlowSummary])

-- | The token passed by previous API calls until all requested channels
--   are returned.
listChannelFlowsResponse_nextToken :: Lens' ListChannelFlowsResponse (Maybe Text)

-- | The response's http status code.
listChannelFlowsResponse_httpStatus :: Lens' ListChannelFlowsResponse Int

-- | The ARN of the channel flow.
deleteChannelFlow_channelFlowArn :: Lens' DeleteChannelFlow Text

-- | The ARN of the channel flow.
updateChannelFlow_channelFlowArn :: Lens' UpdateChannelFlow Text

-- | Information about the processor Lambda functions
updateChannelFlow_processors :: Lens' UpdateChannelFlow (NonEmpty Processor)

-- | The name of the channel flow.
updateChannelFlow_name :: Lens' UpdateChannelFlow Text

-- | The ARN of the channel flow.
updateChannelFlowResponse_channelFlowArn :: Lens' UpdateChannelFlowResponse (Maybe Text)

-- | The response's http status code.
updateChannelFlowResponse_httpStatus :: Lens' UpdateChannelFlowResponse Int

-- | The ARN of the channel from which you want to remove the user.
deleteChannelMembership_channelArn :: Lens' DeleteChannelMembership Text

-- | The ARN of the member that you're removing from the channel.
deleteChannelMembership_memberArn :: Lens' DeleteChannelMembership Text

-- | The <tt>AppInstanceUserArn</tt> of the user that makes the API call.
deleteChannelMembership_chimeBearer :: Lens' DeleteChannelMembership Text

-- | The token passed by previous API calls until all requested channel
--   memberships are returned.
listChannelMemberships_nextToken :: Lens' ListChannelMemberships (Maybe Text)

-- | The membership type of a user, <tt>DEFAULT</tt> or <tt>HIDDEN</tt>.
--   Default members are always returned as part of
--   <tt>ListChannelMemberships</tt>. Hidden members are only returned if
--   the type filter in <tt>ListChannelMemberships</tt> equals
--   <tt>HIDDEN</tt>. Otherwise hidden members are not returned.
listChannelMemberships_type :: Lens' ListChannelMemberships (Maybe ChannelMembershipType)

-- | The maximum number of channel memberships that you want returned.
listChannelMemberships_maxResults :: Lens' ListChannelMemberships (Maybe Natural)

-- | The maximum number of channel memberships that you want returned.
listChannelMemberships_channelArn :: Lens' ListChannelMemberships Text

-- | The <tt>AppInstanceUserArn</tt> of the user that makes the API call.
listChannelMemberships_chimeBearer :: Lens' ListChannelMemberships Text

-- | The information for the requested channel memberships.
listChannelMembershipsResponse_channelMemberships :: Lens' ListChannelMembershipsResponse (Maybe [ChannelMembershipSummary])

-- | The ARN of the channel.
listChannelMembershipsResponse_channelArn :: Lens' ListChannelMembershipsResponse (Maybe Text)

-- | The token passed by previous API calls until all requested channel
--   memberships are returned.
listChannelMembershipsResponse_nextToken :: Lens' ListChannelMembershipsResponse (Maybe Text)

-- | The response's http status code.
listChannelMembershipsResponse_httpStatus :: Lens' ListChannelMembershipsResponse Int

-- | The ARN of the channel.
disassociateChannelFlow_channelArn :: Lens' DisassociateChannelFlow Text

-- | The ARN of the channel flow.
disassociateChannelFlow_channelFlowArn :: Lens' DisassociateChannelFlow Text

-- | The <tt>AppInstanceUserArn</tt> of the user making the API call.
disassociateChannelFlow_chimeBearer :: Lens' DisassociateChannelFlow Text

-- | The ARN of the channel.
getChannelMessage_channelArn :: Lens' GetChannelMessage Text

-- | The ID of the message.
getChannelMessage_messageId :: Lens' GetChannelMessage Text

-- | The <tt>AppInstanceUserArn</tt> of the user that makes the API call.
getChannelMessage_chimeBearer :: Lens' GetChannelMessage Text

-- | The details of and content in the message.
getChannelMessageResponse_channelMessage :: Lens' GetChannelMessageResponse (Maybe ChannelMessage)

-- | The response's http status code.
getChannelMessageResponse_httpStatus :: Lens' GetChannelMessageResponse Int

-- | The ARN of the channel to which the user belongs.
describeChannelMembershipForAppInstanceUser_channelArn :: Lens' DescribeChannelMembershipForAppInstanceUser Text

-- | The ARN of the user in a channel.
describeChannelMembershipForAppInstanceUser_appInstanceUserArn :: Lens' DescribeChannelMembershipForAppInstanceUser Text

-- | The <tt>AppInstanceUserArn</tt> of the user that makes the API call.
describeChannelMembershipForAppInstanceUser_chimeBearer :: Lens' DescribeChannelMembershipForAppInstanceUser Text

-- | The channel to which a user belongs.
describeChannelMembershipForAppInstanceUserResponse_channelMembership :: Lens' DescribeChannelMembershipForAppInstanceUserResponse (Maybe ChannelMembershipForAppInstanceUserSummary)

-- | The response's http status code.
describeChannelMembershipForAppInstanceUserResponse_httpStatus :: Lens' DescribeChannelMembershipForAppInstanceUserResponse Int

-- | The ARN of the channel.
createChannelModerator_channelArn :: Lens' CreateChannelModerator Text

-- | The ARN of the moderator.
createChannelModerator_channelModeratorArn :: Lens' CreateChannelModerator Text

-- | The <tt>AppInstanceUserArn</tt> of the user that makes the API call.
createChannelModerator_chimeBearer :: Lens' CreateChannelModerator Text

-- | The ARNs of the channel and the moderator.
createChannelModeratorResponse_channelModerator :: Lens' CreateChannelModeratorResponse (Maybe Identity)

-- | The ARN of the channel.
createChannelModeratorResponse_channelArn :: Lens' CreateChannelModeratorResponse (Maybe Text)

-- | The response's http status code.
createChannelModeratorResponse_httpStatus :: Lens' CreateChannelModeratorResponse Int

-- | The ARN of the moderated channel.
describeChannelModeratedByAppInstanceUser_channelArn :: Lens' DescribeChannelModeratedByAppInstanceUser Text

-- | The ARN of the <tt>AppInstanceUser</tt> in the moderated channel.
describeChannelModeratedByAppInstanceUser_appInstanceUserArn :: Lens' DescribeChannelModeratedByAppInstanceUser Text

-- | The <tt>AppInstanceUserArn</tt> of the user that makes the API call.
describeChannelModeratedByAppInstanceUser_chimeBearer :: Lens' DescribeChannelModeratedByAppInstanceUser Text

-- | The moderated channel.
describeChannelModeratedByAppInstanceUserResponse_channel :: Lens' DescribeChannelModeratedByAppInstanceUserResponse (Maybe ChannelModeratedByAppInstanceUserSummary)

-- | The response's http status code.
describeChannelModeratedByAppInstanceUserResponse_httpStatus :: Lens' DescribeChannelModeratedByAppInstanceUserResponse Int

-- | The optional metadata for each message.
sendChannelMessage_metadata :: Lens' SendChannelMessage (Maybe Text)

-- | The ARN of the channel.
sendChannelMessage_channelArn :: Lens' SendChannelMessage Text

-- | The content of the message.
sendChannelMessage_content :: Lens' SendChannelMessage Text

-- | The type of message, <tt>STANDARD</tt> or <tt>CONTROL</tt>.
sendChannelMessage_type :: Lens' SendChannelMessage ChannelMessageType

-- | Boolean that controls whether the message is persisted on the back
--   end. Required.
sendChannelMessage_persistence :: Lens' SendChannelMessage ChannelMessagePersistenceType

-- | The <tt>Idempotency</tt> token for each client request.
sendChannelMessage_clientRequestToken :: Lens' SendChannelMessage Text

-- | The <tt>AppInstanceUserArn</tt> of the user that makes the API call.
sendChannelMessage_chimeBearer :: Lens' SendChannelMessage Text

-- | The status of the channel message.
sendChannelMessageResponse_status :: Lens' SendChannelMessageResponse (Maybe ChannelMessageStatusStructure)

-- | The ARN of the channel.
sendChannelMessageResponse_channelArn :: Lens' SendChannelMessageResponse (Maybe Text)

-- | The ID string assigned to each message.
sendChannelMessageResponse_messageId :: Lens' SendChannelMessageResponse (Maybe Text)

-- | The response's http status code.
sendChannelMessageResponse_httpStatus :: Lens' SendChannelMessageResponse Int

-- | The ARN of the channel from which the <tt>AppInstanceUser</tt> was
--   banned.
deleteChannelBan_channelArn :: Lens' DeleteChannelBan Text

-- | The ARN of the <tt>AppInstanceUser</tt> that you want to reinstate.
deleteChannelBan_memberArn :: Lens' DeleteChannelBan Text

-- | The <tt>AppInstanceUserArn</tt> of the user that makes the API call.
deleteChannelBan_chimeBearer :: Lens' DeleteChannelBan Text

-- | The token passed by previous API calls until all requested bans are
--   returned.
listChannelBans_nextToken :: Lens' ListChannelBans (Maybe Text)

-- | The maximum number of bans that you want returned.
listChannelBans_maxResults :: Lens' ListChannelBans (Maybe Natural)

-- | The ARN of the channel.
listChannelBans_channelArn :: Lens' ListChannelBans Text

-- | The <tt>AppInstanceUserArn</tt> of the user that makes the API call.
listChannelBans_chimeBearer :: Lens' ListChannelBans Text

-- | The ARN of the channel.
listChannelBansResponse_channelArn :: Lens' ListChannelBansResponse (Maybe Text)

-- | The token passed by previous API calls until all requested bans are
--   returned.
listChannelBansResponse_nextToken :: Lens' ListChannelBansResponse (Maybe Text)

-- | The information for each requested ban.
listChannelBansResponse_channelBans :: Lens' ListChannelBansResponse (Maybe [ChannelBanSummary])

-- | The response's http status code.
listChannelBansResponse_httpStatus :: Lens' ListChannelBansResponse Int

-- | The channel mode: <tt>UNRESTRICTED</tt> or <tt>RESTRICTED</tt>.
--   Administrators, moderators, and channel members can add themselves and
--   other members to unrestricted channels. Only administrators and
--   moderators can add members to restricted channels.
createChannel_mode :: Lens' CreateChannel (Maybe ChannelMode)

-- | The channel's privacy level: <tt>PUBLIC</tt> or <tt>PRIVATE</tt>.
--   Private channels aren't discoverable by users outside the channel.
--   Public channels are discoverable by anyone in the
--   <tt>AppInstance</tt>.
createChannel_privacy :: Lens' CreateChannel (Maybe ChannelPrivacy)

-- | The metadata of the creation request. Limited to 1KB and UTF-8.
createChannel_metadata :: Lens' CreateChannel (Maybe Text)

-- | The tags for the creation request.
createChannel_tags :: Lens' CreateChannel (Maybe (NonEmpty Tag))

-- | The ARN of the channel request.
createChannel_appInstanceArn :: Lens' CreateChannel Text

-- | The name of the channel.
createChannel_name :: Lens' CreateChannel Text

-- | The client token for the request. An <tt>Idempotency</tt> token.
createChannel_clientRequestToken :: Lens' CreateChannel Text

-- | The <tt>AppInstanceUserArn</tt> of the user that makes the API call.
createChannel_chimeBearer :: Lens' CreateChannel Text

-- | The ARN of the channel.
createChannelResponse_channelArn :: Lens' CreateChannelResponse (Maybe Text)

-- | The response's http status code.
createChannelResponse_httpStatus :: Lens' CreateChannelResponse Int

-- | The ARN of the channel.
describeChannelModerator_channelArn :: Lens' DescribeChannelModerator Text

-- | The ARN of the channel moderator.
describeChannelModerator_channelModeratorArn :: Lens' DescribeChannelModerator Text

-- | The <tt>AppInstanceUserArn</tt> of the user that makes the API call.
describeChannelModerator_chimeBearer :: Lens' DescribeChannelModerator Text

-- | The details of the channel moderator.
describeChannelModeratorResponse_channelModerator :: Lens' DescribeChannelModeratorResponse (Maybe ChannelModerator)

-- | The response's http status code.
describeChannelModeratorResponse_httpStatus :: Lens' DescribeChannelModeratorResponse Int

-- | The ARN of the ban request.
createChannelBan_channelArn :: Lens' CreateChannelBan Text

-- | The ARN of the member being banned.
createChannelBan_memberArn :: Lens' CreateChannelBan Text

-- | The <tt>AppInstanceUserArn</tt> of the user that makes the API call.
createChannelBan_chimeBearer :: Lens' CreateChannelBan Text

-- | The ARN of the response to the ban request.
createChannelBanResponse_channelArn :: Lens' CreateChannelBanResponse (Maybe Text)

-- | The <tt>ChannelArn</tt> and <tt>BannedIdentity</tt> of the member in
--   the ban response.
createChannelBanResponse_member :: Lens' CreateChannelBanResponse (Maybe Identity)

-- | The response's http status code.
createChannelBanResponse_httpStatus :: Lens' CreateChannelBanResponse Int

-- | The ARN of the <tt>AppInstanceUser</tt>s
listChannelMembershipsForAppInstanceUser_appInstanceUserArn :: Lens' ListChannelMembershipsForAppInstanceUser (Maybe Text)

-- | The token returned from previous API requests until the number of
--   channel memberships is reached.
listChannelMembershipsForAppInstanceUser_nextToken :: Lens' ListChannelMembershipsForAppInstanceUser (Maybe Text)

-- | The maximum number of users that you want returned.
listChannelMembershipsForAppInstanceUser_maxResults :: Lens' ListChannelMembershipsForAppInstanceUser (Maybe Natural)

-- | The <tt>AppInstanceUserArn</tt> of the user that makes the API call.
listChannelMembershipsForAppInstanceUser_chimeBearer :: Lens' ListChannelMembershipsForAppInstanceUser Text

-- | The token passed by previous API calls until all requested users are
--   returned.
listChannelMembershipsForAppInstanceUserResponse_channelMemberships :: Lens' ListChannelMembershipsForAppInstanceUserResponse (Maybe [ChannelMembershipForAppInstanceUserSummary])

-- | The token passed by previous API calls until all requested users are
--   returned.
listChannelMembershipsForAppInstanceUserResponse_nextToken :: Lens' ListChannelMembershipsForAppInstanceUserResponse (Maybe Text)

-- | The response's http status code.
listChannelMembershipsForAppInstanceUserResponse_httpStatus :: Lens' ListChannelMembershipsForAppInstanceUserResponse Int

-- | The ARN of the channel.
updateChannelReadMarker_channelArn :: Lens' UpdateChannelReadMarker Text

-- | The <tt>AppInstanceUserArn</tt> of the user that makes the API call.
updateChannelReadMarker_chimeBearer :: Lens' UpdateChannelReadMarker Text

-- | The ARN of the channel.
updateChannelReadMarkerResponse_channelArn :: Lens' UpdateChannelReadMarkerResponse (Maybe Text)

-- | The response's http status code.
updateChannelReadMarkerResponse_httpStatus :: Lens' UpdateChannelReadMarkerResponse Int

-- | The ARN of the channel
getChannelMessageStatus_channelArn :: Lens' GetChannelMessageStatus Text

-- | The ID of the message.
getChannelMessageStatus_messageId :: Lens' GetChannelMessageStatus Text

-- | The <tt>AppInstanceUserArn</tt> of the user making the API call.
getChannelMessageStatus_chimeBearer :: Lens' GetChannelMessageStatus Text

-- | The message status and details.
getChannelMessageStatusResponse_status :: Lens' GetChannelMessageStatusResponse (Maybe ChannelMessageStatusStructure)

-- | The response's http status code.
getChannelMessageStatusResponse_httpStatus :: Lens' GetChannelMessageStatusResponse Int

-- | The tags for the creation request.
createChannelFlow_tags :: Lens' CreateChannelFlow (Maybe (NonEmpty Tag))

-- | The ARN of the channel flow request.
createChannelFlow_appInstanceArn :: Lens' CreateChannelFlow Text

-- | Information about the processor Lambda functions.
createChannelFlow_processors :: Lens' CreateChannelFlow (NonEmpty Processor)

-- | The name of the channel flow.
createChannelFlow_name :: Lens' CreateChannelFlow Text

-- | The client token for the request. An Idempotency token.
createChannelFlow_clientRequestToken :: Lens' CreateChannelFlow Text

-- | The ARN of the channel flow.
createChannelFlowResponse_channelFlowArn :: Lens' CreateChannelFlowResponse (Maybe Text)

-- | The response's http status code.
createChannelFlowResponse_httpStatus :: Lens' CreateChannelFlowResponse Int

-- | The ARN of the channel to which you're adding users.
createChannelMembership_channelArn :: Lens' CreateChannelMembership Text

-- | The ARN of the member you want to add to the channel.
createChannelMembership_memberArn :: Lens' CreateChannelMembership Text

-- | The membership type of a user, <tt>DEFAULT</tt> or <tt>HIDDEN</tt>.
--   Default members are always returned as part of
--   <tt>ListChannelMemberships</tt>. Hidden members are only returned if
--   the type filter in <tt>ListChannelMemberships</tt> equals
--   <tt>HIDDEN</tt>. Otherwise hidden members are not returned. This is
--   only supported by moderators.
createChannelMembership_type :: Lens' CreateChannelMembership ChannelMembershipType

-- | The <tt>AppInstanceUserArn</tt> of the user that makes the API call.
createChannelMembership_chimeBearer :: Lens' CreateChannelMembership Text

-- | The ARN of the channel.
createChannelMembershipResponse_channelArn :: Lens' CreateChannelMembershipResponse (Maybe Text)

-- | The ARN and metadata of the member being added.
createChannelMembershipResponse_member :: Lens' CreateChannelMembershipResponse (Maybe Identity)

-- | The response's http status code.
createChannelMembershipResponse_httpStatus :: Lens' CreateChannelMembershipResponse Int

-- | The resource ARN.
tagResource_resourceARN :: Lens' TagResource Text

-- | The tag key-value pairs.
tagResource_tags :: Lens' TagResource (NonEmpty Tag)

-- | When a processor determines that a message needs to be
--   <tt>DENIED</tt>, pass this parameter with a value of true.
channelFlowCallback_deleteResource :: Lens' ChannelFlowCallback (Maybe Bool)

-- | The identifier passed to the processor by the service when invoked.
--   Use the identifier to call back the service.
channelFlowCallback_callbackId :: Lens' ChannelFlowCallback Text

-- | The ARN of the channel.
channelFlowCallback_channelArn :: Lens' ChannelFlowCallback Text

-- | Stores information about the processed message.
channelFlowCallback_channelMessage :: Lens' ChannelFlowCallback ChannelMessageCallback

-- | The call back ID passed in the request.
channelFlowCallbackResponse_callbackId :: Lens' ChannelFlowCallbackResponse (Maybe Text)

-- | The ARN of the channel.
channelFlowCallbackResponse_channelArn :: Lens' ChannelFlowCallbackResponse (Maybe Text)

-- | The response's http status code.
channelFlowCallbackResponse_httpStatus :: Lens' ChannelFlowCallbackResponse Int

-- | The ARN of the channel.
deleteChannelModerator_channelArn :: Lens' DeleteChannelModerator Text

-- | The ARN of the moderator being deleted.
deleteChannelModerator_channelModeratorArn :: Lens' DeleteChannelModerator Text

-- | The <tt>AppInstanceUserArn</tt> of the user that makes the API call.
deleteChannelModerator_chimeBearer :: Lens' DeleteChannelModerator Text

-- | The ARN of the channel from which the user is banned.
describeChannelBan_channelArn :: Lens' DescribeChannelBan Text

-- | The ARN of the member being banned.
describeChannelBan_memberArn :: Lens' DescribeChannelBan Text

-- | The <tt>AppInstanceUserArn</tt> of the user that makes the API call.
describeChannelBan_chimeBearer :: Lens' DescribeChannelBan Text

-- | The details of the ban.
describeChannelBanResponse_channelBan :: Lens' DescribeChannelBanResponse (Maybe ChannelBan)

-- | The response's http status code.
describeChannelBanResponse_httpStatus :: Lens' DescribeChannelBanResponse Int

-- | The resource ARN.
untagResource_resourceARN :: Lens' UntagResource Text

-- | The tag keys.
untagResource_tagKeys :: Lens' UntagResource (NonEmpty Text)

-- | The token passed by previous API calls until all requested moderators
--   are returned.
listChannelModerators_nextToken :: Lens' ListChannelModerators (Maybe Text)

-- | The maximum number of moderators that you want returned.
listChannelModerators_maxResults :: Lens' ListChannelModerators (Maybe Natural)

-- | The ARN of the channel.
listChannelModerators_channelArn :: Lens' ListChannelModerators Text

-- | The <tt>AppInstanceUserArn</tt> of the user that makes the API call.
listChannelModerators_chimeBearer :: Lens' ListChannelModerators Text

-- | The ARN of the channel.
listChannelModeratorsResponse_channelArn :: Lens' ListChannelModeratorsResponse (Maybe Text)

-- | The token passed by previous API calls until all requested moderators
--   are returned.
listChannelModeratorsResponse_nextToken :: Lens' ListChannelModeratorsResponse (Maybe Text)

-- | The information about and names of each moderator.
listChannelModeratorsResponse_channelModerators :: Lens' ListChannelModeratorsResponse (Maybe [ChannelModeratorSummary])

-- | The response's http status code.
listChannelModeratorsResponse_httpStatus :: Lens' ListChannelModeratorsResponse Int

-- | The ARN of the channel.
describeChannel_channelArn :: Lens' DescribeChannel Text

-- | The <tt>AppInstanceUserArn</tt> of the user that makes the API call.
describeChannel_chimeBearer :: Lens' DescribeChannel Text

-- | The channel details.
describeChannelResponse_channel :: Lens' DescribeChannelResponse (Maybe Channel)

-- | The response's http status code.
describeChannelResponse_httpStatus :: Lens' DescribeChannelResponse Int

-- | The ARN of the channel.
deleteChannelMessage_channelArn :: Lens' DeleteChannelMessage Text

-- | The ID of the message being deleted.
deleteChannelMessage_messageId :: Lens' DeleteChannelMessage Text

-- | The <tt>AppInstanceUserArn</tt> of the user that makes the API call.
deleteChannelMessage_chimeBearer :: Lens' DeleteChannelMessage Text

-- | The content of the message being updated.
updateChannelMessage_content :: Lens' UpdateChannelMessage (Maybe Text)

-- | The metadata of the message being updated.
updateChannelMessage_metadata :: Lens' UpdateChannelMessage (Maybe Text)

-- | The ARN of the channel.
updateChannelMessage_channelArn :: Lens' UpdateChannelMessage Text

-- | The ID string of the message being updated.
updateChannelMessage_messageId :: Lens' UpdateChannelMessage Text

-- | The <tt>AppInstanceUserArn</tt> of the user that makes the API call.
updateChannelMessage_chimeBearer :: Lens' UpdateChannelMessage Text

-- | The status of the message update.
updateChannelMessageResponse_status :: Lens' UpdateChannelMessageResponse (Maybe ChannelMessageStatusStructure)

-- | The ARN of the channel.
updateChannelMessageResponse_channelArn :: Lens' UpdateChannelMessageResponse (Maybe Text)

-- | The ID string of the message being updated.
updateChannelMessageResponse_messageId :: Lens' UpdateChannelMessageResponse (Maybe Text)

-- | The response's http status code.
updateChannelMessageResponse_httpStatus :: Lens' UpdateChannelMessageResponse Int

-- | The token passed by previous API calls until all requested messages
--   are returned.
listChannelMessages_nextToken :: Lens' ListChannelMessages (Maybe Text)

-- | The initial or starting time stamp for your requested messages.
listChannelMessages_notBefore :: Lens' ListChannelMessages (Maybe UTCTime)

-- | The order in which you want messages sorted. Default is Descending,
--   based on time created.
listChannelMessages_sortOrder :: Lens' ListChannelMessages (Maybe SortOrder)

-- | The maximum number of messages that you want returned.
listChannelMessages_maxResults :: Lens' ListChannelMessages (Maybe Natural)

-- | The final or ending time stamp for your requested messages.
listChannelMessages_notAfter :: Lens' ListChannelMessages (Maybe UTCTime)

-- | The ARN of the channel.
listChannelMessages_channelArn :: Lens' ListChannelMessages Text

-- | The <tt>AppInstanceUserArn</tt> of the user that makes the API call.
listChannelMessages_chimeBearer :: Lens' ListChannelMessages Text

-- | The ARN of the channel containing the requested messages.
listChannelMessagesResponse_channelArn :: Lens' ListChannelMessagesResponse (Maybe Text)

-- | The token passed by previous API calls until all requested messages
--   are returned.
listChannelMessagesResponse_nextToken :: Lens' ListChannelMessagesResponse (Maybe Text)

-- | The information about, and content of, each requested message.
listChannelMessagesResponse_channelMessages :: Lens' ListChannelMessagesResponse (Maybe [ChannelMessageSummary])

-- | The response's http status code.
listChannelMessagesResponse_httpStatus :: Lens' ListChannelMessagesResponse Int

-- | The token passed by previous API calls until all requested channels
--   are returned.
listChannelsAssociatedWithChannelFlow_nextToken :: Lens' ListChannelsAssociatedWithChannelFlow (Maybe Text)

-- | The maximum number of channels that you want to return.
listChannelsAssociatedWithChannelFlow_maxResults :: Lens' ListChannelsAssociatedWithChannelFlow (Maybe Natural)

-- | The ARN of the channel flow.
listChannelsAssociatedWithChannelFlow_channelFlowArn :: Lens' ListChannelsAssociatedWithChannelFlow Text

-- | The information about each channel.
listChannelsAssociatedWithChannelFlowResponse_channels :: Lens' ListChannelsAssociatedWithChannelFlowResponse (Maybe [ChannelAssociatedWithFlowSummary])

-- | The token passed by previous API calls until all requested channels
--   are returned.
listChannelsAssociatedWithChannelFlowResponse_nextToken :: Lens' ListChannelsAssociatedWithChannelFlowResponse (Maybe Text)

-- | The response's http status code.
listChannelsAssociatedWithChannelFlowResponse_httpStatus :: Lens' ListChannelsAssociatedWithChannelFlowResponse Int

-- | The membership type of a user, <tt>DEFAULT</tt> or <tt>HIDDEN</tt>.
--   Default members are always returned as part of
--   <tt>ListChannelMemberships</tt>. Hidden members are only returned if
--   the type filter in <tt>ListChannelMemberships</tt> equals
--   <tt>HIDDEN</tt>. Otherwise hidden members are not returned. This is
--   only supported by moderators.
batchCreateChannelMembership_type :: Lens' BatchCreateChannelMembership (Maybe ChannelMembershipType)

-- | The ARN of the channel to which you're adding users.
batchCreateChannelMembership_channelArn :: Lens' BatchCreateChannelMembership Text

-- | The ARNs of the members you want to add to the channel.
batchCreateChannelMembership_memberArns :: Lens' BatchCreateChannelMembership (NonEmpty Text)

-- | The <tt>AppInstanceUserArn</tt> of the user that makes the API call.
batchCreateChannelMembership_chimeBearer :: Lens' BatchCreateChannelMembership Text

-- | If the action fails for one or more of the memberships in the request,
--   a list of the memberships is returned, along with error codes and
--   error messages.
batchCreateChannelMembershipResponse_errors :: Lens' BatchCreateChannelMembershipResponse (Maybe [BatchCreateChannelMembershipError])

-- | The list of channel memberships in the response.
batchCreateChannelMembershipResponse_batchChannelMemberships :: Lens' BatchCreateChannelMembershipResponse (Maybe BatchChannelMemberships)

-- | The response's http status code.
batchCreateChannelMembershipResponse_httpStatus :: Lens' BatchCreateChannelMembershipResponse Int

-- | The time at which a message was last read.
appInstanceUserMembershipSummary_readMarkerTimestamp :: Lens' AppInstanceUserMembershipSummary (Maybe UTCTime)

-- | The type of <tt>ChannelMembership</tt>.
appInstanceUserMembershipSummary_type :: Lens' AppInstanceUserMembershipSummary (Maybe ChannelMembershipType)

-- | The users successfully added to the request.
batchChannelMemberships_members :: Lens' BatchChannelMemberships (Maybe [Identity])

-- | The ARN of the channel to which you're adding users.
batchChannelMemberships_channelArn :: Lens' BatchChannelMemberships (Maybe Text)

-- | The membership types set for the channel users.
batchChannelMemberships_type :: Lens' BatchChannelMemberships (Maybe ChannelMembershipType)

-- | The identifier of the member who invited another member.
batchChannelMemberships_invitedBy :: Lens' BatchChannelMemberships (Maybe Identity)

-- | The error code.
batchCreateChannelMembershipError_errorCode :: Lens' BatchCreateChannelMembershipError (Maybe ErrorCode)

-- | The ARN of the member that the service couldn't add.
batchCreateChannelMembershipError_memberArn :: Lens' BatchCreateChannelMembershipError (Maybe Text)

-- | The error message.
batchCreateChannelMembershipError_errorMessage :: Lens' BatchCreateChannelMembershipError (Maybe Text)

-- | The mode of the channel.
channel_mode :: Lens' Channel (Maybe ChannelMode)

-- | The <tt>AppInstanceUser</tt> who created the channel.
channel_createdBy :: Lens' Channel (Maybe Identity)

-- | The ARN of a channel.
channel_channelArn :: Lens' Channel (Maybe Text)

-- | The channel's privacy setting.
channel_privacy :: Lens' Channel (Maybe ChannelPrivacy)

-- | The ARN of the channel flow.
channel_channelFlowArn :: Lens' Channel (Maybe Text)

-- | The time at which a member sent the last message in the channel.
channel_lastMessageTimestamp :: Lens' Channel (Maybe UTCTime)

-- | The name of a channel.
channel_name :: Lens' Channel (Maybe Text)

-- | The channel's metadata.
channel_metadata :: Lens' Channel (Maybe Text)

-- | The time at which the <tt>AppInstanceUser</tt> created the channel.
channel_createdTimestamp :: Lens' Channel (Maybe UTCTime)

-- | The time at which a channel was last updated.
channel_lastUpdatedTimestamp :: Lens' Channel (Maybe UTCTime)

-- | The mode of the channel.
channelAssociatedWithFlowSummary_mode :: Lens' ChannelAssociatedWithFlowSummary (Maybe ChannelMode)

-- | The ARN of the channel.
channelAssociatedWithFlowSummary_channelArn :: Lens' ChannelAssociatedWithFlowSummary (Maybe Text)

-- | The channel's privacy setting.
channelAssociatedWithFlowSummary_privacy :: Lens' ChannelAssociatedWithFlowSummary (Maybe ChannelPrivacy)

-- | The name of the channel flow.
channelAssociatedWithFlowSummary_name :: Lens' ChannelAssociatedWithFlowSummary (Maybe Text)

-- | The channel's metadata.
channelAssociatedWithFlowSummary_metadata :: Lens' ChannelAssociatedWithFlowSummary (Maybe Text)

-- | The <tt>AppInstanceUser</tt> who created the ban.
channelBan_createdBy :: Lens' ChannelBan (Maybe Identity)

-- | The ARN of the channel from which a member is being banned.
channelBan_channelArn :: Lens' ChannelBan (Maybe Text)

-- | The member being banned from the channel.
channelBan_member :: Lens' ChannelBan (Maybe Identity)

-- | The time at which the ban was created.
channelBan_createdTimestamp :: Lens' ChannelBan (Maybe UTCTime)

-- | The member being banned from a channel.
channelBanSummary_member :: Lens' ChannelBanSummary (Maybe Identity)

-- | Information about the processor Lambda functions.
channelFlow_processors :: Lens' ChannelFlow (Maybe (NonEmpty Processor))

-- | The ARN of the channel flow.
channelFlow_channelFlowArn :: Lens' ChannelFlow (Maybe Text)

-- | The name of the channel flow.
channelFlow_name :: Lens' ChannelFlow (Maybe Text)

-- | The time at which the channel flow was created.
channelFlow_createdTimestamp :: Lens' ChannelFlow (Maybe UTCTime)

-- | The time at which a channel flow was updated.
channelFlow_lastUpdatedTimestamp :: Lens' ChannelFlow (Maybe UTCTime)

-- | Information about the processor Lambda functions.
channelFlowSummary_processors :: Lens' ChannelFlowSummary (Maybe (NonEmpty Processor))

-- | The ARN of the channel flow.
channelFlowSummary_channelFlowArn :: Lens' ChannelFlowSummary (Maybe Text)

-- | The name of the channel flow.
channelFlowSummary_name :: Lens' ChannelFlowSummary (Maybe Text)

-- | The ARN of the member's channel.
channelMembership_channelArn :: Lens' ChannelMembership (Maybe Text)

-- | The data of the channel member.
channelMembership_member :: Lens' ChannelMembership (Maybe Identity)

-- | The membership type set for the channel member.
channelMembership_type :: Lens' ChannelMembership (Maybe ChannelMembershipType)

-- | The identifier of the member who invited another member.
channelMembership_invitedBy :: Lens' ChannelMembership (Maybe Identity)

-- | The time at which the channel membership was created.
channelMembership_createdTimestamp :: Lens' ChannelMembership (Maybe UTCTime)

-- | The time at which a channel membership was last updated.
channelMembership_lastUpdatedTimestamp :: Lens' ChannelMembership (Maybe UTCTime)

-- | Returns the channel membership data for an <tt>AppInstance</tt>.
channelMembershipForAppInstanceUserSummary_appInstanceUserMembershipSummary :: Lens' ChannelMembershipForAppInstanceUserSummary (Maybe AppInstanceUserMembershipSummary)

-- | Returns the channel data for an <tt>AppInstance</tt>.
channelMembershipForAppInstanceUserSummary_channelSummary :: Lens' ChannelMembershipForAppInstanceUserSummary (Maybe ChannelSummary)

-- | A member's summary data.
channelMembershipSummary_member :: Lens' ChannelMembershipSummary (Maybe Identity)

-- | The status of the channel message.
channelMessage_status :: Lens' ChannelMessage (Maybe ChannelMessageStatusStructure)

-- | The message sender.
channelMessage_sender :: Lens' ChannelMessage (Maybe Identity)

-- | The ARN of the channel.
channelMessage_channelArn :: Lens' ChannelMessage (Maybe Text)

-- | The message content.
channelMessage_content :: Lens' ChannelMessage (Maybe Text)

-- | Hides the content of a message.
channelMessage_redacted :: Lens' ChannelMessage (Maybe Bool)

-- | The persistence setting for a channel message.
channelMessage_persistence :: Lens' ChannelMessage (Maybe ChannelMessagePersistenceType)

-- | The message metadata.
channelMessage_metadata :: Lens' ChannelMessage (Maybe Text)

-- | The message type.
channelMessage_type :: Lens' ChannelMessage (Maybe ChannelMessageType)

-- | The time at which the message was created.
channelMessage_createdTimestamp :: Lens' ChannelMessage (Maybe UTCTime)

-- | The ID of a message.
channelMessage_messageId :: Lens' ChannelMessage (Maybe Text)

-- | The time at which a message was updated.
channelMessage_lastUpdatedTimestamp :: Lens' ChannelMessage (Maybe UTCTime)

-- | The time at which a message was edited.
channelMessage_lastEditedTimestamp :: Lens' ChannelMessage (Maybe UTCTime)

-- | The message content.
channelMessageCallback_content :: Lens' ChannelMessageCallback (Maybe Text)

-- | The message metadata.
channelMessageCallback_metadata :: Lens' ChannelMessageCallback (Maybe Text)

-- | The message ID.
channelMessageCallback_messageId :: Lens' ChannelMessageCallback Text

-- | The message status value.
channelMessageStatusStructure_value :: Lens' ChannelMessageStatusStructure (Maybe ChannelMessageStatus)

-- | Contains more details about the messasge status.
channelMessageStatusStructure_detail :: Lens' ChannelMessageStatusStructure (Maybe Text)

-- | The message status. The status value is <tt>SENT</tt> for messages
--   sent to a channel without a channel flow. For channels associated with
--   channel flow, the value determines the processing stage.
channelMessageSummary_status :: Lens' ChannelMessageSummary (Maybe ChannelMessageStatusStructure)

-- | The message sender.
channelMessageSummary_sender :: Lens' ChannelMessageSummary (Maybe Identity)

-- | The content of the message.
channelMessageSummary_content :: Lens' ChannelMessageSummary (Maybe Text)

-- | Indicates whether a message was redacted.
channelMessageSummary_redacted :: Lens' ChannelMessageSummary (Maybe Bool)

-- | The metadata of the message.
channelMessageSummary_metadata :: Lens' ChannelMessageSummary (Maybe Text)

-- | The type of message.
channelMessageSummary_type :: Lens' ChannelMessageSummary (Maybe ChannelMessageType)

-- | The time at which the message summary was created.
channelMessageSummary_createdTimestamp :: Lens' ChannelMessageSummary (Maybe UTCTime)

-- | The ID of the message.
channelMessageSummary_messageId :: Lens' ChannelMessageSummary (Maybe Text)

-- | The time at which a message was last updated.
channelMessageSummary_lastUpdatedTimestamp :: Lens' ChannelMessageSummary (Maybe UTCTime)

-- | The time at which a message was last edited.
channelMessageSummary_lastEditedTimestamp :: Lens' ChannelMessageSummary (Maybe UTCTime)

-- | Summary of the details of a <tt>Channel</tt>.
channelModeratedByAppInstanceUserSummary_channelSummary :: Lens' ChannelModeratedByAppInstanceUserSummary (Maybe ChannelSummary)

-- | The <tt>AppInstanceUser</tt> who created the moderator.
channelModerator_createdBy :: Lens' ChannelModerator (Maybe Identity)

-- | The ARN of the moderator's channel.
channelModerator_channelArn :: Lens' ChannelModerator (Maybe Text)

-- | The time at which the moderator was created.
channelModerator_createdTimestamp :: Lens' ChannelModerator (Maybe UTCTime)

-- | The moderator's data.
channelModerator_moderator :: Lens' ChannelModerator (Maybe Identity)

-- | The data for a moderator.
channelModeratorSummary_moderator :: Lens' ChannelModeratorSummary (Maybe Identity)

-- | The mode of the channel.
channelSummary_mode :: Lens' ChannelSummary (Maybe ChannelMode)

-- | The ARN of the channel.
channelSummary_channelArn :: Lens' ChannelSummary (Maybe Text)

-- | The privacy setting of the channel.
channelSummary_privacy :: Lens' ChannelSummary (Maybe ChannelPrivacy)

-- | The time at which the last message in a channel was sent.
channelSummary_lastMessageTimestamp :: Lens' ChannelSummary (Maybe UTCTime)

-- | The name of the channel.
channelSummary_name :: Lens' ChannelSummary (Maybe Text)

-- | The metadata of the channel.
channelSummary_metadata :: Lens' ChannelSummary (Maybe Text)

-- | The ARN in an Identity.
identity_arn :: Lens' Identity (Maybe Text)

-- | The name in an Identity.
identity_name :: Lens' Identity (Maybe Text)

-- | The ARN of the Lambda message processing function.
lambdaConfiguration_resourceArn :: Lens' LambdaConfiguration Text

-- | Controls how the Lambda function is invoked.
lambdaConfiguration_invocationType :: Lens' LambdaConfiguration InvocationType

-- | The endpoint to which you establish a websocket connection.
messagingSessionEndpoint_url :: Lens' MessagingSessionEndpoint (Maybe Text)

-- | The name of the channel flow.
processor_name :: Lens' Processor Text

-- | The information about the type of processor and its identifier.
processor_configuration :: Lens' Processor ProcessorConfiguration

-- | The sequence in which processors run. If you have multiple processors
--   in a channel flow, message processing goes through each processor in
--   the sequence. The value determines the sequence. At this point, we
--   support only 1 processor within a flow.
processor_executionOrder :: Lens' Processor Natural

-- | Determines whether to continue or stop processing if communication
--   with processor fails. If the last processor in a channel flow sequence
--   has a fallback action of CONTINUE, and communication with the
--   processor fails, the message is considered processed and sent to the
--   recipients in the channel.
processor_fallbackAction :: Lens' Processor FallbackAction

-- | Indicates that the processor is of type Lambda.
processorConfiguration_lambda :: Lens' ProcessorConfiguration LambdaConfiguration

-- | The key in a tag.
tag_key :: Lens' Tag Text

-- | The value in a tag.
tag_value :: Lens' Tag Text


module Network.AWS.ChimeSDKMessaging.Waiters


-- | Derived from API version <tt>2021-05-15</tt> of the AWS service
--   descriptions, licensed under Apache 2.0.
--   
--   The Amazon Chime SDK Messaging APIs in this section allow software
--   developers to send and receive messages in custom messaging
--   applications. These APIs depend on the frameworks provided by the
--   Amazon Chime SDK Identity APIs. For more information about the
--   messaging APIs, see <a>Amazon Chime SDK messaging</a>
module Network.AWS.ChimeSDKMessaging

-- | API version <tt>2021-05-15</tt> of the Amazon Chime SDK Messaging SDK
--   configuration.
defaultService :: Service

-- | The client exceeded its request rate limit.
_ThrottledClientException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request exceeds the resource limit.
_ResourceLimitExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request could not be processed because of conflict in the current
--   state of the resource.
_ConflictException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The client is permanently forbidden from making the request.
_ForbiddenException :: AsError a => Getting (First ServiceError) a ServiceError

-- | One or more of the resources in the request does not exist in the
--   system.
_NotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The service encountered an unexpected error.
_ServiceFailureException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The client is not currently authorized to make the request.
_UnauthorizedClientException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The service is currently unavailable.
_ServiceUnavailableException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The input parameters don't match the service's restrictions.
_BadRequestException :: AsError a => Getting (First ServiceError) a ServiceError

-- | <i>See:</i> <a>newDescribeChannelMembership</a> smart constructor.
data DescribeChannelMembership
DescribeChannelMembership' :: Text -> Text -> Text -> DescribeChannelMembership

-- | Create a value of <a>DescribeChannelMembership</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:channelArn:DescribeChannelMembership'</a>,
--   <a>describeChannelMembership_channelArn</a> - The ARN of the channel.
--   
--   <a>$sel:memberArn:DescribeChannelMembership'</a>,
--   <a>describeChannelMembership_memberArn</a> - The ARN of the member.
--   
--   <a>$sel:chimeBearer:DescribeChannelMembership'</a>,
--   <a>describeChannelMembership_chimeBearer</a> - The
--   <tt>AppInstanceUserArn</tt> of the user that makes the API call.
newDescribeChannelMembership :: Text -> Text -> Text -> DescribeChannelMembership

-- | <i>See:</i> <a>newDescribeChannelMembershipResponse</a> smart
--   constructor.
data DescribeChannelMembershipResponse
DescribeChannelMembershipResponse' :: Maybe ChannelMembership -> Int -> DescribeChannelMembershipResponse

-- | Create a value of <a>DescribeChannelMembershipResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:channelMembership:DescribeChannelMembershipResponse'</a>,
--   <a>describeChannelMembershipResponse_channelMembership</a> - The
--   details of the membership.
--   
--   <a>$sel:httpStatus:DescribeChannelMembershipResponse'</a>,
--   <a>describeChannelMembershipResponse_httpStatus</a> - The response's
--   http status code.
newDescribeChannelMembershipResponse :: Int -> DescribeChannelMembershipResponse

-- | <i>See:</i> <a>newDescribeChannelFlow</a> smart constructor.
data DescribeChannelFlow
DescribeChannelFlow' :: Text -> DescribeChannelFlow

-- | Create a value of <a>DescribeChannelFlow</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:channelFlowArn:DescribeChannelFlow'</a>,
--   <a>describeChannelFlow_channelFlowArn</a> - The ARN of the channel
--   flow.
newDescribeChannelFlow :: Text -> DescribeChannelFlow

-- | <i>See:</i> <a>newDescribeChannelFlowResponse</a> smart constructor.
data DescribeChannelFlowResponse
DescribeChannelFlowResponse' :: Maybe ChannelFlow -> Int -> DescribeChannelFlowResponse

-- | Create a value of <a>DescribeChannelFlowResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:channelFlow:DescribeChannelFlowResponse'</a>,
--   <a>describeChannelFlowResponse_channelFlow</a> - The channel flow
--   details.
--   
--   <a>$sel:httpStatus:DescribeChannelFlowResponse'</a>,
--   <a>describeChannelFlowResponse_httpStatus</a> - The response's http
--   status code.
newDescribeChannelFlowResponse :: Int -> DescribeChannelFlowResponse

-- | <i>See:</i> <a>newListChannels</a> smart constructor.
data ListChannels
ListChannels' :: Maybe ChannelPrivacy -> Maybe (Sensitive Text) -> Maybe Natural -> Text -> Text -> ListChannels

-- | Create a value of <a>ListChannels</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:privacy:ListChannels'</a>, <a>listChannels_privacy</a> - The
--   privacy setting. <tt>PUBLIC</tt> retrieves all the public channels.
--   <tt>PRIVATE</tt> retrieves private channels. Only an
--   <tt>AppInstanceAdmin</tt> can retrieve private channels.
--   
--   <a>$sel:nextToken:ListChannels'</a>, <a>listChannels_nextToken</a> -
--   The token passed by previous API calls until all requested channels
--   are returned.
--   
--   <a>$sel:maxResults:ListChannels'</a>, <a>listChannels_maxResults</a> -
--   The maximum number of channels that you want to return.
--   
--   <a>$sel:appInstanceArn:ListChannels'</a>,
--   <a>listChannels_appInstanceArn</a> - The ARN of the
--   <tt>AppInstance</tt>.
--   
--   <a>$sel:chimeBearer:ListChannels'</a>, <a>listChannels_chimeBearer</a>
--   - The <tt>AppInstanceUserArn</tt> of the user that makes the API call.
newListChannels :: Text -> Text -> ListChannels

-- | <i>See:</i> <a>newListChannelsResponse</a> smart constructor.
data ListChannelsResponse
ListChannelsResponse' :: Maybe [ChannelSummary] -> Maybe (Sensitive Text) -> Int -> ListChannelsResponse

-- | Create a value of <a>ListChannelsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:channels:ListChannelsResponse'</a>,
--   <a>listChannelsResponse_channels</a> - The information about each
--   channel.
--   
--   <a>$sel:nextToken:ListChannels'</a>,
--   <a>listChannelsResponse_nextToken</a> - The token returned from
--   previous API requests until the number of channels is reached.
--   
--   <a>$sel:httpStatus:ListChannelsResponse'</a>,
--   <a>listChannelsResponse_httpStatus</a> - The response's http status
--   code.
newListChannelsResponse :: Int -> ListChannelsResponse

-- | <i>See:</i> <a>newListTagsForResource</a> smart constructor.
data ListTagsForResource
ListTagsForResource' :: Text -> ListTagsForResource

-- | Create a value of <a>ListTagsForResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceARN:ListTagsForResource'</a>,
--   <a>listTagsForResource_resourceARN</a> - The ARN of the resource.
newListTagsForResource :: Text -> ListTagsForResource

-- | <i>See:</i> <a>newListTagsForResourceResponse</a> smart constructor.
data ListTagsForResourceResponse
ListTagsForResourceResponse' :: Maybe (NonEmpty Tag) -> Int -> ListTagsForResourceResponse

-- | Create a value of <a>ListTagsForResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_tags</a> - The tag key-value pairs.
--   
--   <a>$sel:httpStatus:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_httpStatus</a> - The response's http
--   status code.
newListTagsForResourceResponse :: Int -> ListTagsForResourceResponse

-- | <i>See:</i> <a>newDeleteChannel</a> smart constructor.
data DeleteChannel
DeleteChannel' :: Text -> Text -> DeleteChannel

-- | Create a value of <a>DeleteChannel</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:channelArn:DeleteChannel'</a>, <a>deleteChannel_channelArn</a>
--   - The ARN of the channel being deleted.
--   
--   <a>$sel:chimeBearer:DeleteChannel'</a>,
--   <a>deleteChannel_chimeBearer</a> - The <tt>AppInstanceUserArn</tt> of
--   the user that makes the API call.
newDeleteChannel :: Text -> Text -> DeleteChannel

-- | <i>See:</i> <a>newDeleteChannelResponse</a> smart constructor.
data DeleteChannelResponse
DeleteChannelResponse' :: DeleteChannelResponse

-- | Create a value of <a>DeleteChannelResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteChannelResponse :: DeleteChannelResponse

-- | <i>See:</i> <a>newUpdateChannel</a> smart constructor.
data UpdateChannel
UpdateChannel' :: Maybe (Sensitive Text) -> Text -> Sensitive Text -> ChannelMode -> Text -> UpdateChannel

-- | Create a value of <a>UpdateChannel</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:metadata:UpdateChannel'</a>, <a>updateChannel_metadata</a> -
--   The metadata for the update request.
--   
--   <a>$sel:channelArn:UpdateChannel'</a>, <a>updateChannel_channelArn</a>
--   - The ARN of the channel.
--   
--   <a>$sel:name:UpdateChannel'</a>, <a>updateChannel_name</a> - The name
--   of the channel.
--   
--   <a>$sel:mode:UpdateChannel'</a>, <a>updateChannel_mode</a> - The mode
--   of the update request.
--   
--   <a>$sel:chimeBearer:UpdateChannel'</a>,
--   <a>updateChannel_chimeBearer</a> - The <tt>AppInstanceUserArn</tt> of
--   the user that makes the API call.
newUpdateChannel :: Text -> Text -> ChannelMode -> Text -> UpdateChannel

-- | <i>See:</i> <a>newUpdateChannelResponse</a> smart constructor.
data UpdateChannelResponse
UpdateChannelResponse' :: Maybe Text -> Int -> UpdateChannelResponse

-- | Create a value of <a>UpdateChannelResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:channelArn:UpdateChannel'</a>,
--   <a>updateChannelResponse_channelArn</a> - The ARN of the channel.
--   
--   <a>$sel:httpStatus:UpdateChannelResponse'</a>,
--   <a>updateChannelResponse_httpStatus</a> - The response's http status
--   code.
newUpdateChannelResponse :: Int -> UpdateChannelResponse

-- | <i>See:</i> <a>newAssociateChannelFlow</a> smart constructor.
data AssociateChannelFlow
AssociateChannelFlow' :: Text -> Text -> Text -> AssociateChannelFlow

-- | Create a value of <a>AssociateChannelFlow</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:channelArn:AssociateChannelFlow'</a>,
--   <a>associateChannelFlow_channelArn</a> - The ARN of the channel.
--   
--   <a>$sel:channelFlowArn:AssociateChannelFlow'</a>,
--   <a>associateChannelFlow_channelFlowArn</a> - The ARN of the channel
--   flow.
--   
--   <a>$sel:chimeBearer:AssociateChannelFlow'</a>,
--   <a>associateChannelFlow_chimeBearer</a> - The
--   <tt>AppInstanceUserArn</tt> of the user making the API call.
newAssociateChannelFlow :: Text -> Text -> Text -> AssociateChannelFlow

-- | <i>See:</i> <a>newAssociateChannelFlowResponse</a> smart constructor.
data AssociateChannelFlowResponse
AssociateChannelFlowResponse' :: AssociateChannelFlowResponse

-- | Create a value of <a>AssociateChannelFlowResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newAssociateChannelFlowResponse :: AssociateChannelFlowResponse

-- | <i>See:</i> <a>newGetMessagingSessionEndpoint</a> smart constructor.
data GetMessagingSessionEndpoint
GetMessagingSessionEndpoint' :: GetMessagingSessionEndpoint

-- | Create a value of <a>GetMessagingSessionEndpoint</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newGetMessagingSessionEndpoint :: GetMessagingSessionEndpoint

-- | <i>See:</i> <a>newGetMessagingSessionEndpointResponse</a> smart
--   constructor.
data GetMessagingSessionEndpointResponse
GetMessagingSessionEndpointResponse' :: Maybe MessagingSessionEndpoint -> Int -> GetMessagingSessionEndpointResponse

-- | Create a value of <a>GetMessagingSessionEndpointResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:endpoint:GetMessagingSessionEndpointResponse'</a>,
--   <a>getMessagingSessionEndpointResponse_endpoint</a> - The endpoint
--   returned in the response.
--   
--   <a>$sel:httpStatus:GetMessagingSessionEndpointResponse'</a>,
--   <a>getMessagingSessionEndpointResponse_httpStatus</a> - The response's
--   http status code.
newGetMessagingSessionEndpointResponse :: Int -> GetMessagingSessionEndpointResponse

-- | <i>See:</i> <a>newListChannelsModeratedByAppInstanceUser</a> smart
--   constructor.
data ListChannelsModeratedByAppInstanceUser
ListChannelsModeratedByAppInstanceUser' :: Maybe Text -> Maybe (Sensitive Text) -> Maybe Natural -> Text -> ListChannelsModeratedByAppInstanceUser

-- | Create a value of <a>ListChannelsModeratedByAppInstanceUser</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:appInstanceUserArn:ListChannelsModeratedByAppInstanceUser'</a>,
--   <a>listChannelsModeratedByAppInstanceUser_appInstanceUserArn</a> - The
--   ARN of the user in the moderated channel.
--   
--   <a>$sel:nextToken:ListChannelsModeratedByAppInstanceUser'</a>,
--   <a>listChannelsModeratedByAppInstanceUser_nextToken</a> - The token
--   returned from previous API requests until the number of channels
--   moderated by the user is reached.
--   
--   <a>$sel:maxResults:ListChannelsModeratedByAppInstanceUser'</a>,
--   <a>listChannelsModeratedByAppInstanceUser_maxResults</a> - The maximum
--   number of channels in the request.
--   
--   <a>$sel:chimeBearer:ListChannelsModeratedByAppInstanceUser'</a>,
--   <a>listChannelsModeratedByAppInstanceUser_chimeBearer</a> - The
--   <tt>AppInstanceUserArn</tt> of the user that makes the API call.
newListChannelsModeratedByAppInstanceUser :: Text -> ListChannelsModeratedByAppInstanceUser

-- | <i>See:</i> <a>newListChannelsModeratedByAppInstanceUserResponse</a>
--   smart constructor.
data ListChannelsModeratedByAppInstanceUserResponse
ListChannelsModeratedByAppInstanceUserResponse' :: Maybe [ChannelModeratedByAppInstanceUserSummary] -> Maybe (Sensitive Text) -> Int -> ListChannelsModeratedByAppInstanceUserResponse

-- | Create a value of
--   <a>ListChannelsModeratedByAppInstanceUserResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:channels:ListChannelsModeratedByAppInstanceUserResponse'</a>,
--   <a>listChannelsModeratedByAppInstanceUserResponse_channels</a> - The
--   moderated channels in the request.
--   
--   <a>$sel:nextToken:ListChannelsModeratedByAppInstanceUser'</a>,
--   <a>listChannelsModeratedByAppInstanceUserResponse_nextToken</a> - The
--   token returned from previous API requests until the number of channels
--   moderated by the user is reached.
--   
--   
--   <a>$sel:httpStatus:ListChannelsModeratedByAppInstanceUserResponse'</a>,
--   <a>listChannelsModeratedByAppInstanceUserResponse_httpStatus</a> - The
--   response's http status code.
newListChannelsModeratedByAppInstanceUserResponse :: Int -> ListChannelsModeratedByAppInstanceUserResponse

-- | <i>See:</i> <a>newRedactChannelMessage</a> smart constructor.
data RedactChannelMessage
RedactChannelMessage' :: Text -> Text -> Text -> RedactChannelMessage

-- | Create a value of <a>RedactChannelMessage</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:channelArn:RedactChannelMessage'</a>,
--   <a>redactChannelMessage_channelArn</a> - The ARN of the channel
--   containing the messages that you want to redact.
--   
--   <a>$sel:messageId:RedactChannelMessage'</a>,
--   <a>redactChannelMessage_messageId</a> - The ID of the message being
--   redacted.
--   
--   <a>$sel:chimeBearer:RedactChannelMessage'</a>,
--   <a>redactChannelMessage_chimeBearer</a> - The
--   <tt>AppInstanceUserArn</tt> of the user that makes the API call.
newRedactChannelMessage :: Text -> Text -> Text -> RedactChannelMessage

-- | <i>See:</i> <a>newRedactChannelMessageResponse</a> smart constructor.
data RedactChannelMessageResponse
RedactChannelMessageResponse' :: Maybe Text -> Maybe Text -> Int -> RedactChannelMessageResponse

-- | Create a value of <a>RedactChannelMessageResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:channelArn:RedactChannelMessage'</a>,
--   <a>redactChannelMessageResponse_channelArn</a> - The ARN of the
--   channel containing the messages that you want to redact.
--   
--   <a>$sel:messageId:RedactChannelMessage'</a>,
--   <a>redactChannelMessageResponse_messageId</a> - The ID of the message
--   being redacted.
--   
--   <a>$sel:httpStatus:RedactChannelMessageResponse'</a>,
--   <a>redactChannelMessageResponse_httpStatus</a> - The response's http
--   status code.
newRedactChannelMessageResponse :: Int -> RedactChannelMessageResponse

-- | <i>See:</i> <a>newListChannelFlows</a> smart constructor.
data ListChannelFlows
ListChannelFlows' :: Maybe (Sensitive Text) -> Maybe Natural -> Text -> ListChannelFlows

-- | Create a value of <a>ListChannelFlows</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListChannelFlows'</a>,
--   <a>listChannelFlows_nextToken</a> - The token passed by previous API
--   calls until all requested channel flows are returned.
--   
--   <a>$sel:maxResults:ListChannelFlows'</a>,
--   <a>listChannelFlows_maxResults</a> - The maximum number of channel
--   flows that you want to return.
--   
--   <a>$sel:appInstanceArn:ListChannelFlows'</a>,
--   <a>listChannelFlows_appInstanceArn</a> - The ARN of the app instance.
newListChannelFlows :: Text -> ListChannelFlows

-- | <i>See:</i> <a>newListChannelFlowsResponse</a> smart constructor.
data ListChannelFlowsResponse
ListChannelFlowsResponse' :: Maybe [ChannelFlowSummary] -> Maybe (Sensitive Text) -> Int -> ListChannelFlowsResponse

-- | Create a value of <a>ListChannelFlowsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:channelFlows:ListChannelFlowsResponse'</a>,
--   <a>listChannelFlowsResponse_channelFlows</a> - The information about
--   each channel flow.
--   
--   <a>$sel:nextToken:ListChannelFlows'</a>,
--   <a>listChannelFlowsResponse_nextToken</a> - The token passed by
--   previous API calls until all requested channels are returned.
--   
--   <a>$sel:httpStatus:ListChannelFlowsResponse'</a>,
--   <a>listChannelFlowsResponse_httpStatus</a> - The response's http
--   status code.
newListChannelFlowsResponse :: Int -> ListChannelFlowsResponse

-- | <i>See:</i> <a>newDeleteChannelFlow</a> smart constructor.
data DeleteChannelFlow
DeleteChannelFlow' :: Text -> DeleteChannelFlow

-- | Create a value of <a>DeleteChannelFlow</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:channelFlowArn:DeleteChannelFlow'</a>,
--   <a>deleteChannelFlow_channelFlowArn</a> - The ARN of the channel flow.
newDeleteChannelFlow :: Text -> DeleteChannelFlow

-- | <i>See:</i> <a>newDeleteChannelFlowResponse</a> smart constructor.
data DeleteChannelFlowResponse
DeleteChannelFlowResponse' :: DeleteChannelFlowResponse

-- | Create a value of <a>DeleteChannelFlowResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteChannelFlowResponse :: DeleteChannelFlowResponse

-- | <i>See:</i> <a>newUpdateChannelFlow</a> smart constructor.
data UpdateChannelFlow
UpdateChannelFlow' :: Text -> NonEmpty Processor -> Sensitive Text -> UpdateChannelFlow

-- | Create a value of <a>UpdateChannelFlow</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:channelFlowArn:UpdateChannelFlow'</a>,
--   <a>updateChannelFlow_channelFlowArn</a> - The ARN of the channel flow.
--   
--   <a>$sel:processors:UpdateChannelFlow'</a>,
--   <a>updateChannelFlow_processors</a> - Information about the processor
--   Lambda functions
--   
--   <a>$sel:name:UpdateChannelFlow'</a>, <a>updateChannelFlow_name</a> -
--   The name of the channel flow.
newUpdateChannelFlow :: Text -> NonEmpty Processor -> Text -> UpdateChannelFlow

-- | <i>See:</i> <a>newUpdateChannelFlowResponse</a> smart constructor.
data UpdateChannelFlowResponse
UpdateChannelFlowResponse' :: Maybe Text -> Int -> UpdateChannelFlowResponse

-- | Create a value of <a>UpdateChannelFlowResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:channelFlowArn:UpdateChannelFlow'</a>,
--   <a>updateChannelFlowResponse_channelFlowArn</a> - The ARN of the
--   channel flow.
--   
--   <a>$sel:httpStatus:UpdateChannelFlowResponse'</a>,
--   <a>updateChannelFlowResponse_httpStatus</a> - The response's http
--   status code.
newUpdateChannelFlowResponse :: Int -> UpdateChannelFlowResponse

-- | <i>See:</i> <a>newDeleteChannelMembership</a> smart constructor.
data DeleteChannelMembership
DeleteChannelMembership' :: Text -> Text -> Text -> DeleteChannelMembership

-- | Create a value of <a>DeleteChannelMembership</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:channelArn:DeleteChannelMembership'</a>,
--   <a>deleteChannelMembership_channelArn</a> - The ARN of the channel
--   from which you want to remove the user.
--   
--   <a>$sel:memberArn:DeleteChannelMembership'</a>,
--   <a>deleteChannelMembership_memberArn</a> - The ARN of the member that
--   you're removing from the channel.
--   
--   <a>$sel:chimeBearer:DeleteChannelMembership'</a>,
--   <a>deleteChannelMembership_chimeBearer</a> - The
--   <tt>AppInstanceUserArn</tt> of the user that makes the API call.
newDeleteChannelMembership :: Text -> Text -> Text -> DeleteChannelMembership

-- | <i>See:</i> <a>newDeleteChannelMembershipResponse</a> smart
--   constructor.
data DeleteChannelMembershipResponse
DeleteChannelMembershipResponse' :: DeleteChannelMembershipResponse

-- | Create a value of <a>DeleteChannelMembershipResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteChannelMembershipResponse :: DeleteChannelMembershipResponse

-- | <i>See:</i> <a>newListChannelMemberships</a> smart constructor.
data ListChannelMemberships
ListChannelMemberships' :: Maybe (Sensitive Text) -> Maybe ChannelMembershipType -> Maybe Natural -> Text -> Text -> ListChannelMemberships

-- | Create a value of <a>ListChannelMemberships</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListChannelMemberships'</a>,
--   <a>listChannelMemberships_nextToken</a> - The token passed by previous
--   API calls until all requested channel memberships are returned.
--   
--   <a>$sel:type':ListChannelMemberships'</a>,
--   <a>listChannelMemberships_type</a> - The membership type of a user,
--   <tt>DEFAULT</tt> or <tt>HIDDEN</tt>. Default members are always
--   returned as part of <tt>ListChannelMemberships</tt>. Hidden members
--   are only returned if the type filter in
--   <tt>ListChannelMemberships</tt> equals <tt>HIDDEN</tt>. Otherwise
--   hidden members are not returned.
--   
--   <a>$sel:maxResults:ListChannelMemberships'</a>,
--   <a>listChannelMemberships_maxResults</a> - The maximum number of
--   channel memberships that you want returned.
--   
--   <a>$sel:channelArn:ListChannelMemberships'</a>,
--   <a>listChannelMemberships_channelArn</a> - The maximum number of
--   channel memberships that you want returned.
--   
--   <a>$sel:chimeBearer:ListChannelMemberships'</a>,
--   <a>listChannelMemberships_chimeBearer</a> - The
--   <tt>AppInstanceUserArn</tt> of the user that makes the API call.
newListChannelMemberships :: Text -> Text -> ListChannelMemberships

-- | <i>See:</i> <a>newListChannelMembershipsResponse</a> smart
--   constructor.
data ListChannelMembershipsResponse
ListChannelMembershipsResponse' :: Maybe [ChannelMembershipSummary] -> Maybe Text -> Maybe (Sensitive Text) -> Int -> ListChannelMembershipsResponse

-- | Create a value of <a>ListChannelMembershipsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:channelMemberships:ListChannelMembershipsResponse'</a>,
--   <a>listChannelMembershipsResponse_channelMemberships</a> - The
--   information for the requested channel memberships.
--   
--   <a>$sel:channelArn:ListChannelMemberships'</a>,
--   <a>listChannelMembershipsResponse_channelArn</a> - The ARN of the
--   channel.
--   
--   <a>$sel:nextToken:ListChannelMemberships'</a>,
--   <a>listChannelMembershipsResponse_nextToken</a> - The token passed by
--   previous API calls until all requested channel memberships are
--   returned.
--   
--   <a>$sel:httpStatus:ListChannelMembershipsResponse'</a>,
--   <a>listChannelMembershipsResponse_httpStatus</a> - The response's http
--   status code.
newListChannelMembershipsResponse :: Int -> ListChannelMembershipsResponse

-- | <i>See:</i> <a>newDisassociateChannelFlow</a> smart constructor.
data DisassociateChannelFlow
DisassociateChannelFlow' :: Text -> Text -> Text -> DisassociateChannelFlow

-- | Create a value of <a>DisassociateChannelFlow</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:channelArn:DisassociateChannelFlow'</a>,
--   <a>disassociateChannelFlow_channelArn</a> - The ARN of the channel.
--   
--   <a>$sel:channelFlowArn:DisassociateChannelFlow'</a>,
--   <a>disassociateChannelFlow_channelFlowArn</a> - The ARN of the channel
--   flow.
--   
--   <a>$sel:chimeBearer:DisassociateChannelFlow'</a>,
--   <a>disassociateChannelFlow_chimeBearer</a> - The
--   <tt>AppInstanceUserArn</tt> of the user making the API call.
newDisassociateChannelFlow :: Text -> Text -> Text -> DisassociateChannelFlow

-- | <i>See:</i> <a>newDisassociateChannelFlowResponse</a> smart
--   constructor.
data DisassociateChannelFlowResponse
DisassociateChannelFlowResponse' :: DisassociateChannelFlowResponse

-- | Create a value of <a>DisassociateChannelFlowResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDisassociateChannelFlowResponse :: DisassociateChannelFlowResponse

-- | <i>See:</i> <a>newGetChannelMessage</a> smart constructor.
data GetChannelMessage
GetChannelMessage' :: Text -> Text -> Text -> GetChannelMessage

-- | Create a value of <a>GetChannelMessage</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:channelArn:GetChannelMessage'</a>,
--   <a>getChannelMessage_channelArn</a> - The ARN of the channel.
--   
--   <a>$sel:messageId:GetChannelMessage'</a>,
--   <a>getChannelMessage_messageId</a> - The ID of the message.
--   
--   <a>$sel:chimeBearer:GetChannelMessage'</a>,
--   <a>getChannelMessage_chimeBearer</a> - The <tt>AppInstanceUserArn</tt>
--   of the user that makes the API call.
newGetChannelMessage :: Text -> Text -> Text -> GetChannelMessage

-- | <i>See:</i> <a>newGetChannelMessageResponse</a> smart constructor.
data GetChannelMessageResponse
GetChannelMessageResponse' :: Maybe ChannelMessage -> Int -> GetChannelMessageResponse

-- | Create a value of <a>GetChannelMessageResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:channelMessage:GetChannelMessageResponse'</a>,
--   <a>getChannelMessageResponse_channelMessage</a> - The details of and
--   content in the message.
--   
--   <a>$sel:httpStatus:GetChannelMessageResponse'</a>,
--   <a>getChannelMessageResponse_httpStatus</a> - The response's http
--   status code.
newGetChannelMessageResponse :: Int -> GetChannelMessageResponse

-- | <i>See:</i> <a>newDescribeChannelMembershipForAppInstanceUser</a>
--   smart constructor.
data DescribeChannelMembershipForAppInstanceUser
DescribeChannelMembershipForAppInstanceUser' :: Text -> Text -> Text -> DescribeChannelMembershipForAppInstanceUser

-- | Create a value of <a>DescribeChannelMembershipForAppInstanceUser</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:channelArn:DescribeChannelMembershipForAppInstanceUser'</a>,
--   <a>describeChannelMembershipForAppInstanceUser_channelArn</a> - The
--   ARN of the channel to which the user belongs.
--   
--   
--   <a>$sel:appInstanceUserArn:DescribeChannelMembershipForAppInstanceUser'</a>,
--   <a>describeChannelMembershipForAppInstanceUser_appInstanceUserArn</a>
--   - The ARN of the user in a channel.
--   
--   <a>$sel:chimeBearer:DescribeChannelMembershipForAppInstanceUser'</a>,
--   <a>describeChannelMembershipForAppInstanceUser_chimeBearer</a> - The
--   <tt>AppInstanceUserArn</tt> of the user that makes the API call.
newDescribeChannelMembershipForAppInstanceUser :: Text -> Text -> Text -> DescribeChannelMembershipForAppInstanceUser

-- | <i>See:</i>
--   <a>newDescribeChannelMembershipForAppInstanceUserResponse</a> smart
--   constructor.
data DescribeChannelMembershipForAppInstanceUserResponse
DescribeChannelMembershipForAppInstanceUserResponse' :: Maybe ChannelMembershipForAppInstanceUserSummary -> Int -> DescribeChannelMembershipForAppInstanceUserResponse

-- | Create a value of
--   <a>DescribeChannelMembershipForAppInstanceUserResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:channelMembership:DescribeChannelMembershipForAppInstanceUserResponse'</a>,
--   <a>describeChannelMembershipForAppInstanceUserResponse_channelMembership</a>
--   - The channel to which a user belongs.
--   
--   
--   <a>$sel:httpStatus:DescribeChannelMembershipForAppInstanceUserResponse'</a>,
--   <a>describeChannelMembershipForAppInstanceUserResponse_httpStatus</a>
--   - The response's http status code.
newDescribeChannelMembershipForAppInstanceUserResponse :: Int -> DescribeChannelMembershipForAppInstanceUserResponse

-- | <i>See:</i> <a>newCreateChannelModerator</a> smart constructor.
data CreateChannelModerator
CreateChannelModerator' :: Text -> Text -> Text -> CreateChannelModerator

-- | Create a value of <a>CreateChannelModerator</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:channelArn:CreateChannelModerator'</a>,
--   <a>createChannelModerator_channelArn</a> - The ARN of the channel.
--   
--   <a>$sel:channelModeratorArn:CreateChannelModerator'</a>,
--   <a>createChannelModerator_channelModeratorArn</a> - The ARN of the
--   moderator.
--   
--   <a>$sel:chimeBearer:CreateChannelModerator'</a>,
--   <a>createChannelModerator_chimeBearer</a> - The
--   <tt>AppInstanceUserArn</tt> of the user that makes the API call.
newCreateChannelModerator :: Text -> Text -> Text -> CreateChannelModerator

-- | <i>See:</i> <a>newCreateChannelModeratorResponse</a> smart
--   constructor.
data CreateChannelModeratorResponse
CreateChannelModeratorResponse' :: Maybe Identity -> Maybe Text -> Int -> CreateChannelModeratorResponse

-- | Create a value of <a>CreateChannelModeratorResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:channelModerator:CreateChannelModeratorResponse'</a>,
--   <a>createChannelModeratorResponse_channelModerator</a> - The ARNs of
--   the channel and the moderator.
--   
--   <a>$sel:channelArn:CreateChannelModerator'</a>,
--   <a>createChannelModeratorResponse_channelArn</a> - The ARN of the
--   channel.
--   
--   <a>$sel:httpStatus:CreateChannelModeratorResponse'</a>,
--   <a>createChannelModeratorResponse_httpStatus</a> - The response's http
--   status code.
newCreateChannelModeratorResponse :: Int -> CreateChannelModeratorResponse

-- | <i>See:</i> <a>newDescribeChannelModeratedByAppInstanceUser</a> smart
--   constructor.
data DescribeChannelModeratedByAppInstanceUser
DescribeChannelModeratedByAppInstanceUser' :: Text -> Text -> Text -> DescribeChannelModeratedByAppInstanceUser

-- | Create a value of <a>DescribeChannelModeratedByAppInstanceUser</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:channelArn:DescribeChannelModeratedByAppInstanceUser'</a>,
--   <a>describeChannelModeratedByAppInstanceUser_channelArn</a> - The ARN
--   of the moderated channel.
--   
--   
--   <a>$sel:appInstanceUserArn:DescribeChannelModeratedByAppInstanceUser'</a>,
--   <a>describeChannelModeratedByAppInstanceUser_appInstanceUserArn</a> -
--   The ARN of the <tt>AppInstanceUser</tt> in the moderated channel.
--   
--   <a>$sel:chimeBearer:DescribeChannelModeratedByAppInstanceUser'</a>,
--   <a>describeChannelModeratedByAppInstanceUser_chimeBearer</a> - The
--   <tt>AppInstanceUserArn</tt> of the user that makes the API call.
newDescribeChannelModeratedByAppInstanceUser :: Text -> Text -> Text -> DescribeChannelModeratedByAppInstanceUser

-- | <i>See:</i>
--   <a>newDescribeChannelModeratedByAppInstanceUserResponse</a> smart
--   constructor.
data DescribeChannelModeratedByAppInstanceUserResponse
DescribeChannelModeratedByAppInstanceUserResponse' :: Maybe ChannelModeratedByAppInstanceUserSummary -> Int -> DescribeChannelModeratedByAppInstanceUserResponse

-- | Create a value of
--   <a>DescribeChannelModeratedByAppInstanceUserResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:channel:DescribeChannelModeratedByAppInstanceUserResponse'</a>,
--   <a>describeChannelModeratedByAppInstanceUserResponse_channel</a> - The
--   moderated channel.
--   
--   
--   <a>$sel:httpStatus:DescribeChannelModeratedByAppInstanceUserResponse'</a>,
--   <a>describeChannelModeratedByAppInstanceUserResponse_httpStatus</a> -
--   The response's http status code.
newDescribeChannelModeratedByAppInstanceUserResponse :: Int -> DescribeChannelModeratedByAppInstanceUserResponse

-- | <i>See:</i> <a>newSendChannelMessage</a> smart constructor.
data SendChannelMessage
SendChannelMessage' :: Maybe (Sensitive Text) -> Text -> Sensitive Text -> ChannelMessageType -> ChannelMessagePersistenceType -> Sensitive Text -> Text -> SendChannelMessage

-- | Create a value of <a>SendChannelMessage</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:metadata:SendChannelMessage'</a>,
--   <a>sendChannelMessage_metadata</a> - The optional metadata for each
--   message.
--   
--   <a>$sel:channelArn:SendChannelMessage'</a>,
--   <a>sendChannelMessage_channelArn</a> - The ARN of the channel.
--   
--   <a>$sel:content:SendChannelMessage'</a>,
--   <a>sendChannelMessage_content</a> - The content of the message.
--   
--   <a>$sel:type':SendChannelMessage'</a>, <a>sendChannelMessage_type</a>
--   - The type of message, <tt>STANDARD</tt> or <tt>CONTROL</tt>.
--   
--   <a>$sel:persistence:SendChannelMessage'</a>,
--   <a>sendChannelMessage_persistence</a> - Boolean that controls whether
--   the message is persisted on the back end. Required.
--   
--   <a>$sel:clientRequestToken:SendChannelMessage'</a>,
--   <a>sendChannelMessage_clientRequestToken</a> - The
--   <tt>Idempotency</tt> token for each client request.
--   
--   <a>$sel:chimeBearer:SendChannelMessage'</a>,
--   <a>sendChannelMessage_chimeBearer</a> - The
--   <tt>AppInstanceUserArn</tt> of the user that makes the API call.
newSendChannelMessage :: Text -> Text -> ChannelMessageType -> ChannelMessagePersistenceType -> Text -> Text -> SendChannelMessage

-- | <i>See:</i> <a>newSendChannelMessageResponse</a> smart constructor.
data SendChannelMessageResponse
SendChannelMessageResponse' :: Maybe ChannelMessageStatusStructure -> Maybe Text -> Maybe Text -> Int -> SendChannelMessageResponse

-- | Create a value of <a>SendChannelMessageResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:SendChannelMessageResponse'</a>,
--   <a>sendChannelMessageResponse_status</a> - The status of the channel
--   message.
--   
--   <a>$sel:channelArn:SendChannelMessage'</a>,
--   <a>sendChannelMessageResponse_channelArn</a> - The ARN of the channel.
--   
--   <a>$sel:messageId:SendChannelMessageResponse'</a>,
--   <a>sendChannelMessageResponse_messageId</a> - The ID string assigned
--   to each message.
--   
--   <a>$sel:httpStatus:SendChannelMessageResponse'</a>,
--   <a>sendChannelMessageResponse_httpStatus</a> - The response's http
--   status code.
newSendChannelMessageResponse :: Int -> SendChannelMessageResponse

-- | <i>See:</i> <a>newDeleteChannelBan</a> smart constructor.
data DeleteChannelBan
DeleteChannelBan' :: Text -> Text -> Text -> DeleteChannelBan

-- | Create a value of <a>DeleteChannelBan</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:channelArn:DeleteChannelBan'</a>,
--   <a>deleteChannelBan_channelArn</a> - The ARN of the channel from which
--   the <tt>AppInstanceUser</tt> was banned.
--   
--   <a>$sel:memberArn:DeleteChannelBan'</a>,
--   <a>deleteChannelBan_memberArn</a> - The ARN of the
--   <tt>AppInstanceUser</tt> that you want to reinstate.
--   
--   <a>$sel:chimeBearer:DeleteChannelBan'</a>,
--   <a>deleteChannelBan_chimeBearer</a> - The <tt>AppInstanceUserArn</tt>
--   of the user that makes the API call.
newDeleteChannelBan :: Text -> Text -> Text -> DeleteChannelBan

-- | <i>See:</i> <a>newDeleteChannelBanResponse</a> smart constructor.
data DeleteChannelBanResponse
DeleteChannelBanResponse' :: DeleteChannelBanResponse

-- | Create a value of <a>DeleteChannelBanResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteChannelBanResponse :: DeleteChannelBanResponse

-- | <i>See:</i> <a>newListChannelBans</a> smart constructor.
data ListChannelBans
ListChannelBans' :: Maybe (Sensitive Text) -> Maybe Natural -> Text -> Text -> ListChannelBans

-- | Create a value of <a>ListChannelBans</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListChannelBans'</a>,
--   <a>listChannelBans_nextToken</a> - The token passed by previous API
--   calls until all requested bans are returned.
--   
--   <a>$sel:maxResults:ListChannelBans'</a>,
--   <a>listChannelBans_maxResults</a> - The maximum number of bans that
--   you want returned.
--   
--   <a>$sel:channelArn:ListChannelBans'</a>,
--   <a>listChannelBans_channelArn</a> - The ARN of the channel.
--   
--   <a>$sel:chimeBearer:ListChannelBans'</a>,
--   <a>listChannelBans_chimeBearer</a> - The <tt>AppInstanceUserArn</tt>
--   of the user that makes the API call.
newListChannelBans :: Text -> Text -> ListChannelBans

-- | <i>See:</i> <a>newListChannelBansResponse</a> smart constructor.
data ListChannelBansResponse
ListChannelBansResponse' :: Maybe Text -> Maybe (Sensitive Text) -> Maybe [ChannelBanSummary] -> Int -> ListChannelBansResponse

-- | Create a value of <a>ListChannelBansResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:channelArn:ListChannelBans'</a>,
--   <a>listChannelBansResponse_channelArn</a> - The ARN of the channel.
--   
--   <a>$sel:nextToken:ListChannelBans'</a>,
--   <a>listChannelBansResponse_nextToken</a> - The token passed by
--   previous API calls until all requested bans are returned.
--   
--   <a>$sel:channelBans:ListChannelBansResponse'</a>,
--   <a>listChannelBansResponse_channelBans</a> - The information for each
--   requested ban.
--   
--   <a>$sel:httpStatus:ListChannelBansResponse'</a>,
--   <a>listChannelBansResponse_httpStatus</a> - The response's http status
--   code.
newListChannelBansResponse :: Int -> ListChannelBansResponse

-- | <i>See:</i> <a>newCreateChannel</a> smart constructor.
data CreateChannel
CreateChannel' :: Maybe ChannelMode -> Maybe ChannelPrivacy -> Maybe (Sensitive Text) -> Maybe (NonEmpty Tag) -> Text -> Sensitive Text -> Sensitive Text -> Text -> CreateChannel

-- | Create a value of <a>CreateChannel</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:mode:CreateChannel'</a>, <a>createChannel_mode</a> - The
--   channel mode: <tt>UNRESTRICTED</tt> or <tt>RESTRICTED</tt>.
--   Administrators, moderators, and channel members can add themselves and
--   other members to unrestricted channels. Only administrators and
--   moderators can add members to restricted channels.
--   
--   <a>$sel:privacy:CreateChannel'</a>, <a>createChannel_privacy</a> - The
--   channel's privacy level: <tt>PUBLIC</tt> or <tt>PRIVATE</tt>. Private
--   channels aren't discoverable by users outside the channel. Public
--   channels are discoverable by anyone in the <tt>AppInstance</tt>.
--   
--   <a>$sel:metadata:CreateChannel'</a>, <a>createChannel_metadata</a> -
--   The metadata of the creation request. Limited to 1KB and UTF-8.
--   
--   <a>$sel:tags:CreateChannel'</a>, <a>createChannel_tags</a> - The tags
--   for the creation request.
--   
--   <a>$sel:appInstanceArn:CreateChannel'</a>,
--   <a>createChannel_appInstanceArn</a> - The ARN of the channel request.
--   
--   <a>$sel:name:CreateChannel'</a>, <a>createChannel_name</a> - The name
--   of the channel.
--   
--   <a>$sel:clientRequestToken:CreateChannel'</a>,
--   <a>createChannel_clientRequestToken</a> - The client token for the
--   request. An <tt>Idempotency</tt> token.
--   
--   <a>$sel:chimeBearer:CreateChannel'</a>,
--   <a>createChannel_chimeBearer</a> - The <tt>AppInstanceUserArn</tt> of
--   the user that makes the API call.
newCreateChannel :: Text -> Text -> Text -> Text -> CreateChannel

-- | <i>See:</i> <a>newCreateChannelResponse</a> smart constructor.
data CreateChannelResponse
CreateChannelResponse' :: Maybe Text -> Int -> CreateChannelResponse

-- | Create a value of <a>CreateChannelResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:channelArn:CreateChannelResponse'</a>,
--   <a>createChannelResponse_channelArn</a> - The ARN of the channel.
--   
--   <a>$sel:httpStatus:CreateChannelResponse'</a>,
--   <a>createChannelResponse_httpStatus</a> - The response's http status
--   code.
newCreateChannelResponse :: Int -> CreateChannelResponse

-- | <i>See:</i> <a>newDescribeChannelModerator</a> smart constructor.
data DescribeChannelModerator
DescribeChannelModerator' :: Text -> Text -> Text -> DescribeChannelModerator

-- | Create a value of <a>DescribeChannelModerator</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:channelArn:DescribeChannelModerator'</a>,
--   <a>describeChannelModerator_channelArn</a> - The ARN of the channel.
--   
--   <a>$sel:channelModeratorArn:DescribeChannelModerator'</a>,
--   <a>describeChannelModerator_channelModeratorArn</a> - The ARN of the
--   channel moderator.
--   
--   <a>$sel:chimeBearer:DescribeChannelModerator'</a>,
--   <a>describeChannelModerator_chimeBearer</a> - The
--   <tt>AppInstanceUserArn</tt> of the user that makes the API call.
newDescribeChannelModerator :: Text -> Text -> Text -> DescribeChannelModerator

-- | <i>See:</i> <a>newDescribeChannelModeratorResponse</a> smart
--   constructor.
data DescribeChannelModeratorResponse
DescribeChannelModeratorResponse' :: Maybe ChannelModerator -> Int -> DescribeChannelModeratorResponse

-- | Create a value of <a>DescribeChannelModeratorResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:channelModerator:DescribeChannelModeratorResponse'</a>,
--   <a>describeChannelModeratorResponse_channelModerator</a> - The details
--   of the channel moderator.
--   
--   <a>$sel:httpStatus:DescribeChannelModeratorResponse'</a>,
--   <a>describeChannelModeratorResponse_httpStatus</a> - The response's
--   http status code.
newDescribeChannelModeratorResponse :: Int -> DescribeChannelModeratorResponse

-- | <i>See:</i> <a>newCreateChannelBan</a> smart constructor.
data CreateChannelBan
CreateChannelBan' :: Text -> Text -> Text -> CreateChannelBan

-- | Create a value of <a>CreateChannelBan</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:channelArn:CreateChannelBan'</a>,
--   <a>createChannelBan_channelArn</a> - The ARN of the ban request.
--   
--   <a>$sel:memberArn:CreateChannelBan'</a>,
--   <a>createChannelBan_memberArn</a> - The ARN of the member being
--   banned.
--   
--   <a>$sel:chimeBearer:CreateChannelBan'</a>,
--   <a>createChannelBan_chimeBearer</a> - The <tt>AppInstanceUserArn</tt>
--   of the user that makes the API call.
newCreateChannelBan :: Text -> Text -> Text -> CreateChannelBan

-- | <i>See:</i> <a>newCreateChannelBanResponse</a> smart constructor.
data CreateChannelBanResponse
CreateChannelBanResponse' :: Maybe Text -> Maybe Identity -> Int -> CreateChannelBanResponse

-- | Create a value of <a>CreateChannelBanResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:channelArn:CreateChannelBan'</a>,
--   <a>createChannelBanResponse_channelArn</a> - The ARN of the response
--   to the ban request.
--   
--   <a>$sel:member:CreateChannelBanResponse'</a>,
--   <a>createChannelBanResponse_member</a> - The <tt>ChannelArn</tt> and
--   <tt>BannedIdentity</tt> of the member in the ban response.
--   
--   <a>$sel:httpStatus:CreateChannelBanResponse'</a>,
--   <a>createChannelBanResponse_httpStatus</a> - The response's http
--   status code.
newCreateChannelBanResponse :: Int -> CreateChannelBanResponse

-- | <i>See:</i> <a>newListChannelMembershipsForAppInstanceUser</a> smart
--   constructor.
data ListChannelMembershipsForAppInstanceUser
ListChannelMembershipsForAppInstanceUser' :: Maybe Text -> Maybe (Sensitive Text) -> Maybe Natural -> Text -> ListChannelMembershipsForAppInstanceUser

-- | Create a value of <a>ListChannelMembershipsForAppInstanceUser</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:appInstanceUserArn:ListChannelMembershipsForAppInstanceUser'</a>,
--   <a>listChannelMembershipsForAppInstanceUser_appInstanceUserArn</a> -
--   The ARN of the <tt>AppInstanceUser</tt>s
--   
--   <a>$sel:nextToken:ListChannelMembershipsForAppInstanceUser'</a>,
--   <a>listChannelMembershipsForAppInstanceUser_nextToken</a> - The token
--   returned from previous API requests until the number of channel
--   memberships is reached.
--   
--   <a>$sel:maxResults:ListChannelMembershipsForAppInstanceUser'</a>,
--   <a>listChannelMembershipsForAppInstanceUser_maxResults</a> - The
--   maximum number of users that you want returned.
--   
--   <a>$sel:chimeBearer:ListChannelMembershipsForAppInstanceUser'</a>,
--   <a>listChannelMembershipsForAppInstanceUser_chimeBearer</a> - The
--   <tt>AppInstanceUserArn</tt> of the user that makes the API call.
newListChannelMembershipsForAppInstanceUser :: Text -> ListChannelMembershipsForAppInstanceUser

-- | <i>See:</i> <a>newListChannelMembershipsForAppInstanceUserResponse</a>
--   smart constructor.
data ListChannelMembershipsForAppInstanceUserResponse
ListChannelMembershipsForAppInstanceUserResponse' :: Maybe [ChannelMembershipForAppInstanceUserSummary] -> Maybe (Sensitive Text) -> Int -> ListChannelMembershipsForAppInstanceUserResponse

-- | Create a value of
--   <a>ListChannelMembershipsForAppInstanceUserResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:channelMemberships:ListChannelMembershipsForAppInstanceUserResponse'</a>,
--   <a>listChannelMembershipsForAppInstanceUserResponse_channelMemberships</a>
--   - The token passed by previous API calls until all requested users are
--   returned.
--   
--   <a>$sel:nextToken:ListChannelMembershipsForAppInstanceUser'</a>,
--   <a>listChannelMembershipsForAppInstanceUserResponse_nextToken</a> -
--   The token passed by previous API calls until all requested users are
--   returned.
--   
--   
--   <a>$sel:httpStatus:ListChannelMembershipsForAppInstanceUserResponse'</a>,
--   <a>listChannelMembershipsForAppInstanceUserResponse_httpStatus</a> -
--   The response's http status code.
newListChannelMembershipsForAppInstanceUserResponse :: Int -> ListChannelMembershipsForAppInstanceUserResponse

-- | <i>See:</i> <a>newUpdateChannelReadMarker</a> smart constructor.
data UpdateChannelReadMarker
UpdateChannelReadMarker' :: Text -> Text -> UpdateChannelReadMarker

-- | Create a value of <a>UpdateChannelReadMarker</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:channelArn:UpdateChannelReadMarker'</a>,
--   <a>updateChannelReadMarker_channelArn</a> - The ARN of the channel.
--   
--   <a>$sel:chimeBearer:UpdateChannelReadMarker'</a>,
--   <a>updateChannelReadMarker_chimeBearer</a> - The
--   <tt>AppInstanceUserArn</tt> of the user that makes the API call.
newUpdateChannelReadMarker :: Text -> Text -> UpdateChannelReadMarker

-- | <i>See:</i> <a>newUpdateChannelReadMarkerResponse</a> smart
--   constructor.
data UpdateChannelReadMarkerResponse
UpdateChannelReadMarkerResponse' :: Maybe Text -> Int -> UpdateChannelReadMarkerResponse

-- | Create a value of <a>UpdateChannelReadMarkerResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:channelArn:UpdateChannelReadMarker'</a>,
--   <a>updateChannelReadMarkerResponse_channelArn</a> - The ARN of the
--   channel.
--   
--   <a>$sel:httpStatus:UpdateChannelReadMarkerResponse'</a>,
--   <a>updateChannelReadMarkerResponse_httpStatus</a> - The response's
--   http status code.
newUpdateChannelReadMarkerResponse :: Int -> UpdateChannelReadMarkerResponse

-- | <i>See:</i> <a>newGetChannelMessageStatus</a> smart constructor.
data GetChannelMessageStatus
GetChannelMessageStatus' :: Text -> Text -> Text -> GetChannelMessageStatus

-- | Create a value of <a>GetChannelMessageStatus</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:channelArn:GetChannelMessageStatus'</a>,
--   <a>getChannelMessageStatus_channelArn</a> - The ARN of the channel
--   
--   <a>$sel:messageId:GetChannelMessageStatus'</a>,
--   <a>getChannelMessageStatus_messageId</a> - The ID of the message.
--   
--   <a>$sel:chimeBearer:GetChannelMessageStatus'</a>,
--   <a>getChannelMessageStatus_chimeBearer</a> - The
--   <tt>AppInstanceUserArn</tt> of the user making the API call.
newGetChannelMessageStatus :: Text -> Text -> Text -> GetChannelMessageStatus

-- | <i>See:</i> <a>newGetChannelMessageStatusResponse</a> smart
--   constructor.
data GetChannelMessageStatusResponse
GetChannelMessageStatusResponse' :: Maybe ChannelMessageStatusStructure -> Int -> GetChannelMessageStatusResponse

-- | Create a value of <a>GetChannelMessageStatusResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:GetChannelMessageStatusResponse'</a>,
--   <a>getChannelMessageStatusResponse_status</a> - The message status and
--   details.
--   
--   <a>$sel:httpStatus:GetChannelMessageStatusResponse'</a>,
--   <a>getChannelMessageStatusResponse_httpStatus</a> - The response's
--   http status code.
newGetChannelMessageStatusResponse :: Int -> GetChannelMessageStatusResponse

-- | <i>See:</i> <a>newCreateChannelFlow</a> smart constructor.
data CreateChannelFlow
CreateChannelFlow' :: Maybe (NonEmpty Tag) -> Text -> NonEmpty Processor -> Sensitive Text -> Sensitive Text -> CreateChannelFlow

-- | Create a value of <a>CreateChannelFlow</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:CreateChannelFlow'</a>, <a>createChannelFlow_tags</a> -
--   The tags for the creation request.
--   
--   <a>$sel:appInstanceArn:CreateChannelFlow'</a>,
--   <a>createChannelFlow_appInstanceArn</a> - The ARN of the channel flow
--   request.
--   
--   <a>$sel:processors:CreateChannelFlow'</a>,
--   <a>createChannelFlow_processors</a> - Information about the processor
--   Lambda functions.
--   
--   <a>$sel:name:CreateChannelFlow'</a>, <a>createChannelFlow_name</a> -
--   The name of the channel flow.
--   
--   <a>$sel:clientRequestToken:CreateChannelFlow'</a>,
--   <a>createChannelFlow_clientRequestToken</a> - The client token for the
--   request. An Idempotency token.
newCreateChannelFlow :: Text -> NonEmpty Processor -> Text -> Text -> CreateChannelFlow

-- | <i>See:</i> <a>newCreateChannelFlowResponse</a> smart constructor.
data CreateChannelFlowResponse
CreateChannelFlowResponse' :: Maybe Text -> Int -> CreateChannelFlowResponse

-- | Create a value of <a>CreateChannelFlowResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:channelFlowArn:CreateChannelFlowResponse'</a>,
--   <a>createChannelFlowResponse_channelFlowArn</a> - The ARN of the
--   channel flow.
--   
--   <a>$sel:httpStatus:CreateChannelFlowResponse'</a>,
--   <a>createChannelFlowResponse_httpStatus</a> - The response's http
--   status code.
newCreateChannelFlowResponse :: Int -> CreateChannelFlowResponse

-- | <i>See:</i> <a>newCreateChannelMembership</a> smart constructor.
data CreateChannelMembership
CreateChannelMembership' :: Text -> Text -> ChannelMembershipType -> Text -> CreateChannelMembership

-- | Create a value of <a>CreateChannelMembership</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:channelArn:CreateChannelMembership'</a>,
--   <a>createChannelMembership_channelArn</a> - The ARN of the channel to
--   which you're adding users.
--   
--   <a>$sel:memberArn:CreateChannelMembership'</a>,
--   <a>createChannelMembership_memberArn</a> - The ARN of the member you
--   want to add to the channel.
--   
--   <a>$sel:type':CreateChannelMembership'</a>,
--   <a>createChannelMembership_type</a> - The membership type of a user,
--   <tt>DEFAULT</tt> or <tt>HIDDEN</tt>. Default members are always
--   returned as part of <tt>ListChannelMemberships</tt>. Hidden members
--   are only returned if the type filter in
--   <tt>ListChannelMemberships</tt> equals <tt>HIDDEN</tt>. Otherwise
--   hidden members are not returned. This is only supported by moderators.
--   
--   <a>$sel:chimeBearer:CreateChannelMembership'</a>,
--   <a>createChannelMembership_chimeBearer</a> - The
--   <tt>AppInstanceUserArn</tt> of the user that makes the API call.
newCreateChannelMembership :: Text -> Text -> ChannelMembershipType -> Text -> CreateChannelMembership

-- | <i>See:</i> <a>newCreateChannelMembershipResponse</a> smart
--   constructor.
data CreateChannelMembershipResponse
CreateChannelMembershipResponse' :: Maybe Text -> Maybe Identity -> Int -> CreateChannelMembershipResponse

-- | Create a value of <a>CreateChannelMembershipResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:channelArn:CreateChannelMembership'</a>,
--   <a>createChannelMembershipResponse_channelArn</a> - The ARN of the
--   channel.
--   
--   <a>$sel:member:CreateChannelMembershipResponse'</a>,
--   <a>createChannelMembershipResponse_member</a> - The ARN and metadata
--   of the member being added.
--   
--   <a>$sel:httpStatus:CreateChannelMembershipResponse'</a>,
--   <a>createChannelMembershipResponse_httpStatus</a> - The response's
--   http status code.
newCreateChannelMembershipResponse :: Int -> CreateChannelMembershipResponse

-- | <i>See:</i> <a>newTagResource</a> smart constructor.
data TagResource
TagResource' :: Text -> NonEmpty Tag -> TagResource

-- | Create a value of <a>TagResource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceARN:TagResource'</a>, <a>tagResource_resourceARN</a> -
--   The resource ARN.
--   
--   <a>$sel:tags:TagResource'</a>, <a>tagResource_tags</a> - The tag
--   key-value pairs.
newTagResource :: Text -> NonEmpty Tag -> TagResource

-- | <i>See:</i> <a>newTagResourceResponse</a> smart constructor.
data TagResourceResponse
TagResourceResponse' :: TagResourceResponse

-- | Create a value of <a>TagResourceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newTagResourceResponse :: TagResourceResponse

-- | <i>See:</i> <a>newChannelFlowCallback</a> smart constructor.
data ChannelFlowCallback
ChannelFlowCallback' :: Maybe Bool -> Text -> Text -> ChannelMessageCallback -> ChannelFlowCallback

-- | Create a value of <a>ChannelFlowCallback</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deleteResource:ChannelFlowCallback'</a>,
--   <a>channelFlowCallback_deleteResource</a> - When a processor
--   determines that a message needs to be <tt>DENIED</tt>, pass this
--   parameter with a value of true.
--   
--   <a>$sel:callbackId:ChannelFlowCallback'</a>,
--   <a>channelFlowCallback_callbackId</a> - The identifier passed to the
--   processor by the service when invoked. Use the identifier to call back
--   the service.
--   
--   <a>$sel:channelArn:ChannelFlowCallback'</a>,
--   <a>channelFlowCallback_channelArn</a> - The ARN of the channel.
--   
--   <a>$sel:channelMessage:ChannelFlowCallback'</a>,
--   <a>channelFlowCallback_channelMessage</a> - Stores information about
--   the processed message.
newChannelFlowCallback :: Text -> Text -> ChannelMessageCallback -> ChannelFlowCallback

-- | <i>See:</i> <a>newChannelFlowCallbackResponse</a> smart constructor.
data ChannelFlowCallbackResponse
ChannelFlowCallbackResponse' :: Maybe Text -> Maybe Text -> Int -> ChannelFlowCallbackResponse

-- | Create a value of <a>ChannelFlowCallbackResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:callbackId:ChannelFlowCallback'</a>,
--   <a>channelFlowCallbackResponse_callbackId</a> - The call back ID
--   passed in the request.
--   
--   <a>$sel:channelArn:ChannelFlowCallback'</a>,
--   <a>channelFlowCallbackResponse_channelArn</a> - The ARN of the
--   channel.
--   
--   <a>$sel:httpStatus:ChannelFlowCallbackResponse'</a>,
--   <a>channelFlowCallbackResponse_httpStatus</a> - The response's http
--   status code.
newChannelFlowCallbackResponse :: Int -> ChannelFlowCallbackResponse

-- | <i>See:</i> <a>newDeleteChannelModerator</a> smart constructor.
data DeleteChannelModerator
DeleteChannelModerator' :: Text -> Text -> Text -> DeleteChannelModerator

-- | Create a value of <a>DeleteChannelModerator</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:channelArn:DeleteChannelModerator'</a>,
--   <a>deleteChannelModerator_channelArn</a> - The ARN of the channel.
--   
--   <a>$sel:channelModeratorArn:DeleteChannelModerator'</a>,
--   <a>deleteChannelModerator_channelModeratorArn</a> - The ARN of the
--   moderator being deleted.
--   
--   <a>$sel:chimeBearer:DeleteChannelModerator'</a>,
--   <a>deleteChannelModerator_chimeBearer</a> - The
--   <tt>AppInstanceUserArn</tt> of the user that makes the API call.
newDeleteChannelModerator :: Text -> Text -> Text -> DeleteChannelModerator

-- | <i>See:</i> <a>newDeleteChannelModeratorResponse</a> smart
--   constructor.
data DeleteChannelModeratorResponse
DeleteChannelModeratorResponse' :: DeleteChannelModeratorResponse

-- | Create a value of <a>DeleteChannelModeratorResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteChannelModeratorResponse :: DeleteChannelModeratorResponse

-- | <i>See:</i> <a>newDescribeChannelBan</a> smart constructor.
data DescribeChannelBan
DescribeChannelBan' :: Text -> Text -> Text -> DescribeChannelBan

-- | Create a value of <a>DescribeChannelBan</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:channelArn:DescribeChannelBan'</a>,
--   <a>describeChannelBan_channelArn</a> - The ARN of the channel from
--   which the user is banned.
--   
--   <a>$sel:memberArn:DescribeChannelBan'</a>,
--   <a>describeChannelBan_memberArn</a> - The ARN of the member being
--   banned.
--   
--   <a>$sel:chimeBearer:DescribeChannelBan'</a>,
--   <a>describeChannelBan_chimeBearer</a> - The
--   <tt>AppInstanceUserArn</tt> of the user that makes the API call.
newDescribeChannelBan :: Text -> Text -> Text -> DescribeChannelBan

-- | <i>See:</i> <a>newDescribeChannelBanResponse</a> smart constructor.
data DescribeChannelBanResponse
DescribeChannelBanResponse' :: Maybe ChannelBan -> Int -> DescribeChannelBanResponse

-- | Create a value of <a>DescribeChannelBanResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:channelBan:DescribeChannelBanResponse'</a>,
--   <a>describeChannelBanResponse_channelBan</a> - The details of the ban.
--   
--   <a>$sel:httpStatus:DescribeChannelBanResponse'</a>,
--   <a>describeChannelBanResponse_httpStatus</a> - The response's http
--   status code.
newDescribeChannelBanResponse :: Int -> DescribeChannelBanResponse

-- | <i>See:</i> <a>newUntagResource</a> smart constructor.
data UntagResource
UntagResource' :: Text -> NonEmpty (Sensitive Text) -> UntagResource

-- | Create a value of <a>UntagResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceARN:UntagResource'</a>,
--   <a>untagResource_resourceARN</a> - The resource ARN.
--   
--   <a>$sel:tagKeys:UntagResource'</a>, <a>untagResource_tagKeys</a> - The
--   tag keys.
newUntagResource :: Text -> NonEmpty Text -> UntagResource

-- | <i>See:</i> <a>newUntagResourceResponse</a> smart constructor.
data UntagResourceResponse
UntagResourceResponse' :: UntagResourceResponse

-- | Create a value of <a>UntagResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newUntagResourceResponse :: UntagResourceResponse

-- | <i>See:</i> <a>newListChannelModerators</a> smart constructor.
data ListChannelModerators
ListChannelModerators' :: Maybe (Sensitive Text) -> Maybe Natural -> Text -> Text -> ListChannelModerators

-- | Create a value of <a>ListChannelModerators</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListChannelModerators'</a>,
--   <a>listChannelModerators_nextToken</a> - The token passed by previous
--   API calls until all requested moderators are returned.
--   
--   <a>$sel:maxResults:ListChannelModerators'</a>,
--   <a>listChannelModerators_maxResults</a> - The maximum number of
--   moderators that you want returned.
--   
--   <a>$sel:channelArn:ListChannelModerators'</a>,
--   <a>listChannelModerators_channelArn</a> - The ARN of the channel.
--   
--   <a>$sel:chimeBearer:ListChannelModerators'</a>,
--   <a>listChannelModerators_chimeBearer</a> - The
--   <tt>AppInstanceUserArn</tt> of the user that makes the API call.
newListChannelModerators :: Text -> Text -> ListChannelModerators

-- | <i>See:</i> <a>newListChannelModeratorsResponse</a> smart constructor.
data ListChannelModeratorsResponse
ListChannelModeratorsResponse' :: Maybe Text -> Maybe (Sensitive Text) -> Maybe [ChannelModeratorSummary] -> Int -> ListChannelModeratorsResponse

-- | Create a value of <a>ListChannelModeratorsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:channelArn:ListChannelModerators'</a>,
--   <a>listChannelModeratorsResponse_channelArn</a> - The ARN of the
--   channel.
--   
--   <a>$sel:nextToken:ListChannelModerators'</a>,
--   <a>listChannelModeratorsResponse_nextToken</a> - The token passed by
--   previous API calls until all requested moderators are returned.
--   
--   <a>$sel:channelModerators:ListChannelModeratorsResponse'</a>,
--   <a>listChannelModeratorsResponse_channelModerators</a> - The
--   information about and names of each moderator.
--   
--   <a>$sel:httpStatus:ListChannelModeratorsResponse'</a>,
--   <a>listChannelModeratorsResponse_httpStatus</a> - The response's http
--   status code.
newListChannelModeratorsResponse :: Int -> ListChannelModeratorsResponse

-- | <i>See:</i> <a>newDescribeChannel</a> smart constructor.
data DescribeChannel
DescribeChannel' :: Text -> Text -> DescribeChannel

-- | Create a value of <a>DescribeChannel</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:channelArn:DescribeChannel'</a>,
--   <a>describeChannel_channelArn</a> - The ARN of the channel.
--   
--   <a>$sel:chimeBearer:DescribeChannel'</a>,
--   <a>describeChannel_chimeBearer</a> - The <tt>AppInstanceUserArn</tt>
--   of the user that makes the API call.
newDescribeChannel :: Text -> Text -> DescribeChannel

-- | <i>See:</i> <a>newDescribeChannelResponse</a> smart constructor.
data DescribeChannelResponse
DescribeChannelResponse' :: Maybe Channel -> Int -> DescribeChannelResponse

-- | Create a value of <a>DescribeChannelResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:channel:DescribeChannelResponse'</a>,
--   <a>describeChannelResponse_channel</a> - The channel details.
--   
--   <a>$sel:httpStatus:DescribeChannelResponse'</a>,
--   <a>describeChannelResponse_httpStatus</a> - The response's http status
--   code.
newDescribeChannelResponse :: Int -> DescribeChannelResponse

-- | <i>See:</i> <a>newDeleteChannelMessage</a> smart constructor.
data DeleteChannelMessage
DeleteChannelMessage' :: Text -> Text -> Text -> DeleteChannelMessage

-- | Create a value of <a>DeleteChannelMessage</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:channelArn:DeleteChannelMessage'</a>,
--   <a>deleteChannelMessage_channelArn</a> - The ARN of the channel.
--   
--   <a>$sel:messageId:DeleteChannelMessage'</a>,
--   <a>deleteChannelMessage_messageId</a> - The ID of the message being
--   deleted.
--   
--   <a>$sel:chimeBearer:DeleteChannelMessage'</a>,
--   <a>deleteChannelMessage_chimeBearer</a> - The
--   <tt>AppInstanceUserArn</tt> of the user that makes the API call.
newDeleteChannelMessage :: Text -> Text -> Text -> DeleteChannelMessage

-- | <i>See:</i> <a>newDeleteChannelMessageResponse</a> smart constructor.
data DeleteChannelMessageResponse
DeleteChannelMessageResponse' :: DeleteChannelMessageResponse

-- | Create a value of <a>DeleteChannelMessageResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteChannelMessageResponse :: DeleteChannelMessageResponse

-- | <i>See:</i> <a>newUpdateChannelMessage</a> smart constructor.
data UpdateChannelMessage
UpdateChannelMessage' :: Maybe (Sensitive Text) -> Maybe (Sensitive Text) -> Text -> Text -> Text -> UpdateChannelMessage

-- | Create a value of <a>UpdateChannelMessage</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:content:UpdateChannelMessage'</a>,
--   <a>updateChannelMessage_content</a> - The content of the message being
--   updated.
--   
--   <a>$sel:metadata:UpdateChannelMessage'</a>,
--   <a>updateChannelMessage_metadata</a> - The metadata of the message
--   being updated.
--   
--   <a>$sel:channelArn:UpdateChannelMessage'</a>,
--   <a>updateChannelMessage_channelArn</a> - The ARN of the channel.
--   
--   <a>$sel:messageId:UpdateChannelMessage'</a>,
--   <a>updateChannelMessage_messageId</a> - The ID string of the message
--   being updated.
--   
--   <a>$sel:chimeBearer:UpdateChannelMessage'</a>,
--   <a>updateChannelMessage_chimeBearer</a> - The
--   <tt>AppInstanceUserArn</tt> of the user that makes the API call.
newUpdateChannelMessage :: Text -> Text -> Text -> UpdateChannelMessage

-- | <i>See:</i> <a>newUpdateChannelMessageResponse</a> smart constructor.
data UpdateChannelMessageResponse
UpdateChannelMessageResponse' :: Maybe ChannelMessageStatusStructure -> Maybe Text -> Maybe Text -> Int -> UpdateChannelMessageResponse

-- | Create a value of <a>UpdateChannelMessageResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:UpdateChannelMessageResponse'</a>,
--   <a>updateChannelMessageResponse_status</a> - The status of the message
--   update.
--   
--   <a>$sel:channelArn:UpdateChannelMessage'</a>,
--   <a>updateChannelMessageResponse_channelArn</a> - The ARN of the
--   channel.
--   
--   <a>$sel:messageId:UpdateChannelMessage'</a>,
--   <a>updateChannelMessageResponse_messageId</a> - The ID string of the
--   message being updated.
--   
--   <a>$sel:httpStatus:UpdateChannelMessageResponse'</a>,
--   <a>updateChannelMessageResponse_httpStatus</a> - The response's http
--   status code.
newUpdateChannelMessageResponse :: Int -> UpdateChannelMessageResponse

-- | <i>See:</i> <a>newListChannelMessages</a> smart constructor.
data ListChannelMessages
ListChannelMessages' :: Maybe (Sensitive Text) -> Maybe POSIX -> Maybe SortOrder -> Maybe Natural -> Maybe POSIX -> Text -> Text -> ListChannelMessages

-- | Create a value of <a>ListChannelMessages</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListChannelMessages'</a>,
--   <a>listChannelMessages_nextToken</a> - The token passed by previous
--   API calls until all requested messages are returned.
--   
--   <a>$sel:notBefore:ListChannelMessages'</a>,
--   <a>listChannelMessages_notBefore</a> - The initial or starting time
--   stamp for your requested messages.
--   
--   <a>$sel:sortOrder:ListChannelMessages'</a>,
--   <a>listChannelMessages_sortOrder</a> - The order in which you want
--   messages sorted. Default is Descending, based on time created.
--   
--   <a>$sel:maxResults:ListChannelMessages'</a>,
--   <a>listChannelMessages_maxResults</a> - The maximum number of messages
--   that you want returned.
--   
--   <a>$sel:notAfter:ListChannelMessages'</a>,
--   <a>listChannelMessages_notAfter</a> - The final or ending time stamp
--   for your requested messages.
--   
--   <a>$sel:channelArn:ListChannelMessages'</a>,
--   <a>listChannelMessages_channelArn</a> - The ARN of the channel.
--   
--   <a>$sel:chimeBearer:ListChannelMessages'</a>,
--   <a>listChannelMessages_chimeBearer</a> - The
--   <tt>AppInstanceUserArn</tt> of the user that makes the API call.
newListChannelMessages :: Text -> Text -> ListChannelMessages

-- | <i>See:</i> <a>newListChannelMessagesResponse</a> smart constructor.
data ListChannelMessagesResponse
ListChannelMessagesResponse' :: Maybe Text -> Maybe (Sensitive Text) -> Maybe [ChannelMessageSummary] -> Int -> ListChannelMessagesResponse

-- | Create a value of <a>ListChannelMessagesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:channelArn:ListChannelMessages'</a>,
--   <a>listChannelMessagesResponse_channelArn</a> - The ARN of the channel
--   containing the requested messages.
--   
--   <a>$sel:nextToken:ListChannelMessages'</a>,
--   <a>listChannelMessagesResponse_nextToken</a> - The token passed by
--   previous API calls until all requested messages are returned.
--   
--   <a>$sel:channelMessages:ListChannelMessagesResponse'</a>,
--   <a>listChannelMessagesResponse_channelMessages</a> - The information
--   about, and content of, each requested message.
--   
--   <a>$sel:httpStatus:ListChannelMessagesResponse'</a>,
--   <a>listChannelMessagesResponse_httpStatus</a> - The response's http
--   status code.
newListChannelMessagesResponse :: Int -> ListChannelMessagesResponse

-- | <i>See:</i> <a>newListChannelsAssociatedWithChannelFlow</a> smart
--   constructor.
data ListChannelsAssociatedWithChannelFlow
ListChannelsAssociatedWithChannelFlow' :: Maybe (Sensitive Text) -> Maybe Natural -> Text -> ListChannelsAssociatedWithChannelFlow

-- | Create a value of <a>ListChannelsAssociatedWithChannelFlow</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListChannelsAssociatedWithChannelFlow'</a>,
--   <a>listChannelsAssociatedWithChannelFlow_nextToken</a> - The token
--   passed by previous API calls until all requested channels are
--   returned.
--   
--   <a>$sel:maxResults:ListChannelsAssociatedWithChannelFlow'</a>,
--   <a>listChannelsAssociatedWithChannelFlow_maxResults</a> - The maximum
--   number of channels that you want to return.
--   
--   <a>$sel:channelFlowArn:ListChannelsAssociatedWithChannelFlow'</a>,
--   <a>listChannelsAssociatedWithChannelFlow_channelFlowArn</a> - The ARN
--   of the channel flow.
newListChannelsAssociatedWithChannelFlow :: Text -> ListChannelsAssociatedWithChannelFlow

-- | <i>See:</i> <a>newListChannelsAssociatedWithChannelFlowResponse</a>
--   smart constructor.
data ListChannelsAssociatedWithChannelFlowResponse
ListChannelsAssociatedWithChannelFlowResponse' :: Maybe [ChannelAssociatedWithFlowSummary] -> Maybe (Sensitive Text) -> Int -> ListChannelsAssociatedWithChannelFlowResponse

-- | Create a value of <a>ListChannelsAssociatedWithChannelFlowResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:channels:ListChannelsAssociatedWithChannelFlowResponse'</a>,
--   <a>listChannelsAssociatedWithChannelFlowResponse_channels</a> - The
--   information about each channel.
--   
--   <a>$sel:nextToken:ListChannelsAssociatedWithChannelFlow'</a>,
--   <a>listChannelsAssociatedWithChannelFlowResponse_nextToken</a> - The
--   token passed by previous API calls until all requested channels are
--   returned.
--   
--   <a>$sel:httpStatus:ListChannelsAssociatedWithChannelFlowResponse'</a>,
--   <a>listChannelsAssociatedWithChannelFlowResponse_httpStatus</a> - The
--   response's http status code.
newListChannelsAssociatedWithChannelFlowResponse :: Int -> ListChannelsAssociatedWithChannelFlowResponse

-- | <i>See:</i> <a>newBatchCreateChannelMembership</a> smart constructor.
data BatchCreateChannelMembership
BatchCreateChannelMembership' :: Maybe ChannelMembershipType -> Text -> NonEmpty Text -> Text -> BatchCreateChannelMembership

-- | Create a value of <a>BatchCreateChannelMembership</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:type':BatchCreateChannelMembership'</a>,
--   <a>batchCreateChannelMembership_type</a> - The membership type of a
--   user, <tt>DEFAULT</tt> or <tt>HIDDEN</tt>. Default members are always
--   returned as part of <tt>ListChannelMemberships</tt>. Hidden members
--   are only returned if the type filter in
--   <tt>ListChannelMemberships</tt> equals <tt>HIDDEN</tt>. Otherwise
--   hidden members are not returned. This is only supported by moderators.
--   
--   <a>$sel:channelArn:BatchCreateChannelMembership'</a>,
--   <a>batchCreateChannelMembership_channelArn</a> - The ARN of the
--   channel to which you're adding users.
--   
--   <a>$sel:memberArns:BatchCreateChannelMembership'</a>,
--   <a>batchCreateChannelMembership_memberArns</a> - The ARNs of the
--   members you want to add to the channel.
--   
--   <a>$sel:chimeBearer:BatchCreateChannelMembership'</a>,
--   <a>batchCreateChannelMembership_chimeBearer</a> - The
--   <tt>AppInstanceUserArn</tt> of the user that makes the API call.
newBatchCreateChannelMembership :: Text -> NonEmpty Text -> Text -> BatchCreateChannelMembership

-- | <i>See:</i> <a>newBatchCreateChannelMembershipResponse</a> smart
--   constructor.
data BatchCreateChannelMembershipResponse
BatchCreateChannelMembershipResponse' :: Maybe [BatchCreateChannelMembershipError] -> Maybe BatchChannelMemberships -> Int -> BatchCreateChannelMembershipResponse

-- | Create a value of <a>BatchCreateChannelMembershipResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:errors:BatchCreateChannelMembershipResponse'</a>,
--   <a>batchCreateChannelMembershipResponse_errors</a> - If the action
--   fails for one or more of the memberships in the request, a list of the
--   memberships is returned, along with error codes and error messages.
--   
--   
--   <a>$sel:batchChannelMemberships:BatchCreateChannelMembershipResponse'</a>,
--   <a>batchCreateChannelMembershipResponse_batchChannelMemberships</a> -
--   The list of channel memberships in the response.
--   
--   <a>$sel:httpStatus:BatchCreateChannelMembershipResponse'</a>,
--   <a>batchCreateChannelMembershipResponse_httpStatus</a> - The
--   response's http status code.
newBatchCreateChannelMembershipResponse :: Int -> BatchCreateChannelMembershipResponse
newtype ChannelMembershipType
ChannelMembershipType' :: Text -> ChannelMembershipType
[fromChannelMembershipType] :: ChannelMembershipType -> Text
pattern ChannelMembershipType_DEFAULT :: ChannelMembershipType
pattern ChannelMembershipType_HIDDEN :: ChannelMembershipType
newtype ChannelMessagePersistenceType
ChannelMessagePersistenceType' :: Text -> ChannelMessagePersistenceType
[fromChannelMessagePersistenceType] :: ChannelMessagePersistenceType -> Text
pattern ChannelMessagePersistenceType_NON_PERSISTENT :: ChannelMessagePersistenceType
pattern ChannelMessagePersistenceType_PERSISTENT :: ChannelMessagePersistenceType
newtype ChannelMessageStatus
ChannelMessageStatus' :: Text -> ChannelMessageStatus
[fromChannelMessageStatus] :: ChannelMessageStatus -> Text
pattern ChannelMessageStatus_DENIED :: ChannelMessageStatus
pattern ChannelMessageStatus_FAILED :: ChannelMessageStatus
pattern ChannelMessageStatus_PENDING :: ChannelMessageStatus
pattern ChannelMessageStatus_SENT :: ChannelMessageStatus
newtype ChannelMessageType
ChannelMessageType' :: Text -> ChannelMessageType
[fromChannelMessageType] :: ChannelMessageType -> Text
pattern ChannelMessageType_CONTROL :: ChannelMessageType
pattern ChannelMessageType_STANDARD :: ChannelMessageType
newtype ChannelMode
ChannelMode' :: Text -> ChannelMode
[fromChannelMode] :: ChannelMode -> Text
pattern ChannelMode_RESTRICTED :: ChannelMode
pattern ChannelMode_UNRESTRICTED :: ChannelMode
newtype ChannelPrivacy
ChannelPrivacy' :: Text -> ChannelPrivacy
[fromChannelPrivacy] :: ChannelPrivacy -> Text
pattern ChannelPrivacy_PRIVATE :: ChannelPrivacy
pattern ChannelPrivacy_PUBLIC :: ChannelPrivacy
newtype ErrorCode
ErrorCode' :: Text -> ErrorCode
[fromErrorCode] :: ErrorCode -> Text
pattern ErrorCode_AccessDenied :: ErrorCode
pattern ErrorCode_BadRequest :: ErrorCode
pattern ErrorCode_Conflict :: ErrorCode
pattern ErrorCode_Forbidden :: ErrorCode
pattern ErrorCode_NotFound :: ErrorCode
pattern ErrorCode_PhoneNumberAssociationsExist :: ErrorCode
pattern ErrorCode_PreconditionFailed :: ErrorCode
pattern ErrorCode_ResourceLimitExceeded :: ErrorCode
pattern ErrorCode_ServiceFailure :: ErrorCode
pattern ErrorCode_ServiceUnavailable :: ErrorCode
pattern ErrorCode_Throttled :: ErrorCode
pattern ErrorCode_Throttling :: ErrorCode
pattern ErrorCode_Unauthorized :: ErrorCode
pattern ErrorCode_Unprocessable :: ErrorCode
pattern ErrorCode_VoiceConnectorGroupAssociationsExist :: ErrorCode
newtype FallbackAction
FallbackAction' :: Text -> FallbackAction
[fromFallbackAction] :: FallbackAction -> Text
pattern FallbackAction_ABORT :: FallbackAction
pattern FallbackAction_CONTINUE :: FallbackAction
newtype InvocationType
InvocationType' :: Text -> InvocationType
[fromInvocationType] :: InvocationType -> Text
pattern InvocationType_ASYNC :: InvocationType
newtype SortOrder
SortOrder' :: Text -> SortOrder
[fromSortOrder] :: SortOrder -> Text
pattern SortOrder_ASCENDING :: SortOrder
pattern SortOrder_DESCENDING :: SortOrder

-- | Summary of the membership details of an <tt>AppInstanceUser</tt>.
--   
--   <i>See:</i> <a>newAppInstanceUserMembershipSummary</a> smart
--   constructor.
data AppInstanceUserMembershipSummary
AppInstanceUserMembershipSummary' :: Maybe POSIX -> Maybe ChannelMembershipType -> AppInstanceUserMembershipSummary

-- | Create a value of <a>AppInstanceUserMembershipSummary</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:readMarkerTimestamp:AppInstanceUserMembershipSummary'</a>,
--   <a>appInstanceUserMembershipSummary_readMarkerTimestamp</a> - The time
--   at which a message was last read.
--   
--   <a>$sel:type':AppInstanceUserMembershipSummary'</a>,
--   <a>appInstanceUserMembershipSummary_type</a> - The type of
--   <tt>ChannelMembership</tt>.
newAppInstanceUserMembershipSummary :: AppInstanceUserMembershipSummary

-- | The membership information, including member ARNs, the channel ARN,
--   and membership types.
--   
--   <i>See:</i> <a>newBatchChannelMemberships</a> smart constructor.
data BatchChannelMemberships
BatchChannelMemberships' :: Maybe [Identity] -> Maybe Text -> Maybe ChannelMembershipType -> Maybe Identity -> BatchChannelMemberships

-- | Create a value of <a>BatchChannelMemberships</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:members:BatchChannelMemberships'</a>,
--   <a>batchChannelMemberships_members</a> - The users successfully added
--   to the request.
--   
--   <a>$sel:channelArn:BatchChannelMemberships'</a>,
--   <a>batchChannelMemberships_channelArn</a> - The ARN of the channel to
--   which you're adding users.
--   
--   <a>$sel:type':BatchChannelMemberships'</a>,
--   <a>batchChannelMemberships_type</a> - The membership types set for the
--   channel users.
--   
--   <a>$sel:invitedBy:BatchChannelMemberships'</a>,
--   <a>batchChannelMemberships_invitedBy</a> - The identifier of the
--   member who invited another member.
newBatchChannelMemberships :: BatchChannelMemberships

-- | A list of failed member ARNs, error codes, and error messages.
--   
--   <i>See:</i> <a>newBatchCreateChannelMembershipError</a> smart
--   constructor.
data BatchCreateChannelMembershipError
BatchCreateChannelMembershipError' :: Maybe ErrorCode -> Maybe Text -> Maybe Text -> BatchCreateChannelMembershipError

-- | Create a value of <a>BatchCreateChannelMembershipError</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:errorCode:BatchCreateChannelMembershipError'</a>,
--   <a>batchCreateChannelMembershipError_errorCode</a> - The error code.
--   
--   <a>$sel:memberArn:BatchCreateChannelMembershipError'</a>,
--   <a>batchCreateChannelMembershipError_memberArn</a> - The ARN of the
--   member that the service couldn't add.
--   
--   <a>$sel:errorMessage:BatchCreateChannelMembershipError'</a>,
--   <a>batchCreateChannelMembershipError_errorMessage</a> - The error
--   message.
newBatchCreateChannelMembershipError :: BatchCreateChannelMembershipError

-- | The details of a channel.
--   
--   <i>See:</i> <a>newChannel</a> smart constructor.
data Channel
Channel' :: Maybe ChannelMode -> Maybe Identity -> Maybe Text -> Maybe ChannelPrivacy -> Maybe Text -> Maybe POSIX -> Maybe (Sensitive Text) -> Maybe (Sensitive Text) -> Maybe POSIX -> Maybe POSIX -> Channel

-- | Create a value of <a>Channel</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:mode:Channel'</a>, <a>channel_mode</a> - The mode of the
--   channel.
--   
--   <a>$sel:createdBy:Channel'</a>, <a>channel_createdBy</a> - The
--   <tt>AppInstanceUser</tt> who created the channel.
--   
--   <a>$sel:channelArn:Channel'</a>, <a>channel_channelArn</a> - The ARN
--   of a channel.
--   
--   <a>$sel:privacy:Channel'</a>, <a>channel_privacy</a> - The channel's
--   privacy setting.
--   
--   <a>$sel:channelFlowArn:Channel'</a>, <a>channel_channelFlowArn</a> -
--   The ARN of the channel flow.
--   
--   <a>$sel:lastMessageTimestamp:Channel'</a>,
--   <a>channel_lastMessageTimestamp</a> - The time at which a member sent
--   the last message in the channel.
--   
--   <a>$sel:name:Channel'</a>, <a>channel_name</a> - The name of a
--   channel.
--   
--   <a>$sel:metadata:Channel'</a>, <a>channel_metadata</a> - The channel's
--   metadata.
--   
--   <a>$sel:createdTimestamp:Channel'</a>, <a>channel_createdTimestamp</a>
--   - The time at which the <tt>AppInstanceUser</tt> created the channel.
--   
--   <a>$sel:lastUpdatedTimestamp:Channel'</a>,
--   <a>channel_lastUpdatedTimestamp</a> - The time at which a channel was
--   last updated.
newChannel :: Channel

-- | Summary of details of a channel associated with channel flow.
--   
--   <i>See:</i> <a>newChannelAssociatedWithFlowSummary</a> smart
--   constructor.
data ChannelAssociatedWithFlowSummary
ChannelAssociatedWithFlowSummary' :: Maybe ChannelMode -> Maybe Text -> Maybe ChannelPrivacy -> Maybe (Sensitive Text) -> Maybe (Sensitive Text) -> ChannelAssociatedWithFlowSummary

-- | Create a value of <a>ChannelAssociatedWithFlowSummary</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:mode:ChannelAssociatedWithFlowSummary'</a>,
--   <a>channelAssociatedWithFlowSummary_mode</a> - The mode of the
--   channel.
--   
--   <a>$sel:channelArn:ChannelAssociatedWithFlowSummary'</a>,
--   <a>channelAssociatedWithFlowSummary_channelArn</a> - The ARN of the
--   channel.
--   
--   <a>$sel:privacy:ChannelAssociatedWithFlowSummary'</a>,
--   <a>channelAssociatedWithFlowSummary_privacy</a> - The channel's
--   privacy setting.
--   
--   <a>$sel:name:ChannelAssociatedWithFlowSummary'</a>,
--   <a>channelAssociatedWithFlowSummary_name</a> - The name of the channel
--   flow.
--   
--   <a>$sel:metadata:ChannelAssociatedWithFlowSummary'</a>,
--   <a>channelAssociatedWithFlowSummary_metadata</a> - The channel's
--   metadata.
newChannelAssociatedWithFlowSummary :: ChannelAssociatedWithFlowSummary

-- | The details of a channel ban.
--   
--   <i>See:</i> <a>newChannelBan</a> smart constructor.
data ChannelBan
ChannelBan' :: Maybe Identity -> Maybe Text -> Maybe Identity -> Maybe POSIX -> ChannelBan

-- | Create a value of <a>ChannelBan</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:createdBy:ChannelBan'</a>, <a>channelBan_createdBy</a> - The
--   <tt>AppInstanceUser</tt> who created the ban.
--   
--   <a>$sel:channelArn:ChannelBan'</a>, <a>channelBan_channelArn</a> - The
--   ARN of the channel from which a member is being banned.
--   
--   <a>$sel:member:ChannelBan'</a>, <a>channelBan_member</a> - The member
--   being banned from the channel.
--   
--   <a>$sel:createdTimestamp:ChannelBan'</a>,
--   <a>channelBan_createdTimestamp</a> - The time at which the ban was
--   created.
newChannelBan :: ChannelBan

-- | Summary of the details of a <tt>ChannelBan</tt>.
--   
--   <i>See:</i> <a>newChannelBanSummary</a> smart constructor.
data ChannelBanSummary
ChannelBanSummary' :: Maybe Identity -> ChannelBanSummary

-- | Create a value of <a>ChannelBanSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:member:ChannelBanSummary'</a>, <a>channelBanSummary_member</a>
--   - The member being banned from a channel.
newChannelBanSummary :: ChannelBanSummary

-- | The details of a channel flow.
--   
--   <i>See:</i> <a>newChannelFlow</a> smart constructor.
data ChannelFlow
ChannelFlow' :: Maybe (NonEmpty Processor) -> Maybe Text -> Maybe (Sensitive Text) -> Maybe POSIX -> Maybe POSIX -> ChannelFlow

-- | Create a value of <a>ChannelFlow</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:processors:ChannelFlow'</a>, <a>channelFlow_processors</a> -
--   Information about the processor Lambda functions.
--   
--   <a>$sel:channelFlowArn:ChannelFlow'</a>,
--   <a>channelFlow_channelFlowArn</a> - The ARN of the channel flow.
--   
--   <a>$sel:name:ChannelFlow'</a>, <a>channelFlow_name</a> - The name of
--   the channel flow.
--   
--   <a>$sel:createdTimestamp:ChannelFlow'</a>,
--   <a>channelFlow_createdTimestamp</a> - The time at which the channel
--   flow was created.
--   
--   <a>$sel:lastUpdatedTimestamp:ChannelFlow'</a>,
--   <a>channelFlow_lastUpdatedTimestamp</a> - The time at which a channel
--   flow was updated.
newChannelFlow :: ChannelFlow

-- | Summary of details of a channel flow.
--   
--   <i>See:</i> <a>newChannelFlowSummary</a> smart constructor.
data ChannelFlowSummary
ChannelFlowSummary' :: Maybe (NonEmpty Processor) -> Maybe Text -> Maybe (Sensitive Text) -> ChannelFlowSummary

-- | Create a value of <a>ChannelFlowSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:processors:ChannelFlowSummary'</a>,
--   <a>channelFlowSummary_processors</a> - Information about the processor
--   Lambda functions.
--   
--   <a>$sel:channelFlowArn:ChannelFlowSummary'</a>,
--   <a>channelFlowSummary_channelFlowArn</a> - The ARN of the channel
--   flow.
--   
--   <a>$sel:name:ChannelFlowSummary'</a>, <a>channelFlowSummary_name</a> -
--   The name of the channel flow.
newChannelFlowSummary :: ChannelFlowSummary

-- | The details of a channel member.
--   
--   <i>See:</i> <a>newChannelMembership</a> smart constructor.
data ChannelMembership
ChannelMembership' :: Maybe Text -> Maybe Identity -> Maybe ChannelMembershipType -> Maybe Identity -> Maybe POSIX -> Maybe POSIX -> ChannelMembership

-- | Create a value of <a>ChannelMembership</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:channelArn:ChannelMembership'</a>,
--   <a>channelMembership_channelArn</a> - The ARN of the member's channel.
--   
--   <a>$sel:member:ChannelMembership'</a>, <a>channelMembership_member</a>
--   - The data of the channel member.
--   
--   <a>$sel:type':ChannelMembership'</a>, <a>channelMembership_type</a> -
--   The membership type set for the channel member.
--   
--   <a>$sel:invitedBy:ChannelMembership'</a>,
--   <a>channelMembership_invitedBy</a> - The identifier of the member who
--   invited another member.
--   
--   <a>$sel:createdTimestamp:ChannelMembership'</a>,
--   <a>channelMembership_createdTimestamp</a> - The time at which the
--   channel membership was created.
--   
--   <a>$sel:lastUpdatedTimestamp:ChannelMembership'</a>,
--   <a>channelMembership_lastUpdatedTimestamp</a> - The time at which a
--   channel membership was last updated.
newChannelMembership :: ChannelMembership

-- | Summary of the channel membership details of an
--   <tt>AppInstanceUser</tt>.
--   
--   <i>See:</i> <a>newChannelMembershipForAppInstanceUserSummary</a> smart
--   constructor.
data ChannelMembershipForAppInstanceUserSummary
ChannelMembershipForAppInstanceUserSummary' :: Maybe AppInstanceUserMembershipSummary -> Maybe ChannelSummary -> ChannelMembershipForAppInstanceUserSummary

-- | Create a value of <a>ChannelMembershipForAppInstanceUserSummary</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:appInstanceUserMembershipSummary:ChannelMembershipForAppInstanceUserSummary'</a>,
--   <a>channelMembershipForAppInstanceUserSummary_appInstanceUserMembershipSummary</a>
--   - Returns the channel membership data for an <tt>AppInstance</tt>.
--   
--   
--   <a>$sel:channelSummary:ChannelMembershipForAppInstanceUserSummary'</a>,
--   <a>channelMembershipForAppInstanceUserSummary_channelSummary</a> -
--   Returns the channel data for an <tt>AppInstance</tt>.
newChannelMembershipForAppInstanceUserSummary :: ChannelMembershipForAppInstanceUserSummary

-- | Summary of the details of a <tt>ChannelMembership</tt>.
--   
--   <i>See:</i> <a>newChannelMembershipSummary</a> smart constructor.
data ChannelMembershipSummary
ChannelMembershipSummary' :: Maybe Identity -> ChannelMembershipSummary

-- | Create a value of <a>ChannelMembershipSummary</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:member:ChannelMembershipSummary'</a>,
--   <a>channelMembershipSummary_member</a> - A member's summary data.
newChannelMembershipSummary :: ChannelMembershipSummary

-- | The details of a message in a channel.
--   
--   <i>See:</i> <a>newChannelMessage</a> smart constructor.
data ChannelMessage
ChannelMessage' :: Maybe ChannelMessageStatusStructure -> Maybe Identity -> Maybe Text -> Maybe (Sensitive Text) -> Maybe Bool -> Maybe ChannelMessagePersistenceType -> Maybe (Sensitive Text) -> Maybe ChannelMessageType -> Maybe POSIX -> Maybe Text -> Maybe POSIX -> Maybe POSIX -> ChannelMessage

-- | Create a value of <a>ChannelMessage</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:ChannelMessage'</a>, <a>channelMessage_status</a> - The
--   status of the channel message.
--   
--   <a>$sel:sender:ChannelMessage'</a>, <a>channelMessage_sender</a> - The
--   message sender.
--   
--   <a>$sel:channelArn:ChannelMessage'</a>,
--   <a>channelMessage_channelArn</a> - The ARN of the channel.
--   
--   <a>$sel:content:ChannelMessage'</a>, <a>channelMessage_content</a> -
--   The message content.
--   
--   <a>$sel:redacted:ChannelMessage'</a>, <a>channelMessage_redacted</a> -
--   Hides the content of a message.
--   
--   <a>$sel:persistence:ChannelMessage'</a>,
--   <a>channelMessage_persistence</a> - The persistence setting for a
--   channel message.
--   
--   <a>$sel:metadata:ChannelMessage'</a>, <a>channelMessage_metadata</a> -
--   The message metadata.
--   
--   <a>$sel:type':ChannelMessage'</a>, <a>channelMessage_type</a> - The
--   message type.
--   
--   <a>$sel:createdTimestamp:ChannelMessage'</a>,
--   <a>channelMessage_createdTimestamp</a> - The time at which the message
--   was created.
--   
--   <a>$sel:messageId:ChannelMessage'</a>, <a>channelMessage_messageId</a>
--   - The ID of a message.
--   
--   <a>$sel:lastUpdatedTimestamp:ChannelMessage'</a>,
--   <a>channelMessage_lastUpdatedTimestamp</a> - The time at which a
--   message was updated.
--   
--   <a>$sel:lastEditedTimestamp:ChannelMessage'</a>,
--   <a>channelMessage_lastEditedTimestamp</a> - The time at which a
--   message was edited.
newChannelMessage :: ChannelMessage

-- | Stores information about a callback.
--   
--   <i>See:</i> <a>newChannelMessageCallback</a> smart constructor.
data ChannelMessageCallback
ChannelMessageCallback' :: Maybe (Sensitive Text) -> Maybe (Sensitive Text) -> Text -> ChannelMessageCallback

-- | Create a value of <a>ChannelMessageCallback</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:content:ChannelMessageCallback'</a>,
--   <a>channelMessageCallback_content</a> - The message content.
--   
--   <a>$sel:metadata:ChannelMessageCallback'</a>,
--   <a>channelMessageCallback_metadata</a> - The message metadata.
--   
--   <a>$sel:messageId:ChannelMessageCallback'</a>,
--   <a>channelMessageCallback_messageId</a> - The message ID.
newChannelMessageCallback :: Text -> ChannelMessageCallback

-- | Stores information about a message status.
--   
--   <i>See:</i> <a>newChannelMessageStatusStructure</a> smart constructor.
data ChannelMessageStatusStructure
ChannelMessageStatusStructure' :: Maybe ChannelMessageStatus -> Maybe Text -> ChannelMessageStatusStructure

-- | Create a value of <a>ChannelMessageStatusStructure</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:value:ChannelMessageStatusStructure'</a>,
--   <a>channelMessageStatusStructure_value</a> - The message status value.
--   
--   <a>$sel:detail:ChannelMessageStatusStructure'</a>,
--   <a>channelMessageStatusStructure_detail</a> - Contains more details
--   about the messasge status.
newChannelMessageStatusStructure :: ChannelMessageStatusStructure

-- | Summary of the messages in a <tt>Channel</tt>.
--   
--   <i>See:</i> <a>newChannelMessageSummary</a> smart constructor.
data ChannelMessageSummary
ChannelMessageSummary' :: Maybe ChannelMessageStatusStructure -> Maybe Identity -> Maybe (Sensitive Text) -> Maybe Bool -> Maybe (Sensitive Text) -> Maybe ChannelMessageType -> Maybe POSIX -> Maybe Text -> Maybe POSIX -> Maybe POSIX -> ChannelMessageSummary

-- | Create a value of <a>ChannelMessageSummary</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:ChannelMessageSummary'</a>,
--   <a>channelMessageSummary_status</a> - The message status. The status
--   value is <tt>SENT</tt> for messages sent to a channel without a
--   channel flow. For channels associated with channel flow, the value
--   determines the processing stage.
--   
--   <a>$sel:sender:ChannelMessageSummary'</a>,
--   <a>channelMessageSummary_sender</a> - The message sender.
--   
--   <a>$sel:content:ChannelMessageSummary'</a>,
--   <a>channelMessageSummary_content</a> - The content of the message.
--   
--   <a>$sel:redacted:ChannelMessageSummary'</a>,
--   <a>channelMessageSummary_redacted</a> - Indicates whether a message
--   was redacted.
--   
--   <a>$sel:metadata:ChannelMessageSummary'</a>,
--   <a>channelMessageSummary_metadata</a> - The metadata of the message.
--   
--   <a>$sel:type':ChannelMessageSummary'</a>,
--   <a>channelMessageSummary_type</a> - The type of message.
--   
--   <a>$sel:createdTimestamp:ChannelMessageSummary'</a>,
--   <a>channelMessageSummary_createdTimestamp</a> - The time at which the
--   message summary was created.
--   
--   <a>$sel:messageId:ChannelMessageSummary'</a>,
--   <a>channelMessageSummary_messageId</a> - The ID of the message.
--   
--   <a>$sel:lastUpdatedTimestamp:ChannelMessageSummary'</a>,
--   <a>channelMessageSummary_lastUpdatedTimestamp</a> - The time at which
--   a message was last updated.
--   
--   <a>$sel:lastEditedTimestamp:ChannelMessageSummary'</a>,
--   <a>channelMessageSummary_lastEditedTimestamp</a> - The time at which a
--   message was last edited.
newChannelMessageSummary :: ChannelMessageSummary

-- | Summary of the details of a moderated channel.
--   
--   <i>See:</i> <a>newChannelModeratedByAppInstanceUserSummary</a> smart
--   constructor.
data ChannelModeratedByAppInstanceUserSummary
ChannelModeratedByAppInstanceUserSummary' :: Maybe ChannelSummary -> ChannelModeratedByAppInstanceUserSummary

-- | Create a value of <a>ChannelModeratedByAppInstanceUserSummary</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:channelSummary:ChannelModeratedByAppInstanceUserSummary'</a>,
--   <a>channelModeratedByAppInstanceUserSummary_channelSummary</a> -
--   Summary of the details of a <tt>Channel</tt>.
newChannelModeratedByAppInstanceUserSummary :: ChannelModeratedByAppInstanceUserSummary

-- | The details of a channel moderator.
--   
--   <i>See:</i> <a>newChannelModerator</a> smart constructor.
data ChannelModerator
ChannelModerator' :: Maybe Identity -> Maybe Text -> Maybe POSIX -> Maybe Identity -> ChannelModerator

-- | Create a value of <a>ChannelModerator</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:createdBy:ChannelModerator'</a>,
--   <a>channelModerator_createdBy</a> - The <tt>AppInstanceUser</tt> who
--   created the moderator.
--   
--   <a>$sel:channelArn:ChannelModerator'</a>,
--   <a>channelModerator_channelArn</a> - The ARN of the moderator's
--   channel.
--   
--   <a>$sel:createdTimestamp:ChannelModerator'</a>,
--   <a>channelModerator_createdTimestamp</a> - The time at which the
--   moderator was created.
--   
--   <a>$sel:moderator:ChannelModerator'</a>,
--   <a>channelModerator_moderator</a> - The moderator's data.
newChannelModerator :: ChannelModerator

-- | Summary of the details of a <tt>ChannelModerator</tt>.
--   
--   <i>See:</i> <a>newChannelModeratorSummary</a> smart constructor.
data ChannelModeratorSummary
ChannelModeratorSummary' :: Maybe Identity -> ChannelModeratorSummary

-- | Create a value of <a>ChannelModeratorSummary</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:moderator:ChannelModeratorSummary'</a>,
--   <a>channelModeratorSummary_moderator</a> - The data for a moderator.
newChannelModeratorSummary :: ChannelModeratorSummary

-- | Summary of the details of a <tt>Channel</tt>.
--   
--   <i>See:</i> <a>newChannelSummary</a> smart constructor.
data ChannelSummary
ChannelSummary' :: Maybe ChannelMode -> Maybe Text -> Maybe ChannelPrivacy -> Maybe POSIX -> Maybe (Sensitive Text) -> Maybe (Sensitive Text) -> ChannelSummary

-- | Create a value of <a>ChannelSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:mode:ChannelSummary'</a>, <a>channelSummary_mode</a> - The
--   mode of the channel.
--   
--   <a>$sel:channelArn:ChannelSummary'</a>,
--   <a>channelSummary_channelArn</a> - The ARN of the channel.
--   
--   <a>$sel:privacy:ChannelSummary'</a>, <a>channelSummary_privacy</a> -
--   The privacy setting of the channel.
--   
--   <a>$sel:lastMessageTimestamp:ChannelSummary'</a>,
--   <a>channelSummary_lastMessageTimestamp</a> - The time at which the
--   last message in a channel was sent.
--   
--   <a>$sel:name:ChannelSummary'</a>, <a>channelSummary_name</a> - The
--   name of the channel.
--   
--   <a>$sel:metadata:ChannelSummary'</a>, <a>channelSummary_metadata</a> -
--   The metadata of the channel.
newChannelSummary :: ChannelSummary

-- | The details of a user.
--   
--   <i>See:</i> <a>newIdentity</a> smart constructor.
data Identity
Identity' :: Maybe Text -> Maybe (Sensitive Text) -> Identity

-- | Create a value of <a>Identity</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:Identity'</a>, <a>identity_arn</a> - The ARN in an
--   Identity.
--   
--   <a>$sel:name:Identity'</a>, <a>identity_name</a> - The name in an
--   Identity.
newIdentity :: Identity

-- | Stores metadata about a Lambda processor.
--   
--   <i>See:</i> <a>newLambdaConfiguration</a> smart constructor.
data LambdaConfiguration
LambdaConfiguration' :: Text -> InvocationType -> LambdaConfiguration

-- | Create a value of <a>LambdaConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:LambdaConfiguration'</a>,
--   <a>lambdaConfiguration_resourceArn</a> - The ARN of the Lambda message
--   processing function.
--   
--   <a>$sel:invocationType:LambdaConfiguration'</a>,
--   <a>lambdaConfiguration_invocationType</a> - Controls how the Lambda
--   function is invoked.
newLambdaConfiguration :: Text -> InvocationType -> LambdaConfiguration

-- | The websocket endpoint used to connect to Amazon Chime SDK messaging.
--   
--   <i>See:</i> <a>newMessagingSessionEndpoint</a> smart constructor.
data MessagingSessionEndpoint
MessagingSessionEndpoint' :: Maybe Text -> MessagingSessionEndpoint

-- | Create a value of <a>MessagingSessionEndpoint</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:url:MessagingSessionEndpoint'</a>,
--   <a>messagingSessionEndpoint_url</a> - The endpoint to which you
--   establish a websocket connection.
newMessagingSessionEndpoint :: MessagingSessionEndpoint

-- | The information about a processor in a channel flow.
--   
--   <i>See:</i> <a>newProcessor</a> smart constructor.
data Processor
Processor' :: Sensitive Text -> ProcessorConfiguration -> Natural -> FallbackAction -> Processor

-- | Create a value of <a>Processor</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:Processor'</a>, <a>processor_name</a> - The name of the
--   channel flow.
--   
--   <a>$sel:configuration:Processor'</a>, <a>processor_configuration</a> -
--   The information about the type of processor and its identifier.
--   
--   <a>$sel:executionOrder:Processor'</a>, <a>processor_executionOrder</a>
--   - The sequence in which processors run. If you have multiple
--   processors in a channel flow, message processing goes through each
--   processor in the sequence. The value determines the sequence. At this
--   point, we support only 1 processor within a flow.
--   
--   <a>$sel:fallbackAction:Processor'</a>, <a>processor_fallbackAction</a>
--   - Determines whether to continue or stop processing if communication
--   with processor fails. If the last processor in a channel flow sequence
--   has a fallback action of CONTINUE, and communication with the
--   processor fails, the message is considered processed and sent to the
--   recipients in the channel.
newProcessor :: Text -> ProcessorConfiguration -> Natural -> FallbackAction -> Processor

-- | A processor's metadata.
--   
--   <i>See:</i> <a>newProcessorConfiguration</a> smart constructor.
data ProcessorConfiguration
ProcessorConfiguration' :: LambdaConfiguration -> ProcessorConfiguration

-- | Create a value of <a>ProcessorConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lambda:ProcessorConfiguration'</a>,
--   <a>processorConfiguration_lambda</a> - Indicates that the processor is
--   of type Lambda.
newProcessorConfiguration :: LambdaConfiguration -> ProcessorConfiguration

-- | A tag object containing a key-value pair.
--   
--   <i>See:</i> <a>newTag</a> smart constructor.
data Tag
Tag' :: Sensitive Text -> Sensitive Text -> Tag

-- | Create a value of <a>Tag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:Tag'</a>, <a>tag_key</a> - The key in a tag.
--   
--   <a>$sel:value:Tag'</a>, <a>tag_value</a> - The value in a tag.
newTag :: Text -> Text -> Tag
