-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/

@package libZSservicesZSamazonka-syntheticsZSamazonka-synthetics
@version 2.0


module Network.AWS.Synthetics.Types.BaseScreenshot

-- | A structure representing a screenshot that is used as a baseline
--   during visual monitoring comparisons made by the canary.
--   
--   <i>See:</i> <a>newBaseScreenshot</a> smart constructor.
data BaseScreenshot
BaseScreenshot' :: Maybe [Text] -> Text -> BaseScreenshot

-- | Coordinates that define the part of a screen to ignore during
--   screenshot comparisons. To obtain the coordinates to use here, use the
--   CloudWatch Logs console to draw the boundaries on the screen. For more
--   information, see {LINK}
[$sel:ignoreCoordinates:BaseScreenshot'] :: BaseScreenshot -> Maybe [Text]

-- | The name of the screenshot. This is generated the first time the
--   canary is run after the <tt>UpdateCanary</tt> operation that specified
--   for this canary to perform visual monitoring.
[$sel:screenshotName:BaseScreenshot'] :: BaseScreenshot -> Text

-- | Create a value of <a>BaseScreenshot</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ignoreCoordinates:BaseScreenshot'</a>,
--   <a>baseScreenshot_ignoreCoordinates</a> - Coordinates that define the
--   part of a screen to ignore during screenshot comparisons. To obtain
--   the coordinates to use here, use the CloudWatch Logs console to draw
--   the boundaries on the screen. For more information, see {LINK}
--   
--   <a>$sel:screenshotName:BaseScreenshot'</a>,
--   <a>baseScreenshot_screenshotName</a> - The name of the screenshot.
--   This is generated the first time the canary is run after the
--   <tt>UpdateCanary</tt> operation that specified for this canary to
--   perform visual monitoring.
newBaseScreenshot :: Text -> BaseScreenshot

-- | Coordinates that define the part of a screen to ignore during
--   screenshot comparisons. To obtain the coordinates to use here, use the
--   CloudWatch Logs console to draw the boundaries on the screen. For more
--   information, see {LINK}
baseScreenshot_ignoreCoordinates :: Lens' BaseScreenshot (Maybe [Text])

-- | The name of the screenshot. This is generated the first time the
--   canary is run after the <tt>UpdateCanary</tt> operation that specified
--   for this canary to perform visual monitoring.
baseScreenshot_screenshotName :: Lens' BaseScreenshot Text
instance GHC.Generics.Generic Network.AWS.Synthetics.Types.BaseScreenshot.BaseScreenshot
instance GHC.Show.Show Network.AWS.Synthetics.Types.BaseScreenshot.BaseScreenshot
instance GHC.Read.Read Network.AWS.Synthetics.Types.BaseScreenshot.BaseScreenshot
instance GHC.Classes.Eq Network.AWS.Synthetics.Types.BaseScreenshot.BaseScreenshot
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Synthetics.Types.BaseScreenshot.BaseScreenshot
instance Data.Hashable.Class.Hashable Network.AWS.Synthetics.Types.BaseScreenshot.BaseScreenshot
instance Control.DeepSeq.NFData Network.AWS.Synthetics.Types.BaseScreenshot.BaseScreenshot
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Synthetics.Types.BaseScreenshot.BaseScreenshot


module Network.AWS.Synthetics.Types.CanaryCodeInput

-- | Use this structure to input your script code for the canary. This
--   structure contains the Lambda handler with the location where the
--   canary should start running the script. If the script is stored in an
--   S3 bucket, the bucket name, key, and version are also included. If the
--   script was passed into the canary directly, the script code is
--   contained in the value of <tt>Zipfile</tt>.
--   
--   <i>See:</i> <a>newCanaryCodeInput</a> smart constructor.
data CanaryCodeInput
CanaryCodeInput' :: Maybe Text -> Maybe Text -> Maybe Base64 -> Maybe Text -> Text -> CanaryCodeInput

-- | The S3 key of your script. For more information, see <a>Working with
--   Amazon S3 Objects</a>.
[$sel:s3Key:CanaryCodeInput'] :: CanaryCodeInput -> Maybe Text

-- | The S3 version ID of your script.
[$sel:s3Version:CanaryCodeInput'] :: CanaryCodeInput -> Maybe Text

-- | If you input your canary script directly into the canary instead of
--   referring to an S3 location, the value of this parameter is the
--   base64-encoded contents of the .zip file that contains the script. It
--   must be smaller than 256 Kb.
[$sel:zipFile:CanaryCodeInput'] :: CanaryCodeInput -> Maybe Base64

-- | If your canary script is located in S3, specify the bucket name here.
--   Do not include <tt>s3://</tt> as the start of the bucket name.
[$sel:s3Bucket:CanaryCodeInput'] :: CanaryCodeInput -> Maybe Text

-- | The entry point to use for the source code when running the canary.
--   This value must end with the string <tt>.handler</tt>. The string is
--   limited to 29 characters or fewer.
[$sel:handler:CanaryCodeInput'] :: CanaryCodeInput -> Text

-- | Create a value of <a>CanaryCodeInput</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:s3Key:CanaryCodeInput'</a>, <a>canaryCodeInput_s3Key</a> - The
--   S3 key of your script. For more information, see <a>Working with
--   Amazon S3 Objects</a>.
--   
--   <a>$sel:s3Version:CanaryCodeInput'</a>,
--   <a>canaryCodeInput_s3Version</a> - The S3 version ID of your script.
--   
--   <a>$sel:zipFile:CanaryCodeInput'</a>, <a>canaryCodeInput_zipFile</a> -
--   If you input your canary script directly into the canary instead of
--   referring to an S3 location, the value of this parameter is the
--   base64-encoded contents of the .zip file that contains the script. It
--   must be smaller than 256 Kb.-- -- <i>Note:</i> This <tt>Lens</tt>
--   automatically encodes and decodes Base64 data. -- The underlying
--   isomorphism will encode to Base64 representation during --
--   serialisation, and decode from Base64 representation during
--   deserialisation. -- This <tt>Lens</tt> accepts and returns only raw
--   unencoded data.
--   
--   <a>$sel:s3Bucket:CanaryCodeInput'</a>, <a>canaryCodeInput_s3Bucket</a>
--   - If your canary script is located in S3, specify the bucket name
--   here. Do not include <tt>s3://</tt> as the start of the bucket name.
--   
--   <a>$sel:handler:CanaryCodeInput'</a>, <a>canaryCodeInput_handler</a> -
--   The entry point to use for the source code when running the canary.
--   This value must end with the string <tt>.handler</tt>. The string is
--   limited to 29 characters or fewer.
newCanaryCodeInput :: Text -> CanaryCodeInput

-- | The S3 key of your script. For more information, see <a>Working with
--   Amazon S3 Objects</a>.
canaryCodeInput_s3Key :: Lens' CanaryCodeInput (Maybe Text)

-- | The S3 version ID of your script.
canaryCodeInput_s3Version :: Lens' CanaryCodeInput (Maybe Text)

-- | If you input your canary script directly into the canary instead of
--   referring to an S3 location, the value of this parameter is the
--   base64-encoded contents of the .zip file that contains the script. It
--   must be smaller than 256 Kb.-- -- <i>Note:</i> This <tt>Lens</tt>
--   automatically encodes and decodes Base64 data. -- The underlying
--   isomorphism will encode to Base64 representation during --
--   serialisation, and decode from Base64 representation during
--   deserialisation. -- This <tt>Lens</tt> accepts and returns only raw
--   unencoded data.
canaryCodeInput_zipFile :: Lens' CanaryCodeInput (Maybe ByteString)

-- | If your canary script is located in S3, specify the bucket name here.
--   Do not include <tt>s3://</tt> as the start of the bucket name.
canaryCodeInput_s3Bucket :: Lens' CanaryCodeInput (Maybe Text)

-- | The entry point to use for the source code when running the canary.
--   This value must end with the string <tt>.handler</tt>. The string is
--   limited to 29 characters or fewer.
canaryCodeInput_handler :: Lens' CanaryCodeInput Text
instance GHC.Generics.Generic Network.AWS.Synthetics.Types.CanaryCodeInput.CanaryCodeInput
instance GHC.Show.Show Network.AWS.Synthetics.Types.CanaryCodeInput.CanaryCodeInput
instance GHC.Read.Read Network.AWS.Synthetics.Types.CanaryCodeInput.CanaryCodeInput
instance GHC.Classes.Eq Network.AWS.Synthetics.Types.CanaryCodeInput.CanaryCodeInput
instance Data.Hashable.Class.Hashable Network.AWS.Synthetics.Types.CanaryCodeInput.CanaryCodeInput
instance Control.DeepSeq.NFData Network.AWS.Synthetics.Types.CanaryCodeInput.CanaryCodeInput
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Synthetics.Types.CanaryCodeInput.CanaryCodeInput


module Network.AWS.Synthetics.Types.CanaryCodeOutput

-- | This structure contains information about the canary's Lambda handler
--   and where its code is stored by CloudWatch Synthetics.
--   
--   <i>See:</i> <a>newCanaryCodeOutput</a> smart constructor.
data CanaryCodeOutput
CanaryCodeOutput' :: Maybe Text -> Maybe Text -> CanaryCodeOutput

-- | The ARN of the Lambda layer where Synthetics stores the canary script
--   code.
[$sel:sourceLocationArn:CanaryCodeOutput'] :: CanaryCodeOutput -> Maybe Text

-- | The entry point to use for the source code when running the canary.
[$sel:handler:CanaryCodeOutput'] :: CanaryCodeOutput -> Maybe Text

-- | Create a value of <a>CanaryCodeOutput</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sourceLocationArn:CanaryCodeOutput'</a>,
--   <a>canaryCodeOutput_sourceLocationArn</a> - The ARN of the Lambda
--   layer where Synthetics stores the canary script code.
--   
--   <a>$sel:handler:CanaryCodeOutput'</a>, <a>canaryCodeOutput_handler</a>
--   - The entry point to use for the source code when running the canary.
newCanaryCodeOutput :: CanaryCodeOutput

-- | The ARN of the Lambda layer where Synthetics stores the canary script
--   code.
canaryCodeOutput_sourceLocationArn :: Lens' CanaryCodeOutput (Maybe Text)

-- | The entry point to use for the source code when running the canary.
canaryCodeOutput_handler :: Lens' CanaryCodeOutput (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Synthetics.Types.CanaryCodeOutput.CanaryCodeOutput
instance GHC.Show.Show Network.AWS.Synthetics.Types.CanaryCodeOutput.CanaryCodeOutput
instance GHC.Read.Read Network.AWS.Synthetics.Types.CanaryCodeOutput.CanaryCodeOutput
instance GHC.Classes.Eq Network.AWS.Synthetics.Types.CanaryCodeOutput.CanaryCodeOutput
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Synthetics.Types.CanaryCodeOutput.CanaryCodeOutput
instance Data.Hashable.Class.Hashable Network.AWS.Synthetics.Types.CanaryCodeOutput.CanaryCodeOutput
instance Control.DeepSeq.NFData Network.AWS.Synthetics.Types.CanaryCodeOutput.CanaryCodeOutput


module Network.AWS.Synthetics.Types.CanaryRunConfigInput

-- | A structure that contains input information for a canary run.
--   
--   <i>See:</i> <a>newCanaryRunConfigInput</a> smart constructor.
data CanaryRunConfigInput
CanaryRunConfigInput' :: Maybe Natural -> Maybe (HashMap Text Text) -> Maybe Bool -> Maybe Natural -> CanaryRunConfigInput

-- | How long the canary is allowed to run before it must stop. You can't
--   set this time to be longer than the frequency of the runs of this
--   canary.
--   
--   If you omit this field, the frequency of the canary is used as this
--   value, up to a maximum of 14 minutes.
[$sel:timeoutInSeconds:CanaryRunConfigInput'] :: CanaryRunConfigInput -> Maybe Natural

-- | Specifies the keys and values to use for any environment variables
--   used in the canary script. Use the following format:
--   
--   { "key1" : "value1", "key2" : "value2", ...}
--   
--   Keys must start with a letter and be at least two characters. The
--   total size of your environment variables cannot exceed 4 KB. You can't
--   specify any Lambda reserved environment variables as the keys for your
--   environment variables. For more information about reserved keys, see
--   <a>Runtime environment variables</a>.
[$sel:environmentVariables:CanaryRunConfigInput'] :: CanaryRunConfigInput -> Maybe (HashMap Text Text)

-- | Specifies whether this canary is to use active X-Ray tracing when it
--   runs. Active tracing enables this canary run to be displayed in the
--   ServiceLens and X-Ray service maps even if the canary does not hit an
--   endpoint that has X-Ray tracing enabled. Using X-Ray tracing incurs
--   charges. For more information, see <a>Canaries and X-Ray tracing</a>.
--   
--   You can enable active tracing only for canaries that use version
--   <tt>syn-nodejs-2.0</tt> or later for their canary runtime.
[$sel:activeTracing:CanaryRunConfigInput'] :: CanaryRunConfigInput -> Maybe Bool

-- | The maximum amount of memory available to the canary while it is
--   running, in MB. This value must be a multiple of 64.
[$sel:memoryInMB:CanaryRunConfigInput'] :: CanaryRunConfigInput -> Maybe Natural

-- | Create a value of <a>CanaryRunConfigInput</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:timeoutInSeconds:CanaryRunConfigInput'</a>,
--   <a>canaryRunConfigInput_timeoutInSeconds</a> - How long the canary is
--   allowed to run before it must stop. You can't set this time to be
--   longer than the frequency of the runs of this canary.
--   
--   If you omit this field, the frequency of the canary is used as this
--   value, up to a maximum of 14 minutes.
--   
--   <a>$sel:environmentVariables:CanaryRunConfigInput'</a>,
--   <a>canaryRunConfigInput_environmentVariables</a> - Specifies the keys
--   and values to use for any environment variables used in the canary
--   script. Use the following format:
--   
--   { "key1" : "value1", "key2" : "value2", ...}
--   
--   Keys must start with a letter and be at least two characters. The
--   total size of your environment variables cannot exceed 4 KB. You can't
--   specify any Lambda reserved environment variables as the keys for your
--   environment variables. For more information about reserved keys, see
--   <a>Runtime environment variables</a>.
--   
--   <a>$sel:activeTracing:CanaryRunConfigInput'</a>,
--   <a>canaryRunConfigInput_activeTracing</a> - Specifies whether this
--   canary is to use active X-Ray tracing when it runs. Active tracing
--   enables this canary run to be displayed in the ServiceLens and X-Ray
--   service maps even if the canary does not hit an endpoint that has
--   X-Ray tracing enabled. Using X-Ray tracing incurs charges. For more
--   information, see <a>Canaries and X-Ray tracing</a>.
--   
--   You can enable active tracing only for canaries that use version
--   <tt>syn-nodejs-2.0</tt> or later for their canary runtime.
--   
--   <a>$sel:memoryInMB:CanaryRunConfigInput'</a>,
--   <a>canaryRunConfigInput_memoryInMB</a> - The maximum amount of memory
--   available to the canary while it is running, in MB. This value must be
--   a multiple of 64.
newCanaryRunConfigInput :: CanaryRunConfigInput

-- | How long the canary is allowed to run before it must stop. You can't
--   set this time to be longer than the frequency of the runs of this
--   canary.
--   
--   If you omit this field, the frequency of the canary is used as this
--   value, up to a maximum of 14 minutes.
canaryRunConfigInput_timeoutInSeconds :: Lens' CanaryRunConfigInput (Maybe Natural)

-- | Specifies the keys and values to use for any environment variables
--   used in the canary script. Use the following format:
--   
--   { "key1" : "value1", "key2" : "value2", ...}
--   
--   Keys must start with a letter and be at least two characters. The
--   total size of your environment variables cannot exceed 4 KB. You can't
--   specify any Lambda reserved environment variables as the keys for your
--   environment variables. For more information about reserved keys, see
--   <a>Runtime environment variables</a>.
canaryRunConfigInput_environmentVariables :: Lens' CanaryRunConfigInput (Maybe (HashMap Text Text))

-- | Specifies whether this canary is to use active X-Ray tracing when it
--   runs. Active tracing enables this canary run to be displayed in the
--   ServiceLens and X-Ray service maps even if the canary does not hit an
--   endpoint that has X-Ray tracing enabled. Using X-Ray tracing incurs
--   charges. For more information, see <a>Canaries and X-Ray tracing</a>.
--   
--   You can enable active tracing only for canaries that use version
--   <tt>syn-nodejs-2.0</tt> or later for their canary runtime.
canaryRunConfigInput_activeTracing :: Lens' CanaryRunConfigInput (Maybe Bool)

-- | The maximum amount of memory available to the canary while it is
--   running, in MB. This value must be a multiple of 64.
canaryRunConfigInput_memoryInMB :: Lens' CanaryRunConfigInput (Maybe Natural)
instance GHC.Generics.Generic Network.AWS.Synthetics.Types.CanaryRunConfigInput.CanaryRunConfigInput
instance GHC.Show.Show Network.AWS.Synthetics.Types.CanaryRunConfigInput.CanaryRunConfigInput
instance GHC.Read.Read Network.AWS.Synthetics.Types.CanaryRunConfigInput.CanaryRunConfigInput
instance GHC.Classes.Eq Network.AWS.Synthetics.Types.CanaryRunConfigInput.CanaryRunConfigInput
instance Data.Hashable.Class.Hashable Network.AWS.Synthetics.Types.CanaryRunConfigInput.CanaryRunConfigInput
instance Control.DeepSeq.NFData Network.AWS.Synthetics.Types.CanaryRunConfigInput.CanaryRunConfigInput
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Synthetics.Types.CanaryRunConfigInput.CanaryRunConfigInput


module Network.AWS.Synthetics.Types.CanaryRunConfigOutput

-- | A structure that contains information about a canary run.
--   
--   <i>See:</i> <a>newCanaryRunConfigOutput</a> smart constructor.
data CanaryRunConfigOutput
CanaryRunConfigOutput' :: Maybe Natural -> Maybe Bool -> Maybe Natural -> CanaryRunConfigOutput

-- | How long the canary is allowed to run before it must stop.
[$sel:timeoutInSeconds:CanaryRunConfigOutput'] :: CanaryRunConfigOutput -> Maybe Natural

-- | Displays whether this canary run used active X-Ray tracing.
[$sel:activeTracing:CanaryRunConfigOutput'] :: CanaryRunConfigOutput -> Maybe Bool

-- | The maximum amount of memory available to the canary while it is
--   running, in MB. This value must be a multiple of 64.
[$sel:memoryInMB:CanaryRunConfigOutput'] :: CanaryRunConfigOutput -> Maybe Natural

-- | Create a value of <a>CanaryRunConfigOutput</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:timeoutInSeconds:CanaryRunConfigOutput'</a>,
--   <a>canaryRunConfigOutput_timeoutInSeconds</a> - How long the canary is
--   allowed to run before it must stop.
--   
--   <a>$sel:activeTracing:CanaryRunConfigOutput'</a>,
--   <a>canaryRunConfigOutput_activeTracing</a> - Displays whether this
--   canary run used active X-Ray tracing.
--   
--   <a>$sel:memoryInMB:CanaryRunConfigOutput'</a>,
--   <a>canaryRunConfigOutput_memoryInMB</a> - The maximum amount of memory
--   available to the canary while it is running, in MB. This value must be
--   a multiple of 64.
newCanaryRunConfigOutput :: CanaryRunConfigOutput

-- | How long the canary is allowed to run before it must stop.
canaryRunConfigOutput_timeoutInSeconds :: Lens' CanaryRunConfigOutput (Maybe Natural)

-- | Displays whether this canary run used active X-Ray tracing.
canaryRunConfigOutput_activeTracing :: Lens' CanaryRunConfigOutput (Maybe Bool)

-- | The maximum amount of memory available to the canary while it is
--   running, in MB. This value must be a multiple of 64.
canaryRunConfigOutput_memoryInMB :: Lens' CanaryRunConfigOutput (Maybe Natural)
instance GHC.Generics.Generic Network.AWS.Synthetics.Types.CanaryRunConfigOutput.CanaryRunConfigOutput
instance GHC.Show.Show Network.AWS.Synthetics.Types.CanaryRunConfigOutput.CanaryRunConfigOutput
instance GHC.Read.Read Network.AWS.Synthetics.Types.CanaryRunConfigOutput.CanaryRunConfigOutput
instance GHC.Classes.Eq Network.AWS.Synthetics.Types.CanaryRunConfigOutput.CanaryRunConfigOutput
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Synthetics.Types.CanaryRunConfigOutput.CanaryRunConfigOutput
instance Data.Hashable.Class.Hashable Network.AWS.Synthetics.Types.CanaryRunConfigOutput.CanaryRunConfigOutput
instance Control.DeepSeq.NFData Network.AWS.Synthetics.Types.CanaryRunConfigOutput.CanaryRunConfigOutput


module Network.AWS.Synthetics.Types.CanaryRunState
newtype CanaryRunState
CanaryRunState' :: Text -> CanaryRunState
[fromCanaryRunState] :: CanaryRunState -> Text
pattern CanaryRunState_FAILED :: CanaryRunState
pattern CanaryRunState_PASSED :: CanaryRunState
pattern CanaryRunState_RUNNING :: CanaryRunState
instance Network.AWS.Data.XML.ToXML Network.AWS.Synthetics.Types.CanaryRunState.CanaryRunState
instance Network.AWS.Data.XML.FromXML Network.AWS.Synthetics.Types.CanaryRunState.CanaryRunState
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Synthetics.Types.CanaryRunState.CanaryRunState
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Synthetics.Types.CanaryRunState.CanaryRunState
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Synthetics.Types.CanaryRunState.CanaryRunState
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Synthetics.Types.CanaryRunState.CanaryRunState
instance Network.AWS.Data.Query.ToQuery Network.AWS.Synthetics.Types.CanaryRunState.CanaryRunState
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Synthetics.Types.CanaryRunState.CanaryRunState
instance Network.AWS.Data.Log.ToLog Network.AWS.Synthetics.Types.CanaryRunState.CanaryRunState
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Synthetics.Types.CanaryRunState.CanaryRunState
instance Network.AWS.Data.Text.ToText Network.AWS.Synthetics.Types.CanaryRunState.CanaryRunState
instance Network.AWS.Data.Text.FromText Network.AWS.Synthetics.Types.CanaryRunState.CanaryRunState
instance Control.DeepSeq.NFData Network.AWS.Synthetics.Types.CanaryRunState.CanaryRunState
instance Data.Hashable.Class.Hashable Network.AWS.Synthetics.Types.CanaryRunState.CanaryRunState
instance GHC.Generics.Generic Network.AWS.Synthetics.Types.CanaryRunState.CanaryRunState
instance GHC.Classes.Ord Network.AWS.Synthetics.Types.CanaryRunState.CanaryRunState
instance GHC.Classes.Eq Network.AWS.Synthetics.Types.CanaryRunState.CanaryRunState
instance GHC.Read.Read Network.AWS.Synthetics.Types.CanaryRunState.CanaryRunState
instance GHC.Show.Show Network.AWS.Synthetics.Types.CanaryRunState.CanaryRunState


module Network.AWS.Synthetics.Types.CanaryRunStateReasonCode
newtype CanaryRunStateReasonCode
CanaryRunStateReasonCode' :: Text -> CanaryRunStateReasonCode
[fromCanaryRunStateReasonCode] :: CanaryRunStateReasonCode -> Text
pattern CanaryRunStateReasonCode_CANARY_FAILURE :: CanaryRunStateReasonCode
pattern CanaryRunStateReasonCode_EXECUTION_FAILURE :: CanaryRunStateReasonCode
instance Network.AWS.Data.XML.ToXML Network.AWS.Synthetics.Types.CanaryRunStateReasonCode.CanaryRunStateReasonCode
instance Network.AWS.Data.XML.FromXML Network.AWS.Synthetics.Types.CanaryRunStateReasonCode.CanaryRunStateReasonCode
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Synthetics.Types.CanaryRunStateReasonCode.CanaryRunStateReasonCode
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Synthetics.Types.CanaryRunStateReasonCode.CanaryRunStateReasonCode
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Synthetics.Types.CanaryRunStateReasonCode.CanaryRunStateReasonCode
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Synthetics.Types.CanaryRunStateReasonCode.CanaryRunStateReasonCode
instance Network.AWS.Data.Query.ToQuery Network.AWS.Synthetics.Types.CanaryRunStateReasonCode.CanaryRunStateReasonCode
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Synthetics.Types.CanaryRunStateReasonCode.CanaryRunStateReasonCode
instance Network.AWS.Data.Log.ToLog Network.AWS.Synthetics.Types.CanaryRunStateReasonCode.CanaryRunStateReasonCode
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Synthetics.Types.CanaryRunStateReasonCode.CanaryRunStateReasonCode
instance Network.AWS.Data.Text.ToText Network.AWS.Synthetics.Types.CanaryRunStateReasonCode.CanaryRunStateReasonCode
instance Network.AWS.Data.Text.FromText Network.AWS.Synthetics.Types.CanaryRunStateReasonCode.CanaryRunStateReasonCode
instance Control.DeepSeq.NFData Network.AWS.Synthetics.Types.CanaryRunStateReasonCode.CanaryRunStateReasonCode
instance Data.Hashable.Class.Hashable Network.AWS.Synthetics.Types.CanaryRunStateReasonCode.CanaryRunStateReasonCode
instance GHC.Generics.Generic Network.AWS.Synthetics.Types.CanaryRunStateReasonCode.CanaryRunStateReasonCode
instance GHC.Classes.Ord Network.AWS.Synthetics.Types.CanaryRunStateReasonCode.CanaryRunStateReasonCode
instance GHC.Classes.Eq Network.AWS.Synthetics.Types.CanaryRunStateReasonCode.CanaryRunStateReasonCode
instance GHC.Read.Read Network.AWS.Synthetics.Types.CanaryRunStateReasonCode.CanaryRunStateReasonCode
instance GHC.Show.Show Network.AWS.Synthetics.Types.CanaryRunStateReasonCode.CanaryRunStateReasonCode


module Network.AWS.Synthetics.Types.CanaryRunStatus

-- | This structure contains the status information about a canary run.
--   
--   <i>See:</i> <a>newCanaryRunStatus</a> smart constructor.
data CanaryRunStatus
CanaryRunStatus' :: Maybe CanaryRunState -> Maybe Text -> Maybe CanaryRunStateReasonCode -> CanaryRunStatus

-- | The current state of the run.
[$sel:state:CanaryRunStatus'] :: CanaryRunStatus -> Maybe CanaryRunState

-- | If run of the canary failed, this field contains the reason for the
--   error.
[$sel:stateReason:CanaryRunStatus'] :: CanaryRunStatus -> Maybe Text

-- | If this value is <tt>CANARY_FAILURE</tt>, an exception occurred in the
--   canary code. If this value is <tt>EXECUTION_FAILURE</tt>, an exception
--   occurred in CloudWatch Synthetics.
[$sel:stateReasonCode:CanaryRunStatus'] :: CanaryRunStatus -> Maybe CanaryRunStateReasonCode

-- | Create a value of <a>CanaryRunStatus</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:state:CanaryRunStatus'</a>, <a>canaryRunStatus_state</a> - The
--   current state of the run.
--   
--   <a>$sel:stateReason:CanaryRunStatus'</a>,
--   <a>canaryRunStatus_stateReason</a> - If run of the canary failed, this
--   field contains the reason for the error.
--   
--   <a>$sel:stateReasonCode:CanaryRunStatus'</a>,
--   <a>canaryRunStatus_stateReasonCode</a> - If this value is
--   <tt>CANARY_FAILURE</tt>, an exception occurred in the canary code. If
--   this value is <tt>EXECUTION_FAILURE</tt>, an exception occurred in
--   CloudWatch Synthetics.
newCanaryRunStatus :: CanaryRunStatus

-- | The current state of the run.
canaryRunStatus_state :: Lens' CanaryRunStatus (Maybe CanaryRunState)

-- | If run of the canary failed, this field contains the reason for the
--   error.
canaryRunStatus_stateReason :: Lens' CanaryRunStatus (Maybe Text)

-- | If this value is <tt>CANARY_FAILURE</tt>, an exception occurred in the
--   canary code. If this value is <tt>EXECUTION_FAILURE</tt>, an exception
--   occurred in CloudWatch Synthetics.
canaryRunStatus_stateReasonCode :: Lens' CanaryRunStatus (Maybe CanaryRunStateReasonCode)
instance GHC.Generics.Generic Network.AWS.Synthetics.Types.CanaryRunStatus.CanaryRunStatus
instance GHC.Show.Show Network.AWS.Synthetics.Types.CanaryRunStatus.CanaryRunStatus
instance GHC.Read.Read Network.AWS.Synthetics.Types.CanaryRunStatus.CanaryRunStatus
instance GHC.Classes.Eq Network.AWS.Synthetics.Types.CanaryRunStatus.CanaryRunStatus
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Synthetics.Types.CanaryRunStatus.CanaryRunStatus
instance Data.Hashable.Class.Hashable Network.AWS.Synthetics.Types.CanaryRunStatus.CanaryRunStatus
instance Control.DeepSeq.NFData Network.AWS.Synthetics.Types.CanaryRunStatus.CanaryRunStatus


module Network.AWS.Synthetics.Types.CanaryRunTimeline

-- | This structure contains the start and end times of a single canary
--   run.
--   
--   <i>See:</i> <a>newCanaryRunTimeline</a> smart constructor.
data CanaryRunTimeline
CanaryRunTimeline' :: Maybe POSIX -> Maybe POSIX -> CanaryRunTimeline

-- | The end time of the run.
[$sel:completed:CanaryRunTimeline'] :: CanaryRunTimeline -> Maybe POSIX

-- | The start time of the run.
[$sel:started:CanaryRunTimeline'] :: CanaryRunTimeline -> Maybe POSIX

-- | Create a value of <a>CanaryRunTimeline</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:completed:CanaryRunTimeline'</a>,
--   <a>canaryRunTimeline_completed</a> - The end time of the run.
--   
--   <a>$sel:started:CanaryRunTimeline'</a>,
--   <a>canaryRunTimeline_started</a> - The start time of the run.
newCanaryRunTimeline :: CanaryRunTimeline

-- | The end time of the run.
canaryRunTimeline_completed :: Lens' CanaryRunTimeline (Maybe UTCTime)

-- | The start time of the run.
canaryRunTimeline_started :: Lens' CanaryRunTimeline (Maybe UTCTime)
instance GHC.Generics.Generic Network.AWS.Synthetics.Types.CanaryRunTimeline.CanaryRunTimeline
instance GHC.Show.Show Network.AWS.Synthetics.Types.CanaryRunTimeline.CanaryRunTimeline
instance GHC.Read.Read Network.AWS.Synthetics.Types.CanaryRunTimeline.CanaryRunTimeline
instance GHC.Classes.Eq Network.AWS.Synthetics.Types.CanaryRunTimeline.CanaryRunTimeline
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Synthetics.Types.CanaryRunTimeline.CanaryRunTimeline
instance Data.Hashable.Class.Hashable Network.AWS.Synthetics.Types.CanaryRunTimeline.CanaryRunTimeline
instance Control.DeepSeq.NFData Network.AWS.Synthetics.Types.CanaryRunTimeline.CanaryRunTimeline


module Network.AWS.Synthetics.Types.CanaryRun

-- | This structure contains the details about one run of one canary.
--   
--   <i>See:</i> <a>newCanaryRun</a> smart constructor.
data CanaryRun
CanaryRun' :: Maybe CanaryRunStatus -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe CanaryRunTimeline -> CanaryRun

-- | The status of this run.
[$sel:status:CanaryRun'] :: CanaryRun -> Maybe CanaryRunStatus

-- | The location where the canary stored artifacts from the run. Artifacts
--   include the log file, screenshots, and HAR files.
[$sel:artifactS3Location:CanaryRun'] :: CanaryRun -> Maybe Text

-- | The name of the canary.
[$sel:name:CanaryRun'] :: CanaryRun -> Maybe Text

-- | A unique ID that identifies this canary run.
[$sel:id:CanaryRun'] :: CanaryRun -> Maybe Text

-- | A structure that contains the start and end times of this run.
[$sel:timeline:CanaryRun'] :: CanaryRun -> Maybe CanaryRunTimeline

-- | Create a value of <a>CanaryRun</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:CanaryRun'</a>, <a>canaryRun_status</a> - The status of
--   this run.
--   
--   <a>$sel:artifactS3Location:CanaryRun'</a>,
--   <a>canaryRun_artifactS3Location</a> - The location where the canary
--   stored artifacts from the run. Artifacts include the log file,
--   screenshots, and HAR files.
--   
--   <a>$sel:name:CanaryRun'</a>, <a>canaryRun_name</a> - The name of the
--   canary.
--   
--   <a>$sel:id:CanaryRun'</a>, <a>canaryRun_id</a> - A unique ID that
--   identifies this canary run.
--   
--   <a>$sel:timeline:CanaryRun'</a>, <a>canaryRun_timeline</a> - A
--   structure that contains the start and end times of this run.
newCanaryRun :: CanaryRun

-- | The status of this run.
canaryRun_status :: Lens' CanaryRun (Maybe CanaryRunStatus)

-- | The location where the canary stored artifacts from the run. Artifacts
--   include the log file, screenshots, and HAR files.
canaryRun_artifactS3Location :: Lens' CanaryRun (Maybe Text)

-- | The name of the canary.
canaryRun_name :: Lens' CanaryRun (Maybe Text)

-- | A unique ID that identifies this canary run.
canaryRun_id :: Lens' CanaryRun (Maybe Text)

-- | A structure that contains the start and end times of this run.
canaryRun_timeline :: Lens' CanaryRun (Maybe CanaryRunTimeline)
instance GHC.Generics.Generic Network.AWS.Synthetics.Types.CanaryRun.CanaryRun
instance GHC.Show.Show Network.AWS.Synthetics.Types.CanaryRun.CanaryRun
instance GHC.Read.Read Network.AWS.Synthetics.Types.CanaryRun.CanaryRun
instance GHC.Classes.Eq Network.AWS.Synthetics.Types.CanaryRun.CanaryRun
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Synthetics.Types.CanaryRun.CanaryRun
instance Data.Hashable.Class.Hashable Network.AWS.Synthetics.Types.CanaryRun.CanaryRun
instance Control.DeepSeq.NFData Network.AWS.Synthetics.Types.CanaryRun.CanaryRun


module Network.AWS.Synthetics.Types.CanaryLastRun

-- | This structure contains information about the most recent run of a
--   single canary.
--   
--   <i>See:</i> <a>newCanaryLastRun</a> smart constructor.
data CanaryLastRun
CanaryLastRun' :: Maybe Text -> Maybe CanaryRun -> CanaryLastRun

-- | The name of the canary.
[$sel:canaryName:CanaryLastRun'] :: CanaryLastRun -> Maybe Text

-- | The results from this canary's most recent run.
[$sel:lastRun:CanaryLastRun'] :: CanaryLastRun -> Maybe CanaryRun

-- | Create a value of <a>CanaryLastRun</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:canaryName:CanaryLastRun'</a>, <a>canaryLastRun_canaryName</a>
--   - The name of the canary.
--   
--   <a>$sel:lastRun:CanaryLastRun'</a>, <a>canaryLastRun_lastRun</a> - The
--   results from this canary's most recent run.
newCanaryLastRun :: CanaryLastRun

-- | The name of the canary.
canaryLastRun_canaryName :: Lens' CanaryLastRun (Maybe Text)

-- | The results from this canary's most recent run.
canaryLastRun_lastRun :: Lens' CanaryLastRun (Maybe CanaryRun)
instance GHC.Generics.Generic Network.AWS.Synthetics.Types.CanaryLastRun.CanaryLastRun
instance GHC.Show.Show Network.AWS.Synthetics.Types.CanaryLastRun.CanaryLastRun
instance GHC.Read.Read Network.AWS.Synthetics.Types.CanaryLastRun.CanaryLastRun
instance GHC.Classes.Eq Network.AWS.Synthetics.Types.CanaryLastRun.CanaryLastRun
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Synthetics.Types.CanaryLastRun.CanaryLastRun
instance Data.Hashable.Class.Hashable Network.AWS.Synthetics.Types.CanaryLastRun.CanaryLastRun
instance Control.DeepSeq.NFData Network.AWS.Synthetics.Types.CanaryLastRun.CanaryLastRun


module Network.AWS.Synthetics.Types.CanaryScheduleInput

-- | This structure specifies how often a canary is to make runs and the
--   date and time when it should stop making runs.
--   
--   <i>See:</i> <a>newCanaryScheduleInput</a> smart constructor.
data CanaryScheduleInput
CanaryScheduleInput' :: Maybe Natural -> Text -> CanaryScheduleInput

-- | How long, in seconds, for the canary to continue making regular runs
--   according to the schedule in the <tt>Expression</tt> value. If you
--   specify 0, the canary continues making runs until you stop it. If you
--   omit this field, the default of 0 is used.
[$sel:durationInSeconds:CanaryScheduleInput'] :: CanaryScheduleInput -> Maybe Natural

-- | A <tt>rate</tt> expression or a <tt>cron</tt> expression that defines
--   how often the canary is to run.
--   
--   For a rate expression, The syntax is <tt>rate(number unit)</tt>.
--   <i>unit</i> can be <tt>minute</tt>, <tt>minutes</tt>, or
--   <tt>hour</tt>.
--   
--   For example, <tt>rate(1 minute)</tt> runs the canary once a minute,
--   <tt>rate(10 minutes)</tt> runs it once every 10 minutes, and
--   <tt>rate(1 hour)</tt> runs it once every hour. You can specify a
--   frequency between <tt>rate(1 minute)</tt> and <tt>rate(1 hour)</tt>.
--   
--   Specifying <tt>rate(0 minute)</tt> or <tt>rate(0 hour)</tt> is a
--   special value that causes the canary to run only once when it is
--   started.
--   
--   Use <tt>cron(expression)</tt> to specify a cron expression. You can't
--   schedule a canary to wait for more than a year before running. For
--   information about the syntax for cron expressions, see <a>Scheduling
--   canary runs using cron</a>.
[$sel:expression:CanaryScheduleInput'] :: CanaryScheduleInput -> Text

-- | Create a value of <a>CanaryScheduleInput</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:durationInSeconds:CanaryScheduleInput'</a>,
--   <a>canaryScheduleInput_durationInSeconds</a> - How long, in seconds,
--   for the canary to continue making regular runs according to the
--   schedule in the <tt>Expression</tt> value. If you specify 0, the
--   canary continues making runs until you stop it. If you omit this
--   field, the default of 0 is used.
--   
--   <a>$sel:expression:CanaryScheduleInput'</a>,
--   <a>canaryScheduleInput_expression</a> - A <tt>rate</tt> expression or
--   a <tt>cron</tt> expression that defines how often the canary is to
--   run.
--   
--   For a rate expression, The syntax is <tt>rate(number unit)</tt>.
--   <i>unit</i> can be <tt>minute</tt>, <tt>minutes</tt>, or
--   <tt>hour</tt>.
--   
--   For example, <tt>rate(1 minute)</tt> runs the canary once a minute,
--   <tt>rate(10 minutes)</tt> runs it once every 10 minutes, and
--   <tt>rate(1 hour)</tt> runs it once every hour. You can specify a
--   frequency between <tt>rate(1 minute)</tt> and <tt>rate(1 hour)</tt>.
--   
--   Specifying <tt>rate(0 minute)</tt> or <tt>rate(0 hour)</tt> is a
--   special value that causes the canary to run only once when it is
--   started.
--   
--   Use <tt>cron(expression)</tt> to specify a cron expression. You can't
--   schedule a canary to wait for more than a year before running. For
--   information about the syntax for cron expressions, see <a>Scheduling
--   canary runs using cron</a>.
newCanaryScheduleInput :: Text -> CanaryScheduleInput

-- | How long, in seconds, for the canary to continue making regular runs
--   according to the schedule in the <tt>Expression</tt> value. If you
--   specify 0, the canary continues making runs until you stop it. If you
--   omit this field, the default of 0 is used.
canaryScheduleInput_durationInSeconds :: Lens' CanaryScheduleInput (Maybe Natural)

-- | A <tt>rate</tt> expression or a <tt>cron</tt> expression that defines
--   how often the canary is to run.
--   
--   For a rate expression, The syntax is <tt>rate(number unit)</tt>.
--   <i>unit</i> can be <tt>minute</tt>, <tt>minutes</tt>, or
--   <tt>hour</tt>.
--   
--   For example, <tt>rate(1 minute)</tt> runs the canary once a minute,
--   <tt>rate(10 minutes)</tt> runs it once every 10 minutes, and
--   <tt>rate(1 hour)</tt> runs it once every hour. You can specify a
--   frequency between <tt>rate(1 minute)</tt> and <tt>rate(1 hour)</tt>.
--   
--   Specifying <tt>rate(0 minute)</tt> or <tt>rate(0 hour)</tt> is a
--   special value that causes the canary to run only once when it is
--   started.
--   
--   Use <tt>cron(expression)</tt> to specify a cron expression. You can't
--   schedule a canary to wait for more than a year before running. For
--   information about the syntax for cron expressions, see <a>Scheduling
--   canary runs using cron</a>.
canaryScheduleInput_expression :: Lens' CanaryScheduleInput Text
instance GHC.Generics.Generic Network.AWS.Synthetics.Types.CanaryScheduleInput.CanaryScheduleInput
instance GHC.Show.Show Network.AWS.Synthetics.Types.CanaryScheduleInput.CanaryScheduleInput
instance GHC.Read.Read Network.AWS.Synthetics.Types.CanaryScheduleInput.CanaryScheduleInput
instance GHC.Classes.Eq Network.AWS.Synthetics.Types.CanaryScheduleInput.CanaryScheduleInput
instance Data.Hashable.Class.Hashable Network.AWS.Synthetics.Types.CanaryScheduleInput.CanaryScheduleInput
instance Control.DeepSeq.NFData Network.AWS.Synthetics.Types.CanaryScheduleInput.CanaryScheduleInput
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Synthetics.Types.CanaryScheduleInput.CanaryScheduleInput


module Network.AWS.Synthetics.Types.CanaryScheduleOutput

-- | How long, in seconds, for the canary to continue making regular runs
--   according to the schedule in the <tt>Expression</tt> value.
--   
--   <i>See:</i> <a>newCanaryScheduleOutput</a> smart constructor.
data CanaryScheduleOutput
CanaryScheduleOutput' :: Maybe Natural -> Maybe Text -> CanaryScheduleOutput

-- | How long, in seconds, for the canary to continue making regular runs
--   after it was created. The runs are performed according to the schedule
--   in the <tt>Expression</tt> value.
[$sel:durationInSeconds:CanaryScheduleOutput'] :: CanaryScheduleOutput -> Maybe Natural

-- | A <tt>rate</tt> expression or a <tt>cron</tt> expression that defines
--   how often the canary is to run.
--   
--   For a rate expression, The syntax is <tt>rate(number unit)</tt>.
--   <i>unit</i> can be <tt>minute</tt>, <tt>minutes</tt>, or
--   <tt>hour</tt>.
--   
--   For example, <tt>rate(1 minute)</tt> runs the canary once a minute,
--   <tt>rate(10 minutes)</tt> runs it once every 10 minutes, and
--   <tt>rate(1 hour)</tt> runs it once every hour. You can specify a
--   frequency between <tt>rate(1 minute)</tt> and <tt>rate(1 hour)</tt>.
--   
--   Specifying <tt>rate(0 minute)</tt> or <tt>rate(0 hour)</tt> is a
--   special value that causes the canary to run only once when it is
--   started.
--   
--   Use <tt>cron(expression)</tt> to specify a cron expression. For
--   information about the syntax for cron expressions, see <a>Scheduling
--   canary runs using cron</a>.
[$sel:expression:CanaryScheduleOutput'] :: CanaryScheduleOutput -> Maybe Text

-- | Create a value of <a>CanaryScheduleOutput</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:durationInSeconds:CanaryScheduleOutput'</a>,
--   <a>canaryScheduleOutput_durationInSeconds</a> - How long, in seconds,
--   for the canary to continue making regular runs after it was created.
--   The runs are performed according to the schedule in the
--   <tt>Expression</tt> value.
--   
--   <a>$sel:expression:CanaryScheduleOutput'</a>,
--   <a>canaryScheduleOutput_expression</a> - A <tt>rate</tt> expression or
--   a <tt>cron</tt> expression that defines how often the canary is to
--   run.
--   
--   For a rate expression, The syntax is <tt>rate(number unit)</tt>.
--   <i>unit</i> can be <tt>minute</tt>, <tt>minutes</tt>, or
--   <tt>hour</tt>.
--   
--   For example, <tt>rate(1 minute)</tt> runs the canary once a minute,
--   <tt>rate(10 minutes)</tt> runs it once every 10 minutes, and
--   <tt>rate(1 hour)</tt> runs it once every hour. You can specify a
--   frequency between <tt>rate(1 minute)</tt> and <tt>rate(1 hour)</tt>.
--   
--   Specifying <tt>rate(0 minute)</tt> or <tt>rate(0 hour)</tt> is a
--   special value that causes the canary to run only once when it is
--   started.
--   
--   Use <tt>cron(expression)</tt> to specify a cron expression. For
--   information about the syntax for cron expressions, see <a>Scheduling
--   canary runs using cron</a>.
newCanaryScheduleOutput :: CanaryScheduleOutput

-- | How long, in seconds, for the canary to continue making regular runs
--   after it was created. The runs are performed according to the schedule
--   in the <tt>Expression</tt> value.
canaryScheduleOutput_durationInSeconds :: Lens' CanaryScheduleOutput (Maybe Natural)

-- | A <tt>rate</tt> expression or a <tt>cron</tt> expression that defines
--   how often the canary is to run.
--   
--   For a rate expression, The syntax is <tt>rate(number unit)</tt>.
--   <i>unit</i> can be <tt>minute</tt>, <tt>minutes</tt>, or
--   <tt>hour</tt>.
--   
--   For example, <tt>rate(1 minute)</tt> runs the canary once a minute,
--   <tt>rate(10 minutes)</tt> runs it once every 10 minutes, and
--   <tt>rate(1 hour)</tt> runs it once every hour. You can specify a
--   frequency between <tt>rate(1 minute)</tt> and <tt>rate(1 hour)</tt>.
--   
--   Specifying <tt>rate(0 minute)</tt> or <tt>rate(0 hour)</tt> is a
--   special value that causes the canary to run only once when it is
--   started.
--   
--   Use <tt>cron(expression)</tt> to specify a cron expression. For
--   information about the syntax for cron expressions, see <a>Scheduling
--   canary runs using cron</a>.
canaryScheduleOutput_expression :: Lens' CanaryScheduleOutput (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Synthetics.Types.CanaryScheduleOutput.CanaryScheduleOutput
instance GHC.Show.Show Network.AWS.Synthetics.Types.CanaryScheduleOutput.CanaryScheduleOutput
instance GHC.Read.Read Network.AWS.Synthetics.Types.CanaryScheduleOutput.CanaryScheduleOutput
instance GHC.Classes.Eq Network.AWS.Synthetics.Types.CanaryScheduleOutput.CanaryScheduleOutput
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Synthetics.Types.CanaryScheduleOutput.CanaryScheduleOutput
instance Data.Hashable.Class.Hashable Network.AWS.Synthetics.Types.CanaryScheduleOutput.CanaryScheduleOutput
instance Control.DeepSeq.NFData Network.AWS.Synthetics.Types.CanaryScheduleOutput.CanaryScheduleOutput


module Network.AWS.Synthetics.Types.CanaryState
newtype CanaryState
CanaryState' :: Text -> CanaryState
[fromCanaryState] :: CanaryState -> Text
pattern CanaryState_CREATING :: CanaryState
pattern CanaryState_DELETING :: CanaryState
pattern CanaryState_ERROR :: CanaryState
pattern CanaryState_READY :: CanaryState
pattern CanaryState_RUNNING :: CanaryState
pattern CanaryState_STARTING :: CanaryState
pattern CanaryState_STOPPED :: CanaryState
pattern CanaryState_STOPPING :: CanaryState
pattern CanaryState_UPDATING :: CanaryState
instance Network.AWS.Data.XML.ToXML Network.AWS.Synthetics.Types.CanaryState.CanaryState
instance Network.AWS.Data.XML.FromXML Network.AWS.Synthetics.Types.CanaryState.CanaryState
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Synthetics.Types.CanaryState.CanaryState
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Synthetics.Types.CanaryState.CanaryState
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Synthetics.Types.CanaryState.CanaryState
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Synthetics.Types.CanaryState.CanaryState
instance Network.AWS.Data.Query.ToQuery Network.AWS.Synthetics.Types.CanaryState.CanaryState
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Synthetics.Types.CanaryState.CanaryState
instance Network.AWS.Data.Log.ToLog Network.AWS.Synthetics.Types.CanaryState.CanaryState
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Synthetics.Types.CanaryState.CanaryState
instance Network.AWS.Data.Text.ToText Network.AWS.Synthetics.Types.CanaryState.CanaryState
instance Network.AWS.Data.Text.FromText Network.AWS.Synthetics.Types.CanaryState.CanaryState
instance Control.DeepSeq.NFData Network.AWS.Synthetics.Types.CanaryState.CanaryState
instance Data.Hashable.Class.Hashable Network.AWS.Synthetics.Types.CanaryState.CanaryState
instance GHC.Generics.Generic Network.AWS.Synthetics.Types.CanaryState.CanaryState
instance GHC.Classes.Ord Network.AWS.Synthetics.Types.CanaryState.CanaryState
instance GHC.Classes.Eq Network.AWS.Synthetics.Types.CanaryState.CanaryState
instance GHC.Read.Read Network.AWS.Synthetics.Types.CanaryState.CanaryState
instance GHC.Show.Show Network.AWS.Synthetics.Types.CanaryState.CanaryState


module Network.AWS.Synthetics.Types.CanaryStateReasonCode
newtype CanaryStateReasonCode
CanaryStateReasonCode' :: Text -> CanaryStateReasonCode
[fromCanaryStateReasonCode] :: CanaryStateReasonCode -> Text
pattern CanaryStateReasonCode_INVALID_PERMISSIONS :: CanaryStateReasonCode
instance Network.AWS.Data.XML.ToXML Network.AWS.Synthetics.Types.CanaryStateReasonCode.CanaryStateReasonCode
instance Network.AWS.Data.XML.FromXML Network.AWS.Synthetics.Types.CanaryStateReasonCode.CanaryStateReasonCode
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Synthetics.Types.CanaryStateReasonCode.CanaryStateReasonCode
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Synthetics.Types.CanaryStateReasonCode.CanaryStateReasonCode
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Synthetics.Types.CanaryStateReasonCode.CanaryStateReasonCode
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Synthetics.Types.CanaryStateReasonCode.CanaryStateReasonCode
instance Network.AWS.Data.Query.ToQuery Network.AWS.Synthetics.Types.CanaryStateReasonCode.CanaryStateReasonCode
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Synthetics.Types.CanaryStateReasonCode.CanaryStateReasonCode
instance Network.AWS.Data.Log.ToLog Network.AWS.Synthetics.Types.CanaryStateReasonCode.CanaryStateReasonCode
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Synthetics.Types.CanaryStateReasonCode.CanaryStateReasonCode
instance Network.AWS.Data.Text.ToText Network.AWS.Synthetics.Types.CanaryStateReasonCode.CanaryStateReasonCode
instance Network.AWS.Data.Text.FromText Network.AWS.Synthetics.Types.CanaryStateReasonCode.CanaryStateReasonCode
instance Control.DeepSeq.NFData Network.AWS.Synthetics.Types.CanaryStateReasonCode.CanaryStateReasonCode
instance Data.Hashable.Class.Hashable Network.AWS.Synthetics.Types.CanaryStateReasonCode.CanaryStateReasonCode
instance GHC.Generics.Generic Network.AWS.Synthetics.Types.CanaryStateReasonCode.CanaryStateReasonCode
instance GHC.Classes.Ord Network.AWS.Synthetics.Types.CanaryStateReasonCode.CanaryStateReasonCode
instance GHC.Classes.Eq Network.AWS.Synthetics.Types.CanaryStateReasonCode.CanaryStateReasonCode
instance GHC.Read.Read Network.AWS.Synthetics.Types.CanaryStateReasonCode.CanaryStateReasonCode
instance GHC.Show.Show Network.AWS.Synthetics.Types.CanaryStateReasonCode.CanaryStateReasonCode


module Network.AWS.Synthetics.Types.CanaryStatus

-- | A structure that contains the current state of the canary.
--   
--   <i>See:</i> <a>newCanaryStatus</a> smart constructor.
data CanaryStatus
CanaryStatus' :: Maybe CanaryState -> Maybe Text -> Maybe CanaryStateReasonCode -> CanaryStatus

-- | The current state of the canary.
[$sel:state:CanaryStatus'] :: CanaryStatus -> Maybe CanaryState

-- | If the canary has insufficient permissions to run, this field provides
--   more details.
[$sel:stateReason:CanaryStatus'] :: CanaryStatus -> Maybe Text

-- | If the canary cannot run or has failed, this field displays the
--   reason.
[$sel:stateReasonCode:CanaryStatus'] :: CanaryStatus -> Maybe CanaryStateReasonCode

-- | Create a value of <a>CanaryStatus</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:state:CanaryStatus'</a>, <a>canaryStatus_state</a> - The
--   current state of the canary.
--   
--   <a>$sel:stateReason:CanaryStatus'</a>, <a>canaryStatus_stateReason</a>
--   - If the canary has insufficient permissions to run, this field
--   provides more details.
--   
--   <a>$sel:stateReasonCode:CanaryStatus'</a>,
--   <a>canaryStatus_stateReasonCode</a> - If the canary cannot run or has
--   failed, this field displays the reason.
newCanaryStatus :: CanaryStatus

-- | The current state of the canary.
canaryStatus_state :: Lens' CanaryStatus (Maybe CanaryState)

-- | If the canary has insufficient permissions to run, this field provides
--   more details.
canaryStatus_stateReason :: Lens' CanaryStatus (Maybe Text)

-- | If the canary cannot run or has failed, this field displays the
--   reason.
canaryStatus_stateReasonCode :: Lens' CanaryStatus (Maybe CanaryStateReasonCode)
instance GHC.Generics.Generic Network.AWS.Synthetics.Types.CanaryStatus.CanaryStatus
instance GHC.Show.Show Network.AWS.Synthetics.Types.CanaryStatus.CanaryStatus
instance GHC.Read.Read Network.AWS.Synthetics.Types.CanaryStatus.CanaryStatus
instance GHC.Classes.Eq Network.AWS.Synthetics.Types.CanaryStatus.CanaryStatus
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Synthetics.Types.CanaryStatus.CanaryStatus
instance Data.Hashable.Class.Hashable Network.AWS.Synthetics.Types.CanaryStatus.CanaryStatus
instance Control.DeepSeq.NFData Network.AWS.Synthetics.Types.CanaryStatus.CanaryStatus


module Network.AWS.Synthetics.Types.CanaryTimeline

-- | This structure contains information about when the canary was created
--   and modified.
--   
--   <i>See:</i> <a>newCanaryTimeline</a> smart constructor.
data CanaryTimeline
CanaryTimeline' :: Maybe POSIX -> Maybe POSIX -> Maybe POSIX -> Maybe POSIX -> CanaryTimeline

-- | The date and time the canary was created.
[$sel:created:CanaryTimeline'] :: CanaryTimeline -> Maybe POSIX

-- | The date and time that the canary's most recent run started.
[$sel:lastStarted:CanaryTimeline'] :: CanaryTimeline -> Maybe POSIX

-- | The date and time that the canary's most recent run ended.
[$sel:lastStopped:CanaryTimeline'] :: CanaryTimeline -> Maybe POSIX

-- | The date and time the canary was most recently modified.
[$sel:lastModified:CanaryTimeline'] :: CanaryTimeline -> Maybe POSIX

-- | Create a value of <a>CanaryTimeline</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:created:CanaryTimeline'</a>, <a>canaryTimeline_created</a> -
--   The date and time the canary was created.
--   
--   <a>$sel:lastStarted:CanaryTimeline'</a>,
--   <a>canaryTimeline_lastStarted</a> - The date and time that the
--   canary's most recent run started.
--   
--   <a>$sel:lastStopped:CanaryTimeline'</a>,
--   <a>canaryTimeline_lastStopped</a> - The date and time that the
--   canary's most recent run ended.
--   
--   <a>$sel:lastModified:CanaryTimeline'</a>,
--   <a>canaryTimeline_lastModified</a> - The date and time the canary was
--   most recently modified.
newCanaryTimeline :: CanaryTimeline

-- | The date and time the canary was created.
canaryTimeline_created :: Lens' CanaryTimeline (Maybe UTCTime)

-- | The date and time that the canary's most recent run started.
canaryTimeline_lastStarted :: Lens' CanaryTimeline (Maybe UTCTime)

-- | The date and time that the canary's most recent run ended.
canaryTimeline_lastStopped :: Lens' CanaryTimeline (Maybe UTCTime)

-- | The date and time the canary was most recently modified.
canaryTimeline_lastModified :: Lens' CanaryTimeline (Maybe UTCTime)
instance GHC.Generics.Generic Network.AWS.Synthetics.Types.CanaryTimeline.CanaryTimeline
instance GHC.Show.Show Network.AWS.Synthetics.Types.CanaryTimeline.CanaryTimeline
instance GHC.Read.Read Network.AWS.Synthetics.Types.CanaryTimeline.CanaryTimeline
instance GHC.Classes.Eq Network.AWS.Synthetics.Types.CanaryTimeline.CanaryTimeline
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Synthetics.Types.CanaryTimeline.CanaryTimeline
instance Data.Hashable.Class.Hashable Network.AWS.Synthetics.Types.CanaryTimeline.CanaryTimeline
instance Control.DeepSeq.NFData Network.AWS.Synthetics.Types.CanaryTimeline.CanaryTimeline


module Network.AWS.Synthetics.Types.EncryptionMode
newtype EncryptionMode
EncryptionMode' :: Text -> EncryptionMode
[fromEncryptionMode] :: EncryptionMode -> Text
pattern EncryptionMode_SSE_KMS :: EncryptionMode
pattern EncryptionMode_SSE_S3 :: EncryptionMode
instance Network.AWS.Data.XML.ToXML Network.AWS.Synthetics.Types.EncryptionMode.EncryptionMode
instance Network.AWS.Data.XML.FromXML Network.AWS.Synthetics.Types.EncryptionMode.EncryptionMode
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Synthetics.Types.EncryptionMode.EncryptionMode
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Synthetics.Types.EncryptionMode.EncryptionMode
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Synthetics.Types.EncryptionMode.EncryptionMode
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Synthetics.Types.EncryptionMode.EncryptionMode
instance Network.AWS.Data.Query.ToQuery Network.AWS.Synthetics.Types.EncryptionMode.EncryptionMode
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Synthetics.Types.EncryptionMode.EncryptionMode
instance Network.AWS.Data.Log.ToLog Network.AWS.Synthetics.Types.EncryptionMode.EncryptionMode
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Synthetics.Types.EncryptionMode.EncryptionMode
instance Network.AWS.Data.Text.ToText Network.AWS.Synthetics.Types.EncryptionMode.EncryptionMode
instance Network.AWS.Data.Text.FromText Network.AWS.Synthetics.Types.EncryptionMode.EncryptionMode
instance Control.DeepSeq.NFData Network.AWS.Synthetics.Types.EncryptionMode.EncryptionMode
instance Data.Hashable.Class.Hashable Network.AWS.Synthetics.Types.EncryptionMode.EncryptionMode
instance GHC.Generics.Generic Network.AWS.Synthetics.Types.EncryptionMode.EncryptionMode
instance GHC.Classes.Ord Network.AWS.Synthetics.Types.EncryptionMode.EncryptionMode
instance GHC.Classes.Eq Network.AWS.Synthetics.Types.EncryptionMode.EncryptionMode
instance GHC.Read.Read Network.AWS.Synthetics.Types.EncryptionMode.EncryptionMode
instance GHC.Show.Show Network.AWS.Synthetics.Types.EncryptionMode.EncryptionMode


module Network.AWS.Synthetics.Types.RuntimeVersion

-- | This structure contains information about one canary runtime version.
--   For more information about runtime versions, see <a>Canary Runtime
--   Versions</a>.
--   
--   <i>See:</i> <a>newRuntimeVersion</a> smart constructor.
data RuntimeVersion
RuntimeVersion' :: Maybe Text -> Maybe POSIX -> Maybe POSIX -> Maybe Text -> RuntimeVersion

-- | The name of the runtime version. For a list of valid runtime versions,
--   see <a>Canary Runtime Versions</a>.
[$sel:versionName:RuntimeVersion'] :: RuntimeVersion -> Maybe Text

-- | If this runtime version is deprecated, this value is the date of
--   deprecation.
[$sel:deprecationDate:RuntimeVersion'] :: RuntimeVersion -> Maybe POSIX

-- | The date that the runtime version was released.
[$sel:releaseDate:RuntimeVersion'] :: RuntimeVersion -> Maybe POSIX

-- | A description of the runtime version, created by Amazon.
[$sel:description:RuntimeVersion'] :: RuntimeVersion -> Maybe Text

-- | Create a value of <a>RuntimeVersion</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:versionName:RuntimeVersion'</a>,
--   <a>runtimeVersion_versionName</a> - The name of the runtime version.
--   For a list of valid runtime versions, see <a>Canary Runtime
--   Versions</a>.
--   
--   <a>$sel:deprecationDate:RuntimeVersion'</a>,
--   <a>runtimeVersion_deprecationDate</a> - If this runtime version is
--   deprecated, this value is the date of deprecation.
--   
--   <a>$sel:releaseDate:RuntimeVersion'</a>,
--   <a>runtimeVersion_releaseDate</a> - The date that the runtime version
--   was released.
--   
--   <a>$sel:description:RuntimeVersion'</a>,
--   <a>runtimeVersion_description</a> - A description of the runtime
--   version, created by Amazon.
newRuntimeVersion :: RuntimeVersion

-- | The name of the runtime version. For a list of valid runtime versions,
--   see <a>Canary Runtime Versions</a>.
runtimeVersion_versionName :: Lens' RuntimeVersion (Maybe Text)

-- | If this runtime version is deprecated, this value is the date of
--   deprecation.
runtimeVersion_deprecationDate :: Lens' RuntimeVersion (Maybe UTCTime)

-- | The date that the runtime version was released.
runtimeVersion_releaseDate :: Lens' RuntimeVersion (Maybe UTCTime)

-- | A description of the runtime version, created by Amazon.
runtimeVersion_description :: Lens' RuntimeVersion (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Synthetics.Types.RuntimeVersion.RuntimeVersion
instance GHC.Show.Show Network.AWS.Synthetics.Types.RuntimeVersion.RuntimeVersion
instance GHC.Read.Read Network.AWS.Synthetics.Types.RuntimeVersion.RuntimeVersion
instance GHC.Classes.Eq Network.AWS.Synthetics.Types.RuntimeVersion.RuntimeVersion
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Synthetics.Types.RuntimeVersion.RuntimeVersion
instance Data.Hashable.Class.Hashable Network.AWS.Synthetics.Types.RuntimeVersion.RuntimeVersion
instance Control.DeepSeq.NFData Network.AWS.Synthetics.Types.RuntimeVersion.RuntimeVersion


module Network.AWS.Synthetics.Types.S3EncryptionConfig

-- | A structure that contains the configuration of encryption-at-rest
--   settings for canary artifacts that the canary uploads to Amazon S3.
--   
--   For more information, see <a>Encrypting canary artifacts</a>
--   
--   <i>See:</i> <a>newS3EncryptionConfig</a> smart constructor.
data S3EncryptionConfig
S3EncryptionConfig' :: Maybe Text -> Maybe EncryptionMode -> S3EncryptionConfig

-- | The ARN of the customer-managed KMS key to use, if you specify
--   <tt>SSE-KMS</tt> for <tt>EncryptionMode</tt>
[$sel:kmsKeyArn:S3EncryptionConfig'] :: S3EncryptionConfig -> Maybe Text

-- | The encryption method to use for artifacts created by this canary.
--   Specify <tt>SSE_S3</tt> to use server-side encryption (SSE) with an
--   Amazon S3-managed key. Specify <tt>SSE-KMS</tt> to use server-side
--   encryption with a customer-managed KMS key.
--   
--   If you omit this parameter, an Amazon Web Services-managed KMS key is
--   used.
[$sel:encryptionMode:S3EncryptionConfig'] :: S3EncryptionConfig -> Maybe EncryptionMode

-- | Create a value of <a>S3EncryptionConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:kmsKeyArn:S3EncryptionConfig'</a>,
--   <a>s3EncryptionConfig_kmsKeyArn</a> - The ARN of the customer-managed
--   KMS key to use, if you specify <tt>SSE-KMS</tt> for
--   <tt>EncryptionMode</tt>
--   
--   <a>$sel:encryptionMode:S3EncryptionConfig'</a>,
--   <a>s3EncryptionConfig_encryptionMode</a> - The encryption method to
--   use for artifacts created by this canary. Specify <tt>SSE_S3</tt> to
--   use server-side encryption (SSE) with an Amazon S3-managed key.
--   Specify <tt>SSE-KMS</tt> to use server-side encryption with a
--   customer-managed KMS key.
--   
--   If you omit this parameter, an Amazon Web Services-managed KMS key is
--   used.
newS3EncryptionConfig :: S3EncryptionConfig

-- | The ARN of the customer-managed KMS key to use, if you specify
--   <tt>SSE-KMS</tt> for <tt>EncryptionMode</tt>
s3EncryptionConfig_kmsKeyArn :: Lens' S3EncryptionConfig (Maybe Text)

-- | The encryption method to use for artifacts created by this canary.
--   Specify <tt>SSE_S3</tt> to use server-side encryption (SSE) with an
--   Amazon S3-managed key. Specify <tt>SSE-KMS</tt> to use server-side
--   encryption with a customer-managed KMS key.
--   
--   If you omit this parameter, an Amazon Web Services-managed KMS key is
--   used.
s3EncryptionConfig_encryptionMode :: Lens' S3EncryptionConfig (Maybe EncryptionMode)
instance GHC.Generics.Generic Network.AWS.Synthetics.Types.S3EncryptionConfig.S3EncryptionConfig
instance GHC.Show.Show Network.AWS.Synthetics.Types.S3EncryptionConfig.S3EncryptionConfig
instance GHC.Read.Read Network.AWS.Synthetics.Types.S3EncryptionConfig.S3EncryptionConfig
instance GHC.Classes.Eq Network.AWS.Synthetics.Types.S3EncryptionConfig.S3EncryptionConfig
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Synthetics.Types.S3EncryptionConfig.S3EncryptionConfig
instance Data.Hashable.Class.Hashable Network.AWS.Synthetics.Types.S3EncryptionConfig.S3EncryptionConfig
instance Control.DeepSeq.NFData Network.AWS.Synthetics.Types.S3EncryptionConfig.S3EncryptionConfig
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Synthetics.Types.S3EncryptionConfig.S3EncryptionConfig


module Network.AWS.Synthetics.Types.ArtifactConfigOutput

-- | A structure that contains the configuration for canary artifacts,
--   including the encryption-at-rest settings for artifacts that the
--   canary uploads to Amazon S3.
--   
--   <i>See:</i> <a>newArtifactConfigOutput</a> smart constructor.
data ArtifactConfigOutput
ArtifactConfigOutput' :: Maybe S3EncryptionConfig -> ArtifactConfigOutput

-- | A structure that contains the configuration of encryption settings for
--   canary artifacts that are stored in Amazon S3.
[$sel:s3Encryption:ArtifactConfigOutput'] :: ArtifactConfigOutput -> Maybe S3EncryptionConfig

-- | Create a value of <a>ArtifactConfigOutput</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:s3Encryption:ArtifactConfigOutput'</a>,
--   <a>artifactConfigOutput_s3Encryption</a> - A structure that contains
--   the configuration of encryption settings for canary artifacts that are
--   stored in Amazon S3.
newArtifactConfigOutput :: ArtifactConfigOutput

-- | A structure that contains the configuration of encryption settings for
--   canary artifacts that are stored in Amazon S3.
artifactConfigOutput_s3Encryption :: Lens' ArtifactConfigOutput (Maybe S3EncryptionConfig)
instance GHC.Generics.Generic Network.AWS.Synthetics.Types.ArtifactConfigOutput.ArtifactConfigOutput
instance GHC.Show.Show Network.AWS.Synthetics.Types.ArtifactConfigOutput.ArtifactConfigOutput
instance GHC.Read.Read Network.AWS.Synthetics.Types.ArtifactConfigOutput.ArtifactConfigOutput
instance GHC.Classes.Eq Network.AWS.Synthetics.Types.ArtifactConfigOutput.ArtifactConfigOutput
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Synthetics.Types.ArtifactConfigOutput.ArtifactConfigOutput
instance Data.Hashable.Class.Hashable Network.AWS.Synthetics.Types.ArtifactConfigOutput.ArtifactConfigOutput
instance Control.DeepSeq.NFData Network.AWS.Synthetics.Types.ArtifactConfigOutput.ArtifactConfigOutput


module Network.AWS.Synthetics.Types.ArtifactConfigInput

-- | A structure that contains the configuration for canary artifacts,
--   including the encryption-at-rest settings for artifacts that the
--   canary uploads to Amazon S3.
--   
--   <i>See:</i> <a>newArtifactConfigInput</a> smart constructor.
data ArtifactConfigInput
ArtifactConfigInput' :: Maybe S3EncryptionConfig -> ArtifactConfigInput

-- | A structure that contains the configuration of the encryption-at-rest
--   settings for artifacts that the canary uploads to Amazon S3. Artifact
--   encryption functionality is available only for canaries that use
--   Synthetics runtime version syn-nodejs-puppeteer-3.3 or later. For more
--   information, see <a>Encrypting canary artifacts</a>
[$sel:s3Encryption:ArtifactConfigInput'] :: ArtifactConfigInput -> Maybe S3EncryptionConfig

-- | Create a value of <a>ArtifactConfigInput</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:s3Encryption:ArtifactConfigInput'</a>,
--   <a>artifactConfigInput_s3Encryption</a> - A structure that contains
--   the configuration of the encryption-at-rest settings for artifacts
--   that the canary uploads to Amazon S3. Artifact encryption
--   functionality is available only for canaries that use Synthetics
--   runtime version syn-nodejs-puppeteer-3.3 or later. For more
--   information, see <a>Encrypting canary artifacts</a>
newArtifactConfigInput :: ArtifactConfigInput

-- | A structure that contains the configuration of the encryption-at-rest
--   settings for artifacts that the canary uploads to Amazon S3. Artifact
--   encryption functionality is available only for canaries that use
--   Synthetics runtime version syn-nodejs-puppeteer-3.3 or later. For more
--   information, see <a>Encrypting canary artifacts</a>
artifactConfigInput_s3Encryption :: Lens' ArtifactConfigInput (Maybe S3EncryptionConfig)
instance GHC.Generics.Generic Network.AWS.Synthetics.Types.ArtifactConfigInput.ArtifactConfigInput
instance GHC.Show.Show Network.AWS.Synthetics.Types.ArtifactConfigInput.ArtifactConfigInput
instance GHC.Read.Read Network.AWS.Synthetics.Types.ArtifactConfigInput.ArtifactConfigInput
instance GHC.Classes.Eq Network.AWS.Synthetics.Types.ArtifactConfigInput.ArtifactConfigInput
instance Data.Hashable.Class.Hashable Network.AWS.Synthetics.Types.ArtifactConfigInput.ArtifactConfigInput
instance Control.DeepSeq.NFData Network.AWS.Synthetics.Types.ArtifactConfigInput.ArtifactConfigInput
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Synthetics.Types.ArtifactConfigInput.ArtifactConfigInput


module Network.AWS.Synthetics.Types.VisualReferenceInput

-- | An object that specifies what screenshots to use as a baseline for
--   visual monitoring by this canary, and optionally the parts of the
--   screenshots to ignore during the visual monitoring comparison.
--   
--   Visual monitoring is supported only on canaries running the
--   <b>syn-puppeteer-node-3.2</b> runtime or later. For more information,
--   see <a>Visual monitoring</a> and <a>Visual monitoring blueprint</a>
--   
--   <i>See:</i> <a>newVisualReferenceInput</a> smart constructor.
data VisualReferenceInput
VisualReferenceInput' :: Maybe [BaseScreenshot] -> Text -> VisualReferenceInput

-- | An array of screenshots that will be used as the baseline for visual
--   monitoring in future runs of this canary. If there is a screenshot
--   that you don't want to be used for visual monitoring, remove it from
--   this array.
[$sel:baseScreenshots:VisualReferenceInput'] :: VisualReferenceInput -> Maybe [BaseScreenshot]

-- | Specifies which canary run to use the screenshots from as the baseline
--   for future visual monitoring with this canary. Valid values are
--   <tt>nextrun</tt> to use the screenshots from the next run after this
--   update is made, <tt>lastrun</tt> to use the screenshots from the most
--   recent run before this update was made, or the value of <tt>Id</tt> in
--   the <a>CanaryRun</a> from any past run of this canary.
[$sel:baseCanaryRunId:VisualReferenceInput'] :: VisualReferenceInput -> Text

-- | Create a value of <a>VisualReferenceInput</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:baseScreenshots:VisualReferenceInput'</a>,
--   <a>visualReferenceInput_baseScreenshots</a> - An array of screenshots
--   that will be used as the baseline for visual monitoring in future runs
--   of this canary. If there is a screenshot that you don't want to be
--   used for visual monitoring, remove it from this array.
--   
--   <a>$sel:baseCanaryRunId:VisualReferenceInput'</a>,
--   <a>visualReferenceInput_baseCanaryRunId</a> - Specifies which canary
--   run to use the screenshots from as the baseline for future visual
--   monitoring with this canary. Valid values are <tt>nextrun</tt> to use
--   the screenshots from the next run after this update is made,
--   <tt>lastrun</tt> to use the screenshots from the most recent run
--   before this update was made, or the value of <tt>Id</tt> in the
--   <a>CanaryRun</a> from any past run of this canary.
newVisualReferenceInput :: Text -> VisualReferenceInput

-- | An array of screenshots that will be used as the baseline for visual
--   monitoring in future runs of this canary. If there is a screenshot
--   that you don't want to be used for visual monitoring, remove it from
--   this array.
visualReferenceInput_baseScreenshots :: Lens' VisualReferenceInput (Maybe [BaseScreenshot])

-- | Specifies which canary run to use the screenshots from as the baseline
--   for future visual monitoring with this canary. Valid values are
--   <tt>nextrun</tt> to use the screenshots from the next run after this
--   update is made, <tt>lastrun</tt> to use the screenshots from the most
--   recent run before this update was made, or the value of <tt>Id</tt> in
--   the <a>CanaryRun</a> from any past run of this canary.
visualReferenceInput_baseCanaryRunId :: Lens' VisualReferenceInput Text
instance GHC.Generics.Generic Network.AWS.Synthetics.Types.VisualReferenceInput.VisualReferenceInput
instance GHC.Show.Show Network.AWS.Synthetics.Types.VisualReferenceInput.VisualReferenceInput
instance GHC.Read.Read Network.AWS.Synthetics.Types.VisualReferenceInput.VisualReferenceInput
instance GHC.Classes.Eq Network.AWS.Synthetics.Types.VisualReferenceInput.VisualReferenceInput
instance Data.Hashable.Class.Hashable Network.AWS.Synthetics.Types.VisualReferenceInput.VisualReferenceInput
instance Control.DeepSeq.NFData Network.AWS.Synthetics.Types.VisualReferenceInput.VisualReferenceInput
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Synthetics.Types.VisualReferenceInput.VisualReferenceInput


module Network.AWS.Synthetics.Types.VisualReferenceOutput

-- | If this canary performs visual monitoring by comparing screenshots,
--   this structure contains the ID of the canary run that is used as the
--   baseline for screenshots, and the coordinates of any parts of those
--   screenshots that are ignored during visual monitoring comparison.
--   
--   Visual monitoring is supported only on canaries running the
--   <b>syn-puppeteer-node-3.2</b> runtime or later.
--   
--   <i>See:</i> <a>newVisualReferenceOutput</a> smart constructor.
data VisualReferenceOutput
VisualReferenceOutput' :: Maybe [BaseScreenshot] -> Maybe Text -> VisualReferenceOutput

-- | An array of screenshots that are used as the baseline for comparisons
--   during visual monitoring.
[$sel:baseScreenshots:VisualReferenceOutput'] :: VisualReferenceOutput -> Maybe [BaseScreenshot]

-- | The ID of the canary run that produced the screenshots that are used
--   as the baseline for visual monitoring comparisons during future runs
--   of this canary.
[$sel:baseCanaryRunId:VisualReferenceOutput'] :: VisualReferenceOutput -> Maybe Text

-- | Create a value of <a>VisualReferenceOutput</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:baseScreenshots:VisualReferenceOutput'</a>,
--   <a>visualReferenceOutput_baseScreenshots</a> - An array of screenshots
--   that are used as the baseline for comparisons during visual
--   monitoring.
--   
--   <a>$sel:baseCanaryRunId:VisualReferenceOutput'</a>,
--   <a>visualReferenceOutput_baseCanaryRunId</a> - The ID of the canary
--   run that produced the screenshots that are used as the baseline for
--   visual monitoring comparisons during future runs of this canary.
newVisualReferenceOutput :: VisualReferenceOutput

-- | An array of screenshots that are used as the baseline for comparisons
--   during visual monitoring.
visualReferenceOutput_baseScreenshots :: Lens' VisualReferenceOutput (Maybe [BaseScreenshot])

-- | The ID of the canary run that produced the screenshots that are used
--   as the baseline for visual monitoring comparisons during future runs
--   of this canary.
visualReferenceOutput_baseCanaryRunId :: Lens' VisualReferenceOutput (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Synthetics.Types.VisualReferenceOutput.VisualReferenceOutput
instance GHC.Show.Show Network.AWS.Synthetics.Types.VisualReferenceOutput.VisualReferenceOutput
instance GHC.Read.Read Network.AWS.Synthetics.Types.VisualReferenceOutput.VisualReferenceOutput
instance GHC.Classes.Eq Network.AWS.Synthetics.Types.VisualReferenceOutput.VisualReferenceOutput
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Synthetics.Types.VisualReferenceOutput.VisualReferenceOutput
instance Data.Hashable.Class.Hashable Network.AWS.Synthetics.Types.VisualReferenceOutput.VisualReferenceOutput
instance Control.DeepSeq.NFData Network.AWS.Synthetics.Types.VisualReferenceOutput.VisualReferenceOutput


module Network.AWS.Synthetics.Types.VpcConfigInput

-- | If this canary is to test an endpoint in a VPC, this structure
--   contains information about the subnets and security groups of the VPC
--   endpoint. For more information, see <a>Running a Canary in a VPC</a>.
--   
--   <i>See:</i> <a>newVpcConfigInput</a> smart constructor.
data VpcConfigInput
VpcConfigInput' :: Maybe [Text] -> Maybe [Text] -> VpcConfigInput

-- | The IDs of the security groups for this canary.
[$sel:securityGroupIds:VpcConfigInput'] :: VpcConfigInput -> Maybe [Text]

-- | The IDs of the subnets where this canary is to run.
[$sel:subnetIds:VpcConfigInput'] :: VpcConfigInput -> Maybe [Text]

-- | Create a value of <a>VpcConfigInput</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:securityGroupIds:VpcConfigInput'</a>,
--   <a>vpcConfigInput_securityGroupIds</a> - The IDs of the security
--   groups for this canary.
--   
--   <a>$sel:subnetIds:VpcConfigInput'</a>, <a>vpcConfigInput_subnetIds</a>
--   - The IDs of the subnets where this canary is to run.
newVpcConfigInput :: VpcConfigInput

-- | The IDs of the security groups for this canary.
vpcConfigInput_securityGroupIds :: Lens' VpcConfigInput (Maybe [Text])

-- | The IDs of the subnets where this canary is to run.
vpcConfigInput_subnetIds :: Lens' VpcConfigInput (Maybe [Text])
instance GHC.Generics.Generic Network.AWS.Synthetics.Types.VpcConfigInput.VpcConfigInput
instance GHC.Show.Show Network.AWS.Synthetics.Types.VpcConfigInput.VpcConfigInput
instance GHC.Read.Read Network.AWS.Synthetics.Types.VpcConfigInput.VpcConfigInput
instance GHC.Classes.Eq Network.AWS.Synthetics.Types.VpcConfigInput.VpcConfigInput
instance Data.Hashable.Class.Hashable Network.AWS.Synthetics.Types.VpcConfigInput.VpcConfigInput
instance Control.DeepSeq.NFData Network.AWS.Synthetics.Types.VpcConfigInput.VpcConfigInput
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Synthetics.Types.VpcConfigInput.VpcConfigInput


module Network.AWS.Synthetics.Types.VpcConfigOutput

-- | If this canary is to test an endpoint in a VPC, this structure
--   contains information about the subnets and security groups of the VPC
--   endpoint. For more information, see <a>Running a Canary in a VPC</a>.
--   
--   <i>See:</i> <a>newVpcConfigOutput</a> smart constructor.
data VpcConfigOutput
VpcConfigOutput' :: Maybe [Text] -> Maybe [Text] -> Maybe Text -> VpcConfigOutput

-- | The IDs of the security groups for this canary.
[$sel:securityGroupIds:VpcConfigOutput'] :: VpcConfigOutput -> Maybe [Text]

-- | The IDs of the subnets where this canary is to run.
[$sel:subnetIds:VpcConfigOutput'] :: VpcConfigOutput -> Maybe [Text]

-- | The IDs of the VPC where this canary is to run.
[$sel:vpcId:VpcConfigOutput'] :: VpcConfigOutput -> Maybe Text

-- | Create a value of <a>VpcConfigOutput</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:securityGroupIds:VpcConfigOutput'</a>,
--   <a>vpcConfigOutput_securityGroupIds</a> - The IDs of the security
--   groups for this canary.
--   
--   <a>$sel:subnetIds:VpcConfigOutput'</a>,
--   <a>vpcConfigOutput_subnetIds</a> - The IDs of the subnets where this
--   canary is to run.
--   
--   <a>$sel:vpcId:VpcConfigOutput'</a>, <a>vpcConfigOutput_vpcId</a> - The
--   IDs of the VPC where this canary is to run.
newVpcConfigOutput :: VpcConfigOutput

-- | The IDs of the security groups for this canary.
vpcConfigOutput_securityGroupIds :: Lens' VpcConfigOutput (Maybe [Text])

-- | The IDs of the subnets where this canary is to run.
vpcConfigOutput_subnetIds :: Lens' VpcConfigOutput (Maybe [Text])

-- | The IDs of the VPC where this canary is to run.
vpcConfigOutput_vpcId :: Lens' VpcConfigOutput (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Synthetics.Types.VpcConfigOutput.VpcConfigOutput
instance GHC.Show.Show Network.AWS.Synthetics.Types.VpcConfigOutput.VpcConfigOutput
instance GHC.Read.Read Network.AWS.Synthetics.Types.VpcConfigOutput.VpcConfigOutput
instance GHC.Classes.Eq Network.AWS.Synthetics.Types.VpcConfigOutput.VpcConfigOutput
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Synthetics.Types.VpcConfigOutput.VpcConfigOutput
instance Data.Hashable.Class.Hashable Network.AWS.Synthetics.Types.VpcConfigOutput.VpcConfigOutput
instance Control.DeepSeq.NFData Network.AWS.Synthetics.Types.VpcConfigOutput.VpcConfigOutput


module Network.AWS.Synthetics.Types.Canary

-- | This structure contains all information about one canary in your
--   account.
--   
--   <i>See:</i> <a>newCanary</a> smart constructor.
data Canary
Canary' :: Maybe CanaryStatus -> Maybe Natural -> Maybe CanaryScheduleOutput -> Maybe Text -> Maybe CanaryRunConfigOutput -> Maybe Text -> Maybe Text -> Maybe Natural -> Maybe ArtifactConfigOutput -> Maybe VpcConfigOutput -> Maybe VisualReferenceOutput -> Maybe Text -> Maybe Text -> Maybe CanaryCodeOutput -> Maybe CanaryTimeline -> Maybe Text -> Maybe (HashMap Text Text) -> Canary

-- | A structure that contains information about the canary's status.
[$sel:status:Canary'] :: Canary -> Maybe CanaryStatus

-- | The number of days to retain data about successful runs of this
--   canary.
[$sel:successRetentionPeriodInDays:Canary'] :: Canary -> Maybe Natural

-- | A structure that contains information about how often the canary is to
--   run, and when these runs are to stop.
[$sel:schedule:Canary'] :: Canary -> Maybe CanaryScheduleOutput

-- | The location in Amazon S3 where Synthetics stores artifacts from the
--   runs of this canary. Artifacts include the log file, screenshots, and
--   HAR files.
[$sel:artifactS3Location:Canary'] :: Canary -> Maybe Text
[$sel:runConfig:Canary'] :: Canary -> Maybe CanaryRunConfigOutput

-- | The ARN of the IAM role used to run the canary. This role must include
--   <tt>lambda.amazonaws.com</tt> as a principal in the trust policy.
[$sel:executionRoleArn:Canary'] :: Canary -> Maybe Text

-- | Specifies the runtime version to use for the canary. For more
--   information about runtime versions, see <a>Canary Runtime
--   Versions</a>.
[$sel:runtimeVersion:Canary'] :: Canary -> Maybe Text

-- | The number of days to retain data about failed runs of this canary.
[$sel:failureRetentionPeriodInDays:Canary'] :: Canary -> Maybe Natural

-- | A structure that contains the configuration for canary artifacts,
--   including the encryption-at-rest settings for artifacts that the
--   canary uploads to Amazon S3.
[$sel:artifactConfig:Canary'] :: Canary -> Maybe ArtifactConfigOutput
[$sel:vpcConfig:Canary'] :: Canary -> Maybe VpcConfigOutput

-- | If this canary performs visual monitoring by comparing screenshots,
--   this structure contains the ID of the canary run to use as the
--   baseline for screenshots, and the coordinates of any parts of the
--   screen to ignore during the visual monitoring comparison.
[$sel:visualReference:Canary'] :: Canary -> Maybe VisualReferenceOutput

-- | The name of the canary.
[$sel:name:Canary'] :: Canary -> Maybe Text

-- | The unique ID of this canary.
[$sel:id:Canary'] :: Canary -> Maybe Text
[$sel:code:Canary'] :: Canary -> Maybe CanaryCodeOutput

-- | A structure that contains information about when the canary was
--   created, modified, and most recently run.
[$sel:timeline:Canary'] :: Canary -> Maybe CanaryTimeline

-- | The ARN of the Lambda function that is used as your canary's engine.
--   For more information about Lambda ARN format, see <a>Resources and
--   Conditions for Lambda Actions</a>.
[$sel:engineArn:Canary'] :: Canary -> Maybe Text

-- | The list of key-value pairs that are associated with the canary.
[$sel:tags:Canary'] :: Canary -> Maybe (HashMap Text Text)

-- | Create a value of <a>Canary</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:Canary'</a>, <a>canary_status</a> - A structure that
--   contains information about the canary's status.
--   
--   <a>$sel:successRetentionPeriodInDays:Canary'</a>,
--   <a>canary_successRetentionPeriodInDays</a> - The number of days to
--   retain data about successful runs of this canary.
--   
--   <a>$sel:schedule:Canary'</a>, <a>canary_schedule</a> - A structure
--   that contains information about how often the canary is to run, and
--   when these runs are to stop.
--   
--   <a>$sel:artifactS3Location:Canary'</a>,
--   <a>canary_artifactS3Location</a> - The location in Amazon S3 where
--   Synthetics stores artifacts from the runs of this canary. Artifacts
--   include the log file, screenshots, and HAR files.
--   
--   <a>$sel:runConfig:Canary'</a>, <a>canary_runConfig</a> - Undocumented
--   member.
--   
--   <a>$sel:executionRoleArn:Canary'</a>, <a>canary_executionRoleArn</a> -
--   The ARN of the IAM role used to run the canary. This role must include
--   <tt>lambda.amazonaws.com</tt> as a principal in the trust policy.
--   
--   <a>$sel:runtimeVersion:Canary'</a>, <a>canary_runtimeVersion</a> -
--   Specifies the runtime version to use for the canary. For more
--   information about runtime versions, see <a>Canary Runtime
--   Versions</a>.
--   
--   <a>$sel:failureRetentionPeriodInDays:Canary'</a>,
--   <a>canary_failureRetentionPeriodInDays</a> - The number of days to
--   retain data about failed runs of this canary.
--   
--   <a>$sel:artifactConfig:Canary'</a>, <a>canary_artifactConfig</a> - A
--   structure that contains the configuration for canary artifacts,
--   including the encryption-at-rest settings for artifacts that the
--   canary uploads to Amazon S3.
--   
--   <a>$sel:vpcConfig:Canary'</a>, <a>canary_vpcConfig</a> - Undocumented
--   member.
--   
--   <a>$sel:visualReference:Canary'</a>, <a>canary_visualReference</a> -
--   If this canary performs visual monitoring by comparing screenshots,
--   this structure contains the ID of the canary run to use as the
--   baseline for screenshots, and the coordinates of any parts of the
--   screen to ignore during the visual monitoring comparison.
--   
--   <a>$sel:name:Canary'</a>, <a>canary_name</a> - The name of the canary.
--   
--   <a>$sel:id:Canary'</a>, <a>canary_id</a> - The unique ID of this
--   canary.
--   
--   <a>$sel:code:Canary'</a>, <a>canary_code</a> - Undocumented member.
--   
--   <a>$sel:timeline:Canary'</a>, <a>canary_timeline</a> - A structure
--   that contains information about when the canary was created, modified,
--   and most recently run.
--   
--   <a>$sel:engineArn:Canary'</a>, <a>canary_engineArn</a> - The ARN of
--   the Lambda function that is used as your canary's engine. For more
--   information about Lambda ARN format, see <a>Resources and Conditions
--   for Lambda Actions</a>.
--   
--   <a>$sel:tags:Canary'</a>, <a>canary_tags</a> - The list of key-value
--   pairs that are associated with the canary.
newCanary :: Canary

-- | A structure that contains information about the canary's status.
canary_status :: Lens' Canary (Maybe CanaryStatus)

-- | The number of days to retain data about successful runs of this
--   canary.
canary_successRetentionPeriodInDays :: Lens' Canary (Maybe Natural)

-- | A structure that contains information about how often the canary is to
--   run, and when these runs are to stop.
canary_schedule :: Lens' Canary (Maybe CanaryScheduleOutput)

-- | The location in Amazon S3 where Synthetics stores artifacts from the
--   runs of this canary. Artifacts include the log file, screenshots, and
--   HAR files.
canary_artifactS3Location :: Lens' Canary (Maybe Text)

-- | Undocumented member.
canary_runConfig :: Lens' Canary (Maybe CanaryRunConfigOutput)

-- | The ARN of the IAM role used to run the canary. This role must include
--   <tt>lambda.amazonaws.com</tt> as a principal in the trust policy.
canary_executionRoleArn :: Lens' Canary (Maybe Text)

-- | Specifies the runtime version to use for the canary. For more
--   information about runtime versions, see <a>Canary Runtime
--   Versions</a>.
canary_runtimeVersion :: Lens' Canary (Maybe Text)

-- | The number of days to retain data about failed runs of this canary.
canary_failureRetentionPeriodInDays :: Lens' Canary (Maybe Natural)

-- | A structure that contains the configuration for canary artifacts,
--   including the encryption-at-rest settings for artifacts that the
--   canary uploads to Amazon S3.
canary_artifactConfig :: Lens' Canary (Maybe ArtifactConfigOutput)

-- | Undocumented member.
canary_vpcConfig :: Lens' Canary (Maybe VpcConfigOutput)

-- | If this canary performs visual monitoring by comparing screenshots,
--   this structure contains the ID of the canary run to use as the
--   baseline for screenshots, and the coordinates of any parts of the
--   screen to ignore during the visual monitoring comparison.
canary_visualReference :: Lens' Canary (Maybe VisualReferenceOutput)

-- | The name of the canary.
canary_name :: Lens' Canary (Maybe Text)

-- | The unique ID of this canary.
canary_id :: Lens' Canary (Maybe Text)

-- | Undocumented member.
canary_code :: Lens' Canary (Maybe CanaryCodeOutput)

-- | A structure that contains information about when the canary was
--   created, modified, and most recently run.
canary_timeline :: Lens' Canary (Maybe CanaryTimeline)

-- | The ARN of the Lambda function that is used as your canary's engine.
--   For more information about Lambda ARN format, see <a>Resources and
--   Conditions for Lambda Actions</a>.
canary_engineArn :: Lens' Canary (Maybe Text)

-- | The list of key-value pairs that are associated with the canary.
canary_tags :: Lens' Canary (Maybe (HashMap Text Text))
instance GHC.Generics.Generic Network.AWS.Synthetics.Types.Canary.Canary
instance GHC.Show.Show Network.AWS.Synthetics.Types.Canary.Canary
instance GHC.Read.Read Network.AWS.Synthetics.Types.Canary.Canary
instance GHC.Classes.Eq Network.AWS.Synthetics.Types.Canary.Canary
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Synthetics.Types.Canary.Canary
instance Data.Hashable.Class.Hashable Network.AWS.Synthetics.Types.Canary.Canary
instance Control.DeepSeq.NFData Network.AWS.Synthetics.Types.Canary.Canary


module Network.AWS.Synthetics.Types

-- | API version <tt>2017-10-11</tt> of the Amazon Synthetics SDK
--   configuration.
defaultService :: Service

-- | A parameter could not be validated.
_ValidationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A conflicting operation is already in progress.
_ConflictException :: AsError a => Getting (First ServiceError) a ServiceError

-- | An unknown internal error occurred.
_InternalServerException :: AsError a => Getting (First ServiceError) a ServiceError

-- | One of the specified resources was not found.
_ResourceNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError
newtype CanaryRunState
CanaryRunState' :: Text -> CanaryRunState
[fromCanaryRunState] :: CanaryRunState -> Text
pattern CanaryRunState_FAILED :: CanaryRunState
pattern CanaryRunState_PASSED :: CanaryRunState
pattern CanaryRunState_RUNNING :: CanaryRunState
newtype CanaryRunStateReasonCode
CanaryRunStateReasonCode' :: Text -> CanaryRunStateReasonCode
[fromCanaryRunStateReasonCode] :: CanaryRunStateReasonCode -> Text
pattern CanaryRunStateReasonCode_CANARY_FAILURE :: CanaryRunStateReasonCode
pattern CanaryRunStateReasonCode_EXECUTION_FAILURE :: CanaryRunStateReasonCode
newtype CanaryState
CanaryState' :: Text -> CanaryState
[fromCanaryState] :: CanaryState -> Text
pattern CanaryState_CREATING :: CanaryState
pattern CanaryState_DELETING :: CanaryState
pattern CanaryState_ERROR :: CanaryState
pattern CanaryState_READY :: CanaryState
pattern CanaryState_RUNNING :: CanaryState
pattern CanaryState_STARTING :: CanaryState
pattern CanaryState_STOPPED :: CanaryState
pattern CanaryState_STOPPING :: CanaryState
pattern CanaryState_UPDATING :: CanaryState
newtype CanaryStateReasonCode
CanaryStateReasonCode' :: Text -> CanaryStateReasonCode
[fromCanaryStateReasonCode] :: CanaryStateReasonCode -> Text
pattern CanaryStateReasonCode_INVALID_PERMISSIONS :: CanaryStateReasonCode
newtype EncryptionMode
EncryptionMode' :: Text -> EncryptionMode
[fromEncryptionMode] :: EncryptionMode -> Text
pattern EncryptionMode_SSE_KMS :: EncryptionMode
pattern EncryptionMode_SSE_S3 :: EncryptionMode

-- | A structure that contains the configuration for canary artifacts,
--   including the encryption-at-rest settings for artifacts that the
--   canary uploads to Amazon S3.
--   
--   <i>See:</i> <a>newArtifactConfigInput</a> smart constructor.
data ArtifactConfigInput
ArtifactConfigInput' :: Maybe S3EncryptionConfig -> ArtifactConfigInput

-- | A structure that contains the configuration of the encryption-at-rest
--   settings for artifacts that the canary uploads to Amazon S3. Artifact
--   encryption functionality is available only for canaries that use
--   Synthetics runtime version syn-nodejs-puppeteer-3.3 or later. For more
--   information, see <a>Encrypting canary artifacts</a>
[$sel:s3Encryption:ArtifactConfigInput'] :: ArtifactConfigInput -> Maybe S3EncryptionConfig

-- | Create a value of <a>ArtifactConfigInput</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:s3Encryption:ArtifactConfigInput'</a>,
--   <a>artifactConfigInput_s3Encryption</a> - A structure that contains
--   the configuration of the encryption-at-rest settings for artifacts
--   that the canary uploads to Amazon S3. Artifact encryption
--   functionality is available only for canaries that use Synthetics
--   runtime version syn-nodejs-puppeteer-3.3 or later. For more
--   information, see <a>Encrypting canary artifacts</a>
newArtifactConfigInput :: ArtifactConfigInput

-- | A structure that contains the configuration of the encryption-at-rest
--   settings for artifacts that the canary uploads to Amazon S3. Artifact
--   encryption functionality is available only for canaries that use
--   Synthetics runtime version syn-nodejs-puppeteer-3.3 or later. For more
--   information, see <a>Encrypting canary artifacts</a>
artifactConfigInput_s3Encryption :: Lens' ArtifactConfigInput (Maybe S3EncryptionConfig)

-- | A structure that contains the configuration for canary artifacts,
--   including the encryption-at-rest settings for artifacts that the
--   canary uploads to Amazon S3.
--   
--   <i>See:</i> <a>newArtifactConfigOutput</a> smart constructor.
data ArtifactConfigOutput
ArtifactConfigOutput' :: Maybe S3EncryptionConfig -> ArtifactConfigOutput

-- | A structure that contains the configuration of encryption settings for
--   canary artifacts that are stored in Amazon S3.
[$sel:s3Encryption:ArtifactConfigOutput'] :: ArtifactConfigOutput -> Maybe S3EncryptionConfig

-- | Create a value of <a>ArtifactConfigOutput</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:s3Encryption:ArtifactConfigOutput'</a>,
--   <a>artifactConfigOutput_s3Encryption</a> - A structure that contains
--   the configuration of encryption settings for canary artifacts that are
--   stored in Amazon S3.
newArtifactConfigOutput :: ArtifactConfigOutput

-- | A structure that contains the configuration of encryption settings for
--   canary artifacts that are stored in Amazon S3.
artifactConfigOutput_s3Encryption :: Lens' ArtifactConfigOutput (Maybe S3EncryptionConfig)

-- | A structure representing a screenshot that is used as a baseline
--   during visual monitoring comparisons made by the canary.
--   
--   <i>See:</i> <a>newBaseScreenshot</a> smart constructor.
data BaseScreenshot
BaseScreenshot' :: Maybe [Text] -> Text -> BaseScreenshot

-- | Coordinates that define the part of a screen to ignore during
--   screenshot comparisons. To obtain the coordinates to use here, use the
--   CloudWatch Logs console to draw the boundaries on the screen. For more
--   information, see {LINK}
[$sel:ignoreCoordinates:BaseScreenshot'] :: BaseScreenshot -> Maybe [Text]

-- | The name of the screenshot. This is generated the first time the
--   canary is run after the <tt>UpdateCanary</tt> operation that specified
--   for this canary to perform visual monitoring.
[$sel:screenshotName:BaseScreenshot'] :: BaseScreenshot -> Text

-- | Create a value of <a>BaseScreenshot</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ignoreCoordinates:BaseScreenshot'</a>,
--   <a>baseScreenshot_ignoreCoordinates</a> - Coordinates that define the
--   part of a screen to ignore during screenshot comparisons. To obtain
--   the coordinates to use here, use the CloudWatch Logs console to draw
--   the boundaries on the screen. For more information, see {LINK}
--   
--   <a>$sel:screenshotName:BaseScreenshot'</a>,
--   <a>baseScreenshot_screenshotName</a> - The name of the screenshot.
--   This is generated the first time the canary is run after the
--   <tt>UpdateCanary</tt> operation that specified for this canary to
--   perform visual monitoring.
newBaseScreenshot :: Text -> BaseScreenshot

-- | Coordinates that define the part of a screen to ignore during
--   screenshot comparisons. To obtain the coordinates to use here, use the
--   CloudWatch Logs console to draw the boundaries on the screen. For more
--   information, see {LINK}
baseScreenshot_ignoreCoordinates :: Lens' BaseScreenshot (Maybe [Text])

-- | The name of the screenshot. This is generated the first time the
--   canary is run after the <tt>UpdateCanary</tt> operation that specified
--   for this canary to perform visual monitoring.
baseScreenshot_screenshotName :: Lens' BaseScreenshot Text

-- | This structure contains all information about one canary in your
--   account.
--   
--   <i>See:</i> <a>newCanary</a> smart constructor.
data Canary
Canary' :: Maybe CanaryStatus -> Maybe Natural -> Maybe CanaryScheduleOutput -> Maybe Text -> Maybe CanaryRunConfigOutput -> Maybe Text -> Maybe Text -> Maybe Natural -> Maybe ArtifactConfigOutput -> Maybe VpcConfigOutput -> Maybe VisualReferenceOutput -> Maybe Text -> Maybe Text -> Maybe CanaryCodeOutput -> Maybe CanaryTimeline -> Maybe Text -> Maybe (HashMap Text Text) -> Canary

-- | A structure that contains information about the canary's status.
[$sel:status:Canary'] :: Canary -> Maybe CanaryStatus

-- | The number of days to retain data about successful runs of this
--   canary.
[$sel:successRetentionPeriodInDays:Canary'] :: Canary -> Maybe Natural

-- | A structure that contains information about how often the canary is to
--   run, and when these runs are to stop.
[$sel:schedule:Canary'] :: Canary -> Maybe CanaryScheduleOutput

-- | The location in Amazon S3 where Synthetics stores artifacts from the
--   runs of this canary. Artifacts include the log file, screenshots, and
--   HAR files.
[$sel:artifactS3Location:Canary'] :: Canary -> Maybe Text
[$sel:runConfig:Canary'] :: Canary -> Maybe CanaryRunConfigOutput

-- | The ARN of the IAM role used to run the canary. This role must include
--   <tt>lambda.amazonaws.com</tt> as a principal in the trust policy.
[$sel:executionRoleArn:Canary'] :: Canary -> Maybe Text

-- | Specifies the runtime version to use for the canary. For more
--   information about runtime versions, see <a>Canary Runtime
--   Versions</a>.
[$sel:runtimeVersion:Canary'] :: Canary -> Maybe Text

-- | The number of days to retain data about failed runs of this canary.
[$sel:failureRetentionPeriodInDays:Canary'] :: Canary -> Maybe Natural

-- | A structure that contains the configuration for canary artifacts,
--   including the encryption-at-rest settings for artifacts that the
--   canary uploads to Amazon S3.
[$sel:artifactConfig:Canary'] :: Canary -> Maybe ArtifactConfigOutput
[$sel:vpcConfig:Canary'] :: Canary -> Maybe VpcConfigOutput

-- | If this canary performs visual monitoring by comparing screenshots,
--   this structure contains the ID of the canary run to use as the
--   baseline for screenshots, and the coordinates of any parts of the
--   screen to ignore during the visual monitoring comparison.
[$sel:visualReference:Canary'] :: Canary -> Maybe VisualReferenceOutput

-- | The name of the canary.
[$sel:name:Canary'] :: Canary -> Maybe Text

-- | The unique ID of this canary.
[$sel:id:Canary'] :: Canary -> Maybe Text
[$sel:code:Canary'] :: Canary -> Maybe CanaryCodeOutput

-- | A structure that contains information about when the canary was
--   created, modified, and most recently run.
[$sel:timeline:Canary'] :: Canary -> Maybe CanaryTimeline

-- | The ARN of the Lambda function that is used as your canary's engine.
--   For more information about Lambda ARN format, see <a>Resources and
--   Conditions for Lambda Actions</a>.
[$sel:engineArn:Canary'] :: Canary -> Maybe Text

-- | The list of key-value pairs that are associated with the canary.
[$sel:tags:Canary'] :: Canary -> Maybe (HashMap Text Text)

-- | Create a value of <a>Canary</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:Canary'</a>, <a>canary_status</a> - A structure that
--   contains information about the canary's status.
--   
--   <a>$sel:successRetentionPeriodInDays:Canary'</a>,
--   <a>canary_successRetentionPeriodInDays</a> - The number of days to
--   retain data about successful runs of this canary.
--   
--   <a>$sel:schedule:Canary'</a>, <a>canary_schedule</a> - A structure
--   that contains information about how often the canary is to run, and
--   when these runs are to stop.
--   
--   <a>$sel:artifactS3Location:Canary'</a>,
--   <a>canary_artifactS3Location</a> - The location in Amazon S3 where
--   Synthetics stores artifacts from the runs of this canary. Artifacts
--   include the log file, screenshots, and HAR files.
--   
--   <a>$sel:runConfig:Canary'</a>, <a>canary_runConfig</a> - Undocumented
--   member.
--   
--   <a>$sel:executionRoleArn:Canary'</a>, <a>canary_executionRoleArn</a> -
--   The ARN of the IAM role used to run the canary. This role must include
--   <tt>lambda.amazonaws.com</tt> as a principal in the trust policy.
--   
--   <a>$sel:runtimeVersion:Canary'</a>, <a>canary_runtimeVersion</a> -
--   Specifies the runtime version to use for the canary. For more
--   information about runtime versions, see <a>Canary Runtime
--   Versions</a>.
--   
--   <a>$sel:failureRetentionPeriodInDays:Canary'</a>,
--   <a>canary_failureRetentionPeriodInDays</a> - The number of days to
--   retain data about failed runs of this canary.
--   
--   <a>$sel:artifactConfig:Canary'</a>, <a>canary_artifactConfig</a> - A
--   structure that contains the configuration for canary artifacts,
--   including the encryption-at-rest settings for artifacts that the
--   canary uploads to Amazon S3.
--   
--   <a>$sel:vpcConfig:Canary'</a>, <a>canary_vpcConfig</a> - Undocumented
--   member.
--   
--   <a>$sel:visualReference:Canary'</a>, <a>canary_visualReference</a> -
--   If this canary performs visual monitoring by comparing screenshots,
--   this structure contains the ID of the canary run to use as the
--   baseline for screenshots, and the coordinates of any parts of the
--   screen to ignore during the visual monitoring comparison.
--   
--   <a>$sel:name:Canary'</a>, <a>canary_name</a> - The name of the canary.
--   
--   <a>$sel:id:Canary'</a>, <a>canary_id</a> - The unique ID of this
--   canary.
--   
--   <a>$sel:code:Canary'</a>, <a>canary_code</a> - Undocumented member.
--   
--   <a>$sel:timeline:Canary'</a>, <a>canary_timeline</a> - A structure
--   that contains information about when the canary was created, modified,
--   and most recently run.
--   
--   <a>$sel:engineArn:Canary'</a>, <a>canary_engineArn</a> - The ARN of
--   the Lambda function that is used as your canary's engine. For more
--   information about Lambda ARN format, see <a>Resources and Conditions
--   for Lambda Actions</a>.
--   
--   <a>$sel:tags:Canary'</a>, <a>canary_tags</a> - The list of key-value
--   pairs that are associated with the canary.
newCanary :: Canary

-- | A structure that contains information about the canary's status.
canary_status :: Lens' Canary (Maybe CanaryStatus)

-- | The number of days to retain data about successful runs of this
--   canary.
canary_successRetentionPeriodInDays :: Lens' Canary (Maybe Natural)

-- | A structure that contains information about how often the canary is to
--   run, and when these runs are to stop.
canary_schedule :: Lens' Canary (Maybe CanaryScheduleOutput)

-- | The location in Amazon S3 where Synthetics stores artifacts from the
--   runs of this canary. Artifacts include the log file, screenshots, and
--   HAR files.
canary_artifactS3Location :: Lens' Canary (Maybe Text)

-- | Undocumented member.
canary_runConfig :: Lens' Canary (Maybe CanaryRunConfigOutput)

-- | The ARN of the IAM role used to run the canary. This role must include
--   <tt>lambda.amazonaws.com</tt> as a principal in the trust policy.
canary_executionRoleArn :: Lens' Canary (Maybe Text)

-- | Specifies the runtime version to use for the canary. For more
--   information about runtime versions, see <a>Canary Runtime
--   Versions</a>.
canary_runtimeVersion :: Lens' Canary (Maybe Text)

-- | The number of days to retain data about failed runs of this canary.
canary_failureRetentionPeriodInDays :: Lens' Canary (Maybe Natural)

-- | A structure that contains the configuration for canary artifacts,
--   including the encryption-at-rest settings for artifacts that the
--   canary uploads to Amazon S3.
canary_artifactConfig :: Lens' Canary (Maybe ArtifactConfigOutput)

-- | Undocumented member.
canary_vpcConfig :: Lens' Canary (Maybe VpcConfigOutput)

-- | If this canary performs visual monitoring by comparing screenshots,
--   this structure contains the ID of the canary run to use as the
--   baseline for screenshots, and the coordinates of any parts of the
--   screen to ignore during the visual monitoring comparison.
canary_visualReference :: Lens' Canary (Maybe VisualReferenceOutput)

-- | The name of the canary.
canary_name :: Lens' Canary (Maybe Text)

-- | The unique ID of this canary.
canary_id :: Lens' Canary (Maybe Text)

-- | Undocumented member.
canary_code :: Lens' Canary (Maybe CanaryCodeOutput)

-- | A structure that contains information about when the canary was
--   created, modified, and most recently run.
canary_timeline :: Lens' Canary (Maybe CanaryTimeline)

-- | The ARN of the Lambda function that is used as your canary's engine.
--   For more information about Lambda ARN format, see <a>Resources and
--   Conditions for Lambda Actions</a>.
canary_engineArn :: Lens' Canary (Maybe Text)

-- | The list of key-value pairs that are associated with the canary.
canary_tags :: Lens' Canary (Maybe (HashMap Text Text))

-- | Use this structure to input your script code for the canary. This
--   structure contains the Lambda handler with the location where the
--   canary should start running the script. If the script is stored in an
--   S3 bucket, the bucket name, key, and version are also included. If the
--   script was passed into the canary directly, the script code is
--   contained in the value of <tt>Zipfile</tt>.
--   
--   <i>See:</i> <a>newCanaryCodeInput</a> smart constructor.
data CanaryCodeInput
CanaryCodeInput' :: Maybe Text -> Maybe Text -> Maybe Base64 -> Maybe Text -> Text -> CanaryCodeInput

-- | The S3 key of your script. For more information, see <a>Working with
--   Amazon S3 Objects</a>.
[$sel:s3Key:CanaryCodeInput'] :: CanaryCodeInput -> Maybe Text

-- | The S3 version ID of your script.
[$sel:s3Version:CanaryCodeInput'] :: CanaryCodeInput -> Maybe Text

-- | If you input your canary script directly into the canary instead of
--   referring to an S3 location, the value of this parameter is the
--   base64-encoded contents of the .zip file that contains the script. It
--   must be smaller than 256 Kb.
[$sel:zipFile:CanaryCodeInput'] :: CanaryCodeInput -> Maybe Base64

-- | If your canary script is located in S3, specify the bucket name here.
--   Do not include <tt>s3://</tt> as the start of the bucket name.
[$sel:s3Bucket:CanaryCodeInput'] :: CanaryCodeInput -> Maybe Text

-- | The entry point to use for the source code when running the canary.
--   This value must end with the string <tt>.handler</tt>. The string is
--   limited to 29 characters or fewer.
[$sel:handler:CanaryCodeInput'] :: CanaryCodeInput -> Text

-- | Create a value of <a>CanaryCodeInput</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:s3Key:CanaryCodeInput'</a>, <a>canaryCodeInput_s3Key</a> - The
--   S3 key of your script. For more information, see <a>Working with
--   Amazon S3 Objects</a>.
--   
--   <a>$sel:s3Version:CanaryCodeInput'</a>,
--   <a>canaryCodeInput_s3Version</a> - The S3 version ID of your script.
--   
--   <a>$sel:zipFile:CanaryCodeInput'</a>, <a>canaryCodeInput_zipFile</a> -
--   If you input your canary script directly into the canary instead of
--   referring to an S3 location, the value of this parameter is the
--   base64-encoded contents of the .zip file that contains the script. It
--   must be smaller than 256 Kb.-- -- <i>Note:</i> This <tt>Lens</tt>
--   automatically encodes and decodes Base64 data. -- The underlying
--   isomorphism will encode to Base64 representation during --
--   serialisation, and decode from Base64 representation during
--   deserialisation. -- This <tt>Lens</tt> accepts and returns only raw
--   unencoded data.
--   
--   <a>$sel:s3Bucket:CanaryCodeInput'</a>, <a>canaryCodeInput_s3Bucket</a>
--   - If your canary script is located in S3, specify the bucket name
--   here. Do not include <tt>s3://</tt> as the start of the bucket name.
--   
--   <a>$sel:handler:CanaryCodeInput'</a>, <a>canaryCodeInput_handler</a> -
--   The entry point to use for the source code when running the canary.
--   This value must end with the string <tt>.handler</tt>. The string is
--   limited to 29 characters or fewer.
newCanaryCodeInput :: Text -> CanaryCodeInput

-- | The S3 key of your script. For more information, see <a>Working with
--   Amazon S3 Objects</a>.
canaryCodeInput_s3Key :: Lens' CanaryCodeInput (Maybe Text)

-- | The S3 version ID of your script.
canaryCodeInput_s3Version :: Lens' CanaryCodeInput (Maybe Text)

-- | If you input your canary script directly into the canary instead of
--   referring to an S3 location, the value of this parameter is the
--   base64-encoded contents of the .zip file that contains the script. It
--   must be smaller than 256 Kb.-- -- <i>Note:</i> This <tt>Lens</tt>
--   automatically encodes and decodes Base64 data. -- The underlying
--   isomorphism will encode to Base64 representation during --
--   serialisation, and decode from Base64 representation during
--   deserialisation. -- This <tt>Lens</tt> accepts and returns only raw
--   unencoded data.
canaryCodeInput_zipFile :: Lens' CanaryCodeInput (Maybe ByteString)

-- | If your canary script is located in S3, specify the bucket name here.
--   Do not include <tt>s3://</tt> as the start of the bucket name.
canaryCodeInput_s3Bucket :: Lens' CanaryCodeInput (Maybe Text)

-- | The entry point to use for the source code when running the canary.
--   This value must end with the string <tt>.handler</tt>. The string is
--   limited to 29 characters or fewer.
canaryCodeInput_handler :: Lens' CanaryCodeInput Text

-- | This structure contains information about the canary's Lambda handler
--   and where its code is stored by CloudWatch Synthetics.
--   
--   <i>See:</i> <a>newCanaryCodeOutput</a> smart constructor.
data CanaryCodeOutput
CanaryCodeOutput' :: Maybe Text -> Maybe Text -> CanaryCodeOutput

-- | The ARN of the Lambda layer where Synthetics stores the canary script
--   code.
[$sel:sourceLocationArn:CanaryCodeOutput'] :: CanaryCodeOutput -> Maybe Text

-- | The entry point to use for the source code when running the canary.
[$sel:handler:CanaryCodeOutput'] :: CanaryCodeOutput -> Maybe Text

-- | Create a value of <a>CanaryCodeOutput</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sourceLocationArn:CanaryCodeOutput'</a>,
--   <a>canaryCodeOutput_sourceLocationArn</a> - The ARN of the Lambda
--   layer where Synthetics stores the canary script code.
--   
--   <a>$sel:handler:CanaryCodeOutput'</a>, <a>canaryCodeOutput_handler</a>
--   - The entry point to use for the source code when running the canary.
newCanaryCodeOutput :: CanaryCodeOutput

-- | The ARN of the Lambda layer where Synthetics stores the canary script
--   code.
canaryCodeOutput_sourceLocationArn :: Lens' CanaryCodeOutput (Maybe Text)

-- | The entry point to use for the source code when running the canary.
canaryCodeOutput_handler :: Lens' CanaryCodeOutput (Maybe Text)

-- | This structure contains information about the most recent run of a
--   single canary.
--   
--   <i>See:</i> <a>newCanaryLastRun</a> smart constructor.
data CanaryLastRun
CanaryLastRun' :: Maybe Text -> Maybe CanaryRun -> CanaryLastRun

-- | The name of the canary.
[$sel:canaryName:CanaryLastRun'] :: CanaryLastRun -> Maybe Text

-- | The results from this canary's most recent run.
[$sel:lastRun:CanaryLastRun'] :: CanaryLastRun -> Maybe CanaryRun

-- | Create a value of <a>CanaryLastRun</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:canaryName:CanaryLastRun'</a>, <a>canaryLastRun_canaryName</a>
--   - The name of the canary.
--   
--   <a>$sel:lastRun:CanaryLastRun'</a>, <a>canaryLastRun_lastRun</a> - The
--   results from this canary's most recent run.
newCanaryLastRun :: CanaryLastRun

-- | The name of the canary.
canaryLastRun_canaryName :: Lens' CanaryLastRun (Maybe Text)

-- | The results from this canary's most recent run.
canaryLastRun_lastRun :: Lens' CanaryLastRun (Maybe CanaryRun)

-- | This structure contains the details about one run of one canary.
--   
--   <i>See:</i> <a>newCanaryRun</a> smart constructor.
data CanaryRun
CanaryRun' :: Maybe CanaryRunStatus -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe CanaryRunTimeline -> CanaryRun

-- | The status of this run.
[$sel:status:CanaryRun'] :: CanaryRun -> Maybe CanaryRunStatus

-- | The location where the canary stored artifacts from the run. Artifacts
--   include the log file, screenshots, and HAR files.
[$sel:artifactS3Location:CanaryRun'] :: CanaryRun -> Maybe Text

-- | The name of the canary.
[$sel:name:CanaryRun'] :: CanaryRun -> Maybe Text

-- | A unique ID that identifies this canary run.
[$sel:id:CanaryRun'] :: CanaryRun -> Maybe Text

-- | A structure that contains the start and end times of this run.
[$sel:timeline:CanaryRun'] :: CanaryRun -> Maybe CanaryRunTimeline

-- | Create a value of <a>CanaryRun</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:CanaryRun'</a>, <a>canaryRun_status</a> - The status of
--   this run.
--   
--   <a>$sel:artifactS3Location:CanaryRun'</a>,
--   <a>canaryRun_artifactS3Location</a> - The location where the canary
--   stored artifacts from the run. Artifacts include the log file,
--   screenshots, and HAR files.
--   
--   <a>$sel:name:CanaryRun'</a>, <a>canaryRun_name</a> - The name of the
--   canary.
--   
--   <a>$sel:id:CanaryRun'</a>, <a>canaryRun_id</a> - A unique ID that
--   identifies this canary run.
--   
--   <a>$sel:timeline:CanaryRun'</a>, <a>canaryRun_timeline</a> - A
--   structure that contains the start and end times of this run.
newCanaryRun :: CanaryRun

-- | The status of this run.
canaryRun_status :: Lens' CanaryRun (Maybe CanaryRunStatus)

-- | The location where the canary stored artifacts from the run. Artifacts
--   include the log file, screenshots, and HAR files.
canaryRun_artifactS3Location :: Lens' CanaryRun (Maybe Text)

-- | The name of the canary.
canaryRun_name :: Lens' CanaryRun (Maybe Text)

-- | A unique ID that identifies this canary run.
canaryRun_id :: Lens' CanaryRun (Maybe Text)

-- | A structure that contains the start and end times of this run.
canaryRun_timeline :: Lens' CanaryRun (Maybe CanaryRunTimeline)

-- | A structure that contains input information for a canary run.
--   
--   <i>See:</i> <a>newCanaryRunConfigInput</a> smart constructor.
data CanaryRunConfigInput
CanaryRunConfigInput' :: Maybe Natural -> Maybe (HashMap Text Text) -> Maybe Bool -> Maybe Natural -> CanaryRunConfigInput

-- | How long the canary is allowed to run before it must stop. You can't
--   set this time to be longer than the frequency of the runs of this
--   canary.
--   
--   If you omit this field, the frequency of the canary is used as this
--   value, up to a maximum of 14 minutes.
[$sel:timeoutInSeconds:CanaryRunConfigInput'] :: CanaryRunConfigInput -> Maybe Natural

-- | Specifies the keys and values to use for any environment variables
--   used in the canary script. Use the following format:
--   
--   { "key1" : "value1", "key2" : "value2", ...}
--   
--   Keys must start with a letter and be at least two characters. The
--   total size of your environment variables cannot exceed 4 KB. You can't
--   specify any Lambda reserved environment variables as the keys for your
--   environment variables. For more information about reserved keys, see
--   <a>Runtime environment variables</a>.
[$sel:environmentVariables:CanaryRunConfigInput'] :: CanaryRunConfigInput -> Maybe (HashMap Text Text)

-- | Specifies whether this canary is to use active X-Ray tracing when it
--   runs. Active tracing enables this canary run to be displayed in the
--   ServiceLens and X-Ray service maps even if the canary does not hit an
--   endpoint that has X-Ray tracing enabled. Using X-Ray tracing incurs
--   charges. For more information, see <a>Canaries and X-Ray tracing</a>.
--   
--   You can enable active tracing only for canaries that use version
--   <tt>syn-nodejs-2.0</tt> or later for their canary runtime.
[$sel:activeTracing:CanaryRunConfigInput'] :: CanaryRunConfigInput -> Maybe Bool

-- | The maximum amount of memory available to the canary while it is
--   running, in MB. This value must be a multiple of 64.
[$sel:memoryInMB:CanaryRunConfigInput'] :: CanaryRunConfigInput -> Maybe Natural

-- | Create a value of <a>CanaryRunConfigInput</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:timeoutInSeconds:CanaryRunConfigInput'</a>,
--   <a>canaryRunConfigInput_timeoutInSeconds</a> - How long the canary is
--   allowed to run before it must stop. You can't set this time to be
--   longer than the frequency of the runs of this canary.
--   
--   If you omit this field, the frequency of the canary is used as this
--   value, up to a maximum of 14 minutes.
--   
--   <a>$sel:environmentVariables:CanaryRunConfigInput'</a>,
--   <a>canaryRunConfigInput_environmentVariables</a> - Specifies the keys
--   and values to use for any environment variables used in the canary
--   script. Use the following format:
--   
--   { "key1" : "value1", "key2" : "value2", ...}
--   
--   Keys must start with a letter and be at least two characters. The
--   total size of your environment variables cannot exceed 4 KB. You can't
--   specify any Lambda reserved environment variables as the keys for your
--   environment variables. For more information about reserved keys, see
--   <a>Runtime environment variables</a>.
--   
--   <a>$sel:activeTracing:CanaryRunConfigInput'</a>,
--   <a>canaryRunConfigInput_activeTracing</a> - Specifies whether this
--   canary is to use active X-Ray tracing when it runs. Active tracing
--   enables this canary run to be displayed in the ServiceLens and X-Ray
--   service maps even if the canary does not hit an endpoint that has
--   X-Ray tracing enabled. Using X-Ray tracing incurs charges. For more
--   information, see <a>Canaries and X-Ray tracing</a>.
--   
--   You can enable active tracing only for canaries that use version
--   <tt>syn-nodejs-2.0</tt> or later for their canary runtime.
--   
--   <a>$sel:memoryInMB:CanaryRunConfigInput'</a>,
--   <a>canaryRunConfigInput_memoryInMB</a> - The maximum amount of memory
--   available to the canary while it is running, in MB. This value must be
--   a multiple of 64.
newCanaryRunConfigInput :: CanaryRunConfigInput

-- | How long the canary is allowed to run before it must stop. You can't
--   set this time to be longer than the frequency of the runs of this
--   canary.
--   
--   If you omit this field, the frequency of the canary is used as this
--   value, up to a maximum of 14 minutes.
canaryRunConfigInput_timeoutInSeconds :: Lens' CanaryRunConfigInput (Maybe Natural)

-- | Specifies the keys and values to use for any environment variables
--   used in the canary script. Use the following format:
--   
--   { "key1" : "value1", "key2" : "value2", ...}
--   
--   Keys must start with a letter and be at least two characters. The
--   total size of your environment variables cannot exceed 4 KB. You can't
--   specify any Lambda reserved environment variables as the keys for your
--   environment variables. For more information about reserved keys, see
--   <a>Runtime environment variables</a>.
canaryRunConfigInput_environmentVariables :: Lens' CanaryRunConfigInput (Maybe (HashMap Text Text))

-- | Specifies whether this canary is to use active X-Ray tracing when it
--   runs. Active tracing enables this canary run to be displayed in the
--   ServiceLens and X-Ray service maps even if the canary does not hit an
--   endpoint that has X-Ray tracing enabled. Using X-Ray tracing incurs
--   charges. For more information, see <a>Canaries and X-Ray tracing</a>.
--   
--   You can enable active tracing only for canaries that use version
--   <tt>syn-nodejs-2.0</tt> or later for their canary runtime.
canaryRunConfigInput_activeTracing :: Lens' CanaryRunConfigInput (Maybe Bool)

-- | The maximum amount of memory available to the canary while it is
--   running, in MB. This value must be a multiple of 64.
canaryRunConfigInput_memoryInMB :: Lens' CanaryRunConfigInput (Maybe Natural)

-- | A structure that contains information about a canary run.
--   
--   <i>See:</i> <a>newCanaryRunConfigOutput</a> smart constructor.
data CanaryRunConfigOutput
CanaryRunConfigOutput' :: Maybe Natural -> Maybe Bool -> Maybe Natural -> CanaryRunConfigOutput

-- | How long the canary is allowed to run before it must stop.
[$sel:timeoutInSeconds:CanaryRunConfigOutput'] :: CanaryRunConfigOutput -> Maybe Natural

-- | Displays whether this canary run used active X-Ray tracing.
[$sel:activeTracing:CanaryRunConfigOutput'] :: CanaryRunConfigOutput -> Maybe Bool

-- | The maximum amount of memory available to the canary while it is
--   running, in MB. This value must be a multiple of 64.
[$sel:memoryInMB:CanaryRunConfigOutput'] :: CanaryRunConfigOutput -> Maybe Natural

-- | Create a value of <a>CanaryRunConfigOutput</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:timeoutInSeconds:CanaryRunConfigOutput'</a>,
--   <a>canaryRunConfigOutput_timeoutInSeconds</a> - How long the canary is
--   allowed to run before it must stop.
--   
--   <a>$sel:activeTracing:CanaryRunConfigOutput'</a>,
--   <a>canaryRunConfigOutput_activeTracing</a> - Displays whether this
--   canary run used active X-Ray tracing.
--   
--   <a>$sel:memoryInMB:CanaryRunConfigOutput'</a>,
--   <a>canaryRunConfigOutput_memoryInMB</a> - The maximum amount of memory
--   available to the canary while it is running, in MB. This value must be
--   a multiple of 64.
newCanaryRunConfigOutput :: CanaryRunConfigOutput

-- | How long the canary is allowed to run before it must stop.
canaryRunConfigOutput_timeoutInSeconds :: Lens' CanaryRunConfigOutput (Maybe Natural)

-- | Displays whether this canary run used active X-Ray tracing.
canaryRunConfigOutput_activeTracing :: Lens' CanaryRunConfigOutput (Maybe Bool)

-- | The maximum amount of memory available to the canary while it is
--   running, in MB. This value must be a multiple of 64.
canaryRunConfigOutput_memoryInMB :: Lens' CanaryRunConfigOutput (Maybe Natural)

-- | This structure contains the status information about a canary run.
--   
--   <i>See:</i> <a>newCanaryRunStatus</a> smart constructor.
data CanaryRunStatus
CanaryRunStatus' :: Maybe CanaryRunState -> Maybe Text -> Maybe CanaryRunStateReasonCode -> CanaryRunStatus

-- | The current state of the run.
[$sel:state:CanaryRunStatus'] :: CanaryRunStatus -> Maybe CanaryRunState

-- | If run of the canary failed, this field contains the reason for the
--   error.
[$sel:stateReason:CanaryRunStatus'] :: CanaryRunStatus -> Maybe Text

-- | If this value is <tt>CANARY_FAILURE</tt>, an exception occurred in the
--   canary code. If this value is <tt>EXECUTION_FAILURE</tt>, an exception
--   occurred in CloudWatch Synthetics.
[$sel:stateReasonCode:CanaryRunStatus'] :: CanaryRunStatus -> Maybe CanaryRunStateReasonCode

-- | Create a value of <a>CanaryRunStatus</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:state:CanaryRunStatus'</a>, <a>canaryRunStatus_state</a> - The
--   current state of the run.
--   
--   <a>$sel:stateReason:CanaryRunStatus'</a>,
--   <a>canaryRunStatus_stateReason</a> - If run of the canary failed, this
--   field contains the reason for the error.
--   
--   <a>$sel:stateReasonCode:CanaryRunStatus'</a>,
--   <a>canaryRunStatus_stateReasonCode</a> - If this value is
--   <tt>CANARY_FAILURE</tt>, an exception occurred in the canary code. If
--   this value is <tt>EXECUTION_FAILURE</tt>, an exception occurred in
--   CloudWatch Synthetics.
newCanaryRunStatus :: CanaryRunStatus

-- | The current state of the run.
canaryRunStatus_state :: Lens' CanaryRunStatus (Maybe CanaryRunState)

-- | If run of the canary failed, this field contains the reason for the
--   error.
canaryRunStatus_stateReason :: Lens' CanaryRunStatus (Maybe Text)

-- | If this value is <tt>CANARY_FAILURE</tt>, an exception occurred in the
--   canary code. If this value is <tt>EXECUTION_FAILURE</tt>, an exception
--   occurred in CloudWatch Synthetics.
canaryRunStatus_stateReasonCode :: Lens' CanaryRunStatus (Maybe CanaryRunStateReasonCode)

-- | This structure contains the start and end times of a single canary
--   run.
--   
--   <i>See:</i> <a>newCanaryRunTimeline</a> smart constructor.
data CanaryRunTimeline
CanaryRunTimeline' :: Maybe POSIX -> Maybe POSIX -> CanaryRunTimeline

-- | The end time of the run.
[$sel:completed:CanaryRunTimeline'] :: CanaryRunTimeline -> Maybe POSIX

-- | The start time of the run.
[$sel:started:CanaryRunTimeline'] :: CanaryRunTimeline -> Maybe POSIX

-- | Create a value of <a>CanaryRunTimeline</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:completed:CanaryRunTimeline'</a>,
--   <a>canaryRunTimeline_completed</a> - The end time of the run.
--   
--   <a>$sel:started:CanaryRunTimeline'</a>,
--   <a>canaryRunTimeline_started</a> - The start time of the run.
newCanaryRunTimeline :: CanaryRunTimeline

-- | The end time of the run.
canaryRunTimeline_completed :: Lens' CanaryRunTimeline (Maybe UTCTime)

-- | The start time of the run.
canaryRunTimeline_started :: Lens' CanaryRunTimeline (Maybe UTCTime)

-- | This structure specifies how often a canary is to make runs and the
--   date and time when it should stop making runs.
--   
--   <i>See:</i> <a>newCanaryScheduleInput</a> smart constructor.
data CanaryScheduleInput
CanaryScheduleInput' :: Maybe Natural -> Text -> CanaryScheduleInput

-- | How long, in seconds, for the canary to continue making regular runs
--   according to the schedule in the <tt>Expression</tt> value. If you
--   specify 0, the canary continues making runs until you stop it. If you
--   omit this field, the default of 0 is used.
[$sel:durationInSeconds:CanaryScheduleInput'] :: CanaryScheduleInput -> Maybe Natural

-- | A <tt>rate</tt> expression or a <tt>cron</tt> expression that defines
--   how often the canary is to run.
--   
--   For a rate expression, The syntax is <tt>rate(number unit)</tt>.
--   <i>unit</i> can be <tt>minute</tt>, <tt>minutes</tt>, or
--   <tt>hour</tt>.
--   
--   For example, <tt>rate(1 minute)</tt> runs the canary once a minute,
--   <tt>rate(10 minutes)</tt> runs it once every 10 minutes, and
--   <tt>rate(1 hour)</tt> runs it once every hour. You can specify a
--   frequency between <tt>rate(1 minute)</tt> and <tt>rate(1 hour)</tt>.
--   
--   Specifying <tt>rate(0 minute)</tt> or <tt>rate(0 hour)</tt> is a
--   special value that causes the canary to run only once when it is
--   started.
--   
--   Use <tt>cron(expression)</tt> to specify a cron expression. You can't
--   schedule a canary to wait for more than a year before running. For
--   information about the syntax for cron expressions, see <a>Scheduling
--   canary runs using cron</a>.
[$sel:expression:CanaryScheduleInput'] :: CanaryScheduleInput -> Text

-- | Create a value of <a>CanaryScheduleInput</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:durationInSeconds:CanaryScheduleInput'</a>,
--   <a>canaryScheduleInput_durationInSeconds</a> - How long, in seconds,
--   for the canary to continue making regular runs according to the
--   schedule in the <tt>Expression</tt> value. If you specify 0, the
--   canary continues making runs until you stop it. If you omit this
--   field, the default of 0 is used.
--   
--   <a>$sel:expression:CanaryScheduleInput'</a>,
--   <a>canaryScheduleInput_expression</a> - A <tt>rate</tt> expression or
--   a <tt>cron</tt> expression that defines how often the canary is to
--   run.
--   
--   For a rate expression, The syntax is <tt>rate(number unit)</tt>.
--   <i>unit</i> can be <tt>minute</tt>, <tt>minutes</tt>, or
--   <tt>hour</tt>.
--   
--   For example, <tt>rate(1 minute)</tt> runs the canary once a minute,
--   <tt>rate(10 minutes)</tt> runs it once every 10 minutes, and
--   <tt>rate(1 hour)</tt> runs it once every hour. You can specify a
--   frequency between <tt>rate(1 minute)</tt> and <tt>rate(1 hour)</tt>.
--   
--   Specifying <tt>rate(0 minute)</tt> or <tt>rate(0 hour)</tt> is a
--   special value that causes the canary to run only once when it is
--   started.
--   
--   Use <tt>cron(expression)</tt> to specify a cron expression. You can't
--   schedule a canary to wait for more than a year before running. For
--   information about the syntax for cron expressions, see <a>Scheduling
--   canary runs using cron</a>.
newCanaryScheduleInput :: Text -> CanaryScheduleInput

-- | How long, in seconds, for the canary to continue making regular runs
--   according to the schedule in the <tt>Expression</tt> value. If you
--   specify 0, the canary continues making runs until you stop it. If you
--   omit this field, the default of 0 is used.
canaryScheduleInput_durationInSeconds :: Lens' CanaryScheduleInput (Maybe Natural)

-- | A <tt>rate</tt> expression or a <tt>cron</tt> expression that defines
--   how often the canary is to run.
--   
--   For a rate expression, The syntax is <tt>rate(number unit)</tt>.
--   <i>unit</i> can be <tt>minute</tt>, <tt>minutes</tt>, or
--   <tt>hour</tt>.
--   
--   For example, <tt>rate(1 minute)</tt> runs the canary once a minute,
--   <tt>rate(10 minutes)</tt> runs it once every 10 minutes, and
--   <tt>rate(1 hour)</tt> runs it once every hour. You can specify a
--   frequency between <tt>rate(1 minute)</tt> and <tt>rate(1 hour)</tt>.
--   
--   Specifying <tt>rate(0 minute)</tt> or <tt>rate(0 hour)</tt> is a
--   special value that causes the canary to run only once when it is
--   started.
--   
--   Use <tt>cron(expression)</tt> to specify a cron expression. You can't
--   schedule a canary to wait for more than a year before running. For
--   information about the syntax for cron expressions, see <a>Scheduling
--   canary runs using cron</a>.
canaryScheduleInput_expression :: Lens' CanaryScheduleInput Text

-- | How long, in seconds, for the canary to continue making regular runs
--   according to the schedule in the <tt>Expression</tt> value.
--   
--   <i>See:</i> <a>newCanaryScheduleOutput</a> smart constructor.
data CanaryScheduleOutput
CanaryScheduleOutput' :: Maybe Natural -> Maybe Text -> CanaryScheduleOutput

-- | How long, in seconds, for the canary to continue making regular runs
--   after it was created. The runs are performed according to the schedule
--   in the <tt>Expression</tt> value.
[$sel:durationInSeconds:CanaryScheduleOutput'] :: CanaryScheduleOutput -> Maybe Natural

-- | A <tt>rate</tt> expression or a <tt>cron</tt> expression that defines
--   how often the canary is to run.
--   
--   For a rate expression, The syntax is <tt>rate(number unit)</tt>.
--   <i>unit</i> can be <tt>minute</tt>, <tt>minutes</tt>, or
--   <tt>hour</tt>.
--   
--   For example, <tt>rate(1 minute)</tt> runs the canary once a minute,
--   <tt>rate(10 minutes)</tt> runs it once every 10 minutes, and
--   <tt>rate(1 hour)</tt> runs it once every hour. You can specify a
--   frequency between <tt>rate(1 minute)</tt> and <tt>rate(1 hour)</tt>.
--   
--   Specifying <tt>rate(0 minute)</tt> or <tt>rate(0 hour)</tt> is a
--   special value that causes the canary to run only once when it is
--   started.
--   
--   Use <tt>cron(expression)</tt> to specify a cron expression. For
--   information about the syntax for cron expressions, see <a>Scheduling
--   canary runs using cron</a>.
[$sel:expression:CanaryScheduleOutput'] :: CanaryScheduleOutput -> Maybe Text

-- | Create a value of <a>CanaryScheduleOutput</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:durationInSeconds:CanaryScheduleOutput'</a>,
--   <a>canaryScheduleOutput_durationInSeconds</a> - How long, in seconds,
--   for the canary to continue making regular runs after it was created.
--   The runs are performed according to the schedule in the
--   <tt>Expression</tt> value.
--   
--   <a>$sel:expression:CanaryScheduleOutput'</a>,
--   <a>canaryScheduleOutput_expression</a> - A <tt>rate</tt> expression or
--   a <tt>cron</tt> expression that defines how often the canary is to
--   run.
--   
--   For a rate expression, The syntax is <tt>rate(number unit)</tt>.
--   <i>unit</i> can be <tt>minute</tt>, <tt>minutes</tt>, or
--   <tt>hour</tt>.
--   
--   For example, <tt>rate(1 minute)</tt> runs the canary once a minute,
--   <tt>rate(10 minutes)</tt> runs it once every 10 minutes, and
--   <tt>rate(1 hour)</tt> runs it once every hour. You can specify a
--   frequency between <tt>rate(1 minute)</tt> and <tt>rate(1 hour)</tt>.
--   
--   Specifying <tt>rate(0 minute)</tt> or <tt>rate(0 hour)</tt> is a
--   special value that causes the canary to run only once when it is
--   started.
--   
--   Use <tt>cron(expression)</tt> to specify a cron expression. For
--   information about the syntax for cron expressions, see <a>Scheduling
--   canary runs using cron</a>.
newCanaryScheduleOutput :: CanaryScheduleOutput

-- | How long, in seconds, for the canary to continue making regular runs
--   after it was created. The runs are performed according to the schedule
--   in the <tt>Expression</tt> value.
canaryScheduleOutput_durationInSeconds :: Lens' CanaryScheduleOutput (Maybe Natural)

-- | A <tt>rate</tt> expression or a <tt>cron</tt> expression that defines
--   how often the canary is to run.
--   
--   For a rate expression, The syntax is <tt>rate(number unit)</tt>.
--   <i>unit</i> can be <tt>minute</tt>, <tt>minutes</tt>, or
--   <tt>hour</tt>.
--   
--   For example, <tt>rate(1 minute)</tt> runs the canary once a minute,
--   <tt>rate(10 minutes)</tt> runs it once every 10 minutes, and
--   <tt>rate(1 hour)</tt> runs it once every hour. You can specify a
--   frequency between <tt>rate(1 minute)</tt> and <tt>rate(1 hour)</tt>.
--   
--   Specifying <tt>rate(0 minute)</tt> or <tt>rate(0 hour)</tt> is a
--   special value that causes the canary to run only once when it is
--   started.
--   
--   Use <tt>cron(expression)</tt> to specify a cron expression. For
--   information about the syntax for cron expressions, see <a>Scheduling
--   canary runs using cron</a>.
canaryScheduleOutput_expression :: Lens' CanaryScheduleOutput (Maybe Text)

-- | A structure that contains the current state of the canary.
--   
--   <i>See:</i> <a>newCanaryStatus</a> smart constructor.
data CanaryStatus
CanaryStatus' :: Maybe CanaryState -> Maybe Text -> Maybe CanaryStateReasonCode -> CanaryStatus

-- | The current state of the canary.
[$sel:state:CanaryStatus'] :: CanaryStatus -> Maybe CanaryState

-- | If the canary has insufficient permissions to run, this field provides
--   more details.
[$sel:stateReason:CanaryStatus'] :: CanaryStatus -> Maybe Text

-- | If the canary cannot run or has failed, this field displays the
--   reason.
[$sel:stateReasonCode:CanaryStatus'] :: CanaryStatus -> Maybe CanaryStateReasonCode

-- | Create a value of <a>CanaryStatus</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:state:CanaryStatus'</a>, <a>canaryStatus_state</a> - The
--   current state of the canary.
--   
--   <a>$sel:stateReason:CanaryStatus'</a>, <a>canaryStatus_stateReason</a>
--   - If the canary has insufficient permissions to run, this field
--   provides more details.
--   
--   <a>$sel:stateReasonCode:CanaryStatus'</a>,
--   <a>canaryStatus_stateReasonCode</a> - If the canary cannot run or has
--   failed, this field displays the reason.
newCanaryStatus :: CanaryStatus

-- | The current state of the canary.
canaryStatus_state :: Lens' CanaryStatus (Maybe CanaryState)

-- | If the canary has insufficient permissions to run, this field provides
--   more details.
canaryStatus_stateReason :: Lens' CanaryStatus (Maybe Text)

-- | If the canary cannot run or has failed, this field displays the
--   reason.
canaryStatus_stateReasonCode :: Lens' CanaryStatus (Maybe CanaryStateReasonCode)

-- | This structure contains information about when the canary was created
--   and modified.
--   
--   <i>See:</i> <a>newCanaryTimeline</a> smart constructor.
data CanaryTimeline
CanaryTimeline' :: Maybe POSIX -> Maybe POSIX -> Maybe POSIX -> Maybe POSIX -> CanaryTimeline

-- | The date and time the canary was created.
[$sel:created:CanaryTimeline'] :: CanaryTimeline -> Maybe POSIX

-- | The date and time that the canary's most recent run started.
[$sel:lastStarted:CanaryTimeline'] :: CanaryTimeline -> Maybe POSIX

-- | The date and time that the canary's most recent run ended.
[$sel:lastStopped:CanaryTimeline'] :: CanaryTimeline -> Maybe POSIX

-- | The date and time the canary was most recently modified.
[$sel:lastModified:CanaryTimeline'] :: CanaryTimeline -> Maybe POSIX

-- | Create a value of <a>CanaryTimeline</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:created:CanaryTimeline'</a>, <a>canaryTimeline_created</a> -
--   The date and time the canary was created.
--   
--   <a>$sel:lastStarted:CanaryTimeline'</a>,
--   <a>canaryTimeline_lastStarted</a> - The date and time that the
--   canary's most recent run started.
--   
--   <a>$sel:lastStopped:CanaryTimeline'</a>,
--   <a>canaryTimeline_lastStopped</a> - The date and time that the
--   canary's most recent run ended.
--   
--   <a>$sel:lastModified:CanaryTimeline'</a>,
--   <a>canaryTimeline_lastModified</a> - The date and time the canary was
--   most recently modified.
newCanaryTimeline :: CanaryTimeline

-- | The date and time the canary was created.
canaryTimeline_created :: Lens' CanaryTimeline (Maybe UTCTime)

-- | The date and time that the canary's most recent run started.
canaryTimeline_lastStarted :: Lens' CanaryTimeline (Maybe UTCTime)

-- | The date and time that the canary's most recent run ended.
canaryTimeline_lastStopped :: Lens' CanaryTimeline (Maybe UTCTime)

-- | The date and time the canary was most recently modified.
canaryTimeline_lastModified :: Lens' CanaryTimeline (Maybe UTCTime)

-- | This structure contains information about one canary runtime version.
--   For more information about runtime versions, see <a>Canary Runtime
--   Versions</a>.
--   
--   <i>See:</i> <a>newRuntimeVersion</a> smart constructor.
data RuntimeVersion
RuntimeVersion' :: Maybe Text -> Maybe POSIX -> Maybe POSIX -> Maybe Text -> RuntimeVersion

-- | The name of the runtime version. For a list of valid runtime versions,
--   see <a>Canary Runtime Versions</a>.
[$sel:versionName:RuntimeVersion'] :: RuntimeVersion -> Maybe Text

-- | If this runtime version is deprecated, this value is the date of
--   deprecation.
[$sel:deprecationDate:RuntimeVersion'] :: RuntimeVersion -> Maybe POSIX

-- | The date that the runtime version was released.
[$sel:releaseDate:RuntimeVersion'] :: RuntimeVersion -> Maybe POSIX

-- | A description of the runtime version, created by Amazon.
[$sel:description:RuntimeVersion'] :: RuntimeVersion -> Maybe Text

-- | Create a value of <a>RuntimeVersion</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:versionName:RuntimeVersion'</a>,
--   <a>runtimeVersion_versionName</a> - The name of the runtime version.
--   For a list of valid runtime versions, see <a>Canary Runtime
--   Versions</a>.
--   
--   <a>$sel:deprecationDate:RuntimeVersion'</a>,
--   <a>runtimeVersion_deprecationDate</a> - If this runtime version is
--   deprecated, this value is the date of deprecation.
--   
--   <a>$sel:releaseDate:RuntimeVersion'</a>,
--   <a>runtimeVersion_releaseDate</a> - The date that the runtime version
--   was released.
--   
--   <a>$sel:description:RuntimeVersion'</a>,
--   <a>runtimeVersion_description</a> - A description of the runtime
--   version, created by Amazon.
newRuntimeVersion :: RuntimeVersion

-- | The name of the runtime version. For a list of valid runtime versions,
--   see <a>Canary Runtime Versions</a>.
runtimeVersion_versionName :: Lens' RuntimeVersion (Maybe Text)

-- | If this runtime version is deprecated, this value is the date of
--   deprecation.
runtimeVersion_deprecationDate :: Lens' RuntimeVersion (Maybe UTCTime)

-- | The date that the runtime version was released.
runtimeVersion_releaseDate :: Lens' RuntimeVersion (Maybe UTCTime)

-- | A description of the runtime version, created by Amazon.
runtimeVersion_description :: Lens' RuntimeVersion (Maybe Text)

-- | A structure that contains the configuration of encryption-at-rest
--   settings for canary artifacts that the canary uploads to Amazon S3.
--   
--   For more information, see <a>Encrypting canary artifacts</a>
--   
--   <i>See:</i> <a>newS3EncryptionConfig</a> smart constructor.
data S3EncryptionConfig
S3EncryptionConfig' :: Maybe Text -> Maybe EncryptionMode -> S3EncryptionConfig

-- | The ARN of the customer-managed KMS key to use, if you specify
--   <tt>SSE-KMS</tt> for <tt>EncryptionMode</tt>
[$sel:kmsKeyArn:S3EncryptionConfig'] :: S3EncryptionConfig -> Maybe Text

-- | The encryption method to use for artifacts created by this canary.
--   Specify <tt>SSE_S3</tt> to use server-side encryption (SSE) with an
--   Amazon S3-managed key. Specify <tt>SSE-KMS</tt> to use server-side
--   encryption with a customer-managed KMS key.
--   
--   If you omit this parameter, an Amazon Web Services-managed KMS key is
--   used.
[$sel:encryptionMode:S3EncryptionConfig'] :: S3EncryptionConfig -> Maybe EncryptionMode

-- | Create a value of <a>S3EncryptionConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:kmsKeyArn:S3EncryptionConfig'</a>,
--   <a>s3EncryptionConfig_kmsKeyArn</a> - The ARN of the customer-managed
--   KMS key to use, if you specify <tt>SSE-KMS</tt> for
--   <tt>EncryptionMode</tt>
--   
--   <a>$sel:encryptionMode:S3EncryptionConfig'</a>,
--   <a>s3EncryptionConfig_encryptionMode</a> - The encryption method to
--   use for artifacts created by this canary. Specify <tt>SSE_S3</tt> to
--   use server-side encryption (SSE) with an Amazon S3-managed key.
--   Specify <tt>SSE-KMS</tt> to use server-side encryption with a
--   customer-managed KMS key.
--   
--   If you omit this parameter, an Amazon Web Services-managed KMS key is
--   used.
newS3EncryptionConfig :: S3EncryptionConfig

-- | The ARN of the customer-managed KMS key to use, if you specify
--   <tt>SSE-KMS</tt> for <tt>EncryptionMode</tt>
s3EncryptionConfig_kmsKeyArn :: Lens' S3EncryptionConfig (Maybe Text)

-- | The encryption method to use for artifacts created by this canary.
--   Specify <tt>SSE_S3</tt> to use server-side encryption (SSE) with an
--   Amazon S3-managed key. Specify <tt>SSE-KMS</tt> to use server-side
--   encryption with a customer-managed KMS key.
--   
--   If you omit this parameter, an Amazon Web Services-managed KMS key is
--   used.
s3EncryptionConfig_encryptionMode :: Lens' S3EncryptionConfig (Maybe EncryptionMode)

-- | An object that specifies what screenshots to use as a baseline for
--   visual monitoring by this canary, and optionally the parts of the
--   screenshots to ignore during the visual monitoring comparison.
--   
--   Visual monitoring is supported only on canaries running the
--   <b>syn-puppeteer-node-3.2</b> runtime or later. For more information,
--   see <a>Visual monitoring</a> and <a>Visual monitoring blueprint</a>
--   
--   <i>See:</i> <a>newVisualReferenceInput</a> smart constructor.
data VisualReferenceInput
VisualReferenceInput' :: Maybe [BaseScreenshot] -> Text -> VisualReferenceInput

-- | An array of screenshots that will be used as the baseline for visual
--   monitoring in future runs of this canary. If there is a screenshot
--   that you don't want to be used for visual monitoring, remove it from
--   this array.
[$sel:baseScreenshots:VisualReferenceInput'] :: VisualReferenceInput -> Maybe [BaseScreenshot]

-- | Specifies which canary run to use the screenshots from as the baseline
--   for future visual monitoring with this canary. Valid values are
--   <tt>nextrun</tt> to use the screenshots from the next run after this
--   update is made, <tt>lastrun</tt> to use the screenshots from the most
--   recent run before this update was made, or the value of <tt>Id</tt> in
--   the <a>CanaryRun</a> from any past run of this canary.
[$sel:baseCanaryRunId:VisualReferenceInput'] :: VisualReferenceInput -> Text

-- | Create a value of <a>VisualReferenceInput</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:baseScreenshots:VisualReferenceInput'</a>,
--   <a>visualReferenceInput_baseScreenshots</a> - An array of screenshots
--   that will be used as the baseline for visual monitoring in future runs
--   of this canary. If there is a screenshot that you don't want to be
--   used for visual monitoring, remove it from this array.
--   
--   <a>$sel:baseCanaryRunId:VisualReferenceInput'</a>,
--   <a>visualReferenceInput_baseCanaryRunId</a> - Specifies which canary
--   run to use the screenshots from as the baseline for future visual
--   monitoring with this canary. Valid values are <tt>nextrun</tt> to use
--   the screenshots from the next run after this update is made,
--   <tt>lastrun</tt> to use the screenshots from the most recent run
--   before this update was made, or the value of <tt>Id</tt> in the
--   <a>CanaryRun</a> from any past run of this canary.
newVisualReferenceInput :: Text -> VisualReferenceInput

-- | An array of screenshots that will be used as the baseline for visual
--   monitoring in future runs of this canary. If there is a screenshot
--   that you don't want to be used for visual monitoring, remove it from
--   this array.
visualReferenceInput_baseScreenshots :: Lens' VisualReferenceInput (Maybe [BaseScreenshot])

-- | Specifies which canary run to use the screenshots from as the baseline
--   for future visual monitoring with this canary. Valid values are
--   <tt>nextrun</tt> to use the screenshots from the next run after this
--   update is made, <tt>lastrun</tt> to use the screenshots from the most
--   recent run before this update was made, or the value of <tt>Id</tt> in
--   the <a>CanaryRun</a> from any past run of this canary.
visualReferenceInput_baseCanaryRunId :: Lens' VisualReferenceInput Text

-- | If this canary performs visual monitoring by comparing screenshots,
--   this structure contains the ID of the canary run that is used as the
--   baseline for screenshots, and the coordinates of any parts of those
--   screenshots that are ignored during visual monitoring comparison.
--   
--   Visual monitoring is supported only on canaries running the
--   <b>syn-puppeteer-node-3.2</b> runtime or later.
--   
--   <i>See:</i> <a>newVisualReferenceOutput</a> smart constructor.
data VisualReferenceOutput
VisualReferenceOutput' :: Maybe [BaseScreenshot] -> Maybe Text -> VisualReferenceOutput

-- | An array of screenshots that are used as the baseline for comparisons
--   during visual monitoring.
[$sel:baseScreenshots:VisualReferenceOutput'] :: VisualReferenceOutput -> Maybe [BaseScreenshot]

-- | The ID of the canary run that produced the screenshots that are used
--   as the baseline for visual monitoring comparisons during future runs
--   of this canary.
[$sel:baseCanaryRunId:VisualReferenceOutput'] :: VisualReferenceOutput -> Maybe Text

-- | Create a value of <a>VisualReferenceOutput</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:baseScreenshots:VisualReferenceOutput'</a>,
--   <a>visualReferenceOutput_baseScreenshots</a> - An array of screenshots
--   that are used as the baseline for comparisons during visual
--   monitoring.
--   
--   <a>$sel:baseCanaryRunId:VisualReferenceOutput'</a>,
--   <a>visualReferenceOutput_baseCanaryRunId</a> - The ID of the canary
--   run that produced the screenshots that are used as the baseline for
--   visual monitoring comparisons during future runs of this canary.
newVisualReferenceOutput :: VisualReferenceOutput

-- | An array of screenshots that are used as the baseline for comparisons
--   during visual monitoring.
visualReferenceOutput_baseScreenshots :: Lens' VisualReferenceOutput (Maybe [BaseScreenshot])

-- | The ID of the canary run that produced the screenshots that are used
--   as the baseline for visual monitoring comparisons during future runs
--   of this canary.
visualReferenceOutput_baseCanaryRunId :: Lens' VisualReferenceOutput (Maybe Text)

-- | If this canary is to test an endpoint in a VPC, this structure
--   contains information about the subnets and security groups of the VPC
--   endpoint. For more information, see <a>Running a Canary in a VPC</a>.
--   
--   <i>See:</i> <a>newVpcConfigInput</a> smart constructor.
data VpcConfigInput
VpcConfigInput' :: Maybe [Text] -> Maybe [Text] -> VpcConfigInput

-- | The IDs of the security groups for this canary.
[$sel:securityGroupIds:VpcConfigInput'] :: VpcConfigInput -> Maybe [Text]

-- | The IDs of the subnets where this canary is to run.
[$sel:subnetIds:VpcConfigInput'] :: VpcConfigInput -> Maybe [Text]

-- | Create a value of <a>VpcConfigInput</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:securityGroupIds:VpcConfigInput'</a>,
--   <a>vpcConfigInput_securityGroupIds</a> - The IDs of the security
--   groups for this canary.
--   
--   <a>$sel:subnetIds:VpcConfigInput'</a>, <a>vpcConfigInput_subnetIds</a>
--   - The IDs of the subnets where this canary is to run.
newVpcConfigInput :: VpcConfigInput

-- | The IDs of the security groups for this canary.
vpcConfigInput_securityGroupIds :: Lens' VpcConfigInput (Maybe [Text])

-- | The IDs of the subnets where this canary is to run.
vpcConfigInput_subnetIds :: Lens' VpcConfigInput (Maybe [Text])

-- | If this canary is to test an endpoint in a VPC, this structure
--   contains information about the subnets and security groups of the VPC
--   endpoint. For more information, see <a>Running a Canary in a VPC</a>.
--   
--   <i>See:</i> <a>newVpcConfigOutput</a> smart constructor.
data VpcConfigOutput
VpcConfigOutput' :: Maybe [Text] -> Maybe [Text] -> Maybe Text -> VpcConfigOutput

-- | The IDs of the security groups for this canary.
[$sel:securityGroupIds:VpcConfigOutput'] :: VpcConfigOutput -> Maybe [Text]

-- | The IDs of the subnets where this canary is to run.
[$sel:subnetIds:VpcConfigOutput'] :: VpcConfigOutput -> Maybe [Text]

-- | The IDs of the VPC where this canary is to run.
[$sel:vpcId:VpcConfigOutput'] :: VpcConfigOutput -> Maybe Text

-- | Create a value of <a>VpcConfigOutput</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:securityGroupIds:VpcConfigOutput'</a>,
--   <a>vpcConfigOutput_securityGroupIds</a> - The IDs of the security
--   groups for this canary.
--   
--   <a>$sel:subnetIds:VpcConfigOutput'</a>,
--   <a>vpcConfigOutput_subnetIds</a> - The IDs of the subnets where this
--   canary is to run.
--   
--   <a>$sel:vpcId:VpcConfigOutput'</a>, <a>vpcConfigOutput_vpcId</a> - The
--   IDs of the VPC where this canary is to run.
newVpcConfigOutput :: VpcConfigOutput

-- | The IDs of the security groups for this canary.
vpcConfigOutput_securityGroupIds :: Lens' VpcConfigOutput (Maybe [Text])

-- | The IDs of the subnets where this canary is to run.
vpcConfigOutput_subnetIds :: Lens' VpcConfigOutput (Maybe [Text])

-- | The IDs of the VPC where this canary is to run.
vpcConfigOutput_vpcId :: Lens' VpcConfigOutput (Maybe Text)


-- | Assigns one or more tags (key-value pairs) to the specified canary.
--   
--   Tags can help you organize and categorize your resources. You can also
--   use them to scope user permissions, by granting a user permission to
--   access or change only resources with certain tag values.
--   
--   Tags don't have any semantic meaning to Amazon Web Services and are
--   interpreted strictly as strings of characters.
--   
--   You can use the <tt>TagResource</tt> action with a canary that already
--   has tags. If you specify a new tag key for the alarm, this tag is
--   appended to the list of tags associated with the alarm. If you specify
--   a tag key that is already associated with the alarm, the new tag value
--   that you specify replaces the previous value for that tag.
--   
--   You can associate as many as 50 tags with a canary.
module Network.AWS.Synthetics.TagResource

-- | <i>See:</i> <a>newTagResource</a> smart constructor.
data TagResource
TagResource' :: Text -> HashMap Text Text -> TagResource

-- | The ARN of the canary that you're adding tags to.
--   
--   The ARN format of a canary is
--   <tt>arn:aws:synthetics:Region:account-id:canary:canary-name </tt>.
[$sel:resourceArn:TagResource'] :: TagResource -> Text

-- | The list of key-value pairs to associate with the canary.
[$sel:tags:TagResource'] :: TagResource -> HashMap Text Text

-- | Create a value of <a>TagResource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:TagResource'</a>, <a>tagResource_resourceArn</a> -
--   The ARN of the canary that you're adding tags to.
--   
--   The ARN format of a canary is
--   <tt>arn:aws:synthetics:Region:account-id:canary:canary-name </tt>.
--   
--   <a>$sel:tags:TagResource'</a>, <a>tagResource_tags</a> - The list of
--   key-value pairs to associate with the canary.
newTagResource :: Text -> TagResource

-- | The ARN of the canary that you're adding tags to.
--   
--   The ARN format of a canary is
--   <tt>arn:aws:synthetics:Region:account-id:canary:canary-name </tt>.
tagResource_resourceArn :: Lens' TagResource Text

-- | The list of key-value pairs to associate with the canary.
tagResource_tags :: Lens' TagResource (HashMap Text Text)

-- | <i>See:</i> <a>newTagResourceResponse</a> smart constructor.
data TagResourceResponse
TagResourceResponse' :: Int -> TagResourceResponse

-- | The response's http status code.
[$sel:httpStatus:TagResourceResponse'] :: TagResourceResponse -> Int

-- | Create a value of <a>TagResourceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:TagResourceResponse'</a>,
--   <a>tagResourceResponse_httpStatus</a> - The response's http status
--   code.
newTagResourceResponse :: Int -> TagResourceResponse

-- | The response's http status code.
tagResourceResponse_httpStatus :: Lens' TagResourceResponse Int
instance GHC.Generics.Generic Network.AWS.Synthetics.TagResource.TagResource
instance GHC.Show.Show Network.AWS.Synthetics.TagResource.TagResource
instance GHC.Read.Read Network.AWS.Synthetics.TagResource.TagResource
instance GHC.Classes.Eq Network.AWS.Synthetics.TagResource.TagResource
instance GHC.Generics.Generic Network.AWS.Synthetics.TagResource.TagResourceResponse
instance GHC.Show.Show Network.AWS.Synthetics.TagResource.TagResourceResponse
instance GHC.Read.Read Network.AWS.Synthetics.TagResource.TagResourceResponse
instance GHC.Classes.Eq Network.AWS.Synthetics.TagResource.TagResourceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Synthetics.TagResource.TagResource
instance Control.DeepSeq.NFData Network.AWS.Synthetics.TagResource.TagResourceResponse
instance Data.Hashable.Class.Hashable Network.AWS.Synthetics.TagResource.TagResource
instance Control.DeepSeq.NFData Network.AWS.Synthetics.TagResource.TagResource
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Synthetics.TagResource.TagResource
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Synthetics.TagResource.TagResource
instance Network.AWS.Data.Path.ToPath Network.AWS.Synthetics.TagResource.TagResource
instance Network.AWS.Data.Query.ToQuery Network.AWS.Synthetics.TagResource.TagResource


-- | Stops the canary to prevent all future runs. If the canary is
--   currently running, Synthetics stops waiting for the current run of the
--   specified canary to complete. The run that is in progress completes on
--   its own, publishes metrics, and uploads artifacts, but it is not
--   recorded in Synthetics as a completed run.
--   
--   You can use <tt>StartCanary</tt> to start it running again with the
--   canary’s current schedule at any point in the future.
module Network.AWS.Synthetics.StopCanary

-- | <i>See:</i> <a>newStopCanary</a> smart constructor.
data StopCanary
StopCanary' :: Text -> StopCanary

-- | The name of the canary that you want to stop. To find the names of
--   your canaries, use <a>DescribeCanaries</a>.
[$sel:name:StopCanary'] :: StopCanary -> Text

-- | Create a value of <a>StopCanary</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:StopCanary'</a>, <a>stopCanary_name</a> - The name of the
--   canary that you want to stop. To find the names of your canaries, use
--   <a>DescribeCanaries</a>.
newStopCanary :: Text -> StopCanary

-- | The name of the canary that you want to stop. To find the names of
--   your canaries, use <a>DescribeCanaries</a>.
stopCanary_name :: Lens' StopCanary Text

-- | <i>See:</i> <a>newStopCanaryResponse</a> smart constructor.
data StopCanaryResponse
StopCanaryResponse' :: Int -> StopCanaryResponse

-- | The response's http status code.
[$sel:httpStatus:StopCanaryResponse'] :: StopCanaryResponse -> Int

-- | Create a value of <a>StopCanaryResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:StopCanaryResponse'</a>,
--   <a>stopCanaryResponse_httpStatus</a> - The response's http status
--   code.
newStopCanaryResponse :: Int -> StopCanaryResponse

-- | The response's http status code.
stopCanaryResponse_httpStatus :: Lens' StopCanaryResponse Int
instance GHC.Generics.Generic Network.AWS.Synthetics.StopCanary.StopCanary
instance GHC.Show.Show Network.AWS.Synthetics.StopCanary.StopCanary
instance GHC.Read.Read Network.AWS.Synthetics.StopCanary.StopCanary
instance GHC.Classes.Eq Network.AWS.Synthetics.StopCanary.StopCanary
instance GHC.Generics.Generic Network.AWS.Synthetics.StopCanary.StopCanaryResponse
instance GHC.Show.Show Network.AWS.Synthetics.StopCanary.StopCanaryResponse
instance GHC.Read.Read Network.AWS.Synthetics.StopCanary.StopCanaryResponse
instance GHC.Classes.Eq Network.AWS.Synthetics.StopCanary.StopCanaryResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Synthetics.StopCanary.StopCanary
instance Control.DeepSeq.NFData Network.AWS.Synthetics.StopCanary.StopCanaryResponse
instance Data.Hashable.Class.Hashable Network.AWS.Synthetics.StopCanary.StopCanary
instance Control.DeepSeq.NFData Network.AWS.Synthetics.StopCanary.StopCanary
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Synthetics.StopCanary.StopCanary
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Synthetics.StopCanary.StopCanary
instance Network.AWS.Data.Path.ToPath Network.AWS.Synthetics.StopCanary.StopCanary
instance Network.AWS.Data.Query.ToQuery Network.AWS.Synthetics.StopCanary.StopCanary


-- | Use this operation to run a canary that has already been created. The
--   frequency of the canary runs is determined by the value of the
--   canary's <tt>Schedule</tt>. To see a canary's schedule, use
--   <a>GetCanary</a>.
module Network.AWS.Synthetics.StartCanary

-- | <i>See:</i> <a>newStartCanary</a> smart constructor.
data StartCanary
StartCanary' :: Text -> StartCanary

-- | The name of the canary that you want to run. To find canary names, use
--   <a>DescribeCanaries</a>.
[$sel:name:StartCanary'] :: StartCanary -> Text

-- | Create a value of <a>StartCanary</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:StartCanary'</a>, <a>startCanary_name</a> - The name of
--   the canary that you want to run. To find canary names, use
--   <a>DescribeCanaries</a>.
newStartCanary :: Text -> StartCanary

-- | The name of the canary that you want to run. To find canary names, use
--   <a>DescribeCanaries</a>.
startCanary_name :: Lens' StartCanary Text

-- | <i>See:</i> <a>newStartCanaryResponse</a> smart constructor.
data StartCanaryResponse
StartCanaryResponse' :: Int -> StartCanaryResponse

-- | The response's http status code.
[$sel:httpStatus:StartCanaryResponse'] :: StartCanaryResponse -> Int

-- | Create a value of <a>StartCanaryResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:StartCanaryResponse'</a>,
--   <a>startCanaryResponse_httpStatus</a> - The response's http status
--   code.
newStartCanaryResponse :: Int -> StartCanaryResponse

-- | The response's http status code.
startCanaryResponse_httpStatus :: Lens' StartCanaryResponse Int
instance GHC.Generics.Generic Network.AWS.Synthetics.StartCanary.StartCanary
instance GHC.Show.Show Network.AWS.Synthetics.StartCanary.StartCanary
instance GHC.Read.Read Network.AWS.Synthetics.StartCanary.StartCanary
instance GHC.Classes.Eq Network.AWS.Synthetics.StartCanary.StartCanary
instance GHC.Generics.Generic Network.AWS.Synthetics.StartCanary.StartCanaryResponse
instance GHC.Show.Show Network.AWS.Synthetics.StartCanary.StartCanaryResponse
instance GHC.Read.Read Network.AWS.Synthetics.StartCanary.StartCanaryResponse
instance GHC.Classes.Eq Network.AWS.Synthetics.StartCanary.StartCanaryResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Synthetics.StartCanary.StartCanary
instance Control.DeepSeq.NFData Network.AWS.Synthetics.StartCanary.StartCanaryResponse
instance Data.Hashable.Class.Hashable Network.AWS.Synthetics.StartCanary.StartCanary
instance Control.DeepSeq.NFData Network.AWS.Synthetics.StartCanary.StartCanary
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Synthetics.StartCanary.StartCanary
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Synthetics.StartCanary.StartCanary
instance Network.AWS.Data.Path.ToPath Network.AWS.Synthetics.StartCanary.StartCanary
instance Network.AWS.Data.Query.ToQuery Network.AWS.Synthetics.StartCanary.StartCanary


-- | Displays the tags associated with a canary.
module Network.AWS.Synthetics.ListTagsForResource

-- | <i>See:</i> <a>newListTagsForResource</a> smart constructor.
data ListTagsForResource
ListTagsForResource' :: Text -> ListTagsForResource

-- | The ARN of the canary that you want to view tags for.
--   
--   The ARN format of a canary is
--   <tt>arn:aws:synthetics:Region:account-id:canary:canary-name </tt>.
[$sel:resourceArn:ListTagsForResource'] :: ListTagsForResource -> Text

-- | Create a value of <a>ListTagsForResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:ListTagsForResource'</a>,
--   <a>listTagsForResource_resourceArn</a> - The ARN of the canary that
--   you want to view tags for.
--   
--   The ARN format of a canary is
--   <tt>arn:aws:synthetics:Region:account-id:canary:canary-name </tt>.
newListTagsForResource :: Text -> ListTagsForResource

-- | The ARN of the canary that you want to view tags for.
--   
--   The ARN format of a canary is
--   <tt>arn:aws:synthetics:Region:account-id:canary:canary-name </tt>.
listTagsForResource_resourceArn :: Lens' ListTagsForResource Text

-- | <i>See:</i> <a>newListTagsForResourceResponse</a> smart constructor.
data ListTagsForResourceResponse
ListTagsForResourceResponse' :: Maybe (HashMap Text Text) -> Int -> ListTagsForResourceResponse

-- | The list of tag keys and values associated with the canary that you
--   specified.
[$sel:tags:ListTagsForResourceResponse'] :: ListTagsForResourceResponse -> Maybe (HashMap Text Text)

-- | The response's http status code.
[$sel:httpStatus:ListTagsForResourceResponse'] :: ListTagsForResourceResponse -> Int

-- | Create a value of <a>ListTagsForResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_tags</a> - The list of tag keys and
--   values associated with the canary that you specified.
--   
--   <a>$sel:httpStatus:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_httpStatus</a> - The response's http
--   status code.
newListTagsForResourceResponse :: Int -> ListTagsForResourceResponse

-- | The list of tag keys and values associated with the canary that you
--   specified.
listTagsForResourceResponse_tags :: Lens' ListTagsForResourceResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
listTagsForResourceResponse_httpStatus :: Lens' ListTagsForResourceResponse Int
instance GHC.Generics.Generic Network.AWS.Synthetics.ListTagsForResource.ListTagsForResource
instance GHC.Show.Show Network.AWS.Synthetics.ListTagsForResource.ListTagsForResource
instance GHC.Read.Read Network.AWS.Synthetics.ListTagsForResource.ListTagsForResource
instance GHC.Classes.Eq Network.AWS.Synthetics.ListTagsForResource.ListTagsForResource
instance GHC.Generics.Generic Network.AWS.Synthetics.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Show.Show Network.AWS.Synthetics.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Read.Read Network.AWS.Synthetics.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Classes.Eq Network.AWS.Synthetics.ListTagsForResource.ListTagsForResourceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Synthetics.ListTagsForResource.ListTagsForResource
instance Control.DeepSeq.NFData Network.AWS.Synthetics.ListTagsForResource.ListTagsForResourceResponse
instance Data.Hashable.Class.Hashable Network.AWS.Synthetics.ListTagsForResource.ListTagsForResource
instance Control.DeepSeq.NFData Network.AWS.Synthetics.ListTagsForResource.ListTagsForResource
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Synthetics.ListTagsForResource.ListTagsForResource
instance Network.AWS.Data.Path.ToPath Network.AWS.Synthetics.ListTagsForResource.ListTagsForResource
instance Network.AWS.Data.Query.ToQuery Network.AWS.Synthetics.ListTagsForResource.ListTagsForResource


-- | Retrieves a list of runs for a specified canary.
module Network.AWS.Synthetics.GetCanaryRuns

-- | <i>See:</i> <a>newGetCanaryRuns</a> smart constructor.
data GetCanaryRuns
GetCanaryRuns' :: Maybe Text -> Maybe Natural -> Text -> GetCanaryRuns

-- | A token that indicates that there is more data available. You can use
--   this token in a subsequent <tt>GetCanaryRuns</tt> operation to
--   retrieve the next set of results.
[$sel:nextToken:GetCanaryRuns'] :: GetCanaryRuns -> Maybe Text

-- | Specify this parameter to limit how many runs are returned each time
--   you use the <tt>GetCanaryRuns</tt> operation. If you omit this
--   parameter, the default of 100 is used.
[$sel:maxResults:GetCanaryRuns'] :: GetCanaryRuns -> Maybe Natural

-- | The name of the canary that you want to see runs for.
[$sel:name:GetCanaryRuns'] :: GetCanaryRuns -> Text

-- | Create a value of <a>GetCanaryRuns</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetCanaryRuns'</a>, <a>getCanaryRuns_nextToken</a> -
--   A token that indicates that there is more data available. You can use
--   this token in a subsequent <tt>GetCanaryRuns</tt> operation to
--   retrieve the next set of results.
--   
--   <a>$sel:maxResults:GetCanaryRuns'</a>, <a>getCanaryRuns_maxResults</a>
--   - Specify this parameter to limit how many runs are returned each time
--   you use the <tt>GetCanaryRuns</tt> operation. If you omit this
--   parameter, the default of 100 is used.
--   
--   <a>$sel:name:GetCanaryRuns'</a>, <a>getCanaryRuns_name</a> - The name
--   of the canary that you want to see runs for.
newGetCanaryRuns :: Text -> GetCanaryRuns

-- | A token that indicates that there is more data available. You can use
--   this token in a subsequent <tt>GetCanaryRuns</tt> operation to
--   retrieve the next set of results.
getCanaryRuns_nextToken :: Lens' GetCanaryRuns (Maybe Text)

-- | Specify this parameter to limit how many runs are returned each time
--   you use the <tt>GetCanaryRuns</tt> operation. If you omit this
--   parameter, the default of 100 is used.
getCanaryRuns_maxResults :: Lens' GetCanaryRuns (Maybe Natural)

-- | The name of the canary that you want to see runs for.
getCanaryRuns_name :: Lens' GetCanaryRuns Text

-- | <i>See:</i> <a>newGetCanaryRunsResponse</a> smart constructor.
data GetCanaryRunsResponse
GetCanaryRunsResponse' :: Maybe Text -> Maybe [CanaryRun] -> Int -> GetCanaryRunsResponse

-- | A token that indicates that there is more data available. You can use
--   this token in a subsequent <tt>GetCanaryRuns</tt> operation to
--   retrieve the next set of results.
[$sel:nextToken:GetCanaryRunsResponse'] :: GetCanaryRunsResponse -> Maybe Text

-- | An array of structures. Each structure contains the details of one of
--   the retrieved canary runs.
[$sel:canaryRuns:GetCanaryRunsResponse'] :: GetCanaryRunsResponse -> Maybe [CanaryRun]

-- | The response's http status code.
[$sel:httpStatus:GetCanaryRunsResponse'] :: GetCanaryRunsResponse -> Int

-- | Create a value of <a>GetCanaryRunsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetCanaryRuns'</a>,
--   <a>getCanaryRunsResponse_nextToken</a> - A token that indicates that
--   there is more data available. You can use this token in a subsequent
--   <tt>GetCanaryRuns</tt> operation to retrieve the next set of results.
--   
--   <a>$sel:canaryRuns:GetCanaryRunsResponse'</a>,
--   <a>getCanaryRunsResponse_canaryRuns</a> - An array of structures. Each
--   structure contains the details of one of the retrieved canary runs.
--   
--   <a>$sel:httpStatus:GetCanaryRunsResponse'</a>,
--   <a>getCanaryRunsResponse_httpStatus</a> - The response's http status
--   code.
newGetCanaryRunsResponse :: Int -> GetCanaryRunsResponse

-- | A token that indicates that there is more data available. You can use
--   this token in a subsequent <tt>GetCanaryRuns</tt> operation to
--   retrieve the next set of results.
getCanaryRunsResponse_nextToken :: Lens' GetCanaryRunsResponse (Maybe Text)

-- | An array of structures. Each structure contains the details of one of
--   the retrieved canary runs.
getCanaryRunsResponse_canaryRuns :: Lens' GetCanaryRunsResponse (Maybe [CanaryRun])

-- | The response's http status code.
getCanaryRunsResponse_httpStatus :: Lens' GetCanaryRunsResponse Int
instance GHC.Generics.Generic Network.AWS.Synthetics.GetCanaryRuns.GetCanaryRuns
instance GHC.Show.Show Network.AWS.Synthetics.GetCanaryRuns.GetCanaryRuns
instance GHC.Read.Read Network.AWS.Synthetics.GetCanaryRuns.GetCanaryRuns
instance GHC.Classes.Eq Network.AWS.Synthetics.GetCanaryRuns.GetCanaryRuns
instance GHC.Generics.Generic Network.AWS.Synthetics.GetCanaryRuns.GetCanaryRunsResponse
instance GHC.Show.Show Network.AWS.Synthetics.GetCanaryRuns.GetCanaryRunsResponse
instance GHC.Read.Read Network.AWS.Synthetics.GetCanaryRuns.GetCanaryRunsResponse
instance GHC.Classes.Eq Network.AWS.Synthetics.GetCanaryRuns.GetCanaryRunsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Synthetics.GetCanaryRuns.GetCanaryRuns
instance Control.DeepSeq.NFData Network.AWS.Synthetics.GetCanaryRuns.GetCanaryRunsResponse
instance Data.Hashable.Class.Hashable Network.AWS.Synthetics.GetCanaryRuns.GetCanaryRuns
instance Control.DeepSeq.NFData Network.AWS.Synthetics.GetCanaryRuns.GetCanaryRuns
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Synthetics.GetCanaryRuns.GetCanaryRuns
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Synthetics.GetCanaryRuns.GetCanaryRuns
instance Network.AWS.Data.Path.ToPath Network.AWS.Synthetics.GetCanaryRuns.GetCanaryRuns
instance Network.AWS.Data.Query.ToQuery Network.AWS.Synthetics.GetCanaryRuns.GetCanaryRuns


-- | Retrieves complete information about one canary. You must specify the
--   name of the canary that you want. To get a list of canaries and their
--   names, use <a>DescribeCanaries</a>.
module Network.AWS.Synthetics.GetCanary

-- | <i>See:</i> <a>newGetCanary</a> smart constructor.
data GetCanary
GetCanary' :: Text -> GetCanary

-- | The name of the canary that you want details for.
[$sel:name:GetCanary'] :: GetCanary -> Text

-- | Create a value of <a>GetCanary</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:GetCanary'</a>, <a>getCanary_name</a> - The name of the
--   canary that you want details for.
newGetCanary :: Text -> GetCanary

-- | The name of the canary that you want details for.
getCanary_name :: Lens' GetCanary Text

-- | <i>See:</i> <a>newGetCanaryResponse</a> smart constructor.
data GetCanaryResponse
GetCanaryResponse' :: Maybe Canary -> Int -> GetCanaryResponse

-- | A strucure that contains the full information about the canary.
[$sel:canary:GetCanaryResponse'] :: GetCanaryResponse -> Maybe Canary

-- | The response's http status code.
[$sel:httpStatus:GetCanaryResponse'] :: GetCanaryResponse -> Int

-- | Create a value of <a>GetCanaryResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:canary:GetCanaryResponse'</a>, <a>getCanaryResponse_canary</a>
--   - A strucure that contains the full information about the canary.
--   
--   <a>$sel:httpStatus:GetCanaryResponse'</a>,
--   <a>getCanaryResponse_httpStatus</a> - The response's http status code.
newGetCanaryResponse :: Int -> GetCanaryResponse

-- | A strucure that contains the full information about the canary.
getCanaryResponse_canary :: Lens' GetCanaryResponse (Maybe Canary)

-- | The response's http status code.
getCanaryResponse_httpStatus :: Lens' GetCanaryResponse Int
instance GHC.Generics.Generic Network.AWS.Synthetics.GetCanary.GetCanary
instance GHC.Show.Show Network.AWS.Synthetics.GetCanary.GetCanary
instance GHC.Read.Read Network.AWS.Synthetics.GetCanary.GetCanary
instance GHC.Classes.Eq Network.AWS.Synthetics.GetCanary.GetCanary
instance GHC.Generics.Generic Network.AWS.Synthetics.GetCanary.GetCanaryResponse
instance GHC.Show.Show Network.AWS.Synthetics.GetCanary.GetCanaryResponse
instance GHC.Read.Read Network.AWS.Synthetics.GetCanary.GetCanaryResponse
instance GHC.Classes.Eq Network.AWS.Synthetics.GetCanary.GetCanaryResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Synthetics.GetCanary.GetCanary
instance Control.DeepSeq.NFData Network.AWS.Synthetics.GetCanary.GetCanaryResponse
instance Data.Hashable.Class.Hashable Network.AWS.Synthetics.GetCanary.GetCanary
instance Control.DeepSeq.NFData Network.AWS.Synthetics.GetCanary.GetCanary
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Synthetics.GetCanary.GetCanary
instance Network.AWS.Data.Path.ToPath Network.AWS.Synthetics.GetCanary.GetCanary
instance Network.AWS.Data.Query.ToQuery Network.AWS.Synthetics.GetCanary.GetCanary


-- | Returns a list of Synthetics canary runtime versions. For more
--   information, see <a>Canary Runtime Versions</a>.
module Network.AWS.Synthetics.DescribeRuntimeVersions

-- | <i>See:</i> <a>newDescribeRuntimeVersions</a> smart constructor.
data DescribeRuntimeVersions
DescribeRuntimeVersions' :: Maybe Text -> Maybe Natural -> DescribeRuntimeVersions

-- | A token that indicates that there is more data available. You can use
--   this token in a subsequent <tt>DescribeRuntimeVersions</tt> operation
--   to retrieve the next set of results.
[$sel:nextToken:DescribeRuntimeVersions'] :: DescribeRuntimeVersions -> Maybe Text

-- | Specify this parameter to limit how many runs are returned each time
--   you use the <tt>DescribeRuntimeVersions</tt> operation. If you omit
--   this parameter, the default of 100 is used.
[$sel:maxResults:DescribeRuntimeVersions'] :: DescribeRuntimeVersions -> Maybe Natural

-- | Create a value of <a>DescribeRuntimeVersions</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeRuntimeVersions'</a>,
--   <a>describeRuntimeVersions_nextToken</a> - A token that indicates that
--   there is more data available. You can use this token in a subsequent
--   <tt>DescribeRuntimeVersions</tt> operation to retrieve the next set of
--   results.
--   
--   <a>$sel:maxResults:DescribeRuntimeVersions'</a>,
--   <a>describeRuntimeVersions_maxResults</a> - Specify this parameter to
--   limit how many runs are returned each time you use the
--   <tt>DescribeRuntimeVersions</tt> operation. If you omit this
--   parameter, the default of 100 is used.
newDescribeRuntimeVersions :: DescribeRuntimeVersions

-- | A token that indicates that there is more data available. You can use
--   this token in a subsequent <tt>DescribeRuntimeVersions</tt> operation
--   to retrieve the next set of results.
describeRuntimeVersions_nextToken :: Lens' DescribeRuntimeVersions (Maybe Text)

-- | Specify this parameter to limit how many runs are returned each time
--   you use the <tt>DescribeRuntimeVersions</tt> operation. If you omit
--   this parameter, the default of 100 is used.
describeRuntimeVersions_maxResults :: Lens' DescribeRuntimeVersions (Maybe Natural)

-- | <i>See:</i> <a>newDescribeRuntimeVersionsResponse</a> smart
--   constructor.
data DescribeRuntimeVersionsResponse
DescribeRuntimeVersionsResponse' :: Maybe [RuntimeVersion] -> Maybe Text -> Int -> DescribeRuntimeVersionsResponse

-- | An array of objects that display the details about each Synthetics
--   canary runtime version.
[$sel:runtimeVersions:DescribeRuntimeVersionsResponse'] :: DescribeRuntimeVersionsResponse -> Maybe [RuntimeVersion]

-- | A token that indicates that there is more data available. You can use
--   this token in a subsequent <tt>DescribeRuntimeVersions</tt> operation
--   to retrieve the next set of results.
[$sel:nextToken:DescribeRuntimeVersionsResponse'] :: DescribeRuntimeVersionsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:DescribeRuntimeVersionsResponse'] :: DescribeRuntimeVersionsResponse -> Int

-- | Create a value of <a>DescribeRuntimeVersionsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:runtimeVersions:DescribeRuntimeVersionsResponse'</a>,
--   <a>describeRuntimeVersionsResponse_runtimeVersions</a> - An array of
--   objects that display the details about each Synthetics canary runtime
--   version.
--   
--   <a>$sel:nextToken:DescribeRuntimeVersions'</a>,
--   <a>describeRuntimeVersionsResponse_nextToken</a> - A token that
--   indicates that there is more data available. You can use this token in
--   a subsequent <tt>DescribeRuntimeVersions</tt> operation to retrieve
--   the next set of results.
--   
--   <a>$sel:httpStatus:DescribeRuntimeVersionsResponse'</a>,
--   <a>describeRuntimeVersionsResponse_httpStatus</a> - The response's
--   http status code.
newDescribeRuntimeVersionsResponse :: Int -> DescribeRuntimeVersionsResponse

-- | An array of objects that display the details about each Synthetics
--   canary runtime version.
describeRuntimeVersionsResponse_runtimeVersions :: Lens' DescribeRuntimeVersionsResponse (Maybe [RuntimeVersion])

-- | A token that indicates that there is more data available. You can use
--   this token in a subsequent <tt>DescribeRuntimeVersions</tt> operation
--   to retrieve the next set of results.
describeRuntimeVersionsResponse_nextToken :: Lens' DescribeRuntimeVersionsResponse (Maybe Text)

-- | The response's http status code.
describeRuntimeVersionsResponse_httpStatus :: Lens' DescribeRuntimeVersionsResponse Int
instance GHC.Generics.Generic Network.AWS.Synthetics.DescribeRuntimeVersions.DescribeRuntimeVersions
instance GHC.Show.Show Network.AWS.Synthetics.DescribeRuntimeVersions.DescribeRuntimeVersions
instance GHC.Read.Read Network.AWS.Synthetics.DescribeRuntimeVersions.DescribeRuntimeVersions
instance GHC.Classes.Eq Network.AWS.Synthetics.DescribeRuntimeVersions.DescribeRuntimeVersions
instance GHC.Generics.Generic Network.AWS.Synthetics.DescribeRuntimeVersions.DescribeRuntimeVersionsResponse
instance GHC.Show.Show Network.AWS.Synthetics.DescribeRuntimeVersions.DescribeRuntimeVersionsResponse
instance GHC.Read.Read Network.AWS.Synthetics.DescribeRuntimeVersions.DescribeRuntimeVersionsResponse
instance GHC.Classes.Eq Network.AWS.Synthetics.DescribeRuntimeVersions.DescribeRuntimeVersionsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Synthetics.DescribeRuntimeVersions.DescribeRuntimeVersions
instance Control.DeepSeq.NFData Network.AWS.Synthetics.DescribeRuntimeVersions.DescribeRuntimeVersionsResponse
instance Data.Hashable.Class.Hashable Network.AWS.Synthetics.DescribeRuntimeVersions.DescribeRuntimeVersions
instance Control.DeepSeq.NFData Network.AWS.Synthetics.DescribeRuntimeVersions.DescribeRuntimeVersions
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Synthetics.DescribeRuntimeVersions.DescribeRuntimeVersions
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Synthetics.DescribeRuntimeVersions.DescribeRuntimeVersions
instance Network.AWS.Data.Path.ToPath Network.AWS.Synthetics.DescribeRuntimeVersions.DescribeRuntimeVersions
instance Network.AWS.Data.Query.ToQuery Network.AWS.Synthetics.DescribeRuntimeVersions.DescribeRuntimeVersions


-- | Use this operation to see information from the most recent run of each
--   canary that you have created.
module Network.AWS.Synthetics.DescribeCanariesLastRun

-- | <i>See:</i> <a>newDescribeCanariesLastRun</a> smart constructor.
data DescribeCanariesLastRun
DescribeCanariesLastRun' :: Maybe Text -> Maybe Natural -> DescribeCanariesLastRun

-- | A token that indicates that there is more data available. You can use
--   this token in a subsequent <tt>DescribeCanaries</tt> operation to
--   retrieve the next set of results.
[$sel:nextToken:DescribeCanariesLastRun'] :: DescribeCanariesLastRun -> Maybe Text

-- | Specify this parameter to limit how many runs are returned each time
--   you use the <tt>DescribeLastRun</tt> operation. If you omit this
--   parameter, the default of 100 is used.
[$sel:maxResults:DescribeCanariesLastRun'] :: DescribeCanariesLastRun -> Maybe Natural

-- | Create a value of <a>DescribeCanariesLastRun</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeCanariesLastRun'</a>,
--   <a>describeCanariesLastRun_nextToken</a> - A token that indicates that
--   there is more data available. You can use this token in a subsequent
--   <tt>DescribeCanaries</tt> operation to retrieve the next set of
--   results.
--   
--   <a>$sel:maxResults:DescribeCanariesLastRun'</a>,
--   <a>describeCanariesLastRun_maxResults</a> - Specify this parameter to
--   limit how many runs are returned each time you use the
--   <tt>DescribeLastRun</tt> operation. If you omit this parameter, the
--   default of 100 is used.
newDescribeCanariesLastRun :: DescribeCanariesLastRun

-- | A token that indicates that there is more data available. You can use
--   this token in a subsequent <tt>DescribeCanaries</tt> operation to
--   retrieve the next set of results.
describeCanariesLastRun_nextToken :: Lens' DescribeCanariesLastRun (Maybe Text)

-- | Specify this parameter to limit how many runs are returned each time
--   you use the <tt>DescribeLastRun</tt> operation. If you omit this
--   parameter, the default of 100 is used.
describeCanariesLastRun_maxResults :: Lens' DescribeCanariesLastRun (Maybe Natural)

-- | <i>See:</i> <a>newDescribeCanariesLastRunResponse</a> smart
--   constructor.
data DescribeCanariesLastRunResponse
DescribeCanariesLastRunResponse' :: Maybe Text -> Maybe [CanaryLastRun] -> Int -> DescribeCanariesLastRunResponse

-- | A token that indicates that there is more data available. You can use
--   this token in a subsequent <tt>DescribeCanariesLastRun</tt> operation
--   to retrieve the next set of results.
[$sel:nextToken:DescribeCanariesLastRunResponse'] :: DescribeCanariesLastRunResponse -> Maybe Text

-- | An array that contains the information from the most recent run of
--   each canary.
[$sel:canariesLastRun:DescribeCanariesLastRunResponse'] :: DescribeCanariesLastRunResponse -> Maybe [CanaryLastRun]

-- | The response's http status code.
[$sel:httpStatus:DescribeCanariesLastRunResponse'] :: DescribeCanariesLastRunResponse -> Int

-- | Create a value of <a>DescribeCanariesLastRunResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeCanariesLastRun'</a>,
--   <a>describeCanariesLastRunResponse_nextToken</a> - A token that
--   indicates that there is more data available. You can use this token in
--   a subsequent <tt>DescribeCanariesLastRun</tt> operation to retrieve
--   the next set of results.
--   
--   <a>$sel:canariesLastRun:DescribeCanariesLastRunResponse'</a>,
--   <a>describeCanariesLastRunResponse_canariesLastRun</a> - An array that
--   contains the information from the most recent run of each canary.
--   
--   <a>$sel:httpStatus:DescribeCanariesLastRunResponse'</a>,
--   <a>describeCanariesLastRunResponse_httpStatus</a> - The response's
--   http status code.
newDescribeCanariesLastRunResponse :: Int -> DescribeCanariesLastRunResponse

-- | A token that indicates that there is more data available. You can use
--   this token in a subsequent <tt>DescribeCanariesLastRun</tt> operation
--   to retrieve the next set of results.
describeCanariesLastRunResponse_nextToken :: Lens' DescribeCanariesLastRunResponse (Maybe Text)

-- | An array that contains the information from the most recent run of
--   each canary.
describeCanariesLastRunResponse_canariesLastRun :: Lens' DescribeCanariesLastRunResponse (Maybe [CanaryLastRun])

-- | The response's http status code.
describeCanariesLastRunResponse_httpStatus :: Lens' DescribeCanariesLastRunResponse Int
instance GHC.Generics.Generic Network.AWS.Synthetics.DescribeCanariesLastRun.DescribeCanariesLastRun
instance GHC.Show.Show Network.AWS.Synthetics.DescribeCanariesLastRun.DescribeCanariesLastRun
instance GHC.Read.Read Network.AWS.Synthetics.DescribeCanariesLastRun.DescribeCanariesLastRun
instance GHC.Classes.Eq Network.AWS.Synthetics.DescribeCanariesLastRun.DescribeCanariesLastRun
instance GHC.Generics.Generic Network.AWS.Synthetics.DescribeCanariesLastRun.DescribeCanariesLastRunResponse
instance GHC.Show.Show Network.AWS.Synthetics.DescribeCanariesLastRun.DescribeCanariesLastRunResponse
instance GHC.Read.Read Network.AWS.Synthetics.DescribeCanariesLastRun.DescribeCanariesLastRunResponse
instance GHC.Classes.Eq Network.AWS.Synthetics.DescribeCanariesLastRun.DescribeCanariesLastRunResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Synthetics.DescribeCanariesLastRun.DescribeCanariesLastRun
instance Control.DeepSeq.NFData Network.AWS.Synthetics.DescribeCanariesLastRun.DescribeCanariesLastRunResponse
instance Data.Hashable.Class.Hashable Network.AWS.Synthetics.DescribeCanariesLastRun.DescribeCanariesLastRun
instance Control.DeepSeq.NFData Network.AWS.Synthetics.DescribeCanariesLastRun.DescribeCanariesLastRun
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Synthetics.DescribeCanariesLastRun.DescribeCanariesLastRun
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Synthetics.DescribeCanariesLastRun.DescribeCanariesLastRun
instance Network.AWS.Data.Path.ToPath Network.AWS.Synthetics.DescribeCanariesLastRun.DescribeCanariesLastRun
instance Network.AWS.Data.Query.ToQuery Network.AWS.Synthetics.DescribeCanariesLastRun.DescribeCanariesLastRun


-- | This operation returns a list of the canaries in your account, along
--   with full details about each canary.
--   
--   This operation does not have resource-level authorization, so if a
--   user is able to use <tt>DescribeCanaries</tt>, the user can see all of
--   the canaries in the account. A deny policy can only be used to
--   restrict access to all canaries. It cannot be used on specific
--   resources.
module Network.AWS.Synthetics.DescribeCanaries

-- | <i>See:</i> <a>newDescribeCanaries</a> smart constructor.
data DescribeCanaries
DescribeCanaries' :: Maybe Text -> Maybe Natural -> DescribeCanaries

-- | A token that indicates that there is more data available. You can use
--   this token in a subsequent operation to retrieve the next set of
--   results.
[$sel:nextToken:DescribeCanaries'] :: DescribeCanaries -> Maybe Text

-- | Specify this parameter to limit how many canaries are returned each
--   time you use the <tt>DescribeCanaries</tt> operation. If you omit this
--   parameter, the default of 100 is used.
[$sel:maxResults:DescribeCanaries'] :: DescribeCanaries -> Maybe Natural

-- | Create a value of <a>DescribeCanaries</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeCanaries'</a>,
--   <a>describeCanaries_nextToken</a> - A token that indicates that there
--   is more data available. You can use this token in a subsequent
--   operation to retrieve the next set of results.
--   
--   <a>$sel:maxResults:DescribeCanaries'</a>,
--   <a>describeCanaries_maxResults</a> - Specify this parameter to limit
--   how many canaries are returned each time you use the
--   <tt>DescribeCanaries</tt> operation. If you omit this parameter, the
--   default of 100 is used.
newDescribeCanaries :: DescribeCanaries

-- | A token that indicates that there is more data available. You can use
--   this token in a subsequent operation to retrieve the next set of
--   results.
describeCanaries_nextToken :: Lens' DescribeCanaries (Maybe Text)

-- | Specify this parameter to limit how many canaries are returned each
--   time you use the <tt>DescribeCanaries</tt> operation. If you omit this
--   parameter, the default of 100 is used.
describeCanaries_maxResults :: Lens' DescribeCanaries (Maybe Natural)

-- | <i>See:</i> <a>newDescribeCanariesResponse</a> smart constructor.
data DescribeCanariesResponse
DescribeCanariesResponse' :: Maybe [Canary] -> Maybe Text -> Int -> DescribeCanariesResponse

-- | Returns an array. Each item in the array contains the full information
--   about one canary.
[$sel:canaries:DescribeCanariesResponse'] :: DescribeCanariesResponse -> Maybe [Canary]

-- | A token that indicates that there is more data available. You can use
--   this token in a subsequent <tt>DescribeCanaries</tt> operation to
--   retrieve the next set of results.
[$sel:nextToken:DescribeCanariesResponse'] :: DescribeCanariesResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:DescribeCanariesResponse'] :: DescribeCanariesResponse -> Int

-- | Create a value of <a>DescribeCanariesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:canaries:DescribeCanariesResponse'</a>,
--   <a>describeCanariesResponse_canaries</a> - Returns an array. Each item
--   in the array contains the full information about one canary.
--   
--   <a>$sel:nextToken:DescribeCanaries'</a>,
--   <a>describeCanariesResponse_nextToken</a> - A token that indicates
--   that there is more data available. You can use this token in a
--   subsequent <tt>DescribeCanaries</tt> operation to retrieve the next
--   set of results.
--   
--   <a>$sel:httpStatus:DescribeCanariesResponse'</a>,
--   <a>describeCanariesResponse_httpStatus</a> - The response's http
--   status code.
newDescribeCanariesResponse :: Int -> DescribeCanariesResponse

-- | Returns an array. Each item in the array contains the full information
--   about one canary.
describeCanariesResponse_canaries :: Lens' DescribeCanariesResponse (Maybe [Canary])

-- | A token that indicates that there is more data available. You can use
--   this token in a subsequent <tt>DescribeCanaries</tt> operation to
--   retrieve the next set of results.
describeCanariesResponse_nextToken :: Lens' DescribeCanariesResponse (Maybe Text)

-- | The response's http status code.
describeCanariesResponse_httpStatus :: Lens' DescribeCanariesResponse Int
instance GHC.Generics.Generic Network.AWS.Synthetics.DescribeCanaries.DescribeCanaries
instance GHC.Show.Show Network.AWS.Synthetics.DescribeCanaries.DescribeCanaries
instance GHC.Read.Read Network.AWS.Synthetics.DescribeCanaries.DescribeCanaries
instance GHC.Classes.Eq Network.AWS.Synthetics.DescribeCanaries.DescribeCanaries
instance GHC.Generics.Generic Network.AWS.Synthetics.DescribeCanaries.DescribeCanariesResponse
instance GHC.Show.Show Network.AWS.Synthetics.DescribeCanaries.DescribeCanariesResponse
instance GHC.Read.Read Network.AWS.Synthetics.DescribeCanaries.DescribeCanariesResponse
instance GHC.Classes.Eq Network.AWS.Synthetics.DescribeCanaries.DescribeCanariesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Synthetics.DescribeCanaries.DescribeCanaries
instance Control.DeepSeq.NFData Network.AWS.Synthetics.DescribeCanaries.DescribeCanariesResponse
instance Data.Hashable.Class.Hashable Network.AWS.Synthetics.DescribeCanaries.DescribeCanaries
instance Control.DeepSeq.NFData Network.AWS.Synthetics.DescribeCanaries.DescribeCanaries
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Synthetics.DescribeCanaries.DescribeCanaries
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Synthetics.DescribeCanaries.DescribeCanaries
instance Network.AWS.Data.Path.ToPath Network.AWS.Synthetics.DescribeCanaries.DescribeCanaries
instance Network.AWS.Data.Query.ToQuery Network.AWS.Synthetics.DescribeCanaries.DescribeCanaries


-- | Permanently deletes the specified canary.
--   
--   When you delete a canary, resources used and created by the canary are
--   not automatically deleted. After you delete a canary that you do not
--   intend to use again, you should also delete the following:
--   
--   <ul>
--   <li>The Lambda functions and layers used by this canary. These have
--   the prefix <tt>cwsyn-MyCanaryName </tt>.</li>
--   <li>The CloudWatch alarms created for this canary. These alarms have a
--   name of <tt>Synthetics-SharpDrop-Alarm-MyCanaryName </tt>.</li>
--   <li>Amazon S3 objects and buckets, such as the canary's artifact
--   location.</li>
--   <li>IAM roles created for the canary. If they were created in the
--   console, these roles have the name <tt>
--   role/service-role/CloudWatchSyntheticsRole-MyCanaryName </tt>.</li>
--   <li>CloudWatch Logs log groups created for the canary. These logs
--   groups have the name <tt>/aws/lambda/cwsyn-MyCanaryName </tt>.</li>
--   </ul>
--   
--   Before you delete a canary, you might want to use <tt>GetCanary</tt>
--   to display the information about this canary. Make note of the
--   information returned by this operation so that you can delete these
--   resources after you delete the canary.
module Network.AWS.Synthetics.DeleteCanary

-- | <i>See:</i> <a>newDeleteCanary</a> smart constructor.
data DeleteCanary
DeleteCanary' :: Text -> DeleteCanary

-- | The name of the canary that you want to delete. To find the names of
--   your canaries, use <a>DescribeCanaries</a>.
[$sel:name:DeleteCanary'] :: DeleteCanary -> Text

-- | Create a value of <a>DeleteCanary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:DeleteCanary'</a>, <a>deleteCanary_name</a> - The name of
--   the canary that you want to delete. To find the names of your
--   canaries, use <a>DescribeCanaries</a>.
newDeleteCanary :: Text -> DeleteCanary

-- | The name of the canary that you want to delete. To find the names of
--   your canaries, use <a>DescribeCanaries</a>.
deleteCanary_name :: Lens' DeleteCanary Text

-- | <i>See:</i> <a>newDeleteCanaryResponse</a> smart constructor.
data DeleteCanaryResponse
DeleteCanaryResponse' :: Int -> DeleteCanaryResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteCanaryResponse'] :: DeleteCanaryResponse -> Int

-- | Create a value of <a>DeleteCanaryResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteCanaryResponse'</a>,
--   <a>deleteCanaryResponse_httpStatus</a> - The response's http status
--   code.
newDeleteCanaryResponse :: Int -> DeleteCanaryResponse

-- | The response's http status code.
deleteCanaryResponse_httpStatus :: Lens' DeleteCanaryResponse Int
instance GHC.Generics.Generic Network.AWS.Synthetics.DeleteCanary.DeleteCanary
instance GHC.Show.Show Network.AWS.Synthetics.DeleteCanary.DeleteCanary
instance GHC.Read.Read Network.AWS.Synthetics.DeleteCanary.DeleteCanary
instance GHC.Classes.Eq Network.AWS.Synthetics.DeleteCanary.DeleteCanary
instance GHC.Generics.Generic Network.AWS.Synthetics.DeleteCanary.DeleteCanaryResponse
instance GHC.Show.Show Network.AWS.Synthetics.DeleteCanary.DeleteCanaryResponse
instance GHC.Read.Read Network.AWS.Synthetics.DeleteCanary.DeleteCanaryResponse
instance GHC.Classes.Eq Network.AWS.Synthetics.DeleteCanary.DeleteCanaryResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Synthetics.DeleteCanary.DeleteCanary
instance Control.DeepSeq.NFData Network.AWS.Synthetics.DeleteCanary.DeleteCanaryResponse
instance Data.Hashable.Class.Hashable Network.AWS.Synthetics.DeleteCanary.DeleteCanary
instance Control.DeepSeq.NFData Network.AWS.Synthetics.DeleteCanary.DeleteCanary
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Synthetics.DeleteCanary.DeleteCanary
instance Network.AWS.Data.Path.ToPath Network.AWS.Synthetics.DeleteCanary.DeleteCanary
instance Network.AWS.Data.Query.ToQuery Network.AWS.Synthetics.DeleteCanary.DeleteCanary


-- | Creates a canary. Canaries are scripts that monitor your endpoints and
--   APIs from the outside-in. Canaries help you check the availability and
--   latency of your web services and troubleshoot anomalies by
--   investigating load time data, screenshots of the UI, logs, and
--   metrics. You can set up a canary to run continuously or just once.
--   
--   Do not use <tt>CreateCanary</tt> to modify an existing canary. Use
--   <a>UpdateCanary</a> instead.
--   
--   To create canaries, you must have the
--   <tt>CloudWatchSyntheticsFullAccess</tt> policy. If you are creating a
--   new IAM role for the canary, you also need the the
--   <tt>iam:CreateRole</tt>, <tt>iam:CreatePolicy</tt> and
--   <tt>iam:AttachRolePolicy</tt> permissions. For more information, see
--   <a>Necessary Roles and Permissions</a>.
--   
--   Do not include secrets or proprietary information in your canary
--   names. The canary name makes up part of the Amazon Resource Name (ARN)
--   for the canary, and the ARN is included in outbound calls over the
--   internet. For more information, see <a>Security Considerations for
--   Synthetics Canaries</a>.
module Network.AWS.Synthetics.CreateCanary

-- | <i>See:</i> <a>newCreateCanary</a> smart constructor.
data CreateCanary
CreateCanary' :: Maybe Natural -> Maybe CanaryRunConfigInput -> Maybe Natural -> Maybe ArtifactConfigInput -> Maybe VpcConfigInput -> Maybe (HashMap Text Text) -> Text -> CanaryCodeInput -> Text -> Text -> CanaryScheduleInput -> Text -> CreateCanary

-- | The number of days to retain data about successful runs of this
--   canary. If you omit this field, the default of 31 days is used. The
--   valid range is 1 to 455 days.
[$sel:successRetentionPeriodInDays:CreateCanary'] :: CreateCanary -> Maybe Natural

-- | A structure that contains the configuration for individual canary
--   runs, such as timeout value.
[$sel:runConfig:CreateCanary'] :: CreateCanary -> Maybe CanaryRunConfigInput

-- | The number of days to retain data about failed runs of this canary. If
--   you omit this field, the default of 31 days is used. The valid range
--   is 1 to 455 days.
[$sel:failureRetentionPeriodInDays:CreateCanary'] :: CreateCanary -> Maybe Natural

-- | A structure that contains the configuration for canary artifacts,
--   including the encryption-at-rest settings for artifacts that the
--   canary uploads to Amazon S3.
[$sel:artifactConfig:CreateCanary'] :: CreateCanary -> Maybe ArtifactConfigInput

-- | If this canary is to test an endpoint in a VPC, this structure
--   contains information about the subnet and security groups of the VPC
--   endpoint. For more information, see <a>Running a Canary in a VPC</a>.
[$sel:vpcConfig:CreateCanary'] :: CreateCanary -> Maybe VpcConfigInput

-- | A list of key-value pairs to associate with the canary. You can
--   associate as many as 50 tags with a canary.
--   
--   Tags can help you organize and categorize your resources. You can also
--   use them to scope user permissions, by granting a user permission to
--   access or change only the resources that have certain tag values.
[$sel:tags:CreateCanary'] :: CreateCanary -> Maybe (HashMap Text Text)

-- | The name for this canary. Be sure to give it a descriptive name that
--   distinguishes it from other canaries in your account.
--   
--   Do not include secrets or proprietary information in your canary
--   names. The canary name makes up part of the canary ARN, and the ARN is
--   included in outbound calls over the internet. For more information,
--   see <a>Security Considerations for Synthetics Canaries</a>.
[$sel:name:CreateCanary'] :: CreateCanary -> Text

-- | A structure that includes the entry point from which the canary should
--   start running your script. If the script is stored in an S3 bucket,
--   the bucket name, key, and version are also included.
[$sel:code:CreateCanary'] :: CreateCanary -> CanaryCodeInput

-- | The location in Amazon S3 where Synthetics stores artifacts from the
--   test runs of this canary. Artifacts include the log file, screenshots,
--   and HAR files. The name of the S3 bucket can't include a period (.).
[$sel:artifactS3Location:CreateCanary'] :: CreateCanary -> Text

-- | The ARN of the IAM role to be used to run the canary. This role must
--   already exist, and must include <tt>lambda.amazonaws.com</tt> as a
--   principal in the trust policy. The role must also have the following
--   permissions:
--   
--   <ul>
--   <li><pre>s3:PutObject</pre></li>
--   <li><pre>s3:GetBucketLocation</pre></li>
--   <li><pre>s3:ListAllMyBuckets</pre></li>
--   <li><pre>cloudwatch:PutMetricData</pre></li>
--   <li><pre>logs:CreateLogGroup</pre></li>
--   <li><pre>logs:CreateLogStream</pre></li>
--   <li><pre>logs:PutLogEvents</pre></li>
--   </ul>
[$sel:executionRoleArn:CreateCanary'] :: CreateCanary -> Text

-- | A structure that contains information about how often the canary is to
--   run and when these test runs are to stop.
[$sel:schedule:CreateCanary'] :: CreateCanary -> CanaryScheduleInput

-- | Specifies the runtime version to use for the canary. For a list of
--   valid runtime versions and more information about runtime versions,
--   see <a>Canary Runtime Versions</a>.
[$sel:runtimeVersion:CreateCanary'] :: CreateCanary -> Text

-- | Create a value of <a>CreateCanary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:successRetentionPeriodInDays:CreateCanary'</a>,
--   <a>createCanary_successRetentionPeriodInDays</a> - The number of days
--   to retain data about successful runs of this canary. If you omit this
--   field, the default of 31 days is used. The valid range is 1 to 455
--   days.
--   
--   <a>$sel:runConfig:CreateCanary'</a>, <a>createCanary_runConfig</a> - A
--   structure that contains the configuration for individual canary runs,
--   such as timeout value.
--   
--   <a>$sel:failureRetentionPeriodInDays:CreateCanary'</a>,
--   <a>createCanary_failureRetentionPeriodInDays</a> - The number of days
--   to retain data about failed runs of this canary. If you omit this
--   field, the default of 31 days is used. The valid range is 1 to 455
--   days.
--   
--   <a>$sel:artifactConfig:CreateCanary'</a>,
--   <a>createCanary_artifactConfig</a> - A structure that contains the
--   configuration for canary artifacts, including the encryption-at-rest
--   settings for artifacts that the canary uploads to Amazon S3.
--   
--   <a>$sel:vpcConfig:CreateCanary'</a>, <a>createCanary_vpcConfig</a> -
--   If this canary is to test an endpoint in a VPC, this structure
--   contains information about the subnet and security groups of the VPC
--   endpoint. For more information, see <a>Running a Canary in a VPC</a>.
--   
--   <a>$sel:tags:CreateCanary'</a>, <a>createCanary_tags</a> - A list of
--   key-value pairs to associate with the canary. You can associate as
--   many as 50 tags with a canary.
--   
--   Tags can help you organize and categorize your resources. You can also
--   use them to scope user permissions, by granting a user permission to
--   access or change only the resources that have certain tag values.
--   
--   <a>$sel:name:CreateCanary'</a>, <a>createCanary_name</a> - The name
--   for this canary. Be sure to give it a descriptive name that
--   distinguishes it from other canaries in your account.
--   
--   Do not include secrets or proprietary information in your canary
--   names. The canary name makes up part of the canary ARN, and the ARN is
--   included in outbound calls over the internet. For more information,
--   see <a>Security Considerations for Synthetics Canaries</a>.
--   
--   <a>$sel:code:CreateCanary'</a>, <a>createCanary_code</a> - A structure
--   that includes the entry point from which the canary should start
--   running your script. If the script is stored in an S3 bucket, the
--   bucket name, key, and version are also included.
--   
--   <a>$sel:artifactS3Location:CreateCanary'</a>,
--   <a>createCanary_artifactS3Location</a> - The location in Amazon S3
--   where Synthetics stores artifacts from the test runs of this canary.
--   Artifacts include the log file, screenshots, and HAR files. The name
--   of the S3 bucket can't include a period (.).
--   
--   <a>$sel:executionRoleArn:CreateCanary'</a>,
--   <a>createCanary_executionRoleArn</a> - The ARN of the IAM role to be
--   used to run the canary. This role must already exist, and must include
--   <tt>lambda.amazonaws.com</tt> as a principal in the trust policy. The
--   role must also have the following permissions:
--   
--   <ul>
--   <li><pre>s3:PutObject</pre></li>
--   <li><pre>s3:GetBucketLocation</pre></li>
--   <li><pre>s3:ListAllMyBuckets</pre></li>
--   <li><pre>cloudwatch:PutMetricData</pre></li>
--   <li><pre>logs:CreateLogGroup</pre></li>
--   <li><pre>logs:CreateLogStream</pre></li>
--   <li><pre>logs:PutLogEvents</pre></li>
--   </ul>
--   
--   <a>$sel:schedule:CreateCanary'</a>, <a>createCanary_schedule</a> - A
--   structure that contains information about how often the canary is to
--   run and when these test runs are to stop.
--   
--   <a>$sel:runtimeVersion:CreateCanary'</a>,
--   <a>createCanary_runtimeVersion</a> - Specifies the runtime version to
--   use for the canary. For a list of valid runtime versions and more
--   information about runtime versions, see <a>Canary Runtime
--   Versions</a>.
newCreateCanary :: Text -> CanaryCodeInput -> Text -> Text -> CanaryScheduleInput -> Text -> CreateCanary

-- | The number of days to retain data about successful runs of this
--   canary. If you omit this field, the default of 31 days is used. The
--   valid range is 1 to 455 days.
createCanary_successRetentionPeriodInDays :: Lens' CreateCanary (Maybe Natural)

-- | A structure that contains the configuration for individual canary
--   runs, such as timeout value.
createCanary_runConfig :: Lens' CreateCanary (Maybe CanaryRunConfigInput)

-- | The number of days to retain data about failed runs of this canary. If
--   you omit this field, the default of 31 days is used. The valid range
--   is 1 to 455 days.
createCanary_failureRetentionPeriodInDays :: Lens' CreateCanary (Maybe Natural)

-- | A structure that contains the configuration for canary artifacts,
--   including the encryption-at-rest settings for artifacts that the
--   canary uploads to Amazon S3.
createCanary_artifactConfig :: Lens' CreateCanary (Maybe ArtifactConfigInput)

-- | If this canary is to test an endpoint in a VPC, this structure
--   contains information about the subnet and security groups of the VPC
--   endpoint. For more information, see <a>Running a Canary in a VPC</a>.
createCanary_vpcConfig :: Lens' CreateCanary (Maybe VpcConfigInput)

-- | A list of key-value pairs to associate with the canary. You can
--   associate as many as 50 tags with a canary.
--   
--   Tags can help you organize and categorize your resources. You can also
--   use them to scope user permissions, by granting a user permission to
--   access or change only the resources that have certain tag values.
createCanary_tags :: Lens' CreateCanary (Maybe (HashMap Text Text))

-- | The name for this canary. Be sure to give it a descriptive name that
--   distinguishes it from other canaries in your account.
--   
--   Do not include secrets or proprietary information in your canary
--   names. The canary name makes up part of the canary ARN, and the ARN is
--   included in outbound calls over the internet. For more information,
--   see <a>Security Considerations for Synthetics Canaries</a>.
createCanary_name :: Lens' CreateCanary Text

-- | A structure that includes the entry point from which the canary should
--   start running your script. If the script is stored in an S3 bucket,
--   the bucket name, key, and version are also included.
createCanary_code :: Lens' CreateCanary CanaryCodeInput

-- | The location in Amazon S3 where Synthetics stores artifacts from the
--   test runs of this canary. Artifacts include the log file, screenshots,
--   and HAR files. The name of the S3 bucket can't include a period (.).
createCanary_artifactS3Location :: Lens' CreateCanary Text

-- | The ARN of the IAM role to be used to run the canary. This role must
--   already exist, and must include <tt>lambda.amazonaws.com</tt> as a
--   principal in the trust policy. The role must also have the following
--   permissions:
--   
--   <ul>
--   <li><pre>s3:PutObject</pre></li>
--   <li><pre>s3:GetBucketLocation</pre></li>
--   <li><pre>s3:ListAllMyBuckets</pre></li>
--   <li><pre>cloudwatch:PutMetricData</pre></li>
--   <li><pre>logs:CreateLogGroup</pre></li>
--   <li><pre>logs:CreateLogStream</pre></li>
--   <li><pre>logs:PutLogEvents</pre></li>
--   </ul>
createCanary_executionRoleArn :: Lens' CreateCanary Text

-- | A structure that contains information about how often the canary is to
--   run and when these test runs are to stop.
createCanary_schedule :: Lens' CreateCanary CanaryScheduleInput

-- | Specifies the runtime version to use for the canary. For a list of
--   valid runtime versions and more information about runtime versions,
--   see <a>Canary Runtime Versions</a>.
createCanary_runtimeVersion :: Lens' CreateCanary Text

-- | <i>See:</i> <a>newCreateCanaryResponse</a> smart constructor.
data CreateCanaryResponse
CreateCanaryResponse' :: Maybe Canary -> Int -> CreateCanaryResponse

-- | The full details about the canary you have created.
[$sel:canary:CreateCanaryResponse'] :: CreateCanaryResponse -> Maybe Canary

-- | The response's http status code.
[$sel:httpStatus:CreateCanaryResponse'] :: CreateCanaryResponse -> Int

-- | Create a value of <a>CreateCanaryResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:canary:CreateCanaryResponse'</a>,
--   <a>createCanaryResponse_canary</a> - The full details about the canary
--   you have created.
--   
--   <a>$sel:httpStatus:CreateCanaryResponse'</a>,
--   <a>createCanaryResponse_httpStatus</a> - The response's http status
--   code.
newCreateCanaryResponse :: Int -> CreateCanaryResponse

-- | The full details about the canary you have created.
createCanaryResponse_canary :: Lens' CreateCanaryResponse (Maybe Canary)

-- | The response's http status code.
createCanaryResponse_httpStatus :: Lens' CreateCanaryResponse Int
instance GHC.Generics.Generic Network.AWS.Synthetics.CreateCanary.CreateCanary
instance GHC.Show.Show Network.AWS.Synthetics.CreateCanary.CreateCanary
instance GHC.Read.Read Network.AWS.Synthetics.CreateCanary.CreateCanary
instance GHC.Classes.Eq Network.AWS.Synthetics.CreateCanary.CreateCanary
instance GHC.Generics.Generic Network.AWS.Synthetics.CreateCanary.CreateCanaryResponse
instance GHC.Show.Show Network.AWS.Synthetics.CreateCanary.CreateCanaryResponse
instance GHC.Read.Read Network.AWS.Synthetics.CreateCanary.CreateCanaryResponse
instance GHC.Classes.Eq Network.AWS.Synthetics.CreateCanary.CreateCanaryResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Synthetics.CreateCanary.CreateCanary
instance Control.DeepSeq.NFData Network.AWS.Synthetics.CreateCanary.CreateCanaryResponse
instance Data.Hashable.Class.Hashable Network.AWS.Synthetics.CreateCanary.CreateCanary
instance Control.DeepSeq.NFData Network.AWS.Synthetics.CreateCanary.CreateCanary
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Synthetics.CreateCanary.CreateCanary
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Synthetics.CreateCanary.CreateCanary
instance Network.AWS.Data.Path.ToPath Network.AWS.Synthetics.CreateCanary.CreateCanary
instance Network.AWS.Data.Query.ToQuery Network.AWS.Synthetics.CreateCanary.CreateCanary


-- | Removes one or more tags from the specified canary.
module Network.AWS.Synthetics.UntagResource

-- | <i>See:</i> <a>newUntagResource</a> smart constructor.
data UntagResource
UntagResource' :: Text -> NonEmpty Text -> UntagResource

-- | The ARN of the canary that you're removing tags from.
--   
--   The ARN format of a canary is
--   <tt>arn:aws:synthetics:Region:account-id:canary:canary-name </tt>.
[$sel:resourceArn:UntagResource'] :: UntagResource -> Text

-- | The list of tag keys to remove from the resource.
[$sel:tagKeys:UntagResource'] :: UntagResource -> NonEmpty Text

-- | Create a value of <a>UntagResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:UntagResource'</a>,
--   <a>untagResource_resourceArn</a> - The ARN of the canary that you're
--   removing tags from.
--   
--   The ARN format of a canary is
--   <tt>arn:aws:synthetics:Region:account-id:canary:canary-name </tt>.
--   
--   <a>$sel:tagKeys:UntagResource'</a>, <a>untagResource_tagKeys</a> - The
--   list of tag keys to remove from the resource.
newUntagResource :: Text -> NonEmpty Text -> UntagResource

-- | The ARN of the canary that you're removing tags from.
--   
--   The ARN format of a canary is
--   <tt>arn:aws:synthetics:Region:account-id:canary:canary-name </tt>.
untagResource_resourceArn :: Lens' UntagResource Text

-- | The list of tag keys to remove from the resource.
untagResource_tagKeys :: Lens' UntagResource (NonEmpty Text)

-- | <i>See:</i> <a>newUntagResourceResponse</a> smart constructor.
data UntagResourceResponse
UntagResourceResponse' :: Int -> UntagResourceResponse

-- | The response's http status code.
[$sel:httpStatus:UntagResourceResponse'] :: UntagResourceResponse -> Int

-- | Create a value of <a>UntagResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UntagResourceResponse'</a>,
--   <a>untagResourceResponse_httpStatus</a> - The response's http status
--   code.
newUntagResourceResponse :: Int -> UntagResourceResponse

-- | The response's http status code.
untagResourceResponse_httpStatus :: Lens' UntagResourceResponse Int
instance GHC.Generics.Generic Network.AWS.Synthetics.UntagResource.UntagResource
instance GHC.Show.Show Network.AWS.Synthetics.UntagResource.UntagResource
instance GHC.Read.Read Network.AWS.Synthetics.UntagResource.UntagResource
instance GHC.Classes.Eq Network.AWS.Synthetics.UntagResource.UntagResource
instance GHC.Generics.Generic Network.AWS.Synthetics.UntagResource.UntagResourceResponse
instance GHC.Show.Show Network.AWS.Synthetics.UntagResource.UntagResourceResponse
instance GHC.Read.Read Network.AWS.Synthetics.UntagResource.UntagResourceResponse
instance GHC.Classes.Eq Network.AWS.Synthetics.UntagResource.UntagResourceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Synthetics.UntagResource.UntagResource
instance Control.DeepSeq.NFData Network.AWS.Synthetics.UntagResource.UntagResourceResponse
instance Data.Hashable.Class.Hashable Network.AWS.Synthetics.UntagResource.UntagResource
instance Control.DeepSeq.NFData Network.AWS.Synthetics.UntagResource.UntagResource
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Synthetics.UntagResource.UntagResource
instance Network.AWS.Data.Path.ToPath Network.AWS.Synthetics.UntagResource.UntagResource
instance Network.AWS.Data.Query.ToQuery Network.AWS.Synthetics.UntagResource.UntagResource


-- | Use this operation to change the settings of a canary that has already
--   been created.
--   
--   You can't use this operation to update the tags of an existing canary.
--   To change the tags of an existing canary, use <a>TagResource</a>.
module Network.AWS.Synthetics.UpdateCanary

-- | <i>See:</i> <a>newUpdateCanary</a> smart constructor.
data UpdateCanary
UpdateCanary' :: Maybe Natural -> Maybe CanaryScheduleInput -> Maybe Text -> Maybe CanaryRunConfigInput -> Maybe Text -> Maybe Text -> Maybe Natural -> Maybe ArtifactConfigInput -> Maybe VpcConfigInput -> Maybe VisualReferenceInput -> Maybe CanaryCodeInput -> Text -> UpdateCanary

-- | The number of days to retain data about successful runs of this
--   canary.
[$sel:successRetentionPeriodInDays:UpdateCanary'] :: UpdateCanary -> Maybe Natural

-- | A structure that contains information about how often the canary is to
--   run, and when these runs are to stop.
[$sel:schedule:UpdateCanary'] :: UpdateCanary -> Maybe CanaryScheduleInput

-- | The location in Amazon S3 where Synthetics stores artifacts from the
--   test runs of this canary. Artifacts include the log file, screenshots,
--   and HAR files. The name of the S3 bucket can't include a period (.).
[$sel:artifactS3Location:UpdateCanary'] :: UpdateCanary -> Maybe Text

-- | A structure that contains the timeout value that is used for each
--   individual run of the canary.
[$sel:runConfig:UpdateCanary'] :: UpdateCanary -> Maybe CanaryRunConfigInput

-- | The ARN of the IAM role to be used to run the canary. This role must
--   already exist, and must include <tt>lambda.amazonaws.com</tt> as a
--   principal in the trust policy. The role must also have the following
--   permissions:
--   
--   <ul>
--   <li><pre>s3:PutObject</pre></li>
--   <li><pre>s3:GetBucketLocation</pre></li>
--   <li><pre>s3:ListAllMyBuckets</pre></li>
--   <li><pre>cloudwatch:PutMetricData</pre></li>
--   <li><pre>logs:CreateLogGroup</pre></li>
--   <li><pre>logs:CreateLogStream</pre></li>
--   <li><pre>logs:CreateLogStream</pre></li>
--   </ul>
[$sel:executionRoleArn:UpdateCanary'] :: UpdateCanary -> Maybe Text

-- | Specifies the runtime version to use for the canary. For a list of
--   valid runtime versions and for more information about runtime
--   versions, see <a>Canary Runtime Versions</a>.
[$sel:runtimeVersion:UpdateCanary'] :: UpdateCanary -> Maybe Text

-- | The number of days to retain data about failed runs of this canary.
[$sel:failureRetentionPeriodInDays:UpdateCanary'] :: UpdateCanary -> Maybe Natural

-- | A structure that contains the configuration for canary artifacts,
--   including the encryption-at-rest settings for artifacts that the
--   canary uploads to Amazon S3.
[$sel:artifactConfig:UpdateCanary'] :: UpdateCanary -> Maybe ArtifactConfigInput

-- | If this canary is to test an endpoint in a VPC, this structure
--   contains information about the subnet and security groups of the VPC
--   endpoint. For more information, see <a>Running a Canary in a VPC</a>.
[$sel:vpcConfig:UpdateCanary'] :: UpdateCanary -> Maybe VpcConfigInput

-- | Defines the screenshots to use as the baseline for comparisons during
--   visual monitoring comparisons during future runs of this canary. If
--   you omit this parameter, no changes are made to any baseline
--   screenshots that the canary might be using already.
--   
--   Visual monitoring is supported only on canaries running the
--   <b>syn-puppeteer-node-3.2</b> runtime or later. For more information,
--   see <a>Visual monitoring</a> and <a>Visual monitoring blueprint</a>
[$sel:visualReference:UpdateCanary'] :: UpdateCanary -> Maybe VisualReferenceInput

-- | A structure that includes the entry point from which the canary should
--   start running your script. If the script is stored in an S3 bucket,
--   the bucket name, key, and version are also included.
[$sel:code:UpdateCanary'] :: UpdateCanary -> Maybe CanaryCodeInput

-- | The name of the canary that you want to update. To find the names of
--   your canaries, use <a>DescribeCanaries</a>.
--   
--   You cannot change the name of a canary that has already been created.
[$sel:name:UpdateCanary'] :: UpdateCanary -> Text

-- | Create a value of <a>UpdateCanary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:successRetentionPeriodInDays:UpdateCanary'</a>,
--   <a>updateCanary_successRetentionPeriodInDays</a> - The number of days
--   to retain data about successful runs of this canary.
--   
--   <a>$sel:schedule:UpdateCanary'</a>, <a>updateCanary_schedule</a> - A
--   structure that contains information about how often the canary is to
--   run, and when these runs are to stop.
--   
--   <a>$sel:artifactS3Location:UpdateCanary'</a>,
--   <a>updateCanary_artifactS3Location</a> - The location in Amazon S3
--   where Synthetics stores artifacts from the test runs of this canary.
--   Artifacts include the log file, screenshots, and HAR files. The name
--   of the S3 bucket can't include a period (.).
--   
--   <a>$sel:runConfig:UpdateCanary'</a>, <a>updateCanary_runConfig</a> - A
--   structure that contains the timeout value that is used for each
--   individual run of the canary.
--   
--   <a>$sel:executionRoleArn:UpdateCanary'</a>,
--   <a>updateCanary_executionRoleArn</a> - The ARN of the IAM role to be
--   used to run the canary. This role must already exist, and must include
--   <tt>lambda.amazonaws.com</tt> as a principal in the trust policy. The
--   role must also have the following permissions:
--   
--   <ul>
--   <li><pre>s3:PutObject</pre></li>
--   <li><pre>s3:GetBucketLocation</pre></li>
--   <li><pre>s3:ListAllMyBuckets</pre></li>
--   <li><pre>cloudwatch:PutMetricData</pre></li>
--   <li><pre>logs:CreateLogGroup</pre></li>
--   <li><pre>logs:CreateLogStream</pre></li>
--   <li><pre>logs:CreateLogStream</pre></li>
--   </ul>
--   
--   <a>$sel:runtimeVersion:UpdateCanary'</a>,
--   <a>updateCanary_runtimeVersion</a> - Specifies the runtime version to
--   use for the canary. For a list of valid runtime versions and for more
--   information about runtime versions, see <a>Canary Runtime
--   Versions</a>.
--   
--   <a>$sel:failureRetentionPeriodInDays:UpdateCanary'</a>,
--   <a>updateCanary_failureRetentionPeriodInDays</a> - The number of days
--   to retain data about failed runs of this canary.
--   
--   <a>$sel:artifactConfig:UpdateCanary'</a>,
--   <a>updateCanary_artifactConfig</a> - A structure that contains the
--   configuration for canary artifacts, including the encryption-at-rest
--   settings for artifacts that the canary uploads to Amazon S3.
--   
--   <a>$sel:vpcConfig:UpdateCanary'</a>, <a>updateCanary_vpcConfig</a> -
--   If this canary is to test an endpoint in a VPC, this structure
--   contains information about the subnet and security groups of the VPC
--   endpoint. For more information, see <a>Running a Canary in a VPC</a>.
--   
--   <a>$sel:visualReference:UpdateCanary'</a>,
--   <a>updateCanary_visualReference</a> - Defines the screenshots to use
--   as the baseline for comparisons during visual monitoring comparisons
--   during future runs of this canary. If you omit this parameter, no
--   changes are made to any baseline screenshots that the canary might be
--   using already.
--   
--   Visual monitoring is supported only on canaries running the
--   <b>syn-puppeteer-node-3.2</b> runtime or later. For more information,
--   see <a>Visual monitoring</a> and <a>Visual monitoring blueprint</a>
--   
--   <a>$sel:code:UpdateCanary'</a>, <a>updateCanary_code</a> - A structure
--   that includes the entry point from which the canary should start
--   running your script. If the script is stored in an S3 bucket, the
--   bucket name, key, and version are also included.
--   
--   <a>$sel:name:UpdateCanary'</a>, <a>updateCanary_name</a> - The name of
--   the canary that you want to update. To find the names of your
--   canaries, use <a>DescribeCanaries</a>.
--   
--   You cannot change the name of a canary that has already been created.
newUpdateCanary :: Text -> UpdateCanary

-- | The number of days to retain data about successful runs of this
--   canary.
updateCanary_successRetentionPeriodInDays :: Lens' UpdateCanary (Maybe Natural)

-- | A structure that contains information about how often the canary is to
--   run, and when these runs are to stop.
updateCanary_schedule :: Lens' UpdateCanary (Maybe CanaryScheduleInput)

-- | The location in Amazon S3 where Synthetics stores artifacts from the
--   test runs of this canary. Artifacts include the log file, screenshots,
--   and HAR files. The name of the S3 bucket can't include a period (.).
updateCanary_artifactS3Location :: Lens' UpdateCanary (Maybe Text)

-- | A structure that contains the timeout value that is used for each
--   individual run of the canary.
updateCanary_runConfig :: Lens' UpdateCanary (Maybe CanaryRunConfigInput)

-- | The ARN of the IAM role to be used to run the canary. This role must
--   already exist, and must include <tt>lambda.amazonaws.com</tt> as a
--   principal in the trust policy. The role must also have the following
--   permissions:
--   
--   <ul>
--   <li><pre>s3:PutObject</pre></li>
--   <li><pre>s3:GetBucketLocation</pre></li>
--   <li><pre>s3:ListAllMyBuckets</pre></li>
--   <li><pre>cloudwatch:PutMetricData</pre></li>
--   <li><pre>logs:CreateLogGroup</pre></li>
--   <li><pre>logs:CreateLogStream</pre></li>
--   <li><pre>logs:CreateLogStream</pre></li>
--   </ul>
updateCanary_executionRoleArn :: Lens' UpdateCanary (Maybe Text)

-- | Specifies the runtime version to use for the canary. For a list of
--   valid runtime versions and for more information about runtime
--   versions, see <a>Canary Runtime Versions</a>.
updateCanary_runtimeVersion :: Lens' UpdateCanary (Maybe Text)

-- | The number of days to retain data about failed runs of this canary.
updateCanary_failureRetentionPeriodInDays :: Lens' UpdateCanary (Maybe Natural)

-- | A structure that contains the configuration for canary artifacts,
--   including the encryption-at-rest settings for artifacts that the
--   canary uploads to Amazon S3.
updateCanary_artifactConfig :: Lens' UpdateCanary (Maybe ArtifactConfigInput)

-- | If this canary is to test an endpoint in a VPC, this structure
--   contains information about the subnet and security groups of the VPC
--   endpoint. For more information, see <a>Running a Canary in a VPC</a>.
updateCanary_vpcConfig :: Lens' UpdateCanary (Maybe VpcConfigInput)

-- | Defines the screenshots to use as the baseline for comparisons during
--   visual monitoring comparisons during future runs of this canary. If
--   you omit this parameter, no changes are made to any baseline
--   screenshots that the canary might be using already.
--   
--   Visual monitoring is supported only on canaries running the
--   <b>syn-puppeteer-node-3.2</b> runtime or later. For more information,
--   see <a>Visual monitoring</a> and <a>Visual monitoring blueprint</a>
updateCanary_visualReference :: Lens' UpdateCanary (Maybe VisualReferenceInput)

-- | A structure that includes the entry point from which the canary should
--   start running your script. If the script is stored in an S3 bucket,
--   the bucket name, key, and version are also included.
updateCanary_code :: Lens' UpdateCanary (Maybe CanaryCodeInput)

-- | The name of the canary that you want to update. To find the names of
--   your canaries, use <a>DescribeCanaries</a>.
--   
--   You cannot change the name of a canary that has already been created.
updateCanary_name :: Lens' UpdateCanary Text

-- | <i>See:</i> <a>newUpdateCanaryResponse</a> smart constructor.
data UpdateCanaryResponse
UpdateCanaryResponse' :: Int -> UpdateCanaryResponse

-- | The response's http status code.
[$sel:httpStatus:UpdateCanaryResponse'] :: UpdateCanaryResponse -> Int

-- | Create a value of <a>UpdateCanaryResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateCanaryResponse'</a>,
--   <a>updateCanaryResponse_httpStatus</a> - The response's http status
--   code.
newUpdateCanaryResponse :: Int -> UpdateCanaryResponse

-- | The response's http status code.
updateCanaryResponse_httpStatus :: Lens' UpdateCanaryResponse Int
instance GHC.Generics.Generic Network.AWS.Synthetics.UpdateCanary.UpdateCanary
instance GHC.Show.Show Network.AWS.Synthetics.UpdateCanary.UpdateCanary
instance GHC.Read.Read Network.AWS.Synthetics.UpdateCanary.UpdateCanary
instance GHC.Classes.Eq Network.AWS.Synthetics.UpdateCanary.UpdateCanary
instance GHC.Generics.Generic Network.AWS.Synthetics.UpdateCanary.UpdateCanaryResponse
instance GHC.Show.Show Network.AWS.Synthetics.UpdateCanary.UpdateCanaryResponse
instance GHC.Read.Read Network.AWS.Synthetics.UpdateCanary.UpdateCanaryResponse
instance GHC.Classes.Eq Network.AWS.Synthetics.UpdateCanary.UpdateCanaryResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Synthetics.UpdateCanary.UpdateCanary
instance Control.DeepSeq.NFData Network.AWS.Synthetics.UpdateCanary.UpdateCanaryResponse
instance Data.Hashable.Class.Hashable Network.AWS.Synthetics.UpdateCanary.UpdateCanary
instance Control.DeepSeq.NFData Network.AWS.Synthetics.UpdateCanary.UpdateCanary
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Synthetics.UpdateCanary.UpdateCanary
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Synthetics.UpdateCanary.UpdateCanary
instance Network.AWS.Data.Path.ToPath Network.AWS.Synthetics.UpdateCanary.UpdateCanary
instance Network.AWS.Data.Query.ToQuery Network.AWS.Synthetics.UpdateCanary.UpdateCanary


module Network.AWS.Synthetics.Lens

-- | The number of days to retain data about successful runs of this
--   canary.
updateCanary_successRetentionPeriodInDays :: Lens' UpdateCanary (Maybe Natural)

-- | A structure that contains information about how often the canary is to
--   run, and when these runs are to stop.
updateCanary_schedule :: Lens' UpdateCanary (Maybe CanaryScheduleInput)

-- | The location in Amazon S3 where Synthetics stores artifacts from the
--   test runs of this canary. Artifacts include the log file, screenshots,
--   and HAR files. The name of the S3 bucket can't include a period (.).
updateCanary_artifactS3Location :: Lens' UpdateCanary (Maybe Text)

-- | A structure that contains the timeout value that is used for each
--   individual run of the canary.
updateCanary_runConfig :: Lens' UpdateCanary (Maybe CanaryRunConfigInput)

-- | The ARN of the IAM role to be used to run the canary. This role must
--   already exist, and must include <tt>lambda.amazonaws.com</tt> as a
--   principal in the trust policy. The role must also have the following
--   permissions:
--   
--   <ul>
--   <li><pre>s3:PutObject</pre></li>
--   <li><pre>s3:GetBucketLocation</pre></li>
--   <li><pre>s3:ListAllMyBuckets</pre></li>
--   <li><pre>cloudwatch:PutMetricData</pre></li>
--   <li><pre>logs:CreateLogGroup</pre></li>
--   <li><pre>logs:CreateLogStream</pre></li>
--   <li><pre>logs:CreateLogStream</pre></li>
--   </ul>
updateCanary_executionRoleArn :: Lens' UpdateCanary (Maybe Text)

-- | Specifies the runtime version to use for the canary. For a list of
--   valid runtime versions and for more information about runtime
--   versions, see <a>Canary Runtime Versions</a>.
updateCanary_runtimeVersion :: Lens' UpdateCanary (Maybe Text)

-- | The number of days to retain data about failed runs of this canary.
updateCanary_failureRetentionPeriodInDays :: Lens' UpdateCanary (Maybe Natural)

-- | A structure that contains the configuration for canary artifacts,
--   including the encryption-at-rest settings for artifacts that the
--   canary uploads to Amazon S3.
updateCanary_artifactConfig :: Lens' UpdateCanary (Maybe ArtifactConfigInput)

-- | If this canary is to test an endpoint in a VPC, this structure
--   contains information about the subnet and security groups of the VPC
--   endpoint. For more information, see <a>Running a Canary in a VPC</a>.
updateCanary_vpcConfig :: Lens' UpdateCanary (Maybe VpcConfigInput)

-- | Defines the screenshots to use as the baseline for comparisons during
--   visual monitoring comparisons during future runs of this canary. If
--   you omit this parameter, no changes are made to any baseline
--   screenshots that the canary might be using already.
--   
--   Visual monitoring is supported only on canaries running the
--   <b>syn-puppeteer-node-3.2</b> runtime or later. For more information,
--   see <a>Visual monitoring</a> and <a>Visual monitoring blueprint</a>
updateCanary_visualReference :: Lens' UpdateCanary (Maybe VisualReferenceInput)

-- | A structure that includes the entry point from which the canary should
--   start running your script. If the script is stored in an S3 bucket,
--   the bucket name, key, and version are also included.
updateCanary_code :: Lens' UpdateCanary (Maybe CanaryCodeInput)

-- | The name of the canary that you want to update. To find the names of
--   your canaries, use <a>DescribeCanaries</a>.
--   
--   You cannot change the name of a canary that has already been created.
updateCanary_name :: Lens' UpdateCanary Text

-- | The response's http status code.
updateCanaryResponse_httpStatus :: Lens' UpdateCanaryResponse Int

-- | The name of the canary that you want to delete. To find the names of
--   your canaries, use <a>DescribeCanaries</a>.
deleteCanary_name :: Lens' DeleteCanary Text

-- | The response's http status code.
deleteCanaryResponse_httpStatus :: Lens' DeleteCanaryResponse Int

-- | The number of days to retain data about successful runs of this
--   canary. If you omit this field, the default of 31 days is used. The
--   valid range is 1 to 455 days.
createCanary_successRetentionPeriodInDays :: Lens' CreateCanary (Maybe Natural)

-- | A structure that contains the configuration for individual canary
--   runs, such as timeout value.
createCanary_runConfig :: Lens' CreateCanary (Maybe CanaryRunConfigInput)

-- | The number of days to retain data about failed runs of this canary. If
--   you omit this field, the default of 31 days is used. The valid range
--   is 1 to 455 days.
createCanary_failureRetentionPeriodInDays :: Lens' CreateCanary (Maybe Natural)

-- | A structure that contains the configuration for canary artifacts,
--   including the encryption-at-rest settings for artifacts that the
--   canary uploads to Amazon S3.
createCanary_artifactConfig :: Lens' CreateCanary (Maybe ArtifactConfigInput)

-- | If this canary is to test an endpoint in a VPC, this structure
--   contains information about the subnet and security groups of the VPC
--   endpoint. For more information, see <a>Running a Canary in a VPC</a>.
createCanary_vpcConfig :: Lens' CreateCanary (Maybe VpcConfigInput)

-- | A list of key-value pairs to associate with the canary. You can
--   associate as many as 50 tags with a canary.
--   
--   Tags can help you organize and categorize your resources. You can also
--   use them to scope user permissions, by granting a user permission to
--   access or change only the resources that have certain tag values.
createCanary_tags :: Lens' CreateCanary (Maybe (HashMap Text Text))

-- | The name for this canary. Be sure to give it a descriptive name that
--   distinguishes it from other canaries in your account.
--   
--   Do not include secrets or proprietary information in your canary
--   names. The canary name makes up part of the canary ARN, and the ARN is
--   included in outbound calls over the internet. For more information,
--   see <a>Security Considerations for Synthetics Canaries</a>.
createCanary_name :: Lens' CreateCanary Text

-- | A structure that includes the entry point from which the canary should
--   start running your script. If the script is stored in an S3 bucket,
--   the bucket name, key, and version are also included.
createCanary_code :: Lens' CreateCanary CanaryCodeInput

-- | The location in Amazon S3 where Synthetics stores artifacts from the
--   test runs of this canary. Artifacts include the log file, screenshots,
--   and HAR files. The name of the S3 bucket can't include a period (.).
createCanary_artifactS3Location :: Lens' CreateCanary Text

-- | The ARN of the IAM role to be used to run the canary. This role must
--   already exist, and must include <tt>lambda.amazonaws.com</tt> as a
--   principal in the trust policy. The role must also have the following
--   permissions:
--   
--   <ul>
--   <li><pre>s3:PutObject</pre></li>
--   <li><pre>s3:GetBucketLocation</pre></li>
--   <li><pre>s3:ListAllMyBuckets</pre></li>
--   <li><pre>cloudwatch:PutMetricData</pre></li>
--   <li><pre>logs:CreateLogGroup</pre></li>
--   <li><pre>logs:CreateLogStream</pre></li>
--   <li><pre>logs:PutLogEvents</pre></li>
--   </ul>
createCanary_executionRoleArn :: Lens' CreateCanary Text

-- | A structure that contains information about how often the canary is to
--   run and when these test runs are to stop.
createCanary_schedule :: Lens' CreateCanary CanaryScheduleInput

-- | Specifies the runtime version to use for the canary. For a list of
--   valid runtime versions and more information about runtime versions,
--   see <a>Canary Runtime Versions</a>.
createCanary_runtimeVersion :: Lens' CreateCanary Text

-- | The full details about the canary you have created.
createCanaryResponse_canary :: Lens' CreateCanaryResponse (Maybe Canary)

-- | The response's http status code.
createCanaryResponse_httpStatus :: Lens' CreateCanaryResponse Int

-- | The ARN of the canary that you want to view tags for.
--   
--   The ARN format of a canary is
--   <tt>arn:aws:synthetics:Region:account-id:canary:canary-name </tt>.
listTagsForResource_resourceArn :: Lens' ListTagsForResource Text

-- | The list of tag keys and values associated with the canary that you
--   specified.
listTagsForResourceResponse_tags :: Lens' ListTagsForResourceResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
listTagsForResourceResponse_httpStatus :: Lens' ListTagsForResourceResponse Int

-- | A token that indicates that there is more data available. You can use
--   this token in a subsequent <tt>GetCanaryRuns</tt> operation to
--   retrieve the next set of results.
getCanaryRuns_nextToken :: Lens' GetCanaryRuns (Maybe Text)

-- | Specify this parameter to limit how many runs are returned each time
--   you use the <tt>GetCanaryRuns</tt> operation. If you omit this
--   parameter, the default of 100 is used.
getCanaryRuns_maxResults :: Lens' GetCanaryRuns (Maybe Natural)

-- | The name of the canary that you want to see runs for.
getCanaryRuns_name :: Lens' GetCanaryRuns Text

-- | A token that indicates that there is more data available. You can use
--   this token in a subsequent <tt>GetCanaryRuns</tt> operation to
--   retrieve the next set of results.
getCanaryRunsResponse_nextToken :: Lens' GetCanaryRunsResponse (Maybe Text)

-- | An array of structures. Each structure contains the details of one of
--   the retrieved canary runs.
getCanaryRunsResponse_canaryRuns :: Lens' GetCanaryRunsResponse (Maybe [CanaryRun])

-- | The response's http status code.
getCanaryRunsResponse_httpStatus :: Lens' GetCanaryRunsResponse Int

-- | The name of the canary that you want details for.
getCanary_name :: Lens' GetCanary Text

-- | A strucure that contains the full information about the canary.
getCanaryResponse_canary :: Lens' GetCanaryResponse (Maybe Canary)

-- | The response's http status code.
getCanaryResponse_httpStatus :: Lens' GetCanaryResponse Int

-- | A token that indicates that there is more data available. You can use
--   this token in a subsequent <tt>DescribeRuntimeVersions</tt> operation
--   to retrieve the next set of results.
describeRuntimeVersions_nextToken :: Lens' DescribeRuntimeVersions (Maybe Text)

-- | Specify this parameter to limit how many runs are returned each time
--   you use the <tt>DescribeRuntimeVersions</tt> operation. If you omit
--   this parameter, the default of 100 is used.
describeRuntimeVersions_maxResults :: Lens' DescribeRuntimeVersions (Maybe Natural)

-- | An array of objects that display the details about each Synthetics
--   canary runtime version.
describeRuntimeVersionsResponse_runtimeVersions :: Lens' DescribeRuntimeVersionsResponse (Maybe [RuntimeVersion])

-- | A token that indicates that there is more data available. You can use
--   this token in a subsequent <tt>DescribeRuntimeVersions</tt> operation
--   to retrieve the next set of results.
describeRuntimeVersionsResponse_nextToken :: Lens' DescribeRuntimeVersionsResponse (Maybe Text)

-- | The response's http status code.
describeRuntimeVersionsResponse_httpStatus :: Lens' DescribeRuntimeVersionsResponse Int

-- | A token that indicates that there is more data available. You can use
--   this token in a subsequent <tt>DescribeCanaries</tt> operation to
--   retrieve the next set of results.
describeCanariesLastRun_nextToken :: Lens' DescribeCanariesLastRun (Maybe Text)

-- | Specify this parameter to limit how many runs are returned each time
--   you use the <tt>DescribeLastRun</tt> operation. If you omit this
--   parameter, the default of 100 is used.
describeCanariesLastRun_maxResults :: Lens' DescribeCanariesLastRun (Maybe Natural)

-- | A token that indicates that there is more data available. You can use
--   this token in a subsequent <tt>DescribeCanariesLastRun</tt> operation
--   to retrieve the next set of results.
describeCanariesLastRunResponse_nextToken :: Lens' DescribeCanariesLastRunResponse (Maybe Text)

-- | An array that contains the information from the most recent run of
--   each canary.
describeCanariesLastRunResponse_canariesLastRun :: Lens' DescribeCanariesLastRunResponse (Maybe [CanaryLastRun])

-- | The response's http status code.
describeCanariesLastRunResponse_httpStatus :: Lens' DescribeCanariesLastRunResponse Int

-- | The name of the canary that you want to run. To find canary names, use
--   <a>DescribeCanaries</a>.
startCanary_name :: Lens' StartCanary Text

-- | The response's http status code.
startCanaryResponse_httpStatus :: Lens' StartCanaryResponse Int

-- | A token that indicates that there is more data available. You can use
--   this token in a subsequent operation to retrieve the next set of
--   results.
describeCanaries_nextToken :: Lens' DescribeCanaries (Maybe Text)

-- | Specify this parameter to limit how many canaries are returned each
--   time you use the <tt>DescribeCanaries</tt> operation. If you omit this
--   parameter, the default of 100 is used.
describeCanaries_maxResults :: Lens' DescribeCanaries (Maybe Natural)

-- | Returns an array. Each item in the array contains the full information
--   about one canary.
describeCanariesResponse_canaries :: Lens' DescribeCanariesResponse (Maybe [Canary])

-- | A token that indicates that there is more data available. You can use
--   this token in a subsequent <tt>DescribeCanaries</tt> operation to
--   retrieve the next set of results.
describeCanariesResponse_nextToken :: Lens' DescribeCanariesResponse (Maybe Text)

-- | The response's http status code.
describeCanariesResponse_httpStatus :: Lens' DescribeCanariesResponse Int

-- | The ARN of the canary that you're adding tags to.
--   
--   The ARN format of a canary is
--   <tt>arn:aws:synthetics:Region:account-id:canary:canary-name </tt>.
tagResource_resourceArn :: Lens' TagResource Text

-- | The list of key-value pairs to associate with the canary.
tagResource_tags :: Lens' TagResource (HashMap Text Text)

-- | The response's http status code.
tagResourceResponse_httpStatus :: Lens' TagResourceResponse Int

-- | The ARN of the canary that you're removing tags from.
--   
--   The ARN format of a canary is
--   <tt>arn:aws:synthetics:Region:account-id:canary:canary-name </tt>.
untagResource_resourceArn :: Lens' UntagResource Text

-- | The list of tag keys to remove from the resource.
untagResource_tagKeys :: Lens' UntagResource (NonEmpty Text)

-- | The response's http status code.
untagResourceResponse_httpStatus :: Lens' UntagResourceResponse Int

-- | The name of the canary that you want to stop. To find the names of
--   your canaries, use <a>DescribeCanaries</a>.
stopCanary_name :: Lens' StopCanary Text

-- | The response's http status code.
stopCanaryResponse_httpStatus :: Lens' StopCanaryResponse Int

-- | A structure that contains the configuration of the encryption-at-rest
--   settings for artifacts that the canary uploads to Amazon S3. Artifact
--   encryption functionality is available only for canaries that use
--   Synthetics runtime version syn-nodejs-puppeteer-3.3 or later. For more
--   information, see <a>Encrypting canary artifacts</a>
artifactConfigInput_s3Encryption :: Lens' ArtifactConfigInput (Maybe S3EncryptionConfig)

-- | A structure that contains the configuration of encryption settings for
--   canary artifacts that are stored in Amazon S3.
artifactConfigOutput_s3Encryption :: Lens' ArtifactConfigOutput (Maybe S3EncryptionConfig)

-- | Coordinates that define the part of a screen to ignore during
--   screenshot comparisons. To obtain the coordinates to use here, use the
--   CloudWatch Logs console to draw the boundaries on the screen. For more
--   information, see {LINK}
baseScreenshot_ignoreCoordinates :: Lens' BaseScreenshot (Maybe [Text])

-- | The name of the screenshot. This is generated the first time the
--   canary is run after the <tt>UpdateCanary</tt> operation that specified
--   for this canary to perform visual monitoring.
baseScreenshot_screenshotName :: Lens' BaseScreenshot Text

-- | A structure that contains information about the canary's status.
canary_status :: Lens' Canary (Maybe CanaryStatus)

-- | The number of days to retain data about successful runs of this
--   canary.
canary_successRetentionPeriodInDays :: Lens' Canary (Maybe Natural)

-- | A structure that contains information about how often the canary is to
--   run, and when these runs are to stop.
canary_schedule :: Lens' Canary (Maybe CanaryScheduleOutput)

-- | The location in Amazon S3 where Synthetics stores artifacts from the
--   runs of this canary. Artifacts include the log file, screenshots, and
--   HAR files.
canary_artifactS3Location :: Lens' Canary (Maybe Text)

-- | Undocumented member.
canary_runConfig :: Lens' Canary (Maybe CanaryRunConfigOutput)

-- | The ARN of the IAM role used to run the canary. This role must include
--   <tt>lambda.amazonaws.com</tt> as a principal in the trust policy.
canary_executionRoleArn :: Lens' Canary (Maybe Text)

-- | Specifies the runtime version to use for the canary. For more
--   information about runtime versions, see <a>Canary Runtime
--   Versions</a>.
canary_runtimeVersion :: Lens' Canary (Maybe Text)

-- | The number of days to retain data about failed runs of this canary.
canary_failureRetentionPeriodInDays :: Lens' Canary (Maybe Natural)

-- | A structure that contains the configuration for canary artifacts,
--   including the encryption-at-rest settings for artifacts that the
--   canary uploads to Amazon S3.
canary_artifactConfig :: Lens' Canary (Maybe ArtifactConfigOutput)

-- | Undocumented member.
canary_vpcConfig :: Lens' Canary (Maybe VpcConfigOutput)

-- | If this canary performs visual monitoring by comparing screenshots,
--   this structure contains the ID of the canary run to use as the
--   baseline for screenshots, and the coordinates of any parts of the
--   screen to ignore during the visual monitoring comparison.
canary_visualReference :: Lens' Canary (Maybe VisualReferenceOutput)

-- | The name of the canary.
canary_name :: Lens' Canary (Maybe Text)

-- | The unique ID of this canary.
canary_id :: Lens' Canary (Maybe Text)

-- | Undocumented member.
canary_code :: Lens' Canary (Maybe CanaryCodeOutput)

-- | A structure that contains information about when the canary was
--   created, modified, and most recently run.
canary_timeline :: Lens' Canary (Maybe CanaryTimeline)

-- | The ARN of the Lambda function that is used as your canary's engine.
--   For more information about Lambda ARN format, see <a>Resources and
--   Conditions for Lambda Actions</a>.
canary_engineArn :: Lens' Canary (Maybe Text)

-- | The list of key-value pairs that are associated with the canary.
canary_tags :: Lens' Canary (Maybe (HashMap Text Text))

-- | The S3 key of your script. For more information, see <a>Working with
--   Amazon S3 Objects</a>.
canaryCodeInput_s3Key :: Lens' CanaryCodeInput (Maybe Text)

-- | The S3 version ID of your script.
canaryCodeInput_s3Version :: Lens' CanaryCodeInput (Maybe Text)

-- | If you input your canary script directly into the canary instead of
--   referring to an S3 location, the value of this parameter is the
--   base64-encoded contents of the .zip file that contains the script. It
--   must be smaller than 256 Kb.-- -- <i>Note:</i> This <tt>Lens</tt>
--   automatically encodes and decodes Base64 data. -- The underlying
--   isomorphism will encode to Base64 representation during --
--   serialisation, and decode from Base64 representation during
--   deserialisation. -- This <tt>Lens</tt> accepts and returns only raw
--   unencoded data.
canaryCodeInput_zipFile :: Lens' CanaryCodeInput (Maybe ByteString)

-- | If your canary script is located in S3, specify the bucket name here.
--   Do not include <tt>s3://</tt> as the start of the bucket name.
canaryCodeInput_s3Bucket :: Lens' CanaryCodeInput (Maybe Text)

-- | The entry point to use for the source code when running the canary.
--   This value must end with the string <tt>.handler</tt>. The string is
--   limited to 29 characters or fewer.
canaryCodeInput_handler :: Lens' CanaryCodeInput Text

-- | The ARN of the Lambda layer where Synthetics stores the canary script
--   code.
canaryCodeOutput_sourceLocationArn :: Lens' CanaryCodeOutput (Maybe Text)

-- | The entry point to use for the source code when running the canary.
canaryCodeOutput_handler :: Lens' CanaryCodeOutput (Maybe Text)

-- | The name of the canary.
canaryLastRun_canaryName :: Lens' CanaryLastRun (Maybe Text)

-- | The results from this canary's most recent run.
canaryLastRun_lastRun :: Lens' CanaryLastRun (Maybe CanaryRun)

-- | The status of this run.
canaryRun_status :: Lens' CanaryRun (Maybe CanaryRunStatus)

-- | The location where the canary stored artifacts from the run. Artifacts
--   include the log file, screenshots, and HAR files.
canaryRun_artifactS3Location :: Lens' CanaryRun (Maybe Text)

-- | The name of the canary.
canaryRun_name :: Lens' CanaryRun (Maybe Text)

-- | A unique ID that identifies this canary run.
canaryRun_id :: Lens' CanaryRun (Maybe Text)

-- | A structure that contains the start and end times of this run.
canaryRun_timeline :: Lens' CanaryRun (Maybe CanaryRunTimeline)

-- | How long the canary is allowed to run before it must stop. You can't
--   set this time to be longer than the frequency of the runs of this
--   canary.
--   
--   If you omit this field, the frequency of the canary is used as this
--   value, up to a maximum of 14 minutes.
canaryRunConfigInput_timeoutInSeconds :: Lens' CanaryRunConfigInput (Maybe Natural)

-- | Specifies the keys and values to use for any environment variables
--   used in the canary script. Use the following format:
--   
--   { "key1" : "value1", "key2" : "value2", ...}
--   
--   Keys must start with a letter and be at least two characters. The
--   total size of your environment variables cannot exceed 4 KB. You can't
--   specify any Lambda reserved environment variables as the keys for your
--   environment variables. For more information about reserved keys, see
--   <a>Runtime environment variables</a>.
canaryRunConfigInput_environmentVariables :: Lens' CanaryRunConfigInput (Maybe (HashMap Text Text))

-- | Specifies whether this canary is to use active X-Ray tracing when it
--   runs. Active tracing enables this canary run to be displayed in the
--   ServiceLens and X-Ray service maps even if the canary does not hit an
--   endpoint that has X-Ray tracing enabled. Using X-Ray tracing incurs
--   charges. For more information, see <a>Canaries and X-Ray tracing</a>.
--   
--   You can enable active tracing only for canaries that use version
--   <tt>syn-nodejs-2.0</tt> or later for their canary runtime.
canaryRunConfigInput_activeTracing :: Lens' CanaryRunConfigInput (Maybe Bool)

-- | The maximum amount of memory available to the canary while it is
--   running, in MB. This value must be a multiple of 64.
canaryRunConfigInput_memoryInMB :: Lens' CanaryRunConfigInput (Maybe Natural)

-- | How long the canary is allowed to run before it must stop.
canaryRunConfigOutput_timeoutInSeconds :: Lens' CanaryRunConfigOutput (Maybe Natural)

-- | Displays whether this canary run used active X-Ray tracing.
canaryRunConfigOutput_activeTracing :: Lens' CanaryRunConfigOutput (Maybe Bool)

-- | The maximum amount of memory available to the canary while it is
--   running, in MB. This value must be a multiple of 64.
canaryRunConfigOutput_memoryInMB :: Lens' CanaryRunConfigOutput (Maybe Natural)

-- | The current state of the run.
canaryRunStatus_state :: Lens' CanaryRunStatus (Maybe CanaryRunState)

-- | If run of the canary failed, this field contains the reason for the
--   error.
canaryRunStatus_stateReason :: Lens' CanaryRunStatus (Maybe Text)

-- | If this value is <tt>CANARY_FAILURE</tt>, an exception occurred in the
--   canary code. If this value is <tt>EXECUTION_FAILURE</tt>, an exception
--   occurred in CloudWatch Synthetics.
canaryRunStatus_stateReasonCode :: Lens' CanaryRunStatus (Maybe CanaryRunStateReasonCode)

-- | The end time of the run.
canaryRunTimeline_completed :: Lens' CanaryRunTimeline (Maybe UTCTime)

-- | The start time of the run.
canaryRunTimeline_started :: Lens' CanaryRunTimeline (Maybe UTCTime)

-- | How long, in seconds, for the canary to continue making regular runs
--   according to the schedule in the <tt>Expression</tt> value. If you
--   specify 0, the canary continues making runs until you stop it. If you
--   omit this field, the default of 0 is used.
canaryScheduleInput_durationInSeconds :: Lens' CanaryScheduleInput (Maybe Natural)

-- | A <tt>rate</tt> expression or a <tt>cron</tt> expression that defines
--   how often the canary is to run.
--   
--   For a rate expression, The syntax is <tt>rate(number unit)</tt>.
--   <i>unit</i> can be <tt>minute</tt>, <tt>minutes</tt>, or
--   <tt>hour</tt>.
--   
--   For example, <tt>rate(1 minute)</tt> runs the canary once a minute,
--   <tt>rate(10 minutes)</tt> runs it once every 10 minutes, and
--   <tt>rate(1 hour)</tt> runs it once every hour. You can specify a
--   frequency between <tt>rate(1 minute)</tt> and <tt>rate(1 hour)</tt>.
--   
--   Specifying <tt>rate(0 minute)</tt> or <tt>rate(0 hour)</tt> is a
--   special value that causes the canary to run only once when it is
--   started.
--   
--   Use <tt>cron(expression)</tt> to specify a cron expression. You can't
--   schedule a canary to wait for more than a year before running. For
--   information about the syntax for cron expressions, see <a>Scheduling
--   canary runs using cron</a>.
canaryScheduleInput_expression :: Lens' CanaryScheduleInput Text

-- | How long, in seconds, for the canary to continue making regular runs
--   after it was created. The runs are performed according to the schedule
--   in the <tt>Expression</tt> value.
canaryScheduleOutput_durationInSeconds :: Lens' CanaryScheduleOutput (Maybe Natural)

-- | A <tt>rate</tt> expression or a <tt>cron</tt> expression that defines
--   how often the canary is to run.
--   
--   For a rate expression, The syntax is <tt>rate(number unit)</tt>.
--   <i>unit</i> can be <tt>minute</tt>, <tt>minutes</tt>, or
--   <tt>hour</tt>.
--   
--   For example, <tt>rate(1 minute)</tt> runs the canary once a minute,
--   <tt>rate(10 minutes)</tt> runs it once every 10 minutes, and
--   <tt>rate(1 hour)</tt> runs it once every hour. You can specify a
--   frequency between <tt>rate(1 minute)</tt> and <tt>rate(1 hour)</tt>.
--   
--   Specifying <tt>rate(0 minute)</tt> or <tt>rate(0 hour)</tt> is a
--   special value that causes the canary to run only once when it is
--   started.
--   
--   Use <tt>cron(expression)</tt> to specify a cron expression. For
--   information about the syntax for cron expressions, see <a>Scheduling
--   canary runs using cron</a>.
canaryScheduleOutput_expression :: Lens' CanaryScheduleOutput (Maybe Text)

-- | The current state of the canary.
canaryStatus_state :: Lens' CanaryStatus (Maybe CanaryState)

-- | If the canary has insufficient permissions to run, this field provides
--   more details.
canaryStatus_stateReason :: Lens' CanaryStatus (Maybe Text)

-- | If the canary cannot run or has failed, this field displays the
--   reason.
canaryStatus_stateReasonCode :: Lens' CanaryStatus (Maybe CanaryStateReasonCode)

-- | The date and time the canary was created.
canaryTimeline_created :: Lens' CanaryTimeline (Maybe UTCTime)

-- | The date and time that the canary's most recent run started.
canaryTimeline_lastStarted :: Lens' CanaryTimeline (Maybe UTCTime)

-- | The date and time that the canary's most recent run ended.
canaryTimeline_lastStopped :: Lens' CanaryTimeline (Maybe UTCTime)

-- | The date and time the canary was most recently modified.
canaryTimeline_lastModified :: Lens' CanaryTimeline (Maybe UTCTime)

-- | The name of the runtime version. For a list of valid runtime versions,
--   see <a>Canary Runtime Versions</a>.
runtimeVersion_versionName :: Lens' RuntimeVersion (Maybe Text)

-- | If this runtime version is deprecated, this value is the date of
--   deprecation.
runtimeVersion_deprecationDate :: Lens' RuntimeVersion (Maybe UTCTime)

-- | The date that the runtime version was released.
runtimeVersion_releaseDate :: Lens' RuntimeVersion (Maybe UTCTime)

-- | A description of the runtime version, created by Amazon.
runtimeVersion_description :: Lens' RuntimeVersion (Maybe Text)

-- | The ARN of the customer-managed KMS key to use, if you specify
--   <tt>SSE-KMS</tt> for <tt>EncryptionMode</tt>
s3EncryptionConfig_kmsKeyArn :: Lens' S3EncryptionConfig (Maybe Text)

-- | The encryption method to use for artifacts created by this canary.
--   Specify <tt>SSE_S3</tt> to use server-side encryption (SSE) with an
--   Amazon S3-managed key. Specify <tt>SSE-KMS</tt> to use server-side
--   encryption with a customer-managed KMS key.
--   
--   If you omit this parameter, an Amazon Web Services-managed KMS key is
--   used.
s3EncryptionConfig_encryptionMode :: Lens' S3EncryptionConfig (Maybe EncryptionMode)

-- | An array of screenshots that will be used as the baseline for visual
--   monitoring in future runs of this canary. If there is a screenshot
--   that you don't want to be used for visual monitoring, remove it from
--   this array.
visualReferenceInput_baseScreenshots :: Lens' VisualReferenceInput (Maybe [BaseScreenshot])

-- | Specifies which canary run to use the screenshots from as the baseline
--   for future visual monitoring with this canary. Valid values are
--   <tt>nextrun</tt> to use the screenshots from the next run after this
--   update is made, <tt>lastrun</tt> to use the screenshots from the most
--   recent run before this update was made, or the value of <tt>Id</tt> in
--   the <a>CanaryRun</a> from any past run of this canary.
visualReferenceInput_baseCanaryRunId :: Lens' VisualReferenceInput Text

-- | An array of screenshots that are used as the baseline for comparisons
--   during visual monitoring.
visualReferenceOutput_baseScreenshots :: Lens' VisualReferenceOutput (Maybe [BaseScreenshot])

-- | The ID of the canary run that produced the screenshots that are used
--   as the baseline for visual monitoring comparisons during future runs
--   of this canary.
visualReferenceOutput_baseCanaryRunId :: Lens' VisualReferenceOutput (Maybe Text)

-- | The IDs of the security groups for this canary.
vpcConfigInput_securityGroupIds :: Lens' VpcConfigInput (Maybe [Text])

-- | The IDs of the subnets where this canary is to run.
vpcConfigInput_subnetIds :: Lens' VpcConfigInput (Maybe [Text])

-- | The IDs of the security groups for this canary.
vpcConfigOutput_securityGroupIds :: Lens' VpcConfigOutput (Maybe [Text])

-- | The IDs of the subnets where this canary is to run.
vpcConfigOutput_subnetIds :: Lens' VpcConfigOutput (Maybe [Text])

-- | The IDs of the VPC where this canary is to run.
vpcConfigOutput_vpcId :: Lens' VpcConfigOutput (Maybe Text)


module Network.AWS.Synthetics.Waiters


-- | Derived from API version <tt>2017-10-11</tt> of the AWS service
--   descriptions, licensed under Apache 2.0.
--   
--   Amazon CloudWatch Synthetics
--   
--   You can use Amazon CloudWatch Synthetics to continually monitor your
--   services. You can create and manage <i>canaries</i>, which are
--   modular, lightweight scripts that monitor your endpoints and APIs from
--   the outside-in. You can set up your canaries to run 24 hours a day,
--   once per minute. The canaries help you check the availability and
--   latency of your web services and troubleshoot anomalies by
--   investigating load time data, screenshots of the UI, logs, and
--   metrics. The canaries seamlessly integrate with CloudWatch ServiceLens
--   to help you trace the causes of impacted nodes in your applications.
--   For more information, see <a>Using ServiceLens to Monitor the Health
--   of Your Applications</a> in the <i>Amazon CloudWatch User Guide</i>.
--   
--   Before you create and manage canaries, be aware of the security
--   considerations. For more information, see <a>Security Considerations
--   for Synthetics Canaries</a>.
module Network.AWS.Synthetics

-- | API version <tt>2017-10-11</tt> of the Amazon Synthetics SDK
--   configuration.
defaultService :: Service

-- | A parameter could not be validated.
_ValidationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A conflicting operation is already in progress.
_ConflictException :: AsError a => Getting (First ServiceError) a ServiceError

-- | An unknown internal error occurred.
_InternalServerException :: AsError a => Getting (First ServiceError) a ServiceError

-- | One of the specified resources was not found.
_ResourceNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | <i>See:</i> <a>newUpdateCanary</a> smart constructor.
data UpdateCanary
UpdateCanary' :: Maybe Natural -> Maybe CanaryScheduleInput -> Maybe Text -> Maybe CanaryRunConfigInput -> Maybe Text -> Maybe Text -> Maybe Natural -> Maybe ArtifactConfigInput -> Maybe VpcConfigInput -> Maybe VisualReferenceInput -> Maybe CanaryCodeInput -> Text -> UpdateCanary

-- | Create a value of <a>UpdateCanary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:successRetentionPeriodInDays:UpdateCanary'</a>,
--   <a>updateCanary_successRetentionPeriodInDays</a> - The number of days
--   to retain data about successful runs of this canary.
--   
--   <a>$sel:schedule:UpdateCanary'</a>, <a>updateCanary_schedule</a> - A
--   structure that contains information about how often the canary is to
--   run, and when these runs are to stop.
--   
--   <a>$sel:artifactS3Location:UpdateCanary'</a>,
--   <a>updateCanary_artifactS3Location</a> - The location in Amazon S3
--   where Synthetics stores artifacts from the test runs of this canary.
--   Artifacts include the log file, screenshots, and HAR files. The name
--   of the S3 bucket can't include a period (.).
--   
--   <a>$sel:runConfig:UpdateCanary'</a>, <a>updateCanary_runConfig</a> - A
--   structure that contains the timeout value that is used for each
--   individual run of the canary.
--   
--   <a>$sel:executionRoleArn:UpdateCanary'</a>,
--   <a>updateCanary_executionRoleArn</a> - The ARN of the IAM role to be
--   used to run the canary. This role must already exist, and must include
--   <tt>lambda.amazonaws.com</tt> as a principal in the trust policy. The
--   role must also have the following permissions:
--   
--   <ul>
--   <li><pre>s3:PutObject</pre></li>
--   <li><pre>s3:GetBucketLocation</pre></li>
--   <li><pre>s3:ListAllMyBuckets</pre></li>
--   <li><pre>cloudwatch:PutMetricData</pre></li>
--   <li><pre>logs:CreateLogGroup</pre></li>
--   <li><pre>logs:CreateLogStream</pre></li>
--   <li><pre>logs:CreateLogStream</pre></li>
--   </ul>
--   
--   <a>$sel:runtimeVersion:UpdateCanary'</a>,
--   <a>updateCanary_runtimeVersion</a> - Specifies the runtime version to
--   use for the canary. For a list of valid runtime versions and for more
--   information about runtime versions, see <a>Canary Runtime
--   Versions</a>.
--   
--   <a>$sel:failureRetentionPeriodInDays:UpdateCanary'</a>,
--   <a>updateCanary_failureRetentionPeriodInDays</a> - The number of days
--   to retain data about failed runs of this canary.
--   
--   <a>$sel:artifactConfig:UpdateCanary'</a>,
--   <a>updateCanary_artifactConfig</a> - A structure that contains the
--   configuration for canary artifacts, including the encryption-at-rest
--   settings for artifacts that the canary uploads to Amazon S3.
--   
--   <a>$sel:vpcConfig:UpdateCanary'</a>, <a>updateCanary_vpcConfig</a> -
--   If this canary is to test an endpoint in a VPC, this structure
--   contains information about the subnet and security groups of the VPC
--   endpoint. For more information, see <a>Running a Canary in a VPC</a>.
--   
--   <a>$sel:visualReference:UpdateCanary'</a>,
--   <a>updateCanary_visualReference</a> - Defines the screenshots to use
--   as the baseline for comparisons during visual monitoring comparisons
--   during future runs of this canary. If you omit this parameter, no
--   changes are made to any baseline screenshots that the canary might be
--   using already.
--   
--   Visual monitoring is supported only on canaries running the
--   <b>syn-puppeteer-node-3.2</b> runtime or later. For more information,
--   see <a>Visual monitoring</a> and <a>Visual monitoring blueprint</a>
--   
--   <a>$sel:code:UpdateCanary'</a>, <a>updateCanary_code</a> - A structure
--   that includes the entry point from which the canary should start
--   running your script. If the script is stored in an S3 bucket, the
--   bucket name, key, and version are also included.
--   
--   <a>$sel:name:UpdateCanary'</a>, <a>updateCanary_name</a> - The name of
--   the canary that you want to update. To find the names of your
--   canaries, use <a>DescribeCanaries</a>.
--   
--   You cannot change the name of a canary that has already been created.
newUpdateCanary :: Text -> UpdateCanary

-- | <i>See:</i> <a>newUpdateCanaryResponse</a> smart constructor.
data UpdateCanaryResponse
UpdateCanaryResponse' :: Int -> UpdateCanaryResponse

-- | Create a value of <a>UpdateCanaryResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateCanaryResponse'</a>,
--   <a>updateCanaryResponse_httpStatus</a> - The response's http status
--   code.
newUpdateCanaryResponse :: Int -> UpdateCanaryResponse

-- | <i>See:</i> <a>newDeleteCanary</a> smart constructor.
data DeleteCanary
DeleteCanary' :: Text -> DeleteCanary

-- | Create a value of <a>DeleteCanary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:DeleteCanary'</a>, <a>deleteCanary_name</a> - The name of
--   the canary that you want to delete. To find the names of your
--   canaries, use <a>DescribeCanaries</a>.
newDeleteCanary :: Text -> DeleteCanary

-- | <i>See:</i> <a>newDeleteCanaryResponse</a> smart constructor.
data DeleteCanaryResponse
DeleteCanaryResponse' :: Int -> DeleteCanaryResponse

-- | Create a value of <a>DeleteCanaryResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteCanaryResponse'</a>,
--   <a>deleteCanaryResponse_httpStatus</a> - The response's http status
--   code.
newDeleteCanaryResponse :: Int -> DeleteCanaryResponse

-- | <i>See:</i> <a>newCreateCanary</a> smart constructor.
data CreateCanary
CreateCanary' :: Maybe Natural -> Maybe CanaryRunConfigInput -> Maybe Natural -> Maybe ArtifactConfigInput -> Maybe VpcConfigInput -> Maybe (HashMap Text Text) -> Text -> CanaryCodeInput -> Text -> Text -> CanaryScheduleInput -> Text -> CreateCanary

-- | Create a value of <a>CreateCanary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:successRetentionPeriodInDays:CreateCanary'</a>,
--   <a>createCanary_successRetentionPeriodInDays</a> - The number of days
--   to retain data about successful runs of this canary. If you omit this
--   field, the default of 31 days is used. The valid range is 1 to 455
--   days.
--   
--   <a>$sel:runConfig:CreateCanary'</a>, <a>createCanary_runConfig</a> - A
--   structure that contains the configuration for individual canary runs,
--   such as timeout value.
--   
--   <a>$sel:failureRetentionPeriodInDays:CreateCanary'</a>,
--   <a>createCanary_failureRetentionPeriodInDays</a> - The number of days
--   to retain data about failed runs of this canary. If you omit this
--   field, the default of 31 days is used. The valid range is 1 to 455
--   days.
--   
--   <a>$sel:artifactConfig:CreateCanary'</a>,
--   <a>createCanary_artifactConfig</a> - A structure that contains the
--   configuration for canary artifacts, including the encryption-at-rest
--   settings for artifacts that the canary uploads to Amazon S3.
--   
--   <a>$sel:vpcConfig:CreateCanary'</a>, <a>createCanary_vpcConfig</a> -
--   If this canary is to test an endpoint in a VPC, this structure
--   contains information about the subnet and security groups of the VPC
--   endpoint. For more information, see <a>Running a Canary in a VPC</a>.
--   
--   <a>$sel:tags:CreateCanary'</a>, <a>createCanary_tags</a> - A list of
--   key-value pairs to associate with the canary. You can associate as
--   many as 50 tags with a canary.
--   
--   Tags can help you organize and categorize your resources. You can also
--   use them to scope user permissions, by granting a user permission to
--   access or change only the resources that have certain tag values.
--   
--   <a>$sel:name:CreateCanary'</a>, <a>createCanary_name</a> - The name
--   for this canary. Be sure to give it a descriptive name that
--   distinguishes it from other canaries in your account.
--   
--   Do not include secrets or proprietary information in your canary
--   names. The canary name makes up part of the canary ARN, and the ARN is
--   included in outbound calls over the internet. For more information,
--   see <a>Security Considerations for Synthetics Canaries</a>.
--   
--   <a>$sel:code:CreateCanary'</a>, <a>createCanary_code</a> - A structure
--   that includes the entry point from which the canary should start
--   running your script. If the script is stored in an S3 bucket, the
--   bucket name, key, and version are also included.
--   
--   <a>$sel:artifactS3Location:CreateCanary'</a>,
--   <a>createCanary_artifactS3Location</a> - The location in Amazon S3
--   where Synthetics stores artifacts from the test runs of this canary.
--   Artifacts include the log file, screenshots, and HAR files. The name
--   of the S3 bucket can't include a period (.).
--   
--   <a>$sel:executionRoleArn:CreateCanary'</a>,
--   <a>createCanary_executionRoleArn</a> - The ARN of the IAM role to be
--   used to run the canary. This role must already exist, and must include
--   <tt>lambda.amazonaws.com</tt> as a principal in the trust policy. The
--   role must also have the following permissions:
--   
--   <ul>
--   <li><pre>s3:PutObject</pre></li>
--   <li><pre>s3:GetBucketLocation</pre></li>
--   <li><pre>s3:ListAllMyBuckets</pre></li>
--   <li><pre>cloudwatch:PutMetricData</pre></li>
--   <li><pre>logs:CreateLogGroup</pre></li>
--   <li><pre>logs:CreateLogStream</pre></li>
--   <li><pre>logs:PutLogEvents</pre></li>
--   </ul>
--   
--   <a>$sel:schedule:CreateCanary'</a>, <a>createCanary_schedule</a> - A
--   structure that contains information about how often the canary is to
--   run and when these test runs are to stop.
--   
--   <a>$sel:runtimeVersion:CreateCanary'</a>,
--   <a>createCanary_runtimeVersion</a> - Specifies the runtime version to
--   use for the canary. For a list of valid runtime versions and more
--   information about runtime versions, see <a>Canary Runtime
--   Versions</a>.
newCreateCanary :: Text -> CanaryCodeInput -> Text -> Text -> CanaryScheduleInput -> Text -> CreateCanary

-- | <i>See:</i> <a>newCreateCanaryResponse</a> smart constructor.
data CreateCanaryResponse
CreateCanaryResponse' :: Maybe Canary -> Int -> CreateCanaryResponse

-- | Create a value of <a>CreateCanaryResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:canary:CreateCanaryResponse'</a>,
--   <a>createCanaryResponse_canary</a> - The full details about the canary
--   you have created.
--   
--   <a>$sel:httpStatus:CreateCanaryResponse'</a>,
--   <a>createCanaryResponse_httpStatus</a> - The response's http status
--   code.
newCreateCanaryResponse :: Int -> CreateCanaryResponse

-- | <i>See:</i> <a>newListTagsForResource</a> smart constructor.
data ListTagsForResource
ListTagsForResource' :: Text -> ListTagsForResource

-- | Create a value of <a>ListTagsForResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:ListTagsForResource'</a>,
--   <a>listTagsForResource_resourceArn</a> - The ARN of the canary that
--   you want to view tags for.
--   
--   The ARN format of a canary is
--   <tt>arn:aws:synthetics:Region:account-id:canary:canary-name </tt>.
newListTagsForResource :: Text -> ListTagsForResource

-- | <i>See:</i> <a>newListTagsForResourceResponse</a> smart constructor.
data ListTagsForResourceResponse
ListTagsForResourceResponse' :: Maybe (HashMap Text Text) -> Int -> ListTagsForResourceResponse

-- | Create a value of <a>ListTagsForResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_tags</a> - The list of tag keys and
--   values associated with the canary that you specified.
--   
--   <a>$sel:httpStatus:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_httpStatus</a> - The response's http
--   status code.
newListTagsForResourceResponse :: Int -> ListTagsForResourceResponse

-- | <i>See:</i> <a>newGetCanaryRuns</a> smart constructor.
data GetCanaryRuns
GetCanaryRuns' :: Maybe Text -> Maybe Natural -> Text -> GetCanaryRuns

-- | Create a value of <a>GetCanaryRuns</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetCanaryRuns'</a>, <a>getCanaryRuns_nextToken</a> -
--   A token that indicates that there is more data available. You can use
--   this token in a subsequent <tt>GetCanaryRuns</tt> operation to
--   retrieve the next set of results.
--   
--   <a>$sel:maxResults:GetCanaryRuns'</a>, <a>getCanaryRuns_maxResults</a>
--   - Specify this parameter to limit how many runs are returned each time
--   you use the <tt>GetCanaryRuns</tt> operation. If you omit this
--   parameter, the default of 100 is used.
--   
--   <a>$sel:name:GetCanaryRuns'</a>, <a>getCanaryRuns_name</a> - The name
--   of the canary that you want to see runs for.
newGetCanaryRuns :: Text -> GetCanaryRuns

-- | <i>See:</i> <a>newGetCanaryRunsResponse</a> smart constructor.
data GetCanaryRunsResponse
GetCanaryRunsResponse' :: Maybe Text -> Maybe [CanaryRun] -> Int -> GetCanaryRunsResponse

-- | Create a value of <a>GetCanaryRunsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetCanaryRuns'</a>,
--   <a>getCanaryRunsResponse_nextToken</a> - A token that indicates that
--   there is more data available. You can use this token in a subsequent
--   <tt>GetCanaryRuns</tt> operation to retrieve the next set of results.
--   
--   <a>$sel:canaryRuns:GetCanaryRunsResponse'</a>,
--   <a>getCanaryRunsResponse_canaryRuns</a> - An array of structures. Each
--   structure contains the details of one of the retrieved canary runs.
--   
--   <a>$sel:httpStatus:GetCanaryRunsResponse'</a>,
--   <a>getCanaryRunsResponse_httpStatus</a> - The response's http status
--   code.
newGetCanaryRunsResponse :: Int -> GetCanaryRunsResponse

-- | <i>See:</i> <a>newGetCanary</a> smart constructor.
data GetCanary
GetCanary' :: Text -> GetCanary

-- | Create a value of <a>GetCanary</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:GetCanary'</a>, <a>getCanary_name</a> - The name of the
--   canary that you want details for.
newGetCanary :: Text -> GetCanary

-- | <i>See:</i> <a>newGetCanaryResponse</a> smart constructor.
data GetCanaryResponse
GetCanaryResponse' :: Maybe Canary -> Int -> GetCanaryResponse

-- | Create a value of <a>GetCanaryResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:canary:GetCanaryResponse'</a>, <a>getCanaryResponse_canary</a>
--   - A strucure that contains the full information about the canary.
--   
--   <a>$sel:httpStatus:GetCanaryResponse'</a>,
--   <a>getCanaryResponse_httpStatus</a> - The response's http status code.
newGetCanaryResponse :: Int -> GetCanaryResponse

-- | <i>See:</i> <a>newDescribeRuntimeVersions</a> smart constructor.
data DescribeRuntimeVersions
DescribeRuntimeVersions' :: Maybe Text -> Maybe Natural -> DescribeRuntimeVersions

-- | Create a value of <a>DescribeRuntimeVersions</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeRuntimeVersions'</a>,
--   <a>describeRuntimeVersions_nextToken</a> - A token that indicates that
--   there is more data available. You can use this token in a subsequent
--   <tt>DescribeRuntimeVersions</tt> operation to retrieve the next set of
--   results.
--   
--   <a>$sel:maxResults:DescribeRuntimeVersions'</a>,
--   <a>describeRuntimeVersions_maxResults</a> - Specify this parameter to
--   limit how many runs are returned each time you use the
--   <tt>DescribeRuntimeVersions</tt> operation. If you omit this
--   parameter, the default of 100 is used.
newDescribeRuntimeVersions :: DescribeRuntimeVersions

-- | <i>See:</i> <a>newDescribeRuntimeVersionsResponse</a> smart
--   constructor.
data DescribeRuntimeVersionsResponse
DescribeRuntimeVersionsResponse' :: Maybe [RuntimeVersion] -> Maybe Text -> Int -> DescribeRuntimeVersionsResponse

-- | Create a value of <a>DescribeRuntimeVersionsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:runtimeVersions:DescribeRuntimeVersionsResponse'</a>,
--   <a>describeRuntimeVersionsResponse_runtimeVersions</a> - An array of
--   objects that display the details about each Synthetics canary runtime
--   version.
--   
--   <a>$sel:nextToken:DescribeRuntimeVersions'</a>,
--   <a>describeRuntimeVersionsResponse_nextToken</a> - A token that
--   indicates that there is more data available. You can use this token in
--   a subsequent <tt>DescribeRuntimeVersions</tt> operation to retrieve
--   the next set of results.
--   
--   <a>$sel:httpStatus:DescribeRuntimeVersionsResponse'</a>,
--   <a>describeRuntimeVersionsResponse_httpStatus</a> - The response's
--   http status code.
newDescribeRuntimeVersionsResponse :: Int -> DescribeRuntimeVersionsResponse

-- | <i>See:</i> <a>newDescribeCanariesLastRun</a> smart constructor.
data DescribeCanariesLastRun
DescribeCanariesLastRun' :: Maybe Text -> Maybe Natural -> DescribeCanariesLastRun

-- | Create a value of <a>DescribeCanariesLastRun</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeCanariesLastRun'</a>,
--   <a>describeCanariesLastRun_nextToken</a> - A token that indicates that
--   there is more data available. You can use this token in a subsequent
--   <tt>DescribeCanaries</tt> operation to retrieve the next set of
--   results.
--   
--   <a>$sel:maxResults:DescribeCanariesLastRun'</a>,
--   <a>describeCanariesLastRun_maxResults</a> - Specify this parameter to
--   limit how many runs are returned each time you use the
--   <tt>DescribeLastRun</tt> operation. If you omit this parameter, the
--   default of 100 is used.
newDescribeCanariesLastRun :: DescribeCanariesLastRun

-- | <i>See:</i> <a>newDescribeCanariesLastRunResponse</a> smart
--   constructor.
data DescribeCanariesLastRunResponse
DescribeCanariesLastRunResponse' :: Maybe Text -> Maybe [CanaryLastRun] -> Int -> DescribeCanariesLastRunResponse

-- | Create a value of <a>DescribeCanariesLastRunResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeCanariesLastRun'</a>,
--   <a>describeCanariesLastRunResponse_nextToken</a> - A token that
--   indicates that there is more data available. You can use this token in
--   a subsequent <tt>DescribeCanariesLastRun</tt> operation to retrieve
--   the next set of results.
--   
--   <a>$sel:canariesLastRun:DescribeCanariesLastRunResponse'</a>,
--   <a>describeCanariesLastRunResponse_canariesLastRun</a> - An array that
--   contains the information from the most recent run of each canary.
--   
--   <a>$sel:httpStatus:DescribeCanariesLastRunResponse'</a>,
--   <a>describeCanariesLastRunResponse_httpStatus</a> - The response's
--   http status code.
newDescribeCanariesLastRunResponse :: Int -> DescribeCanariesLastRunResponse

-- | <i>See:</i> <a>newStartCanary</a> smart constructor.
data StartCanary
StartCanary' :: Text -> StartCanary

-- | Create a value of <a>StartCanary</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:StartCanary'</a>, <a>startCanary_name</a> - The name of
--   the canary that you want to run. To find canary names, use
--   <a>DescribeCanaries</a>.
newStartCanary :: Text -> StartCanary

-- | <i>See:</i> <a>newStartCanaryResponse</a> smart constructor.
data StartCanaryResponse
StartCanaryResponse' :: Int -> StartCanaryResponse

-- | Create a value of <a>StartCanaryResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:StartCanaryResponse'</a>,
--   <a>startCanaryResponse_httpStatus</a> - The response's http status
--   code.
newStartCanaryResponse :: Int -> StartCanaryResponse

-- | <i>See:</i> <a>newDescribeCanaries</a> smart constructor.
data DescribeCanaries
DescribeCanaries' :: Maybe Text -> Maybe Natural -> DescribeCanaries

-- | Create a value of <a>DescribeCanaries</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeCanaries'</a>,
--   <a>describeCanaries_nextToken</a> - A token that indicates that there
--   is more data available. You can use this token in a subsequent
--   operation to retrieve the next set of results.
--   
--   <a>$sel:maxResults:DescribeCanaries'</a>,
--   <a>describeCanaries_maxResults</a> - Specify this parameter to limit
--   how many canaries are returned each time you use the
--   <tt>DescribeCanaries</tt> operation. If you omit this parameter, the
--   default of 100 is used.
newDescribeCanaries :: DescribeCanaries

-- | <i>See:</i> <a>newDescribeCanariesResponse</a> smart constructor.
data DescribeCanariesResponse
DescribeCanariesResponse' :: Maybe [Canary] -> Maybe Text -> Int -> DescribeCanariesResponse

-- | Create a value of <a>DescribeCanariesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:canaries:DescribeCanariesResponse'</a>,
--   <a>describeCanariesResponse_canaries</a> - Returns an array. Each item
--   in the array contains the full information about one canary.
--   
--   <a>$sel:nextToken:DescribeCanaries'</a>,
--   <a>describeCanariesResponse_nextToken</a> - A token that indicates
--   that there is more data available. You can use this token in a
--   subsequent <tt>DescribeCanaries</tt> operation to retrieve the next
--   set of results.
--   
--   <a>$sel:httpStatus:DescribeCanariesResponse'</a>,
--   <a>describeCanariesResponse_httpStatus</a> - The response's http
--   status code.
newDescribeCanariesResponse :: Int -> DescribeCanariesResponse

-- | <i>See:</i> <a>newTagResource</a> smart constructor.
data TagResource
TagResource' :: Text -> HashMap Text Text -> TagResource

-- | Create a value of <a>TagResource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:TagResource'</a>, <a>tagResource_resourceArn</a> -
--   The ARN of the canary that you're adding tags to.
--   
--   The ARN format of a canary is
--   <tt>arn:aws:synthetics:Region:account-id:canary:canary-name </tt>.
--   
--   <a>$sel:tags:TagResource'</a>, <a>tagResource_tags</a> - The list of
--   key-value pairs to associate with the canary.
newTagResource :: Text -> TagResource

-- | <i>See:</i> <a>newTagResourceResponse</a> smart constructor.
data TagResourceResponse
TagResourceResponse' :: Int -> TagResourceResponse

-- | Create a value of <a>TagResourceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:TagResourceResponse'</a>,
--   <a>tagResourceResponse_httpStatus</a> - The response's http status
--   code.
newTagResourceResponse :: Int -> TagResourceResponse

-- | <i>See:</i> <a>newUntagResource</a> smart constructor.
data UntagResource
UntagResource' :: Text -> NonEmpty Text -> UntagResource

-- | Create a value of <a>UntagResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:UntagResource'</a>,
--   <a>untagResource_resourceArn</a> - The ARN of the canary that you're
--   removing tags from.
--   
--   The ARN format of a canary is
--   <tt>arn:aws:synthetics:Region:account-id:canary:canary-name </tt>.
--   
--   <a>$sel:tagKeys:UntagResource'</a>, <a>untagResource_tagKeys</a> - The
--   list of tag keys to remove from the resource.
newUntagResource :: Text -> NonEmpty Text -> UntagResource

-- | <i>See:</i> <a>newUntagResourceResponse</a> smart constructor.
data UntagResourceResponse
UntagResourceResponse' :: Int -> UntagResourceResponse

-- | Create a value of <a>UntagResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UntagResourceResponse'</a>,
--   <a>untagResourceResponse_httpStatus</a> - The response's http status
--   code.
newUntagResourceResponse :: Int -> UntagResourceResponse

-- | <i>See:</i> <a>newStopCanary</a> smart constructor.
data StopCanary
StopCanary' :: Text -> StopCanary

-- | Create a value of <a>StopCanary</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:StopCanary'</a>, <a>stopCanary_name</a> - The name of the
--   canary that you want to stop. To find the names of your canaries, use
--   <a>DescribeCanaries</a>.
newStopCanary :: Text -> StopCanary

-- | <i>See:</i> <a>newStopCanaryResponse</a> smart constructor.
data StopCanaryResponse
StopCanaryResponse' :: Int -> StopCanaryResponse

-- | Create a value of <a>StopCanaryResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:StopCanaryResponse'</a>,
--   <a>stopCanaryResponse_httpStatus</a> - The response's http status
--   code.
newStopCanaryResponse :: Int -> StopCanaryResponse
newtype CanaryRunState
CanaryRunState' :: Text -> CanaryRunState
[fromCanaryRunState] :: CanaryRunState -> Text
pattern CanaryRunState_FAILED :: CanaryRunState
pattern CanaryRunState_PASSED :: CanaryRunState
pattern CanaryRunState_RUNNING :: CanaryRunState
newtype CanaryRunStateReasonCode
CanaryRunStateReasonCode' :: Text -> CanaryRunStateReasonCode
[fromCanaryRunStateReasonCode] :: CanaryRunStateReasonCode -> Text
pattern CanaryRunStateReasonCode_CANARY_FAILURE :: CanaryRunStateReasonCode
pattern CanaryRunStateReasonCode_EXECUTION_FAILURE :: CanaryRunStateReasonCode
newtype CanaryState
CanaryState' :: Text -> CanaryState
[fromCanaryState] :: CanaryState -> Text
pattern CanaryState_CREATING :: CanaryState
pattern CanaryState_DELETING :: CanaryState
pattern CanaryState_ERROR :: CanaryState
pattern CanaryState_READY :: CanaryState
pattern CanaryState_RUNNING :: CanaryState
pattern CanaryState_STARTING :: CanaryState
pattern CanaryState_STOPPED :: CanaryState
pattern CanaryState_STOPPING :: CanaryState
pattern CanaryState_UPDATING :: CanaryState
newtype CanaryStateReasonCode
CanaryStateReasonCode' :: Text -> CanaryStateReasonCode
[fromCanaryStateReasonCode] :: CanaryStateReasonCode -> Text
pattern CanaryStateReasonCode_INVALID_PERMISSIONS :: CanaryStateReasonCode
newtype EncryptionMode
EncryptionMode' :: Text -> EncryptionMode
[fromEncryptionMode] :: EncryptionMode -> Text
pattern EncryptionMode_SSE_KMS :: EncryptionMode
pattern EncryptionMode_SSE_S3 :: EncryptionMode

-- | A structure that contains the configuration for canary artifacts,
--   including the encryption-at-rest settings for artifacts that the
--   canary uploads to Amazon S3.
--   
--   <i>See:</i> <a>newArtifactConfigInput</a> smart constructor.
data ArtifactConfigInput
ArtifactConfigInput' :: Maybe S3EncryptionConfig -> ArtifactConfigInput

-- | Create a value of <a>ArtifactConfigInput</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:s3Encryption:ArtifactConfigInput'</a>,
--   <a>artifactConfigInput_s3Encryption</a> - A structure that contains
--   the configuration of the encryption-at-rest settings for artifacts
--   that the canary uploads to Amazon S3. Artifact encryption
--   functionality is available only for canaries that use Synthetics
--   runtime version syn-nodejs-puppeteer-3.3 or later. For more
--   information, see <a>Encrypting canary artifacts</a>
newArtifactConfigInput :: ArtifactConfigInput

-- | A structure that contains the configuration for canary artifacts,
--   including the encryption-at-rest settings for artifacts that the
--   canary uploads to Amazon S3.
--   
--   <i>See:</i> <a>newArtifactConfigOutput</a> smart constructor.
data ArtifactConfigOutput
ArtifactConfigOutput' :: Maybe S3EncryptionConfig -> ArtifactConfigOutput

-- | Create a value of <a>ArtifactConfigOutput</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:s3Encryption:ArtifactConfigOutput'</a>,
--   <a>artifactConfigOutput_s3Encryption</a> - A structure that contains
--   the configuration of encryption settings for canary artifacts that are
--   stored in Amazon S3.
newArtifactConfigOutput :: ArtifactConfigOutput

-- | A structure representing a screenshot that is used as a baseline
--   during visual monitoring comparisons made by the canary.
--   
--   <i>See:</i> <a>newBaseScreenshot</a> smart constructor.
data BaseScreenshot
BaseScreenshot' :: Maybe [Text] -> Text -> BaseScreenshot

-- | Create a value of <a>BaseScreenshot</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ignoreCoordinates:BaseScreenshot'</a>,
--   <a>baseScreenshot_ignoreCoordinates</a> - Coordinates that define the
--   part of a screen to ignore during screenshot comparisons. To obtain
--   the coordinates to use here, use the CloudWatch Logs console to draw
--   the boundaries on the screen. For more information, see {LINK}
--   
--   <a>$sel:screenshotName:BaseScreenshot'</a>,
--   <a>baseScreenshot_screenshotName</a> - The name of the screenshot.
--   This is generated the first time the canary is run after the
--   <tt>UpdateCanary</tt> operation that specified for this canary to
--   perform visual monitoring.
newBaseScreenshot :: Text -> BaseScreenshot

-- | This structure contains all information about one canary in your
--   account.
--   
--   <i>See:</i> <a>newCanary</a> smart constructor.
data Canary
Canary' :: Maybe CanaryStatus -> Maybe Natural -> Maybe CanaryScheduleOutput -> Maybe Text -> Maybe CanaryRunConfigOutput -> Maybe Text -> Maybe Text -> Maybe Natural -> Maybe ArtifactConfigOutput -> Maybe VpcConfigOutput -> Maybe VisualReferenceOutput -> Maybe Text -> Maybe Text -> Maybe CanaryCodeOutput -> Maybe CanaryTimeline -> Maybe Text -> Maybe (HashMap Text Text) -> Canary

-- | Create a value of <a>Canary</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:Canary'</a>, <a>canary_status</a> - A structure that
--   contains information about the canary's status.
--   
--   <a>$sel:successRetentionPeriodInDays:Canary'</a>,
--   <a>canary_successRetentionPeriodInDays</a> - The number of days to
--   retain data about successful runs of this canary.
--   
--   <a>$sel:schedule:Canary'</a>, <a>canary_schedule</a> - A structure
--   that contains information about how often the canary is to run, and
--   when these runs are to stop.
--   
--   <a>$sel:artifactS3Location:Canary'</a>,
--   <a>canary_artifactS3Location</a> - The location in Amazon S3 where
--   Synthetics stores artifacts from the runs of this canary. Artifacts
--   include the log file, screenshots, and HAR files.
--   
--   <a>$sel:runConfig:Canary'</a>, <a>canary_runConfig</a> - Undocumented
--   member.
--   
--   <a>$sel:executionRoleArn:Canary'</a>, <a>canary_executionRoleArn</a> -
--   The ARN of the IAM role used to run the canary. This role must include
--   <tt>lambda.amazonaws.com</tt> as a principal in the trust policy.
--   
--   <a>$sel:runtimeVersion:Canary'</a>, <a>canary_runtimeVersion</a> -
--   Specifies the runtime version to use for the canary. For more
--   information about runtime versions, see <a>Canary Runtime
--   Versions</a>.
--   
--   <a>$sel:failureRetentionPeriodInDays:Canary'</a>,
--   <a>canary_failureRetentionPeriodInDays</a> - The number of days to
--   retain data about failed runs of this canary.
--   
--   <a>$sel:artifactConfig:Canary'</a>, <a>canary_artifactConfig</a> - A
--   structure that contains the configuration for canary artifacts,
--   including the encryption-at-rest settings for artifacts that the
--   canary uploads to Amazon S3.
--   
--   <a>$sel:vpcConfig:Canary'</a>, <a>canary_vpcConfig</a> - Undocumented
--   member.
--   
--   <a>$sel:visualReference:Canary'</a>, <a>canary_visualReference</a> -
--   If this canary performs visual monitoring by comparing screenshots,
--   this structure contains the ID of the canary run to use as the
--   baseline for screenshots, and the coordinates of any parts of the
--   screen to ignore during the visual monitoring comparison.
--   
--   <a>$sel:name:Canary'</a>, <a>canary_name</a> - The name of the canary.
--   
--   <a>$sel:id:Canary'</a>, <a>canary_id</a> - The unique ID of this
--   canary.
--   
--   <a>$sel:code:Canary'</a>, <a>canary_code</a> - Undocumented member.
--   
--   <a>$sel:timeline:Canary'</a>, <a>canary_timeline</a> - A structure
--   that contains information about when the canary was created, modified,
--   and most recently run.
--   
--   <a>$sel:engineArn:Canary'</a>, <a>canary_engineArn</a> - The ARN of
--   the Lambda function that is used as your canary's engine. For more
--   information about Lambda ARN format, see <a>Resources and Conditions
--   for Lambda Actions</a>.
--   
--   <a>$sel:tags:Canary'</a>, <a>canary_tags</a> - The list of key-value
--   pairs that are associated with the canary.
newCanary :: Canary

-- | Use this structure to input your script code for the canary. This
--   structure contains the Lambda handler with the location where the
--   canary should start running the script. If the script is stored in an
--   S3 bucket, the bucket name, key, and version are also included. If the
--   script was passed into the canary directly, the script code is
--   contained in the value of <tt>Zipfile</tt>.
--   
--   <i>See:</i> <a>newCanaryCodeInput</a> smart constructor.
data CanaryCodeInput
CanaryCodeInput' :: Maybe Text -> Maybe Text -> Maybe Base64 -> Maybe Text -> Text -> CanaryCodeInput

-- | Create a value of <a>CanaryCodeInput</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:s3Key:CanaryCodeInput'</a>, <a>canaryCodeInput_s3Key</a> - The
--   S3 key of your script. For more information, see <a>Working with
--   Amazon S3 Objects</a>.
--   
--   <a>$sel:s3Version:CanaryCodeInput'</a>,
--   <a>canaryCodeInput_s3Version</a> - The S3 version ID of your script.
--   
--   <a>$sel:zipFile:CanaryCodeInput'</a>, <a>canaryCodeInput_zipFile</a> -
--   If you input your canary script directly into the canary instead of
--   referring to an S3 location, the value of this parameter is the
--   base64-encoded contents of the .zip file that contains the script. It
--   must be smaller than 256 Kb.-- -- <i>Note:</i> This <tt>Lens</tt>
--   automatically encodes and decodes Base64 data. -- The underlying
--   isomorphism will encode to Base64 representation during --
--   serialisation, and decode from Base64 representation during
--   deserialisation. -- This <tt>Lens</tt> accepts and returns only raw
--   unencoded data.
--   
--   <a>$sel:s3Bucket:CanaryCodeInput'</a>, <a>canaryCodeInput_s3Bucket</a>
--   - If your canary script is located in S3, specify the bucket name
--   here. Do not include <tt>s3://</tt> as the start of the bucket name.
--   
--   <a>$sel:handler:CanaryCodeInput'</a>, <a>canaryCodeInput_handler</a> -
--   The entry point to use for the source code when running the canary.
--   This value must end with the string <tt>.handler</tt>. The string is
--   limited to 29 characters or fewer.
newCanaryCodeInput :: Text -> CanaryCodeInput

-- | This structure contains information about the canary's Lambda handler
--   and where its code is stored by CloudWatch Synthetics.
--   
--   <i>See:</i> <a>newCanaryCodeOutput</a> smart constructor.
data CanaryCodeOutput
CanaryCodeOutput' :: Maybe Text -> Maybe Text -> CanaryCodeOutput

-- | Create a value of <a>CanaryCodeOutput</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sourceLocationArn:CanaryCodeOutput'</a>,
--   <a>canaryCodeOutput_sourceLocationArn</a> - The ARN of the Lambda
--   layer where Synthetics stores the canary script code.
--   
--   <a>$sel:handler:CanaryCodeOutput'</a>, <a>canaryCodeOutput_handler</a>
--   - The entry point to use for the source code when running the canary.
newCanaryCodeOutput :: CanaryCodeOutput

-- | This structure contains information about the most recent run of a
--   single canary.
--   
--   <i>See:</i> <a>newCanaryLastRun</a> smart constructor.
data CanaryLastRun
CanaryLastRun' :: Maybe Text -> Maybe CanaryRun -> CanaryLastRun

-- | Create a value of <a>CanaryLastRun</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:canaryName:CanaryLastRun'</a>, <a>canaryLastRun_canaryName</a>
--   - The name of the canary.
--   
--   <a>$sel:lastRun:CanaryLastRun'</a>, <a>canaryLastRun_lastRun</a> - The
--   results from this canary's most recent run.
newCanaryLastRun :: CanaryLastRun

-- | This structure contains the details about one run of one canary.
--   
--   <i>See:</i> <a>newCanaryRun</a> smart constructor.
data CanaryRun
CanaryRun' :: Maybe CanaryRunStatus -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe CanaryRunTimeline -> CanaryRun

-- | Create a value of <a>CanaryRun</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:CanaryRun'</a>, <a>canaryRun_status</a> - The status of
--   this run.
--   
--   <a>$sel:artifactS3Location:CanaryRun'</a>,
--   <a>canaryRun_artifactS3Location</a> - The location where the canary
--   stored artifacts from the run. Artifacts include the log file,
--   screenshots, and HAR files.
--   
--   <a>$sel:name:CanaryRun'</a>, <a>canaryRun_name</a> - The name of the
--   canary.
--   
--   <a>$sel:id:CanaryRun'</a>, <a>canaryRun_id</a> - A unique ID that
--   identifies this canary run.
--   
--   <a>$sel:timeline:CanaryRun'</a>, <a>canaryRun_timeline</a> - A
--   structure that contains the start and end times of this run.
newCanaryRun :: CanaryRun

-- | A structure that contains input information for a canary run.
--   
--   <i>See:</i> <a>newCanaryRunConfigInput</a> smart constructor.
data CanaryRunConfigInput
CanaryRunConfigInput' :: Maybe Natural -> Maybe (HashMap Text Text) -> Maybe Bool -> Maybe Natural -> CanaryRunConfigInput

-- | Create a value of <a>CanaryRunConfigInput</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:timeoutInSeconds:CanaryRunConfigInput'</a>,
--   <a>canaryRunConfigInput_timeoutInSeconds</a> - How long the canary is
--   allowed to run before it must stop. You can't set this time to be
--   longer than the frequency of the runs of this canary.
--   
--   If you omit this field, the frequency of the canary is used as this
--   value, up to a maximum of 14 minutes.
--   
--   <a>$sel:environmentVariables:CanaryRunConfigInput'</a>,
--   <a>canaryRunConfigInput_environmentVariables</a> - Specifies the keys
--   and values to use for any environment variables used in the canary
--   script. Use the following format:
--   
--   { "key1" : "value1", "key2" : "value2", ...}
--   
--   Keys must start with a letter and be at least two characters. The
--   total size of your environment variables cannot exceed 4 KB. You can't
--   specify any Lambda reserved environment variables as the keys for your
--   environment variables. For more information about reserved keys, see
--   <a>Runtime environment variables</a>.
--   
--   <a>$sel:activeTracing:CanaryRunConfigInput'</a>,
--   <a>canaryRunConfigInput_activeTracing</a> - Specifies whether this
--   canary is to use active X-Ray tracing when it runs. Active tracing
--   enables this canary run to be displayed in the ServiceLens and X-Ray
--   service maps even if the canary does not hit an endpoint that has
--   X-Ray tracing enabled. Using X-Ray tracing incurs charges. For more
--   information, see <a>Canaries and X-Ray tracing</a>.
--   
--   You can enable active tracing only for canaries that use version
--   <tt>syn-nodejs-2.0</tt> or later for their canary runtime.
--   
--   <a>$sel:memoryInMB:CanaryRunConfigInput'</a>,
--   <a>canaryRunConfigInput_memoryInMB</a> - The maximum amount of memory
--   available to the canary while it is running, in MB. This value must be
--   a multiple of 64.
newCanaryRunConfigInput :: CanaryRunConfigInput

-- | A structure that contains information about a canary run.
--   
--   <i>See:</i> <a>newCanaryRunConfigOutput</a> smart constructor.
data CanaryRunConfigOutput
CanaryRunConfigOutput' :: Maybe Natural -> Maybe Bool -> Maybe Natural -> CanaryRunConfigOutput

-- | Create a value of <a>CanaryRunConfigOutput</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:timeoutInSeconds:CanaryRunConfigOutput'</a>,
--   <a>canaryRunConfigOutput_timeoutInSeconds</a> - How long the canary is
--   allowed to run before it must stop.
--   
--   <a>$sel:activeTracing:CanaryRunConfigOutput'</a>,
--   <a>canaryRunConfigOutput_activeTracing</a> - Displays whether this
--   canary run used active X-Ray tracing.
--   
--   <a>$sel:memoryInMB:CanaryRunConfigOutput'</a>,
--   <a>canaryRunConfigOutput_memoryInMB</a> - The maximum amount of memory
--   available to the canary while it is running, in MB. This value must be
--   a multiple of 64.
newCanaryRunConfigOutput :: CanaryRunConfigOutput

-- | This structure contains the status information about a canary run.
--   
--   <i>See:</i> <a>newCanaryRunStatus</a> smart constructor.
data CanaryRunStatus
CanaryRunStatus' :: Maybe CanaryRunState -> Maybe Text -> Maybe CanaryRunStateReasonCode -> CanaryRunStatus

-- | Create a value of <a>CanaryRunStatus</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:state:CanaryRunStatus'</a>, <a>canaryRunStatus_state</a> - The
--   current state of the run.
--   
--   <a>$sel:stateReason:CanaryRunStatus'</a>,
--   <a>canaryRunStatus_stateReason</a> - If run of the canary failed, this
--   field contains the reason for the error.
--   
--   <a>$sel:stateReasonCode:CanaryRunStatus'</a>,
--   <a>canaryRunStatus_stateReasonCode</a> - If this value is
--   <tt>CANARY_FAILURE</tt>, an exception occurred in the canary code. If
--   this value is <tt>EXECUTION_FAILURE</tt>, an exception occurred in
--   CloudWatch Synthetics.
newCanaryRunStatus :: CanaryRunStatus

-- | This structure contains the start and end times of a single canary
--   run.
--   
--   <i>See:</i> <a>newCanaryRunTimeline</a> smart constructor.
data CanaryRunTimeline
CanaryRunTimeline' :: Maybe POSIX -> Maybe POSIX -> CanaryRunTimeline

-- | Create a value of <a>CanaryRunTimeline</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:completed:CanaryRunTimeline'</a>,
--   <a>canaryRunTimeline_completed</a> - The end time of the run.
--   
--   <a>$sel:started:CanaryRunTimeline'</a>,
--   <a>canaryRunTimeline_started</a> - The start time of the run.
newCanaryRunTimeline :: CanaryRunTimeline

-- | This structure specifies how often a canary is to make runs and the
--   date and time when it should stop making runs.
--   
--   <i>See:</i> <a>newCanaryScheduleInput</a> smart constructor.
data CanaryScheduleInput
CanaryScheduleInput' :: Maybe Natural -> Text -> CanaryScheduleInput

-- | Create a value of <a>CanaryScheduleInput</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:durationInSeconds:CanaryScheduleInput'</a>,
--   <a>canaryScheduleInput_durationInSeconds</a> - How long, in seconds,
--   for the canary to continue making regular runs according to the
--   schedule in the <tt>Expression</tt> value. If you specify 0, the
--   canary continues making runs until you stop it. If you omit this
--   field, the default of 0 is used.
--   
--   <a>$sel:expression:CanaryScheduleInput'</a>,
--   <a>canaryScheduleInput_expression</a> - A <tt>rate</tt> expression or
--   a <tt>cron</tt> expression that defines how often the canary is to
--   run.
--   
--   For a rate expression, The syntax is <tt>rate(number unit)</tt>.
--   <i>unit</i> can be <tt>minute</tt>, <tt>minutes</tt>, or
--   <tt>hour</tt>.
--   
--   For example, <tt>rate(1 minute)</tt> runs the canary once a minute,
--   <tt>rate(10 minutes)</tt> runs it once every 10 minutes, and
--   <tt>rate(1 hour)</tt> runs it once every hour. You can specify a
--   frequency between <tt>rate(1 minute)</tt> and <tt>rate(1 hour)</tt>.
--   
--   Specifying <tt>rate(0 minute)</tt> or <tt>rate(0 hour)</tt> is a
--   special value that causes the canary to run only once when it is
--   started.
--   
--   Use <tt>cron(expression)</tt> to specify a cron expression. You can't
--   schedule a canary to wait for more than a year before running. For
--   information about the syntax for cron expressions, see <a>Scheduling
--   canary runs using cron</a>.
newCanaryScheduleInput :: Text -> CanaryScheduleInput

-- | How long, in seconds, for the canary to continue making regular runs
--   according to the schedule in the <tt>Expression</tt> value.
--   
--   <i>See:</i> <a>newCanaryScheduleOutput</a> smart constructor.
data CanaryScheduleOutput
CanaryScheduleOutput' :: Maybe Natural -> Maybe Text -> CanaryScheduleOutput

-- | Create a value of <a>CanaryScheduleOutput</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:durationInSeconds:CanaryScheduleOutput'</a>,
--   <a>canaryScheduleOutput_durationInSeconds</a> - How long, in seconds,
--   for the canary to continue making regular runs after it was created.
--   The runs are performed according to the schedule in the
--   <tt>Expression</tt> value.
--   
--   <a>$sel:expression:CanaryScheduleOutput'</a>,
--   <a>canaryScheduleOutput_expression</a> - A <tt>rate</tt> expression or
--   a <tt>cron</tt> expression that defines how often the canary is to
--   run.
--   
--   For a rate expression, The syntax is <tt>rate(number unit)</tt>.
--   <i>unit</i> can be <tt>minute</tt>, <tt>minutes</tt>, or
--   <tt>hour</tt>.
--   
--   For example, <tt>rate(1 minute)</tt> runs the canary once a minute,
--   <tt>rate(10 minutes)</tt> runs it once every 10 minutes, and
--   <tt>rate(1 hour)</tt> runs it once every hour. You can specify a
--   frequency between <tt>rate(1 minute)</tt> and <tt>rate(1 hour)</tt>.
--   
--   Specifying <tt>rate(0 minute)</tt> or <tt>rate(0 hour)</tt> is a
--   special value that causes the canary to run only once when it is
--   started.
--   
--   Use <tt>cron(expression)</tt> to specify a cron expression. For
--   information about the syntax for cron expressions, see <a>Scheduling
--   canary runs using cron</a>.
newCanaryScheduleOutput :: CanaryScheduleOutput

-- | A structure that contains the current state of the canary.
--   
--   <i>See:</i> <a>newCanaryStatus</a> smart constructor.
data CanaryStatus
CanaryStatus' :: Maybe CanaryState -> Maybe Text -> Maybe CanaryStateReasonCode -> CanaryStatus

-- | Create a value of <a>CanaryStatus</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:state:CanaryStatus'</a>, <a>canaryStatus_state</a> - The
--   current state of the canary.
--   
--   <a>$sel:stateReason:CanaryStatus'</a>, <a>canaryStatus_stateReason</a>
--   - If the canary has insufficient permissions to run, this field
--   provides more details.
--   
--   <a>$sel:stateReasonCode:CanaryStatus'</a>,
--   <a>canaryStatus_stateReasonCode</a> - If the canary cannot run or has
--   failed, this field displays the reason.
newCanaryStatus :: CanaryStatus

-- | This structure contains information about when the canary was created
--   and modified.
--   
--   <i>See:</i> <a>newCanaryTimeline</a> smart constructor.
data CanaryTimeline
CanaryTimeline' :: Maybe POSIX -> Maybe POSIX -> Maybe POSIX -> Maybe POSIX -> CanaryTimeline

-- | Create a value of <a>CanaryTimeline</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:created:CanaryTimeline'</a>, <a>canaryTimeline_created</a> -
--   The date and time the canary was created.
--   
--   <a>$sel:lastStarted:CanaryTimeline'</a>,
--   <a>canaryTimeline_lastStarted</a> - The date and time that the
--   canary's most recent run started.
--   
--   <a>$sel:lastStopped:CanaryTimeline'</a>,
--   <a>canaryTimeline_lastStopped</a> - The date and time that the
--   canary's most recent run ended.
--   
--   <a>$sel:lastModified:CanaryTimeline'</a>,
--   <a>canaryTimeline_lastModified</a> - The date and time the canary was
--   most recently modified.
newCanaryTimeline :: CanaryTimeline

-- | This structure contains information about one canary runtime version.
--   For more information about runtime versions, see <a>Canary Runtime
--   Versions</a>.
--   
--   <i>See:</i> <a>newRuntimeVersion</a> smart constructor.
data RuntimeVersion
RuntimeVersion' :: Maybe Text -> Maybe POSIX -> Maybe POSIX -> Maybe Text -> RuntimeVersion

-- | Create a value of <a>RuntimeVersion</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:versionName:RuntimeVersion'</a>,
--   <a>runtimeVersion_versionName</a> - The name of the runtime version.
--   For a list of valid runtime versions, see <a>Canary Runtime
--   Versions</a>.
--   
--   <a>$sel:deprecationDate:RuntimeVersion'</a>,
--   <a>runtimeVersion_deprecationDate</a> - If this runtime version is
--   deprecated, this value is the date of deprecation.
--   
--   <a>$sel:releaseDate:RuntimeVersion'</a>,
--   <a>runtimeVersion_releaseDate</a> - The date that the runtime version
--   was released.
--   
--   <a>$sel:description:RuntimeVersion'</a>,
--   <a>runtimeVersion_description</a> - A description of the runtime
--   version, created by Amazon.
newRuntimeVersion :: RuntimeVersion

-- | A structure that contains the configuration of encryption-at-rest
--   settings for canary artifacts that the canary uploads to Amazon S3.
--   
--   For more information, see <a>Encrypting canary artifacts</a>
--   
--   <i>See:</i> <a>newS3EncryptionConfig</a> smart constructor.
data S3EncryptionConfig
S3EncryptionConfig' :: Maybe Text -> Maybe EncryptionMode -> S3EncryptionConfig

-- | Create a value of <a>S3EncryptionConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:kmsKeyArn:S3EncryptionConfig'</a>,
--   <a>s3EncryptionConfig_kmsKeyArn</a> - The ARN of the customer-managed
--   KMS key to use, if you specify <tt>SSE-KMS</tt> for
--   <tt>EncryptionMode</tt>
--   
--   <a>$sel:encryptionMode:S3EncryptionConfig'</a>,
--   <a>s3EncryptionConfig_encryptionMode</a> - The encryption method to
--   use for artifacts created by this canary. Specify <tt>SSE_S3</tt> to
--   use server-side encryption (SSE) with an Amazon S3-managed key.
--   Specify <tt>SSE-KMS</tt> to use server-side encryption with a
--   customer-managed KMS key.
--   
--   If you omit this parameter, an Amazon Web Services-managed KMS key is
--   used.
newS3EncryptionConfig :: S3EncryptionConfig

-- | An object that specifies what screenshots to use as a baseline for
--   visual monitoring by this canary, and optionally the parts of the
--   screenshots to ignore during the visual monitoring comparison.
--   
--   Visual monitoring is supported only on canaries running the
--   <b>syn-puppeteer-node-3.2</b> runtime or later. For more information,
--   see <a>Visual monitoring</a> and <a>Visual monitoring blueprint</a>
--   
--   <i>See:</i> <a>newVisualReferenceInput</a> smart constructor.
data VisualReferenceInput
VisualReferenceInput' :: Maybe [BaseScreenshot] -> Text -> VisualReferenceInput

-- | Create a value of <a>VisualReferenceInput</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:baseScreenshots:VisualReferenceInput'</a>,
--   <a>visualReferenceInput_baseScreenshots</a> - An array of screenshots
--   that will be used as the baseline for visual monitoring in future runs
--   of this canary. If there is a screenshot that you don't want to be
--   used for visual monitoring, remove it from this array.
--   
--   <a>$sel:baseCanaryRunId:VisualReferenceInput'</a>,
--   <a>visualReferenceInput_baseCanaryRunId</a> - Specifies which canary
--   run to use the screenshots from as the baseline for future visual
--   monitoring with this canary. Valid values are <tt>nextrun</tt> to use
--   the screenshots from the next run after this update is made,
--   <tt>lastrun</tt> to use the screenshots from the most recent run
--   before this update was made, or the value of <tt>Id</tt> in the
--   <a>CanaryRun</a> from any past run of this canary.
newVisualReferenceInput :: Text -> VisualReferenceInput

-- | If this canary performs visual monitoring by comparing screenshots,
--   this structure contains the ID of the canary run that is used as the
--   baseline for screenshots, and the coordinates of any parts of those
--   screenshots that are ignored during visual monitoring comparison.
--   
--   Visual monitoring is supported only on canaries running the
--   <b>syn-puppeteer-node-3.2</b> runtime or later.
--   
--   <i>See:</i> <a>newVisualReferenceOutput</a> smart constructor.
data VisualReferenceOutput
VisualReferenceOutput' :: Maybe [BaseScreenshot] -> Maybe Text -> VisualReferenceOutput

-- | Create a value of <a>VisualReferenceOutput</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:baseScreenshots:VisualReferenceOutput'</a>,
--   <a>visualReferenceOutput_baseScreenshots</a> - An array of screenshots
--   that are used as the baseline for comparisons during visual
--   monitoring.
--   
--   <a>$sel:baseCanaryRunId:VisualReferenceOutput'</a>,
--   <a>visualReferenceOutput_baseCanaryRunId</a> - The ID of the canary
--   run that produced the screenshots that are used as the baseline for
--   visual monitoring comparisons during future runs of this canary.
newVisualReferenceOutput :: VisualReferenceOutput

-- | If this canary is to test an endpoint in a VPC, this structure
--   contains information about the subnets and security groups of the VPC
--   endpoint. For more information, see <a>Running a Canary in a VPC</a>.
--   
--   <i>See:</i> <a>newVpcConfigInput</a> smart constructor.
data VpcConfigInput
VpcConfigInput' :: Maybe [Text] -> Maybe [Text] -> VpcConfigInput

-- | Create a value of <a>VpcConfigInput</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:securityGroupIds:VpcConfigInput'</a>,
--   <a>vpcConfigInput_securityGroupIds</a> - The IDs of the security
--   groups for this canary.
--   
--   <a>$sel:subnetIds:VpcConfigInput'</a>, <a>vpcConfigInput_subnetIds</a>
--   - The IDs of the subnets where this canary is to run.
newVpcConfigInput :: VpcConfigInput

-- | If this canary is to test an endpoint in a VPC, this structure
--   contains information about the subnets and security groups of the VPC
--   endpoint. For more information, see <a>Running a Canary in a VPC</a>.
--   
--   <i>See:</i> <a>newVpcConfigOutput</a> smart constructor.
data VpcConfigOutput
VpcConfigOutput' :: Maybe [Text] -> Maybe [Text] -> Maybe Text -> VpcConfigOutput

-- | Create a value of <a>VpcConfigOutput</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:securityGroupIds:VpcConfigOutput'</a>,
--   <a>vpcConfigOutput_securityGroupIds</a> - The IDs of the security
--   groups for this canary.
--   
--   <a>$sel:subnetIds:VpcConfigOutput'</a>,
--   <a>vpcConfigOutput_subnetIds</a> - The IDs of the subnets where this
--   canary is to run.
--   
--   <a>$sel:vpcId:VpcConfigOutput'</a>, <a>vpcConfigOutput_vpcId</a> - The
--   IDs of the VPC where this canary is to run.
newVpcConfigOutput :: VpcConfigOutput
