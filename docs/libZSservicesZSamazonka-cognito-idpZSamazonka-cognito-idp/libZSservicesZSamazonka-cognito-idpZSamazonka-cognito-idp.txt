-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/

@package libZSservicesZSamazonka-cognito-idpZSamazonka-cognito-idp
@version 2.0


module Network.AWS.CognitoIdentityProvider.Types.AccountTakeoverEventActionType
newtype AccountTakeoverEventActionType
AccountTakeoverEventActionType' :: Text -> AccountTakeoverEventActionType
[fromAccountTakeoverEventActionType] :: AccountTakeoverEventActionType -> Text
pattern AccountTakeoverEventActionType_BLOCK :: AccountTakeoverEventActionType
pattern AccountTakeoverEventActionType_MFA_IF_CONFIGURED :: AccountTakeoverEventActionType
pattern AccountTakeoverEventActionType_MFA_REQUIRED :: AccountTakeoverEventActionType
pattern AccountTakeoverEventActionType_NO_ACTION :: AccountTakeoverEventActionType
instance Network.AWS.Data.XML.ToXML Network.AWS.CognitoIdentityProvider.Types.AccountTakeoverEventActionType.AccountTakeoverEventActionType
instance Network.AWS.Data.XML.FromXML Network.AWS.CognitoIdentityProvider.Types.AccountTakeoverEventActionType.AccountTakeoverEventActionType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.CognitoIdentityProvider.Types.AccountTakeoverEventActionType.AccountTakeoverEventActionType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.Types.AccountTakeoverEventActionType.AccountTakeoverEventActionType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.CognitoIdentityProvider.Types.AccountTakeoverEventActionType.AccountTakeoverEventActionType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CognitoIdentityProvider.Types.AccountTakeoverEventActionType.AccountTakeoverEventActionType
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentityProvider.Types.AccountTakeoverEventActionType.AccountTakeoverEventActionType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.CognitoIdentityProvider.Types.AccountTakeoverEventActionType.AccountTakeoverEventActionType
instance Network.AWS.Data.Log.ToLog Network.AWS.CognitoIdentityProvider.Types.AccountTakeoverEventActionType.AccountTakeoverEventActionType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.CognitoIdentityProvider.Types.AccountTakeoverEventActionType.AccountTakeoverEventActionType
instance Network.AWS.Data.Text.ToText Network.AWS.CognitoIdentityProvider.Types.AccountTakeoverEventActionType.AccountTakeoverEventActionType
instance Network.AWS.Data.Text.FromText Network.AWS.CognitoIdentityProvider.Types.AccountTakeoverEventActionType.AccountTakeoverEventActionType
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.Types.AccountTakeoverEventActionType.AccountTakeoverEventActionType
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.Types.AccountTakeoverEventActionType.AccountTakeoverEventActionType
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.Types.AccountTakeoverEventActionType.AccountTakeoverEventActionType
instance GHC.Classes.Ord Network.AWS.CognitoIdentityProvider.Types.AccountTakeoverEventActionType.AccountTakeoverEventActionType
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.Types.AccountTakeoverEventActionType.AccountTakeoverEventActionType
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.Types.AccountTakeoverEventActionType.AccountTakeoverEventActionType
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.Types.AccountTakeoverEventActionType.AccountTakeoverEventActionType


module Network.AWS.CognitoIdentityProvider.Types.AccountTakeoverActionType

-- | Account takeover action type.
--   
--   <i>See:</i> <a>newAccountTakeoverActionType</a> smart constructor.
data AccountTakeoverActionType
AccountTakeoverActionType' :: Bool -> AccountTakeoverEventActionType -> AccountTakeoverActionType

-- | Flag specifying whether to send a notification.
[$sel:notify:AccountTakeoverActionType'] :: AccountTakeoverActionType -> Bool

-- | The event action.
--   
--   <ul>
--   <li><tt>BLOCK</tt> Choosing this action will block the request.</li>
--   <li><tt>MFA_IF_CONFIGURED</tt> Throw MFA challenge if user has
--   configured it, else allow the request.</li>
--   <li><tt>MFA_REQUIRED</tt> Throw MFA challenge if user has configured
--   it, else block the request.</li>
--   <li><tt>NO_ACTION</tt> Allow the user sign-in.</li>
--   </ul>
[$sel:eventAction:AccountTakeoverActionType'] :: AccountTakeoverActionType -> AccountTakeoverEventActionType

-- | Create a value of <a>AccountTakeoverActionType</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:notify:AccountTakeoverActionType'</a>,
--   <a>accountTakeoverActionType_notify</a> - Flag specifying whether to
--   send a notification.
--   
--   <a>$sel:eventAction:AccountTakeoverActionType'</a>,
--   <a>accountTakeoverActionType_eventAction</a> - The event action.
--   
--   <ul>
--   <li><tt>BLOCK</tt> Choosing this action will block the request.</li>
--   <li><tt>MFA_IF_CONFIGURED</tt> Throw MFA challenge if user has
--   configured it, else allow the request.</li>
--   <li><tt>MFA_REQUIRED</tt> Throw MFA challenge if user has configured
--   it, else block the request.</li>
--   <li><tt>NO_ACTION</tt> Allow the user sign-in.</li>
--   </ul>
newAccountTakeoverActionType :: Bool -> AccountTakeoverEventActionType -> AccountTakeoverActionType

-- | Flag specifying whether to send a notification.
accountTakeoverActionType_notify :: Lens' AccountTakeoverActionType Bool

-- | The event action.
--   
--   <ul>
--   <li><tt>BLOCK</tt> Choosing this action will block the request.</li>
--   <li><tt>MFA_IF_CONFIGURED</tt> Throw MFA challenge if user has
--   configured it, else allow the request.</li>
--   <li><tt>MFA_REQUIRED</tt> Throw MFA challenge if user has configured
--   it, else block the request.</li>
--   <li><tt>NO_ACTION</tt> Allow the user sign-in.</li>
--   </ul>
accountTakeoverActionType_eventAction :: Lens' AccountTakeoverActionType AccountTakeoverEventActionType
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.Types.AccountTakeoverActionType.AccountTakeoverActionType
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.Types.AccountTakeoverActionType.AccountTakeoverActionType
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.Types.AccountTakeoverActionType.AccountTakeoverActionType
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.Types.AccountTakeoverActionType.AccountTakeoverActionType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CognitoIdentityProvider.Types.AccountTakeoverActionType.AccountTakeoverActionType
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.Types.AccountTakeoverActionType.AccountTakeoverActionType
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.Types.AccountTakeoverActionType.AccountTakeoverActionType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.Types.AccountTakeoverActionType.AccountTakeoverActionType


module Network.AWS.CognitoIdentityProvider.Types.AccountTakeoverActionsType

-- | Account takeover actions type.
--   
--   <i>See:</i> <a>newAccountTakeoverActionsType</a> smart constructor.
data AccountTakeoverActionsType
AccountTakeoverActionsType' :: Maybe AccountTakeoverActionType -> Maybe AccountTakeoverActionType -> Maybe AccountTakeoverActionType -> AccountTakeoverActionsType

-- | Action to take for a low risk.
[$sel:lowAction:AccountTakeoverActionsType'] :: AccountTakeoverActionsType -> Maybe AccountTakeoverActionType

-- | Action to take for a high risk.
[$sel:highAction:AccountTakeoverActionsType'] :: AccountTakeoverActionsType -> Maybe AccountTakeoverActionType

-- | Action to take for a medium risk.
[$sel:mediumAction:AccountTakeoverActionsType'] :: AccountTakeoverActionsType -> Maybe AccountTakeoverActionType

-- | Create a value of <a>AccountTakeoverActionsType</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lowAction:AccountTakeoverActionsType'</a>,
--   <a>accountTakeoverActionsType_lowAction</a> - Action to take for a low
--   risk.
--   
--   <a>$sel:highAction:AccountTakeoverActionsType'</a>,
--   <a>accountTakeoverActionsType_highAction</a> - Action to take for a
--   high risk.
--   
--   <a>$sel:mediumAction:AccountTakeoverActionsType'</a>,
--   <a>accountTakeoverActionsType_mediumAction</a> - Action to take for a
--   medium risk.
newAccountTakeoverActionsType :: AccountTakeoverActionsType

-- | Action to take for a low risk.
accountTakeoverActionsType_lowAction :: Lens' AccountTakeoverActionsType (Maybe AccountTakeoverActionType)

-- | Action to take for a high risk.
accountTakeoverActionsType_highAction :: Lens' AccountTakeoverActionsType (Maybe AccountTakeoverActionType)

-- | Action to take for a medium risk.
accountTakeoverActionsType_mediumAction :: Lens' AccountTakeoverActionsType (Maybe AccountTakeoverActionType)
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.Types.AccountTakeoverActionsType.AccountTakeoverActionsType
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.Types.AccountTakeoverActionsType.AccountTakeoverActionsType
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.Types.AccountTakeoverActionsType.AccountTakeoverActionsType
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.Types.AccountTakeoverActionsType.AccountTakeoverActionsType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CognitoIdentityProvider.Types.AccountTakeoverActionsType.AccountTakeoverActionsType
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.Types.AccountTakeoverActionsType.AccountTakeoverActionsType
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.Types.AccountTakeoverActionsType.AccountTakeoverActionsType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.Types.AccountTakeoverActionsType.AccountTakeoverActionsType


module Network.AWS.CognitoIdentityProvider.Types.AdvancedSecurityModeType
newtype AdvancedSecurityModeType
AdvancedSecurityModeType' :: Text -> AdvancedSecurityModeType
[fromAdvancedSecurityModeType] :: AdvancedSecurityModeType -> Text
pattern AdvancedSecurityModeType_AUDIT :: AdvancedSecurityModeType
pattern AdvancedSecurityModeType_ENFORCED :: AdvancedSecurityModeType
pattern AdvancedSecurityModeType_OFF :: AdvancedSecurityModeType
instance Network.AWS.Data.XML.ToXML Network.AWS.CognitoIdentityProvider.Types.AdvancedSecurityModeType.AdvancedSecurityModeType
instance Network.AWS.Data.XML.FromXML Network.AWS.CognitoIdentityProvider.Types.AdvancedSecurityModeType.AdvancedSecurityModeType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.CognitoIdentityProvider.Types.AdvancedSecurityModeType.AdvancedSecurityModeType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.Types.AdvancedSecurityModeType.AdvancedSecurityModeType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.CognitoIdentityProvider.Types.AdvancedSecurityModeType.AdvancedSecurityModeType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CognitoIdentityProvider.Types.AdvancedSecurityModeType.AdvancedSecurityModeType
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentityProvider.Types.AdvancedSecurityModeType.AdvancedSecurityModeType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.CognitoIdentityProvider.Types.AdvancedSecurityModeType.AdvancedSecurityModeType
instance Network.AWS.Data.Log.ToLog Network.AWS.CognitoIdentityProvider.Types.AdvancedSecurityModeType.AdvancedSecurityModeType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.CognitoIdentityProvider.Types.AdvancedSecurityModeType.AdvancedSecurityModeType
instance Network.AWS.Data.Text.ToText Network.AWS.CognitoIdentityProvider.Types.AdvancedSecurityModeType.AdvancedSecurityModeType
instance Network.AWS.Data.Text.FromText Network.AWS.CognitoIdentityProvider.Types.AdvancedSecurityModeType.AdvancedSecurityModeType
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.Types.AdvancedSecurityModeType.AdvancedSecurityModeType
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.Types.AdvancedSecurityModeType.AdvancedSecurityModeType
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.Types.AdvancedSecurityModeType.AdvancedSecurityModeType
instance GHC.Classes.Ord Network.AWS.CognitoIdentityProvider.Types.AdvancedSecurityModeType.AdvancedSecurityModeType
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.Types.AdvancedSecurityModeType.AdvancedSecurityModeType
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.Types.AdvancedSecurityModeType.AdvancedSecurityModeType
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.Types.AdvancedSecurityModeType.AdvancedSecurityModeType


module Network.AWS.CognitoIdentityProvider.Types.AliasAttributeType
newtype AliasAttributeType
AliasAttributeType' :: Text -> AliasAttributeType
[fromAliasAttributeType] :: AliasAttributeType -> Text
pattern AliasAttributeType_Email :: AliasAttributeType
pattern AliasAttributeType_Phone_number :: AliasAttributeType
pattern AliasAttributeType_Preferred_username :: AliasAttributeType
instance Network.AWS.Data.XML.ToXML Network.AWS.CognitoIdentityProvider.Types.AliasAttributeType.AliasAttributeType
instance Network.AWS.Data.XML.FromXML Network.AWS.CognitoIdentityProvider.Types.AliasAttributeType.AliasAttributeType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.CognitoIdentityProvider.Types.AliasAttributeType.AliasAttributeType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.Types.AliasAttributeType.AliasAttributeType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.CognitoIdentityProvider.Types.AliasAttributeType.AliasAttributeType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CognitoIdentityProvider.Types.AliasAttributeType.AliasAttributeType
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentityProvider.Types.AliasAttributeType.AliasAttributeType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.CognitoIdentityProvider.Types.AliasAttributeType.AliasAttributeType
instance Network.AWS.Data.Log.ToLog Network.AWS.CognitoIdentityProvider.Types.AliasAttributeType.AliasAttributeType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.CognitoIdentityProvider.Types.AliasAttributeType.AliasAttributeType
instance Network.AWS.Data.Text.ToText Network.AWS.CognitoIdentityProvider.Types.AliasAttributeType.AliasAttributeType
instance Network.AWS.Data.Text.FromText Network.AWS.CognitoIdentityProvider.Types.AliasAttributeType.AliasAttributeType
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.Types.AliasAttributeType.AliasAttributeType
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.Types.AliasAttributeType.AliasAttributeType
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.Types.AliasAttributeType.AliasAttributeType
instance GHC.Classes.Ord Network.AWS.CognitoIdentityProvider.Types.AliasAttributeType.AliasAttributeType
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.Types.AliasAttributeType.AliasAttributeType
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.Types.AliasAttributeType.AliasAttributeType
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.Types.AliasAttributeType.AliasAttributeType


module Network.AWS.CognitoIdentityProvider.Types.AnalyticsConfigurationType

-- | The Amazon Pinpoint analytics configuration for collecting metrics for
--   a user pool.
--   
--   In regions where Pinpoint is not available, Cognito User Pools only
--   supports sending events to Amazon Pinpoint projects in us-east-1. In
--   regions where Pinpoint is available, Cognito User Pools will support
--   sending events to Amazon Pinpoint projects within that same region.
--   
--   <i>See:</i> <a>newAnalyticsConfigurationType</a> smart constructor.
data AnalyticsConfigurationType
AnalyticsConfigurationType' :: Maybe Text -> Maybe Bool -> Maybe Text -> Maybe Text -> Maybe Text -> AnalyticsConfigurationType

-- | The Amazon Resource Name (ARN) of an Amazon Pinpoint project. You can
--   use the Amazon Pinpoint project for Pinpoint integration with the
--   chosen User Pool Client. Amazon Cognito publishes events to the
--   pinpoint project declared by the app ARN.
[$sel:applicationArn:AnalyticsConfigurationType'] :: AnalyticsConfigurationType -> Maybe Text

-- | If <tt>UserDataShared</tt> is <tt>true</tt>, Amazon Cognito will
--   include user data in the events it publishes to Amazon Pinpoint
--   analytics.
[$sel:userDataShared:AnalyticsConfigurationType'] :: AnalyticsConfigurationType -> Maybe Bool

-- | The application ID for an Amazon Pinpoint application.
[$sel:applicationId:AnalyticsConfigurationType'] :: AnalyticsConfigurationType -> Maybe Text

-- | The external ID.
[$sel:externalId:AnalyticsConfigurationType'] :: AnalyticsConfigurationType -> Maybe Text

-- | The ARN of an IAM role that authorizes Amazon Cognito to publish
--   events to Amazon Pinpoint analytics.
[$sel:roleArn:AnalyticsConfigurationType'] :: AnalyticsConfigurationType -> Maybe Text

-- | Create a value of <a>AnalyticsConfigurationType</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:applicationArn:AnalyticsConfigurationType'</a>,
--   <a>analyticsConfigurationType_applicationArn</a> - The Amazon Resource
--   Name (ARN) of an Amazon Pinpoint project. You can use the Amazon
--   Pinpoint project for Pinpoint integration with the chosen User Pool
--   Client. Amazon Cognito publishes events to the pinpoint project
--   declared by the app ARN.
--   
--   <a>$sel:userDataShared:AnalyticsConfigurationType'</a>,
--   <a>analyticsConfigurationType_userDataShared</a> - If
--   <tt>UserDataShared</tt> is <tt>true</tt>, Amazon Cognito will include
--   user data in the events it publishes to Amazon Pinpoint analytics.
--   
--   <a>$sel:applicationId:AnalyticsConfigurationType'</a>,
--   <a>analyticsConfigurationType_applicationId</a> - The application ID
--   for an Amazon Pinpoint application.
--   
--   <a>$sel:externalId:AnalyticsConfigurationType'</a>,
--   <a>analyticsConfigurationType_externalId</a> - The external ID.
--   
--   <a>$sel:roleArn:AnalyticsConfigurationType'</a>,
--   <a>analyticsConfigurationType_roleArn</a> - The ARN of an IAM role
--   that authorizes Amazon Cognito to publish events to Amazon Pinpoint
--   analytics.
newAnalyticsConfigurationType :: AnalyticsConfigurationType

-- | The Amazon Resource Name (ARN) of an Amazon Pinpoint project. You can
--   use the Amazon Pinpoint project for Pinpoint integration with the
--   chosen User Pool Client. Amazon Cognito publishes events to the
--   pinpoint project declared by the app ARN.
analyticsConfigurationType_applicationArn :: Lens' AnalyticsConfigurationType (Maybe Text)

-- | If <tt>UserDataShared</tt> is <tt>true</tt>, Amazon Cognito will
--   include user data in the events it publishes to Amazon Pinpoint
--   analytics.
analyticsConfigurationType_userDataShared :: Lens' AnalyticsConfigurationType (Maybe Bool)

-- | The application ID for an Amazon Pinpoint application.
analyticsConfigurationType_applicationId :: Lens' AnalyticsConfigurationType (Maybe Text)

-- | The external ID.
analyticsConfigurationType_externalId :: Lens' AnalyticsConfigurationType (Maybe Text)

-- | The ARN of an IAM role that authorizes Amazon Cognito to publish
--   events to Amazon Pinpoint analytics.
analyticsConfigurationType_roleArn :: Lens' AnalyticsConfigurationType (Maybe Text)
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.Types.AnalyticsConfigurationType.AnalyticsConfigurationType
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.Types.AnalyticsConfigurationType.AnalyticsConfigurationType
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.Types.AnalyticsConfigurationType.AnalyticsConfigurationType
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.Types.AnalyticsConfigurationType.AnalyticsConfigurationType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CognitoIdentityProvider.Types.AnalyticsConfigurationType.AnalyticsConfigurationType
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.Types.AnalyticsConfigurationType.AnalyticsConfigurationType
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.Types.AnalyticsConfigurationType.AnalyticsConfigurationType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.Types.AnalyticsConfigurationType.AnalyticsConfigurationType


module Network.AWS.CognitoIdentityProvider.Types.AnalyticsMetadataType

-- | An Amazon Pinpoint analytics endpoint.
--   
--   An endpoint uniquely identifies a mobile device, email address, or
--   phone number that can receive messages from Amazon Pinpoint analytics.
--   
--   Cognito User Pools only supports sending events to Amazon Pinpoint
--   projects in the US East (N. Virginia) us-east-1 Region, regardless of
--   the region in which the user pool resides.
--   
--   <i>See:</i> <a>newAnalyticsMetadataType</a> smart constructor.
data AnalyticsMetadataType
AnalyticsMetadataType' :: Maybe Text -> AnalyticsMetadataType

-- | The endpoint ID.
[$sel:analyticsEndpointId:AnalyticsMetadataType'] :: AnalyticsMetadataType -> Maybe Text

-- | Create a value of <a>AnalyticsMetadataType</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:analyticsEndpointId:AnalyticsMetadataType'</a>,
--   <a>analyticsMetadataType_analyticsEndpointId</a> - The endpoint ID.
newAnalyticsMetadataType :: AnalyticsMetadataType

-- | The endpoint ID.
analyticsMetadataType_analyticsEndpointId :: Lens' AnalyticsMetadataType (Maybe Text)
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.Types.AnalyticsMetadataType.AnalyticsMetadataType
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.Types.AnalyticsMetadataType.AnalyticsMetadataType
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.Types.AnalyticsMetadataType.AnalyticsMetadataType
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.Types.AnalyticsMetadataType.AnalyticsMetadataType
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.Types.AnalyticsMetadataType.AnalyticsMetadataType
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.Types.AnalyticsMetadataType.AnalyticsMetadataType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.Types.AnalyticsMetadataType.AnalyticsMetadataType


module Network.AWS.CognitoIdentityProvider.Types.AttributeDataType
newtype AttributeDataType
AttributeDataType' :: Text -> AttributeDataType
[fromAttributeDataType] :: AttributeDataType -> Text
pattern AttributeDataType_Boolean :: AttributeDataType
pattern AttributeDataType_DateTime :: AttributeDataType
pattern AttributeDataType_Number :: AttributeDataType
pattern AttributeDataType_String :: AttributeDataType
instance Network.AWS.Data.XML.ToXML Network.AWS.CognitoIdentityProvider.Types.AttributeDataType.AttributeDataType
instance Network.AWS.Data.XML.FromXML Network.AWS.CognitoIdentityProvider.Types.AttributeDataType.AttributeDataType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.CognitoIdentityProvider.Types.AttributeDataType.AttributeDataType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.Types.AttributeDataType.AttributeDataType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.CognitoIdentityProvider.Types.AttributeDataType.AttributeDataType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CognitoIdentityProvider.Types.AttributeDataType.AttributeDataType
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentityProvider.Types.AttributeDataType.AttributeDataType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.CognitoIdentityProvider.Types.AttributeDataType.AttributeDataType
instance Network.AWS.Data.Log.ToLog Network.AWS.CognitoIdentityProvider.Types.AttributeDataType.AttributeDataType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.CognitoIdentityProvider.Types.AttributeDataType.AttributeDataType
instance Network.AWS.Data.Text.ToText Network.AWS.CognitoIdentityProvider.Types.AttributeDataType.AttributeDataType
instance Network.AWS.Data.Text.FromText Network.AWS.CognitoIdentityProvider.Types.AttributeDataType.AttributeDataType
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.Types.AttributeDataType.AttributeDataType
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.Types.AttributeDataType.AttributeDataType
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.Types.AttributeDataType.AttributeDataType
instance GHC.Classes.Ord Network.AWS.CognitoIdentityProvider.Types.AttributeDataType.AttributeDataType
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.Types.AttributeDataType.AttributeDataType
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.Types.AttributeDataType.AttributeDataType
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.Types.AttributeDataType.AttributeDataType


module Network.AWS.CognitoIdentityProvider.Types.AttributeType

-- | Specifies whether the attribute is standard or custom.
--   
--   <i>See:</i> <a>newAttributeType</a> smart constructor.
data AttributeType
AttributeType' :: Maybe (Sensitive Text) -> Text -> AttributeType

-- | The value of the attribute.
[$sel:value:AttributeType'] :: AttributeType -> Maybe (Sensitive Text)

-- | The name of the attribute.
[$sel:name:AttributeType'] :: AttributeType -> Text

-- | Create a value of <a>AttributeType</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:value:AttributeType'</a>, <a>attributeType_value</a> - The
--   value of the attribute.
--   
--   <a>$sel:name:AttributeType'</a>, <a>attributeType_name</a> - The name
--   of the attribute.
newAttributeType :: Text -> AttributeType

-- | The value of the attribute.
attributeType_value :: Lens' AttributeType (Maybe Text)

-- | The name of the attribute.
attributeType_name :: Lens' AttributeType Text
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.Types.AttributeType.AttributeType
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.Types.AttributeType.AttributeType
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.Types.AttributeType.AttributeType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CognitoIdentityProvider.Types.AttributeType.AttributeType
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.Types.AttributeType.AttributeType
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.Types.AttributeType.AttributeType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.Types.AttributeType.AttributeType


module Network.AWS.CognitoIdentityProvider.Types.AuthFlowType
newtype AuthFlowType
AuthFlowType' :: Text -> AuthFlowType
[fromAuthFlowType] :: AuthFlowType -> Text
pattern AuthFlowType_ADMIN_NO_SRP_AUTH :: AuthFlowType
pattern AuthFlowType_ADMIN_USER_PASSWORD_AUTH :: AuthFlowType
pattern AuthFlowType_CUSTOM_AUTH :: AuthFlowType
pattern AuthFlowType_REFRESH_TOKEN :: AuthFlowType
pattern AuthFlowType_REFRESH_TOKEN_AUTH :: AuthFlowType
pattern AuthFlowType_USER_PASSWORD_AUTH :: AuthFlowType
pattern AuthFlowType_USER_SRP_AUTH :: AuthFlowType
instance Network.AWS.Data.XML.ToXML Network.AWS.CognitoIdentityProvider.Types.AuthFlowType.AuthFlowType
instance Network.AWS.Data.XML.FromXML Network.AWS.CognitoIdentityProvider.Types.AuthFlowType.AuthFlowType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.CognitoIdentityProvider.Types.AuthFlowType.AuthFlowType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.Types.AuthFlowType.AuthFlowType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.CognitoIdentityProvider.Types.AuthFlowType.AuthFlowType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CognitoIdentityProvider.Types.AuthFlowType.AuthFlowType
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentityProvider.Types.AuthFlowType.AuthFlowType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.CognitoIdentityProvider.Types.AuthFlowType.AuthFlowType
instance Network.AWS.Data.Log.ToLog Network.AWS.CognitoIdentityProvider.Types.AuthFlowType.AuthFlowType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.CognitoIdentityProvider.Types.AuthFlowType.AuthFlowType
instance Network.AWS.Data.Text.ToText Network.AWS.CognitoIdentityProvider.Types.AuthFlowType.AuthFlowType
instance Network.AWS.Data.Text.FromText Network.AWS.CognitoIdentityProvider.Types.AuthFlowType.AuthFlowType
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.Types.AuthFlowType.AuthFlowType
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.Types.AuthFlowType.AuthFlowType
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.Types.AuthFlowType.AuthFlowType
instance GHC.Classes.Ord Network.AWS.CognitoIdentityProvider.Types.AuthFlowType.AuthFlowType
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.Types.AuthFlowType.AuthFlowType
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.Types.AuthFlowType.AuthFlowType
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.Types.AuthFlowType.AuthFlowType


module Network.AWS.CognitoIdentityProvider.Types.ChallengeName
newtype ChallengeName
ChallengeName' :: Text -> ChallengeName
[fromChallengeName] :: ChallengeName -> Text
pattern ChallengeName_Mfa :: ChallengeName
pattern ChallengeName_Password :: ChallengeName
instance Network.AWS.Data.XML.ToXML Network.AWS.CognitoIdentityProvider.Types.ChallengeName.ChallengeName
instance Network.AWS.Data.XML.FromXML Network.AWS.CognitoIdentityProvider.Types.ChallengeName.ChallengeName
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.CognitoIdentityProvider.Types.ChallengeName.ChallengeName
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.Types.ChallengeName.ChallengeName
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.CognitoIdentityProvider.Types.ChallengeName.ChallengeName
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CognitoIdentityProvider.Types.ChallengeName.ChallengeName
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentityProvider.Types.ChallengeName.ChallengeName
instance Network.AWS.Data.Headers.ToHeader Network.AWS.CognitoIdentityProvider.Types.ChallengeName.ChallengeName
instance Network.AWS.Data.Log.ToLog Network.AWS.CognitoIdentityProvider.Types.ChallengeName.ChallengeName
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.CognitoIdentityProvider.Types.ChallengeName.ChallengeName
instance Network.AWS.Data.Text.ToText Network.AWS.CognitoIdentityProvider.Types.ChallengeName.ChallengeName
instance Network.AWS.Data.Text.FromText Network.AWS.CognitoIdentityProvider.Types.ChallengeName.ChallengeName
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.Types.ChallengeName.ChallengeName
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.Types.ChallengeName.ChallengeName
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.Types.ChallengeName.ChallengeName
instance GHC.Classes.Ord Network.AWS.CognitoIdentityProvider.Types.ChallengeName.ChallengeName
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.Types.ChallengeName.ChallengeName
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.Types.ChallengeName.ChallengeName
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.Types.ChallengeName.ChallengeName


module Network.AWS.CognitoIdentityProvider.Types.ChallengeNameType
newtype ChallengeNameType
ChallengeNameType' :: Text -> ChallengeNameType
[fromChallengeNameType] :: ChallengeNameType -> Text
pattern ChallengeNameType_ADMIN_NO_SRP_AUTH :: ChallengeNameType
pattern ChallengeNameType_CUSTOM_CHALLENGE :: ChallengeNameType
pattern ChallengeNameType_DEVICE_PASSWORD_VERIFIER :: ChallengeNameType
pattern ChallengeNameType_DEVICE_SRP_AUTH :: ChallengeNameType
pattern ChallengeNameType_MFA_SETUP :: ChallengeNameType
pattern ChallengeNameType_NEW_PASSWORD_REQUIRED :: ChallengeNameType
pattern ChallengeNameType_PASSWORD_VERIFIER :: ChallengeNameType
pattern ChallengeNameType_SELECT_MFA_TYPE :: ChallengeNameType
pattern ChallengeNameType_SMS_MFA :: ChallengeNameType
pattern ChallengeNameType_SOFTWARE_TOKEN_MFA :: ChallengeNameType
instance Network.AWS.Data.XML.ToXML Network.AWS.CognitoIdentityProvider.Types.ChallengeNameType.ChallengeNameType
instance Network.AWS.Data.XML.FromXML Network.AWS.CognitoIdentityProvider.Types.ChallengeNameType.ChallengeNameType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.CognitoIdentityProvider.Types.ChallengeNameType.ChallengeNameType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.Types.ChallengeNameType.ChallengeNameType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.CognitoIdentityProvider.Types.ChallengeNameType.ChallengeNameType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CognitoIdentityProvider.Types.ChallengeNameType.ChallengeNameType
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentityProvider.Types.ChallengeNameType.ChallengeNameType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.CognitoIdentityProvider.Types.ChallengeNameType.ChallengeNameType
instance Network.AWS.Data.Log.ToLog Network.AWS.CognitoIdentityProvider.Types.ChallengeNameType.ChallengeNameType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.CognitoIdentityProvider.Types.ChallengeNameType.ChallengeNameType
instance Network.AWS.Data.Text.ToText Network.AWS.CognitoIdentityProvider.Types.ChallengeNameType.ChallengeNameType
instance Network.AWS.Data.Text.FromText Network.AWS.CognitoIdentityProvider.Types.ChallengeNameType.ChallengeNameType
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.Types.ChallengeNameType.ChallengeNameType
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.Types.ChallengeNameType.ChallengeNameType
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.Types.ChallengeNameType.ChallengeNameType
instance GHC.Classes.Ord Network.AWS.CognitoIdentityProvider.Types.ChallengeNameType.ChallengeNameType
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.Types.ChallengeNameType.ChallengeNameType
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.Types.ChallengeNameType.ChallengeNameType
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.Types.ChallengeNameType.ChallengeNameType


module Network.AWS.CognitoIdentityProvider.Types.ChallengeResponse
newtype ChallengeResponse
ChallengeResponse' :: Text -> ChallengeResponse
[fromChallengeResponse] :: ChallengeResponse -> Text
pattern ChallengeResponse_Failure :: ChallengeResponse
pattern ChallengeResponse_Success :: ChallengeResponse
instance Network.AWS.Data.XML.ToXML Network.AWS.CognitoIdentityProvider.Types.ChallengeResponse.ChallengeResponse
instance Network.AWS.Data.XML.FromXML Network.AWS.CognitoIdentityProvider.Types.ChallengeResponse.ChallengeResponse
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.CognitoIdentityProvider.Types.ChallengeResponse.ChallengeResponse
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.Types.ChallengeResponse.ChallengeResponse
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.CognitoIdentityProvider.Types.ChallengeResponse.ChallengeResponse
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CognitoIdentityProvider.Types.ChallengeResponse.ChallengeResponse
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentityProvider.Types.ChallengeResponse.ChallengeResponse
instance Network.AWS.Data.Headers.ToHeader Network.AWS.CognitoIdentityProvider.Types.ChallengeResponse.ChallengeResponse
instance Network.AWS.Data.Log.ToLog Network.AWS.CognitoIdentityProvider.Types.ChallengeResponse.ChallengeResponse
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.CognitoIdentityProvider.Types.ChallengeResponse.ChallengeResponse
instance Network.AWS.Data.Text.ToText Network.AWS.CognitoIdentityProvider.Types.ChallengeResponse.ChallengeResponse
instance Network.AWS.Data.Text.FromText Network.AWS.CognitoIdentityProvider.Types.ChallengeResponse.ChallengeResponse
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.Types.ChallengeResponse.ChallengeResponse
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.Types.ChallengeResponse.ChallengeResponse
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.Types.ChallengeResponse.ChallengeResponse
instance GHC.Classes.Ord Network.AWS.CognitoIdentityProvider.Types.ChallengeResponse.ChallengeResponse
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.Types.ChallengeResponse.ChallengeResponse
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.Types.ChallengeResponse.ChallengeResponse
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.Types.ChallengeResponse.ChallengeResponse


module Network.AWS.CognitoIdentityProvider.Types.ChallengeResponseType

-- | The challenge response type.
--   
--   <i>See:</i> <a>newChallengeResponseType</a> smart constructor.
data ChallengeResponseType
ChallengeResponseType' :: Maybe ChallengeName -> Maybe ChallengeResponse -> ChallengeResponseType

-- | The challenge name
[$sel:challengeName:ChallengeResponseType'] :: ChallengeResponseType -> Maybe ChallengeName

-- | The challenge response.
[$sel:challengeResponse:ChallengeResponseType'] :: ChallengeResponseType -> Maybe ChallengeResponse

-- | Create a value of <a>ChallengeResponseType</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:challengeName:ChallengeResponseType'</a>,
--   <a>challengeResponseType_challengeName</a> - The challenge name
--   
--   <a>$sel:challengeResponse:ChallengeResponseType'</a>,
--   <a>challengeResponseType_challengeResponse</a> - The challenge
--   response.
newChallengeResponseType :: ChallengeResponseType

-- | The challenge name
challengeResponseType_challengeName :: Lens' ChallengeResponseType (Maybe ChallengeName)

-- | The challenge response.
challengeResponseType_challengeResponse :: Lens' ChallengeResponseType (Maybe ChallengeResponse)
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.Types.ChallengeResponseType.ChallengeResponseType
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.Types.ChallengeResponseType.ChallengeResponseType
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.Types.ChallengeResponseType.ChallengeResponseType
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.Types.ChallengeResponseType.ChallengeResponseType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CognitoIdentityProvider.Types.ChallengeResponseType.ChallengeResponseType
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.Types.ChallengeResponseType.ChallengeResponseType
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.Types.ChallengeResponseType.ChallengeResponseType


module Network.AWS.CognitoIdentityProvider.Types.CompromisedCredentialsEventActionType
newtype CompromisedCredentialsEventActionType
CompromisedCredentialsEventActionType' :: Text -> CompromisedCredentialsEventActionType
[fromCompromisedCredentialsEventActionType] :: CompromisedCredentialsEventActionType -> Text
pattern CompromisedCredentialsEventActionType_BLOCK :: CompromisedCredentialsEventActionType
pattern CompromisedCredentialsEventActionType_NO_ACTION :: CompromisedCredentialsEventActionType
instance Network.AWS.Data.XML.ToXML Network.AWS.CognitoIdentityProvider.Types.CompromisedCredentialsEventActionType.CompromisedCredentialsEventActionType
instance Network.AWS.Data.XML.FromXML Network.AWS.CognitoIdentityProvider.Types.CompromisedCredentialsEventActionType.CompromisedCredentialsEventActionType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.CognitoIdentityProvider.Types.CompromisedCredentialsEventActionType.CompromisedCredentialsEventActionType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.Types.CompromisedCredentialsEventActionType.CompromisedCredentialsEventActionType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.CognitoIdentityProvider.Types.CompromisedCredentialsEventActionType.CompromisedCredentialsEventActionType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CognitoIdentityProvider.Types.CompromisedCredentialsEventActionType.CompromisedCredentialsEventActionType
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentityProvider.Types.CompromisedCredentialsEventActionType.CompromisedCredentialsEventActionType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.CognitoIdentityProvider.Types.CompromisedCredentialsEventActionType.CompromisedCredentialsEventActionType
instance Network.AWS.Data.Log.ToLog Network.AWS.CognitoIdentityProvider.Types.CompromisedCredentialsEventActionType.CompromisedCredentialsEventActionType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.CognitoIdentityProvider.Types.CompromisedCredentialsEventActionType.CompromisedCredentialsEventActionType
instance Network.AWS.Data.Text.ToText Network.AWS.CognitoIdentityProvider.Types.CompromisedCredentialsEventActionType.CompromisedCredentialsEventActionType
instance Network.AWS.Data.Text.FromText Network.AWS.CognitoIdentityProvider.Types.CompromisedCredentialsEventActionType.CompromisedCredentialsEventActionType
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.Types.CompromisedCredentialsEventActionType.CompromisedCredentialsEventActionType
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.Types.CompromisedCredentialsEventActionType.CompromisedCredentialsEventActionType
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.Types.CompromisedCredentialsEventActionType.CompromisedCredentialsEventActionType
instance GHC.Classes.Ord Network.AWS.CognitoIdentityProvider.Types.CompromisedCredentialsEventActionType.CompromisedCredentialsEventActionType
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.Types.CompromisedCredentialsEventActionType.CompromisedCredentialsEventActionType
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.Types.CompromisedCredentialsEventActionType.CompromisedCredentialsEventActionType
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.Types.CompromisedCredentialsEventActionType.CompromisedCredentialsEventActionType


module Network.AWS.CognitoIdentityProvider.Types.CompromisedCredentialsActionsType

-- | The compromised credentials actions type
--   
--   <i>See:</i> <a>newCompromisedCredentialsActionsType</a> smart
--   constructor.
data CompromisedCredentialsActionsType
CompromisedCredentialsActionsType' :: CompromisedCredentialsEventActionType -> CompromisedCredentialsActionsType

-- | The event action.
[$sel:eventAction:CompromisedCredentialsActionsType'] :: CompromisedCredentialsActionsType -> CompromisedCredentialsEventActionType

-- | Create a value of <a>CompromisedCredentialsActionsType</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:eventAction:CompromisedCredentialsActionsType'</a>,
--   <a>compromisedCredentialsActionsType_eventAction</a> - The event
--   action.
newCompromisedCredentialsActionsType :: CompromisedCredentialsEventActionType -> CompromisedCredentialsActionsType

-- | The event action.
compromisedCredentialsActionsType_eventAction :: Lens' CompromisedCredentialsActionsType CompromisedCredentialsEventActionType
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.Types.CompromisedCredentialsActionsType.CompromisedCredentialsActionsType
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.Types.CompromisedCredentialsActionsType.CompromisedCredentialsActionsType
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.Types.CompromisedCredentialsActionsType.CompromisedCredentialsActionsType
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.Types.CompromisedCredentialsActionsType.CompromisedCredentialsActionsType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CognitoIdentityProvider.Types.CompromisedCredentialsActionsType.CompromisedCredentialsActionsType
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.Types.CompromisedCredentialsActionsType.CompromisedCredentialsActionsType
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.Types.CompromisedCredentialsActionsType.CompromisedCredentialsActionsType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.Types.CompromisedCredentialsActionsType.CompromisedCredentialsActionsType


module Network.AWS.CognitoIdentityProvider.Types.CustomDomainConfigType

-- | The configuration for a custom domain that hosts the sign-up and
--   sign-in webpages for your application.
--   
--   <i>See:</i> <a>newCustomDomainConfigType</a> smart constructor.
data CustomDomainConfigType
CustomDomainConfigType' :: Text -> CustomDomainConfigType

-- | The Amazon Resource Name (ARN) of an Certificate Manager SSL
--   certificate. You use this certificate for the subdomain of your custom
--   domain.
[$sel:certificateArn:CustomDomainConfigType'] :: CustomDomainConfigType -> Text

-- | Create a value of <a>CustomDomainConfigType</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:certificateArn:CustomDomainConfigType'</a>,
--   <a>customDomainConfigType_certificateArn</a> - The Amazon Resource
--   Name (ARN) of an Certificate Manager SSL certificate. You use this
--   certificate for the subdomain of your custom domain.
newCustomDomainConfigType :: Text -> CustomDomainConfigType

-- | The Amazon Resource Name (ARN) of an Certificate Manager SSL
--   certificate. You use this certificate for the subdomain of your custom
--   domain.
customDomainConfigType_certificateArn :: Lens' CustomDomainConfigType Text
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.Types.CustomDomainConfigType.CustomDomainConfigType
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.Types.CustomDomainConfigType.CustomDomainConfigType
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.Types.CustomDomainConfigType.CustomDomainConfigType
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.Types.CustomDomainConfigType.CustomDomainConfigType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CognitoIdentityProvider.Types.CustomDomainConfigType.CustomDomainConfigType
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.Types.CustomDomainConfigType.CustomDomainConfigType
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.Types.CustomDomainConfigType.CustomDomainConfigType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.Types.CustomDomainConfigType.CustomDomainConfigType


module Network.AWS.CognitoIdentityProvider.Types.CustomEmailSenderLambdaVersionType
newtype CustomEmailSenderLambdaVersionType
CustomEmailSenderLambdaVersionType' :: Text -> CustomEmailSenderLambdaVersionType
[fromCustomEmailSenderLambdaVersionType] :: CustomEmailSenderLambdaVersionType -> Text
pattern CustomEmailSenderLambdaVersionType_V1_0 :: CustomEmailSenderLambdaVersionType
instance Network.AWS.Data.XML.ToXML Network.AWS.CognitoIdentityProvider.Types.CustomEmailSenderLambdaVersionType.CustomEmailSenderLambdaVersionType
instance Network.AWS.Data.XML.FromXML Network.AWS.CognitoIdentityProvider.Types.CustomEmailSenderLambdaVersionType.CustomEmailSenderLambdaVersionType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.CognitoIdentityProvider.Types.CustomEmailSenderLambdaVersionType.CustomEmailSenderLambdaVersionType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.Types.CustomEmailSenderLambdaVersionType.CustomEmailSenderLambdaVersionType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.CognitoIdentityProvider.Types.CustomEmailSenderLambdaVersionType.CustomEmailSenderLambdaVersionType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CognitoIdentityProvider.Types.CustomEmailSenderLambdaVersionType.CustomEmailSenderLambdaVersionType
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentityProvider.Types.CustomEmailSenderLambdaVersionType.CustomEmailSenderLambdaVersionType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.CognitoIdentityProvider.Types.CustomEmailSenderLambdaVersionType.CustomEmailSenderLambdaVersionType
instance Network.AWS.Data.Log.ToLog Network.AWS.CognitoIdentityProvider.Types.CustomEmailSenderLambdaVersionType.CustomEmailSenderLambdaVersionType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.CognitoIdentityProvider.Types.CustomEmailSenderLambdaVersionType.CustomEmailSenderLambdaVersionType
instance Network.AWS.Data.Text.ToText Network.AWS.CognitoIdentityProvider.Types.CustomEmailSenderLambdaVersionType.CustomEmailSenderLambdaVersionType
instance Network.AWS.Data.Text.FromText Network.AWS.CognitoIdentityProvider.Types.CustomEmailSenderLambdaVersionType.CustomEmailSenderLambdaVersionType
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.Types.CustomEmailSenderLambdaVersionType.CustomEmailSenderLambdaVersionType
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.Types.CustomEmailSenderLambdaVersionType.CustomEmailSenderLambdaVersionType
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.Types.CustomEmailSenderLambdaVersionType.CustomEmailSenderLambdaVersionType
instance GHC.Classes.Ord Network.AWS.CognitoIdentityProvider.Types.CustomEmailSenderLambdaVersionType.CustomEmailSenderLambdaVersionType
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.Types.CustomEmailSenderLambdaVersionType.CustomEmailSenderLambdaVersionType
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.Types.CustomEmailSenderLambdaVersionType.CustomEmailSenderLambdaVersionType
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.Types.CustomEmailSenderLambdaVersionType.CustomEmailSenderLambdaVersionType


module Network.AWS.CognitoIdentityProvider.Types.CustomEmailLambdaVersionConfigType

-- | A custom email sender Lambda configuration type.
--   
--   <i>See:</i> <a>newCustomEmailLambdaVersionConfigType</a> smart
--   constructor.
data CustomEmailLambdaVersionConfigType
CustomEmailLambdaVersionConfigType' :: CustomEmailSenderLambdaVersionType -> Text -> CustomEmailLambdaVersionConfigType

-- | The Lambda version represents the signature of the "request" attribute
--   in the "event" information Amazon Cognito passes to your custom email
--   Lambda function. The only supported value is <tt>V1_0</tt>.
[$sel:lambdaVersion:CustomEmailLambdaVersionConfigType'] :: CustomEmailLambdaVersionConfigType -> CustomEmailSenderLambdaVersionType

-- | The Lambda Amazon Resource Name of the Lambda function that Amazon
--   Cognito triggers to send email notifications to users.
[$sel:lambdaArn:CustomEmailLambdaVersionConfigType'] :: CustomEmailLambdaVersionConfigType -> Text

-- | Create a value of <a>CustomEmailLambdaVersionConfigType</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lambdaVersion:CustomEmailLambdaVersionConfigType'</a>,
--   <a>customEmailLambdaVersionConfigType_lambdaVersion</a> - The Lambda
--   version represents the signature of the "request" attribute in the
--   "event" information Amazon Cognito passes to your custom email Lambda
--   function. The only supported value is <tt>V1_0</tt>.
--   
--   <a>$sel:lambdaArn:CustomEmailLambdaVersionConfigType'</a>,
--   <a>customEmailLambdaVersionConfigType_lambdaArn</a> - The Lambda
--   Amazon Resource Name of the Lambda function that Amazon Cognito
--   triggers to send email notifications to users.
newCustomEmailLambdaVersionConfigType :: CustomEmailSenderLambdaVersionType -> Text -> CustomEmailLambdaVersionConfigType

-- | The Lambda version represents the signature of the "request" attribute
--   in the "event" information Amazon Cognito passes to your custom email
--   Lambda function. The only supported value is <tt>V1_0</tt>.
customEmailLambdaVersionConfigType_lambdaVersion :: Lens' CustomEmailLambdaVersionConfigType CustomEmailSenderLambdaVersionType

-- | The Lambda Amazon Resource Name of the Lambda function that Amazon
--   Cognito triggers to send email notifications to users.
customEmailLambdaVersionConfigType_lambdaArn :: Lens' CustomEmailLambdaVersionConfigType Text
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.Types.CustomEmailLambdaVersionConfigType.CustomEmailLambdaVersionConfigType
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.Types.CustomEmailLambdaVersionConfigType.CustomEmailLambdaVersionConfigType
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.Types.CustomEmailLambdaVersionConfigType.CustomEmailLambdaVersionConfigType
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.Types.CustomEmailLambdaVersionConfigType.CustomEmailLambdaVersionConfigType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CognitoIdentityProvider.Types.CustomEmailLambdaVersionConfigType.CustomEmailLambdaVersionConfigType
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.Types.CustomEmailLambdaVersionConfigType.CustomEmailLambdaVersionConfigType
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.Types.CustomEmailLambdaVersionConfigType.CustomEmailLambdaVersionConfigType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.Types.CustomEmailLambdaVersionConfigType.CustomEmailLambdaVersionConfigType


module Network.AWS.CognitoIdentityProvider.Types.CustomSMSSenderLambdaVersionType
newtype CustomSMSSenderLambdaVersionType
CustomSMSSenderLambdaVersionType' :: Text -> CustomSMSSenderLambdaVersionType
[fromCustomSMSSenderLambdaVersionType] :: CustomSMSSenderLambdaVersionType -> Text
pattern CustomSMSSenderLambdaVersionType_V1_0 :: CustomSMSSenderLambdaVersionType
instance Network.AWS.Data.XML.ToXML Network.AWS.CognitoIdentityProvider.Types.CustomSMSSenderLambdaVersionType.CustomSMSSenderLambdaVersionType
instance Network.AWS.Data.XML.FromXML Network.AWS.CognitoIdentityProvider.Types.CustomSMSSenderLambdaVersionType.CustomSMSSenderLambdaVersionType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.CognitoIdentityProvider.Types.CustomSMSSenderLambdaVersionType.CustomSMSSenderLambdaVersionType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.Types.CustomSMSSenderLambdaVersionType.CustomSMSSenderLambdaVersionType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.CognitoIdentityProvider.Types.CustomSMSSenderLambdaVersionType.CustomSMSSenderLambdaVersionType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CognitoIdentityProvider.Types.CustomSMSSenderLambdaVersionType.CustomSMSSenderLambdaVersionType
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentityProvider.Types.CustomSMSSenderLambdaVersionType.CustomSMSSenderLambdaVersionType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.CognitoIdentityProvider.Types.CustomSMSSenderLambdaVersionType.CustomSMSSenderLambdaVersionType
instance Network.AWS.Data.Log.ToLog Network.AWS.CognitoIdentityProvider.Types.CustomSMSSenderLambdaVersionType.CustomSMSSenderLambdaVersionType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.CognitoIdentityProvider.Types.CustomSMSSenderLambdaVersionType.CustomSMSSenderLambdaVersionType
instance Network.AWS.Data.Text.ToText Network.AWS.CognitoIdentityProvider.Types.CustomSMSSenderLambdaVersionType.CustomSMSSenderLambdaVersionType
instance Network.AWS.Data.Text.FromText Network.AWS.CognitoIdentityProvider.Types.CustomSMSSenderLambdaVersionType.CustomSMSSenderLambdaVersionType
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.Types.CustomSMSSenderLambdaVersionType.CustomSMSSenderLambdaVersionType
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.Types.CustomSMSSenderLambdaVersionType.CustomSMSSenderLambdaVersionType
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.Types.CustomSMSSenderLambdaVersionType.CustomSMSSenderLambdaVersionType
instance GHC.Classes.Ord Network.AWS.CognitoIdentityProvider.Types.CustomSMSSenderLambdaVersionType.CustomSMSSenderLambdaVersionType
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.Types.CustomSMSSenderLambdaVersionType.CustomSMSSenderLambdaVersionType
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.Types.CustomSMSSenderLambdaVersionType.CustomSMSSenderLambdaVersionType
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.Types.CustomSMSSenderLambdaVersionType.CustomSMSSenderLambdaVersionType


module Network.AWS.CognitoIdentityProvider.Types.CustomSMSLambdaVersionConfigType

-- | A custom SMS sender Lambda configuration type.
--   
--   <i>See:</i> <a>newCustomSMSLambdaVersionConfigType</a> smart
--   constructor.
data CustomSMSLambdaVersionConfigType
CustomSMSLambdaVersionConfigType' :: CustomSMSSenderLambdaVersionType -> Text -> CustomSMSLambdaVersionConfigType

-- | The Lambda version represents the signature of the "request" attribute
--   in the "event" information Amazon Cognito passes to your custom SMS
--   Lambda function. The only supported value is <tt>V1_0</tt>.
[$sel:lambdaVersion:CustomSMSLambdaVersionConfigType'] :: CustomSMSLambdaVersionConfigType -> CustomSMSSenderLambdaVersionType

-- | The Lambda Amazon Resource Name of the Lambda function that Amazon
--   Cognito triggers to send SMS notifications to users.
[$sel:lambdaArn:CustomSMSLambdaVersionConfigType'] :: CustomSMSLambdaVersionConfigType -> Text

-- | Create a value of <a>CustomSMSLambdaVersionConfigType</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lambdaVersion:CustomSMSLambdaVersionConfigType'</a>,
--   <a>customSMSLambdaVersionConfigType_lambdaVersion</a> - The Lambda
--   version represents the signature of the "request" attribute in the
--   "event" information Amazon Cognito passes to your custom SMS Lambda
--   function. The only supported value is <tt>V1_0</tt>.
--   
--   <a>$sel:lambdaArn:CustomSMSLambdaVersionConfigType'</a>,
--   <a>customSMSLambdaVersionConfigType_lambdaArn</a> - The Lambda Amazon
--   Resource Name of the Lambda function that Amazon Cognito triggers to
--   send SMS notifications to users.
newCustomSMSLambdaVersionConfigType :: CustomSMSSenderLambdaVersionType -> Text -> CustomSMSLambdaVersionConfigType

-- | The Lambda version represents the signature of the "request" attribute
--   in the "event" information Amazon Cognito passes to your custom SMS
--   Lambda function. The only supported value is <tt>V1_0</tt>.
customSMSLambdaVersionConfigType_lambdaVersion :: Lens' CustomSMSLambdaVersionConfigType CustomSMSSenderLambdaVersionType

-- | The Lambda Amazon Resource Name of the Lambda function that Amazon
--   Cognito triggers to send SMS notifications to users.
customSMSLambdaVersionConfigType_lambdaArn :: Lens' CustomSMSLambdaVersionConfigType Text
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.Types.CustomSMSLambdaVersionConfigType.CustomSMSLambdaVersionConfigType
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.Types.CustomSMSLambdaVersionConfigType.CustomSMSLambdaVersionConfigType
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.Types.CustomSMSLambdaVersionConfigType.CustomSMSLambdaVersionConfigType
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.Types.CustomSMSLambdaVersionConfigType.CustomSMSLambdaVersionConfigType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CognitoIdentityProvider.Types.CustomSMSLambdaVersionConfigType.CustomSMSLambdaVersionConfigType
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.Types.CustomSMSLambdaVersionConfigType.CustomSMSLambdaVersionConfigType
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.Types.CustomSMSLambdaVersionConfigType.CustomSMSLambdaVersionConfigType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.Types.CustomSMSLambdaVersionConfigType.CustomSMSLambdaVersionConfigType


module Network.AWS.CognitoIdentityProvider.Types.DefaultEmailOptionType
newtype DefaultEmailOptionType
DefaultEmailOptionType' :: Text -> DefaultEmailOptionType
[fromDefaultEmailOptionType] :: DefaultEmailOptionType -> Text
pattern DefaultEmailOptionType_CONFIRM_WITH_CODE :: DefaultEmailOptionType
pattern DefaultEmailOptionType_CONFIRM_WITH_LINK :: DefaultEmailOptionType
instance Network.AWS.Data.XML.ToXML Network.AWS.CognitoIdentityProvider.Types.DefaultEmailOptionType.DefaultEmailOptionType
instance Network.AWS.Data.XML.FromXML Network.AWS.CognitoIdentityProvider.Types.DefaultEmailOptionType.DefaultEmailOptionType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.CognitoIdentityProvider.Types.DefaultEmailOptionType.DefaultEmailOptionType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.Types.DefaultEmailOptionType.DefaultEmailOptionType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.CognitoIdentityProvider.Types.DefaultEmailOptionType.DefaultEmailOptionType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CognitoIdentityProvider.Types.DefaultEmailOptionType.DefaultEmailOptionType
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentityProvider.Types.DefaultEmailOptionType.DefaultEmailOptionType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.CognitoIdentityProvider.Types.DefaultEmailOptionType.DefaultEmailOptionType
instance Network.AWS.Data.Log.ToLog Network.AWS.CognitoIdentityProvider.Types.DefaultEmailOptionType.DefaultEmailOptionType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.CognitoIdentityProvider.Types.DefaultEmailOptionType.DefaultEmailOptionType
instance Network.AWS.Data.Text.ToText Network.AWS.CognitoIdentityProvider.Types.DefaultEmailOptionType.DefaultEmailOptionType
instance Network.AWS.Data.Text.FromText Network.AWS.CognitoIdentityProvider.Types.DefaultEmailOptionType.DefaultEmailOptionType
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.Types.DefaultEmailOptionType.DefaultEmailOptionType
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.Types.DefaultEmailOptionType.DefaultEmailOptionType
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.Types.DefaultEmailOptionType.DefaultEmailOptionType
instance GHC.Classes.Ord Network.AWS.CognitoIdentityProvider.Types.DefaultEmailOptionType.DefaultEmailOptionType
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.Types.DefaultEmailOptionType.DefaultEmailOptionType
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.Types.DefaultEmailOptionType.DefaultEmailOptionType
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.Types.DefaultEmailOptionType.DefaultEmailOptionType


module Network.AWS.CognitoIdentityProvider.Types.DeliveryMediumType
newtype DeliveryMediumType
DeliveryMediumType' :: Text -> DeliveryMediumType
[fromDeliveryMediumType] :: DeliveryMediumType -> Text
pattern DeliveryMediumType_EMAIL :: DeliveryMediumType
pattern DeliveryMediumType_SMS :: DeliveryMediumType
instance Network.AWS.Data.XML.ToXML Network.AWS.CognitoIdentityProvider.Types.DeliveryMediumType.DeliveryMediumType
instance Network.AWS.Data.XML.FromXML Network.AWS.CognitoIdentityProvider.Types.DeliveryMediumType.DeliveryMediumType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.CognitoIdentityProvider.Types.DeliveryMediumType.DeliveryMediumType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.Types.DeliveryMediumType.DeliveryMediumType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.CognitoIdentityProvider.Types.DeliveryMediumType.DeliveryMediumType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CognitoIdentityProvider.Types.DeliveryMediumType.DeliveryMediumType
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentityProvider.Types.DeliveryMediumType.DeliveryMediumType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.CognitoIdentityProvider.Types.DeliveryMediumType.DeliveryMediumType
instance Network.AWS.Data.Log.ToLog Network.AWS.CognitoIdentityProvider.Types.DeliveryMediumType.DeliveryMediumType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.CognitoIdentityProvider.Types.DeliveryMediumType.DeliveryMediumType
instance Network.AWS.Data.Text.ToText Network.AWS.CognitoIdentityProvider.Types.DeliveryMediumType.DeliveryMediumType
instance Network.AWS.Data.Text.FromText Network.AWS.CognitoIdentityProvider.Types.DeliveryMediumType.DeliveryMediumType
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.Types.DeliveryMediumType.DeliveryMediumType
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.Types.DeliveryMediumType.DeliveryMediumType
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.Types.DeliveryMediumType.DeliveryMediumType
instance GHC.Classes.Ord Network.AWS.CognitoIdentityProvider.Types.DeliveryMediumType.DeliveryMediumType
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.Types.DeliveryMediumType.DeliveryMediumType
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.Types.DeliveryMediumType.DeliveryMediumType
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.Types.DeliveryMediumType.DeliveryMediumType


module Network.AWS.CognitoIdentityProvider.Types.CodeDeliveryDetailsType

-- | The code delivery details being returned from the server.
--   
--   <i>See:</i> <a>newCodeDeliveryDetailsType</a> smart constructor.
data CodeDeliveryDetailsType
CodeDeliveryDetailsType' :: Maybe Text -> Maybe DeliveryMediumType -> Maybe Text -> CodeDeliveryDetailsType

-- | The destination for the code delivery details.
[$sel:destination:CodeDeliveryDetailsType'] :: CodeDeliveryDetailsType -> Maybe Text

-- | The delivery medium (email message or phone number).
[$sel:deliveryMedium:CodeDeliveryDetailsType'] :: CodeDeliveryDetailsType -> Maybe DeliveryMediumType

-- | The attribute name.
[$sel:attributeName:CodeDeliveryDetailsType'] :: CodeDeliveryDetailsType -> Maybe Text

-- | Create a value of <a>CodeDeliveryDetailsType</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:destination:CodeDeliveryDetailsType'</a>,
--   <a>codeDeliveryDetailsType_destination</a> - The destination for the
--   code delivery details.
--   
--   <a>$sel:deliveryMedium:CodeDeliveryDetailsType'</a>,
--   <a>codeDeliveryDetailsType_deliveryMedium</a> - The delivery medium
--   (email message or phone number).
--   
--   <a>$sel:attributeName:CodeDeliveryDetailsType'</a>,
--   <a>codeDeliveryDetailsType_attributeName</a> - The attribute name.
newCodeDeliveryDetailsType :: CodeDeliveryDetailsType

-- | The destination for the code delivery details.
codeDeliveryDetailsType_destination :: Lens' CodeDeliveryDetailsType (Maybe Text)

-- | The delivery medium (email message or phone number).
codeDeliveryDetailsType_deliveryMedium :: Lens' CodeDeliveryDetailsType (Maybe DeliveryMediumType)

-- | The attribute name.
codeDeliveryDetailsType_attributeName :: Lens' CodeDeliveryDetailsType (Maybe Text)
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.Types.CodeDeliveryDetailsType.CodeDeliveryDetailsType
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.Types.CodeDeliveryDetailsType.CodeDeliveryDetailsType
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.Types.CodeDeliveryDetailsType.CodeDeliveryDetailsType
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.Types.CodeDeliveryDetailsType.CodeDeliveryDetailsType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CognitoIdentityProvider.Types.CodeDeliveryDetailsType.CodeDeliveryDetailsType
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.Types.CodeDeliveryDetailsType.CodeDeliveryDetailsType
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.Types.CodeDeliveryDetailsType.CodeDeliveryDetailsType


module Network.AWS.CognitoIdentityProvider.Types.DeviceConfigurationType

-- | The configuration for the user pool's device tracking.
--   
--   <i>See:</i> <a>newDeviceConfigurationType</a> smart constructor.
data DeviceConfigurationType
DeviceConfigurationType' :: Maybe Bool -> Maybe Bool -> DeviceConfigurationType

-- | Indicates whether a challenge is required on a new device. Only
--   applicable to a new device.
[$sel:challengeRequiredOnNewDevice:DeviceConfigurationType'] :: DeviceConfigurationType -> Maybe Bool

-- | If true, a device is only remembered on user prompt.
[$sel:deviceOnlyRememberedOnUserPrompt:DeviceConfigurationType'] :: DeviceConfigurationType -> Maybe Bool

-- | Create a value of <a>DeviceConfigurationType</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:challengeRequiredOnNewDevice:DeviceConfigurationType'</a>,
--   <a>deviceConfigurationType_challengeRequiredOnNewDevice</a> -
--   Indicates whether a challenge is required on a new device. Only
--   applicable to a new device.
--   
--   <a>$sel:deviceOnlyRememberedOnUserPrompt:DeviceConfigurationType'</a>,
--   <a>deviceConfigurationType_deviceOnlyRememberedOnUserPrompt</a> - If
--   true, a device is only remembered on user prompt.
newDeviceConfigurationType :: DeviceConfigurationType

-- | Indicates whether a challenge is required on a new device. Only
--   applicable to a new device.
deviceConfigurationType_challengeRequiredOnNewDevice :: Lens' DeviceConfigurationType (Maybe Bool)

-- | If true, a device is only remembered on user prompt.
deviceConfigurationType_deviceOnlyRememberedOnUserPrompt :: Lens' DeviceConfigurationType (Maybe Bool)
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.Types.DeviceConfigurationType.DeviceConfigurationType
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.Types.DeviceConfigurationType.DeviceConfigurationType
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.Types.DeviceConfigurationType.DeviceConfigurationType
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.Types.DeviceConfigurationType.DeviceConfigurationType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CognitoIdentityProvider.Types.DeviceConfigurationType.DeviceConfigurationType
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.Types.DeviceConfigurationType.DeviceConfigurationType
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.Types.DeviceConfigurationType.DeviceConfigurationType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.Types.DeviceConfigurationType.DeviceConfigurationType


module Network.AWS.CognitoIdentityProvider.Types.DeviceRememberedStatusType
newtype DeviceRememberedStatusType
DeviceRememberedStatusType' :: Text -> DeviceRememberedStatusType
[fromDeviceRememberedStatusType] :: DeviceRememberedStatusType -> Text
pattern DeviceRememberedStatusType_Not_remembered :: DeviceRememberedStatusType
pattern DeviceRememberedStatusType_Remembered :: DeviceRememberedStatusType
instance Network.AWS.Data.XML.ToXML Network.AWS.CognitoIdentityProvider.Types.DeviceRememberedStatusType.DeviceRememberedStatusType
instance Network.AWS.Data.XML.FromXML Network.AWS.CognitoIdentityProvider.Types.DeviceRememberedStatusType.DeviceRememberedStatusType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.CognitoIdentityProvider.Types.DeviceRememberedStatusType.DeviceRememberedStatusType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.Types.DeviceRememberedStatusType.DeviceRememberedStatusType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.CognitoIdentityProvider.Types.DeviceRememberedStatusType.DeviceRememberedStatusType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CognitoIdentityProvider.Types.DeviceRememberedStatusType.DeviceRememberedStatusType
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentityProvider.Types.DeviceRememberedStatusType.DeviceRememberedStatusType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.CognitoIdentityProvider.Types.DeviceRememberedStatusType.DeviceRememberedStatusType
instance Network.AWS.Data.Log.ToLog Network.AWS.CognitoIdentityProvider.Types.DeviceRememberedStatusType.DeviceRememberedStatusType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.CognitoIdentityProvider.Types.DeviceRememberedStatusType.DeviceRememberedStatusType
instance Network.AWS.Data.Text.ToText Network.AWS.CognitoIdentityProvider.Types.DeviceRememberedStatusType.DeviceRememberedStatusType
instance Network.AWS.Data.Text.FromText Network.AWS.CognitoIdentityProvider.Types.DeviceRememberedStatusType.DeviceRememberedStatusType
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.Types.DeviceRememberedStatusType.DeviceRememberedStatusType
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.Types.DeviceRememberedStatusType.DeviceRememberedStatusType
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.Types.DeviceRememberedStatusType.DeviceRememberedStatusType
instance GHC.Classes.Ord Network.AWS.CognitoIdentityProvider.Types.DeviceRememberedStatusType.DeviceRememberedStatusType
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.Types.DeviceRememberedStatusType.DeviceRememberedStatusType
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.Types.DeviceRememberedStatusType.DeviceRememberedStatusType
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.Types.DeviceRememberedStatusType.DeviceRememberedStatusType


module Network.AWS.CognitoIdentityProvider.Types.DeviceSecretVerifierConfigType

-- | The device verifier against which it will be authenticated.
--   
--   <i>See:</i> <a>newDeviceSecretVerifierConfigType</a> smart
--   constructor.
data DeviceSecretVerifierConfigType
DeviceSecretVerifierConfigType' :: Maybe Text -> Maybe Text -> DeviceSecretVerifierConfigType

-- | The password verifier.
[$sel:passwordVerifier:DeviceSecretVerifierConfigType'] :: DeviceSecretVerifierConfigType -> Maybe Text

-- | The salt.
[$sel:salt:DeviceSecretVerifierConfigType'] :: DeviceSecretVerifierConfigType -> Maybe Text

-- | Create a value of <a>DeviceSecretVerifierConfigType</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:passwordVerifier:DeviceSecretVerifierConfigType'</a>,
--   <a>deviceSecretVerifierConfigType_passwordVerifier</a> - The password
--   verifier.
--   
--   <a>$sel:salt:DeviceSecretVerifierConfigType'</a>,
--   <a>deviceSecretVerifierConfigType_salt</a> - The salt.
newDeviceSecretVerifierConfigType :: DeviceSecretVerifierConfigType

-- | The password verifier.
deviceSecretVerifierConfigType_passwordVerifier :: Lens' DeviceSecretVerifierConfigType (Maybe Text)

-- | The salt.
deviceSecretVerifierConfigType_salt :: Lens' DeviceSecretVerifierConfigType (Maybe Text)
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.Types.DeviceSecretVerifierConfigType.DeviceSecretVerifierConfigType
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.Types.DeviceSecretVerifierConfigType.DeviceSecretVerifierConfigType
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.Types.DeviceSecretVerifierConfigType.DeviceSecretVerifierConfigType
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.Types.DeviceSecretVerifierConfigType.DeviceSecretVerifierConfigType
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.Types.DeviceSecretVerifierConfigType.DeviceSecretVerifierConfigType
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.Types.DeviceSecretVerifierConfigType.DeviceSecretVerifierConfigType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.Types.DeviceSecretVerifierConfigType.DeviceSecretVerifierConfigType


module Network.AWS.CognitoIdentityProvider.Types.DeviceType

-- | The device type.
--   
--   <i>See:</i> <a>newDeviceType</a> smart constructor.
data DeviceType
DeviceType' :: Maybe POSIX -> Maybe POSIX -> Maybe [AttributeType] -> Maybe Text -> Maybe POSIX -> DeviceType

-- | The last modified date of the device.
[$sel:deviceLastModifiedDate:DeviceType'] :: DeviceType -> Maybe POSIX

-- | The creation date of the device.
[$sel:deviceCreateDate:DeviceType'] :: DeviceType -> Maybe POSIX

-- | The device attributes.
[$sel:deviceAttributes:DeviceType'] :: DeviceType -> Maybe [AttributeType]

-- | The device key.
[$sel:deviceKey:DeviceType'] :: DeviceType -> Maybe Text

-- | The date in which the device was last authenticated.
[$sel:deviceLastAuthenticatedDate:DeviceType'] :: DeviceType -> Maybe POSIX

-- | Create a value of <a>DeviceType</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deviceLastModifiedDate:DeviceType'</a>,
--   <a>deviceType_deviceLastModifiedDate</a> - The last modified date of
--   the device.
--   
--   <a>$sel:deviceCreateDate:DeviceType'</a>,
--   <a>deviceType_deviceCreateDate</a> - The creation date of the device.
--   
--   <a>$sel:deviceAttributes:DeviceType'</a>,
--   <a>deviceType_deviceAttributes</a> - The device attributes.
--   
--   <a>$sel:deviceKey:DeviceType'</a>, <a>deviceType_deviceKey</a> - The
--   device key.
--   
--   <a>$sel:deviceLastAuthenticatedDate:DeviceType'</a>,
--   <a>deviceType_deviceLastAuthenticatedDate</a> - The date in which the
--   device was last authenticated.
newDeviceType :: DeviceType

-- | The last modified date of the device.
deviceType_deviceLastModifiedDate :: Lens' DeviceType (Maybe UTCTime)

-- | The creation date of the device.
deviceType_deviceCreateDate :: Lens' DeviceType (Maybe UTCTime)

-- | The device attributes.
deviceType_deviceAttributes :: Lens' DeviceType (Maybe [AttributeType])

-- | The device key.
deviceType_deviceKey :: Lens' DeviceType (Maybe Text)

-- | The date in which the device was last authenticated.
deviceType_deviceLastAuthenticatedDate :: Lens' DeviceType (Maybe UTCTime)
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.Types.DeviceType.DeviceType
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.Types.DeviceType.DeviceType
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.Types.DeviceType.DeviceType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CognitoIdentityProvider.Types.DeviceType.DeviceType
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.Types.DeviceType.DeviceType
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.Types.DeviceType.DeviceType


module Network.AWS.CognitoIdentityProvider.Types.DomainStatusType
newtype DomainStatusType
DomainStatusType' :: Text -> DomainStatusType
[fromDomainStatusType] :: DomainStatusType -> Text
pattern DomainStatusType_ACTIVE :: DomainStatusType
pattern DomainStatusType_CREATING :: DomainStatusType
pattern DomainStatusType_DELETING :: DomainStatusType
pattern DomainStatusType_FAILED :: DomainStatusType
pattern DomainStatusType_UPDATING :: DomainStatusType
instance Network.AWS.Data.XML.ToXML Network.AWS.CognitoIdentityProvider.Types.DomainStatusType.DomainStatusType
instance Network.AWS.Data.XML.FromXML Network.AWS.CognitoIdentityProvider.Types.DomainStatusType.DomainStatusType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.CognitoIdentityProvider.Types.DomainStatusType.DomainStatusType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.Types.DomainStatusType.DomainStatusType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.CognitoIdentityProvider.Types.DomainStatusType.DomainStatusType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CognitoIdentityProvider.Types.DomainStatusType.DomainStatusType
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentityProvider.Types.DomainStatusType.DomainStatusType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.CognitoIdentityProvider.Types.DomainStatusType.DomainStatusType
instance Network.AWS.Data.Log.ToLog Network.AWS.CognitoIdentityProvider.Types.DomainStatusType.DomainStatusType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.CognitoIdentityProvider.Types.DomainStatusType.DomainStatusType
instance Network.AWS.Data.Text.ToText Network.AWS.CognitoIdentityProvider.Types.DomainStatusType.DomainStatusType
instance Network.AWS.Data.Text.FromText Network.AWS.CognitoIdentityProvider.Types.DomainStatusType.DomainStatusType
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.Types.DomainStatusType.DomainStatusType
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.Types.DomainStatusType.DomainStatusType
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.Types.DomainStatusType.DomainStatusType
instance GHC.Classes.Ord Network.AWS.CognitoIdentityProvider.Types.DomainStatusType.DomainStatusType
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.Types.DomainStatusType.DomainStatusType
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.Types.DomainStatusType.DomainStatusType
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.Types.DomainStatusType.DomainStatusType


module Network.AWS.CognitoIdentityProvider.Types.DomainDescriptionType

-- | A container for information about a domain.
--   
--   <i>See:</i> <a>newDomainDescriptionType</a> smart constructor.
data DomainDescriptionType
DomainDescriptionType' :: Maybe DomainStatusType -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe CustomDomainConfigType -> Maybe Text -> Maybe Text -> DomainDescriptionType

-- | The domain status.
[$sel:status:DomainDescriptionType'] :: DomainDescriptionType -> Maybe DomainStatusType

-- | The ARN of the CloudFront distribution.
[$sel:cloudFrontDistribution:DomainDescriptionType'] :: DomainDescriptionType -> Maybe Text

-- | The user pool ID.
[$sel:userPoolId:DomainDescriptionType'] :: DomainDescriptionType -> Maybe Text

-- | The domain string.
[$sel:domain:DomainDescriptionType'] :: DomainDescriptionType -> Maybe Text

-- | The account ID for the user pool owner.
[$sel:aWSAccountId:DomainDescriptionType'] :: DomainDescriptionType -> Maybe Text

-- | The configuration for a custom domain that hosts the sign-up and
--   sign-in webpages for your application.
[$sel:customDomainConfig:DomainDescriptionType'] :: DomainDescriptionType -> Maybe CustomDomainConfigType

-- | The app version.
[$sel:version:DomainDescriptionType'] :: DomainDescriptionType -> Maybe Text

-- | The S3 bucket where the static files for this domain are stored.
[$sel:s3Bucket:DomainDescriptionType'] :: DomainDescriptionType -> Maybe Text

-- | Create a value of <a>DomainDescriptionType</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:DomainDescriptionType'</a>,
--   <a>domainDescriptionType_status</a> - The domain status.
--   
--   <a>$sel:cloudFrontDistribution:DomainDescriptionType'</a>,
--   <a>domainDescriptionType_cloudFrontDistribution</a> - The ARN of the
--   CloudFront distribution.
--   
--   <a>$sel:userPoolId:DomainDescriptionType'</a>,
--   <a>domainDescriptionType_userPoolId</a> - The user pool ID.
--   
--   <a>$sel:domain:DomainDescriptionType'</a>,
--   <a>domainDescriptionType_domain</a> - The domain string.
--   
--   <a>$sel:aWSAccountId:DomainDescriptionType'</a>,
--   <a>domainDescriptionType_aWSAccountId</a> - The account ID for the
--   user pool owner.
--   
--   <a>$sel:customDomainConfig:DomainDescriptionType'</a>,
--   <a>domainDescriptionType_customDomainConfig</a> - The configuration
--   for a custom domain that hosts the sign-up and sign-in webpages for
--   your application.
--   
--   <a>$sel:version:DomainDescriptionType'</a>,
--   <a>domainDescriptionType_version</a> - The app version.
--   
--   <a>$sel:s3Bucket:DomainDescriptionType'</a>,
--   <a>domainDescriptionType_s3Bucket</a> - The S3 bucket where the static
--   files for this domain are stored.
newDomainDescriptionType :: DomainDescriptionType

-- | The domain status.
domainDescriptionType_status :: Lens' DomainDescriptionType (Maybe DomainStatusType)

-- | The ARN of the CloudFront distribution.
domainDescriptionType_cloudFrontDistribution :: Lens' DomainDescriptionType (Maybe Text)

-- | The user pool ID.
domainDescriptionType_userPoolId :: Lens' DomainDescriptionType (Maybe Text)

-- | The domain string.
domainDescriptionType_domain :: Lens' DomainDescriptionType (Maybe Text)

-- | The account ID for the user pool owner.
domainDescriptionType_aWSAccountId :: Lens' DomainDescriptionType (Maybe Text)

-- | The configuration for a custom domain that hosts the sign-up and
--   sign-in webpages for your application.
domainDescriptionType_customDomainConfig :: Lens' DomainDescriptionType (Maybe CustomDomainConfigType)

-- | The app version.
domainDescriptionType_version :: Lens' DomainDescriptionType (Maybe Text)

-- | The S3 bucket where the static files for this domain are stored.
domainDescriptionType_s3Bucket :: Lens' DomainDescriptionType (Maybe Text)
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.Types.DomainDescriptionType.DomainDescriptionType
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.Types.DomainDescriptionType.DomainDescriptionType
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.Types.DomainDescriptionType.DomainDescriptionType
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.Types.DomainDescriptionType.DomainDescriptionType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CognitoIdentityProvider.Types.DomainDescriptionType.DomainDescriptionType
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.Types.DomainDescriptionType.DomainDescriptionType
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.Types.DomainDescriptionType.DomainDescriptionType


module Network.AWS.CognitoIdentityProvider.Types.EmailSendingAccountType
newtype EmailSendingAccountType
EmailSendingAccountType' :: Text -> EmailSendingAccountType
[fromEmailSendingAccountType] :: EmailSendingAccountType -> Text
pattern EmailSendingAccountType_COGNITO_DEFAULT :: EmailSendingAccountType
pattern EmailSendingAccountType_DEVELOPER :: EmailSendingAccountType
instance Network.AWS.Data.XML.ToXML Network.AWS.CognitoIdentityProvider.Types.EmailSendingAccountType.EmailSendingAccountType
instance Network.AWS.Data.XML.FromXML Network.AWS.CognitoIdentityProvider.Types.EmailSendingAccountType.EmailSendingAccountType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.CognitoIdentityProvider.Types.EmailSendingAccountType.EmailSendingAccountType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.Types.EmailSendingAccountType.EmailSendingAccountType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.CognitoIdentityProvider.Types.EmailSendingAccountType.EmailSendingAccountType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CognitoIdentityProvider.Types.EmailSendingAccountType.EmailSendingAccountType
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentityProvider.Types.EmailSendingAccountType.EmailSendingAccountType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.CognitoIdentityProvider.Types.EmailSendingAccountType.EmailSendingAccountType
instance Network.AWS.Data.Log.ToLog Network.AWS.CognitoIdentityProvider.Types.EmailSendingAccountType.EmailSendingAccountType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.CognitoIdentityProvider.Types.EmailSendingAccountType.EmailSendingAccountType
instance Network.AWS.Data.Text.ToText Network.AWS.CognitoIdentityProvider.Types.EmailSendingAccountType.EmailSendingAccountType
instance Network.AWS.Data.Text.FromText Network.AWS.CognitoIdentityProvider.Types.EmailSendingAccountType.EmailSendingAccountType
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.Types.EmailSendingAccountType.EmailSendingAccountType
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.Types.EmailSendingAccountType.EmailSendingAccountType
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.Types.EmailSendingAccountType.EmailSendingAccountType
instance GHC.Classes.Ord Network.AWS.CognitoIdentityProvider.Types.EmailSendingAccountType.EmailSendingAccountType
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.Types.EmailSendingAccountType.EmailSendingAccountType
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.Types.EmailSendingAccountType.EmailSendingAccountType
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.Types.EmailSendingAccountType.EmailSendingAccountType


module Network.AWS.CognitoIdentityProvider.Types.EmailConfigurationType

-- | The email configuration type.
--   
--   Amazon Cognito has specific regions for use with Amazon SES. For more
--   information on the supported regions, see <a>Email Settings for Amazon
--   Cognito User Pools</a>.
--   
--   <i>See:</i> <a>newEmailConfigurationType</a> smart constructor.
data EmailConfigurationType
EmailConfigurationType' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe EmailSendingAccountType -> EmailConfigurationType

-- | The Amazon Resource Name (ARN) of a verified email address in Amazon
--   SES. This email address is used in one of the following ways,
--   depending on the value that you specify for the
--   <tt>EmailSendingAccount</tt> parameter:
--   
--   <ul>
--   <li>If you specify <tt>COGNITO_DEFAULT</tt>, Amazon Cognito uses this
--   address as the custom FROM address when it emails your users by using
--   its built-in email account.</li>
--   <li>If you specify <tt>DEVELOPER</tt>, Amazon Cognito emails your
--   users with this address by calling Amazon SES on your behalf.</li>
--   </ul>
[$sel:sourceArn:EmailConfigurationType'] :: EmailConfigurationType -> Maybe Text

-- | Identifies either the sender’s email address or the sender’s name with
--   their email address. For example, <tt>testuser@example.com</tt> or
--   <tt>Test User &lt;testuser@example.com&gt;</tt>. This address will
--   appear before the body of the email.
[$sel:from:EmailConfigurationType'] :: EmailConfigurationType -> Maybe Text

-- | The set of configuration rules that can be applied to emails sent
--   using Amazon SES. A configuration set is applied to an email by
--   including a reference to the configuration set in the headers of the
--   email. Once applied, all of the rules in that configuration set are
--   applied to the email. Configuration sets can be used to apply the
--   following types of rules to emails:
--   
--   <ul>
--   <li>Event publishing – Amazon SES can track the number of send,
--   delivery, open, click, bounce, and complaint events for each email
--   sent. Use event publishing to send information about these events to
--   other Amazon Web Services services such as SNS and CloudWatch.</li>
--   <li>IP pool management – When leasing dedicated IP addresses with
--   Amazon SES, you can create groups of IP addresses, called dedicated IP
--   pools. You can then associate the dedicated IP pools with
--   configuration sets.</li>
--   </ul>
[$sel:configurationSet:EmailConfigurationType'] :: EmailConfigurationType -> Maybe Text

-- | The destination to which the receiver of the email should reply to.
[$sel:replyToEmailAddress:EmailConfigurationType'] :: EmailConfigurationType -> Maybe Text

-- | Specifies whether Amazon Cognito emails your users by using its
--   built-in email functionality or your Amazon SES email configuration.
--   Specify one of the following values:
--   
--   <ul>
--   <li><i>COGNITO_DEFAULT</i> When Amazon Cognito emails your users, it
--   uses its built-in email functionality. When you use the default
--   option, Amazon Cognito allows only a limited number of emails each day
--   for your user pool. For typical production environments, the default
--   email limit is below the required delivery volume. To achieve a higher
--   delivery volume, specify DEVELOPER to use your Amazon SES email
--   configuration.To look up the email delivery limit for the default
--   option, see <a>Limits in Amazon Cognito</a> in the <i>Amazon Cognito
--   Developer Guide</i>.The default FROM address is
--   no-reply@verificationemail.com. To customize the FROM address, provide
--   the ARN of an Amazon SES verified email address for the
--   <tt>SourceArn</tt> parameter.If EmailSendingAccount is
--   COGNITO_DEFAULT, the following parameters aren't
--   allowed:<ul><li>EmailVerificationMessage</li><li>EmailVerificationSubject</li><li>InviteMessageTemplate.EmailMessage</li><li>InviteMessageTemplate.EmailSubject</li><li>VerificationMessageTemplate.EmailMessage</li><li>VerificationMessageTemplate.EmailMessageByLink</li><li>VerificationMessageTemplate.EmailSubject,</li><li>VerificationMessageTemplate.EmailSubjectByLink</li></ul>DEVELOPER
--   EmailSendingAccount is required.</li>
--   <li><i>DEVELOPER</i> When Amazon Cognito emails your users, it uses
--   your Amazon SES configuration. Amazon Cognito calls Amazon SES on your
--   behalf to send email from your verified email address. When you use
--   this option, the email delivery limits are the same limits that apply
--   to your Amazon SES verified email address in your account.If you use
--   this option, you must provide the ARN of an Amazon SES verified email
--   address for the <tt>SourceArn</tt> parameter.Before Amazon Cognito can
--   email your users, it requires additional permissions to call Amazon
--   SES on your behalf. When you update your user pool with this option,
--   Amazon Cognito creates a /service-linked role/, which is a type of IAM
--   role, in your account. This role contains the permissions that allow
--   Amazon Cognito to access Amazon SES and send email messages with your
--   address. For more information about the service-linked role that
--   Amazon Cognito creates, see <a>Using Service-Linked Roles for Amazon
--   Cognito</a> in the <i>Amazon Cognito Developer Guide</i>.</li>
--   </ul>
[$sel:emailSendingAccount:EmailConfigurationType'] :: EmailConfigurationType -> Maybe EmailSendingAccountType

-- | Create a value of <a>EmailConfigurationType</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sourceArn:EmailConfigurationType'</a>,
--   <a>emailConfigurationType_sourceArn</a> - The Amazon Resource Name
--   (ARN) of a verified email address in Amazon SES. This email address is
--   used in one of the following ways, depending on the value that you
--   specify for the <tt>EmailSendingAccount</tt> parameter:
--   
--   <ul>
--   <li>If you specify <tt>COGNITO_DEFAULT</tt>, Amazon Cognito uses this
--   address as the custom FROM address when it emails your users by using
--   its built-in email account.</li>
--   <li>If you specify <tt>DEVELOPER</tt>, Amazon Cognito emails your
--   users with this address by calling Amazon SES on your behalf.</li>
--   </ul>
--   
--   <a>$sel:from:EmailConfigurationType'</a>,
--   <a>emailConfigurationType_from</a> - Identifies either the sender’s
--   email address or the sender’s name with their email address. For
--   example, <tt>testuser@example.com</tt> or <tt>Test User
--   &lt;testuser@example.com&gt;</tt>. This address will appear before the
--   body of the email.
--   
--   <a>$sel:configurationSet:EmailConfigurationType'</a>,
--   <a>emailConfigurationType_configurationSet</a> - The set of
--   configuration rules that can be applied to emails sent using Amazon
--   SES. A configuration set is applied to an email by including a
--   reference to the configuration set in the headers of the email. Once
--   applied, all of the rules in that configuration set are applied to the
--   email. Configuration sets can be used to apply the following types of
--   rules to emails:
--   
--   <ul>
--   <li>Event publishing – Amazon SES can track the number of send,
--   delivery, open, click, bounce, and complaint events for each email
--   sent. Use event publishing to send information about these events to
--   other Amazon Web Services services such as SNS and CloudWatch.</li>
--   <li>IP pool management – When leasing dedicated IP addresses with
--   Amazon SES, you can create groups of IP addresses, called dedicated IP
--   pools. You can then associate the dedicated IP pools with
--   configuration sets.</li>
--   </ul>
--   
--   <a>$sel:replyToEmailAddress:EmailConfigurationType'</a>,
--   <a>emailConfigurationType_replyToEmailAddress</a> - The destination to
--   which the receiver of the email should reply to.
--   
--   <a>$sel:emailSendingAccount:EmailConfigurationType'</a>,
--   <a>emailConfigurationType_emailSendingAccount</a> - Specifies whether
--   Amazon Cognito emails your users by using its built-in email
--   functionality or your Amazon SES email configuration. Specify one of
--   the following values:
--   
--   <ul>
--   <li><i>COGNITO_DEFAULT</i> When Amazon Cognito emails your users, it
--   uses its built-in email functionality. When you use the default
--   option, Amazon Cognito allows only a limited number of emails each day
--   for your user pool. For typical production environments, the default
--   email limit is below the required delivery volume. To achieve a higher
--   delivery volume, specify DEVELOPER to use your Amazon SES email
--   configuration.To look up the email delivery limit for the default
--   option, see <a>Limits in Amazon Cognito</a> in the <i>Amazon Cognito
--   Developer Guide</i>.The default FROM address is
--   no-reply@verificationemail.com. To customize the FROM address, provide
--   the ARN of an Amazon SES verified email address for the
--   <tt>SourceArn</tt> parameter.If EmailSendingAccount is
--   COGNITO_DEFAULT, the following parameters aren't
--   allowed:<ul><li>EmailVerificationMessage</li><li>EmailVerificationSubject</li><li>InviteMessageTemplate.EmailMessage</li><li>InviteMessageTemplate.EmailSubject</li><li>VerificationMessageTemplate.EmailMessage</li><li>VerificationMessageTemplate.EmailMessageByLink</li><li>VerificationMessageTemplate.EmailSubject,</li><li>VerificationMessageTemplate.EmailSubjectByLink</li></ul>DEVELOPER
--   EmailSendingAccount is required.</li>
--   <li><i>DEVELOPER</i> When Amazon Cognito emails your users, it uses
--   your Amazon SES configuration. Amazon Cognito calls Amazon SES on your
--   behalf to send email from your verified email address. When you use
--   this option, the email delivery limits are the same limits that apply
--   to your Amazon SES verified email address in your account.If you use
--   this option, you must provide the ARN of an Amazon SES verified email
--   address for the <tt>SourceArn</tt> parameter.Before Amazon Cognito can
--   email your users, it requires additional permissions to call Amazon
--   SES on your behalf. When you update your user pool with this option,
--   Amazon Cognito creates a /service-linked role/, which is a type of IAM
--   role, in your account. This role contains the permissions that allow
--   Amazon Cognito to access Amazon SES and send email messages with your
--   address. For more information about the service-linked role that
--   Amazon Cognito creates, see <a>Using Service-Linked Roles for Amazon
--   Cognito</a> in the <i>Amazon Cognito Developer Guide</i>.</li>
--   </ul>
newEmailConfigurationType :: EmailConfigurationType

-- | The Amazon Resource Name (ARN) of a verified email address in Amazon
--   SES. This email address is used in one of the following ways,
--   depending on the value that you specify for the
--   <tt>EmailSendingAccount</tt> parameter:
--   
--   <ul>
--   <li>If you specify <tt>COGNITO_DEFAULT</tt>, Amazon Cognito uses this
--   address as the custom FROM address when it emails your users by using
--   its built-in email account.</li>
--   <li>If you specify <tt>DEVELOPER</tt>, Amazon Cognito emails your
--   users with this address by calling Amazon SES on your behalf.</li>
--   </ul>
emailConfigurationType_sourceArn :: Lens' EmailConfigurationType (Maybe Text)

-- | Identifies either the sender’s email address or the sender’s name with
--   their email address. For example, <tt>testuser@example.com</tt> or
--   <tt>Test User &lt;testuser@example.com&gt;</tt>. This address will
--   appear before the body of the email.
emailConfigurationType_from :: Lens' EmailConfigurationType (Maybe Text)

-- | The set of configuration rules that can be applied to emails sent
--   using Amazon SES. A configuration set is applied to an email by
--   including a reference to the configuration set in the headers of the
--   email. Once applied, all of the rules in that configuration set are
--   applied to the email. Configuration sets can be used to apply the
--   following types of rules to emails:
--   
--   <ul>
--   <li>Event publishing – Amazon SES can track the number of send,
--   delivery, open, click, bounce, and complaint events for each email
--   sent. Use event publishing to send information about these events to
--   other Amazon Web Services services such as SNS and CloudWatch.</li>
--   <li>IP pool management – When leasing dedicated IP addresses with
--   Amazon SES, you can create groups of IP addresses, called dedicated IP
--   pools. You can then associate the dedicated IP pools with
--   configuration sets.</li>
--   </ul>
emailConfigurationType_configurationSet :: Lens' EmailConfigurationType (Maybe Text)

-- | The destination to which the receiver of the email should reply to.
emailConfigurationType_replyToEmailAddress :: Lens' EmailConfigurationType (Maybe Text)

-- | Specifies whether Amazon Cognito emails your users by using its
--   built-in email functionality or your Amazon SES email configuration.
--   Specify one of the following values:
--   
--   <ul>
--   <li><i>COGNITO_DEFAULT</i> When Amazon Cognito emails your users, it
--   uses its built-in email functionality. When you use the default
--   option, Amazon Cognito allows only a limited number of emails each day
--   for your user pool. For typical production environments, the default
--   email limit is below the required delivery volume. To achieve a higher
--   delivery volume, specify DEVELOPER to use your Amazon SES email
--   configuration.To look up the email delivery limit for the default
--   option, see <a>Limits in Amazon Cognito</a> in the <i>Amazon Cognito
--   Developer Guide</i>.The default FROM address is
--   no-reply@verificationemail.com. To customize the FROM address, provide
--   the ARN of an Amazon SES verified email address for the
--   <tt>SourceArn</tt> parameter.If EmailSendingAccount is
--   COGNITO_DEFAULT, the following parameters aren't
--   allowed:<ul><li>EmailVerificationMessage</li><li>EmailVerificationSubject</li><li>InviteMessageTemplate.EmailMessage</li><li>InviteMessageTemplate.EmailSubject</li><li>VerificationMessageTemplate.EmailMessage</li><li>VerificationMessageTemplate.EmailMessageByLink</li><li>VerificationMessageTemplate.EmailSubject,</li><li>VerificationMessageTemplate.EmailSubjectByLink</li></ul>DEVELOPER
--   EmailSendingAccount is required.</li>
--   <li><i>DEVELOPER</i> When Amazon Cognito emails your users, it uses
--   your Amazon SES configuration. Amazon Cognito calls Amazon SES on your
--   behalf to send email from your verified email address. When you use
--   this option, the email delivery limits are the same limits that apply
--   to your Amazon SES verified email address in your account.If you use
--   this option, you must provide the ARN of an Amazon SES verified email
--   address for the <tt>SourceArn</tt> parameter.Before Amazon Cognito can
--   email your users, it requires additional permissions to call Amazon
--   SES on your behalf. When you update your user pool with this option,
--   Amazon Cognito creates a /service-linked role/, which is a type of IAM
--   role, in your account. This role contains the permissions that allow
--   Amazon Cognito to access Amazon SES and send email messages with your
--   address. For more information about the service-linked role that
--   Amazon Cognito creates, see <a>Using Service-Linked Roles for Amazon
--   Cognito</a> in the <i>Amazon Cognito Developer Guide</i>.</li>
--   </ul>
emailConfigurationType_emailSendingAccount :: Lens' EmailConfigurationType (Maybe EmailSendingAccountType)
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.Types.EmailConfigurationType.EmailConfigurationType
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.Types.EmailConfigurationType.EmailConfigurationType
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.Types.EmailConfigurationType.EmailConfigurationType
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.Types.EmailConfigurationType.EmailConfigurationType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CognitoIdentityProvider.Types.EmailConfigurationType.EmailConfigurationType
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.Types.EmailConfigurationType.EmailConfigurationType
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.Types.EmailConfigurationType.EmailConfigurationType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.Types.EmailConfigurationType.EmailConfigurationType


module Network.AWS.CognitoIdentityProvider.Types.EventContextDataType

-- | Specifies the user context data captured at the time of an event
--   request.
--   
--   <i>See:</i> <a>newEventContextDataType</a> smart constructor.
data EventContextDataType
EventContextDataType' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> EventContextDataType

-- | The user's IP address.
[$sel:ipAddress:EventContextDataType'] :: EventContextDataType -> Maybe Text

-- | The user's country.
[$sel:country:EventContextDataType'] :: EventContextDataType -> Maybe Text

-- | The user's city.
[$sel:city:EventContextDataType'] :: EventContextDataType -> Maybe Text

-- | The user's device name.
[$sel:deviceName:EventContextDataType'] :: EventContextDataType -> Maybe Text

-- | The user's time zone.
[$sel:timezone:EventContextDataType'] :: EventContextDataType -> Maybe Text

-- | Create a value of <a>EventContextDataType</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ipAddress:EventContextDataType'</a>,
--   <a>eventContextDataType_ipAddress</a> - The user's IP address.
--   
--   <a>$sel:country:EventContextDataType'</a>,
--   <a>eventContextDataType_country</a> - The user's country.
--   
--   <a>$sel:city:EventContextDataType'</a>,
--   <a>eventContextDataType_city</a> - The user's city.
--   
--   <a>$sel:deviceName:EventContextDataType'</a>,
--   <a>eventContextDataType_deviceName</a> - The user's device name.
--   
--   <a>$sel:timezone:EventContextDataType'</a>,
--   <a>eventContextDataType_timezone</a> - The user's time zone.
newEventContextDataType :: EventContextDataType

-- | The user's IP address.
eventContextDataType_ipAddress :: Lens' EventContextDataType (Maybe Text)

-- | The user's country.
eventContextDataType_country :: Lens' EventContextDataType (Maybe Text)

-- | The user's city.
eventContextDataType_city :: Lens' EventContextDataType (Maybe Text)

-- | The user's device name.
eventContextDataType_deviceName :: Lens' EventContextDataType (Maybe Text)

-- | The user's time zone.
eventContextDataType_timezone :: Lens' EventContextDataType (Maybe Text)
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.Types.EventContextDataType.EventContextDataType
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.Types.EventContextDataType.EventContextDataType
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.Types.EventContextDataType.EventContextDataType
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.Types.EventContextDataType.EventContextDataType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CognitoIdentityProvider.Types.EventContextDataType.EventContextDataType
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.Types.EventContextDataType.EventContextDataType
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.Types.EventContextDataType.EventContextDataType


module Network.AWS.CognitoIdentityProvider.Types.EventFilterType
newtype EventFilterType
EventFilterType' :: Text -> EventFilterType
[fromEventFilterType] :: EventFilterType -> Text
pattern EventFilterType_PASSWORD_CHANGE :: EventFilterType
pattern EventFilterType_SIGN_IN :: EventFilterType
pattern EventFilterType_SIGN_UP :: EventFilterType
instance Network.AWS.Data.XML.ToXML Network.AWS.CognitoIdentityProvider.Types.EventFilterType.EventFilterType
instance Network.AWS.Data.XML.FromXML Network.AWS.CognitoIdentityProvider.Types.EventFilterType.EventFilterType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.CognitoIdentityProvider.Types.EventFilterType.EventFilterType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.Types.EventFilterType.EventFilterType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.CognitoIdentityProvider.Types.EventFilterType.EventFilterType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CognitoIdentityProvider.Types.EventFilterType.EventFilterType
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentityProvider.Types.EventFilterType.EventFilterType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.CognitoIdentityProvider.Types.EventFilterType.EventFilterType
instance Network.AWS.Data.Log.ToLog Network.AWS.CognitoIdentityProvider.Types.EventFilterType.EventFilterType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.CognitoIdentityProvider.Types.EventFilterType.EventFilterType
instance Network.AWS.Data.Text.ToText Network.AWS.CognitoIdentityProvider.Types.EventFilterType.EventFilterType
instance Network.AWS.Data.Text.FromText Network.AWS.CognitoIdentityProvider.Types.EventFilterType.EventFilterType
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.Types.EventFilterType.EventFilterType
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.Types.EventFilterType.EventFilterType
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.Types.EventFilterType.EventFilterType
instance GHC.Classes.Ord Network.AWS.CognitoIdentityProvider.Types.EventFilterType.EventFilterType
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.Types.EventFilterType.EventFilterType
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.Types.EventFilterType.EventFilterType
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.Types.EventFilterType.EventFilterType


module Network.AWS.CognitoIdentityProvider.Types.CompromisedCredentialsRiskConfigurationType

-- | The compromised credentials risk configuration type.
--   
--   <i>See:</i> <a>newCompromisedCredentialsRiskConfigurationType</a>
--   smart constructor.
data CompromisedCredentialsRiskConfigurationType
CompromisedCredentialsRiskConfigurationType' :: Maybe [EventFilterType] -> CompromisedCredentialsActionsType -> CompromisedCredentialsRiskConfigurationType

-- | Perform the action for these events. The default is to perform all
--   events if no event filter is specified.
[$sel:eventFilter:CompromisedCredentialsRiskConfigurationType'] :: CompromisedCredentialsRiskConfigurationType -> Maybe [EventFilterType]

-- | The compromised credentials risk configuration actions.
[$sel:actions:CompromisedCredentialsRiskConfigurationType'] :: CompromisedCredentialsRiskConfigurationType -> CompromisedCredentialsActionsType

-- | Create a value of <a>CompromisedCredentialsRiskConfigurationType</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:eventFilter:CompromisedCredentialsRiskConfigurationType'</a>,
--   <a>compromisedCredentialsRiskConfigurationType_eventFilter</a> -
--   Perform the action for these events. The default is to perform all
--   events if no event filter is specified.
--   
--   <a>$sel:actions:CompromisedCredentialsRiskConfigurationType'</a>,
--   <a>compromisedCredentialsRiskConfigurationType_actions</a> - The
--   compromised credentials risk configuration actions.
newCompromisedCredentialsRiskConfigurationType :: CompromisedCredentialsActionsType -> CompromisedCredentialsRiskConfigurationType

-- | Perform the action for these events. The default is to perform all
--   events if no event filter is specified.
compromisedCredentialsRiskConfigurationType_eventFilter :: Lens' CompromisedCredentialsRiskConfigurationType (Maybe [EventFilterType])

-- | The compromised credentials risk configuration actions.
compromisedCredentialsRiskConfigurationType_actions :: Lens' CompromisedCredentialsRiskConfigurationType CompromisedCredentialsActionsType
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.Types.CompromisedCredentialsRiskConfigurationType.CompromisedCredentialsRiskConfigurationType
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.Types.CompromisedCredentialsRiskConfigurationType.CompromisedCredentialsRiskConfigurationType
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.Types.CompromisedCredentialsRiskConfigurationType.CompromisedCredentialsRiskConfigurationType
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.Types.CompromisedCredentialsRiskConfigurationType.CompromisedCredentialsRiskConfigurationType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CognitoIdentityProvider.Types.CompromisedCredentialsRiskConfigurationType.CompromisedCredentialsRiskConfigurationType
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.Types.CompromisedCredentialsRiskConfigurationType.CompromisedCredentialsRiskConfigurationType
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.Types.CompromisedCredentialsRiskConfigurationType.CompromisedCredentialsRiskConfigurationType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.Types.CompromisedCredentialsRiskConfigurationType.CompromisedCredentialsRiskConfigurationType


module Network.AWS.CognitoIdentityProvider.Types.EventResponseType
newtype EventResponseType
EventResponseType' :: Text -> EventResponseType
[fromEventResponseType] :: EventResponseType -> Text
pattern EventResponseType_Failure :: EventResponseType
pattern EventResponseType_Success :: EventResponseType
instance Network.AWS.Data.XML.ToXML Network.AWS.CognitoIdentityProvider.Types.EventResponseType.EventResponseType
instance Network.AWS.Data.XML.FromXML Network.AWS.CognitoIdentityProvider.Types.EventResponseType.EventResponseType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.CognitoIdentityProvider.Types.EventResponseType.EventResponseType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.Types.EventResponseType.EventResponseType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.CognitoIdentityProvider.Types.EventResponseType.EventResponseType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CognitoIdentityProvider.Types.EventResponseType.EventResponseType
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentityProvider.Types.EventResponseType.EventResponseType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.CognitoIdentityProvider.Types.EventResponseType.EventResponseType
instance Network.AWS.Data.Log.ToLog Network.AWS.CognitoIdentityProvider.Types.EventResponseType.EventResponseType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.CognitoIdentityProvider.Types.EventResponseType.EventResponseType
instance Network.AWS.Data.Text.ToText Network.AWS.CognitoIdentityProvider.Types.EventResponseType.EventResponseType
instance Network.AWS.Data.Text.FromText Network.AWS.CognitoIdentityProvider.Types.EventResponseType.EventResponseType
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.Types.EventResponseType.EventResponseType
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.Types.EventResponseType.EventResponseType
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.Types.EventResponseType.EventResponseType
instance GHC.Classes.Ord Network.AWS.CognitoIdentityProvider.Types.EventResponseType.EventResponseType
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.Types.EventResponseType.EventResponseType
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.Types.EventResponseType.EventResponseType
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.Types.EventResponseType.EventResponseType


module Network.AWS.CognitoIdentityProvider.Types.EventType
newtype EventType
EventType' :: Text -> EventType
[fromEventType] :: EventType -> Text
pattern EventType_ForgotPassword :: EventType
pattern EventType_SignIn :: EventType
pattern EventType_SignUp :: EventType
instance Network.AWS.Data.XML.ToXML Network.AWS.CognitoIdentityProvider.Types.EventType.EventType
instance Network.AWS.Data.XML.FromXML Network.AWS.CognitoIdentityProvider.Types.EventType.EventType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.CognitoIdentityProvider.Types.EventType.EventType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.Types.EventType.EventType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.CognitoIdentityProvider.Types.EventType.EventType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CognitoIdentityProvider.Types.EventType.EventType
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentityProvider.Types.EventType.EventType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.CognitoIdentityProvider.Types.EventType.EventType
instance Network.AWS.Data.Log.ToLog Network.AWS.CognitoIdentityProvider.Types.EventType.EventType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.CognitoIdentityProvider.Types.EventType.EventType
instance Network.AWS.Data.Text.ToText Network.AWS.CognitoIdentityProvider.Types.EventType.EventType
instance Network.AWS.Data.Text.FromText Network.AWS.CognitoIdentityProvider.Types.EventType.EventType
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.Types.EventType.EventType
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.Types.EventType.EventType
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.Types.EventType.EventType
instance GHC.Classes.Ord Network.AWS.CognitoIdentityProvider.Types.EventType.EventType
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.Types.EventType.EventType
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.Types.EventType.EventType
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.Types.EventType.EventType


module Network.AWS.CognitoIdentityProvider.Types.ExplicitAuthFlowsType
newtype ExplicitAuthFlowsType
ExplicitAuthFlowsType' :: Text -> ExplicitAuthFlowsType
[fromExplicitAuthFlowsType] :: ExplicitAuthFlowsType -> Text
pattern ExplicitAuthFlowsType_ADMIN_NO_SRP_AUTH :: ExplicitAuthFlowsType
pattern ExplicitAuthFlowsType_ALLOW_ADMIN_USER_PASSWORD_AUTH :: ExplicitAuthFlowsType
pattern ExplicitAuthFlowsType_ALLOW_CUSTOM_AUTH :: ExplicitAuthFlowsType
pattern ExplicitAuthFlowsType_ALLOW_REFRESH_TOKEN_AUTH :: ExplicitAuthFlowsType
pattern ExplicitAuthFlowsType_ALLOW_USER_PASSWORD_AUTH :: ExplicitAuthFlowsType
pattern ExplicitAuthFlowsType_ALLOW_USER_SRP_AUTH :: ExplicitAuthFlowsType
pattern ExplicitAuthFlowsType_CUSTOM_AUTH_FLOW_ONLY :: ExplicitAuthFlowsType
pattern ExplicitAuthFlowsType_USER_PASSWORD_AUTH :: ExplicitAuthFlowsType
instance Network.AWS.Data.XML.ToXML Network.AWS.CognitoIdentityProvider.Types.ExplicitAuthFlowsType.ExplicitAuthFlowsType
instance Network.AWS.Data.XML.FromXML Network.AWS.CognitoIdentityProvider.Types.ExplicitAuthFlowsType.ExplicitAuthFlowsType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.CognitoIdentityProvider.Types.ExplicitAuthFlowsType.ExplicitAuthFlowsType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.Types.ExplicitAuthFlowsType.ExplicitAuthFlowsType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.CognitoIdentityProvider.Types.ExplicitAuthFlowsType.ExplicitAuthFlowsType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CognitoIdentityProvider.Types.ExplicitAuthFlowsType.ExplicitAuthFlowsType
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentityProvider.Types.ExplicitAuthFlowsType.ExplicitAuthFlowsType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.CognitoIdentityProvider.Types.ExplicitAuthFlowsType.ExplicitAuthFlowsType
instance Network.AWS.Data.Log.ToLog Network.AWS.CognitoIdentityProvider.Types.ExplicitAuthFlowsType.ExplicitAuthFlowsType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.CognitoIdentityProvider.Types.ExplicitAuthFlowsType.ExplicitAuthFlowsType
instance Network.AWS.Data.Text.ToText Network.AWS.CognitoIdentityProvider.Types.ExplicitAuthFlowsType.ExplicitAuthFlowsType
instance Network.AWS.Data.Text.FromText Network.AWS.CognitoIdentityProvider.Types.ExplicitAuthFlowsType.ExplicitAuthFlowsType
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.Types.ExplicitAuthFlowsType.ExplicitAuthFlowsType
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.Types.ExplicitAuthFlowsType.ExplicitAuthFlowsType
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.Types.ExplicitAuthFlowsType.ExplicitAuthFlowsType
instance GHC.Classes.Ord Network.AWS.CognitoIdentityProvider.Types.ExplicitAuthFlowsType.ExplicitAuthFlowsType
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.Types.ExplicitAuthFlowsType.ExplicitAuthFlowsType
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.Types.ExplicitAuthFlowsType.ExplicitAuthFlowsType
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.Types.ExplicitAuthFlowsType.ExplicitAuthFlowsType


module Network.AWS.CognitoIdentityProvider.Types.FeedbackValueType
newtype FeedbackValueType
FeedbackValueType' :: Text -> FeedbackValueType
[fromFeedbackValueType] :: FeedbackValueType -> Text
pattern FeedbackValueType_Invalid :: FeedbackValueType
pattern FeedbackValueType_Valid :: FeedbackValueType
instance Network.AWS.Data.XML.ToXML Network.AWS.CognitoIdentityProvider.Types.FeedbackValueType.FeedbackValueType
instance Network.AWS.Data.XML.FromXML Network.AWS.CognitoIdentityProvider.Types.FeedbackValueType.FeedbackValueType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.CognitoIdentityProvider.Types.FeedbackValueType.FeedbackValueType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.Types.FeedbackValueType.FeedbackValueType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.CognitoIdentityProvider.Types.FeedbackValueType.FeedbackValueType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CognitoIdentityProvider.Types.FeedbackValueType.FeedbackValueType
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentityProvider.Types.FeedbackValueType.FeedbackValueType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.CognitoIdentityProvider.Types.FeedbackValueType.FeedbackValueType
instance Network.AWS.Data.Log.ToLog Network.AWS.CognitoIdentityProvider.Types.FeedbackValueType.FeedbackValueType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.CognitoIdentityProvider.Types.FeedbackValueType.FeedbackValueType
instance Network.AWS.Data.Text.ToText Network.AWS.CognitoIdentityProvider.Types.FeedbackValueType.FeedbackValueType
instance Network.AWS.Data.Text.FromText Network.AWS.CognitoIdentityProvider.Types.FeedbackValueType.FeedbackValueType
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.Types.FeedbackValueType.FeedbackValueType
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.Types.FeedbackValueType.FeedbackValueType
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.Types.FeedbackValueType.FeedbackValueType
instance GHC.Classes.Ord Network.AWS.CognitoIdentityProvider.Types.FeedbackValueType.FeedbackValueType
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.Types.FeedbackValueType.FeedbackValueType
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.Types.FeedbackValueType.FeedbackValueType
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.Types.FeedbackValueType.FeedbackValueType


module Network.AWS.CognitoIdentityProvider.Types.EventFeedbackType

-- | Specifies the event feedback type.
--   
--   <i>See:</i> <a>newEventFeedbackType</a> smart constructor.
data EventFeedbackType
EventFeedbackType' :: Maybe POSIX -> FeedbackValueType -> Text -> EventFeedbackType

-- | The event feedback date.
[$sel:feedbackDate:EventFeedbackType'] :: EventFeedbackType -> Maybe POSIX

-- | The event feedback value.
[$sel:feedbackValue:EventFeedbackType'] :: EventFeedbackType -> FeedbackValueType

-- | The provider.
[$sel:provider:EventFeedbackType'] :: EventFeedbackType -> Text

-- | Create a value of <a>EventFeedbackType</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:feedbackDate:EventFeedbackType'</a>,
--   <a>eventFeedbackType_feedbackDate</a> - The event feedback date.
--   
--   <a>$sel:feedbackValue:EventFeedbackType'</a>,
--   <a>eventFeedbackType_feedbackValue</a> - The event feedback value.
--   
--   <a>$sel:provider:EventFeedbackType'</a>,
--   <a>eventFeedbackType_provider</a> - The provider.
newEventFeedbackType :: FeedbackValueType -> Text -> EventFeedbackType

-- | The event feedback date.
eventFeedbackType_feedbackDate :: Lens' EventFeedbackType (Maybe UTCTime)

-- | The event feedback value.
eventFeedbackType_feedbackValue :: Lens' EventFeedbackType FeedbackValueType

-- | The provider.
eventFeedbackType_provider :: Lens' EventFeedbackType Text
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.Types.EventFeedbackType.EventFeedbackType
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.Types.EventFeedbackType.EventFeedbackType
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.Types.EventFeedbackType.EventFeedbackType
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.Types.EventFeedbackType.EventFeedbackType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CognitoIdentityProvider.Types.EventFeedbackType.EventFeedbackType
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.Types.EventFeedbackType.EventFeedbackType
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.Types.EventFeedbackType.EventFeedbackType


module Network.AWS.CognitoIdentityProvider.Types.GroupType

-- | The group type.
--   
--   <i>See:</i> <a>newGroupType</a> smart constructor.
data GroupType
GroupType' :: Maybe POSIX -> Maybe Text -> Maybe POSIX -> Maybe Natural -> Maybe Text -> Maybe Text -> Maybe Text -> GroupType

-- | The date the group was last modified.
[$sel:lastModifiedDate:GroupType'] :: GroupType -> Maybe POSIX

-- | The user pool ID for the user pool.
[$sel:userPoolId:GroupType'] :: GroupType -> Maybe Text

-- | The date the group was created.
[$sel:creationDate:GroupType'] :: GroupType -> Maybe POSIX

-- | A nonnegative integer value that specifies the precedence of this
--   group relative to the other groups that a user can belong to in the
--   user pool. If a user belongs to two or more groups, it is the group
--   with the highest precedence whose role ARN will be used in the
--   <tt>cognito:roles</tt> and <tt>cognito:preferred_role</tt> claims in
--   the user's tokens. Groups with higher <tt>Precedence</tt> values take
--   precedence over groups with lower <tt>Precedence</tt> values or with
--   null <tt>Precedence</tt> values.
--   
--   Two groups can have the same <tt>Precedence</tt> value. If this
--   happens, neither group takes precedence over the other. If two groups
--   with the same <tt>Precedence</tt> have the same role ARN, that role is
--   used in the <tt>cognito:preferred_role</tt> claim in tokens for users
--   in each group. If the two groups have different role ARNs, the
--   <tt>cognito:preferred_role</tt> claim is not set in users' tokens.
--   
--   The default <tt>Precedence</tt> value is null.
[$sel:precedence:GroupType'] :: GroupType -> Maybe Natural

-- | The name of the group.
[$sel:groupName:GroupType'] :: GroupType -> Maybe Text

-- | A string containing the description of the group.
[$sel:description:GroupType'] :: GroupType -> Maybe Text

-- | The role ARN for the group.
[$sel:roleArn:GroupType'] :: GroupType -> Maybe Text

-- | Create a value of <a>GroupType</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lastModifiedDate:GroupType'</a>,
--   <a>groupType_lastModifiedDate</a> - The date the group was last
--   modified.
--   
--   <a>$sel:userPoolId:GroupType'</a>, <a>groupType_userPoolId</a> - The
--   user pool ID for the user pool.
--   
--   <a>$sel:creationDate:GroupType'</a>, <a>groupType_creationDate</a> -
--   The date the group was created.
--   
--   <a>$sel:precedence:GroupType'</a>, <a>groupType_precedence</a> - A
--   nonnegative integer value that specifies the precedence of this group
--   relative to the other groups that a user can belong to in the user
--   pool. If a user belongs to two or more groups, it is the group with
--   the highest precedence whose role ARN will be used in the
--   <tt>cognito:roles</tt> and <tt>cognito:preferred_role</tt> claims in
--   the user's tokens. Groups with higher <tt>Precedence</tt> values take
--   precedence over groups with lower <tt>Precedence</tt> values or with
--   null <tt>Precedence</tt> values.
--   
--   Two groups can have the same <tt>Precedence</tt> value. If this
--   happens, neither group takes precedence over the other. If two groups
--   with the same <tt>Precedence</tt> have the same role ARN, that role is
--   used in the <tt>cognito:preferred_role</tt> claim in tokens for users
--   in each group. If the two groups have different role ARNs, the
--   <tt>cognito:preferred_role</tt> claim is not set in users' tokens.
--   
--   The default <tt>Precedence</tt> value is null.
--   
--   <a>$sel:groupName:GroupType'</a>, <a>groupType_groupName</a> - The
--   name of the group.
--   
--   <a>$sel:description:GroupType'</a>, <a>groupType_description</a> - A
--   string containing the description of the group.
--   
--   <a>$sel:roleArn:GroupType'</a>, <a>groupType_roleArn</a> - The role
--   ARN for the group.
newGroupType :: GroupType

-- | The date the group was last modified.
groupType_lastModifiedDate :: Lens' GroupType (Maybe UTCTime)

-- | The user pool ID for the user pool.
groupType_userPoolId :: Lens' GroupType (Maybe Text)

-- | The date the group was created.
groupType_creationDate :: Lens' GroupType (Maybe UTCTime)

-- | A nonnegative integer value that specifies the precedence of this
--   group relative to the other groups that a user can belong to in the
--   user pool. If a user belongs to two or more groups, it is the group
--   with the highest precedence whose role ARN will be used in the
--   <tt>cognito:roles</tt> and <tt>cognito:preferred_role</tt> claims in
--   the user's tokens. Groups with higher <tt>Precedence</tt> values take
--   precedence over groups with lower <tt>Precedence</tt> values or with
--   null <tt>Precedence</tt> values.
--   
--   Two groups can have the same <tt>Precedence</tt> value. If this
--   happens, neither group takes precedence over the other. If two groups
--   with the same <tt>Precedence</tt> have the same role ARN, that role is
--   used in the <tt>cognito:preferred_role</tt> claim in tokens for users
--   in each group. If the two groups have different role ARNs, the
--   <tt>cognito:preferred_role</tt> claim is not set in users' tokens.
--   
--   The default <tt>Precedence</tt> value is null.
groupType_precedence :: Lens' GroupType (Maybe Natural)

-- | The name of the group.
groupType_groupName :: Lens' GroupType (Maybe Text)

-- | A string containing the description of the group.
groupType_description :: Lens' GroupType (Maybe Text)

-- | The role ARN for the group.
groupType_roleArn :: Lens' GroupType (Maybe Text)
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.Types.GroupType.GroupType
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.Types.GroupType.GroupType
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.Types.GroupType.GroupType
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.Types.GroupType.GroupType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CognitoIdentityProvider.Types.GroupType.GroupType
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.Types.GroupType.GroupType
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.Types.GroupType.GroupType


module Network.AWS.CognitoIdentityProvider.Types.HttpHeader

-- | The HTTP header.
--   
--   <i>See:</i> <a>newHttpHeader</a> smart constructor.
data HttpHeader
HttpHeader' :: Maybe Text -> Maybe Text -> HttpHeader

-- | The header value.
[$sel:headerValue:HttpHeader'] :: HttpHeader -> Maybe Text

-- | The header name
[$sel:headerName:HttpHeader'] :: HttpHeader -> Maybe Text

-- | Create a value of <a>HttpHeader</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:headerValue:HttpHeader'</a>, <a>httpHeader_headerValue</a> -
--   The header value.
--   
--   <a>$sel:headerName:HttpHeader'</a>, <a>httpHeader_headerName</a> - The
--   header name
newHttpHeader :: HttpHeader

-- | The header value.
httpHeader_headerValue :: Lens' HttpHeader (Maybe Text)

-- | The header name
httpHeader_headerName :: Lens' HttpHeader (Maybe Text)
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.Types.HttpHeader.HttpHeader
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.Types.HttpHeader.HttpHeader
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.Types.HttpHeader.HttpHeader
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.Types.HttpHeader.HttpHeader
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.Types.HttpHeader.HttpHeader
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.Types.HttpHeader.HttpHeader
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.Types.HttpHeader.HttpHeader


module Network.AWS.CognitoIdentityProvider.Types.ContextDataType

-- | Contextual user data type used for evaluating the risk of an
--   unexpected event by Amazon Cognito advanced security.
--   
--   <i>See:</i> <a>newContextDataType</a> smart constructor.
data ContextDataType
ContextDataType' :: Maybe Text -> Text -> Text -> Text -> [HttpHeader] -> ContextDataType

-- | Encoded data containing device fingerprinting details, collected using
--   the Amazon Cognito context data collection library.
[$sel:encodedData:ContextDataType'] :: ContextDataType -> Maybe Text

-- | Source IP address of your user.
[$sel:ipAddress:ContextDataType'] :: ContextDataType -> Text

-- | Your server endpoint where this API is invoked.
[$sel:serverName:ContextDataType'] :: ContextDataType -> Text

-- | Your server path where this API is invoked.
[$sel:serverPath:ContextDataType'] :: ContextDataType -> Text

-- | HttpHeaders received on your server in same order.
[$sel:httpHeaders:ContextDataType'] :: ContextDataType -> [HttpHeader]

-- | Create a value of <a>ContextDataType</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:encodedData:ContextDataType'</a>,
--   <a>contextDataType_encodedData</a> - Encoded data containing device
--   fingerprinting details, collected using the Amazon Cognito context
--   data collection library.
--   
--   <a>$sel:ipAddress:ContextDataType'</a>,
--   <a>contextDataType_ipAddress</a> - Source IP address of your user.
--   
--   <a>$sel:serverName:ContextDataType'</a>,
--   <a>contextDataType_serverName</a> - Your server endpoint where this
--   API is invoked.
--   
--   <a>$sel:serverPath:ContextDataType'</a>,
--   <a>contextDataType_serverPath</a> - Your server path where this API is
--   invoked.
--   
--   <a>$sel:httpHeaders:ContextDataType'</a>,
--   <a>contextDataType_httpHeaders</a> - HttpHeaders received on your
--   server in same order.
newContextDataType :: Text -> Text -> Text -> ContextDataType

-- | Encoded data containing device fingerprinting details, collected using
--   the Amazon Cognito context data collection library.
contextDataType_encodedData :: Lens' ContextDataType (Maybe Text)

-- | Source IP address of your user.
contextDataType_ipAddress :: Lens' ContextDataType Text

-- | Your server endpoint where this API is invoked.
contextDataType_serverName :: Lens' ContextDataType Text

-- | Your server path where this API is invoked.
contextDataType_serverPath :: Lens' ContextDataType Text

-- | HttpHeaders received on your server in same order.
contextDataType_httpHeaders :: Lens' ContextDataType [HttpHeader]
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.Types.ContextDataType.ContextDataType
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.Types.ContextDataType.ContextDataType
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.Types.ContextDataType.ContextDataType
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.Types.ContextDataType.ContextDataType
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.Types.ContextDataType.ContextDataType
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.Types.ContextDataType.ContextDataType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.Types.ContextDataType.ContextDataType


module Network.AWS.CognitoIdentityProvider.Types.IdentityProviderTypeType
newtype IdentityProviderTypeType
IdentityProviderTypeType' :: Text -> IdentityProviderTypeType
[fromIdentityProviderTypeType] :: IdentityProviderTypeType -> Text
pattern IdentityProviderTypeType_Facebook :: IdentityProviderTypeType
pattern IdentityProviderTypeType_Google :: IdentityProviderTypeType
pattern IdentityProviderTypeType_LoginWithAmazon :: IdentityProviderTypeType
pattern IdentityProviderTypeType_OIDC :: IdentityProviderTypeType
pattern IdentityProviderTypeType_SAML :: IdentityProviderTypeType
pattern IdentityProviderTypeType_SignInWithApple :: IdentityProviderTypeType
instance Network.AWS.Data.XML.ToXML Network.AWS.CognitoIdentityProvider.Types.IdentityProviderTypeType.IdentityProviderTypeType
instance Network.AWS.Data.XML.FromXML Network.AWS.CognitoIdentityProvider.Types.IdentityProviderTypeType.IdentityProviderTypeType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.CognitoIdentityProvider.Types.IdentityProviderTypeType.IdentityProviderTypeType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.Types.IdentityProviderTypeType.IdentityProviderTypeType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.CognitoIdentityProvider.Types.IdentityProviderTypeType.IdentityProviderTypeType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CognitoIdentityProvider.Types.IdentityProviderTypeType.IdentityProviderTypeType
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentityProvider.Types.IdentityProviderTypeType.IdentityProviderTypeType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.CognitoIdentityProvider.Types.IdentityProviderTypeType.IdentityProviderTypeType
instance Network.AWS.Data.Log.ToLog Network.AWS.CognitoIdentityProvider.Types.IdentityProviderTypeType.IdentityProviderTypeType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.CognitoIdentityProvider.Types.IdentityProviderTypeType.IdentityProviderTypeType
instance Network.AWS.Data.Text.ToText Network.AWS.CognitoIdentityProvider.Types.IdentityProviderTypeType.IdentityProviderTypeType
instance Network.AWS.Data.Text.FromText Network.AWS.CognitoIdentityProvider.Types.IdentityProviderTypeType.IdentityProviderTypeType
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.Types.IdentityProviderTypeType.IdentityProviderTypeType
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.Types.IdentityProviderTypeType.IdentityProviderTypeType
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.Types.IdentityProviderTypeType.IdentityProviderTypeType
instance GHC.Classes.Ord Network.AWS.CognitoIdentityProvider.Types.IdentityProviderTypeType.IdentityProviderTypeType
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.Types.IdentityProviderTypeType.IdentityProviderTypeType
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.Types.IdentityProviderTypeType.IdentityProviderTypeType
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.Types.IdentityProviderTypeType.IdentityProviderTypeType


module Network.AWS.CognitoIdentityProvider.Types.IdentityProviderType

-- | A container for information about an identity provider.
--   
--   <i>See:</i> <a>newIdentityProviderType</a> smart constructor.
data IdentityProviderType
IdentityProviderType' :: Maybe POSIX -> Maybe Text -> Maybe IdentityProviderTypeType -> Maybe POSIX -> Maybe [Text] -> Maybe (HashMap Text Text) -> Maybe (HashMap Text Text) -> Maybe Text -> IdentityProviderType

-- | The date the identity provider was last modified.
[$sel:lastModifiedDate:IdentityProviderType'] :: IdentityProviderType -> Maybe POSIX

-- | The user pool ID.
[$sel:userPoolId:IdentityProviderType'] :: IdentityProviderType -> Maybe Text

-- | The identity provider type.
[$sel:providerType:IdentityProviderType'] :: IdentityProviderType -> Maybe IdentityProviderTypeType

-- | The date the identity provider was created.
[$sel:creationDate:IdentityProviderType'] :: IdentityProviderType -> Maybe POSIX

-- | A list of identity provider identifiers.
[$sel:idpIdentifiers:IdentityProviderType'] :: IdentityProviderType -> Maybe [Text]

-- | A mapping of identity provider attributes to standard and custom user
--   pool attributes.
[$sel:attributeMapping:IdentityProviderType'] :: IdentityProviderType -> Maybe (HashMap Text Text)

-- | The identity provider details. The following list describes the
--   provider detail keys for each identity provider type.
--   
--   <ul>
--   <li>For Google and Login with
--   Amazon:<ul><li>client_id</li><li>client_secret</li><li>authorize_scopes</li></ul></li>
--   <li>For
--   Facebook:<ul><li>client_id</li><li>client_secret</li><li>authorize_scopes</li><li>api_version</li></ul></li>
--   <li>For Sign in with
--   Apple:<ul><li>client_id</li><li>team_id</li><li>key_id</li><li>private_key</li><li>authorize_scopes</li></ul></li>
--   <li>For OIDC
--   providers:<ul><li>client_id</li><li>client_secret</li><li>attributes_request_method</li><li>oidc_issuer</li><li>authorize_scopes</li><li>authorize_url
--   /if not available from discovery URL specified by oidc_issuer
--   key/</li><li>token_url /if not available from discovery URL specified
--   by oidc_issuer key/</li><li>attributes_url /if not available from
--   discovery URL specified by oidc_issuer key/</li><li>jwks_uri /if not
--   available from discovery URL specified by oidc_issuer
--   key/</li></ul></li>
--   <li>For SAML providers:<ul><li>MetadataFile OR
--   MetadataURL</li><li>IDPSignOut <i>optional</i></li></ul></li>
--   </ul>
[$sel:providerDetails:IdentityProviderType'] :: IdentityProviderType -> Maybe (HashMap Text Text)

-- | The identity provider name.
[$sel:providerName:IdentityProviderType'] :: IdentityProviderType -> Maybe Text

-- | Create a value of <a>IdentityProviderType</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lastModifiedDate:IdentityProviderType'</a>,
--   <a>identityProviderType_lastModifiedDate</a> - The date the identity
--   provider was last modified.
--   
--   <a>$sel:userPoolId:IdentityProviderType'</a>,
--   <a>identityProviderType_userPoolId</a> - The user pool ID.
--   
--   <a>$sel:providerType:IdentityProviderType'</a>,
--   <a>identityProviderType_providerType</a> - The identity provider type.
--   
--   <a>$sel:creationDate:IdentityProviderType'</a>,
--   <a>identityProviderType_creationDate</a> - The date the identity
--   provider was created.
--   
--   <a>$sel:idpIdentifiers:IdentityProviderType'</a>,
--   <a>identityProviderType_idpIdentifiers</a> - A list of identity
--   provider identifiers.
--   
--   <a>$sel:attributeMapping:IdentityProviderType'</a>,
--   <a>identityProviderType_attributeMapping</a> - A mapping of identity
--   provider attributes to standard and custom user pool attributes.
--   
--   <a>$sel:providerDetails:IdentityProviderType'</a>,
--   <a>identityProviderType_providerDetails</a> - The identity provider
--   details. The following list describes the provider detail keys for
--   each identity provider type.
--   
--   <ul>
--   <li>For Google and Login with
--   Amazon:<ul><li>client_id</li><li>client_secret</li><li>authorize_scopes</li></ul></li>
--   <li>For
--   Facebook:<ul><li>client_id</li><li>client_secret</li><li>authorize_scopes</li><li>api_version</li></ul></li>
--   <li>For Sign in with
--   Apple:<ul><li>client_id</li><li>team_id</li><li>key_id</li><li>private_key</li><li>authorize_scopes</li></ul></li>
--   <li>For OIDC
--   providers:<ul><li>client_id</li><li>client_secret</li><li>attributes_request_method</li><li>oidc_issuer</li><li>authorize_scopes</li><li>authorize_url
--   /if not available from discovery URL specified by oidc_issuer
--   key/</li><li>token_url /if not available from discovery URL specified
--   by oidc_issuer key/</li><li>attributes_url /if not available from
--   discovery URL specified by oidc_issuer key/</li><li>jwks_uri /if not
--   available from discovery URL specified by oidc_issuer
--   key/</li></ul></li>
--   <li>For SAML providers:<ul><li>MetadataFile OR
--   MetadataURL</li><li>IDPSignOut <i>optional</i></li></ul></li>
--   </ul>
--   
--   <a>$sel:providerName:IdentityProviderType'</a>,
--   <a>identityProviderType_providerName</a> - The identity provider name.
newIdentityProviderType :: IdentityProviderType

-- | The date the identity provider was last modified.
identityProviderType_lastModifiedDate :: Lens' IdentityProviderType (Maybe UTCTime)

-- | The user pool ID.
identityProviderType_userPoolId :: Lens' IdentityProviderType (Maybe Text)

-- | The identity provider type.
identityProviderType_providerType :: Lens' IdentityProviderType (Maybe IdentityProviderTypeType)

-- | The date the identity provider was created.
identityProviderType_creationDate :: Lens' IdentityProviderType (Maybe UTCTime)

-- | A list of identity provider identifiers.
identityProviderType_idpIdentifiers :: Lens' IdentityProviderType (Maybe [Text])

-- | A mapping of identity provider attributes to standard and custom user
--   pool attributes.
identityProviderType_attributeMapping :: Lens' IdentityProviderType (Maybe (HashMap Text Text))

-- | The identity provider details. The following list describes the
--   provider detail keys for each identity provider type.
--   
--   <ul>
--   <li>For Google and Login with
--   Amazon:<ul><li>client_id</li><li>client_secret</li><li>authorize_scopes</li></ul></li>
--   <li>For
--   Facebook:<ul><li>client_id</li><li>client_secret</li><li>authorize_scopes</li><li>api_version</li></ul></li>
--   <li>For Sign in with
--   Apple:<ul><li>client_id</li><li>team_id</li><li>key_id</li><li>private_key</li><li>authorize_scopes</li></ul></li>
--   <li>For OIDC
--   providers:<ul><li>client_id</li><li>client_secret</li><li>attributes_request_method</li><li>oidc_issuer</li><li>authorize_scopes</li><li>authorize_url
--   /if not available from discovery URL specified by oidc_issuer
--   key/</li><li>token_url /if not available from discovery URL specified
--   by oidc_issuer key/</li><li>attributes_url /if not available from
--   discovery URL specified by oidc_issuer key/</li><li>jwks_uri /if not
--   available from discovery URL specified by oidc_issuer
--   key/</li></ul></li>
--   <li>For SAML providers:<ul><li>MetadataFile OR
--   MetadataURL</li><li>IDPSignOut <i>optional</i></li></ul></li>
--   </ul>
identityProviderType_providerDetails :: Lens' IdentityProviderType (Maybe (HashMap Text Text))

-- | The identity provider name.
identityProviderType_providerName :: Lens' IdentityProviderType (Maybe Text)
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.Types.IdentityProviderType.IdentityProviderType
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.Types.IdentityProviderType.IdentityProviderType
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.Types.IdentityProviderType.IdentityProviderType
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.Types.IdentityProviderType.IdentityProviderType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CognitoIdentityProvider.Types.IdentityProviderType.IdentityProviderType
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.Types.IdentityProviderType.IdentityProviderType
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.Types.IdentityProviderType.IdentityProviderType


module Network.AWS.CognitoIdentityProvider.Types.LambdaConfigType

-- | Specifies the configuration for Lambda triggers.
--   
--   <i>See:</i> <a>newLambdaConfigType</a> smart constructor.
data LambdaConfigType
LambdaConfigType' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe CustomSMSLambdaVersionConfigType -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe CustomEmailLambdaVersionConfigType -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> LambdaConfigType

-- | A pre-authentication Lambda trigger.
[$sel:preAuthentication:LambdaConfigType'] :: LambdaConfigType -> Maybe Text

-- | Creates an authentication challenge.
[$sel:createAuthChallenge:LambdaConfigType'] :: LambdaConfigType -> Maybe Text

-- | Verifies the authentication challenge response.
[$sel:verifyAuthChallengeResponse:LambdaConfigType'] :: LambdaConfigType -> Maybe Text

-- | A custom SMS sender Lambda trigger.
[$sel:customSMSSender:LambdaConfigType'] :: LambdaConfigType -> Maybe CustomSMSLambdaVersionConfigType

-- | A post-authentication Lambda trigger.
[$sel:postAuthentication:LambdaConfigType'] :: LambdaConfigType -> Maybe Text

-- | A custom Message Lambda trigger.
[$sel:customMessage:LambdaConfigType'] :: LambdaConfigType -> Maybe Text

-- | Defines the authentication challenge.
[$sel:defineAuthChallenge:LambdaConfigType'] :: LambdaConfigType -> Maybe Text

-- | A custom email sender Lambda trigger.
[$sel:customEmailSender:LambdaConfigType'] :: LambdaConfigType -> Maybe CustomEmailLambdaVersionConfigType

-- | The Amazon Resource Name of Key Management Service <a>Customer master
--   keys</a> . Amazon Cognito uses the key to encrypt codes and temporary
--   passwords sent to <tt>CustomEmailSender</tt> and
--   <tt>CustomSMSSender</tt>.
[$sel:kmsKeyID:LambdaConfigType'] :: LambdaConfigType -> Maybe Text

-- | A post-confirmation Lambda trigger.
[$sel:postConfirmation:LambdaConfigType'] :: LambdaConfigType -> Maybe Text

-- | A Lambda trigger that is invoked before token generation.
[$sel:preTokenGeneration:LambdaConfigType'] :: LambdaConfigType -> Maybe Text

-- | The user migration Lambda config type.
[$sel:userMigration:LambdaConfigType'] :: LambdaConfigType -> Maybe Text

-- | A pre-registration Lambda trigger.
[$sel:preSignUp:LambdaConfigType'] :: LambdaConfigType -> Maybe Text

-- | Create a value of <a>LambdaConfigType</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:preAuthentication:LambdaConfigType'</a>,
--   <a>lambdaConfigType_preAuthentication</a> - A pre-authentication
--   Lambda trigger.
--   
--   <a>$sel:createAuthChallenge:LambdaConfigType'</a>,
--   <a>lambdaConfigType_createAuthChallenge</a> - Creates an
--   authentication challenge.
--   
--   <a>$sel:verifyAuthChallengeResponse:LambdaConfigType'</a>,
--   <a>lambdaConfigType_verifyAuthChallengeResponse</a> - Verifies the
--   authentication challenge response.
--   
--   <a>$sel:customSMSSender:LambdaConfigType'</a>,
--   <a>lambdaConfigType_customSMSSender</a> - A custom SMS sender Lambda
--   trigger.
--   
--   <a>$sel:postAuthentication:LambdaConfigType'</a>,
--   <a>lambdaConfigType_postAuthentication</a> - A post-authentication
--   Lambda trigger.
--   
--   <a>$sel:customMessage:LambdaConfigType'</a>,
--   <a>lambdaConfigType_customMessage</a> - A custom Message Lambda
--   trigger.
--   
--   <a>$sel:defineAuthChallenge:LambdaConfigType'</a>,
--   <a>lambdaConfigType_defineAuthChallenge</a> - Defines the
--   authentication challenge.
--   
--   <a>$sel:customEmailSender:LambdaConfigType'</a>,
--   <a>lambdaConfigType_customEmailSender</a> - A custom email sender
--   Lambda trigger.
--   
--   <a>$sel:kmsKeyID:LambdaConfigType'</a>,
--   <a>lambdaConfigType_kmsKeyID</a> - The Amazon Resource Name of Key
--   Management Service <a>Customer master keys</a> . Amazon Cognito uses
--   the key to encrypt codes and temporary passwords sent to
--   <tt>CustomEmailSender</tt> and <tt>CustomSMSSender</tt>.
--   
--   <a>$sel:postConfirmation:LambdaConfigType'</a>,
--   <a>lambdaConfigType_postConfirmation</a> - A post-confirmation Lambda
--   trigger.
--   
--   <a>$sel:preTokenGeneration:LambdaConfigType'</a>,
--   <a>lambdaConfigType_preTokenGeneration</a> - A Lambda trigger that is
--   invoked before token generation.
--   
--   <a>$sel:userMigration:LambdaConfigType'</a>,
--   <a>lambdaConfigType_userMigration</a> - The user migration Lambda
--   config type.
--   
--   <a>$sel:preSignUp:LambdaConfigType'</a>,
--   <a>lambdaConfigType_preSignUp</a> - A pre-registration Lambda trigger.
newLambdaConfigType :: LambdaConfigType

-- | A pre-authentication Lambda trigger.
lambdaConfigType_preAuthentication :: Lens' LambdaConfigType (Maybe Text)

-- | Creates an authentication challenge.
lambdaConfigType_createAuthChallenge :: Lens' LambdaConfigType (Maybe Text)

-- | Verifies the authentication challenge response.
lambdaConfigType_verifyAuthChallengeResponse :: Lens' LambdaConfigType (Maybe Text)

-- | A custom SMS sender Lambda trigger.
lambdaConfigType_customSMSSender :: Lens' LambdaConfigType (Maybe CustomSMSLambdaVersionConfigType)

-- | A post-authentication Lambda trigger.
lambdaConfigType_postAuthentication :: Lens' LambdaConfigType (Maybe Text)

-- | A custom Message Lambda trigger.
lambdaConfigType_customMessage :: Lens' LambdaConfigType (Maybe Text)

-- | Defines the authentication challenge.
lambdaConfigType_defineAuthChallenge :: Lens' LambdaConfigType (Maybe Text)

-- | A custom email sender Lambda trigger.
lambdaConfigType_customEmailSender :: Lens' LambdaConfigType (Maybe CustomEmailLambdaVersionConfigType)

-- | The Amazon Resource Name of Key Management Service <a>Customer master
--   keys</a> . Amazon Cognito uses the key to encrypt codes and temporary
--   passwords sent to <tt>CustomEmailSender</tt> and
--   <tt>CustomSMSSender</tt>.
lambdaConfigType_kmsKeyID :: Lens' LambdaConfigType (Maybe Text)

-- | A post-confirmation Lambda trigger.
lambdaConfigType_postConfirmation :: Lens' LambdaConfigType (Maybe Text)

-- | A Lambda trigger that is invoked before token generation.
lambdaConfigType_preTokenGeneration :: Lens' LambdaConfigType (Maybe Text)

-- | The user migration Lambda config type.
lambdaConfigType_userMigration :: Lens' LambdaConfigType (Maybe Text)

-- | A pre-registration Lambda trigger.
lambdaConfigType_preSignUp :: Lens' LambdaConfigType (Maybe Text)
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.Types.LambdaConfigType.LambdaConfigType
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.Types.LambdaConfigType.LambdaConfigType
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.Types.LambdaConfigType.LambdaConfigType
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.Types.LambdaConfigType.LambdaConfigType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CognitoIdentityProvider.Types.LambdaConfigType.LambdaConfigType
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.Types.LambdaConfigType.LambdaConfigType
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.Types.LambdaConfigType.LambdaConfigType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.Types.LambdaConfigType.LambdaConfigType


module Network.AWS.CognitoIdentityProvider.Types.MFAOptionType

-- | <i>This data type is no longer supported.</i> You can use it only for
--   SMS MFA configurations. You can't use it for TOTP software token MFA
--   configurations.
--   
--   <i>See:</i> <a>newMFAOptionType</a> smart constructor.
data MFAOptionType
MFAOptionType' :: Maybe DeliveryMediumType -> Maybe Text -> MFAOptionType

-- | The delivery medium to send the MFA code. You can use this parameter
--   to set only the <tt>SMS</tt> delivery medium value.
[$sel:deliveryMedium:MFAOptionType'] :: MFAOptionType -> Maybe DeliveryMediumType

-- | The attribute name of the MFA option type. The only valid value is
--   <tt>phone_number</tt>.
[$sel:attributeName:MFAOptionType'] :: MFAOptionType -> Maybe Text

-- | Create a value of <a>MFAOptionType</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deliveryMedium:MFAOptionType'</a>,
--   <a>mfaOptionType_deliveryMedium</a> - The delivery medium to send the
--   MFA code. You can use this parameter to set only the <tt>SMS</tt>
--   delivery medium value.
--   
--   <a>$sel:attributeName:MFAOptionType'</a>,
--   <a>mfaOptionType_attributeName</a> - The attribute name of the MFA
--   option type. The only valid value is <tt>phone_number</tt>.
newMFAOptionType :: MFAOptionType

-- | The delivery medium to send the MFA code. You can use this parameter
--   to set only the <tt>SMS</tt> delivery medium value.
mfaOptionType_deliveryMedium :: Lens' MFAOptionType (Maybe DeliveryMediumType)

-- | The attribute name of the MFA option type. The only valid value is
--   <tt>phone_number</tt>.
mfaOptionType_attributeName :: Lens' MFAOptionType (Maybe Text)
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.Types.MFAOptionType.MFAOptionType
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.Types.MFAOptionType.MFAOptionType
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.Types.MFAOptionType.MFAOptionType
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.Types.MFAOptionType.MFAOptionType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CognitoIdentityProvider.Types.MFAOptionType.MFAOptionType
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.Types.MFAOptionType.MFAOptionType
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.Types.MFAOptionType.MFAOptionType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.Types.MFAOptionType.MFAOptionType


module Network.AWS.CognitoIdentityProvider.Types.MessageActionType
newtype MessageActionType
MessageActionType' :: Text -> MessageActionType
[fromMessageActionType] :: MessageActionType -> Text
pattern MessageActionType_RESEND :: MessageActionType
pattern MessageActionType_SUPPRESS :: MessageActionType
instance Network.AWS.Data.XML.ToXML Network.AWS.CognitoIdentityProvider.Types.MessageActionType.MessageActionType
instance Network.AWS.Data.XML.FromXML Network.AWS.CognitoIdentityProvider.Types.MessageActionType.MessageActionType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.CognitoIdentityProvider.Types.MessageActionType.MessageActionType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.Types.MessageActionType.MessageActionType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.CognitoIdentityProvider.Types.MessageActionType.MessageActionType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CognitoIdentityProvider.Types.MessageActionType.MessageActionType
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentityProvider.Types.MessageActionType.MessageActionType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.CognitoIdentityProvider.Types.MessageActionType.MessageActionType
instance Network.AWS.Data.Log.ToLog Network.AWS.CognitoIdentityProvider.Types.MessageActionType.MessageActionType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.CognitoIdentityProvider.Types.MessageActionType.MessageActionType
instance Network.AWS.Data.Text.ToText Network.AWS.CognitoIdentityProvider.Types.MessageActionType.MessageActionType
instance Network.AWS.Data.Text.FromText Network.AWS.CognitoIdentityProvider.Types.MessageActionType.MessageActionType
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.Types.MessageActionType.MessageActionType
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.Types.MessageActionType.MessageActionType
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.Types.MessageActionType.MessageActionType
instance GHC.Classes.Ord Network.AWS.CognitoIdentityProvider.Types.MessageActionType.MessageActionType
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.Types.MessageActionType.MessageActionType
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.Types.MessageActionType.MessageActionType
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.Types.MessageActionType.MessageActionType


module Network.AWS.CognitoIdentityProvider.Types.MessageTemplateType

-- | The message template structure.
--   
--   <i>See:</i> <a>newMessageTemplateType</a> smart constructor.
data MessageTemplateType
MessageTemplateType' :: Maybe Text -> Maybe Text -> Maybe Text -> MessageTemplateType

-- | The subject line for email messages. EmailSubject is allowed only if
--   <a>EmailSendingAccount</a> is DEVELOPER.
[$sel:emailSubject:MessageTemplateType'] :: MessageTemplateType -> Maybe Text

-- | The message template for SMS messages.
[$sel:sMSMessage:MessageTemplateType'] :: MessageTemplateType -> Maybe Text

-- | The message template for email messages. EmailMessage is allowed only
--   if <a>EmailSendingAccount</a> is DEVELOPER.
[$sel:emailMessage:MessageTemplateType'] :: MessageTemplateType -> Maybe Text

-- | Create a value of <a>MessageTemplateType</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:emailSubject:MessageTemplateType'</a>,
--   <a>messageTemplateType_emailSubject</a> - The subject line for email
--   messages. EmailSubject is allowed only if <a>EmailSendingAccount</a>
--   is DEVELOPER.
--   
--   <a>$sel:sMSMessage:MessageTemplateType'</a>,
--   <a>messageTemplateType_sMSMessage</a> - The message template for SMS
--   messages.
--   
--   <a>$sel:emailMessage:MessageTemplateType'</a>,
--   <a>messageTemplateType_emailMessage</a> - The message template for
--   email messages. EmailMessage is allowed only if
--   <a>EmailSendingAccount</a> is DEVELOPER.
newMessageTemplateType :: MessageTemplateType

-- | The subject line for email messages. EmailSubject is allowed only if
--   <a>EmailSendingAccount</a> is DEVELOPER.
messageTemplateType_emailSubject :: Lens' MessageTemplateType (Maybe Text)

-- | The message template for SMS messages.
messageTemplateType_sMSMessage :: Lens' MessageTemplateType (Maybe Text)

-- | The message template for email messages. EmailMessage is allowed only
--   if <a>EmailSendingAccount</a> is DEVELOPER.
messageTemplateType_emailMessage :: Lens' MessageTemplateType (Maybe Text)
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.Types.MessageTemplateType.MessageTemplateType
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.Types.MessageTemplateType.MessageTemplateType
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.Types.MessageTemplateType.MessageTemplateType
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.Types.MessageTemplateType.MessageTemplateType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CognitoIdentityProvider.Types.MessageTemplateType.MessageTemplateType
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.Types.MessageTemplateType.MessageTemplateType
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.Types.MessageTemplateType.MessageTemplateType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.Types.MessageTemplateType.MessageTemplateType


module Network.AWS.CognitoIdentityProvider.Types.AdminCreateUserConfigType

-- | The configuration for creating a new user profile.
--   
--   <i>See:</i> <a>newAdminCreateUserConfigType</a> smart constructor.
data AdminCreateUserConfigType
AdminCreateUserConfigType' :: Maybe Bool -> Maybe Natural -> Maybe MessageTemplateType -> AdminCreateUserConfigType

-- | Set to <tt>True</tt> if only the administrator is allowed to create
--   user profiles. Set to <tt>False</tt> if users can sign themselves up
--   via an app.
[$sel:allowAdminCreateUserOnly:AdminCreateUserConfigType'] :: AdminCreateUserConfigType -> Maybe Bool

-- | The user account expiration limit, in days, after which the account is
--   no longer usable. To reset the account after that time limit, you must
--   call <tt>AdminCreateUser</tt> again, specifying <tt>"RESEND"</tt> for
--   the <tt>MessageAction</tt> parameter. The default value for this
--   parameter is 7.
--   
--   If you set a value for <tt>TemporaryPasswordValidityDays</tt> in
--   <tt>PasswordPolicy</tt>, that value will be used and
--   <tt>UnusedAccountValidityDays</tt> will be deprecated for that user
--   pool.
[$sel:unusedAccountValidityDays:AdminCreateUserConfigType'] :: AdminCreateUserConfigType -> Maybe Natural

-- | The message template to be used for the welcome message to new users.
--   
--   See also <a>Customizing User Invitation Messages</a>.
[$sel:inviteMessageTemplate:AdminCreateUserConfigType'] :: AdminCreateUserConfigType -> Maybe MessageTemplateType

-- | Create a value of <a>AdminCreateUserConfigType</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:allowAdminCreateUserOnly:AdminCreateUserConfigType'</a>,
--   <a>adminCreateUserConfigType_allowAdminCreateUserOnly</a> - Set to
--   <tt>True</tt> if only the administrator is allowed to create user
--   profiles. Set to <tt>False</tt> if users can sign themselves up via an
--   app.
--   
--   <a>$sel:unusedAccountValidityDays:AdminCreateUserConfigType'</a>,
--   <a>adminCreateUserConfigType_unusedAccountValidityDays</a> - The user
--   account expiration limit, in days, after which the account is no
--   longer usable. To reset the account after that time limit, you must
--   call <tt>AdminCreateUser</tt> again, specifying <tt>"RESEND"</tt> for
--   the <tt>MessageAction</tt> parameter. The default value for this
--   parameter is 7.
--   
--   If you set a value for <tt>TemporaryPasswordValidityDays</tt> in
--   <tt>PasswordPolicy</tt>, that value will be used and
--   <tt>UnusedAccountValidityDays</tt> will be deprecated for that user
--   pool.
--   
--   <a>$sel:inviteMessageTemplate:AdminCreateUserConfigType'</a>,
--   <a>adminCreateUserConfigType_inviteMessageTemplate</a> - The message
--   template to be used for the welcome message to new users.
--   
--   See also <a>Customizing User Invitation Messages</a>.
newAdminCreateUserConfigType :: AdminCreateUserConfigType

-- | Set to <tt>True</tt> if only the administrator is allowed to create
--   user profiles. Set to <tt>False</tt> if users can sign themselves up
--   via an app.
adminCreateUserConfigType_allowAdminCreateUserOnly :: Lens' AdminCreateUserConfigType (Maybe Bool)

-- | The user account expiration limit, in days, after which the account is
--   no longer usable. To reset the account after that time limit, you must
--   call <tt>AdminCreateUser</tt> again, specifying <tt>"RESEND"</tt> for
--   the <tt>MessageAction</tt> parameter. The default value for this
--   parameter is 7.
--   
--   If you set a value for <tt>TemporaryPasswordValidityDays</tt> in
--   <tt>PasswordPolicy</tt>, that value will be used and
--   <tt>UnusedAccountValidityDays</tt> will be deprecated for that user
--   pool.
adminCreateUserConfigType_unusedAccountValidityDays :: Lens' AdminCreateUserConfigType (Maybe Natural)

-- | The message template to be used for the welcome message to new users.
--   
--   See also <a>Customizing User Invitation Messages</a>.
adminCreateUserConfigType_inviteMessageTemplate :: Lens' AdminCreateUserConfigType (Maybe MessageTemplateType)
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.Types.AdminCreateUserConfigType.AdminCreateUserConfigType
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.Types.AdminCreateUserConfigType.AdminCreateUserConfigType
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.Types.AdminCreateUserConfigType.AdminCreateUserConfigType
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.Types.AdminCreateUserConfigType.AdminCreateUserConfigType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CognitoIdentityProvider.Types.AdminCreateUserConfigType.AdminCreateUserConfigType
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.Types.AdminCreateUserConfigType.AdminCreateUserConfigType
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.Types.AdminCreateUserConfigType.AdminCreateUserConfigType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.Types.AdminCreateUserConfigType.AdminCreateUserConfigType


module Network.AWS.CognitoIdentityProvider.Types.NewDeviceMetadataType

-- | The new device metadata type.
--   
--   <i>See:</i> <a>newNewDeviceMetadataType</a> smart constructor.
data NewDeviceMetadataType
NewDeviceMetadataType' :: Maybe Text -> Maybe Text -> NewDeviceMetadataType

-- | The device group key.
[$sel:deviceGroupKey:NewDeviceMetadataType'] :: NewDeviceMetadataType -> Maybe Text

-- | The device key.
[$sel:deviceKey:NewDeviceMetadataType'] :: NewDeviceMetadataType -> Maybe Text

-- | Create a value of <a>NewDeviceMetadataType</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deviceGroupKey:NewDeviceMetadataType'</a>,
--   <a>newDeviceMetadataType_deviceGroupKey</a> - The device group key.
--   
--   <a>$sel:deviceKey:NewDeviceMetadataType'</a>,
--   <a>newDeviceMetadataType_deviceKey</a> - The device key.
newNewDeviceMetadataType :: NewDeviceMetadataType

-- | The device group key.
newDeviceMetadataType_deviceGroupKey :: Lens' NewDeviceMetadataType (Maybe Text)

-- | The device key.
newDeviceMetadataType_deviceKey :: Lens' NewDeviceMetadataType (Maybe Text)
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.Types.NewDeviceMetadataType.NewDeviceMetadataType
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.Types.NewDeviceMetadataType.NewDeviceMetadataType
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.Types.NewDeviceMetadataType.NewDeviceMetadataType
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.Types.NewDeviceMetadataType.NewDeviceMetadataType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CognitoIdentityProvider.Types.NewDeviceMetadataType.NewDeviceMetadataType
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.Types.NewDeviceMetadataType.NewDeviceMetadataType
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.Types.NewDeviceMetadataType.NewDeviceMetadataType


module Network.AWS.CognitoIdentityProvider.Types.AuthenticationResultType

-- | The authentication result.
--   
--   <i>See:</i> <a>newAuthenticationResultType</a> smart constructor.
data AuthenticationResultType
AuthenticationResultType' :: Maybe (Sensitive Text) -> Maybe (Sensitive Text) -> Maybe NewDeviceMetadataType -> Maybe Int -> Maybe Text -> Maybe (Sensitive Text) -> AuthenticationResultType

-- | The access token.
[$sel:accessToken:AuthenticationResultType'] :: AuthenticationResultType -> Maybe (Sensitive Text)

-- | The refresh token.
[$sel:refreshToken:AuthenticationResultType'] :: AuthenticationResultType -> Maybe (Sensitive Text)

-- | The new device metadata from an authentication result.
[$sel:newDeviceMetadata':AuthenticationResultType'] :: AuthenticationResultType -> Maybe NewDeviceMetadataType

-- | The expiration period of the authentication result in seconds.
[$sel:expiresIn:AuthenticationResultType'] :: AuthenticationResultType -> Maybe Int

-- | The token type.
[$sel:tokenType:AuthenticationResultType'] :: AuthenticationResultType -> Maybe Text

-- | The ID token.
[$sel:idToken:AuthenticationResultType'] :: AuthenticationResultType -> Maybe (Sensitive Text)

-- | Create a value of <a>AuthenticationResultType</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:accessToken:AuthenticationResultType'</a>,
--   <a>authenticationResultType_accessToken</a> - The access token.
--   
--   <a>$sel:refreshToken:AuthenticationResultType'</a>,
--   <a>authenticationResultType_refreshToken</a> - The refresh token.
--   
--   <a>$sel:newDeviceMetadata':AuthenticationResultType'</a>,
--   <a>authenticationResultType_newDeviceMetadata</a> - The new device
--   metadata from an authentication result.
--   
--   <a>$sel:expiresIn:AuthenticationResultType'</a>,
--   <a>authenticationResultType_expiresIn</a> - The expiration period of
--   the authentication result in seconds.
--   
--   <a>$sel:tokenType:AuthenticationResultType'</a>,
--   <a>authenticationResultType_tokenType</a> - The token type.
--   
--   <a>$sel:idToken:AuthenticationResultType'</a>,
--   <a>authenticationResultType_idToken</a> - The ID token.
newAuthenticationResultType :: AuthenticationResultType

-- | The access token.
authenticationResultType_accessToken :: Lens' AuthenticationResultType (Maybe Text)

-- | The refresh token.
authenticationResultType_refreshToken :: Lens' AuthenticationResultType (Maybe Text)

-- | The new device metadata from an authentication result.
authenticationResultType_newDeviceMetadata :: Lens' AuthenticationResultType (Maybe NewDeviceMetadataType)

-- | The expiration period of the authentication result in seconds.
authenticationResultType_expiresIn :: Lens' AuthenticationResultType (Maybe Int)

-- | The token type.
authenticationResultType_tokenType :: Lens' AuthenticationResultType (Maybe Text)

-- | The ID token.
authenticationResultType_idToken :: Lens' AuthenticationResultType (Maybe Text)
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.Types.AuthenticationResultType.AuthenticationResultType
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.Types.AuthenticationResultType.AuthenticationResultType
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.Types.AuthenticationResultType.AuthenticationResultType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CognitoIdentityProvider.Types.AuthenticationResultType.AuthenticationResultType
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.Types.AuthenticationResultType.AuthenticationResultType
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.Types.AuthenticationResultType.AuthenticationResultType


module Network.AWS.CognitoIdentityProvider.Types.NotifyEmailType

-- | The notify email type.
--   
--   <i>See:</i> <a>newNotifyEmailType</a> smart constructor.
data NotifyEmailType
NotifyEmailType' :: Maybe Text -> Maybe Text -> Text -> NotifyEmailType

-- | The text body.
[$sel:textBody:NotifyEmailType'] :: NotifyEmailType -> Maybe Text

-- | The HTML body.
[$sel:htmlBody:NotifyEmailType'] :: NotifyEmailType -> Maybe Text

-- | The subject.
[$sel:subject:NotifyEmailType'] :: NotifyEmailType -> Text

-- | Create a value of <a>NotifyEmailType</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:textBody:NotifyEmailType'</a>, <a>notifyEmailType_textBody</a>
--   - The text body.
--   
--   <a>$sel:htmlBody:NotifyEmailType'</a>, <a>notifyEmailType_htmlBody</a>
--   - The HTML body.
--   
--   <a>$sel:subject:NotifyEmailType'</a>, <a>notifyEmailType_subject</a> -
--   The subject.
newNotifyEmailType :: Text -> NotifyEmailType

-- | The text body.
notifyEmailType_textBody :: Lens' NotifyEmailType (Maybe Text)

-- | The HTML body.
notifyEmailType_htmlBody :: Lens' NotifyEmailType (Maybe Text)

-- | The subject.
notifyEmailType_subject :: Lens' NotifyEmailType Text
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.Types.NotifyEmailType.NotifyEmailType
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.Types.NotifyEmailType.NotifyEmailType
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.Types.NotifyEmailType.NotifyEmailType
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.Types.NotifyEmailType.NotifyEmailType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CognitoIdentityProvider.Types.NotifyEmailType.NotifyEmailType
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.Types.NotifyEmailType.NotifyEmailType
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.Types.NotifyEmailType.NotifyEmailType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.Types.NotifyEmailType.NotifyEmailType


module Network.AWS.CognitoIdentityProvider.Types.NotifyConfigurationType

-- | The notify configuration type.
--   
--   <i>See:</i> <a>newNotifyConfigurationType</a> smart constructor.
data NotifyConfigurationType
NotifyConfigurationType' :: Maybe NotifyEmailType -> Maybe Text -> Maybe Text -> Maybe NotifyEmailType -> Maybe NotifyEmailType -> Text -> NotifyConfigurationType

-- | The email template used when a detected risk event is allowed.
[$sel:noActionEmail:NotifyConfigurationType'] :: NotifyConfigurationType -> Maybe NotifyEmailType

-- | The email address that is sending the email. It must be either
--   individually verified with Amazon SES, or from a domain that has been
--   verified with Amazon SES.
[$sel:from:NotifyConfigurationType'] :: NotifyConfigurationType -> Maybe Text

-- | The destination to which the receiver of an email should reply to.
[$sel:replyTo:NotifyConfigurationType'] :: NotifyConfigurationType -> Maybe Text

-- | Email template used when a detected risk event is blocked.
[$sel:blockEmail:NotifyConfigurationType'] :: NotifyConfigurationType -> Maybe NotifyEmailType

-- | The MFA email template used when MFA is challenged as part of a
--   detected risk.
[$sel:mfaEmail:NotifyConfigurationType'] :: NotifyConfigurationType -> Maybe NotifyEmailType

-- | The Amazon Resource Name (ARN) of the identity that is associated with
--   the sending authorization policy. It permits Amazon Cognito to send
--   for the email address specified in the <tt>From</tt> parameter.
[$sel:sourceArn:NotifyConfigurationType'] :: NotifyConfigurationType -> Text

-- | Create a value of <a>NotifyConfigurationType</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:noActionEmail:NotifyConfigurationType'</a>,
--   <a>notifyConfigurationType_noActionEmail</a> - The email template used
--   when a detected risk event is allowed.
--   
--   <a>$sel:from:NotifyConfigurationType'</a>,
--   <a>notifyConfigurationType_from</a> - The email address that is
--   sending the email. It must be either individually verified with Amazon
--   SES, or from a domain that has been verified with Amazon SES.
--   
--   <a>$sel:replyTo:NotifyConfigurationType'</a>,
--   <a>notifyConfigurationType_replyTo</a> - The destination to which the
--   receiver of an email should reply to.
--   
--   <a>$sel:blockEmail:NotifyConfigurationType'</a>,
--   <a>notifyConfigurationType_blockEmail</a> - Email template used when a
--   detected risk event is blocked.
--   
--   <a>$sel:mfaEmail:NotifyConfigurationType'</a>,
--   <a>notifyConfigurationType_mfaEmail</a> - The MFA email template used
--   when MFA is challenged as part of a detected risk.
--   
--   <a>$sel:sourceArn:NotifyConfigurationType'</a>,
--   <a>notifyConfigurationType_sourceArn</a> - The Amazon Resource Name
--   (ARN) of the identity that is associated with the sending
--   authorization policy. It permits Amazon Cognito to send for the email
--   address specified in the <tt>From</tt> parameter.
newNotifyConfigurationType :: Text -> NotifyConfigurationType

-- | The email template used when a detected risk event is allowed.
notifyConfigurationType_noActionEmail :: Lens' NotifyConfigurationType (Maybe NotifyEmailType)

-- | The email address that is sending the email. It must be either
--   individually verified with Amazon SES, or from a domain that has been
--   verified with Amazon SES.
notifyConfigurationType_from :: Lens' NotifyConfigurationType (Maybe Text)

-- | The destination to which the receiver of an email should reply to.
notifyConfigurationType_replyTo :: Lens' NotifyConfigurationType (Maybe Text)

-- | Email template used when a detected risk event is blocked.
notifyConfigurationType_blockEmail :: Lens' NotifyConfigurationType (Maybe NotifyEmailType)

-- | The MFA email template used when MFA is challenged as part of a
--   detected risk.
notifyConfigurationType_mfaEmail :: Lens' NotifyConfigurationType (Maybe NotifyEmailType)

-- | The Amazon Resource Name (ARN) of the identity that is associated with
--   the sending authorization policy. It permits Amazon Cognito to send
--   for the email address specified in the <tt>From</tt> parameter.
notifyConfigurationType_sourceArn :: Lens' NotifyConfigurationType Text
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.Types.NotifyConfigurationType.NotifyConfigurationType
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.Types.NotifyConfigurationType.NotifyConfigurationType
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.Types.NotifyConfigurationType.NotifyConfigurationType
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.Types.NotifyConfigurationType.NotifyConfigurationType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CognitoIdentityProvider.Types.NotifyConfigurationType.NotifyConfigurationType
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.Types.NotifyConfigurationType.NotifyConfigurationType
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.Types.NotifyConfigurationType.NotifyConfigurationType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.Types.NotifyConfigurationType.NotifyConfigurationType


module Network.AWS.CognitoIdentityProvider.Types.AccountTakeoverRiskConfigurationType

-- | Configuration for mitigation actions and notification for different
--   levels of risk detected for a potential account takeover.
--   
--   <i>See:</i> <a>newAccountTakeoverRiskConfigurationType</a> smart
--   constructor.
data AccountTakeoverRiskConfigurationType
AccountTakeoverRiskConfigurationType' :: Maybe NotifyConfigurationType -> AccountTakeoverActionsType -> AccountTakeoverRiskConfigurationType

-- | The notify configuration used to construct email notifications.
[$sel:notifyConfiguration:AccountTakeoverRiskConfigurationType'] :: AccountTakeoverRiskConfigurationType -> Maybe NotifyConfigurationType

-- | Account takeover risk configuration actions
[$sel:actions:AccountTakeoverRiskConfigurationType'] :: AccountTakeoverRiskConfigurationType -> AccountTakeoverActionsType

-- | Create a value of <a>AccountTakeoverRiskConfigurationType</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:notifyConfiguration:AccountTakeoverRiskConfigurationType'</a>,
--   <a>accountTakeoverRiskConfigurationType_notifyConfiguration</a> - The
--   notify configuration used to construct email notifications.
--   
--   <a>$sel:actions:AccountTakeoverRiskConfigurationType'</a>,
--   <a>accountTakeoverRiskConfigurationType_actions</a> - Account takeover
--   risk configuration actions
newAccountTakeoverRiskConfigurationType :: AccountTakeoverActionsType -> AccountTakeoverRiskConfigurationType

-- | The notify configuration used to construct email notifications.
accountTakeoverRiskConfigurationType_notifyConfiguration :: Lens' AccountTakeoverRiskConfigurationType (Maybe NotifyConfigurationType)

-- | Account takeover risk configuration actions
accountTakeoverRiskConfigurationType_actions :: Lens' AccountTakeoverRiskConfigurationType AccountTakeoverActionsType
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.Types.AccountTakeoverRiskConfigurationType.AccountTakeoverRiskConfigurationType
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.Types.AccountTakeoverRiskConfigurationType.AccountTakeoverRiskConfigurationType
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.Types.AccountTakeoverRiskConfigurationType.AccountTakeoverRiskConfigurationType
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.Types.AccountTakeoverRiskConfigurationType.AccountTakeoverRiskConfigurationType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CognitoIdentityProvider.Types.AccountTakeoverRiskConfigurationType.AccountTakeoverRiskConfigurationType
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.Types.AccountTakeoverRiskConfigurationType.AccountTakeoverRiskConfigurationType
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.Types.AccountTakeoverRiskConfigurationType.AccountTakeoverRiskConfigurationType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.Types.AccountTakeoverRiskConfigurationType.AccountTakeoverRiskConfigurationType


module Network.AWS.CognitoIdentityProvider.Types.NumberAttributeConstraintsType

-- | The minimum and maximum value of an attribute that is of the number
--   data type.
--   
--   <i>See:</i> <a>newNumberAttributeConstraintsType</a> smart
--   constructor.
data NumberAttributeConstraintsType
NumberAttributeConstraintsType' :: Maybe Text -> Maybe Text -> NumberAttributeConstraintsType

-- | The maximum value of an attribute that is of the number data type.
[$sel:maxValue:NumberAttributeConstraintsType'] :: NumberAttributeConstraintsType -> Maybe Text

-- | The minimum value of an attribute that is of the number data type.
[$sel:minValue:NumberAttributeConstraintsType'] :: NumberAttributeConstraintsType -> Maybe Text

-- | Create a value of <a>NumberAttributeConstraintsType</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:maxValue:NumberAttributeConstraintsType'</a>,
--   <a>numberAttributeConstraintsType_maxValue</a> - The maximum value of
--   an attribute that is of the number data type.
--   
--   <a>$sel:minValue:NumberAttributeConstraintsType'</a>,
--   <a>numberAttributeConstraintsType_minValue</a> - The minimum value of
--   an attribute that is of the number data type.
newNumberAttributeConstraintsType :: NumberAttributeConstraintsType

-- | The maximum value of an attribute that is of the number data type.
numberAttributeConstraintsType_maxValue :: Lens' NumberAttributeConstraintsType (Maybe Text)

-- | The minimum value of an attribute that is of the number data type.
numberAttributeConstraintsType_minValue :: Lens' NumberAttributeConstraintsType (Maybe Text)
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.Types.NumberAttributeConstraintsType.NumberAttributeConstraintsType
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.Types.NumberAttributeConstraintsType.NumberAttributeConstraintsType
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.Types.NumberAttributeConstraintsType.NumberAttributeConstraintsType
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.Types.NumberAttributeConstraintsType.NumberAttributeConstraintsType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CognitoIdentityProvider.Types.NumberAttributeConstraintsType.NumberAttributeConstraintsType
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.Types.NumberAttributeConstraintsType.NumberAttributeConstraintsType
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.Types.NumberAttributeConstraintsType.NumberAttributeConstraintsType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.Types.NumberAttributeConstraintsType.NumberAttributeConstraintsType


module Network.AWS.CognitoIdentityProvider.Types.OAuthFlowType
newtype OAuthFlowType
OAuthFlowType' :: Text -> OAuthFlowType
[fromOAuthFlowType] :: OAuthFlowType -> Text
pattern OAuthFlowType_Client_credentials :: OAuthFlowType
pattern OAuthFlowType_Code :: OAuthFlowType
pattern OAuthFlowType_Implicit :: OAuthFlowType
instance Network.AWS.Data.XML.ToXML Network.AWS.CognitoIdentityProvider.Types.OAuthFlowType.OAuthFlowType
instance Network.AWS.Data.XML.FromXML Network.AWS.CognitoIdentityProvider.Types.OAuthFlowType.OAuthFlowType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.CognitoIdentityProvider.Types.OAuthFlowType.OAuthFlowType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.Types.OAuthFlowType.OAuthFlowType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.CognitoIdentityProvider.Types.OAuthFlowType.OAuthFlowType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CognitoIdentityProvider.Types.OAuthFlowType.OAuthFlowType
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentityProvider.Types.OAuthFlowType.OAuthFlowType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.CognitoIdentityProvider.Types.OAuthFlowType.OAuthFlowType
instance Network.AWS.Data.Log.ToLog Network.AWS.CognitoIdentityProvider.Types.OAuthFlowType.OAuthFlowType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.CognitoIdentityProvider.Types.OAuthFlowType.OAuthFlowType
instance Network.AWS.Data.Text.ToText Network.AWS.CognitoIdentityProvider.Types.OAuthFlowType.OAuthFlowType
instance Network.AWS.Data.Text.FromText Network.AWS.CognitoIdentityProvider.Types.OAuthFlowType.OAuthFlowType
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.Types.OAuthFlowType.OAuthFlowType
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.Types.OAuthFlowType.OAuthFlowType
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.Types.OAuthFlowType.OAuthFlowType
instance GHC.Classes.Ord Network.AWS.CognitoIdentityProvider.Types.OAuthFlowType.OAuthFlowType
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.Types.OAuthFlowType.OAuthFlowType
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.Types.OAuthFlowType.OAuthFlowType
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.Types.OAuthFlowType.OAuthFlowType


module Network.AWS.CognitoIdentityProvider.Types.PasswordPolicyType

-- | The password policy type.
--   
--   <i>See:</i> <a>newPasswordPolicyType</a> smart constructor.
data PasswordPolicyType
PasswordPolicyType' :: Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Natural -> Maybe Bool -> Maybe Natural -> PasswordPolicyType

-- | In the password policy that you have set, refers to whether you have
--   required users to use at least one number in their password.
[$sel:requireNumbers:PasswordPolicyType'] :: PasswordPolicyType -> Maybe Bool

-- | In the password policy that you have set, refers to whether you have
--   required users to use at least one uppercase letter in their password.
[$sel:requireUppercase:PasswordPolicyType'] :: PasswordPolicyType -> Maybe Bool

-- | In the password policy that you have set, refers to whether you have
--   required users to use at least one lowercase letter in their password.
[$sel:requireLowercase:PasswordPolicyType'] :: PasswordPolicyType -> Maybe Bool

-- | The minimum length of the password policy that you have set. Cannot be
--   less than 6.
[$sel:minimumLength:PasswordPolicyType'] :: PasswordPolicyType -> Maybe Natural

-- | In the password policy that you have set, refers to whether you have
--   required users to use at least one symbol in their password.
[$sel:requireSymbols:PasswordPolicyType'] :: PasswordPolicyType -> Maybe Bool

-- | In the password policy you have set, refers to the number of days a
--   temporary password is valid. If the user does not sign-in during this
--   time, their password will need to be reset by an administrator.
--   
--   When you set <tt>TemporaryPasswordValidityDays</tt> for a user pool,
--   you will no longer be able to set the deprecated
--   <tt>UnusedAccountValidityDays</tt> value for that user pool.
[$sel:temporaryPasswordValidityDays:PasswordPolicyType'] :: PasswordPolicyType -> Maybe Natural

-- | Create a value of <a>PasswordPolicyType</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:requireNumbers:PasswordPolicyType'</a>,
--   <a>passwordPolicyType_requireNumbers</a> - In the password policy that
--   you have set, refers to whether you have required users to use at
--   least one number in their password.
--   
--   <a>$sel:requireUppercase:PasswordPolicyType'</a>,
--   <a>passwordPolicyType_requireUppercase</a> - In the password policy
--   that you have set, refers to whether you have required users to use at
--   least one uppercase letter in their password.
--   
--   <a>$sel:requireLowercase:PasswordPolicyType'</a>,
--   <a>passwordPolicyType_requireLowercase</a> - In the password policy
--   that you have set, refers to whether you have required users to use at
--   least one lowercase letter in their password.
--   
--   <a>$sel:minimumLength:PasswordPolicyType'</a>,
--   <a>passwordPolicyType_minimumLength</a> - The minimum length of the
--   password policy that you have set. Cannot be less than 6.
--   
--   <a>$sel:requireSymbols:PasswordPolicyType'</a>,
--   <a>passwordPolicyType_requireSymbols</a> - In the password policy that
--   you have set, refers to whether you have required users to use at
--   least one symbol in their password.
--   
--   <a>$sel:temporaryPasswordValidityDays:PasswordPolicyType'</a>,
--   <a>passwordPolicyType_temporaryPasswordValidityDays</a> - In the
--   password policy you have set, refers to the number of days a temporary
--   password is valid. If the user does not sign-in during this time,
--   their password will need to be reset by an administrator.
--   
--   When you set <tt>TemporaryPasswordValidityDays</tt> for a user pool,
--   you will no longer be able to set the deprecated
--   <tt>UnusedAccountValidityDays</tt> value for that user pool.
newPasswordPolicyType :: PasswordPolicyType

-- | In the password policy that you have set, refers to whether you have
--   required users to use at least one number in their password.
passwordPolicyType_requireNumbers :: Lens' PasswordPolicyType (Maybe Bool)

-- | In the password policy that you have set, refers to whether you have
--   required users to use at least one uppercase letter in their password.
passwordPolicyType_requireUppercase :: Lens' PasswordPolicyType (Maybe Bool)

-- | In the password policy that you have set, refers to whether you have
--   required users to use at least one lowercase letter in their password.
passwordPolicyType_requireLowercase :: Lens' PasswordPolicyType (Maybe Bool)

-- | The minimum length of the password policy that you have set. Cannot be
--   less than 6.
passwordPolicyType_minimumLength :: Lens' PasswordPolicyType (Maybe Natural)

-- | In the password policy that you have set, refers to whether you have
--   required users to use at least one symbol in their password.
passwordPolicyType_requireSymbols :: Lens' PasswordPolicyType (Maybe Bool)

-- | In the password policy you have set, refers to the number of days a
--   temporary password is valid. If the user does not sign-in during this
--   time, their password will need to be reset by an administrator.
--   
--   When you set <tt>TemporaryPasswordValidityDays</tt> for a user pool,
--   you will no longer be able to set the deprecated
--   <tt>UnusedAccountValidityDays</tt> value for that user pool.
passwordPolicyType_temporaryPasswordValidityDays :: Lens' PasswordPolicyType (Maybe Natural)
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.Types.PasswordPolicyType.PasswordPolicyType
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.Types.PasswordPolicyType.PasswordPolicyType
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.Types.PasswordPolicyType.PasswordPolicyType
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.Types.PasswordPolicyType.PasswordPolicyType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CognitoIdentityProvider.Types.PasswordPolicyType.PasswordPolicyType
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.Types.PasswordPolicyType.PasswordPolicyType
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.Types.PasswordPolicyType.PasswordPolicyType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.Types.PasswordPolicyType.PasswordPolicyType


module Network.AWS.CognitoIdentityProvider.Types.PreventUserExistenceErrorTypes
newtype PreventUserExistenceErrorTypes
PreventUserExistenceErrorTypes' :: Text -> PreventUserExistenceErrorTypes
[fromPreventUserExistenceErrorTypes] :: PreventUserExistenceErrorTypes -> Text
pattern PreventUserExistenceErrorTypes_ENABLED :: PreventUserExistenceErrorTypes
pattern PreventUserExistenceErrorTypes_LEGACY :: PreventUserExistenceErrorTypes
instance Network.AWS.Data.XML.ToXML Network.AWS.CognitoIdentityProvider.Types.PreventUserExistenceErrorTypes.PreventUserExistenceErrorTypes
instance Network.AWS.Data.XML.FromXML Network.AWS.CognitoIdentityProvider.Types.PreventUserExistenceErrorTypes.PreventUserExistenceErrorTypes
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.CognitoIdentityProvider.Types.PreventUserExistenceErrorTypes.PreventUserExistenceErrorTypes
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.Types.PreventUserExistenceErrorTypes.PreventUserExistenceErrorTypes
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.CognitoIdentityProvider.Types.PreventUserExistenceErrorTypes.PreventUserExistenceErrorTypes
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CognitoIdentityProvider.Types.PreventUserExistenceErrorTypes.PreventUserExistenceErrorTypes
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentityProvider.Types.PreventUserExistenceErrorTypes.PreventUserExistenceErrorTypes
instance Network.AWS.Data.Headers.ToHeader Network.AWS.CognitoIdentityProvider.Types.PreventUserExistenceErrorTypes.PreventUserExistenceErrorTypes
instance Network.AWS.Data.Log.ToLog Network.AWS.CognitoIdentityProvider.Types.PreventUserExistenceErrorTypes.PreventUserExistenceErrorTypes
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.CognitoIdentityProvider.Types.PreventUserExistenceErrorTypes.PreventUserExistenceErrorTypes
instance Network.AWS.Data.Text.ToText Network.AWS.CognitoIdentityProvider.Types.PreventUserExistenceErrorTypes.PreventUserExistenceErrorTypes
instance Network.AWS.Data.Text.FromText Network.AWS.CognitoIdentityProvider.Types.PreventUserExistenceErrorTypes.PreventUserExistenceErrorTypes
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.Types.PreventUserExistenceErrorTypes.PreventUserExistenceErrorTypes
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.Types.PreventUserExistenceErrorTypes.PreventUserExistenceErrorTypes
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.Types.PreventUserExistenceErrorTypes.PreventUserExistenceErrorTypes
instance GHC.Classes.Ord Network.AWS.CognitoIdentityProvider.Types.PreventUserExistenceErrorTypes.PreventUserExistenceErrorTypes
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.Types.PreventUserExistenceErrorTypes.PreventUserExistenceErrorTypes
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.Types.PreventUserExistenceErrorTypes.PreventUserExistenceErrorTypes
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.Types.PreventUserExistenceErrorTypes.PreventUserExistenceErrorTypes


module Network.AWS.CognitoIdentityProvider.Types.ProviderDescription

-- | A container for identity provider details.
--   
--   <i>See:</i> <a>newProviderDescription</a> smart constructor.
data ProviderDescription
ProviderDescription' :: Maybe POSIX -> Maybe IdentityProviderTypeType -> Maybe POSIX -> Maybe Text -> ProviderDescription

-- | The date the provider was last modified.
[$sel:lastModifiedDate:ProviderDescription'] :: ProviderDescription -> Maybe POSIX

-- | The identity provider type.
[$sel:providerType:ProviderDescription'] :: ProviderDescription -> Maybe IdentityProviderTypeType

-- | The date the provider was added to the user pool.
[$sel:creationDate:ProviderDescription'] :: ProviderDescription -> Maybe POSIX

-- | The identity provider name.
[$sel:providerName:ProviderDescription'] :: ProviderDescription -> Maybe Text

-- | Create a value of <a>ProviderDescription</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lastModifiedDate:ProviderDescription'</a>,
--   <a>providerDescription_lastModifiedDate</a> - The date the provider
--   was last modified.
--   
--   <a>$sel:providerType:ProviderDescription'</a>,
--   <a>providerDescription_providerType</a> - The identity provider type.
--   
--   <a>$sel:creationDate:ProviderDescription'</a>,
--   <a>providerDescription_creationDate</a> - The date the provider was
--   added to the user pool.
--   
--   <a>$sel:providerName:ProviderDescription'</a>,
--   <a>providerDescription_providerName</a> - The identity provider name.
newProviderDescription :: ProviderDescription

-- | The date the provider was last modified.
providerDescription_lastModifiedDate :: Lens' ProviderDescription (Maybe UTCTime)

-- | The identity provider type.
providerDescription_providerType :: Lens' ProviderDescription (Maybe IdentityProviderTypeType)

-- | The date the provider was added to the user pool.
providerDescription_creationDate :: Lens' ProviderDescription (Maybe UTCTime)

-- | The identity provider name.
providerDescription_providerName :: Lens' ProviderDescription (Maybe Text)
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.Types.ProviderDescription.ProviderDescription
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.Types.ProviderDescription.ProviderDescription
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.Types.ProviderDescription.ProviderDescription
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.Types.ProviderDescription.ProviderDescription
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CognitoIdentityProvider.Types.ProviderDescription.ProviderDescription
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.Types.ProviderDescription.ProviderDescription
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.Types.ProviderDescription.ProviderDescription


module Network.AWS.CognitoIdentityProvider.Types.ProviderUserIdentifierType

-- | A container for information about an identity provider for a user
--   pool.
--   
--   <i>See:</i> <a>newProviderUserIdentifierType</a> smart constructor.
data ProviderUserIdentifierType
ProviderUserIdentifierType' :: Maybe Text -> Maybe Text -> Maybe Text -> ProviderUserIdentifierType

-- | The value of the provider attribute to link to, for example,
--   <tt>xxxxx_account</tt>.
[$sel:providerAttributeValue:ProviderUserIdentifierType'] :: ProviderUserIdentifierType -> Maybe Text

-- | The name of the provider attribute to link to, for example,
--   <tt>NameID</tt>.
[$sel:providerAttributeName:ProviderUserIdentifierType'] :: ProviderUserIdentifierType -> Maybe Text

-- | The name of the provider, for example, Facebook, Google, or Login with
--   Amazon.
[$sel:providerName:ProviderUserIdentifierType'] :: ProviderUserIdentifierType -> Maybe Text

-- | Create a value of <a>ProviderUserIdentifierType</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:providerAttributeValue:ProviderUserIdentifierType'</a>,
--   <a>providerUserIdentifierType_providerAttributeValue</a> - The value
--   of the provider attribute to link to, for example,
--   <tt>xxxxx_account</tt>.
--   
--   <a>$sel:providerAttributeName:ProviderUserIdentifierType'</a>,
--   <a>providerUserIdentifierType_providerAttributeName</a> - The name of
--   the provider attribute to link to, for example, <tt>NameID</tt>.
--   
--   <a>$sel:providerName:ProviderUserIdentifierType'</a>,
--   <a>providerUserIdentifierType_providerName</a> - The name of the
--   provider, for example, Facebook, Google, or Login with Amazon.
newProviderUserIdentifierType :: ProviderUserIdentifierType

-- | The value of the provider attribute to link to, for example,
--   <tt>xxxxx_account</tt>.
providerUserIdentifierType_providerAttributeValue :: Lens' ProviderUserIdentifierType (Maybe Text)

-- | The name of the provider attribute to link to, for example,
--   <tt>NameID</tt>.
providerUserIdentifierType_providerAttributeName :: Lens' ProviderUserIdentifierType (Maybe Text)

-- | The name of the provider, for example, Facebook, Google, or Login with
--   Amazon.
providerUserIdentifierType_providerName :: Lens' ProviderUserIdentifierType (Maybe Text)
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.Types.ProviderUserIdentifierType.ProviderUserIdentifierType
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.Types.ProviderUserIdentifierType.ProviderUserIdentifierType
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.Types.ProviderUserIdentifierType.ProviderUserIdentifierType
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.Types.ProviderUserIdentifierType.ProviderUserIdentifierType
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.Types.ProviderUserIdentifierType.ProviderUserIdentifierType
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.Types.ProviderUserIdentifierType.ProviderUserIdentifierType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.Types.ProviderUserIdentifierType.ProviderUserIdentifierType


module Network.AWS.CognitoIdentityProvider.Types.RecoveryOptionNameType
newtype RecoveryOptionNameType
RecoveryOptionNameType' :: Text -> RecoveryOptionNameType
[fromRecoveryOptionNameType] :: RecoveryOptionNameType -> Text
pattern RecoveryOptionNameType_Admin_only :: RecoveryOptionNameType
pattern RecoveryOptionNameType_Verified_email :: RecoveryOptionNameType
pattern RecoveryOptionNameType_Verified_phone_number :: RecoveryOptionNameType
instance Network.AWS.Data.XML.ToXML Network.AWS.CognitoIdentityProvider.Types.RecoveryOptionNameType.RecoveryOptionNameType
instance Network.AWS.Data.XML.FromXML Network.AWS.CognitoIdentityProvider.Types.RecoveryOptionNameType.RecoveryOptionNameType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.CognitoIdentityProvider.Types.RecoveryOptionNameType.RecoveryOptionNameType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.Types.RecoveryOptionNameType.RecoveryOptionNameType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.CognitoIdentityProvider.Types.RecoveryOptionNameType.RecoveryOptionNameType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CognitoIdentityProvider.Types.RecoveryOptionNameType.RecoveryOptionNameType
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentityProvider.Types.RecoveryOptionNameType.RecoveryOptionNameType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.CognitoIdentityProvider.Types.RecoveryOptionNameType.RecoveryOptionNameType
instance Network.AWS.Data.Log.ToLog Network.AWS.CognitoIdentityProvider.Types.RecoveryOptionNameType.RecoveryOptionNameType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.CognitoIdentityProvider.Types.RecoveryOptionNameType.RecoveryOptionNameType
instance Network.AWS.Data.Text.ToText Network.AWS.CognitoIdentityProvider.Types.RecoveryOptionNameType.RecoveryOptionNameType
instance Network.AWS.Data.Text.FromText Network.AWS.CognitoIdentityProvider.Types.RecoveryOptionNameType.RecoveryOptionNameType
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.Types.RecoveryOptionNameType.RecoveryOptionNameType
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.Types.RecoveryOptionNameType.RecoveryOptionNameType
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.Types.RecoveryOptionNameType.RecoveryOptionNameType
instance GHC.Classes.Ord Network.AWS.CognitoIdentityProvider.Types.RecoveryOptionNameType.RecoveryOptionNameType
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.Types.RecoveryOptionNameType.RecoveryOptionNameType
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.Types.RecoveryOptionNameType.RecoveryOptionNameType
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.Types.RecoveryOptionNameType.RecoveryOptionNameType


module Network.AWS.CognitoIdentityProvider.Types.RecoveryOptionType

-- | A map containing a priority as a key, and recovery method name as a
--   value.
--   
--   <i>See:</i> <a>newRecoveryOptionType</a> smart constructor.
data RecoveryOptionType
RecoveryOptionType' :: Natural -> RecoveryOptionNameType -> RecoveryOptionType

-- | A positive integer specifying priority of a method with 1 being the
--   highest priority.
[$sel:priority:RecoveryOptionType'] :: RecoveryOptionType -> Natural

-- | Specifies the recovery method for a user.
[$sel:name:RecoveryOptionType'] :: RecoveryOptionType -> RecoveryOptionNameType

-- | Create a value of <a>RecoveryOptionType</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:priority:RecoveryOptionType'</a>,
--   <a>recoveryOptionType_priority</a> - A positive integer specifying
--   priority of a method with 1 being the highest priority.
--   
--   <a>$sel:name:RecoveryOptionType'</a>, <a>recoveryOptionType_name</a> -
--   Specifies the recovery method for a user.
newRecoveryOptionType :: Natural -> RecoveryOptionNameType -> RecoveryOptionType

-- | A positive integer specifying priority of a method with 1 being the
--   highest priority.
recoveryOptionType_priority :: Lens' RecoveryOptionType Natural

-- | Specifies the recovery method for a user.
recoveryOptionType_name :: Lens' RecoveryOptionType RecoveryOptionNameType
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.Types.RecoveryOptionType.RecoveryOptionType
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.Types.RecoveryOptionType.RecoveryOptionType
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.Types.RecoveryOptionType.RecoveryOptionType
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.Types.RecoveryOptionType.RecoveryOptionType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CognitoIdentityProvider.Types.RecoveryOptionType.RecoveryOptionType
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.Types.RecoveryOptionType.RecoveryOptionType
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.Types.RecoveryOptionType.RecoveryOptionType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.Types.RecoveryOptionType.RecoveryOptionType


module Network.AWS.CognitoIdentityProvider.Types.AccountRecoverySettingType

-- | The data type for <tt>AccountRecoverySetting</tt>.
--   
--   <i>See:</i> <a>newAccountRecoverySettingType</a> smart constructor.
data AccountRecoverySettingType
AccountRecoverySettingType' :: Maybe (NonEmpty RecoveryOptionType) -> AccountRecoverySettingType

-- | The list of <tt>RecoveryOptionTypes</tt>.
[$sel:recoveryMechanisms:AccountRecoverySettingType'] :: AccountRecoverySettingType -> Maybe (NonEmpty RecoveryOptionType)

-- | Create a value of <a>AccountRecoverySettingType</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:recoveryMechanisms:AccountRecoverySettingType'</a>,
--   <a>accountRecoverySettingType_recoveryMechanisms</a> - The list of
--   <tt>RecoveryOptionTypes</tt>.
newAccountRecoverySettingType :: AccountRecoverySettingType

-- | The list of <tt>RecoveryOptionTypes</tt>.
accountRecoverySettingType_recoveryMechanisms :: Lens' AccountRecoverySettingType (Maybe (NonEmpty RecoveryOptionType))
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.Types.AccountRecoverySettingType.AccountRecoverySettingType
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.Types.AccountRecoverySettingType.AccountRecoverySettingType
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.Types.AccountRecoverySettingType.AccountRecoverySettingType
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.Types.AccountRecoverySettingType.AccountRecoverySettingType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CognitoIdentityProvider.Types.AccountRecoverySettingType.AccountRecoverySettingType
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.Types.AccountRecoverySettingType.AccountRecoverySettingType
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.Types.AccountRecoverySettingType.AccountRecoverySettingType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.Types.AccountRecoverySettingType.AccountRecoverySettingType


module Network.AWS.CognitoIdentityProvider.Types.ResourceServerScopeType

-- | A resource server scope.
--   
--   <i>See:</i> <a>newResourceServerScopeType</a> smart constructor.
data ResourceServerScopeType
ResourceServerScopeType' :: Text -> Text -> ResourceServerScopeType

-- | The name of the scope.
[$sel:scopeName:ResourceServerScopeType'] :: ResourceServerScopeType -> Text

-- | A description of the scope.
[$sel:scopeDescription:ResourceServerScopeType'] :: ResourceServerScopeType -> Text

-- | Create a value of <a>ResourceServerScopeType</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:scopeName:ResourceServerScopeType'</a>,
--   <a>resourceServerScopeType_scopeName</a> - The name of the scope.
--   
--   <a>$sel:scopeDescription:ResourceServerScopeType'</a>,
--   <a>resourceServerScopeType_scopeDescription</a> - A description of the
--   scope.
newResourceServerScopeType :: Text -> Text -> ResourceServerScopeType

-- | The name of the scope.
resourceServerScopeType_scopeName :: Lens' ResourceServerScopeType Text

-- | A description of the scope.
resourceServerScopeType_scopeDescription :: Lens' ResourceServerScopeType Text
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.Types.ResourceServerScopeType.ResourceServerScopeType
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.Types.ResourceServerScopeType.ResourceServerScopeType
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.Types.ResourceServerScopeType.ResourceServerScopeType
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.Types.ResourceServerScopeType.ResourceServerScopeType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CognitoIdentityProvider.Types.ResourceServerScopeType.ResourceServerScopeType
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.Types.ResourceServerScopeType.ResourceServerScopeType
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.Types.ResourceServerScopeType.ResourceServerScopeType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.Types.ResourceServerScopeType.ResourceServerScopeType


module Network.AWS.CognitoIdentityProvider.Types.ResourceServerType

-- | A container for information about a resource server for a user pool.
--   
--   <i>See:</i> <a>newResourceServerType</a> smart constructor.
data ResourceServerType
ResourceServerType' :: Maybe Text -> Maybe Text -> Maybe [ResourceServerScopeType] -> Maybe Text -> ResourceServerType

-- | The user pool ID for the user pool that hosts the resource server.
[$sel:userPoolId:ResourceServerType'] :: ResourceServerType -> Maybe Text

-- | The identifier for the resource server.
[$sel:identifier:ResourceServerType'] :: ResourceServerType -> Maybe Text

-- | A list of scopes that are defined for the resource server.
[$sel:scopes:ResourceServerType'] :: ResourceServerType -> Maybe [ResourceServerScopeType]

-- | The name of the resource server.
[$sel:name:ResourceServerType'] :: ResourceServerType -> Maybe Text

-- | Create a value of <a>ResourceServerType</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userPoolId:ResourceServerType'</a>,
--   <a>resourceServerType_userPoolId</a> - The user pool ID for the user
--   pool that hosts the resource server.
--   
--   <a>$sel:identifier:ResourceServerType'</a>,
--   <a>resourceServerType_identifier</a> - The identifier for the resource
--   server.
--   
--   <a>$sel:scopes:ResourceServerType'</a>,
--   <a>resourceServerType_scopes</a> - A list of scopes that are defined
--   for the resource server.
--   
--   <a>$sel:name:ResourceServerType'</a>, <a>resourceServerType_name</a> -
--   The name of the resource server.
newResourceServerType :: ResourceServerType

-- | The user pool ID for the user pool that hosts the resource server.
resourceServerType_userPoolId :: Lens' ResourceServerType (Maybe Text)

-- | The identifier for the resource server.
resourceServerType_identifier :: Lens' ResourceServerType (Maybe Text)

-- | A list of scopes that are defined for the resource server.
resourceServerType_scopes :: Lens' ResourceServerType (Maybe [ResourceServerScopeType])

-- | The name of the resource server.
resourceServerType_name :: Lens' ResourceServerType (Maybe Text)
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.Types.ResourceServerType.ResourceServerType
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.Types.ResourceServerType.ResourceServerType
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.Types.ResourceServerType.ResourceServerType
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.Types.ResourceServerType.ResourceServerType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CognitoIdentityProvider.Types.ResourceServerType.ResourceServerType
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.Types.ResourceServerType.ResourceServerType
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.Types.ResourceServerType.ResourceServerType


module Network.AWS.CognitoIdentityProvider.Types.RiskDecisionType
newtype RiskDecisionType
RiskDecisionType' :: Text -> RiskDecisionType
[fromRiskDecisionType] :: RiskDecisionType -> Text
pattern RiskDecisionType_AccountTakeover :: RiskDecisionType
pattern RiskDecisionType_Block :: RiskDecisionType
pattern RiskDecisionType_NoRisk :: RiskDecisionType
instance Network.AWS.Data.XML.ToXML Network.AWS.CognitoIdentityProvider.Types.RiskDecisionType.RiskDecisionType
instance Network.AWS.Data.XML.FromXML Network.AWS.CognitoIdentityProvider.Types.RiskDecisionType.RiskDecisionType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.CognitoIdentityProvider.Types.RiskDecisionType.RiskDecisionType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.Types.RiskDecisionType.RiskDecisionType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.CognitoIdentityProvider.Types.RiskDecisionType.RiskDecisionType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CognitoIdentityProvider.Types.RiskDecisionType.RiskDecisionType
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentityProvider.Types.RiskDecisionType.RiskDecisionType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.CognitoIdentityProvider.Types.RiskDecisionType.RiskDecisionType
instance Network.AWS.Data.Log.ToLog Network.AWS.CognitoIdentityProvider.Types.RiskDecisionType.RiskDecisionType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.CognitoIdentityProvider.Types.RiskDecisionType.RiskDecisionType
instance Network.AWS.Data.Text.ToText Network.AWS.CognitoIdentityProvider.Types.RiskDecisionType.RiskDecisionType
instance Network.AWS.Data.Text.FromText Network.AWS.CognitoIdentityProvider.Types.RiskDecisionType.RiskDecisionType
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.Types.RiskDecisionType.RiskDecisionType
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.Types.RiskDecisionType.RiskDecisionType
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.Types.RiskDecisionType.RiskDecisionType
instance GHC.Classes.Ord Network.AWS.CognitoIdentityProvider.Types.RiskDecisionType.RiskDecisionType
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.Types.RiskDecisionType.RiskDecisionType
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.Types.RiskDecisionType.RiskDecisionType
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.Types.RiskDecisionType.RiskDecisionType


module Network.AWS.CognitoIdentityProvider.Types.RiskExceptionConfigurationType

-- | The type of the configuration to override the risk decision.
--   
--   <i>See:</i> <a>newRiskExceptionConfigurationType</a> smart
--   constructor.
data RiskExceptionConfigurationType
RiskExceptionConfigurationType' :: Maybe [Text] -> Maybe [Text] -> RiskExceptionConfigurationType

-- | Risk detection is not performed on the IP addresses in the range list.
--   The IP range is in CIDR notation.
[$sel:skippedIPRangeList:RiskExceptionConfigurationType'] :: RiskExceptionConfigurationType -> Maybe [Text]

-- | Overrides the risk decision to always block the pre-authentication
--   requests. The IP range is in CIDR notation: a compact representation
--   of an IP address and its associated routing prefix.
[$sel:blockedIPRangeList:RiskExceptionConfigurationType'] :: RiskExceptionConfigurationType -> Maybe [Text]

-- | Create a value of <a>RiskExceptionConfigurationType</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:skippedIPRangeList:RiskExceptionConfigurationType'</a>,
--   <a>riskExceptionConfigurationType_skippedIPRangeList</a> - Risk
--   detection is not performed on the IP addresses in the range list. The
--   IP range is in CIDR notation.
--   
--   <a>$sel:blockedIPRangeList:RiskExceptionConfigurationType'</a>,
--   <a>riskExceptionConfigurationType_blockedIPRangeList</a> - Overrides
--   the risk decision to always block the pre-authentication requests. The
--   IP range is in CIDR notation: a compact representation of an IP
--   address and its associated routing prefix.
newRiskExceptionConfigurationType :: RiskExceptionConfigurationType

-- | Risk detection is not performed on the IP addresses in the range list.
--   The IP range is in CIDR notation.
riskExceptionConfigurationType_skippedIPRangeList :: Lens' RiskExceptionConfigurationType (Maybe [Text])

-- | Overrides the risk decision to always block the pre-authentication
--   requests. The IP range is in CIDR notation: a compact representation
--   of an IP address and its associated routing prefix.
riskExceptionConfigurationType_blockedIPRangeList :: Lens' RiskExceptionConfigurationType (Maybe [Text])
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.Types.RiskExceptionConfigurationType.RiskExceptionConfigurationType
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.Types.RiskExceptionConfigurationType.RiskExceptionConfigurationType
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.Types.RiskExceptionConfigurationType.RiskExceptionConfigurationType
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.Types.RiskExceptionConfigurationType.RiskExceptionConfigurationType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CognitoIdentityProvider.Types.RiskExceptionConfigurationType.RiskExceptionConfigurationType
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.Types.RiskExceptionConfigurationType.RiskExceptionConfigurationType
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.Types.RiskExceptionConfigurationType.RiskExceptionConfigurationType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.Types.RiskExceptionConfigurationType.RiskExceptionConfigurationType


module Network.AWS.CognitoIdentityProvider.Types.RiskConfigurationType

-- | The risk configuration type.
--   
--   <i>See:</i> <a>newRiskConfigurationType</a> smart constructor.
data RiskConfigurationType
RiskConfigurationType' :: Maybe RiskExceptionConfigurationType -> Maybe (Sensitive Text) -> Maybe AccountTakeoverRiskConfigurationType -> Maybe POSIX -> Maybe Text -> Maybe CompromisedCredentialsRiskConfigurationType -> RiskConfigurationType

-- | The configuration to override the risk decision.
[$sel:riskExceptionConfiguration:RiskConfigurationType'] :: RiskConfigurationType -> Maybe RiskExceptionConfigurationType

-- | The app client ID.
[$sel:clientId:RiskConfigurationType'] :: RiskConfigurationType -> Maybe (Sensitive Text)

-- | The account takeover risk configuration object including the
--   <tt>NotifyConfiguration</tt> object and <tt>Actions</tt> to take in
--   the case of an account takeover.
[$sel:accountTakeoverRiskConfiguration:RiskConfigurationType'] :: RiskConfigurationType -> Maybe AccountTakeoverRiskConfigurationType

-- | The last modified date.
[$sel:lastModifiedDate:RiskConfigurationType'] :: RiskConfigurationType -> Maybe POSIX

-- | The user pool ID.
[$sel:userPoolId:RiskConfigurationType'] :: RiskConfigurationType -> Maybe Text

-- | The compromised credentials risk configuration object including the
--   <tt>EventFilter</tt> and the <tt>EventAction</tt>
[$sel:compromisedCredentialsRiskConfiguration:RiskConfigurationType'] :: RiskConfigurationType -> Maybe CompromisedCredentialsRiskConfigurationType

-- | Create a value of <a>RiskConfigurationType</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:riskExceptionConfiguration:RiskConfigurationType'</a>,
--   <a>riskConfigurationType_riskExceptionConfiguration</a> - The
--   configuration to override the risk decision.
--   
--   <a>$sel:clientId:RiskConfigurationType'</a>,
--   <a>riskConfigurationType_clientId</a> - The app client ID.
--   
--   <a>$sel:accountTakeoverRiskConfiguration:RiskConfigurationType'</a>,
--   <a>riskConfigurationType_accountTakeoverRiskConfiguration</a> - The
--   account takeover risk configuration object including the
--   <tt>NotifyConfiguration</tt> object and <tt>Actions</tt> to take in
--   the case of an account takeover.
--   
--   <a>$sel:lastModifiedDate:RiskConfigurationType'</a>,
--   <a>riskConfigurationType_lastModifiedDate</a> - The last modified
--   date.
--   
--   <a>$sel:userPoolId:RiskConfigurationType'</a>,
--   <a>riskConfigurationType_userPoolId</a> - The user pool ID.
--   
--   
--   <a>$sel:compromisedCredentialsRiskConfiguration:RiskConfigurationType'</a>,
--   <a>riskConfigurationType_compromisedCredentialsRiskConfiguration</a> -
--   The compromised credentials risk configuration object including the
--   <tt>EventFilter</tt> and the <tt>EventAction</tt>
newRiskConfigurationType :: RiskConfigurationType

-- | The configuration to override the risk decision.
riskConfigurationType_riskExceptionConfiguration :: Lens' RiskConfigurationType (Maybe RiskExceptionConfigurationType)

-- | The app client ID.
riskConfigurationType_clientId :: Lens' RiskConfigurationType (Maybe Text)

-- | The account takeover risk configuration object including the
--   <tt>NotifyConfiguration</tt> object and <tt>Actions</tt> to take in
--   the case of an account takeover.
riskConfigurationType_accountTakeoverRiskConfiguration :: Lens' RiskConfigurationType (Maybe AccountTakeoverRiskConfigurationType)

-- | The last modified date.
riskConfigurationType_lastModifiedDate :: Lens' RiskConfigurationType (Maybe UTCTime)

-- | The user pool ID.
riskConfigurationType_userPoolId :: Lens' RiskConfigurationType (Maybe Text)

-- | The compromised credentials risk configuration object including the
--   <tt>EventFilter</tt> and the <tt>EventAction</tt>
riskConfigurationType_compromisedCredentialsRiskConfiguration :: Lens' RiskConfigurationType (Maybe CompromisedCredentialsRiskConfigurationType)
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.Types.RiskConfigurationType.RiskConfigurationType
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.Types.RiskConfigurationType.RiskConfigurationType
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.Types.RiskConfigurationType.RiskConfigurationType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CognitoIdentityProvider.Types.RiskConfigurationType.RiskConfigurationType
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.Types.RiskConfigurationType.RiskConfigurationType
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.Types.RiskConfigurationType.RiskConfigurationType


module Network.AWS.CognitoIdentityProvider.Types.RiskLevelType
newtype RiskLevelType
RiskLevelType' :: Text -> RiskLevelType
[fromRiskLevelType] :: RiskLevelType -> Text
pattern RiskLevelType_High :: RiskLevelType
pattern RiskLevelType_Low :: RiskLevelType
pattern RiskLevelType_Medium :: RiskLevelType
instance Network.AWS.Data.XML.ToXML Network.AWS.CognitoIdentityProvider.Types.RiskLevelType.RiskLevelType
instance Network.AWS.Data.XML.FromXML Network.AWS.CognitoIdentityProvider.Types.RiskLevelType.RiskLevelType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.CognitoIdentityProvider.Types.RiskLevelType.RiskLevelType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.Types.RiskLevelType.RiskLevelType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.CognitoIdentityProvider.Types.RiskLevelType.RiskLevelType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CognitoIdentityProvider.Types.RiskLevelType.RiskLevelType
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentityProvider.Types.RiskLevelType.RiskLevelType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.CognitoIdentityProvider.Types.RiskLevelType.RiskLevelType
instance Network.AWS.Data.Log.ToLog Network.AWS.CognitoIdentityProvider.Types.RiskLevelType.RiskLevelType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.CognitoIdentityProvider.Types.RiskLevelType.RiskLevelType
instance Network.AWS.Data.Text.ToText Network.AWS.CognitoIdentityProvider.Types.RiskLevelType.RiskLevelType
instance Network.AWS.Data.Text.FromText Network.AWS.CognitoIdentityProvider.Types.RiskLevelType.RiskLevelType
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.Types.RiskLevelType.RiskLevelType
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.Types.RiskLevelType.RiskLevelType
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.Types.RiskLevelType.RiskLevelType
instance GHC.Classes.Ord Network.AWS.CognitoIdentityProvider.Types.RiskLevelType.RiskLevelType
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.Types.RiskLevelType.RiskLevelType
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.Types.RiskLevelType.RiskLevelType
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.Types.RiskLevelType.RiskLevelType


module Network.AWS.CognitoIdentityProvider.Types.EventRiskType

-- | The event risk type.
--   
--   <i>See:</i> <a>newEventRiskType</a> smart constructor.
data EventRiskType
EventRiskType' :: Maybe Bool -> Maybe RiskLevelType -> Maybe RiskDecisionType -> EventRiskType

-- | Indicates whether compromised credentials were detected during an
--   authentication event.
[$sel:compromisedCredentialsDetected:EventRiskType'] :: EventRiskType -> Maybe Bool

-- | The risk level.
[$sel:riskLevel:EventRiskType'] :: EventRiskType -> Maybe RiskLevelType

-- | The risk decision.
[$sel:riskDecision:EventRiskType'] :: EventRiskType -> Maybe RiskDecisionType

-- | Create a value of <a>EventRiskType</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:compromisedCredentialsDetected:EventRiskType'</a>,
--   <a>eventRiskType_compromisedCredentialsDetected</a> - Indicates
--   whether compromised credentials were detected during an authentication
--   event.
--   
--   <a>$sel:riskLevel:EventRiskType'</a>, <a>eventRiskType_riskLevel</a> -
--   The risk level.
--   
--   <a>$sel:riskDecision:EventRiskType'</a>,
--   <a>eventRiskType_riskDecision</a> - The risk decision.
newEventRiskType :: EventRiskType

-- | Indicates whether compromised credentials were detected during an
--   authentication event.
eventRiskType_compromisedCredentialsDetected :: Lens' EventRiskType (Maybe Bool)

-- | The risk level.
eventRiskType_riskLevel :: Lens' EventRiskType (Maybe RiskLevelType)

-- | The risk decision.
eventRiskType_riskDecision :: Lens' EventRiskType (Maybe RiskDecisionType)
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.Types.EventRiskType.EventRiskType
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.Types.EventRiskType.EventRiskType
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.Types.EventRiskType.EventRiskType
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.Types.EventRiskType.EventRiskType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CognitoIdentityProvider.Types.EventRiskType.EventRiskType
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.Types.EventRiskType.EventRiskType
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.Types.EventRiskType.EventRiskType


module Network.AWS.CognitoIdentityProvider.Types.AuthEventType

-- | The authentication event type.
--   
--   <i>See:</i> <a>newAuthEventType</a> smart constructor.
data AuthEventType
AuthEventType' :: Maybe EventRiskType -> Maybe EventResponseType -> Maybe EventContextDataType -> Maybe [ChallengeResponseType] -> Maybe EventType -> Maybe POSIX -> Maybe EventFeedbackType -> Maybe Text -> AuthEventType

-- | The event risk.
[$sel:eventRisk:AuthEventType'] :: AuthEventType -> Maybe EventRiskType

-- | The event response.
[$sel:eventResponse:AuthEventType'] :: AuthEventType -> Maybe EventResponseType

-- | The user context data captured at the time of an event request. It
--   provides additional information about the client from which event the
--   request is received.
[$sel:eventContextData:AuthEventType'] :: AuthEventType -> Maybe EventContextDataType

-- | The challenge responses.
[$sel:challengeResponses:AuthEventType'] :: AuthEventType -> Maybe [ChallengeResponseType]

-- | The event type.
[$sel:eventType:AuthEventType'] :: AuthEventType -> Maybe EventType

-- | The creation date
[$sel:creationDate:AuthEventType'] :: AuthEventType -> Maybe POSIX

-- | A flag specifying the user feedback captured at the time of an event
--   request is good or bad.
[$sel:eventFeedback:AuthEventType'] :: AuthEventType -> Maybe EventFeedbackType

-- | The event ID.
[$sel:eventId:AuthEventType'] :: AuthEventType -> Maybe Text

-- | Create a value of <a>AuthEventType</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:eventRisk:AuthEventType'</a>, <a>authEventType_eventRisk</a> -
--   The event risk.
--   
--   <a>$sel:eventResponse:AuthEventType'</a>,
--   <a>authEventType_eventResponse</a> - The event response.
--   
--   <a>$sel:eventContextData:AuthEventType'</a>,
--   <a>authEventType_eventContextData</a> - The user context data captured
--   at the time of an event request. It provides additional information
--   about the client from which event the request is received.
--   
--   <a>$sel:challengeResponses:AuthEventType'</a>,
--   <a>authEventType_challengeResponses</a> - The challenge responses.
--   
--   <a>$sel:eventType:AuthEventType'</a>, <a>authEventType_eventType</a> -
--   The event type.
--   
--   <a>$sel:creationDate:AuthEventType'</a>,
--   <a>authEventType_creationDate</a> - The creation date
--   
--   <a>$sel:eventFeedback:AuthEventType'</a>,
--   <a>authEventType_eventFeedback</a> - A flag specifying the user
--   feedback captured at the time of an event request is good or bad.
--   
--   <a>$sel:eventId:AuthEventType'</a>, <a>authEventType_eventId</a> - The
--   event ID.
newAuthEventType :: AuthEventType

-- | The event risk.
authEventType_eventRisk :: Lens' AuthEventType (Maybe EventRiskType)

-- | The event response.
authEventType_eventResponse :: Lens' AuthEventType (Maybe EventResponseType)

-- | The user context data captured at the time of an event request. It
--   provides additional information about the client from which event the
--   request is received.
authEventType_eventContextData :: Lens' AuthEventType (Maybe EventContextDataType)

-- | The challenge responses.
authEventType_challengeResponses :: Lens' AuthEventType (Maybe [ChallengeResponseType])

-- | The event type.
authEventType_eventType :: Lens' AuthEventType (Maybe EventType)

-- | The creation date
authEventType_creationDate :: Lens' AuthEventType (Maybe UTCTime)

-- | A flag specifying the user feedback captured at the time of an event
--   request is good or bad.
authEventType_eventFeedback :: Lens' AuthEventType (Maybe EventFeedbackType)

-- | The event ID.
authEventType_eventId :: Lens' AuthEventType (Maybe Text)
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.Types.AuthEventType.AuthEventType
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.Types.AuthEventType.AuthEventType
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.Types.AuthEventType.AuthEventType
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.Types.AuthEventType.AuthEventType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CognitoIdentityProvider.Types.AuthEventType.AuthEventType
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.Types.AuthEventType.AuthEventType
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.Types.AuthEventType.AuthEventType


module Network.AWS.CognitoIdentityProvider.Types.SMSMfaSettingsType

-- | The type used for enabling SMS MFA at the user level. Phone numbers
--   don't need to be verified to be used for SMS MFA. If an MFA type is
--   enabled for a user, the user will be prompted for MFA during all sign
--   in attempts, unless device tracking is turned on and the device has
--   been trusted. If you would like MFA to be applied selectively based on
--   the assessed risk level of sign in attempts, disable MFA for users and
--   turn on Adaptive Authentication for the user pool.
--   
--   <i>See:</i> <a>newSMSMfaSettingsType</a> smart constructor.
data SMSMfaSettingsType
SMSMfaSettingsType' :: Maybe Bool -> Maybe Bool -> SMSMfaSettingsType

-- | Specifies whether SMS text message MFA is enabled. If an MFA type is
--   enabled for a user, the user will be prompted for MFA during all sign
--   in attempts, unless device tracking is turned on and the device has
--   been trusted.
[$sel:enabled:SMSMfaSettingsType'] :: SMSMfaSettingsType -> Maybe Bool

-- | Specifies whether SMS is the preferred MFA method.
[$sel:preferredMfa:SMSMfaSettingsType'] :: SMSMfaSettingsType -> Maybe Bool

-- | Create a value of <a>SMSMfaSettingsType</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:enabled:SMSMfaSettingsType'</a>,
--   <a>sMSMfaSettingsType_enabled</a> - Specifies whether SMS text message
--   MFA is enabled. If an MFA type is enabled for a user, the user will be
--   prompted for MFA during all sign in attempts, unless device tracking
--   is turned on and the device has been trusted.
--   
--   <a>$sel:preferredMfa:SMSMfaSettingsType'</a>,
--   <a>sMSMfaSettingsType_preferredMfa</a> - Specifies whether SMS is the
--   preferred MFA method.
newSMSMfaSettingsType :: SMSMfaSettingsType

-- | Specifies whether SMS text message MFA is enabled. If an MFA type is
--   enabled for a user, the user will be prompted for MFA during all sign
--   in attempts, unless device tracking is turned on and the device has
--   been trusted.
sMSMfaSettingsType_enabled :: Lens' SMSMfaSettingsType (Maybe Bool)

-- | Specifies whether SMS is the preferred MFA method.
sMSMfaSettingsType_preferredMfa :: Lens' SMSMfaSettingsType (Maybe Bool)
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.Types.SMSMfaSettingsType.SMSMfaSettingsType
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.Types.SMSMfaSettingsType.SMSMfaSettingsType
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.Types.SMSMfaSettingsType.SMSMfaSettingsType
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.Types.SMSMfaSettingsType.SMSMfaSettingsType
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.Types.SMSMfaSettingsType.SMSMfaSettingsType
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.Types.SMSMfaSettingsType.SMSMfaSettingsType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.Types.SMSMfaSettingsType.SMSMfaSettingsType


module Network.AWS.CognitoIdentityProvider.Types.SmsConfigurationType

-- | The SMS configuration type that includes the settings the Cognito User
--   Pool needs to call for the Amazon SNS service to send an SMS message
--   from your account. The Cognito User Pool makes the request to the
--   Amazon SNS Service by using an IAM role that you provide for your
--   account.
--   
--   <i>See:</i> <a>newSmsConfigurationType</a> smart constructor.
data SmsConfigurationType
SmsConfigurationType' :: Maybe Text -> Text -> SmsConfigurationType

-- | The external ID is a value that we recommend you use to add security
--   to your IAM role which is used to call Amazon SNS to send SMS messages
--   for your user pool. If you provide an <tt>ExternalId</tt>, the Cognito
--   User Pool will include it when attempting to assume your IAM role, so
--   that you can set your roles trust policy to require the
--   <tt>ExternalID</tt>. If you use the Cognito Management Console to
--   create a role for SMS MFA, Cognito will create a role with the
--   required permissions and a trust policy that demonstrates use of the
--   <tt>ExternalId</tt>.
--   
--   For more information about the <tt>ExternalId</tt> of a role, see
--   <a>How to use an external ID when granting access to your Amazon Web
--   Services resources to a third party</a>
[$sel:externalId:SmsConfigurationType'] :: SmsConfigurationType -> Maybe Text

-- | The Amazon Resource Name (ARN) of the Amazon Simple Notification
--   Service (SNS) caller. This is the ARN of the IAM role in your account
--   which Cognito will use to send SMS messages. SMS messages are subject
--   to a <a>spending limit</a>.
[$sel:snsCallerArn:SmsConfigurationType'] :: SmsConfigurationType -> Text

-- | Create a value of <a>SmsConfigurationType</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:externalId:SmsConfigurationType'</a>,
--   <a>smsConfigurationType_externalId</a> - The external ID is a value
--   that we recommend you use to add security to your IAM role which is
--   used to call Amazon SNS to send SMS messages for your user pool. If
--   you provide an <tt>ExternalId</tt>, the Cognito User Pool will include
--   it when attempting to assume your IAM role, so that you can set your
--   roles trust policy to require the <tt>ExternalID</tt>. If you use the
--   Cognito Management Console to create a role for SMS MFA, Cognito will
--   create a role with the required permissions and a trust policy that
--   demonstrates use of the <tt>ExternalId</tt>.
--   
--   For more information about the <tt>ExternalId</tt> of a role, see
--   <a>How to use an external ID when granting access to your Amazon Web
--   Services resources to a third party</a>
--   
--   <a>$sel:snsCallerArn:SmsConfigurationType'</a>,
--   <a>smsConfigurationType_snsCallerArn</a> - The Amazon Resource Name
--   (ARN) of the Amazon Simple Notification Service (SNS) caller. This is
--   the ARN of the IAM role in your account which Cognito will use to send
--   SMS messages. SMS messages are subject to a <a>spending limit</a>.
newSmsConfigurationType :: Text -> SmsConfigurationType

-- | The external ID is a value that we recommend you use to add security
--   to your IAM role which is used to call Amazon SNS to send SMS messages
--   for your user pool. If you provide an <tt>ExternalId</tt>, the Cognito
--   User Pool will include it when attempting to assume your IAM role, so
--   that you can set your roles trust policy to require the
--   <tt>ExternalID</tt>. If you use the Cognito Management Console to
--   create a role for SMS MFA, Cognito will create a role with the
--   required permissions and a trust policy that demonstrates use of the
--   <tt>ExternalId</tt>.
--   
--   For more information about the <tt>ExternalId</tt> of a role, see
--   <a>How to use an external ID when granting access to your Amazon Web
--   Services resources to a third party</a>
smsConfigurationType_externalId :: Lens' SmsConfigurationType (Maybe Text)

-- | The Amazon Resource Name (ARN) of the Amazon Simple Notification
--   Service (SNS) caller. This is the ARN of the IAM role in your account
--   which Cognito will use to send SMS messages. SMS messages are subject
--   to a <a>spending limit</a>.
smsConfigurationType_snsCallerArn :: Lens' SmsConfigurationType Text
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.Types.SmsConfigurationType.SmsConfigurationType
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.Types.SmsConfigurationType.SmsConfigurationType
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.Types.SmsConfigurationType.SmsConfigurationType
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.Types.SmsConfigurationType.SmsConfigurationType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CognitoIdentityProvider.Types.SmsConfigurationType.SmsConfigurationType
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.Types.SmsConfigurationType.SmsConfigurationType
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.Types.SmsConfigurationType.SmsConfigurationType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.Types.SmsConfigurationType.SmsConfigurationType


module Network.AWS.CognitoIdentityProvider.Types.SmsMfaConfigType

-- | The SMS text message multi-factor authentication (MFA) configuration
--   type.
--   
--   <i>See:</i> <a>newSmsMfaConfigType</a> smart constructor.
data SmsMfaConfigType
SmsMfaConfigType' :: Maybe Text -> Maybe SmsConfigurationType -> SmsMfaConfigType

-- | The SMS authentication message that will be sent to users with the
--   code they need to sign in. The message must contain the ‘{####}’
--   placeholder, which will be replaced with the code. If the message is
--   not included, and default message will be used.
[$sel:smsAuthenticationMessage:SmsMfaConfigType'] :: SmsMfaConfigType -> Maybe Text

-- | The SMS configuration.
[$sel:smsConfiguration:SmsMfaConfigType'] :: SmsMfaConfigType -> Maybe SmsConfigurationType

-- | Create a value of <a>SmsMfaConfigType</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:smsAuthenticationMessage:SmsMfaConfigType'</a>,
--   <a>smsMfaConfigType_smsAuthenticationMessage</a> - The SMS
--   authentication message that will be sent to users with the code they
--   need to sign in. The message must contain the ‘{####}’ placeholder,
--   which will be replaced with the code. If the message is not included,
--   and default message will be used.
--   
--   <a>$sel:smsConfiguration:SmsMfaConfigType'</a>,
--   <a>smsMfaConfigType_smsConfiguration</a> - The SMS configuration.
newSmsMfaConfigType :: SmsMfaConfigType

-- | The SMS authentication message that will be sent to users with the
--   code they need to sign in. The message must contain the ‘{####}’
--   placeholder, which will be replaced with the code. If the message is
--   not included, and default message will be used.
smsMfaConfigType_smsAuthenticationMessage :: Lens' SmsMfaConfigType (Maybe Text)

-- | The SMS configuration.
smsMfaConfigType_smsConfiguration :: Lens' SmsMfaConfigType (Maybe SmsConfigurationType)
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.Types.SmsMfaConfigType.SmsMfaConfigType
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.Types.SmsMfaConfigType.SmsMfaConfigType
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.Types.SmsMfaConfigType.SmsMfaConfigType
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.Types.SmsMfaConfigType.SmsMfaConfigType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CognitoIdentityProvider.Types.SmsMfaConfigType.SmsMfaConfigType
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.Types.SmsMfaConfigType.SmsMfaConfigType
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.Types.SmsMfaConfigType.SmsMfaConfigType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.Types.SmsMfaConfigType.SmsMfaConfigType


module Network.AWS.CognitoIdentityProvider.Types.SoftwareTokenMfaConfigType

-- | The type used for enabling software token MFA at the user pool level.
--   
--   <i>See:</i> <a>newSoftwareTokenMfaConfigType</a> smart constructor.
data SoftwareTokenMfaConfigType
SoftwareTokenMfaConfigType' :: Maybe Bool -> SoftwareTokenMfaConfigType

-- | Specifies whether software token MFA is enabled.
[$sel:enabled:SoftwareTokenMfaConfigType'] :: SoftwareTokenMfaConfigType -> Maybe Bool

-- | Create a value of <a>SoftwareTokenMfaConfigType</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:enabled:SoftwareTokenMfaConfigType'</a>,
--   <a>softwareTokenMfaConfigType_enabled</a> - Specifies whether software
--   token MFA is enabled.
newSoftwareTokenMfaConfigType :: SoftwareTokenMfaConfigType

-- | Specifies whether software token MFA is enabled.
softwareTokenMfaConfigType_enabled :: Lens' SoftwareTokenMfaConfigType (Maybe Bool)
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.Types.SoftwareTokenMfaConfigType.SoftwareTokenMfaConfigType
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.Types.SoftwareTokenMfaConfigType.SoftwareTokenMfaConfigType
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.Types.SoftwareTokenMfaConfigType.SoftwareTokenMfaConfigType
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.Types.SoftwareTokenMfaConfigType.SoftwareTokenMfaConfigType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CognitoIdentityProvider.Types.SoftwareTokenMfaConfigType.SoftwareTokenMfaConfigType
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.Types.SoftwareTokenMfaConfigType.SoftwareTokenMfaConfigType
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.Types.SoftwareTokenMfaConfigType.SoftwareTokenMfaConfigType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.Types.SoftwareTokenMfaConfigType.SoftwareTokenMfaConfigType


module Network.AWS.CognitoIdentityProvider.Types.SoftwareTokenMfaSettingsType

-- | The type used for enabling software token MFA at the user level. If an
--   MFA type is enabled for a user, the user will be prompted for MFA
--   during all sign in attempts, unless device tracking is turned on and
--   the device has been trusted. If you would like MFA to be applied
--   selectively based on the assessed risk level of sign in attempts,
--   disable MFA for users and turn on Adaptive Authentication for the user
--   pool.
--   
--   <i>See:</i> <a>newSoftwareTokenMfaSettingsType</a> smart constructor.
data SoftwareTokenMfaSettingsType
SoftwareTokenMfaSettingsType' :: Maybe Bool -> Maybe Bool -> SoftwareTokenMfaSettingsType

-- | Specifies whether software token MFA is enabled. If an MFA type is
--   enabled for a user, the user will be prompted for MFA during all sign
--   in attempts, unless device tracking is turned on and the device has
--   been trusted.
[$sel:enabled:SoftwareTokenMfaSettingsType'] :: SoftwareTokenMfaSettingsType -> Maybe Bool

-- | Specifies whether software token MFA is the preferred MFA method.
[$sel:preferredMfa:SoftwareTokenMfaSettingsType'] :: SoftwareTokenMfaSettingsType -> Maybe Bool

-- | Create a value of <a>SoftwareTokenMfaSettingsType</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:enabled:SoftwareTokenMfaSettingsType'</a>,
--   <a>softwareTokenMfaSettingsType_enabled</a> - Specifies whether
--   software token MFA is enabled. If an MFA type is enabled for a user,
--   the user will be prompted for MFA during all sign in attempts, unless
--   device tracking is turned on and the device has been trusted.
--   
--   <a>$sel:preferredMfa:SoftwareTokenMfaSettingsType'</a>,
--   <a>softwareTokenMfaSettingsType_preferredMfa</a> - Specifies whether
--   software token MFA is the preferred MFA method.
newSoftwareTokenMfaSettingsType :: SoftwareTokenMfaSettingsType

-- | Specifies whether software token MFA is enabled. If an MFA type is
--   enabled for a user, the user will be prompted for MFA during all sign
--   in attempts, unless device tracking is turned on and the device has
--   been trusted.
softwareTokenMfaSettingsType_enabled :: Lens' SoftwareTokenMfaSettingsType (Maybe Bool)

-- | Specifies whether software token MFA is the preferred MFA method.
softwareTokenMfaSettingsType_preferredMfa :: Lens' SoftwareTokenMfaSettingsType (Maybe Bool)
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.Types.SoftwareTokenMfaSettingsType.SoftwareTokenMfaSettingsType
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.Types.SoftwareTokenMfaSettingsType.SoftwareTokenMfaSettingsType
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.Types.SoftwareTokenMfaSettingsType.SoftwareTokenMfaSettingsType
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.Types.SoftwareTokenMfaSettingsType.SoftwareTokenMfaSettingsType
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.Types.SoftwareTokenMfaSettingsType.SoftwareTokenMfaSettingsType
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.Types.SoftwareTokenMfaSettingsType.SoftwareTokenMfaSettingsType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.Types.SoftwareTokenMfaSettingsType.SoftwareTokenMfaSettingsType


module Network.AWS.CognitoIdentityProvider.Types.StatusType
newtype StatusType
StatusType' :: Text -> StatusType
[fromStatusType] :: StatusType -> Text
pattern StatusType_Disabled :: StatusType
pattern StatusType_Enabled :: StatusType
instance Network.AWS.Data.XML.ToXML Network.AWS.CognitoIdentityProvider.Types.StatusType.StatusType
instance Network.AWS.Data.XML.FromXML Network.AWS.CognitoIdentityProvider.Types.StatusType.StatusType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.CognitoIdentityProvider.Types.StatusType.StatusType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.Types.StatusType.StatusType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.CognitoIdentityProvider.Types.StatusType.StatusType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CognitoIdentityProvider.Types.StatusType.StatusType
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentityProvider.Types.StatusType.StatusType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.CognitoIdentityProvider.Types.StatusType.StatusType
instance Network.AWS.Data.Log.ToLog Network.AWS.CognitoIdentityProvider.Types.StatusType.StatusType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.CognitoIdentityProvider.Types.StatusType.StatusType
instance Network.AWS.Data.Text.ToText Network.AWS.CognitoIdentityProvider.Types.StatusType.StatusType
instance Network.AWS.Data.Text.FromText Network.AWS.CognitoIdentityProvider.Types.StatusType.StatusType
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.Types.StatusType.StatusType
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.Types.StatusType.StatusType
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.Types.StatusType.StatusType
instance GHC.Classes.Ord Network.AWS.CognitoIdentityProvider.Types.StatusType.StatusType
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.Types.StatusType.StatusType
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.Types.StatusType.StatusType
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.Types.StatusType.StatusType


module Network.AWS.CognitoIdentityProvider.Types.StringAttributeConstraintsType

-- | The constraints associated with a string attribute.
--   
--   <i>See:</i> <a>newStringAttributeConstraintsType</a> smart
--   constructor.
data StringAttributeConstraintsType
StringAttributeConstraintsType' :: Maybe Text -> Maybe Text -> StringAttributeConstraintsType

-- | The maximum length.
[$sel:maxLength:StringAttributeConstraintsType'] :: StringAttributeConstraintsType -> Maybe Text

-- | The minimum length.
[$sel:minLength:StringAttributeConstraintsType'] :: StringAttributeConstraintsType -> Maybe Text

-- | Create a value of <a>StringAttributeConstraintsType</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:maxLength:StringAttributeConstraintsType'</a>,
--   <a>stringAttributeConstraintsType_maxLength</a> - The maximum length.
--   
--   <a>$sel:minLength:StringAttributeConstraintsType'</a>,
--   <a>stringAttributeConstraintsType_minLength</a> - The minimum length.
newStringAttributeConstraintsType :: StringAttributeConstraintsType

-- | The maximum length.
stringAttributeConstraintsType_maxLength :: Lens' StringAttributeConstraintsType (Maybe Text)

-- | The minimum length.
stringAttributeConstraintsType_minLength :: Lens' StringAttributeConstraintsType (Maybe Text)
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.Types.StringAttributeConstraintsType.StringAttributeConstraintsType
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.Types.StringAttributeConstraintsType.StringAttributeConstraintsType
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.Types.StringAttributeConstraintsType.StringAttributeConstraintsType
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.Types.StringAttributeConstraintsType.StringAttributeConstraintsType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CognitoIdentityProvider.Types.StringAttributeConstraintsType.StringAttributeConstraintsType
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.Types.StringAttributeConstraintsType.StringAttributeConstraintsType
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.Types.StringAttributeConstraintsType.StringAttributeConstraintsType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.Types.StringAttributeConstraintsType.StringAttributeConstraintsType


module Network.AWS.CognitoIdentityProvider.Types.SchemaAttributeType

-- | Contains information about the schema attribute.
--   
--   <i>See:</i> <a>newSchemaAttributeType</a> smart constructor.
data SchemaAttributeType
SchemaAttributeType' :: Maybe NumberAttributeConstraintsType -> Maybe Bool -> Maybe AttributeDataType -> Maybe StringAttributeConstraintsType -> Maybe Text -> Maybe Bool -> Maybe Bool -> SchemaAttributeType

-- | Specifies the constraints for an attribute of the number type.
[$sel:numberAttributeConstraints:SchemaAttributeType'] :: SchemaAttributeType -> Maybe NumberAttributeConstraintsType

-- | Specifies whether a user pool attribute is required. If the attribute
--   is required and the user does not provide a value, registration or
--   sign-in will fail.
[$sel:required:SchemaAttributeType'] :: SchemaAttributeType -> Maybe Bool

-- | The attribute data type.
[$sel:attributeDataType:SchemaAttributeType'] :: SchemaAttributeType -> Maybe AttributeDataType

-- | Specifies the constraints for an attribute of the string type.
[$sel:stringAttributeConstraints:SchemaAttributeType'] :: SchemaAttributeType -> Maybe StringAttributeConstraintsType

-- | A schema attribute of the name type.
[$sel:name:SchemaAttributeType'] :: SchemaAttributeType -> Maybe Text

-- | We recommend that you use <a>WriteAttributes</a> in the user pool
--   client to control how attributes can be mutated for new use cases
--   instead of using <tt>DeveloperOnlyAttribute</tt>.
--   
--   Specifies whether the attribute type is developer only. This attribute
--   can only be modified by an administrator. Users will not be able to
--   modify this attribute using their access token. For example,
--   <tt>DeveloperOnlyAttribute</tt> can be modified using
--   AdminUpdateUserAttributes but cannot be updated using
--   UpdateUserAttributes.
[$sel:developerOnlyAttribute:SchemaAttributeType'] :: SchemaAttributeType -> Maybe Bool

-- | Specifies whether the value of the attribute can be changed.
--   
--   For any user pool attribute that's mapped to an identity provider
--   attribute, you must set this parameter to <tt>true</tt>. Amazon
--   Cognito updates mapped attributes when users sign in to your
--   application through an identity provider. If an attribute is
--   immutable, Amazon Cognito throws an error when it attempts to update
--   the attribute. For more information, see <a>Specifying Identity
--   Provider Attribute Mappings for Your User Pool</a>.
[$sel:mutable:SchemaAttributeType'] :: SchemaAttributeType -> Maybe Bool

-- | Create a value of <a>SchemaAttributeType</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:numberAttributeConstraints:SchemaAttributeType'</a>,
--   <a>schemaAttributeType_numberAttributeConstraints</a> - Specifies the
--   constraints for an attribute of the number type.
--   
--   <a>$sel:required:SchemaAttributeType'</a>,
--   <a>schemaAttributeType_required</a> - Specifies whether a user pool
--   attribute is required. If the attribute is required and the user does
--   not provide a value, registration or sign-in will fail.
--   
--   <a>$sel:attributeDataType:SchemaAttributeType'</a>,
--   <a>schemaAttributeType_attributeDataType</a> - The attribute data
--   type.
--   
--   <a>$sel:stringAttributeConstraints:SchemaAttributeType'</a>,
--   <a>schemaAttributeType_stringAttributeConstraints</a> - Specifies the
--   constraints for an attribute of the string type.
--   
--   <a>$sel:name:SchemaAttributeType'</a>, <a>schemaAttributeType_name</a>
--   - A schema attribute of the name type.
--   
--   <a>$sel:developerOnlyAttribute:SchemaAttributeType'</a>,
--   <a>schemaAttributeType_developerOnlyAttribute</a> - We recommend that
--   you use <a>WriteAttributes</a> in the user pool client to control how
--   attributes can be mutated for new use cases instead of using
--   <tt>DeveloperOnlyAttribute</tt>.
--   
--   Specifies whether the attribute type is developer only. This attribute
--   can only be modified by an administrator. Users will not be able to
--   modify this attribute using their access token. For example,
--   <tt>DeveloperOnlyAttribute</tt> can be modified using
--   AdminUpdateUserAttributes but cannot be updated using
--   UpdateUserAttributes.
--   
--   <a>$sel:mutable:SchemaAttributeType'</a>,
--   <a>schemaAttributeType_mutable</a> - Specifies whether the value of
--   the attribute can be changed.
--   
--   For any user pool attribute that's mapped to an identity provider
--   attribute, you must set this parameter to <tt>true</tt>. Amazon
--   Cognito updates mapped attributes when users sign in to your
--   application through an identity provider. If an attribute is
--   immutable, Amazon Cognito throws an error when it attempts to update
--   the attribute. For more information, see <a>Specifying Identity
--   Provider Attribute Mappings for Your User Pool</a>.
newSchemaAttributeType :: SchemaAttributeType

-- | Specifies the constraints for an attribute of the number type.
schemaAttributeType_numberAttributeConstraints :: Lens' SchemaAttributeType (Maybe NumberAttributeConstraintsType)

-- | Specifies whether a user pool attribute is required. If the attribute
--   is required and the user does not provide a value, registration or
--   sign-in will fail.
schemaAttributeType_required :: Lens' SchemaAttributeType (Maybe Bool)

-- | The attribute data type.
schemaAttributeType_attributeDataType :: Lens' SchemaAttributeType (Maybe AttributeDataType)

-- | Specifies the constraints for an attribute of the string type.
schemaAttributeType_stringAttributeConstraints :: Lens' SchemaAttributeType (Maybe StringAttributeConstraintsType)

-- | A schema attribute of the name type.
schemaAttributeType_name :: Lens' SchemaAttributeType (Maybe Text)

-- | We recommend that you use <a>WriteAttributes</a> in the user pool
--   client to control how attributes can be mutated for new use cases
--   instead of using <tt>DeveloperOnlyAttribute</tt>.
--   
--   Specifies whether the attribute type is developer only. This attribute
--   can only be modified by an administrator. Users will not be able to
--   modify this attribute using their access token. For example,
--   <tt>DeveloperOnlyAttribute</tt> can be modified using
--   AdminUpdateUserAttributes but cannot be updated using
--   UpdateUserAttributes.
schemaAttributeType_developerOnlyAttribute :: Lens' SchemaAttributeType (Maybe Bool)

-- | Specifies whether the value of the attribute can be changed.
--   
--   For any user pool attribute that's mapped to an identity provider
--   attribute, you must set this parameter to <tt>true</tt>. Amazon
--   Cognito updates mapped attributes when users sign in to your
--   application through an identity provider. If an attribute is
--   immutable, Amazon Cognito throws an error when it attempts to update
--   the attribute. For more information, see <a>Specifying Identity
--   Provider Attribute Mappings for Your User Pool</a>.
schemaAttributeType_mutable :: Lens' SchemaAttributeType (Maybe Bool)
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.Types.SchemaAttributeType.SchemaAttributeType
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.Types.SchemaAttributeType.SchemaAttributeType
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.Types.SchemaAttributeType.SchemaAttributeType
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.Types.SchemaAttributeType.SchemaAttributeType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CognitoIdentityProvider.Types.SchemaAttributeType.SchemaAttributeType
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.Types.SchemaAttributeType.SchemaAttributeType
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.Types.SchemaAttributeType.SchemaAttributeType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.Types.SchemaAttributeType.SchemaAttributeType


module Network.AWS.CognitoIdentityProvider.Types.TimeUnitsType
newtype TimeUnitsType
TimeUnitsType' :: Text -> TimeUnitsType
[fromTimeUnitsType] :: TimeUnitsType -> Text
pattern TimeUnitsType_Days :: TimeUnitsType
pattern TimeUnitsType_Hours :: TimeUnitsType
pattern TimeUnitsType_Minutes :: TimeUnitsType
pattern TimeUnitsType_Seconds :: TimeUnitsType
instance Network.AWS.Data.XML.ToXML Network.AWS.CognitoIdentityProvider.Types.TimeUnitsType.TimeUnitsType
instance Network.AWS.Data.XML.FromXML Network.AWS.CognitoIdentityProvider.Types.TimeUnitsType.TimeUnitsType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.CognitoIdentityProvider.Types.TimeUnitsType.TimeUnitsType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.Types.TimeUnitsType.TimeUnitsType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.CognitoIdentityProvider.Types.TimeUnitsType.TimeUnitsType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CognitoIdentityProvider.Types.TimeUnitsType.TimeUnitsType
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentityProvider.Types.TimeUnitsType.TimeUnitsType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.CognitoIdentityProvider.Types.TimeUnitsType.TimeUnitsType
instance Network.AWS.Data.Log.ToLog Network.AWS.CognitoIdentityProvider.Types.TimeUnitsType.TimeUnitsType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.CognitoIdentityProvider.Types.TimeUnitsType.TimeUnitsType
instance Network.AWS.Data.Text.ToText Network.AWS.CognitoIdentityProvider.Types.TimeUnitsType.TimeUnitsType
instance Network.AWS.Data.Text.FromText Network.AWS.CognitoIdentityProvider.Types.TimeUnitsType.TimeUnitsType
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.Types.TimeUnitsType.TimeUnitsType
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.Types.TimeUnitsType.TimeUnitsType
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.Types.TimeUnitsType.TimeUnitsType
instance GHC.Classes.Ord Network.AWS.CognitoIdentityProvider.Types.TimeUnitsType.TimeUnitsType
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.Types.TimeUnitsType.TimeUnitsType
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.Types.TimeUnitsType.TimeUnitsType
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.Types.TimeUnitsType.TimeUnitsType


module Network.AWS.CognitoIdentityProvider.Types.TokenValidityUnitsType

-- | The data type for TokenValidityUnits that specifics the time
--   measurements for token validity.
--   
--   <i>See:</i> <a>newTokenValidityUnitsType</a> smart constructor.
data TokenValidityUnitsType
TokenValidityUnitsType' :: Maybe TimeUnitsType -> Maybe TimeUnitsType -> Maybe TimeUnitsType -> TokenValidityUnitsType

-- | A time unit in “seconds”, “minutes”, “hours” or “days” for the value
--   in AccessTokenValidity, defaults to hours.
[$sel:accessToken:TokenValidityUnitsType'] :: TokenValidityUnitsType -> Maybe TimeUnitsType

-- | A time unit in “seconds”, “minutes”, “hours” or “days” for the value
--   in RefreshTokenValidity, defaults to days.
[$sel:refreshToken:TokenValidityUnitsType'] :: TokenValidityUnitsType -> Maybe TimeUnitsType

-- | A time unit in “seconds”, “minutes”, “hours” or “days” for the value
--   in IdTokenValidity, defaults to hours.
[$sel:idToken:TokenValidityUnitsType'] :: TokenValidityUnitsType -> Maybe TimeUnitsType

-- | Create a value of <a>TokenValidityUnitsType</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:accessToken:TokenValidityUnitsType'</a>,
--   <a>tokenValidityUnitsType_accessToken</a> - A time unit in “seconds”,
--   “minutes”, “hours” or “days” for the value in AccessTokenValidity,
--   defaults to hours.
--   
--   <a>$sel:refreshToken:TokenValidityUnitsType'</a>,
--   <a>tokenValidityUnitsType_refreshToken</a> - A time unit in “seconds”,
--   “minutes”, “hours” or “days” for the value in RefreshTokenValidity,
--   defaults to days.
--   
--   <a>$sel:idToken:TokenValidityUnitsType'</a>,
--   <a>tokenValidityUnitsType_idToken</a> - A time unit in “seconds”,
--   “minutes”, “hours” or “days” for the value in IdTokenValidity,
--   defaults to hours.
newTokenValidityUnitsType :: TokenValidityUnitsType

-- | A time unit in “seconds”, “minutes”, “hours” or “days” for the value
--   in AccessTokenValidity, defaults to hours.
tokenValidityUnitsType_accessToken :: Lens' TokenValidityUnitsType (Maybe TimeUnitsType)

-- | A time unit in “seconds”, “minutes”, “hours” or “days” for the value
--   in RefreshTokenValidity, defaults to days.
tokenValidityUnitsType_refreshToken :: Lens' TokenValidityUnitsType (Maybe TimeUnitsType)

-- | A time unit in “seconds”, “minutes”, “hours” or “days” for the value
--   in IdTokenValidity, defaults to hours.
tokenValidityUnitsType_idToken :: Lens' TokenValidityUnitsType (Maybe TimeUnitsType)
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.Types.TokenValidityUnitsType.TokenValidityUnitsType
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.Types.TokenValidityUnitsType.TokenValidityUnitsType
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.Types.TokenValidityUnitsType.TokenValidityUnitsType
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.Types.TokenValidityUnitsType.TokenValidityUnitsType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CognitoIdentityProvider.Types.TokenValidityUnitsType.TokenValidityUnitsType
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.Types.TokenValidityUnitsType.TokenValidityUnitsType
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.Types.TokenValidityUnitsType.TokenValidityUnitsType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.Types.TokenValidityUnitsType.TokenValidityUnitsType


module Network.AWS.CognitoIdentityProvider.Types.UICustomizationType

-- | A container for the UI customization information for a user pool's
--   built-in app UI.
--   
--   <i>See:</i> <a>newUICustomizationType</a> smart constructor.
data UICustomizationType
UICustomizationType' :: Maybe (Sensitive Text) -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> UICustomizationType

-- | The client ID for the client app.
[$sel:clientId:UICustomizationType'] :: UICustomizationType -> Maybe (Sensitive Text)

-- | The last-modified date for the UI customization.
[$sel:lastModifiedDate:UICustomizationType'] :: UICustomizationType -> Maybe POSIX

-- | The user pool ID for the user pool.
[$sel:userPoolId:UICustomizationType'] :: UICustomizationType -> Maybe Text

-- | The CSS values in the UI customization.
[$sel:css:UICustomizationType'] :: UICustomizationType -> Maybe Text

-- | The CSS version number.
[$sel:cSSVersion:UICustomizationType'] :: UICustomizationType -> Maybe Text

-- | The logo image for the UI customization.
[$sel:imageUrl:UICustomizationType'] :: UICustomizationType -> Maybe Text

-- | The creation date for the UI customization.
[$sel:creationDate:UICustomizationType'] :: UICustomizationType -> Maybe POSIX

-- | Create a value of <a>UICustomizationType</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientId:UICustomizationType'</a>,
--   <a>uICustomizationType_clientId</a> - The client ID for the client
--   app.
--   
--   <a>$sel:lastModifiedDate:UICustomizationType'</a>,
--   <a>uICustomizationType_lastModifiedDate</a> - The last-modified date
--   for the UI customization.
--   
--   <a>$sel:userPoolId:UICustomizationType'</a>,
--   <a>uICustomizationType_userPoolId</a> - The user pool ID for the user
--   pool.
--   
--   <a>$sel:css:UICustomizationType'</a>, <a>uICustomizationType_css</a> -
--   The CSS values in the UI customization.
--   
--   <a>$sel:cSSVersion:UICustomizationType'</a>,
--   <a>uICustomizationType_cSSVersion</a> - The CSS version number.
--   
--   <a>$sel:imageUrl:UICustomizationType'</a>,
--   <a>uICustomizationType_imageUrl</a> - The logo image for the UI
--   customization.
--   
--   <a>$sel:creationDate:UICustomizationType'</a>,
--   <a>uICustomizationType_creationDate</a> - The creation date for the UI
--   customization.
newUICustomizationType :: UICustomizationType

-- | The client ID for the client app.
uICustomizationType_clientId :: Lens' UICustomizationType (Maybe Text)

-- | The last-modified date for the UI customization.
uICustomizationType_lastModifiedDate :: Lens' UICustomizationType (Maybe UTCTime)

-- | The user pool ID for the user pool.
uICustomizationType_userPoolId :: Lens' UICustomizationType (Maybe Text)

-- | The CSS values in the UI customization.
uICustomizationType_css :: Lens' UICustomizationType (Maybe Text)

-- | The CSS version number.
uICustomizationType_cSSVersion :: Lens' UICustomizationType (Maybe Text)

-- | The logo image for the UI customization.
uICustomizationType_imageUrl :: Lens' UICustomizationType (Maybe Text)

-- | The creation date for the UI customization.
uICustomizationType_creationDate :: Lens' UICustomizationType (Maybe UTCTime)
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.Types.UICustomizationType.UICustomizationType
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.Types.UICustomizationType.UICustomizationType
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.Types.UICustomizationType.UICustomizationType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CognitoIdentityProvider.Types.UICustomizationType.UICustomizationType
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.Types.UICustomizationType.UICustomizationType
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.Types.UICustomizationType.UICustomizationType


module Network.AWS.CognitoIdentityProvider.Types.UserContextDataType

-- | Contextual data such as the user's device fingerprint, IP address, or
--   location used for evaluating the risk of an unexpected event by Amazon
--   Cognito advanced security.
--   
--   <i>See:</i> <a>newUserContextDataType</a> smart constructor.
data UserContextDataType
UserContextDataType' :: Maybe Text -> UserContextDataType

-- | Contextual data such as the user's device fingerprint, IP address, or
--   location used for evaluating the risk of an unexpected event by Amazon
--   Cognito advanced security.
[$sel:encodedData:UserContextDataType'] :: UserContextDataType -> Maybe Text

-- | Create a value of <a>UserContextDataType</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:encodedData:UserContextDataType'</a>,
--   <a>userContextDataType_encodedData</a> - Contextual data such as the
--   user's device fingerprint, IP address, or location used for evaluating
--   the risk of an unexpected event by Amazon Cognito advanced security.
newUserContextDataType :: UserContextDataType

-- | Contextual data such as the user's device fingerprint, IP address, or
--   location used for evaluating the risk of an unexpected event by Amazon
--   Cognito advanced security.
userContextDataType_encodedData :: Lens' UserContextDataType (Maybe Text)
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.Types.UserContextDataType.UserContextDataType
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.Types.UserContextDataType.UserContextDataType
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.Types.UserContextDataType.UserContextDataType
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.Types.UserContextDataType.UserContextDataType
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.Types.UserContextDataType.UserContextDataType
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.Types.UserContextDataType.UserContextDataType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.Types.UserContextDataType.UserContextDataType


module Network.AWS.CognitoIdentityProvider.Types.UserImportJobStatusType
newtype UserImportJobStatusType
UserImportJobStatusType' :: Text -> UserImportJobStatusType
[fromUserImportJobStatusType] :: UserImportJobStatusType -> Text
pattern UserImportJobStatusType_Created :: UserImportJobStatusType
pattern UserImportJobStatusType_Expired :: UserImportJobStatusType
pattern UserImportJobStatusType_Failed :: UserImportJobStatusType
pattern UserImportJobStatusType_InProgress :: UserImportJobStatusType
pattern UserImportJobStatusType_Pending :: UserImportJobStatusType
pattern UserImportJobStatusType_Stopped :: UserImportJobStatusType
pattern UserImportJobStatusType_Stopping :: UserImportJobStatusType
pattern UserImportJobStatusType_Succeeded :: UserImportJobStatusType
instance Network.AWS.Data.XML.ToXML Network.AWS.CognitoIdentityProvider.Types.UserImportJobStatusType.UserImportJobStatusType
instance Network.AWS.Data.XML.FromXML Network.AWS.CognitoIdentityProvider.Types.UserImportJobStatusType.UserImportJobStatusType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.CognitoIdentityProvider.Types.UserImportJobStatusType.UserImportJobStatusType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.Types.UserImportJobStatusType.UserImportJobStatusType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.CognitoIdentityProvider.Types.UserImportJobStatusType.UserImportJobStatusType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CognitoIdentityProvider.Types.UserImportJobStatusType.UserImportJobStatusType
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentityProvider.Types.UserImportJobStatusType.UserImportJobStatusType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.CognitoIdentityProvider.Types.UserImportJobStatusType.UserImportJobStatusType
instance Network.AWS.Data.Log.ToLog Network.AWS.CognitoIdentityProvider.Types.UserImportJobStatusType.UserImportJobStatusType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.CognitoIdentityProvider.Types.UserImportJobStatusType.UserImportJobStatusType
instance Network.AWS.Data.Text.ToText Network.AWS.CognitoIdentityProvider.Types.UserImportJobStatusType.UserImportJobStatusType
instance Network.AWS.Data.Text.FromText Network.AWS.CognitoIdentityProvider.Types.UserImportJobStatusType.UserImportJobStatusType
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.Types.UserImportJobStatusType.UserImportJobStatusType
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.Types.UserImportJobStatusType.UserImportJobStatusType
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.Types.UserImportJobStatusType.UserImportJobStatusType
instance GHC.Classes.Ord Network.AWS.CognitoIdentityProvider.Types.UserImportJobStatusType.UserImportJobStatusType
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.Types.UserImportJobStatusType.UserImportJobStatusType
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.Types.UserImportJobStatusType.UserImportJobStatusType
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.Types.UserImportJobStatusType.UserImportJobStatusType


module Network.AWS.CognitoIdentityProvider.Types.UserImportJobType

-- | The user import job type.
--   
--   <i>See:</i> <a>newUserImportJobType</a> smart constructor.
data UserImportJobType
UserImportJobType' :: Maybe UserImportJobStatusType -> Maybe Integer -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Integer -> Maybe POSIX -> Maybe Text -> Maybe POSIX -> Maybe POSIX -> Maybe Text -> Maybe Integer -> UserImportJobType

-- | The status of the user import job. One of the following:
--   
--   <ul>
--   <li><tt>Created</tt> - The job was created but not started.</li>
--   <li><tt>Pending</tt> - A transition state. You have started the job,
--   but it has not begun importing users yet.</li>
--   <li><tt>InProgress</tt> - The job has started, and users are being
--   imported.</li>
--   <li><tt>Stopping</tt> - You have stopped the job, but the job has not
--   stopped importing users yet.</li>
--   <li><tt>Stopped</tt> - You have stopped the job, and the job has
--   stopped importing users.</li>
--   <li><tt>Succeeded</tt> - The job has completed successfully.</li>
--   <li><tt>Failed</tt> - The job has stopped due to an error.</li>
--   <li><tt>Expired</tt> - You created a job, but did not start the job
--   within 24-48 hours. All data associated with the job was deleted, and
--   the job cannot be started.</li>
--   </ul>
[$sel:status:UserImportJobType'] :: UserImportJobType -> Maybe UserImportJobStatusType

-- | The number of users that were skipped.
[$sel:skippedUsers:UserImportJobType'] :: UserImportJobType -> Maybe Integer

-- | The job ID for the user import job.
[$sel:jobId:UserImportJobType'] :: UserImportJobType -> Maybe Text

-- | The user pool ID for the user pool that the users are being imported
--   into.
[$sel:userPoolId:UserImportJobType'] :: UserImportJobType -> Maybe Text

-- | The job name for the user import job.
[$sel:jobName:UserImportJobType'] :: UserImportJobType -> Maybe Text

-- | The pre-signed URL to be used to upload the <tt>.csv</tt> file.
[$sel:preSignedUrl:UserImportJobType'] :: UserImportJobType -> Maybe Text

-- | The number of users that could not be imported.
[$sel:failedUsers:UserImportJobType'] :: UserImportJobType -> Maybe Integer

-- | The date when the user import job was started.
[$sel:startDate:UserImportJobType'] :: UserImportJobType -> Maybe POSIX

-- | The message returned when the user import job is completed.
[$sel:completionMessage:UserImportJobType'] :: UserImportJobType -> Maybe Text

-- | The date the user import job was created.
[$sel:creationDate:UserImportJobType'] :: UserImportJobType -> Maybe POSIX

-- | The date when the user import job was completed.
[$sel:completionDate:UserImportJobType'] :: UserImportJobType -> Maybe POSIX

-- | The role ARN for the Amazon CloudWatch Logging role for the user
--   import job. For more information, see "Creating the CloudWatch Logs
--   IAM Role" in the Amazon Cognito Developer Guide.
[$sel:cloudWatchLogsRoleArn:UserImportJobType'] :: UserImportJobType -> Maybe Text

-- | The number of users that were successfully imported.
[$sel:importedUsers:UserImportJobType'] :: UserImportJobType -> Maybe Integer

-- | Create a value of <a>UserImportJobType</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:UserImportJobType'</a>, <a>userImportJobType_status</a>
--   - The status of the user import job. One of the following:
--   
--   <ul>
--   <li><tt>Created</tt> - The job was created but not started.</li>
--   <li><tt>Pending</tt> - A transition state. You have started the job,
--   but it has not begun importing users yet.</li>
--   <li><tt>InProgress</tt> - The job has started, and users are being
--   imported.</li>
--   <li><tt>Stopping</tt> - You have stopped the job, but the job has not
--   stopped importing users yet.</li>
--   <li><tt>Stopped</tt> - You have stopped the job, and the job has
--   stopped importing users.</li>
--   <li><tt>Succeeded</tt> - The job has completed successfully.</li>
--   <li><tt>Failed</tt> - The job has stopped due to an error.</li>
--   <li><tt>Expired</tt> - You created a job, but did not start the job
--   within 24-48 hours. All data associated with the job was deleted, and
--   the job cannot be started.</li>
--   </ul>
--   
--   <a>$sel:skippedUsers:UserImportJobType'</a>,
--   <a>userImportJobType_skippedUsers</a> - The number of users that were
--   skipped.
--   
--   <a>$sel:jobId:UserImportJobType'</a>, <a>userImportJobType_jobId</a> -
--   The job ID for the user import job.
--   
--   <a>$sel:userPoolId:UserImportJobType'</a>,
--   <a>userImportJobType_userPoolId</a> - The user pool ID for the user
--   pool that the users are being imported into.
--   
--   <a>$sel:jobName:UserImportJobType'</a>,
--   <a>userImportJobType_jobName</a> - The job name for the user import
--   job.
--   
--   <a>$sel:preSignedUrl:UserImportJobType'</a>,
--   <a>userImportJobType_preSignedUrl</a> - The pre-signed URL to be used
--   to upload the <tt>.csv</tt> file.
--   
--   <a>$sel:failedUsers:UserImportJobType'</a>,
--   <a>userImportJobType_failedUsers</a> - The number of users that could
--   not be imported.
--   
--   <a>$sel:startDate:UserImportJobType'</a>,
--   <a>userImportJobType_startDate</a> - The date when the user import job
--   was started.
--   
--   <a>$sel:completionMessage:UserImportJobType'</a>,
--   <a>userImportJobType_completionMessage</a> - The message returned when
--   the user import job is completed.
--   
--   <a>$sel:creationDate:UserImportJobType'</a>,
--   <a>userImportJobType_creationDate</a> - The date the user import job
--   was created.
--   
--   <a>$sel:completionDate:UserImportJobType'</a>,
--   <a>userImportJobType_completionDate</a> - The date when the user
--   import job was completed.
--   
--   <a>$sel:cloudWatchLogsRoleArn:UserImportJobType'</a>,
--   <a>userImportJobType_cloudWatchLogsRoleArn</a> - The role ARN for the
--   Amazon CloudWatch Logging role for the user import job. For more
--   information, see "Creating the CloudWatch Logs IAM Role" in the Amazon
--   Cognito Developer Guide.
--   
--   <a>$sel:importedUsers:UserImportJobType'</a>,
--   <a>userImportJobType_importedUsers</a> - The number of users that were
--   successfully imported.
newUserImportJobType :: UserImportJobType

-- | The status of the user import job. One of the following:
--   
--   <ul>
--   <li><tt>Created</tt> - The job was created but not started.</li>
--   <li><tt>Pending</tt> - A transition state. You have started the job,
--   but it has not begun importing users yet.</li>
--   <li><tt>InProgress</tt> - The job has started, and users are being
--   imported.</li>
--   <li><tt>Stopping</tt> - You have stopped the job, but the job has not
--   stopped importing users yet.</li>
--   <li><tt>Stopped</tt> - You have stopped the job, and the job has
--   stopped importing users.</li>
--   <li><tt>Succeeded</tt> - The job has completed successfully.</li>
--   <li><tt>Failed</tt> - The job has stopped due to an error.</li>
--   <li><tt>Expired</tt> - You created a job, but did not start the job
--   within 24-48 hours. All data associated with the job was deleted, and
--   the job cannot be started.</li>
--   </ul>
userImportJobType_status :: Lens' UserImportJobType (Maybe UserImportJobStatusType)

-- | The number of users that were skipped.
userImportJobType_skippedUsers :: Lens' UserImportJobType (Maybe Integer)

-- | The job ID for the user import job.
userImportJobType_jobId :: Lens' UserImportJobType (Maybe Text)

-- | The user pool ID for the user pool that the users are being imported
--   into.
userImportJobType_userPoolId :: Lens' UserImportJobType (Maybe Text)

-- | The job name for the user import job.
userImportJobType_jobName :: Lens' UserImportJobType (Maybe Text)

-- | The pre-signed URL to be used to upload the <tt>.csv</tt> file.
userImportJobType_preSignedUrl :: Lens' UserImportJobType (Maybe Text)

-- | The number of users that could not be imported.
userImportJobType_failedUsers :: Lens' UserImportJobType (Maybe Integer)

-- | The date when the user import job was started.
userImportJobType_startDate :: Lens' UserImportJobType (Maybe UTCTime)

-- | The message returned when the user import job is completed.
userImportJobType_completionMessage :: Lens' UserImportJobType (Maybe Text)

-- | The date the user import job was created.
userImportJobType_creationDate :: Lens' UserImportJobType (Maybe UTCTime)

-- | The date when the user import job was completed.
userImportJobType_completionDate :: Lens' UserImportJobType (Maybe UTCTime)

-- | The role ARN for the Amazon CloudWatch Logging role for the user
--   import job. For more information, see "Creating the CloudWatch Logs
--   IAM Role" in the Amazon Cognito Developer Guide.
userImportJobType_cloudWatchLogsRoleArn :: Lens' UserImportJobType (Maybe Text)

-- | The number of users that were successfully imported.
userImportJobType_importedUsers :: Lens' UserImportJobType (Maybe Integer)
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.Types.UserImportJobType.UserImportJobType
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.Types.UserImportJobType.UserImportJobType
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.Types.UserImportJobType.UserImportJobType
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.Types.UserImportJobType.UserImportJobType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CognitoIdentityProvider.Types.UserImportJobType.UserImportJobType
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.Types.UserImportJobType.UserImportJobType
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.Types.UserImportJobType.UserImportJobType


module Network.AWS.CognitoIdentityProvider.Types.UserPoolAddOnsType

-- | The user pool add-ons type.
--   
--   <i>See:</i> <a>newUserPoolAddOnsType</a> smart constructor.
data UserPoolAddOnsType
UserPoolAddOnsType' :: AdvancedSecurityModeType -> UserPoolAddOnsType

-- | The advanced security mode.
[$sel:advancedSecurityMode:UserPoolAddOnsType'] :: UserPoolAddOnsType -> AdvancedSecurityModeType

-- | Create a value of <a>UserPoolAddOnsType</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:advancedSecurityMode:UserPoolAddOnsType'</a>,
--   <a>userPoolAddOnsType_advancedSecurityMode</a> - The advanced security
--   mode.
newUserPoolAddOnsType :: AdvancedSecurityModeType -> UserPoolAddOnsType

-- | The advanced security mode.
userPoolAddOnsType_advancedSecurityMode :: Lens' UserPoolAddOnsType AdvancedSecurityModeType
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.Types.UserPoolAddOnsType.UserPoolAddOnsType
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.Types.UserPoolAddOnsType.UserPoolAddOnsType
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.Types.UserPoolAddOnsType.UserPoolAddOnsType
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.Types.UserPoolAddOnsType.UserPoolAddOnsType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CognitoIdentityProvider.Types.UserPoolAddOnsType.UserPoolAddOnsType
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.Types.UserPoolAddOnsType.UserPoolAddOnsType
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.Types.UserPoolAddOnsType.UserPoolAddOnsType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.Types.UserPoolAddOnsType.UserPoolAddOnsType


module Network.AWS.CognitoIdentityProvider.Types.UserPoolClientDescription

-- | The description of the user pool client.
--   
--   <i>See:</i> <a>newUserPoolClientDescription</a> smart constructor.
data UserPoolClientDescription
UserPoolClientDescription' :: Maybe (Sensitive Text) -> Maybe Text -> Maybe Text -> UserPoolClientDescription

-- | The ID of the client associated with the user pool.
[$sel:clientId:UserPoolClientDescription'] :: UserPoolClientDescription -> Maybe (Sensitive Text)

-- | The user pool ID for the user pool where you want to describe the user
--   pool client.
[$sel:userPoolId:UserPoolClientDescription'] :: UserPoolClientDescription -> Maybe Text

-- | The client name from the user pool client description.
[$sel:clientName:UserPoolClientDescription'] :: UserPoolClientDescription -> Maybe Text

-- | Create a value of <a>UserPoolClientDescription</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientId:UserPoolClientDescription'</a>,
--   <a>userPoolClientDescription_clientId</a> - The ID of the client
--   associated with the user pool.
--   
--   <a>$sel:userPoolId:UserPoolClientDescription'</a>,
--   <a>userPoolClientDescription_userPoolId</a> - The user pool ID for the
--   user pool where you want to describe the user pool client.
--   
--   <a>$sel:clientName:UserPoolClientDescription'</a>,
--   <a>userPoolClientDescription_clientName</a> - The client name from the
--   user pool client description.
newUserPoolClientDescription :: UserPoolClientDescription

-- | The ID of the client associated with the user pool.
userPoolClientDescription_clientId :: Lens' UserPoolClientDescription (Maybe Text)

-- | The user pool ID for the user pool where you want to describe the user
--   pool client.
userPoolClientDescription_userPoolId :: Lens' UserPoolClientDescription (Maybe Text)

-- | The client name from the user pool client description.
userPoolClientDescription_clientName :: Lens' UserPoolClientDescription (Maybe Text)
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.Types.UserPoolClientDescription.UserPoolClientDescription
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.Types.UserPoolClientDescription.UserPoolClientDescription
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.Types.UserPoolClientDescription.UserPoolClientDescription
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CognitoIdentityProvider.Types.UserPoolClientDescription.UserPoolClientDescription
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.Types.UserPoolClientDescription.UserPoolClientDescription
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.Types.UserPoolClientDescription.UserPoolClientDescription


module Network.AWS.CognitoIdentityProvider.Types.UserPoolClientType

-- | Contains information about a user pool client.
--   
--   <i>See:</i> <a>newUserPoolClientType</a> smart constructor.
data UserPoolClientType
UserPoolClientType' :: Maybe Natural -> Maybe (Sensitive Text) -> Maybe [ExplicitAuthFlowsType] -> Maybe (Sensitive Text) -> Maybe POSIX -> Maybe [Text] -> Maybe [Text] -> Maybe Bool -> Maybe Text -> Maybe Natural -> Maybe TokenValidityUnitsType -> Maybe Text -> Maybe Bool -> Maybe [Text] -> Maybe PreventUserExistenceErrorTypes -> Maybe Natural -> Maybe POSIX -> Maybe [Text] -> Maybe [Text] -> Maybe [OAuthFlowType] -> Maybe AnalyticsConfigurationType -> Maybe Text -> Maybe [Text] -> UserPoolClientType

-- | The time limit, in days, after which the refresh token is no longer
--   valid and cannot be used.
[$sel:refreshTokenValidity:UserPoolClientType'] :: UserPoolClientType -> Maybe Natural

-- | The ID of the client associated with the user pool.
[$sel:clientId:UserPoolClientType'] :: UserPoolClientType -> Maybe (Sensitive Text)

-- | The authentication flows that are supported by the user pool clients.
--   Flow names without the <tt>ALLOW_</tt> prefix are deprecated in favor
--   of new names with the <tt>ALLOW_</tt> prefix. Note that values with
--   <tt>ALLOW_</tt> prefix cannot be used along with values without
--   <tt>ALLOW_</tt> prefix.
--   
--   Valid values include:
--   
--   <ul>
--   <li><tt>ALLOW_ADMIN_USER_PASSWORD_AUTH</tt>: Enable admin based user
--   password authentication flow <tt>ADMIN_USER_PASSWORD_AUTH</tt>. This
--   setting replaces the <tt>ADMIN_NO_SRP_AUTH</tt> setting. With this
--   authentication flow, Cognito receives the password in the request
--   instead of using the SRP (Secure Remote Password protocol) protocol to
--   verify passwords.</li>
--   <li><tt>ALLOW_CUSTOM_AUTH</tt>: Enable Lambda trigger based
--   authentication.</li>
--   <li><tt>ALLOW_USER_PASSWORD_AUTH</tt>: Enable user password-based
--   authentication. In this flow, Cognito receives the password in the
--   request instead of using the SRP protocol to verify passwords.</li>
--   <li><tt>ALLOW_USER_SRP_AUTH</tt>: Enable SRP based
--   authentication.</li>
--   <li><tt>ALLOW_REFRESH_TOKEN_AUTH</tt>: Enable authflow to refresh
--   tokens.</li>
--   </ul>
[$sel:explicitAuthFlows:UserPoolClientType'] :: UserPoolClientType -> Maybe [ExplicitAuthFlowsType]

-- | The client secret from the user pool request of the client type.
[$sel:clientSecret:UserPoolClientType'] :: UserPoolClientType -> Maybe (Sensitive Text)

-- | The date the user pool client was last modified.
[$sel:lastModifiedDate:UserPoolClientType'] :: UserPoolClientType -> Maybe POSIX

-- | A list of provider names for the identity providers that are supported
--   on this client.
[$sel:supportedIdentityProviders:UserPoolClientType'] :: UserPoolClientType -> Maybe [Text]

-- | A list of allowed logout URLs for the identity providers.
[$sel:logoutURLs:UserPoolClientType'] :: UserPoolClientType -> Maybe [Text]

-- | Set to true if the client is allowed to follow the OAuth protocol when
--   interacting with Cognito user pools.
[$sel:allowedOAuthFlowsUserPoolClient:UserPoolClientType'] :: UserPoolClientType -> Maybe Bool

-- | The user pool ID for the user pool client.
[$sel:userPoolId:UserPoolClientType'] :: UserPoolClientType -> Maybe Text

-- | The time limit, specified by tokenValidityUnits, defaulting to hours,
--   after which the refresh token is no longer valid and cannot be used.
[$sel:idTokenValidity:UserPoolClientType'] :: UserPoolClientType -> Maybe Natural

-- | The time units used to specify the token validity times of their
--   respective token.
[$sel:tokenValidityUnits:UserPoolClientType'] :: UserPoolClientType -> Maybe TokenValidityUnitsType

-- | The default redirect URI. Must be in the <tt>CallbackURLs</tt> list.
--   
--   A redirect URI must:
--   
--   <ul>
--   <li>Be an absolute URI.</li>
--   <li>Be registered with the authorization server.</li>
--   <li>Not include a fragment component.</li>
--   </ul>
--   
--   See <a>OAuth 2.0 - Redirection Endpoint</a>.
--   
--   Amazon Cognito requires HTTPS over HTTP except for http://localhost
--   for testing purposes only.
--   
--   App callback URLs such as myapp://example are also supported.
[$sel:defaultRedirectURI:UserPoolClientType'] :: UserPoolClientType -> Maybe Text

-- | Indicates whether token revocation is enabled for the user pool
--   client. When you create a new user pool client, token revocation is
--   enabled by default. For more information about revoking tokens, see
--   <a>RevokeToken</a>.
[$sel:enableTokenRevocation:UserPoolClientType'] :: UserPoolClientType -> Maybe Bool

-- | The writeable attributes.
[$sel:writeAttributes:UserPoolClientType'] :: UserPoolClientType -> Maybe [Text]

-- | Use this setting to choose which errors and responses are returned by
--   Cognito APIs during authentication, account confirmation, and password
--   recovery when the user does not exist in the user pool. When set to
--   <tt>ENABLED</tt> and the user does not exist, authentication returns
--   an error indicating either the username or password was incorrect, and
--   account confirmation and password recovery return a response
--   indicating a code was sent to a simulated destination. When set to
--   <tt>LEGACY</tt>, those APIs will return a
--   <tt>UserNotFoundException</tt> exception if the user does not exist in
--   the user pool.
--   
--   Valid values include:
--   
--   <ul>
--   <li><tt>ENABLED</tt> - This prevents user existence-related
--   errors.</li>
--   <li><tt>LEGACY</tt> - This represents the old behavior of Cognito
--   where user existence related errors are not prevented.</li>
--   </ul>
--   
--   After February 15th 2020, the value of
--   <tt>PreventUserExistenceErrors</tt> will default to <tt>ENABLED</tt>
--   for newly created user pool clients if no value is provided.
[$sel:preventUserExistenceErrors:UserPoolClientType'] :: UserPoolClientType -> Maybe PreventUserExistenceErrorTypes

-- | The time limit, specified by tokenValidityUnits, defaulting to hours,
--   after which the access token is no longer valid and cannot be used.
[$sel:accessTokenValidity:UserPoolClientType'] :: UserPoolClientType -> Maybe Natural

-- | The date the user pool client was created.
[$sel:creationDate:UserPoolClientType'] :: UserPoolClientType -> Maybe POSIX

-- | The Read-only attributes.
[$sel:readAttributes:UserPoolClientType'] :: UserPoolClientType -> Maybe [Text]

-- | The allowed OAuth scopes. Possible values provided by OAuth are:
--   <tt>phone</tt>, <tt>email</tt>, <tt>openid</tt>, and <tt>profile</tt>.
--   Possible values provided by Amazon Web Services are:
--   <tt>aws.cognito.signin.user.admin</tt>. Custom scopes created in
--   Resource Servers are also supported.
[$sel:allowedOAuthScopes:UserPoolClientType'] :: UserPoolClientType -> Maybe [Text]

-- | The allowed OAuth flows.
--   
--   Set to <tt>code</tt> to initiate a code grant flow, which provides an
--   authorization code as the response. This code can be exchanged for
--   access tokens with the token endpoint.
--   
--   Set to <tt>implicit</tt> to specify that the client should get the
--   access token (and, optionally, ID token, based on scopes) directly.
--   
--   Set to <tt>client_credentials</tt> to specify that the client should
--   get the access token (and, optionally, ID token, based on scopes) from
--   the token endpoint using a combination of client and client_secret.
[$sel:allowedOAuthFlows:UserPoolClientType'] :: UserPoolClientType -> Maybe [OAuthFlowType]

-- | The Amazon Pinpoint analytics configuration for the user pool client.
--   
--   Cognito User Pools only supports sending events to Amazon Pinpoint
--   projects in the US East (N. Virginia) us-east-1 Region, regardless of
--   the region in which the user pool resides.
[$sel:analyticsConfiguration:UserPoolClientType'] :: UserPoolClientType -> Maybe AnalyticsConfigurationType

-- | The client name from the user pool request of the client type.
[$sel:clientName:UserPoolClientType'] :: UserPoolClientType -> Maybe Text

-- | A list of allowed redirect (callback) URLs for the identity providers.
--   
--   A redirect URI must:
--   
--   <ul>
--   <li>Be an absolute URI.</li>
--   <li>Be registered with the authorization server.</li>
--   <li>Not include a fragment component.</li>
--   </ul>
--   
--   See <a>OAuth 2.0 - Redirection Endpoint</a>.
--   
--   Amazon Cognito requires HTTPS over HTTP except for http://localhost
--   for testing purposes only.
--   
--   App callback URLs such as myapp://example are also supported.
[$sel:callbackURLs:UserPoolClientType'] :: UserPoolClientType -> Maybe [Text]

-- | Create a value of <a>UserPoolClientType</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:refreshTokenValidity:UserPoolClientType'</a>,
--   <a>userPoolClientType_refreshTokenValidity</a> - The time limit, in
--   days, after which the refresh token is no longer valid and cannot be
--   used.
--   
--   <a>$sel:clientId:UserPoolClientType'</a>,
--   <a>userPoolClientType_clientId</a> - The ID of the client associated
--   with the user pool.
--   
--   <a>$sel:explicitAuthFlows:UserPoolClientType'</a>,
--   <a>userPoolClientType_explicitAuthFlows</a> - The authentication flows
--   that are supported by the user pool clients. Flow names without the
--   <tt>ALLOW_</tt> prefix are deprecated in favor of new names with the
--   <tt>ALLOW_</tt> prefix. Note that values with <tt>ALLOW_</tt> prefix
--   cannot be used along with values without <tt>ALLOW_</tt> prefix.
--   
--   Valid values include:
--   
--   <ul>
--   <li><tt>ALLOW_ADMIN_USER_PASSWORD_AUTH</tt>: Enable admin based user
--   password authentication flow <tt>ADMIN_USER_PASSWORD_AUTH</tt>. This
--   setting replaces the <tt>ADMIN_NO_SRP_AUTH</tt> setting. With this
--   authentication flow, Cognito receives the password in the request
--   instead of using the SRP (Secure Remote Password protocol) protocol to
--   verify passwords.</li>
--   <li><tt>ALLOW_CUSTOM_AUTH</tt>: Enable Lambda trigger based
--   authentication.</li>
--   <li><tt>ALLOW_USER_PASSWORD_AUTH</tt>: Enable user password-based
--   authentication. In this flow, Cognito receives the password in the
--   request instead of using the SRP protocol to verify passwords.</li>
--   <li><tt>ALLOW_USER_SRP_AUTH</tt>: Enable SRP based
--   authentication.</li>
--   <li><tt>ALLOW_REFRESH_TOKEN_AUTH</tt>: Enable authflow to refresh
--   tokens.</li>
--   </ul>
--   
--   <a>$sel:clientSecret:UserPoolClientType'</a>,
--   <a>userPoolClientType_clientSecret</a> - The client secret from the
--   user pool request of the client type.
--   
--   <a>$sel:lastModifiedDate:UserPoolClientType'</a>,
--   <a>userPoolClientType_lastModifiedDate</a> - The date the user pool
--   client was last modified.
--   
--   <a>$sel:supportedIdentityProviders:UserPoolClientType'</a>,
--   <a>userPoolClientType_supportedIdentityProviders</a> - A list of
--   provider names for the identity providers that are supported on this
--   client.
--   
--   <a>$sel:logoutURLs:UserPoolClientType'</a>,
--   <a>userPoolClientType_logoutURLs</a> - A list of allowed logout URLs
--   for the identity providers.
--   
--   <a>$sel:allowedOAuthFlowsUserPoolClient:UserPoolClientType'</a>,
--   <a>userPoolClientType_allowedOAuthFlowsUserPoolClient</a> - Set to
--   true if the client is allowed to follow the OAuth protocol when
--   interacting with Cognito user pools.
--   
--   <a>$sel:userPoolId:UserPoolClientType'</a>,
--   <a>userPoolClientType_userPoolId</a> - The user pool ID for the user
--   pool client.
--   
--   <a>$sel:idTokenValidity:UserPoolClientType'</a>,
--   <a>userPoolClientType_idTokenValidity</a> - The time limit, specified
--   by tokenValidityUnits, defaulting to hours, after which the refresh
--   token is no longer valid and cannot be used.
--   
--   <a>$sel:tokenValidityUnits:UserPoolClientType'</a>,
--   <a>userPoolClientType_tokenValidityUnits</a> - The time units used to
--   specify the token validity times of their respective token.
--   
--   <a>$sel:defaultRedirectURI:UserPoolClientType'</a>,
--   <a>userPoolClientType_defaultRedirectURI</a> - The default redirect
--   URI. Must be in the <tt>CallbackURLs</tt> list.
--   
--   A redirect URI must:
--   
--   <ul>
--   <li>Be an absolute URI.</li>
--   <li>Be registered with the authorization server.</li>
--   <li>Not include a fragment component.</li>
--   </ul>
--   
--   See <a>OAuth 2.0 - Redirection Endpoint</a>.
--   
--   Amazon Cognito requires HTTPS over HTTP except for http://localhost
--   for testing purposes only.
--   
--   App callback URLs such as myapp://example are also supported.
--   
--   <a>$sel:enableTokenRevocation:UserPoolClientType'</a>,
--   <a>userPoolClientType_enableTokenRevocation</a> - Indicates whether
--   token revocation is enabled for the user pool client. When you create
--   a new user pool client, token revocation is enabled by default. For
--   more information about revoking tokens, see <a>RevokeToken</a>.
--   
--   <a>$sel:writeAttributes:UserPoolClientType'</a>,
--   <a>userPoolClientType_writeAttributes</a> - The writeable attributes.
--   
--   <a>$sel:preventUserExistenceErrors:UserPoolClientType'</a>,
--   <a>userPoolClientType_preventUserExistenceErrors</a> - Use this
--   setting to choose which errors and responses are returned by Cognito
--   APIs during authentication, account confirmation, and password
--   recovery when the user does not exist in the user pool. When set to
--   <tt>ENABLED</tt> and the user does not exist, authentication returns
--   an error indicating either the username or password was incorrect, and
--   account confirmation and password recovery return a response
--   indicating a code was sent to a simulated destination. When set to
--   <tt>LEGACY</tt>, those APIs will return a
--   <tt>UserNotFoundException</tt> exception if the user does not exist in
--   the user pool.
--   
--   Valid values include:
--   
--   <ul>
--   <li><tt>ENABLED</tt> - This prevents user existence-related
--   errors.</li>
--   <li><tt>LEGACY</tt> - This represents the old behavior of Cognito
--   where user existence related errors are not prevented.</li>
--   </ul>
--   
--   After February 15th 2020, the value of
--   <tt>PreventUserExistenceErrors</tt> will default to <tt>ENABLED</tt>
--   for newly created user pool clients if no value is provided.
--   
--   <a>$sel:accessTokenValidity:UserPoolClientType'</a>,
--   <a>userPoolClientType_accessTokenValidity</a> - The time limit,
--   specified by tokenValidityUnits, defaulting to hours, after which the
--   access token is no longer valid and cannot be used.
--   
--   <a>$sel:creationDate:UserPoolClientType'</a>,
--   <a>userPoolClientType_creationDate</a> - The date the user pool client
--   was created.
--   
--   <a>$sel:readAttributes:UserPoolClientType'</a>,
--   <a>userPoolClientType_readAttributes</a> - The Read-only attributes.
--   
--   <a>$sel:allowedOAuthScopes:UserPoolClientType'</a>,
--   <a>userPoolClientType_allowedOAuthScopes</a> - The allowed OAuth
--   scopes. Possible values provided by OAuth are: <tt>phone</tt>,
--   <tt>email</tt>, <tt>openid</tt>, and <tt>profile</tt>. Possible values
--   provided by Amazon Web Services are:
--   <tt>aws.cognito.signin.user.admin</tt>. Custom scopes created in
--   Resource Servers are also supported.
--   
--   <a>$sel:allowedOAuthFlows:UserPoolClientType'</a>,
--   <a>userPoolClientType_allowedOAuthFlows</a> - The allowed OAuth flows.
--   
--   Set to <tt>code</tt> to initiate a code grant flow, which provides an
--   authorization code as the response. This code can be exchanged for
--   access tokens with the token endpoint.
--   
--   Set to <tt>implicit</tt> to specify that the client should get the
--   access token (and, optionally, ID token, based on scopes) directly.
--   
--   Set to <tt>client_credentials</tt> to specify that the client should
--   get the access token (and, optionally, ID token, based on scopes) from
--   the token endpoint using a combination of client and client_secret.
--   
--   <a>$sel:analyticsConfiguration:UserPoolClientType'</a>,
--   <a>userPoolClientType_analyticsConfiguration</a> - The Amazon Pinpoint
--   analytics configuration for the user pool client.
--   
--   Cognito User Pools only supports sending events to Amazon Pinpoint
--   projects in the US East (N. Virginia) us-east-1 Region, regardless of
--   the region in which the user pool resides.
--   
--   <a>$sel:clientName:UserPoolClientType'</a>,
--   <a>userPoolClientType_clientName</a> - The client name from the user
--   pool request of the client type.
--   
--   <a>$sel:callbackURLs:UserPoolClientType'</a>,
--   <a>userPoolClientType_callbackURLs</a> - A list of allowed redirect
--   (callback) URLs for the identity providers.
--   
--   A redirect URI must:
--   
--   <ul>
--   <li>Be an absolute URI.</li>
--   <li>Be registered with the authorization server.</li>
--   <li>Not include a fragment component.</li>
--   </ul>
--   
--   See <a>OAuth 2.0 - Redirection Endpoint</a>.
--   
--   Amazon Cognito requires HTTPS over HTTP except for http://localhost
--   for testing purposes only.
--   
--   App callback URLs such as myapp://example are also supported.
newUserPoolClientType :: UserPoolClientType

-- | The time limit, in days, after which the refresh token is no longer
--   valid and cannot be used.
userPoolClientType_refreshTokenValidity :: Lens' UserPoolClientType (Maybe Natural)

-- | The ID of the client associated with the user pool.
userPoolClientType_clientId :: Lens' UserPoolClientType (Maybe Text)

-- | The authentication flows that are supported by the user pool clients.
--   Flow names without the <tt>ALLOW_</tt> prefix are deprecated in favor
--   of new names with the <tt>ALLOW_</tt> prefix. Note that values with
--   <tt>ALLOW_</tt> prefix cannot be used along with values without
--   <tt>ALLOW_</tt> prefix.
--   
--   Valid values include:
--   
--   <ul>
--   <li><tt>ALLOW_ADMIN_USER_PASSWORD_AUTH</tt>: Enable admin based user
--   password authentication flow <tt>ADMIN_USER_PASSWORD_AUTH</tt>. This
--   setting replaces the <tt>ADMIN_NO_SRP_AUTH</tt> setting. With this
--   authentication flow, Cognito receives the password in the request
--   instead of using the SRP (Secure Remote Password protocol) protocol to
--   verify passwords.</li>
--   <li><tt>ALLOW_CUSTOM_AUTH</tt>: Enable Lambda trigger based
--   authentication.</li>
--   <li><tt>ALLOW_USER_PASSWORD_AUTH</tt>: Enable user password-based
--   authentication. In this flow, Cognito receives the password in the
--   request instead of using the SRP protocol to verify passwords.</li>
--   <li><tt>ALLOW_USER_SRP_AUTH</tt>: Enable SRP based
--   authentication.</li>
--   <li><tt>ALLOW_REFRESH_TOKEN_AUTH</tt>: Enable authflow to refresh
--   tokens.</li>
--   </ul>
userPoolClientType_explicitAuthFlows :: Lens' UserPoolClientType (Maybe [ExplicitAuthFlowsType])

-- | The client secret from the user pool request of the client type.
userPoolClientType_clientSecret :: Lens' UserPoolClientType (Maybe Text)

-- | The date the user pool client was last modified.
userPoolClientType_lastModifiedDate :: Lens' UserPoolClientType (Maybe UTCTime)

-- | A list of provider names for the identity providers that are supported
--   on this client.
userPoolClientType_supportedIdentityProviders :: Lens' UserPoolClientType (Maybe [Text])

-- | A list of allowed logout URLs for the identity providers.
userPoolClientType_logoutURLs :: Lens' UserPoolClientType (Maybe [Text])

-- | Set to true if the client is allowed to follow the OAuth protocol when
--   interacting with Cognito user pools.
userPoolClientType_allowedOAuthFlowsUserPoolClient :: Lens' UserPoolClientType (Maybe Bool)

-- | The user pool ID for the user pool client.
userPoolClientType_userPoolId :: Lens' UserPoolClientType (Maybe Text)

-- | The time limit, specified by tokenValidityUnits, defaulting to hours,
--   after which the refresh token is no longer valid and cannot be used.
userPoolClientType_idTokenValidity :: Lens' UserPoolClientType (Maybe Natural)

-- | The time units used to specify the token validity times of their
--   respective token.
userPoolClientType_tokenValidityUnits :: Lens' UserPoolClientType (Maybe TokenValidityUnitsType)

-- | The default redirect URI. Must be in the <tt>CallbackURLs</tt> list.
--   
--   A redirect URI must:
--   
--   <ul>
--   <li>Be an absolute URI.</li>
--   <li>Be registered with the authorization server.</li>
--   <li>Not include a fragment component.</li>
--   </ul>
--   
--   See <a>OAuth 2.0 - Redirection Endpoint</a>.
--   
--   Amazon Cognito requires HTTPS over HTTP except for http://localhost
--   for testing purposes only.
--   
--   App callback URLs such as myapp://example are also supported.
userPoolClientType_defaultRedirectURI :: Lens' UserPoolClientType (Maybe Text)

-- | Indicates whether token revocation is enabled for the user pool
--   client. When you create a new user pool client, token revocation is
--   enabled by default. For more information about revoking tokens, see
--   <a>RevokeToken</a>.
userPoolClientType_enableTokenRevocation :: Lens' UserPoolClientType (Maybe Bool)

-- | The writeable attributes.
userPoolClientType_writeAttributes :: Lens' UserPoolClientType (Maybe [Text])

-- | Use this setting to choose which errors and responses are returned by
--   Cognito APIs during authentication, account confirmation, and password
--   recovery when the user does not exist in the user pool. When set to
--   <tt>ENABLED</tt> and the user does not exist, authentication returns
--   an error indicating either the username or password was incorrect, and
--   account confirmation and password recovery return a response
--   indicating a code was sent to a simulated destination. When set to
--   <tt>LEGACY</tt>, those APIs will return a
--   <tt>UserNotFoundException</tt> exception if the user does not exist in
--   the user pool.
--   
--   Valid values include:
--   
--   <ul>
--   <li><tt>ENABLED</tt> - This prevents user existence-related
--   errors.</li>
--   <li><tt>LEGACY</tt> - This represents the old behavior of Cognito
--   where user existence related errors are not prevented.</li>
--   </ul>
--   
--   After February 15th 2020, the value of
--   <tt>PreventUserExistenceErrors</tt> will default to <tt>ENABLED</tt>
--   for newly created user pool clients if no value is provided.
userPoolClientType_preventUserExistenceErrors :: Lens' UserPoolClientType (Maybe PreventUserExistenceErrorTypes)

-- | The time limit, specified by tokenValidityUnits, defaulting to hours,
--   after which the access token is no longer valid and cannot be used.
userPoolClientType_accessTokenValidity :: Lens' UserPoolClientType (Maybe Natural)

-- | The date the user pool client was created.
userPoolClientType_creationDate :: Lens' UserPoolClientType (Maybe UTCTime)

-- | The Read-only attributes.
userPoolClientType_readAttributes :: Lens' UserPoolClientType (Maybe [Text])

-- | The allowed OAuth scopes. Possible values provided by OAuth are:
--   <tt>phone</tt>, <tt>email</tt>, <tt>openid</tt>, and <tt>profile</tt>.
--   Possible values provided by Amazon Web Services are:
--   <tt>aws.cognito.signin.user.admin</tt>. Custom scopes created in
--   Resource Servers are also supported.
userPoolClientType_allowedOAuthScopes :: Lens' UserPoolClientType (Maybe [Text])

-- | The allowed OAuth flows.
--   
--   Set to <tt>code</tt> to initiate a code grant flow, which provides an
--   authorization code as the response. This code can be exchanged for
--   access tokens with the token endpoint.
--   
--   Set to <tt>implicit</tt> to specify that the client should get the
--   access token (and, optionally, ID token, based on scopes) directly.
--   
--   Set to <tt>client_credentials</tt> to specify that the client should
--   get the access token (and, optionally, ID token, based on scopes) from
--   the token endpoint using a combination of client and client_secret.
userPoolClientType_allowedOAuthFlows :: Lens' UserPoolClientType (Maybe [OAuthFlowType])

-- | The Amazon Pinpoint analytics configuration for the user pool client.
--   
--   Cognito User Pools only supports sending events to Amazon Pinpoint
--   projects in the US East (N. Virginia) us-east-1 Region, regardless of
--   the region in which the user pool resides.
userPoolClientType_analyticsConfiguration :: Lens' UserPoolClientType (Maybe AnalyticsConfigurationType)

-- | The client name from the user pool request of the client type.
userPoolClientType_clientName :: Lens' UserPoolClientType (Maybe Text)

-- | A list of allowed redirect (callback) URLs for the identity providers.
--   
--   A redirect URI must:
--   
--   <ul>
--   <li>Be an absolute URI.</li>
--   <li>Be registered with the authorization server.</li>
--   <li>Not include a fragment component.</li>
--   </ul>
--   
--   See <a>OAuth 2.0 - Redirection Endpoint</a>.
--   
--   Amazon Cognito requires HTTPS over HTTP except for http://localhost
--   for testing purposes only.
--   
--   App callback URLs such as myapp://example are also supported.
userPoolClientType_callbackURLs :: Lens' UserPoolClientType (Maybe [Text])
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.Types.UserPoolClientType.UserPoolClientType
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.Types.UserPoolClientType.UserPoolClientType
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.Types.UserPoolClientType.UserPoolClientType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CognitoIdentityProvider.Types.UserPoolClientType.UserPoolClientType
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.Types.UserPoolClientType.UserPoolClientType
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.Types.UserPoolClientType.UserPoolClientType


module Network.AWS.CognitoIdentityProvider.Types.UserPoolDescriptionType

-- | A user pool description.
--   
--   <i>See:</i> <a>newUserPoolDescriptionType</a> smart constructor.
data UserPoolDescriptionType
UserPoolDescriptionType' :: Maybe StatusType -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe LambdaConfigType -> UserPoolDescriptionType

-- | The user pool status in a user pool description.
[$sel:status:UserPoolDescriptionType'] :: UserPoolDescriptionType -> Maybe StatusType

-- | The date the user pool description was last modified.
[$sel:lastModifiedDate:UserPoolDescriptionType'] :: UserPoolDescriptionType -> Maybe POSIX

-- | The name in a user pool description.
[$sel:name:UserPoolDescriptionType'] :: UserPoolDescriptionType -> Maybe Text

-- | The ID in a user pool description.
[$sel:id:UserPoolDescriptionType'] :: UserPoolDescriptionType -> Maybe Text

-- | The date the user pool description was created.
[$sel:creationDate:UserPoolDescriptionType'] :: UserPoolDescriptionType -> Maybe POSIX

-- | The Lambda configuration information in a user pool description.
[$sel:lambdaConfig:UserPoolDescriptionType'] :: UserPoolDescriptionType -> Maybe LambdaConfigType

-- | Create a value of <a>UserPoolDescriptionType</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:UserPoolDescriptionType'</a>,
--   <a>userPoolDescriptionType_status</a> - The user pool status in a user
--   pool description.
--   
--   <a>$sel:lastModifiedDate:UserPoolDescriptionType'</a>,
--   <a>userPoolDescriptionType_lastModifiedDate</a> - The date the user
--   pool description was last modified.
--   
--   <a>$sel:name:UserPoolDescriptionType'</a>,
--   <a>userPoolDescriptionType_name</a> - The name in a user pool
--   description.
--   
--   <a>$sel:id:UserPoolDescriptionType'</a>,
--   <a>userPoolDescriptionType_id</a> - The ID in a user pool description.
--   
--   <a>$sel:creationDate:UserPoolDescriptionType'</a>,
--   <a>userPoolDescriptionType_creationDate</a> - The date the user pool
--   description was created.
--   
--   <a>$sel:lambdaConfig:UserPoolDescriptionType'</a>,
--   <a>userPoolDescriptionType_lambdaConfig</a> - The Lambda configuration
--   information in a user pool description.
newUserPoolDescriptionType :: UserPoolDescriptionType

-- | The user pool status in a user pool description.
userPoolDescriptionType_status :: Lens' UserPoolDescriptionType (Maybe StatusType)

-- | The date the user pool description was last modified.
userPoolDescriptionType_lastModifiedDate :: Lens' UserPoolDescriptionType (Maybe UTCTime)

-- | The name in a user pool description.
userPoolDescriptionType_name :: Lens' UserPoolDescriptionType (Maybe Text)

-- | The ID in a user pool description.
userPoolDescriptionType_id :: Lens' UserPoolDescriptionType (Maybe Text)

-- | The date the user pool description was created.
userPoolDescriptionType_creationDate :: Lens' UserPoolDescriptionType (Maybe UTCTime)

-- | The Lambda configuration information in a user pool description.
userPoolDescriptionType_lambdaConfig :: Lens' UserPoolDescriptionType (Maybe LambdaConfigType)
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.Types.UserPoolDescriptionType.UserPoolDescriptionType
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.Types.UserPoolDescriptionType.UserPoolDescriptionType
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.Types.UserPoolDescriptionType.UserPoolDescriptionType
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.Types.UserPoolDescriptionType.UserPoolDescriptionType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CognitoIdentityProvider.Types.UserPoolDescriptionType.UserPoolDescriptionType
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.Types.UserPoolDescriptionType.UserPoolDescriptionType
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.Types.UserPoolDescriptionType.UserPoolDescriptionType


module Network.AWS.CognitoIdentityProvider.Types.UserPoolMfaType
newtype UserPoolMfaType
UserPoolMfaType' :: Text -> UserPoolMfaType
[fromUserPoolMfaType] :: UserPoolMfaType -> Text
pattern UserPoolMfaType_OFF :: UserPoolMfaType
pattern UserPoolMfaType_ON :: UserPoolMfaType
pattern UserPoolMfaType_OPTIONAL :: UserPoolMfaType
instance Network.AWS.Data.XML.ToXML Network.AWS.CognitoIdentityProvider.Types.UserPoolMfaType.UserPoolMfaType
instance Network.AWS.Data.XML.FromXML Network.AWS.CognitoIdentityProvider.Types.UserPoolMfaType.UserPoolMfaType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.CognitoIdentityProvider.Types.UserPoolMfaType.UserPoolMfaType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.Types.UserPoolMfaType.UserPoolMfaType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.CognitoIdentityProvider.Types.UserPoolMfaType.UserPoolMfaType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CognitoIdentityProvider.Types.UserPoolMfaType.UserPoolMfaType
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentityProvider.Types.UserPoolMfaType.UserPoolMfaType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.CognitoIdentityProvider.Types.UserPoolMfaType.UserPoolMfaType
instance Network.AWS.Data.Log.ToLog Network.AWS.CognitoIdentityProvider.Types.UserPoolMfaType.UserPoolMfaType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.CognitoIdentityProvider.Types.UserPoolMfaType.UserPoolMfaType
instance Network.AWS.Data.Text.ToText Network.AWS.CognitoIdentityProvider.Types.UserPoolMfaType.UserPoolMfaType
instance Network.AWS.Data.Text.FromText Network.AWS.CognitoIdentityProvider.Types.UserPoolMfaType.UserPoolMfaType
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.Types.UserPoolMfaType.UserPoolMfaType
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.Types.UserPoolMfaType.UserPoolMfaType
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.Types.UserPoolMfaType.UserPoolMfaType
instance GHC.Classes.Ord Network.AWS.CognitoIdentityProvider.Types.UserPoolMfaType.UserPoolMfaType
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.Types.UserPoolMfaType.UserPoolMfaType
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.Types.UserPoolMfaType.UserPoolMfaType
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.Types.UserPoolMfaType.UserPoolMfaType


module Network.AWS.CognitoIdentityProvider.Types.UserPoolPolicyType

-- | The policy associated with a user pool.
--   
--   <i>See:</i> <a>newUserPoolPolicyType</a> smart constructor.
data UserPoolPolicyType
UserPoolPolicyType' :: Maybe PasswordPolicyType -> UserPoolPolicyType

-- | The password policy.
[$sel:passwordPolicy:UserPoolPolicyType'] :: UserPoolPolicyType -> Maybe PasswordPolicyType

-- | Create a value of <a>UserPoolPolicyType</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:passwordPolicy:UserPoolPolicyType'</a>,
--   <a>userPoolPolicyType_passwordPolicy</a> - The password policy.
newUserPoolPolicyType :: UserPoolPolicyType

-- | The password policy.
userPoolPolicyType_passwordPolicy :: Lens' UserPoolPolicyType (Maybe PasswordPolicyType)
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.Types.UserPoolPolicyType.UserPoolPolicyType
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.Types.UserPoolPolicyType.UserPoolPolicyType
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.Types.UserPoolPolicyType.UserPoolPolicyType
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.Types.UserPoolPolicyType.UserPoolPolicyType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CognitoIdentityProvider.Types.UserPoolPolicyType.UserPoolPolicyType
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.Types.UserPoolPolicyType.UserPoolPolicyType
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.Types.UserPoolPolicyType.UserPoolPolicyType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.Types.UserPoolPolicyType.UserPoolPolicyType


module Network.AWS.CognitoIdentityProvider.Types.UserStatusType
newtype UserStatusType
UserStatusType' :: Text -> UserStatusType
[fromUserStatusType] :: UserStatusType -> Text
pattern UserStatusType_ARCHIVED :: UserStatusType
pattern UserStatusType_COMPROMISED :: UserStatusType
pattern UserStatusType_CONFIRMED :: UserStatusType
pattern UserStatusType_FORCE_CHANGE_PASSWORD :: UserStatusType
pattern UserStatusType_RESET_REQUIRED :: UserStatusType
pattern UserStatusType_UNCONFIRMED :: UserStatusType
pattern UserStatusType_UNKNOWN :: UserStatusType
instance Network.AWS.Data.XML.ToXML Network.AWS.CognitoIdentityProvider.Types.UserStatusType.UserStatusType
instance Network.AWS.Data.XML.FromXML Network.AWS.CognitoIdentityProvider.Types.UserStatusType.UserStatusType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.CognitoIdentityProvider.Types.UserStatusType.UserStatusType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.Types.UserStatusType.UserStatusType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.CognitoIdentityProvider.Types.UserStatusType.UserStatusType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CognitoIdentityProvider.Types.UserStatusType.UserStatusType
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentityProvider.Types.UserStatusType.UserStatusType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.CognitoIdentityProvider.Types.UserStatusType.UserStatusType
instance Network.AWS.Data.Log.ToLog Network.AWS.CognitoIdentityProvider.Types.UserStatusType.UserStatusType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.CognitoIdentityProvider.Types.UserStatusType.UserStatusType
instance Network.AWS.Data.Text.ToText Network.AWS.CognitoIdentityProvider.Types.UserStatusType.UserStatusType
instance Network.AWS.Data.Text.FromText Network.AWS.CognitoIdentityProvider.Types.UserStatusType.UserStatusType
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.Types.UserStatusType.UserStatusType
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.Types.UserStatusType.UserStatusType
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.Types.UserStatusType.UserStatusType
instance GHC.Classes.Ord Network.AWS.CognitoIdentityProvider.Types.UserStatusType.UserStatusType
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.Types.UserStatusType.UserStatusType
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.Types.UserStatusType.UserStatusType
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.Types.UserStatusType.UserStatusType


module Network.AWS.CognitoIdentityProvider.Types.UserType

-- | The user type.
--   
--   <i>See:</i> <a>newUserType</a> smart constructor.
data UserType
UserType' :: Maybe Bool -> Maybe UserStatusType -> Maybe (Sensitive Text) -> Maybe POSIX -> Maybe [AttributeType] -> Maybe [MFAOptionType] -> Maybe POSIX -> UserType

-- | Specifies whether the user is enabled.
[$sel:enabled:UserType'] :: UserType -> Maybe Bool

-- | The user status. Can be one of the following:
--   
--   <ul>
--   <li>UNCONFIRMED - User has been created but not confirmed.</li>
--   <li>CONFIRMED - User has been confirmed.</li>
--   <li>ARCHIVED - User is no longer active.</li>
--   <li>COMPROMISED - User is disabled due to a potential security
--   threat.</li>
--   <li>UNKNOWN - User status is not known.</li>
--   <li>RESET_REQUIRED - User is confirmed, but the user must request a
--   code and reset his or her password before he or she can sign in.</li>
--   <li>FORCE_CHANGE_PASSWORD - The user is confirmed and the user can
--   sign in using a temporary password, but on first sign-in, the user
--   must change his or her password to a new value before doing anything
--   else.</li>
--   </ul>
[$sel:userStatus:UserType'] :: UserType -> Maybe UserStatusType

-- | The user name of the user you wish to describe.
[$sel:username:UserType'] :: UserType -> Maybe (Sensitive Text)

-- | The creation date of the user.
[$sel:userCreateDate:UserType'] :: UserType -> Maybe POSIX

-- | A container with information about the user type attributes.
[$sel:attributes:UserType'] :: UserType -> Maybe [AttributeType]

-- | The MFA options for the user.
[$sel:mfaOptions:UserType'] :: UserType -> Maybe [MFAOptionType]

-- | The last modified date of the user.
[$sel:userLastModifiedDate:UserType'] :: UserType -> Maybe POSIX

-- | Create a value of <a>UserType</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:enabled:UserType'</a>, <a>userType_enabled</a> - Specifies
--   whether the user is enabled.
--   
--   <a>$sel:userStatus:UserType'</a>, <a>userType_userStatus</a> - The
--   user status. Can be one of the following:
--   
--   <ul>
--   <li>UNCONFIRMED - User has been created but not confirmed.</li>
--   <li>CONFIRMED - User has been confirmed.</li>
--   <li>ARCHIVED - User is no longer active.</li>
--   <li>COMPROMISED - User is disabled due to a potential security
--   threat.</li>
--   <li>UNKNOWN - User status is not known.</li>
--   <li>RESET_REQUIRED - User is confirmed, but the user must request a
--   code and reset his or her password before he or she can sign in.</li>
--   <li>FORCE_CHANGE_PASSWORD - The user is confirmed and the user can
--   sign in using a temporary password, but on first sign-in, the user
--   must change his or her password to a new value before doing anything
--   else.</li>
--   </ul>
--   
--   <a>$sel:username:UserType'</a>, <a>userType_username</a> - The user
--   name of the user you wish to describe.
--   
--   <a>$sel:userCreateDate:UserType'</a>, <a>userType_userCreateDate</a> -
--   The creation date of the user.
--   
--   <a>$sel:attributes:UserType'</a>, <a>userType_attributes</a> - A
--   container with information about the user type attributes.
--   
--   <a>$sel:mfaOptions:UserType'</a>, <a>userType_mfaOptions</a> - The MFA
--   options for the user.
--   
--   <a>$sel:userLastModifiedDate:UserType'</a>,
--   <a>userType_userLastModifiedDate</a> - The last modified date of the
--   user.
newUserType :: UserType

-- | Specifies whether the user is enabled.
userType_enabled :: Lens' UserType (Maybe Bool)

-- | The user status. Can be one of the following:
--   
--   <ul>
--   <li>UNCONFIRMED - User has been created but not confirmed.</li>
--   <li>CONFIRMED - User has been confirmed.</li>
--   <li>ARCHIVED - User is no longer active.</li>
--   <li>COMPROMISED - User is disabled due to a potential security
--   threat.</li>
--   <li>UNKNOWN - User status is not known.</li>
--   <li>RESET_REQUIRED - User is confirmed, but the user must request a
--   code and reset his or her password before he or she can sign in.</li>
--   <li>FORCE_CHANGE_PASSWORD - The user is confirmed and the user can
--   sign in using a temporary password, but on first sign-in, the user
--   must change his or her password to a new value before doing anything
--   else.</li>
--   </ul>
userType_userStatus :: Lens' UserType (Maybe UserStatusType)

-- | The user name of the user you wish to describe.
userType_username :: Lens' UserType (Maybe Text)

-- | The creation date of the user.
userType_userCreateDate :: Lens' UserType (Maybe UTCTime)

-- | A container with information about the user type attributes.
userType_attributes :: Lens' UserType (Maybe [AttributeType])

-- | The MFA options for the user.
userType_mfaOptions :: Lens' UserType (Maybe [MFAOptionType])

-- | The last modified date of the user.
userType_userLastModifiedDate :: Lens' UserType (Maybe UTCTime)
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.Types.UserType.UserType
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.Types.UserType.UserType
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.Types.UserType.UserType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CognitoIdentityProvider.Types.UserType.UserType
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.Types.UserType.UserType
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.Types.UserType.UserType


module Network.AWS.CognitoIdentityProvider.Types.UsernameAttributeType
newtype UsernameAttributeType
UsernameAttributeType' :: Text -> UsernameAttributeType
[fromUsernameAttributeType] :: UsernameAttributeType -> Text
pattern UsernameAttributeType_Email :: UsernameAttributeType
pattern UsernameAttributeType_Phone_number :: UsernameAttributeType
instance Network.AWS.Data.XML.ToXML Network.AWS.CognitoIdentityProvider.Types.UsernameAttributeType.UsernameAttributeType
instance Network.AWS.Data.XML.FromXML Network.AWS.CognitoIdentityProvider.Types.UsernameAttributeType.UsernameAttributeType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.CognitoIdentityProvider.Types.UsernameAttributeType.UsernameAttributeType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.Types.UsernameAttributeType.UsernameAttributeType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.CognitoIdentityProvider.Types.UsernameAttributeType.UsernameAttributeType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CognitoIdentityProvider.Types.UsernameAttributeType.UsernameAttributeType
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentityProvider.Types.UsernameAttributeType.UsernameAttributeType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.CognitoIdentityProvider.Types.UsernameAttributeType.UsernameAttributeType
instance Network.AWS.Data.Log.ToLog Network.AWS.CognitoIdentityProvider.Types.UsernameAttributeType.UsernameAttributeType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.CognitoIdentityProvider.Types.UsernameAttributeType.UsernameAttributeType
instance Network.AWS.Data.Text.ToText Network.AWS.CognitoIdentityProvider.Types.UsernameAttributeType.UsernameAttributeType
instance Network.AWS.Data.Text.FromText Network.AWS.CognitoIdentityProvider.Types.UsernameAttributeType.UsernameAttributeType
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.Types.UsernameAttributeType.UsernameAttributeType
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.Types.UsernameAttributeType.UsernameAttributeType
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.Types.UsernameAttributeType.UsernameAttributeType
instance GHC.Classes.Ord Network.AWS.CognitoIdentityProvider.Types.UsernameAttributeType.UsernameAttributeType
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.Types.UsernameAttributeType.UsernameAttributeType
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.Types.UsernameAttributeType.UsernameAttributeType
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.Types.UsernameAttributeType.UsernameAttributeType


module Network.AWS.CognitoIdentityProvider.Types.UsernameConfigurationType

-- | The username configuration type.
--   
--   <i>See:</i> <a>newUsernameConfigurationType</a> smart constructor.
data UsernameConfigurationType
UsernameConfigurationType' :: Bool -> UsernameConfigurationType

-- | Specifies whether username case sensitivity will be applied for all
--   users in the user pool through Cognito APIs.
--   
--   Valid values include:
--   
--   <ul>
--   <li><b><tt>True</tt></b> : Enables case sensitivity for all username
--   input. When this option is set to <tt>True</tt>, users must sign in
--   using the exact capitalization of their given username. For example,
--   “UserName”. This is the default value.</li>
--   <li><b><tt>False</tt></b> : Enables case insensitivity for all
--   username input. For example, when this option is set to
--   <tt>False</tt>, users will be able to sign in using either "username"
--   or "Username". This option also enables both
--   <tt>preferred_username</tt> and <tt>email</tt> alias to be case
--   insensitive, in addition to the <tt>username</tt> attribute.</li>
--   </ul>
[$sel:caseSensitive:UsernameConfigurationType'] :: UsernameConfigurationType -> Bool

-- | Create a value of <a>UsernameConfigurationType</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:caseSensitive:UsernameConfigurationType'</a>,
--   <a>usernameConfigurationType_caseSensitive</a> - Specifies whether
--   username case sensitivity will be applied for all users in the user
--   pool through Cognito APIs.
--   
--   Valid values include:
--   
--   <ul>
--   <li><b><tt>True</tt></b> : Enables case sensitivity for all username
--   input. When this option is set to <tt>True</tt>, users must sign in
--   using the exact capitalization of their given username. For example,
--   “UserName”. This is the default value.</li>
--   <li><b><tt>False</tt></b> : Enables case insensitivity for all
--   username input. For example, when this option is set to
--   <tt>False</tt>, users will be able to sign in using either "username"
--   or "Username". This option also enables both
--   <tt>preferred_username</tt> and <tt>email</tt> alias to be case
--   insensitive, in addition to the <tt>username</tt> attribute.</li>
--   </ul>
newUsernameConfigurationType :: Bool -> UsernameConfigurationType

-- | Specifies whether username case sensitivity will be applied for all
--   users in the user pool through Cognito APIs.
--   
--   Valid values include:
--   
--   <ul>
--   <li><b><tt>True</tt></b> : Enables case sensitivity for all username
--   input. When this option is set to <tt>True</tt>, users must sign in
--   using the exact capitalization of their given username. For example,
--   “UserName”. This is the default value.</li>
--   <li><b><tt>False</tt></b> : Enables case insensitivity for all
--   username input. For example, when this option is set to
--   <tt>False</tt>, users will be able to sign in using either "username"
--   or "Username". This option also enables both
--   <tt>preferred_username</tt> and <tt>email</tt> alias to be case
--   insensitive, in addition to the <tt>username</tt> attribute.</li>
--   </ul>
usernameConfigurationType_caseSensitive :: Lens' UsernameConfigurationType Bool
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.Types.UsernameConfigurationType.UsernameConfigurationType
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.Types.UsernameConfigurationType.UsernameConfigurationType
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.Types.UsernameConfigurationType.UsernameConfigurationType
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.Types.UsernameConfigurationType.UsernameConfigurationType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CognitoIdentityProvider.Types.UsernameConfigurationType.UsernameConfigurationType
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.Types.UsernameConfigurationType.UsernameConfigurationType
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.Types.UsernameConfigurationType.UsernameConfigurationType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.Types.UsernameConfigurationType.UsernameConfigurationType


module Network.AWS.CognitoIdentityProvider.Types.VerificationMessageTemplateType

-- | The template for verification messages.
--   
--   <i>See:</i> <a>newVerificationMessageTemplateType</a> smart
--   constructor.
data VerificationMessageTemplateType
VerificationMessageTemplateType' :: Maybe DefaultEmailOptionType -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> VerificationMessageTemplateType

-- | The default email option.
[$sel:defaultEmailOption:VerificationMessageTemplateType'] :: VerificationMessageTemplateType -> Maybe DefaultEmailOptionType

-- | The subject line for the email message template. EmailSubject is
--   allowed only if <a>EmailSendingAccount</a> is DEVELOPER.
[$sel:emailSubject:VerificationMessageTemplateType'] :: VerificationMessageTemplateType -> Maybe Text

-- | The subject line for the email message template for sending a
--   confirmation link to the user. EmailSubjectByLink is allowed only
--   <a>EmailSendingAccount</a> is DEVELOPER.
[$sel:emailSubjectByLink:VerificationMessageTemplateType'] :: VerificationMessageTemplateType -> Maybe Text

-- | The SMS message template.
[$sel:smsMessage:VerificationMessageTemplateType'] :: VerificationMessageTemplateType -> Maybe Text

-- | The email message template for sending a confirmation link to the
--   user. EmailMessageByLink is allowed only if <a>EmailSendingAccount</a>
--   is DEVELOPER.
[$sel:emailMessageByLink:VerificationMessageTemplateType'] :: VerificationMessageTemplateType -> Maybe Text

-- | The email message template. EmailMessage is allowed only if
--   <a>EmailSendingAccount</a> is DEVELOPER.
[$sel:emailMessage:VerificationMessageTemplateType'] :: VerificationMessageTemplateType -> Maybe Text

-- | Create a value of <a>VerificationMessageTemplateType</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:defaultEmailOption:VerificationMessageTemplateType'</a>,
--   <a>verificationMessageTemplateType_defaultEmailOption</a> - The
--   default email option.
--   
--   <a>$sel:emailSubject:VerificationMessageTemplateType'</a>,
--   <a>verificationMessageTemplateType_emailSubject</a> - The subject line
--   for the email message template. EmailSubject is allowed only if
--   <a>EmailSendingAccount</a> is DEVELOPER.
--   
--   <a>$sel:emailSubjectByLink:VerificationMessageTemplateType'</a>,
--   <a>verificationMessageTemplateType_emailSubjectByLink</a> - The
--   subject line for the email message template for sending a confirmation
--   link to the user. EmailSubjectByLink is allowed only
--   <a>EmailSendingAccount</a> is DEVELOPER.
--   
--   <a>$sel:smsMessage:VerificationMessageTemplateType'</a>,
--   <a>verificationMessageTemplateType_smsMessage</a> - The SMS message
--   template.
--   
--   <a>$sel:emailMessageByLink:VerificationMessageTemplateType'</a>,
--   <a>verificationMessageTemplateType_emailMessageByLink</a> - The email
--   message template for sending a confirmation link to the user.
--   EmailMessageByLink is allowed only if <a>EmailSendingAccount</a> is
--   DEVELOPER.
--   
--   <a>$sel:emailMessage:VerificationMessageTemplateType'</a>,
--   <a>verificationMessageTemplateType_emailMessage</a> - The email
--   message template. EmailMessage is allowed only if
--   <a>EmailSendingAccount</a> is DEVELOPER.
newVerificationMessageTemplateType :: VerificationMessageTemplateType

-- | The default email option.
verificationMessageTemplateType_defaultEmailOption :: Lens' VerificationMessageTemplateType (Maybe DefaultEmailOptionType)

-- | The subject line for the email message template. EmailSubject is
--   allowed only if <a>EmailSendingAccount</a> is DEVELOPER.
verificationMessageTemplateType_emailSubject :: Lens' VerificationMessageTemplateType (Maybe Text)

-- | The subject line for the email message template for sending a
--   confirmation link to the user. EmailSubjectByLink is allowed only
--   <a>EmailSendingAccount</a> is DEVELOPER.
verificationMessageTemplateType_emailSubjectByLink :: Lens' VerificationMessageTemplateType (Maybe Text)

-- | The SMS message template.
verificationMessageTemplateType_smsMessage :: Lens' VerificationMessageTemplateType (Maybe Text)

-- | The email message template for sending a confirmation link to the
--   user. EmailMessageByLink is allowed only if <a>EmailSendingAccount</a>
--   is DEVELOPER.
verificationMessageTemplateType_emailMessageByLink :: Lens' VerificationMessageTemplateType (Maybe Text)

-- | The email message template. EmailMessage is allowed only if
--   <a>EmailSendingAccount</a> is DEVELOPER.
verificationMessageTemplateType_emailMessage :: Lens' VerificationMessageTemplateType (Maybe Text)
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.Types.VerificationMessageTemplateType.VerificationMessageTemplateType
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.Types.VerificationMessageTemplateType.VerificationMessageTemplateType
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.Types.VerificationMessageTemplateType.VerificationMessageTemplateType
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.Types.VerificationMessageTemplateType.VerificationMessageTemplateType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CognitoIdentityProvider.Types.VerificationMessageTemplateType.VerificationMessageTemplateType
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.Types.VerificationMessageTemplateType.VerificationMessageTemplateType
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.Types.VerificationMessageTemplateType.VerificationMessageTemplateType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.Types.VerificationMessageTemplateType.VerificationMessageTemplateType


module Network.AWS.CognitoIdentityProvider.Types.VerifiedAttributeType
newtype VerifiedAttributeType
VerifiedAttributeType' :: Text -> VerifiedAttributeType
[fromVerifiedAttributeType] :: VerifiedAttributeType -> Text
pattern VerifiedAttributeType_Email :: VerifiedAttributeType
pattern VerifiedAttributeType_Phone_number :: VerifiedAttributeType
instance Network.AWS.Data.XML.ToXML Network.AWS.CognitoIdentityProvider.Types.VerifiedAttributeType.VerifiedAttributeType
instance Network.AWS.Data.XML.FromXML Network.AWS.CognitoIdentityProvider.Types.VerifiedAttributeType.VerifiedAttributeType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.CognitoIdentityProvider.Types.VerifiedAttributeType.VerifiedAttributeType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.Types.VerifiedAttributeType.VerifiedAttributeType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.CognitoIdentityProvider.Types.VerifiedAttributeType.VerifiedAttributeType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CognitoIdentityProvider.Types.VerifiedAttributeType.VerifiedAttributeType
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentityProvider.Types.VerifiedAttributeType.VerifiedAttributeType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.CognitoIdentityProvider.Types.VerifiedAttributeType.VerifiedAttributeType
instance Network.AWS.Data.Log.ToLog Network.AWS.CognitoIdentityProvider.Types.VerifiedAttributeType.VerifiedAttributeType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.CognitoIdentityProvider.Types.VerifiedAttributeType.VerifiedAttributeType
instance Network.AWS.Data.Text.ToText Network.AWS.CognitoIdentityProvider.Types.VerifiedAttributeType.VerifiedAttributeType
instance Network.AWS.Data.Text.FromText Network.AWS.CognitoIdentityProvider.Types.VerifiedAttributeType.VerifiedAttributeType
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.Types.VerifiedAttributeType.VerifiedAttributeType
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.Types.VerifiedAttributeType.VerifiedAttributeType
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.Types.VerifiedAttributeType.VerifiedAttributeType
instance GHC.Classes.Ord Network.AWS.CognitoIdentityProvider.Types.VerifiedAttributeType.VerifiedAttributeType
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.Types.VerifiedAttributeType.VerifiedAttributeType
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.Types.VerifiedAttributeType.VerifiedAttributeType
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.Types.VerifiedAttributeType.VerifiedAttributeType


module Network.AWS.CognitoIdentityProvider.Types.UserPoolType

-- | A container for information about the user pool.
--   
--   <i>See:</i> <a>newUserPoolType</a> smart constructor.
data UserPoolType
UserPoolType' :: Maybe StatusType -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe POSIX -> Maybe VerificationMessageTemplateType -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe UserPoolAddOnsType -> Maybe (NonEmpty SchemaAttributeType) -> Maybe Text -> Maybe [UsernameAttributeType] -> Maybe [AliasAttributeType] -> Maybe AccountRecoverySettingType -> Maybe EmailConfigurationType -> Maybe Text -> Maybe Text -> Maybe UserPoolMfaType -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe LambdaConfigType -> Maybe SmsConfigurationType -> Maybe AdminCreateUserConfigType -> Maybe DeviceConfigurationType -> Maybe [VerifiedAttributeType] -> Maybe UserPoolPolicyType -> Maybe UsernameConfigurationType -> UserPoolType

-- | The status of a user pool.
[$sel:status:UserPoolType'] :: UserPoolType -> Maybe StatusType

-- | The tags that are assigned to the user pool. A tag is a label that you
--   can apply to user pools to categorize and manage them in different
--   ways, such as by purpose, owner, environment, or other criteria.
[$sel:userPoolTags:UserPoolType'] :: UserPoolType -> Maybe (HashMap Text Text)

-- | The reason why the email configuration cannot send the messages to
--   your users.
[$sel:emailConfigurationFailure:UserPoolType'] :: UserPoolType -> Maybe Text

-- | The date the user pool was last modified.
[$sel:lastModifiedDate:UserPoolType'] :: UserPoolType -> Maybe POSIX

-- | The template for verification messages.
[$sel:verificationMessageTemplate:UserPoolType'] :: UserPoolType -> Maybe VerificationMessageTemplateType

-- | A number estimating the size of the user pool.
[$sel:estimatedNumberOfUsers:UserPoolType'] :: UserPoolType -> Maybe Int

-- | The Amazon Resource Name (ARN) for the user pool.
[$sel:arn:UserPoolType'] :: UserPoolType -> Maybe Text

-- | Holds the domain prefix if the user pool has a domain associated with
--   it.
[$sel:domain:UserPoolType'] :: UserPoolType -> Maybe Text

-- | A custom domain name that you provide to Amazon Cognito. This
--   parameter applies only if you use a custom domain to host the sign-up
--   and sign-in pages for your application. For example:
--   <tt>auth.example.com</tt>.
--   
--   For more information about adding a custom domain to your user pool,
--   see <a>Using Your Own Domain for the Hosted UI</a>.
[$sel:customDomain:UserPoolType'] :: UserPoolType -> Maybe Text

-- | The contents of the email verification message.
[$sel:emailVerificationMessage:UserPoolType'] :: UserPoolType -> Maybe Text

-- | The contents of the SMS authentication message.
[$sel:smsAuthenticationMessage:UserPoolType'] :: UserPoolType -> Maybe Text

-- | The user pool add-ons.
[$sel:userPoolAddOns:UserPoolType'] :: UserPoolType -> Maybe UserPoolAddOnsType

-- | A container with the schema attributes of a user pool.
[$sel:schemaAttributes:UserPoolType'] :: UserPoolType -> Maybe (NonEmpty SchemaAttributeType)

-- | The subject of the email verification message.
[$sel:emailVerificationSubject:UserPoolType'] :: UserPoolType -> Maybe Text

-- | Specifies whether email addresses or phone numbers can be specified as
--   usernames when a user signs up.
[$sel:usernameAttributes:UserPoolType'] :: UserPoolType -> Maybe [UsernameAttributeType]

-- | Specifies the attributes that are aliased in a user pool.
[$sel:aliasAttributes:UserPoolType'] :: UserPoolType -> Maybe [AliasAttributeType]

-- | Use this setting to define which verified available method a user can
--   use to recover their password when they call <tt>ForgotPassword</tt>.
--   It allows you to define a preferred method when a user has more than
--   one method available. With this setting, SMS does not qualify for a
--   valid password recovery mechanism if the user also has SMS MFA
--   enabled. In the absence of this setting, Cognito uses the legacy
--   behavior to determine the recovery method where SMS is preferred over
--   email.
[$sel:accountRecoverySetting:UserPoolType'] :: UserPoolType -> Maybe AccountRecoverySettingType

-- | The email configuration.
[$sel:emailConfiguration:UserPoolType'] :: UserPoolType -> Maybe EmailConfigurationType

-- | The contents of the SMS verification message.
[$sel:smsVerificationMessage:UserPoolType'] :: UserPoolType -> Maybe Text

-- | The name of the user pool.
[$sel:name:UserPoolType'] :: UserPoolType -> Maybe Text

-- | Can be one of the following values:
--   
--   <ul>
--   <li><tt>OFF</tt> - MFA tokens are not required and cannot be specified
--   during user registration.</li>
--   <li><tt>ON</tt> - MFA tokens are required for all user registrations.
--   You can only specify required when you are initially creating a user
--   pool.</li>
--   <li><tt>OPTIONAL</tt> - Users have the option when registering to
--   create an MFA token.</li>
--   </ul>
[$sel:mfaConfiguration:UserPoolType'] :: UserPoolType -> Maybe UserPoolMfaType

-- | The ID of the user pool.
[$sel:id:UserPoolType'] :: UserPoolType -> Maybe Text

-- | The reason why the SMS configuration cannot send the messages to your
--   users.
--   
--   This message might include comma-separated values to describe why your
--   SMS configuration can't send messages to user pool end users.
--   
--   <ul>
--   <li>InvalidSmsRoleAccessPolicyException - The IAM role which Cognito
--   uses to send SMS messages is not properly configured. For more
--   information, see <a>SmsConfigurationType</a>.</li>
--   <li>SNSSandbox - The account is in SNS Sandbox and messages won’t
--   reach unverified end users. This parameter won’t get populated with
--   SNSSandbox if the IAM user creating the user pool doesn’t have SNS
--   permissions. To learn how to move your account out of the sandbox, see
--   <a>Moving out of the SMS sandbox</a>.</li>
--   </ul>
[$sel:smsConfigurationFailure:UserPoolType'] :: UserPoolType -> Maybe Text

-- | The date the user pool was created.
[$sel:creationDate:UserPoolType'] :: UserPoolType -> Maybe POSIX

-- | The Lambda triggers associated with the user pool.
[$sel:lambdaConfig:UserPoolType'] :: UserPoolType -> Maybe LambdaConfigType

-- | The SMS configuration.
[$sel:smsConfiguration:UserPoolType'] :: UserPoolType -> Maybe SmsConfigurationType

-- | The configuration for <tt>AdminCreateUser</tt> requests.
[$sel:adminCreateUserConfig:UserPoolType'] :: UserPoolType -> Maybe AdminCreateUserConfigType

-- | The device configuration.
[$sel:deviceConfiguration:UserPoolType'] :: UserPoolType -> Maybe DeviceConfigurationType

-- | Specifies the attributes that are auto-verified in a user pool.
[$sel:autoVerifiedAttributes:UserPoolType'] :: UserPoolType -> Maybe [VerifiedAttributeType]

-- | The policies associated with the user pool.
[$sel:policies:UserPoolType'] :: UserPoolType -> Maybe UserPoolPolicyType

-- | You can choose to enable case sensitivity on the username input for
--   the selected sign-in option. For example, when this is set to
--   <tt>False</tt>, users will be able to sign in using either "username"
--   or "Username". This configuration is immutable once it has been set.
--   For more information, see <a>UsernameConfigurationType</a>.
[$sel:usernameConfiguration:UserPoolType'] :: UserPoolType -> Maybe UsernameConfigurationType

-- | Create a value of <a>UserPoolType</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:UserPoolType'</a>, <a>userPoolType_status</a> - The
--   status of a user pool.
--   
--   <a>$sel:userPoolTags:UserPoolType'</a>,
--   <a>userPoolType_userPoolTags</a> - The tags that are assigned to the
--   user pool. A tag is a label that you can apply to user pools to
--   categorize and manage them in different ways, such as by purpose,
--   owner, environment, or other criteria.
--   
--   <a>$sel:emailConfigurationFailure:UserPoolType'</a>,
--   <a>userPoolType_emailConfigurationFailure</a> - The reason why the
--   email configuration cannot send the messages to your users.
--   
--   <a>$sel:lastModifiedDate:UserPoolType'</a>,
--   <a>userPoolType_lastModifiedDate</a> - The date the user pool was last
--   modified.
--   
--   <a>$sel:verificationMessageTemplate:UserPoolType'</a>,
--   <a>userPoolType_verificationMessageTemplate</a> - The template for
--   verification messages.
--   
--   <a>$sel:estimatedNumberOfUsers:UserPoolType'</a>,
--   <a>userPoolType_estimatedNumberOfUsers</a> - A number estimating the
--   size of the user pool.
--   
--   <a>$sel:arn:UserPoolType'</a>, <a>userPoolType_arn</a> - The Amazon
--   Resource Name (ARN) for the user pool.
--   
--   <a>$sel:domain:UserPoolType'</a>, <a>userPoolType_domain</a> - Holds
--   the domain prefix if the user pool has a domain associated with it.
--   
--   <a>$sel:customDomain:UserPoolType'</a>,
--   <a>userPoolType_customDomain</a> - A custom domain name that you
--   provide to Amazon Cognito. This parameter applies only if you use a
--   custom domain to host the sign-up and sign-in pages for your
--   application. For example: <tt>auth.example.com</tt>.
--   
--   For more information about adding a custom domain to your user pool,
--   see <a>Using Your Own Domain for the Hosted UI</a>.
--   
--   <a>$sel:emailVerificationMessage:UserPoolType'</a>,
--   <a>userPoolType_emailVerificationMessage</a> - The contents of the
--   email verification message.
--   
--   <a>$sel:smsAuthenticationMessage:UserPoolType'</a>,
--   <a>userPoolType_smsAuthenticationMessage</a> - The contents of the SMS
--   authentication message.
--   
--   <a>$sel:userPoolAddOns:UserPoolType'</a>,
--   <a>userPoolType_userPoolAddOns</a> - The user pool add-ons.
--   
--   <a>$sel:schemaAttributes:UserPoolType'</a>,
--   <a>userPoolType_schemaAttributes</a> - A container with the schema
--   attributes of a user pool.
--   
--   <a>$sel:emailVerificationSubject:UserPoolType'</a>,
--   <a>userPoolType_emailVerificationSubject</a> - The subject of the
--   email verification message.
--   
--   <a>$sel:usernameAttributes:UserPoolType'</a>,
--   <a>userPoolType_usernameAttributes</a> - Specifies whether email
--   addresses or phone numbers can be specified as usernames when a user
--   signs up.
--   
--   <a>$sel:aliasAttributes:UserPoolType'</a>,
--   <a>userPoolType_aliasAttributes</a> - Specifies the attributes that
--   are aliased in a user pool.
--   
--   <a>$sel:accountRecoverySetting:UserPoolType'</a>,
--   <a>userPoolType_accountRecoverySetting</a> - Use this setting to
--   define which verified available method a user can use to recover their
--   password when they call <tt>ForgotPassword</tt>. It allows you to
--   define a preferred method when a user has more than one method
--   available. With this setting, SMS does not qualify for a valid
--   password recovery mechanism if the user also has SMS MFA enabled. In
--   the absence of this setting, Cognito uses the legacy behavior to
--   determine the recovery method where SMS is preferred over email.
--   
--   <a>$sel:emailConfiguration:UserPoolType'</a>,
--   <a>userPoolType_emailConfiguration</a> - The email configuration.
--   
--   <a>$sel:smsVerificationMessage:UserPoolType'</a>,
--   <a>userPoolType_smsVerificationMessage</a> - The contents of the SMS
--   verification message.
--   
--   <a>$sel:name:UserPoolType'</a>, <a>userPoolType_name</a> - The name of
--   the user pool.
--   
--   <a>$sel:mfaConfiguration:UserPoolType'</a>,
--   <a>userPoolType_mfaConfiguration</a> - Can be one of the following
--   values:
--   
--   <ul>
--   <li><tt>OFF</tt> - MFA tokens are not required and cannot be specified
--   during user registration.</li>
--   <li><tt>ON</tt> - MFA tokens are required for all user registrations.
--   You can only specify required when you are initially creating a user
--   pool.</li>
--   <li><tt>OPTIONAL</tt> - Users have the option when registering to
--   create an MFA token.</li>
--   </ul>
--   
--   <a>$sel:id:UserPoolType'</a>, <a>userPoolType_id</a> - The ID of the
--   user pool.
--   
--   <a>$sel:smsConfigurationFailure:UserPoolType'</a>,
--   <a>userPoolType_smsConfigurationFailure</a> - The reason why the SMS
--   configuration cannot send the messages to your users.
--   
--   This message might include comma-separated values to describe why your
--   SMS configuration can't send messages to user pool end users.
--   
--   <ul>
--   <li>InvalidSmsRoleAccessPolicyException - The IAM role which Cognito
--   uses to send SMS messages is not properly configured. For more
--   information, see <a>SmsConfigurationType</a>.</li>
--   <li>SNSSandbox - The account is in SNS Sandbox and messages won’t
--   reach unverified end users. This parameter won’t get populated with
--   SNSSandbox if the IAM user creating the user pool doesn’t have SNS
--   permissions. To learn how to move your account out of the sandbox, see
--   <a>Moving out of the SMS sandbox</a>.</li>
--   </ul>
--   
--   <a>$sel:creationDate:UserPoolType'</a>,
--   <a>userPoolType_creationDate</a> - The date the user pool was created.
--   
--   <a>$sel:lambdaConfig:UserPoolType'</a>,
--   <a>userPoolType_lambdaConfig</a> - The Lambda triggers associated with
--   the user pool.
--   
--   <a>$sel:smsConfiguration:UserPoolType'</a>,
--   <a>userPoolType_smsConfiguration</a> - The SMS configuration.
--   
--   <a>$sel:adminCreateUserConfig:UserPoolType'</a>,
--   <a>userPoolType_adminCreateUserConfig</a> - The configuration for
--   <tt>AdminCreateUser</tt> requests.
--   
--   <a>$sel:deviceConfiguration:UserPoolType'</a>,
--   <a>userPoolType_deviceConfiguration</a> - The device configuration.
--   
--   <a>$sel:autoVerifiedAttributes:UserPoolType'</a>,
--   <a>userPoolType_autoVerifiedAttributes</a> - Specifies the attributes
--   that are auto-verified in a user pool.
--   
--   <a>$sel:policies:UserPoolType'</a>, <a>userPoolType_policies</a> - The
--   policies associated with the user pool.
--   
--   <a>$sel:usernameConfiguration:UserPoolType'</a>,
--   <a>userPoolType_usernameConfiguration</a> - You can choose to enable
--   case sensitivity on the username input for the selected sign-in
--   option. For example, when this is set to <tt>False</tt>, users will be
--   able to sign in using either "username" or "Username". This
--   configuration is immutable once it has been set. For more information,
--   see <a>UsernameConfigurationType</a>.
newUserPoolType :: UserPoolType

-- | The status of a user pool.
userPoolType_status :: Lens' UserPoolType (Maybe StatusType)

-- | The tags that are assigned to the user pool. A tag is a label that you
--   can apply to user pools to categorize and manage them in different
--   ways, such as by purpose, owner, environment, or other criteria.
userPoolType_userPoolTags :: Lens' UserPoolType (Maybe (HashMap Text Text))

-- | The reason why the email configuration cannot send the messages to
--   your users.
userPoolType_emailConfigurationFailure :: Lens' UserPoolType (Maybe Text)

-- | The date the user pool was last modified.
userPoolType_lastModifiedDate :: Lens' UserPoolType (Maybe UTCTime)

-- | The template for verification messages.
userPoolType_verificationMessageTemplate :: Lens' UserPoolType (Maybe VerificationMessageTemplateType)

-- | A number estimating the size of the user pool.
userPoolType_estimatedNumberOfUsers :: Lens' UserPoolType (Maybe Int)

-- | The Amazon Resource Name (ARN) for the user pool.
userPoolType_arn :: Lens' UserPoolType (Maybe Text)

-- | Holds the domain prefix if the user pool has a domain associated with
--   it.
userPoolType_domain :: Lens' UserPoolType (Maybe Text)

-- | A custom domain name that you provide to Amazon Cognito. This
--   parameter applies only if you use a custom domain to host the sign-up
--   and sign-in pages for your application. For example:
--   <tt>auth.example.com</tt>.
--   
--   For more information about adding a custom domain to your user pool,
--   see <a>Using Your Own Domain for the Hosted UI</a>.
userPoolType_customDomain :: Lens' UserPoolType (Maybe Text)

-- | The contents of the email verification message.
userPoolType_emailVerificationMessage :: Lens' UserPoolType (Maybe Text)

-- | The contents of the SMS authentication message.
userPoolType_smsAuthenticationMessage :: Lens' UserPoolType (Maybe Text)

-- | The user pool add-ons.
userPoolType_userPoolAddOns :: Lens' UserPoolType (Maybe UserPoolAddOnsType)

-- | A container with the schema attributes of a user pool.
userPoolType_schemaAttributes :: Lens' UserPoolType (Maybe (NonEmpty SchemaAttributeType))

-- | The subject of the email verification message.
userPoolType_emailVerificationSubject :: Lens' UserPoolType (Maybe Text)

-- | Specifies whether email addresses or phone numbers can be specified as
--   usernames when a user signs up.
userPoolType_usernameAttributes :: Lens' UserPoolType (Maybe [UsernameAttributeType])

-- | Specifies the attributes that are aliased in a user pool.
userPoolType_aliasAttributes :: Lens' UserPoolType (Maybe [AliasAttributeType])

-- | Use this setting to define which verified available method a user can
--   use to recover their password when they call <tt>ForgotPassword</tt>.
--   It allows you to define a preferred method when a user has more than
--   one method available. With this setting, SMS does not qualify for a
--   valid password recovery mechanism if the user also has SMS MFA
--   enabled. In the absence of this setting, Cognito uses the legacy
--   behavior to determine the recovery method where SMS is preferred over
--   email.
userPoolType_accountRecoverySetting :: Lens' UserPoolType (Maybe AccountRecoverySettingType)

-- | The email configuration.
userPoolType_emailConfiguration :: Lens' UserPoolType (Maybe EmailConfigurationType)

-- | The contents of the SMS verification message.
userPoolType_smsVerificationMessage :: Lens' UserPoolType (Maybe Text)

-- | The name of the user pool.
userPoolType_name :: Lens' UserPoolType (Maybe Text)

-- | Can be one of the following values:
--   
--   <ul>
--   <li><tt>OFF</tt> - MFA tokens are not required and cannot be specified
--   during user registration.</li>
--   <li><tt>ON</tt> - MFA tokens are required for all user registrations.
--   You can only specify required when you are initially creating a user
--   pool.</li>
--   <li><tt>OPTIONAL</tt> - Users have the option when registering to
--   create an MFA token.</li>
--   </ul>
userPoolType_mfaConfiguration :: Lens' UserPoolType (Maybe UserPoolMfaType)

-- | The ID of the user pool.
userPoolType_id :: Lens' UserPoolType (Maybe Text)

-- | The reason why the SMS configuration cannot send the messages to your
--   users.
--   
--   This message might include comma-separated values to describe why your
--   SMS configuration can't send messages to user pool end users.
--   
--   <ul>
--   <li>InvalidSmsRoleAccessPolicyException - The IAM role which Cognito
--   uses to send SMS messages is not properly configured. For more
--   information, see <a>SmsConfigurationType</a>.</li>
--   <li>SNSSandbox - The account is in SNS Sandbox and messages won’t
--   reach unverified end users. This parameter won’t get populated with
--   SNSSandbox if the IAM user creating the user pool doesn’t have SNS
--   permissions. To learn how to move your account out of the sandbox, see
--   <a>Moving out of the SMS sandbox</a>.</li>
--   </ul>
userPoolType_smsConfigurationFailure :: Lens' UserPoolType (Maybe Text)

-- | The date the user pool was created.
userPoolType_creationDate :: Lens' UserPoolType (Maybe UTCTime)

-- | The Lambda triggers associated with the user pool.
userPoolType_lambdaConfig :: Lens' UserPoolType (Maybe LambdaConfigType)

-- | The SMS configuration.
userPoolType_smsConfiguration :: Lens' UserPoolType (Maybe SmsConfigurationType)

-- | The configuration for <tt>AdminCreateUser</tt> requests.
userPoolType_adminCreateUserConfig :: Lens' UserPoolType (Maybe AdminCreateUserConfigType)

-- | The device configuration.
userPoolType_deviceConfiguration :: Lens' UserPoolType (Maybe DeviceConfigurationType)

-- | Specifies the attributes that are auto-verified in a user pool.
userPoolType_autoVerifiedAttributes :: Lens' UserPoolType (Maybe [VerifiedAttributeType])

-- | The policies associated with the user pool.
userPoolType_policies :: Lens' UserPoolType (Maybe UserPoolPolicyType)

-- | You can choose to enable case sensitivity on the username input for
--   the selected sign-in option. For example, when this is set to
--   <tt>False</tt>, users will be able to sign in using either "username"
--   or "Username". This configuration is immutable once it has been set.
--   For more information, see <a>UsernameConfigurationType</a>.
userPoolType_usernameConfiguration :: Lens' UserPoolType (Maybe UsernameConfigurationType)
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.Types.UserPoolType.UserPoolType
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.Types.UserPoolType.UserPoolType
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.Types.UserPoolType.UserPoolType
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.Types.UserPoolType.UserPoolType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CognitoIdentityProvider.Types.UserPoolType.UserPoolType
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.Types.UserPoolType.UserPoolType
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.Types.UserPoolType.UserPoolType


module Network.AWS.CognitoIdentityProvider.Types.VerifySoftwareTokenResponseType
newtype VerifySoftwareTokenResponseType
VerifySoftwareTokenResponseType' :: Text -> VerifySoftwareTokenResponseType
[fromVerifySoftwareTokenResponseType] :: VerifySoftwareTokenResponseType -> Text
pattern VerifySoftwareTokenResponseType_ERROR :: VerifySoftwareTokenResponseType
pattern VerifySoftwareTokenResponseType_SUCCESS :: VerifySoftwareTokenResponseType
instance Network.AWS.Data.XML.ToXML Network.AWS.CognitoIdentityProvider.Types.VerifySoftwareTokenResponseType.VerifySoftwareTokenResponseType
instance Network.AWS.Data.XML.FromXML Network.AWS.CognitoIdentityProvider.Types.VerifySoftwareTokenResponseType.VerifySoftwareTokenResponseType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.CognitoIdentityProvider.Types.VerifySoftwareTokenResponseType.VerifySoftwareTokenResponseType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.Types.VerifySoftwareTokenResponseType.VerifySoftwareTokenResponseType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.CognitoIdentityProvider.Types.VerifySoftwareTokenResponseType.VerifySoftwareTokenResponseType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CognitoIdentityProvider.Types.VerifySoftwareTokenResponseType.VerifySoftwareTokenResponseType
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentityProvider.Types.VerifySoftwareTokenResponseType.VerifySoftwareTokenResponseType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.CognitoIdentityProvider.Types.VerifySoftwareTokenResponseType.VerifySoftwareTokenResponseType
instance Network.AWS.Data.Log.ToLog Network.AWS.CognitoIdentityProvider.Types.VerifySoftwareTokenResponseType.VerifySoftwareTokenResponseType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.CognitoIdentityProvider.Types.VerifySoftwareTokenResponseType.VerifySoftwareTokenResponseType
instance Network.AWS.Data.Text.ToText Network.AWS.CognitoIdentityProvider.Types.VerifySoftwareTokenResponseType.VerifySoftwareTokenResponseType
instance Network.AWS.Data.Text.FromText Network.AWS.CognitoIdentityProvider.Types.VerifySoftwareTokenResponseType.VerifySoftwareTokenResponseType
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.Types.VerifySoftwareTokenResponseType.VerifySoftwareTokenResponseType
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.Types.VerifySoftwareTokenResponseType.VerifySoftwareTokenResponseType
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.Types.VerifySoftwareTokenResponseType.VerifySoftwareTokenResponseType
instance GHC.Classes.Ord Network.AWS.CognitoIdentityProvider.Types.VerifySoftwareTokenResponseType.VerifySoftwareTokenResponseType
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.Types.VerifySoftwareTokenResponseType.VerifySoftwareTokenResponseType
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.Types.VerifySoftwareTokenResponseType.VerifySoftwareTokenResponseType
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.Types.VerifySoftwareTokenResponseType.VerifySoftwareTokenResponseType


module Network.AWS.CognitoIdentityProvider.Types

-- | API version <tt>2016-04-18</tt> of the Amazon Cognito Identity
--   Provider SDK configuration.
defaultService :: Service

-- | The request failed because the user is in an unsupported state.
_UnsupportedUserStateException :: AsError a => Getting (First ServiceError) a ServiceError

-- | This exception is thrown when a password reset is required.
_PasswordResetRequiredException :: AsError a => Getting (First ServiceError) a ServiceError

-- | This exception is thrown when the Amazon Cognito service encounters an
--   invalid parameter.
_InvalidParameterException :: AsError a => Getting (First ServiceError) a ServiceError

-- | This exception is thrown when you attempt to perform an operation that
--   is not enabled for the user pool client.
_UnsupportedOperationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | This exception is thrown when the Amazon Cognito service encounters an
--   invalid Lambda response.
_InvalidLambdaResponseException :: AsError a => Getting (First ServiceError) a ServiceError

-- | This exception is thrown when Amazon Cognito is not allowed to use
--   your email identity. HTTP status code: 400.
_InvalidEmailRoleAccessPolicyException :: AsError a => Getting (First ServiceError) a ServiceError

-- | This exception is thrown when the specified identifier is not
--   supported.
_UnsupportedIdentityProviderException :: AsError a => Getting (First ServiceError) a ServiceError

-- | This exception is thrown when a user is not found.
_UserNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | This exception is thrown when the Amazon Cognito service encounters an
--   unexpected exception with the Lambda service.
_UnexpectedLambdaException :: AsError a => Getting (First ServiceError) a ServiceError

-- | This exception is thrown when a user is not authorized.
_NotAuthorizedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | This exception is thrown when Amazon Cognito encounters an internal
--   error.
_InternalErrorException :: AsError a => Getting (First ServiceError) a ServiceError

-- | This exception is thrown when the user pool configuration is invalid.
_InvalidUserPoolConfigurationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | This exception is returned when the role provided for SMS
--   configuration does not have permission to publish using Amazon SNS.
_InvalidSmsRoleAccessPolicyException :: AsError a => Getting (First ServiceError) a ServiceError

-- | This exception is thrown when the specified OAuth flow is invalid.
_InvalidOAuthFlowException :: AsError a => Getting (First ServiceError) a ServiceError

-- | This exception is thrown if the provided code does not match what the
--   server was expecting.
_CodeMismatchException :: AsError a => Getting (First ServiceError) a ServiceError

-- | This exception is thrown when you are trying to modify a user pool
--   while a user import job is in progress for that pool.
_UserImportInProgressException :: AsError a => Getting (First ServiceError) a ServiceError

-- | This exception is thrown when the trust relationship is invalid for
--   the role provided for SMS configuration. This can happen if you do not
--   trust <tt>cognito-idp.amazonaws.com</tt> or the external ID provided
--   in the role does not match what is provided in the SMS configuration
--   for the user pool.
_InvalidSmsRoleTrustRelationshipException :: AsError a => Getting (First ServiceError) a ServiceError

-- | This exception is thrown when a user pool tag cannot be set or
--   updated.
_UserPoolTaggingException :: AsError a => Getting (First ServiceError) a ServiceError

-- | This exception is thrown when the software token TOTP multi-factor
--   authentication (MFA) is not enabled for the user pool.
_SoftwareTokenMFANotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | This exception is thrown when the user has made too many requests for
--   a given operation.
_TooManyRequestsException :: AsError a => Getting (First ServiceError) a ServiceError

-- | This exception is thrown if two or more modifications are happening
--   concurrently.
_ConcurrentModificationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | This exception is thrown when user pool add-ons are not enabled.
_UserPoolAddOnNotEnabledException :: AsError a => Getting (First ServiceError) a ServiceError

-- | This exception is thrown when the Amazon Cognito service encounters a
--   user validation exception with the Lambda service.
_UserLambdaValidationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | This exception is thrown when a precondition is not met.
_PreconditionNotMetException :: AsError a => Getting (First ServiceError) a ServiceError

-- | This exception is thrown if a code has expired.
_ExpiredCodeException :: AsError a => Getting (First ServiceError) a ServiceError

-- | This exception is thrown when the user has made too many failed
--   attempts for a given action (e.g., sign in).
_TooManyFailedAttemptsException :: AsError a => Getting (First ServiceError) a ServiceError

-- | This exception is thrown when there is a code mismatch and the service
--   fails to configure the software token TOTP multi-factor authentication
--   (MFA).
_EnableSoftwareTokenMFAException :: AsError a => Getting (First ServiceError) a ServiceError

-- | This exception is thrown when a user is not confirmed successfully.
_UserNotConfirmedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | This exception is thrown when Amazon Cognito encounters a group that
--   already exists in the user pool.
_GroupExistsException :: AsError a => Getting (First ServiceError) a ServiceError

-- | This exception is thrown when the request is not authorized. This can
--   happen due to an invalid access token in the request.
_UnauthorizedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | This exception is thrown when a verification code fails to deliver
--   successfully.
_CodeDeliveryFailureException :: AsError a => Getting (First ServiceError) a ServiceError

-- | This exception is thrown when the specified scope does not exist.
_ScopeDoesNotExistException :: AsError a => Getting (First ServiceError) a ServiceError

-- | This exception is thrown when the Amazon Cognito service cannot find
--   the requested resource.
_ResourceNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | This exception is thrown when Amazon Cognito cannot find a
--   multi-factor authentication (MFA) method.
_MFAMethodNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | This exception is thrown when a user tries to confirm the account with
--   an email or phone number that has already been supplied as an alias
--   from a different account. This exception tells user that an account
--   with this email or phone already exists.
_AliasExistsException :: AsError a => Getting (First ServiceError) a ServiceError

-- | This exception is thrown when an unsupported token is passed to an
--   operation.
_UnsupportedTokenTypeException :: AsError a => Getting (First ServiceError) a ServiceError

-- | This exception is thrown when the provider is already supported by the
--   user pool.
_DuplicateProviderException :: AsError a => Getting (First ServiceError) a ServiceError

-- | This exception is thrown when a user exceeds the limit for a requested
--   Amazon Web Services resource.
_LimitExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | This exception is thrown when the Amazon Cognito service encounters an
--   invalid password.
_InvalidPasswordException :: AsError a => Getting (First ServiceError) a ServiceError

-- | This exception is thrown when Amazon Cognito encounters a user name
--   that already exists in the user pool.
_UsernameExistsException :: AsError a => Getting (First ServiceError) a ServiceError
newtype AccountTakeoverEventActionType
AccountTakeoverEventActionType' :: Text -> AccountTakeoverEventActionType
[fromAccountTakeoverEventActionType] :: AccountTakeoverEventActionType -> Text
pattern AccountTakeoverEventActionType_BLOCK :: AccountTakeoverEventActionType
pattern AccountTakeoverEventActionType_MFA_IF_CONFIGURED :: AccountTakeoverEventActionType
pattern AccountTakeoverEventActionType_MFA_REQUIRED :: AccountTakeoverEventActionType
pattern AccountTakeoverEventActionType_NO_ACTION :: AccountTakeoverEventActionType
newtype AdvancedSecurityModeType
AdvancedSecurityModeType' :: Text -> AdvancedSecurityModeType
[fromAdvancedSecurityModeType] :: AdvancedSecurityModeType -> Text
pattern AdvancedSecurityModeType_AUDIT :: AdvancedSecurityModeType
pattern AdvancedSecurityModeType_ENFORCED :: AdvancedSecurityModeType
pattern AdvancedSecurityModeType_OFF :: AdvancedSecurityModeType
newtype AliasAttributeType
AliasAttributeType' :: Text -> AliasAttributeType
[fromAliasAttributeType] :: AliasAttributeType -> Text
pattern AliasAttributeType_Email :: AliasAttributeType
pattern AliasAttributeType_Phone_number :: AliasAttributeType
pattern AliasAttributeType_Preferred_username :: AliasAttributeType
newtype AttributeDataType
AttributeDataType' :: Text -> AttributeDataType
[fromAttributeDataType] :: AttributeDataType -> Text
pattern AttributeDataType_Boolean :: AttributeDataType
pattern AttributeDataType_DateTime :: AttributeDataType
pattern AttributeDataType_Number :: AttributeDataType
pattern AttributeDataType_String :: AttributeDataType
newtype AuthFlowType
AuthFlowType' :: Text -> AuthFlowType
[fromAuthFlowType] :: AuthFlowType -> Text
pattern AuthFlowType_ADMIN_NO_SRP_AUTH :: AuthFlowType
pattern AuthFlowType_ADMIN_USER_PASSWORD_AUTH :: AuthFlowType
pattern AuthFlowType_CUSTOM_AUTH :: AuthFlowType
pattern AuthFlowType_REFRESH_TOKEN :: AuthFlowType
pattern AuthFlowType_REFRESH_TOKEN_AUTH :: AuthFlowType
pattern AuthFlowType_USER_PASSWORD_AUTH :: AuthFlowType
pattern AuthFlowType_USER_SRP_AUTH :: AuthFlowType
newtype ChallengeName
ChallengeName' :: Text -> ChallengeName
[fromChallengeName] :: ChallengeName -> Text
pattern ChallengeName_Mfa :: ChallengeName
pattern ChallengeName_Password :: ChallengeName
newtype ChallengeNameType
ChallengeNameType' :: Text -> ChallengeNameType
[fromChallengeNameType] :: ChallengeNameType -> Text
pattern ChallengeNameType_ADMIN_NO_SRP_AUTH :: ChallengeNameType
pattern ChallengeNameType_CUSTOM_CHALLENGE :: ChallengeNameType
pattern ChallengeNameType_DEVICE_PASSWORD_VERIFIER :: ChallengeNameType
pattern ChallengeNameType_DEVICE_SRP_AUTH :: ChallengeNameType
pattern ChallengeNameType_MFA_SETUP :: ChallengeNameType
pattern ChallengeNameType_NEW_PASSWORD_REQUIRED :: ChallengeNameType
pattern ChallengeNameType_PASSWORD_VERIFIER :: ChallengeNameType
pattern ChallengeNameType_SELECT_MFA_TYPE :: ChallengeNameType
pattern ChallengeNameType_SMS_MFA :: ChallengeNameType
pattern ChallengeNameType_SOFTWARE_TOKEN_MFA :: ChallengeNameType
newtype ChallengeResponse
ChallengeResponse' :: Text -> ChallengeResponse
[fromChallengeResponse] :: ChallengeResponse -> Text
pattern ChallengeResponse_Failure :: ChallengeResponse
pattern ChallengeResponse_Success :: ChallengeResponse
newtype CompromisedCredentialsEventActionType
CompromisedCredentialsEventActionType' :: Text -> CompromisedCredentialsEventActionType
[fromCompromisedCredentialsEventActionType] :: CompromisedCredentialsEventActionType -> Text
pattern CompromisedCredentialsEventActionType_BLOCK :: CompromisedCredentialsEventActionType
pattern CompromisedCredentialsEventActionType_NO_ACTION :: CompromisedCredentialsEventActionType
newtype CustomEmailSenderLambdaVersionType
CustomEmailSenderLambdaVersionType' :: Text -> CustomEmailSenderLambdaVersionType
[fromCustomEmailSenderLambdaVersionType] :: CustomEmailSenderLambdaVersionType -> Text
pattern CustomEmailSenderLambdaVersionType_V1_0 :: CustomEmailSenderLambdaVersionType
newtype CustomSMSSenderLambdaVersionType
CustomSMSSenderLambdaVersionType' :: Text -> CustomSMSSenderLambdaVersionType
[fromCustomSMSSenderLambdaVersionType] :: CustomSMSSenderLambdaVersionType -> Text
pattern CustomSMSSenderLambdaVersionType_V1_0 :: CustomSMSSenderLambdaVersionType
newtype DefaultEmailOptionType
DefaultEmailOptionType' :: Text -> DefaultEmailOptionType
[fromDefaultEmailOptionType] :: DefaultEmailOptionType -> Text
pattern DefaultEmailOptionType_CONFIRM_WITH_CODE :: DefaultEmailOptionType
pattern DefaultEmailOptionType_CONFIRM_WITH_LINK :: DefaultEmailOptionType
newtype DeliveryMediumType
DeliveryMediumType' :: Text -> DeliveryMediumType
[fromDeliveryMediumType] :: DeliveryMediumType -> Text
pattern DeliveryMediumType_EMAIL :: DeliveryMediumType
pattern DeliveryMediumType_SMS :: DeliveryMediumType
newtype DeviceRememberedStatusType
DeviceRememberedStatusType' :: Text -> DeviceRememberedStatusType
[fromDeviceRememberedStatusType] :: DeviceRememberedStatusType -> Text
pattern DeviceRememberedStatusType_Not_remembered :: DeviceRememberedStatusType
pattern DeviceRememberedStatusType_Remembered :: DeviceRememberedStatusType
newtype DomainStatusType
DomainStatusType' :: Text -> DomainStatusType
[fromDomainStatusType] :: DomainStatusType -> Text
pattern DomainStatusType_ACTIVE :: DomainStatusType
pattern DomainStatusType_CREATING :: DomainStatusType
pattern DomainStatusType_DELETING :: DomainStatusType
pattern DomainStatusType_FAILED :: DomainStatusType
pattern DomainStatusType_UPDATING :: DomainStatusType
newtype EmailSendingAccountType
EmailSendingAccountType' :: Text -> EmailSendingAccountType
[fromEmailSendingAccountType] :: EmailSendingAccountType -> Text
pattern EmailSendingAccountType_COGNITO_DEFAULT :: EmailSendingAccountType
pattern EmailSendingAccountType_DEVELOPER :: EmailSendingAccountType
newtype EventFilterType
EventFilterType' :: Text -> EventFilterType
[fromEventFilterType] :: EventFilterType -> Text
pattern EventFilterType_PASSWORD_CHANGE :: EventFilterType
pattern EventFilterType_SIGN_IN :: EventFilterType
pattern EventFilterType_SIGN_UP :: EventFilterType
newtype EventResponseType
EventResponseType' :: Text -> EventResponseType
[fromEventResponseType] :: EventResponseType -> Text
pattern EventResponseType_Failure :: EventResponseType
pattern EventResponseType_Success :: EventResponseType
newtype EventType
EventType' :: Text -> EventType
[fromEventType] :: EventType -> Text
pattern EventType_ForgotPassword :: EventType
pattern EventType_SignIn :: EventType
pattern EventType_SignUp :: EventType
newtype ExplicitAuthFlowsType
ExplicitAuthFlowsType' :: Text -> ExplicitAuthFlowsType
[fromExplicitAuthFlowsType] :: ExplicitAuthFlowsType -> Text
pattern ExplicitAuthFlowsType_ADMIN_NO_SRP_AUTH :: ExplicitAuthFlowsType
pattern ExplicitAuthFlowsType_ALLOW_ADMIN_USER_PASSWORD_AUTH :: ExplicitAuthFlowsType
pattern ExplicitAuthFlowsType_ALLOW_CUSTOM_AUTH :: ExplicitAuthFlowsType
pattern ExplicitAuthFlowsType_ALLOW_REFRESH_TOKEN_AUTH :: ExplicitAuthFlowsType
pattern ExplicitAuthFlowsType_ALLOW_USER_PASSWORD_AUTH :: ExplicitAuthFlowsType
pattern ExplicitAuthFlowsType_ALLOW_USER_SRP_AUTH :: ExplicitAuthFlowsType
pattern ExplicitAuthFlowsType_CUSTOM_AUTH_FLOW_ONLY :: ExplicitAuthFlowsType
pattern ExplicitAuthFlowsType_USER_PASSWORD_AUTH :: ExplicitAuthFlowsType
newtype FeedbackValueType
FeedbackValueType' :: Text -> FeedbackValueType
[fromFeedbackValueType] :: FeedbackValueType -> Text
pattern FeedbackValueType_Invalid :: FeedbackValueType
pattern FeedbackValueType_Valid :: FeedbackValueType
newtype IdentityProviderTypeType
IdentityProviderTypeType' :: Text -> IdentityProviderTypeType
[fromIdentityProviderTypeType] :: IdentityProviderTypeType -> Text
pattern IdentityProviderTypeType_Facebook :: IdentityProviderTypeType
pattern IdentityProviderTypeType_Google :: IdentityProviderTypeType
pattern IdentityProviderTypeType_LoginWithAmazon :: IdentityProviderTypeType
pattern IdentityProviderTypeType_OIDC :: IdentityProviderTypeType
pattern IdentityProviderTypeType_SAML :: IdentityProviderTypeType
pattern IdentityProviderTypeType_SignInWithApple :: IdentityProviderTypeType
newtype MessageActionType
MessageActionType' :: Text -> MessageActionType
[fromMessageActionType] :: MessageActionType -> Text
pattern MessageActionType_RESEND :: MessageActionType
pattern MessageActionType_SUPPRESS :: MessageActionType
newtype OAuthFlowType
OAuthFlowType' :: Text -> OAuthFlowType
[fromOAuthFlowType] :: OAuthFlowType -> Text
pattern OAuthFlowType_Client_credentials :: OAuthFlowType
pattern OAuthFlowType_Code :: OAuthFlowType
pattern OAuthFlowType_Implicit :: OAuthFlowType
newtype PreventUserExistenceErrorTypes
PreventUserExistenceErrorTypes' :: Text -> PreventUserExistenceErrorTypes
[fromPreventUserExistenceErrorTypes] :: PreventUserExistenceErrorTypes -> Text
pattern PreventUserExistenceErrorTypes_ENABLED :: PreventUserExistenceErrorTypes
pattern PreventUserExistenceErrorTypes_LEGACY :: PreventUserExistenceErrorTypes
newtype RecoveryOptionNameType
RecoveryOptionNameType' :: Text -> RecoveryOptionNameType
[fromRecoveryOptionNameType] :: RecoveryOptionNameType -> Text
pattern RecoveryOptionNameType_Admin_only :: RecoveryOptionNameType
pattern RecoveryOptionNameType_Verified_email :: RecoveryOptionNameType
pattern RecoveryOptionNameType_Verified_phone_number :: RecoveryOptionNameType
newtype RiskDecisionType
RiskDecisionType' :: Text -> RiskDecisionType
[fromRiskDecisionType] :: RiskDecisionType -> Text
pattern RiskDecisionType_AccountTakeover :: RiskDecisionType
pattern RiskDecisionType_Block :: RiskDecisionType
pattern RiskDecisionType_NoRisk :: RiskDecisionType
newtype RiskLevelType
RiskLevelType' :: Text -> RiskLevelType
[fromRiskLevelType] :: RiskLevelType -> Text
pattern RiskLevelType_High :: RiskLevelType
pattern RiskLevelType_Low :: RiskLevelType
pattern RiskLevelType_Medium :: RiskLevelType
newtype StatusType
StatusType' :: Text -> StatusType
[fromStatusType] :: StatusType -> Text
pattern StatusType_Disabled :: StatusType
pattern StatusType_Enabled :: StatusType
newtype TimeUnitsType
TimeUnitsType' :: Text -> TimeUnitsType
[fromTimeUnitsType] :: TimeUnitsType -> Text
pattern TimeUnitsType_Days :: TimeUnitsType
pattern TimeUnitsType_Hours :: TimeUnitsType
pattern TimeUnitsType_Minutes :: TimeUnitsType
pattern TimeUnitsType_Seconds :: TimeUnitsType
newtype UserImportJobStatusType
UserImportJobStatusType' :: Text -> UserImportJobStatusType
[fromUserImportJobStatusType] :: UserImportJobStatusType -> Text
pattern UserImportJobStatusType_Created :: UserImportJobStatusType
pattern UserImportJobStatusType_Expired :: UserImportJobStatusType
pattern UserImportJobStatusType_Failed :: UserImportJobStatusType
pattern UserImportJobStatusType_InProgress :: UserImportJobStatusType
pattern UserImportJobStatusType_Pending :: UserImportJobStatusType
pattern UserImportJobStatusType_Stopped :: UserImportJobStatusType
pattern UserImportJobStatusType_Stopping :: UserImportJobStatusType
pattern UserImportJobStatusType_Succeeded :: UserImportJobStatusType
newtype UserPoolMfaType
UserPoolMfaType' :: Text -> UserPoolMfaType
[fromUserPoolMfaType] :: UserPoolMfaType -> Text
pattern UserPoolMfaType_OFF :: UserPoolMfaType
pattern UserPoolMfaType_ON :: UserPoolMfaType
pattern UserPoolMfaType_OPTIONAL :: UserPoolMfaType
newtype UserStatusType
UserStatusType' :: Text -> UserStatusType
[fromUserStatusType] :: UserStatusType -> Text
pattern UserStatusType_ARCHIVED :: UserStatusType
pattern UserStatusType_COMPROMISED :: UserStatusType
pattern UserStatusType_CONFIRMED :: UserStatusType
pattern UserStatusType_FORCE_CHANGE_PASSWORD :: UserStatusType
pattern UserStatusType_RESET_REQUIRED :: UserStatusType
pattern UserStatusType_UNCONFIRMED :: UserStatusType
pattern UserStatusType_UNKNOWN :: UserStatusType
newtype UsernameAttributeType
UsernameAttributeType' :: Text -> UsernameAttributeType
[fromUsernameAttributeType] :: UsernameAttributeType -> Text
pattern UsernameAttributeType_Email :: UsernameAttributeType
pattern UsernameAttributeType_Phone_number :: UsernameAttributeType
newtype VerifiedAttributeType
VerifiedAttributeType' :: Text -> VerifiedAttributeType
[fromVerifiedAttributeType] :: VerifiedAttributeType -> Text
pattern VerifiedAttributeType_Email :: VerifiedAttributeType
pattern VerifiedAttributeType_Phone_number :: VerifiedAttributeType
newtype VerifySoftwareTokenResponseType
VerifySoftwareTokenResponseType' :: Text -> VerifySoftwareTokenResponseType
[fromVerifySoftwareTokenResponseType] :: VerifySoftwareTokenResponseType -> Text
pattern VerifySoftwareTokenResponseType_ERROR :: VerifySoftwareTokenResponseType
pattern VerifySoftwareTokenResponseType_SUCCESS :: VerifySoftwareTokenResponseType

-- | The data type for <tt>AccountRecoverySetting</tt>.
--   
--   <i>See:</i> <a>newAccountRecoverySettingType</a> smart constructor.
data AccountRecoverySettingType
AccountRecoverySettingType' :: Maybe (NonEmpty RecoveryOptionType) -> AccountRecoverySettingType

-- | The list of <tt>RecoveryOptionTypes</tt>.
[$sel:recoveryMechanisms:AccountRecoverySettingType'] :: AccountRecoverySettingType -> Maybe (NonEmpty RecoveryOptionType)

-- | Create a value of <a>AccountRecoverySettingType</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:recoveryMechanisms:AccountRecoverySettingType'</a>,
--   <a>accountRecoverySettingType_recoveryMechanisms</a> - The list of
--   <tt>RecoveryOptionTypes</tt>.
newAccountRecoverySettingType :: AccountRecoverySettingType

-- | The list of <tt>RecoveryOptionTypes</tt>.
accountRecoverySettingType_recoveryMechanisms :: Lens' AccountRecoverySettingType (Maybe (NonEmpty RecoveryOptionType))

-- | Account takeover action type.
--   
--   <i>See:</i> <a>newAccountTakeoverActionType</a> smart constructor.
data AccountTakeoverActionType
AccountTakeoverActionType' :: Bool -> AccountTakeoverEventActionType -> AccountTakeoverActionType

-- | Flag specifying whether to send a notification.
[$sel:notify:AccountTakeoverActionType'] :: AccountTakeoverActionType -> Bool

-- | The event action.
--   
--   <ul>
--   <li><tt>BLOCK</tt> Choosing this action will block the request.</li>
--   <li><tt>MFA_IF_CONFIGURED</tt> Throw MFA challenge if user has
--   configured it, else allow the request.</li>
--   <li><tt>MFA_REQUIRED</tt> Throw MFA challenge if user has configured
--   it, else block the request.</li>
--   <li><tt>NO_ACTION</tt> Allow the user sign-in.</li>
--   </ul>
[$sel:eventAction:AccountTakeoverActionType'] :: AccountTakeoverActionType -> AccountTakeoverEventActionType

-- | Create a value of <a>AccountTakeoverActionType</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:notify:AccountTakeoverActionType'</a>,
--   <a>accountTakeoverActionType_notify</a> - Flag specifying whether to
--   send a notification.
--   
--   <a>$sel:eventAction:AccountTakeoverActionType'</a>,
--   <a>accountTakeoverActionType_eventAction</a> - The event action.
--   
--   <ul>
--   <li><tt>BLOCK</tt> Choosing this action will block the request.</li>
--   <li><tt>MFA_IF_CONFIGURED</tt> Throw MFA challenge if user has
--   configured it, else allow the request.</li>
--   <li><tt>MFA_REQUIRED</tt> Throw MFA challenge if user has configured
--   it, else block the request.</li>
--   <li><tt>NO_ACTION</tt> Allow the user sign-in.</li>
--   </ul>
newAccountTakeoverActionType :: Bool -> AccountTakeoverEventActionType -> AccountTakeoverActionType

-- | Flag specifying whether to send a notification.
accountTakeoverActionType_notify :: Lens' AccountTakeoverActionType Bool

-- | The event action.
--   
--   <ul>
--   <li><tt>BLOCK</tt> Choosing this action will block the request.</li>
--   <li><tt>MFA_IF_CONFIGURED</tt> Throw MFA challenge if user has
--   configured it, else allow the request.</li>
--   <li><tt>MFA_REQUIRED</tt> Throw MFA challenge if user has configured
--   it, else block the request.</li>
--   <li><tt>NO_ACTION</tt> Allow the user sign-in.</li>
--   </ul>
accountTakeoverActionType_eventAction :: Lens' AccountTakeoverActionType AccountTakeoverEventActionType

-- | Account takeover actions type.
--   
--   <i>See:</i> <a>newAccountTakeoverActionsType</a> smart constructor.
data AccountTakeoverActionsType
AccountTakeoverActionsType' :: Maybe AccountTakeoverActionType -> Maybe AccountTakeoverActionType -> Maybe AccountTakeoverActionType -> AccountTakeoverActionsType

-- | Action to take for a low risk.
[$sel:lowAction:AccountTakeoverActionsType'] :: AccountTakeoverActionsType -> Maybe AccountTakeoverActionType

-- | Action to take for a high risk.
[$sel:highAction:AccountTakeoverActionsType'] :: AccountTakeoverActionsType -> Maybe AccountTakeoverActionType

-- | Action to take for a medium risk.
[$sel:mediumAction:AccountTakeoverActionsType'] :: AccountTakeoverActionsType -> Maybe AccountTakeoverActionType

-- | Create a value of <a>AccountTakeoverActionsType</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lowAction:AccountTakeoverActionsType'</a>,
--   <a>accountTakeoverActionsType_lowAction</a> - Action to take for a low
--   risk.
--   
--   <a>$sel:highAction:AccountTakeoverActionsType'</a>,
--   <a>accountTakeoverActionsType_highAction</a> - Action to take for a
--   high risk.
--   
--   <a>$sel:mediumAction:AccountTakeoverActionsType'</a>,
--   <a>accountTakeoverActionsType_mediumAction</a> - Action to take for a
--   medium risk.
newAccountTakeoverActionsType :: AccountTakeoverActionsType

-- | Action to take for a low risk.
accountTakeoverActionsType_lowAction :: Lens' AccountTakeoverActionsType (Maybe AccountTakeoverActionType)

-- | Action to take for a high risk.
accountTakeoverActionsType_highAction :: Lens' AccountTakeoverActionsType (Maybe AccountTakeoverActionType)

-- | Action to take for a medium risk.
accountTakeoverActionsType_mediumAction :: Lens' AccountTakeoverActionsType (Maybe AccountTakeoverActionType)

-- | Configuration for mitigation actions and notification for different
--   levels of risk detected for a potential account takeover.
--   
--   <i>See:</i> <a>newAccountTakeoverRiskConfigurationType</a> smart
--   constructor.
data AccountTakeoverRiskConfigurationType
AccountTakeoverRiskConfigurationType' :: Maybe NotifyConfigurationType -> AccountTakeoverActionsType -> AccountTakeoverRiskConfigurationType

-- | The notify configuration used to construct email notifications.
[$sel:notifyConfiguration:AccountTakeoverRiskConfigurationType'] :: AccountTakeoverRiskConfigurationType -> Maybe NotifyConfigurationType

-- | Account takeover risk configuration actions
[$sel:actions:AccountTakeoverRiskConfigurationType'] :: AccountTakeoverRiskConfigurationType -> AccountTakeoverActionsType

-- | Create a value of <a>AccountTakeoverRiskConfigurationType</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:notifyConfiguration:AccountTakeoverRiskConfigurationType'</a>,
--   <a>accountTakeoverRiskConfigurationType_notifyConfiguration</a> - The
--   notify configuration used to construct email notifications.
--   
--   <a>$sel:actions:AccountTakeoverRiskConfigurationType'</a>,
--   <a>accountTakeoverRiskConfigurationType_actions</a> - Account takeover
--   risk configuration actions
newAccountTakeoverRiskConfigurationType :: AccountTakeoverActionsType -> AccountTakeoverRiskConfigurationType

-- | The notify configuration used to construct email notifications.
accountTakeoverRiskConfigurationType_notifyConfiguration :: Lens' AccountTakeoverRiskConfigurationType (Maybe NotifyConfigurationType)

-- | Account takeover risk configuration actions
accountTakeoverRiskConfigurationType_actions :: Lens' AccountTakeoverRiskConfigurationType AccountTakeoverActionsType

-- | The configuration for creating a new user profile.
--   
--   <i>See:</i> <a>newAdminCreateUserConfigType</a> smart constructor.
data AdminCreateUserConfigType
AdminCreateUserConfigType' :: Maybe Bool -> Maybe Natural -> Maybe MessageTemplateType -> AdminCreateUserConfigType

-- | Set to <tt>True</tt> if only the administrator is allowed to create
--   user profiles. Set to <tt>False</tt> if users can sign themselves up
--   via an app.
[$sel:allowAdminCreateUserOnly:AdminCreateUserConfigType'] :: AdminCreateUserConfigType -> Maybe Bool

-- | The user account expiration limit, in days, after which the account is
--   no longer usable. To reset the account after that time limit, you must
--   call <tt>AdminCreateUser</tt> again, specifying <tt>"RESEND"</tt> for
--   the <tt>MessageAction</tt> parameter. The default value for this
--   parameter is 7.
--   
--   If you set a value for <tt>TemporaryPasswordValidityDays</tt> in
--   <tt>PasswordPolicy</tt>, that value will be used and
--   <tt>UnusedAccountValidityDays</tt> will be deprecated for that user
--   pool.
[$sel:unusedAccountValidityDays:AdminCreateUserConfigType'] :: AdminCreateUserConfigType -> Maybe Natural

-- | The message template to be used for the welcome message to new users.
--   
--   See also <a>Customizing User Invitation Messages</a>.
[$sel:inviteMessageTemplate:AdminCreateUserConfigType'] :: AdminCreateUserConfigType -> Maybe MessageTemplateType

-- | Create a value of <a>AdminCreateUserConfigType</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:allowAdminCreateUserOnly:AdminCreateUserConfigType'</a>,
--   <a>adminCreateUserConfigType_allowAdminCreateUserOnly</a> - Set to
--   <tt>True</tt> if only the administrator is allowed to create user
--   profiles. Set to <tt>False</tt> if users can sign themselves up via an
--   app.
--   
--   <a>$sel:unusedAccountValidityDays:AdminCreateUserConfigType'</a>,
--   <a>adminCreateUserConfigType_unusedAccountValidityDays</a> - The user
--   account expiration limit, in days, after which the account is no
--   longer usable. To reset the account after that time limit, you must
--   call <tt>AdminCreateUser</tt> again, specifying <tt>"RESEND"</tt> for
--   the <tt>MessageAction</tt> parameter. The default value for this
--   parameter is 7.
--   
--   If you set a value for <tt>TemporaryPasswordValidityDays</tt> in
--   <tt>PasswordPolicy</tt>, that value will be used and
--   <tt>UnusedAccountValidityDays</tt> will be deprecated for that user
--   pool.
--   
--   <a>$sel:inviteMessageTemplate:AdminCreateUserConfigType'</a>,
--   <a>adminCreateUserConfigType_inviteMessageTemplate</a> - The message
--   template to be used for the welcome message to new users.
--   
--   See also <a>Customizing User Invitation Messages</a>.
newAdminCreateUserConfigType :: AdminCreateUserConfigType

-- | Set to <tt>True</tt> if only the administrator is allowed to create
--   user profiles. Set to <tt>False</tt> if users can sign themselves up
--   via an app.
adminCreateUserConfigType_allowAdminCreateUserOnly :: Lens' AdminCreateUserConfigType (Maybe Bool)

-- | The user account expiration limit, in days, after which the account is
--   no longer usable. To reset the account after that time limit, you must
--   call <tt>AdminCreateUser</tt> again, specifying <tt>"RESEND"</tt> for
--   the <tt>MessageAction</tt> parameter. The default value for this
--   parameter is 7.
--   
--   If you set a value for <tt>TemporaryPasswordValidityDays</tt> in
--   <tt>PasswordPolicy</tt>, that value will be used and
--   <tt>UnusedAccountValidityDays</tt> will be deprecated for that user
--   pool.
adminCreateUserConfigType_unusedAccountValidityDays :: Lens' AdminCreateUserConfigType (Maybe Natural)

-- | The message template to be used for the welcome message to new users.
--   
--   See also <a>Customizing User Invitation Messages</a>.
adminCreateUserConfigType_inviteMessageTemplate :: Lens' AdminCreateUserConfigType (Maybe MessageTemplateType)

-- | The Amazon Pinpoint analytics configuration for collecting metrics for
--   a user pool.
--   
--   In regions where Pinpoint is not available, Cognito User Pools only
--   supports sending events to Amazon Pinpoint projects in us-east-1. In
--   regions where Pinpoint is available, Cognito User Pools will support
--   sending events to Amazon Pinpoint projects within that same region.
--   
--   <i>See:</i> <a>newAnalyticsConfigurationType</a> smart constructor.
data AnalyticsConfigurationType
AnalyticsConfigurationType' :: Maybe Text -> Maybe Bool -> Maybe Text -> Maybe Text -> Maybe Text -> AnalyticsConfigurationType

-- | The Amazon Resource Name (ARN) of an Amazon Pinpoint project. You can
--   use the Amazon Pinpoint project for Pinpoint integration with the
--   chosen User Pool Client. Amazon Cognito publishes events to the
--   pinpoint project declared by the app ARN.
[$sel:applicationArn:AnalyticsConfigurationType'] :: AnalyticsConfigurationType -> Maybe Text

-- | If <tt>UserDataShared</tt> is <tt>true</tt>, Amazon Cognito will
--   include user data in the events it publishes to Amazon Pinpoint
--   analytics.
[$sel:userDataShared:AnalyticsConfigurationType'] :: AnalyticsConfigurationType -> Maybe Bool

-- | The application ID for an Amazon Pinpoint application.
[$sel:applicationId:AnalyticsConfigurationType'] :: AnalyticsConfigurationType -> Maybe Text

-- | The external ID.
[$sel:externalId:AnalyticsConfigurationType'] :: AnalyticsConfigurationType -> Maybe Text

-- | The ARN of an IAM role that authorizes Amazon Cognito to publish
--   events to Amazon Pinpoint analytics.
[$sel:roleArn:AnalyticsConfigurationType'] :: AnalyticsConfigurationType -> Maybe Text

-- | Create a value of <a>AnalyticsConfigurationType</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:applicationArn:AnalyticsConfigurationType'</a>,
--   <a>analyticsConfigurationType_applicationArn</a> - The Amazon Resource
--   Name (ARN) of an Amazon Pinpoint project. You can use the Amazon
--   Pinpoint project for Pinpoint integration with the chosen User Pool
--   Client. Amazon Cognito publishes events to the pinpoint project
--   declared by the app ARN.
--   
--   <a>$sel:userDataShared:AnalyticsConfigurationType'</a>,
--   <a>analyticsConfigurationType_userDataShared</a> - If
--   <tt>UserDataShared</tt> is <tt>true</tt>, Amazon Cognito will include
--   user data in the events it publishes to Amazon Pinpoint analytics.
--   
--   <a>$sel:applicationId:AnalyticsConfigurationType'</a>,
--   <a>analyticsConfigurationType_applicationId</a> - The application ID
--   for an Amazon Pinpoint application.
--   
--   <a>$sel:externalId:AnalyticsConfigurationType'</a>,
--   <a>analyticsConfigurationType_externalId</a> - The external ID.
--   
--   <a>$sel:roleArn:AnalyticsConfigurationType'</a>,
--   <a>analyticsConfigurationType_roleArn</a> - The ARN of an IAM role
--   that authorizes Amazon Cognito to publish events to Amazon Pinpoint
--   analytics.
newAnalyticsConfigurationType :: AnalyticsConfigurationType

-- | The Amazon Resource Name (ARN) of an Amazon Pinpoint project. You can
--   use the Amazon Pinpoint project for Pinpoint integration with the
--   chosen User Pool Client. Amazon Cognito publishes events to the
--   pinpoint project declared by the app ARN.
analyticsConfigurationType_applicationArn :: Lens' AnalyticsConfigurationType (Maybe Text)

-- | If <tt>UserDataShared</tt> is <tt>true</tt>, Amazon Cognito will
--   include user data in the events it publishes to Amazon Pinpoint
--   analytics.
analyticsConfigurationType_userDataShared :: Lens' AnalyticsConfigurationType (Maybe Bool)

-- | The application ID for an Amazon Pinpoint application.
analyticsConfigurationType_applicationId :: Lens' AnalyticsConfigurationType (Maybe Text)

-- | The external ID.
analyticsConfigurationType_externalId :: Lens' AnalyticsConfigurationType (Maybe Text)

-- | The ARN of an IAM role that authorizes Amazon Cognito to publish
--   events to Amazon Pinpoint analytics.
analyticsConfigurationType_roleArn :: Lens' AnalyticsConfigurationType (Maybe Text)

-- | An Amazon Pinpoint analytics endpoint.
--   
--   An endpoint uniquely identifies a mobile device, email address, or
--   phone number that can receive messages from Amazon Pinpoint analytics.
--   
--   Cognito User Pools only supports sending events to Amazon Pinpoint
--   projects in the US East (N. Virginia) us-east-1 Region, regardless of
--   the region in which the user pool resides.
--   
--   <i>See:</i> <a>newAnalyticsMetadataType</a> smart constructor.
data AnalyticsMetadataType
AnalyticsMetadataType' :: Maybe Text -> AnalyticsMetadataType

-- | The endpoint ID.
[$sel:analyticsEndpointId:AnalyticsMetadataType'] :: AnalyticsMetadataType -> Maybe Text

-- | Create a value of <a>AnalyticsMetadataType</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:analyticsEndpointId:AnalyticsMetadataType'</a>,
--   <a>analyticsMetadataType_analyticsEndpointId</a> - The endpoint ID.
newAnalyticsMetadataType :: AnalyticsMetadataType

-- | The endpoint ID.
analyticsMetadataType_analyticsEndpointId :: Lens' AnalyticsMetadataType (Maybe Text)

-- | Specifies whether the attribute is standard or custom.
--   
--   <i>See:</i> <a>newAttributeType</a> smart constructor.
data AttributeType
AttributeType' :: Maybe (Sensitive Text) -> Text -> AttributeType

-- | The value of the attribute.
[$sel:value:AttributeType'] :: AttributeType -> Maybe (Sensitive Text)

-- | The name of the attribute.
[$sel:name:AttributeType'] :: AttributeType -> Text

-- | Create a value of <a>AttributeType</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:value:AttributeType'</a>, <a>attributeType_value</a> - The
--   value of the attribute.
--   
--   <a>$sel:name:AttributeType'</a>, <a>attributeType_name</a> - The name
--   of the attribute.
newAttributeType :: Text -> AttributeType

-- | The value of the attribute.
attributeType_value :: Lens' AttributeType (Maybe Text)

-- | The name of the attribute.
attributeType_name :: Lens' AttributeType Text

-- | The authentication event type.
--   
--   <i>See:</i> <a>newAuthEventType</a> smart constructor.
data AuthEventType
AuthEventType' :: Maybe EventRiskType -> Maybe EventResponseType -> Maybe EventContextDataType -> Maybe [ChallengeResponseType] -> Maybe EventType -> Maybe POSIX -> Maybe EventFeedbackType -> Maybe Text -> AuthEventType

-- | The event risk.
[$sel:eventRisk:AuthEventType'] :: AuthEventType -> Maybe EventRiskType

-- | The event response.
[$sel:eventResponse:AuthEventType'] :: AuthEventType -> Maybe EventResponseType

-- | The user context data captured at the time of an event request. It
--   provides additional information about the client from which event the
--   request is received.
[$sel:eventContextData:AuthEventType'] :: AuthEventType -> Maybe EventContextDataType

-- | The challenge responses.
[$sel:challengeResponses:AuthEventType'] :: AuthEventType -> Maybe [ChallengeResponseType]

-- | The event type.
[$sel:eventType:AuthEventType'] :: AuthEventType -> Maybe EventType

-- | The creation date
[$sel:creationDate:AuthEventType'] :: AuthEventType -> Maybe POSIX

-- | A flag specifying the user feedback captured at the time of an event
--   request is good or bad.
[$sel:eventFeedback:AuthEventType'] :: AuthEventType -> Maybe EventFeedbackType

-- | The event ID.
[$sel:eventId:AuthEventType'] :: AuthEventType -> Maybe Text

-- | Create a value of <a>AuthEventType</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:eventRisk:AuthEventType'</a>, <a>authEventType_eventRisk</a> -
--   The event risk.
--   
--   <a>$sel:eventResponse:AuthEventType'</a>,
--   <a>authEventType_eventResponse</a> - The event response.
--   
--   <a>$sel:eventContextData:AuthEventType'</a>,
--   <a>authEventType_eventContextData</a> - The user context data captured
--   at the time of an event request. It provides additional information
--   about the client from which event the request is received.
--   
--   <a>$sel:challengeResponses:AuthEventType'</a>,
--   <a>authEventType_challengeResponses</a> - The challenge responses.
--   
--   <a>$sel:eventType:AuthEventType'</a>, <a>authEventType_eventType</a> -
--   The event type.
--   
--   <a>$sel:creationDate:AuthEventType'</a>,
--   <a>authEventType_creationDate</a> - The creation date
--   
--   <a>$sel:eventFeedback:AuthEventType'</a>,
--   <a>authEventType_eventFeedback</a> - A flag specifying the user
--   feedback captured at the time of an event request is good or bad.
--   
--   <a>$sel:eventId:AuthEventType'</a>, <a>authEventType_eventId</a> - The
--   event ID.
newAuthEventType :: AuthEventType

-- | The event risk.
authEventType_eventRisk :: Lens' AuthEventType (Maybe EventRiskType)

-- | The event response.
authEventType_eventResponse :: Lens' AuthEventType (Maybe EventResponseType)

-- | The user context data captured at the time of an event request. It
--   provides additional information about the client from which event the
--   request is received.
authEventType_eventContextData :: Lens' AuthEventType (Maybe EventContextDataType)

-- | The challenge responses.
authEventType_challengeResponses :: Lens' AuthEventType (Maybe [ChallengeResponseType])

-- | The event type.
authEventType_eventType :: Lens' AuthEventType (Maybe EventType)

-- | The creation date
authEventType_creationDate :: Lens' AuthEventType (Maybe UTCTime)

-- | A flag specifying the user feedback captured at the time of an event
--   request is good or bad.
authEventType_eventFeedback :: Lens' AuthEventType (Maybe EventFeedbackType)

-- | The event ID.
authEventType_eventId :: Lens' AuthEventType (Maybe Text)

-- | The authentication result.
--   
--   <i>See:</i> <a>newAuthenticationResultType</a> smart constructor.
data AuthenticationResultType
AuthenticationResultType' :: Maybe (Sensitive Text) -> Maybe (Sensitive Text) -> Maybe NewDeviceMetadataType -> Maybe Int -> Maybe Text -> Maybe (Sensitive Text) -> AuthenticationResultType

-- | The access token.
[$sel:accessToken:AuthenticationResultType'] :: AuthenticationResultType -> Maybe (Sensitive Text)

-- | The refresh token.
[$sel:refreshToken:AuthenticationResultType'] :: AuthenticationResultType -> Maybe (Sensitive Text)

-- | The new device metadata from an authentication result.
[$sel:newDeviceMetadata':AuthenticationResultType'] :: AuthenticationResultType -> Maybe NewDeviceMetadataType

-- | The expiration period of the authentication result in seconds.
[$sel:expiresIn:AuthenticationResultType'] :: AuthenticationResultType -> Maybe Int

-- | The token type.
[$sel:tokenType:AuthenticationResultType'] :: AuthenticationResultType -> Maybe Text

-- | The ID token.
[$sel:idToken:AuthenticationResultType'] :: AuthenticationResultType -> Maybe (Sensitive Text)

-- | Create a value of <a>AuthenticationResultType</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:accessToken:AuthenticationResultType'</a>,
--   <a>authenticationResultType_accessToken</a> - The access token.
--   
--   <a>$sel:refreshToken:AuthenticationResultType'</a>,
--   <a>authenticationResultType_refreshToken</a> - The refresh token.
--   
--   <a>$sel:newDeviceMetadata':AuthenticationResultType'</a>,
--   <a>authenticationResultType_newDeviceMetadata</a> - The new device
--   metadata from an authentication result.
--   
--   <a>$sel:expiresIn:AuthenticationResultType'</a>,
--   <a>authenticationResultType_expiresIn</a> - The expiration period of
--   the authentication result in seconds.
--   
--   <a>$sel:tokenType:AuthenticationResultType'</a>,
--   <a>authenticationResultType_tokenType</a> - The token type.
--   
--   <a>$sel:idToken:AuthenticationResultType'</a>,
--   <a>authenticationResultType_idToken</a> - The ID token.
newAuthenticationResultType :: AuthenticationResultType

-- | The access token.
authenticationResultType_accessToken :: Lens' AuthenticationResultType (Maybe Text)

-- | The refresh token.
authenticationResultType_refreshToken :: Lens' AuthenticationResultType (Maybe Text)

-- | The new device metadata from an authentication result.
authenticationResultType_newDeviceMetadata :: Lens' AuthenticationResultType (Maybe NewDeviceMetadataType)

-- | The expiration period of the authentication result in seconds.
authenticationResultType_expiresIn :: Lens' AuthenticationResultType (Maybe Int)

-- | The token type.
authenticationResultType_tokenType :: Lens' AuthenticationResultType (Maybe Text)

-- | The ID token.
authenticationResultType_idToken :: Lens' AuthenticationResultType (Maybe Text)

-- | The challenge response type.
--   
--   <i>See:</i> <a>newChallengeResponseType</a> smart constructor.
data ChallengeResponseType
ChallengeResponseType' :: Maybe ChallengeName -> Maybe ChallengeResponse -> ChallengeResponseType

-- | The challenge name
[$sel:challengeName:ChallengeResponseType'] :: ChallengeResponseType -> Maybe ChallengeName

-- | The challenge response.
[$sel:challengeResponse:ChallengeResponseType'] :: ChallengeResponseType -> Maybe ChallengeResponse

-- | Create a value of <a>ChallengeResponseType</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:challengeName:ChallengeResponseType'</a>,
--   <a>challengeResponseType_challengeName</a> - The challenge name
--   
--   <a>$sel:challengeResponse:ChallengeResponseType'</a>,
--   <a>challengeResponseType_challengeResponse</a> - The challenge
--   response.
newChallengeResponseType :: ChallengeResponseType

-- | The challenge name
challengeResponseType_challengeName :: Lens' ChallengeResponseType (Maybe ChallengeName)

-- | The challenge response.
challengeResponseType_challengeResponse :: Lens' ChallengeResponseType (Maybe ChallengeResponse)

-- | The code delivery details being returned from the server.
--   
--   <i>See:</i> <a>newCodeDeliveryDetailsType</a> smart constructor.
data CodeDeliveryDetailsType
CodeDeliveryDetailsType' :: Maybe Text -> Maybe DeliveryMediumType -> Maybe Text -> CodeDeliveryDetailsType

-- | The destination for the code delivery details.
[$sel:destination:CodeDeliveryDetailsType'] :: CodeDeliveryDetailsType -> Maybe Text

-- | The delivery medium (email message or phone number).
[$sel:deliveryMedium:CodeDeliveryDetailsType'] :: CodeDeliveryDetailsType -> Maybe DeliveryMediumType

-- | The attribute name.
[$sel:attributeName:CodeDeliveryDetailsType'] :: CodeDeliveryDetailsType -> Maybe Text

-- | Create a value of <a>CodeDeliveryDetailsType</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:destination:CodeDeliveryDetailsType'</a>,
--   <a>codeDeliveryDetailsType_destination</a> - The destination for the
--   code delivery details.
--   
--   <a>$sel:deliveryMedium:CodeDeliveryDetailsType'</a>,
--   <a>codeDeliveryDetailsType_deliveryMedium</a> - The delivery medium
--   (email message or phone number).
--   
--   <a>$sel:attributeName:CodeDeliveryDetailsType'</a>,
--   <a>codeDeliveryDetailsType_attributeName</a> - The attribute name.
newCodeDeliveryDetailsType :: CodeDeliveryDetailsType

-- | The destination for the code delivery details.
codeDeliveryDetailsType_destination :: Lens' CodeDeliveryDetailsType (Maybe Text)

-- | The delivery medium (email message or phone number).
codeDeliveryDetailsType_deliveryMedium :: Lens' CodeDeliveryDetailsType (Maybe DeliveryMediumType)

-- | The attribute name.
codeDeliveryDetailsType_attributeName :: Lens' CodeDeliveryDetailsType (Maybe Text)

-- | The compromised credentials actions type
--   
--   <i>See:</i> <a>newCompromisedCredentialsActionsType</a> smart
--   constructor.
data CompromisedCredentialsActionsType
CompromisedCredentialsActionsType' :: CompromisedCredentialsEventActionType -> CompromisedCredentialsActionsType

-- | The event action.
[$sel:eventAction:CompromisedCredentialsActionsType'] :: CompromisedCredentialsActionsType -> CompromisedCredentialsEventActionType

-- | Create a value of <a>CompromisedCredentialsActionsType</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:eventAction:CompromisedCredentialsActionsType'</a>,
--   <a>compromisedCredentialsActionsType_eventAction</a> - The event
--   action.
newCompromisedCredentialsActionsType :: CompromisedCredentialsEventActionType -> CompromisedCredentialsActionsType

-- | The event action.
compromisedCredentialsActionsType_eventAction :: Lens' CompromisedCredentialsActionsType CompromisedCredentialsEventActionType

-- | The compromised credentials risk configuration type.
--   
--   <i>See:</i> <a>newCompromisedCredentialsRiskConfigurationType</a>
--   smart constructor.
data CompromisedCredentialsRiskConfigurationType
CompromisedCredentialsRiskConfigurationType' :: Maybe [EventFilterType] -> CompromisedCredentialsActionsType -> CompromisedCredentialsRiskConfigurationType

-- | Perform the action for these events. The default is to perform all
--   events if no event filter is specified.
[$sel:eventFilter:CompromisedCredentialsRiskConfigurationType'] :: CompromisedCredentialsRiskConfigurationType -> Maybe [EventFilterType]

-- | The compromised credentials risk configuration actions.
[$sel:actions:CompromisedCredentialsRiskConfigurationType'] :: CompromisedCredentialsRiskConfigurationType -> CompromisedCredentialsActionsType

-- | Create a value of <a>CompromisedCredentialsRiskConfigurationType</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:eventFilter:CompromisedCredentialsRiskConfigurationType'</a>,
--   <a>compromisedCredentialsRiskConfigurationType_eventFilter</a> -
--   Perform the action for these events. The default is to perform all
--   events if no event filter is specified.
--   
--   <a>$sel:actions:CompromisedCredentialsRiskConfigurationType'</a>,
--   <a>compromisedCredentialsRiskConfigurationType_actions</a> - The
--   compromised credentials risk configuration actions.
newCompromisedCredentialsRiskConfigurationType :: CompromisedCredentialsActionsType -> CompromisedCredentialsRiskConfigurationType

-- | Perform the action for these events. The default is to perform all
--   events if no event filter is specified.
compromisedCredentialsRiskConfigurationType_eventFilter :: Lens' CompromisedCredentialsRiskConfigurationType (Maybe [EventFilterType])

-- | The compromised credentials risk configuration actions.
compromisedCredentialsRiskConfigurationType_actions :: Lens' CompromisedCredentialsRiskConfigurationType CompromisedCredentialsActionsType

-- | Contextual user data type used for evaluating the risk of an
--   unexpected event by Amazon Cognito advanced security.
--   
--   <i>See:</i> <a>newContextDataType</a> smart constructor.
data ContextDataType
ContextDataType' :: Maybe Text -> Text -> Text -> Text -> [HttpHeader] -> ContextDataType

-- | Encoded data containing device fingerprinting details, collected using
--   the Amazon Cognito context data collection library.
[$sel:encodedData:ContextDataType'] :: ContextDataType -> Maybe Text

-- | Source IP address of your user.
[$sel:ipAddress:ContextDataType'] :: ContextDataType -> Text

-- | Your server endpoint where this API is invoked.
[$sel:serverName:ContextDataType'] :: ContextDataType -> Text

-- | Your server path where this API is invoked.
[$sel:serverPath:ContextDataType'] :: ContextDataType -> Text

-- | HttpHeaders received on your server in same order.
[$sel:httpHeaders:ContextDataType'] :: ContextDataType -> [HttpHeader]

-- | Create a value of <a>ContextDataType</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:encodedData:ContextDataType'</a>,
--   <a>contextDataType_encodedData</a> - Encoded data containing device
--   fingerprinting details, collected using the Amazon Cognito context
--   data collection library.
--   
--   <a>$sel:ipAddress:ContextDataType'</a>,
--   <a>contextDataType_ipAddress</a> - Source IP address of your user.
--   
--   <a>$sel:serverName:ContextDataType'</a>,
--   <a>contextDataType_serverName</a> - Your server endpoint where this
--   API is invoked.
--   
--   <a>$sel:serverPath:ContextDataType'</a>,
--   <a>contextDataType_serverPath</a> - Your server path where this API is
--   invoked.
--   
--   <a>$sel:httpHeaders:ContextDataType'</a>,
--   <a>contextDataType_httpHeaders</a> - HttpHeaders received on your
--   server in same order.
newContextDataType :: Text -> Text -> Text -> ContextDataType

-- | Encoded data containing device fingerprinting details, collected using
--   the Amazon Cognito context data collection library.
contextDataType_encodedData :: Lens' ContextDataType (Maybe Text)

-- | Source IP address of your user.
contextDataType_ipAddress :: Lens' ContextDataType Text

-- | Your server endpoint where this API is invoked.
contextDataType_serverName :: Lens' ContextDataType Text

-- | Your server path where this API is invoked.
contextDataType_serverPath :: Lens' ContextDataType Text

-- | HttpHeaders received on your server in same order.
contextDataType_httpHeaders :: Lens' ContextDataType [HttpHeader]

-- | The configuration for a custom domain that hosts the sign-up and
--   sign-in webpages for your application.
--   
--   <i>See:</i> <a>newCustomDomainConfigType</a> smart constructor.
data CustomDomainConfigType
CustomDomainConfigType' :: Text -> CustomDomainConfigType

-- | The Amazon Resource Name (ARN) of an Certificate Manager SSL
--   certificate. You use this certificate for the subdomain of your custom
--   domain.
[$sel:certificateArn:CustomDomainConfigType'] :: CustomDomainConfigType -> Text

-- | Create a value of <a>CustomDomainConfigType</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:certificateArn:CustomDomainConfigType'</a>,
--   <a>customDomainConfigType_certificateArn</a> - The Amazon Resource
--   Name (ARN) of an Certificate Manager SSL certificate. You use this
--   certificate for the subdomain of your custom domain.
newCustomDomainConfigType :: Text -> CustomDomainConfigType

-- | The Amazon Resource Name (ARN) of an Certificate Manager SSL
--   certificate. You use this certificate for the subdomain of your custom
--   domain.
customDomainConfigType_certificateArn :: Lens' CustomDomainConfigType Text

-- | A custom email sender Lambda configuration type.
--   
--   <i>See:</i> <a>newCustomEmailLambdaVersionConfigType</a> smart
--   constructor.
data CustomEmailLambdaVersionConfigType
CustomEmailLambdaVersionConfigType' :: CustomEmailSenderLambdaVersionType -> Text -> CustomEmailLambdaVersionConfigType

-- | The Lambda version represents the signature of the "request" attribute
--   in the "event" information Amazon Cognito passes to your custom email
--   Lambda function. The only supported value is <tt>V1_0</tt>.
[$sel:lambdaVersion:CustomEmailLambdaVersionConfigType'] :: CustomEmailLambdaVersionConfigType -> CustomEmailSenderLambdaVersionType

-- | The Lambda Amazon Resource Name of the Lambda function that Amazon
--   Cognito triggers to send email notifications to users.
[$sel:lambdaArn:CustomEmailLambdaVersionConfigType'] :: CustomEmailLambdaVersionConfigType -> Text

-- | Create a value of <a>CustomEmailLambdaVersionConfigType</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lambdaVersion:CustomEmailLambdaVersionConfigType'</a>,
--   <a>customEmailLambdaVersionConfigType_lambdaVersion</a> - The Lambda
--   version represents the signature of the "request" attribute in the
--   "event" information Amazon Cognito passes to your custom email Lambda
--   function. The only supported value is <tt>V1_0</tt>.
--   
--   <a>$sel:lambdaArn:CustomEmailLambdaVersionConfigType'</a>,
--   <a>customEmailLambdaVersionConfigType_lambdaArn</a> - The Lambda
--   Amazon Resource Name of the Lambda function that Amazon Cognito
--   triggers to send email notifications to users.
newCustomEmailLambdaVersionConfigType :: CustomEmailSenderLambdaVersionType -> Text -> CustomEmailLambdaVersionConfigType

-- | The Lambda version represents the signature of the "request" attribute
--   in the "event" information Amazon Cognito passes to your custom email
--   Lambda function. The only supported value is <tt>V1_0</tt>.
customEmailLambdaVersionConfigType_lambdaVersion :: Lens' CustomEmailLambdaVersionConfigType CustomEmailSenderLambdaVersionType

-- | The Lambda Amazon Resource Name of the Lambda function that Amazon
--   Cognito triggers to send email notifications to users.
customEmailLambdaVersionConfigType_lambdaArn :: Lens' CustomEmailLambdaVersionConfigType Text

-- | A custom SMS sender Lambda configuration type.
--   
--   <i>See:</i> <a>newCustomSMSLambdaVersionConfigType</a> smart
--   constructor.
data CustomSMSLambdaVersionConfigType
CustomSMSLambdaVersionConfigType' :: CustomSMSSenderLambdaVersionType -> Text -> CustomSMSLambdaVersionConfigType

-- | The Lambda version represents the signature of the "request" attribute
--   in the "event" information Amazon Cognito passes to your custom SMS
--   Lambda function. The only supported value is <tt>V1_0</tt>.
[$sel:lambdaVersion:CustomSMSLambdaVersionConfigType'] :: CustomSMSLambdaVersionConfigType -> CustomSMSSenderLambdaVersionType

-- | The Lambda Amazon Resource Name of the Lambda function that Amazon
--   Cognito triggers to send SMS notifications to users.
[$sel:lambdaArn:CustomSMSLambdaVersionConfigType'] :: CustomSMSLambdaVersionConfigType -> Text

-- | Create a value of <a>CustomSMSLambdaVersionConfigType</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lambdaVersion:CustomSMSLambdaVersionConfigType'</a>,
--   <a>customSMSLambdaVersionConfigType_lambdaVersion</a> - The Lambda
--   version represents the signature of the "request" attribute in the
--   "event" information Amazon Cognito passes to your custom SMS Lambda
--   function. The only supported value is <tt>V1_0</tt>.
--   
--   <a>$sel:lambdaArn:CustomSMSLambdaVersionConfigType'</a>,
--   <a>customSMSLambdaVersionConfigType_lambdaArn</a> - The Lambda Amazon
--   Resource Name of the Lambda function that Amazon Cognito triggers to
--   send SMS notifications to users.
newCustomSMSLambdaVersionConfigType :: CustomSMSSenderLambdaVersionType -> Text -> CustomSMSLambdaVersionConfigType

-- | The Lambda version represents the signature of the "request" attribute
--   in the "event" information Amazon Cognito passes to your custom SMS
--   Lambda function. The only supported value is <tt>V1_0</tt>.
customSMSLambdaVersionConfigType_lambdaVersion :: Lens' CustomSMSLambdaVersionConfigType CustomSMSSenderLambdaVersionType

-- | The Lambda Amazon Resource Name of the Lambda function that Amazon
--   Cognito triggers to send SMS notifications to users.
customSMSLambdaVersionConfigType_lambdaArn :: Lens' CustomSMSLambdaVersionConfigType Text

-- | The configuration for the user pool's device tracking.
--   
--   <i>See:</i> <a>newDeviceConfigurationType</a> smart constructor.
data DeviceConfigurationType
DeviceConfigurationType' :: Maybe Bool -> Maybe Bool -> DeviceConfigurationType

-- | Indicates whether a challenge is required on a new device. Only
--   applicable to a new device.
[$sel:challengeRequiredOnNewDevice:DeviceConfigurationType'] :: DeviceConfigurationType -> Maybe Bool

-- | If true, a device is only remembered on user prompt.
[$sel:deviceOnlyRememberedOnUserPrompt:DeviceConfigurationType'] :: DeviceConfigurationType -> Maybe Bool

-- | Create a value of <a>DeviceConfigurationType</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:challengeRequiredOnNewDevice:DeviceConfigurationType'</a>,
--   <a>deviceConfigurationType_challengeRequiredOnNewDevice</a> -
--   Indicates whether a challenge is required on a new device. Only
--   applicable to a new device.
--   
--   <a>$sel:deviceOnlyRememberedOnUserPrompt:DeviceConfigurationType'</a>,
--   <a>deviceConfigurationType_deviceOnlyRememberedOnUserPrompt</a> - If
--   true, a device is only remembered on user prompt.
newDeviceConfigurationType :: DeviceConfigurationType

-- | Indicates whether a challenge is required on a new device. Only
--   applicable to a new device.
deviceConfigurationType_challengeRequiredOnNewDevice :: Lens' DeviceConfigurationType (Maybe Bool)

-- | If true, a device is only remembered on user prompt.
deviceConfigurationType_deviceOnlyRememberedOnUserPrompt :: Lens' DeviceConfigurationType (Maybe Bool)

-- | The device verifier against which it will be authenticated.
--   
--   <i>See:</i> <a>newDeviceSecretVerifierConfigType</a> smart
--   constructor.
data DeviceSecretVerifierConfigType
DeviceSecretVerifierConfigType' :: Maybe Text -> Maybe Text -> DeviceSecretVerifierConfigType

-- | The password verifier.
[$sel:passwordVerifier:DeviceSecretVerifierConfigType'] :: DeviceSecretVerifierConfigType -> Maybe Text

-- | The salt.
[$sel:salt:DeviceSecretVerifierConfigType'] :: DeviceSecretVerifierConfigType -> Maybe Text

-- | Create a value of <a>DeviceSecretVerifierConfigType</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:passwordVerifier:DeviceSecretVerifierConfigType'</a>,
--   <a>deviceSecretVerifierConfigType_passwordVerifier</a> - The password
--   verifier.
--   
--   <a>$sel:salt:DeviceSecretVerifierConfigType'</a>,
--   <a>deviceSecretVerifierConfigType_salt</a> - The salt.
newDeviceSecretVerifierConfigType :: DeviceSecretVerifierConfigType

-- | The password verifier.
deviceSecretVerifierConfigType_passwordVerifier :: Lens' DeviceSecretVerifierConfigType (Maybe Text)

-- | The salt.
deviceSecretVerifierConfigType_salt :: Lens' DeviceSecretVerifierConfigType (Maybe Text)

-- | The device type.
--   
--   <i>See:</i> <a>newDeviceType</a> smart constructor.
data DeviceType
DeviceType' :: Maybe POSIX -> Maybe POSIX -> Maybe [AttributeType] -> Maybe Text -> Maybe POSIX -> DeviceType

-- | The last modified date of the device.
[$sel:deviceLastModifiedDate:DeviceType'] :: DeviceType -> Maybe POSIX

-- | The creation date of the device.
[$sel:deviceCreateDate:DeviceType'] :: DeviceType -> Maybe POSIX

-- | The device attributes.
[$sel:deviceAttributes:DeviceType'] :: DeviceType -> Maybe [AttributeType]

-- | The device key.
[$sel:deviceKey:DeviceType'] :: DeviceType -> Maybe Text

-- | The date in which the device was last authenticated.
[$sel:deviceLastAuthenticatedDate:DeviceType'] :: DeviceType -> Maybe POSIX

-- | Create a value of <a>DeviceType</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deviceLastModifiedDate:DeviceType'</a>,
--   <a>deviceType_deviceLastModifiedDate</a> - The last modified date of
--   the device.
--   
--   <a>$sel:deviceCreateDate:DeviceType'</a>,
--   <a>deviceType_deviceCreateDate</a> - The creation date of the device.
--   
--   <a>$sel:deviceAttributes:DeviceType'</a>,
--   <a>deviceType_deviceAttributes</a> - The device attributes.
--   
--   <a>$sel:deviceKey:DeviceType'</a>, <a>deviceType_deviceKey</a> - The
--   device key.
--   
--   <a>$sel:deviceLastAuthenticatedDate:DeviceType'</a>,
--   <a>deviceType_deviceLastAuthenticatedDate</a> - The date in which the
--   device was last authenticated.
newDeviceType :: DeviceType

-- | The last modified date of the device.
deviceType_deviceLastModifiedDate :: Lens' DeviceType (Maybe UTCTime)

-- | The creation date of the device.
deviceType_deviceCreateDate :: Lens' DeviceType (Maybe UTCTime)

-- | The device attributes.
deviceType_deviceAttributes :: Lens' DeviceType (Maybe [AttributeType])

-- | The device key.
deviceType_deviceKey :: Lens' DeviceType (Maybe Text)

-- | The date in which the device was last authenticated.
deviceType_deviceLastAuthenticatedDate :: Lens' DeviceType (Maybe UTCTime)

-- | A container for information about a domain.
--   
--   <i>See:</i> <a>newDomainDescriptionType</a> smart constructor.
data DomainDescriptionType
DomainDescriptionType' :: Maybe DomainStatusType -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe CustomDomainConfigType -> Maybe Text -> Maybe Text -> DomainDescriptionType

-- | The domain status.
[$sel:status:DomainDescriptionType'] :: DomainDescriptionType -> Maybe DomainStatusType

-- | The ARN of the CloudFront distribution.
[$sel:cloudFrontDistribution:DomainDescriptionType'] :: DomainDescriptionType -> Maybe Text

-- | The user pool ID.
[$sel:userPoolId:DomainDescriptionType'] :: DomainDescriptionType -> Maybe Text

-- | The domain string.
[$sel:domain:DomainDescriptionType'] :: DomainDescriptionType -> Maybe Text

-- | The account ID for the user pool owner.
[$sel:aWSAccountId:DomainDescriptionType'] :: DomainDescriptionType -> Maybe Text

-- | The configuration for a custom domain that hosts the sign-up and
--   sign-in webpages for your application.
[$sel:customDomainConfig:DomainDescriptionType'] :: DomainDescriptionType -> Maybe CustomDomainConfigType

-- | The app version.
[$sel:version:DomainDescriptionType'] :: DomainDescriptionType -> Maybe Text

-- | The S3 bucket where the static files for this domain are stored.
[$sel:s3Bucket:DomainDescriptionType'] :: DomainDescriptionType -> Maybe Text

-- | Create a value of <a>DomainDescriptionType</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:DomainDescriptionType'</a>,
--   <a>domainDescriptionType_status</a> - The domain status.
--   
--   <a>$sel:cloudFrontDistribution:DomainDescriptionType'</a>,
--   <a>domainDescriptionType_cloudFrontDistribution</a> - The ARN of the
--   CloudFront distribution.
--   
--   <a>$sel:userPoolId:DomainDescriptionType'</a>,
--   <a>domainDescriptionType_userPoolId</a> - The user pool ID.
--   
--   <a>$sel:domain:DomainDescriptionType'</a>,
--   <a>domainDescriptionType_domain</a> - The domain string.
--   
--   <a>$sel:aWSAccountId:DomainDescriptionType'</a>,
--   <a>domainDescriptionType_aWSAccountId</a> - The account ID for the
--   user pool owner.
--   
--   <a>$sel:customDomainConfig:DomainDescriptionType'</a>,
--   <a>domainDescriptionType_customDomainConfig</a> - The configuration
--   for a custom domain that hosts the sign-up and sign-in webpages for
--   your application.
--   
--   <a>$sel:version:DomainDescriptionType'</a>,
--   <a>domainDescriptionType_version</a> - The app version.
--   
--   <a>$sel:s3Bucket:DomainDescriptionType'</a>,
--   <a>domainDescriptionType_s3Bucket</a> - The S3 bucket where the static
--   files for this domain are stored.
newDomainDescriptionType :: DomainDescriptionType

-- | The domain status.
domainDescriptionType_status :: Lens' DomainDescriptionType (Maybe DomainStatusType)

-- | The ARN of the CloudFront distribution.
domainDescriptionType_cloudFrontDistribution :: Lens' DomainDescriptionType (Maybe Text)

-- | The user pool ID.
domainDescriptionType_userPoolId :: Lens' DomainDescriptionType (Maybe Text)

-- | The domain string.
domainDescriptionType_domain :: Lens' DomainDescriptionType (Maybe Text)

-- | The account ID for the user pool owner.
domainDescriptionType_aWSAccountId :: Lens' DomainDescriptionType (Maybe Text)

-- | The configuration for a custom domain that hosts the sign-up and
--   sign-in webpages for your application.
domainDescriptionType_customDomainConfig :: Lens' DomainDescriptionType (Maybe CustomDomainConfigType)

-- | The app version.
domainDescriptionType_version :: Lens' DomainDescriptionType (Maybe Text)

-- | The S3 bucket where the static files for this domain are stored.
domainDescriptionType_s3Bucket :: Lens' DomainDescriptionType (Maybe Text)

-- | The email configuration type.
--   
--   Amazon Cognito has specific regions for use with Amazon SES. For more
--   information on the supported regions, see <a>Email Settings for Amazon
--   Cognito User Pools</a>.
--   
--   <i>See:</i> <a>newEmailConfigurationType</a> smart constructor.
data EmailConfigurationType
EmailConfigurationType' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe EmailSendingAccountType -> EmailConfigurationType

-- | The Amazon Resource Name (ARN) of a verified email address in Amazon
--   SES. This email address is used in one of the following ways,
--   depending on the value that you specify for the
--   <tt>EmailSendingAccount</tt> parameter:
--   
--   <ul>
--   <li>If you specify <tt>COGNITO_DEFAULT</tt>, Amazon Cognito uses this
--   address as the custom FROM address when it emails your users by using
--   its built-in email account.</li>
--   <li>If you specify <tt>DEVELOPER</tt>, Amazon Cognito emails your
--   users with this address by calling Amazon SES on your behalf.</li>
--   </ul>
[$sel:sourceArn:EmailConfigurationType'] :: EmailConfigurationType -> Maybe Text

-- | Identifies either the sender’s email address or the sender’s name with
--   their email address. For example, <tt>testuser@example.com</tt> or
--   <tt>Test User &lt;testuser@example.com&gt;</tt>. This address will
--   appear before the body of the email.
[$sel:from:EmailConfigurationType'] :: EmailConfigurationType -> Maybe Text

-- | The set of configuration rules that can be applied to emails sent
--   using Amazon SES. A configuration set is applied to an email by
--   including a reference to the configuration set in the headers of the
--   email. Once applied, all of the rules in that configuration set are
--   applied to the email. Configuration sets can be used to apply the
--   following types of rules to emails:
--   
--   <ul>
--   <li>Event publishing – Amazon SES can track the number of send,
--   delivery, open, click, bounce, and complaint events for each email
--   sent. Use event publishing to send information about these events to
--   other Amazon Web Services services such as SNS and CloudWatch.</li>
--   <li>IP pool management – When leasing dedicated IP addresses with
--   Amazon SES, you can create groups of IP addresses, called dedicated IP
--   pools. You can then associate the dedicated IP pools with
--   configuration sets.</li>
--   </ul>
[$sel:configurationSet:EmailConfigurationType'] :: EmailConfigurationType -> Maybe Text

-- | The destination to which the receiver of the email should reply to.
[$sel:replyToEmailAddress:EmailConfigurationType'] :: EmailConfigurationType -> Maybe Text

-- | Specifies whether Amazon Cognito emails your users by using its
--   built-in email functionality or your Amazon SES email configuration.
--   Specify one of the following values:
--   
--   <ul>
--   <li><i>COGNITO_DEFAULT</i> When Amazon Cognito emails your users, it
--   uses its built-in email functionality. When you use the default
--   option, Amazon Cognito allows only a limited number of emails each day
--   for your user pool. For typical production environments, the default
--   email limit is below the required delivery volume. To achieve a higher
--   delivery volume, specify DEVELOPER to use your Amazon SES email
--   configuration.To look up the email delivery limit for the default
--   option, see <a>Limits in Amazon Cognito</a> in the <i>Amazon Cognito
--   Developer Guide</i>.The default FROM address is
--   no-reply@verificationemail.com. To customize the FROM address, provide
--   the ARN of an Amazon SES verified email address for the
--   <tt>SourceArn</tt> parameter.If EmailSendingAccount is
--   COGNITO_DEFAULT, the following parameters aren't
--   allowed:<ul><li>EmailVerificationMessage</li><li>EmailVerificationSubject</li><li>InviteMessageTemplate.EmailMessage</li><li>InviteMessageTemplate.EmailSubject</li><li>VerificationMessageTemplate.EmailMessage</li><li>VerificationMessageTemplate.EmailMessageByLink</li><li>VerificationMessageTemplate.EmailSubject,</li><li>VerificationMessageTemplate.EmailSubjectByLink</li></ul>DEVELOPER
--   EmailSendingAccount is required.</li>
--   <li><i>DEVELOPER</i> When Amazon Cognito emails your users, it uses
--   your Amazon SES configuration. Amazon Cognito calls Amazon SES on your
--   behalf to send email from your verified email address. When you use
--   this option, the email delivery limits are the same limits that apply
--   to your Amazon SES verified email address in your account.If you use
--   this option, you must provide the ARN of an Amazon SES verified email
--   address for the <tt>SourceArn</tt> parameter.Before Amazon Cognito can
--   email your users, it requires additional permissions to call Amazon
--   SES on your behalf. When you update your user pool with this option,
--   Amazon Cognito creates a /service-linked role/, which is a type of IAM
--   role, in your account. This role contains the permissions that allow
--   Amazon Cognito to access Amazon SES and send email messages with your
--   address. For more information about the service-linked role that
--   Amazon Cognito creates, see <a>Using Service-Linked Roles for Amazon
--   Cognito</a> in the <i>Amazon Cognito Developer Guide</i>.</li>
--   </ul>
[$sel:emailSendingAccount:EmailConfigurationType'] :: EmailConfigurationType -> Maybe EmailSendingAccountType

-- | Create a value of <a>EmailConfigurationType</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sourceArn:EmailConfigurationType'</a>,
--   <a>emailConfigurationType_sourceArn</a> - The Amazon Resource Name
--   (ARN) of a verified email address in Amazon SES. This email address is
--   used in one of the following ways, depending on the value that you
--   specify for the <tt>EmailSendingAccount</tt> parameter:
--   
--   <ul>
--   <li>If you specify <tt>COGNITO_DEFAULT</tt>, Amazon Cognito uses this
--   address as the custom FROM address when it emails your users by using
--   its built-in email account.</li>
--   <li>If you specify <tt>DEVELOPER</tt>, Amazon Cognito emails your
--   users with this address by calling Amazon SES on your behalf.</li>
--   </ul>
--   
--   <a>$sel:from:EmailConfigurationType'</a>,
--   <a>emailConfigurationType_from</a> - Identifies either the sender’s
--   email address or the sender’s name with their email address. For
--   example, <tt>testuser@example.com</tt> or <tt>Test User
--   &lt;testuser@example.com&gt;</tt>. This address will appear before the
--   body of the email.
--   
--   <a>$sel:configurationSet:EmailConfigurationType'</a>,
--   <a>emailConfigurationType_configurationSet</a> - The set of
--   configuration rules that can be applied to emails sent using Amazon
--   SES. A configuration set is applied to an email by including a
--   reference to the configuration set in the headers of the email. Once
--   applied, all of the rules in that configuration set are applied to the
--   email. Configuration sets can be used to apply the following types of
--   rules to emails:
--   
--   <ul>
--   <li>Event publishing – Amazon SES can track the number of send,
--   delivery, open, click, bounce, and complaint events for each email
--   sent. Use event publishing to send information about these events to
--   other Amazon Web Services services such as SNS and CloudWatch.</li>
--   <li>IP pool management – When leasing dedicated IP addresses with
--   Amazon SES, you can create groups of IP addresses, called dedicated IP
--   pools. You can then associate the dedicated IP pools with
--   configuration sets.</li>
--   </ul>
--   
--   <a>$sel:replyToEmailAddress:EmailConfigurationType'</a>,
--   <a>emailConfigurationType_replyToEmailAddress</a> - The destination to
--   which the receiver of the email should reply to.
--   
--   <a>$sel:emailSendingAccount:EmailConfigurationType'</a>,
--   <a>emailConfigurationType_emailSendingAccount</a> - Specifies whether
--   Amazon Cognito emails your users by using its built-in email
--   functionality or your Amazon SES email configuration. Specify one of
--   the following values:
--   
--   <ul>
--   <li><i>COGNITO_DEFAULT</i> When Amazon Cognito emails your users, it
--   uses its built-in email functionality. When you use the default
--   option, Amazon Cognito allows only a limited number of emails each day
--   for your user pool. For typical production environments, the default
--   email limit is below the required delivery volume. To achieve a higher
--   delivery volume, specify DEVELOPER to use your Amazon SES email
--   configuration.To look up the email delivery limit for the default
--   option, see <a>Limits in Amazon Cognito</a> in the <i>Amazon Cognito
--   Developer Guide</i>.The default FROM address is
--   no-reply@verificationemail.com. To customize the FROM address, provide
--   the ARN of an Amazon SES verified email address for the
--   <tt>SourceArn</tt> parameter.If EmailSendingAccount is
--   COGNITO_DEFAULT, the following parameters aren't
--   allowed:<ul><li>EmailVerificationMessage</li><li>EmailVerificationSubject</li><li>InviteMessageTemplate.EmailMessage</li><li>InviteMessageTemplate.EmailSubject</li><li>VerificationMessageTemplate.EmailMessage</li><li>VerificationMessageTemplate.EmailMessageByLink</li><li>VerificationMessageTemplate.EmailSubject,</li><li>VerificationMessageTemplate.EmailSubjectByLink</li></ul>DEVELOPER
--   EmailSendingAccount is required.</li>
--   <li><i>DEVELOPER</i> When Amazon Cognito emails your users, it uses
--   your Amazon SES configuration. Amazon Cognito calls Amazon SES on your
--   behalf to send email from your verified email address. When you use
--   this option, the email delivery limits are the same limits that apply
--   to your Amazon SES verified email address in your account.If you use
--   this option, you must provide the ARN of an Amazon SES verified email
--   address for the <tt>SourceArn</tt> parameter.Before Amazon Cognito can
--   email your users, it requires additional permissions to call Amazon
--   SES on your behalf. When you update your user pool with this option,
--   Amazon Cognito creates a /service-linked role/, which is a type of IAM
--   role, in your account. This role contains the permissions that allow
--   Amazon Cognito to access Amazon SES and send email messages with your
--   address. For more information about the service-linked role that
--   Amazon Cognito creates, see <a>Using Service-Linked Roles for Amazon
--   Cognito</a> in the <i>Amazon Cognito Developer Guide</i>.</li>
--   </ul>
newEmailConfigurationType :: EmailConfigurationType

-- | The Amazon Resource Name (ARN) of a verified email address in Amazon
--   SES. This email address is used in one of the following ways,
--   depending on the value that you specify for the
--   <tt>EmailSendingAccount</tt> parameter:
--   
--   <ul>
--   <li>If you specify <tt>COGNITO_DEFAULT</tt>, Amazon Cognito uses this
--   address as the custom FROM address when it emails your users by using
--   its built-in email account.</li>
--   <li>If you specify <tt>DEVELOPER</tt>, Amazon Cognito emails your
--   users with this address by calling Amazon SES on your behalf.</li>
--   </ul>
emailConfigurationType_sourceArn :: Lens' EmailConfigurationType (Maybe Text)

-- | Identifies either the sender’s email address or the sender’s name with
--   their email address. For example, <tt>testuser@example.com</tt> or
--   <tt>Test User &lt;testuser@example.com&gt;</tt>. This address will
--   appear before the body of the email.
emailConfigurationType_from :: Lens' EmailConfigurationType (Maybe Text)

-- | The set of configuration rules that can be applied to emails sent
--   using Amazon SES. A configuration set is applied to an email by
--   including a reference to the configuration set in the headers of the
--   email. Once applied, all of the rules in that configuration set are
--   applied to the email. Configuration sets can be used to apply the
--   following types of rules to emails:
--   
--   <ul>
--   <li>Event publishing – Amazon SES can track the number of send,
--   delivery, open, click, bounce, and complaint events for each email
--   sent. Use event publishing to send information about these events to
--   other Amazon Web Services services such as SNS and CloudWatch.</li>
--   <li>IP pool management – When leasing dedicated IP addresses with
--   Amazon SES, you can create groups of IP addresses, called dedicated IP
--   pools. You can then associate the dedicated IP pools with
--   configuration sets.</li>
--   </ul>
emailConfigurationType_configurationSet :: Lens' EmailConfigurationType (Maybe Text)

-- | The destination to which the receiver of the email should reply to.
emailConfigurationType_replyToEmailAddress :: Lens' EmailConfigurationType (Maybe Text)

-- | Specifies whether Amazon Cognito emails your users by using its
--   built-in email functionality or your Amazon SES email configuration.
--   Specify one of the following values:
--   
--   <ul>
--   <li><i>COGNITO_DEFAULT</i> When Amazon Cognito emails your users, it
--   uses its built-in email functionality. When you use the default
--   option, Amazon Cognito allows only a limited number of emails each day
--   for your user pool. For typical production environments, the default
--   email limit is below the required delivery volume. To achieve a higher
--   delivery volume, specify DEVELOPER to use your Amazon SES email
--   configuration.To look up the email delivery limit for the default
--   option, see <a>Limits in Amazon Cognito</a> in the <i>Amazon Cognito
--   Developer Guide</i>.The default FROM address is
--   no-reply@verificationemail.com. To customize the FROM address, provide
--   the ARN of an Amazon SES verified email address for the
--   <tt>SourceArn</tt> parameter.If EmailSendingAccount is
--   COGNITO_DEFAULT, the following parameters aren't
--   allowed:<ul><li>EmailVerificationMessage</li><li>EmailVerificationSubject</li><li>InviteMessageTemplate.EmailMessage</li><li>InviteMessageTemplate.EmailSubject</li><li>VerificationMessageTemplate.EmailMessage</li><li>VerificationMessageTemplate.EmailMessageByLink</li><li>VerificationMessageTemplate.EmailSubject,</li><li>VerificationMessageTemplate.EmailSubjectByLink</li></ul>DEVELOPER
--   EmailSendingAccount is required.</li>
--   <li><i>DEVELOPER</i> When Amazon Cognito emails your users, it uses
--   your Amazon SES configuration. Amazon Cognito calls Amazon SES on your
--   behalf to send email from your verified email address. When you use
--   this option, the email delivery limits are the same limits that apply
--   to your Amazon SES verified email address in your account.If you use
--   this option, you must provide the ARN of an Amazon SES verified email
--   address for the <tt>SourceArn</tt> parameter.Before Amazon Cognito can
--   email your users, it requires additional permissions to call Amazon
--   SES on your behalf. When you update your user pool with this option,
--   Amazon Cognito creates a /service-linked role/, which is a type of IAM
--   role, in your account. This role contains the permissions that allow
--   Amazon Cognito to access Amazon SES and send email messages with your
--   address. For more information about the service-linked role that
--   Amazon Cognito creates, see <a>Using Service-Linked Roles for Amazon
--   Cognito</a> in the <i>Amazon Cognito Developer Guide</i>.</li>
--   </ul>
emailConfigurationType_emailSendingAccount :: Lens' EmailConfigurationType (Maybe EmailSendingAccountType)

-- | Specifies the user context data captured at the time of an event
--   request.
--   
--   <i>See:</i> <a>newEventContextDataType</a> smart constructor.
data EventContextDataType
EventContextDataType' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> EventContextDataType

-- | The user's IP address.
[$sel:ipAddress:EventContextDataType'] :: EventContextDataType -> Maybe Text

-- | The user's country.
[$sel:country:EventContextDataType'] :: EventContextDataType -> Maybe Text

-- | The user's city.
[$sel:city:EventContextDataType'] :: EventContextDataType -> Maybe Text

-- | The user's device name.
[$sel:deviceName:EventContextDataType'] :: EventContextDataType -> Maybe Text

-- | The user's time zone.
[$sel:timezone:EventContextDataType'] :: EventContextDataType -> Maybe Text

-- | Create a value of <a>EventContextDataType</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ipAddress:EventContextDataType'</a>,
--   <a>eventContextDataType_ipAddress</a> - The user's IP address.
--   
--   <a>$sel:country:EventContextDataType'</a>,
--   <a>eventContextDataType_country</a> - The user's country.
--   
--   <a>$sel:city:EventContextDataType'</a>,
--   <a>eventContextDataType_city</a> - The user's city.
--   
--   <a>$sel:deviceName:EventContextDataType'</a>,
--   <a>eventContextDataType_deviceName</a> - The user's device name.
--   
--   <a>$sel:timezone:EventContextDataType'</a>,
--   <a>eventContextDataType_timezone</a> - The user's time zone.
newEventContextDataType :: EventContextDataType

-- | The user's IP address.
eventContextDataType_ipAddress :: Lens' EventContextDataType (Maybe Text)

-- | The user's country.
eventContextDataType_country :: Lens' EventContextDataType (Maybe Text)

-- | The user's city.
eventContextDataType_city :: Lens' EventContextDataType (Maybe Text)

-- | The user's device name.
eventContextDataType_deviceName :: Lens' EventContextDataType (Maybe Text)

-- | The user's time zone.
eventContextDataType_timezone :: Lens' EventContextDataType (Maybe Text)

-- | Specifies the event feedback type.
--   
--   <i>See:</i> <a>newEventFeedbackType</a> smart constructor.
data EventFeedbackType
EventFeedbackType' :: Maybe POSIX -> FeedbackValueType -> Text -> EventFeedbackType

-- | The event feedback date.
[$sel:feedbackDate:EventFeedbackType'] :: EventFeedbackType -> Maybe POSIX

-- | The event feedback value.
[$sel:feedbackValue:EventFeedbackType'] :: EventFeedbackType -> FeedbackValueType

-- | The provider.
[$sel:provider:EventFeedbackType'] :: EventFeedbackType -> Text

-- | Create a value of <a>EventFeedbackType</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:feedbackDate:EventFeedbackType'</a>,
--   <a>eventFeedbackType_feedbackDate</a> - The event feedback date.
--   
--   <a>$sel:feedbackValue:EventFeedbackType'</a>,
--   <a>eventFeedbackType_feedbackValue</a> - The event feedback value.
--   
--   <a>$sel:provider:EventFeedbackType'</a>,
--   <a>eventFeedbackType_provider</a> - The provider.
newEventFeedbackType :: FeedbackValueType -> Text -> EventFeedbackType

-- | The event feedback date.
eventFeedbackType_feedbackDate :: Lens' EventFeedbackType (Maybe UTCTime)

-- | The event feedback value.
eventFeedbackType_feedbackValue :: Lens' EventFeedbackType FeedbackValueType

-- | The provider.
eventFeedbackType_provider :: Lens' EventFeedbackType Text

-- | The event risk type.
--   
--   <i>See:</i> <a>newEventRiskType</a> smart constructor.
data EventRiskType
EventRiskType' :: Maybe Bool -> Maybe RiskLevelType -> Maybe RiskDecisionType -> EventRiskType

-- | Indicates whether compromised credentials were detected during an
--   authentication event.
[$sel:compromisedCredentialsDetected:EventRiskType'] :: EventRiskType -> Maybe Bool

-- | The risk level.
[$sel:riskLevel:EventRiskType'] :: EventRiskType -> Maybe RiskLevelType

-- | The risk decision.
[$sel:riskDecision:EventRiskType'] :: EventRiskType -> Maybe RiskDecisionType

-- | Create a value of <a>EventRiskType</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:compromisedCredentialsDetected:EventRiskType'</a>,
--   <a>eventRiskType_compromisedCredentialsDetected</a> - Indicates
--   whether compromised credentials were detected during an authentication
--   event.
--   
--   <a>$sel:riskLevel:EventRiskType'</a>, <a>eventRiskType_riskLevel</a> -
--   The risk level.
--   
--   <a>$sel:riskDecision:EventRiskType'</a>,
--   <a>eventRiskType_riskDecision</a> - The risk decision.
newEventRiskType :: EventRiskType

-- | Indicates whether compromised credentials were detected during an
--   authentication event.
eventRiskType_compromisedCredentialsDetected :: Lens' EventRiskType (Maybe Bool)

-- | The risk level.
eventRiskType_riskLevel :: Lens' EventRiskType (Maybe RiskLevelType)

-- | The risk decision.
eventRiskType_riskDecision :: Lens' EventRiskType (Maybe RiskDecisionType)

-- | The group type.
--   
--   <i>See:</i> <a>newGroupType</a> smart constructor.
data GroupType
GroupType' :: Maybe POSIX -> Maybe Text -> Maybe POSIX -> Maybe Natural -> Maybe Text -> Maybe Text -> Maybe Text -> GroupType

-- | The date the group was last modified.
[$sel:lastModifiedDate:GroupType'] :: GroupType -> Maybe POSIX

-- | The user pool ID for the user pool.
[$sel:userPoolId:GroupType'] :: GroupType -> Maybe Text

-- | The date the group was created.
[$sel:creationDate:GroupType'] :: GroupType -> Maybe POSIX

-- | A nonnegative integer value that specifies the precedence of this
--   group relative to the other groups that a user can belong to in the
--   user pool. If a user belongs to two or more groups, it is the group
--   with the highest precedence whose role ARN will be used in the
--   <tt>cognito:roles</tt> and <tt>cognito:preferred_role</tt> claims in
--   the user's tokens. Groups with higher <tt>Precedence</tt> values take
--   precedence over groups with lower <tt>Precedence</tt> values or with
--   null <tt>Precedence</tt> values.
--   
--   Two groups can have the same <tt>Precedence</tt> value. If this
--   happens, neither group takes precedence over the other. If two groups
--   with the same <tt>Precedence</tt> have the same role ARN, that role is
--   used in the <tt>cognito:preferred_role</tt> claim in tokens for users
--   in each group. If the two groups have different role ARNs, the
--   <tt>cognito:preferred_role</tt> claim is not set in users' tokens.
--   
--   The default <tt>Precedence</tt> value is null.
[$sel:precedence:GroupType'] :: GroupType -> Maybe Natural

-- | The name of the group.
[$sel:groupName:GroupType'] :: GroupType -> Maybe Text

-- | A string containing the description of the group.
[$sel:description:GroupType'] :: GroupType -> Maybe Text

-- | The role ARN for the group.
[$sel:roleArn:GroupType'] :: GroupType -> Maybe Text

-- | Create a value of <a>GroupType</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lastModifiedDate:GroupType'</a>,
--   <a>groupType_lastModifiedDate</a> - The date the group was last
--   modified.
--   
--   <a>$sel:userPoolId:GroupType'</a>, <a>groupType_userPoolId</a> - The
--   user pool ID for the user pool.
--   
--   <a>$sel:creationDate:GroupType'</a>, <a>groupType_creationDate</a> -
--   The date the group was created.
--   
--   <a>$sel:precedence:GroupType'</a>, <a>groupType_precedence</a> - A
--   nonnegative integer value that specifies the precedence of this group
--   relative to the other groups that a user can belong to in the user
--   pool. If a user belongs to two or more groups, it is the group with
--   the highest precedence whose role ARN will be used in the
--   <tt>cognito:roles</tt> and <tt>cognito:preferred_role</tt> claims in
--   the user's tokens. Groups with higher <tt>Precedence</tt> values take
--   precedence over groups with lower <tt>Precedence</tt> values or with
--   null <tt>Precedence</tt> values.
--   
--   Two groups can have the same <tt>Precedence</tt> value. If this
--   happens, neither group takes precedence over the other. If two groups
--   with the same <tt>Precedence</tt> have the same role ARN, that role is
--   used in the <tt>cognito:preferred_role</tt> claim in tokens for users
--   in each group. If the two groups have different role ARNs, the
--   <tt>cognito:preferred_role</tt> claim is not set in users' tokens.
--   
--   The default <tt>Precedence</tt> value is null.
--   
--   <a>$sel:groupName:GroupType'</a>, <a>groupType_groupName</a> - The
--   name of the group.
--   
--   <a>$sel:description:GroupType'</a>, <a>groupType_description</a> - A
--   string containing the description of the group.
--   
--   <a>$sel:roleArn:GroupType'</a>, <a>groupType_roleArn</a> - The role
--   ARN for the group.
newGroupType :: GroupType

-- | The date the group was last modified.
groupType_lastModifiedDate :: Lens' GroupType (Maybe UTCTime)

-- | The user pool ID for the user pool.
groupType_userPoolId :: Lens' GroupType (Maybe Text)

-- | The date the group was created.
groupType_creationDate :: Lens' GroupType (Maybe UTCTime)

-- | A nonnegative integer value that specifies the precedence of this
--   group relative to the other groups that a user can belong to in the
--   user pool. If a user belongs to two or more groups, it is the group
--   with the highest precedence whose role ARN will be used in the
--   <tt>cognito:roles</tt> and <tt>cognito:preferred_role</tt> claims in
--   the user's tokens. Groups with higher <tt>Precedence</tt> values take
--   precedence over groups with lower <tt>Precedence</tt> values or with
--   null <tt>Precedence</tt> values.
--   
--   Two groups can have the same <tt>Precedence</tt> value. If this
--   happens, neither group takes precedence over the other. If two groups
--   with the same <tt>Precedence</tt> have the same role ARN, that role is
--   used in the <tt>cognito:preferred_role</tt> claim in tokens for users
--   in each group. If the two groups have different role ARNs, the
--   <tt>cognito:preferred_role</tt> claim is not set in users' tokens.
--   
--   The default <tt>Precedence</tt> value is null.
groupType_precedence :: Lens' GroupType (Maybe Natural)

-- | The name of the group.
groupType_groupName :: Lens' GroupType (Maybe Text)

-- | A string containing the description of the group.
groupType_description :: Lens' GroupType (Maybe Text)

-- | The role ARN for the group.
groupType_roleArn :: Lens' GroupType (Maybe Text)

-- | The HTTP header.
--   
--   <i>See:</i> <a>newHttpHeader</a> smart constructor.
data HttpHeader
HttpHeader' :: Maybe Text -> Maybe Text -> HttpHeader

-- | The header value.
[$sel:headerValue:HttpHeader'] :: HttpHeader -> Maybe Text

-- | The header name
[$sel:headerName:HttpHeader'] :: HttpHeader -> Maybe Text

-- | Create a value of <a>HttpHeader</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:headerValue:HttpHeader'</a>, <a>httpHeader_headerValue</a> -
--   The header value.
--   
--   <a>$sel:headerName:HttpHeader'</a>, <a>httpHeader_headerName</a> - The
--   header name
newHttpHeader :: HttpHeader

-- | The header value.
httpHeader_headerValue :: Lens' HttpHeader (Maybe Text)

-- | The header name
httpHeader_headerName :: Lens' HttpHeader (Maybe Text)

-- | A container for information about an identity provider.
--   
--   <i>See:</i> <a>newIdentityProviderType</a> smart constructor.
data IdentityProviderType
IdentityProviderType' :: Maybe POSIX -> Maybe Text -> Maybe IdentityProviderTypeType -> Maybe POSIX -> Maybe [Text] -> Maybe (HashMap Text Text) -> Maybe (HashMap Text Text) -> Maybe Text -> IdentityProviderType

-- | The date the identity provider was last modified.
[$sel:lastModifiedDate:IdentityProviderType'] :: IdentityProviderType -> Maybe POSIX

-- | The user pool ID.
[$sel:userPoolId:IdentityProviderType'] :: IdentityProviderType -> Maybe Text

-- | The identity provider type.
[$sel:providerType:IdentityProviderType'] :: IdentityProviderType -> Maybe IdentityProviderTypeType

-- | The date the identity provider was created.
[$sel:creationDate:IdentityProviderType'] :: IdentityProviderType -> Maybe POSIX

-- | A list of identity provider identifiers.
[$sel:idpIdentifiers:IdentityProviderType'] :: IdentityProviderType -> Maybe [Text]

-- | A mapping of identity provider attributes to standard and custom user
--   pool attributes.
[$sel:attributeMapping:IdentityProviderType'] :: IdentityProviderType -> Maybe (HashMap Text Text)

-- | The identity provider details. The following list describes the
--   provider detail keys for each identity provider type.
--   
--   <ul>
--   <li>For Google and Login with
--   Amazon:<ul><li>client_id</li><li>client_secret</li><li>authorize_scopes</li></ul></li>
--   <li>For
--   Facebook:<ul><li>client_id</li><li>client_secret</li><li>authorize_scopes</li><li>api_version</li></ul></li>
--   <li>For Sign in with
--   Apple:<ul><li>client_id</li><li>team_id</li><li>key_id</li><li>private_key</li><li>authorize_scopes</li></ul></li>
--   <li>For OIDC
--   providers:<ul><li>client_id</li><li>client_secret</li><li>attributes_request_method</li><li>oidc_issuer</li><li>authorize_scopes</li><li>authorize_url
--   /if not available from discovery URL specified by oidc_issuer
--   key/</li><li>token_url /if not available from discovery URL specified
--   by oidc_issuer key/</li><li>attributes_url /if not available from
--   discovery URL specified by oidc_issuer key/</li><li>jwks_uri /if not
--   available from discovery URL specified by oidc_issuer
--   key/</li></ul></li>
--   <li>For SAML providers:<ul><li>MetadataFile OR
--   MetadataURL</li><li>IDPSignOut <i>optional</i></li></ul></li>
--   </ul>
[$sel:providerDetails:IdentityProviderType'] :: IdentityProviderType -> Maybe (HashMap Text Text)

-- | The identity provider name.
[$sel:providerName:IdentityProviderType'] :: IdentityProviderType -> Maybe Text

-- | Create a value of <a>IdentityProviderType</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lastModifiedDate:IdentityProviderType'</a>,
--   <a>identityProviderType_lastModifiedDate</a> - The date the identity
--   provider was last modified.
--   
--   <a>$sel:userPoolId:IdentityProviderType'</a>,
--   <a>identityProviderType_userPoolId</a> - The user pool ID.
--   
--   <a>$sel:providerType:IdentityProviderType'</a>,
--   <a>identityProviderType_providerType</a> - The identity provider type.
--   
--   <a>$sel:creationDate:IdentityProviderType'</a>,
--   <a>identityProviderType_creationDate</a> - The date the identity
--   provider was created.
--   
--   <a>$sel:idpIdentifiers:IdentityProviderType'</a>,
--   <a>identityProviderType_idpIdentifiers</a> - A list of identity
--   provider identifiers.
--   
--   <a>$sel:attributeMapping:IdentityProviderType'</a>,
--   <a>identityProviderType_attributeMapping</a> - A mapping of identity
--   provider attributes to standard and custom user pool attributes.
--   
--   <a>$sel:providerDetails:IdentityProviderType'</a>,
--   <a>identityProviderType_providerDetails</a> - The identity provider
--   details. The following list describes the provider detail keys for
--   each identity provider type.
--   
--   <ul>
--   <li>For Google and Login with
--   Amazon:<ul><li>client_id</li><li>client_secret</li><li>authorize_scopes</li></ul></li>
--   <li>For
--   Facebook:<ul><li>client_id</li><li>client_secret</li><li>authorize_scopes</li><li>api_version</li></ul></li>
--   <li>For Sign in with
--   Apple:<ul><li>client_id</li><li>team_id</li><li>key_id</li><li>private_key</li><li>authorize_scopes</li></ul></li>
--   <li>For OIDC
--   providers:<ul><li>client_id</li><li>client_secret</li><li>attributes_request_method</li><li>oidc_issuer</li><li>authorize_scopes</li><li>authorize_url
--   /if not available from discovery URL specified by oidc_issuer
--   key/</li><li>token_url /if not available from discovery URL specified
--   by oidc_issuer key/</li><li>attributes_url /if not available from
--   discovery URL specified by oidc_issuer key/</li><li>jwks_uri /if not
--   available from discovery URL specified by oidc_issuer
--   key/</li></ul></li>
--   <li>For SAML providers:<ul><li>MetadataFile OR
--   MetadataURL</li><li>IDPSignOut <i>optional</i></li></ul></li>
--   </ul>
--   
--   <a>$sel:providerName:IdentityProviderType'</a>,
--   <a>identityProviderType_providerName</a> - The identity provider name.
newIdentityProviderType :: IdentityProviderType

-- | The date the identity provider was last modified.
identityProviderType_lastModifiedDate :: Lens' IdentityProviderType (Maybe UTCTime)

-- | The user pool ID.
identityProviderType_userPoolId :: Lens' IdentityProviderType (Maybe Text)

-- | The identity provider type.
identityProviderType_providerType :: Lens' IdentityProviderType (Maybe IdentityProviderTypeType)

-- | The date the identity provider was created.
identityProviderType_creationDate :: Lens' IdentityProviderType (Maybe UTCTime)

-- | A list of identity provider identifiers.
identityProviderType_idpIdentifiers :: Lens' IdentityProviderType (Maybe [Text])

-- | A mapping of identity provider attributes to standard and custom user
--   pool attributes.
identityProviderType_attributeMapping :: Lens' IdentityProviderType (Maybe (HashMap Text Text))

-- | The identity provider details. The following list describes the
--   provider detail keys for each identity provider type.
--   
--   <ul>
--   <li>For Google and Login with
--   Amazon:<ul><li>client_id</li><li>client_secret</li><li>authorize_scopes</li></ul></li>
--   <li>For
--   Facebook:<ul><li>client_id</li><li>client_secret</li><li>authorize_scopes</li><li>api_version</li></ul></li>
--   <li>For Sign in with
--   Apple:<ul><li>client_id</li><li>team_id</li><li>key_id</li><li>private_key</li><li>authorize_scopes</li></ul></li>
--   <li>For OIDC
--   providers:<ul><li>client_id</li><li>client_secret</li><li>attributes_request_method</li><li>oidc_issuer</li><li>authorize_scopes</li><li>authorize_url
--   /if not available from discovery URL specified by oidc_issuer
--   key/</li><li>token_url /if not available from discovery URL specified
--   by oidc_issuer key/</li><li>attributes_url /if not available from
--   discovery URL specified by oidc_issuer key/</li><li>jwks_uri /if not
--   available from discovery URL specified by oidc_issuer
--   key/</li></ul></li>
--   <li>For SAML providers:<ul><li>MetadataFile OR
--   MetadataURL</li><li>IDPSignOut <i>optional</i></li></ul></li>
--   </ul>
identityProviderType_providerDetails :: Lens' IdentityProviderType (Maybe (HashMap Text Text))

-- | The identity provider name.
identityProviderType_providerName :: Lens' IdentityProviderType (Maybe Text)

-- | Specifies the configuration for Lambda triggers.
--   
--   <i>See:</i> <a>newLambdaConfigType</a> smart constructor.
data LambdaConfigType
LambdaConfigType' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe CustomSMSLambdaVersionConfigType -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe CustomEmailLambdaVersionConfigType -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> LambdaConfigType

-- | A pre-authentication Lambda trigger.
[$sel:preAuthentication:LambdaConfigType'] :: LambdaConfigType -> Maybe Text

-- | Creates an authentication challenge.
[$sel:createAuthChallenge:LambdaConfigType'] :: LambdaConfigType -> Maybe Text

-- | Verifies the authentication challenge response.
[$sel:verifyAuthChallengeResponse:LambdaConfigType'] :: LambdaConfigType -> Maybe Text

-- | A custom SMS sender Lambda trigger.
[$sel:customSMSSender:LambdaConfigType'] :: LambdaConfigType -> Maybe CustomSMSLambdaVersionConfigType

-- | A post-authentication Lambda trigger.
[$sel:postAuthentication:LambdaConfigType'] :: LambdaConfigType -> Maybe Text

-- | A custom Message Lambda trigger.
[$sel:customMessage:LambdaConfigType'] :: LambdaConfigType -> Maybe Text

-- | Defines the authentication challenge.
[$sel:defineAuthChallenge:LambdaConfigType'] :: LambdaConfigType -> Maybe Text

-- | A custom email sender Lambda trigger.
[$sel:customEmailSender:LambdaConfigType'] :: LambdaConfigType -> Maybe CustomEmailLambdaVersionConfigType

-- | The Amazon Resource Name of Key Management Service <a>Customer master
--   keys</a> . Amazon Cognito uses the key to encrypt codes and temporary
--   passwords sent to <tt>CustomEmailSender</tt> and
--   <tt>CustomSMSSender</tt>.
[$sel:kmsKeyID:LambdaConfigType'] :: LambdaConfigType -> Maybe Text

-- | A post-confirmation Lambda trigger.
[$sel:postConfirmation:LambdaConfigType'] :: LambdaConfigType -> Maybe Text

-- | A Lambda trigger that is invoked before token generation.
[$sel:preTokenGeneration:LambdaConfigType'] :: LambdaConfigType -> Maybe Text

-- | The user migration Lambda config type.
[$sel:userMigration:LambdaConfigType'] :: LambdaConfigType -> Maybe Text

-- | A pre-registration Lambda trigger.
[$sel:preSignUp:LambdaConfigType'] :: LambdaConfigType -> Maybe Text

-- | Create a value of <a>LambdaConfigType</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:preAuthentication:LambdaConfigType'</a>,
--   <a>lambdaConfigType_preAuthentication</a> - A pre-authentication
--   Lambda trigger.
--   
--   <a>$sel:createAuthChallenge:LambdaConfigType'</a>,
--   <a>lambdaConfigType_createAuthChallenge</a> - Creates an
--   authentication challenge.
--   
--   <a>$sel:verifyAuthChallengeResponse:LambdaConfigType'</a>,
--   <a>lambdaConfigType_verifyAuthChallengeResponse</a> - Verifies the
--   authentication challenge response.
--   
--   <a>$sel:customSMSSender:LambdaConfigType'</a>,
--   <a>lambdaConfigType_customSMSSender</a> - A custom SMS sender Lambda
--   trigger.
--   
--   <a>$sel:postAuthentication:LambdaConfigType'</a>,
--   <a>lambdaConfigType_postAuthentication</a> - A post-authentication
--   Lambda trigger.
--   
--   <a>$sel:customMessage:LambdaConfigType'</a>,
--   <a>lambdaConfigType_customMessage</a> - A custom Message Lambda
--   trigger.
--   
--   <a>$sel:defineAuthChallenge:LambdaConfigType'</a>,
--   <a>lambdaConfigType_defineAuthChallenge</a> - Defines the
--   authentication challenge.
--   
--   <a>$sel:customEmailSender:LambdaConfigType'</a>,
--   <a>lambdaConfigType_customEmailSender</a> - A custom email sender
--   Lambda trigger.
--   
--   <a>$sel:kmsKeyID:LambdaConfigType'</a>,
--   <a>lambdaConfigType_kmsKeyID</a> - The Amazon Resource Name of Key
--   Management Service <a>Customer master keys</a> . Amazon Cognito uses
--   the key to encrypt codes and temporary passwords sent to
--   <tt>CustomEmailSender</tt> and <tt>CustomSMSSender</tt>.
--   
--   <a>$sel:postConfirmation:LambdaConfigType'</a>,
--   <a>lambdaConfigType_postConfirmation</a> - A post-confirmation Lambda
--   trigger.
--   
--   <a>$sel:preTokenGeneration:LambdaConfigType'</a>,
--   <a>lambdaConfigType_preTokenGeneration</a> - A Lambda trigger that is
--   invoked before token generation.
--   
--   <a>$sel:userMigration:LambdaConfigType'</a>,
--   <a>lambdaConfigType_userMigration</a> - The user migration Lambda
--   config type.
--   
--   <a>$sel:preSignUp:LambdaConfigType'</a>,
--   <a>lambdaConfigType_preSignUp</a> - A pre-registration Lambda trigger.
newLambdaConfigType :: LambdaConfigType

-- | A pre-authentication Lambda trigger.
lambdaConfigType_preAuthentication :: Lens' LambdaConfigType (Maybe Text)

-- | Creates an authentication challenge.
lambdaConfigType_createAuthChallenge :: Lens' LambdaConfigType (Maybe Text)

-- | Verifies the authentication challenge response.
lambdaConfigType_verifyAuthChallengeResponse :: Lens' LambdaConfigType (Maybe Text)

-- | A custom SMS sender Lambda trigger.
lambdaConfigType_customSMSSender :: Lens' LambdaConfigType (Maybe CustomSMSLambdaVersionConfigType)

-- | A post-authentication Lambda trigger.
lambdaConfigType_postAuthentication :: Lens' LambdaConfigType (Maybe Text)

-- | A custom Message Lambda trigger.
lambdaConfigType_customMessage :: Lens' LambdaConfigType (Maybe Text)

-- | Defines the authentication challenge.
lambdaConfigType_defineAuthChallenge :: Lens' LambdaConfigType (Maybe Text)

-- | A custom email sender Lambda trigger.
lambdaConfigType_customEmailSender :: Lens' LambdaConfigType (Maybe CustomEmailLambdaVersionConfigType)

-- | The Amazon Resource Name of Key Management Service <a>Customer master
--   keys</a> . Amazon Cognito uses the key to encrypt codes and temporary
--   passwords sent to <tt>CustomEmailSender</tt> and
--   <tt>CustomSMSSender</tt>.
lambdaConfigType_kmsKeyID :: Lens' LambdaConfigType (Maybe Text)

-- | A post-confirmation Lambda trigger.
lambdaConfigType_postConfirmation :: Lens' LambdaConfigType (Maybe Text)

-- | A Lambda trigger that is invoked before token generation.
lambdaConfigType_preTokenGeneration :: Lens' LambdaConfigType (Maybe Text)

-- | The user migration Lambda config type.
lambdaConfigType_userMigration :: Lens' LambdaConfigType (Maybe Text)

-- | A pre-registration Lambda trigger.
lambdaConfigType_preSignUp :: Lens' LambdaConfigType (Maybe Text)

-- | <i>This data type is no longer supported.</i> You can use it only for
--   SMS MFA configurations. You can't use it for TOTP software token MFA
--   configurations.
--   
--   <i>See:</i> <a>newMFAOptionType</a> smart constructor.
data MFAOptionType
MFAOptionType' :: Maybe DeliveryMediumType -> Maybe Text -> MFAOptionType

-- | The delivery medium to send the MFA code. You can use this parameter
--   to set only the <tt>SMS</tt> delivery medium value.
[$sel:deliveryMedium:MFAOptionType'] :: MFAOptionType -> Maybe DeliveryMediumType

-- | The attribute name of the MFA option type. The only valid value is
--   <tt>phone_number</tt>.
[$sel:attributeName:MFAOptionType'] :: MFAOptionType -> Maybe Text

-- | Create a value of <a>MFAOptionType</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deliveryMedium:MFAOptionType'</a>,
--   <a>mfaOptionType_deliveryMedium</a> - The delivery medium to send the
--   MFA code. You can use this parameter to set only the <tt>SMS</tt>
--   delivery medium value.
--   
--   <a>$sel:attributeName:MFAOptionType'</a>,
--   <a>mfaOptionType_attributeName</a> - The attribute name of the MFA
--   option type. The only valid value is <tt>phone_number</tt>.
newMFAOptionType :: MFAOptionType

-- | The delivery medium to send the MFA code. You can use this parameter
--   to set only the <tt>SMS</tt> delivery medium value.
mfaOptionType_deliveryMedium :: Lens' MFAOptionType (Maybe DeliveryMediumType)

-- | The attribute name of the MFA option type. The only valid value is
--   <tt>phone_number</tt>.
mfaOptionType_attributeName :: Lens' MFAOptionType (Maybe Text)

-- | The message template structure.
--   
--   <i>See:</i> <a>newMessageTemplateType</a> smart constructor.
data MessageTemplateType
MessageTemplateType' :: Maybe Text -> Maybe Text -> Maybe Text -> MessageTemplateType

-- | The subject line for email messages. EmailSubject is allowed only if
--   <a>EmailSendingAccount</a> is DEVELOPER.
[$sel:emailSubject:MessageTemplateType'] :: MessageTemplateType -> Maybe Text

-- | The message template for SMS messages.
[$sel:sMSMessage:MessageTemplateType'] :: MessageTemplateType -> Maybe Text

-- | The message template for email messages. EmailMessage is allowed only
--   if <a>EmailSendingAccount</a> is DEVELOPER.
[$sel:emailMessage:MessageTemplateType'] :: MessageTemplateType -> Maybe Text

-- | Create a value of <a>MessageTemplateType</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:emailSubject:MessageTemplateType'</a>,
--   <a>messageTemplateType_emailSubject</a> - The subject line for email
--   messages. EmailSubject is allowed only if <a>EmailSendingAccount</a>
--   is DEVELOPER.
--   
--   <a>$sel:sMSMessage:MessageTemplateType'</a>,
--   <a>messageTemplateType_sMSMessage</a> - The message template for SMS
--   messages.
--   
--   <a>$sel:emailMessage:MessageTemplateType'</a>,
--   <a>messageTemplateType_emailMessage</a> - The message template for
--   email messages. EmailMessage is allowed only if
--   <a>EmailSendingAccount</a> is DEVELOPER.
newMessageTemplateType :: MessageTemplateType

-- | The subject line for email messages. EmailSubject is allowed only if
--   <a>EmailSendingAccount</a> is DEVELOPER.
messageTemplateType_emailSubject :: Lens' MessageTemplateType (Maybe Text)

-- | The message template for SMS messages.
messageTemplateType_sMSMessage :: Lens' MessageTemplateType (Maybe Text)

-- | The message template for email messages. EmailMessage is allowed only
--   if <a>EmailSendingAccount</a> is DEVELOPER.
messageTemplateType_emailMessage :: Lens' MessageTemplateType (Maybe Text)

-- | The new device metadata type.
--   
--   <i>See:</i> <a>newNewDeviceMetadataType</a> smart constructor.
data NewDeviceMetadataType
NewDeviceMetadataType' :: Maybe Text -> Maybe Text -> NewDeviceMetadataType

-- | The device group key.
[$sel:deviceGroupKey:NewDeviceMetadataType'] :: NewDeviceMetadataType -> Maybe Text

-- | The device key.
[$sel:deviceKey:NewDeviceMetadataType'] :: NewDeviceMetadataType -> Maybe Text

-- | Create a value of <a>NewDeviceMetadataType</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deviceGroupKey:NewDeviceMetadataType'</a>,
--   <a>newDeviceMetadataType_deviceGroupKey</a> - The device group key.
--   
--   <a>$sel:deviceKey:NewDeviceMetadataType'</a>,
--   <a>newDeviceMetadataType_deviceKey</a> - The device key.
newNewDeviceMetadataType :: NewDeviceMetadataType

-- | The device group key.
newDeviceMetadataType_deviceGroupKey :: Lens' NewDeviceMetadataType (Maybe Text)

-- | The device key.
newDeviceMetadataType_deviceKey :: Lens' NewDeviceMetadataType (Maybe Text)

-- | The notify configuration type.
--   
--   <i>See:</i> <a>newNotifyConfigurationType</a> smart constructor.
data NotifyConfigurationType
NotifyConfigurationType' :: Maybe NotifyEmailType -> Maybe Text -> Maybe Text -> Maybe NotifyEmailType -> Maybe NotifyEmailType -> Text -> NotifyConfigurationType

-- | The email template used when a detected risk event is allowed.
[$sel:noActionEmail:NotifyConfigurationType'] :: NotifyConfigurationType -> Maybe NotifyEmailType

-- | The email address that is sending the email. It must be either
--   individually verified with Amazon SES, or from a domain that has been
--   verified with Amazon SES.
[$sel:from:NotifyConfigurationType'] :: NotifyConfigurationType -> Maybe Text

-- | The destination to which the receiver of an email should reply to.
[$sel:replyTo:NotifyConfigurationType'] :: NotifyConfigurationType -> Maybe Text

-- | Email template used when a detected risk event is blocked.
[$sel:blockEmail:NotifyConfigurationType'] :: NotifyConfigurationType -> Maybe NotifyEmailType

-- | The MFA email template used when MFA is challenged as part of a
--   detected risk.
[$sel:mfaEmail:NotifyConfigurationType'] :: NotifyConfigurationType -> Maybe NotifyEmailType

-- | The Amazon Resource Name (ARN) of the identity that is associated with
--   the sending authorization policy. It permits Amazon Cognito to send
--   for the email address specified in the <tt>From</tt> parameter.
[$sel:sourceArn:NotifyConfigurationType'] :: NotifyConfigurationType -> Text

-- | Create a value of <a>NotifyConfigurationType</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:noActionEmail:NotifyConfigurationType'</a>,
--   <a>notifyConfigurationType_noActionEmail</a> - The email template used
--   when a detected risk event is allowed.
--   
--   <a>$sel:from:NotifyConfigurationType'</a>,
--   <a>notifyConfigurationType_from</a> - The email address that is
--   sending the email. It must be either individually verified with Amazon
--   SES, or from a domain that has been verified with Amazon SES.
--   
--   <a>$sel:replyTo:NotifyConfigurationType'</a>,
--   <a>notifyConfigurationType_replyTo</a> - The destination to which the
--   receiver of an email should reply to.
--   
--   <a>$sel:blockEmail:NotifyConfigurationType'</a>,
--   <a>notifyConfigurationType_blockEmail</a> - Email template used when a
--   detected risk event is blocked.
--   
--   <a>$sel:mfaEmail:NotifyConfigurationType'</a>,
--   <a>notifyConfigurationType_mfaEmail</a> - The MFA email template used
--   when MFA is challenged as part of a detected risk.
--   
--   <a>$sel:sourceArn:NotifyConfigurationType'</a>,
--   <a>notifyConfigurationType_sourceArn</a> - The Amazon Resource Name
--   (ARN) of the identity that is associated with the sending
--   authorization policy. It permits Amazon Cognito to send for the email
--   address specified in the <tt>From</tt> parameter.
newNotifyConfigurationType :: Text -> NotifyConfigurationType

-- | The email template used when a detected risk event is allowed.
notifyConfigurationType_noActionEmail :: Lens' NotifyConfigurationType (Maybe NotifyEmailType)

-- | The email address that is sending the email. It must be either
--   individually verified with Amazon SES, or from a domain that has been
--   verified with Amazon SES.
notifyConfigurationType_from :: Lens' NotifyConfigurationType (Maybe Text)

-- | The destination to which the receiver of an email should reply to.
notifyConfigurationType_replyTo :: Lens' NotifyConfigurationType (Maybe Text)

-- | Email template used when a detected risk event is blocked.
notifyConfigurationType_blockEmail :: Lens' NotifyConfigurationType (Maybe NotifyEmailType)

-- | The MFA email template used when MFA is challenged as part of a
--   detected risk.
notifyConfigurationType_mfaEmail :: Lens' NotifyConfigurationType (Maybe NotifyEmailType)

-- | The Amazon Resource Name (ARN) of the identity that is associated with
--   the sending authorization policy. It permits Amazon Cognito to send
--   for the email address specified in the <tt>From</tt> parameter.
notifyConfigurationType_sourceArn :: Lens' NotifyConfigurationType Text

-- | The notify email type.
--   
--   <i>See:</i> <a>newNotifyEmailType</a> smart constructor.
data NotifyEmailType
NotifyEmailType' :: Maybe Text -> Maybe Text -> Text -> NotifyEmailType

-- | The text body.
[$sel:textBody:NotifyEmailType'] :: NotifyEmailType -> Maybe Text

-- | The HTML body.
[$sel:htmlBody:NotifyEmailType'] :: NotifyEmailType -> Maybe Text

-- | The subject.
[$sel:subject:NotifyEmailType'] :: NotifyEmailType -> Text

-- | Create a value of <a>NotifyEmailType</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:textBody:NotifyEmailType'</a>, <a>notifyEmailType_textBody</a>
--   - The text body.
--   
--   <a>$sel:htmlBody:NotifyEmailType'</a>, <a>notifyEmailType_htmlBody</a>
--   - The HTML body.
--   
--   <a>$sel:subject:NotifyEmailType'</a>, <a>notifyEmailType_subject</a> -
--   The subject.
newNotifyEmailType :: Text -> NotifyEmailType

-- | The text body.
notifyEmailType_textBody :: Lens' NotifyEmailType (Maybe Text)

-- | The HTML body.
notifyEmailType_htmlBody :: Lens' NotifyEmailType (Maybe Text)

-- | The subject.
notifyEmailType_subject :: Lens' NotifyEmailType Text

-- | The minimum and maximum value of an attribute that is of the number
--   data type.
--   
--   <i>See:</i> <a>newNumberAttributeConstraintsType</a> smart
--   constructor.
data NumberAttributeConstraintsType
NumberAttributeConstraintsType' :: Maybe Text -> Maybe Text -> NumberAttributeConstraintsType

-- | The maximum value of an attribute that is of the number data type.
[$sel:maxValue:NumberAttributeConstraintsType'] :: NumberAttributeConstraintsType -> Maybe Text

-- | The minimum value of an attribute that is of the number data type.
[$sel:minValue:NumberAttributeConstraintsType'] :: NumberAttributeConstraintsType -> Maybe Text

-- | Create a value of <a>NumberAttributeConstraintsType</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:maxValue:NumberAttributeConstraintsType'</a>,
--   <a>numberAttributeConstraintsType_maxValue</a> - The maximum value of
--   an attribute that is of the number data type.
--   
--   <a>$sel:minValue:NumberAttributeConstraintsType'</a>,
--   <a>numberAttributeConstraintsType_minValue</a> - The minimum value of
--   an attribute that is of the number data type.
newNumberAttributeConstraintsType :: NumberAttributeConstraintsType

-- | The maximum value of an attribute that is of the number data type.
numberAttributeConstraintsType_maxValue :: Lens' NumberAttributeConstraintsType (Maybe Text)

-- | The minimum value of an attribute that is of the number data type.
numberAttributeConstraintsType_minValue :: Lens' NumberAttributeConstraintsType (Maybe Text)

-- | The password policy type.
--   
--   <i>See:</i> <a>newPasswordPolicyType</a> smart constructor.
data PasswordPolicyType
PasswordPolicyType' :: Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Natural -> Maybe Bool -> Maybe Natural -> PasswordPolicyType

-- | In the password policy that you have set, refers to whether you have
--   required users to use at least one number in their password.
[$sel:requireNumbers:PasswordPolicyType'] :: PasswordPolicyType -> Maybe Bool

-- | In the password policy that you have set, refers to whether you have
--   required users to use at least one uppercase letter in their password.
[$sel:requireUppercase:PasswordPolicyType'] :: PasswordPolicyType -> Maybe Bool

-- | In the password policy that you have set, refers to whether you have
--   required users to use at least one lowercase letter in their password.
[$sel:requireLowercase:PasswordPolicyType'] :: PasswordPolicyType -> Maybe Bool

-- | The minimum length of the password policy that you have set. Cannot be
--   less than 6.
[$sel:minimumLength:PasswordPolicyType'] :: PasswordPolicyType -> Maybe Natural

-- | In the password policy that you have set, refers to whether you have
--   required users to use at least one symbol in their password.
[$sel:requireSymbols:PasswordPolicyType'] :: PasswordPolicyType -> Maybe Bool

-- | In the password policy you have set, refers to the number of days a
--   temporary password is valid. If the user does not sign-in during this
--   time, their password will need to be reset by an administrator.
--   
--   When you set <tt>TemporaryPasswordValidityDays</tt> for a user pool,
--   you will no longer be able to set the deprecated
--   <tt>UnusedAccountValidityDays</tt> value for that user pool.
[$sel:temporaryPasswordValidityDays:PasswordPolicyType'] :: PasswordPolicyType -> Maybe Natural

-- | Create a value of <a>PasswordPolicyType</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:requireNumbers:PasswordPolicyType'</a>,
--   <a>passwordPolicyType_requireNumbers</a> - In the password policy that
--   you have set, refers to whether you have required users to use at
--   least one number in their password.
--   
--   <a>$sel:requireUppercase:PasswordPolicyType'</a>,
--   <a>passwordPolicyType_requireUppercase</a> - In the password policy
--   that you have set, refers to whether you have required users to use at
--   least one uppercase letter in their password.
--   
--   <a>$sel:requireLowercase:PasswordPolicyType'</a>,
--   <a>passwordPolicyType_requireLowercase</a> - In the password policy
--   that you have set, refers to whether you have required users to use at
--   least one lowercase letter in their password.
--   
--   <a>$sel:minimumLength:PasswordPolicyType'</a>,
--   <a>passwordPolicyType_minimumLength</a> - The minimum length of the
--   password policy that you have set. Cannot be less than 6.
--   
--   <a>$sel:requireSymbols:PasswordPolicyType'</a>,
--   <a>passwordPolicyType_requireSymbols</a> - In the password policy that
--   you have set, refers to whether you have required users to use at
--   least one symbol in their password.
--   
--   <a>$sel:temporaryPasswordValidityDays:PasswordPolicyType'</a>,
--   <a>passwordPolicyType_temporaryPasswordValidityDays</a> - In the
--   password policy you have set, refers to the number of days a temporary
--   password is valid. If the user does not sign-in during this time,
--   their password will need to be reset by an administrator.
--   
--   When you set <tt>TemporaryPasswordValidityDays</tt> for a user pool,
--   you will no longer be able to set the deprecated
--   <tt>UnusedAccountValidityDays</tt> value for that user pool.
newPasswordPolicyType :: PasswordPolicyType

-- | In the password policy that you have set, refers to whether you have
--   required users to use at least one number in their password.
passwordPolicyType_requireNumbers :: Lens' PasswordPolicyType (Maybe Bool)

-- | In the password policy that you have set, refers to whether you have
--   required users to use at least one uppercase letter in their password.
passwordPolicyType_requireUppercase :: Lens' PasswordPolicyType (Maybe Bool)

-- | In the password policy that you have set, refers to whether you have
--   required users to use at least one lowercase letter in their password.
passwordPolicyType_requireLowercase :: Lens' PasswordPolicyType (Maybe Bool)

-- | The minimum length of the password policy that you have set. Cannot be
--   less than 6.
passwordPolicyType_minimumLength :: Lens' PasswordPolicyType (Maybe Natural)

-- | In the password policy that you have set, refers to whether you have
--   required users to use at least one symbol in their password.
passwordPolicyType_requireSymbols :: Lens' PasswordPolicyType (Maybe Bool)

-- | In the password policy you have set, refers to the number of days a
--   temporary password is valid. If the user does not sign-in during this
--   time, their password will need to be reset by an administrator.
--   
--   When you set <tt>TemporaryPasswordValidityDays</tt> for a user pool,
--   you will no longer be able to set the deprecated
--   <tt>UnusedAccountValidityDays</tt> value for that user pool.
passwordPolicyType_temporaryPasswordValidityDays :: Lens' PasswordPolicyType (Maybe Natural)

-- | A container for identity provider details.
--   
--   <i>See:</i> <a>newProviderDescription</a> smart constructor.
data ProviderDescription
ProviderDescription' :: Maybe POSIX -> Maybe IdentityProviderTypeType -> Maybe POSIX -> Maybe Text -> ProviderDescription

-- | The date the provider was last modified.
[$sel:lastModifiedDate:ProviderDescription'] :: ProviderDescription -> Maybe POSIX

-- | The identity provider type.
[$sel:providerType:ProviderDescription'] :: ProviderDescription -> Maybe IdentityProviderTypeType

-- | The date the provider was added to the user pool.
[$sel:creationDate:ProviderDescription'] :: ProviderDescription -> Maybe POSIX

-- | The identity provider name.
[$sel:providerName:ProviderDescription'] :: ProviderDescription -> Maybe Text

-- | Create a value of <a>ProviderDescription</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lastModifiedDate:ProviderDescription'</a>,
--   <a>providerDescription_lastModifiedDate</a> - The date the provider
--   was last modified.
--   
--   <a>$sel:providerType:ProviderDescription'</a>,
--   <a>providerDescription_providerType</a> - The identity provider type.
--   
--   <a>$sel:creationDate:ProviderDescription'</a>,
--   <a>providerDescription_creationDate</a> - The date the provider was
--   added to the user pool.
--   
--   <a>$sel:providerName:ProviderDescription'</a>,
--   <a>providerDescription_providerName</a> - The identity provider name.
newProviderDescription :: ProviderDescription

-- | The date the provider was last modified.
providerDescription_lastModifiedDate :: Lens' ProviderDescription (Maybe UTCTime)

-- | The identity provider type.
providerDescription_providerType :: Lens' ProviderDescription (Maybe IdentityProviderTypeType)

-- | The date the provider was added to the user pool.
providerDescription_creationDate :: Lens' ProviderDescription (Maybe UTCTime)

-- | The identity provider name.
providerDescription_providerName :: Lens' ProviderDescription (Maybe Text)

-- | A container for information about an identity provider for a user
--   pool.
--   
--   <i>See:</i> <a>newProviderUserIdentifierType</a> smart constructor.
data ProviderUserIdentifierType
ProviderUserIdentifierType' :: Maybe Text -> Maybe Text -> Maybe Text -> ProviderUserIdentifierType

-- | The value of the provider attribute to link to, for example,
--   <tt>xxxxx_account</tt>.
[$sel:providerAttributeValue:ProviderUserIdentifierType'] :: ProviderUserIdentifierType -> Maybe Text

-- | The name of the provider attribute to link to, for example,
--   <tt>NameID</tt>.
[$sel:providerAttributeName:ProviderUserIdentifierType'] :: ProviderUserIdentifierType -> Maybe Text

-- | The name of the provider, for example, Facebook, Google, or Login with
--   Amazon.
[$sel:providerName:ProviderUserIdentifierType'] :: ProviderUserIdentifierType -> Maybe Text

-- | Create a value of <a>ProviderUserIdentifierType</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:providerAttributeValue:ProviderUserIdentifierType'</a>,
--   <a>providerUserIdentifierType_providerAttributeValue</a> - The value
--   of the provider attribute to link to, for example,
--   <tt>xxxxx_account</tt>.
--   
--   <a>$sel:providerAttributeName:ProviderUserIdentifierType'</a>,
--   <a>providerUserIdentifierType_providerAttributeName</a> - The name of
--   the provider attribute to link to, for example, <tt>NameID</tt>.
--   
--   <a>$sel:providerName:ProviderUserIdentifierType'</a>,
--   <a>providerUserIdentifierType_providerName</a> - The name of the
--   provider, for example, Facebook, Google, or Login with Amazon.
newProviderUserIdentifierType :: ProviderUserIdentifierType

-- | The value of the provider attribute to link to, for example,
--   <tt>xxxxx_account</tt>.
providerUserIdentifierType_providerAttributeValue :: Lens' ProviderUserIdentifierType (Maybe Text)

-- | The name of the provider attribute to link to, for example,
--   <tt>NameID</tt>.
providerUserIdentifierType_providerAttributeName :: Lens' ProviderUserIdentifierType (Maybe Text)

-- | The name of the provider, for example, Facebook, Google, or Login with
--   Amazon.
providerUserIdentifierType_providerName :: Lens' ProviderUserIdentifierType (Maybe Text)

-- | A map containing a priority as a key, and recovery method name as a
--   value.
--   
--   <i>See:</i> <a>newRecoveryOptionType</a> smart constructor.
data RecoveryOptionType
RecoveryOptionType' :: Natural -> RecoveryOptionNameType -> RecoveryOptionType

-- | A positive integer specifying priority of a method with 1 being the
--   highest priority.
[$sel:priority:RecoveryOptionType'] :: RecoveryOptionType -> Natural

-- | Specifies the recovery method for a user.
[$sel:name:RecoveryOptionType'] :: RecoveryOptionType -> RecoveryOptionNameType

-- | Create a value of <a>RecoveryOptionType</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:priority:RecoveryOptionType'</a>,
--   <a>recoveryOptionType_priority</a> - A positive integer specifying
--   priority of a method with 1 being the highest priority.
--   
--   <a>$sel:name:RecoveryOptionType'</a>, <a>recoveryOptionType_name</a> -
--   Specifies the recovery method for a user.
newRecoveryOptionType :: Natural -> RecoveryOptionNameType -> RecoveryOptionType

-- | A positive integer specifying priority of a method with 1 being the
--   highest priority.
recoveryOptionType_priority :: Lens' RecoveryOptionType Natural

-- | Specifies the recovery method for a user.
recoveryOptionType_name :: Lens' RecoveryOptionType RecoveryOptionNameType

-- | A resource server scope.
--   
--   <i>See:</i> <a>newResourceServerScopeType</a> smart constructor.
data ResourceServerScopeType
ResourceServerScopeType' :: Text -> Text -> ResourceServerScopeType

-- | The name of the scope.
[$sel:scopeName:ResourceServerScopeType'] :: ResourceServerScopeType -> Text

-- | A description of the scope.
[$sel:scopeDescription:ResourceServerScopeType'] :: ResourceServerScopeType -> Text

-- | Create a value of <a>ResourceServerScopeType</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:scopeName:ResourceServerScopeType'</a>,
--   <a>resourceServerScopeType_scopeName</a> - The name of the scope.
--   
--   <a>$sel:scopeDescription:ResourceServerScopeType'</a>,
--   <a>resourceServerScopeType_scopeDescription</a> - A description of the
--   scope.
newResourceServerScopeType :: Text -> Text -> ResourceServerScopeType

-- | The name of the scope.
resourceServerScopeType_scopeName :: Lens' ResourceServerScopeType Text

-- | A description of the scope.
resourceServerScopeType_scopeDescription :: Lens' ResourceServerScopeType Text

-- | A container for information about a resource server for a user pool.
--   
--   <i>See:</i> <a>newResourceServerType</a> smart constructor.
data ResourceServerType
ResourceServerType' :: Maybe Text -> Maybe Text -> Maybe [ResourceServerScopeType] -> Maybe Text -> ResourceServerType

-- | The user pool ID for the user pool that hosts the resource server.
[$sel:userPoolId:ResourceServerType'] :: ResourceServerType -> Maybe Text

-- | The identifier for the resource server.
[$sel:identifier:ResourceServerType'] :: ResourceServerType -> Maybe Text

-- | A list of scopes that are defined for the resource server.
[$sel:scopes:ResourceServerType'] :: ResourceServerType -> Maybe [ResourceServerScopeType]

-- | The name of the resource server.
[$sel:name:ResourceServerType'] :: ResourceServerType -> Maybe Text

-- | Create a value of <a>ResourceServerType</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userPoolId:ResourceServerType'</a>,
--   <a>resourceServerType_userPoolId</a> - The user pool ID for the user
--   pool that hosts the resource server.
--   
--   <a>$sel:identifier:ResourceServerType'</a>,
--   <a>resourceServerType_identifier</a> - The identifier for the resource
--   server.
--   
--   <a>$sel:scopes:ResourceServerType'</a>,
--   <a>resourceServerType_scopes</a> - A list of scopes that are defined
--   for the resource server.
--   
--   <a>$sel:name:ResourceServerType'</a>, <a>resourceServerType_name</a> -
--   The name of the resource server.
newResourceServerType :: ResourceServerType

-- | The user pool ID for the user pool that hosts the resource server.
resourceServerType_userPoolId :: Lens' ResourceServerType (Maybe Text)

-- | The identifier for the resource server.
resourceServerType_identifier :: Lens' ResourceServerType (Maybe Text)

-- | A list of scopes that are defined for the resource server.
resourceServerType_scopes :: Lens' ResourceServerType (Maybe [ResourceServerScopeType])

-- | The name of the resource server.
resourceServerType_name :: Lens' ResourceServerType (Maybe Text)

-- | The risk configuration type.
--   
--   <i>See:</i> <a>newRiskConfigurationType</a> smart constructor.
data RiskConfigurationType
RiskConfigurationType' :: Maybe RiskExceptionConfigurationType -> Maybe (Sensitive Text) -> Maybe AccountTakeoverRiskConfigurationType -> Maybe POSIX -> Maybe Text -> Maybe CompromisedCredentialsRiskConfigurationType -> RiskConfigurationType

-- | The configuration to override the risk decision.
[$sel:riskExceptionConfiguration:RiskConfigurationType'] :: RiskConfigurationType -> Maybe RiskExceptionConfigurationType

-- | The app client ID.
[$sel:clientId:RiskConfigurationType'] :: RiskConfigurationType -> Maybe (Sensitive Text)

-- | The account takeover risk configuration object including the
--   <tt>NotifyConfiguration</tt> object and <tt>Actions</tt> to take in
--   the case of an account takeover.
[$sel:accountTakeoverRiskConfiguration:RiskConfigurationType'] :: RiskConfigurationType -> Maybe AccountTakeoverRiskConfigurationType

-- | The last modified date.
[$sel:lastModifiedDate:RiskConfigurationType'] :: RiskConfigurationType -> Maybe POSIX

-- | The user pool ID.
[$sel:userPoolId:RiskConfigurationType'] :: RiskConfigurationType -> Maybe Text

-- | The compromised credentials risk configuration object including the
--   <tt>EventFilter</tt> and the <tt>EventAction</tt>
[$sel:compromisedCredentialsRiskConfiguration:RiskConfigurationType'] :: RiskConfigurationType -> Maybe CompromisedCredentialsRiskConfigurationType

-- | Create a value of <a>RiskConfigurationType</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:riskExceptionConfiguration:RiskConfigurationType'</a>,
--   <a>riskConfigurationType_riskExceptionConfiguration</a> - The
--   configuration to override the risk decision.
--   
--   <a>$sel:clientId:RiskConfigurationType'</a>,
--   <a>riskConfigurationType_clientId</a> - The app client ID.
--   
--   <a>$sel:accountTakeoverRiskConfiguration:RiskConfigurationType'</a>,
--   <a>riskConfigurationType_accountTakeoverRiskConfiguration</a> - The
--   account takeover risk configuration object including the
--   <tt>NotifyConfiguration</tt> object and <tt>Actions</tt> to take in
--   the case of an account takeover.
--   
--   <a>$sel:lastModifiedDate:RiskConfigurationType'</a>,
--   <a>riskConfigurationType_lastModifiedDate</a> - The last modified
--   date.
--   
--   <a>$sel:userPoolId:RiskConfigurationType'</a>,
--   <a>riskConfigurationType_userPoolId</a> - The user pool ID.
--   
--   
--   <a>$sel:compromisedCredentialsRiskConfiguration:RiskConfigurationType'</a>,
--   <a>riskConfigurationType_compromisedCredentialsRiskConfiguration</a> -
--   The compromised credentials risk configuration object including the
--   <tt>EventFilter</tt> and the <tt>EventAction</tt>
newRiskConfigurationType :: RiskConfigurationType

-- | The configuration to override the risk decision.
riskConfigurationType_riskExceptionConfiguration :: Lens' RiskConfigurationType (Maybe RiskExceptionConfigurationType)

-- | The app client ID.
riskConfigurationType_clientId :: Lens' RiskConfigurationType (Maybe Text)

-- | The account takeover risk configuration object including the
--   <tt>NotifyConfiguration</tt> object and <tt>Actions</tt> to take in
--   the case of an account takeover.
riskConfigurationType_accountTakeoverRiskConfiguration :: Lens' RiskConfigurationType (Maybe AccountTakeoverRiskConfigurationType)

-- | The last modified date.
riskConfigurationType_lastModifiedDate :: Lens' RiskConfigurationType (Maybe UTCTime)

-- | The user pool ID.
riskConfigurationType_userPoolId :: Lens' RiskConfigurationType (Maybe Text)

-- | The compromised credentials risk configuration object including the
--   <tt>EventFilter</tt> and the <tt>EventAction</tt>
riskConfigurationType_compromisedCredentialsRiskConfiguration :: Lens' RiskConfigurationType (Maybe CompromisedCredentialsRiskConfigurationType)

-- | The type of the configuration to override the risk decision.
--   
--   <i>See:</i> <a>newRiskExceptionConfigurationType</a> smart
--   constructor.
data RiskExceptionConfigurationType
RiskExceptionConfigurationType' :: Maybe [Text] -> Maybe [Text] -> RiskExceptionConfigurationType

-- | Risk detection is not performed on the IP addresses in the range list.
--   The IP range is in CIDR notation.
[$sel:skippedIPRangeList:RiskExceptionConfigurationType'] :: RiskExceptionConfigurationType -> Maybe [Text]

-- | Overrides the risk decision to always block the pre-authentication
--   requests. The IP range is in CIDR notation: a compact representation
--   of an IP address and its associated routing prefix.
[$sel:blockedIPRangeList:RiskExceptionConfigurationType'] :: RiskExceptionConfigurationType -> Maybe [Text]

-- | Create a value of <a>RiskExceptionConfigurationType</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:skippedIPRangeList:RiskExceptionConfigurationType'</a>,
--   <a>riskExceptionConfigurationType_skippedIPRangeList</a> - Risk
--   detection is not performed on the IP addresses in the range list. The
--   IP range is in CIDR notation.
--   
--   <a>$sel:blockedIPRangeList:RiskExceptionConfigurationType'</a>,
--   <a>riskExceptionConfigurationType_blockedIPRangeList</a> - Overrides
--   the risk decision to always block the pre-authentication requests. The
--   IP range is in CIDR notation: a compact representation of an IP
--   address and its associated routing prefix.
newRiskExceptionConfigurationType :: RiskExceptionConfigurationType

-- | Risk detection is not performed on the IP addresses in the range list.
--   The IP range is in CIDR notation.
riskExceptionConfigurationType_skippedIPRangeList :: Lens' RiskExceptionConfigurationType (Maybe [Text])

-- | Overrides the risk decision to always block the pre-authentication
--   requests. The IP range is in CIDR notation: a compact representation
--   of an IP address and its associated routing prefix.
riskExceptionConfigurationType_blockedIPRangeList :: Lens' RiskExceptionConfigurationType (Maybe [Text])

-- | The type used for enabling SMS MFA at the user level. Phone numbers
--   don't need to be verified to be used for SMS MFA. If an MFA type is
--   enabled for a user, the user will be prompted for MFA during all sign
--   in attempts, unless device tracking is turned on and the device has
--   been trusted. If you would like MFA to be applied selectively based on
--   the assessed risk level of sign in attempts, disable MFA for users and
--   turn on Adaptive Authentication for the user pool.
--   
--   <i>See:</i> <a>newSMSMfaSettingsType</a> smart constructor.
data SMSMfaSettingsType
SMSMfaSettingsType' :: Maybe Bool -> Maybe Bool -> SMSMfaSettingsType

-- | Specifies whether SMS text message MFA is enabled. If an MFA type is
--   enabled for a user, the user will be prompted for MFA during all sign
--   in attempts, unless device tracking is turned on and the device has
--   been trusted.
[$sel:enabled:SMSMfaSettingsType'] :: SMSMfaSettingsType -> Maybe Bool

-- | Specifies whether SMS is the preferred MFA method.
[$sel:preferredMfa:SMSMfaSettingsType'] :: SMSMfaSettingsType -> Maybe Bool

-- | Create a value of <a>SMSMfaSettingsType</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:enabled:SMSMfaSettingsType'</a>,
--   <a>sMSMfaSettingsType_enabled</a> - Specifies whether SMS text message
--   MFA is enabled. If an MFA type is enabled for a user, the user will be
--   prompted for MFA during all sign in attempts, unless device tracking
--   is turned on and the device has been trusted.
--   
--   <a>$sel:preferredMfa:SMSMfaSettingsType'</a>,
--   <a>sMSMfaSettingsType_preferredMfa</a> - Specifies whether SMS is the
--   preferred MFA method.
newSMSMfaSettingsType :: SMSMfaSettingsType

-- | Specifies whether SMS text message MFA is enabled. If an MFA type is
--   enabled for a user, the user will be prompted for MFA during all sign
--   in attempts, unless device tracking is turned on and the device has
--   been trusted.
sMSMfaSettingsType_enabled :: Lens' SMSMfaSettingsType (Maybe Bool)

-- | Specifies whether SMS is the preferred MFA method.
sMSMfaSettingsType_preferredMfa :: Lens' SMSMfaSettingsType (Maybe Bool)

-- | Contains information about the schema attribute.
--   
--   <i>See:</i> <a>newSchemaAttributeType</a> smart constructor.
data SchemaAttributeType
SchemaAttributeType' :: Maybe NumberAttributeConstraintsType -> Maybe Bool -> Maybe AttributeDataType -> Maybe StringAttributeConstraintsType -> Maybe Text -> Maybe Bool -> Maybe Bool -> SchemaAttributeType

-- | Specifies the constraints for an attribute of the number type.
[$sel:numberAttributeConstraints:SchemaAttributeType'] :: SchemaAttributeType -> Maybe NumberAttributeConstraintsType

-- | Specifies whether a user pool attribute is required. If the attribute
--   is required and the user does not provide a value, registration or
--   sign-in will fail.
[$sel:required:SchemaAttributeType'] :: SchemaAttributeType -> Maybe Bool

-- | The attribute data type.
[$sel:attributeDataType:SchemaAttributeType'] :: SchemaAttributeType -> Maybe AttributeDataType

-- | Specifies the constraints for an attribute of the string type.
[$sel:stringAttributeConstraints:SchemaAttributeType'] :: SchemaAttributeType -> Maybe StringAttributeConstraintsType

-- | A schema attribute of the name type.
[$sel:name:SchemaAttributeType'] :: SchemaAttributeType -> Maybe Text

-- | We recommend that you use <a>WriteAttributes</a> in the user pool
--   client to control how attributes can be mutated for new use cases
--   instead of using <tt>DeveloperOnlyAttribute</tt>.
--   
--   Specifies whether the attribute type is developer only. This attribute
--   can only be modified by an administrator. Users will not be able to
--   modify this attribute using their access token. For example,
--   <tt>DeveloperOnlyAttribute</tt> can be modified using
--   AdminUpdateUserAttributes but cannot be updated using
--   UpdateUserAttributes.
[$sel:developerOnlyAttribute:SchemaAttributeType'] :: SchemaAttributeType -> Maybe Bool

-- | Specifies whether the value of the attribute can be changed.
--   
--   For any user pool attribute that's mapped to an identity provider
--   attribute, you must set this parameter to <tt>true</tt>. Amazon
--   Cognito updates mapped attributes when users sign in to your
--   application through an identity provider. If an attribute is
--   immutable, Amazon Cognito throws an error when it attempts to update
--   the attribute. For more information, see <a>Specifying Identity
--   Provider Attribute Mappings for Your User Pool</a>.
[$sel:mutable:SchemaAttributeType'] :: SchemaAttributeType -> Maybe Bool

-- | Create a value of <a>SchemaAttributeType</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:numberAttributeConstraints:SchemaAttributeType'</a>,
--   <a>schemaAttributeType_numberAttributeConstraints</a> - Specifies the
--   constraints for an attribute of the number type.
--   
--   <a>$sel:required:SchemaAttributeType'</a>,
--   <a>schemaAttributeType_required</a> - Specifies whether a user pool
--   attribute is required. If the attribute is required and the user does
--   not provide a value, registration or sign-in will fail.
--   
--   <a>$sel:attributeDataType:SchemaAttributeType'</a>,
--   <a>schemaAttributeType_attributeDataType</a> - The attribute data
--   type.
--   
--   <a>$sel:stringAttributeConstraints:SchemaAttributeType'</a>,
--   <a>schemaAttributeType_stringAttributeConstraints</a> - Specifies the
--   constraints for an attribute of the string type.
--   
--   <a>$sel:name:SchemaAttributeType'</a>, <a>schemaAttributeType_name</a>
--   - A schema attribute of the name type.
--   
--   <a>$sel:developerOnlyAttribute:SchemaAttributeType'</a>,
--   <a>schemaAttributeType_developerOnlyAttribute</a> - We recommend that
--   you use <a>WriteAttributes</a> in the user pool client to control how
--   attributes can be mutated for new use cases instead of using
--   <tt>DeveloperOnlyAttribute</tt>.
--   
--   Specifies whether the attribute type is developer only. This attribute
--   can only be modified by an administrator. Users will not be able to
--   modify this attribute using their access token. For example,
--   <tt>DeveloperOnlyAttribute</tt> can be modified using
--   AdminUpdateUserAttributes but cannot be updated using
--   UpdateUserAttributes.
--   
--   <a>$sel:mutable:SchemaAttributeType'</a>,
--   <a>schemaAttributeType_mutable</a> - Specifies whether the value of
--   the attribute can be changed.
--   
--   For any user pool attribute that's mapped to an identity provider
--   attribute, you must set this parameter to <tt>true</tt>. Amazon
--   Cognito updates mapped attributes when users sign in to your
--   application through an identity provider. If an attribute is
--   immutable, Amazon Cognito throws an error when it attempts to update
--   the attribute. For more information, see <a>Specifying Identity
--   Provider Attribute Mappings for Your User Pool</a>.
newSchemaAttributeType :: SchemaAttributeType

-- | Specifies the constraints for an attribute of the number type.
schemaAttributeType_numberAttributeConstraints :: Lens' SchemaAttributeType (Maybe NumberAttributeConstraintsType)

-- | Specifies whether a user pool attribute is required. If the attribute
--   is required and the user does not provide a value, registration or
--   sign-in will fail.
schemaAttributeType_required :: Lens' SchemaAttributeType (Maybe Bool)

-- | The attribute data type.
schemaAttributeType_attributeDataType :: Lens' SchemaAttributeType (Maybe AttributeDataType)

-- | Specifies the constraints for an attribute of the string type.
schemaAttributeType_stringAttributeConstraints :: Lens' SchemaAttributeType (Maybe StringAttributeConstraintsType)

-- | A schema attribute of the name type.
schemaAttributeType_name :: Lens' SchemaAttributeType (Maybe Text)

-- | We recommend that you use <a>WriteAttributes</a> in the user pool
--   client to control how attributes can be mutated for new use cases
--   instead of using <tt>DeveloperOnlyAttribute</tt>.
--   
--   Specifies whether the attribute type is developer only. This attribute
--   can only be modified by an administrator. Users will not be able to
--   modify this attribute using their access token. For example,
--   <tt>DeveloperOnlyAttribute</tt> can be modified using
--   AdminUpdateUserAttributes but cannot be updated using
--   UpdateUserAttributes.
schemaAttributeType_developerOnlyAttribute :: Lens' SchemaAttributeType (Maybe Bool)

-- | Specifies whether the value of the attribute can be changed.
--   
--   For any user pool attribute that's mapped to an identity provider
--   attribute, you must set this parameter to <tt>true</tt>. Amazon
--   Cognito updates mapped attributes when users sign in to your
--   application through an identity provider. If an attribute is
--   immutable, Amazon Cognito throws an error when it attempts to update
--   the attribute. For more information, see <a>Specifying Identity
--   Provider Attribute Mappings for Your User Pool</a>.
schemaAttributeType_mutable :: Lens' SchemaAttributeType (Maybe Bool)

-- | The SMS configuration type that includes the settings the Cognito User
--   Pool needs to call for the Amazon SNS service to send an SMS message
--   from your account. The Cognito User Pool makes the request to the
--   Amazon SNS Service by using an IAM role that you provide for your
--   account.
--   
--   <i>See:</i> <a>newSmsConfigurationType</a> smart constructor.
data SmsConfigurationType
SmsConfigurationType' :: Maybe Text -> Text -> SmsConfigurationType

-- | The external ID is a value that we recommend you use to add security
--   to your IAM role which is used to call Amazon SNS to send SMS messages
--   for your user pool. If you provide an <tt>ExternalId</tt>, the Cognito
--   User Pool will include it when attempting to assume your IAM role, so
--   that you can set your roles trust policy to require the
--   <tt>ExternalID</tt>. If you use the Cognito Management Console to
--   create a role for SMS MFA, Cognito will create a role with the
--   required permissions and a trust policy that demonstrates use of the
--   <tt>ExternalId</tt>.
--   
--   For more information about the <tt>ExternalId</tt> of a role, see
--   <a>How to use an external ID when granting access to your Amazon Web
--   Services resources to a third party</a>
[$sel:externalId:SmsConfigurationType'] :: SmsConfigurationType -> Maybe Text

-- | The Amazon Resource Name (ARN) of the Amazon Simple Notification
--   Service (SNS) caller. This is the ARN of the IAM role in your account
--   which Cognito will use to send SMS messages. SMS messages are subject
--   to a <a>spending limit</a>.
[$sel:snsCallerArn:SmsConfigurationType'] :: SmsConfigurationType -> Text

-- | Create a value of <a>SmsConfigurationType</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:externalId:SmsConfigurationType'</a>,
--   <a>smsConfigurationType_externalId</a> - The external ID is a value
--   that we recommend you use to add security to your IAM role which is
--   used to call Amazon SNS to send SMS messages for your user pool. If
--   you provide an <tt>ExternalId</tt>, the Cognito User Pool will include
--   it when attempting to assume your IAM role, so that you can set your
--   roles trust policy to require the <tt>ExternalID</tt>. If you use the
--   Cognito Management Console to create a role for SMS MFA, Cognito will
--   create a role with the required permissions and a trust policy that
--   demonstrates use of the <tt>ExternalId</tt>.
--   
--   For more information about the <tt>ExternalId</tt> of a role, see
--   <a>How to use an external ID when granting access to your Amazon Web
--   Services resources to a third party</a>
--   
--   <a>$sel:snsCallerArn:SmsConfigurationType'</a>,
--   <a>smsConfigurationType_snsCallerArn</a> - The Amazon Resource Name
--   (ARN) of the Amazon Simple Notification Service (SNS) caller. This is
--   the ARN of the IAM role in your account which Cognito will use to send
--   SMS messages. SMS messages are subject to a <a>spending limit</a>.
newSmsConfigurationType :: Text -> SmsConfigurationType

-- | The external ID is a value that we recommend you use to add security
--   to your IAM role which is used to call Amazon SNS to send SMS messages
--   for your user pool. If you provide an <tt>ExternalId</tt>, the Cognito
--   User Pool will include it when attempting to assume your IAM role, so
--   that you can set your roles trust policy to require the
--   <tt>ExternalID</tt>. If you use the Cognito Management Console to
--   create a role for SMS MFA, Cognito will create a role with the
--   required permissions and a trust policy that demonstrates use of the
--   <tt>ExternalId</tt>.
--   
--   For more information about the <tt>ExternalId</tt> of a role, see
--   <a>How to use an external ID when granting access to your Amazon Web
--   Services resources to a third party</a>
smsConfigurationType_externalId :: Lens' SmsConfigurationType (Maybe Text)

-- | The Amazon Resource Name (ARN) of the Amazon Simple Notification
--   Service (SNS) caller. This is the ARN of the IAM role in your account
--   which Cognito will use to send SMS messages. SMS messages are subject
--   to a <a>spending limit</a>.
smsConfigurationType_snsCallerArn :: Lens' SmsConfigurationType Text

-- | The SMS text message multi-factor authentication (MFA) configuration
--   type.
--   
--   <i>See:</i> <a>newSmsMfaConfigType</a> smart constructor.
data SmsMfaConfigType
SmsMfaConfigType' :: Maybe Text -> Maybe SmsConfigurationType -> SmsMfaConfigType

-- | The SMS authentication message that will be sent to users with the
--   code they need to sign in. The message must contain the ‘{####}’
--   placeholder, which will be replaced with the code. If the message is
--   not included, and default message will be used.
[$sel:smsAuthenticationMessage:SmsMfaConfigType'] :: SmsMfaConfigType -> Maybe Text

-- | The SMS configuration.
[$sel:smsConfiguration:SmsMfaConfigType'] :: SmsMfaConfigType -> Maybe SmsConfigurationType

-- | Create a value of <a>SmsMfaConfigType</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:smsAuthenticationMessage:SmsMfaConfigType'</a>,
--   <a>smsMfaConfigType_smsAuthenticationMessage</a> - The SMS
--   authentication message that will be sent to users with the code they
--   need to sign in. The message must contain the ‘{####}’ placeholder,
--   which will be replaced with the code. If the message is not included,
--   and default message will be used.
--   
--   <a>$sel:smsConfiguration:SmsMfaConfigType'</a>,
--   <a>smsMfaConfigType_smsConfiguration</a> - The SMS configuration.
newSmsMfaConfigType :: SmsMfaConfigType

-- | The SMS authentication message that will be sent to users with the
--   code they need to sign in. The message must contain the ‘{####}’
--   placeholder, which will be replaced with the code. If the message is
--   not included, and default message will be used.
smsMfaConfigType_smsAuthenticationMessage :: Lens' SmsMfaConfigType (Maybe Text)

-- | The SMS configuration.
smsMfaConfigType_smsConfiguration :: Lens' SmsMfaConfigType (Maybe SmsConfigurationType)

-- | The type used for enabling software token MFA at the user pool level.
--   
--   <i>See:</i> <a>newSoftwareTokenMfaConfigType</a> smart constructor.
data SoftwareTokenMfaConfigType
SoftwareTokenMfaConfigType' :: Maybe Bool -> SoftwareTokenMfaConfigType

-- | Specifies whether software token MFA is enabled.
[$sel:enabled:SoftwareTokenMfaConfigType'] :: SoftwareTokenMfaConfigType -> Maybe Bool

-- | Create a value of <a>SoftwareTokenMfaConfigType</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:enabled:SoftwareTokenMfaConfigType'</a>,
--   <a>softwareTokenMfaConfigType_enabled</a> - Specifies whether software
--   token MFA is enabled.
newSoftwareTokenMfaConfigType :: SoftwareTokenMfaConfigType

-- | Specifies whether software token MFA is enabled.
softwareTokenMfaConfigType_enabled :: Lens' SoftwareTokenMfaConfigType (Maybe Bool)

-- | The type used for enabling software token MFA at the user level. If an
--   MFA type is enabled for a user, the user will be prompted for MFA
--   during all sign in attempts, unless device tracking is turned on and
--   the device has been trusted. If you would like MFA to be applied
--   selectively based on the assessed risk level of sign in attempts,
--   disable MFA for users and turn on Adaptive Authentication for the user
--   pool.
--   
--   <i>See:</i> <a>newSoftwareTokenMfaSettingsType</a> smart constructor.
data SoftwareTokenMfaSettingsType
SoftwareTokenMfaSettingsType' :: Maybe Bool -> Maybe Bool -> SoftwareTokenMfaSettingsType

-- | Specifies whether software token MFA is enabled. If an MFA type is
--   enabled for a user, the user will be prompted for MFA during all sign
--   in attempts, unless device tracking is turned on and the device has
--   been trusted.
[$sel:enabled:SoftwareTokenMfaSettingsType'] :: SoftwareTokenMfaSettingsType -> Maybe Bool

-- | Specifies whether software token MFA is the preferred MFA method.
[$sel:preferredMfa:SoftwareTokenMfaSettingsType'] :: SoftwareTokenMfaSettingsType -> Maybe Bool

-- | Create a value of <a>SoftwareTokenMfaSettingsType</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:enabled:SoftwareTokenMfaSettingsType'</a>,
--   <a>softwareTokenMfaSettingsType_enabled</a> - Specifies whether
--   software token MFA is enabled. If an MFA type is enabled for a user,
--   the user will be prompted for MFA during all sign in attempts, unless
--   device tracking is turned on and the device has been trusted.
--   
--   <a>$sel:preferredMfa:SoftwareTokenMfaSettingsType'</a>,
--   <a>softwareTokenMfaSettingsType_preferredMfa</a> - Specifies whether
--   software token MFA is the preferred MFA method.
newSoftwareTokenMfaSettingsType :: SoftwareTokenMfaSettingsType

-- | Specifies whether software token MFA is enabled. If an MFA type is
--   enabled for a user, the user will be prompted for MFA during all sign
--   in attempts, unless device tracking is turned on and the device has
--   been trusted.
softwareTokenMfaSettingsType_enabled :: Lens' SoftwareTokenMfaSettingsType (Maybe Bool)

-- | Specifies whether software token MFA is the preferred MFA method.
softwareTokenMfaSettingsType_preferredMfa :: Lens' SoftwareTokenMfaSettingsType (Maybe Bool)

-- | The constraints associated with a string attribute.
--   
--   <i>See:</i> <a>newStringAttributeConstraintsType</a> smart
--   constructor.
data StringAttributeConstraintsType
StringAttributeConstraintsType' :: Maybe Text -> Maybe Text -> StringAttributeConstraintsType

-- | The maximum length.
[$sel:maxLength:StringAttributeConstraintsType'] :: StringAttributeConstraintsType -> Maybe Text

-- | The minimum length.
[$sel:minLength:StringAttributeConstraintsType'] :: StringAttributeConstraintsType -> Maybe Text

-- | Create a value of <a>StringAttributeConstraintsType</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:maxLength:StringAttributeConstraintsType'</a>,
--   <a>stringAttributeConstraintsType_maxLength</a> - The maximum length.
--   
--   <a>$sel:minLength:StringAttributeConstraintsType'</a>,
--   <a>stringAttributeConstraintsType_minLength</a> - The minimum length.
newStringAttributeConstraintsType :: StringAttributeConstraintsType

-- | The maximum length.
stringAttributeConstraintsType_maxLength :: Lens' StringAttributeConstraintsType (Maybe Text)

-- | The minimum length.
stringAttributeConstraintsType_minLength :: Lens' StringAttributeConstraintsType (Maybe Text)

-- | The data type for TokenValidityUnits that specifics the time
--   measurements for token validity.
--   
--   <i>See:</i> <a>newTokenValidityUnitsType</a> smart constructor.
data TokenValidityUnitsType
TokenValidityUnitsType' :: Maybe TimeUnitsType -> Maybe TimeUnitsType -> Maybe TimeUnitsType -> TokenValidityUnitsType

-- | A time unit in “seconds”, “minutes”, “hours” or “days” for the value
--   in AccessTokenValidity, defaults to hours.
[$sel:accessToken:TokenValidityUnitsType'] :: TokenValidityUnitsType -> Maybe TimeUnitsType

-- | A time unit in “seconds”, “minutes”, “hours” or “days” for the value
--   in RefreshTokenValidity, defaults to days.
[$sel:refreshToken:TokenValidityUnitsType'] :: TokenValidityUnitsType -> Maybe TimeUnitsType

-- | A time unit in “seconds”, “minutes”, “hours” or “days” for the value
--   in IdTokenValidity, defaults to hours.
[$sel:idToken:TokenValidityUnitsType'] :: TokenValidityUnitsType -> Maybe TimeUnitsType

-- | Create a value of <a>TokenValidityUnitsType</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:accessToken:TokenValidityUnitsType'</a>,
--   <a>tokenValidityUnitsType_accessToken</a> - A time unit in “seconds”,
--   “minutes”, “hours” or “days” for the value in AccessTokenValidity,
--   defaults to hours.
--   
--   <a>$sel:refreshToken:TokenValidityUnitsType'</a>,
--   <a>tokenValidityUnitsType_refreshToken</a> - A time unit in “seconds”,
--   “minutes”, “hours” or “days” for the value in RefreshTokenValidity,
--   defaults to days.
--   
--   <a>$sel:idToken:TokenValidityUnitsType'</a>,
--   <a>tokenValidityUnitsType_idToken</a> - A time unit in “seconds”,
--   “minutes”, “hours” or “days” for the value in IdTokenValidity,
--   defaults to hours.
newTokenValidityUnitsType :: TokenValidityUnitsType

-- | A time unit in “seconds”, “minutes”, “hours” or “days” for the value
--   in AccessTokenValidity, defaults to hours.
tokenValidityUnitsType_accessToken :: Lens' TokenValidityUnitsType (Maybe TimeUnitsType)

-- | A time unit in “seconds”, “minutes”, “hours” or “days” for the value
--   in RefreshTokenValidity, defaults to days.
tokenValidityUnitsType_refreshToken :: Lens' TokenValidityUnitsType (Maybe TimeUnitsType)

-- | A time unit in “seconds”, “minutes”, “hours” or “days” for the value
--   in IdTokenValidity, defaults to hours.
tokenValidityUnitsType_idToken :: Lens' TokenValidityUnitsType (Maybe TimeUnitsType)

-- | A container for the UI customization information for a user pool's
--   built-in app UI.
--   
--   <i>See:</i> <a>newUICustomizationType</a> smart constructor.
data UICustomizationType
UICustomizationType' :: Maybe (Sensitive Text) -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> UICustomizationType

-- | The client ID for the client app.
[$sel:clientId:UICustomizationType'] :: UICustomizationType -> Maybe (Sensitive Text)

-- | The last-modified date for the UI customization.
[$sel:lastModifiedDate:UICustomizationType'] :: UICustomizationType -> Maybe POSIX

-- | The user pool ID for the user pool.
[$sel:userPoolId:UICustomizationType'] :: UICustomizationType -> Maybe Text

-- | The CSS values in the UI customization.
[$sel:css:UICustomizationType'] :: UICustomizationType -> Maybe Text

-- | The CSS version number.
[$sel:cSSVersion:UICustomizationType'] :: UICustomizationType -> Maybe Text

-- | The logo image for the UI customization.
[$sel:imageUrl:UICustomizationType'] :: UICustomizationType -> Maybe Text

-- | The creation date for the UI customization.
[$sel:creationDate:UICustomizationType'] :: UICustomizationType -> Maybe POSIX

-- | Create a value of <a>UICustomizationType</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientId:UICustomizationType'</a>,
--   <a>uICustomizationType_clientId</a> - The client ID for the client
--   app.
--   
--   <a>$sel:lastModifiedDate:UICustomizationType'</a>,
--   <a>uICustomizationType_lastModifiedDate</a> - The last-modified date
--   for the UI customization.
--   
--   <a>$sel:userPoolId:UICustomizationType'</a>,
--   <a>uICustomizationType_userPoolId</a> - The user pool ID for the user
--   pool.
--   
--   <a>$sel:css:UICustomizationType'</a>, <a>uICustomizationType_css</a> -
--   The CSS values in the UI customization.
--   
--   <a>$sel:cSSVersion:UICustomizationType'</a>,
--   <a>uICustomizationType_cSSVersion</a> - The CSS version number.
--   
--   <a>$sel:imageUrl:UICustomizationType'</a>,
--   <a>uICustomizationType_imageUrl</a> - The logo image for the UI
--   customization.
--   
--   <a>$sel:creationDate:UICustomizationType'</a>,
--   <a>uICustomizationType_creationDate</a> - The creation date for the UI
--   customization.
newUICustomizationType :: UICustomizationType

-- | The client ID for the client app.
uICustomizationType_clientId :: Lens' UICustomizationType (Maybe Text)

-- | The last-modified date for the UI customization.
uICustomizationType_lastModifiedDate :: Lens' UICustomizationType (Maybe UTCTime)

-- | The user pool ID for the user pool.
uICustomizationType_userPoolId :: Lens' UICustomizationType (Maybe Text)

-- | The CSS values in the UI customization.
uICustomizationType_css :: Lens' UICustomizationType (Maybe Text)

-- | The CSS version number.
uICustomizationType_cSSVersion :: Lens' UICustomizationType (Maybe Text)

-- | The logo image for the UI customization.
uICustomizationType_imageUrl :: Lens' UICustomizationType (Maybe Text)

-- | The creation date for the UI customization.
uICustomizationType_creationDate :: Lens' UICustomizationType (Maybe UTCTime)

-- | Contextual data such as the user's device fingerprint, IP address, or
--   location used for evaluating the risk of an unexpected event by Amazon
--   Cognito advanced security.
--   
--   <i>See:</i> <a>newUserContextDataType</a> smart constructor.
data UserContextDataType
UserContextDataType' :: Maybe Text -> UserContextDataType

-- | Contextual data such as the user's device fingerprint, IP address, or
--   location used for evaluating the risk of an unexpected event by Amazon
--   Cognito advanced security.
[$sel:encodedData:UserContextDataType'] :: UserContextDataType -> Maybe Text

-- | Create a value of <a>UserContextDataType</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:encodedData:UserContextDataType'</a>,
--   <a>userContextDataType_encodedData</a> - Contextual data such as the
--   user's device fingerprint, IP address, or location used for evaluating
--   the risk of an unexpected event by Amazon Cognito advanced security.
newUserContextDataType :: UserContextDataType

-- | Contextual data such as the user's device fingerprint, IP address, or
--   location used for evaluating the risk of an unexpected event by Amazon
--   Cognito advanced security.
userContextDataType_encodedData :: Lens' UserContextDataType (Maybe Text)

-- | The user import job type.
--   
--   <i>See:</i> <a>newUserImportJobType</a> smart constructor.
data UserImportJobType
UserImportJobType' :: Maybe UserImportJobStatusType -> Maybe Integer -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Integer -> Maybe POSIX -> Maybe Text -> Maybe POSIX -> Maybe POSIX -> Maybe Text -> Maybe Integer -> UserImportJobType

-- | The status of the user import job. One of the following:
--   
--   <ul>
--   <li><tt>Created</tt> - The job was created but not started.</li>
--   <li><tt>Pending</tt> - A transition state. You have started the job,
--   but it has not begun importing users yet.</li>
--   <li><tt>InProgress</tt> - The job has started, and users are being
--   imported.</li>
--   <li><tt>Stopping</tt> - You have stopped the job, but the job has not
--   stopped importing users yet.</li>
--   <li><tt>Stopped</tt> - You have stopped the job, and the job has
--   stopped importing users.</li>
--   <li><tt>Succeeded</tt> - The job has completed successfully.</li>
--   <li><tt>Failed</tt> - The job has stopped due to an error.</li>
--   <li><tt>Expired</tt> - You created a job, but did not start the job
--   within 24-48 hours. All data associated with the job was deleted, and
--   the job cannot be started.</li>
--   </ul>
[$sel:status:UserImportJobType'] :: UserImportJobType -> Maybe UserImportJobStatusType

-- | The number of users that were skipped.
[$sel:skippedUsers:UserImportJobType'] :: UserImportJobType -> Maybe Integer

-- | The job ID for the user import job.
[$sel:jobId:UserImportJobType'] :: UserImportJobType -> Maybe Text

-- | The user pool ID for the user pool that the users are being imported
--   into.
[$sel:userPoolId:UserImportJobType'] :: UserImportJobType -> Maybe Text

-- | The job name for the user import job.
[$sel:jobName:UserImportJobType'] :: UserImportJobType -> Maybe Text

-- | The pre-signed URL to be used to upload the <tt>.csv</tt> file.
[$sel:preSignedUrl:UserImportJobType'] :: UserImportJobType -> Maybe Text

-- | The number of users that could not be imported.
[$sel:failedUsers:UserImportJobType'] :: UserImportJobType -> Maybe Integer

-- | The date when the user import job was started.
[$sel:startDate:UserImportJobType'] :: UserImportJobType -> Maybe POSIX

-- | The message returned when the user import job is completed.
[$sel:completionMessage:UserImportJobType'] :: UserImportJobType -> Maybe Text

-- | The date the user import job was created.
[$sel:creationDate:UserImportJobType'] :: UserImportJobType -> Maybe POSIX

-- | The date when the user import job was completed.
[$sel:completionDate:UserImportJobType'] :: UserImportJobType -> Maybe POSIX

-- | The role ARN for the Amazon CloudWatch Logging role for the user
--   import job. For more information, see "Creating the CloudWatch Logs
--   IAM Role" in the Amazon Cognito Developer Guide.
[$sel:cloudWatchLogsRoleArn:UserImportJobType'] :: UserImportJobType -> Maybe Text

-- | The number of users that were successfully imported.
[$sel:importedUsers:UserImportJobType'] :: UserImportJobType -> Maybe Integer

-- | Create a value of <a>UserImportJobType</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:UserImportJobType'</a>, <a>userImportJobType_status</a>
--   - The status of the user import job. One of the following:
--   
--   <ul>
--   <li><tt>Created</tt> - The job was created but not started.</li>
--   <li><tt>Pending</tt> - A transition state. You have started the job,
--   but it has not begun importing users yet.</li>
--   <li><tt>InProgress</tt> - The job has started, and users are being
--   imported.</li>
--   <li><tt>Stopping</tt> - You have stopped the job, but the job has not
--   stopped importing users yet.</li>
--   <li><tt>Stopped</tt> - You have stopped the job, and the job has
--   stopped importing users.</li>
--   <li><tt>Succeeded</tt> - The job has completed successfully.</li>
--   <li><tt>Failed</tt> - The job has stopped due to an error.</li>
--   <li><tt>Expired</tt> - You created a job, but did not start the job
--   within 24-48 hours. All data associated with the job was deleted, and
--   the job cannot be started.</li>
--   </ul>
--   
--   <a>$sel:skippedUsers:UserImportJobType'</a>,
--   <a>userImportJobType_skippedUsers</a> - The number of users that were
--   skipped.
--   
--   <a>$sel:jobId:UserImportJobType'</a>, <a>userImportJobType_jobId</a> -
--   The job ID for the user import job.
--   
--   <a>$sel:userPoolId:UserImportJobType'</a>,
--   <a>userImportJobType_userPoolId</a> - The user pool ID for the user
--   pool that the users are being imported into.
--   
--   <a>$sel:jobName:UserImportJobType'</a>,
--   <a>userImportJobType_jobName</a> - The job name for the user import
--   job.
--   
--   <a>$sel:preSignedUrl:UserImportJobType'</a>,
--   <a>userImportJobType_preSignedUrl</a> - The pre-signed URL to be used
--   to upload the <tt>.csv</tt> file.
--   
--   <a>$sel:failedUsers:UserImportJobType'</a>,
--   <a>userImportJobType_failedUsers</a> - The number of users that could
--   not be imported.
--   
--   <a>$sel:startDate:UserImportJobType'</a>,
--   <a>userImportJobType_startDate</a> - The date when the user import job
--   was started.
--   
--   <a>$sel:completionMessage:UserImportJobType'</a>,
--   <a>userImportJobType_completionMessage</a> - The message returned when
--   the user import job is completed.
--   
--   <a>$sel:creationDate:UserImportJobType'</a>,
--   <a>userImportJobType_creationDate</a> - The date the user import job
--   was created.
--   
--   <a>$sel:completionDate:UserImportJobType'</a>,
--   <a>userImportJobType_completionDate</a> - The date when the user
--   import job was completed.
--   
--   <a>$sel:cloudWatchLogsRoleArn:UserImportJobType'</a>,
--   <a>userImportJobType_cloudWatchLogsRoleArn</a> - The role ARN for the
--   Amazon CloudWatch Logging role for the user import job. For more
--   information, see "Creating the CloudWatch Logs IAM Role" in the Amazon
--   Cognito Developer Guide.
--   
--   <a>$sel:importedUsers:UserImportJobType'</a>,
--   <a>userImportJobType_importedUsers</a> - The number of users that were
--   successfully imported.
newUserImportJobType :: UserImportJobType

-- | The status of the user import job. One of the following:
--   
--   <ul>
--   <li><tt>Created</tt> - The job was created but not started.</li>
--   <li><tt>Pending</tt> - A transition state. You have started the job,
--   but it has not begun importing users yet.</li>
--   <li><tt>InProgress</tt> - The job has started, and users are being
--   imported.</li>
--   <li><tt>Stopping</tt> - You have stopped the job, but the job has not
--   stopped importing users yet.</li>
--   <li><tt>Stopped</tt> - You have stopped the job, and the job has
--   stopped importing users.</li>
--   <li><tt>Succeeded</tt> - The job has completed successfully.</li>
--   <li><tt>Failed</tt> - The job has stopped due to an error.</li>
--   <li><tt>Expired</tt> - You created a job, but did not start the job
--   within 24-48 hours. All data associated with the job was deleted, and
--   the job cannot be started.</li>
--   </ul>
userImportJobType_status :: Lens' UserImportJobType (Maybe UserImportJobStatusType)

-- | The number of users that were skipped.
userImportJobType_skippedUsers :: Lens' UserImportJobType (Maybe Integer)

-- | The job ID for the user import job.
userImportJobType_jobId :: Lens' UserImportJobType (Maybe Text)

-- | The user pool ID for the user pool that the users are being imported
--   into.
userImportJobType_userPoolId :: Lens' UserImportJobType (Maybe Text)

-- | The job name for the user import job.
userImportJobType_jobName :: Lens' UserImportJobType (Maybe Text)

-- | The pre-signed URL to be used to upload the <tt>.csv</tt> file.
userImportJobType_preSignedUrl :: Lens' UserImportJobType (Maybe Text)

-- | The number of users that could not be imported.
userImportJobType_failedUsers :: Lens' UserImportJobType (Maybe Integer)

-- | The date when the user import job was started.
userImportJobType_startDate :: Lens' UserImportJobType (Maybe UTCTime)

-- | The message returned when the user import job is completed.
userImportJobType_completionMessage :: Lens' UserImportJobType (Maybe Text)

-- | The date the user import job was created.
userImportJobType_creationDate :: Lens' UserImportJobType (Maybe UTCTime)

-- | The date when the user import job was completed.
userImportJobType_completionDate :: Lens' UserImportJobType (Maybe UTCTime)

-- | The role ARN for the Amazon CloudWatch Logging role for the user
--   import job. For more information, see "Creating the CloudWatch Logs
--   IAM Role" in the Amazon Cognito Developer Guide.
userImportJobType_cloudWatchLogsRoleArn :: Lens' UserImportJobType (Maybe Text)

-- | The number of users that were successfully imported.
userImportJobType_importedUsers :: Lens' UserImportJobType (Maybe Integer)

-- | The user pool add-ons type.
--   
--   <i>See:</i> <a>newUserPoolAddOnsType</a> smart constructor.
data UserPoolAddOnsType
UserPoolAddOnsType' :: AdvancedSecurityModeType -> UserPoolAddOnsType

-- | The advanced security mode.
[$sel:advancedSecurityMode:UserPoolAddOnsType'] :: UserPoolAddOnsType -> AdvancedSecurityModeType

-- | Create a value of <a>UserPoolAddOnsType</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:advancedSecurityMode:UserPoolAddOnsType'</a>,
--   <a>userPoolAddOnsType_advancedSecurityMode</a> - The advanced security
--   mode.
newUserPoolAddOnsType :: AdvancedSecurityModeType -> UserPoolAddOnsType

-- | The advanced security mode.
userPoolAddOnsType_advancedSecurityMode :: Lens' UserPoolAddOnsType AdvancedSecurityModeType

-- | The description of the user pool client.
--   
--   <i>See:</i> <a>newUserPoolClientDescription</a> smart constructor.
data UserPoolClientDescription
UserPoolClientDescription' :: Maybe (Sensitive Text) -> Maybe Text -> Maybe Text -> UserPoolClientDescription

-- | The ID of the client associated with the user pool.
[$sel:clientId:UserPoolClientDescription'] :: UserPoolClientDescription -> Maybe (Sensitive Text)

-- | The user pool ID for the user pool where you want to describe the user
--   pool client.
[$sel:userPoolId:UserPoolClientDescription'] :: UserPoolClientDescription -> Maybe Text

-- | The client name from the user pool client description.
[$sel:clientName:UserPoolClientDescription'] :: UserPoolClientDescription -> Maybe Text

-- | Create a value of <a>UserPoolClientDescription</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientId:UserPoolClientDescription'</a>,
--   <a>userPoolClientDescription_clientId</a> - The ID of the client
--   associated with the user pool.
--   
--   <a>$sel:userPoolId:UserPoolClientDescription'</a>,
--   <a>userPoolClientDescription_userPoolId</a> - The user pool ID for the
--   user pool where you want to describe the user pool client.
--   
--   <a>$sel:clientName:UserPoolClientDescription'</a>,
--   <a>userPoolClientDescription_clientName</a> - The client name from the
--   user pool client description.
newUserPoolClientDescription :: UserPoolClientDescription

-- | The ID of the client associated with the user pool.
userPoolClientDescription_clientId :: Lens' UserPoolClientDescription (Maybe Text)

-- | The user pool ID for the user pool where you want to describe the user
--   pool client.
userPoolClientDescription_userPoolId :: Lens' UserPoolClientDescription (Maybe Text)

-- | The client name from the user pool client description.
userPoolClientDescription_clientName :: Lens' UserPoolClientDescription (Maybe Text)

-- | Contains information about a user pool client.
--   
--   <i>See:</i> <a>newUserPoolClientType</a> smart constructor.
data UserPoolClientType
UserPoolClientType' :: Maybe Natural -> Maybe (Sensitive Text) -> Maybe [ExplicitAuthFlowsType] -> Maybe (Sensitive Text) -> Maybe POSIX -> Maybe [Text] -> Maybe [Text] -> Maybe Bool -> Maybe Text -> Maybe Natural -> Maybe TokenValidityUnitsType -> Maybe Text -> Maybe Bool -> Maybe [Text] -> Maybe PreventUserExistenceErrorTypes -> Maybe Natural -> Maybe POSIX -> Maybe [Text] -> Maybe [Text] -> Maybe [OAuthFlowType] -> Maybe AnalyticsConfigurationType -> Maybe Text -> Maybe [Text] -> UserPoolClientType

-- | The time limit, in days, after which the refresh token is no longer
--   valid and cannot be used.
[$sel:refreshTokenValidity:UserPoolClientType'] :: UserPoolClientType -> Maybe Natural

-- | The ID of the client associated with the user pool.
[$sel:clientId:UserPoolClientType'] :: UserPoolClientType -> Maybe (Sensitive Text)

-- | The authentication flows that are supported by the user pool clients.
--   Flow names without the <tt>ALLOW_</tt> prefix are deprecated in favor
--   of new names with the <tt>ALLOW_</tt> prefix. Note that values with
--   <tt>ALLOW_</tt> prefix cannot be used along with values without
--   <tt>ALLOW_</tt> prefix.
--   
--   Valid values include:
--   
--   <ul>
--   <li><tt>ALLOW_ADMIN_USER_PASSWORD_AUTH</tt>: Enable admin based user
--   password authentication flow <tt>ADMIN_USER_PASSWORD_AUTH</tt>. This
--   setting replaces the <tt>ADMIN_NO_SRP_AUTH</tt> setting. With this
--   authentication flow, Cognito receives the password in the request
--   instead of using the SRP (Secure Remote Password protocol) protocol to
--   verify passwords.</li>
--   <li><tt>ALLOW_CUSTOM_AUTH</tt>: Enable Lambda trigger based
--   authentication.</li>
--   <li><tt>ALLOW_USER_PASSWORD_AUTH</tt>: Enable user password-based
--   authentication. In this flow, Cognito receives the password in the
--   request instead of using the SRP protocol to verify passwords.</li>
--   <li><tt>ALLOW_USER_SRP_AUTH</tt>: Enable SRP based
--   authentication.</li>
--   <li><tt>ALLOW_REFRESH_TOKEN_AUTH</tt>: Enable authflow to refresh
--   tokens.</li>
--   </ul>
[$sel:explicitAuthFlows:UserPoolClientType'] :: UserPoolClientType -> Maybe [ExplicitAuthFlowsType]

-- | The client secret from the user pool request of the client type.
[$sel:clientSecret:UserPoolClientType'] :: UserPoolClientType -> Maybe (Sensitive Text)

-- | The date the user pool client was last modified.
[$sel:lastModifiedDate:UserPoolClientType'] :: UserPoolClientType -> Maybe POSIX

-- | A list of provider names for the identity providers that are supported
--   on this client.
[$sel:supportedIdentityProviders:UserPoolClientType'] :: UserPoolClientType -> Maybe [Text]

-- | A list of allowed logout URLs for the identity providers.
[$sel:logoutURLs:UserPoolClientType'] :: UserPoolClientType -> Maybe [Text]

-- | Set to true if the client is allowed to follow the OAuth protocol when
--   interacting with Cognito user pools.
[$sel:allowedOAuthFlowsUserPoolClient:UserPoolClientType'] :: UserPoolClientType -> Maybe Bool

-- | The user pool ID for the user pool client.
[$sel:userPoolId:UserPoolClientType'] :: UserPoolClientType -> Maybe Text

-- | The time limit, specified by tokenValidityUnits, defaulting to hours,
--   after which the refresh token is no longer valid and cannot be used.
[$sel:idTokenValidity:UserPoolClientType'] :: UserPoolClientType -> Maybe Natural

-- | The time units used to specify the token validity times of their
--   respective token.
[$sel:tokenValidityUnits:UserPoolClientType'] :: UserPoolClientType -> Maybe TokenValidityUnitsType

-- | The default redirect URI. Must be in the <tt>CallbackURLs</tt> list.
--   
--   A redirect URI must:
--   
--   <ul>
--   <li>Be an absolute URI.</li>
--   <li>Be registered with the authorization server.</li>
--   <li>Not include a fragment component.</li>
--   </ul>
--   
--   See <a>OAuth 2.0 - Redirection Endpoint</a>.
--   
--   Amazon Cognito requires HTTPS over HTTP except for http://localhost
--   for testing purposes only.
--   
--   App callback URLs such as myapp://example are also supported.
[$sel:defaultRedirectURI:UserPoolClientType'] :: UserPoolClientType -> Maybe Text

-- | Indicates whether token revocation is enabled for the user pool
--   client. When you create a new user pool client, token revocation is
--   enabled by default. For more information about revoking tokens, see
--   <a>RevokeToken</a>.
[$sel:enableTokenRevocation:UserPoolClientType'] :: UserPoolClientType -> Maybe Bool

-- | The writeable attributes.
[$sel:writeAttributes:UserPoolClientType'] :: UserPoolClientType -> Maybe [Text]

-- | Use this setting to choose which errors and responses are returned by
--   Cognito APIs during authentication, account confirmation, and password
--   recovery when the user does not exist in the user pool. When set to
--   <tt>ENABLED</tt> and the user does not exist, authentication returns
--   an error indicating either the username or password was incorrect, and
--   account confirmation and password recovery return a response
--   indicating a code was sent to a simulated destination. When set to
--   <tt>LEGACY</tt>, those APIs will return a
--   <tt>UserNotFoundException</tt> exception if the user does not exist in
--   the user pool.
--   
--   Valid values include:
--   
--   <ul>
--   <li><tt>ENABLED</tt> - This prevents user existence-related
--   errors.</li>
--   <li><tt>LEGACY</tt> - This represents the old behavior of Cognito
--   where user existence related errors are not prevented.</li>
--   </ul>
--   
--   After February 15th 2020, the value of
--   <tt>PreventUserExistenceErrors</tt> will default to <tt>ENABLED</tt>
--   for newly created user pool clients if no value is provided.
[$sel:preventUserExistenceErrors:UserPoolClientType'] :: UserPoolClientType -> Maybe PreventUserExistenceErrorTypes

-- | The time limit, specified by tokenValidityUnits, defaulting to hours,
--   after which the access token is no longer valid and cannot be used.
[$sel:accessTokenValidity:UserPoolClientType'] :: UserPoolClientType -> Maybe Natural

-- | The date the user pool client was created.
[$sel:creationDate:UserPoolClientType'] :: UserPoolClientType -> Maybe POSIX

-- | The Read-only attributes.
[$sel:readAttributes:UserPoolClientType'] :: UserPoolClientType -> Maybe [Text]

-- | The allowed OAuth scopes. Possible values provided by OAuth are:
--   <tt>phone</tt>, <tt>email</tt>, <tt>openid</tt>, and <tt>profile</tt>.
--   Possible values provided by Amazon Web Services are:
--   <tt>aws.cognito.signin.user.admin</tt>. Custom scopes created in
--   Resource Servers are also supported.
[$sel:allowedOAuthScopes:UserPoolClientType'] :: UserPoolClientType -> Maybe [Text]

-- | The allowed OAuth flows.
--   
--   Set to <tt>code</tt> to initiate a code grant flow, which provides an
--   authorization code as the response. This code can be exchanged for
--   access tokens with the token endpoint.
--   
--   Set to <tt>implicit</tt> to specify that the client should get the
--   access token (and, optionally, ID token, based on scopes) directly.
--   
--   Set to <tt>client_credentials</tt> to specify that the client should
--   get the access token (and, optionally, ID token, based on scopes) from
--   the token endpoint using a combination of client and client_secret.
[$sel:allowedOAuthFlows:UserPoolClientType'] :: UserPoolClientType -> Maybe [OAuthFlowType]

-- | The Amazon Pinpoint analytics configuration for the user pool client.
--   
--   Cognito User Pools only supports sending events to Amazon Pinpoint
--   projects in the US East (N. Virginia) us-east-1 Region, regardless of
--   the region in which the user pool resides.
[$sel:analyticsConfiguration:UserPoolClientType'] :: UserPoolClientType -> Maybe AnalyticsConfigurationType

-- | The client name from the user pool request of the client type.
[$sel:clientName:UserPoolClientType'] :: UserPoolClientType -> Maybe Text

-- | A list of allowed redirect (callback) URLs for the identity providers.
--   
--   A redirect URI must:
--   
--   <ul>
--   <li>Be an absolute URI.</li>
--   <li>Be registered with the authorization server.</li>
--   <li>Not include a fragment component.</li>
--   </ul>
--   
--   See <a>OAuth 2.0 - Redirection Endpoint</a>.
--   
--   Amazon Cognito requires HTTPS over HTTP except for http://localhost
--   for testing purposes only.
--   
--   App callback URLs such as myapp://example are also supported.
[$sel:callbackURLs:UserPoolClientType'] :: UserPoolClientType -> Maybe [Text]

-- | Create a value of <a>UserPoolClientType</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:refreshTokenValidity:UserPoolClientType'</a>,
--   <a>userPoolClientType_refreshTokenValidity</a> - The time limit, in
--   days, after which the refresh token is no longer valid and cannot be
--   used.
--   
--   <a>$sel:clientId:UserPoolClientType'</a>,
--   <a>userPoolClientType_clientId</a> - The ID of the client associated
--   with the user pool.
--   
--   <a>$sel:explicitAuthFlows:UserPoolClientType'</a>,
--   <a>userPoolClientType_explicitAuthFlows</a> - The authentication flows
--   that are supported by the user pool clients. Flow names without the
--   <tt>ALLOW_</tt> prefix are deprecated in favor of new names with the
--   <tt>ALLOW_</tt> prefix. Note that values with <tt>ALLOW_</tt> prefix
--   cannot be used along with values without <tt>ALLOW_</tt> prefix.
--   
--   Valid values include:
--   
--   <ul>
--   <li><tt>ALLOW_ADMIN_USER_PASSWORD_AUTH</tt>: Enable admin based user
--   password authentication flow <tt>ADMIN_USER_PASSWORD_AUTH</tt>. This
--   setting replaces the <tt>ADMIN_NO_SRP_AUTH</tt> setting. With this
--   authentication flow, Cognito receives the password in the request
--   instead of using the SRP (Secure Remote Password protocol) protocol to
--   verify passwords.</li>
--   <li><tt>ALLOW_CUSTOM_AUTH</tt>: Enable Lambda trigger based
--   authentication.</li>
--   <li><tt>ALLOW_USER_PASSWORD_AUTH</tt>: Enable user password-based
--   authentication. In this flow, Cognito receives the password in the
--   request instead of using the SRP protocol to verify passwords.</li>
--   <li><tt>ALLOW_USER_SRP_AUTH</tt>: Enable SRP based
--   authentication.</li>
--   <li><tt>ALLOW_REFRESH_TOKEN_AUTH</tt>: Enable authflow to refresh
--   tokens.</li>
--   </ul>
--   
--   <a>$sel:clientSecret:UserPoolClientType'</a>,
--   <a>userPoolClientType_clientSecret</a> - The client secret from the
--   user pool request of the client type.
--   
--   <a>$sel:lastModifiedDate:UserPoolClientType'</a>,
--   <a>userPoolClientType_lastModifiedDate</a> - The date the user pool
--   client was last modified.
--   
--   <a>$sel:supportedIdentityProviders:UserPoolClientType'</a>,
--   <a>userPoolClientType_supportedIdentityProviders</a> - A list of
--   provider names for the identity providers that are supported on this
--   client.
--   
--   <a>$sel:logoutURLs:UserPoolClientType'</a>,
--   <a>userPoolClientType_logoutURLs</a> - A list of allowed logout URLs
--   for the identity providers.
--   
--   <a>$sel:allowedOAuthFlowsUserPoolClient:UserPoolClientType'</a>,
--   <a>userPoolClientType_allowedOAuthFlowsUserPoolClient</a> - Set to
--   true if the client is allowed to follow the OAuth protocol when
--   interacting with Cognito user pools.
--   
--   <a>$sel:userPoolId:UserPoolClientType'</a>,
--   <a>userPoolClientType_userPoolId</a> - The user pool ID for the user
--   pool client.
--   
--   <a>$sel:idTokenValidity:UserPoolClientType'</a>,
--   <a>userPoolClientType_idTokenValidity</a> - The time limit, specified
--   by tokenValidityUnits, defaulting to hours, after which the refresh
--   token is no longer valid and cannot be used.
--   
--   <a>$sel:tokenValidityUnits:UserPoolClientType'</a>,
--   <a>userPoolClientType_tokenValidityUnits</a> - The time units used to
--   specify the token validity times of their respective token.
--   
--   <a>$sel:defaultRedirectURI:UserPoolClientType'</a>,
--   <a>userPoolClientType_defaultRedirectURI</a> - The default redirect
--   URI. Must be in the <tt>CallbackURLs</tt> list.
--   
--   A redirect URI must:
--   
--   <ul>
--   <li>Be an absolute URI.</li>
--   <li>Be registered with the authorization server.</li>
--   <li>Not include a fragment component.</li>
--   </ul>
--   
--   See <a>OAuth 2.0 - Redirection Endpoint</a>.
--   
--   Amazon Cognito requires HTTPS over HTTP except for http://localhost
--   for testing purposes only.
--   
--   App callback URLs such as myapp://example are also supported.
--   
--   <a>$sel:enableTokenRevocation:UserPoolClientType'</a>,
--   <a>userPoolClientType_enableTokenRevocation</a> - Indicates whether
--   token revocation is enabled for the user pool client. When you create
--   a new user pool client, token revocation is enabled by default. For
--   more information about revoking tokens, see <a>RevokeToken</a>.
--   
--   <a>$sel:writeAttributes:UserPoolClientType'</a>,
--   <a>userPoolClientType_writeAttributes</a> - The writeable attributes.
--   
--   <a>$sel:preventUserExistenceErrors:UserPoolClientType'</a>,
--   <a>userPoolClientType_preventUserExistenceErrors</a> - Use this
--   setting to choose which errors and responses are returned by Cognito
--   APIs during authentication, account confirmation, and password
--   recovery when the user does not exist in the user pool. When set to
--   <tt>ENABLED</tt> and the user does not exist, authentication returns
--   an error indicating either the username or password was incorrect, and
--   account confirmation and password recovery return a response
--   indicating a code was sent to a simulated destination. When set to
--   <tt>LEGACY</tt>, those APIs will return a
--   <tt>UserNotFoundException</tt> exception if the user does not exist in
--   the user pool.
--   
--   Valid values include:
--   
--   <ul>
--   <li><tt>ENABLED</tt> - This prevents user existence-related
--   errors.</li>
--   <li><tt>LEGACY</tt> - This represents the old behavior of Cognito
--   where user existence related errors are not prevented.</li>
--   </ul>
--   
--   After February 15th 2020, the value of
--   <tt>PreventUserExistenceErrors</tt> will default to <tt>ENABLED</tt>
--   for newly created user pool clients if no value is provided.
--   
--   <a>$sel:accessTokenValidity:UserPoolClientType'</a>,
--   <a>userPoolClientType_accessTokenValidity</a> - The time limit,
--   specified by tokenValidityUnits, defaulting to hours, after which the
--   access token is no longer valid and cannot be used.
--   
--   <a>$sel:creationDate:UserPoolClientType'</a>,
--   <a>userPoolClientType_creationDate</a> - The date the user pool client
--   was created.
--   
--   <a>$sel:readAttributes:UserPoolClientType'</a>,
--   <a>userPoolClientType_readAttributes</a> - The Read-only attributes.
--   
--   <a>$sel:allowedOAuthScopes:UserPoolClientType'</a>,
--   <a>userPoolClientType_allowedOAuthScopes</a> - The allowed OAuth
--   scopes. Possible values provided by OAuth are: <tt>phone</tt>,
--   <tt>email</tt>, <tt>openid</tt>, and <tt>profile</tt>. Possible values
--   provided by Amazon Web Services are:
--   <tt>aws.cognito.signin.user.admin</tt>. Custom scopes created in
--   Resource Servers are also supported.
--   
--   <a>$sel:allowedOAuthFlows:UserPoolClientType'</a>,
--   <a>userPoolClientType_allowedOAuthFlows</a> - The allowed OAuth flows.
--   
--   Set to <tt>code</tt> to initiate a code grant flow, which provides an
--   authorization code as the response. This code can be exchanged for
--   access tokens with the token endpoint.
--   
--   Set to <tt>implicit</tt> to specify that the client should get the
--   access token (and, optionally, ID token, based on scopes) directly.
--   
--   Set to <tt>client_credentials</tt> to specify that the client should
--   get the access token (and, optionally, ID token, based on scopes) from
--   the token endpoint using a combination of client and client_secret.
--   
--   <a>$sel:analyticsConfiguration:UserPoolClientType'</a>,
--   <a>userPoolClientType_analyticsConfiguration</a> - The Amazon Pinpoint
--   analytics configuration for the user pool client.
--   
--   Cognito User Pools only supports sending events to Amazon Pinpoint
--   projects in the US East (N. Virginia) us-east-1 Region, regardless of
--   the region in which the user pool resides.
--   
--   <a>$sel:clientName:UserPoolClientType'</a>,
--   <a>userPoolClientType_clientName</a> - The client name from the user
--   pool request of the client type.
--   
--   <a>$sel:callbackURLs:UserPoolClientType'</a>,
--   <a>userPoolClientType_callbackURLs</a> - A list of allowed redirect
--   (callback) URLs for the identity providers.
--   
--   A redirect URI must:
--   
--   <ul>
--   <li>Be an absolute URI.</li>
--   <li>Be registered with the authorization server.</li>
--   <li>Not include a fragment component.</li>
--   </ul>
--   
--   See <a>OAuth 2.0 - Redirection Endpoint</a>.
--   
--   Amazon Cognito requires HTTPS over HTTP except for http://localhost
--   for testing purposes only.
--   
--   App callback URLs such as myapp://example are also supported.
newUserPoolClientType :: UserPoolClientType

-- | The time limit, in days, after which the refresh token is no longer
--   valid and cannot be used.
userPoolClientType_refreshTokenValidity :: Lens' UserPoolClientType (Maybe Natural)

-- | The ID of the client associated with the user pool.
userPoolClientType_clientId :: Lens' UserPoolClientType (Maybe Text)

-- | The authentication flows that are supported by the user pool clients.
--   Flow names without the <tt>ALLOW_</tt> prefix are deprecated in favor
--   of new names with the <tt>ALLOW_</tt> prefix. Note that values with
--   <tt>ALLOW_</tt> prefix cannot be used along with values without
--   <tt>ALLOW_</tt> prefix.
--   
--   Valid values include:
--   
--   <ul>
--   <li><tt>ALLOW_ADMIN_USER_PASSWORD_AUTH</tt>: Enable admin based user
--   password authentication flow <tt>ADMIN_USER_PASSWORD_AUTH</tt>. This
--   setting replaces the <tt>ADMIN_NO_SRP_AUTH</tt> setting. With this
--   authentication flow, Cognito receives the password in the request
--   instead of using the SRP (Secure Remote Password protocol) protocol to
--   verify passwords.</li>
--   <li><tt>ALLOW_CUSTOM_AUTH</tt>: Enable Lambda trigger based
--   authentication.</li>
--   <li><tt>ALLOW_USER_PASSWORD_AUTH</tt>: Enable user password-based
--   authentication. In this flow, Cognito receives the password in the
--   request instead of using the SRP protocol to verify passwords.</li>
--   <li><tt>ALLOW_USER_SRP_AUTH</tt>: Enable SRP based
--   authentication.</li>
--   <li><tt>ALLOW_REFRESH_TOKEN_AUTH</tt>: Enable authflow to refresh
--   tokens.</li>
--   </ul>
userPoolClientType_explicitAuthFlows :: Lens' UserPoolClientType (Maybe [ExplicitAuthFlowsType])

-- | The client secret from the user pool request of the client type.
userPoolClientType_clientSecret :: Lens' UserPoolClientType (Maybe Text)

-- | The date the user pool client was last modified.
userPoolClientType_lastModifiedDate :: Lens' UserPoolClientType (Maybe UTCTime)

-- | A list of provider names for the identity providers that are supported
--   on this client.
userPoolClientType_supportedIdentityProviders :: Lens' UserPoolClientType (Maybe [Text])

-- | A list of allowed logout URLs for the identity providers.
userPoolClientType_logoutURLs :: Lens' UserPoolClientType (Maybe [Text])

-- | Set to true if the client is allowed to follow the OAuth protocol when
--   interacting with Cognito user pools.
userPoolClientType_allowedOAuthFlowsUserPoolClient :: Lens' UserPoolClientType (Maybe Bool)

-- | The user pool ID for the user pool client.
userPoolClientType_userPoolId :: Lens' UserPoolClientType (Maybe Text)

-- | The time limit, specified by tokenValidityUnits, defaulting to hours,
--   after which the refresh token is no longer valid and cannot be used.
userPoolClientType_idTokenValidity :: Lens' UserPoolClientType (Maybe Natural)

-- | The time units used to specify the token validity times of their
--   respective token.
userPoolClientType_tokenValidityUnits :: Lens' UserPoolClientType (Maybe TokenValidityUnitsType)

-- | The default redirect URI. Must be in the <tt>CallbackURLs</tt> list.
--   
--   A redirect URI must:
--   
--   <ul>
--   <li>Be an absolute URI.</li>
--   <li>Be registered with the authorization server.</li>
--   <li>Not include a fragment component.</li>
--   </ul>
--   
--   See <a>OAuth 2.0 - Redirection Endpoint</a>.
--   
--   Amazon Cognito requires HTTPS over HTTP except for http://localhost
--   for testing purposes only.
--   
--   App callback URLs such as myapp://example are also supported.
userPoolClientType_defaultRedirectURI :: Lens' UserPoolClientType (Maybe Text)

-- | Indicates whether token revocation is enabled for the user pool
--   client. When you create a new user pool client, token revocation is
--   enabled by default. For more information about revoking tokens, see
--   <a>RevokeToken</a>.
userPoolClientType_enableTokenRevocation :: Lens' UserPoolClientType (Maybe Bool)

-- | The writeable attributes.
userPoolClientType_writeAttributes :: Lens' UserPoolClientType (Maybe [Text])

-- | Use this setting to choose which errors and responses are returned by
--   Cognito APIs during authentication, account confirmation, and password
--   recovery when the user does not exist in the user pool. When set to
--   <tt>ENABLED</tt> and the user does not exist, authentication returns
--   an error indicating either the username or password was incorrect, and
--   account confirmation and password recovery return a response
--   indicating a code was sent to a simulated destination. When set to
--   <tt>LEGACY</tt>, those APIs will return a
--   <tt>UserNotFoundException</tt> exception if the user does not exist in
--   the user pool.
--   
--   Valid values include:
--   
--   <ul>
--   <li><tt>ENABLED</tt> - This prevents user existence-related
--   errors.</li>
--   <li><tt>LEGACY</tt> - This represents the old behavior of Cognito
--   where user existence related errors are not prevented.</li>
--   </ul>
--   
--   After February 15th 2020, the value of
--   <tt>PreventUserExistenceErrors</tt> will default to <tt>ENABLED</tt>
--   for newly created user pool clients if no value is provided.
userPoolClientType_preventUserExistenceErrors :: Lens' UserPoolClientType (Maybe PreventUserExistenceErrorTypes)

-- | The time limit, specified by tokenValidityUnits, defaulting to hours,
--   after which the access token is no longer valid and cannot be used.
userPoolClientType_accessTokenValidity :: Lens' UserPoolClientType (Maybe Natural)

-- | The date the user pool client was created.
userPoolClientType_creationDate :: Lens' UserPoolClientType (Maybe UTCTime)

-- | The Read-only attributes.
userPoolClientType_readAttributes :: Lens' UserPoolClientType (Maybe [Text])

-- | The allowed OAuth scopes. Possible values provided by OAuth are:
--   <tt>phone</tt>, <tt>email</tt>, <tt>openid</tt>, and <tt>profile</tt>.
--   Possible values provided by Amazon Web Services are:
--   <tt>aws.cognito.signin.user.admin</tt>. Custom scopes created in
--   Resource Servers are also supported.
userPoolClientType_allowedOAuthScopes :: Lens' UserPoolClientType (Maybe [Text])

-- | The allowed OAuth flows.
--   
--   Set to <tt>code</tt> to initiate a code grant flow, which provides an
--   authorization code as the response. This code can be exchanged for
--   access tokens with the token endpoint.
--   
--   Set to <tt>implicit</tt> to specify that the client should get the
--   access token (and, optionally, ID token, based on scopes) directly.
--   
--   Set to <tt>client_credentials</tt> to specify that the client should
--   get the access token (and, optionally, ID token, based on scopes) from
--   the token endpoint using a combination of client and client_secret.
userPoolClientType_allowedOAuthFlows :: Lens' UserPoolClientType (Maybe [OAuthFlowType])

-- | The Amazon Pinpoint analytics configuration for the user pool client.
--   
--   Cognito User Pools only supports sending events to Amazon Pinpoint
--   projects in the US East (N. Virginia) us-east-1 Region, regardless of
--   the region in which the user pool resides.
userPoolClientType_analyticsConfiguration :: Lens' UserPoolClientType (Maybe AnalyticsConfigurationType)

-- | The client name from the user pool request of the client type.
userPoolClientType_clientName :: Lens' UserPoolClientType (Maybe Text)

-- | A list of allowed redirect (callback) URLs for the identity providers.
--   
--   A redirect URI must:
--   
--   <ul>
--   <li>Be an absolute URI.</li>
--   <li>Be registered with the authorization server.</li>
--   <li>Not include a fragment component.</li>
--   </ul>
--   
--   See <a>OAuth 2.0 - Redirection Endpoint</a>.
--   
--   Amazon Cognito requires HTTPS over HTTP except for http://localhost
--   for testing purposes only.
--   
--   App callback URLs such as myapp://example are also supported.
userPoolClientType_callbackURLs :: Lens' UserPoolClientType (Maybe [Text])

-- | A user pool description.
--   
--   <i>See:</i> <a>newUserPoolDescriptionType</a> smart constructor.
data UserPoolDescriptionType
UserPoolDescriptionType' :: Maybe StatusType -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe LambdaConfigType -> UserPoolDescriptionType

-- | The user pool status in a user pool description.
[$sel:status:UserPoolDescriptionType'] :: UserPoolDescriptionType -> Maybe StatusType

-- | The date the user pool description was last modified.
[$sel:lastModifiedDate:UserPoolDescriptionType'] :: UserPoolDescriptionType -> Maybe POSIX

-- | The name in a user pool description.
[$sel:name:UserPoolDescriptionType'] :: UserPoolDescriptionType -> Maybe Text

-- | The ID in a user pool description.
[$sel:id:UserPoolDescriptionType'] :: UserPoolDescriptionType -> Maybe Text

-- | The date the user pool description was created.
[$sel:creationDate:UserPoolDescriptionType'] :: UserPoolDescriptionType -> Maybe POSIX

-- | The Lambda configuration information in a user pool description.
[$sel:lambdaConfig:UserPoolDescriptionType'] :: UserPoolDescriptionType -> Maybe LambdaConfigType

-- | Create a value of <a>UserPoolDescriptionType</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:UserPoolDescriptionType'</a>,
--   <a>userPoolDescriptionType_status</a> - The user pool status in a user
--   pool description.
--   
--   <a>$sel:lastModifiedDate:UserPoolDescriptionType'</a>,
--   <a>userPoolDescriptionType_lastModifiedDate</a> - The date the user
--   pool description was last modified.
--   
--   <a>$sel:name:UserPoolDescriptionType'</a>,
--   <a>userPoolDescriptionType_name</a> - The name in a user pool
--   description.
--   
--   <a>$sel:id:UserPoolDescriptionType'</a>,
--   <a>userPoolDescriptionType_id</a> - The ID in a user pool description.
--   
--   <a>$sel:creationDate:UserPoolDescriptionType'</a>,
--   <a>userPoolDescriptionType_creationDate</a> - The date the user pool
--   description was created.
--   
--   <a>$sel:lambdaConfig:UserPoolDescriptionType'</a>,
--   <a>userPoolDescriptionType_lambdaConfig</a> - The Lambda configuration
--   information in a user pool description.
newUserPoolDescriptionType :: UserPoolDescriptionType

-- | The user pool status in a user pool description.
userPoolDescriptionType_status :: Lens' UserPoolDescriptionType (Maybe StatusType)

-- | The date the user pool description was last modified.
userPoolDescriptionType_lastModifiedDate :: Lens' UserPoolDescriptionType (Maybe UTCTime)

-- | The name in a user pool description.
userPoolDescriptionType_name :: Lens' UserPoolDescriptionType (Maybe Text)

-- | The ID in a user pool description.
userPoolDescriptionType_id :: Lens' UserPoolDescriptionType (Maybe Text)

-- | The date the user pool description was created.
userPoolDescriptionType_creationDate :: Lens' UserPoolDescriptionType (Maybe UTCTime)

-- | The Lambda configuration information in a user pool description.
userPoolDescriptionType_lambdaConfig :: Lens' UserPoolDescriptionType (Maybe LambdaConfigType)

-- | The policy associated with a user pool.
--   
--   <i>See:</i> <a>newUserPoolPolicyType</a> smart constructor.
data UserPoolPolicyType
UserPoolPolicyType' :: Maybe PasswordPolicyType -> UserPoolPolicyType

-- | The password policy.
[$sel:passwordPolicy:UserPoolPolicyType'] :: UserPoolPolicyType -> Maybe PasswordPolicyType

-- | Create a value of <a>UserPoolPolicyType</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:passwordPolicy:UserPoolPolicyType'</a>,
--   <a>userPoolPolicyType_passwordPolicy</a> - The password policy.
newUserPoolPolicyType :: UserPoolPolicyType

-- | The password policy.
userPoolPolicyType_passwordPolicy :: Lens' UserPoolPolicyType (Maybe PasswordPolicyType)

-- | A container for information about the user pool.
--   
--   <i>See:</i> <a>newUserPoolType</a> smart constructor.
data UserPoolType
UserPoolType' :: Maybe StatusType -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe POSIX -> Maybe VerificationMessageTemplateType -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe UserPoolAddOnsType -> Maybe (NonEmpty SchemaAttributeType) -> Maybe Text -> Maybe [UsernameAttributeType] -> Maybe [AliasAttributeType] -> Maybe AccountRecoverySettingType -> Maybe EmailConfigurationType -> Maybe Text -> Maybe Text -> Maybe UserPoolMfaType -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe LambdaConfigType -> Maybe SmsConfigurationType -> Maybe AdminCreateUserConfigType -> Maybe DeviceConfigurationType -> Maybe [VerifiedAttributeType] -> Maybe UserPoolPolicyType -> Maybe UsernameConfigurationType -> UserPoolType

-- | The status of a user pool.
[$sel:status:UserPoolType'] :: UserPoolType -> Maybe StatusType

-- | The tags that are assigned to the user pool. A tag is a label that you
--   can apply to user pools to categorize and manage them in different
--   ways, such as by purpose, owner, environment, or other criteria.
[$sel:userPoolTags:UserPoolType'] :: UserPoolType -> Maybe (HashMap Text Text)

-- | The reason why the email configuration cannot send the messages to
--   your users.
[$sel:emailConfigurationFailure:UserPoolType'] :: UserPoolType -> Maybe Text

-- | The date the user pool was last modified.
[$sel:lastModifiedDate:UserPoolType'] :: UserPoolType -> Maybe POSIX

-- | The template for verification messages.
[$sel:verificationMessageTemplate:UserPoolType'] :: UserPoolType -> Maybe VerificationMessageTemplateType

-- | A number estimating the size of the user pool.
[$sel:estimatedNumberOfUsers:UserPoolType'] :: UserPoolType -> Maybe Int

-- | The Amazon Resource Name (ARN) for the user pool.
[$sel:arn:UserPoolType'] :: UserPoolType -> Maybe Text

-- | Holds the domain prefix if the user pool has a domain associated with
--   it.
[$sel:domain:UserPoolType'] :: UserPoolType -> Maybe Text

-- | A custom domain name that you provide to Amazon Cognito. This
--   parameter applies only if you use a custom domain to host the sign-up
--   and sign-in pages for your application. For example:
--   <tt>auth.example.com</tt>.
--   
--   For more information about adding a custom domain to your user pool,
--   see <a>Using Your Own Domain for the Hosted UI</a>.
[$sel:customDomain:UserPoolType'] :: UserPoolType -> Maybe Text

-- | The contents of the email verification message.
[$sel:emailVerificationMessage:UserPoolType'] :: UserPoolType -> Maybe Text

-- | The contents of the SMS authentication message.
[$sel:smsAuthenticationMessage:UserPoolType'] :: UserPoolType -> Maybe Text

-- | The user pool add-ons.
[$sel:userPoolAddOns:UserPoolType'] :: UserPoolType -> Maybe UserPoolAddOnsType

-- | A container with the schema attributes of a user pool.
[$sel:schemaAttributes:UserPoolType'] :: UserPoolType -> Maybe (NonEmpty SchemaAttributeType)

-- | The subject of the email verification message.
[$sel:emailVerificationSubject:UserPoolType'] :: UserPoolType -> Maybe Text

-- | Specifies whether email addresses or phone numbers can be specified as
--   usernames when a user signs up.
[$sel:usernameAttributes:UserPoolType'] :: UserPoolType -> Maybe [UsernameAttributeType]

-- | Specifies the attributes that are aliased in a user pool.
[$sel:aliasAttributes:UserPoolType'] :: UserPoolType -> Maybe [AliasAttributeType]

-- | Use this setting to define which verified available method a user can
--   use to recover their password when they call <tt>ForgotPassword</tt>.
--   It allows you to define a preferred method when a user has more than
--   one method available. With this setting, SMS does not qualify for a
--   valid password recovery mechanism if the user also has SMS MFA
--   enabled. In the absence of this setting, Cognito uses the legacy
--   behavior to determine the recovery method where SMS is preferred over
--   email.
[$sel:accountRecoverySetting:UserPoolType'] :: UserPoolType -> Maybe AccountRecoverySettingType

-- | The email configuration.
[$sel:emailConfiguration:UserPoolType'] :: UserPoolType -> Maybe EmailConfigurationType

-- | The contents of the SMS verification message.
[$sel:smsVerificationMessage:UserPoolType'] :: UserPoolType -> Maybe Text

-- | The name of the user pool.
[$sel:name:UserPoolType'] :: UserPoolType -> Maybe Text

-- | Can be one of the following values:
--   
--   <ul>
--   <li><tt>OFF</tt> - MFA tokens are not required and cannot be specified
--   during user registration.</li>
--   <li><tt>ON</tt> - MFA tokens are required for all user registrations.
--   You can only specify required when you are initially creating a user
--   pool.</li>
--   <li><tt>OPTIONAL</tt> - Users have the option when registering to
--   create an MFA token.</li>
--   </ul>
[$sel:mfaConfiguration:UserPoolType'] :: UserPoolType -> Maybe UserPoolMfaType

-- | The ID of the user pool.
[$sel:id:UserPoolType'] :: UserPoolType -> Maybe Text

-- | The reason why the SMS configuration cannot send the messages to your
--   users.
--   
--   This message might include comma-separated values to describe why your
--   SMS configuration can't send messages to user pool end users.
--   
--   <ul>
--   <li>InvalidSmsRoleAccessPolicyException - The IAM role which Cognito
--   uses to send SMS messages is not properly configured. For more
--   information, see <a>SmsConfigurationType</a>.</li>
--   <li>SNSSandbox - The account is in SNS Sandbox and messages won’t
--   reach unverified end users. This parameter won’t get populated with
--   SNSSandbox if the IAM user creating the user pool doesn’t have SNS
--   permissions. To learn how to move your account out of the sandbox, see
--   <a>Moving out of the SMS sandbox</a>.</li>
--   </ul>
[$sel:smsConfigurationFailure:UserPoolType'] :: UserPoolType -> Maybe Text

-- | The date the user pool was created.
[$sel:creationDate:UserPoolType'] :: UserPoolType -> Maybe POSIX

-- | The Lambda triggers associated with the user pool.
[$sel:lambdaConfig:UserPoolType'] :: UserPoolType -> Maybe LambdaConfigType

-- | The SMS configuration.
[$sel:smsConfiguration:UserPoolType'] :: UserPoolType -> Maybe SmsConfigurationType

-- | The configuration for <tt>AdminCreateUser</tt> requests.
[$sel:adminCreateUserConfig:UserPoolType'] :: UserPoolType -> Maybe AdminCreateUserConfigType

-- | The device configuration.
[$sel:deviceConfiguration:UserPoolType'] :: UserPoolType -> Maybe DeviceConfigurationType

-- | Specifies the attributes that are auto-verified in a user pool.
[$sel:autoVerifiedAttributes:UserPoolType'] :: UserPoolType -> Maybe [VerifiedAttributeType]

-- | The policies associated with the user pool.
[$sel:policies:UserPoolType'] :: UserPoolType -> Maybe UserPoolPolicyType

-- | You can choose to enable case sensitivity on the username input for
--   the selected sign-in option. For example, when this is set to
--   <tt>False</tt>, users will be able to sign in using either "username"
--   or "Username". This configuration is immutable once it has been set.
--   For more information, see <a>UsernameConfigurationType</a>.
[$sel:usernameConfiguration:UserPoolType'] :: UserPoolType -> Maybe UsernameConfigurationType

-- | Create a value of <a>UserPoolType</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:UserPoolType'</a>, <a>userPoolType_status</a> - The
--   status of a user pool.
--   
--   <a>$sel:userPoolTags:UserPoolType'</a>,
--   <a>userPoolType_userPoolTags</a> - The tags that are assigned to the
--   user pool. A tag is a label that you can apply to user pools to
--   categorize and manage them in different ways, such as by purpose,
--   owner, environment, or other criteria.
--   
--   <a>$sel:emailConfigurationFailure:UserPoolType'</a>,
--   <a>userPoolType_emailConfigurationFailure</a> - The reason why the
--   email configuration cannot send the messages to your users.
--   
--   <a>$sel:lastModifiedDate:UserPoolType'</a>,
--   <a>userPoolType_lastModifiedDate</a> - The date the user pool was last
--   modified.
--   
--   <a>$sel:verificationMessageTemplate:UserPoolType'</a>,
--   <a>userPoolType_verificationMessageTemplate</a> - The template for
--   verification messages.
--   
--   <a>$sel:estimatedNumberOfUsers:UserPoolType'</a>,
--   <a>userPoolType_estimatedNumberOfUsers</a> - A number estimating the
--   size of the user pool.
--   
--   <a>$sel:arn:UserPoolType'</a>, <a>userPoolType_arn</a> - The Amazon
--   Resource Name (ARN) for the user pool.
--   
--   <a>$sel:domain:UserPoolType'</a>, <a>userPoolType_domain</a> - Holds
--   the domain prefix if the user pool has a domain associated with it.
--   
--   <a>$sel:customDomain:UserPoolType'</a>,
--   <a>userPoolType_customDomain</a> - A custom domain name that you
--   provide to Amazon Cognito. This parameter applies only if you use a
--   custom domain to host the sign-up and sign-in pages for your
--   application. For example: <tt>auth.example.com</tt>.
--   
--   For more information about adding a custom domain to your user pool,
--   see <a>Using Your Own Domain for the Hosted UI</a>.
--   
--   <a>$sel:emailVerificationMessage:UserPoolType'</a>,
--   <a>userPoolType_emailVerificationMessage</a> - The contents of the
--   email verification message.
--   
--   <a>$sel:smsAuthenticationMessage:UserPoolType'</a>,
--   <a>userPoolType_smsAuthenticationMessage</a> - The contents of the SMS
--   authentication message.
--   
--   <a>$sel:userPoolAddOns:UserPoolType'</a>,
--   <a>userPoolType_userPoolAddOns</a> - The user pool add-ons.
--   
--   <a>$sel:schemaAttributes:UserPoolType'</a>,
--   <a>userPoolType_schemaAttributes</a> - A container with the schema
--   attributes of a user pool.
--   
--   <a>$sel:emailVerificationSubject:UserPoolType'</a>,
--   <a>userPoolType_emailVerificationSubject</a> - The subject of the
--   email verification message.
--   
--   <a>$sel:usernameAttributes:UserPoolType'</a>,
--   <a>userPoolType_usernameAttributes</a> - Specifies whether email
--   addresses or phone numbers can be specified as usernames when a user
--   signs up.
--   
--   <a>$sel:aliasAttributes:UserPoolType'</a>,
--   <a>userPoolType_aliasAttributes</a> - Specifies the attributes that
--   are aliased in a user pool.
--   
--   <a>$sel:accountRecoverySetting:UserPoolType'</a>,
--   <a>userPoolType_accountRecoverySetting</a> - Use this setting to
--   define which verified available method a user can use to recover their
--   password when they call <tt>ForgotPassword</tt>. It allows you to
--   define a preferred method when a user has more than one method
--   available. With this setting, SMS does not qualify for a valid
--   password recovery mechanism if the user also has SMS MFA enabled. In
--   the absence of this setting, Cognito uses the legacy behavior to
--   determine the recovery method where SMS is preferred over email.
--   
--   <a>$sel:emailConfiguration:UserPoolType'</a>,
--   <a>userPoolType_emailConfiguration</a> - The email configuration.
--   
--   <a>$sel:smsVerificationMessage:UserPoolType'</a>,
--   <a>userPoolType_smsVerificationMessage</a> - The contents of the SMS
--   verification message.
--   
--   <a>$sel:name:UserPoolType'</a>, <a>userPoolType_name</a> - The name of
--   the user pool.
--   
--   <a>$sel:mfaConfiguration:UserPoolType'</a>,
--   <a>userPoolType_mfaConfiguration</a> - Can be one of the following
--   values:
--   
--   <ul>
--   <li><tt>OFF</tt> - MFA tokens are not required and cannot be specified
--   during user registration.</li>
--   <li><tt>ON</tt> - MFA tokens are required for all user registrations.
--   You can only specify required when you are initially creating a user
--   pool.</li>
--   <li><tt>OPTIONAL</tt> - Users have the option when registering to
--   create an MFA token.</li>
--   </ul>
--   
--   <a>$sel:id:UserPoolType'</a>, <a>userPoolType_id</a> - The ID of the
--   user pool.
--   
--   <a>$sel:smsConfigurationFailure:UserPoolType'</a>,
--   <a>userPoolType_smsConfigurationFailure</a> - The reason why the SMS
--   configuration cannot send the messages to your users.
--   
--   This message might include comma-separated values to describe why your
--   SMS configuration can't send messages to user pool end users.
--   
--   <ul>
--   <li>InvalidSmsRoleAccessPolicyException - The IAM role which Cognito
--   uses to send SMS messages is not properly configured. For more
--   information, see <a>SmsConfigurationType</a>.</li>
--   <li>SNSSandbox - The account is in SNS Sandbox and messages won’t
--   reach unverified end users. This parameter won’t get populated with
--   SNSSandbox if the IAM user creating the user pool doesn’t have SNS
--   permissions. To learn how to move your account out of the sandbox, see
--   <a>Moving out of the SMS sandbox</a>.</li>
--   </ul>
--   
--   <a>$sel:creationDate:UserPoolType'</a>,
--   <a>userPoolType_creationDate</a> - The date the user pool was created.
--   
--   <a>$sel:lambdaConfig:UserPoolType'</a>,
--   <a>userPoolType_lambdaConfig</a> - The Lambda triggers associated with
--   the user pool.
--   
--   <a>$sel:smsConfiguration:UserPoolType'</a>,
--   <a>userPoolType_smsConfiguration</a> - The SMS configuration.
--   
--   <a>$sel:adminCreateUserConfig:UserPoolType'</a>,
--   <a>userPoolType_adminCreateUserConfig</a> - The configuration for
--   <tt>AdminCreateUser</tt> requests.
--   
--   <a>$sel:deviceConfiguration:UserPoolType'</a>,
--   <a>userPoolType_deviceConfiguration</a> - The device configuration.
--   
--   <a>$sel:autoVerifiedAttributes:UserPoolType'</a>,
--   <a>userPoolType_autoVerifiedAttributes</a> - Specifies the attributes
--   that are auto-verified in a user pool.
--   
--   <a>$sel:policies:UserPoolType'</a>, <a>userPoolType_policies</a> - The
--   policies associated with the user pool.
--   
--   <a>$sel:usernameConfiguration:UserPoolType'</a>,
--   <a>userPoolType_usernameConfiguration</a> - You can choose to enable
--   case sensitivity on the username input for the selected sign-in
--   option. For example, when this is set to <tt>False</tt>, users will be
--   able to sign in using either "username" or "Username". This
--   configuration is immutable once it has been set. For more information,
--   see <a>UsernameConfigurationType</a>.
newUserPoolType :: UserPoolType

-- | The status of a user pool.
userPoolType_status :: Lens' UserPoolType (Maybe StatusType)

-- | The tags that are assigned to the user pool. A tag is a label that you
--   can apply to user pools to categorize and manage them in different
--   ways, such as by purpose, owner, environment, or other criteria.
userPoolType_userPoolTags :: Lens' UserPoolType (Maybe (HashMap Text Text))

-- | The reason why the email configuration cannot send the messages to
--   your users.
userPoolType_emailConfigurationFailure :: Lens' UserPoolType (Maybe Text)

-- | The date the user pool was last modified.
userPoolType_lastModifiedDate :: Lens' UserPoolType (Maybe UTCTime)

-- | The template for verification messages.
userPoolType_verificationMessageTemplate :: Lens' UserPoolType (Maybe VerificationMessageTemplateType)

-- | A number estimating the size of the user pool.
userPoolType_estimatedNumberOfUsers :: Lens' UserPoolType (Maybe Int)

-- | The Amazon Resource Name (ARN) for the user pool.
userPoolType_arn :: Lens' UserPoolType (Maybe Text)

-- | Holds the domain prefix if the user pool has a domain associated with
--   it.
userPoolType_domain :: Lens' UserPoolType (Maybe Text)

-- | A custom domain name that you provide to Amazon Cognito. This
--   parameter applies only if you use a custom domain to host the sign-up
--   and sign-in pages for your application. For example:
--   <tt>auth.example.com</tt>.
--   
--   For more information about adding a custom domain to your user pool,
--   see <a>Using Your Own Domain for the Hosted UI</a>.
userPoolType_customDomain :: Lens' UserPoolType (Maybe Text)

-- | The contents of the email verification message.
userPoolType_emailVerificationMessage :: Lens' UserPoolType (Maybe Text)

-- | The contents of the SMS authentication message.
userPoolType_smsAuthenticationMessage :: Lens' UserPoolType (Maybe Text)

-- | The user pool add-ons.
userPoolType_userPoolAddOns :: Lens' UserPoolType (Maybe UserPoolAddOnsType)

-- | A container with the schema attributes of a user pool.
userPoolType_schemaAttributes :: Lens' UserPoolType (Maybe (NonEmpty SchemaAttributeType))

-- | The subject of the email verification message.
userPoolType_emailVerificationSubject :: Lens' UserPoolType (Maybe Text)

-- | Specifies whether email addresses or phone numbers can be specified as
--   usernames when a user signs up.
userPoolType_usernameAttributes :: Lens' UserPoolType (Maybe [UsernameAttributeType])

-- | Specifies the attributes that are aliased in a user pool.
userPoolType_aliasAttributes :: Lens' UserPoolType (Maybe [AliasAttributeType])

-- | Use this setting to define which verified available method a user can
--   use to recover their password when they call <tt>ForgotPassword</tt>.
--   It allows you to define a preferred method when a user has more than
--   one method available. With this setting, SMS does not qualify for a
--   valid password recovery mechanism if the user also has SMS MFA
--   enabled. In the absence of this setting, Cognito uses the legacy
--   behavior to determine the recovery method where SMS is preferred over
--   email.
userPoolType_accountRecoverySetting :: Lens' UserPoolType (Maybe AccountRecoverySettingType)

-- | The email configuration.
userPoolType_emailConfiguration :: Lens' UserPoolType (Maybe EmailConfigurationType)

-- | The contents of the SMS verification message.
userPoolType_smsVerificationMessage :: Lens' UserPoolType (Maybe Text)

-- | The name of the user pool.
userPoolType_name :: Lens' UserPoolType (Maybe Text)

-- | Can be one of the following values:
--   
--   <ul>
--   <li><tt>OFF</tt> - MFA tokens are not required and cannot be specified
--   during user registration.</li>
--   <li><tt>ON</tt> - MFA tokens are required for all user registrations.
--   You can only specify required when you are initially creating a user
--   pool.</li>
--   <li><tt>OPTIONAL</tt> - Users have the option when registering to
--   create an MFA token.</li>
--   </ul>
userPoolType_mfaConfiguration :: Lens' UserPoolType (Maybe UserPoolMfaType)

-- | The ID of the user pool.
userPoolType_id :: Lens' UserPoolType (Maybe Text)

-- | The reason why the SMS configuration cannot send the messages to your
--   users.
--   
--   This message might include comma-separated values to describe why your
--   SMS configuration can't send messages to user pool end users.
--   
--   <ul>
--   <li>InvalidSmsRoleAccessPolicyException - The IAM role which Cognito
--   uses to send SMS messages is not properly configured. For more
--   information, see <a>SmsConfigurationType</a>.</li>
--   <li>SNSSandbox - The account is in SNS Sandbox and messages won’t
--   reach unverified end users. This parameter won’t get populated with
--   SNSSandbox if the IAM user creating the user pool doesn’t have SNS
--   permissions. To learn how to move your account out of the sandbox, see
--   <a>Moving out of the SMS sandbox</a>.</li>
--   </ul>
userPoolType_smsConfigurationFailure :: Lens' UserPoolType (Maybe Text)

-- | The date the user pool was created.
userPoolType_creationDate :: Lens' UserPoolType (Maybe UTCTime)

-- | The Lambda triggers associated with the user pool.
userPoolType_lambdaConfig :: Lens' UserPoolType (Maybe LambdaConfigType)

-- | The SMS configuration.
userPoolType_smsConfiguration :: Lens' UserPoolType (Maybe SmsConfigurationType)

-- | The configuration for <tt>AdminCreateUser</tt> requests.
userPoolType_adminCreateUserConfig :: Lens' UserPoolType (Maybe AdminCreateUserConfigType)

-- | The device configuration.
userPoolType_deviceConfiguration :: Lens' UserPoolType (Maybe DeviceConfigurationType)

-- | Specifies the attributes that are auto-verified in a user pool.
userPoolType_autoVerifiedAttributes :: Lens' UserPoolType (Maybe [VerifiedAttributeType])

-- | The policies associated with the user pool.
userPoolType_policies :: Lens' UserPoolType (Maybe UserPoolPolicyType)

-- | You can choose to enable case sensitivity on the username input for
--   the selected sign-in option. For example, when this is set to
--   <tt>False</tt>, users will be able to sign in using either "username"
--   or "Username". This configuration is immutable once it has been set.
--   For more information, see <a>UsernameConfigurationType</a>.
userPoolType_usernameConfiguration :: Lens' UserPoolType (Maybe UsernameConfigurationType)

-- | The user type.
--   
--   <i>See:</i> <a>newUserType</a> smart constructor.
data UserType
UserType' :: Maybe Bool -> Maybe UserStatusType -> Maybe (Sensitive Text) -> Maybe POSIX -> Maybe [AttributeType] -> Maybe [MFAOptionType] -> Maybe POSIX -> UserType

-- | Specifies whether the user is enabled.
[$sel:enabled:UserType'] :: UserType -> Maybe Bool

-- | The user status. Can be one of the following:
--   
--   <ul>
--   <li>UNCONFIRMED - User has been created but not confirmed.</li>
--   <li>CONFIRMED - User has been confirmed.</li>
--   <li>ARCHIVED - User is no longer active.</li>
--   <li>COMPROMISED - User is disabled due to a potential security
--   threat.</li>
--   <li>UNKNOWN - User status is not known.</li>
--   <li>RESET_REQUIRED - User is confirmed, but the user must request a
--   code and reset his or her password before he or she can sign in.</li>
--   <li>FORCE_CHANGE_PASSWORD - The user is confirmed and the user can
--   sign in using a temporary password, but on first sign-in, the user
--   must change his or her password to a new value before doing anything
--   else.</li>
--   </ul>
[$sel:userStatus:UserType'] :: UserType -> Maybe UserStatusType

-- | The user name of the user you wish to describe.
[$sel:username:UserType'] :: UserType -> Maybe (Sensitive Text)

-- | The creation date of the user.
[$sel:userCreateDate:UserType'] :: UserType -> Maybe POSIX

-- | A container with information about the user type attributes.
[$sel:attributes:UserType'] :: UserType -> Maybe [AttributeType]

-- | The MFA options for the user.
[$sel:mfaOptions:UserType'] :: UserType -> Maybe [MFAOptionType]

-- | The last modified date of the user.
[$sel:userLastModifiedDate:UserType'] :: UserType -> Maybe POSIX

-- | Create a value of <a>UserType</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:enabled:UserType'</a>, <a>userType_enabled</a> - Specifies
--   whether the user is enabled.
--   
--   <a>$sel:userStatus:UserType'</a>, <a>userType_userStatus</a> - The
--   user status. Can be one of the following:
--   
--   <ul>
--   <li>UNCONFIRMED - User has been created but not confirmed.</li>
--   <li>CONFIRMED - User has been confirmed.</li>
--   <li>ARCHIVED - User is no longer active.</li>
--   <li>COMPROMISED - User is disabled due to a potential security
--   threat.</li>
--   <li>UNKNOWN - User status is not known.</li>
--   <li>RESET_REQUIRED - User is confirmed, but the user must request a
--   code and reset his or her password before he or she can sign in.</li>
--   <li>FORCE_CHANGE_PASSWORD - The user is confirmed and the user can
--   sign in using a temporary password, but on first sign-in, the user
--   must change his or her password to a new value before doing anything
--   else.</li>
--   </ul>
--   
--   <a>$sel:username:UserType'</a>, <a>userType_username</a> - The user
--   name of the user you wish to describe.
--   
--   <a>$sel:userCreateDate:UserType'</a>, <a>userType_userCreateDate</a> -
--   The creation date of the user.
--   
--   <a>$sel:attributes:UserType'</a>, <a>userType_attributes</a> - A
--   container with information about the user type attributes.
--   
--   <a>$sel:mfaOptions:UserType'</a>, <a>userType_mfaOptions</a> - The MFA
--   options for the user.
--   
--   <a>$sel:userLastModifiedDate:UserType'</a>,
--   <a>userType_userLastModifiedDate</a> - The last modified date of the
--   user.
newUserType :: UserType

-- | Specifies whether the user is enabled.
userType_enabled :: Lens' UserType (Maybe Bool)

-- | The user status. Can be one of the following:
--   
--   <ul>
--   <li>UNCONFIRMED - User has been created but not confirmed.</li>
--   <li>CONFIRMED - User has been confirmed.</li>
--   <li>ARCHIVED - User is no longer active.</li>
--   <li>COMPROMISED - User is disabled due to a potential security
--   threat.</li>
--   <li>UNKNOWN - User status is not known.</li>
--   <li>RESET_REQUIRED - User is confirmed, but the user must request a
--   code and reset his or her password before he or she can sign in.</li>
--   <li>FORCE_CHANGE_PASSWORD - The user is confirmed and the user can
--   sign in using a temporary password, but on first sign-in, the user
--   must change his or her password to a new value before doing anything
--   else.</li>
--   </ul>
userType_userStatus :: Lens' UserType (Maybe UserStatusType)

-- | The user name of the user you wish to describe.
userType_username :: Lens' UserType (Maybe Text)

-- | The creation date of the user.
userType_userCreateDate :: Lens' UserType (Maybe UTCTime)

-- | A container with information about the user type attributes.
userType_attributes :: Lens' UserType (Maybe [AttributeType])

-- | The MFA options for the user.
userType_mfaOptions :: Lens' UserType (Maybe [MFAOptionType])

-- | The last modified date of the user.
userType_userLastModifiedDate :: Lens' UserType (Maybe UTCTime)

-- | The username configuration type.
--   
--   <i>See:</i> <a>newUsernameConfigurationType</a> smart constructor.
data UsernameConfigurationType
UsernameConfigurationType' :: Bool -> UsernameConfigurationType

-- | Specifies whether username case sensitivity will be applied for all
--   users in the user pool through Cognito APIs.
--   
--   Valid values include:
--   
--   <ul>
--   <li><b><tt>True</tt></b> : Enables case sensitivity for all username
--   input. When this option is set to <tt>True</tt>, users must sign in
--   using the exact capitalization of their given username. For example,
--   “UserName”. This is the default value.</li>
--   <li><b><tt>False</tt></b> : Enables case insensitivity for all
--   username input. For example, when this option is set to
--   <tt>False</tt>, users will be able to sign in using either "username"
--   or "Username". This option also enables both
--   <tt>preferred_username</tt> and <tt>email</tt> alias to be case
--   insensitive, in addition to the <tt>username</tt> attribute.</li>
--   </ul>
[$sel:caseSensitive:UsernameConfigurationType'] :: UsernameConfigurationType -> Bool

-- | Create a value of <a>UsernameConfigurationType</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:caseSensitive:UsernameConfigurationType'</a>,
--   <a>usernameConfigurationType_caseSensitive</a> - Specifies whether
--   username case sensitivity will be applied for all users in the user
--   pool through Cognito APIs.
--   
--   Valid values include:
--   
--   <ul>
--   <li><b><tt>True</tt></b> : Enables case sensitivity for all username
--   input. When this option is set to <tt>True</tt>, users must sign in
--   using the exact capitalization of their given username. For example,
--   “UserName”. This is the default value.</li>
--   <li><b><tt>False</tt></b> : Enables case insensitivity for all
--   username input. For example, when this option is set to
--   <tt>False</tt>, users will be able to sign in using either "username"
--   or "Username". This option also enables both
--   <tt>preferred_username</tt> and <tt>email</tt> alias to be case
--   insensitive, in addition to the <tt>username</tt> attribute.</li>
--   </ul>
newUsernameConfigurationType :: Bool -> UsernameConfigurationType

-- | Specifies whether username case sensitivity will be applied for all
--   users in the user pool through Cognito APIs.
--   
--   Valid values include:
--   
--   <ul>
--   <li><b><tt>True</tt></b> : Enables case sensitivity for all username
--   input. When this option is set to <tt>True</tt>, users must sign in
--   using the exact capitalization of their given username. For example,
--   “UserName”. This is the default value.</li>
--   <li><b><tt>False</tt></b> : Enables case insensitivity for all
--   username input. For example, when this option is set to
--   <tt>False</tt>, users will be able to sign in using either "username"
--   or "Username". This option also enables both
--   <tt>preferred_username</tt> and <tt>email</tt> alias to be case
--   insensitive, in addition to the <tt>username</tt> attribute.</li>
--   </ul>
usernameConfigurationType_caseSensitive :: Lens' UsernameConfigurationType Bool

-- | The template for verification messages.
--   
--   <i>See:</i> <a>newVerificationMessageTemplateType</a> smart
--   constructor.
data VerificationMessageTemplateType
VerificationMessageTemplateType' :: Maybe DefaultEmailOptionType -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> VerificationMessageTemplateType

-- | The default email option.
[$sel:defaultEmailOption:VerificationMessageTemplateType'] :: VerificationMessageTemplateType -> Maybe DefaultEmailOptionType

-- | The subject line for the email message template. EmailSubject is
--   allowed only if <a>EmailSendingAccount</a> is DEVELOPER.
[$sel:emailSubject:VerificationMessageTemplateType'] :: VerificationMessageTemplateType -> Maybe Text

-- | The subject line for the email message template for sending a
--   confirmation link to the user. EmailSubjectByLink is allowed only
--   <a>EmailSendingAccount</a> is DEVELOPER.
[$sel:emailSubjectByLink:VerificationMessageTemplateType'] :: VerificationMessageTemplateType -> Maybe Text

-- | The SMS message template.
[$sel:smsMessage:VerificationMessageTemplateType'] :: VerificationMessageTemplateType -> Maybe Text

-- | The email message template for sending a confirmation link to the
--   user. EmailMessageByLink is allowed only if <a>EmailSendingAccount</a>
--   is DEVELOPER.
[$sel:emailMessageByLink:VerificationMessageTemplateType'] :: VerificationMessageTemplateType -> Maybe Text

-- | The email message template. EmailMessage is allowed only if
--   <a>EmailSendingAccount</a> is DEVELOPER.
[$sel:emailMessage:VerificationMessageTemplateType'] :: VerificationMessageTemplateType -> Maybe Text

-- | Create a value of <a>VerificationMessageTemplateType</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:defaultEmailOption:VerificationMessageTemplateType'</a>,
--   <a>verificationMessageTemplateType_defaultEmailOption</a> - The
--   default email option.
--   
--   <a>$sel:emailSubject:VerificationMessageTemplateType'</a>,
--   <a>verificationMessageTemplateType_emailSubject</a> - The subject line
--   for the email message template. EmailSubject is allowed only if
--   <a>EmailSendingAccount</a> is DEVELOPER.
--   
--   <a>$sel:emailSubjectByLink:VerificationMessageTemplateType'</a>,
--   <a>verificationMessageTemplateType_emailSubjectByLink</a> - The
--   subject line for the email message template for sending a confirmation
--   link to the user. EmailSubjectByLink is allowed only
--   <a>EmailSendingAccount</a> is DEVELOPER.
--   
--   <a>$sel:smsMessage:VerificationMessageTemplateType'</a>,
--   <a>verificationMessageTemplateType_smsMessage</a> - The SMS message
--   template.
--   
--   <a>$sel:emailMessageByLink:VerificationMessageTemplateType'</a>,
--   <a>verificationMessageTemplateType_emailMessageByLink</a> - The email
--   message template for sending a confirmation link to the user.
--   EmailMessageByLink is allowed only if <a>EmailSendingAccount</a> is
--   DEVELOPER.
--   
--   <a>$sel:emailMessage:VerificationMessageTemplateType'</a>,
--   <a>verificationMessageTemplateType_emailMessage</a> - The email
--   message template. EmailMessage is allowed only if
--   <a>EmailSendingAccount</a> is DEVELOPER.
newVerificationMessageTemplateType :: VerificationMessageTemplateType

-- | The default email option.
verificationMessageTemplateType_defaultEmailOption :: Lens' VerificationMessageTemplateType (Maybe DefaultEmailOptionType)

-- | The subject line for the email message template. EmailSubject is
--   allowed only if <a>EmailSendingAccount</a> is DEVELOPER.
verificationMessageTemplateType_emailSubject :: Lens' VerificationMessageTemplateType (Maybe Text)

-- | The subject line for the email message template for sending a
--   confirmation link to the user. EmailSubjectByLink is allowed only
--   <a>EmailSendingAccount</a> is DEVELOPER.
verificationMessageTemplateType_emailSubjectByLink :: Lens' VerificationMessageTemplateType (Maybe Text)

-- | The SMS message template.
verificationMessageTemplateType_smsMessage :: Lens' VerificationMessageTemplateType (Maybe Text)

-- | The email message template for sending a confirmation link to the
--   user. EmailMessageByLink is allowed only if <a>EmailSendingAccount</a>
--   is DEVELOPER.
verificationMessageTemplateType_emailMessageByLink :: Lens' VerificationMessageTemplateType (Maybe Text)

-- | The email message template. EmailMessage is allowed only if
--   <a>EmailSendingAccount</a> is DEVELOPER.
verificationMessageTemplateType_emailMessage :: Lens' VerificationMessageTemplateType (Maybe Text)


-- | Assigns a set of tags to an Amazon Cognito user pool. A tag is a label
--   that you can use to categorize and manage user pools in different
--   ways, such as by purpose, owner, environment, or other criteria.
--   
--   Each tag consists of a key and value, both of which you define. A key
--   is a general category for more specific values. For example, if you
--   have two versions of a user pool, one for testing and another for
--   production, you might assign an <tt>Environment</tt> tag key to both
--   user pools. The value of this key might be <tt>Test</tt> for one user
--   pool and <tt>Production</tt> for the other.
--   
--   Tags are useful for cost tracking and access control. You can activate
--   your tags so that they appear on the Billing and Cost Management
--   console, where you can track the costs associated with your user
--   pools. In an IAM policy, you can constrain permissions for user pools
--   based on specific tags or tag values.
--   
--   You can use this action up to 5 times per second, per account. A user
--   pool can have as many as 50 tags.
module Network.AWS.CognitoIdentityProvider.TagResource

-- | <i>See:</i> <a>newTagResource</a> smart constructor.
data TagResource
TagResource' :: Text -> HashMap Text Text -> TagResource

-- | The Amazon Resource Name (ARN) of the user pool to assign the tags to.
[$sel:resourceArn:TagResource'] :: TagResource -> Text

-- | The tags to assign to the user pool.
[$sel:tags:TagResource'] :: TagResource -> HashMap Text Text

-- | Create a value of <a>TagResource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:TagResource'</a>, <a>tagResource_resourceArn</a> -
--   The Amazon Resource Name (ARN) of the user pool to assign the tags to.
--   
--   <a>$sel:tags:TagResource'</a>, <a>tagResource_tags</a> - The tags to
--   assign to the user pool.
newTagResource :: Text -> TagResource

-- | The Amazon Resource Name (ARN) of the user pool to assign the tags to.
tagResource_resourceArn :: Lens' TagResource Text

-- | The tags to assign to the user pool.
tagResource_tags :: Lens' TagResource (HashMap Text Text)

-- | <i>See:</i> <a>newTagResourceResponse</a> smart constructor.
data TagResourceResponse
TagResourceResponse' :: Int -> TagResourceResponse

-- | The response's http status code.
[$sel:httpStatus:TagResourceResponse'] :: TagResourceResponse -> Int

-- | Create a value of <a>TagResourceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:TagResourceResponse'</a>,
--   <a>tagResourceResponse_httpStatus</a> - The response's http status
--   code.
newTagResourceResponse :: Int -> TagResourceResponse

-- | The response's http status code.
tagResourceResponse_httpStatus :: Lens' TagResourceResponse Int
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.TagResource.TagResource
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.TagResource.TagResource
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.TagResource.TagResource
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.TagResource.TagResource
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.TagResource.TagResourceResponse
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.TagResource.TagResourceResponse
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.TagResource.TagResourceResponse
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.TagResource.TagResourceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CognitoIdentityProvider.TagResource.TagResource
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.TagResource.TagResourceResponse
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.TagResource.TagResource
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.TagResource.TagResource
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CognitoIdentityProvider.TagResource.TagResource
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.TagResource.TagResource
instance Network.AWS.Data.Path.ToPath Network.AWS.CognitoIdentityProvider.TagResource.TagResource
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentityProvider.TagResource.TagResource


-- | Stops the user import job.
module Network.AWS.CognitoIdentityProvider.StopUserImportJob

-- | Represents the request to stop the user import job.
--   
--   <i>See:</i> <a>newStopUserImportJob</a> smart constructor.
data StopUserImportJob
StopUserImportJob' :: Text -> Text -> StopUserImportJob

-- | The user pool ID for the user pool that the users are being imported
--   into.
[$sel:userPoolId:StopUserImportJob'] :: StopUserImportJob -> Text

-- | The job ID for the user import job.
[$sel:jobId:StopUserImportJob'] :: StopUserImportJob -> Text

-- | Create a value of <a>StopUserImportJob</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userPoolId:StopUserImportJob'</a>,
--   <a>stopUserImportJob_userPoolId</a> - The user pool ID for the user
--   pool that the users are being imported into.
--   
--   <a>$sel:jobId:StopUserImportJob'</a>, <a>stopUserImportJob_jobId</a> -
--   The job ID for the user import job.
newStopUserImportJob :: Text -> Text -> StopUserImportJob

-- | The user pool ID for the user pool that the users are being imported
--   into.
stopUserImportJob_userPoolId :: Lens' StopUserImportJob Text

-- | The job ID for the user import job.
stopUserImportJob_jobId :: Lens' StopUserImportJob Text

-- | Represents the response from the server to the request to stop the
--   user import job.
--   
--   <i>See:</i> <a>newStopUserImportJobResponse</a> smart constructor.
data StopUserImportJobResponse
StopUserImportJobResponse' :: Maybe UserImportJobType -> Int -> StopUserImportJobResponse

-- | The job object that represents the user import job.
[$sel:userImportJob:StopUserImportJobResponse'] :: StopUserImportJobResponse -> Maybe UserImportJobType

-- | The response's http status code.
[$sel:httpStatus:StopUserImportJobResponse'] :: StopUserImportJobResponse -> Int

-- | Create a value of <a>StopUserImportJobResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userImportJob:StopUserImportJobResponse'</a>,
--   <a>stopUserImportJobResponse_userImportJob</a> - The job object that
--   represents the user import job.
--   
--   <a>$sel:httpStatus:StopUserImportJobResponse'</a>,
--   <a>stopUserImportJobResponse_httpStatus</a> - The response's http
--   status code.
newStopUserImportJobResponse :: Int -> StopUserImportJobResponse

-- | The job object that represents the user import job.
stopUserImportJobResponse_userImportJob :: Lens' StopUserImportJobResponse (Maybe UserImportJobType)

-- | The response's http status code.
stopUserImportJobResponse_httpStatus :: Lens' StopUserImportJobResponse Int
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.StopUserImportJob.StopUserImportJob
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.StopUserImportJob.StopUserImportJob
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.StopUserImportJob.StopUserImportJob
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.StopUserImportJob.StopUserImportJob
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.StopUserImportJob.StopUserImportJobResponse
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.StopUserImportJob.StopUserImportJobResponse
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.StopUserImportJob.StopUserImportJobResponse
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.StopUserImportJob.StopUserImportJobResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CognitoIdentityProvider.StopUserImportJob.StopUserImportJob
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.StopUserImportJob.StopUserImportJobResponse
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.StopUserImportJob.StopUserImportJob
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.StopUserImportJob.StopUserImportJob
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CognitoIdentityProvider.StopUserImportJob.StopUserImportJob
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.StopUserImportJob.StopUserImportJob
instance Network.AWS.Data.Path.ToPath Network.AWS.CognitoIdentityProvider.StopUserImportJob.StopUserImportJob
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentityProvider.StopUserImportJob.StopUserImportJob


-- | Starts the user import.
module Network.AWS.CognitoIdentityProvider.StartUserImportJob

-- | Represents the request to start the user import job.
--   
--   <i>See:</i> <a>newStartUserImportJob</a> smart constructor.
data StartUserImportJob
StartUserImportJob' :: Text -> Text -> StartUserImportJob

-- | The user pool ID for the user pool that the users are being imported
--   into.
[$sel:userPoolId:StartUserImportJob'] :: StartUserImportJob -> Text

-- | The job ID for the user import job.
[$sel:jobId:StartUserImportJob'] :: StartUserImportJob -> Text

-- | Create a value of <a>StartUserImportJob</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userPoolId:StartUserImportJob'</a>,
--   <a>startUserImportJob_userPoolId</a> - The user pool ID for the user
--   pool that the users are being imported into.
--   
--   <a>$sel:jobId:StartUserImportJob'</a>, <a>startUserImportJob_jobId</a>
--   - The job ID for the user import job.
newStartUserImportJob :: Text -> Text -> StartUserImportJob

-- | The user pool ID for the user pool that the users are being imported
--   into.
startUserImportJob_userPoolId :: Lens' StartUserImportJob Text

-- | The job ID for the user import job.
startUserImportJob_jobId :: Lens' StartUserImportJob Text

-- | Represents the response from the server to the request to start the
--   user import job.
--   
--   <i>See:</i> <a>newStartUserImportJobResponse</a> smart constructor.
data StartUserImportJobResponse
StartUserImportJobResponse' :: Maybe UserImportJobType -> Int -> StartUserImportJobResponse

-- | The job object that represents the user import job.
[$sel:userImportJob:StartUserImportJobResponse'] :: StartUserImportJobResponse -> Maybe UserImportJobType

-- | The response's http status code.
[$sel:httpStatus:StartUserImportJobResponse'] :: StartUserImportJobResponse -> Int

-- | Create a value of <a>StartUserImportJobResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userImportJob:StartUserImportJobResponse'</a>,
--   <a>startUserImportJobResponse_userImportJob</a> - The job object that
--   represents the user import job.
--   
--   <a>$sel:httpStatus:StartUserImportJobResponse'</a>,
--   <a>startUserImportJobResponse_httpStatus</a> - The response's http
--   status code.
newStartUserImportJobResponse :: Int -> StartUserImportJobResponse

-- | The job object that represents the user import job.
startUserImportJobResponse_userImportJob :: Lens' StartUserImportJobResponse (Maybe UserImportJobType)

-- | The response's http status code.
startUserImportJobResponse_httpStatus :: Lens' StartUserImportJobResponse Int
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.StartUserImportJob.StartUserImportJob
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.StartUserImportJob.StartUserImportJob
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.StartUserImportJob.StartUserImportJob
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.StartUserImportJob.StartUserImportJob
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.StartUserImportJob.StartUserImportJobResponse
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.StartUserImportJob.StartUserImportJobResponse
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.StartUserImportJob.StartUserImportJobResponse
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.StartUserImportJob.StartUserImportJobResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CognitoIdentityProvider.StartUserImportJob.StartUserImportJob
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.StartUserImportJob.StartUserImportJobResponse
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.StartUserImportJob.StartUserImportJob
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.StartUserImportJob.StartUserImportJob
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CognitoIdentityProvider.StartUserImportJob.StartUserImportJob
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.StartUserImportJob.StartUserImportJob
instance Network.AWS.Data.Path.ToPath Network.AWS.CognitoIdentityProvider.StartUserImportJob.StartUserImportJob
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentityProvider.StartUserImportJob.StartUserImportJob


-- | Registers the user in the specified user pool and creates a user name,
--   password, and user attributes.
--   
--   This action might generate an SMS text message. Starting June 1, 2021,
--   U.S. telecom carriers require that you register an origination phone
--   number before you can send SMS messages to U.S. phone numbers. If you
--   use SMS text messages in Amazon Cognito, you must register a phone
--   number with <a>Amazon Pinpoint</a>. Cognito will use the the
--   registered number automatically. Otherwise, Cognito users that must
--   receive SMS messages might be unable to sign up, activate their
--   accounts, or sign in.
--   
--   If you have never used SMS text messages with Amazon Cognito or any
--   other Amazon Web Service, Amazon SNS might place your account in SMS
--   sandbox. In
--   <i>&lt;https:</i><i>docs.aws.amazon.com</i>sns<i>latest</i>dg<i>sns-sms-sandbox.html
--   sandbox mode&gt;</i> , you’ll have limitations, such as sending
--   messages to only verified phone numbers. After testing in the sandbox
--   environment, you can move out of the SMS sandbox and into production.
--   For more information, see <a>SMS message settings for Cognito User
--   Pools</a> in the <i>Amazon Cognito Developer Guide</i>.
module Network.AWS.CognitoIdentityProvider.SignUp

-- | Represents the request to register a user.
--   
--   <i>See:</i> <a>newSignUp</a> smart constructor.
data SignUp
SignUp' :: Maybe (HashMap Text Text) -> Maybe AnalyticsMetadataType -> Maybe UserContextDataType -> Maybe [AttributeType] -> Maybe (Sensitive Text) -> Maybe [AttributeType] -> Sensitive Text -> Sensitive Text -> Sensitive Text -> SignUp

-- | A map of custom key-value pairs that you can provide as input for any
--   custom workflows that this action triggers.
--   
--   You create custom workflows by assigning Lambda functions to user pool
--   triggers. When you use the SignUp API action, Amazon Cognito invokes
--   any functions that are assigned to the following triggers: <i>pre
--   sign-up</i>, <i>custom message</i>, and <i>post confirmation</i>. When
--   Amazon Cognito invokes any of these functions, it passes a JSON
--   payload, which the function receives as input. This payload contains a
--   <tt>clientMetadata</tt> attribute, which provides the data that you
--   assigned to the ClientMetadata parameter in your SignUp request. In
--   your function code in Lambda, you can process the
--   <tt>clientMetadata</tt> value to enhance your workflow for your
--   specific needs.
--   
--   For more information, see <a>Customizing User Pool Workflows with
--   Lambda Triggers</a> in the <i>Amazon Cognito Developer Guide</i>.
--   
--   Take the following limitations into consideration when you use the
--   ClientMetadata parameter:
--   
--   <ul>
--   <li>Amazon Cognito does not store the ClientMetadata value. This data
--   is available only to Lambda triggers that are assigned to a user pool
--   to support custom workflows. If your user pool configuration does not
--   include triggers, the ClientMetadata parameter serves no purpose.</li>
--   <li>Amazon Cognito does not validate the ClientMetadata value.</li>
--   <li>Amazon Cognito does not encrypt the the ClientMetadata value, so
--   don't use it to provide sensitive information.</li>
--   </ul>
[$sel:clientMetadata:SignUp'] :: SignUp -> Maybe (HashMap Text Text)

-- | The Amazon Pinpoint analytics metadata for collecting metrics for
--   <tt>SignUp</tt> calls.
[$sel:analyticsMetadata:SignUp'] :: SignUp -> Maybe AnalyticsMetadataType

-- | Contextual data such as the user's device fingerprint, IP address, or
--   location used for evaluating the risk of an unexpected event by Amazon
--   Cognito advanced security.
[$sel:userContextData:SignUp'] :: SignUp -> Maybe UserContextDataType

-- | An array of name-value pairs representing user attributes.
--   
--   For custom attributes, you must prepend the <tt>custom:</tt> prefix to
--   the attribute name.
[$sel:userAttributes:SignUp'] :: SignUp -> Maybe [AttributeType]

-- | A keyed-hash message authentication code (HMAC) calculated using the
--   secret key of a user pool client and username plus the client ID in
--   the message.
[$sel:secretHash:SignUp'] :: SignUp -> Maybe (Sensitive Text)

-- | The validation data in the request to register a user.
[$sel:validationData:SignUp'] :: SignUp -> Maybe [AttributeType]

-- | The ID of the client associated with the user pool.
[$sel:clientId:SignUp'] :: SignUp -> Sensitive Text

-- | The user name of the user you wish to register.
[$sel:username:SignUp'] :: SignUp -> Sensitive Text

-- | The password of the user you wish to register.
[$sel:password:SignUp'] :: SignUp -> Sensitive Text

-- | Create a value of <a>SignUp</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientMetadata:SignUp'</a>, <a>signUp_clientMetadata</a> - A
--   map of custom key-value pairs that you can provide as input for any
--   custom workflows that this action triggers.
--   
--   You create custom workflows by assigning Lambda functions to user pool
--   triggers. When you use the SignUp API action, Amazon Cognito invokes
--   any functions that are assigned to the following triggers: <i>pre
--   sign-up</i>, <i>custom message</i>, and <i>post confirmation</i>. When
--   Amazon Cognito invokes any of these functions, it passes a JSON
--   payload, which the function receives as input. This payload contains a
--   <tt>clientMetadata</tt> attribute, which provides the data that you
--   assigned to the ClientMetadata parameter in your SignUp request. In
--   your function code in Lambda, you can process the
--   <tt>clientMetadata</tt> value to enhance your workflow for your
--   specific needs.
--   
--   For more information, see <a>Customizing User Pool Workflows with
--   Lambda Triggers</a> in the <i>Amazon Cognito Developer Guide</i>.
--   
--   Take the following limitations into consideration when you use the
--   ClientMetadata parameter:
--   
--   <ul>
--   <li>Amazon Cognito does not store the ClientMetadata value. This data
--   is available only to Lambda triggers that are assigned to a user pool
--   to support custom workflows. If your user pool configuration does not
--   include triggers, the ClientMetadata parameter serves no purpose.</li>
--   <li>Amazon Cognito does not validate the ClientMetadata value.</li>
--   <li>Amazon Cognito does not encrypt the the ClientMetadata value, so
--   don't use it to provide sensitive information.</li>
--   </ul>
--   
--   <a>$sel:analyticsMetadata:SignUp'</a>, <a>signUp_analyticsMetadata</a>
--   - The Amazon Pinpoint analytics metadata for collecting metrics for
--   <tt>SignUp</tt> calls.
--   
--   <a>$sel:userContextData:SignUp'</a>, <a>signUp_userContextData</a> -
--   Contextual data such as the user's device fingerprint, IP address, or
--   location used for evaluating the risk of an unexpected event by Amazon
--   Cognito advanced security.
--   
--   <a>$sel:userAttributes:SignUp'</a>, <a>signUp_userAttributes</a> - An
--   array of name-value pairs representing user attributes.
--   
--   For custom attributes, you must prepend the <tt>custom:</tt> prefix to
--   the attribute name.
--   
--   <a>$sel:secretHash:SignUp'</a>, <a>signUp_secretHash</a> - A
--   keyed-hash message authentication code (HMAC) calculated using the
--   secret key of a user pool client and username plus the client ID in
--   the message.
--   
--   <a>$sel:validationData:SignUp'</a>, <a>signUp_validationData</a> - The
--   validation data in the request to register a user.
--   
--   <a>$sel:clientId:SignUp'</a>, <a>signUp_clientId</a> - The ID of the
--   client associated with the user pool.
--   
--   <a>$sel:username:SignUp'</a>, <a>signUp_username</a> - The user name
--   of the user you wish to register.
--   
--   <a>$sel:password:SignUp'</a>, <a>signUp_password</a> - The password of
--   the user you wish to register.
newSignUp :: Text -> Text -> Text -> SignUp

-- | A map of custom key-value pairs that you can provide as input for any
--   custom workflows that this action triggers.
--   
--   You create custom workflows by assigning Lambda functions to user pool
--   triggers. When you use the SignUp API action, Amazon Cognito invokes
--   any functions that are assigned to the following triggers: <i>pre
--   sign-up</i>, <i>custom message</i>, and <i>post confirmation</i>. When
--   Amazon Cognito invokes any of these functions, it passes a JSON
--   payload, which the function receives as input. This payload contains a
--   <tt>clientMetadata</tt> attribute, which provides the data that you
--   assigned to the ClientMetadata parameter in your SignUp request. In
--   your function code in Lambda, you can process the
--   <tt>clientMetadata</tt> value to enhance your workflow for your
--   specific needs.
--   
--   For more information, see <a>Customizing User Pool Workflows with
--   Lambda Triggers</a> in the <i>Amazon Cognito Developer Guide</i>.
--   
--   Take the following limitations into consideration when you use the
--   ClientMetadata parameter:
--   
--   <ul>
--   <li>Amazon Cognito does not store the ClientMetadata value. This data
--   is available only to Lambda triggers that are assigned to a user pool
--   to support custom workflows. If your user pool configuration does not
--   include triggers, the ClientMetadata parameter serves no purpose.</li>
--   <li>Amazon Cognito does not validate the ClientMetadata value.</li>
--   <li>Amazon Cognito does not encrypt the the ClientMetadata value, so
--   don't use it to provide sensitive information.</li>
--   </ul>
signUp_clientMetadata :: Lens' SignUp (Maybe (HashMap Text Text))

-- | The Amazon Pinpoint analytics metadata for collecting metrics for
--   <tt>SignUp</tt> calls.
signUp_analyticsMetadata :: Lens' SignUp (Maybe AnalyticsMetadataType)

-- | Contextual data such as the user's device fingerprint, IP address, or
--   location used for evaluating the risk of an unexpected event by Amazon
--   Cognito advanced security.
signUp_userContextData :: Lens' SignUp (Maybe UserContextDataType)

-- | An array of name-value pairs representing user attributes.
--   
--   For custom attributes, you must prepend the <tt>custom:</tt> prefix to
--   the attribute name.
signUp_userAttributes :: Lens' SignUp (Maybe [AttributeType])

-- | A keyed-hash message authentication code (HMAC) calculated using the
--   secret key of a user pool client and username plus the client ID in
--   the message.
signUp_secretHash :: Lens' SignUp (Maybe Text)

-- | The validation data in the request to register a user.
signUp_validationData :: Lens' SignUp (Maybe [AttributeType])

-- | The ID of the client associated with the user pool.
signUp_clientId :: Lens' SignUp Text

-- | The user name of the user you wish to register.
signUp_username :: Lens' SignUp Text

-- | The password of the user you wish to register.
signUp_password :: Lens' SignUp Text

-- | The response from the server for a registration request.
--   
--   <i>See:</i> <a>newSignUpResponse</a> smart constructor.
data SignUpResponse
SignUpResponse' :: Maybe CodeDeliveryDetailsType -> Int -> Bool -> Text -> SignUpResponse

-- | The code delivery details returned by the server response to the user
--   registration request.
[$sel:codeDeliveryDetails:SignUpResponse'] :: SignUpResponse -> Maybe CodeDeliveryDetailsType

-- | The response's http status code.
[$sel:httpStatus:SignUpResponse'] :: SignUpResponse -> Int

-- | A response from the server indicating that a user registration has
--   been confirmed.
[$sel:userConfirmed:SignUpResponse'] :: SignUpResponse -> Bool

-- | The UUID of the authenticated user. This is not the same as
--   <tt>username</tt>.
[$sel:userSub:SignUpResponse'] :: SignUpResponse -> Text

-- | Create a value of <a>SignUpResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:codeDeliveryDetails:SignUpResponse'</a>,
--   <a>signUpResponse_codeDeliveryDetails</a> - The code delivery details
--   returned by the server response to the user registration request.
--   
--   <a>$sel:httpStatus:SignUpResponse'</a>,
--   <a>signUpResponse_httpStatus</a> - The response's http status code.
--   
--   <a>$sel:userConfirmed:SignUpResponse'</a>,
--   <a>signUpResponse_userConfirmed</a> - A response from the server
--   indicating that a user registration has been confirmed.
--   
--   <a>$sel:userSub:SignUpResponse'</a>, <a>signUpResponse_userSub</a> -
--   The UUID of the authenticated user. This is not the same as
--   <tt>username</tt>.
newSignUpResponse :: Int -> Bool -> Text -> SignUpResponse

-- | The code delivery details returned by the server response to the user
--   registration request.
signUpResponse_codeDeliveryDetails :: Lens' SignUpResponse (Maybe CodeDeliveryDetailsType)

-- | The response's http status code.
signUpResponse_httpStatus :: Lens' SignUpResponse Int

-- | A response from the server indicating that a user registration has
--   been confirmed.
signUpResponse_userConfirmed :: Lens' SignUpResponse Bool

-- | The UUID of the authenticated user. This is not the same as
--   <tt>username</tt>.
signUpResponse_userSub :: Lens' SignUpResponse Text
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.SignUp.SignUp
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.SignUp.SignUp
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.SignUp.SignUp
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.SignUp.SignUpResponse
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.SignUp.SignUpResponse
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.SignUp.SignUpResponse
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.SignUp.SignUpResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CognitoIdentityProvider.SignUp.SignUp
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.SignUp.SignUpResponse
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.SignUp.SignUp
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.SignUp.SignUp
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CognitoIdentityProvider.SignUp.SignUp
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.SignUp.SignUp
instance Network.AWS.Data.Path.ToPath Network.AWS.CognitoIdentityProvider.SignUp.SignUp
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentityProvider.SignUp.SignUp


-- | <i>This action is no longer supported.</i> You can use it to configure
--   only SMS MFA. You can't use it to configure TOTP software token MFA.
--   To configure either type of MFA, use <a>SetUserMFAPreference</a>
--   instead.
module Network.AWS.CognitoIdentityProvider.SetUserSettings

-- | Represents the request to set user settings.
--   
--   <i>See:</i> <a>newSetUserSettings</a> smart constructor.
data SetUserSettings
SetUserSettings' :: Sensitive Text -> [MFAOptionType] -> SetUserSettings

-- | The access token for the set user settings request.
[$sel:accessToken:SetUserSettings'] :: SetUserSettings -> Sensitive Text

-- | You can use this parameter only to set an SMS configuration that uses
--   SMS for delivery.
[$sel:mfaOptions:SetUserSettings'] :: SetUserSettings -> [MFAOptionType]

-- | Create a value of <a>SetUserSettings</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:accessToken:SetUserSettings'</a>,
--   <a>setUserSettings_accessToken</a> - The access token for the set user
--   settings request.
--   
--   <a>$sel:mfaOptions:SetUserSettings'</a>,
--   <a>setUserSettings_mfaOptions</a> - You can use this parameter only to
--   set an SMS configuration that uses SMS for delivery.
newSetUserSettings :: Text -> SetUserSettings

-- | The access token for the set user settings request.
setUserSettings_accessToken :: Lens' SetUserSettings Text

-- | You can use this parameter only to set an SMS configuration that uses
--   SMS for delivery.
setUserSettings_mfaOptions :: Lens' SetUserSettings [MFAOptionType]

-- | The response from the server for a set user settings request.
--   
--   <i>See:</i> <a>newSetUserSettingsResponse</a> smart constructor.
data SetUserSettingsResponse
SetUserSettingsResponse' :: Int -> SetUserSettingsResponse

-- | The response's http status code.
[$sel:httpStatus:SetUserSettingsResponse'] :: SetUserSettingsResponse -> Int

-- | Create a value of <a>SetUserSettingsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:SetUserSettingsResponse'</a>,
--   <a>setUserSettingsResponse_httpStatus</a> - The response's http status
--   code.
newSetUserSettingsResponse :: Int -> SetUserSettingsResponse

-- | The response's http status code.
setUserSettingsResponse_httpStatus :: Lens' SetUserSettingsResponse Int
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.SetUserSettings.SetUserSettings
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.SetUserSettings.SetUserSettings
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.SetUserSettings.SetUserSettings
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.SetUserSettings.SetUserSettingsResponse
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.SetUserSettings.SetUserSettingsResponse
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.SetUserSettings.SetUserSettingsResponse
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.SetUserSettings.SetUserSettingsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CognitoIdentityProvider.SetUserSettings.SetUserSettings
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.SetUserSettings.SetUserSettingsResponse
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.SetUserSettings.SetUserSettings
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.SetUserSettings.SetUserSettings
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CognitoIdentityProvider.SetUserSettings.SetUserSettings
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.SetUserSettings.SetUserSettings
instance Network.AWS.Data.Path.ToPath Network.AWS.CognitoIdentityProvider.SetUserSettings.SetUserSettings
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentityProvider.SetUserSettings.SetUserSettings


-- | Set the user pool multi-factor authentication (MFA) configuration.
--   
--   This action might generate an SMS text message. Starting June 1, 2021,
--   U.S. telecom carriers require that you register an origination phone
--   number before you can send SMS messages to U.S. phone numbers. If you
--   use SMS text messages in Amazon Cognito, you must register a phone
--   number with <a>Amazon Pinpoint</a>. Cognito will use the the
--   registered number automatically. Otherwise, Cognito users that must
--   receive SMS messages might be unable to sign up, activate their
--   accounts, or sign in.
--   
--   If you have never used SMS text messages with Amazon Cognito or any
--   other Amazon Web Service, Amazon SNS might place your account in SMS
--   sandbox. In
--   <i>&lt;https:</i><i>docs.aws.amazon.com</i>sns<i>latest</i>dg<i>sns-sms-sandbox.html
--   sandbox mode&gt;</i> , you’ll have limitations, such as sending
--   messages to only verified phone numbers. After testing in the sandbox
--   environment, you can move out of the SMS sandbox and into production.
--   For more information, see <a>SMS message settings for Cognito User
--   Pools</a> in the <i>Amazon Cognito Developer Guide</i>.
module Network.AWS.CognitoIdentityProvider.SetUserPoolMfaConfig

-- | <i>See:</i> <a>newSetUserPoolMfaConfig</a> smart constructor.
data SetUserPoolMfaConfig
SetUserPoolMfaConfig' :: Maybe SmsMfaConfigType -> Maybe SoftwareTokenMfaConfigType -> Maybe UserPoolMfaType -> Text -> SetUserPoolMfaConfig

-- | The SMS text message MFA configuration.
[$sel:smsMfaConfiguration:SetUserPoolMfaConfig'] :: SetUserPoolMfaConfig -> Maybe SmsMfaConfigType

-- | The software token MFA configuration.
[$sel:softwareTokenMfaConfiguration:SetUserPoolMfaConfig'] :: SetUserPoolMfaConfig -> Maybe SoftwareTokenMfaConfigType

-- | The MFA configuration. Users who don't have an MFA factor set up won't
--   be able to sign-in if you set the MfaConfiguration value to ‘ON’. See
--   <a>Adding Multi-Factor Authentication (MFA) to a User Pool</a> to
--   learn more. Valid values include:
--   
--   <ul>
--   <li><tt>OFF</tt> MFA will not be used for any users.</li>
--   <li><tt>ON</tt> MFA is required for all users to sign in.</li>
--   <li><tt>OPTIONAL</tt> MFA will be required only for individual users
--   who have an MFA factor enabled.</li>
--   </ul>
[$sel:mfaConfiguration:SetUserPoolMfaConfig'] :: SetUserPoolMfaConfig -> Maybe UserPoolMfaType

-- | The user pool ID.
[$sel:userPoolId:SetUserPoolMfaConfig'] :: SetUserPoolMfaConfig -> Text

-- | Create a value of <a>SetUserPoolMfaConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:smsMfaConfiguration:SetUserPoolMfaConfig'</a>,
--   <a>setUserPoolMfaConfig_smsMfaConfiguration</a> - The SMS text message
--   MFA configuration.
--   
--   <a>$sel:softwareTokenMfaConfiguration:SetUserPoolMfaConfig'</a>,
--   <a>setUserPoolMfaConfig_softwareTokenMfaConfiguration</a> - The
--   software token MFA configuration.
--   
--   <a>$sel:mfaConfiguration:SetUserPoolMfaConfig'</a>,
--   <a>setUserPoolMfaConfig_mfaConfiguration</a> - The MFA configuration.
--   Users who don't have an MFA factor set up won't be able to sign-in if
--   you set the MfaConfiguration value to ‘ON’. See <a>Adding Multi-Factor
--   Authentication (MFA) to a User Pool</a> to learn more. Valid values
--   include:
--   
--   <ul>
--   <li><tt>OFF</tt> MFA will not be used for any users.</li>
--   <li><tt>ON</tt> MFA is required for all users to sign in.</li>
--   <li><tt>OPTIONAL</tt> MFA will be required only for individual users
--   who have an MFA factor enabled.</li>
--   </ul>
--   
--   <a>$sel:userPoolId:SetUserPoolMfaConfig'</a>,
--   <a>setUserPoolMfaConfig_userPoolId</a> - The user pool ID.
newSetUserPoolMfaConfig :: Text -> SetUserPoolMfaConfig

-- | The SMS text message MFA configuration.
setUserPoolMfaConfig_smsMfaConfiguration :: Lens' SetUserPoolMfaConfig (Maybe SmsMfaConfigType)

-- | The software token MFA configuration.
setUserPoolMfaConfig_softwareTokenMfaConfiguration :: Lens' SetUserPoolMfaConfig (Maybe SoftwareTokenMfaConfigType)

-- | The MFA configuration. Users who don't have an MFA factor set up won't
--   be able to sign-in if you set the MfaConfiguration value to ‘ON’. See
--   <a>Adding Multi-Factor Authentication (MFA) to a User Pool</a> to
--   learn more. Valid values include:
--   
--   <ul>
--   <li><tt>OFF</tt> MFA will not be used for any users.</li>
--   <li><tt>ON</tt> MFA is required for all users to sign in.</li>
--   <li><tt>OPTIONAL</tt> MFA will be required only for individual users
--   who have an MFA factor enabled.</li>
--   </ul>
setUserPoolMfaConfig_mfaConfiguration :: Lens' SetUserPoolMfaConfig (Maybe UserPoolMfaType)

-- | The user pool ID.
setUserPoolMfaConfig_userPoolId :: Lens' SetUserPoolMfaConfig Text

-- | <i>See:</i> <a>newSetUserPoolMfaConfigResponse</a> smart constructor.
data SetUserPoolMfaConfigResponse
SetUserPoolMfaConfigResponse' :: Maybe SmsMfaConfigType -> Maybe SoftwareTokenMfaConfigType -> Maybe UserPoolMfaType -> Int -> SetUserPoolMfaConfigResponse

-- | The SMS text message MFA configuration.
[$sel:smsMfaConfiguration:SetUserPoolMfaConfigResponse'] :: SetUserPoolMfaConfigResponse -> Maybe SmsMfaConfigType

-- | The software token MFA configuration.
[$sel:softwareTokenMfaConfiguration:SetUserPoolMfaConfigResponse'] :: SetUserPoolMfaConfigResponse -> Maybe SoftwareTokenMfaConfigType

-- | The MFA configuration. Valid values include:
--   
--   <ul>
--   <li><tt>OFF</tt> MFA will not be used for any users.</li>
--   <li><tt>ON</tt> MFA is required for all users to sign in.</li>
--   <li><tt>OPTIONAL</tt> MFA will be required only for individual users
--   who have an MFA factor enabled.</li>
--   </ul>
[$sel:mfaConfiguration:SetUserPoolMfaConfigResponse'] :: SetUserPoolMfaConfigResponse -> Maybe UserPoolMfaType

-- | The response's http status code.
[$sel:httpStatus:SetUserPoolMfaConfigResponse'] :: SetUserPoolMfaConfigResponse -> Int

-- | Create a value of <a>SetUserPoolMfaConfigResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:smsMfaConfiguration:SetUserPoolMfaConfig'</a>,
--   <a>setUserPoolMfaConfigResponse_smsMfaConfiguration</a> - The SMS text
--   message MFA configuration.
--   
--   <a>$sel:softwareTokenMfaConfiguration:SetUserPoolMfaConfig'</a>,
--   <a>setUserPoolMfaConfigResponse_softwareTokenMfaConfiguration</a> -
--   The software token MFA configuration.
--   
--   <a>$sel:mfaConfiguration:SetUserPoolMfaConfig'</a>,
--   <a>setUserPoolMfaConfigResponse_mfaConfiguration</a> - The MFA
--   configuration. Valid values include:
--   
--   <ul>
--   <li><tt>OFF</tt> MFA will not be used for any users.</li>
--   <li><tt>ON</tt> MFA is required for all users to sign in.</li>
--   <li><tt>OPTIONAL</tt> MFA will be required only for individual users
--   who have an MFA factor enabled.</li>
--   </ul>
--   
--   <a>$sel:httpStatus:SetUserPoolMfaConfigResponse'</a>,
--   <a>setUserPoolMfaConfigResponse_httpStatus</a> - The response's http
--   status code.
newSetUserPoolMfaConfigResponse :: Int -> SetUserPoolMfaConfigResponse

-- | The SMS text message MFA configuration.
setUserPoolMfaConfigResponse_smsMfaConfiguration :: Lens' SetUserPoolMfaConfigResponse (Maybe SmsMfaConfigType)

-- | The software token MFA configuration.
setUserPoolMfaConfigResponse_softwareTokenMfaConfiguration :: Lens' SetUserPoolMfaConfigResponse (Maybe SoftwareTokenMfaConfigType)

-- | The MFA configuration. Valid values include:
--   
--   <ul>
--   <li><tt>OFF</tt> MFA will not be used for any users.</li>
--   <li><tt>ON</tt> MFA is required for all users to sign in.</li>
--   <li><tt>OPTIONAL</tt> MFA will be required only for individual users
--   who have an MFA factor enabled.</li>
--   </ul>
setUserPoolMfaConfigResponse_mfaConfiguration :: Lens' SetUserPoolMfaConfigResponse (Maybe UserPoolMfaType)

-- | The response's http status code.
setUserPoolMfaConfigResponse_httpStatus :: Lens' SetUserPoolMfaConfigResponse Int
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.SetUserPoolMfaConfig.SetUserPoolMfaConfig
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.SetUserPoolMfaConfig.SetUserPoolMfaConfig
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.SetUserPoolMfaConfig.SetUserPoolMfaConfig
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.SetUserPoolMfaConfig.SetUserPoolMfaConfig
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.SetUserPoolMfaConfig.SetUserPoolMfaConfigResponse
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.SetUserPoolMfaConfig.SetUserPoolMfaConfigResponse
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.SetUserPoolMfaConfig.SetUserPoolMfaConfigResponse
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.SetUserPoolMfaConfig.SetUserPoolMfaConfigResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CognitoIdentityProvider.SetUserPoolMfaConfig.SetUserPoolMfaConfig
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.SetUserPoolMfaConfig.SetUserPoolMfaConfigResponse
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.SetUserPoolMfaConfig.SetUserPoolMfaConfig
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.SetUserPoolMfaConfig.SetUserPoolMfaConfig
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CognitoIdentityProvider.SetUserPoolMfaConfig.SetUserPoolMfaConfig
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.SetUserPoolMfaConfig.SetUserPoolMfaConfig
instance Network.AWS.Data.Path.ToPath Network.AWS.CognitoIdentityProvider.SetUserPoolMfaConfig.SetUserPoolMfaConfig
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentityProvider.SetUserPoolMfaConfig.SetUserPoolMfaConfig


-- | Set the user's multi-factor authentication (MFA) method preference,
--   including which MFA factors are enabled and if any are preferred. Only
--   one factor can be set as preferred. The preferred MFA factor will be
--   used to authenticate a user if multiple factors are enabled. If
--   multiple options are enabled and no preference is set, a challenge to
--   choose an MFA option will be returned during sign in. If an MFA type
--   is enabled for a user, the user will be prompted for MFA during all
--   sign in attempts, unless device tracking is turned on and the device
--   has been trusted. If you would like MFA to be applied selectively
--   based on the assessed risk level of sign in attempts, disable MFA for
--   users and turn on Adaptive Authentication for the user pool.
module Network.AWS.CognitoIdentityProvider.SetUserMFAPreference

-- | <i>See:</i> <a>newSetUserMFAPreference</a> smart constructor.
data SetUserMFAPreference
SetUserMFAPreference' :: Maybe SMSMfaSettingsType -> Maybe SoftwareTokenMfaSettingsType -> Sensitive Text -> SetUserMFAPreference

-- | The SMS text message multi-factor authentication (MFA) settings.
[$sel:sMSMfaSettings:SetUserMFAPreference'] :: SetUserMFAPreference -> Maybe SMSMfaSettingsType

-- | The time-based one-time password software token MFA settings.
[$sel:softwareTokenMfaSettings:SetUserMFAPreference'] :: SetUserMFAPreference -> Maybe SoftwareTokenMfaSettingsType

-- | The access token for the user.
[$sel:accessToken:SetUserMFAPreference'] :: SetUserMFAPreference -> Sensitive Text

-- | Create a value of <a>SetUserMFAPreference</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sMSMfaSettings:SetUserMFAPreference'</a>,
--   <a>setUserMFAPreference_sMSMfaSettings</a> - The SMS text message
--   multi-factor authentication (MFA) settings.
--   
--   <a>$sel:softwareTokenMfaSettings:SetUserMFAPreference'</a>,
--   <a>setUserMFAPreference_softwareTokenMfaSettings</a> - The time-based
--   one-time password software token MFA settings.
--   
--   <a>$sel:accessToken:SetUserMFAPreference'</a>,
--   <a>setUserMFAPreference_accessToken</a> - The access token for the
--   user.
newSetUserMFAPreference :: Text -> SetUserMFAPreference

-- | The SMS text message multi-factor authentication (MFA) settings.
setUserMFAPreference_sMSMfaSettings :: Lens' SetUserMFAPreference (Maybe SMSMfaSettingsType)

-- | The time-based one-time password software token MFA settings.
setUserMFAPreference_softwareTokenMfaSettings :: Lens' SetUserMFAPreference (Maybe SoftwareTokenMfaSettingsType)

-- | The access token for the user.
setUserMFAPreference_accessToken :: Lens' SetUserMFAPreference Text

-- | <i>See:</i> <a>newSetUserMFAPreferenceResponse</a> smart constructor.
data SetUserMFAPreferenceResponse
SetUserMFAPreferenceResponse' :: Int -> SetUserMFAPreferenceResponse

-- | The response's http status code.
[$sel:httpStatus:SetUserMFAPreferenceResponse'] :: SetUserMFAPreferenceResponse -> Int

-- | Create a value of <a>SetUserMFAPreferenceResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:SetUserMFAPreferenceResponse'</a>,
--   <a>setUserMFAPreferenceResponse_httpStatus</a> - The response's http
--   status code.
newSetUserMFAPreferenceResponse :: Int -> SetUserMFAPreferenceResponse

-- | The response's http status code.
setUserMFAPreferenceResponse_httpStatus :: Lens' SetUserMFAPreferenceResponse Int
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.SetUserMFAPreference.SetUserMFAPreference
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.SetUserMFAPreference.SetUserMFAPreference
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.SetUserMFAPreference.SetUserMFAPreference
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.SetUserMFAPreference.SetUserMFAPreferenceResponse
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.SetUserMFAPreference.SetUserMFAPreferenceResponse
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.SetUserMFAPreference.SetUserMFAPreferenceResponse
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.SetUserMFAPreference.SetUserMFAPreferenceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CognitoIdentityProvider.SetUserMFAPreference.SetUserMFAPreference
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.SetUserMFAPreference.SetUserMFAPreferenceResponse
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.SetUserMFAPreference.SetUserMFAPreference
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.SetUserMFAPreference.SetUserMFAPreference
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CognitoIdentityProvider.SetUserMFAPreference.SetUserMFAPreference
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.SetUserMFAPreference.SetUserMFAPreference
instance Network.AWS.Data.Path.ToPath Network.AWS.CognitoIdentityProvider.SetUserMFAPreference.SetUserMFAPreference
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentityProvider.SetUserMFAPreference.SetUserMFAPreference


-- | Sets the UI customization information for a user pool's built-in app
--   UI.
--   
--   You can specify app UI customization settings for a single client
--   (with a specific <tt>clientId</tt>) or for all clients (by setting the
--   <tt>clientId</tt> to <tt>ALL</tt>). If you specify <tt>ALL</tt>, the
--   default configuration will be used for every client that has no UI
--   customization set previously. If you specify UI customization settings
--   for a particular client, it will no longer fall back to the
--   <tt>ALL</tt> configuration.
--   
--   To use this API, your user pool must have a domain associated with it.
--   Otherwise, there is no place to host the app's pages, and the service
--   will throw an error.
module Network.AWS.CognitoIdentityProvider.SetUICustomization

-- | <i>See:</i> <a>newSetUICustomization</a> smart constructor.
data SetUICustomization
SetUICustomization' :: Maybe (Sensitive Text) -> Maybe Text -> Maybe Base64 -> Text -> SetUICustomization

-- | The client ID for the client app.
[$sel:clientId:SetUICustomization'] :: SetUICustomization -> Maybe (Sensitive Text)

-- | The CSS values in the UI customization.
[$sel:css:SetUICustomization'] :: SetUICustomization -> Maybe Text

-- | The uploaded logo image for the UI customization.
[$sel:imageFile:SetUICustomization'] :: SetUICustomization -> Maybe Base64

-- | The user pool ID for the user pool.
[$sel:userPoolId:SetUICustomization'] :: SetUICustomization -> Text

-- | Create a value of <a>SetUICustomization</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientId:SetUICustomization'</a>,
--   <a>setUICustomization_clientId</a> - The client ID for the client app.
--   
--   <a>$sel:css:SetUICustomization'</a>, <a>setUICustomization_css</a> -
--   The CSS values in the UI customization.
--   
--   <a>$sel:imageFile:SetUICustomization'</a>,
--   <a>setUICustomization_imageFile</a> - The uploaded logo image for the
--   UI customization.-- -- <i>Note:</i> This <tt>Lens</tt> automatically
--   encodes and decodes Base64 data. -- The underlying isomorphism will
--   encode to Base64 representation during -- serialisation, and decode
--   from Base64 representation during deserialisation. -- This
--   <tt>Lens</tt> accepts and returns only raw unencoded data.
--   
--   <a>$sel:userPoolId:SetUICustomization'</a>,
--   <a>setUICustomization_userPoolId</a> - The user pool ID for the user
--   pool.
newSetUICustomization :: Text -> SetUICustomization

-- | The client ID for the client app.
setUICustomization_clientId :: Lens' SetUICustomization (Maybe Text)

-- | The CSS values in the UI customization.
setUICustomization_css :: Lens' SetUICustomization (Maybe Text)

-- | The uploaded logo image for the UI customization.-- -- <i>Note:</i>
--   This <tt>Lens</tt> automatically encodes and decodes Base64 data. --
--   The underlying isomorphism will encode to Base64 representation during
--   -- serialisation, and decode from Base64 representation during
--   deserialisation. -- This <tt>Lens</tt> accepts and returns only raw
--   unencoded data.
setUICustomization_imageFile :: Lens' SetUICustomization (Maybe ByteString)

-- | The user pool ID for the user pool.
setUICustomization_userPoolId :: Lens' SetUICustomization Text

-- | <i>See:</i> <a>newSetUICustomizationResponse</a> smart constructor.
data SetUICustomizationResponse
SetUICustomizationResponse' :: Int -> UICustomizationType -> SetUICustomizationResponse

-- | The response's http status code.
[$sel:httpStatus:SetUICustomizationResponse'] :: SetUICustomizationResponse -> Int

-- | The UI customization information.
[$sel:uICustomization:SetUICustomizationResponse'] :: SetUICustomizationResponse -> UICustomizationType

-- | Create a value of <a>SetUICustomizationResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:SetUICustomizationResponse'</a>,
--   <a>setUICustomizationResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:uICustomization:SetUICustomizationResponse'</a>,
--   <a>setUICustomizationResponse_uICustomization</a> - The UI
--   customization information.
newSetUICustomizationResponse :: Int -> UICustomizationType -> SetUICustomizationResponse

-- | The response's http status code.
setUICustomizationResponse_httpStatus :: Lens' SetUICustomizationResponse Int

-- | The UI customization information.
setUICustomizationResponse_uICustomization :: Lens' SetUICustomizationResponse UICustomizationType
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.SetUICustomization.SetUICustomization
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.SetUICustomization.SetUICustomization
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.SetUICustomization.SetUICustomization
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.SetUICustomization.SetUICustomizationResponse
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.SetUICustomization.SetUICustomizationResponse
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.SetUICustomization.SetUICustomizationResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CognitoIdentityProvider.SetUICustomization.SetUICustomization
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.SetUICustomization.SetUICustomizationResponse
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.SetUICustomization.SetUICustomization
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.SetUICustomization.SetUICustomization
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CognitoIdentityProvider.SetUICustomization.SetUICustomization
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.SetUICustomization.SetUICustomization
instance Network.AWS.Data.Path.ToPath Network.AWS.CognitoIdentityProvider.SetUICustomization.SetUICustomization
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentityProvider.SetUICustomization.SetUICustomization


-- | Configures actions on detected risks. To delete the risk configuration
--   for <tt>UserPoolId</tt> or <tt>ClientId</tt>, pass null values for all
--   four configuration types.
--   
--   To enable Amazon Cognito advanced security features, update the user
--   pool to include the <tt>UserPoolAddOns</tt>
--   key<tt>AdvancedSecurityMode</tt>.
module Network.AWS.CognitoIdentityProvider.SetRiskConfiguration

-- | <i>See:</i> <a>newSetRiskConfiguration</a> smart constructor.
data SetRiskConfiguration
SetRiskConfiguration' :: Maybe RiskExceptionConfigurationType -> Maybe (Sensitive Text) -> Maybe AccountTakeoverRiskConfigurationType -> Maybe CompromisedCredentialsRiskConfigurationType -> Text -> SetRiskConfiguration

-- | The configuration to override the risk decision.
[$sel:riskExceptionConfiguration:SetRiskConfiguration'] :: SetRiskConfiguration -> Maybe RiskExceptionConfigurationType

-- | The app client ID. If <tt>ClientId</tt> is null, then the risk
--   configuration is mapped to <tt>userPoolId</tt>. When the client ID is
--   null, the same risk configuration is applied to all the clients in the
--   userPool.
--   
--   Otherwise, <tt>ClientId</tt> is mapped to the client. When the client
--   ID is not null, the user pool configuration is overridden and the risk
--   configuration for the client is used instead.
[$sel:clientId:SetRiskConfiguration'] :: SetRiskConfiguration -> Maybe (Sensitive Text)

-- | The account takeover risk configuration.
[$sel:accountTakeoverRiskConfiguration:SetRiskConfiguration'] :: SetRiskConfiguration -> Maybe AccountTakeoverRiskConfigurationType

-- | The compromised credentials risk configuration.
[$sel:compromisedCredentialsRiskConfiguration:SetRiskConfiguration'] :: SetRiskConfiguration -> Maybe CompromisedCredentialsRiskConfigurationType

-- | The user pool ID.
[$sel:userPoolId:SetRiskConfiguration'] :: SetRiskConfiguration -> Text

-- | Create a value of <a>SetRiskConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:riskExceptionConfiguration:SetRiskConfiguration'</a>,
--   <a>setRiskConfiguration_riskExceptionConfiguration</a> - The
--   configuration to override the risk decision.
--   
--   <a>$sel:clientId:SetRiskConfiguration'</a>,
--   <a>setRiskConfiguration_clientId</a> - The app client ID. If
--   <tt>ClientId</tt> is null, then the risk configuration is mapped to
--   <tt>userPoolId</tt>. When the client ID is null, the same risk
--   configuration is applied to all the clients in the userPool.
--   
--   Otherwise, <tt>ClientId</tt> is mapped to the client. When the client
--   ID is not null, the user pool configuration is overridden and the risk
--   configuration for the client is used instead.
--   
--   <a>$sel:accountTakeoverRiskConfiguration:SetRiskConfiguration'</a>,
--   <a>setRiskConfiguration_accountTakeoverRiskConfiguration</a> - The
--   account takeover risk configuration.
--   
--   
--   <a>$sel:compromisedCredentialsRiskConfiguration:SetRiskConfiguration'</a>,
--   <a>setRiskConfiguration_compromisedCredentialsRiskConfiguration</a> -
--   The compromised credentials risk configuration.
--   
--   <a>$sel:userPoolId:SetRiskConfiguration'</a>,
--   <a>setRiskConfiguration_userPoolId</a> - The user pool ID.
newSetRiskConfiguration :: Text -> SetRiskConfiguration

-- | The configuration to override the risk decision.
setRiskConfiguration_riskExceptionConfiguration :: Lens' SetRiskConfiguration (Maybe RiskExceptionConfigurationType)

-- | The app client ID. If <tt>ClientId</tt> is null, then the risk
--   configuration is mapped to <tt>userPoolId</tt>. When the client ID is
--   null, the same risk configuration is applied to all the clients in the
--   userPool.
--   
--   Otherwise, <tt>ClientId</tt> is mapped to the client. When the client
--   ID is not null, the user pool configuration is overridden and the risk
--   configuration for the client is used instead.
setRiskConfiguration_clientId :: Lens' SetRiskConfiguration (Maybe Text)

-- | The account takeover risk configuration.
setRiskConfiguration_accountTakeoverRiskConfiguration :: Lens' SetRiskConfiguration (Maybe AccountTakeoverRiskConfigurationType)

-- | The compromised credentials risk configuration.
setRiskConfiguration_compromisedCredentialsRiskConfiguration :: Lens' SetRiskConfiguration (Maybe CompromisedCredentialsRiskConfigurationType)

-- | The user pool ID.
setRiskConfiguration_userPoolId :: Lens' SetRiskConfiguration Text

-- | <i>See:</i> <a>newSetRiskConfigurationResponse</a> smart constructor.
data SetRiskConfigurationResponse
SetRiskConfigurationResponse' :: Int -> RiskConfigurationType -> SetRiskConfigurationResponse

-- | The response's http status code.
[$sel:httpStatus:SetRiskConfigurationResponse'] :: SetRiskConfigurationResponse -> Int

-- | The risk configuration.
[$sel:riskConfiguration:SetRiskConfigurationResponse'] :: SetRiskConfigurationResponse -> RiskConfigurationType

-- | Create a value of <a>SetRiskConfigurationResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:SetRiskConfigurationResponse'</a>,
--   <a>setRiskConfigurationResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:riskConfiguration:SetRiskConfigurationResponse'</a>,
--   <a>setRiskConfigurationResponse_riskConfiguration</a> - The risk
--   configuration.
newSetRiskConfigurationResponse :: Int -> RiskConfigurationType -> SetRiskConfigurationResponse

-- | The response's http status code.
setRiskConfigurationResponse_httpStatus :: Lens' SetRiskConfigurationResponse Int

-- | The risk configuration.
setRiskConfigurationResponse_riskConfiguration :: Lens' SetRiskConfigurationResponse RiskConfigurationType
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.SetRiskConfiguration.SetRiskConfiguration
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.SetRiskConfiguration.SetRiskConfiguration
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.SetRiskConfiguration.SetRiskConfiguration
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.SetRiskConfiguration.SetRiskConfigurationResponse
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.SetRiskConfiguration.SetRiskConfigurationResponse
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.SetRiskConfiguration.SetRiskConfigurationResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CognitoIdentityProvider.SetRiskConfiguration.SetRiskConfiguration
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.SetRiskConfiguration.SetRiskConfigurationResponse
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.SetRiskConfiguration.SetRiskConfiguration
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.SetRiskConfiguration.SetRiskConfiguration
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CognitoIdentityProvider.SetRiskConfiguration.SetRiskConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.SetRiskConfiguration.SetRiskConfiguration
instance Network.AWS.Data.Path.ToPath Network.AWS.CognitoIdentityProvider.SetRiskConfiguration.SetRiskConfiguration
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentityProvider.SetRiskConfiguration.SetRiskConfiguration


-- | Revokes all of the access tokens generated by the specified refresh
--   token. After the token is revoked, you can not use the revoked token
--   to access Cognito authenticated APIs.
module Network.AWS.CognitoIdentityProvider.RevokeToken

-- | <i>See:</i> <a>newRevokeToken</a> smart constructor.
data RevokeToken
RevokeToken' :: Maybe (Sensitive Text) -> Sensitive Text -> Sensitive Text -> RevokeToken

-- | The secret for the client ID. This is required only if the client ID
--   has a secret.
[$sel:clientSecret:RevokeToken'] :: RevokeToken -> Maybe (Sensitive Text)

-- | The token that you want to revoke.
[$sel:token:RevokeToken'] :: RevokeToken -> Sensitive Text

-- | The client ID for the token that you want to revoke.
[$sel:clientId:RevokeToken'] :: RevokeToken -> Sensitive Text

-- | Create a value of <a>RevokeToken</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientSecret:RevokeToken'</a>, <a>revokeToken_clientSecret</a>
--   - The secret for the client ID. This is required only if the client ID
--   has a secret.
--   
--   <a>$sel:token:RevokeToken'</a>, <a>revokeToken_token</a> - The token
--   that you want to revoke.
--   
--   <a>$sel:clientId:RevokeToken'</a>, <a>revokeToken_clientId</a> - The
--   client ID for the token that you want to revoke.
newRevokeToken :: Text -> Text -> RevokeToken

-- | The secret for the client ID. This is required only if the client ID
--   has a secret.
revokeToken_clientSecret :: Lens' RevokeToken (Maybe Text)

-- | The token that you want to revoke.
revokeToken_token :: Lens' RevokeToken Text

-- | The client ID for the token that you want to revoke.
revokeToken_clientId :: Lens' RevokeToken Text

-- | <i>See:</i> <a>newRevokeTokenResponse</a> smart constructor.
data RevokeTokenResponse
RevokeTokenResponse' :: Int -> RevokeTokenResponse

-- | The response's http status code.
[$sel:httpStatus:RevokeTokenResponse'] :: RevokeTokenResponse -> Int

-- | Create a value of <a>RevokeTokenResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:RevokeTokenResponse'</a>,
--   <a>revokeTokenResponse_httpStatus</a> - The response's http status
--   code.
newRevokeTokenResponse :: Int -> RevokeTokenResponse

-- | The response's http status code.
revokeTokenResponse_httpStatus :: Lens' RevokeTokenResponse Int
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.RevokeToken.RevokeToken
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.RevokeToken.RevokeToken
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.RevokeToken.RevokeToken
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.RevokeToken.RevokeTokenResponse
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.RevokeToken.RevokeTokenResponse
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.RevokeToken.RevokeTokenResponse
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.RevokeToken.RevokeTokenResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CognitoIdentityProvider.RevokeToken.RevokeToken
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.RevokeToken.RevokeTokenResponse
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.RevokeToken.RevokeToken
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.RevokeToken.RevokeToken
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CognitoIdentityProvider.RevokeToken.RevokeToken
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.RevokeToken.RevokeToken
instance Network.AWS.Data.Path.ToPath Network.AWS.CognitoIdentityProvider.RevokeToken.RevokeToken
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentityProvider.RevokeToken.RevokeToken


-- | Responds to the authentication challenge.
--   
--   This action might generate an SMS text message. Starting June 1, 2021,
--   U.S. telecom carriers require that you register an origination phone
--   number before you can send SMS messages to U.S. phone numbers. If you
--   use SMS text messages in Amazon Cognito, you must register a phone
--   number with <a>Amazon Pinpoint</a>. Cognito will use the the
--   registered number automatically. Otherwise, Cognito users that must
--   receive SMS messages might be unable to sign up, activate their
--   accounts, or sign in.
--   
--   If you have never used SMS text messages with Amazon Cognito or any
--   other Amazon Web Service, Amazon SNS might place your account in SMS
--   sandbox. In
--   <i>&lt;https:</i><i>docs.aws.amazon.com</i>sns<i>latest</i>dg<i>sns-sms-sandbox.html
--   sandbox mode&gt;</i> , you’ll have limitations, such as sending
--   messages to only verified phone numbers. After testing in the sandbox
--   environment, you can move out of the SMS sandbox and into production.
--   For more information, see <a>SMS message settings for Cognito User
--   Pools</a> in the <i>Amazon Cognito Developer Guide</i>.
module Network.AWS.CognitoIdentityProvider.RespondToAuthChallenge

-- | The request to respond to an authentication challenge.
--   
--   <i>See:</i> <a>newRespondToAuthChallenge</a> smart constructor.
data RespondToAuthChallenge
RespondToAuthChallenge' :: Maybe (HashMap Text Text) -> Maybe AnalyticsMetadataType -> Maybe (HashMap Text Text) -> Maybe UserContextDataType -> Maybe Text -> Sensitive Text -> ChallengeNameType -> RespondToAuthChallenge

-- | A map of custom key-value pairs that you can provide as input for any
--   custom workflows that this action triggers.
--   
--   You create custom workflows by assigning Lambda functions to user pool
--   triggers. When you use the RespondToAuthChallenge API action, Amazon
--   Cognito invokes any functions that are assigned to the following
--   triggers: <i>post authentication</i>, <i>pre token generation</i>,
--   /define auth challenge<i>, </i>create auth challenge<i>, and
--   </i>verify auth challenge/. When Amazon Cognito invokes any of these
--   functions, it passes a JSON payload, which the function receives as
--   input. This payload contains a <tt>clientMetadata</tt> attribute,
--   which provides the data that you assigned to the ClientMetadata
--   parameter in your RespondToAuthChallenge request. In your function
--   code in Lambda, you can process the <tt>clientMetadata</tt> value to
--   enhance your workflow for your specific needs.
--   
--   For more information, see <a>Customizing User Pool Workflows with
--   Lambda Triggers</a> in the <i>Amazon Cognito Developer Guide</i>.
--   
--   Take the following limitations into consideration when you use the
--   ClientMetadata parameter:
--   
--   <ul>
--   <li>Amazon Cognito does not store the ClientMetadata value. This data
--   is available only to Lambda triggers that are assigned to a user pool
--   to support custom workflows. If your user pool configuration does not
--   include triggers, the ClientMetadata parameter serves no purpose.</li>
--   <li>Amazon Cognito does not validate the ClientMetadata value.</li>
--   <li>Amazon Cognito does not encrypt the the ClientMetadata value, so
--   don't use it to provide sensitive information.</li>
--   </ul>
[$sel:clientMetadata:RespondToAuthChallenge'] :: RespondToAuthChallenge -> Maybe (HashMap Text Text)

-- | The Amazon Pinpoint analytics metadata for collecting metrics for
--   <tt>RespondToAuthChallenge</tt> calls.
[$sel:analyticsMetadata:RespondToAuthChallenge'] :: RespondToAuthChallenge -> Maybe AnalyticsMetadataType

-- | The challenge responses. These are inputs corresponding to the value
--   of <tt>ChallengeName</tt>, for example:
--   
--   <tt>SECRET_HASH</tt> (if app client is configured with client secret)
--   applies to all inputs below (including <tt>SOFTWARE_TOKEN_MFA</tt>).
--   
--   <ul>
--   <li><tt>SMS_MFA</tt>: <tt>SMS_MFA_CODE</tt>, <tt>USERNAME</tt>.</li>
--   <li><tt>PASSWORD_VERIFIER</tt>: <tt>PASSWORD_CLAIM_SIGNATURE</tt>,
--   <tt>PASSWORD_CLAIM_SECRET_BLOCK</tt>, <tt>TIMESTAMP</tt>,
--   <tt>USERNAME</tt>.</li>
--   <li><tt>NEW_PASSWORD_REQUIRED</tt>: <tt>NEW_PASSWORD</tt>, any other
--   required attributes, <tt>USERNAME</tt>.</li>
--   <li><tt>SOFTWARE_TOKEN_MFA</tt>: <tt>USERNAME</tt> and
--   <tt>SOFTWARE_TOKEN_MFA_CODE</tt> are required attributes.</li>
--   <li><tt>DEVICE_SRP_AUTH</tt> requires <tt>USERNAME</tt>,
--   <tt>DEVICE_KEY</tt>, <tt>SRP_A</tt> (and <tt>SECRET_HASH</tt>).</li>
--   <li><tt>DEVICE_PASSWORD_VERIFIER</tt> requires everything that
--   <tt>PASSWORD_VERIFIER</tt> requires plus <tt>DEVICE_KEY</tt>.</li>
--   <li><tt>MFA_SETUP</tt> requires <tt>USERNAME</tt>, plus you need to
--   use the session value returned by <tt>VerifySoftwareToken</tt> in the
--   <tt>Session</tt> parameter.</li>
--   </ul>
[$sel:challengeResponses:RespondToAuthChallenge'] :: RespondToAuthChallenge -> Maybe (HashMap Text Text)

-- | Contextual data such as the user's device fingerprint, IP address, or
--   location used for evaluating the risk of an unexpected event by Amazon
--   Cognito advanced security.
[$sel:userContextData:RespondToAuthChallenge'] :: RespondToAuthChallenge -> Maybe UserContextDataType

-- | The session which should be passed both ways in challenge-response
--   calls to the service. If <tt>InitiateAuth</tt> or
--   <tt>RespondToAuthChallenge</tt> API call determines that the caller
--   needs to go through another challenge, they return a session with
--   other challenge parameters. This session should be passed as it is to
--   the next <tt>RespondToAuthChallenge</tt> API call.
[$sel:session:RespondToAuthChallenge'] :: RespondToAuthChallenge -> Maybe Text

-- | The app client ID.
[$sel:clientId:RespondToAuthChallenge'] :: RespondToAuthChallenge -> Sensitive Text

-- | The challenge name. For more information, see <a>InitiateAuth</a>.
--   
--   <tt>ADMIN_NO_SRP_AUTH</tt> is not a valid value.
[$sel:challengeName:RespondToAuthChallenge'] :: RespondToAuthChallenge -> ChallengeNameType

-- | Create a value of <a>RespondToAuthChallenge</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientMetadata:RespondToAuthChallenge'</a>,
--   <a>respondToAuthChallenge_clientMetadata</a> - A map of custom
--   key-value pairs that you can provide as input for any custom workflows
--   that this action triggers.
--   
--   You create custom workflows by assigning Lambda functions to user pool
--   triggers. When you use the RespondToAuthChallenge API action, Amazon
--   Cognito invokes any functions that are assigned to the following
--   triggers: <i>post authentication</i>, <i>pre token generation</i>,
--   /define auth challenge<i>, </i>create auth challenge<i>, and
--   </i>verify auth challenge/. When Amazon Cognito invokes any of these
--   functions, it passes a JSON payload, which the function receives as
--   input. This payload contains a <tt>clientMetadata</tt> attribute,
--   which provides the data that you assigned to the ClientMetadata
--   parameter in your RespondToAuthChallenge request. In your function
--   code in Lambda, you can process the <tt>clientMetadata</tt> value to
--   enhance your workflow for your specific needs.
--   
--   For more information, see <a>Customizing User Pool Workflows with
--   Lambda Triggers</a> in the <i>Amazon Cognito Developer Guide</i>.
--   
--   Take the following limitations into consideration when you use the
--   ClientMetadata parameter:
--   
--   <ul>
--   <li>Amazon Cognito does not store the ClientMetadata value. This data
--   is available only to Lambda triggers that are assigned to a user pool
--   to support custom workflows. If your user pool configuration does not
--   include triggers, the ClientMetadata parameter serves no purpose.</li>
--   <li>Amazon Cognito does not validate the ClientMetadata value.</li>
--   <li>Amazon Cognito does not encrypt the the ClientMetadata value, so
--   don't use it to provide sensitive information.</li>
--   </ul>
--   
--   <a>$sel:analyticsMetadata:RespondToAuthChallenge'</a>,
--   <a>respondToAuthChallenge_analyticsMetadata</a> - The Amazon Pinpoint
--   analytics metadata for collecting metrics for
--   <tt>RespondToAuthChallenge</tt> calls.
--   
--   <a>$sel:challengeResponses:RespondToAuthChallenge'</a>,
--   <a>respondToAuthChallenge_challengeResponses</a> - The challenge
--   responses. These are inputs corresponding to the value of
--   <tt>ChallengeName</tt>, for example:
--   
--   <tt>SECRET_HASH</tt> (if app client is configured with client secret)
--   applies to all inputs below (including <tt>SOFTWARE_TOKEN_MFA</tt>).
--   
--   <ul>
--   <li><tt>SMS_MFA</tt>: <tt>SMS_MFA_CODE</tt>, <tt>USERNAME</tt>.</li>
--   <li><tt>PASSWORD_VERIFIER</tt>: <tt>PASSWORD_CLAIM_SIGNATURE</tt>,
--   <tt>PASSWORD_CLAIM_SECRET_BLOCK</tt>, <tt>TIMESTAMP</tt>,
--   <tt>USERNAME</tt>.</li>
--   <li><tt>NEW_PASSWORD_REQUIRED</tt>: <tt>NEW_PASSWORD</tt>, any other
--   required attributes, <tt>USERNAME</tt>.</li>
--   <li><tt>SOFTWARE_TOKEN_MFA</tt>: <tt>USERNAME</tt> and
--   <tt>SOFTWARE_TOKEN_MFA_CODE</tt> are required attributes.</li>
--   <li><tt>DEVICE_SRP_AUTH</tt> requires <tt>USERNAME</tt>,
--   <tt>DEVICE_KEY</tt>, <tt>SRP_A</tt> (and <tt>SECRET_HASH</tt>).</li>
--   <li><tt>DEVICE_PASSWORD_VERIFIER</tt> requires everything that
--   <tt>PASSWORD_VERIFIER</tt> requires plus <tt>DEVICE_KEY</tt>.</li>
--   <li><tt>MFA_SETUP</tt> requires <tt>USERNAME</tt>, plus you need to
--   use the session value returned by <tt>VerifySoftwareToken</tt> in the
--   <tt>Session</tt> parameter.</li>
--   </ul>
--   
--   <a>$sel:userContextData:RespondToAuthChallenge'</a>,
--   <a>respondToAuthChallenge_userContextData</a> - Contextual data such
--   as the user's device fingerprint, IP address, or location used for
--   evaluating the risk of an unexpected event by Amazon Cognito advanced
--   security.
--   
--   <a>$sel:session:RespondToAuthChallenge'</a>,
--   <a>respondToAuthChallenge_session</a> - The session which should be
--   passed both ways in challenge-response calls to the service. If
--   <tt>InitiateAuth</tt> or <tt>RespondToAuthChallenge</tt> API call
--   determines that the caller needs to go through another challenge, they
--   return a session with other challenge parameters. This session should
--   be passed as it is to the next <tt>RespondToAuthChallenge</tt> API
--   call.
--   
--   <a>$sel:clientId:RespondToAuthChallenge'</a>,
--   <a>respondToAuthChallenge_clientId</a> - The app client ID.
--   
--   <a>$sel:challengeName:RespondToAuthChallenge'</a>,
--   <a>respondToAuthChallenge_challengeName</a> - The challenge name. For
--   more information, see <a>InitiateAuth</a>.
--   
--   <tt>ADMIN_NO_SRP_AUTH</tt> is not a valid value.
newRespondToAuthChallenge :: Text -> ChallengeNameType -> RespondToAuthChallenge

-- | A map of custom key-value pairs that you can provide as input for any
--   custom workflows that this action triggers.
--   
--   You create custom workflows by assigning Lambda functions to user pool
--   triggers. When you use the RespondToAuthChallenge API action, Amazon
--   Cognito invokes any functions that are assigned to the following
--   triggers: <i>post authentication</i>, <i>pre token generation</i>,
--   /define auth challenge<i>, </i>create auth challenge<i>, and
--   </i>verify auth challenge/. When Amazon Cognito invokes any of these
--   functions, it passes a JSON payload, which the function receives as
--   input. This payload contains a <tt>clientMetadata</tt> attribute,
--   which provides the data that you assigned to the ClientMetadata
--   parameter in your RespondToAuthChallenge request. In your function
--   code in Lambda, you can process the <tt>clientMetadata</tt> value to
--   enhance your workflow for your specific needs.
--   
--   For more information, see <a>Customizing User Pool Workflows with
--   Lambda Triggers</a> in the <i>Amazon Cognito Developer Guide</i>.
--   
--   Take the following limitations into consideration when you use the
--   ClientMetadata parameter:
--   
--   <ul>
--   <li>Amazon Cognito does not store the ClientMetadata value. This data
--   is available only to Lambda triggers that are assigned to a user pool
--   to support custom workflows. If your user pool configuration does not
--   include triggers, the ClientMetadata parameter serves no purpose.</li>
--   <li>Amazon Cognito does not validate the ClientMetadata value.</li>
--   <li>Amazon Cognito does not encrypt the the ClientMetadata value, so
--   don't use it to provide sensitive information.</li>
--   </ul>
respondToAuthChallenge_clientMetadata :: Lens' RespondToAuthChallenge (Maybe (HashMap Text Text))

-- | The Amazon Pinpoint analytics metadata for collecting metrics for
--   <tt>RespondToAuthChallenge</tt> calls.
respondToAuthChallenge_analyticsMetadata :: Lens' RespondToAuthChallenge (Maybe AnalyticsMetadataType)

-- | The challenge responses. These are inputs corresponding to the value
--   of <tt>ChallengeName</tt>, for example:
--   
--   <tt>SECRET_HASH</tt> (if app client is configured with client secret)
--   applies to all inputs below (including <tt>SOFTWARE_TOKEN_MFA</tt>).
--   
--   <ul>
--   <li><tt>SMS_MFA</tt>: <tt>SMS_MFA_CODE</tt>, <tt>USERNAME</tt>.</li>
--   <li><tt>PASSWORD_VERIFIER</tt>: <tt>PASSWORD_CLAIM_SIGNATURE</tt>,
--   <tt>PASSWORD_CLAIM_SECRET_BLOCK</tt>, <tt>TIMESTAMP</tt>,
--   <tt>USERNAME</tt>.</li>
--   <li><tt>NEW_PASSWORD_REQUIRED</tt>: <tt>NEW_PASSWORD</tt>, any other
--   required attributes, <tt>USERNAME</tt>.</li>
--   <li><tt>SOFTWARE_TOKEN_MFA</tt>: <tt>USERNAME</tt> and
--   <tt>SOFTWARE_TOKEN_MFA_CODE</tt> are required attributes.</li>
--   <li><tt>DEVICE_SRP_AUTH</tt> requires <tt>USERNAME</tt>,
--   <tt>DEVICE_KEY</tt>, <tt>SRP_A</tt> (and <tt>SECRET_HASH</tt>).</li>
--   <li><tt>DEVICE_PASSWORD_VERIFIER</tt> requires everything that
--   <tt>PASSWORD_VERIFIER</tt> requires plus <tt>DEVICE_KEY</tt>.</li>
--   <li><tt>MFA_SETUP</tt> requires <tt>USERNAME</tt>, plus you need to
--   use the session value returned by <tt>VerifySoftwareToken</tt> in the
--   <tt>Session</tt> parameter.</li>
--   </ul>
respondToAuthChallenge_challengeResponses :: Lens' RespondToAuthChallenge (Maybe (HashMap Text Text))

-- | Contextual data such as the user's device fingerprint, IP address, or
--   location used for evaluating the risk of an unexpected event by Amazon
--   Cognito advanced security.
respondToAuthChallenge_userContextData :: Lens' RespondToAuthChallenge (Maybe UserContextDataType)

-- | The session which should be passed both ways in challenge-response
--   calls to the service. If <tt>InitiateAuth</tt> or
--   <tt>RespondToAuthChallenge</tt> API call determines that the caller
--   needs to go through another challenge, they return a session with
--   other challenge parameters. This session should be passed as it is to
--   the next <tt>RespondToAuthChallenge</tt> API call.
respondToAuthChallenge_session :: Lens' RespondToAuthChallenge (Maybe Text)

-- | The app client ID.
respondToAuthChallenge_clientId :: Lens' RespondToAuthChallenge Text

-- | The challenge name. For more information, see <a>InitiateAuth</a>.
--   
--   <tt>ADMIN_NO_SRP_AUTH</tt> is not a valid value.
respondToAuthChallenge_challengeName :: Lens' RespondToAuthChallenge ChallengeNameType

-- | The response to respond to the authentication challenge.
--   
--   <i>See:</i> <a>newRespondToAuthChallengeResponse</a> smart
--   constructor.
data RespondToAuthChallengeResponse
RespondToAuthChallengeResponse' :: Maybe ChallengeNameType -> Maybe (HashMap Text Text) -> Maybe AuthenticationResultType -> Maybe Text -> Int -> RespondToAuthChallengeResponse

-- | The challenge name. For more information, see <a>InitiateAuth</a>.
[$sel:challengeName:RespondToAuthChallengeResponse'] :: RespondToAuthChallengeResponse -> Maybe ChallengeNameType

-- | The challenge parameters. For more information, see
--   <a>InitiateAuth</a>.
[$sel:challengeParameters:RespondToAuthChallengeResponse'] :: RespondToAuthChallengeResponse -> Maybe (HashMap Text Text)

-- | The result returned by the server in response to the request to
--   respond to the authentication challenge.
[$sel:authenticationResult:RespondToAuthChallengeResponse'] :: RespondToAuthChallengeResponse -> Maybe AuthenticationResultType

-- | The session which should be passed both ways in challenge-response
--   calls to the service. If the caller needs to go through another
--   challenge, they return a session with other challenge parameters. This
--   session should be passed as it is to the next
--   <tt>RespondToAuthChallenge</tt> API call.
[$sel:session:RespondToAuthChallengeResponse'] :: RespondToAuthChallengeResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:RespondToAuthChallengeResponse'] :: RespondToAuthChallengeResponse -> Int

-- | Create a value of <a>RespondToAuthChallengeResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:challengeName:RespondToAuthChallenge'</a>,
--   <a>respondToAuthChallengeResponse_challengeName</a> - The challenge
--   name. For more information, see <a>InitiateAuth</a>.
--   
--   <a>$sel:challengeParameters:RespondToAuthChallengeResponse'</a>,
--   <a>respondToAuthChallengeResponse_challengeParameters</a> - The
--   challenge parameters. For more information, see <a>InitiateAuth</a>.
--   
--   <a>$sel:authenticationResult:RespondToAuthChallengeResponse'</a>,
--   <a>respondToAuthChallengeResponse_authenticationResult</a> - The
--   result returned by the server in response to the request to respond to
--   the authentication challenge.
--   
--   <a>$sel:session:RespondToAuthChallenge'</a>,
--   <a>respondToAuthChallengeResponse_session</a> - The session which
--   should be passed both ways in challenge-response calls to the service.
--   If the caller needs to go through another challenge, they return a
--   session with other challenge parameters. This session should be passed
--   as it is to the next <tt>RespondToAuthChallenge</tt> API call.
--   
--   <a>$sel:httpStatus:RespondToAuthChallengeResponse'</a>,
--   <a>respondToAuthChallengeResponse_httpStatus</a> - The response's http
--   status code.
newRespondToAuthChallengeResponse :: Int -> RespondToAuthChallengeResponse

-- | The challenge name. For more information, see <a>InitiateAuth</a>.
respondToAuthChallengeResponse_challengeName :: Lens' RespondToAuthChallengeResponse (Maybe ChallengeNameType)

-- | The challenge parameters. For more information, see
--   <a>InitiateAuth</a>.
respondToAuthChallengeResponse_challengeParameters :: Lens' RespondToAuthChallengeResponse (Maybe (HashMap Text Text))

-- | The result returned by the server in response to the request to
--   respond to the authentication challenge.
respondToAuthChallengeResponse_authenticationResult :: Lens' RespondToAuthChallengeResponse (Maybe AuthenticationResultType)

-- | The session which should be passed both ways in challenge-response
--   calls to the service. If the caller needs to go through another
--   challenge, they return a session with other challenge parameters. This
--   session should be passed as it is to the next
--   <tt>RespondToAuthChallenge</tt> API call.
respondToAuthChallengeResponse_session :: Lens' RespondToAuthChallengeResponse (Maybe Text)

-- | The response's http status code.
respondToAuthChallengeResponse_httpStatus :: Lens' RespondToAuthChallengeResponse Int
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.RespondToAuthChallenge.RespondToAuthChallenge
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.RespondToAuthChallenge.RespondToAuthChallenge
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.RespondToAuthChallenge.RespondToAuthChallenge
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.RespondToAuthChallenge.RespondToAuthChallengeResponse
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.RespondToAuthChallenge.RespondToAuthChallengeResponse
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.RespondToAuthChallenge.RespondToAuthChallengeResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CognitoIdentityProvider.RespondToAuthChallenge.RespondToAuthChallenge
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.RespondToAuthChallenge.RespondToAuthChallengeResponse
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.RespondToAuthChallenge.RespondToAuthChallenge
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.RespondToAuthChallenge.RespondToAuthChallenge
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CognitoIdentityProvider.RespondToAuthChallenge.RespondToAuthChallenge
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.RespondToAuthChallenge.RespondToAuthChallenge
instance Network.AWS.Data.Path.ToPath Network.AWS.CognitoIdentityProvider.RespondToAuthChallenge.RespondToAuthChallenge
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentityProvider.RespondToAuthChallenge.RespondToAuthChallenge


-- | Resends the confirmation (for confirmation of registration) to a
--   specific user in the user pool.
--   
--   This action might generate an SMS text message. Starting June 1, 2021,
--   U.S. telecom carriers require that you register an origination phone
--   number before you can send SMS messages to U.S. phone numbers. If you
--   use SMS text messages in Amazon Cognito, you must register a phone
--   number with <a>Amazon Pinpoint</a>. Cognito will use the the
--   registered number automatically. Otherwise, Cognito users that must
--   receive SMS messages might be unable to sign up, activate their
--   accounts, or sign in.
--   
--   If you have never used SMS text messages with Amazon Cognito or any
--   other Amazon Web Service, Amazon SNS might place your account in SMS
--   sandbox. In
--   <i>&lt;https:</i><i>docs.aws.amazon.com</i>sns<i>latest</i>dg<i>sns-sms-sandbox.html
--   sandbox mode&gt;</i> , you’ll have limitations, such as sending
--   messages to only verified phone numbers. After testing in the sandbox
--   environment, you can move out of the SMS sandbox and into production.
--   For more information, see <a>SMS message settings for Cognito User
--   Pools</a> in the <i>Amazon Cognito Developer Guide</i>.
module Network.AWS.CognitoIdentityProvider.ResendConfirmationCode

-- | Represents the request to resend the confirmation code.
--   
--   <i>See:</i> <a>newResendConfirmationCode</a> smart constructor.
data ResendConfirmationCode
ResendConfirmationCode' :: Maybe (HashMap Text Text) -> Maybe AnalyticsMetadataType -> Maybe UserContextDataType -> Maybe (Sensitive Text) -> Sensitive Text -> Sensitive Text -> ResendConfirmationCode

-- | A map of custom key-value pairs that you can provide as input for any
--   custom workflows that this action triggers.
--   
--   You create custom workflows by assigning Lambda functions to user pool
--   triggers. When you use the ResendConfirmationCode API action, Amazon
--   Cognito invokes the function that is assigned to the <i>custom
--   message</i> trigger. When Amazon Cognito invokes this function, it
--   passes a JSON payload, which the function receives as input. This
--   payload contains a <tt>clientMetadata</tt> attribute, which provides
--   the data that you assigned to the ClientMetadata parameter in your
--   ResendConfirmationCode request. In your function code in Lambda, you
--   can process the <tt>clientMetadata</tt> value to enhance your workflow
--   for your specific needs.
--   
--   For more information, see <a>Customizing User Pool Workflows with
--   Lambda Triggers</a> in the <i>Amazon Cognito Developer Guide</i>.
--   
--   Take the following limitations into consideration when you use the
--   ClientMetadata parameter:
--   
--   <ul>
--   <li>Amazon Cognito does not store the ClientMetadata value. This data
--   is available only to Lambda triggers that are assigned to a user pool
--   to support custom workflows. If your user pool configuration does not
--   include triggers, the ClientMetadata parameter serves no purpose.</li>
--   <li>Amazon Cognito does not validate the ClientMetadata value.</li>
--   <li>Amazon Cognito does not encrypt the the ClientMetadata value, so
--   don't use it to provide sensitive information.</li>
--   </ul>
[$sel:clientMetadata:ResendConfirmationCode'] :: ResendConfirmationCode -> Maybe (HashMap Text Text)

-- | The Amazon Pinpoint analytics metadata for collecting metrics for
--   <tt>ResendConfirmationCode</tt> calls.
[$sel:analyticsMetadata:ResendConfirmationCode'] :: ResendConfirmationCode -> Maybe AnalyticsMetadataType

-- | Contextual data such as the user's device fingerprint, IP address, or
--   location used for evaluating the risk of an unexpected event by Amazon
--   Cognito advanced security.
[$sel:userContextData:ResendConfirmationCode'] :: ResendConfirmationCode -> Maybe UserContextDataType

-- | A keyed-hash message authentication code (HMAC) calculated using the
--   secret key of a user pool client and username plus the client ID in
--   the message.
[$sel:secretHash:ResendConfirmationCode'] :: ResendConfirmationCode -> Maybe (Sensitive Text)

-- | The ID of the client associated with the user pool.
[$sel:clientId:ResendConfirmationCode'] :: ResendConfirmationCode -> Sensitive Text

-- | The user name of the user to whom you wish to resend a confirmation
--   code.
[$sel:username:ResendConfirmationCode'] :: ResendConfirmationCode -> Sensitive Text

-- | Create a value of <a>ResendConfirmationCode</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientMetadata:ResendConfirmationCode'</a>,
--   <a>resendConfirmationCode_clientMetadata</a> - A map of custom
--   key-value pairs that you can provide as input for any custom workflows
--   that this action triggers.
--   
--   You create custom workflows by assigning Lambda functions to user pool
--   triggers. When you use the ResendConfirmationCode API action, Amazon
--   Cognito invokes the function that is assigned to the <i>custom
--   message</i> trigger. When Amazon Cognito invokes this function, it
--   passes a JSON payload, which the function receives as input. This
--   payload contains a <tt>clientMetadata</tt> attribute, which provides
--   the data that you assigned to the ClientMetadata parameter in your
--   ResendConfirmationCode request. In your function code in Lambda, you
--   can process the <tt>clientMetadata</tt> value to enhance your workflow
--   for your specific needs.
--   
--   For more information, see <a>Customizing User Pool Workflows with
--   Lambda Triggers</a> in the <i>Amazon Cognito Developer Guide</i>.
--   
--   Take the following limitations into consideration when you use the
--   ClientMetadata parameter:
--   
--   <ul>
--   <li>Amazon Cognito does not store the ClientMetadata value. This data
--   is available only to Lambda triggers that are assigned to a user pool
--   to support custom workflows. If your user pool configuration does not
--   include triggers, the ClientMetadata parameter serves no purpose.</li>
--   <li>Amazon Cognito does not validate the ClientMetadata value.</li>
--   <li>Amazon Cognito does not encrypt the the ClientMetadata value, so
--   don't use it to provide sensitive information.</li>
--   </ul>
--   
--   <a>$sel:analyticsMetadata:ResendConfirmationCode'</a>,
--   <a>resendConfirmationCode_analyticsMetadata</a> - The Amazon Pinpoint
--   analytics metadata for collecting metrics for
--   <tt>ResendConfirmationCode</tt> calls.
--   
--   <a>$sel:userContextData:ResendConfirmationCode'</a>,
--   <a>resendConfirmationCode_userContextData</a> - Contextual data such
--   as the user's device fingerprint, IP address, or location used for
--   evaluating the risk of an unexpected event by Amazon Cognito advanced
--   security.
--   
--   <a>$sel:secretHash:ResendConfirmationCode'</a>,
--   <a>resendConfirmationCode_secretHash</a> - A keyed-hash message
--   authentication code (HMAC) calculated using the secret key of a user
--   pool client and username plus the client ID in the message.
--   
--   <a>$sel:clientId:ResendConfirmationCode'</a>,
--   <a>resendConfirmationCode_clientId</a> - The ID of the client
--   associated with the user pool.
--   
--   <a>$sel:username:ResendConfirmationCode'</a>,
--   <a>resendConfirmationCode_username</a> - The user name of the user to
--   whom you wish to resend a confirmation code.
newResendConfirmationCode :: Text -> Text -> ResendConfirmationCode

-- | A map of custom key-value pairs that you can provide as input for any
--   custom workflows that this action triggers.
--   
--   You create custom workflows by assigning Lambda functions to user pool
--   triggers. When you use the ResendConfirmationCode API action, Amazon
--   Cognito invokes the function that is assigned to the <i>custom
--   message</i> trigger. When Amazon Cognito invokes this function, it
--   passes a JSON payload, which the function receives as input. This
--   payload contains a <tt>clientMetadata</tt> attribute, which provides
--   the data that you assigned to the ClientMetadata parameter in your
--   ResendConfirmationCode request. In your function code in Lambda, you
--   can process the <tt>clientMetadata</tt> value to enhance your workflow
--   for your specific needs.
--   
--   For more information, see <a>Customizing User Pool Workflows with
--   Lambda Triggers</a> in the <i>Amazon Cognito Developer Guide</i>.
--   
--   Take the following limitations into consideration when you use the
--   ClientMetadata parameter:
--   
--   <ul>
--   <li>Amazon Cognito does not store the ClientMetadata value. This data
--   is available only to Lambda triggers that are assigned to a user pool
--   to support custom workflows. If your user pool configuration does not
--   include triggers, the ClientMetadata parameter serves no purpose.</li>
--   <li>Amazon Cognito does not validate the ClientMetadata value.</li>
--   <li>Amazon Cognito does not encrypt the the ClientMetadata value, so
--   don't use it to provide sensitive information.</li>
--   </ul>
resendConfirmationCode_clientMetadata :: Lens' ResendConfirmationCode (Maybe (HashMap Text Text))

-- | The Amazon Pinpoint analytics metadata for collecting metrics for
--   <tt>ResendConfirmationCode</tt> calls.
resendConfirmationCode_analyticsMetadata :: Lens' ResendConfirmationCode (Maybe AnalyticsMetadataType)

-- | Contextual data such as the user's device fingerprint, IP address, or
--   location used for evaluating the risk of an unexpected event by Amazon
--   Cognito advanced security.
resendConfirmationCode_userContextData :: Lens' ResendConfirmationCode (Maybe UserContextDataType)

-- | A keyed-hash message authentication code (HMAC) calculated using the
--   secret key of a user pool client and username plus the client ID in
--   the message.
resendConfirmationCode_secretHash :: Lens' ResendConfirmationCode (Maybe Text)

-- | The ID of the client associated with the user pool.
resendConfirmationCode_clientId :: Lens' ResendConfirmationCode Text

-- | The user name of the user to whom you wish to resend a confirmation
--   code.
resendConfirmationCode_username :: Lens' ResendConfirmationCode Text

-- | The response from the server when the Amazon Cognito Your User Pools
--   service makes the request to resend a confirmation code.
--   
--   <i>See:</i> <a>newResendConfirmationCodeResponse</a> smart
--   constructor.
data ResendConfirmationCodeResponse
ResendConfirmationCodeResponse' :: Maybe CodeDeliveryDetailsType -> Int -> ResendConfirmationCodeResponse

-- | The code delivery details returned by the server in response to the
--   request to resend the confirmation code.
[$sel:codeDeliveryDetails:ResendConfirmationCodeResponse'] :: ResendConfirmationCodeResponse -> Maybe CodeDeliveryDetailsType

-- | The response's http status code.
[$sel:httpStatus:ResendConfirmationCodeResponse'] :: ResendConfirmationCodeResponse -> Int

-- | Create a value of <a>ResendConfirmationCodeResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:codeDeliveryDetails:ResendConfirmationCodeResponse'</a>,
--   <a>resendConfirmationCodeResponse_codeDeliveryDetails</a> - The code
--   delivery details returned by the server in response to the request to
--   resend the confirmation code.
--   
--   <a>$sel:httpStatus:ResendConfirmationCodeResponse'</a>,
--   <a>resendConfirmationCodeResponse_httpStatus</a> - The response's http
--   status code.
newResendConfirmationCodeResponse :: Int -> ResendConfirmationCodeResponse

-- | The code delivery details returned by the server in response to the
--   request to resend the confirmation code.
resendConfirmationCodeResponse_codeDeliveryDetails :: Lens' ResendConfirmationCodeResponse (Maybe CodeDeliveryDetailsType)

-- | The response's http status code.
resendConfirmationCodeResponse_httpStatus :: Lens' ResendConfirmationCodeResponse Int
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.ResendConfirmationCode.ResendConfirmationCode
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.ResendConfirmationCode.ResendConfirmationCode
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.ResendConfirmationCode.ResendConfirmationCode
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.ResendConfirmationCode.ResendConfirmationCodeResponse
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.ResendConfirmationCode.ResendConfirmationCodeResponse
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.ResendConfirmationCode.ResendConfirmationCodeResponse
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.ResendConfirmationCode.ResendConfirmationCodeResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CognitoIdentityProvider.ResendConfirmationCode.ResendConfirmationCode
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.ResendConfirmationCode.ResendConfirmationCodeResponse
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.ResendConfirmationCode.ResendConfirmationCode
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.ResendConfirmationCode.ResendConfirmationCode
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CognitoIdentityProvider.ResendConfirmationCode.ResendConfirmationCode
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.ResendConfirmationCode.ResendConfirmationCode
instance Network.AWS.Data.Path.ToPath Network.AWS.CognitoIdentityProvider.ResendConfirmationCode.ResendConfirmationCode
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentityProvider.ResendConfirmationCode.ResendConfirmationCode


-- | Lists the users in the specified group.
--   
--   Calling this action requires developer credentials.
--   
--   This operation returns paginated results.
module Network.AWS.CognitoIdentityProvider.ListUsersInGroup

-- | <i>See:</i> <a>newListUsersInGroup</a> smart constructor.
data ListUsersInGroup
ListUsersInGroup' :: Maybe Text -> Maybe Natural -> Text -> Text -> ListUsersInGroup

-- | An identifier that was returned from the previous call to this
--   operation, which can be used to return the next set of items in the
--   list.
[$sel:nextToken:ListUsersInGroup'] :: ListUsersInGroup -> Maybe Text

-- | The limit of the request to list users.
[$sel:limit:ListUsersInGroup'] :: ListUsersInGroup -> Maybe Natural

-- | The user pool ID for the user pool.
[$sel:userPoolId:ListUsersInGroup'] :: ListUsersInGroup -> Text

-- | The name of the group.
[$sel:groupName:ListUsersInGroup'] :: ListUsersInGroup -> Text

-- | Create a value of <a>ListUsersInGroup</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListUsersInGroup'</a>,
--   <a>listUsersInGroup_nextToken</a> - An identifier that was returned
--   from the previous call to this operation, which can be used to return
--   the next set of items in the list.
--   
--   <a>$sel:limit:ListUsersInGroup'</a>, <a>listUsersInGroup_limit</a> -
--   The limit of the request to list users.
--   
--   <a>$sel:userPoolId:ListUsersInGroup'</a>,
--   <a>listUsersInGroup_userPoolId</a> - The user pool ID for the user
--   pool.
--   
--   <a>$sel:groupName:ListUsersInGroup'</a>,
--   <a>listUsersInGroup_groupName</a> - The name of the group.
newListUsersInGroup :: Text -> Text -> ListUsersInGroup

-- | An identifier that was returned from the previous call to this
--   operation, which can be used to return the next set of items in the
--   list.
listUsersInGroup_nextToken :: Lens' ListUsersInGroup (Maybe Text)

-- | The limit of the request to list users.
listUsersInGroup_limit :: Lens' ListUsersInGroup (Maybe Natural)

-- | The user pool ID for the user pool.
listUsersInGroup_userPoolId :: Lens' ListUsersInGroup Text

-- | The name of the group.
listUsersInGroup_groupName :: Lens' ListUsersInGroup Text

-- | <i>See:</i> <a>newListUsersInGroupResponse</a> smart constructor.
data ListUsersInGroupResponse
ListUsersInGroupResponse' :: Maybe [UserType] -> Maybe Text -> Int -> ListUsersInGroupResponse

-- | The users returned in the request to list users.
[$sel:users:ListUsersInGroupResponse'] :: ListUsersInGroupResponse -> Maybe [UserType]

-- | An identifier that was returned from the previous call to this
--   operation, which can be used to return the next set of items in the
--   list.
[$sel:nextToken:ListUsersInGroupResponse'] :: ListUsersInGroupResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListUsersInGroupResponse'] :: ListUsersInGroupResponse -> Int

-- | Create a value of <a>ListUsersInGroupResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:users:ListUsersInGroupResponse'</a>,
--   <a>listUsersInGroupResponse_users</a> - The users returned in the
--   request to list users.
--   
--   <a>$sel:nextToken:ListUsersInGroup'</a>,
--   <a>listUsersInGroupResponse_nextToken</a> - An identifier that was
--   returned from the previous call to this operation, which can be used
--   to return the next set of items in the list.
--   
--   <a>$sel:httpStatus:ListUsersInGroupResponse'</a>,
--   <a>listUsersInGroupResponse_httpStatus</a> - The response's http
--   status code.
newListUsersInGroupResponse :: Int -> ListUsersInGroupResponse

-- | The users returned in the request to list users.
listUsersInGroupResponse_users :: Lens' ListUsersInGroupResponse (Maybe [UserType])

-- | An identifier that was returned from the previous call to this
--   operation, which can be used to return the next set of items in the
--   list.
listUsersInGroupResponse_nextToken :: Lens' ListUsersInGroupResponse (Maybe Text)

-- | The response's http status code.
listUsersInGroupResponse_httpStatus :: Lens' ListUsersInGroupResponse Int
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.ListUsersInGroup.ListUsersInGroup
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.ListUsersInGroup.ListUsersInGroup
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.ListUsersInGroup.ListUsersInGroup
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.ListUsersInGroup.ListUsersInGroup
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.ListUsersInGroup.ListUsersInGroupResponse
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.ListUsersInGroup.ListUsersInGroupResponse
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.ListUsersInGroup.ListUsersInGroupResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CognitoIdentityProvider.ListUsersInGroup.ListUsersInGroup
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.ListUsersInGroup.ListUsersInGroupResponse
instance Network.AWS.Pager.AWSPager Network.AWS.CognitoIdentityProvider.ListUsersInGroup.ListUsersInGroup
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.ListUsersInGroup.ListUsersInGroup
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.ListUsersInGroup.ListUsersInGroup
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CognitoIdentityProvider.ListUsersInGroup.ListUsersInGroup
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.ListUsersInGroup.ListUsersInGroup
instance Network.AWS.Data.Path.ToPath Network.AWS.CognitoIdentityProvider.ListUsersInGroup.ListUsersInGroup
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentityProvider.ListUsersInGroup.ListUsersInGroup


-- | Lists the users in the Amazon Cognito user pool.
--   
--   This operation returns paginated results.
module Network.AWS.CognitoIdentityProvider.ListUsers

-- | Represents the request to list users.
--   
--   <i>See:</i> <a>newListUsers</a> smart constructor.
data ListUsers
ListUsers' :: Maybe Text -> Maybe [Text] -> Maybe Natural -> Maybe Text -> Text -> ListUsers

-- | An identifier that was returned from the previous call to this
--   operation, which can be used to return the next set of items in the
--   list.
[$sel:paginationToken:ListUsers'] :: ListUsers -> Maybe Text

-- | An array of strings, where each string is the name of a user attribute
--   to be returned for each user in the search results. If the array is
--   null, all attributes are returned.
[$sel:attributesToGet:ListUsers'] :: ListUsers -> Maybe [Text]

-- | Maximum number of users to be returned.
[$sel:limit:ListUsers'] :: ListUsers -> Maybe Natural

-- | A filter string of the form "<i>AttributeName</i> <i>Filter-Type</i>
--   "<i>AttributeValue</i>"". Quotation marks within the filter string
--   must be escaped using the backslash (\) character. For example,
--   "<tt>family_name</tt> = \"Reddy\"".
--   
--   <ul>
--   <li><i>AttributeName</i>: The name of the attribute to search for. You
--   can only search for one attribute at a time.</li>
--   <li><i>Filter-Type</i>: For an exact match, use =, for example,
--   "<tt>given_name</tt> = \"Jon\"". For a prefix ("starts with") match,
--   use ^=, for example, "<tt>given_name</tt> ^= \"Jon\"".</li>
--   <li><i>AttributeValue</i>: The attribute value that must be matched
--   for each user.</li>
--   </ul>
--   
--   If the filter string is empty, <tt>ListUsers</tt> returns all users in
--   the user pool.
--   
--   You can only search for the following standard attributes:
--   
--   <ul>
--   <li><tt>username</tt> (case-sensitive)</li>
--   <li><pre>email</pre></li>
--   <li><pre>phone_number</pre></li>
--   <li><pre>name</pre></li>
--   <li><pre>given_name</pre></li>
--   <li><pre>family_name</pre></li>
--   <li><pre>preferred_username</pre></li>
--   <li><tt>cognito:user_status</tt> (called <b>Status</b> in the Console)
--   (case-insensitive)</li>
--   <li><pre>status (called Enabled in the Console)
--   (case-sensitive)</pre></li>
--   <li><pre>sub</pre></li>
--   </ul>
--   
--   Custom attributes are not searchable.
--   
--   For more information, see <a>Searching for Users Using the ListUsers
--   API</a> and <a>Examples of Using the ListUsers API</a> in the
--   <i>Amazon Cognito Developer Guide</i>.
[$sel:filter':ListUsers'] :: ListUsers -> Maybe Text

-- | The user pool ID for the user pool on which the search should be
--   performed.
[$sel:userPoolId:ListUsers'] :: ListUsers -> Text

-- | Create a value of <a>ListUsers</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:paginationToken:ListUsers'</a>,
--   <a>listUsers_paginationToken</a> - An identifier that was returned
--   from the previous call to this operation, which can be used to return
--   the next set of items in the list.
--   
--   <a>$sel:attributesToGet:ListUsers'</a>,
--   <a>listUsers_attributesToGet</a> - An array of strings, where each
--   string is the name of a user attribute to be returned for each user in
--   the search results. If the array is null, all attributes are returned.
--   
--   <a>$sel:limit:ListUsers'</a>, <a>listUsers_limit</a> - Maximum number
--   of users to be returned.
--   
--   <a>$sel:filter':ListUsers'</a>, <a>listUsers_filter</a> - A filter
--   string of the form "<i>AttributeName</i> <i>Filter-Type</i>
--   "<i>AttributeValue</i>"". Quotation marks within the filter string
--   must be escaped using the backslash (\) character. For example,
--   "<tt>family_name</tt> = \"Reddy\"".
--   
--   <ul>
--   <li><i>AttributeName</i>: The name of the attribute to search for. You
--   can only search for one attribute at a time.</li>
--   <li><i>Filter-Type</i>: For an exact match, use =, for example,
--   "<tt>given_name</tt> = \"Jon\"". For a prefix ("starts with") match,
--   use ^=, for example, "<tt>given_name</tt> ^= \"Jon\"".</li>
--   <li><i>AttributeValue</i>: The attribute value that must be matched
--   for each user.</li>
--   </ul>
--   
--   If the filter string is empty, <tt>ListUsers</tt> returns all users in
--   the user pool.
--   
--   You can only search for the following standard attributes:
--   
--   <ul>
--   <li><tt>username</tt> (case-sensitive)</li>
--   <li><pre>email</pre></li>
--   <li><pre>phone_number</pre></li>
--   <li><pre>name</pre></li>
--   <li><pre>given_name</pre></li>
--   <li><pre>family_name</pre></li>
--   <li><pre>preferred_username</pre></li>
--   <li><tt>cognito:user_status</tt> (called <b>Status</b> in the Console)
--   (case-insensitive)</li>
--   <li><pre>status (called Enabled in the Console)
--   (case-sensitive)</pre></li>
--   <li><pre>sub</pre></li>
--   </ul>
--   
--   Custom attributes are not searchable.
--   
--   For more information, see <a>Searching for Users Using the ListUsers
--   API</a> and <a>Examples of Using the ListUsers API</a> in the
--   <i>Amazon Cognito Developer Guide</i>.
--   
--   <a>$sel:userPoolId:ListUsers'</a>, <a>listUsers_userPoolId</a> - The
--   user pool ID for the user pool on which the search should be
--   performed.
newListUsers :: Text -> ListUsers

-- | An identifier that was returned from the previous call to this
--   operation, which can be used to return the next set of items in the
--   list.
listUsers_paginationToken :: Lens' ListUsers (Maybe Text)

-- | An array of strings, where each string is the name of a user attribute
--   to be returned for each user in the search results. If the array is
--   null, all attributes are returned.
listUsers_attributesToGet :: Lens' ListUsers (Maybe [Text])

-- | Maximum number of users to be returned.
listUsers_limit :: Lens' ListUsers (Maybe Natural)

-- | A filter string of the form "<i>AttributeName</i> <i>Filter-Type</i>
--   "<i>AttributeValue</i>"". Quotation marks within the filter string
--   must be escaped using the backslash (\) character. For example,
--   "<tt>family_name</tt> = \"Reddy\"".
--   
--   <ul>
--   <li><i>AttributeName</i>: The name of the attribute to search for. You
--   can only search for one attribute at a time.</li>
--   <li><i>Filter-Type</i>: For an exact match, use =, for example,
--   "<tt>given_name</tt> = \"Jon\"". For a prefix ("starts with") match,
--   use ^=, for example, "<tt>given_name</tt> ^= \"Jon\"".</li>
--   <li><i>AttributeValue</i>: The attribute value that must be matched
--   for each user.</li>
--   </ul>
--   
--   If the filter string is empty, <tt>ListUsers</tt> returns all users in
--   the user pool.
--   
--   You can only search for the following standard attributes:
--   
--   <ul>
--   <li><tt>username</tt> (case-sensitive)</li>
--   <li><pre>email</pre></li>
--   <li><pre>phone_number</pre></li>
--   <li><pre>name</pre></li>
--   <li><pre>given_name</pre></li>
--   <li><pre>family_name</pre></li>
--   <li><pre>preferred_username</pre></li>
--   <li><tt>cognito:user_status</tt> (called <b>Status</b> in the Console)
--   (case-insensitive)</li>
--   <li><pre>status (called Enabled in the Console)
--   (case-sensitive)</pre></li>
--   <li><pre>sub</pre></li>
--   </ul>
--   
--   Custom attributes are not searchable.
--   
--   For more information, see <a>Searching for Users Using the ListUsers
--   API</a> and <a>Examples of Using the ListUsers API</a> in the
--   <i>Amazon Cognito Developer Guide</i>.
listUsers_filter :: Lens' ListUsers (Maybe Text)

-- | The user pool ID for the user pool on which the search should be
--   performed.
listUsers_userPoolId :: Lens' ListUsers Text

-- | The response from the request to list users.
--   
--   <i>See:</i> <a>newListUsersResponse</a> smart constructor.
data ListUsersResponse
ListUsersResponse' :: Maybe Text -> Maybe [UserType] -> Int -> ListUsersResponse

-- | An identifier that was returned from the previous call to this
--   operation, which can be used to return the next set of items in the
--   list.
[$sel:paginationToken:ListUsersResponse'] :: ListUsersResponse -> Maybe Text

-- | The users returned in the request to list users.
[$sel:users:ListUsersResponse'] :: ListUsersResponse -> Maybe [UserType]

-- | The response's http status code.
[$sel:httpStatus:ListUsersResponse'] :: ListUsersResponse -> Int

-- | Create a value of <a>ListUsersResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:paginationToken:ListUsers'</a>,
--   <a>listUsersResponse_paginationToken</a> - An identifier that was
--   returned from the previous call to this operation, which can be used
--   to return the next set of items in the list.
--   
--   <a>$sel:users:ListUsersResponse'</a>, <a>listUsersResponse_users</a> -
--   The users returned in the request to list users.
--   
--   <a>$sel:httpStatus:ListUsersResponse'</a>,
--   <a>listUsersResponse_httpStatus</a> - The response's http status code.
newListUsersResponse :: Int -> ListUsersResponse

-- | An identifier that was returned from the previous call to this
--   operation, which can be used to return the next set of items in the
--   list.
listUsersResponse_paginationToken :: Lens' ListUsersResponse (Maybe Text)

-- | The users returned in the request to list users.
listUsersResponse_users :: Lens' ListUsersResponse (Maybe [UserType])

-- | The response's http status code.
listUsersResponse_httpStatus :: Lens' ListUsersResponse Int
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.ListUsers.ListUsers
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.ListUsers.ListUsers
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.ListUsers.ListUsers
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.ListUsers.ListUsers
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.ListUsers.ListUsersResponse
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.ListUsers.ListUsersResponse
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.ListUsers.ListUsersResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CognitoIdentityProvider.ListUsers.ListUsers
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.ListUsers.ListUsersResponse
instance Network.AWS.Pager.AWSPager Network.AWS.CognitoIdentityProvider.ListUsers.ListUsers
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.ListUsers.ListUsers
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.ListUsers.ListUsers
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CognitoIdentityProvider.ListUsers.ListUsers
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.ListUsers.ListUsers
instance Network.AWS.Data.Path.ToPath Network.AWS.CognitoIdentityProvider.ListUsers.ListUsers
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentityProvider.ListUsers.ListUsers


-- | Lists the user pools associated with an account.
--   
--   This operation returns paginated results.
module Network.AWS.CognitoIdentityProvider.ListUserPools

-- | Represents the request to list user pools.
--   
--   <i>See:</i> <a>newListUserPools</a> smart constructor.
data ListUserPools
ListUserPools' :: Maybe Text -> Natural -> ListUserPools

-- | An identifier that was returned from the previous call to this
--   operation, which can be used to return the next set of items in the
--   list.
[$sel:nextToken:ListUserPools'] :: ListUserPools -> Maybe Text

-- | The maximum number of results you want the request to return when
--   listing the user pools.
[$sel:maxResults:ListUserPools'] :: ListUserPools -> Natural

-- | Create a value of <a>ListUserPools</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListUserPools'</a>, <a>listUserPools_nextToken</a> -
--   An identifier that was returned from the previous call to this
--   operation, which can be used to return the next set of items in the
--   list.
--   
--   <a>$sel:maxResults:ListUserPools'</a>, <a>listUserPools_maxResults</a>
--   - The maximum number of results you want the request to return when
--   listing the user pools.
newListUserPools :: Natural -> ListUserPools

-- | An identifier that was returned from the previous call to this
--   operation, which can be used to return the next set of items in the
--   list.
listUserPools_nextToken :: Lens' ListUserPools (Maybe Text)

-- | The maximum number of results you want the request to return when
--   listing the user pools.
listUserPools_maxResults :: Lens' ListUserPools Natural

-- | Represents the response to list user pools.
--   
--   <i>See:</i> <a>newListUserPoolsResponse</a> smart constructor.
data ListUserPoolsResponse
ListUserPoolsResponse' :: Maybe [UserPoolDescriptionType] -> Maybe Text -> Int -> ListUserPoolsResponse

-- | The user pools from the response to list users.
[$sel:userPools:ListUserPoolsResponse'] :: ListUserPoolsResponse -> Maybe [UserPoolDescriptionType]

-- | An identifier that was returned from the previous call to this
--   operation, which can be used to return the next set of items in the
--   list.
[$sel:nextToken:ListUserPoolsResponse'] :: ListUserPoolsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListUserPoolsResponse'] :: ListUserPoolsResponse -> Int

-- | Create a value of <a>ListUserPoolsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userPools:ListUserPoolsResponse'</a>,
--   <a>listUserPoolsResponse_userPools</a> - The user pools from the
--   response to list users.
--   
--   <a>$sel:nextToken:ListUserPools'</a>,
--   <a>listUserPoolsResponse_nextToken</a> - An identifier that was
--   returned from the previous call to this operation, which can be used
--   to return the next set of items in the list.
--   
--   <a>$sel:httpStatus:ListUserPoolsResponse'</a>,
--   <a>listUserPoolsResponse_httpStatus</a> - The response's http status
--   code.
newListUserPoolsResponse :: Int -> ListUserPoolsResponse

-- | The user pools from the response to list users.
listUserPoolsResponse_userPools :: Lens' ListUserPoolsResponse (Maybe [UserPoolDescriptionType])

-- | An identifier that was returned from the previous call to this
--   operation, which can be used to return the next set of items in the
--   list.
listUserPoolsResponse_nextToken :: Lens' ListUserPoolsResponse (Maybe Text)

-- | The response's http status code.
listUserPoolsResponse_httpStatus :: Lens' ListUserPoolsResponse Int
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.ListUserPools.ListUserPools
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.ListUserPools.ListUserPools
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.ListUserPools.ListUserPools
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.ListUserPools.ListUserPools
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.ListUserPools.ListUserPoolsResponse
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.ListUserPools.ListUserPoolsResponse
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.ListUserPools.ListUserPoolsResponse
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.ListUserPools.ListUserPoolsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CognitoIdentityProvider.ListUserPools.ListUserPools
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.ListUserPools.ListUserPoolsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.CognitoIdentityProvider.ListUserPools.ListUserPools
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.ListUserPools.ListUserPools
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.ListUserPools.ListUserPools
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CognitoIdentityProvider.ListUserPools.ListUserPools
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.ListUserPools.ListUserPools
instance Network.AWS.Data.Path.ToPath Network.AWS.CognitoIdentityProvider.ListUserPools.ListUserPools
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentityProvider.ListUserPools.ListUserPools


-- | Lists the clients that have been created for the specified user pool.
--   
--   This operation returns paginated results.
module Network.AWS.CognitoIdentityProvider.ListUserPoolClients

-- | Represents the request to list the user pool clients.
--   
--   <i>See:</i> <a>newListUserPoolClients</a> smart constructor.
data ListUserPoolClients
ListUserPoolClients' :: Maybe Text -> Maybe Natural -> Text -> ListUserPoolClients

-- | An identifier that was returned from the previous call to this
--   operation, which can be used to return the next set of items in the
--   list.
[$sel:nextToken:ListUserPoolClients'] :: ListUserPoolClients -> Maybe Text

-- | The maximum number of results you want the request to return when
--   listing the user pool clients.
[$sel:maxResults:ListUserPoolClients'] :: ListUserPoolClients -> Maybe Natural

-- | The user pool ID for the user pool where you want to list user pool
--   clients.
[$sel:userPoolId:ListUserPoolClients'] :: ListUserPoolClients -> Text

-- | Create a value of <a>ListUserPoolClients</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListUserPoolClients'</a>,
--   <a>listUserPoolClients_nextToken</a> - An identifier that was returned
--   from the previous call to this operation, which can be used to return
--   the next set of items in the list.
--   
--   <a>$sel:maxResults:ListUserPoolClients'</a>,
--   <a>listUserPoolClients_maxResults</a> - The maximum number of results
--   you want the request to return when listing the user pool clients.
--   
--   <a>$sel:userPoolId:ListUserPoolClients'</a>,
--   <a>listUserPoolClients_userPoolId</a> - The user pool ID for the user
--   pool where you want to list user pool clients.
newListUserPoolClients :: Text -> ListUserPoolClients

-- | An identifier that was returned from the previous call to this
--   operation, which can be used to return the next set of items in the
--   list.
listUserPoolClients_nextToken :: Lens' ListUserPoolClients (Maybe Text)

-- | The maximum number of results you want the request to return when
--   listing the user pool clients.
listUserPoolClients_maxResults :: Lens' ListUserPoolClients (Maybe Natural)

-- | The user pool ID for the user pool where you want to list user pool
--   clients.
listUserPoolClients_userPoolId :: Lens' ListUserPoolClients Text

-- | Represents the response from the server that lists user pool clients.
--   
--   <i>See:</i> <a>newListUserPoolClientsResponse</a> smart constructor.
data ListUserPoolClientsResponse
ListUserPoolClientsResponse' :: Maybe Text -> Maybe [UserPoolClientDescription] -> Int -> ListUserPoolClientsResponse

-- | An identifier that was returned from the previous call to this
--   operation, which can be used to return the next set of items in the
--   list.
[$sel:nextToken:ListUserPoolClientsResponse'] :: ListUserPoolClientsResponse -> Maybe Text

-- | The user pool clients in the response that lists user pool clients.
[$sel:userPoolClients:ListUserPoolClientsResponse'] :: ListUserPoolClientsResponse -> Maybe [UserPoolClientDescription]

-- | The response's http status code.
[$sel:httpStatus:ListUserPoolClientsResponse'] :: ListUserPoolClientsResponse -> Int

-- | Create a value of <a>ListUserPoolClientsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListUserPoolClients'</a>,
--   <a>listUserPoolClientsResponse_nextToken</a> - An identifier that was
--   returned from the previous call to this operation, which can be used
--   to return the next set of items in the list.
--   
--   <a>$sel:userPoolClients:ListUserPoolClientsResponse'</a>,
--   <a>listUserPoolClientsResponse_userPoolClients</a> - The user pool
--   clients in the response that lists user pool clients.
--   
--   <a>$sel:httpStatus:ListUserPoolClientsResponse'</a>,
--   <a>listUserPoolClientsResponse_httpStatus</a> - The response's http
--   status code.
newListUserPoolClientsResponse :: Int -> ListUserPoolClientsResponse

-- | An identifier that was returned from the previous call to this
--   operation, which can be used to return the next set of items in the
--   list.
listUserPoolClientsResponse_nextToken :: Lens' ListUserPoolClientsResponse (Maybe Text)

-- | The user pool clients in the response that lists user pool clients.
listUserPoolClientsResponse_userPoolClients :: Lens' ListUserPoolClientsResponse (Maybe [UserPoolClientDescription])

-- | The response's http status code.
listUserPoolClientsResponse_httpStatus :: Lens' ListUserPoolClientsResponse Int
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.ListUserPoolClients.ListUserPoolClients
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.ListUserPoolClients.ListUserPoolClients
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.ListUserPoolClients.ListUserPoolClients
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.ListUserPoolClients.ListUserPoolClients
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.ListUserPoolClients.ListUserPoolClientsResponse
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.ListUserPoolClients.ListUserPoolClientsResponse
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.ListUserPoolClients.ListUserPoolClientsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CognitoIdentityProvider.ListUserPoolClients.ListUserPoolClients
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.ListUserPoolClients.ListUserPoolClientsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.CognitoIdentityProvider.ListUserPoolClients.ListUserPoolClients
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.ListUserPoolClients.ListUserPoolClients
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.ListUserPoolClients.ListUserPoolClients
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CognitoIdentityProvider.ListUserPoolClients.ListUserPoolClients
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.ListUserPoolClients.ListUserPoolClients
instance Network.AWS.Data.Path.ToPath Network.AWS.CognitoIdentityProvider.ListUserPoolClients.ListUserPoolClients
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentityProvider.ListUserPoolClients.ListUserPoolClients


-- | Lists the user import jobs.
module Network.AWS.CognitoIdentityProvider.ListUserImportJobs

-- | Represents the request to list the user import jobs.
--   
--   <i>See:</i> <a>newListUserImportJobs</a> smart constructor.
data ListUserImportJobs
ListUserImportJobs' :: Maybe Text -> Text -> Natural -> ListUserImportJobs

-- | An identifier that was returned from the previous call to
--   <tt>ListUserImportJobs</tt>, which can be used to return the next set
--   of import jobs in the list.
[$sel:paginationToken:ListUserImportJobs'] :: ListUserImportJobs -> Maybe Text

-- | The user pool ID for the user pool that the users are being imported
--   into.
[$sel:userPoolId:ListUserImportJobs'] :: ListUserImportJobs -> Text

-- | The maximum number of import jobs you want the request to return.
[$sel:maxResults:ListUserImportJobs'] :: ListUserImportJobs -> Natural

-- | Create a value of <a>ListUserImportJobs</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:paginationToken:ListUserImportJobs'</a>,
--   <a>listUserImportJobs_paginationToken</a> - An identifier that was
--   returned from the previous call to <tt>ListUserImportJobs</tt>, which
--   can be used to return the next set of import jobs in the list.
--   
--   <a>$sel:userPoolId:ListUserImportJobs'</a>,
--   <a>listUserImportJobs_userPoolId</a> - The user pool ID for the user
--   pool that the users are being imported into.
--   
--   <a>$sel:maxResults:ListUserImportJobs'</a>,
--   <a>listUserImportJobs_maxResults</a> - The maximum number of import
--   jobs you want the request to return.
newListUserImportJobs :: Text -> Natural -> ListUserImportJobs

-- | An identifier that was returned from the previous call to
--   <tt>ListUserImportJobs</tt>, which can be used to return the next set
--   of import jobs in the list.
listUserImportJobs_paginationToken :: Lens' ListUserImportJobs (Maybe Text)

-- | The user pool ID for the user pool that the users are being imported
--   into.
listUserImportJobs_userPoolId :: Lens' ListUserImportJobs Text

-- | The maximum number of import jobs you want the request to return.
listUserImportJobs_maxResults :: Lens' ListUserImportJobs Natural

-- | Represents the response from the server to the request to list the
--   user import jobs.
--   
--   <i>See:</i> <a>newListUserImportJobsResponse</a> smart constructor.
data ListUserImportJobsResponse
ListUserImportJobsResponse' :: Maybe Text -> Maybe (NonEmpty UserImportJobType) -> Int -> ListUserImportJobsResponse

-- | An identifier that can be used to return the next set of user import
--   jobs in the list.
[$sel:paginationToken:ListUserImportJobsResponse'] :: ListUserImportJobsResponse -> Maybe Text

-- | The user import jobs.
[$sel:userImportJobs:ListUserImportJobsResponse'] :: ListUserImportJobsResponse -> Maybe (NonEmpty UserImportJobType)

-- | The response's http status code.
[$sel:httpStatus:ListUserImportJobsResponse'] :: ListUserImportJobsResponse -> Int

-- | Create a value of <a>ListUserImportJobsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:paginationToken:ListUserImportJobs'</a>,
--   <a>listUserImportJobsResponse_paginationToken</a> - An identifier that
--   can be used to return the next set of user import jobs in the list.
--   
--   <a>$sel:userImportJobs:ListUserImportJobsResponse'</a>,
--   <a>listUserImportJobsResponse_userImportJobs</a> - The user import
--   jobs.
--   
--   <a>$sel:httpStatus:ListUserImportJobsResponse'</a>,
--   <a>listUserImportJobsResponse_httpStatus</a> - The response's http
--   status code.
newListUserImportJobsResponse :: Int -> ListUserImportJobsResponse

-- | An identifier that can be used to return the next set of user import
--   jobs in the list.
listUserImportJobsResponse_paginationToken :: Lens' ListUserImportJobsResponse (Maybe Text)

-- | The user import jobs.
listUserImportJobsResponse_userImportJobs :: Lens' ListUserImportJobsResponse (Maybe (NonEmpty UserImportJobType))

-- | The response's http status code.
listUserImportJobsResponse_httpStatus :: Lens' ListUserImportJobsResponse Int
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.ListUserImportJobs.ListUserImportJobs
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.ListUserImportJobs.ListUserImportJobs
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.ListUserImportJobs.ListUserImportJobs
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.ListUserImportJobs.ListUserImportJobs
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.ListUserImportJobs.ListUserImportJobsResponse
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.ListUserImportJobs.ListUserImportJobsResponse
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.ListUserImportJobs.ListUserImportJobsResponse
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.ListUserImportJobs.ListUserImportJobsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CognitoIdentityProvider.ListUserImportJobs.ListUserImportJobs
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.ListUserImportJobs.ListUserImportJobsResponse
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.ListUserImportJobs.ListUserImportJobs
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.ListUserImportJobs.ListUserImportJobs
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CognitoIdentityProvider.ListUserImportJobs.ListUserImportJobs
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.ListUserImportJobs.ListUserImportJobs
instance Network.AWS.Data.Path.ToPath Network.AWS.CognitoIdentityProvider.ListUserImportJobs.ListUserImportJobs
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentityProvider.ListUserImportJobs.ListUserImportJobs


-- | Lists the tags that are assigned to an Amazon Cognito user pool.
--   
--   A tag is a label that you can apply to user pools to categorize and
--   manage them in different ways, such as by purpose, owner, environment,
--   or other criteria.
--   
--   You can use this action up to 10 times per second, per account.
module Network.AWS.CognitoIdentityProvider.ListTagsForResource

-- | <i>See:</i> <a>newListTagsForResource</a> smart constructor.
data ListTagsForResource
ListTagsForResource' :: Text -> ListTagsForResource

-- | The Amazon Resource Name (ARN) of the user pool that the tags are
--   assigned to.
[$sel:resourceArn:ListTagsForResource'] :: ListTagsForResource -> Text

-- | Create a value of <a>ListTagsForResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:ListTagsForResource'</a>,
--   <a>listTagsForResource_resourceArn</a> - The Amazon Resource Name
--   (ARN) of the user pool that the tags are assigned to.
newListTagsForResource :: Text -> ListTagsForResource

-- | The Amazon Resource Name (ARN) of the user pool that the tags are
--   assigned to.
listTagsForResource_resourceArn :: Lens' ListTagsForResource Text

-- | <i>See:</i> <a>newListTagsForResourceResponse</a> smart constructor.
data ListTagsForResourceResponse
ListTagsForResourceResponse' :: Maybe (HashMap Text Text) -> Int -> ListTagsForResourceResponse

-- | The tags that are assigned to the user pool.
[$sel:tags:ListTagsForResourceResponse'] :: ListTagsForResourceResponse -> Maybe (HashMap Text Text)

-- | The response's http status code.
[$sel:httpStatus:ListTagsForResourceResponse'] :: ListTagsForResourceResponse -> Int

-- | Create a value of <a>ListTagsForResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_tags</a> - The tags that are assigned
--   to the user pool.
--   
--   <a>$sel:httpStatus:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_httpStatus</a> - The response's http
--   status code.
newListTagsForResourceResponse :: Int -> ListTagsForResourceResponse

-- | The tags that are assigned to the user pool.
listTagsForResourceResponse_tags :: Lens' ListTagsForResourceResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
listTagsForResourceResponse_httpStatus :: Lens' ListTagsForResourceResponse Int
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.ListTagsForResource.ListTagsForResource
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.ListTagsForResource.ListTagsForResource
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.ListTagsForResource.ListTagsForResource
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.ListTagsForResource.ListTagsForResource
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.ListTagsForResource.ListTagsForResourceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CognitoIdentityProvider.ListTagsForResource.ListTagsForResource
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.ListTagsForResource.ListTagsForResourceResponse
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.ListTagsForResource.ListTagsForResource
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.ListTagsForResource.ListTagsForResource
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CognitoIdentityProvider.ListTagsForResource.ListTagsForResource
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.ListTagsForResource.ListTagsForResource
instance Network.AWS.Data.Path.ToPath Network.AWS.CognitoIdentityProvider.ListTagsForResource.ListTagsForResource
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentityProvider.ListTagsForResource.ListTagsForResource


-- | Lists the resource servers for a user pool.
--   
--   This operation returns paginated results.
module Network.AWS.CognitoIdentityProvider.ListResourceServers

-- | <i>See:</i> <a>newListResourceServers</a> smart constructor.
data ListResourceServers
ListResourceServers' :: Maybe Text -> Maybe Natural -> Text -> ListResourceServers

-- | A pagination token.
[$sel:nextToken:ListResourceServers'] :: ListResourceServers -> Maybe Text

-- | The maximum number of resource servers to return.
[$sel:maxResults:ListResourceServers'] :: ListResourceServers -> Maybe Natural

-- | The user pool ID for the user pool.
[$sel:userPoolId:ListResourceServers'] :: ListResourceServers -> Text

-- | Create a value of <a>ListResourceServers</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListResourceServers'</a>,
--   <a>listResourceServers_nextToken</a> - A pagination token.
--   
--   <a>$sel:maxResults:ListResourceServers'</a>,
--   <a>listResourceServers_maxResults</a> - The maximum number of resource
--   servers to return.
--   
--   <a>$sel:userPoolId:ListResourceServers'</a>,
--   <a>listResourceServers_userPoolId</a> - The user pool ID for the user
--   pool.
newListResourceServers :: Text -> ListResourceServers

-- | A pagination token.
listResourceServers_nextToken :: Lens' ListResourceServers (Maybe Text)

-- | The maximum number of resource servers to return.
listResourceServers_maxResults :: Lens' ListResourceServers (Maybe Natural)

-- | The user pool ID for the user pool.
listResourceServers_userPoolId :: Lens' ListResourceServers Text

-- | <i>See:</i> <a>newListResourceServersResponse</a> smart constructor.
data ListResourceServersResponse
ListResourceServersResponse' :: Maybe Text -> Int -> [ResourceServerType] -> ListResourceServersResponse

-- | A pagination token.
[$sel:nextToken:ListResourceServersResponse'] :: ListResourceServersResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListResourceServersResponse'] :: ListResourceServersResponse -> Int

-- | The resource servers.
[$sel:resourceServers:ListResourceServersResponse'] :: ListResourceServersResponse -> [ResourceServerType]

-- | Create a value of <a>ListResourceServersResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListResourceServers'</a>,
--   <a>listResourceServersResponse_nextToken</a> - A pagination token.
--   
--   <a>$sel:httpStatus:ListResourceServersResponse'</a>,
--   <a>listResourceServersResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:resourceServers:ListResourceServersResponse'</a>,
--   <a>listResourceServersResponse_resourceServers</a> - The resource
--   servers.
newListResourceServersResponse :: Int -> ListResourceServersResponse

-- | A pagination token.
listResourceServersResponse_nextToken :: Lens' ListResourceServersResponse (Maybe Text)

-- | The response's http status code.
listResourceServersResponse_httpStatus :: Lens' ListResourceServersResponse Int

-- | The resource servers.
listResourceServersResponse_resourceServers :: Lens' ListResourceServersResponse [ResourceServerType]
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.ListResourceServers.ListResourceServers
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.ListResourceServers.ListResourceServers
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.ListResourceServers.ListResourceServers
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.ListResourceServers.ListResourceServers
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.ListResourceServers.ListResourceServersResponse
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.ListResourceServers.ListResourceServersResponse
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.ListResourceServers.ListResourceServersResponse
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.ListResourceServers.ListResourceServersResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CognitoIdentityProvider.ListResourceServers.ListResourceServers
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.ListResourceServers.ListResourceServersResponse
instance Network.AWS.Pager.AWSPager Network.AWS.CognitoIdentityProvider.ListResourceServers.ListResourceServers
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.ListResourceServers.ListResourceServers
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.ListResourceServers.ListResourceServers
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CognitoIdentityProvider.ListResourceServers.ListResourceServers
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.ListResourceServers.ListResourceServers
instance Network.AWS.Data.Path.ToPath Network.AWS.CognitoIdentityProvider.ListResourceServers.ListResourceServers
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentityProvider.ListResourceServers.ListResourceServers


-- | Lists information about all identity providers for a user pool.
--   
--   This operation returns paginated results.
module Network.AWS.CognitoIdentityProvider.ListIdentityProviders

-- | <i>See:</i> <a>newListIdentityProviders</a> smart constructor.
data ListIdentityProviders
ListIdentityProviders' :: Maybe Text -> Maybe Natural -> Text -> ListIdentityProviders

-- | A pagination token.
[$sel:nextToken:ListIdentityProviders'] :: ListIdentityProviders -> Maybe Text

-- | The maximum number of identity providers to return.
[$sel:maxResults:ListIdentityProviders'] :: ListIdentityProviders -> Maybe Natural

-- | The user pool ID.
[$sel:userPoolId:ListIdentityProviders'] :: ListIdentityProviders -> Text

-- | Create a value of <a>ListIdentityProviders</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListIdentityProviders'</a>,
--   <a>listIdentityProviders_nextToken</a> - A pagination token.
--   
--   <a>$sel:maxResults:ListIdentityProviders'</a>,
--   <a>listIdentityProviders_maxResults</a> - The maximum number of
--   identity providers to return.
--   
--   <a>$sel:userPoolId:ListIdentityProviders'</a>,
--   <a>listIdentityProviders_userPoolId</a> - The user pool ID.
newListIdentityProviders :: Text -> ListIdentityProviders

-- | A pagination token.
listIdentityProviders_nextToken :: Lens' ListIdentityProviders (Maybe Text)

-- | The maximum number of identity providers to return.
listIdentityProviders_maxResults :: Lens' ListIdentityProviders (Maybe Natural)

-- | The user pool ID.
listIdentityProviders_userPoolId :: Lens' ListIdentityProviders Text

-- | <i>See:</i> <a>newListIdentityProvidersResponse</a> smart constructor.
data ListIdentityProvidersResponse
ListIdentityProvidersResponse' :: Maybe Text -> Int -> [ProviderDescription] -> ListIdentityProvidersResponse

-- | A pagination token.
[$sel:nextToken:ListIdentityProvidersResponse'] :: ListIdentityProvidersResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListIdentityProvidersResponse'] :: ListIdentityProvidersResponse -> Int

-- | A list of identity provider objects.
[$sel:providers:ListIdentityProvidersResponse'] :: ListIdentityProvidersResponse -> [ProviderDescription]

-- | Create a value of <a>ListIdentityProvidersResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListIdentityProviders'</a>,
--   <a>listIdentityProvidersResponse_nextToken</a> - A pagination token.
--   
--   <a>$sel:httpStatus:ListIdentityProvidersResponse'</a>,
--   <a>listIdentityProvidersResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:providers:ListIdentityProvidersResponse'</a>,
--   <a>listIdentityProvidersResponse_providers</a> - A list of identity
--   provider objects.
newListIdentityProvidersResponse :: Int -> ListIdentityProvidersResponse

-- | A pagination token.
listIdentityProvidersResponse_nextToken :: Lens' ListIdentityProvidersResponse (Maybe Text)

-- | The response's http status code.
listIdentityProvidersResponse_httpStatus :: Lens' ListIdentityProvidersResponse Int

-- | A list of identity provider objects.
listIdentityProvidersResponse_providers :: Lens' ListIdentityProvidersResponse [ProviderDescription]
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.ListIdentityProviders.ListIdentityProviders
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.ListIdentityProviders.ListIdentityProviders
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.ListIdentityProviders.ListIdentityProviders
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.ListIdentityProviders.ListIdentityProviders
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.ListIdentityProviders.ListIdentityProvidersResponse
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.ListIdentityProviders.ListIdentityProvidersResponse
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.ListIdentityProviders.ListIdentityProvidersResponse
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.ListIdentityProviders.ListIdentityProvidersResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CognitoIdentityProvider.ListIdentityProviders.ListIdentityProviders
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.ListIdentityProviders.ListIdentityProvidersResponse
instance Network.AWS.Pager.AWSPager Network.AWS.CognitoIdentityProvider.ListIdentityProviders.ListIdentityProviders
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.ListIdentityProviders.ListIdentityProviders
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.ListIdentityProviders.ListIdentityProviders
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CognitoIdentityProvider.ListIdentityProviders.ListIdentityProviders
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.ListIdentityProviders.ListIdentityProviders
instance Network.AWS.Data.Path.ToPath Network.AWS.CognitoIdentityProvider.ListIdentityProviders.ListIdentityProviders
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentityProvider.ListIdentityProviders.ListIdentityProviders


-- | Lists the groups associated with a user pool.
--   
--   Calling this action requires developer credentials.
--   
--   This operation returns paginated results.
module Network.AWS.CognitoIdentityProvider.ListGroups

-- | <i>See:</i> <a>newListGroups</a> smart constructor.
data ListGroups
ListGroups' :: Maybe Text -> Maybe Natural -> Text -> ListGroups

-- | An identifier that was returned from the previous call to this
--   operation, which can be used to return the next set of items in the
--   list.
[$sel:nextToken:ListGroups'] :: ListGroups -> Maybe Text

-- | The limit of the request to list groups.
[$sel:limit:ListGroups'] :: ListGroups -> Maybe Natural

-- | The user pool ID for the user pool.
[$sel:userPoolId:ListGroups'] :: ListGroups -> Text

-- | Create a value of <a>ListGroups</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListGroups'</a>, <a>listGroups_nextToken</a> - An
--   identifier that was returned from the previous call to this operation,
--   which can be used to return the next set of items in the list.
--   
--   <a>$sel:limit:ListGroups'</a>, <a>listGroups_limit</a> - The limit of
--   the request to list groups.
--   
--   <a>$sel:userPoolId:ListGroups'</a>, <a>listGroups_userPoolId</a> - The
--   user pool ID for the user pool.
newListGroups :: Text -> ListGroups

-- | An identifier that was returned from the previous call to this
--   operation, which can be used to return the next set of items in the
--   list.
listGroups_nextToken :: Lens' ListGroups (Maybe Text)

-- | The limit of the request to list groups.
listGroups_limit :: Lens' ListGroups (Maybe Natural)

-- | The user pool ID for the user pool.
listGroups_userPoolId :: Lens' ListGroups Text

-- | <i>See:</i> <a>newListGroupsResponse</a> smart constructor.
data ListGroupsResponse
ListGroupsResponse' :: Maybe [GroupType] -> Maybe Text -> Int -> ListGroupsResponse

-- | The group objects for the groups.
[$sel:groups:ListGroupsResponse'] :: ListGroupsResponse -> Maybe [GroupType]

-- | An identifier that was returned from the previous call to this
--   operation, which can be used to return the next set of items in the
--   list.
[$sel:nextToken:ListGroupsResponse'] :: ListGroupsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListGroupsResponse'] :: ListGroupsResponse -> Int

-- | Create a value of <a>ListGroupsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:groups:ListGroupsResponse'</a>,
--   <a>listGroupsResponse_groups</a> - The group objects for the groups.
--   
--   <a>$sel:nextToken:ListGroups'</a>, <a>listGroupsResponse_nextToken</a>
--   - An identifier that was returned from the previous call to this
--   operation, which can be used to return the next set of items in the
--   list.
--   
--   <a>$sel:httpStatus:ListGroupsResponse'</a>,
--   <a>listGroupsResponse_httpStatus</a> - The response's http status
--   code.
newListGroupsResponse :: Int -> ListGroupsResponse

-- | The group objects for the groups.
listGroupsResponse_groups :: Lens' ListGroupsResponse (Maybe [GroupType])

-- | An identifier that was returned from the previous call to this
--   operation, which can be used to return the next set of items in the
--   list.
listGroupsResponse_nextToken :: Lens' ListGroupsResponse (Maybe Text)

-- | The response's http status code.
listGroupsResponse_httpStatus :: Lens' ListGroupsResponse Int
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.ListGroups.ListGroups
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.ListGroups.ListGroups
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.ListGroups.ListGroups
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.ListGroups.ListGroups
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.ListGroups.ListGroupsResponse
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.ListGroups.ListGroupsResponse
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.ListGroups.ListGroupsResponse
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.ListGroups.ListGroupsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CognitoIdentityProvider.ListGroups.ListGroups
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.ListGroups.ListGroupsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.CognitoIdentityProvider.ListGroups.ListGroups
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.ListGroups.ListGroups
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.ListGroups.ListGroups
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CognitoIdentityProvider.ListGroups.ListGroups
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.ListGroups.ListGroups
instance Network.AWS.Data.Path.ToPath Network.AWS.CognitoIdentityProvider.ListGroups.ListGroups
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentityProvider.ListGroups.ListGroups


-- | Lists the devices.
module Network.AWS.CognitoIdentityProvider.ListDevices

-- | Represents the request to list the devices.
--   
--   <i>See:</i> <a>newListDevices</a> smart constructor.
data ListDevices
ListDevices' :: Maybe Text -> Maybe Natural -> Sensitive Text -> ListDevices

-- | The pagination token for the list request.
[$sel:paginationToken:ListDevices'] :: ListDevices -> Maybe Text

-- | The limit of the device request.
[$sel:limit:ListDevices'] :: ListDevices -> Maybe Natural

-- | The access tokens for the request to list devices.
[$sel:accessToken:ListDevices'] :: ListDevices -> Sensitive Text

-- | Create a value of <a>ListDevices</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:paginationToken:ListDevices'</a>,
--   <a>listDevices_paginationToken</a> - The pagination token for the list
--   request.
--   
--   <a>$sel:limit:ListDevices'</a>, <a>listDevices_limit</a> - The limit
--   of the device request.
--   
--   <a>$sel:accessToken:ListDevices'</a>, <a>listDevices_accessToken</a> -
--   The access tokens for the request to list devices.
newListDevices :: Text -> ListDevices

-- | The pagination token for the list request.
listDevices_paginationToken :: Lens' ListDevices (Maybe Text)

-- | The limit of the device request.
listDevices_limit :: Lens' ListDevices (Maybe Natural)

-- | The access tokens for the request to list devices.
listDevices_accessToken :: Lens' ListDevices Text

-- | Represents the response to list devices.
--   
--   <i>See:</i> <a>newListDevicesResponse</a> smart constructor.
data ListDevicesResponse
ListDevicesResponse' :: Maybe Text -> Maybe [DeviceType] -> Int -> ListDevicesResponse

-- | The pagination token for the list device response.
[$sel:paginationToken:ListDevicesResponse'] :: ListDevicesResponse -> Maybe Text

-- | The devices returned in the list devices response.
[$sel:devices:ListDevicesResponse'] :: ListDevicesResponse -> Maybe [DeviceType]

-- | The response's http status code.
[$sel:httpStatus:ListDevicesResponse'] :: ListDevicesResponse -> Int

-- | Create a value of <a>ListDevicesResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:paginationToken:ListDevices'</a>,
--   <a>listDevicesResponse_paginationToken</a> - The pagination token for
--   the list device response.
--   
--   <a>$sel:devices:ListDevicesResponse'</a>,
--   <a>listDevicesResponse_devices</a> - The devices returned in the list
--   devices response.
--   
--   <a>$sel:httpStatus:ListDevicesResponse'</a>,
--   <a>listDevicesResponse_httpStatus</a> - The response's http status
--   code.
newListDevicesResponse :: Int -> ListDevicesResponse

-- | The pagination token for the list device response.
listDevicesResponse_paginationToken :: Lens' ListDevicesResponse (Maybe Text)

-- | The devices returned in the list devices response.
listDevicesResponse_devices :: Lens' ListDevicesResponse (Maybe [DeviceType])

-- | The response's http status code.
listDevicesResponse_httpStatus :: Lens' ListDevicesResponse Int
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.ListDevices.ListDevices
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.ListDevices.ListDevices
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.ListDevices.ListDevices
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.ListDevices.ListDevicesResponse
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.ListDevices.ListDevicesResponse
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.ListDevices.ListDevicesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CognitoIdentityProvider.ListDevices.ListDevices
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.ListDevices.ListDevicesResponse
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.ListDevices.ListDevices
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.ListDevices.ListDevices
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CognitoIdentityProvider.ListDevices.ListDevices
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.ListDevices.ListDevices
instance Network.AWS.Data.Path.ToPath Network.AWS.CognitoIdentityProvider.ListDevices.ListDevices
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentityProvider.ListDevices.ListDevices


-- | Initiates the authentication flow.
--   
--   This action might generate an SMS text message. Starting June 1, 2021,
--   U.S. telecom carriers require that you register an origination phone
--   number before you can send SMS messages to U.S. phone numbers. If you
--   use SMS text messages in Amazon Cognito, you must register a phone
--   number with <a>Amazon Pinpoint</a>. Cognito will use the the
--   registered number automatically. Otherwise, Cognito users that must
--   receive SMS messages might be unable to sign up, activate their
--   accounts, or sign in.
--   
--   If you have never used SMS text messages with Amazon Cognito or any
--   other Amazon Web Service, Amazon SNS might place your account in SMS
--   sandbox. In
--   <i>&lt;https:</i><i>docs.aws.amazon.com</i>sns<i>latest</i>dg<i>sns-sms-sandbox.html
--   sandbox mode&gt;</i> , you’ll have limitations, such as sending
--   messages to only verified phone numbers. After testing in the sandbox
--   environment, you can move out of the SMS sandbox and into production.
--   For more information, see <a>SMS message settings for Cognito User
--   Pools</a> in the <i>Amazon Cognito Developer Guide</i>.
module Network.AWS.CognitoIdentityProvider.InitiateAuth

-- | Initiates the authentication request.
--   
--   <i>See:</i> <a>newInitiateAuth</a> smart constructor.
data InitiateAuth
InitiateAuth' :: Maybe (HashMap Text Text) -> Maybe AnalyticsMetadataType -> Maybe UserContextDataType -> Maybe (Sensitive (HashMap Text Text)) -> AuthFlowType -> Sensitive Text -> InitiateAuth

-- | A map of custom key-value pairs that you can provide as input for
--   certain custom workflows that this action triggers.
--   
--   You create custom workflows by assigning Lambda functions to user pool
--   triggers. When you use the InitiateAuth API action, Amazon Cognito
--   invokes the Lambda functions that are specified for various triggers.
--   The ClientMetadata value is passed as input to the functions for only
--   the following triggers:
--   
--   <ul>
--   <li>Pre signup</li>
--   <li>Pre authentication</li>
--   <li>User migration</li>
--   </ul>
--   
--   When Amazon Cognito invokes the functions for these triggers, it
--   passes a JSON payload, which the function receives as input. This
--   payload contains a <tt>validationData</tt> attribute, which provides
--   the data that you assigned to the ClientMetadata parameter in your
--   InitiateAuth request. In your function code in Lambda, you can process
--   the <tt>validationData</tt> value to enhance your workflow for your
--   specific needs.
--   
--   When you use the InitiateAuth API action, Amazon Cognito also invokes
--   the functions for the following triggers, but it does not provide the
--   ClientMetadata value as input:
--   
--   <ul>
--   <li>Post authentication</li>
--   <li>Custom message</li>
--   <li>Pre token generation</li>
--   <li>Create auth challenge</li>
--   <li>Define auth challenge</li>
--   <li>Verify auth challenge</li>
--   </ul>
--   
--   For more information, see <a>Customizing User Pool Workflows with
--   Lambda Triggers</a> in the <i>Amazon Cognito Developer Guide</i>.
--   
--   Take the following limitations into consideration when you use the
--   ClientMetadata parameter:
--   
--   <ul>
--   <li>Amazon Cognito does not store the ClientMetadata value. This data
--   is available only to Lambda triggers that are assigned to a user pool
--   to support custom workflows. If your user pool configuration does not
--   include triggers, the ClientMetadata parameter serves no purpose.</li>
--   <li>Amazon Cognito does not validate the ClientMetadata value.</li>
--   <li>Amazon Cognito does not encrypt the the ClientMetadata value, so
--   don't use it to provide sensitive information.</li>
--   </ul>
[$sel:clientMetadata:InitiateAuth'] :: InitiateAuth -> Maybe (HashMap Text Text)

-- | The Amazon Pinpoint analytics metadata for collecting metrics for
--   <tt>InitiateAuth</tt> calls.
[$sel:analyticsMetadata:InitiateAuth'] :: InitiateAuth -> Maybe AnalyticsMetadataType

-- | Contextual data such as the user's device fingerprint, IP address, or
--   location used for evaluating the risk of an unexpected event by Amazon
--   Cognito advanced security.
[$sel:userContextData:InitiateAuth'] :: InitiateAuth -> Maybe UserContextDataType

-- | The authentication parameters. These are inputs corresponding to the
--   <tt>AuthFlow</tt> that you are invoking. The required values depend on
--   the value of <tt>AuthFlow</tt>:
--   
--   <ul>
--   <li>For <tt>USER_SRP_AUTH</tt>: <tt>USERNAME</tt> (required),
--   <tt>SRP_A</tt> (required), <tt>SECRET_HASH</tt> (required if the app
--   client is configured with a client secret), <tt>DEVICE_KEY</tt>.</li>
--   <li>For <tt>REFRESH_TOKEN_AUTH/REFRESH_TOKEN</tt>:
--   <tt>REFRESH_TOKEN</tt> (required), <tt>SECRET_HASH</tt> (required if
--   the app client is configured with a client secret),
--   <tt>DEVICE_KEY</tt>.</li>
--   <li>For <tt>CUSTOM_AUTH</tt>: <tt>USERNAME</tt> (required),
--   <tt>SECRET_HASH</tt> (if app client is configured with client secret),
--   <tt>DEVICE_KEY</tt>. To start the authentication flow with password
--   verification, include <tt>ChallengeName: SRP_A</tt> and <tt>SRP_A:
--   (The SRP_A Value)</tt>.</li>
--   </ul>
[$sel:authParameters:InitiateAuth'] :: InitiateAuth -> Maybe (Sensitive (HashMap Text Text))

-- | The authentication flow for this call to execute. The API action will
--   depend on this value. For example:
--   
--   <ul>
--   <li><tt>REFRESH_TOKEN_AUTH</tt> will take in a valid refresh token and
--   return new tokens.</li>
--   <li><tt>USER_SRP_AUTH</tt> will take in <tt>USERNAME</tt> and
--   <tt>SRP_A</tt> and return the SRP variables to be used for next
--   challenge execution.</li>
--   <li><tt>USER_PASSWORD_AUTH</tt> will take in <tt>USERNAME</tt> and
--   <tt>PASSWORD</tt> and return the next challenge or tokens.</li>
--   </ul>
--   
--   Valid values include:
--   
--   <ul>
--   <li><tt>USER_SRP_AUTH</tt>: Authentication flow for the Secure Remote
--   Password (SRP) protocol.</li>
--   <li><tt>REFRESH_TOKEN_AUTH</tt>/<tt>REFRESH_TOKEN</tt>: Authentication
--   flow for refreshing the access token and ID token by supplying a valid
--   refresh token.</li>
--   <li><tt>CUSTOM_AUTH</tt>: Custom authentication flow.</li>
--   <li><tt>USER_PASSWORD_AUTH</tt>: Non-SRP authentication flow; USERNAME
--   and PASSWORD are passed directly. If a user migration Lambda trigger
--   is set, this flow will invoke the user migration Lambda if the
--   USERNAME is not found in the user pool.</li>
--   <li><tt>ADMIN_USER_PASSWORD_AUTH</tt>: Admin-based user password
--   authentication. This replaces the <tt>ADMIN_NO_SRP_AUTH</tt>
--   authentication flow. In this flow, Cognito receives the password in
--   the request instead of using the SRP process to verify passwords.</li>
--   </ul>
--   
--   <tt>ADMIN_NO_SRP_AUTH</tt> is not a valid value.
[$sel:authFlow:InitiateAuth'] :: InitiateAuth -> AuthFlowType

-- | The app client ID.
[$sel:clientId:InitiateAuth'] :: InitiateAuth -> Sensitive Text

-- | Create a value of <a>InitiateAuth</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientMetadata:InitiateAuth'</a>,
--   <a>initiateAuth_clientMetadata</a> - A map of custom key-value pairs
--   that you can provide as input for certain custom workflows that this
--   action triggers.
--   
--   You create custom workflows by assigning Lambda functions to user pool
--   triggers. When you use the InitiateAuth API action, Amazon Cognito
--   invokes the Lambda functions that are specified for various triggers.
--   The ClientMetadata value is passed as input to the functions for only
--   the following triggers:
--   
--   <ul>
--   <li>Pre signup</li>
--   <li>Pre authentication</li>
--   <li>User migration</li>
--   </ul>
--   
--   When Amazon Cognito invokes the functions for these triggers, it
--   passes a JSON payload, which the function receives as input. This
--   payload contains a <tt>validationData</tt> attribute, which provides
--   the data that you assigned to the ClientMetadata parameter in your
--   InitiateAuth request. In your function code in Lambda, you can process
--   the <tt>validationData</tt> value to enhance your workflow for your
--   specific needs.
--   
--   When you use the InitiateAuth API action, Amazon Cognito also invokes
--   the functions for the following triggers, but it does not provide the
--   ClientMetadata value as input:
--   
--   <ul>
--   <li>Post authentication</li>
--   <li>Custom message</li>
--   <li>Pre token generation</li>
--   <li>Create auth challenge</li>
--   <li>Define auth challenge</li>
--   <li>Verify auth challenge</li>
--   </ul>
--   
--   For more information, see <a>Customizing User Pool Workflows with
--   Lambda Triggers</a> in the <i>Amazon Cognito Developer Guide</i>.
--   
--   Take the following limitations into consideration when you use the
--   ClientMetadata parameter:
--   
--   <ul>
--   <li>Amazon Cognito does not store the ClientMetadata value. This data
--   is available only to Lambda triggers that are assigned to a user pool
--   to support custom workflows. If your user pool configuration does not
--   include triggers, the ClientMetadata parameter serves no purpose.</li>
--   <li>Amazon Cognito does not validate the ClientMetadata value.</li>
--   <li>Amazon Cognito does not encrypt the the ClientMetadata value, so
--   don't use it to provide sensitive information.</li>
--   </ul>
--   
--   <a>$sel:analyticsMetadata:InitiateAuth'</a>,
--   <a>initiateAuth_analyticsMetadata</a> - The Amazon Pinpoint analytics
--   metadata for collecting metrics for <tt>InitiateAuth</tt> calls.
--   
--   <a>$sel:userContextData:InitiateAuth'</a>,
--   <a>initiateAuth_userContextData</a> - Contextual data such as the
--   user's device fingerprint, IP address, or location used for evaluating
--   the risk of an unexpected event by Amazon Cognito advanced security.
--   
--   <a>$sel:authParameters:InitiateAuth'</a>,
--   <a>initiateAuth_authParameters</a> - The authentication parameters.
--   These are inputs corresponding to the <tt>AuthFlow</tt> that you are
--   invoking. The required values depend on the value of
--   <tt>AuthFlow</tt>:
--   
--   <ul>
--   <li>For <tt>USER_SRP_AUTH</tt>: <tt>USERNAME</tt> (required),
--   <tt>SRP_A</tt> (required), <tt>SECRET_HASH</tt> (required if the app
--   client is configured with a client secret), <tt>DEVICE_KEY</tt>.</li>
--   <li>For <tt>REFRESH_TOKEN_AUTH/REFRESH_TOKEN</tt>:
--   <tt>REFRESH_TOKEN</tt> (required), <tt>SECRET_HASH</tt> (required if
--   the app client is configured with a client secret),
--   <tt>DEVICE_KEY</tt>.</li>
--   <li>For <tt>CUSTOM_AUTH</tt>: <tt>USERNAME</tt> (required),
--   <tt>SECRET_HASH</tt> (if app client is configured with client secret),
--   <tt>DEVICE_KEY</tt>. To start the authentication flow with password
--   verification, include <tt>ChallengeName: SRP_A</tt> and <tt>SRP_A:
--   (The SRP_A Value)</tt>.</li>
--   </ul>
--   
--   <a>$sel:authFlow:InitiateAuth'</a>, <a>initiateAuth_authFlow</a> - The
--   authentication flow for this call to execute. The API action will
--   depend on this value. For example:
--   
--   <ul>
--   <li><tt>REFRESH_TOKEN_AUTH</tt> will take in a valid refresh token and
--   return new tokens.</li>
--   <li><tt>USER_SRP_AUTH</tt> will take in <tt>USERNAME</tt> and
--   <tt>SRP_A</tt> and return the SRP variables to be used for next
--   challenge execution.</li>
--   <li><tt>USER_PASSWORD_AUTH</tt> will take in <tt>USERNAME</tt> and
--   <tt>PASSWORD</tt> and return the next challenge or tokens.</li>
--   </ul>
--   
--   Valid values include:
--   
--   <ul>
--   <li><tt>USER_SRP_AUTH</tt>: Authentication flow for the Secure Remote
--   Password (SRP) protocol.</li>
--   <li><tt>REFRESH_TOKEN_AUTH</tt>/<tt>REFRESH_TOKEN</tt>: Authentication
--   flow for refreshing the access token and ID token by supplying a valid
--   refresh token.</li>
--   <li><tt>CUSTOM_AUTH</tt>: Custom authentication flow.</li>
--   <li><tt>USER_PASSWORD_AUTH</tt>: Non-SRP authentication flow; USERNAME
--   and PASSWORD are passed directly. If a user migration Lambda trigger
--   is set, this flow will invoke the user migration Lambda if the
--   USERNAME is not found in the user pool.</li>
--   <li><tt>ADMIN_USER_PASSWORD_AUTH</tt>: Admin-based user password
--   authentication. This replaces the <tt>ADMIN_NO_SRP_AUTH</tt>
--   authentication flow. In this flow, Cognito receives the password in
--   the request instead of using the SRP process to verify passwords.</li>
--   </ul>
--   
--   <tt>ADMIN_NO_SRP_AUTH</tt> is not a valid value.
--   
--   <a>$sel:clientId:InitiateAuth'</a>, <a>initiateAuth_clientId</a> - The
--   app client ID.
newInitiateAuth :: AuthFlowType -> Text -> InitiateAuth

-- | A map of custom key-value pairs that you can provide as input for
--   certain custom workflows that this action triggers.
--   
--   You create custom workflows by assigning Lambda functions to user pool
--   triggers. When you use the InitiateAuth API action, Amazon Cognito
--   invokes the Lambda functions that are specified for various triggers.
--   The ClientMetadata value is passed as input to the functions for only
--   the following triggers:
--   
--   <ul>
--   <li>Pre signup</li>
--   <li>Pre authentication</li>
--   <li>User migration</li>
--   </ul>
--   
--   When Amazon Cognito invokes the functions for these triggers, it
--   passes a JSON payload, which the function receives as input. This
--   payload contains a <tt>validationData</tt> attribute, which provides
--   the data that you assigned to the ClientMetadata parameter in your
--   InitiateAuth request. In your function code in Lambda, you can process
--   the <tt>validationData</tt> value to enhance your workflow for your
--   specific needs.
--   
--   When you use the InitiateAuth API action, Amazon Cognito also invokes
--   the functions for the following triggers, but it does not provide the
--   ClientMetadata value as input:
--   
--   <ul>
--   <li>Post authentication</li>
--   <li>Custom message</li>
--   <li>Pre token generation</li>
--   <li>Create auth challenge</li>
--   <li>Define auth challenge</li>
--   <li>Verify auth challenge</li>
--   </ul>
--   
--   For more information, see <a>Customizing User Pool Workflows with
--   Lambda Triggers</a> in the <i>Amazon Cognito Developer Guide</i>.
--   
--   Take the following limitations into consideration when you use the
--   ClientMetadata parameter:
--   
--   <ul>
--   <li>Amazon Cognito does not store the ClientMetadata value. This data
--   is available only to Lambda triggers that are assigned to a user pool
--   to support custom workflows. If your user pool configuration does not
--   include triggers, the ClientMetadata parameter serves no purpose.</li>
--   <li>Amazon Cognito does not validate the ClientMetadata value.</li>
--   <li>Amazon Cognito does not encrypt the the ClientMetadata value, so
--   don't use it to provide sensitive information.</li>
--   </ul>
initiateAuth_clientMetadata :: Lens' InitiateAuth (Maybe (HashMap Text Text))

-- | The Amazon Pinpoint analytics metadata for collecting metrics for
--   <tt>InitiateAuth</tt> calls.
initiateAuth_analyticsMetadata :: Lens' InitiateAuth (Maybe AnalyticsMetadataType)

-- | Contextual data such as the user's device fingerprint, IP address, or
--   location used for evaluating the risk of an unexpected event by Amazon
--   Cognito advanced security.
initiateAuth_userContextData :: Lens' InitiateAuth (Maybe UserContextDataType)

-- | The authentication parameters. These are inputs corresponding to the
--   <tt>AuthFlow</tt> that you are invoking. The required values depend on
--   the value of <tt>AuthFlow</tt>:
--   
--   <ul>
--   <li>For <tt>USER_SRP_AUTH</tt>: <tt>USERNAME</tt> (required),
--   <tt>SRP_A</tt> (required), <tt>SECRET_HASH</tt> (required if the app
--   client is configured with a client secret), <tt>DEVICE_KEY</tt>.</li>
--   <li>For <tt>REFRESH_TOKEN_AUTH/REFRESH_TOKEN</tt>:
--   <tt>REFRESH_TOKEN</tt> (required), <tt>SECRET_HASH</tt> (required if
--   the app client is configured with a client secret),
--   <tt>DEVICE_KEY</tt>.</li>
--   <li>For <tt>CUSTOM_AUTH</tt>: <tt>USERNAME</tt> (required),
--   <tt>SECRET_HASH</tt> (if app client is configured with client secret),
--   <tt>DEVICE_KEY</tt>. To start the authentication flow with password
--   verification, include <tt>ChallengeName: SRP_A</tt> and <tt>SRP_A:
--   (The SRP_A Value)</tt>.</li>
--   </ul>
initiateAuth_authParameters :: Lens' InitiateAuth (Maybe (HashMap Text Text))

-- | The authentication flow for this call to execute. The API action will
--   depend on this value. For example:
--   
--   <ul>
--   <li><tt>REFRESH_TOKEN_AUTH</tt> will take in a valid refresh token and
--   return new tokens.</li>
--   <li><tt>USER_SRP_AUTH</tt> will take in <tt>USERNAME</tt> and
--   <tt>SRP_A</tt> and return the SRP variables to be used for next
--   challenge execution.</li>
--   <li><tt>USER_PASSWORD_AUTH</tt> will take in <tt>USERNAME</tt> and
--   <tt>PASSWORD</tt> and return the next challenge or tokens.</li>
--   </ul>
--   
--   Valid values include:
--   
--   <ul>
--   <li><tt>USER_SRP_AUTH</tt>: Authentication flow for the Secure Remote
--   Password (SRP) protocol.</li>
--   <li><tt>REFRESH_TOKEN_AUTH</tt>/<tt>REFRESH_TOKEN</tt>: Authentication
--   flow for refreshing the access token and ID token by supplying a valid
--   refresh token.</li>
--   <li><tt>CUSTOM_AUTH</tt>: Custom authentication flow.</li>
--   <li><tt>USER_PASSWORD_AUTH</tt>: Non-SRP authentication flow; USERNAME
--   and PASSWORD are passed directly. If a user migration Lambda trigger
--   is set, this flow will invoke the user migration Lambda if the
--   USERNAME is not found in the user pool.</li>
--   <li><tt>ADMIN_USER_PASSWORD_AUTH</tt>: Admin-based user password
--   authentication. This replaces the <tt>ADMIN_NO_SRP_AUTH</tt>
--   authentication flow. In this flow, Cognito receives the password in
--   the request instead of using the SRP process to verify passwords.</li>
--   </ul>
--   
--   <tt>ADMIN_NO_SRP_AUTH</tt> is not a valid value.
initiateAuth_authFlow :: Lens' InitiateAuth AuthFlowType

-- | The app client ID.
initiateAuth_clientId :: Lens' InitiateAuth Text

-- | Initiates the authentication response.
--   
--   <i>See:</i> <a>newInitiateAuthResponse</a> smart constructor.
data InitiateAuthResponse
InitiateAuthResponse' :: Maybe ChallengeNameType -> Maybe (HashMap Text Text) -> Maybe AuthenticationResultType -> Maybe Text -> Int -> InitiateAuthResponse

-- | The name of the challenge which you are responding to with this call.
--   This is returned to you in the <tt>AdminInitiateAuth</tt> response if
--   you need to pass another challenge.
--   
--   Valid values include the following. Note that all of these challenges
--   require <tt>USERNAME</tt> and <tt>SECRET_HASH</tt> (if applicable) in
--   the parameters.
--   
--   <ul>
--   <li><tt>SMS_MFA</tt>: Next challenge is to supply an
--   <tt>SMS_MFA_CODE</tt>, delivered via SMS.</li>
--   <li><tt>PASSWORD_VERIFIER</tt>: Next challenge is to supply
--   <tt>PASSWORD_CLAIM_SIGNATURE</tt>,
--   <tt>PASSWORD_CLAIM_SECRET_BLOCK</tt>, and <tt>TIMESTAMP</tt> after the
--   client-side SRP calculations.</li>
--   <li><tt>CUSTOM_CHALLENGE</tt>: This is returned if your custom
--   authentication flow determines that the user should pass another
--   challenge before tokens are issued.</li>
--   <li><tt>DEVICE_SRP_AUTH</tt>: If device tracking was enabled on your
--   user pool and the previous challenges were passed, this challenge is
--   returned so that Amazon Cognito can start tracking this device.</li>
--   <li><tt>DEVICE_PASSWORD_VERIFIER</tt>: Similar to
--   <tt>PASSWORD_VERIFIER</tt>, but for devices only.</li>
--   <li><tt>NEW_PASSWORD_REQUIRED</tt>: For users who are required to
--   change their passwords after successful first login. This challenge
--   should be passed with <tt>NEW_PASSWORD</tt> and any other required
--   attributes.</li>
--   <li><tt>MFA_SETUP</tt>: For users who are required to setup an MFA
--   factor before they can sign-in. The MFA types enabled for the user
--   pool will be listed in the challenge parameters <tt>MFA_CAN_SETUP</tt>
--   value.To setup software token MFA, use the session returned here from
--   <tt>InitiateAuth</tt> as an input to <tt>AssociateSoftwareToken</tt>,
--   and use the session returned by <tt>VerifySoftwareToken</tt> as an
--   input to <tt>RespondToAuthChallenge</tt> with challenge name
--   <tt>MFA_SETUP</tt> to complete sign-in. To setup SMS MFA, users will
--   need help from an administrator to add a phone number to their account
--   and then call <tt>InitiateAuth</tt> again to restart sign-in.</li>
--   </ul>
[$sel:challengeName:InitiateAuthResponse'] :: InitiateAuthResponse -> Maybe ChallengeNameType

-- | The challenge parameters. These are returned to you in the
--   <tt>InitiateAuth</tt> response if you need to pass another challenge.
--   The responses in this parameter should be used to compute inputs to
--   the next call (<tt>RespondToAuthChallenge</tt>).
--   
--   All challenges require <tt>USERNAME</tt> and <tt>SECRET_HASH</tt> (if
--   applicable).
[$sel:challengeParameters:InitiateAuthResponse'] :: InitiateAuthResponse -> Maybe (HashMap Text Text)

-- | The result of the authentication response. This is only returned if
--   the caller does not need to pass another challenge. If the caller does
--   need to pass another challenge before it gets tokens,
--   <tt>ChallengeName</tt>, <tt>ChallengeParameters</tt>, and
--   <tt>Session</tt> are returned.
[$sel:authenticationResult:InitiateAuthResponse'] :: InitiateAuthResponse -> Maybe AuthenticationResultType

-- | The session which should be passed both ways in challenge-response
--   calls to the service. If the caller needs to go through another
--   challenge, they return a session with other challenge parameters. This
--   session should be passed as it is to the next
--   <tt>RespondToAuthChallenge</tt> API call.
[$sel:session:InitiateAuthResponse'] :: InitiateAuthResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:InitiateAuthResponse'] :: InitiateAuthResponse -> Int

-- | Create a value of <a>InitiateAuthResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:challengeName:InitiateAuthResponse'</a>,
--   <a>initiateAuthResponse_challengeName</a> - The name of the challenge
--   which you are responding to with this call. This is returned to you in
--   the <tt>AdminInitiateAuth</tt> response if you need to pass another
--   challenge.
--   
--   Valid values include the following. Note that all of these challenges
--   require <tt>USERNAME</tt> and <tt>SECRET_HASH</tt> (if applicable) in
--   the parameters.
--   
--   <ul>
--   <li><tt>SMS_MFA</tt>: Next challenge is to supply an
--   <tt>SMS_MFA_CODE</tt>, delivered via SMS.</li>
--   <li><tt>PASSWORD_VERIFIER</tt>: Next challenge is to supply
--   <tt>PASSWORD_CLAIM_SIGNATURE</tt>,
--   <tt>PASSWORD_CLAIM_SECRET_BLOCK</tt>, and <tt>TIMESTAMP</tt> after the
--   client-side SRP calculations.</li>
--   <li><tt>CUSTOM_CHALLENGE</tt>: This is returned if your custom
--   authentication flow determines that the user should pass another
--   challenge before tokens are issued.</li>
--   <li><tt>DEVICE_SRP_AUTH</tt>: If device tracking was enabled on your
--   user pool and the previous challenges were passed, this challenge is
--   returned so that Amazon Cognito can start tracking this device.</li>
--   <li><tt>DEVICE_PASSWORD_VERIFIER</tt>: Similar to
--   <tt>PASSWORD_VERIFIER</tt>, but for devices only.</li>
--   <li><tt>NEW_PASSWORD_REQUIRED</tt>: For users who are required to
--   change their passwords after successful first login. This challenge
--   should be passed with <tt>NEW_PASSWORD</tt> and any other required
--   attributes.</li>
--   <li><tt>MFA_SETUP</tt>: For users who are required to setup an MFA
--   factor before they can sign-in. The MFA types enabled for the user
--   pool will be listed in the challenge parameters <tt>MFA_CAN_SETUP</tt>
--   value.To setup software token MFA, use the session returned here from
--   <tt>InitiateAuth</tt> as an input to <tt>AssociateSoftwareToken</tt>,
--   and use the session returned by <tt>VerifySoftwareToken</tt> as an
--   input to <tt>RespondToAuthChallenge</tt> with challenge name
--   <tt>MFA_SETUP</tt> to complete sign-in. To setup SMS MFA, users will
--   need help from an administrator to add a phone number to their account
--   and then call <tt>InitiateAuth</tt> again to restart sign-in.</li>
--   </ul>
--   
--   <a>$sel:challengeParameters:InitiateAuthResponse'</a>,
--   <a>initiateAuthResponse_challengeParameters</a> - The challenge
--   parameters. These are returned to you in the <tt>InitiateAuth</tt>
--   response if you need to pass another challenge. The responses in this
--   parameter should be used to compute inputs to the next call
--   (<tt>RespondToAuthChallenge</tt>).
--   
--   All challenges require <tt>USERNAME</tt> and <tt>SECRET_HASH</tt> (if
--   applicable).
--   
--   <a>$sel:authenticationResult:InitiateAuthResponse'</a>,
--   <a>initiateAuthResponse_authenticationResult</a> - The result of the
--   authentication response. This is only returned if the caller does not
--   need to pass another challenge. If the caller does need to pass
--   another challenge before it gets tokens, <tt>ChallengeName</tt>,
--   <tt>ChallengeParameters</tt>, and <tt>Session</tt> are returned.
--   
--   <a>$sel:session:InitiateAuthResponse'</a>,
--   <a>initiateAuthResponse_session</a> - The session which should be
--   passed both ways in challenge-response calls to the service. If the
--   caller needs to go through another challenge, they return a session
--   with other challenge parameters. This session should be passed as it
--   is to the next <tt>RespondToAuthChallenge</tt> API call.
--   
--   <a>$sel:httpStatus:InitiateAuthResponse'</a>,
--   <a>initiateAuthResponse_httpStatus</a> - The response's http status
--   code.
newInitiateAuthResponse :: Int -> InitiateAuthResponse

-- | The name of the challenge which you are responding to with this call.
--   This is returned to you in the <tt>AdminInitiateAuth</tt> response if
--   you need to pass another challenge.
--   
--   Valid values include the following. Note that all of these challenges
--   require <tt>USERNAME</tt> and <tt>SECRET_HASH</tt> (if applicable) in
--   the parameters.
--   
--   <ul>
--   <li><tt>SMS_MFA</tt>: Next challenge is to supply an
--   <tt>SMS_MFA_CODE</tt>, delivered via SMS.</li>
--   <li><tt>PASSWORD_VERIFIER</tt>: Next challenge is to supply
--   <tt>PASSWORD_CLAIM_SIGNATURE</tt>,
--   <tt>PASSWORD_CLAIM_SECRET_BLOCK</tt>, and <tt>TIMESTAMP</tt> after the
--   client-side SRP calculations.</li>
--   <li><tt>CUSTOM_CHALLENGE</tt>: This is returned if your custom
--   authentication flow determines that the user should pass another
--   challenge before tokens are issued.</li>
--   <li><tt>DEVICE_SRP_AUTH</tt>: If device tracking was enabled on your
--   user pool and the previous challenges were passed, this challenge is
--   returned so that Amazon Cognito can start tracking this device.</li>
--   <li><tt>DEVICE_PASSWORD_VERIFIER</tt>: Similar to
--   <tt>PASSWORD_VERIFIER</tt>, but for devices only.</li>
--   <li><tt>NEW_PASSWORD_REQUIRED</tt>: For users who are required to
--   change their passwords after successful first login. This challenge
--   should be passed with <tt>NEW_PASSWORD</tt> and any other required
--   attributes.</li>
--   <li><tt>MFA_SETUP</tt>: For users who are required to setup an MFA
--   factor before they can sign-in. The MFA types enabled for the user
--   pool will be listed in the challenge parameters <tt>MFA_CAN_SETUP</tt>
--   value.To setup software token MFA, use the session returned here from
--   <tt>InitiateAuth</tt> as an input to <tt>AssociateSoftwareToken</tt>,
--   and use the session returned by <tt>VerifySoftwareToken</tt> as an
--   input to <tt>RespondToAuthChallenge</tt> with challenge name
--   <tt>MFA_SETUP</tt> to complete sign-in. To setup SMS MFA, users will
--   need help from an administrator to add a phone number to their account
--   and then call <tt>InitiateAuth</tt> again to restart sign-in.</li>
--   </ul>
initiateAuthResponse_challengeName :: Lens' InitiateAuthResponse (Maybe ChallengeNameType)

-- | The challenge parameters. These are returned to you in the
--   <tt>InitiateAuth</tt> response if you need to pass another challenge.
--   The responses in this parameter should be used to compute inputs to
--   the next call (<tt>RespondToAuthChallenge</tt>).
--   
--   All challenges require <tt>USERNAME</tt> and <tt>SECRET_HASH</tt> (if
--   applicable).
initiateAuthResponse_challengeParameters :: Lens' InitiateAuthResponse (Maybe (HashMap Text Text))

-- | The result of the authentication response. This is only returned if
--   the caller does not need to pass another challenge. If the caller does
--   need to pass another challenge before it gets tokens,
--   <tt>ChallengeName</tt>, <tt>ChallengeParameters</tt>, and
--   <tt>Session</tt> are returned.
initiateAuthResponse_authenticationResult :: Lens' InitiateAuthResponse (Maybe AuthenticationResultType)

-- | The session which should be passed both ways in challenge-response
--   calls to the service. If the caller needs to go through another
--   challenge, they return a session with other challenge parameters. This
--   session should be passed as it is to the next
--   <tt>RespondToAuthChallenge</tt> API call.
initiateAuthResponse_session :: Lens' InitiateAuthResponse (Maybe Text)

-- | The response's http status code.
initiateAuthResponse_httpStatus :: Lens' InitiateAuthResponse Int
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.InitiateAuth.InitiateAuth
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.InitiateAuth.InitiateAuth
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.InitiateAuth.InitiateAuth
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.InitiateAuth.InitiateAuthResponse
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.InitiateAuth.InitiateAuthResponse
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.InitiateAuth.InitiateAuthResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CognitoIdentityProvider.InitiateAuth.InitiateAuth
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.InitiateAuth.InitiateAuthResponse
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.InitiateAuth.InitiateAuth
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.InitiateAuth.InitiateAuth
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CognitoIdentityProvider.InitiateAuth.InitiateAuth
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.InitiateAuth.InitiateAuth
instance Network.AWS.Data.Path.ToPath Network.AWS.CognitoIdentityProvider.InitiateAuth.InitiateAuth
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentityProvider.InitiateAuth.InitiateAuth


-- | Signs out users from all devices. It also invalidates all refresh
--   tokens issued to a user. The user's current access and Id tokens
--   remain valid until their expiry. Access and Id tokens expire one hour
--   after they are issued.
module Network.AWS.CognitoIdentityProvider.GlobalSignOut

-- | Represents the request to sign out all devices.
--   
--   <i>See:</i> <a>newGlobalSignOut</a> smart constructor.
data GlobalSignOut
GlobalSignOut' :: Sensitive Text -> GlobalSignOut

-- | The access token.
[$sel:accessToken:GlobalSignOut'] :: GlobalSignOut -> Sensitive Text

-- | Create a value of <a>GlobalSignOut</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:accessToken:GlobalSignOut'</a>,
--   <a>globalSignOut_accessToken</a> - The access token.
newGlobalSignOut :: Text -> GlobalSignOut

-- | The access token.
globalSignOut_accessToken :: Lens' GlobalSignOut Text

-- | The response to the request to sign out all devices.
--   
--   <i>See:</i> <a>newGlobalSignOutResponse</a> smart constructor.
data GlobalSignOutResponse
GlobalSignOutResponse' :: Int -> GlobalSignOutResponse

-- | The response's http status code.
[$sel:httpStatus:GlobalSignOutResponse'] :: GlobalSignOutResponse -> Int

-- | Create a value of <a>GlobalSignOutResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:GlobalSignOutResponse'</a>,
--   <a>globalSignOutResponse_httpStatus</a> - The response's http status
--   code.
newGlobalSignOutResponse :: Int -> GlobalSignOutResponse

-- | The response's http status code.
globalSignOutResponse_httpStatus :: Lens' GlobalSignOutResponse Int
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.GlobalSignOut.GlobalSignOut
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.GlobalSignOut.GlobalSignOut
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.GlobalSignOut.GlobalSignOut
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.GlobalSignOut.GlobalSignOutResponse
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.GlobalSignOut.GlobalSignOutResponse
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.GlobalSignOut.GlobalSignOutResponse
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.GlobalSignOut.GlobalSignOutResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CognitoIdentityProvider.GlobalSignOut.GlobalSignOut
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.GlobalSignOut.GlobalSignOutResponse
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.GlobalSignOut.GlobalSignOut
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.GlobalSignOut.GlobalSignOut
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CognitoIdentityProvider.GlobalSignOut.GlobalSignOut
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.GlobalSignOut.GlobalSignOut
instance Network.AWS.Data.Path.ToPath Network.AWS.CognitoIdentityProvider.GlobalSignOut.GlobalSignOut
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentityProvider.GlobalSignOut.GlobalSignOut


-- | Gets the user pool multi-factor authentication (MFA) configuration.
module Network.AWS.CognitoIdentityProvider.GetUserPoolMfaConfig

-- | <i>See:</i> <a>newGetUserPoolMfaConfig</a> smart constructor.
data GetUserPoolMfaConfig
GetUserPoolMfaConfig' :: Text -> GetUserPoolMfaConfig

-- | The user pool ID.
[$sel:userPoolId:GetUserPoolMfaConfig'] :: GetUserPoolMfaConfig -> Text

-- | Create a value of <a>GetUserPoolMfaConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userPoolId:GetUserPoolMfaConfig'</a>,
--   <a>getUserPoolMfaConfig_userPoolId</a> - The user pool ID.
newGetUserPoolMfaConfig :: Text -> GetUserPoolMfaConfig

-- | The user pool ID.
getUserPoolMfaConfig_userPoolId :: Lens' GetUserPoolMfaConfig Text

-- | <i>See:</i> <a>newGetUserPoolMfaConfigResponse</a> smart constructor.
data GetUserPoolMfaConfigResponse
GetUserPoolMfaConfigResponse' :: Maybe SmsMfaConfigType -> Maybe SoftwareTokenMfaConfigType -> Maybe UserPoolMfaType -> Int -> GetUserPoolMfaConfigResponse

-- | The SMS text message multi-factor (MFA) configuration.
[$sel:smsMfaConfiguration:GetUserPoolMfaConfigResponse'] :: GetUserPoolMfaConfigResponse -> Maybe SmsMfaConfigType

-- | The software token multi-factor (MFA) configuration.
[$sel:softwareTokenMfaConfiguration:GetUserPoolMfaConfigResponse'] :: GetUserPoolMfaConfigResponse -> Maybe SoftwareTokenMfaConfigType

-- | The multi-factor (MFA) configuration. Valid values include:
--   
--   <ul>
--   <li><tt>OFF</tt> MFA will not be used for any users.</li>
--   <li><tt>ON</tt> MFA is required for all users to sign in.</li>
--   <li><tt>OPTIONAL</tt> MFA will be required only for individual users
--   who have an MFA factor enabled.</li>
--   </ul>
[$sel:mfaConfiguration:GetUserPoolMfaConfigResponse'] :: GetUserPoolMfaConfigResponse -> Maybe UserPoolMfaType

-- | The response's http status code.
[$sel:httpStatus:GetUserPoolMfaConfigResponse'] :: GetUserPoolMfaConfigResponse -> Int

-- | Create a value of <a>GetUserPoolMfaConfigResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:smsMfaConfiguration:GetUserPoolMfaConfigResponse'</a>,
--   <a>getUserPoolMfaConfigResponse_smsMfaConfiguration</a> - The SMS text
--   message multi-factor (MFA) configuration.
--   
--   
--   <a>$sel:softwareTokenMfaConfiguration:GetUserPoolMfaConfigResponse'</a>,
--   <a>getUserPoolMfaConfigResponse_softwareTokenMfaConfiguration</a> -
--   The software token multi-factor (MFA) configuration.
--   
--   <a>$sel:mfaConfiguration:GetUserPoolMfaConfigResponse'</a>,
--   <a>getUserPoolMfaConfigResponse_mfaConfiguration</a> - The
--   multi-factor (MFA) configuration. Valid values include:
--   
--   <ul>
--   <li><tt>OFF</tt> MFA will not be used for any users.</li>
--   <li><tt>ON</tt> MFA is required for all users to sign in.</li>
--   <li><tt>OPTIONAL</tt> MFA will be required only for individual users
--   who have an MFA factor enabled.</li>
--   </ul>
--   
--   <a>$sel:httpStatus:GetUserPoolMfaConfigResponse'</a>,
--   <a>getUserPoolMfaConfigResponse_httpStatus</a> - The response's http
--   status code.
newGetUserPoolMfaConfigResponse :: Int -> GetUserPoolMfaConfigResponse

-- | The SMS text message multi-factor (MFA) configuration.
getUserPoolMfaConfigResponse_smsMfaConfiguration :: Lens' GetUserPoolMfaConfigResponse (Maybe SmsMfaConfigType)

-- | The software token multi-factor (MFA) configuration.
getUserPoolMfaConfigResponse_softwareTokenMfaConfiguration :: Lens' GetUserPoolMfaConfigResponse (Maybe SoftwareTokenMfaConfigType)

-- | The multi-factor (MFA) configuration. Valid values include:
--   
--   <ul>
--   <li><tt>OFF</tt> MFA will not be used for any users.</li>
--   <li><tt>ON</tt> MFA is required for all users to sign in.</li>
--   <li><tt>OPTIONAL</tt> MFA will be required only for individual users
--   who have an MFA factor enabled.</li>
--   </ul>
getUserPoolMfaConfigResponse_mfaConfiguration :: Lens' GetUserPoolMfaConfigResponse (Maybe UserPoolMfaType)

-- | The response's http status code.
getUserPoolMfaConfigResponse_httpStatus :: Lens' GetUserPoolMfaConfigResponse Int
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.GetUserPoolMfaConfig.GetUserPoolMfaConfig
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.GetUserPoolMfaConfig.GetUserPoolMfaConfig
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.GetUserPoolMfaConfig.GetUserPoolMfaConfig
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.GetUserPoolMfaConfig.GetUserPoolMfaConfig
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.GetUserPoolMfaConfig.GetUserPoolMfaConfigResponse
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.GetUserPoolMfaConfig.GetUserPoolMfaConfigResponse
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.GetUserPoolMfaConfig.GetUserPoolMfaConfigResponse
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.GetUserPoolMfaConfig.GetUserPoolMfaConfigResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CognitoIdentityProvider.GetUserPoolMfaConfig.GetUserPoolMfaConfig
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.GetUserPoolMfaConfig.GetUserPoolMfaConfigResponse
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.GetUserPoolMfaConfig.GetUserPoolMfaConfig
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.GetUserPoolMfaConfig.GetUserPoolMfaConfig
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CognitoIdentityProvider.GetUserPoolMfaConfig.GetUserPoolMfaConfig
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.GetUserPoolMfaConfig.GetUserPoolMfaConfig
instance Network.AWS.Data.Path.ToPath Network.AWS.CognitoIdentityProvider.GetUserPoolMfaConfig.GetUserPoolMfaConfig
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentityProvider.GetUserPoolMfaConfig.GetUserPoolMfaConfig


-- | Gets the user attribute verification code for the specified attribute
--   name.
--   
--   This action might generate an SMS text message. Starting June 1, 2021,
--   U.S. telecom carriers require that you register an origination phone
--   number before you can send SMS messages to U.S. phone numbers. If you
--   use SMS text messages in Amazon Cognito, you must register a phone
--   number with <a>Amazon Pinpoint</a>. Cognito will use the the
--   registered number automatically. Otherwise, Cognito users that must
--   receive SMS messages might be unable to sign up, activate their
--   accounts, or sign in.
--   
--   If you have never used SMS text messages with Amazon Cognito or any
--   other Amazon Web Service, Amazon SNS might place your account in SMS
--   sandbox. In
--   <i>&lt;https:</i><i>docs.aws.amazon.com</i>sns<i>latest</i>dg<i>sns-sms-sandbox.html
--   sandbox mode&gt;</i> , you’ll have limitations, such as sending
--   messages to only verified phone numbers. After testing in the sandbox
--   environment, you can move out of the SMS sandbox and into production.
--   For more information, see <a>SMS message settings for Cognito User
--   Pools</a> in the <i>Amazon Cognito Developer Guide</i>.
module Network.AWS.CognitoIdentityProvider.GetUserAttributeVerificationCode

-- | Represents the request to get user attribute verification.
--   
--   <i>See:</i> <a>newGetUserAttributeVerificationCode</a> smart
--   constructor.
data GetUserAttributeVerificationCode
GetUserAttributeVerificationCode' :: Maybe (HashMap Text Text) -> Sensitive Text -> Text -> GetUserAttributeVerificationCode

-- | A map of custom key-value pairs that you can provide as input for any
--   custom workflows that this action triggers.
--   
--   You create custom workflows by assigning Lambda functions to user pool
--   triggers. When you use the GetUserAttributeVerificationCode API
--   action, Amazon Cognito invokes the function that is assigned to the
--   /custom message/ trigger. When Amazon Cognito invokes this function,
--   it passes a JSON payload, which the function receives as input. This
--   payload contains a <tt>clientMetadata</tt> attribute, which provides
--   the data that you assigned to the ClientMetadata parameter in your
--   GetUserAttributeVerificationCode request. In your function code in
--   Lambda, you can process the <tt>clientMetadata</tt> value to enhance
--   your workflow for your specific needs.
--   
--   For more information, see <a>Customizing User Pool Workflows with
--   Lambda Triggers</a> in the <i>Amazon Cognito Developer Guide</i>.
--   
--   Take the following limitations into consideration when you use the
--   ClientMetadata parameter:
--   
--   <ul>
--   <li>Amazon Cognito does not store the ClientMetadata value. This data
--   is available only to Lambda triggers that are assigned to a user pool
--   to support custom workflows. If your user pool configuration does not
--   include triggers, the ClientMetadata parameter serves no purpose.</li>
--   <li>Amazon Cognito does not validate the ClientMetadata value.</li>
--   <li>Amazon Cognito does not encrypt the the ClientMetadata value, so
--   don't use it to provide sensitive information.</li>
--   </ul>
[$sel:clientMetadata:GetUserAttributeVerificationCode'] :: GetUserAttributeVerificationCode -> Maybe (HashMap Text Text)

-- | The access token returned by the server response to get the user
--   attribute verification code.
[$sel:accessToken:GetUserAttributeVerificationCode'] :: GetUserAttributeVerificationCode -> Sensitive Text

-- | The attribute name returned by the server response to get the user
--   attribute verification code.
[$sel:attributeName:GetUserAttributeVerificationCode'] :: GetUserAttributeVerificationCode -> Text

-- | Create a value of <a>GetUserAttributeVerificationCode</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientMetadata:GetUserAttributeVerificationCode'</a>,
--   <a>getUserAttributeVerificationCode_clientMetadata</a> - A map of
--   custom key-value pairs that you can provide as input for any custom
--   workflows that this action triggers.
--   
--   You create custom workflows by assigning Lambda functions to user pool
--   triggers. When you use the GetUserAttributeVerificationCode API
--   action, Amazon Cognito invokes the function that is assigned to the
--   /custom message/ trigger. When Amazon Cognito invokes this function,
--   it passes a JSON payload, which the function receives as input. This
--   payload contains a <tt>clientMetadata</tt> attribute, which provides
--   the data that you assigned to the ClientMetadata parameter in your
--   GetUserAttributeVerificationCode request. In your function code in
--   Lambda, you can process the <tt>clientMetadata</tt> value to enhance
--   your workflow for your specific needs.
--   
--   For more information, see <a>Customizing User Pool Workflows with
--   Lambda Triggers</a> in the <i>Amazon Cognito Developer Guide</i>.
--   
--   Take the following limitations into consideration when you use the
--   ClientMetadata parameter:
--   
--   <ul>
--   <li>Amazon Cognito does not store the ClientMetadata value. This data
--   is available only to Lambda triggers that are assigned to a user pool
--   to support custom workflows. If your user pool configuration does not
--   include triggers, the ClientMetadata parameter serves no purpose.</li>
--   <li>Amazon Cognito does not validate the ClientMetadata value.</li>
--   <li>Amazon Cognito does not encrypt the the ClientMetadata value, so
--   don't use it to provide sensitive information.</li>
--   </ul>
--   
--   <a>$sel:accessToken:GetUserAttributeVerificationCode'</a>,
--   <a>getUserAttributeVerificationCode_accessToken</a> - The access token
--   returned by the server response to get the user attribute verification
--   code.
--   
--   <a>$sel:attributeName:GetUserAttributeVerificationCode'</a>,
--   <a>getUserAttributeVerificationCode_attributeName</a> - The attribute
--   name returned by the server response to get the user attribute
--   verification code.
newGetUserAttributeVerificationCode :: Text -> Text -> GetUserAttributeVerificationCode

-- | A map of custom key-value pairs that you can provide as input for any
--   custom workflows that this action triggers.
--   
--   You create custom workflows by assigning Lambda functions to user pool
--   triggers. When you use the GetUserAttributeVerificationCode API
--   action, Amazon Cognito invokes the function that is assigned to the
--   /custom message/ trigger. When Amazon Cognito invokes this function,
--   it passes a JSON payload, which the function receives as input. This
--   payload contains a <tt>clientMetadata</tt> attribute, which provides
--   the data that you assigned to the ClientMetadata parameter in your
--   GetUserAttributeVerificationCode request. In your function code in
--   Lambda, you can process the <tt>clientMetadata</tt> value to enhance
--   your workflow for your specific needs.
--   
--   For more information, see <a>Customizing User Pool Workflows with
--   Lambda Triggers</a> in the <i>Amazon Cognito Developer Guide</i>.
--   
--   Take the following limitations into consideration when you use the
--   ClientMetadata parameter:
--   
--   <ul>
--   <li>Amazon Cognito does not store the ClientMetadata value. This data
--   is available only to Lambda triggers that are assigned to a user pool
--   to support custom workflows. If your user pool configuration does not
--   include triggers, the ClientMetadata parameter serves no purpose.</li>
--   <li>Amazon Cognito does not validate the ClientMetadata value.</li>
--   <li>Amazon Cognito does not encrypt the the ClientMetadata value, so
--   don't use it to provide sensitive information.</li>
--   </ul>
getUserAttributeVerificationCode_clientMetadata :: Lens' GetUserAttributeVerificationCode (Maybe (HashMap Text Text))

-- | The access token returned by the server response to get the user
--   attribute verification code.
getUserAttributeVerificationCode_accessToken :: Lens' GetUserAttributeVerificationCode Text

-- | The attribute name returned by the server response to get the user
--   attribute verification code.
getUserAttributeVerificationCode_attributeName :: Lens' GetUserAttributeVerificationCode Text

-- | The verification code response returned by the server response to get
--   the user attribute verification code.
--   
--   <i>See:</i> <a>newGetUserAttributeVerificationCodeResponse</a> smart
--   constructor.
data GetUserAttributeVerificationCodeResponse
GetUserAttributeVerificationCodeResponse' :: Maybe CodeDeliveryDetailsType -> Int -> GetUserAttributeVerificationCodeResponse

-- | The code delivery details returned by the server in response to the
--   request to get the user attribute verification code.
[$sel:codeDeliveryDetails:GetUserAttributeVerificationCodeResponse'] :: GetUserAttributeVerificationCodeResponse -> Maybe CodeDeliveryDetailsType

-- | The response's http status code.
[$sel:httpStatus:GetUserAttributeVerificationCodeResponse'] :: GetUserAttributeVerificationCodeResponse -> Int

-- | Create a value of <a>GetUserAttributeVerificationCodeResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:codeDeliveryDetails:GetUserAttributeVerificationCodeResponse'</a>,
--   <a>getUserAttributeVerificationCodeResponse_codeDeliveryDetails</a> -
--   The code delivery details returned by the server in response to the
--   request to get the user attribute verification code.
--   
--   <a>$sel:httpStatus:GetUserAttributeVerificationCodeResponse'</a>,
--   <a>getUserAttributeVerificationCodeResponse_httpStatus</a> - The
--   response's http status code.
newGetUserAttributeVerificationCodeResponse :: Int -> GetUserAttributeVerificationCodeResponse

-- | The code delivery details returned by the server in response to the
--   request to get the user attribute verification code.
getUserAttributeVerificationCodeResponse_codeDeliveryDetails :: Lens' GetUserAttributeVerificationCodeResponse (Maybe CodeDeliveryDetailsType)

-- | The response's http status code.
getUserAttributeVerificationCodeResponse_httpStatus :: Lens' GetUserAttributeVerificationCodeResponse Int
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.GetUserAttributeVerificationCode.GetUserAttributeVerificationCode
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.GetUserAttributeVerificationCode.GetUserAttributeVerificationCode
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.GetUserAttributeVerificationCode.GetUserAttributeVerificationCode
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.GetUserAttributeVerificationCode.GetUserAttributeVerificationCodeResponse
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.GetUserAttributeVerificationCode.GetUserAttributeVerificationCodeResponse
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.GetUserAttributeVerificationCode.GetUserAttributeVerificationCodeResponse
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.GetUserAttributeVerificationCode.GetUserAttributeVerificationCodeResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CognitoIdentityProvider.GetUserAttributeVerificationCode.GetUserAttributeVerificationCode
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.GetUserAttributeVerificationCode.GetUserAttributeVerificationCodeResponse
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.GetUserAttributeVerificationCode.GetUserAttributeVerificationCode
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.GetUserAttributeVerificationCode.GetUserAttributeVerificationCode
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CognitoIdentityProvider.GetUserAttributeVerificationCode.GetUserAttributeVerificationCode
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.GetUserAttributeVerificationCode.GetUserAttributeVerificationCode
instance Network.AWS.Data.Path.ToPath Network.AWS.CognitoIdentityProvider.GetUserAttributeVerificationCode.GetUserAttributeVerificationCode
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentityProvider.GetUserAttributeVerificationCode.GetUserAttributeVerificationCode


-- | Gets the user attributes and metadata for a user.
module Network.AWS.CognitoIdentityProvider.GetUser

-- | Represents the request to get information about the user.
--   
--   <i>See:</i> <a>newGetUser</a> smart constructor.
data GetUser
GetUser' :: Sensitive Text -> GetUser

-- | The access token returned by the server response to get information
--   about the user.
[$sel:accessToken:GetUser'] :: GetUser -> Sensitive Text

-- | Create a value of <a>GetUser</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:accessToken:GetUser'</a>, <a>getUser_accessToken</a> - The
--   access token returned by the server response to get information about
--   the user.
newGetUser :: Text -> GetUser

-- | The access token returned by the server response to get information
--   about the user.
getUser_accessToken :: Lens' GetUser Text

-- | Represents the response from the server from the request to get
--   information about the user.
--   
--   <i>See:</i> <a>newGetUserResponse</a> smart constructor.
data GetUserResponse
GetUserResponse' :: Maybe [Text] -> Maybe [MFAOptionType] -> Maybe Text -> Int -> Sensitive Text -> [AttributeType] -> GetUserResponse

-- | The MFA options that are enabled for the user. The possible values in
--   this list are <tt>SMS_MFA</tt> and <tt>SOFTWARE_TOKEN_MFA</tt>.
[$sel:userMFASettingList:GetUserResponse'] :: GetUserResponse -> Maybe [Text]

-- | <i>This response parameter is no longer supported.</i> It provides
--   information only about SMS MFA configurations. It doesn't provide
--   information about TOTP software token MFA configurations. To look up
--   information about either type of MFA configuration, use
--   UserMFASettingList instead.
[$sel:mfaOptions:GetUserResponse'] :: GetUserResponse -> Maybe [MFAOptionType]

-- | The user's preferred MFA setting.
[$sel:preferredMfaSetting:GetUserResponse'] :: GetUserResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetUserResponse'] :: GetUserResponse -> Int

-- | The user name of the user you wish to retrieve from the get user
--   request.
[$sel:username:GetUserResponse'] :: GetUserResponse -> Sensitive Text

-- | An array of name-value pairs representing user attributes.
--   
--   For custom attributes, you must prepend the <tt>custom:</tt> prefix to
--   the attribute name.
[$sel:userAttributes:GetUserResponse'] :: GetUserResponse -> [AttributeType]

-- | Create a value of <a>GetUserResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userMFASettingList:GetUserResponse'</a>,
--   <a>getUserResponse_userMFASettingList</a> - The MFA options that are
--   enabled for the user. The possible values in this list are
--   <tt>SMS_MFA</tt> and <tt>SOFTWARE_TOKEN_MFA</tt>.
--   
--   <a>$sel:mfaOptions:GetUserResponse'</a>,
--   <a>getUserResponse_mfaOptions</a> - <i>This response parameter is no
--   longer supported.</i> It provides information only about SMS MFA
--   configurations. It doesn't provide information about TOTP software
--   token MFA configurations. To look up information about either type of
--   MFA configuration, use UserMFASettingList instead.
--   
--   <a>$sel:preferredMfaSetting:GetUserResponse'</a>,
--   <a>getUserResponse_preferredMfaSetting</a> - The user's preferred MFA
--   setting.
--   
--   <a>$sel:httpStatus:GetUserResponse'</a>,
--   <a>getUserResponse_httpStatus</a> - The response's http status code.
--   
--   <a>$sel:username:GetUserResponse'</a>, <a>getUserResponse_username</a>
--   - The user name of the user you wish to retrieve from the get user
--   request.
--   
--   <a>$sel:userAttributes:GetUserResponse'</a>,
--   <a>getUserResponse_userAttributes</a> - An array of name-value pairs
--   representing user attributes.
--   
--   For custom attributes, you must prepend the <tt>custom:</tt> prefix to
--   the attribute name.
newGetUserResponse :: Int -> Text -> GetUserResponse

-- | The MFA options that are enabled for the user. The possible values in
--   this list are <tt>SMS_MFA</tt> and <tt>SOFTWARE_TOKEN_MFA</tt>.
getUserResponse_userMFASettingList :: Lens' GetUserResponse (Maybe [Text])

-- | <i>This response parameter is no longer supported.</i> It provides
--   information only about SMS MFA configurations. It doesn't provide
--   information about TOTP software token MFA configurations. To look up
--   information about either type of MFA configuration, use
--   UserMFASettingList instead.
getUserResponse_mfaOptions :: Lens' GetUserResponse (Maybe [MFAOptionType])

-- | The user's preferred MFA setting.
getUserResponse_preferredMfaSetting :: Lens' GetUserResponse (Maybe Text)

-- | The response's http status code.
getUserResponse_httpStatus :: Lens' GetUserResponse Int

-- | The user name of the user you wish to retrieve from the get user
--   request.
getUserResponse_username :: Lens' GetUserResponse Text

-- | An array of name-value pairs representing user attributes.
--   
--   For custom attributes, you must prepend the <tt>custom:</tt> prefix to
--   the attribute name.
getUserResponse_userAttributes :: Lens' GetUserResponse [AttributeType]
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.GetUser.GetUser
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.GetUser.GetUser
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.GetUser.GetUser
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.GetUser.GetUserResponse
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.GetUser.GetUserResponse
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.GetUser.GetUserResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CognitoIdentityProvider.GetUser.GetUser
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.GetUser.GetUserResponse
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.GetUser.GetUser
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.GetUser.GetUser
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CognitoIdentityProvider.GetUser.GetUser
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.GetUser.GetUser
instance Network.AWS.Data.Path.ToPath Network.AWS.CognitoIdentityProvider.GetUser.GetUser
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentityProvider.GetUser.GetUser


-- | Gets the UI Customization information for a particular app client's
--   app UI, if there is something set. If nothing is set for the
--   particular client, but there is an existing pool level customization
--   (app <tt>clientId</tt> will be <tt>ALL</tt>), then that is returned.
--   If nothing is present, then an empty shape is returned.
module Network.AWS.CognitoIdentityProvider.GetUICustomization

-- | <i>See:</i> <a>newGetUICustomization</a> smart constructor.
data GetUICustomization
GetUICustomization' :: Maybe (Sensitive Text) -> Text -> GetUICustomization

-- | The client ID for the client app.
[$sel:clientId:GetUICustomization'] :: GetUICustomization -> Maybe (Sensitive Text)

-- | The user pool ID for the user pool.
[$sel:userPoolId:GetUICustomization'] :: GetUICustomization -> Text

-- | Create a value of <a>GetUICustomization</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientId:GetUICustomization'</a>,
--   <a>getUICustomization_clientId</a> - The client ID for the client app.
--   
--   <a>$sel:userPoolId:GetUICustomization'</a>,
--   <a>getUICustomization_userPoolId</a> - The user pool ID for the user
--   pool.
newGetUICustomization :: Text -> GetUICustomization

-- | The client ID for the client app.
getUICustomization_clientId :: Lens' GetUICustomization (Maybe Text)

-- | The user pool ID for the user pool.
getUICustomization_userPoolId :: Lens' GetUICustomization Text

-- | <i>See:</i> <a>newGetUICustomizationResponse</a> smart constructor.
data GetUICustomizationResponse
GetUICustomizationResponse' :: Int -> UICustomizationType -> GetUICustomizationResponse

-- | The response's http status code.
[$sel:httpStatus:GetUICustomizationResponse'] :: GetUICustomizationResponse -> Int

-- | The UI customization information.
[$sel:uICustomization:GetUICustomizationResponse'] :: GetUICustomizationResponse -> UICustomizationType

-- | Create a value of <a>GetUICustomizationResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:GetUICustomizationResponse'</a>,
--   <a>getUICustomizationResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:uICustomization:GetUICustomizationResponse'</a>,
--   <a>getUICustomizationResponse_uICustomization</a> - The UI
--   customization information.
newGetUICustomizationResponse :: Int -> UICustomizationType -> GetUICustomizationResponse

-- | The response's http status code.
getUICustomizationResponse_httpStatus :: Lens' GetUICustomizationResponse Int

-- | The UI customization information.
getUICustomizationResponse_uICustomization :: Lens' GetUICustomizationResponse UICustomizationType
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.GetUICustomization.GetUICustomization
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.GetUICustomization.GetUICustomization
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.GetUICustomization.GetUICustomization
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.GetUICustomization.GetUICustomizationResponse
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.GetUICustomization.GetUICustomizationResponse
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.GetUICustomization.GetUICustomizationResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CognitoIdentityProvider.GetUICustomization.GetUICustomization
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.GetUICustomization.GetUICustomizationResponse
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.GetUICustomization.GetUICustomization
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.GetUICustomization.GetUICustomization
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CognitoIdentityProvider.GetUICustomization.GetUICustomization
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.GetUICustomization.GetUICustomization
instance Network.AWS.Data.Path.ToPath Network.AWS.CognitoIdentityProvider.GetUICustomization.GetUICustomization
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentityProvider.GetUICustomization.GetUICustomization


-- | This method takes a user pool ID, and returns the signing certificate.
module Network.AWS.CognitoIdentityProvider.GetSigningCertificate

-- | Request to get a signing certificate from Cognito.
--   
--   <i>See:</i> <a>newGetSigningCertificate</a> smart constructor.
data GetSigningCertificate
GetSigningCertificate' :: Text -> GetSigningCertificate

-- | The user pool ID.
[$sel:userPoolId:GetSigningCertificate'] :: GetSigningCertificate -> Text

-- | Create a value of <a>GetSigningCertificate</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userPoolId:GetSigningCertificate'</a>,
--   <a>getSigningCertificate_userPoolId</a> - The user pool ID.
newGetSigningCertificate :: Text -> GetSigningCertificate

-- | The user pool ID.
getSigningCertificate_userPoolId :: Lens' GetSigningCertificate Text

-- | Response from Cognito for a signing certificate request.
--   
--   <i>See:</i> <a>newGetSigningCertificateResponse</a> smart constructor.
data GetSigningCertificateResponse
GetSigningCertificateResponse' :: Maybe Text -> Int -> GetSigningCertificateResponse

-- | The signing certificate.
[$sel:certificate:GetSigningCertificateResponse'] :: GetSigningCertificateResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetSigningCertificateResponse'] :: GetSigningCertificateResponse -> Int

-- | Create a value of <a>GetSigningCertificateResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:certificate:GetSigningCertificateResponse'</a>,
--   <a>getSigningCertificateResponse_certificate</a> - The signing
--   certificate.
--   
--   <a>$sel:httpStatus:GetSigningCertificateResponse'</a>,
--   <a>getSigningCertificateResponse_httpStatus</a> - The response's http
--   status code.
newGetSigningCertificateResponse :: Int -> GetSigningCertificateResponse

-- | The signing certificate.
getSigningCertificateResponse_certificate :: Lens' GetSigningCertificateResponse (Maybe Text)

-- | The response's http status code.
getSigningCertificateResponse_httpStatus :: Lens' GetSigningCertificateResponse Int
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.GetSigningCertificate.GetSigningCertificate
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.GetSigningCertificate.GetSigningCertificate
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.GetSigningCertificate.GetSigningCertificate
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.GetSigningCertificate.GetSigningCertificate
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.GetSigningCertificate.GetSigningCertificateResponse
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.GetSigningCertificate.GetSigningCertificateResponse
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.GetSigningCertificate.GetSigningCertificateResponse
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.GetSigningCertificate.GetSigningCertificateResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CognitoIdentityProvider.GetSigningCertificate.GetSigningCertificate
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.GetSigningCertificate.GetSigningCertificateResponse
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.GetSigningCertificate.GetSigningCertificate
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.GetSigningCertificate.GetSigningCertificate
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CognitoIdentityProvider.GetSigningCertificate.GetSigningCertificate
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.GetSigningCertificate.GetSigningCertificate
instance Network.AWS.Data.Path.ToPath Network.AWS.CognitoIdentityProvider.GetSigningCertificate.GetSigningCertificate
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentityProvider.GetSigningCertificate.GetSigningCertificate


-- | Gets the specified identity provider.
module Network.AWS.CognitoIdentityProvider.GetIdentityProviderByIdentifier

-- | <i>See:</i> <a>newGetIdentityProviderByIdentifier</a> smart
--   constructor.
data GetIdentityProviderByIdentifier
GetIdentityProviderByIdentifier' :: Text -> Text -> GetIdentityProviderByIdentifier

-- | The user pool ID.
[$sel:userPoolId:GetIdentityProviderByIdentifier'] :: GetIdentityProviderByIdentifier -> Text

-- | The identity provider ID.
[$sel:idpIdentifier:GetIdentityProviderByIdentifier'] :: GetIdentityProviderByIdentifier -> Text

-- | Create a value of <a>GetIdentityProviderByIdentifier</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userPoolId:GetIdentityProviderByIdentifier'</a>,
--   <a>getIdentityProviderByIdentifier_userPoolId</a> - The user pool ID.
--   
--   <a>$sel:idpIdentifier:GetIdentityProviderByIdentifier'</a>,
--   <a>getIdentityProviderByIdentifier_idpIdentifier</a> - The identity
--   provider ID.
newGetIdentityProviderByIdentifier :: Text -> Text -> GetIdentityProviderByIdentifier

-- | The user pool ID.
getIdentityProviderByIdentifier_userPoolId :: Lens' GetIdentityProviderByIdentifier Text

-- | The identity provider ID.
getIdentityProviderByIdentifier_idpIdentifier :: Lens' GetIdentityProviderByIdentifier Text

-- | <i>See:</i> <a>newGetIdentityProviderByIdentifierResponse</a> smart
--   constructor.
data GetIdentityProviderByIdentifierResponse
GetIdentityProviderByIdentifierResponse' :: Int -> IdentityProviderType -> GetIdentityProviderByIdentifierResponse

-- | The response's http status code.
[$sel:httpStatus:GetIdentityProviderByIdentifierResponse'] :: GetIdentityProviderByIdentifierResponse -> Int

-- | The identity provider object.
[$sel:identityProvider:GetIdentityProviderByIdentifierResponse'] :: GetIdentityProviderByIdentifierResponse -> IdentityProviderType

-- | Create a value of <a>GetIdentityProviderByIdentifierResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:GetIdentityProviderByIdentifierResponse'</a>,
--   <a>getIdentityProviderByIdentifierResponse_httpStatus</a> - The
--   response's http status code.
--   
--   <a>$sel:identityProvider:GetIdentityProviderByIdentifierResponse'</a>,
--   <a>getIdentityProviderByIdentifierResponse_identityProvider</a> - The
--   identity provider object.
newGetIdentityProviderByIdentifierResponse :: Int -> IdentityProviderType -> GetIdentityProviderByIdentifierResponse

-- | The response's http status code.
getIdentityProviderByIdentifierResponse_httpStatus :: Lens' GetIdentityProviderByIdentifierResponse Int

-- | The identity provider object.
getIdentityProviderByIdentifierResponse_identityProvider :: Lens' GetIdentityProviderByIdentifierResponse IdentityProviderType
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.GetIdentityProviderByIdentifier.GetIdentityProviderByIdentifier
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.GetIdentityProviderByIdentifier.GetIdentityProviderByIdentifier
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.GetIdentityProviderByIdentifier.GetIdentityProviderByIdentifier
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.GetIdentityProviderByIdentifier.GetIdentityProviderByIdentifier
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.GetIdentityProviderByIdentifier.GetIdentityProviderByIdentifierResponse
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.GetIdentityProviderByIdentifier.GetIdentityProviderByIdentifierResponse
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.GetIdentityProviderByIdentifier.GetIdentityProviderByIdentifierResponse
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.GetIdentityProviderByIdentifier.GetIdentityProviderByIdentifierResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CognitoIdentityProvider.GetIdentityProviderByIdentifier.GetIdentityProviderByIdentifier
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.GetIdentityProviderByIdentifier.GetIdentityProviderByIdentifierResponse
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.GetIdentityProviderByIdentifier.GetIdentityProviderByIdentifier
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.GetIdentityProviderByIdentifier.GetIdentityProviderByIdentifier
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CognitoIdentityProvider.GetIdentityProviderByIdentifier.GetIdentityProviderByIdentifier
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.GetIdentityProviderByIdentifier.GetIdentityProviderByIdentifier
instance Network.AWS.Data.Path.ToPath Network.AWS.CognitoIdentityProvider.GetIdentityProviderByIdentifier.GetIdentityProviderByIdentifier
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentityProvider.GetIdentityProviderByIdentifier.GetIdentityProviderByIdentifier


-- | Gets a group.
--   
--   Calling this action requires developer credentials.
module Network.AWS.CognitoIdentityProvider.GetGroup

-- | <i>See:</i> <a>newGetGroup</a> smart constructor.
data GetGroup
GetGroup' :: Text -> Text -> GetGroup

-- | The name of the group.
[$sel:groupName:GetGroup'] :: GetGroup -> Text

-- | The user pool ID for the user pool.
[$sel:userPoolId:GetGroup'] :: GetGroup -> Text

-- | Create a value of <a>GetGroup</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:groupName:GetGroup'</a>, <a>getGroup_groupName</a> - The name
--   of the group.
--   
--   <a>$sel:userPoolId:GetGroup'</a>, <a>getGroup_userPoolId</a> - The
--   user pool ID for the user pool.
newGetGroup :: Text -> Text -> GetGroup

-- | The name of the group.
getGroup_groupName :: Lens' GetGroup Text

-- | The user pool ID for the user pool.
getGroup_userPoolId :: Lens' GetGroup Text

-- | <i>See:</i> <a>newGetGroupResponse</a> smart constructor.
data GetGroupResponse
GetGroupResponse' :: Maybe GroupType -> Int -> GetGroupResponse

-- | The group object for the group.
[$sel:group':GetGroupResponse'] :: GetGroupResponse -> Maybe GroupType

-- | The response's http status code.
[$sel:httpStatus:GetGroupResponse'] :: GetGroupResponse -> Int

-- | Create a value of <a>GetGroupResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:group':GetGroupResponse'</a>, <a>getGroupResponse_group</a> -
--   The group object for the group.
--   
--   <a>$sel:httpStatus:GetGroupResponse'</a>,
--   <a>getGroupResponse_httpStatus</a> - The response's http status code.
newGetGroupResponse :: Int -> GetGroupResponse

-- | The group object for the group.
getGroupResponse_group :: Lens' GetGroupResponse (Maybe GroupType)

-- | The response's http status code.
getGroupResponse_httpStatus :: Lens' GetGroupResponse Int
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.GetGroup.GetGroup
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.GetGroup.GetGroup
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.GetGroup.GetGroup
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.GetGroup.GetGroup
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.GetGroup.GetGroupResponse
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.GetGroup.GetGroupResponse
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.GetGroup.GetGroupResponse
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.GetGroup.GetGroupResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CognitoIdentityProvider.GetGroup.GetGroup
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.GetGroup.GetGroupResponse
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.GetGroup.GetGroup
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.GetGroup.GetGroup
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CognitoIdentityProvider.GetGroup.GetGroup
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.GetGroup.GetGroup
instance Network.AWS.Data.Path.ToPath Network.AWS.CognitoIdentityProvider.GetGroup.GetGroup
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentityProvider.GetGroup.GetGroup


-- | Gets the device.
module Network.AWS.CognitoIdentityProvider.GetDevice

-- | Represents the request to get the device.
--   
--   <i>See:</i> <a>newGetDevice</a> smart constructor.
data GetDevice
GetDevice' :: Maybe (Sensitive Text) -> Text -> GetDevice

-- | The access token.
[$sel:accessToken:GetDevice'] :: GetDevice -> Maybe (Sensitive Text)

-- | The device key.
[$sel:deviceKey:GetDevice'] :: GetDevice -> Text

-- | Create a value of <a>GetDevice</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:accessToken:GetDevice'</a>, <a>getDevice_accessToken</a> - The
--   access token.
--   
--   <a>$sel:deviceKey:GetDevice'</a>, <a>getDevice_deviceKey</a> - The
--   device key.
newGetDevice :: Text -> GetDevice

-- | The access token.
getDevice_accessToken :: Lens' GetDevice (Maybe Text)

-- | The device key.
getDevice_deviceKey :: Lens' GetDevice Text

-- | Gets the device response.
--   
--   <i>See:</i> <a>newGetDeviceResponse</a> smart constructor.
data GetDeviceResponse
GetDeviceResponse' :: Int -> DeviceType -> GetDeviceResponse

-- | The response's http status code.
[$sel:httpStatus:GetDeviceResponse'] :: GetDeviceResponse -> Int

-- | The device.
[$sel:device:GetDeviceResponse'] :: GetDeviceResponse -> DeviceType

-- | Create a value of <a>GetDeviceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:GetDeviceResponse'</a>,
--   <a>getDeviceResponse_httpStatus</a> - The response's http status code.
--   
--   <a>$sel:device:GetDeviceResponse'</a>, <a>getDeviceResponse_device</a>
--   - The device.
newGetDeviceResponse :: Int -> DeviceType -> GetDeviceResponse

-- | The response's http status code.
getDeviceResponse_httpStatus :: Lens' GetDeviceResponse Int

-- | The device.
getDeviceResponse_device :: Lens' GetDeviceResponse DeviceType
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.GetDevice.GetDevice
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.GetDevice.GetDevice
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.GetDevice.GetDevice
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.GetDevice.GetDeviceResponse
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.GetDevice.GetDeviceResponse
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.GetDevice.GetDeviceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CognitoIdentityProvider.GetDevice.GetDevice
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.GetDevice.GetDeviceResponse
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.GetDevice.GetDevice
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.GetDevice.GetDevice
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CognitoIdentityProvider.GetDevice.GetDevice
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.GetDevice.GetDevice
instance Network.AWS.Data.Path.ToPath Network.AWS.CognitoIdentityProvider.GetDevice.GetDevice
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentityProvider.GetDevice.GetDevice


-- | Gets the header information for the .csv file to be used as input for
--   the user import job.
module Network.AWS.CognitoIdentityProvider.GetCSVHeader

-- | Represents the request to get the header information for the .csv file
--   for the user import job.
--   
--   <i>See:</i> <a>newGetCSVHeader</a> smart constructor.
data GetCSVHeader
GetCSVHeader' :: Text -> GetCSVHeader

-- | The user pool ID for the user pool that the users are to be imported
--   into.
[$sel:userPoolId:GetCSVHeader'] :: GetCSVHeader -> Text

-- | Create a value of <a>GetCSVHeader</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userPoolId:GetCSVHeader'</a>, <a>getCSVHeader_userPoolId</a> -
--   The user pool ID for the user pool that the users are to be imported
--   into.
newGetCSVHeader :: Text -> GetCSVHeader

-- | The user pool ID for the user pool that the users are to be imported
--   into.
getCSVHeader_userPoolId :: Lens' GetCSVHeader Text

-- | Represents the response from the server to the request to get the
--   header information for the .csv file for the user import job.
--   
--   <i>See:</i> <a>newGetCSVHeaderResponse</a> smart constructor.
data GetCSVHeaderResponse
GetCSVHeaderResponse' :: Maybe Text -> Maybe [Text] -> Int -> GetCSVHeaderResponse

-- | The user pool ID for the user pool that the users are to be imported
--   into.
[$sel:userPoolId:GetCSVHeaderResponse'] :: GetCSVHeaderResponse -> Maybe Text

-- | The header information for the .csv file for the user import job.
[$sel:cSVHeader:GetCSVHeaderResponse'] :: GetCSVHeaderResponse -> Maybe [Text]

-- | The response's http status code.
[$sel:httpStatus:GetCSVHeaderResponse'] :: GetCSVHeaderResponse -> Int

-- | Create a value of <a>GetCSVHeaderResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userPoolId:GetCSVHeader'</a>,
--   <a>getCSVHeaderResponse_userPoolId</a> - The user pool ID for the user
--   pool that the users are to be imported into.
--   
--   <a>$sel:cSVHeader:GetCSVHeaderResponse'</a>,
--   <a>getCSVHeaderResponse_cSVHeader</a> - The header information for the
--   .csv file for the user import job.
--   
--   <a>$sel:httpStatus:GetCSVHeaderResponse'</a>,
--   <a>getCSVHeaderResponse_httpStatus</a> - The response's http status
--   code.
newGetCSVHeaderResponse :: Int -> GetCSVHeaderResponse

-- | The user pool ID for the user pool that the users are to be imported
--   into.
getCSVHeaderResponse_userPoolId :: Lens' GetCSVHeaderResponse (Maybe Text)

-- | The header information for the .csv file for the user import job.
getCSVHeaderResponse_cSVHeader :: Lens' GetCSVHeaderResponse (Maybe [Text])

-- | The response's http status code.
getCSVHeaderResponse_httpStatus :: Lens' GetCSVHeaderResponse Int
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.GetCSVHeader.GetCSVHeader
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.GetCSVHeader.GetCSVHeader
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.GetCSVHeader.GetCSVHeader
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.GetCSVHeader.GetCSVHeader
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.GetCSVHeader.GetCSVHeaderResponse
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.GetCSVHeader.GetCSVHeaderResponse
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.GetCSVHeader.GetCSVHeaderResponse
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.GetCSVHeader.GetCSVHeaderResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CognitoIdentityProvider.GetCSVHeader.GetCSVHeader
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.GetCSVHeader.GetCSVHeaderResponse
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.GetCSVHeader.GetCSVHeader
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.GetCSVHeader.GetCSVHeader
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CognitoIdentityProvider.GetCSVHeader.GetCSVHeader
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.GetCSVHeader.GetCSVHeader
instance Network.AWS.Data.Path.ToPath Network.AWS.CognitoIdentityProvider.GetCSVHeader.GetCSVHeader
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentityProvider.GetCSVHeader.GetCSVHeader


-- | Calling this API causes a message to be sent to the end user with a
--   confirmation code that is required to change the user's password. For
--   the <tt>Username</tt> parameter, you can use the username or user
--   alias. The method used to send the confirmation code is sent according
--   to the specified AccountRecoverySetting. For more information, see
--   <a>Recovering User Accounts</a> in the <i>Amazon Cognito Developer
--   Guide</i>. If neither a verified phone number nor a verified email
--   exists, an <tt>InvalidParameterException</tt> is thrown. To use the
--   confirmation code for resetting the password, call
--   <a>ConfirmForgotPassword</a>.
--   
--   This action might generate an SMS text message. Starting June 1, 2021,
--   U.S. telecom carriers require that you register an origination phone
--   number before you can send SMS messages to U.S. phone numbers. If you
--   use SMS text messages in Amazon Cognito, you must register a phone
--   number with <a>Amazon Pinpoint</a>. Cognito will use the the
--   registered number automatically. Otherwise, Cognito users that must
--   receive SMS messages might be unable to sign up, activate their
--   accounts, or sign in.
--   
--   If you have never used SMS text messages with Amazon Cognito or any
--   other Amazon Web Service, Amazon SNS might place your account in SMS
--   sandbox. In
--   <i>&lt;https:</i><i>docs.aws.amazon.com</i>sns<i>latest</i>dg<i>sns-sms-sandbox.html
--   sandbox mode&gt;</i> , you’ll have limitations, such as sending
--   messages to only verified phone numbers. After testing in the sandbox
--   environment, you can move out of the SMS sandbox and into production.
--   For more information, see <a>SMS message settings for Cognito User
--   Pools</a> in the <i>Amazon Cognito Developer Guide</i>.
module Network.AWS.CognitoIdentityProvider.ForgotPassword

-- | Represents the request to reset a user's password.
--   
--   <i>See:</i> <a>newForgotPassword</a> smart constructor.
data ForgotPassword
ForgotPassword' :: Maybe (HashMap Text Text) -> Maybe AnalyticsMetadataType -> Maybe UserContextDataType -> Maybe (Sensitive Text) -> Sensitive Text -> Sensitive Text -> ForgotPassword

-- | A map of custom key-value pairs that you can provide as input for any
--   custom workflows that this action triggers.
--   
--   You create custom workflows by assigning Lambda functions to user pool
--   triggers. When you use the ForgotPassword API action, Amazon Cognito
--   invokes any functions that are assigned to the following triggers:
--   /pre sign-up<i>, </i>custom message<i>, and </i>user migration/. When
--   Amazon Cognito invokes any of these functions, it passes a JSON
--   payload, which the function receives as input. This payload contains a
--   <tt>clientMetadata</tt> attribute, which provides the data that you
--   assigned to the ClientMetadata parameter in your ForgotPassword
--   request. In your function code in Lambda, you can process the
--   <tt>clientMetadata</tt> value to enhance your workflow for your
--   specific needs.
--   
--   For more information, see <a>Customizing User Pool Workflows with
--   Lambda Triggers</a> in the <i>Amazon Cognito Developer Guide</i>.
--   
--   Take the following limitations into consideration when you use the
--   ClientMetadata parameter:
--   
--   <ul>
--   <li>Amazon Cognito does not store the ClientMetadata value. This data
--   is available only to Lambda triggers that are assigned to a user pool
--   to support custom workflows. If your user pool configuration does not
--   include triggers, the ClientMetadata parameter serves no purpose.</li>
--   <li>Amazon Cognito does not validate the ClientMetadata value.</li>
--   <li>Amazon Cognito does not encrypt the the ClientMetadata value, so
--   don't use it to provide sensitive information.</li>
--   </ul>
[$sel:clientMetadata:ForgotPassword'] :: ForgotPassword -> Maybe (HashMap Text Text)

-- | The Amazon Pinpoint analytics metadata for collecting metrics for
--   <tt>ForgotPassword</tt> calls.
[$sel:analyticsMetadata:ForgotPassword'] :: ForgotPassword -> Maybe AnalyticsMetadataType

-- | Contextual data such as the user's device fingerprint, IP address, or
--   location used for evaluating the risk of an unexpected event by Amazon
--   Cognito advanced security.
[$sel:userContextData:ForgotPassword'] :: ForgotPassword -> Maybe UserContextDataType

-- | A keyed-hash message authentication code (HMAC) calculated using the
--   secret key of a user pool client and username plus the client ID in
--   the message.
[$sel:secretHash:ForgotPassword'] :: ForgotPassword -> Maybe (Sensitive Text)

-- | The ID of the client associated with the user pool.
[$sel:clientId:ForgotPassword'] :: ForgotPassword -> Sensitive Text

-- | The user name of the user for whom you want to enter a code to reset a
--   forgotten password.
[$sel:username:ForgotPassword'] :: ForgotPassword -> Sensitive Text

-- | Create a value of <a>ForgotPassword</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientMetadata:ForgotPassword'</a>,
--   <a>forgotPassword_clientMetadata</a> - A map of custom key-value pairs
--   that you can provide as input for any custom workflows that this
--   action triggers.
--   
--   You create custom workflows by assigning Lambda functions to user pool
--   triggers. When you use the ForgotPassword API action, Amazon Cognito
--   invokes any functions that are assigned to the following triggers:
--   /pre sign-up<i>, </i>custom message<i>, and </i>user migration/. When
--   Amazon Cognito invokes any of these functions, it passes a JSON
--   payload, which the function receives as input. This payload contains a
--   <tt>clientMetadata</tt> attribute, which provides the data that you
--   assigned to the ClientMetadata parameter in your ForgotPassword
--   request. In your function code in Lambda, you can process the
--   <tt>clientMetadata</tt> value to enhance your workflow for your
--   specific needs.
--   
--   For more information, see <a>Customizing User Pool Workflows with
--   Lambda Triggers</a> in the <i>Amazon Cognito Developer Guide</i>.
--   
--   Take the following limitations into consideration when you use the
--   ClientMetadata parameter:
--   
--   <ul>
--   <li>Amazon Cognito does not store the ClientMetadata value. This data
--   is available only to Lambda triggers that are assigned to a user pool
--   to support custom workflows. If your user pool configuration does not
--   include triggers, the ClientMetadata parameter serves no purpose.</li>
--   <li>Amazon Cognito does not validate the ClientMetadata value.</li>
--   <li>Amazon Cognito does not encrypt the the ClientMetadata value, so
--   don't use it to provide sensitive information.</li>
--   </ul>
--   
--   <a>$sel:analyticsMetadata:ForgotPassword'</a>,
--   <a>forgotPassword_analyticsMetadata</a> - The Amazon Pinpoint
--   analytics metadata for collecting metrics for <tt>ForgotPassword</tt>
--   calls.
--   
--   <a>$sel:userContextData:ForgotPassword'</a>,
--   <a>forgotPassword_userContextData</a> - Contextual data such as the
--   user's device fingerprint, IP address, or location used for evaluating
--   the risk of an unexpected event by Amazon Cognito advanced security.
--   
--   <a>$sel:secretHash:ForgotPassword'</a>,
--   <a>forgotPassword_secretHash</a> - A keyed-hash message authentication
--   code (HMAC) calculated using the secret key of a user pool client and
--   username plus the client ID in the message.
--   
--   <a>$sel:clientId:ForgotPassword'</a>, <a>forgotPassword_clientId</a> -
--   The ID of the client associated with the user pool.
--   
--   <a>$sel:username:ForgotPassword'</a>, <a>forgotPassword_username</a> -
--   The user name of the user for whom you want to enter a code to reset a
--   forgotten password.
newForgotPassword :: Text -> Text -> ForgotPassword

-- | A map of custom key-value pairs that you can provide as input for any
--   custom workflows that this action triggers.
--   
--   You create custom workflows by assigning Lambda functions to user pool
--   triggers. When you use the ForgotPassword API action, Amazon Cognito
--   invokes any functions that are assigned to the following triggers:
--   /pre sign-up<i>, </i>custom message<i>, and </i>user migration/. When
--   Amazon Cognito invokes any of these functions, it passes a JSON
--   payload, which the function receives as input. This payload contains a
--   <tt>clientMetadata</tt> attribute, which provides the data that you
--   assigned to the ClientMetadata parameter in your ForgotPassword
--   request. In your function code in Lambda, you can process the
--   <tt>clientMetadata</tt> value to enhance your workflow for your
--   specific needs.
--   
--   For more information, see <a>Customizing User Pool Workflows with
--   Lambda Triggers</a> in the <i>Amazon Cognito Developer Guide</i>.
--   
--   Take the following limitations into consideration when you use the
--   ClientMetadata parameter:
--   
--   <ul>
--   <li>Amazon Cognito does not store the ClientMetadata value. This data
--   is available only to Lambda triggers that are assigned to a user pool
--   to support custom workflows. If your user pool configuration does not
--   include triggers, the ClientMetadata parameter serves no purpose.</li>
--   <li>Amazon Cognito does not validate the ClientMetadata value.</li>
--   <li>Amazon Cognito does not encrypt the the ClientMetadata value, so
--   don't use it to provide sensitive information.</li>
--   </ul>
forgotPassword_clientMetadata :: Lens' ForgotPassword (Maybe (HashMap Text Text))

-- | The Amazon Pinpoint analytics metadata for collecting metrics for
--   <tt>ForgotPassword</tt> calls.
forgotPassword_analyticsMetadata :: Lens' ForgotPassword (Maybe AnalyticsMetadataType)

-- | Contextual data such as the user's device fingerprint, IP address, or
--   location used for evaluating the risk of an unexpected event by Amazon
--   Cognito advanced security.
forgotPassword_userContextData :: Lens' ForgotPassword (Maybe UserContextDataType)

-- | A keyed-hash message authentication code (HMAC) calculated using the
--   secret key of a user pool client and username plus the client ID in
--   the message.
forgotPassword_secretHash :: Lens' ForgotPassword (Maybe Text)

-- | The ID of the client associated with the user pool.
forgotPassword_clientId :: Lens' ForgotPassword Text

-- | The user name of the user for whom you want to enter a code to reset a
--   forgotten password.
forgotPassword_username :: Lens' ForgotPassword Text

-- | Respresents the response from the server regarding the request to
--   reset a password.
--   
--   <i>See:</i> <a>newForgotPasswordResponse</a> smart constructor.
data ForgotPasswordResponse
ForgotPasswordResponse' :: Maybe CodeDeliveryDetailsType -> Int -> ForgotPasswordResponse

-- | The code delivery details returned by the server in response to the
--   request to reset a password.
[$sel:codeDeliveryDetails:ForgotPasswordResponse'] :: ForgotPasswordResponse -> Maybe CodeDeliveryDetailsType

-- | The response's http status code.
[$sel:httpStatus:ForgotPasswordResponse'] :: ForgotPasswordResponse -> Int

-- | Create a value of <a>ForgotPasswordResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:codeDeliveryDetails:ForgotPasswordResponse'</a>,
--   <a>forgotPasswordResponse_codeDeliveryDetails</a> - The code delivery
--   details returned by the server in response to the request to reset a
--   password.
--   
--   <a>$sel:httpStatus:ForgotPasswordResponse'</a>,
--   <a>forgotPasswordResponse_httpStatus</a> - The response's http status
--   code.
newForgotPasswordResponse :: Int -> ForgotPasswordResponse

-- | The code delivery details returned by the server in response to the
--   request to reset a password.
forgotPasswordResponse_codeDeliveryDetails :: Lens' ForgotPasswordResponse (Maybe CodeDeliveryDetailsType)

-- | The response's http status code.
forgotPasswordResponse_httpStatus :: Lens' ForgotPasswordResponse Int
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.ForgotPassword.ForgotPassword
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.ForgotPassword.ForgotPassword
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.ForgotPassword.ForgotPassword
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.ForgotPassword.ForgotPasswordResponse
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.ForgotPassword.ForgotPasswordResponse
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.ForgotPassword.ForgotPasswordResponse
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.ForgotPassword.ForgotPasswordResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CognitoIdentityProvider.ForgotPassword.ForgotPassword
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.ForgotPassword.ForgotPasswordResponse
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.ForgotPassword.ForgotPassword
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.ForgotPassword.ForgotPassword
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CognitoIdentityProvider.ForgotPassword.ForgotPassword
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.ForgotPassword.ForgotPassword
instance Network.AWS.Data.Path.ToPath Network.AWS.CognitoIdentityProvider.ForgotPassword.ForgotPassword
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentityProvider.ForgotPassword.ForgotPassword


-- | Forgets the specified device.
module Network.AWS.CognitoIdentityProvider.ForgetDevice

-- | Represents the request to forget the device.
--   
--   <i>See:</i> <a>newForgetDevice</a> smart constructor.
data ForgetDevice
ForgetDevice' :: Maybe (Sensitive Text) -> Text -> ForgetDevice

-- | The access token for the forgotten device request.
[$sel:accessToken:ForgetDevice'] :: ForgetDevice -> Maybe (Sensitive Text)

-- | The device key.
[$sel:deviceKey:ForgetDevice'] :: ForgetDevice -> Text

-- | Create a value of <a>ForgetDevice</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:accessToken:ForgetDevice'</a>, <a>forgetDevice_accessToken</a>
--   - The access token for the forgotten device request.
--   
--   <a>$sel:deviceKey:ForgetDevice'</a>, <a>forgetDevice_deviceKey</a> -
--   The device key.
newForgetDevice :: Text -> ForgetDevice

-- | The access token for the forgotten device request.
forgetDevice_accessToken :: Lens' ForgetDevice (Maybe Text)

-- | The device key.
forgetDevice_deviceKey :: Lens' ForgetDevice Text

-- | <i>See:</i> <a>newForgetDeviceResponse</a> smart constructor.
data ForgetDeviceResponse
ForgetDeviceResponse' :: ForgetDeviceResponse

-- | Create a value of <a>ForgetDeviceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newForgetDeviceResponse :: ForgetDeviceResponse
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.ForgetDevice.ForgetDevice
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.ForgetDevice.ForgetDevice
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.ForgetDevice.ForgetDevice
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.ForgetDevice.ForgetDeviceResponse
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.ForgetDevice.ForgetDeviceResponse
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.ForgetDevice.ForgetDeviceResponse
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.ForgetDevice.ForgetDeviceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CognitoIdentityProvider.ForgetDevice.ForgetDevice
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.ForgetDevice.ForgetDeviceResponse
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.ForgetDevice.ForgetDevice
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.ForgetDevice.ForgetDevice
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CognitoIdentityProvider.ForgetDevice.ForgetDevice
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.ForgetDevice.ForgetDevice
instance Network.AWS.Data.Path.ToPath Network.AWS.CognitoIdentityProvider.ForgetDevice.ForgetDevice
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentityProvider.ForgetDevice.ForgetDevice


-- | Gets information about a domain.
module Network.AWS.CognitoIdentityProvider.DescribeUserPoolDomain

-- | <i>See:</i> <a>newDescribeUserPoolDomain</a> smart constructor.
data DescribeUserPoolDomain
DescribeUserPoolDomain' :: Text -> DescribeUserPoolDomain

-- | The domain string.
[$sel:domain:DescribeUserPoolDomain'] :: DescribeUserPoolDomain -> Text

-- | Create a value of <a>DescribeUserPoolDomain</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:domain:DescribeUserPoolDomain'</a>,
--   <a>describeUserPoolDomain_domain</a> - The domain string.
newDescribeUserPoolDomain :: Text -> DescribeUserPoolDomain

-- | The domain string.
describeUserPoolDomain_domain :: Lens' DescribeUserPoolDomain Text

-- | <i>See:</i> <a>newDescribeUserPoolDomainResponse</a> smart
--   constructor.
data DescribeUserPoolDomainResponse
DescribeUserPoolDomainResponse' :: Maybe DomainDescriptionType -> Int -> DescribeUserPoolDomainResponse

-- | A domain description object containing information about the domain.
[$sel:domainDescription:DescribeUserPoolDomainResponse'] :: DescribeUserPoolDomainResponse -> Maybe DomainDescriptionType

-- | The response's http status code.
[$sel:httpStatus:DescribeUserPoolDomainResponse'] :: DescribeUserPoolDomainResponse -> Int

-- | Create a value of <a>DescribeUserPoolDomainResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:domainDescription:DescribeUserPoolDomainResponse'</a>,
--   <a>describeUserPoolDomainResponse_domainDescription</a> - A domain
--   description object containing information about the domain.
--   
--   <a>$sel:httpStatus:DescribeUserPoolDomainResponse'</a>,
--   <a>describeUserPoolDomainResponse_httpStatus</a> - The response's http
--   status code.
newDescribeUserPoolDomainResponse :: Int -> DescribeUserPoolDomainResponse

-- | A domain description object containing information about the domain.
describeUserPoolDomainResponse_domainDescription :: Lens' DescribeUserPoolDomainResponse (Maybe DomainDescriptionType)

-- | The response's http status code.
describeUserPoolDomainResponse_httpStatus :: Lens' DescribeUserPoolDomainResponse Int
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.DescribeUserPoolDomain.DescribeUserPoolDomain
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.DescribeUserPoolDomain.DescribeUserPoolDomain
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.DescribeUserPoolDomain.DescribeUserPoolDomain
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.DescribeUserPoolDomain.DescribeUserPoolDomain
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.DescribeUserPoolDomain.DescribeUserPoolDomainResponse
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.DescribeUserPoolDomain.DescribeUserPoolDomainResponse
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.DescribeUserPoolDomain.DescribeUserPoolDomainResponse
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.DescribeUserPoolDomain.DescribeUserPoolDomainResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CognitoIdentityProvider.DescribeUserPoolDomain.DescribeUserPoolDomain
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.DescribeUserPoolDomain.DescribeUserPoolDomainResponse
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.DescribeUserPoolDomain.DescribeUserPoolDomain
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.DescribeUserPoolDomain.DescribeUserPoolDomain
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CognitoIdentityProvider.DescribeUserPoolDomain.DescribeUserPoolDomain
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.DescribeUserPoolDomain.DescribeUserPoolDomain
instance Network.AWS.Data.Path.ToPath Network.AWS.CognitoIdentityProvider.DescribeUserPoolDomain.DescribeUserPoolDomain
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentityProvider.DescribeUserPoolDomain.DescribeUserPoolDomain


-- | Client method for returning the configuration information and metadata
--   of the specified user pool app client.
module Network.AWS.CognitoIdentityProvider.DescribeUserPoolClient

-- | Represents the request to describe a user pool client.
--   
--   <i>See:</i> <a>newDescribeUserPoolClient</a> smart constructor.
data DescribeUserPoolClient
DescribeUserPoolClient' :: Text -> Sensitive Text -> DescribeUserPoolClient

-- | The user pool ID for the user pool you want to describe.
[$sel:userPoolId:DescribeUserPoolClient'] :: DescribeUserPoolClient -> Text

-- | The app client ID of the app associated with the user pool.
[$sel:clientId:DescribeUserPoolClient'] :: DescribeUserPoolClient -> Sensitive Text

-- | Create a value of <a>DescribeUserPoolClient</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userPoolId:DescribeUserPoolClient'</a>,
--   <a>describeUserPoolClient_userPoolId</a> - The user pool ID for the
--   user pool you want to describe.
--   
--   <a>$sel:clientId:DescribeUserPoolClient'</a>,
--   <a>describeUserPoolClient_clientId</a> - The app client ID of the app
--   associated with the user pool.
newDescribeUserPoolClient :: Text -> Text -> DescribeUserPoolClient

-- | The user pool ID for the user pool you want to describe.
describeUserPoolClient_userPoolId :: Lens' DescribeUserPoolClient Text

-- | The app client ID of the app associated with the user pool.
describeUserPoolClient_clientId :: Lens' DescribeUserPoolClient Text

-- | Represents the response from the server from a request to describe the
--   user pool client.
--   
--   <i>See:</i> <a>newDescribeUserPoolClientResponse</a> smart
--   constructor.
data DescribeUserPoolClientResponse
DescribeUserPoolClientResponse' :: Maybe UserPoolClientType -> Int -> DescribeUserPoolClientResponse

-- | The user pool client from a server response to describe the user pool
--   client.
[$sel:userPoolClient:DescribeUserPoolClientResponse'] :: DescribeUserPoolClientResponse -> Maybe UserPoolClientType

-- | The response's http status code.
[$sel:httpStatus:DescribeUserPoolClientResponse'] :: DescribeUserPoolClientResponse -> Int

-- | Create a value of <a>DescribeUserPoolClientResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userPoolClient:DescribeUserPoolClientResponse'</a>,
--   <a>describeUserPoolClientResponse_userPoolClient</a> - The user pool
--   client from a server response to describe the user pool client.
--   
--   <a>$sel:httpStatus:DescribeUserPoolClientResponse'</a>,
--   <a>describeUserPoolClientResponse_httpStatus</a> - The response's http
--   status code.
newDescribeUserPoolClientResponse :: Int -> DescribeUserPoolClientResponse

-- | The user pool client from a server response to describe the user pool
--   client.
describeUserPoolClientResponse_userPoolClient :: Lens' DescribeUserPoolClientResponse (Maybe UserPoolClientType)

-- | The response's http status code.
describeUserPoolClientResponse_httpStatus :: Lens' DescribeUserPoolClientResponse Int
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.DescribeUserPoolClient.DescribeUserPoolClient
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.DescribeUserPoolClient.DescribeUserPoolClient
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.DescribeUserPoolClient.DescribeUserPoolClient
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.DescribeUserPoolClient.DescribeUserPoolClientResponse
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.DescribeUserPoolClient.DescribeUserPoolClientResponse
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.DescribeUserPoolClient.DescribeUserPoolClientResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CognitoIdentityProvider.DescribeUserPoolClient.DescribeUserPoolClient
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.DescribeUserPoolClient.DescribeUserPoolClientResponse
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.DescribeUserPoolClient.DescribeUserPoolClient
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.DescribeUserPoolClient.DescribeUserPoolClient
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CognitoIdentityProvider.DescribeUserPoolClient.DescribeUserPoolClient
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.DescribeUserPoolClient.DescribeUserPoolClient
instance Network.AWS.Data.Path.ToPath Network.AWS.CognitoIdentityProvider.DescribeUserPoolClient.DescribeUserPoolClient
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentityProvider.DescribeUserPoolClient.DescribeUserPoolClient


-- | Returns the configuration information and metadata of the specified
--   user pool.
module Network.AWS.CognitoIdentityProvider.DescribeUserPool

-- | Represents the request to describe the user pool.
--   
--   <i>See:</i> <a>newDescribeUserPool</a> smart constructor.
data DescribeUserPool
DescribeUserPool' :: Text -> DescribeUserPool

-- | The user pool ID for the user pool you want to describe.
[$sel:userPoolId:DescribeUserPool'] :: DescribeUserPool -> Text

-- | Create a value of <a>DescribeUserPool</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userPoolId:DescribeUserPool'</a>,
--   <a>describeUserPool_userPoolId</a> - The user pool ID for the user
--   pool you want to describe.
newDescribeUserPool :: Text -> DescribeUserPool

-- | The user pool ID for the user pool you want to describe.
describeUserPool_userPoolId :: Lens' DescribeUserPool Text

-- | Represents the response to describe the user pool.
--   
--   <i>See:</i> <a>newDescribeUserPoolResponse</a> smart constructor.
data DescribeUserPoolResponse
DescribeUserPoolResponse' :: Maybe UserPoolType -> Int -> DescribeUserPoolResponse

-- | The container of metadata returned by the server to describe the pool.
[$sel:userPool:DescribeUserPoolResponse'] :: DescribeUserPoolResponse -> Maybe UserPoolType

-- | The response's http status code.
[$sel:httpStatus:DescribeUserPoolResponse'] :: DescribeUserPoolResponse -> Int

-- | Create a value of <a>DescribeUserPoolResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userPool:DescribeUserPoolResponse'</a>,
--   <a>describeUserPoolResponse_userPool</a> - The container of metadata
--   returned by the server to describe the pool.
--   
--   <a>$sel:httpStatus:DescribeUserPoolResponse'</a>,
--   <a>describeUserPoolResponse_httpStatus</a> - The response's http
--   status code.
newDescribeUserPoolResponse :: Int -> DescribeUserPoolResponse

-- | The container of metadata returned by the server to describe the pool.
describeUserPoolResponse_userPool :: Lens' DescribeUserPoolResponse (Maybe UserPoolType)

-- | The response's http status code.
describeUserPoolResponse_httpStatus :: Lens' DescribeUserPoolResponse Int
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.DescribeUserPool.DescribeUserPool
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.DescribeUserPool.DescribeUserPool
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.DescribeUserPool.DescribeUserPool
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.DescribeUserPool.DescribeUserPool
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.DescribeUserPool.DescribeUserPoolResponse
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.DescribeUserPool.DescribeUserPoolResponse
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.DescribeUserPool.DescribeUserPoolResponse
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.DescribeUserPool.DescribeUserPoolResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CognitoIdentityProvider.DescribeUserPool.DescribeUserPool
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.DescribeUserPool.DescribeUserPoolResponse
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.DescribeUserPool.DescribeUserPool
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.DescribeUserPool.DescribeUserPool
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CognitoIdentityProvider.DescribeUserPool.DescribeUserPool
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.DescribeUserPool.DescribeUserPool
instance Network.AWS.Data.Path.ToPath Network.AWS.CognitoIdentityProvider.DescribeUserPool.DescribeUserPool
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentityProvider.DescribeUserPool.DescribeUserPool


-- | Describes the user import job.
module Network.AWS.CognitoIdentityProvider.DescribeUserImportJob

-- | Represents the request to describe the user import job.
--   
--   <i>See:</i> <a>newDescribeUserImportJob</a> smart constructor.
data DescribeUserImportJob
DescribeUserImportJob' :: Text -> Text -> DescribeUserImportJob

-- | The user pool ID for the user pool that the users are being imported
--   into.
[$sel:userPoolId:DescribeUserImportJob'] :: DescribeUserImportJob -> Text

-- | The job ID for the user import job.
[$sel:jobId:DescribeUserImportJob'] :: DescribeUserImportJob -> Text

-- | Create a value of <a>DescribeUserImportJob</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userPoolId:DescribeUserImportJob'</a>,
--   <a>describeUserImportJob_userPoolId</a> - The user pool ID for the
--   user pool that the users are being imported into.
--   
--   <a>$sel:jobId:DescribeUserImportJob'</a>,
--   <a>describeUserImportJob_jobId</a> - The job ID for the user import
--   job.
newDescribeUserImportJob :: Text -> Text -> DescribeUserImportJob

-- | The user pool ID for the user pool that the users are being imported
--   into.
describeUserImportJob_userPoolId :: Lens' DescribeUserImportJob Text

-- | The job ID for the user import job.
describeUserImportJob_jobId :: Lens' DescribeUserImportJob Text

-- | Represents the response from the server to the request to describe the
--   user import job.
--   
--   <i>See:</i> <a>newDescribeUserImportJobResponse</a> smart constructor.
data DescribeUserImportJobResponse
DescribeUserImportJobResponse' :: Maybe UserImportJobType -> Int -> DescribeUserImportJobResponse

-- | The job object that represents the user import job.
[$sel:userImportJob:DescribeUserImportJobResponse'] :: DescribeUserImportJobResponse -> Maybe UserImportJobType

-- | The response's http status code.
[$sel:httpStatus:DescribeUserImportJobResponse'] :: DescribeUserImportJobResponse -> Int

-- | Create a value of <a>DescribeUserImportJobResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userImportJob:DescribeUserImportJobResponse'</a>,
--   <a>describeUserImportJobResponse_userImportJob</a> - The job object
--   that represents the user import job.
--   
--   <a>$sel:httpStatus:DescribeUserImportJobResponse'</a>,
--   <a>describeUserImportJobResponse_httpStatus</a> - The response's http
--   status code.
newDescribeUserImportJobResponse :: Int -> DescribeUserImportJobResponse

-- | The job object that represents the user import job.
describeUserImportJobResponse_userImportJob :: Lens' DescribeUserImportJobResponse (Maybe UserImportJobType)

-- | The response's http status code.
describeUserImportJobResponse_httpStatus :: Lens' DescribeUserImportJobResponse Int
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.DescribeUserImportJob.DescribeUserImportJob
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.DescribeUserImportJob.DescribeUserImportJob
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.DescribeUserImportJob.DescribeUserImportJob
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.DescribeUserImportJob.DescribeUserImportJob
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.DescribeUserImportJob.DescribeUserImportJobResponse
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.DescribeUserImportJob.DescribeUserImportJobResponse
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.DescribeUserImportJob.DescribeUserImportJobResponse
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.DescribeUserImportJob.DescribeUserImportJobResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CognitoIdentityProvider.DescribeUserImportJob.DescribeUserImportJob
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.DescribeUserImportJob.DescribeUserImportJobResponse
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.DescribeUserImportJob.DescribeUserImportJob
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.DescribeUserImportJob.DescribeUserImportJob
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CognitoIdentityProvider.DescribeUserImportJob.DescribeUserImportJob
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.DescribeUserImportJob.DescribeUserImportJob
instance Network.AWS.Data.Path.ToPath Network.AWS.CognitoIdentityProvider.DescribeUserImportJob.DescribeUserImportJob
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentityProvider.DescribeUserImportJob.DescribeUserImportJob


-- | Describes the risk configuration.
module Network.AWS.CognitoIdentityProvider.DescribeRiskConfiguration

-- | <i>See:</i> <a>newDescribeRiskConfiguration</a> smart constructor.
data DescribeRiskConfiguration
DescribeRiskConfiguration' :: Maybe (Sensitive Text) -> Text -> DescribeRiskConfiguration

-- | The app client ID.
[$sel:clientId:DescribeRiskConfiguration'] :: DescribeRiskConfiguration -> Maybe (Sensitive Text)

-- | The user pool ID.
[$sel:userPoolId:DescribeRiskConfiguration'] :: DescribeRiskConfiguration -> Text

-- | Create a value of <a>DescribeRiskConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientId:DescribeRiskConfiguration'</a>,
--   <a>describeRiskConfiguration_clientId</a> - The app client ID.
--   
--   <a>$sel:userPoolId:DescribeRiskConfiguration'</a>,
--   <a>describeRiskConfiguration_userPoolId</a> - The user pool ID.
newDescribeRiskConfiguration :: Text -> DescribeRiskConfiguration

-- | The app client ID.
describeRiskConfiguration_clientId :: Lens' DescribeRiskConfiguration (Maybe Text)

-- | The user pool ID.
describeRiskConfiguration_userPoolId :: Lens' DescribeRiskConfiguration Text

-- | <i>See:</i> <a>newDescribeRiskConfigurationResponse</a> smart
--   constructor.
data DescribeRiskConfigurationResponse
DescribeRiskConfigurationResponse' :: Int -> RiskConfigurationType -> DescribeRiskConfigurationResponse

-- | The response's http status code.
[$sel:httpStatus:DescribeRiskConfigurationResponse'] :: DescribeRiskConfigurationResponse -> Int

-- | The risk configuration.
[$sel:riskConfiguration:DescribeRiskConfigurationResponse'] :: DescribeRiskConfigurationResponse -> RiskConfigurationType

-- | Create a value of <a>DescribeRiskConfigurationResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DescribeRiskConfigurationResponse'</a>,
--   <a>describeRiskConfigurationResponse_httpStatus</a> - The response's
--   http status code.
--   
--   <a>$sel:riskConfiguration:DescribeRiskConfigurationResponse'</a>,
--   <a>describeRiskConfigurationResponse_riskConfiguration</a> - The risk
--   configuration.
newDescribeRiskConfigurationResponse :: Int -> RiskConfigurationType -> DescribeRiskConfigurationResponse

-- | The response's http status code.
describeRiskConfigurationResponse_httpStatus :: Lens' DescribeRiskConfigurationResponse Int

-- | The risk configuration.
describeRiskConfigurationResponse_riskConfiguration :: Lens' DescribeRiskConfigurationResponse RiskConfigurationType
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.DescribeRiskConfiguration.DescribeRiskConfiguration
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.DescribeRiskConfiguration.DescribeRiskConfiguration
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.DescribeRiskConfiguration.DescribeRiskConfiguration
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.DescribeRiskConfiguration.DescribeRiskConfigurationResponse
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.DescribeRiskConfiguration.DescribeRiskConfigurationResponse
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.DescribeRiskConfiguration.DescribeRiskConfigurationResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CognitoIdentityProvider.DescribeRiskConfiguration.DescribeRiskConfiguration
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.DescribeRiskConfiguration.DescribeRiskConfigurationResponse
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.DescribeRiskConfiguration.DescribeRiskConfiguration
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.DescribeRiskConfiguration.DescribeRiskConfiguration
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CognitoIdentityProvider.DescribeRiskConfiguration.DescribeRiskConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.DescribeRiskConfiguration.DescribeRiskConfiguration
instance Network.AWS.Data.Path.ToPath Network.AWS.CognitoIdentityProvider.DescribeRiskConfiguration.DescribeRiskConfiguration
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentityProvider.DescribeRiskConfiguration.DescribeRiskConfiguration


-- | Describes a resource server.
module Network.AWS.CognitoIdentityProvider.DescribeResourceServer

-- | <i>See:</i> <a>newDescribeResourceServer</a> smart constructor.
data DescribeResourceServer
DescribeResourceServer' :: Text -> Text -> DescribeResourceServer

-- | The user pool ID for the user pool that hosts the resource server.
[$sel:userPoolId:DescribeResourceServer'] :: DescribeResourceServer -> Text

-- | The identifier for the resource server
[$sel:identifier:DescribeResourceServer'] :: DescribeResourceServer -> Text

-- | Create a value of <a>DescribeResourceServer</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userPoolId:DescribeResourceServer'</a>,
--   <a>describeResourceServer_userPoolId</a> - The user pool ID for the
--   user pool that hosts the resource server.
--   
--   <a>$sel:identifier:DescribeResourceServer'</a>,
--   <a>describeResourceServer_identifier</a> - The identifier for the
--   resource server
newDescribeResourceServer :: Text -> Text -> DescribeResourceServer

-- | The user pool ID for the user pool that hosts the resource server.
describeResourceServer_userPoolId :: Lens' DescribeResourceServer Text

-- | The identifier for the resource server
describeResourceServer_identifier :: Lens' DescribeResourceServer Text

-- | <i>See:</i> <a>newDescribeResourceServerResponse</a> smart
--   constructor.
data DescribeResourceServerResponse
DescribeResourceServerResponse' :: Int -> ResourceServerType -> DescribeResourceServerResponse

-- | The response's http status code.
[$sel:httpStatus:DescribeResourceServerResponse'] :: DescribeResourceServerResponse -> Int

-- | The resource server.
[$sel:resourceServer:DescribeResourceServerResponse'] :: DescribeResourceServerResponse -> ResourceServerType

-- | Create a value of <a>DescribeResourceServerResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DescribeResourceServerResponse'</a>,
--   <a>describeResourceServerResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:resourceServer:DescribeResourceServerResponse'</a>,
--   <a>describeResourceServerResponse_resourceServer</a> - The resource
--   server.
newDescribeResourceServerResponse :: Int -> ResourceServerType -> DescribeResourceServerResponse

-- | The response's http status code.
describeResourceServerResponse_httpStatus :: Lens' DescribeResourceServerResponse Int

-- | The resource server.
describeResourceServerResponse_resourceServer :: Lens' DescribeResourceServerResponse ResourceServerType
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.DescribeResourceServer.DescribeResourceServer
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.DescribeResourceServer.DescribeResourceServer
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.DescribeResourceServer.DescribeResourceServer
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.DescribeResourceServer.DescribeResourceServer
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.DescribeResourceServer.DescribeResourceServerResponse
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.DescribeResourceServer.DescribeResourceServerResponse
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.DescribeResourceServer.DescribeResourceServerResponse
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.DescribeResourceServer.DescribeResourceServerResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CognitoIdentityProvider.DescribeResourceServer.DescribeResourceServer
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.DescribeResourceServer.DescribeResourceServerResponse
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.DescribeResourceServer.DescribeResourceServer
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.DescribeResourceServer.DescribeResourceServer
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CognitoIdentityProvider.DescribeResourceServer.DescribeResourceServer
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.DescribeResourceServer.DescribeResourceServer
instance Network.AWS.Data.Path.ToPath Network.AWS.CognitoIdentityProvider.DescribeResourceServer.DescribeResourceServer
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentityProvider.DescribeResourceServer.DescribeResourceServer


-- | Gets information about a specific identity provider.
module Network.AWS.CognitoIdentityProvider.DescribeIdentityProvider

-- | <i>See:</i> <a>newDescribeIdentityProvider</a> smart constructor.
data DescribeIdentityProvider
DescribeIdentityProvider' :: Text -> Text -> DescribeIdentityProvider

-- | The user pool ID.
[$sel:userPoolId:DescribeIdentityProvider'] :: DescribeIdentityProvider -> Text

-- | The identity provider name.
[$sel:providerName:DescribeIdentityProvider'] :: DescribeIdentityProvider -> Text

-- | Create a value of <a>DescribeIdentityProvider</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userPoolId:DescribeIdentityProvider'</a>,
--   <a>describeIdentityProvider_userPoolId</a> - The user pool ID.
--   
--   <a>$sel:providerName:DescribeIdentityProvider'</a>,
--   <a>describeIdentityProvider_providerName</a> - The identity provider
--   name.
newDescribeIdentityProvider :: Text -> Text -> DescribeIdentityProvider

-- | The user pool ID.
describeIdentityProvider_userPoolId :: Lens' DescribeIdentityProvider Text

-- | The identity provider name.
describeIdentityProvider_providerName :: Lens' DescribeIdentityProvider Text

-- | <i>See:</i> <a>newDescribeIdentityProviderResponse</a> smart
--   constructor.
data DescribeIdentityProviderResponse
DescribeIdentityProviderResponse' :: Int -> IdentityProviderType -> DescribeIdentityProviderResponse

-- | The response's http status code.
[$sel:httpStatus:DescribeIdentityProviderResponse'] :: DescribeIdentityProviderResponse -> Int

-- | The identity provider that was deleted.
[$sel:identityProvider:DescribeIdentityProviderResponse'] :: DescribeIdentityProviderResponse -> IdentityProviderType

-- | Create a value of <a>DescribeIdentityProviderResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DescribeIdentityProviderResponse'</a>,
--   <a>describeIdentityProviderResponse_httpStatus</a> - The response's
--   http status code.
--   
--   <a>$sel:identityProvider:DescribeIdentityProviderResponse'</a>,
--   <a>describeIdentityProviderResponse_identityProvider</a> - The
--   identity provider that was deleted.
newDescribeIdentityProviderResponse :: Int -> IdentityProviderType -> DescribeIdentityProviderResponse

-- | The response's http status code.
describeIdentityProviderResponse_httpStatus :: Lens' DescribeIdentityProviderResponse Int

-- | The identity provider that was deleted.
describeIdentityProviderResponse_identityProvider :: Lens' DescribeIdentityProviderResponse IdentityProviderType
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.DescribeIdentityProvider.DescribeIdentityProvider
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.DescribeIdentityProvider.DescribeIdentityProvider
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.DescribeIdentityProvider.DescribeIdentityProvider
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.DescribeIdentityProvider.DescribeIdentityProvider
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.DescribeIdentityProvider.DescribeIdentityProviderResponse
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.DescribeIdentityProvider.DescribeIdentityProviderResponse
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.DescribeIdentityProvider.DescribeIdentityProviderResponse
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.DescribeIdentityProvider.DescribeIdentityProviderResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CognitoIdentityProvider.DescribeIdentityProvider.DescribeIdentityProvider
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.DescribeIdentityProvider.DescribeIdentityProviderResponse
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.DescribeIdentityProvider.DescribeIdentityProvider
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.DescribeIdentityProvider.DescribeIdentityProvider
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CognitoIdentityProvider.DescribeIdentityProvider.DescribeIdentityProvider
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.DescribeIdentityProvider.DescribeIdentityProvider
instance Network.AWS.Data.Path.ToPath Network.AWS.CognitoIdentityProvider.DescribeIdentityProvider.DescribeIdentityProvider
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentityProvider.DescribeIdentityProvider.DescribeIdentityProvider


-- | Deletes a domain for a user pool.
module Network.AWS.CognitoIdentityProvider.DeleteUserPoolDomain

-- | <i>See:</i> <a>newDeleteUserPoolDomain</a> smart constructor.
data DeleteUserPoolDomain
DeleteUserPoolDomain' :: Text -> Text -> DeleteUserPoolDomain

-- | The domain string.
[$sel:domain:DeleteUserPoolDomain'] :: DeleteUserPoolDomain -> Text

-- | The user pool ID.
[$sel:userPoolId:DeleteUserPoolDomain'] :: DeleteUserPoolDomain -> Text

-- | Create a value of <a>DeleteUserPoolDomain</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:domain:DeleteUserPoolDomain'</a>,
--   <a>deleteUserPoolDomain_domain</a> - The domain string.
--   
--   <a>$sel:userPoolId:DeleteUserPoolDomain'</a>,
--   <a>deleteUserPoolDomain_userPoolId</a> - The user pool ID.
newDeleteUserPoolDomain :: Text -> Text -> DeleteUserPoolDomain

-- | The domain string.
deleteUserPoolDomain_domain :: Lens' DeleteUserPoolDomain Text

-- | The user pool ID.
deleteUserPoolDomain_userPoolId :: Lens' DeleteUserPoolDomain Text

-- | <i>See:</i> <a>newDeleteUserPoolDomainResponse</a> smart constructor.
data DeleteUserPoolDomainResponse
DeleteUserPoolDomainResponse' :: Int -> DeleteUserPoolDomainResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteUserPoolDomainResponse'] :: DeleteUserPoolDomainResponse -> Int

-- | Create a value of <a>DeleteUserPoolDomainResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteUserPoolDomainResponse'</a>,
--   <a>deleteUserPoolDomainResponse_httpStatus</a> - The response's http
--   status code.
newDeleteUserPoolDomainResponse :: Int -> DeleteUserPoolDomainResponse

-- | The response's http status code.
deleteUserPoolDomainResponse_httpStatus :: Lens' DeleteUserPoolDomainResponse Int
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.DeleteUserPoolDomain.DeleteUserPoolDomain
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.DeleteUserPoolDomain.DeleteUserPoolDomain
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.DeleteUserPoolDomain.DeleteUserPoolDomain
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.DeleteUserPoolDomain.DeleteUserPoolDomain
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.DeleteUserPoolDomain.DeleteUserPoolDomainResponse
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.DeleteUserPoolDomain.DeleteUserPoolDomainResponse
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.DeleteUserPoolDomain.DeleteUserPoolDomainResponse
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.DeleteUserPoolDomain.DeleteUserPoolDomainResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CognitoIdentityProvider.DeleteUserPoolDomain.DeleteUserPoolDomain
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.DeleteUserPoolDomain.DeleteUserPoolDomainResponse
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.DeleteUserPoolDomain.DeleteUserPoolDomain
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.DeleteUserPoolDomain.DeleteUserPoolDomain
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CognitoIdentityProvider.DeleteUserPoolDomain.DeleteUserPoolDomain
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.DeleteUserPoolDomain.DeleteUserPoolDomain
instance Network.AWS.Data.Path.ToPath Network.AWS.CognitoIdentityProvider.DeleteUserPoolDomain.DeleteUserPoolDomain
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentityProvider.DeleteUserPoolDomain.DeleteUserPoolDomain


-- | Allows the developer to delete the user pool client.
module Network.AWS.CognitoIdentityProvider.DeleteUserPoolClient

-- | Represents the request to delete a user pool client.
--   
--   <i>See:</i> <a>newDeleteUserPoolClient</a> smart constructor.
data DeleteUserPoolClient
DeleteUserPoolClient' :: Text -> Sensitive Text -> DeleteUserPoolClient

-- | The user pool ID for the user pool where you want to delete the
--   client.
[$sel:userPoolId:DeleteUserPoolClient'] :: DeleteUserPoolClient -> Text

-- | The app client ID of the app associated with the user pool.
[$sel:clientId:DeleteUserPoolClient'] :: DeleteUserPoolClient -> Sensitive Text

-- | Create a value of <a>DeleteUserPoolClient</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userPoolId:DeleteUserPoolClient'</a>,
--   <a>deleteUserPoolClient_userPoolId</a> - The user pool ID for the user
--   pool where you want to delete the client.
--   
--   <a>$sel:clientId:DeleteUserPoolClient'</a>,
--   <a>deleteUserPoolClient_clientId</a> - The app client ID of the app
--   associated with the user pool.
newDeleteUserPoolClient :: Text -> Text -> DeleteUserPoolClient

-- | The user pool ID for the user pool where you want to delete the
--   client.
deleteUserPoolClient_userPoolId :: Lens' DeleteUserPoolClient Text

-- | The app client ID of the app associated with the user pool.
deleteUserPoolClient_clientId :: Lens' DeleteUserPoolClient Text

-- | <i>See:</i> <a>newDeleteUserPoolClientResponse</a> smart constructor.
data DeleteUserPoolClientResponse
DeleteUserPoolClientResponse' :: DeleteUserPoolClientResponse

-- | Create a value of <a>DeleteUserPoolClientResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteUserPoolClientResponse :: DeleteUserPoolClientResponse
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.DeleteUserPoolClient.DeleteUserPoolClient
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.DeleteUserPoolClient.DeleteUserPoolClient
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.DeleteUserPoolClient.DeleteUserPoolClient
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.DeleteUserPoolClient.DeleteUserPoolClientResponse
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.DeleteUserPoolClient.DeleteUserPoolClientResponse
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.DeleteUserPoolClient.DeleteUserPoolClientResponse
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.DeleteUserPoolClient.DeleteUserPoolClientResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CognitoIdentityProvider.DeleteUserPoolClient.DeleteUserPoolClient
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.DeleteUserPoolClient.DeleteUserPoolClientResponse
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.DeleteUserPoolClient.DeleteUserPoolClient
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.DeleteUserPoolClient.DeleteUserPoolClient
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CognitoIdentityProvider.DeleteUserPoolClient.DeleteUserPoolClient
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.DeleteUserPoolClient.DeleteUserPoolClient
instance Network.AWS.Data.Path.ToPath Network.AWS.CognitoIdentityProvider.DeleteUserPoolClient.DeleteUserPoolClient
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentityProvider.DeleteUserPoolClient.DeleteUserPoolClient


-- | Deletes the specified Amazon Cognito user pool.
module Network.AWS.CognitoIdentityProvider.DeleteUserPool

-- | Represents the request to delete a user pool.
--   
--   <i>See:</i> <a>newDeleteUserPool</a> smart constructor.
data DeleteUserPool
DeleteUserPool' :: Text -> DeleteUserPool

-- | The user pool ID for the user pool you want to delete.
[$sel:userPoolId:DeleteUserPool'] :: DeleteUserPool -> Text

-- | Create a value of <a>DeleteUserPool</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userPoolId:DeleteUserPool'</a>,
--   <a>deleteUserPool_userPoolId</a> - The user pool ID for the user pool
--   you want to delete.
newDeleteUserPool :: Text -> DeleteUserPool

-- | The user pool ID for the user pool you want to delete.
deleteUserPool_userPoolId :: Lens' DeleteUserPool Text

-- | <i>See:</i> <a>newDeleteUserPoolResponse</a> smart constructor.
data DeleteUserPoolResponse
DeleteUserPoolResponse' :: DeleteUserPoolResponse

-- | Create a value of <a>DeleteUserPoolResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteUserPoolResponse :: DeleteUserPoolResponse
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.DeleteUserPool.DeleteUserPool
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.DeleteUserPool.DeleteUserPool
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.DeleteUserPool.DeleteUserPool
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.DeleteUserPool.DeleteUserPool
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.DeleteUserPool.DeleteUserPoolResponse
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.DeleteUserPool.DeleteUserPoolResponse
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.DeleteUserPool.DeleteUserPoolResponse
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.DeleteUserPool.DeleteUserPoolResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CognitoIdentityProvider.DeleteUserPool.DeleteUserPool
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.DeleteUserPool.DeleteUserPoolResponse
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.DeleteUserPool.DeleteUserPool
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.DeleteUserPool.DeleteUserPool
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CognitoIdentityProvider.DeleteUserPool.DeleteUserPool
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.DeleteUserPool.DeleteUserPool
instance Network.AWS.Data.Path.ToPath Network.AWS.CognitoIdentityProvider.DeleteUserPool.DeleteUserPool
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentityProvider.DeleteUserPool.DeleteUserPool


-- | Deletes the attributes for a user.
module Network.AWS.CognitoIdentityProvider.DeleteUserAttributes

-- | Represents the request to delete user attributes.
--   
--   <i>See:</i> <a>newDeleteUserAttributes</a> smart constructor.
data DeleteUserAttributes
DeleteUserAttributes' :: [Text] -> Sensitive Text -> DeleteUserAttributes

-- | An array of strings representing the user attribute names you wish to
--   delete.
--   
--   For custom attributes, you must prepend the <tt>custom:</tt> prefix to
--   the attribute name.
[$sel:userAttributeNames:DeleteUserAttributes'] :: DeleteUserAttributes -> [Text]

-- | The access token used in the request to delete user attributes.
[$sel:accessToken:DeleteUserAttributes'] :: DeleteUserAttributes -> Sensitive Text

-- | Create a value of <a>DeleteUserAttributes</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userAttributeNames:DeleteUserAttributes'</a>,
--   <a>deleteUserAttributes_userAttributeNames</a> - An array of strings
--   representing the user attribute names you wish to delete.
--   
--   For custom attributes, you must prepend the <tt>custom:</tt> prefix to
--   the attribute name.
--   
--   <a>$sel:accessToken:DeleteUserAttributes'</a>,
--   <a>deleteUserAttributes_accessToken</a> - The access token used in the
--   request to delete user attributes.
newDeleteUserAttributes :: Text -> DeleteUserAttributes

-- | An array of strings representing the user attribute names you wish to
--   delete.
--   
--   For custom attributes, you must prepend the <tt>custom:</tt> prefix to
--   the attribute name.
deleteUserAttributes_userAttributeNames :: Lens' DeleteUserAttributes [Text]

-- | The access token used in the request to delete user attributes.
deleteUserAttributes_accessToken :: Lens' DeleteUserAttributes Text

-- | Represents the response from the server to delete user attributes.
--   
--   <i>See:</i> <a>newDeleteUserAttributesResponse</a> smart constructor.
data DeleteUserAttributesResponse
DeleteUserAttributesResponse' :: Int -> DeleteUserAttributesResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteUserAttributesResponse'] :: DeleteUserAttributesResponse -> Int

-- | Create a value of <a>DeleteUserAttributesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteUserAttributesResponse'</a>,
--   <a>deleteUserAttributesResponse_httpStatus</a> - The response's http
--   status code.
newDeleteUserAttributesResponse :: Int -> DeleteUserAttributesResponse

-- | The response's http status code.
deleteUserAttributesResponse_httpStatus :: Lens' DeleteUserAttributesResponse Int
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.DeleteUserAttributes.DeleteUserAttributes
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.DeleteUserAttributes.DeleteUserAttributes
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.DeleteUserAttributes.DeleteUserAttributes
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.DeleteUserAttributes.DeleteUserAttributesResponse
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.DeleteUserAttributes.DeleteUserAttributesResponse
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.DeleteUserAttributes.DeleteUserAttributesResponse
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.DeleteUserAttributes.DeleteUserAttributesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CognitoIdentityProvider.DeleteUserAttributes.DeleteUserAttributes
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.DeleteUserAttributes.DeleteUserAttributesResponse
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.DeleteUserAttributes.DeleteUserAttributes
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.DeleteUserAttributes.DeleteUserAttributes
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CognitoIdentityProvider.DeleteUserAttributes.DeleteUserAttributes
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.DeleteUserAttributes.DeleteUserAttributes
instance Network.AWS.Data.Path.ToPath Network.AWS.CognitoIdentityProvider.DeleteUserAttributes.DeleteUserAttributes
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentityProvider.DeleteUserAttributes.DeleteUserAttributes


-- | Allows a user to delete himself or herself.
module Network.AWS.CognitoIdentityProvider.DeleteUser

-- | Represents the request to delete a user.
--   
--   <i>See:</i> <a>newDeleteUser</a> smart constructor.
data DeleteUser
DeleteUser' :: Sensitive Text -> DeleteUser

-- | The access token from a request to delete a user.
[$sel:accessToken:DeleteUser'] :: DeleteUser -> Sensitive Text

-- | Create a value of <a>DeleteUser</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:accessToken:DeleteUser'</a>, <a>deleteUser_accessToken</a> -
--   The access token from a request to delete a user.
newDeleteUser :: Text -> DeleteUser

-- | The access token from a request to delete a user.
deleteUser_accessToken :: Lens' DeleteUser Text

-- | <i>See:</i> <a>newDeleteUserResponse</a> smart constructor.
data DeleteUserResponse
DeleteUserResponse' :: DeleteUserResponse

-- | Create a value of <a>DeleteUserResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteUserResponse :: DeleteUserResponse
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.DeleteUser.DeleteUser
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.DeleteUser.DeleteUser
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.DeleteUser.DeleteUser
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.DeleteUser.DeleteUserResponse
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.DeleteUser.DeleteUserResponse
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.DeleteUser.DeleteUserResponse
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.DeleteUser.DeleteUserResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CognitoIdentityProvider.DeleteUser.DeleteUser
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.DeleteUser.DeleteUserResponse
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.DeleteUser.DeleteUser
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.DeleteUser.DeleteUser
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CognitoIdentityProvider.DeleteUser.DeleteUser
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.DeleteUser.DeleteUser
instance Network.AWS.Data.Path.ToPath Network.AWS.CognitoIdentityProvider.DeleteUser.DeleteUser
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentityProvider.DeleteUser.DeleteUser


-- | Deletes a resource server.
module Network.AWS.CognitoIdentityProvider.DeleteResourceServer

-- | <i>See:</i> <a>newDeleteResourceServer</a> smart constructor.
data DeleteResourceServer
DeleteResourceServer' :: Text -> Text -> DeleteResourceServer

-- | The user pool ID for the user pool that hosts the resource server.
[$sel:userPoolId:DeleteResourceServer'] :: DeleteResourceServer -> Text

-- | The identifier for the resource server.
[$sel:identifier:DeleteResourceServer'] :: DeleteResourceServer -> Text

-- | Create a value of <a>DeleteResourceServer</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userPoolId:DeleteResourceServer'</a>,
--   <a>deleteResourceServer_userPoolId</a> - The user pool ID for the user
--   pool that hosts the resource server.
--   
--   <a>$sel:identifier:DeleteResourceServer'</a>,
--   <a>deleteResourceServer_identifier</a> - The identifier for the
--   resource server.
newDeleteResourceServer :: Text -> Text -> DeleteResourceServer

-- | The user pool ID for the user pool that hosts the resource server.
deleteResourceServer_userPoolId :: Lens' DeleteResourceServer Text

-- | The identifier for the resource server.
deleteResourceServer_identifier :: Lens' DeleteResourceServer Text

-- | <i>See:</i> <a>newDeleteResourceServerResponse</a> smart constructor.
data DeleteResourceServerResponse
DeleteResourceServerResponse' :: DeleteResourceServerResponse

-- | Create a value of <a>DeleteResourceServerResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteResourceServerResponse :: DeleteResourceServerResponse
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.DeleteResourceServer.DeleteResourceServer
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.DeleteResourceServer.DeleteResourceServer
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.DeleteResourceServer.DeleteResourceServer
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.DeleteResourceServer.DeleteResourceServer
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.DeleteResourceServer.DeleteResourceServerResponse
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.DeleteResourceServer.DeleteResourceServerResponse
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.DeleteResourceServer.DeleteResourceServerResponse
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.DeleteResourceServer.DeleteResourceServerResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CognitoIdentityProvider.DeleteResourceServer.DeleteResourceServer
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.DeleteResourceServer.DeleteResourceServerResponse
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.DeleteResourceServer.DeleteResourceServer
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.DeleteResourceServer.DeleteResourceServer
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CognitoIdentityProvider.DeleteResourceServer.DeleteResourceServer
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.DeleteResourceServer.DeleteResourceServer
instance Network.AWS.Data.Path.ToPath Network.AWS.CognitoIdentityProvider.DeleteResourceServer.DeleteResourceServer
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentityProvider.DeleteResourceServer.DeleteResourceServer


-- | Deletes an identity provider for a user pool.
module Network.AWS.CognitoIdentityProvider.DeleteIdentityProvider

-- | <i>See:</i> <a>newDeleteIdentityProvider</a> smart constructor.
data DeleteIdentityProvider
DeleteIdentityProvider' :: Text -> Text -> DeleteIdentityProvider

-- | The user pool ID.
[$sel:userPoolId:DeleteIdentityProvider'] :: DeleteIdentityProvider -> Text

-- | The identity provider name.
[$sel:providerName:DeleteIdentityProvider'] :: DeleteIdentityProvider -> Text

-- | Create a value of <a>DeleteIdentityProvider</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userPoolId:DeleteIdentityProvider'</a>,
--   <a>deleteIdentityProvider_userPoolId</a> - The user pool ID.
--   
--   <a>$sel:providerName:DeleteIdentityProvider'</a>,
--   <a>deleteIdentityProvider_providerName</a> - The identity provider
--   name.
newDeleteIdentityProvider :: Text -> Text -> DeleteIdentityProvider

-- | The user pool ID.
deleteIdentityProvider_userPoolId :: Lens' DeleteIdentityProvider Text

-- | The identity provider name.
deleteIdentityProvider_providerName :: Lens' DeleteIdentityProvider Text

-- | <i>See:</i> <a>newDeleteIdentityProviderResponse</a> smart
--   constructor.
data DeleteIdentityProviderResponse
DeleteIdentityProviderResponse' :: DeleteIdentityProviderResponse

-- | Create a value of <a>DeleteIdentityProviderResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteIdentityProviderResponse :: DeleteIdentityProviderResponse
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.DeleteIdentityProvider.DeleteIdentityProvider
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.DeleteIdentityProvider.DeleteIdentityProvider
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.DeleteIdentityProvider.DeleteIdentityProvider
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.DeleteIdentityProvider.DeleteIdentityProvider
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.DeleteIdentityProvider.DeleteIdentityProviderResponse
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.DeleteIdentityProvider.DeleteIdentityProviderResponse
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.DeleteIdentityProvider.DeleteIdentityProviderResponse
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.DeleteIdentityProvider.DeleteIdentityProviderResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CognitoIdentityProvider.DeleteIdentityProvider.DeleteIdentityProvider
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.DeleteIdentityProvider.DeleteIdentityProviderResponse
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.DeleteIdentityProvider.DeleteIdentityProvider
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.DeleteIdentityProvider.DeleteIdentityProvider
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CognitoIdentityProvider.DeleteIdentityProvider.DeleteIdentityProvider
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.DeleteIdentityProvider.DeleteIdentityProvider
instance Network.AWS.Data.Path.ToPath Network.AWS.CognitoIdentityProvider.DeleteIdentityProvider.DeleteIdentityProvider
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentityProvider.DeleteIdentityProvider.DeleteIdentityProvider


-- | Deletes a group.
--   
--   Calling this action requires developer credentials.
module Network.AWS.CognitoIdentityProvider.DeleteGroup

-- | <i>See:</i> <a>newDeleteGroup</a> smart constructor.
data DeleteGroup
DeleteGroup' :: Text -> Text -> DeleteGroup

-- | The name of the group.
[$sel:groupName:DeleteGroup'] :: DeleteGroup -> Text

-- | The user pool ID for the user pool.
[$sel:userPoolId:DeleteGroup'] :: DeleteGroup -> Text

-- | Create a value of <a>DeleteGroup</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:groupName:DeleteGroup'</a>, <a>deleteGroup_groupName</a> - The
--   name of the group.
--   
--   <a>$sel:userPoolId:DeleteGroup'</a>, <a>deleteGroup_userPoolId</a> -
--   The user pool ID for the user pool.
newDeleteGroup :: Text -> Text -> DeleteGroup

-- | The name of the group.
deleteGroup_groupName :: Lens' DeleteGroup Text

-- | The user pool ID for the user pool.
deleteGroup_userPoolId :: Lens' DeleteGroup Text

-- | <i>See:</i> <a>newDeleteGroupResponse</a> smart constructor.
data DeleteGroupResponse
DeleteGroupResponse' :: DeleteGroupResponse

-- | Create a value of <a>DeleteGroupResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteGroupResponse :: DeleteGroupResponse
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.DeleteGroup.DeleteGroup
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.DeleteGroup.DeleteGroup
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.DeleteGroup.DeleteGroup
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.DeleteGroup.DeleteGroup
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.DeleteGroup.DeleteGroupResponse
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.DeleteGroup.DeleteGroupResponse
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.DeleteGroup.DeleteGroupResponse
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.DeleteGroup.DeleteGroupResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CognitoIdentityProvider.DeleteGroup.DeleteGroup
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.DeleteGroup.DeleteGroupResponse
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.DeleteGroup.DeleteGroup
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.DeleteGroup.DeleteGroup
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CognitoIdentityProvider.DeleteGroup.DeleteGroup
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.DeleteGroup.DeleteGroup
instance Network.AWS.Data.Path.ToPath Network.AWS.CognitoIdentityProvider.DeleteGroup.DeleteGroup
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentityProvider.DeleteGroup.DeleteGroup


-- | Creates a new domain for a user pool.
module Network.AWS.CognitoIdentityProvider.CreateUserPoolDomain

-- | <i>See:</i> <a>newCreateUserPoolDomain</a> smart constructor.
data CreateUserPoolDomain
CreateUserPoolDomain' :: Maybe CustomDomainConfigType -> Text -> Text -> CreateUserPoolDomain

-- | The configuration for a custom domain that hosts the sign-up and
--   sign-in webpages for your application.
--   
--   Provide this parameter only if you want to use a custom domain for
--   your user pool. Otherwise, you can exclude this parameter and use the
--   Amazon Cognito hosted domain instead.
--   
--   For more information about the hosted domain and custom domains, see
--   <a>Configuring a User Pool Domain</a>.
[$sel:customDomainConfig:CreateUserPoolDomain'] :: CreateUserPoolDomain -> Maybe CustomDomainConfigType

-- | The domain string.
[$sel:domain:CreateUserPoolDomain'] :: CreateUserPoolDomain -> Text

-- | The user pool ID.
[$sel:userPoolId:CreateUserPoolDomain'] :: CreateUserPoolDomain -> Text

-- | Create a value of <a>CreateUserPoolDomain</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:customDomainConfig:CreateUserPoolDomain'</a>,
--   <a>createUserPoolDomain_customDomainConfig</a> - The configuration for
--   a custom domain that hosts the sign-up and sign-in webpages for your
--   application.
--   
--   Provide this parameter only if you want to use a custom domain for
--   your user pool. Otherwise, you can exclude this parameter and use the
--   Amazon Cognito hosted domain instead.
--   
--   For more information about the hosted domain and custom domains, see
--   <a>Configuring a User Pool Domain</a>.
--   
--   <a>$sel:domain:CreateUserPoolDomain'</a>,
--   <a>createUserPoolDomain_domain</a> - The domain string.
--   
--   <a>$sel:userPoolId:CreateUserPoolDomain'</a>,
--   <a>createUserPoolDomain_userPoolId</a> - The user pool ID.
newCreateUserPoolDomain :: Text -> Text -> CreateUserPoolDomain

-- | The configuration for a custom domain that hosts the sign-up and
--   sign-in webpages for your application.
--   
--   Provide this parameter only if you want to use a custom domain for
--   your user pool. Otherwise, you can exclude this parameter and use the
--   Amazon Cognito hosted domain instead.
--   
--   For more information about the hosted domain and custom domains, see
--   <a>Configuring a User Pool Domain</a>.
createUserPoolDomain_customDomainConfig :: Lens' CreateUserPoolDomain (Maybe CustomDomainConfigType)

-- | The domain string.
createUserPoolDomain_domain :: Lens' CreateUserPoolDomain Text

-- | The user pool ID.
createUserPoolDomain_userPoolId :: Lens' CreateUserPoolDomain Text

-- | <i>See:</i> <a>newCreateUserPoolDomainResponse</a> smart constructor.
data CreateUserPoolDomainResponse
CreateUserPoolDomainResponse' :: Maybe Text -> Int -> CreateUserPoolDomainResponse

-- | The Amazon CloudFront endpoint that you use as the target of the alias
--   that you set up with your Domain Name Service (DNS) provider.
[$sel:cloudFrontDomain:CreateUserPoolDomainResponse'] :: CreateUserPoolDomainResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:CreateUserPoolDomainResponse'] :: CreateUserPoolDomainResponse -> Int

-- | Create a value of <a>CreateUserPoolDomainResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cloudFrontDomain:CreateUserPoolDomainResponse'</a>,
--   <a>createUserPoolDomainResponse_cloudFrontDomain</a> - The Amazon
--   CloudFront endpoint that you use as the target of the alias that you
--   set up with your Domain Name Service (DNS) provider.
--   
--   <a>$sel:httpStatus:CreateUserPoolDomainResponse'</a>,
--   <a>createUserPoolDomainResponse_httpStatus</a> - The response's http
--   status code.
newCreateUserPoolDomainResponse :: Int -> CreateUserPoolDomainResponse

-- | The Amazon CloudFront endpoint that you use as the target of the alias
--   that you set up with your Domain Name Service (DNS) provider.
createUserPoolDomainResponse_cloudFrontDomain :: Lens' CreateUserPoolDomainResponse (Maybe Text)

-- | The response's http status code.
createUserPoolDomainResponse_httpStatus :: Lens' CreateUserPoolDomainResponse Int
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.CreateUserPoolDomain.CreateUserPoolDomain
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.CreateUserPoolDomain.CreateUserPoolDomain
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.CreateUserPoolDomain.CreateUserPoolDomain
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.CreateUserPoolDomain.CreateUserPoolDomain
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.CreateUserPoolDomain.CreateUserPoolDomainResponse
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.CreateUserPoolDomain.CreateUserPoolDomainResponse
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.CreateUserPoolDomain.CreateUserPoolDomainResponse
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.CreateUserPoolDomain.CreateUserPoolDomainResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CognitoIdentityProvider.CreateUserPoolDomain.CreateUserPoolDomain
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.CreateUserPoolDomain.CreateUserPoolDomainResponse
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.CreateUserPoolDomain.CreateUserPoolDomain
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.CreateUserPoolDomain.CreateUserPoolDomain
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CognitoIdentityProvider.CreateUserPoolDomain.CreateUserPoolDomain
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.CreateUserPoolDomain.CreateUserPoolDomain
instance Network.AWS.Data.Path.ToPath Network.AWS.CognitoIdentityProvider.CreateUserPoolDomain.CreateUserPoolDomain
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentityProvider.CreateUserPoolDomain.CreateUserPoolDomain


-- | Creates the user pool client.
--   
--   When you create a new user pool client, token revocation is
--   automatically enabled. For more information about revoking tokens, see
--   <a>RevokeToken</a>.
module Network.AWS.CognitoIdentityProvider.CreateUserPoolClient

-- | Represents the request to create a user pool client.
--   
--   <i>See:</i> <a>newCreateUserPoolClient</a> smart constructor.
data CreateUserPoolClient
CreateUserPoolClient' :: Maybe Natural -> Maybe [ExplicitAuthFlowsType] -> Maybe [Text] -> Maybe [Text] -> Maybe Bool -> Maybe Bool -> Maybe Natural -> Maybe TokenValidityUnitsType -> Maybe Text -> Maybe Bool -> Maybe [Text] -> Maybe PreventUserExistenceErrorTypes -> Maybe Natural -> Maybe [Text] -> Maybe [Text] -> Maybe [OAuthFlowType] -> Maybe AnalyticsConfigurationType -> Maybe [Text] -> Text -> Text -> CreateUserPoolClient

-- | The time limit, in days, after which the refresh token is no longer
--   valid and cannot be used.
[$sel:refreshTokenValidity:CreateUserPoolClient'] :: CreateUserPoolClient -> Maybe Natural

-- | The authentication flows that are supported by the user pool clients.
--   Flow names without the <tt>ALLOW_</tt> prefix are deprecated in favor
--   of new names with the <tt>ALLOW_</tt> prefix. Note that values with
--   <tt>ALLOW_</tt> prefix cannot be used along with values without
--   <tt>ALLOW_</tt> prefix.
--   
--   Valid values include:
--   
--   <ul>
--   <li><tt>ALLOW_ADMIN_USER_PASSWORD_AUTH</tt>: Enable admin based user
--   password authentication flow <tt>ADMIN_USER_PASSWORD_AUTH</tt>. This
--   setting replaces the <tt>ADMIN_NO_SRP_AUTH</tt> setting. With this
--   authentication flow, Cognito receives the password in the request
--   instead of using the SRP (Secure Remote Password protocol) protocol to
--   verify passwords.</li>
--   <li><tt>ALLOW_CUSTOM_AUTH</tt>: Enable Lambda trigger based
--   authentication.</li>
--   <li><tt>ALLOW_USER_PASSWORD_AUTH</tt>: Enable user password-based
--   authentication. In this flow, Cognito receives the password in the
--   request instead of using the SRP protocol to verify passwords.</li>
--   <li><tt>ALLOW_USER_SRP_AUTH</tt>: Enable SRP based
--   authentication.</li>
--   <li><tt>ALLOW_REFRESH_TOKEN_AUTH</tt>: Enable authflow to refresh
--   tokens.</li>
--   </ul>
[$sel:explicitAuthFlows:CreateUserPoolClient'] :: CreateUserPoolClient -> Maybe [ExplicitAuthFlowsType]

-- | A list of provider names for the identity providers that are supported
--   on this client. The following are supported: <tt>COGNITO</tt>,
--   <tt>Facebook</tt>, <tt>Google</tt> and <tt>LoginWithAmazon</tt>.
[$sel:supportedIdentityProviders:CreateUserPoolClient'] :: CreateUserPoolClient -> Maybe [Text]

-- | A list of allowed logout URLs for the identity providers.
[$sel:logoutURLs:CreateUserPoolClient'] :: CreateUserPoolClient -> Maybe [Text]

-- | Set to true if the client is allowed to follow the OAuth protocol when
--   interacting with Cognito user pools.
[$sel:allowedOAuthFlowsUserPoolClient:CreateUserPoolClient'] :: CreateUserPoolClient -> Maybe Bool

-- | Boolean to specify whether you want to generate a secret for the user
--   pool client being created.
[$sel:generateSecret:CreateUserPoolClient'] :: CreateUserPoolClient -> Maybe Bool

-- | The time limit, between 5 minutes and 1 day, after which the ID token
--   is no longer valid and cannot be used. This value will be overridden
--   if you have entered a value in TokenValidityUnits.
[$sel:idTokenValidity:CreateUserPoolClient'] :: CreateUserPoolClient -> Maybe Natural

-- | The units in which the validity times are represented in. Default for
--   RefreshToken is days, and default for ID and access tokens are hours.
[$sel:tokenValidityUnits:CreateUserPoolClient'] :: CreateUserPoolClient -> Maybe TokenValidityUnitsType

-- | The default redirect URI. Must be in the <tt>CallbackURLs</tt> list.
--   
--   A redirect URI must:
--   
--   <ul>
--   <li>Be an absolute URI.</li>
--   <li>Be registered with the authorization server.</li>
--   <li>Not include a fragment component.</li>
--   </ul>
--   
--   See <a>OAuth 2.0 - Redirection Endpoint</a>.
--   
--   Amazon Cognito requires HTTPS over HTTP except for http://localhost
--   for testing purposes only.
--   
--   App callback URLs such as myapp://example are also supported.
[$sel:defaultRedirectURI:CreateUserPoolClient'] :: CreateUserPoolClient -> Maybe Text

-- | Enables or disables token revocation. For more information about
--   revoking tokens, see <a>RevokeToken</a>.
--   
--   If you don't include this parameter, token revocation is automatically
--   enabled for the new user pool client.
[$sel:enableTokenRevocation:CreateUserPoolClient'] :: CreateUserPoolClient -> Maybe Bool

-- | The user pool attributes that the app client can write to.
--   
--   If your app client allows users to sign in through an identity
--   provider, this array must include all attributes that are mapped to
--   identity provider attributes. Amazon Cognito updates mapped attributes
--   when users sign in to your application through an identity provider.
--   If your app client lacks write access to a mapped attribute, Amazon
--   Cognito throws an error when it attempts to update the attribute. For
--   more information, see <a>Specifying Identity Provider Attribute
--   Mappings for Your User Pool</a>.
[$sel:writeAttributes:CreateUserPoolClient'] :: CreateUserPoolClient -> Maybe [Text]

-- | Use this setting to choose which errors and responses are returned by
--   Cognito APIs during authentication, account confirmation, and password
--   recovery when the user does not exist in the user pool. When set to
--   <tt>ENABLED</tt> and the user does not exist, authentication returns
--   an error indicating either the username or password was incorrect, and
--   account confirmation and password recovery return a response
--   indicating a code was sent to a simulated destination. When set to
--   <tt>LEGACY</tt>, those APIs will return a
--   <tt>UserNotFoundException</tt> exception if the user does not exist in
--   the user pool.
--   
--   Valid values include:
--   
--   <ul>
--   <li><tt>ENABLED</tt> - This prevents user existence-related
--   errors.</li>
--   <li><tt>LEGACY</tt> - This represents the old behavior of Cognito
--   where user existence related errors are not prevented.</li>
--   </ul>
--   
--   After February 15th 2020, the value of
--   <tt>PreventUserExistenceErrors</tt> will default to <tt>ENABLED</tt>
--   for newly created user pool clients if no value is provided.
[$sel:preventUserExistenceErrors:CreateUserPoolClient'] :: CreateUserPoolClient -> Maybe PreventUserExistenceErrorTypes

-- | The time limit, between 5 minutes and 1 day, after which the access
--   token is no longer valid and cannot be used. This value will be
--   overridden if you have entered a value in TokenValidityUnits.
[$sel:accessTokenValidity:CreateUserPoolClient'] :: CreateUserPoolClient -> Maybe Natural

-- | The read attributes.
[$sel:readAttributes:CreateUserPoolClient'] :: CreateUserPoolClient -> Maybe [Text]

-- | The allowed OAuth scopes. Possible values provided by OAuth are:
--   <tt>phone</tt>, <tt>email</tt>, <tt>openid</tt>, and <tt>profile</tt>.
--   Possible values provided by Amazon Web Services are:
--   <tt>aws.cognito.signin.user.admin</tt>. Custom scopes created in
--   Resource Servers are also supported.
[$sel:allowedOAuthScopes:CreateUserPoolClient'] :: CreateUserPoolClient -> Maybe [Text]

-- | The allowed OAuth flows.
--   
--   Set to <tt>code</tt> to initiate a code grant flow, which provides an
--   authorization code as the response. This code can be exchanged for
--   access tokens with the token endpoint.
--   
--   Set to <tt>implicit</tt> to specify that the client should get the
--   access token (and, optionally, ID token, based on scopes) directly.
--   
--   Set to <tt>client_credentials</tt> to specify that the client should
--   get the access token (and, optionally, ID token, based on scopes) from
--   the token endpoint using a combination of client and client_secret.
[$sel:allowedOAuthFlows:CreateUserPoolClient'] :: CreateUserPoolClient -> Maybe [OAuthFlowType]

-- | The Amazon Pinpoint analytics configuration for collecting metrics for
--   this user pool.
--   
--   In regions where Pinpoint is not available, Cognito User Pools only
--   supports sending events to Amazon Pinpoint projects in us-east-1. In
--   regions where Pinpoint is available, Cognito User Pools will support
--   sending events to Amazon Pinpoint projects within that same region.
[$sel:analyticsConfiguration:CreateUserPoolClient'] :: CreateUserPoolClient -> Maybe AnalyticsConfigurationType

-- | A list of allowed redirect (callback) URLs for the identity providers.
--   
--   A redirect URI must:
--   
--   <ul>
--   <li>Be an absolute URI.</li>
--   <li>Be registered with the authorization server.</li>
--   <li>Not include a fragment component.</li>
--   </ul>
--   
--   See <a>OAuth 2.0 - Redirection Endpoint</a>.
--   
--   Amazon Cognito requires HTTPS over HTTP except for http://localhost
--   for testing purposes only.
--   
--   App callback URLs such as myapp://example are also supported.
[$sel:callbackURLs:CreateUserPoolClient'] :: CreateUserPoolClient -> Maybe [Text]

-- | The user pool ID for the user pool where you want to create a user
--   pool client.
[$sel:userPoolId:CreateUserPoolClient'] :: CreateUserPoolClient -> Text

-- | The client name for the user pool client you would like to create.
[$sel:clientName:CreateUserPoolClient'] :: CreateUserPoolClient -> Text

-- | Create a value of <a>CreateUserPoolClient</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:refreshTokenValidity:CreateUserPoolClient'</a>,
--   <a>createUserPoolClient_refreshTokenValidity</a> - The time limit, in
--   days, after which the refresh token is no longer valid and cannot be
--   used.
--   
--   <a>$sel:explicitAuthFlows:CreateUserPoolClient'</a>,
--   <a>createUserPoolClient_explicitAuthFlows</a> - The authentication
--   flows that are supported by the user pool clients. Flow names without
--   the <tt>ALLOW_</tt> prefix are deprecated in favor of new names with
--   the <tt>ALLOW_</tt> prefix. Note that values with <tt>ALLOW_</tt>
--   prefix cannot be used along with values without <tt>ALLOW_</tt>
--   prefix.
--   
--   Valid values include:
--   
--   <ul>
--   <li><tt>ALLOW_ADMIN_USER_PASSWORD_AUTH</tt>: Enable admin based user
--   password authentication flow <tt>ADMIN_USER_PASSWORD_AUTH</tt>. This
--   setting replaces the <tt>ADMIN_NO_SRP_AUTH</tt> setting. With this
--   authentication flow, Cognito receives the password in the request
--   instead of using the SRP (Secure Remote Password protocol) protocol to
--   verify passwords.</li>
--   <li><tt>ALLOW_CUSTOM_AUTH</tt>: Enable Lambda trigger based
--   authentication.</li>
--   <li><tt>ALLOW_USER_PASSWORD_AUTH</tt>: Enable user password-based
--   authentication. In this flow, Cognito receives the password in the
--   request instead of using the SRP protocol to verify passwords.</li>
--   <li><tt>ALLOW_USER_SRP_AUTH</tt>: Enable SRP based
--   authentication.</li>
--   <li><tt>ALLOW_REFRESH_TOKEN_AUTH</tt>: Enable authflow to refresh
--   tokens.</li>
--   </ul>
--   
--   <a>$sel:supportedIdentityProviders:CreateUserPoolClient'</a>,
--   <a>createUserPoolClient_supportedIdentityProviders</a> - A list of
--   provider names for the identity providers that are supported on this
--   client. The following are supported: <tt>COGNITO</tt>,
--   <tt>Facebook</tt>, <tt>Google</tt> and <tt>LoginWithAmazon</tt>.
--   
--   <a>$sel:logoutURLs:CreateUserPoolClient'</a>,
--   <a>createUserPoolClient_logoutURLs</a> - A list of allowed logout URLs
--   for the identity providers.
--   
--   <a>$sel:allowedOAuthFlowsUserPoolClient:CreateUserPoolClient'</a>,
--   <a>createUserPoolClient_allowedOAuthFlowsUserPoolClient</a> - Set to
--   true if the client is allowed to follow the OAuth protocol when
--   interacting with Cognito user pools.
--   
--   <a>$sel:generateSecret:CreateUserPoolClient'</a>,
--   <a>createUserPoolClient_generateSecret</a> - Boolean to specify
--   whether you want to generate a secret for the user pool client being
--   created.
--   
--   <a>$sel:idTokenValidity:CreateUserPoolClient'</a>,
--   <a>createUserPoolClient_idTokenValidity</a> - The time limit, between
--   5 minutes and 1 day, after which the ID token is no longer valid and
--   cannot be used. This value will be overridden if you have entered a
--   value in TokenValidityUnits.
--   
--   <a>$sel:tokenValidityUnits:CreateUserPoolClient'</a>,
--   <a>createUserPoolClient_tokenValidityUnits</a> - The units in which
--   the validity times are represented in. Default for RefreshToken is
--   days, and default for ID and access tokens are hours.
--   
--   <a>$sel:defaultRedirectURI:CreateUserPoolClient'</a>,
--   <a>createUserPoolClient_defaultRedirectURI</a> - The default redirect
--   URI. Must be in the <tt>CallbackURLs</tt> list.
--   
--   A redirect URI must:
--   
--   <ul>
--   <li>Be an absolute URI.</li>
--   <li>Be registered with the authorization server.</li>
--   <li>Not include a fragment component.</li>
--   </ul>
--   
--   See <a>OAuth 2.0 - Redirection Endpoint</a>.
--   
--   Amazon Cognito requires HTTPS over HTTP except for http://localhost
--   for testing purposes only.
--   
--   App callback URLs such as myapp://example are also supported.
--   
--   <a>$sel:enableTokenRevocation:CreateUserPoolClient'</a>,
--   <a>createUserPoolClient_enableTokenRevocation</a> - Enables or
--   disables token revocation. For more information about revoking tokens,
--   see <a>RevokeToken</a>.
--   
--   If you don't include this parameter, token revocation is automatically
--   enabled for the new user pool client.
--   
--   <a>$sel:writeAttributes:CreateUserPoolClient'</a>,
--   <a>createUserPoolClient_writeAttributes</a> - The user pool attributes
--   that the app client can write to.
--   
--   If your app client allows users to sign in through an identity
--   provider, this array must include all attributes that are mapped to
--   identity provider attributes. Amazon Cognito updates mapped attributes
--   when users sign in to your application through an identity provider.
--   If your app client lacks write access to a mapped attribute, Amazon
--   Cognito throws an error when it attempts to update the attribute. For
--   more information, see <a>Specifying Identity Provider Attribute
--   Mappings for Your User Pool</a>.
--   
--   <a>$sel:preventUserExistenceErrors:CreateUserPoolClient'</a>,
--   <a>createUserPoolClient_preventUserExistenceErrors</a> - Use this
--   setting to choose which errors and responses are returned by Cognito
--   APIs during authentication, account confirmation, and password
--   recovery when the user does not exist in the user pool. When set to
--   <tt>ENABLED</tt> and the user does not exist, authentication returns
--   an error indicating either the username or password was incorrect, and
--   account confirmation and password recovery return a response
--   indicating a code was sent to a simulated destination. When set to
--   <tt>LEGACY</tt>, those APIs will return a
--   <tt>UserNotFoundException</tt> exception if the user does not exist in
--   the user pool.
--   
--   Valid values include:
--   
--   <ul>
--   <li><tt>ENABLED</tt> - This prevents user existence-related
--   errors.</li>
--   <li><tt>LEGACY</tt> - This represents the old behavior of Cognito
--   where user existence related errors are not prevented.</li>
--   </ul>
--   
--   After February 15th 2020, the value of
--   <tt>PreventUserExistenceErrors</tt> will default to <tt>ENABLED</tt>
--   for newly created user pool clients if no value is provided.
--   
--   <a>$sel:accessTokenValidity:CreateUserPoolClient'</a>,
--   <a>createUserPoolClient_accessTokenValidity</a> - The time limit,
--   between 5 minutes and 1 day, after which the access token is no longer
--   valid and cannot be used. This value will be overridden if you have
--   entered a value in TokenValidityUnits.
--   
--   <a>$sel:readAttributes:CreateUserPoolClient'</a>,
--   <a>createUserPoolClient_readAttributes</a> - The read attributes.
--   
--   <a>$sel:allowedOAuthScopes:CreateUserPoolClient'</a>,
--   <a>createUserPoolClient_allowedOAuthScopes</a> - The allowed OAuth
--   scopes. Possible values provided by OAuth are: <tt>phone</tt>,
--   <tt>email</tt>, <tt>openid</tt>, and <tt>profile</tt>. Possible values
--   provided by Amazon Web Services are:
--   <tt>aws.cognito.signin.user.admin</tt>. Custom scopes created in
--   Resource Servers are also supported.
--   
--   <a>$sel:allowedOAuthFlows:CreateUserPoolClient'</a>,
--   <a>createUserPoolClient_allowedOAuthFlows</a> - The allowed OAuth
--   flows.
--   
--   Set to <tt>code</tt> to initiate a code grant flow, which provides an
--   authorization code as the response. This code can be exchanged for
--   access tokens with the token endpoint.
--   
--   Set to <tt>implicit</tt> to specify that the client should get the
--   access token (and, optionally, ID token, based on scopes) directly.
--   
--   Set to <tt>client_credentials</tt> to specify that the client should
--   get the access token (and, optionally, ID token, based on scopes) from
--   the token endpoint using a combination of client and client_secret.
--   
--   <a>$sel:analyticsConfiguration:CreateUserPoolClient'</a>,
--   <a>createUserPoolClient_analyticsConfiguration</a> - The Amazon
--   Pinpoint analytics configuration for collecting metrics for this user
--   pool.
--   
--   In regions where Pinpoint is not available, Cognito User Pools only
--   supports sending events to Amazon Pinpoint projects in us-east-1. In
--   regions where Pinpoint is available, Cognito User Pools will support
--   sending events to Amazon Pinpoint projects within that same region.
--   
--   <a>$sel:callbackURLs:CreateUserPoolClient'</a>,
--   <a>createUserPoolClient_callbackURLs</a> - A list of allowed redirect
--   (callback) URLs for the identity providers.
--   
--   A redirect URI must:
--   
--   <ul>
--   <li>Be an absolute URI.</li>
--   <li>Be registered with the authorization server.</li>
--   <li>Not include a fragment component.</li>
--   </ul>
--   
--   See <a>OAuth 2.0 - Redirection Endpoint</a>.
--   
--   Amazon Cognito requires HTTPS over HTTP except for http://localhost
--   for testing purposes only.
--   
--   App callback URLs such as myapp://example are also supported.
--   
--   <a>$sel:userPoolId:CreateUserPoolClient'</a>,
--   <a>createUserPoolClient_userPoolId</a> - The user pool ID for the user
--   pool where you want to create a user pool client.
--   
--   <a>$sel:clientName:CreateUserPoolClient'</a>,
--   <a>createUserPoolClient_clientName</a> - The client name for the user
--   pool client you would like to create.
newCreateUserPoolClient :: Text -> Text -> CreateUserPoolClient

-- | The time limit, in days, after which the refresh token is no longer
--   valid and cannot be used.
createUserPoolClient_refreshTokenValidity :: Lens' CreateUserPoolClient (Maybe Natural)

-- | The authentication flows that are supported by the user pool clients.
--   Flow names without the <tt>ALLOW_</tt> prefix are deprecated in favor
--   of new names with the <tt>ALLOW_</tt> prefix. Note that values with
--   <tt>ALLOW_</tt> prefix cannot be used along with values without
--   <tt>ALLOW_</tt> prefix.
--   
--   Valid values include:
--   
--   <ul>
--   <li><tt>ALLOW_ADMIN_USER_PASSWORD_AUTH</tt>: Enable admin based user
--   password authentication flow <tt>ADMIN_USER_PASSWORD_AUTH</tt>. This
--   setting replaces the <tt>ADMIN_NO_SRP_AUTH</tt> setting. With this
--   authentication flow, Cognito receives the password in the request
--   instead of using the SRP (Secure Remote Password protocol) protocol to
--   verify passwords.</li>
--   <li><tt>ALLOW_CUSTOM_AUTH</tt>: Enable Lambda trigger based
--   authentication.</li>
--   <li><tt>ALLOW_USER_PASSWORD_AUTH</tt>: Enable user password-based
--   authentication. In this flow, Cognito receives the password in the
--   request instead of using the SRP protocol to verify passwords.</li>
--   <li><tt>ALLOW_USER_SRP_AUTH</tt>: Enable SRP based
--   authentication.</li>
--   <li><tt>ALLOW_REFRESH_TOKEN_AUTH</tt>: Enable authflow to refresh
--   tokens.</li>
--   </ul>
createUserPoolClient_explicitAuthFlows :: Lens' CreateUserPoolClient (Maybe [ExplicitAuthFlowsType])

-- | A list of provider names for the identity providers that are supported
--   on this client. The following are supported: <tt>COGNITO</tt>,
--   <tt>Facebook</tt>, <tt>Google</tt> and <tt>LoginWithAmazon</tt>.
createUserPoolClient_supportedIdentityProviders :: Lens' CreateUserPoolClient (Maybe [Text])

-- | A list of allowed logout URLs for the identity providers.
createUserPoolClient_logoutURLs :: Lens' CreateUserPoolClient (Maybe [Text])

-- | Set to true if the client is allowed to follow the OAuth protocol when
--   interacting with Cognito user pools.
createUserPoolClient_allowedOAuthFlowsUserPoolClient :: Lens' CreateUserPoolClient (Maybe Bool)

-- | Boolean to specify whether you want to generate a secret for the user
--   pool client being created.
createUserPoolClient_generateSecret :: Lens' CreateUserPoolClient (Maybe Bool)

-- | The time limit, between 5 minutes and 1 day, after which the ID token
--   is no longer valid and cannot be used. This value will be overridden
--   if you have entered a value in TokenValidityUnits.
createUserPoolClient_idTokenValidity :: Lens' CreateUserPoolClient (Maybe Natural)

-- | The units in which the validity times are represented in. Default for
--   RefreshToken is days, and default for ID and access tokens are hours.
createUserPoolClient_tokenValidityUnits :: Lens' CreateUserPoolClient (Maybe TokenValidityUnitsType)

-- | The default redirect URI. Must be in the <tt>CallbackURLs</tt> list.
--   
--   A redirect URI must:
--   
--   <ul>
--   <li>Be an absolute URI.</li>
--   <li>Be registered with the authorization server.</li>
--   <li>Not include a fragment component.</li>
--   </ul>
--   
--   See <a>OAuth 2.0 - Redirection Endpoint</a>.
--   
--   Amazon Cognito requires HTTPS over HTTP except for http://localhost
--   for testing purposes only.
--   
--   App callback URLs such as myapp://example are also supported.
createUserPoolClient_defaultRedirectURI :: Lens' CreateUserPoolClient (Maybe Text)

-- | Enables or disables token revocation. For more information about
--   revoking tokens, see <a>RevokeToken</a>.
--   
--   If you don't include this parameter, token revocation is automatically
--   enabled for the new user pool client.
createUserPoolClient_enableTokenRevocation :: Lens' CreateUserPoolClient (Maybe Bool)

-- | The user pool attributes that the app client can write to.
--   
--   If your app client allows users to sign in through an identity
--   provider, this array must include all attributes that are mapped to
--   identity provider attributes. Amazon Cognito updates mapped attributes
--   when users sign in to your application through an identity provider.
--   If your app client lacks write access to a mapped attribute, Amazon
--   Cognito throws an error when it attempts to update the attribute. For
--   more information, see <a>Specifying Identity Provider Attribute
--   Mappings for Your User Pool</a>.
createUserPoolClient_writeAttributes :: Lens' CreateUserPoolClient (Maybe [Text])

-- | Use this setting to choose which errors and responses are returned by
--   Cognito APIs during authentication, account confirmation, and password
--   recovery when the user does not exist in the user pool. When set to
--   <tt>ENABLED</tt> and the user does not exist, authentication returns
--   an error indicating either the username or password was incorrect, and
--   account confirmation and password recovery return a response
--   indicating a code was sent to a simulated destination. When set to
--   <tt>LEGACY</tt>, those APIs will return a
--   <tt>UserNotFoundException</tt> exception if the user does not exist in
--   the user pool.
--   
--   Valid values include:
--   
--   <ul>
--   <li><tt>ENABLED</tt> - This prevents user existence-related
--   errors.</li>
--   <li><tt>LEGACY</tt> - This represents the old behavior of Cognito
--   where user existence related errors are not prevented.</li>
--   </ul>
--   
--   After February 15th 2020, the value of
--   <tt>PreventUserExistenceErrors</tt> will default to <tt>ENABLED</tt>
--   for newly created user pool clients if no value is provided.
createUserPoolClient_preventUserExistenceErrors :: Lens' CreateUserPoolClient (Maybe PreventUserExistenceErrorTypes)

-- | The time limit, between 5 minutes and 1 day, after which the access
--   token is no longer valid and cannot be used. This value will be
--   overridden if you have entered a value in TokenValidityUnits.
createUserPoolClient_accessTokenValidity :: Lens' CreateUserPoolClient (Maybe Natural)

-- | The read attributes.
createUserPoolClient_readAttributes :: Lens' CreateUserPoolClient (Maybe [Text])

-- | The allowed OAuth scopes. Possible values provided by OAuth are:
--   <tt>phone</tt>, <tt>email</tt>, <tt>openid</tt>, and <tt>profile</tt>.
--   Possible values provided by Amazon Web Services are:
--   <tt>aws.cognito.signin.user.admin</tt>. Custom scopes created in
--   Resource Servers are also supported.
createUserPoolClient_allowedOAuthScopes :: Lens' CreateUserPoolClient (Maybe [Text])

-- | The allowed OAuth flows.
--   
--   Set to <tt>code</tt> to initiate a code grant flow, which provides an
--   authorization code as the response. This code can be exchanged for
--   access tokens with the token endpoint.
--   
--   Set to <tt>implicit</tt> to specify that the client should get the
--   access token (and, optionally, ID token, based on scopes) directly.
--   
--   Set to <tt>client_credentials</tt> to specify that the client should
--   get the access token (and, optionally, ID token, based on scopes) from
--   the token endpoint using a combination of client and client_secret.
createUserPoolClient_allowedOAuthFlows :: Lens' CreateUserPoolClient (Maybe [OAuthFlowType])

-- | The Amazon Pinpoint analytics configuration for collecting metrics for
--   this user pool.
--   
--   In regions where Pinpoint is not available, Cognito User Pools only
--   supports sending events to Amazon Pinpoint projects in us-east-1. In
--   regions where Pinpoint is available, Cognito User Pools will support
--   sending events to Amazon Pinpoint projects within that same region.
createUserPoolClient_analyticsConfiguration :: Lens' CreateUserPoolClient (Maybe AnalyticsConfigurationType)

-- | A list of allowed redirect (callback) URLs for the identity providers.
--   
--   A redirect URI must:
--   
--   <ul>
--   <li>Be an absolute URI.</li>
--   <li>Be registered with the authorization server.</li>
--   <li>Not include a fragment component.</li>
--   </ul>
--   
--   See <a>OAuth 2.0 - Redirection Endpoint</a>.
--   
--   Amazon Cognito requires HTTPS over HTTP except for http://localhost
--   for testing purposes only.
--   
--   App callback URLs such as myapp://example are also supported.
createUserPoolClient_callbackURLs :: Lens' CreateUserPoolClient (Maybe [Text])

-- | The user pool ID for the user pool where you want to create a user
--   pool client.
createUserPoolClient_userPoolId :: Lens' CreateUserPoolClient Text

-- | The client name for the user pool client you would like to create.
createUserPoolClient_clientName :: Lens' CreateUserPoolClient Text

-- | Represents the response from the server to create a user pool client.
--   
--   <i>See:</i> <a>newCreateUserPoolClientResponse</a> smart constructor.
data CreateUserPoolClientResponse
CreateUserPoolClientResponse' :: Maybe UserPoolClientType -> Int -> CreateUserPoolClientResponse

-- | The user pool client that was just created.
[$sel:userPoolClient:CreateUserPoolClientResponse'] :: CreateUserPoolClientResponse -> Maybe UserPoolClientType

-- | The response's http status code.
[$sel:httpStatus:CreateUserPoolClientResponse'] :: CreateUserPoolClientResponse -> Int

-- | Create a value of <a>CreateUserPoolClientResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userPoolClient:CreateUserPoolClientResponse'</a>,
--   <a>createUserPoolClientResponse_userPoolClient</a> - The user pool
--   client that was just created.
--   
--   <a>$sel:httpStatus:CreateUserPoolClientResponse'</a>,
--   <a>createUserPoolClientResponse_httpStatus</a> - The response's http
--   status code.
newCreateUserPoolClientResponse :: Int -> CreateUserPoolClientResponse

-- | The user pool client that was just created.
createUserPoolClientResponse_userPoolClient :: Lens' CreateUserPoolClientResponse (Maybe UserPoolClientType)

-- | The response's http status code.
createUserPoolClientResponse_httpStatus :: Lens' CreateUserPoolClientResponse Int
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.CreateUserPoolClient.CreateUserPoolClient
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.CreateUserPoolClient.CreateUserPoolClient
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.CreateUserPoolClient.CreateUserPoolClient
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.CreateUserPoolClient.CreateUserPoolClient
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.CreateUserPoolClient.CreateUserPoolClientResponse
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.CreateUserPoolClient.CreateUserPoolClientResponse
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.CreateUserPoolClient.CreateUserPoolClientResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CognitoIdentityProvider.CreateUserPoolClient.CreateUserPoolClient
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.CreateUserPoolClient.CreateUserPoolClientResponse
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.CreateUserPoolClient.CreateUserPoolClient
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.CreateUserPoolClient.CreateUserPoolClient
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CognitoIdentityProvider.CreateUserPoolClient.CreateUserPoolClient
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.CreateUserPoolClient.CreateUserPoolClient
instance Network.AWS.Data.Path.ToPath Network.AWS.CognitoIdentityProvider.CreateUserPoolClient.CreateUserPoolClient
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentityProvider.CreateUserPoolClient.CreateUserPoolClient


-- | Creates a new Amazon Cognito user pool and sets the password policy
--   for the pool.
--   
--   This action might generate an SMS text message. Starting June 1, 2021,
--   U.S. telecom carriers require that you register an origination phone
--   number before you can send SMS messages to U.S. phone numbers. If you
--   use SMS text messages in Amazon Cognito, you must register a phone
--   number with <a>Amazon Pinpoint</a>. Cognito will use the the
--   registered number automatically. Otherwise, Cognito users that must
--   receive SMS messages might be unable to sign up, activate their
--   accounts, or sign in.
--   
--   If you have never used SMS text messages with Amazon Cognito or any
--   other Amazon Web Service, Amazon SNS might place your account in SMS
--   sandbox. In
--   <i>&lt;https:</i><i>docs.aws.amazon.com</i>sns<i>latest</i>dg<i>sns-sms-sandbox.html
--   sandbox mode&gt;</i> , you’ll have limitations, such as sending
--   messages to only verified phone numbers. After testing in the sandbox
--   environment, you can move out of the SMS sandbox and into production.
--   For more information, see <a>SMS message settings for Cognito User
--   Pools</a> in the <i>Amazon Cognito Developer Guide</i>.
module Network.AWS.CognitoIdentityProvider.CreateUserPool

-- | Represents the request to create a user pool.
--   
--   <i>See:</i> <a>newCreateUserPool</a> smart constructor.
data CreateUserPool
CreateUserPool' :: Maybe (HashMap Text Text) -> Maybe VerificationMessageTemplateType -> Maybe Text -> Maybe Text -> Maybe UserPoolAddOnsType -> Maybe Text -> Maybe [UsernameAttributeType] -> Maybe [AliasAttributeType] -> Maybe (NonEmpty SchemaAttributeType) -> Maybe AccountRecoverySettingType -> Maybe EmailConfigurationType -> Maybe Text -> Maybe UserPoolMfaType -> Maybe LambdaConfigType -> Maybe SmsConfigurationType -> Maybe AdminCreateUserConfigType -> Maybe DeviceConfigurationType -> Maybe [VerifiedAttributeType] -> Maybe UserPoolPolicyType -> Maybe UsernameConfigurationType -> Text -> CreateUserPool

-- | The tag keys and values to assign to the user pool. A tag is a label
--   that you can use to categorize and manage user pools in different
--   ways, such as by purpose, owner, environment, or other criteria.
[$sel:userPoolTags:CreateUserPool'] :: CreateUserPool -> Maybe (HashMap Text Text)

-- | The template for the verification message that the user sees when the
--   app requests permission to access the user's information.
[$sel:verificationMessageTemplate:CreateUserPool'] :: CreateUserPool -> Maybe VerificationMessageTemplateType

-- | A string representing the email verification message.
--   EmailVerificationMessage is allowed only if <a>EmailSendingAccount</a>
--   is DEVELOPER.
[$sel:emailVerificationMessage:CreateUserPool'] :: CreateUserPool -> Maybe Text

-- | A string representing the SMS authentication message.
[$sel:smsAuthenticationMessage:CreateUserPool'] :: CreateUserPool -> Maybe Text

-- | Used to enable advanced security risk detection. Set the key
--   <tt>AdvancedSecurityMode</tt> to the value "AUDIT".
[$sel:userPoolAddOns:CreateUserPool'] :: CreateUserPool -> Maybe UserPoolAddOnsType

-- | A string representing the email verification subject.
--   EmailVerificationSubject is allowed only if <a>EmailSendingAccount</a>
--   is DEVELOPER.
[$sel:emailVerificationSubject:CreateUserPool'] :: CreateUserPool -> Maybe Text

-- | Specifies whether email addresses or phone numbers can be specified as
--   usernames when a user signs up.
[$sel:usernameAttributes:CreateUserPool'] :: CreateUserPool -> Maybe [UsernameAttributeType]

-- | Attributes supported as an alias for this user pool. Possible values:
--   <b>phone_number</b>, <b>email</b>, or <b>preferred_username</b>.
[$sel:aliasAttributes:CreateUserPool'] :: CreateUserPool -> Maybe [AliasAttributeType]

-- | An array of schema attributes for the new user pool. These attributes
--   can be standard or custom attributes.
[$sel:schema:CreateUserPool'] :: CreateUserPool -> Maybe (NonEmpty SchemaAttributeType)

-- | Use this setting to define which verified available method a user can
--   use to recover their password when they call <tt>ForgotPassword</tt>.
--   It allows you to define a preferred method when a user has more than
--   one method available. With this setting, SMS does not qualify for a
--   valid password recovery mechanism if the user also has SMS MFA
--   enabled. In the absence of this setting, Cognito uses the legacy
--   behavior to determine the recovery method where SMS is preferred over
--   email.
[$sel:accountRecoverySetting:CreateUserPool'] :: CreateUserPool -> Maybe AccountRecoverySettingType

-- | The email configuration.
[$sel:emailConfiguration:CreateUserPool'] :: CreateUserPool -> Maybe EmailConfigurationType

-- | A string representing the SMS verification message.
[$sel:smsVerificationMessage:CreateUserPool'] :: CreateUserPool -> Maybe Text

-- | Specifies MFA configuration details.
[$sel:mfaConfiguration:CreateUserPool'] :: CreateUserPool -> Maybe UserPoolMfaType

-- | The Lambda trigger configuration information for the new user pool.
--   
--   In a push model, event sources (such as Amazon S3 and custom
--   applications) need permission to invoke a function. So you will need
--   to make an extra call to add permission for these event sources to
--   invoke your Lambda function.
--   
--   For more information on using the Lambda API to add permission, see
--   <a>AddPermission</a> .
--   
--   For adding permission using the CLI, see <a>add-permission</a> .
[$sel:lambdaConfig:CreateUserPool'] :: CreateUserPool -> Maybe LambdaConfigType

-- | The SMS configuration.
[$sel:smsConfiguration:CreateUserPool'] :: CreateUserPool -> Maybe SmsConfigurationType

-- | The configuration for <tt>AdminCreateUser</tt> requests.
[$sel:adminCreateUserConfig:CreateUserPool'] :: CreateUserPool -> Maybe AdminCreateUserConfigType

-- | The device configuration.
[$sel:deviceConfiguration:CreateUserPool'] :: CreateUserPool -> Maybe DeviceConfigurationType

-- | The attributes to be auto-verified. Possible values: <b>email</b>,
--   <b>phone_number</b>.
[$sel:autoVerifiedAttributes:CreateUserPool'] :: CreateUserPool -> Maybe [VerifiedAttributeType]

-- | The policies associated with the new user pool.
[$sel:policies:CreateUserPool'] :: CreateUserPool -> Maybe UserPoolPolicyType

-- | You can choose to set case sensitivity on the username input for the
--   selected sign-in option. For example, when this is set to
--   <tt>False</tt>, users will be able to sign in using either "username"
--   or "Username". This configuration is immutable once it has been set.
--   For more information, see <a>UsernameConfigurationType</a>.
[$sel:usernameConfiguration:CreateUserPool'] :: CreateUserPool -> Maybe UsernameConfigurationType

-- | A string used to name the user pool.
[$sel:poolName:CreateUserPool'] :: CreateUserPool -> Text

-- | Create a value of <a>CreateUserPool</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userPoolTags:CreateUserPool'</a>,
--   <a>createUserPool_userPoolTags</a> - The tag keys and values to assign
--   to the user pool. A tag is a label that you can use to categorize and
--   manage user pools in different ways, such as by purpose, owner,
--   environment, or other criteria.
--   
--   <a>$sel:verificationMessageTemplate:CreateUserPool'</a>,
--   <a>createUserPool_verificationMessageTemplate</a> - The template for
--   the verification message that the user sees when the app requests
--   permission to access the user's information.
--   
--   <a>$sel:emailVerificationMessage:CreateUserPool'</a>,
--   <a>createUserPool_emailVerificationMessage</a> - A string representing
--   the email verification message. EmailVerificationMessage is allowed
--   only if <a>EmailSendingAccount</a> is DEVELOPER.
--   
--   <a>$sel:smsAuthenticationMessage:CreateUserPool'</a>,
--   <a>createUserPool_smsAuthenticationMessage</a> - A string representing
--   the SMS authentication message.
--   
--   <a>$sel:userPoolAddOns:CreateUserPool'</a>,
--   <a>createUserPool_userPoolAddOns</a> - Used to enable advanced
--   security risk detection. Set the key <tt>AdvancedSecurityMode</tt> to
--   the value "AUDIT".
--   
--   <a>$sel:emailVerificationSubject:CreateUserPool'</a>,
--   <a>createUserPool_emailVerificationSubject</a> - A string representing
--   the email verification subject. EmailVerificationSubject is allowed
--   only if <a>EmailSendingAccount</a> is DEVELOPER.
--   
--   <a>$sel:usernameAttributes:CreateUserPool'</a>,
--   <a>createUserPool_usernameAttributes</a> - Specifies whether email
--   addresses or phone numbers can be specified as usernames when a user
--   signs up.
--   
--   <a>$sel:aliasAttributes:CreateUserPool'</a>,
--   <a>createUserPool_aliasAttributes</a> - Attributes supported as an
--   alias for this user pool. Possible values: <b>phone_number</b>,
--   <b>email</b>, or <b>preferred_username</b>.
--   
--   <a>$sel:schema:CreateUserPool'</a>, <a>createUserPool_schema</a> - An
--   array of schema attributes for the new user pool. These attributes can
--   be standard or custom attributes.
--   
--   <a>$sel:accountRecoverySetting:CreateUserPool'</a>,
--   <a>createUserPool_accountRecoverySetting</a> - Use this setting to
--   define which verified available method a user can use to recover their
--   password when they call <tt>ForgotPassword</tt>. It allows you to
--   define a preferred method when a user has more than one method
--   available. With this setting, SMS does not qualify for a valid
--   password recovery mechanism if the user also has SMS MFA enabled. In
--   the absence of this setting, Cognito uses the legacy behavior to
--   determine the recovery method where SMS is preferred over email.
--   
--   <a>$sel:emailConfiguration:CreateUserPool'</a>,
--   <a>createUserPool_emailConfiguration</a> - The email configuration.
--   
--   <a>$sel:smsVerificationMessage:CreateUserPool'</a>,
--   <a>createUserPool_smsVerificationMessage</a> - A string representing
--   the SMS verification message.
--   
--   <a>$sel:mfaConfiguration:CreateUserPool'</a>,
--   <a>createUserPool_mfaConfiguration</a> - Specifies MFA configuration
--   details.
--   
--   <a>$sel:lambdaConfig:CreateUserPool'</a>,
--   <a>createUserPool_lambdaConfig</a> - The Lambda trigger configuration
--   information for the new user pool.
--   
--   In a push model, event sources (such as Amazon S3 and custom
--   applications) need permission to invoke a function. So you will need
--   to make an extra call to add permission for these event sources to
--   invoke your Lambda function.
--   
--   For more information on using the Lambda API to add permission, see
--   <a>AddPermission</a> .
--   
--   For adding permission using the CLI, see <a>add-permission</a> .
--   
--   <a>$sel:smsConfiguration:CreateUserPool'</a>,
--   <a>createUserPool_smsConfiguration</a> - The SMS configuration.
--   
--   <a>$sel:adminCreateUserConfig:CreateUserPool'</a>,
--   <a>createUserPool_adminCreateUserConfig</a> - The configuration for
--   <tt>AdminCreateUser</tt> requests.
--   
--   <a>$sel:deviceConfiguration:CreateUserPool'</a>,
--   <a>createUserPool_deviceConfiguration</a> - The device configuration.
--   
--   <a>$sel:autoVerifiedAttributes:CreateUserPool'</a>,
--   <a>createUserPool_autoVerifiedAttributes</a> - The attributes to be
--   auto-verified. Possible values: <b>email</b>, <b>phone_number</b>.
--   
--   <a>$sel:policies:CreateUserPool'</a>, <a>createUserPool_policies</a> -
--   The policies associated with the new user pool.
--   
--   <a>$sel:usernameConfiguration:CreateUserPool'</a>,
--   <a>createUserPool_usernameConfiguration</a> - You can choose to set
--   case sensitivity on the username input for the selected sign-in
--   option. For example, when this is set to <tt>False</tt>, users will be
--   able to sign in using either "username" or "Username". This
--   configuration is immutable once it has been set. For more information,
--   see <a>UsernameConfigurationType</a>.
--   
--   <a>$sel:poolName:CreateUserPool'</a>, <a>createUserPool_poolName</a> -
--   A string used to name the user pool.
newCreateUserPool :: Text -> CreateUserPool

-- | The tag keys and values to assign to the user pool. A tag is a label
--   that you can use to categorize and manage user pools in different
--   ways, such as by purpose, owner, environment, or other criteria.
createUserPool_userPoolTags :: Lens' CreateUserPool (Maybe (HashMap Text Text))

-- | The template for the verification message that the user sees when the
--   app requests permission to access the user's information.
createUserPool_verificationMessageTemplate :: Lens' CreateUserPool (Maybe VerificationMessageTemplateType)

-- | A string representing the email verification message.
--   EmailVerificationMessage is allowed only if <a>EmailSendingAccount</a>
--   is DEVELOPER.
createUserPool_emailVerificationMessage :: Lens' CreateUserPool (Maybe Text)

-- | A string representing the SMS authentication message.
createUserPool_smsAuthenticationMessage :: Lens' CreateUserPool (Maybe Text)

-- | Used to enable advanced security risk detection. Set the key
--   <tt>AdvancedSecurityMode</tt> to the value "AUDIT".
createUserPool_userPoolAddOns :: Lens' CreateUserPool (Maybe UserPoolAddOnsType)

-- | A string representing the email verification subject.
--   EmailVerificationSubject is allowed only if <a>EmailSendingAccount</a>
--   is DEVELOPER.
createUserPool_emailVerificationSubject :: Lens' CreateUserPool (Maybe Text)

-- | Specifies whether email addresses or phone numbers can be specified as
--   usernames when a user signs up.
createUserPool_usernameAttributes :: Lens' CreateUserPool (Maybe [UsernameAttributeType])

-- | Attributes supported as an alias for this user pool. Possible values:
--   <b>phone_number</b>, <b>email</b>, or <b>preferred_username</b>.
createUserPool_aliasAttributes :: Lens' CreateUserPool (Maybe [AliasAttributeType])

-- | An array of schema attributes for the new user pool. These attributes
--   can be standard or custom attributes.
createUserPool_schema :: Lens' CreateUserPool (Maybe (NonEmpty SchemaAttributeType))

-- | Use this setting to define which verified available method a user can
--   use to recover their password when they call <tt>ForgotPassword</tt>.
--   It allows you to define a preferred method when a user has more than
--   one method available. With this setting, SMS does not qualify for a
--   valid password recovery mechanism if the user also has SMS MFA
--   enabled. In the absence of this setting, Cognito uses the legacy
--   behavior to determine the recovery method where SMS is preferred over
--   email.
createUserPool_accountRecoverySetting :: Lens' CreateUserPool (Maybe AccountRecoverySettingType)

-- | The email configuration.
createUserPool_emailConfiguration :: Lens' CreateUserPool (Maybe EmailConfigurationType)

-- | A string representing the SMS verification message.
createUserPool_smsVerificationMessage :: Lens' CreateUserPool (Maybe Text)

-- | Specifies MFA configuration details.
createUserPool_mfaConfiguration :: Lens' CreateUserPool (Maybe UserPoolMfaType)

-- | The Lambda trigger configuration information for the new user pool.
--   
--   In a push model, event sources (such as Amazon S3 and custom
--   applications) need permission to invoke a function. So you will need
--   to make an extra call to add permission for these event sources to
--   invoke your Lambda function.
--   
--   For more information on using the Lambda API to add permission, see
--   <a>AddPermission</a> .
--   
--   For adding permission using the CLI, see <a>add-permission</a> .
createUserPool_lambdaConfig :: Lens' CreateUserPool (Maybe LambdaConfigType)

-- | The SMS configuration.
createUserPool_smsConfiguration :: Lens' CreateUserPool (Maybe SmsConfigurationType)

-- | The configuration for <tt>AdminCreateUser</tt> requests.
createUserPool_adminCreateUserConfig :: Lens' CreateUserPool (Maybe AdminCreateUserConfigType)

-- | The device configuration.
createUserPool_deviceConfiguration :: Lens' CreateUserPool (Maybe DeviceConfigurationType)

-- | The attributes to be auto-verified. Possible values: <b>email</b>,
--   <b>phone_number</b>.
createUserPool_autoVerifiedAttributes :: Lens' CreateUserPool (Maybe [VerifiedAttributeType])

-- | The policies associated with the new user pool.
createUserPool_policies :: Lens' CreateUserPool (Maybe UserPoolPolicyType)

-- | You can choose to set case sensitivity on the username input for the
--   selected sign-in option. For example, when this is set to
--   <tt>False</tt>, users will be able to sign in using either "username"
--   or "Username". This configuration is immutable once it has been set.
--   For more information, see <a>UsernameConfigurationType</a>.
createUserPool_usernameConfiguration :: Lens' CreateUserPool (Maybe UsernameConfigurationType)

-- | A string used to name the user pool.
createUserPool_poolName :: Lens' CreateUserPool Text

-- | Represents the response from the server for the request to create a
--   user pool.
--   
--   <i>See:</i> <a>newCreateUserPoolResponse</a> smart constructor.
data CreateUserPoolResponse
CreateUserPoolResponse' :: Maybe UserPoolType -> Int -> CreateUserPoolResponse

-- | A container for the user pool details.
[$sel:userPool:CreateUserPoolResponse'] :: CreateUserPoolResponse -> Maybe UserPoolType

-- | The response's http status code.
[$sel:httpStatus:CreateUserPoolResponse'] :: CreateUserPoolResponse -> Int

-- | Create a value of <a>CreateUserPoolResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userPool:CreateUserPoolResponse'</a>,
--   <a>createUserPoolResponse_userPool</a> - A container for the user pool
--   details.
--   
--   <a>$sel:httpStatus:CreateUserPoolResponse'</a>,
--   <a>createUserPoolResponse_httpStatus</a> - The response's http status
--   code.
newCreateUserPoolResponse :: Int -> CreateUserPoolResponse

-- | A container for the user pool details.
createUserPoolResponse_userPool :: Lens' CreateUserPoolResponse (Maybe UserPoolType)

-- | The response's http status code.
createUserPoolResponse_httpStatus :: Lens' CreateUserPoolResponse Int
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.CreateUserPool.CreateUserPool
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.CreateUserPool.CreateUserPool
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.CreateUserPool.CreateUserPool
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.CreateUserPool.CreateUserPool
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.CreateUserPool.CreateUserPoolResponse
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.CreateUserPool.CreateUserPoolResponse
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.CreateUserPool.CreateUserPoolResponse
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.CreateUserPool.CreateUserPoolResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CognitoIdentityProvider.CreateUserPool.CreateUserPool
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.CreateUserPool.CreateUserPoolResponse
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.CreateUserPool.CreateUserPool
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.CreateUserPool.CreateUserPool
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CognitoIdentityProvider.CreateUserPool.CreateUserPool
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.CreateUserPool.CreateUserPool
instance Network.AWS.Data.Path.ToPath Network.AWS.CognitoIdentityProvider.CreateUserPool.CreateUserPool
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentityProvider.CreateUserPool.CreateUserPool


-- | Creates the user import job.
module Network.AWS.CognitoIdentityProvider.CreateUserImportJob

-- | Represents the request to create the user import job.
--   
--   <i>See:</i> <a>newCreateUserImportJob</a> smart constructor.
data CreateUserImportJob
CreateUserImportJob' :: Text -> Text -> Text -> CreateUserImportJob

-- | The job name for the user import job.
[$sel:jobName:CreateUserImportJob'] :: CreateUserImportJob -> Text

-- | The user pool ID for the user pool that the users are being imported
--   into.
[$sel:userPoolId:CreateUserImportJob'] :: CreateUserImportJob -> Text

-- | The role ARN for the Amazon CloudWatch Logging role for the user
--   import job.
[$sel:cloudWatchLogsRoleArn:CreateUserImportJob'] :: CreateUserImportJob -> Text

-- | Create a value of <a>CreateUserImportJob</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobName:CreateUserImportJob'</a>,
--   <a>createUserImportJob_jobName</a> - The job name for the user import
--   job.
--   
--   <a>$sel:userPoolId:CreateUserImportJob'</a>,
--   <a>createUserImportJob_userPoolId</a> - The user pool ID for the user
--   pool that the users are being imported into.
--   
--   <a>$sel:cloudWatchLogsRoleArn:CreateUserImportJob'</a>,
--   <a>createUserImportJob_cloudWatchLogsRoleArn</a> - The role ARN for
--   the Amazon CloudWatch Logging role for the user import job.
newCreateUserImportJob :: Text -> Text -> Text -> CreateUserImportJob

-- | The job name for the user import job.
createUserImportJob_jobName :: Lens' CreateUserImportJob Text

-- | The user pool ID for the user pool that the users are being imported
--   into.
createUserImportJob_userPoolId :: Lens' CreateUserImportJob Text

-- | The role ARN for the Amazon CloudWatch Logging role for the user
--   import job.
createUserImportJob_cloudWatchLogsRoleArn :: Lens' CreateUserImportJob Text

-- | Represents the response from the server to the request to create the
--   user import job.
--   
--   <i>See:</i> <a>newCreateUserImportJobResponse</a> smart constructor.
data CreateUserImportJobResponse
CreateUserImportJobResponse' :: Maybe UserImportJobType -> Int -> CreateUserImportJobResponse

-- | The job object that represents the user import job.
[$sel:userImportJob:CreateUserImportJobResponse'] :: CreateUserImportJobResponse -> Maybe UserImportJobType

-- | The response's http status code.
[$sel:httpStatus:CreateUserImportJobResponse'] :: CreateUserImportJobResponse -> Int

-- | Create a value of <a>CreateUserImportJobResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userImportJob:CreateUserImportJobResponse'</a>,
--   <a>createUserImportJobResponse_userImportJob</a> - The job object that
--   represents the user import job.
--   
--   <a>$sel:httpStatus:CreateUserImportJobResponse'</a>,
--   <a>createUserImportJobResponse_httpStatus</a> - The response's http
--   status code.
newCreateUserImportJobResponse :: Int -> CreateUserImportJobResponse

-- | The job object that represents the user import job.
createUserImportJobResponse_userImportJob :: Lens' CreateUserImportJobResponse (Maybe UserImportJobType)

-- | The response's http status code.
createUserImportJobResponse_httpStatus :: Lens' CreateUserImportJobResponse Int
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.CreateUserImportJob.CreateUserImportJob
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.CreateUserImportJob.CreateUserImportJob
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.CreateUserImportJob.CreateUserImportJob
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.CreateUserImportJob.CreateUserImportJob
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.CreateUserImportJob.CreateUserImportJobResponse
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.CreateUserImportJob.CreateUserImportJobResponse
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.CreateUserImportJob.CreateUserImportJobResponse
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.CreateUserImportJob.CreateUserImportJobResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CognitoIdentityProvider.CreateUserImportJob.CreateUserImportJob
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.CreateUserImportJob.CreateUserImportJobResponse
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.CreateUserImportJob.CreateUserImportJob
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.CreateUserImportJob.CreateUserImportJob
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CognitoIdentityProvider.CreateUserImportJob.CreateUserImportJob
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.CreateUserImportJob.CreateUserImportJob
instance Network.AWS.Data.Path.ToPath Network.AWS.CognitoIdentityProvider.CreateUserImportJob.CreateUserImportJob
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentityProvider.CreateUserImportJob.CreateUserImportJob


-- | Creates a new OAuth2.0 resource server and defines custom scopes in
--   it.
module Network.AWS.CognitoIdentityProvider.CreateResourceServer

-- | <i>See:</i> <a>newCreateResourceServer</a> smart constructor.
data CreateResourceServer
CreateResourceServer' :: Maybe [ResourceServerScopeType] -> Text -> Text -> Text -> CreateResourceServer

-- | A list of scopes. Each scope is map, where the keys are <tt>name</tt>
--   and <tt>description</tt>.
[$sel:scopes:CreateResourceServer'] :: CreateResourceServer -> Maybe [ResourceServerScopeType]

-- | The user pool ID for the user pool.
[$sel:userPoolId:CreateResourceServer'] :: CreateResourceServer -> Text

-- | A unique resource server identifier for the resource server. This
--   could be an HTTPS endpoint where the resource server is located. For
--   example, <tt>https://my-weather-api.example.com</tt>.
[$sel:identifier:CreateResourceServer'] :: CreateResourceServer -> Text

-- | A friendly name for the resource server.
[$sel:name:CreateResourceServer'] :: CreateResourceServer -> Text

-- | Create a value of <a>CreateResourceServer</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:scopes:CreateResourceServer'</a>,
--   <a>createResourceServer_scopes</a> - A list of scopes. Each scope is
--   map, where the keys are <tt>name</tt> and <tt>description</tt>.
--   
--   <a>$sel:userPoolId:CreateResourceServer'</a>,
--   <a>createResourceServer_userPoolId</a> - The user pool ID for the user
--   pool.
--   
--   <a>$sel:identifier:CreateResourceServer'</a>,
--   <a>createResourceServer_identifier</a> - A unique resource server
--   identifier for the resource server. This could be an HTTPS endpoint
--   where the resource server is located. For example,
--   <tt>https://my-weather-api.example.com</tt>.
--   
--   <a>$sel:name:CreateResourceServer'</a>,
--   <a>createResourceServer_name</a> - A friendly name for the resource
--   server.
newCreateResourceServer :: Text -> Text -> Text -> CreateResourceServer

-- | A list of scopes. Each scope is map, where the keys are <tt>name</tt>
--   and <tt>description</tt>.
createResourceServer_scopes :: Lens' CreateResourceServer (Maybe [ResourceServerScopeType])

-- | The user pool ID for the user pool.
createResourceServer_userPoolId :: Lens' CreateResourceServer Text

-- | A unique resource server identifier for the resource server. This
--   could be an HTTPS endpoint where the resource server is located. For
--   example, <tt>https://my-weather-api.example.com</tt>.
createResourceServer_identifier :: Lens' CreateResourceServer Text

-- | A friendly name for the resource server.
createResourceServer_name :: Lens' CreateResourceServer Text

-- | <i>See:</i> <a>newCreateResourceServerResponse</a> smart constructor.
data CreateResourceServerResponse
CreateResourceServerResponse' :: Int -> ResourceServerType -> CreateResourceServerResponse

-- | The response's http status code.
[$sel:httpStatus:CreateResourceServerResponse'] :: CreateResourceServerResponse -> Int

-- | The newly created resource server.
[$sel:resourceServer:CreateResourceServerResponse'] :: CreateResourceServerResponse -> ResourceServerType

-- | Create a value of <a>CreateResourceServerResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreateResourceServerResponse'</a>,
--   <a>createResourceServerResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:resourceServer:CreateResourceServerResponse'</a>,
--   <a>createResourceServerResponse_resourceServer</a> - The newly created
--   resource server.
newCreateResourceServerResponse :: Int -> ResourceServerType -> CreateResourceServerResponse

-- | The response's http status code.
createResourceServerResponse_httpStatus :: Lens' CreateResourceServerResponse Int

-- | The newly created resource server.
createResourceServerResponse_resourceServer :: Lens' CreateResourceServerResponse ResourceServerType
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.CreateResourceServer.CreateResourceServer
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.CreateResourceServer.CreateResourceServer
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.CreateResourceServer.CreateResourceServer
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.CreateResourceServer.CreateResourceServer
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.CreateResourceServer.CreateResourceServerResponse
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.CreateResourceServer.CreateResourceServerResponse
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.CreateResourceServer.CreateResourceServerResponse
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.CreateResourceServer.CreateResourceServerResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CognitoIdentityProvider.CreateResourceServer.CreateResourceServer
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.CreateResourceServer.CreateResourceServerResponse
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.CreateResourceServer.CreateResourceServer
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.CreateResourceServer.CreateResourceServer
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CognitoIdentityProvider.CreateResourceServer.CreateResourceServer
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.CreateResourceServer.CreateResourceServer
instance Network.AWS.Data.Path.ToPath Network.AWS.CognitoIdentityProvider.CreateResourceServer.CreateResourceServer
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentityProvider.CreateResourceServer.CreateResourceServer


-- | Creates an identity provider for a user pool.
module Network.AWS.CognitoIdentityProvider.CreateIdentityProvider

-- | <i>See:</i> <a>newCreateIdentityProvider</a> smart constructor.
data CreateIdentityProvider
CreateIdentityProvider' :: Maybe [Text] -> Maybe (HashMap Text Text) -> Text -> Text -> IdentityProviderTypeType -> HashMap Text Text -> CreateIdentityProvider

-- | A list of identity provider identifiers.
[$sel:idpIdentifiers:CreateIdentityProvider'] :: CreateIdentityProvider -> Maybe [Text]

-- | A mapping of identity provider attributes to standard and custom user
--   pool attributes.
[$sel:attributeMapping:CreateIdentityProvider'] :: CreateIdentityProvider -> Maybe (HashMap Text Text)

-- | The user pool ID.
[$sel:userPoolId:CreateIdentityProvider'] :: CreateIdentityProvider -> Text

-- | The identity provider name.
[$sel:providerName:CreateIdentityProvider'] :: CreateIdentityProvider -> Text

-- | The identity provider type.
[$sel:providerType:CreateIdentityProvider'] :: CreateIdentityProvider -> IdentityProviderTypeType

-- | The identity provider details. The following list describes the
--   provider detail keys for each identity provider type.
--   
--   <ul>
--   <li>For Google and Login with
--   Amazon:<ul><li>client_id</li><li>client_secret</li><li>authorize_scopes</li></ul></li>
--   <li>For
--   Facebook:<ul><li>client_id</li><li>client_secret</li><li>authorize_scopes</li><li>api_version</li></ul></li>
--   <li>For Sign in with
--   Apple:<ul><li>client_id</li><li>team_id</li><li>key_id</li><li>private_key</li><li>authorize_scopes</li></ul></li>
--   <li>For OIDC
--   providers:<ul><li>client_id</li><li>client_secret</li><li>attributes_request_method</li><li>oidc_issuer</li><li>authorize_scopes</li><li>authorize_url
--   /if not available from discovery URL specified by oidc_issuer
--   key/</li><li>token_url /if not available from discovery URL specified
--   by oidc_issuer key/</li><li>attributes_url /if not available from
--   discovery URL specified by oidc_issuer key/</li><li>jwks_uri /if not
--   available from discovery URL specified by oidc_issuer
--   key/</li></ul></li>
--   <li>For SAML providers:<ul><li>MetadataFile OR
--   MetadataURL</li><li>IDPSignout <i>optional</i></li></ul></li>
--   </ul>
[$sel:providerDetails:CreateIdentityProvider'] :: CreateIdentityProvider -> HashMap Text Text

-- | Create a value of <a>CreateIdentityProvider</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:idpIdentifiers:CreateIdentityProvider'</a>,
--   <a>createIdentityProvider_idpIdentifiers</a> - A list of identity
--   provider identifiers.
--   
--   <a>$sel:attributeMapping:CreateIdentityProvider'</a>,
--   <a>createIdentityProvider_attributeMapping</a> - A mapping of identity
--   provider attributes to standard and custom user pool attributes.
--   
--   <a>$sel:userPoolId:CreateIdentityProvider'</a>,
--   <a>createIdentityProvider_userPoolId</a> - The user pool ID.
--   
--   <a>$sel:providerName:CreateIdentityProvider'</a>,
--   <a>createIdentityProvider_providerName</a> - The identity provider
--   name.
--   
--   <a>$sel:providerType:CreateIdentityProvider'</a>,
--   <a>createIdentityProvider_providerType</a> - The identity provider
--   type.
--   
--   <a>$sel:providerDetails:CreateIdentityProvider'</a>,
--   <a>createIdentityProvider_providerDetails</a> - The identity provider
--   details. The following list describes the provider detail keys for
--   each identity provider type.
--   
--   <ul>
--   <li>For Google and Login with
--   Amazon:<ul><li>client_id</li><li>client_secret</li><li>authorize_scopes</li></ul></li>
--   <li>For
--   Facebook:<ul><li>client_id</li><li>client_secret</li><li>authorize_scopes</li><li>api_version</li></ul></li>
--   <li>For Sign in with
--   Apple:<ul><li>client_id</li><li>team_id</li><li>key_id</li><li>private_key</li><li>authorize_scopes</li></ul></li>
--   <li>For OIDC
--   providers:<ul><li>client_id</li><li>client_secret</li><li>attributes_request_method</li><li>oidc_issuer</li><li>authorize_scopes</li><li>authorize_url
--   /if not available from discovery URL specified by oidc_issuer
--   key/</li><li>token_url /if not available from discovery URL specified
--   by oidc_issuer key/</li><li>attributes_url /if not available from
--   discovery URL specified by oidc_issuer key/</li><li>jwks_uri /if not
--   available from discovery URL specified by oidc_issuer
--   key/</li></ul></li>
--   <li>For SAML providers:<ul><li>MetadataFile OR
--   MetadataURL</li><li>IDPSignout <i>optional</i></li></ul></li>
--   </ul>
newCreateIdentityProvider :: Text -> Text -> IdentityProviderTypeType -> CreateIdentityProvider

-- | A list of identity provider identifiers.
createIdentityProvider_idpIdentifiers :: Lens' CreateIdentityProvider (Maybe [Text])

-- | A mapping of identity provider attributes to standard and custom user
--   pool attributes.
createIdentityProvider_attributeMapping :: Lens' CreateIdentityProvider (Maybe (HashMap Text Text))

-- | The user pool ID.
createIdentityProvider_userPoolId :: Lens' CreateIdentityProvider Text

-- | The identity provider name.
createIdentityProvider_providerName :: Lens' CreateIdentityProvider Text

-- | The identity provider type.
createIdentityProvider_providerType :: Lens' CreateIdentityProvider IdentityProviderTypeType

-- | The identity provider details. The following list describes the
--   provider detail keys for each identity provider type.
--   
--   <ul>
--   <li>For Google and Login with
--   Amazon:<ul><li>client_id</li><li>client_secret</li><li>authorize_scopes</li></ul></li>
--   <li>For
--   Facebook:<ul><li>client_id</li><li>client_secret</li><li>authorize_scopes</li><li>api_version</li></ul></li>
--   <li>For Sign in with
--   Apple:<ul><li>client_id</li><li>team_id</li><li>key_id</li><li>private_key</li><li>authorize_scopes</li></ul></li>
--   <li>For OIDC
--   providers:<ul><li>client_id</li><li>client_secret</li><li>attributes_request_method</li><li>oidc_issuer</li><li>authorize_scopes</li><li>authorize_url
--   /if not available from discovery URL specified by oidc_issuer
--   key/</li><li>token_url /if not available from discovery URL specified
--   by oidc_issuer key/</li><li>attributes_url /if not available from
--   discovery URL specified by oidc_issuer key/</li><li>jwks_uri /if not
--   available from discovery URL specified by oidc_issuer
--   key/</li></ul></li>
--   <li>For SAML providers:<ul><li>MetadataFile OR
--   MetadataURL</li><li>IDPSignout <i>optional</i></li></ul></li>
--   </ul>
createIdentityProvider_providerDetails :: Lens' CreateIdentityProvider (HashMap Text Text)

-- | <i>See:</i> <a>newCreateIdentityProviderResponse</a> smart
--   constructor.
data CreateIdentityProviderResponse
CreateIdentityProviderResponse' :: Int -> IdentityProviderType -> CreateIdentityProviderResponse

-- | The response's http status code.
[$sel:httpStatus:CreateIdentityProviderResponse'] :: CreateIdentityProviderResponse -> Int

-- | The newly created identity provider object.
[$sel:identityProvider:CreateIdentityProviderResponse'] :: CreateIdentityProviderResponse -> IdentityProviderType

-- | Create a value of <a>CreateIdentityProviderResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreateIdentityProviderResponse'</a>,
--   <a>createIdentityProviderResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:identityProvider:CreateIdentityProviderResponse'</a>,
--   <a>createIdentityProviderResponse_identityProvider</a> - The newly
--   created identity provider object.
newCreateIdentityProviderResponse :: Int -> IdentityProviderType -> CreateIdentityProviderResponse

-- | The response's http status code.
createIdentityProviderResponse_httpStatus :: Lens' CreateIdentityProviderResponse Int

-- | The newly created identity provider object.
createIdentityProviderResponse_identityProvider :: Lens' CreateIdentityProviderResponse IdentityProviderType
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.CreateIdentityProvider.CreateIdentityProvider
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.CreateIdentityProvider.CreateIdentityProvider
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.CreateIdentityProvider.CreateIdentityProvider
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.CreateIdentityProvider.CreateIdentityProvider
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.CreateIdentityProvider.CreateIdentityProviderResponse
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.CreateIdentityProvider.CreateIdentityProviderResponse
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.CreateIdentityProvider.CreateIdentityProviderResponse
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.CreateIdentityProvider.CreateIdentityProviderResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CognitoIdentityProvider.CreateIdentityProvider.CreateIdentityProvider
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.CreateIdentityProvider.CreateIdentityProviderResponse
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.CreateIdentityProvider.CreateIdentityProvider
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.CreateIdentityProvider.CreateIdentityProvider
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CognitoIdentityProvider.CreateIdentityProvider.CreateIdentityProvider
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.CreateIdentityProvider.CreateIdentityProvider
instance Network.AWS.Data.Path.ToPath Network.AWS.CognitoIdentityProvider.CreateIdentityProvider.CreateIdentityProvider
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentityProvider.CreateIdentityProvider.CreateIdentityProvider


-- | Creates a new group in the specified user pool.
--   
--   Calling this action requires developer credentials.
module Network.AWS.CognitoIdentityProvider.CreateGroup

-- | <i>See:</i> <a>newCreateGroup</a> smart constructor.
data CreateGroup
CreateGroup' :: Maybe Natural -> Maybe Text -> Maybe Text -> Text -> Text -> CreateGroup

-- | A nonnegative integer value that specifies the precedence of this
--   group relative to the other groups that a user can belong to in the
--   user pool. Zero is the highest precedence value. Groups with lower
--   <tt>Precedence</tt> values take precedence over groups with higher or
--   null <tt>Precedence</tt> values. If a user belongs to two or more
--   groups, it is the group with the lowest precedence value whose role
--   ARN will be used in the <tt>cognito:roles</tt> and
--   <tt>cognito:preferred_role</tt> claims in the user's tokens.
--   
--   Two groups can have the same <tt>Precedence</tt> value. If this
--   happens, neither group takes precedence over the other. If two groups
--   with the same <tt>Precedence</tt> have the same role ARN, that role is
--   used in the <tt>cognito:preferred_role</tt> claim in tokens for users
--   in each group. If the two groups have different role ARNs, the
--   <tt>cognito:preferred_role</tt> claim is not set in users' tokens.
--   
--   The default <tt>Precedence</tt> value is null.
[$sel:precedence:CreateGroup'] :: CreateGroup -> Maybe Natural

-- | A string containing the description of the group.
[$sel:description:CreateGroup'] :: CreateGroup -> Maybe Text

-- | The role ARN for the group.
[$sel:roleArn:CreateGroup'] :: CreateGroup -> Maybe Text

-- | The name of the group. Must be unique.
[$sel:groupName:CreateGroup'] :: CreateGroup -> Text

-- | The user pool ID for the user pool.
[$sel:userPoolId:CreateGroup'] :: CreateGroup -> Text

-- | Create a value of <a>CreateGroup</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:precedence:CreateGroup'</a>, <a>createGroup_precedence</a> - A
--   nonnegative integer value that specifies the precedence of this group
--   relative to the other groups that a user can belong to in the user
--   pool. Zero is the highest precedence value. Groups with lower
--   <tt>Precedence</tt> values take precedence over groups with higher or
--   null <tt>Precedence</tt> values. If a user belongs to two or more
--   groups, it is the group with the lowest precedence value whose role
--   ARN will be used in the <tt>cognito:roles</tt> and
--   <tt>cognito:preferred_role</tt> claims in the user's tokens.
--   
--   Two groups can have the same <tt>Precedence</tt> value. If this
--   happens, neither group takes precedence over the other. If two groups
--   with the same <tt>Precedence</tt> have the same role ARN, that role is
--   used in the <tt>cognito:preferred_role</tt> claim in tokens for users
--   in each group. If the two groups have different role ARNs, the
--   <tt>cognito:preferred_role</tt> claim is not set in users' tokens.
--   
--   The default <tt>Precedence</tt> value is null.
--   
--   <a>$sel:description:CreateGroup'</a>, <a>createGroup_description</a> -
--   A string containing the description of the group.
--   
--   <a>$sel:roleArn:CreateGroup'</a>, <a>createGroup_roleArn</a> - The
--   role ARN for the group.
--   
--   <a>$sel:groupName:CreateGroup'</a>, <a>createGroup_groupName</a> - The
--   name of the group. Must be unique.
--   
--   <a>$sel:userPoolId:CreateGroup'</a>, <a>createGroup_userPoolId</a> -
--   The user pool ID for the user pool.
newCreateGroup :: Text -> Text -> CreateGroup

-- | A nonnegative integer value that specifies the precedence of this
--   group relative to the other groups that a user can belong to in the
--   user pool. Zero is the highest precedence value. Groups with lower
--   <tt>Precedence</tt> values take precedence over groups with higher or
--   null <tt>Precedence</tt> values. If a user belongs to two or more
--   groups, it is the group with the lowest precedence value whose role
--   ARN will be used in the <tt>cognito:roles</tt> and
--   <tt>cognito:preferred_role</tt> claims in the user's tokens.
--   
--   Two groups can have the same <tt>Precedence</tt> value. If this
--   happens, neither group takes precedence over the other. If two groups
--   with the same <tt>Precedence</tt> have the same role ARN, that role is
--   used in the <tt>cognito:preferred_role</tt> claim in tokens for users
--   in each group. If the two groups have different role ARNs, the
--   <tt>cognito:preferred_role</tt> claim is not set in users' tokens.
--   
--   The default <tt>Precedence</tt> value is null.
createGroup_precedence :: Lens' CreateGroup (Maybe Natural)

-- | A string containing the description of the group.
createGroup_description :: Lens' CreateGroup (Maybe Text)

-- | The role ARN for the group.
createGroup_roleArn :: Lens' CreateGroup (Maybe Text)

-- | The name of the group. Must be unique.
createGroup_groupName :: Lens' CreateGroup Text

-- | The user pool ID for the user pool.
createGroup_userPoolId :: Lens' CreateGroup Text

-- | <i>See:</i> <a>newCreateGroupResponse</a> smart constructor.
data CreateGroupResponse
CreateGroupResponse' :: Maybe GroupType -> Int -> CreateGroupResponse

-- | The group object for the group.
[$sel:group':CreateGroupResponse'] :: CreateGroupResponse -> Maybe GroupType

-- | The response's http status code.
[$sel:httpStatus:CreateGroupResponse'] :: CreateGroupResponse -> Int

-- | Create a value of <a>CreateGroupResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:group':CreateGroupResponse'</a>,
--   <a>createGroupResponse_group</a> - The group object for the group.
--   
--   <a>$sel:httpStatus:CreateGroupResponse'</a>,
--   <a>createGroupResponse_httpStatus</a> - The response's http status
--   code.
newCreateGroupResponse :: Int -> CreateGroupResponse

-- | The group object for the group.
createGroupResponse_group :: Lens' CreateGroupResponse (Maybe GroupType)

-- | The response's http status code.
createGroupResponse_httpStatus :: Lens' CreateGroupResponse Int
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.CreateGroup.CreateGroup
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.CreateGroup.CreateGroup
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.CreateGroup.CreateGroup
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.CreateGroup.CreateGroup
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.CreateGroup.CreateGroupResponse
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.CreateGroup.CreateGroupResponse
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.CreateGroup.CreateGroupResponse
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.CreateGroup.CreateGroupResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CognitoIdentityProvider.CreateGroup.CreateGroup
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.CreateGroup.CreateGroupResponse
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.CreateGroup.CreateGroup
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.CreateGroup.CreateGroup
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CognitoIdentityProvider.CreateGroup.CreateGroup
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.CreateGroup.CreateGroup
instance Network.AWS.Data.Path.ToPath Network.AWS.CognitoIdentityProvider.CreateGroup.CreateGroup
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentityProvider.CreateGroup.CreateGroup


-- | Confirms registration of a user and handles the existing alias from a
--   previous user.
module Network.AWS.CognitoIdentityProvider.ConfirmSignUp

-- | Represents the request to confirm registration of a user.
--   
--   <i>See:</i> <a>newConfirmSignUp</a> smart constructor.
data ConfirmSignUp
ConfirmSignUp' :: Maybe (HashMap Text Text) -> Maybe Bool -> Maybe AnalyticsMetadataType -> Maybe UserContextDataType -> Maybe (Sensitive Text) -> Sensitive Text -> Sensitive Text -> Text -> ConfirmSignUp

-- | A map of custom key-value pairs that you can provide as input for any
--   custom workflows that this action triggers.
--   
--   You create custom workflows by assigning Lambda functions to user pool
--   triggers. When you use the ConfirmSignUp API action, Amazon Cognito
--   invokes the function that is assigned to the <i>post confirmation</i>
--   trigger. When Amazon Cognito invokes this function, it passes a JSON
--   payload, which the function receives as input. This payload contains a
--   <tt>clientMetadata</tt> attribute, which provides the data that you
--   assigned to the ClientMetadata parameter in your ConfirmSignUp
--   request. In your function code in Lambda, you can process the
--   <tt>clientMetadata</tt> value to enhance your workflow for your
--   specific needs.
--   
--   For more information, see <a>Customizing User Pool Workflows with
--   Lambda Triggers</a> in the <i>Amazon Cognito Developer Guide</i>.
--   
--   Take the following limitations into consideration when you use the
--   ClientMetadata parameter:
--   
--   <ul>
--   <li>Amazon Cognito does not store the ClientMetadata value. This data
--   is available only to Lambda triggers that are assigned to a user pool
--   to support custom workflows. If your user pool configuration does not
--   include triggers, the ClientMetadata parameter serves no purpose.</li>
--   <li>Amazon Cognito does not validate the ClientMetadata value.</li>
--   <li>Amazon Cognito does not encrypt the the ClientMetadata value, so
--   don't use it to provide sensitive information.</li>
--   </ul>
[$sel:clientMetadata:ConfirmSignUp'] :: ConfirmSignUp -> Maybe (HashMap Text Text)

-- | Boolean to be specified to force user confirmation irrespective of
--   existing alias. By default set to <tt>False</tt>. If this parameter is
--   set to <tt>True</tt> and the phone number/email used for sign up
--   confirmation already exists as an alias with a different user, the API
--   call will migrate the alias from the previous user to the newly
--   created user being confirmed. If set to <tt>False</tt>, the API will
--   throw an <b>AliasExistsException</b> error.
[$sel:forceAliasCreation:ConfirmSignUp'] :: ConfirmSignUp -> Maybe Bool

-- | The Amazon Pinpoint analytics metadata for collecting metrics for
--   <tt>ConfirmSignUp</tt> calls.
[$sel:analyticsMetadata:ConfirmSignUp'] :: ConfirmSignUp -> Maybe AnalyticsMetadataType

-- | Contextual data such as the user's device fingerprint, IP address, or
--   location used for evaluating the risk of an unexpected event by Amazon
--   Cognito advanced security.
[$sel:userContextData:ConfirmSignUp'] :: ConfirmSignUp -> Maybe UserContextDataType

-- | A keyed-hash message authentication code (HMAC) calculated using the
--   secret key of a user pool client and username plus the client ID in
--   the message.
[$sel:secretHash:ConfirmSignUp'] :: ConfirmSignUp -> Maybe (Sensitive Text)

-- | The ID of the app client associated with the user pool.
[$sel:clientId:ConfirmSignUp'] :: ConfirmSignUp -> Sensitive Text

-- | The user name of the user whose registration you wish to confirm.
[$sel:username:ConfirmSignUp'] :: ConfirmSignUp -> Sensitive Text

-- | The confirmation code sent by a user's request to confirm
--   registration.
[$sel:confirmationCode:ConfirmSignUp'] :: ConfirmSignUp -> Text

-- | Create a value of <a>ConfirmSignUp</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientMetadata:ConfirmSignUp'</a>,
--   <a>confirmSignUp_clientMetadata</a> - A map of custom key-value pairs
--   that you can provide as input for any custom workflows that this
--   action triggers.
--   
--   You create custom workflows by assigning Lambda functions to user pool
--   triggers. When you use the ConfirmSignUp API action, Amazon Cognito
--   invokes the function that is assigned to the <i>post confirmation</i>
--   trigger. When Amazon Cognito invokes this function, it passes a JSON
--   payload, which the function receives as input. This payload contains a
--   <tt>clientMetadata</tt> attribute, which provides the data that you
--   assigned to the ClientMetadata parameter in your ConfirmSignUp
--   request. In your function code in Lambda, you can process the
--   <tt>clientMetadata</tt> value to enhance your workflow for your
--   specific needs.
--   
--   For more information, see <a>Customizing User Pool Workflows with
--   Lambda Triggers</a> in the <i>Amazon Cognito Developer Guide</i>.
--   
--   Take the following limitations into consideration when you use the
--   ClientMetadata parameter:
--   
--   <ul>
--   <li>Amazon Cognito does not store the ClientMetadata value. This data
--   is available only to Lambda triggers that are assigned to a user pool
--   to support custom workflows. If your user pool configuration does not
--   include triggers, the ClientMetadata parameter serves no purpose.</li>
--   <li>Amazon Cognito does not validate the ClientMetadata value.</li>
--   <li>Amazon Cognito does not encrypt the the ClientMetadata value, so
--   don't use it to provide sensitive information.</li>
--   </ul>
--   
--   <a>$sel:forceAliasCreation:ConfirmSignUp'</a>,
--   <a>confirmSignUp_forceAliasCreation</a> - Boolean to be specified to
--   force user confirmation irrespective of existing alias. By default set
--   to <tt>False</tt>. If this parameter is set to <tt>True</tt> and the
--   phone number/email used for sign up confirmation already exists as an
--   alias with a different user, the API call will migrate the alias from
--   the previous user to the newly created user being confirmed. If set to
--   <tt>False</tt>, the API will throw an <b>AliasExistsException</b>
--   error.
--   
--   <a>$sel:analyticsMetadata:ConfirmSignUp'</a>,
--   <a>confirmSignUp_analyticsMetadata</a> - The Amazon Pinpoint analytics
--   metadata for collecting metrics for <tt>ConfirmSignUp</tt> calls.
--   
--   <a>$sel:userContextData:ConfirmSignUp'</a>,
--   <a>confirmSignUp_userContextData</a> - Contextual data such as the
--   user's device fingerprint, IP address, or location used for evaluating
--   the risk of an unexpected event by Amazon Cognito advanced security.
--   
--   <a>$sel:secretHash:ConfirmSignUp'</a>, <a>confirmSignUp_secretHash</a>
--   - A keyed-hash message authentication code (HMAC) calculated using the
--   secret key of a user pool client and username plus the client ID in
--   the message.
--   
--   <a>$sel:clientId:ConfirmSignUp'</a>, <a>confirmSignUp_clientId</a> -
--   The ID of the app client associated with the user pool.
--   
--   <a>$sel:username:ConfirmSignUp'</a>, <a>confirmSignUp_username</a> -
--   The user name of the user whose registration you wish to confirm.
--   
--   <a>$sel:confirmationCode:ConfirmSignUp'</a>,
--   <a>confirmSignUp_confirmationCode</a> - The confirmation code sent by
--   a user's request to confirm registration.
newConfirmSignUp :: Text -> Text -> Text -> ConfirmSignUp

-- | A map of custom key-value pairs that you can provide as input for any
--   custom workflows that this action triggers.
--   
--   You create custom workflows by assigning Lambda functions to user pool
--   triggers. When you use the ConfirmSignUp API action, Amazon Cognito
--   invokes the function that is assigned to the <i>post confirmation</i>
--   trigger. When Amazon Cognito invokes this function, it passes a JSON
--   payload, which the function receives as input. This payload contains a
--   <tt>clientMetadata</tt> attribute, which provides the data that you
--   assigned to the ClientMetadata parameter in your ConfirmSignUp
--   request. In your function code in Lambda, you can process the
--   <tt>clientMetadata</tt> value to enhance your workflow for your
--   specific needs.
--   
--   For more information, see <a>Customizing User Pool Workflows with
--   Lambda Triggers</a> in the <i>Amazon Cognito Developer Guide</i>.
--   
--   Take the following limitations into consideration when you use the
--   ClientMetadata parameter:
--   
--   <ul>
--   <li>Amazon Cognito does not store the ClientMetadata value. This data
--   is available only to Lambda triggers that are assigned to a user pool
--   to support custom workflows. If your user pool configuration does not
--   include triggers, the ClientMetadata parameter serves no purpose.</li>
--   <li>Amazon Cognito does not validate the ClientMetadata value.</li>
--   <li>Amazon Cognito does not encrypt the the ClientMetadata value, so
--   don't use it to provide sensitive information.</li>
--   </ul>
confirmSignUp_clientMetadata :: Lens' ConfirmSignUp (Maybe (HashMap Text Text))

-- | Boolean to be specified to force user confirmation irrespective of
--   existing alias. By default set to <tt>False</tt>. If this parameter is
--   set to <tt>True</tt> and the phone number/email used for sign up
--   confirmation already exists as an alias with a different user, the API
--   call will migrate the alias from the previous user to the newly
--   created user being confirmed. If set to <tt>False</tt>, the API will
--   throw an <b>AliasExistsException</b> error.
confirmSignUp_forceAliasCreation :: Lens' ConfirmSignUp (Maybe Bool)

-- | The Amazon Pinpoint analytics metadata for collecting metrics for
--   <tt>ConfirmSignUp</tt> calls.
confirmSignUp_analyticsMetadata :: Lens' ConfirmSignUp (Maybe AnalyticsMetadataType)

-- | Contextual data such as the user's device fingerprint, IP address, or
--   location used for evaluating the risk of an unexpected event by Amazon
--   Cognito advanced security.
confirmSignUp_userContextData :: Lens' ConfirmSignUp (Maybe UserContextDataType)

-- | A keyed-hash message authentication code (HMAC) calculated using the
--   secret key of a user pool client and username plus the client ID in
--   the message.
confirmSignUp_secretHash :: Lens' ConfirmSignUp (Maybe Text)

-- | The ID of the app client associated with the user pool.
confirmSignUp_clientId :: Lens' ConfirmSignUp Text

-- | The user name of the user whose registration you wish to confirm.
confirmSignUp_username :: Lens' ConfirmSignUp Text

-- | The confirmation code sent by a user's request to confirm
--   registration.
confirmSignUp_confirmationCode :: Lens' ConfirmSignUp Text

-- | Represents the response from the server for the registration
--   confirmation.
--   
--   <i>See:</i> <a>newConfirmSignUpResponse</a> smart constructor.
data ConfirmSignUpResponse
ConfirmSignUpResponse' :: Int -> ConfirmSignUpResponse

-- | The response's http status code.
[$sel:httpStatus:ConfirmSignUpResponse'] :: ConfirmSignUpResponse -> Int

-- | Create a value of <a>ConfirmSignUpResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:ConfirmSignUpResponse'</a>,
--   <a>confirmSignUpResponse_httpStatus</a> - The response's http status
--   code.
newConfirmSignUpResponse :: Int -> ConfirmSignUpResponse

-- | The response's http status code.
confirmSignUpResponse_httpStatus :: Lens' ConfirmSignUpResponse Int
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.ConfirmSignUp.ConfirmSignUp
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.ConfirmSignUp.ConfirmSignUp
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.ConfirmSignUp.ConfirmSignUp
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.ConfirmSignUp.ConfirmSignUpResponse
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.ConfirmSignUp.ConfirmSignUpResponse
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.ConfirmSignUp.ConfirmSignUpResponse
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.ConfirmSignUp.ConfirmSignUpResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CognitoIdentityProvider.ConfirmSignUp.ConfirmSignUp
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.ConfirmSignUp.ConfirmSignUpResponse
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.ConfirmSignUp.ConfirmSignUp
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.ConfirmSignUp.ConfirmSignUp
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CognitoIdentityProvider.ConfirmSignUp.ConfirmSignUp
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.ConfirmSignUp.ConfirmSignUp
instance Network.AWS.Data.Path.ToPath Network.AWS.CognitoIdentityProvider.ConfirmSignUp.ConfirmSignUp
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentityProvider.ConfirmSignUp.ConfirmSignUp


-- | Allows a user to enter a confirmation code to reset a forgotten
--   password.
module Network.AWS.CognitoIdentityProvider.ConfirmForgotPassword

-- | The request representing the confirmation for a password reset.
--   
--   <i>See:</i> <a>newConfirmForgotPassword</a> smart constructor.
data ConfirmForgotPassword
ConfirmForgotPassword' :: Maybe (HashMap Text Text) -> Maybe AnalyticsMetadataType -> Maybe UserContextDataType -> Maybe (Sensitive Text) -> Sensitive Text -> Sensitive Text -> Text -> Sensitive Text -> ConfirmForgotPassword

-- | A map of custom key-value pairs that you can provide as input for any
--   custom workflows that this action triggers.
--   
--   You create custom workflows by assigning Lambda functions to user pool
--   triggers. When you use the ConfirmForgotPassword API action, Amazon
--   Cognito invokes the function that is assigned to the <i>post
--   confirmation</i> trigger. When Amazon Cognito invokes this function,
--   it passes a JSON payload, which the function receives as input. This
--   payload contains a <tt>clientMetadata</tt> attribute, which provides
--   the data that you assigned to the ClientMetadata parameter in your
--   ConfirmForgotPassword request. In your function code in Lambda, you
--   can process the <tt>clientMetadata</tt> value to enhance your workflow
--   for your specific needs.
--   
--   For more information, see <a>Customizing User Pool Workflows with
--   Lambda Triggers</a> in the <i>Amazon Cognito Developer Guide</i>.
--   
--   Take the following limitations into consideration when you use the
--   ClientMetadata parameter:
--   
--   <ul>
--   <li>Amazon Cognito does not store the ClientMetadata value. This data
--   is available only to Lambda triggers that are assigned to a user pool
--   to support custom workflows. If your user pool configuration does not
--   include triggers, the ClientMetadata parameter serves no purpose.</li>
--   <li>Amazon Cognito does not validate the ClientMetadata value.</li>
--   <li>Amazon Cognito does not encrypt the the ClientMetadata value, so
--   don't use it to provide sensitive information.</li>
--   </ul>
[$sel:clientMetadata:ConfirmForgotPassword'] :: ConfirmForgotPassword -> Maybe (HashMap Text Text)

-- | The Amazon Pinpoint analytics metadata for collecting metrics for
--   <tt>ConfirmForgotPassword</tt> calls.
[$sel:analyticsMetadata:ConfirmForgotPassword'] :: ConfirmForgotPassword -> Maybe AnalyticsMetadataType

-- | Contextual data such as the user's device fingerprint, IP address, or
--   location used for evaluating the risk of an unexpected event by Amazon
--   Cognito advanced security.
[$sel:userContextData:ConfirmForgotPassword'] :: ConfirmForgotPassword -> Maybe UserContextDataType

-- | A keyed-hash message authentication code (HMAC) calculated using the
--   secret key of a user pool client and username plus the client ID in
--   the message.
[$sel:secretHash:ConfirmForgotPassword'] :: ConfirmForgotPassword -> Maybe (Sensitive Text)

-- | The app client ID of the app associated with the user pool.
[$sel:clientId:ConfirmForgotPassword'] :: ConfirmForgotPassword -> Sensitive Text

-- | The user name of the user for whom you want to enter a code to
--   retrieve a forgotten password.
[$sel:username:ConfirmForgotPassword'] :: ConfirmForgotPassword -> Sensitive Text

-- | The confirmation code sent by a user's request to retrieve a forgotten
--   password. For more information, see <a>ForgotPassword</a>.
[$sel:confirmationCode:ConfirmForgotPassword'] :: ConfirmForgotPassword -> Text

-- | The password sent by a user's request to retrieve a forgotten
--   password.
[$sel:password:ConfirmForgotPassword'] :: ConfirmForgotPassword -> Sensitive Text

-- | Create a value of <a>ConfirmForgotPassword</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientMetadata:ConfirmForgotPassword'</a>,
--   <a>confirmForgotPassword_clientMetadata</a> - A map of custom
--   key-value pairs that you can provide as input for any custom workflows
--   that this action triggers.
--   
--   You create custom workflows by assigning Lambda functions to user pool
--   triggers. When you use the ConfirmForgotPassword API action, Amazon
--   Cognito invokes the function that is assigned to the <i>post
--   confirmation</i> trigger. When Amazon Cognito invokes this function,
--   it passes a JSON payload, which the function receives as input. This
--   payload contains a <tt>clientMetadata</tt> attribute, which provides
--   the data that you assigned to the ClientMetadata parameter in your
--   ConfirmForgotPassword request. In your function code in Lambda, you
--   can process the <tt>clientMetadata</tt> value to enhance your workflow
--   for your specific needs.
--   
--   For more information, see <a>Customizing User Pool Workflows with
--   Lambda Triggers</a> in the <i>Amazon Cognito Developer Guide</i>.
--   
--   Take the following limitations into consideration when you use the
--   ClientMetadata parameter:
--   
--   <ul>
--   <li>Amazon Cognito does not store the ClientMetadata value. This data
--   is available only to Lambda triggers that are assigned to a user pool
--   to support custom workflows. If your user pool configuration does not
--   include triggers, the ClientMetadata parameter serves no purpose.</li>
--   <li>Amazon Cognito does not validate the ClientMetadata value.</li>
--   <li>Amazon Cognito does not encrypt the the ClientMetadata value, so
--   don't use it to provide sensitive information.</li>
--   </ul>
--   
--   <a>$sel:analyticsMetadata:ConfirmForgotPassword'</a>,
--   <a>confirmForgotPassword_analyticsMetadata</a> - The Amazon Pinpoint
--   analytics metadata for collecting metrics for
--   <tt>ConfirmForgotPassword</tt> calls.
--   
--   <a>$sel:userContextData:ConfirmForgotPassword'</a>,
--   <a>confirmForgotPassword_userContextData</a> - Contextual data such as
--   the user's device fingerprint, IP address, or location used for
--   evaluating the risk of an unexpected event by Amazon Cognito advanced
--   security.
--   
--   <a>$sel:secretHash:ConfirmForgotPassword'</a>,
--   <a>confirmForgotPassword_secretHash</a> - A keyed-hash message
--   authentication code (HMAC) calculated using the secret key of a user
--   pool client and username plus the client ID in the message.
--   
--   <a>$sel:clientId:ConfirmForgotPassword'</a>,
--   <a>confirmForgotPassword_clientId</a> - The app client ID of the app
--   associated with the user pool.
--   
--   <a>$sel:username:ConfirmForgotPassword'</a>,
--   <a>confirmForgotPassword_username</a> - The user name of the user for
--   whom you want to enter a code to retrieve a forgotten password.
--   
--   <a>$sel:confirmationCode:ConfirmForgotPassword'</a>,
--   <a>confirmForgotPassword_confirmationCode</a> - The confirmation code
--   sent by a user's request to retrieve a forgotten password. For more
--   information, see <a>ForgotPassword</a>.
--   
--   <a>$sel:password:ConfirmForgotPassword'</a>,
--   <a>confirmForgotPassword_password</a> - The password sent by a user's
--   request to retrieve a forgotten password.
newConfirmForgotPassword :: Text -> Text -> Text -> Text -> ConfirmForgotPassword

-- | A map of custom key-value pairs that you can provide as input for any
--   custom workflows that this action triggers.
--   
--   You create custom workflows by assigning Lambda functions to user pool
--   triggers. When you use the ConfirmForgotPassword API action, Amazon
--   Cognito invokes the function that is assigned to the <i>post
--   confirmation</i> trigger. When Amazon Cognito invokes this function,
--   it passes a JSON payload, which the function receives as input. This
--   payload contains a <tt>clientMetadata</tt> attribute, which provides
--   the data that you assigned to the ClientMetadata parameter in your
--   ConfirmForgotPassword request. In your function code in Lambda, you
--   can process the <tt>clientMetadata</tt> value to enhance your workflow
--   for your specific needs.
--   
--   For more information, see <a>Customizing User Pool Workflows with
--   Lambda Triggers</a> in the <i>Amazon Cognito Developer Guide</i>.
--   
--   Take the following limitations into consideration when you use the
--   ClientMetadata parameter:
--   
--   <ul>
--   <li>Amazon Cognito does not store the ClientMetadata value. This data
--   is available only to Lambda triggers that are assigned to a user pool
--   to support custom workflows. If your user pool configuration does not
--   include triggers, the ClientMetadata parameter serves no purpose.</li>
--   <li>Amazon Cognito does not validate the ClientMetadata value.</li>
--   <li>Amazon Cognito does not encrypt the the ClientMetadata value, so
--   don't use it to provide sensitive information.</li>
--   </ul>
confirmForgotPassword_clientMetadata :: Lens' ConfirmForgotPassword (Maybe (HashMap Text Text))

-- | The Amazon Pinpoint analytics metadata for collecting metrics for
--   <tt>ConfirmForgotPassword</tt> calls.
confirmForgotPassword_analyticsMetadata :: Lens' ConfirmForgotPassword (Maybe AnalyticsMetadataType)

-- | Contextual data such as the user's device fingerprint, IP address, or
--   location used for evaluating the risk of an unexpected event by Amazon
--   Cognito advanced security.
confirmForgotPassword_userContextData :: Lens' ConfirmForgotPassword (Maybe UserContextDataType)

-- | A keyed-hash message authentication code (HMAC) calculated using the
--   secret key of a user pool client and username plus the client ID in
--   the message.
confirmForgotPassword_secretHash :: Lens' ConfirmForgotPassword (Maybe Text)

-- | The app client ID of the app associated with the user pool.
confirmForgotPassword_clientId :: Lens' ConfirmForgotPassword Text

-- | The user name of the user for whom you want to enter a code to
--   retrieve a forgotten password.
confirmForgotPassword_username :: Lens' ConfirmForgotPassword Text

-- | The confirmation code sent by a user's request to retrieve a forgotten
--   password. For more information, see <a>ForgotPassword</a>.
confirmForgotPassword_confirmationCode :: Lens' ConfirmForgotPassword Text

-- | The password sent by a user's request to retrieve a forgotten
--   password.
confirmForgotPassword_password :: Lens' ConfirmForgotPassword Text

-- | The response from the server that results from a user's request to
--   retrieve a forgotten password.
--   
--   <i>See:</i> <a>newConfirmForgotPasswordResponse</a> smart constructor.
data ConfirmForgotPasswordResponse
ConfirmForgotPasswordResponse' :: Int -> ConfirmForgotPasswordResponse

-- | The response's http status code.
[$sel:httpStatus:ConfirmForgotPasswordResponse'] :: ConfirmForgotPasswordResponse -> Int

-- | Create a value of <a>ConfirmForgotPasswordResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:ConfirmForgotPasswordResponse'</a>,
--   <a>confirmForgotPasswordResponse_httpStatus</a> - The response's http
--   status code.
newConfirmForgotPasswordResponse :: Int -> ConfirmForgotPasswordResponse

-- | The response's http status code.
confirmForgotPasswordResponse_httpStatus :: Lens' ConfirmForgotPasswordResponse Int
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.ConfirmForgotPassword.ConfirmForgotPassword
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.ConfirmForgotPassword.ConfirmForgotPassword
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.ConfirmForgotPassword.ConfirmForgotPassword
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.ConfirmForgotPassword.ConfirmForgotPasswordResponse
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.ConfirmForgotPassword.ConfirmForgotPasswordResponse
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.ConfirmForgotPassword.ConfirmForgotPasswordResponse
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.ConfirmForgotPassword.ConfirmForgotPasswordResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CognitoIdentityProvider.ConfirmForgotPassword.ConfirmForgotPassword
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.ConfirmForgotPassword.ConfirmForgotPasswordResponse
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.ConfirmForgotPassword.ConfirmForgotPassword
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.ConfirmForgotPassword.ConfirmForgotPassword
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CognitoIdentityProvider.ConfirmForgotPassword.ConfirmForgotPassword
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.ConfirmForgotPassword.ConfirmForgotPassword
instance Network.AWS.Data.Path.ToPath Network.AWS.CognitoIdentityProvider.ConfirmForgotPassword.ConfirmForgotPassword
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentityProvider.ConfirmForgotPassword.ConfirmForgotPassword


-- | Confirms tracking of the device. This API call is the call that begins
--   device tracking.
module Network.AWS.CognitoIdentityProvider.ConfirmDevice

-- | Confirms the device request.
--   
--   <i>See:</i> <a>newConfirmDevice</a> smart constructor.
data ConfirmDevice
ConfirmDevice' :: Maybe DeviceSecretVerifierConfigType -> Maybe Text -> Sensitive Text -> Text -> ConfirmDevice

-- | The configuration of the device secret verifier.
[$sel:deviceSecretVerifierConfig:ConfirmDevice'] :: ConfirmDevice -> Maybe DeviceSecretVerifierConfigType

-- | The device name.
[$sel:deviceName:ConfirmDevice'] :: ConfirmDevice -> Maybe Text

-- | The access token.
[$sel:accessToken:ConfirmDevice'] :: ConfirmDevice -> Sensitive Text

-- | The device key.
[$sel:deviceKey:ConfirmDevice'] :: ConfirmDevice -> Text

-- | Create a value of <a>ConfirmDevice</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deviceSecretVerifierConfig:ConfirmDevice'</a>,
--   <a>confirmDevice_deviceSecretVerifierConfig</a> - The configuration of
--   the device secret verifier.
--   
--   <a>$sel:deviceName:ConfirmDevice'</a>, <a>confirmDevice_deviceName</a>
--   - The device name.
--   
--   <a>$sel:accessToken:ConfirmDevice'</a>,
--   <a>confirmDevice_accessToken</a> - The access token.
--   
--   <a>$sel:deviceKey:ConfirmDevice'</a>, <a>confirmDevice_deviceKey</a> -
--   The device key.
newConfirmDevice :: Text -> Text -> ConfirmDevice

-- | The configuration of the device secret verifier.
confirmDevice_deviceSecretVerifierConfig :: Lens' ConfirmDevice (Maybe DeviceSecretVerifierConfigType)

-- | The device name.
confirmDevice_deviceName :: Lens' ConfirmDevice (Maybe Text)

-- | The access token.
confirmDevice_accessToken :: Lens' ConfirmDevice Text

-- | The device key.
confirmDevice_deviceKey :: Lens' ConfirmDevice Text

-- | Confirms the device response.
--   
--   <i>See:</i> <a>newConfirmDeviceResponse</a> smart constructor.
data ConfirmDeviceResponse
ConfirmDeviceResponse' :: Maybe Bool -> Int -> ConfirmDeviceResponse

-- | Indicates whether the user confirmation is necessary to confirm the
--   device response.
[$sel:userConfirmationNecessary:ConfirmDeviceResponse'] :: ConfirmDeviceResponse -> Maybe Bool

-- | The response's http status code.
[$sel:httpStatus:ConfirmDeviceResponse'] :: ConfirmDeviceResponse -> Int

-- | Create a value of <a>ConfirmDeviceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userConfirmationNecessary:ConfirmDeviceResponse'</a>,
--   <a>confirmDeviceResponse_userConfirmationNecessary</a> - Indicates
--   whether the user confirmation is necessary to confirm the device
--   response.
--   
--   <a>$sel:httpStatus:ConfirmDeviceResponse'</a>,
--   <a>confirmDeviceResponse_httpStatus</a> - The response's http status
--   code.
newConfirmDeviceResponse :: Int -> ConfirmDeviceResponse

-- | Indicates whether the user confirmation is necessary to confirm the
--   device response.
confirmDeviceResponse_userConfirmationNecessary :: Lens' ConfirmDeviceResponse (Maybe Bool)

-- | The response's http status code.
confirmDeviceResponse_httpStatus :: Lens' ConfirmDeviceResponse Int
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.ConfirmDevice.ConfirmDevice
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.ConfirmDevice.ConfirmDevice
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.ConfirmDevice.ConfirmDevice
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.ConfirmDevice.ConfirmDeviceResponse
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.ConfirmDevice.ConfirmDeviceResponse
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.ConfirmDevice.ConfirmDeviceResponse
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.ConfirmDevice.ConfirmDeviceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CognitoIdentityProvider.ConfirmDevice.ConfirmDevice
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.ConfirmDevice.ConfirmDeviceResponse
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.ConfirmDevice.ConfirmDevice
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.ConfirmDevice.ConfirmDevice
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CognitoIdentityProvider.ConfirmDevice.ConfirmDevice
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.ConfirmDevice.ConfirmDevice
instance Network.AWS.Data.Path.ToPath Network.AWS.CognitoIdentityProvider.ConfirmDevice.ConfirmDevice
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentityProvider.ConfirmDevice.ConfirmDevice


-- | Changes the password for a specified user in a user pool.
module Network.AWS.CognitoIdentityProvider.ChangePassword

-- | Represents the request to change a user password.
--   
--   <i>See:</i> <a>newChangePassword</a> smart constructor.
data ChangePassword
ChangePassword' :: Sensitive Text -> Sensitive Text -> Sensitive Text -> ChangePassword

-- | The old password.
[$sel:previousPassword:ChangePassword'] :: ChangePassword -> Sensitive Text

-- | The new password.
[$sel:proposedPassword:ChangePassword'] :: ChangePassword -> Sensitive Text

-- | The access token.
[$sel:accessToken:ChangePassword'] :: ChangePassword -> Sensitive Text

-- | Create a value of <a>ChangePassword</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:previousPassword:ChangePassword'</a>,
--   <a>changePassword_previousPassword</a> - The old password.
--   
--   <a>$sel:proposedPassword:ChangePassword'</a>,
--   <a>changePassword_proposedPassword</a> - The new password.
--   
--   <a>$sel:accessToken:ChangePassword'</a>,
--   <a>changePassword_accessToken</a> - The access token.
newChangePassword :: Text -> Text -> Text -> ChangePassword

-- | The old password.
changePassword_previousPassword :: Lens' ChangePassword Text

-- | The new password.
changePassword_proposedPassword :: Lens' ChangePassword Text

-- | The access token.
changePassword_accessToken :: Lens' ChangePassword Text

-- | The response from the server to the change password request.
--   
--   <i>See:</i> <a>newChangePasswordResponse</a> smart constructor.
data ChangePasswordResponse
ChangePasswordResponse' :: Int -> ChangePasswordResponse

-- | The response's http status code.
[$sel:httpStatus:ChangePasswordResponse'] :: ChangePasswordResponse -> Int

-- | Create a value of <a>ChangePasswordResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:ChangePasswordResponse'</a>,
--   <a>changePasswordResponse_httpStatus</a> - The response's http status
--   code.
newChangePasswordResponse :: Int -> ChangePasswordResponse

-- | The response's http status code.
changePasswordResponse_httpStatus :: Lens' ChangePasswordResponse Int
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.ChangePassword.ChangePassword
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.ChangePassword.ChangePassword
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.ChangePassword.ChangePassword
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.ChangePassword.ChangePasswordResponse
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.ChangePassword.ChangePasswordResponse
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.ChangePassword.ChangePasswordResponse
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.ChangePassword.ChangePasswordResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CognitoIdentityProvider.ChangePassword.ChangePassword
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.ChangePassword.ChangePasswordResponse
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.ChangePassword.ChangePassword
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.ChangePassword.ChangePassword
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CognitoIdentityProvider.ChangePassword.ChangePassword
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.ChangePassword.ChangePassword
instance Network.AWS.Data.Path.ToPath Network.AWS.CognitoIdentityProvider.ChangePassword.ChangePassword
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentityProvider.ChangePassword.ChangePassword


-- | Returns a unique generated shared secret key code for the user
--   account. The request takes an access token or a session string, but
--   not both.
--   
--   Calling AssociateSoftwareToken immediately disassociates the existing
--   software token from the user account. If the user doesn't subsequently
--   verify the software token, their account is essentially set up to
--   authenticate without MFA. If MFA config is set to Optional at the user
--   pool level, the user can then login without MFA. However, if MFA is
--   set to Required for the user pool, the user will be asked to setup a
--   new software token MFA during sign in.
module Network.AWS.CognitoIdentityProvider.AssociateSoftwareToken

-- | <i>See:</i> <a>newAssociateSoftwareToken</a> smart constructor.
data AssociateSoftwareToken
AssociateSoftwareToken' :: Maybe (Sensitive Text) -> Maybe Text -> AssociateSoftwareToken

-- | The access token.
[$sel:accessToken:AssociateSoftwareToken'] :: AssociateSoftwareToken -> Maybe (Sensitive Text)

-- | The session which should be passed both ways in challenge-response
--   calls to the service. This allows authentication of the user as part
--   of the MFA setup process.
[$sel:session:AssociateSoftwareToken'] :: AssociateSoftwareToken -> Maybe Text

-- | Create a value of <a>AssociateSoftwareToken</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:accessToken:AssociateSoftwareToken'</a>,
--   <a>associateSoftwareToken_accessToken</a> - The access token.
--   
--   <a>$sel:session:AssociateSoftwareToken'</a>,
--   <a>associateSoftwareToken_session</a> - The session which should be
--   passed both ways in challenge-response calls to the service. This
--   allows authentication of the user as part of the MFA setup process.
newAssociateSoftwareToken :: AssociateSoftwareToken

-- | The access token.
associateSoftwareToken_accessToken :: Lens' AssociateSoftwareToken (Maybe Text)

-- | The session which should be passed both ways in challenge-response
--   calls to the service. This allows authentication of the user as part
--   of the MFA setup process.
associateSoftwareToken_session :: Lens' AssociateSoftwareToken (Maybe Text)

-- | <i>See:</i> <a>newAssociateSoftwareTokenResponse</a> smart
--   constructor.
data AssociateSoftwareTokenResponse
AssociateSoftwareTokenResponse' :: Maybe (Sensitive Text) -> Maybe Text -> Int -> AssociateSoftwareTokenResponse

-- | A unique generated shared secret code that is used in the TOTP
--   algorithm to generate a one time code.
[$sel:secretCode:AssociateSoftwareTokenResponse'] :: AssociateSoftwareTokenResponse -> Maybe (Sensitive Text)

-- | The session which should be passed both ways in challenge-response
--   calls to the service. This allows authentication of the user as part
--   of the MFA setup process.
[$sel:session:AssociateSoftwareTokenResponse'] :: AssociateSoftwareTokenResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:AssociateSoftwareTokenResponse'] :: AssociateSoftwareTokenResponse -> Int

-- | Create a value of <a>AssociateSoftwareTokenResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:secretCode:AssociateSoftwareTokenResponse'</a>,
--   <a>associateSoftwareTokenResponse_secretCode</a> - A unique generated
--   shared secret code that is used in the TOTP algorithm to generate a
--   one time code.
--   
--   <a>$sel:session:AssociateSoftwareToken'</a>,
--   <a>associateSoftwareTokenResponse_session</a> - The session which
--   should be passed both ways in challenge-response calls to the service.
--   This allows authentication of the user as part of the MFA setup
--   process.
--   
--   <a>$sel:httpStatus:AssociateSoftwareTokenResponse'</a>,
--   <a>associateSoftwareTokenResponse_httpStatus</a> - The response's http
--   status code.
newAssociateSoftwareTokenResponse :: Int -> AssociateSoftwareTokenResponse

-- | A unique generated shared secret code that is used in the TOTP
--   algorithm to generate a one time code.
associateSoftwareTokenResponse_secretCode :: Lens' AssociateSoftwareTokenResponse (Maybe Text)

-- | The session which should be passed both ways in challenge-response
--   calls to the service. This allows authentication of the user as part
--   of the MFA setup process.
associateSoftwareTokenResponse_session :: Lens' AssociateSoftwareTokenResponse (Maybe Text)

-- | The response's http status code.
associateSoftwareTokenResponse_httpStatus :: Lens' AssociateSoftwareTokenResponse Int
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.AssociateSoftwareToken.AssociateSoftwareToken
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.AssociateSoftwareToken.AssociateSoftwareToken
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.AssociateSoftwareToken.AssociateSoftwareToken
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.AssociateSoftwareToken.AssociateSoftwareTokenResponse
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.AssociateSoftwareToken.AssociateSoftwareTokenResponse
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.AssociateSoftwareToken.AssociateSoftwareTokenResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CognitoIdentityProvider.AssociateSoftwareToken.AssociateSoftwareToken
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.AssociateSoftwareToken.AssociateSoftwareTokenResponse
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.AssociateSoftwareToken.AssociateSoftwareToken
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.AssociateSoftwareToken.AssociateSoftwareToken
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CognitoIdentityProvider.AssociateSoftwareToken.AssociateSoftwareToken
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.AssociateSoftwareToken.AssociateSoftwareToken
instance Network.AWS.Data.Path.ToPath Network.AWS.CognitoIdentityProvider.AssociateSoftwareToken.AssociateSoftwareToken
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentityProvider.AssociateSoftwareToken.AssociateSoftwareToken


-- | Signs out users from all devices, as an administrator. It also
--   invalidates all refresh tokens issued to a user. The user's current
--   access and Id tokens remain valid until their expiry. Access and Id
--   tokens expire one hour after they are issued.
--   
--   Calling this action requires developer credentials.
module Network.AWS.CognitoIdentityProvider.AdminUserGlobalSignOut

-- | The request to sign out of all devices, as an administrator.
--   
--   <i>See:</i> <a>newAdminUserGlobalSignOut</a> smart constructor.
data AdminUserGlobalSignOut
AdminUserGlobalSignOut' :: Text -> Sensitive Text -> AdminUserGlobalSignOut

-- | The user pool ID.
[$sel:userPoolId:AdminUserGlobalSignOut'] :: AdminUserGlobalSignOut -> Text

-- | The user name.
[$sel:username:AdminUserGlobalSignOut'] :: AdminUserGlobalSignOut -> Sensitive Text

-- | Create a value of <a>AdminUserGlobalSignOut</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userPoolId:AdminUserGlobalSignOut'</a>,
--   <a>adminUserGlobalSignOut_userPoolId</a> - The user pool ID.
--   
--   <a>$sel:username:AdminUserGlobalSignOut'</a>,
--   <a>adminUserGlobalSignOut_username</a> - The user name.
newAdminUserGlobalSignOut :: Text -> Text -> AdminUserGlobalSignOut

-- | The user pool ID.
adminUserGlobalSignOut_userPoolId :: Lens' AdminUserGlobalSignOut Text

-- | The user name.
adminUserGlobalSignOut_username :: Lens' AdminUserGlobalSignOut Text

-- | The global sign-out response, as an administrator.
--   
--   <i>See:</i> <a>newAdminUserGlobalSignOutResponse</a> smart
--   constructor.
data AdminUserGlobalSignOutResponse
AdminUserGlobalSignOutResponse' :: Int -> AdminUserGlobalSignOutResponse

-- | The response's http status code.
[$sel:httpStatus:AdminUserGlobalSignOutResponse'] :: AdminUserGlobalSignOutResponse -> Int

-- | Create a value of <a>AdminUserGlobalSignOutResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:AdminUserGlobalSignOutResponse'</a>,
--   <a>adminUserGlobalSignOutResponse_httpStatus</a> - The response's http
--   status code.
newAdminUserGlobalSignOutResponse :: Int -> AdminUserGlobalSignOutResponse

-- | The response's http status code.
adminUserGlobalSignOutResponse_httpStatus :: Lens' AdminUserGlobalSignOutResponse Int
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.AdminUserGlobalSignOut.AdminUserGlobalSignOut
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.AdminUserGlobalSignOut.AdminUserGlobalSignOut
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.AdminUserGlobalSignOut.AdminUserGlobalSignOut
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.AdminUserGlobalSignOut.AdminUserGlobalSignOutResponse
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.AdminUserGlobalSignOut.AdminUserGlobalSignOutResponse
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.AdminUserGlobalSignOut.AdminUserGlobalSignOutResponse
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.AdminUserGlobalSignOut.AdminUserGlobalSignOutResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CognitoIdentityProvider.AdminUserGlobalSignOut.AdminUserGlobalSignOut
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.AdminUserGlobalSignOut.AdminUserGlobalSignOutResponse
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.AdminUserGlobalSignOut.AdminUserGlobalSignOut
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.AdminUserGlobalSignOut.AdminUserGlobalSignOut
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CognitoIdentityProvider.AdminUserGlobalSignOut.AdminUserGlobalSignOut
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.AdminUserGlobalSignOut.AdminUserGlobalSignOut
instance Network.AWS.Data.Path.ToPath Network.AWS.CognitoIdentityProvider.AdminUserGlobalSignOut.AdminUserGlobalSignOut
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentityProvider.AdminUserGlobalSignOut.AdminUserGlobalSignOut


-- | Updates the specified user's attributes, including developer
--   attributes, as an administrator. Works on any user.
--   
--   For custom attributes, you must prepend the <tt>custom:</tt> prefix to
--   the attribute name.
--   
--   In addition to updating user attributes, this API can also be used to
--   mark phone and email as verified.
--   
--   This action might generate an SMS text message. Starting June 1, 2021,
--   U.S. telecom carriers require that you register an origination phone
--   number before you can send SMS messages to U.S. phone numbers. If you
--   use SMS text messages in Amazon Cognito, you must register a phone
--   number with <a>Amazon Pinpoint</a>. Cognito will use the the
--   registered number automatically. Otherwise, Cognito users that must
--   receive SMS messages might be unable to sign up, activate their
--   accounts, or sign in.
--   
--   If you have never used SMS text messages with Amazon Cognito or any
--   other Amazon Web Service, Amazon SNS might place your account in SMS
--   sandbox. In
--   <i>&lt;https:</i><i>docs.aws.amazon.com</i>sns<i>latest</i>dg<i>sns-sms-sandbox.html
--   sandbox mode&gt;</i> , you’ll have limitations, such as sending
--   messages to only verified phone numbers. After testing in the sandbox
--   environment, you can move out of the SMS sandbox and into production.
--   For more information, see <a>SMS message settings for Cognito User
--   Pools</a> in the <i>Amazon Cognito Developer Guide</i>.
--   
--   Calling this action requires developer credentials.
module Network.AWS.CognitoIdentityProvider.AdminUpdateUserAttributes

-- | Represents the request to update the user's attributes as an
--   administrator.
--   
--   <i>See:</i> <a>newAdminUpdateUserAttributes</a> smart constructor.
data AdminUpdateUserAttributes
AdminUpdateUserAttributes' :: Maybe (HashMap Text Text) -> Text -> Sensitive Text -> [AttributeType] -> AdminUpdateUserAttributes

-- | A map of custom key-value pairs that you can provide as input for any
--   custom workflows that this action triggers.
--   
--   You create custom workflows by assigning Lambda functions to user pool
--   triggers. When you use the AdminUpdateUserAttributes API action,
--   Amazon Cognito invokes the function that is assigned to the <i>custom
--   message</i> trigger. When Amazon Cognito invokes this function, it
--   passes a JSON payload, which the function receives as input. This
--   payload contains a <tt>clientMetadata</tt> attribute, which provides
--   the data that you assigned to the ClientMetadata parameter in your
--   AdminUpdateUserAttributes request. In your function code in Lambda,
--   you can process the <tt>clientMetadata</tt> value to enhance your
--   workflow for your specific needs.
--   
--   For more information, see <a>Customizing User Pool Workflows with
--   Lambda Triggers</a> in the <i>Amazon Cognito Developer Guide</i>.
--   
--   Take the following limitations into consideration when you use the
--   ClientMetadata parameter:
--   
--   <ul>
--   <li>Amazon Cognito does not store the ClientMetadata value. This data
--   is available only to Lambda triggers that are assigned to a user pool
--   to support custom workflows. If your user pool configuration does not
--   include triggers, the ClientMetadata parameter serves no purpose.</li>
--   <li>Amazon Cognito does not validate the ClientMetadata value.</li>
--   <li>Amazon Cognito does not encrypt the the ClientMetadata value, so
--   don't use it to provide sensitive information.</li>
--   </ul>
[$sel:clientMetadata:AdminUpdateUserAttributes'] :: AdminUpdateUserAttributes -> Maybe (HashMap Text Text)

-- | The user pool ID for the user pool where you want to update user
--   attributes.
[$sel:userPoolId:AdminUpdateUserAttributes'] :: AdminUpdateUserAttributes -> Text

-- | The user name of the user for whom you want to update user attributes.
[$sel:username:AdminUpdateUserAttributes'] :: AdminUpdateUserAttributes -> Sensitive Text

-- | An array of name-value pairs representing user attributes.
--   
--   For custom attributes, you must prepend the <tt>custom:</tt> prefix to
--   the attribute name.
[$sel:userAttributes:AdminUpdateUserAttributes'] :: AdminUpdateUserAttributes -> [AttributeType]

-- | Create a value of <a>AdminUpdateUserAttributes</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientMetadata:AdminUpdateUserAttributes'</a>,
--   <a>adminUpdateUserAttributes_clientMetadata</a> - A map of custom
--   key-value pairs that you can provide as input for any custom workflows
--   that this action triggers.
--   
--   You create custom workflows by assigning Lambda functions to user pool
--   triggers. When you use the AdminUpdateUserAttributes API action,
--   Amazon Cognito invokes the function that is assigned to the <i>custom
--   message</i> trigger. When Amazon Cognito invokes this function, it
--   passes a JSON payload, which the function receives as input. This
--   payload contains a <tt>clientMetadata</tt> attribute, which provides
--   the data that you assigned to the ClientMetadata parameter in your
--   AdminUpdateUserAttributes request. In your function code in Lambda,
--   you can process the <tt>clientMetadata</tt> value to enhance your
--   workflow for your specific needs.
--   
--   For more information, see <a>Customizing User Pool Workflows with
--   Lambda Triggers</a> in the <i>Amazon Cognito Developer Guide</i>.
--   
--   Take the following limitations into consideration when you use the
--   ClientMetadata parameter:
--   
--   <ul>
--   <li>Amazon Cognito does not store the ClientMetadata value. This data
--   is available only to Lambda triggers that are assigned to a user pool
--   to support custom workflows. If your user pool configuration does not
--   include triggers, the ClientMetadata parameter serves no purpose.</li>
--   <li>Amazon Cognito does not validate the ClientMetadata value.</li>
--   <li>Amazon Cognito does not encrypt the the ClientMetadata value, so
--   don't use it to provide sensitive information.</li>
--   </ul>
--   
--   <a>$sel:userPoolId:AdminUpdateUserAttributes'</a>,
--   <a>adminUpdateUserAttributes_userPoolId</a> - The user pool ID for the
--   user pool where you want to update user attributes.
--   
--   <a>$sel:username:AdminUpdateUserAttributes'</a>,
--   <a>adminUpdateUserAttributes_username</a> - The user name of the user
--   for whom you want to update user attributes.
--   
--   <a>$sel:userAttributes:AdminUpdateUserAttributes'</a>,
--   <a>adminUpdateUserAttributes_userAttributes</a> - An array of
--   name-value pairs representing user attributes.
--   
--   For custom attributes, you must prepend the <tt>custom:</tt> prefix to
--   the attribute name.
newAdminUpdateUserAttributes :: Text -> Text -> AdminUpdateUserAttributes

-- | A map of custom key-value pairs that you can provide as input for any
--   custom workflows that this action triggers.
--   
--   You create custom workflows by assigning Lambda functions to user pool
--   triggers. When you use the AdminUpdateUserAttributes API action,
--   Amazon Cognito invokes the function that is assigned to the <i>custom
--   message</i> trigger. When Amazon Cognito invokes this function, it
--   passes a JSON payload, which the function receives as input. This
--   payload contains a <tt>clientMetadata</tt> attribute, which provides
--   the data that you assigned to the ClientMetadata parameter in your
--   AdminUpdateUserAttributes request. In your function code in Lambda,
--   you can process the <tt>clientMetadata</tt> value to enhance your
--   workflow for your specific needs.
--   
--   For more information, see <a>Customizing User Pool Workflows with
--   Lambda Triggers</a> in the <i>Amazon Cognito Developer Guide</i>.
--   
--   Take the following limitations into consideration when you use the
--   ClientMetadata parameter:
--   
--   <ul>
--   <li>Amazon Cognito does not store the ClientMetadata value. This data
--   is available only to Lambda triggers that are assigned to a user pool
--   to support custom workflows. If your user pool configuration does not
--   include triggers, the ClientMetadata parameter serves no purpose.</li>
--   <li>Amazon Cognito does not validate the ClientMetadata value.</li>
--   <li>Amazon Cognito does not encrypt the the ClientMetadata value, so
--   don't use it to provide sensitive information.</li>
--   </ul>
adminUpdateUserAttributes_clientMetadata :: Lens' AdminUpdateUserAttributes (Maybe (HashMap Text Text))

-- | The user pool ID for the user pool where you want to update user
--   attributes.
adminUpdateUserAttributes_userPoolId :: Lens' AdminUpdateUserAttributes Text

-- | The user name of the user for whom you want to update user attributes.
adminUpdateUserAttributes_username :: Lens' AdminUpdateUserAttributes Text

-- | An array of name-value pairs representing user attributes.
--   
--   For custom attributes, you must prepend the <tt>custom:</tt> prefix to
--   the attribute name.
adminUpdateUserAttributes_userAttributes :: Lens' AdminUpdateUserAttributes [AttributeType]

-- | Represents the response from the server for the request to update user
--   attributes as an administrator.
--   
--   <i>See:</i> <a>newAdminUpdateUserAttributesResponse</a> smart
--   constructor.
data AdminUpdateUserAttributesResponse
AdminUpdateUserAttributesResponse' :: Int -> AdminUpdateUserAttributesResponse

-- | The response's http status code.
[$sel:httpStatus:AdminUpdateUserAttributesResponse'] :: AdminUpdateUserAttributesResponse -> Int

-- | Create a value of <a>AdminUpdateUserAttributesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:AdminUpdateUserAttributesResponse'</a>,
--   <a>adminUpdateUserAttributesResponse_httpStatus</a> - The response's
--   http status code.
newAdminUpdateUserAttributesResponse :: Int -> AdminUpdateUserAttributesResponse

-- | The response's http status code.
adminUpdateUserAttributesResponse_httpStatus :: Lens' AdminUpdateUserAttributesResponse Int
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.AdminUpdateUserAttributes.AdminUpdateUserAttributes
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.AdminUpdateUserAttributes.AdminUpdateUserAttributes
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.AdminUpdateUserAttributes.AdminUpdateUserAttributes
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.AdminUpdateUserAttributes.AdminUpdateUserAttributesResponse
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.AdminUpdateUserAttributes.AdminUpdateUserAttributesResponse
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.AdminUpdateUserAttributes.AdminUpdateUserAttributesResponse
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.AdminUpdateUserAttributes.AdminUpdateUserAttributesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CognitoIdentityProvider.AdminUpdateUserAttributes.AdminUpdateUserAttributes
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.AdminUpdateUserAttributes.AdminUpdateUserAttributesResponse
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.AdminUpdateUserAttributes.AdminUpdateUserAttributes
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.AdminUpdateUserAttributes.AdminUpdateUserAttributes
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CognitoIdentityProvider.AdminUpdateUserAttributes.AdminUpdateUserAttributes
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.AdminUpdateUserAttributes.AdminUpdateUserAttributes
instance Network.AWS.Data.Path.ToPath Network.AWS.CognitoIdentityProvider.AdminUpdateUserAttributes.AdminUpdateUserAttributes
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentityProvider.AdminUpdateUserAttributes.AdminUpdateUserAttributes


-- | Updates the device status as an administrator.
--   
--   Calling this action requires developer credentials.
module Network.AWS.CognitoIdentityProvider.AdminUpdateDeviceStatus

-- | The request to update the device status, as an administrator.
--   
--   <i>See:</i> <a>newAdminUpdateDeviceStatus</a> smart constructor.
data AdminUpdateDeviceStatus
AdminUpdateDeviceStatus' :: Maybe DeviceRememberedStatusType -> Text -> Sensitive Text -> Text -> AdminUpdateDeviceStatus

-- | The status indicating whether a device has been remembered or not.
[$sel:deviceRememberedStatus:AdminUpdateDeviceStatus'] :: AdminUpdateDeviceStatus -> Maybe DeviceRememberedStatusType

-- | The user pool ID.
[$sel:userPoolId:AdminUpdateDeviceStatus'] :: AdminUpdateDeviceStatus -> Text

-- | The user name.
[$sel:username:AdminUpdateDeviceStatus'] :: AdminUpdateDeviceStatus -> Sensitive Text

-- | The device key.
[$sel:deviceKey:AdminUpdateDeviceStatus'] :: AdminUpdateDeviceStatus -> Text

-- | Create a value of <a>AdminUpdateDeviceStatus</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deviceRememberedStatus:AdminUpdateDeviceStatus'</a>,
--   <a>adminUpdateDeviceStatus_deviceRememberedStatus</a> - The status
--   indicating whether a device has been remembered or not.
--   
--   <a>$sel:userPoolId:AdminUpdateDeviceStatus'</a>,
--   <a>adminUpdateDeviceStatus_userPoolId</a> - The user pool ID.
--   
--   <a>$sel:username:AdminUpdateDeviceStatus'</a>,
--   <a>adminUpdateDeviceStatus_username</a> - The user name.
--   
--   <a>$sel:deviceKey:AdminUpdateDeviceStatus'</a>,
--   <a>adminUpdateDeviceStatus_deviceKey</a> - The device key.
newAdminUpdateDeviceStatus :: Text -> Text -> Text -> AdminUpdateDeviceStatus

-- | The status indicating whether a device has been remembered or not.
adminUpdateDeviceStatus_deviceRememberedStatus :: Lens' AdminUpdateDeviceStatus (Maybe DeviceRememberedStatusType)

-- | The user pool ID.
adminUpdateDeviceStatus_userPoolId :: Lens' AdminUpdateDeviceStatus Text

-- | The user name.
adminUpdateDeviceStatus_username :: Lens' AdminUpdateDeviceStatus Text

-- | The device key.
adminUpdateDeviceStatus_deviceKey :: Lens' AdminUpdateDeviceStatus Text

-- | The status response from the request to update the device, as an
--   administrator.
--   
--   <i>See:</i> <a>newAdminUpdateDeviceStatusResponse</a> smart
--   constructor.
data AdminUpdateDeviceStatusResponse
AdminUpdateDeviceStatusResponse' :: Int -> AdminUpdateDeviceStatusResponse

-- | The response's http status code.
[$sel:httpStatus:AdminUpdateDeviceStatusResponse'] :: AdminUpdateDeviceStatusResponse -> Int

-- | Create a value of <a>AdminUpdateDeviceStatusResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:AdminUpdateDeviceStatusResponse'</a>,
--   <a>adminUpdateDeviceStatusResponse_httpStatus</a> - The response's
--   http status code.
newAdminUpdateDeviceStatusResponse :: Int -> AdminUpdateDeviceStatusResponse

-- | The response's http status code.
adminUpdateDeviceStatusResponse_httpStatus :: Lens' AdminUpdateDeviceStatusResponse Int
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.AdminUpdateDeviceStatus.AdminUpdateDeviceStatus
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.AdminUpdateDeviceStatus.AdminUpdateDeviceStatus
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.AdminUpdateDeviceStatus.AdminUpdateDeviceStatus
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.AdminUpdateDeviceStatus.AdminUpdateDeviceStatusResponse
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.AdminUpdateDeviceStatus.AdminUpdateDeviceStatusResponse
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.AdminUpdateDeviceStatus.AdminUpdateDeviceStatusResponse
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.AdminUpdateDeviceStatus.AdminUpdateDeviceStatusResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CognitoIdentityProvider.AdminUpdateDeviceStatus.AdminUpdateDeviceStatus
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.AdminUpdateDeviceStatus.AdminUpdateDeviceStatusResponse
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.AdminUpdateDeviceStatus.AdminUpdateDeviceStatus
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.AdminUpdateDeviceStatus.AdminUpdateDeviceStatus
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CognitoIdentityProvider.AdminUpdateDeviceStatus.AdminUpdateDeviceStatus
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.AdminUpdateDeviceStatus.AdminUpdateDeviceStatus
instance Network.AWS.Data.Path.ToPath Network.AWS.CognitoIdentityProvider.AdminUpdateDeviceStatus.AdminUpdateDeviceStatus
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentityProvider.AdminUpdateDeviceStatus.AdminUpdateDeviceStatus


-- | Provides feedback for an authentication event as to whether it was
--   from a valid user. This feedback is used for improving the risk
--   evaluation decision for the user pool as part of Amazon Cognito
--   advanced security.
module Network.AWS.CognitoIdentityProvider.AdminUpdateAuthEventFeedback

-- | <i>See:</i> <a>newAdminUpdateAuthEventFeedback</a> smart constructor.
data AdminUpdateAuthEventFeedback
AdminUpdateAuthEventFeedback' :: Text -> Sensitive Text -> Text -> FeedbackValueType -> AdminUpdateAuthEventFeedback

-- | The user pool ID.
[$sel:userPoolId:AdminUpdateAuthEventFeedback'] :: AdminUpdateAuthEventFeedback -> Text

-- | The user pool username.
[$sel:username:AdminUpdateAuthEventFeedback'] :: AdminUpdateAuthEventFeedback -> Sensitive Text

-- | The authentication event ID.
[$sel:eventId:AdminUpdateAuthEventFeedback'] :: AdminUpdateAuthEventFeedback -> Text

-- | The authentication event feedback value.
[$sel:feedbackValue:AdminUpdateAuthEventFeedback'] :: AdminUpdateAuthEventFeedback -> FeedbackValueType

-- | Create a value of <a>AdminUpdateAuthEventFeedback</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userPoolId:AdminUpdateAuthEventFeedback'</a>,
--   <a>adminUpdateAuthEventFeedback_userPoolId</a> - The user pool ID.
--   
--   <a>$sel:username:AdminUpdateAuthEventFeedback'</a>,
--   <a>adminUpdateAuthEventFeedback_username</a> - The user pool username.
--   
--   <a>$sel:eventId:AdminUpdateAuthEventFeedback'</a>,
--   <a>adminUpdateAuthEventFeedback_eventId</a> - The authentication event
--   ID.
--   
--   <a>$sel:feedbackValue:AdminUpdateAuthEventFeedback'</a>,
--   <a>adminUpdateAuthEventFeedback_feedbackValue</a> - The authentication
--   event feedback value.
newAdminUpdateAuthEventFeedback :: Text -> Text -> Text -> FeedbackValueType -> AdminUpdateAuthEventFeedback

-- | The user pool ID.
adminUpdateAuthEventFeedback_userPoolId :: Lens' AdminUpdateAuthEventFeedback Text

-- | The user pool username.
adminUpdateAuthEventFeedback_username :: Lens' AdminUpdateAuthEventFeedback Text

-- | The authentication event ID.
adminUpdateAuthEventFeedback_eventId :: Lens' AdminUpdateAuthEventFeedback Text

-- | The authentication event feedback value.
adminUpdateAuthEventFeedback_feedbackValue :: Lens' AdminUpdateAuthEventFeedback FeedbackValueType

-- | <i>See:</i> <a>newAdminUpdateAuthEventFeedbackResponse</a> smart
--   constructor.
data AdminUpdateAuthEventFeedbackResponse
AdminUpdateAuthEventFeedbackResponse' :: Int -> AdminUpdateAuthEventFeedbackResponse

-- | The response's http status code.
[$sel:httpStatus:AdminUpdateAuthEventFeedbackResponse'] :: AdminUpdateAuthEventFeedbackResponse -> Int

-- | Create a value of <a>AdminUpdateAuthEventFeedbackResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:AdminUpdateAuthEventFeedbackResponse'</a>,
--   <a>adminUpdateAuthEventFeedbackResponse_httpStatus</a> - The
--   response's http status code.
newAdminUpdateAuthEventFeedbackResponse :: Int -> AdminUpdateAuthEventFeedbackResponse

-- | The response's http status code.
adminUpdateAuthEventFeedbackResponse_httpStatus :: Lens' AdminUpdateAuthEventFeedbackResponse Int
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.AdminUpdateAuthEventFeedback.AdminUpdateAuthEventFeedback
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.AdminUpdateAuthEventFeedback.AdminUpdateAuthEventFeedback
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.AdminUpdateAuthEventFeedback.AdminUpdateAuthEventFeedback
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.AdminUpdateAuthEventFeedback.AdminUpdateAuthEventFeedbackResponse
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.AdminUpdateAuthEventFeedback.AdminUpdateAuthEventFeedbackResponse
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.AdminUpdateAuthEventFeedback.AdminUpdateAuthEventFeedbackResponse
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.AdminUpdateAuthEventFeedback.AdminUpdateAuthEventFeedbackResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CognitoIdentityProvider.AdminUpdateAuthEventFeedback.AdminUpdateAuthEventFeedback
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.AdminUpdateAuthEventFeedback.AdminUpdateAuthEventFeedbackResponse
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.AdminUpdateAuthEventFeedback.AdminUpdateAuthEventFeedback
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.AdminUpdateAuthEventFeedback.AdminUpdateAuthEventFeedback
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CognitoIdentityProvider.AdminUpdateAuthEventFeedback.AdminUpdateAuthEventFeedback
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.AdminUpdateAuthEventFeedback.AdminUpdateAuthEventFeedback
instance Network.AWS.Data.Path.ToPath Network.AWS.CognitoIdentityProvider.AdminUpdateAuthEventFeedback.AdminUpdateAuthEventFeedback
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentityProvider.AdminUpdateAuthEventFeedback.AdminUpdateAuthEventFeedback


-- | <i>This action is no longer supported.</i> You can use it to configure
--   only SMS MFA. You can't use it to configure TOTP software token MFA.
--   To configure either type of MFA, use <a>AdminSetUserMFAPreference</a>
--   instead.
module Network.AWS.CognitoIdentityProvider.AdminSetUserSettings

-- | You can use this parameter to set an MFA configuration that uses the
--   SMS delivery medium.
--   
--   <i>See:</i> <a>newAdminSetUserSettings</a> smart constructor.
data AdminSetUserSettings
AdminSetUserSettings' :: Text -> Sensitive Text -> [MFAOptionType] -> AdminSetUserSettings

-- | The ID of the user pool that contains the user that you are setting
--   options for.
[$sel:userPoolId:AdminSetUserSettings'] :: AdminSetUserSettings -> Text

-- | The user name of the user that you are setting options for.
[$sel:username:AdminSetUserSettings'] :: AdminSetUserSettings -> Sensitive Text

-- | You can use this parameter only to set an SMS configuration that uses
--   SMS for delivery.
[$sel:mfaOptions:AdminSetUserSettings'] :: AdminSetUserSettings -> [MFAOptionType]

-- | Create a value of <a>AdminSetUserSettings</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userPoolId:AdminSetUserSettings'</a>,
--   <a>adminSetUserSettings_userPoolId</a> - The ID of the user pool that
--   contains the user that you are setting options for.
--   
--   <a>$sel:username:AdminSetUserSettings'</a>,
--   <a>adminSetUserSettings_username</a> - The user name of the user that
--   you are setting options for.
--   
--   <a>$sel:mfaOptions:AdminSetUserSettings'</a>,
--   <a>adminSetUserSettings_mfaOptions</a> - You can use this parameter
--   only to set an SMS configuration that uses SMS for delivery.
newAdminSetUserSettings :: Text -> Text -> AdminSetUserSettings

-- | The ID of the user pool that contains the user that you are setting
--   options for.
adminSetUserSettings_userPoolId :: Lens' AdminSetUserSettings Text

-- | The user name of the user that you are setting options for.
adminSetUserSettings_username :: Lens' AdminSetUserSettings Text

-- | You can use this parameter only to set an SMS configuration that uses
--   SMS for delivery.
adminSetUserSettings_mfaOptions :: Lens' AdminSetUserSettings [MFAOptionType]

-- | Represents the response from the server to set user settings as an
--   administrator.
--   
--   <i>See:</i> <a>newAdminSetUserSettingsResponse</a> smart constructor.
data AdminSetUserSettingsResponse
AdminSetUserSettingsResponse' :: Int -> AdminSetUserSettingsResponse

-- | The response's http status code.
[$sel:httpStatus:AdminSetUserSettingsResponse'] :: AdminSetUserSettingsResponse -> Int

-- | Create a value of <a>AdminSetUserSettingsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:AdminSetUserSettingsResponse'</a>,
--   <a>adminSetUserSettingsResponse_httpStatus</a> - The response's http
--   status code.
newAdminSetUserSettingsResponse :: Int -> AdminSetUserSettingsResponse

-- | The response's http status code.
adminSetUserSettingsResponse_httpStatus :: Lens' AdminSetUserSettingsResponse Int
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.AdminSetUserSettings.AdminSetUserSettings
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.AdminSetUserSettings.AdminSetUserSettings
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.AdminSetUserSettings.AdminSetUserSettings
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.AdminSetUserSettings.AdminSetUserSettingsResponse
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.AdminSetUserSettings.AdminSetUserSettingsResponse
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.AdminSetUserSettings.AdminSetUserSettingsResponse
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.AdminSetUserSettings.AdminSetUserSettingsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CognitoIdentityProvider.AdminSetUserSettings.AdminSetUserSettings
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.AdminSetUserSettings.AdminSetUserSettingsResponse
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.AdminSetUserSettings.AdminSetUserSettings
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.AdminSetUserSettings.AdminSetUserSettings
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CognitoIdentityProvider.AdminSetUserSettings.AdminSetUserSettings
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.AdminSetUserSettings.AdminSetUserSettings
instance Network.AWS.Data.Path.ToPath Network.AWS.CognitoIdentityProvider.AdminSetUserSettings.AdminSetUserSettings
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentityProvider.AdminSetUserSettings.AdminSetUserSettings


-- | Sets the specified user's password in a user pool as an administrator.
--   Works on any user.
--   
--   The password can be temporary or permanent. If it is temporary, the
--   user status will be placed into the <tt>FORCE_CHANGE_PASSWORD</tt>
--   state. When the user next tries to sign in, the
--   InitiateAuth/AdminInitiateAuth response will contain the
--   <tt>NEW_PASSWORD_REQUIRED</tt> challenge. If the user does not sign in
--   before it expires, the user will not be able to sign in and their
--   password will need to be reset by an administrator.
--   
--   Once the user has set a new password, or the password is permanent,
--   the user status will be set to <tt>Confirmed</tt>.
module Network.AWS.CognitoIdentityProvider.AdminSetUserPassword

-- | <i>See:</i> <a>newAdminSetUserPassword</a> smart constructor.
data AdminSetUserPassword
AdminSetUserPassword' :: Maybe Bool -> Text -> Sensitive Text -> Sensitive Text -> AdminSetUserPassword

-- | <tt>True</tt> if the password is permanent, <tt>False</tt> if it is
--   temporary.
[$sel:permanent:AdminSetUserPassword'] :: AdminSetUserPassword -> Maybe Bool

-- | The user pool ID for the user pool where you want to set the user's
--   password.
[$sel:userPoolId:AdminSetUserPassword'] :: AdminSetUserPassword -> Text

-- | The user name of the user whose password you wish to set.
[$sel:username:AdminSetUserPassword'] :: AdminSetUserPassword -> Sensitive Text

-- | The password for the user.
[$sel:password:AdminSetUserPassword'] :: AdminSetUserPassword -> Sensitive Text

-- | Create a value of <a>AdminSetUserPassword</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:permanent:AdminSetUserPassword'</a>,
--   <a>adminSetUserPassword_permanent</a> - <tt>True</tt> if the password
--   is permanent, <tt>False</tt> if it is temporary.
--   
--   <a>$sel:userPoolId:AdminSetUserPassword'</a>,
--   <a>adminSetUserPassword_userPoolId</a> - The user pool ID for the user
--   pool where you want to set the user's password.
--   
--   <a>$sel:username:AdminSetUserPassword'</a>,
--   <a>adminSetUserPassword_username</a> - The user name of the user whose
--   password you wish to set.
--   
--   <a>$sel:password:AdminSetUserPassword'</a>,
--   <a>adminSetUserPassword_password</a> - The password for the user.
newAdminSetUserPassword :: Text -> Text -> Text -> AdminSetUserPassword

-- | <tt>True</tt> if the password is permanent, <tt>False</tt> if it is
--   temporary.
adminSetUserPassword_permanent :: Lens' AdminSetUserPassword (Maybe Bool)

-- | The user pool ID for the user pool where you want to set the user's
--   password.
adminSetUserPassword_userPoolId :: Lens' AdminSetUserPassword Text

-- | The user name of the user whose password you wish to set.
adminSetUserPassword_username :: Lens' AdminSetUserPassword Text

-- | The password for the user.
adminSetUserPassword_password :: Lens' AdminSetUserPassword Text

-- | <i>See:</i> <a>newAdminSetUserPasswordResponse</a> smart constructor.
data AdminSetUserPasswordResponse
AdminSetUserPasswordResponse' :: Int -> AdminSetUserPasswordResponse

-- | The response's http status code.
[$sel:httpStatus:AdminSetUserPasswordResponse'] :: AdminSetUserPasswordResponse -> Int

-- | Create a value of <a>AdminSetUserPasswordResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:AdminSetUserPasswordResponse'</a>,
--   <a>adminSetUserPasswordResponse_httpStatus</a> - The response's http
--   status code.
newAdminSetUserPasswordResponse :: Int -> AdminSetUserPasswordResponse

-- | The response's http status code.
adminSetUserPasswordResponse_httpStatus :: Lens' AdminSetUserPasswordResponse Int
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.AdminSetUserPassword.AdminSetUserPassword
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.AdminSetUserPassword.AdminSetUserPassword
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.AdminSetUserPassword.AdminSetUserPassword
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.AdminSetUserPassword.AdminSetUserPasswordResponse
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.AdminSetUserPassword.AdminSetUserPasswordResponse
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.AdminSetUserPassword.AdminSetUserPasswordResponse
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.AdminSetUserPassword.AdminSetUserPasswordResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CognitoIdentityProvider.AdminSetUserPassword.AdminSetUserPassword
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.AdminSetUserPassword.AdminSetUserPasswordResponse
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.AdminSetUserPassword.AdminSetUserPassword
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.AdminSetUserPassword.AdminSetUserPassword
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CognitoIdentityProvider.AdminSetUserPassword.AdminSetUserPassword
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.AdminSetUserPassword.AdminSetUserPassword
instance Network.AWS.Data.Path.ToPath Network.AWS.CognitoIdentityProvider.AdminSetUserPassword.AdminSetUserPassword
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentityProvider.AdminSetUserPassword.AdminSetUserPassword


-- | Sets the user's multi-factor authentication (MFA) preference,
--   including which MFA options are enabled and if any are preferred. Only
--   one factor can be set as preferred. The preferred MFA factor will be
--   used to authenticate a user if multiple factors are enabled. If
--   multiple options are enabled and no preference is set, a challenge to
--   choose an MFA option will be returned during sign in.
module Network.AWS.CognitoIdentityProvider.AdminSetUserMFAPreference

-- | <i>See:</i> <a>newAdminSetUserMFAPreference</a> smart constructor.
data AdminSetUserMFAPreference
AdminSetUserMFAPreference' :: Maybe SMSMfaSettingsType -> Maybe SoftwareTokenMfaSettingsType -> Sensitive Text -> Text -> AdminSetUserMFAPreference

-- | The SMS text message MFA settings.
[$sel:sMSMfaSettings:AdminSetUserMFAPreference'] :: AdminSetUserMFAPreference -> Maybe SMSMfaSettingsType

-- | The time-based one-time password software token MFA settings.
[$sel:softwareTokenMfaSettings:AdminSetUserMFAPreference'] :: AdminSetUserMFAPreference -> Maybe SoftwareTokenMfaSettingsType

-- | The user pool username or alias.
[$sel:username:AdminSetUserMFAPreference'] :: AdminSetUserMFAPreference -> Sensitive Text

-- | The user pool ID.
[$sel:userPoolId:AdminSetUserMFAPreference'] :: AdminSetUserMFAPreference -> Text

-- | Create a value of <a>AdminSetUserMFAPreference</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sMSMfaSettings:AdminSetUserMFAPreference'</a>,
--   <a>adminSetUserMFAPreference_sMSMfaSettings</a> - The SMS text message
--   MFA settings.
--   
--   <a>$sel:softwareTokenMfaSettings:AdminSetUserMFAPreference'</a>,
--   <a>adminSetUserMFAPreference_softwareTokenMfaSettings</a> - The
--   time-based one-time password software token MFA settings.
--   
--   <a>$sel:username:AdminSetUserMFAPreference'</a>,
--   <a>adminSetUserMFAPreference_username</a> - The user pool username or
--   alias.
--   
--   <a>$sel:userPoolId:AdminSetUserMFAPreference'</a>,
--   <a>adminSetUserMFAPreference_userPoolId</a> - The user pool ID.
newAdminSetUserMFAPreference :: Text -> Text -> AdminSetUserMFAPreference

-- | The SMS text message MFA settings.
adminSetUserMFAPreference_sMSMfaSettings :: Lens' AdminSetUserMFAPreference (Maybe SMSMfaSettingsType)

-- | The time-based one-time password software token MFA settings.
adminSetUserMFAPreference_softwareTokenMfaSettings :: Lens' AdminSetUserMFAPreference (Maybe SoftwareTokenMfaSettingsType)

-- | The user pool username or alias.
adminSetUserMFAPreference_username :: Lens' AdminSetUserMFAPreference Text

-- | The user pool ID.
adminSetUserMFAPreference_userPoolId :: Lens' AdminSetUserMFAPreference Text

-- | <i>See:</i> <a>newAdminSetUserMFAPreferenceResponse</a> smart
--   constructor.
data AdminSetUserMFAPreferenceResponse
AdminSetUserMFAPreferenceResponse' :: Int -> AdminSetUserMFAPreferenceResponse

-- | The response's http status code.
[$sel:httpStatus:AdminSetUserMFAPreferenceResponse'] :: AdminSetUserMFAPreferenceResponse -> Int

-- | Create a value of <a>AdminSetUserMFAPreferenceResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:AdminSetUserMFAPreferenceResponse'</a>,
--   <a>adminSetUserMFAPreferenceResponse_httpStatus</a> - The response's
--   http status code.
newAdminSetUserMFAPreferenceResponse :: Int -> AdminSetUserMFAPreferenceResponse

-- | The response's http status code.
adminSetUserMFAPreferenceResponse_httpStatus :: Lens' AdminSetUserMFAPreferenceResponse Int
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.AdminSetUserMFAPreference.AdminSetUserMFAPreference
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.AdminSetUserMFAPreference.AdminSetUserMFAPreference
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.AdminSetUserMFAPreference.AdminSetUserMFAPreference
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.AdminSetUserMFAPreference.AdminSetUserMFAPreferenceResponse
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.AdminSetUserMFAPreference.AdminSetUserMFAPreferenceResponse
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.AdminSetUserMFAPreference.AdminSetUserMFAPreferenceResponse
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.AdminSetUserMFAPreference.AdminSetUserMFAPreferenceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CognitoIdentityProvider.AdminSetUserMFAPreference.AdminSetUserMFAPreference
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.AdminSetUserMFAPreference.AdminSetUserMFAPreferenceResponse
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.AdminSetUserMFAPreference.AdminSetUserMFAPreference
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.AdminSetUserMFAPreference.AdminSetUserMFAPreference
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CognitoIdentityProvider.AdminSetUserMFAPreference.AdminSetUserMFAPreference
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.AdminSetUserMFAPreference.AdminSetUserMFAPreference
instance Network.AWS.Data.Path.ToPath Network.AWS.CognitoIdentityProvider.AdminSetUserMFAPreference.AdminSetUserMFAPreference
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentityProvider.AdminSetUserMFAPreference.AdminSetUserMFAPreference


-- | Responds to an authentication challenge, as an administrator.
--   
--   This action might generate an SMS text message. Starting June 1, 2021,
--   U.S. telecom carriers require that you register an origination phone
--   number before you can send SMS messages to U.S. phone numbers. If you
--   use SMS text messages in Amazon Cognito, you must register a phone
--   number with <a>Amazon Pinpoint</a>. Cognito will use the the
--   registered number automatically. Otherwise, Cognito users that must
--   receive SMS messages might be unable to sign up, activate their
--   accounts, or sign in.
--   
--   If you have never used SMS text messages with Amazon Cognito or any
--   other Amazon Web Service, Amazon SNS might place your account in SMS
--   sandbox. In
--   <i>&lt;https:</i><i>docs.aws.amazon.com</i>sns<i>latest</i>dg<i>sns-sms-sandbox.html
--   sandbox mode&gt;</i> , you’ll have limitations, such as sending
--   messages to only verified phone numbers. After testing in the sandbox
--   environment, you can move out of the SMS sandbox and into production.
--   For more information, see <a>SMS message settings for Cognito User
--   Pools</a> in the <i>Amazon Cognito Developer Guide</i>.
--   
--   Calling this action requires developer credentials.
module Network.AWS.CognitoIdentityProvider.AdminRespondToAuthChallenge

-- | The request to respond to the authentication challenge, as an
--   administrator.
--   
--   <i>See:</i> <a>newAdminRespondToAuthChallenge</a> smart constructor.
data AdminRespondToAuthChallenge
AdminRespondToAuthChallenge' :: Maybe (HashMap Text Text) -> Maybe ContextDataType -> Maybe AnalyticsMetadataType -> Maybe (HashMap Text Text) -> Maybe Text -> Text -> Sensitive Text -> ChallengeNameType -> AdminRespondToAuthChallenge

-- | A map of custom key-value pairs that you can provide as input for any
--   custom workflows that this action triggers.
--   
--   You create custom workflows by assigning Lambda functions to user pool
--   triggers. When you use the AdminRespondToAuthChallenge API action,
--   Amazon Cognito invokes any functions that are assigned to the
--   following triggers: <i>pre sign-up</i>, <i>custom message</i>, <i>post
--   authentication</i>, /user migration<i>, </i>pre token generation<i>,
--   </i>define auth challenge<i>, </i>create auth challenge<i>, and
--   </i>verify auth challenge response/. When Amazon Cognito invokes any
--   of these functions, it passes a JSON payload, which the function
--   receives as input. This payload contains a <tt>clientMetadata</tt>
--   attribute, which provides the data that you assigned to the
--   ClientMetadata parameter in your AdminRespondToAuthChallenge request.
--   In your function code in Lambda, you can process the
--   <tt>clientMetadata</tt> value to enhance your workflow for your
--   specific needs.
--   
--   For more information, see <a>Customizing User Pool Workflows with
--   Lambda Triggers</a> in the <i>Amazon Cognito Developer Guide</i>.
--   
--   Take the following limitations into consideration when you use the
--   ClientMetadata parameter:
--   
--   <ul>
--   <li>Amazon Cognito does not store the ClientMetadata value. This data
--   is available only to Lambda triggers that are assigned to a user pool
--   to support custom workflows. If your user pool configuration does not
--   include triggers, the ClientMetadata parameter serves no purpose.</li>
--   <li>Amazon Cognito does not validate the ClientMetadata value.</li>
--   <li>Amazon Cognito does not encrypt the the ClientMetadata value, so
--   don't use it to provide sensitive information.</li>
--   </ul>
[$sel:clientMetadata:AdminRespondToAuthChallenge'] :: AdminRespondToAuthChallenge -> Maybe (HashMap Text Text)

-- | Contextual data such as the user's device fingerprint, IP address, or
--   location used for evaluating the risk of an unexpected event by Amazon
--   Cognito advanced security.
[$sel:contextData:AdminRespondToAuthChallenge'] :: AdminRespondToAuthChallenge -> Maybe ContextDataType

-- | The analytics metadata for collecting Amazon Pinpoint metrics for
--   <tt>AdminRespondToAuthChallenge</tt> calls.
[$sel:analyticsMetadata:AdminRespondToAuthChallenge'] :: AdminRespondToAuthChallenge -> Maybe AnalyticsMetadataType

-- | The challenge responses. These are inputs corresponding to the value
--   of <tt>ChallengeName</tt>, for example:
--   
--   <ul>
--   <li><tt>SMS_MFA</tt>: <tt>SMS_MFA_CODE</tt>, <tt>USERNAME</tt>,
--   <tt>SECRET_HASH</tt> (if app client is configured with client
--   secret).</li>
--   <li><tt>PASSWORD_VERIFIER</tt>: <tt>PASSWORD_CLAIM_SIGNATURE</tt>,
--   <tt>PASSWORD_CLAIM_SECRET_BLOCK</tt>, <tt>TIMESTAMP</tt>,
--   <tt>USERNAME</tt>, <tt>SECRET_HASH</tt> (if app client is configured
--   with client secret).</li>
--   <li><tt>ADMIN_NO_SRP_AUTH</tt>: <tt>PASSWORD</tt>, <tt>USERNAME</tt>,
--   <tt>SECRET_HASH</tt> (if app client is configured with client
--   secret).</li>
--   <li><tt>NEW_PASSWORD_REQUIRED</tt>: <tt>NEW_PASSWORD</tt>, any other
--   required attributes, <tt>USERNAME</tt>, <tt>SECRET_HASH</tt> (if app
--   client is configured with client secret).</li>
--   <li><tt>MFA_SETUP</tt> requires <tt>USERNAME</tt>, plus you need to
--   use the session value returned by <tt>VerifySoftwareToken</tt> in the
--   <tt>Session</tt> parameter.</li>
--   </ul>
--   
--   The value of the <tt>USERNAME</tt> attribute must be the user's actual
--   username, not an alias (such as email address or phone number). To
--   make this easier, the <tt>AdminInitiateAuth</tt> response includes the
--   actual username value in the <tt>USERNAMEUSER_ID_FOR_SRP</tt>
--   attribute, even if you specified an alias in your call to
--   <tt>AdminInitiateAuth</tt>.
[$sel:challengeResponses:AdminRespondToAuthChallenge'] :: AdminRespondToAuthChallenge -> Maybe (HashMap Text Text)

-- | The session which should be passed both ways in challenge-response
--   calls to the service. If <tt>InitiateAuth</tt> or
--   <tt>RespondToAuthChallenge</tt> API call determines that the caller
--   needs to go through another challenge, they return a session with
--   other challenge parameters. This session should be passed as it is to
--   the next <tt>RespondToAuthChallenge</tt> API call.
[$sel:session:AdminRespondToAuthChallenge'] :: AdminRespondToAuthChallenge -> Maybe Text

-- | The ID of the Amazon Cognito user pool.
[$sel:userPoolId:AdminRespondToAuthChallenge'] :: AdminRespondToAuthChallenge -> Text

-- | The app client ID.
[$sel:clientId:AdminRespondToAuthChallenge'] :: AdminRespondToAuthChallenge -> Sensitive Text

-- | The challenge name. For more information, see
--   <a>AdminInitiateAuth</a>.
[$sel:challengeName:AdminRespondToAuthChallenge'] :: AdminRespondToAuthChallenge -> ChallengeNameType

-- | Create a value of <a>AdminRespondToAuthChallenge</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientMetadata:AdminRespondToAuthChallenge'</a>,
--   <a>adminRespondToAuthChallenge_clientMetadata</a> - A map of custom
--   key-value pairs that you can provide as input for any custom workflows
--   that this action triggers.
--   
--   You create custom workflows by assigning Lambda functions to user pool
--   triggers. When you use the AdminRespondToAuthChallenge API action,
--   Amazon Cognito invokes any functions that are assigned to the
--   following triggers: <i>pre sign-up</i>, <i>custom message</i>, <i>post
--   authentication</i>, /user migration<i>, </i>pre token generation<i>,
--   </i>define auth challenge<i>, </i>create auth challenge<i>, and
--   </i>verify auth challenge response/. When Amazon Cognito invokes any
--   of these functions, it passes a JSON payload, which the function
--   receives as input. This payload contains a <tt>clientMetadata</tt>
--   attribute, which provides the data that you assigned to the
--   ClientMetadata parameter in your AdminRespondToAuthChallenge request.
--   In your function code in Lambda, you can process the
--   <tt>clientMetadata</tt> value to enhance your workflow for your
--   specific needs.
--   
--   For more information, see <a>Customizing User Pool Workflows with
--   Lambda Triggers</a> in the <i>Amazon Cognito Developer Guide</i>.
--   
--   Take the following limitations into consideration when you use the
--   ClientMetadata parameter:
--   
--   <ul>
--   <li>Amazon Cognito does not store the ClientMetadata value. This data
--   is available only to Lambda triggers that are assigned to a user pool
--   to support custom workflows. If your user pool configuration does not
--   include triggers, the ClientMetadata parameter serves no purpose.</li>
--   <li>Amazon Cognito does not validate the ClientMetadata value.</li>
--   <li>Amazon Cognito does not encrypt the the ClientMetadata value, so
--   don't use it to provide sensitive information.</li>
--   </ul>
--   
--   <a>$sel:contextData:AdminRespondToAuthChallenge'</a>,
--   <a>adminRespondToAuthChallenge_contextData</a> - Contextual data such
--   as the user's device fingerprint, IP address, or location used for
--   evaluating the risk of an unexpected event by Amazon Cognito advanced
--   security.
--   
--   <a>$sel:analyticsMetadata:AdminRespondToAuthChallenge'</a>,
--   <a>adminRespondToAuthChallenge_analyticsMetadata</a> - The analytics
--   metadata for collecting Amazon Pinpoint metrics for
--   <tt>AdminRespondToAuthChallenge</tt> calls.
--   
--   <a>$sel:challengeResponses:AdminRespondToAuthChallenge'</a>,
--   <a>adminRespondToAuthChallenge_challengeResponses</a> - The challenge
--   responses. These are inputs corresponding to the value of
--   <tt>ChallengeName</tt>, for example:
--   
--   <ul>
--   <li><tt>SMS_MFA</tt>: <tt>SMS_MFA_CODE</tt>, <tt>USERNAME</tt>,
--   <tt>SECRET_HASH</tt> (if app client is configured with client
--   secret).</li>
--   <li><tt>PASSWORD_VERIFIER</tt>: <tt>PASSWORD_CLAIM_SIGNATURE</tt>,
--   <tt>PASSWORD_CLAIM_SECRET_BLOCK</tt>, <tt>TIMESTAMP</tt>,
--   <tt>USERNAME</tt>, <tt>SECRET_HASH</tt> (if app client is configured
--   with client secret).</li>
--   <li><tt>ADMIN_NO_SRP_AUTH</tt>: <tt>PASSWORD</tt>, <tt>USERNAME</tt>,
--   <tt>SECRET_HASH</tt> (if app client is configured with client
--   secret).</li>
--   <li><tt>NEW_PASSWORD_REQUIRED</tt>: <tt>NEW_PASSWORD</tt>, any other
--   required attributes, <tt>USERNAME</tt>, <tt>SECRET_HASH</tt> (if app
--   client is configured with client secret).</li>
--   <li><tt>MFA_SETUP</tt> requires <tt>USERNAME</tt>, plus you need to
--   use the session value returned by <tt>VerifySoftwareToken</tt> in the
--   <tt>Session</tt> parameter.</li>
--   </ul>
--   
--   The value of the <tt>USERNAME</tt> attribute must be the user's actual
--   username, not an alias (such as email address or phone number). To
--   make this easier, the <tt>AdminInitiateAuth</tt> response includes the
--   actual username value in the <tt>USERNAMEUSER_ID_FOR_SRP</tt>
--   attribute, even if you specified an alias in your call to
--   <tt>AdminInitiateAuth</tt>.
--   
--   <a>$sel:session:AdminRespondToAuthChallenge'</a>,
--   <a>adminRespondToAuthChallenge_session</a> - The session which should
--   be passed both ways in challenge-response calls to the service. If
--   <tt>InitiateAuth</tt> or <tt>RespondToAuthChallenge</tt> API call
--   determines that the caller needs to go through another challenge, they
--   return a session with other challenge parameters. This session should
--   be passed as it is to the next <tt>RespondToAuthChallenge</tt> API
--   call.
--   
--   <a>$sel:userPoolId:AdminRespondToAuthChallenge'</a>,
--   <a>adminRespondToAuthChallenge_userPoolId</a> - The ID of the Amazon
--   Cognito user pool.
--   
--   <a>$sel:clientId:AdminRespondToAuthChallenge'</a>,
--   <a>adminRespondToAuthChallenge_clientId</a> - The app client ID.
--   
--   <a>$sel:challengeName:AdminRespondToAuthChallenge'</a>,
--   <a>adminRespondToAuthChallenge_challengeName</a> - The challenge name.
--   For more information, see <a>AdminInitiateAuth</a>.
newAdminRespondToAuthChallenge :: Text -> Text -> ChallengeNameType -> AdminRespondToAuthChallenge

-- | A map of custom key-value pairs that you can provide as input for any
--   custom workflows that this action triggers.
--   
--   You create custom workflows by assigning Lambda functions to user pool
--   triggers. When you use the AdminRespondToAuthChallenge API action,
--   Amazon Cognito invokes any functions that are assigned to the
--   following triggers: <i>pre sign-up</i>, <i>custom message</i>, <i>post
--   authentication</i>, /user migration<i>, </i>pre token generation<i>,
--   </i>define auth challenge<i>, </i>create auth challenge<i>, and
--   </i>verify auth challenge response/. When Amazon Cognito invokes any
--   of these functions, it passes a JSON payload, which the function
--   receives as input. This payload contains a <tt>clientMetadata</tt>
--   attribute, which provides the data that you assigned to the
--   ClientMetadata parameter in your AdminRespondToAuthChallenge request.
--   In your function code in Lambda, you can process the
--   <tt>clientMetadata</tt> value to enhance your workflow for your
--   specific needs.
--   
--   For more information, see <a>Customizing User Pool Workflows with
--   Lambda Triggers</a> in the <i>Amazon Cognito Developer Guide</i>.
--   
--   Take the following limitations into consideration when you use the
--   ClientMetadata parameter:
--   
--   <ul>
--   <li>Amazon Cognito does not store the ClientMetadata value. This data
--   is available only to Lambda triggers that are assigned to a user pool
--   to support custom workflows. If your user pool configuration does not
--   include triggers, the ClientMetadata parameter serves no purpose.</li>
--   <li>Amazon Cognito does not validate the ClientMetadata value.</li>
--   <li>Amazon Cognito does not encrypt the the ClientMetadata value, so
--   don't use it to provide sensitive information.</li>
--   </ul>
adminRespondToAuthChallenge_clientMetadata :: Lens' AdminRespondToAuthChallenge (Maybe (HashMap Text Text))

-- | Contextual data such as the user's device fingerprint, IP address, or
--   location used for evaluating the risk of an unexpected event by Amazon
--   Cognito advanced security.
adminRespondToAuthChallenge_contextData :: Lens' AdminRespondToAuthChallenge (Maybe ContextDataType)

-- | The analytics metadata for collecting Amazon Pinpoint metrics for
--   <tt>AdminRespondToAuthChallenge</tt> calls.
adminRespondToAuthChallenge_analyticsMetadata :: Lens' AdminRespondToAuthChallenge (Maybe AnalyticsMetadataType)

-- | The challenge responses. These are inputs corresponding to the value
--   of <tt>ChallengeName</tt>, for example:
--   
--   <ul>
--   <li><tt>SMS_MFA</tt>: <tt>SMS_MFA_CODE</tt>, <tt>USERNAME</tt>,
--   <tt>SECRET_HASH</tt> (if app client is configured with client
--   secret).</li>
--   <li><tt>PASSWORD_VERIFIER</tt>: <tt>PASSWORD_CLAIM_SIGNATURE</tt>,
--   <tt>PASSWORD_CLAIM_SECRET_BLOCK</tt>, <tt>TIMESTAMP</tt>,
--   <tt>USERNAME</tt>, <tt>SECRET_HASH</tt> (if app client is configured
--   with client secret).</li>
--   <li><tt>ADMIN_NO_SRP_AUTH</tt>: <tt>PASSWORD</tt>, <tt>USERNAME</tt>,
--   <tt>SECRET_HASH</tt> (if app client is configured with client
--   secret).</li>
--   <li><tt>NEW_PASSWORD_REQUIRED</tt>: <tt>NEW_PASSWORD</tt>, any other
--   required attributes, <tt>USERNAME</tt>, <tt>SECRET_HASH</tt> (if app
--   client is configured with client secret).</li>
--   <li><tt>MFA_SETUP</tt> requires <tt>USERNAME</tt>, plus you need to
--   use the session value returned by <tt>VerifySoftwareToken</tt> in the
--   <tt>Session</tt> parameter.</li>
--   </ul>
--   
--   The value of the <tt>USERNAME</tt> attribute must be the user's actual
--   username, not an alias (such as email address or phone number). To
--   make this easier, the <tt>AdminInitiateAuth</tt> response includes the
--   actual username value in the <tt>USERNAMEUSER_ID_FOR_SRP</tt>
--   attribute, even if you specified an alias in your call to
--   <tt>AdminInitiateAuth</tt>.
adminRespondToAuthChallenge_challengeResponses :: Lens' AdminRespondToAuthChallenge (Maybe (HashMap Text Text))

-- | The session which should be passed both ways in challenge-response
--   calls to the service. If <tt>InitiateAuth</tt> or
--   <tt>RespondToAuthChallenge</tt> API call determines that the caller
--   needs to go through another challenge, they return a session with
--   other challenge parameters. This session should be passed as it is to
--   the next <tt>RespondToAuthChallenge</tt> API call.
adminRespondToAuthChallenge_session :: Lens' AdminRespondToAuthChallenge (Maybe Text)

-- | The ID of the Amazon Cognito user pool.
adminRespondToAuthChallenge_userPoolId :: Lens' AdminRespondToAuthChallenge Text

-- | The app client ID.
adminRespondToAuthChallenge_clientId :: Lens' AdminRespondToAuthChallenge Text

-- | The challenge name. For more information, see
--   <a>AdminInitiateAuth</a>.
adminRespondToAuthChallenge_challengeName :: Lens' AdminRespondToAuthChallenge ChallengeNameType

-- | Responds to the authentication challenge, as an administrator.
--   
--   <i>See:</i> <a>newAdminRespondToAuthChallengeResponse</a> smart
--   constructor.
data AdminRespondToAuthChallengeResponse
AdminRespondToAuthChallengeResponse' :: Maybe ChallengeNameType -> Maybe (HashMap Text Text) -> Maybe AuthenticationResultType -> Maybe Text -> Int -> AdminRespondToAuthChallengeResponse

-- | The name of the challenge. For more information, see
--   <a>AdminInitiateAuth</a>.
[$sel:challengeName:AdminRespondToAuthChallengeResponse'] :: AdminRespondToAuthChallengeResponse -> Maybe ChallengeNameType

-- | The challenge parameters. For more information, see
--   <a>AdminInitiateAuth</a>.
[$sel:challengeParameters:AdminRespondToAuthChallengeResponse'] :: AdminRespondToAuthChallengeResponse -> Maybe (HashMap Text Text)

-- | The result returned by the server in response to the authentication
--   request.
[$sel:authenticationResult:AdminRespondToAuthChallengeResponse'] :: AdminRespondToAuthChallengeResponse -> Maybe AuthenticationResultType

-- | The session which should be passed both ways in challenge-response
--   calls to the service. If the caller needs to go through another
--   challenge, they return a session with other challenge parameters. This
--   session should be passed as it is to the next
--   <tt>RespondToAuthChallenge</tt> API call.
[$sel:session:AdminRespondToAuthChallengeResponse'] :: AdminRespondToAuthChallengeResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:AdminRespondToAuthChallengeResponse'] :: AdminRespondToAuthChallengeResponse -> Int

-- | Create a value of <a>AdminRespondToAuthChallengeResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:challengeName:AdminRespondToAuthChallenge'</a>,
--   <a>adminRespondToAuthChallengeResponse_challengeName</a> - The name of
--   the challenge. For more information, see <a>AdminInitiateAuth</a>.
--   
--   <a>$sel:challengeParameters:AdminRespondToAuthChallengeResponse'</a>,
--   <a>adminRespondToAuthChallengeResponse_challengeParameters</a> - The
--   challenge parameters. For more information, see
--   <a>AdminInitiateAuth</a>.
--   
--   <a>$sel:authenticationResult:AdminRespondToAuthChallengeResponse'</a>,
--   <a>adminRespondToAuthChallengeResponse_authenticationResult</a> - The
--   result returned by the server in response to the authentication
--   request.
--   
--   <a>$sel:session:AdminRespondToAuthChallenge'</a>,
--   <a>adminRespondToAuthChallengeResponse_session</a> - The session which
--   should be passed both ways in challenge-response calls to the service.
--   If the caller needs to go through another challenge, they return a
--   session with other challenge parameters. This session should be passed
--   as it is to the next <tt>RespondToAuthChallenge</tt> API call.
--   
--   <a>$sel:httpStatus:AdminRespondToAuthChallengeResponse'</a>,
--   <a>adminRespondToAuthChallengeResponse_httpStatus</a> - The response's
--   http status code.
newAdminRespondToAuthChallengeResponse :: Int -> AdminRespondToAuthChallengeResponse

-- | The name of the challenge. For more information, see
--   <a>AdminInitiateAuth</a>.
adminRespondToAuthChallengeResponse_challengeName :: Lens' AdminRespondToAuthChallengeResponse (Maybe ChallengeNameType)

-- | The challenge parameters. For more information, see
--   <a>AdminInitiateAuth</a>.
adminRespondToAuthChallengeResponse_challengeParameters :: Lens' AdminRespondToAuthChallengeResponse (Maybe (HashMap Text Text))

-- | The result returned by the server in response to the authentication
--   request.
adminRespondToAuthChallengeResponse_authenticationResult :: Lens' AdminRespondToAuthChallengeResponse (Maybe AuthenticationResultType)

-- | The session which should be passed both ways in challenge-response
--   calls to the service. If the caller needs to go through another
--   challenge, they return a session with other challenge parameters. This
--   session should be passed as it is to the next
--   <tt>RespondToAuthChallenge</tt> API call.
adminRespondToAuthChallengeResponse_session :: Lens' AdminRespondToAuthChallengeResponse (Maybe Text)

-- | The response's http status code.
adminRespondToAuthChallengeResponse_httpStatus :: Lens' AdminRespondToAuthChallengeResponse Int
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.AdminRespondToAuthChallenge.AdminRespondToAuthChallenge
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.AdminRespondToAuthChallenge.AdminRespondToAuthChallenge
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.AdminRespondToAuthChallenge.AdminRespondToAuthChallenge
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.AdminRespondToAuthChallenge.AdminRespondToAuthChallengeResponse
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.AdminRespondToAuthChallenge.AdminRespondToAuthChallengeResponse
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.AdminRespondToAuthChallenge.AdminRespondToAuthChallengeResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CognitoIdentityProvider.AdminRespondToAuthChallenge.AdminRespondToAuthChallenge
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.AdminRespondToAuthChallenge.AdminRespondToAuthChallengeResponse
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.AdminRespondToAuthChallenge.AdminRespondToAuthChallenge
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.AdminRespondToAuthChallenge.AdminRespondToAuthChallenge
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CognitoIdentityProvider.AdminRespondToAuthChallenge.AdminRespondToAuthChallenge
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.AdminRespondToAuthChallenge.AdminRespondToAuthChallenge
instance Network.AWS.Data.Path.ToPath Network.AWS.CognitoIdentityProvider.AdminRespondToAuthChallenge.AdminRespondToAuthChallenge
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentityProvider.AdminRespondToAuthChallenge.AdminRespondToAuthChallenge


-- | Resets the specified user's password in a user pool as an
--   administrator. Works on any user.
--   
--   When a developer calls this API, the current password is invalidated,
--   so it must be changed. If a user tries to sign in after the API is
--   called, the app will get a PasswordResetRequiredException exception
--   back and should direct the user down the flow to reset the password,
--   which is the same as the forgot password flow. In addition, if the
--   user pool has phone verification selected and a verified phone number
--   exists for the user, or if email verification is selected and a
--   verified email exists for the user, calling this API will also result
--   in sending a message to the end user with the code to change their
--   password.
--   
--   This action might generate an SMS text message. Starting June 1, 2021,
--   U.S. telecom carriers require that you register an origination phone
--   number before you can send SMS messages to U.S. phone numbers. If you
--   use SMS text messages in Amazon Cognito, you must register a phone
--   number with <a>Amazon Pinpoint</a>. Cognito will use the the
--   registered number automatically. Otherwise, Cognito users that must
--   receive SMS messages might be unable to sign up, activate their
--   accounts, or sign in.
--   
--   If you have never used SMS text messages with Amazon Cognito or any
--   other Amazon Web Service, Amazon SNS might place your account in SMS
--   sandbox. In
--   <i>&lt;https:</i><i>docs.aws.amazon.com</i>sns<i>latest</i>dg<i>sns-sms-sandbox.html
--   sandbox mode&gt;</i> , you’ll have limitations, such as sending
--   messages to only verified phone numbers. After testing in the sandbox
--   environment, you can move out of the SMS sandbox and into production.
--   For more information, see <a>SMS message settings for Cognito User
--   Pools</a> in the <i>Amazon Cognito Developer Guide</i>.
--   
--   Calling this action requires developer credentials.
module Network.AWS.CognitoIdentityProvider.AdminResetUserPassword

-- | Represents the request to reset a user's password as an administrator.
--   
--   <i>See:</i> <a>newAdminResetUserPassword</a> smart constructor.
data AdminResetUserPassword
AdminResetUserPassword' :: Maybe (HashMap Text Text) -> Text -> Sensitive Text -> AdminResetUserPassword

-- | A map of custom key-value pairs that you can provide as input for any
--   custom workflows that this action triggers.
--   
--   You create custom workflows by assigning Lambda functions to user pool
--   triggers. When you use the AdminResetUserPassword API action, Amazon
--   Cognito invokes the function that is assigned to the <i>custom
--   message</i> trigger. When Amazon Cognito invokes this function, it
--   passes a JSON payload, which the function receives as input. This
--   payload contains a <tt>clientMetadata</tt> attribute, which provides
--   the data that you assigned to the ClientMetadata parameter in your
--   AdminResetUserPassword request. In your function code in Lambda, you
--   can process the <tt>clientMetadata</tt> value to enhance your workflow
--   for your specific needs.
--   
--   For more information, see <a>Customizing User Pool Workflows with
--   Lambda Triggers</a> in the <i>Amazon Cognito Developer Guide</i>.
--   
--   Take the following limitations into consideration when you use the
--   ClientMetadata parameter:
--   
--   <ul>
--   <li>Amazon Cognito does not store the ClientMetadata value. This data
--   is available only to Lambda triggers that are assigned to a user pool
--   to support custom workflows. If your user pool configuration does not
--   include triggers, the ClientMetadata parameter serves no purpose.</li>
--   <li>Amazon Cognito does not validate the ClientMetadata value.</li>
--   <li>Amazon Cognito does not encrypt the the ClientMetadata value, so
--   don't use it to provide sensitive information.</li>
--   </ul>
[$sel:clientMetadata:AdminResetUserPassword'] :: AdminResetUserPassword -> Maybe (HashMap Text Text)

-- | The user pool ID for the user pool where you want to reset the user's
--   password.
[$sel:userPoolId:AdminResetUserPassword'] :: AdminResetUserPassword -> Text

-- | The user name of the user whose password you wish to reset.
[$sel:username:AdminResetUserPassword'] :: AdminResetUserPassword -> Sensitive Text

-- | Create a value of <a>AdminResetUserPassword</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientMetadata:AdminResetUserPassword'</a>,
--   <a>adminResetUserPassword_clientMetadata</a> - A map of custom
--   key-value pairs that you can provide as input for any custom workflows
--   that this action triggers.
--   
--   You create custom workflows by assigning Lambda functions to user pool
--   triggers. When you use the AdminResetUserPassword API action, Amazon
--   Cognito invokes the function that is assigned to the <i>custom
--   message</i> trigger. When Amazon Cognito invokes this function, it
--   passes a JSON payload, which the function receives as input. This
--   payload contains a <tt>clientMetadata</tt> attribute, which provides
--   the data that you assigned to the ClientMetadata parameter in your
--   AdminResetUserPassword request. In your function code in Lambda, you
--   can process the <tt>clientMetadata</tt> value to enhance your workflow
--   for your specific needs.
--   
--   For more information, see <a>Customizing User Pool Workflows with
--   Lambda Triggers</a> in the <i>Amazon Cognito Developer Guide</i>.
--   
--   Take the following limitations into consideration when you use the
--   ClientMetadata parameter:
--   
--   <ul>
--   <li>Amazon Cognito does not store the ClientMetadata value. This data
--   is available only to Lambda triggers that are assigned to a user pool
--   to support custom workflows. If your user pool configuration does not
--   include triggers, the ClientMetadata parameter serves no purpose.</li>
--   <li>Amazon Cognito does not validate the ClientMetadata value.</li>
--   <li>Amazon Cognito does not encrypt the the ClientMetadata value, so
--   don't use it to provide sensitive information.</li>
--   </ul>
--   
--   <a>$sel:userPoolId:AdminResetUserPassword'</a>,
--   <a>adminResetUserPassword_userPoolId</a> - The user pool ID for the
--   user pool where you want to reset the user's password.
--   
--   <a>$sel:username:AdminResetUserPassword'</a>,
--   <a>adminResetUserPassword_username</a> - The user name of the user
--   whose password you wish to reset.
newAdminResetUserPassword :: Text -> Text -> AdminResetUserPassword

-- | A map of custom key-value pairs that you can provide as input for any
--   custom workflows that this action triggers.
--   
--   You create custom workflows by assigning Lambda functions to user pool
--   triggers. When you use the AdminResetUserPassword API action, Amazon
--   Cognito invokes the function that is assigned to the <i>custom
--   message</i> trigger. When Amazon Cognito invokes this function, it
--   passes a JSON payload, which the function receives as input. This
--   payload contains a <tt>clientMetadata</tt> attribute, which provides
--   the data that you assigned to the ClientMetadata parameter in your
--   AdminResetUserPassword request. In your function code in Lambda, you
--   can process the <tt>clientMetadata</tt> value to enhance your workflow
--   for your specific needs.
--   
--   For more information, see <a>Customizing User Pool Workflows with
--   Lambda Triggers</a> in the <i>Amazon Cognito Developer Guide</i>.
--   
--   Take the following limitations into consideration when you use the
--   ClientMetadata parameter:
--   
--   <ul>
--   <li>Amazon Cognito does not store the ClientMetadata value. This data
--   is available only to Lambda triggers that are assigned to a user pool
--   to support custom workflows. If your user pool configuration does not
--   include triggers, the ClientMetadata parameter serves no purpose.</li>
--   <li>Amazon Cognito does not validate the ClientMetadata value.</li>
--   <li>Amazon Cognito does not encrypt the the ClientMetadata value, so
--   don't use it to provide sensitive information.</li>
--   </ul>
adminResetUserPassword_clientMetadata :: Lens' AdminResetUserPassword (Maybe (HashMap Text Text))

-- | The user pool ID for the user pool where you want to reset the user's
--   password.
adminResetUserPassword_userPoolId :: Lens' AdminResetUserPassword Text

-- | The user name of the user whose password you wish to reset.
adminResetUserPassword_username :: Lens' AdminResetUserPassword Text

-- | Represents the response from the server to reset a user password as an
--   administrator.
--   
--   <i>See:</i> <a>newAdminResetUserPasswordResponse</a> smart
--   constructor.
data AdminResetUserPasswordResponse
AdminResetUserPasswordResponse' :: Int -> AdminResetUserPasswordResponse

-- | The response's http status code.
[$sel:httpStatus:AdminResetUserPasswordResponse'] :: AdminResetUserPasswordResponse -> Int

-- | Create a value of <a>AdminResetUserPasswordResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:AdminResetUserPasswordResponse'</a>,
--   <a>adminResetUserPasswordResponse_httpStatus</a> - The response's http
--   status code.
newAdminResetUserPasswordResponse :: Int -> AdminResetUserPasswordResponse

-- | The response's http status code.
adminResetUserPasswordResponse_httpStatus :: Lens' AdminResetUserPasswordResponse Int
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.AdminResetUserPassword.AdminResetUserPassword
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.AdminResetUserPassword.AdminResetUserPassword
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.AdminResetUserPassword.AdminResetUserPassword
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.AdminResetUserPassword.AdminResetUserPasswordResponse
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.AdminResetUserPassword.AdminResetUserPasswordResponse
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.AdminResetUserPassword.AdminResetUserPasswordResponse
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.AdminResetUserPassword.AdminResetUserPasswordResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CognitoIdentityProvider.AdminResetUserPassword.AdminResetUserPassword
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.AdminResetUserPassword.AdminResetUserPasswordResponse
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.AdminResetUserPassword.AdminResetUserPassword
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.AdminResetUserPassword.AdminResetUserPassword
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CognitoIdentityProvider.AdminResetUserPassword.AdminResetUserPassword
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.AdminResetUserPassword.AdminResetUserPassword
instance Network.AWS.Data.Path.ToPath Network.AWS.CognitoIdentityProvider.AdminResetUserPassword.AdminResetUserPassword
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentityProvider.AdminResetUserPassword.AdminResetUserPassword


-- | Removes the specified user from the specified group.
--   
--   Calling this action requires developer credentials.
module Network.AWS.CognitoIdentityProvider.AdminRemoveUserFromGroup

-- | <i>See:</i> <a>newAdminRemoveUserFromGroup</a> smart constructor.
data AdminRemoveUserFromGroup
AdminRemoveUserFromGroup' :: Text -> Sensitive Text -> Text -> AdminRemoveUserFromGroup

-- | The user pool ID for the user pool.
[$sel:userPoolId:AdminRemoveUserFromGroup'] :: AdminRemoveUserFromGroup -> Text

-- | The username for the user.
[$sel:username:AdminRemoveUserFromGroup'] :: AdminRemoveUserFromGroup -> Sensitive Text

-- | The group name.
[$sel:groupName:AdminRemoveUserFromGroup'] :: AdminRemoveUserFromGroup -> Text

-- | Create a value of <a>AdminRemoveUserFromGroup</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userPoolId:AdminRemoveUserFromGroup'</a>,
--   <a>adminRemoveUserFromGroup_userPoolId</a> - The user pool ID for the
--   user pool.
--   
--   <a>$sel:username:AdminRemoveUserFromGroup'</a>,
--   <a>adminRemoveUserFromGroup_username</a> - The username for the user.
--   
--   <a>$sel:groupName:AdminRemoveUserFromGroup'</a>,
--   <a>adminRemoveUserFromGroup_groupName</a> - The group name.
newAdminRemoveUserFromGroup :: Text -> Text -> Text -> AdminRemoveUserFromGroup

-- | The user pool ID for the user pool.
adminRemoveUserFromGroup_userPoolId :: Lens' AdminRemoveUserFromGroup Text

-- | The username for the user.
adminRemoveUserFromGroup_username :: Lens' AdminRemoveUserFromGroup Text

-- | The group name.
adminRemoveUserFromGroup_groupName :: Lens' AdminRemoveUserFromGroup Text

-- | <i>See:</i> <a>newAdminRemoveUserFromGroupResponse</a> smart
--   constructor.
data AdminRemoveUserFromGroupResponse
AdminRemoveUserFromGroupResponse' :: AdminRemoveUserFromGroupResponse

-- | Create a value of <a>AdminRemoveUserFromGroupResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newAdminRemoveUserFromGroupResponse :: AdminRemoveUserFromGroupResponse
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.AdminRemoveUserFromGroup.AdminRemoveUserFromGroup
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.AdminRemoveUserFromGroup.AdminRemoveUserFromGroup
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.AdminRemoveUserFromGroup.AdminRemoveUserFromGroup
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.AdminRemoveUserFromGroup.AdminRemoveUserFromGroupResponse
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.AdminRemoveUserFromGroup.AdminRemoveUserFromGroupResponse
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.AdminRemoveUserFromGroup.AdminRemoveUserFromGroupResponse
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.AdminRemoveUserFromGroup.AdminRemoveUserFromGroupResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CognitoIdentityProvider.AdminRemoveUserFromGroup.AdminRemoveUserFromGroup
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.AdminRemoveUserFromGroup.AdminRemoveUserFromGroupResponse
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.AdminRemoveUserFromGroup.AdminRemoveUserFromGroup
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.AdminRemoveUserFromGroup.AdminRemoveUserFromGroup
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CognitoIdentityProvider.AdminRemoveUserFromGroup.AdminRemoveUserFromGroup
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.AdminRemoveUserFromGroup.AdminRemoveUserFromGroup
instance Network.AWS.Data.Path.ToPath Network.AWS.CognitoIdentityProvider.AdminRemoveUserFromGroup.AdminRemoveUserFromGroup
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentityProvider.AdminRemoveUserFromGroup.AdminRemoveUserFromGroup


-- | Lists a history of user activity and any risks detected as part of
--   Amazon Cognito advanced security.
--   
--   This operation returns paginated results.
module Network.AWS.CognitoIdentityProvider.AdminListUserAuthEvents

-- | <i>See:</i> <a>newAdminListUserAuthEvents</a> smart constructor.
data AdminListUserAuthEvents
AdminListUserAuthEvents' :: Maybe Text -> Maybe Natural -> Text -> Sensitive Text -> AdminListUserAuthEvents

-- | A pagination token.
[$sel:nextToken:AdminListUserAuthEvents'] :: AdminListUserAuthEvents -> Maybe Text

-- | The maximum number of authentication events to return.
[$sel:maxResults:AdminListUserAuthEvents'] :: AdminListUserAuthEvents -> Maybe Natural

-- | The user pool ID.
[$sel:userPoolId:AdminListUserAuthEvents'] :: AdminListUserAuthEvents -> Text

-- | The user pool username or an alias.
[$sel:username:AdminListUserAuthEvents'] :: AdminListUserAuthEvents -> Sensitive Text

-- | Create a value of <a>AdminListUserAuthEvents</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:AdminListUserAuthEvents'</a>,
--   <a>adminListUserAuthEvents_nextToken</a> - A pagination token.
--   
--   <a>$sel:maxResults:AdminListUserAuthEvents'</a>,
--   <a>adminListUserAuthEvents_maxResults</a> - The maximum number of
--   authentication events to return.
--   
--   <a>$sel:userPoolId:AdminListUserAuthEvents'</a>,
--   <a>adminListUserAuthEvents_userPoolId</a> - The user pool ID.
--   
--   <a>$sel:username:AdminListUserAuthEvents'</a>,
--   <a>adminListUserAuthEvents_username</a> - The user pool username or an
--   alias.
newAdminListUserAuthEvents :: Text -> Text -> AdminListUserAuthEvents

-- | A pagination token.
adminListUserAuthEvents_nextToken :: Lens' AdminListUserAuthEvents (Maybe Text)

-- | The maximum number of authentication events to return.
adminListUserAuthEvents_maxResults :: Lens' AdminListUserAuthEvents (Maybe Natural)

-- | The user pool ID.
adminListUserAuthEvents_userPoolId :: Lens' AdminListUserAuthEvents Text

-- | The user pool username or an alias.
adminListUserAuthEvents_username :: Lens' AdminListUserAuthEvents Text

-- | <i>See:</i> <a>newAdminListUserAuthEventsResponse</a> smart
--   constructor.
data AdminListUserAuthEventsResponse
AdminListUserAuthEventsResponse' :: Maybe Text -> Maybe [AuthEventType] -> Int -> AdminListUserAuthEventsResponse

-- | A pagination token.
[$sel:nextToken:AdminListUserAuthEventsResponse'] :: AdminListUserAuthEventsResponse -> Maybe Text

-- | The response object. It includes the <tt>EventID</tt>,
--   <tt>EventType</tt>, <tt>CreationDate</tt>, <tt>EventRisk</tt>, and
--   <tt>EventResponse</tt>.
[$sel:authEvents:AdminListUserAuthEventsResponse'] :: AdminListUserAuthEventsResponse -> Maybe [AuthEventType]

-- | The response's http status code.
[$sel:httpStatus:AdminListUserAuthEventsResponse'] :: AdminListUserAuthEventsResponse -> Int

-- | Create a value of <a>AdminListUserAuthEventsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:AdminListUserAuthEvents'</a>,
--   <a>adminListUserAuthEventsResponse_nextToken</a> - A pagination token.
--   
--   <a>$sel:authEvents:AdminListUserAuthEventsResponse'</a>,
--   <a>adminListUserAuthEventsResponse_authEvents</a> - The response
--   object. It includes the <tt>EventID</tt>, <tt>EventType</tt>,
--   <tt>CreationDate</tt>, <tt>EventRisk</tt>, and <tt>EventResponse</tt>.
--   
--   <a>$sel:httpStatus:AdminListUserAuthEventsResponse'</a>,
--   <a>adminListUserAuthEventsResponse_httpStatus</a> - The response's
--   http status code.
newAdminListUserAuthEventsResponse :: Int -> AdminListUserAuthEventsResponse

-- | A pagination token.
adminListUserAuthEventsResponse_nextToken :: Lens' AdminListUserAuthEventsResponse (Maybe Text)

-- | The response object. It includes the <tt>EventID</tt>,
--   <tt>EventType</tt>, <tt>CreationDate</tt>, <tt>EventRisk</tt>, and
--   <tt>EventResponse</tt>.
adminListUserAuthEventsResponse_authEvents :: Lens' AdminListUserAuthEventsResponse (Maybe [AuthEventType])

-- | The response's http status code.
adminListUserAuthEventsResponse_httpStatus :: Lens' AdminListUserAuthEventsResponse Int
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.AdminListUserAuthEvents.AdminListUserAuthEvents
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.AdminListUserAuthEvents.AdminListUserAuthEvents
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.AdminListUserAuthEvents.AdminListUserAuthEvents
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.AdminListUserAuthEvents.AdminListUserAuthEventsResponse
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.AdminListUserAuthEvents.AdminListUserAuthEventsResponse
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.AdminListUserAuthEvents.AdminListUserAuthEventsResponse
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.AdminListUserAuthEvents.AdminListUserAuthEventsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CognitoIdentityProvider.AdminListUserAuthEvents.AdminListUserAuthEvents
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.AdminListUserAuthEvents.AdminListUserAuthEventsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.CognitoIdentityProvider.AdminListUserAuthEvents.AdminListUserAuthEvents
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.AdminListUserAuthEvents.AdminListUserAuthEvents
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.AdminListUserAuthEvents.AdminListUserAuthEvents
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CognitoIdentityProvider.AdminListUserAuthEvents.AdminListUserAuthEvents
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.AdminListUserAuthEvents.AdminListUserAuthEvents
instance Network.AWS.Data.Path.ToPath Network.AWS.CognitoIdentityProvider.AdminListUserAuthEvents.AdminListUserAuthEvents
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentityProvider.AdminListUserAuthEvents.AdminListUserAuthEvents


-- | Lists the groups that the user belongs to.
--   
--   Calling this action requires developer credentials.
--   
--   This operation returns paginated results.
module Network.AWS.CognitoIdentityProvider.AdminListGroupsForUser

-- | <i>See:</i> <a>newAdminListGroupsForUser</a> smart constructor.
data AdminListGroupsForUser
AdminListGroupsForUser' :: Maybe Text -> Maybe Natural -> Sensitive Text -> Text -> AdminListGroupsForUser

-- | An identifier that was returned from the previous call to this
--   operation, which can be used to return the next set of items in the
--   list.
[$sel:nextToken:AdminListGroupsForUser'] :: AdminListGroupsForUser -> Maybe Text

-- | The limit of the request to list groups.
[$sel:limit:AdminListGroupsForUser'] :: AdminListGroupsForUser -> Maybe Natural

-- | The username for the user.
[$sel:username:AdminListGroupsForUser'] :: AdminListGroupsForUser -> Sensitive Text

-- | The user pool ID for the user pool.
[$sel:userPoolId:AdminListGroupsForUser'] :: AdminListGroupsForUser -> Text

-- | Create a value of <a>AdminListGroupsForUser</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:AdminListGroupsForUser'</a>,
--   <a>adminListGroupsForUser_nextToken</a> - An identifier that was
--   returned from the previous call to this operation, which can be used
--   to return the next set of items in the list.
--   
--   <a>$sel:limit:AdminListGroupsForUser'</a>,
--   <a>adminListGroupsForUser_limit</a> - The limit of the request to list
--   groups.
--   
--   <a>$sel:username:AdminListGroupsForUser'</a>,
--   <a>adminListGroupsForUser_username</a> - The username for the user.
--   
--   <a>$sel:userPoolId:AdminListGroupsForUser'</a>,
--   <a>adminListGroupsForUser_userPoolId</a> - The user pool ID for the
--   user pool.
newAdminListGroupsForUser :: Text -> Text -> AdminListGroupsForUser

-- | An identifier that was returned from the previous call to this
--   operation, which can be used to return the next set of items in the
--   list.
adminListGroupsForUser_nextToken :: Lens' AdminListGroupsForUser (Maybe Text)

-- | The limit of the request to list groups.
adminListGroupsForUser_limit :: Lens' AdminListGroupsForUser (Maybe Natural)

-- | The username for the user.
adminListGroupsForUser_username :: Lens' AdminListGroupsForUser Text

-- | The user pool ID for the user pool.
adminListGroupsForUser_userPoolId :: Lens' AdminListGroupsForUser Text

-- | <i>See:</i> <a>newAdminListGroupsForUserResponse</a> smart
--   constructor.
data AdminListGroupsForUserResponse
AdminListGroupsForUserResponse' :: Maybe [GroupType] -> Maybe Text -> Int -> AdminListGroupsForUserResponse

-- | The groups that the user belongs to.
[$sel:groups:AdminListGroupsForUserResponse'] :: AdminListGroupsForUserResponse -> Maybe [GroupType]

-- | An identifier that was returned from the previous call to this
--   operation, which can be used to return the next set of items in the
--   list.
[$sel:nextToken:AdminListGroupsForUserResponse'] :: AdminListGroupsForUserResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:AdminListGroupsForUserResponse'] :: AdminListGroupsForUserResponse -> Int

-- | Create a value of <a>AdminListGroupsForUserResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:groups:AdminListGroupsForUserResponse'</a>,
--   <a>adminListGroupsForUserResponse_groups</a> - The groups that the
--   user belongs to.
--   
--   <a>$sel:nextToken:AdminListGroupsForUser'</a>,
--   <a>adminListGroupsForUserResponse_nextToken</a> - An identifier that
--   was returned from the previous call to this operation, which can be
--   used to return the next set of items in the list.
--   
--   <a>$sel:httpStatus:AdminListGroupsForUserResponse'</a>,
--   <a>adminListGroupsForUserResponse_httpStatus</a> - The response's http
--   status code.
newAdminListGroupsForUserResponse :: Int -> AdminListGroupsForUserResponse

-- | The groups that the user belongs to.
adminListGroupsForUserResponse_groups :: Lens' AdminListGroupsForUserResponse (Maybe [GroupType])

-- | An identifier that was returned from the previous call to this
--   operation, which can be used to return the next set of items in the
--   list.
adminListGroupsForUserResponse_nextToken :: Lens' AdminListGroupsForUserResponse (Maybe Text)

-- | The response's http status code.
adminListGroupsForUserResponse_httpStatus :: Lens' AdminListGroupsForUserResponse Int
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.AdminListGroupsForUser.AdminListGroupsForUser
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.AdminListGroupsForUser.AdminListGroupsForUser
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.AdminListGroupsForUser.AdminListGroupsForUser
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.AdminListGroupsForUser.AdminListGroupsForUserResponse
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.AdminListGroupsForUser.AdminListGroupsForUserResponse
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.AdminListGroupsForUser.AdminListGroupsForUserResponse
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.AdminListGroupsForUser.AdminListGroupsForUserResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CognitoIdentityProvider.AdminListGroupsForUser.AdminListGroupsForUser
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.AdminListGroupsForUser.AdminListGroupsForUserResponse
instance Network.AWS.Pager.AWSPager Network.AWS.CognitoIdentityProvider.AdminListGroupsForUser.AdminListGroupsForUser
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.AdminListGroupsForUser.AdminListGroupsForUser
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.AdminListGroupsForUser.AdminListGroupsForUser
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CognitoIdentityProvider.AdminListGroupsForUser.AdminListGroupsForUser
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.AdminListGroupsForUser.AdminListGroupsForUser
instance Network.AWS.Data.Path.ToPath Network.AWS.CognitoIdentityProvider.AdminListGroupsForUser.AdminListGroupsForUser
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentityProvider.AdminListGroupsForUser.AdminListGroupsForUser


-- | Lists devices, as an administrator.
--   
--   Calling this action requires developer credentials.
module Network.AWS.CognitoIdentityProvider.AdminListDevices

-- | Represents the request to list devices, as an administrator.
--   
--   <i>See:</i> <a>newAdminListDevices</a> smart constructor.
data AdminListDevices
AdminListDevices' :: Maybe Text -> Maybe Natural -> Text -> Sensitive Text -> AdminListDevices

-- | The pagination token.
[$sel:paginationToken:AdminListDevices'] :: AdminListDevices -> Maybe Text

-- | The limit of the devices request.
[$sel:limit:AdminListDevices'] :: AdminListDevices -> Maybe Natural

-- | The user pool ID.
[$sel:userPoolId:AdminListDevices'] :: AdminListDevices -> Text

-- | The user name.
[$sel:username:AdminListDevices'] :: AdminListDevices -> Sensitive Text

-- | Create a value of <a>AdminListDevices</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:paginationToken:AdminListDevices'</a>,
--   <a>adminListDevices_paginationToken</a> - The pagination token.
--   
--   <a>$sel:limit:AdminListDevices'</a>, <a>adminListDevices_limit</a> -
--   The limit of the devices request.
--   
--   <a>$sel:userPoolId:AdminListDevices'</a>,
--   <a>adminListDevices_userPoolId</a> - The user pool ID.
--   
--   <a>$sel:username:AdminListDevices'</a>,
--   <a>adminListDevices_username</a> - The user name.
newAdminListDevices :: Text -> Text -> AdminListDevices

-- | The pagination token.
adminListDevices_paginationToken :: Lens' AdminListDevices (Maybe Text)

-- | The limit of the devices request.
adminListDevices_limit :: Lens' AdminListDevices (Maybe Natural)

-- | The user pool ID.
adminListDevices_userPoolId :: Lens' AdminListDevices Text

-- | The user name.
adminListDevices_username :: Lens' AdminListDevices Text

-- | Lists the device's response, as an administrator.
--   
--   <i>See:</i> <a>newAdminListDevicesResponse</a> smart constructor.
data AdminListDevicesResponse
AdminListDevicesResponse' :: Maybe Text -> Maybe [DeviceType] -> Int -> AdminListDevicesResponse

-- | The pagination token.
[$sel:paginationToken:AdminListDevicesResponse'] :: AdminListDevicesResponse -> Maybe Text

-- | The devices in the list of devices response.
[$sel:devices:AdminListDevicesResponse'] :: AdminListDevicesResponse -> Maybe [DeviceType]

-- | The response's http status code.
[$sel:httpStatus:AdminListDevicesResponse'] :: AdminListDevicesResponse -> Int

-- | Create a value of <a>AdminListDevicesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:paginationToken:AdminListDevices'</a>,
--   <a>adminListDevicesResponse_paginationToken</a> - The pagination
--   token.
--   
--   <a>$sel:devices:AdminListDevicesResponse'</a>,
--   <a>adminListDevicesResponse_devices</a> - The devices in the list of
--   devices response.
--   
--   <a>$sel:httpStatus:AdminListDevicesResponse'</a>,
--   <a>adminListDevicesResponse_httpStatus</a> - The response's http
--   status code.
newAdminListDevicesResponse :: Int -> AdminListDevicesResponse

-- | The pagination token.
adminListDevicesResponse_paginationToken :: Lens' AdminListDevicesResponse (Maybe Text)

-- | The devices in the list of devices response.
adminListDevicesResponse_devices :: Lens' AdminListDevicesResponse (Maybe [DeviceType])

-- | The response's http status code.
adminListDevicesResponse_httpStatus :: Lens' AdminListDevicesResponse Int
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.AdminListDevices.AdminListDevices
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.AdminListDevices.AdminListDevices
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.AdminListDevices.AdminListDevices
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.AdminListDevices.AdminListDevicesResponse
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.AdminListDevices.AdminListDevicesResponse
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.AdminListDevices.AdminListDevicesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CognitoIdentityProvider.AdminListDevices.AdminListDevices
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.AdminListDevices.AdminListDevicesResponse
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.AdminListDevices.AdminListDevices
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.AdminListDevices.AdminListDevices
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CognitoIdentityProvider.AdminListDevices.AdminListDevices
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.AdminListDevices.AdminListDevices
instance Network.AWS.Data.Path.ToPath Network.AWS.CognitoIdentityProvider.AdminListDevices.AdminListDevices
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentityProvider.AdminListDevices.AdminListDevices


-- | Links an existing user account in a user pool
--   (<tt>DestinationUser</tt>) to an identity from an external identity
--   provider (<tt>SourceUser</tt>) based on a specified attribute name and
--   value from the external identity provider. This allows you to create a
--   link from the existing user account to an external federated user
--   identity that has not yet been used to sign in, so that the federated
--   user identity can be used to sign in as the existing user account.
--   
--   For example, if there is an existing user with a username and
--   password, this API links that user to a federated user identity, so
--   that when the federated user identity is used, the user signs in as
--   the existing user account.
--   
--   The maximum number of federated identities linked to a user is 5.
--   
--   Because this API allows a user with an external federated identity to
--   sign in as an existing user in the user pool, it is critical that it
--   only be used with external identity providers and provider attributes
--   that have been trusted by the application owner.
--   
--   This action is enabled only for admin access and requires developer
--   credentials.
module Network.AWS.CognitoIdentityProvider.AdminLinkProviderForUser

-- | <i>See:</i> <a>newAdminLinkProviderForUser</a> smart constructor.
data AdminLinkProviderForUser
AdminLinkProviderForUser' :: Text -> ProviderUserIdentifierType -> ProviderUserIdentifierType -> AdminLinkProviderForUser

-- | The user pool ID for the user pool.
[$sel:userPoolId:AdminLinkProviderForUser'] :: AdminLinkProviderForUser -> Text

-- | The existing user in the user pool to be linked to the external
--   identity provider user account. Can be a native (Username + Password)
--   Cognito User Pools user or a federated user (for example, a SAML or
--   Facebook user). If the user doesn't exist, an exception is thrown.
--   This is the user that is returned when the new user (with the linked
--   identity provider attribute) signs in.
--   
--   For a native username + password user, the
--   <tt>ProviderAttributeValue</tt> for the <tt>DestinationUser</tt>
--   should be the username in the user pool. For a federated user, it
--   should be the provider-specific <tt>user_id</tt>.
--   
--   The <tt>ProviderAttributeName</tt> of the <tt>DestinationUser</tt> is
--   ignored.
--   
--   The <tt>ProviderName</tt> should be set to <tt>Cognito</tt> for users
--   in Cognito user pools.
[$sel:destinationUser:AdminLinkProviderForUser'] :: AdminLinkProviderForUser -> ProviderUserIdentifierType

-- | An external identity provider account for a user who does not
--   currently exist yet in the user pool. This user must be a federated
--   user (for example, a SAML or Facebook user), not another native user.
--   
--   If the <tt>SourceUser</tt> is a federated social identity provider
--   user (Facebook, Google, or Login with Amazon), you must set the
--   <tt>ProviderAttributeName</tt> to <tt>Cognito_Subject</tt>. For social
--   identity providers, the <tt>ProviderName</tt> will be
--   <tt>Facebook</tt>, <tt>Google</tt>, or <tt>LoginWithAmazon</tt>, and
--   Cognito will automatically parse the Facebook, Google, and Login with
--   Amazon tokens for <tt>id</tt>, <tt>sub</tt>, and <tt>user_id</tt>,
--   respectively. The <tt>ProviderAttributeValue</tt> for the user must be
--   the same value as the <tt>id</tt>, <tt>sub</tt>, or <tt>user_id</tt>
--   value found in the social identity provider token.
--   
--   For SAML, the <tt>ProviderAttributeName</tt> can be any value that
--   matches a claim in the SAML assertion. If you wish to link SAML users
--   based on the subject of the SAML assertion, you should map the subject
--   to a claim through the SAML identity provider and submit that claim
--   name as the <tt>ProviderAttributeName</tt>. If you set
--   <tt>ProviderAttributeName</tt> to <tt>Cognito_Subject</tt>, Cognito
--   will automatically parse the default unique identifier found in the
--   subject from the SAML token.
[$sel:sourceUser:AdminLinkProviderForUser'] :: AdminLinkProviderForUser -> ProviderUserIdentifierType

-- | Create a value of <a>AdminLinkProviderForUser</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userPoolId:AdminLinkProviderForUser'</a>,
--   <a>adminLinkProviderForUser_userPoolId</a> - The user pool ID for the
--   user pool.
--   
--   <a>$sel:destinationUser:AdminLinkProviderForUser'</a>,
--   <a>adminLinkProviderForUser_destinationUser</a> - The existing user in
--   the user pool to be linked to the external identity provider user
--   account. Can be a native (Username + Password) Cognito User Pools user
--   or a federated user (for example, a SAML or Facebook user). If the
--   user doesn't exist, an exception is thrown. This is the user that is
--   returned when the new user (with the linked identity provider
--   attribute) signs in.
--   
--   For a native username + password user, the
--   <tt>ProviderAttributeValue</tt> for the <tt>DestinationUser</tt>
--   should be the username in the user pool. For a federated user, it
--   should be the provider-specific <tt>user_id</tt>.
--   
--   The <tt>ProviderAttributeName</tt> of the <tt>DestinationUser</tt> is
--   ignored.
--   
--   The <tt>ProviderName</tt> should be set to <tt>Cognito</tt> for users
--   in Cognito user pools.
--   
--   <a>$sel:sourceUser:AdminLinkProviderForUser'</a>,
--   <a>adminLinkProviderForUser_sourceUser</a> - An external identity
--   provider account for a user who does not currently exist yet in the
--   user pool. This user must be a federated user (for example, a SAML or
--   Facebook user), not another native user.
--   
--   If the <tt>SourceUser</tt> is a federated social identity provider
--   user (Facebook, Google, or Login with Amazon), you must set the
--   <tt>ProviderAttributeName</tt> to <tt>Cognito_Subject</tt>. For social
--   identity providers, the <tt>ProviderName</tt> will be
--   <tt>Facebook</tt>, <tt>Google</tt>, or <tt>LoginWithAmazon</tt>, and
--   Cognito will automatically parse the Facebook, Google, and Login with
--   Amazon tokens for <tt>id</tt>, <tt>sub</tt>, and <tt>user_id</tt>,
--   respectively. The <tt>ProviderAttributeValue</tt> for the user must be
--   the same value as the <tt>id</tt>, <tt>sub</tt>, or <tt>user_id</tt>
--   value found in the social identity provider token.
--   
--   For SAML, the <tt>ProviderAttributeName</tt> can be any value that
--   matches a claim in the SAML assertion. If you wish to link SAML users
--   based on the subject of the SAML assertion, you should map the subject
--   to a claim through the SAML identity provider and submit that claim
--   name as the <tt>ProviderAttributeName</tt>. If you set
--   <tt>ProviderAttributeName</tt> to <tt>Cognito_Subject</tt>, Cognito
--   will automatically parse the default unique identifier found in the
--   subject from the SAML token.
newAdminLinkProviderForUser :: Text -> ProviderUserIdentifierType -> ProviderUserIdentifierType -> AdminLinkProviderForUser

-- | The user pool ID for the user pool.
adminLinkProviderForUser_userPoolId :: Lens' AdminLinkProviderForUser Text

-- | The existing user in the user pool to be linked to the external
--   identity provider user account. Can be a native (Username + Password)
--   Cognito User Pools user or a federated user (for example, a SAML or
--   Facebook user). If the user doesn't exist, an exception is thrown.
--   This is the user that is returned when the new user (with the linked
--   identity provider attribute) signs in.
--   
--   For a native username + password user, the
--   <tt>ProviderAttributeValue</tt> for the <tt>DestinationUser</tt>
--   should be the username in the user pool. For a federated user, it
--   should be the provider-specific <tt>user_id</tt>.
--   
--   The <tt>ProviderAttributeName</tt> of the <tt>DestinationUser</tt> is
--   ignored.
--   
--   The <tt>ProviderName</tt> should be set to <tt>Cognito</tt> for users
--   in Cognito user pools.
adminLinkProviderForUser_destinationUser :: Lens' AdminLinkProviderForUser ProviderUserIdentifierType

-- | An external identity provider account for a user who does not
--   currently exist yet in the user pool. This user must be a federated
--   user (for example, a SAML or Facebook user), not another native user.
--   
--   If the <tt>SourceUser</tt> is a federated social identity provider
--   user (Facebook, Google, or Login with Amazon), you must set the
--   <tt>ProviderAttributeName</tt> to <tt>Cognito_Subject</tt>. For social
--   identity providers, the <tt>ProviderName</tt> will be
--   <tt>Facebook</tt>, <tt>Google</tt>, or <tt>LoginWithAmazon</tt>, and
--   Cognito will automatically parse the Facebook, Google, and Login with
--   Amazon tokens for <tt>id</tt>, <tt>sub</tt>, and <tt>user_id</tt>,
--   respectively. The <tt>ProviderAttributeValue</tt> for the user must be
--   the same value as the <tt>id</tt>, <tt>sub</tt>, or <tt>user_id</tt>
--   value found in the social identity provider token.
--   
--   For SAML, the <tt>ProviderAttributeName</tt> can be any value that
--   matches a claim in the SAML assertion. If you wish to link SAML users
--   based on the subject of the SAML assertion, you should map the subject
--   to a claim through the SAML identity provider and submit that claim
--   name as the <tt>ProviderAttributeName</tt>. If you set
--   <tt>ProviderAttributeName</tt> to <tt>Cognito_Subject</tt>, Cognito
--   will automatically parse the default unique identifier found in the
--   subject from the SAML token.
adminLinkProviderForUser_sourceUser :: Lens' AdminLinkProviderForUser ProviderUserIdentifierType

-- | <i>See:</i> <a>newAdminLinkProviderForUserResponse</a> smart
--   constructor.
data AdminLinkProviderForUserResponse
AdminLinkProviderForUserResponse' :: Int -> AdminLinkProviderForUserResponse

-- | The response's http status code.
[$sel:httpStatus:AdminLinkProviderForUserResponse'] :: AdminLinkProviderForUserResponse -> Int

-- | Create a value of <a>AdminLinkProviderForUserResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:AdminLinkProviderForUserResponse'</a>,
--   <a>adminLinkProviderForUserResponse_httpStatus</a> - The response's
--   http status code.
newAdminLinkProviderForUserResponse :: Int -> AdminLinkProviderForUserResponse

-- | The response's http status code.
adminLinkProviderForUserResponse_httpStatus :: Lens' AdminLinkProviderForUserResponse Int
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.AdminLinkProviderForUser.AdminLinkProviderForUser
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.AdminLinkProviderForUser.AdminLinkProviderForUser
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.AdminLinkProviderForUser.AdminLinkProviderForUser
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.AdminLinkProviderForUser.AdminLinkProviderForUser
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.AdminLinkProviderForUser.AdminLinkProviderForUserResponse
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.AdminLinkProviderForUser.AdminLinkProviderForUserResponse
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.AdminLinkProviderForUser.AdminLinkProviderForUserResponse
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.AdminLinkProviderForUser.AdminLinkProviderForUserResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CognitoIdentityProvider.AdminLinkProviderForUser.AdminLinkProviderForUser
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.AdminLinkProviderForUser.AdminLinkProviderForUserResponse
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.AdminLinkProviderForUser.AdminLinkProviderForUser
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.AdminLinkProviderForUser.AdminLinkProviderForUser
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CognitoIdentityProvider.AdminLinkProviderForUser.AdminLinkProviderForUser
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.AdminLinkProviderForUser.AdminLinkProviderForUser
instance Network.AWS.Data.Path.ToPath Network.AWS.CognitoIdentityProvider.AdminLinkProviderForUser.AdminLinkProviderForUser
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentityProvider.AdminLinkProviderForUser.AdminLinkProviderForUser


-- | Initiates the authentication flow, as an administrator.
--   
--   This action might generate an SMS text message. Starting June 1, 2021,
--   U.S. telecom carriers require that you register an origination phone
--   number before you can send SMS messages to U.S. phone numbers. If you
--   use SMS text messages in Amazon Cognito, you must register a phone
--   number with <a>Amazon Pinpoint</a>. Cognito will use the the
--   registered number automatically. Otherwise, Cognito users that must
--   receive SMS messages might be unable to sign up, activate their
--   accounts, or sign in.
--   
--   If you have never used SMS text messages with Amazon Cognito or any
--   other Amazon Web Service, Amazon SNS might place your account in SMS
--   sandbox. In
--   <i>&lt;https:</i><i>docs.aws.amazon.com</i>sns<i>latest</i>dg<i>sns-sms-sandbox.html
--   sandbox mode&gt;</i> , you’ll have limitations, such as sending
--   messages to only verified phone numbers. After testing in the sandbox
--   environment, you can move out of the SMS sandbox and into production.
--   For more information, see <a>SMS message settings for Cognito User
--   Pools</a> in the <i>Amazon Cognito Developer Guide</i>.
--   
--   Calling this action requires developer credentials.
module Network.AWS.CognitoIdentityProvider.AdminInitiateAuth

-- | Initiates the authorization request, as an administrator.
--   
--   <i>See:</i> <a>newAdminInitiateAuth</a> smart constructor.
data AdminInitiateAuth
AdminInitiateAuth' :: Maybe (HashMap Text Text) -> Maybe ContextDataType -> Maybe AnalyticsMetadataType -> Maybe (Sensitive (HashMap Text Text)) -> Text -> Sensitive Text -> AuthFlowType -> AdminInitiateAuth

-- | A map of custom key-value pairs that you can provide as input for
--   certain custom workflows that this action triggers.
--   
--   You create custom workflows by assigning Lambda functions to user pool
--   triggers. When you use the AdminInitiateAuth API action, Amazon
--   Cognito invokes the Lambda functions that are specified for various
--   triggers. The ClientMetadata value is passed as input to the functions
--   for only the following triggers:
--   
--   <ul>
--   <li>Pre signup</li>
--   <li>Pre authentication</li>
--   <li>User migration</li>
--   </ul>
--   
--   When Amazon Cognito invokes the functions for these triggers, it
--   passes a JSON payload, which the function receives as input. This
--   payload contains a <tt>validationData</tt> attribute, which provides
--   the data that you assigned to the ClientMetadata parameter in your
--   AdminInitiateAuth request. In your function code in Lambda, you can
--   process the <tt>validationData</tt> value to enhance your workflow for
--   your specific needs.
--   
--   When you use the AdminInitiateAuth API action, Amazon Cognito also
--   invokes the functions for the following triggers, but it does not
--   provide the ClientMetadata value as input:
--   
--   <ul>
--   <li>Post authentication</li>
--   <li>Custom message</li>
--   <li>Pre token generation</li>
--   <li>Create auth challenge</li>
--   <li>Define auth challenge</li>
--   <li>Verify auth challenge</li>
--   </ul>
--   
--   For more information, see <a>Customizing User Pool Workflows with
--   Lambda Triggers</a> in the <i>Amazon Cognito Developer Guide</i>.
--   
--   Take the following limitations into consideration when you use the
--   ClientMetadata parameter:
--   
--   <ul>
--   <li>Amazon Cognito does not store the ClientMetadata value. This data
--   is available only to Lambda triggers that are assigned to a user pool
--   to support custom workflows. If your user pool configuration does not
--   include triggers, the ClientMetadata parameter serves no purpose.</li>
--   <li>Amazon Cognito does not validate the ClientMetadata value.</li>
--   <li>Amazon Cognito does not encrypt the the ClientMetadata value, so
--   don't use it to provide sensitive information.</li>
--   </ul>
[$sel:clientMetadata:AdminInitiateAuth'] :: AdminInitiateAuth -> Maybe (HashMap Text Text)

-- | Contextual data such as the user's device fingerprint, IP address, or
--   location used for evaluating the risk of an unexpected event by Amazon
--   Cognito advanced security.
[$sel:contextData:AdminInitiateAuth'] :: AdminInitiateAuth -> Maybe ContextDataType

-- | The analytics metadata for collecting Amazon Pinpoint metrics for
--   <tt>AdminInitiateAuth</tt> calls.
[$sel:analyticsMetadata:AdminInitiateAuth'] :: AdminInitiateAuth -> Maybe AnalyticsMetadataType

-- | The authentication parameters. These are inputs corresponding to the
--   <tt>AuthFlow</tt> that you are invoking. The required values depend on
--   the value of <tt>AuthFlow</tt>:
--   
--   <ul>
--   <li>For <tt>USER_SRP_AUTH</tt>: <tt>USERNAME</tt> (required),
--   <tt>SRP_A</tt> (required), <tt>SECRET_HASH</tt> (required if the app
--   client is configured with a client secret), <tt>DEVICE_KEY</tt>.</li>
--   <li>For <tt>REFRESH_TOKEN_AUTH/REFRESH_TOKEN</tt>:
--   <tt>REFRESH_TOKEN</tt> (required), <tt>SECRET_HASH</tt> (required if
--   the app client is configured with a client secret),
--   <tt>DEVICE_KEY</tt>.</li>
--   <li>For <tt>ADMIN_NO_SRP_AUTH</tt>: <tt>USERNAME</tt> (required),
--   <tt>SECRET_HASH</tt> (if app client is configured with client secret),
--   <tt>PASSWORD</tt> (required), <tt>DEVICE_KEY</tt>.</li>
--   <li>For <tt>CUSTOM_AUTH</tt>: <tt>USERNAME</tt> (required),
--   <tt>SECRET_HASH</tt> (if app client is configured with client secret),
--   <tt>DEVICE_KEY</tt>. To start the authentication flow with password
--   verification, include <tt>ChallengeName: SRP_A</tt> and <tt>SRP_A:
--   (The SRP_A Value)</tt>.</li>
--   </ul>
[$sel:authParameters:AdminInitiateAuth'] :: AdminInitiateAuth -> Maybe (Sensitive (HashMap Text Text))

-- | The ID of the Amazon Cognito user pool.
[$sel:userPoolId:AdminInitiateAuth'] :: AdminInitiateAuth -> Text

-- | The app client ID.
[$sel:clientId:AdminInitiateAuth'] :: AdminInitiateAuth -> Sensitive Text

-- | The authentication flow for this call to execute. The API action will
--   depend on this value. For example:
--   
--   <ul>
--   <li><tt>REFRESH_TOKEN_AUTH</tt> will take in a valid refresh token and
--   return new tokens.</li>
--   <li><tt>USER_SRP_AUTH</tt> will take in <tt>USERNAME</tt> and
--   <tt>SRP_A</tt> and return the SRP variables to be used for next
--   challenge execution.</li>
--   <li><tt>USER_PASSWORD_AUTH</tt> will take in <tt>USERNAME</tt> and
--   <tt>PASSWORD</tt> and return the next challenge or tokens.</li>
--   </ul>
--   
--   Valid values include:
--   
--   <ul>
--   <li><tt>USER_SRP_AUTH</tt>: Authentication flow for the Secure Remote
--   Password (SRP) protocol.</li>
--   <li><tt>REFRESH_TOKEN_AUTH</tt>/<tt>REFRESH_TOKEN</tt>: Authentication
--   flow for refreshing the access token and ID token by supplying a valid
--   refresh token.</li>
--   <li><tt>CUSTOM_AUTH</tt>: Custom authentication flow.</li>
--   <li><tt>ADMIN_NO_SRP_AUTH</tt>: Non-SRP authentication flow; you can
--   pass in the USERNAME and PASSWORD directly if the flow is enabled for
--   calling the app client.</li>
--   <li><tt>USER_PASSWORD_AUTH</tt>: Non-SRP authentication flow; USERNAME
--   and PASSWORD are passed directly. If a user migration Lambda trigger
--   is set, this flow will invoke the user migration Lambda if the
--   USERNAME is not found in the user pool.</li>
--   <li><tt>ADMIN_USER_PASSWORD_AUTH</tt>: Admin-based user password
--   authentication. This replaces the <tt>ADMIN_NO_SRP_AUTH</tt>
--   authentication flow. In this flow, Cognito receives the password in
--   the request instead of using the SRP process to verify passwords.</li>
--   </ul>
[$sel:authFlow:AdminInitiateAuth'] :: AdminInitiateAuth -> AuthFlowType

-- | Create a value of <a>AdminInitiateAuth</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientMetadata:AdminInitiateAuth'</a>,
--   <a>adminInitiateAuth_clientMetadata</a> - A map of custom key-value
--   pairs that you can provide as input for certain custom workflows that
--   this action triggers.
--   
--   You create custom workflows by assigning Lambda functions to user pool
--   triggers. When you use the AdminInitiateAuth API action, Amazon
--   Cognito invokes the Lambda functions that are specified for various
--   triggers. The ClientMetadata value is passed as input to the functions
--   for only the following triggers:
--   
--   <ul>
--   <li>Pre signup</li>
--   <li>Pre authentication</li>
--   <li>User migration</li>
--   </ul>
--   
--   When Amazon Cognito invokes the functions for these triggers, it
--   passes a JSON payload, which the function receives as input. This
--   payload contains a <tt>validationData</tt> attribute, which provides
--   the data that you assigned to the ClientMetadata parameter in your
--   AdminInitiateAuth request. In your function code in Lambda, you can
--   process the <tt>validationData</tt> value to enhance your workflow for
--   your specific needs.
--   
--   When you use the AdminInitiateAuth API action, Amazon Cognito also
--   invokes the functions for the following triggers, but it does not
--   provide the ClientMetadata value as input:
--   
--   <ul>
--   <li>Post authentication</li>
--   <li>Custom message</li>
--   <li>Pre token generation</li>
--   <li>Create auth challenge</li>
--   <li>Define auth challenge</li>
--   <li>Verify auth challenge</li>
--   </ul>
--   
--   For more information, see <a>Customizing User Pool Workflows with
--   Lambda Triggers</a> in the <i>Amazon Cognito Developer Guide</i>.
--   
--   Take the following limitations into consideration when you use the
--   ClientMetadata parameter:
--   
--   <ul>
--   <li>Amazon Cognito does not store the ClientMetadata value. This data
--   is available only to Lambda triggers that are assigned to a user pool
--   to support custom workflows. If your user pool configuration does not
--   include triggers, the ClientMetadata parameter serves no purpose.</li>
--   <li>Amazon Cognito does not validate the ClientMetadata value.</li>
--   <li>Amazon Cognito does not encrypt the the ClientMetadata value, so
--   don't use it to provide sensitive information.</li>
--   </ul>
--   
--   <a>$sel:contextData:AdminInitiateAuth'</a>,
--   <a>adminInitiateAuth_contextData</a> - Contextual data such as the
--   user's device fingerprint, IP address, or location used for evaluating
--   the risk of an unexpected event by Amazon Cognito advanced security.
--   
--   <a>$sel:analyticsMetadata:AdminInitiateAuth'</a>,
--   <a>adminInitiateAuth_analyticsMetadata</a> - The analytics metadata
--   for collecting Amazon Pinpoint metrics for <tt>AdminInitiateAuth</tt>
--   calls.
--   
--   <a>$sel:authParameters:AdminInitiateAuth'</a>,
--   <a>adminInitiateAuth_authParameters</a> - The authentication
--   parameters. These are inputs corresponding to the <tt>AuthFlow</tt>
--   that you are invoking. The required values depend on the value of
--   <tt>AuthFlow</tt>:
--   
--   <ul>
--   <li>For <tt>USER_SRP_AUTH</tt>: <tt>USERNAME</tt> (required),
--   <tt>SRP_A</tt> (required), <tt>SECRET_HASH</tt> (required if the app
--   client is configured with a client secret), <tt>DEVICE_KEY</tt>.</li>
--   <li>For <tt>REFRESH_TOKEN_AUTH/REFRESH_TOKEN</tt>:
--   <tt>REFRESH_TOKEN</tt> (required), <tt>SECRET_HASH</tt> (required if
--   the app client is configured with a client secret),
--   <tt>DEVICE_KEY</tt>.</li>
--   <li>For <tt>ADMIN_NO_SRP_AUTH</tt>: <tt>USERNAME</tt> (required),
--   <tt>SECRET_HASH</tt> (if app client is configured with client secret),
--   <tt>PASSWORD</tt> (required), <tt>DEVICE_KEY</tt>.</li>
--   <li>For <tt>CUSTOM_AUTH</tt>: <tt>USERNAME</tt> (required),
--   <tt>SECRET_HASH</tt> (if app client is configured with client secret),
--   <tt>DEVICE_KEY</tt>. To start the authentication flow with password
--   verification, include <tt>ChallengeName: SRP_A</tt> and <tt>SRP_A:
--   (The SRP_A Value)</tt>.</li>
--   </ul>
--   
--   <a>$sel:userPoolId:AdminInitiateAuth'</a>,
--   <a>adminInitiateAuth_userPoolId</a> - The ID of the Amazon Cognito
--   user pool.
--   
--   <a>$sel:clientId:AdminInitiateAuth'</a>,
--   <a>adminInitiateAuth_clientId</a> - The app client ID.
--   
--   <a>$sel:authFlow:AdminInitiateAuth'</a>,
--   <a>adminInitiateAuth_authFlow</a> - The authentication flow for this
--   call to execute. The API action will depend on this value. For
--   example:
--   
--   <ul>
--   <li><tt>REFRESH_TOKEN_AUTH</tt> will take in a valid refresh token and
--   return new tokens.</li>
--   <li><tt>USER_SRP_AUTH</tt> will take in <tt>USERNAME</tt> and
--   <tt>SRP_A</tt> and return the SRP variables to be used for next
--   challenge execution.</li>
--   <li><tt>USER_PASSWORD_AUTH</tt> will take in <tt>USERNAME</tt> and
--   <tt>PASSWORD</tt> and return the next challenge or tokens.</li>
--   </ul>
--   
--   Valid values include:
--   
--   <ul>
--   <li><tt>USER_SRP_AUTH</tt>: Authentication flow for the Secure Remote
--   Password (SRP) protocol.</li>
--   <li><tt>REFRESH_TOKEN_AUTH</tt>/<tt>REFRESH_TOKEN</tt>: Authentication
--   flow for refreshing the access token and ID token by supplying a valid
--   refresh token.</li>
--   <li><tt>CUSTOM_AUTH</tt>: Custom authentication flow.</li>
--   <li><tt>ADMIN_NO_SRP_AUTH</tt>: Non-SRP authentication flow; you can
--   pass in the USERNAME and PASSWORD directly if the flow is enabled for
--   calling the app client.</li>
--   <li><tt>USER_PASSWORD_AUTH</tt>: Non-SRP authentication flow; USERNAME
--   and PASSWORD are passed directly. If a user migration Lambda trigger
--   is set, this flow will invoke the user migration Lambda if the
--   USERNAME is not found in the user pool.</li>
--   <li><tt>ADMIN_USER_PASSWORD_AUTH</tt>: Admin-based user password
--   authentication. This replaces the <tt>ADMIN_NO_SRP_AUTH</tt>
--   authentication flow. In this flow, Cognito receives the password in
--   the request instead of using the SRP process to verify passwords.</li>
--   </ul>
newAdminInitiateAuth :: Text -> Text -> AuthFlowType -> AdminInitiateAuth

-- | A map of custom key-value pairs that you can provide as input for
--   certain custom workflows that this action triggers.
--   
--   You create custom workflows by assigning Lambda functions to user pool
--   triggers. When you use the AdminInitiateAuth API action, Amazon
--   Cognito invokes the Lambda functions that are specified for various
--   triggers. The ClientMetadata value is passed as input to the functions
--   for only the following triggers:
--   
--   <ul>
--   <li>Pre signup</li>
--   <li>Pre authentication</li>
--   <li>User migration</li>
--   </ul>
--   
--   When Amazon Cognito invokes the functions for these triggers, it
--   passes a JSON payload, which the function receives as input. This
--   payload contains a <tt>validationData</tt> attribute, which provides
--   the data that you assigned to the ClientMetadata parameter in your
--   AdminInitiateAuth request. In your function code in Lambda, you can
--   process the <tt>validationData</tt> value to enhance your workflow for
--   your specific needs.
--   
--   When you use the AdminInitiateAuth API action, Amazon Cognito also
--   invokes the functions for the following triggers, but it does not
--   provide the ClientMetadata value as input:
--   
--   <ul>
--   <li>Post authentication</li>
--   <li>Custom message</li>
--   <li>Pre token generation</li>
--   <li>Create auth challenge</li>
--   <li>Define auth challenge</li>
--   <li>Verify auth challenge</li>
--   </ul>
--   
--   For more information, see <a>Customizing User Pool Workflows with
--   Lambda Triggers</a> in the <i>Amazon Cognito Developer Guide</i>.
--   
--   Take the following limitations into consideration when you use the
--   ClientMetadata parameter:
--   
--   <ul>
--   <li>Amazon Cognito does not store the ClientMetadata value. This data
--   is available only to Lambda triggers that are assigned to a user pool
--   to support custom workflows. If your user pool configuration does not
--   include triggers, the ClientMetadata parameter serves no purpose.</li>
--   <li>Amazon Cognito does not validate the ClientMetadata value.</li>
--   <li>Amazon Cognito does not encrypt the the ClientMetadata value, so
--   don't use it to provide sensitive information.</li>
--   </ul>
adminInitiateAuth_clientMetadata :: Lens' AdminInitiateAuth (Maybe (HashMap Text Text))

-- | Contextual data such as the user's device fingerprint, IP address, or
--   location used for evaluating the risk of an unexpected event by Amazon
--   Cognito advanced security.
adminInitiateAuth_contextData :: Lens' AdminInitiateAuth (Maybe ContextDataType)

-- | The analytics metadata for collecting Amazon Pinpoint metrics for
--   <tt>AdminInitiateAuth</tt> calls.
adminInitiateAuth_analyticsMetadata :: Lens' AdminInitiateAuth (Maybe AnalyticsMetadataType)

-- | The authentication parameters. These are inputs corresponding to the
--   <tt>AuthFlow</tt> that you are invoking. The required values depend on
--   the value of <tt>AuthFlow</tt>:
--   
--   <ul>
--   <li>For <tt>USER_SRP_AUTH</tt>: <tt>USERNAME</tt> (required),
--   <tt>SRP_A</tt> (required), <tt>SECRET_HASH</tt> (required if the app
--   client is configured with a client secret), <tt>DEVICE_KEY</tt>.</li>
--   <li>For <tt>REFRESH_TOKEN_AUTH/REFRESH_TOKEN</tt>:
--   <tt>REFRESH_TOKEN</tt> (required), <tt>SECRET_HASH</tt> (required if
--   the app client is configured with a client secret),
--   <tt>DEVICE_KEY</tt>.</li>
--   <li>For <tt>ADMIN_NO_SRP_AUTH</tt>: <tt>USERNAME</tt> (required),
--   <tt>SECRET_HASH</tt> (if app client is configured with client secret),
--   <tt>PASSWORD</tt> (required), <tt>DEVICE_KEY</tt>.</li>
--   <li>For <tt>CUSTOM_AUTH</tt>: <tt>USERNAME</tt> (required),
--   <tt>SECRET_HASH</tt> (if app client is configured with client secret),
--   <tt>DEVICE_KEY</tt>. To start the authentication flow with password
--   verification, include <tt>ChallengeName: SRP_A</tt> and <tt>SRP_A:
--   (The SRP_A Value)</tt>.</li>
--   </ul>
adminInitiateAuth_authParameters :: Lens' AdminInitiateAuth (Maybe (HashMap Text Text))

-- | The ID of the Amazon Cognito user pool.
adminInitiateAuth_userPoolId :: Lens' AdminInitiateAuth Text

-- | The app client ID.
adminInitiateAuth_clientId :: Lens' AdminInitiateAuth Text

-- | The authentication flow for this call to execute. The API action will
--   depend on this value. For example:
--   
--   <ul>
--   <li><tt>REFRESH_TOKEN_AUTH</tt> will take in a valid refresh token and
--   return new tokens.</li>
--   <li><tt>USER_SRP_AUTH</tt> will take in <tt>USERNAME</tt> and
--   <tt>SRP_A</tt> and return the SRP variables to be used for next
--   challenge execution.</li>
--   <li><tt>USER_PASSWORD_AUTH</tt> will take in <tt>USERNAME</tt> and
--   <tt>PASSWORD</tt> and return the next challenge or tokens.</li>
--   </ul>
--   
--   Valid values include:
--   
--   <ul>
--   <li><tt>USER_SRP_AUTH</tt>: Authentication flow for the Secure Remote
--   Password (SRP) protocol.</li>
--   <li><tt>REFRESH_TOKEN_AUTH</tt>/<tt>REFRESH_TOKEN</tt>: Authentication
--   flow for refreshing the access token and ID token by supplying a valid
--   refresh token.</li>
--   <li><tt>CUSTOM_AUTH</tt>: Custom authentication flow.</li>
--   <li><tt>ADMIN_NO_SRP_AUTH</tt>: Non-SRP authentication flow; you can
--   pass in the USERNAME and PASSWORD directly if the flow is enabled for
--   calling the app client.</li>
--   <li><tt>USER_PASSWORD_AUTH</tt>: Non-SRP authentication flow; USERNAME
--   and PASSWORD are passed directly. If a user migration Lambda trigger
--   is set, this flow will invoke the user migration Lambda if the
--   USERNAME is not found in the user pool.</li>
--   <li><tt>ADMIN_USER_PASSWORD_AUTH</tt>: Admin-based user password
--   authentication. This replaces the <tt>ADMIN_NO_SRP_AUTH</tt>
--   authentication flow. In this flow, Cognito receives the password in
--   the request instead of using the SRP process to verify passwords.</li>
--   </ul>
adminInitiateAuth_authFlow :: Lens' AdminInitiateAuth AuthFlowType

-- | Initiates the authentication response, as an administrator.
--   
--   <i>See:</i> <a>newAdminInitiateAuthResponse</a> smart constructor.
data AdminInitiateAuthResponse
AdminInitiateAuthResponse' :: Maybe ChallengeNameType -> Maybe (HashMap Text Text) -> Maybe AuthenticationResultType -> Maybe Text -> Int -> AdminInitiateAuthResponse

-- | The name of the challenge which you are responding to with this call.
--   This is returned to you in the <tt>AdminInitiateAuth</tt> response if
--   you need to pass another challenge.
--   
--   <ul>
--   <li><tt>MFA_SETUP</tt>: If MFA is required, users who do not have at
--   least one of the MFA methods set up are presented with an
--   <tt>MFA_SETUP</tt> challenge. The user must set up at least one MFA
--   type to continue to authenticate.</li>
--   <li><tt>SELECT_MFA_TYPE</tt>: Selects the MFA type. Valid MFA options
--   are <tt>SMS_MFA</tt> for text SMS MFA, and <tt>SOFTWARE_TOKEN_MFA</tt>
--   for TOTP software token MFA.</li>
--   <li><tt>SMS_MFA</tt>: Next challenge is to supply an
--   <tt>SMS_MFA_CODE</tt>, delivered via SMS.</li>
--   <li><tt>PASSWORD_VERIFIER</tt>: Next challenge is to supply
--   <tt>PASSWORD_CLAIM_SIGNATURE</tt>,
--   <tt>PASSWORD_CLAIM_SECRET_BLOCK</tt>, and <tt>TIMESTAMP</tt> after the
--   client-side SRP calculations.</li>
--   <li><tt>CUSTOM_CHALLENGE</tt>: This is returned if your custom
--   authentication flow determines that the user should pass another
--   challenge before tokens are issued.</li>
--   <li><tt>DEVICE_SRP_AUTH</tt>: If device tracking was enabled on your
--   user pool and the previous challenges were passed, this challenge is
--   returned so that Amazon Cognito can start tracking this device.</li>
--   <li><tt>DEVICE_PASSWORD_VERIFIER</tt>: Similar to
--   <tt>PASSWORD_VERIFIER</tt>, but for devices only.</li>
--   <li><tt>ADMIN_NO_SRP_AUTH</tt>: This is returned if you need to
--   authenticate with <tt>USERNAME</tt> and <tt>PASSWORD</tt> directly. An
--   app client must be enabled to use this flow.</li>
--   <li><tt>NEW_PASSWORD_REQUIRED</tt>: For users who are required to
--   change their passwords after successful first login. This challenge
--   should be passed with <tt>NEW_PASSWORD</tt> and any other required
--   attributes.</li>
--   <li><tt>MFA_SETUP</tt>: For users who are required to setup an MFA
--   factor before they can sign-in. The MFA types enabled for the user
--   pool will be listed in the challenge parameters <tt>MFA_CAN_SETUP</tt>
--   value.To setup software token MFA, use the session returned here from
--   <tt>InitiateAuth</tt> as an input to <tt>AssociateSoftwareToken</tt>,
--   and use the session returned by <tt>VerifySoftwareToken</tt> as an
--   input to <tt>RespondToAuthChallenge</tt> with challenge name
--   <tt>MFA_SETUP</tt> to complete sign-in. To setup SMS MFA, users will
--   need help from an administrator to add a phone number to their account
--   and then call <tt>InitiateAuth</tt> again to restart sign-in.</li>
--   </ul>
[$sel:challengeName:AdminInitiateAuthResponse'] :: AdminInitiateAuthResponse -> Maybe ChallengeNameType

-- | The challenge parameters. These are returned to you in the
--   <tt>AdminInitiateAuth</tt> response if you need to pass another
--   challenge. The responses in this parameter should be used to compute
--   inputs to the next call (<tt>AdminRespondToAuthChallenge</tt>).
--   
--   All challenges require <tt>USERNAME</tt> and <tt>SECRET_HASH</tt> (if
--   applicable).
--   
--   The value of the <tt>USER_ID_FOR_SRP</tt> attribute will be the user's
--   actual username, not an alias (such as email address or phone number),
--   even if you specified an alias in your call to
--   <tt>AdminInitiateAuth</tt>. This is because, in the
--   <tt>AdminRespondToAuthChallenge</tt> API <tt>ChallengeResponses</tt>,
--   the <tt>USERNAME</tt> attribute cannot be an alias.
[$sel:challengeParameters:AdminInitiateAuthResponse'] :: AdminInitiateAuthResponse -> Maybe (HashMap Text Text)

-- | The result of the authentication response. This is only returned if
--   the caller does not need to pass another challenge. If the caller does
--   need to pass another challenge before it gets tokens,
--   <tt>ChallengeName</tt>, <tt>ChallengeParameters</tt>, and
--   <tt>Session</tt> are returned.
[$sel:authenticationResult:AdminInitiateAuthResponse'] :: AdminInitiateAuthResponse -> Maybe AuthenticationResultType

-- | The session which should be passed both ways in challenge-response
--   calls to the service. If <tt>AdminInitiateAuth</tt> or
--   <tt>AdminRespondToAuthChallenge</tt> API call determines that the
--   caller needs to go through another challenge, they return a session
--   with other challenge parameters. This session should be passed as it
--   is to the next <tt>AdminRespondToAuthChallenge</tt> API call.
[$sel:session:AdminInitiateAuthResponse'] :: AdminInitiateAuthResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:AdminInitiateAuthResponse'] :: AdminInitiateAuthResponse -> Int

-- | Create a value of <a>AdminInitiateAuthResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:challengeName:AdminInitiateAuthResponse'</a>,
--   <a>adminInitiateAuthResponse_challengeName</a> - The name of the
--   challenge which you are responding to with this call. This is returned
--   to you in the <tt>AdminInitiateAuth</tt> response if you need to pass
--   another challenge.
--   
--   <ul>
--   <li><tt>MFA_SETUP</tt>: If MFA is required, users who do not have at
--   least one of the MFA methods set up are presented with an
--   <tt>MFA_SETUP</tt> challenge. The user must set up at least one MFA
--   type to continue to authenticate.</li>
--   <li><tt>SELECT_MFA_TYPE</tt>: Selects the MFA type. Valid MFA options
--   are <tt>SMS_MFA</tt> for text SMS MFA, and <tt>SOFTWARE_TOKEN_MFA</tt>
--   for TOTP software token MFA.</li>
--   <li><tt>SMS_MFA</tt>: Next challenge is to supply an
--   <tt>SMS_MFA_CODE</tt>, delivered via SMS.</li>
--   <li><tt>PASSWORD_VERIFIER</tt>: Next challenge is to supply
--   <tt>PASSWORD_CLAIM_SIGNATURE</tt>,
--   <tt>PASSWORD_CLAIM_SECRET_BLOCK</tt>, and <tt>TIMESTAMP</tt> after the
--   client-side SRP calculations.</li>
--   <li><tt>CUSTOM_CHALLENGE</tt>: This is returned if your custom
--   authentication flow determines that the user should pass another
--   challenge before tokens are issued.</li>
--   <li><tt>DEVICE_SRP_AUTH</tt>: If device tracking was enabled on your
--   user pool and the previous challenges were passed, this challenge is
--   returned so that Amazon Cognito can start tracking this device.</li>
--   <li><tt>DEVICE_PASSWORD_VERIFIER</tt>: Similar to
--   <tt>PASSWORD_VERIFIER</tt>, but for devices only.</li>
--   <li><tt>ADMIN_NO_SRP_AUTH</tt>: This is returned if you need to
--   authenticate with <tt>USERNAME</tt> and <tt>PASSWORD</tt> directly. An
--   app client must be enabled to use this flow.</li>
--   <li><tt>NEW_PASSWORD_REQUIRED</tt>: For users who are required to
--   change their passwords after successful first login. This challenge
--   should be passed with <tt>NEW_PASSWORD</tt> and any other required
--   attributes.</li>
--   <li><tt>MFA_SETUP</tt>: For users who are required to setup an MFA
--   factor before they can sign-in. The MFA types enabled for the user
--   pool will be listed in the challenge parameters <tt>MFA_CAN_SETUP</tt>
--   value.To setup software token MFA, use the session returned here from
--   <tt>InitiateAuth</tt> as an input to <tt>AssociateSoftwareToken</tt>,
--   and use the session returned by <tt>VerifySoftwareToken</tt> as an
--   input to <tt>RespondToAuthChallenge</tt> with challenge name
--   <tt>MFA_SETUP</tt> to complete sign-in. To setup SMS MFA, users will
--   need help from an administrator to add a phone number to their account
--   and then call <tt>InitiateAuth</tt> again to restart sign-in.</li>
--   </ul>
--   
--   <a>$sel:challengeParameters:AdminInitiateAuthResponse'</a>,
--   <a>adminInitiateAuthResponse_challengeParameters</a> - The challenge
--   parameters. These are returned to you in the
--   <tt>AdminInitiateAuth</tt> response if you need to pass another
--   challenge. The responses in this parameter should be used to compute
--   inputs to the next call (<tt>AdminRespondToAuthChallenge</tt>).
--   
--   All challenges require <tt>USERNAME</tt> and <tt>SECRET_HASH</tt> (if
--   applicable).
--   
--   The value of the <tt>USER_ID_FOR_SRP</tt> attribute will be the user's
--   actual username, not an alias (such as email address or phone number),
--   even if you specified an alias in your call to
--   <tt>AdminInitiateAuth</tt>. This is because, in the
--   <tt>AdminRespondToAuthChallenge</tt> API <tt>ChallengeResponses</tt>,
--   the <tt>USERNAME</tt> attribute cannot be an alias.
--   
--   <a>$sel:authenticationResult:AdminInitiateAuthResponse'</a>,
--   <a>adminInitiateAuthResponse_authenticationResult</a> - The result of
--   the authentication response. This is only returned if the caller does
--   not need to pass another challenge. If the caller does need to pass
--   another challenge before it gets tokens, <tt>ChallengeName</tt>,
--   <tt>ChallengeParameters</tt>, and <tt>Session</tt> are returned.
--   
--   <a>$sel:session:AdminInitiateAuthResponse'</a>,
--   <a>adminInitiateAuthResponse_session</a> - The session which should be
--   passed both ways in challenge-response calls to the service. If
--   <tt>AdminInitiateAuth</tt> or <tt>AdminRespondToAuthChallenge</tt> API
--   call determines that the caller needs to go through another challenge,
--   they return a session with other challenge parameters. This session
--   should be passed as it is to the next
--   <tt>AdminRespondToAuthChallenge</tt> API call.
--   
--   <a>$sel:httpStatus:AdminInitiateAuthResponse'</a>,
--   <a>adminInitiateAuthResponse_httpStatus</a> - The response's http
--   status code.
newAdminInitiateAuthResponse :: Int -> AdminInitiateAuthResponse

-- | The name of the challenge which you are responding to with this call.
--   This is returned to you in the <tt>AdminInitiateAuth</tt> response if
--   you need to pass another challenge.
--   
--   <ul>
--   <li><tt>MFA_SETUP</tt>: If MFA is required, users who do not have at
--   least one of the MFA methods set up are presented with an
--   <tt>MFA_SETUP</tt> challenge. The user must set up at least one MFA
--   type to continue to authenticate.</li>
--   <li><tt>SELECT_MFA_TYPE</tt>: Selects the MFA type. Valid MFA options
--   are <tt>SMS_MFA</tt> for text SMS MFA, and <tt>SOFTWARE_TOKEN_MFA</tt>
--   for TOTP software token MFA.</li>
--   <li><tt>SMS_MFA</tt>: Next challenge is to supply an
--   <tt>SMS_MFA_CODE</tt>, delivered via SMS.</li>
--   <li><tt>PASSWORD_VERIFIER</tt>: Next challenge is to supply
--   <tt>PASSWORD_CLAIM_SIGNATURE</tt>,
--   <tt>PASSWORD_CLAIM_SECRET_BLOCK</tt>, and <tt>TIMESTAMP</tt> after the
--   client-side SRP calculations.</li>
--   <li><tt>CUSTOM_CHALLENGE</tt>: This is returned if your custom
--   authentication flow determines that the user should pass another
--   challenge before tokens are issued.</li>
--   <li><tt>DEVICE_SRP_AUTH</tt>: If device tracking was enabled on your
--   user pool and the previous challenges were passed, this challenge is
--   returned so that Amazon Cognito can start tracking this device.</li>
--   <li><tt>DEVICE_PASSWORD_VERIFIER</tt>: Similar to
--   <tt>PASSWORD_VERIFIER</tt>, but for devices only.</li>
--   <li><tt>ADMIN_NO_SRP_AUTH</tt>: This is returned if you need to
--   authenticate with <tt>USERNAME</tt> and <tt>PASSWORD</tt> directly. An
--   app client must be enabled to use this flow.</li>
--   <li><tt>NEW_PASSWORD_REQUIRED</tt>: For users who are required to
--   change their passwords after successful first login. This challenge
--   should be passed with <tt>NEW_PASSWORD</tt> and any other required
--   attributes.</li>
--   <li><tt>MFA_SETUP</tt>: For users who are required to setup an MFA
--   factor before they can sign-in. The MFA types enabled for the user
--   pool will be listed in the challenge parameters <tt>MFA_CAN_SETUP</tt>
--   value.To setup software token MFA, use the session returned here from
--   <tt>InitiateAuth</tt> as an input to <tt>AssociateSoftwareToken</tt>,
--   and use the session returned by <tt>VerifySoftwareToken</tt> as an
--   input to <tt>RespondToAuthChallenge</tt> with challenge name
--   <tt>MFA_SETUP</tt> to complete sign-in. To setup SMS MFA, users will
--   need help from an administrator to add a phone number to their account
--   and then call <tt>InitiateAuth</tt> again to restart sign-in.</li>
--   </ul>
adminInitiateAuthResponse_challengeName :: Lens' AdminInitiateAuthResponse (Maybe ChallengeNameType)

-- | The challenge parameters. These are returned to you in the
--   <tt>AdminInitiateAuth</tt> response if you need to pass another
--   challenge. The responses in this parameter should be used to compute
--   inputs to the next call (<tt>AdminRespondToAuthChallenge</tt>).
--   
--   All challenges require <tt>USERNAME</tt> and <tt>SECRET_HASH</tt> (if
--   applicable).
--   
--   The value of the <tt>USER_ID_FOR_SRP</tt> attribute will be the user's
--   actual username, not an alias (such as email address or phone number),
--   even if you specified an alias in your call to
--   <tt>AdminInitiateAuth</tt>. This is because, in the
--   <tt>AdminRespondToAuthChallenge</tt> API <tt>ChallengeResponses</tt>,
--   the <tt>USERNAME</tt> attribute cannot be an alias.
adminInitiateAuthResponse_challengeParameters :: Lens' AdminInitiateAuthResponse (Maybe (HashMap Text Text))

-- | The result of the authentication response. This is only returned if
--   the caller does not need to pass another challenge. If the caller does
--   need to pass another challenge before it gets tokens,
--   <tt>ChallengeName</tt>, <tt>ChallengeParameters</tt>, and
--   <tt>Session</tt> are returned.
adminInitiateAuthResponse_authenticationResult :: Lens' AdminInitiateAuthResponse (Maybe AuthenticationResultType)

-- | The session which should be passed both ways in challenge-response
--   calls to the service. If <tt>AdminInitiateAuth</tt> or
--   <tt>AdminRespondToAuthChallenge</tt> API call determines that the
--   caller needs to go through another challenge, they return a session
--   with other challenge parameters. This session should be passed as it
--   is to the next <tt>AdminRespondToAuthChallenge</tt> API call.
adminInitiateAuthResponse_session :: Lens' AdminInitiateAuthResponse (Maybe Text)

-- | The response's http status code.
adminInitiateAuthResponse_httpStatus :: Lens' AdminInitiateAuthResponse Int
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.AdminInitiateAuth.AdminInitiateAuth
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.AdminInitiateAuth.AdminInitiateAuth
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.AdminInitiateAuth.AdminInitiateAuth
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.AdminInitiateAuth.AdminInitiateAuthResponse
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.AdminInitiateAuth.AdminInitiateAuthResponse
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.AdminInitiateAuth.AdminInitiateAuthResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CognitoIdentityProvider.AdminInitiateAuth.AdminInitiateAuth
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.AdminInitiateAuth.AdminInitiateAuthResponse
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.AdminInitiateAuth.AdminInitiateAuth
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.AdminInitiateAuth.AdminInitiateAuth
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CognitoIdentityProvider.AdminInitiateAuth.AdminInitiateAuth
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.AdminInitiateAuth.AdminInitiateAuth
instance Network.AWS.Data.Path.ToPath Network.AWS.CognitoIdentityProvider.AdminInitiateAuth.AdminInitiateAuth
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentityProvider.AdminInitiateAuth.AdminInitiateAuth


-- | Gets the specified user by user name in a user pool as an
--   administrator. Works on any user.
--   
--   Calling this action requires developer credentials.
module Network.AWS.CognitoIdentityProvider.AdminGetUser

-- | Represents the request to get the specified user as an administrator.
--   
--   <i>See:</i> <a>newAdminGetUser</a> smart constructor.
data AdminGetUser
AdminGetUser' :: Text -> Sensitive Text -> AdminGetUser

-- | The user pool ID for the user pool where you want to get information
--   about the user.
[$sel:userPoolId:AdminGetUser'] :: AdminGetUser -> Text

-- | The user name of the user you wish to retrieve.
[$sel:username:AdminGetUser'] :: AdminGetUser -> Sensitive Text

-- | Create a value of <a>AdminGetUser</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userPoolId:AdminGetUser'</a>, <a>adminGetUser_userPoolId</a> -
--   The user pool ID for the user pool where you want to get information
--   about the user.
--   
--   <a>$sel:username:AdminGetUser'</a>, <a>adminGetUser_username</a> - The
--   user name of the user you wish to retrieve.
newAdminGetUser :: Text -> Text -> AdminGetUser

-- | The user pool ID for the user pool where you want to get information
--   about the user.
adminGetUser_userPoolId :: Lens' AdminGetUser Text

-- | The user name of the user you wish to retrieve.
adminGetUser_username :: Lens' AdminGetUser Text

-- | Represents the response from the server from the request to get the
--   specified user as an administrator.
--   
--   <i>See:</i> <a>newAdminGetUserResponse</a> smart constructor.
data AdminGetUserResponse
AdminGetUserResponse' :: Maybe Bool -> Maybe UserStatusType -> Maybe [AttributeType] -> Maybe POSIX -> Maybe [Text] -> Maybe [MFAOptionType] -> Maybe POSIX -> Maybe Text -> Int -> Sensitive Text -> AdminGetUserResponse

-- | Indicates that the status is enabled.
[$sel:enabled:AdminGetUserResponse'] :: AdminGetUserResponse -> Maybe Bool

-- | The user status. Can be one of the following:
--   
--   <ul>
--   <li>UNCONFIRMED - User has been created but not confirmed.</li>
--   <li>CONFIRMED - User has been confirmed.</li>
--   <li>ARCHIVED - User is no longer active.</li>
--   <li>COMPROMISED - User is disabled due to a potential security
--   threat.</li>
--   <li>UNKNOWN - User status is not known.</li>
--   <li>RESET_REQUIRED - User is confirmed, but the user must request a
--   code and reset his or her password before he or she can sign in.</li>
--   <li>FORCE_CHANGE_PASSWORD - The user is confirmed and the user can
--   sign in using a temporary password, but on first sign-in, the user
--   must change his or her password to a new value before doing anything
--   else.</li>
--   </ul>
[$sel:userStatus:AdminGetUserResponse'] :: AdminGetUserResponse -> Maybe UserStatusType

-- | An array of name-value pairs representing user attributes.
[$sel:userAttributes:AdminGetUserResponse'] :: AdminGetUserResponse -> Maybe [AttributeType]

-- | The date the user was created.
[$sel:userCreateDate:AdminGetUserResponse'] :: AdminGetUserResponse -> Maybe POSIX

-- | The MFA options that are enabled for the user. The possible values in
--   this list are <tt>SMS_MFA</tt> and <tt>SOFTWARE_TOKEN_MFA</tt>.
[$sel:userMFASettingList:AdminGetUserResponse'] :: AdminGetUserResponse -> Maybe [Text]

-- | <i>This response parameter is no longer supported.</i> It provides
--   information only about SMS MFA configurations. It doesn't provide
--   information about TOTP software token MFA configurations. To look up
--   information about either type of MFA configuration, use
--   UserMFASettingList instead.
[$sel:mfaOptions:AdminGetUserResponse'] :: AdminGetUserResponse -> Maybe [MFAOptionType]

-- | The date the user was last modified.
[$sel:userLastModifiedDate:AdminGetUserResponse'] :: AdminGetUserResponse -> Maybe POSIX

-- | The user's preferred MFA setting.
[$sel:preferredMfaSetting:AdminGetUserResponse'] :: AdminGetUserResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:AdminGetUserResponse'] :: AdminGetUserResponse -> Int

-- | The user name of the user about whom you are receiving information.
[$sel:username:AdminGetUserResponse'] :: AdminGetUserResponse -> Sensitive Text

-- | Create a value of <a>AdminGetUserResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:enabled:AdminGetUserResponse'</a>,
--   <a>adminGetUserResponse_enabled</a> - Indicates that the status is
--   enabled.
--   
--   <a>$sel:userStatus:AdminGetUserResponse'</a>,
--   <a>adminGetUserResponse_userStatus</a> - The user status. Can be one
--   of the following:
--   
--   <ul>
--   <li>UNCONFIRMED - User has been created but not confirmed.</li>
--   <li>CONFIRMED - User has been confirmed.</li>
--   <li>ARCHIVED - User is no longer active.</li>
--   <li>COMPROMISED - User is disabled due to a potential security
--   threat.</li>
--   <li>UNKNOWN - User status is not known.</li>
--   <li>RESET_REQUIRED - User is confirmed, but the user must request a
--   code and reset his or her password before he or she can sign in.</li>
--   <li>FORCE_CHANGE_PASSWORD - The user is confirmed and the user can
--   sign in using a temporary password, but on first sign-in, the user
--   must change his or her password to a new value before doing anything
--   else.</li>
--   </ul>
--   
--   <a>$sel:userAttributes:AdminGetUserResponse'</a>,
--   <a>adminGetUserResponse_userAttributes</a> - An array of name-value
--   pairs representing user attributes.
--   
--   <a>$sel:userCreateDate:AdminGetUserResponse'</a>,
--   <a>adminGetUserResponse_userCreateDate</a> - The date the user was
--   created.
--   
--   <a>$sel:userMFASettingList:AdminGetUserResponse'</a>,
--   <a>adminGetUserResponse_userMFASettingList</a> - The MFA options that
--   are enabled for the user. The possible values in this list are
--   <tt>SMS_MFA</tt> and <tt>SOFTWARE_TOKEN_MFA</tt>.
--   
--   <a>$sel:mfaOptions:AdminGetUserResponse'</a>,
--   <a>adminGetUserResponse_mfaOptions</a> - <i>This response parameter is
--   no longer supported.</i> It provides information only about SMS MFA
--   configurations. It doesn't provide information about TOTP software
--   token MFA configurations. To look up information about either type of
--   MFA configuration, use UserMFASettingList instead.
--   
--   <a>$sel:userLastModifiedDate:AdminGetUserResponse'</a>,
--   <a>adminGetUserResponse_userLastModifiedDate</a> - The date the user
--   was last modified.
--   
--   <a>$sel:preferredMfaSetting:AdminGetUserResponse'</a>,
--   <a>adminGetUserResponse_preferredMfaSetting</a> - The user's preferred
--   MFA setting.
--   
--   <a>$sel:httpStatus:AdminGetUserResponse'</a>,
--   <a>adminGetUserResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:username:AdminGetUser'</a>,
--   <a>adminGetUserResponse_username</a> - The user name of the user about
--   whom you are receiving information.
newAdminGetUserResponse :: Int -> Text -> AdminGetUserResponse

-- | Indicates that the status is enabled.
adminGetUserResponse_enabled :: Lens' AdminGetUserResponse (Maybe Bool)

-- | The user status. Can be one of the following:
--   
--   <ul>
--   <li>UNCONFIRMED - User has been created but not confirmed.</li>
--   <li>CONFIRMED - User has been confirmed.</li>
--   <li>ARCHIVED - User is no longer active.</li>
--   <li>COMPROMISED - User is disabled due to a potential security
--   threat.</li>
--   <li>UNKNOWN - User status is not known.</li>
--   <li>RESET_REQUIRED - User is confirmed, but the user must request a
--   code and reset his or her password before he or she can sign in.</li>
--   <li>FORCE_CHANGE_PASSWORD - The user is confirmed and the user can
--   sign in using a temporary password, but on first sign-in, the user
--   must change his or her password to a new value before doing anything
--   else.</li>
--   </ul>
adminGetUserResponse_userStatus :: Lens' AdminGetUserResponse (Maybe UserStatusType)

-- | An array of name-value pairs representing user attributes.
adminGetUserResponse_userAttributes :: Lens' AdminGetUserResponse (Maybe [AttributeType])

-- | The date the user was created.
adminGetUserResponse_userCreateDate :: Lens' AdminGetUserResponse (Maybe UTCTime)

-- | The MFA options that are enabled for the user. The possible values in
--   this list are <tt>SMS_MFA</tt> and <tt>SOFTWARE_TOKEN_MFA</tt>.
adminGetUserResponse_userMFASettingList :: Lens' AdminGetUserResponse (Maybe [Text])

-- | <i>This response parameter is no longer supported.</i> It provides
--   information only about SMS MFA configurations. It doesn't provide
--   information about TOTP software token MFA configurations. To look up
--   information about either type of MFA configuration, use
--   UserMFASettingList instead.
adminGetUserResponse_mfaOptions :: Lens' AdminGetUserResponse (Maybe [MFAOptionType])

-- | The date the user was last modified.
adminGetUserResponse_userLastModifiedDate :: Lens' AdminGetUserResponse (Maybe UTCTime)

-- | The user's preferred MFA setting.
adminGetUserResponse_preferredMfaSetting :: Lens' AdminGetUserResponse (Maybe Text)

-- | The response's http status code.
adminGetUserResponse_httpStatus :: Lens' AdminGetUserResponse Int

-- | The user name of the user about whom you are receiving information.
adminGetUserResponse_username :: Lens' AdminGetUserResponse Text
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.AdminGetUser.AdminGetUser
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.AdminGetUser.AdminGetUser
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.AdminGetUser.AdminGetUser
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.AdminGetUser.AdminGetUserResponse
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.AdminGetUser.AdminGetUserResponse
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.AdminGetUser.AdminGetUserResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CognitoIdentityProvider.AdminGetUser.AdminGetUser
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.AdminGetUser.AdminGetUserResponse
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.AdminGetUser.AdminGetUser
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.AdminGetUser.AdminGetUser
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CognitoIdentityProvider.AdminGetUser.AdminGetUser
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.AdminGetUser.AdminGetUser
instance Network.AWS.Data.Path.ToPath Network.AWS.CognitoIdentityProvider.AdminGetUser.AdminGetUser
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentityProvider.AdminGetUser.AdminGetUser


-- | Gets the device, as an administrator.
--   
--   Calling this action requires developer credentials.
module Network.AWS.CognitoIdentityProvider.AdminGetDevice

-- | Represents the request to get the device, as an administrator.
--   
--   <i>See:</i> <a>newAdminGetDevice</a> smart constructor.
data AdminGetDevice
AdminGetDevice' :: Text -> Text -> Sensitive Text -> AdminGetDevice

-- | The device key.
[$sel:deviceKey:AdminGetDevice'] :: AdminGetDevice -> Text

-- | The user pool ID.
[$sel:userPoolId:AdminGetDevice'] :: AdminGetDevice -> Text

-- | The user name.
[$sel:username:AdminGetDevice'] :: AdminGetDevice -> Sensitive Text

-- | Create a value of <a>AdminGetDevice</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deviceKey:AdminGetDevice'</a>, <a>adminGetDevice_deviceKey</a>
--   - The device key.
--   
--   <a>$sel:userPoolId:AdminGetDevice'</a>,
--   <a>adminGetDevice_userPoolId</a> - The user pool ID.
--   
--   <a>$sel:username:AdminGetDevice'</a>, <a>adminGetDevice_username</a> -
--   The user name.
newAdminGetDevice :: Text -> Text -> Text -> AdminGetDevice

-- | The device key.
adminGetDevice_deviceKey :: Lens' AdminGetDevice Text

-- | The user pool ID.
adminGetDevice_userPoolId :: Lens' AdminGetDevice Text

-- | The user name.
adminGetDevice_username :: Lens' AdminGetDevice Text

-- | Gets the device response, as an administrator.
--   
--   <i>See:</i> <a>newAdminGetDeviceResponse</a> smart constructor.
data AdminGetDeviceResponse
AdminGetDeviceResponse' :: Int -> DeviceType -> AdminGetDeviceResponse

-- | The response's http status code.
[$sel:httpStatus:AdminGetDeviceResponse'] :: AdminGetDeviceResponse -> Int

-- | The device.
[$sel:device:AdminGetDeviceResponse'] :: AdminGetDeviceResponse -> DeviceType

-- | Create a value of <a>AdminGetDeviceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:AdminGetDeviceResponse'</a>,
--   <a>adminGetDeviceResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:device:AdminGetDeviceResponse'</a>,
--   <a>adminGetDeviceResponse_device</a> - The device.
newAdminGetDeviceResponse :: Int -> DeviceType -> AdminGetDeviceResponse

-- | The response's http status code.
adminGetDeviceResponse_httpStatus :: Lens' AdminGetDeviceResponse Int

-- | The device.
adminGetDeviceResponse_device :: Lens' AdminGetDeviceResponse DeviceType
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.AdminGetDevice.AdminGetDevice
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.AdminGetDevice.AdminGetDevice
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.AdminGetDevice.AdminGetDevice
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.AdminGetDevice.AdminGetDeviceResponse
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.AdminGetDevice.AdminGetDeviceResponse
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.AdminGetDevice.AdminGetDeviceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CognitoIdentityProvider.AdminGetDevice.AdminGetDevice
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.AdminGetDevice.AdminGetDeviceResponse
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.AdminGetDevice.AdminGetDevice
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.AdminGetDevice.AdminGetDevice
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CognitoIdentityProvider.AdminGetDevice.AdminGetDevice
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.AdminGetDevice.AdminGetDevice
instance Network.AWS.Data.Path.ToPath Network.AWS.CognitoIdentityProvider.AdminGetDevice.AdminGetDevice
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentityProvider.AdminGetDevice.AdminGetDevice


-- | Forgets the device, as an administrator.
--   
--   Calling this action requires developer credentials.
module Network.AWS.CognitoIdentityProvider.AdminForgetDevice

-- | Sends the forgot device request, as an administrator.
--   
--   <i>See:</i> <a>newAdminForgetDevice</a> smart constructor.
data AdminForgetDevice
AdminForgetDevice' :: Text -> Sensitive Text -> Text -> AdminForgetDevice

-- | The user pool ID.
[$sel:userPoolId:AdminForgetDevice'] :: AdminForgetDevice -> Text

-- | The user name.
[$sel:username:AdminForgetDevice'] :: AdminForgetDevice -> Sensitive Text

-- | The device key.
[$sel:deviceKey:AdminForgetDevice'] :: AdminForgetDevice -> Text

-- | Create a value of <a>AdminForgetDevice</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userPoolId:AdminForgetDevice'</a>,
--   <a>adminForgetDevice_userPoolId</a> - The user pool ID.
--   
--   <a>$sel:username:AdminForgetDevice'</a>,
--   <a>adminForgetDevice_username</a> - The user name.
--   
--   <a>$sel:deviceKey:AdminForgetDevice'</a>,
--   <a>adminForgetDevice_deviceKey</a> - The device key.
newAdminForgetDevice :: Text -> Text -> Text -> AdminForgetDevice

-- | The user pool ID.
adminForgetDevice_userPoolId :: Lens' AdminForgetDevice Text

-- | The user name.
adminForgetDevice_username :: Lens' AdminForgetDevice Text

-- | The device key.
adminForgetDevice_deviceKey :: Lens' AdminForgetDevice Text

-- | <i>See:</i> <a>newAdminForgetDeviceResponse</a> smart constructor.
data AdminForgetDeviceResponse
AdminForgetDeviceResponse' :: AdminForgetDeviceResponse

-- | Create a value of <a>AdminForgetDeviceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newAdminForgetDeviceResponse :: AdminForgetDeviceResponse
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.AdminForgetDevice.AdminForgetDevice
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.AdminForgetDevice.AdminForgetDevice
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.AdminForgetDevice.AdminForgetDevice
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.AdminForgetDevice.AdminForgetDeviceResponse
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.AdminForgetDevice.AdminForgetDeviceResponse
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.AdminForgetDevice.AdminForgetDeviceResponse
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.AdminForgetDevice.AdminForgetDeviceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CognitoIdentityProvider.AdminForgetDevice.AdminForgetDevice
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.AdminForgetDevice.AdminForgetDeviceResponse
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.AdminForgetDevice.AdminForgetDevice
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.AdminForgetDevice.AdminForgetDevice
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CognitoIdentityProvider.AdminForgetDevice.AdminForgetDevice
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.AdminForgetDevice.AdminForgetDevice
instance Network.AWS.Data.Path.ToPath Network.AWS.CognitoIdentityProvider.AdminForgetDevice.AdminForgetDevice
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentityProvider.AdminForgetDevice.AdminForgetDevice


-- | Enables the specified user as an administrator. Works on any user.
--   
--   Calling this action requires developer credentials.
module Network.AWS.CognitoIdentityProvider.AdminEnableUser

-- | Represents the request that enables the user as an administrator.
--   
--   <i>See:</i> <a>newAdminEnableUser</a> smart constructor.
data AdminEnableUser
AdminEnableUser' :: Text -> Sensitive Text -> AdminEnableUser

-- | The user pool ID for the user pool where you want to enable the user.
[$sel:userPoolId:AdminEnableUser'] :: AdminEnableUser -> Text

-- | The user name of the user you wish to enable.
[$sel:username:AdminEnableUser'] :: AdminEnableUser -> Sensitive Text

-- | Create a value of <a>AdminEnableUser</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userPoolId:AdminEnableUser'</a>,
--   <a>adminEnableUser_userPoolId</a> - The user pool ID for the user pool
--   where you want to enable the user.
--   
--   <a>$sel:username:AdminEnableUser'</a>, <a>adminEnableUser_username</a>
--   - The user name of the user you wish to enable.
newAdminEnableUser :: Text -> Text -> AdminEnableUser

-- | The user pool ID for the user pool where you want to enable the user.
adminEnableUser_userPoolId :: Lens' AdminEnableUser Text

-- | The user name of the user you wish to enable.
adminEnableUser_username :: Lens' AdminEnableUser Text

-- | Represents the response from the server for the request to enable a
--   user as an administrator.
--   
--   <i>See:</i> <a>newAdminEnableUserResponse</a> smart constructor.
data AdminEnableUserResponse
AdminEnableUserResponse' :: Int -> AdminEnableUserResponse

-- | The response's http status code.
[$sel:httpStatus:AdminEnableUserResponse'] :: AdminEnableUserResponse -> Int

-- | Create a value of <a>AdminEnableUserResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:AdminEnableUserResponse'</a>,
--   <a>adminEnableUserResponse_httpStatus</a> - The response's http status
--   code.
newAdminEnableUserResponse :: Int -> AdminEnableUserResponse

-- | The response's http status code.
adminEnableUserResponse_httpStatus :: Lens' AdminEnableUserResponse Int
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.AdminEnableUser.AdminEnableUser
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.AdminEnableUser.AdminEnableUser
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.AdminEnableUser.AdminEnableUser
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.AdminEnableUser.AdminEnableUserResponse
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.AdminEnableUser.AdminEnableUserResponse
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.AdminEnableUser.AdminEnableUserResponse
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.AdminEnableUser.AdminEnableUserResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CognitoIdentityProvider.AdminEnableUser.AdminEnableUser
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.AdminEnableUser.AdminEnableUserResponse
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.AdminEnableUser.AdminEnableUser
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.AdminEnableUser.AdminEnableUser
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CognitoIdentityProvider.AdminEnableUser.AdminEnableUser
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.AdminEnableUser.AdminEnableUser
instance Network.AWS.Data.Path.ToPath Network.AWS.CognitoIdentityProvider.AdminEnableUser.AdminEnableUser
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentityProvider.AdminEnableUser.AdminEnableUser


-- | Disables the specified user.
--   
--   Calling this action requires developer credentials.
module Network.AWS.CognitoIdentityProvider.AdminDisableUser

-- | Represents the request to disable the user as an administrator.
--   
--   <i>See:</i> <a>newAdminDisableUser</a> smart constructor.
data AdminDisableUser
AdminDisableUser' :: Text -> Sensitive Text -> AdminDisableUser

-- | The user pool ID for the user pool where you want to disable the user.
[$sel:userPoolId:AdminDisableUser'] :: AdminDisableUser -> Text

-- | The user name of the user you wish to disable.
[$sel:username:AdminDisableUser'] :: AdminDisableUser -> Sensitive Text

-- | Create a value of <a>AdminDisableUser</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userPoolId:AdminDisableUser'</a>,
--   <a>adminDisableUser_userPoolId</a> - The user pool ID for the user
--   pool where you want to disable the user.
--   
--   <a>$sel:username:AdminDisableUser'</a>,
--   <a>adminDisableUser_username</a> - The user name of the user you wish
--   to disable.
newAdminDisableUser :: Text -> Text -> AdminDisableUser

-- | The user pool ID for the user pool where you want to disable the user.
adminDisableUser_userPoolId :: Lens' AdminDisableUser Text

-- | The user name of the user you wish to disable.
adminDisableUser_username :: Lens' AdminDisableUser Text

-- | Represents the response received from the server to disable the user
--   as an administrator.
--   
--   <i>See:</i> <a>newAdminDisableUserResponse</a> smart constructor.
data AdminDisableUserResponse
AdminDisableUserResponse' :: Int -> AdminDisableUserResponse

-- | The response's http status code.
[$sel:httpStatus:AdminDisableUserResponse'] :: AdminDisableUserResponse -> Int

-- | Create a value of <a>AdminDisableUserResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:AdminDisableUserResponse'</a>,
--   <a>adminDisableUserResponse_httpStatus</a> - The response's http
--   status code.
newAdminDisableUserResponse :: Int -> AdminDisableUserResponse

-- | The response's http status code.
adminDisableUserResponse_httpStatus :: Lens' AdminDisableUserResponse Int
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.AdminDisableUser.AdminDisableUser
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.AdminDisableUser.AdminDisableUser
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.AdminDisableUser.AdminDisableUser
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.AdminDisableUser.AdminDisableUserResponse
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.AdminDisableUser.AdminDisableUserResponse
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.AdminDisableUser.AdminDisableUserResponse
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.AdminDisableUser.AdminDisableUserResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CognitoIdentityProvider.AdminDisableUser.AdminDisableUser
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.AdminDisableUser.AdminDisableUserResponse
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.AdminDisableUser.AdminDisableUser
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.AdminDisableUser.AdminDisableUser
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CognitoIdentityProvider.AdminDisableUser.AdminDisableUser
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.AdminDisableUser.AdminDisableUser
instance Network.AWS.Data.Path.ToPath Network.AWS.CognitoIdentityProvider.AdminDisableUser.AdminDisableUser
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentityProvider.AdminDisableUser.AdminDisableUser


-- | Disables the user from signing in with the specified external (SAML or
--   social) identity provider. If the user to disable is a Cognito User
--   Pools native username + password user, they are not permitted to use
--   their password to sign-in. If the user to disable is a linked external
--   IdP user, any link between that user and an existing user is removed.
--   The next time the external user (no longer attached to the previously
--   linked <tt>DestinationUser</tt>) signs in, they must create a new user
--   account. See <a>AdminLinkProviderForUser</a>.
--   
--   This action is enabled only for admin access and requires developer
--   credentials.
--   
--   The <tt>ProviderName</tt> must match the value specified when creating
--   an IdP for the pool.
--   
--   To disable a native username + password user, the
--   <tt>ProviderName</tt> value must be <tt>Cognito</tt> and the
--   <tt>ProviderAttributeName</tt> must be <tt>Cognito_Subject</tt>, with
--   the <tt>ProviderAttributeValue</tt> being the name that is used in the
--   user pool for the user.
--   
--   The <tt>ProviderAttributeName</tt> must always be
--   <tt>Cognito_Subject</tt> for social identity providers. The
--   <tt>ProviderAttributeValue</tt> must always be the exact subject that
--   was used when the user was originally linked as a source user.
--   
--   For de-linking a SAML identity, there are two scenarios. If the linked
--   identity has not yet been used to sign-in, the
--   <tt>ProviderAttributeName</tt> and <tt>ProviderAttributeValue</tt>
--   must be the same values that were used for the <tt>SourceUser</tt>
--   when the identities were originally linked using <tt>
--   AdminLinkProviderForUser</tt> call. (If the linking was done with
--   <tt>ProviderAttributeName</tt> set to <tt>Cognito_Subject</tt>, the
--   same applies here). However, if the user has already signed in, the
--   <tt>ProviderAttributeName</tt> must be <tt>Cognito_Subject</tt> and
--   <tt>ProviderAttributeValue</tt> must be the subject of the SAML
--   assertion.
module Network.AWS.CognitoIdentityProvider.AdminDisableProviderForUser

-- | <i>See:</i> <a>newAdminDisableProviderForUser</a> smart constructor.
data AdminDisableProviderForUser
AdminDisableProviderForUser' :: Text -> ProviderUserIdentifierType -> AdminDisableProviderForUser

-- | The user pool ID for the user pool.
[$sel:userPoolId:AdminDisableProviderForUser'] :: AdminDisableProviderForUser -> Text

-- | The user to be disabled.
[$sel:user:AdminDisableProviderForUser'] :: AdminDisableProviderForUser -> ProviderUserIdentifierType

-- | Create a value of <a>AdminDisableProviderForUser</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userPoolId:AdminDisableProviderForUser'</a>,
--   <a>adminDisableProviderForUser_userPoolId</a> - The user pool ID for
--   the user pool.
--   
--   <a>$sel:user:AdminDisableProviderForUser'</a>,
--   <a>adminDisableProviderForUser_user</a> - The user to be disabled.
newAdminDisableProviderForUser :: Text -> ProviderUserIdentifierType -> AdminDisableProviderForUser

-- | The user pool ID for the user pool.
adminDisableProviderForUser_userPoolId :: Lens' AdminDisableProviderForUser Text

-- | The user to be disabled.
adminDisableProviderForUser_user :: Lens' AdminDisableProviderForUser ProviderUserIdentifierType

-- | <i>See:</i> <a>newAdminDisableProviderForUserResponse</a> smart
--   constructor.
data AdminDisableProviderForUserResponse
AdminDisableProviderForUserResponse' :: Int -> AdminDisableProviderForUserResponse

-- | The response's http status code.
[$sel:httpStatus:AdminDisableProviderForUserResponse'] :: AdminDisableProviderForUserResponse -> Int

-- | Create a value of <a>AdminDisableProviderForUserResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:AdminDisableProviderForUserResponse'</a>,
--   <a>adminDisableProviderForUserResponse_httpStatus</a> - The response's
--   http status code.
newAdminDisableProviderForUserResponse :: Int -> AdminDisableProviderForUserResponse

-- | The response's http status code.
adminDisableProviderForUserResponse_httpStatus :: Lens' AdminDisableProviderForUserResponse Int
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.AdminDisableProviderForUser.AdminDisableProviderForUser
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.AdminDisableProviderForUser.AdminDisableProviderForUser
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.AdminDisableProviderForUser.AdminDisableProviderForUser
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.AdminDisableProviderForUser.AdminDisableProviderForUser
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.AdminDisableProviderForUser.AdminDisableProviderForUserResponse
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.AdminDisableProviderForUser.AdminDisableProviderForUserResponse
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.AdminDisableProviderForUser.AdminDisableProviderForUserResponse
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.AdminDisableProviderForUser.AdminDisableProviderForUserResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CognitoIdentityProvider.AdminDisableProviderForUser.AdminDisableProviderForUser
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.AdminDisableProviderForUser.AdminDisableProviderForUserResponse
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.AdminDisableProviderForUser.AdminDisableProviderForUser
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.AdminDisableProviderForUser.AdminDisableProviderForUser
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CognitoIdentityProvider.AdminDisableProviderForUser.AdminDisableProviderForUser
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.AdminDisableProviderForUser.AdminDisableProviderForUser
instance Network.AWS.Data.Path.ToPath Network.AWS.CognitoIdentityProvider.AdminDisableProviderForUser.AdminDisableProviderForUser
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentityProvider.AdminDisableProviderForUser.AdminDisableProviderForUser


-- | Deletes the user attributes in a user pool as an administrator. Works
--   on any user.
--   
--   Calling this action requires developer credentials.
module Network.AWS.CognitoIdentityProvider.AdminDeleteUserAttributes

-- | Represents the request to delete user attributes as an administrator.
--   
--   <i>See:</i> <a>newAdminDeleteUserAttributes</a> smart constructor.
data AdminDeleteUserAttributes
AdminDeleteUserAttributes' :: Text -> Sensitive Text -> [Text] -> AdminDeleteUserAttributes

-- | The user pool ID for the user pool where you want to delete user
--   attributes.
[$sel:userPoolId:AdminDeleteUserAttributes'] :: AdminDeleteUserAttributes -> Text

-- | The user name of the user from which you would like to delete
--   attributes.
[$sel:username:AdminDeleteUserAttributes'] :: AdminDeleteUserAttributes -> Sensitive Text

-- | An array of strings representing the user attribute names you wish to
--   delete.
--   
--   For custom attributes, you must prepend the <tt>custom:</tt> prefix to
--   the attribute name.
[$sel:userAttributeNames:AdminDeleteUserAttributes'] :: AdminDeleteUserAttributes -> [Text]

-- | Create a value of <a>AdminDeleteUserAttributes</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userPoolId:AdminDeleteUserAttributes'</a>,
--   <a>adminDeleteUserAttributes_userPoolId</a> - The user pool ID for the
--   user pool where you want to delete user attributes.
--   
--   <a>$sel:username:AdminDeleteUserAttributes'</a>,
--   <a>adminDeleteUserAttributes_username</a> - The user name of the user
--   from which you would like to delete attributes.
--   
--   <a>$sel:userAttributeNames:AdminDeleteUserAttributes'</a>,
--   <a>adminDeleteUserAttributes_userAttributeNames</a> - An array of
--   strings representing the user attribute names you wish to delete.
--   
--   For custom attributes, you must prepend the <tt>custom:</tt> prefix to
--   the attribute name.
newAdminDeleteUserAttributes :: Text -> Text -> AdminDeleteUserAttributes

-- | The user pool ID for the user pool where you want to delete user
--   attributes.
adminDeleteUserAttributes_userPoolId :: Lens' AdminDeleteUserAttributes Text

-- | The user name of the user from which you would like to delete
--   attributes.
adminDeleteUserAttributes_username :: Lens' AdminDeleteUserAttributes Text

-- | An array of strings representing the user attribute names you wish to
--   delete.
--   
--   For custom attributes, you must prepend the <tt>custom:</tt> prefix to
--   the attribute name.
adminDeleteUserAttributes_userAttributeNames :: Lens' AdminDeleteUserAttributes [Text]

-- | Represents the response received from the server for a request to
--   delete user attributes.
--   
--   <i>See:</i> <a>newAdminDeleteUserAttributesResponse</a> smart
--   constructor.
data AdminDeleteUserAttributesResponse
AdminDeleteUserAttributesResponse' :: Int -> AdminDeleteUserAttributesResponse

-- | The response's http status code.
[$sel:httpStatus:AdminDeleteUserAttributesResponse'] :: AdminDeleteUserAttributesResponse -> Int

-- | Create a value of <a>AdminDeleteUserAttributesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:AdminDeleteUserAttributesResponse'</a>,
--   <a>adminDeleteUserAttributesResponse_httpStatus</a> - The response's
--   http status code.
newAdminDeleteUserAttributesResponse :: Int -> AdminDeleteUserAttributesResponse

-- | The response's http status code.
adminDeleteUserAttributesResponse_httpStatus :: Lens' AdminDeleteUserAttributesResponse Int
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.AdminDeleteUserAttributes.AdminDeleteUserAttributes
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.AdminDeleteUserAttributes.AdminDeleteUserAttributes
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.AdminDeleteUserAttributes.AdminDeleteUserAttributes
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.AdminDeleteUserAttributes.AdminDeleteUserAttributesResponse
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.AdminDeleteUserAttributes.AdminDeleteUserAttributesResponse
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.AdminDeleteUserAttributes.AdminDeleteUserAttributesResponse
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.AdminDeleteUserAttributes.AdminDeleteUserAttributesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CognitoIdentityProvider.AdminDeleteUserAttributes.AdminDeleteUserAttributes
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.AdminDeleteUserAttributes.AdminDeleteUserAttributesResponse
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.AdminDeleteUserAttributes.AdminDeleteUserAttributes
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.AdminDeleteUserAttributes.AdminDeleteUserAttributes
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CognitoIdentityProvider.AdminDeleteUserAttributes.AdminDeleteUserAttributes
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.AdminDeleteUserAttributes.AdminDeleteUserAttributes
instance Network.AWS.Data.Path.ToPath Network.AWS.CognitoIdentityProvider.AdminDeleteUserAttributes.AdminDeleteUserAttributes
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentityProvider.AdminDeleteUserAttributes.AdminDeleteUserAttributes


-- | Deletes a user as an administrator. Works on any user.
--   
--   Calling this action requires developer credentials.
module Network.AWS.CognitoIdentityProvider.AdminDeleteUser

-- | Represents the request to delete a user as an administrator.
--   
--   <i>See:</i> <a>newAdminDeleteUser</a> smart constructor.
data AdminDeleteUser
AdminDeleteUser' :: Text -> Sensitive Text -> AdminDeleteUser

-- | The user pool ID for the user pool where you want to delete the user.
[$sel:userPoolId:AdminDeleteUser'] :: AdminDeleteUser -> Text

-- | The user name of the user you wish to delete.
[$sel:username:AdminDeleteUser'] :: AdminDeleteUser -> Sensitive Text

-- | Create a value of <a>AdminDeleteUser</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userPoolId:AdminDeleteUser'</a>,
--   <a>adminDeleteUser_userPoolId</a> - The user pool ID for the user pool
--   where you want to delete the user.
--   
--   <a>$sel:username:AdminDeleteUser'</a>, <a>adminDeleteUser_username</a>
--   - The user name of the user you wish to delete.
newAdminDeleteUser :: Text -> Text -> AdminDeleteUser

-- | The user pool ID for the user pool where you want to delete the user.
adminDeleteUser_userPoolId :: Lens' AdminDeleteUser Text

-- | The user name of the user you wish to delete.
adminDeleteUser_username :: Lens' AdminDeleteUser Text

-- | <i>See:</i> <a>newAdminDeleteUserResponse</a> smart constructor.
data AdminDeleteUserResponse
AdminDeleteUserResponse' :: AdminDeleteUserResponse

-- | Create a value of <a>AdminDeleteUserResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newAdminDeleteUserResponse :: AdminDeleteUserResponse
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.AdminDeleteUser.AdminDeleteUser
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.AdminDeleteUser.AdminDeleteUser
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.AdminDeleteUser.AdminDeleteUser
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.AdminDeleteUser.AdminDeleteUserResponse
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.AdminDeleteUser.AdminDeleteUserResponse
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.AdminDeleteUser.AdminDeleteUserResponse
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.AdminDeleteUser.AdminDeleteUserResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CognitoIdentityProvider.AdminDeleteUser.AdminDeleteUser
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.AdminDeleteUser.AdminDeleteUserResponse
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.AdminDeleteUser.AdminDeleteUser
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.AdminDeleteUser.AdminDeleteUser
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CognitoIdentityProvider.AdminDeleteUser.AdminDeleteUser
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.AdminDeleteUser.AdminDeleteUser
instance Network.AWS.Data.Path.ToPath Network.AWS.CognitoIdentityProvider.AdminDeleteUser.AdminDeleteUser
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentityProvider.AdminDeleteUser.AdminDeleteUser


-- | Creates a new user in the specified user pool.
--   
--   If <tt>MessageAction</tt> is not set, the default is to send a welcome
--   message via email or phone (SMS).
--   
--   This action might generate an SMS text message. Starting June 1, 2021,
--   U.S. telecom carriers require that you register an origination phone
--   number before you can send SMS messages to U.S. phone numbers. If you
--   use SMS text messages in Amazon Cognito, you must register a phone
--   number with <a>Amazon Pinpoint</a>. Cognito will use the the
--   registered number automatically. Otherwise, Cognito users that must
--   receive SMS messages might be unable to sign up, activate their
--   accounts, or sign in.
--   
--   If you have never used SMS text messages with Amazon Cognito or any
--   other Amazon Web Service, Amazon SNS might place your account in SMS
--   sandbox. In
--   <i>&lt;https:</i><i>docs.aws.amazon.com</i>sns<i>latest</i>dg<i>sns-sms-sandbox.html
--   sandbox mode&gt;</i> , you’ll have limitations, such as sending
--   messages to only verified phone numbers. After testing in the sandbox
--   environment, you can move out of the SMS sandbox and into production.
--   For more information, see <a>SMS message settings for Cognito User
--   Pools</a> in the <i>Amazon Cognito Developer Guide</i>.
--   
--   This message is based on a template that you configured in your call
--   to create or update a user pool. This template includes your custom
--   sign-up instructions and placeholders for user name and temporary
--   password.
--   
--   Alternatively, you can call <tt>AdminCreateUser</tt> with “SUPPRESS”
--   for the <tt>MessageAction</tt> parameter, and Amazon Cognito will not
--   send any email.
--   
--   In either case, the user will be in the <tt>FORCE_CHANGE_PASSWORD</tt>
--   state until they sign in and change their password.
--   
--   <tt>AdminCreateUser</tt> requires developer credentials.
module Network.AWS.CognitoIdentityProvider.AdminCreateUser

-- | Represents the request to create a user in the specified user pool.
--   
--   <i>See:</i> <a>newAdminCreateUser</a> smart constructor.
data AdminCreateUser
AdminCreateUser' :: Maybe (HashMap Text Text) -> Maybe (Sensitive Text) -> Maybe Bool -> Maybe [DeliveryMediumType] -> Maybe MessageActionType -> Maybe [AttributeType] -> Maybe [AttributeType] -> Text -> Sensitive Text -> AdminCreateUser

-- | A map of custom key-value pairs that you can provide as input for any
--   custom workflows that this action triggers.
--   
--   You create custom workflows by assigning Lambda functions to user pool
--   triggers. When you use the AdminCreateUser API action, Amazon Cognito
--   invokes the function that is assigned to the <i>pre sign-up</i>
--   trigger. When Amazon Cognito invokes this function, it passes a JSON
--   payload, which the function receives as input. This payload contains a
--   <tt>clientMetadata</tt> attribute, which provides the data that you
--   assigned to the ClientMetadata parameter in your AdminCreateUser
--   request. In your function code in Lambda, you can process the
--   <tt>clientMetadata</tt> value to enhance your workflow for your
--   specific needs.
--   
--   For more information, see <a>Customizing User Pool Workflows with
--   Lambda Triggers</a> in the <i>Amazon Cognito Developer Guide</i>.
--   
--   Take the following limitations into consideration when you use the
--   ClientMetadata parameter:
--   
--   <ul>
--   <li>Amazon Cognito does not store the ClientMetadata value. This data
--   is available only to Lambda triggers that are assigned to a user pool
--   to support custom workflows. If your user pool configuration does not
--   include triggers, the ClientMetadata parameter serves no purpose.</li>
--   <li>Amazon Cognito does not validate the ClientMetadata value.</li>
--   <li>Amazon Cognito does not encrypt the the ClientMetadata value, so
--   don't use it to provide sensitive information.</li>
--   </ul>
[$sel:clientMetadata:AdminCreateUser'] :: AdminCreateUser -> Maybe (HashMap Text Text)

-- | The user's temporary password. This password must conform to the
--   password policy that you specified when you created the user pool.
--   
--   The temporary password is valid only once. To complete the Admin
--   Create User flow, the user must enter the temporary password in the
--   sign-in page along with a new password to be used in all future
--   sign-ins.
--   
--   This parameter is not required. If you do not specify a value, Amazon
--   Cognito generates one for you.
--   
--   The temporary password can only be used until the user account
--   expiration limit that you specified when you created the user pool. To
--   reset the account after that time limit, you must call
--   <tt>AdminCreateUser</tt> again, specifying <tt>"RESEND"</tt> for the
--   <tt>MessageAction</tt> parameter.
[$sel:temporaryPassword:AdminCreateUser'] :: AdminCreateUser -> Maybe (Sensitive Text)

-- | This parameter is only used if the <tt>phone_number_verified</tt> or
--   <tt>email_verified</tt> attribute is set to <tt>True</tt>. Otherwise,
--   it is ignored.
--   
--   If this parameter is set to <tt>True</tt> and the phone number or
--   email address specified in the UserAttributes parameter already exists
--   as an alias with a different user, the API call will migrate the alias
--   from the previous user to the newly created user. The previous user
--   will no longer be able to log in using that alias.
--   
--   If this parameter is set to <tt>False</tt>, the API throws an
--   <tt>AliasExistsException</tt> error if the alias already exists. The
--   default value is <tt>False</tt>.
[$sel:forceAliasCreation:AdminCreateUser'] :: AdminCreateUser -> Maybe Bool

-- | Specify <tt>"EMAIL"</tt> if email will be used to send the welcome
--   message. Specify <tt>"SMS"</tt> if the phone number will be used. The
--   default value is <tt>"SMS"</tt>. More than one value can be specified.
[$sel:desiredDeliveryMediums:AdminCreateUser'] :: AdminCreateUser -> Maybe [DeliveryMediumType]

-- | Set to <tt>"RESEND"</tt> to resend the invitation message to a user
--   that already exists and reset the expiration limit on the user's
--   account. Set to <tt>"SUPPRESS"</tt> to suppress sending the message.
--   Only one value can be specified.
[$sel:messageAction:AdminCreateUser'] :: AdminCreateUser -> Maybe MessageActionType

-- | An array of name-value pairs that contain user attributes and
--   attribute values to be set for the user to be created. You can create
--   a user without specifying any attributes other than <tt>Username</tt>.
--   However, any attributes that you specify as required (when creating a
--   user pool or in the <b>Attributes</b> tab of the console) must be
--   supplied either by you (in your call to <tt>AdminCreateUser</tt>) or
--   by the user (when he or she signs up in response to your welcome
--   message).
--   
--   For custom attributes, you must prepend the <tt>custom:</tt> prefix to
--   the attribute name.
--   
--   To send a message inviting the user to sign up, you must specify the
--   user's email address or phone number. This can be done in your call to
--   AdminCreateUser or in the <b>Users</b> tab of the Amazon Cognito
--   console for managing your user pools.
--   
--   In your call to <tt>AdminCreateUser</tt>, you can set the
--   <tt>email_verified</tt> attribute to <tt>True</tt>, and you can set
--   the <tt>phone_number_verified</tt> attribute to <tt>True</tt>. (You
--   can also do this by calling <a>AdminUpdateUserAttributes</a>.)
--   
--   <ul>
--   <li><b>email</b>: The email address of the user to whom the message
--   that contains the code and username will be sent. Required if the
--   <tt>email_verified</tt> attribute is set to <tt>True</tt>, or if
--   <tt>"EMAIL"</tt> is specified in the <tt>DesiredDeliveryMediums</tt>
--   parameter.</li>
--   <li><b>phone_number</b>: The phone number of the user to whom the
--   message that contains the code and username will be sent. Required if
--   the <tt>phone_number_verified</tt> attribute is set to <tt>True</tt>,
--   or if <tt>"SMS"</tt> is specified in the
--   <tt>DesiredDeliveryMediums</tt> parameter.</li>
--   </ul>
[$sel:userAttributes:AdminCreateUser'] :: AdminCreateUser -> Maybe [AttributeType]

-- | The user's validation data. This is an array of name-value pairs that
--   contain user attributes and attribute values that you can use for
--   custom validation, such as restricting the types of user accounts that
--   can be registered. For example, you might choose to allow or disallow
--   user sign-up based on the user's domain.
--   
--   To configure custom validation, you must create a Pre Sign-up Lambda
--   trigger for the user pool as described in the Amazon Cognito Developer
--   Guide. The Lambda trigger receives the validation data and uses it in
--   the validation process.
--   
--   The user's validation data is not persisted.
[$sel:validationData:AdminCreateUser'] :: AdminCreateUser -> Maybe [AttributeType]

-- | The user pool ID for the user pool where the user will be created.
[$sel:userPoolId:AdminCreateUser'] :: AdminCreateUser -> Text

-- | The username for the user. Must be unique within the user pool. Must
--   be a UTF-8 string between 1 and 128 characters. After the user is
--   created, the username cannot be changed.
[$sel:username:AdminCreateUser'] :: AdminCreateUser -> Sensitive Text

-- | Create a value of <a>AdminCreateUser</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientMetadata:AdminCreateUser'</a>,
--   <a>adminCreateUser_clientMetadata</a> - A map of custom key-value
--   pairs that you can provide as input for any custom workflows that this
--   action triggers.
--   
--   You create custom workflows by assigning Lambda functions to user pool
--   triggers. When you use the AdminCreateUser API action, Amazon Cognito
--   invokes the function that is assigned to the <i>pre sign-up</i>
--   trigger. When Amazon Cognito invokes this function, it passes a JSON
--   payload, which the function receives as input. This payload contains a
--   <tt>clientMetadata</tt> attribute, which provides the data that you
--   assigned to the ClientMetadata parameter in your AdminCreateUser
--   request. In your function code in Lambda, you can process the
--   <tt>clientMetadata</tt> value to enhance your workflow for your
--   specific needs.
--   
--   For more information, see <a>Customizing User Pool Workflows with
--   Lambda Triggers</a> in the <i>Amazon Cognito Developer Guide</i>.
--   
--   Take the following limitations into consideration when you use the
--   ClientMetadata parameter:
--   
--   <ul>
--   <li>Amazon Cognito does not store the ClientMetadata value. This data
--   is available only to Lambda triggers that are assigned to a user pool
--   to support custom workflows. If your user pool configuration does not
--   include triggers, the ClientMetadata parameter serves no purpose.</li>
--   <li>Amazon Cognito does not validate the ClientMetadata value.</li>
--   <li>Amazon Cognito does not encrypt the the ClientMetadata value, so
--   don't use it to provide sensitive information.</li>
--   </ul>
--   
--   <a>$sel:temporaryPassword:AdminCreateUser'</a>,
--   <a>adminCreateUser_temporaryPassword</a> - The user's temporary
--   password. This password must conform to the password policy that you
--   specified when you created the user pool.
--   
--   The temporary password is valid only once. To complete the Admin
--   Create User flow, the user must enter the temporary password in the
--   sign-in page along with a new password to be used in all future
--   sign-ins.
--   
--   This parameter is not required. If you do not specify a value, Amazon
--   Cognito generates one for you.
--   
--   The temporary password can only be used until the user account
--   expiration limit that you specified when you created the user pool. To
--   reset the account after that time limit, you must call
--   <tt>AdminCreateUser</tt> again, specifying <tt>"RESEND"</tt> for the
--   <tt>MessageAction</tt> parameter.
--   
--   <a>$sel:forceAliasCreation:AdminCreateUser'</a>,
--   <a>adminCreateUser_forceAliasCreation</a> - This parameter is only
--   used if the <tt>phone_number_verified</tt> or <tt>email_verified</tt>
--   attribute is set to <tt>True</tt>. Otherwise, it is ignored.
--   
--   If this parameter is set to <tt>True</tt> and the phone number or
--   email address specified in the UserAttributes parameter already exists
--   as an alias with a different user, the API call will migrate the alias
--   from the previous user to the newly created user. The previous user
--   will no longer be able to log in using that alias.
--   
--   If this parameter is set to <tt>False</tt>, the API throws an
--   <tt>AliasExistsException</tt> error if the alias already exists. The
--   default value is <tt>False</tt>.
--   
--   <a>$sel:desiredDeliveryMediums:AdminCreateUser'</a>,
--   <a>adminCreateUser_desiredDeliveryMediums</a> - Specify
--   <tt>"EMAIL"</tt> if email will be used to send the welcome message.
--   Specify <tt>"SMS"</tt> if the phone number will be used. The default
--   value is <tt>"SMS"</tt>. More than one value can be specified.
--   
--   <a>$sel:messageAction:AdminCreateUser'</a>,
--   <a>adminCreateUser_messageAction</a> - Set to <tt>"RESEND"</tt> to
--   resend the invitation message to a user that already exists and reset
--   the expiration limit on the user's account. Set to <tt>"SUPPRESS"</tt>
--   to suppress sending the message. Only one value can be specified.
--   
--   <a>$sel:userAttributes:AdminCreateUser'</a>,
--   <a>adminCreateUser_userAttributes</a> - An array of name-value pairs
--   that contain user attributes and attribute values to be set for the
--   user to be created. You can create a user without specifying any
--   attributes other than <tt>Username</tt>. However, any attributes that
--   you specify as required (when creating a user pool or in the
--   <b>Attributes</b> tab of the console) must be supplied either by you
--   (in your call to <tt>AdminCreateUser</tt>) or by the user (when he or
--   she signs up in response to your welcome message).
--   
--   For custom attributes, you must prepend the <tt>custom:</tt> prefix to
--   the attribute name.
--   
--   To send a message inviting the user to sign up, you must specify the
--   user's email address or phone number. This can be done in your call to
--   AdminCreateUser or in the <b>Users</b> tab of the Amazon Cognito
--   console for managing your user pools.
--   
--   In your call to <tt>AdminCreateUser</tt>, you can set the
--   <tt>email_verified</tt> attribute to <tt>True</tt>, and you can set
--   the <tt>phone_number_verified</tt> attribute to <tt>True</tt>. (You
--   can also do this by calling <a>AdminUpdateUserAttributes</a>.)
--   
--   <ul>
--   <li><b>email</b>: The email address of the user to whom the message
--   that contains the code and username will be sent. Required if the
--   <tt>email_verified</tt> attribute is set to <tt>True</tt>, or if
--   <tt>"EMAIL"</tt> is specified in the <tt>DesiredDeliveryMediums</tt>
--   parameter.</li>
--   <li><b>phone_number</b>: The phone number of the user to whom the
--   message that contains the code and username will be sent. Required if
--   the <tt>phone_number_verified</tt> attribute is set to <tt>True</tt>,
--   or if <tt>"SMS"</tt> is specified in the
--   <tt>DesiredDeliveryMediums</tt> parameter.</li>
--   </ul>
--   
--   <a>$sel:validationData:AdminCreateUser'</a>,
--   <a>adminCreateUser_validationData</a> - The user's validation data.
--   This is an array of name-value pairs that contain user attributes and
--   attribute values that you can use for custom validation, such as
--   restricting the types of user accounts that can be registered. For
--   example, you might choose to allow or disallow user sign-up based on
--   the user's domain.
--   
--   To configure custom validation, you must create a Pre Sign-up Lambda
--   trigger for the user pool as described in the Amazon Cognito Developer
--   Guide. The Lambda trigger receives the validation data and uses it in
--   the validation process.
--   
--   The user's validation data is not persisted.
--   
--   <a>$sel:userPoolId:AdminCreateUser'</a>,
--   <a>adminCreateUser_userPoolId</a> - The user pool ID for the user pool
--   where the user will be created.
--   
--   <a>$sel:username:AdminCreateUser'</a>, <a>adminCreateUser_username</a>
--   - The username for the user. Must be unique within the user pool. Must
--   be a UTF-8 string between 1 and 128 characters. After the user is
--   created, the username cannot be changed.
newAdminCreateUser :: Text -> Text -> AdminCreateUser

-- | A map of custom key-value pairs that you can provide as input for any
--   custom workflows that this action triggers.
--   
--   You create custom workflows by assigning Lambda functions to user pool
--   triggers. When you use the AdminCreateUser API action, Amazon Cognito
--   invokes the function that is assigned to the <i>pre sign-up</i>
--   trigger. When Amazon Cognito invokes this function, it passes a JSON
--   payload, which the function receives as input. This payload contains a
--   <tt>clientMetadata</tt> attribute, which provides the data that you
--   assigned to the ClientMetadata parameter in your AdminCreateUser
--   request. In your function code in Lambda, you can process the
--   <tt>clientMetadata</tt> value to enhance your workflow for your
--   specific needs.
--   
--   For more information, see <a>Customizing User Pool Workflows with
--   Lambda Triggers</a> in the <i>Amazon Cognito Developer Guide</i>.
--   
--   Take the following limitations into consideration when you use the
--   ClientMetadata parameter:
--   
--   <ul>
--   <li>Amazon Cognito does not store the ClientMetadata value. This data
--   is available only to Lambda triggers that are assigned to a user pool
--   to support custom workflows. If your user pool configuration does not
--   include triggers, the ClientMetadata parameter serves no purpose.</li>
--   <li>Amazon Cognito does not validate the ClientMetadata value.</li>
--   <li>Amazon Cognito does not encrypt the the ClientMetadata value, so
--   don't use it to provide sensitive information.</li>
--   </ul>
adminCreateUser_clientMetadata :: Lens' AdminCreateUser (Maybe (HashMap Text Text))

-- | The user's temporary password. This password must conform to the
--   password policy that you specified when you created the user pool.
--   
--   The temporary password is valid only once. To complete the Admin
--   Create User flow, the user must enter the temporary password in the
--   sign-in page along with a new password to be used in all future
--   sign-ins.
--   
--   This parameter is not required. If you do not specify a value, Amazon
--   Cognito generates one for you.
--   
--   The temporary password can only be used until the user account
--   expiration limit that you specified when you created the user pool. To
--   reset the account after that time limit, you must call
--   <tt>AdminCreateUser</tt> again, specifying <tt>"RESEND"</tt> for the
--   <tt>MessageAction</tt> parameter.
adminCreateUser_temporaryPassword :: Lens' AdminCreateUser (Maybe Text)

-- | This parameter is only used if the <tt>phone_number_verified</tt> or
--   <tt>email_verified</tt> attribute is set to <tt>True</tt>. Otherwise,
--   it is ignored.
--   
--   If this parameter is set to <tt>True</tt> and the phone number or
--   email address specified in the UserAttributes parameter already exists
--   as an alias with a different user, the API call will migrate the alias
--   from the previous user to the newly created user. The previous user
--   will no longer be able to log in using that alias.
--   
--   If this parameter is set to <tt>False</tt>, the API throws an
--   <tt>AliasExistsException</tt> error if the alias already exists. The
--   default value is <tt>False</tt>.
adminCreateUser_forceAliasCreation :: Lens' AdminCreateUser (Maybe Bool)

-- | Specify <tt>"EMAIL"</tt> if email will be used to send the welcome
--   message. Specify <tt>"SMS"</tt> if the phone number will be used. The
--   default value is <tt>"SMS"</tt>. More than one value can be specified.
adminCreateUser_desiredDeliveryMediums :: Lens' AdminCreateUser (Maybe [DeliveryMediumType])

-- | Set to <tt>"RESEND"</tt> to resend the invitation message to a user
--   that already exists and reset the expiration limit on the user's
--   account. Set to <tt>"SUPPRESS"</tt> to suppress sending the message.
--   Only one value can be specified.
adminCreateUser_messageAction :: Lens' AdminCreateUser (Maybe MessageActionType)

-- | An array of name-value pairs that contain user attributes and
--   attribute values to be set for the user to be created. You can create
--   a user without specifying any attributes other than <tt>Username</tt>.
--   However, any attributes that you specify as required (when creating a
--   user pool or in the <b>Attributes</b> tab of the console) must be
--   supplied either by you (in your call to <tt>AdminCreateUser</tt>) or
--   by the user (when he or she signs up in response to your welcome
--   message).
--   
--   For custom attributes, you must prepend the <tt>custom:</tt> prefix to
--   the attribute name.
--   
--   To send a message inviting the user to sign up, you must specify the
--   user's email address or phone number. This can be done in your call to
--   AdminCreateUser or in the <b>Users</b> tab of the Amazon Cognito
--   console for managing your user pools.
--   
--   In your call to <tt>AdminCreateUser</tt>, you can set the
--   <tt>email_verified</tt> attribute to <tt>True</tt>, and you can set
--   the <tt>phone_number_verified</tt> attribute to <tt>True</tt>. (You
--   can also do this by calling <a>AdminUpdateUserAttributes</a>.)
--   
--   <ul>
--   <li><b>email</b>: The email address of the user to whom the message
--   that contains the code and username will be sent. Required if the
--   <tt>email_verified</tt> attribute is set to <tt>True</tt>, or if
--   <tt>"EMAIL"</tt> is specified in the <tt>DesiredDeliveryMediums</tt>
--   parameter.</li>
--   <li><b>phone_number</b>: The phone number of the user to whom the
--   message that contains the code and username will be sent. Required if
--   the <tt>phone_number_verified</tt> attribute is set to <tt>True</tt>,
--   or if <tt>"SMS"</tt> is specified in the
--   <tt>DesiredDeliveryMediums</tt> parameter.</li>
--   </ul>
adminCreateUser_userAttributes :: Lens' AdminCreateUser (Maybe [AttributeType])

-- | The user's validation data. This is an array of name-value pairs that
--   contain user attributes and attribute values that you can use for
--   custom validation, such as restricting the types of user accounts that
--   can be registered. For example, you might choose to allow or disallow
--   user sign-up based on the user's domain.
--   
--   To configure custom validation, you must create a Pre Sign-up Lambda
--   trigger for the user pool as described in the Amazon Cognito Developer
--   Guide. The Lambda trigger receives the validation data and uses it in
--   the validation process.
--   
--   The user's validation data is not persisted.
adminCreateUser_validationData :: Lens' AdminCreateUser (Maybe [AttributeType])

-- | The user pool ID for the user pool where the user will be created.
adminCreateUser_userPoolId :: Lens' AdminCreateUser Text

-- | The username for the user. Must be unique within the user pool. Must
--   be a UTF-8 string between 1 and 128 characters. After the user is
--   created, the username cannot be changed.
adminCreateUser_username :: Lens' AdminCreateUser Text

-- | Represents the response from the server to the request to create the
--   user.
--   
--   <i>See:</i> <a>newAdminCreateUserResponse</a> smart constructor.
data AdminCreateUserResponse
AdminCreateUserResponse' :: Maybe UserType -> Int -> AdminCreateUserResponse

-- | The newly created user.
[$sel:user:AdminCreateUserResponse'] :: AdminCreateUserResponse -> Maybe UserType

-- | The response's http status code.
[$sel:httpStatus:AdminCreateUserResponse'] :: AdminCreateUserResponse -> Int

-- | Create a value of <a>AdminCreateUserResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:user:AdminCreateUserResponse'</a>,
--   <a>adminCreateUserResponse_user</a> - The newly created user.
--   
--   <a>$sel:httpStatus:AdminCreateUserResponse'</a>,
--   <a>adminCreateUserResponse_httpStatus</a> - The response's http status
--   code.
newAdminCreateUserResponse :: Int -> AdminCreateUserResponse

-- | The newly created user.
adminCreateUserResponse_user :: Lens' AdminCreateUserResponse (Maybe UserType)

-- | The response's http status code.
adminCreateUserResponse_httpStatus :: Lens' AdminCreateUserResponse Int
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.AdminCreateUser.AdminCreateUser
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.AdminCreateUser.AdminCreateUser
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.AdminCreateUser.AdminCreateUser
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.AdminCreateUser.AdminCreateUserResponse
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.AdminCreateUser.AdminCreateUserResponse
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.AdminCreateUser.AdminCreateUserResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CognitoIdentityProvider.AdminCreateUser.AdminCreateUser
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.AdminCreateUser.AdminCreateUserResponse
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.AdminCreateUser.AdminCreateUser
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.AdminCreateUser.AdminCreateUser
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CognitoIdentityProvider.AdminCreateUser.AdminCreateUser
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.AdminCreateUser.AdminCreateUser
instance Network.AWS.Data.Path.ToPath Network.AWS.CognitoIdentityProvider.AdminCreateUser.AdminCreateUser
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentityProvider.AdminCreateUser.AdminCreateUser


-- | Confirms user registration as an admin without using a confirmation
--   code. Works on any user.
--   
--   Calling this action requires developer credentials.
module Network.AWS.CognitoIdentityProvider.AdminConfirmSignUp

-- | Represents the request to confirm user registration.
--   
--   <i>See:</i> <a>newAdminConfirmSignUp</a> smart constructor.
data AdminConfirmSignUp
AdminConfirmSignUp' :: Maybe (HashMap Text Text) -> Text -> Sensitive Text -> AdminConfirmSignUp

-- | A map of custom key-value pairs that you can provide as input for any
--   custom workflows that this action triggers.
--   
--   If your user pool configuration includes triggers, the
--   AdminConfirmSignUp API action invokes the Lambda function that is
--   specified for the <i>post confirmation</i> trigger. When Amazon
--   Cognito invokes this function, it passes a JSON payload, which the
--   function receives as input. In this payload, the
--   <tt>clientMetadata</tt> attribute provides the data that you assigned
--   to the ClientMetadata parameter in your AdminConfirmSignUp request. In
--   your function code in Lambda, you can process the ClientMetadata value
--   to enhance your workflow for your specific needs.
--   
--   For more information, see <a>Customizing User Pool Workflows with
--   Lambda Triggers</a> in the <i>Amazon Cognito Developer Guide</i>.
--   
--   Take the following limitations into consideration when you use the
--   ClientMetadata parameter:
--   
--   <ul>
--   <li>Amazon Cognito does not store the ClientMetadata value. This data
--   is available only to Lambda triggers that are assigned to a user pool
--   to support custom workflows. If your user pool configuration does not
--   include triggers, the ClientMetadata parameter serves no purpose.</li>
--   <li>Amazon Cognito does not validate the ClientMetadata value.</li>
--   <li>Amazon Cognito does not encrypt the the ClientMetadata value, so
--   don't use it to provide sensitive information.</li>
--   </ul>
[$sel:clientMetadata:AdminConfirmSignUp'] :: AdminConfirmSignUp -> Maybe (HashMap Text Text)

-- | The user pool ID for which you want to confirm user registration.
[$sel:userPoolId:AdminConfirmSignUp'] :: AdminConfirmSignUp -> Text

-- | The user name for which you want to confirm user registration.
[$sel:username:AdminConfirmSignUp'] :: AdminConfirmSignUp -> Sensitive Text

-- | Create a value of <a>AdminConfirmSignUp</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientMetadata:AdminConfirmSignUp'</a>,
--   <a>adminConfirmSignUp_clientMetadata</a> - A map of custom key-value
--   pairs that you can provide as input for any custom workflows that this
--   action triggers.
--   
--   If your user pool configuration includes triggers, the
--   AdminConfirmSignUp API action invokes the Lambda function that is
--   specified for the <i>post confirmation</i> trigger. When Amazon
--   Cognito invokes this function, it passes a JSON payload, which the
--   function receives as input. In this payload, the
--   <tt>clientMetadata</tt> attribute provides the data that you assigned
--   to the ClientMetadata parameter in your AdminConfirmSignUp request. In
--   your function code in Lambda, you can process the ClientMetadata value
--   to enhance your workflow for your specific needs.
--   
--   For more information, see <a>Customizing User Pool Workflows with
--   Lambda Triggers</a> in the <i>Amazon Cognito Developer Guide</i>.
--   
--   Take the following limitations into consideration when you use the
--   ClientMetadata parameter:
--   
--   <ul>
--   <li>Amazon Cognito does not store the ClientMetadata value. This data
--   is available only to Lambda triggers that are assigned to a user pool
--   to support custom workflows. If your user pool configuration does not
--   include triggers, the ClientMetadata parameter serves no purpose.</li>
--   <li>Amazon Cognito does not validate the ClientMetadata value.</li>
--   <li>Amazon Cognito does not encrypt the the ClientMetadata value, so
--   don't use it to provide sensitive information.</li>
--   </ul>
--   
--   <a>$sel:userPoolId:AdminConfirmSignUp'</a>,
--   <a>adminConfirmSignUp_userPoolId</a> - The user pool ID for which you
--   want to confirm user registration.
--   
--   <a>$sel:username:AdminConfirmSignUp'</a>,
--   <a>adminConfirmSignUp_username</a> - The user name for which you want
--   to confirm user registration.
newAdminConfirmSignUp :: Text -> Text -> AdminConfirmSignUp

-- | A map of custom key-value pairs that you can provide as input for any
--   custom workflows that this action triggers.
--   
--   If your user pool configuration includes triggers, the
--   AdminConfirmSignUp API action invokes the Lambda function that is
--   specified for the <i>post confirmation</i> trigger. When Amazon
--   Cognito invokes this function, it passes a JSON payload, which the
--   function receives as input. In this payload, the
--   <tt>clientMetadata</tt> attribute provides the data that you assigned
--   to the ClientMetadata parameter in your AdminConfirmSignUp request. In
--   your function code in Lambda, you can process the ClientMetadata value
--   to enhance your workflow for your specific needs.
--   
--   For more information, see <a>Customizing User Pool Workflows with
--   Lambda Triggers</a> in the <i>Amazon Cognito Developer Guide</i>.
--   
--   Take the following limitations into consideration when you use the
--   ClientMetadata parameter:
--   
--   <ul>
--   <li>Amazon Cognito does not store the ClientMetadata value. This data
--   is available only to Lambda triggers that are assigned to a user pool
--   to support custom workflows. If your user pool configuration does not
--   include triggers, the ClientMetadata parameter serves no purpose.</li>
--   <li>Amazon Cognito does not validate the ClientMetadata value.</li>
--   <li>Amazon Cognito does not encrypt the the ClientMetadata value, so
--   don't use it to provide sensitive information.</li>
--   </ul>
adminConfirmSignUp_clientMetadata :: Lens' AdminConfirmSignUp (Maybe (HashMap Text Text))

-- | The user pool ID for which you want to confirm user registration.
adminConfirmSignUp_userPoolId :: Lens' AdminConfirmSignUp Text

-- | The user name for which you want to confirm user registration.
adminConfirmSignUp_username :: Lens' AdminConfirmSignUp Text

-- | Represents the response from the server for the request to confirm
--   registration.
--   
--   <i>See:</i> <a>newAdminConfirmSignUpResponse</a> smart constructor.
data AdminConfirmSignUpResponse
AdminConfirmSignUpResponse' :: Int -> AdminConfirmSignUpResponse

-- | The response's http status code.
[$sel:httpStatus:AdminConfirmSignUpResponse'] :: AdminConfirmSignUpResponse -> Int

-- | Create a value of <a>AdminConfirmSignUpResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:AdminConfirmSignUpResponse'</a>,
--   <a>adminConfirmSignUpResponse_httpStatus</a> - The response's http
--   status code.
newAdminConfirmSignUpResponse :: Int -> AdminConfirmSignUpResponse

-- | The response's http status code.
adminConfirmSignUpResponse_httpStatus :: Lens' AdminConfirmSignUpResponse Int
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.AdminConfirmSignUp.AdminConfirmSignUp
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.AdminConfirmSignUp.AdminConfirmSignUp
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.AdminConfirmSignUp.AdminConfirmSignUp
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.AdminConfirmSignUp.AdminConfirmSignUpResponse
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.AdminConfirmSignUp.AdminConfirmSignUpResponse
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.AdminConfirmSignUp.AdminConfirmSignUpResponse
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.AdminConfirmSignUp.AdminConfirmSignUpResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CognitoIdentityProvider.AdminConfirmSignUp.AdminConfirmSignUp
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.AdminConfirmSignUp.AdminConfirmSignUpResponse
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.AdminConfirmSignUp.AdminConfirmSignUp
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.AdminConfirmSignUp.AdminConfirmSignUp
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CognitoIdentityProvider.AdminConfirmSignUp.AdminConfirmSignUp
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.AdminConfirmSignUp.AdminConfirmSignUp
instance Network.AWS.Data.Path.ToPath Network.AWS.CognitoIdentityProvider.AdminConfirmSignUp.AdminConfirmSignUp
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentityProvider.AdminConfirmSignUp.AdminConfirmSignUp


-- | Adds the specified user to the specified group.
--   
--   Calling this action requires developer credentials.
module Network.AWS.CognitoIdentityProvider.AdminAddUserToGroup

-- | <i>See:</i> <a>newAdminAddUserToGroup</a> smart constructor.
data AdminAddUserToGroup
AdminAddUserToGroup' :: Text -> Sensitive Text -> Text -> AdminAddUserToGroup

-- | The user pool ID for the user pool.
[$sel:userPoolId:AdminAddUserToGroup'] :: AdminAddUserToGroup -> Text

-- | The username for the user.
[$sel:username:AdminAddUserToGroup'] :: AdminAddUserToGroup -> Sensitive Text

-- | The group name.
[$sel:groupName:AdminAddUserToGroup'] :: AdminAddUserToGroup -> Text

-- | Create a value of <a>AdminAddUserToGroup</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userPoolId:AdminAddUserToGroup'</a>,
--   <a>adminAddUserToGroup_userPoolId</a> - The user pool ID for the user
--   pool.
--   
--   <a>$sel:username:AdminAddUserToGroup'</a>,
--   <a>adminAddUserToGroup_username</a> - The username for the user.
--   
--   <a>$sel:groupName:AdminAddUserToGroup'</a>,
--   <a>adminAddUserToGroup_groupName</a> - The group name.
newAdminAddUserToGroup :: Text -> Text -> Text -> AdminAddUserToGroup

-- | The user pool ID for the user pool.
adminAddUserToGroup_userPoolId :: Lens' AdminAddUserToGroup Text

-- | The username for the user.
adminAddUserToGroup_username :: Lens' AdminAddUserToGroup Text

-- | The group name.
adminAddUserToGroup_groupName :: Lens' AdminAddUserToGroup Text

-- | <i>See:</i> <a>newAdminAddUserToGroupResponse</a> smart constructor.
data AdminAddUserToGroupResponse
AdminAddUserToGroupResponse' :: AdminAddUserToGroupResponse

-- | Create a value of <a>AdminAddUserToGroupResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newAdminAddUserToGroupResponse :: AdminAddUserToGroupResponse
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.AdminAddUserToGroup.AdminAddUserToGroup
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.AdminAddUserToGroup.AdminAddUserToGroup
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.AdminAddUserToGroup.AdminAddUserToGroup
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.AdminAddUserToGroup.AdminAddUserToGroupResponse
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.AdminAddUserToGroup.AdminAddUserToGroupResponse
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.AdminAddUserToGroup.AdminAddUserToGroupResponse
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.AdminAddUserToGroup.AdminAddUserToGroupResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CognitoIdentityProvider.AdminAddUserToGroup.AdminAddUserToGroup
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.AdminAddUserToGroup.AdminAddUserToGroupResponse
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.AdminAddUserToGroup.AdminAddUserToGroup
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.AdminAddUserToGroup.AdminAddUserToGroup
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CognitoIdentityProvider.AdminAddUserToGroup.AdminAddUserToGroup
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.AdminAddUserToGroup.AdminAddUserToGroup
instance Network.AWS.Data.Path.ToPath Network.AWS.CognitoIdentityProvider.AdminAddUserToGroup.AdminAddUserToGroup
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentityProvider.AdminAddUserToGroup.AdminAddUserToGroup


-- | Adds additional user attributes to the user pool schema.
module Network.AWS.CognitoIdentityProvider.AddCustomAttributes

-- | Represents the request to add custom attributes.
--   
--   <i>See:</i> <a>newAddCustomAttributes</a> smart constructor.
data AddCustomAttributes
AddCustomAttributes' :: Text -> NonEmpty SchemaAttributeType -> AddCustomAttributes

-- | The user pool ID for the user pool where you want to add custom
--   attributes.
[$sel:userPoolId:AddCustomAttributes'] :: AddCustomAttributes -> Text

-- | An array of custom attributes, such as Mutable and Name.
[$sel:customAttributes:AddCustomAttributes'] :: AddCustomAttributes -> NonEmpty SchemaAttributeType

-- | Create a value of <a>AddCustomAttributes</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userPoolId:AddCustomAttributes'</a>,
--   <a>addCustomAttributes_userPoolId</a> - The user pool ID for the user
--   pool where you want to add custom attributes.
--   
--   <a>$sel:customAttributes:AddCustomAttributes'</a>,
--   <a>addCustomAttributes_customAttributes</a> - An array of custom
--   attributes, such as Mutable and Name.
newAddCustomAttributes :: Text -> NonEmpty SchemaAttributeType -> AddCustomAttributes

-- | The user pool ID for the user pool where you want to add custom
--   attributes.
addCustomAttributes_userPoolId :: Lens' AddCustomAttributes Text

-- | An array of custom attributes, such as Mutable and Name.
addCustomAttributes_customAttributes :: Lens' AddCustomAttributes (NonEmpty SchemaAttributeType)

-- | Represents the response from the server for the request to add custom
--   attributes.
--   
--   <i>See:</i> <a>newAddCustomAttributesResponse</a> smart constructor.
data AddCustomAttributesResponse
AddCustomAttributesResponse' :: Int -> AddCustomAttributesResponse

-- | The response's http status code.
[$sel:httpStatus:AddCustomAttributesResponse'] :: AddCustomAttributesResponse -> Int

-- | Create a value of <a>AddCustomAttributesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:AddCustomAttributesResponse'</a>,
--   <a>addCustomAttributesResponse_httpStatus</a> - The response's http
--   status code.
newAddCustomAttributesResponse :: Int -> AddCustomAttributesResponse

-- | The response's http status code.
addCustomAttributesResponse_httpStatus :: Lens' AddCustomAttributesResponse Int
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.AddCustomAttributes.AddCustomAttributes
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.AddCustomAttributes.AddCustomAttributes
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.AddCustomAttributes.AddCustomAttributes
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.AddCustomAttributes.AddCustomAttributes
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.AddCustomAttributes.AddCustomAttributesResponse
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.AddCustomAttributes.AddCustomAttributesResponse
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.AddCustomAttributes.AddCustomAttributesResponse
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.AddCustomAttributes.AddCustomAttributesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CognitoIdentityProvider.AddCustomAttributes.AddCustomAttributes
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.AddCustomAttributes.AddCustomAttributesResponse
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.AddCustomAttributes.AddCustomAttributes
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.AddCustomAttributes.AddCustomAttributes
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CognitoIdentityProvider.AddCustomAttributes.AddCustomAttributes
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.AddCustomAttributes.AddCustomAttributes
instance Network.AWS.Data.Path.ToPath Network.AWS.CognitoIdentityProvider.AddCustomAttributes.AddCustomAttributes
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentityProvider.AddCustomAttributes.AddCustomAttributes


-- | Removes the specified tags from an Amazon Cognito user pool. You can
--   use this action up to 5 times per second, per account
module Network.AWS.CognitoIdentityProvider.UntagResource

-- | <i>See:</i> <a>newUntagResource</a> smart constructor.
data UntagResource
UntagResource' :: Text -> [Text] -> UntagResource

-- | The Amazon Resource Name (ARN) of the user pool that the tags are
--   assigned to.
[$sel:resourceArn:UntagResource'] :: UntagResource -> Text

-- | The keys of the tags to remove from the user pool.
[$sel:tagKeys:UntagResource'] :: UntagResource -> [Text]

-- | Create a value of <a>UntagResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:UntagResource'</a>,
--   <a>untagResource_resourceArn</a> - The Amazon Resource Name (ARN) of
--   the user pool that the tags are assigned to.
--   
--   <a>$sel:tagKeys:UntagResource'</a>, <a>untagResource_tagKeys</a> - The
--   keys of the tags to remove from the user pool.
newUntagResource :: Text -> UntagResource

-- | The Amazon Resource Name (ARN) of the user pool that the tags are
--   assigned to.
untagResource_resourceArn :: Lens' UntagResource Text

-- | The keys of the tags to remove from the user pool.
untagResource_tagKeys :: Lens' UntagResource [Text]

-- | <i>See:</i> <a>newUntagResourceResponse</a> smart constructor.
data UntagResourceResponse
UntagResourceResponse' :: Int -> UntagResourceResponse

-- | The response's http status code.
[$sel:httpStatus:UntagResourceResponse'] :: UntagResourceResponse -> Int

-- | Create a value of <a>UntagResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UntagResourceResponse'</a>,
--   <a>untagResourceResponse_httpStatus</a> - The response's http status
--   code.
newUntagResourceResponse :: Int -> UntagResourceResponse

-- | The response's http status code.
untagResourceResponse_httpStatus :: Lens' UntagResourceResponse Int
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.UntagResource.UntagResource
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.UntagResource.UntagResource
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.UntagResource.UntagResource
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.UntagResource.UntagResource
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.UntagResource.UntagResourceResponse
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.UntagResource.UntagResourceResponse
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.UntagResource.UntagResourceResponse
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.UntagResource.UntagResourceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CognitoIdentityProvider.UntagResource.UntagResource
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.UntagResource.UntagResourceResponse
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.UntagResource.UntagResource
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.UntagResource.UntagResource
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CognitoIdentityProvider.UntagResource.UntagResource
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.UntagResource.UntagResource
instance Network.AWS.Data.Path.ToPath Network.AWS.CognitoIdentityProvider.UntagResource.UntagResource
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentityProvider.UntagResource.UntagResource


-- | Provides the feedback for an authentication event whether it was from
--   a valid user or not. This feedback is used for improving the risk
--   evaluation decision for the user pool as part of Amazon Cognito
--   advanced security.
module Network.AWS.CognitoIdentityProvider.UpdateAuthEventFeedback

-- | <i>See:</i> <a>newUpdateAuthEventFeedback</a> smart constructor.
data UpdateAuthEventFeedback
UpdateAuthEventFeedback' :: Text -> Sensitive Text -> Text -> Sensitive Text -> FeedbackValueType -> UpdateAuthEventFeedback

-- | The user pool ID.
[$sel:userPoolId:UpdateAuthEventFeedback'] :: UpdateAuthEventFeedback -> Text

-- | The user pool username.
[$sel:username:UpdateAuthEventFeedback'] :: UpdateAuthEventFeedback -> Sensitive Text

-- | The event ID.
[$sel:eventId:UpdateAuthEventFeedback'] :: UpdateAuthEventFeedback -> Text

-- | The feedback token.
[$sel:feedbackToken:UpdateAuthEventFeedback'] :: UpdateAuthEventFeedback -> Sensitive Text

-- | The authentication event feedback value.
[$sel:feedbackValue:UpdateAuthEventFeedback'] :: UpdateAuthEventFeedback -> FeedbackValueType

-- | Create a value of <a>UpdateAuthEventFeedback</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userPoolId:UpdateAuthEventFeedback'</a>,
--   <a>updateAuthEventFeedback_userPoolId</a> - The user pool ID.
--   
--   <a>$sel:username:UpdateAuthEventFeedback'</a>,
--   <a>updateAuthEventFeedback_username</a> - The user pool username.
--   
--   <a>$sel:eventId:UpdateAuthEventFeedback'</a>,
--   <a>updateAuthEventFeedback_eventId</a> - The event ID.
--   
--   <a>$sel:feedbackToken:UpdateAuthEventFeedback'</a>,
--   <a>updateAuthEventFeedback_feedbackToken</a> - The feedback token.
--   
--   <a>$sel:feedbackValue:UpdateAuthEventFeedback'</a>,
--   <a>updateAuthEventFeedback_feedbackValue</a> - The authentication
--   event feedback value.
newUpdateAuthEventFeedback :: Text -> Text -> Text -> Text -> FeedbackValueType -> UpdateAuthEventFeedback

-- | The user pool ID.
updateAuthEventFeedback_userPoolId :: Lens' UpdateAuthEventFeedback Text

-- | The user pool username.
updateAuthEventFeedback_username :: Lens' UpdateAuthEventFeedback Text

-- | The event ID.
updateAuthEventFeedback_eventId :: Lens' UpdateAuthEventFeedback Text

-- | The feedback token.
updateAuthEventFeedback_feedbackToken :: Lens' UpdateAuthEventFeedback Text

-- | The authentication event feedback value.
updateAuthEventFeedback_feedbackValue :: Lens' UpdateAuthEventFeedback FeedbackValueType

-- | <i>See:</i> <a>newUpdateAuthEventFeedbackResponse</a> smart
--   constructor.
data UpdateAuthEventFeedbackResponse
UpdateAuthEventFeedbackResponse' :: Int -> UpdateAuthEventFeedbackResponse

-- | The response's http status code.
[$sel:httpStatus:UpdateAuthEventFeedbackResponse'] :: UpdateAuthEventFeedbackResponse -> Int

-- | Create a value of <a>UpdateAuthEventFeedbackResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateAuthEventFeedbackResponse'</a>,
--   <a>updateAuthEventFeedbackResponse_httpStatus</a> - The response's
--   http status code.
newUpdateAuthEventFeedbackResponse :: Int -> UpdateAuthEventFeedbackResponse

-- | The response's http status code.
updateAuthEventFeedbackResponse_httpStatus :: Lens' UpdateAuthEventFeedbackResponse Int
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.UpdateAuthEventFeedback.UpdateAuthEventFeedback
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.UpdateAuthEventFeedback.UpdateAuthEventFeedback
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.UpdateAuthEventFeedback.UpdateAuthEventFeedback
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.UpdateAuthEventFeedback.UpdateAuthEventFeedbackResponse
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.UpdateAuthEventFeedback.UpdateAuthEventFeedbackResponse
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.UpdateAuthEventFeedback.UpdateAuthEventFeedbackResponse
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.UpdateAuthEventFeedback.UpdateAuthEventFeedbackResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CognitoIdentityProvider.UpdateAuthEventFeedback.UpdateAuthEventFeedback
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.UpdateAuthEventFeedback.UpdateAuthEventFeedbackResponse
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.UpdateAuthEventFeedback.UpdateAuthEventFeedback
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.UpdateAuthEventFeedback.UpdateAuthEventFeedback
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CognitoIdentityProvider.UpdateAuthEventFeedback.UpdateAuthEventFeedback
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.UpdateAuthEventFeedback.UpdateAuthEventFeedback
instance Network.AWS.Data.Path.ToPath Network.AWS.CognitoIdentityProvider.UpdateAuthEventFeedback.UpdateAuthEventFeedback
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentityProvider.UpdateAuthEventFeedback.UpdateAuthEventFeedback


-- | Updates the device status.
module Network.AWS.CognitoIdentityProvider.UpdateDeviceStatus

-- | Represents the request to update the device status.
--   
--   <i>See:</i> <a>newUpdateDeviceStatus</a> smart constructor.
data UpdateDeviceStatus
UpdateDeviceStatus' :: Maybe DeviceRememberedStatusType -> Sensitive Text -> Text -> UpdateDeviceStatus

-- | The status of whether a device is remembered.
[$sel:deviceRememberedStatus:UpdateDeviceStatus'] :: UpdateDeviceStatus -> Maybe DeviceRememberedStatusType

-- | The access token.
[$sel:accessToken:UpdateDeviceStatus'] :: UpdateDeviceStatus -> Sensitive Text

-- | The device key.
[$sel:deviceKey:UpdateDeviceStatus'] :: UpdateDeviceStatus -> Text

-- | Create a value of <a>UpdateDeviceStatus</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deviceRememberedStatus:UpdateDeviceStatus'</a>,
--   <a>updateDeviceStatus_deviceRememberedStatus</a> - The status of
--   whether a device is remembered.
--   
--   <a>$sel:accessToken:UpdateDeviceStatus'</a>,
--   <a>updateDeviceStatus_accessToken</a> - The access token.
--   
--   <a>$sel:deviceKey:UpdateDeviceStatus'</a>,
--   <a>updateDeviceStatus_deviceKey</a> - The device key.
newUpdateDeviceStatus :: Text -> Text -> UpdateDeviceStatus

-- | The status of whether a device is remembered.
updateDeviceStatus_deviceRememberedStatus :: Lens' UpdateDeviceStatus (Maybe DeviceRememberedStatusType)

-- | The access token.
updateDeviceStatus_accessToken :: Lens' UpdateDeviceStatus Text

-- | The device key.
updateDeviceStatus_deviceKey :: Lens' UpdateDeviceStatus Text

-- | The response to the request to update the device status.
--   
--   <i>See:</i> <a>newUpdateDeviceStatusResponse</a> smart constructor.
data UpdateDeviceStatusResponse
UpdateDeviceStatusResponse' :: Int -> UpdateDeviceStatusResponse

-- | The response's http status code.
[$sel:httpStatus:UpdateDeviceStatusResponse'] :: UpdateDeviceStatusResponse -> Int

-- | Create a value of <a>UpdateDeviceStatusResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateDeviceStatusResponse'</a>,
--   <a>updateDeviceStatusResponse_httpStatus</a> - The response's http
--   status code.
newUpdateDeviceStatusResponse :: Int -> UpdateDeviceStatusResponse

-- | The response's http status code.
updateDeviceStatusResponse_httpStatus :: Lens' UpdateDeviceStatusResponse Int
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.UpdateDeviceStatus.UpdateDeviceStatus
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.UpdateDeviceStatus.UpdateDeviceStatus
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.UpdateDeviceStatus.UpdateDeviceStatus
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.UpdateDeviceStatus.UpdateDeviceStatusResponse
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.UpdateDeviceStatus.UpdateDeviceStatusResponse
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.UpdateDeviceStatus.UpdateDeviceStatusResponse
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.UpdateDeviceStatus.UpdateDeviceStatusResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CognitoIdentityProvider.UpdateDeviceStatus.UpdateDeviceStatus
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.UpdateDeviceStatus.UpdateDeviceStatusResponse
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.UpdateDeviceStatus.UpdateDeviceStatus
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.UpdateDeviceStatus.UpdateDeviceStatus
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CognitoIdentityProvider.UpdateDeviceStatus.UpdateDeviceStatus
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.UpdateDeviceStatus.UpdateDeviceStatus
instance Network.AWS.Data.Path.ToPath Network.AWS.CognitoIdentityProvider.UpdateDeviceStatus.UpdateDeviceStatus
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentityProvider.UpdateDeviceStatus.UpdateDeviceStatus


-- | Updates the specified group with the specified attributes.
--   
--   Calling this action requires developer credentials.
module Network.AWS.CognitoIdentityProvider.UpdateGroup

-- | <i>See:</i> <a>newUpdateGroup</a> smart constructor.
data UpdateGroup
UpdateGroup' :: Maybe Natural -> Maybe Text -> Maybe Text -> Text -> Text -> UpdateGroup

-- | The new precedence value for the group. For more information about
--   this parameter, see <a>CreateGroup</a>.
[$sel:precedence:UpdateGroup'] :: UpdateGroup -> Maybe Natural

-- | A string containing the new description of the group.
[$sel:description:UpdateGroup'] :: UpdateGroup -> Maybe Text

-- | The new role ARN for the group. This is used for setting the
--   <tt>cognito:roles</tt> and <tt>cognito:preferred_role</tt> claims in
--   the token.
[$sel:roleArn:UpdateGroup'] :: UpdateGroup -> Maybe Text

-- | The name of the group.
[$sel:groupName:UpdateGroup'] :: UpdateGroup -> Text

-- | The user pool ID for the user pool.
[$sel:userPoolId:UpdateGroup'] :: UpdateGroup -> Text

-- | Create a value of <a>UpdateGroup</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:precedence:UpdateGroup'</a>, <a>updateGroup_precedence</a> -
--   The new precedence value for the group. For more information about
--   this parameter, see <a>CreateGroup</a>.
--   
--   <a>$sel:description:UpdateGroup'</a>, <a>updateGroup_description</a> -
--   A string containing the new description of the group.
--   
--   <a>$sel:roleArn:UpdateGroup'</a>, <a>updateGroup_roleArn</a> - The new
--   role ARN for the group. This is used for setting the
--   <tt>cognito:roles</tt> and <tt>cognito:preferred_role</tt> claims in
--   the token.
--   
--   <a>$sel:groupName:UpdateGroup'</a>, <a>updateGroup_groupName</a> - The
--   name of the group.
--   
--   <a>$sel:userPoolId:UpdateGroup'</a>, <a>updateGroup_userPoolId</a> -
--   The user pool ID for the user pool.
newUpdateGroup :: Text -> Text -> UpdateGroup

-- | The new precedence value for the group. For more information about
--   this parameter, see <a>CreateGroup</a>.
updateGroup_precedence :: Lens' UpdateGroup (Maybe Natural)

-- | A string containing the new description of the group.
updateGroup_description :: Lens' UpdateGroup (Maybe Text)

-- | The new role ARN for the group. This is used for setting the
--   <tt>cognito:roles</tt> and <tt>cognito:preferred_role</tt> claims in
--   the token.
updateGroup_roleArn :: Lens' UpdateGroup (Maybe Text)

-- | The name of the group.
updateGroup_groupName :: Lens' UpdateGroup Text

-- | The user pool ID for the user pool.
updateGroup_userPoolId :: Lens' UpdateGroup Text

-- | <i>See:</i> <a>newUpdateGroupResponse</a> smart constructor.
data UpdateGroupResponse
UpdateGroupResponse' :: Maybe GroupType -> Int -> UpdateGroupResponse

-- | The group object for the group.
[$sel:group':UpdateGroupResponse'] :: UpdateGroupResponse -> Maybe GroupType

-- | The response's http status code.
[$sel:httpStatus:UpdateGroupResponse'] :: UpdateGroupResponse -> Int

-- | Create a value of <a>UpdateGroupResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:group':UpdateGroupResponse'</a>,
--   <a>updateGroupResponse_group</a> - The group object for the group.
--   
--   <a>$sel:httpStatus:UpdateGroupResponse'</a>,
--   <a>updateGroupResponse_httpStatus</a> - The response's http status
--   code.
newUpdateGroupResponse :: Int -> UpdateGroupResponse

-- | The group object for the group.
updateGroupResponse_group :: Lens' UpdateGroupResponse (Maybe GroupType)

-- | The response's http status code.
updateGroupResponse_httpStatus :: Lens' UpdateGroupResponse Int
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.UpdateGroup.UpdateGroup
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.UpdateGroup.UpdateGroup
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.UpdateGroup.UpdateGroup
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.UpdateGroup.UpdateGroup
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.UpdateGroup.UpdateGroupResponse
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.UpdateGroup.UpdateGroupResponse
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.UpdateGroup.UpdateGroupResponse
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.UpdateGroup.UpdateGroupResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CognitoIdentityProvider.UpdateGroup.UpdateGroup
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.UpdateGroup.UpdateGroupResponse
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.UpdateGroup.UpdateGroup
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.UpdateGroup.UpdateGroup
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CognitoIdentityProvider.UpdateGroup.UpdateGroup
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.UpdateGroup.UpdateGroup
instance Network.AWS.Data.Path.ToPath Network.AWS.CognitoIdentityProvider.UpdateGroup.UpdateGroup
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentityProvider.UpdateGroup.UpdateGroup


-- | Updates identity provider information for a user pool.
module Network.AWS.CognitoIdentityProvider.UpdateIdentityProvider

-- | <i>See:</i> <a>newUpdateIdentityProvider</a> smart constructor.
data UpdateIdentityProvider
UpdateIdentityProvider' :: Maybe [Text] -> Maybe (HashMap Text Text) -> Maybe (HashMap Text Text) -> Text -> Text -> UpdateIdentityProvider

-- | A list of identity provider identifiers.
[$sel:idpIdentifiers:UpdateIdentityProvider'] :: UpdateIdentityProvider -> Maybe [Text]

-- | The identity provider attribute mapping to be changed.
[$sel:attributeMapping:UpdateIdentityProvider'] :: UpdateIdentityProvider -> Maybe (HashMap Text Text)

-- | The identity provider details to be updated, such as
--   <tt>MetadataURL</tt> and <tt>MetadataFile</tt>.
[$sel:providerDetails:UpdateIdentityProvider'] :: UpdateIdentityProvider -> Maybe (HashMap Text Text)

-- | The user pool ID.
[$sel:userPoolId:UpdateIdentityProvider'] :: UpdateIdentityProvider -> Text

-- | The identity provider name.
[$sel:providerName:UpdateIdentityProvider'] :: UpdateIdentityProvider -> Text

-- | Create a value of <a>UpdateIdentityProvider</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:idpIdentifiers:UpdateIdentityProvider'</a>,
--   <a>updateIdentityProvider_idpIdentifiers</a> - A list of identity
--   provider identifiers.
--   
--   <a>$sel:attributeMapping:UpdateIdentityProvider'</a>,
--   <a>updateIdentityProvider_attributeMapping</a> - The identity provider
--   attribute mapping to be changed.
--   
--   <a>$sel:providerDetails:UpdateIdentityProvider'</a>,
--   <a>updateIdentityProvider_providerDetails</a> - The identity provider
--   details to be updated, such as <tt>MetadataURL</tt> and
--   <tt>MetadataFile</tt>.
--   
--   <a>$sel:userPoolId:UpdateIdentityProvider'</a>,
--   <a>updateIdentityProvider_userPoolId</a> - The user pool ID.
--   
--   <a>$sel:providerName:UpdateIdentityProvider'</a>,
--   <a>updateIdentityProvider_providerName</a> - The identity provider
--   name.
newUpdateIdentityProvider :: Text -> Text -> UpdateIdentityProvider

-- | A list of identity provider identifiers.
updateIdentityProvider_idpIdentifiers :: Lens' UpdateIdentityProvider (Maybe [Text])

-- | The identity provider attribute mapping to be changed.
updateIdentityProvider_attributeMapping :: Lens' UpdateIdentityProvider (Maybe (HashMap Text Text))

-- | The identity provider details to be updated, such as
--   <tt>MetadataURL</tt> and <tt>MetadataFile</tt>.
updateIdentityProvider_providerDetails :: Lens' UpdateIdentityProvider (Maybe (HashMap Text Text))

-- | The user pool ID.
updateIdentityProvider_userPoolId :: Lens' UpdateIdentityProvider Text

-- | The identity provider name.
updateIdentityProvider_providerName :: Lens' UpdateIdentityProvider Text

-- | <i>See:</i> <a>newUpdateIdentityProviderResponse</a> smart
--   constructor.
data UpdateIdentityProviderResponse
UpdateIdentityProviderResponse' :: Int -> IdentityProviderType -> UpdateIdentityProviderResponse

-- | The response's http status code.
[$sel:httpStatus:UpdateIdentityProviderResponse'] :: UpdateIdentityProviderResponse -> Int

-- | The identity provider object.
[$sel:identityProvider:UpdateIdentityProviderResponse'] :: UpdateIdentityProviderResponse -> IdentityProviderType

-- | Create a value of <a>UpdateIdentityProviderResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateIdentityProviderResponse'</a>,
--   <a>updateIdentityProviderResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:identityProvider:UpdateIdentityProviderResponse'</a>,
--   <a>updateIdentityProviderResponse_identityProvider</a> - The identity
--   provider object.
newUpdateIdentityProviderResponse :: Int -> IdentityProviderType -> UpdateIdentityProviderResponse

-- | The response's http status code.
updateIdentityProviderResponse_httpStatus :: Lens' UpdateIdentityProviderResponse Int

-- | The identity provider object.
updateIdentityProviderResponse_identityProvider :: Lens' UpdateIdentityProviderResponse IdentityProviderType
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.UpdateIdentityProvider.UpdateIdentityProvider
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.UpdateIdentityProvider.UpdateIdentityProvider
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.UpdateIdentityProvider.UpdateIdentityProvider
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.UpdateIdentityProvider.UpdateIdentityProvider
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.UpdateIdentityProvider.UpdateIdentityProviderResponse
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.UpdateIdentityProvider.UpdateIdentityProviderResponse
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.UpdateIdentityProvider.UpdateIdentityProviderResponse
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.UpdateIdentityProvider.UpdateIdentityProviderResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CognitoIdentityProvider.UpdateIdentityProvider.UpdateIdentityProvider
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.UpdateIdentityProvider.UpdateIdentityProviderResponse
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.UpdateIdentityProvider.UpdateIdentityProvider
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.UpdateIdentityProvider.UpdateIdentityProvider
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CognitoIdentityProvider.UpdateIdentityProvider.UpdateIdentityProvider
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.UpdateIdentityProvider.UpdateIdentityProvider
instance Network.AWS.Data.Path.ToPath Network.AWS.CognitoIdentityProvider.UpdateIdentityProvider.UpdateIdentityProvider
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentityProvider.UpdateIdentityProvider.UpdateIdentityProvider


-- | Updates the name and scopes of resource server. All other fields are
--   read-only.
--   
--   If you don't provide a value for an attribute, it will be set to the
--   default value.
module Network.AWS.CognitoIdentityProvider.UpdateResourceServer

-- | <i>See:</i> <a>newUpdateResourceServer</a> smart constructor.
data UpdateResourceServer
UpdateResourceServer' :: Maybe [ResourceServerScopeType] -> Text -> Text -> Text -> UpdateResourceServer

-- | The scope values to be set for the resource server.
[$sel:scopes:UpdateResourceServer'] :: UpdateResourceServer -> Maybe [ResourceServerScopeType]

-- | The user pool ID for the user pool.
[$sel:userPoolId:UpdateResourceServer'] :: UpdateResourceServer -> Text

-- | The identifier for the resource server.
[$sel:identifier:UpdateResourceServer'] :: UpdateResourceServer -> Text

-- | The name of the resource server.
[$sel:name:UpdateResourceServer'] :: UpdateResourceServer -> Text

-- | Create a value of <a>UpdateResourceServer</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:scopes:UpdateResourceServer'</a>,
--   <a>updateResourceServer_scopes</a> - The scope values to be set for
--   the resource server.
--   
--   <a>$sel:userPoolId:UpdateResourceServer'</a>,
--   <a>updateResourceServer_userPoolId</a> - The user pool ID for the user
--   pool.
--   
--   <a>$sel:identifier:UpdateResourceServer'</a>,
--   <a>updateResourceServer_identifier</a> - The identifier for the
--   resource server.
--   
--   <a>$sel:name:UpdateResourceServer'</a>,
--   <a>updateResourceServer_name</a> - The name of the resource server.
newUpdateResourceServer :: Text -> Text -> Text -> UpdateResourceServer

-- | The scope values to be set for the resource server.
updateResourceServer_scopes :: Lens' UpdateResourceServer (Maybe [ResourceServerScopeType])

-- | The user pool ID for the user pool.
updateResourceServer_userPoolId :: Lens' UpdateResourceServer Text

-- | The identifier for the resource server.
updateResourceServer_identifier :: Lens' UpdateResourceServer Text

-- | The name of the resource server.
updateResourceServer_name :: Lens' UpdateResourceServer Text

-- | <i>See:</i> <a>newUpdateResourceServerResponse</a> smart constructor.
data UpdateResourceServerResponse
UpdateResourceServerResponse' :: Int -> ResourceServerType -> UpdateResourceServerResponse

-- | The response's http status code.
[$sel:httpStatus:UpdateResourceServerResponse'] :: UpdateResourceServerResponse -> Int

-- | The resource server.
[$sel:resourceServer:UpdateResourceServerResponse'] :: UpdateResourceServerResponse -> ResourceServerType

-- | Create a value of <a>UpdateResourceServerResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateResourceServerResponse'</a>,
--   <a>updateResourceServerResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:resourceServer:UpdateResourceServerResponse'</a>,
--   <a>updateResourceServerResponse_resourceServer</a> - The resource
--   server.
newUpdateResourceServerResponse :: Int -> ResourceServerType -> UpdateResourceServerResponse

-- | The response's http status code.
updateResourceServerResponse_httpStatus :: Lens' UpdateResourceServerResponse Int

-- | The resource server.
updateResourceServerResponse_resourceServer :: Lens' UpdateResourceServerResponse ResourceServerType
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.UpdateResourceServer.UpdateResourceServer
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.UpdateResourceServer.UpdateResourceServer
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.UpdateResourceServer.UpdateResourceServer
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.UpdateResourceServer.UpdateResourceServer
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.UpdateResourceServer.UpdateResourceServerResponse
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.UpdateResourceServer.UpdateResourceServerResponse
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.UpdateResourceServer.UpdateResourceServerResponse
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.UpdateResourceServer.UpdateResourceServerResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CognitoIdentityProvider.UpdateResourceServer.UpdateResourceServer
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.UpdateResourceServer.UpdateResourceServerResponse
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.UpdateResourceServer.UpdateResourceServer
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.UpdateResourceServer.UpdateResourceServer
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CognitoIdentityProvider.UpdateResourceServer.UpdateResourceServer
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.UpdateResourceServer.UpdateResourceServer
instance Network.AWS.Data.Path.ToPath Network.AWS.CognitoIdentityProvider.UpdateResourceServer.UpdateResourceServer
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentityProvider.UpdateResourceServer.UpdateResourceServer


-- | Allows a user to update a specific attribute (one at a time).
--   
--   This action might generate an SMS text message. Starting June 1, 2021,
--   U.S. telecom carriers require that you register an origination phone
--   number before you can send SMS messages to U.S. phone numbers. If you
--   use SMS text messages in Amazon Cognito, you must register a phone
--   number with <a>Amazon Pinpoint</a>. Cognito will use the the
--   registered number automatically. Otherwise, Cognito users that must
--   receive SMS messages might be unable to sign up, activate their
--   accounts, or sign in.
--   
--   If you have never used SMS text messages with Amazon Cognito or any
--   other Amazon Web Service, Amazon SNS might place your account in SMS
--   sandbox. In
--   <i>&lt;https:</i><i>docs.aws.amazon.com</i>sns<i>latest</i>dg<i>sns-sms-sandbox.html
--   sandbox mode&gt;</i> , you’ll have limitations, such as sending
--   messages to only verified phone numbers. After testing in the sandbox
--   environment, you can move out of the SMS sandbox and into production.
--   For more information, see <a>SMS message settings for Cognito User
--   Pools</a> in the <i>Amazon Cognito Developer Guide</i>.
module Network.AWS.CognitoIdentityProvider.UpdateUserAttributes

-- | Represents the request to update user attributes.
--   
--   <i>See:</i> <a>newUpdateUserAttributes</a> smart constructor.
data UpdateUserAttributes
UpdateUserAttributes' :: Maybe (HashMap Text Text) -> [AttributeType] -> Sensitive Text -> UpdateUserAttributes

-- | A map of custom key-value pairs that you can provide as input for any
--   custom workflows that this action triggers.
--   
--   You create custom workflows by assigning Lambda functions to user pool
--   triggers. When you use the UpdateUserAttributes API action, Amazon
--   Cognito invokes the function that is assigned to the <i>custom
--   message</i> trigger. When Amazon Cognito invokes this function, it
--   passes a JSON payload, which the function receives as input. This
--   payload contains a <tt>clientMetadata</tt> attribute, which provides
--   the data that you assigned to the ClientMetadata parameter in your
--   UpdateUserAttributes request. In your function code in Lambda, you can
--   process the <tt>clientMetadata</tt> value to enhance your workflow for
--   your specific needs.
--   
--   For more information, see <a>Customizing User Pool Workflows with
--   Lambda Triggers</a> in the <i>Amazon Cognito Developer Guide</i>.
--   
--   Take the following limitations into consideration when you use the
--   ClientMetadata parameter:
--   
--   <ul>
--   <li>Amazon Cognito does not store the ClientMetadata value. This data
--   is available only to Lambda triggers that are assigned to a user pool
--   to support custom workflows. If your user pool configuration does not
--   include triggers, the ClientMetadata parameter serves no purpose.</li>
--   <li>Amazon Cognito does not validate the ClientMetadata value.</li>
--   <li>Amazon Cognito does not encrypt the the ClientMetadata value, so
--   don't use it to provide sensitive information.</li>
--   </ul>
[$sel:clientMetadata:UpdateUserAttributes'] :: UpdateUserAttributes -> Maybe (HashMap Text Text)

-- | An array of name-value pairs representing user attributes.
--   
--   For custom attributes, you must prepend the <tt>custom:</tt> prefix to
--   the attribute name.
[$sel:userAttributes:UpdateUserAttributes'] :: UpdateUserAttributes -> [AttributeType]

-- | The access token for the request to update user attributes.
[$sel:accessToken:UpdateUserAttributes'] :: UpdateUserAttributes -> Sensitive Text

-- | Create a value of <a>UpdateUserAttributes</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientMetadata:UpdateUserAttributes'</a>,
--   <a>updateUserAttributes_clientMetadata</a> - A map of custom key-value
--   pairs that you can provide as input for any custom workflows that this
--   action triggers.
--   
--   You create custom workflows by assigning Lambda functions to user pool
--   triggers. When you use the UpdateUserAttributes API action, Amazon
--   Cognito invokes the function that is assigned to the <i>custom
--   message</i> trigger. When Amazon Cognito invokes this function, it
--   passes a JSON payload, which the function receives as input. This
--   payload contains a <tt>clientMetadata</tt> attribute, which provides
--   the data that you assigned to the ClientMetadata parameter in your
--   UpdateUserAttributes request. In your function code in Lambda, you can
--   process the <tt>clientMetadata</tt> value to enhance your workflow for
--   your specific needs.
--   
--   For more information, see <a>Customizing User Pool Workflows with
--   Lambda Triggers</a> in the <i>Amazon Cognito Developer Guide</i>.
--   
--   Take the following limitations into consideration when you use the
--   ClientMetadata parameter:
--   
--   <ul>
--   <li>Amazon Cognito does not store the ClientMetadata value. This data
--   is available only to Lambda triggers that are assigned to a user pool
--   to support custom workflows. If your user pool configuration does not
--   include triggers, the ClientMetadata parameter serves no purpose.</li>
--   <li>Amazon Cognito does not validate the ClientMetadata value.</li>
--   <li>Amazon Cognito does not encrypt the the ClientMetadata value, so
--   don't use it to provide sensitive information.</li>
--   </ul>
--   
--   <a>$sel:userAttributes:UpdateUserAttributes'</a>,
--   <a>updateUserAttributes_userAttributes</a> - An array of name-value
--   pairs representing user attributes.
--   
--   For custom attributes, you must prepend the <tt>custom:</tt> prefix to
--   the attribute name.
--   
--   <a>$sel:accessToken:UpdateUserAttributes'</a>,
--   <a>updateUserAttributes_accessToken</a> - The access token for the
--   request to update user attributes.
newUpdateUserAttributes :: Text -> UpdateUserAttributes

-- | A map of custom key-value pairs that you can provide as input for any
--   custom workflows that this action triggers.
--   
--   You create custom workflows by assigning Lambda functions to user pool
--   triggers. When you use the UpdateUserAttributes API action, Amazon
--   Cognito invokes the function that is assigned to the <i>custom
--   message</i> trigger. When Amazon Cognito invokes this function, it
--   passes a JSON payload, which the function receives as input. This
--   payload contains a <tt>clientMetadata</tt> attribute, which provides
--   the data that you assigned to the ClientMetadata parameter in your
--   UpdateUserAttributes request. In your function code in Lambda, you can
--   process the <tt>clientMetadata</tt> value to enhance your workflow for
--   your specific needs.
--   
--   For more information, see <a>Customizing User Pool Workflows with
--   Lambda Triggers</a> in the <i>Amazon Cognito Developer Guide</i>.
--   
--   Take the following limitations into consideration when you use the
--   ClientMetadata parameter:
--   
--   <ul>
--   <li>Amazon Cognito does not store the ClientMetadata value. This data
--   is available only to Lambda triggers that are assigned to a user pool
--   to support custom workflows. If your user pool configuration does not
--   include triggers, the ClientMetadata parameter serves no purpose.</li>
--   <li>Amazon Cognito does not validate the ClientMetadata value.</li>
--   <li>Amazon Cognito does not encrypt the the ClientMetadata value, so
--   don't use it to provide sensitive information.</li>
--   </ul>
updateUserAttributes_clientMetadata :: Lens' UpdateUserAttributes (Maybe (HashMap Text Text))

-- | An array of name-value pairs representing user attributes.
--   
--   For custom attributes, you must prepend the <tt>custom:</tt> prefix to
--   the attribute name.
updateUserAttributes_userAttributes :: Lens' UpdateUserAttributes [AttributeType]

-- | The access token for the request to update user attributes.
updateUserAttributes_accessToken :: Lens' UpdateUserAttributes Text

-- | Represents the response from the server for the request to update user
--   attributes.
--   
--   <i>See:</i> <a>newUpdateUserAttributesResponse</a> smart constructor.
data UpdateUserAttributesResponse
UpdateUserAttributesResponse' :: Maybe [CodeDeliveryDetailsType] -> Int -> UpdateUserAttributesResponse

-- | The code delivery details list from the server for the request to
--   update user attributes.
[$sel:codeDeliveryDetailsList:UpdateUserAttributesResponse'] :: UpdateUserAttributesResponse -> Maybe [CodeDeliveryDetailsType]

-- | The response's http status code.
[$sel:httpStatus:UpdateUserAttributesResponse'] :: UpdateUserAttributesResponse -> Int

-- | Create a value of <a>UpdateUserAttributesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:codeDeliveryDetailsList:UpdateUserAttributesResponse'</a>,
--   <a>updateUserAttributesResponse_codeDeliveryDetailsList</a> - The code
--   delivery details list from the server for the request to update user
--   attributes.
--   
--   <a>$sel:httpStatus:UpdateUserAttributesResponse'</a>,
--   <a>updateUserAttributesResponse_httpStatus</a> - The response's http
--   status code.
newUpdateUserAttributesResponse :: Int -> UpdateUserAttributesResponse

-- | The code delivery details list from the server for the request to
--   update user attributes.
updateUserAttributesResponse_codeDeliveryDetailsList :: Lens' UpdateUserAttributesResponse (Maybe [CodeDeliveryDetailsType])

-- | The response's http status code.
updateUserAttributesResponse_httpStatus :: Lens' UpdateUserAttributesResponse Int
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.UpdateUserAttributes.UpdateUserAttributes
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.UpdateUserAttributes.UpdateUserAttributes
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.UpdateUserAttributes.UpdateUserAttributes
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.UpdateUserAttributes.UpdateUserAttributesResponse
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.UpdateUserAttributes.UpdateUserAttributesResponse
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.UpdateUserAttributes.UpdateUserAttributesResponse
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.UpdateUserAttributes.UpdateUserAttributesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CognitoIdentityProvider.UpdateUserAttributes.UpdateUserAttributes
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.UpdateUserAttributes.UpdateUserAttributesResponse
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.UpdateUserAttributes.UpdateUserAttributes
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.UpdateUserAttributes.UpdateUserAttributes
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CognitoIdentityProvider.UpdateUserAttributes.UpdateUserAttributes
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.UpdateUserAttributes.UpdateUserAttributes
instance Network.AWS.Data.Path.ToPath Network.AWS.CognitoIdentityProvider.UpdateUserAttributes.UpdateUserAttributes
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentityProvider.UpdateUserAttributes.UpdateUserAttributes


-- | Updates the specified user pool with the specified attributes. You can
--   get a list of the current user pool settings using
--   <a>DescribeUserPool</a>. If you don't provide a value for an
--   attribute, it will be set to the default value.
--   
--   This action might generate an SMS text message. Starting June 1, 2021,
--   U.S. telecom carriers require that you register an origination phone
--   number before you can send SMS messages to U.S. phone numbers. If you
--   use SMS text messages in Amazon Cognito, you must register a phone
--   number with <a>Amazon Pinpoint</a>. Cognito will use the the
--   registered number automatically. Otherwise, Cognito users that must
--   receive SMS messages might be unable to sign up, activate their
--   accounts, or sign in.
--   
--   If you have never used SMS text messages with Amazon Cognito or any
--   other Amazon Web Service, Amazon SNS might place your account in SMS
--   sandbox. In
--   <i>&lt;https:</i><i>docs.aws.amazon.com</i>sns<i>latest</i>dg<i>sns-sms-sandbox.html
--   sandbox mode&gt;</i> , you’ll have limitations, such as sending
--   messages to only verified phone numbers. After testing in the sandbox
--   environment, you can move out of the SMS sandbox and into production.
--   For more information, see <a>SMS message settings for Cognito User
--   Pools</a> in the <i>Amazon Cognito Developer Guide</i>.
module Network.AWS.CognitoIdentityProvider.UpdateUserPool

-- | Represents the request to update the user pool.
--   
--   <i>See:</i> <a>newUpdateUserPool</a> smart constructor.
data UpdateUserPool
UpdateUserPool' :: Maybe (HashMap Text Text) -> Maybe VerificationMessageTemplateType -> Maybe Text -> Maybe Text -> Maybe UserPoolAddOnsType -> Maybe Text -> Maybe AccountRecoverySettingType -> Maybe EmailConfigurationType -> Maybe Text -> Maybe UserPoolMfaType -> Maybe LambdaConfigType -> Maybe SmsConfigurationType -> Maybe AdminCreateUserConfigType -> Maybe DeviceConfigurationType -> Maybe [VerifiedAttributeType] -> Maybe UserPoolPolicyType -> Text -> UpdateUserPool

-- | The tag keys and values to assign to the user pool. A tag is a label
--   that you can use to categorize and manage user pools in different
--   ways, such as by purpose, owner, environment, or other criteria.
[$sel:userPoolTags:UpdateUserPool'] :: UpdateUserPool -> Maybe (HashMap Text Text)

-- | The template for verification messages.
[$sel:verificationMessageTemplate:UpdateUserPool'] :: UpdateUserPool -> Maybe VerificationMessageTemplateType

-- | The contents of the email verification message.
[$sel:emailVerificationMessage:UpdateUserPool'] :: UpdateUserPool -> Maybe Text

-- | The contents of the SMS authentication message.
[$sel:smsAuthenticationMessage:UpdateUserPool'] :: UpdateUserPool -> Maybe Text

-- | Used to enable advanced security risk detection. Set the key
--   <tt>AdvancedSecurityMode</tt> to the value "AUDIT".
[$sel:userPoolAddOns:UpdateUserPool'] :: UpdateUserPool -> Maybe UserPoolAddOnsType

-- | The subject of the email verification message.
[$sel:emailVerificationSubject:UpdateUserPool'] :: UpdateUserPool -> Maybe Text

-- | Use this setting to define which verified available method a user can
--   use to recover their password when they call <tt>ForgotPassword</tt>.
--   It allows you to define a preferred method when a user has more than
--   one method available. With this setting, SMS does not qualify for a
--   valid password recovery mechanism if the user also has SMS MFA
--   enabled. In the absence of this setting, Cognito uses the legacy
--   behavior to determine the recovery method where SMS is preferred over
--   email.
[$sel:accountRecoverySetting:UpdateUserPool'] :: UpdateUserPool -> Maybe AccountRecoverySettingType

-- | Email configuration.
[$sel:emailConfiguration:UpdateUserPool'] :: UpdateUserPool -> Maybe EmailConfigurationType

-- | A container with information about the SMS verification message.
[$sel:smsVerificationMessage:UpdateUserPool'] :: UpdateUserPool -> Maybe Text

-- | Can be one of the following values:
--   
--   <ul>
--   <li><tt>OFF</tt> - MFA tokens are not required and cannot be specified
--   during user registration.</li>
--   <li><tt>ON</tt> - MFA tokens are required for all user registrations.
--   You can only specify ON when you are initially creating a user pool.
--   You can use the <a>SetUserPoolMfaConfig</a> API operation to turn MFA
--   "ON" for existing user pools.</li>
--   <li><tt>OPTIONAL</tt> - Users have the option when registering to
--   create an MFA token.</li>
--   </ul>
[$sel:mfaConfiguration:UpdateUserPool'] :: UpdateUserPool -> Maybe UserPoolMfaType

-- | The Lambda configuration information from the request to update the
--   user pool.
[$sel:lambdaConfig:UpdateUserPool'] :: UpdateUserPool -> Maybe LambdaConfigType

-- | SMS configuration.
[$sel:smsConfiguration:UpdateUserPool'] :: UpdateUserPool -> Maybe SmsConfigurationType

-- | The configuration for <tt>AdminCreateUser</tt> requests.
[$sel:adminCreateUserConfig:UpdateUserPool'] :: UpdateUserPool -> Maybe AdminCreateUserConfigType

-- | Device configuration.
[$sel:deviceConfiguration:UpdateUserPool'] :: UpdateUserPool -> Maybe DeviceConfigurationType

-- | The attributes that are automatically verified when the Amazon Cognito
--   service makes a request to update user pools.
[$sel:autoVerifiedAttributes:UpdateUserPool'] :: UpdateUserPool -> Maybe [VerifiedAttributeType]

-- | A container with the policies you wish to update in a user pool.
[$sel:policies:UpdateUserPool'] :: UpdateUserPool -> Maybe UserPoolPolicyType

-- | The user pool ID for the user pool you want to update.
[$sel:userPoolId:UpdateUserPool'] :: UpdateUserPool -> Text

-- | Create a value of <a>UpdateUserPool</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userPoolTags:UpdateUserPool'</a>,
--   <a>updateUserPool_userPoolTags</a> - The tag keys and values to assign
--   to the user pool. A tag is a label that you can use to categorize and
--   manage user pools in different ways, such as by purpose, owner,
--   environment, or other criteria.
--   
--   <a>$sel:verificationMessageTemplate:UpdateUserPool'</a>,
--   <a>updateUserPool_verificationMessageTemplate</a> - The template for
--   verification messages.
--   
--   <a>$sel:emailVerificationMessage:UpdateUserPool'</a>,
--   <a>updateUserPool_emailVerificationMessage</a> - The contents of the
--   email verification message.
--   
--   <a>$sel:smsAuthenticationMessage:UpdateUserPool'</a>,
--   <a>updateUserPool_smsAuthenticationMessage</a> - The contents of the
--   SMS authentication message.
--   
--   <a>$sel:userPoolAddOns:UpdateUserPool'</a>,
--   <a>updateUserPool_userPoolAddOns</a> - Used to enable advanced
--   security risk detection. Set the key <tt>AdvancedSecurityMode</tt> to
--   the value "AUDIT".
--   
--   <a>$sel:emailVerificationSubject:UpdateUserPool'</a>,
--   <a>updateUserPool_emailVerificationSubject</a> - The subject of the
--   email verification message.
--   
--   <a>$sel:accountRecoverySetting:UpdateUserPool'</a>,
--   <a>updateUserPool_accountRecoverySetting</a> - Use this setting to
--   define which verified available method a user can use to recover their
--   password when they call <tt>ForgotPassword</tt>. It allows you to
--   define a preferred method when a user has more than one method
--   available. With this setting, SMS does not qualify for a valid
--   password recovery mechanism if the user also has SMS MFA enabled. In
--   the absence of this setting, Cognito uses the legacy behavior to
--   determine the recovery method where SMS is preferred over email.
--   
--   <a>$sel:emailConfiguration:UpdateUserPool'</a>,
--   <a>updateUserPool_emailConfiguration</a> - Email configuration.
--   
--   <a>$sel:smsVerificationMessage:UpdateUserPool'</a>,
--   <a>updateUserPool_smsVerificationMessage</a> - A container with
--   information about the SMS verification message.
--   
--   <a>$sel:mfaConfiguration:UpdateUserPool'</a>,
--   <a>updateUserPool_mfaConfiguration</a> - Can be one of the following
--   values:
--   
--   <ul>
--   <li><tt>OFF</tt> - MFA tokens are not required and cannot be specified
--   during user registration.</li>
--   <li><tt>ON</tt> - MFA tokens are required for all user registrations.
--   You can only specify ON when you are initially creating a user pool.
--   You can use the <a>SetUserPoolMfaConfig</a> API operation to turn MFA
--   "ON" for existing user pools.</li>
--   <li><tt>OPTIONAL</tt> - Users have the option when registering to
--   create an MFA token.</li>
--   </ul>
--   
--   <a>$sel:lambdaConfig:UpdateUserPool'</a>,
--   <a>updateUserPool_lambdaConfig</a> - The Lambda configuration
--   information from the request to update the user pool.
--   
--   <a>$sel:smsConfiguration:UpdateUserPool'</a>,
--   <a>updateUserPool_smsConfiguration</a> - SMS configuration.
--   
--   <a>$sel:adminCreateUserConfig:UpdateUserPool'</a>,
--   <a>updateUserPool_adminCreateUserConfig</a> - The configuration for
--   <tt>AdminCreateUser</tt> requests.
--   
--   <a>$sel:deviceConfiguration:UpdateUserPool'</a>,
--   <a>updateUserPool_deviceConfiguration</a> - Device configuration.
--   
--   <a>$sel:autoVerifiedAttributes:UpdateUserPool'</a>,
--   <a>updateUserPool_autoVerifiedAttributes</a> - The attributes that are
--   automatically verified when the Amazon Cognito service makes a request
--   to update user pools.
--   
--   <a>$sel:policies:UpdateUserPool'</a>, <a>updateUserPool_policies</a> -
--   A container with the policies you wish to update in a user pool.
--   
--   <a>$sel:userPoolId:UpdateUserPool'</a>,
--   <a>updateUserPool_userPoolId</a> - The user pool ID for the user pool
--   you want to update.
newUpdateUserPool :: Text -> UpdateUserPool

-- | The tag keys and values to assign to the user pool. A tag is a label
--   that you can use to categorize and manage user pools in different
--   ways, such as by purpose, owner, environment, or other criteria.
updateUserPool_userPoolTags :: Lens' UpdateUserPool (Maybe (HashMap Text Text))

-- | The template for verification messages.
updateUserPool_verificationMessageTemplate :: Lens' UpdateUserPool (Maybe VerificationMessageTemplateType)

-- | The contents of the email verification message.
updateUserPool_emailVerificationMessage :: Lens' UpdateUserPool (Maybe Text)

-- | The contents of the SMS authentication message.
updateUserPool_smsAuthenticationMessage :: Lens' UpdateUserPool (Maybe Text)

-- | Used to enable advanced security risk detection. Set the key
--   <tt>AdvancedSecurityMode</tt> to the value "AUDIT".
updateUserPool_userPoolAddOns :: Lens' UpdateUserPool (Maybe UserPoolAddOnsType)

-- | The subject of the email verification message.
updateUserPool_emailVerificationSubject :: Lens' UpdateUserPool (Maybe Text)

-- | Use this setting to define which verified available method a user can
--   use to recover their password when they call <tt>ForgotPassword</tt>.
--   It allows you to define a preferred method when a user has more than
--   one method available. With this setting, SMS does not qualify for a
--   valid password recovery mechanism if the user also has SMS MFA
--   enabled. In the absence of this setting, Cognito uses the legacy
--   behavior to determine the recovery method where SMS is preferred over
--   email.
updateUserPool_accountRecoverySetting :: Lens' UpdateUserPool (Maybe AccountRecoverySettingType)

-- | Email configuration.
updateUserPool_emailConfiguration :: Lens' UpdateUserPool (Maybe EmailConfigurationType)

-- | A container with information about the SMS verification message.
updateUserPool_smsVerificationMessage :: Lens' UpdateUserPool (Maybe Text)

-- | Can be one of the following values:
--   
--   <ul>
--   <li><tt>OFF</tt> - MFA tokens are not required and cannot be specified
--   during user registration.</li>
--   <li><tt>ON</tt> - MFA tokens are required for all user registrations.
--   You can only specify ON when you are initially creating a user pool.
--   You can use the <a>SetUserPoolMfaConfig</a> API operation to turn MFA
--   "ON" for existing user pools.</li>
--   <li><tt>OPTIONAL</tt> - Users have the option when registering to
--   create an MFA token.</li>
--   </ul>
updateUserPool_mfaConfiguration :: Lens' UpdateUserPool (Maybe UserPoolMfaType)

-- | The Lambda configuration information from the request to update the
--   user pool.
updateUserPool_lambdaConfig :: Lens' UpdateUserPool (Maybe LambdaConfigType)

-- | SMS configuration.
updateUserPool_smsConfiguration :: Lens' UpdateUserPool (Maybe SmsConfigurationType)

-- | The configuration for <tt>AdminCreateUser</tt> requests.
updateUserPool_adminCreateUserConfig :: Lens' UpdateUserPool (Maybe AdminCreateUserConfigType)

-- | Device configuration.
updateUserPool_deviceConfiguration :: Lens' UpdateUserPool (Maybe DeviceConfigurationType)

-- | The attributes that are automatically verified when the Amazon Cognito
--   service makes a request to update user pools.
updateUserPool_autoVerifiedAttributes :: Lens' UpdateUserPool (Maybe [VerifiedAttributeType])

-- | A container with the policies you wish to update in a user pool.
updateUserPool_policies :: Lens' UpdateUserPool (Maybe UserPoolPolicyType)

-- | The user pool ID for the user pool you want to update.
updateUserPool_userPoolId :: Lens' UpdateUserPool Text

-- | Represents the response from the server when you make a request to
--   update the user pool.
--   
--   <i>See:</i> <a>newUpdateUserPoolResponse</a> smart constructor.
data UpdateUserPoolResponse
UpdateUserPoolResponse' :: Int -> UpdateUserPoolResponse

-- | The response's http status code.
[$sel:httpStatus:UpdateUserPoolResponse'] :: UpdateUserPoolResponse -> Int

-- | Create a value of <a>UpdateUserPoolResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateUserPoolResponse'</a>,
--   <a>updateUserPoolResponse_httpStatus</a> - The response's http status
--   code.
newUpdateUserPoolResponse :: Int -> UpdateUserPoolResponse

-- | The response's http status code.
updateUserPoolResponse_httpStatus :: Lens' UpdateUserPoolResponse Int
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.UpdateUserPool.UpdateUserPool
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.UpdateUserPool.UpdateUserPool
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.UpdateUserPool.UpdateUserPool
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.UpdateUserPool.UpdateUserPool
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.UpdateUserPool.UpdateUserPoolResponse
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.UpdateUserPool.UpdateUserPoolResponse
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.UpdateUserPool.UpdateUserPoolResponse
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.UpdateUserPool.UpdateUserPoolResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CognitoIdentityProvider.UpdateUserPool.UpdateUserPool
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.UpdateUserPool.UpdateUserPoolResponse
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.UpdateUserPool.UpdateUserPool
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.UpdateUserPool.UpdateUserPool
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CognitoIdentityProvider.UpdateUserPool.UpdateUserPool
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.UpdateUserPool.UpdateUserPool
instance Network.AWS.Data.Path.ToPath Network.AWS.CognitoIdentityProvider.UpdateUserPool.UpdateUserPool
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentityProvider.UpdateUserPool.UpdateUserPool


-- | Updates the specified user pool app client with the specified
--   attributes. You can get a list of the current user pool app client
--   settings using <a>DescribeUserPoolClient</a>.
--   
--   If you don't provide a value for an attribute, it will be set to the
--   default value.
--   
--   You can also use this operation to enable token revocation for user
--   pool clients. For more information about revoking tokens, see
--   <a>RevokeToken</a>.
module Network.AWS.CognitoIdentityProvider.UpdateUserPoolClient

-- | Represents the request to update the user pool client.
--   
--   <i>See:</i> <a>newUpdateUserPoolClient</a> smart constructor.
data UpdateUserPoolClient
UpdateUserPoolClient' :: Maybe Natural -> Maybe [ExplicitAuthFlowsType] -> Maybe [Text] -> Maybe [Text] -> Maybe Bool -> Maybe Natural -> Maybe TokenValidityUnitsType -> Maybe Text -> Maybe Bool -> Maybe [Text] -> Maybe PreventUserExistenceErrorTypes -> Maybe Natural -> Maybe [Text] -> Maybe [Text] -> Maybe [OAuthFlowType] -> Maybe AnalyticsConfigurationType -> Maybe Text -> Maybe [Text] -> Text -> Sensitive Text -> UpdateUserPoolClient

-- | The time limit, in days, after which the refresh token is no longer
--   valid and cannot be used.
[$sel:refreshTokenValidity:UpdateUserPoolClient'] :: UpdateUserPoolClient -> Maybe Natural

-- | The authentication flows that are supported by the user pool clients.
--   Flow names without the <tt>ALLOW_</tt> prefix are deprecated in favor
--   of new names with the <tt>ALLOW_</tt> prefix. Note that values with
--   <tt>ALLOW_</tt> prefix cannot be used along with values without
--   <tt>ALLOW_</tt> prefix.
--   
--   Valid values include:
--   
--   <ul>
--   <li><tt>ALLOW_ADMIN_USER_PASSWORD_AUTH</tt>: Enable admin based user
--   password authentication flow <tt>ADMIN_USER_PASSWORD_AUTH</tt>. This
--   setting replaces the <tt>ADMIN_NO_SRP_AUTH</tt> setting. With this
--   authentication flow, Cognito receives the password in the request
--   instead of using the SRP (Secure Remote Password protocol) protocol to
--   verify passwords.</li>
--   <li><tt>ALLOW_CUSTOM_AUTH</tt>: Enable Lambda trigger based
--   authentication.</li>
--   <li><tt>ALLOW_USER_PASSWORD_AUTH</tt>: Enable user password-based
--   authentication. In this flow, Cognito receives the password in the
--   request instead of using the SRP protocol to verify passwords.</li>
--   <li><tt>ALLOW_USER_SRP_AUTH</tt>: Enable SRP based
--   authentication.</li>
--   <li><tt>ALLOW_REFRESH_TOKEN_AUTH</tt>: Enable authflow to refresh
--   tokens.</li>
--   </ul>
[$sel:explicitAuthFlows:UpdateUserPoolClient'] :: UpdateUserPoolClient -> Maybe [ExplicitAuthFlowsType]

-- | A list of provider names for the identity providers that are supported
--   on this client.
[$sel:supportedIdentityProviders:UpdateUserPoolClient'] :: UpdateUserPoolClient -> Maybe [Text]

-- | A list of allowed logout URLs for the identity providers.
[$sel:logoutURLs:UpdateUserPoolClient'] :: UpdateUserPoolClient -> Maybe [Text]

-- | Set to true if the client is allowed to follow the OAuth protocol when
--   interacting with Cognito user pools.
[$sel:allowedOAuthFlowsUserPoolClient:UpdateUserPoolClient'] :: UpdateUserPoolClient -> Maybe Bool

-- | The time limit, after which the ID token is no longer valid and cannot
--   be used.
[$sel:idTokenValidity:UpdateUserPoolClient'] :: UpdateUserPoolClient -> Maybe Natural

-- | The units in which the validity times are represented in. Default for
--   RefreshToken is days, and default for ID and access tokens are hours.
[$sel:tokenValidityUnits:UpdateUserPoolClient'] :: UpdateUserPoolClient -> Maybe TokenValidityUnitsType

-- | The default redirect URI. Must be in the <tt>CallbackURLs</tt> list.
--   
--   A redirect URI must:
--   
--   <ul>
--   <li>Be an absolute URI.</li>
--   <li>Be registered with the authorization server.</li>
--   <li>Not include a fragment component.</li>
--   </ul>
--   
--   See <a>OAuth 2.0 - Redirection Endpoint</a>.
--   
--   Amazon Cognito requires HTTPS over HTTP except for http://localhost
--   for testing purposes only.
--   
--   App callback URLs such as myapp://example are also supported.
[$sel:defaultRedirectURI:UpdateUserPoolClient'] :: UpdateUserPoolClient -> Maybe Text

-- | Enables or disables token revocation. For more information about
--   revoking tokens, see <a>RevokeToken</a>.
[$sel:enableTokenRevocation:UpdateUserPoolClient'] :: UpdateUserPoolClient -> Maybe Bool

-- | The writeable attributes of the user pool.
[$sel:writeAttributes:UpdateUserPoolClient'] :: UpdateUserPoolClient -> Maybe [Text]

-- | Use this setting to choose which errors and responses are returned by
--   Cognito APIs during authentication, account confirmation, and password
--   recovery when the user does not exist in the user pool. When set to
--   <tt>ENABLED</tt> and the user does not exist, authentication returns
--   an error indicating either the username or password was incorrect, and
--   account confirmation and password recovery return a response
--   indicating a code was sent to a simulated destination. When set to
--   <tt>LEGACY</tt>, those APIs will return a
--   <tt>UserNotFoundException</tt> exception if the user does not exist in
--   the user pool.
--   
--   Valid values include:
--   
--   <ul>
--   <li><tt>ENABLED</tt> - This prevents user existence-related
--   errors.</li>
--   <li><tt>LEGACY</tt> - This represents the old behavior of Cognito
--   where user existence related errors are not prevented.</li>
--   </ul>
--   
--   After February 15th 2020, the value of
--   <tt>PreventUserExistenceErrors</tt> will default to <tt>ENABLED</tt>
--   for newly created user pool clients if no value is provided.
[$sel:preventUserExistenceErrors:UpdateUserPoolClient'] :: UpdateUserPoolClient -> Maybe PreventUserExistenceErrorTypes

-- | The time limit, after which the access token is no longer valid and
--   cannot be used.
[$sel:accessTokenValidity:UpdateUserPoolClient'] :: UpdateUserPoolClient -> Maybe Natural

-- | The read-only attributes of the user pool.
[$sel:readAttributes:UpdateUserPoolClient'] :: UpdateUserPoolClient -> Maybe [Text]

-- | The allowed OAuth scopes. Possible values provided by OAuth are:
--   <tt>phone</tt>, <tt>email</tt>, <tt>openid</tt>, and <tt>profile</tt>.
--   Possible values provided by Amazon Web Services are:
--   <tt>aws.cognito.signin.user.admin</tt>. Custom scopes created in
--   Resource Servers are also supported.
[$sel:allowedOAuthScopes:UpdateUserPoolClient'] :: UpdateUserPoolClient -> Maybe [Text]

-- | The allowed OAuth flows.
--   
--   Set to <tt>code</tt> to initiate a code grant flow, which provides an
--   authorization code as the response. This code can be exchanged for
--   access tokens with the token endpoint.
--   
--   Set to <tt>implicit</tt> to specify that the client should get the
--   access token (and, optionally, ID token, based on scopes) directly.
--   
--   Set to <tt>client_credentials</tt> to specify that the client should
--   get the access token (and, optionally, ID token, based on scopes) from
--   the token endpoint using a combination of client and client_secret.
[$sel:allowedOAuthFlows:UpdateUserPoolClient'] :: UpdateUserPoolClient -> Maybe [OAuthFlowType]

-- | The Amazon Pinpoint analytics configuration for collecting metrics for
--   this user pool.
--   
--   In regions where Pinpoint is not available, Cognito User Pools only
--   supports sending events to Amazon Pinpoint projects in us-east-1. In
--   regions where Pinpoint is available, Cognito User Pools will support
--   sending events to Amazon Pinpoint projects within that same region.
[$sel:analyticsConfiguration:UpdateUserPoolClient'] :: UpdateUserPoolClient -> Maybe AnalyticsConfigurationType

-- | The client name from the update user pool client request.
[$sel:clientName:UpdateUserPoolClient'] :: UpdateUserPoolClient -> Maybe Text

-- | A list of allowed redirect (callback) URLs for the identity providers.
--   
--   A redirect URI must:
--   
--   <ul>
--   <li>Be an absolute URI.</li>
--   <li>Be registered with the authorization server.</li>
--   <li>Not include a fragment component.</li>
--   </ul>
--   
--   See <a>OAuth 2.0 - Redirection Endpoint</a>.
--   
--   Amazon Cognito requires HTTPS over HTTP except for http://localhost
--   for testing purposes only.
--   
--   App callback URLs such as myapp://example are also supported.
[$sel:callbackURLs:UpdateUserPoolClient'] :: UpdateUserPoolClient -> Maybe [Text]

-- | The user pool ID for the user pool where you want to update the user
--   pool client.
[$sel:userPoolId:UpdateUserPoolClient'] :: UpdateUserPoolClient -> Text

-- | The ID of the client associated with the user pool.
[$sel:clientId:UpdateUserPoolClient'] :: UpdateUserPoolClient -> Sensitive Text

-- | Create a value of <a>UpdateUserPoolClient</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:refreshTokenValidity:UpdateUserPoolClient'</a>,
--   <a>updateUserPoolClient_refreshTokenValidity</a> - The time limit, in
--   days, after which the refresh token is no longer valid and cannot be
--   used.
--   
--   <a>$sel:explicitAuthFlows:UpdateUserPoolClient'</a>,
--   <a>updateUserPoolClient_explicitAuthFlows</a> - The authentication
--   flows that are supported by the user pool clients. Flow names without
--   the <tt>ALLOW_</tt> prefix are deprecated in favor of new names with
--   the <tt>ALLOW_</tt> prefix. Note that values with <tt>ALLOW_</tt>
--   prefix cannot be used along with values without <tt>ALLOW_</tt>
--   prefix.
--   
--   Valid values include:
--   
--   <ul>
--   <li><tt>ALLOW_ADMIN_USER_PASSWORD_AUTH</tt>: Enable admin based user
--   password authentication flow <tt>ADMIN_USER_PASSWORD_AUTH</tt>. This
--   setting replaces the <tt>ADMIN_NO_SRP_AUTH</tt> setting. With this
--   authentication flow, Cognito receives the password in the request
--   instead of using the SRP (Secure Remote Password protocol) protocol to
--   verify passwords.</li>
--   <li><tt>ALLOW_CUSTOM_AUTH</tt>: Enable Lambda trigger based
--   authentication.</li>
--   <li><tt>ALLOW_USER_PASSWORD_AUTH</tt>: Enable user password-based
--   authentication. In this flow, Cognito receives the password in the
--   request instead of using the SRP protocol to verify passwords.</li>
--   <li><tt>ALLOW_USER_SRP_AUTH</tt>: Enable SRP based
--   authentication.</li>
--   <li><tt>ALLOW_REFRESH_TOKEN_AUTH</tt>: Enable authflow to refresh
--   tokens.</li>
--   </ul>
--   
--   <a>$sel:supportedIdentityProviders:UpdateUserPoolClient'</a>,
--   <a>updateUserPoolClient_supportedIdentityProviders</a> - A list of
--   provider names for the identity providers that are supported on this
--   client.
--   
--   <a>$sel:logoutURLs:UpdateUserPoolClient'</a>,
--   <a>updateUserPoolClient_logoutURLs</a> - A list of allowed logout URLs
--   for the identity providers.
--   
--   <a>$sel:allowedOAuthFlowsUserPoolClient:UpdateUserPoolClient'</a>,
--   <a>updateUserPoolClient_allowedOAuthFlowsUserPoolClient</a> - Set to
--   true if the client is allowed to follow the OAuth protocol when
--   interacting with Cognito user pools.
--   
--   <a>$sel:idTokenValidity:UpdateUserPoolClient'</a>,
--   <a>updateUserPoolClient_idTokenValidity</a> - The time limit, after
--   which the ID token is no longer valid and cannot be used.
--   
--   <a>$sel:tokenValidityUnits:UpdateUserPoolClient'</a>,
--   <a>updateUserPoolClient_tokenValidityUnits</a> - The units in which
--   the validity times are represented in. Default for RefreshToken is
--   days, and default for ID and access tokens are hours.
--   
--   <a>$sel:defaultRedirectURI:UpdateUserPoolClient'</a>,
--   <a>updateUserPoolClient_defaultRedirectURI</a> - The default redirect
--   URI. Must be in the <tt>CallbackURLs</tt> list.
--   
--   A redirect URI must:
--   
--   <ul>
--   <li>Be an absolute URI.</li>
--   <li>Be registered with the authorization server.</li>
--   <li>Not include a fragment component.</li>
--   </ul>
--   
--   See <a>OAuth 2.0 - Redirection Endpoint</a>.
--   
--   Amazon Cognito requires HTTPS over HTTP except for http://localhost
--   for testing purposes only.
--   
--   App callback URLs such as myapp://example are also supported.
--   
--   <a>$sel:enableTokenRevocation:UpdateUserPoolClient'</a>,
--   <a>updateUserPoolClient_enableTokenRevocation</a> - Enables or
--   disables token revocation. For more information about revoking tokens,
--   see <a>RevokeToken</a>.
--   
--   <a>$sel:writeAttributes:UpdateUserPoolClient'</a>,
--   <a>updateUserPoolClient_writeAttributes</a> - The writeable attributes
--   of the user pool.
--   
--   <a>$sel:preventUserExistenceErrors:UpdateUserPoolClient'</a>,
--   <a>updateUserPoolClient_preventUserExistenceErrors</a> - Use this
--   setting to choose which errors and responses are returned by Cognito
--   APIs during authentication, account confirmation, and password
--   recovery when the user does not exist in the user pool. When set to
--   <tt>ENABLED</tt> and the user does not exist, authentication returns
--   an error indicating either the username or password was incorrect, and
--   account confirmation and password recovery return a response
--   indicating a code was sent to a simulated destination. When set to
--   <tt>LEGACY</tt>, those APIs will return a
--   <tt>UserNotFoundException</tt> exception if the user does not exist in
--   the user pool.
--   
--   Valid values include:
--   
--   <ul>
--   <li><tt>ENABLED</tt> - This prevents user existence-related
--   errors.</li>
--   <li><tt>LEGACY</tt> - This represents the old behavior of Cognito
--   where user existence related errors are not prevented.</li>
--   </ul>
--   
--   After February 15th 2020, the value of
--   <tt>PreventUserExistenceErrors</tt> will default to <tt>ENABLED</tt>
--   for newly created user pool clients if no value is provided.
--   
--   <a>$sel:accessTokenValidity:UpdateUserPoolClient'</a>,
--   <a>updateUserPoolClient_accessTokenValidity</a> - The time limit,
--   after which the access token is no longer valid and cannot be used.
--   
--   <a>$sel:readAttributes:UpdateUserPoolClient'</a>,
--   <a>updateUserPoolClient_readAttributes</a> - The read-only attributes
--   of the user pool.
--   
--   <a>$sel:allowedOAuthScopes:UpdateUserPoolClient'</a>,
--   <a>updateUserPoolClient_allowedOAuthScopes</a> - The allowed OAuth
--   scopes. Possible values provided by OAuth are: <tt>phone</tt>,
--   <tt>email</tt>, <tt>openid</tt>, and <tt>profile</tt>. Possible values
--   provided by Amazon Web Services are:
--   <tt>aws.cognito.signin.user.admin</tt>. Custom scopes created in
--   Resource Servers are also supported.
--   
--   <a>$sel:allowedOAuthFlows:UpdateUserPoolClient'</a>,
--   <a>updateUserPoolClient_allowedOAuthFlows</a> - The allowed OAuth
--   flows.
--   
--   Set to <tt>code</tt> to initiate a code grant flow, which provides an
--   authorization code as the response. This code can be exchanged for
--   access tokens with the token endpoint.
--   
--   Set to <tt>implicit</tt> to specify that the client should get the
--   access token (and, optionally, ID token, based on scopes) directly.
--   
--   Set to <tt>client_credentials</tt> to specify that the client should
--   get the access token (and, optionally, ID token, based on scopes) from
--   the token endpoint using a combination of client and client_secret.
--   
--   <a>$sel:analyticsConfiguration:UpdateUserPoolClient'</a>,
--   <a>updateUserPoolClient_analyticsConfiguration</a> - The Amazon
--   Pinpoint analytics configuration for collecting metrics for this user
--   pool.
--   
--   In regions where Pinpoint is not available, Cognito User Pools only
--   supports sending events to Amazon Pinpoint projects in us-east-1. In
--   regions where Pinpoint is available, Cognito User Pools will support
--   sending events to Amazon Pinpoint projects within that same region.
--   
--   <a>$sel:clientName:UpdateUserPoolClient'</a>,
--   <a>updateUserPoolClient_clientName</a> - The client name from the
--   update user pool client request.
--   
--   <a>$sel:callbackURLs:UpdateUserPoolClient'</a>,
--   <a>updateUserPoolClient_callbackURLs</a> - A list of allowed redirect
--   (callback) URLs for the identity providers.
--   
--   A redirect URI must:
--   
--   <ul>
--   <li>Be an absolute URI.</li>
--   <li>Be registered with the authorization server.</li>
--   <li>Not include a fragment component.</li>
--   </ul>
--   
--   See <a>OAuth 2.0 - Redirection Endpoint</a>.
--   
--   Amazon Cognito requires HTTPS over HTTP except for http://localhost
--   for testing purposes only.
--   
--   App callback URLs such as myapp://example are also supported.
--   
--   <a>$sel:userPoolId:UpdateUserPoolClient'</a>,
--   <a>updateUserPoolClient_userPoolId</a> - The user pool ID for the user
--   pool where you want to update the user pool client.
--   
--   <a>$sel:clientId:UpdateUserPoolClient'</a>,
--   <a>updateUserPoolClient_clientId</a> - The ID of the client associated
--   with the user pool.
newUpdateUserPoolClient :: Text -> Text -> UpdateUserPoolClient

-- | The time limit, in days, after which the refresh token is no longer
--   valid and cannot be used.
updateUserPoolClient_refreshTokenValidity :: Lens' UpdateUserPoolClient (Maybe Natural)

-- | The authentication flows that are supported by the user pool clients.
--   Flow names without the <tt>ALLOW_</tt> prefix are deprecated in favor
--   of new names with the <tt>ALLOW_</tt> prefix. Note that values with
--   <tt>ALLOW_</tt> prefix cannot be used along with values without
--   <tt>ALLOW_</tt> prefix.
--   
--   Valid values include:
--   
--   <ul>
--   <li><tt>ALLOW_ADMIN_USER_PASSWORD_AUTH</tt>: Enable admin based user
--   password authentication flow <tt>ADMIN_USER_PASSWORD_AUTH</tt>. This
--   setting replaces the <tt>ADMIN_NO_SRP_AUTH</tt> setting. With this
--   authentication flow, Cognito receives the password in the request
--   instead of using the SRP (Secure Remote Password protocol) protocol to
--   verify passwords.</li>
--   <li><tt>ALLOW_CUSTOM_AUTH</tt>: Enable Lambda trigger based
--   authentication.</li>
--   <li><tt>ALLOW_USER_PASSWORD_AUTH</tt>: Enable user password-based
--   authentication. In this flow, Cognito receives the password in the
--   request instead of using the SRP protocol to verify passwords.</li>
--   <li><tt>ALLOW_USER_SRP_AUTH</tt>: Enable SRP based
--   authentication.</li>
--   <li><tt>ALLOW_REFRESH_TOKEN_AUTH</tt>: Enable authflow to refresh
--   tokens.</li>
--   </ul>
updateUserPoolClient_explicitAuthFlows :: Lens' UpdateUserPoolClient (Maybe [ExplicitAuthFlowsType])

-- | A list of provider names for the identity providers that are supported
--   on this client.
updateUserPoolClient_supportedIdentityProviders :: Lens' UpdateUserPoolClient (Maybe [Text])

-- | A list of allowed logout URLs for the identity providers.
updateUserPoolClient_logoutURLs :: Lens' UpdateUserPoolClient (Maybe [Text])

-- | Set to true if the client is allowed to follow the OAuth protocol when
--   interacting with Cognito user pools.
updateUserPoolClient_allowedOAuthFlowsUserPoolClient :: Lens' UpdateUserPoolClient (Maybe Bool)

-- | The time limit, after which the ID token is no longer valid and cannot
--   be used.
updateUserPoolClient_idTokenValidity :: Lens' UpdateUserPoolClient (Maybe Natural)

-- | The units in which the validity times are represented in. Default for
--   RefreshToken is days, and default for ID and access tokens are hours.
updateUserPoolClient_tokenValidityUnits :: Lens' UpdateUserPoolClient (Maybe TokenValidityUnitsType)

-- | The default redirect URI. Must be in the <tt>CallbackURLs</tt> list.
--   
--   A redirect URI must:
--   
--   <ul>
--   <li>Be an absolute URI.</li>
--   <li>Be registered with the authorization server.</li>
--   <li>Not include a fragment component.</li>
--   </ul>
--   
--   See <a>OAuth 2.0 - Redirection Endpoint</a>.
--   
--   Amazon Cognito requires HTTPS over HTTP except for http://localhost
--   for testing purposes only.
--   
--   App callback URLs such as myapp://example are also supported.
updateUserPoolClient_defaultRedirectURI :: Lens' UpdateUserPoolClient (Maybe Text)

-- | Enables or disables token revocation. For more information about
--   revoking tokens, see <a>RevokeToken</a>.
updateUserPoolClient_enableTokenRevocation :: Lens' UpdateUserPoolClient (Maybe Bool)

-- | The writeable attributes of the user pool.
updateUserPoolClient_writeAttributes :: Lens' UpdateUserPoolClient (Maybe [Text])

-- | Use this setting to choose which errors and responses are returned by
--   Cognito APIs during authentication, account confirmation, and password
--   recovery when the user does not exist in the user pool. When set to
--   <tt>ENABLED</tt> and the user does not exist, authentication returns
--   an error indicating either the username or password was incorrect, and
--   account confirmation and password recovery return a response
--   indicating a code was sent to a simulated destination. When set to
--   <tt>LEGACY</tt>, those APIs will return a
--   <tt>UserNotFoundException</tt> exception if the user does not exist in
--   the user pool.
--   
--   Valid values include:
--   
--   <ul>
--   <li><tt>ENABLED</tt> - This prevents user existence-related
--   errors.</li>
--   <li><tt>LEGACY</tt> - This represents the old behavior of Cognito
--   where user existence related errors are not prevented.</li>
--   </ul>
--   
--   After February 15th 2020, the value of
--   <tt>PreventUserExistenceErrors</tt> will default to <tt>ENABLED</tt>
--   for newly created user pool clients if no value is provided.
updateUserPoolClient_preventUserExistenceErrors :: Lens' UpdateUserPoolClient (Maybe PreventUserExistenceErrorTypes)

-- | The time limit, after which the access token is no longer valid and
--   cannot be used.
updateUserPoolClient_accessTokenValidity :: Lens' UpdateUserPoolClient (Maybe Natural)

-- | The read-only attributes of the user pool.
updateUserPoolClient_readAttributes :: Lens' UpdateUserPoolClient (Maybe [Text])

-- | The allowed OAuth scopes. Possible values provided by OAuth are:
--   <tt>phone</tt>, <tt>email</tt>, <tt>openid</tt>, and <tt>profile</tt>.
--   Possible values provided by Amazon Web Services are:
--   <tt>aws.cognito.signin.user.admin</tt>. Custom scopes created in
--   Resource Servers are also supported.
updateUserPoolClient_allowedOAuthScopes :: Lens' UpdateUserPoolClient (Maybe [Text])

-- | The allowed OAuth flows.
--   
--   Set to <tt>code</tt> to initiate a code grant flow, which provides an
--   authorization code as the response. This code can be exchanged for
--   access tokens with the token endpoint.
--   
--   Set to <tt>implicit</tt> to specify that the client should get the
--   access token (and, optionally, ID token, based on scopes) directly.
--   
--   Set to <tt>client_credentials</tt> to specify that the client should
--   get the access token (and, optionally, ID token, based on scopes) from
--   the token endpoint using a combination of client and client_secret.
updateUserPoolClient_allowedOAuthFlows :: Lens' UpdateUserPoolClient (Maybe [OAuthFlowType])

-- | The Amazon Pinpoint analytics configuration for collecting metrics for
--   this user pool.
--   
--   In regions where Pinpoint is not available, Cognito User Pools only
--   supports sending events to Amazon Pinpoint projects in us-east-1. In
--   regions where Pinpoint is available, Cognito User Pools will support
--   sending events to Amazon Pinpoint projects within that same region.
updateUserPoolClient_analyticsConfiguration :: Lens' UpdateUserPoolClient (Maybe AnalyticsConfigurationType)

-- | The client name from the update user pool client request.
updateUserPoolClient_clientName :: Lens' UpdateUserPoolClient (Maybe Text)

-- | A list of allowed redirect (callback) URLs for the identity providers.
--   
--   A redirect URI must:
--   
--   <ul>
--   <li>Be an absolute URI.</li>
--   <li>Be registered with the authorization server.</li>
--   <li>Not include a fragment component.</li>
--   </ul>
--   
--   See <a>OAuth 2.0 - Redirection Endpoint</a>.
--   
--   Amazon Cognito requires HTTPS over HTTP except for http://localhost
--   for testing purposes only.
--   
--   App callback URLs such as myapp://example are also supported.
updateUserPoolClient_callbackURLs :: Lens' UpdateUserPoolClient (Maybe [Text])

-- | The user pool ID for the user pool where you want to update the user
--   pool client.
updateUserPoolClient_userPoolId :: Lens' UpdateUserPoolClient Text

-- | The ID of the client associated with the user pool.
updateUserPoolClient_clientId :: Lens' UpdateUserPoolClient Text

-- | Represents the response from the server to the request to update the
--   user pool client.
--   
--   <i>See:</i> <a>newUpdateUserPoolClientResponse</a> smart constructor.
data UpdateUserPoolClientResponse
UpdateUserPoolClientResponse' :: Maybe UserPoolClientType -> Int -> UpdateUserPoolClientResponse

-- | The user pool client value from the response from the server when an
--   update user pool client request is made.
[$sel:userPoolClient:UpdateUserPoolClientResponse'] :: UpdateUserPoolClientResponse -> Maybe UserPoolClientType

-- | The response's http status code.
[$sel:httpStatus:UpdateUserPoolClientResponse'] :: UpdateUserPoolClientResponse -> Int

-- | Create a value of <a>UpdateUserPoolClientResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userPoolClient:UpdateUserPoolClientResponse'</a>,
--   <a>updateUserPoolClientResponse_userPoolClient</a> - The user pool
--   client value from the response from the server when an update user
--   pool client request is made.
--   
--   <a>$sel:httpStatus:UpdateUserPoolClientResponse'</a>,
--   <a>updateUserPoolClientResponse_httpStatus</a> - The response's http
--   status code.
newUpdateUserPoolClientResponse :: Int -> UpdateUserPoolClientResponse

-- | The user pool client value from the response from the server when an
--   update user pool client request is made.
updateUserPoolClientResponse_userPoolClient :: Lens' UpdateUserPoolClientResponse (Maybe UserPoolClientType)

-- | The response's http status code.
updateUserPoolClientResponse_httpStatus :: Lens' UpdateUserPoolClientResponse Int
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.UpdateUserPoolClient.UpdateUserPoolClient
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.UpdateUserPoolClient.UpdateUserPoolClient
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.UpdateUserPoolClient.UpdateUserPoolClient
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.UpdateUserPoolClient.UpdateUserPoolClientResponse
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.UpdateUserPoolClient.UpdateUserPoolClientResponse
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.UpdateUserPoolClient.UpdateUserPoolClientResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CognitoIdentityProvider.UpdateUserPoolClient.UpdateUserPoolClient
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.UpdateUserPoolClient.UpdateUserPoolClientResponse
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.UpdateUserPoolClient.UpdateUserPoolClient
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.UpdateUserPoolClient.UpdateUserPoolClient
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CognitoIdentityProvider.UpdateUserPoolClient.UpdateUserPoolClient
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.UpdateUserPoolClient.UpdateUserPoolClient
instance Network.AWS.Data.Path.ToPath Network.AWS.CognitoIdentityProvider.UpdateUserPoolClient.UpdateUserPoolClient
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentityProvider.UpdateUserPoolClient.UpdateUserPoolClient


-- | Updates the Secure Sockets Layer (SSL) certificate for the custom
--   domain for your user pool.
--   
--   You can use this operation to provide the Amazon Resource Name (ARN)
--   of a new certificate to Amazon Cognito. You cannot use it to change
--   the domain for a user pool.
--   
--   A custom domain is used to host the Amazon Cognito hosted UI, which
--   provides sign-up and sign-in pages for your application. When you set
--   up a custom domain, you provide a certificate that you manage with
--   Certificate Manager (ACM). When necessary, you can use this operation
--   to change the certificate that you applied to your custom domain.
--   
--   Usually, this is unnecessary following routine certificate renewal
--   with ACM. When you renew your existing certificate in ACM, the ARN for
--   your certificate remains the same, and your custom domain uses the new
--   certificate automatically.
--   
--   However, if you replace your existing certificate with a new one, ACM
--   gives the new certificate a new ARN. To apply the new certificate to
--   your custom domain, you must provide this ARN to Amazon Cognito.
--   
--   When you add your new certificate in ACM, you must choose US East (N.
--   Virginia) as the Region.
--   
--   After you submit your request, Amazon Cognito requires up to 1 hour to
--   distribute your new certificate to your custom domain.
--   
--   For more information about adding a custom domain to your user pool,
--   see <a>Using Your Own Domain for the Hosted UI</a>.
module Network.AWS.CognitoIdentityProvider.UpdateUserPoolDomain

-- | The UpdateUserPoolDomain request input.
--   
--   <i>See:</i> <a>newUpdateUserPoolDomain</a> smart constructor.
data UpdateUserPoolDomain
UpdateUserPoolDomain' :: Text -> Text -> CustomDomainConfigType -> UpdateUserPoolDomain

-- | The domain name for the custom domain that hosts the sign-up and
--   sign-in pages for your application. For example:
--   <tt>auth.example.com</tt>.
--   
--   This string can include only lowercase letters, numbers, and hyphens.
--   Do not use a hyphen for the first or last character. Use periods to
--   separate subdomain names.
[$sel:domain:UpdateUserPoolDomain'] :: UpdateUserPoolDomain -> Text

-- | The ID of the user pool that is associated with the custom domain that
--   you are updating the certificate for.
[$sel:userPoolId:UpdateUserPoolDomain'] :: UpdateUserPoolDomain -> Text

-- | The configuration for a custom domain that hosts the sign-up and
--   sign-in pages for your application. Use this object to specify an SSL
--   certificate that is managed by ACM.
[$sel:customDomainConfig:UpdateUserPoolDomain'] :: UpdateUserPoolDomain -> CustomDomainConfigType

-- | Create a value of <a>UpdateUserPoolDomain</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:domain:UpdateUserPoolDomain'</a>,
--   <a>updateUserPoolDomain_domain</a> - The domain name for the custom
--   domain that hosts the sign-up and sign-in pages for your application.
--   For example: <tt>auth.example.com</tt>.
--   
--   This string can include only lowercase letters, numbers, and hyphens.
--   Do not use a hyphen for the first or last character. Use periods to
--   separate subdomain names.
--   
--   <a>$sel:userPoolId:UpdateUserPoolDomain'</a>,
--   <a>updateUserPoolDomain_userPoolId</a> - The ID of the user pool that
--   is associated with the custom domain that you are updating the
--   certificate for.
--   
--   <a>$sel:customDomainConfig:UpdateUserPoolDomain'</a>,
--   <a>updateUserPoolDomain_customDomainConfig</a> - The configuration for
--   a custom domain that hosts the sign-up and sign-in pages for your
--   application. Use this object to specify an SSL certificate that is
--   managed by ACM.
newUpdateUserPoolDomain :: Text -> Text -> CustomDomainConfigType -> UpdateUserPoolDomain

-- | The domain name for the custom domain that hosts the sign-up and
--   sign-in pages for your application. For example:
--   <tt>auth.example.com</tt>.
--   
--   This string can include only lowercase letters, numbers, and hyphens.
--   Do not use a hyphen for the first or last character. Use periods to
--   separate subdomain names.
updateUserPoolDomain_domain :: Lens' UpdateUserPoolDomain Text

-- | The ID of the user pool that is associated with the custom domain that
--   you are updating the certificate for.
updateUserPoolDomain_userPoolId :: Lens' UpdateUserPoolDomain Text

-- | The configuration for a custom domain that hosts the sign-up and
--   sign-in pages for your application. Use this object to specify an SSL
--   certificate that is managed by ACM.
updateUserPoolDomain_customDomainConfig :: Lens' UpdateUserPoolDomain CustomDomainConfigType

-- | The UpdateUserPoolDomain response output.
--   
--   <i>See:</i> <a>newUpdateUserPoolDomainResponse</a> smart constructor.
data UpdateUserPoolDomainResponse
UpdateUserPoolDomainResponse' :: Maybe Text -> Int -> UpdateUserPoolDomainResponse

-- | The Amazon CloudFront endpoint that Amazon Cognito set up when you
--   added the custom domain to your user pool.
[$sel:cloudFrontDomain:UpdateUserPoolDomainResponse'] :: UpdateUserPoolDomainResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:UpdateUserPoolDomainResponse'] :: UpdateUserPoolDomainResponse -> Int

-- | Create a value of <a>UpdateUserPoolDomainResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cloudFrontDomain:UpdateUserPoolDomainResponse'</a>,
--   <a>updateUserPoolDomainResponse_cloudFrontDomain</a> - The Amazon
--   CloudFront endpoint that Amazon Cognito set up when you added the
--   custom domain to your user pool.
--   
--   <a>$sel:httpStatus:UpdateUserPoolDomainResponse'</a>,
--   <a>updateUserPoolDomainResponse_httpStatus</a> - The response's http
--   status code.
newUpdateUserPoolDomainResponse :: Int -> UpdateUserPoolDomainResponse

-- | The Amazon CloudFront endpoint that Amazon Cognito set up when you
--   added the custom domain to your user pool.
updateUserPoolDomainResponse_cloudFrontDomain :: Lens' UpdateUserPoolDomainResponse (Maybe Text)

-- | The response's http status code.
updateUserPoolDomainResponse_httpStatus :: Lens' UpdateUserPoolDomainResponse Int
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.UpdateUserPoolDomain.UpdateUserPoolDomain
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.UpdateUserPoolDomain.UpdateUserPoolDomain
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.UpdateUserPoolDomain.UpdateUserPoolDomain
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.UpdateUserPoolDomain.UpdateUserPoolDomain
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.UpdateUserPoolDomain.UpdateUserPoolDomainResponse
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.UpdateUserPoolDomain.UpdateUserPoolDomainResponse
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.UpdateUserPoolDomain.UpdateUserPoolDomainResponse
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.UpdateUserPoolDomain.UpdateUserPoolDomainResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CognitoIdentityProvider.UpdateUserPoolDomain.UpdateUserPoolDomain
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.UpdateUserPoolDomain.UpdateUserPoolDomainResponse
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.UpdateUserPoolDomain.UpdateUserPoolDomain
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.UpdateUserPoolDomain.UpdateUserPoolDomain
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CognitoIdentityProvider.UpdateUserPoolDomain.UpdateUserPoolDomain
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.UpdateUserPoolDomain.UpdateUserPoolDomain
instance Network.AWS.Data.Path.ToPath Network.AWS.CognitoIdentityProvider.UpdateUserPoolDomain.UpdateUserPoolDomain
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentityProvider.UpdateUserPoolDomain.UpdateUserPoolDomain


-- | Use this API to register a user's entered TOTP code and mark the
--   user's software token MFA status as "verified" if successful. The
--   request takes an access token or a session string, but not both.
module Network.AWS.CognitoIdentityProvider.VerifySoftwareToken

-- | <i>See:</i> <a>newVerifySoftwareToken</a> smart constructor.
data VerifySoftwareToken
VerifySoftwareToken' :: Maybe (Sensitive Text) -> Maybe Text -> Maybe Text -> Text -> VerifySoftwareToken

-- | The access token.
[$sel:accessToken:VerifySoftwareToken'] :: VerifySoftwareToken -> Maybe (Sensitive Text)

-- | The friendly device name.
[$sel:friendlyDeviceName:VerifySoftwareToken'] :: VerifySoftwareToken -> Maybe Text

-- | The session which should be passed both ways in challenge-response
--   calls to the service.
[$sel:session:VerifySoftwareToken'] :: VerifySoftwareToken -> Maybe Text

-- | The one time password computed using the secret code returned by
--   <a>AssociateSoftwareToken"</a>.
[$sel:userCode:VerifySoftwareToken'] :: VerifySoftwareToken -> Text

-- | Create a value of <a>VerifySoftwareToken</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:accessToken:VerifySoftwareToken'</a>,
--   <a>verifySoftwareToken_accessToken</a> - The access token.
--   
--   <a>$sel:friendlyDeviceName:VerifySoftwareToken'</a>,
--   <a>verifySoftwareToken_friendlyDeviceName</a> - The friendly device
--   name.
--   
--   <a>$sel:session:VerifySoftwareToken'</a>,
--   <a>verifySoftwareToken_session</a> - The session which should be
--   passed both ways in challenge-response calls to the service.
--   
--   <a>$sel:userCode:VerifySoftwareToken'</a>,
--   <a>verifySoftwareToken_userCode</a> - The one time password computed
--   using the secret code returned by <a>AssociateSoftwareToken"</a>.
newVerifySoftwareToken :: Text -> VerifySoftwareToken

-- | The access token.
verifySoftwareToken_accessToken :: Lens' VerifySoftwareToken (Maybe Text)

-- | The friendly device name.
verifySoftwareToken_friendlyDeviceName :: Lens' VerifySoftwareToken (Maybe Text)

-- | The session which should be passed both ways in challenge-response
--   calls to the service.
verifySoftwareToken_session :: Lens' VerifySoftwareToken (Maybe Text)

-- | The one time password computed using the secret code returned by
--   <a>AssociateSoftwareToken"</a>.
verifySoftwareToken_userCode :: Lens' VerifySoftwareToken Text

-- | <i>See:</i> <a>newVerifySoftwareTokenResponse</a> smart constructor.
data VerifySoftwareTokenResponse
VerifySoftwareTokenResponse' :: Maybe VerifySoftwareTokenResponseType -> Maybe Text -> Int -> VerifySoftwareTokenResponse

-- | The status of the verify software token.
[$sel:status:VerifySoftwareTokenResponse'] :: VerifySoftwareTokenResponse -> Maybe VerifySoftwareTokenResponseType

-- | The session which should be passed both ways in challenge-response
--   calls to the service.
[$sel:session:VerifySoftwareTokenResponse'] :: VerifySoftwareTokenResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:VerifySoftwareTokenResponse'] :: VerifySoftwareTokenResponse -> Int

-- | Create a value of <a>VerifySoftwareTokenResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:VerifySoftwareTokenResponse'</a>,
--   <a>verifySoftwareTokenResponse_status</a> - The status of the verify
--   software token.
--   
--   <a>$sel:session:VerifySoftwareToken'</a>,
--   <a>verifySoftwareTokenResponse_session</a> - The session which should
--   be passed both ways in challenge-response calls to the service.
--   
--   <a>$sel:httpStatus:VerifySoftwareTokenResponse'</a>,
--   <a>verifySoftwareTokenResponse_httpStatus</a> - The response's http
--   status code.
newVerifySoftwareTokenResponse :: Int -> VerifySoftwareTokenResponse

-- | The status of the verify software token.
verifySoftwareTokenResponse_status :: Lens' VerifySoftwareTokenResponse (Maybe VerifySoftwareTokenResponseType)

-- | The session which should be passed both ways in challenge-response
--   calls to the service.
verifySoftwareTokenResponse_session :: Lens' VerifySoftwareTokenResponse (Maybe Text)

-- | The response's http status code.
verifySoftwareTokenResponse_httpStatus :: Lens' VerifySoftwareTokenResponse Int
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.VerifySoftwareToken.VerifySoftwareToken
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.VerifySoftwareToken.VerifySoftwareToken
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.VerifySoftwareToken.VerifySoftwareToken
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.VerifySoftwareToken.VerifySoftwareTokenResponse
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.VerifySoftwareToken.VerifySoftwareTokenResponse
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.VerifySoftwareToken.VerifySoftwareTokenResponse
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.VerifySoftwareToken.VerifySoftwareTokenResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CognitoIdentityProvider.VerifySoftwareToken.VerifySoftwareToken
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.VerifySoftwareToken.VerifySoftwareTokenResponse
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.VerifySoftwareToken.VerifySoftwareToken
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.VerifySoftwareToken.VerifySoftwareToken
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CognitoIdentityProvider.VerifySoftwareToken.VerifySoftwareToken
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.VerifySoftwareToken.VerifySoftwareToken
instance Network.AWS.Data.Path.ToPath Network.AWS.CognitoIdentityProvider.VerifySoftwareToken.VerifySoftwareToken
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentityProvider.VerifySoftwareToken.VerifySoftwareToken


-- | Verifies the specified user attributes in the user pool.
module Network.AWS.CognitoIdentityProvider.VerifyUserAttribute

-- | Represents the request to verify user attributes.
--   
--   <i>See:</i> <a>newVerifyUserAttribute</a> smart constructor.
data VerifyUserAttribute
VerifyUserAttribute' :: Sensitive Text -> Text -> Text -> VerifyUserAttribute

-- | Represents the access token of the request to verify user attributes.
[$sel:accessToken:VerifyUserAttribute'] :: VerifyUserAttribute -> Sensitive Text

-- | The attribute name in the request to verify user attributes.
[$sel:attributeName:VerifyUserAttribute'] :: VerifyUserAttribute -> Text

-- | The verification code in the request to verify user attributes.
[$sel:code:VerifyUserAttribute'] :: VerifyUserAttribute -> Text

-- | Create a value of <a>VerifyUserAttribute</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:accessToken:VerifyUserAttribute'</a>,
--   <a>verifyUserAttribute_accessToken</a> - Represents the access token
--   of the request to verify user attributes.
--   
--   <a>$sel:attributeName:VerifyUserAttribute'</a>,
--   <a>verifyUserAttribute_attributeName</a> - The attribute name in the
--   request to verify user attributes.
--   
--   <a>$sel:code:VerifyUserAttribute'</a>, <a>verifyUserAttribute_code</a>
--   - The verification code in the request to verify user attributes.
newVerifyUserAttribute :: Text -> Text -> Text -> VerifyUserAttribute

-- | Represents the access token of the request to verify user attributes.
verifyUserAttribute_accessToken :: Lens' VerifyUserAttribute Text

-- | The attribute name in the request to verify user attributes.
verifyUserAttribute_attributeName :: Lens' VerifyUserAttribute Text

-- | The verification code in the request to verify user attributes.
verifyUserAttribute_code :: Lens' VerifyUserAttribute Text

-- | A container representing the response from the server from the request
--   to verify user attributes.
--   
--   <i>See:</i> <a>newVerifyUserAttributeResponse</a> smart constructor.
data VerifyUserAttributeResponse
VerifyUserAttributeResponse' :: Int -> VerifyUserAttributeResponse

-- | The response's http status code.
[$sel:httpStatus:VerifyUserAttributeResponse'] :: VerifyUserAttributeResponse -> Int

-- | Create a value of <a>VerifyUserAttributeResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:VerifyUserAttributeResponse'</a>,
--   <a>verifyUserAttributeResponse_httpStatus</a> - The response's http
--   status code.
newVerifyUserAttributeResponse :: Int -> VerifyUserAttributeResponse

-- | The response's http status code.
verifyUserAttributeResponse_httpStatus :: Lens' VerifyUserAttributeResponse Int
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.VerifyUserAttribute.VerifyUserAttribute
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.VerifyUserAttribute.VerifyUserAttribute
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.VerifyUserAttribute.VerifyUserAttribute
instance GHC.Generics.Generic Network.AWS.CognitoIdentityProvider.VerifyUserAttribute.VerifyUserAttributeResponse
instance GHC.Show.Show Network.AWS.CognitoIdentityProvider.VerifyUserAttribute.VerifyUserAttributeResponse
instance GHC.Read.Read Network.AWS.CognitoIdentityProvider.VerifyUserAttribute.VerifyUserAttributeResponse
instance GHC.Classes.Eq Network.AWS.CognitoIdentityProvider.VerifyUserAttribute.VerifyUserAttributeResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CognitoIdentityProvider.VerifyUserAttribute.VerifyUserAttribute
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.VerifyUserAttribute.VerifyUserAttributeResponse
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentityProvider.VerifyUserAttribute.VerifyUserAttribute
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentityProvider.VerifyUserAttribute.VerifyUserAttribute
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CognitoIdentityProvider.VerifyUserAttribute.VerifyUserAttribute
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentityProvider.VerifyUserAttribute.VerifyUserAttribute
instance Network.AWS.Data.Path.ToPath Network.AWS.CognitoIdentityProvider.VerifyUserAttribute.VerifyUserAttribute
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentityProvider.VerifyUserAttribute.VerifyUserAttribute


module Network.AWS.CognitoIdentityProvider.Lens

-- | The user pool ID for the user pool you want to delete.
deleteUserPool_userPoolId :: Lens' DeleteUserPool Text

-- | The tag keys and values to assign to the user pool. A tag is a label
--   that you can use to categorize and manage user pools in different
--   ways, such as by purpose, owner, environment, or other criteria.
updateUserPool_userPoolTags :: Lens' UpdateUserPool (Maybe (HashMap Text Text))

-- | The template for verification messages.
updateUserPool_verificationMessageTemplate :: Lens' UpdateUserPool (Maybe VerificationMessageTemplateType)

-- | The contents of the email verification message.
updateUserPool_emailVerificationMessage :: Lens' UpdateUserPool (Maybe Text)

-- | The contents of the SMS authentication message.
updateUserPool_smsAuthenticationMessage :: Lens' UpdateUserPool (Maybe Text)

-- | Used to enable advanced security risk detection. Set the key
--   <tt>AdvancedSecurityMode</tt> to the value "AUDIT".
updateUserPool_userPoolAddOns :: Lens' UpdateUserPool (Maybe UserPoolAddOnsType)

-- | The subject of the email verification message.
updateUserPool_emailVerificationSubject :: Lens' UpdateUserPool (Maybe Text)

-- | Use this setting to define which verified available method a user can
--   use to recover their password when they call <tt>ForgotPassword</tt>.
--   It allows you to define a preferred method when a user has more than
--   one method available. With this setting, SMS does not qualify for a
--   valid password recovery mechanism if the user also has SMS MFA
--   enabled. In the absence of this setting, Cognito uses the legacy
--   behavior to determine the recovery method where SMS is preferred over
--   email.
updateUserPool_accountRecoverySetting :: Lens' UpdateUserPool (Maybe AccountRecoverySettingType)

-- | Email configuration.
updateUserPool_emailConfiguration :: Lens' UpdateUserPool (Maybe EmailConfigurationType)

-- | A container with information about the SMS verification message.
updateUserPool_smsVerificationMessage :: Lens' UpdateUserPool (Maybe Text)

-- | Can be one of the following values:
--   
--   <ul>
--   <li><tt>OFF</tt> - MFA tokens are not required and cannot be specified
--   during user registration.</li>
--   <li><tt>ON</tt> - MFA tokens are required for all user registrations.
--   You can only specify ON when you are initially creating a user pool.
--   You can use the <a>SetUserPoolMfaConfig</a> API operation to turn MFA
--   "ON" for existing user pools.</li>
--   <li><tt>OPTIONAL</tt> - Users have the option when registering to
--   create an MFA token.</li>
--   </ul>
updateUserPool_mfaConfiguration :: Lens' UpdateUserPool (Maybe UserPoolMfaType)

-- | The Lambda configuration information from the request to update the
--   user pool.
updateUserPool_lambdaConfig :: Lens' UpdateUserPool (Maybe LambdaConfigType)

-- | SMS configuration.
updateUserPool_smsConfiguration :: Lens' UpdateUserPool (Maybe SmsConfigurationType)

-- | The configuration for <tt>AdminCreateUser</tt> requests.
updateUserPool_adminCreateUserConfig :: Lens' UpdateUserPool (Maybe AdminCreateUserConfigType)

-- | Device configuration.
updateUserPool_deviceConfiguration :: Lens' UpdateUserPool (Maybe DeviceConfigurationType)

-- | The attributes that are automatically verified when the Amazon Cognito
--   service makes a request to update user pools.
updateUserPool_autoVerifiedAttributes :: Lens' UpdateUserPool (Maybe [VerifiedAttributeType])

-- | A container with the policies you wish to update in a user pool.
updateUserPool_policies :: Lens' UpdateUserPool (Maybe UserPoolPolicyType)

-- | The user pool ID for the user pool you want to update.
updateUserPool_userPoolId :: Lens' UpdateUserPool Text

-- | The response's http status code.
updateUserPoolResponse_httpStatus :: Lens' UpdateUserPoolResponse Int

-- | The domain name for the custom domain that hosts the sign-up and
--   sign-in pages for your application. For example:
--   <tt>auth.example.com</tt>.
--   
--   This string can include only lowercase letters, numbers, and hyphens.
--   Do not use a hyphen for the first or last character. Use periods to
--   separate subdomain names.
updateUserPoolDomain_domain :: Lens' UpdateUserPoolDomain Text

-- | The ID of the user pool that is associated with the custom domain that
--   you are updating the certificate for.
updateUserPoolDomain_userPoolId :: Lens' UpdateUserPoolDomain Text

-- | The configuration for a custom domain that hosts the sign-up and
--   sign-in pages for your application. Use this object to specify an SSL
--   certificate that is managed by ACM.
updateUserPoolDomain_customDomainConfig :: Lens' UpdateUserPoolDomain CustomDomainConfigType

-- | The Amazon CloudFront endpoint that Amazon Cognito set up when you
--   added the custom domain to your user pool.
updateUserPoolDomainResponse_cloudFrontDomain :: Lens' UpdateUserPoolDomainResponse (Maybe Text)

-- | The response's http status code.
updateUserPoolDomainResponse_httpStatus :: Lens' UpdateUserPoolDomainResponse Int

-- | The domain string.
deleteUserPoolDomain_domain :: Lens' DeleteUserPoolDomain Text

-- | The user pool ID.
deleteUserPoolDomain_userPoolId :: Lens' DeleteUserPoolDomain Text

-- | The response's http status code.
deleteUserPoolDomainResponse_httpStatus :: Lens' DeleteUserPoolDomainResponse Int

-- | A map of custom key-value pairs that you can provide as input for
--   certain custom workflows that this action triggers.
--   
--   You create custom workflows by assigning Lambda functions to user pool
--   triggers. When you use the AdminInitiateAuth API action, Amazon
--   Cognito invokes the Lambda functions that are specified for various
--   triggers. The ClientMetadata value is passed as input to the functions
--   for only the following triggers:
--   
--   <ul>
--   <li>Pre signup</li>
--   <li>Pre authentication</li>
--   <li>User migration</li>
--   </ul>
--   
--   When Amazon Cognito invokes the functions for these triggers, it
--   passes a JSON payload, which the function receives as input. This
--   payload contains a <tt>validationData</tt> attribute, which provides
--   the data that you assigned to the ClientMetadata parameter in your
--   AdminInitiateAuth request. In your function code in Lambda, you can
--   process the <tt>validationData</tt> value to enhance your workflow for
--   your specific needs.
--   
--   When you use the AdminInitiateAuth API action, Amazon Cognito also
--   invokes the functions for the following triggers, but it does not
--   provide the ClientMetadata value as input:
--   
--   <ul>
--   <li>Post authentication</li>
--   <li>Custom message</li>
--   <li>Pre token generation</li>
--   <li>Create auth challenge</li>
--   <li>Define auth challenge</li>
--   <li>Verify auth challenge</li>
--   </ul>
--   
--   For more information, see <a>Customizing User Pool Workflows with
--   Lambda Triggers</a> in the <i>Amazon Cognito Developer Guide</i>.
--   
--   Take the following limitations into consideration when you use the
--   ClientMetadata parameter:
--   
--   <ul>
--   <li>Amazon Cognito does not store the ClientMetadata value. This data
--   is available only to Lambda triggers that are assigned to a user pool
--   to support custom workflows. If your user pool configuration does not
--   include triggers, the ClientMetadata parameter serves no purpose.</li>
--   <li>Amazon Cognito does not validate the ClientMetadata value.</li>
--   <li>Amazon Cognito does not encrypt the the ClientMetadata value, so
--   don't use it to provide sensitive information.</li>
--   </ul>
adminInitiateAuth_clientMetadata :: Lens' AdminInitiateAuth (Maybe (HashMap Text Text))

-- | Contextual data such as the user's device fingerprint, IP address, or
--   location used for evaluating the risk of an unexpected event by Amazon
--   Cognito advanced security.
adminInitiateAuth_contextData :: Lens' AdminInitiateAuth (Maybe ContextDataType)

-- | The analytics metadata for collecting Amazon Pinpoint metrics for
--   <tt>AdminInitiateAuth</tt> calls.
adminInitiateAuth_analyticsMetadata :: Lens' AdminInitiateAuth (Maybe AnalyticsMetadataType)

-- | The authentication parameters. These are inputs corresponding to the
--   <tt>AuthFlow</tt> that you are invoking. The required values depend on
--   the value of <tt>AuthFlow</tt>:
--   
--   <ul>
--   <li>For <tt>USER_SRP_AUTH</tt>: <tt>USERNAME</tt> (required),
--   <tt>SRP_A</tt> (required), <tt>SECRET_HASH</tt> (required if the app
--   client is configured with a client secret), <tt>DEVICE_KEY</tt>.</li>
--   <li>For <tt>REFRESH_TOKEN_AUTH/REFRESH_TOKEN</tt>:
--   <tt>REFRESH_TOKEN</tt> (required), <tt>SECRET_HASH</tt> (required if
--   the app client is configured with a client secret),
--   <tt>DEVICE_KEY</tt>.</li>
--   <li>For <tt>ADMIN_NO_SRP_AUTH</tt>: <tt>USERNAME</tt> (required),
--   <tt>SECRET_HASH</tt> (if app client is configured with client secret),
--   <tt>PASSWORD</tt> (required), <tt>DEVICE_KEY</tt>.</li>
--   <li>For <tt>CUSTOM_AUTH</tt>: <tt>USERNAME</tt> (required),
--   <tt>SECRET_HASH</tt> (if app client is configured with client secret),
--   <tt>DEVICE_KEY</tt>. To start the authentication flow with password
--   verification, include <tt>ChallengeName: SRP_A</tt> and <tt>SRP_A:
--   (The SRP_A Value)</tt>.</li>
--   </ul>
adminInitiateAuth_authParameters :: Lens' AdminInitiateAuth (Maybe (HashMap Text Text))

-- | The ID of the Amazon Cognito user pool.
adminInitiateAuth_userPoolId :: Lens' AdminInitiateAuth Text

-- | The app client ID.
adminInitiateAuth_clientId :: Lens' AdminInitiateAuth Text

-- | The authentication flow for this call to execute. The API action will
--   depend on this value. For example:
--   
--   <ul>
--   <li><tt>REFRESH_TOKEN_AUTH</tt> will take in a valid refresh token and
--   return new tokens.</li>
--   <li><tt>USER_SRP_AUTH</tt> will take in <tt>USERNAME</tt> and
--   <tt>SRP_A</tt> and return the SRP variables to be used for next
--   challenge execution.</li>
--   <li><tt>USER_PASSWORD_AUTH</tt> will take in <tt>USERNAME</tt> and
--   <tt>PASSWORD</tt> and return the next challenge or tokens.</li>
--   </ul>
--   
--   Valid values include:
--   
--   <ul>
--   <li><tt>USER_SRP_AUTH</tt>: Authentication flow for the Secure Remote
--   Password (SRP) protocol.</li>
--   <li><tt>REFRESH_TOKEN_AUTH</tt>/<tt>REFRESH_TOKEN</tt>: Authentication
--   flow for refreshing the access token and ID token by supplying a valid
--   refresh token.</li>
--   <li><tt>CUSTOM_AUTH</tt>: Custom authentication flow.</li>
--   <li><tt>ADMIN_NO_SRP_AUTH</tt>: Non-SRP authentication flow; you can
--   pass in the USERNAME and PASSWORD directly if the flow is enabled for
--   calling the app client.</li>
--   <li><tt>USER_PASSWORD_AUTH</tt>: Non-SRP authentication flow; USERNAME
--   and PASSWORD are passed directly. If a user migration Lambda trigger
--   is set, this flow will invoke the user migration Lambda if the
--   USERNAME is not found in the user pool.</li>
--   <li><tt>ADMIN_USER_PASSWORD_AUTH</tt>: Admin-based user password
--   authentication. This replaces the <tt>ADMIN_NO_SRP_AUTH</tt>
--   authentication flow. In this flow, Cognito receives the password in
--   the request instead of using the SRP process to verify passwords.</li>
--   </ul>
adminInitiateAuth_authFlow :: Lens' AdminInitiateAuth AuthFlowType

-- | The name of the challenge which you are responding to with this call.
--   This is returned to you in the <tt>AdminInitiateAuth</tt> response if
--   you need to pass another challenge.
--   
--   <ul>
--   <li><tt>MFA_SETUP</tt>: If MFA is required, users who do not have at
--   least one of the MFA methods set up are presented with an
--   <tt>MFA_SETUP</tt> challenge. The user must set up at least one MFA
--   type to continue to authenticate.</li>
--   <li><tt>SELECT_MFA_TYPE</tt>: Selects the MFA type. Valid MFA options
--   are <tt>SMS_MFA</tt> for text SMS MFA, and <tt>SOFTWARE_TOKEN_MFA</tt>
--   for TOTP software token MFA.</li>
--   <li><tt>SMS_MFA</tt>: Next challenge is to supply an
--   <tt>SMS_MFA_CODE</tt>, delivered via SMS.</li>
--   <li><tt>PASSWORD_VERIFIER</tt>: Next challenge is to supply
--   <tt>PASSWORD_CLAIM_SIGNATURE</tt>,
--   <tt>PASSWORD_CLAIM_SECRET_BLOCK</tt>, and <tt>TIMESTAMP</tt> after the
--   client-side SRP calculations.</li>
--   <li><tt>CUSTOM_CHALLENGE</tt>: This is returned if your custom
--   authentication flow determines that the user should pass another
--   challenge before tokens are issued.</li>
--   <li><tt>DEVICE_SRP_AUTH</tt>: If device tracking was enabled on your
--   user pool and the previous challenges were passed, this challenge is
--   returned so that Amazon Cognito can start tracking this device.</li>
--   <li><tt>DEVICE_PASSWORD_VERIFIER</tt>: Similar to
--   <tt>PASSWORD_VERIFIER</tt>, but for devices only.</li>
--   <li><tt>ADMIN_NO_SRP_AUTH</tt>: This is returned if you need to
--   authenticate with <tt>USERNAME</tt> and <tt>PASSWORD</tt> directly. An
--   app client must be enabled to use this flow.</li>
--   <li><tt>NEW_PASSWORD_REQUIRED</tt>: For users who are required to
--   change their passwords after successful first login. This challenge
--   should be passed with <tt>NEW_PASSWORD</tt> and any other required
--   attributes.</li>
--   <li><tt>MFA_SETUP</tt>: For users who are required to setup an MFA
--   factor before they can sign-in. The MFA types enabled for the user
--   pool will be listed in the challenge parameters <tt>MFA_CAN_SETUP</tt>
--   value.To setup software token MFA, use the session returned here from
--   <tt>InitiateAuth</tt> as an input to <tt>AssociateSoftwareToken</tt>,
--   and use the session returned by <tt>VerifySoftwareToken</tt> as an
--   input to <tt>RespondToAuthChallenge</tt> with challenge name
--   <tt>MFA_SETUP</tt> to complete sign-in. To setup SMS MFA, users will
--   need help from an administrator to add a phone number to their account
--   and then call <tt>InitiateAuth</tt> again to restart sign-in.</li>
--   </ul>
adminInitiateAuthResponse_challengeName :: Lens' AdminInitiateAuthResponse (Maybe ChallengeNameType)

-- | The challenge parameters. These are returned to you in the
--   <tt>AdminInitiateAuth</tt> response if you need to pass another
--   challenge. The responses in this parameter should be used to compute
--   inputs to the next call (<tt>AdminRespondToAuthChallenge</tt>).
--   
--   All challenges require <tt>USERNAME</tt> and <tt>SECRET_HASH</tt> (if
--   applicable).
--   
--   The value of the <tt>USER_ID_FOR_SRP</tt> attribute will be the user's
--   actual username, not an alias (such as email address or phone number),
--   even if you specified an alias in your call to
--   <tt>AdminInitiateAuth</tt>. This is because, in the
--   <tt>AdminRespondToAuthChallenge</tt> API <tt>ChallengeResponses</tt>,
--   the <tt>USERNAME</tt> attribute cannot be an alias.
adminInitiateAuthResponse_challengeParameters :: Lens' AdminInitiateAuthResponse (Maybe (HashMap Text Text))

-- | The result of the authentication response. This is only returned if
--   the caller does not need to pass another challenge. If the caller does
--   need to pass another challenge before it gets tokens,
--   <tt>ChallengeName</tt>, <tt>ChallengeParameters</tt>, and
--   <tt>Session</tt> are returned.
adminInitiateAuthResponse_authenticationResult :: Lens' AdminInitiateAuthResponse (Maybe AuthenticationResultType)

-- | The session which should be passed both ways in challenge-response
--   calls to the service. If <tt>AdminInitiateAuth</tt> or
--   <tt>AdminRespondToAuthChallenge</tt> API call determines that the
--   caller needs to go through another challenge, they return a session
--   with other challenge parameters. This session should be passed as it
--   is to the next <tt>AdminRespondToAuthChallenge</tt> API call.
adminInitiateAuthResponse_session :: Lens' AdminInitiateAuthResponse (Maybe Text)

-- | The response's http status code.
adminInitiateAuthResponse_httpStatus :: Lens' AdminInitiateAuthResponse Int

-- | The user pool ID for the user pool.
adminLinkProviderForUser_userPoolId :: Lens' AdminLinkProviderForUser Text

-- | The existing user in the user pool to be linked to the external
--   identity provider user account. Can be a native (Username + Password)
--   Cognito User Pools user or a federated user (for example, a SAML or
--   Facebook user). If the user doesn't exist, an exception is thrown.
--   This is the user that is returned when the new user (with the linked
--   identity provider attribute) signs in.
--   
--   For a native username + password user, the
--   <tt>ProviderAttributeValue</tt> for the <tt>DestinationUser</tt>
--   should be the username in the user pool. For a federated user, it
--   should be the provider-specific <tt>user_id</tt>.
--   
--   The <tt>ProviderAttributeName</tt> of the <tt>DestinationUser</tt> is
--   ignored.
--   
--   The <tt>ProviderName</tt> should be set to <tt>Cognito</tt> for users
--   in Cognito user pools.
adminLinkProviderForUser_destinationUser :: Lens' AdminLinkProviderForUser ProviderUserIdentifierType

-- | An external identity provider account for a user who does not
--   currently exist yet in the user pool. This user must be a federated
--   user (for example, a SAML or Facebook user), not another native user.
--   
--   If the <tt>SourceUser</tt> is a federated social identity provider
--   user (Facebook, Google, or Login with Amazon), you must set the
--   <tt>ProviderAttributeName</tt> to <tt>Cognito_Subject</tt>. For social
--   identity providers, the <tt>ProviderName</tt> will be
--   <tt>Facebook</tt>, <tt>Google</tt>, or <tt>LoginWithAmazon</tt>, and
--   Cognito will automatically parse the Facebook, Google, and Login with
--   Amazon tokens for <tt>id</tt>, <tt>sub</tt>, and <tt>user_id</tt>,
--   respectively. The <tt>ProviderAttributeValue</tt> for the user must be
--   the same value as the <tt>id</tt>, <tt>sub</tt>, or <tt>user_id</tt>
--   value found in the social identity provider token.
--   
--   For SAML, the <tt>ProviderAttributeName</tt> can be any value that
--   matches a claim in the SAML assertion. If you wish to link SAML users
--   based on the subject of the SAML assertion, you should map the subject
--   to a claim through the SAML identity provider and submit that claim
--   name as the <tt>ProviderAttributeName</tt>. If you set
--   <tt>ProviderAttributeName</tt> to <tt>Cognito_Subject</tt>, Cognito
--   will automatically parse the default unique identifier found in the
--   subject from the SAML token.
adminLinkProviderForUser_sourceUser :: Lens' AdminLinkProviderForUser ProviderUserIdentifierType

-- | The response's http status code.
adminLinkProviderForUserResponse_httpStatus :: Lens' AdminLinkProviderForUserResponse Int

-- | The user pool ID for the user pool where you want to enable the user.
adminEnableUser_userPoolId :: Lens' AdminEnableUser Text

-- | The user name of the user you wish to enable.
adminEnableUser_username :: Lens' AdminEnableUser Text

-- | The response's http status code.
adminEnableUserResponse_httpStatus :: Lens' AdminEnableUserResponse Int

-- | A map of custom key-value pairs that you can provide as input for any
--   custom workflows that this action triggers.
--   
--   You create custom workflows by assigning Lambda functions to user pool
--   triggers. When you use the GetUserAttributeVerificationCode API
--   action, Amazon Cognito invokes the function that is assigned to the
--   /custom message/ trigger. When Amazon Cognito invokes this function,
--   it passes a JSON payload, which the function receives as input. This
--   payload contains a <tt>clientMetadata</tt> attribute, which provides
--   the data that you assigned to the ClientMetadata parameter in your
--   GetUserAttributeVerificationCode request. In your function code in
--   Lambda, you can process the <tt>clientMetadata</tt> value to enhance
--   your workflow for your specific needs.
--   
--   For more information, see <a>Customizing User Pool Workflows with
--   Lambda Triggers</a> in the <i>Amazon Cognito Developer Guide</i>.
--   
--   Take the following limitations into consideration when you use the
--   ClientMetadata parameter:
--   
--   <ul>
--   <li>Amazon Cognito does not store the ClientMetadata value. This data
--   is available only to Lambda triggers that are assigned to a user pool
--   to support custom workflows. If your user pool configuration does not
--   include triggers, the ClientMetadata parameter serves no purpose.</li>
--   <li>Amazon Cognito does not validate the ClientMetadata value.</li>
--   <li>Amazon Cognito does not encrypt the the ClientMetadata value, so
--   don't use it to provide sensitive information.</li>
--   </ul>
getUserAttributeVerificationCode_clientMetadata :: Lens' GetUserAttributeVerificationCode (Maybe (HashMap Text Text))

-- | The access token returned by the server response to get the user
--   attribute verification code.
getUserAttributeVerificationCode_accessToken :: Lens' GetUserAttributeVerificationCode Text

-- | The attribute name returned by the server response to get the user
--   attribute verification code.
getUserAttributeVerificationCode_attributeName :: Lens' GetUserAttributeVerificationCode Text

-- | The code delivery details returned by the server in response to the
--   request to get the user attribute verification code.
getUserAttributeVerificationCodeResponse_codeDeliveryDetails :: Lens' GetUserAttributeVerificationCodeResponse (Maybe CodeDeliveryDetailsType)

-- | The response's http status code.
getUserAttributeVerificationCodeResponse_httpStatus :: Lens' GetUserAttributeVerificationCodeResponse Int

-- | The SMS text message MFA configuration.
setUserPoolMfaConfig_smsMfaConfiguration :: Lens' SetUserPoolMfaConfig (Maybe SmsMfaConfigType)

-- | The software token MFA configuration.
setUserPoolMfaConfig_softwareTokenMfaConfiguration :: Lens' SetUserPoolMfaConfig (Maybe SoftwareTokenMfaConfigType)

-- | The MFA configuration. Users who don't have an MFA factor set up won't
--   be able to sign-in if you set the MfaConfiguration value to ‘ON’. See
--   <a>Adding Multi-Factor Authentication (MFA) to a User Pool</a> to
--   learn more. Valid values include:
--   
--   <ul>
--   <li><tt>OFF</tt> MFA will not be used for any users.</li>
--   <li><tt>ON</tt> MFA is required for all users to sign in.</li>
--   <li><tt>OPTIONAL</tt> MFA will be required only for individual users
--   who have an MFA factor enabled.</li>
--   </ul>
setUserPoolMfaConfig_mfaConfiguration :: Lens' SetUserPoolMfaConfig (Maybe UserPoolMfaType)

-- | The user pool ID.
setUserPoolMfaConfig_userPoolId :: Lens' SetUserPoolMfaConfig Text

-- | The SMS text message MFA configuration.
setUserPoolMfaConfigResponse_smsMfaConfiguration :: Lens' SetUserPoolMfaConfigResponse (Maybe SmsMfaConfigType)

-- | The software token MFA configuration.
setUserPoolMfaConfigResponse_softwareTokenMfaConfiguration :: Lens' SetUserPoolMfaConfigResponse (Maybe SoftwareTokenMfaConfigType)

-- | The MFA configuration. Valid values include:
--   
--   <ul>
--   <li><tt>OFF</tt> MFA will not be used for any users.</li>
--   <li><tt>ON</tt> MFA is required for all users to sign in.</li>
--   <li><tt>OPTIONAL</tt> MFA will be required only for individual users
--   who have an MFA factor enabled.</li>
--   </ul>
setUserPoolMfaConfigResponse_mfaConfiguration :: Lens' SetUserPoolMfaConfigResponse (Maybe UserPoolMfaType)

-- | The response's http status code.
setUserPoolMfaConfigResponse_httpStatus :: Lens' SetUserPoolMfaConfigResponse Int

-- | A map of custom key-value pairs that you can provide as input for any
--   custom workflows that this action triggers.
--   
--   You create custom workflows by assigning Lambda functions to user pool
--   triggers. When you use the UpdateUserAttributes API action, Amazon
--   Cognito invokes the function that is assigned to the <i>custom
--   message</i> trigger. When Amazon Cognito invokes this function, it
--   passes a JSON payload, which the function receives as input. This
--   payload contains a <tt>clientMetadata</tt> attribute, which provides
--   the data that you assigned to the ClientMetadata parameter in your
--   UpdateUserAttributes request. In your function code in Lambda, you can
--   process the <tt>clientMetadata</tt> value to enhance your workflow for
--   your specific needs.
--   
--   For more information, see <a>Customizing User Pool Workflows with
--   Lambda Triggers</a> in the <i>Amazon Cognito Developer Guide</i>.
--   
--   Take the following limitations into consideration when you use the
--   ClientMetadata parameter:
--   
--   <ul>
--   <li>Amazon Cognito does not store the ClientMetadata value. This data
--   is available only to Lambda triggers that are assigned to a user pool
--   to support custom workflows. If your user pool configuration does not
--   include triggers, the ClientMetadata parameter serves no purpose.</li>
--   <li>Amazon Cognito does not validate the ClientMetadata value.</li>
--   <li>Amazon Cognito does not encrypt the the ClientMetadata value, so
--   don't use it to provide sensitive information.</li>
--   </ul>
updateUserAttributes_clientMetadata :: Lens' UpdateUserAttributes (Maybe (HashMap Text Text))

-- | An array of name-value pairs representing user attributes.
--   
--   For custom attributes, you must prepend the <tt>custom:</tt> prefix to
--   the attribute name.
updateUserAttributes_userAttributes :: Lens' UpdateUserAttributes [AttributeType]

-- | The access token for the request to update user attributes.
updateUserAttributes_accessToken :: Lens' UpdateUserAttributes Text

-- | The code delivery details list from the server for the request to
--   update user attributes.
updateUserAttributesResponse_codeDeliveryDetailsList :: Lens' UpdateUserAttributesResponse (Maybe [CodeDeliveryDetailsType])

-- | The response's http status code.
updateUserAttributesResponse_httpStatus :: Lens' UpdateUserAttributesResponse Int

-- | An array of strings representing the user attribute names you wish to
--   delete.
--   
--   For custom attributes, you must prepend the <tt>custom:</tt> prefix to
--   the attribute name.
deleteUserAttributes_userAttributeNames :: Lens' DeleteUserAttributes [Text]

-- | The access token used in the request to delete user attributes.
deleteUserAttributes_accessToken :: Lens' DeleteUserAttributes Text

-- | The response's http status code.
deleteUserAttributesResponse_httpStatus :: Lens' DeleteUserAttributesResponse Int

-- | Represents the access token of the request to verify user attributes.
verifyUserAttribute_accessToken :: Lens' VerifyUserAttribute Text

-- | The attribute name in the request to verify user attributes.
verifyUserAttribute_attributeName :: Lens' VerifyUserAttribute Text

-- | The verification code in the request to verify user attributes.
verifyUserAttribute_code :: Lens' VerifyUserAttribute Text

-- | The response's http status code.
verifyUserAttributeResponse_httpStatus :: Lens' VerifyUserAttributeResponse Int

-- | The user pool ID for the user pool where you want to disable the user.
adminDisableUser_userPoolId :: Lens' AdminDisableUser Text

-- | The user name of the user you wish to disable.
adminDisableUser_username :: Lens' AdminDisableUser Text

-- | The response's http status code.
adminDisableUserResponse_httpStatus :: Lens' AdminDisableUserResponse Int

-- | The configuration of the device secret verifier.
confirmDevice_deviceSecretVerifierConfig :: Lens' ConfirmDevice (Maybe DeviceSecretVerifierConfigType)

-- | The device name.
confirmDevice_deviceName :: Lens' ConfirmDevice (Maybe Text)

-- | The access token.
confirmDevice_accessToken :: Lens' ConfirmDevice Text

-- | The device key.
confirmDevice_deviceKey :: Lens' ConfirmDevice Text

-- | Indicates whether the user confirmation is necessary to confirm the
--   device response.
confirmDeviceResponse_userConfirmationNecessary :: Lens' ConfirmDeviceResponse (Maybe Bool)

-- | The response's http status code.
confirmDeviceResponse_httpStatus :: Lens' ConfirmDeviceResponse Int

-- | A map of custom key-value pairs that you can provide as input for any
--   custom workflows that this action triggers.
--   
--   You create custom workflows by assigning Lambda functions to user pool
--   triggers. When you use the ConfirmForgotPassword API action, Amazon
--   Cognito invokes the function that is assigned to the <i>post
--   confirmation</i> trigger. When Amazon Cognito invokes this function,
--   it passes a JSON payload, which the function receives as input. This
--   payload contains a <tt>clientMetadata</tt> attribute, which provides
--   the data that you assigned to the ClientMetadata parameter in your
--   ConfirmForgotPassword request. In your function code in Lambda, you
--   can process the <tt>clientMetadata</tt> value to enhance your workflow
--   for your specific needs.
--   
--   For more information, see <a>Customizing User Pool Workflows with
--   Lambda Triggers</a> in the <i>Amazon Cognito Developer Guide</i>.
--   
--   Take the following limitations into consideration when you use the
--   ClientMetadata parameter:
--   
--   <ul>
--   <li>Amazon Cognito does not store the ClientMetadata value. This data
--   is available only to Lambda triggers that are assigned to a user pool
--   to support custom workflows. If your user pool configuration does not
--   include triggers, the ClientMetadata parameter serves no purpose.</li>
--   <li>Amazon Cognito does not validate the ClientMetadata value.</li>
--   <li>Amazon Cognito does not encrypt the the ClientMetadata value, so
--   don't use it to provide sensitive information.</li>
--   </ul>
confirmForgotPassword_clientMetadata :: Lens' ConfirmForgotPassword (Maybe (HashMap Text Text))

-- | The Amazon Pinpoint analytics metadata for collecting metrics for
--   <tt>ConfirmForgotPassword</tt> calls.
confirmForgotPassword_analyticsMetadata :: Lens' ConfirmForgotPassword (Maybe AnalyticsMetadataType)

-- | Contextual data such as the user's device fingerprint, IP address, or
--   location used for evaluating the risk of an unexpected event by Amazon
--   Cognito advanced security.
confirmForgotPassword_userContextData :: Lens' ConfirmForgotPassword (Maybe UserContextDataType)

-- | A keyed-hash message authentication code (HMAC) calculated using the
--   secret key of a user pool client and username plus the client ID in
--   the message.
confirmForgotPassword_secretHash :: Lens' ConfirmForgotPassword (Maybe Text)

-- | The app client ID of the app associated with the user pool.
confirmForgotPassword_clientId :: Lens' ConfirmForgotPassword Text

-- | The user name of the user for whom you want to enter a code to
--   retrieve a forgotten password.
confirmForgotPassword_username :: Lens' ConfirmForgotPassword Text

-- | The confirmation code sent by a user's request to retrieve a forgotten
--   password. For more information, see <a>ForgotPassword</a>.
confirmForgotPassword_confirmationCode :: Lens' ConfirmForgotPassword Text

-- | The password sent by a user's request to retrieve a forgotten
--   password.
confirmForgotPassword_password :: Lens' ConfirmForgotPassword Text

-- | The response's http status code.
confirmForgotPasswordResponse_httpStatus :: Lens' ConfirmForgotPasswordResponse Int

-- | An identifier that was returned from the previous call to
--   <tt>ListUserImportJobs</tt>, which can be used to return the next set
--   of import jobs in the list.
listUserImportJobs_paginationToken :: Lens' ListUserImportJobs (Maybe Text)

-- | The user pool ID for the user pool that the users are being imported
--   into.
listUserImportJobs_userPoolId :: Lens' ListUserImportJobs Text

-- | The maximum number of import jobs you want the request to return.
listUserImportJobs_maxResults :: Lens' ListUserImportJobs Natural

-- | An identifier that can be used to return the next set of user import
--   jobs in the list.
listUserImportJobsResponse_paginationToken :: Lens' ListUserImportJobsResponse (Maybe Text)

-- | The user import jobs.
listUserImportJobsResponse_userImportJobs :: Lens' ListUserImportJobsResponse (Maybe (NonEmpty UserImportJobType))

-- | The response's http status code.
listUserImportJobsResponse_httpStatus :: Lens' ListUserImportJobsResponse Int

-- | The Amazon Resource Name (ARN) of the user pool that the tags are
--   assigned to.
listTagsForResource_resourceArn :: Lens' ListTagsForResource Text

-- | The tags that are assigned to the user pool.
listTagsForResourceResponse_tags :: Lens' ListTagsForResourceResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
listTagsForResourceResponse_httpStatus :: Lens' ListTagsForResourceResponse Int

-- | The user pool ID.
describeIdentityProvider_userPoolId :: Lens' DescribeIdentityProvider Text

-- | The identity provider name.
describeIdentityProvider_providerName :: Lens' DescribeIdentityProvider Text

-- | The response's http status code.
describeIdentityProviderResponse_httpStatus :: Lens' DescribeIdentityProviderResponse Int

-- | The identity provider that was deleted.
describeIdentityProviderResponse_identityProvider :: Lens' DescribeIdentityProviderResponse IdentityProviderType

-- | An identifier that was returned from the previous call to this
--   operation, which can be used to return the next set of items in the
--   list.
listUsers_paginationToken :: Lens' ListUsers (Maybe Text)

-- | An array of strings, where each string is the name of a user attribute
--   to be returned for each user in the search results. If the array is
--   null, all attributes are returned.
listUsers_attributesToGet :: Lens' ListUsers (Maybe [Text])

-- | Maximum number of users to be returned.
listUsers_limit :: Lens' ListUsers (Maybe Natural)

-- | A filter string of the form "<i>AttributeName</i> <i>Filter-Type</i>
--   "<i>AttributeValue</i>"". Quotation marks within the filter string
--   must be escaped using the backslash (\) character. For example,
--   "<tt>family_name</tt> = \"Reddy\"".
--   
--   <ul>
--   <li><i>AttributeName</i>: The name of the attribute to search for. You
--   can only search for one attribute at a time.</li>
--   <li><i>Filter-Type</i>: For an exact match, use =, for example,
--   "<tt>given_name</tt> = \"Jon\"". For a prefix ("starts with") match,
--   use ^=, for example, "<tt>given_name</tt> ^= \"Jon\"".</li>
--   <li><i>AttributeValue</i>: The attribute value that must be matched
--   for each user.</li>
--   </ul>
--   
--   If the filter string is empty, <tt>ListUsers</tt> returns all users in
--   the user pool.
--   
--   You can only search for the following standard attributes:
--   
--   <ul>
--   <li><tt>username</tt> (case-sensitive)</li>
--   <li><pre>email</pre></li>
--   <li><pre>phone_number</pre></li>
--   <li><pre>name</pre></li>
--   <li><pre>given_name</pre></li>
--   <li><pre>family_name</pre></li>
--   <li><pre>preferred_username</pre></li>
--   <li><tt>cognito:user_status</tt> (called <b>Status</b> in the Console)
--   (case-insensitive)</li>
--   <li><pre>status (called Enabled in the Console)
--   (case-sensitive)</pre></li>
--   <li><pre>sub</pre></li>
--   </ul>
--   
--   Custom attributes are not searchable.
--   
--   For more information, see <a>Searching for Users Using the ListUsers
--   API</a> and <a>Examples of Using the ListUsers API</a> in the
--   <i>Amazon Cognito Developer Guide</i>.
listUsers_filter :: Lens' ListUsers (Maybe Text)

-- | The user pool ID for the user pool on which the search should be
--   performed.
listUsers_userPoolId :: Lens' ListUsers Text

-- | An identifier that was returned from the previous call to this
--   operation, which can be used to return the next set of items in the
--   list.
listUsersResponse_paginationToken :: Lens' ListUsersResponse (Maybe Text)

-- | The users returned in the request to list users.
listUsersResponse_users :: Lens' ListUsersResponse (Maybe [UserType])

-- | The response's http status code.
listUsersResponse_httpStatus :: Lens' ListUsersResponse Int

-- | The user pool ID for the user pool where you want to delete user
--   attributes.
adminDeleteUserAttributes_userPoolId :: Lens' AdminDeleteUserAttributes Text

-- | The user name of the user from which you would like to delete
--   attributes.
adminDeleteUserAttributes_username :: Lens' AdminDeleteUserAttributes Text

-- | An array of strings representing the user attribute names you wish to
--   delete.
--   
--   For custom attributes, you must prepend the <tt>custom:</tt> prefix to
--   the attribute name.
adminDeleteUserAttributes_userAttributeNames :: Lens' AdminDeleteUserAttributes [Text]

-- | The response's http status code.
adminDeleteUserAttributesResponse_httpStatus :: Lens' AdminDeleteUserAttributesResponse Int

-- | The domain string.
describeUserPoolDomain_domain :: Lens' DescribeUserPoolDomain Text

-- | A domain description object containing information about the domain.
describeUserPoolDomainResponse_domainDescription :: Lens' DescribeUserPoolDomainResponse (Maybe DomainDescriptionType)

-- | The response's http status code.
describeUserPoolDomainResponse_httpStatus :: Lens' DescribeUserPoolDomainResponse Int

-- | A map of custom key-value pairs that you can provide as input for any
--   custom workflows that this action triggers.
--   
--   You create custom workflows by assigning Lambda functions to user pool
--   triggers. When you use the AdminUpdateUserAttributes API action,
--   Amazon Cognito invokes the function that is assigned to the <i>custom
--   message</i> trigger. When Amazon Cognito invokes this function, it
--   passes a JSON payload, which the function receives as input. This
--   payload contains a <tt>clientMetadata</tt> attribute, which provides
--   the data that you assigned to the ClientMetadata parameter in your
--   AdminUpdateUserAttributes request. In your function code in Lambda,
--   you can process the <tt>clientMetadata</tt> value to enhance your
--   workflow for your specific needs.
--   
--   For more information, see <a>Customizing User Pool Workflows with
--   Lambda Triggers</a> in the <i>Amazon Cognito Developer Guide</i>.
--   
--   Take the following limitations into consideration when you use the
--   ClientMetadata parameter:
--   
--   <ul>
--   <li>Amazon Cognito does not store the ClientMetadata value. This data
--   is available only to Lambda triggers that are assigned to a user pool
--   to support custom workflows. If your user pool configuration does not
--   include triggers, the ClientMetadata parameter serves no purpose.</li>
--   <li>Amazon Cognito does not validate the ClientMetadata value.</li>
--   <li>Amazon Cognito does not encrypt the the ClientMetadata value, so
--   don't use it to provide sensitive information.</li>
--   </ul>
adminUpdateUserAttributes_clientMetadata :: Lens' AdminUpdateUserAttributes (Maybe (HashMap Text Text))

-- | The user pool ID for the user pool where you want to update user
--   attributes.
adminUpdateUserAttributes_userPoolId :: Lens' AdminUpdateUserAttributes Text

-- | The user name of the user for whom you want to update user attributes.
adminUpdateUserAttributes_username :: Lens' AdminUpdateUserAttributes Text

-- | An array of name-value pairs representing user attributes.
--   
--   For custom attributes, you must prepend the <tt>custom:</tt> prefix to
--   the attribute name.
adminUpdateUserAttributes_userAttributes :: Lens' AdminUpdateUserAttributes [AttributeType]

-- | The response's http status code.
adminUpdateUserAttributesResponse_httpStatus :: Lens' AdminUpdateUserAttributesResponse Int

-- | The user pool ID for the user pool where you want to get information
--   about the user.
adminGetUser_userPoolId :: Lens' AdminGetUser Text

-- | The user name of the user you wish to retrieve.
adminGetUser_username :: Lens' AdminGetUser Text

-- | Indicates that the status is enabled.
adminGetUserResponse_enabled :: Lens' AdminGetUserResponse (Maybe Bool)

-- | The user status. Can be one of the following:
--   
--   <ul>
--   <li>UNCONFIRMED - User has been created but not confirmed.</li>
--   <li>CONFIRMED - User has been confirmed.</li>
--   <li>ARCHIVED - User is no longer active.</li>
--   <li>COMPROMISED - User is disabled due to a potential security
--   threat.</li>
--   <li>UNKNOWN - User status is not known.</li>
--   <li>RESET_REQUIRED - User is confirmed, but the user must request a
--   code and reset his or her password before he or she can sign in.</li>
--   <li>FORCE_CHANGE_PASSWORD - The user is confirmed and the user can
--   sign in using a temporary password, but on first sign-in, the user
--   must change his or her password to a new value before doing anything
--   else.</li>
--   </ul>
adminGetUserResponse_userStatus :: Lens' AdminGetUserResponse (Maybe UserStatusType)

-- | An array of name-value pairs representing user attributes.
adminGetUserResponse_userAttributes :: Lens' AdminGetUserResponse (Maybe [AttributeType])

-- | The date the user was created.
adminGetUserResponse_userCreateDate :: Lens' AdminGetUserResponse (Maybe UTCTime)

-- | The MFA options that are enabled for the user. The possible values in
--   this list are <tt>SMS_MFA</tt> and <tt>SOFTWARE_TOKEN_MFA</tt>.
adminGetUserResponse_userMFASettingList :: Lens' AdminGetUserResponse (Maybe [Text])

-- | <i>This response parameter is no longer supported.</i> It provides
--   information only about SMS MFA configurations. It doesn't provide
--   information about TOTP software token MFA configurations. To look up
--   information about either type of MFA configuration, use
--   UserMFASettingList instead.
adminGetUserResponse_mfaOptions :: Lens' AdminGetUserResponse (Maybe [MFAOptionType])

-- | The date the user was last modified.
adminGetUserResponse_userLastModifiedDate :: Lens' AdminGetUserResponse (Maybe UTCTime)

-- | The user's preferred MFA setting.
adminGetUserResponse_preferredMfaSetting :: Lens' AdminGetUserResponse (Maybe Text)

-- | The response's http status code.
adminGetUserResponse_httpStatus :: Lens' AdminGetUserResponse Int

-- | The user name of the user about whom you are receiving information.
adminGetUserResponse_username :: Lens' AdminGetUserResponse Text

-- | The user pool ID.
adminUserGlobalSignOut_userPoolId :: Lens' AdminUserGlobalSignOut Text

-- | The user name.
adminUserGlobalSignOut_username :: Lens' AdminUserGlobalSignOut Text

-- | The response's http status code.
adminUserGlobalSignOutResponse_httpStatus :: Lens' AdminUserGlobalSignOutResponse Int

-- | An identifier that was returned from the previous call to this
--   operation, which can be used to return the next set of items in the
--   list.
listUsersInGroup_nextToken :: Lens' ListUsersInGroup (Maybe Text)

-- | The limit of the request to list users.
listUsersInGroup_limit :: Lens' ListUsersInGroup (Maybe Natural)

-- | The user pool ID for the user pool.
listUsersInGroup_userPoolId :: Lens' ListUsersInGroup Text

-- | The name of the group.
listUsersInGroup_groupName :: Lens' ListUsersInGroup Text

-- | The users returned in the request to list users.
listUsersInGroupResponse_users :: Lens' ListUsersInGroupResponse (Maybe [UserType])

-- | An identifier that was returned from the previous call to this
--   operation, which can be used to return the next set of items in the
--   list.
listUsersInGroupResponse_nextToken :: Lens' ListUsersInGroupResponse (Maybe Text)

-- | The response's http status code.
listUsersInGroupResponse_httpStatus :: Lens' ListUsersInGroupResponse Int

-- | The access token.
associateSoftwareToken_accessToken :: Lens' AssociateSoftwareToken (Maybe Text)

-- | The session which should be passed both ways in challenge-response
--   calls to the service. This allows authentication of the user as part
--   of the MFA setup process.
associateSoftwareToken_session :: Lens' AssociateSoftwareToken (Maybe Text)

-- | A unique generated shared secret code that is used in the TOTP
--   algorithm to generate a one time code.
associateSoftwareTokenResponse_secretCode :: Lens' AssociateSoftwareTokenResponse (Maybe Text)

-- | The session which should be passed both ways in challenge-response
--   calls to the service. This allows authentication of the user as part
--   of the MFA setup process.
associateSoftwareTokenResponse_session :: Lens' AssociateSoftwareTokenResponse (Maybe Text)

-- | The response's http status code.
associateSoftwareTokenResponse_httpStatus :: Lens' AssociateSoftwareTokenResponse Int

-- | The user pool ID for the user pool.
adminDisableProviderForUser_userPoolId :: Lens' AdminDisableProviderForUser Text

-- | The user to be disabled.
adminDisableProviderForUser_user :: Lens' AdminDisableProviderForUser ProviderUserIdentifierType

-- | The response's http status code.
adminDisableProviderForUserResponse_httpStatus :: Lens' AdminDisableProviderForUserResponse Int

-- | A map of custom key-value pairs that you can provide as input for any
--   custom workflows that this action triggers.
--   
--   You create custom workflows by assigning Lambda functions to user pool
--   triggers. When you use the ForgotPassword API action, Amazon Cognito
--   invokes any functions that are assigned to the following triggers:
--   /pre sign-up<i>, </i>custom message<i>, and </i>user migration/. When
--   Amazon Cognito invokes any of these functions, it passes a JSON
--   payload, which the function receives as input. This payload contains a
--   <tt>clientMetadata</tt> attribute, which provides the data that you
--   assigned to the ClientMetadata parameter in your ForgotPassword
--   request. In your function code in Lambda, you can process the
--   <tt>clientMetadata</tt> value to enhance your workflow for your
--   specific needs.
--   
--   For more information, see <a>Customizing User Pool Workflows with
--   Lambda Triggers</a> in the <i>Amazon Cognito Developer Guide</i>.
--   
--   Take the following limitations into consideration when you use the
--   ClientMetadata parameter:
--   
--   <ul>
--   <li>Amazon Cognito does not store the ClientMetadata value. This data
--   is available only to Lambda triggers that are assigned to a user pool
--   to support custom workflows. If your user pool configuration does not
--   include triggers, the ClientMetadata parameter serves no purpose.</li>
--   <li>Amazon Cognito does not validate the ClientMetadata value.</li>
--   <li>Amazon Cognito does not encrypt the the ClientMetadata value, so
--   don't use it to provide sensitive information.</li>
--   </ul>
forgotPassword_clientMetadata :: Lens' ForgotPassword (Maybe (HashMap Text Text))

-- | The Amazon Pinpoint analytics metadata for collecting metrics for
--   <tt>ForgotPassword</tt> calls.
forgotPassword_analyticsMetadata :: Lens' ForgotPassword (Maybe AnalyticsMetadataType)

-- | Contextual data such as the user's device fingerprint, IP address, or
--   location used for evaluating the risk of an unexpected event by Amazon
--   Cognito advanced security.
forgotPassword_userContextData :: Lens' ForgotPassword (Maybe UserContextDataType)

-- | A keyed-hash message authentication code (HMAC) calculated using the
--   secret key of a user pool client and username plus the client ID in
--   the message.
forgotPassword_secretHash :: Lens' ForgotPassword (Maybe Text)

-- | The ID of the client associated with the user pool.
forgotPassword_clientId :: Lens' ForgotPassword Text

-- | The user name of the user for whom you want to enter a code to reset a
--   forgotten password.
forgotPassword_username :: Lens' ForgotPassword Text

-- | The code delivery details returned by the server in response to the
--   request to reset a password.
forgotPasswordResponse_codeDeliveryDetails :: Lens' ForgotPasswordResponse (Maybe CodeDeliveryDetailsType)

-- | The response's http status code.
forgotPasswordResponse_httpStatus :: Lens' ForgotPasswordResponse Int

-- | The user pool ID for the user pool you want to describe.
describeUserPool_userPoolId :: Lens' DescribeUserPool Text

-- | The container of metadata returned by the server to describe the pool.
describeUserPoolResponse_userPool :: Lens' DescribeUserPoolResponse (Maybe UserPoolType)

-- | The response's http status code.
describeUserPoolResponse_httpStatus :: Lens' DescribeUserPoolResponse Int

-- | A map of custom key-value pairs that you can provide as input for
--   certain custom workflows that this action triggers.
--   
--   You create custom workflows by assigning Lambda functions to user pool
--   triggers. When you use the InitiateAuth API action, Amazon Cognito
--   invokes the Lambda functions that are specified for various triggers.
--   The ClientMetadata value is passed as input to the functions for only
--   the following triggers:
--   
--   <ul>
--   <li>Pre signup</li>
--   <li>Pre authentication</li>
--   <li>User migration</li>
--   </ul>
--   
--   When Amazon Cognito invokes the functions for these triggers, it
--   passes a JSON payload, which the function receives as input. This
--   payload contains a <tt>validationData</tt> attribute, which provides
--   the data that you assigned to the ClientMetadata parameter in your
--   InitiateAuth request. In your function code in Lambda, you can process
--   the <tt>validationData</tt> value to enhance your workflow for your
--   specific needs.
--   
--   When you use the InitiateAuth API action, Amazon Cognito also invokes
--   the functions for the following triggers, but it does not provide the
--   ClientMetadata value as input:
--   
--   <ul>
--   <li>Post authentication</li>
--   <li>Custom message</li>
--   <li>Pre token generation</li>
--   <li>Create auth challenge</li>
--   <li>Define auth challenge</li>
--   <li>Verify auth challenge</li>
--   </ul>
--   
--   For more information, see <a>Customizing User Pool Workflows with
--   Lambda Triggers</a> in the <i>Amazon Cognito Developer Guide</i>.
--   
--   Take the following limitations into consideration when you use the
--   ClientMetadata parameter:
--   
--   <ul>
--   <li>Amazon Cognito does not store the ClientMetadata value. This data
--   is available only to Lambda triggers that are assigned to a user pool
--   to support custom workflows. If your user pool configuration does not
--   include triggers, the ClientMetadata parameter serves no purpose.</li>
--   <li>Amazon Cognito does not validate the ClientMetadata value.</li>
--   <li>Amazon Cognito does not encrypt the the ClientMetadata value, so
--   don't use it to provide sensitive information.</li>
--   </ul>
initiateAuth_clientMetadata :: Lens' InitiateAuth (Maybe (HashMap Text Text))

-- | The Amazon Pinpoint analytics metadata for collecting metrics for
--   <tt>InitiateAuth</tt> calls.
initiateAuth_analyticsMetadata :: Lens' InitiateAuth (Maybe AnalyticsMetadataType)

-- | Contextual data such as the user's device fingerprint, IP address, or
--   location used for evaluating the risk of an unexpected event by Amazon
--   Cognito advanced security.
initiateAuth_userContextData :: Lens' InitiateAuth (Maybe UserContextDataType)

-- | The authentication parameters. These are inputs corresponding to the
--   <tt>AuthFlow</tt> that you are invoking. The required values depend on
--   the value of <tt>AuthFlow</tt>:
--   
--   <ul>
--   <li>For <tt>USER_SRP_AUTH</tt>: <tt>USERNAME</tt> (required),
--   <tt>SRP_A</tt> (required), <tt>SECRET_HASH</tt> (required if the app
--   client is configured with a client secret), <tt>DEVICE_KEY</tt>.</li>
--   <li>For <tt>REFRESH_TOKEN_AUTH/REFRESH_TOKEN</tt>:
--   <tt>REFRESH_TOKEN</tt> (required), <tt>SECRET_HASH</tt> (required if
--   the app client is configured with a client secret),
--   <tt>DEVICE_KEY</tt>.</li>
--   <li>For <tt>CUSTOM_AUTH</tt>: <tt>USERNAME</tt> (required),
--   <tt>SECRET_HASH</tt> (if app client is configured with client secret),
--   <tt>DEVICE_KEY</tt>. To start the authentication flow with password
--   verification, include <tt>ChallengeName: SRP_A</tt> and <tt>SRP_A:
--   (The SRP_A Value)</tt>.</li>
--   </ul>
initiateAuth_authParameters :: Lens' InitiateAuth (Maybe (HashMap Text Text))

-- | The authentication flow for this call to execute. The API action will
--   depend on this value. For example:
--   
--   <ul>
--   <li><tt>REFRESH_TOKEN_AUTH</tt> will take in a valid refresh token and
--   return new tokens.</li>
--   <li><tt>USER_SRP_AUTH</tt> will take in <tt>USERNAME</tt> and
--   <tt>SRP_A</tt> and return the SRP variables to be used for next
--   challenge execution.</li>
--   <li><tt>USER_PASSWORD_AUTH</tt> will take in <tt>USERNAME</tt> and
--   <tt>PASSWORD</tt> and return the next challenge or tokens.</li>
--   </ul>
--   
--   Valid values include:
--   
--   <ul>
--   <li><tt>USER_SRP_AUTH</tt>: Authentication flow for the Secure Remote
--   Password (SRP) protocol.</li>
--   <li><tt>REFRESH_TOKEN_AUTH</tt>/<tt>REFRESH_TOKEN</tt>: Authentication
--   flow for refreshing the access token and ID token by supplying a valid
--   refresh token.</li>
--   <li><tt>CUSTOM_AUTH</tt>: Custom authentication flow.</li>
--   <li><tt>USER_PASSWORD_AUTH</tt>: Non-SRP authentication flow; USERNAME
--   and PASSWORD are passed directly. If a user migration Lambda trigger
--   is set, this flow will invoke the user migration Lambda if the
--   USERNAME is not found in the user pool.</li>
--   <li><tt>ADMIN_USER_PASSWORD_AUTH</tt>: Admin-based user password
--   authentication. This replaces the <tt>ADMIN_NO_SRP_AUTH</tt>
--   authentication flow. In this flow, Cognito receives the password in
--   the request instead of using the SRP process to verify passwords.</li>
--   </ul>
--   
--   <tt>ADMIN_NO_SRP_AUTH</tt> is not a valid value.
initiateAuth_authFlow :: Lens' InitiateAuth AuthFlowType

-- | The app client ID.
initiateAuth_clientId :: Lens' InitiateAuth Text

-- | The name of the challenge which you are responding to with this call.
--   This is returned to you in the <tt>AdminInitiateAuth</tt> response if
--   you need to pass another challenge.
--   
--   Valid values include the following. Note that all of these challenges
--   require <tt>USERNAME</tt> and <tt>SECRET_HASH</tt> (if applicable) in
--   the parameters.
--   
--   <ul>
--   <li><tt>SMS_MFA</tt>: Next challenge is to supply an
--   <tt>SMS_MFA_CODE</tt>, delivered via SMS.</li>
--   <li><tt>PASSWORD_VERIFIER</tt>: Next challenge is to supply
--   <tt>PASSWORD_CLAIM_SIGNATURE</tt>,
--   <tt>PASSWORD_CLAIM_SECRET_BLOCK</tt>, and <tt>TIMESTAMP</tt> after the
--   client-side SRP calculations.</li>
--   <li><tt>CUSTOM_CHALLENGE</tt>: This is returned if your custom
--   authentication flow determines that the user should pass another
--   challenge before tokens are issued.</li>
--   <li><tt>DEVICE_SRP_AUTH</tt>: If device tracking was enabled on your
--   user pool and the previous challenges were passed, this challenge is
--   returned so that Amazon Cognito can start tracking this device.</li>
--   <li><tt>DEVICE_PASSWORD_VERIFIER</tt>: Similar to
--   <tt>PASSWORD_VERIFIER</tt>, but for devices only.</li>
--   <li><tt>NEW_PASSWORD_REQUIRED</tt>: For users who are required to
--   change their passwords after successful first login. This challenge
--   should be passed with <tt>NEW_PASSWORD</tt> and any other required
--   attributes.</li>
--   <li><tt>MFA_SETUP</tt>: For users who are required to setup an MFA
--   factor before they can sign-in. The MFA types enabled for the user
--   pool will be listed in the challenge parameters <tt>MFA_CAN_SETUP</tt>
--   value.To setup software token MFA, use the session returned here from
--   <tt>InitiateAuth</tt> as an input to <tt>AssociateSoftwareToken</tt>,
--   and use the session returned by <tt>VerifySoftwareToken</tt> as an
--   input to <tt>RespondToAuthChallenge</tt> with challenge name
--   <tt>MFA_SETUP</tt> to complete sign-in. To setup SMS MFA, users will
--   need help from an administrator to add a phone number to their account
--   and then call <tt>InitiateAuth</tt> again to restart sign-in.</li>
--   </ul>
initiateAuthResponse_challengeName :: Lens' InitiateAuthResponse (Maybe ChallengeNameType)

-- | The challenge parameters. These are returned to you in the
--   <tt>InitiateAuth</tt> response if you need to pass another challenge.
--   The responses in this parameter should be used to compute inputs to
--   the next call (<tt>RespondToAuthChallenge</tt>).
--   
--   All challenges require <tt>USERNAME</tt> and <tt>SECRET_HASH</tt> (if
--   applicable).
initiateAuthResponse_challengeParameters :: Lens' InitiateAuthResponse (Maybe (HashMap Text Text))

-- | The result of the authentication response. This is only returned if
--   the caller does not need to pass another challenge. If the caller does
--   need to pass another challenge before it gets tokens,
--   <tt>ChallengeName</tt>, <tt>ChallengeParameters</tt>, and
--   <tt>Session</tt> are returned.
initiateAuthResponse_authenticationResult :: Lens' InitiateAuthResponse (Maybe AuthenticationResultType)

-- | The session which should be passed both ways in challenge-response
--   calls to the service. If the caller needs to go through another
--   challenge, they return a session with other challenge parameters. This
--   session should be passed as it is to the next
--   <tt>RespondToAuthChallenge</tt> API call.
initiateAuthResponse_session :: Lens' InitiateAuthResponse (Maybe Text)

-- | The response's http status code.
initiateAuthResponse_httpStatus :: Lens' InitiateAuthResponse Int

-- | An identifier that was returned from the previous call to this
--   operation, which can be used to return the next set of items in the
--   list.
adminListGroupsForUser_nextToken :: Lens' AdminListGroupsForUser (Maybe Text)

-- | The limit of the request to list groups.
adminListGroupsForUser_limit :: Lens' AdminListGroupsForUser (Maybe Natural)

-- | The username for the user.
adminListGroupsForUser_username :: Lens' AdminListGroupsForUser Text

-- | The user pool ID for the user pool.
adminListGroupsForUser_userPoolId :: Lens' AdminListGroupsForUser Text

-- | The groups that the user belongs to.
adminListGroupsForUserResponse_groups :: Lens' AdminListGroupsForUserResponse (Maybe [GroupType])

-- | An identifier that was returned from the previous call to this
--   operation, which can be used to return the next set of items in the
--   list.
adminListGroupsForUserResponse_nextToken :: Lens' AdminListGroupsForUserResponse (Maybe Text)

-- | The response's http status code.
adminListGroupsForUserResponse_httpStatus :: Lens' AdminListGroupsForUserResponse Int

-- | A map of custom key-value pairs that you can provide as input for any
--   custom workflows that this action triggers.
--   
--   If your user pool configuration includes triggers, the
--   AdminConfirmSignUp API action invokes the Lambda function that is
--   specified for the <i>post confirmation</i> trigger. When Amazon
--   Cognito invokes this function, it passes a JSON payload, which the
--   function receives as input. In this payload, the
--   <tt>clientMetadata</tt> attribute provides the data that you assigned
--   to the ClientMetadata parameter in your AdminConfirmSignUp request. In
--   your function code in Lambda, you can process the ClientMetadata value
--   to enhance your workflow for your specific needs.
--   
--   For more information, see <a>Customizing User Pool Workflows with
--   Lambda Triggers</a> in the <i>Amazon Cognito Developer Guide</i>.
--   
--   Take the following limitations into consideration when you use the
--   ClientMetadata parameter:
--   
--   <ul>
--   <li>Amazon Cognito does not store the ClientMetadata value. This data
--   is available only to Lambda triggers that are assigned to a user pool
--   to support custom workflows. If your user pool configuration does not
--   include triggers, the ClientMetadata parameter serves no purpose.</li>
--   <li>Amazon Cognito does not validate the ClientMetadata value.</li>
--   <li>Amazon Cognito does not encrypt the the ClientMetadata value, so
--   don't use it to provide sensitive information.</li>
--   </ul>
adminConfirmSignUp_clientMetadata :: Lens' AdminConfirmSignUp (Maybe (HashMap Text Text))

-- | The user pool ID for which you want to confirm user registration.
adminConfirmSignUp_userPoolId :: Lens' AdminConfirmSignUp Text

-- | The user name for which you want to confirm user registration.
adminConfirmSignUp_username :: Lens' AdminConfirmSignUp Text

-- | The response's http status code.
adminConfirmSignUpResponse_httpStatus :: Lens' AdminConfirmSignUpResponse Int

-- | The user pool ID.
adminUpdateAuthEventFeedback_userPoolId :: Lens' AdminUpdateAuthEventFeedback Text

-- | The user pool username.
adminUpdateAuthEventFeedback_username :: Lens' AdminUpdateAuthEventFeedback Text

-- | The authentication event ID.
adminUpdateAuthEventFeedback_eventId :: Lens' AdminUpdateAuthEventFeedback Text

-- | The authentication event feedback value.
adminUpdateAuthEventFeedback_feedbackValue :: Lens' AdminUpdateAuthEventFeedback FeedbackValueType

-- | The response's http status code.
adminUpdateAuthEventFeedbackResponse_httpStatus :: Lens' AdminUpdateAuthEventFeedbackResponse Int

-- | <tt>True</tt> if the password is permanent, <tt>False</tt> if it is
--   temporary.
adminSetUserPassword_permanent :: Lens' AdminSetUserPassword (Maybe Bool)

-- | The user pool ID for the user pool where you want to set the user's
--   password.
adminSetUserPassword_userPoolId :: Lens' AdminSetUserPassword Text

-- | The user name of the user whose password you wish to set.
adminSetUserPassword_username :: Lens' AdminSetUserPassword Text

-- | The password for the user.
adminSetUserPassword_password :: Lens' AdminSetUserPassword Text

-- | The response's http status code.
adminSetUserPasswordResponse_httpStatus :: Lens' AdminSetUserPasswordResponse Int

-- | The user pool ID for the user pool that the users are being imported
--   into.
startUserImportJob_userPoolId :: Lens' StartUserImportJob Text

-- | The job ID for the user import job.
startUserImportJob_jobId :: Lens' StartUserImportJob Text

-- | The job object that represents the user import job.
startUserImportJobResponse_userImportJob :: Lens' StartUserImportJobResponse (Maybe UserImportJobType)

-- | The response's http status code.
startUserImportJobResponse_httpStatus :: Lens' StartUserImportJobResponse Int

-- | A list of identity provider identifiers.
createIdentityProvider_idpIdentifiers :: Lens' CreateIdentityProvider (Maybe [Text])

-- | A mapping of identity provider attributes to standard and custom user
--   pool attributes.
createIdentityProvider_attributeMapping :: Lens' CreateIdentityProvider (Maybe (HashMap Text Text))

-- | The user pool ID.
createIdentityProvider_userPoolId :: Lens' CreateIdentityProvider Text

-- | The identity provider name.
createIdentityProvider_providerName :: Lens' CreateIdentityProvider Text

-- | The identity provider type.
createIdentityProvider_providerType :: Lens' CreateIdentityProvider IdentityProviderTypeType

-- | The identity provider details. The following list describes the
--   provider detail keys for each identity provider type.
--   
--   <ul>
--   <li>For Google and Login with
--   Amazon:<ul><li>client_id</li><li>client_secret</li><li>authorize_scopes</li></ul></li>
--   <li>For
--   Facebook:<ul><li>client_id</li><li>client_secret</li><li>authorize_scopes</li><li>api_version</li></ul></li>
--   <li>For Sign in with
--   Apple:<ul><li>client_id</li><li>team_id</li><li>key_id</li><li>private_key</li><li>authorize_scopes</li></ul></li>
--   <li>For OIDC
--   providers:<ul><li>client_id</li><li>client_secret</li><li>attributes_request_method</li><li>oidc_issuer</li><li>authorize_scopes</li><li>authorize_url
--   /if not available from discovery URL specified by oidc_issuer
--   key/</li><li>token_url /if not available from discovery URL specified
--   by oidc_issuer key/</li><li>attributes_url /if not available from
--   discovery URL specified by oidc_issuer key/</li><li>jwks_uri /if not
--   available from discovery URL specified by oidc_issuer
--   key/</li></ul></li>
--   <li>For SAML providers:<ul><li>MetadataFile OR
--   MetadataURL</li><li>IDPSignout <i>optional</i></li></ul></li>
--   </ul>
createIdentityProvider_providerDetails :: Lens' CreateIdentityProvider (HashMap Text Text)

-- | The response's http status code.
createIdentityProviderResponse_httpStatus :: Lens' CreateIdentityProviderResponse Int

-- | The newly created identity provider object.
createIdentityProviderResponse_identityProvider :: Lens' CreateIdentityProviderResponse IdentityProviderType

-- | The client ID for the client app.
setUICustomization_clientId :: Lens' SetUICustomization (Maybe Text)

-- | The CSS values in the UI customization.
setUICustomization_css :: Lens' SetUICustomization (Maybe Text)

-- | The uploaded logo image for the UI customization.-- -- <i>Note:</i>
--   This <tt>Lens</tt> automatically encodes and decodes Base64 data. --
--   The underlying isomorphism will encode to Base64 representation during
--   -- serialisation, and decode from Base64 representation during
--   deserialisation. -- This <tt>Lens</tt> accepts and returns only raw
--   unencoded data.
setUICustomization_imageFile :: Lens' SetUICustomization (Maybe ByteString)

-- | The user pool ID for the user pool.
setUICustomization_userPoolId :: Lens' SetUICustomization Text

-- | The response's http status code.
setUICustomizationResponse_httpStatus :: Lens' SetUICustomizationResponse Int

-- | The UI customization information.
setUICustomizationResponse_uICustomization :: Lens' SetUICustomizationResponse UICustomizationType

-- | A pagination token.
listIdentityProviders_nextToken :: Lens' ListIdentityProviders (Maybe Text)

-- | The maximum number of identity providers to return.
listIdentityProviders_maxResults :: Lens' ListIdentityProviders (Maybe Natural)

-- | The user pool ID.
listIdentityProviders_userPoolId :: Lens' ListIdentityProviders Text

-- | A pagination token.
listIdentityProvidersResponse_nextToken :: Lens' ListIdentityProvidersResponse (Maybe Text)

-- | The response's http status code.
listIdentityProvidersResponse_httpStatus :: Lens' ListIdentityProvidersResponse Int

-- | A list of identity provider objects.
listIdentityProvidersResponse_providers :: Lens' ListIdentityProvidersResponse [ProviderDescription]

-- | The access token.
getDevice_accessToken :: Lens' GetDevice (Maybe Text)

-- | The device key.
getDevice_deviceKey :: Lens' GetDevice Text

-- | The response's http status code.
getDeviceResponse_httpStatus :: Lens' GetDeviceResponse Int

-- | The device.
getDeviceResponse_device :: Lens' GetDeviceResponse DeviceType

-- | A map of custom key-value pairs that you can provide as input for any
--   custom workflows that this action triggers.
--   
--   You create custom workflows by assigning Lambda functions to user pool
--   triggers. When you use the SignUp API action, Amazon Cognito invokes
--   any functions that are assigned to the following triggers: <i>pre
--   sign-up</i>, <i>custom message</i>, and <i>post confirmation</i>. When
--   Amazon Cognito invokes any of these functions, it passes a JSON
--   payload, which the function receives as input. This payload contains a
--   <tt>clientMetadata</tt> attribute, which provides the data that you
--   assigned to the ClientMetadata parameter in your SignUp request. In
--   your function code in Lambda, you can process the
--   <tt>clientMetadata</tt> value to enhance your workflow for your
--   specific needs.
--   
--   For more information, see <a>Customizing User Pool Workflows with
--   Lambda Triggers</a> in the <i>Amazon Cognito Developer Guide</i>.
--   
--   Take the following limitations into consideration when you use the
--   ClientMetadata parameter:
--   
--   <ul>
--   <li>Amazon Cognito does not store the ClientMetadata value. This data
--   is available only to Lambda triggers that are assigned to a user pool
--   to support custom workflows. If your user pool configuration does not
--   include triggers, the ClientMetadata parameter serves no purpose.</li>
--   <li>Amazon Cognito does not validate the ClientMetadata value.</li>
--   <li>Amazon Cognito does not encrypt the the ClientMetadata value, so
--   don't use it to provide sensitive information.</li>
--   </ul>
signUp_clientMetadata :: Lens' SignUp (Maybe (HashMap Text Text))

-- | The Amazon Pinpoint analytics metadata for collecting metrics for
--   <tt>SignUp</tt> calls.
signUp_analyticsMetadata :: Lens' SignUp (Maybe AnalyticsMetadataType)

-- | Contextual data such as the user's device fingerprint, IP address, or
--   location used for evaluating the risk of an unexpected event by Amazon
--   Cognito advanced security.
signUp_userContextData :: Lens' SignUp (Maybe UserContextDataType)

-- | An array of name-value pairs representing user attributes.
--   
--   For custom attributes, you must prepend the <tt>custom:</tt> prefix to
--   the attribute name.
signUp_userAttributes :: Lens' SignUp (Maybe [AttributeType])

-- | A keyed-hash message authentication code (HMAC) calculated using the
--   secret key of a user pool client and username plus the client ID in
--   the message.
signUp_secretHash :: Lens' SignUp (Maybe Text)

-- | The validation data in the request to register a user.
signUp_validationData :: Lens' SignUp (Maybe [AttributeType])

-- | The ID of the client associated with the user pool.
signUp_clientId :: Lens' SignUp Text

-- | The user name of the user you wish to register.
signUp_username :: Lens' SignUp Text

-- | The password of the user you wish to register.
signUp_password :: Lens' SignUp Text

-- | The code delivery details returned by the server response to the user
--   registration request.
signUpResponse_codeDeliveryDetails :: Lens' SignUpResponse (Maybe CodeDeliveryDetailsType)

-- | The response's http status code.
signUpResponse_httpStatus :: Lens' SignUpResponse Int

-- | A response from the server indicating that a user registration has
--   been confirmed.
signUpResponse_userConfirmed :: Lens' SignUpResponse Bool

-- | The UUID of the authenticated user. This is not the same as
--   <tt>username</tt>.
signUpResponse_userSub :: Lens' SignUpResponse Text

-- | The user pool ID for the user pool that hosts the resource server.
deleteResourceServer_userPoolId :: Lens' DeleteResourceServer Text

-- | The identifier for the resource server.
deleteResourceServer_identifier :: Lens' DeleteResourceServer Text

-- | The scope values to be set for the resource server.
updateResourceServer_scopes :: Lens' UpdateResourceServer (Maybe [ResourceServerScopeType])

-- | The user pool ID for the user pool.
updateResourceServer_userPoolId :: Lens' UpdateResourceServer Text

-- | The identifier for the resource server.
updateResourceServer_identifier :: Lens' UpdateResourceServer Text

-- | The name of the resource server.
updateResourceServer_name :: Lens' UpdateResourceServer Text

-- | The response's http status code.
updateResourceServerResponse_httpStatus :: Lens' UpdateResourceServerResponse Int

-- | The resource server.
updateResourceServerResponse_resourceServer :: Lens' UpdateResourceServerResponse ResourceServerType

-- | The old password.
changePassword_previousPassword :: Lens' ChangePassword Text

-- | The new password.
changePassword_proposedPassword :: Lens' ChangePassword Text

-- | The access token.
changePassword_accessToken :: Lens' ChangePassword Text

-- | The response's http status code.
changePasswordResponse_httpStatus :: Lens' ChangePasswordResponse Int

-- | The configuration for a custom domain that hosts the sign-up and
--   sign-in webpages for your application.
--   
--   Provide this parameter only if you want to use a custom domain for
--   your user pool. Otherwise, you can exclude this parameter and use the
--   Amazon Cognito hosted domain instead.
--   
--   For more information about the hosted domain and custom domains, see
--   <a>Configuring a User Pool Domain</a>.
createUserPoolDomain_customDomainConfig :: Lens' CreateUserPoolDomain (Maybe CustomDomainConfigType)

-- | The domain string.
createUserPoolDomain_domain :: Lens' CreateUserPoolDomain Text

-- | The user pool ID.
createUserPoolDomain_userPoolId :: Lens' CreateUserPoolDomain Text

-- | The Amazon CloudFront endpoint that you use as the target of the alias
--   that you set up with your Domain Name Service (DNS) provider.
createUserPoolDomainResponse_cloudFrontDomain :: Lens' CreateUserPoolDomainResponse (Maybe Text)

-- | The response's http status code.
createUserPoolDomainResponse_httpStatus :: Lens' CreateUserPoolDomainResponse Int

-- | A map of custom key-value pairs that you can provide as input for any
--   custom workflows that this action triggers.
--   
--   You create custom workflows by assigning Lambda functions to user pool
--   triggers. When you use the RespondToAuthChallenge API action, Amazon
--   Cognito invokes any functions that are assigned to the following
--   triggers: <i>post authentication</i>, <i>pre token generation</i>,
--   /define auth challenge<i>, </i>create auth challenge<i>, and
--   </i>verify auth challenge/. When Amazon Cognito invokes any of these
--   functions, it passes a JSON payload, which the function receives as
--   input. This payload contains a <tt>clientMetadata</tt> attribute,
--   which provides the data that you assigned to the ClientMetadata
--   parameter in your RespondToAuthChallenge request. In your function
--   code in Lambda, you can process the <tt>clientMetadata</tt> value to
--   enhance your workflow for your specific needs.
--   
--   For more information, see <a>Customizing User Pool Workflows with
--   Lambda Triggers</a> in the <i>Amazon Cognito Developer Guide</i>.
--   
--   Take the following limitations into consideration when you use the
--   ClientMetadata parameter:
--   
--   <ul>
--   <li>Amazon Cognito does not store the ClientMetadata value. This data
--   is available only to Lambda triggers that are assigned to a user pool
--   to support custom workflows. If your user pool configuration does not
--   include triggers, the ClientMetadata parameter serves no purpose.</li>
--   <li>Amazon Cognito does not validate the ClientMetadata value.</li>
--   <li>Amazon Cognito does not encrypt the the ClientMetadata value, so
--   don't use it to provide sensitive information.</li>
--   </ul>
respondToAuthChallenge_clientMetadata :: Lens' RespondToAuthChallenge (Maybe (HashMap Text Text))

-- | The Amazon Pinpoint analytics metadata for collecting metrics for
--   <tt>RespondToAuthChallenge</tt> calls.
respondToAuthChallenge_analyticsMetadata :: Lens' RespondToAuthChallenge (Maybe AnalyticsMetadataType)

-- | The challenge responses. These are inputs corresponding to the value
--   of <tt>ChallengeName</tt>, for example:
--   
--   <tt>SECRET_HASH</tt> (if app client is configured with client secret)
--   applies to all inputs below (including <tt>SOFTWARE_TOKEN_MFA</tt>).
--   
--   <ul>
--   <li><tt>SMS_MFA</tt>: <tt>SMS_MFA_CODE</tt>, <tt>USERNAME</tt>.</li>
--   <li><tt>PASSWORD_VERIFIER</tt>: <tt>PASSWORD_CLAIM_SIGNATURE</tt>,
--   <tt>PASSWORD_CLAIM_SECRET_BLOCK</tt>, <tt>TIMESTAMP</tt>,
--   <tt>USERNAME</tt>.</li>
--   <li><tt>NEW_PASSWORD_REQUIRED</tt>: <tt>NEW_PASSWORD</tt>, any other
--   required attributes, <tt>USERNAME</tt>.</li>
--   <li><tt>SOFTWARE_TOKEN_MFA</tt>: <tt>USERNAME</tt> and
--   <tt>SOFTWARE_TOKEN_MFA_CODE</tt> are required attributes.</li>
--   <li><tt>DEVICE_SRP_AUTH</tt> requires <tt>USERNAME</tt>,
--   <tt>DEVICE_KEY</tt>, <tt>SRP_A</tt> (and <tt>SECRET_HASH</tt>).</li>
--   <li><tt>DEVICE_PASSWORD_VERIFIER</tt> requires everything that
--   <tt>PASSWORD_VERIFIER</tt> requires plus <tt>DEVICE_KEY</tt>.</li>
--   <li><tt>MFA_SETUP</tt> requires <tt>USERNAME</tt>, plus you need to
--   use the session value returned by <tt>VerifySoftwareToken</tt> in the
--   <tt>Session</tt> parameter.</li>
--   </ul>
respondToAuthChallenge_challengeResponses :: Lens' RespondToAuthChallenge (Maybe (HashMap Text Text))

-- | Contextual data such as the user's device fingerprint, IP address, or
--   location used for evaluating the risk of an unexpected event by Amazon
--   Cognito advanced security.
respondToAuthChallenge_userContextData :: Lens' RespondToAuthChallenge (Maybe UserContextDataType)

-- | The session which should be passed both ways in challenge-response
--   calls to the service. If <tt>InitiateAuth</tt> or
--   <tt>RespondToAuthChallenge</tt> API call determines that the caller
--   needs to go through another challenge, they return a session with
--   other challenge parameters. This session should be passed as it is to
--   the next <tt>RespondToAuthChallenge</tt> API call.
respondToAuthChallenge_session :: Lens' RespondToAuthChallenge (Maybe Text)

-- | The app client ID.
respondToAuthChallenge_clientId :: Lens' RespondToAuthChallenge Text

-- | The challenge name. For more information, see <a>InitiateAuth</a>.
--   
--   <tt>ADMIN_NO_SRP_AUTH</tt> is not a valid value.
respondToAuthChallenge_challengeName :: Lens' RespondToAuthChallenge ChallengeNameType

-- | The challenge name. For more information, see <a>InitiateAuth</a>.
respondToAuthChallengeResponse_challengeName :: Lens' RespondToAuthChallengeResponse (Maybe ChallengeNameType)

-- | The challenge parameters. For more information, see
--   <a>InitiateAuth</a>.
respondToAuthChallengeResponse_challengeParameters :: Lens' RespondToAuthChallengeResponse (Maybe (HashMap Text Text))

-- | The result returned by the server in response to the request to
--   respond to the authentication challenge.
respondToAuthChallengeResponse_authenticationResult :: Lens' RespondToAuthChallengeResponse (Maybe AuthenticationResultType)

-- | The session which should be passed both ways in challenge-response
--   calls to the service. If the caller needs to go through another
--   challenge, they return a session with other challenge parameters. This
--   session should be passed as it is to the next
--   <tt>RespondToAuthChallenge</tt> API call.
respondToAuthChallengeResponse_session :: Lens' RespondToAuthChallengeResponse (Maybe Text)

-- | The response's http status code.
respondToAuthChallengeResponse_httpStatus :: Lens' RespondToAuthChallengeResponse Int

-- | The tag keys and values to assign to the user pool. A tag is a label
--   that you can use to categorize and manage user pools in different
--   ways, such as by purpose, owner, environment, or other criteria.
createUserPool_userPoolTags :: Lens' CreateUserPool (Maybe (HashMap Text Text))

-- | The template for the verification message that the user sees when the
--   app requests permission to access the user's information.
createUserPool_verificationMessageTemplate :: Lens' CreateUserPool (Maybe VerificationMessageTemplateType)

-- | A string representing the email verification message.
--   EmailVerificationMessage is allowed only if <a>EmailSendingAccount</a>
--   is DEVELOPER.
createUserPool_emailVerificationMessage :: Lens' CreateUserPool (Maybe Text)

-- | A string representing the SMS authentication message.
createUserPool_smsAuthenticationMessage :: Lens' CreateUserPool (Maybe Text)

-- | Used to enable advanced security risk detection. Set the key
--   <tt>AdvancedSecurityMode</tt> to the value "AUDIT".
createUserPool_userPoolAddOns :: Lens' CreateUserPool (Maybe UserPoolAddOnsType)

-- | A string representing the email verification subject.
--   EmailVerificationSubject is allowed only if <a>EmailSendingAccount</a>
--   is DEVELOPER.
createUserPool_emailVerificationSubject :: Lens' CreateUserPool (Maybe Text)

-- | Specifies whether email addresses or phone numbers can be specified as
--   usernames when a user signs up.
createUserPool_usernameAttributes :: Lens' CreateUserPool (Maybe [UsernameAttributeType])

-- | Attributes supported as an alias for this user pool. Possible values:
--   <b>phone_number</b>, <b>email</b>, or <b>preferred_username</b>.
createUserPool_aliasAttributes :: Lens' CreateUserPool (Maybe [AliasAttributeType])

-- | An array of schema attributes for the new user pool. These attributes
--   can be standard or custom attributes.
createUserPool_schema :: Lens' CreateUserPool (Maybe (NonEmpty SchemaAttributeType))

-- | Use this setting to define which verified available method a user can
--   use to recover their password when they call <tt>ForgotPassword</tt>.
--   It allows you to define a preferred method when a user has more than
--   one method available. With this setting, SMS does not qualify for a
--   valid password recovery mechanism if the user also has SMS MFA
--   enabled. In the absence of this setting, Cognito uses the legacy
--   behavior to determine the recovery method where SMS is preferred over
--   email.
createUserPool_accountRecoverySetting :: Lens' CreateUserPool (Maybe AccountRecoverySettingType)

-- | The email configuration.
createUserPool_emailConfiguration :: Lens' CreateUserPool (Maybe EmailConfigurationType)

-- | A string representing the SMS verification message.
createUserPool_smsVerificationMessage :: Lens' CreateUserPool (Maybe Text)

-- | Specifies MFA configuration details.
createUserPool_mfaConfiguration :: Lens' CreateUserPool (Maybe UserPoolMfaType)

-- | The Lambda trigger configuration information for the new user pool.
--   
--   In a push model, event sources (such as Amazon S3 and custom
--   applications) need permission to invoke a function. So you will need
--   to make an extra call to add permission for these event sources to
--   invoke your Lambda function.
--   
--   For more information on using the Lambda API to add permission, see
--   <a>AddPermission</a> .
--   
--   For adding permission using the CLI, see <a>add-permission</a> .
createUserPool_lambdaConfig :: Lens' CreateUserPool (Maybe LambdaConfigType)

-- | The SMS configuration.
createUserPool_smsConfiguration :: Lens' CreateUserPool (Maybe SmsConfigurationType)

-- | The configuration for <tt>AdminCreateUser</tt> requests.
createUserPool_adminCreateUserConfig :: Lens' CreateUserPool (Maybe AdminCreateUserConfigType)

-- | The device configuration.
createUserPool_deviceConfiguration :: Lens' CreateUserPool (Maybe DeviceConfigurationType)

-- | The attributes to be auto-verified. Possible values: <b>email</b>,
--   <b>phone_number</b>.
createUserPool_autoVerifiedAttributes :: Lens' CreateUserPool (Maybe [VerifiedAttributeType])

-- | The policies associated with the new user pool.
createUserPool_policies :: Lens' CreateUserPool (Maybe UserPoolPolicyType)

-- | You can choose to set case sensitivity on the username input for the
--   selected sign-in option. For example, when this is set to
--   <tt>False</tt>, users will be able to sign in using either "username"
--   or "Username". This configuration is immutable once it has been set.
--   For more information, see <a>UsernameConfigurationType</a>.
createUserPool_usernameConfiguration :: Lens' CreateUserPool (Maybe UsernameConfigurationType)

-- | A string used to name the user pool.
createUserPool_poolName :: Lens' CreateUserPool Text

-- | A container for the user pool details.
createUserPoolResponse_userPool :: Lens' CreateUserPoolResponse (Maybe UserPoolType)

-- | The response's http status code.
createUserPoolResponse_httpStatus :: Lens' CreateUserPoolResponse Int

-- | The device key.
adminGetDevice_deviceKey :: Lens' AdminGetDevice Text

-- | The user pool ID.
adminGetDevice_userPoolId :: Lens' AdminGetDevice Text

-- | The user name.
adminGetDevice_username :: Lens' AdminGetDevice Text

-- | The response's http status code.
adminGetDeviceResponse_httpStatus :: Lens' AdminGetDeviceResponse Int

-- | The device.
adminGetDeviceResponse_device :: Lens' AdminGetDeviceResponse DeviceType

-- | The user pool ID.
getIdentityProviderByIdentifier_userPoolId :: Lens' GetIdentityProviderByIdentifier Text

-- | The identity provider ID.
getIdentityProviderByIdentifier_idpIdentifier :: Lens' GetIdentityProviderByIdentifier Text

-- | The response's http status code.
getIdentityProviderByIdentifierResponse_httpStatus :: Lens' GetIdentityProviderByIdentifierResponse Int

-- | The identity provider object.
getIdentityProviderByIdentifierResponse_identityProvider :: Lens' GetIdentityProviderByIdentifierResponse IdentityProviderType

-- | The user pool ID for the user pool.
adminRemoveUserFromGroup_userPoolId :: Lens' AdminRemoveUserFromGroup Text

-- | The username for the user.
adminRemoveUserFromGroup_username :: Lens' AdminRemoveUserFromGroup Text

-- | The group name.
adminRemoveUserFromGroup_groupName :: Lens' AdminRemoveUserFromGroup Text

-- | The configuration to override the risk decision.
setRiskConfiguration_riskExceptionConfiguration :: Lens' SetRiskConfiguration (Maybe RiskExceptionConfigurationType)

-- | The app client ID. If <tt>ClientId</tt> is null, then the risk
--   configuration is mapped to <tt>userPoolId</tt>. When the client ID is
--   null, the same risk configuration is applied to all the clients in the
--   userPool.
--   
--   Otherwise, <tt>ClientId</tt> is mapped to the client. When the client
--   ID is not null, the user pool configuration is overridden and the risk
--   configuration for the client is used instead.
setRiskConfiguration_clientId :: Lens' SetRiskConfiguration (Maybe Text)

-- | The account takeover risk configuration.
setRiskConfiguration_accountTakeoverRiskConfiguration :: Lens' SetRiskConfiguration (Maybe AccountTakeoverRiskConfigurationType)

-- | The compromised credentials risk configuration.
setRiskConfiguration_compromisedCredentialsRiskConfiguration :: Lens' SetRiskConfiguration (Maybe CompromisedCredentialsRiskConfigurationType)

-- | The user pool ID.
setRiskConfiguration_userPoolId :: Lens' SetRiskConfiguration Text

-- | The response's http status code.
setRiskConfigurationResponse_httpStatus :: Lens' SetRiskConfigurationResponse Int

-- | The risk configuration.
setRiskConfigurationResponse_riskConfiguration :: Lens' SetRiskConfigurationResponse RiskConfigurationType

-- | A map of custom key-value pairs that you can provide as input for any
--   custom workflows that this action triggers.
--   
--   You create custom workflows by assigning Lambda functions to user pool
--   triggers. When you use the ConfirmSignUp API action, Amazon Cognito
--   invokes the function that is assigned to the <i>post confirmation</i>
--   trigger. When Amazon Cognito invokes this function, it passes a JSON
--   payload, which the function receives as input. This payload contains a
--   <tt>clientMetadata</tt> attribute, which provides the data that you
--   assigned to the ClientMetadata parameter in your ConfirmSignUp
--   request. In your function code in Lambda, you can process the
--   <tt>clientMetadata</tt> value to enhance your workflow for your
--   specific needs.
--   
--   For more information, see <a>Customizing User Pool Workflows with
--   Lambda Triggers</a> in the <i>Amazon Cognito Developer Guide</i>.
--   
--   Take the following limitations into consideration when you use the
--   ClientMetadata parameter:
--   
--   <ul>
--   <li>Amazon Cognito does not store the ClientMetadata value. This data
--   is available only to Lambda triggers that are assigned to a user pool
--   to support custom workflows. If your user pool configuration does not
--   include triggers, the ClientMetadata parameter serves no purpose.</li>
--   <li>Amazon Cognito does not validate the ClientMetadata value.</li>
--   <li>Amazon Cognito does not encrypt the the ClientMetadata value, so
--   don't use it to provide sensitive information.</li>
--   </ul>
confirmSignUp_clientMetadata :: Lens' ConfirmSignUp (Maybe (HashMap Text Text))

-- | Boolean to be specified to force user confirmation irrespective of
--   existing alias. By default set to <tt>False</tt>. If this parameter is
--   set to <tt>True</tt> and the phone number/email used for sign up
--   confirmation already exists as an alias with a different user, the API
--   call will migrate the alias from the previous user to the newly
--   created user being confirmed. If set to <tt>False</tt>, the API will
--   throw an <b>AliasExistsException</b> error.
confirmSignUp_forceAliasCreation :: Lens' ConfirmSignUp (Maybe Bool)

-- | The Amazon Pinpoint analytics metadata for collecting metrics for
--   <tt>ConfirmSignUp</tt> calls.
confirmSignUp_analyticsMetadata :: Lens' ConfirmSignUp (Maybe AnalyticsMetadataType)

-- | Contextual data such as the user's device fingerprint, IP address, or
--   location used for evaluating the risk of an unexpected event by Amazon
--   Cognito advanced security.
confirmSignUp_userContextData :: Lens' ConfirmSignUp (Maybe UserContextDataType)

-- | A keyed-hash message authentication code (HMAC) calculated using the
--   secret key of a user pool client and username plus the client ID in
--   the message.
confirmSignUp_secretHash :: Lens' ConfirmSignUp (Maybe Text)

-- | The ID of the app client associated with the user pool.
confirmSignUp_clientId :: Lens' ConfirmSignUp Text

-- | The user name of the user whose registration you wish to confirm.
confirmSignUp_username :: Lens' ConfirmSignUp Text

-- | The confirmation code sent by a user's request to confirm
--   registration.
confirmSignUp_confirmationCode :: Lens' ConfirmSignUp Text

-- | The response's http status code.
confirmSignUpResponse_httpStatus :: Lens' ConfirmSignUpResponse Int

-- | An identifier that was returned from the previous call to this
--   operation, which can be used to return the next set of items in the
--   list.
listUserPools_nextToken :: Lens' ListUserPools (Maybe Text)

-- | The maximum number of results you want the request to return when
--   listing the user pools.
listUserPools_maxResults :: Lens' ListUserPools Natural

-- | The user pools from the response to list users.
listUserPoolsResponse_userPools :: Lens' ListUserPoolsResponse (Maybe [UserPoolDescriptionType])

-- | An identifier that was returned from the previous call to this
--   operation, which can be used to return the next set of items in the
--   list.
listUserPoolsResponse_nextToken :: Lens' ListUserPoolsResponse (Maybe Text)

-- | The response's http status code.
listUserPoolsResponse_httpStatus :: Lens' ListUserPoolsResponse Int

-- | A map of custom key-value pairs that you can provide as input for any
--   custom workflows that this action triggers.
--   
--   You create custom workflows by assigning Lambda functions to user pool
--   triggers. When you use the AdminResetUserPassword API action, Amazon
--   Cognito invokes the function that is assigned to the <i>custom
--   message</i> trigger. When Amazon Cognito invokes this function, it
--   passes a JSON payload, which the function receives as input. This
--   payload contains a <tt>clientMetadata</tt> attribute, which provides
--   the data that you assigned to the ClientMetadata parameter in your
--   AdminResetUserPassword request. In your function code in Lambda, you
--   can process the <tt>clientMetadata</tt> value to enhance your workflow
--   for your specific needs.
--   
--   For more information, see <a>Customizing User Pool Workflows with
--   Lambda Triggers</a> in the <i>Amazon Cognito Developer Guide</i>.
--   
--   Take the following limitations into consideration when you use the
--   ClientMetadata parameter:
--   
--   <ul>
--   <li>Amazon Cognito does not store the ClientMetadata value. This data
--   is available only to Lambda triggers that are assigned to a user pool
--   to support custom workflows. If your user pool configuration does not
--   include triggers, the ClientMetadata parameter serves no purpose.</li>
--   <li>Amazon Cognito does not validate the ClientMetadata value.</li>
--   <li>Amazon Cognito does not encrypt the the ClientMetadata value, so
--   don't use it to provide sensitive information.</li>
--   </ul>
adminResetUserPassword_clientMetadata :: Lens' AdminResetUserPassword (Maybe (HashMap Text Text))

-- | The user pool ID for the user pool where you want to reset the user's
--   password.
adminResetUserPassword_userPoolId :: Lens' AdminResetUserPassword Text

-- | The user name of the user whose password you wish to reset.
adminResetUserPassword_username :: Lens' AdminResetUserPassword Text

-- | The response's http status code.
adminResetUserPasswordResponse_httpStatus :: Lens' AdminResetUserPasswordResponse Int

-- | The user pool ID.
updateAuthEventFeedback_userPoolId :: Lens' UpdateAuthEventFeedback Text

-- | The user pool username.
updateAuthEventFeedback_username :: Lens' UpdateAuthEventFeedback Text

-- | The event ID.
updateAuthEventFeedback_eventId :: Lens' UpdateAuthEventFeedback Text

-- | The feedback token.
updateAuthEventFeedback_feedbackToken :: Lens' UpdateAuthEventFeedback Text

-- | The authentication event feedback value.
updateAuthEventFeedback_feedbackValue :: Lens' UpdateAuthEventFeedback FeedbackValueType

-- | The response's http status code.
updateAuthEventFeedbackResponse_httpStatus :: Lens' UpdateAuthEventFeedbackResponse Int

-- | The job name for the user import job.
createUserImportJob_jobName :: Lens' CreateUserImportJob Text

-- | The user pool ID for the user pool that the users are being imported
--   into.
createUserImportJob_userPoolId :: Lens' CreateUserImportJob Text

-- | The role ARN for the Amazon CloudWatch Logging role for the user
--   import job.
createUserImportJob_cloudWatchLogsRoleArn :: Lens' CreateUserImportJob Text

-- | The job object that represents the user import job.
createUserImportJobResponse_userImportJob :: Lens' CreateUserImportJobResponse (Maybe UserImportJobType)

-- | The response's http status code.
createUserImportJobResponse_httpStatus :: Lens' CreateUserImportJobResponse Int

-- | The access token returned by the server response to get information
--   about the user.
getUser_accessToken :: Lens' GetUser Text

-- | The MFA options that are enabled for the user. The possible values in
--   this list are <tt>SMS_MFA</tt> and <tt>SOFTWARE_TOKEN_MFA</tt>.
getUserResponse_userMFASettingList :: Lens' GetUserResponse (Maybe [Text])

-- | <i>This response parameter is no longer supported.</i> It provides
--   information only about SMS MFA configurations. It doesn't provide
--   information about TOTP software token MFA configurations. To look up
--   information about either type of MFA configuration, use
--   UserMFASettingList instead.
getUserResponse_mfaOptions :: Lens' GetUserResponse (Maybe [MFAOptionType])

-- | The user's preferred MFA setting.
getUserResponse_preferredMfaSetting :: Lens' GetUserResponse (Maybe Text)

-- | The response's http status code.
getUserResponse_httpStatus :: Lens' GetUserResponse Int

-- | The user name of the user you wish to retrieve from the get user
--   request.
getUserResponse_username :: Lens' GetUserResponse Text

-- | An array of name-value pairs representing user attributes.
--   
--   For custom attributes, you must prepend the <tt>custom:</tt> prefix to
--   the attribute name.
getUserResponse_userAttributes :: Lens' GetUserResponse [AttributeType]

-- | The client ID for the client app.
getUICustomization_clientId :: Lens' GetUICustomization (Maybe Text)

-- | The user pool ID for the user pool.
getUICustomization_userPoolId :: Lens' GetUICustomization Text

-- | The response's http status code.
getUICustomizationResponse_httpStatus :: Lens' GetUICustomizationResponse Int

-- | The UI customization information.
getUICustomizationResponse_uICustomization :: Lens' GetUICustomizationResponse UICustomizationType

-- | The user pool ID for the user pool that the users are to be imported
--   into.
getCSVHeader_userPoolId :: Lens' GetCSVHeader Text

-- | The user pool ID for the user pool that the users are to be imported
--   into.
getCSVHeaderResponse_userPoolId :: Lens' GetCSVHeaderResponse (Maybe Text)

-- | The header information for the .csv file for the user import job.
getCSVHeaderResponse_cSVHeader :: Lens' GetCSVHeaderResponse (Maybe [Text])

-- | The response's http status code.
getCSVHeaderResponse_httpStatus :: Lens' GetCSVHeaderResponse Int

-- | The user pool ID for the user pool where you want to delete the user.
adminDeleteUser_userPoolId :: Lens' AdminDeleteUser Text

-- | The user name of the user you wish to delete.
adminDeleteUser_username :: Lens' AdminDeleteUser Text

-- | The user pool ID.
adminForgetDevice_userPoolId :: Lens' AdminForgetDevice Text

-- | The user name.
adminForgetDevice_username :: Lens' AdminForgetDevice Text

-- | The device key.
adminForgetDevice_deviceKey :: Lens' AdminForgetDevice Text

-- | The user pool ID for the user pool that hosts the resource server.
describeResourceServer_userPoolId :: Lens' DescribeResourceServer Text

-- | The identifier for the resource server
describeResourceServer_identifier :: Lens' DescribeResourceServer Text

-- | The response's http status code.
describeResourceServerResponse_httpStatus :: Lens' DescribeResourceServerResponse Int

-- | The resource server.
describeResourceServerResponse_resourceServer :: Lens' DescribeResourceServerResponse ResourceServerType

-- | The SMS text message multi-factor authentication (MFA) settings.
setUserMFAPreference_sMSMfaSettings :: Lens' SetUserMFAPreference (Maybe SMSMfaSettingsType)

-- | The time-based one-time password software token MFA settings.
setUserMFAPreference_softwareTokenMfaSettings :: Lens' SetUserMFAPreference (Maybe SoftwareTokenMfaSettingsType)

-- | The access token for the user.
setUserMFAPreference_accessToken :: Lens' SetUserMFAPreference Text

-- | The response's http status code.
setUserMFAPreferenceResponse_httpStatus :: Lens' SetUserMFAPreferenceResponse Int

-- | The status indicating whether a device has been remembered or not.
adminUpdateDeviceStatus_deviceRememberedStatus :: Lens' AdminUpdateDeviceStatus (Maybe DeviceRememberedStatusType)

-- | The user pool ID.
adminUpdateDeviceStatus_userPoolId :: Lens' AdminUpdateDeviceStatus Text

-- | The user name.
adminUpdateDeviceStatus_username :: Lens' AdminUpdateDeviceStatus Text

-- | The device key.
adminUpdateDeviceStatus_deviceKey :: Lens' AdminUpdateDeviceStatus Text

-- | The response's http status code.
adminUpdateDeviceStatusResponse_httpStatus :: Lens' AdminUpdateDeviceStatusResponse Int

-- | A map of custom key-value pairs that you can provide as input for any
--   custom workflows that this action triggers.
--   
--   You create custom workflows by assigning Lambda functions to user pool
--   triggers. When you use the AdminCreateUser API action, Amazon Cognito
--   invokes the function that is assigned to the <i>pre sign-up</i>
--   trigger. When Amazon Cognito invokes this function, it passes a JSON
--   payload, which the function receives as input. This payload contains a
--   <tt>clientMetadata</tt> attribute, which provides the data that you
--   assigned to the ClientMetadata parameter in your AdminCreateUser
--   request. In your function code in Lambda, you can process the
--   <tt>clientMetadata</tt> value to enhance your workflow for your
--   specific needs.
--   
--   For more information, see <a>Customizing User Pool Workflows with
--   Lambda Triggers</a> in the <i>Amazon Cognito Developer Guide</i>.
--   
--   Take the following limitations into consideration when you use the
--   ClientMetadata parameter:
--   
--   <ul>
--   <li>Amazon Cognito does not store the ClientMetadata value. This data
--   is available only to Lambda triggers that are assigned to a user pool
--   to support custom workflows. If your user pool configuration does not
--   include triggers, the ClientMetadata parameter serves no purpose.</li>
--   <li>Amazon Cognito does not validate the ClientMetadata value.</li>
--   <li>Amazon Cognito does not encrypt the the ClientMetadata value, so
--   don't use it to provide sensitive information.</li>
--   </ul>
adminCreateUser_clientMetadata :: Lens' AdminCreateUser (Maybe (HashMap Text Text))

-- | The user's temporary password. This password must conform to the
--   password policy that you specified when you created the user pool.
--   
--   The temporary password is valid only once. To complete the Admin
--   Create User flow, the user must enter the temporary password in the
--   sign-in page along with a new password to be used in all future
--   sign-ins.
--   
--   This parameter is not required. If you do not specify a value, Amazon
--   Cognito generates one for you.
--   
--   The temporary password can only be used until the user account
--   expiration limit that you specified when you created the user pool. To
--   reset the account after that time limit, you must call
--   <tt>AdminCreateUser</tt> again, specifying <tt>"RESEND"</tt> for the
--   <tt>MessageAction</tt> parameter.
adminCreateUser_temporaryPassword :: Lens' AdminCreateUser (Maybe Text)

-- | This parameter is only used if the <tt>phone_number_verified</tt> or
--   <tt>email_verified</tt> attribute is set to <tt>True</tt>. Otherwise,
--   it is ignored.
--   
--   If this parameter is set to <tt>True</tt> and the phone number or
--   email address specified in the UserAttributes parameter already exists
--   as an alias with a different user, the API call will migrate the alias
--   from the previous user to the newly created user. The previous user
--   will no longer be able to log in using that alias.
--   
--   If this parameter is set to <tt>False</tt>, the API throws an
--   <tt>AliasExistsException</tt> error if the alias already exists. The
--   default value is <tt>False</tt>.
adminCreateUser_forceAliasCreation :: Lens' AdminCreateUser (Maybe Bool)

-- | Specify <tt>"EMAIL"</tt> if email will be used to send the welcome
--   message. Specify <tt>"SMS"</tt> if the phone number will be used. The
--   default value is <tt>"SMS"</tt>. More than one value can be specified.
adminCreateUser_desiredDeliveryMediums :: Lens' AdminCreateUser (Maybe [DeliveryMediumType])

-- | Set to <tt>"RESEND"</tt> to resend the invitation message to a user
--   that already exists and reset the expiration limit on the user's
--   account. Set to <tt>"SUPPRESS"</tt> to suppress sending the message.
--   Only one value can be specified.
adminCreateUser_messageAction :: Lens' AdminCreateUser (Maybe MessageActionType)

-- | An array of name-value pairs that contain user attributes and
--   attribute values to be set for the user to be created. You can create
--   a user without specifying any attributes other than <tt>Username</tt>.
--   However, any attributes that you specify as required (when creating a
--   user pool or in the <b>Attributes</b> tab of the console) must be
--   supplied either by you (in your call to <tt>AdminCreateUser</tt>) or
--   by the user (when he or she signs up in response to your welcome
--   message).
--   
--   For custom attributes, you must prepend the <tt>custom:</tt> prefix to
--   the attribute name.
--   
--   To send a message inviting the user to sign up, you must specify the
--   user's email address or phone number. This can be done in your call to
--   AdminCreateUser or in the <b>Users</b> tab of the Amazon Cognito
--   console for managing your user pools.
--   
--   In your call to <tt>AdminCreateUser</tt>, you can set the
--   <tt>email_verified</tt> attribute to <tt>True</tt>, and you can set
--   the <tt>phone_number_verified</tt> attribute to <tt>True</tt>. (You
--   can also do this by calling <a>AdminUpdateUserAttributes</a>.)
--   
--   <ul>
--   <li><b>email</b>: The email address of the user to whom the message
--   that contains the code and username will be sent. Required if the
--   <tt>email_verified</tt> attribute is set to <tt>True</tt>, or if
--   <tt>"EMAIL"</tt> is specified in the <tt>DesiredDeliveryMediums</tt>
--   parameter.</li>
--   <li><b>phone_number</b>: The phone number of the user to whom the
--   message that contains the code and username will be sent. Required if
--   the <tt>phone_number_verified</tt> attribute is set to <tt>True</tt>,
--   or if <tt>"SMS"</tt> is specified in the
--   <tt>DesiredDeliveryMediums</tt> parameter.</li>
--   </ul>
adminCreateUser_userAttributes :: Lens' AdminCreateUser (Maybe [AttributeType])

-- | The user's validation data. This is an array of name-value pairs that
--   contain user attributes and attribute values that you can use for
--   custom validation, such as restricting the types of user accounts that
--   can be registered. For example, you might choose to allow or disallow
--   user sign-up based on the user's domain.
--   
--   To configure custom validation, you must create a Pre Sign-up Lambda
--   trigger for the user pool as described in the Amazon Cognito Developer
--   Guide. The Lambda trigger receives the validation data and uses it in
--   the validation process.
--   
--   The user's validation data is not persisted.
adminCreateUser_validationData :: Lens' AdminCreateUser (Maybe [AttributeType])

-- | The user pool ID for the user pool where the user will be created.
adminCreateUser_userPoolId :: Lens' AdminCreateUser Text

-- | The username for the user. Must be unique within the user pool. Must
--   be a UTF-8 string between 1 and 128 characters. After the user is
--   created, the username cannot be changed.
adminCreateUser_username :: Lens' AdminCreateUser Text

-- | The newly created user.
adminCreateUserResponse_user :: Lens' AdminCreateUserResponse (Maybe UserType)

-- | The response's http status code.
adminCreateUserResponse_httpStatus :: Lens' AdminCreateUserResponse Int

-- | The user pool ID for the user pool where you want to add custom
--   attributes.
addCustomAttributes_userPoolId :: Lens' AddCustomAttributes Text

-- | An array of custom attributes, such as Mutable and Name.
addCustomAttributes_customAttributes :: Lens' AddCustomAttributes (NonEmpty SchemaAttributeType)

-- | The response's http status code.
addCustomAttributesResponse_httpStatus :: Lens' AddCustomAttributesResponse Int

-- | An identifier that was returned from the previous call to this
--   operation, which can be used to return the next set of items in the
--   list.
listUserPoolClients_nextToken :: Lens' ListUserPoolClients (Maybe Text)

-- | The maximum number of results you want the request to return when
--   listing the user pool clients.
listUserPoolClients_maxResults :: Lens' ListUserPoolClients (Maybe Natural)

-- | The user pool ID for the user pool where you want to list user pool
--   clients.
listUserPoolClients_userPoolId :: Lens' ListUserPoolClients Text

-- | An identifier that was returned from the previous call to this
--   operation, which can be used to return the next set of items in the
--   list.
listUserPoolClientsResponse_nextToken :: Lens' ListUserPoolClientsResponse (Maybe Text)

-- | The user pool clients in the response that lists user pool clients.
listUserPoolClientsResponse_userPoolClients :: Lens' ListUserPoolClientsResponse (Maybe [UserPoolClientDescription])

-- | The response's http status code.
listUserPoolClientsResponse_httpStatus :: Lens' ListUserPoolClientsResponse Int

-- | The SMS text message MFA settings.
adminSetUserMFAPreference_sMSMfaSettings :: Lens' AdminSetUserMFAPreference (Maybe SMSMfaSettingsType)

-- | The time-based one-time password software token MFA settings.
adminSetUserMFAPreference_softwareTokenMfaSettings :: Lens' AdminSetUserMFAPreference (Maybe SoftwareTokenMfaSettingsType)

-- | The user pool username or alias.
adminSetUserMFAPreference_username :: Lens' AdminSetUserMFAPreference Text

-- | The user pool ID.
adminSetUserMFAPreference_userPoolId :: Lens' AdminSetUserMFAPreference Text

-- | The response's http status code.
adminSetUserMFAPreferenceResponse_httpStatus :: Lens' AdminSetUserMFAPreferenceResponse Int

-- | The time limit, in days, after which the refresh token is no longer
--   valid and cannot be used.
updateUserPoolClient_refreshTokenValidity :: Lens' UpdateUserPoolClient (Maybe Natural)

-- | The authentication flows that are supported by the user pool clients.
--   Flow names without the <tt>ALLOW_</tt> prefix are deprecated in favor
--   of new names with the <tt>ALLOW_</tt> prefix. Note that values with
--   <tt>ALLOW_</tt> prefix cannot be used along with values without
--   <tt>ALLOW_</tt> prefix.
--   
--   Valid values include:
--   
--   <ul>
--   <li><tt>ALLOW_ADMIN_USER_PASSWORD_AUTH</tt>: Enable admin based user
--   password authentication flow <tt>ADMIN_USER_PASSWORD_AUTH</tt>. This
--   setting replaces the <tt>ADMIN_NO_SRP_AUTH</tt> setting. With this
--   authentication flow, Cognito receives the password in the request
--   instead of using the SRP (Secure Remote Password protocol) protocol to
--   verify passwords.</li>
--   <li><tt>ALLOW_CUSTOM_AUTH</tt>: Enable Lambda trigger based
--   authentication.</li>
--   <li><tt>ALLOW_USER_PASSWORD_AUTH</tt>: Enable user password-based
--   authentication. In this flow, Cognito receives the password in the
--   request instead of using the SRP protocol to verify passwords.</li>
--   <li><tt>ALLOW_USER_SRP_AUTH</tt>: Enable SRP based
--   authentication.</li>
--   <li><tt>ALLOW_REFRESH_TOKEN_AUTH</tt>: Enable authflow to refresh
--   tokens.</li>
--   </ul>
updateUserPoolClient_explicitAuthFlows :: Lens' UpdateUserPoolClient (Maybe [ExplicitAuthFlowsType])

-- | A list of provider names for the identity providers that are supported
--   on this client.
updateUserPoolClient_supportedIdentityProviders :: Lens' UpdateUserPoolClient (Maybe [Text])

-- | A list of allowed logout URLs for the identity providers.
updateUserPoolClient_logoutURLs :: Lens' UpdateUserPoolClient (Maybe [Text])

-- | Set to true if the client is allowed to follow the OAuth protocol when
--   interacting with Cognito user pools.
updateUserPoolClient_allowedOAuthFlowsUserPoolClient :: Lens' UpdateUserPoolClient (Maybe Bool)

-- | The time limit, after which the ID token is no longer valid and cannot
--   be used.
updateUserPoolClient_idTokenValidity :: Lens' UpdateUserPoolClient (Maybe Natural)

-- | The units in which the validity times are represented in. Default for
--   RefreshToken is days, and default for ID and access tokens are hours.
updateUserPoolClient_tokenValidityUnits :: Lens' UpdateUserPoolClient (Maybe TokenValidityUnitsType)

-- | The default redirect URI. Must be in the <tt>CallbackURLs</tt> list.
--   
--   A redirect URI must:
--   
--   <ul>
--   <li>Be an absolute URI.</li>
--   <li>Be registered with the authorization server.</li>
--   <li>Not include a fragment component.</li>
--   </ul>
--   
--   See <a>OAuth 2.0 - Redirection Endpoint</a>.
--   
--   Amazon Cognito requires HTTPS over HTTP except for http://localhost
--   for testing purposes only.
--   
--   App callback URLs such as myapp://example are also supported.
updateUserPoolClient_defaultRedirectURI :: Lens' UpdateUserPoolClient (Maybe Text)

-- | Enables or disables token revocation. For more information about
--   revoking tokens, see <a>RevokeToken</a>.
updateUserPoolClient_enableTokenRevocation :: Lens' UpdateUserPoolClient (Maybe Bool)

-- | The writeable attributes of the user pool.
updateUserPoolClient_writeAttributes :: Lens' UpdateUserPoolClient (Maybe [Text])

-- | Use this setting to choose which errors and responses are returned by
--   Cognito APIs during authentication, account confirmation, and password
--   recovery when the user does not exist in the user pool. When set to
--   <tt>ENABLED</tt> and the user does not exist, authentication returns
--   an error indicating either the username or password was incorrect, and
--   account confirmation and password recovery return a response
--   indicating a code was sent to a simulated destination. When set to
--   <tt>LEGACY</tt>, those APIs will return a
--   <tt>UserNotFoundException</tt> exception if the user does not exist in
--   the user pool.
--   
--   Valid values include:
--   
--   <ul>
--   <li><tt>ENABLED</tt> - This prevents user existence-related
--   errors.</li>
--   <li><tt>LEGACY</tt> - This represents the old behavior of Cognito
--   where user existence related errors are not prevented.</li>
--   </ul>
--   
--   After February 15th 2020, the value of
--   <tt>PreventUserExistenceErrors</tt> will default to <tt>ENABLED</tt>
--   for newly created user pool clients if no value is provided.
updateUserPoolClient_preventUserExistenceErrors :: Lens' UpdateUserPoolClient (Maybe PreventUserExistenceErrorTypes)

-- | The time limit, after which the access token is no longer valid and
--   cannot be used.
updateUserPoolClient_accessTokenValidity :: Lens' UpdateUserPoolClient (Maybe Natural)

-- | The read-only attributes of the user pool.
updateUserPoolClient_readAttributes :: Lens' UpdateUserPoolClient (Maybe [Text])

-- | The allowed OAuth scopes. Possible values provided by OAuth are:
--   <tt>phone</tt>, <tt>email</tt>, <tt>openid</tt>, and <tt>profile</tt>.
--   Possible values provided by Amazon Web Services are:
--   <tt>aws.cognito.signin.user.admin</tt>. Custom scopes created in
--   Resource Servers are also supported.
updateUserPoolClient_allowedOAuthScopes :: Lens' UpdateUserPoolClient (Maybe [Text])

-- | The allowed OAuth flows.
--   
--   Set to <tt>code</tt> to initiate a code grant flow, which provides an
--   authorization code as the response. This code can be exchanged for
--   access tokens with the token endpoint.
--   
--   Set to <tt>implicit</tt> to specify that the client should get the
--   access token (and, optionally, ID token, based on scopes) directly.
--   
--   Set to <tt>client_credentials</tt> to specify that the client should
--   get the access token (and, optionally, ID token, based on scopes) from
--   the token endpoint using a combination of client and client_secret.
updateUserPoolClient_allowedOAuthFlows :: Lens' UpdateUserPoolClient (Maybe [OAuthFlowType])

-- | The Amazon Pinpoint analytics configuration for collecting metrics for
--   this user pool.
--   
--   In regions where Pinpoint is not available, Cognito User Pools only
--   supports sending events to Amazon Pinpoint projects in us-east-1. In
--   regions where Pinpoint is available, Cognito User Pools will support
--   sending events to Amazon Pinpoint projects within that same region.
updateUserPoolClient_analyticsConfiguration :: Lens' UpdateUserPoolClient (Maybe AnalyticsConfigurationType)

-- | The client name from the update user pool client request.
updateUserPoolClient_clientName :: Lens' UpdateUserPoolClient (Maybe Text)

-- | A list of allowed redirect (callback) URLs for the identity providers.
--   
--   A redirect URI must:
--   
--   <ul>
--   <li>Be an absolute URI.</li>
--   <li>Be registered with the authorization server.</li>
--   <li>Not include a fragment component.</li>
--   </ul>
--   
--   See <a>OAuth 2.0 - Redirection Endpoint</a>.
--   
--   Amazon Cognito requires HTTPS over HTTP except for http://localhost
--   for testing purposes only.
--   
--   App callback URLs such as myapp://example are also supported.
updateUserPoolClient_callbackURLs :: Lens' UpdateUserPoolClient (Maybe [Text])

-- | The user pool ID for the user pool where you want to update the user
--   pool client.
updateUserPoolClient_userPoolId :: Lens' UpdateUserPoolClient Text

-- | The ID of the client associated with the user pool.
updateUserPoolClient_clientId :: Lens' UpdateUserPoolClient Text

-- | The user pool client value from the response from the server when an
--   update user pool client request is made.
updateUserPoolClientResponse_userPoolClient :: Lens' UpdateUserPoolClientResponse (Maybe UserPoolClientType)

-- | The response's http status code.
updateUserPoolClientResponse_httpStatus :: Lens' UpdateUserPoolClientResponse Int

-- | The user pool ID for the user pool where you want to delete the
--   client.
deleteUserPoolClient_userPoolId :: Lens' DeleteUserPoolClient Text

-- | The app client ID of the app associated with the user pool.
deleteUserPoolClient_clientId :: Lens' DeleteUserPoolClient Text

-- | The status of whether a device is remembered.
updateDeviceStatus_deviceRememberedStatus :: Lens' UpdateDeviceStatus (Maybe DeviceRememberedStatusType)

-- | The access token.
updateDeviceStatus_accessToken :: Lens' UpdateDeviceStatus Text

-- | The device key.
updateDeviceStatus_deviceKey :: Lens' UpdateDeviceStatus Text

-- | The response's http status code.
updateDeviceStatusResponse_httpStatus :: Lens' UpdateDeviceStatusResponse Int

-- | The access token for the forgotten device request.
forgetDevice_accessToken :: Lens' ForgetDevice (Maybe Text)

-- | The device key.
forgetDevice_deviceKey :: Lens' ForgetDevice Text

-- | The user pool ID.
getSigningCertificate_userPoolId :: Lens' GetSigningCertificate Text

-- | The signing certificate.
getSigningCertificateResponse_certificate :: Lens' GetSigningCertificateResponse (Maybe Text)

-- | The response's http status code.
getSigningCertificateResponse_httpStatus :: Lens' GetSigningCertificateResponse Int

-- | The access token from a request to delete a user.
deleteUser_accessToken :: Lens' DeleteUser Text

-- | The Amazon Resource Name (ARN) of the user pool to assign the tags to.
tagResource_resourceArn :: Lens' TagResource Text

-- | The tags to assign to the user pool.
tagResource_tags :: Lens' TagResource (HashMap Text Text)

-- | The response's http status code.
tagResourceResponse_httpStatus :: Lens' TagResourceResponse Int

-- | The time limit, in days, after which the refresh token is no longer
--   valid and cannot be used.
createUserPoolClient_refreshTokenValidity :: Lens' CreateUserPoolClient (Maybe Natural)

-- | The authentication flows that are supported by the user pool clients.
--   Flow names without the <tt>ALLOW_</tt> prefix are deprecated in favor
--   of new names with the <tt>ALLOW_</tt> prefix. Note that values with
--   <tt>ALLOW_</tt> prefix cannot be used along with values without
--   <tt>ALLOW_</tt> prefix.
--   
--   Valid values include:
--   
--   <ul>
--   <li><tt>ALLOW_ADMIN_USER_PASSWORD_AUTH</tt>: Enable admin based user
--   password authentication flow <tt>ADMIN_USER_PASSWORD_AUTH</tt>. This
--   setting replaces the <tt>ADMIN_NO_SRP_AUTH</tt> setting. With this
--   authentication flow, Cognito receives the password in the request
--   instead of using the SRP (Secure Remote Password protocol) protocol to
--   verify passwords.</li>
--   <li><tt>ALLOW_CUSTOM_AUTH</tt>: Enable Lambda trigger based
--   authentication.</li>
--   <li><tt>ALLOW_USER_PASSWORD_AUTH</tt>: Enable user password-based
--   authentication. In this flow, Cognito receives the password in the
--   request instead of using the SRP protocol to verify passwords.</li>
--   <li><tt>ALLOW_USER_SRP_AUTH</tt>: Enable SRP based
--   authentication.</li>
--   <li><tt>ALLOW_REFRESH_TOKEN_AUTH</tt>: Enable authflow to refresh
--   tokens.</li>
--   </ul>
createUserPoolClient_explicitAuthFlows :: Lens' CreateUserPoolClient (Maybe [ExplicitAuthFlowsType])

-- | A list of provider names for the identity providers that are supported
--   on this client. The following are supported: <tt>COGNITO</tt>,
--   <tt>Facebook</tt>, <tt>Google</tt> and <tt>LoginWithAmazon</tt>.
createUserPoolClient_supportedIdentityProviders :: Lens' CreateUserPoolClient (Maybe [Text])

-- | A list of allowed logout URLs for the identity providers.
createUserPoolClient_logoutURLs :: Lens' CreateUserPoolClient (Maybe [Text])

-- | Set to true if the client is allowed to follow the OAuth protocol when
--   interacting with Cognito user pools.
createUserPoolClient_allowedOAuthFlowsUserPoolClient :: Lens' CreateUserPoolClient (Maybe Bool)

-- | Boolean to specify whether you want to generate a secret for the user
--   pool client being created.
createUserPoolClient_generateSecret :: Lens' CreateUserPoolClient (Maybe Bool)

-- | The time limit, between 5 minutes and 1 day, after which the ID token
--   is no longer valid and cannot be used. This value will be overridden
--   if you have entered a value in TokenValidityUnits.
createUserPoolClient_idTokenValidity :: Lens' CreateUserPoolClient (Maybe Natural)

-- | The units in which the validity times are represented in. Default for
--   RefreshToken is days, and default for ID and access tokens are hours.
createUserPoolClient_tokenValidityUnits :: Lens' CreateUserPoolClient (Maybe TokenValidityUnitsType)

-- | The default redirect URI. Must be in the <tt>CallbackURLs</tt> list.
--   
--   A redirect URI must:
--   
--   <ul>
--   <li>Be an absolute URI.</li>
--   <li>Be registered with the authorization server.</li>
--   <li>Not include a fragment component.</li>
--   </ul>
--   
--   See <a>OAuth 2.0 - Redirection Endpoint</a>.
--   
--   Amazon Cognito requires HTTPS over HTTP except for http://localhost
--   for testing purposes only.
--   
--   App callback URLs such as myapp://example are also supported.
createUserPoolClient_defaultRedirectURI :: Lens' CreateUserPoolClient (Maybe Text)

-- | Enables or disables token revocation. For more information about
--   revoking tokens, see <a>RevokeToken</a>.
--   
--   If you don't include this parameter, token revocation is automatically
--   enabled for the new user pool client.
createUserPoolClient_enableTokenRevocation :: Lens' CreateUserPoolClient (Maybe Bool)

-- | The user pool attributes that the app client can write to.
--   
--   If your app client allows users to sign in through an identity
--   provider, this array must include all attributes that are mapped to
--   identity provider attributes. Amazon Cognito updates mapped attributes
--   when users sign in to your application through an identity provider.
--   If your app client lacks write access to a mapped attribute, Amazon
--   Cognito throws an error when it attempts to update the attribute. For
--   more information, see <a>Specifying Identity Provider Attribute
--   Mappings for Your User Pool</a>.
createUserPoolClient_writeAttributes :: Lens' CreateUserPoolClient (Maybe [Text])

-- | Use this setting to choose which errors and responses are returned by
--   Cognito APIs during authentication, account confirmation, and password
--   recovery when the user does not exist in the user pool. When set to
--   <tt>ENABLED</tt> and the user does not exist, authentication returns
--   an error indicating either the username or password was incorrect, and
--   account confirmation and password recovery return a response
--   indicating a code was sent to a simulated destination. When set to
--   <tt>LEGACY</tt>, those APIs will return a
--   <tt>UserNotFoundException</tt> exception if the user does not exist in
--   the user pool.
--   
--   Valid values include:
--   
--   <ul>
--   <li><tt>ENABLED</tt> - This prevents user existence-related
--   errors.</li>
--   <li><tt>LEGACY</tt> - This represents the old behavior of Cognito
--   where user existence related errors are not prevented.</li>
--   </ul>
--   
--   After February 15th 2020, the value of
--   <tt>PreventUserExistenceErrors</tt> will default to <tt>ENABLED</tt>
--   for newly created user pool clients if no value is provided.
createUserPoolClient_preventUserExistenceErrors :: Lens' CreateUserPoolClient (Maybe PreventUserExistenceErrorTypes)

-- | The time limit, between 5 minutes and 1 day, after which the access
--   token is no longer valid and cannot be used. This value will be
--   overridden if you have entered a value in TokenValidityUnits.
createUserPoolClient_accessTokenValidity :: Lens' CreateUserPoolClient (Maybe Natural)

-- | The read attributes.
createUserPoolClient_readAttributes :: Lens' CreateUserPoolClient (Maybe [Text])

-- | The allowed OAuth scopes. Possible values provided by OAuth are:
--   <tt>phone</tt>, <tt>email</tt>, <tt>openid</tt>, and <tt>profile</tt>.
--   Possible values provided by Amazon Web Services are:
--   <tt>aws.cognito.signin.user.admin</tt>. Custom scopes created in
--   Resource Servers are also supported.
createUserPoolClient_allowedOAuthScopes :: Lens' CreateUserPoolClient (Maybe [Text])

-- | The allowed OAuth flows.
--   
--   Set to <tt>code</tt> to initiate a code grant flow, which provides an
--   authorization code as the response. This code can be exchanged for
--   access tokens with the token endpoint.
--   
--   Set to <tt>implicit</tt> to specify that the client should get the
--   access token (and, optionally, ID token, based on scopes) directly.
--   
--   Set to <tt>client_credentials</tt> to specify that the client should
--   get the access token (and, optionally, ID token, based on scopes) from
--   the token endpoint using a combination of client and client_secret.
createUserPoolClient_allowedOAuthFlows :: Lens' CreateUserPoolClient (Maybe [OAuthFlowType])

-- | The Amazon Pinpoint analytics configuration for collecting metrics for
--   this user pool.
--   
--   In regions where Pinpoint is not available, Cognito User Pools only
--   supports sending events to Amazon Pinpoint projects in us-east-1. In
--   regions where Pinpoint is available, Cognito User Pools will support
--   sending events to Amazon Pinpoint projects within that same region.
createUserPoolClient_analyticsConfiguration :: Lens' CreateUserPoolClient (Maybe AnalyticsConfigurationType)

-- | A list of allowed redirect (callback) URLs for the identity providers.
--   
--   A redirect URI must:
--   
--   <ul>
--   <li>Be an absolute URI.</li>
--   <li>Be registered with the authorization server.</li>
--   <li>Not include a fragment component.</li>
--   </ul>
--   
--   See <a>OAuth 2.0 - Redirection Endpoint</a>.
--   
--   Amazon Cognito requires HTTPS over HTTP except for http://localhost
--   for testing purposes only.
--   
--   App callback URLs such as myapp://example are also supported.
createUserPoolClient_callbackURLs :: Lens' CreateUserPoolClient (Maybe [Text])

-- | The user pool ID for the user pool where you want to create a user
--   pool client.
createUserPoolClient_userPoolId :: Lens' CreateUserPoolClient Text

-- | The client name for the user pool client you would like to create.
createUserPoolClient_clientName :: Lens' CreateUserPoolClient Text

-- | The user pool client that was just created.
createUserPoolClientResponse_userPoolClient :: Lens' CreateUserPoolClientResponse (Maybe UserPoolClientType)

-- | The response's http status code.
createUserPoolClientResponse_httpStatus :: Lens' CreateUserPoolClientResponse Int

-- | The user pool ID.
getUserPoolMfaConfig_userPoolId :: Lens' GetUserPoolMfaConfig Text

-- | The SMS text message multi-factor (MFA) configuration.
getUserPoolMfaConfigResponse_smsMfaConfiguration :: Lens' GetUserPoolMfaConfigResponse (Maybe SmsMfaConfigType)

-- | The software token multi-factor (MFA) configuration.
getUserPoolMfaConfigResponse_softwareTokenMfaConfiguration :: Lens' GetUserPoolMfaConfigResponse (Maybe SoftwareTokenMfaConfigType)

-- | The multi-factor (MFA) configuration. Valid values include:
--   
--   <ul>
--   <li><tt>OFF</tt> MFA will not be used for any users.</li>
--   <li><tt>ON</tt> MFA is required for all users to sign in.</li>
--   <li><tt>OPTIONAL</tt> MFA will be required only for individual users
--   who have an MFA factor enabled.</li>
--   </ul>
getUserPoolMfaConfigResponse_mfaConfiguration :: Lens' GetUserPoolMfaConfigResponse (Maybe UserPoolMfaType)

-- | The response's http status code.
getUserPoolMfaConfigResponse_httpStatus :: Lens' GetUserPoolMfaConfigResponse Int

-- | A list of scopes. Each scope is map, where the keys are <tt>name</tt>
--   and <tt>description</tt>.
createResourceServer_scopes :: Lens' CreateResourceServer (Maybe [ResourceServerScopeType])

-- | The user pool ID for the user pool.
createResourceServer_userPoolId :: Lens' CreateResourceServer Text

-- | A unique resource server identifier for the resource server. This
--   could be an HTTPS endpoint where the resource server is located. For
--   example, <tt>https://my-weather-api.example.com</tt>.
createResourceServer_identifier :: Lens' CreateResourceServer Text

-- | A friendly name for the resource server.
createResourceServer_name :: Lens' CreateResourceServer Text

-- | The response's http status code.
createResourceServerResponse_httpStatus :: Lens' CreateResourceServerResponse Int

-- | The newly created resource server.
createResourceServerResponse_resourceServer :: Lens' CreateResourceServerResponse ResourceServerType

-- | A pagination token.
adminListUserAuthEvents_nextToken :: Lens' AdminListUserAuthEvents (Maybe Text)

-- | The maximum number of authentication events to return.
adminListUserAuthEvents_maxResults :: Lens' AdminListUserAuthEvents (Maybe Natural)

-- | The user pool ID.
adminListUserAuthEvents_userPoolId :: Lens' AdminListUserAuthEvents Text

-- | The user pool username or an alias.
adminListUserAuthEvents_username :: Lens' AdminListUserAuthEvents Text

-- | A pagination token.
adminListUserAuthEventsResponse_nextToken :: Lens' AdminListUserAuthEventsResponse (Maybe Text)

-- | The response object. It includes the <tt>EventID</tt>,
--   <tt>EventType</tt>, <tt>CreationDate</tt>, <tt>EventRisk</tt>, and
--   <tt>EventResponse</tt>.
adminListUserAuthEventsResponse_authEvents :: Lens' AdminListUserAuthEventsResponse (Maybe [AuthEventType])

-- | The response's http status code.
adminListUserAuthEventsResponse_httpStatus :: Lens' AdminListUserAuthEventsResponse Int

-- | A nonnegative integer value that specifies the precedence of this
--   group relative to the other groups that a user can belong to in the
--   user pool. Zero is the highest precedence value. Groups with lower
--   <tt>Precedence</tt> values take precedence over groups with higher or
--   null <tt>Precedence</tt> values. If a user belongs to two or more
--   groups, it is the group with the lowest precedence value whose role
--   ARN will be used in the <tt>cognito:roles</tt> and
--   <tt>cognito:preferred_role</tt> claims in the user's tokens.
--   
--   Two groups can have the same <tt>Precedence</tt> value. If this
--   happens, neither group takes precedence over the other. If two groups
--   with the same <tt>Precedence</tt> have the same role ARN, that role is
--   used in the <tt>cognito:preferred_role</tt> claim in tokens for users
--   in each group. If the two groups have different role ARNs, the
--   <tt>cognito:preferred_role</tt> claim is not set in users' tokens.
--   
--   The default <tt>Precedence</tt> value is null.
createGroup_precedence :: Lens' CreateGroup (Maybe Natural)

-- | A string containing the description of the group.
createGroup_description :: Lens' CreateGroup (Maybe Text)

-- | The role ARN for the group.
createGroup_roleArn :: Lens' CreateGroup (Maybe Text)

-- | The name of the group. Must be unique.
createGroup_groupName :: Lens' CreateGroup Text

-- | The user pool ID for the user pool.
createGroup_userPoolId :: Lens' CreateGroup Text

-- | The group object for the group.
createGroupResponse_group :: Lens' CreateGroupResponse (Maybe GroupType)

-- | The response's http status code.
createGroupResponse_httpStatus :: Lens' CreateGroupResponse Int

-- | The user pool ID for the user pool.
adminAddUserToGroup_userPoolId :: Lens' AdminAddUserToGroup Text

-- | The username for the user.
adminAddUserToGroup_username :: Lens' AdminAddUserToGroup Text

-- | The group name.
adminAddUserToGroup_groupName :: Lens' AdminAddUserToGroup Text

-- | The access token.
verifySoftwareToken_accessToken :: Lens' VerifySoftwareToken (Maybe Text)

-- | The friendly device name.
verifySoftwareToken_friendlyDeviceName :: Lens' VerifySoftwareToken (Maybe Text)

-- | The session which should be passed both ways in challenge-response
--   calls to the service.
verifySoftwareToken_session :: Lens' VerifySoftwareToken (Maybe Text)

-- | The one time password computed using the secret code returned by
--   <a>AssociateSoftwareToken"</a>.
verifySoftwareToken_userCode :: Lens' VerifySoftwareToken Text

-- | The status of the verify software token.
verifySoftwareTokenResponse_status :: Lens' VerifySoftwareTokenResponse (Maybe VerifySoftwareTokenResponseType)

-- | The session which should be passed both ways in challenge-response
--   calls to the service.
verifySoftwareTokenResponse_session :: Lens' VerifySoftwareTokenResponse (Maybe Text)

-- | The response's http status code.
verifySoftwareTokenResponse_httpStatus :: Lens' VerifySoftwareTokenResponse Int

-- | The Amazon Resource Name (ARN) of the user pool that the tags are
--   assigned to.
untagResource_resourceArn :: Lens' UntagResource Text

-- | The keys of the tags to remove from the user pool.
untagResource_tagKeys :: Lens' UntagResource [Text]

-- | The response's http status code.
untagResourceResponse_httpStatus :: Lens' UntagResourceResponse Int

-- | The secret for the client ID. This is required only if the client ID
--   has a secret.
revokeToken_clientSecret :: Lens' RevokeToken (Maybe Text)

-- | The token that you want to revoke.
revokeToken_token :: Lens' RevokeToken Text

-- | The client ID for the token that you want to revoke.
revokeToken_clientId :: Lens' RevokeToken Text

-- | The response's http status code.
revokeTokenResponse_httpStatus :: Lens' RevokeTokenResponse Int

-- | The user pool ID for the user pool that the users are being imported
--   into.
stopUserImportJob_userPoolId :: Lens' StopUserImportJob Text

-- | The job ID for the user import job.
stopUserImportJob_jobId :: Lens' StopUserImportJob Text

-- | The job object that represents the user import job.
stopUserImportJobResponse_userImportJob :: Lens' StopUserImportJobResponse (Maybe UserImportJobType)

-- | The response's http status code.
stopUserImportJobResponse_httpStatus :: Lens' StopUserImportJobResponse Int

-- | The user pool ID for the user pool that the users are being imported
--   into.
describeUserImportJob_userPoolId :: Lens' DescribeUserImportJob Text

-- | The job ID for the user import job.
describeUserImportJob_jobId :: Lens' DescribeUserImportJob Text

-- | The job object that represents the user import job.
describeUserImportJobResponse_userImportJob :: Lens' DescribeUserImportJobResponse (Maybe UserImportJobType)

-- | The response's http status code.
describeUserImportJobResponse_httpStatus :: Lens' DescribeUserImportJobResponse Int

-- | The app client ID.
describeRiskConfiguration_clientId :: Lens' DescribeRiskConfiguration (Maybe Text)

-- | The user pool ID.
describeRiskConfiguration_userPoolId :: Lens' DescribeRiskConfiguration Text

-- | The response's http status code.
describeRiskConfigurationResponse_httpStatus :: Lens' DescribeRiskConfigurationResponse Int

-- | The risk configuration.
describeRiskConfigurationResponse_riskConfiguration :: Lens' DescribeRiskConfigurationResponse RiskConfigurationType

-- | The name of the group.
deleteGroup_groupName :: Lens' DeleteGroup Text

-- | The user pool ID for the user pool.
deleteGroup_userPoolId :: Lens' DeleteGroup Text

-- | The new precedence value for the group. For more information about
--   this parameter, see <a>CreateGroup</a>.
updateGroup_precedence :: Lens' UpdateGroup (Maybe Natural)

-- | A string containing the new description of the group.
updateGroup_description :: Lens' UpdateGroup (Maybe Text)

-- | The new role ARN for the group. This is used for setting the
--   <tt>cognito:roles</tt> and <tt>cognito:preferred_role</tt> claims in
--   the token.
updateGroup_roleArn :: Lens' UpdateGroup (Maybe Text)

-- | The name of the group.
updateGroup_groupName :: Lens' UpdateGroup Text

-- | The user pool ID for the user pool.
updateGroup_userPoolId :: Lens' UpdateGroup Text

-- | The group object for the group.
updateGroupResponse_group :: Lens' UpdateGroupResponse (Maybe GroupType)

-- | The response's http status code.
updateGroupResponse_httpStatus :: Lens' UpdateGroupResponse Int

-- | The access token.
globalSignOut_accessToken :: Lens' GlobalSignOut Text

-- | The response's http status code.
globalSignOutResponse_httpStatus :: Lens' GlobalSignOutResponse Int

-- | An identifier that was returned from the previous call to this
--   operation, which can be used to return the next set of items in the
--   list.
listGroups_nextToken :: Lens' ListGroups (Maybe Text)

-- | The limit of the request to list groups.
listGroups_limit :: Lens' ListGroups (Maybe Natural)

-- | The user pool ID for the user pool.
listGroups_userPoolId :: Lens' ListGroups Text

-- | The group objects for the groups.
listGroupsResponse_groups :: Lens' ListGroupsResponse (Maybe [GroupType])

-- | An identifier that was returned from the previous call to this
--   operation, which can be used to return the next set of items in the
--   list.
listGroupsResponse_nextToken :: Lens' ListGroupsResponse (Maybe Text)

-- | The response's http status code.
listGroupsResponse_httpStatus :: Lens' ListGroupsResponse Int

-- | A list of identity provider identifiers.
updateIdentityProvider_idpIdentifiers :: Lens' UpdateIdentityProvider (Maybe [Text])

-- | The identity provider attribute mapping to be changed.
updateIdentityProvider_attributeMapping :: Lens' UpdateIdentityProvider (Maybe (HashMap Text Text))

-- | The identity provider details to be updated, such as
--   <tt>MetadataURL</tt> and <tt>MetadataFile</tt>.
updateIdentityProvider_providerDetails :: Lens' UpdateIdentityProvider (Maybe (HashMap Text Text))

-- | The user pool ID.
updateIdentityProvider_userPoolId :: Lens' UpdateIdentityProvider Text

-- | The identity provider name.
updateIdentityProvider_providerName :: Lens' UpdateIdentityProvider Text

-- | The response's http status code.
updateIdentityProviderResponse_httpStatus :: Lens' UpdateIdentityProviderResponse Int

-- | The identity provider object.
updateIdentityProviderResponse_identityProvider :: Lens' UpdateIdentityProviderResponse IdentityProviderType

-- | The user pool ID.
deleteIdentityProvider_userPoolId :: Lens' DeleteIdentityProvider Text

-- | The identity provider name.
deleteIdentityProvider_providerName :: Lens' DeleteIdentityProvider Text

-- | A pagination token.
listResourceServers_nextToken :: Lens' ListResourceServers (Maybe Text)

-- | The maximum number of resource servers to return.
listResourceServers_maxResults :: Lens' ListResourceServers (Maybe Natural)

-- | The user pool ID for the user pool.
listResourceServers_userPoolId :: Lens' ListResourceServers Text

-- | A pagination token.
listResourceServersResponse_nextToken :: Lens' ListResourceServersResponse (Maybe Text)

-- | The response's http status code.
listResourceServersResponse_httpStatus :: Lens' ListResourceServersResponse Int

-- | The resource servers.
listResourceServersResponse_resourceServers :: Lens' ListResourceServersResponse [ResourceServerType]

-- | A map of custom key-value pairs that you can provide as input for any
--   custom workflows that this action triggers.
--   
--   You create custom workflows by assigning Lambda functions to user pool
--   triggers. When you use the AdminRespondToAuthChallenge API action,
--   Amazon Cognito invokes any functions that are assigned to the
--   following triggers: <i>pre sign-up</i>, <i>custom message</i>, <i>post
--   authentication</i>, /user migration<i>, </i>pre token generation<i>,
--   </i>define auth challenge<i>, </i>create auth challenge<i>, and
--   </i>verify auth challenge response/. When Amazon Cognito invokes any
--   of these functions, it passes a JSON payload, which the function
--   receives as input. This payload contains a <tt>clientMetadata</tt>
--   attribute, which provides the data that you assigned to the
--   ClientMetadata parameter in your AdminRespondToAuthChallenge request.
--   In your function code in Lambda, you can process the
--   <tt>clientMetadata</tt> value to enhance your workflow for your
--   specific needs.
--   
--   For more information, see <a>Customizing User Pool Workflows with
--   Lambda Triggers</a> in the <i>Amazon Cognito Developer Guide</i>.
--   
--   Take the following limitations into consideration when you use the
--   ClientMetadata parameter:
--   
--   <ul>
--   <li>Amazon Cognito does not store the ClientMetadata value. This data
--   is available only to Lambda triggers that are assigned to a user pool
--   to support custom workflows. If your user pool configuration does not
--   include triggers, the ClientMetadata parameter serves no purpose.</li>
--   <li>Amazon Cognito does not validate the ClientMetadata value.</li>
--   <li>Amazon Cognito does not encrypt the the ClientMetadata value, so
--   don't use it to provide sensitive information.</li>
--   </ul>
adminRespondToAuthChallenge_clientMetadata :: Lens' AdminRespondToAuthChallenge (Maybe (HashMap Text Text))

-- | Contextual data such as the user's device fingerprint, IP address, or
--   location used for evaluating the risk of an unexpected event by Amazon
--   Cognito advanced security.
adminRespondToAuthChallenge_contextData :: Lens' AdminRespondToAuthChallenge (Maybe ContextDataType)

-- | The analytics metadata for collecting Amazon Pinpoint metrics for
--   <tt>AdminRespondToAuthChallenge</tt> calls.
adminRespondToAuthChallenge_analyticsMetadata :: Lens' AdminRespondToAuthChallenge (Maybe AnalyticsMetadataType)

-- | The challenge responses. These are inputs corresponding to the value
--   of <tt>ChallengeName</tt>, for example:
--   
--   <ul>
--   <li><tt>SMS_MFA</tt>: <tt>SMS_MFA_CODE</tt>, <tt>USERNAME</tt>,
--   <tt>SECRET_HASH</tt> (if app client is configured with client
--   secret).</li>
--   <li><tt>PASSWORD_VERIFIER</tt>: <tt>PASSWORD_CLAIM_SIGNATURE</tt>,
--   <tt>PASSWORD_CLAIM_SECRET_BLOCK</tt>, <tt>TIMESTAMP</tt>,
--   <tt>USERNAME</tt>, <tt>SECRET_HASH</tt> (if app client is configured
--   with client secret).</li>
--   <li><tt>ADMIN_NO_SRP_AUTH</tt>: <tt>PASSWORD</tt>, <tt>USERNAME</tt>,
--   <tt>SECRET_HASH</tt> (if app client is configured with client
--   secret).</li>
--   <li><tt>NEW_PASSWORD_REQUIRED</tt>: <tt>NEW_PASSWORD</tt>, any other
--   required attributes, <tt>USERNAME</tt>, <tt>SECRET_HASH</tt> (if app
--   client is configured with client secret).</li>
--   <li><tt>MFA_SETUP</tt> requires <tt>USERNAME</tt>, plus you need to
--   use the session value returned by <tt>VerifySoftwareToken</tt> in the
--   <tt>Session</tt> parameter.</li>
--   </ul>
--   
--   The value of the <tt>USERNAME</tt> attribute must be the user's actual
--   username, not an alias (such as email address or phone number). To
--   make this easier, the <tt>AdminInitiateAuth</tt> response includes the
--   actual username value in the <tt>USERNAMEUSER_ID_FOR_SRP</tt>
--   attribute, even if you specified an alias in your call to
--   <tt>AdminInitiateAuth</tt>.
adminRespondToAuthChallenge_challengeResponses :: Lens' AdminRespondToAuthChallenge (Maybe (HashMap Text Text))

-- | The session which should be passed both ways in challenge-response
--   calls to the service. If <tt>InitiateAuth</tt> or
--   <tt>RespondToAuthChallenge</tt> API call determines that the caller
--   needs to go through another challenge, they return a session with
--   other challenge parameters. This session should be passed as it is to
--   the next <tt>RespondToAuthChallenge</tt> API call.
adminRespondToAuthChallenge_session :: Lens' AdminRespondToAuthChallenge (Maybe Text)

-- | The ID of the Amazon Cognito user pool.
adminRespondToAuthChallenge_userPoolId :: Lens' AdminRespondToAuthChallenge Text

-- | The app client ID.
adminRespondToAuthChallenge_clientId :: Lens' AdminRespondToAuthChallenge Text

-- | The challenge name. For more information, see
--   <a>AdminInitiateAuth</a>.
adminRespondToAuthChallenge_challengeName :: Lens' AdminRespondToAuthChallenge ChallengeNameType

-- | The name of the challenge. For more information, see
--   <a>AdminInitiateAuth</a>.
adminRespondToAuthChallengeResponse_challengeName :: Lens' AdminRespondToAuthChallengeResponse (Maybe ChallengeNameType)

-- | The challenge parameters. For more information, see
--   <a>AdminInitiateAuth</a>.
adminRespondToAuthChallengeResponse_challengeParameters :: Lens' AdminRespondToAuthChallengeResponse (Maybe (HashMap Text Text))

-- | The result returned by the server in response to the authentication
--   request.
adminRespondToAuthChallengeResponse_authenticationResult :: Lens' AdminRespondToAuthChallengeResponse (Maybe AuthenticationResultType)

-- | The session which should be passed both ways in challenge-response
--   calls to the service. If the caller needs to go through another
--   challenge, they return a session with other challenge parameters. This
--   session should be passed as it is to the next
--   <tt>RespondToAuthChallenge</tt> API call.
adminRespondToAuthChallengeResponse_session :: Lens' AdminRespondToAuthChallengeResponse (Maybe Text)

-- | The response's http status code.
adminRespondToAuthChallengeResponse_httpStatus :: Lens' AdminRespondToAuthChallengeResponse Int

-- | The access token for the set user settings request.
setUserSettings_accessToken :: Lens' SetUserSettings Text

-- | You can use this parameter only to set an SMS configuration that uses
--   SMS for delivery.
setUserSettings_mfaOptions :: Lens' SetUserSettings [MFAOptionType]

-- | The response's http status code.
setUserSettingsResponse_httpStatus :: Lens' SetUserSettingsResponse Int

-- | The pagination token.
adminListDevices_paginationToken :: Lens' AdminListDevices (Maybe Text)

-- | The limit of the devices request.
adminListDevices_limit :: Lens' AdminListDevices (Maybe Natural)

-- | The user pool ID.
adminListDevices_userPoolId :: Lens' AdminListDevices Text

-- | The user name.
adminListDevices_username :: Lens' AdminListDevices Text

-- | The pagination token.
adminListDevicesResponse_paginationToken :: Lens' AdminListDevicesResponse (Maybe Text)

-- | The devices in the list of devices response.
adminListDevicesResponse_devices :: Lens' AdminListDevicesResponse (Maybe [DeviceType])

-- | The response's http status code.
adminListDevicesResponse_httpStatus :: Lens' AdminListDevicesResponse Int

-- | The user pool ID for the user pool you want to describe.
describeUserPoolClient_userPoolId :: Lens' DescribeUserPoolClient Text

-- | The app client ID of the app associated with the user pool.
describeUserPoolClient_clientId :: Lens' DescribeUserPoolClient Text

-- | The user pool client from a server response to describe the user pool
--   client.
describeUserPoolClientResponse_userPoolClient :: Lens' DescribeUserPoolClientResponse (Maybe UserPoolClientType)

-- | The response's http status code.
describeUserPoolClientResponse_httpStatus :: Lens' DescribeUserPoolClientResponse Int

-- | A map of custom key-value pairs that you can provide as input for any
--   custom workflows that this action triggers.
--   
--   You create custom workflows by assigning Lambda functions to user pool
--   triggers. When you use the ResendConfirmationCode API action, Amazon
--   Cognito invokes the function that is assigned to the <i>custom
--   message</i> trigger. When Amazon Cognito invokes this function, it
--   passes a JSON payload, which the function receives as input. This
--   payload contains a <tt>clientMetadata</tt> attribute, which provides
--   the data that you assigned to the ClientMetadata parameter in your
--   ResendConfirmationCode request. In your function code in Lambda, you
--   can process the <tt>clientMetadata</tt> value to enhance your workflow
--   for your specific needs.
--   
--   For more information, see <a>Customizing User Pool Workflows with
--   Lambda Triggers</a> in the <i>Amazon Cognito Developer Guide</i>.
--   
--   Take the following limitations into consideration when you use the
--   ClientMetadata parameter:
--   
--   <ul>
--   <li>Amazon Cognito does not store the ClientMetadata value. This data
--   is available only to Lambda triggers that are assigned to a user pool
--   to support custom workflows. If your user pool configuration does not
--   include triggers, the ClientMetadata parameter serves no purpose.</li>
--   <li>Amazon Cognito does not validate the ClientMetadata value.</li>
--   <li>Amazon Cognito does not encrypt the the ClientMetadata value, so
--   don't use it to provide sensitive information.</li>
--   </ul>
resendConfirmationCode_clientMetadata :: Lens' ResendConfirmationCode (Maybe (HashMap Text Text))

-- | The Amazon Pinpoint analytics metadata for collecting metrics for
--   <tt>ResendConfirmationCode</tt> calls.
resendConfirmationCode_analyticsMetadata :: Lens' ResendConfirmationCode (Maybe AnalyticsMetadataType)

-- | Contextual data such as the user's device fingerprint, IP address, or
--   location used for evaluating the risk of an unexpected event by Amazon
--   Cognito advanced security.
resendConfirmationCode_userContextData :: Lens' ResendConfirmationCode (Maybe UserContextDataType)

-- | A keyed-hash message authentication code (HMAC) calculated using the
--   secret key of a user pool client and username plus the client ID in
--   the message.
resendConfirmationCode_secretHash :: Lens' ResendConfirmationCode (Maybe Text)

-- | The ID of the client associated with the user pool.
resendConfirmationCode_clientId :: Lens' ResendConfirmationCode Text

-- | The user name of the user to whom you wish to resend a confirmation
--   code.
resendConfirmationCode_username :: Lens' ResendConfirmationCode Text

-- | The code delivery details returned by the server in response to the
--   request to resend the confirmation code.
resendConfirmationCodeResponse_codeDeliveryDetails :: Lens' ResendConfirmationCodeResponse (Maybe CodeDeliveryDetailsType)

-- | The response's http status code.
resendConfirmationCodeResponse_httpStatus :: Lens' ResendConfirmationCodeResponse Int

-- | The name of the group.
getGroup_groupName :: Lens' GetGroup Text

-- | The user pool ID for the user pool.
getGroup_userPoolId :: Lens' GetGroup Text

-- | The group object for the group.
getGroupResponse_group :: Lens' GetGroupResponse (Maybe GroupType)

-- | The response's http status code.
getGroupResponse_httpStatus :: Lens' GetGroupResponse Int

-- | The ID of the user pool that contains the user that you are setting
--   options for.
adminSetUserSettings_userPoolId :: Lens' AdminSetUserSettings Text

-- | The user name of the user that you are setting options for.
adminSetUserSettings_username :: Lens' AdminSetUserSettings Text

-- | You can use this parameter only to set an SMS configuration that uses
--   SMS for delivery.
adminSetUserSettings_mfaOptions :: Lens' AdminSetUserSettings [MFAOptionType]

-- | The response's http status code.
adminSetUserSettingsResponse_httpStatus :: Lens' AdminSetUserSettingsResponse Int

-- | The pagination token for the list request.
listDevices_paginationToken :: Lens' ListDevices (Maybe Text)

-- | The limit of the device request.
listDevices_limit :: Lens' ListDevices (Maybe Natural)

-- | The access tokens for the request to list devices.
listDevices_accessToken :: Lens' ListDevices Text

-- | The pagination token for the list device response.
listDevicesResponse_paginationToken :: Lens' ListDevicesResponse (Maybe Text)

-- | The devices returned in the list devices response.
listDevicesResponse_devices :: Lens' ListDevicesResponse (Maybe [DeviceType])

-- | The response's http status code.
listDevicesResponse_httpStatus :: Lens' ListDevicesResponse Int

-- | The list of <tt>RecoveryOptionTypes</tt>.
accountRecoverySettingType_recoveryMechanisms :: Lens' AccountRecoverySettingType (Maybe (NonEmpty RecoveryOptionType))

-- | Flag specifying whether to send a notification.
accountTakeoverActionType_notify :: Lens' AccountTakeoverActionType Bool

-- | The event action.
--   
--   <ul>
--   <li><tt>BLOCK</tt> Choosing this action will block the request.</li>
--   <li><tt>MFA_IF_CONFIGURED</tt> Throw MFA challenge if user has
--   configured it, else allow the request.</li>
--   <li><tt>MFA_REQUIRED</tt> Throw MFA challenge if user has configured
--   it, else block the request.</li>
--   <li><tt>NO_ACTION</tt> Allow the user sign-in.</li>
--   </ul>
accountTakeoverActionType_eventAction :: Lens' AccountTakeoverActionType AccountTakeoverEventActionType

-- | Action to take for a low risk.
accountTakeoverActionsType_lowAction :: Lens' AccountTakeoverActionsType (Maybe AccountTakeoverActionType)

-- | Action to take for a high risk.
accountTakeoverActionsType_highAction :: Lens' AccountTakeoverActionsType (Maybe AccountTakeoverActionType)

-- | Action to take for a medium risk.
accountTakeoverActionsType_mediumAction :: Lens' AccountTakeoverActionsType (Maybe AccountTakeoverActionType)

-- | The notify configuration used to construct email notifications.
accountTakeoverRiskConfigurationType_notifyConfiguration :: Lens' AccountTakeoverRiskConfigurationType (Maybe NotifyConfigurationType)

-- | Account takeover risk configuration actions
accountTakeoverRiskConfigurationType_actions :: Lens' AccountTakeoverRiskConfigurationType AccountTakeoverActionsType

-- | Set to <tt>True</tt> if only the administrator is allowed to create
--   user profiles. Set to <tt>False</tt> if users can sign themselves up
--   via an app.
adminCreateUserConfigType_allowAdminCreateUserOnly :: Lens' AdminCreateUserConfigType (Maybe Bool)

-- | The user account expiration limit, in days, after which the account is
--   no longer usable. To reset the account after that time limit, you must
--   call <tt>AdminCreateUser</tt> again, specifying <tt>"RESEND"</tt> for
--   the <tt>MessageAction</tt> parameter. The default value for this
--   parameter is 7.
--   
--   If you set a value for <tt>TemporaryPasswordValidityDays</tt> in
--   <tt>PasswordPolicy</tt>, that value will be used and
--   <tt>UnusedAccountValidityDays</tt> will be deprecated for that user
--   pool.
adminCreateUserConfigType_unusedAccountValidityDays :: Lens' AdminCreateUserConfigType (Maybe Natural)

-- | The message template to be used for the welcome message to new users.
--   
--   See also <a>Customizing User Invitation Messages</a>.
adminCreateUserConfigType_inviteMessageTemplate :: Lens' AdminCreateUserConfigType (Maybe MessageTemplateType)

-- | The Amazon Resource Name (ARN) of an Amazon Pinpoint project. You can
--   use the Amazon Pinpoint project for Pinpoint integration with the
--   chosen User Pool Client. Amazon Cognito publishes events to the
--   pinpoint project declared by the app ARN.
analyticsConfigurationType_applicationArn :: Lens' AnalyticsConfigurationType (Maybe Text)

-- | If <tt>UserDataShared</tt> is <tt>true</tt>, Amazon Cognito will
--   include user data in the events it publishes to Amazon Pinpoint
--   analytics.
analyticsConfigurationType_userDataShared :: Lens' AnalyticsConfigurationType (Maybe Bool)

-- | The application ID for an Amazon Pinpoint application.
analyticsConfigurationType_applicationId :: Lens' AnalyticsConfigurationType (Maybe Text)

-- | The external ID.
analyticsConfigurationType_externalId :: Lens' AnalyticsConfigurationType (Maybe Text)

-- | The ARN of an IAM role that authorizes Amazon Cognito to publish
--   events to Amazon Pinpoint analytics.
analyticsConfigurationType_roleArn :: Lens' AnalyticsConfigurationType (Maybe Text)

-- | The endpoint ID.
analyticsMetadataType_analyticsEndpointId :: Lens' AnalyticsMetadataType (Maybe Text)

-- | The value of the attribute.
attributeType_value :: Lens' AttributeType (Maybe Text)

-- | The name of the attribute.
attributeType_name :: Lens' AttributeType Text

-- | The event risk.
authEventType_eventRisk :: Lens' AuthEventType (Maybe EventRiskType)

-- | The event response.
authEventType_eventResponse :: Lens' AuthEventType (Maybe EventResponseType)

-- | The user context data captured at the time of an event request. It
--   provides additional information about the client from which event the
--   request is received.
authEventType_eventContextData :: Lens' AuthEventType (Maybe EventContextDataType)

-- | The challenge responses.
authEventType_challengeResponses :: Lens' AuthEventType (Maybe [ChallengeResponseType])

-- | The event type.
authEventType_eventType :: Lens' AuthEventType (Maybe EventType)

-- | The creation date
authEventType_creationDate :: Lens' AuthEventType (Maybe UTCTime)

-- | A flag specifying the user feedback captured at the time of an event
--   request is good or bad.
authEventType_eventFeedback :: Lens' AuthEventType (Maybe EventFeedbackType)

-- | The event ID.
authEventType_eventId :: Lens' AuthEventType (Maybe Text)

-- | The access token.
authenticationResultType_accessToken :: Lens' AuthenticationResultType (Maybe Text)

-- | The refresh token.
authenticationResultType_refreshToken :: Lens' AuthenticationResultType (Maybe Text)

-- | The new device metadata from an authentication result.
authenticationResultType_newDeviceMetadata :: Lens' AuthenticationResultType (Maybe NewDeviceMetadataType)

-- | The expiration period of the authentication result in seconds.
authenticationResultType_expiresIn :: Lens' AuthenticationResultType (Maybe Int)

-- | The token type.
authenticationResultType_tokenType :: Lens' AuthenticationResultType (Maybe Text)

-- | The ID token.
authenticationResultType_idToken :: Lens' AuthenticationResultType (Maybe Text)

-- | The challenge name
challengeResponseType_challengeName :: Lens' ChallengeResponseType (Maybe ChallengeName)

-- | The challenge response.
challengeResponseType_challengeResponse :: Lens' ChallengeResponseType (Maybe ChallengeResponse)

-- | The destination for the code delivery details.
codeDeliveryDetailsType_destination :: Lens' CodeDeliveryDetailsType (Maybe Text)

-- | The delivery medium (email message or phone number).
codeDeliveryDetailsType_deliveryMedium :: Lens' CodeDeliveryDetailsType (Maybe DeliveryMediumType)

-- | The attribute name.
codeDeliveryDetailsType_attributeName :: Lens' CodeDeliveryDetailsType (Maybe Text)

-- | The event action.
compromisedCredentialsActionsType_eventAction :: Lens' CompromisedCredentialsActionsType CompromisedCredentialsEventActionType

-- | Perform the action for these events. The default is to perform all
--   events if no event filter is specified.
compromisedCredentialsRiskConfigurationType_eventFilter :: Lens' CompromisedCredentialsRiskConfigurationType (Maybe [EventFilterType])

-- | The compromised credentials risk configuration actions.
compromisedCredentialsRiskConfigurationType_actions :: Lens' CompromisedCredentialsRiskConfigurationType CompromisedCredentialsActionsType

-- | Encoded data containing device fingerprinting details, collected using
--   the Amazon Cognito context data collection library.
contextDataType_encodedData :: Lens' ContextDataType (Maybe Text)

-- | Source IP address of your user.
contextDataType_ipAddress :: Lens' ContextDataType Text

-- | Your server endpoint where this API is invoked.
contextDataType_serverName :: Lens' ContextDataType Text

-- | Your server path where this API is invoked.
contextDataType_serverPath :: Lens' ContextDataType Text

-- | HttpHeaders received on your server in same order.
contextDataType_httpHeaders :: Lens' ContextDataType [HttpHeader]

-- | The Amazon Resource Name (ARN) of an Certificate Manager SSL
--   certificate. You use this certificate for the subdomain of your custom
--   domain.
customDomainConfigType_certificateArn :: Lens' CustomDomainConfigType Text

-- | The Lambda version represents the signature of the "request" attribute
--   in the "event" information Amazon Cognito passes to your custom email
--   Lambda function. The only supported value is <tt>V1_0</tt>.
customEmailLambdaVersionConfigType_lambdaVersion :: Lens' CustomEmailLambdaVersionConfigType CustomEmailSenderLambdaVersionType

-- | The Lambda Amazon Resource Name of the Lambda function that Amazon
--   Cognito triggers to send email notifications to users.
customEmailLambdaVersionConfigType_lambdaArn :: Lens' CustomEmailLambdaVersionConfigType Text

-- | The Lambda version represents the signature of the "request" attribute
--   in the "event" information Amazon Cognito passes to your custom SMS
--   Lambda function. The only supported value is <tt>V1_0</tt>.
customSMSLambdaVersionConfigType_lambdaVersion :: Lens' CustomSMSLambdaVersionConfigType CustomSMSSenderLambdaVersionType

-- | The Lambda Amazon Resource Name of the Lambda function that Amazon
--   Cognito triggers to send SMS notifications to users.
customSMSLambdaVersionConfigType_lambdaArn :: Lens' CustomSMSLambdaVersionConfigType Text

-- | Indicates whether a challenge is required on a new device. Only
--   applicable to a new device.
deviceConfigurationType_challengeRequiredOnNewDevice :: Lens' DeviceConfigurationType (Maybe Bool)

-- | If true, a device is only remembered on user prompt.
deviceConfigurationType_deviceOnlyRememberedOnUserPrompt :: Lens' DeviceConfigurationType (Maybe Bool)

-- | The password verifier.
deviceSecretVerifierConfigType_passwordVerifier :: Lens' DeviceSecretVerifierConfigType (Maybe Text)

-- | The salt.
deviceSecretVerifierConfigType_salt :: Lens' DeviceSecretVerifierConfigType (Maybe Text)

-- | The last modified date of the device.
deviceType_deviceLastModifiedDate :: Lens' DeviceType (Maybe UTCTime)

-- | The creation date of the device.
deviceType_deviceCreateDate :: Lens' DeviceType (Maybe UTCTime)

-- | The device attributes.
deviceType_deviceAttributes :: Lens' DeviceType (Maybe [AttributeType])

-- | The device key.
deviceType_deviceKey :: Lens' DeviceType (Maybe Text)

-- | The date in which the device was last authenticated.
deviceType_deviceLastAuthenticatedDate :: Lens' DeviceType (Maybe UTCTime)

-- | The domain status.
domainDescriptionType_status :: Lens' DomainDescriptionType (Maybe DomainStatusType)

-- | The ARN of the CloudFront distribution.
domainDescriptionType_cloudFrontDistribution :: Lens' DomainDescriptionType (Maybe Text)

-- | The user pool ID.
domainDescriptionType_userPoolId :: Lens' DomainDescriptionType (Maybe Text)

-- | The domain string.
domainDescriptionType_domain :: Lens' DomainDescriptionType (Maybe Text)

-- | The account ID for the user pool owner.
domainDescriptionType_aWSAccountId :: Lens' DomainDescriptionType (Maybe Text)

-- | The configuration for a custom domain that hosts the sign-up and
--   sign-in webpages for your application.
domainDescriptionType_customDomainConfig :: Lens' DomainDescriptionType (Maybe CustomDomainConfigType)

-- | The app version.
domainDescriptionType_version :: Lens' DomainDescriptionType (Maybe Text)

-- | The S3 bucket where the static files for this domain are stored.
domainDescriptionType_s3Bucket :: Lens' DomainDescriptionType (Maybe Text)

-- | The Amazon Resource Name (ARN) of a verified email address in Amazon
--   SES. This email address is used in one of the following ways,
--   depending on the value that you specify for the
--   <tt>EmailSendingAccount</tt> parameter:
--   
--   <ul>
--   <li>If you specify <tt>COGNITO_DEFAULT</tt>, Amazon Cognito uses this
--   address as the custom FROM address when it emails your users by using
--   its built-in email account.</li>
--   <li>If you specify <tt>DEVELOPER</tt>, Amazon Cognito emails your
--   users with this address by calling Amazon SES on your behalf.</li>
--   </ul>
emailConfigurationType_sourceArn :: Lens' EmailConfigurationType (Maybe Text)

-- | Identifies either the sender’s email address or the sender’s name with
--   their email address. For example, <tt>testuser@example.com</tt> or
--   <tt>Test User &lt;testuser@example.com&gt;</tt>. This address will
--   appear before the body of the email.
emailConfigurationType_from :: Lens' EmailConfigurationType (Maybe Text)

-- | The set of configuration rules that can be applied to emails sent
--   using Amazon SES. A configuration set is applied to an email by
--   including a reference to the configuration set in the headers of the
--   email. Once applied, all of the rules in that configuration set are
--   applied to the email. Configuration sets can be used to apply the
--   following types of rules to emails:
--   
--   <ul>
--   <li>Event publishing – Amazon SES can track the number of send,
--   delivery, open, click, bounce, and complaint events for each email
--   sent. Use event publishing to send information about these events to
--   other Amazon Web Services services such as SNS and CloudWatch.</li>
--   <li>IP pool management – When leasing dedicated IP addresses with
--   Amazon SES, you can create groups of IP addresses, called dedicated IP
--   pools. You can then associate the dedicated IP pools with
--   configuration sets.</li>
--   </ul>
emailConfigurationType_configurationSet :: Lens' EmailConfigurationType (Maybe Text)

-- | The destination to which the receiver of the email should reply to.
emailConfigurationType_replyToEmailAddress :: Lens' EmailConfigurationType (Maybe Text)

-- | Specifies whether Amazon Cognito emails your users by using its
--   built-in email functionality or your Amazon SES email configuration.
--   Specify one of the following values:
--   
--   <ul>
--   <li><i>COGNITO_DEFAULT</i> When Amazon Cognito emails your users, it
--   uses its built-in email functionality. When you use the default
--   option, Amazon Cognito allows only a limited number of emails each day
--   for your user pool. For typical production environments, the default
--   email limit is below the required delivery volume. To achieve a higher
--   delivery volume, specify DEVELOPER to use your Amazon SES email
--   configuration.To look up the email delivery limit for the default
--   option, see <a>Limits in Amazon Cognito</a> in the <i>Amazon Cognito
--   Developer Guide</i>.The default FROM address is
--   no-reply@verificationemail.com. To customize the FROM address, provide
--   the ARN of an Amazon SES verified email address for the
--   <tt>SourceArn</tt> parameter.If EmailSendingAccount is
--   COGNITO_DEFAULT, the following parameters aren't
--   allowed:<ul><li>EmailVerificationMessage</li><li>EmailVerificationSubject</li><li>InviteMessageTemplate.EmailMessage</li><li>InviteMessageTemplate.EmailSubject</li><li>VerificationMessageTemplate.EmailMessage</li><li>VerificationMessageTemplate.EmailMessageByLink</li><li>VerificationMessageTemplate.EmailSubject,</li><li>VerificationMessageTemplate.EmailSubjectByLink</li></ul>DEVELOPER
--   EmailSendingAccount is required.</li>
--   <li><i>DEVELOPER</i> When Amazon Cognito emails your users, it uses
--   your Amazon SES configuration. Amazon Cognito calls Amazon SES on your
--   behalf to send email from your verified email address. When you use
--   this option, the email delivery limits are the same limits that apply
--   to your Amazon SES verified email address in your account.If you use
--   this option, you must provide the ARN of an Amazon SES verified email
--   address for the <tt>SourceArn</tt> parameter.Before Amazon Cognito can
--   email your users, it requires additional permissions to call Amazon
--   SES on your behalf. When you update your user pool with this option,
--   Amazon Cognito creates a /service-linked role/, which is a type of IAM
--   role, in your account. This role contains the permissions that allow
--   Amazon Cognito to access Amazon SES and send email messages with your
--   address. For more information about the service-linked role that
--   Amazon Cognito creates, see <a>Using Service-Linked Roles for Amazon
--   Cognito</a> in the <i>Amazon Cognito Developer Guide</i>.</li>
--   </ul>
emailConfigurationType_emailSendingAccount :: Lens' EmailConfigurationType (Maybe EmailSendingAccountType)

-- | The user's IP address.
eventContextDataType_ipAddress :: Lens' EventContextDataType (Maybe Text)

-- | The user's country.
eventContextDataType_country :: Lens' EventContextDataType (Maybe Text)

-- | The user's city.
eventContextDataType_city :: Lens' EventContextDataType (Maybe Text)

-- | The user's device name.
eventContextDataType_deviceName :: Lens' EventContextDataType (Maybe Text)

-- | The user's time zone.
eventContextDataType_timezone :: Lens' EventContextDataType (Maybe Text)

-- | The event feedback date.
eventFeedbackType_feedbackDate :: Lens' EventFeedbackType (Maybe UTCTime)

-- | The event feedback value.
eventFeedbackType_feedbackValue :: Lens' EventFeedbackType FeedbackValueType

-- | The provider.
eventFeedbackType_provider :: Lens' EventFeedbackType Text

-- | Indicates whether compromised credentials were detected during an
--   authentication event.
eventRiskType_compromisedCredentialsDetected :: Lens' EventRiskType (Maybe Bool)

-- | The risk level.
eventRiskType_riskLevel :: Lens' EventRiskType (Maybe RiskLevelType)

-- | The risk decision.
eventRiskType_riskDecision :: Lens' EventRiskType (Maybe RiskDecisionType)

-- | The date the group was last modified.
groupType_lastModifiedDate :: Lens' GroupType (Maybe UTCTime)

-- | The user pool ID for the user pool.
groupType_userPoolId :: Lens' GroupType (Maybe Text)

-- | The date the group was created.
groupType_creationDate :: Lens' GroupType (Maybe UTCTime)

-- | A nonnegative integer value that specifies the precedence of this
--   group relative to the other groups that a user can belong to in the
--   user pool. If a user belongs to two or more groups, it is the group
--   with the highest precedence whose role ARN will be used in the
--   <tt>cognito:roles</tt> and <tt>cognito:preferred_role</tt> claims in
--   the user's tokens. Groups with higher <tt>Precedence</tt> values take
--   precedence over groups with lower <tt>Precedence</tt> values or with
--   null <tt>Precedence</tt> values.
--   
--   Two groups can have the same <tt>Precedence</tt> value. If this
--   happens, neither group takes precedence over the other. If two groups
--   with the same <tt>Precedence</tt> have the same role ARN, that role is
--   used in the <tt>cognito:preferred_role</tt> claim in tokens for users
--   in each group. If the two groups have different role ARNs, the
--   <tt>cognito:preferred_role</tt> claim is not set in users' tokens.
--   
--   The default <tt>Precedence</tt> value is null.
groupType_precedence :: Lens' GroupType (Maybe Natural)

-- | The name of the group.
groupType_groupName :: Lens' GroupType (Maybe Text)

-- | A string containing the description of the group.
groupType_description :: Lens' GroupType (Maybe Text)

-- | The role ARN for the group.
groupType_roleArn :: Lens' GroupType (Maybe Text)

-- | The header value.
httpHeader_headerValue :: Lens' HttpHeader (Maybe Text)

-- | The header name
httpHeader_headerName :: Lens' HttpHeader (Maybe Text)

-- | The date the identity provider was last modified.
identityProviderType_lastModifiedDate :: Lens' IdentityProviderType (Maybe UTCTime)

-- | The user pool ID.
identityProviderType_userPoolId :: Lens' IdentityProviderType (Maybe Text)

-- | The identity provider type.
identityProviderType_providerType :: Lens' IdentityProviderType (Maybe IdentityProviderTypeType)

-- | The date the identity provider was created.
identityProviderType_creationDate :: Lens' IdentityProviderType (Maybe UTCTime)

-- | A list of identity provider identifiers.
identityProviderType_idpIdentifiers :: Lens' IdentityProviderType (Maybe [Text])

-- | A mapping of identity provider attributes to standard and custom user
--   pool attributes.
identityProviderType_attributeMapping :: Lens' IdentityProviderType (Maybe (HashMap Text Text))

-- | The identity provider details. The following list describes the
--   provider detail keys for each identity provider type.
--   
--   <ul>
--   <li>For Google and Login with
--   Amazon:<ul><li>client_id</li><li>client_secret</li><li>authorize_scopes</li></ul></li>
--   <li>For
--   Facebook:<ul><li>client_id</li><li>client_secret</li><li>authorize_scopes</li><li>api_version</li></ul></li>
--   <li>For Sign in with
--   Apple:<ul><li>client_id</li><li>team_id</li><li>key_id</li><li>private_key</li><li>authorize_scopes</li></ul></li>
--   <li>For OIDC
--   providers:<ul><li>client_id</li><li>client_secret</li><li>attributes_request_method</li><li>oidc_issuer</li><li>authorize_scopes</li><li>authorize_url
--   /if not available from discovery URL specified by oidc_issuer
--   key/</li><li>token_url /if not available from discovery URL specified
--   by oidc_issuer key/</li><li>attributes_url /if not available from
--   discovery URL specified by oidc_issuer key/</li><li>jwks_uri /if not
--   available from discovery URL specified by oidc_issuer
--   key/</li></ul></li>
--   <li>For SAML providers:<ul><li>MetadataFile OR
--   MetadataURL</li><li>IDPSignOut <i>optional</i></li></ul></li>
--   </ul>
identityProviderType_providerDetails :: Lens' IdentityProviderType (Maybe (HashMap Text Text))

-- | The identity provider name.
identityProviderType_providerName :: Lens' IdentityProviderType (Maybe Text)

-- | A pre-authentication Lambda trigger.
lambdaConfigType_preAuthentication :: Lens' LambdaConfigType (Maybe Text)

-- | Creates an authentication challenge.
lambdaConfigType_createAuthChallenge :: Lens' LambdaConfigType (Maybe Text)

-- | Verifies the authentication challenge response.
lambdaConfigType_verifyAuthChallengeResponse :: Lens' LambdaConfigType (Maybe Text)

-- | A custom SMS sender Lambda trigger.
lambdaConfigType_customSMSSender :: Lens' LambdaConfigType (Maybe CustomSMSLambdaVersionConfigType)

-- | A post-authentication Lambda trigger.
lambdaConfigType_postAuthentication :: Lens' LambdaConfigType (Maybe Text)

-- | A custom Message Lambda trigger.
lambdaConfigType_customMessage :: Lens' LambdaConfigType (Maybe Text)

-- | Defines the authentication challenge.
lambdaConfigType_defineAuthChallenge :: Lens' LambdaConfigType (Maybe Text)

-- | A custom email sender Lambda trigger.
lambdaConfigType_customEmailSender :: Lens' LambdaConfigType (Maybe CustomEmailLambdaVersionConfigType)

-- | The Amazon Resource Name of Key Management Service <a>Customer master
--   keys</a> . Amazon Cognito uses the key to encrypt codes and temporary
--   passwords sent to <tt>CustomEmailSender</tt> and
--   <tt>CustomSMSSender</tt>.
lambdaConfigType_kmsKeyID :: Lens' LambdaConfigType (Maybe Text)

-- | A post-confirmation Lambda trigger.
lambdaConfigType_postConfirmation :: Lens' LambdaConfigType (Maybe Text)

-- | A Lambda trigger that is invoked before token generation.
lambdaConfigType_preTokenGeneration :: Lens' LambdaConfigType (Maybe Text)

-- | The user migration Lambda config type.
lambdaConfigType_userMigration :: Lens' LambdaConfigType (Maybe Text)

-- | A pre-registration Lambda trigger.
lambdaConfigType_preSignUp :: Lens' LambdaConfigType (Maybe Text)

-- | The delivery medium to send the MFA code. You can use this parameter
--   to set only the <tt>SMS</tt> delivery medium value.
mfaOptionType_deliveryMedium :: Lens' MFAOptionType (Maybe DeliveryMediumType)

-- | The attribute name of the MFA option type. The only valid value is
--   <tt>phone_number</tt>.
mfaOptionType_attributeName :: Lens' MFAOptionType (Maybe Text)

-- | The subject line for email messages. EmailSubject is allowed only if
--   <a>EmailSendingAccount</a> is DEVELOPER.
messageTemplateType_emailSubject :: Lens' MessageTemplateType (Maybe Text)

-- | The message template for SMS messages.
messageTemplateType_sMSMessage :: Lens' MessageTemplateType (Maybe Text)

-- | The message template for email messages. EmailMessage is allowed only
--   if <a>EmailSendingAccount</a> is DEVELOPER.
messageTemplateType_emailMessage :: Lens' MessageTemplateType (Maybe Text)

-- | The device group key.
newDeviceMetadataType_deviceGroupKey :: Lens' NewDeviceMetadataType (Maybe Text)

-- | The device key.
newDeviceMetadataType_deviceKey :: Lens' NewDeviceMetadataType (Maybe Text)

-- | The email template used when a detected risk event is allowed.
notifyConfigurationType_noActionEmail :: Lens' NotifyConfigurationType (Maybe NotifyEmailType)

-- | The email address that is sending the email. It must be either
--   individually verified with Amazon SES, or from a domain that has been
--   verified with Amazon SES.
notifyConfigurationType_from :: Lens' NotifyConfigurationType (Maybe Text)

-- | The destination to which the receiver of an email should reply to.
notifyConfigurationType_replyTo :: Lens' NotifyConfigurationType (Maybe Text)

-- | Email template used when a detected risk event is blocked.
notifyConfigurationType_blockEmail :: Lens' NotifyConfigurationType (Maybe NotifyEmailType)

-- | The MFA email template used when MFA is challenged as part of a
--   detected risk.
notifyConfigurationType_mfaEmail :: Lens' NotifyConfigurationType (Maybe NotifyEmailType)

-- | The Amazon Resource Name (ARN) of the identity that is associated with
--   the sending authorization policy. It permits Amazon Cognito to send
--   for the email address specified in the <tt>From</tt> parameter.
notifyConfigurationType_sourceArn :: Lens' NotifyConfigurationType Text

-- | The text body.
notifyEmailType_textBody :: Lens' NotifyEmailType (Maybe Text)

-- | The HTML body.
notifyEmailType_htmlBody :: Lens' NotifyEmailType (Maybe Text)

-- | The subject.
notifyEmailType_subject :: Lens' NotifyEmailType Text

-- | The maximum value of an attribute that is of the number data type.
numberAttributeConstraintsType_maxValue :: Lens' NumberAttributeConstraintsType (Maybe Text)

-- | The minimum value of an attribute that is of the number data type.
numberAttributeConstraintsType_minValue :: Lens' NumberAttributeConstraintsType (Maybe Text)

-- | In the password policy that you have set, refers to whether you have
--   required users to use at least one number in their password.
passwordPolicyType_requireNumbers :: Lens' PasswordPolicyType (Maybe Bool)

-- | In the password policy that you have set, refers to whether you have
--   required users to use at least one uppercase letter in their password.
passwordPolicyType_requireUppercase :: Lens' PasswordPolicyType (Maybe Bool)

-- | In the password policy that you have set, refers to whether you have
--   required users to use at least one lowercase letter in their password.
passwordPolicyType_requireLowercase :: Lens' PasswordPolicyType (Maybe Bool)

-- | The minimum length of the password policy that you have set. Cannot be
--   less than 6.
passwordPolicyType_minimumLength :: Lens' PasswordPolicyType (Maybe Natural)

-- | In the password policy that you have set, refers to whether you have
--   required users to use at least one symbol in their password.
passwordPolicyType_requireSymbols :: Lens' PasswordPolicyType (Maybe Bool)

-- | In the password policy you have set, refers to the number of days a
--   temporary password is valid. If the user does not sign-in during this
--   time, their password will need to be reset by an administrator.
--   
--   When you set <tt>TemporaryPasswordValidityDays</tt> for a user pool,
--   you will no longer be able to set the deprecated
--   <tt>UnusedAccountValidityDays</tt> value for that user pool.
passwordPolicyType_temporaryPasswordValidityDays :: Lens' PasswordPolicyType (Maybe Natural)

-- | The date the provider was last modified.
providerDescription_lastModifiedDate :: Lens' ProviderDescription (Maybe UTCTime)

-- | The identity provider type.
providerDescription_providerType :: Lens' ProviderDescription (Maybe IdentityProviderTypeType)

-- | The date the provider was added to the user pool.
providerDescription_creationDate :: Lens' ProviderDescription (Maybe UTCTime)

-- | The identity provider name.
providerDescription_providerName :: Lens' ProviderDescription (Maybe Text)

-- | The value of the provider attribute to link to, for example,
--   <tt>xxxxx_account</tt>.
providerUserIdentifierType_providerAttributeValue :: Lens' ProviderUserIdentifierType (Maybe Text)

-- | The name of the provider attribute to link to, for example,
--   <tt>NameID</tt>.
providerUserIdentifierType_providerAttributeName :: Lens' ProviderUserIdentifierType (Maybe Text)

-- | The name of the provider, for example, Facebook, Google, or Login with
--   Amazon.
providerUserIdentifierType_providerName :: Lens' ProviderUserIdentifierType (Maybe Text)

-- | A positive integer specifying priority of a method with 1 being the
--   highest priority.
recoveryOptionType_priority :: Lens' RecoveryOptionType Natural

-- | Specifies the recovery method for a user.
recoveryOptionType_name :: Lens' RecoveryOptionType RecoveryOptionNameType

-- | The name of the scope.
resourceServerScopeType_scopeName :: Lens' ResourceServerScopeType Text

-- | A description of the scope.
resourceServerScopeType_scopeDescription :: Lens' ResourceServerScopeType Text

-- | The user pool ID for the user pool that hosts the resource server.
resourceServerType_userPoolId :: Lens' ResourceServerType (Maybe Text)

-- | The identifier for the resource server.
resourceServerType_identifier :: Lens' ResourceServerType (Maybe Text)

-- | A list of scopes that are defined for the resource server.
resourceServerType_scopes :: Lens' ResourceServerType (Maybe [ResourceServerScopeType])

-- | The name of the resource server.
resourceServerType_name :: Lens' ResourceServerType (Maybe Text)

-- | The configuration to override the risk decision.
riskConfigurationType_riskExceptionConfiguration :: Lens' RiskConfigurationType (Maybe RiskExceptionConfigurationType)

-- | The app client ID.
riskConfigurationType_clientId :: Lens' RiskConfigurationType (Maybe Text)

-- | The account takeover risk configuration object including the
--   <tt>NotifyConfiguration</tt> object and <tt>Actions</tt> to take in
--   the case of an account takeover.
riskConfigurationType_accountTakeoverRiskConfiguration :: Lens' RiskConfigurationType (Maybe AccountTakeoverRiskConfigurationType)

-- | The last modified date.
riskConfigurationType_lastModifiedDate :: Lens' RiskConfigurationType (Maybe UTCTime)

-- | The user pool ID.
riskConfigurationType_userPoolId :: Lens' RiskConfigurationType (Maybe Text)

-- | The compromised credentials risk configuration object including the
--   <tt>EventFilter</tt> and the <tt>EventAction</tt>
riskConfigurationType_compromisedCredentialsRiskConfiguration :: Lens' RiskConfigurationType (Maybe CompromisedCredentialsRiskConfigurationType)

-- | Risk detection is not performed on the IP addresses in the range list.
--   The IP range is in CIDR notation.
riskExceptionConfigurationType_skippedIPRangeList :: Lens' RiskExceptionConfigurationType (Maybe [Text])

-- | Overrides the risk decision to always block the pre-authentication
--   requests. The IP range is in CIDR notation: a compact representation
--   of an IP address and its associated routing prefix.
riskExceptionConfigurationType_blockedIPRangeList :: Lens' RiskExceptionConfigurationType (Maybe [Text])

-- | Specifies whether SMS text message MFA is enabled. If an MFA type is
--   enabled for a user, the user will be prompted for MFA during all sign
--   in attempts, unless device tracking is turned on and the device has
--   been trusted.
sMSMfaSettingsType_enabled :: Lens' SMSMfaSettingsType (Maybe Bool)

-- | Specifies whether SMS is the preferred MFA method.
sMSMfaSettingsType_preferredMfa :: Lens' SMSMfaSettingsType (Maybe Bool)

-- | Specifies the constraints for an attribute of the number type.
schemaAttributeType_numberAttributeConstraints :: Lens' SchemaAttributeType (Maybe NumberAttributeConstraintsType)

-- | Specifies whether a user pool attribute is required. If the attribute
--   is required and the user does not provide a value, registration or
--   sign-in will fail.
schemaAttributeType_required :: Lens' SchemaAttributeType (Maybe Bool)

-- | The attribute data type.
schemaAttributeType_attributeDataType :: Lens' SchemaAttributeType (Maybe AttributeDataType)

-- | Specifies the constraints for an attribute of the string type.
schemaAttributeType_stringAttributeConstraints :: Lens' SchemaAttributeType (Maybe StringAttributeConstraintsType)

-- | A schema attribute of the name type.
schemaAttributeType_name :: Lens' SchemaAttributeType (Maybe Text)

-- | We recommend that you use <a>WriteAttributes</a> in the user pool
--   client to control how attributes can be mutated for new use cases
--   instead of using <tt>DeveloperOnlyAttribute</tt>.
--   
--   Specifies whether the attribute type is developer only. This attribute
--   can only be modified by an administrator. Users will not be able to
--   modify this attribute using their access token. For example,
--   <tt>DeveloperOnlyAttribute</tt> can be modified using
--   AdminUpdateUserAttributes but cannot be updated using
--   UpdateUserAttributes.
schemaAttributeType_developerOnlyAttribute :: Lens' SchemaAttributeType (Maybe Bool)

-- | Specifies whether the value of the attribute can be changed.
--   
--   For any user pool attribute that's mapped to an identity provider
--   attribute, you must set this parameter to <tt>true</tt>. Amazon
--   Cognito updates mapped attributes when users sign in to your
--   application through an identity provider. If an attribute is
--   immutable, Amazon Cognito throws an error when it attempts to update
--   the attribute. For more information, see <a>Specifying Identity
--   Provider Attribute Mappings for Your User Pool</a>.
schemaAttributeType_mutable :: Lens' SchemaAttributeType (Maybe Bool)

-- | The external ID is a value that we recommend you use to add security
--   to your IAM role which is used to call Amazon SNS to send SMS messages
--   for your user pool. If you provide an <tt>ExternalId</tt>, the Cognito
--   User Pool will include it when attempting to assume your IAM role, so
--   that you can set your roles trust policy to require the
--   <tt>ExternalID</tt>. If you use the Cognito Management Console to
--   create a role for SMS MFA, Cognito will create a role with the
--   required permissions and a trust policy that demonstrates use of the
--   <tt>ExternalId</tt>.
--   
--   For more information about the <tt>ExternalId</tt> of a role, see
--   <a>How to use an external ID when granting access to your Amazon Web
--   Services resources to a third party</a>
smsConfigurationType_externalId :: Lens' SmsConfigurationType (Maybe Text)

-- | The Amazon Resource Name (ARN) of the Amazon Simple Notification
--   Service (SNS) caller. This is the ARN of the IAM role in your account
--   which Cognito will use to send SMS messages. SMS messages are subject
--   to a <a>spending limit</a>.
smsConfigurationType_snsCallerArn :: Lens' SmsConfigurationType Text

-- | The SMS authentication message that will be sent to users with the
--   code they need to sign in. The message must contain the ‘{####}’
--   placeholder, which will be replaced with the code. If the message is
--   not included, and default message will be used.
smsMfaConfigType_smsAuthenticationMessage :: Lens' SmsMfaConfigType (Maybe Text)

-- | The SMS configuration.
smsMfaConfigType_smsConfiguration :: Lens' SmsMfaConfigType (Maybe SmsConfigurationType)

-- | Specifies whether software token MFA is enabled.
softwareTokenMfaConfigType_enabled :: Lens' SoftwareTokenMfaConfigType (Maybe Bool)

-- | Specifies whether software token MFA is enabled. If an MFA type is
--   enabled for a user, the user will be prompted for MFA during all sign
--   in attempts, unless device tracking is turned on and the device has
--   been trusted.
softwareTokenMfaSettingsType_enabled :: Lens' SoftwareTokenMfaSettingsType (Maybe Bool)

-- | Specifies whether software token MFA is the preferred MFA method.
softwareTokenMfaSettingsType_preferredMfa :: Lens' SoftwareTokenMfaSettingsType (Maybe Bool)

-- | The maximum length.
stringAttributeConstraintsType_maxLength :: Lens' StringAttributeConstraintsType (Maybe Text)

-- | The minimum length.
stringAttributeConstraintsType_minLength :: Lens' StringAttributeConstraintsType (Maybe Text)

-- | A time unit in “seconds”, “minutes”, “hours” or “days” for the value
--   in AccessTokenValidity, defaults to hours.
tokenValidityUnitsType_accessToken :: Lens' TokenValidityUnitsType (Maybe TimeUnitsType)

-- | A time unit in “seconds”, “minutes”, “hours” or “days” for the value
--   in RefreshTokenValidity, defaults to days.
tokenValidityUnitsType_refreshToken :: Lens' TokenValidityUnitsType (Maybe TimeUnitsType)

-- | A time unit in “seconds”, “minutes”, “hours” or “days” for the value
--   in IdTokenValidity, defaults to hours.
tokenValidityUnitsType_idToken :: Lens' TokenValidityUnitsType (Maybe TimeUnitsType)

-- | The client ID for the client app.
uICustomizationType_clientId :: Lens' UICustomizationType (Maybe Text)

-- | The last-modified date for the UI customization.
uICustomizationType_lastModifiedDate :: Lens' UICustomizationType (Maybe UTCTime)

-- | The user pool ID for the user pool.
uICustomizationType_userPoolId :: Lens' UICustomizationType (Maybe Text)

-- | The CSS values in the UI customization.
uICustomizationType_css :: Lens' UICustomizationType (Maybe Text)

-- | The CSS version number.
uICustomizationType_cSSVersion :: Lens' UICustomizationType (Maybe Text)

-- | The logo image for the UI customization.
uICustomizationType_imageUrl :: Lens' UICustomizationType (Maybe Text)

-- | The creation date for the UI customization.
uICustomizationType_creationDate :: Lens' UICustomizationType (Maybe UTCTime)

-- | Contextual data such as the user's device fingerprint, IP address, or
--   location used for evaluating the risk of an unexpected event by Amazon
--   Cognito advanced security.
userContextDataType_encodedData :: Lens' UserContextDataType (Maybe Text)

-- | The status of the user import job. One of the following:
--   
--   <ul>
--   <li><tt>Created</tt> - The job was created but not started.</li>
--   <li><tt>Pending</tt> - A transition state. You have started the job,
--   but it has not begun importing users yet.</li>
--   <li><tt>InProgress</tt> - The job has started, and users are being
--   imported.</li>
--   <li><tt>Stopping</tt> - You have stopped the job, but the job has not
--   stopped importing users yet.</li>
--   <li><tt>Stopped</tt> - You have stopped the job, and the job has
--   stopped importing users.</li>
--   <li><tt>Succeeded</tt> - The job has completed successfully.</li>
--   <li><tt>Failed</tt> - The job has stopped due to an error.</li>
--   <li><tt>Expired</tt> - You created a job, but did not start the job
--   within 24-48 hours. All data associated with the job was deleted, and
--   the job cannot be started.</li>
--   </ul>
userImportJobType_status :: Lens' UserImportJobType (Maybe UserImportJobStatusType)

-- | The number of users that were skipped.
userImportJobType_skippedUsers :: Lens' UserImportJobType (Maybe Integer)

-- | The job ID for the user import job.
userImportJobType_jobId :: Lens' UserImportJobType (Maybe Text)

-- | The user pool ID for the user pool that the users are being imported
--   into.
userImportJobType_userPoolId :: Lens' UserImportJobType (Maybe Text)

-- | The job name for the user import job.
userImportJobType_jobName :: Lens' UserImportJobType (Maybe Text)

-- | The pre-signed URL to be used to upload the <tt>.csv</tt> file.
userImportJobType_preSignedUrl :: Lens' UserImportJobType (Maybe Text)

-- | The number of users that could not be imported.
userImportJobType_failedUsers :: Lens' UserImportJobType (Maybe Integer)

-- | The date when the user import job was started.
userImportJobType_startDate :: Lens' UserImportJobType (Maybe UTCTime)

-- | The message returned when the user import job is completed.
userImportJobType_completionMessage :: Lens' UserImportJobType (Maybe Text)

-- | The date the user import job was created.
userImportJobType_creationDate :: Lens' UserImportJobType (Maybe UTCTime)

-- | The date when the user import job was completed.
userImportJobType_completionDate :: Lens' UserImportJobType (Maybe UTCTime)

-- | The role ARN for the Amazon CloudWatch Logging role for the user
--   import job. For more information, see "Creating the CloudWatch Logs
--   IAM Role" in the Amazon Cognito Developer Guide.
userImportJobType_cloudWatchLogsRoleArn :: Lens' UserImportJobType (Maybe Text)

-- | The number of users that were successfully imported.
userImportJobType_importedUsers :: Lens' UserImportJobType (Maybe Integer)

-- | The advanced security mode.
userPoolAddOnsType_advancedSecurityMode :: Lens' UserPoolAddOnsType AdvancedSecurityModeType

-- | The ID of the client associated with the user pool.
userPoolClientDescription_clientId :: Lens' UserPoolClientDescription (Maybe Text)

-- | The user pool ID for the user pool where you want to describe the user
--   pool client.
userPoolClientDescription_userPoolId :: Lens' UserPoolClientDescription (Maybe Text)

-- | The client name from the user pool client description.
userPoolClientDescription_clientName :: Lens' UserPoolClientDescription (Maybe Text)

-- | The time limit, in days, after which the refresh token is no longer
--   valid and cannot be used.
userPoolClientType_refreshTokenValidity :: Lens' UserPoolClientType (Maybe Natural)

-- | The ID of the client associated with the user pool.
userPoolClientType_clientId :: Lens' UserPoolClientType (Maybe Text)

-- | The authentication flows that are supported by the user pool clients.
--   Flow names without the <tt>ALLOW_</tt> prefix are deprecated in favor
--   of new names with the <tt>ALLOW_</tt> prefix. Note that values with
--   <tt>ALLOW_</tt> prefix cannot be used along with values without
--   <tt>ALLOW_</tt> prefix.
--   
--   Valid values include:
--   
--   <ul>
--   <li><tt>ALLOW_ADMIN_USER_PASSWORD_AUTH</tt>: Enable admin based user
--   password authentication flow <tt>ADMIN_USER_PASSWORD_AUTH</tt>. This
--   setting replaces the <tt>ADMIN_NO_SRP_AUTH</tt> setting. With this
--   authentication flow, Cognito receives the password in the request
--   instead of using the SRP (Secure Remote Password protocol) protocol to
--   verify passwords.</li>
--   <li><tt>ALLOW_CUSTOM_AUTH</tt>: Enable Lambda trigger based
--   authentication.</li>
--   <li><tt>ALLOW_USER_PASSWORD_AUTH</tt>: Enable user password-based
--   authentication. In this flow, Cognito receives the password in the
--   request instead of using the SRP protocol to verify passwords.</li>
--   <li><tt>ALLOW_USER_SRP_AUTH</tt>: Enable SRP based
--   authentication.</li>
--   <li><tt>ALLOW_REFRESH_TOKEN_AUTH</tt>: Enable authflow to refresh
--   tokens.</li>
--   </ul>
userPoolClientType_explicitAuthFlows :: Lens' UserPoolClientType (Maybe [ExplicitAuthFlowsType])

-- | The client secret from the user pool request of the client type.
userPoolClientType_clientSecret :: Lens' UserPoolClientType (Maybe Text)

-- | The date the user pool client was last modified.
userPoolClientType_lastModifiedDate :: Lens' UserPoolClientType (Maybe UTCTime)

-- | A list of provider names for the identity providers that are supported
--   on this client.
userPoolClientType_supportedIdentityProviders :: Lens' UserPoolClientType (Maybe [Text])

-- | A list of allowed logout URLs for the identity providers.
userPoolClientType_logoutURLs :: Lens' UserPoolClientType (Maybe [Text])

-- | Set to true if the client is allowed to follow the OAuth protocol when
--   interacting with Cognito user pools.
userPoolClientType_allowedOAuthFlowsUserPoolClient :: Lens' UserPoolClientType (Maybe Bool)

-- | The user pool ID for the user pool client.
userPoolClientType_userPoolId :: Lens' UserPoolClientType (Maybe Text)

-- | The time limit, specified by tokenValidityUnits, defaulting to hours,
--   after which the refresh token is no longer valid and cannot be used.
userPoolClientType_idTokenValidity :: Lens' UserPoolClientType (Maybe Natural)

-- | The time units used to specify the token validity times of their
--   respective token.
userPoolClientType_tokenValidityUnits :: Lens' UserPoolClientType (Maybe TokenValidityUnitsType)

-- | The default redirect URI. Must be in the <tt>CallbackURLs</tt> list.
--   
--   A redirect URI must:
--   
--   <ul>
--   <li>Be an absolute URI.</li>
--   <li>Be registered with the authorization server.</li>
--   <li>Not include a fragment component.</li>
--   </ul>
--   
--   See <a>OAuth 2.0 - Redirection Endpoint</a>.
--   
--   Amazon Cognito requires HTTPS over HTTP except for http://localhost
--   for testing purposes only.
--   
--   App callback URLs such as myapp://example are also supported.
userPoolClientType_defaultRedirectURI :: Lens' UserPoolClientType (Maybe Text)

-- | Indicates whether token revocation is enabled for the user pool
--   client. When you create a new user pool client, token revocation is
--   enabled by default. For more information about revoking tokens, see
--   <a>RevokeToken</a>.
userPoolClientType_enableTokenRevocation :: Lens' UserPoolClientType (Maybe Bool)

-- | The writeable attributes.
userPoolClientType_writeAttributes :: Lens' UserPoolClientType (Maybe [Text])

-- | Use this setting to choose which errors and responses are returned by
--   Cognito APIs during authentication, account confirmation, and password
--   recovery when the user does not exist in the user pool. When set to
--   <tt>ENABLED</tt> and the user does not exist, authentication returns
--   an error indicating either the username or password was incorrect, and
--   account confirmation and password recovery return a response
--   indicating a code was sent to a simulated destination. When set to
--   <tt>LEGACY</tt>, those APIs will return a
--   <tt>UserNotFoundException</tt> exception if the user does not exist in
--   the user pool.
--   
--   Valid values include:
--   
--   <ul>
--   <li><tt>ENABLED</tt> - This prevents user existence-related
--   errors.</li>
--   <li><tt>LEGACY</tt> - This represents the old behavior of Cognito
--   where user existence related errors are not prevented.</li>
--   </ul>
--   
--   After February 15th 2020, the value of
--   <tt>PreventUserExistenceErrors</tt> will default to <tt>ENABLED</tt>
--   for newly created user pool clients if no value is provided.
userPoolClientType_preventUserExistenceErrors :: Lens' UserPoolClientType (Maybe PreventUserExistenceErrorTypes)

-- | The time limit, specified by tokenValidityUnits, defaulting to hours,
--   after which the access token is no longer valid and cannot be used.
userPoolClientType_accessTokenValidity :: Lens' UserPoolClientType (Maybe Natural)

-- | The date the user pool client was created.
userPoolClientType_creationDate :: Lens' UserPoolClientType (Maybe UTCTime)

-- | The Read-only attributes.
userPoolClientType_readAttributes :: Lens' UserPoolClientType (Maybe [Text])

-- | The allowed OAuth scopes. Possible values provided by OAuth are:
--   <tt>phone</tt>, <tt>email</tt>, <tt>openid</tt>, and <tt>profile</tt>.
--   Possible values provided by Amazon Web Services are:
--   <tt>aws.cognito.signin.user.admin</tt>. Custom scopes created in
--   Resource Servers are also supported.
userPoolClientType_allowedOAuthScopes :: Lens' UserPoolClientType (Maybe [Text])

-- | The allowed OAuth flows.
--   
--   Set to <tt>code</tt> to initiate a code grant flow, which provides an
--   authorization code as the response. This code can be exchanged for
--   access tokens with the token endpoint.
--   
--   Set to <tt>implicit</tt> to specify that the client should get the
--   access token (and, optionally, ID token, based on scopes) directly.
--   
--   Set to <tt>client_credentials</tt> to specify that the client should
--   get the access token (and, optionally, ID token, based on scopes) from
--   the token endpoint using a combination of client and client_secret.
userPoolClientType_allowedOAuthFlows :: Lens' UserPoolClientType (Maybe [OAuthFlowType])

-- | The Amazon Pinpoint analytics configuration for the user pool client.
--   
--   Cognito User Pools only supports sending events to Amazon Pinpoint
--   projects in the US East (N. Virginia) us-east-1 Region, regardless of
--   the region in which the user pool resides.
userPoolClientType_analyticsConfiguration :: Lens' UserPoolClientType (Maybe AnalyticsConfigurationType)

-- | The client name from the user pool request of the client type.
userPoolClientType_clientName :: Lens' UserPoolClientType (Maybe Text)

-- | A list of allowed redirect (callback) URLs for the identity providers.
--   
--   A redirect URI must:
--   
--   <ul>
--   <li>Be an absolute URI.</li>
--   <li>Be registered with the authorization server.</li>
--   <li>Not include a fragment component.</li>
--   </ul>
--   
--   See <a>OAuth 2.0 - Redirection Endpoint</a>.
--   
--   Amazon Cognito requires HTTPS over HTTP except for http://localhost
--   for testing purposes only.
--   
--   App callback URLs such as myapp://example are also supported.
userPoolClientType_callbackURLs :: Lens' UserPoolClientType (Maybe [Text])

-- | The user pool status in a user pool description.
userPoolDescriptionType_status :: Lens' UserPoolDescriptionType (Maybe StatusType)

-- | The date the user pool description was last modified.
userPoolDescriptionType_lastModifiedDate :: Lens' UserPoolDescriptionType (Maybe UTCTime)

-- | The name in a user pool description.
userPoolDescriptionType_name :: Lens' UserPoolDescriptionType (Maybe Text)

-- | The ID in a user pool description.
userPoolDescriptionType_id :: Lens' UserPoolDescriptionType (Maybe Text)

-- | The date the user pool description was created.
userPoolDescriptionType_creationDate :: Lens' UserPoolDescriptionType (Maybe UTCTime)

-- | The Lambda configuration information in a user pool description.
userPoolDescriptionType_lambdaConfig :: Lens' UserPoolDescriptionType (Maybe LambdaConfigType)

-- | The password policy.
userPoolPolicyType_passwordPolicy :: Lens' UserPoolPolicyType (Maybe PasswordPolicyType)

-- | The status of a user pool.
userPoolType_status :: Lens' UserPoolType (Maybe StatusType)

-- | The tags that are assigned to the user pool. A tag is a label that you
--   can apply to user pools to categorize and manage them in different
--   ways, such as by purpose, owner, environment, or other criteria.
userPoolType_userPoolTags :: Lens' UserPoolType (Maybe (HashMap Text Text))

-- | The reason why the email configuration cannot send the messages to
--   your users.
userPoolType_emailConfigurationFailure :: Lens' UserPoolType (Maybe Text)

-- | The date the user pool was last modified.
userPoolType_lastModifiedDate :: Lens' UserPoolType (Maybe UTCTime)

-- | The template for verification messages.
userPoolType_verificationMessageTemplate :: Lens' UserPoolType (Maybe VerificationMessageTemplateType)

-- | A number estimating the size of the user pool.
userPoolType_estimatedNumberOfUsers :: Lens' UserPoolType (Maybe Int)

-- | The Amazon Resource Name (ARN) for the user pool.
userPoolType_arn :: Lens' UserPoolType (Maybe Text)

-- | Holds the domain prefix if the user pool has a domain associated with
--   it.
userPoolType_domain :: Lens' UserPoolType (Maybe Text)

-- | A custom domain name that you provide to Amazon Cognito. This
--   parameter applies only if you use a custom domain to host the sign-up
--   and sign-in pages for your application. For example:
--   <tt>auth.example.com</tt>.
--   
--   For more information about adding a custom domain to your user pool,
--   see <a>Using Your Own Domain for the Hosted UI</a>.
userPoolType_customDomain :: Lens' UserPoolType (Maybe Text)

-- | The contents of the email verification message.
userPoolType_emailVerificationMessage :: Lens' UserPoolType (Maybe Text)

-- | The contents of the SMS authentication message.
userPoolType_smsAuthenticationMessage :: Lens' UserPoolType (Maybe Text)

-- | The user pool add-ons.
userPoolType_userPoolAddOns :: Lens' UserPoolType (Maybe UserPoolAddOnsType)

-- | A container with the schema attributes of a user pool.
userPoolType_schemaAttributes :: Lens' UserPoolType (Maybe (NonEmpty SchemaAttributeType))

-- | The subject of the email verification message.
userPoolType_emailVerificationSubject :: Lens' UserPoolType (Maybe Text)

-- | Specifies whether email addresses or phone numbers can be specified as
--   usernames when a user signs up.
userPoolType_usernameAttributes :: Lens' UserPoolType (Maybe [UsernameAttributeType])

-- | Specifies the attributes that are aliased in a user pool.
userPoolType_aliasAttributes :: Lens' UserPoolType (Maybe [AliasAttributeType])

-- | Use this setting to define which verified available method a user can
--   use to recover their password when they call <tt>ForgotPassword</tt>.
--   It allows you to define a preferred method when a user has more than
--   one method available. With this setting, SMS does not qualify for a
--   valid password recovery mechanism if the user also has SMS MFA
--   enabled. In the absence of this setting, Cognito uses the legacy
--   behavior to determine the recovery method where SMS is preferred over
--   email.
userPoolType_accountRecoverySetting :: Lens' UserPoolType (Maybe AccountRecoverySettingType)

-- | The email configuration.
userPoolType_emailConfiguration :: Lens' UserPoolType (Maybe EmailConfigurationType)

-- | The contents of the SMS verification message.
userPoolType_smsVerificationMessage :: Lens' UserPoolType (Maybe Text)

-- | The name of the user pool.
userPoolType_name :: Lens' UserPoolType (Maybe Text)

-- | Can be one of the following values:
--   
--   <ul>
--   <li><tt>OFF</tt> - MFA tokens are not required and cannot be specified
--   during user registration.</li>
--   <li><tt>ON</tt> - MFA tokens are required for all user registrations.
--   You can only specify required when you are initially creating a user
--   pool.</li>
--   <li><tt>OPTIONAL</tt> - Users have the option when registering to
--   create an MFA token.</li>
--   </ul>
userPoolType_mfaConfiguration :: Lens' UserPoolType (Maybe UserPoolMfaType)

-- | The ID of the user pool.
userPoolType_id :: Lens' UserPoolType (Maybe Text)

-- | The reason why the SMS configuration cannot send the messages to your
--   users.
--   
--   This message might include comma-separated values to describe why your
--   SMS configuration can't send messages to user pool end users.
--   
--   <ul>
--   <li>InvalidSmsRoleAccessPolicyException - The IAM role which Cognito
--   uses to send SMS messages is not properly configured. For more
--   information, see <a>SmsConfigurationType</a>.</li>
--   <li>SNSSandbox - The account is in SNS Sandbox and messages won’t
--   reach unverified end users. This parameter won’t get populated with
--   SNSSandbox if the IAM user creating the user pool doesn’t have SNS
--   permissions. To learn how to move your account out of the sandbox, see
--   <a>Moving out of the SMS sandbox</a>.</li>
--   </ul>
userPoolType_smsConfigurationFailure :: Lens' UserPoolType (Maybe Text)

-- | The date the user pool was created.
userPoolType_creationDate :: Lens' UserPoolType (Maybe UTCTime)

-- | The Lambda triggers associated with the user pool.
userPoolType_lambdaConfig :: Lens' UserPoolType (Maybe LambdaConfigType)

-- | The SMS configuration.
userPoolType_smsConfiguration :: Lens' UserPoolType (Maybe SmsConfigurationType)

-- | The configuration for <tt>AdminCreateUser</tt> requests.
userPoolType_adminCreateUserConfig :: Lens' UserPoolType (Maybe AdminCreateUserConfigType)

-- | The device configuration.
userPoolType_deviceConfiguration :: Lens' UserPoolType (Maybe DeviceConfigurationType)

-- | Specifies the attributes that are auto-verified in a user pool.
userPoolType_autoVerifiedAttributes :: Lens' UserPoolType (Maybe [VerifiedAttributeType])

-- | The policies associated with the user pool.
userPoolType_policies :: Lens' UserPoolType (Maybe UserPoolPolicyType)

-- | You can choose to enable case sensitivity on the username input for
--   the selected sign-in option. For example, when this is set to
--   <tt>False</tt>, users will be able to sign in using either "username"
--   or "Username". This configuration is immutable once it has been set.
--   For more information, see <a>UsernameConfigurationType</a>.
userPoolType_usernameConfiguration :: Lens' UserPoolType (Maybe UsernameConfigurationType)

-- | Specifies whether the user is enabled.
userType_enabled :: Lens' UserType (Maybe Bool)

-- | The user status. Can be one of the following:
--   
--   <ul>
--   <li>UNCONFIRMED - User has been created but not confirmed.</li>
--   <li>CONFIRMED - User has been confirmed.</li>
--   <li>ARCHIVED - User is no longer active.</li>
--   <li>COMPROMISED - User is disabled due to a potential security
--   threat.</li>
--   <li>UNKNOWN - User status is not known.</li>
--   <li>RESET_REQUIRED - User is confirmed, but the user must request a
--   code and reset his or her password before he or she can sign in.</li>
--   <li>FORCE_CHANGE_PASSWORD - The user is confirmed and the user can
--   sign in using a temporary password, but on first sign-in, the user
--   must change his or her password to a new value before doing anything
--   else.</li>
--   </ul>
userType_userStatus :: Lens' UserType (Maybe UserStatusType)

-- | The user name of the user you wish to describe.
userType_username :: Lens' UserType (Maybe Text)

-- | The creation date of the user.
userType_userCreateDate :: Lens' UserType (Maybe UTCTime)

-- | A container with information about the user type attributes.
userType_attributes :: Lens' UserType (Maybe [AttributeType])

-- | The MFA options for the user.
userType_mfaOptions :: Lens' UserType (Maybe [MFAOptionType])

-- | The last modified date of the user.
userType_userLastModifiedDate :: Lens' UserType (Maybe UTCTime)

-- | Specifies whether username case sensitivity will be applied for all
--   users in the user pool through Cognito APIs.
--   
--   Valid values include:
--   
--   <ul>
--   <li><b><tt>True</tt></b> : Enables case sensitivity for all username
--   input. When this option is set to <tt>True</tt>, users must sign in
--   using the exact capitalization of their given username. For example,
--   “UserName”. This is the default value.</li>
--   <li><b><tt>False</tt></b> : Enables case insensitivity for all
--   username input. For example, when this option is set to
--   <tt>False</tt>, users will be able to sign in using either "username"
--   or "Username". This option also enables both
--   <tt>preferred_username</tt> and <tt>email</tt> alias to be case
--   insensitive, in addition to the <tt>username</tt> attribute.</li>
--   </ul>
usernameConfigurationType_caseSensitive :: Lens' UsernameConfigurationType Bool

-- | The default email option.
verificationMessageTemplateType_defaultEmailOption :: Lens' VerificationMessageTemplateType (Maybe DefaultEmailOptionType)

-- | The subject line for the email message template. EmailSubject is
--   allowed only if <a>EmailSendingAccount</a> is DEVELOPER.
verificationMessageTemplateType_emailSubject :: Lens' VerificationMessageTemplateType (Maybe Text)

-- | The subject line for the email message template for sending a
--   confirmation link to the user. EmailSubjectByLink is allowed only
--   <a>EmailSendingAccount</a> is DEVELOPER.
verificationMessageTemplateType_emailSubjectByLink :: Lens' VerificationMessageTemplateType (Maybe Text)

-- | The SMS message template.
verificationMessageTemplateType_smsMessage :: Lens' VerificationMessageTemplateType (Maybe Text)

-- | The email message template for sending a confirmation link to the
--   user. EmailMessageByLink is allowed only if <a>EmailSendingAccount</a>
--   is DEVELOPER.
verificationMessageTemplateType_emailMessageByLink :: Lens' VerificationMessageTemplateType (Maybe Text)

-- | The email message template. EmailMessage is allowed only if
--   <a>EmailSendingAccount</a> is DEVELOPER.
verificationMessageTemplateType_emailMessage :: Lens' VerificationMessageTemplateType (Maybe Text)


module Network.AWS.CognitoIdentityProvider.Waiters


-- | Derived from API version <tt>2016-04-18</tt> of the AWS service
--   descriptions, licensed under Apache 2.0.
--   
--   Using the Amazon Cognito User Pools API, you can create a user pool to
--   manage directories and users. You can authenticate a user to obtain
--   tokens related to user identity and access policies.
--   
--   This API reference provides information about user pools in Amazon
--   Cognito User Pools.
--   
--   For more information, see the <a>Amazon Cognito Documentation</a>.
module Network.AWS.CognitoIdentityProvider

-- | API version <tt>2016-04-18</tt> of the Amazon Cognito Identity
--   Provider SDK configuration.
defaultService :: Service

-- | The request failed because the user is in an unsupported state.
_UnsupportedUserStateException :: AsError a => Getting (First ServiceError) a ServiceError

-- | This exception is thrown when a password reset is required.
_PasswordResetRequiredException :: AsError a => Getting (First ServiceError) a ServiceError

-- | This exception is thrown when the Amazon Cognito service encounters an
--   invalid parameter.
_InvalidParameterException :: AsError a => Getting (First ServiceError) a ServiceError

-- | This exception is thrown when you attempt to perform an operation that
--   is not enabled for the user pool client.
_UnsupportedOperationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | This exception is thrown when the Amazon Cognito service encounters an
--   invalid Lambda response.
_InvalidLambdaResponseException :: AsError a => Getting (First ServiceError) a ServiceError

-- | This exception is thrown when Amazon Cognito is not allowed to use
--   your email identity. HTTP status code: 400.
_InvalidEmailRoleAccessPolicyException :: AsError a => Getting (First ServiceError) a ServiceError

-- | This exception is thrown when the specified identifier is not
--   supported.
_UnsupportedIdentityProviderException :: AsError a => Getting (First ServiceError) a ServiceError

-- | This exception is thrown when a user is not found.
_UserNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | This exception is thrown when the Amazon Cognito service encounters an
--   unexpected exception with the Lambda service.
_UnexpectedLambdaException :: AsError a => Getting (First ServiceError) a ServiceError

-- | This exception is thrown when a user is not authorized.
_NotAuthorizedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | This exception is thrown when Amazon Cognito encounters an internal
--   error.
_InternalErrorException :: AsError a => Getting (First ServiceError) a ServiceError

-- | This exception is thrown when the user pool configuration is invalid.
_InvalidUserPoolConfigurationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | This exception is returned when the role provided for SMS
--   configuration does not have permission to publish using Amazon SNS.
_InvalidSmsRoleAccessPolicyException :: AsError a => Getting (First ServiceError) a ServiceError

-- | This exception is thrown when the specified OAuth flow is invalid.
_InvalidOAuthFlowException :: AsError a => Getting (First ServiceError) a ServiceError

-- | This exception is thrown if the provided code does not match what the
--   server was expecting.
_CodeMismatchException :: AsError a => Getting (First ServiceError) a ServiceError

-- | This exception is thrown when you are trying to modify a user pool
--   while a user import job is in progress for that pool.
_UserImportInProgressException :: AsError a => Getting (First ServiceError) a ServiceError

-- | This exception is thrown when the trust relationship is invalid for
--   the role provided for SMS configuration. This can happen if you do not
--   trust <tt>cognito-idp.amazonaws.com</tt> or the external ID provided
--   in the role does not match what is provided in the SMS configuration
--   for the user pool.
_InvalidSmsRoleTrustRelationshipException :: AsError a => Getting (First ServiceError) a ServiceError

-- | This exception is thrown when a user pool tag cannot be set or
--   updated.
_UserPoolTaggingException :: AsError a => Getting (First ServiceError) a ServiceError

-- | This exception is thrown when the software token TOTP multi-factor
--   authentication (MFA) is not enabled for the user pool.
_SoftwareTokenMFANotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | This exception is thrown when the user has made too many requests for
--   a given operation.
_TooManyRequestsException :: AsError a => Getting (First ServiceError) a ServiceError

-- | This exception is thrown if two or more modifications are happening
--   concurrently.
_ConcurrentModificationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | This exception is thrown when user pool add-ons are not enabled.
_UserPoolAddOnNotEnabledException :: AsError a => Getting (First ServiceError) a ServiceError

-- | This exception is thrown when the Amazon Cognito service encounters a
--   user validation exception with the Lambda service.
_UserLambdaValidationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | This exception is thrown when a precondition is not met.
_PreconditionNotMetException :: AsError a => Getting (First ServiceError) a ServiceError

-- | This exception is thrown if a code has expired.
_ExpiredCodeException :: AsError a => Getting (First ServiceError) a ServiceError

-- | This exception is thrown when the user has made too many failed
--   attempts for a given action (e.g., sign in).
_TooManyFailedAttemptsException :: AsError a => Getting (First ServiceError) a ServiceError

-- | This exception is thrown when there is a code mismatch and the service
--   fails to configure the software token TOTP multi-factor authentication
--   (MFA).
_EnableSoftwareTokenMFAException :: AsError a => Getting (First ServiceError) a ServiceError

-- | This exception is thrown when a user is not confirmed successfully.
_UserNotConfirmedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | This exception is thrown when Amazon Cognito encounters a group that
--   already exists in the user pool.
_GroupExistsException :: AsError a => Getting (First ServiceError) a ServiceError

-- | This exception is thrown when the request is not authorized. This can
--   happen due to an invalid access token in the request.
_UnauthorizedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | This exception is thrown when a verification code fails to deliver
--   successfully.
_CodeDeliveryFailureException :: AsError a => Getting (First ServiceError) a ServiceError

-- | This exception is thrown when the specified scope does not exist.
_ScopeDoesNotExistException :: AsError a => Getting (First ServiceError) a ServiceError

-- | This exception is thrown when the Amazon Cognito service cannot find
--   the requested resource.
_ResourceNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | This exception is thrown when Amazon Cognito cannot find a
--   multi-factor authentication (MFA) method.
_MFAMethodNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | This exception is thrown when a user tries to confirm the account with
--   an email or phone number that has already been supplied as an alias
--   from a different account. This exception tells user that an account
--   with this email or phone already exists.
_AliasExistsException :: AsError a => Getting (First ServiceError) a ServiceError

-- | This exception is thrown when an unsupported token is passed to an
--   operation.
_UnsupportedTokenTypeException :: AsError a => Getting (First ServiceError) a ServiceError

-- | This exception is thrown when the provider is already supported by the
--   user pool.
_DuplicateProviderException :: AsError a => Getting (First ServiceError) a ServiceError

-- | This exception is thrown when a user exceeds the limit for a requested
--   Amazon Web Services resource.
_LimitExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | This exception is thrown when the Amazon Cognito service encounters an
--   invalid password.
_InvalidPasswordException :: AsError a => Getting (First ServiceError) a ServiceError

-- | This exception is thrown when Amazon Cognito encounters a user name
--   that already exists in the user pool.
_UsernameExistsException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Represents the request to delete a user pool.
--   
--   <i>See:</i> <a>newDeleteUserPool</a> smart constructor.
data DeleteUserPool
DeleteUserPool' :: Text -> DeleteUserPool

-- | Create a value of <a>DeleteUserPool</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userPoolId:DeleteUserPool'</a>,
--   <a>deleteUserPool_userPoolId</a> - The user pool ID for the user pool
--   you want to delete.
newDeleteUserPool :: Text -> DeleteUserPool

-- | <i>See:</i> <a>newDeleteUserPoolResponse</a> smart constructor.
data DeleteUserPoolResponse
DeleteUserPoolResponse' :: DeleteUserPoolResponse

-- | Create a value of <a>DeleteUserPoolResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteUserPoolResponse :: DeleteUserPoolResponse

-- | Represents the request to update the user pool.
--   
--   <i>See:</i> <a>newUpdateUserPool</a> smart constructor.
data UpdateUserPool
UpdateUserPool' :: Maybe (HashMap Text Text) -> Maybe VerificationMessageTemplateType -> Maybe Text -> Maybe Text -> Maybe UserPoolAddOnsType -> Maybe Text -> Maybe AccountRecoverySettingType -> Maybe EmailConfigurationType -> Maybe Text -> Maybe UserPoolMfaType -> Maybe LambdaConfigType -> Maybe SmsConfigurationType -> Maybe AdminCreateUserConfigType -> Maybe DeviceConfigurationType -> Maybe [VerifiedAttributeType] -> Maybe UserPoolPolicyType -> Text -> UpdateUserPool

-- | Create a value of <a>UpdateUserPool</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userPoolTags:UpdateUserPool'</a>,
--   <a>updateUserPool_userPoolTags</a> - The tag keys and values to assign
--   to the user pool. A tag is a label that you can use to categorize and
--   manage user pools in different ways, such as by purpose, owner,
--   environment, or other criteria.
--   
--   <a>$sel:verificationMessageTemplate:UpdateUserPool'</a>,
--   <a>updateUserPool_verificationMessageTemplate</a> - The template for
--   verification messages.
--   
--   <a>$sel:emailVerificationMessage:UpdateUserPool'</a>,
--   <a>updateUserPool_emailVerificationMessage</a> - The contents of the
--   email verification message.
--   
--   <a>$sel:smsAuthenticationMessage:UpdateUserPool'</a>,
--   <a>updateUserPool_smsAuthenticationMessage</a> - The contents of the
--   SMS authentication message.
--   
--   <a>$sel:userPoolAddOns:UpdateUserPool'</a>,
--   <a>updateUserPool_userPoolAddOns</a> - Used to enable advanced
--   security risk detection. Set the key <tt>AdvancedSecurityMode</tt> to
--   the value "AUDIT".
--   
--   <a>$sel:emailVerificationSubject:UpdateUserPool'</a>,
--   <a>updateUserPool_emailVerificationSubject</a> - The subject of the
--   email verification message.
--   
--   <a>$sel:accountRecoverySetting:UpdateUserPool'</a>,
--   <a>updateUserPool_accountRecoverySetting</a> - Use this setting to
--   define which verified available method a user can use to recover their
--   password when they call <tt>ForgotPassword</tt>. It allows you to
--   define a preferred method when a user has more than one method
--   available. With this setting, SMS does not qualify for a valid
--   password recovery mechanism if the user also has SMS MFA enabled. In
--   the absence of this setting, Cognito uses the legacy behavior to
--   determine the recovery method where SMS is preferred over email.
--   
--   <a>$sel:emailConfiguration:UpdateUserPool'</a>,
--   <a>updateUserPool_emailConfiguration</a> - Email configuration.
--   
--   <a>$sel:smsVerificationMessage:UpdateUserPool'</a>,
--   <a>updateUserPool_smsVerificationMessage</a> - A container with
--   information about the SMS verification message.
--   
--   <a>$sel:mfaConfiguration:UpdateUserPool'</a>,
--   <a>updateUserPool_mfaConfiguration</a> - Can be one of the following
--   values:
--   
--   <ul>
--   <li><tt>OFF</tt> - MFA tokens are not required and cannot be specified
--   during user registration.</li>
--   <li><tt>ON</tt> - MFA tokens are required for all user registrations.
--   You can only specify ON when you are initially creating a user pool.
--   You can use the <a>SetUserPoolMfaConfig</a> API operation to turn MFA
--   "ON" for existing user pools.</li>
--   <li><tt>OPTIONAL</tt> - Users have the option when registering to
--   create an MFA token.</li>
--   </ul>
--   
--   <a>$sel:lambdaConfig:UpdateUserPool'</a>,
--   <a>updateUserPool_lambdaConfig</a> - The Lambda configuration
--   information from the request to update the user pool.
--   
--   <a>$sel:smsConfiguration:UpdateUserPool'</a>,
--   <a>updateUserPool_smsConfiguration</a> - SMS configuration.
--   
--   <a>$sel:adminCreateUserConfig:UpdateUserPool'</a>,
--   <a>updateUserPool_adminCreateUserConfig</a> - The configuration for
--   <tt>AdminCreateUser</tt> requests.
--   
--   <a>$sel:deviceConfiguration:UpdateUserPool'</a>,
--   <a>updateUserPool_deviceConfiguration</a> - Device configuration.
--   
--   <a>$sel:autoVerifiedAttributes:UpdateUserPool'</a>,
--   <a>updateUserPool_autoVerifiedAttributes</a> - The attributes that are
--   automatically verified when the Amazon Cognito service makes a request
--   to update user pools.
--   
--   <a>$sel:policies:UpdateUserPool'</a>, <a>updateUserPool_policies</a> -
--   A container with the policies you wish to update in a user pool.
--   
--   <a>$sel:userPoolId:UpdateUserPool'</a>,
--   <a>updateUserPool_userPoolId</a> - The user pool ID for the user pool
--   you want to update.
newUpdateUserPool :: Text -> UpdateUserPool

-- | Represents the response from the server when you make a request to
--   update the user pool.
--   
--   <i>See:</i> <a>newUpdateUserPoolResponse</a> smart constructor.
data UpdateUserPoolResponse
UpdateUserPoolResponse' :: Int -> UpdateUserPoolResponse

-- | Create a value of <a>UpdateUserPoolResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateUserPoolResponse'</a>,
--   <a>updateUserPoolResponse_httpStatus</a> - The response's http status
--   code.
newUpdateUserPoolResponse :: Int -> UpdateUserPoolResponse

-- | The UpdateUserPoolDomain request input.
--   
--   <i>See:</i> <a>newUpdateUserPoolDomain</a> smart constructor.
data UpdateUserPoolDomain
UpdateUserPoolDomain' :: Text -> Text -> CustomDomainConfigType -> UpdateUserPoolDomain

-- | Create a value of <a>UpdateUserPoolDomain</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:domain:UpdateUserPoolDomain'</a>,
--   <a>updateUserPoolDomain_domain</a> - The domain name for the custom
--   domain that hosts the sign-up and sign-in pages for your application.
--   For example: <tt>auth.example.com</tt>.
--   
--   This string can include only lowercase letters, numbers, and hyphens.
--   Do not use a hyphen for the first or last character. Use periods to
--   separate subdomain names.
--   
--   <a>$sel:userPoolId:UpdateUserPoolDomain'</a>,
--   <a>updateUserPoolDomain_userPoolId</a> - The ID of the user pool that
--   is associated with the custom domain that you are updating the
--   certificate for.
--   
--   <a>$sel:customDomainConfig:UpdateUserPoolDomain'</a>,
--   <a>updateUserPoolDomain_customDomainConfig</a> - The configuration for
--   a custom domain that hosts the sign-up and sign-in pages for your
--   application. Use this object to specify an SSL certificate that is
--   managed by ACM.
newUpdateUserPoolDomain :: Text -> Text -> CustomDomainConfigType -> UpdateUserPoolDomain

-- | The UpdateUserPoolDomain response output.
--   
--   <i>See:</i> <a>newUpdateUserPoolDomainResponse</a> smart constructor.
data UpdateUserPoolDomainResponse
UpdateUserPoolDomainResponse' :: Maybe Text -> Int -> UpdateUserPoolDomainResponse

-- | Create a value of <a>UpdateUserPoolDomainResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cloudFrontDomain:UpdateUserPoolDomainResponse'</a>,
--   <a>updateUserPoolDomainResponse_cloudFrontDomain</a> - The Amazon
--   CloudFront endpoint that Amazon Cognito set up when you added the
--   custom domain to your user pool.
--   
--   <a>$sel:httpStatus:UpdateUserPoolDomainResponse'</a>,
--   <a>updateUserPoolDomainResponse_httpStatus</a> - The response's http
--   status code.
newUpdateUserPoolDomainResponse :: Int -> UpdateUserPoolDomainResponse

-- | <i>See:</i> <a>newDeleteUserPoolDomain</a> smart constructor.
data DeleteUserPoolDomain
DeleteUserPoolDomain' :: Text -> Text -> DeleteUserPoolDomain

-- | Create a value of <a>DeleteUserPoolDomain</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:domain:DeleteUserPoolDomain'</a>,
--   <a>deleteUserPoolDomain_domain</a> - The domain string.
--   
--   <a>$sel:userPoolId:DeleteUserPoolDomain'</a>,
--   <a>deleteUserPoolDomain_userPoolId</a> - The user pool ID.
newDeleteUserPoolDomain :: Text -> Text -> DeleteUserPoolDomain

-- | <i>See:</i> <a>newDeleteUserPoolDomainResponse</a> smart constructor.
data DeleteUserPoolDomainResponse
DeleteUserPoolDomainResponse' :: Int -> DeleteUserPoolDomainResponse

-- | Create a value of <a>DeleteUserPoolDomainResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteUserPoolDomainResponse'</a>,
--   <a>deleteUserPoolDomainResponse_httpStatus</a> - The response's http
--   status code.
newDeleteUserPoolDomainResponse :: Int -> DeleteUserPoolDomainResponse

-- | Initiates the authorization request, as an administrator.
--   
--   <i>See:</i> <a>newAdminInitiateAuth</a> smart constructor.
data AdminInitiateAuth
AdminInitiateAuth' :: Maybe (HashMap Text Text) -> Maybe ContextDataType -> Maybe AnalyticsMetadataType -> Maybe (Sensitive (HashMap Text Text)) -> Text -> Sensitive Text -> AuthFlowType -> AdminInitiateAuth

-- | Create a value of <a>AdminInitiateAuth</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientMetadata:AdminInitiateAuth'</a>,
--   <a>adminInitiateAuth_clientMetadata</a> - A map of custom key-value
--   pairs that you can provide as input for certain custom workflows that
--   this action triggers.
--   
--   You create custom workflows by assigning Lambda functions to user pool
--   triggers. When you use the AdminInitiateAuth API action, Amazon
--   Cognito invokes the Lambda functions that are specified for various
--   triggers. The ClientMetadata value is passed as input to the functions
--   for only the following triggers:
--   
--   <ul>
--   <li>Pre signup</li>
--   <li>Pre authentication</li>
--   <li>User migration</li>
--   </ul>
--   
--   When Amazon Cognito invokes the functions for these triggers, it
--   passes a JSON payload, which the function receives as input. This
--   payload contains a <tt>validationData</tt> attribute, which provides
--   the data that you assigned to the ClientMetadata parameter in your
--   AdminInitiateAuth request. In your function code in Lambda, you can
--   process the <tt>validationData</tt> value to enhance your workflow for
--   your specific needs.
--   
--   When you use the AdminInitiateAuth API action, Amazon Cognito also
--   invokes the functions for the following triggers, but it does not
--   provide the ClientMetadata value as input:
--   
--   <ul>
--   <li>Post authentication</li>
--   <li>Custom message</li>
--   <li>Pre token generation</li>
--   <li>Create auth challenge</li>
--   <li>Define auth challenge</li>
--   <li>Verify auth challenge</li>
--   </ul>
--   
--   For more information, see <a>Customizing User Pool Workflows with
--   Lambda Triggers</a> in the <i>Amazon Cognito Developer Guide</i>.
--   
--   Take the following limitations into consideration when you use the
--   ClientMetadata parameter:
--   
--   <ul>
--   <li>Amazon Cognito does not store the ClientMetadata value. This data
--   is available only to Lambda triggers that are assigned to a user pool
--   to support custom workflows. If your user pool configuration does not
--   include triggers, the ClientMetadata parameter serves no purpose.</li>
--   <li>Amazon Cognito does not validate the ClientMetadata value.</li>
--   <li>Amazon Cognito does not encrypt the the ClientMetadata value, so
--   don't use it to provide sensitive information.</li>
--   </ul>
--   
--   <a>$sel:contextData:AdminInitiateAuth'</a>,
--   <a>adminInitiateAuth_contextData</a> - Contextual data such as the
--   user's device fingerprint, IP address, or location used for evaluating
--   the risk of an unexpected event by Amazon Cognito advanced security.
--   
--   <a>$sel:analyticsMetadata:AdminInitiateAuth'</a>,
--   <a>adminInitiateAuth_analyticsMetadata</a> - The analytics metadata
--   for collecting Amazon Pinpoint metrics for <tt>AdminInitiateAuth</tt>
--   calls.
--   
--   <a>$sel:authParameters:AdminInitiateAuth'</a>,
--   <a>adminInitiateAuth_authParameters</a> - The authentication
--   parameters. These are inputs corresponding to the <tt>AuthFlow</tt>
--   that you are invoking. The required values depend on the value of
--   <tt>AuthFlow</tt>:
--   
--   <ul>
--   <li>For <tt>USER_SRP_AUTH</tt>: <tt>USERNAME</tt> (required),
--   <tt>SRP_A</tt> (required), <tt>SECRET_HASH</tt> (required if the app
--   client is configured with a client secret), <tt>DEVICE_KEY</tt>.</li>
--   <li>For <tt>REFRESH_TOKEN_AUTH/REFRESH_TOKEN</tt>:
--   <tt>REFRESH_TOKEN</tt> (required), <tt>SECRET_HASH</tt> (required if
--   the app client is configured with a client secret),
--   <tt>DEVICE_KEY</tt>.</li>
--   <li>For <tt>ADMIN_NO_SRP_AUTH</tt>: <tt>USERNAME</tt> (required),
--   <tt>SECRET_HASH</tt> (if app client is configured with client secret),
--   <tt>PASSWORD</tt> (required), <tt>DEVICE_KEY</tt>.</li>
--   <li>For <tt>CUSTOM_AUTH</tt>: <tt>USERNAME</tt> (required),
--   <tt>SECRET_HASH</tt> (if app client is configured with client secret),
--   <tt>DEVICE_KEY</tt>. To start the authentication flow with password
--   verification, include <tt>ChallengeName: SRP_A</tt> and <tt>SRP_A:
--   (The SRP_A Value)</tt>.</li>
--   </ul>
--   
--   <a>$sel:userPoolId:AdminInitiateAuth'</a>,
--   <a>adminInitiateAuth_userPoolId</a> - The ID of the Amazon Cognito
--   user pool.
--   
--   <a>$sel:clientId:AdminInitiateAuth'</a>,
--   <a>adminInitiateAuth_clientId</a> - The app client ID.
--   
--   <a>$sel:authFlow:AdminInitiateAuth'</a>,
--   <a>adminInitiateAuth_authFlow</a> - The authentication flow for this
--   call to execute. The API action will depend on this value. For
--   example:
--   
--   <ul>
--   <li><tt>REFRESH_TOKEN_AUTH</tt> will take in a valid refresh token and
--   return new tokens.</li>
--   <li><tt>USER_SRP_AUTH</tt> will take in <tt>USERNAME</tt> and
--   <tt>SRP_A</tt> and return the SRP variables to be used for next
--   challenge execution.</li>
--   <li><tt>USER_PASSWORD_AUTH</tt> will take in <tt>USERNAME</tt> and
--   <tt>PASSWORD</tt> and return the next challenge or tokens.</li>
--   </ul>
--   
--   Valid values include:
--   
--   <ul>
--   <li><tt>USER_SRP_AUTH</tt>: Authentication flow for the Secure Remote
--   Password (SRP) protocol.</li>
--   <li><tt>REFRESH_TOKEN_AUTH</tt>/<tt>REFRESH_TOKEN</tt>: Authentication
--   flow for refreshing the access token and ID token by supplying a valid
--   refresh token.</li>
--   <li><tt>CUSTOM_AUTH</tt>: Custom authentication flow.</li>
--   <li><tt>ADMIN_NO_SRP_AUTH</tt>: Non-SRP authentication flow; you can
--   pass in the USERNAME and PASSWORD directly if the flow is enabled for
--   calling the app client.</li>
--   <li><tt>USER_PASSWORD_AUTH</tt>: Non-SRP authentication flow; USERNAME
--   and PASSWORD are passed directly. If a user migration Lambda trigger
--   is set, this flow will invoke the user migration Lambda if the
--   USERNAME is not found in the user pool.</li>
--   <li><tt>ADMIN_USER_PASSWORD_AUTH</tt>: Admin-based user password
--   authentication. This replaces the <tt>ADMIN_NO_SRP_AUTH</tt>
--   authentication flow. In this flow, Cognito receives the password in
--   the request instead of using the SRP process to verify passwords.</li>
--   </ul>
newAdminInitiateAuth :: Text -> Text -> AuthFlowType -> AdminInitiateAuth

-- | Initiates the authentication response, as an administrator.
--   
--   <i>See:</i> <a>newAdminInitiateAuthResponse</a> smart constructor.
data AdminInitiateAuthResponse
AdminInitiateAuthResponse' :: Maybe ChallengeNameType -> Maybe (HashMap Text Text) -> Maybe AuthenticationResultType -> Maybe Text -> Int -> AdminInitiateAuthResponse

-- | Create a value of <a>AdminInitiateAuthResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:challengeName:AdminInitiateAuthResponse'</a>,
--   <a>adminInitiateAuthResponse_challengeName</a> - The name of the
--   challenge which you are responding to with this call. This is returned
--   to you in the <tt>AdminInitiateAuth</tt> response if you need to pass
--   another challenge.
--   
--   <ul>
--   <li><tt>MFA_SETUP</tt>: If MFA is required, users who do not have at
--   least one of the MFA methods set up are presented with an
--   <tt>MFA_SETUP</tt> challenge. The user must set up at least one MFA
--   type to continue to authenticate.</li>
--   <li><tt>SELECT_MFA_TYPE</tt>: Selects the MFA type. Valid MFA options
--   are <tt>SMS_MFA</tt> for text SMS MFA, and <tt>SOFTWARE_TOKEN_MFA</tt>
--   for TOTP software token MFA.</li>
--   <li><tt>SMS_MFA</tt>: Next challenge is to supply an
--   <tt>SMS_MFA_CODE</tt>, delivered via SMS.</li>
--   <li><tt>PASSWORD_VERIFIER</tt>: Next challenge is to supply
--   <tt>PASSWORD_CLAIM_SIGNATURE</tt>,
--   <tt>PASSWORD_CLAIM_SECRET_BLOCK</tt>, and <tt>TIMESTAMP</tt> after the
--   client-side SRP calculations.</li>
--   <li><tt>CUSTOM_CHALLENGE</tt>: This is returned if your custom
--   authentication flow determines that the user should pass another
--   challenge before tokens are issued.</li>
--   <li><tt>DEVICE_SRP_AUTH</tt>: If device tracking was enabled on your
--   user pool and the previous challenges were passed, this challenge is
--   returned so that Amazon Cognito can start tracking this device.</li>
--   <li><tt>DEVICE_PASSWORD_VERIFIER</tt>: Similar to
--   <tt>PASSWORD_VERIFIER</tt>, but for devices only.</li>
--   <li><tt>ADMIN_NO_SRP_AUTH</tt>: This is returned if you need to
--   authenticate with <tt>USERNAME</tt> and <tt>PASSWORD</tt> directly. An
--   app client must be enabled to use this flow.</li>
--   <li><tt>NEW_PASSWORD_REQUIRED</tt>: For users who are required to
--   change their passwords after successful first login. This challenge
--   should be passed with <tt>NEW_PASSWORD</tt> and any other required
--   attributes.</li>
--   <li><tt>MFA_SETUP</tt>: For users who are required to setup an MFA
--   factor before they can sign-in. The MFA types enabled for the user
--   pool will be listed in the challenge parameters <tt>MFA_CAN_SETUP</tt>
--   value.To setup software token MFA, use the session returned here from
--   <tt>InitiateAuth</tt> as an input to <tt>AssociateSoftwareToken</tt>,
--   and use the session returned by <tt>VerifySoftwareToken</tt> as an
--   input to <tt>RespondToAuthChallenge</tt> with challenge name
--   <tt>MFA_SETUP</tt> to complete sign-in. To setup SMS MFA, users will
--   need help from an administrator to add a phone number to their account
--   and then call <tt>InitiateAuth</tt> again to restart sign-in.</li>
--   </ul>
--   
--   <a>$sel:challengeParameters:AdminInitiateAuthResponse'</a>,
--   <a>adminInitiateAuthResponse_challengeParameters</a> - The challenge
--   parameters. These are returned to you in the
--   <tt>AdminInitiateAuth</tt> response if you need to pass another
--   challenge. The responses in this parameter should be used to compute
--   inputs to the next call (<tt>AdminRespondToAuthChallenge</tt>).
--   
--   All challenges require <tt>USERNAME</tt> and <tt>SECRET_HASH</tt> (if
--   applicable).
--   
--   The value of the <tt>USER_ID_FOR_SRP</tt> attribute will be the user's
--   actual username, not an alias (such as email address or phone number),
--   even if you specified an alias in your call to
--   <tt>AdminInitiateAuth</tt>. This is because, in the
--   <tt>AdminRespondToAuthChallenge</tt> API <tt>ChallengeResponses</tt>,
--   the <tt>USERNAME</tt> attribute cannot be an alias.
--   
--   <a>$sel:authenticationResult:AdminInitiateAuthResponse'</a>,
--   <a>adminInitiateAuthResponse_authenticationResult</a> - The result of
--   the authentication response. This is only returned if the caller does
--   not need to pass another challenge. If the caller does need to pass
--   another challenge before it gets tokens, <tt>ChallengeName</tt>,
--   <tt>ChallengeParameters</tt>, and <tt>Session</tt> are returned.
--   
--   <a>$sel:session:AdminInitiateAuthResponse'</a>,
--   <a>adminInitiateAuthResponse_session</a> - The session which should be
--   passed both ways in challenge-response calls to the service. If
--   <tt>AdminInitiateAuth</tt> or <tt>AdminRespondToAuthChallenge</tt> API
--   call determines that the caller needs to go through another challenge,
--   they return a session with other challenge parameters. This session
--   should be passed as it is to the next
--   <tt>AdminRespondToAuthChallenge</tt> API call.
--   
--   <a>$sel:httpStatus:AdminInitiateAuthResponse'</a>,
--   <a>adminInitiateAuthResponse_httpStatus</a> - The response's http
--   status code.
newAdminInitiateAuthResponse :: Int -> AdminInitiateAuthResponse

-- | <i>See:</i> <a>newAdminLinkProviderForUser</a> smart constructor.
data AdminLinkProviderForUser
AdminLinkProviderForUser' :: Text -> ProviderUserIdentifierType -> ProviderUserIdentifierType -> AdminLinkProviderForUser

-- | Create a value of <a>AdminLinkProviderForUser</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userPoolId:AdminLinkProviderForUser'</a>,
--   <a>adminLinkProviderForUser_userPoolId</a> - The user pool ID for the
--   user pool.
--   
--   <a>$sel:destinationUser:AdminLinkProviderForUser'</a>,
--   <a>adminLinkProviderForUser_destinationUser</a> - The existing user in
--   the user pool to be linked to the external identity provider user
--   account. Can be a native (Username + Password) Cognito User Pools user
--   or a federated user (for example, a SAML or Facebook user). If the
--   user doesn't exist, an exception is thrown. This is the user that is
--   returned when the new user (with the linked identity provider
--   attribute) signs in.
--   
--   For a native username + password user, the
--   <tt>ProviderAttributeValue</tt> for the <tt>DestinationUser</tt>
--   should be the username in the user pool. For a federated user, it
--   should be the provider-specific <tt>user_id</tt>.
--   
--   The <tt>ProviderAttributeName</tt> of the <tt>DestinationUser</tt> is
--   ignored.
--   
--   The <tt>ProviderName</tt> should be set to <tt>Cognito</tt> for users
--   in Cognito user pools.
--   
--   <a>$sel:sourceUser:AdminLinkProviderForUser'</a>,
--   <a>adminLinkProviderForUser_sourceUser</a> - An external identity
--   provider account for a user who does not currently exist yet in the
--   user pool. This user must be a federated user (for example, a SAML or
--   Facebook user), not another native user.
--   
--   If the <tt>SourceUser</tt> is a federated social identity provider
--   user (Facebook, Google, or Login with Amazon), you must set the
--   <tt>ProviderAttributeName</tt> to <tt>Cognito_Subject</tt>. For social
--   identity providers, the <tt>ProviderName</tt> will be
--   <tt>Facebook</tt>, <tt>Google</tt>, or <tt>LoginWithAmazon</tt>, and
--   Cognito will automatically parse the Facebook, Google, and Login with
--   Amazon tokens for <tt>id</tt>, <tt>sub</tt>, and <tt>user_id</tt>,
--   respectively. The <tt>ProviderAttributeValue</tt> for the user must be
--   the same value as the <tt>id</tt>, <tt>sub</tt>, or <tt>user_id</tt>
--   value found in the social identity provider token.
--   
--   For SAML, the <tt>ProviderAttributeName</tt> can be any value that
--   matches a claim in the SAML assertion. If you wish to link SAML users
--   based on the subject of the SAML assertion, you should map the subject
--   to a claim through the SAML identity provider and submit that claim
--   name as the <tt>ProviderAttributeName</tt>. If you set
--   <tt>ProviderAttributeName</tt> to <tt>Cognito_Subject</tt>, Cognito
--   will automatically parse the default unique identifier found in the
--   subject from the SAML token.
newAdminLinkProviderForUser :: Text -> ProviderUserIdentifierType -> ProviderUserIdentifierType -> AdminLinkProviderForUser

-- | <i>See:</i> <a>newAdminLinkProviderForUserResponse</a> smart
--   constructor.
data AdminLinkProviderForUserResponse
AdminLinkProviderForUserResponse' :: Int -> AdminLinkProviderForUserResponse

-- | Create a value of <a>AdminLinkProviderForUserResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:AdminLinkProviderForUserResponse'</a>,
--   <a>adminLinkProviderForUserResponse_httpStatus</a> - The response's
--   http status code.
newAdminLinkProviderForUserResponse :: Int -> AdminLinkProviderForUserResponse

-- | Represents the request that enables the user as an administrator.
--   
--   <i>See:</i> <a>newAdminEnableUser</a> smart constructor.
data AdminEnableUser
AdminEnableUser' :: Text -> Sensitive Text -> AdminEnableUser

-- | Create a value of <a>AdminEnableUser</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userPoolId:AdminEnableUser'</a>,
--   <a>adminEnableUser_userPoolId</a> - The user pool ID for the user pool
--   where you want to enable the user.
--   
--   <a>$sel:username:AdminEnableUser'</a>, <a>adminEnableUser_username</a>
--   - The user name of the user you wish to enable.
newAdminEnableUser :: Text -> Text -> AdminEnableUser

-- | Represents the response from the server for the request to enable a
--   user as an administrator.
--   
--   <i>See:</i> <a>newAdminEnableUserResponse</a> smart constructor.
data AdminEnableUserResponse
AdminEnableUserResponse' :: Int -> AdminEnableUserResponse

-- | Create a value of <a>AdminEnableUserResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:AdminEnableUserResponse'</a>,
--   <a>adminEnableUserResponse_httpStatus</a> - The response's http status
--   code.
newAdminEnableUserResponse :: Int -> AdminEnableUserResponse

-- | Represents the request to get user attribute verification.
--   
--   <i>See:</i> <a>newGetUserAttributeVerificationCode</a> smart
--   constructor.
data GetUserAttributeVerificationCode
GetUserAttributeVerificationCode' :: Maybe (HashMap Text Text) -> Sensitive Text -> Text -> GetUserAttributeVerificationCode

-- | Create a value of <a>GetUserAttributeVerificationCode</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientMetadata:GetUserAttributeVerificationCode'</a>,
--   <a>getUserAttributeVerificationCode_clientMetadata</a> - A map of
--   custom key-value pairs that you can provide as input for any custom
--   workflows that this action triggers.
--   
--   You create custom workflows by assigning Lambda functions to user pool
--   triggers. When you use the GetUserAttributeVerificationCode API
--   action, Amazon Cognito invokes the function that is assigned to the
--   /custom message/ trigger. When Amazon Cognito invokes this function,
--   it passes a JSON payload, which the function receives as input. This
--   payload contains a <tt>clientMetadata</tt> attribute, which provides
--   the data that you assigned to the ClientMetadata parameter in your
--   GetUserAttributeVerificationCode request. In your function code in
--   Lambda, you can process the <tt>clientMetadata</tt> value to enhance
--   your workflow for your specific needs.
--   
--   For more information, see <a>Customizing User Pool Workflows with
--   Lambda Triggers</a> in the <i>Amazon Cognito Developer Guide</i>.
--   
--   Take the following limitations into consideration when you use the
--   ClientMetadata parameter:
--   
--   <ul>
--   <li>Amazon Cognito does not store the ClientMetadata value. This data
--   is available only to Lambda triggers that are assigned to a user pool
--   to support custom workflows. If your user pool configuration does not
--   include triggers, the ClientMetadata parameter serves no purpose.</li>
--   <li>Amazon Cognito does not validate the ClientMetadata value.</li>
--   <li>Amazon Cognito does not encrypt the the ClientMetadata value, so
--   don't use it to provide sensitive information.</li>
--   </ul>
--   
--   <a>$sel:accessToken:GetUserAttributeVerificationCode'</a>,
--   <a>getUserAttributeVerificationCode_accessToken</a> - The access token
--   returned by the server response to get the user attribute verification
--   code.
--   
--   <a>$sel:attributeName:GetUserAttributeVerificationCode'</a>,
--   <a>getUserAttributeVerificationCode_attributeName</a> - The attribute
--   name returned by the server response to get the user attribute
--   verification code.
newGetUserAttributeVerificationCode :: Text -> Text -> GetUserAttributeVerificationCode

-- | The verification code response returned by the server response to get
--   the user attribute verification code.
--   
--   <i>See:</i> <a>newGetUserAttributeVerificationCodeResponse</a> smart
--   constructor.
data GetUserAttributeVerificationCodeResponse
GetUserAttributeVerificationCodeResponse' :: Maybe CodeDeliveryDetailsType -> Int -> GetUserAttributeVerificationCodeResponse

-- | Create a value of <a>GetUserAttributeVerificationCodeResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:codeDeliveryDetails:GetUserAttributeVerificationCodeResponse'</a>,
--   <a>getUserAttributeVerificationCodeResponse_codeDeliveryDetails</a> -
--   The code delivery details returned by the server in response to the
--   request to get the user attribute verification code.
--   
--   <a>$sel:httpStatus:GetUserAttributeVerificationCodeResponse'</a>,
--   <a>getUserAttributeVerificationCodeResponse_httpStatus</a> - The
--   response's http status code.
newGetUserAttributeVerificationCodeResponse :: Int -> GetUserAttributeVerificationCodeResponse

-- | <i>See:</i> <a>newSetUserPoolMfaConfig</a> smart constructor.
data SetUserPoolMfaConfig
SetUserPoolMfaConfig' :: Maybe SmsMfaConfigType -> Maybe SoftwareTokenMfaConfigType -> Maybe UserPoolMfaType -> Text -> SetUserPoolMfaConfig

-- | Create a value of <a>SetUserPoolMfaConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:smsMfaConfiguration:SetUserPoolMfaConfig'</a>,
--   <a>setUserPoolMfaConfig_smsMfaConfiguration</a> - The SMS text message
--   MFA configuration.
--   
--   <a>$sel:softwareTokenMfaConfiguration:SetUserPoolMfaConfig'</a>,
--   <a>setUserPoolMfaConfig_softwareTokenMfaConfiguration</a> - The
--   software token MFA configuration.
--   
--   <a>$sel:mfaConfiguration:SetUserPoolMfaConfig'</a>,
--   <a>setUserPoolMfaConfig_mfaConfiguration</a> - The MFA configuration.
--   Users who don't have an MFA factor set up won't be able to sign-in if
--   you set the MfaConfiguration value to ‘ON’. See <a>Adding Multi-Factor
--   Authentication (MFA) to a User Pool</a> to learn more. Valid values
--   include:
--   
--   <ul>
--   <li><tt>OFF</tt> MFA will not be used for any users.</li>
--   <li><tt>ON</tt> MFA is required for all users to sign in.</li>
--   <li><tt>OPTIONAL</tt> MFA will be required only for individual users
--   who have an MFA factor enabled.</li>
--   </ul>
--   
--   <a>$sel:userPoolId:SetUserPoolMfaConfig'</a>,
--   <a>setUserPoolMfaConfig_userPoolId</a> - The user pool ID.
newSetUserPoolMfaConfig :: Text -> SetUserPoolMfaConfig

-- | <i>See:</i> <a>newSetUserPoolMfaConfigResponse</a> smart constructor.
data SetUserPoolMfaConfigResponse
SetUserPoolMfaConfigResponse' :: Maybe SmsMfaConfigType -> Maybe SoftwareTokenMfaConfigType -> Maybe UserPoolMfaType -> Int -> SetUserPoolMfaConfigResponse

-- | Create a value of <a>SetUserPoolMfaConfigResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:smsMfaConfiguration:SetUserPoolMfaConfig'</a>,
--   <a>setUserPoolMfaConfigResponse_smsMfaConfiguration</a> - The SMS text
--   message MFA configuration.
--   
--   <a>$sel:softwareTokenMfaConfiguration:SetUserPoolMfaConfig'</a>,
--   <a>setUserPoolMfaConfigResponse_softwareTokenMfaConfiguration</a> -
--   The software token MFA configuration.
--   
--   <a>$sel:mfaConfiguration:SetUserPoolMfaConfig'</a>,
--   <a>setUserPoolMfaConfigResponse_mfaConfiguration</a> - The MFA
--   configuration. Valid values include:
--   
--   <ul>
--   <li><tt>OFF</tt> MFA will not be used for any users.</li>
--   <li><tt>ON</tt> MFA is required for all users to sign in.</li>
--   <li><tt>OPTIONAL</tt> MFA will be required only for individual users
--   who have an MFA factor enabled.</li>
--   </ul>
--   
--   <a>$sel:httpStatus:SetUserPoolMfaConfigResponse'</a>,
--   <a>setUserPoolMfaConfigResponse_httpStatus</a> - The response's http
--   status code.
newSetUserPoolMfaConfigResponse :: Int -> SetUserPoolMfaConfigResponse

-- | Represents the request to update user attributes.
--   
--   <i>See:</i> <a>newUpdateUserAttributes</a> smart constructor.
data UpdateUserAttributes
UpdateUserAttributes' :: Maybe (HashMap Text Text) -> [AttributeType] -> Sensitive Text -> UpdateUserAttributes

-- | Create a value of <a>UpdateUserAttributes</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientMetadata:UpdateUserAttributes'</a>,
--   <a>updateUserAttributes_clientMetadata</a> - A map of custom key-value
--   pairs that you can provide as input for any custom workflows that this
--   action triggers.
--   
--   You create custom workflows by assigning Lambda functions to user pool
--   triggers. When you use the UpdateUserAttributes API action, Amazon
--   Cognito invokes the function that is assigned to the <i>custom
--   message</i> trigger. When Amazon Cognito invokes this function, it
--   passes a JSON payload, which the function receives as input. This
--   payload contains a <tt>clientMetadata</tt> attribute, which provides
--   the data that you assigned to the ClientMetadata parameter in your
--   UpdateUserAttributes request. In your function code in Lambda, you can
--   process the <tt>clientMetadata</tt> value to enhance your workflow for
--   your specific needs.
--   
--   For more information, see <a>Customizing User Pool Workflows with
--   Lambda Triggers</a> in the <i>Amazon Cognito Developer Guide</i>.
--   
--   Take the following limitations into consideration when you use the
--   ClientMetadata parameter:
--   
--   <ul>
--   <li>Amazon Cognito does not store the ClientMetadata value. This data
--   is available only to Lambda triggers that are assigned to a user pool
--   to support custom workflows. If your user pool configuration does not
--   include triggers, the ClientMetadata parameter serves no purpose.</li>
--   <li>Amazon Cognito does not validate the ClientMetadata value.</li>
--   <li>Amazon Cognito does not encrypt the the ClientMetadata value, so
--   don't use it to provide sensitive information.</li>
--   </ul>
--   
--   <a>$sel:userAttributes:UpdateUserAttributes'</a>,
--   <a>updateUserAttributes_userAttributes</a> - An array of name-value
--   pairs representing user attributes.
--   
--   For custom attributes, you must prepend the <tt>custom:</tt> prefix to
--   the attribute name.
--   
--   <a>$sel:accessToken:UpdateUserAttributes'</a>,
--   <a>updateUserAttributes_accessToken</a> - The access token for the
--   request to update user attributes.
newUpdateUserAttributes :: Text -> UpdateUserAttributes

-- | Represents the response from the server for the request to update user
--   attributes.
--   
--   <i>See:</i> <a>newUpdateUserAttributesResponse</a> smart constructor.
data UpdateUserAttributesResponse
UpdateUserAttributesResponse' :: Maybe [CodeDeliveryDetailsType] -> Int -> UpdateUserAttributesResponse

-- | Create a value of <a>UpdateUserAttributesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:codeDeliveryDetailsList:UpdateUserAttributesResponse'</a>,
--   <a>updateUserAttributesResponse_codeDeliveryDetailsList</a> - The code
--   delivery details list from the server for the request to update user
--   attributes.
--   
--   <a>$sel:httpStatus:UpdateUserAttributesResponse'</a>,
--   <a>updateUserAttributesResponse_httpStatus</a> - The response's http
--   status code.
newUpdateUserAttributesResponse :: Int -> UpdateUserAttributesResponse

-- | Represents the request to delete user attributes.
--   
--   <i>See:</i> <a>newDeleteUserAttributes</a> smart constructor.
data DeleteUserAttributes
DeleteUserAttributes' :: [Text] -> Sensitive Text -> DeleteUserAttributes

-- | Create a value of <a>DeleteUserAttributes</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userAttributeNames:DeleteUserAttributes'</a>,
--   <a>deleteUserAttributes_userAttributeNames</a> - An array of strings
--   representing the user attribute names you wish to delete.
--   
--   For custom attributes, you must prepend the <tt>custom:</tt> prefix to
--   the attribute name.
--   
--   <a>$sel:accessToken:DeleteUserAttributes'</a>,
--   <a>deleteUserAttributes_accessToken</a> - The access token used in the
--   request to delete user attributes.
newDeleteUserAttributes :: Text -> DeleteUserAttributes

-- | Represents the response from the server to delete user attributes.
--   
--   <i>See:</i> <a>newDeleteUserAttributesResponse</a> smart constructor.
data DeleteUserAttributesResponse
DeleteUserAttributesResponse' :: Int -> DeleteUserAttributesResponse

-- | Create a value of <a>DeleteUserAttributesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteUserAttributesResponse'</a>,
--   <a>deleteUserAttributesResponse_httpStatus</a> - The response's http
--   status code.
newDeleteUserAttributesResponse :: Int -> DeleteUserAttributesResponse

-- | Represents the request to verify user attributes.
--   
--   <i>See:</i> <a>newVerifyUserAttribute</a> smart constructor.
data VerifyUserAttribute
VerifyUserAttribute' :: Sensitive Text -> Text -> Text -> VerifyUserAttribute

-- | Create a value of <a>VerifyUserAttribute</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:accessToken:VerifyUserAttribute'</a>,
--   <a>verifyUserAttribute_accessToken</a> - Represents the access token
--   of the request to verify user attributes.
--   
--   <a>$sel:attributeName:VerifyUserAttribute'</a>,
--   <a>verifyUserAttribute_attributeName</a> - The attribute name in the
--   request to verify user attributes.
--   
--   <a>$sel:code:VerifyUserAttribute'</a>, <a>verifyUserAttribute_code</a>
--   - The verification code in the request to verify user attributes.
newVerifyUserAttribute :: Text -> Text -> Text -> VerifyUserAttribute

-- | A container representing the response from the server from the request
--   to verify user attributes.
--   
--   <i>See:</i> <a>newVerifyUserAttributeResponse</a> smart constructor.
data VerifyUserAttributeResponse
VerifyUserAttributeResponse' :: Int -> VerifyUserAttributeResponse

-- | Create a value of <a>VerifyUserAttributeResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:VerifyUserAttributeResponse'</a>,
--   <a>verifyUserAttributeResponse_httpStatus</a> - The response's http
--   status code.
newVerifyUserAttributeResponse :: Int -> VerifyUserAttributeResponse

-- | Represents the request to disable the user as an administrator.
--   
--   <i>See:</i> <a>newAdminDisableUser</a> smart constructor.
data AdminDisableUser
AdminDisableUser' :: Text -> Sensitive Text -> AdminDisableUser

-- | Create a value of <a>AdminDisableUser</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userPoolId:AdminDisableUser'</a>,
--   <a>adminDisableUser_userPoolId</a> - The user pool ID for the user
--   pool where you want to disable the user.
--   
--   <a>$sel:username:AdminDisableUser'</a>,
--   <a>adminDisableUser_username</a> - The user name of the user you wish
--   to disable.
newAdminDisableUser :: Text -> Text -> AdminDisableUser

-- | Represents the response received from the server to disable the user
--   as an administrator.
--   
--   <i>See:</i> <a>newAdminDisableUserResponse</a> smart constructor.
data AdminDisableUserResponse
AdminDisableUserResponse' :: Int -> AdminDisableUserResponse

-- | Create a value of <a>AdminDisableUserResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:AdminDisableUserResponse'</a>,
--   <a>adminDisableUserResponse_httpStatus</a> - The response's http
--   status code.
newAdminDisableUserResponse :: Int -> AdminDisableUserResponse

-- | Confirms the device request.
--   
--   <i>See:</i> <a>newConfirmDevice</a> smart constructor.
data ConfirmDevice
ConfirmDevice' :: Maybe DeviceSecretVerifierConfigType -> Maybe Text -> Sensitive Text -> Text -> ConfirmDevice

-- | Create a value of <a>ConfirmDevice</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deviceSecretVerifierConfig:ConfirmDevice'</a>,
--   <a>confirmDevice_deviceSecretVerifierConfig</a> - The configuration of
--   the device secret verifier.
--   
--   <a>$sel:deviceName:ConfirmDevice'</a>, <a>confirmDevice_deviceName</a>
--   - The device name.
--   
--   <a>$sel:accessToken:ConfirmDevice'</a>,
--   <a>confirmDevice_accessToken</a> - The access token.
--   
--   <a>$sel:deviceKey:ConfirmDevice'</a>, <a>confirmDevice_deviceKey</a> -
--   The device key.
newConfirmDevice :: Text -> Text -> ConfirmDevice

-- | Confirms the device response.
--   
--   <i>See:</i> <a>newConfirmDeviceResponse</a> smart constructor.
data ConfirmDeviceResponse
ConfirmDeviceResponse' :: Maybe Bool -> Int -> ConfirmDeviceResponse

-- | Create a value of <a>ConfirmDeviceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userConfirmationNecessary:ConfirmDeviceResponse'</a>,
--   <a>confirmDeviceResponse_userConfirmationNecessary</a> - Indicates
--   whether the user confirmation is necessary to confirm the device
--   response.
--   
--   <a>$sel:httpStatus:ConfirmDeviceResponse'</a>,
--   <a>confirmDeviceResponse_httpStatus</a> - The response's http status
--   code.
newConfirmDeviceResponse :: Int -> ConfirmDeviceResponse

-- | The request representing the confirmation for a password reset.
--   
--   <i>See:</i> <a>newConfirmForgotPassword</a> smart constructor.
data ConfirmForgotPassword
ConfirmForgotPassword' :: Maybe (HashMap Text Text) -> Maybe AnalyticsMetadataType -> Maybe UserContextDataType -> Maybe (Sensitive Text) -> Sensitive Text -> Sensitive Text -> Text -> Sensitive Text -> ConfirmForgotPassword

-- | Create a value of <a>ConfirmForgotPassword</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientMetadata:ConfirmForgotPassword'</a>,
--   <a>confirmForgotPassword_clientMetadata</a> - A map of custom
--   key-value pairs that you can provide as input for any custom workflows
--   that this action triggers.
--   
--   You create custom workflows by assigning Lambda functions to user pool
--   triggers. When you use the ConfirmForgotPassword API action, Amazon
--   Cognito invokes the function that is assigned to the <i>post
--   confirmation</i> trigger. When Amazon Cognito invokes this function,
--   it passes a JSON payload, which the function receives as input. This
--   payload contains a <tt>clientMetadata</tt> attribute, which provides
--   the data that you assigned to the ClientMetadata parameter in your
--   ConfirmForgotPassword request. In your function code in Lambda, you
--   can process the <tt>clientMetadata</tt> value to enhance your workflow
--   for your specific needs.
--   
--   For more information, see <a>Customizing User Pool Workflows with
--   Lambda Triggers</a> in the <i>Amazon Cognito Developer Guide</i>.
--   
--   Take the following limitations into consideration when you use the
--   ClientMetadata parameter:
--   
--   <ul>
--   <li>Amazon Cognito does not store the ClientMetadata value. This data
--   is available only to Lambda triggers that are assigned to a user pool
--   to support custom workflows. If your user pool configuration does not
--   include triggers, the ClientMetadata parameter serves no purpose.</li>
--   <li>Amazon Cognito does not validate the ClientMetadata value.</li>
--   <li>Amazon Cognito does not encrypt the the ClientMetadata value, so
--   don't use it to provide sensitive information.</li>
--   </ul>
--   
--   <a>$sel:analyticsMetadata:ConfirmForgotPassword'</a>,
--   <a>confirmForgotPassword_analyticsMetadata</a> - The Amazon Pinpoint
--   analytics metadata for collecting metrics for
--   <tt>ConfirmForgotPassword</tt> calls.
--   
--   <a>$sel:userContextData:ConfirmForgotPassword'</a>,
--   <a>confirmForgotPassword_userContextData</a> - Contextual data such as
--   the user's device fingerprint, IP address, or location used for
--   evaluating the risk of an unexpected event by Amazon Cognito advanced
--   security.
--   
--   <a>$sel:secretHash:ConfirmForgotPassword'</a>,
--   <a>confirmForgotPassword_secretHash</a> - A keyed-hash message
--   authentication code (HMAC) calculated using the secret key of a user
--   pool client and username plus the client ID in the message.
--   
--   <a>$sel:clientId:ConfirmForgotPassword'</a>,
--   <a>confirmForgotPassword_clientId</a> - The app client ID of the app
--   associated with the user pool.
--   
--   <a>$sel:username:ConfirmForgotPassword'</a>,
--   <a>confirmForgotPassword_username</a> - The user name of the user for
--   whom you want to enter a code to retrieve a forgotten password.
--   
--   <a>$sel:confirmationCode:ConfirmForgotPassword'</a>,
--   <a>confirmForgotPassword_confirmationCode</a> - The confirmation code
--   sent by a user's request to retrieve a forgotten password. For more
--   information, see <a>ForgotPassword</a>.
--   
--   <a>$sel:password:ConfirmForgotPassword'</a>,
--   <a>confirmForgotPassword_password</a> - The password sent by a user's
--   request to retrieve a forgotten password.
newConfirmForgotPassword :: Text -> Text -> Text -> Text -> ConfirmForgotPassword

-- | The response from the server that results from a user's request to
--   retrieve a forgotten password.
--   
--   <i>See:</i> <a>newConfirmForgotPasswordResponse</a> smart constructor.
data ConfirmForgotPasswordResponse
ConfirmForgotPasswordResponse' :: Int -> ConfirmForgotPasswordResponse

-- | Create a value of <a>ConfirmForgotPasswordResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:ConfirmForgotPasswordResponse'</a>,
--   <a>confirmForgotPasswordResponse_httpStatus</a> - The response's http
--   status code.
newConfirmForgotPasswordResponse :: Int -> ConfirmForgotPasswordResponse

-- | Represents the request to list the user import jobs.
--   
--   <i>See:</i> <a>newListUserImportJobs</a> smart constructor.
data ListUserImportJobs
ListUserImportJobs' :: Maybe Text -> Text -> Natural -> ListUserImportJobs

-- | Create a value of <a>ListUserImportJobs</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:paginationToken:ListUserImportJobs'</a>,
--   <a>listUserImportJobs_paginationToken</a> - An identifier that was
--   returned from the previous call to <tt>ListUserImportJobs</tt>, which
--   can be used to return the next set of import jobs in the list.
--   
--   <a>$sel:userPoolId:ListUserImportJobs'</a>,
--   <a>listUserImportJobs_userPoolId</a> - The user pool ID for the user
--   pool that the users are being imported into.
--   
--   <a>$sel:maxResults:ListUserImportJobs'</a>,
--   <a>listUserImportJobs_maxResults</a> - The maximum number of import
--   jobs you want the request to return.
newListUserImportJobs :: Text -> Natural -> ListUserImportJobs

-- | Represents the response from the server to the request to list the
--   user import jobs.
--   
--   <i>See:</i> <a>newListUserImportJobsResponse</a> smart constructor.
data ListUserImportJobsResponse
ListUserImportJobsResponse' :: Maybe Text -> Maybe (NonEmpty UserImportJobType) -> Int -> ListUserImportJobsResponse

-- | Create a value of <a>ListUserImportJobsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:paginationToken:ListUserImportJobs'</a>,
--   <a>listUserImportJobsResponse_paginationToken</a> - An identifier that
--   can be used to return the next set of user import jobs in the list.
--   
--   <a>$sel:userImportJobs:ListUserImportJobsResponse'</a>,
--   <a>listUserImportJobsResponse_userImportJobs</a> - The user import
--   jobs.
--   
--   <a>$sel:httpStatus:ListUserImportJobsResponse'</a>,
--   <a>listUserImportJobsResponse_httpStatus</a> - The response's http
--   status code.
newListUserImportJobsResponse :: Int -> ListUserImportJobsResponse

-- | <i>See:</i> <a>newListTagsForResource</a> smart constructor.
data ListTagsForResource
ListTagsForResource' :: Text -> ListTagsForResource

-- | Create a value of <a>ListTagsForResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:ListTagsForResource'</a>,
--   <a>listTagsForResource_resourceArn</a> - The Amazon Resource Name
--   (ARN) of the user pool that the tags are assigned to.
newListTagsForResource :: Text -> ListTagsForResource

-- | <i>See:</i> <a>newListTagsForResourceResponse</a> smart constructor.
data ListTagsForResourceResponse
ListTagsForResourceResponse' :: Maybe (HashMap Text Text) -> Int -> ListTagsForResourceResponse

-- | Create a value of <a>ListTagsForResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_tags</a> - The tags that are assigned
--   to the user pool.
--   
--   <a>$sel:httpStatus:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_httpStatus</a> - The response's http
--   status code.
newListTagsForResourceResponse :: Int -> ListTagsForResourceResponse

-- | <i>See:</i> <a>newDescribeIdentityProvider</a> smart constructor.
data DescribeIdentityProvider
DescribeIdentityProvider' :: Text -> Text -> DescribeIdentityProvider

-- | Create a value of <a>DescribeIdentityProvider</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userPoolId:DescribeIdentityProvider'</a>,
--   <a>describeIdentityProvider_userPoolId</a> - The user pool ID.
--   
--   <a>$sel:providerName:DescribeIdentityProvider'</a>,
--   <a>describeIdentityProvider_providerName</a> - The identity provider
--   name.
newDescribeIdentityProvider :: Text -> Text -> DescribeIdentityProvider

-- | <i>See:</i> <a>newDescribeIdentityProviderResponse</a> smart
--   constructor.
data DescribeIdentityProviderResponse
DescribeIdentityProviderResponse' :: Int -> IdentityProviderType -> DescribeIdentityProviderResponse

-- | Create a value of <a>DescribeIdentityProviderResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DescribeIdentityProviderResponse'</a>,
--   <a>describeIdentityProviderResponse_httpStatus</a> - The response's
--   http status code.
--   
--   <a>$sel:identityProvider:DescribeIdentityProviderResponse'</a>,
--   <a>describeIdentityProviderResponse_identityProvider</a> - The
--   identity provider that was deleted.
newDescribeIdentityProviderResponse :: Int -> IdentityProviderType -> DescribeIdentityProviderResponse

-- | Represents the request to list users.
--   
--   <i>See:</i> <a>newListUsers</a> smart constructor.
data ListUsers
ListUsers' :: Maybe Text -> Maybe [Text] -> Maybe Natural -> Maybe Text -> Text -> ListUsers

-- | Create a value of <a>ListUsers</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:paginationToken:ListUsers'</a>,
--   <a>listUsers_paginationToken</a> - An identifier that was returned
--   from the previous call to this operation, which can be used to return
--   the next set of items in the list.
--   
--   <a>$sel:attributesToGet:ListUsers'</a>,
--   <a>listUsers_attributesToGet</a> - An array of strings, where each
--   string is the name of a user attribute to be returned for each user in
--   the search results. If the array is null, all attributes are returned.
--   
--   <a>$sel:limit:ListUsers'</a>, <a>listUsers_limit</a> - Maximum number
--   of users to be returned.
--   
--   <a>$sel:filter':ListUsers'</a>, <a>listUsers_filter</a> - A filter
--   string of the form "<i>AttributeName</i> <i>Filter-Type</i>
--   "<i>AttributeValue</i>"". Quotation marks within the filter string
--   must be escaped using the backslash (\) character. For example,
--   "<tt>family_name</tt> = \"Reddy\"".
--   
--   <ul>
--   <li><i>AttributeName</i>: The name of the attribute to search for. You
--   can only search for one attribute at a time.</li>
--   <li><i>Filter-Type</i>: For an exact match, use =, for example,
--   "<tt>given_name</tt> = \"Jon\"". For a prefix ("starts with") match,
--   use ^=, for example, "<tt>given_name</tt> ^= \"Jon\"".</li>
--   <li><i>AttributeValue</i>: The attribute value that must be matched
--   for each user.</li>
--   </ul>
--   
--   If the filter string is empty, <tt>ListUsers</tt> returns all users in
--   the user pool.
--   
--   You can only search for the following standard attributes:
--   
--   <ul>
--   <li><tt>username</tt> (case-sensitive)</li>
--   <li><pre>email</pre></li>
--   <li><pre>phone_number</pre></li>
--   <li><pre>name</pre></li>
--   <li><pre>given_name</pre></li>
--   <li><pre>family_name</pre></li>
--   <li><pre>preferred_username</pre></li>
--   <li><tt>cognito:user_status</tt> (called <b>Status</b> in the Console)
--   (case-insensitive)</li>
--   <li><pre>status (called Enabled in the Console)
--   (case-sensitive)</pre></li>
--   <li><pre>sub</pre></li>
--   </ul>
--   
--   Custom attributes are not searchable.
--   
--   For more information, see <a>Searching for Users Using the ListUsers
--   API</a> and <a>Examples of Using the ListUsers API</a> in the
--   <i>Amazon Cognito Developer Guide</i>.
--   
--   <a>$sel:userPoolId:ListUsers'</a>, <a>listUsers_userPoolId</a> - The
--   user pool ID for the user pool on which the search should be
--   performed.
newListUsers :: Text -> ListUsers

-- | The response from the request to list users.
--   
--   <i>See:</i> <a>newListUsersResponse</a> smart constructor.
data ListUsersResponse
ListUsersResponse' :: Maybe Text -> Maybe [UserType] -> Int -> ListUsersResponse

-- | Create a value of <a>ListUsersResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:paginationToken:ListUsers'</a>,
--   <a>listUsersResponse_paginationToken</a> - An identifier that was
--   returned from the previous call to this operation, which can be used
--   to return the next set of items in the list.
--   
--   <a>$sel:users:ListUsersResponse'</a>, <a>listUsersResponse_users</a> -
--   The users returned in the request to list users.
--   
--   <a>$sel:httpStatus:ListUsersResponse'</a>,
--   <a>listUsersResponse_httpStatus</a> - The response's http status code.
newListUsersResponse :: Int -> ListUsersResponse

-- | Represents the request to delete user attributes as an administrator.
--   
--   <i>See:</i> <a>newAdminDeleteUserAttributes</a> smart constructor.
data AdminDeleteUserAttributes
AdminDeleteUserAttributes' :: Text -> Sensitive Text -> [Text] -> AdminDeleteUserAttributes

-- | Create a value of <a>AdminDeleteUserAttributes</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userPoolId:AdminDeleteUserAttributes'</a>,
--   <a>adminDeleteUserAttributes_userPoolId</a> - The user pool ID for the
--   user pool where you want to delete user attributes.
--   
--   <a>$sel:username:AdminDeleteUserAttributes'</a>,
--   <a>adminDeleteUserAttributes_username</a> - The user name of the user
--   from which you would like to delete attributes.
--   
--   <a>$sel:userAttributeNames:AdminDeleteUserAttributes'</a>,
--   <a>adminDeleteUserAttributes_userAttributeNames</a> - An array of
--   strings representing the user attribute names you wish to delete.
--   
--   For custom attributes, you must prepend the <tt>custom:</tt> prefix to
--   the attribute name.
newAdminDeleteUserAttributes :: Text -> Text -> AdminDeleteUserAttributes

-- | Represents the response received from the server for a request to
--   delete user attributes.
--   
--   <i>See:</i> <a>newAdminDeleteUserAttributesResponse</a> smart
--   constructor.
data AdminDeleteUserAttributesResponse
AdminDeleteUserAttributesResponse' :: Int -> AdminDeleteUserAttributesResponse

-- | Create a value of <a>AdminDeleteUserAttributesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:AdminDeleteUserAttributesResponse'</a>,
--   <a>adminDeleteUserAttributesResponse_httpStatus</a> - The response's
--   http status code.
newAdminDeleteUserAttributesResponse :: Int -> AdminDeleteUserAttributesResponse

-- | <i>See:</i> <a>newDescribeUserPoolDomain</a> smart constructor.
data DescribeUserPoolDomain
DescribeUserPoolDomain' :: Text -> DescribeUserPoolDomain

-- | Create a value of <a>DescribeUserPoolDomain</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:domain:DescribeUserPoolDomain'</a>,
--   <a>describeUserPoolDomain_domain</a> - The domain string.
newDescribeUserPoolDomain :: Text -> DescribeUserPoolDomain

-- | <i>See:</i> <a>newDescribeUserPoolDomainResponse</a> smart
--   constructor.
data DescribeUserPoolDomainResponse
DescribeUserPoolDomainResponse' :: Maybe DomainDescriptionType -> Int -> DescribeUserPoolDomainResponse

-- | Create a value of <a>DescribeUserPoolDomainResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:domainDescription:DescribeUserPoolDomainResponse'</a>,
--   <a>describeUserPoolDomainResponse_domainDescription</a> - A domain
--   description object containing information about the domain.
--   
--   <a>$sel:httpStatus:DescribeUserPoolDomainResponse'</a>,
--   <a>describeUserPoolDomainResponse_httpStatus</a> - The response's http
--   status code.
newDescribeUserPoolDomainResponse :: Int -> DescribeUserPoolDomainResponse

-- | Represents the request to update the user's attributes as an
--   administrator.
--   
--   <i>See:</i> <a>newAdminUpdateUserAttributes</a> smart constructor.
data AdminUpdateUserAttributes
AdminUpdateUserAttributes' :: Maybe (HashMap Text Text) -> Text -> Sensitive Text -> [AttributeType] -> AdminUpdateUserAttributes

-- | Create a value of <a>AdminUpdateUserAttributes</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientMetadata:AdminUpdateUserAttributes'</a>,
--   <a>adminUpdateUserAttributes_clientMetadata</a> - A map of custom
--   key-value pairs that you can provide as input for any custom workflows
--   that this action triggers.
--   
--   You create custom workflows by assigning Lambda functions to user pool
--   triggers. When you use the AdminUpdateUserAttributes API action,
--   Amazon Cognito invokes the function that is assigned to the <i>custom
--   message</i> trigger. When Amazon Cognito invokes this function, it
--   passes a JSON payload, which the function receives as input. This
--   payload contains a <tt>clientMetadata</tt> attribute, which provides
--   the data that you assigned to the ClientMetadata parameter in your
--   AdminUpdateUserAttributes request. In your function code in Lambda,
--   you can process the <tt>clientMetadata</tt> value to enhance your
--   workflow for your specific needs.
--   
--   For more information, see <a>Customizing User Pool Workflows with
--   Lambda Triggers</a> in the <i>Amazon Cognito Developer Guide</i>.
--   
--   Take the following limitations into consideration when you use the
--   ClientMetadata parameter:
--   
--   <ul>
--   <li>Amazon Cognito does not store the ClientMetadata value. This data
--   is available only to Lambda triggers that are assigned to a user pool
--   to support custom workflows. If your user pool configuration does not
--   include triggers, the ClientMetadata parameter serves no purpose.</li>
--   <li>Amazon Cognito does not validate the ClientMetadata value.</li>
--   <li>Amazon Cognito does not encrypt the the ClientMetadata value, so
--   don't use it to provide sensitive information.</li>
--   </ul>
--   
--   <a>$sel:userPoolId:AdminUpdateUserAttributes'</a>,
--   <a>adminUpdateUserAttributes_userPoolId</a> - The user pool ID for the
--   user pool where you want to update user attributes.
--   
--   <a>$sel:username:AdminUpdateUserAttributes'</a>,
--   <a>adminUpdateUserAttributes_username</a> - The user name of the user
--   for whom you want to update user attributes.
--   
--   <a>$sel:userAttributes:AdminUpdateUserAttributes'</a>,
--   <a>adminUpdateUserAttributes_userAttributes</a> - An array of
--   name-value pairs representing user attributes.
--   
--   For custom attributes, you must prepend the <tt>custom:</tt> prefix to
--   the attribute name.
newAdminUpdateUserAttributes :: Text -> Text -> AdminUpdateUserAttributes

-- | Represents the response from the server for the request to update user
--   attributes as an administrator.
--   
--   <i>See:</i> <a>newAdminUpdateUserAttributesResponse</a> smart
--   constructor.
data AdminUpdateUserAttributesResponse
AdminUpdateUserAttributesResponse' :: Int -> AdminUpdateUserAttributesResponse

-- | Create a value of <a>AdminUpdateUserAttributesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:AdminUpdateUserAttributesResponse'</a>,
--   <a>adminUpdateUserAttributesResponse_httpStatus</a> - The response's
--   http status code.
newAdminUpdateUserAttributesResponse :: Int -> AdminUpdateUserAttributesResponse

-- | Represents the request to get the specified user as an administrator.
--   
--   <i>See:</i> <a>newAdminGetUser</a> smart constructor.
data AdminGetUser
AdminGetUser' :: Text -> Sensitive Text -> AdminGetUser

-- | Create a value of <a>AdminGetUser</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userPoolId:AdminGetUser'</a>, <a>adminGetUser_userPoolId</a> -
--   The user pool ID for the user pool where you want to get information
--   about the user.
--   
--   <a>$sel:username:AdminGetUser'</a>, <a>adminGetUser_username</a> - The
--   user name of the user you wish to retrieve.
newAdminGetUser :: Text -> Text -> AdminGetUser

-- | Represents the response from the server from the request to get the
--   specified user as an administrator.
--   
--   <i>See:</i> <a>newAdminGetUserResponse</a> smart constructor.
data AdminGetUserResponse
AdminGetUserResponse' :: Maybe Bool -> Maybe UserStatusType -> Maybe [AttributeType] -> Maybe POSIX -> Maybe [Text] -> Maybe [MFAOptionType] -> Maybe POSIX -> Maybe Text -> Int -> Sensitive Text -> AdminGetUserResponse

-- | Create a value of <a>AdminGetUserResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:enabled:AdminGetUserResponse'</a>,
--   <a>adminGetUserResponse_enabled</a> - Indicates that the status is
--   enabled.
--   
--   <a>$sel:userStatus:AdminGetUserResponse'</a>,
--   <a>adminGetUserResponse_userStatus</a> - The user status. Can be one
--   of the following:
--   
--   <ul>
--   <li>UNCONFIRMED - User has been created but not confirmed.</li>
--   <li>CONFIRMED - User has been confirmed.</li>
--   <li>ARCHIVED - User is no longer active.</li>
--   <li>COMPROMISED - User is disabled due to a potential security
--   threat.</li>
--   <li>UNKNOWN - User status is not known.</li>
--   <li>RESET_REQUIRED - User is confirmed, but the user must request a
--   code and reset his or her password before he or she can sign in.</li>
--   <li>FORCE_CHANGE_PASSWORD - The user is confirmed and the user can
--   sign in using a temporary password, but on first sign-in, the user
--   must change his or her password to a new value before doing anything
--   else.</li>
--   </ul>
--   
--   <a>$sel:userAttributes:AdminGetUserResponse'</a>,
--   <a>adminGetUserResponse_userAttributes</a> - An array of name-value
--   pairs representing user attributes.
--   
--   <a>$sel:userCreateDate:AdminGetUserResponse'</a>,
--   <a>adminGetUserResponse_userCreateDate</a> - The date the user was
--   created.
--   
--   <a>$sel:userMFASettingList:AdminGetUserResponse'</a>,
--   <a>adminGetUserResponse_userMFASettingList</a> - The MFA options that
--   are enabled for the user. The possible values in this list are
--   <tt>SMS_MFA</tt> and <tt>SOFTWARE_TOKEN_MFA</tt>.
--   
--   <a>$sel:mfaOptions:AdminGetUserResponse'</a>,
--   <a>adminGetUserResponse_mfaOptions</a> - <i>This response parameter is
--   no longer supported.</i> It provides information only about SMS MFA
--   configurations. It doesn't provide information about TOTP software
--   token MFA configurations. To look up information about either type of
--   MFA configuration, use UserMFASettingList instead.
--   
--   <a>$sel:userLastModifiedDate:AdminGetUserResponse'</a>,
--   <a>adminGetUserResponse_userLastModifiedDate</a> - The date the user
--   was last modified.
--   
--   <a>$sel:preferredMfaSetting:AdminGetUserResponse'</a>,
--   <a>adminGetUserResponse_preferredMfaSetting</a> - The user's preferred
--   MFA setting.
--   
--   <a>$sel:httpStatus:AdminGetUserResponse'</a>,
--   <a>adminGetUserResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:username:AdminGetUser'</a>,
--   <a>adminGetUserResponse_username</a> - The user name of the user about
--   whom you are receiving information.
newAdminGetUserResponse :: Int -> Text -> AdminGetUserResponse

-- | The request to sign out of all devices, as an administrator.
--   
--   <i>See:</i> <a>newAdminUserGlobalSignOut</a> smart constructor.
data AdminUserGlobalSignOut
AdminUserGlobalSignOut' :: Text -> Sensitive Text -> AdminUserGlobalSignOut

-- | Create a value of <a>AdminUserGlobalSignOut</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userPoolId:AdminUserGlobalSignOut'</a>,
--   <a>adminUserGlobalSignOut_userPoolId</a> - The user pool ID.
--   
--   <a>$sel:username:AdminUserGlobalSignOut'</a>,
--   <a>adminUserGlobalSignOut_username</a> - The user name.
newAdminUserGlobalSignOut :: Text -> Text -> AdminUserGlobalSignOut

-- | The global sign-out response, as an administrator.
--   
--   <i>See:</i> <a>newAdminUserGlobalSignOutResponse</a> smart
--   constructor.
data AdminUserGlobalSignOutResponse
AdminUserGlobalSignOutResponse' :: Int -> AdminUserGlobalSignOutResponse

-- | Create a value of <a>AdminUserGlobalSignOutResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:AdminUserGlobalSignOutResponse'</a>,
--   <a>adminUserGlobalSignOutResponse_httpStatus</a> - The response's http
--   status code.
newAdminUserGlobalSignOutResponse :: Int -> AdminUserGlobalSignOutResponse

-- | <i>See:</i> <a>newListUsersInGroup</a> smart constructor.
data ListUsersInGroup
ListUsersInGroup' :: Maybe Text -> Maybe Natural -> Text -> Text -> ListUsersInGroup

-- | Create a value of <a>ListUsersInGroup</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListUsersInGroup'</a>,
--   <a>listUsersInGroup_nextToken</a> - An identifier that was returned
--   from the previous call to this operation, which can be used to return
--   the next set of items in the list.
--   
--   <a>$sel:limit:ListUsersInGroup'</a>, <a>listUsersInGroup_limit</a> -
--   The limit of the request to list users.
--   
--   <a>$sel:userPoolId:ListUsersInGroup'</a>,
--   <a>listUsersInGroup_userPoolId</a> - The user pool ID for the user
--   pool.
--   
--   <a>$sel:groupName:ListUsersInGroup'</a>,
--   <a>listUsersInGroup_groupName</a> - The name of the group.
newListUsersInGroup :: Text -> Text -> ListUsersInGroup

-- | <i>See:</i> <a>newListUsersInGroupResponse</a> smart constructor.
data ListUsersInGroupResponse
ListUsersInGroupResponse' :: Maybe [UserType] -> Maybe Text -> Int -> ListUsersInGroupResponse

-- | Create a value of <a>ListUsersInGroupResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:users:ListUsersInGroupResponse'</a>,
--   <a>listUsersInGroupResponse_users</a> - The users returned in the
--   request to list users.
--   
--   <a>$sel:nextToken:ListUsersInGroup'</a>,
--   <a>listUsersInGroupResponse_nextToken</a> - An identifier that was
--   returned from the previous call to this operation, which can be used
--   to return the next set of items in the list.
--   
--   <a>$sel:httpStatus:ListUsersInGroupResponse'</a>,
--   <a>listUsersInGroupResponse_httpStatus</a> - The response's http
--   status code.
newListUsersInGroupResponse :: Int -> ListUsersInGroupResponse

-- | <i>See:</i> <a>newAssociateSoftwareToken</a> smart constructor.
data AssociateSoftwareToken
AssociateSoftwareToken' :: Maybe (Sensitive Text) -> Maybe Text -> AssociateSoftwareToken

-- | Create a value of <a>AssociateSoftwareToken</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:accessToken:AssociateSoftwareToken'</a>,
--   <a>associateSoftwareToken_accessToken</a> - The access token.
--   
--   <a>$sel:session:AssociateSoftwareToken'</a>,
--   <a>associateSoftwareToken_session</a> - The session which should be
--   passed both ways in challenge-response calls to the service. This
--   allows authentication of the user as part of the MFA setup process.
newAssociateSoftwareToken :: AssociateSoftwareToken

-- | <i>See:</i> <a>newAssociateSoftwareTokenResponse</a> smart
--   constructor.
data AssociateSoftwareTokenResponse
AssociateSoftwareTokenResponse' :: Maybe (Sensitive Text) -> Maybe Text -> Int -> AssociateSoftwareTokenResponse

-- | Create a value of <a>AssociateSoftwareTokenResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:secretCode:AssociateSoftwareTokenResponse'</a>,
--   <a>associateSoftwareTokenResponse_secretCode</a> - A unique generated
--   shared secret code that is used in the TOTP algorithm to generate a
--   one time code.
--   
--   <a>$sel:session:AssociateSoftwareToken'</a>,
--   <a>associateSoftwareTokenResponse_session</a> - The session which
--   should be passed both ways in challenge-response calls to the service.
--   This allows authentication of the user as part of the MFA setup
--   process.
--   
--   <a>$sel:httpStatus:AssociateSoftwareTokenResponse'</a>,
--   <a>associateSoftwareTokenResponse_httpStatus</a> - The response's http
--   status code.
newAssociateSoftwareTokenResponse :: Int -> AssociateSoftwareTokenResponse

-- | <i>See:</i> <a>newAdminDisableProviderForUser</a> smart constructor.
data AdminDisableProviderForUser
AdminDisableProviderForUser' :: Text -> ProviderUserIdentifierType -> AdminDisableProviderForUser

-- | Create a value of <a>AdminDisableProviderForUser</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userPoolId:AdminDisableProviderForUser'</a>,
--   <a>adminDisableProviderForUser_userPoolId</a> - The user pool ID for
--   the user pool.
--   
--   <a>$sel:user:AdminDisableProviderForUser'</a>,
--   <a>adminDisableProviderForUser_user</a> - The user to be disabled.
newAdminDisableProviderForUser :: Text -> ProviderUserIdentifierType -> AdminDisableProviderForUser

-- | <i>See:</i> <a>newAdminDisableProviderForUserResponse</a> smart
--   constructor.
data AdminDisableProviderForUserResponse
AdminDisableProviderForUserResponse' :: Int -> AdminDisableProviderForUserResponse

-- | Create a value of <a>AdminDisableProviderForUserResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:AdminDisableProviderForUserResponse'</a>,
--   <a>adminDisableProviderForUserResponse_httpStatus</a> - The response's
--   http status code.
newAdminDisableProviderForUserResponse :: Int -> AdminDisableProviderForUserResponse

-- | Represents the request to reset a user's password.
--   
--   <i>See:</i> <a>newForgotPassword</a> smart constructor.
data ForgotPassword
ForgotPassword' :: Maybe (HashMap Text Text) -> Maybe AnalyticsMetadataType -> Maybe UserContextDataType -> Maybe (Sensitive Text) -> Sensitive Text -> Sensitive Text -> ForgotPassword

-- | Create a value of <a>ForgotPassword</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientMetadata:ForgotPassword'</a>,
--   <a>forgotPassword_clientMetadata</a> - A map of custom key-value pairs
--   that you can provide as input for any custom workflows that this
--   action triggers.
--   
--   You create custom workflows by assigning Lambda functions to user pool
--   triggers. When you use the ForgotPassword API action, Amazon Cognito
--   invokes any functions that are assigned to the following triggers:
--   /pre sign-up<i>, </i>custom message<i>, and </i>user migration/. When
--   Amazon Cognito invokes any of these functions, it passes a JSON
--   payload, which the function receives as input. This payload contains a
--   <tt>clientMetadata</tt> attribute, which provides the data that you
--   assigned to the ClientMetadata parameter in your ForgotPassword
--   request. In your function code in Lambda, you can process the
--   <tt>clientMetadata</tt> value to enhance your workflow for your
--   specific needs.
--   
--   For more information, see <a>Customizing User Pool Workflows with
--   Lambda Triggers</a> in the <i>Amazon Cognito Developer Guide</i>.
--   
--   Take the following limitations into consideration when you use the
--   ClientMetadata parameter:
--   
--   <ul>
--   <li>Amazon Cognito does not store the ClientMetadata value. This data
--   is available only to Lambda triggers that are assigned to a user pool
--   to support custom workflows. If your user pool configuration does not
--   include triggers, the ClientMetadata parameter serves no purpose.</li>
--   <li>Amazon Cognito does not validate the ClientMetadata value.</li>
--   <li>Amazon Cognito does not encrypt the the ClientMetadata value, so
--   don't use it to provide sensitive information.</li>
--   </ul>
--   
--   <a>$sel:analyticsMetadata:ForgotPassword'</a>,
--   <a>forgotPassword_analyticsMetadata</a> - The Amazon Pinpoint
--   analytics metadata for collecting metrics for <tt>ForgotPassword</tt>
--   calls.
--   
--   <a>$sel:userContextData:ForgotPassword'</a>,
--   <a>forgotPassword_userContextData</a> - Contextual data such as the
--   user's device fingerprint, IP address, or location used for evaluating
--   the risk of an unexpected event by Amazon Cognito advanced security.
--   
--   <a>$sel:secretHash:ForgotPassword'</a>,
--   <a>forgotPassword_secretHash</a> - A keyed-hash message authentication
--   code (HMAC) calculated using the secret key of a user pool client and
--   username plus the client ID in the message.
--   
--   <a>$sel:clientId:ForgotPassword'</a>, <a>forgotPassword_clientId</a> -
--   The ID of the client associated with the user pool.
--   
--   <a>$sel:username:ForgotPassword'</a>, <a>forgotPassword_username</a> -
--   The user name of the user for whom you want to enter a code to reset a
--   forgotten password.
newForgotPassword :: Text -> Text -> ForgotPassword

-- | Respresents the response from the server regarding the request to
--   reset a password.
--   
--   <i>See:</i> <a>newForgotPasswordResponse</a> smart constructor.
data ForgotPasswordResponse
ForgotPasswordResponse' :: Maybe CodeDeliveryDetailsType -> Int -> ForgotPasswordResponse

-- | Create a value of <a>ForgotPasswordResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:codeDeliveryDetails:ForgotPasswordResponse'</a>,
--   <a>forgotPasswordResponse_codeDeliveryDetails</a> - The code delivery
--   details returned by the server in response to the request to reset a
--   password.
--   
--   <a>$sel:httpStatus:ForgotPasswordResponse'</a>,
--   <a>forgotPasswordResponse_httpStatus</a> - The response's http status
--   code.
newForgotPasswordResponse :: Int -> ForgotPasswordResponse

-- | Represents the request to describe the user pool.
--   
--   <i>See:</i> <a>newDescribeUserPool</a> smart constructor.
data DescribeUserPool
DescribeUserPool' :: Text -> DescribeUserPool

-- | Create a value of <a>DescribeUserPool</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userPoolId:DescribeUserPool'</a>,
--   <a>describeUserPool_userPoolId</a> - The user pool ID for the user
--   pool you want to describe.
newDescribeUserPool :: Text -> DescribeUserPool

-- | Represents the response to describe the user pool.
--   
--   <i>See:</i> <a>newDescribeUserPoolResponse</a> smart constructor.
data DescribeUserPoolResponse
DescribeUserPoolResponse' :: Maybe UserPoolType -> Int -> DescribeUserPoolResponse

-- | Create a value of <a>DescribeUserPoolResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userPool:DescribeUserPoolResponse'</a>,
--   <a>describeUserPoolResponse_userPool</a> - The container of metadata
--   returned by the server to describe the pool.
--   
--   <a>$sel:httpStatus:DescribeUserPoolResponse'</a>,
--   <a>describeUserPoolResponse_httpStatus</a> - The response's http
--   status code.
newDescribeUserPoolResponse :: Int -> DescribeUserPoolResponse

-- | Initiates the authentication request.
--   
--   <i>See:</i> <a>newInitiateAuth</a> smart constructor.
data InitiateAuth
InitiateAuth' :: Maybe (HashMap Text Text) -> Maybe AnalyticsMetadataType -> Maybe UserContextDataType -> Maybe (Sensitive (HashMap Text Text)) -> AuthFlowType -> Sensitive Text -> InitiateAuth

-- | Create a value of <a>InitiateAuth</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientMetadata:InitiateAuth'</a>,
--   <a>initiateAuth_clientMetadata</a> - A map of custom key-value pairs
--   that you can provide as input for certain custom workflows that this
--   action triggers.
--   
--   You create custom workflows by assigning Lambda functions to user pool
--   triggers. When you use the InitiateAuth API action, Amazon Cognito
--   invokes the Lambda functions that are specified for various triggers.
--   The ClientMetadata value is passed as input to the functions for only
--   the following triggers:
--   
--   <ul>
--   <li>Pre signup</li>
--   <li>Pre authentication</li>
--   <li>User migration</li>
--   </ul>
--   
--   When Amazon Cognito invokes the functions for these triggers, it
--   passes a JSON payload, which the function receives as input. This
--   payload contains a <tt>validationData</tt> attribute, which provides
--   the data that you assigned to the ClientMetadata parameter in your
--   InitiateAuth request. In your function code in Lambda, you can process
--   the <tt>validationData</tt> value to enhance your workflow for your
--   specific needs.
--   
--   When you use the InitiateAuth API action, Amazon Cognito also invokes
--   the functions for the following triggers, but it does not provide the
--   ClientMetadata value as input:
--   
--   <ul>
--   <li>Post authentication</li>
--   <li>Custom message</li>
--   <li>Pre token generation</li>
--   <li>Create auth challenge</li>
--   <li>Define auth challenge</li>
--   <li>Verify auth challenge</li>
--   </ul>
--   
--   For more information, see <a>Customizing User Pool Workflows with
--   Lambda Triggers</a> in the <i>Amazon Cognito Developer Guide</i>.
--   
--   Take the following limitations into consideration when you use the
--   ClientMetadata parameter:
--   
--   <ul>
--   <li>Amazon Cognito does not store the ClientMetadata value. This data
--   is available only to Lambda triggers that are assigned to a user pool
--   to support custom workflows. If your user pool configuration does not
--   include triggers, the ClientMetadata parameter serves no purpose.</li>
--   <li>Amazon Cognito does not validate the ClientMetadata value.</li>
--   <li>Amazon Cognito does not encrypt the the ClientMetadata value, so
--   don't use it to provide sensitive information.</li>
--   </ul>
--   
--   <a>$sel:analyticsMetadata:InitiateAuth'</a>,
--   <a>initiateAuth_analyticsMetadata</a> - The Amazon Pinpoint analytics
--   metadata for collecting metrics for <tt>InitiateAuth</tt> calls.
--   
--   <a>$sel:userContextData:InitiateAuth'</a>,
--   <a>initiateAuth_userContextData</a> - Contextual data such as the
--   user's device fingerprint, IP address, or location used for evaluating
--   the risk of an unexpected event by Amazon Cognito advanced security.
--   
--   <a>$sel:authParameters:InitiateAuth'</a>,
--   <a>initiateAuth_authParameters</a> - The authentication parameters.
--   These are inputs corresponding to the <tt>AuthFlow</tt> that you are
--   invoking. The required values depend on the value of
--   <tt>AuthFlow</tt>:
--   
--   <ul>
--   <li>For <tt>USER_SRP_AUTH</tt>: <tt>USERNAME</tt> (required),
--   <tt>SRP_A</tt> (required), <tt>SECRET_HASH</tt> (required if the app
--   client is configured with a client secret), <tt>DEVICE_KEY</tt>.</li>
--   <li>For <tt>REFRESH_TOKEN_AUTH/REFRESH_TOKEN</tt>:
--   <tt>REFRESH_TOKEN</tt> (required), <tt>SECRET_HASH</tt> (required if
--   the app client is configured with a client secret),
--   <tt>DEVICE_KEY</tt>.</li>
--   <li>For <tt>CUSTOM_AUTH</tt>: <tt>USERNAME</tt> (required),
--   <tt>SECRET_HASH</tt> (if app client is configured with client secret),
--   <tt>DEVICE_KEY</tt>. To start the authentication flow with password
--   verification, include <tt>ChallengeName: SRP_A</tt> and <tt>SRP_A:
--   (The SRP_A Value)</tt>.</li>
--   </ul>
--   
--   <a>$sel:authFlow:InitiateAuth'</a>, <a>initiateAuth_authFlow</a> - The
--   authentication flow for this call to execute. The API action will
--   depend on this value. For example:
--   
--   <ul>
--   <li><tt>REFRESH_TOKEN_AUTH</tt> will take in a valid refresh token and
--   return new tokens.</li>
--   <li><tt>USER_SRP_AUTH</tt> will take in <tt>USERNAME</tt> and
--   <tt>SRP_A</tt> and return the SRP variables to be used for next
--   challenge execution.</li>
--   <li><tt>USER_PASSWORD_AUTH</tt> will take in <tt>USERNAME</tt> and
--   <tt>PASSWORD</tt> and return the next challenge or tokens.</li>
--   </ul>
--   
--   Valid values include:
--   
--   <ul>
--   <li><tt>USER_SRP_AUTH</tt>: Authentication flow for the Secure Remote
--   Password (SRP) protocol.</li>
--   <li><tt>REFRESH_TOKEN_AUTH</tt>/<tt>REFRESH_TOKEN</tt>: Authentication
--   flow for refreshing the access token and ID token by supplying a valid
--   refresh token.</li>
--   <li><tt>CUSTOM_AUTH</tt>: Custom authentication flow.</li>
--   <li><tt>USER_PASSWORD_AUTH</tt>: Non-SRP authentication flow; USERNAME
--   and PASSWORD are passed directly. If a user migration Lambda trigger
--   is set, this flow will invoke the user migration Lambda if the
--   USERNAME is not found in the user pool.</li>
--   <li><tt>ADMIN_USER_PASSWORD_AUTH</tt>: Admin-based user password
--   authentication. This replaces the <tt>ADMIN_NO_SRP_AUTH</tt>
--   authentication flow. In this flow, Cognito receives the password in
--   the request instead of using the SRP process to verify passwords.</li>
--   </ul>
--   
--   <tt>ADMIN_NO_SRP_AUTH</tt> is not a valid value.
--   
--   <a>$sel:clientId:InitiateAuth'</a>, <a>initiateAuth_clientId</a> - The
--   app client ID.
newInitiateAuth :: AuthFlowType -> Text -> InitiateAuth

-- | Initiates the authentication response.
--   
--   <i>See:</i> <a>newInitiateAuthResponse</a> smart constructor.
data InitiateAuthResponse
InitiateAuthResponse' :: Maybe ChallengeNameType -> Maybe (HashMap Text Text) -> Maybe AuthenticationResultType -> Maybe Text -> Int -> InitiateAuthResponse

-- | Create a value of <a>InitiateAuthResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:challengeName:InitiateAuthResponse'</a>,
--   <a>initiateAuthResponse_challengeName</a> - The name of the challenge
--   which you are responding to with this call. This is returned to you in
--   the <tt>AdminInitiateAuth</tt> response if you need to pass another
--   challenge.
--   
--   Valid values include the following. Note that all of these challenges
--   require <tt>USERNAME</tt> and <tt>SECRET_HASH</tt> (if applicable) in
--   the parameters.
--   
--   <ul>
--   <li><tt>SMS_MFA</tt>: Next challenge is to supply an
--   <tt>SMS_MFA_CODE</tt>, delivered via SMS.</li>
--   <li><tt>PASSWORD_VERIFIER</tt>: Next challenge is to supply
--   <tt>PASSWORD_CLAIM_SIGNATURE</tt>,
--   <tt>PASSWORD_CLAIM_SECRET_BLOCK</tt>, and <tt>TIMESTAMP</tt> after the
--   client-side SRP calculations.</li>
--   <li><tt>CUSTOM_CHALLENGE</tt>: This is returned if your custom
--   authentication flow determines that the user should pass another
--   challenge before tokens are issued.</li>
--   <li><tt>DEVICE_SRP_AUTH</tt>: If device tracking was enabled on your
--   user pool and the previous challenges were passed, this challenge is
--   returned so that Amazon Cognito can start tracking this device.</li>
--   <li><tt>DEVICE_PASSWORD_VERIFIER</tt>: Similar to
--   <tt>PASSWORD_VERIFIER</tt>, but for devices only.</li>
--   <li><tt>NEW_PASSWORD_REQUIRED</tt>: For users who are required to
--   change their passwords after successful first login. This challenge
--   should be passed with <tt>NEW_PASSWORD</tt> and any other required
--   attributes.</li>
--   <li><tt>MFA_SETUP</tt>: For users who are required to setup an MFA
--   factor before they can sign-in. The MFA types enabled for the user
--   pool will be listed in the challenge parameters <tt>MFA_CAN_SETUP</tt>
--   value.To setup software token MFA, use the session returned here from
--   <tt>InitiateAuth</tt> as an input to <tt>AssociateSoftwareToken</tt>,
--   and use the session returned by <tt>VerifySoftwareToken</tt> as an
--   input to <tt>RespondToAuthChallenge</tt> with challenge name
--   <tt>MFA_SETUP</tt> to complete sign-in. To setup SMS MFA, users will
--   need help from an administrator to add a phone number to their account
--   and then call <tt>InitiateAuth</tt> again to restart sign-in.</li>
--   </ul>
--   
--   <a>$sel:challengeParameters:InitiateAuthResponse'</a>,
--   <a>initiateAuthResponse_challengeParameters</a> - The challenge
--   parameters. These are returned to you in the <tt>InitiateAuth</tt>
--   response if you need to pass another challenge. The responses in this
--   parameter should be used to compute inputs to the next call
--   (<tt>RespondToAuthChallenge</tt>).
--   
--   All challenges require <tt>USERNAME</tt> and <tt>SECRET_HASH</tt> (if
--   applicable).
--   
--   <a>$sel:authenticationResult:InitiateAuthResponse'</a>,
--   <a>initiateAuthResponse_authenticationResult</a> - The result of the
--   authentication response. This is only returned if the caller does not
--   need to pass another challenge. If the caller does need to pass
--   another challenge before it gets tokens, <tt>ChallengeName</tt>,
--   <tt>ChallengeParameters</tt>, and <tt>Session</tt> are returned.
--   
--   <a>$sel:session:InitiateAuthResponse'</a>,
--   <a>initiateAuthResponse_session</a> - The session which should be
--   passed both ways in challenge-response calls to the service. If the
--   caller needs to go through another challenge, they return a session
--   with other challenge parameters. This session should be passed as it
--   is to the next <tt>RespondToAuthChallenge</tt> API call.
--   
--   <a>$sel:httpStatus:InitiateAuthResponse'</a>,
--   <a>initiateAuthResponse_httpStatus</a> - The response's http status
--   code.
newInitiateAuthResponse :: Int -> InitiateAuthResponse

-- | <i>See:</i> <a>newAdminListGroupsForUser</a> smart constructor.
data AdminListGroupsForUser
AdminListGroupsForUser' :: Maybe Text -> Maybe Natural -> Sensitive Text -> Text -> AdminListGroupsForUser

-- | Create a value of <a>AdminListGroupsForUser</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:AdminListGroupsForUser'</a>,
--   <a>adminListGroupsForUser_nextToken</a> - An identifier that was
--   returned from the previous call to this operation, which can be used
--   to return the next set of items in the list.
--   
--   <a>$sel:limit:AdminListGroupsForUser'</a>,
--   <a>adminListGroupsForUser_limit</a> - The limit of the request to list
--   groups.
--   
--   <a>$sel:username:AdminListGroupsForUser'</a>,
--   <a>adminListGroupsForUser_username</a> - The username for the user.
--   
--   <a>$sel:userPoolId:AdminListGroupsForUser'</a>,
--   <a>adminListGroupsForUser_userPoolId</a> - The user pool ID for the
--   user pool.
newAdminListGroupsForUser :: Text -> Text -> AdminListGroupsForUser

-- | <i>See:</i> <a>newAdminListGroupsForUserResponse</a> smart
--   constructor.
data AdminListGroupsForUserResponse
AdminListGroupsForUserResponse' :: Maybe [GroupType] -> Maybe Text -> Int -> AdminListGroupsForUserResponse

-- | Create a value of <a>AdminListGroupsForUserResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:groups:AdminListGroupsForUserResponse'</a>,
--   <a>adminListGroupsForUserResponse_groups</a> - The groups that the
--   user belongs to.
--   
--   <a>$sel:nextToken:AdminListGroupsForUser'</a>,
--   <a>adminListGroupsForUserResponse_nextToken</a> - An identifier that
--   was returned from the previous call to this operation, which can be
--   used to return the next set of items in the list.
--   
--   <a>$sel:httpStatus:AdminListGroupsForUserResponse'</a>,
--   <a>adminListGroupsForUserResponse_httpStatus</a> - The response's http
--   status code.
newAdminListGroupsForUserResponse :: Int -> AdminListGroupsForUserResponse

-- | Represents the request to confirm user registration.
--   
--   <i>See:</i> <a>newAdminConfirmSignUp</a> smart constructor.
data AdminConfirmSignUp
AdminConfirmSignUp' :: Maybe (HashMap Text Text) -> Text -> Sensitive Text -> AdminConfirmSignUp

-- | Create a value of <a>AdminConfirmSignUp</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientMetadata:AdminConfirmSignUp'</a>,
--   <a>adminConfirmSignUp_clientMetadata</a> - A map of custom key-value
--   pairs that you can provide as input for any custom workflows that this
--   action triggers.
--   
--   If your user pool configuration includes triggers, the
--   AdminConfirmSignUp API action invokes the Lambda function that is
--   specified for the <i>post confirmation</i> trigger. When Amazon
--   Cognito invokes this function, it passes a JSON payload, which the
--   function receives as input. In this payload, the
--   <tt>clientMetadata</tt> attribute provides the data that you assigned
--   to the ClientMetadata parameter in your AdminConfirmSignUp request. In
--   your function code in Lambda, you can process the ClientMetadata value
--   to enhance your workflow for your specific needs.
--   
--   For more information, see <a>Customizing User Pool Workflows with
--   Lambda Triggers</a> in the <i>Amazon Cognito Developer Guide</i>.
--   
--   Take the following limitations into consideration when you use the
--   ClientMetadata parameter:
--   
--   <ul>
--   <li>Amazon Cognito does not store the ClientMetadata value. This data
--   is available only to Lambda triggers that are assigned to a user pool
--   to support custom workflows. If your user pool configuration does not
--   include triggers, the ClientMetadata parameter serves no purpose.</li>
--   <li>Amazon Cognito does not validate the ClientMetadata value.</li>
--   <li>Amazon Cognito does not encrypt the the ClientMetadata value, so
--   don't use it to provide sensitive information.</li>
--   </ul>
--   
--   <a>$sel:userPoolId:AdminConfirmSignUp'</a>,
--   <a>adminConfirmSignUp_userPoolId</a> - The user pool ID for which you
--   want to confirm user registration.
--   
--   <a>$sel:username:AdminConfirmSignUp'</a>,
--   <a>adminConfirmSignUp_username</a> - The user name for which you want
--   to confirm user registration.
newAdminConfirmSignUp :: Text -> Text -> AdminConfirmSignUp

-- | Represents the response from the server for the request to confirm
--   registration.
--   
--   <i>See:</i> <a>newAdminConfirmSignUpResponse</a> smart constructor.
data AdminConfirmSignUpResponse
AdminConfirmSignUpResponse' :: Int -> AdminConfirmSignUpResponse

-- | Create a value of <a>AdminConfirmSignUpResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:AdminConfirmSignUpResponse'</a>,
--   <a>adminConfirmSignUpResponse_httpStatus</a> - The response's http
--   status code.
newAdminConfirmSignUpResponse :: Int -> AdminConfirmSignUpResponse

-- | <i>See:</i> <a>newAdminUpdateAuthEventFeedback</a> smart constructor.
data AdminUpdateAuthEventFeedback
AdminUpdateAuthEventFeedback' :: Text -> Sensitive Text -> Text -> FeedbackValueType -> AdminUpdateAuthEventFeedback

-- | Create a value of <a>AdminUpdateAuthEventFeedback</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userPoolId:AdminUpdateAuthEventFeedback'</a>,
--   <a>adminUpdateAuthEventFeedback_userPoolId</a> - The user pool ID.
--   
--   <a>$sel:username:AdminUpdateAuthEventFeedback'</a>,
--   <a>adminUpdateAuthEventFeedback_username</a> - The user pool username.
--   
--   <a>$sel:eventId:AdminUpdateAuthEventFeedback'</a>,
--   <a>adminUpdateAuthEventFeedback_eventId</a> - The authentication event
--   ID.
--   
--   <a>$sel:feedbackValue:AdminUpdateAuthEventFeedback'</a>,
--   <a>adminUpdateAuthEventFeedback_feedbackValue</a> - The authentication
--   event feedback value.
newAdminUpdateAuthEventFeedback :: Text -> Text -> Text -> FeedbackValueType -> AdminUpdateAuthEventFeedback

-- | <i>See:</i> <a>newAdminUpdateAuthEventFeedbackResponse</a> smart
--   constructor.
data AdminUpdateAuthEventFeedbackResponse
AdminUpdateAuthEventFeedbackResponse' :: Int -> AdminUpdateAuthEventFeedbackResponse

-- | Create a value of <a>AdminUpdateAuthEventFeedbackResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:AdminUpdateAuthEventFeedbackResponse'</a>,
--   <a>adminUpdateAuthEventFeedbackResponse_httpStatus</a> - The
--   response's http status code.
newAdminUpdateAuthEventFeedbackResponse :: Int -> AdminUpdateAuthEventFeedbackResponse

-- | <i>See:</i> <a>newAdminSetUserPassword</a> smart constructor.
data AdminSetUserPassword
AdminSetUserPassword' :: Maybe Bool -> Text -> Sensitive Text -> Sensitive Text -> AdminSetUserPassword

-- | Create a value of <a>AdminSetUserPassword</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:permanent:AdminSetUserPassword'</a>,
--   <a>adminSetUserPassword_permanent</a> - <tt>True</tt> if the password
--   is permanent, <tt>False</tt> if it is temporary.
--   
--   <a>$sel:userPoolId:AdminSetUserPassword'</a>,
--   <a>adminSetUserPassword_userPoolId</a> - The user pool ID for the user
--   pool where you want to set the user's password.
--   
--   <a>$sel:username:AdminSetUserPassword'</a>,
--   <a>adminSetUserPassword_username</a> - The user name of the user whose
--   password you wish to set.
--   
--   <a>$sel:password:AdminSetUserPassword'</a>,
--   <a>adminSetUserPassword_password</a> - The password for the user.
newAdminSetUserPassword :: Text -> Text -> Text -> AdminSetUserPassword

-- | <i>See:</i> <a>newAdminSetUserPasswordResponse</a> smart constructor.
data AdminSetUserPasswordResponse
AdminSetUserPasswordResponse' :: Int -> AdminSetUserPasswordResponse

-- | Create a value of <a>AdminSetUserPasswordResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:AdminSetUserPasswordResponse'</a>,
--   <a>adminSetUserPasswordResponse_httpStatus</a> - The response's http
--   status code.
newAdminSetUserPasswordResponse :: Int -> AdminSetUserPasswordResponse

-- | Represents the request to start the user import job.
--   
--   <i>See:</i> <a>newStartUserImportJob</a> smart constructor.
data StartUserImportJob
StartUserImportJob' :: Text -> Text -> StartUserImportJob

-- | Create a value of <a>StartUserImportJob</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userPoolId:StartUserImportJob'</a>,
--   <a>startUserImportJob_userPoolId</a> - The user pool ID for the user
--   pool that the users are being imported into.
--   
--   <a>$sel:jobId:StartUserImportJob'</a>, <a>startUserImportJob_jobId</a>
--   - The job ID for the user import job.
newStartUserImportJob :: Text -> Text -> StartUserImportJob

-- | Represents the response from the server to the request to start the
--   user import job.
--   
--   <i>See:</i> <a>newStartUserImportJobResponse</a> smart constructor.
data StartUserImportJobResponse
StartUserImportJobResponse' :: Maybe UserImportJobType -> Int -> StartUserImportJobResponse

-- | Create a value of <a>StartUserImportJobResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userImportJob:StartUserImportJobResponse'</a>,
--   <a>startUserImportJobResponse_userImportJob</a> - The job object that
--   represents the user import job.
--   
--   <a>$sel:httpStatus:StartUserImportJobResponse'</a>,
--   <a>startUserImportJobResponse_httpStatus</a> - The response's http
--   status code.
newStartUserImportJobResponse :: Int -> StartUserImportJobResponse

-- | <i>See:</i> <a>newCreateIdentityProvider</a> smart constructor.
data CreateIdentityProvider
CreateIdentityProvider' :: Maybe [Text] -> Maybe (HashMap Text Text) -> Text -> Text -> IdentityProviderTypeType -> HashMap Text Text -> CreateIdentityProvider

-- | Create a value of <a>CreateIdentityProvider</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:idpIdentifiers:CreateIdentityProvider'</a>,
--   <a>createIdentityProvider_idpIdentifiers</a> - A list of identity
--   provider identifiers.
--   
--   <a>$sel:attributeMapping:CreateIdentityProvider'</a>,
--   <a>createIdentityProvider_attributeMapping</a> - A mapping of identity
--   provider attributes to standard and custom user pool attributes.
--   
--   <a>$sel:userPoolId:CreateIdentityProvider'</a>,
--   <a>createIdentityProvider_userPoolId</a> - The user pool ID.
--   
--   <a>$sel:providerName:CreateIdentityProvider'</a>,
--   <a>createIdentityProvider_providerName</a> - The identity provider
--   name.
--   
--   <a>$sel:providerType:CreateIdentityProvider'</a>,
--   <a>createIdentityProvider_providerType</a> - The identity provider
--   type.
--   
--   <a>$sel:providerDetails:CreateIdentityProvider'</a>,
--   <a>createIdentityProvider_providerDetails</a> - The identity provider
--   details. The following list describes the provider detail keys for
--   each identity provider type.
--   
--   <ul>
--   <li>For Google and Login with
--   Amazon:<ul><li>client_id</li><li>client_secret</li><li>authorize_scopes</li></ul></li>
--   <li>For
--   Facebook:<ul><li>client_id</li><li>client_secret</li><li>authorize_scopes</li><li>api_version</li></ul></li>
--   <li>For Sign in with
--   Apple:<ul><li>client_id</li><li>team_id</li><li>key_id</li><li>private_key</li><li>authorize_scopes</li></ul></li>
--   <li>For OIDC
--   providers:<ul><li>client_id</li><li>client_secret</li><li>attributes_request_method</li><li>oidc_issuer</li><li>authorize_scopes</li><li>authorize_url
--   /if not available from discovery URL specified by oidc_issuer
--   key/</li><li>token_url /if not available from discovery URL specified
--   by oidc_issuer key/</li><li>attributes_url /if not available from
--   discovery URL specified by oidc_issuer key/</li><li>jwks_uri /if not
--   available from discovery URL specified by oidc_issuer
--   key/</li></ul></li>
--   <li>For SAML providers:<ul><li>MetadataFile OR
--   MetadataURL</li><li>IDPSignout <i>optional</i></li></ul></li>
--   </ul>
newCreateIdentityProvider :: Text -> Text -> IdentityProviderTypeType -> CreateIdentityProvider

-- | <i>See:</i> <a>newCreateIdentityProviderResponse</a> smart
--   constructor.
data CreateIdentityProviderResponse
CreateIdentityProviderResponse' :: Int -> IdentityProviderType -> CreateIdentityProviderResponse

-- | Create a value of <a>CreateIdentityProviderResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreateIdentityProviderResponse'</a>,
--   <a>createIdentityProviderResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:identityProvider:CreateIdentityProviderResponse'</a>,
--   <a>createIdentityProviderResponse_identityProvider</a> - The newly
--   created identity provider object.
newCreateIdentityProviderResponse :: Int -> IdentityProviderType -> CreateIdentityProviderResponse

-- | <i>See:</i> <a>newSetUICustomization</a> smart constructor.
data SetUICustomization
SetUICustomization' :: Maybe (Sensitive Text) -> Maybe Text -> Maybe Base64 -> Text -> SetUICustomization

-- | Create a value of <a>SetUICustomization</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientId:SetUICustomization'</a>,
--   <a>setUICustomization_clientId</a> - The client ID for the client app.
--   
--   <a>$sel:css:SetUICustomization'</a>, <a>setUICustomization_css</a> -
--   The CSS values in the UI customization.
--   
--   <a>$sel:imageFile:SetUICustomization'</a>,
--   <a>setUICustomization_imageFile</a> - The uploaded logo image for the
--   UI customization.-- -- <i>Note:</i> This <tt>Lens</tt> automatically
--   encodes and decodes Base64 data. -- The underlying isomorphism will
--   encode to Base64 representation during -- serialisation, and decode
--   from Base64 representation during deserialisation. -- This
--   <tt>Lens</tt> accepts and returns only raw unencoded data.
--   
--   <a>$sel:userPoolId:SetUICustomization'</a>,
--   <a>setUICustomization_userPoolId</a> - The user pool ID for the user
--   pool.
newSetUICustomization :: Text -> SetUICustomization

-- | <i>See:</i> <a>newSetUICustomizationResponse</a> smart constructor.
data SetUICustomizationResponse
SetUICustomizationResponse' :: Int -> UICustomizationType -> SetUICustomizationResponse

-- | Create a value of <a>SetUICustomizationResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:SetUICustomizationResponse'</a>,
--   <a>setUICustomizationResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:uICustomization:SetUICustomizationResponse'</a>,
--   <a>setUICustomizationResponse_uICustomization</a> - The UI
--   customization information.
newSetUICustomizationResponse :: Int -> UICustomizationType -> SetUICustomizationResponse

-- | <i>See:</i> <a>newListIdentityProviders</a> smart constructor.
data ListIdentityProviders
ListIdentityProviders' :: Maybe Text -> Maybe Natural -> Text -> ListIdentityProviders

-- | Create a value of <a>ListIdentityProviders</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListIdentityProviders'</a>,
--   <a>listIdentityProviders_nextToken</a> - A pagination token.
--   
--   <a>$sel:maxResults:ListIdentityProviders'</a>,
--   <a>listIdentityProviders_maxResults</a> - The maximum number of
--   identity providers to return.
--   
--   <a>$sel:userPoolId:ListIdentityProviders'</a>,
--   <a>listIdentityProviders_userPoolId</a> - The user pool ID.
newListIdentityProviders :: Text -> ListIdentityProviders

-- | <i>See:</i> <a>newListIdentityProvidersResponse</a> smart constructor.
data ListIdentityProvidersResponse
ListIdentityProvidersResponse' :: Maybe Text -> Int -> [ProviderDescription] -> ListIdentityProvidersResponse

-- | Create a value of <a>ListIdentityProvidersResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListIdentityProviders'</a>,
--   <a>listIdentityProvidersResponse_nextToken</a> - A pagination token.
--   
--   <a>$sel:httpStatus:ListIdentityProvidersResponse'</a>,
--   <a>listIdentityProvidersResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:providers:ListIdentityProvidersResponse'</a>,
--   <a>listIdentityProvidersResponse_providers</a> - A list of identity
--   provider objects.
newListIdentityProvidersResponse :: Int -> ListIdentityProvidersResponse

-- | Represents the request to get the device.
--   
--   <i>See:</i> <a>newGetDevice</a> smart constructor.
data GetDevice
GetDevice' :: Maybe (Sensitive Text) -> Text -> GetDevice

-- | Create a value of <a>GetDevice</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:accessToken:GetDevice'</a>, <a>getDevice_accessToken</a> - The
--   access token.
--   
--   <a>$sel:deviceKey:GetDevice'</a>, <a>getDevice_deviceKey</a> - The
--   device key.
newGetDevice :: Text -> GetDevice

-- | Gets the device response.
--   
--   <i>See:</i> <a>newGetDeviceResponse</a> smart constructor.
data GetDeviceResponse
GetDeviceResponse' :: Int -> DeviceType -> GetDeviceResponse

-- | Create a value of <a>GetDeviceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:GetDeviceResponse'</a>,
--   <a>getDeviceResponse_httpStatus</a> - The response's http status code.
--   
--   <a>$sel:device:GetDeviceResponse'</a>, <a>getDeviceResponse_device</a>
--   - The device.
newGetDeviceResponse :: Int -> DeviceType -> GetDeviceResponse

-- | Represents the request to register a user.
--   
--   <i>See:</i> <a>newSignUp</a> smart constructor.
data SignUp
SignUp' :: Maybe (HashMap Text Text) -> Maybe AnalyticsMetadataType -> Maybe UserContextDataType -> Maybe [AttributeType] -> Maybe (Sensitive Text) -> Maybe [AttributeType] -> Sensitive Text -> Sensitive Text -> Sensitive Text -> SignUp

-- | Create a value of <a>SignUp</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientMetadata:SignUp'</a>, <a>signUp_clientMetadata</a> - A
--   map of custom key-value pairs that you can provide as input for any
--   custom workflows that this action triggers.
--   
--   You create custom workflows by assigning Lambda functions to user pool
--   triggers. When you use the SignUp API action, Amazon Cognito invokes
--   any functions that are assigned to the following triggers: <i>pre
--   sign-up</i>, <i>custom message</i>, and <i>post confirmation</i>. When
--   Amazon Cognito invokes any of these functions, it passes a JSON
--   payload, which the function receives as input. This payload contains a
--   <tt>clientMetadata</tt> attribute, which provides the data that you
--   assigned to the ClientMetadata parameter in your SignUp request. In
--   your function code in Lambda, you can process the
--   <tt>clientMetadata</tt> value to enhance your workflow for your
--   specific needs.
--   
--   For more information, see <a>Customizing User Pool Workflows with
--   Lambda Triggers</a> in the <i>Amazon Cognito Developer Guide</i>.
--   
--   Take the following limitations into consideration when you use the
--   ClientMetadata parameter:
--   
--   <ul>
--   <li>Amazon Cognito does not store the ClientMetadata value. This data
--   is available only to Lambda triggers that are assigned to a user pool
--   to support custom workflows. If your user pool configuration does not
--   include triggers, the ClientMetadata parameter serves no purpose.</li>
--   <li>Amazon Cognito does not validate the ClientMetadata value.</li>
--   <li>Amazon Cognito does not encrypt the the ClientMetadata value, so
--   don't use it to provide sensitive information.</li>
--   </ul>
--   
--   <a>$sel:analyticsMetadata:SignUp'</a>, <a>signUp_analyticsMetadata</a>
--   - The Amazon Pinpoint analytics metadata for collecting metrics for
--   <tt>SignUp</tt> calls.
--   
--   <a>$sel:userContextData:SignUp'</a>, <a>signUp_userContextData</a> -
--   Contextual data such as the user's device fingerprint, IP address, or
--   location used for evaluating the risk of an unexpected event by Amazon
--   Cognito advanced security.
--   
--   <a>$sel:userAttributes:SignUp'</a>, <a>signUp_userAttributes</a> - An
--   array of name-value pairs representing user attributes.
--   
--   For custom attributes, you must prepend the <tt>custom:</tt> prefix to
--   the attribute name.
--   
--   <a>$sel:secretHash:SignUp'</a>, <a>signUp_secretHash</a> - A
--   keyed-hash message authentication code (HMAC) calculated using the
--   secret key of a user pool client and username plus the client ID in
--   the message.
--   
--   <a>$sel:validationData:SignUp'</a>, <a>signUp_validationData</a> - The
--   validation data in the request to register a user.
--   
--   <a>$sel:clientId:SignUp'</a>, <a>signUp_clientId</a> - The ID of the
--   client associated with the user pool.
--   
--   <a>$sel:username:SignUp'</a>, <a>signUp_username</a> - The user name
--   of the user you wish to register.
--   
--   <a>$sel:password:SignUp'</a>, <a>signUp_password</a> - The password of
--   the user you wish to register.
newSignUp :: Text -> Text -> Text -> SignUp

-- | The response from the server for a registration request.
--   
--   <i>See:</i> <a>newSignUpResponse</a> smart constructor.
data SignUpResponse
SignUpResponse' :: Maybe CodeDeliveryDetailsType -> Int -> Bool -> Text -> SignUpResponse

-- | Create a value of <a>SignUpResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:codeDeliveryDetails:SignUpResponse'</a>,
--   <a>signUpResponse_codeDeliveryDetails</a> - The code delivery details
--   returned by the server response to the user registration request.
--   
--   <a>$sel:httpStatus:SignUpResponse'</a>,
--   <a>signUpResponse_httpStatus</a> - The response's http status code.
--   
--   <a>$sel:userConfirmed:SignUpResponse'</a>,
--   <a>signUpResponse_userConfirmed</a> - A response from the server
--   indicating that a user registration has been confirmed.
--   
--   <a>$sel:userSub:SignUpResponse'</a>, <a>signUpResponse_userSub</a> -
--   The UUID of the authenticated user. This is not the same as
--   <tt>username</tt>.
newSignUpResponse :: Int -> Bool -> Text -> SignUpResponse

-- | <i>See:</i> <a>newDeleteResourceServer</a> smart constructor.
data DeleteResourceServer
DeleteResourceServer' :: Text -> Text -> DeleteResourceServer

-- | Create a value of <a>DeleteResourceServer</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userPoolId:DeleteResourceServer'</a>,
--   <a>deleteResourceServer_userPoolId</a> - The user pool ID for the user
--   pool that hosts the resource server.
--   
--   <a>$sel:identifier:DeleteResourceServer'</a>,
--   <a>deleteResourceServer_identifier</a> - The identifier for the
--   resource server.
newDeleteResourceServer :: Text -> Text -> DeleteResourceServer

-- | <i>See:</i> <a>newDeleteResourceServerResponse</a> smart constructor.
data DeleteResourceServerResponse
DeleteResourceServerResponse' :: DeleteResourceServerResponse

-- | Create a value of <a>DeleteResourceServerResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteResourceServerResponse :: DeleteResourceServerResponse

-- | <i>See:</i> <a>newUpdateResourceServer</a> smart constructor.
data UpdateResourceServer
UpdateResourceServer' :: Maybe [ResourceServerScopeType] -> Text -> Text -> Text -> UpdateResourceServer

-- | Create a value of <a>UpdateResourceServer</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:scopes:UpdateResourceServer'</a>,
--   <a>updateResourceServer_scopes</a> - The scope values to be set for
--   the resource server.
--   
--   <a>$sel:userPoolId:UpdateResourceServer'</a>,
--   <a>updateResourceServer_userPoolId</a> - The user pool ID for the user
--   pool.
--   
--   <a>$sel:identifier:UpdateResourceServer'</a>,
--   <a>updateResourceServer_identifier</a> - The identifier for the
--   resource server.
--   
--   <a>$sel:name:UpdateResourceServer'</a>,
--   <a>updateResourceServer_name</a> - The name of the resource server.
newUpdateResourceServer :: Text -> Text -> Text -> UpdateResourceServer

-- | <i>See:</i> <a>newUpdateResourceServerResponse</a> smart constructor.
data UpdateResourceServerResponse
UpdateResourceServerResponse' :: Int -> ResourceServerType -> UpdateResourceServerResponse

-- | Create a value of <a>UpdateResourceServerResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateResourceServerResponse'</a>,
--   <a>updateResourceServerResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:resourceServer:UpdateResourceServerResponse'</a>,
--   <a>updateResourceServerResponse_resourceServer</a> - The resource
--   server.
newUpdateResourceServerResponse :: Int -> ResourceServerType -> UpdateResourceServerResponse

-- | Represents the request to change a user password.
--   
--   <i>See:</i> <a>newChangePassword</a> smart constructor.
data ChangePassword
ChangePassword' :: Sensitive Text -> Sensitive Text -> Sensitive Text -> ChangePassword

-- | Create a value of <a>ChangePassword</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:previousPassword:ChangePassword'</a>,
--   <a>changePassword_previousPassword</a> - The old password.
--   
--   <a>$sel:proposedPassword:ChangePassword'</a>,
--   <a>changePassword_proposedPassword</a> - The new password.
--   
--   <a>$sel:accessToken:ChangePassword'</a>,
--   <a>changePassword_accessToken</a> - The access token.
newChangePassword :: Text -> Text -> Text -> ChangePassword

-- | The response from the server to the change password request.
--   
--   <i>See:</i> <a>newChangePasswordResponse</a> smart constructor.
data ChangePasswordResponse
ChangePasswordResponse' :: Int -> ChangePasswordResponse

-- | Create a value of <a>ChangePasswordResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:ChangePasswordResponse'</a>,
--   <a>changePasswordResponse_httpStatus</a> - The response's http status
--   code.
newChangePasswordResponse :: Int -> ChangePasswordResponse

-- | <i>See:</i> <a>newCreateUserPoolDomain</a> smart constructor.
data CreateUserPoolDomain
CreateUserPoolDomain' :: Maybe CustomDomainConfigType -> Text -> Text -> CreateUserPoolDomain

-- | Create a value of <a>CreateUserPoolDomain</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:customDomainConfig:CreateUserPoolDomain'</a>,
--   <a>createUserPoolDomain_customDomainConfig</a> - The configuration for
--   a custom domain that hosts the sign-up and sign-in webpages for your
--   application.
--   
--   Provide this parameter only if you want to use a custom domain for
--   your user pool. Otherwise, you can exclude this parameter and use the
--   Amazon Cognito hosted domain instead.
--   
--   For more information about the hosted domain and custom domains, see
--   <a>Configuring a User Pool Domain</a>.
--   
--   <a>$sel:domain:CreateUserPoolDomain'</a>,
--   <a>createUserPoolDomain_domain</a> - The domain string.
--   
--   <a>$sel:userPoolId:CreateUserPoolDomain'</a>,
--   <a>createUserPoolDomain_userPoolId</a> - The user pool ID.
newCreateUserPoolDomain :: Text -> Text -> CreateUserPoolDomain

-- | <i>See:</i> <a>newCreateUserPoolDomainResponse</a> smart constructor.
data CreateUserPoolDomainResponse
CreateUserPoolDomainResponse' :: Maybe Text -> Int -> CreateUserPoolDomainResponse

-- | Create a value of <a>CreateUserPoolDomainResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cloudFrontDomain:CreateUserPoolDomainResponse'</a>,
--   <a>createUserPoolDomainResponse_cloudFrontDomain</a> - The Amazon
--   CloudFront endpoint that you use as the target of the alias that you
--   set up with your Domain Name Service (DNS) provider.
--   
--   <a>$sel:httpStatus:CreateUserPoolDomainResponse'</a>,
--   <a>createUserPoolDomainResponse_httpStatus</a> - The response's http
--   status code.
newCreateUserPoolDomainResponse :: Int -> CreateUserPoolDomainResponse

-- | The request to respond to an authentication challenge.
--   
--   <i>See:</i> <a>newRespondToAuthChallenge</a> smart constructor.
data RespondToAuthChallenge
RespondToAuthChallenge' :: Maybe (HashMap Text Text) -> Maybe AnalyticsMetadataType -> Maybe (HashMap Text Text) -> Maybe UserContextDataType -> Maybe Text -> Sensitive Text -> ChallengeNameType -> RespondToAuthChallenge

-- | Create a value of <a>RespondToAuthChallenge</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientMetadata:RespondToAuthChallenge'</a>,
--   <a>respondToAuthChallenge_clientMetadata</a> - A map of custom
--   key-value pairs that you can provide as input for any custom workflows
--   that this action triggers.
--   
--   You create custom workflows by assigning Lambda functions to user pool
--   triggers. When you use the RespondToAuthChallenge API action, Amazon
--   Cognito invokes any functions that are assigned to the following
--   triggers: <i>post authentication</i>, <i>pre token generation</i>,
--   /define auth challenge<i>, </i>create auth challenge<i>, and
--   </i>verify auth challenge/. When Amazon Cognito invokes any of these
--   functions, it passes a JSON payload, which the function receives as
--   input. This payload contains a <tt>clientMetadata</tt> attribute,
--   which provides the data that you assigned to the ClientMetadata
--   parameter in your RespondToAuthChallenge request. In your function
--   code in Lambda, you can process the <tt>clientMetadata</tt> value to
--   enhance your workflow for your specific needs.
--   
--   For more information, see <a>Customizing User Pool Workflows with
--   Lambda Triggers</a> in the <i>Amazon Cognito Developer Guide</i>.
--   
--   Take the following limitations into consideration when you use the
--   ClientMetadata parameter:
--   
--   <ul>
--   <li>Amazon Cognito does not store the ClientMetadata value. This data
--   is available only to Lambda triggers that are assigned to a user pool
--   to support custom workflows. If your user pool configuration does not
--   include triggers, the ClientMetadata parameter serves no purpose.</li>
--   <li>Amazon Cognito does not validate the ClientMetadata value.</li>
--   <li>Amazon Cognito does not encrypt the the ClientMetadata value, so
--   don't use it to provide sensitive information.</li>
--   </ul>
--   
--   <a>$sel:analyticsMetadata:RespondToAuthChallenge'</a>,
--   <a>respondToAuthChallenge_analyticsMetadata</a> - The Amazon Pinpoint
--   analytics metadata for collecting metrics for
--   <tt>RespondToAuthChallenge</tt> calls.
--   
--   <a>$sel:challengeResponses:RespondToAuthChallenge'</a>,
--   <a>respondToAuthChallenge_challengeResponses</a> - The challenge
--   responses. These are inputs corresponding to the value of
--   <tt>ChallengeName</tt>, for example:
--   
--   <tt>SECRET_HASH</tt> (if app client is configured with client secret)
--   applies to all inputs below (including <tt>SOFTWARE_TOKEN_MFA</tt>).
--   
--   <ul>
--   <li><tt>SMS_MFA</tt>: <tt>SMS_MFA_CODE</tt>, <tt>USERNAME</tt>.</li>
--   <li><tt>PASSWORD_VERIFIER</tt>: <tt>PASSWORD_CLAIM_SIGNATURE</tt>,
--   <tt>PASSWORD_CLAIM_SECRET_BLOCK</tt>, <tt>TIMESTAMP</tt>,
--   <tt>USERNAME</tt>.</li>
--   <li><tt>NEW_PASSWORD_REQUIRED</tt>: <tt>NEW_PASSWORD</tt>, any other
--   required attributes, <tt>USERNAME</tt>.</li>
--   <li><tt>SOFTWARE_TOKEN_MFA</tt>: <tt>USERNAME</tt> and
--   <tt>SOFTWARE_TOKEN_MFA_CODE</tt> are required attributes.</li>
--   <li><tt>DEVICE_SRP_AUTH</tt> requires <tt>USERNAME</tt>,
--   <tt>DEVICE_KEY</tt>, <tt>SRP_A</tt> (and <tt>SECRET_HASH</tt>).</li>
--   <li><tt>DEVICE_PASSWORD_VERIFIER</tt> requires everything that
--   <tt>PASSWORD_VERIFIER</tt> requires plus <tt>DEVICE_KEY</tt>.</li>
--   <li><tt>MFA_SETUP</tt> requires <tt>USERNAME</tt>, plus you need to
--   use the session value returned by <tt>VerifySoftwareToken</tt> in the
--   <tt>Session</tt> parameter.</li>
--   </ul>
--   
--   <a>$sel:userContextData:RespondToAuthChallenge'</a>,
--   <a>respondToAuthChallenge_userContextData</a> - Contextual data such
--   as the user's device fingerprint, IP address, or location used for
--   evaluating the risk of an unexpected event by Amazon Cognito advanced
--   security.
--   
--   <a>$sel:session:RespondToAuthChallenge'</a>,
--   <a>respondToAuthChallenge_session</a> - The session which should be
--   passed both ways in challenge-response calls to the service. If
--   <tt>InitiateAuth</tt> or <tt>RespondToAuthChallenge</tt> API call
--   determines that the caller needs to go through another challenge, they
--   return a session with other challenge parameters. This session should
--   be passed as it is to the next <tt>RespondToAuthChallenge</tt> API
--   call.
--   
--   <a>$sel:clientId:RespondToAuthChallenge'</a>,
--   <a>respondToAuthChallenge_clientId</a> - The app client ID.
--   
--   <a>$sel:challengeName:RespondToAuthChallenge'</a>,
--   <a>respondToAuthChallenge_challengeName</a> - The challenge name. For
--   more information, see <a>InitiateAuth</a>.
--   
--   <tt>ADMIN_NO_SRP_AUTH</tt> is not a valid value.
newRespondToAuthChallenge :: Text -> ChallengeNameType -> RespondToAuthChallenge

-- | The response to respond to the authentication challenge.
--   
--   <i>See:</i> <a>newRespondToAuthChallengeResponse</a> smart
--   constructor.
data RespondToAuthChallengeResponse
RespondToAuthChallengeResponse' :: Maybe ChallengeNameType -> Maybe (HashMap Text Text) -> Maybe AuthenticationResultType -> Maybe Text -> Int -> RespondToAuthChallengeResponse

-- | Create a value of <a>RespondToAuthChallengeResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:challengeName:RespondToAuthChallenge'</a>,
--   <a>respondToAuthChallengeResponse_challengeName</a> - The challenge
--   name. For more information, see <a>InitiateAuth</a>.
--   
--   <a>$sel:challengeParameters:RespondToAuthChallengeResponse'</a>,
--   <a>respondToAuthChallengeResponse_challengeParameters</a> - The
--   challenge parameters. For more information, see <a>InitiateAuth</a>.
--   
--   <a>$sel:authenticationResult:RespondToAuthChallengeResponse'</a>,
--   <a>respondToAuthChallengeResponse_authenticationResult</a> - The
--   result returned by the server in response to the request to respond to
--   the authentication challenge.
--   
--   <a>$sel:session:RespondToAuthChallenge'</a>,
--   <a>respondToAuthChallengeResponse_session</a> - The session which
--   should be passed both ways in challenge-response calls to the service.
--   If the caller needs to go through another challenge, they return a
--   session with other challenge parameters. This session should be passed
--   as it is to the next <tt>RespondToAuthChallenge</tt> API call.
--   
--   <a>$sel:httpStatus:RespondToAuthChallengeResponse'</a>,
--   <a>respondToAuthChallengeResponse_httpStatus</a> - The response's http
--   status code.
newRespondToAuthChallengeResponse :: Int -> RespondToAuthChallengeResponse

-- | Represents the request to create a user pool.
--   
--   <i>See:</i> <a>newCreateUserPool</a> smart constructor.
data CreateUserPool
CreateUserPool' :: Maybe (HashMap Text Text) -> Maybe VerificationMessageTemplateType -> Maybe Text -> Maybe Text -> Maybe UserPoolAddOnsType -> Maybe Text -> Maybe [UsernameAttributeType] -> Maybe [AliasAttributeType] -> Maybe (NonEmpty SchemaAttributeType) -> Maybe AccountRecoverySettingType -> Maybe EmailConfigurationType -> Maybe Text -> Maybe UserPoolMfaType -> Maybe LambdaConfigType -> Maybe SmsConfigurationType -> Maybe AdminCreateUserConfigType -> Maybe DeviceConfigurationType -> Maybe [VerifiedAttributeType] -> Maybe UserPoolPolicyType -> Maybe UsernameConfigurationType -> Text -> CreateUserPool

-- | Create a value of <a>CreateUserPool</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userPoolTags:CreateUserPool'</a>,
--   <a>createUserPool_userPoolTags</a> - The tag keys and values to assign
--   to the user pool. A tag is a label that you can use to categorize and
--   manage user pools in different ways, such as by purpose, owner,
--   environment, or other criteria.
--   
--   <a>$sel:verificationMessageTemplate:CreateUserPool'</a>,
--   <a>createUserPool_verificationMessageTemplate</a> - The template for
--   the verification message that the user sees when the app requests
--   permission to access the user's information.
--   
--   <a>$sel:emailVerificationMessage:CreateUserPool'</a>,
--   <a>createUserPool_emailVerificationMessage</a> - A string representing
--   the email verification message. EmailVerificationMessage is allowed
--   only if <a>EmailSendingAccount</a> is DEVELOPER.
--   
--   <a>$sel:smsAuthenticationMessage:CreateUserPool'</a>,
--   <a>createUserPool_smsAuthenticationMessage</a> - A string representing
--   the SMS authentication message.
--   
--   <a>$sel:userPoolAddOns:CreateUserPool'</a>,
--   <a>createUserPool_userPoolAddOns</a> - Used to enable advanced
--   security risk detection. Set the key <tt>AdvancedSecurityMode</tt> to
--   the value "AUDIT".
--   
--   <a>$sel:emailVerificationSubject:CreateUserPool'</a>,
--   <a>createUserPool_emailVerificationSubject</a> - A string representing
--   the email verification subject. EmailVerificationSubject is allowed
--   only if <a>EmailSendingAccount</a> is DEVELOPER.
--   
--   <a>$sel:usernameAttributes:CreateUserPool'</a>,
--   <a>createUserPool_usernameAttributes</a> - Specifies whether email
--   addresses or phone numbers can be specified as usernames when a user
--   signs up.
--   
--   <a>$sel:aliasAttributes:CreateUserPool'</a>,
--   <a>createUserPool_aliasAttributes</a> - Attributes supported as an
--   alias for this user pool. Possible values: <b>phone_number</b>,
--   <b>email</b>, or <b>preferred_username</b>.
--   
--   <a>$sel:schema:CreateUserPool'</a>, <a>createUserPool_schema</a> - An
--   array of schema attributes for the new user pool. These attributes can
--   be standard or custom attributes.
--   
--   <a>$sel:accountRecoverySetting:CreateUserPool'</a>,
--   <a>createUserPool_accountRecoverySetting</a> - Use this setting to
--   define which verified available method a user can use to recover their
--   password when they call <tt>ForgotPassword</tt>. It allows you to
--   define a preferred method when a user has more than one method
--   available. With this setting, SMS does not qualify for a valid
--   password recovery mechanism if the user also has SMS MFA enabled. In
--   the absence of this setting, Cognito uses the legacy behavior to
--   determine the recovery method where SMS is preferred over email.
--   
--   <a>$sel:emailConfiguration:CreateUserPool'</a>,
--   <a>createUserPool_emailConfiguration</a> - The email configuration.
--   
--   <a>$sel:smsVerificationMessage:CreateUserPool'</a>,
--   <a>createUserPool_smsVerificationMessage</a> - A string representing
--   the SMS verification message.
--   
--   <a>$sel:mfaConfiguration:CreateUserPool'</a>,
--   <a>createUserPool_mfaConfiguration</a> - Specifies MFA configuration
--   details.
--   
--   <a>$sel:lambdaConfig:CreateUserPool'</a>,
--   <a>createUserPool_lambdaConfig</a> - The Lambda trigger configuration
--   information for the new user pool.
--   
--   In a push model, event sources (such as Amazon S3 and custom
--   applications) need permission to invoke a function. So you will need
--   to make an extra call to add permission for these event sources to
--   invoke your Lambda function.
--   
--   For more information on using the Lambda API to add permission, see
--   <a>AddPermission</a> .
--   
--   For adding permission using the CLI, see <a>add-permission</a> .
--   
--   <a>$sel:smsConfiguration:CreateUserPool'</a>,
--   <a>createUserPool_smsConfiguration</a> - The SMS configuration.
--   
--   <a>$sel:adminCreateUserConfig:CreateUserPool'</a>,
--   <a>createUserPool_adminCreateUserConfig</a> - The configuration for
--   <tt>AdminCreateUser</tt> requests.
--   
--   <a>$sel:deviceConfiguration:CreateUserPool'</a>,
--   <a>createUserPool_deviceConfiguration</a> - The device configuration.
--   
--   <a>$sel:autoVerifiedAttributes:CreateUserPool'</a>,
--   <a>createUserPool_autoVerifiedAttributes</a> - The attributes to be
--   auto-verified. Possible values: <b>email</b>, <b>phone_number</b>.
--   
--   <a>$sel:policies:CreateUserPool'</a>, <a>createUserPool_policies</a> -
--   The policies associated with the new user pool.
--   
--   <a>$sel:usernameConfiguration:CreateUserPool'</a>,
--   <a>createUserPool_usernameConfiguration</a> - You can choose to set
--   case sensitivity on the username input for the selected sign-in
--   option. For example, when this is set to <tt>False</tt>, users will be
--   able to sign in using either "username" or "Username". This
--   configuration is immutable once it has been set. For more information,
--   see <a>UsernameConfigurationType</a>.
--   
--   <a>$sel:poolName:CreateUserPool'</a>, <a>createUserPool_poolName</a> -
--   A string used to name the user pool.
newCreateUserPool :: Text -> CreateUserPool

-- | Represents the response from the server for the request to create a
--   user pool.
--   
--   <i>See:</i> <a>newCreateUserPoolResponse</a> smart constructor.
data CreateUserPoolResponse
CreateUserPoolResponse' :: Maybe UserPoolType -> Int -> CreateUserPoolResponse

-- | Create a value of <a>CreateUserPoolResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userPool:CreateUserPoolResponse'</a>,
--   <a>createUserPoolResponse_userPool</a> - A container for the user pool
--   details.
--   
--   <a>$sel:httpStatus:CreateUserPoolResponse'</a>,
--   <a>createUserPoolResponse_httpStatus</a> - The response's http status
--   code.
newCreateUserPoolResponse :: Int -> CreateUserPoolResponse

-- | Represents the request to get the device, as an administrator.
--   
--   <i>See:</i> <a>newAdminGetDevice</a> smart constructor.
data AdminGetDevice
AdminGetDevice' :: Text -> Text -> Sensitive Text -> AdminGetDevice

-- | Create a value of <a>AdminGetDevice</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deviceKey:AdminGetDevice'</a>, <a>adminGetDevice_deviceKey</a>
--   - The device key.
--   
--   <a>$sel:userPoolId:AdminGetDevice'</a>,
--   <a>adminGetDevice_userPoolId</a> - The user pool ID.
--   
--   <a>$sel:username:AdminGetDevice'</a>, <a>adminGetDevice_username</a> -
--   The user name.
newAdminGetDevice :: Text -> Text -> Text -> AdminGetDevice

-- | Gets the device response, as an administrator.
--   
--   <i>See:</i> <a>newAdminGetDeviceResponse</a> smart constructor.
data AdminGetDeviceResponse
AdminGetDeviceResponse' :: Int -> DeviceType -> AdminGetDeviceResponse

-- | Create a value of <a>AdminGetDeviceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:AdminGetDeviceResponse'</a>,
--   <a>adminGetDeviceResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:device:AdminGetDeviceResponse'</a>,
--   <a>adminGetDeviceResponse_device</a> - The device.
newAdminGetDeviceResponse :: Int -> DeviceType -> AdminGetDeviceResponse

-- | <i>See:</i> <a>newGetIdentityProviderByIdentifier</a> smart
--   constructor.
data GetIdentityProviderByIdentifier
GetIdentityProviderByIdentifier' :: Text -> Text -> GetIdentityProviderByIdentifier

-- | Create a value of <a>GetIdentityProviderByIdentifier</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userPoolId:GetIdentityProviderByIdentifier'</a>,
--   <a>getIdentityProviderByIdentifier_userPoolId</a> - The user pool ID.
--   
--   <a>$sel:idpIdentifier:GetIdentityProviderByIdentifier'</a>,
--   <a>getIdentityProviderByIdentifier_idpIdentifier</a> - The identity
--   provider ID.
newGetIdentityProviderByIdentifier :: Text -> Text -> GetIdentityProviderByIdentifier

-- | <i>See:</i> <a>newGetIdentityProviderByIdentifierResponse</a> smart
--   constructor.
data GetIdentityProviderByIdentifierResponse
GetIdentityProviderByIdentifierResponse' :: Int -> IdentityProviderType -> GetIdentityProviderByIdentifierResponse

-- | Create a value of <a>GetIdentityProviderByIdentifierResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:GetIdentityProviderByIdentifierResponse'</a>,
--   <a>getIdentityProviderByIdentifierResponse_httpStatus</a> - The
--   response's http status code.
--   
--   <a>$sel:identityProvider:GetIdentityProviderByIdentifierResponse'</a>,
--   <a>getIdentityProviderByIdentifierResponse_identityProvider</a> - The
--   identity provider object.
newGetIdentityProviderByIdentifierResponse :: Int -> IdentityProviderType -> GetIdentityProviderByIdentifierResponse

-- | <i>See:</i> <a>newAdminRemoveUserFromGroup</a> smart constructor.
data AdminRemoveUserFromGroup
AdminRemoveUserFromGroup' :: Text -> Sensitive Text -> Text -> AdminRemoveUserFromGroup

-- | Create a value of <a>AdminRemoveUserFromGroup</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userPoolId:AdminRemoveUserFromGroup'</a>,
--   <a>adminRemoveUserFromGroup_userPoolId</a> - The user pool ID for the
--   user pool.
--   
--   <a>$sel:username:AdminRemoveUserFromGroup'</a>,
--   <a>adminRemoveUserFromGroup_username</a> - The username for the user.
--   
--   <a>$sel:groupName:AdminRemoveUserFromGroup'</a>,
--   <a>adminRemoveUserFromGroup_groupName</a> - The group name.
newAdminRemoveUserFromGroup :: Text -> Text -> Text -> AdminRemoveUserFromGroup

-- | <i>See:</i> <a>newAdminRemoveUserFromGroupResponse</a> smart
--   constructor.
data AdminRemoveUserFromGroupResponse
AdminRemoveUserFromGroupResponse' :: AdminRemoveUserFromGroupResponse

-- | Create a value of <a>AdminRemoveUserFromGroupResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newAdminRemoveUserFromGroupResponse :: AdminRemoveUserFromGroupResponse

-- | <i>See:</i> <a>newSetRiskConfiguration</a> smart constructor.
data SetRiskConfiguration
SetRiskConfiguration' :: Maybe RiskExceptionConfigurationType -> Maybe (Sensitive Text) -> Maybe AccountTakeoverRiskConfigurationType -> Maybe CompromisedCredentialsRiskConfigurationType -> Text -> SetRiskConfiguration

-- | Create a value of <a>SetRiskConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:riskExceptionConfiguration:SetRiskConfiguration'</a>,
--   <a>setRiskConfiguration_riskExceptionConfiguration</a> - The
--   configuration to override the risk decision.
--   
--   <a>$sel:clientId:SetRiskConfiguration'</a>,
--   <a>setRiskConfiguration_clientId</a> - The app client ID. If
--   <tt>ClientId</tt> is null, then the risk configuration is mapped to
--   <tt>userPoolId</tt>. When the client ID is null, the same risk
--   configuration is applied to all the clients in the userPool.
--   
--   Otherwise, <tt>ClientId</tt> is mapped to the client. When the client
--   ID is not null, the user pool configuration is overridden and the risk
--   configuration for the client is used instead.
--   
--   <a>$sel:accountTakeoverRiskConfiguration:SetRiskConfiguration'</a>,
--   <a>setRiskConfiguration_accountTakeoverRiskConfiguration</a> - The
--   account takeover risk configuration.
--   
--   
--   <a>$sel:compromisedCredentialsRiskConfiguration:SetRiskConfiguration'</a>,
--   <a>setRiskConfiguration_compromisedCredentialsRiskConfiguration</a> -
--   The compromised credentials risk configuration.
--   
--   <a>$sel:userPoolId:SetRiskConfiguration'</a>,
--   <a>setRiskConfiguration_userPoolId</a> - The user pool ID.
newSetRiskConfiguration :: Text -> SetRiskConfiguration

-- | <i>See:</i> <a>newSetRiskConfigurationResponse</a> smart constructor.
data SetRiskConfigurationResponse
SetRiskConfigurationResponse' :: Int -> RiskConfigurationType -> SetRiskConfigurationResponse

-- | Create a value of <a>SetRiskConfigurationResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:SetRiskConfigurationResponse'</a>,
--   <a>setRiskConfigurationResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:riskConfiguration:SetRiskConfigurationResponse'</a>,
--   <a>setRiskConfigurationResponse_riskConfiguration</a> - The risk
--   configuration.
newSetRiskConfigurationResponse :: Int -> RiskConfigurationType -> SetRiskConfigurationResponse

-- | Represents the request to confirm registration of a user.
--   
--   <i>See:</i> <a>newConfirmSignUp</a> smart constructor.
data ConfirmSignUp
ConfirmSignUp' :: Maybe (HashMap Text Text) -> Maybe Bool -> Maybe AnalyticsMetadataType -> Maybe UserContextDataType -> Maybe (Sensitive Text) -> Sensitive Text -> Sensitive Text -> Text -> ConfirmSignUp

-- | Create a value of <a>ConfirmSignUp</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientMetadata:ConfirmSignUp'</a>,
--   <a>confirmSignUp_clientMetadata</a> - A map of custom key-value pairs
--   that you can provide as input for any custom workflows that this
--   action triggers.
--   
--   You create custom workflows by assigning Lambda functions to user pool
--   triggers. When you use the ConfirmSignUp API action, Amazon Cognito
--   invokes the function that is assigned to the <i>post confirmation</i>
--   trigger. When Amazon Cognito invokes this function, it passes a JSON
--   payload, which the function receives as input. This payload contains a
--   <tt>clientMetadata</tt> attribute, which provides the data that you
--   assigned to the ClientMetadata parameter in your ConfirmSignUp
--   request. In your function code in Lambda, you can process the
--   <tt>clientMetadata</tt> value to enhance your workflow for your
--   specific needs.
--   
--   For more information, see <a>Customizing User Pool Workflows with
--   Lambda Triggers</a> in the <i>Amazon Cognito Developer Guide</i>.
--   
--   Take the following limitations into consideration when you use the
--   ClientMetadata parameter:
--   
--   <ul>
--   <li>Amazon Cognito does not store the ClientMetadata value. This data
--   is available only to Lambda triggers that are assigned to a user pool
--   to support custom workflows. If your user pool configuration does not
--   include triggers, the ClientMetadata parameter serves no purpose.</li>
--   <li>Amazon Cognito does not validate the ClientMetadata value.</li>
--   <li>Amazon Cognito does not encrypt the the ClientMetadata value, so
--   don't use it to provide sensitive information.</li>
--   </ul>
--   
--   <a>$sel:forceAliasCreation:ConfirmSignUp'</a>,
--   <a>confirmSignUp_forceAliasCreation</a> - Boolean to be specified to
--   force user confirmation irrespective of existing alias. By default set
--   to <tt>False</tt>. If this parameter is set to <tt>True</tt> and the
--   phone number/email used for sign up confirmation already exists as an
--   alias with a different user, the API call will migrate the alias from
--   the previous user to the newly created user being confirmed. If set to
--   <tt>False</tt>, the API will throw an <b>AliasExistsException</b>
--   error.
--   
--   <a>$sel:analyticsMetadata:ConfirmSignUp'</a>,
--   <a>confirmSignUp_analyticsMetadata</a> - The Amazon Pinpoint analytics
--   metadata for collecting metrics for <tt>ConfirmSignUp</tt> calls.
--   
--   <a>$sel:userContextData:ConfirmSignUp'</a>,
--   <a>confirmSignUp_userContextData</a> - Contextual data such as the
--   user's device fingerprint, IP address, or location used for evaluating
--   the risk of an unexpected event by Amazon Cognito advanced security.
--   
--   <a>$sel:secretHash:ConfirmSignUp'</a>, <a>confirmSignUp_secretHash</a>
--   - A keyed-hash message authentication code (HMAC) calculated using the
--   secret key of a user pool client and username plus the client ID in
--   the message.
--   
--   <a>$sel:clientId:ConfirmSignUp'</a>, <a>confirmSignUp_clientId</a> -
--   The ID of the app client associated with the user pool.
--   
--   <a>$sel:username:ConfirmSignUp'</a>, <a>confirmSignUp_username</a> -
--   The user name of the user whose registration you wish to confirm.
--   
--   <a>$sel:confirmationCode:ConfirmSignUp'</a>,
--   <a>confirmSignUp_confirmationCode</a> - The confirmation code sent by
--   a user's request to confirm registration.
newConfirmSignUp :: Text -> Text -> Text -> ConfirmSignUp

-- | Represents the response from the server for the registration
--   confirmation.
--   
--   <i>See:</i> <a>newConfirmSignUpResponse</a> smart constructor.
data ConfirmSignUpResponse
ConfirmSignUpResponse' :: Int -> ConfirmSignUpResponse

-- | Create a value of <a>ConfirmSignUpResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:ConfirmSignUpResponse'</a>,
--   <a>confirmSignUpResponse_httpStatus</a> - The response's http status
--   code.
newConfirmSignUpResponse :: Int -> ConfirmSignUpResponse

-- | Represents the request to list user pools.
--   
--   <i>See:</i> <a>newListUserPools</a> smart constructor.
data ListUserPools
ListUserPools' :: Maybe Text -> Natural -> ListUserPools

-- | Create a value of <a>ListUserPools</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListUserPools'</a>, <a>listUserPools_nextToken</a> -
--   An identifier that was returned from the previous call to this
--   operation, which can be used to return the next set of items in the
--   list.
--   
--   <a>$sel:maxResults:ListUserPools'</a>, <a>listUserPools_maxResults</a>
--   - The maximum number of results you want the request to return when
--   listing the user pools.
newListUserPools :: Natural -> ListUserPools

-- | Represents the response to list user pools.
--   
--   <i>See:</i> <a>newListUserPoolsResponse</a> smart constructor.
data ListUserPoolsResponse
ListUserPoolsResponse' :: Maybe [UserPoolDescriptionType] -> Maybe Text -> Int -> ListUserPoolsResponse

-- | Create a value of <a>ListUserPoolsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userPools:ListUserPoolsResponse'</a>,
--   <a>listUserPoolsResponse_userPools</a> - The user pools from the
--   response to list users.
--   
--   <a>$sel:nextToken:ListUserPools'</a>,
--   <a>listUserPoolsResponse_nextToken</a> - An identifier that was
--   returned from the previous call to this operation, which can be used
--   to return the next set of items in the list.
--   
--   <a>$sel:httpStatus:ListUserPoolsResponse'</a>,
--   <a>listUserPoolsResponse_httpStatus</a> - The response's http status
--   code.
newListUserPoolsResponse :: Int -> ListUserPoolsResponse

-- | Represents the request to reset a user's password as an administrator.
--   
--   <i>See:</i> <a>newAdminResetUserPassword</a> smart constructor.
data AdminResetUserPassword
AdminResetUserPassword' :: Maybe (HashMap Text Text) -> Text -> Sensitive Text -> AdminResetUserPassword

-- | Create a value of <a>AdminResetUserPassword</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientMetadata:AdminResetUserPassword'</a>,
--   <a>adminResetUserPassword_clientMetadata</a> - A map of custom
--   key-value pairs that you can provide as input for any custom workflows
--   that this action triggers.
--   
--   You create custom workflows by assigning Lambda functions to user pool
--   triggers. When you use the AdminResetUserPassword API action, Amazon
--   Cognito invokes the function that is assigned to the <i>custom
--   message</i> trigger. When Amazon Cognito invokes this function, it
--   passes a JSON payload, which the function receives as input. This
--   payload contains a <tt>clientMetadata</tt> attribute, which provides
--   the data that you assigned to the ClientMetadata parameter in your
--   AdminResetUserPassword request. In your function code in Lambda, you
--   can process the <tt>clientMetadata</tt> value to enhance your workflow
--   for your specific needs.
--   
--   For more information, see <a>Customizing User Pool Workflows with
--   Lambda Triggers</a> in the <i>Amazon Cognito Developer Guide</i>.
--   
--   Take the following limitations into consideration when you use the
--   ClientMetadata parameter:
--   
--   <ul>
--   <li>Amazon Cognito does not store the ClientMetadata value. This data
--   is available only to Lambda triggers that are assigned to a user pool
--   to support custom workflows. If your user pool configuration does not
--   include triggers, the ClientMetadata parameter serves no purpose.</li>
--   <li>Amazon Cognito does not validate the ClientMetadata value.</li>
--   <li>Amazon Cognito does not encrypt the the ClientMetadata value, so
--   don't use it to provide sensitive information.</li>
--   </ul>
--   
--   <a>$sel:userPoolId:AdminResetUserPassword'</a>,
--   <a>adminResetUserPassword_userPoolId</a> - The user pool ID for the
--   user pool where you want to reset the user's password.
--   
--   <a>$sel:username:AdminResetUserPassword'</a>,
--   <a>adminResetUserPassword_username</a> - The user name of the user
--   whose password you wish to reset.
newAdminResetUserPassword :: Text -> Text -> AdminResetUserPassword

-- | Represents the response from the server to reset a user password as an
--   administrator.
--   
--   <i>See:</i> <a>newAdminResetUserPasswordResponse</a> smart
--   constructor.
data AdminResetUserPasswordResponse
AdminResetUserPasswordResponse' :: Int -> AdminResetUserPasswordResponse

-- | Create a value of <a>AdminResetUserPasswordResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:AdminResetUserPasswordResponse'</a>,
--   <a>adminResetUserPasswordResponse_httpStatus</a> - The response's http
--   status code.
newAdminResetUserPasswordResponse :: Int -> AdminResetUserPasswordResponse

-- | <i>See:</i> <a>newUpdateAuthEventFeedback</a> smart constructor.
data UpdateAuthEventFeedback
UpdateAuthEventFeedback' :: Text -> Sensitive Text -> Text -> Sensitive Text -> FeedbackValueType -> UpdateAuthEventFeedback

-- | Create a value of <a>UpdateAuthEventFeedback</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userPoolId:UpdateAuthEventFeedback'</a>,
--   <a>updateAuthEventFeedback_userPoolId</a> - The user pool ID.
--   
--   <a>$sel:username:UpdateAuthEventFeedback'</a>,
--   <a>updateAuthEventFeedback_username</a> - The user pool username.
--   
--   <a>$sel:eventId:UpdateAuthEventFeedback'</a>,
--   <a>updateAuthEventFeedback_eventId</a> - The event ID.
--   
--   <a>$sel:feedbackToken:UpdateAuthEventFeedback'</a>,
--   <a>updateAuthEventFeedback_feedbackToken</a> - The feedback token.
--   
--   <a>$sel:feedbackValue:UpdateAuthEventFeedback'</a>,
--   <a>updateAuthEventFeedback_feedbackValue</a> - The authentication
--   event feedback value.
newUpdateAuthEventFeedback :: Text -> Text -> Text -> Text -> FeedbackValueType -> UpdateAuthEventFeedback

-- | <i>See:</i> <a>newUpdateAuthEventFeedbackResponse</a> smart
--   constructor.
data UpdateAuthEventFeedbackResponse
UpdateAuthEventFeedbackResponse' :: Int -> UpdateAuthEventFeedbackResponse

-- | Create a value of <a>UpdateAuthEventFeedbackResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateAuthEventFeedbackResponse'</a>,
--   <a>updateAuthEventFeedbackResponse_httpStatus</a> - The response's
--   http status code.
newUpdateAuthEventFeedbackResponse :: Int -> UpdateAuthEventFeedbackResponse

-- | Represents the request to create the user import job.
--   
--   <i>See:</i> <a>newCreateUserImportJob</a> smart constructor.
data CreateUserImportJob
CreateUserImportJob' :: Text -> Text -> Text -> CreateUserImportJob

-- | Create a value of <a>CreateUserImportJob</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobName:CreateUserImportJob'</a>,
--   <a>createUserImportJob_jobName</a> - The job name for the user import
--   job.
--   
--   <a>$sel:userPoolId:CreateUserImportJob'</a>,
--   <a>createUserImportJob_userPoolId</a> - The user pool ID for the user
--   pool that the users are being imported into.
--   
--   <a>$sel:cloudWatchLogsRoleArn:CreateUserImportJob'</a>,
--   <a>createUserImportJob_cloudWatchLogsRoleArn</a> - The role ARN for
--   the Amazon CloudWatch Logging role for the user import job.
newCreateUserImportJob :: Text -> Text -> Text -> CreateUserImportJob

-- | Represents the response from the server to the request to create the
--   user import job.
--   
--   <i>See:</i> <a>newCreateUserImportJobResponse</a> smart constructor.
data CreateUserImportJobResponse
CreateUserImportJobResponse' :: Maybe UserImportJobType -> Int -> CreateUserImportJobResponse

-- | Create a value of <a>CreateUserImportJobResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userImportJob:CreateUserImportJobResponse'</a>,
--   <a>createUserImportJobResponse_userImportJob</a> - The job object that
--   represents the user import job.
--   
--   <a>$sel:httpStatus:CreateUserImportJobResponse'</a>,
--   <a>createUserImportJobResponse_httpStatus</a> - The response's http
--   status code.
newCreateUserImportJobResponse :: Int -> CreateUserImportJobResponse

-- | Represents the request to get information about the user.
--   
--   <i>See:</i> <a>newGetUser</a> smart constructor.
data GetUser
GetUser' :: Sensitive Text -> GetUser

-- | Create a value of <a>GetUser</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:accessToken:GetUser'</a>, <a>getUser_accessToken</a> - The
--   access token returned by the server response to get information about
--   the user.
newGetUser :: Text -> GetUser

-- | Represents the response from the server from the request to get
--   information about the user.
--   
--   <i>See:</i> <a>newGetUserResponse</a> smart constructor.
data GetUserResponse
GetUserResponse' :: Maybe [Text] -> Maybe [MFAOptionType] -> Maybe Text -> Int -> Sensitive Text -> [AttributeType] -> GetUserResponse

-- | Create a value of <a>GetUserResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userMFASettingList:GetUserResponse'</a>,
--   <a>getUserResponse_userMFASettingList</a> - The MFA options that are
--   enabled for the user. The possible values in this list are
--   <tt>SMS_MFA</tt> and <tt>SOFTWARE_TOKEN_MFA</tt>.
--   
--   <a>$sel:mfaOptions:GetUserResponse'</a>,
--   <a>getUserResponse_mfaOptions</a> - <i>This response parameter is no
--   longer supported.</i> It provides information only about SMS MFA
--   configurations. It doesn't provide information about TOTP software
--   token MFA configurations. To look up information about either type of
--   MFA configuration, use UserMFASettingList instead.
--   
--   <a>$sel:preferredMfaSetting:GetUserResponse'</a>,
--   <a>getUserResponse_preferredMfaSetting</a> - The user's preferred MFA
--   setting.
--   
--   <a>$sel:httpStatus:GetUserResponse'</a>,
--   <a>getUserResponse_httpStatus</a> - The response's http status code.
--   
--   <a>$sel:username:GetUserResponse'</a>, <a>getUserResponse_username</a>
--   - The user name of the user you wish to retrieve from the get user
--   request.
--   
--   <a>$sel:userAttributes:GetUserResponse'</a>,
--   <a>getUserResponse_userAttributes</a> - An array of name-value pairs
--   representing user attributes.
--   
--   For custom attributes, you must prepend the <tt>custom:</tt> prefix to
--   the attribute name.
newGetUserResponse :: Int -> Text -> GetUserResponse

-- | <i>See:</i> <a>newGetUICustomization</a> smart constructor.
data GetUICustomization
GetUICustomization' :: Maybe (Sensitive Text) -> Text -> GetUICustomization

-- | Create a value of <a>GetUICustomization</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientId:GetUICustomization'</a>,
--   <a>getUICustomization_clientId</a> - The client ID for the client app.
--   
--   <a>$sel:userPoolId:GetUICustomization'</a>,
--   <a>getUICustomization_userPoolId</a> - The user pool ID for the user
--   pool.
newGetUICustomization :: Text -> GetUICustomization

-- | <i>See:</i> <a>newGetUICustomizationResponse</a> smart constructor.
data GetUICustomizationResponse
GetUICustomizationResponse' :: Int -> UICustomizationType -> GetUICustomizationResponse

-- | Create a value of <a>GetUICustomizationResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:GetUICustomizationResponse'</a>,
--   <a>getUICustomizationResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:uICustomization:GetUICustomizationResponse'</a>,
--   <a>getUICustomizationResponse_uICustomization</a> - The UI
--   customization information.
newGetUICustomizationResponse :: Int -> UICustomizationType -> GetUICustomizationResponse

-- | Represents the request to get the header information for the .csv file
--   for the user import job.
--   
--   <i>See:</i> <a>newGetCSVHeader</a> smart constructor.
data GetCSVHeader
GetCSVHeader' :: Text -> GetCSVHeader

-- | Create a value of <a>GetCSVHeader</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userPoolId:GetCSVHeader'</a>, <a>getCSVHeader_userPoolId</a> -
--   The user pool ID for the user pool that the users are to be imported
--   into.
newGetCSVHeader :: Text -> GetCSVHeader

-- | Represents the response from the server to the request to get the
--   header information for the .csv file for the user import job.
--   
--   <i>See:</i> <a>newGetCSVHeaderResponse</a> smart constructor.
data GetCSVHeaderResponse
GetCSVHeaderResponse' :: Maybe Text -> Maybe [Text] -> Int -> GetCSVHeaderResponse

-- | Create a value of <a>GetCSVHeaderResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userPoolId:GetCSVHeader'</a>,
--   <a>getCSVHeaderResponse_userPoolId</a> - The user pool ID for the user
--   pool that the users are to be imported into.
--   
--   <a>$sel:cSVHeader:GetCSVHeaderResponse'</a>,
--   <a>getCSVHeaderResponse_cSVHeader</a> - The header information for the
--   .csv file for the user import job.
--   
--   <a>$sel:httpStatus:GetCSVHeaderResponse'</a>,
--   <a>getCSVHeaderResponse_httpStatus</a> - The response's http status
--   code.
newGetCSVHeaderResponse :: Int -> GetCSVHeaderResponse

-- | Represents the request to delete a user as an administrator.
--   
--   <i>See:</i> <a>newAdminDeleteUser</a> smart constructor.
data AdminDeleteUser
AdminDeleteUser' :: Text -> Sensitive Text -> AdminDeleteUser

-- | Create a value of <a>AdminDeleteUser</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userPoolId:AdminDeleteUser'</a>,
--   <a>adminDeleteUser_userPoolId</a> - The user pool ID for the user pool
--   where you want to delete the user.
--   
--   <a>$sel:username:AdminDeleteUser'</a>, <a>adminDeleteUser_username</a>
--   - The user name of the user you wish to delete.
newAdminDeleteUser :: Text -> Text -> AdminDeleteUser

-- | <i>See:</i> <a>newAdminDeleteUserResponse</a> smart constructor.
data AdminDeleteUserResponse
AdminDeleteUserResponse' :: AdminDeleteUserResponse

-- | Create a value of <a>AdminDeleteUserResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newAdminDeleteUserResponse :: AdminDeleteUserResponse

-- | Sends the forgot device request, as an administrator.
--   
--   <i>See:</i> <a>newAdminForgetDevice</a> smart constructor.
data AdminForgetDevice
AdminForgetDevice' :: Text -> Sensitive Text -> Text -> AdminForgetDevice

-- | Create a value of <a>AdminForgetDevice</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userPoolId:AdminForgetDevice'</a>,
--   <a>adminForgetDevice_userPoolId</a> - The user pool ID.
--   
--   <a>$sel:username:AdminForgetDevice'</a>,
--   <a>adminForgetDevice_username</a> - The user name.
--   
--   <a>$sel:deviceKey:AdminForgetDevice'</a>,
--   <a>adminForgetDevice_deviceKey</a> - The device key.
newAdminForgetDevice :: Text -> Text -> Text -> AdminForgetDevice

-- | <i>See:</i> <a>newAdminForgetDeviceResponse</a> smart constructor.
data AdminForgetDeviceResponse
AdminForgetDeviceResponse' :: AdminForgetDeviceResponse

-- | Create a value of <a>AdminForgetDeviceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newAdminForgetDeviceResponse :: AdminForgetDeviceResponse

-- | <i>See:</i> <a>newDescribeResourceServer</a> smart constructor.
data DescribeResourceServer
DescribeResourceServer' :: Text -> Text -> DescribeResourceServer

-- | Create a value of <a>DescribeResourceServer</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userPoolId:DescribeResourceServer'</a>,
--   <a>describeResourceServer_userPoolId</a> - The user pool ID for the
--   user pool that hosts the resource server.
--   
--   <a>$sel:identifier:DescribeResourceServer'</a>,
--   <a>describeResourceServer_identifier</a> - The identifier for the
--   resource server
newDescribeResourceServer :: Text -> Text -> DescribeResourceServer

-- | <i>See:</i> <a>newDescribeResourceServerResponse</a> smart
--   constructor.
data DescribeResourceServerResponse
DescribeResourceServerResponse' :: Int -> ResourceServerType -> DescribeResourceServerResponse

-- | Create a value of <a>DescribeResourceServerResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DescribeResourceServerResponse'</a>,
--   <a>describeResourceServerResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:resourceServer:DescribeResourceServerResponse'</a>,
--   <a>describeResourceServerResponse_resourceServer</a> - The resource
--   server.
newDescribeResourceServerResponse :: Int -> ResourceServerType -> DescribeResourceServerResponse

-- | <i>See:</i> <a>newSetUserMFAPreference</a> smart constructor.
data SetUserMFAPreference
SetUserMFAPreference' :: Maybe SMSMfaSettingsType -> Maybe SoftwareTokenMfaSettingsType -> Sensitive Text -> SetUserMFAPreference

-- | Create a value of <a>SetUserMFAPreference</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sMSMfaSettings:SetUserMFAPreference'</a>,
--   <a>setUserMFAPreference_sMSMfaSettings</a> - The SMS text message
--   multi-factor authentication (MFA) settings.
--   
--   <a>$sel:softwareTokenMfaSettings:SetUserMFAPreference'</a>,
--   <a>setUserMFAPreference_softwareTokenMfaSettings</a> - The time-based
--   one-time password software token MFA settings.
--   
--   <a>$sel:accessToken:SetUserMFAPreference'</a>,
--   <a>setUserMFAPreference_accessToken</a> - The access token for the
--   user.
newSetUserMFAPreference :: Text -> SetUserMFAPreference

-- | <i>See:</i> <a>newSetUserMFAPreferenceResponse</a> smart constructor.
data SetUserMFAPreferenceResponse
SetUserMFAPreferenceResponse' :: Int -> SetUserMFAPreferenceResponse

-- | Create a value of <a>SetUserMFAPreferenceResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:SetUserMFAPreferenceResponse'</a>,
--   <a>setUserMFAPreferenceResponse_httpStatus</a> - The response's http
--   status code.
newSetUserMFAPreferenceResponse :: Int -> SetUserMFAPreferenceResponse

-- | The request to update the device status, as an administrator.
--   
--   <i>See:</i> <a>newAdminUpdateDeviceStatus</a> smart constructor.
data AdminUpdateDeviceStatus
AdminUpdateDeviceStatus' :: Maybe DeviceRememberedStatusType -> Text -> Sensitive Text -> Text -> AdminUpdateDeviceStatus

-- | Create a value of <a>AdminUpdateDeviceStatus</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deviceRememberedStatus:AdminUpdateDeviceStatus'</a>,
--   <a>adminUpdateDeviceStatus_deviceRememberedStatus</a> - The status
--   indicating whether a device has been remembered or not.
--   
--   <a>$sel:userPoolId:AdminUpdateDeviceStatus'</a>,
--   <a>adminUpdateDeviceStatus_userPoolId</a> - The user pool ID.
--   
--   <a>$sel:username:AdminUpdateDeviceStatus'</a>,
--   <a>adminUpdateDeviceStatus_username</a> - The user name.
--   
--   <a>$sel:deviceKey:AdminUpdateDeviceStatus'</a>,
--   <a>adminUpdateDeviceStatus_deviceKey</a> - The device key.
newAdminUpdateDeviceStatus :: Text -> Text -> Text -> AdminUpdateDeviceStatus

-- | The status response from the request to update the device, as an
--   administrator.
--   
--   <i>See:</i> <a>newAdminUpdateDeviceStatusResponse</a> smart
--   constructor.
data AdminUpdateDeviceStatusResponse
AdminUpdateDeviceStatusResponse' :: Int -> AdminUpdateDeviceStatusResponse

-- | Create a value of <a>AdminUpdateDeviceStatusResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:AdminUpdateDeviceStatusResponse'</a>,
--   <a>adminUpdateDeviceStatusResponse_httpStatus</a> - The response's
--   http status code.
newAdminUpdateDeviceStatusResponse :: Int -> AdminUpdateDeviceStatusResponse

-- | Represents the request to create a user in the specified user pool.
--   
--   <i>See:</i> <a>newAdminCreateUser</a> smart constructor.
data AdminCreateUser
AdminCreateUser' :: Maybe (HashMap Text Text) -> Maybe (Sensitive Text) -> Maybe Bool -> Maybe [DeliveryMediumType] -> Maybe MessageActionType -> Maybe [AttributeType] -> Maybe [AttributeType] -> Text -> Sensitive Text -> AdminCreateUser

-- | Create a value of <a>AdminCreateUser</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientMetadata:AdminCreateUser'</a>,
--   <a>adminCreateUser_clientMetadata</a> - A map of custom key-value
--   pairs that you can provide as input for any custom workflows that this
--   action triggers.
--   
--   You create custom workflows by assigning Lambda functions to user pool
--   triggers. When you use the AdminCreateUser API action, Amazon Cognito
--   invokes the function that is assigned to the <i>pre sign-up</i>
--   trigger. When Amazon Cognito invokes this function, it passes a JSON
--   payload, which the function receives as input. This payload contains a
--   <tt>clientMetadata</tt> attribute, which provides the data that you
--   assigned to the ClientMetadata parameter in your AdminCreateUser
--   request. In your function code in Lambda, you can process the
--   <tt>clientMetadata</tt> value to enhance your workflow for your
--   specific needs.
--   
--   For more information, see <a>Customizing User Pool Workflows with
--   Lambda Triggers</a> in the <i>Amazon Cognito Developer Guide</i>.
--   
--   Take the following limitations into consideration when you use the
--   ClientMetadata parameter:
--   
--   <ul>
--   <li>Amazon Cognito does not store the ClientMetadata value. This data
--   is available only to Lambda triggers that are assigned to a user pool
--   to support custom workflows. If your user pool configuration does not
--   include triggers, the ClientMetadata parameter serves no purpose.</li>
--   <li>Amazon Cognito does not validate the ClientMetadata value.</li>
--   <li>Amazon Cognito does not encrypt the the ClientMetadata value, so
--   don't use it to provide sensitive information.</li>
--   </ul>
--   
--   <a>$sel:temporaryPassword:AdminCreateUser'</a>,
--   <a>adminCreateUser_temporaryPassword</a> - The user's temporary
--   password. This password must conform to the password policy that you
--   specified when you created the user pool.
--   
--   The temporary password is valid only once. To complete the Admin
--   Create User flow, the user must enter the temporary password in the
--   sign-in page along with a new password to be used in all future
--   sign-ins.
--   
--   This parameter is not required. If you do not specify a value, Amazon
--   Cognito generates one for you.
--   
--   The temporary password can only be used until the user account
--   expiration limit that you specified when you created the user pool. To
--   reset the account after that time limit, you must call
--   <tt>AdminCreateUser</tt> again, specifying <tt>"RESEND"</tt> for the
--   <tt>MessageAction</tt> parameter.
--   
--   <a>$sel:forceAliasCreation:AdminCreateUser'</a>,
--   <a>adminCreateUser_forceAliasCreation</a> - This parameter is only
--   used if the <tt>phone_number_verified</tt> or <tt>email_verified</tt>
--   attribute is set to <tt>True</tt>. Otherwise, it is ignored.
--   
--   If this parameter is set to <tt>True</tt> and the phone number or
--   email address specified in the UserAttributes parameter already exists
--   as an alias with a different user, the API call will migrate the alias
--   from the previous user to the newly created user. The previous user
--   will no longer be able to log in using that alias.
--   
--   If this parameter is set to <tt>False</tt>, the API throws an
--   <tt>AliasExistsException</tt> error if the alias already exists. The
--   default value is <tt>False</tt>.
--   
--   <a>$sel:desiredDeliveryMediums:AdminCreateUser'</a>,
--   <a>adminCreateUser_desiredDeliveryMediums</a> - Specify
--   <tt>"EMAIL"</tt> if email will be used to send the welcome message.
--   Specify <tt>"SMS"</tt> if the phone number will be used. The default
--   value is <tt>"SMS"</tt>. More than one value can be specified.
--   
--   <a>$sel:messageAction:AdminCreateUser'</a>,
--   <a>adminCreateUser_messageAction</a> - Set to <tt>"RESEND"</tt> to
--   resend the invitation message to a user that already exists and reset
--   the expiration limit on the user's account. Set to <tt>"SUPPRESS"</tt>
--   to suppress sending the message. Only one value can be specified.
--   
--   <a>$sel:userAttributes:AdminCreateUser'</a>,
--   <a>adminCreateUser_userAttributes</a> - An array of name-value pairs
--   that contain user attributes and attribute values to be set for the
--   user to be created. You can create a user without specifying any
--   attributes other than <tt>Username</tt>. However, any attributes that
--   you specify as required (when creating a user pool or in the
--   <b>Attributes</b> tab of the console) must be supplied either by you
--   (in your call to <tt>AdminCreateUser</tt>) or by the user (when he or
--   she signs up in response to your welcome message).
--   
--   For custom attributes, you must prepend the <tt>custom:</tt> prefix to
--   the attribute name.
--   
--   To send a message inviting the user to sign up, you must specify the
--   user's email address or phone number. This can be done in your call to
--   AdminCreateUser or in the <b>Users</b> tab of the Amazon Cognito
--   console for managing your user pools.
--   
--   In your call to <tt>AdminCreateUser</tt>, you can set the
--   <tt>email_verified</tt> attribute to <tt>True</tt>, and you can set
--   the <tt>phone_number_verified</tt> attribute to <tt>True</tt>. (You
--   can also do this by calling <a>AdminUpdateUserAttributes</a>.)
--   
--   <ul>
--   <li><b>email</b>: The email address of the user to whom the message
--   that contains the code and username will be sent. Required if the
--   <tt>email_verified</tt> attribute is set to <tt>True</tt>, or if
--   <tt>"EMAIL"</tt> is specified in the <tt>DesiredDeliveryMediums</tt>
--   parameter.</li>
--   <li><b>phone_number</b>: The phone number of the user to whom the
--   message that contains the code and username will be sent. Required if
--   the <tt>phone_number_verified</tt> attribute is set to <tt>True</tt>,
--   or if <tt>"SMS"</tt> is specified in the
--   <tt>DesiredDeliveryMediums</tt> parameter.</li>
--   </ul>
--   
--   <a>$sel:validationData:AdminCreateUser'</a>,
--   <a>adminCreateUser_validationData</a> - The user's validation data.
--   This is an array of name-value pairs that contain user attributes and
--   attribute values that you can use for custom validation, such as
--   restricting the types of user accounts that can be registered. For
--   example, you might choose to allow or disallow user sign-up based on
--   the user's domain.
--   
--   To configure custom validation, you must create a Pre Sign-up Lambda
--   trigger for the user pool as described in the Amazon Cognito Developer
--   Guide. The Lambda trigger receives the validation data and uses it in
--   the validation process.
--   
--   The user's validation data is not persisted.
--   
--   <a>$sel:userPoolId:AdminCreateUser'</a>,
--   <a>adminCreateUser_userPoolId</a> - The user pool ID for the user pool
--   where the user will be created.
--   
--   <a>$sel:username:AdminCreateUser'</a>, <a>adminCreateUser_username</a>
--   - The username for the user. Must be unique within the user pool. Must
--   be a UTF-8 string between 1 and 128 characters. After the user is
--   created, the username cannot be changed.
newAdminCreateUser :: Text -> Text -> AdminCreateUser

-- | Represents the response from the server to the request to create the
--   user.
--   
--   <i>See:</i> <a>newAdminCreateUserResponse</a> smart constructor.
data AdminCreateUserResponse
AdminCreateUserResponse' :: Maybe UserType -> Int -> AdminCreateUserResponse

-- | Create a value of <a>AdminCreateUserResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:user:AdminCreateUserResponse'</a>,
--   <a>adminCreateUserResponse_user</a> - The newly created user.
--   
--   <a>$sel:httpStatus:AdminCreateUserResponse'</a>,
--   <a>adminCreateUserResponse_httpStatus</a> - The response's http status
--   code.
newAdminCreateUserResponse :: Int -> AdminCreateUserResponse

-- | Represents the request to add custom attributes.
--   
--   <i>See:</i> <a>newAddCustomAttributes</a> smart constructor.
data AddCustomAttributes
AddCustomAttributes' :: Text -> NonEmpty SchemaAttributeType -> AddCustomAttributes

-- | Create a value of <a>AddCustomAttributes</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userPoolId:AddCustomAttributes'</a>,
--   <a>addCustomAttributes_userPoolId</a> - The user pool ID for the user
--   pool where you want to add custom attributes.
--   
--   <a>$sel:customAttributes:AddCustomAttributes'</a>,
--   <a>addCustomAttributes_customAttributes</a> - An array of custom
--   attributes, such as Mutable and Name.
newAddCustomAttributes :: Text -> NonEmpty SchemaAttributeType -> AddCustomAttributes

-- | Represents the response from the server for the request to add custom
--   attributes.
--   
--   <i>See:</i> <a>newAddCustomAttributesResponse</a> smart constructor.
data AddCustomAttributesResponse
AddCustomAttributesResponse' :: Int -> AddCustomAttributesResponse

-- | Create a value of <a>AddCustomAttributesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:AddCustomAttributesResponse'</a>,
--   <a>addCustomAttributesResponse_httpStatus</a> - The response's http
--   status code.
newAddCustomAttributesResponse :: Int -> AddCustomAttributesResponse

-- | Represents the request to list the user pool clients.
--   
--   <i>See:</i> <a>newListUserPoolClients</a> smart constructor.
data ListUserPoolClients
ListUserPoolClients' :: Maybe Text -> Maybe Natural -> Text -> ListUserPoolClients

-- | Create a value of <a>ListUserPoolClients</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListUserPoolClients'</a>,
--   <a>listUserPoolClients_nextToken</a> - An identifier that was returned
--   from the previous call to this operation, which can be used to return
--   the next set of items in the list.
--   
--   <a>$sel:maxResults:ListUserPoolClients'</a>,
--   <a>listUserPoolClients_maxResults</a> - The maximum number of results
--   you want the request to return when listing the user pool clients.
--   
--   <a>$sel:userPoolId:ListUserPoolClients'</a>,
--   <a>listUserPoolClients_userPoolId</a> - The user pool ID for the user
--   pool where you want to list user pool clients.
newListUserPoolClients :: Text -> ListUserPoolClients

-- | Represents the response from the server that lists user pool clients.
--   
--   <i>See:</i> <a>newListUserPoolClientsResponse</a> smart constructor.
data ListUserPoolClientsResponse
ListUserPoolClientsResponse' :: Maybe Text -> Maybe [UserPoolClientDescription] -> Int -> ListUserPoolClientsResponse

-- | Create a value of <a>ListUserPoolClientsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListUserPoolClients'</a>,
--   <a>listUserPoolClientsResponse_nextToken</a> - An identifier that was
--   returned from the previous call to this operation, which can be used
--   to return the next set of items in the list.
--   
--   <a>$sel:userPoolClients:ListUserPoolClientsResponse'</a>,
--   <a>listUserPoolClientsResponse_userPoolClients</a> - The user pool
--   clients in the response that lists user pool clients.
--   
--   <a>$sel:httpStatus:ListUserPoolClientsResponse'</a>,
--   <a>listUserPoolClientsResponse_httpStatus</a> - The response's http
--   status code.
newListUserPoolClientsResponse :: Int -> ListUserPoolClientsResponse

-- | <i>See:</i> <a>newAdminSetUserMFAPreference</a> smart constructor.
data AdminSetUserMFAPreference
AdminSetUserMFAPreference' :: Maybe SMSMfaSettingsType -> Maybe SoftwareTokenMfaSettingsType -> Sensitive Text -> Text -> AdminSetUserMFAPreference

-- | Create a value of <a>AdminSetUserMFAPreference</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sMSMfaSettings:AdminSetUserMFAPreference'</a>,
--   <a>adminSetUserMFAPreference_sMSMfaSettings</a> - The SMS text message
--   MFA settings.
--   
--   <a>$sel:softwareTokenMfaSettings:AdminSetUserMFAPreference'</a>,
--   <a>adminSetUserMFAPreference_softwareTokenMfaSettings</a> - The
--   time-based one-time password software token MFA settings.
--   
--   <a>$sel:username:AdminSetUserMFAPreference'</a>,
--   <a>adminSetUserMFAPreference_username</a> - The user pool username or
--   alias.
--   
--   <a>$sel:userPoolId:AdminSetUserMFAPreference'</a>,
--   <a>adminSetUserMFAPreference_userPoolId</a> - The user pool ID.
newAdminSetUserMFAPreference :: Text -> Text -> AdminSetUserMFAPreference

-- | <i>See:</i> <a>newAdminSetUserMFAPreferenceResponse</a> smart
--   constructor.
data AdminSetUserMFAPreferenceResponse
AdminSetUserMFAPreferenceResponse' :: Int -> AdminSetUserMFAPreferenceResponse

-- | Create a value of <a>AdminSetUserMFAPreferenceResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:AdminSetUserMFAPreferenceResponse'</a>,
--   <a>adminSetUserMFAPreferenceResponse_httpStatus</a> - The response's
--   http status code.
newAdminSetUserMFAPreferenceResponse :: Int -> AdminSetUserMFAPreferenceResponse

-- | Represents the request to update the user pool client.
--   
--   <i>See:</i> <a>newUpdateUserPoolClient</a> smart constructor.
data UpdateUserPoolClient
UpdateUserPoolClient' :: Maybe Natural -> Maybe [ExplicitAuthFlowsType] -> Maybe [Text] -> Maybe [Text] -> Maybe Bool -> Maybe Natural -> Maybe TokenValidityUnitsType -> Maybe Text -> Maybe Bool -> Maybe [Text] -> Maybe PreventUserExistenceErrorTypes -> Maybe Natural -> Maybe [Text] -> Maybe [Text] -> Maybe [OAuthFlowType] -> Maybe AnalyticsConfigurationType -> Maybe Text -> Maybe [Text] -> Text -> Sensitive Text -> UpdateUserPoolClient

-- | Create a value of <a>UpdateUserPoolClient</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:refreshTokenValidity:UpdateUserPoolClient'</a>,
--   <a>updateUserPoolClient_refreshTokenValidity</a> - The time limit, in
--   days, after which the refresh token is no longer valid and cannot be
--   used.
--   
--   <a>$sel:explicitAuthFlows:UpdateUserPoolClient'</a>,
--   <a>updateUserPoolClient_explicitAuthFlows</a> - The authentication
--   flows that are supported by the user pool clients. Flow names without
--   the <tt>ALLOW_</tt> prefix are deprecated in favor of new names with
--   the <tt>ALLOW_</tt> prefix. Note that values with <tt>ALLOW_</tt>
--   prefix cannot be used along with values without <tt>ALLOW_</tt>
--   prefix.
--   
--   Valid values include:
--   
--   <ul>
--   <li><tt>ALLOW_ADMIN_USER_PASSWORD_AUTH</tt>: Enable admin based user
--   password authentication flow <tt>ADMIN_USER_PASSWORD_AUTH</tt>. This
--   setting replaces the <tt>ADMIN_NO_SRP_AUTH</tt> setting. With this
--   authentication flow, Cognito receives the password in the request
--   instead of using the SRP (Secure Remote Password protocol) protocol to
--   verify passwords.</li>
--   <li><tt>ALLOW_CUSTOM_AUTH</tt>: Enable Lambda trigger based
--   authentication.</li>
--   <li><tt>ALLOW_USER_PASSWORD_AUTH</tt>: Enable user password-based
--   authentication. In this flow, Cognito receives the password in the
--   request instead of using the SRP protocol to verify passwords.</li>
--   <li><tt>ALLOW_USER_SRP_AUTH</tt>: Enable SRP based
--   authentication.</li>
--   <li><tt>ALLOW_REFRESH_TOKEN_AUTH</tt>: Enable authflow to refresh
--   tokens.</li>
--   </ul>
--   
--   <a>$sel:supportedIdentityProviders:UpdateUserPoolClient'</a>,
--   <a>updateUserPoolClient_supportedIdentityProviders</a> - A list of
--   provider names for the identity providers that are supported on this
--   client.
--   
--   <a>$sel:logoutURLs:UpdateUserPoolClient'</a>,
--   <a>updateUserPoolClient_logoutURLs</a> - A list of allowed logout URLs
--   for the identity providers.
--   
--   <a>$sel:allowedOAuthFlowsUserPoolClient:UpdateUserPoolClient'</a>,
--   <a>updateUserPoolClient_allowedOAuthFlowsUserPoolClient</a> - Set to
--   true if the client is allowed to follow the OAuth protocol when
--   interacting with Cognito user pools.
--   
--   <a>$sel:idTokenValidity:UpdateUserPoolClient'</a>,
--   <a>updateUserPoolClient_idTokenValidity</a> - The time limit, after
--   which the ID token is no longer valid and cannot be used.
--   
--   <a>$sel:tokenValidityUnits:UpdateUserPoolClient'</a>,
--   <a>updateUserPoolClient_tokenValidityUnits</a> - The units in which
--   the validity times are represented in. Default for RefreshToken is
--   days, and default for ID and access tokens are hours.
--   
--   <a>$sel:defaultRedirectURI:UpdateUserPoolClient'</a>,
--   <a>updateUserPoolClient_defaultRedirectURI</a> - The default redirect
--   URI. Must be in the <tt>CallbackURLs</tt> list.
--   
--   A redirect URI must:
--   
--   <ul>
--   <li>Be an absolute URI.</li>
--   <li>Be registered with the authorization server.</li>
--   <li>Not include a fragment component.</li>
--   </ul>
--   
--   See <a>OAuth 2.0 - Redirection Endpoint</a>.
--   
--   Amazon Cognito requires HTTPS over HTTP except for http://localhost
--   for testing purposes only.
--   
--   App callback URLs such as myapp://example are also supported.
--   
--   <a>$sel:enableTokenRevocation:UpdateUserPoolClient'</a>,
--   <a>updateUserPoolClient_enableTokenRevocation</a> - Enables or
--   disables token revocation. For more information about revoking tokens,
--   see <a>RevokeToken</a>.
--   
--   <a>$sel:writeAttributes:UpdateUserPoolClient'</a>,
--   <a>updateUserPoolClient_writeAttributes</a> - The writeable attributes
--   of the user pool.
--   
--   <a>$sel:preventUserExistenceErrors:UpdateUserPoolClient'</a>,
--   <a>updateUserPoolClient_preventUserExistenceErrors</a> - Use this
--   setting to choose which errors and responses are returned by Cognito
--   APIs during authentication, account confirmation, and password
--   recovery when the user does not exist in the user pool. When set to
--   <tt>ENABLED</tt> and the user does not exist, authentication returns
--   an error indicating either the username or password was incorrect, and
--   account confirmation and password recovery return a response
--   indicating a code was sent to a simulated destination. When set to
--   <tt>LEGACY</tt>, those APIs will return a
--   <tt>UserNotFoundException</tt> exception if the user does not exist in
--   the user pool.
--   
--   Valid values include:
--   
--   <ul>
--   <li><tt>ENABLED</tt> - This prevents user existence-related
--   errors.</li>
--   <li><tt>LEGACY</tt> - This represents the old behavior of Cognito
--   where user existence related errors are not prevented.</li>
--   </ul>
--   
--   After February 15th 2020, the value of
--   <tt>PreventUserExistenceErrors</tt> will default to <tt>ENABLED</tt>
--   for newly created user pool clients if no value is provided.
--   
--   <a>$sel:accessTokenValidity:UpdateUserPoolClient'</a>,
--   <a>updateUserPoolClient_accessTokenValidity</a> - The time limit,
--   after which the access token is no longer valid and cannot be used.
--   
--   <a>$sel:readAttributes:UpdateUserPoolClient'</a>,
--   <a>updateUserPoolClient_readAttributes</a> - The read-only attributes
--   of the user pool.
--   
--   <a>$sel:allowedOAuthScopes:UpdateUserPoolClient'</a>,
--   <a>updateUserPoolClient_allowedOAuthScopes</a> - The allowed OAuth
--   scopes. Possible values provided by OAuth are: <tt>phone</tt>,
--   <tt>email</tt>, <tt>openid</tt>, and <tt>profile</tt>. Possible values
--   provided by Amazon Web Services are:
--   <tt>aws.cognito.signin.user.admin</tt>. Custom scopes created in
--   Resource Servers are also supported.
--   
--   <a>$sel:allowedOAuthFlows:UpdateUserPoolClient'</a>,
--   <a>updateUserPoolClient_allowedOAuthFlows</a> - The allowed OAuth
--   flows.
--   
--   Set to <tt>code</tt> to initiate a code grant flow, which provides an
--   authorization code as the response. This code can be exchanged for
--   access tokens with the token endpoint.
--   
--   Set to <tt>implicit</tt> to specify that the client should get the
--   access token (and, optionally, ID token, based on scopes) directly.
--   
--   Set to <tt>client_credentials</tt> to specify that the client should
--   get the access token (and, optionally, ID token, based on scopes) from
--   the token endpoint using a combination of client and client_secret.
--   
--   <a>$sel:analyticsConfiguration:UpdateUserPoolClient'</a>,
--   <a>updateUserPoolClient_analyticsConfiguration</a> - The Amazon
--   Pinpoint analytics configuration for collecting metrics for this user
--   pool.
--   
--   In regions where Pinpoint is not available, Cognito User Pools only
--   supports sending events to Amazon Pinpoint projects in us-east-1. In
--   regions where Pinpoint is available, Cognito User Pools will support
--   sending events to Amazon Pinpoint projects within that same region.
--   
--   <a>$sel:clientName:UpdateUserPoolClient'</a>,
--   <a>updateUserPoolClient_clientName</a> - The client name from the
--   update user pool client request.
--   
--   <a>$sel:callbackURLs:UpdateUserPoolClient'</a>,
--   <a>updateUserPoolClient_callbackURLs</a> - A list of allowed redirect
--   (callback) URLs for the identity providers.
--   
--   A redirect URI must:
--   
--   <ul>
--   <li>Be an absolute URI.</li>
--   <li>Be registered with the authorization server.</li>
--   <li>Not include a fragment component.</li>
--   </ul>
--   
--   See <a>OAuth 2.0 - Redirection Endpoint</a>.
--   
--   Amazon Cognito requires HTTPS over HTTP except for http://localhost
--   for testing purposes only.
--   
--   App callback URLs such as myapp://example are also supported.
--   
--   <a>$sel:userPoolId:UpdateUserPoolClient'</a>,
--   <a>updateUserPoolClient_userPoolId</a> - The user pool ID for the user
--   pool where you want to update the user pool client.
--   
--   <a>$sel:clientId:UpdateUserPoolClient'</a>,
--   <a>updateUserPoolClient_clientId</a> - The ID of the client associated
--   with the user pool.
newUpdateUserPoolClient :: Text -> Text -> UpdateUserPoolClient

-- | Represents the response from the server to the request to update the
--   user pool client.
--   
--   <i>See:</i> <a>newUpdateUserPoolClientResponse</a> smart constructor.
data UpdateUserPoolClientResponse
UpdateUserPoolClientResponse' :: Maybe UserPoolClientType -> Int -> UpdateUserPoolClientResponse

-- | Create a value of <a>UpdateUserPoolClientResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userPoolClient:UpdateUserPoolClientResponse'</a>,
--   <a>updateUserPoolClientResponse_userPoolClient</a> - The user pool
--   client value from the response from the server when an update user
--   pool client request is made.
--   
--   <a>$sel:httpStatus:UpdateUserPoolClientResponse'</a>,
--   <a>updateUserPoolClientResponse_httpStatus</a> - The response's http
--   status code.
newUpdateUserPoolClientResponse :: Int -> UpdateUserPoolClientResponse

-- | Represents the request to delete a user pool client.
--   
--   <i>See:</i> <a>newDeleteUserPoolClient</a> smart constructor.
data DeleteUserPoolClient
DeleteUserPoolClient' :: Text -> Sensitive Text -> DeleteUserPoolClient

-- | Create a value of <a>DeleteUserPoolClient</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userPoolId:DeleteUserPoolClient'</a>,
--   <a>deleteUserPoolClient_userPoolId</a> - The user pool ID for the user
--   pool where you want to delete the client.
--   
--   <a>$sel:clientId:DeleteUserPoolClient'</a>,
--   <a>deleteUserPoolClient_clientId</a> - The app client ID of the app
--   associated with the user pool.
newDeleteUserPoolClient :: Text -> Text -> DeleteUserPoolClient

-- | <i>See:</i> <a>newDeleteUserPoolClientResponse</a> smart constructor.
data DeleteUserPoolClientResponse
DeleteUserPoolClientResponse' :: DeleteUserPoolClientResponse

-- | Create a value of <a>DeleteUserPoolClientResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteUserPoolClientResponse :: DeleteUserPoolClientResponse

-- | Represents the request to update the device status.
--   
--   <i>See:</i> <a>newUpdateDeviceStatus</a> smart constructor.
data UpdateDeviceStatus
UpdateDeviceStatus' :: Maybe DeviceRememberedStatusType -> Sensitive Text -> Text -> UpdateDeviceStatus

-- | Create a value of <a>UpdateDeviceStatus</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deviceRememberedStatus:UpdateDeviceStatus'</a>,
--   <a>updateDeviceStatus_deviceRememberedStatus</a> - The status of
--   whether a device is remembered.
--   
--   <a>$sel:accessToken:UpdateDeviceStatus'</a>,
--   <a>updateDeviceStatus_accessToken</a> - The access token.
--   
--   <a>$sel:deviceKey:UpdateDeviceStatus'</a>,
--   <a>updateDeviceStatus_deviceKey</a> - The device key.
newUpdateDeviceStatus :: Text -> Text -> UpdateDeviceStatus

-- | The response to the request to update the device status.
--   
--   <i>See:</i> <a>newUpdateDeviceStatusResponse</a> smart constructor.
data UpdateDeviceStatusResponse
UpdateDeviceStatusResponse' :: Int -> UpdateDeviceStatusResponse

-- | Create a value of <a>UpdateDeviceStatusResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateDeviceStatusResponse'</a>,
--   <a>updateDeviceStatusResponse_httpStatus</a> - The response's http
--   status code.
newUpdateDeviceStatusResponse :: Int -> UpdateDeviceStatusResponse

-- | Represents the request to forget the device.
--   
--   <i>See:</i> <a>newForgetDevice</a> smart constructor.
data ForgetDevice
ForgetDevice' :: Maybe (Sensitive Text) -> Text -> ForgetDevice

-- | Create a value of <a>ForgetDevice</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:accessToken:ForgetDevice'</a>, <a>forgetDevice_accessToken</a>
--   - The access token for the forgotten device request.
--   
--   <a>$sel:deviceKey:ForgetDevice'</a>, <a>forgetDevice_deviceKey</a> -
--   The device key.
newForgetDevice :: Text -> ForgetDevice

-- | <i>See:</i> <a>newForgetDeviceResponse</a> smart constructor.
data ForgetDeviceResponse
ForgetDeviceResponse' :: ForgetDeviceResponse

-- | Create a value of <a>ForgetDeviceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newForgetDeviceResponse :: ForgetDeviceResponse

-- | Request to get a signing certificate from Cognito.
--   
--   <i>See:</i> <a>newGetSigningCertificate</a> smart constructor.
data GetSigningCertificate
GetSigningCertificate' :: Text -> GetSigningCertificate

-- | Create a value of <a>GetSigningCertificate</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userPoolId:GetSigningCertificate'</a>,
--   <a>getSigningCertificate_userPoolId</a> - The user pool ID.
newGetSigningCertificate :: Text -> GetSigningCertificate

-- | Response from Cognito for a signing certificate request.
--   
--   <i>See:</i> <a>newGetSigningCertificateResponse</a> smart constructor.
data GetSigningCertificateResponse
GetSigningCertificateResponse' :: Maybe Text -> Int -> GetSigningCertificateResponse

-- | Create a value of <a>GetSigningCertificateResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:certificate:GetSigningCertificateResponse'</a>,
--   <a>getSigningCertificateResponse_certificate</a> - The signing
--   certificate.
--   
--   <a>$sel:httpStatus:GetSigningCertificateResponse'</a>,
--   <a>getSigningCertificateResponse_httpStatus</a> - The response's http
--   status code.
newGetSigningCertificateResponse :: Int -> GetSigningCertificateResponse

-- | Represents the request to delete a user.
--   
--   <i>See:</i> <a>newDeleteUser</a> smart constructor.
data DeleteUser
DeleteUser' :: Sensitive Text -> DeleteUser

-- | Create a value of <a>DeleteUser</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:accessToken:DeleteUser'</a>, <a>deleteUser_accessToken</a> -
--   The access token from a request to delete a user.
newDeleteUser :: Text -> DeleteUser

-- | <i>See:</i> <a>newDeleteUserResponse</a> smart constructor.
data DeleteUserResponse
DeleteUserResponse' :: DeleteUserResponse

-- | Create a value of <a>DeleteUserResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteUserResponse :: DeleteUserResponse

-- | <i>See:</i> <a>newTagResource</a> smart constructor.
data TagResource
TagResource' :: Text -> HashMap Text Text -> TagResource

-- | Create a value of <a>TagResource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:TagResource'</a>, <a>tagResource_resourceArn</a> -
--   The Amazon Resource Name (ARN) of the user pool to assign the tags to.
--   
--   <a>$sel:tags:TagResource'</a>, <a>tagResource_tags</a> - The tags to
--   assign to the user pool.
newTagResource :: Text -> TagResource

-- | <i>See:</i> <a>newTagResourceResponse</a> smart constructor.
data TagResourceResponse
TagResourceResponse' :: Int -> TagResourceResponse

-- | Create a value of <a>TagResourceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:TagResourceResponse'</a>,
--   <a>tagResourceResponse_httpStatus</a> - The response's http status
--   code.
newTagResourceResponse :: Int -> TagResourceResponse

-- | Represents the request to create a user pool client.
--   
--   <i>See:</i> <a>newCreateUserPoolClient</a> smart constructor.
data CreateUserPoolClient
CreateUserPoolClient' :: Maybe Natural -> Maybe [ExplicitAuthFlowsType] -> Maybe [Text] -> Maybe [Text] -> Maybe Bool -> Maybe Bool -> Maybe Natural -> Maybe TokenValidityUnitsType -> Maybe Text -> Maybe Bool -> Maybe [Text] -> Maybe PreventUserExistenceErrorTypes -> Maybe Natural -> Maybe [Text] -> Maybe [Text] -> Maybe [OAuthFlowType] -> Maybe AnalyticsConfigurationType -> Maybe [Text] -> Text -> Text -> CreateUserPoolClient

-- | Create a value of <a>CreateUserPoolClient</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:refreshTokenValidity:CreateUserPoolClient'</a>,
--   <a>createUserPoolClient_refreshTokenValidity</a> - The time limit, in
--   days, after which the refresh token is no longer valid and cannot be
--   used.
--   
--   <a>$sel:explicitAuthFlows:CreateUserPoolClient'</a>,
--   <a>createUserPoolClient_explicitAuthFlows</a> - The authentication
--   flows that are supported by the user pool clients. Flow names without
--   the <tt>ALLOW_</tt> prefix are deprecated in favor of new names with
--   the <tt>ALLOW_</tt> prefix. Note that values with <tt>ALLOW_</tt>
--   prefix cannot be used along with values without <tt>ALLOW_</tt>
--   prefix.
--   
--   Valid values include:
--   
--   <ul>
--   <li><tt>ALLOW_ADMIN_USER_PASSWORD_AUTH</tt>: Enable admin based user
--   password authentication flow <tt>ADMIN_USER_PASSWORD_AUTH</tt>. This
--   setting replaces the <tt>ADMIN_NO_SRP_AUTH</tt> setting. With this
--   authentication flow, Cognito receives the password in the request
--   instead of using the SRP (Secure Remote Password protocol) protocol to
--   verify passwords.</li>
--   <li><tt>ALLOW_CUSTOM_AUTH</tt>: Enable Lambda trigger based
--   authentication.</li>
--   <li><tt>ALLOW_USER_PASSWORD_AUTH</tt>: Enable user password-based
--   authentication. In this flow, Cognito receives the password in the
--   request instead of using the SRP protocol to verify passwords.</li>
--   <li><tt>ALLOW_USER_SRP_AUTH</tt>: Enable SRP based
--   authentication.</li>
--   <li><tt>ALLOW_REFRESH_TOKEN_AUTH</tt>: Enable authflow to refresh
--   tokens.</li>
--   </ul>
--   
--   <a>$sel:supportedIdentityProviders:CreateUserPoolClient'</a>,
--   <a>createUserPoolClient_supportedIdentityProviders</a> - A list of
--   provider names for the identity providers that are supported on this
--   client. The following are supported: <tt>COGNITO</tt>,
--   <tt>Facebook</tt>, <tt>Google</tt> and <tt>LoginWithAmazon</tt>.
--   
--   <a>$sel:logoutURLs:CreateUserPoolClient'</a>,
--   <a>createUserPoolClient_logoutURLs</a> - A list of allowed logout URLs
--   for the identity providers.
--   
--   <a>$sel:allowedOAuthFlowsUserPoolClient:CreateUserPoolClient'</a>,
--   <a>createUserPoolClient_allowedOAuthFlowsUserPoolClient</a> - Set to
--   true if the client is allowed to follow the OAuth protocol when
--   interacting with Cognito user pools.
--   
--   <a>$sel:generateSecret:CreateUserPoolClient'</a>,
--   <a>createUserPoolClient_generateSecret</a> - Boolean to specify
--   whether you want to generate a secret for the user pool client being
--   created.
--   
--   <a>$sel:idTokenValidity:CreateUserPoolClient'</a>,
--   <a>createUserPoolClient_idTokenValidity</a> - The time limit, between
--   5 minutes and 1 day, after which the ID token is no longer valid and
--   cannot be used. This value will be overridden if you have entered a
--   value in TokenValidityUnits.
--   
--   <a>$sel:tokenValidityUnits:CreateUserPoolClient'</a>,
--   <a>createUserPoolClient_tokenValidityUnits</a> - The units in which
--   the validity times are represented in. Default for RefreshToken is
--   days, and default for ID and access tokens are hours.
--   
--   <a>$sel:defaultRedirectURI:CreateUserPoolClient'</a>,
--   <a>createUserPoolClient_defaultRedirectURI</a> - The default redirect
--   URI. Must be in the <tt>CallbackURLs</tt> list.
--   
--   A redirect URI must:
--   
--   <ul>
--   <li>Be an absolute URI.</li>
--   <li>Be registered with the authorization server.</li>
--   <li>Not include a fragment component.</li>
--   </ul>
--   
--   See <a>OAuth 2.0 - Redirection Endpoint</a>.
--   
--   Amazon Cognito requires HTTPS over HTTP except for http://localhost
--   for testing purposes only.
--   
--   App callback URLs such as myapp://example are also supported.
--   
--   <a>$sel:enableTokenRevocation:CreateUserPoolClient'</a>,
--   <a>createUserPoolClient_enableTokenRevocation</a> - Enables or
--   disables token revocation. For more information about revoking tokens,
--   see <a>RevokeToken</a>.
--   
--   If you don't include this parameter, token revocation is automatically
--   enabled for the new user pool client.
--   
--   <a>$sel:writeAttributes:CreateUserPoolClient'</a>,
--   <a>createUserPoolClient_writeAttributes</a> - The user pool attributes
--   that the app client can write to.
--   
--   If your app client allows users to sign in through an identity
--   provider, this array must include all attributes that are mapped to
--   identity provider attributes. Amazon Cognito updates mapped attributes
--   when users sign in to your application through an identity provider.
--   If your app client lacks write access to a mapped attribute, Amazon
--   Cognito throws an error when it attempts to update the attribute. For
--   more information, see <a>Specifying Identity Provider Attribute
--   Mappings for Your User Pool</a>.
--   
--   <a>$sel:preventUserExistenceErrors:CreateUserPoolClient'</a>,
--   <a>createUserPoolClient_preventUserExistenceErrors</a> - Use this
--   setting to choose which errors and responses are returned by Cognito
--   APIs during authentication, account confirmation, and password
--   recovery when the user does not exist in the user pool. When set to
--   <tt>ENABLED</tt> and the user does not exist, authentication returns
--   an error indicating either the username or password was incorrect, and
--   account confirmation and password recovery return a response
--   indicating a code was sent to a simulated destination. When set to
--   <tt>LEGACY</tt>, those APIs will return a
--   <tt>UserNotFoundException</tt> exception if the user does not exist in
--   the user pool.
--   
--   Valid values include:
--   
--   <ul>
--   <li><tt>ENABLED</tt> - This prevents user existence-related
--   errors.</li>
--   <li><tt>LEGACY</tt> - This represents the old behavior of Cognito
--   where user existence related errors are not prevented.</li>
--   </ul>
--   
--   After February 15th 2020, the value of
--   <tt>PreventUserExistenceErrors</tt> will default to <tt>ENABLED</tt>
--   for newly created user pool clients if no value is provided.
--   
--   <a>$sel:accessTokenValidity:CreateUserPoolClient'</a>,
--   <a>createUserPoolClient_accessTokenValidity</a> - The time limit,
--   between 5 minutes and 1 day, after which the access token is no longer
--   valid and cannot be used. This value will be overridden if you have
--   entered a value in TokenValidityUnits.
--   
--   <a>$sel:readAttributes:CreateUserPoolClient'</a>,
--   <a>createUserPoolClient_readAttributes</a> - The read attributes.
--   
--   <a>$sel:allowedOAuthScopes:CreateUserPoolClient'</a>,
--   <a>createUserPoolClient_allowedOAuthScopes</a> - The allowed OAuth
--   scopes. Possible values provided by OAuth are: <tt>phone</tt>,
--   <tt>email</tt>, <tt>openid</tt>, and <tt>profile</tt>. Possible values
--   provided by Amazon Web Services are:
--   <tt>aws.cognito.signin.user.admin</tt>. Custom scopes created in
--   Resource Servers are also supported.
--   
--   <a>$sel:allowedOAuthFlows:CreateUserPoolClient'</a>,
--   <a>createUserPoolClient_allowedOAuthFlows</a> - The allowed OAuth
--   flows.
--   
--   Set to <tt>code</tt> to initiate a code grant flow, which provides an
--   authorization code as the response. This code can be exchanged for
--   access tokens with the token endpoint.
--   
--   Set to <tt>implicit</tt> to specify that the client should get the
--   access token (and, optionally, ID token, based on scopes) directly.
--   
--   Set to <tt>client_credentials</tt> to specify that the client should
--   get the access token (and, optionally, ID token, based on scopes) from
--   the token endpoint using a combination of client and client_secret.
--   
--   <a>$sel:analyticsConfiguration:CreateUserPoolClient'</a>,
--   <a>createUserPoolClient_analyticsConfiguration</a> - The Amazon
--   Pinpoint analytics configuration for collecting metrics for this user
--   pool.
--   
--   In regions where Pinpoint is not available, Cognito User Pools only
--   supports sending events to Amazon Pinpoint projects in us-east-1. In
--   regions where Pinpoint is available, Cognito User Pools will support
--   sending events to Amazon Pinpoint projects within that same region.
--   
--   <a>$sel:callbackURLs:CreateUserPoolClient'</a>,
--   <a>createUserPoolClient_callbackURLs</a> - A list of allowed redirect
--   (callback) URLs for the identity providers.
--   
--   A redirect URI must:
--   
--   <ul>
--   <li>Be an absolute URI.</li>
--   <li>Be registered with the authorization server.</li>
--   <li>Not include a fragment component.</li>
--   </ul>
--   
--   See <a>OAuth 2.0 - Redirection Endpoint</a>.
--   
--   Amazon Cognito requires HTTPS over HTTP except for http://localhost
--   for testing purposes only.
--   
--   App callback URLs such as myapp://example are also supported.
--   
--   <a>$sel:userPoolId:CreateUserPoolClient'</a>,
--   <a>createUserPoolClient_userPoolId</a> - The user pool ID for the user
--   pool where you want to create a user pool client.
--   
--   <a>$sel:clientName:CreateUserPoolClient'</a>,
--   <a>createUserPoolClient_clientName</a> - The client name for the user
--   pool client you would like to create.
newCreateUserPoolClient :: Text -> Text -> CreateUserPoolClient

-- | Represents the response from the server to create a user pool client.
--   
--   <i>See:</i> <a>newCreateUserPoolClientResponse</a> smart constructor.
data CreateUserPoolClientResponse
CreateUserPoolClientResponse' :: Maybe UserPoolClientType -> Int -> CreateUserPoolClientResponse

-- | Create a value of <a>CreateUserPoolClientResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userPoolClient:CreateUserPoolClientResponse'</a>,
--   <a>createUserPoolClientResponse_userPoolClient</a> - The user pool
--   client that was just created.
--   
--   <a>$sel:httpStatus:CreateUserPoolClientResponse'</a>,
--   <a>createUserPoolClientResponse_httpStatus</a> - The response's http
--   status code.
newCreateUserPoolClientResponse :: Int -> CreateUserPoolClientResponse

-- | <i>See:</i> <a>newGetUserPoolMfaConfig</a> smart constructor.
data GetUserPoolMfaConfig
GetUserPoolMfaConfig' :: Text -> GetUserPoolMfaConfig

-- | Create a value of <a>GetUserPoolMfaConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userPoolId:GetUserPoolMfaConfig'</a>,
--   <a>getUserPoolMfaConfig_userPoolId</a> - The user pool ID.
newGetUserPoolMfaConfig :: Text -> GetUserPoolMfaConfig

-- | <i>See:</i> <a>newGetUserPoolMfaConfigResponse</a> smart constructor.
data GetUserPoolMfaConfigResponse
GetUserPoolMfaConfigResponse' :: Maybe SmsMfaConfigType -> Maybe SoftwareTokenMfaConfigType -> Maybe UserPoolMfaType -> Int -> GetUserPoolMfaConfigResponse

-- | Create a value of <a>GetUserPoolMfaConfigResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:smsMfaConfiguration:GetUserPoolMfaConfigResponse'</a>,
--   <a>getUserPoolMfaConfigResponse_smsMfaConfiguration</a> - The SMS text
--   message multi-factor (MFA) configuration.
--   
--   
--   <a>$sel:softwareTokenMfaConfiguration:GetUserPoolMfaConfigResponse'</a>,
--   <a>getUserPoolMfaConfigResponse_softwareTokenMfaConfiguration</a> -
--   The software token multi-factor (MFA) configuration.
--   
--   <a>$sel:mfaConfiguration:GetUserPoolMfaConfigResponse'</a>,
--   <a>getUserPoolMfaConfigResponse_mfaConfiguration</a> - The
--   multi-factor (MFA) configuration. Valid values include:
--   
--   <ul>
--   <li><tt>OFF</tt> MFA will not be used for any users.</li>
--   <li><tt>ON</tt> MFA is required for all users to sign in.</li>
--   <li><tt>OPTIONAL</tt> MFA will be required only for individual users
--   who have an MFA factor enabled.</li>
--   </ul>
--   
--   <a>$sel:httpStatus:GetUserPoolMfaConfigResponse'</a>,
--   <a>getUserPoolMfaConfigResponse_httpStatus</a> - The response's http
--   status code.
newGetUserPoolMfaConfigResponse :: Int -> GetUserPoolMfaConfigResponse

-- | <i>See:</i> <a>newCreateResourceServer</a> smart constructor.
data CreateResourceServer
CreateResourceServer' :: Maybe [ResourceServerScopeType] -> Text -> Text -> Text -> CreateResourceServer

-- | Create a value of <a>CreateResourceServer</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:scopes:CreateResourceServer'</a>,
--   <a>createResourceServer_scopes</a> - A list of scopes. Each scope is
--   map, where the keys are <tt>name</tt> and <tt>description</tt>.
--   
--   <a>$sel:userPoolId:CreateResourceServer'</a>,
--   <a>createResourceServer_userPoolId</a> - The user pool ID for the user
--   pool.
--   
--   <a>$sel:identifier:CreateResourceServer'</a>,
--   <a>createResourceServer_identifier</a> - A unique resource server
--   identifier for the resource server. This could be an HTTPS endpoint
--   where the resource server is located. For example,
--   <tt>https://my-weather-api.example.com</tt>.
--   
--   <a>$sel:name:CreateResourceServer'</a>,
--   <a>createResourceServer_name</a> - A friendly name for the resource
--   server.
newCreateResourceServer :: Text -> Text -> Text -> CreateResourceServer

-- | <i>See:</i> <a>newCreateResourceServerResponse</a> smart constructor.
data CreateResourceServerResponse
CreateResourceServerResponse' :: Int -> ResourceServerType -> CreateResourceServerResponse

-- | Create a value of <a>CreateResourceServerResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreateResourceServerResponse'</a>,
--   <a>createResourceServerResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:resourceServer:CreateResourceServerResponse'</a>,
--   <a>createResourceServerResponse_resourceServer</a> - The newly created
--   resource server.
newCreateResourceServerResponse :: Int -> ResourceServerType -> CreateResourceServerResponse

-- | <i>See:</i> <a>newAdminListUserAuthEvents</a> smart constructor.
data AdminListUserAuthEvents
AdminListUserAuthEvents' :: Maybe Text -> Maybe Natural -> Text -> Sensitive Text -> AdminListUserAuthEvents

-- | Create a value of <a>AdminListUserAuthEvents</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:AdminListUserAuthEvents'</a>,
--   <a>adminListUserAuthEvents_nextToken</a> - A pagination token.
--   
--   <a>$sel:maxResults:AdminListUserAuthEvents'</a>,
--   <a>adminListUserAuthEvents_maxResults</a> - The maximum number of
--   authentication events to return.
--   
--   <a>$sel:userPoolId:AdminListUserAuthEvents'</a>,
--   <a>adminListUserAuthEvents_userPoolId</a> - The user pool ID.
--   
--   <a>$sel:username:AdminListUserAuthEvents'</a>,
--   <a>adminListUserAuthEvents_username</a> - The user pool username or an
--   alias.
newAdminListUserAuthEvents :: Text -> Text -> AdminListUserAuthEvents

-- | <i>See:</i> <a>newAdminListUserAuthEventsResponse</a> smart
--   constructor.
data AdminListUserAuthEventsResponse
AdminListUserAuthEventsResponse' :: Maybe Text -> Maybe [AuthEventType] -> Int -> AdminListUserAuthEventsResponse

-- | Create a value of <a>AdminListUserAuthEventsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:AdminListUserAuthEvents'</a>,
--   <a>adminListUserAuthEventsResponse_nextToken</a> - A pagination token.
--   
--   <a>$sel:authEvents:AdminListUserAuthEventsResponse'</a>,
--   <a>adminListUserAuthEventsResponse_authEvents</a> - The response
--   object. It includes the <tt>EventID</tt>, <tt>EventType</tt>,
--   <tt>CreationDate</tt>, <tt>EventRisk</tt>, and <tt>EventResponse</tt>.
--   
--   <a>$sel:httpStatus:AdminListUserAuthEventsResponse'</a>,
--   <a>adminListUserAuthEventsResponse_httpStatus</a> - The response's
--   http status code.
newAdminListUserAuthEventsResponse :: Int -> AdminListUserAuthEventsResponse

-- | <i>See:</i> <a>newCreateGroup</a> smart constructor.
data CreateGroup
CreateGroup' :: Maybe Natural -> Maybe Text -> Maybe Text -> Text -> Text -> CreateGroup

-- | Create a value of <a>CreateGroup</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:precedence:CreateGroup'</a>, <a>createGroup_precedence</a> - A
--   nonnegative integer value that specifies the precedence of this group
--   relative to the other groups that a user can belong to in the user
--   pool. Zero is the highest precedence value. Groups with lower
--   <tt>Precedence</tt> values take precedence over groups with higher or
--   null <tt>Precedence</tt> values. If a user belongs to two or more
--   groups, it is the group with the lowest precedence value whose role
--   ARN will be used in the <tt>cognito:roles</tt> and
--   <tt>cognito:preferred_role</tt> claims in the user's tokens.
--   
--   Two groups can have the same <tt>Precedence</tt> value. If this
--   happens, neither group takes precedence over the other. If two groups
--   with the same <tt>Precedence</tt> have the same role ARN, that role is
--   used in the <tt>cognito:preferred_role</tt> claim in tokens for users
--   in each group. If the two groups have different role ARNs, the
--   <tt>cognito:preferred_role</tt> claim is not set in users' tokens.
--   
--   The default <tt>Precedence</tt> value is null.
--   
--   <a>$sel:description:CreateGroup'</a>, <a>createGroup_description</a> -
--   A string containing the description of the group.
--   
--   <a>$sel:roleArn:CreateGroup'</a>, <a>createGroup_roleArn</a> - The
--   role ARN for the group.
--   
--   <a>$sel:groupName:CreateGroup'</a>, <a>createGroup_groupName</a> - The
--   name of the group. Must be unique.
--   
--   <a>$sel:userPoolId:CreateGroup'</a>, <a>createGroup_userPoolId</a> -
--   The user pool ID for the user pool.
newCreateGroup :: Text -> Text -> CreateGroup

-- | <i>See:</i> <a>newCreateGroupResponse</a> smart constructor.
data CreateGroupResponse
CreateGroupResponse' :: Maybe GroupType -> Int -> CreateGroupResponse

-- | Create a value of <a>CreateGroupResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:group':CreateGroupResponse'</a>,
--   <a>createGroupResponse_group</a> - The group object for the group.
--   
--   <a>$sel:httpStatus:CreateGroupResponse'</a>,
--   <a>createGroupResponse_httpStatus</a> - The response's http status
--   code.
newCreateGroupResponse :: Int -> CreateGroupResponse

-- | <i>See:</i> <a>newAdminAddUserToGroup</a> smart constructor.
data AdminAddUserToGroup
AdminAddUserToGroup' :: Text -> Sensitive Text -> Text -> AdminAddUserToGroup

-- | Create a value of <a>AdminAddUserToGroup</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userPoolId:AdminAddUserToGroup'</a>,
--   <a>adminAddUserToGroup_userPoolId</a> - The user pool ID for the user
--   pool.
--   
--   <a>$sel:username:AdminAddUserToGroup'</a>,
--   <a>adminAddUserToGroup_username</a> - The username for the user.
--   
--   <a>$sel:groupName:AdminAddUserToGroup'</a>,
--   <a>adminAddUserToGroup_groupName</a> - The group name.
newAdminAddUserToGroup :: Text -> Text -> Text -> AdminAddUserToGroup

-- | <i>See:</i> <a>newAdminAddUserToGroupResponse</a> smart constructor.
data AdminAddUserToGroupResponse
AdminAddUserToGroupResponse' :: AdminAddUserToGroupResponse

-- | Create a value of <a>AdminAddUserToGroupResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newAdminAddUserToGroupResponse :: AdminAddUserToGroupResponse

-- | <i>See:</i> <a>newVerifySoftwareToken</a> smart constructor.
data VerifySoftwareToken
VerifySoftwareToken' :: Maybe (Sensitive Text) -> Maybe Text -> Maybe Text -> Text -> VerifySoftwareToken

-- | Create a value of <a>VerifySoftwareToken</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:accessToken:VerifySoftwareToken'</a>,
--   <a>verifySoftwareToken_accessToken</a> - The access token.
--   
--   <a>$sel:friendlyDeviceName:VerifySoftwareToken'</a>,
--   <a>verifySoftwareToken_friendlyDeviceName</a> - The friendly device
--   name.
--   
--   <a>$sel:session:VerifySoftwareToken'</a>,
--   <a>verifySoftwareToken_session</a> - The session which should be
--   passed both ways in challenge-response calls to the service.
--   
--   <a>$sel:userCode:VerifySoftwareToken'</a>,
--   <a>verifySoftwareToken_userCode</a> - The one time password computed
--   using the secret code returned by <a>AssociateSoftwareToken"</a>.
newVerifySoftwareToken :: Text -> VerifySoftwareToken

-- | <i>See:</i> <a>newVerifySoftwareTokenResponse</a> smart constructor.
data VerifySoftwareTokenResponse
VerifySoftwareTokenResponse' :: Maybe VerifySoftwareTokenResponseType -> Maybe Text -> Int -> VerifySoftwareTokenResponse

-- | Create a value of <a>VerifySoftwareTokenResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:VerifySoftwareTokenResponse'</a>,
--   <a>verifySoftwareTokenResponse_status</a> - The status of the verify
--   software token.
--   
--   <a>$sel:session:VerifySoftwareToken'</a>,
--   <a>verifySoftwareTokenResponse_session</a> - The session which should
--   be passed both ways in challenge-response calls to the service.
--   
--   <a>$sel:httpStatus:VerifySoftwareTokenResponse'</a>,
--   <a>verifySoftwareTokenResponse_httpStatus</a> - The response's http
--   status code.
newVerifySoftwareTokenResponse :: Int -> VerifySoftwareTokenResponse

-- | <i>See:</i> <a>newUntagResource</a> smart constructor.
data UntagResource
UntagResource' :: Text -> [Text] -> UntagResource

-- | Create a value of <a>UntagResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:UntagResource'</a>,
--   <a>untagResource_resourceArn</a> - The Amazon Resource Name (ARN) of
--   the user pool that the tags are assigned to.
--   
--   <a>$sel:tagKeys:UntagResource'</a>, <a>untagResource_tagKeys</a> - The
--   keys of the tags to remove from the user pool.
newUntagResource :: Text -> UntagResource

-- | <i>See:</i> <a>newUntagResourceResponse</a> smart constructor.
data UntagResourceResponse
UntagResourceResponse' :: Int -> UntagResourceResponse

-- | Create a value of <a>UntagResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UntagResourceResponse'</a>,
--   <a>untagResourceResponse_httpStatus</a> - The response's http status
--   code.
newUntagResourceResponse :: Int -> UntagResourceResponse

-- | <i>See:</i> <a>newRevokeToken</a> smart constructor.
data RevokeToken
RevokeToken' :: Maybe (Sensitive Text) -> Sensitive Text -> Sensitive Text -> RevokeToken

-- | Create a value of <a>RevokeToken</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientSecret:RevokeToken'</a>, <a>revokeToken_clientSecret</a>
--   - The secret for the client ID. This is required only if the client ID
--   has a secret.
--   
--   <a>$sel:token:RevokeToken'</a>, <a>revokeToken_token</a> - The token
--   that you want to revoke.
--   
--   <a>$sel:clientId:RevokeToken'</a>, <a>revokeToken_clientId</a> - The
--   client ID for the token that you want to revoke.
newRevokeToken :: Text -> Text -> RevokeToken

-- | <i>See:</i> <a>newRevokeTokenResponse</a> smart constructor.
data RevokeTokenResponse
RevokeTokenResponse' :: Int -> RevokeTokenResponse

-- | Create a value of <a>RevokeTokenResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:RevokeTokenResponse'</a>,
--   <a>revokeTokenResponse_httpStatus</a> - The response's http status
--   code.
newRevokeTokenResponse :: Int -> RevokeTokenResponse

-- | Represents the request to stop the user import job.
--   
--   <i>See:</i> <a>newStopUserImportJob</a> smart constructor.
data StopUserImportJob
StopUserImportJob' :: Text -> Text -> StopUserImportJob

-- | Create a value of <a>StopUserImportJob</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userPoolId:StopUserImportJob'</a>,
--   <a>stopUserImportJob_userPoolId</a> - The user pool ID for the user
--   pool that the users are being imported into.
--   
--   <a>$sel:jobId:StopUserImportJob'</a>, <a>stopUserImportJob_jobId</a> -
--   The job ID for the user import job.
newStopUserImportJob :: Text -> Text -> StopUserImportJob

-- | Represents the response from the server to the request to stop the
--   user import job.
--   
--   <i>See:</i> <a>newStopUserImportJobResponse</a> smart constructor.
data StopUserImportJobResponse
StopUserImportJobResponse' :: Maybe UserImportJobType -> Int -> StopUserImportJobResponse

-- | Create a value of <a>StopUserImportJobResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userImportJob:StopUserImportJobResponse'</a>,
--   <a>stopUserImportJobResponse_userImportJob</a> - The job object that
--   represents the user import job.
--   
--   <a>$sel:httpStatus:StopUserImportJobResponse'</a>,
--   <a>stopUserImportJobResponse_httpStatus</a> - The response's http
--   status code.
newStopUserImportJobResponse :: Int -> StopUserImportJobResponse

-- | Represents the request to describe the user import job.
--   
--   <i>See:</i> <a>newDescribeUserImportJob</a> smart constructor.
data DescribeUserImportJob
DescribeUserImportJob' :: Text -> Text -> DescribeUserImportJob

-- | Create a value of <a>DescribeUserImportJob</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userPoolId:DescribeUserImportJob'</a>,
--   <a>describeUserImportJob_userPoolId</a> - The user pool ID for the
--   user pool that the users are being imported into.
--   
--   <a>$sel:jobId:DescribeUserImportJob'</a>,
--   <a>describeUserImportJob_jobId</a> - The job ID for the user import
--   job.
newDescribeUserImportJob :: Text -> Text -> DescribeUserImportJob

-- | Represents the response from the server to the request to describe the
--   user import job.
--   
--   <i>See:</i> <a>newDescribeUserImportJobResponse</a> smart constructor.
data DescribeUserImportJobResponse
DescribeUserImportJobResponse' :: Maybe UserImportJobType -> Int -> DescribeUserImportJobResponse

-- | Create a value of <a>DescribeUserImportJobResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userImportJob:DescribeUserImportJobResponse'</a>,
--   <a>describeUserImportJobResponse_userImportJob</a> - The job object
--   that represents the user import job.
--   
--   <a>$sel:httpStatus:DescribeUserImportJobResponse'</a>,
--   <a>describeUserImportJobResponse_httpStatus</a> - The response's http
--   status code.
newDescribeUserImportJobResponse :: Int -> DescribeUserImportJobResponse

-- | <i>See:</i> <a>newDescribeRiskConfiguration</a> smart constructor.
data DescribeRiskConfiguration
DescribeRiskConfiguration' :: Maybe (Sensitive Text) -> Text -> DescribeRiskConfiguration

-- | Create a value of <a>DescribeRiskConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientId:DescribeRiskConfiguration'</a>,
--   <a>describeRiskConfiguration_clientId</a> - The app client ID.
--   
--   <a>$sel:userPoolId:DescribeRiskConfiguration'</a>,
--   <a>describeRiskConfiguration_userPoolId</a> - The user pool ID.
newDescribeRiskConfiguration :: Text -> DescribeRiskConfiguration

-- | <i>See:</i> <a>newDescribeRiskConfigurationResponse</a> smart
--   constructor.
data DescribeRiskConfigurationResponse
DescribeRiskConfigurationResponse' :: Int -> RiskConfigurationType -> DescribeRiskConfigurationResponse

-- | Create a value of <a>DescribeRiskConfigurationResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DescribeRiskConfigurationResponse'</a>,
--   <a>describeRiskConfigurationResponse_httpStatus</a> - The response's
--   http status code.
--   
--   <a>$sel:riskConfiguration:DescribeRiskConfigurationResponse'</a>,
--   <a>describeRiskConfigurationResponse_riskConfiguration</a> - The risk
--   configuration.
newDescribeRiskConfigurationResponse :: Int -> RiskConfigurationType -> DescribeRiskConfigurationResponse

-- | <i>See:</i> <a>newDeleteGroup</a> smart constructor.
data DeleteGroup
DeleteGroup' :: Text -> Text -> DeleteGroup

-- | Create a value of <a>DeleteGroup</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:groupName:DeleteGroup'</a>, <a>deleteGroup_groupName</a> - The
--   name of the group.
--   
--   <a>$sel:userPoolId:DeleteGroup'</a>, <a>deleteGroup_userPoolId</a> -
--   The user pool ID for the user pool.
newDeleteGroup :: Text -> Text -> DeleteGroup

-- | <i>See:</i> <a>newDeleteGroupResponse</a> smart constructor.
data DeleteGroupResponse
DeleteGroupResponse' :: DeleteGroupResponse

-- | Create a value of <a>DeleteGroupResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteGroupResponse :: DeleteGroupResponse

-- | <i>See:</i> <a>newUpdateGroup</a> smart constructor.
data UpdateGroup
UpdateGroup' :: Maybe Natural -> Maybe Text -> Maybe Text -> Text -> Text -> UpdateGroup

-- | Create a value of <a>UpdateGroup</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:precedence:UpdateGroup'</a>, <a>updateGroup_precedence</a> -
--   The new precedence value for the group. For more information about
--   this parameter, see <a>CreateGroup</a>.
--   
--   <a>$sel:description:UpdateGroup'</a>, <a>updateGroup_description</a> -
--   A string containing the new description of the group.
--   
--   <a>$sel:roleArn:UpdateGroup'</a>, <a>updateGroup_roleArn</a> - The new
--   role ARN for the group. This is used for setting the
--   <tt>cognito:roles</tt> and <tt>cognito:preferred_role</tt> claims in
--   the token.
--   
--   <a>$sel:groupName:UpdateGroup'</a>, <a>updateGroup_groupName</a> - The
--   name of the group.
--   
--   <a>$sel:userPoolId:UpdateGroup'</a>, <a>updateGroup_userPoolId</a> -
--   The user pool ID for the user pool.
newUpdateGroup :: Text -> Text -> UpdateGroup

-- | <i>See:</i> <a>newUpdateGroupResponse</a> smart constructor.
data UpdateGroupResponse
UpdateGroupResponse' :: Maybe GroupType -> Int -> UpdateGroupResponse

-- | Create a value of <a>UpdateGroupResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:group':UpdateGroupResponse'</a>,
--   <a>updateGroupResponse_group</a> - The group object for the group.
--   
--   <a>$sel:httpStatus:UpdateGroupResponse'</a>,
--   <a>updateGroupResponse_httpStatus</a> - The response's http status
--   code.
newUpdateGroupResponse :: Int -> UpdateGroupResponse

-- | Represents the request to sign out all devices.
--   
--   <i>See:</i> <a>newGlobalSignOut</a> smart constructor.
data GlobalSignOut
GlobalSignOut' :: Sensitive Text -> GlobalSignOut

-- | Create a value of <a>GlobalSignOut</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:accessToken:GlobalSignOut'</a>,
--   <a>globalSignOut_accessToken</a> - The access token.
newGlobalSignOut :: Text -> GlobalSignOut

-- | The response to the request to sign out all devices.
--   
--   <i>See:</i> <a>newGlobalSignOutResponse</a> smart constructor.
data GlobalSignOutResponse
GlobalSignOutResponse' :: Int -> GlobalSignOutResponse

-- | Create a value of <a>GlobalSignOutResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:GlobalSignOutResponse'</a>,
--   <a>globalSignOutResponse_httpStatus</a> - The response's http status
--   code.
newGlobalSignOutResponse :: Int -> GlobalSignOutResponse

-- | <i>See:</i> <a>newListGroups</a> smart constructor.
data ListGroups
ListGroups' :: Maybe Text -> Maybe Natural -> Text -> ListGroups

-- | Create a value of <a>ListGroups</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListGroups'</a>, <a>listGroups_nextToken</a> - An
--   identifier that was returned from the previous call to this operation,
--   which can be used to return the next set of items in the list.
--   
--   <a>$sel:limit:ListGroups'</a>, <a>listGroups_limit</a> - The limit of
--   the request to list groups.
--   
--   <a>$sel:userPoolId:ListGroups'</a>, <a>listGroups_userPoolId</a> - The
--   user pool ID for the user pool.
newListGroups :: Text -> ListGroups

-- | <i>See:</i> <a>newListGroupsResponse</a> smart constructor.
data ListGroupsResponse
ListGroupsResponse' :: Maybe [GroupType] -> Maybe Text -> Int -> ListGroupsResponse

-- | Create a value of <a>ListGroupsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:groups:ListGroupsResponse'</a>,
--   <a>listGroupsResponse_groups</a> - The group objects for the groups.
--   
--   <a>$sel:nextToken:ListGroups'</a>, <a>listGroupsResponse_nextToken</a>
--   - An identifier that was returned from the previous call to this
--   operation, which can be used to return the next set of items in the
--   list.
--   
--   <a>$sel:httpStatus:ListGroupsResponse'</a>,
--   <a>listGroupsResponse_httpStatus</a> - The response's http status
--   code.
newListGroupsResponse :: Int -> ListGroupsResponse

-- | <i>See:</i> <a>newUpdateIdentityProvider</a> smart constructor.
data UpdateIdentityProvider
UpdateIdentityProvider' :: Maybe [Text] -> Maybe (HashMap Text Text) -> Maybe (HashMap Text Text) -> Text -> Text -> UpdateIdentityProvider

-- | Create a value of <a>UpdateIdentityProvider</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:idpIdentifiers:UpdateIdentityProvider'</a>,
--   <a>updateIdentityProvider_idpIdentifiers</a> - A list of identity
--   provider identifiers.
--   
--   <a>$sel:attributeMapping:UpdateIdentityProvider'</a>,
--   <a>updateIdentityProvider_attributeMapping</a> - The identity provider
--   attribute mapping to be changed.
--   
--   <a>$sel:providerDetails:UpdateIdentityProvider'</a>,
--   <a>updateIdentityProvider_providerDetails</a> - The identity provider
--   details to be updated, such as <tt>MetadataURL</tt> and
--   <tt>MetadataFile</tt>.
--   
--   <a>$sel:userPoolId:UpdateIdentityProvider'</a>,
--   <a>updateIdentityProvider_userPoolId</a> - The user pool ID.
--   
--   <a>$sel:providerName:UpdateIdentityProvider'</a>,
--   <a>updateIdentityProvider_providerName</a> - The identity provider
--   name.
newUpdateIdentityProvider :: Text -> Text -> UpdateIdentityProvider

-- | <i>See:</i> <a>newUpdateIdentityProviderResponse</a> smart
--   constructor.
data UpdateIdentityProviderResponse
UpdateIdentityProviderResponse' :: Int -> IdentityProviderType -> UpdateIdentityProviderResponse

-- | Create a value of <a>UpdateIdentityProviderResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateIdentityProviderResponse'</a>,
--   <a>updateIdentityProviderResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:identityProvider:UpdateIdentityProviderResponse'</a>,
--   <a>updateIdentityProviderResponse_identityProvider</a> - The identity
--   provider object.
newUpdateIdentityProviderResponse :: Int -> IdentityProviderType -> UpdateIdentityProviderResponse

-- | <i>See:</i> <a>newDeleteIdentityProvider</a> smart constructor.
data DeleteIdentityProvider
DeleteIdentityProvider' :: Text -> Text -> DeleteIdentityProvider

-- | Create a value of <a>DeleteIdentityProvider</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userPoolId:DeleteIdentityProvider'</a>,
--   <a>deleteIdentityProvider_userPoolId</a> - The user pool ID.
--   
--   <a>$sel:providerName:DeleteIdentityProvider'</a>,
--   <a>deleteIdentityProvider_providerName</a> - The identity provider
--   name.
newDeleteIdentityProvider :: Text -> Text -> DeleteIdentityProvider

-- | <i>See:</i> <a>newDeleteIdentityProviderResponse</a> smart
--   constructor.
data DeleteIdentityProviderResponse
DeleteIdentityProviderResponse' :: DeleteIdentityProviderResponse

-- | Create a value of <a>DeleteIdentityProviderResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteIdentityProviderResponse :: DeleteIdentityProviderResponse

-- | <i>See:</i> <a>newListResourceServers</a> smart constructor.
data ListResourceServers
ListResourceServers' :: Maybe Text -> Maybe Natural -> Text -> ListResourceServers

-- | Create a value of <a>ListResourceServers</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListResourceServers'</a>,
--   <a>listResourceServers_nextToken</a> - A pagination token.
--   
--   <a>$sel:maxResults:ListResourceServers'</a>,
--   <a>listResourceServers_maxResults</a> - The maximum number of resource
--   servers to return.
--   
--   <a>$sel:userPoolId:ListResourceServers'</a>,
--   <a>listResourceServers_userPoolId</a> - The user pool ID for the user
--   pool.
newListResourceServers :: Text -> ListResourceServers

-- | <i>See:</i> <a>newListResourceServersResponse</a> smart constructor.
data ListResourceServersResponse
ListResourceServersResponse' :: Maybe Text -> Int -> [ResourceServerType] -> ListResourceServersResponse

-- | Create a value of <a>ListResourceServersResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListResourceServers'</a>,
--   <a>listResourceServersResponse_nextToken</a> - A pagination token.
--   
--   <a>$sel:httpStatus:ListResourceServersResponse'</a>,
--   <a>listResourceServersResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:resourceServers:ListResourceServersResponse'</a>,
--   <a>listResourceServersResponse_resourceServers</a> - The resource
--   servers.
newListResourceServersResponse :: Int -> ListResourceServersResponse

-- | The request to respond to the authentication challenge, as an
--   administrator.
--   
--   <i>See:</i> <a>newAdminRespondToAuthChallenge</a> smart constructor.
data AdminRespondToAuthChallenge
AdminRespondToAuthChallenge' :: Maybe (HashMap Text Text) -> Maybe ContextDataType -> Maybe AnalyticsMetadataType -> Maybe (HashMap Text Text) -> Maybe Text -> Text -> Sensitive Text -> ChallengeNameType -> AdminRespondToAuthChallenge

-- | Create a value of <a>AdminRespondToAuthChallenge</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientMetadata:AdminRespondToAuthChallenge'</a>,
--   <a>adminRespondToAuthChallenge_clientMetadata</a> - A map of custom
--   key-value pairs that you can provide as input for any custom workflows
--   that this action triggers.
--   
--   You create custom workflows by assigning Lambda functions to user pool
--   triggers. When you use the AdminRespondToAuthChallenge API action,
--   Amazon Cognito invokes any functions that are assigned to the
--   following triggers: <i>pre sign-up</i>, <i>custom message</i>, <i>post
--   authentication</i>, /user migration<i>, </i>pre token generation<i>,
--   </i>define auth challenge<i>, </i>create auth challenge<i>, and
--   </i>verify auth challenge response/. When Amazon Cognito invokes any
--   of these functions, it passes a JSON payload, which the function
--   receives as input. This payload contains a <tt>clientMetadata</tt>
--   attribute, which provides the data that you assigned to the
--   ClientMetadata parameter in your AdminRespondToAuthChallenge request.
--   In your function code in Lambda, you can process the
--   <tt>clientMetadata</tt> value to enhance your workflow for your
--   specific needs.
--   
--   For more information, see <a>Customizing User Pool Workflows with
--   Lambda Triggers</a> in the <i>Amazon Cognito Developer Guide</i>.
--   
--   Take the following limitations into consideration when you use the
--   ClientMetadata parameter:
--   
--   <ul>
--   <li>Amazon Cognito does not store the ClientMetadata value. This data
--   is available only to Lambda triggers that are assigned to a user pool
--   to support custom workflows. If your user pool configuration does not
--   include triggers, the ClientMetadata parameter serves no purpose.</li>
--   <li>Amazon Cognito does not validate the ClientMetadata value.</li>
--   <li>Amazon Cognito does not encrypt the the ClientMetadata value, so
--   don't use it to provide sensitive information.</li>
--   </ul>
--   
--   <a>$sel:contextData:AdminRespondToAuthChallenge'</a>,
--   <a>adminRespondToAuthChallenge_contextData</a> - Contextual data such
--   as the user's device fingerprint, IP address, or location used for
--   evaluating the risk of an unexpected event by Amazon Cognito advanced
--   security.
--   
--   <a>$sel:analyticsMetadata:AdminRespondToAuthChallenge'</a>,
--   <a>adminRespondToAuthChallenge_analyticsMetadata</a> - The analytics
--   metadata for collecting Amazon Pinpoint metrics for
--   <tt>AdminRespondToAuthChallenge</tt> calls.
--   
--   <a>$sel:challengeResponses:AdminRespondToAuthChallenge'</a>,
--   <a>adminRespondToAuthChallenge_challengeResponses</a> - The challenge
--   responses. These are inputs corresponding to the value of
--   <tt>ChallengeName</tt>, for example:
--   
--   <ul>
--   <li><tt>SMS_MFA</tt>: <tt>SMS_MFA_CODE</tt>, <tt>USERNAME</tt>,
--   <tt>SECRET_HASH</tt> (if app client is configured with client
--   secret).</li>
--   <li><tt>PASSWORD_VERIFIER</tt>: <tt>PASSWORD_CLAIM_SIGNATURE</tt>,
--   <tt>PASSWORD_CLAIM_SECRET_BLOCK</tt>, <tt>TIMESTAMP</tt>,
--   <tt>USERNAME</tt>, <tt>SECRET_HASH</tt> (if app client is configured
--   with client secret).</li>
--   <li><tt>ADMIN_NO_SRP_AUTH</tt>: <tt>PASSWORD</tt>, <tt>USERNAME</tt>,
--   <tt>SECRET_HASH</tt> (if app client is configured with client
--   secret).</li>
--   <li><tt>NEW_PASSWORD_REQUIRED</tt>: <tt>NEW_PASSWORD</tt>, any other
--   required attributes, <tt>USERNAME</tt>, <tt>SECRET_HASH</tt> (if app
--   client is configured with client secret).</li>
--   <li><tt>MFA_SETUP</tt> requires <tt>USERNAME</tt>, plus you need to
--   use the session value returned by <tt>VerifySoftwareToken</tt> in the
--   <tt>Session</tt> parameter.</li>
--   </ul>
--   
--   The value of the <tt>USERNAME</tt> attribute must be the user's actual
--   username, not an alias (such as email address or phone number). To
--   make this easier, the <tt>AdminInitiateAuth</tt> response includes the
--   actual username value in the <tt>USERNAMEUSER_ID_FOR_SRP</tt>
--   attribute, even if you specified an alias in your call to
--   <tt>AdminInitiateAuth</tt>.
--   
--   <a>$sel:session:AdminRespondToAuthChallenge'</a>,
--   <a>adminRespondToAuthChallenge_session</a> - The session which should
--   be passed both ways in challenge-response calls to the service. If
--   <tt>InitiateAuth</tt> or <tt>RespondToAuthChallenge</tt> API call
--   determines that the caller needs to go through another challenge, they
--   return a session with other challenge parameters. This session should
--   be passed as it is to the next <tt>RespondToAuthChallenge</tt> API
--   call.
--   
--   <a>$sel:userPoolId:AdminRespondToAuthChallenge'</a>,
--   <a>adminRespondToAuthChallenge_userPoolId</a> - The ID of the Amazon
--   Cognito user pool.
--   
--   <a>$sel:clientId:AdminRespondToAuthChallenge'</a>,
--   <a>adminRespondToAuthChallenge_clientId</a> - The app client ID.
--   
--   <a>$sel:challengeName:AdminRespondToAuthChallenge'</a>,
--   <a>adminRespondToAuthChallenge_challengeName</a> - The challenge name.
--   For more information, see <a>AdminInitiateAuth</a>.
newAdminRespondToAuthChallenge :: Text -> Text -> ChallengeNameType -> AdminRespondToAuthChallenge

-- | Responds to the authentication challenge, as an administrator.
--   
--   <i>See:</i> <a>newAdminRespondToAuthChallengeResponse</a> smart
--   constructor.
data AdminRespondToAuthChallengeResponse
AdminRespondToAuthChallengeResponse' :: Maybe ChallengeNameType -> Maybe (HashMap Text Text) -> Maybe AuthenticationResultType -> Maybe Text -> Int -> AdminRespondToAuthChallengeResponse

-- | Create a value of <a>AdminRespondToAuthChallengeResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:challengeName:AdminRespondToAuthChallenge'</a>,
--   <a>adminRespondToAuthChallengeResponse_challengeName</a> - The name of
--   the challenge. For more information, see <a>AdminInitiateAuth</a>.
--   
--   <a>$sel:challengeParameters:AdminRespondToAuthChallengeResponse'</a>,
--   <a>adminRespondToAuthChallengeResponse_challengeParameters</a> - The
--   challenge parameters. For more information, see
--   <a>AdminInitiateAuth</a>.
--   
--   <a>$sel:authenticationResult:AdminRespondToAuthChallengeResponse'</a>,
--   <a>adminRespondToAuthChallengeResponse_authenticationResult</a> - The
--   result returned by the server in response to the authentication
--   request.
--   
--   <a>$sel:session:AdminRespondToAuthChallenge'</a>,
--   <a>adminRespondToAuthChallengeResponse_session</a> - The session which
--   should be passed both ways in challenge-response calls to the service.
--   If the caller needs to go through another challenge, they return a
--   session with other challenge parameters. This session should be passed
--   as it is to the next <tt>RespondToAuthChallenge</tt> API call.
--   
--   <a>$sel:httpStatus:AdminRespondToAuthChallengeResponse'</a>,
--   <a>adminRespondToAuthChallengeResponse_httpStatus</a> - The response's
--   http status code.
newAdminRespondToAuthChallengeResponse :: Int -> AdminRespondToAuthChallengeResponse

-- | Represents the request to set user settings.
--   
--   <i>See:</i> <a>newSetUserSettings</a> smart constructor.
data SetUserSettings
SetUserSettings' :: Sensitive Text -> [MFAOptionType] -> SetUserSettings

-- | Create a value of <a>SetUserSettings</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:accessToken:SetUserSettings'</a>,
--   <a>setUserSettings_accessToken</a> - The access token for the set user
--   settings request.
--   
--   <a>$sel:mfaOptions:SetUserSettings'</a>,
--   <a>setUserSettings_mfaOptions</a> - You can use this parameter only to
--   set an SMS configuration that uses SMS for delivery.
newSetUserSettings :: Text -> SetUserSettings

-- | The response from the server for a set user settings request.
--   
--   <i>See:</i> <a>newSetUserSettingsResponse</a> smart constructor.
data SetUserSettingsResponse
SetUserSettingsResponse' :: Int -> SetUserSettingsResponse

-- | Create a value of <a>SetUserSettingsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:SetUserSettingsResponse'</a>,
--   <a>setUserSettingsResponse_httpStatus</a> - The response's http status
--   code.
newSetUserSettingsResponse :: Int -> SetUserSettingsResponse

-- | Represents the request to list devices, as an administrator.
--   
--   <i>See:</i> <a>newAdminListDevices</a> smart constructor.
data AdminListDevices
AdminListDevices' :: Maybe Text -> Maybe Natural -> Text -> Sensitive Text -> AdminListDevices

-- | Create a value of <a>AdminListDevices</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:paginationToken:AdminListDevices'</a>,
--   <a>adminListDevices_paginationToken</a> - The pagination token.
--   
--   <a>$sel:limit:AdminListDevices'</a>, <a>adminListDevices_limit</a> -
--   The limit of the devices request.
--   
--   <a>$sel:userPoolId:AdminListDevices'</a>,
--   <a>adminListDevices_userPoolId</a> - The user pool ID.
--   
--   <a>$sel:username:AdminListDevices'</a>,
--   <a>adminListDevices_username</a> - The user name.
newAdminListDevices :: Text -> Text -> AdminListDevices

-- | Lists the device's response, as an administrator.
--   
--   <i>See:</i> <a>newAdminListDevicesResponse</a> smart constructor.
data AdminListDevicesResponse
AdminListDevicesResponse' :: Maybe Text -> Maybe [DeviceType] -> Int -> AdminListDevicesResponse

-- | Create a value of <a>AdminListDevicesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:paginationToken:AdminListDevices'</a>,
--   <a>adminListDevicesResponse_paginationToken</a> - The pagination
--   token.
--   
--   <a>$sel:devices:AdminListDevicesResponse'</a>,
--   <a>adminListDevicesResponse_devices</a> - The devices in the list of
--   devices response.
--   
--   <a>$sel:httpStatus:AdminListDevicesResponse'</a>,
--   <a>adminListDevicesResponse_httpStatus</a> - The response's http
--   status code.
newAdminListDevicesResponse :: Int -> AdminListDevicesResponse

-- | Represents the request to describe a user pool client.
--   
--   <i>See:</i> <a>newDescribeUserPoolClient</a> smart constructor.
data DescribeUserPoolClient
DescribeUserPoolClient' :: Text -> Sensitive Text -> DescribeUserPoolClient

-- | Create a value of <a>DescribeUserPoolClient</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userPoolId:DescribeUserPoolClient'</a>,
--   <a>describeUserPoolClient_userPoolId</a> - The user pool ID for the
--   user pool you want to describe.
--   
--   <a>$sel:clientId:DescribeUserPoolClient'</a>,
--   <a>describeUserPoolClient_clientId</a> - The app client ID of the app
--   associated with the user pool.
newDescribeUserPoolClient :: Text -> Text -> DescribeUserPoolClient

-- | Represents the response from the server from a request to describe the
--   user pool client.
--   
--   <i>See:</i> <a>newDescribeUserPoolClientResponse</a> smart
--   constructor.
data DescribeUserPoolClientResponse
DescribeUserPoolClientResponse' :: Maybe UserPoolClientType -> Int -> DescribeUserPoolClientResponse

-- | Create a value of <a>DescribeUserPoolClientResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userPoolClient:DescribeUserPoolClientResponse'</a>,
--   <a>describeUserPoolClientResponse_userPoolClient</a> - The user pool
--   client from a server response to describe the user pool client.
--   
--   <a>$sel:httpStatus:DescribeUserPoolClientResponse'</a>,
--   <a>describeUserPoolClientResponse_httpStatus</a> - The response's http
--   status code.
newDescribeUserPoolClientResponse :: Int -> DescribeUserPoolClientResponse

-- | Represents the request to resend the confirmation code.
--   
--   <i>See:</i> <a>newResendConfirmationCode</a> smart constructor.
data ResendConfirmationCode
ResendConfirmationCode' :: Maybe (HashMap Text Text) -> Maybe AnalyticsMetadataType -> Maybe UserContextDataType -> Maybe (Sensitive Text) -> Sensitive Text -> Sensitive Text -> ResendConfirmationCode

-- | Create a value of <a>ResendConfirmationCode</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientMetadata:ResendConfirmationCode'</a>,
--   <a>resendConfirmationCode_clientMetadata</a> - A map of custom
--   key-value pairs that you can provide as input for any custom workflows
--   that this action triggers.
--   
--   You create custom workflows by assigning Lambda functions to user pool
--   triggers. When you use the ResendConfirmationCode API action, Amazon
--   Cognito invokes the function that is assigned to the <i>custom
--   message</i> trigger. When Amazon Cognito invokes this function, it
--   passes a JSON payload, which the function receives as input. This
--   payload contains a <tt>clientMetadata</tt> attribute, which provides
--   the data that you assigned to the ClientMetadata parameter in your
--   ResendConfirmationCode request. In your function code in Lambda, you
--   can process the <tt>clientMetadata</tt> value to enhance your workflow
--   for your specific needs.
--   
--   For more information, see <a>Customizing User Pool Workflows with
--   Lambda Triggers</a> in the <i>Amazon Cognito Developer Guide</i>.
--   
--   Take the following limitations into consideration when you use the
--   ClientMetadata parameter:
--   
--   <ul>
--   <li>Amazon Cognito does not store the ClientMetadata value. This data
--   is available only to Lambda triggers that are assigned to a user pool
--   to support custom workflows. If your user pool configuration does not
--   include triggers, the ClientMetadata parameter serves no purpose.</li>
--   <li>Amazon Cognito does not validate the ClientMetadata value.</li>
--   <li>Amazon Cognito does not encrypt the the ClientMetadata value, so
--   don't use it to provide sensitive information.</li>
--   </ul>
--   
--   <a>$sel:analyticsMetadata:ResendConfirmationCode'</a>,
--   <a>resendConfirmationCode_analyticsMetadata</a> - The Amazon Pinpoint
--   analytics metadata for collecting metrics for
--   <tt>ResendConfirmationCode</tt> calls.
--   
--   <a>$sel:userContextData:ResendConfirmationCode'</a>,
--   <a>resendConfirmationCode_userContextData</a> - Contextual data such
--   as the user's device fingerprint, IP address, or location used for
--   evaluating the risk of an unexpected event by Amazon Cognito advanced
--   security.
--   
--   <a>$sel:secretHash:ResendConfirmationCode'</a>,
--   <a>resendConfirmationCode_secretHash</a> - A keyed-hash message
--   authentication code (HMAC) calculated using the secret key of a user
--   pool client and username plus the client ID in the message.
--   
--   <a>$sel:clientId:ResendConfirmationCode'</a>,
--   <a>resendConfirmationCode_clientId</a> - The ID of the client
--   associated with the user pool.
--   
--   <a>$sel:username:ResendConfirmationCode'</a>,
--   <a>resendConfirmationCode_username</a> - The user name of the user to
--   whom you wish to resend a confirmation code.
newResendConfirmationCode :: Text -> Text -> ResendConfirmationCode

-- | The response from the server when the Amazon Cognito Your User Pools
--   service makes the request to resend a confirmation code.
--   
--   <i>See:</i> <a>newResendConfirmationCodeResponse</a> smart
--   constructor.
data ResendConfirmationCodeResponse
ResendConfirmationCodeResponse' :: Maybe CodeDeliveryDetailsType -> Int -> ResendConfirmationCodeResponse

-- | Create a value of <a>ResendConfirmationCodeResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:codeDeliveryDetails:ResendConfirmationCodeResponse'</a>,
--   <a>resendConfirmationCodeResponse_codeDeliveryDetails</a> - The code
--   delivery details returned by the server in response to the request to
--   resend the confirmation code.
--   
--   <a>$sel:httpStatus:ResendConfirmationCodeResponse'</a>,
--   <a>resendConfirmationCodeResponse_httpStatus</a> - The response's http
--   status code.
newResendConfirmationCodeResponse :: Int -> ResendConfirmationCodeResponse

-- | <i>See:</i> <a>newGetGroup</a> smart constructor.
data GetGroup
GetGroup' :: Text -> Text -> GetGroup

-- | Create a value of <a>GetGroup</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:groupName:GetGroup'</a>, <a>getGroup_groupName</a> - The name
--   of the group.
--   
--   <a>$sel:userPoolId:GetGroup'</a>, <a>getGroup_userPoolId</a> - The
--   user pool ID for the user pool.
newGetGroup :: Text -> Text -> GetGroup

-- | <i>See:</i> <a>newGetGroupResponse</a> smart constructor.
data GetGroupResponse
GetGroupResponse' :: Maybe GroupType -> Int -> GetGroupResponse

-- | Create a value of <a>GetGroupResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:group':GetGroupResponse'</a>, <a>getGroupResponse_group</a> -
--   The group object for the group.
--   
--   <a>$sel:httpStatus:GetGroupResponse'</a>,
--   <a>getGroupResponse_httpStatus</a> - The response's http status code.
newGetGroupResponse :: Int -> GetGroupResponse

-- | You can use this parameter to set an MFA configuration that uses the
--   SMS delivery medium.
--   
--   <i>See:</i> <a>newAdminSetUserSettings</a> smart constructor.
data AdminSetUserSettings
AdminSetUserSettings' :: Text -> Sensitive Text -> [MFAOptionType] -> AdminSetUserSettings

-- | Create a value of <a>AdminSetUserSettings</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userPoolId:AdminSetUserSettings'</a>,
--   <a>adminSetUserSettings_userPoolId</a> - The ID of the user pool that
--   contains the user that you are setting options for.
--   
--   <a>$sel:username:AdminSetUserSettings'</a>,
--   <a>adminSetUserSettings_username</a> - The user name of the user that
--   you are setting options for.
--   
--   <a>$sel:mfaOptions:AdminSetUserSettings'</a>,
--   <a>adminSetUserSettings_mfaOptions</a> - You can use this parameter
--   only to set an SMS configuration that uses SMS for delivery.
newAdminSetUserSettings :: Text -> Text -> AdminSetUserSettings

-- | Represents the response from the server to set user settings as an
--   administrator.
--   
--   <i>See:</i> <a>newAdminSetUserSettingsResponse</a> smart constructor.
data AdminSetUserSettingsResponse
AdminSetUserSettingsResponse' :: Int -> AdminSetUserSettingsResponse

-- | Create a value of <a>AdminSetUserSettingsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:AdminSetUserSettingsResponse'</a>,
--   <a>adminSetUserSettingsResponse_httpStatus</a> - The response's http
--   status code.
newAdminSetUserSettingsResponse :: Int -> AdminSetUserSettingsResponse

-- | Represents the request to list the devices.
--   
--   <i>See:</i> <a>newListDevices</a> smart constructor.
data ListDevices
ListDevices' :: Maybe Text -> Maybe Natural -> Sensitive Text -> ListDevices

-- | Create a value of <a>ListDevices</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:paginationToken:ListDevices'</a>,
--   <a>listDevices_paginationToken</a> - The pagination token for the list
--   request.
--   
--   <a>$sel:limit:ListDevices'</a>, <a>listDevices_limit</a> - The limit
--   of the device request.
--   
--   <a>$sel:accessToken:ListDevices'</a>, <a>listDevices_accessToken</a> -
--   The access tokens for the request to list devices.
newListDevices :: Text -> ListDevices

-- | Represents the response to list devices.
--   
--   <i>See:</i> <a>newListDevicesResponse</a> smart constructor.
data ListDevicesResponse
ListDevicesResponse' :: Maybe Text -> Maybe [DeviceType] -> Int -> ListDevicesResponse

-- | Create a value of <a>ListDevicesResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:paginationToken:ListDevices'</a>,
--   <a>listDevicesResponse_paginationToken</a> - The pagination token for
--   the list device response.
--   
--   <a>$sel:devices:ListDevicesResponse'</a>,
--   <a>listDevicesResponse_devices</a> - The devices returned in the list
--   devices response.
--   
--   <a>$sel:httpStatus:ListDevicesResponse'</a>,
--   <a>listDevicesResponse_httpStatus</a> - The response's http status
--   code.
newListDevicesResponse :: Int -> ListDevicesResponse
newtype AccountTakeoverEventActionType
AccountTakeoverEventActionType' :: Text -> AccountTakeoverEventActionType
[fromAccountTakeoverEventActionType] :: AccountTakeoverEventActionType -> Text
pattern AccountTakeoverEventActionType_BLOCK :: AccountTakeoverEventActionType
pattern AccountTakeoverEventActionType_MFA_IF_CONFIGURED :: AccountTakeoverEventActionType
pattern AccountTakeoverEventActionType_MFA_REQUIRED :: AccountTakeoverEventActionType
pattern AccountTakeoverEventActionType_NO_ACTION :: AccountTakeoverEventActionType
newtype AdvancedSecurityModeType
AdvancedSecurityModeType' :: Text -> AdvancedSecurityModeType
[fromAdvancedSecurityModeType] :: AdvancedSecurityModeType -> Text
pattern AdvancedSecurityModeType_AUDIT :: AdvancedSecurityModeType
pattern AdvancedSecurityModeType_ENFORCED :: AdvancedSecurityModeType
pattern AdvancedSecurityModeType_OFF :: AdvancedSecurityModeType
newtype AliasAttributeType
AliasAttributeType' :: Text -> AliasAttributeType
[fromAliasAttributeType] :: AliasAttributeType -> Text
pattern AliasAttributeType_Email :: AliasAttributeType
pattern AliasAttributeType_Phone_number :: AliasAttributeType
pattern AliasAttributeType_Preferred_username :: AliasAttributeType
newtype AttributeDataType
AttributeDataType' :: Text -> AttributeDataType
[fromAttributeDataType] :: AttributeDataType -> Text
pattern AttributeDataType_Boolean :: AttributeDataType
pattern AttributeDataType_DateTime :: AttributeDataType
pattern AttributeDataType_Number :: AttributeDataType
pattern AttributeDataType_String :: AttributeDataType
newtype AuthFlowType
AuthFlowType' :: Text -> AuthFlowType
[fromAuthFlowType] :: AuthFlowType -> Text
pattern AuthFlowType_ADMIN_NO_SRP_AUTH :: AuthFlowType
pattern AuthFlowType_ADMIN_USER_PASSWORD_AUTH :: AuthFlowType
pattern AuthFlowType_CUSTOM_AUTH :: AuthFlowType
pattern AuthFlowType_REFRESH_TOKEN :: AuthFlowType
pattern AuthFlowType_REFRESH_TOKEN_AUTH :: AuthFlowType
pattern AuthFlowType_USER_PASSWORD_AUTH :: AuthFlowType
pattern AuthFlowType_USER_SRP_AUTH :: AuthFlowType
newtype ChallengeName
ChallengeName' :: Text -> ChallengeName
[fromChallengeName] :: ChallengeName -> Text
pattern ChallengeName_Mfa :: ChallengeName
pattern ChallengeName_Password :: ChallengeName
newtype ChallengeNameType
ChallengeNameType' :: Text -> ChallengeNameType
[fromChallengeNameType] :: ChallengeNameType -> Text
pattern ChallengeNameType_ADMIN_NO_SRP_AUTH :: ChallengeNameType
pattern ChallengeNameType_CUSTOM_CHALLENGE :: ChallengeNameType
pattern ChallengeNameType_DEVICE_PASSWORD_VERIFIER :: ChallengeNameType
pattern ChallengeNameType_DEVICE_SRP_AUTH :: ChallengeNameType
pattern ChallengeNameType_MFA_SETUP :: ChallengeNameType
pattern ChallengeNameType_NEW_PASSWORD_REQUIRED :: ChallengeNameType
pattern ChallengeNameType_PASSWORD_VERIFIER :: ChallengeNameType
pattern ChallengeNameType_SELECT_MFA_TYPE :: ChallengeNameType
pattern ChallengeNameType_SMS_MFA :: ChallengeNameType
pattern ChallengeNameType_SOFTWARE_TOKEN_MFA :: ChallengeNameType
newtype ChallengeResponse
ChallengeResponse' :: Text -> ChallengeResponse
[fromChallengeResponse] :: ChallengeResponse -> Text
pattern ChallengeResponse_Failure :: ChallengeResponse
pattern ChallengeResponse_Success :: ChallengeResponse
newtype CompromisedCredentialsEventActionType
CompromisedCredentialsEventActionType' :: Text -> CompromisedCredentialsEventActionType
[fromCompromisedCredentialsEventActionType] :: CompromisedCredentialsEventActionType -> Text
pattern CompromisedCredentialsEventActionType_BLOCK :: CompromisedCredentialsEventActionType
pattern CompromisedCredentialsEventActionType_NO_ACTION :: CompromisedCredentialsEventActionType
newtype CustomEmailSenderLambdaVersionType
CustomEmailSenderLambdaVersionType' :: Text -> CustomEmailSenderLambdaVersionType
[fromCustomEmailSenderLambdaVersionType] :: CustomEmailSenderLambdaVersionType -> Text
pattern CustomEmailSenderLambdaVersionType_V1_0 :: CustomEmailSenderLambdaVersionType
newtype CustomSMSSenderLambdaVersionType
CustomSMSSenderLambdaVersionType' :: Text -> CustomSMSSenderLambdaVersionType
[fromCustomSMSSenderLambdaVersionType] :: CustomSMSSenderLambdaVersionType -> Text
pattern CustomSMSSenderLambdaVersionType_V1_0 :: CustomSMSSenderLambdaVersionType
newtype DefaultEmailOptionType
DefaultEmailOptionType' :: Text -> DefaultEmailOptionType
[fromDefaultEmailOptionType] :: DefaultEmailOptionType -> Text
pattern DefaultEmailOptionType_CONFIRM_WITH_CODE :: DefaultEmailOptionType
pattern DefaultEmailOptionType_CONFIRM_WITH_LINK :: DefaultEmailOptionType
newtype DeliveryMediumType
DeliveryMediumType' :: Text -> DeliveryMediumType
[fromDeliveryMediumType] :: DeliveryMediumType -> Text
pattern DeliveryMediumType_EMAIL :: DeliveryMediumType
pattern DeliveryMediumType_SMS :: DeliveryMediumType
newtype DeviceRememberedStatusType
DeviceRememberedStatusType' :: Text -> DeviceRememberedStatusType
[fromDeviceRememberedStatusType] :: DeviceRememberedStatusType -> Text
pattern DeviceRememberedStatusType_Not_remembered :: DeviceRememberedStatusType
pattern DeviceRememberedStatusType_Remembered :: DeviceRememberedStatusType
newtype DomainStatusType
DomainStatusType' :: Text -> DomainStatusType
[fromDomainStatusType] :: DomainStatusType -> Text
pattern DomainStatusType_ACTIVE :: DomainStatusType
pattern DomainStatusType_CREATING :: DomainStatusType
pattern DomainStatusType_DELETING :: DomainStatusType
pattern DomainStatusType_FAILED :: DomainStatusType
pattern DomainStatusType_UPDATING :: DomainStatusType
newtype EmailSendingAccountType
EmailSendingAccountType' :: Text -> EmailSendingAccountType
[fromEmailSendingAccountType] :: EmailSendingAccountType -> Text
pattern EmailSendingAccountType_COGNITO_DEFAULT :: EmailSendingAccountType
pattern EmailSendingAccountType_DEVELOPER :: EmailSendingAccountType
newtype EventFilterType
EventFilterType' :: Text -> EventFilterType
[fromEventFilterType] :: EventFilterType -> Text
pattern EventFilterType_PASSWORD_CHANGE :: EventFilterType
pattern EventFilterType_SIGN_IN :: EventFilterType
pattern EventFilterType_SIGN_UP :: EventFilterType
newtype EventResponseType
EventResponseType' :: Text -> EventResponseType
[fromEventResponseType] :: EventResponseType -> Text
pattern EventResponseType_Failure :: EventResponseType
pattern EventResponseType_Success :: EventResponseType
newtype EventType
EventType' :: Text -> EventType
[fromEventType] :: EventType -> Text
pattern EventType_ForgotPassword :: EventType
pattern EventType_SignIn :: EventType
pattern EventType_SignUp :: EventType
newtype ExplicitAuthFlowsType
ExplicitAuthFlowsType' :: Text -> ExplicitAuthFlowsType
[fromExplicitAuthFlowsType] :: ExplicitAuthFlowsType -> Text
pattern ExplicitAuthFlowsType_ADMIN_NO_SRP_AUTH :: ExplicitAuthFlowsType
pattern ExplicitAuthFlowsType_ALLOW_ADMIN_USER_PASSWORD_AUTH :: ExplicitAuthFlowsType
pattern ExplicitAuthFlowsType_ALLOW_CUSTOM_AUTH :: ExplicitAuthFlowsType
pattern ExplicitAuthFlowsType_ALLOW_REFRESH_TOKEN_AUTH :: ExplicitAuthFlowsType
pattern ExplicitAuthFlowsType_ALLOW_USER_PASSWORD_AUTH :: ExplicitAuthFlowsType
pattern ExplicitAuthFlowsType_ALLOW_USER_SRP_AUTH :: ExplicitAuthFlowsType
pattern ExplicitAuthFlowsType_CUSTOM_AUTH_FLOW_ONLY :: ExplicitAuthFlowsType
pattern ExplicitAuthFlowsType_USER_PASSWORD_AUTH :: ExplicitAuthFlowsType
newtype FeedbackValueType
FeedbackValueType' :: Text -> FeedbackValueType
[fromFeedbackValueType] :: FeedbackValueType -> Text
pattern FeedbackValueType_Invalid :: FeedbackValueType
pattern FeedbackValueType_Valid :: FeedbackValueType
newtype IdentityProviderTypeType
IdentityProviderTypeType' :: Text -> IdentityProviderTypeType
[fromIdentityProviderTypeType] :: IdentityProviderTypeType -> Text
pattern IdentityProviderTypeType_Facebook :: IdentityProviderTypeType
pattern IdentityProviderTypeType_Google :: IdentityProviderTypeType
pattern IdentityProviderTypeType_LoginWithAmazon :: IdentityProviderTypeType
pattern IdentityProviderTypeType_OIDC :: IdentityProviderTypeType
pattern IdentityProviderTypeType_SAML :: IdentityProviderTypeType
pattern IdentityProviderTypeType_SignInWithApple :: IdentityProviderTypeType
newtype MessageActionType
MessageActionType' :: Text -> MessageActionType
[fromMessageActionType] :: MessageActionType -> Text
pattern MessageActionType_RESEND :: MessageActionType
pattern MessageActionType_SUPPRESS :: MessageActionType
newtype OAuthFlowType
OAuthFlowType' :: Text -> OAuthFlowType
[fromOAuthFlowType] :: OAuthFlowType -> Text
pattern OAuthFlowType_Client_credentials :: OAuthFlowType
pattern OAuthFlowType_Code :: OAuthFlowType
pattern OAuthFlowType_Implicit :: OAuthFlowType
newtype PreventUserExistenceErrorTypes
PreventUserExistenceErrorTypes' :: Text -> PreventUserExistenceErrorTypes
[fromPreventUserExistenceErrorTypes] :: PreventUserExistenceErrorTypes -> Text
pattern PreventUserExistenceErrorTypes_ENABLED :: PreventUserExistenceErrorTypes
pattern PreventUserExistenceErrorTypes_LEGACY :: PreventUserExistenceErrorTypes
newtype RecoveryOptionNameType
RecoveryOptionNameType' :: Text -> RecoveryOptionNameType
[fromRecoveryOptionNameType] :: RecoveryOptionNameType -> Text
pattern RecoveryOptionNameType_Admin_only :: RecoveryOptionNameType
pattern RecoveryOptionNameType_Verified_email :: RecoveryOptionNameType
pattern RecoveryOptionNameType_Verified_phone_number :: RecoveryOptionNameType
newtype RiskDecisionType
RiskDecisionType' :: Text -> RiskDecisionType
[fromRiskDecisionType] :: RiskDecisionType -> Text
pattern RiskDecisionType_AccountTakeover :: RiskDecisionType
pattern RiskDecisionType_Block :: RiskDecisionType
pattern RiskDecisionType_NoRisk :: RiskDecisionType
newtype RiskLevelType
RiskLevelType' :: Text -> RiskLevelType
[fromRiskLevelType] :: RiskLevelType -> Text
pattern RiskLevelType_High :: RiskLevelType
pattern RiskLevelType_Low :: RiskLevelType
pattern RiskLevelType_Medium :: RiskLevelType
newtype StatusType
StatusType' :: Text -> StatusType
[fromStatusType] :: StatusType -> Text
pattern StatusType_Disabled :: StatusType
pattern StatusType_Enabled :: StatusType
newtype TimeUnitsType
TimeUnitsType' :: Text -> TimeUnitsType
[fromTimeUnitsType] :: TimeUnitsType -> Text
pattern TimeUnitsType_Days :: TimeUnitsType
pattern TimeUnitsType_Hours :: TimeUnitsType
pattern TimeUnitsType_Minutes :: TimeUnitsType
pattern TimeUnitsType_Seconds :: TimeUnitsType
newtype UserImportJobStatusType
UserImportJobStatusType' :: Text -> UserImportJobStatusType
[fromUserImportJobStatusType] :: UserImportJobStatusType -> Text
pattern UserImportJobStatusType_Created :: UserImportJobStatusType
pattern UserImportJobStatusType_Expired :: UserImportJobStatusType
pattern UserImportJobStatusType_Failed :: UserImportJobStatusType
pattern UserImportJobStatusType_InProgress :: UserImportJobStatusType
pattern UserImportJobStatusType_Pending :: UserImportJobStatusType
pattern UserImportJobStatusType_Stopped :: UserImportJobStatusType
pattern UserImportJobStatusType_Stopping :: UserImportJobStatusType
pattern UserImportJobStatusType_Succeeded :: UserImportJobStatusType
newtype UserPoolMfaType
UserPoolMfaType' :: Text -> UserPoolMfaType
[fromUserPoolMfaType] :: UserPoolMfaType -> Text
pattern UserPoolMfaType_OFF :: UserPoolMfaType
pattern UserPoolMfaType_ON :: UserPoolMfaType
pattern UserPoolMfaType_OPTIONAL :: UserPoolMfaType
newtype UserStatusType
UserStatusType' :: Text -> UserStatusType
[fromUserStatusType] :: UserStatusType -> Text
pattern UserStatusType_ARCHIVED :: UserStatusType
pattern UserStatusType_COMPROMISED :: UserStatusType
pattern UserStatusType_CONFIRMED :: UserStatusType
pattern UserStatusType_FORCE_CHANGE_PASSWORD :: UserStatusType
pattern UserStatusType_RESET_REQUIRED :: UserStatusType
pattern UserStatusType_UNCONFIRMED :: UserStatusType
pattern UserStatusType_UNKNOWN :: UserStatusType
newtype UsernameAttributeType
UsernameAttributeType' :: Text -> UsernameAttributeType
[fromUsernameAttributeType] :: UsernameAttributeType -> Text
pattern UsernameAttributeType_Email :: UsernameAttributeType
pattern UsernameAttributeType_Phone_number :: UsernameAttributeType
newtype VerifiedAttributeType
VerifiedAttributeType' :: Text -> VerifiedAttributeType
[fromVerifiedAttributeType] :: VerifiedAttributeType -> Text
pattern VerifiedAttributeType_Email :: VerifiedAttributeType
pattern VerifiedAttributeType_Phone_number :: VerifiedAttributeType
newtype VerifySoftwareTokenResponseType
VerifySoftwareTokenResponseType' :: Text -> VerifySoftwareTokenResponseType
[fromVerifySoftwareTokenResponseType] :: VerifySoftwareTokenResponseType -> Text
pattern VerifySoftwareTokenResponseType_ERROR :: VerifySoftwareTokenResponseType
pattern VerifySoftwareTokenResponseType_SUCCESS :: VerifySoftwareTokenResponseType

-- | The data type for <tt>AccountRecoverySetting</tt>.
--   
--   <i>See:</i> <a>newAccountRecoverySettingType</a> smart constructor.
data AccountRecoverySettingType
AccountRecoverySettingType' :: Maybe (NonEmpty RecoveryOptionType) -> AccountRecoverySettingType

-- | Create a value of <a>AccountRecoverySettingType</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:recoveryMechanisms:AccountRecoverySettingType'</a>,
--   <a>accountRecoverySettingType_recoveryMechanisms</a> - The list of
--   <tt>RecoveryOptionTypes</tt>.
newAccountRecoverySettingType :: AccountRecoverySettingType

-- | Account takeover action type.
--   
--   <i>See:</i> <a>newAccountTakeoverActionType</a> smart constructor.
data AccountTakeoverActionType
AccountTakeoverActionType' :: Bool -> AccountTakeoverEventActionType -> AccountTakeoverActionType

-- | Create a value of <a>AccountTakeoverActionType</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:notify:AccountTakeoverActionType'</a>,
--   <a>accountTakeoverActionType_notify</a> - Flag specifying whether to
--   send a notification.
--   
--   <a>$sel:eventAction:AccountTakeoverActionType'</a>,
--   <a>accountTakeoverActionType_eventAction</a> - The event action.
--   
--   <ul>
--   <li><tt>BLOCK</tt> Choosing this action will block the request.</li>
--   <li><tt>MFA_IF_CONFIGURED</tt> Throw MFA challenge if user has
--   configured it, else allow the request.</li>
--   <li><tt>MFA_REQUIRED</tt> Throw MFA challenge if user has configured
--   it, else block the request.</li>
--   <li><tt>NO_ACTION</tt> Allow the user sign-in.</li>
--   </ul>
newAccountTakeoverActionType :: Bool -> AccountTakeoverEventActionType -> AccountTakeoverActionType

-- | Account takeover actions type.
--   
--   <i>See:</i> <a>newAccountTakeoverActionsType</a> smart constructor.
data AccountTakeoverActionsType
AccountTakeoverActionsType' :: Maybe AccountTakeoverActionType -> Maybe AccountTakeoverActionType -> Maybe AccountTakeoverActionType -> AccountTakeoverActionsType

-- | Create a value of <a>AccountTakeoverActionsType</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lowAction:AccountTakeoverActionsType'</a>,
--   <a>accountTakeoverActionsType_lowAction</a> - Action to take for a low
--   risk.
--   
--   <a>$sel:highAction:AccountTakeoverActionsType'</a>,
--   <a>accountTakeoverActionsType_highAction</a> - Action to take for a
--   high risk.
--   
--   <a>$sel:mediumAction:AccountTakeoverActionsType'</a>,
--   <a>accountTakeoverActionsType_mediumAction</a> - Action to take for a
--   medium risk.
newAccountTakeoverActionsType :: AccountTakeoverActionsType

-- | Configuration for mitigation actions and notification for different
--   levels of risk detected for a potential account takeover.
--   
--   <i>See:</i> <a>newAccountTakeoverRiskConfigurationType</a> smart
--   constructor.
data AccountTakeoverRiskConfigurationType
AccountTakeoverRiskConfigurationType' :: Maybe NotifyConfigurationType -> AccountTakeoverActionsType -> AccountTakeoverRiskConfigurationType

-- | Create a value of <a>AccountTakeoverRiskConfigurationType</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:notifyConfiguration:AccountTakeoverRiskConfigurationType'</a>,
--   <a>accountTakeoverRiskConfigurationType_notifyConfiguration</a> - The
--   notify configuration used to construct email notifications.
--   
--   <a>$sel:actions:AccountTakeoverRiskConfigurationType'</a>,
--   <a>accountTakeoverRiskConfigurationType_actions</a> - Account takeover
--   risk configuration actions
newAccountTakeoverRiskConfigurationType :: AccountTakeoverActionsType -> AccountTakeoverRiskConfigurationType

-- | The configuration for creating a new user profile.
--   
--   <i>See:</i> <a>newAdminCreateUserConfigType</a> smart constructor.
data AdminCreateUserConfigType
AdminCreateUserConfigType' :: Maybe Bool -> Maybe Natural -> Maybe MessageTemplateType -> AdminCreateUserConfigType

-- | Create a value of <a>AdminCreateUserConfigType</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:allowAdminCreateUserOnly:AdminCreateUserConfigType'</a>,
--   <a>adminCreateUserConfigType_allowAdminCreateUserOnly</a> - Set to
--   <tt>True</tt> if only the administrator is allowed to create user
--   profiles. Set to <tt>False</tt> if users can sign themselves up via an
--   app.
--   
--   <a>$sel:unusedAccountValidityDays:AdminCreateUserConfigType'</a>,
--   <a>adminCreateUserConfigType_unusedAccountValidityDays</a> - The user
--   account expiration limit, in days, after which the account is no
--   longer usable. To reset the account after that time limit, you must
--   call <tt>AdminCreateUser</tt> again, specifying <tt>"RESEND"</tt> for
--   the <tt>MessageAction</tt> parameter. The default value for this
--   parameter is 7.
--   
--   If you set a value for <tt>TemporaryPasswordValidityDays</tt> in
--   <tt>PasswordPolicy</tt>, that value will be used and
--   <tt>UnusedAccountValidityDays</tt> will be deprecated for that user
--   pool.
--   
--   <a>$sel:inviteMessageTemplate:AdminCreateUserConfigType'</a>,
--   <a>adminCreateUserConfigType_inviteMessageTemplate</a> - The message
--   template to be used for the welcome message to new users.
--   
--   See also <a>Customizing User Invitation Messages</a>.
newAdminCreateUserConfigType :: AdminCreateUserConfigType

-- | The Amazon Pinpoint analytics configuration for collecting metrics for
--   a user pool.
--   
--   In regions where Pinpoint is not available, Cognito User Pools only
--   supports sending events to Amazon Pinpoint projects in us-east-1. In
--   regions where Pinpoint is available, Cognito User Pools will support
--   sending events to Amazon Pinpoint projects within that same region.
--   
--   <i>See:</i> <a>newAnalyticsConfigurationType</a> smart constructor.
data AnalyticsConfigurationType
AnalyticsConfigurationType' :: Maybe Text -> Maybe Bool -> Maybe Text -> Maybe Text -> Maybe Text -> AnalyticsConfigurationType

-- | Create a value of <a>AnalyticsConfigurationType</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:applicationArn:AnalyticsConfigurationType'</a>,
--   <a>analyticsConfigurationType_applicationArn</a> - The Amazon Resource
--   Name (ARN) of an Amazon Pinpoint project. You can use the Amazon
--   Pinpoint project for Pinpoint integration with the chosen User Pool
--   Client. Amazon Cognito publishes events to the pinpoint project
--   declared by the app ARN.
--   
--   <a>$sel:userDataShared:AnalyticsConfigurationType'</a>,
--   <a>analyticsConfigurationType_userDataShared</a> - If
--   <tt>UserDataShared</tt> is <tt>true</tt>, Amazon Cognito will include
--   user data in the events it publishes to Amazon Pinpoint analytics.
--   
--   <a>$sel:applicationId:AnalyticsConfigurationType'</a>,
--   <a>analyticsConfigurationType_applicationId</a> - The application ID
--   for an Amazon Pinpoint application.
--   
--   <a>$sel:externalId:AnalyticsConfigurationType'</a>,
--   <a>analyticsConfigurationType_externalId</a> - The external ID.
--   
--   <a>$sel:roleArn:AnalyticsConfigurationType'</a>,
--   <a>analyticsConfigurationType_roleArn</a> - The ARN of an IAM role
--   that authorizes Amazon Cognito to publish events to Amazon Pinpoint
--   analytics.
newAnalyticsConfigurationType :: AnalyticsConfigurationType

-- | An Amazon Pinpoint analytics endpoint.
--   
--   An endpoint uniquely identifies a mobile device, email address, or
--   phone number that can receive messages from Amazon Pinpoint analytics.
--   
--   Cognito User Pools only supports sending events to Amazon Pinpoint
--   projects in the US East (N. Virginia) us-east-1 Region, regardless of
--   the region in which the user pool resides.
--   
--   <i>See:</i> <a>newAnalyticsMetadataType</a> smart constructor.
data AnalyticsMetadataType
AnalyticsMetadataType' :: Maybe Text -> AnalyticsMetadataType

-- | Create a value of <a>AnalyticsMetadataType</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:analyticsEndpointId:AnalyticsMetadataType'</a>,
--   <a>analyticsMetadataType_analyticsEndpointId</a> - The endpoint ID.
newAnalyticsMetadataType :: AnalyticsMetadataType

-- | Specifies whether the attribute is standard or custom.
--   
--   <i>See:</i> <a>newAttributeType</a> smart constructor.
data AttributeType
AttributeType' :: Maybe (Sensitive Text) -> Text -> AttributeType

-- | Create a value of <a>AttributeType</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:value:AttributeType'</a>, <a>attributeType_value</a> - The
--   value of the attribute.
--   
--   <a>$sel:name:AttributeType'</a>, <a>attributeType_name</a> - The name
--   of the attribute.
newAttributeType :: Text -> AttributeType

-- | The authentication event type.
--   
--   <i>See:</i> <a>newAuthEventType</a> smart constructor.
data AuthEventType
AuthEventType' :: Maybe EventRiskType -> Maybe EventResponseType -> Maybe EventContextDataType -> Maybe [ChallengeResponseType] -> Maybe EventType -> Maybe POSIX -> Maybe EventFeedbackType -> Maybe Text -> AuthEventType

-- | Create a value of <a>AuthEventType</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:eventRisk:AuthEventType'</a>, <a>authEventType_eventRisk</a> -
--   The event risk.
--   
--   <a>$sel:eventResponse:AuthEventType'</a>,
--   <a>authEventType_eventResponse</a> - The event response.
--   
--   <a>$sel:eventContextData:AuthEventType'</a>,
--   <a>authEventType_eventContextData</a> - The user context data captured
--   at the time of an event request. It provides additional information
--   about the client from which event the request is received.
--   
--   <a>$sel:challengeResponses:AuthEventType'</a>,
--   <a>authEventType_challengeResponses</a> - The challenge responses.
--   
--   <a>$sel:eventType:AuthEventType'</a>, <a>authEventType_eventType</a> -
--   The event type.
--   
--   <a>$sel:creationDate:AuthEventType'</a>,
--   <a>authEventType_creationDate</a> - The creation date
--   
--   <a>$sel:eventFeedback:AuthEventType'</a>,
--   <a>authEventType_eventFeedback</a> - A flag specifying the user
--   feedback captured at the time of an event request is good or bad.
--   
--   <a>$sel:eventId:AuthEventType'</a>, <a>authEventType_eventId</a> - The
--   event ID.
newAuthEventType :: AuthEventType

-- | The authentication result.
--   
--   <i>See:</i> <a>newAuthenticationResultType</a> smart constructor.
data AuthenticationResultType
AuthenticationResultType' :: Maybe (Sensitive Text) -> Maybe (Sensitive Text) -> Maybe NewDeviceMetadataType -> Maybe Int -> Maybe Text -> Maybe (Sensitive Text) -> AuthenticationResultType

-- | Create a value of <a>AuthenticationResultType</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:accessToken:AuthenticationResultType'</a>,
--   <a>authenticationResultType_accessToken</a> - The access token.
--   
--   <a>$sel:refreshToken:AuthenticationResultType'</a>,
--   <a>authenticationResultType_refreshToken</a> - The refresh token.
--   
--   <a>$sel:newDeviceMetadata':AuthenticationResultType'</a>,
--   <a>authenticationResultType_newDeviceMetadata</a> - The new device
--   metadata from an authentication result.
--   
--   <a>$sel:expiresIn:AuthenticationResultType'</a>,
--   <a>authenticationResultType_expiresIn</a> - The expiration period of
--   the authentication result in seconds.
--   
--   <a>$sel:tokenType:AuthenticationResultType'</a>,
--   <a>authenticationResultType_tokenType</a> - The token type.
--   
--   <a>$sel:idToken:AuthenticationResultType'</a>,
--   <a>authenticationResultType_idToken</a> - The ID token.
newAuthenticationResultType :: AuthenticationResultType

-- | The challenge response type.
--   
--   <i>See:</i> <a>newChallengeResponseType</a> smart constructor.
data ChallengeResponseType
ChallengeResponseType' :: Maybe ChallengeName -> Maybe ChallengeResponse -> ChallengeResponseType

-- | Create a value of <a>ChallengeResponseType</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:challengeName:ChallengeResponseType'</a>,
--   <a>challengeResponseType_challengeName</a> - The challenge name
--   
--   <a>$sel:challengeResponse:ChallengeResponseType'</a>,
--   <a>challengeResponseType_challengeResponse</a> - The challenge
--   response.
newChallengeResponseType :: ChallengeResponseType

-- | The code delivery details being returned from the server.
--   
--   <i>See:</i> <a>newCodeDeliveryDetailsType</a> smart constructor.
data CodeDeliveryDetailsType
CodeDeliveryDetailsType' :: Maybe Text -> Maybe DeliveryMediumType -> Maybe Text -> CodeDeliveryDetailsType

-- | Create a value of <a>CodeDeliveryDetailsType</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:destination:CodeDeliveryDetailsType'</a>,
--   <a>codeDeliveryDetailsType_destination</a> - The destination for the
--   code delivery details.
--   
--   <a>$sel:deliveryMedium:CodeDeliveryDetailsType'</a>,
--   <a>codeDeliveryDetailsType_deliveryMedium</a> - The delivery medium
--   (email message or phone number).
--   
--   <a>$sel:attributeName:CodeDeliveryDetailsType'</a>,
--   <a>codeDeliveryDetailsType_attributeName</a> - The attribute name.
newCodeDeliveryDetailsType :: CodeDeliveryDetailsType

-- | The compromised credentials actions type
--   
--   <i>See:</i> <a>newCompromisedCredentialsActionsType</a> smart
--   constructor.
data CompromisedCredentialsActionsType
CompromisedCredentialsActionsType' :: CompromisedCredentialsEventActionType -> CompromisedCredentialsActionsType

-- | Create a value of <a>CompromisedCredentialsActionsType</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:eventAction:CompromisedCredentialsActionsType'</a>,
--   <a>compromisedCredentialsActionsType_eventAction</a> - The event
--   action.
newCompromisedCredentialsActionsType :: CompromisedCredentialsEventActionType -> CompromisedCredentialsActionsType

-- | The compromised credentials risk configuration type.
--   
--   <i>See:</i> <a>newCompromisedCredentialsRiskConfigurationType</a>
--   smart constructor.
data CompromisedCredentialsRiskConfigurationType
CompromisedCredentialsRiskConfigurationType' :: Maybe [EventFilterType] -> CompromisedCredentialsActionsType -> CompromisedCredentialsRiskConfigurationType

-- | Create a value of <a>CompromisedCredentialsRiskConfigurationType</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:eventFilter:CompromisedCredentialsRiskConfigurationType'</a>,
--   <a>compromisedCredentialsRiskConfigurationType_eventFilter</a> -
--   Perform the action for these events. The default is to perform all
--   events if no event filter is specified.
--   
--   <a>$sel:actions:CompromisedCredentialsRiskConfigurationType'</a>,
--   <a>compromisedCredentialsRiskConfigurationType_actions</a> - The
--   compromised credentials risk configuration actions.
newCompromisedCredentialsRiskConfigurationType :: CompromisedCredentialsActionsType -> CompromisedCredentialsRiskConfigurationType

-- | Contextual user data type used for evaluating the risk of an
--   unexpected event by Amazon Cognito advanced security.
--   
--   <i>See:</i> <a>newContextDataType</a> smart constructor.
data ContextDataType
ContextDataType' :: Maybe Text -> Text -> Text -> Text -> [HttpHeader] -> ContextDataType

-- | Create a value of <a>ContextDataType</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:encodedData:ContextDataType'</a>,
--   <a>contextDataType_encodedData</a> - Encoded data containing device
--   fingerprinting details, collected using the Amazon Cognito context
--   data collection library.
--   
--   <a>$sel:ipAddress:ContextDataType'</a>,
--   <a>contextDataType_ipAddress</a> - Source IP address of your user.
--   
--   <a>$sel:serverName:ContextDataType'</a>,
--   <a>contextDataType_serverName</a> - Your server endpoint where this
--   API is invoked.
--   
--   <a>$sel:serverPath:ContextDataType'</a>,
--   <a>contextDataType_serverPath</a> - Your server path where this API is
--   invoked.
--   
--   <a>$sel:httpHeaders:ContextDataType'</a>,
--   <a>contextDataType_httpHeaders</a> - HttpHeaders received on your
--   server in same order.
newContextDataType :: Text -> Text -> Text -> ContextDataType

-- | The configuration for a custom domain that hosts the sign-up and
--   sign-in webpages for your application.
--   
--   <i>See:</i> <a>newCustomDomainConfigType</a> smart constructor.
data CustomDomainConfigType
CustomDomainConfigType' :: Text -> CustomDomainConfigType

-- | Create a value of <a>CustomDomainConfigType</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:certificateArn:CustomDomainConfigType'</a>,
--   <a>customDomainConfigType_certificateArn</a> - The Amazon Resource
--   Name (ARN) of an Certificate Manager SSL certificate. You use this
--   certificate for the subdomain of your custom domain.
newCustomDomainConfigType :: Text -> CustomDomainConfigType

-- | A custom email sender Lambda configuration type.
--   
--   <i>See:</i> <a>newCustomEmailLambdaVersionConfigType</a> smart
--   constructor.
data CustomEmailLambdaVersionConfigType
CustomEmailLambdaVersionConfigType' :: CustomEmailSenderLambdaVersionType -> Text -> CustomEmailLambdaVersionConfigType

-- | Create a value of <a>CustomEmailLambdaVersionConfigType</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lambdaVersion:CustomEmailLambdaVersionConfigType'</a>,
--   <a>customEmailLambdaVersionConfigType_lambdaVersion</a> - The Lambda
--   version represents the signature of the "request" attribute in the
--   "event" information Amazon Cognito passes to your custom email Lambda
--   function. The only supported value is <tt>V1_0</tt>.
--   
--   <a>$sel:lambdaArn:CustomEmailLambdaVersionConfigType'</a>,
--   <a>customEmailLambdaVersionConfigType_lambdaArn</a> - The Lambda
--   Amazon Resource Name of the Lambda function that Amazon Cognito
--   triggers to send email notifications to users.
newCustomEmailLambdaVersionConfigType :: CustomEmailSenderLambdaVersionType -> Text -> CustomEmailLambdaVersionConfigType

-- | A custom SMS sender Lambda configuration type.
--   
--   <i>See:</i> <a>newCustomSMSLambdaVersionConfigType</a> smart
--   constructor.
data CustomSMSLambdaVersionConfigType
CustomSMSLambdaVersionConfigType' :: CustomSMSSenderLambdaVersionType -> Text -> CustomSMSLambdaVersionConfigType

-- | Create a value of <a>CustomSMSLambdaVersionConfigType</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lambdaVersion:CustomSMSLambdaVersionConfigType'</a>,
--   <a>customSMSLambdaVersionConfigType_lambdaVersion</a> - The Lambda
--   version represents the signature of the "request" attribute in the
--   "event" information Amazon Cognito passes to your custom SMS Lambda
--   function. The only supported value is <tt>V1_0</tt>.
--   
--   <a>$sel:lambdaArn:CustomSMSLambdaVersionConfigType'</a>,
--   <a>customSMSLambdaVersionConfigType_lambdaArn</a> - The Lambda Amazon
--   Resource Name of the Lambda function that Amazon Cognito triggers to
--   send SMS notifications to users.
newCustomSMSLambdaVersionConfigType :: CustomSMSSenderLambdaVersionType -> Text -> CustomSMSLambdaVersionConfigType

-- | The configuration for the user pool's device tracking.
--   
--   <i>See:</i> <a>newDeviceConfigurationType</a> smart constructor.
data DeviceConfigurationType
DeviceConfigurationType' :: Maybe Bool -> Maybe Bool -> DeviceConfigurationType

-- | Create a value of <a>DeviceConfigurationType</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:challengeRequiredOnNewDevice:DeviceConfigurationType'</a>,
--   <a>deviceConfigurationType_challengeRequiredOnNewDevice</a> -
--   Indicates whether a challenge is required on a new device. Only
--   applicable to a new device.
--   
--   <a>$sel:deviceOnlyRememberedOnUserPrompt:DeviceConfigurationType'</a>,
--   <a>deviceConfigurationType_deviceOnlyRememberedOnUserPrompt</a> - If
--   true, a device is only remembered on user prompt.
newDeviceConfigurationType :: DeviceConfigurationType

-- | The device verifier against which it will be authenticated.
--   
--   <i>See:</i> <a>newDeviceSecretVerifierConfigType</a> smart
--   constructor.
data DeviceSecretVerifierConfigType
DeviceSecretVerifierConfigType' :: Maybe Text -> Maybe Text -> DeviceSecretVerifierConfigType

-- | Create a value of <a>DeviceSecretVerifierConfigType</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:passwordVerifier:DeviceSecretVerifierConfigType'</a>,
--   <a>deviceSecretVerifierConfigType_passwordVerifier</a> - The password
--   verifier.
--   
--   <a>$sel:salt:DeviceSecretVerifierConfigType'</a>,
--   <a>deviceSecretVerifierConfigType_salt</a> - The salt.
newDeviceSecretVerifierConfigType :: DeviceSecretVerifierConfigType

-- | The device type.
--   
--   <i>See:</i> <a>newDeviceType</a> smart constructor.
data DeviceType
DeviceType' :: Maybe POSIX -> Maybe POSIX -> Maybe [AttributeType] -> Maybe Text -> Maybe POSIX -> DeviceType

-- | Create a value of <a>DeviceType</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deviceLastModifiedDate:DeviceType'</a>,
--   <a>deviceType_deviceLastModifiedDate</a> - The last modified date of
--   the device.
--   
--   <a>$sel:deviceCreateDate:DeviceType'</a>,
--   <a>deviceType_deviceCreateDate</a> - The creation date of the device.
--   
--   <a>$sel:deviceAttributes:DeviceType'</a>,
--   <a>deviceType_deviceAttributes</a> - The device attributes.
--   
--   <a>$sel:deviceKey:DeviceType'</a>, <a>deviceType_deviceKey</a> - The
--   device key.
--   
--   <a>$sel:deviceLastAuthenticatedDate:DeviceType'</a>,
--   <a>deviceType_deviceLastAuthenticatedDate</a> - The date in which the
--   device was last authenticated.
newDeviceType :: DeviceType

-- | A container for information about a domain.
--   
--   <i>See:</i> <a>newDomainDescriptionType</a> smart constructor.
data DomainDescriptionType
DomainDescriptionType' :: Maybe DomainStatusType -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe CustomDomainConfigType -> Maybe Text -> Maybe Text -> DomainDescriptionType

-- | Create a value of <a>DomainDescriptionType</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:DomainDescriptionType'</a>,
--   <a>domainDescriptionType_status</a> - The domain status.
--   
--   <a>$sel:cloudFrontDistribution:DomainDescriptionType'</a>,
--   <a>domainDescriptionType_cloudFrontDistribution</a> - The ARN of the
--   CloudFront distribution.
--   
--   <a>$sel:userPoolId:DomainDescriptionType'</a>,
--   <a>domainDescriptionType_userPoolId</a> - The user pool ID.
--   
--   <a>$sel:domain:DomainDescriptionType'</a>,
--   <a>domainDescriptionType_domain</a> - The domain string.
--   
--   <a>$sel:aWSAccountId:DomainDescriptionType'</a>,
--   <a>domainDescriptionType_aWSAccountId</a> - The account ID for the
--   user pool owner.
--   
--   <a>$sel:customDomainConfig:DomainDescriptionType'</a>,
--   <a>domainDescriptionType_customDomainConfig</a> - The configuration
--   for a custom domain that hosts the sign-up and sign-in webpages for
--   your application.
--   
--   <a>$sel:version:DomainDescriptionType'</a>,
--   <a>domainDescriptionType_version</a> - The app version.
--   
--   <a>$sel:s3Bucket:DomainDescriptionType'</a>,
--   <a>domainDescriptionType_s3Bucket</a> - The S3 bucket where the static
--   files for this domain are stored.
newDomainDescriptionType :: DomainDescriptionType

-- | The email configuration type.
--   
--   Amazon Cognito has specific regions for use with Amazon SES. For more
--   information on the supported regions, see <a>Email Settings for Amazon
--   Cognito User Pools</a>.
--   
--   <i>See:</i> <a>newEmailConfigurationType</a> smart constructor.
data EmailConfigurationType
EmailConfigurationType' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe EmailSendingAccountType -> EmailConfigurationType

-- | Create a value of <a>EmailConfigurationType</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sourceArn:EmailConfigurationType'</a>,
--   <a>emailConfigurationType_sourceArn</a> - The Amazon Resource Name
--   (ARN) of a verified email address in Amazon SES. This email address is
--   used in one of the following ways, depending on the value that you
--   specify for the <tt>EmailSendingAccount</tt> parameter:
--   
--   <ul>
--   <li>If you specify <tt>COGNITO_DEFAULT</tt>, Amazon Cognito uses this
--   address as the custom FROM address when it emails your users by using
--   its built-in email account.</li>
--   <li>If you specify <tt>DEVELOPER</tt>, Amazon Cognito emails your
--   users with this address by calling Amazon SES on your behalf.</li>
--   </ul>
--   
--   <a>$sel:from:EmailConfigurationType'</a>,
--   <a>emailConfigurationType_from</a> - Identifies either the sender’s
--   email address or the sender’s name with their email address. For
--   example, <tt>testuser@example.com</tt> or <tt>Test User
--   &lt;testuser@example.com&gt;</tt>. This address will appear before the
--   body of the email.
--   
--   <a>$sel:configurationSet:EmailConfigurationType'</a>,
--   <a>emailConfigurationType_configurationSet</a> - The set of
--   configuration rules that can be applied to emails sent using Amazon
--   SES. A configuration set is applied to an email by including a
--   reference to the configuration set in the headers of the email. Once
--   applied, all of the rules in that configuration set are applied to the
--   email. Configuration sets can be used to apply the following types of
--   rules to emails:
--   
--   <ul>
--   <li>Event publishing – Amazon SES can track the number of send,
--   delivery, open, click, bounce, and complaint events for each email
--   sent. Use event publishing to send information about these events to
--   other Amazon Web Services services such as SNS and CloudWatch.</li>
--   <li>IP pool management – When leasing dedicated IP addresses with
--   Amazon SES, you can create groups of IP addresses, called dedicated IP
--   pools. You can then associate the dedicated IP pools with
--   configuration sets.</li>
--   </ul>
--   
--   <a>$sel:replyToEmailAddress:EmailConfigurationType'</a>,
--   <a>emailConfigurationType_replyToEmailAddress</a> - The destination to
--   which the receiver of the email should reply to.
--   
--   <a>$sel:emailSendingAccount:EmailConfigurationType'</a>,
--   <a>emailConfigurationType_emailSendingAccount</a> - Specifies whether
--   Amazon Cognito emails your users by using its built-in email
--   functionality or your Amazon SES email configuration. Specify one of
--   the following values:
--   
--   <ul>
--   <li><i>COGNITO_DEFAULT</i> When Amazon Cognito emails your users, it
--   uses its built-in email functionality. When you use the default
--   option, Amazon Cognito allows only a limited number of emails each day
--   for your user pool. For typical production environments, the default
--   email limit is below the required delivery volume. To achieve a higher
--   delivery volume, specify DEVELOPER to use your Amazon SES email
--   configuration.To look up the email delivery limit for the default
--   option, see <a>Limits in Amazon Cognito</a> in the <i>Amazon Cognito
--   Developer Guide</i>.The default FROM address is
--   no-reply@verificationemail.com. To customize the FROM address, provide
--   the ARN of an Amazon SES verified email address for the
--   <tt>SourceArn</tt> parameter.If EmailSendingAccount is
--   COGNITO_DEFAULT, the following parameters aren't
--   allowed:<ul><li>EmailVerificationMessage</li><li>EmailVerificationSubject</li><li>InviteMessageTemplate.EmailMessage</li><li>InviteMessageTemplate.EmailSubject</li><li>VerificationMessageTemplate.EmailMessage</li><li>VerificationMessageTemplate.EmailMessageByLink</li><li>VerificationMessageTemplate.EmailSubject,</li><li>VerificationMessageTemplate.EmailSubjectByLink</li></ul>DEVELOPER
--   EmailSendingAccount is required.</li>
--   <li><i>DEVELOPER</i> When Amazon Cognito emails your users, it uses
--   your Amazon SES configuration. Amazon Cognito calls Amazon SES on your
--   behalf to send email from your verified email address. When you use
--   this option, the email delivery limits are the same limits that apply
--   to your Amazon SES verified email address in your account.If you use
--   this option, you must provide the ARN of an Amazon SES verified email
--   address for the <tt>SourceArn</tt> parameter.Before Amazon Cognito can
--   email your users, it requires additional permissions to call Amazon
--   SES on your behalf. When you update your user pool with this option,
--   Amazon Cognito creates a /service-linked role/, which is a type of IAM
--   role, in your account. This role contains the permissions that allow
--   Amazon Cognito to access Amazon SES and send email messages with your
--   address. For more information about the service-linked role that
--   Amazon Cognito creates, see <a>Using Service-Linked Roles for Amazon
--   Cognito</a> in the <i>Amazon Cognito Developer Guide</i>.</li>
--   </ul>
newEmailConfigurationType :: EmailConfigurationType

-- | Specifies the user context data captured at the time of an event
--   request.
--   
--   <i>See:</i> <a>newEventContextDataType</a> smart constructor.
data EventContextDataType
EventContextDataType' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> EventContextDataType

-- | Create a value of <a>EventContextDataType</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ipAddress:EventContextDataType'</a>,
--   <a>eventContextDataType_ipAddress</a> - The user's IP address.
--   
--   <a>$sel:country:EventContextDataType'</a>,
--   <a>eventContextDataType_country</a> - The user's country.
--   
--   <a>$sel:city:EventContextDataType'</a>,
--   <a>eventContextDataType_city</a> - The user's city.
--   
--   <a>$sel:deviceName:EventContextDataType'</a>,
--   <a>eventContextDataType_deviceName</a> - The user's device name.
--   
--   <a>$sel:timezone:EventContextDataType'</a>,
--   <a>eventContextDataType_timezone</a> - The user's time zone.
newEventContextDataType :: EventContextDataType

-- | Specifies the event feedback type.
--   
--   <i>See:</i> <a>newEventFeedbackType</a> smart constructor.
data EventFeedbackType
EventFeedbackType' :: Maybe POSIX -> FeedbackValueType -> Text -> EventFeedbackType

-- | Create a value of <a>EventFeedbackType</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:feedbackDate:EventFeedbackType'</a>,
--   <a>eventFeedbackType_feedbackDate</a> - The event feedback date.
--   
--   <a>$sel:feedbackValue:EventFeedbackType'</a>,
--   <a>eventFeedbackType_feedbackValue</a> - The event feedback value.
--   
--   <a>$sel:provider:EventFeedbackType'</a>,
--   <a>eventFeedbackType_provider</a> - The provider.
newEventFeedbackType :: FeedbackValueType -> Text -> EventFeedbackType

-- | The event risk type.
--   
--   <i>See:</i> <a>newEventRiskType</a> smart constructor.
data EventRiskType
EventRiskType' :: Maybe Bool -> Maybe RiskLevelType -> Maybe RiskDecisionType -> EventRiskType

-- | Create a value of <a>EventRiskType</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:compromisedCredentialsDetected:EventRiskType'</a>,
--   <a>eventRiskType_compromisedCredentialsDetected</a> - Indicates
--   whether compromised credentials were detected during an authentication
--   event.
--   
--   <a>$sel:riskLevel:EventRiskType'</a>, <a>eventRiskType_riskLevel</a> -
--   The risk level.
--   
--   <a>$sel:riskDecision:EventRiskType'</a>,
--   <a>eventRiskType_riskDecision</a> - The risk decision.
newEventRiskType :: EventRiskType

-- | The group type.
--   
--   <i>See:</i> <a>newGroupType</a> smart constructor.
data GroupType
GroupType' :: Maybe POSIX -> Maybe Text -> Maybe POSIX -> Maybe Natural -> Maybe Text -> Maybe Text -> Maybe Text -> GroupType

-- | Create a value of <a>GroupType</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lastModifiedDate:GroupType'</a>,
--   <a>groupType_lastModifiedDate</a> - The date the group was last
--   modified.
--   
--   <a>$sel:userPoolId:GroupType'</a>, <a>groupType_userPoolId</a> - The
--   user pool ID for the user pool.
--   
--   <a>$sel:creationDate:GroupType'</a>, <a>groupType_creationDate</a> -
--   The date the group was created.
--   
--   <a>$sel:precedence:GroupType'</a>, <a>groupType_precedence</a> - A
--   nonnegative integer value that specifies the precedence of this group
--   relative to the other groups that a user can belong to in the user
--   pool. If a user belongs to two or more groups, it is the group with
--   the highest precedence whose role ARN will be used in the
--   <tt>cognito:roles</tt> and <tt>cognito:preferred_role</tt> claims in
--   the user's tokens. Groups with higher <tt>Precedence</tt> values take
--   precedence over groups with lower <tt>Precedence</tt> values or with
--   null <tt>Precedence</tt> values.
--   
--   Two groups can have the same <tt>Precedence</tt> value. If this
--   happens, neither group takes precedence over the other. If two groups
--   with the same <tt>Precedence</tt> have the same role ARN, that role is
--   used in the <tt>cognito:preferred_role</tt> claim in tokens for users
--   in each group. If the two groups have different role ARNs, the
--   <tt>cognito:preferred_role</tt> claim is not set in users' tokens.
--   
--   The default <tt>Precedence</tt> value is null.
--   
--   <a>$sel:groupName:GroupType'</a>, <a>groupType_groupName</a> - The
--   name of the group.
--   
--   <a>$sel:description:GroupType'</a>, <a>groupType_description</a> - A
--   string containing the description of the group.
--   
--   <a>$sel:roleArn:GroupType'</a>, <a>groupType_roleArn</a> - The role
--   ARN for the group.
newGroupType :: GroupType

-- | The HTTP header.
--   
--   <i>See:</i> <a>newHttpHeader</a> smart constructor.
data HttpHeader
HttpHeader' :: Maybe Text -> Maybe Text -> HttpHeader

-- | Create a value of <a>HttpHeader</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:headerValue:HttpHeader'</a>, <a>httpHeader_headerValue</a> -
--   The header value.
--   
--   <a>$sel:headerName:HttpHeader'</a>, <a>httpHeader_headerName</a> - The
--   header name
newHttpHeader :: HttpHeader

-- | A container for information about an identity provider.
--   
--   <i>See:</i> <a>newIdentityProviderType</a> smart constructor.
data IdentityProviderType
IdentityProviderType' :: Maybe POSIX -> Maybe Text -> Maybe IdentityProviderTypeType -> Maybe POSIX -> Maybe [Text] -> Maybe (HashMap Text Text) -> Maybe (HashMap Text Text) -> Maybe Text -> IdentityProviderType

-- | Create a value of <a>IdentityProviderType</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lastModifiedDate:IdentityProviderType'</a>,
--   <a>identityProviderType_lastModifiedDate</a> - The date the identity
--   provider was last modified.
--   
--   <a>$sel:userPoolId:IdentityProviderType'</a>,
--   <a>identityProviderType_userPoolId</a> - The user pool ID.
--   
--   <a>$sel:providerType:IdentityProviderType'</a>,
--   <a>identityProviderType_providerType</a> - The identity provider type.
--   
--   <a>$sel:creationDate:IdentityProviderType'</a>,
--   <a>identityProviderType_creationDate</a> - The date the identity
--   provider was created.
--   
--   <a>$sel:idpIdentifiers:IdentityProviderType'</a>,
--   <a>identityProviderType_idpIdentifiers</a> - A list of identity
--   provider identifiers.
--   
--   <a>$sel:attributeMapping:IdentityProviderType'</a>,
--   <a>identityProviderType_attributeMapping</a> - A mapping of identity
--   provider attributes to standard and custom user pool attributes.
--   
--   <a>$sel:providerDetails:IdentityProviderType'</a>,
--   <a>identityProviderType_providerDetails</a> - The identity provider
--   details. The following list describes the provider detail keys for
--   each identity provider type.
--   
--   <ul>
--   <li>For Google and Login with
--   Amazon:<ul><li>client_id</li><li>client_secret</li><li>authorize_scopes</li></ul></li>
--   <li>For
--   Facebook:<ul><li>client_id</li><li>client_secret</li><li>authorize_scopes</li><li>api_version</li></ul></li>
--   <li>For Sign in with
--   Apple:<ul><li>client_id</li><li>team_id</li><li>key_id</li><li>private_key</li><li>authorize_scopes</li></ul></li>
--   <li>For OIDC
--   providers:<ul><li>client_id</li><li>client_secret</li><li>attributes_request_method</li><li>oidc_issuer</li><li>authorize_scopes</li><li>authorize_url
--   /if not available from discovery URL specified by oidc_issuer
--   key/</li><li>token_url /if not available from discovery URL specified
--   by oidc_issuer key/</li><li>attributes_url /if not available from
--   discovery URL specified by oidc_issuer key/</li><li>jwks_uri /if not
--   available from discovery URL specified by oidc_issuer
--   key/</li></ul></li>
--   <li>For SAML providers:<ul><li>MetadataFile OR
--   MetadataURL</li><li>IDPSignOut <i>optional</i></li></ul></li>
--   </ul>
--   
--   <a>$sel:providerName:IdentityProviderType'</a>,
--   <a>identityProviderType_providerName</a> - The identity provider name.
newIdentityProviderType :: IdentityProviderType

-- | Specifies the configuration for Lambda triggers.
--   
--   <i>See:</i> <a>newLambdaConfigType</a> smart constructor.
data LambdaConfigType
LambdaConfigType' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe CustomSMSLambdaVersionConfigType -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe CustomEmailLambdaVersionConfigType -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> LambdaConfigType

-- | Create a value of <a>LambdaConfigType</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:preAuthentication:LambdaConfigType'</a>,
--   <a>lambdaConfigType_preAuthentication</a> - A pre-authentication
--   Lambda trigger.
--   
--   <a>$sel:createAuthChallenge:LambdaConfigType'</a>,
--   <a>lambdaConfigType_createAuthChallenge</a> - Creates an
--   authentication challenge.
--   
--   <a>$sel:verifyAuthChallengeResponse:LambdaConfigType'</a>,
--   <a>lambdaConfigType_verifyAuthChallengeResponse</a> - Verifies the
--   authentication challenge response.
--   
--   <a>$sel:customSMSSender:LambdaConfigType'</a>,
--   <a>lambdaConfigType_customSMSSender</a> - A custom SMS sender Lambda
--   trigger.
--   
--   <a>$sel:postAuthentication:LambdaConfigType'</a>,
--   <a>lambdaConfigType_postAuthentication</a> - A post-authentication
--   Lambda trigger.
--   
--   <a>$sel:customMessage:LambdaConfigType'</a>,
--   <a>lambdaConfigType_customMessage</a> - A custom Message Lambda
--   trigger.
--   
--   <a>$sel:defineAuthChallenge:LambdaConfigType'</a>,
--   <a>lambdaConfigType_defineAuthChallenge</a> - Defines the
--   authentication challenge.
--   
--   <a>$sel:customEmailSender:LambdaConfigType'</a>,
--   <a>lambdaConfigType_customEmailSender</a> - A custom email sender
--   Lambda trigger.
--   
--   <a>$sel:kmsKeyID:LambdaConfigType'</a>,
--   <a>lambdaConfigType_kmsKeyID</a> - The Amazon Resource Name of Key
--   Management Service <a>Customer master keys</a> . Amazon Cognito uses
--   the key to encrypt codes and temporary passwords sent to
--   <tt>CustomEmailSender</tt> and <tt>CustomSMSSender</tt>.
--   
--   <a>$sel:postConfirmation:LambdaConfigType'</a>,
--   <a>lambdaConfigType_postConfirmation</a> - A post-confirmation Lambda
--   trigger.
--   
--   <a>$sel:preTokenGeneration:LambdaConfigType'</a>,
--   <a>lambdaConfigType_preTokenGeneration</a> - A Lambda trigger that is
--   invoked before token generation.
--   
--   <a>$sel:userMigration:LambdaConfigType'</a>,
--   <a>lambdaConfigType_userMigration</a> - The user migration Lambda
--   config type.
--   
--   <a>$sel:preSignUp:LambdaConfigType'</a>,
--   <a>lambdaConfigType_preSignUp</a> - A pre-registration Lambda trigger.
newLambdaConfigType :: LambdaConfigType

-- | <i>This data type is no longer supported.</i> You can use it only for
--   SMS MFA configurations. You can't use it for TOTP software token MFA
--   configurations.
--   
--   <i>See:</i> <a>newMFAOptionType</a> smart constructor.
data MFAOptionType
MFAOptionType' :: Maybe DeliveryMediumType -> Maybe Text -> MFAOptionType

-- | Create a value of <a>MFAOptionType</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deliveryMedium:MFAOptionType'</a>,
--   <a>mfaOptionType_deliveryMedium</a> - The delivery medium to send the
--   MFA code. You can use this parameter to set only the <tt>SMS</tt>
--   delivery medium value.
--   
--   <a>$sel:attributeName:MFAOptionType'</a>,
--   <a>mfaOptionType_attributeName</a> - The attribute name of the MFA
--   option type. The only valid value is <tt>phone_number</tt>.
newMFAOptionType :: MFAOptionType

-- | The message template structure.
--   
--   <i>See:</i> <a>newMessageTemplateType</a> smart constructor.
data MessageTemplateType
MessageTemplateType' :: Maybe Text -> Maybe Text -> Maybe Text -> MessageTemplateType

-- | Create a value of <a>MessageTemplateType</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:emailSubject:MessageTemplateType'</a>,
--   <a>messageTemplateType_emailSubject</a> - The subject line for email
--   messages. EmailSubject is allowed only if <a>EmailSendingAccount</a>
--   is DEVELOPER.
--   
--   <a>$sel:sMSMessage:MessageTemplateType'</a>,
--   <a>messageTemplateType_sMSMessage</a> - The message template for SMS
--   messages.
--   
--   <a>$sel:emailMessage:MessageTemplateType'</a>,
--   <a>messageTemplateType_emailMessage</a> - The message template for
--   email messages. EmailMessage is allowed only if
--   <a>EmailSendingAccount</a> is DEVELOPER.
newMessageTemplateType :: MessageTemplateType

-- | The new device metadata type.
--   
--   <i>See:</i> <a>newNewDeviceMetadataType</a> smart constructor.
data NewDeviceMetadataType
NewDeviceMetadataType' :: Maybe Text -> Maybe Text -> NewDeviceMetadataType

-- | Create a value of <a>NewDeviceMetadataType</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deviceGroupKey:NewDeviceMetadataType'</a>,
--   <a>newDeviceMetadataType_deviceGroupKey</a> - The device group key.
--   
--   <a>$sel:deviceKey:NewDeviceMetadataType'</a>,
--   <a>newDeviceMetadataType_deviceKey</a> - The device key.
newNewDeviceMetadataType :: NewDeviceMetadataType

-- | The notify configuration type.
--   
--   <i>See:</i> <a>newNotifyConfigurationType</a> smart constructor.
data NotifyConfigurationType
NotifyConfigurationType' :: Maybe NotifyEmailType -> Maybe Text -> Maybe Text -> Maybe NotifyEmailType -> Maybe NotifyEmailType -> Text -> NotifyConfigurationType

-- | Create a value of <a>NotifyConfigurationType</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:noActionEmail:NotifyConfigurationType'</a>,
--   <a>notifyConfigurationType_noActionEmail</a> - The email template used
--   when a detected risk event is allowed.
--   
--   <a>$sel:from:NotifyConfigurationType'</a>,
--   <a>notifyConfigurationType_from</a> - The email address that is
--   sending the email. It must be either individually verified with Amazon
--   SES, or from a domain that has been verified with Amazon SES.
--   
--   <a>$sel:replyTo:NotifyConfigurationType'</a>,
--   <a>notifyConfigurationType_replyTo</a> - The destination to which the
--   receiver of an email should reply to.
--   
--   <a>$sel:blockEmail:NotifyConfigurationType'</a>,
--   <a>notifyConfigurationType_blockEmail</a> - Email template used when a
--   detected risk event is blocked.
--   
--   <a>$sel:mfaEmail:NotifyConfigurationType'</a>,
--   <a>notifyConfigurationType_mfaEmail</a> - The MFA email template used
--   when MFA is challenged as part of a detected risk.
--   
--   <a>$sel:sourceArn:NotifyConfigurationType'</a>,
--   <a>notifyConfigurationType_sourceArn</a> - The Amazon Resource Name
--   (ARN) of the identity that is associated with the sending
--   authorization policy. It permits Amazon Cognito to send for the email
--   address specified in the <tt>From</tt> parameter.
newNotifyConfigurationType :: Text -> NotifyConfigurationType

-- | The notify email type.
--   
--   <i>See:</i> <a>newNotifyEmailType</a> smart constructor.
data NotifyEmailType
NotifyEmailType' :: Maybe Text -> Maybe Text -> Text -> NotifyEmailType

-- | Create a value of <a>NotifyEmailType</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:textBody:NotifyEmailType'</a>, <a>notifyEmailType_textBody</a>
--   - The text body.
--   
--   <a>$sel:htmlBody:NotifyEmailType'</a>, <a>notifyEmailType_htmlBody</a>
--   - The HTML body.
--   
--   <a>$sel:subject:NotifyEmailType'</a>, <a>notifyEmailType_subject</a> -
--   The subject.
newNotifyEmailType :: Text -> NotifyEmailType

-- | The minimum and maximum value of an attribute that is of the number
--   data type.
--   
--   <i>See:</i> <a>newNumberAttributeConstraintsType</a> smart
--   constructor.
data NumberAttributeConstraintsType
NumberAttributeConstraintsType' :: Maybe Text -> Maybe Text -> NumberAttributeConstraintsType

-- | Create a value of <a>NumberAttributeConstraintsType</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:maxValue:NumberAttributeConstraintsType'</a>,
--   <a>numberAttributeConstraintsType_maxValue</a> - The maximum value of
--   an attribute that is of the number data type.
--   
--   <a>$sel:minValue:NumberAttributeConstraintsType'</a>,
--   <a>numberAttributeConstraintsType_minValue</a> - The minimum value of
--   an attribute that is of the number data type.
newNumberAttributeConstraintsType :: NumberAttributeConstraintsType

-- | The password policy type.
--   
--   <i>See:</i> <a>newPasswordPolicyType</a> smart constructor.
data PasswordPolicyType
PasswordPolicyType' :: Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Natural -> Maybe Bool -> Maybe Natural -> PasswordPolicyType

-- | Create a value of <a>PasswordPolicyType</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:requireNumbers:PasswordPolicyType'</a>,
--   <a>passwordPolicyType_requireNumbers</a> - In the password policy that
--   you have set, refers to whether you have required users to use at
--   least one number in their password.
--   
--   <a>$sel:requireUppercase:PasswordPolicyType'</a>,
--   <a>passwordPolicyType_requireUppercase</a> - In the password policy
--   that you have set, refers to whether you have required users to use at
--   least one uppercase letter in their password.
--   
--   <a>$sel:requireLowercase:PasswordPolicyType'</a>,
--   <a>passwordPolicyType_requireLowercase</a> - In the password policy
--   that you have set, refers to whether you have required users to use at
--   least one lowercase letter in their password.
--   
--   <a>$sel:minimumLength:PasswordPolicyType'</a>,
--   <a>passwordPolicyType_minimumLength</a> - The minimum length of the
--   password policy that you have set. Cannot be less than 6.
--   
--   <a>$sel:requireSymbols:PasswordPolicyType'</a>,
--   <a>passwordPolicyType_requireSymbols</a> - In the password policy that
--   you have set, refers to whether you have required users to use at
--   least one symbol in their password.
--   
--   <a>$sel:temporaryPasswordValidityDays:PasswordPolicyType'</a>,
--   <a>passwordPolicyType_temporaryPasswordValidityDays</a> - In the
--   password policy you have set, refers to the number of days a temporary
--   password is valid. If the user does not sign-in during this time,
--   their password will need to be reset by an administrator.
--   
--   When you set <tt>TemporaryPasswordValidityDays</tt> for a user pool,
--   you will no longer be able to set the deprecated
--   <tt>UnusedAccountValidityDays</tt> value for that user pool.
newPasswordPolicyType :: PasswordPolicyType

-- | A container for identity provider details.
--   
--   <i>See:</i> <a>newProviderDescription</a> smart constructor.
data ProviderDescription
ProviderDescription' :: Maybe POSIX -> Maybe IdentityProviderTypeType -> Maybe POSIX -> Maybe Text -> ProviderDescription

-- | Create a value of <a>ProviderDescription</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lastModifiedDate:ProviderDescription'</a>,
--   <a>providerDescription_lastModifiedDate</a> - The date the provider
--   was last modified.
--   
--   <a>$sel:providerType:ProviderDescription'</a>,
--   <a>providerDescription_providerType</a> - The identity provider type.
--   
--   <a>$sel:creationDate:ProviderDescription'</a>,
--   <a>providerDescription_creationDate</a> - The date the provider was
--   added to the user pool.
--   
--   <a>$sel:providerName:ProviderDescription'</a>,
--   <a>providerDescription_providerName</a> - The identity provider name.
newProviderDescription :: ProviderDescription

-- | A container for information about an identity provider for a user
--   pool.
--   
--   <i>See:</i> <a>newProviderUserIdentifierType</a> smart constructor.
data ProviderUserIdentifierType
ProviderUserIdentifierType' :: Maybe Text -> Maybe Text -> Maybe Text -> ProviderUserIdentifierType

-- | Create a value of <a>ProviderUserIdentifierType</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:providerAttributeValue:ProviderUserIdentifierType'</a>,
--   <a>providerUserIdentifierType_providerAttributeValue</a> - The value
--   of the provider attribute to link to, for example,
--   <tt>xxxxx_account</tt>.
--   
--   <a>$sel:providerAttributeName:ProviderUserIdentifierType'</a>,
--   <a>providerUserIdentifierType_providerAttributeName</a> - The name of
--   the provider attribute to link to, for example, <tt>NameID</tt>.
--   
--   <a>$sel:providerName:ProviderUserIdentifierType'</a>,
--   <a>providerUserIdentifierType_providerName</a> - The name of the
--   provider, for example, Facebook, Google, or Login with Amazon.
newProviderUserIdentifierType :: ProviderUserIdentifierType

-- | A map containing a priority as a key, and recovery method name as a
--   value.
--   
--   <i>See:</i> <a>newRecoveryOptionType</a> smart constructor.
data RecoveryOptionType
RecoveryOptionType' :: Natural -> RecoveryOptionNameType -> RecoveryOptionType

-- | Create a value of <a>RecoveryOptionType</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:priority:RecoveryOptionType'</a>,
--   <a>recoveryOptionType_priority</a> - A positive integer specifying
--   priority of a method with 1 being the highest priority.
--   
--   <a>$sel:name:RecoveryOptionType'</a>, <a>recoveryOptionType_name</a> -
--   Specifies the recovery method for a user.
newRecoveryOptionType :: Natural -> RecoveryOptionNameType -> RecoveryOptionType

-- | A resource server scope.
--   
--   <i>See:</i> <a>newResourceServerScopeType</a> smart constructor.
data ResourceServerScopeType
ResourceServerScopeType' :: Text -> Text -> ResourceServerScopeType

-- | Create a value of <a>ResourceServerScopeType</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:scopeName:ResourceServerScopeType'</a>,
--   <a>resourceServerScopeType_scopeName</a> - The name of the scope.
--   
--   <a>$sel:scopeDescription:ResourceServerScopeType'</a>,
--   <a>resourceServerScopeType_scopeDescription</a> - A description of the
--   scope.
newResourceServerScopeType :: Text -> Text -> ResourceServerScopeType

-- | A container for information about a resource server for a user pool.
--   
--   <i>See:</i> <a>newResourceServerType</a> smart constructor.
data ResourceServerType
ResourceServerType' :: Maybe Text -> Maybe Text -> Maybe [ResourceServerScopeType] -> Maybe Text -> ResourceServerType

-- | Create a value of <a>ResourceServerType</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userPoolId:ResourceServerType'</a>,
--   <a>resourceServerType_userPoolId</a> - The user pool ID for the user
--   pool that hosts the resource server.
--   
--   <a>$sel:identifier:ResourceServerType'</a>,
--   <a>resourceServerType_identifier</a> - The identifier for the resource
--   server.
--   
--   <a>$sel:scopes:ResourceServerType'</a>,
--   <a>resourceServerType_scopes</a> - A list of scopes that are defined
--   for the resource server.
--   
--   <a>$sel:name:ResourceServerType'</a>, <a>resourceServerType_name</a> -
--   The name of the resource server.
newResourceServerType :: ResourceServerType

-- | The risk configuration type.
--   
--   <i>See:</i> <a>newRiskConfigurationType</a> smart constructor.
data RiskConfigurationType
RiskConfigurationType' :: Maybe RiskExceptionConfigurationType -> Maybe (Sensitive Text) -> Maybe AccountTakeoverRiskConfigurationType -> Maybe POSIX -> Maybe Text -> Maybe CompromisedCredentialsRiskConfigurationType -> RiskConfigurationType

-- | Create a value of <a>RiskConfigurationType</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:riskExceptionConfiguration:RiskConfigurationType'</a>,
--   <a>riskConfigurationType_riskExceptionConfiguration</a> - The
--   configuration to override the risk decision.
--   
--   <a>$sel:clientId:RiskConfigurationType'</a>,
--   <a>riskConfigurationType_clientId</a> - The app client ID.
--   
--   <a>$sel:accountTakeoverRiskConfiguration:RiskConfigurationType'</a>,
--   <a>riskConfigurationType_accountTakeoverRiskConfiguration</a> - The
--   account takeover risk configuration object including the
--   <tt>NotifyConfiguration</tt> object and <tt>Actions</tt> to take in
--   the case of an account takeover.
--   
--   <a>$sel:lastModifiedDate:RiskConfigurationType'</a>,
--   <a>riskConfigurationType_lastModifiedDate</a> - The last modified
--   date.
--   
--   <a>$sel:userPoolId:RiskConfigurationType'</a>,
--   <a>riskConfigurationType_userPoolId</a> - The user pool ID.
--   
--   
--   <a>$sel:compromisedCredentialsRiskConfiguration:RiskConfigurationType'</a>,
--   <a>riskConfigurationType_compromisedCredentialsRiskConfiguration</a> -
--   The compromised credentials risk configuration object including the
--   <tt>EventFilter</tt> and the <tt>EventAction</tt>
newRiskConfigurationType :: RiskConfigurationType

-- | The type of the configuration to override the risk decision.
--   
--   <i>See:</i> <a>newRiskExceptionConfigurationType</a> smart
--   constructor.
data RiskExceptionConfigurationType
RiskExceptionConfigurationType' :: Maybe [Text] -> Maybe [Text] -> RiskExceptionConfigurationType

-- | Create a value of <a>RiskExceptionConfigurationType</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:skippedIPRangeList:RiskExceptionConfigurationType'</a>,
--   <a>riskExceptionConfigurationType_skippedIPRangeList</a> - Risk
--   detection is not performed on the IP addresses in the range list. The
--   IP range is in CIDR notation.
--   
--   <a>$sel:blockedIPRangeList:RiskExceptionConfigurationType'</a>,
--   <a>riskExceptionConfigurationType_blockedIPRangeList</a> - Overrides
--   the risk decision to always block the pre-authentication requests. The
--   IP range is in CIDR notation: a compact representation of an IP
--   address and its associated routing prefix.
newRiskExceptionConfigurationType :: RiskExceptionConfigurationType

-- | The type used for enabling SMS MFA at the user level. Phone numbers
--   don't need to be verified to be used for SMS MFA. If an MFA type is
--   enabled for a user, the user will be prompted for MFA during all sign
--   in attempts, unless device tracking is turned on and the device has
--   been trusted. If you would like MFA to be applied selectively based on
--   the assessed risk level of sign in attempts, disable MFA for users and
--   turn on Adaptive Authentication for the user pool.
--   
--   <i>See:</i> <a>newSMSMfaSettingsType</a> smart constructor.
data SMSMfaSettingsType
SMSMfaSettingsType' :: Maybe Bool -> Maybe Bool -> SMSMfaSettingsType

-- | Create a value of <a>SMSMfaSettingsType</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:enabled:SMSMfaSettingsType'</a>,
--   <a>sMSMfaSettingsType_enabled</a> - Specifies whether SMS text message
--   MFA is enabled. If an MFA type is enabled for a user, the user will be
--   prompted for MFA during all sign in attempts, unless device tracking
--   is turned on and the device has been trusted.
--   
--   <a>$sel:preferredMfa:SMSMfaSettingsType'</a>,
--   <a>sMSMfaSettingsType_preferredMfa</a> - Specifies whether SMS is the
--   preferred MFA method.
newSMSMfaSettingsType :: SMSMfaSettingsType

-- | Contains information about the schema attribute.
--   
--   <i>See:</i> <a>newSchemaAttributeType</a> smart constructor.
data SchemaAttributeType
SchemaAttributeType' :: Maybe NumberAttributeConstraintsType -> Maybe Bool -> Maybe AttributeDataType -> Maybe StringAttributeConstraintsType -> Maybe Text -> Maybe Bool -> Maybe Bool -> SchemaAttributeType

-- | Create a value of <a>SchemaAttributeType</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:numberAttributeConstraints:SchemaAttributeType'</a>,
--   <a>schemaAttributeType_numberAttributeConstraints</a> - Specifies the
--   constraints for an attribute of the number type.
--   
--   <a>$sel:required:SchemaAttributeType'</a>,
--   <a>schemaAttributeType_required</a> - Specifies whether a user pool
--   attribute is required. If the attribute is required and the user does
--   not provide a value, registration or sign-in will fail.
--   
--   <a>$sel:attributeDataType:SchemaAttributeType'</a>,
--   <a>schemaAttributeType_attributeDataType</a> - The attribute data
--   type.
--   
--   <a>$sel:stringAttributeConstraints:SchemaAttributeType'</a>,
--   <a>schemaAttributeType_stringAttributeConstraints</a> - Specifies the
--   constraints for an attribute of the string type.
--   
--   <a>$sel:name:SchemaAttributeType'</a>, <a>schemaAttributeType_name</a>
--   - A schema attribute of the name type.
--   
--   <a>$sel:developerOnlyAttribute:SchemaAttributeType'</a>,
--   <a>schemaAttributeType_developerOnlyAttribute</a> - We recommend that
--   you use <a>WriteAttributes</a> in the user pool client to control how
--   attributes can be mutated for new use cases instead of using
--   <tt>DeveloperOnlyAttribute</tt>.
--   
--   Specifies whether the attribute type is developer only. This attribute
--   can only be modified by an administrator. Users will not be able to
--   modify this attribute using their access token. For example,
--   <tt>DeveloperOnlyAttribute</tt> can be modified using
--   AdminUpdateUserAttributes but cannot be updated using
--   UpdateUserAttributes.
--   
--   <a>$sel:mutable:SchemaAttributeType'</a>,
--   <a>schemaAttributeType_mutable</a> - Specifies whether the value of
--   the attribute can be changed.
--   
--   For any user pool attribute that's mapped to an identity provider
--   attribute, you must set this parameter to <tt>true</tt>. Amazon
--   Cognito updates mapped attributes when users sign in to your
--   application through an identity provider. If an attribute is
--   immutable, Amazon Cognito throws an error when it attempts to update
--   the attribute. For more information, see <a>Specifying Identity
--   Provider Attribute Mappings for Your User Pool</a>.
newSchemaAttributeType :: SchemaAttributeType

-- | The SMS configuration type that includes the settings the Cognito User
--   Pool needs to call for the Amazon SNS service to send an SMS message
--   from your account. The Cognito User Pool makes the request to the
--   Amazon SNS Service by using an IAM role that you provide for your
--   account.
--   
--   <i>See:</i> <a>newSmsConfigurationType</a> smart constructor.
data SmsConfigurationType
SmsConfigurationType' :: Maybe Text -> Text -> SmsConfigurationType

-- | Create a value of <a>SmsConfigurationType</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:externalId:SmsConfigurationType'</a>,
--   <a>smsConfigurationType_externalId</a> - The external ID is a value
--   that we recommend you use to add security to your IAM role which is
--   used to call Amazon SNS to send SMS messages for your user pool. If
--   you provide an <tt>ExternalId</tt>, the Cognito User Pool will include
--   it when attempting to assume your IAM role, so that you can set your
--   roles trust policy to require the <tt>ExternalID</tt>. If you use the
--   Cognito Management Console to create a role for SMS MFA, Cognito will
--   create a role with the required permissions and a trust policy that
--   demonstrates use of the <tt>ExternalId</tt>.
--   
--   For more information about the <tt>ExternalId</tt> of a role, see
--   <a>How to use an external ID when granting access to your Amazon Web
--   Services resources to a third party</a>
--   
--   <a>$sel:snsCallerArn:SmsConfigurationType'</a>,
--   <a>smsConfigurationType_snsCallerArn</a> - The Amazon Resource Name
--   (ARN) of the Amazon Simple Notification Service (SNS) caller. This is
--   the ARN of the IAM role in your account which Cognito will use to send
--   SMS messages. SMS messages are subject to a <a>spending limit</a>.
newSmsConfigurationType :: Text -> SmsConfigurationType

-- | The SMS text message multi-factor authentication (MFA) configuration
--   type.
--   
--   <i>See:</i> <a>newSmsMfaConfigType</a> smart constructor.
data SmsMfaConfigType
SmsMfaConfigType' :: Maybe Text -> Maybe SmsConfigurationType -> SmsMfaConfigType

-- | Create a value of <a>SmsMfaConfigType</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:smsAuthenticationMessage:SmsMfaConfigType'</a>,
--   <a>smsMfaConfigType_smsAuthenticationMessage</a> - The SMS
--   authentication message that will be sent to users with the code they
--   need to sign in. The message must contain the ‘{####}’ placeholder,
--   which will be replaced with the code. If the message is not included,
--   and default message will be used.
--   
--   <a>$sel:smsConfiguration:SmsMfaConfigType'</a>,
--   <a>smsMfaConfigType_smsConfiguration</a> - The SMS configuration.
newSmsMfaConfigType :: SmsMfaConfigType

-- | The type used for enabling software token MFA at the user pool level.
--   
--   <i>See:</i> <a>newSoftwareTokenMfaConfigType</a> smart constructor.
data SoftwareTokenMfaConfigType
SoftwareTokenMfaConfigType' :: Maybe Bool -> SoftwareTokenMfaConfigType

-- | Create a value of <a>SoftwareTokenMfaConfigType</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:enabled:SoftwareTokenMfaConfigType'</a>,
--   <a>softwareTokenMfaConfigType_enabled</a> - Specifies whether software
--   token MFA is enabled.
newSoftwareTokenMfaConfigType :: SoftwareTokenMfaConfigType

-- | The type used for enabling software token MFA at the user level. If an
--   MFA type is enabled for a user, the user will be prompted for MFA
--   during all sign in attempts, unless device tracking is turned on and
--   the device has been trusted. If you would like MFA to be applied
--   selectively based on the assessed risk level of sign in attempts,
--   disable MFA for users and turn on Adaptive Authentication for the user
--   pool.
--   
--   <i>See:</i> <a>newSoftwareTokenMfaSettingsType</a> smart constructor.
data SoftwareTokenMfaSettingsType
SoftwareTokenMfaSettingsType' :: Maybe Bool -> Maybe Bool -> SoftwareTokenMfaSettingsType

-- | Create a value of <a>SoftwareTokenMfaSettingsType</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:enabled:SoftwareTokenMfaSettingsType'</a>,
--   <a>softwareTokenMfaSettingsType_enabled</a> - Specifies whether
--   software token MFA is enabled. If an MFA type is enabled for a user,
--   the user will be prompted for MFA during all sign in attempts, unless
--   device tracking is turned on and the device has been trusted.
--   
--   <a>$sel:preferredMfa:SoftwareTokenMfaSettingsType'</a>,
--   <a>softwareTokenMfaSettingsType_preferredMfa</a> - Specifies whether
--   software token MFA is the preferred MFA method.
newSoftwareTokenMfaSettingsType :: SoftwareTokenMfaSettingsType

-- | The constraints associated with a string attribute.
--   
--   <i>See:</i> <a>newStringAttributeConstraintsType</a> smart
--   constructor.
data StringAttributeConstraintsType
StringAttributeConstraintsType' :: Maybe Text -> Maybe Text -> StringAttributeConstraintsType

-- | Create a value of <a>StringAttributeConstraintsType</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:maxLength:StringAttributeConstraintsType'</a>,
--   <a>stringAttributeConstraintsType_maxLength</a> - The maximum length.
--   
--   <a>$sel:minLength:StringAttributeConstraintsType'</a>,
--   <a>stringAttributeConstraintsType_minLength</a> - The minimum length.
newStringAttributeConstraintsType :: StringAttributeConstraintsType

-- | The data type for TokenValidityUnits that specifics the time
--   measurements for token validity.
--   
--   <i>See:</i> <a>newTokenValidityUnitsType</a> smart constructor.
data TokenValidityUnitsType
TokenValidityUnitsType' :: Maybe TimeUnitsType -> Maybe TimeUnitsType -> Maybe TimeUnitsType -> TokenValidityUnitsType

-- | Create a value of <a>TokenValidityUnitsType</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:accessToken:TokenValidityUnitsType'</a>,
--   <a>tokenValidityUnitsType_accessToken</a> - A time unit in “seconds”,
--   “minutes”, “hours” or “days” for the value in AccessTokenValidity,
--   defaults to hours.
--   
--   <a>$sel:refreshToken:TokenValidityUnitsType'</a>,
--   <a>tokenValidityUnitsType_refreshToken</a> - A time unit in “seconds”,
--   “minutes”, “hours” or “days” for the value in RefreshTokenValidity,
--   defaults to days.
--   
--   <a>$sel:idToken:TokenValidityUnitsType'</a>,
--   <a>tokenValidityUnitsType_idToken</a> - A time unit in “seconds”,
--   “minutes”, “hours” or “days” for the value in IdTokenValidity,
--   defaults to hours.
newTokenValidityUnitsType :: TokenValidityUnitsType

-- | A container for the UI customization information for a user pool's
--   built-in app UI.
--   
--   <i>See:</i> <a>newUICustomizationType</a> smart constructor.
data UICustomizationType
UICustomizationType' :: Maybe (Sensitive Text) -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> UICustomizationType

-- | Create a value of <a>UICustomizationType</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientId:UICustomizationType'</a>,
--   <a>uICustomizationType_clientId</a> - The client ID for the client
--   app.
--   
--   <a>$sel:lastModifiedDate:UICustomizationType'</a>,
--   <a>uICustomizationType_lastModifiedDate</a> - The last-modified date
--   for the UI customization.
--   
--   <a>$sel:userPoolId:UICustomizationType'</a>,
--   <a>uICustomizationType_userPoolId</a> - The user pool ID for the user
--   pool.
--   
--   <a>$sel:css:UICustomizationType'</a>, <a>uICustomizationType_css</a> -
--   The CSS values in the UI customization.
--   
--   <a>$sel:cSSVersion:UICustomizationType'</a>,
--   <a>uICustomizationType_cSSVersion</a> - The CSS version number.
--   
--   <a>$sel:imageUrl:UICustomizationType'</a>,
--   <a>uICustomizationType_imageUrl</a> - The logo image for the UI
--   customization.
--   
--   <a>$sel:creationDate:UICustomizationType'</a>,
--   <a>uICustomizationType_creationDate</a> - The creation date for the UI
--   customization.
newUICustomizationType :: UICustomizationType

-- | Contextual data such as the user's device fingerprint, IP address, or
--   location used for evaluating the risk of an unexpected event by Amazon
--   Cognito advanced security.
--   
--   <i>See:</i> <a>newUserContextDataType</a> smart constructor.
data UserContextDataType
UserContextDataType' :: Maybe Text -> UserContextDataType

-- | Create a value of <a>UserContextDataType</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:encodedData:UserContextDataType'</a>,
--   <a>userContextDataType_encodedData</a> - Contextual data such as the
--   user's device fingerprint, IP address, or location used for evaluating
--   the risk of an unexpected event by Amazon Cognito advanced security.
newUserContextDataType :: UserContextDataType

-- | The user import job type.
--   
--   <i>See:</i> <a>newUserImportJobType</a> smart constructor.
data UserImportJobType
UserImportJobType' :: Maybe UserImportJobStatusType -> Maybe Integer -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Integer -> Maybe POSIX -> Maybe Text -> Maybe POSIX -> Maybe POSIX -> Maybe Text -> Maybe Integer -> UserImportJobType

-- | Create a value of <a>UserImportJobType</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:UserImportJobType'</a>, <a>userImportJobType_status</a>
--   - The status of the user import job. One of the following:
--   
--   <ul>
--   <li><tt>Created</tt> - The job was created but not started.</li>
--   <li><tt>Pending</tt> - A transition state. You have started the job,
--   but it has not begun importing users yet.</li>
--   <li><tt>InProgress</tt> - The job has started, and users are being
--   imported.</li>
--   <li><tt>Stopping</tt> - You have stopped the job, but the job has not
--   stopped importing users yet.</li>
--   <li><tt>Stopped</tt> - You have stopped the job, and the job has
--   stopped importing users.</li>
--   <li><tt>Succeeded</tt> - The job has completed successfully.</li>
--   <li><tt>Failed</tt> - The job has stopped due to an error.</li>
--   <li><tt>Expired</tt> - You created a job, but did not start the job
--   within 24-48 hours. All data associated with the job was deleted, and
--   the job cannot be started.</li>
--   </ul>
--   
--   <a>$sel:skippedUsers:UserImportJobType'</a>,
--   <a>userImportJobType_skippedUsers</a> - The number of users that were
--   skipped.
--   
--   <a>$sel:jobId:UserImportJobType'</a>, <a>userImportJobType_jobId</a> -
--   The job ID for the user import job.
--   
--   <a>$sel:userPoolId:UserImportJobType'</a>,
--   <a>userImportJobType_userPoolId</a> - The user pool ID for the user
--   pool that the users are being imported into.
--   
--   <a>$sel:jobName:UserImportJobType'</a>,
--   <a>userImportJobType_jobName</a> - The job name for the user import
--   job.
--   
--   <a>$sel:preSignedUrl:UserImportJobType'</a>,
--   <a>userImportJobType_preSignedUrl</a> - The pre-signed URL to be used
--   to upload the <tt>.csv</tt> file.
--   
--   <a>$sel:failedUsers:UserImportJobType'</a>,
--   <a>userImportJobType_failedUsers</a> - The number of users that could
--   not be imported.
--   
--   <a>$sel:startDate:UserImportJobType'</a>,
--   <a>userImportJobType_startDate</a> - The date when the user import job
--   was started.
--   
--   <a>$sel:completionMessage:UserImportJobType'</a>,
--   <a>userImportJobType_completionMessage</a> - The message returned when
--   the user import job is completed.
--   
--   <a>$sel:creationDate:UserImportJobType'</a>,
--   <a>userImportJobType_creationDate</a> - The date the user import job
--   was created.
--   
--   <a>$sel:completionDate:UserImportJobType'</a>,
--   <a>userImportJobType_completionDate</a> - The date when the user
--   import job was completed.
--   
--   <a>$sel:cloudWatchLogsRoleArn:UserImportJobType'</a>,
--   <a>userImportJobType_cloudWatchLogsRoleArn</a> - The role ARN for the
--   Amazon CloudWatch Logging role for the user import job. For more
--   information, see "Creating the CloudWatch Logs IAM Role" in the Amazon
--   Cognito Developer Guide.
--   
--   <a>$sel:importedUsers:UserImportJobType'</a>,
--   <a>userImportJobType_importedUsers</a> - The number of users that were
--   successfully imported.
newUserImportJobType :: UserImportJobType

-- | The user pool add-ons type.
--   
--   <i>See:</i> <a>newUserPoolAddOnsType</a> smart constructor.
data UserPoolAddOnsType
UserPoolAddOnsType' :: AdvancedSecurityModeType -> UserPoolAddOnsType

-- | Create a value of <a>UserPoolAddOnsType</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:advancedSecurityMode:UserPoolAddOnsType'</a>,
--   <a>userPoolAddOnsType_advancedSecurityMode</a> - The advanced security
--   mode.
newUserPoolAddOnsType :: AdvancedSecurityModeType -> UserPoolAddOnsType

-- | The description of the user pool client.
--   
--   <i>See:</i> <a>newUserPoolClientDescription</a> smart constructor.
data UserPoolClientDescription
UserPoolClientDescription' :: Maybe (Sensitive Text) -> Maybe Text -> Maybe Text -> UserPoolClientDescription

-- | Create a value of <a>UserPoolClientDescription</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientId:UserPoolClientDescription'</a>,
--   <a>userPoolClientDescription_clientId</a> - The ID of the client
--   associated with the user pool.
--   
--   <a>$sel:userPoolId:UserPoolClientDescription'</a>,
--   <a>userPoolClientDescription_userPoolId</a> - The user pool ID for the
--   user pool where you want to describe the user pool client.
--   
--   <a>$sel:clientName:UserPoolClientDescription'</a>,
--   <a>userPoolClientDescription_clientName</a> - The client name from the
--   user pool client description.
newUserPoolClientDescription :: UserPoolClientDescription

-- | Contains information about a user pool client.
--   
--   <i>See:</i> <a>newUserPoolClientType</a> smart constructor.
data UserPoolClientType
UserPoolClientType' :: Maybe Natural -> Maybe (Sensitive Text) -> Maybe [ExplicitAuthFlowsType] -> Maybe (Sensitive Text) -> Maybe POSIX -> Maybe [Text] -> Maybe [Text] -> Maybe Bool -> Maybe Text -> Maybe Natural -> Maybe TokenValidityUnitsType -> Maybe Text -> Maybe Bool -> Maybe [Text] -> Maybe PreventUserExistenceErrorTypes -> Maybe Natural -> Maybe POSIX -> Maybe [Text] -> Maybe [Text] -> Maybe [OAuthFlowType] -> Maybe AnalyticsConfigurationType -> Maybe Text -> Maybe [Text] -> UserPoolClientType

-- | Create a value of <a>UserPoolClientType</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:refreshTokenValidity:UserPoolClientType'</a>,
--   <a>userPoolClientType_refreshTokenValidity</a> - The time limit, in
--   days, after which the refresh token is no longer valid and cannot be
--   used.
--   
--   <a>$sel:clientId:UserPoolClientType'</a>,
--   <a>userPoolClientType_clientId</a> - The ID of the client associated
--   with the user pool.
--   
--   <a>$sel:explicitAuthFlows:UserPoolClientType'</a>,
--   <a>userPoolClientType_explicitAuthFlows</a> - The authentication flows
--   that are supported by the user pool clients. Flow names without the
--   <tt>ALLOW_</tt> prefix are deprecated in favor of new names with the
--   <tt>ALLOW_</tt> prefix. Note that values with <tt>ALLOW_</tt> prefix
--   cannot be used along with values without <tt>ALLOW_</tt> prefix.
--   
--   Valid values include:
--   
--   <ul>
--   <li><tt>ALLOW_ADMIN_USER_PASSWORD_AUTH</tt>: Enable admin based user
--   password authentication flow <tt>ADMIN_USER_PASSWORD_AUTH</tt>. This
--   setting replaces the <tt>ADMIN_NO_SRP_AUTH</tt> setting. With this
--   authentication flow, Cognito receives the password in the request
--   instead of using the SRP (Secure Remote Password protocol) protocol to
--   verify passwords.</li>
--   <li><tt>ALLOW_CUSTOM_AUTH</tt>: Enable Lambda trigger based
--   authentication.</li>
--   <li><tt>ALLOW_USER_PASSWORD_AUTH</tt>: Enable user password-based
--   authentication. In this flow, Cognito receives the password in the
--   request instead of using the SRP protocol to verify passwords.</li>
--   <li><tt>ALLOW_USER_SRP_AUTH</tt>: Enable SRP based
--   authentication.</li>
--   <li><tt>ALLOW_REFRESH_TOKEN_AUTH</tt>: Enable authflow to refresh
--   tokens.</li>
--   </ul>
--   
--   <a>$sel:clientSecret:UserPoolClientType'</a>,
--   <a>userPoolClientType_clientSecret</a> - The client secret from the
--   user pool request of the client type.
--   
--   <a>$sel:lastModifiedDate:UserPoolClientType'</a>,
--   <a>userPoolClientType_lastModifiedDate</a> - The date the user pool
--   client was last modified.
--   
--   <a>$sel:supportedIdentityProviders:UserPoolClientType'</a>,
--   <a>userPoolClientType_supportedIdentityProviders</a> - A list of
--   provider names for the identity providers that are supported on this
--   client.
--   
--   <a>$sel:logoutURLs:UserPoolClientType'</a>,
--   <a>userPoolClientType_logoutURLs</a> - A list of allowed logout URLs
--   for the identity providers.
--   
--   <a>$sel:allowedOAuthFlowsUserPoolClient:UserPoolClientType'</a>,
--   <a>userPoolClientType_allowedOAuthFlowsUserPoolClient</a> - Set to
--   true if the client is allowed to follow the OAuth protocol when
--   interacting with Cognito user pools.
--   
--   <a>$sel:userPoolId:UserPoolClientType'</a>,
--   <a>userPoolClientType_userPoolId</a> - The user pool ID for the user
--   pool client.
--   
--   <a>$sel:idTokenValidity:UserPoolClientType'</a>,
--   <a>userPoolClientType_idTokenValidity</a> - The time limit, specified
--   by tokenValidityUnits, defaulting to hours, after which the refresh
--   token is no longer valid and cannot be used.
--   
--   <a>$sel:tokenValidityUnits:UserPoolClientType'</a>,
--   <a>userPoolClientType_tokenValidityUnits</a> - The time units used to
--   specify the token validity times of their respective token.
--   
--   <a>$sel:defaultRedirectURI:UserPoolClientType'</a>,
--   <a>userPoolClientType_defaultRedirectURI</a> - The default redirect
--   URI. Must be in the <tt>CallbackURLs</tt> list.
--   
--   A redirect URI must:
--   
--   <ul>
--   <li>Be an absolute URI.</li>
--   <li>Be registered with the authorization server.</li>
--   <li>Not include a fragment component.</li>
--   </ul>
--   
--   See <a>OAuth 2.0 - Redirection Endpoint</a>.
--   
--   Amazon Cognito requires HTTPS over HTTP except for http://localhost
--   for testing purposes only.
--   
--   App callback URLs such as myapp://example are also supported.
--   
--   <a>$sel:enableTokenRevocation:UserPoolClientType'</a>,
--   <a>userPoolClientType_enableTokenRevocation</a> - Indicates whether
--   token revocation is enabled for the user pool client. When you create
--   a new user pool client, token revocation is enabled by default. For
--   more information about revoking tokens, see <a>RevokeToken</a>.
--   
--   <a>$sel:writeAttributes:UserPoolClientType'</a>,
--   <a>userPoolClientType_writeAttributes</a> - The writeable attributes.
--   
--   <a>$sel:preventUserExistenceErrors:UserPoolClientType'</a>,
--   <a>userPoolClientType_preventUserExistenceErrors</a> - Use this
--   setting to choose which errors and responses are returned by Cognito
--   APIs during authentication, account confirmation, and password
--   recovery when the user does not exist in the user pool. When set to
--   <tt>ENABLED</tt> and the user does not exist, authentication returns
--   an error indicating either the username or password was incorrect, and
--   account confirmation and password recovery return a response
--   indicating a code was sent to a simulated destination. When set to
--   <tt>LEGACY</tt>, those APIs will return a
--   <tt>UserNotFoundException</tt> exception if the user does not exist in
--   the user pool.
--   
--   Valid values include:
--   
--   <ul>
--   <li><tt>ENABLED</tt> - This prevents user existence-related
--   errors.</li>
--   <li><tt>LEGACY</tt> - This represents the old behavior of Cognito
--   where user existence related errors are not prevented.</li>
--   </ul>
--   
--   After February 15th 2020, the value of
--   <tt>PreventUserExistenceErrors</tt> will default to <tt>ENABLED</tt>
--   for newly created user pool clients if no value is provided.
--   
--   <a>$sel:accessTokenValidity:UserPoolClientType'</a>,
--   <a>userPoolClientType_accessTokenValidity</a> - The time limit,
--   specified by tokenValidityUnits, defaulting to hours, after which the
--   access token is no longer valid and cannot be used.
--   
--   <a>$sel:creationDate:UserPoolClientType'</a>,
--   <a>userPoolClientType_creationDate</a> - The date the user pool client
--   was created.
--   
--   <a>$sel:readAttributes:UserPoolClientType'</a>,
--   <a>userPoolClientType_readAttributes</a> - The Read-only attributes.
--   
--   <a>$sel:allowedOAuthScopes:UserPoolClientType'</a>,
--   <a>userPoolClientType_allowedOAuthScopes</a> - The allowed OAuth
--   scopes. Possible values provided by OAuth are: <tt>phone</tt>,
--   <tt>email</tt>, <tt>openid</tt>, and <tt>profile</tt>. Possible values
--   provided by Amazon Web Services are:
--   <tt>aws.cognito.signin.user.admin</tt>. Custom scopes created in
--   Resource Servers are also supported.
--   
--   <a>$sel:allowedOAuthFlows:UserPoolClientType'</a>,
--   <a>userPoolClientType_allowedOAuthFlows</a> - The allowed OAuth flows.
--   
--   Set to <tt>code</tt> to initiate a code grant flow, which provides an
--   authorization code as the response. This code can be exchanged for
--   access tokens with the token endpoint.
--   
--   Set to <tt>implicit</tt> to specify that the client should get the
--   access token (and, optionally, ID token, based on scopes) directly.
--   
--   Set to <tt>client_credentials</tt> to specify that the client should
--   get the access token (and, optionally, ID token, based on scopes) from
--   the token endpoint using a combination of client and client_secret.
--   
--   <a>$sel:analyticsConfiguration:UserPoolClientType'</a>,
--   <a>userPoolClientType_analyticsConfiguration</a> - The Amazon Pinpoint
--   analytics configuration for the user pool client.
--   
--   Cognito User Pools only supports sending events to Amazon Pinpoint
--   projects in the US East (N. Virginia) us-east-1 Region, regardless of
--   the region in which the user pool resides.
--   
--   <a>$sel:clientName:UserPoolClientType'</a>,
--   <a>userPoolClientType_clientName</a> - The client name from the user
--   pool request of the client type.
--   
--   <a>$sel:callbackURLs:UserPoolClientType'</a>,
--   <a>userPoolClientType_callbackURLs</a> - A list of allowed redirect
--   (callback) URLs for the identity providers.
--   
--   A redirect URI must:
--   
--   <ul>
--   <li>Be an absolute URI.</li>
--   <li>Be registered with the authorization server.</li>
--   <li>Not include a fragment component.</li>
--   </ul>
--   
--   See <a>OAuth 2.0 - Redirection Endpoint</a>.
--   
--   Amazon Cognito requires HTTPS over HTTP except for http://localhost
--   for testing purposes only.
--   
--   App callback URLs such as myapp://example are also supported.
newUserPoolClientType :: UserPoolClientType

-- | A user pool description.
--   
--   <i>See:</i> <a>newUserPoolDescriptionType</a> smart constructor.
data UserPoolDescriptionType
UserPoolDescriptionType' :: Maybe StatusType -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe LambdaConfigType -> UserPoolDescriptionType

-- | Create a value of <a>UserPoolDescriptionType</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:UserPoolDescriptionType'</a>,
--   <a>userPoolDescriptionType_status</a> - The user pool status in a user
--   pool description.
--   
--   <a>$sel:lastModifiedDate:UserPoolDescriptionType'</a>,
--   <a>userPoolDescriptionType_lastModifiedDate</a> - The date the user
--   pool description was last modified.
--   
--   <a>$sel:name:UserPoolDescriptionType'</a>,
--   <a>userPoolDescriptionType_name</a> - The name in a user pool
--   description.
--   
--   <a>$sel:id:UserPoolDescriptionType'</a>,
--   <a>userPoolDescriptionType_id</a> - The ID in a user pool description.
--   
--   <a>$sel:creationDate:UserPoolDescriptionType'</a>,
--   <a>userPoolDescriptionType_creationDate</a> - The date the user pool
--   description was created.
--   
--   <a>$sel:lambdaConfig:UserPoolDescriptionType'</a>,
--   <a>userPoolDescriptionType_lambdaConfig</a> - The Lambda configuration
--   information in a user pool description.
newUserPoolDescriptionType :: UserPoolDescriptionType

-- | The policy associated with a user pool.
--   
--   <i>See:</i> <a>newUserPoolPolicyType</a> smart constructor.
data UserPoolPolicyType
UserPoolPolicyType' :: Maybe PasswordPolicyType -> UserPoolPolicyType

-- | Create a value of <a>UserPoolPolicyType</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:passwordPolicy:UserPoolPolicyType'</a>,
--   <a>userPoolPolicyType_passwordPolicy</a> - The password policy.
newUserPoolPolicyType :: UserPoolPolicyType

-- | A container for information about the user pool.
--   
--   <i>See:</i> <a>newUserPoolType</a> smart constructor.
data UserPoolType
UserPoolType' :: Maybe StatusType -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe POSIX -> Maybe VerificationMessageTemplateType -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe UserPoolAddOnsType -> Maybe (NonEmpty SchemaAttributeType) -> Maybe Text -> Maybe [UsernameAttributeType] -> Maybe [AliasAttributeType] -> Maybe AccountRecoverySettingType -> Maybe EmailConfigurationType -> Maybe Text -> Maybe Text -> Maybe UserPoolMfaType -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe LambdaConfigType -> Maybe SmsConfigurationType -> Maybe AdminCreateUserConfigType -> Maybe DeviceConfigurationType -> Maybe [VerifiedAttributeType] -> Maybe UserPoolPolicyType -> Maybe UsernameConfigurationType -> UserPoolType

-- | Create a value of <a>UserPoolType</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:UserPoolType'</a>, <a>userPoolType_status</a> - The
--   status of a user pool.
--   
--   <a>$sel:userPoolTags:UserPoolType'</a>,
--   <a>userPoolType_userPoolTags</a> - The tags that are assigned to the
--   user pool. A tag is a label that you can apply to user pools to
--   categorize and manage them in different ways, such as by purpose,
--   owner, environment, or other criteria.
--   
--   <a>$sel:emailConfigurationFailure:UserPoolType'</a>,
--   <a>userPoolType_emailConfigurationFailure</a> - The reason why the
--   email configuration cannot send the messages to your users.
--   
--   <a>$sel:lastModifiedDate:UserPoolType'</a>,
--   <a>userPoolType_lastModifiedDate</a> - The date the user pool was last
--   modified.
--   
--   <a>$sel:verificationMessageTemplate:UserPoolType'</a>,
--   <a>userPoolType_verificationMessageTemplate</a> - The template for
--   verification messages.
--   
--   <a>$sel:estimatedNumberOfUsers:UserPoolType'</a>,
--   <a>userPoolType_estimatedNumberOfUsers</a> - A number estimating the
--   size of the user pool.
--   
--   <a>$sel:arn:UserPoolType'</a>, <a>userPoolType_arn</a> - The Amazon
--   Resource Name (ARN) for the user pool.
--   
--   <a>$sel:domain:UserPoolType'</a>, <a>userPoolType_domain</a> - Holds
--   the domain prefix if the user pool has a domain associated with it.
--   
--   <a>$sel:customDomain:UserPoolType'</a>,
--   <a>userPoolType_customDomain</a> - A custom domain name that you
--   provide to Amazon Cognito. This parameter applies only if you use a
--   custom domain to host the sign-up and sign-in pages for your
--   application. For example: <tt>auth.example.com</tt>.
--   
--   For more information about adding a custom domain to your user pool,
--   see <a>Using Your Own Domain for the Hosted UI</a>.
--   
--   <a>$sel:emailVerificationMessage:UserPoolType'</a>,
--   <a>userPoolType_emailVerificationMessage</a> - The contents of the
--   email verification message.
--   
--   <a>$sel:smsAuthenticationMessage:UserPoolType'</a>,
--   <a>userPoolType_smsAuthenticationMessage</a> - The contents of the SMS
--   authentication message.
--   
--   <a>$sel:userPoolAddOns:UserPoolType'</a>,
--   <a>userPoolType_userPoolAddOns</a> - The user pool add-ons.
--   
--   <a>$sel:schemaAttributes:UserPoolType'</a>,
--   <a>userPoolType_schemaAttributes</a> - A container with the schema
--   attributes of a user pool.
--   
--   <a>$sel:emailVerificationSubject:UserPoolType'</a>,
--   <a>userPoolType_emailVerificationSubject</a> - The subject of the
--   email verification message.
--   
--   <a>$sel:usernameAttributes:UserPoolType'</a>,
--   <a>userPoolType_usernameAttributes</a> - Specifies whether email
--   addresses or phone numbers can be specified as usernames when a user
--   signs up.
--   
--   <a>$sel:aliasAttributes:UserPoolType'</a>,
--   <a>userPoolType_aliasAttributes</a> - Specifies the attributes that
--   are aliased in a user pool.
--   
--   <a>$sel:accountRecoverySetting:UserPoolType'</a>,
--   <a>userPoolType_accountRecoverySetting</a> - Use this setting to
--   define which verified available method a user can use to recover their
--   password when they call <tt>ForgotPassword</tt>. It allows you to
--   define a preferred method when a user has more than one method
--   available. With this setting, SMS does not qualify for a valid
--   password recovery mechanism if the user also has SMS MFA enabled. In
--   the absence of this setting, Cognito uses the legacy behavior to
--   determine the recovery method where SMS is preferred over email.
--   
--   <a>$sel:emailConfiguration:UserPoolType'</a>,
--   <a>userPoolType_emailConfiguration</a> - The email configuration.
--   
--   <a>$sel:smsVerificationMessage:UserPoolType'</a>,
--   <a>userPoolType_smsVerificationMessage</a> - The contents of the SMS
--   verification message.
--   
--   <a>$sel:name:UserPoolType'</a>, <a>userPoolType_name</a> - The name of
--   the user pool.
--   
--   <a>$sel:mfaConfiguration:UserPoolType'</a>,
--   <a>userPoolType_mfaConfiguration</a> - Can be one of the following
--   values:
--   
--   <ul>
--   <li><tt>OFF</tt> - MFA tokens are not required and cannot be specified
--   during user registration.</li>
--   <li><tt>ON</tt> - MFA tokens are required for all user registrations.
--   You can only specify required when you are initially creating a user
--   pool.</li>
--   <li><tt>OPTIONAL</tt> - Users have the option when registering to
--   create an MFA token.</li>
--   </ul>
--   
--   <a>$sel:id:UserPoolType'</a>, <a>userPoolType_id</a> - The ID of the
--   user pool.
--   
--   <a>$sel:smsConfigurationFailure:UserPoolType'</a>,
--   <a>userPoolType_smsConfigurationFailure</a> - The reason why the SMS
--   configuration cannot send the messages to your users.
--   
--   This message might include comma-separated values to describe why your
--   SMS configuration can't send messages to user pool end users.
--   
--   <ul>
--   <li>InvalidSmsRoleAccessPolicyException - The IAM role which Cognito
--   uses to send SMS messages is not properly configured. For more
--   information, see <a>SmsConfigurationType</a>.</li>
--   <li>SNSSandbox - The account is in SNS Sandbox and messages won’t
--   reach unverified end users. This parameter won’t get populated with
--   SNSSandbox if the IAM user creating the user pool doesn’t have SNS
--   permissions. To learn how to move your account out of the sandbox, see
--   <a>Moving out of the SMS sandbox</a>.</li>
--   </ul>
--   
--   <a>$sel:creationDate:UserPoolType'</a>,
--   <a>userPoolType_creationDate</a> - The date the user pool was created.
--   
--   <a>$sel:lambdaConfig:UserPoolType'</a>,
--   <a>userPoolType_lambdaConfig</a> - The Lambda triggers associated with
--   the user pool.
--   
--   <a>$sel:smsConfiguration:UserPoolType'</a>,
--   <a>userPoolType_smsConfiguration</a> - The SMS configuration.
--   
--   <a>$sel:adminCreateUserConfig:UserPoolType'</a>,
--   <a>userPoolType_adminCreateUserConfig</a> - The configuration for
--   <tt>AdminCreateUser</tt> requests.
--   
--   <a>$sel:deviceConfiguration:UserPoolType'</a>,
--   <a>userPoolType_deviceConfiguration</a> - The device configuration.
--   
--   <a>$sel:autoVerifiedAttributes:UserPoolType'</a>,
--   <a>userPoolType_autoVerifiedAttributes</a> - Specifies the attributes
--   that are auto-verified in a user pool.
--   
--   <a>$sel:policies:UserPoolType'</a>, <a>userPoolType_policies</a> - The
--   policies associated with the user pool.
--   
--   <a>$sel:usernameConfiguration:UserPoolType'</a>,
--   <a>userPoolType_usernameConfiguration</a> - You can choose to enable
--   case sensitivity on the username input for the selected sign-in
--   option. For example, when this is set to <tt>False</tt>, users will be
--   able to sign in using either "username" or "Username". This
--   configuration is immutable once it has been set. For more information,
--   see <a>UsernameConfigurationType</a>.
newUserPoolType :: UserPoolType

-- | The user type.
--   
--   <i>See:</i> <a>newUserType</a> smart constructor.
data UserType
UserType' :: Maybe Bool -> Maybe UserStatusType -> Maybe (Sensitive Text) -> Maybe POSIX -> Maybe [AttributeType] -> Maybe [MFAOptionType] -> Maybe POSIX -> UserType

-- | Create a value of <a>UserType</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:enabled:UserType'</a>, <a>userType_enabled</a> - Specifies
--   whether the user is enabled.
--   
--   <a>$sel:userStatus:UserType'</a>, <a>userType_userStatus</a> - The
--   user status. Can be one of the following:
--   
--   <ul>
--   <li>UNCONFIRMED - User has been created but not confirmed.</li>
--   <li>CONFIRMED - User has been confirmed.</li>
--   <li>ARCHIVED - User is no longer active.</li>
--   <li>COMPROMISED - User is disabled due to a potential security
--   threat.</li>
--   <li>UNKNOWN - User status is not known.</li>
--   <li>RESET_REQUIRED - User is confirmed, but the user must request a
--   code and reset his or her password before he or she can sign in.</li>
--   <li>FORCE_CHANGE_PASSWORD - The user is confirmed and the user can
--   sign in using a temporary password, but on first sign-in, the user
--   must change his or her password to a new value before doing anything
--   else.</li>
--   </ul>
--   
--   <a>$sel:username:UserType'</a>, <a>userType_username</a> - The user
--   name of the user you wish to describe.
--   
--   <a>$sel:userCreateDate:UserType'</a>, <a>userType_userCreateDate</a> -
--   The creation date of the user.
--   
--   <a>$sel:attributes:UserType'</a>, <a>userType_attributes</a> - A
--   container with information about the user type attributes.
--   
--   <a>$sel:mfaOptions:UserType'</a>, <a>userType_mfaOptions</a> - The MFA
--   options for the user.
--   
--   <a>$sel:userLastModifiedDate:UserType'</a>,
--   <a>userType_userLastModifiedDate</a> - The last modified date of the
--   user.
newUserType :: UserType

-- | The username configuration type.
--   
--   <i>See:</i> <a>newUsernameConfigurationType</a> smart constructor.
data UsernameConfigurationType
UsernameConfigurationType' :: Bool -> UsernameConfigurationType

-- | Create a value of <a>UsernameConfigurationType</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:caseSensitive:UsernameConfigurationType'</a>,
--   <a>usernameConfigurationType_caseSensitive</a> - Specifies whether
--   username case sensitivity will be applied for all users in the user
--   pool through Cognito APIs.
--   
--   Valid values include:
--   
--   <ul>
--   <li><b><tt>True</tt></b> : Enables case sensitivity for all username
--   input. When this option is set to <tt>True</tt>, users must sign in
--   using the exact capitalization of their given username. For example,
--   “UserName”. This is the default value.</li>
--   <li><b><tt>False</tt></b> : Enables case insensitivity for all
--   username input. For example, when this option is set to
--   <tt>False</tt>, users will be able to sign in using either "username"
--   or "Username". This option also enables both
--   <tt>preferred_username</tt> and <tt>email</tt> alias to be case
--   insensitive, in addition to the <tt>username</tt> attribute.</li>
--   </ul>
newUsernameConfigurationType :: Bool -> UsernameConfigurationType

-- | The template for verification messages.
--   
--   <i>See:</i> <a>newVerificationMessageTemplateType</a> smart
--   constructor.
data VerificationMessageTemplateType
VerificationMessageTemplateType' :: Maybe DefaultEmailOptionType -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> VerificationMessageTemplateType

-- | Create a value of <a>VerificationMessageTemplateType</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:defaultEmailOption:VerificationMessageTemplateType'</a>,
--   <a>verificationMessageTemplateType_defaultEmailOption</a> - The
--   default email option.
--   
--   <a>$sel:emailSubject:VerificationMessageTemplateType'</a>,
--   <a>verificationMessageTemplateType_emailSubject</a> - The subject line
--   for the email message template. EmailSubject is allowed only if
--   <a>EmailSendingAccount</a> is DEVELOPER.
--   
--   <a>$sel:emailSubjectByLink:VerificationMessageTemplateType'</a>,
--   <a>verificationMessageTemplateType_emailSubjectByLink</a> - The
--   subject line for the email message template for sending a confirmation
--   link to the user. EmailSubjectByLink is allowed only
--   <a>EmailSendingAccount</a> is DEVELOPER.
--   
--   <a>$sel:smsMessage:VerificationMessageTemplateType'</a>,
--   <a>verificationMessageTemplateType_smsMessage</a> - The SMS message
--   template.
--   
--   <a>$sel:emailMessageByLink:VerificationMessageTemplateType'</a>,
--   <a>verificationMessageTemplateType_emailMessageByLink</a> - The email
--   message template for sending a confirmation link to the user.
--   EmailMessageByLink is allowed only if <a>EmailSendingAccount</a> is
--   DEVELOPER.
--   
--   <a>$sel:emailMessage:VerificationMessageTemplateType'</a>,
--   <a>verificationMessageTemplateType_emailMessage</a> - The email
--   message template. EmailMessage is allowed only if
--   <a>EmailSendingAccount</a> is DEVELOPER.
newVerificationMessageTemplateType :: VerificationMessageTemplateType
