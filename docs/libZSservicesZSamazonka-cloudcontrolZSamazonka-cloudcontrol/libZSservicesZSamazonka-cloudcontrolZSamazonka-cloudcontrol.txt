-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/

@package libZSservicesZSamazonka-cloudcontrolZSamazonka-cloudcontrol
@version 2.0


module Network.AWS.CloudControl.Types.HandlerErrorCode
newtype HandlerErrorCode
HandlerErrorCode' :: Text -> HandlerErrorCode
[fromHandlerErrorCode] :: HandlerErrorCode -> Text
pattern HandlerErrorCode_AccessDenied :: HandlerErrorCode
pattern HandlerErrorCode_AlreadyExists :: HandlerErrorCode
pattern HandlerErrorCode_GeneralServiceException :: HandlerErrorCode
pattern HandlerErrorCode_InternalFailure :: HandlerErrorCode
pattern HandlerErrorCode_InvalidCredentials :: HandlerErrorCode
pattern HandlerErrorCode_InvalidRequest :: HandlerErrorCode
pattern HandlerErrorCode_NetworkFailure :: HandlerErrorCode
pattern HandlerErrorCode_NotFound :: HandlerErrorCode
pattern HandlerErrorCode_NotStabilized :: HandlerErrorCode
pattern HandlerErrorCode_NotUpdatable :: HandlerErrorCode
pattern HandlerErrorCode_ResourceConflict :: HandlerErrorCode
pattern HandlerErrorCode_ServiceInternalError :: HandlerErrorCode
pattern HandlerErrorCode_ServiceLimitExceeded :: HandlerErrorCode
pattern HandlerErrorCode_ServiceTimeout :: HandlerErrorCode
pattern HandlerErrorCode_Throttling :: HandlerErrorCode
instance Network.AWS.Data.XML.ToXML Network.AWS.CloudControl.Types.HandlerErrorCode.HandlerErrorCode
instance Network.AWS.Data.XML.FromXML Network.AWS.CloudControl.Types.HandlerErrorCode.HandlerErrorCode
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.CloudControl.Types.HandlerErrorCode.HandlerErrorCode
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudControl.Types.HandlerErrorCode.HandlerErrorCode
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.CloudControl.Types.HandlerErrorCode.HandlerErrorCode
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CloudControl.Types.HandlerErrorCode.HandlerErrorCode
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudControl.Types.HandlerErrorCode.HandlerErrorCode
instance Network.AWS.Data.Headers.ToHeader Network.AWS.CloudControl.Types.HandlerErrorCode.HandlerErrorCode
instance Network.AWS.Data.Log.ToLog Network.AWS.CloudControl.Types.HandlerErrorCode.HandlerErrorCode
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.CloudControl.Types.HandlerErrorCode.HandlerErrorCode
instance Network.AWS.Data.Text.ToText Network.AWS.CloudControl.Types.HandlerErrorCode.HandlerErrorCode
instance Network.AWS.Data.Text.FromText Network.AWS.CloudControl.Types.HandlerErrorCode.HandlerErrorCode
instance Control.DeepSeq.NFData Network.AWS.CloudControl.Types.HandlerErrorCode.HandlerErrorCode
instance Data.Hashable.Class.Hashable Network.AWS.CloudControl.Types.HandlerErrorCode.HandlerErrorCode
instance GHC.Generics.Generic Network.AWS.CloudControl.Types.HandlerErrorCode.HandlerErrorCode
instance GHC.Classes.Ord Network.AWS.CloudControl.Types.HandlerErrorCode.HandlerErrorCode
instance GHC.Classes.Eq Network.AWS.CloudControl.Types.HandlerErrorCode.HandlerErrorCode
instance GHC.Read.Read Network.AWS.CloudControl.Types.HandlerErrorCode.HandlerErrorCode
instance GHC.Show.Show Network.AWS.CloudControl.Types.HandlerErrorCode.HandlerErrorCode


module Network.AWS.CloudControl.Types.Operation
newtype Operation
Operation' :: Text -> Operation
[fromOperation] :: Operation -> Text
pattern Operation_CREATE :: Operation
pattern Operation_DELETE :: Operation
pattern Operation_UPDATE :: Operation
instance Network.AWS.Data.XML.ToXML Network.AWS.CloudControl.Types.Operation.Operation
instance Network.AWS.Data.XML.FromXML Network.AWS.CloudControl.Types.Operation.Operation
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.CloudControl.Types.Operation.Operation
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudControl.Types.Operation.Operation
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.CloudControl.Types.Operation.Operation
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CloudControl.Types.Operation.Operation
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudControl.Types.Operation.Operation
instance Network.AWS.Data.Headers.ToHeader Network.AWS.CloudControl.Types.Operation.Operation
instance Network.AWS.Data.Log.ToLog Network.AWS.CloudControl.Types.Operation.Operation
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.CloudControl.Types.Operation.Operation
instance Network.AWS.Data.Text.ToText Network.AWS.CloudControl.Types.Operation.Operation
instance Network.AWS.Data.Text.FromText Network.AWS.CloudControl.Types.Operation.Operation
instance Control.DeepSeq.NFData Network.AWS.CloudControl.Types.Operation.Operation
instance Data.Hashable.Class.Hashable Network.AWS.CloudControl.Types.Operation.Operation
instance GHC.Generics.Generic Network.AWS.CloudControl.Types.Operation.Operation
instance GHC.Classes.Ord Network.AWS.CloudControl.Types.Operation.Operation
instance GHC.Classes.Eq Network.AWS.CloudControl.Types.Operation.Operation
instance GHC.Read.Read Network.AWS.CloudControl.Types.Operation.Operation
instance GHC.Show.Show Network.AWS.CloudControl.Types.Operation.Operation


module Network.AWS.CloudControl.Types.OperationStatus
newtype OperationStatus
OperationStatus' :: Text -> OperationStatus
[fromOperationStatus] :: OperationStatus -> Text
pattern OperationStatus_CANCEL_COMPLETE :: OperationStatus
pattern OperationStatus_CANCEL_IN_PROGRESS :: OperationStatus
pattern OperationStatus_FAILED :: OperationStatus
pattern OperationStatus_IN_PROGRESS :: OperationStatus
pattern OperationStatus_PENDING :: OperationStatus
pattern OperationStatus_SUCCESS :: OperationStatus
instance Network.AWS.Data.XML.ToXML Network.AWS.CloudControl.Types.OperationStatus.OperationStatus
instance Network.AWS.Data.XML.FromXML Network.AWS.CloudControl.Types.OperationStatus.OperationStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.CloudControl.Types.OperationStatus.OperationStatus
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudControl.Types.OperationStatus.OperationStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.CloudControl.Types.OperationStatus.OperationStatus
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CloudControl.Types.OperationStatus.OperationStatus
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudControl.Types.OperationStatus.OperationStatus
instance Network.AWS.Data.Headers.ToHeader Network.AWS.CloudControl.Types.OperationStatus.OperationStatus
instance Network.AWS.Data.Log.ToLog Network.AWS.CloudControl.Types.OperationStatus.OperationStatus
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.CloudControl.Types.OperationStatus.OperationStatus
instance Network.AWS.Data.Text.ToText Network.AWS.CloudControl.Types.OperationStatus.OperationStatus
instance Network.AWS.Data.Text.FromText Network.AWS.CloudControl.Types.OperationStatus.OperationStatus
instance Control.DeepSeq.NFData Network.AWS.CloudControl.Types.OperationStatus.OperationStatus
instance Data.Hashable.Class.Hashable Network.AWS.CloudControl.Types.OperationStatus.OperationStatus
instance GHC.Generics.Generic Network.AWS.CloudControl.Types.OperationStatus.OperationStatus
instance GHC.Classes.Ord Network.AWS.CloudControl.Types.OperationStatus.OperationStatus
instance GHC.Classes.Eq Network.AWS.CloudControl.Types.OperationStatus.OperationStatus
instance GHC.Read.Read Network.AWS.CloudControl.Types.OperationStatus.OperationStatus
instance GHC.Show.Show Network.AWS.CloudControl.Types.OperationStatus.OperationStatus


module Network.AWS.CloudControl.Types.ProgressEvent

-- | Represents the current status of a resource operation request. For
--   more information, see <a>Managing resource operation requests</a> in
--   the <i>Amazon Web Services Cloud Control API User Guide</i>.
--   
--   <i>See:</i> <a>newProgressEvent</a> smart constructor.
data ProgressEvent
ProgressEvent' :: Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe (Sensitive Text) -> Maybe Operation -> Maybe Text -> Maybe OperationStatus -> Maybe POSIX -> Maybe Text -> Maybe HandlerErrorCode -> ProgressEvent

-- | When to next request the status of this resource operation request.
[$sel:retryAfter:ProgressEvent'] :: ProgressEvent -> Maybe POSIX

-- | The name of the resource type used in the operation.
[$sel:typeName:ProgressEvent'] :: ProgressEvent -> Maybe Text

-- | The unique token representing this resource operation request.
--   
--   Use the <tt>RequestToken</tt> with <a>GetResourceRequestStatus</a> to
--   return the current status of a resource operation request.
[$sel:requestToken:ProgressEvent'] :: ProgressEvent -> Maybe Text

-- | A JSON string containing the resource model, consisting of each
--   resource property and its current value.
[$sel:resourceModel:ProgressEvent'] :: ProgressEvent -> Maybe (Sensitive Text)

-- | The resource operation type.
[$sel:operation:ProgressEvent'] :: ProgressEvent -> Maybe Operation

-- | The primary identifier for the resource.
--   
--   In some cases, the resource identifier may be available before the
--   resource operation has reached a status of <tt>SUCCESS</tt>.
[$sel:identifier:ProgressEvent'] :: ProgressEvent -> Maybe Text

-- | The current status of the resource operation request.
--   
--   <ul>
--   <li><tt>PENDING</tt>: The resource operation has not yet started.</li>
--   <li><tt>IN_PROGRESS</tt>: The resource operation is currently in
--   progress.</li>
--   <li><tt>SUCCESS</tt>: The resource operation has successfully
--   completed.</li>
--   <li><tt>FAILED</tt>: The resource operation has failed. Refer to the
--   error code and status message for more information.</li>
--   <li><tt>CANCEL_IN_PROGRESS</tt>: The resource operation is in the
--   process of being canceled.</li>
--   <li><tt>CANCEL_COMPLETE</tt>: The resource operation has been
--   canceled.</li>
--   </ul>
[$sel:operationStatus:ProgressEvent'] :: ProgressEvent -> Maybe OperationStatus

-- | When the resource operation request was initiated.
[$sel:eventTime:ProgressEvent'] :: ProgressEvent -> Maybe POSIX

-- | Any message explaining the current status.
[$sel:statusMessage:ProgressEvent'] :: ProgressEvent -> Maybe Text

-- | For requests with a status of <tt>FAILED</tt>, the associated error
--   code.
--   
--   For error code definitions, see <a>Handler error codes</a> in the
--   /CloudFormation Command Line Interface User Guide for Extension
--   Development/.
[$sel:errorCode:ProgressEvent'] :: ProgressEvent -> Maybe HandlerErrorCode

-- | Create a value of <a>ProgressEvent</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:retryAfter:ProgressEvent'</a>, <a>progressEvent_retryAfter</a>
--   - When to next request the status of this resource operation request.
--   
--   <a>$sel:typeName:ProgressEvent'</a>, <a>progressEvent_typeName</a> -
--   The name of the resource type used in the operation.
--   
--   <a>$sel:requestToken:ProgressEvent'</a>,
--   <a>progressEvent_requestToken</a> - The unique token representing this
--   resource operation request.
--   
--   Use the <tt>RequestToken</tt> with <a>GetResourceRequestStatus</a> to
--   return the current status of a resource operation request.
--   
--   <a>$sel:resourceModel:ProgressEvent'</a>,
--   <a>progressEvent_resourceModel</a> - A JSON string containing the
--   resource model, consisting of each resource property and its current
--   value.
--   
--   <a>$sel:operation:ProgressEvent'</a>, <a>progressEvent_operation</a> -
--   The resource operation type.
--   
--   <a>$sel:identifier:ProgressEvent'</a>, <a>progressEvent_identifier</a>
--   - The primary identifier for the resource.
--   
--   In some cases, the resource identifier may be available before the
--   resource operation has reached a status of <tt>SUCCESS</tt>.
--   
--   <a>$sel:operationStatus:ProgressEvent'</a>,
--   <a>progressEvent_operationStatus</a> - The current status of the
--   resource operation request.
--   
--   <ul>
--   <li><tt>PENDING</tt>: The resource operation has not yet started.</li>
--   <li><tt>IN_PROGRESS</tt>: The resource operation is currently in
--   progress.</li>
--   <li><tt>SUCCESS</tt>: The resource operation has successfully
--   completed.</li>
--   <li><tt>FAILED</tt>: The resource operation has failed. Refer to the
--   error code and status message for more information.</li>
--   <li><tt>CANCEL_IN_PROGRESS</tt>: The resource operation is in the
--   process of being canceled.</li>
--   <li><tt>CANCEL_COMPLETE</tt>: The resource operation has been
--   canceled.</li>
--   </ul>
--   
--   <a>$sel:eventTime:ProgressEvent'</a>, <a>progressEvent_eventTime</a> -
--   When the resource operation request was initiated.
--   
--   <a>$sel:statusMessage:ProgressEvent'</a>,
--   <a>progressEvent_statusMessage</a> - Any message explaining the
--   current status.
--   
--   <a>$sel:errorCode:ProgressEvent'</a>, <a>progressEvent_errorCode</a> -
--   For requests with a status of <tt>FAILED</tt>, the associated error
--   code.
--   
--   For error code definitions, see <a>Handler error codes</a> in the
--   /CloudFormation Command Line Interface User Guide for Extension
--   Development/.
newProgressEvent :: ProgressEvent

-- | When to next request the status of this resource operation request.
progressEvent_retryAfter :: Lens' ProgressEvent (Maybe UTCTime)

-- | The name of the resource type used in the operation.
progressEvent_typeName :: Lens' ProgressEvent (Maybe Text)

-- | The unique token representing this resource operation request.
--   
--   Use the <tt>RequestToken</tt> with <a>GetResourceRequestStatus</a> to
--   return the current status of a resource operation request.
progressEvent_requestToken :: Lens' ProgressEvent (Maybe Text)

-- | A JSON string containing the resource model, consisting of each
--   resource property and its current value.
progressEvent_resourceModel :: Lens' ProgressEvent (Maybe Text)

-- | The resource operation type.
progressEvent_operation :: Lens' ProgressEvent (Maybe Operation)

-- | The primary identifier for the resource.
--   
--   In some cases, the resource identifier may be available before the
--   resource operation has reached a status of <tt>SUCCESS</tt>.
progressEvent_identifier :: Lens' ProgressEvent (Maybe Text)

-- | The current status of the resource operation request.
--   
--   <ul>
--   <li><tt>PENDING</tt>: The resource operation has not yet started.</li>
--   <li><tt>IN_PROGRESS</tt>: The resource operation is currently in
--   progress.</li>
--   <li><tt>SUCCESS</tt>: The resource operation has successfully
--   completed.</li>
--   <li><tt>FAILED</tt>: The resource operation has failed. Refer to the
--   error code and status message for more information.</li>
--   <li><tt>CANCEL_IN_PROGRESS</tt>: The resource operation is in the
--   process of being canceled.</li>
--   <li><tt>CANCEL_COMPLETE</tt>: The resource operation has been
--   canceled.</li>
--   </ul>
progressEvent_operationStatus :: Lens' ProgressEvent (Maybe OperationStatus)

-- | When the resource operation request was initiated.
progressEvent_eventTime :: Lens' ProgressEvent (Maybe UTCTime)

-- | Any message explaining the current status.
progressEvent_statusMessage :: Lens' ProgressEvent (Maybe Text)

-- | For requests with a status of <tt>FAILED</tt>, the associated error
--   code.
--   
--   For error code definitions, see <a>Handler error codes</a> in the
--   /CloudFormation Command Line Interface User Guide for Extension
--   Development/.
progressEvent_errorCode :: Lens' ProgressEvent (Maybe HandlerErrorCode)
instance GHC.Generics.Generic Network.AWS.CloudControl.Types.ProgressEvent.ProgressEvent
instance GHC.Show.Show Network.AWS.CloudControl.Types.ProgressEvent.ProgressEvent
instance GHC.Classes.Eq Network.AWS.CloudControl.Types.ProgressEvent.ProgressEvent
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CloudControl.Types.ProgressEvent.ProgressEvent
instance Data.Hashable.Class.Hashable Network.AWS.CloudControl.Types.ProgressEvent.ProgressEvent
instance Control.DeepSeq.NFData Network.AWS.CloudControl.Types.ProgressEvent.ProgressEvent


module Network.AWS.CloudControl.Types.ResourceDescription

-- | Represents information about a provisioned resource.
--   
--   <i>See:</i> <a>newResourceDescription</a> smart constructor.
data ResourceDescription
ResourceDescription' :: Maybe Text -> Maybe (Sensitive Text) -> ResourceDescription

-- | The primary identifier for the resource.
--   
--   For more information, see <a>Identifying resources</a> in the
--   <i>Amazon Web Services Cloud Control API User Guide</i>.
[$sel:identifier:ResourceDescription'] :: ResourceDescription -> Maybe Text

-- | A list of the resource properties and their current values.
[$sel:properties:ResourceDescription'] :: ResourceDescription -> Maybe (Sensitive Text)

-- | Create a value of <a>ResourceDescription</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:identifier:ResourceDescription'</a>,
--   <a>resourceDescription_identifier</a> - The primary identifier for the
--   resource.
--   
--   For more information, see <a>Identifying resources</a> in the
--   <i>Amazon Web Services Cloud Control API User Guide</i>.
--   
--   <a>$sel:properties:ResourceDescription'</a>,
--   <a>resourceDescription_properties</a> - A list of the resource
--   properties and their current values.
newResourceDescription :: ResourceDescription

-- | The primary identifier for the resource.
--   
--   For more information, see <a>Identifying resources</a> in the
--   <i>Amazon Web Services Cloud Control API User Guide</i>.
resourceDescription_identifier :: Lens' ResourceDescription (Maybe Text)

-- | A list of the resource properties and their current values.
resourceDescription_properties :: Lens' ResourceDescription (Maybe Text)
instance GHC.Generics.Generic Network.AWS.CloudControl.Types.ResourceDescription.ResourceDescription
instance GHC.Show.Show Network.AWS.CloudControl.Types.ResourceDescription.ResourceDescription
instance GHC.Classes.Eq Network.AWS.CloudControl.Types.ResourceDescription.ResourceDescription
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CloudControl.Types.ResourceDescription.ResourceDescription
instance Data.Hashable.Class.Hashable Network.AWS.CloudControl.Types.ResourceDescription.ResourceDescription
instance Control.DeepSeq.NFData Network.AWS.CloudControl.Types.ResourceDescription.ResourceDescription


module Network.AWS.CloudControl.Types.ResourceRequestStatusFilter

-- | The filter criteria to use in determining the requests returned.
--   
--   <i>See:</i> <a>newResourceRequestStatusFilter</a> smart constructor.
data ResourceRequestStatusFilter
ResourceRequestStatusFilter' :: Maybe [OperationStatus] -> Maybe [Operation] -> ResourceRequestStatusFilter

-- | The operation statuses to include in the filter.
--   
--   <ul>
--   <li><tt>PENDING</tt>: The operation has been requested, but not yet
--   initiated.</li>
--   <li><tt>IN_PROGRESS</tt>: The operation is currently in progress.</li>
--   <li><tt>SUCCESS</tt>: The operation has successfully completed.</li>
--   <li><tt>FAILED</tt>: The operation has failed.</li>
--   <li><tt>CANCEL_IN_PROGRESS</tt>: The operation is currently in the
--   process of being canceled.</li>
--   <li><tt>CANCEL_COMPLETE</tt>: The operation has been canceled.</li>
--   </ul>
[$sel:operationStatuses:ResourceRequestStatusFilter'] :: ResourceRequestStatusFilter -> Maybe [OperationStatus]

-- | The operation types to include in the filter.
[$sel:operations:ResourceRequestStatusFilter'] :: ResourceRequestStatusFilter -> Maybe [Operation]

-- | Create a value of <a>ResourceRequestStatusFilter</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:operationStatuses:ResourceRequestStatusFilter'</a>,
--   <a>resourceRequestStatusFilter_operationStatuses</a> - The operation
--   statuses to include in the filter.
--   
--   <ul>
--   <li><tt>PENDING</tt>: The operation has been requested, but not yet
--   initiated.</li>
--   <li><tt>IN_PROGRESS</tt>: The operation is currently in progress.</li>
--   <li><tt>SUCCESS</tt>: The operation has successfully completed.</li>
--   <li><tt>FAILED</tt>: The operation has failed.</li>
--   <li><tt>CANCEL_IN_PROGRESS</tt>: The operation is currently in the
--   process of being canceled.</li>
--   <li><tt>CANCEL_COMPLETE</tt>: The operation has been canceled.</li>
--   </ul>
--   
--   <a>$sel:operations:ResourceRequestStatusFilter'</a>,
--   <a>resourceRequestStatusFilter_operations</a> - The operation types to
--   include in the filter.
newResourceRequestStatusFilter :: ResourceRequestStatusFilter

-- | The operation statuses to include in the filter.
--   
--   <ul>
--   <li><tt>PENDING</tt>: The operation has been requested, but not yet
--   initiated.</li>
--   <li><tt>IN_PROGRESS</tt>: The operation is currently in progress.</li>
--   <li><tt>SUCCESS</tt>: The operation has successfully completed.</li>
--   <li><tt>FAILED</tt>: The operation has failed.</li>
--   <li><tt>CANCEL_IN_PROGRESS</tt>: The operation is currently in the
--   process of being canceled.</li>
--   <li><tt>CANCEL_COMPLETE</tt>: The operation has been canceled.</li>
--   </ul>
resourceRequestStatusFilter_operationStatuses :: Lens' ResourceRequestStatusFilter (Maybe [OperationStatus])

-- | The operation types to include in the filter.
resourceRequestStatusFilter_operations :: Lens' ResourceRequestStatusFilter (Maybe [Operation])
instance GHC.Generics.Generic Network.AWS.CloudControl.Types.ResourceRequestStatusFilter.ResourceRequestStatusFilter
instance GHC.Show.Show Network.AWS.CloudControl.Types.ResourceRequestStatusFilter.ResourceRequestStatusFilter
instance GHC.Read.Read Network.AWS.CloudControl.Types.ResourceRequestStatusFilter.ResourceRequestStatusFilter
instance GHC.Classes.Eq Network.AWS.CloudControl.Types.ResourceRequestStatusFilter.ResourceRequestStatusFilter
instance Data.Hashable.Class.Hashable Network.AWS.CloudControl.Types.ResourceRequestStatusFilter.ResourceRequestStatusFilter
instance Control.DeepSeq.NFData Network.AWS.CloudControl.Types.ResourceRequestStatusFilter.ResourceRequestStatusFilter
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudControl.Types.ResourceRequestStatusFilter.ResourceRequestStatusFilter


module Network.AWS.CloudControl.Types

-- | API version <tt>2021-09-30</tt> of the Amazon Cloud Control API SDK
--   configuration.
defaultService :: Service

-- | The specified extension does not exist in the CloudFormation registry.
_TypeNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The resource handler has returned that the downstream service
--   generated an error that does not map to any other handler error code.
_GeneralServiceException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The resource handler has failed without a returning a more specific
--   error code. This can include timeouts.
_HandlerFailureException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The resource handler has returned that invalid input from the user has
--   generated a generic exception.
_InvalidRequestException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Cloud Control API has not received a valid response from the resource
--   handler, due to a configuration error. This includes issues such as
--   the resource handler returning an invalid response, or timing out.
_PrivateTypeException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The resource handler has returned that the downstream service returned
--   an internal error, typically with a <tt>5XX HTTP</tt> status code.
_ServiceInternalErrorException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The resource handler has returned that an unexpected error occurred
--   within the resource handler.
_HandlerInternalFailureException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified client token has already been used in another resource
--   request.
--   
--   It is best practice for client tokens to be unique for each resource
--   operation request. However, client token expire after 36 hours.
_ClientTokenConflictException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A resource operation with the specified request token cannot be found.
_RequestTokenNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The resource handler has returned that the request could not be
--   completed due to networking issues, such as a failure to receive a
--   response from the server.
_NetworkFailureException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The resource handler has returned that the downstream resource failed
--   to complete all of its ready-state checks.
_NotStabilizedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | One or more properties included in this resource operation are defined
--   as create-only, and therefore cannot be updated.
_NotUpdatableException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified resource does not support this resource operation.
_UnsupportedActionException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The resource handler has returned that a non-transient resource limit
--   was reached on the service side.
_ServiceLimitExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request was denied due to request throttling.
_ThrottlingException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The resource is currently being modified by another operation.
_ConcurrentModificationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The resource is temporarily unavailable to be acted upon. For example,
--   if the resource is currently undergoing an operation and cannot be
--   acted upon until that operation is finished.
_ResourceConflictException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The resource handler has returned that the credentials provided by the
--   user are invalid.
_InvalidCredentialsException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A resource with the specified identifier cannot be found.
_ResourceNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Another resource operation is currently being performed on this
--   resource.
_ConcurrentOperationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The resource with the name requested already exists.
_AlreadyExistsException :: AsError a => Getting (First ServiceError) a ServiceError
newtype HandlerErrorCode
HandlerErrorCode' :: Text -> HandlerErrorCode
[fromHandlerErrorCode] :: HandlerErrorCode -> Text
pattern HandlerErrorCode_AccessDenied :: HandlerErrorCode
pattern HandlerErrorCode_AlreadyExists :: HandlerErrorCode
pattern HandlerErrorCode_GeneralServiceException :: HandlerErrorCode
pattern HandlerErrorCode_InternalFailure :: HandlerErrorCode
pattern HandlerErrorCode_InvalidCredentials :: HandlerErrorCode
pattern HandlerErrorCode_InvalidRequest :: HandlerErrorCode
pattern HandlerErrorCode_NetworkFailure :: HandlerErrorCode
pattern HandlerErrorCode_NotFound :: HandlerErrorCode
pattern HandlerErrorCode_NotStabilized :: HandlerErrorCode
pattern HandlerErrorCode_NotUpdatable :: HandlerErrorCode
pattern HandlerErrorCode_ResourceConflict :: HandlerErrorCode
pattern HandlerErrorCode_ServiceInternalError :: HandlerErrorCode
pattern HandlerErrorCode_ServiceLimitExceeded :: HandlerErrorCode
pattern HandlerErrorCode_ServiceTimeout :: HandlerErrorCode
pattern HandlerErrorCode_Throttling :: HandlerErrorCode
newtype Operation
Operation' :: Text -> Operation
[fromOperation] :: Operation -> Text
pattern Operation_CREATE :: Operation
pattern Operation_DELETE :: Operation
pattern Operation_UPDATE :: Operation
newtype OperationStatus
OperationStatus' :: Text -> OperationStatus
[fromOperationStatus] :: OperationStatus -> Text
pattern OperationStatus_CANCEL_COMPLETE :: OperationStatus
pattern OperationStatus_CANCEL_IN_PROGRESS :: OperationStatus
pattern OperationStatus_FAILED :: OperationStatus
pattern OperationStatus_IN_PROGRESS :: OperationStatus
pattern OperationStatus_PENDING :: OperationStatus
pattern OperationStatus_SUCCESS :: OperationStatus

-- | Represents the current status of a resource operation request. For
--   more information, see <a>Managing resource operation requests</a> in
--   the <i>Amazon Web Services Cloud Control API User Guide</i>.
--   
--   <i>See:</i> <a>newProgressEvent</a> smart constructor.
data ProgressEvent
ProgressEvent' :: Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe (Sensitive Text) -> Maybe Operation -> Maybe Text -> Maybe OperationStatus -> Maybe POSIX -> Maybe Text -> Maybe HandlerErrorCode -> ProgressEvent

-- | When to next request the status of this resource operation request.
[$sel:retryAfter:ProgressEvent'] :: ProgressEvent -> Maybe POSIX

-- | The name of the resource type used in the operation.
[$sel:typeName:ProgressEvent'] :: ProgressEvent -> Maybe Text

-- | The unique token representing this resource operation request.
--   
--   Use the <tt>RequestToken</tt> with <a>GetResourceRequestStatus</a> to
--   return the current status of a resource operation request.
[$sel:requestToken:ProgressEvent'] :: ProgressEvent -> Maybe Text

-- | A JSON string containing the resource model, consisting of each
--   resource property and its current value.
[$sel:resourceModel:ProgressEvent'] :: ProgressEvent -> Maybe (Sensitive Text)

-- | The resource operation type.
[$sel:operation:ProgressEvent'] :: ProgressEvent -> Maybe Operation

-- | The primary identifier for the resource.
--   
--   In some cases, the resource identifier may be available before the
--   resource operation has reached a status of <tt>SUCCESS</tt>.
[$sel:identifier:ProgressEvent'] :: ProgressEvent -> Maybe Text

-- | The current status of the resource operation request.
--   
--   <ul>
--   <li><tt>PENDING</tt>: The resource operation has not yet started.</li>
--   <li><tt>IN_PROGRESS</tt>: The resource operation is currently in
--   progress.</li>
--   <li><tt>SUCCESS</tt>: The resource operation has successfully
--   completed.</li>
--   <li><tt>FAILED</tt>: The resource operation has failed. Refer to the
--   error code and status message for more information.</li>
--   <li><tt>CANCEL_IN_PROGRESS</tt>: The resource operation is in the
--   process of being canceled.</li>
--   <li><tt>CANCEL_COMPLETE</tt>: The resource operation has been
--   canceled.</li>
--   </ul>
[$sel:operationStatus:ProgressEvent'] :: ProgressEvent -> Maybe OperationStatus

-- | When the resource operation request was initiated.
[$sel:eventTime:ProgressEvent'] :: ProgressEvent -> Maybe POSIX

-- | Any message explaining the current status.
[$sel:statusMessage:ProgressEvent'] :: ProgressEvent -> Maybe Text

-- | For requests with a status of <tt>FAILED</tt>, the associated error
--   code.
--   
--   For error code definitions, see <a>Handler error codes</a> in the
--   /CloudFormation Command Line Interface User Guide for Extension
--   Development/.
[$sel:errorCode:ProgressEvent'] :: ProgressEvent -> Maybe HandlerErrorCode

-- | Create a value of <a>ProgressEvent</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:retryAfter:ProgressEvent'</a>, <a>progressEvent_retryAfter</a>
--   - When to next request the status of this resource operation request.
--   
--   <a>$sel:typeName:ProgressEvent'</a>, <a>progressEvent_typeName</a> -
--   The name of the resource type used in the operation.
--   
--   <a>$sel:requestToken:ProgressEvent'</a>,
--   <a>progressEvent_requestToken</a> - The unique token representing this
--   resource operation request.
--   
--   Use the <tt>RequestToken</tt> with <a>GetResourceRequestStatus</a> to
--   return the current status of a resource operation request.
--   
--   <a>$sel:resourceModel:ProgressEvent'</a>,
--   <a>progressEvent_resourceModel</a> - A JSON string containing the
--   resource model, consisting of each resource property and its current
--   value.
--   
--   <a>$sel:operation:ProgressEvent'</a>, <a>progressEvent_operation</a> -
--   The resource operation type.
--   
--   <a>$sel:identifier:ProgressEvent'</a>, <a>progressEvent_identifier</a>
--   - The primary identifier for the resource.
--   
--   In some cases, the resource identifier may be available before the
--   resource operation has reached a status of <tt>SUCCESS</tt>.
--   
--   <a>$sel:operationStatus:ProgressEvent'</a>,
--   <a>progressEvent_operationStatus</a> - The current status of the
--   resource operation request.
--   
--   <ul>
--   <li><tt>PENDING</tt>: The resource operation has not yet started.</li>
--   <li><tt>IN_PROGRESS</tt>: The resource operation is currently in
--   progress.</li>
--   <li><tt>SUCCESS</tt>: The resource operation has successfully
--   completed.</li>
--   <li><tt>FAILED</tt>: The resource operation has failed. Refer to the
--   error code and status message for more information.</li>
--   <li><tt>CANCEL_IN_PROGRESS</tt>: The resource operation is in the
--   process of being canceled.</li>
--   <li><tt>CANCEL_COMPLETE</tt>: The resource operation has been
--   canceled.</li>
--   </ul>
--   
--   <a>$sel:eventTime:ProgressEvent'</a>, <a>progressEvent_eventTime</a> -
--   When the resource operation request was initiated.
--   
--   <a>$sel:statusMessage:ProgressEvent'</a>,
--   <a>progressEvent_statusMessage</a> - Any message explaining the
--   current status.
--   
--   <a>$sel:errorCode:ProgressEvent'</a>, <a>progressEvent_errorCode</a> -
--   For requests with a status of <tt>FAILED</tt>, the associated error
--   code.
--   
--   For error code definitions, see <a>Handler error codes</a> in the
--   /CloudFormation Command Line Interface User Guide for Extension
--   Development/.
newProgressEvent :: ProgressEvent

-- | When to next request the status of this resource operation request.
progressEvent_retryAfter :: Lens' ProgressEvent (Maybe UTCTime)

-- | The name of the resource type used in the operation.
progressEvent_typeName :: Lens' ProgressEvent (Maybe Text)

-- | The unique token representing this resource operation request.
--   
--   Use the <tt>RequestToken</tt> with <a>GetResourceRequestStatus</a> to
--   return the current status of a resource operation request.
progressEvent_requestToken :: Lens' ProgressEvent (Maybe Text)

-- | A JSON string containing the resource model, consisting of each
--   resource property and its current value.
progressEvent_resourceModel :: Lens' ProgressEvent (Maybe Text)

-- | The resource operation type.
progressEvent_operation :: Lens' ProgressEvent (Maybe Operation)

-- | The primary identifier for the resource.
--   
--   In some cases, the resource identifier may be available before the
--   resource operation has reached a status of <tt>SUCCESS</tt>.
progressEvent_identifier :: Lens' ProgressEvent (Maybe Text)

-- | The current status of the resource operation request.
--   
--   <ul>
--   <li><tt>PENDING</tt>: The resource operation has not yet started.</li>
--   <li><tt>IN_PROGRESS</tt>: The resource operation is currently in
--   progress.</li>
--   <li><tt>SUCCESS</tt>: The resource operation has successfully
--   completed.</li>
--   <li><tt>FAILED</tt>: The resource operation has failed. Refer to the
--   error code and status message for more information.</li>
--   <li><tt>CANCEL_IN_PROGRESS</tt>: The resource operation is in the
--   process of being canceled.</li>
--   <li><tt>CANCEL_COMPLETE</tt>: The resource operation has been
--   canceled.</li>
--   </ul>
progressEvent_operationStatus :: Lens' ProgressEvent (Maybe OperationStatus)

-- | When the resource operation request was initiated.
progressEvent_eventTime :: Lens' ProgressEvent (Maybe UTCTime)

-- | Any message explaining the current status.
progressEvent_statusMessage :: Lens' ProgressEvent (Maybe Text)

-- | For requests with a status of <tt>FAILED</tt>, the associated error
--   code.
--   
--   For error code definitions, see <a>Handler error codes</a> in the
--   /CloudFormation Command Line Interface User Guide for Extension
--   Development/.
progressEvent_errorCode :: Lens' ProgressEvent (Maybe HandlerErrorCode)

-- | Represents information about a provisioned resource.
--   
--   <i>See:</i> <a>newResourceDescription</a> smart constructor.
data ResourceDescription
ResourceDescription' :: Maybe Text -> Maybe (Sensitive Text) -> ResourceDescription

-- | The primary identifier for the resource.
--   
--   For more information, see <a>Identifying resources</a> in the
--   <i>Amazon Web Services Cloud Control API User Guide</i>.
[$sel:identifier:ResourceDescription'] :: ResourceDescription -> Maybe Text

-- | A list of the resource properties and their current values.
[$sel:properties:ResourceDescription'] :: ResourceDescription -> Maybe (Sensitive Text)

-- | Create a value of <a>ResourceDescription</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:identifier:ResourceDescription'</a>,
--   <a>resourceDescription_identifier</a> - The primary identifier for the
--   resource.
--   
--   For more information, see <a>Identifying resources</a> in the
--   <i>Amazon Web Services Cloud Control API User Guide</i>.
--   
--   <a>$sel:properties:ResourceDescription'</a>,
--   <a>resourceDescription_properties</a> - A list of the resource
--   properties and their current values.
newResourceDescription :: ResourceDescription

-- | The primary identifier for the resource.
--   
--   For more information, see <a>Identifying resources</a> in the
--   <i>Amazon Web Services Cloud Control API User Guide</i>.
resourceDescription_identifier :: Lens' ResourceDescription (Maybe Text)

-- | A list of the resource properties and their current values.
resourceDescription_properties :: Lens' ResourceDescription (Maybe Text)

-- | The filter criteria to use in determining the requests returned.
--   
--   <i>See:</i> <a>newResourceRequestStatusFilter</a> smart constructor.
data ResourceRequestStatusFilter
ResourceRequestStatusFilter' :: Maybe [OperationStatus] -> Maybe [Operation] -> ResourceRequestStatusFilter

-- | The operation statuses to include in the filter.
--   
--   <ul>
--   <li><tt>PENDING</tt>: The operation has been requested, but not yet
--   initiated.</li>
--   <li><tt>IN_PROGRESS</tt>: The operation is currently in progress.</li>
--   <li><tt>SUCCESS</tt>: The operation has successfully completed.</li>
--   <li><tt>FAILED</tt>: The operation has failed.</li>
--   <li><tt>CANCEL_IN_PROGRESS</tt>: The operation is currently in the
--   process of being canceled.</li>
--   <li><tt>CANCEL_COMPLETE</tt>: The operation has been canceled.</li>
--   </ul>
[$sel:operationStatuses:ResourceRequestStatusFilter'] :: ResourceRequestStatusFilter -> Maybe [OperationStatus]

-- | The operation types to include in the filter.
[$sel:operations:ResourceRequestStatusFilter'] :: ResourceRequestStatusFilter -> Maybe [Operation]

-- | Create a value of <a>ResourceRequestStatusFilter</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:operationStatuses:ResourceRequestStatusFilter'</a>,
--   <a>resourceRequestStatusFilter_operationStatuses</a> - The operation
--   statuses to include in the filter.
--   
--   <ul>
--   <li><tt>PENDING</tt>: The operation has been requested, but not yet
--   initiated.</li>
--   <li><tt>IN_PROGRESS</tt>: The operation is currently in progress.</li>
--   <li><tt>SUCCESS</tt>: The operation has successfully completed.</li>
--   <li><tt>FAILED</tt>: The operation has failed.</li>
--   <li><tt>CANCEL_IN_PROGRESS</tt>: The operation is currently in the
--   process of being canceled.</li>
--   <li><tt>CANCEL_COMPLETE</tt>: The operation has been canceled.</li>
--   </ul>
--   
--   <a>$sel:operations:ResourceRequestStatusFilter'</a>,
--   <a>resourceRequestStatusFilter_operations</a> - The operation types to
--   include in the filter.
newResourceRequestStatusFilter :: ResourceRequestStatusFilter

-- | The operation statuses to include in the filter.
--   
--   <ul>
--   <li><tt>PENDING</tt>: The operation has been requested, but not yet
--   initiated.</li>
--   <li><tt>IN_PROGRESS</tt>: The operation is currently in progress.</li>
--   <li><tt>SUCCESS</tt>: The operation has successfully completed.</li>
--   <li><tt>FAILED</tt>: The operation has failed.</li>
--   <li><tt>CANCEL_IN_PROGRESS</tt>: The operation is currently in the
--   process of being canceled.</li>
--   <li><tt>CANCEL_COMPLETE</tt>: The operation has been canceled.</li>
--   </ul>
resourceRequestStatusFilter_operationStatuses :: Lens' ResourceRequestStatusFilter (Maybe [OperationStatus])

-- | The operation types to include in the filter.
resourceRequestStatusFilter_operations :: Lens' ResourceRequestStatusFilter (Maybe [Operation])


-- | Returns information about the specified resources. For more
--   information, see <a>Discovering resources</a> in the <i>Amazon Web
--   Services Cloud Control API User Guide</i>.
--   
--   You can use this action to return information about existing resources
--   in your account and Amazon Web Services Region, whether or not those
--   resources were provisioned using Cloud Control API.
module Network.AWS.CloudControl.ListResources

-- | <i>See:</i> <a>newListResources</a> smart constructor.
data ListResources
ListResources' :: Maybe (Sensitive Text) -> Maybe Text -> Maybe Text -> Maybe Natural -> Maybe Text -> Text -> ListResources

-- | The resource model to use to select the resources to return.
[$sel:resourceModel:ListResources'] :: ListResources -> Maybe (Sensitive Text)

-- | If the previous paginated request didn't return all of the remaining
--   results, the response object's <tt>NextToken</tt> parameter value is
--   set to a token. To retrieve the next set of results, call this action
--   again and assign that token to the request object's <tt>NextToken</tt>
--   parameter. If there are no remaining results, the previous response
--   object's <tt>NextToken</tt> parameter is set to <tt>null</tt>.
[$sel:nextToken:ListResources'] :: ListResources -> Maybe Text

-- | For private resource types, the type version to use in this resource
--   operation. If you do not specify a resource version, CloudFormation
--   uses the default version.
[$sel:typeVersionId:ListResources'] :: ListResources -> Maybe Text

-- | The maximum number of results to be returned with a single call. If
--   the number of available results exceeds this maximum, the response
--   includes a <tt>NextToken</tt> value that you can assign to the
--   <tt>NextToken</tt> request parameter to get the next set of results.
--   
--   The default is <tt>20</tt>.
[$sel:maxResults:ListResources'] :: ListResources -> Maybe Natural

-- | The Amazon Resource Name (ARN) of the Identity and Access Management
--   (IAM) for Cloud Control API to use when performing this resource
--   operation. The role specified must have the permissions required for
--   this operation. The necessary permissions for each event handler are
--   defined in the <tt> handlers </tt> section of the <a>resource type
--   definition schema</a>.
--   
--   If you do not specify a role, Cloud Control API uses a temporary
--   session created using your Amazon Web Services user credentials.
--   
--   For more information, see <a>Specifying credentials</a> in the
--   <i>Amazon Web Services Cloud Control API User Guide</i>.
[$sel:roleArn:ListResources'] :: ListResources -> Maybe Text

-- | The name of the resource type.
[$sel:typeName:ListResources'] :: ListResources -> Text

-- | Create a value of <a>ListResources</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceModel:ListResources'</a>,
--   <a>listResources_resourceModel</a> - The resource model to use to
--   select the resources to return.
--   
--   <a>$sel:nextToken:ListResources'</a>, <a>listResources_nextToken</a> -
--   If the previous paginated request didn't return all of the remaining
--   results, the response object's <tt>NextToken</tt> parameter value is
--   set to a token. To retrieve the next set of results, call this action
--   again and assign that token to the request object's <tt>NextToken</tt>
--   parameter. If there are no remaining results, the previous response
--   object's <tt>NextToken</tt> parameter is set to <tt>null</tt>.
--   
--   <a>$sel:typeVersionId:ListResources'</a>,
--   <a>listResources_typeVersionId</a> - For private resource types, the
--   type version to use in this resource operation. If you do not specify
--   a resource version, CloudFormation uses the default version.
--   
--   <a>$sel:maxResults:ListResources'</a>, <a>listResources_maxResults</a>
--   - The maximum number of results to be returned with a single call. If
--   the number of available results exceeds this maximum, the response
--   includes a <tt>NextToken</tt> value that you can assign to the
--   <tt>NextToken</tt> request parameter to get the next set of results.
--   
--   The default is <tt>20</tt>.
--   
--   <a>$sel:roleArn:ListResources'</a>, <a>listResources_roleArn</a> - The
--   Amazon Resource Name (ARN) of the Identity and Access Management (IAM)
--   for Cloud Control API to use when performing this resource operation.
--   The role specified must have the permissions required for this
--   operation. The necessary permissions for each event handler are
--   defined in the <tt> handlers </tt> section of the <a>resource type
--   definition schema</a>.
--   
--   If you do not specify a role, Cloud Control API uses a temporary
--   session created using your Amazon Web Services user credentials.
--   
--   For more information, see <a>Specifying credentials</a> in the
--   <i>Amazon Web Services Cloud Control API User Guide</i>.
--   
--   <a>$sel:typeName:ListResources'</a>, <a>listResources_typeName</a> -
--   The name of the resource type.
newListResources :: Text -> ListResources

-- | The resource model to use to select the resources to return.
listResources_resourceModel :: Lens' ListResources (Maybe Text)

-- | If the previous paginated request didn't return all of the remaining
--   results, the response object's <tt>NextToken</tt> parameter value is
--   set to a token. To retrieve the next set of results, call this action
--   again and assign that token to the request object's <tt>NextToken</tt>
--   parameter. If there are no remaining results, the previous response
--   object's <tt>NextToken</tt> parameter is set to <tt>null</tt>.
listResources_nextToken :: Lens' ListResources (Maybe Text)

-- | For private resource types, the type version to use in this resource
--   operation. If you do not specify a resource version, CloudFormation
--   uses the default version.
listResources_typeVersionId :: Lens' ListResources (Maybe Text)

-- | The maximum number of results to be returned with a single call. If
--   the number of available results exceeds this maximum, the response
--   includes a <tt>NextToken</tt> value that you can assign to the
--   <tt>NextToken</tt> request parameter to get the next set of results.
--   
--   The default is <tt>20</tt>.
listResources_maxResults :: Lens' ListResources (Maybe Natural)

-- | The Amazon Resource Name (ARN) of the Identity and Access Management
--   (IAM) for Cloud Control API to use when performing this resource
--   operation. The role specified must have the permissions required for
--   this operation. The necessary permissions for each event handler are
--   defined in the <tt> handlers </tt> section of the <a>resource type
--   definition schema</a>.
--   
--   If you do not specify a role, Cloud Control API uses a temporary
--   session created using your Amazon Web Services user credentials.
--   
--   For more information, see <a>Specifying credentials</a> in the
--   <i>Amazon Web Services Cloud Control API User Guide</i>.
listResources_roleArn :: Lens' ListResources (Maybe Text)

-- | The name of the resource type.
listResources_typeName :: Lens' ListResources Text

-- | <i>See:</i> <a>newListResourcesResponse</a> smart constructor.
data ListResourcesResponse
ListResourcesResponse' :: Maybe [ResourceDescription] -> Maybe Text -> Maybe Text -> Int -> ListResourcesResponse

-- | Information about the specified resources, including primary
--   identifier and resource model.
[$sel:resourceDescriptions:ListResourcesResponse'] :: ListResourcesResponse -> Maybe [ResourceDescription]

-- | The name of the resource type.
[$sel:typeName:ListResourcesResponse'] :: ListResourcesResponse -> Maybe Text

-- | If the request doesn't return all of the remaining results,
--   <tt>NextToken</tt> is set to a token. To retrieve the next set of
--   results, call <tt>ListResources</tt> again and assign that token to
--   the request object's <tt>NextToken</tt> parameter. If the request
--   returns all results, <tt>NextToken</tt> is set to null.
[$sel:nextToken:ListResourcesResponse'] :: ListResourcesResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListResourcesResponse'] :: ListResourcesResponse -> Int

-- | Create a value of <a>ListResourcesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceDescriptions:ListResourcesResponse'</a>,
--   <a>listResourcesResponse_resourceDescriptions</a> - Information about
--   the specified resources, including primary identifier and resource
--   model.
--   
--   <a>$sel:typeName:ListResources'</a>,
--   <a>listResourcesResponse_typeName</a> - The name of the resource type.
--   
--   <a>$sel:nextToken:ListResources'</a>,
--   <a>listResourcesResponse_nextToken</a> - If the request doesn't return
--   all of the remaining results, <tt>NextToken</tt> is set to a token. To
--   retrieve the next set of results, call <tt>ListResources</tt> again
--   and assign that token to the request object's <tt>NextToken</tt>
--   parameter. If the request returns all results, <tt>NextToken</tt> is
--   set to null.
--   
--   <a>$sel:httpStatus:ListResourcesResponse'</a>,
--   <a>listResourcesResponse_httpStatus</a> - The response's http status
--   code.
newListResourcesResponse :: Int -> ListResourcesResponse

-- | Information about the specified resources, including primary
--   identifier and resource model.
listResourcesResponse_resourceDescriptions :: Lens' ListResourcesResponse (Maybe [ResourceDescription])

-- | The name of the resource type.
listResourcesResponse_typeName :: Lens' ListResourcesResponse (Maybe Text)

-- | If the request doesn't return all of the remaining results,
--   <tt>NextToken</tt> is set to a token. To retrieve the next set of
--   results, call <tt>ListResources</tt> again and assign that token to
--   the request object's <tt>NextToken</tt> parameter. If the request
--   returns all results, <tt>NextToken</tt> is set to null.
listResourcesResponse_nextToken :: Lens' ListResourcesResponse (Maybe Text)

-- | The response's http status code.
listResourcesResponse_httpStatus :: Lens' ListResourcesResponse Int
instance GHC.Generics.Generic Network.AWS.CloudControl.ListResources.ListResources
instance GHC.Show.Show Network.AWS.CloudControl.ListResources.ListResources
instance GHC.Classes.Eq Network.AWS.CloudControl.ListResources.ListResources
instance GHC.Generics.Generic Network.AWS.CloudControl.ListResources.ListResourcesResponse
instance GHC.Show.Show Network.AWS.CloudControl.ListResources.ListResourcesResponse
instance GHC.Classes.Eq Network.AWS.CloudControl.ListResources.ListResourcesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudControl.ListResources.ListResources
instance Control.DeepSeq.NFData Network.AWS.CloudControl.ListResources.ListResourcesResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudControl.ListResources.ListResources
instance Control.DeepSeq.NFData Network.AWS.CloudControl.ListResources.ListResources
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudControl.ListResources.ListResources
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudControl.ListResources.ListResources
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudControl.ListResources.ListResources
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudControl.ListResources.ListResources


-- | Returns existing resource operation requests. This includes requests
--   of all status types. For more information, see <a>Listing active
--   resource operation requests</a> in the <i>Amazon Web Services Cloud
--   Control API User Guide</i>.
--   
--   Resource operation requests expire after seven days.
module Network.AWS.CloudControl.ListResourceRequests

-- | <i>See:</i> <a>newListResourceRequests</a> smart constructor.
data ListResourceRequests
ListResourceRequests' :: Maybe Text -> Maybe ResourceRequestStatusFilter -> Maybe Natural -> ListResourceRequests

-- | If the previous paginated request didn't return all of the remaining
--   results, the response object's <tt>NextToken</tt> parameter value is
--   set to a token. To retrieve the next set of results, call this action
--   again and assign that token to the request object's <tt>NextToken</tt>
--   parameter. If there are no remaining results, the previous response
--   object's <tt>NextToken</tt> parameter is set to <tt>null</tt>.
[$sel:nextToken:ListResourceRequests'] :: ListResourceRequests -> Maybe Text

-- | The filter criteria to apply to the requests returned.
[$sel:resourceRequestStatusFilter:ListResourceRequests'] :: ListResourceRequests -> Maybe ResourceRequestStatusFilter

-- | The maximum number of results to be returned with a single call. If
--   the number of available results exceeds this maximum, the response
--   includes a <tt>NextToken</tt> value that you can assign to the
--   <tt>NextToken</tt> request parameter to get the next set of results.
--   
--   The default is <tt>20</tt>.
[$sel:maxResults:ListResourceRequests'] :: ListResourceRequests -> Maybe Natural

-- | Create a value of <a>ListResourceRequests</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListResourceRequests'</a>,
--   <a>listResourceRequests_nextToken</a> - If the previous paginated
--   request didn't return all of the remaining results, the response
--   object's <tt>NextToken</tt> parameter value is set to a token. To
--   retrieve the next set of results, call this action again and assign
--   that token to the request object's <tt>NextToken</tt> parameter. If
--   there are no remaining results, the previous response object's
--   <tt>NextToken</tt> parameter is set to <tt>null</tt>.
--   
--   <a>$sel:resourceRequestStatusFilter:ListResourceRequests'</a>,
--   <a>listResourceRequests_resourceRequestStatusFilter</a> - The filter
--   criteria to apply to the requests returned.
--   
--   <a>$sel:maxResults:ListResourceRequests'</a>,
--   <a>listResourceRequests_maxResults</a> - The maximum number of results
--   to be returned with a single call. If the number of available results
--   exceeds this maximum, the response includes a <tt>NextToken</tt> value
--   that you can assign to the <tt>NextToken</tt> request parameter to get
--   the next set of results.
--   
--   The default is <tt>20</tt>.
newListResourceRequests :: ListResourceRequests

-- | If the previous paginated request didn't return all of the remaining
--   results, the response object's <tt>NextToken</tt> parameter value is
--   set to a token. To retrieve the next set of results, call this action
--   again and assign that token to the request object's <tt>NextToken</tt>
--   parameter. If there are no remaining results, the previous response
--   object's <tt>NextToken</tt> parameter is set to <tt>null</tt>.
listResourceRequests_nextToken :: Lens' ListResourceRequests (Maybe Text)

-- | The filter criteria to apply to the requests returned.
listResourceRequests_resourceRequestStatusFilter :: Lens' ListResourceRequests (Maybe ResourceRequestStatusFilter)

-- | The maximum number of results to be returned with a single call. If
--   the number of available results exceeds this maximum, the response
--   includes a <tt>NextToken</tt> value that you can assign to the
--   <tt>NextToken</tt> request parameter to get the next set of results.
--   
--   The default is <tt>20</tt>.
listResourceRequests_maxResults :: Lens' ListResourceRequests (Maybe Natural)

-- | <i>See:</i> <a>newListResourceRequestsResponse</a> smart constructor.
data ListResourceRequestsResponse
ListResourceRequestsResponse' :: Maybe [ProgressEvent] -> Maybe Text -> Int -> ListResourceRequestsResponse

-- | The requests that match the specified filter criteria.
[$sel:resourceRequestStatusSummaries:ListResourceRequestsResponse'] :: ListResourceRequestsResponse -> Maybe [ProgressEvent]

-- | If the request doesn't return all of the remaining results,
--   <tt>NextToken</tt> is set to a token. To retrieve the next set of
--   results, call <tt>ListResources</tt> again and assign that token to
--   the request object's <tt>NextToken</tt> parameter. If the request
--   returns all results, <tt>NextToken</tt> is set to null.
[$sel:nextToken:ListResourceRequestsResponse'] :: ListResourceRequestsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListResourceRequestsResponse'] :: ListResourceRequestsResponse -> Int

-- | Create a value of <a>ListResourceRequestsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:resourceRequestStatusSummaries:ListResourceRequestsResponse'</a>,
--   <a>listResourceRequestsResponse_resourceRequestStatusSummaries</a> -
--   The requests that match the specified filter criteria.
--   
--   <a>$sel:nextToken:ListResourceRequests'</a>,
--   <a>listResourceRequestsResponse_nextToken</a> - If the request doesn't
--   return all of the remaining results, <tt>NextToken</tt> is set to a
--   token. To retrieve the next set of results, call
--   <tt>ListResources</tt> again and assign that token to the request
--   object's <tt>NextToken</tt> parameter. If the request returns all
--   results, <tt>NextToken</tt> is set to null.
--   
--   <a>$sel:httpStatus:ListResourceRequestsResponse'</a>,
--   <a>listResourceRequestsResponse_httpStatus</a> - The response's http
--   status code.
newListResourceRequestsResponse :: Int -> ListResourceRequestsResponse

-- | The requests that match the specified filter criteria.
listResourceRequestsResponse_resourceRequestStatusSummaries :: Lens' ListResourceRequestsResponse (Maybe [ProgressEvent])

-- | If the request doesn't return all of the remaining results,
--   <tt>NextToken</tt> is set to a token. To retrieve the next set of
--   results, call <tt>ListResources</tt> again and assign that token to
--   the request object's <tt>NextToken</tt> parameter. If the request
--   returns all results, <tt>NextToken</tt> is set to null.
listResourceRequestsResponse_nextToken :: Lens' ListResourceRequestsResponse (Maybe Text)

-- | The response's http status code.
listResourceRequestsResponse_httpStatus :: Lens' ListResourceRequestsResponse Int
instance GHC.Generics.Generic Network.AWS.CloudControl.ListResourceRequests.ListResourceRequests
instance GHC.Show.Show Network.AWS.CloudControl.ListResourceRequests.ListResourceRequests
instance GHC.Read.Read Network.AWS.CloudControl.ListResourceRequests.ListResourceRequests
instance GHC.Classes.Eq Network.AWS.CloudControl.ListResourceRequests.ListResourceRequests
instance GHC.Generics.Generic Network.AWS.CloudControl.ListResourceRequests.ListResourceRequestsResponse
instance GHC.Show.Show Network.AWS.CloudControl.ListResourceRequests.ListResourceRequestsResponse
instance GHC.Classes.Eq Network.AWS.CloudControl.ListResourceRequests.ListResourceRequestsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudControl.ListResourceRequests.ListResourceRequests
instance Control.DeepSeq.NFData Network.AWS.CloudControl.ListResourceRequests.ListResourceRequestsResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudControl.ListResourceRequests.ListResourceRequests
instance Control.DeepSeq.NFData Network.AWS.CloudControl.ListResourceRequests.ListResourceRequests
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudControl.ListResourceRequests.ListResourceRequests
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudControl.ListResourceRequests.ListResourceRequests
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudControl.ListResourceRequests.ListResourceRequests
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudControl.ListResourceRequests.ListResourceRequests


-- | Returns the current status of a resource operation request. For more
--   information, see <a>Tracking the progress of resource operation
--   requests</a> in the <i>Amazon Web Services Cloud Control API User
--   Guide</i>.
module Network.AWS.CloudControl.GetResourceRequestStatus

-- | <i>See:</i> <a>newGetResourceRequestStatus</a> smart constructor.
data GetResourceRequestStatus
GetResourceRequestStatus' :: Text -> GetResourceRequestStatus

-- | A unique token used to track the progress of the resource operation
--   request.
--   
--   Request tokens are included in the <tt>ProgressEvent</tt> type
--   returned by a resource operation request.
[$sel:requestToken:GetResourceRequestStatus'] :: GetResourceRequestStatus -> Text

-- | Create a value of <a>GetResourceRequestStatus</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:requestToken:GetResourceRequestStatus'</a>,
--   <a>getResourceRequestStatus_requestToken</a> - A unique token used to
--   track the progress of the resource operation request.
--   
--   Request tokens are included in the <tt>ProgressEvent</tt> type
--   returned by a resource operation request.
newGetResourceRequestStatus :: Text -> GetResourceRequestStatus

-- | A unique token used to track the progress of the resource operation
--   request.
--   
--   Request tokens are included in the <tt>ProgressEvent</tt> type
--   returned by a resource operation request.
getResourceRequestStatus_requestToken :: Lens' GetResourceRequestStatus Text

-- | <i>See:</i> <a>newGetResourceRequestStatusResponse</a> smart
--   constructor.
data GetResourceRequestStatusResponse
GetResourceRequestStatusResponse' :: Maybe ProgressEvent -> Int -> GetResourceRequestStatusResponse

-- | Represents the current status of the resource operation request.
[$sel:progressEvent:GetResourceRequestStatusResponse'] :: GetResourceRequestStatusResponse -> Maybe ProgressEvent

-- | The response's http status code.
[$sel:httpStatus:GetResourceRequestStatusResponse'] :: GetResourceRequestStatusResponse -> Int

-- | Create a value of <a>GetResourceRequestStatusResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:progressEvent:GetResourceRequestStatusResponse'</a>,
--   <a>getResourceRequestStatusResponse_progressEvent</a> - Represents the
--   current status of the resource operation request.
--   
--   <a>$sel:httpStatus:GetResourceRequestStatusResponse'</a>,
--   <a>getResourceRequestStatusResponse_httpStatus</a> - The response's
--   http status code.
newGetResourceRequestStatusResponse :: Int -> GetResourceRequestStatusResponse

-- | Represents the current status of the resource operation request.
getResourceRequestStatusResponse_progressEvent :: Lens' GetResourceRequestStatusResponse (Maybe ProgressEvent)

-- | The response's http status code.
getResourceRequestStatusResponse_httpStatus :: Lens' GetResourceRequestStatusResponse Int
instance GHC.Generics.Generic Network.AWS.CloudControl.GetResourceRequestStatus.GetResourceRequestStatus
instance GHC.Show.Show Network.AWS.CloudControl.GetResourceRequestStatus.GetResourceRequestStatus
instance GHC.Read.Read Network.AWS.CloudControl.GetResourceRequestStatus.GetResourceRequestStatus
instance GHC.Classes.Eq Network.AWS.CloudControl.GetResourceRequestStatus.GetResourceRequestStatus
instance GHC.Generics.Generic Network.AWS.CloudControl.GetResourceRequestStatus.GetResourceRequestStatusResponse
instance GHC.Show.Show Network.AWS.CloudControl.GetResourceRequestStatus.GetResourceRequestStatusResponse
instance GHC.Classes.Eq Network.AWS.CloudControl.GetResourceRequestStatus.GetResourceRequestStatusResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudControl.GetResourceRequestStatus.GetResourceRequestStatus
instance Control.DeepSeq.NFData Network.AWS.CloudControl.GetResourceRequestStatus.GetResourceRequestStatusResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudControl.GetResourceRequestStatus.GetResourceRequestStatus
instance Control.DeepSeq.NFData Network.AWS.CloudControl.GetResourceRequestStatus.GetResourceRequestStatus
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudControl.GetResourceRequestStatus.GetResourceRequestStatus
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudControl.GetResourceRequestStatus.GetResourceRequestStatus
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudControl.GetResourceRequestStatus.GetResourceRequestStatus
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudControl.GetResourceRequestStatus.GetResourceRequestStatus


-- | Returns information about the current state of the specified resource.
--   For details, see <a>Reading a resource's current state</a>.
--   
--   You can use this action to return information about an existing
--   resource in your account and Amazon Web Services Region, whether or
--   not those resources were provisioned using Cloud Control API.
module Network.AWS.CloudControl.GetResource

-- | <i>See:</i> <a>newGetResource</a> smart constructor.
data GetResource
GetResource' :: Maybe Text -> Maybe Text -> Text -> Text -> GetResource

-- | For private resource types, the type version to use in this resource
--   operation. If you do not specify a resource version, CloudFormation
--   uses the default version.
[$sel:typeVersionId:GetResource'] :: GetResource -> Maybe Text

-- | The Amazon Resource Name (ARN) of the Identity and Access Management
--   (IAM) for Cloud Control API to use when performing this resource
--   operation. The role specified must have the permissions required for
--   this operation. The necessary permissions for each event handler are
--   defined in the <tt> handlers </tt> section of the <a>resource type
--   definition schema</a>.
--   
--   If you do not specify a role, Cloud Control API uses a temporary
--   session created using your Amazon Web Services user credentials.
--   
--   For more information, see <a>Specifying credentials</a> in the
--   <i>Amazon Web Services Cloud Control API User Guide</i>.
[$sel:roleArn:GetResource'] :: GetResource -> Maybe Text

-- | The name of the resource type.
[$sel:typeName:GetResource'] :: GetResource -> Text

-- | The identifier for the resource.
--   
--   You can specify the primary identifier, or any secondary identifier
--   defined for the resource type in its resource schema. You can only
--   specify one identifier. Primary identifiers can be specified as a
--   string or JSON; secondary identifiers must be specified as JSON.
--   
--   For compound primary identifiers (that is, one that consists of
--   multiple resource properties strung together), to specify the primary
--   identifier as a string, list the property values <i>in the order they
--   are specified</i> in the primary identifier definition, separated by
--   <tt>|</tt>.
--   
--   For more information, see <a>Identifying resources</a> in the
--   <i>Amazon Web Services Cloud Control API User Guide</i>.
[$sel:identifier:GetResource'] :: GetResource -> Text

-- | Create a value of <a>GetResource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:typeVersionId:GetResource'</a>,
--   <a>getResource_typeVersionId</a> - For private resource types, the
--   type version to use in this resource operation. If you do not specify
--   a resource version, CloudFormation uses the default version.
--   
--   <a>$sel:roleArn:GetResource'</a>, <a>getResource_roleArn</a> - The
--   Amazon Resource Name (ARN) of the Identity and Access Management (IAM)
--   for Cloud Control API to use when performing this resource operation.
--   The role specified must have the permissions required for this
--   operation. The necessary permissions for each event handler are
--   defined in the <tt> handlers </tt> section of the <a>resource type
--   definition schema</a>.
--   
--   If you do not specify a role, Cloud Control API uses a temporary
--   session created using your Amazon Web Services user credentials.
--   
--   For more information, see <a>Specifying credentials</a> in the
--   <i>Amazon Web Services Cloud Control API User Guide</i>.
--   
--   <a>$sel:typeName:GetResource'</a>, <a>getResource_typeName</a> - The
--   name of the resource type.
--   
--   <a>$sel:identifier:GetResource'</a>, <a>getResource_identifier</a> -
--   The identifier for the resource.
--   
--   You can specify the primary identifier, or any secondary identifier
--   defined for the resource type in its resource schema. You can only
--   specify one identifier. Primary identifiers can be specified as a
--   string or JSON; secondary identifiers must be specified as JSON.
--   
--   For compound primary identifiers (that is, one that consists of
--   multiple resource properties strung together), to specify the primary
--   identifier as a string, list the property values <i>in the order they
--   are specified</i> in the primary identifier definition, separated by
--   <tt>|</tt>.
--   
--   For more information, see <a>Identifying resources</a> in the
--   <i>Amazon Web Services Cloud Control API User Guide</i>.
newGetResource :: Text -> Text -> GetResource

-- | For private resource types, the type version to use in this resource
--   operation. If you do not specify a resource version, CloudFormation
--   uses the default version.
getResource_typeVersionId :: Lens' GetResource (Maybe Text)

-- | The Amazon Resource Name (ARN) of the Identity and Access Management
--   (IAM) for Cloud Control API to use when performing this resource
--   operation. The role specified must have the permissions required for
--   this operation. The necessary permissions for each event handler are
--   defined in the <tt> handlers </tt> section of the <a>resource type
--   definition schema</a>.
--   
--   If you do not specify a role, Cloud Control API uses a temporary
--   session created using your Amazon Web Services user credentials.
--   
--   For more information, see <a>Specifying credentials</a> in the
--   <i>Amazon Web Services Cloud Control API User Guide</i>.
getResource_roleArn :: Lens' GetResource (Maybe Text)

-- | The name of the resource type.
getResource_typeName :: Lens' GetResource Text

-- | The identifier for the resource.
--   
--   You can specify the primary identifier, or any secondary identifier
--   defined for the resource type in its resource schema. You can only
--   specify one identifier. Primary identifiers can be specified as a
--   string or JSON; secondary identifiers must be specified as JSON.
--   
--   For compound primary identifiers (that is, one that consists of
--   multiple resource properties strung together), to specify the primary
--   identifier as a string, list the property values <i>in the order they
--   are specified</i> in the primary identifier definition, separated by
--   <tt>|</tt>.
--   
--   For more information, see <a>Identifying resources</a> in the
--   <i>Amazon Web Services Cloud Control API User Guide</i>.
getResource_identifier :: Lens' GetResource Text

-- | <i>See:</i> <a>newGetResourceResponse</a> smart constructor.
data GetResourceResponse
GetResourceResponse' :: Maybe Text -> Maybe ResourceDescription -> Int -> GetResourceResponse

-- | The name of the resource type.
[$sel:typeName:GetResourceResponse'] :: GetResourceResponse -> Maybe Text
[$sel:resourceDescription:GetResourceResponse'] :: GetResourceResponse -> Maybe ResourceDescription

-- | The response's http status code.
[$sel:httpStatus:GetResourceResponse'] :: GetResourceResponse -> Int

-- | Create a value of <a>GetResourceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:typeName:GetResource'</a>, <a>getResourceResponse_typeName</a>
--   - The name of the resource type.
--   
--   <a>$sel:resourceDescription:GetResourceResponse'</a>,
--   <a>getResourceResponse_resourceDescription</a> - Undocumented member.
--   
--   <a>$sel:httpStatus:GetResourceResponse'</a>,
--   <a>getResourceResponse_httpStatus</a> - The response's http status
--   code.
newGetResourceResponse :: Int -> GetResourceResponse

-- | The name of the resource type.
getResourceResponse_typeName :: Lens' GetResourceResponse (Maybe Text)

-- | Undocumented member.
getResourceResponse_resourceDescription :: Lens' GetResourceResponse (Maybe ResourceDescription)

-- | The response's http status code.
getResourceResponse_httpStatus :: Lens' GetResourceResponse Int
instance GHC.Generics.Generic Network.AWS.CloudControl.GetResource.GetResource
instance GHC.Show.Show Network.AWS.CloudControl.GetResource.GetResource
instance GHC.Read.Read Network.AWS.CloudControl.GetResource.GetResource
instance GHC.Classes.Eq Network.AWS.CloudControl.GetResource.GetResource
instance GHC.Generics.Generic Network.AWS.CloudControl.GetResource.GetResourceResponse
instance GHC.Show.Show Network.AWS.CloudControl.GetResource.GetResourceResponse
instance GHC.Classes.Eq Network.AWS.CloudControl.GetResource.GetResourceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudControl.GetResource.GetResource
instance Control.DeepSeq.NFData Network.AWS.CloudControl.GetResource.GetResourceResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudControl.GetResource.GetResource
instance Control.DeepSeq.NFData Network.AWS.CloudControl.GetResource.GetResource
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudControl.GetResource.GetResource
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudControl.GetResource.GetResource
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudControl.GetResource.GetResource
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudControl.GetResource.GetResource


-- | Deletes the specified resource. For details, see <a>Deleting a
--   resource</a> in the <i>Amazon Web Services Cloud Control API User
--   Guide</i>.
--   
--   After you have initiated a resource deletion request, you can monitor
--   the progress of your request by calling
--   <a>GetResourceRequestStatus</a> using the <tt>RequestToken</tt> of the
--   <tt>ProgressEvent</tt> returned by <tt>DeleteResource</tt>.
module Network.AWS.CloudControl.DeleteResource

-- | <i>See:</i> <a>newDeleteResource</a> smart constructor.
data DeleteResource
DeleteResource' :: Maybe Text -> Maybe Text -> Maybe Text -> Text -> Text -> DeleteResource

-- | A unique identifier to ensure the idempotency of the resource request.
--   As a best practice, specify this token to ensure idempotency, so that
--   Amazon Web Services Cloud Control API can accurately distinguish
--   between request retries and new resource requests. You might retry a
--   resource request to ensure that it was successfully received.
--   
--   A client token is valid for 36 hours once used. After that, a resource
--   request with the same client token is treated as a new request.
--   
--   If you do not specify a client token, one is generated for inclusion
--   in the request.
--   
--   For more information, see <a>Ensuring resource operation requests are
--   unique</a> in the <i>Amazon Web Services Cloud Control API User
--   Guide</i>.
[$sel:clientToken:DeleteResource'] :: DeleteResource -> Maybe Text

-- | For private resource types, the type version to use in this resource
--   operation. If you do not specify a resource version, CloudFormation
--   uses the default version.
[$sel:typeVersionId:DeleteResource'] :: DeleteResource -> Maybe Text

-- | The Amazon Resource Name (ARN) of the Identity and Access Management
--   (IAM) for Cloud Control API to use when performing this resource
--   operation. The role specified must have the permissions required for
--   this operation. The necessary permissions for each event handler are
--   defined in the <tt> handlers </tt> section of the <a>resource type
--   definition schema</a>.
--   
--   If you do not specify a role, Cloud Control API uses a temporary
--   session created using your Amazon Web Services user credentials.
--   
--   For more information, see <a>Specifying credentials</a> in the
--   <i>Amazon Web Services Cloud Control API User Guide</i>.
[$sel:roleArn:DeleteResource'] :: DeleteResource -> Maybe Text

-- | The name of the resource type.
[$sel:typeName:DeleteResource'] :: DeleteResource -> Text

-- | The identifier for the resource.
--   
--   You can specify the primary identifier, or any secondary identifier
--   defined for the resource type in its resource schema. You can only
--   specify one identifier. Primary identifiers can be specified as a
--   string or JSON; secondary identifiers must be specified as JSON.
--   
--   For compound primary identifiers (that is, one that consists of
--   multiple resource properties strung together), to specify the primary
--   identifier as a string, list the property values <i>in the order they
--   are specified</i> in the primary identifier definition, separated by
--   <tt>|</tt>.
--   
--   For more information, see <a>Identifying resources</a> in the
--   <i>Amazon Web Services Cloud Control API User Guide</i>.
[$sel:identifier:DeleteResource'] :: DeleteResource -> Text

-- | Create a value of <a>DeleteResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientToken:DeleteResource'</a>,
--   <a>deleteResource_clientToken</a> - A unique identifier to ensure the
--   idempotency of the resource request. As a best practice, specify this
--   token to ensure idempotency, so that Amazon Web Services Cloud Control
--   API can accurately distinguish between request retries and new
--   resource requests. You might retry a resource request to ensure that
--   it was successfully received.
--   
--   A client token is valid for 36 hours once used. After that, a resource
--   request with the same client token is treated as a new request.
--   
--   If you do not specify a client token, one is generated for inclusion
--   in the request.
--   
--   For more information, see <a>Ensuring resource operation requests are
--   unique</a> in the <i>Amazon Web Services Cloud Control API User
--   Guide</i>.
--   
--   <a>$sel:typeVersionId:DeleteResource'</a>,
--   <a>deleteResource_typeVersionId</a> - For private resource types, the
--   type version to use in this resource operation. If you do not specify
--   a resource version, CloudFormation uses the default version.
--   
--   <a>$sel:roleArn:DeleteResource'</a>, <a>deleteResource_roleArn</a> -
--   The Amazon Resource Name (ARN) of the Identity and Access Management
--   (IAM) for Cloud Control API to use when performing this resource
--   operation. The role specified must have the permissions required for
--   this operation. The necessary permissions for each event handler are
--   defined in the <tt> handlers </tt> section of the <a>resource type
--   definition schema</a>.
--   
--   If you do not specify a role, Cloud Control API uses a temporary
--   session created using your Amazon Web Services user credentials.
--   
--   For more information, see <a>Specifying credentials</a> in the
--   <i>Amazon Web Services Cloud Control API User Guide</i>.
--   
--   <a>$sel:typeName:DeleteResource'</a>, <a>deleteResource_typeName</a> -
--   The name of the resource type.
--   
--   <a>$sel:identifier:DeleteResource'</a>,
--   <a>deleteResource_identifier</a> - The identifier for the resource.
--   
--   You can specify the primary identifier, or any secondary identifier
--   defined for the resource type in its resource schema. You can only
--   specify one identifier. Primary identifiers can be specified as a
--   string or JSON; secondary identifiers must be specified as JSON.
--   
--   For compound primary identifiers (that is, one that consists of
--   multiple resource properties strung together), to specify the primary
--   identifier as a string, list the property values <i>in the order they
--   are specified</i> in the primary identifier definition, separated by
--   <tt>|</tt>.
--   
--   For more information, see <a>Identifying resources</a> in the
--   <i>Amazon Web Services Cloud Control API User Guide</i>.
newDeleteResource :: Text -> Text -> DeleteResource

-- | A unique identifier to ensure the idempotency of the resource request.
--   As a best practice, specify this token to ensure idempotency, so that
--   Amazon Web Services Cloud Control API can accurately distinguish
--   between request retries and new resource requests. You might retry a
--   resource request to ensure that it was successfully received.
--   
--   A client token is valid for 36 hours once used. After that, a resource
--   request with the same client token is treated as a new request.
--   
--   If you do not specify a client token, one is generated for inclusion
--   in the request.
--   
--   For more information, see <a>Ensuring resource operation requests are
--   unique</a> in the <i>Amazon Web Services Cloud Control API User
--   Guide</i>.
deleteResource_clientToken :: Lens' DeleteResource (Maybe Text)

-- | For private resource types, the type version to use in this resource
--   operation. If you do not specify a resource version, CloudFormation
--   uses the default version.
deleteResource_typeVersionId :: Lens' DeleteResource (Maybe Text)

-- | The Amazon Resource Name (ARN) of the Identity and Access Management
--   (IAM) for Cloud Control API to use when performing this resource
--   operation. The role specified must have the permissions required for
--   this operation. The necessary permissions for each event handler are
--   defined in the <tt> handlers </tt> section of the <a>resource type
--   definition schema</a>.
--   
--   If you do not specify a role, Cloud Control API uses a temporary
--   session created using your Amazon Web Services user credentials.
--   
--   For more information, see <a>Specifying credentials</a> in the
--   <i>Amazon Web Services Cloud Control API User Guide</i>.
deleteResource_roleArn :: Lens' DeleteResource (Maybe Text)

-- | The name of the resource type.
deleteResource_typeName :: Lens' DeleteResource Text

-- | The identifier for the resource.
--   
--   You can specify the primary identifier, or any secondary identifier
--   defined for the resource type in its resource schema. You can only
--   specify one identifier. Primary identifiers can be specified as a
--   string or JSON; secondary identifiers must be specified as JSON.
--   
--   For compound primary identifiers (that is, one that consists of
--   multiple resource properties strung together), to specify the primary
--   identifier as a string, list the property values <i>in the order they
--   are specified</i> in the primary identifier definition, separated by
--   <tt>|</tt>.
--   
--   For more information, see <a>Identifying resources</a> in the
--   <i>Amazon Web Services Cloud Control API User Guide</i>.
deleteResource_identifier :: Lens' DeleteResource Text

-- | <i>See:</i> <a>newDeleteResourceResponse</a> smart constructor.
data DeleteResourceResponse
DeleteResourceResponse' :: Maybe ProgressEvent -> Int -> DeleteResourceResponse

-- | Represents the current status of the resource deletion request.
--   
--   After you have initiated a resource deletion request, you can monitor
--   the progress of your request by calling
--   <a>GetResourceRequestStatus</a> using the <tt>RequestToken</tt> of the
--   <tt>ProgressEvent</tt> returned by <tt>DeleteResource</tt>.
[$sel:progressEvent:DeleteResourceResponse'] :: DeleteResourceResponse -> Maybe ProgressEvent

-- | The response's http status code.
[$sel:httpStatus:DeleteResourceResponse'] :: DeleteResourceResponse -> Int

-- | Create a value of <a>DeleteResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:progressEvent:DeleteResourceResponse'</a>,
--   <a>deleteResourceResponse_progressEvent</a> - Represents the current
--   status of the resource deletion request.
--   
--   After you have initiated a resource deletion request, you can monitor
--   the progress of your request by calling
--   <a>GetResourceRequestStatus</a> using the <tt>RequestToken</tt> of the
--   <tt>ProgressEvent</tt> returned by <tt>DeleteResource</tt>.
--   
--   <a>$sel:httpStatus:DeleteResourceResponse'</a>,
--   <a>deleteResourceResponse_httpStatus</a> - The response's http status
--   code.
newDeleteResourceResponse :: Int -> DeleteResourceResponse

-- | Represents the current status of the resource deletion request.
--   
--   After you have initiated a resource deletion request, you can monitor
--   the progress of your request by calling
--   <a>GetResourceRequestStatus</a> using the <tt>RequestToken</tt> of the
--   <tt>ProgressEvent</tt> returned by <tt>DeleteResource</tt>.
deleteResourceResponse_progressEvent :: Lens' DeleteResourceResponse (Maybe ProgressEvent)

-- | The response's http status code.
deleteResourceResponse_httpStatus :: Lens' DeleteResourceResponse Int
instance GHC.Generics.Generic Network.AWS.CloudControl.DeleteResource.DeleteResource
instance GHC.Show.Show Network.AWS.CloudControl.DeleteResource.DeleteResource
instance GHC.Read.Read Network.AWS.CloudControl.DeleteResource.DeleteResource
instance GHC.Classes.Eq Network.AWS.CloudControl.DeleteResource.DeleteResource
instance GHC.Generics.Generic Network.AWS.CloudControl.DeleteResource.DeleteResourceResponse
instance GHC.Show.Show Network.AWS.CloudControl.DeleteResource.DeleteResourceResponse
instance GHC.Classes.Eq Network.AWS.CloudControl.DeleteResource.DeleteResourceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudControl.DeleteResource.DeleteResource
instance Control.DeepSeq.NFData Network.AWS.CloudControl.DeleteResource.DeleteResourceResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudControl.DeleteResource.DeleteResource
instance Control.DeepSeq.NFData Network.AWS.CloudControl.DeleteResource.DeleteResource
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudControl.DeleteResource.DeleteResource
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudControl.DeleteResource.DeleteResource
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudControl.DeleteResource.DeleteResource
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudControl.DeleteResource.DeleteResource


-- | Creates the specified resource. For more information, see <a>Creating
--   a resource</a> in the <i>Amazon Web Services Cloud Control API User
--   Guide</i>.
--   
--   After you have initiated a resource creation request, you can monitor
--   the progress of your request by calling
--   <a>GetResourceRequestStatus</a> using the <tt>RequestToken</tt> of the
--   <tt>ProgressEvent</tt> type returned by <tt>CreateResource</tt>.
module Network.AWS.CloudControl.CreateResource

-- | <i>See:</i> <a>newCreateResource</a> smart constructor.
data CreateResource
CreateResource' :: Maybe Text -> Maybe Text -> Maybe Text -> Text -> Sensitive Text -> CreateResource

-- | A unique identifier to ensure the idempotency of the resource request.
--   As a best practice, specify this token to ensure idempotency, so that
--   Amazon Web Services Cloud Control API can accurately distinguish
--   between request retries and new resource requests. You might retry a
--   resource request to ensure that it was successfully received.
--   
--   A client token is valid for 36 hours once used. After that, a resource
--   request with the same client token is treated as a new request.
--   
--   If you do not specify a client token, one is generated for inclusion
--   in the request.
--   
--   For more information, see <a>Ensuring resource operation requests are
--   unique</a> in the <i>Amazon Web Services Cloud Control API User
--   Guide</i>.
[$sel:clientToken:CreateResource'] :: CreateResource -> Maybe Text

-- | For private resource types, the type version to use in this resource
--   operation. If you do not specify a resource version, CloudFormation
--   uses the default version.
[$sel:typeVersionId:CreateResource'] :: CreateResource -> Maybe Text

-- | The Amazon Resource Name (ARN) of the Identity and Access Management
--   (IAM) for Cloud Control API to use when performing this resource
--   operation. The role specified must have the permissions required for
--   this operation. The necessary permissions for each event handler are
--   defined in the <tt> handlers </tt> section of the <a>resource type
--   definition schema</a>.
--   
--   If you do not specify a role, Cloud Control API uses a temporary
--   session created using your Amazon Web Services user credentials.
--   
--   For more information, see <a>Specifying credentials</a> in the
--   <i>Amazon Web Services Cloud Control API User Guide</i>.
[$sel:roleArn:CreateResource'] :: CreateResource -> Maybe Text

-- | The name of the resource type.
[$sel:typeName:CreateResource'] :: CreateResource -> Text

-- | Structured data format representing the desired state of the resource,
--   consisting of that resource's properties and their desired values.
--   
--   Cloud Control API currently supports JSON as a structured data format.
--   
--   Specify the desired state as one of the following:
--   
--   <ul>
--   <li>A JSON blob</li>
--   <li>A local path containing the desired state in JSON data format</li>
--   </ul>
--   
--   For more information, see <a>Composing the desired state of the
--   resource</a> in the <i>Amazon Web Services Cloud Control API User
--   Guide</i>.
--   
--   For more information about the properties of a specific resource,
--   refer to the related topic for the resource in the <a>Resource and
--   property types reference</a> in the <i>Amazon Web Services
--   CloudFormation Users Guide</i>.
[$sel:desiredState:CreateResource'] :: CreateResource -> Sensitive Text

-- | Create a value of <a>CreateResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientToken:CreateResource'</a>,
--   <a>createResource_clientToken</a> - A unique identifier to ensure the
--   idempotency of the resource request. As a best practice, specify this
--   token to ensure idempotency, so that Amazon Web Services Cloud Control
--   API can accurately distinguish between request retries and new
--   resource requests. You might retry a resource request to ensure that
--   it was successfully received.
--   
--   A client token is valid for 36 hours once used. After that, a resource
--   request with the same client token is treated as a new request.
--   
--   If you do not specify a client token, one is generated for inclusion
--   in the request.
--   
--   For more information, see <a>Ensuring resource operation requests are
--   unique</a> in the <i>Amazon Web Services Cloud Control API User
--   Guide</i>.
--   
--   <a>$sel:typeVersionId:CreateResource'</a>,
--   <a>createResource_typeVersionId</a> - For private resource types, the
--   type version to use in this resource operation. If you do not specify
--   a resource version, CloudFormation uses the default version.
--   
--   <a>$sel:roleArn:CreateResource'</a>, <a>createResource_roleArn</a> -
--   The Amazon Resource Name (ARN) of the Identity and Access Management
--   (IAM) for Cloud Control API to use when performing this resource
--   operation. The role specified must have the permissions required for
--   this operation. The necessary permissions for each event handler are
--   defined in the <tt> handlers </tt> section of the <a>resource type
--   definition schema</a>.
--   
--   If you do not specify a role, Cloud Control API uses a temporary
--   session created using your Amazon Web Services user credentials.
--   
--   For more information, see <a>Specifying credentials</a> in the
--   <i>Amazon Web Services Cloud Control API User Guide</i>.
--   
--   <a>$sel:typeName:CreateResource'</a>, <a>createResource_typeName</a> -
--   The name of the resource type.
--   
--   <a>$sel:desiredState:CreateResource'</a>,
--   <a>createResource_desiredState</a> - Structured data format
--   representing the desired state of the resource, consisting of that
--   resource's properties and their desired values.
--   
--   Cloud Control API currently supports JSON as a structured data format.
--   
--   Specify the desired state as one of the following:
--   
--   <ul>
--   <li>A JSON blob</li>
--   <li>A local path containing the desired state in JSON data format</li>
--   </ul>
--   
--   For more information, see <a>Composing the desired state of the
--   resource</a> in the <i>Amazon Web Services Cloud Control API User
--   Guide</i>.
--   
--   For more information about the properties of a specific resource,
--   refer to the related topic for the resource in the <a>Resource and
--   property types reference</a> in the <i>Amazon Web Services
--   CloudFormation Users Guide</i>.
newCreateResource :: Text -> Text -> CreateResource

-- | A unique identifier to ensure the idempotency of the resource request.
--   As a best practice, specify this token to ensure idempotency, so that
--   Amazon Web Services Cloud Control API can accurately distinguish
--   between request retries and new resource requests. You might retry a
--   resource request to ensure that it was successfully received.
--   
--   A client token is valid for 36 hours once used. After that, a resource
--   request with the same client token is treated as a new request.
--   
--   If you do not specify a client token, one is generated for inclusion
--   in the request.
--   
--   For more information, see <a>Ensuring resource operation requests are
--   unique</a> in the <i>Amazon Web Services Cloud Control API User
--   Guide</i>.
createResource_clientToken :: Lens' CreateResource (Maybe Text)

-- | For private resource types, the type version to use in this resource
--   operation. If you do not specify a resource version, CloudFormation
--   uses the default version.
createResource_typeVersionId :: Lens' CreateResource (Maybe Text)

-- | The Amazon Resource Name (ARN) of the Identity and Access Management
--   (IAM) for Cloud Control API to use when performing this resource
--   operation. The role specified must have the permissions required for
--   this operation. The necessary permissions for each event handler are
--   defined in the <tt> handlers </tt> section of the <a>resource type
--   definition schema</a>.
--   
--   If you do not specify a role, Cloud Control API uses a temporary
--   session created using your Amazon Web Services user credentials.
--   
--   For more information, see <a>Specifying credentials</a> in the
--   <i>Amazon Web Services Cloud Control API User Guide</i>.
createResource_roleArn :: Lens' CreateResource (Maybe Text)

-- | The name of the resource type.
createResource_typeName :: Lens' CreateResource Text

-- | Structured data format representing the desired state of the resource,
--   consisting of that resource's properties and their desired values.
--   
--   Cloud Control API currently supports JSON as a structured data format.
--   
--   Specify the desired state as one of the following:
--   
--   <ul>
--   <li>A JSON blob</li>
--   <li>A local path containing the desired state in JSON data format</li>
--   </ul>
--   
--   For more information, see <a>Composing the desired state of the
--   resource</a> in the <i>Amazon Web Services Cloud Control API User
--   Guide</i>.
--   
--   For more information about the properties of a specific resource,
--   refer to the related topic for the resource in the <a>Resource and
--   property types reference</a> in the <i>Amazon Web Services
--   CloudFormation Users Guide</i>.
createResource_desiredState :: Lens' CreateResource Text

-- | <i>See:</i> <a>newCreateResourceResponse</a> smart constructor.
data CreateResourceResponse
CreateResourceResponse' :: Maybe ProgressEvent -> Int -> CreateResourceResponse

-- | Represents the current status of the resource creation request.
--   
--   After you have initiated a resource creation request, you can monitor
--   the progress of your request by calling
--   <a>GetResourceRequestStatus</a> using the <tt>RequestToken</tt> of the
--   <tt>ProgressEvent</tt> returned by <tt>CreateResource</tt>.
[$sel:progressEvent:CreateResourceResponse'] :: CreateResourceResponse -> Maybe ProgressEvent

-- | The response's http status code.
[$sel:httpStatus:CreateResourceResponse'] :: CreateResourceResponse -> Int

-- | Create a value of <a>CreateResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:progressEvent:CreateResourceResponse'</a>,
--   <a>createResourceResponse_progressEvent</a> - Represents the current
--   status of the resource creation request.
--   
--   After you have initiated a resource creation request, you can monitor
--   the progress of your request by calling
--   <a>GetResourceRequestStatus</a> using the <tt>RequestToken</tt> of the
--   <tt>ProgressEvent</tt> returned by <tt>CreateResource</tt>.
--   
--   <a>$sel:httpStatus:CreateResourceResponse'</a>,
--   <a>createResourceResponse_httpStatus</a> - The response's http status
--   code.
newCreateResourceResponse :: Int -> CreateResourceResponse

-- | Represents the current status of the resource creation request.
--   
--   After you have initiated a resource creation request, you can monitor
--   the progress of your request by calling
--   <a>GetResourceRequestStatus</a> using the <tt>RequestToken</tt> of the
--   <tt>ProgressEvent</tt> returned by <tt>CreateResource</tt>.
createResourceResponse_progressEvent :: Lens' CreateResourceResponse (Maybe ProgressEvent)

-- | The response's http status code.
createResourceResponse_httpStatus :: Lens' CreateResourceResponse Int
instance GHC.Generics.Generic Network.AWS.CloudControl.CreateResource.CreateResource
instance GHC.Show.Show Network.AWS.CloudControl.CreateResource.CreateResource
instance GHC.Classes.Eq Network.AWS.CloudControl.CreateResource.CreateResource
instance GHC.Generics.Generic Network.AWS.CloudControl.CreateResource.CreateResourceResponse
instance GHC.Show.Show Network.AWS.CloudControl.CreateResource.CreateResourceResponse
instance GHC.Classes.Eq Network.AWS.CloudControl.CreateResource.CreateResourceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudControl.CreateResource.CreateResource
instance Control.DeepSeq.NFData Network.AWS.CloudControl.CreateResource.CreateResourceResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudControl.CreateResource.CreateResource
instance Control.DeepSeq.NFData Network.AWS.CloudControl.CreateResource.CreateResource
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudControl.CreateResource.CreateResource
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudControl.CreateResource.CreateResource
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudControl.CreateResource.CreateResource
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudControl.CreateResource.CreateResource


-- | Cancels the specified resource operation request. For more
--   information, see <a>Canceling resource operation requests</a> in the
--   <i>Amazon Web Services Cloud Control API User Guide</i>.
--   
--   Only resource operations requests with a status of <tt>PENDING</tt> or
--   <tt>IN_PROGRESS</tt> can be cancelled.
module Network.AWS.CloudControl.CancelResourceRequest

-- | <i>See:</i> <a>newCancelResourceRequest</a> smart constructor.
data CancelResourceRequest
CancelResourceRequest' :: Text -> CancelResourceRequest

-- | The <tt>RequestToken</tt> of the <tt>ProgressEvent</tt> object
--   returned by the resource operation request.
[$sel:requestToken:CancelResourceRequest'] :: CancelResourceRequest -> Text

-- | Create a value of <a>CancelResourceRequest</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:requestToken:CancelResourceRequest'</a>,
--   <a>cancelResourceRequest_requestToken</a> - The <tt>RequestToken</tt>
--   of the <tt>ProgressEvent</tt> object returned by the resource
--   operation request.
newCancelResourceRequest :: Text -> CancelResourceRequest

-- | The <tt>RequestToken</tt> of the <tt>ProgressEvent</tt> object
--   returned by the resource operation request.
cancelResourceRequest_requestToken :: Lens' CancelResourceRequest Text

-- | <i>See:</i> <a>newCancelResourceRequestResponse</a> smart constructor.
data CancelResourceRequestResponse
CancelResourceRequestResponse' :: Maybe ProgressEvent -> Int -> CancelResourceRequestResponse
[$sel:progressEvent:CancelResourceRequestResponse'] :: CancelResourceRequestResponse -> Maybe ProgressEvent

-- | The response's http status code.
[$sel:httpStatus:CancelResourceRequestResponse'] :: CancelResourceRequestResponse -> Int

-- | Create a value of <a>CancelResourceRequestResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:progressEvent:CancelResourceRequestResponse'</a>,
--   <a>cancelResourceRequestResponse_progressEvent</a> - Undocumented
--   member.
--   
--   <a>$sel:httpStatus:CancelResourceRequestResponse'</a>,
--   <a>cancelResourceRequestResponse_httpStatus</a> - The response's http
--   status code.
newCancelResourceRequestResponse :: Int -> CancelResourceRequestResponse

-- | Undocumented member.
cancelResourceRequestResponse_progressEvent :: Lens' CancelResourceRequestResponse (Maybe ProgressEvent)

-- | The response's http status code.
cancelResourceRequestResponse_httpStatus :: Lens' CancelResourceRequestResponse Int
instance GHC.Generics.Generic Network.AWS.CloudControl.CancelResourceRequest.CancelResourceRequest
instance GHC.Show.Show Network.AWS.CloudControl.CancelResourceRequest.CancelResourceRequest
instance GHC.Read.Read Network.AWS.CloudControl.CancelResourceRequest.CancelResourceRequest
instance GHC.Classes.Eq Network.AWS.CloudControl.CancelResourceRequest.CancelResourceRequest
instance GHC.Generics.Generic Network.AWS.CloudControl.CancelResourceRequest.CancelResourceRequestResponse
instance GHC.Show.Show Network.AWS.CloudControl.CancelResourceRequest.CancelResourceRequestResponse
instance GHC.Classes.Eq Network.AWS.CloudControl.CancelResourceRequest.CancelResourceRequestResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudControl.CancelResourceRequest.CancelResourceRequest
instance Control.DeepSeq.NFData Network.AWS.CloudControl.CancelResourceRequest.CancelResourceRequestResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudControl.CancelResourceRequest.CancelResourceRequest
instance Control.DeepSeq.NFData Network.AWS.CloudControl.CancelResourceRequest.CancelResourceRequest
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudControl.CancelResourceRequest.CancelResourceRequest
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudControl.CancelResourceRequest.CancelResourceRequest
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudControl.CancelResourceRequest.CancelResourceRequest
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudControl.CancelResourceRequest.CancelResourceRequest


-- | Updates the specified property values in the resource.
--   
--   You specify your resource property updates as a list of patch
--   operations contained in a JSON patch document that adheres to the
--   <a>RFC 6902 - JavaScript Object Notation (JSON) Patch</a> standard.
--   
--   For details on how Cloud Control API performs resource update
--   operations, see <a>Updating a resource</a> in the <i>Amazon Web
--   Services Cloud Control API User Guide</i>.
--   
--   After you have initiated a resource update request, you can monitor
--   the progress of your request by calling
--   <a>GetResourceRequestStatus</a> using the <tt>RequestToken</tt> of the
--   <tt>ProgressEvent</tt> returned by <tt>UpdateResource</tt>.
--   
--   For more information about the properties of a specific resource,
--   refer to the related topic for the resource in the <a>Resource and
--   property types reference</a> in the <i>Amazon Web Services
--   CloudFormation Users Guide</i>.
module Network.AWS.CloudControl.UpdateResource

-- | <i>See:</i> <a>newUpdateResource</a> smart constructor.
data UpdateResource
UpdateResource' :: Maybe Text -> Maybe Text -> Maybe Text -> Text -> Text -> Sensitive Text -> UpdateResource

-- | A unique identifier to ensure the idempotency of the resource request.
--   As a best practice, specify this token to ensure idempotency, so that
--   Amazon Web Services Cloud Control API can accurately distinguish
--   between request retries and new resource requests. You might retry a
--   resource request to ensure that it was successfully received.
--   
--   A client token is valid for 36 hours once used. After that, a resource
--   request with the same client token is treated as a new request.
--   
--   If you do not specify a client token, one is generated for inclusion
--   in the request.
--   
--   For more information, see <a>Ensuring resource operation requests are
--   unique</a> in the <i>Amazon Web Services Cloud Control API User
--   Guide</i>.
[$sel:clientToken:UpdateResource'] :: UpdateResource -> Maybe Text

-- | For private resource types, the type version to use in this resource
--   operation. If you do not specify a resource version, CloudFormation
--   uses the default version.
[$sel:typeVersionId:UpdateResource'] :: UpdateResource -> Maybe Text

-- | The Amazon Resource Name (ARN) of the Identity and Access Management
--   (IAM) for Cloud Control API to use when performing this resource
--   operation. The role specified must have the permissions required for
--   this operation. The necessary permissions for each event handler are
--   defined in the <tt> handlers </tt> section of the <a>resource type
--   definition schema</a>.
--   
--   If you do not specify a role, Cloud Control API uses a temporary
--   session created using your Amazon Web Services user credentials.
--   
--   For more information, see <a>Specifying credentials</a> in the
--   <i>Amazon Web Services Cloud Control API User Guide</i>.
[$sel:roleArn:UpdateResource'] :: UpdateResource -> Maybe Text

-- | The name of the resource type.
[$sel:typeName:UpdateResource'] :: UpdateResource -> Text

-- | The identifier for the resource.
--   
--   You can specify the primary identifier, or any secondary identifier
--   defined for the resource type in its resource schema. You can only
--   specify one identifier. Primary identifiers can be specified as a
--   string or JSON; secondary identifiers must be specified as JSON.
--   
--   For compound primary identifiers (that is, one that consists of
--   multiple resource properties strung together), to specify the primary
--   identifier as a string, list the property values <i>in the order they
--   are specified</i> in the primary identifier definition, separated by
--   <tt>|</tt>.
--   
--   For more information, see <a>Identifying resources</a> in the
--   <i>Amazon Web Services Cloud Control API User Guide</i>.
[$sel:identifier:UpdateResource'] :: UpdateResource -> Text

-- | A JavaScript Object Notation (JSON) document listing the patch
--   operations that represent the updates to apply to the current resource
--   properties. For details, see <a>Composing the patch document</a> in
--   the <i>Amazon Web Services Cloud Control API User Guide</i>.
[$sel:patchDocument:UpdateResource'] :: UpdateResource -> Sensitive Text

-- | Create a value of <a>UpdateResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientToken:UpdateResource'</a>,
--   <a>updateResource_clientToken</a> - A unique identifier to ensure the
--   idempotency of the resource request. As a best practice, specify this
--   token to ensure idempotency, so that Amazon Web Services Cloud Control
--   API can accurately distinguish between request retries and new
--   resource requests. You might retry a resource request to ensure that
--   it was successfully received.
--   
--   A client token is valid for 36 hours once used. After that, a resource
--   request with the same client token is treated as a new request.
--   
--   If you do not specify a client token, one is generated for inclusion
--   in the request.
--   
--   For more information, see <a>Ensuring resource operation requests are
--   unique</a> in the <i>Amazon Web Services Cloud Control API User
--   Guide</i>.
--   
--   <a>$sel:typeVersionId:UpdateResource'</a>,
--   <a>updateResource_typeVersionId</a> - For private resource types, the
--   type version to use in this resource operation. If you do not specify
--   a resource version, CloudFormation uses the default version.
--   
--   <a>$sel:roleArn:UpdateResource'</a>, <a>updateResource_roleArn</a> -
--   The Amazon Resource Name (ARN) of the Identity and Access Management
--   (IAM) for Cloud Control API to use when performing this resource
--   operation. The role specified must have the permissions required for
--   this operation. The necessary permissions for each event handler are
--   defined in the <tt> handlers </tt> section of the <a>resource type
--   definition schema</a>.
--   
--   If you do not specify a role, Cloud Control API uses a temporary
--   session created using your Amazon Web Services user credentials.
--   
--   For more information, see <a>Specifying credentials</a> in the
--   <i>Amazon Web Services Cloud Control API User Guide</i>.
--   
--   <a>$sel:typeName:UpdateResource'</a>, <a>updateResource_typeName</a> -
--   The name of the resource type.
--   
--   <a>$sel:identifier:UpdateResource'</a>,
--   <a>updateResource_identifier</a> - The identifier for the resource.
--   
--   You can specify the primary identifier, or any secondary identifier
--   defined for the resource type in its resource schema. You can only
--   specify one identifier. Primary identifiers can be specified as a
--   string or JSON; secondary identifiers must be specified as JSON.
--   
--   For compound primary identifiers (that is, one that consists of
--   multiple resource properties strung together), to specify the primary
--   identifier as a string, list the property values <i>in the order they
--   are specified</i> in the primary identifier definition, separated by
--   <tt>|</tt>.
--   
--   For more information, see <a>Identifying resources</a> in the
--   <i>Amazon Web Services Cloud Control API User Guide</i>.
--   
--   <a>$sel:patchDocument:UpdateResource'</a>,
--   <a>updateResource_patchDocument</a> - A JavaScript Object Notation
--   (JSON) document listing the patch operations that represent the
--   updates to apply to the current resource properties. For details, see
--   <a>Composing the patch document</a> in the <i>Amazon Web Services
--   Cloud Control API User Guide</i>.
newUpdateResource :: Text -> Text -> Text -> UpdateResource

-- | A unique identifier to ensure the idempotency of the resource request.
--   As a best practice, specify this token to ensure idempotency, so that
--   Amazon Web Services Cloud Control API can accurately distinguish
--   between request retries and new resource requests. You might retry a
--   resource request to ensure that it was successfully received.
--   
--   A client token is valid for 36 hours once used. After that, a resource
--   request with the same client token is treated as a new request.
--   
--   If you do not specify a client token, one is generated for inclusion
--   in the request.
--   
--   For more information, see <a>Ensuring resource operation requests are
--   unique</a> in the <i>Amazon Web Services Cloud Control API User
--   Guide</i>.
updateResource_clientToken :: Lens' UpdateResource (Maybe Text)

-- | For private resource types, the type version to use in this resource
--   operation. If you do not specify a resource version, CloudFormation
--   uses the default version.
updateResource_typeVersionId :: Lens' UpdateResource (Maybe Text)

-- | The Amazon Resource Name (ARN) of the Identity and Access Management
--   (IAM) for Cloud Control API to use when performing this resource
--   operation. The role specified must have the permissions required for
--   this operation. The necessary permissions for each event handler are
--   defined in the <tt> handlers </tt> section of the <a>resource type
--   definition schema</a>.
--   
--   If you do not specify a role, Cloud Control API uses a temporary
--   session created using your Amazon Web Services user credentials.
--   
--   For more information, see <a>Specifying credentials</a> in the
--   <i>Amazon Web Services Cloud Control API User Guide</i>.
updateResource_roleArn :: Lens' UpdateResource (Maybe Text)

-- | The name of the resource type.
updateResource_typeName :: Lens' UpdateResource Text

-- | The identifier for the resource.
--   
--   You can specify the primary identifier, or any secondary identifier
--   defined for the resource type in its resource schema. You can only
--   specify one identifier. Primary identifiers can be specified as a
--   string or JSON; secondary identifiers must be specified as JSON.
--   
--   For compound primary identifiers (that is, one that consists of
--   multiple resource properties strung together), to specify the primary
--   identifier as a string, list the property values <i>in the order they
--   are specified</i> in the primary identifier definition, separated by
--   <tt>|</tt>.
--   
--   For more information, see <a>Identifying resources</a> in the
--   <i>Amazon Web Services Cloud Control API User Guide</i>.
updateResource_identifier :: Lens' UpdateResource Text

-- | A JavaScript Object Notation (JSON) document listing the patch
--   operations that represent the updates to apply to the current resource
--   properties. For details, see <a>Composing the patch document</a> in
--   the <i>Amazon Web Services Cloud Control API User Guide</i>.
updateResource_patchDocument :: Lens' UpdateResource Text

-- | <i>See:</i> <a>newUpdateResourceResponse</a> smart constructor.
data UpdateResourceResponse
UpdateResourceResponse' :: Maybe ProgressEvent -> Int -> UpdateResourceResponse

-- | Represents the current status of the resource update request.
--   
--   Use the <tt>RequestToken</tt> of the <tt>ProgressEvent</tt> with
--   <a>GetResourceRequestStatus</a> to return the current status of a
--   resource operation request.
[$sel:progressEvent:UpdateResourceResponse'] :: UpdateResourceResponse -> Maybe ProgressEvent

-- | The response's http status code.
[$sel:httpStatus:UpdateResourceResponse'] :: UpdateResourceResponse -> Int

-- | Create a value of <a>UpdateResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:progressEvent:UpdateResourceResponse'</a>,
--   <a>updateResourceResponse_progressEvent</a> - Represents the current
--   status of the resource update request.
--   
--   Use the <tt>RequestToken</tt> of the <tt>ProgressEvent</tt> with
--   <a>GetResourceRequestStatus</a> to return the current status of a
--   resource operation request.
--   
--   <a>$sel:httpStatus:UpdateResourceResponse'</a>,
--   <a>updateResourceResponse_httpStatus</a> - The response's http status
--   code.
newUpdateResourceResponse :: Int -> UpdateResourceResponse

-- | Represents the current status of the resource update request.
--   
--   Use the <tt>RequestToken</tt> of the <tt>ProgressEvent</tt> with
--   <a>GetResourceRequestStatus</a> to return the current status of a
--   resource operation request.
updateResourceResponse_progressEvent :: Lens' UpdateResourceResponse (Maybe ProgressEvent)

-- | The response's http status code.
updateResourceResponse_httpStatus :: Lens' UpdateResourceResponse Int
instance GHC.Generics.Generic Network.AWS.CloudControl.UpdateResource.UpdateResource
instance GHC.Show.Show Network.AWS.CloudControl.UpdateResource.UpdateResource
instance GHC.Classes.Eq Network.AWS.CloudControl.UpdateResource.UpdateResource
instance GHC.Generics.Generic Network.AWS.CloudControl.UpdateResource.UpdateResourceResponse
instance GHC.Show.Show Network.AWS.CloudControl.UpdateResource.UpdateResourceResponse
instance GHC.Classes.Eq Network.AWS.CloudControl.UpdateResource.UpdateResourceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudControl.UpdateResource.UpdateResource
instance Control.DeepSeq.NFData Network.AWS.CloudControl.UpdateResource.UpdateResourceResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudControl.UpdateResource.UpdateResource
instance Control.DeepSeq.NFData Network.AWS.CloudControl.UpdateResource.UpdateResource
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudControl.UpdateResource.UpdateResource
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudControl.UpdateResource.UpdateResource
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudControl.UpdateResource.UpdateResource
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudControl.UpdateResource.UpdateResource


module Network.AWS.CloudControl.Lens

-- | For private resource types, the type version to use in this resource
--   operation. If you do not specify a resource version, CloudFormation
--   uses the default version.
getResource_typeVersionId :: Lens' GetResource (Maybe Text)

-- | The Amazon Resource Name (ARN) of the Identity and Access Management
--   (IAM) for Cloud Control API to use when performing this resource
--   operation. The role specified must have the permissions required for
--   this operation. The necessary permissions for each event handler are
--   defined in the <tt> handlers </tt> section of the <a>resource type
--   definition schema</a>.
--   
--   If you do not specify a role, Cloud Control API uses a temporary
--   session created using your Amazon Web Services user credentials.
--   
--   For more information, see <a>Specifying credentials</a> in the
--   <i>Amazon Web Services Cloud Control API User Guide</i>.
getResource_roleArn :: Lens' GetResource (Maybe Text)

-- | The name of the resource type.
getResource_typeName :: Lens' GetResource Text

-- | The identifier for the resource.
--   
--   You can specify the primary identifier, or any secondary identifier
--   defined for the resource type in its resource schema. You can only
--   specify one identifier. Primary identifiers can be specified as a
--   string or JSON; secondary identifiers must be specified as JSON.
--   
--   For compound primary identifiers (that is, one that consists of
--   multiple resource properties strung together), to specify the primary
--   identifier as a string, list the property values <i>in the order they
--   are specified</i> in the primary identifier definition, separated by
--   <tt>|</tt>.
--   
--   For more information, see <a>Identifying resources</a> in the
--   <i>Amazon Web Services Cloud Control API User Guide</i>.
getResource_identifier :: Lens' GetResource Text

-- | The name of the resource type.
getResourceResponse_typeName :: Lens' GetResourceResponse (Maybe Text)

-- | Undocumented member.
getResourceResponse_resourceDescription :: Lens' GetResourceResponse (Maybe ResourceDescription)

-- | The response's http status code.
getResourceResponse_httpStatus :: Lens' GetResourceResponse Int

-- | If the previous paginated request didn't return all of the remaining
--   results, the response object's <tt>NextToken</tt> parameter value is
--   set to a token. To retrieve the next set of results, call this action
--   again and assign that token to the request object's <tt>NextToken</tt>
--   parameter. If there are no remaining results, the previous response
--   object's <tt>NextToken</tt> parameter is set to <tt>null</tt>.
listResourceRequests_nextToken :: Lens' ListResourceRequests (Maybe Text)

-- | The filter criteria to apply to the requests returned.
listResourceRequests_resourceRequestStatusFilter :: Lens' ListResourceRequests (Maybe ResourceRequestStatusFilter)

-- | The maximum number of results to be returned with a single call. If
--   the number of available results exceeds this maximum, the response
--   includes a <tt>NextToken</tt> value that you can assign to the
--   <tt>NextToken</tt> request parameter to get the next set of results.
--   
--   The default is <tt>20</tt>.
listResourceRequests_maxResults :: Lens' ListResourceRequests (Maybe Natural)

-- | The requests that match the specified filter criteria.
listResourceRequestsResponse_resourceRequestStatusSummaries :: Lens' ListResourceRequestsResponse (Maybe [ProgressEvent])

-- | If the request doesn't return all of the remaining results,
--   <tt>NextToken</tt> is set to a token. To retrieve the next set of
--   results, call <tt>ListResources</tt> again and assign that token to
--   the request object's <tt>NextToken</tt> parameter. If the request
--   returns all results, <tt>NextToken</tt> is set to null.
listResourceRequestsResponse_nextToken :: Lens' ListResourceRequestsResponse (Maybe Text)

-- | The response's http status code.
listResourceRequestsResponse_httpStatus :: Lens' ListResourceRequestsResponse Int

-- | The <tt>RequestToken</tt> of the <tt>ProgressEvent</tt> object
--   returned by the resource operation request.
cancelResourceRequest_requestToken :: Lens' CancelResourceRequest Text

-- | Undocumented member.
cancelResourceRequestResponse_progressEvent :: Lens' CancelResourceRequestResponse (Maybe ProgressEvent)

-- | The response's http status code.
cancelResourceRequestResponse_httpStatus :: Lens' CancelResourceRequestResponse Int

-- | A unique identifier to ensure the idempotency of the resource request.
--   As a best practice, specify this token to ensure idempotency, so that
--   Amazon Web Services Cloud Control API can accurately distinguish
--   between request retries and new resource requests. You might retry a
--   resource request to ensure that it was successfully received.
--   
--   A client token is valid for 36 hours once used. After that, a resource
--   request with the same client token is treated as a new request.
--   
--   If you do not specify a client token, one is generated for inclusion
--   in the request.
--   
--   For more information, see <a>Ensuring resource operation requests are
--   unique</a> in the <i>Amazon Web Services Cloud Control API User
--   Guide</i>.
deleteResource_clientToken :: Lens' DeleteResource (Maybe Text)

-- | For private resource types, the type version to use in this resource
--   operation. If you do not specify a resource version, CloudFormation
--   uses the default version.
deleteResource_typeVersionId :: Lens' DeleteResource (Maybe Text)

-- | The Amazon Resource Name (ARN) of the Identity and Access Management
--   (IAM) for Cloud Control API to use when performing this resource
--   operation. The role specified must have the permissions required for
--   this operation. The necessary permissions for each event handler are
--   defined in the <tt> handlers </tt> section of the <a>resource type
--   definition schema</a>.
--   
--   If you do not specify a role, Cloud Control API uses a temporary
--   session created using your Amazon Web Services user credentials.
--   
--   For more information, see <a>Specifying credentials</a> in the
--   <i>Amazon Web Services Cloud Control API User Guide</i>.
deleteResource_roleArn :: Lens' DeleteResource (Maybe Text)

-- | The name of the resource type.
deleteResource_typeName :: Lens' DeleteResource Text

-- | The identifier for the resource.
--   
--   You can specify the primary identifier, or any secondary identifier
--   defined for the resource type in its resource schema. You can only
--   specify one identifier. Primary identifiers can be specified as a
--   string or JSON; secondary identifiers must be specified as JSON.
--   
--   For compound primary identifiers (that is, one that consists of
--   multiple resource properties strung together), to specify the primary
--   identifier as a string, list the property values <i>in the order they
--   are specified</i> in the primary identifier definition, separated by
--   <tt>|</tt>.
--   
--   For more information, see <a>Identifying resources</a> in the
--   <i>Amazon Web Services Cloud Control API User Guide</i>.
deleteResource_identifier :: Lens' DeleteResource Text

-- | Represents the current status of the resource deletion request.
--   
--   After you have initiated a resource deletion request, you can monitor
--   the progress of your request by calling
--   <a>GetResourceRequestStatus</a> using the <tt>RequestToken</tt> of the
--   <tt>ProgressEvent</tt> returned by <tt>DeleteResource</tt>.
deleteResourceResponse_progressEvent :: Lens' DeleteResourceResponse (Maybe ProgressEvent)

-- | The response's http status code.
deleteResourceResponse_httpStatus :: Lens' DeleteResourceResponse Int

-- | A unique identifier to ensure the idempotency of the resource request.
--   As a best practice, specify this token to ensure idempotency, so that
--   Amazon Web Services Cloud Control API can accurately distinguish
--   between request retries and new resource requests. You might retry a
--   resource request to ensure that it was successfully received.
--   
--   A client token is valid for 36 hours once used. After that, a resource
--   request with the same client token is treated as a new request.
--   
--   If you do not specify a client token, one is generated for inclusion
--   in the request.
--   
--   For more information, see <a>Ensuring resource operation requests are
--   unique</a> in the <i>Amazon Web Services Cloud Control API User
--   Guide</i>.
updateResource_clientToken :: Lens' UpdateResource (Maybe Text)

-- | For private resource types, the type version to use in this resource
--   operation. If you do not specify a resource version, CloudFormation
--   uses the default version.
updateResource_typeVersionId :: Lens' UpdateResource (Maybe Text)

-- | The Amazon Resource Name (ARN) of the Identity and Access Management
--   (IAM) for Cloud Control API to use when performing this resource
--   operation. The role specified must have the permissions required for
--   this operation. The necessary permissions for each event handler are
--   defined in the <tt> handlers </tt> section of the <a>resource type
--   definition schema</a>.
--   
--   If you do not specify a role, Cloud Control API uses a temporary
--   session created using your Amazon Web Services user credentials.
--   
--   For more information, see <a>Specifying credentials</a> in the
--   <i>Amazon Web Services Cloud Control API User Guide</i>.
updateResource_roleArn :: Lens' UpdateResource (Maybe Text)

-- | The name of the resource type.
updateResource_typeName :: Lens' UpdateResource Text

-- | The identifier for the resource.
--   
--   You can specify the primary identifier, or any secondary identifier
--   defined for the resource type in its resource schema. You can only
--   specify one identifier. Primary identifiers can be specified as a
--   string or JSON; secondary identifiers must be specified as JSON.
--   
--   For compound primary identifiers (that is, one that consists of
--   multiple resource properties strung together), to specify the primary
--   identifier as a string, list the property values <i>in the order they
--   are specified</i> in the primary identifier definition, separated by
--   <tt>|</tt>.
--   
--   For more information, see <a>Identifying resources</a> in the
--   <i>Amazon Web Services Cloud Control API User Guide</i>.
updateResource_identifier :: Lens' UpdateResource Text

-- | A JavaScript Object Notation (JSON) document listing the patch
--   operations that represent the updates to apply to the current resource
--   properties. For details, see <a>Composing the patch document</a> in
--   the <i>Amazon Web Services Cloud Control API User Guide</i>.
updateResource_patchDocument :: Lens' UpdateResource Text

-- | Represents the current status of the resource update request.
--   
--   Use the <tt>RequestToken</tt> of the <tt>ProgressEvent</tt> with
--   <a>GetResourceRequestStatus</a> to return the current status of a
--   resource operation request.
updateResourceResponse_progressEvent :: Lens' UpdateResourceResponse (Maybe ProgressEvent)

-- | The response's http status code.
updateResourceResponse_httpStatus :: Lens' UpdateResourceResponse Int

-- | The resource model to use to select the resources to return.
listResources_resourceModel :: Lens' ListResources (Maybe Text)

-- | If the previous paginated request didn't return all of the remaining
--   results, the response object's <tt>NextToken</tt> parameter value is
--   set to a token. To retrieve the next set of results, call this action
--   again and assign that token to the request object's <tt>NextToken</tt>
--   parameter. If there are no remaining results, the previous response
--   object's <tt>NextToken</tt> parameter is set to <tt>null</tt>.
listResources_nextToken :: Lens' ListResources (Maybe Text)

-- | For private resource types, the type version to use in this resource
--   operation. If you do not specify a resource version, CloudFormation
--   uses the default version.
listResources_typeVersionId :: Lens' ListResources (Maybe Text)

-- | The maximum number of results to be returned with a single call. If
--   the number of available results exceeds this maximum, the response
--   includes a <tt>NextToken</tt> value that you can assign to the
--   <tt>NextToken</tt> request parameter to get the next set of results.
--   
--   The default is <tt>20</tt>.
listResources_maxResults :: Lens' ListResources (Maybe Natural)

-- | The Amazon Resource Name (ARN) of the Identity and Access Management
--   (IAM) for Cloud Control API to use when performing this resource
--   operation. The role specified must have the permissions required for
--   this operation. The necessary permissions for each event handler are
--   defined in the <tt> handlers </tt> section of the <a>resource type
--   definition schema</a>.
--   
--   If you do not specify a role, Cloud Control API uses a temporary
--   session created using your Amazon Web Services user credentials.
--   
--   For more information, see <a>Specifying credentials</a> in the
--   <i>Amazon Web Services Cloud Control API User Guide</i>.
listResources_roleArn :: Lens' ListResources (Maybe Text)

-- | The name of the resource type.
listResources_typeName :: Lens' ListResources Text

-- | Information about the specified resources, including primary
--   identifier and resource model.
listResourcesResponse_resourceDescriptions :: Lens' ListResourcesResponse (Maybe [ResourceDescription])

-- | The name of the resource type.
listResourcesResponse_typeName :: Lens' ListResourcesResponse (Maybe Text)

-- | If the request doesn't return all of the remaining results,
--   <tt>NextToken</tt> is set to a token. To retrieve the next set of
--   results, call <tt>ListResources</tt> again and assign that token to
--   the request object's <tt>NextToken</tt> parameter. If the request
--   returns all results, <tt>NextToken</tt> is set to null.
listResourcesResponse_nextToken :: Lens' ListResourcesResponse (Maybe Text)

-- | The response's http status code.
listResourcesResponse_httpStatus :: Lens' ListResourcesResponse Int

-- | A unique identifier to ensure the idempotency of the resource request.
--   As a best practice, specify this token to ensure idempotency, so that
--   Amazon Web Services Cloud Control API can accurately distinguish
--   between request retries and new resource requests. You might retry a
--   resource request to ensure that it was successfully received.
--   
--   A client token is valid for 36 hours once used. After that, a resource
--   request with the same client token is treated as a new request.
--   
--   If you do not specify a client token, one is generated for inclusion
--   in the request.
--   
--   For more information, see <a>Ensuring resource operation requests are
--   unique</a> in the <i>Amazon Web Services Cloud Control API User
--   Guide</i>.
createResource_clientToken :: Lens' CreateResource (Maybe Text)

-- | For private resource types, the type version to use in this resource
--   operation. If you do not specify a resource version, CloudFormation
--   uses the default version.
createResource_typeVersionId :: Lens' CreateResource (Maybe Text)

-- | The Amazon Resource Name (ARN) of the Identity and Access Management
--   (IAM) for Cloud Control API to use when performing this resource
--   operation. The role specified must have the permissions required for
--   this operation. The necessary permissions for each event handler are
--   defined in the <tt> handlers </tt> section of the <a>resource type
--   definition schema</a>.
--   
--   If you do not specify a role, Cloud Control API uses a temporary
--   session created using your Amazon Web Services user credentials.
--   
--   For more information, see <a>Specifying credentials</a> in the
--   <i>Amazon Web Services Cloud Control API User Guide</i>.
createResource_roleArn :: Lens' CreateResource (Maybe Text)

-- | The name of the resource type.
createResource_typeName :: Lens' CreateResource Text

-- | Structured data format representing the desired state of the resource,
--   consisting of that resource's properties and their desired values.
--   
--   Cloud Control API currently supports JSON as a structured data format.
--   
--   Specify the desired state as one of the following:
--   
--   <ul>
--   <li>A JSON blob</li>
--   <li>A local path containing the desired state in JSON data format</li>
--   </ul>
--   
--   For more information, see <a>Composing the desired state of the
--   resource</a> in the <i>Amazon Web Services Cloud Control API User
--   Guide</i>.
--   
--   For more information about the properties of a specific resource,
--   refer to the related topic for the resource in the <a>Resource and
--   property types reference</a> in the <i>Amazon Web Services
--   CloudFormation Users Guide</i>.
createResource_desiredState :: Lens' CreateResource Text

-- | Represents the current status of the resource creation request.
--   
--   After you have initiated a resource creation request, you can monitor
--   the progress of your request by calling
--   <a>GetResourceRequestStatus</a> using the <tt>RequestToken</tt> of the
--   <tt>ProgressEvent</tt> returned by <tt>CreateResource</tt>.
createResourceResponse_progressEvent :: Lens' CreateResourceResponse (Maybe ProgressEvent)

-- | The response's http status code.
createResourceResponse_httpStatus :: Lens' CreateResourceResponse Int

-- | A unique token used to track the progress of the resource operation
--   request.
--   
--   Request tokens are included in the <tt>ProgressEvent</tt> type
--   returned by a resource operation request.
getResourceRequestStatus_requestToken :: Lens' GetResourceRequestStatus Text

-- | Represents the current status of the resource operation request.
getResourceRequestStatusResponse_progressEvent :: Lens' GetResourceRequestStatusResponse (Maybe ProgressEvent)

-- | The response's http status code.
getResourceRequestStatusResponse_httpStatus :: Lens' GetResourceRequestStatusResponse Int

-- | When to next request the status of this resource operation request.
progressEvent_retryAfter :: Lens' ProgressEvent (Maybe UTCTime)

-- | The name of the resource type used in the operation.
progressEvent_typeName :: Lens' ProgressEvent (Maybe Text)

-- | The unique token representing this resource operation request.
--   
--   Use the <tt>RequestToken</tt> with <a>GetResourceRequestStatus</a> to
--   return the current status of a resource operation request.
progressEvent_requestToken :: Lens' ProgressEvent (Maybe Text)

-- | A JSON string containing the resource model, consisting of each
--   resource property and its current value.
progressEvent_resourceModel :: Lens' ProgressEvent (Maybe Text)

-- | The resource operation type.
progressEvent_operation :: Lens' ProgressEvent (Maybe Operation)

-- | The primary identifier for the resource.
--   
--   In some cases, the resource identifier may be available before the
--   resource operation has reached a status of <tt>SUCCESS</tt>.
progressEvent_identifier :: Lens' ProgressEvent (Maybe Text)

-- | The current status of the resource operation request.
--   
--   <ul>
--   <li><tt>PENDING</tt>: The resource operation has not yet started.</li>
--   <li><tt>IN_PROGRESS</tt>: The resource operation is currently in
--   progress.</li>
--   <li><tt>SUCCESS</tt>: The resource operation has successfully
--   completed.</li>
--   <li><tt>FAILED</tt>: The resource operation has failed. Refer to the
--   error code and status message for more information.</li>
--   <li><tt>CANCEL_IN_PROGRESS</tt>: The resource operation is in the
--   process of being canceled.</li>
--   <li><tt>CANCEL_COMPLETE</tt>: The resource operation has been
--   canceled.</li>
--   </ul>
progressEvent_operationStatus :: Lens' ProgressEvent (Maybe OperationStatus)

-- | When the resource operation request was initiated.
progressEvent_eventTime :: Lens' ProgressEvent (Maybe UTCTime)

-- | Any message explaining the current status.
progressEvent_statusMessage :: Lens' ProgressEvent (Maybe Text)

-- | For requests with a status of <tt>FAILED</tt>, the associated error
--   code.
--   
--   For error code definitions, see <a>Handler error codes</a> in the
--   /CloudFormation Command Line Interface User Guide for Extension
--   Development/.
progressEvent_errorCode :: Lens' ProgressEvent (Maybe HandlerErrorCode)

-- | The primary identifier for the resource.
--   
--   For more information, see <a>Identifying resources</a> in the
--   <i>Amazon Web Services Cloud Control API User Guide</i>.
resourceDescription_identifier :: Lens' ResourceDescription (Maybe Text)

-- | A list of the resource properties and their current values.
resourceDescription_properties :: Lens' ResourceDescription (Maybe Text)

-- | The operation statuses to include in the filter.
--   
--   <ul>
--   <li><tt>PENDING</tt>: The operation has been requested, but not yet
--   initiated.</li>
--   <li><tt>IN_PROGRESS</tt>: The operation is currently in progress.</li>
--   <li><tt>SUCCESS</tt>: The operation has successfully completed.</li>
--   <li><tt>FAILED</tt>: The operation has failed.</li>
--   <li><tt>CANCEL_IN_PROGRESS</tt>: The operation is currently in the
--   process of being canceled.</li>
--   <li><tt>CANCEL_COMPLETE</tt>: The operation has been canceled.</li>
--   </ul>
resourceRequestStatusFilter_operationStatuses :: Lens' ResourceRequestStatusFilter (Maybe [OperationStatus])

-- | The operation types to include in the filter.
resourceRequestStatusFilter_operations :: Lens' ResourceRequestStatusFilter (Maybe [Operation])


module Network.AWS.CloudControl.Waiters

-- | Polls <a>GetResourceRequestStatus</a> every 5 seconds until a
--   successful state is reached. An error is returned after 720 failed
--   checks.
newResourceRequestSuccess :: Wait GetResourceRequestStatus


-- | Derived from API version <tt>2021-09-30</tt> of the AWS service
--   descriptions, licensed under Apache 2.0.
--   
--   Use Amazon Web Services Cloud Control API to create, read, update,
--   delete, and list (CRUD-L) your cloud resources that belong to a wide
--   range of services--both Amazon Web Services and third-party. With the
--   Cloud Control API standardized set of application programming
--   interfaces (APIs), you can perform CRUD-L operations on any supported
--   resources in your Amazon Web Services account. Using Cloud Control
--   API, you won't have to generate code or scripts specific to each
--   individual service responsible for those resources.
--   
--   For more information about Amazon Web Services Cloud Control API, see
--   the <a>Amazon Web Services Cloud Control API User Guide</a>.
module Network.AWS.CloudControl

-- | API version <tt>2021-09-30</tt> of the Amazon Cloud Control API SDK
--   configuration.
defaultService :: Service

-- | The specified extension does not exist in the CloudFormation registry.
_TypeNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The resource handler has returned that the downstream service
--   generated an error that does not map to any other handler error code.
_GeneralServiceException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The resource handler has failed without a returning a more specific
--   error code. This can include timeouts.
_HandlerFailureException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The resource handler has returned that invalid input from the user has
--   generated a generic exception.
_InvalidRequestException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Cloud Control API has not received a valid response from the resource
--   handler, due to a configuration error. This includes issues such as
--   the resource handler returning an invalid response, or timing out.
_PrivateTypeException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The resource handler has returned that the downstream service returned
--   an internal error, typically with a <tt>5XX HTTP</tt> status code.
_ServiceInternalErrorException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The resource handler has returned that an unexpected error occurred
--   within the resource handler.
_HandlerInternalFailureException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified client token has already been used in another resource
--   request.
--   
--   It is best practice for client tokens to be unique for each resource
--   operation request. However, client token expire after 36 hours.
_ClientTokenConflictException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A resource operation with the specified request token cannot be found.
_RequestTokenNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The resource handler has returned that the request could not be
--   completed due to networking issues, such as a failure to receive a
--   response from the server.
_NetworkFailureException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The resource handler has returned that the downstream resource failed
--   to complete all of its ready-state checks.
_NotStabilizedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | One or more properties included in this resource operation are defined
--   as create-only, and therefore cannot be updated.
_NotUpdatableException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified resource does not support this resource operation.
_UnsupportedActionException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The resource handler has returned that a non-transient resource limit
--   was reached on the service side.
_ServiceLimitExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request was denied due to request throttling.
_ThrottlingException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The resource is currently being modified by another operation.
_ConcurrentModificationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The resource is temporarily unavailable to be acted upon. For example,
--   if the resource is currently undergoing an operation and cannot be
--   acted upon until that operation is finished.
_ResourceConflictException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The resource handler has returned that the credentials provided by the
--   user are invalid.
_InvalidCredentialsException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A resource with the specified identifier cannot be found.
_ResourceNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Another resource operation is currently being performed on this
--   resource.
_ConcurrentOperationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The resource with the name requested already exists.
_AlreadyExistsException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Polls <a>GetResourceRequestStatus</a> every 5 seconds until a
--   successful state is reached. An error is returned after 720 failed
--   checks.
newResourceRequestSuccess :: Wait GetResourceRequestStatus

-- | <i>See:</i> <a>newGetResource</a> smart constructor.
data GetResource
GetResource' :: Maybe Text -> Maybe Text -> Text -> Text -> GetResource

-- | Create a value of <a>GetResource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:typeVersionId:GetResource'</a>,
--   <a>getResource_typeVersionId</a> - For private resource types, the
--   type version to use in this resource operation. If you do not specify
--   a resource version, CloudFormation uses the default version.
--   
--   <a>$sel:roleArn:GetResource'</a>, <a>getResource_roleArn</a> - The
--   Amazon Resource Name (ARN) of the Identity and Access Management (IAM)
--   for Cloud Control API to use when performing this resource operation.
--   The role specified must have the permissions required for this
--   operation. The necessary permissions for each event handler are
--   defined in the <tt> handlers </tt> section of the <a>resource type
--   definition schema</a>.
--   
--   If you do not specify a role, Cloud Control API uses a temporary
--   session created using your Amazon Web Services user credentials.
--   
--   For more information, see <a>Specifying credentials</a> in the
--   <i>Amazon Web Services Cloud Control API User Guide</i>.
--   
--   <a>$sel:typeName:GetResource'</a>, <a>getResource_typeName</a> - The
--   name of the resource type.
--   
--   <a>$sel:identifier:GetResource'</a>, <a>getResource_identifier</a> -
--   The identifier for the resource.
--   
--   You can specify the primary identifier, or any secondary identifier
--   defined for the resource type in its resource schema. You can only
--   specify one identifier. Primary identifiers can be specified as a
--   string or JSON; secondary identifiers must be specified as JSON.
--   
--   For compound primary identifiers (that is, one that consists of
--   multiple resource properties strung together), to specify the primary
--   identifier as a string, list the property values <i>in the order they
--   are specified</i> in the primary identifier definition, separated by
--   <tt>|</tt>.
--   
--   For more information, see <a>Identifying resources</a> in the
--   <i>Amazon Web Services Cloud Control API User Guide</i>.
newGetResource :: Text -> Text -> GetResource

-- | <i>See:</i> <a>newGetResourceResponse</a> smart constructor.
data GetResourceResponse
GetResourceResponse' :: Maybe Text -> Maybe ResourceDescription -> Int -> GetResourceResponse

-- | Create a value of <a>GetResourceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:typeName:GetResource'</a>, <a>getResourceResponse_typeName</a>
--   - The name of the resource type.
--   
--   <a>$sel:resourceDescription:GetResourceResponse'</a>,
--   <a>getResourceResponse_resourceDescription</a> - Undocumented member.
--   
--   <a>$sel:httpStatus:GetResourceResponse'</a>,
--   <a>getResourceResponse_httpStatus</a> - The response's http status
--   code.
newGetResourceResponse :: Int -> GetResourceResponse

-- | <i>See:</i> <a>newListResourceRequests</a> smart constructor.
data ListResourceRequests
ListResourceRequests' :: Maybe Text -> Maybe ResourceRequestStatusFilter -> Maybe Natural -> ListResourceRequests

-- | Create a value of <a>ListResourceRequests</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListResourceRequests'</a>,
--   <a>listResourceRequests_nextToken</a> - If the previous paginated
--   request didn't return all of the remaining results, the response
--   object's <tt>NextToken</tt> parameter value is set to a token. To
--   retrieve the next set of results, call this action again and assign
--   that token to the request object's <tt>NextToken</tt> parameter. If
--   there are no remaining results, the previous response object's
--   <tt>NextToken</tt> parameter is set to <tt>null</tt>.
--   
--   <a>$sel:resourceRequestStatusFilter:ListResourceRequests'</a>,
--   <a>listResourceRequests_resourceRequestStatusFilter</a> - The filter
--   criteria to apply to the requests returned.
--   
--   <a>$sel:maxResults:ListResourceRequests'</a>,
--   <a>listResourceRequests_maxResults</a> - The maximum number of results
--   to be returned with a single call. If the number of available results
--   exceeds this maximum, the response includes a <tt>NextToken</tt> value
--   that you can assign to the <tt>NextToken</tt> request parameter to get
--   the next set of results.
--   
--   The default is <tt>20</tt>.
newListResourceRequests :: ListResourceRequests

-- | <i>See:</i> <a>newListResourceRequestsResponse</a> smart constructor.
data ListResourceRequestsResponse
ListResourceRequestsResponse' :: Maybe [ProgressEvent] -> Maybe Text -> Int -> ListResourceRequestsResponse

-- | Create a value of <a>ListResourceRequestsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:resourceRequestStatusSummaries:ListResourceRequestsResponse'</a>,
--   <a>listResourceRequestsResponse_resourceRequestStatusSummaries</a> -
--   The requests that match the specified filter criteria.
--   
--   <a>$sel:nextToken:ListResourceRequests'</a>,
--   <a>listResourceRequestsResponse_nextToken</a> - If the request doesn't
--   return all of the remaining results, <tt>NextToken</tt> is set to a
--   token. To retrieve the next set of results, call
--   <tt>ListResources</tt> again and assign that token to the request
--   object's <tt>NextToken</tt> parameter. If the request returns all
--   results, <tt>NextToken</tt> is set to null.
--   
--   <a>$sel:httpStatus:ListResourceRequestsResponse'</a>,
--   <a>listResourceRequestsResponse_httpStatus</a> - The response's http
--   status code.
newListResourceRequestsResponse :: Int -> ListResourceRequestsResponse

-- | <i>See:</i> <a>newCancelResourceRequest</a> smart constructor.
data CancelResourceRequest
CancelResourceRequest' :: Text -> CancelResourceRequest

-- | Create a value of <a>CancelResourceRequest</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:requestToken:CancelResourceRequest'</a>,
--   <a>cancelResourceRequest_requestToken</a> - The <tt>RequestToken</tt>
--   of the <tt>ProgressEvent</tt> object returned by the resource
--   operation request.
newCancelResourceRequest :: Text -> CancelResourceRequest

-- | <i>See:</i> <a>newCancelResourceRequestResponse</a> smart constructor.
data CancelResourceRequestResponse
CancelResourceRequestResponse' :: Maybe ProgressEvent -> Int -> CancelResourceRequestResponse

-- | Create a value of <a>CancelResourceRequestResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:progressEvent:CancelResourceRequestResponse'</a>,
--   <a>cancelResourceRequestResponse_progressEvent</a> - Undocumented
--   member.
--   
--   <a>$sel:httpStatus:CancelResourceRequestResponse'</a>,
--   <a>cancelResourceRequestResponse_httpStatus</a> - The response's http
--   status code.
newCancelResourceRequestResponse :: Int -> CancelResourceRequestResponse

-- | <i>See:</i> <a>newDeleteResource</a> smart constructor.
data DeleteResource
DeleteResource' :: Maybe Text -> Maybe Text -> Maybe Text -> Text -> Text -> DeleteResource

-- | Create a value of <a>DeleteResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientToken:DeleteResource'</a>,
--   <a>deleteResource_clientToken</a> - A unique identifier to ensure the
--   idempotency of the resource request. As a best practice, specify this
--   token to ensure idempotency, so that Amazon Web Services Cloud Control
--   API can accurately distinguish between request retries and new
--   resource requests. You might retry a resource request to ensure that
--   it was successfully received.
--   
--   A client token is valid for 36 hours once used. After that, a resource
--   request with the same client token is treated as a new request.
--   
--   If you do not specify a client token, one is generated for inclusion
--   in the request.
--   
--   For more information, see <a>Ensuring resource operation requests are
--   unique</a> in the <i>Amazon Web Services Cloud Control API User
--   Guide</i>.
--   
--   <a>$sel:typeVersionId:DeleteResource'</a>,
--   <a>deleteResource_typeVersionId</a> - For private resource types, the
--   type version to use in this resource operation. If you do not specify
--   a resource version, CloudFormation uses the default version.
--   
--   <a>$sel:roleArn:DeleteResource'</a>, <a>deleteResource_roleArn</a> -
--   The Amazon Resource Name (ARN) of the Identity and Access Management
--   (IAM) for Cloud Control API to use when performing this resource
--   operation. The role specified must have the permissions required for
--   this operation. The necessary permissions for each event handler are
--   defined in the <tt> handlers </tt> section of the <a>resource type
--   definition schema</a>.
--   
--   If you do not specify a role, Cloud Control API uses a temporary
--   session created using your Amazon Web Services user credentials.
--   
--   For more information, see <a>Specifying credentials</a> in the
--   <i>Amazon Web Services Cloud Control API User Guide</i>.
--   
--   <a>$sel:typeName:DeleteResource'</a>, <a>deleteResource_typeName</a> -
--   The name of the resource type.
--   
--   <a>$sel:identifier:DeleteResource'</a>,
--   <a>deleteResource_identifier</a> - The identifier for the resource.
--   
--   You can specify the primary identifier, or any secondary identifier
--   defined for the resource type in its resource schema. You can only
--   specify one identifier. Primary identifiers can be specified as a
--   string or JSON; secondary identifiers must be specified as JSON.
--   
--   For compound primary identifiers (that is, one that consists of
--   multiple resource properties strung together), to specify the primary
--   identifier as a string, list the property values <i>in the order they
--   are specified</i> in the primary identifier definition, separated by
--   <tt>|</tt>.
--   
--   For more information, see <a>Identifying resources</a> in the
--   <i>Amazon Web Services Cloud Control API User Guide</i>.
newDeleteResource :: Text -> Text -> DeleteResource

-- | <i>See:</i> <a>newDeleteResourceResponse</a> smart constructor.
data DeleteResourceResponse
DeleteResourceResponse' :: Maybe ProgressEvent -> Int -> DeleteResourceResponse

-- | Create a value of <a>DeleteResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:progressEvent:DeleteResourceResponse'</a>,
--   <a>deleteResourceResponse_progressEvent</a> - Represents the current
--   status of the resource deletion request.
--   
--   After you have initiated a resource deletion request, you can monitor
--   the progress of your request by calling
--   <a>GetResourceRequestStatus</a> using the <tt>RequestToken</tt> of the
--   <tt>ProgressEvent</tt> returned by <tt>DeleteResource</tt>.
--   
--   <a>$sel:httpStatus:DeleteResourceResponse'</a>,
--   <a>deleteResourceResponse_httpStatus</a> - The response's http status
--   code.
newDeleteResourceResponse :: Int -> DeleteResourceResponse

-- | <i>See:</i> <a>newUpdateResource</a> smart constructor.
data UpdateResource
UpdateResource' :: Maybe Text -> Maybe Text -> Maybe Text -> Text -> Text -> Sensitive Text -> UpdateResource

-- | Create a value of <a>UpdateResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientToken:UpdateResource'</a>,
--   <a>updateResource_clientToken</a> - A unique identifier to ensure the
--   idempotency of the resource request. As a best practice, specify this
--   token to ensure idempotency, so that Amazon Web Services Cloud Control
--   API can accurately distinguish between request retries and new
--   resource requests. You might retry a resource request to ensure that
--   it was successfully received.
--   
--   A client token is valid for 36 hours once used. After that, a resource
--   request with the same client token is treated as a new request.
--   
--   If you do not specify a client token, one is generated for inclusion
--   in the request.
--   
--   For more information, see <a>Ensuring resource operation requests are
--   unique</a> in the <i>Amazon Web Services Cloud Control API User
--   Guide</i>.
--   
--   <a>$sel:typeVersionId:UpdateResource'</a>,
--   <a>updateResource_typeVersionId</a> - For private resource types, the
--   type version to use in this resource operation. If you do not specify
--   a resource version, CloudFormation uses the default version.
--   
--   <a>$sel:roleArn:UpdateResource'</a>, <a>updateResource_roleArn</a> -
--   The Amazon Resource Name (ARN) of the Identity and Access Management
--   (IAM) for Cloud Control API to use when performing this resource
--   operation. The role specified must have the permissions required for
--   this operation. The necessary permissions for each event handler are
--   defined in the <tt> handlers </tt> section of the <a>resource type
--   definition schema</a>.
--   
--   If you do not specify a role, Cloud Control API uses a temporary
--   session created using your Amazon Web Services user credentials.
--   
--   For more information, see <a>Specifying credentials</a> in the
--   <i>Amazon Web Services Cloud Control API User Guide</i>.
--   
--   <a>$sel:typeName:UpdateResource'</a>, <a>updateResource_typeName</a> -
--   The name of the resource type.
--   
--   <a>$sel:identifier:UpdateResource'</a>,
--   <a>updateResource_identifier</a> - The identifier for the resource.
--   
--   You can specify the primary identifier, or any secondary identifier
--   defined for the resource type in its resource schema. You can only
--   specify one identifier. Primary identifiers can be specified as a
--   string or JSON; secondary identifiers must be specified as JSON.
--   
--   For compound primary identifiers (that is, one that consists of
--   multiple resource properties strung together), to specify the primary
--   identifier as a string, list the property values <i>in the order they
--   are specified</i> in the primary identifier definition, separated by
--   <tt>|</tt>.
--   
--   For more information, see <a>Identifying resources</a> in the
--   <i>Amazon Web Services Cloud Control API User Guide</i>.
--   
--   <a>$sel:patchDocument:UpdateResource'</a>,
--   <a>updateResource_patchDocument</a> - A JavaScript Object Notation
--   (JSON) document listing the patch operations that represent the
--   updates to apply to the current resource properties. For details, see
--   <a>Composing the patch document</a> in the <i>Amazon Web Services
--   Cloud Control API User Guide</i>.
newUpdateResource :: Text -> Text -> Text -> UpdateResource

-- | <i>See:</i> <a>newUpdateResourceResponse</a> smart constructor.
data UpdateResourceResponse
UpdateResourceResponse' :: Maybe ProgressEvent -> Int -> UpdateResourceResponse

-- | Create a value of <a>UpdateResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:progressEvent:UpdateResourceResponse'</a>,
--   <a>updateResourceResponse_progressEvent</a> - Represents the current
--   status of the resource update request.
--   
--   Use the <tt>RequestToken</tt> of the <tt>ProgressEvent</tt> with
--   <a>GetResourceRequestStatus</a> to return the current status of a
--   resource operation request.
--   
--   <a>$sel:httpStatus:UpdateResourceResponse'</a>,
--   <a>updateResourceResponse_httpStatus</a> - The response's http status
--   code.
newUpdateResourceResponse :: Int -> UpdateResourceResponse

-- | <i>See:</i> <a>newListResources</a> smart constructor.
data ListResources
ListResources' :: Maybe (Sensitive Text) -> Maybe Text -> Maybe Text -> Maybe Natural -> Maybe Text -> Text -> ListResources

-- | Create a value of <a>ListResources</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceModel:ListResources'</a>,
--   <a>listResources_resourceModel</a> - The resource model to use to
--   select the resources to return.
--   
--   <a>$sel:nextToken:ListResources'</a>, <a>listResources_nextToken</a> -
--   If the previous paginated request didn't return all of the remaining
--   results, the response object's <tt>NextToken</tt> parameter value is
--   set to a token. To retrieve the next set of results, call this action
--   again and assign that token to the request object's <tt>NextToken</tt>
--   parameter. If there are no remaining results, the previous response
--   object's <tt>NextToken</tt> parameter is set to <tt>null</tt>.
--   
--   <a>$sel:typeVersionId:ListResources'</a>,
--   <a>listResources_typeVersionId</a> - For private resource types, the
--   type version to use in this resource operation. If you do not specify
--   a resource version, CloudFormation uses the default version.
--   
--   <a>$sel:maxResults:ListResources'</a>, <a>listResources_maxResults</a>
--   - The maximum number of results to be returned with a single call. If
--   the number of available results exceeds this maximum, the response
--   includes a <tt>NextToken</tt> value that you can assign to the
--   <tt>NextToken</tt> request parameter to get the next set of results.
--   
--   The default is <tt>20</tt>.
--   
--   <a>$sel:roleArn:ListResources'</a>, <a>listResources_roleArn</a> - The
--   Amazon Resource Name (ARN) of the Identity and Access Management (IAM)
--   for Cloud Control API to use when performing this resource operation.
--   The role specified must have the permissions required for this
--   operation. The necessary permissions for each event handler are
--   defined in the <tt> handlers </tt> section of the <a>resource type
--   definition schema</a>.
--   
--   If you do not specify a role, Cloud Control API uses a temporary
--   session created using your Amazon Web Services user credentials.
--   
--   For more information, see <a>Specifying credentials</a> in the
--   <i>Amazon Web Services Cloud Control API User Guide</i>.
--   
--   <a>$sel:typeName:ListResources'</a>, <a>listResources_typeName</a> -
--   The name of the resource type.
newListResources :: Text -> ListResources

-- | <i>See:</i> <a>newListResourcesResponse</a> smart constructor.
data ListResourcesResponse
ListResourcesResponse' :: Maybe [ResourceDescription] -> Maybe Text -> Maybe Text -> Int -> ListResourcesResponse

-- | Create a value of <a>ListResourcesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceDescriptions:ListResourcesResponse'</a>,
--   <a>listResourcesResponse_resourceDescriptions</a> - Information about
--   the specified resources, including primary identifier and resource
--   model.
--   
--   <a>$sel:typeName:ListResources'</a>,
--   <a>listResourcesResponse_typeName</a> - The name of the resource type.
--   
--   <a>$sel:nextToken:ListResources'</a>,
--   <a>listResourcesResponse_nextToken</a> - If the request doesn't return
--   all of the remaining results, <tt>NextToken</tt> is set to a token. To
--   retrieve the next set of results, call <tt>ListResources</tt> again
--   and assign that token to the request object's <tt>NextToken</tt>
--   parameter. If the request returns all results, <tt>NextToken</tt> is
--   set to null.
--   
--   <a>$sel:httpStatus:ListResourcesResponse'</a>,
--   <a>listResourcesResponse_httpStatus</a> - The response's http status
--   code.
newListResourcesResponse :: Int -> ListResourcesResponse

-- | <i>See:</i> <a>newCreateResource</a> smart constructor.
data CreateResource
CreateResource' :: Maybe Text -> Maybe Text -> Maybe Text -> Text -> Sensitive Text -> CreateResource

-- | Create a value of <a>CreateResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientToken:CreateResource'</a>,
--   <a>createResource_clientToken</a> - A unique identifier to ensure the
--   idempotency of the resource request. As a best practice, specify this
--   token to ensure idempotency, so that Amazon Web Services Cloud Control
--   API can accurately distinguish between request retries and new
--   resource requests. You might retry a resource request to ensure that
--   it was successfully received.
--   
--   A client token is valid for 36 hours once used. After that, a resource
--   request with the same client token is treated as a new request.
--   
--   If you do not specify a client token, one is generated for inclusion
--   in the request.
--   
--   For more information, see <a>Ensuring resource operation requests are
--   unique</a> in the <i>Amazon Web Services Cloud Control API User
--   Guide</i>.
--   
--   <a>$sel:typeVersionId:CreateResource'</a>,
--   <a>createResource_typeVersionId</a> - For private resource types, the
--   type version to use in this resource operation. If you do not specify
--   a resource version, CloudFormation uses the default version.
--   
--   <a>$sel:roleArn:CreateResource'</a>, <a>createResource_roleArn</a> -
--   The Amazon Resource Name (ARN) of the Identity and Access Management
--   (IAM) for Cloud Control API to use when performing this resource
--   operation. The role specified must have the permissions required for
--   this operation. The necessary permissions for each event handler are
--   defined in the <tt> handlers </tt> section of the <a>resource type
--   definition schema</a>.
--   
--   If you do not specify a role, Cloud Control API uses a temporary
--   session created using your Amazon Web Services user credentials.
--   
--   For more information, see <a>Specifying credentials</a> in the
--   <i>Amazon Web Services Cloud Control API User Guide</i>.
--   
--   <a>$sel:typeName:CreateResource'</a>, <a>createResource_typeName</a> -
--   The name of the resource type.
--   
--   <a>$sel:desiredState:CreateResource'</a>,
--   <a>createResource_desiredState</a> - Structured data format
--   representing the desired state of the resource, consisting of that
--   resource's properties and their desired values.
--   
--   Cloud Control API currently supports JSON as a structured data format.
--   
--   Specify the desired state as one of the following:
--   
--   <ul>
--   <li>A JSON blob</li>
--   <li>A local path containing the desired state in JSON data format</li>
--   </ul>
--   
--   For more information, see <a>Composing the desired state of the
--   resource</a> in the <i>Amazon Web Services Cloud Control API User
--   Guide</i>.
--   
--   For more information about the properties of a specific resource,
--   refer to the related topic for the resource in the <a>Resource and
--   property types reference</a> in the <i>Amazon Web Services
--   CloudFormation Users Guide</i>.
newCreateResource :: Text -> Text -> CreateResource

-- | <i>See:</i> <a>newCreateResourceResponse</a> smart constructor.
data CreateResourceResponse
CreateResourceResponse' :: Maybe ProgressEvent -> Int -> CreateResourceResponse

-- | Create a value of <a>CreateResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:progressEvent:CreateResourceResponse'</a>,
--   <a>createResourceResponse_progressEvent</a> - Represents the current
--   status of the resource creation request.
--   
--   After you have initiated a resource creation request, you can monitor
--   the progress of your request by calling
--   <a>GetResourceRequestStatus</a> using the <tt>RequestToken</tt> of the
--   <tt>ProgressEvent</tt> returned by <tt>CreateResource</tt>.
--   
--   <a>$sel:httpStatus:CreateResourceResponse'</a>,
--   <a>createResourceResponse_httpStatus</a> - The response's http status
--   code.
newCreateResourceResponse :: Int -> CreateResourceResponse

-- | <i>See:</i> <a>newGetResourceRequestStatus</a> smart constructor.
data GetResourceRequestStatus
GetResourceRequestStatus' :: Text -> GetResourceRequestStatus

-- | Create a value of <a>GetResourceRequestStatus</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:requestToken:GetResourceRequestStatus'</a>,
--   <a>getResourceRequestStatus_requestToken</a> - A unique token used to
--   track the progress of the resource operation request.
--   
--   Request tokens are included in the <tt>ProgressEvent</tt> type
--   returned by a resource operation request.
newGetResourceRequestStatus :: Text -> GetResourceRequestStatus

-- | <i>See:</i> <a>newGetResourceRequestStatusResponse</a> smart
--   constructor.
data GetResourceRequestStatusResponse
GetResourceRequestStatusResponse' :: Maybe ProgressEvent -> Int -> GetResourceRequestStatusResponse

-- | Create a value of <a>GetResourceRequestStatusResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:progressEvent:GetResourceRequestStatusResponse'</a>,
--   <a>getResourceRequestStatusResponse_progressEvent</a> - Represents the
--   current status of the resource operation request.
--   
--   <a>$sel:httpStatus:GetResourceRequestStatusResponse'</a>,
--   <a>getResourceRequestStatusResponse_httpStatus</a> - The response's
--   http status code.
newGetResourceRequestStatusResponse :: Int -> GetResourceRequestStatusResponse
newtype HandlerErrorCode
HandlerErrorCode' :: Text -> HandlerErrorCode
[fromHandlerErrorCode] :: HandlerErrorCode -> Text
pattern HandlerErrorCode_AccessDenied :: HandlerErrorCode
pattern HandlerErrorCode_AlreadyExists :: HandlerErrorCode
pattern HandlerErrorCode_GeneralServiceException :: HandlerErrorCode
pattern HandlerErrorCode_InternalFailure :: HandlerErrorCode
pattern HandlerErrorCode_InvalidCredentials :: HandlerErrorCode
pattern HandlerErrorCode_InvalidRequest :: HandlerErrorCode
pattern HandlerErrorCode_NetworkFailure :: HandlerErrorCode
pattern HandlerErrorCode_NotFound :: HandlerErrorCode
pattern HandlerErrorCode_NotStabilized :: HandlerErrorCode
pattern HandlerErrorCode_NotUpdatable :: HandlerErrorCode
pattern HandlerErrorCode_ResourceConflict :: HandlerErrorCode
pattern HandlerErrorCode_ServiceInternalError :: HandlerErrorCode
pattern HandlerErrorCode_ServiceLimitExceeded :: HandlerErrorCode
pattern HandlerErrorCode_ServiceTimeout :: HandlerErrorCode
pattern HandlerErrorCode_Throttling :: HandlerErrorCode
newtype Operation
Operation' :: Text -> Operation
[fromOperation] :: Operation -> Text
pattern Operation_CREATE :: Operation
pattern Operation_DELETE :: Operation
pattern Operation_UPDATE :: Operation
newtype OperationStatus
OperationStatus' :: Text -> OperationStatus
[fromOperationStatus] :: OperationStatus -> Text
pattern OperationStatus_CANCEL_COMPLETE :: OperationStatus
pattern OperationStatus_CANCEL_IN_PROGRESS :: OperationStatus
pattern OperationStatus_FAILED :: OperationStatus
pattern OperationStatus_IN_PROGRESS :: OperationStatus
pattern OperationStatus_PENDING :: OperationStatus
pattern OperationStatus_SUCCESS :: OperationStatus

-- | Represents the current status of a resource operation request. For
--   more information, see <a>Managing resource operation requests</a> in
--   the <i>Amazon Web Services Cloud Control API User Guide</i>.
--   
--   <i>See:</i> <a>newProgressEvent</a> smart constructor.
data ProgressEvent
ProgressEvent' :: Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe (Sensitive Text) -> Maybe Operation -> Maybe Text -> Maybe OperationStatus -> Maybe POSIX -> Maybe Text -> Maybe HandlerErrorCode -> ProgressEvent

-- | Create a value of <a>ProgressEvent</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:retryAfter:ProgressEvent'</a>, <a>progressEvent_retryAfter</a>
--   - When to next request the status of this resource operation request.
--   
--   <a>$sel:typeName:ProgressEvent'</a>, <a>progressEvent_typeName</a> -
--   The name of the resource type used in the operation.
--   
--   <a>$sel:requestToken:ProgressEvent'</a>,
--   <a>progressEvent_requestToken</a> - The unique token representing this
--   resource operation request.
--   
--   Use the <tt>RequestToken</tt> with <a>GetResourceRequestStatus</a> to
--   return the current status of a resource operation request.
--   
--   <a>$sel:resourceModel:ProgressEvent'</a>,
--   <a>progressEvent_resourceModel</a> - A JSON string containing the
--   resource model, consisting of each resource property and its current
--   value.
--   
--   <a>$sel:operation:ProgressEvent'</a>, <a>progressEvent_operation</a> -
--   The resource operation type.
--   
--   <a>$sel:identifier:ProgressEvent'</a>, <a>progressEvent_identifier</a>
--   - The primary identifier for the resource.
--   
--   In some cases, the resource identifier may be available before the
--   resource operation has reached a status of <tt>SUCCESS</tt>.
--   
--   <a>$sel:operationStatus:ProgressEvent'</a>,
--   <a>progressEvent_operationStatus</a> - The current status of the
--   resource operation request.
--   
--   <ul>
--   <li><tt>PENDING</tt>: The resource operation has not yet started.</li>
--   <li><tt>IN_PROGRESS</tt>: The resource operation is currently in
--   progress.</li>
--   <li><tt>SUCCESS</tt>: The resource operation has successfully
--   completed.</li>
--   <li><tt>FAILED</tt>: The resource operation has failed. Refer to the
--   error code and status message for more information.</li>
--   <li><tt>CANCEL_IN_PROGRESS</tt>: The resource operation is in the
--   process of being canceled.</li>
--   <li><tt>CANCEL_COMPLETE</tt>: The resource operation has been
--   canceled.</li>
--   </ul>
--   
--   <a>$sel:eventTime:ProgressEvent'</a>, <a>progressEvent_eventTime</a> -
--   When the resource operation request was initiated.
--   
--   <a>$sel:statusMessage:ProgressEvent'</a>,
--   <a>progressEvent_statusMessage</a> - Any message explaining the
--   current status.
--   
--   <a>$sel:errorCode:ProgressEvent'</a>, <a>progressEvent_errorCode</a> -
--   For requests with a status of <tt>FAILED</tt>, the associated error
--   code.
--   
--   For error code definitions, see <a>Handler error codes</a> in the
--   /CloudFormation Command Line Interface User Guide for Extension
--   Development/.
newProgressEvent :: ProgressEvent

-- | Represents information about a provisioned resource.
--   
--   <i>See:</i> <a>newResourceDescription</a> smart constructor.
data ResourceDescription
ResourceDescription' :: Maybe Text -> Maybe (Sensitive Text) -> ResourceDescription

-- | Create a value of <a>ResourceDescription</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:identifier:ResourceDescription'</a>,
--   <a>resourceDescription_identifier</a> - The primary identifier for the
--   resource.
--   
--   For more information, see <a>Identifying resources</a> in the
--   <i>Amazon Web Services Cloud Control API User Guide</i>.
--   
--   <a>$sel:properties:ResourceDescription'</a>,
--   <a>resourceDescription_properties</a> - A list of the resource
--   properties and their current values.
newResourceDescription :: ResourceDescription

-- | The filter criteria to use in determining the requests returned.
--   
--   <i>See:</i> <a>newResourceRequestStatusFilter</a> smart constructor.
data ResourceRequestStatusFilter
ResourceRequestStatusFilter' :: Maybe [OperationStatus] -> Maybe [Operation] -> ResourceRequestStatusFilter

-- | Create a value of <a>ResourceRequestStatusFilter</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:operationStatuses:ResourceRequestStatusFilter'</a>,
--   <a>resourceRequestStatusFilter_operationStatuses</a> - The operation
--   statuses to include in the filter.
--   
--   <ul>
--   <li><tt>PENDING</tt>: The operation has been requested, but not yet
--   initiated.</li>
--   <li><tt>IN_PROGRESS</tt>: The operation is currently in progress.</li>
--   <li><tt>SUCCESS</tt>: The operation has successfully completed.</li>
--   <li><tt>FAILED</tt>: The operation has failed.</li>
--   <li><tt>CANCEL_IN_PROGRESS</tt>: The operation is currently in the
--   process of being canceled.</li>
--   <li><tt>CANCEL_COMPLETE</tt>: The operation has been canceled.</li>
--   </ul>
--   
--   <a>$sel:operations:ResourceRequestStatusFilter'</a>,
--   <a>resourceRequestStatusFilter_operations</a> - The operation types to
--   include in the filter.
newResourceRequestStatusFilter :: ResourceRequestStatusFilter
