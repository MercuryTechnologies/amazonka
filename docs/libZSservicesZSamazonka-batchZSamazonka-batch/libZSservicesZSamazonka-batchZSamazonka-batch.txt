-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/

@package libZSservicesZSamazonka-batchZSamazonka-batch
@version 2.0


module Network.AWS.Batch.Types.ArrayJobDependency
newtype ArrayJobDependency
ArrayJobDependency' :: Text -> ArrayJobDependency
[fromArrayJobDependency] :: ArrayJobDependency -> Text
pattern ArrayJobDependency_N_TO_N :: ArrayJobDependency
pattern ArrayJobDependency_SEQUENTIAL :: ArrayJobDependency
instance Network.AWS.Data.XML.ToXML Network.AWS.Batch.Types.ArrayJobDependency.ArrayJobDependency
instance Network.AWS.Data.XML.FromXML Network.AWS.Batch.Types.ArrayJobDependency.ArrayJobDependency
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Batch.Types.ArrayJobDependency.ArrayJobDependency
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Batch.Types.ArrayJobDependency.ArrayJobDependency
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Batch.Types.ArrayJobDependency.ArrayJobDependency
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Batch.Types.ArrayJobDependency.ArrayJobDependency
instance Network.AWS.Data.Query.ToQuery Network.AWS.Batch.Types.ArrayJobDependency.ArrayJobDependency
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Batch.Types.ArrayJobDependency.ArrayJobDependency
instance Network.AWS.Data.Log.ToLog Network.AWS.Batch.Types.ArrayJobDependency.ArrayJobDependency
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Batch.Types.ArrayJobDependency.ArrayJobDependency
instance Network.AWS.Data.Text.ToText Network.AWS.Batch.Types.ArrayJobDependency.ArrayJobDependency
instance Network.AWS.Data.Text.FromText Network.AWS.Batch.Types.ArrayJobDependency.ArrayJobDependency
instance Control.DeepSeq.NFData Network.AWS.Batch.Types.ArrayJobDependency.ArrayJobDependency
instance Data.Hashable.Class.Hashable Network.AWS.Batch.Types.ArrayJobDependency.ArrayJobDependency
instance GHC.Generics.Generic Network.AWS.Batch.Types.ArrayJobDependency.ArrayJobDependency
instance GHC.Classes.Ord Network.AWS.Batch.Types.ArrayJobDependency.ArrayJobDependency
instance GHC.Classes.Eq Network.AWS.Batch.Types.ArrayJobDependency.ArrayJobDependency
instance GHC.Read.Read Network.AWS.Batch.Types.ArrayJobDependency.ArrayJobDependency
instance GHC.Show.Show Network.AWS.Batch.Types.ArrayJobDependency.ArrayJobDependency


module Network.AWS.Batch.Types.ArrayProperties

-- | An object representing an Batch array job.
--   
--   <i>See:</i> <a>newArrayProperties</a> smart constructor.
data ArrayProperties
ArrayProperties' :: Maybe Int -> ArrayProperties

-- | The size of the array job.
[$sel:size:ArrayProperties'] :: ArrayProperties -> Maybe Int

-- | Create a value of <a>ArrayProperties</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:size:ArrayProperties'</a>, <a>arrayProperties_size</a> - The
--   size of the array job.
newArrayProperties :: ArrayProperties

-- | The size of the array job.
arrayProperties_size :: Lens' ArrayProperties (Maybe Int)
instance GHC.Generics.Generic Network.AWS.Batch.Types.ArrayProperties.ArrayProperties
instance GHC.Show.Show Network.AWS.Batch.Types.ArrayProperties.ArrayProperties
instance GHC.Read.Read Network.AWS.Batch.Types.ArrayProperties.ArrayProperties
instance GHC.Classes.Eq Network.AWS.Batch.Types.ArrayProperties.ArrayProperties
instance Data.Hashable.Class.Hashable Network.AWS.Batch.Types.ArrayProperties.ArrayProperties
instance Control.DeepSeq.NFData Network.AWS.Batch.Types.ArrayProperties.ArrayProperties
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Batch.Types.ArrayProperties.ArrayProperties


module Network.AWS.Batch.Types.ArrayPropertiesDetail

-- | An object representing the array properties of a job.
--   
--   <i>See:</i> <a>newArrayPropertiesDetail</a> smart constructor.
data ArrayPropertiesDetail
ArrayPropertiesDetail' :: Maybe Int -> Maybe (HashMap Text Int) -> Maybe Int -> ArrayPropertiesDetail

-- | The size of the array job. This parameter is returned for parent array
--   jobs.
[$sel:size:ArrayPropertiesDetail'] :: ArrayPropertiesDetail -> Maybe Int

-- | A summary of the number of array job children in each available job
--   status. This parameter is returned for parent array jobs.
[$sel:statusSummary:ArrayPropertiesDetail'] :: ArrayPropertiesDetail -> Maybe (HashMap Text Int)

-- | The job index within the array that's associated with this job. This
--   parameter is returned for array job children.
[$sel:index:ArrayPropertiesDetail'] :: ArrayPropertiesDetail -> Maybe Int

-- | Create a value of <a>ArrayPropertiesDetail</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:size:ArrayPropertiesDetail'</a>,
--   <a>arrayPropertiesDetail_size</a> - The size of the array job. This
--   parameter is returned for parent array jobs.
--   
--   <a>$sel:statusSummary:ArrayPropertiesDetail'</a>,
--   <a>arrayPropertiesDetail_statusSummary</a> - A summary of the number
--   of array job children in each available job status. This parameter is
--   returned for parent array jobs.
--   
--   <a>$sel:index:ArrayPropertiesDetail'</a>,
--   <a>arrayPropertiesDetail_index</a> - The job index within the array
--   that's associated with this job. This parameter is returned for array
--   job children.
newArrayPropertiesDetail :: ArrayPropertiesDetail

-- | The size of the array job. This parameter is returned for parent array
--   jobs.
arrayPropertiesDetail_size :: Lens' ArrayPropertiesDetail (Maybe Int)

-- | A summary of the number of array job children in each available job
--   status. This parameter is returned for parent array jobs.
arrayPropertiesDetail_statusSummary :: Lens' ArrayPropertiesDetail (Maybe (HashMap Text Int))

-- | The job index within the array that's associated with this job. This
--   parameter is returned for array job children.
arrayPropertiesDetail_index :: Lens' ArrayPropertiesDetail (Maybe Int)
instance GHC.Generics.Generic Network.AWS.Batch.Types.ArrayPropertiesDetail.ArrayPropertiesDetail
instance GHC.Show.Show Network.AWS.Batch.Types.ArrayPropertiesDetail.ArrayPropertiesDetail
instance GHC.Read.Read Network.AWS.Batch.Types.ArrayPropertiesDetail.ArrayPropertiesDetail
instance GHC.Classes.Eq Network.AWS.Batch.Types.ArrayPropertiesDetail.ArrayPropertiesDetail
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Batch.Types.ArrayPropertiesDetail.ArrayPropertiesDetail
instance Data.Hashable.Class.Hashable Network.AWS.Batch.Types.ArrayPropertiesDetail.ArrayPropertiesDetail
instance Control.DeepSeq.NFData Network.AWS.Batch.Types.ArrayPropertiesDetail.ArrayPropertiesDetail


module Network.AWS.Batch.Types.ArrayPropertiesSummary

-- | An object representing the array properties of a job.
--   
--   <i>See:</i> <a>newArrayPropertiesSummary</a> smart constructor.
data ArrayPropertiesSummary
ArrayPropertiesSummary' :: Maybe Int -> Maybe Int -> ArrayPropertiesSummary

-- | The size of the array job. This parameter is returned for parent array
--   jobs.
[$sel:size:ArrayPropertiesSummary'] :: ArrayPropertiesSummary -> Maybe Int

-- | The job index within the array that's associated with this job. This
--   parameter is returned for children of array jobs.
[$sel:index:ArrayPropertiesSummary'] :: ArrayPropertiesSummary -> Maybe Int

-- | Create a value of <a>ArrayPropertiesSummary</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:size:ArrayPropertiesSummary'</a>,
--   <a>arrayPropertiesSummary_size</a> - The size of the array job. This
--   parameter is returned for parent array jobs.
--   
--   <a>$sel:index:ArrayPropertiesSummary'</a>,
--   <a>arrayPropertiesSummary_index</a> - The job index within the array
--   that's associated with this job. This parameter is returned for
--   children of array jobs.
newArrayPropertiesSummary :: ArrayPropertiesSummary

-- | The size of the array job. This parameter is returned for parent array
--   jobs.
arrayPropertiesSummary_size :: Lens' ArrayPropertiesSummary (Maybe Int)

-- | The job index within the array that's associated with this job. This
--   parameter is returned for children of array jobs.
arrayPropertiesSummary_index :: Lens' ArrayPropertiesSummary (Maybe Int)
instance GHC.Generics.Generic Network.AWS.Batch.Types.ArrayPropertiesSummary.ArrayPropertiesSummary
instance GHC.Show.Show Network.AWS.Batch.Types.ArrayPropertiesSummary.ArrayPropertiesSummary
instance GHC.Read.Read Network.AWS.Batch.Types.ArrayPropertiesSummary.ArrayPropertiesSummary
instance GHC.Classes.Eq Network.AWS.Batch.Types.ArrayPropertiesSummary.ArrayPropertiesSummary
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Batch.Types.ArrayPropertiesSummary.ArrayPropertiesSummary
instance Data.Hashable.Class.Hashable Network.AWS.Batch.Types.ArrayPropertiesSummary.ArrayPropertiesSummary
instance Control.DeepSeq.NFData Network.AWS.Batch.Types.ArrayPropertiesSummary.ArrayPropertiesSummary


module Network.AWS.Batch.Types.AssignPublicIp
newtype AssignPublicIp
AssignPublicIp' :: Text -> AssignPublicIp
[fromAssignPublicIp] :: AssignPublicIp -> Text
pattern AssignPublicIp_DISABLED :: AssignPublicIp
pattern AssignPublicIp_ENABLED :: AssignPublicIp
instance Network.AWS.Data.XML.ToXML Network.AWS.Batch.Types.AssignPublicIp.AssignPublicIp
instance Network.AWS.Data.XML.FromXML Network.AWS.Batch.Types.AssignPublicIp.AssignPublicIp
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Batch.Types.AssignPublicIp.AssignPublicIp
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Batch.Types.AssignPublicIp.AssignPublicIp
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Batch.Types.AssignPublicIp.AssignPublicIp
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Batch.Types.AssignPublicIp.AssignPublicIp
instance Network.AWS.Data.Query.ToQuery Network.AWS.Batch.Types.AssignPublicIp.AssignPublicIp
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Batch.Types.AssignPublicIp.AssignPublicIp
instance Network.AWS.Data.Log.ToLog Network.AWS.Batch.Types.AssignPublicIp.AssignPublicIp
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Batch.Types.AssignPublicIp.AssignPublicIp
instance Network.AWS.Data.Text.ToText Network.AWS.Batch.Types.AssignPublicIp.AssignPublicIp
instance Network.AWS.Data.Text.FromText Network.AWS.Batch.Types.AssignPublicIp.AssignPublicIp
instance Control.DeepSeq.NFData Network.AWS.Batch.Types.AssignPublicIp.AssignPublicIp
instance Data.Hashable.Class.Hashable Network.AWS.Batch.Types.AssignPublicIp.AssignPublicIp
instance GHC.Generics.Generic Network.AWS.Batch.Types.AssignPublicIp.AssignPublicIp
instance GHC.Classes.Ord Network.AWS.Batch.Types.AssignPublicIp.AssignPublicIp
instance GHC.Classes.Eq Network.AWS.Batch.Types.AssignPublicIp.AssignPublicIp
instance GHC.Read.Read Network.AWS.Batch.Types.AssignPublicIp.AssignPublicIp
instance GHC.Show.Show Network.AWS.Batch.Types.AssignPublicIp.AssignPublicIp


module Network.AWS.Batch.Types.CEState
newtype CEState
CEState' :: Text -> CEState
[fromCEState] :: CEState -> Text
pattern CEState_DISABLED :: CEState
pattern CEState_ENABLED :: CEState
instance Network.AWS.Data.XML.ToXML Network.AWS.Batch.Types.CEState.CEState
instance Network.AWS.Data.XML.FromXML Network.AWS.Batch.Types.CEState.CEState
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Batch.Types.CEState.CEState
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Batch.Types.CEState.CEState
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Batch.Types.CEState.CEState
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Batch.Types.CEState.CEState
instance Network.AWS.Data.Query.ToQuery Network.AWS.Batch.Types.CEState.CEState
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Batch.Types.CEState.CEState
instance Network.AWS.Data.Log.ToLog Network.AWS.Batch.Types.CEState.CEState
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Batch.Types.CEState.CEState
instance Network.AWS.Data.Text.ToText Network.AWS.Batch.Types.CEState.CEState
instance Network.AWS.Data.Text.FromText Network.AWS.Batch.Types.CEState.CEState
instance Control.DeepSeq.NFData Network.AWS.Batch.Types.CEState.CEState
instance Data.Hashable.Class.Hashable Network.AWS.Batch.Types.CEState.CEState
instance GHC.Generics.Generic Network.AWS.Batch.Types.CEState.CEState
instance GHC.Classes.Ord Network.AWS.Batch.Types.CEState.CEState
instance GHC.Classes.Eq Network.AWS.Batch.Types.CEState.CEState
instance GHC.Read.Read Network.AWS.Batch.Types.CEState.CEState
instance GHC.Show.Show Network.AWS.Batch.Types.CEState.CEState


module Network.AWS.Batch.Types.CEStatus
newtype CEStatus
CEStatus' :: Text -> CEStatus
[fromCEStatus] :: CEStatus -> Text
pattern CEStatus_CREATING :: CEStatus
pattern CEStatus_DELETED :: CEStatus
pattern CEStatus_DELETING :: CEStatus
pattern CEStatus_INVALID :: CEStatus
pattern CEStatus_UPDATING :: CEStatus
pattern CEStatus_VALID :: CEStatus
instance Network.AWS.Data.XML.ToXML Network.AWS.Batch.Types.CEStatus.CEStatus
instance Network.AWS.Data.XML.FromXML Network.AWS.Batch.Types.CEStatus.CEStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Batch.Types.CEStatus.CEStatus
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Batch.Types.CEStatus.CEStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Batch.Types.CEStatus.CEStatus
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Batch.Types.CEStatus.CEStatus
instance Network.AWS.Data.Query.ToQuery Network.AWS.Batch.Types.CEStatus.CEStatus
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Batch.Types.CEStatus.CEStatus
instance Network.AWS.Data.Log.ToLog Network.AWS.Batch.Types.CEStatus.CEStatus
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Batch.Types.CEStatus.CEStatus
instance Network.AWS.Data.Text.ToText Network.AWS.Batch.Types.CEStatus.CEStatus
instance Network.AWS.Data.Text.FromText Network.AWS.Batch.Types.CEStatus.CEStatus
instance Control.DeepSeq.NFData Network.AWS.Batch.Types.CEStatus.CEStatus
instance Data.Hashable.Class.Hashable Network.AWS.Batch.Types.CEStatus.CEStatus
instance GHC.Generics.Generic Network.AWS.Batch.Types.CEStatus.CEStatus
instance GHC.Classes.Ord Network.AWS.Batch.Types.CEStatus.CEStatus
instance GHC.Classes.Eq Network.AWS.Batch.Types.CEStatus.CEStatus
instance GHC.Read.Read Network.AWS.Batch.Types.CEStatus.CEStatus
instance GHC.Show.Show Network.AWS.Batch.Types.CEStatus.CEStatus


module Network.AWS.Batch.Types.CEType
newtype CEType
CEType' :: Text -> CEType
[fromCEType] :: CEType -> Text
pattern CEType_MANAGED :: CEType
pattern CEType_UNMANAGED :: CEType
instance Network.AWS.Data.XML.ToXML Network.AWS.Batch.Types.CEType.CEType
instance Network.AWS.Data.XML.FromXML Network.AWS.Batch.Types.CEType.CEType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Batch.Types.CEType.CEType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Batch.Types.CEType.CEType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Batch.Types.CEType.CEType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Batch.Types.CEType.CEType
instance Network.AWS.Data.Query.ToQuery Network.AWS.Batch.Types.CEType.CEType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Batch.Types.CEType.CEType
instance Network.AWS.Data.Log.ToLog Network.AWS.Batch.Types.CEType.CEType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Batch.Types.CEType.CEType
instance Network.AWS.Data.Text.ToText Network.AWS.Batch.Types.CEType.CEType
instance Network.AWS.Data.Text.FromText Network.AWS.Batch.Types.CEType.CEType
instance Control.DeepSeq.NFData Network.AWS.Batch.Types.CEType.CEType
instance Data.Hashable.Class.Hashable Network.AWS.Batch.Types.CEType.CEType
instance GHC.Generics.Generic Network.AWS.Batch.Types.CEType.CEType
instance GHC.Classes.Ord Network.AWS.Batch.Types.CEType.CEType
instance GHC.Classes.Eq Network.AWS.Batch.Types.CEType.CEType
instance GHC.Read.Read Network.AWS.Batch.Types.CEType.CEType
instance GHC.Show.Show Network.AWS.Batch.Types.CEType.CEType


module Network.AWS.Batch.Types.CRAllocationStrategy
newtype CRAllocationStrategy
CRAllocationStrategy' :: Text -> CRAllocationStrategy
[fromCRAllocationStrategy] :: CRAllocationStrategy -> Text
pattern CRAllocationStrategy_BEST_FIT :: CRAllocationStrategy
pattern CRAllocationStrategy_BEST_FIT_PROGRESSIVE :: CRAllocationStrategy
pattern CRAllocationStrategy_SPOT_CAPACITY_OPTIMIZED :: CRAllocationStrategy
instance Network.AWS.Data.XML.ToXML Network.AWS.Batch.Types.CRAllocationStrategy.CRAllocationStrategy
instance Network.AWS.Data.XML.FromXML Network.AWS.Batch.Types.CRAllocationStrategy.CRAllocationStrategy
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Batch.Types.CRAllocationStrategy.CRAllocationStrategy
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Batch.Types.CRAllocationStrategy.CRAllocationStrategy
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Batch.Types.CRAllocationStrategy.CRAllocationStrategy
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Batch.Types.CRAllocationStrategy.CRAllocationStrategy
instance Network.AWS.Data.Query.ToQuery Network.AWS.Batch.Types.CRAllocationStrategy.CRAllocationStrategy
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Batch.Types.CRAllocationStrategy.CRAllocationStrategy
instance Network.AWS.Data.Log.ToLog Network.AWS.Batch.Types.CRAllocationStrategy.CRAllocationStrategy
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Batch.Types.CRAllocationStrategy.CRAllocationStrategy
instance Network.AWS.Data.Text.ToText Network.AWS.Batch.Types.CRAllocationStrategy.CRAllocationStrategy
instance Network.AWS.Data.Text.FromText Network.AWS.Batch.Types.CRAllocationStrategy.CRAllocationStrategy
instance Control.DeepSeq.NFData Network.AWS.Batch.Types.CRAllocationStrategy.CRAllocationStrategy
instance Data.Hashable.Class.Hashable Network.AWS.Batch.Types.CRAllocationStrategy.CRAllocationStrategy
instance GHC.Generics.Generic Network.AWS.Batch.Types.CRAllocationStrategy.CRAllocationStrategy
instance GHC.Classes.Ord Network.AWS.Batch.Types.CRAllocationStrategy.CRAllocationStrategy
instance GHC.Classes.Eq Network.AWS.Batch.Types.CRAllocationStrategy.CRAllocationStrategy
instance GHC.Read.Read Network.AWS.Batch.Types.CRAllocationStrategy.CRAllocationStrategy
instance GHC.Show.Show Network.AWS.Batch.Types.CRAllocationStrategy.CRAllocationStrategy


module Network.AWS.Batch.Types.CRType
newtype CRType
CRType' :: Text -> CRType
[fromCRType] :: CRType -> Text
pattern CRType_EC2 :: CRType
pattern CRType_FARGATE :: CRType
pattern CRType_FARGATE_SPOT :: CRType
pattern CRType_SPOT :: CRType
instance Network.AWS.Data.XML.ToXML Network.AWS.Batch.Types.CRType.CRType
instance Network.AWS.Data.XML.FromXML Network.AWS.Batch.Types.CRType.CRType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Batch.Types.CRType.CRType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Batch.Types.CRType.CRType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Batch.Types.CRType.CRType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Batch.Types.CRType.CRType
instance Network.AWS.Data.Query.ToQuery Network.AWS.Batch.Types.CRType.CRType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Batch.Types.CRType.CRType
instance Network.AWS.Data.Log.ToLog Network.AWS.Batch.Types.CRType.CRType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Batch.Types.CRType.CRType
instance Network.AWS.Data.Text.ToText Network.AWS.Batch.Types.CRType.CRType
instance Network.AWS.Data.Text.FromText Network.AWS.Batch.Types.CRType.CRType
instance Control.DeepSeq.NFData Network.AWS.Batch.Types.CRType.CRType
instance Data.Hashable.Class.Hashable Network.AWS.Batch.Types.CRType.CRType
instance GHC.Generics.Generic Network.AWS.Batch.Types.CRType.CRType
instance GHC.Classes.Ord Network.AWS.Batch.Types.CRType.CRType
instance GHC.Classes.Eq Network.AWS.Batch.Types.CRType.CRType
instance GHC.Read.Read Network.AWS.Batch.Types.CRType.CRType
instance GHC.Show.Show Network.AWS.Batch.Types.CRType.CRType


module Network.AWS.Batch.Types.ComputeEnvironmentOrder

-- | The order in which compute environments are tried for job placement
--   within a queue. Compute environments are tried in ascending order. For
--   example, if two compute environments are associated with a job queue,
--   the compute environment with a lower order integer value is tried for
--   job placement first. Compute environments must be in the
--   <tt>VALID</tt> state before you can associate them with a job queue.
--   All of the compute environments must be either EC2 (<tt>EC2</tt> or
--   <tt>SPOT</tt>) or Fargate (<tt>FARGATE</tt> or <tt>FARGATE_SPOT</tt>);
--   EC2 and Fargate compute environments can't be mixed.
--   
--   All compute environments that are associated with a job queue must
--   share the same architecture. Batch doesn't support mixing compute
--   environment architecture types in a single job queue.
--   
--   <i>See:</i> <a>newComputeEnvironmentOrder</a> smart constructor.
data ComputeEnvironmentOrder
ComputeEnvironmentOrder' :: Int -> Text -> ComputeEnvironmentOrder

-- | The order of the compute environment. Compute environments are tried
--   in ascending order. For example, if two compute environments are
--   associated with a job queue, the compute environment with a lower
--   <tt>order</tt> integer value is tried for job placement first.
[$sel:order:ComputeEnvironmentOrder'] :: ComputeEnvironmentOrder -> Int

-- | The Amazon Resource Name (ARN) of the compute environment.
[$sel:computeEnvironment:ComputeEnvironmentOrder'] :: ComputeEnvironmentOrder -> Text

-- | Create a value of <a>ComputeEnvironmentOrder</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:order:ComputeEnvironmentOrder'</a>,
--   <a>computeEnvironmentOrder_order</a> - The order of the compute
--   environment. Compute environments are tried in ascending order. For
--   example, if two compute environments are associated with a job queue,
--   the compute environment with a lower <tt>order</tt> integer value is
--   tried for job placement first.
--   
--   <a>$sel:computeEnvironment:ComputeEnvironmentOrder'</a>,
--   <a>computeEnvironmentOrder_computeEnvironment</a> - The Amazon
--   Resource Name (ARN) of the compute environment.
newComputeEnvironmentOrder :: Int -> Text -> ComputeEnvironmentOrder

-- | The order of the compute environment. Compute environments are tried
--   in ascending order. For example, if two compute environments are
--   associated with a job queue, the compute environment with a lower
--   <tt>order</tt> integer value is tried for job placement first.
computeEnvironmentOrder_order :: Lens' ComputeEnvironmentOrder Int

-- | The Amazon Resource Name (ARN) of the compute environment.
computeEnvironmentOrder_computeEnvironment :: Lens' ComputeEnvironmentOrder Text
instance GHC.Generics.Generic Network.AWS.Batch.Types.ComputeEnvironmentOrder.ComputeEnvironmentOrder
instance GHC.Show.Show Network.AWS.Batch.Types.ComputeEnvironmentOrder.ComputeEnvironmentOrder
instance GHC.Read.Read Network.AWS.Batch.Types.ComputeEnvironmentOrder.ComputeEnvironmentOrder
instance GHC.Classes.Eq Network.AWS.Batch.Types.ComputeEnvironmentOrder.ComputeEnvironmentOrder
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Batch.Types.ComputeEnvironmentOrder.ComputeEnvironmentOrder
instance Data.Hashable.Class.Hashable Network.AWS.Batch.Types.ComputeEnvironmentOrder.ComputeEnvironmentOrder
instance Control.DeepSeq.NFData Network.AWS.Batch.Types.ComputeEnvironmentOrder.ComputeEnvironmentOrder
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Batch.Types.ComputeEnvironmentOrder.ComputeEnvironmentOrder


module Network.AWS.Batch.Types.ComputeResourceUpdate

-- | An object representing the attributes of a compute environment that
--   can be updated. For more information, see <a>Compute Environments</a>
--   in the <i>Batch User Guide</i>.
--   
--   <i>See:</i> <a>newComputeResourceUpdate</a> smart constructor.
data ComputeResourceUpdate
ComputeResourceUpdate' :: Maybe [Text] -> Maybe [Text] -> Maybe Int -> Maybe Int -> Maybe Int -> ComputeResourceUpdate

-- | The Amazon EC2 security groups associated with instances launched in
--   the compute environment. This parameter is required for Fargate
--   compute resources, where it can contain up to 5 security groups. This
--   can't be specified for EC2 compute resources. Providing an empty list
--   is handled as if this parameter wasn't specified and no change is
--   made.
[$sel:securityGroupIds:ComputeResourceUpdate'] :: ComputeResourceUpdate -> Maybe [Text]

-- | The VPC subnets where the compute resources are launched. Fargate
--   compute resources can contain up to 16 subnets. Providing an empty
--   list will be handled as if this parameter wasn't specified and no
--   change is made. This can't be specified for EC2 compute resources. For
--   more information, see <a>VPCs and Subnets</a> in the <i>Amazon VPC
--   User Guide</i>.
[$sel:subnets:ComputeResourceUpdate'] :: ComputeResourceUpdate -> Maybe [Text]

-- | The minimum number of Amazon EC2 vCPUs that an environment should
--   maintain.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources, and shouldn't be specified.
[$sel:minvCpus:ComputeResourceUpdate'] :: ComputeResourceUpdate -> Maybe Int

-- | The maximum number of Amazon EC2 vCPUs that an environment can reach.
--   
--   With both <tt>BEST_FIT_PROGRESSIVE</tt> and
--   <tt>SPOT_CAPACITY_OPTIMIZED</tt> allocation strategies, Batch might
--   need to exceed <tt>maxvCpus</tt> to meet your capacity requirements.
--   In this event, Batch never exceeds <tt>maxvCpus</tt> by more than a
--   single instance. That is, no more than a single instance from among
--   those specified in your compute environment.
[$sel:maxvCpus:ComputeResourceUpdate'] :: ComputeResourceUpdate -> Maybe Int

-- | The desired number of Amazon EC2 vCPUS in the compute environment.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources, and shouldn't be specified.
[$sel:desiredvCpus:ComputeResourceUpdate'] :: ComputeResourceUpdate -> Maybe Int

-- | Create a value of <a>ComputeResourceUpdate</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:securityGroupIds:ComputeResourceUpdate'</a>,
--   <a>computeResourceUpdate_securityGroupIds</a> - The Amazon EC2
--   security groups associated with instances launched in the compute
--   environment. This parameter is required for Fargate compute resources,
--   where it can contain up to 5 security groups. This can't be specified
--   for EC2 compute resources. Providing an empty list is handled as if
--   this parameter wasn't specified and no change is made.
--   
--   <a>$sel:subnets:ComputeResourceUpdate'</a>,
--   <a>computeResourceUpdate_subnets</a> - The VPC subnets where the
--   compute resources are launched. Fargate compute resources can contain
--   up to 16 subnets. Providing an empty list will be handled as if this
--   parameter wasn't specified and no change is made. This can't be
--   specified for EC2 compute resources. For more information, see <a>VPCs
--   and Subnets</a> in the <i>Amazon VPC User Guide</i>.
--   
--   <a>$sel:minvCpus:ComputeResourceUpdate'</a>,
--   <a>computeResourceUpdate_minvCpus</a> - The minimum number of Amazon
--   EC2 vCPUs that an environment should maintain.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources, and shouldn't be specified.
--   
--   <a>$sel:maxvCpus:ComputeResourceUpdate'</a>,
--   <a>computeResourceUpdate_maxvCpus</a> - The maximum number of Amazon
--   EC2 vCPUs that an environment can reach.
--   
--   With both <tt>BEST_FIT_PROGRESSIVE</tt> and
--   <tt>SPOT_CAPACITY_OPTIMIZED</tt> allocation strategies, Batch might
--   need to exceed <tt>maxvCpus</tt> to meet your capacity requirements.
--   In this event, Batch never exceeds <tt>maxvCpus</tt> by more than a
--   single instance. That is, no more than a single instance from among
--   those specified in your compute environment.
--   
--   <a>$sel:desiredvCpus:ComputeResourceUpdate'</a>,
--   <a>computeResourceUpdate_desiredvCpus</a> - The desired number of
--   Amazon EC2 vCPUS in the compute environment.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources, and shouldn't be specified.
newComputeResourceUpdate :: ComputeResourceUpdate

-- | The Amazon EC2 security groups associated with instances launched in
--   the compute environment. This parameter is required for Fargate
--   compute resources, where it can contain up to 5 security groups. This
--   can't be specified for EC2 compute resources. Providing an empty list
--   is handled as if this parameter wasn't specified and no change is
--   made.
computeResourceUpdate_securityGroupIds :: Lens' ComputeResourceUpdate (Maybe [Text])

-- | The VPC subnets where the compute resources are launched. Fargate
--   compute resources can contain up to 16 subnets. Providing an empty
--   list will be handled as if this parameter wasn't specified and no
--   change is made. This can't be specified for EC2 compute resources. For
--   more information, see <a>VPCs and Subnets</a> in the <i>Amazon VPC
--   User Guide</i>.
computeResourceUpdate_subnets :: Lens' ComputeResourceUpdate (Maybe [Text])

-- | The minimum number of Amazon EC2 vCPUs that an environment should
--   maintain.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources, and shouldn't be specified.
computeResourceUpdate_minvCpus :: Lens' ComputeResourceUpdate (Maybe Int)

-- | The maximum number of Amazon EC2 vCPUs that an environment can reach.
--   
--   With both <tt>BEST_FIT_PROGRESSIVE</tt> and
--   <tt>SPOT_CAPACITY_OPTIMIZED</tt> allocation strategies, Batch might
--   need to exceed <tt>maxvCpus</tt> to meet your capacity requirements.
--   In this event, Batch never exceeds <tt>maxvCpus</tt> by more than a
--   single instance. That is, no more than a single instance from among
--   those specified in your compute environment.
computeResourceUpdate_maxvCpus :: Lens' ComputeResourceUpdate (Maybe Int)

-- | The desired number of Amazon EC2 vCPUS in the compute environment.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources, and shouldn't be specified.
computeResourceUpdate_desiredvCpus :: Lens' ComputeResourceUpdate (Maybe Int)
instance GHC.Generics.Generic Network.AWS.Batch.Types.ComputeResourceUpdate.ComputeResourceUpdate
instance GHC.Show.Show Network.AWS.Batch.Types.ComputeResourceUpdate.ComputeResourceUpdate
instance GHC.Read.Read Network.AWS.Batch.Types.ComputeResourceUpdate.ComputeResourceUpdate
instance GHC.Classes.Eq Network.AWS.Batch.Types.ComputeResourceUpdate.ComputeResourceUpdate
instance Data.Hashable.Class.Hashable Network.AWS.Batch.Types.ComputeResourceUpdate.ComputeResourceUpdate
instance Control.DeepSeq.NFData Network.AWS.Batch.Types.ComputeResourceUpdate.ComputeResourceUpdate
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Batch.Types.ComputeResourceUpdate.ComputeResourceUpdate


module Network.AWS.Batch.Types.ContainerSummary

-- | An object representing summary details of a container within a job.
--   
--   <i>See:</i> <a>newContainerSummary</a> smart constructor.
data ContainerSummary
ContainerSummary' :: Maybe Text -> Maybe Int -> ContainerSummary

-- | A short (255 max characters) human-readable string to provide
--   additional details about a running or stopped container.
[$sel:reason:ContainerSummary'] :: ContainerSummary -> Maybe Text

-- | The exit code to return upon completion.
[$sel:exitCode:ContainerSummary'] :: ContainerSummary -> Maybe Int

-- | Create a value of <a>ContainerSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:reason:ContainerSummary'</a>, <a>containerSummary_reason</a> -
--   A short (255 max characters) human-readable string to provide
--   additional details about a running or stopped container.
--   
--   <a>$sel:exitCode:ContainerSummary'</a>,
--   <a>containerSummary_exitCode</a> - The exit code to return upon
--   completion.
newContainerSummary :: ContainerSummary

-- | A short (255 max characters) human-readable string to provide
--   additional details about a running or stopped container.
containerSummary_reason :: Lens' ContainerSummary (Maybe Text)

-- | The exit code to return upon completion.
containerSummary_exitCode :: Lens' ContainerSummary (Maybe Int)
instance GHC.Generics.Generic Network.AWS.Batch.Types.ContainerSummary.ContainerSummary
instance GHC.Show.Show Network.AWS.Batch.Types.ContainerSummary.ContainerSummary
instance GHC.Read.Read Network.AWS.Batch.Types.ContainerSummary.ContainerSummary
instance GHC.Classes.Eq Network.AWS.Batch.Types.ContainerSummary.ContainerSummary
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Batch.Types.ContainerSummary.ContainerSummary
instance Data.Hashable.Class.Hashable Network.AWS.Batch.Types.ContainerSummary.ContainerSummary
instance Control.DeepSeq.NFData Network.AWS.Batch.Types.ContainerSummary.ContainerSummary


module Network.AWS.Batch.Types.DeviceCgroupPermission
newtype DeviceCgroupPermission
DeviceCgroupPermission' :: Text -> DeviceCgroupPermission
[fromDeviceCgroupPermission] :: DeviceCgroupPermission -> Text
pattern DeviceCgroupPermission_MKNOD :: DeviceCgroupPermission
pattern DeviceCgroupPermission_READ :: DeviceCgroupPermission
pattern DeviceCgroupPermission_WRITE :: DeviceCgroupPermission
instance Network.AWS.Data.XML.ToXML Network.AWS.Batch.Types.DeviceCgroupPermission.DeviceCgroupPermission
instance Network.AWS.Data.XML.FromXML Network.AWS.Batch.Types.DeviceCgroupPermission.DeviceCgroupPermission
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Batch.Types.DeviceCgroupPermission.DeviceCgroupPermission
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Batch.Types.DeviceCgroupPermission.DeviceCgroupPermission
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Batch.Types.DeviceCgroupPermission.DeviceCgroupPermission
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Batch.Types.DeviceCgroupPermission.DeviceCgroupPermission
instance Network.AWS.Data.Query.ToQuery Network.AWS.Batch.Types.DeviceCgroupPermission.DeviceCgroupPermission
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Batch.Types.DeviceCgroupPermission.DeviceCgroupPermission
instance Network.AWS.Data.Log.ToLog Network.AWS.Batch.Types.DeviceCgroupPermission.DeviceCgroupPermission
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Batch.Types.DeviceCgroupPermission.DeviceCgroupPermission
instance Network.AWS.Data.Text.ToText Network.AWS.Batch.Types.DeviceCgroupPermission.DeviceCgroupPermission
instance Network.AWS.Data.Text.FromText Network.AWS.Batch.Types.DeviceCgroupPermission.DeviceCgroupPermission
instance Control.DeepSeq.NFData Network.AWS.Batch.Types.DeviceCgroupPermission.DeviceCgroupPermission
instance Data.Hashable.Class.Hashable Network.AWS.Batch.Types.DeviceCgroupPermission.DeviceCgroupPermission
instance GHC.Generics.Generic Network.AWS.Batch.Types.DeviceCgroupPermission.DeviceCgroupPermission
instance GHC.Classes.Ord Network.AWS.Batch.Types.DeviceCgroupPermission.DeviceCgroupPermission
instance GHC.Classes.Eq Network.AWS.Batch.Types.DeviceCgroupPermission.DeviceCgroupPermission
instance GHC.Read.Read Network.AWS.Batch.Types.DeviceCgroupPermission.DeviceCgroupPermission
instance GHC.Show.Show Network.AWS.Batch.Types.DeviceCgroupPermission.DeviceCgroupPermission


module Network.AWS.Batch.Types.Device

-- | An object representing a container instance host device.
--   
--   This object isn't applicable to jobs that are running on Fargate
--   resources and shouldn't be provided.
--   
--   <i>See:</i> <a>newDevice</a> smart constructor.
data Device
Device' :: Maybe Text -> Maybe [DeviceCgroupPermission] -> Text -> Device

-- | The path inside the container that's used to expose the host device.
--   By default, the <tt>hostPath</tt> value is used.
[$sel:containerPath:Device'] :: Device -> Maybe Text

-- | The explicit permissions to provide to the container for the device.
--   By default, the container has permissions for <tt>read</tt>,
--   <tt>write</tt>, and <tt>mknod</tt> for the device.
[$sel:permissions:Device'] :: Device -> Maybe [DeviceCgroupPermission]

-- | The path for the device on the host container instance.
[$sel:hostPath:Device'] :: Device -> Text

-- | Create a value of <a>Device</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:containerPath:Device'</a>, <a>device_containerPath</a> - The
--   path inside the container that's used to expose the host device. By
--   default, the <tt>hostPath</tt> value is used.
--   
--   <a>$sel:permissions:Device'</a>, <a>device_permissions</a> - The
--   explicit permissions to provide to the container for the device. By
--   default, the container has permissions for <tt>read</tt>,
--   <tt>write</tt>, and <tt>mknod</tt> for the device.
--   
--   <a>$sel:hostPath:Device'</a>, <a>device_hostPath</a> - The path for
--   the device on the host container instance.
newDevice :: Text -> Device

-- | The path inside the container that's used to expose the host device.
--   By default, the <tt>hostPath</tt> value is used.
device_containerPath :: Lens' Device (Maybe Text)

-- | The explicit permissions to provide to the container for the device.
--   By default, the container has permissions for <tt>read</tt>,
--   <tt>write</tt>, and <tt>mknod</tt> for the device.
device_permissions :: Lens' Device (Maybe [DeviceCgroupPermission])

-- | The path for the device on the host container instance.
device_hostPath :: Lens' Device Text
instance GHC.Generics.Generic Network.AWS.Batch.Types.Device.Device
instance GHC.Show.Show Network.AWS.Batch.Types.Device.Device
instance GHC.Read.Read Network.AWS.Batch.Types.Device.Device
instance GHC.Classes.Eq Network.AWS.Batch.Types.Device.Device
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Batch.Types.Device.Device
instance Data.Hashable.Class.Hashable Network.AWS.Batch.Types.Device.Device
instance Control.DeepSeq.NFData Network.AWS.Batch.Types.Device.Device
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Batch.Types.Device.Device


module Network.AWS.Batch.Types.EFSAuthorizationConfigIAM
newtype EFSAuthorizationConfigIAM
EFSAuthorizationConfigIAM' :: Text -> EFSAuthorizationConfigIAM
[fromEFSAuthorizationConfigIAM] :: EFSAuthorizationConfigIAM -> Text
pattern EFSAuthorizationConfigIAM_DISABLED :: EFSAuthorizationConfigIAM
pattern EFSAuthorizationConfigIAM_ENABLED :: EFSAuthorizationConfigIAM
instance Network.AWS.Data.XML.ToXML Network.AWS.Batch.Types.EFSAuthorizationConfigIAM.EFSAuthorizationConfigIAM
instance Network.AWS.Data.XML.FromXML Network.AWS.Batch.Types.EFSAuthorizationConfigIAM.EFSAuthorizationConfigIAM
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Batch.Types.EFSAuthorizationConfigIAM.EFSAuthorizationConfigIAM
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Batch.Types.EFSAuthorizationConfigIAM.EFSAuthorizationConfigIAM
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Batch.Types.EFSAuthorizationConfigIAM.EFSAuthorizationConfigIAM
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Batch.Types.EFSAuthorizationConfigIAM.EFSAuthorizationConfigIAM
instance Network.AWS.Data.Query.ToQuery Network.AWS.Batch.Types.EFSAuthorizationConfigIAM.EFSAuthorizationConfigIAM
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Batch.Types.EFSAuthorizationConfigIAM.EFSAuthorizationConfigIAM
instance Network.AWS.Data.Log.ToLog Network.AWS.Batch.Types.EFSAuthorizationConfigIAM.EFSAuthorizationConfigIAM
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Batch.Types.EFSAuthorizationConfigIAM.EFSAuthorizationConfigIAM
instance Network.AWS.Data.Text.ToText Network.AWS.Batch.Types.EFSAuthorizationConfigIAM.EFSAuthorizationConfigIAM
instance Network.AWS.Data.Text.FromText Network.AWS.Batch.Types.EFSAuthorizationConfigIAM.EFSAuthorizationConfigIAM
instance Control.DeepSeq.NFData Network.AWS.Batch.Types.EFSAuthorizationConfigIAM.EFSAuthorizationConfigIAM
instance Data.Hashable.Class.Hashable Network.AWS.Batch.Types.EFSAuthorizationConfigIAM.EFSAuthorizationConfigIAM
instance GHC.Generics.Generic Network.AWS.Batch.Types.EFSAuthorizationConfigIAM.EFSAuthorizationConfigIAM
instance GHC.Classes.Ord Network.AWS.Batch.Types.EFSAuthorizationConfigIAM.EFSAuthorizationConfigIAM
instance GHC.Classes.Eq Network.AWS.Batch.Types.EFSAuthorizationConfigIAM.EFSAuthorizationConfigIAM
instance GHC.Read.Read Network.AWS.Batch.Types.EFSAuthorizationConfigIAM.EFSAuthorizationConfigIAM
instance GHC.Show.Show Network.AWS.Batch.Types.EFSAuthorizationConfigIAM.EFSAuthorizationConfigIAM


module Network.AWS.Batch.Types.EFSAuthorizationConfig

-- | The authorization configuration details for the Amazon EFS file
--   system.
--   
--   <i>See:</i> <a>newEFSAuthorizationConfig</a> smart constructor.
data EFSAuthorizationConfig
EFSAuthorizationConfig' :: Maybe Text -> Maybe EFSAuthorizationConfigIAM -> EFSAuthorizationConfig

-- | The Amazon EFS access point ID to use. If an access point is
--   specified, the root directory value specified in the
--   <tt>EFSVolumeConfiguration</tt> must either be omitted or set to
--   <tt>/</tt> which will enforce the path set on the EFS access point. If
--   an access point is used, transit encryption must be enabled in the
--   <tt>EFSVolumeConfiguration</tt>. For more information, see <a>Working
--   with Amazon EFS Access Points</a> in the <i>Amazon Elastic File System
--   User Guide</i>.
[$sel:accessPointId:EFSAuthorizationConfig'] :: EFSAuthorizationConfig -> Maybe Text

-- | Whether or not to use the Batch job IAM role defined in a job
--   definition when mounting the Amazon EFS file system. If enabled,
--   transit encryption must be enabled in the
--   <tt>EFSVolumeConfiguration</tt>. If this parameter is omitted, the
--   default value of <tt>DISABLED</tt> is used. For more information, see
--   <a>Using Amazon EFS Access Points</a> in the <i>Batch User Guide</i>.
--   EFS IAM authorization requires that <tt>TransitEncryption</tt> be
--   <tt>ENABLED</tt> and that a <tt>JobRoleArn</tt> is specified.
[$sel:iam:EFSAuthorizationConfig'] :: EFSAuthorizationConfig -> Maybe EFSAuthorizationConfigIAM

-- | Create a value of <a>EFSAuthorizationConfig</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:accessPointId:EFSAuthorizationConfig'</a>,
--   <a>eFSAuthorizationConfig_accessPointId</a> - The Amazon EFS access
--   point ID to use. If an access point is specified, the root directory
--   value specified in the <tt>EFSVolumeConfiguration</tt> must either be
--   omitted or set to <tt>/</tt> which will enforce the path set on the
--   EFS access point. If an access point is used, transit encryption must
--   be enabled in the <tt>EFSVolumeConfiguration</tt>. For more
--   information, see <a>Working with Amazon EFS Access Points</a> in the
--   <i>Amazon Elastic File System User Guide</i>.
--   
--   <a>$sel:iam:EFSAuthorizationConfig'</a>,
--   <a>eFSAuthorizationConfig_iam</a> - Whether or not to use the Batch
--   job IAM role defined in a job definition when mounting the Amazon EFS
--   file system. If enabled, transit encryption must be enabled in the
--   <tt>EFSVolumeConfiguration</tt>. If this parameter is omitted, the
--   default value of <tt>DISABLED</tt> is used. For more information, see
--   <a>Using Amazon EFS Access Points</a> in the <i>Batch User Guide</i>.
--   EFS IAM authorization requires that <tt>TransitEncryption</tt> be
--   <tt>ENABLED</tt> and that a <tt>JobRoleArn</tt> is specified.
newEFSAuthorizationConfig :: EFSAuthorizationConfig

-- | The Amazon EFS access point ID to use. If an access point is
--   specified, the root directory value specified in the
--   <tt>EFSVolumeConfiguration</tt> must either be omitted or set to
--   <tt>/</tt> which will enforce the path set on the EFS access point. If
--   an access point is used, transit encryption must be enabled in the
--   <tt>EFSVolumeConfiguration</tt>. For more information, see <a>Working
--   with Amazon EFS Access Points</a> in the <i>Amazon Elastic File System
--   User Guide</i>.
eFSAuthorizationConfig_accessPointId :: Lens' EFSAuthorizationConfig (Maybe Text)

-- | Whether or not to use the Batch job IAM role defined in a job
--   definition when mounting the Amazon EFS file system. If enabled,
--   transit encryption must be enabled in the
--   <tt>EFSVolumeConfiguration</tt>. If this parameter is omitted, the
--   default value of <tt>DISABLED</tt> is used. For more information, see
--   <a>Using Amazon EFS Access Points</a> in the <i>Batch User Guide</i>.
--   EFS IAM authorization requires that <tt>TransitEncryption</tt> be
--   <tt>ENABLED</tt> and that a <tt>JobRoleArn</tt> is specified.
eFSAuthorizationConfig_iam :: Lens' EFSAuthorizationConfig (Maybe EFSAuthorizationConfigIAM)
instance GHC.Generics.Generic Network.AWS.Batch.Types.EFSAuthorizationConfig.EFSAuthorizationConfig
instance GHC.Show.Show Network.AWS.Batch.Types.EFSAuthorizationConfig.EFSAuthorizationConfig
instance GHC.Read.Read Network.AWS.Batch.Types.EFSAuthorizationConfig.EFSAuthorizationConfig
instance GHC.Classes.Eq Network.AWS.Batch.Types.EFSAuthorizationConfig.EFSAuthorizationConfig
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Batch.Types.EFSAuthorizationConfig.EFSAuthorizationConfig
instance Data.Hashable.Class.Hashable Network.AWS.Batch.Types.EFSAuthorizationConfig.EFSAuthorizationConfig
instance Control.DeepSeq.NFData Network.AWS.Batch.Types.EFSAuthorizationConfig.EFSAuthorizationConfig
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Batch.Types.EFSAuthorizationConfig.EFSAuthorizationConfig


module Network.AWS.Batch.Types.EFSTransitEncryption
newtype EFSTransitEncryption
EFSTransitEncryption' :: Text -> EFSTransitEncryption
[fromEFSTransitEncryption] :: EFSTransitEncryption -> Text
pattern EFSTransitEncryption_DISABLED :: EFSTransitEncryption
pattern EFSTransitEncryption_ENABLED :: EFSTransitEncryption
instance Network.AWS.Data.XML.ToXML Network.AWS.Batch.Types.EFSTransitEncryption.EFSTransitEncryption
instance Network.AWS.Data.XML.FromXML Network.AWS.Batch.Types.EFSTransitEncryption.EFSTransitEncryption
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Batch.Types.EFSTransitEncryption.EFSTransitEncryption
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Batch.Types.EFSTransitEncryption.EFSTransitEncryption
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Batch.Types.EFSTransitEncryption.EFSTransitEncryption
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Batch.Types.EFSTransitEncryption.EFSTransitEncryption
instance Network.AWS.Data.Query.ToQuery Network.AWS.Batch.Types.EFSTransitEncryption.EFSTransitEncryption
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Batch.Types.EFSTransitEncryption.EFSTransitEncryption
instance Network.AWS.Data.Log.ToLog Network.AWS.Batch.Types.EFSTransitEncryption.EFSTransitEncryption
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Batch.Types.EFSTransitEncryption.EFSTransitEncryption
instance Network.AWS.Data.Text.ToText Network.AWS.Batch.Types.EFSTransitEncryption.EFSTransitEncryption
instance Network.AWS.Data.Text.FromText Network.AWS.Batch.Types.EFSTransitEncryption.EFSTransitEncryption
instance Control.DeepSeq.NFData Network.AWS.Batch.Types.EFSTransitEncryption.EFSTransitEncryption
instance Data.Hashable.Class.Hashable Network.AWS.Batch.Types.EFSTransitEncryption.EFSTransitEncryption
instance GHC.Generics.Generic Network.AWS.Batch.Types.EFSTransitEncryption.EFSTransitEncryption
instance GHC.Classes.Ord Network.AWS.Batch.Types.EFSTransitEncryption.EFSTransitEncryption
instance GHC.Classes.Eq Network.AWS.Batch.Types.EFSTransitEncryption.EFSTransitEncryption
instance GHC.Read.Read Network.AWS.Batch.Types.EFSTransitEncryption.EFSTransitEncryption
instance GHC.Show.Show Network.AWS.Batch.Types.EFSTransitEncryption.EFSTransitEncryption


module Network.AWS.Batch.Types.EFSVolumeConfiguration

-- | This is used when you're using an Amazon Elastic File System file
--   system for job storage. For more information, see <a>Amazon EFS
--   Volumes</a> in the <i>Batch User Guide</i>.
--   
--   <i>See:</i> <a>newEFSVolumeConfiguration</a> smart constructor.
data EFSVolumeConfiguration
EFSVolumeConfiguration' :: Maybe Text -> Maybe EFSTransitEncryption -> Maybe EFSAuthorizationConfig -> Maybe Int -> Text -> EFSVolumeConfiguration

-- | The directory within the Amazon EFS file system to mount as the root
--   directory inside the host. If this parameter is omitted, the root of
--   the Amazon EFS volume is used instead. Specifying <tt>/</tt> has the
--   same effect as omitting this parameter. The maximum length is 4,096
--   characters.
--   
--   If an EFS access point is specified in the
--   <tt>authorizationConfig</tt>, the root directory parameter must either
--   be omitted or set to <tt>/</tt>, which enforces the path set on the
--   Amazon EFS access point.
[$sel:rootDirectory:EFSVolumeConfiguration'] :: EFSVolumeConfiguration -> Maybe Text

-- | Determines whether to enable encryption for Amazon EFS data in transit
--   between the Amazon ECS host and the Amazon EFS server. Transit
--   encryption must be enabled if Amazon EFS IAM authorization is used. If
--   this parameter is omitted, the default value of <tt>DISABLED</tt> is
--   used. For more information, see <a>Encrypting data in transit</a> in
--   the <i>Amazon Elastic File System User Guide</i>.
[$sel:transitEncryption:EFSVolumeConfiguration'] :: EFSVolumeConfiguration -> Maybe EFSTransitEncryption

-- | The authorization configuration details for the Amazon EFS file
--   system.
[$sel:authorizationConfig:EFSVolumeConfiguration'] :: EFSVolumeConfiguration -> Maybe EFSAuthorizationConfig

-- | The port to use when sending encrypted data between the Amazon ECS
--   host and the Amazon EFS server. If you don't specify a transit
--   encryption port, it uses the port selection strategy that the Amazon
--   EFS mount helper uses. The value must be between 0 and 65,535. For
--   more information, see <a>EFS Mount Helper</a> in the <i>Amazon Elastic
--   File System User Guide</i>.
[$sel:transitEncryptionPort:EFSVolumeConfiguration'] :: EFSVolumeConfiguration -> Maybe Int

-- | The Amazon EFS file system ID to use.
[$sel:fileSystemId:EFSVolumeConfiguration'] :: EFSVolumeConfiguration -> Text

-- | Create a value of <a>EFSVolumeConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:rootDirectory:EFSVolumeConfiguration'</a>,
--   <a>eFSVolumeConfiguration_rootDirectory</a> - The directory within the
--   Amazon EFS file system to mount as the root directory inside the host.
--   If this parameter is omitted, the root of the Amazon EFS volume is
--   used instead. Specifying <tt>/</tt> has the same effect as omitting
--   this parameter. The maximum length is 4,096 characters.
--   
--   If an EFS access point is specified in the
--   <tt>authorizationConfig</tt>, the root directory parameter must either
--   be omitted or set to <tt>/</tt>, which enforces the path set on the
--   Amazon EFS access point.
--   
--   <a>$sel:transitEncryption:EFSVolumeConfiguration'</a>,
--   <a>eFSVolumeConfiguration_transitEncryption</a> - Determines whether
--   to enable encryption for Amazon EFS data in transit between the Amazon
--   ECS host and the Amazon EFS server. Transit encryption must be enabled
--   if Amazon EFS IAM authorization is used. If this parameter is omitted,
--   the default value of <tt>DISABLED</tt> is used. For more information,
--   see <a>Encrypting data in transit</a> in the <i>Amazon Elastic File
--   System User Guide</i>.
--   
--   <a>$sel:authorizationConfig:EFSVolumeConfiguration'</a>,
--   <a>eFSVolumeConfiguration_authorizationConfig</a> - The authorization
--   configuration details for the Amazon EFS file system.
--   
--   <a>$sel:transitEncryptionPort:EFSVolumeConfiguration'</a>,
--   <a>eFSVolumeConfiguration_transitEncryptionPort</a> - The port to use
--   when sending encrypted data between the Amazon ECS host and the Amazon
--   EFS server. If you don't specify a transit encryption port, it uses
--   the port selection strategy that the Amazon EFS mount helper uses. The
--   value must be between 0 and 65,535. For more information, see <a>EFS
--   Mount Helper</a> in the <i>Amazon Elastic File System User Guide</i>.
--   
--   <a>$sel:fileSystemId:EFSVolumeConfiguration'</a>,
--   <a>eFSVolumeConfiguration_fileSystemId</a> - The Amazon EFS file
--   system ID to use.
newEFSVolumeConfiguration :: Text -> EFSVolumeConfiguration

-- | The directory within the Amazon EFS file system to mount as the root
--   directory inside the host. If this parameter is omitted, the root of
--   the Amazon EFS volume is used instead. Specifying <tt>/</tt> has the
--   same effect as omitting this parameter. The maximum length is 4,096
--   characters.
--   
--   If an EFS access point is specified in the
--   <tt>authorizationConfig</tt>, the root directory parameter must either
--   be omitted or set to <tt>/</tt>, which enforces the path set on the
--   Amazon EFS access point.
eFSVolumeConfiguration_rootDirectory :: Lens' EFSVolumeConfiguration (Maybe Text)

-- | Determines whether to enable encryption for Amazon EFS data in transit
--   between the Amazon ECS host and the Amazon EFS server. Transit
--   encryption must be enabled if Amazon EFS IAM authorization is used. If
--   this parameter is omitted, the default value of <tt>DISABLED</tt> is
--   used. For more information, see <a>Encrypting data in transit</a> in
--   the <i>Amazon Elastic File System User Guide</i>.
eFSVolumeConfiguration_transitEncryption :: Lens' EFSVolumeConfiguration (Maybe EFSTransitEncryption)

-- | The authorization configuration details for the Amazon EFS file
--   system.
eFSVolumeConfiguration_authorizationConfig :: Lens' EFSVolumeConfiguration (Maybe EFSAuthorizationConfig)

-- | The port to use when sending encrypted data between the Amazon ECS
--   host and the Amazon EFS server. If you don't specify a transit
--   encryption port, it uses the port selection strategy that the Amazon
--   EFS mount helper uses. The value must be between 0 and 65,535. For
--   more information, see <a>EFS Mount Helper</a> in the <i>Amazon Elastic
--   File System User Guide</i>.
eFSVolumeConfiguration_transitEncryptionPort :: Lens' EFSVolumeConfiguration (Maybe Int)

-- | The Amazon EFS file system ID to use.
eFSVolumeConfiguration_fileSystemId :: Lens' EFSVolumeConfiguration Text
instance GHC.Generics.Generic Network.AWS.Batch.Types.EFSVolumeConfiguration.EFSVolumeConfiguration
instance GHC.Show.Show Network.AWS.Batch.Types.EFSVolumeConfiguration.EFSVolumeConfiguration
instance GHC.Read.Read Network.AWS.Batch.Types.EFSVolumeConfiguration.EFSVolumeConfiguration
instance GHC.Classes.Eq Network.AWS.Batch.Types.EFSVolumeConfiguration.EFSVolumeConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Batch.Types.EFSVolumeConfiguration.EFSVolumeConfiguration
instance Data.Hashable.Class.Hashable Network.AWS.Batch.Types.EFSVolumeConfiguration.EFSVolumeConfiguration
instance Control.DeepSeq.NFData Network.AWS.Batch.Types.EFSVolumeConfiguration.EFSVolumeConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Batch.Types.EFSVolumeConfiguration.EFSVolumeConfiguration


module Network.AWS.Batch.Types.Ec2Configuration

-- | Provides information used to select Amazon Machine Images (AMIs) for
--   instances in the compute environment. If <tt>Ec2Configuration</tt>
--   isn't specified, the default is currently <tt>ECS_AL1</tt> (<a>Amazon
--   Linux</a>) for non-GPU, non AWSGraviton instances. Starting on March
--   31, 2021, this default will be changing to <tt>ECS_AL2</tt> (<a>Amazon
--   Linux 2</a>).
--   
--   This object isn't applicable to jobs that are running on Fargate
--   resources.
--   
--   <i>See:</i> <a>newEc2Configuration</a> smart constructor.
data Ec2Configuration
Ec2Configuration' :: Maybe Text -> Text -> Ec2Configuration

-- | The AMI ID used for instances launched in the compute environment that
--   match the image type. This setting overrides the <tt>imageId</tt> set
--   in the <tt>computeResource</tt> object.
[$sel:imageIdOverride:Ec2Configuration'] :: Ec2Configuration -> Maybe Text

-- | The image type to match with the instance type to select an AMI. If
--   the <tt>imageIdOverride</tt> parameter isn't specified, then a recent
--   <a>Amazon ECS-optimized AMI</a> (<tt>ECS_AL1</tt>) is used. Starting
--   on March 31, 2021, this default will be changing to <tt>ECS_AL2</tt>
--   (<a>Amazon Linux 2</a>).
--   
--   <ul>
--   <li><i>ECS_AL2</i> <a>Amazon Linux 2</a>− Default for all Amazon Web
--   Services Graviton-based instance families (for example, <tt>C6g</tt>,
--   <tt>M6g</tt>, <tt>R6g</tt>, and <tt>T4g</tt>) and can be used for all
--   non-GPU instance types.</li>
--   <li><i>ECS_AL2_NVIDIA</i> <a>Amazon Linux 2 (GPU)</a>−Default for all
--   GPU instance families (for example <tt>P4</tt> and <tt>G4</tt>) and
--   can be used for all non Amazon Web Services Graviton-based instance
--   types.</li>
--   <li><i>ECS_AL1</i> <a>Amazon Linux</a>−Default for all non-GPU, non
--   Amazon Web Services Graviton instance families. Amazon Linux is
--   reaching the end-of-life of standard support. For more information,
--   see <a>Amazon Linux AMI</a>.</li>
--   </ul>
[$sel:imageType:Ec2Configuration'] :: Ec2Configuration -> Text

-- | Create a value of <a>Ec2Configuration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:imageIdOverride:Ec2Configuration'</a>,
--   <a>ec2Configuration_imageIdOverride</a> - The AMI ID used for
--   instances launched in the compute environment that match the image
--   type. This setting overrides the <tt>imageId</tt> set in the
--   <tt>computeResource</tt> object.
--   
--   <a>$sel:imageType:Ec2Configuration'</a>,
--   <a>ec2Configuration_imageType</a> - The image type to match with the
--   instance type to select an AMI. If the <tt>imageIdOverride</tt>
--   parameter isn't specified, then a recent <a>Amazon ECS-optimized
--   AMI</a> (<tt>ECS_AL1</tt>) is used. Starting on March 31, 2021, this
--   default will be changing to <tt>ECS_AL2</tt> (<a>Amazon Linux 2</a>).
--   
--   <ul>
--   <li><i>ECS_AL2</i> <a>Amazon Linux 2</a>− Default for all Amazon Web
--   Services Graviton-based instance families (for example, <tt>C6g</tt>,
--   <tt>M6g</tt>, <tt>R6g</tt>, and <tt>T4g</tt>) and can be used for all
--   non-GPU instance types.</li>
--   <li><i>ECS_AL2_NVIDIA</i> <a>Amazon Linux 2 (GPU)</a>−Default for all
--   GPU instance families (for example <tt>P4</tt> and <tt>G4</tt>) and
--   can be used for all non Amazon Web Services Graviton-based instance
--   types.</li>
--   <li><i>ECS_AL1</i> <a>Amazon Linux</a>−Default for all non-GPU, non
--   Amazon Web Services Graviton instance families. Amazon Linux is
--   reaching the end-of-life of standard support. For more information,
--   see <a>Amazon Linux AMI</a>.</li>
--   </ul>
newEc2Configuration :: Text -> Ec2Configuration

-- | The AMI ID used for instances launched in the compute environment that
--   match the image type. This setting overrides the <tt>imageId</tt> set
--   in the <tt>computeResource</tt> object.
ec2Configuration_imageIdOverride :: Lens' Ec2Configuration (Maybe Text)

-- | The image type to match with the instance type to select an AMI. If
--   the <tt>imageIdOverride</tt> parameter isn't specified, then a recent
--   <a>Amazon ECS-optimized AMI</a> (<tt>ECS_AL1</tt>) is used. Starting
--   on March 31, 2021, this default will be changing to <tt>ECS_AL2</tt>
--   (<a>Amazon Linux 2</a>).
--   
--   <ul>
--   <li><i>ECS_AL2</i> <a>Amazon Linux 2</a>− Default for all Amazon Web
--   Services Graviton-based instance families (for example, <tt>C6g</tt>,
--   <tt>M6g</tt>, <tt>R6g</tt>, and <tt>T4g</tt>) and can be used for all
--   non-GPU instance types.</li>
--   <li><i>ECS_AL2_NVIDIA</i> <a>Amazon Linux 2 (GPU)</a>−Default for all
--   GPU instance families (for example <tt>P4</tt> and <tt>G4</tt>) and
--   can be used for all non Amazon Web Services Graviton-based instance
--   types.</li>
--   <li><i>ECS_AL1</i> <a>Amazon Linux</a>−Default for all non-GPU, non
--   Amazon Web Services Graviton instance families. Amazon Linux is
--   reaching the end-of-life of standard support. For more information,
--   see <a>Amazon Linux AMI</a>.</li>
--   </ul>
ec2Configuration_imageType :: Lens' Ec2Configuration Text
instance GHC.Generics.Generic Network.AWS.Batch.Types.Ec2Configuration.Ec2Configuration
instance GHC.Show.Show Network.AWS.Batch.Types.Ec2Configuration.Ec2Configuration
instance GHC.Read.Read Network.AWS.Batch.Types.Ec2Configuration.Ec2Configuration
instance GHC.Classes.Eq Network.AWS.Batch.Types.Ec2Configuration.Ec2Configuration
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Batch.Types.Ec2Configuration.Ec2Configuration
instance Data.Hashable.Class.Hashable Network.AWS.Batch.Types.Ec2Configuration.Ec2Configuration
instance Control.DeepSeq.NFData Network.AWS.Batch.Types.Ec2Configuration.Ec2Configuration
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Batch.Types.Ec2Configuration.Ec2Configuration


module Network.AWS.Batch.Types.FargatePlatformConfiguration

-- | The platform configuration for jobs that are running on Fargate
--   resources. Jobs that run on EC2 resources must not specify this
--   parameter.
--   
--   <i>See:</i> <a>newFargatePlatformConfiguration</a> smart constructor.
data FargatePlatformConfiguration
FargatePlatformConfiguration' :: Maybe Text -> FargatePlatformConfiguration

-- | The Fargate platform version where the jobs are running. A platform
--   version is specified only for jobs that are running on Fargate
--   resources. If one isn't specified, the <tt>LATEST</tt> platform
--   version is used by default. This uses a recent, approved version of
--   the Fargate platform for compute resources. For more information, see
--   <a>Fargate platform versions</a> in the <i>Amazon Elastic Container
--   Service Developer Guide</i>.
[$sel:platformVersion:FargatePlatformConfiguration'] :: FargatePlatformConfiguration -> Maybe Text

-- | Create a value of <a>FargatePlatformConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:platformVersion:FargatePlatformConfiguration'</a>,
--   <a>fargatePlatformConfiguration_platformVersion</a> - The Fargate
--   platform version where the jobs are running. A platform version is
--   specified only for jobs that are running on Fargate resources. If one
--   isn't specified, the <tt>LATEST</tt> platform version is used by
--   default. This uses a recent, approved version of the Fargate platform
--   for compute resources. For more information, see <a>Fargate platform
--   versions</a> in the <i>Amazon Elastic Container Service Developer
--   Guide</i>.
newFargatePlatformConfiguration :: FargatePlatformConfiguration

-- | The Fargate platform version where the jobs are running. A platform
--   version is specified only for jobs that are running on Fargate
--   resources. If one isn't specified, the <tt>LATEST</tt> platform
--   version is used by default. This uses a recent, approved version of
--   the Fargate platform for compute resources. For more information, see
--   <a>Fargate platform versions</a> in the <i>Amazon Elastic Container
--   Service Developer Guide</i>.
fargatePlatformConfiguration_platformVersion :: Lens' FargatePlatformConfiguration (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Batch.Types.FargatePlatformConfiguration.FargatePlatformConfiguration
instance GHC.Show.Show Network.AWS.Batch.Types.FargatePlatformConfiguration.FargatePlatformConfiguration
instance GHC.Read.Read Network.AWS.Batch.Types.FargatePlatformConfiguration.FargatePlatformConfiguration
instance GHC.Classes.Eq Network.AWS.Batch.Types.FargatePlatformConfiguration.FargatePlatformConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Batch.Types.FargatePlatformConfiguration.FargatePlatformConfiguration
instance Data.Hashable.Class.Hashable Network.AWS.Batch.Types.FargatePlatformConfiguration.FargatePlatformConfiguration
instance Control.DeepSeq.NFData Network.AWS.Batch.Types.FargatePlatformConfiguration.FargatePlatformConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Batch.Types.FargatePlatformConfiguration.FargatePlatformConfiguration


module Network.AWS.Batch.Types.Host

-- | Determine whether your data volume persists on the host container
--   instance and where it is stored. If this parameter is empty, then the
--   Docker daemon assigns a host path for your data volume, but the data
--   isn't guaranteed to persist after the containers associated with it
--   stop running.
--   
--   <i>See:</i> <a>newHost</a> smart constructor.
data Host
Host' :: Maybe Text -> Host

-- | The path on the host container instance that's presented to the
--   container. If this parameter is empty, then the Docker daemon has
--   assigned a host path for you. If this parameter contains a file
--   location, then the data volume persists at the specified location on
--   the host container instance until you delete it manually. If the
--   source path location doesn't exist on the host container instance, the
--   Docker daemon creates it. If the location does exist, the contents of
--   the source path folder are exported.
--   
--   This parameter isn't applicable to jobs that run on Fargate resources
--   and shouldn't be provided.
[$sel:sourcePath:Host'] :: Host -> Maybe Text

-- | Create a value of <a>Host</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sourcePath:Host'</a>, <a>host_sourcePath</a> - The path on the
--   host container instance that's presented to the container. If this
--   parameter is empty, then the Docker daemon has assigned a host path
--   for you. If this parameter contains a file location, then the data
--   volume persists at the specified location on the host container
--   instance until you delete it manually. If the source path location
--   doesn't exist on the host container instance, the Docker daemon
--   creates it. If the location does exist, the contents of the source
--   path folder are exported.
--   
--   This parameter isn't applicable to jobs that run on Fargate resources
--   and shouldn't be provided.
newHost :: Host

-- | The path on the host container instance that's presented to the
--   container. If this parameter is empty, then the Docker daemon has
--   assigned a host path for you. If this parameter contains a file
--   location, then the data volume persists at the specified location on
--   the host container instance until you delete it manually. If the
--   source path location doesn't exist on the host container instance, the
--   Docker daemon creates it. If the location does exist, the contents of
--   the source path folder are exported.
--   
--   This parameter isn't applicable to jobs that run on Fargate resources
--   and shouldn't be provided.
host_sourcePath :: Lens' Host (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Batch.Types.Host.Host
instance GHC.Show.Show Network.AWS.Batch.Types.Host.Host
instance GHC.Read.Read Network.AWS.Batch.Types.Host.Host
instance GHC.Classes.Eq Network.AWS.Batch.Types.Host.Host
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Batch.Types.Host.Host
instance Data.Hashable.Class.Hashable Network.AWS.Batch.Types.Host.Host
instance Control.DeepSeq.NFData Network.AWS.Batch.Types.Host.Host
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Batch.Types.Host.Host


module Network.AWS.Batch.Types.JQState
newtype JQState
JQState' :: Text -> JQState
[fromJQState] :: JQState -> Text
pattern JQState_DISABLED :: JQState
pattern JQState_ENABLED :: JQState
instance Network.AWS.Data.XML.ToXML Network.AWS.Batch.Types.JQState.JQState
instance Network.AWS.Data.XML.FromXML Network.AWS.Batch.Types.JQState.JQState
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Batch.Types.JQState.JQState
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Batch.Types.JQState.JQState
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Batch.Types.JQState.JQState
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Batch.Types.JQState.JQState
instance Network.AWS.Data.Query.ToQuery Network.AWS.Batch.Types.JQState.JQState
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Batch.Types.JQState.JQState
instance Network.AWS.Data.Log.ToLog Network.AWS.Batch.Types.JQState.JQState
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Batch.Types.JQState.JQState
instance Network.AWS.Data.Text.ToText Network.AWS.Batch.Types.JQState.JQState
instance Network.AWS.Data.Text.FromText Network.AWS.Batch.Types.JQState.JQState
instance Control.DeepSeq.NFData Network.AWS.Batch.Types.JQState.JQState
instance Data.Hashable.Class.Hashable Network.AWS.Batch.Types.JQState.JQState
instance GHC.Generics.Generic Network.AWS.Batch.Types.JQState.JQState
instance GHC.Classes.Ord Network.AWS.Batch.Types.JQState.JQState
instance GHC.Classes.Eq Network.AWS.Batch.Types.JQState.JQState
instance GHC.Read.Read Network.AWS.Batch.Types.JQState.JQState
instance GHC.Show.Show Network.AWS.Batch.Types.JQState.JQState


module Network.AWS.Batch.Types.JQStatus
newtype JQStatus
JQStatus' :: Text -> JQStatus
[fromJQStatus] :: JQStatus -> Text
pattern JQStatus_CREATING :: JQStatus
pattern JQStatus_DELETED :: JQStatus
pattern JQStatus_DELETING :: JQStatus
pattern JQStatus_INVALID :: JQStatus
pattern JQStatus_UPDATING :: JQStatus
pattern JQStatus_VALID :: JQStatus
instance Network.AWS.Data.XML.ToXML Network.AWS.Batch.Types.JQStatus.JQStatus
instance Network.AWS.Data.XML.FromXML Network.AWS.Batch.Types.JQStatus.JQStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Batch.Types.JQStatus.JQStatus
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Batch.Types.JQStatus.JQStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Batch.Types.JQStatus.JQStatus
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Batch.Types.JQStatus.JQStatus
instance Network.AWS.Data.Query.ToQuery Network.AWS.Batch.Types.JQStatus.JQStatus
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Batch.Types.JQStatus.JQStatus
instance Network.AWS.Data.Log.ToLog Network.AWS.Batch.Types.JQStatus.JQStatus
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Batch.Types.JQStatus.JQStatus
instance Network.AWS.Data.Text.ToText Network.AWS.Batch.Types.JQStatus.JQStatus
instance Network.AWS.Data.Text.FromText Network.AWS.Batch.Types.JQStatus.JQStatus
instance Control.DeepSeq.NFData Network.AWS.Batch.Types.JQStatus.JQStatus
instance Data.Hashable.Class.Hashable Network.AWS.Batch.Types.JQStatus.JQStatus
instance GHC.Generics.Generic Network.AWS.Batch.Types.JQStatus.JQStatus
instance GHC.Classes.Ord Network.AWS.Batch.Types.JQStatus.JQStatus
instance GHC.Classes.Eq Network.AWS.Batch.Types.JQStatus.JQStatus
instance GHC.Read.Read Network.AWS.Batch.Types.JQStatus.JQStatus
instance GHC.Show.Show Network.AWS.Batch.Types.JQStatus.JQStatus


module Network.AWS.Batch.Types.JobDefinitionType
newtype JobDefinitionType
JobDefinitionType' :: Text -> JobDefinitionType
[fromJobDefinitionType] :: JobDefinitionType -> Text
pattern JobDefinitionType_Container :: JobDefinitionType
pattern JobDefinitionType_Multinode :: JobDefinitionType
instance Network.AWS.Data.XML.ToXML Network.AWS.Batch.Types.JobDefinitionType.JobDefinitionType
instance Network.AWS.Data.XML.FromXML Network.AWS.Batch.Types.JobDefinitionType.JobDefinitionType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Batch.Types.JobDefinitionType.JobDefinitionType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Batch.Types.JobDefinitionType.JobDefinitionType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Batch.Types.JobDefinitionType.JobDefinitionType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Batch.Types.JobDefinitionType.JobDefinitionType
instance Network.AWS.Data.Query.ToQuery Network.AWS.Batch.Types.JobDefinitionType.JobDefinitionType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Batch.Types.JobDefinitionType.JobDefinitionType
instance Network.AWS.Data.Log.ToLog Network.AWS.Batch.Types.JobDefinitionType.JobDefinitionType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Batch.Types.JobDefinitionType.JobDefinitionType
instance Network.AWS.Data.Text.ToText Network.AWS.Batch.Types.JobDefinitionType.JobDefinitionType
instance Network.AWS.Data.Text.FromText Network.AWS.Batch.Types.JobDefinitionType.JobDefinitionType
instance Control.DeepSeq.NFData Network.AWS.Batch.Types.JobDefinitionType.JobDefinitionType
instance Data.Hashable.Class.Hashable Network.AWS.Batch.Types.JobDefinitionType.JobDefinitionType
instance GHC.Generics.Generic Network.AWS.Batch.Types.JobDefinitionType.JobDefinitionType
instance GHC.Classes.Ord Network.AWS.Batch.Types.JobDefinitionType.JobDefinitionType
instance GHC.Classes.Eq Network.AWS.Batch.Types.JobDefinitionType.JobDefinitionType
instance GHC.Read.Read Network.AWS.Batch.Types.JobDefinitionType.JobDefinitionType
instance GHC.Show.Show Network.AWS.Batch.Types.JobDefinitionType.JobDefinitionType


module Network.AWS.Batch.Types.JobDependency

-- | An object representing an Batch job dependency.
--   
--   <i>See:</i> <a>newJobDependency</a> smart constructor.
data JobDependency
JobDependency' :: Maybe Text -> Maybe ArrayJobDependency -> JobDependency

-- | The job ID of the Batch job associated with this dependency.
[$sel:jobId:JobDependency'] :: JobDependency -> Maybe Text

-- | The type of the job dependency.
[$sel:type':JobDependency'] :: JobDependency -> Maybe ArrayJobDependency

-- | Create a value of <a>JobDependency</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobId:JobDependency'</a>, <a>jobDependency_jobId</a> - The job
--   ID of the Batch job associated with this dependency.
--   
--   <a>$sel:type':JobDependency'</a>, <a>jobDependency_type</a> - The type
--   of the job dependency.
newJobDependency :: JobDependency

-- | The job ID of the Batch job associated with this dependency.
jobDependency_jobId :: Lens' JobDependency (Maybe Text)

-- | The type of the job dependency.
jobDependency_type :: Lens' JobDependency (Maybe ArrayJobDependency)
instance GHC.Generics.Generic Network.AWS.Batch.Types.JobDependency.JobDependency
instance GHC.Show.Show Network.AWS.Batch.Types.JobDependency.JobDependency
instance GHC.Read.Read Network.AWS.Batch.Types.JobDependency.JobDependency
instance GHC.Classes.Eq Network.AWS.Batch.Types.JobDependency.JobDependency
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Batch.Types.JobDependency.JobDependency
instance Data.Hashable.Class.Hashable Network.AWS.Batch.Types.JobDependency.JobDependency
instance Control.DeepSeq.NFData Network.AWS.Batch.Types.JobDependency.JobDependency
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Batch.Types.JobDependency.JobDependency


module Network.AWS.Batch.Types.JobQueueDetail

-- | An object representing the details of an Batch job queue.
--   
--   <i>See:</i> <a>newJobQueueDetail</a> smart constructor.
data JobQueueDetail
JobQueueDetail' :: Maybe JQStatus -> Maybe Text -> Maybe (HashMap Text Text) -> Text -> Text -> JQState -> Int -> [ComputeEnvironmentOrder] -> JobQueueDetail

-- | The status of the job queue (for example, <tt>CREATING</tt> or
--   <tt>VALID</tt>).
[$sel:status:JobQueueDetail'] :: JobQueueDetail -> Maybe JQStatus

-- | A short, human-readable string to provide additional details about the
--   current status of the job queue.
[$sel:statusReason:JobQueueDetail'] :: JobQueueDetail -> Maybe Text

-- | The tags applied to the job queue. For more information, see
--   <a>Tagging your Batch resources</a> in <i>Batch User Guide</i>.
[$sel:tags:JobQueueDetail'] :: JobQueueDetail -> Maybe (HashMap Text Text)

-- | The name of the job queue.
[$sel:jobQueueName:JobQueueDetail'] :: JobQueueDetail -> Text

-- | The Amazon Resource Name (ARN) of the job queue.
[$sel:jobQueueArn:JobQueueDetail'] :: JobQueueDetail -> Text

-- | Describes the ability of the queue to accept new jobs. If the job
--   queue state is <tt>ENABLED</tt>, it's able to accept jobs. If the job
--   queue state is <tt>DISABLED</tt>, new jobs can't be added to the
--   queue, but jobs already in the queue can finish.
[$sel:state:JobQueueDetail'] :: JobQueueDetail -> JQState

-- | The priority of the job queue. Job queues with a higher priority (or a
--   higher integer value for the <tt>priority</tt> parameter) are
--   evaluated first when associated with the same compute environment.
--   Priority is determined in descending order, for example, a job queue
--   with a priority value of <tt>10</tt> is given scheduling preference
--   over a job queue with a priority value of <tt>1</tt>. All of the
--   compute environments must be either EC2 (<tt>EC2</tt> or
--   <tt>SPOT</tt>) or Fargate (<tt>FARGATE</tt> or <tt>FARGATE_SPOT</tt>);
--   EC2 and Fargate compute environments can't be mixed.
[$sel:priority:JobQueueDetail'] :: JobQueueDetail -> Int

-- | The compute environments that are attached to the job queue and the
--   order that job placement is preferred. Compute environments are
--   selected for job placement in ascending order.
[$sel:computeEnvironmentOrder:JobQueueDetail'] :: JobQueueDetail -> [ComputeEnvironmentOrder]

-- | Create a value of <a>JobQueueDetail</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:JobQueueDetail'</a>, <a>jobQueueDetail_status</a> - The
--   status of the job queue (for example, <tt>CREATING</tt> or
--   <tt>VALID</tt>).
--   
--   <a>$sel:statusReason:JobQueueDetail'</a>,
--   <a>jobQueueDetail_statusReason</a> - A short, human-readable string to
--   provide additional details about the current status of the job queue.
--   
--   <a>$sel:tags:JobQueueDetail'</a>, <a>jobQueueDetail_tags</a> - The
--   tags applied to the job queue. For more information, see <a>Tagging
--   your Batch resources</a> in <i>Batch User Guide</i>.
--   
--   <a>$sel:jobQueueName:JobQueueDetail'</a>,
--   <a>jobQueueDetail_jobQueueName</a> - The name of the job queue.
--   
--   <a>$sel:jobQueueArn:JobQueueDetail'</a>,
--   <a>jobQueueDetail_jobQueueArn</a> - The Amazon Resource Name (ARN) of
--   the job queue.
--   
--   <a>$sel:state:JobQueueDetail'</a>, <a>jobQueueDetail_state</a> -
--   Describes the ability of the queue to accept new jobs. If the job
--   queue state is <tt>ENABLED</tt>, it's able to accept jobs. If the job
--   queue state is <tt>DISABLED</tt>, new jobs can't be added to the
--   queue, but jobs already in the queue can finish.
--   
--   <a>$sel:priority:JobQueueDetail'</a>, <a>jobQueueDetail_priority</a> -
--   The priority of the job queue. Job queues with a higher priority (or a
--   higher integer value for the <tt>priority</tt> parameter) are
--   evaluated first when associated with the same compute environment.
--   Priority is determined in descending order, for example, a job queue
--   with a priority value of <tt>10</tt> is given scheduling preference
--   over a job queue with a priority value of <tt>1</tt>. All of the
--   compute environments must be either EC2 (<tt>EC2</tt> or
--   <tt>SPOT</tt>) or Fargate (<tt>FARGATE</tt> or <tt>FARGATE_SPOT</tt>);
--   EC2 and Fargate compute environments can't be mixed.
--   
--   <a>$sel:computeEnvironmentOrder:JobQueueDetail'</a>,
--   <a>jobQueueDetail_computeEnvironmentOrder</a> - The compute
--   environments that are attached to the job queue and the order that job
--   placement is preferred. Compute environments are selected for job
--   placement in ascending order.
newJobQueueDetail :: Text -> Text -> JQState -> Int -> JobQueueDetail

-- | The status of the job queue (for example, <tt>CREATING</tt> or
--   <tt>VALID</tt>).
jobQueueDetail_status :: Lens' JobQueueDetail (Maybe JQStatus)

-- | A short, human-readable string to provide additional details about the
--   current status of the job queue.
jobQueueDetail_statusReason :: Lens' JobQueueDetail (Maybe Text)

-- | The tags applied to the job queue. For more information, see
--   <a>Tagging your Batch resources</a> in <i>Batch User Guide</i>.
jobQueueDetail_tags :: Lens' JobQueueDetail (Maybe (HashMap Text Text))

-- | The name of the job queue.
jobQueueDetail_jobQueueName :: Lens' JobQueueDetail Text

-- | The Amazon Resource Name (ARN) of the job queue.
jobQueueDetail_jobQueueArn :: Lens' JobQueueDetail Text

-- | Describes the ability of the queue to accept new jobs. If the job
--   queue state is <tt>ENABLED</tt>, it's able to accept jobs. If the job
--   queue state is <tt>DISABLED</tt>, new jobs can't be added to the
--   queue, but jobs already in the queue can finish.
jobQueueDetail_state :: Lens' JobQueueDetail JQState

-- | The priority of the job queue. Job queues with a higher priority (or a
--   higher integer value for the <tt>priority</tt> parameter) are
--   evaluated first when associated with the same compute environment.
--   Priority is determined in descending order, for example, a job queue
--   with a priority value of <tt>10</tt> is given scheduling preference
--   over a job queue with a priority value of <tt>1</tt>. All of the
--   compute environments must be either EC2 (<tt>EC2</tt> or
--   <tt>SPOT</tt>) or Fargate (<tt>FARGATE</tt> or <tt>FARGATE_SPOT</tt>);
--   EC2 and Fargate compute environments can't be mixed.
jobQueueDetail_priority :: Lens' JobQueueDetail Int

-- | The compute environments that are attached to the job queue and the
--   order that job placement is preferred. Compute environments are
--   selected for job placement in ascending order.
jobQueueDetail_computeEnvironmentOrder :: Lens' JobQueueDetail [ComputeEnvironmentOrder]
instance GHC.Generics.Generic Network.AWS.Batch.Types.JobQueueDetail.JobQueueDetail
instance GHC.Show.Show Network.AWS.Batch.Types.JobQueueDetail.JobQueueDetail
instance GHC.Read.Read Network.AWS.Batch.Types.JobQueueDetail.JobQueueDetail
instance GHC.Classes.Eq Network.AWS.Batch.Types.JobQueueDetail.JobQueueDetail
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Batch.Types.JobQueueDetail.JobQueueDetail
instance Data.Hashable.Class.Hashable Network.AWS.Batch.Types.JobQueueDetail.JobQueueDetail
instance Control.DeepSeq.NFData Network.AWS.Batch.Types.JobQueueDetail.JobQueueDetail


module Network.AWS.Batch.Types.JobStatus
newtype JobStatus
JobStatus' :: Text -> JobStatus
[fromJobStatus] :: JobStatus -> Text
pattern JobStatus_FAILED :: JobStatus
pattern JobStatus_PENDING :: JobStatus
pattern JobStatus_RUNNABLE :: JobStatus
pattern JobStatus_RUNNING :: JobStatus
pattern JobStatus_STARTING :: JobStatus
pattern JobStatus_SUBMITTED :: JobStatus
pattern JobStatus_SUCCEEDED :: JobStatus
instance Network.AWS.Data.XML.ToXML Network.AWS.Batch.Types.JobStatus.JobStatus
instance Network.AWS.Data.XML.FromXML Network.AWS.Batch.Types.JobStatus.JobStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Batch.Types.JobStatus.JobStatus
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Batch.Types.JobStatus.JobStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Batch.Types.JobStatus.JobStatus
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Batch.Types.JobStatus.JobStatus
instance Network.AWS.Data.Query.ToQuery Network.AWS.Batch.Types.JobStatus.JobStatus
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Batch.Types.JobStatus.JobStatus
instance Network.AWS.Data.Log.ToLog Network.AWS.Batch.Types.JobStatus.JobStatus
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Batch.Types.JobStatus.JobStatus
instance Network.AWS.Data.Text.ToText Network.AWS.Batch.Types.JobStatus.JobStatus
instance Network.AWS.Data.Text.FromText Network.AWS.Batch.Types.JobStatus.JobStatus
instance Control.DeepSeq.NFData Network.AWS.Batch.Types.JobStatus.JobStatus
instance Data.Hashable.Class.Hashable Network.AWS.Batch.Types.JobStatus.JobStatus
instance GHC.Generics.Generic Network.AWS.Batch.Types.JobStatus.JobStatus
instance GHC.Classes.Ord Network.AWS.Batch.Types.JobStatus.JobStatus
instance GHC.Classes.Eq Network.AWS.Batch.Types.JobStatus.JobStatus
instance GHC.Read.Read Network.AWS.Batch.Types.JobStatus.JobStatus
instance GHC.Show.Show Network.AWS.Batch.Types.JobStatus.JobStatus


module Network.AWS.Batch.Types.JobTimeout

-- | An object representing a job timeout configuration.
--   
--   <i>See:</i> <a>newJobTimeout</a> smart constructor.
data JobTimeout
JobTimeout' :: Maybe Int -> JobTimeout

-- | The time duration in seconds (measured from the job attempt's
--   <tt>startedAt</tt> timestamp) after which Batch terminates your jobs
--   if they have not finished. The minimum value for the timeout is 60
--   seconds.
[$sel:attemptDurationSeconds:JobTimeout'] :: JobTimeout -> Maybe Int

-- | Create a value of <a>JobTimeout</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:attemptDurationSeconds:JobTimeout'</a>,
--   <a>jobTimeout_attemptDurationSeconds</a> - The time duration in
--   seconds (measured from the job attempt's <tt>startedAt</tt> timestamp)
--   after which Batch terminates your jobs if they have not finished. The
--   minimum value for the timeout is 60 seconds.
newJobTimeout :: JobTimeout

-- | The time duration in seconds (measured from the job attempt's
--   <tt>startedAt</tt> timestamp) after which Batch terminates your jobs
--   if they have not finished. The minimum value for the timeout is 60
--   seconds.
jobTimeout_attemptDurationSeconds :: Lens' JobTimeout (Maybe Int)
instance GHC.Generics.Generic Network.AWS.Batch.Types.JobTimeout.JobTimeout
instance GHC.Show.Show Network.AWS.Batch.Types.JobTimeout.JobTimeout
instance GHC.Read.Read Network.AWS.Batch.Types.JobTimeout.JobTimeout
instance GHC.Classes.Eq Network.AWS.Batch.Types.JobTimeout.JobTimeout
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Batch.Types.JobTimeout.JobTimeout
instance Data.Hashable.Class.Hashable Network.AWS.Batch.Types.JobTimeout.JobTimeout
instance Control.DeepSeq.NFData Network.AWS.Batch.Types.JobTimeout.JobTimeout
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Batch.Types.JobTimeout.JobTimeout


module Network.AWS.Batch.Types.KeyValuePair

-- | A key-value pair object.
--   
--   <i>See:</i> <a>newKeyValuePair</a> smart constructor.
data KeyValuePair
KeyValuePair' :: Maybe Text -> Maybe Text -> KeyValuePair

-- | The value of the key-value pair. For environment variables, this is
--   the value of the environment variable.
[$sel:value:KeyValuePair'] :: KeyValuePair -> Maybe Text

-- | The name of the key-value pair. For environment variables, this is the
--   name of the environment variable.
[$sel:name:KeyValuePair'] :: KeyValuePair -> Maybe Text

-- | Create a value of <a>KeyValuePair</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:value:KeyValuePair'</a>, <a>keyValuePair_value</a> - The value
--   of the key-value pair. For environment variables, this is the value of
--   the environment variable.
--   
--   <a>$sel:name:KeyValuePair'</a>, <a>keyValuePair_name</a> - The name of
--   the key-value pair. For environment variables, this is the name of the
--   environment variable.
newKeyValuePair :: KeyValuePair

-- | The value of the key-value pair. For environment variables, this is
--   the value of the environment variable.
keyValuePair_value :: Lens' KeyValuePair (Maybe Text)

-- | The name of the key-value pair. For environment variables, this is the
--   name of the environment variable.
keyValuePair_name :: Lens' KeyValuePair (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Batch.Types.KeyValuePair.KeyValuePair
instance GHC.Show.Show Network.AWS.Batch.Types.KeyValuePair.KeyValuePair
instance GHC.Read.Read Network.AWS.Batch.Types.KeyValuePair.KeyValuePair
instance GHC.Classes.Eq Network.AWS.Batch.Types.KeyValuePair.KeyValuePair
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Batch.Types.KeyValuePair.KeyValuePair
instance Data.Hashable.Class.Hashable Network.AWS.Batch.Types.KeyValuePair.KeyValuePair
instance Control.DeepSeq.NFData Network.AWS.Batch.Types.KeyValuePair.KeyValuePair
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Batch.Types.KeyValuePair.KeyValuePair


module Network.AWS.Batch.Types.KeyValuesPair

-- | A filter name and value pair that's used to return a more specific
--   list of results from a <tt>ListJobs</tt> API operation.
--   
--   <i>See:</i> <a>newKeyValuesPair</a> smart constructor.
data KeyValuesPair
KeyValuesPair' :: Maybe [Text] -> Maybe Text -> KeyValuesPair

-- | The filter values.
[$sel:values:KeyValuesPair'] :: KeyValuesPair -> Maybe [Text]

-- | The name of the filter. Filter names are case sensitive.
[$sel:name:KeyValuesPair'] :: KeyValuesPair -> Maybe Text

-- | Create a value of <a>KeyValuesPair</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:values:KeyValuesPair'</a>, <a>keyValuesPair_values</a> - The
--   filter values.
--   
--   <a>$sel:name:KeyValuesPair'</a>, <a>keyValuesPair_name</a> - The name
--   of the filter. Filter names are case sensitive.
newKeyValuesPair :: KeyValuesPair

-- | The filter values.
keyValuesPair_values :: Lens' KeyValuesPair (Maybe [Text])

-- | The name of the filter. Filter names are case sensitive.
keyValuesPair_name :: Lens' KeyValuesPair (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Batch.Types.KeyValuesPair.KeyValuesPair
instance GHC.Show.Show Network.AWS.Batch.Types.KeyValuesPair.KeyValuesPair
instance GHC.Read.Read Network.AWS.Batch.Types.KeyValuesPair.KeyValuesPair
instance GHC.Classes.Eq Network.AWS.Batch.Types.KeyValuesPair.KeyValuesPair
instance Data.Hashable.Class.Hashable Network.AWS.Batch.Types.KeyValuesPair.KeyValuesPair
instance Control.DeepSeq.NFData Network.AWS.Batch.Types.KeyValuesPair.KeyValuesPair
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Batch.Types.KeyValuesPair.KeyValuesPair


module Network.AWS.Batch.Types.LaunchTemplateSpecification

-- | An object representing a launch template associated with a compute
--   resource. You must specify either the launch template ID or launch
--   template name in the request, but not both.
--   
--   If security groups are specified using both the
--   <tt>securityGroupIds</tt> parameter of
--   <tt>CreateComputeEnvironment</tt> and the launch template, the values
--   in the <tt>securityGroupIds</tt> parameter of
--   <tt>CreateComputeEnvironment</tt> will be used.
--   
--   This object isn't applicable to jobs that are running on Fargate
--   resources.
--   
--   <i>See:</i> <a>newLaunchTemplateSpecification</a> smart constructor.
data LaunchTemplateSpecification
LaunchTemplateSpecification' :: Maybe Text -> Maybe Text -> Maybe Text -> LaunchTemplateSpecification

-- | The name of the launch template.
[$sel:launchTemplateName:LaunchTemplateSpecification'] :: LaunchTemplateSpecification -> Maybe Text

-- | The ID of the launch template.
[$sel:launchTemplateId:LaunchTemplateSpecification'] :: LaunchTemplateSpecification -> Maybe Text

-- | The version number of the launch template, <tt>$Latest</tt>, or
--   <tt>$Default</tt>.
--   
--   If the value is <tt>$Latest</tt>, the latest version of the launch
--   template is used. If the value is <tt>$Default</tt>, the default
--   version of the launch template is used.
--   
--   After the compute environment is created, the launch template version
--   that's used isn't changed, even if the <tt>$Default</tt> or
--   <tt>$Latest</tt> version for the launch template is updated. To use a
--   new launch template version, create a new compute environment, add the
--   new compute environment to the existing job queue, remove the old
--   compute environment from the job queue, and delete the old compute
--   environment.
--   
--   Default: <tt>$Default</tt>.
[$sel:version:LaunchTemplateSpecification'] :: LaunchTemplateSpecification -> Maybe Text

-- | Create a value of <a>LaunchTemplateSpecification</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:launchTemplateName:LaunchTemplateSpecification'</a>,
--   <a>launchTemplateSpecification_launchTemplateName</a> - The name of
--   the launch template.
--   
--   <a>$sel:launchTemplateId:LaunchTemplateSpecification'</a>,
--   <a>launchTemplateSpecification_launchTemplateId</a> - The ID of the
--   launch template.
--   
--   <a>$sel:version:LaunchTemplateSpecification'</a>,
--   <a>launchTemplateSpecification_version</a> - The version number of the
--   launch template, <tt>$Latest</tt>, or <tt>$Default</tt>.
--   
--   If the value is <tt>$Latest</tt>, the latest version of the launch
--   template is used. If the value is <tt>$Default</tt>, the default
--   version of the launch template is used.
--   
--   After the compute environment is created, the launch template version
--   that's used isn't changed, even if the <tt>$Default</tt> or
--   <tt>$Latest</tt> version for the launch template is updated. To use a
--   new launch template version, create a new compute environment, add the
--   new compute environment to the existing job queue, remove the old
--   compute environment from the job queue, and delete the old compute
--   environment.
--   
--   Default: <tt>$Default</tt>.
newLaunchTemplateSpecification :: LaunchTemplateSpecification

-- | The name of the launch template.
launchTemplateSpecification_launchTemplateName :: Lens' LaunchTemplateSpecification (Maybe Text)

-- | The ID of the launch template.
launchTemplateSpecification_launchTemplateId :: Lens' LaunchTemplateSpecification (Maybe Text)

-- | The version number of the launch template, <tt>$Latest</tt>, or
--   <tt>$Default</tt>.
--   
--   If the value is <tt>$Latest</tt>, the latest version of the launch
--   template is used. If the value is <tt>$Default</tt>, the default
--   version of the launch template is used.
--   
--   After the compute environment is created, the launch template version
--   that's used isn't changed, even if the <tt>$Default</tt> or
--   <tt>$Latest</tt> version for the launch template is updated. To use a
--   new launch template version, create a new compute environment, add the
--   new compute environment to the existing job queue, remove the old
--   compute environment from the job queue, and delete the old compute
--   environment.
--   
--   Default: <tt>$Default</tt>.
launchTemplateSpecification_version :: Lens' LaunchTemplateSpecification (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Batch.Types.LaunchTemplateSpecification.LaunchTemplateSpecification
instance GHC.Show.Show Network.AWS.Batch.Types.LaunchTemplateSpecification.LaunchTemplateSpecification
instance GHC.Read.Read Network.AWS.Batch.Types.LaunchTemplateSpecification.LaunchTemplateSpecification
instance GHC.Classes.Eq Network.AWS.Batch.Types.LaunchTemplateSpecification.LaunchTemplateSpecification
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Batch.Types.LaunchTemplateSpecification.LaunchTemplateSpecification
instance Data.Hashable.Class.Hashable Network.AWS.Batch.Types.LaunchTemplateSpecification.LaunchTemplateSpecification
instance Control.DeepSeq.NFData Network.AWS.Batch.Types.LaunchTemplateSpecification.LaunchTemplateSpecification
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Batch.Types.LaunchTemplateSpecification.LaunchTemplateSpecification


module Network.AWS.Batch.Types.ComputeResource

-- | An object representing an Batch compute resource. For more
--   information, see <a>Compute Environments</a> in the <i>Batch User
--   Guide</i>.
--   
--   <i>See:</i> <a>newComputeResource</a> smart constructor.
data ComputeResource
ComputeResource' :: Maybe [Text] -> Maybe [Text] -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe [Ec2Configuration] -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe LaunchTemplateSpecification -> Maybe Int -> Maybe CRAllocationStrategy -> Maybe Text -> Maybe (HashMap Text Text) -> CRType -> Int -> [Text] -> ComputeResource

-- | The Amazon EC2 security groups associated with instances launched in
--   the compute environment. One or more security groups must be
--   specified, either in <tt>securityGroupIds</tt> or using a launch
--   template referenced in <tt>launchTemplate</tt>. This parameter is
--   required for jobs that are running on Fargate resources and must
--   contain at least one security group. Fargate doesn't support launch
--   templates. If security groups are specified using both
--   <tt>securityGroupIds</tt> and <tt>launchTemplate</tt>, the values in
--   <tt>securityGroupIds</tt> are used.
[$sel:securityGroupIds:ComputeResource'] :: ComputeResource -> Maybe [Text]

-- | The instances types that can be launched. You can specify instance
--   families to launch any instance type within those families (for
--   example, <tt>c5</tt> or <tt>p3</tt>), or you can specify specific
--   sizes within a family (such as <tt>c5.8xlarge</tt>). You can also
--   choose <tt>optimal</tt> to select instance types (from the C4, M4, and
--   R4 instance families) that match the demand of your job queues.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources, and shouldn't be specified.
--   
--   When you create a compute environment, the instance types that you
--   select for the compute environment must share the same architecture.
--   For example, you can't mix x86 and ARM instances in the same compute
--   environment.
--   
--   Currently, <tt>optimal</tt> uses instance types from the C4, M4, and
--   R4 instance families. In Regions that don't have instance types from
--   those instance families, instance types from the C5, M5. and R5
--   instance families are used.
[$sel:instanceTypes:ComputeResource'] :: ComputeResource -> Maybe [Text]

-- | The Amazon ECS instance profile applied to Amazon EC2 instances in a
--   compute environment. You can specify the short name or full Amazon
--   Resource Name (ARN) of an instance profile. For example, <tt>
--   ecsInstanceRole </tt> or
--   <tt>arn:aws:iam::&lt;aws_account_id&gt;:instance-profile/ecsInstanceRole
--   </tt>. For more information, see <a>Amazon ECS Instance Role</a> in
--   the <i>Batch User Guide</i>.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources, and shouldn't be specified.
[$sel:instanceRole:ComputeResource'] :: ComputeResource -> Maybe Text

-- | The Amazon EC2 key pair that's used for instances launched in the
--   compute environment. You can use this key pair to log in to your
--   instances with SSH.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources, and shouldn't be specified.
[$sel:ec2KeyPair:ComputeResource'] :: ComputeResource -> Maybe Text

-- | The minimum number of Amazon EC2 vCPUs that an environment should
--   maintain (even if the compute environment is <tt>DISABLED</tt>).
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources, and shouldn't be specified.
[$sel:minvCpus:ComputeResource'] :: ComputeResource -> Maybe Int

-- | Provides information used to select Amazon Machine Images (AMIs) for
--   EC2 instances in the compute environment. If <tt>Ec2Configuration</tt>
--   isn't specified, the default is <tt>ECS_AL1</tt>.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources, and shouldn't be specified.
[$sel:ec2Configuration:ComputeResource'] :: ComputeResource -> Maybe [Ec2Configuration]

-- | The maximum percentage that a Spot Instance price can be when compared
--   with the On-Demand price for that instance type before instances are
--   launched. For example, if your maximum percentage is 20%, then the
--   Spot price must be less than 20% of the current On-Demand price for
--   that Amazon EC2 instance. You always pay the lowest (market) price and
--   never more than your maximum percentage. If you leave this field
--   empty, the default value is 100% of the On-Demand price.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources, and shouldn't be specified.
[$sel:bidPercentage:ComputeResource'] :: ComputeResource -> Maybe Int

-- | The Amazon Resource Name (ARN) of the Amazon EC2 Spot Fleet IAM role
--   applied to a <tt>SPOT</tt> compute environment. This role is required
--   if the allocation strategy set to <tt>BEST_FIT</tt> or if the
--   allocation strategy isn't specified. For more information, see
--   <a>Amazon EC2 Spot Fleet Role</a> in the <i>Batch User Guide</i>.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources, and shouldn't be specified.
--   
--   To tag your Spot Instances on creation, the Spot Fleet IAM role
--   specified here must use the newer <b>AmazonEC2SpotFleetTaggingRole</b>
--   managed policy. The previously recommended
--   <b>AmazonEC2SpotFleetRole</b> managed policy doesn't have the required
--   permissions to tag Spot Instances. For more information, see <a>Spot
--   Instances not tagged on creation</a> in the <i>Batch User Guide</i>.
[$sel:spotIamFleetRole:ComputeResource'] :: ComputeResource -> Maybe Text

-- | The Amazon Machine Image (AMI) ID used for instances launched in the
--   compute environment. This parameter is overridden by the
--   <tt>imageIdOverride</tt> member of the <tt>Ec2Configuration</tt>
--   structure.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources, and shouldn't be specified.
--   
--   The AMI that you choose for a compute environment must match the
--   architecture of the instance types that you intend to use for that
--   compute environment. For example, if your compute environment uses A1
--   instance types, the compute resource AMI that you choose must support
--   ARM instances. Amazon ECS vends both x86 and ARM versions of the
--   Amazon ECS-optimized Amazon Linux 2 AMI. For more information, see
--   <a>Amazon ECS-optimized Amazon Linux 2 AMI</a> in the <i>Amazon
--   Elastic Container Service Developer Guide</i>.
[$sel:imageId:ComputeResource'] :: ComputeResource -> Maybe Text

-- | The launch template to use for your compute resources. Any other
--   compute resource parameters that you specify in a
--   CreateComputeEnvironment API operation override the same parameters in
--   the launch template. You must specify either the launch template ID or
--   launch template name in the request, but not both. For more
--   information, see <a>Launch Template Support</a> in the <i>Batch User
--   Guide</i>.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources, and shouldn't be specified.
[$sel:launchTemplate:ComputeResource'] :: ComputeResource -> Maybe LaunchTemplateSpecification

-- | The desired number of Amazon EC2 vCPUS in the compute environment.
--   Batch modifies this value between the minimum and maximum values,
--   based on job queue demand.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources, and shouldn't be specified.
[$sel:desiredvCpus:ComputeResource'] :: ComputeResource -> Maybe Int

-- | The allocation strategy to use for the compute resource if not enough
--   instances of the best fitting instance type can be allocated. This
--   might be because of availability of the instance type in the Region or
--   <a>Amazon EC2 service limits</a>. For more information, see
--   <a>Allocation Strategies</a> in the <i>Batch User Guide</i>.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources, and shouldn't be specified.
--   
--   <ul>
--   <li><i>BEST_FIT (default)</i> Batch selects an instance type that best
--   fits the needs of the jobs with a preference for the lowest-cost
--   instance type. If additional instances of the selected instance type
--   aren't available, Batch waits for the additional instances to be
--   available. If there aren't enough instances available, or if the user
--   is reaching <a>Amazon EC2 service limits</a> then additional jobs
--   aren't run until the currently running jobs have completed. This
--   allocation strategy keeps costs lower but can limit scaling. If you
--   are using Spot Fleets with <tt>BEST_FIT</tt> then the Spot Fleet IAM
--   Role must be specified.</li>
--   <li><i>BEST_FIT_PROGRESSIVE</i> Batch will select additional instance
--   types that are large enough to meet the requirements of the jobs in
--   the queue, with a preference for instance types with a lower cost per
--   unit vCPU. If additional instances of the previously selected instance
--   types aren't available, Batch will select new instance types.</li>
--   <li><i>SPOT_CAPACITY_OPTIMIZED</i> Batch will select one or more
--   instance types that are large enough to meet the requirements of the
--   jobs in the queue, with a preference for instance types that are less
--   likely to be interrupted. This allocation strategy is only available
--   for Spot Instance compute resources.</li>
--   </ul>
--   
--   With both <tt>BEST_FIT_PROGRESSIVE</tt> and
--   <tt>SPOT_CAPACITY_OPTIMIZED</tt> strategies, Batch might need to go
--   above <tt>maxvCpus</tt> to meet your capacity requirements. In this
--   event, Batch never exceeds <tt>maxvCpus</tt> by more than a single
--   instance.
[$sel:allocationStrategy:ComputeResource'] :: ComputeResource -> Maybe CRAllocationStrategy

-- | The Amazon EC2 placement group to associate with your compute
--   resources. If you intend to submit multi-node parallel jobs to your
--   compute environment, you should consider creating a cluster placement
--   group and associate it with your compute resources. This keeps your
--   multi-node parallel job on a logical grouping of instances within a
--   single Availability Zone with high network flow potential. For more
--   information, see <a>Placement Groups</a> in the <i>Amazon EC2 User
--   Guide for Linux Instances</i>.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources, and shouldn't be specified.
[$sel:placementGroup:ComputeResource'] :: ComputeResource -> Maybe Text

-- | Key-value pair tags to be applied to EC2 resources that are launched
--   in the compute environment. For Batch, these take the form of
--   "String1": "String2", where String1 is the tag key and String2 is the
--   tag value−for example, <tt>{ "Name": "Batch Instance - C4OnDemand"
--   }</tt>. This is helpful for recognizing your Batch instances in the
--   Amazon EC2 console. These tags can't be updated or removed after the
--   compute environment is created.Aany changes to these tags require that
--   you create a new compute environment and remove the old compute
--   environment. These tags aren't seen when using the Batch
--   <tt>ListTagsForResource</tt> API operation.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources, and shouldn't be specified.
[$sel:tags:ComputeResource'] :: ComputeResource -> Maybe (HashMap Text Text)

-- | The type of compute environment: <tt>EC2</tt>, <tt>SPOT</tt>,
--   <tt>FARGATE</tt>, or <tt>FARGATE_SPOT</tt>. For more information, see
--   <a>Compute Environments</a> in the <i>Batch User Guide</i>.
--   
--   If you choose <tt>SPOT</tt>, you must also specify an Amazon EC2 Spot
--   Fleet role with the <tt>spotIamFleetRole</tt> parameter. For more
--   information, see <a>Amazon EC2 Spot Fleet role</a> in the <i>Batch
--   User Guide</i>.
[$sel:type':ComputeResource'] :: ComputeResource -> CRType

-- | The maximum number of Amazon EC2 vCPUs that a compute environment can
--   reach.
--   
--   With both <tt>BEST_FIT_PROGRESSIVE</tt> and
--   <tt>SPOT_CAPACITY_OPTIMIZED</tt> allocation strategies, Batch might
--   need to exceed <tt>maxvCpus</tt> to meet your capacity requirements.
--   In this event, Batch never exceeds <tt>maxvCpus</tt> by more than a
--   single instance. For example, no more than a single instance from
--   among those specified in your compute environment is allocated.
[$sel:maxvCpus:ComputeResource'] :: ComputeResource -> Int

-- | The VPC subnets where the compute resources are launched. These
--   subnets must be within the same VPC. Fargate compute resources can
--   contain up to 16 subnets. For more information, see <a>VPCs and
--   Subnets</a> in the <i>Amazon VPC User Guide</i>.
[$sel:subnets:ComputeResource'] :: ComputeResource -> [Text]

-- | Create a value of <a>ComputeResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:securityGroupIds:ComputeResource'</a>,
--   <a>computeResource_securityGroupIds</a> - The Amazon EC2 security
--   groups associated with instances launched in the compute environment.
--   One or more security groups must be specified, either in
--   <tt>securityGroupIds</tt> or using a launch template referenced in
--   <tt>launchTemplate</tt>. This parameter is required for jobs that are
--   running on Fargate resources and must contain at least one security
--   group. Fargate doesn't support launch templates. If security groups
--   are specified using both <tt>securityGroupIds</tt> and
--   <tt>launchTemplate</tt>, the values in <tt>securityGroupIds</tt> are
--   used.
--   
--   <a>$sel:instanceTypes:ComputeResource'</a>,
--   <a>computeResource_instanceTypes</a> - The instances types that can be
--   launched. You can specify instance families to launch any instance
--   type within those families (for example, <tt>c5</tt> or <tt>p3</tt>),
--   or you can specify specific sizes within a family (such as
--   <tt>c5.8xlarge</tt>). You can also choose <tt>optimal</tt> to select
--   instance types (from the C4, M4, and R4 instance families) that match
--   the demand of your job queues.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources, and shouldn't be specified.
--   
--   When you create a compute environment, the instance types that you
--   select for the compute environment must share the same architecture.
--   For example, you can't mix x86 and ARM instances in the same compute
--   environment.
--   
--   Currently, <tt>optimal</tt> uses instance types from the C4, M4, and
--   R4 instance families. In Regions that don't have instance types from
--   those instance families, instance types from the C5, M5. and R5
--   instance families are used.
--   
--   <a>$sel:instanceRole:ComputeResource'</a>,
--   <a>computeResource_instanceRole</a> - The Amazon ECS instance profile
--   applied to Amazon EC2 instances in a compute environment. You can
--   specify the short name or full Amazon Resource Name (ARN) of an
--   instance profile. For example, <tt> ecsInstanceRole </tt> or
--   <tt>arn:aws:iam::&lt;aws_account_id&gt;:instance-profile/ecsInstanceRole
--   </tt>. For more information, see <a>Amazon ECS Instance Role</a> in
--   the <i>Batch User Guide</i>.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources, and shouldn't be specified.
--   
--   <a>$sel:ec2KeyPair:ComputeResource'</a>,
--   <a>computeResource_ec2KeyPair</a> - The Amazon EC2 key pair that's
--   used for instances launched in the compute environment. You can use
--   this key pair to log in to your instances with SSH.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources, and shouldn't be specified.
--   
--   <a>$sel:minvCpus:ComputeResource'</a>, <a>computeResource_minvCpus</a>
--   - The minimum number of Amazon EC2 vCPUs that an environment should
--   maintain (even if the compute environment is <tt>DISABLED</tt>).
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources, and shouldn't be specified.
--   
--   <a>$sel:ec2Configuration:ComputeResource'</a>,
--   <a>computeResource_ec2Configuration</a> - Provides information used to
--   select Amazon Machine Images (AMIs) for EC2 instances in the compute
--   environment. If <tt>Ec2Configuration</tt> isn't specified, the default
--   is <tt>ECS_AL1</tt>.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources, and shouldn't be specified.
--   
--   <a>$sel:bidPercentage:ComputeResource'</a>,
--   <a>computeResource_bidPercentage</a> - The maximum percentage that a
--   Spot Instance price can be when compared with the On-Demand price for
--   that instance type before instances are launched. For example, if your
--   maximum percentage is 20%, then the Spot price must be less than 20%
--   of the current On-Demand price for that Amazon EC2 instance. You
--   always pay the lowest (market) price and never more than your maximum
--   percentage. If you leave this field empty, the default value is 100%
--   of the On-Demand price.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources, and shouldn't be specified.
--   
--   <a>$sel:spotIamFleetRole:ComputeResource'</a>,
--   <a>computeResource_spotIamFleetRole</a> - The Amazon Resource Name
--   (ARN) of the Amazon EC2 Spot Fleet IAM role applied to a <tt>SPOT</tt>
--   compute environment. This role is required if the allocation strategy
--   set to <tt>BEST_FIT</tt> or if the allocation strategy isn't
--   specified. For more information, see <a>Amazon EC2 Spot Fleet Role</a>
--   in the <i>Batch User Guide</i>.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources, and shouldn't be specified.
--   
--   To tag your Spot Instances on creation, the Spot Fleet IAM role
--   specified here must use the newer <b>AmazonEC2SpotFleetTaggingRole</b>
--   managed policy. The previously recommended
--   <b>AmazonEC2SpotFleetRole</b> managed policy doesn't have the required
--   permissions to tag Spot Instances. For more information, see <a>Spot
--   Instances not tagged on creation</a> in the <i>Batch User Guide</i>.
--   
--   <a>$sel:imageId:ComputeResource'</a>, <a>computeResource_imageId</a> -
--   The Amazon Machine Image (AMI) ID used for instances launched in the
--   compute environment. This parameter is overridden by the
--   <tt>imageIdOverride</tt> member of the <tt>Ec2Configuration</tt>
--   structure.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources, and shouldn't be specified.
--   
--   The AMI that you choose for a compute environment must match the
--   architecture of the instance types that you intend to use for that
--   compute environment. For example, if your compute environment uses A1
--   instance types, the compute resource AMI that you choose must support
--   ARM instances. Amazon ECS vends both x86 and ARM versions of the
--   Amazon ECS-optimized Amazon Linux 2 AMI. For more information, see
--   <a>Amazon ECS-optimized Amazon Linux 2 AMI</a> in the <i>Amazon
--   Elastic Container Service Developer Guide</i>.
--   
--   <a>$sel:launchTemplate:ComputeResource'</a>,
--   <a>computeResource_launchTemplate</a> - The launch template to use for
--   your compute resources. Any other compute resource parameters that you
--   specify in a CreateComputeEnvironment API operation override the same
--   parameters in the launch template. You must specify either the launch
--   template ID or launch template name in the request, but not both. For
--   more information, see <a>Launch Template Support</a> in the <i>Batch
--   User Guide</i>.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources, and shouldn't be specified.
--   
--   <a>$sel:desiredvCpus:ComputeResource'</a>,
--   <a>computeResource_desiredvCpus</a> - The desired number of Amazon EC2
--   vCPUS in the compute environment. Batch modifies this value between
--   the minimum and maximum values, based on job queue demand.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources, and shouldn't be specified.
--   
--   <a>$sel:allocationStrategy:ComputeResource'</a>,
--   <a>computeResource_allocationStrategy</a> - The allocation strategy to
--   use for the compute resource if not enough instances of the best
--   fitting instance type can be allocated. This might be because of
--   availability of the instance type in the Region or <a>Amazon EC2
--   service limits</a>. For more information, see <a>Allocation
--   Strategies</a> in the <i>Batch User Guide</i>.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources, and shouldn't be specified.
--   
--   <ul>
--   <li><i>BEST_FIT (default)</i> Batch selects an instance type that best
--   fits the needs of the jobs with a preference for the lowest-cost
--   instance type. If additional instances of the selected instance type
--   aren't available, Batch waits for the additional instances to be
--   available. If there aren't enough instances available, or if the user
--   is reaching <a>Amazon EC2 service limits</a> then additional jobs
--   aren't run until the currently running jobs have completed. This
--   allocation strategy keeps costs lower but can limit scaling. If you
--   are using Spot Fleets with <tt>BEST_FIT</tt> then the Spot Fleet IAM
--   Role must be specified.</li>
--   <li><i>BEST_FIT_PROGRESSIVE</i> Batch will select additional instance
--   types that are large enough to meet the requirements of the jobs in
--   the queue, with a preference for instance types with a lower cost per
--   unit vCPU. If additional instances of the previously selected instance
--   types aren't available, Batch will select new instance types.</li>
--   <li><i>SPOT_CAPACITY_OPTIMIZED</i> Batch will select one or more
--   instance types that are large enough to meet the requirements of the
--   jobs in the queue, with a preference for instance types that are less
--   likely to be interrupted. This allocation strategy is only available
--   for Spot Instance compute resources.</li>
--   </ul>
--   
--   With both <tt>BEST_FIT_PROGRESSIVE</tt> and
--   <tt>SPOT_CAPACITY_OPTIMIZED</tt> strategies, Batch might need to go
--   above <tt>maxvCpus</tt> to meet your capacity requirements. In this
--   event, Batch never exceeds <tt>maxvCpus</tt> by more than a single
--   instance.
--   
--   <a>$sel:placementGroup:ComputeResource'</a>,
--   <a>computeResource_placementGroup</a> - The Amazon EC2 placement group
--   to associate with your compute resources. If you intend to submit
--   multi-node parallel jobs to your compute environment, you should
--   consider creating a cluster placement group and associate it with your
--   compute resources. This keeps your multi-node parallel job on a
--   logical grouping of instances within a single Availability Zone with
--   high network flow potential. For more information, see <a>Placement
--   Groups</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources, and shouldn't be specified.
--   
--   <a>$sel:tags:ComputeResource'</a>, <a>computeResource_tags</a> -
--   Key-value pair tags to be applied to EC2 resources that are launched
--   in the compute environment. For Batch, these take the form of
--   "String1": "String2", where String1 is the tag key and String2 is the
--   tag value−for example, <tt>{ "Name": "Batch Instance - C4OnDemand"
--   }</tt>. This is helpful for recognizing your Batch instances in the
--   Amazon EC2 console. These tags can't be updated or removed after the
--   compute environment is created.Aany changes to these tags require that
--   you create a new compute environment and remove the old compute
--   environment. These tags aren't seen when using the Batch
--   <tt>ListTagsForResource</tt> API operation.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources, and shouldn't be specified.
--   
--   <a>$sel:type':ComputeResource'</a>, <a>computeResource_type</a> - The
--   type of compute environment: <tt>EC2</tt>, <tt>SPOT</tt>,
--   <tt>FARGATE</tt>, or <tt>FARGATE_SPOT</tt>. For more information, see
--   <a>Compute Environments</a> in the <i>Batch User Guide</i>.
--   
--   If you choose <tt>SPOT</tt>, you must also specify an Amazon EC2 Spot
--   Fleet role with the <tt>spotIamFleetRole</tt> parameter. For more
--   information, see <a>Amazon EC2 Spot Fleet role</a> in the <i>Batch
--   User Guide</i>.
--   
--   <a>$sel:maxvCpus:ComputeResource'</a>, <a>computeResource_maxvCpus</a>
--   - The maximum number of Amazon EC2 vCPUs that a compute environment
--   can reach.
--   
--   With both <tt>BEST_FIT_PROGRESSIVE</tt> and
--   <tt>SPOT_CAPACITY_OPTIMIZED</tt> allocation strategies, Batch might
--   need to exceed <tt>maxvCpus</tt> to meet your capacity requirements.
--   In this event, Batch never exceeds <tt>maxvCpus</tt> by more than a
--   single instance. For example, no more than a single instance from
--   among those specified in your compute environment is allocated.
--   
--   <a>$sel:subnets:ComputeResource'</a>, <a>computeResource_subnets</a> -
--   The VPC subnets where the compute resources are launched. These
--   subnets must be within the same VPC. Fargate compute resources can
--   contain up to 16 subnets. For more information, see <a>VPCs and
--   Subnets</a> in the <i>Amazon VPC User Guide</i>.
newComputeResource :: CRType -> Int -> ComputeResource

-- | The Amazon EC2 security groups associated with instances launched in
--   the compute environment. One or more security groups must be
--   specified, either in <tt>securityGroupIds</tt> or using a launch
--   template referenced in <tt>launchTemplate</tt>. This parameter is
--   required for jobs that are running on Fargate resources and must
--   contain at least one security group. Fargate doesn't support launch
--   templates. If security groups are specified using both
--   <tt>securityGroupIds</tt> and <tt>launchTemplate</tt>, the values in
--   <tt>securityGroupIds</tt> are used.
computeResource_securityGroupIds :: Lens' ComputeResource (Maybe [Text])

-- | The instances types that can be launched. You can specify instance
--   families to launch any instance type within those families (for
--   example, <tt>c5</tt> or <tt>p3</tt>), or you can specify specific
--   sizes within a family (such as <tt>c5.8xlarge</tt>). You can also
--   choose <tt>optimal</tt> to select instance types (from the C4, M4, and
--   R4 instance families) that match the demand of your job queues.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources, and shouldn't be specified.
--   
--   When you create a compute environment, the instance types that you
--   select for the compute environment must share the same architecture.
--   For example, you can't mix x86 and ARM instances in the same compute
--   environment.
--   
--   Currently, <tt>optimal</tt> uses instance types from the C4, M4, and
--   R4 instance families. In Regions that don't have instance types from
--   those instance families, instance types from the C5, M5. and R5
--   instance families are used.
computeResource_instanceTypes :: Lens' ComputeResource (Maybe [Text])

-- | The Amazon ECS instance profile applied to Amazon EC2 instances in a
--   compute environment. You can specify the short name or full Amazon
--   Resource Name (ARN) of an instance profile. For example, <tt>
--   ecsInstanceRole </tt> or
--   <tt>arn:aws:iam::&lt;aws_account_id&gt;:instance-profile/ecsInstanceRole
--   </tt>. For more information, see <a>Amazon ECS Instance Role</a> in
--   the <i>Batch User Guide</i>.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources, and shouldn't be specified.
computeResource_instanceRole :: Lens' ComputeResource (Maybe Text)

-- | The Amazon EC2 key pair that's used for instances launched in the
--   compute environment. You can use this key pair to log in to your
--   instances with SSH.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources, and shouldn't be specified.
computeResource_ec2KeyPair :: Lens' ComputeResource (Maybe Text)

-- | The minimum number of Amazon EC2 vCPUs that an environment should
--   maintain (even if the compute environment is <tt>DISABLED</tt>).
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources, and shouldn't be specified.
computeResource_minvCpus :: Lens' ComputeResource (Maybe Int)

-- | Provides information used to select Amazon Machine Images (AMIs) for
--   EC2 instances in the compute environment. If <tt>Ec2Configuration</tt>
--   isn't specified, the default is <tt>ECS_AL1</tt>.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources, and shouldn't be specified.
computeResource_ec2Configuration :: Lens' ComputeResource (Maybe [Ec2Configuration])

-- | The maximum percentage that a Spot Instance price can be when compared
--   with the On-Demand price for that instance type before instances are
--   launched. For example, if your maximum percentage is 20%, then the
--   Spot price must be less than 20% of the current On-Demand price for
--   that Amazon EC2 instance. You always pay the lowest (market) price and
--   never more than your maximum percentage. If you leave this field
--   empty, the default value is 100% of the On-Demand price.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources, and shouldn't be specified.
computeResource_bidPercentage :: Lens' ComputeResource (Maybe Int)

-- | The Amazon Resource Name (ARN) of the Amazon EC2 Spot Fleet IAM role
--   applied to a <tt>SPOT</tt> compute environment. This role is required
--   if the allocation strategy set to <tt>BEST_FIT</tt> or if the
--   allocation strategy isn't specified. For more information, see
--   <a>Amazon EC2 Spot Fleet Role</a> in the <i>Batch User Guide</i>.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources, and shouldn't be specified.
--   
--   To tag your Spot Instances on creation, the Spot Fleet IAM role
--   specified here must use the newer <b>AmazonEC2SpotFleetTaggingRole</b>
--   managed policy. The previously recommended
--   <b>AmazonEC2SpotFleetRole</b> managed policy doesn't have the required
--   permissions to tag Spot Instances. For more information, see <a>Spot
--   Instances not tagged on creation</a> in the <i>Batch User Guide</i>.
computeResource_spotIamFleetRole :: Lens' ComputeResource (Maybe Text)

-- | The Amazon Machine Image (AMI) ID used for instances launched in the
--   compute environment. This parameter is overridden by the
--   <tt>imageIdOverride</tt> member of the <tt>Ec2Configuration</tt>
--   structure.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources, and shouldn't be specified.
--   
--   The AMI that you choose for a compute environment must match the
--   architecture of the instance types that you intend to use for that
--   compute environment. For example, if your compute environment uses A1
--   instance types, the compute resource AMI that you choose must support
--   ARM instances. Amazon ECS vends both x86 and ARM versions of the
--   Amazon ECS-optimized Amazon Linux 2 AMI. For more information, see
--   <a>Amazon ECS-optimized Amazon Linux 2 AMI</a> in the <i>Amazon
--   Elastic Container Service Developer Guide</i>.
computeResource_imageId :: Lens' ComputeResource (Maybe Text)

-- | The launch template to use for your compute resources. Any other
--   compute resource parameters that you specify in a
--   CreateComputeEnvironment API operation override the same parameters in
--   the launch template. You must specify either the launch template ID or
--   launch template name in the request, but not both. For more
--   information, see <a>Launch Template Support</a> in the <i>Batch User
--   Guide</i>.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources, and shouldn't be specified.
computeResource_launchTemplate :: Lens' ComputeResource (Maybe LaunchTemplateSpecification)

-- | The desired number of Amazon EC2 vCPUS in the compute environment.
--   Batch modifies this value between the minimum and maximum values,
--   based on job queue demand.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources, and shouldn't be specified.
computeResource_desiredvCpus :: Lens' ComputeResource (Maybe Int)

-- | The allocation strategy to use for the compute resource if not enough
--   instances of the best fitting instance type can be allocated. This
--   might be because of availability of the instance type in the Region or
--   <a>Amazon EC2 service limits</a>. For more information, see
--   <a>Allocation Strategies</a> in the <i>Batch User Guide</i>.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources, and shouldn't be specified.
--   
--   <ul>
--   <li><i>BEST_FIT (default)</i> Batch selects an instance type that best
--   fits the needs of the jobs with a preference for the lowest-cost
--   instance type. If additional instances of the selected instance type
--   aren't available, Batch waits for the additional instances to be
--   available. If there aren't enough instances available, or if the user
--   is reaching <a>Amazon EC2 service limits</a> then additional jobs
--   aren't run until the currently running jobs have completed. This
--   allocation strategy keeps costs lower but can limit scaling. If you
--   are using Spot Fleets with <tt>BEST_FIT</tt> then the Spot Fleet IAM
--   Role must be specified.</li>
--   <li><i>BEST_FIT_PROGRESSIVE</i> Batch will select additional instance
--   types that are large enough to meet the requirements of the jobs in
--   the queue, with a preference for instance types with a lower cost per
--   unit vCPU. If additional instances of the previously selected instance
--   types aren't available, Batch will select new instance types.</li>
--   <li><i>SPOT_CAPACITY_OPTIMIZED</i> Batch will select one or more
--   instance types that are large enough to meet the requirements of the
--   jobs in the queue, with a preference for instance types that are less
--   likely to be interrupted. This allocation strategy is only available
--   for Spot Instance compute resources.</li>
--   </ul>
--   
--   With both <tt>BEST_FIT_PROGRESSIVE</tt> and
--   <tt>SPOT_CAPACITY_OPTIMIZED</tt> strategies, Batch might need to go
--   above <tt>maxvCpus</tt> to meet your capacity requirements. In this
--   event, Batch never exceeds <tt>maxvCpus</tt> by more than a single
--   instance.
computeResource_allocationStrategy :: Lens' ComputeResource (Maybe CRAllocationStrategy)

-- | The Amazon EC2 placement group to associate with your compute
--   resources. If you intend to submit multi-node parallel jobs to your
--   compute environment, you should consider creating a cluster placement
--   group and associate it with your compute resources. This keeps your
--   multi-node parallel job on a logical grouping of instances within a
--   single Availability Zone with high network flow potential. For more
--   information, see <a>Placement Groups</a> in the <i>Amazon EC2 User
--   Guide for Linux Instances</i>.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources, and shouldn't be specified.
computeResource_placementGroup :: Lens' ComputeResource (Maybe Text)

-- | Key-value pair tags to be applied to EC2 resources that are launched
--   in the compute environment. For Batch, these take the form of
--   "String1": "String2", where String1 is the tag key and String2 is the
--   tag value−for example, <tt>{ "Name": "Batch Instance - C4OnDemand"
--   }</tt>. This is helpful for recognizing your Batch instances in the
--   Amazon EC2 console. These tags can't be updated or removed after the
--   compute environment is created.Aany changes to these tags require that
--   you create a new compute environment and remove the old compute
--   environment. These tags aren't seen when using the Batch
--   <tt>ListTagsForResource</tt> API operation.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources, and shouldn't be specified.
computeResource_tags :: Lens' ComputeResource (Maybe (HashMap Text Text))

-- | The type of compute environment: <tt>EC2</tt>, <tt>SPOT</tt>,
--   <tt>FARGATE</tt>, or <tt>FARGATE_SPOT</tt>. For more information, see
--   <a>Compute Environments</a> in the <i>Batch User Guide</i>.
--   
--   If you choose <tt>SPOT</tt>, you must also specify an Amazon EC2 Spot
--   Fleet role with the <tt>spotIamFleetRole</tt> parameter. For more
--   information, see <a>Amazon EC2 Spot Fleet role</a> in the <i>Batch
--   User Guide</i>.
computeResource_type :: Lens' ComputeResource CRType

-- | The maximum number of Amazon EC2 vCPUs that a compute environment can
--   reach.
--   
--   With both <tt>BEST_FIT_PROGRESSIVE</tt> and
--   <tt>SPOT_CAPACITY_OPTIMIZED</tt> allocation strategies, Batch might
--   need to exceed <tt>maxvCpus</tt> to meet your capacity requirements.
--   In this event, Batch never exceeds <tt>maxvCpus</tt> by more than a
--   single instance. For example, no more than a single instance from
--   among those specified in your compute environment is allocated.
computeResource_maxvCpus :: Lens' ComputeResource Int

-- | The VPC subnets where the compute resources are launched. These
--   subnets must be within the same VPC. Fargate compute resources can
--   contain up to 16 subnets. For more information, see <a>VPCs and
--   Subnets</a> in the <i>Amazon VPC User Guide</i>.
computeResource_subnets :: Lens' ComputeResource [Text]
instance GHC.Generics.Generic Network.AWS.Batch.Types.ComputeResource.ComputeResource
instance GHC.Show.Show Network.AWS.Batch.Types.ComputeResource.ComputeResource
instance GHC.Read.Read Network.AWS.Batch.Types.ComputeResource.ComputeResource
instance GHC.Classes.Eq Network.AWS.Batch.Types.ComputeResource.ComputeResource
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Batch.Types.ComputeResource.ComputeResource
instance Data.Hashable.Class.Hashable Network.AWS.Batch.Types.ComputeResource.ComputeResource
instance Control.DeepSeq.NFData Network.AWS.Batch.Types.ComputeResource.ComputeResource
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Batch.Types.ComputeResource.ComputeResource


module Network.AWS.Batch.Types.ComputeEnvironmentDetail

-- | An object representing an Batch compute environment.
--   
--   <i>See:</i> <a>newComputeEnvironmentDetail</a> smart constructor.
data ComputeEnvironmentDetail
ComputeEnvironmentDetail' :: Maybe CEStatus -> Maybe CEState -> Maybe ComputeResource -> Maybe Text -> Maybe CEType -> Maybe Text -> Maybe (HashMap Text Text) -> Text -> Text -> Text -> ComputeEnvironmentDetail

-- | The current status of the compute environment (for example,
--   <tt>CREATING</tt> or <tt>VALID</tt>).
[$sel:status:ComputeEnvironmentDetail'] :: ComputeEnvironmentDetail -> Maybe CEStatus

-- | The state of the compute environment. The valid values are
--   <tt>ENABLED</tt> or <tt>DISABLED</tt>.
--   
--   If the state is <tt>ENABLED</tt>, then the Batch scheduler can attempt
--   to place jobs from an associated job queue on the compute resources
--   within the environment. If the compute environment is managed, then it
--   can scale its instances out or in automatically, based on the job
--   queue demand.
--   
--   If the state is <tt>DISABLED</tt>, then the Batch scheduler doesn't
--   attempt to place jobs within the environment. Jobs in a
--   <tt>STARTING</tt> or <tt>RUNNING</tt> state continue to progress
--   normally. Managed compute environments in the <tt>DISABLED</tt> state
--   don't scale out. However, they scale in to <tt>minvCpus</tt> value
--   after instances become idle.
[$sel:state:ComputeEnvironmentDetail'] :: ComputeEnvironmentDetail -> Maybe CEState

-- | The compute resources defined for the compute environment. For more
--   information, see <a>Compute Environments</a> in the <i>Batch User
--   Guide</i>.
[$sel:computeResources:ComputeEnvironmentDetail'] :: ComputeEnvironmentDetail -> Maybe ComputeResource

-- | A short, human-readable string to provide additional details about the
--   current status of the compute environment.
[$sel:statusReason:ComputeEnvironmentDetail'] :: ComputeEnvironmentDetail -> Maybe Text

-- | The type of the compute environment: <tt>MANAGED</tt> or
--   <tt>UNMANAGED</tt>. For more information, see <a>Compute
--   Environments</a> in the <i>Batch User Guide</i>.
[$sel:type':ComputeEnvironmentDetail'] :: ComputeEnvironmentDetail -> Maybe CEType

-- | The service role associated with the compute environment that allows
--   Batch to make calls to Amazon Web Services API operations on your
--   behalf. For more information, see <a>Batch service IAM role</a> in the
--   <i>Batch User Guide</i>.
[$sel:serviceRole:ComputeEnvironmentDetail'] :: ComputeEnvironmentDetail -> Maybe Text

-- | The tags applied to the compute environment.
[$sel:tags:ComputeEnvironmentDetail'] :: ComputeEnvironmentDetail -> Maybe (HashMap Text Text)

-- | The name of the compute environment. Up to 128 letters (uppercase and
--   lowercase), numbers, hyphens, and underscores are allowed.
[$sel:computeEnvironmentName:ComputeEnvironmentDetail'] :: ComputeEnvironmentDetail -> Text

-- | The Amazon Resource Name (ARN) of the compute environment.
[$sel:computeEnvironmentArn:ComputeEnvironmentDetail'] :: ComputeEnvironmentDetail -> Text

-- | The Amazon Resource Name (ARN) of the underlying Amazon ECS cluster
--   used by the compute environment.
[$sel:ecsClusterArn:ComputeEnvironmentDetail'] :: ComputeEnvironmentDetail -> Text

-- | Create a value of <a>ComputeEnvironmentDetail</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:ComputeEnvironmentDetail'</a>,
--   <a>computeEnvironmentDetail_status</a> - The current status of the
--   compute environment (for example, <tt>CREATING</tt> or
--   <tt>VALID</tt>).
--   
--   <a>$sel:state:ComputeEnvironmentDetail'</a>,
--   <a>computeEnvironmentDetail_state</a> - The state of the compute
--   environment. The valid values are <tt>ENABLED</tt> or
--   <tt>DISABLED</tt>.
--   
--   If the state is <tt>ENABLED</tt>, then the Batch scheduler can attempt
--   to place jobs from an associated job queue on the compute resources
--   within the environment. If the compute environment is managed, then it
--   can scale its instances out or in automatically, based on the job
--   queue demand.
--   
--   If the state is <tt>DISABLED</tt>, then the Batch scheduler doesn't
--   attempt to place jobs within the environment. Jobs in a
--   <tt>STARTING</tt> or <tt>RUNNING</tt> state continue to progress
--   normally. Managed compute environments in the <tt>DISABLED</tt> state
--   don't scale out. However, they scale in to <tt>minvCpus</tt> value
--   after instances become idle.
--   
--   <a>$sel:computeResources:ComputeEnvironmentDetail'</a>,
--   <a>computeEnvironmentDetail_computeResources</a> - The compute
--   resources defined for the compute environment. For more information,
--   see <a>Compute Environments</a> in the <i>Batch User Guide</i>.
--   
--   <a>$sel:statusReason:ComputeEnvironmentDetail'</a>,
--   <a>computeEnvironmentDetail_statusReason</a> - A short, human-readable
--   string to provide additional details about the current status of the
--   compute environment.
--   
--   <a>$sel:type':ComputeEnvironmentDetail'</a>,
--   <a>computeEnvironmentDetail_type</a> - The type of the compute
--   environment: <tt>MANAGED</tt> or <tt>UNMANAGED</tt>. For more
--   information, see <a>Compute Environments</a> in the <i>Batch User
--   Guide</i>.
--   
--   <a>$sel:serviceRole:ComputeEnvironmentDetail'</a>,
--   <a>computeEnvironmentDetail_serviceRole</a> - The service role
--   associated with the compute environment that allows Batch to make
--   calls to Amazon Web Services API operations on your behalf. For more
--   information, see <a>Batch service IAM role</a> in the <i>Batch User
--   Guide</i>.
--   
--   <a>$sel:tags:ComputeEnvironmentDetail'</a>,
--   <a>computeEnvironmentDetail_tags</a> - The tags applied to the compute
--   environment.
--   
--   <a>$sel:computeEnvironmentName:ComputeEnvironmentDetail'</a>,
--   <a>computeEnvironmentDetail_computeEnvironmentName</a> - The name of
--   the compute environment. Up to 128 letters (uppercase and lowercase),
--   numbers, hyphens, and underscores are allowed.
--   
--   <a>$sel:computeEnvironmentArn:ComputeEnvironmentDetail'</a>,
--   <a>computeEnvironmentDetail_computeEnvironmentArn</a> - The Amazon
--   Resource Name (ARN) of the compute environment.
--   
--   <a>$sel:ecsClusterArn:ComputeEnvironmentDetail'</a>,
--   <a>computeEnvironmentDetail_ecsClusterArn</a> - The Amazon Resource
--   Name (ARN) of the underlying Amazon ECS cluster used by the compute
--   environment.
newComputeEnvironmentDetail :: Text -> Text -> Text -> ComputeEnvironmentDetail

-- | The current status of the compute environment (for example,
--   <tt>CREATING</tt> or <tt>VALID</tt>).
computeEnvironmentDetail_status :: Lens' ComputeEnvironmentDetail (Maybe CEStatus)

-- | The state of the compute environment. The valid values are
--   <tt>ENABLED</tt> or <tt>DISABLED</tt>.
--   
--   If the state is <tt>ENABLED</tt>, then the Batch scheduler can attempt
--   to place jobs from an associated job queue on the compute resources
--   within the environment. If the compute environment is managed, then it
--   can scale its instances out or in automatically, based on the job
--   queue demand.
--   
--   If the state is <tt>DISABLED</tt>, then the Batch scheduler doesn't
--   attempt to place jobs within the environment. Jobs in a
--   <tt>STARTING</tt> or <tt>RUNNING</tt> state continue to progress
--   normally. Managed compute environments in the <tt>DISABLED</tt> state
--   don't scale out. However, they scale in to <tt>minvCpus</tt> value
--   after instances become idle.
computeEnvironmentDetail_state :: Lens' ComputeEnvironmentDetail (Maybe CEState)

-- | The compute resources defined for the compute environment. For more
--   information, see <a>Compute Environments</a> in the <i>Batch User
--   Guide</i>.
computeEnvironmentDetail_computeResources :: Lens' ComputeEnvironmentDetail (Maybe ComputeResource)

-- | A short, human-readable string to provide additional details about the
--   current status of the compute environment.
computeEnvironmentDetail_statusReason :: Lens' ComputeEnvironmentDetail (Maybe Text)

-- | The type of the compute environment: <tt>MANAGED</tt> or
--   <tt>UNMANAGED</tt>. For more information, see <a>Compute
--   Environments</a> in the <i>Batch User Guide</i>.
computeEnvironmentDetail_type :: Lens' ComputeEnvironmentDetail (Maybe CEType)

-- | The service role associated with the compute environment that allows
--   Batch to make calls to Amazon Web Services API operations on your
--   behalf. For more information, see <a>Batch service IAM role</a> in the
--   <i>Batch User Guide</i>.
computeEnvironmentDetail_serviceRole :: Lens' ComputeEnvironmentDetail (Maybe Text)

-- | The tags applied to the compute environment.
computeEnvironmentDetail_tags :: Lens' ComputeEnvironmentDetail (Maybe (HashMap Text Text))

-- | The name of the compute environment. Up to 128 letters (uppercase and
--   lowercase), numbers, hyphens, and underscores are allowed.
computeEnvironmentDetail_computeEnvironmentName :: Lens' ComputeEnvironmentDetail Text

-- | The Amazon Resource Name (ARN) of the compute environment.
computeEnvironmentDetail_computeEnvironmentArn :: Lens' ComputeEnvironmentDetail Text

-- | The Amazon Resource Name (ARN) of the underlying Amazon ECS cluster
--   used by the compute environment.
computeEnvironmentDetail_ecsClusterArn :: Lens' ComputeEnvironmentDetail Text
instance GHC.Generics.Generic Network.AWS.Batch.Types.ComputeEnvironmentDetail.ComputeEnvironmentDetail
instance GHC.Show.Show Network.AWS.Batch.Types.ComputeEnvironmentDetail.ComputeEnvironmentDetail
instance GHC.Read.Read Network.AWS.Batch.Types.ComputeEnvironmentDetail.ComputeEnvironmentDetail
instance GHC.Classes.Eq Network.AWS.Batch.Types.ComputeEnvironmentDetail.ComputeEnvironmentDetail
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Batch.Types.ComputeEnvironmentDetail.ComputeEnvironmentDetail
instance Data.Hashable.Class.Hashable Network.AWS.Batch.Types.ComputeEnvironmentDetail.ComputeEnvironmentDetail
instance Control.DeepSeq.NFData Network.AWS.Batch.Types.ComputeEnvironmentDetail.ComputeEnvironmentDetail


module Network.AWS.Batch.Types.LogDriver
newtype LogDriver
LogDriver' :: Text -> LogDriver
[fromLogDriver] :: LogDriver -> Text
pattern LogDriver_Awslogs :: LogDriver
pattern LogDriver_Fluentd :: LogDriver
pattern LogDriver_Gelf :: LogDriver
pattern LogDriver_Journald :: LogDriver
pattern LogDriver_Json_file :: LogDriver
pattern LogDriver_Splunk :: LogDriver
pattern LogDriver_Syslog :: LogDriver
instance Network.AWS.Data.XML.ToXML Network.AWS.Batch.Types.LogDriver.LogDriver
instance Network.AWS.Data.XML.FromXML Network.AWS.Batch.Types.LogDriver.LogDriver
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Batch.Types.LogDriver.LogDriver
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Batch.Types.LogDriver.LogDriver
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Batch.Types.LogDriver.LogDriver
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Batch.Types.LogDriver.LogDriver
instance Network.AWS.Data.Query.ToQuery Network.AWS.Batch.Types.LogDriver.LogDriver
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Batch.Types.LogDriver.LogDriver
instance Network.AWS.Data.Log.ToLog Network.AWS.Batch.Types.LogDriver.LogDriver
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Batch.Types.LogDriver.LogDriver
instance Network.AWS.Data.Text.ToText Network.AWS.Batch.Types.LogDriver.LogDriver
instance Network.AWS.Data.Text.FromText Network.AWS.Batch.Types.LogDriver.LogDriver
instance Control.DeepSeq.NFData Network.AWS.Batch.Types.LogDriver.LogDriver
instance Data.Hashable.Class.Hashable Network.AWS.Batch.Types.LogDriver.LogDriver
instance GHC.Generics.Generic Network.AWS.Batch.Types.LogDriver.LogDriver
instance GHC.Classes.Ord Network.AWS.Batch.Types.LogDriver.LogDriver
instance GHC.Classes.Eq Network.AWS.Batch.Types.LogDriver.LogDriver
instance GHC.Read.Read Network.AWS.Batch.Types.LogDriver.LogDriver
instance GHC.Show.Show Network.AWS.Batch.Types.LogDriver.LogDriver


module Network.AWS.Batch.Types.MountPoint

-- | Details on a Docker volume mount point that's used in a job's
--   container properties. This parameter maps to <tt>Volumes</tt> in the
--   <a>Create a container</a> section of the Docker Remote API and the
--   <tt>--volume</tt> option to docker run.
--   
--   <i>See:</i> <a>newMountPoint</a> smart constructor.
data MountPoint
MountPoint' :: Maybe Text -> Maybe Text -> Maybe Bool -> MountPoint

-- | The path on the container where the host volume is mounted.
[$sel:containerPath:MountPoint'] :: MountPoint -> Maybe Text

-- | The name of the volume to mount.
[$sel:sourceVolume:MountPoint'] :: MountPoint -> Maybe Text

-- | If this value is <tt>true</tt>, the container has read-only access to
--   the volume. Otherwise, the container can write to the volume. The
--   default value is <tt>false</tt>.
[$sel:readOnly:MountPoint'] :: MountPoint -> Maybe Bool

-- | Create a value of <a>MountPoint</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:containerPath:MountPoint'</a>, <a>mountPoint_containerPath</a>
--   - The path on the container where the host volume is mounted.
--   
--   <a>$sel:sourceVolume:MountPoint'</a>, <a>mountPoint_sourceVolume</a> -
--   The name of the volume to mount.
--   
--   <a>$sel:readOnly:MountPoint'</a>, <a>mountPoint_readOnly</a> - If this
--   value is <tt>true</tt>, the container has read-only access to the
--   volume. Otherwise, the container can write to the volume. The default
--   value is <tt>false</tt>.
newMountPoint :: MountPoint

-- | The path on the container where the host volume is mounted.
mountPoint_containerPath :: Lens' MountPoint (Maybe Text)

-- | The name of the volume to mount.
mountPoint_sourceVolume :: Lens' MountPoint (Maybe Text)

-- | If this value is <tt>true</tt>, the container has read-only access to
--   the volume. Otherwise, the container can write to the volume. The
--   default value is <tt>false</tt>.
mountPoint_readOnly :: Lens' MountPoint (Maybe Bool)
instance GHC.Generics.Generic Network.AWS.Batch.Types.MountPoint.MountPoint
instance GHC.Show.Show Network.AWS.Batch.Types.MountPoint.MountPoint
instance GHC.Read.Read Network.AWS.Batch.Types.MountPoint.MountPoint
instance GHC.Classes.Eq Network.AWS.Batch.Types.MountPoint.MountPoint
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Batch.Types.MountPoint.MountPoint
instance Data.Hashable.Class.Hashable Network.AWS.Batch.Types.MountPoint.MountPoint
instance Control.DeepSeq.NFData Network.AWS.Batch.Types.MountPoint.MountPoint
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Batch.Types.MountPoint.MountPoint


module Network.AWS.Batch.Types.NetworkConfiguration

-- | The network configuration for jobs that are running on Fargate
--   resources. Jobs that are running on EC2 resources must not specify
--   this parameter.
--   
--   <i>See:</i> <a>newNetworkConfiguration</a> smart constructor.
data NetworkConfiguration
NetworkConfiguration' :: Maybe AssignPublicIp -> NetworkConfiguration

-- | Indicates whether the job should have a public IP address. For a job
--   that is running on Fargate resources in a private subnet to send
--   outbound traffic to the internet (for example, to pull container
--   images), the private subnet requires a NAT gateway be attached to
--   route requests to the internet. For more information, see <a>Amazon
--   ECS task networking</a>. The default value is "DISABLED".
[$sel:assignPublicIp:NetworkConfiguration'] :: NetworkConfiguration -> Maybe AssignPublicIp

-- | Create a value of <a>NetworkConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:assignPublicIp:NetworkConfiguration'</a>,
--   <a>networkConfiguration_assignPublicIp</a> - Indicates whether the job
--   should have a public IP address. For a job that is running on Fargate
--   resources in a private subnet to send outbound traffic to the internet
--   (for example, to pull container images), the private subnet requires a
--   NAT gateway be attached to route requests to the internet. For more
--   information, see <a>Amazon ECS task networking</a>. The default value
--   is "DISABLED".
newNetworkConfiguration :: NetworkConfiguration

-- | Indicates whether the job should have a public IP address. For a job
--   that is running on Fargate resources in a private subnet to send
--   outbound traffic to the internet (for example, to pull container
--   images), the private subnet requires a NAT gateway be attached to
--   route requests to the internet. For more information, see <a>Amazon
--   ECS task networking</a>. The default value is "DISABLED".
networkConfiguration_assignPublicIp :: Lens' NetworkConfiguration (Maybe AssignPublicIp)
instance GHC.Generics.Generic Network.AWS.Batch.Types.NetworkConfiguration.NetworkConfiguration
instance GHC.Show.Show Network.AWS.Batch.Types.NetworkConfiguration.NetworkConfiguration
instance GHC.Read.Read Network.AWS.Batch.Types.NetworkConfiguration.NetworkConfiguration
instance GHC.Classes.Eq Network.AWS.Batch.Types.NetworkConfiguration.NetworkConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Batch.Types.NetworkConfiguration.NetworkConfiguration
instance Data.Hashable.Class.Hashable Network.AWS.Batch.Types.NetworkConfiguration.NetworkConfiguration
instance Control.DeepSeq.NFData Network.AWS.Batch.Types.NetworkConfiguration.NetworkConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Batch.Types.NetworkConfiguration.NetworkConfiguration


module Network.AWS.Batch.Types.NetworkInterface

-- | An object representing the elastic network interface for a multi-node
--   parallel job node.
--   
--   <i>See:</i> <a>newNetworkInterface</a> smart constructor.
data NetworkInterface
NetworkInterface' :: Maybe Text -> Maybe Text -> Maybe Text -> NetworkInterface

-- | The private IPv6 address for the network interface.
[$sel:ipv6Address:NetworkInterface'] :: NetworkInterface -> Maybe Text

-- | The private IPv4 address for the network interface.
[$sel:privateIpv4Address:NetworkInterface'] :: NetworkInterface -> Maybe Text

-- | The attachment ID for the network interface.
[$sel:attachmentId:NetworkInterface'] :: NetworkInterface -> Maybe Text

-- | Create a value of <a>NetworkInterface</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ipv6Address:NetworkInterface'</a>,
--   <a>networkInterface_ipv6Address</a> - The private IPv6 address for the
--   network interface.
--   
--   <a>$sel:privateIpv4Address:NetworkInterface'</a>,
--   <a>networkInterface_privateIpv4Address</a> - The private IPv4 address
--   for the network interface.
--   
--   <a>$sel:attachmentId:NetworkInterface'</a>,
--   <a>networkInterface_attachmentId</a> - The attachment ID for the
--   network interface.
newNetworkInterface :: NetworkInterface

-- | The private IPv6 address for the network interface.
networkInterface_ipv6Address :: Lens' NetworkInterface (Maybe Text)

-- | The private IPv4 address for the network interface.
networkInterface_privateIpv4Address :: Lens' NetworkInterface (Maybe Text)

-- | The attachment ID for the network interface.
networkInterface_attachmentId :: Lens' NetworkInterface (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Batch.Types.NetworkInterface.NetworkInterface
instance GHC.Show.Show Network.AWS.Batch.Types.NetworkInterface.NetworkInterface
instance GHC.Read.Read Network.AWS.Batch.Types.NetworkInterface.NetworkInterface
instance GHC.Classes.Eq Network.AWS.Batch.Types.NetworkInterface.NetworkInterface
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Batch.Types.NetworkInterface.NetworkInterface
instance Data.Hashable.Class.Hashable Network.AWS.Batch.Types.NetworkInterface.NetworkInterface
instance Control.DeepSeq.NFData Network.AWS.Batch.Types.NetworkInterface.NetworkInterface


module Network.AWS.Batch.Types.AttemptContainerDetail

-- | An object representing the details of a container that's part of a job
--   attempt.
--   
--   <i>See:</i> <a>newAttemptContainerDetail</a> smart constructor.
data AttemptContainerDetail
AttemptContainerDetail' :: Maybe [NetworkInterface] -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Int -> AttemptContainerDetail

-- | The network interfaces associated with the job attempt.
[$sel:networkInterfaces:AttemptContainerDetail'] :: AttemptContainerDetail -> Maybe [NetworkInterface]

-- | The Amazon Resource Name (ARN) of the Amazon ECS task that's
--   associated with the job attempt. Each container attempt receives a
--   task ARN when they reach the <tt>STARTING</tt> status.
[$sel:taskArn:AttemptContainerDetail'] :: AttemptContainerDetail -> Maybe Text

-- | The Amazon Resource Name (ARN) of the Amazon ECS container instance
--   that hosts the job attempt.
[$sel:containerInstanceArn:AttemptContainerDetail'] :: AttemptContainerDetail -> Maybe Text

-- | A short (255 max characters) human-readable string to provide
--   additional details about a running or stopped container.
[$sel:reason:AttemptContainerDetail'] :: AttemptContainerDetail -> Maybe Text

-- | The name of the CloudWatch Logs log stream associated with the
--   container. The log group for Batch jobs is <tt>/aws/batch/job</tt>.
--   Each container attempt receives a log stream name when they reach the
--   <tt>RUNNING</tt> status.
[$sel:logStreamName:AttemptContainerDetail'] :: AttemptContainerDetail -> Maybe Text

-- | The exit code for the job attempt. A non-zero exit code is considered
--   a failure.
[$sel:exitCode:AttemptContainerDetail'] :: AttemptContainerDetail -> Maybe Int

-- | Create a value of <a>AttemptContainerDetail</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:networkInterfaces:AttemptContainerDetail'</a>,
--   <a>attemptContainerDetail_networkInterfaces</a> - The network
--   interfaces associated with the job attempt.
--   
--   <a>$sel:taskArn:AttemptContainerDetail'</a>,
--   <a>attemptContainerDetail_taskArn</a> - The Amazon Resource Name (ARN)
--   of the Amazon ECS task that's associated with the job attempt. Each
--   container attempt receives a task ARN when they reach the
--   <tt>STARTING</tt> status.
--   
--   <a>$sel:containerInstanceArn:AttemptContainerDetail'</a>,
--   <a>attemptContainerDetail_containerInstanceArn</a> - The Amazon
--   Resource Name (ARN) of the Amazon ECS container instance that hosts
--   the job attempt.
--   
--   <a>$sel:reason:AttemptContainerDetail'</a>,
--   <a>attemptContainerDetail_reason</a> - A short (255 max characters)
--   human-readable string to provide additional details about a running or
--   stopped container.
--   
--   <a>$sel:logStreamName:AttemptContainerDetail'</a>,
--   <a>attemptContainerDetail_logStreamName</a> - The name of the
--   CloudWatch Logs log stream associated with the container. The log
--   group for Batch jobs is <tt>/aws/batch/job</tt>. Each container
--   attempt receives a log stream name when they reach the
--   <tt>RUNNING</tt> status.
--   
--   <a>$sel:exitCode:AttemptContainerDetail'</a>,
--   <a>attemptContainerDetail_exitCode</a> - The exit code for the job
--   attempt. A non-zero exit code is considered a failure.
newAttemptContainerDetail :: AttemptContainerDetail

-- | The network interfaces associated with the job attempt.
attemptContainerDetail_networkInterfaces :: Lens' AttemptContainerDetail (Maybe [NetworkInterface])

-- | The Amazon Resource Name (ARN) of the Amazon ECS task that's
--   associated with the job attempt. Each container attempt receives a
--   task ARN when they reach the <tt>STARTING</tt> status.
attemptContainerDetail_taskArn :: Lens' AttemptContainerDetail (Maybe Text)

-- | The Amazon Resource Name (ARN) of the Amazon ECS container instance
--   that hosts the job attempt.
attemptContainerDetail_containerInstanceArn :: Lens' AttemptContainerDetail (Maybe Text)

-- | A short (255 max characters) human-readable string to provide
--   additional details about a running or stopped container.
attemptContainerDetail_reason :: Lens' AttemptContainerDetail (Maybe Text)

-- | The name of the CloudWatch Logs log stream associated with the
--   container. The log group for Batch jobs is <tt>/aws/batch/job</tt>.
--   Each container attempt receives a log stream name when they reach the
--   <tt>RUNNING</tt> status.
attemptContainerDetail_logStreamName :: Lens' AttemptContainerDetail (Maybe Text)

-- | The exit code for the job attempt. A non-zero exit code is considered
--   a failure.
attemptContainerDetail_exitCode :: Lens' AttemptContainerDetail (Maybe Int)
instance GHC.Generics.Generic Network.AWS.Batch.Types.AttemptContainerDetail.AttemptContainerDetail
instance GHC.Show.Show Network.AWS.Batch.Types.AttemptContainerDetail.AttemptContainerDetail
instance GHC.Read.Read Network.AWS.Batch.Types.AttemptContainerDetail.AttemptContainerDetail
instance GHC.Classes.Eq Network.AWS.Batch.Types.AttemptContainerDetail.AttemptContainerDetail
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Batch.Types.AttemptContainerDetail.AttemptContainerDetail
instance Data.Hashable.Class.Hashable Network.AWS.Batch.Types.AttemptContainerDetail.AttemptContainerDetail
instance Control.DeepSeq.NFData Network.AWS.Batch.Types.AttemptContainerDetail.AttemptContainerDetail


module Network.AWS.Batch.Types.AttemptDetail

-- | An object representing a job attempt.
--   
--   <i>See:</i> <a>newAttemptDetail</a> smart constructor.
data AttemptDetail
AttemptDetail' :: Maybe Integer -> Maybe Integer -> Maybe AttemptContainerDetail -> Maybe Text -> AttemptDetail

-- | The Unix timestamp (in milliseconds) for when the attempt was stopped
--   (when the attempt transitioned from the <tt>RUNNING</tt> state to a
--   terminal state, such as <tt>SUCCEEDED</tt> or <tt>FAILED</tt>).
[$sel:stoppedAt:AttemptDetail'] :: AttemptDetail -> Maybe Integer

-- | The Unix timestamp (in milliseconds) for when the attempt was started
--   (when the attempt transitioned from the <tt>STARTING</tt> state to the
--   <tt>RUNNING</tt> state).
[$sel:startedAt:AttemptDetail'] :: AttemptDetail -> Maybe Integer

-- | Details about the container in this job attempt.
[$sel:container:AttemptDetail'] :: AttemptDetail -> Maybe AttemptContainerDetail

-- | A short, human-readable string to provide additional details about the
--   current status of the job attempt.
[$sel:statusReason:AttemptDetail'] :: AttemptDetail -> Maybe Text

-- | Create a value of <a>AttemptDetail</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:stoppedAt:AttemptDetail'</a>, <a>attemptDetail_stoppedAt</a> -
--   The Unix timestamp (in milliseconds) for when the attempt was stopped
--   (when the attempt transitioned from the <tt>RUNNING</tt> state to a
--   terminal state, such as <tt>SUCCEEDED</tt> or <tt>FAILED</tt>).
--   
--   <a>$sel:startedAt:AttemptDetail'</a>, <a>attemptDetail_startedAt</a> -
--   The Unix timestamp (in milliseconds) for when the attempt was started
--   (when the attempt transitioned from the <tt>STARTING</tt> state to the
--   <tt>RUNNING</tt> state).
--   
--   <a>$sel:container:AttemptDetail'</a>, <a>attemptDetail_container</a> -
--   Details about the container in this job attempt.
--   
--   <a>$sel:statusReason:AttemptDetail'</a>,
--   <a>attemptDetail_statusReason</a> - A short, human-readable string to
--   provide additional details about the current status of the job
--   attempt.
newAttemptDetail :: AttemptDetail

-- | The Unix timestamp (in milliseconds) for when the attempt was stopped
--   (when the attempt transitioned from the <tt>RUNNING</tt> state to a
--   terminal state, such as <tt>SUCCEEDED</tt> or <tt>FAILED</tt>).
attemptDetail_stoppedAt :: Lens' AttemptDetail (Maybe Integer)

-- | The Unix timestamp (in milliseconds) for when the attempt was started
--   (when the attempt transitioned from the <tt>STARTING</tt> state to the
--   <tt>RUNNING</tt> state).
attemptDetail_startedAt :: Lens' AttemptDetail (Maybe Integer)

-- | Details about the container in this job attempt.
attemptDetail_container :: Lens' AttemptDetail (Maybe AttemptContainerDetail)

-- | A short, human-readable string to provide additional details about the
--   current status of the job attempt.
attemptDetail_statusReason :: Lens' AttemptDetail (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Batch.Types.AttemptDetail.AttemptDetail
instance GHC.Show.Show Network.AWS.Batch.Types.AttemptDetail.AttemptDetail
instance GHC.Read.Read Network.AWS.Batch.Types.AttemptDetail.AttemptDetail
instance GHC.Classes.Eq Network.AWS.Batch.Types.AttemptDetail.AttemptDetail
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Batch.Types.AttemptDetail.AttemptDetail
instance Data.Hashable.Class.Hashable Network.AWS.Batch.Types.AttemptDetail.AttemptDetail
instance Control.DeepSeq.NFData Network.AWS.Batch.Types.AttemptDetail.AttemptDetail


module Network.AWS.Batch.Types.NodeDetails

-- | An object representing the details of a multi-node parallel job node.
--   
--   <i>See:</i> <a>newNodeDetails</a> smart constructor.
data NodeDetails
NodeDetails' :: Maybe Int -> Maybe Bool -> NodeDetails

-- | The node index for the node. Node index numbering begins at zero. This
--   index is also available on the node with the
--   <tt>AWS_BATCH_JOB_NODE_INDEX</tt> environment variable.
[$sel:nodeIndex:NodeDetails'] :: NodeDetails -> Maybe Int

-- | Specifies whether the current node is the main node for a multi-node
--   parallel job.
[$sel:isMainNode:NodeDetails'] :: NodeDetails -> Maybe Bool

-- | Create a value of <a>NodeDetails</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nodeIndex:NodeDetails'</a>, <a>nodeDetails_nodeIndex</a> - The
--   node index for the node. Node index numbering begins at zero. This
--   index is also available on the node with the
--   <tt>AWS_BATCH_JOB_NODE_INDEX</tt> environment variable.
--   
--   <a>$sel:isMainNode:NodeDetails'</a>, <a>nodeDetails_isMainNode</a> -
--   Specifies whether the current node is the main node for a multi-node
--   parallel job.
newNodeDetails :: NodeDetails

-- | The node index for the node. Node index numbering begins at zero. This
--   index is also available on the node with the
--   <tt>AWS_BATCH_JOB_NODE_INDEX</tt> environment variable.
nodeDetails_nodeIndex :: Lens' NodeDetails (Maybe Int)

-- | Specifies whether the current node is the main node for a multi-node
--   parallel job.
nodeDetails_isMainNode :: Lens' NodeDetails (Maybe Bool)
instance GHC.Generics.Generic Network.AWS.Batch.Types.NodeDetails.NodeDetails
instance GHC.Show.Show Network.AWS.Batch.Types.NodeDetails.NodeDetails
instance GHC.Read.Read Network.AWS.Batch.Types.NodeDetails.NodeDetails
instance GHC.Classes.Eq Network.AWS.Batch.Types.NodeDetails.NodeDetails
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Batch.Types.NodeDetails.NodeDetails
instance Data.Hashable.Class.Hashable Network.AWS.Batch.Types.NodeDetails.NodeDetails
instance Control.DeepSeq.NFData Network.AWS.Batch.Types.NodeDetails.NodeDetails


module Network.AWS.Batch.Types.NodePropertiesSummary

-- | An object representing the properties of a node that's associated with
--   a multi-node parallel job.
--   
--   <i>See:</i> <a>newNodePropertiesSummary</a> smart constructor.
data NodePropertiesSummary
NodePropertiesSummary' :: Maybe Int -> Maybe Int -> Maybe Bool -> NodePropertiesSummary

-- | The number of nodes associated with a multi-node parallel job.
[$sel:numNodes:NodePropertiesSummary'] :: NodePropertiesSummary -> Maybe Int

-- | The node index for the node. Node index numbering begins at zero. This
--   index is also available on the node with the
--   <tt>AWS_BATCH_JOB_NODE_INDEX</tt> environment variable.
[$sel:nodeIndex:NodePropertiesSummary'] :: NodePropertiesSummary -> Maybe Int

-- | Specifies whether the current node is the main node for a multi-node
--   parallel job.
[$sel:isMainNode:NodePropertiesSummary'] :: NodePropertiesSummary -> Maybe Bool

-- | Create a value of <a>NodePropertiesSummary</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:numNodes:NodePropertiesSummary'</a>,
--   <a>nodePropertiesSummary_numNodes</a> - The number of nodes associated
--   with a multi-node parallel job.
--   
--   <a>$sel:nodeIndex:NodePropertiesSummary'</a>,
--   <a>nodePropertiesSummary_nodeIndex</a> - The node index for the node.
--   Node index numbering begins at zero. This index is also available on
--   the node with the <tt>AWS_BATCH_JOB_NODE_INDEX</tt> environment
--   variable.
--   
--   <a>$sel:isMainNode:NodePropertiesSummary'</a>,
--   <a>nodePropertiesSummary_isMainNode</a> - Specifies whether the
--   current node is the main node for a multi-node parallel job.
newNodePropertiesSummary :: NodePropertiesSummary

-- | The number of nodes associated with a multi-node parallel job.
nodePropertiesSummary_numNodes :: Lens' NodePropertiesSummary (Maybe Int)

-- | The node index for the node. Node index numbering begins at zero. This
--   index is also available on the node with the
--   <tt>AWS_BATCH_JOB_NODE_INDEX</tt> environment variable.
nodePropertiesSummary_nodeIndex :: Lens' NodePropertiesSummary (Maybe Int)

-- | Specifies whether the current node is the main node for a multi-node
--   parallel job.
nodePropertiesSummary_isMainNode :: Lens' NodePropertiesSummary (Maybe Bool)
instance GHC.Generics.Generic Network.AWS.Batch.Types.NodePropertiesSummary.NodePropertiesSummary
instance GHC.Show.Show Network.AWS.Batch.Types.NodePropertiesSummary.NodePropertiesSummary
instance GHC.Read.Read Network.AWS.Batch.Types.NodePropertiesSummary.NodePropertiesSummary
instance GHC.Classes.Eq Network.AWS.Batch.Types.NodePropertiesSummary.NodePropertiesSummary
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Batch.Types.NodePropertiesSummary.NodePropertiesSummary
instance Data.Hashable.Class.Hashable Network.AWS.Batch.Types.NodePropertiesSummary.NodePropertiesSummary
instance Control.DeepSeq.NFData Network.AWS.Batch.Types.NodePropertiesSummary.NodePropertiesSummary


module Network.AWS.Batch.Types.JobSummary

-- | An object representing summary details of a job.
--   
--   <i>See:</i> <a>newJobSummary</a> smart constructor.
data JobSummary
JobSummary' :: Maybe Integer -> Maybe JobStatus -> Maybe Text -> Maybe Integer -> Maybe Integer -> Maybe ContainerSummary -> Maybe Text -> Maybe Text -> Maybe ArrayPropertiesSummary -> Maybe NodePropertiesSummary -> Text -> Text -> JobSummary

-- | The Unix timestamp for when the job was stopped (when the job
--   transitioned from the <tt>RUNNING</tt> state to a terminal state, such
--   as <tt>SUCCEEDED</tt> or <tt>FAILED</tt>).
[$sel:stoppedAt:JobSummary'] :: JobSummary -> Maybe Integer

-- | The current status for the job.
[$sel:status:JobSummary'] :: JobSummary -> Maybe JobStatus

-- | The Amazon Resource Name (ARN) of the job.
[$sel:jobArn:JobSummary'] :: JobSummary -> Maybe Text

-- | The Unix timestamp for when the job was created. For non-array jobs
--   and parent array jobs, this is when the job entered the
--   <tt>SUBMITTED</tt> state (at the time SubmitJob was called). For array
--   child jobs, this is when the child job was spawned by its parent and
--   entered the <tt>PENDING</tt> state.
[$sel:createdAt:JobSummary'] :: JobSummary -> Maybe Integer

-- | The Unix timestamp for when the job was started (when the job
--   transitioned from the <tt>STARTING</tt> state to the <tt>RUNNING</tt>
--   state).
[$sel:startedAt:JobSummary'] :: JobSummary -> Maybe Integer

-- | An object representing the details of the container that's associated
--   with the job.
[$sel:container:JobSummary'] :: JobSummary -> Maybe ContainerSummary

-- | The Amazon Resource Name (ARN) of the job definition.
[$sel:jobDefinition:JobSummary'] :: JobSummary -> Maybe Text

-- | A short, human-readable string to provide additional details about the
--   current status of the job.
[$sel:statusReason:JobSummary'] :: JobSummary -> Maybe Text

-- | The array properties of the job, if it is an array job.
[$sel:arrayProperties:JobSummary'] :: JobSummary -> Maybe ArrayPropertiesSummary

-- | The node properties for a single node in a job summary list.
--   
--   This isn't applicable to jobs that are running on Fargate resources.
[$sel:nodeProperties:JobSummary'] :: JobSummary -> Maybe NodePropertiesSummary

-- | The ID of the job.
[$sel:jobId:JobSummary'] :: JobSummary -> Text

-- | The name of the job.
[$sel:jobName:JobSummary'] :: JobSummary -> Text

-- | Create a value of <a>JobSummary</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:stoppedAt:JobSummary'</a>, <a>jobSummary_stoppedAt</a> - The
--   Unix timestamp for when the job was stopped (when the job transitioned
--   from the <tt>RUNNING</tt> state to a terminal state, such as
--   <tt>SUCCEEDED</tt> or <tt>FAILED</tt>).
--   
--   <a>$sel:status:JobSummary'</a>, <a>jobSummary_status</a> - The current
--   status for the job.
--   
--   <a>$sel:jobArn:JobSummary'</a>, <a>jobSummary_jobArn</a> - The Amazon
--   Resource Name (ARN) of the job.
--   
--   <a>$sel:createdAt:JobSummary'</a>, <a>jobSummary_createdAt</a> - The
--   Unix timestamp for when the job was created. For non-array jobs and
--   parent array jobs, this is when the job entered the <tt>SUBMITTED</tt>
--   state (at the time SubmitJob was called). For array child jobs, this
--   is when the child job was spawned by its parent and entered the
--   <tt>PENDING</tt> state.
--   
--   <a>$sel:startedAt:JobSummary'</a>, <a>jobSummary_startedAt</a> - The
--   Unix timestamp for when the job was started (when the job transitioned
--   from the <tt>STARTING</tt> state to the <tt>RUNNING</tt> state).
--   
--   <a>$sel:container:JobSummary'</a>, <a>jobSummary_container</a> - An
--   object representing the details of the container that's associated
--   with the job.
--   
--   <a>$sel:jobDefinition:JobSummary'</a>, <a>jobSummary_jobDefinition</a>
--   - The Amazon Resource Name (ARN) of the job definition.
--   
--   <a>$sel:statusReason:JobSummary'</a>, <a>jobSummary_statusReason</a> -
--   A short, human-readable string to provide additional details about the
--   current status of the job.
--   
--   <a>$sel:arrayProperties:JobSummary'</a>,
--   <a>jobSummary_arrayProperties</a> - The array properties of the job,
--   if it is an array job.
--   
--   <a>$sel:nodeProperties:JobSummary'</a>,
--   <a>jobSummary_nodeProperties</a> - The node properties for a single
--   node in a job summary list.
--   
--   This isn't applicable to jobs that are running on Fargate resources.
--   
--   <a>$sel:jobId:JobSummary'</a>, <a>jobSummary_jobId</a> - The ID of the
--   job.
--   
--   <a>$sel:jobName:JobSummary'</a>, <a>jobSummary_jobName</a> - The name
--   of the job.
newJobSummary :: Text -> Text -> JobSummary

-- | The Unix timestamp for when the job was stopped (when the job
--   transitioned from the <tt>RUNNING</tt> state to a terminal state, such
--   as <tt>SUCCEEDED</tt> or <tt>FAILED</tt>).
jobSummary_stoppedAt :: Lens' JobSummary (Maybe Integer)

-- | The current status for the job.
jobSummary_status :: Lens' JobSummary (Maybe JobStatus)

-- | The Amazon Resource Name (ARN) of the job.
jobSummary_jobArn :: Lens' JobSummary (Maybe Text)

-- | The Unix timestamp for when the job was created. For non-array jobs
--   and parent array jobs, this is when the job entered the
--   <tt>SUBMITTED</tt> state (at the time SubmitJob was called). For array
--   child jobs, this is when the child job was spawned by its parent and
--   entered the <tt>PENDING</tt> state.
jobSummary_createdAt :: Lens' JobSummary (Maybe Integer)

-- | The Unix timestamp for when the job was started (when the job
--   transitioned from the <tt>STARTING</tt> state to the <tt>RUNNING</tt>
--   state).
jobSummary_startedAt :: Lens' JobSummary (Maybe Integer)

-- | An object representing the details of the container that's associated
--   with the job.
jobSummary_container :: Lens' JobSummary (Maybe ContainerSummary)

-- | The Amazon Resource Name (ARN) of the job definition.
jobSummary_jobDefinition :: Lens' JobSummary (Maybe Text)

-- | A short, human-readable string to provide additional details about the
--   current status of the job.
jobSummary_statusReason :: Lens' JobSummary (Maybe Text)

-- | The array properties of the job, if it is an array job.
jobSummary_arrayProperties :: Lens' JobSummary (Maybe ArrayPropertiesSummary)

-- | The node properties for a single node in a job summary list.
--   
--   This isn't applicable to jobs that are running on Fargate resources.
jobSummary_nodeProperties :: Lens' JobSummary (Maybe NodePropertiesSummary)

-- | The ID of the job.
jobSummary_jobId :: Lens' JobSummary Text

-- | The name of the job.
jobSummary_jobName :: Lens' JobSummary Text
instance GHC.Generics.Generic Network.AWS.Batch.Types.JobSummary.JobSummary
instance GHC.Show.Show Network.AWS.Batch.Types.JobSummary.JobSummary
instance GHC.Read.Read Network.AWS.Batch.Types.JobSummary.JobSummary
instance GHC.Classes.Eq Network.AWS.Batch.Types.JobSummary.JobSummary
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Batch.Types.JobSummary.JobSummary
instance Data.Hashable.Class.Hashable Network.AWS.Batch.Types.JobSummary.JobSummary
instance Control.DeepSeq.NFData Network.AWS.Batch.Types.JobSummary.JobSummary


module Network.AWS.Batch.Types.PlatformCapability
newtype PlatformCapability
PlatformCapability' :: Text -> PlatformCapability
[fromPlatformCapability] :: PlatformCapability -> Text
pattern PlatformCapability_EC2 :: PlatformCapability
pattern PlatformCapability_FARGATE :: PlatformCapability
instance Network.AWS.Data.XML.ToXML Network.AWS.Batch.Types.PlatformCapability.PlatformCapability
instance Network.AWS.Data.XML.FromXML Network.AWS.Batch.Types.PlatformCapability.PlatformCapability
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Batch.Types.PlatformCapability.PlatformCapability
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Batch.Types.PlatformCapability.PlatformCapability
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Batch.Types.PlatformCapability.PlatformCapability
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Batch.Types.PlatformCapability.PlatformCapability
instance Network.AWS.Data.Query.ToQuery Network.AWS.Batch.Types.PlatformCapability.PlatformCapability
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Batch.Types.PlatformCapability.PlatformCapability
instance Network.AWS.Data.Log.ToLog Network.AWS.Batch.Types.PlatformCapability.PlatformCapability
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Batch.Types.PlatformCapability.PlatformCapability
instance Network.AWS.Data.Text.ToText Network.AWS.Batch.Types.PlatformCapability.PlatformCapability
instance Network.AWS.Data.Text.FromText Network.AWS.Batch.Types.PlatformCapability.PlatformCapability
instance Control.DeepSeq.NFData Network.AWS.Batch.Types.PlatformCapability.PlatformCapability
instance Data.Hashable.Class.Hashable Network.AWS.Batch.Types.PlatformCapability.PlatformCapability
instance GHC.Generics.Generic Network.AWS.Batch.Types.PlatformCapability.PlatformCapability
instance GHC.Classes.Ord Network.AWS.Batch.Types.PlatformCapability.PlatformCapability
instance GHC.Classes.Eq Network.AWS.Batch.Types.PlatformCapability.PlatformCapability
instance GHC.Read.Read Network.AWS.Batch.Types.PlatformCapability.PlatformCapability
instance GHC.Show.Show Network.AWS.Batch.Types.PlatformCapability.PlatformCapability


module Network.AWS.Batch.Types.ResourceType
newtype ResourceType
ResourceType' :: Text -> ResourceType
[fromResourceType] :: ResourceType -> Text
pattern ResourceType_GPU :: ResourceType
pattern ResourceType_MEMORY :: ResourceType
pattern ResourceType_VCPU :: ResourceType
instance Network.AWS.Data.XML.ToXML Network.AWS.Batch.Types.ResourceType.ResourceType
instance Network.AWS.Data.XML.FromXML Network.AWS.Batch.Types.ResourceType.ResourceType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Batch.Types.ResourceType.ResourceType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Batch.Types.ResourceType.ResourceType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Batch.Types.ResourceType.ResourceType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Batch.Types.ResourceType.ResourceType
instance Network.AWS.Data.Query.ToQuery Network.AWS.Batch.Types.ResourceType.ResourceType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Batch.Types.ResourceType.ResourceType
instance Network.AWS.Data.Log.ToLog Network.AWS.Batch.Types.ResourceType.ResourceType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Batch.Types.ResourceType.ResourceType
instance Network.AWS.Data.Text.ToText Network.AWS.Batch.Types.ResourceType.ResourceType
instance Network.AWS.Data.Text.FromText Network.AWS.Batch.Types.ResourceType.ResourceType
instance Control.DeepSeq.NFData Network.AWS.Batch.Types.ResourceType.ResourceType
instance Data.Hashable.Class.Hashable Network.AWS.Batch.Types.ResourceType.ResourceType
instance GHC.Generics.Generic Network.AWS.Batch.Types.ResourceType.ResourceType
instance GHC.Classes.Ord Network.AWS.Batch.Types.ResourceType.ResourceType
instance GHC.Classes.Eq Network.AWS.Batch.Types.ResourceType.ResourceType
instance GHC.Read.Read Network.AWS.Batch.Types.ResourceType.ResourceType
instance GHC.Show.Show Network.AWS.Batch.Types.ResourceType.ResourceType


module Network.AWS.Batch.Types.ResourceRequirement

-- | The type and amount of a resource to assign to a container. The
--   supported resources include <tt>GPU</tt>, <tt>MEMORY</tt>, and
--   <tt>VCPU</tt>.
--   
--   <i>See:</i> <a>newResourceRequirement</a> smart constructor.
data ResourceRequirement
ResourceRequirement' :: Text -> ResourceType -> ResourceRequirement

-- | The quantity of the specified resource to reserve for the container.
--   The values vary based on the <tt>type</tt> specified.
--   
--   <ul>
--   <li><i>type="GPU"</i> The number of physical GPUs to reserve for the
--   container. The number of GPUs reserved for all containers in a job
--   shouldn't exceed the number of available GPUs on the compute resource
--   that the job is launched on.GPUs are not available for jobs that are
--   running on Fargate resources.</li>
--   <li><i>type="MEMORY"</i> The memory hard limit (in MiB) present to the
--   container. This parameter is supported for jobs that are running on
--   EC2 resources. If your container attempts to exceed the memory
--   specified, the container is terminated. This parameter maps to
--   <tt>Memory</tt> in the <a>Create a container</a> section of the
--   <a>Docker Remote API</a> and the <tt>--memory</tt> option to <a>docker
--   run</a>. You must specify at least 4 MiB of memory for a job. This is
--   required but can be specified in several places for multi-node
--   parallel (MNP) jobs. It must be specified for each node at least once.
--   This parameter maps to <tt>Memory</tt> in the <a>Create a
--   container</a> section of the <a>Docker Remote API</a> and the
--   <tt>--memory</tt> option to <a>docker run</a>.If you're trying to
--   maximize your resource utilization by providing your jobs as much
--   memory as possible for a particular instance type, see <a>Memory
--   Management</a> in the <i>Batch User Guide</i>.For jobs that are
--   running on Fargate resources, then <tt>value</tt> is the hard limit
--   (in MiB), and must match one of the supported values and the
--   <tt>VCPU</tt> values must be one of the values supported for that
--   memory value.<ul><li><i>value = 512</i> <tt>VCPU</tt> =
--   0.25</li><li><i>value = 1024</i> <tt>VCPU</tt> = 0.25 or
--   0.5</li><li><i>value = 2048</i> <tt>VCPU</tt> = 0.25, 0.5, or
--   1</li><li><i>value = 3072</i> <tt>VCPU</tt> = 0.5, or
--   1</li><li><i>value = 4096</i> <tt>VCPU</tt> = 0.5, 1, or
--   2</li><li><i>value = 5120, 6144, or 7168</i> <tt>VCPU</tt> = 1 or
--   2</li><li><i>value = 8192</i> <tt>VCPU</tt> = 1, 2, or
--   4</li><li><i>value = 9216, 10240, 11264, 12288, 13312, 14336, 15360,
--   or 16384</i> <tt>VCPU</tt> = 2 or 4</li><li><i>value = 17408, 18432,
--   19456, 20480, 21504, 22528, 23552, 24576, 25600, 26624, 27648, 28672,
--   29696, or 30720</i> <tt>VCPU</tt> = 4</li></ul></li>
--   <li><i>type="VCPU"</i> The number of vCPUs reserved for the container.
--   This parameter maps to <tt>CpuShares</tt> in the <a>Create a
--   container</a> section of the <a>Docker Remote API</a> and the
--   <tt>--cpu-shares</tt> option to <a>docker run</a>. Each vCPU is
--   equivalent to 1,024 CPU shares. For EC2 resources, you must specify at
--   least one vCPU. This is required but can be specified in several
--   places; it must be specified for each node at least once.For jobs that
--   are running on Fargate resources, then <tt>value</tt> must match one
--   of the supported values and the <tt>MEMORY</tt> values must be one of
--   the values supported for that VCPU value. The supported values are
--   0.25, 0.5, 1, 2, and 4<ul><li><i>value = 0.25</i> <tt>MEMORY</tt> =
--   512, 1024, or 2048</li><li><i>value = 0.5</i> <tt>MEMORY</tt> = 1024,
--   2048, 3072, or 4096</li><li><i>value = 1</i> <tt>MEMORY</tt> = 2048,
--   3072, 4096, 5120, 6144, 7168, or 8192</li><li><i>value = 2</i>
--   <tt>MEMORY</tt> = 4096, 5120, 6144, 7168, 8192, 9216, 10240, 11264,
--   12288, 13312, 14336, 15360, or 16384</li><li><i>value = 4</i>
--   <tt>MEMORY</tt> = 8192, 9216, 10240, 11264, 12288, 13312, 14336,
--   15360, 16384, 17408, 18432, 19456, 20480, 21504, 22528, 23552, 24576,
--   25600, 26624, 27648, 28672, 29696, or 30720</li></ul></li>
--   </ul>
[$sel:value:ResourceRequirement'] :: ResourceRequirement -> Text

-- | The type of resource to assign to a container. The supported resources
--   include <tt>GPU</tt>, <tt>MEMORY</tt>, and <tt>VCPU</tt>.
[$sel:type':ResourceRequirement'] :: ResourceRequirement -> ResourceType

-- | Create a value of <a>ResourceRequirement</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:value:ResourceRequirement'</a>,
--   <a>resourceRequirement_value</a> - The quantity of the specified
--   resource to reserve for the container. The values vary based on the
--   <tt>type</tt> specified.
--   
--   <ul>
--   <li><i>type="GPU"</i> The number of physical GPUs to reserve for the
--   container. The number of GPUs reserved for all containers in a job
--   shouldn't exceed the number of available GPUs on the compute resource
--   that the job is launched on.GPUs are not available for jobs that are
--   running on Fargate resources.</li>
--   <li><i>type="MEMORY"</i> The memory hard limit (in MiB) present to the
--   container. This parameter is supported for jobs that are running on
--   EC2 resources. If your container attempts to exceed the memory
--   specified, the container is terminated. This parameter maps to
--   <tt>Memory</tt> in the <a>Create a container</a> section of the
--   <a>Docker Remote API</a> and the <tt>--memory</tt> option to <a>docker
--   run</a>. You must specify at least 4 MiB of memory for a job. This is
--   required but can be specified in several places for multi-node
--   parallel (MNP) jobs. It must be specified for each node at least once.
--   This parameter maps to <tt>Memory</tt> in the <a>Create a
--   container</a> section of the <a>Docker Remote API</a> and the
--   <tt>--memory</tt> option to <a>docker run</a>.If you're trying to
--   maximize your resource utilization by providing your jobs as much
--   memory as possible for a particular instance type, see <a>Memory
--   Management</a> in the <i>Batch User Guide</i>.For jobs that are
--   running on Fargate resources, then <tt>value</tt> is the hard limit
--   (in MiB), and must match one of the supported values and the
--   <tt>VCPU</tt> values must be one of the values supported for that
--   memory value.<ul><li><i>value = 512</i> <tt>VCPU</tt> =
--   0.25</li><li><i>value = 1024</i> <tt>VCPU</tt> = 0.25 or
--   0.5</li><li><i>value = 2048</i> <tt>VCPU</tt> = 0.25, 0.5, or
--   1</li><li><i>value = 3072</i> <tt>VCPU</tt> = 0.5, or
--   1</li><li><i>value = 4096</i> <tt>VCPU</tt> = 0.5, 1, or
--   2</li><li><i>value = 5120, 6144, or 7168</i> <tt>VCPU</tt> = 1 or
--   2</li><li><i>value = 8192</i> <tt>VCPU</tt> = 1, 2, or
--   4</li><li><i>value = 9216, 10240, 11264, 12288, 13312, 14336, 15360,
--   or 16384</i> <tt>VCPU</tt> = 2 or 4</li><li><i>value = 17408, 18432,
--   19456, 20480, 21504, 22528, 23552, 24576, 25600, 26624, 27648, 28672,
--   29696, or 30720</i> <tt>VCPU</tt> = 4</li></ul></li>
--   <li><i>type="VCPU"</i> The number of vCPUs reserved for the container.
--   This parameter maps to <tt>CpuShares</tt> in the <a>Create a
--   container</a> section of the <a>Docker Remote API</a> and the
--   <tt>--cpu-shares</tt> option to <a>docker run</a>. Each vCPU is
--   equivalent to 1,024 CPU shares. For EC2 resources, you must specify at
--   least one vCPU. This is required but can be specified in several
--   places; it must be specified for each node at least once.For jobs that
--   are running on Fargate resources, then <tt>value</tt> must match one
--   of the supported values and the <tt>MEMORY</tt> values must be one of
--   the values supported for that VCPU value. The supported values are
--   0.25, 0.5, 1, 2, and 4<ul><li><i>value = 0.25</i> <tt>MEMORY</tt> =
--   512, 1024, or 2048</li><li><i>value = 0.5</i> <tt>MEMORY</tt> = 1024,
--   2048, 3072, or 4096</li><li><i>value = 1</i> <tt>MEMORY</tt> = 2048,
--   3072, 4096, 5120, 6144, 7168, or 8192</li><li><i>value = 2</i>
--   <tt>MEMORY</tt> = 4096, 5120, 6144, 7168, 8192, 9216, 10240, 11264,
--   12288, 13312, 14336, 15360, or 16384</li><li><i>value = 4</i>
--   <tt>MEMORY</tt> = 8192, 9216, 10240, 11264, 12288, 13312, 14336,
--   15360, 16384, 17408, 18432, 19456, 20480, 21504, 22528, 23552, 24576,
--   25600, 26624, 27648, 28672, 29696, or 30720</li></ul></li>
--   </ul>
--   
--   <a>$sel:type':ResourceRequirement'</a>,
--   <a>resourceRequirement_type</a> - The type of resource to assign to a
--   container. The supported resources include <tt>GPU</tt>,
--   <tt>MEMORY</tt>, and <tt>VCPU</tt>.
newResourceRequirement :: Text -> ResourceType -> ResourceRequirement

-- | The quantity of the specified resource to reserve for the container.
--   The values vary based on the <tt>type</tt> specified.
--   
--   <ul>
--   <li><i>type="GPU"</i> The number of physical GPUs to reserve for the
--   container. The number of GPUs reserved for all containers in a job
--   shouldn't exceed the number of available GPUs on the compute resource
--   that the job is launched on.GPUs are not available for jobs that are
--   running on Fargate resources.</li>
--   <li><i>type="MEMORY"</i> The memory hard limit (in MiB) present to the
--   container. This parameter is supported for jobs that are running on
--   EC2 resources. If your container attempts to exceed the memory
--   specified, the container is terminated. This parameter maps to
--   <tt>Memory</tt> in the <a>Create a container</a> section of the
--   <a>Docker Remote API</a> and the <tt>--memory</tt> option to <a>docker
--   run</a>. You must specify at least 4 MiB of memory for a job. This is
--   required but can be specified in several places for multi-node
--   parallel (MNP) jobs. It must be specified for each node at least once.
--   This parameter maps to <tt>Memory</tt> in the <a>Create a
--   container</a> section of the <a>Docker Remote API</a> and the
--   <tt>--memory</tt> option to <a>docker run</a>.If you're trying to
--   maximize your resource utilization by providing your jobs as much
--   memory as possible for a particular instance type, see <a>Memory
--   Management</a> in the <i>Batch User Guide</i>.For jobs that are
--   running on Fargate resources, then <tt>value</tt> is the hard limit
--   (in MiB), and must match one of the supported values and the
--   <tt>VCPU</tt> values must be one of the values supported for that
--   memory value.<ul><li><i>value = 512</i> <tt>VCPU</tt> =
--   0.25</li><li><i>value = 1024</i> <tt>VCPU</tt> = 0.25 or
--   0.5</li><li><i>value = 2048</i> <tt>VCPU</tt> = 0.25, 0.5, or
--   1</li><li><i>value = 3072</i> <tt>VCPU</tt> = 0.5, or
--   1</li><li><i>value = 4096</i> <tt>VCPU</tt> = 0.5, 1, or
--   2</li><li><i>value = 5120, 6144, or 7168</i> <tt>VCPU</tt> = 1 or
--   2</li><li><i>value = 8192</i> <tt>VCPU</tt> = 1, 2, or
--   4</li><li><i>value = 9216, 10240, 11264, 12288, 13312, 14336, 15360,
--   or 16384</i> <tt>VCPU</tt> = 2 or 4</li><li><i>value = 17408, 18432,
--   19456, 20480, 21504, 22528, 23552, 24576, 25600, 26624, 27648, 28672,
--   29696, or 30720</i> <tt>VCPU</tt> = 4</li></ul></li>
--   <li><i>type="VCPU"</i> The number of vCPUs reserved for the container.
--   This parameter maps to <tt>CpuShares</tt> in the <a>Create a
--   container</a> section of the <a>Docker Remote API</a> and the
--   <tt>--cpu-shares</tt> option to <a>docker run</a>. Each vCPU is
--   equivalent to 1,024 CPU shares. For EC2 resources, you must specify at
--   least one vCPU. This is required but can be specified in several
--   places; it must be specified for each node at least once.For jobs that
--   are running on Fargate resources, then <tt>value</tt> must match one
--   of the supported values and the <tt>MEMORY</tt> values must be one of
--   the values supported for that VCPU value. The supported values are
--   0.25, 0.5, 1, 2, and 4<ul><li><i>value = 0.25</i> <tt>MEMORY</tt> =
--   512, 1024, or 2048</li><li><i>value = 0.5</i> <tt>MEMORY</tt> = 1024,
--   2048, 3072, or 4096</li><li><i>value = 1</i> <tt>MEMORY</tt> = 2048,
--   3072, 4096, 5120, 6144, 7168, or 8192</li><li><i>value = 2</i>
--   <tt>MEMORY</tt> = 4096, 5120, 6144, 7168, 8192, 9216, 10240, 11264,
--   12288, 13312, 14336, 15360, or 16384</li><li><i>value = 4</i>
--   <tt>MEMORY</tt> = 8192, 9216, 10240, 11264, 12288, 13312, 14336,
--   15360, 16384, 17408, 18432, 19456, 20480, 21504, 22528, 23552, 24576,
--   25600, 26624, 27648, 28672, 29696, or 30720</li></ul></li>
--   </ul>
resourceRequirement_value :: Lens' ResourceRequirement Text

-- | The type of resource to assign to a container. The supported resources
--   include <tt>GPU</tt>, <tt>MEMORY</tt>, and <tt>VCPU</tt>.
resourceRequirement_type :: Lens' ResourceRequirement ResourceType
instance GHC.Generics.Generic Network.AWS.Batch.Types.ResourceRequirement.ResourceRequirement
instance GHC.Show.Show Network.AWS.Batch.Types.ResourceRequirement.ResourceRequirement
instance GHC.Read.Read Network.AWS.Batch.Types.ResourceRequirement.ResourceRequirement
instance GHC.Classes.Eq Network.AWS.Batch.Types.ResourceRequirement.ResourceRequirement
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Batch.Types.ResourceRequirement.ResourceRequirement
instance Data.Hashable.Class.Hashable Network.AWS.Batch.Types.ResourceRequirement.ResourceRequirement
instance Control.DeepSeq.NFData Network.AWS.Batch.Types.ResourceRequirement.ResourceRequirement
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Batch.Types.ResourceRequirement.ResourceRequirement


module Network.AWS.Batch.Types.ContainerOverrides

-- | The overrides that should be sent to a container.
--   
--   <i>See:</i> <a>newContainerOverrides</a> smart constructor.
data ContainerOverrides
ContainerOverrides' :: Maybe [Text] -> Maybe [KeyValuePair] -> Maybe [ResourceRequirement] -> Maybe Text -> Maybe Int -> Maybe Int -> ContainerOverrides

-- | The command to send to the container that overrides the default
--   command from the Docker image or the job definition.
[$sel:command:ContainerOverrides'] :: ContainerOverrides -> Maybe [Text]

-- | The environment variables to send to the container. You can add new
--   environment variables, which are added to the container at launch, or
--   you can override the existing environment variables from the Docker
--   image or the job definition.
--   
--   Environment variables must not start with <tt>AWS_BATCH</tt>; this
--   naming convention is reserved for variables that are set by the Batch
--   service.
[$sel:environment:ContainerOverrides'] :: ContainerOverrides -> Maybe [KeyValuePair]

-- | The type and amount of resources to assign to a container. This
--   overrides the settings in the job definition. The supported resources
--   include <tt>GPU</tt>, <tt>MEMORY</tt>, and <tt>VCPU</tt>.
[$sel:resourceRequirements:ContainerOverrides'] :: ContainerOverrides -> Maybe [ResourceRequirement]

-- | The instance type to use for a multi-node parallel job.
--   
--   This parameter isn't applicable to single-node container jobs or jobs
--   that run on Fargate resources, and shouldn't be provided.
[$sel:instanceType:ContainerOverrides'] :: ContainerOverrides -> Maybe Text

-- | This parameter indicates the amount of memory (in MiB) that's reserved
--   for the job. It overrides the <tt>memory</tt> parameter set in the job
--   definition, but doesn't override any memory requirement specified in
--   the <tt>ResourceRequirement</tt> structure in the job definition. To
--   override memory requirements that are specified in the
--   <tt>ResourceRequirement</tt> structure in the job definition,
--   <tt>ResourceRequirement</tt> must be specified in the
--   <tt>SubmitJob</tt> request, with <tt>type</tt> set to <tt>MEMORY</tt>
--   and <tt>value</tt> set to the new value.
--   
--   This parameter is supported for jobs that run on EC2 resources, but
--   isn't supported for jobs that run on Fargate resources. For these
--   resources, use <tt>resourceRequirement</tt> instead.
[$sel:memory:ContainerOverrides'] :: ContainerOverrides -> Maybe Int

-- | This parameter indicates the number of vCPUs reserved for the
--   container.It overrides the <tt>vcpus</tt> parameter that's set in the
--   job definition, but doesn't override any vCPU requirement specified in
--   the <tt>resourceRequirement</tt> structure in the job definition. To
--   override vCPU requirements that are specified in the
--   <tt>ResourceRequirement</tt> structure in the job definition,
--   <tt>ResourceRequirement</tt> must be specified in the
--   <tt>SubmitJob</tt> request, with <tt>type</tt> set to <tt>VCPU</tt>
--   and <tt>value</tt> set to the new value.
--   
--   This parameter maps to <tt>CpuShares</tt> in the <a>Create a
--   container</a> section of the <a>Docker Remote API</a> and the
--   <tt>--cpu-shares</tt> option to <a>docker run</a>. Each vCPU is
--   equivalent to 1,024 CPU shares. You must specify at least one vCPU.
--   
--   This parameter is supported for jobs that run on EC2 resources, but
--   isn't supported for jobs that run on Fargate resources. For Fargate
--   resources, you can only use <tt>resourceRequirement</tt>. For EC2
--   resources, you can use either this parameter or
--   <tt>resourceRequirement</tt> but not both.
[$sel:vcpus:ContainerOverrides'] :: ContainerOverrides -> Maybe Int

-- | Create a value of <a>ContainerOverrides</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:command:ContainerOverrides'</a>,
--   <a>containerOverrides_command</a> - The command to send to the
--   container that overrides the default command from the Docker image or
--   the job definition.
--   
--   <a>$sel:environment:ContainerOverrides'</a>,
--   <a>containerOverrides_environment</a> - The environment variables to
--   send to the container. You can add new environment variables, which
--   are added to the container at launch, or you can override the existing
--   environment variables from the Docker image or the job definition.
--   
--   Environment variables must not start with <tt>AWS_BATCH</tt>; this
--   naming convention is reserved for variables that are set by the Batch
--   service.
--   
--   <a>$sel:resourceRequirements:ContainerOverrides'</a>,
--   <a>containerOverrides_resourceRequirements</a> - The type and amount
--   of resources to assign to a container. This overrides the settings in
--   the job definition. The supported resources include <tt>GPU</tt>,
--   <tt>MEMORY</tt>, and <tt>VCPU</tt>.
--   
--   <a>$sel:instanceType:ContainerOverrides'</a>,
--   <a>containerOverrides_instanceType</a> - The instance type to use for
--   a multi-node parallel job.
--   
--   This parameter isn't applicable to single-node container jobs or jobs
--   that run on Fargate resources, and shouldn't be provided.
--   
--   <a>$sel:memory:ContainerOverrides'</a>,
--   <a>containerOverrides_memory</a> - This parameter indicates the amount
--   of memory (in MiB) that's reserved for the job. It overrides the
--   <tt>memory</tt> parameter set in the job definition, but doesn't
--   override any memory requirement specified in the
--   <tt>ResourceRequirement</tt> structure in the job definition. To
--   override memory requirements that are specified in the
--   <tt>ResourceRequirement</tt> structure in the job definition,
--   <tt>ResourceRequirement</tt> must be specified in the
--   <tt>SubmitJob</tt> request, with <tt>type</tt> set to <tt>MEMORY</tt>
--   and <tt>value</tt> set to the new value.
--   
--   This parameter is supported for jobs that run on EC2 resources, but
--   isn't supported for jobs that run on Fargate resources. For these
--   resources, use <tt>resourceRequirement</tt> instead.
--   
--   <a>$sel:vcpus:ContainerOverrides'</a>, <a>containerOverrides_vcpus</a>
--   - This parameter indicates the number of vCPUs reserved for the
--   container.It overrides the <tt>vcpus</tt> parameter that's set in the
--   job definition, but doesn't override any vCPU requirement specified in
--   the <tt>resourceRequirement</tt> structure in the job definition. To
--   override vCPU requirements that are specified in the
--   <tt>ResourceRequirement</tt> structure in the job definition,
--   <tt>ResourceRequirement</tt> must be specified in the
--   <tt>SubmitJob</tt> request, with <tt>type</tt> set to <tt>VCPU</tt>
--   and <tt>value</tt> set to the new value.
--   
--   This parameter maps to <tt>CpuShares</tt> in the <a>Create a
--   container</a> section of the <a>Docker Remote API</a> and the
--   <tt>--cpu-shares</tt> option to <a>docker run</a>. Each vCPU is
--   equivalent to 1,024 CPU shares. You must specify at least one vCPU.
--   
--   This parameter is supported for jobs that run on EC2 resources, but
--   isn't supported for jobs that run on Fargate resources. For Fargate
--   resources, you can only use <tt>resourceRequirement</tt>. For EC2
--   resources, you can use either this parameter or
--   <tt>resourceRequirement</tt> but not both.
newContainerOverrides :: ContainerOverrides

-- | The command to send to the container that overrides the default
--   command from the Docker image or the job definition.
containerOverrides_command :: Lens' ContainerOverrides (Maybe [Text])

-- | The environment variables to send to the container. You can add new
--   environment variables, which are added to the container at launch, or
--   you can override the existing environment variables from the Docker
--   image or the job definition.
--   
--   Environment variables must not start with <tt>AWS_BATCH</tt>; this
--   naming convention is reserved for variables that are set by the Batch
--   service.
containerOverrides_environment :: Lens' ContainerOverrides (Maybe [KeyValuePair])

-- | The type and amount of resources to assign to a container. This
--   overrides the settings in the job definition. The supported resources
--   include <tt>GPU</tt>, <tt>MEMORY</tt>, and <tt>VCPU</tt>.
containerOverrides_resourceRequirements :: Lens' ContainerOverrides (Maybe [ResourceRequirement])

-- | The instance type to use for a multi-node parallel job.
--   
--   This parameter isn't applicable to single-node container jobs or jobs
--   that run on Fargate resources, and shouldn't be provided.
containerOverrides_instanceType :: Lens' ContainerOverrides (Maybe Text)

-- | This parameter indicates the amount of memory (in MiB) that's reserved
--   for the job. It overrides the <tt>memory</tt> parameter set in the job
--   definition, but doesn't override any memory requirement specified in
--   the <tt>ResourceRequirement</tt> structure in the job definition. To
--   override memory requirements that are specified in the
--   <tt>ResourceRequirement</tt> structure in the job definition,
--   <tt>ResourceRequirement</tt> must be specified in the
--   <tt>SubmitJob</tt> request, with <tt>type</tt> set to <tt>MEMORY</tt>
--   and <tt>value</tt> set to the new value.
--   
--   This parameter is supported for jobs that run on EC2 resources, but
--   isn't supported for jobs that run on Fargate resources. For these
--   resources, use <tt>resourceRequirement</tt> instead.
containerOverrides_memory :: Lens' ContainerOverrides (Maybe Int)

-- | This parameter indicates the number of vCPUs reserved for the
--   container.It overrides the <tt>vcpus</tt> parameter that's set in the
--   job definition, but doesn't override any vCPU requirement specified in
--   the <tt>resourceRequirement</tt> structure in the job definition. To
--   override vCPU requirements that are specified in the
--   <tt>ResourceRequirement</tt> structure in the job definition,
--   <tt>ResourceRequirement</tt> must be specified in the
--   <tt>SubmitJob</tt> request, with <tt>type</tt> set to <tt>VCPU</tt>
--   and <tt>value</tt> set to the new value.
--   
--   This parameter maps to <tt>CpuShares</tt> in the <a>Create a
--   container</a> section of the <a>Docker Remote API</a> and the
--   <tt>--cpu-shares</tt> option to <a>docker run</a>. Each vCPU is
--   equivalent to 1,024 CPU shares. You must specify at least one vCPU.
--   
--   This parameter is supported for jobs that run on EC2 resources, but
--   isn't supported for jobs that run on Fargate resources. For Fargate
--   resources, you can only use <tt>resourceRequirement</tt>. For EC2
--   resources, you can use either this parameter or
--   <tt>resourceRequirement</tt> but not both.
containerOverrides_vcpus :: Lens' ContainerOverrides (Maybe Int)
instance GHC.Generics.Generic Network.AWS.Batch.Types.ContainerOverrides.ContainerOverrides
instance GHC.Show.Show Network.AWS.Batch.Types.ContainerOverrides.ContainerOverrides
instance GHC.Read.Read Network.AWS.Batch.Types.ContainerOverrides.ContainerOverrides
instance GHC.Classes.Eq Network.AWS.Batch.Types.ContainerOverrides.ContainerOverrides
instance Data.Hashable.Class.Hashable Network.AWS.Batch.Types.ContainerOverrides.ContainerOverrides
instance Control.DeepSeq.NFData Network.AWS.Batch.Types.ContainerOverrides.ContainerOverrides
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Batch.Types.ContainerOverrides.ContainerOverrides


module Network.AWS.Batch.Types.NodePropertyOverride

-- | Object representing any node overrides to a job definition that's used
--   in a SubmitJob API operation.
--   
--   <i>See:</i> <a>newNodePropertyOverride</a> smart constructor.
data NodePropertyOverride
NodePropertyOverride' :: Maybe ContainerOverrides -> Text -> NodePropertyOverride

-- | The overrides that should be sent to a node range.
[$sel:containerOverrides:NodePropertyOverride'] :: NodePropertyOverride -> Maybe ContainerOverrides

-- | The range of nodes, using node index values, that's used to override.
--   A range of <tt>0:3</tt> indicates nodes with index values of
--   <tt>0</tt> through <tt>3</tt>. If the starting range value is omitted
--   (<tt>:n</tt>), then <tt>0</tt> is used to start the range. If the
--   ending range value is omitted (<tt>n:</tt>), then the highest possible
--   node index is used to end the range.
[$sel:targetNodes:NodePropertyOverride'] :: NodePropertyOverride -> Text

-- | Create a value of <a>NodePropertyOverride</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:containerOverrides:NodePropertyOverride'</a>,
--   <a>nodePropertyOverride_containerOverrides</a> - The overrides that
--   should be sent to a node range.
--   
--   <a>$sel:targetNodes:NodePropertyOverride'</a>,
--   <a>nodePropertyOverride_targetNodes</a> - The range of nodes, using
--   node index values, that's used to override. A range of <tt>0:3</tt>
--   indicates nodes with index values of <tt>0</tt> through <tt>3</tt>. If
--   the starting range value is omitted (<tt>:n</tt>), then <tt>0</tt> is
--   used to start the range. If the ending range value is omitted
--   (<tt>n:</tt>), then the highest possible node index is used to end the
--   range.
newNodePropertyOverride :: Text -> NodePropertyOverride

-- | The overrides that should be sent to a node range.
nodePropertyOverride_containerOverrides :: Lens' NodePropertyOverride (Maybe ContainerOverrides)

-- | The range of nodes, using node index values, that's used to override.
--   A range of <tt>0:3</tt> indicates nodes with index values of
--   <tt>0</tt> through <tt>3</tt>. If the starting range value is omitted
--   (<tt>:n</tt>), then <tt>0</tt> is used to start the range. If the
--   ending range value is omitted (<tt>n:</tt>), then the highest possible
--   node index is used to end the range.
nodePropertyOverride_targetNodes :: Lens' NodePropertyOverride Text
instance GHC.Generics.Generic Network.AWS.Batch.Types.NodePropertyOverride.NodePropertyOverride
instance GHC.Show.Show Network.AWS.Batch.Types.NodePropertyOverride.NodePropertyOverride
instance GHC.Read.Read Network.AWS.Batch.Types.NodePropertyOverride.NodePropertyOverride
instance GHC.Classes.Eq Network.AWS.Batch.Types.NodePropertyOverride.NodePropertyOverride
instance Data.Hashable.Class.Hashable Network.AWS.Batch.Types.NodePropertyOverride.NodePropertyOverride
instance Control.DeepSeq.NFData Network.AWS.Batch.Types.NodePropertyOverride.NodePropertyOverride
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Batch.Types.NodePropertyOverride.NodePropertyOverride


module Network.AWS.Batch.Types.NodeOverrides

-- | Object representing any node overrides to a job definition that's used
--   in a SubmitJob API operation.
--   
--   This isn't applicable to jobs that are running on Fargate resources
--   and shouldn't be provided; use <tt>containerOverrides</tt> instead.
--   
--   <i>See:</i> <a>newNodeOverrides</a> smart constructor.
data NodeOverrides
NodeOverrides' :: Maybe Int -> Maybe [NodePropertyOverride] -> NodeOverrides

-- | The number of nodes to use with a multi-node parallel job. This value
--   overrides the number of nodes that are specified in the job
--   definition. To use this override:
--   
--   <ul>
--   <li>There must be at least one node range in your job definition that
--   has an open upper boundary (such as <tt>:</tt> or <tt>n:</tt>).</li>
--   <li>The lower boundary of the node range specified in the job
--   definition must be fewer than the number of nodes specified in the
--   override.</li>
--   <li>The main node index specified in the job definition must be fewer
--   than the number of nodes specified in the override.</li>
--   </ul>
[$sel:numNodes:NodeOverrides'] :: NodeOverrides -> Maybe Int

-- | The node property overrides for the job.
[$sel:nodePropertyOverrides:NodeOverrides'] :: NodeOverrides -> Maybe [NodePropertyOverride]

-- | Create a value of <a>NodeOverrides</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:numNodes:NodeOverrides'</a>, <a>nodeOverrides_numNodes</a> -
--   The number of nodes to use with a multi-node parallel job. This value
--   overrides the number of nodes that are specified in the job
--   definition. To use this override:
--   
--   <ul>
--   <li>There must be at least one node range in your job definition that
--   has an open upper boundary (such as <tt>:</tt> or <tt>n:</tt>).</li>
--   <li>The lower boundary of the node range specified in the job
--   definition must be fewer than the number of nodes specified in the
--   override.</li>
--   <li>The main node index specified in the job definition must be fewer
--   than the number of nodes specified in the override.</li>
--   </ul>
--   
--   <a>$sel:nodePropertyOverrides:NodeOverrides'</a>,
--   <a>nodeOverrides_nodePropertyOverrides</a> - The node property
--   overrides for the job.
newNodeOverrides :: NodeOverrides

-- | The number of nodes to use with a multi-node parallel job. This value
--   overrides the number of nodes that are specified in the job
--   definition. To use this override:
--   
--   <ul>
--   <li>There must be at least one node range in your job definition that
--   has an open upper boundary (such as <tt>:</tt> or <tt>n:</tt>).</li>
--   <li>The lower boundary of the node range specified in the job
--   definition must be fewer than the number of nodes specified in the
--   override.</li>
--   <li>The main node index specified in the job definition must be fewer
--   than the number of nodes specified in the override.</li>
--   </ul>
nodeOverrides_numNodes :: Lens' NodeOverrides (Maybe Int)

-- | The node property overrides for the job.
nodeOverrides_nodePropertyOverrides :: Lens' NodeOverrides (Maybe [NodePropertyOverride])
instance GHC.Generics.Generic Network.AWS.Batch.Types.NodeOverrides.NodeOverrides
instance GHC.Show.Show Network.AWS.Batch.Types.NodeOverrides.NodeOverrides
instance GHC.Read.Read Network.AWS.Batch.Types.NodeOverrides.NodeOverrides
instance GHC.Classes.Eq Network.AWS.Batch.Types.NodeOverrides.NodeOverrides
instance Data.Hashable.Class.Hashable Network.AWS.Batch.Types.NodeOverrides.NodeOverrides
instance Control.DeepSeq.NFData Network.AWS.Batch.Types.NodeOverrides.NodeOverrides
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Batch.Types.NodeOverrides.NodeOverrides


module Network.AWS.Batch.Types.RetryAction
newtype RetryAction
RetryAction' :: Text -> RetryAction
[fromRetryAction] :: RetryAction -> Text
pattern RetryAction_EXIT :: RetryAction
pattern RetryAction_RETRY :: RetryAction
instance Network.AWS.Data.XML.ToXML Network.AWS.Batch.Types.RetryAction.RetryAction
instance Network.AWS.Data.XML.FromXML Network.AWS.Batch.Types.RetryAction.RetryAction
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Batch.Types.RetryAction.RetryAction
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Batch.Types.RetryAction.RetryAction
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Batch.Types.RetryAction.RetryAction
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Batch.Types.RetryAction.RetryAction
instance Network.AWS.Data.Query.ToQuery Network.AWS.Batch.Types.RetryAction.RetryAction
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Batch.Types.RetryAction.RetryAction
instance Network.AWS.Data.Log.ToLog Network.AWS.Batch.Types.RetryAction.RetryAction
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Batch.Types.RetryAction.RetryAction
instance Network.AWS.Data.Text.ToText Network.AWS.Batch.Types.RetryAction.RetryAction
instance Network.AWS.Data.Text.FromText Network.AWS.Batch.Types.RetryAction.RetryAction
instance Control.DeepSeq.NFData Network.AWS.Batch.Types.RetryAction.RetryAction
instance Data.Hashable.Class.Hashable Network.AWS.Batch.Types.RetryAction.RetryAction
instance GHC.Generics.Generic Network.AWS.Batch.Types.RetryAction.RetryAction
instance GHC.Classes.Ord Network.AWS.Batch.Types.RetryAction.RetryAction
instance GHC.Classes.Eq Network.AWS.Batch.Types.RetryAction.RetryAction
instance GHC.Read.Read Network.AWS.Batch.Types.RetryAction.RetryAction
instance GHC.Show.Show Network.AWS.Batch.Types.RetryAction.RetryAction


module Network.AWS.Batch.Types.EvaluateOnExit

-- | Specifies a set of conditions to be met, and an action to take
--   (<tt>RETRY</tt> or <tt>EXIT</tt>) if all conditions are met.
--   
--   <i>See:</i> <a>newEvaluateOnExit</a> smart constructor.
data EvaluateOnExit
EvaluateOnExit' :: Maybe Text -> Maybe Text -> Maybe Text -> RetryAction -> EvaluateOnExit

-- | Contains a glob pattern to match against the decimal representation of
--   the <tt>ExitCode</tt> returned for a job. The pattern can be up to 512
--   characters in length. It can contain only numbers, and can optionally
--   end with an asterisk (*) so that only the start of the string needs to
--   be an exact match.
[$sel:onExitCode:EvaluateOnExit'] :: EvaluateOnExit -> Maybe Text

-- | Contains a glob pattern to match against the <tt>Reason</tt> returned
--   for a job. The pattern can be up to 512 characters in length. It can
--   contain letters, numbers, periods (.), colons (:), and white space
--   (including spaces and tabs). It can optionally end with an asterisk
--   (*) so that only the start of the string needs to be an exact match.
[$sel:onReason:EvaluateOnExit'] :: EvaluateOnExit -> Maybe Text

-- | Contains a glob pattern to match against the <tt>StatusReason</tt>
--   returned for a job. The pattern can be up to 512 characters in length.
--   It can contain letters, numbers, periods (.), colons (:), and white
--   space (including spaces or tabs). It can optionally end with an
--   asterisk (*) so that only the start of the string needs to be an exact
--   match.
[$sel:onStatusReason:EvaluateOnExit'] :: EvaluateOnExit -> Maybe Text

-- | Specifies the action to take if all of the specified conditions
--   (<tt>onStatusReason</tt>, <tt>onReason</tt>, and <tt>onExitCode</tt>)
--   are met. The values aren't case sensitive.
[$sel:action:EvaluateOnExit'] :: EvaluateOnExit -> RetryAction

-- | Create a value of <a>EvaluateOnExit</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:onExitCode:EvaluateOnExit'</a>,
--   <a>evaluateOnExit_onExitCode</a> - Contains a glob pattern to match
--   against the decimal representation of the <tt>ExitCode</tt> returned
--   for a job. The pattern can be up to 512 characters in length. It can
--   contain only numbers, and can optionally end with an asterisk (*) so
--   that only the start of the string needs to be an exact match.
--   
--   <a>$sel:onReason:EvaluateOnExit'</a>, <a>evaluateOnExit_onReason</a> -
--   Contains a glob pattern to match against the <tt>Reason</tt> returned
--   for a job. The pattern can be up to 512 characters in length. It can
--   contain letters, numbers, periods (.), colons (:), and white space
--   (including spaces and tabs). It can optionally end with an asterisk
--   (*) so that only the start of the string needs to be an exact match.
--   
--   <a>$sel:onStatusReason:EvaluateOnExit'</a>,
--   <a>evaluateOnExit_onStatusReason</a> - Contains a glob pattern to
--   match against the <tt>StatusReason</tt> returned for a job. The
--   pattern can be up to 512 characters in length. It can contain letters,
--   numbers, periods (.), colons (:), and white space (including spaces or
--   tabs). It can optionally end with an asterisk (*) so that only the
--   start of the string needs to be an exact match.
--   
--   <a>$sel:action:EvaluateOnExit'</a>, <a>evaluateOnExit_action</a> -
--   Specifies the action to take if all of the specified conditions
--   (<tt>onStatusReason</tt>, <tt>onReason</tt>, and <tt>onExitCode</tt>)
--   are met. The values aren't case sensitive.
newEvaluateOnExit :: RetryAction -> EvaluateOnExit

-- | Contains a glob pattern to match against the decimal representation of
--   the <tt>ExitCode</tt> returned for a job. The pattern can be up to 512
--   characters in length. It can contain only numbers, and can optionally
--   end with an asterisk (*) so that only the start of the string needs to
--   be an exact match.
evaluateOnExit_onExitCode :: Lens' EvaluateOnExit (Maybe Text)

-- | Contains a glob pattern to match against the <tt>Reason</tt> returned
--   for a job. The pattern can be up to 512 characters in length. It can
--   contain letters, numbers, periods (.), colons (:), and white space
--   (including spaces and tabs). It can optionally end with an asterisk
--   (*) so that only the start of the string needs to be an exact match.
evaluateOnExit_onReason :: Lens' EvaluateOnExit (Maybe Text)

-- | Contains a glob pattern to match against the <tt>StatusReason</tt>
--   returned for a job. The pattern can be up to 512 characters in length.
--   It can contain letters, numbers, periods (.), colons (:), and white
--   space (including spaces or tabs). It can optionally end with an
--   asterisk (*) so that only the start of the string needs to be an exact
--   match.
evaluateOnExit_onStatusReason :: Lens' EvaluateOnExit (Maybe Text)

-- | Specifies the action to take if all of the specified conditions
--   (<tt>onStatusReason</tt>, <tt>onReason</tt>, and <tt>onExitCode</tt>)
--   are met. The values aren't case sensitive.
evaluateOnExit_action :: Lens' EvaluateOnExit RetryAction
instance GHC.Generics.Generic Network.AWS.Batch.Types.EvaluateOnExit.EvaluateOnExit
instance GHC.Show.Show Network.AWS.Batch.Types.EvaluateOnExit.EvaluateOnExit
instance GHC.Read.Read Network.AWS.Batch.Types.EvaluateOnExit.EvaluateOnExit
instance GHC.Classes.Eq Network.AWS.Batch.Types.EvaluateOnExit.EvaluateOnExit
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Batch.Types.EvaluateOnExit.EvaluateOnExit
instance Data.Hashable.Class.Hashable Network.AWS.Batch.Types.EvaluateOnExit.EvaluateOnExit
instance Control.DeepSeq.NFData Network.AWS.Batch.Types.EvaluateOnExit.EvaluateOnExit
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Batch.Types.EvaluateOnExit.EvaluateOnExit


module Network.AWS.Batch.Types.RetryStrategy

-- | The retry strategy associated with a job. For more information, see
--   <a>Automated job retries</a> in the <i>Batch User Guide</i>.
--   
--   <i>See:</i> <a>newRetryStrategy</a> smart constructor.
data RetryStrategy
RetryStrategy' :: Maybe [EvaluateOnExit] -> Maybe Int -> RetryStrategy

-- | Array of up to 5 objects that specify conditions under which the job
--   should be retried or failed. If this parameter is specified, then the
--   <tt>attempts</tt> parameter must also be specified.
[$sel:evaluateOnExit:RetryStrategy'] :: RetryStrategy -> Maybe [EvaluateOnExit]

-- | The number of times to move a job to the <tt>RUNNABLE</tt> status. You
--   can specify between 1 and 10 attempts. If the value of
--   <tt>attempts</tt> is greater than one, the job is retried on failure
--   the same number of attempts as the value.
[$sel:attempts:RetryStrategy'] :: RetryStrategy -> Maybe Int

-- | Create a value of <a>RetryStrategy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:evaluateOnExit:RetryStrategy'</a>,
--   <a>retryStrategy_evaluateOnExit</a> - Array of up to 5 objects that
--   specify conditions under which the job should be retried or failed. If
--   this parameter is specified, then the <tt>attempts</tt> parameter must
--   also be specified.
--   
--   <a>$sel:attempts:RetryStrategy'</a>, <a>retryStrategy_attempts</a> -
--   The number of times to move a job to the <tt>RUNNABLE</tt> status. You
--   can specify between 1 and 10 attempts. If the value of
--   <tt>attempts</tt> is greater than one, the job is retried on failure
--   the same number of attempts as the value.
newRetryStrategy :: RetryStrategy

-- | Array of up to 5 objects that specify conditions under which the job
--   should be retried or failed. If this parameter is specified, then the
--   <tt>attempts</tt> parameter must also be specified.
retryStrategy_evaluateOnExit :: Lens' RetryStrategy (Maybe [EvaluateOnExit])

-- | The number of times to move a job to the <tt>RUNNABLE</tt> status. You
--   can specify between 1 and 10 attempts. If the value of
--   <tt>attempts</tt> is greater than one, the job is retried on failure
--   the same number of attempts as the value.
retryStrategy_attempts :: Lens' RetryStrategy (Maybe Int)
instance GHC.Generics.Generic Network.AWS.Batch.Types.RetryStrategy.RetryStrategy
instance GHC.Show.Show Network.AWS.Batch.Types.RetryStrategy.RetryStrategy
instance GHC.Read.Read Network.AWS.Batch.Types.RetryStrategy.RetryStrategy
instance GHC.Classes.Eq Network.AWS.Batch.Types.RetryStrategy.RetryStrategy
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Batch.Types.RetryStrategy.RetryStrategy
instance Data.Hashable.Class.Hashable Network.AWS.Batch.Types.RetryStrategy.RetryStrategy
instance Control.DeepSeq.NFData Network.AWS.Batch.Types.RetryStrategy.RetryStrategy
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Batch.Types.RetryStrategy.RetryStrategy


module Network.AWS.Batch.Types.Secret

-- | An object representing the secret to expose to your container. Secrets
--   can be exposed to a container in the following ways:
--   
--   <ul>
--   <li>To inject sensitive data into your containers as environment
--   variables, use the <tt>secrets</tt> container definition
--   parameter.</li>
--   <li>To reference sensitive information in the log configuration of a
--   container, use the <tt>secretOptions</tt> container definition
--   parameter.</li>
--   </ul>
--   
--   For more information, see <a>Specifying sensitive data</a> in the
--   <i>Batch User Guide</i>.
--   
--   <i>See:</i> <a>newSecret</a> smart constructor.
data Secret
Secret' :: Text -> Text -> Secret

-- | The name of the secret.
[$sel:name:Secret'] :: Secret -> Text

-- | The secret to expose to the container. The supported values are either
--   the full ARN of the Secrets Manager secret or the full ARN of the
--   parameter in the Amazon Web Services Systems Manager Parameter Store.
--   
--   If the Amazon Web Services Systems Manager Parameter Store parameter
--   exists in the same Region as the job you're launching, then you can
--   use either the full ARN or name of the parameter. If the parameter
--   exists in a different Region, then the full ARN must be specified.
[$sel:valueFrom:Secret'] :: Secret -> Text

-- | Create a value of <a>Secret</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:Secret'</a>, <a>secret_name</a> - The name of the secret.
--   
--   <a>$sel:valueFrom:Secret'</a>, <a>secret_valueFrom</a> - The secret to
--   expose to the container. The supported values are either the full ARN
--   of the Secrets Manager secret or the full ARN of the parameter in the
--   Amazon Web Services Systems Manager Parameter Store.
--   
--   If the Amazon Web Services Systems Manager Parameter Store parameter
--   exists in the same Region as the job you're launching, then you can
--   use either the full ARN or name of the parameter. If the parameter
--   exists in a different Region, then the full ARN must be specified.
newSecret :: Text -> Text -> Secret

-- | The name of the secret.
secret_name :: Lens' Secret Text

-- | The secret to expose to the container. The supported values are either
--   the full ARN of the Secrets Manager secret or the full ARN of the
--   parameter in the Amazon Web Services Systems Manager Parameter Store.
--   
--   If the Amazon Web Services Systems Manager Parameter Store parameter
--   exists in the same Region as the job you're launching, then you can
--   use either the full ARN or name of the parameter. If the parameter
--   exists in a different Region, then the full ARN must be specified.
secret_valueFrom :: Lens' Secret Text
instance GHC.Generics.Generic Network.AWS.Batch.Types.Secret.Secret
instance GHC.Show.Show Network.AWS.Batch.Types.Secret.Secret
instance GHC.Read.Read Network.AWS.Batch.Types.Secret.Secret
instance GHC.Classes.Eq Network.AWS.Batch.Types.Secret.Secret
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Batch.Types.Secret.Secret
instance Data.Hashable.Class.Hashable Network.AWS.Batch.Types.Secret.Secret
instance Control.DeepSeq.NFData Network.AWS.Batch.Types.Secret.Secret
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Batch.Types.Secret.Secret


module Network.AWS.Batch.Types.LogConfiguration

-- | Log configuration options to send to a custom log driver for the
--   container.
--   
--   <i>See:</i> <a>newLogConfiguration</a> smart constructor.
data LogConfiguration
LogConfiguration' :: Maybe (HashMap Text Text) -> Maybe [Secret] -> LogDriver -> LogConfiguration

-- | The configuration options to send to the log driver. This parameter
--   requires version 1.19 of the Docker Remote API or greater on your
--   container instance. To check the Docker Remote API version on your
--   container instance, log into your container instance and run the
--   following command: <tt>sudo docker version | grep "Server API
--   version"</tt>
[$sel:options:LogConfiguration'] :: LogConfiguration -> Maybe (HashMap Text Text)

-- | The secrets to pass to the log configuration. For more information,
--   see <a>Specifying Sensitive Data</a> in the <i>Batch User Guide</i>.
[$sel:secretOptions:LogConfiguration'] :: LogConfiguration -> Maybe [Secret]

-- | The log driver to use for the container. The valid values listed for
--   this parameter are log drivers that the Amazon ECS container agent can
--   communicate with by default.
--   
--   The supported log drivers are <tt>awslogs</tt>, <tt>fluentd</tt>,
--   <tt>gelf</tt>, <tt>json-file</tt>, <tt>journald</tt>,
--   <tt>logentries</tt>, <tt>syslog</tt>, and <tt>splunk</tt>.
--   
--   Jobs that are running on Fargate resources are restricted to the
--   <tt>awslogs</tt> and <tt>splunk</tt> log drivers.
--   
--   <ul>
--   <li><i>awslogs</i> Specifies the Amazon CloudWatch Logs logging
--   driver. For more information, see <a>Using the awslogs Log Driver</a>
--   in the <i>Batch User Guide</i> and <a>Amazon CloudWatch Logs logging
--   driver</a> in the Docker documentation.</li>
--   <li><i>fluentd</i> Specifies the Fluentd logging driver. For more
--   information, including usage and options, see <a>Fluentd logging
--   driver</a> in the Docker documentation.</li>
--   <li><i>gelf</i> Specifies the Graylog Extended Format (GELF) logging
--   driver. For more information, including usage and options, see
--   <a>Graylog Extended Format logging driver</a> in the Docker
--   documentation.</li>
--   <li><i>journald</i> Specifies the journald logging driver. For more
--   information, including usage and options, see <a>Journald logging
--   driver</a> in the Docker documentation.</li>
--   <li><i>json-file</i> Specifies the JSON file logging driver. For more
--   information, including usage and options, see <a>JSON File logging
--   driver</a> in the Docker documentation.</li>
--   <li><i>splunk</i> Specifies the Splunk logging driver. For more
--   information, including usage and options, see <a>Splunk logging
--   driver</a> in the Docker documentation.</li>
--   <li><i>syslog</i> Specifies the syslog logging driver. For more
--   information, including usage and options, see <a>Syslog logging
--   driver</a> in the Docker documentation.</li>
--   </ul>
--   
--   If you have a custom driver that's not listed earlier that you want to
--   work with the Amazon ECS container agent, you can fork the Amazon ECS
--   container agent project that's <a>available on GitHub</a> and
--   customize it to work with that driver. We encourage you to submit pull
--   requests for changes that you want to have included. However, Amazon
--   Web Services doesn't currently support running modified copies of this
--   software.
--   
--   This parameter requires version 1.18 of the Docker Remote API or
--   greater on your container instance. To check the Docker Remote API
--   version on your container instance, log into your container instance
--   and run the following command: <tt>sudo docker version | grep "Server
--   API version"</tt>
[$sel:logDriver:LogConfiguration'] :: LogConfiguration -> LogDriver

-- | Create a value of <a>LogConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:options:LogConfiguration'</a>, <a>logConfiguration_options</a>
--   - The configuration options to send to the log driver. This parameter
--   requires version 1.19 of the Docker Remote API or greater on your
--   container instance. To check the Docker Remote API version on your
--   container instance, log into your container instance and run the
--   following command: <tt>sudo docker version | grep "Server API
--   version"</tt>
--   
--   <a>$sel:secretOptions:LogConfiguration'</a>,
--   <a>logConfiguration_secretOptions</a> - The secrets to pass to the log
--   configuration. For more information, see <a>Specifying Sensitive
--   Data</a> in the <i>Batch User Guide</i>.
--   
--   <a>$sel:logDriver:LogConfiguration'</a>,
--   <a>logConfiguration_logDriver</a> - The log driver to use for the
--   container. The valid values listed for this parameter are log drivers
--   that the Amazon ECS container agent can communicate with by default.
--   
--   The supported log drivers are <tt>awslogs</tt>, <tt>fluentd</tt>,
--   <tt>gelf</tt>, <tt>json-file</tt>, <tt>journald</tt>,
--   <tt>logentries</tt>, <tt>syslog</tt>, and <tt>splunk</tt>.
--   
--   Jobs that are running on Fargate resources are restricted to the
--   <tt>awslogs</tt> and <tt>splunk</tt> log drivers.
--   
--   <ul>
--   <li><i>awslogs</i> Specifies the Amazon CloudWatch Logs logging
--   driver. For more information, see <a>Using the awslogs Log Driver</a>
--   in the <i>Batch User Guide</i> and <a>Amazon CloudWatch Logs logging
--   driver</a> in the Docker documentation.</li>
--   <li><i>fluentd</i> Specifies the Fluentd logging driver. For more
--   information, including usage and options, see <a>Fluentd logging
--   driver</a> in the Docker documentation.</li>
--   <li><i>gelf</i> Specifies the Graylog Extended Format (GELF) logging
--   driver. For more information, including usage and options, see
--   <a>Graylog Extended Format logging driver</a> in the Docker
--   documentation.</li>
--   <li><i>journald</i> Specifies the journald logging driver. For more
--   information, including usage and options, see <a>Journald logging
--   driver</a> in the Docker documentation.</li>
--   <li><i>json-file</i> Specifies the JSON file logging driver. For more
--   information, including usage and options, see <a>JSON File logging
--   driver</a> in the Docker documentation.</li>
--   <li><i>splunk</i> Specifies the Splunk logging driver. For more
--   information, including usage and options, see <a>Splunk logging
--   driver</a> in the Docker documentation.</li>
--   <li><i>syslog</i> Specifies the syslog logging driver. For more
--   information, including usage and options, see <a>Syslog logging
--   driver</a> in the Docker documentation.</li>
--   </ul>
--   
--   If you have a custom driver that's not listed earlier that you want to
--   work with the Amazon ECS container agent, you can fork the Amazon ECS
--   container agent project that's <a>available on GitHub</a> and
--   customize it to work with that driver. We encourage you to submit pull
--   requests for changes that you want to have included. However, Amazon
--   Web Services doesn't currently support running modified copies of this
--   software.
--   
--   This parameter requires version 1.18 of the Docker Remote API or
--   greater on your container instance. To check the Docker Remote API
--   version on your container instance, log into your container instance
--   and run the following command: <tt>sudo docker version | grep "Server
--   API version"</tt>
newLogConfiguration :: LogDriver -> LogConfiguration

-- | The configuration options to send to the log driver. This parameter
--   requires version 1.19 of the Docker Remote API or greater on your
--   container instance. To check the Docker Remote API version on your
--   container instance, log into your container instance and run the
--   following command: <tt>sudo docker version | grep "Server API
--   version"</tt>
logConfiguration_options :: Lens' LogConfiguration (Maybe (HashMap Text Text))

-- | The secrets to pass to the log configuration. For more information,
--   see <a>Specifying Sensitive Data</a> in the <i>Batch User Guide</i>.
logConfiguration_secretOptions :: Lens' LogConfiguration (Maybe [Secret])

-- | The log driver to use for the container. The valid values listed for
--   this parameter are log drivers that the Amazon ECS container agent can
--   communicate with by default.
--   
--   The supported log drivers are <tt>awslogs</tt>, <tt>fluentd</tt>,
--   <tt>gelf</tt>, <tt>json-file</tt>, <tt>journald</tt>,
--   <tt>logentries</tt>, <tt>syslog</tt>, and <tt>splunk</tt>.
--   
--   Jobs that are running on Fargate resources are restricted to the
--   <tt>awslogs</tt> and <tt>splunk</tt> log drivers.
--   
--   <ul>
--   <li><i>awslogs</i> Specifies the Amazon CloudWatch Logs logging
--   driver. For more information, see <a>Using the awslogs Log Driver</a>
--   in the <i>Batch User Guide</i> and <a>Amazon CloudWatch Logs logging
--   driver</a> in the Docker documentation.</li>
--   <li><i>fluentd</i> Specifies the Fluentd logging driver. For more
--   information, including usage and options, see <a>Fluentd logging
--   driver</a> in the Docker documentation.</li>
--   <li><i>gelf</i> Specifies the Graylog Extended Format (GELF) logging
--   driver. For more information, including usage and options, see
--   <a>Graylog Extended Format logging driver</a> in the Docker
--   documentation.</li>
--   <li><i>journald</i> Specifies the journald logging driver. For more
--   information, including usage and options, see <a>Journald logging
--   driver</a> in the Docker documentation.</li>
--   <li><i>json-file</i> Specifies the JSON file logging driver. For more
--   information, including usage and options, see <a>JSON File logging
--   driver</a> in the Docker documentation.</li>
--   <li><i>splunk</i> Specifies the Splunk logging driver. For more
--   information, including usage and options, see <a>Splunk logging
--   driver</a> in the Docker documentation.</li>
--   <li><i>syslog</i> Specifies the syslog logging driver. For more
--   information, including usage and options, see <a>Syslog logging
--   driver</a> in the Docker documentation.</li>
--   </ul>
--   
--   If you have a custom driver that's not listed earlier that you want to
--   work with the Amazon ECS container agent, you can fork the Amazon ECS
--   container agent project that's <a>available on GitHub</a> and
--   customize it to work with that driver. We encourage you to submit pull
--   requests for changes that you want to have included. However, Amazon
--   Web Services doesn't currently support running modified copies of this
--   software.
--   
--   This parameter requires version 1.18 of the Docker Remote API or
--   greater on your container instance. To check the Docker Remote API
--   version on your container instance, log into your container instance
--   and run the following command: <tt>sudo docker version | grep "Server
--   API version"</tt>
logConfiguration_logDriver :: Lens' LogConfiguration LogDriver
instance GHC.Generics.Generic Network.AWS.Batch.Types.LogConfiguration.LogConfiguration
instance GHC.Show.Show Network.AWS.Batch.Types.LogConfiguration.LogConfiguration
instance GHC.Read.Read Network.AWS.Batch.Types.LogConfiguration.LogConfiguration
instance GHC.Classes.Eq Network.AWS.Batch.Types.LogConfiguration.LogConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Batch.Types.LogConfiguration.LogConfiguration
instance Data.Hashable.Class.Hashable Network.AWS.Batch.Types.LogConfiguration.LogConfiguration
instance Control.DeepSeq.NFData Network.AWS.Batch.Types.LogConfiguration.LogConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Batch.Types.LogConfiguration.LogConfiguration


module Network.AWS.Batch.Types.Tmpfs

-- | The container path, mount options, and size of the tmpfs mount.
--   
--   This object isn't applicable to jobs that are running on Fargate
--   resources.
--   
--   <i>See:</i> <a>newTmpfs</a> smart constructor.
data Tmpfs
Tmpfs' :: Maybe [Text] -> Text -> Int -> Tmpfs

-- | The list of tmpfs volume mount options.
--   
--   Valid values: "<tt>defaults</tt>" | "<tt>ro</tt>" | "<tt>rw</tt>" |
--   "<tt>suid</tt>" | "<tt>nosuid</tt>" | "<tt>dev</tt>" |
--   "<tt>nodev</tt>" | "<tt>exec</tt>" | "<tt>noexec</tt>" |
--   "<tt>sync</tt>" | "<tt>async</tt>" | "<tt>dirsync</tt>" |
--   "<tt>remount</tt>" | "<tt>mand</tt>" | "<tt>nomand</tt>" |
--   "<tt>atime</tt>" | "<tt>noatime</tt>" | "<tt>diratime</tt>" |
--   "<tt>nodiratime</tt>" | "<tt>bind</tt>" | "<tt>rbind" | "unbindable" |
--   "runbindable" | "private" | "rprivate" | "shared" | "rshared" |
--   "slave" | "rslave" | "relatime</tt>" | "<tt>norelatime</tt>" |
--   "<tt>strictatime</tt>" | "<tt>nostrictatime</tt>" | "<tt>mode</tt>" |
--   "<tt>uid</tt>" | "<tt>gid</tt>" | "<tt>nr_inodes</tt>" |
--   "<tt>nr_blocks</tt>" | "<tt>mpol</tt>"
[$sel:mountOptions:Tmpfs'] :: Tmpfs -> Maybe [Text]

-- | The absolute file path in the container where the tmpfs volume is
--   mounted.
[$sel:containerPath:Tmpfs'] :: Tmpfs -> Text

-- | The size (in MiB) of the tmpfs volume.
[$sel:size:Tmpfs'] :: Tmpfs -> Int

-- | Create a value of <a>Tmpfs</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:mountOptions:Tmpfs'</a>, <a>tmpfs_mountOptions</a> - The list
--   of tmpfs volume mount options.
--   
--   Valid values: "<tt>defaults</tt>" | "<tt>ro</tt>" | "<tt>rw</tt>" |
--   "<tt>suid</tt>" | "<tt>nosuid</tt>" | "<tt>dev</tt>" |
--   "<tt>nodev</tt>" | "<tt>exec</tt>" | "<tt>noexec</tt>" |
--   "<tt>sync</tt>" | "<tt>async</tt>" | "<tt>dirsync</tt>" |
--   "<tt>remount</tt>" | "<tt>mand</tt>" | "<tt>nomand</tt>" |
--   "<tt>atime</tt>" | "<tt>noatime</tt>" | "<tt>diratime</tt>" |
--   "<tt>nodiratime</tt>" | "<tt>bind</tt>" | "<tt>rbind" | "unbindable" |
--   "runbindable" | "private" | "rprivate" | "shared" | "rshared" |
--   "slave" | "rslave" | "relatime</tt>" | "<tt>norelatime</tt>" |
--   "<tt>strictatime</tt>" | "<tt>nostrictatime</tt>" | "<tt>mode</tt>" |
--   "<tt>uid</tt>" | "<tt>gid</tt>" | "<tt>nr_inodes</tt>" |
--   "<tt>nr_blocks</tt>" | "<tt>mpol</tt>"
--   
--   <a>$sel:containerPath:Tmpfs'</a>, <a>tmpfs_containerPath</a> - The
--   absolute file path in the container where the tmpfs volume is mounted.
--   
--   <a>$sel:size:Tmpfs'</a>, <a>tmpfs_size</a> - The size (in MiB) of the
--   tmpfs volume.
newTmpfs :: Text -> Int -> Tmpfs

-- | The list of tmpfs volume mount options.
--   
--   Valid values: "<tt>defaults</tt>" | "<tt>ro</tt>" | "<tt>rw</tt>" |
--   "<tt>suid</tt>" | "<tt>nosuid</tt>" | "<tt>dev</tt>" |
--   "<tt>nodev</tt>" | "<tt>exec</tt>" | "<tt>noexec</tt>" |
--   "<tt>sync</tt>" | "<tt>async</tt>" | "<tt>dirsync</tt>" |
--   "<tt>remount</tt>" | "<tt>mand</tt>" | "<tt>nomand</tt>" |
--   "<tt>atime</tt>" | "<tt>noatime</tt>" | "<tt>diratime</tt>" |
--   "<tt>nodiratime</tt>" | "<tt>bind</tt>" | "<tt>rbind" | "unbindable" |
--   "runbindable" | "private" | "rprivate" | "shared" | "rshared" |
--   "slave" | "rslave" | "relatime</tt>" | "<tt>norelatime</tt>" |
--   "<tt>strictatime</tt>" | "<tt>nostrictatime</tt>" | "<tt>mode</tt>" |
--   "<tt>uid</tt>" | "<tt>gid</tt>" | "<tt>nr_inodes</tt>" |
--   "<tt>nr_blocks</tt>" | "<tt>mpol</tt>"
tmpfs_mountOptions :: Lens' Tmpfs (Maybe [Text])

-- | The absolute file path in the container where the tmpfs volume is
--   mounted.
tmpfs_containerPath :: Lens' Tmpfs Text

-- | The size (in MiB) of the tmpfs volume.
tmpfs_size :: Lens' Tmpfs Int
instance GHC.Generics.Generic Network.AWS.Batch.Types.Tmpfs.Tmpfs
instance GHC.Show.Show Network.AWS.Batch.Types.Tmpfs.Tmpfs
instance GHC.Read.Read Network.AWS.Batch.Types.Tmpfs.Tmpfs
instance GHC.Classes.Eq Network.AWS.Batch.Types.Tmpfs.Tmpfs
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Batch.Types.Tmpfs.Tmpfs
instance Data.Hashable.Class.Hashable Network.AWS.Batch.Types.Tmpfs.Tmpfs
instance Control.DeepSeq.NFData Network.AWS.Batch.Types.Tmpfs.Tmpfs
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Batch.Types.Tmpfs.Tmpfs


module Network.AWS.Batch.Types.LinuxParameters

-- | Linux-specific modifications that are applied to the container, such
--   as details for device mappings.
--   
--   <i>See:</i> <a>newLinuxParameters</a> smart constructor.
data LinuxParameters
LinuxParameters' :: Maybe Int -> Maybe Bool -> Maybe [Tmpfs] -> Maybe Int -> Maybe [Device] -> Maybe Int -> LinuxParameters

-- | The value for the size (in MiB) of the <tt>/dev/shm</tt> volume. This
--   parameter maps to the <tt>--shm-size</tt> option to <a>docker run</a>.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources and shouldn't be provided.
[$sel:sharedMemorySize:LinuxParameters'] :: LinuxParameters -> Maybe Int

-- | If true, run an <tt>init</tt> process inside the container that
--   forwards signals and reaps processes. This parameter maps to the
--   <tt>--init</tt> option to <a>docker run</a>. This parameter requires
--   version 1.25 of the Docker Remote API or greater on your container
--   instance. To check the Docker Remote API version on your container
--   instance, log into your container instance and run the following
--   command: <tt>sudo docker version | grep "Server API version"</tt>
[$sel:initProcessEnabled:LinuxParameters'] :: LinuxParameters -> Maybe Bool

-- | The container path, mount options, and size (in MiB) of the tmpfs
--   mount. This parameter maps to the <tt>--tmpfs</tt> option to <a>docker
--   run</a>.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources and shouldn't be provided.
[$sel:tmpfs:LinuxParameters'] :: LinuxParameters -> Maybe [Tmpfs]

-- | This allows you to tune a container's memory swappiness behavior. A
--   <tt>swappiness</tt> value of <tt>0</tt> causes swapping not to happen
--   unless absolutely necessary. A <tt>swappiness</tt> value of
--   <tt>100</tt> causes pages to be swapped very aggressively. Accepted
--   values are whole numbers between <tt>0</tt> and <tt>100</tt>. If the
--   <tt>swappiness</tt> parameter isn't specified, a default value of
--   <tt>60</tt> is used. If a value isn't specified for <tt>maxSwap</tt>,
--   then this parameter is ignored. If <tt>maxSwap</tt> is set to 0, the
--   container doesn't use swap. This parameter maps to the
--   <tt>--memory-swappiness</tt> option to <a>docker run</a>.
--   
--   Consider the following when you use a per-container swap
--   configuration.
--   
--   <ul>
--   <li>Swap space must be enabled and allocated on the container instance
--   for the containers to use.The Amazon ECS optimized AMIs don't have
--   swap enabled by default. You must enable swap on the instance to use
--   this feature. For more information, see <a>Instance Store Swap
--   Volumes</a> in the <i>Amazon EC2 User Guide for Linux Instances</i> or
--   <a>How do I allocate memory to work as swap space in an Amazon EC2
--   instance by using a swap file?</a></li>
--   <li>The swap space parameters are only supported for job definitions
--   using EC2 resources.</li>
--   <li>If the <tt>maxSwap</tt> and <tt>swappiness</tt> parameters are
--   omitted from a job definition, each container will have a default
--   <tt>swappiness</tt> value of 60, and the total swap usage will be
--   limited to two times the memory reservation of the container.</li>
--   </ul>
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources and shouldn't be provided.
[$sel:swappiness:LinuxParameters'] :: LinuxParameters -> Maybe Int

-- | Any host devices to expose to the container. This parameter maps to
--   <tt>Devices</tt> in the <a>Create a container</a> section of the
--   <a>Docker Remote API</a> and the <tt>--device</tt> option to <a>docker
--   run</a>.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources and shouldn't be provided.
[$sel:devices:LinuxParameters'] :: LinuxParameters -> Maybe [Device]

-- | The total amount of swap memory (in MiB) a container can use. This
--   parameter is translated to the <tt>--memory-swap</tt> option to
--   <a>docker run</a> where the value is the sum of the container memory
--   plus the <tt>maxSwap</tt> value. For more information, see
--   <a>--memory-swap details</a> in the Docker documentation.
--   
--   If a <tt>maxSwap</tt> value of <tt>0</tt> is specified, the container
--   doesn't use swap. Accepted values are <tt>0</tt> or any positive
--   integer. If the <tt>maxSwap</tt> parameter is omitted, the container
--   doesn't use the swap configuration for the container instance it is
--   running on. A <tt>maxSwap</tt> value must be set for the
--   <tt>swappiness</tt> parameter to be used.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources and shouldn't be provided.
[$sel:maxSwap:LinuxParameters'] :: LinuxParameters -> Maybe Int

-- | Create a value of <a>LinuxParameters</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sharedMemorySize:LinuxParameters'</a>,
--   <a>linuxParameters_sharedMemorySize</a> - The value for the size (in
--   MiB) of the <tt>/dev/shm</tt> volume. This parameter maps to the
--   <tt>--shm-size</tt> option to <a>docker run</a>.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources and shouldn't be provided.
--   
--   <a>$sel:initProcessEnabled:LinuxParameters'</a>,
--   <a>linuxParameters_initProcessEnabled</a> - If true, run an
--   <tt>init</tt> process inside the container that forwards signals and
--   reaps processes. This parameter maps to the <tt>--init</tt> option to
--   <a>docker run</a>. This parameter requires version 1.25 of the Docker
--   Remote API or greater on your container instance. To check the Docker
--   Remote API version on your container instance, log into your container
--   instance and run the following command: <tt>sudo docker version | grep
--   "Server API version"</tt>
--   
--   <a>$sel:tmpfs:LinuxParameters'</a>, <a>linuxParameters_tmpfs</a> - The
--   container path, mount options, and size (in MiB) of the tmpfs mount.
--   This parameter maps to the <tt>--tmpfs</tt> option to <a>docker
--   run</a>.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources and shouldn't be provided.
--   
--   <a>$sel:swappiness:LinuxParameters'</a>,
--   <a>linuxParameters_swappiness</a> - This allows you to tune a
--   container's memory swappiness behavior. A <tt>swappiness</tt> value of
--   <tt>0</tt> causes swapping not to happen unless absolutely necessary.
--   A <tt>swappiness</tt> value of <tt>100</tt> causes pages to be swapped
--   very aggressively. Accepted values are whole numbers between
--   <tt>0</tt> and <tt>100</tt>. If the <tt>swappiness</tt> parameter
--   isn't specified, a default value of <tt>60</tt> is used. If a value
--   isn't specified for <tt>maxSwap</tt>, then this parameter is ignored.
--   If <tt>maxSwap</tt> is set to 0, the container doesn't use swap. This
--   parameter maps to the <tt>--memory-swappiness</tt> option to <a>docker
--   run</a>.
--   
--   Consider the following when you use a per-container swap
--   configuration.
--   
--   <ul>
--   <li>Swap space must be enabled and allocated on the container instance
--   for the containers to use.The Amazon ECS optimized AMIs don't have
--   swap enabled by default. You must enable swap on the instance to use
--   this feature. For more information, see <a>Instance Store Swap
--   Volumes</a> in the <i>Amazon EC2 User Guide for Linux Instances</i> or
--   <a>How do I allocate memory to work as swap space in an Amazon EC2
--   instance by using a swap file?</a></li>
--   <li>The swap space parameters are only supported for job definitions
--   using EC2 resources.</li>
--   <li>If the <tt>maxSwap</tt> and <tt>swappiness</tt> parameters are
--   omitted from a job definition, each container will have a default
--   <tt>swappiness</tt> value of 60, and the total swap usage will be
--   limited to two times the memory reservation of the container.</li>
--   </ul>
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources and shouldn't be provided.
--   
--   <a>$sel:devices:LinuxParameters'</a>, <a>linuxParameters_devices</a> -
--   Any host devices to expose to the container. This parameter maps to
--   <tt>Devices</tt> in the <a>Create a container</a> section of the
--   <a>Docker Remote API</a> and the <tt>--device</tt> option to <a>docker
--   run</a>.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources and shouldn't be provided.
--   
--   <a>$sel:maxSwap:LinuxParameters'</a>, <a>linuxParameters_maxSwap</a> -
--   The total amount of swap memory (in MiB) a container can use. This
--   parameter is translated to the <tt>--memory-swap</tt> option to
--   <a>docker run</a> where the value is the sum of the container memory
--   plus the <tt>maxSwap</tt> value. For more information, see
--   <a>--memory-swap details</a> in the Docker documentation.
--   
--   If a <tt>maxSwap</tt> value of <tt>0</tt> is specified, the container
--   doesn't use swap. Accepted values are <tt>0</tt> or any positive
--   integer. If the <tt>maxSwap</tt> parameter is omitted, the container
--   doesn't use the swap configuration for the container instance it is
--   running on. A <tt>maxSwap</tt> value must be set for the
--   <tt>swappiness</tt> parameter to be used.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources and shouldn't be provided.
newLinuxParameters :: LinuxParameters

-- | The value for the size (in MiB) of the <tt>/dev/shm</tt> volume. This
--   parameter maps to the <tt>--shm-size</tt> option to <a>docker run</a>.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources and shouldn't be provided.
linuxParameters_sharedMemorySize :: Lens' LinuxParameters (Maybe Int)

-- | If true, run an <tt>init</tt> process inside the container that
--   forwards signals and reaps processes. This parameter maps to the
--   <tt>--init</tt> option to <a>docker run</a>. This parameter requires
--   version 1.25 of the Docker Remote API or greater on your container
--   instance. To check the Docker Remote API version on your container
--   instance, log into your container instance and run the following
--   command: <tt>sudo docker version | grep "Server API version"</tt>
linuxParameters_initProcessEnabled :: Lens' LinuxParameters (Maybe Bool)

-- | The container path, mount options, and size (in MiB) of the tmpfs
--   mount. This parameter maps to the <tt>--tmpfs</tt> option to <a>docker
--   run</a>.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources and shouldn't be provided.
linuxParameters_tmpfs :: Lens' LinuxParameters (Maybe [Tmpfs])

-- | This allows you to tune a container's memory swappiness behavior. A
--   <tt>swappiness</tt> value of <tt>0</tt> causes swapping not to happen
--   unless absolutely necessary. A <tt>swappiness</tt> value of
--   <tt>100</tt> causes pages to be swapped very aggressively. Accepted
--   values are whole numbers between <tt>0</tt> and <tt>100</tt>. If the
--   <tt>swappiness</tt> parameter isn't specified, a default value of
--   <tt>60</tt> is used. If a value isn't specified for <tt>maxSwap</tt>,
--   then this parameter is ignored. If <tt>maxSwap</tt> is set to 0, the
--   container doesn't use swap. This parameter maps to the
--   <tt>--memory-swappiness</tt> option to <a>docker run</a>.
--   
--   Consider the following when you use a per-container swap
--   configuration.
--   
--   <ul>
--   <li>Swap space must be enabled and allocated on the container instance
--   for the containers to use.The Amazon ECS optimized AMIs don't have
--   swap enabled by default. You must enable swap on the instance to use
--   this feature. For more information, see <a>Instance Store Swap
--   Volumes</a> in the <i>Amazon EC2 User Guide for Linux Instances</i> or
--   <a>How do I allocate memory to work as swap space in an Amazon EC2
--   instance by using a swap file?</a></li>
--   <li>The swap space parameters are only supported for job definitions
--   using EC2 resources.</li>
--   <li>If the <tt>maxSwap</tt> and <tt>swappiness</tt> parameters are
--   omitted from a job definition, each container will have a default
--   <tt>swappiness</tt> value of 60, and the total swap usage will be
--   limited to two times the memory reservation of the container.</li>
--   </ul>
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources and shouldn't be provided.
linuxParameters_swappiness :: Lens' LinuxParameters (Maybe Int)

-- | Any host devices to expose to the container. This parameter maps to
--   <tt>Devices</tt> in the <a>Create a container</a> section of the
--   <a>Docker Remote API</a> and the <tt>--device</tt> option to <a>docker
--   run</a>.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources and shouldn't be provided.
linuxParameters_devices :: Lens' LinuxParameters (Maybe [Device])

-- | The total amount of swap memory (in MiB) a container can use. This
--   parameter is translated to the <tt>--memory-swap</tt> option to
--   <a>docker run</a> where the value is the sum of the container memory
--   plus the <tt>maxSwap</tt> value. For more information, see
--   <a>--memory-swap details</a> in the Docker documentation.
--   
--   If a <tt>maxSwap</tt> value of <tt>0</tt> is specified, the container
--   doesn't use swap. Accepted values are <tt>0</tt> or any positive
--   integer. If the <tt>maxSwap</tt> parameter is omitted, the container
--   doesn't use the swap configuration for the container instance it is
--   running on. A <tt>maxSwap</tt> value must be set for the
--   <tt>swappiness</tt> parameter to be used.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources and shouldn't be provided.
linuxParameters_maxSwap :: Lens' LinuxParameters (Maybe Int)
instance GHC.Generics.Generic Network.AWS.Batch.Types.LinuxParameters.LinuxParameters
instance GHC.Show.Show Network.AWS.Batch.Types.LinuxParameters.LinuxParameters
instance GHC.Read.Read Network.AWS.Batch.Types.LinuxParameters.LinuxParameters
instance GHC.Classes.Eq Network.AWS.Batch.Types.LinuxParameters.LinuxParameters
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Batch.Types.LinuxParameters.LinuxParameters
instance Data.Hashable.Class.Hashable Network.AWS.Batch.Types.LinuxParameters.LinuxParameters
instance Control.DeepSeq.NFData Network.AWS.Batch.Types.LinuxParameters.LinuxParameters
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Batch.Types.LinuxParameters.LinuxParameters


module Network.AWS.Batch.Types.Ulimit

-- | The <tt>ulimit</tt> settings to pass to the container.
--   
--   This object isn't applicable to jobs that are running on Fargate
--   resources.
--   
--   <i>See:</i> <a>newUlimit</a> smart constructor.
data Ulimit
Ulimit' :: Int -> Text -> Int -> Ulimit

-- | The hard limit for the <tt>ulimit</tt> type.
[$sel:hardLimit:Ulimit'] :: Ulimit -> Int

-- | The <tt>type</tt> of the <tt>ulimit</tt>.
[$sel:name:Ulimit'] :: Ulimit -> Text

-- | The soft limit for the <tt>ulimit</tt> type.
[$sel:softLimit:Ulimit'] :: Ulimit -> Int

-- | Create a value of <a>Ulimit</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:hardLimit:Ulimit'</a>, <a>ulimit_hardLimit</a> - The hard
--   limit for the <tt>ulimit</tt> type.
--   
--   <a>$sel:name:Ulimit'</a>, <a>ulimit_name</a> - The <tt>type</tt> of
--   the <tt>ulimit</tt>.
--   
--   <a>$sel:softLimit:Ulimit'</a>, <a>ulimit_softLimit</a> - The soft
--   limit for the <tt>ulimit</tt> type.
newUlimit :: Int -> Text -> Int -> Ulimit

-- | The hard limit for the <tt>ulimit</tt> type.
ulimit_hardLimit :: Lens' Ulimit Int

-- | The <tt>type</tt> of the <tt>ulimit</tt>.
ulimit_name :: Lens' Ulimit Text

-- | The soft limit for the <tt>ulimit</tt> type.
ulimit_softLimit :: Lens' Ulimit Int
instance GHC.Generics.Generic Network.AWS.Batch.Types.Ulimit.Ulimit
instance GHC.Show.Show Network.AWS.Batch.Types.Ulimit.Ulimit
instance GHC.Read.Read Network.AWS.Batch.Types.Ulimit.Ulimit
instance GHC.Classes.Eq Network.AWS.Batch.Types.Ulimit.Ulimit
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Batch.Types.Ulimit.Ulimit
instance Data.Hashable.Class.Hashable Network.AWS.Batch.Types.Ulimit.Ulimit
instance Control.DeepSeq.NFData Network.AWS.Batch.Types.Ulimit.Ulimit
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Batch.Types.Ulimit.Ulimit


module Network.AWS.Batch.Types.Volume

-- | A data volume used in a job's container properties.
--   
--   <i>See:</i> <a>newVolume</a> smart constructor.
data Volume
Volume' :: Maybe Text -> Maybe EFSVolumeConfiguration -> Maybe Host -> Volume

-- | The name of the volume. Up to 255 letters (uppercase and lowercase),
--   numbers, hyphens, and underscores are allowed. This name is referenced
--   in the <tt>sourceVolume</tt> parameter of container definition
--   <tt>mountPoints</tt>.
[$sel:name:Volume'] :: Volume -> Maybe Text

-- | This parameter is specified when you are using an Amazon Elastic File
--   System file system for job storage. Jobs that are running on Fargate
--   resources must specify a <tt>platformVersion</tt> of at least
--   <tt>1.4.0</tt>.
[$sel:efsVolumeConfiguration:Volume'] :: Volume -> Maybe EFSVolumeConfiguration

-- | The contents of the <tt>host</tt> parameter determine whether your
--   data volume persists on the host container instance and where it is
--   stored. If the host parameter is empty, then the Docker daemon assigns
--   a host path for your data volume. However, the data isn't guaranteed
--   to persist after the containers associated with it stop running.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources and shouldn't be provided.
[$sel:host:Volume'] :: Volume -> Maybe Host

-- | Create a value of <a>Volume</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:Volume'</a>, <a>volume_name</a> - The name of the volume.
--   Up to 255 letters (uppercase and lowercase), numbers, hyphens, and
--   underscores are allowed. This name is referenced in the
--   <tt>sourceVolume</tt> parameter of container definition
--   <tt>mountPoints</tt>.
--   
--   <a>$sel:efsVolumeConfiguration:Volume'</a>,
--   <a>volume_efsVolumeConfiguration</a> - This parameter is specified
--   when you are using an Amazon Elastic File System file system for job
--   storage. Jobs that are running on Fargate resources must specify a
--   <tt>platformVersion</tt> of at least <tt>1.4.0</tt>.
--   
--   <a>$sel:host:Volume'</a>, <a>volume_host</a> - The contents of the
--   <tt>host</tt> parameter determine whether your data volume persists on
--   the host container instance and where it is stored. If the host
--   parameter is empty, then the Docker daemon assigns a host path for
--   your data volume. However, the data isn't guaranteed to persist after
--   the containers associated with it stop running.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources and shouldn't be provided.
newVolume :: Volume

-- | The name of the volume. Up to 255 letters (uppercase and lowercase),
--   numbers, hyphens, and underscores are allowed. This name is referenced
--   in the <tt>sourceVolume</tt> parameter of container definition
--   <tt>mountPoints</tt>.
volume_name :: Lens' Volume (Maybe Text)

-- | This parameter is specified when you are using an Amazon Elastic File
--   System file system for job storage. Jobs that are running on Fargate
--   resources must specify a <tt>platformVersion</tt> of at least
--   <tt>1.4.0</tt>.
volume_efsVolumeConfiguration :: Lens' Volume (Maybe EFSVolumeConfiguration)

-- | The contents of the <tt>host</tt> parameter determine whether your
--   data volume persists on the host container instance and where it is
--   stored. If the host parameter is empty, then the Docker daemon assigns
--   a host path for your data volume. However, the data isn't guaranteed
--   to persist after the containers associated with it stop running.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources and shouldn't be provided.
volume_host :: Lens' Volume (Maybe Host)
instance GHC.Generics.Generic Network.AWS.Batch.Types.Volume.Volume
instance GHC.Show.Show Network.AWS.Batch.Types.Volume.Volume
instance GHC.Read.Read Network.AWS.Batch.Types.Volume.Volume
instance GHC.Classes.Eq Network.AWS.Batch.Types.Volume.Volume
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Batch.Types.Volume.Volume
instance Data.Hashable.Class.Hashable Network.AWS.Batch.Types.Volume.Volume
instance Control.DeepSeq.NFData Network.AWS.Batch.Types.Volume.Volume
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Batch.Types.Volume.Volume


module Network.AWS.Batch.Types.ContainerProperties

-- | Container properties are used in job definitions to describe the
--   container that's launched as part of a job.
--   
--   <i>See:</i> <a>newContainerProperties</a> smart constructor.
data ContainerProperties
ContainerProperties' :: Maybe Text -> Maybe [Text] -> Maybe [Secret] -> Maybe [KeyValuePair] -> Maybe [Ulimit] -> Maybe Text -> Maybe Bool -> Maybe Text -> Maybe [ResourceRequirement] -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe LogConfiguration -> Maybe LinuxParameters -> Maybe [MountPoint] -> Maybe FargatePlatformConfiguration -> Maybe Int -> Maybe Bool -> Maybe [Volume] -> Maybe NetworkConfiguration -> ContainerProperties

-- | The image used to start a container. This string is passed directly to
--   the Docker daemon. Images in the Docker Hub registry are available by
--   default. Other repositories are specified with <tt>
--   repository-url/image:tag </tt>. Up to 255 letters (uppercase and
--   lowercase), numbers, hyphens, underscores, colons, periods, forward
--   slashes, and number signs are allowed. This parameter maps to
--   <tt>Image</tt> in the <a>Create a container</a> section of the
--   <a>Docker Remote API</a> and the <tt>IMAGE</tt> parameter of <a>docker
--   run</a>.
--   
--   Docker image architecture must match the processor architecture of the
--   compute resources that they're scheduled on. For example, ARM-based
--   Docker images can only run on ARM-based compute resources.
--   
--   <ul>
--   <li>Images in Amazon ECR repositories use the full registry and
--   repository URI (for example,
--   <tt>012345678910.dkr.ecr.&lt;region-name&gt;.amazonaws.com/&lt;repository-name&gt;</tt>).</li>
--   <li>Images in official repositories on Docker Hub use a single name
--   (for example, <tt>ubuntu</tt> or <tt>mongo</tt>).</li>
--   <li>Images in other repositories on Docker Hub are qualified with an
--   organization name (for example,
--   <tt>amazon/amazon-ecs-agent</tt>).</li>
--   <li>Images in other online repositories are qualified further by a
--   domain name (for example, <tt>quay.io/assemblyline/ubuntu</tt>).</li>
--   </ul>
[$sel:image:ContainerProperties'] :: ContainerProperties -> Maybe Text

-- | The command that's passed to the container. This parameter maps to
--   <tt>Cmd</tt> in the <a>Create a container</a> section of the <a>Docker
--   Remote API</a> and the <tt>COMMAND</tt> parameter to <a>docker
--   run</a>. For more information, see
--   <a>https://docs.docker.com/engine/reference/builder/#cmd</a>.
[$sel:command:ContainerProperties'] :: ContainerProperties -> Maybe [Text]

-- | The secrets for the container. For more information, see <a>Specifying
--   sensitive data</a> in the <i>Batch User Guide</i>.
[$sel:secrets:ContainerProperties'] :: ContainerProperties -> Maybe [Secret]

-- | The environment variables to pass to a container. This parameter maps
--   to <tt>Env</tt> in the <a>Create a container</a> section of the
--   <a>Docker Remote API</a> and the <tt>--env</tt> option to <a>docker
--   run</a>.
--   
--   We don't recommend using plaintext environment variables for sensitive
--   information, such as credential data.
--   
--   Environment variables must not start with <tt>AWS_BATCH</tt>; this
--   naming convention is reserved for variables that are set by the Batch
--   service.
[$sel:environment:ContainerProperties'] :: ContainerProperties -> Maybe [KeyValuePair]

-- | A list of <tt>ulimits</tt> to set in the container. This parameter
--   maps to <tt>Ulimits</tt> in the <a>Create a container</a> section of
--   the <a>Docker Remote API</a> and the <tt>--ulimit</tt> option to
--   <a>docker run</a>.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources and shouldn't be provided.
[$sel:ulimits:ContainerProperties'] :: ContainerProperties -> Maybe [Ulimit]

-- | The Amazon Resource Name (ARN) of the execution role that Batch can
--   assume. For jobs that run on Fargate resources, you must provide an
--   execution role. For more information, see <a>Batch execution IAM
--   role</a> in the <i>Batch User Guide</i>.
[$sel:executionRoleArn:ContainerProperties'] :: ContainerProperties -> Maybe Text

-- | When this parameter is true, the container is given elevated
--   permissions on the host container instance (similar to the
--   <tt>root</tt> user). This parameter maps to <tt>Privileged</tt> in the
--   <a>Create a container</a> section of the <a>Docker Remote API</a> and
--   the <tt>--privileged</tt> option to <a>docker run</a>. The default
--   value is false.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources and shouldn't be provided, or specified as false.
[$sel:privileged:ContainerProperties'] :: ContainerProperties -> Maybe Bool

-- | The Amazon Resource Name (ARN) of the IAM role that the container can
--   assume for Amazon Web Services permissions. For more information, see
--   <a>IAM Roles for Tasks</a> in the <i>Amazon Elastic Container Service
--   Developer Guide</i>.
[$sel:jobRoleArn:ContainerProperties'] :: ContainerProperties -> Maybe Text

-- | The type and amount of resources to assign to a container. The
--   supported resources include <tt>GPU</tt>, <tt>MEMORY</tt>, and
--   <tt>VCPU</tt>.
[$sel:resourceRequirements:ContainerProperties'] :: ContainerProperties -> Maybe [ResourceRequirement]

-- | The instance type to use for a multi-node parallel job. All node
--   groups in a multi-node parallel job must use the same instance type.
--   
--   This parameter isn't applicable to single-node container jobs or jobs
--   that run on Fargate resources, and shouldn't be provided.
[$sel:instanceType:ContainerProperties'] :: ContainerProperties -> Maybe Text

-- | This parameter indicates the memory hard limit (in MiB) for a
--   container. If your container attempts to exceed the specified number,
--   it's terminated. You must specify at least 4 MiB of memory for a job
--   using this parameter. The memory hard limit can be specified in
--   several places. It must be specified for each node at least once.
--   
--   This parameter maps to <tt>Memory</tt> in the <a>Create a
--   container</a> section of the <a>Docker Remote API</a> and the
--   <tt>--memory</tt> option to <a>docker run</a>.
--   
--   This parameter is supported on EC2 resources but isn't supported on
--   Fargate resources. For Fargate resources, you should specify the
--   memory requirement using <tt>resourceRequirement</tt>. You can also do
--   this for EC2 resources.
--   
--   If you're trying to maximize your resource utilization by providing
--   your jobs as much memory as possible for a particular instance type,
--   see <a>Memory Management</a> in the <i>Batch User Guide</i>.
[$sel:memory:ContainerProperties'] :: ContainerProperties -> Maybe Int

-- | The user name to use inside the container. This parameter maps to
--   <tt>User</tt> in the <a>Create a container</a> section of the
--   <a>Docker Remote API</a> and the <tt>--user</tt> option to <a>docker
--   run</a>.
[$sel:user:ContainerProperties'] :: ContainerProperties -> Maybe Text

-- | The log configuration specification for the container.
--   
--   This parameter maps to <tt>LogConfig</tt> in the <a>Create a
--   container</a> section of the <a>Docker Remote API</a> and the
--   <tt>--log-driver</tt> option to <a>docker run</a>. By default,
--   containers use the same logging driver that the Docker daemon uses.
--   However the container might use a different logging driver than the
--   Docker daemon by specifying a log driver with this parameter in the
--   container definition. To use a different logging driver for a
--   container, the log system must be configured properly on the container
--   instance (or on a different log server for remote logging options).
--   For more information on the options for different supported log
--   drivers, see <a>Configure logging drivers</a> in the Docker
--   documentation.
--   
--   Batch currently supports a subset of the logging drivers available to
--   the Docker daemon (shown in the LogConfiguration data type).
--   
--   This parameter requires version 1.18 of the Docker Remote API or
--   greater on your container instance. To check the Docker Remote API
--   version on your container instance, log into your container instance
--   and run the following command: <tt>sudo docker version | grep "Server
--   API version"</tt>
--   
--   The Amazon ECS container agent running on a container instance must
--   register the logging drivers available on that instance with the
--   <tt>ECS_AVAILABLE_LOGGING_DRIVERS</tt> environment variable before
--   containers placed on that instance can use these log configuration
--   options. For more information, see <a>Amazon ECS Container Agent
--   Configuration</a> in the <i>Amazon Elastic Container Service Developer
--   Guide</i>.
[$sel:logConfiguration:ContainerProperties'] :: ContainerProperties -> Maybe LogConfiguration

-- | Linux-specific modifications that are applied to the container, such
--   as details for device mappings.
[$sel:linuxParameters:ContainerProperties'] :: ContainerProperties -> Maybe LinuxParameters

-- | The mount points for data volumes in your container. This parameter
--   maps to <tt>Volumes</tt> in the <a>Create a container</a> section of
--   the <a>Docker Remote API</a> and the <tt>--volume</tt> option to
--   <a>docker run</a>.
[$sel:mountPoints:ContainerProperties'] :: ContainerProperties -> Maybe [MountPoint]

-- | The platform configuration for jobs that are running on Fargate
--   resources. Jobs that are running on EC2 resources must not specify
--   this parameter.
[$sel:fargatePlatformConfiguration:ContainerProperties'] :: ContainerProperties -> Maybe FargatePlatformConfiguration

-- | The number of vCPUs reserved for the job. Each vCPU is equivalent to
--   1,024 CPU shares. This parameter maps to <tt>CpuShares</tt> in the
--   <a>Create a container</a> section of the <a>Docker Remote API</a> and
--   the <tt>--cpu-shares</tt> option to <a>docker run</a>. The number of
--   vCPUs must be specified but can be specified in several places. You
--   must specify it at least once for each node.
--   
--   This parameter is supported on EC2 resources but isn't supported for
--   jobs that run on Fargate resources. For these resources, use
--   <tt>resourceRequirement</tt> instead. You can use this parameter or
--   <tt>resourceRequirements</tt> structure but not both.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources and shouldn't be provided. For jobs that run on Fargate
--   resources, you must specify the vCPU requirement for the job using
--   <tt>resourceRequirements</tt>.
[$sel:vcpus:ContainerProperties'] :: ContainerProperties -> Maybe Int

-- | When this parameter is true, the container is given read-only access
--   to its root file system. This parameter maps to
--   <tt>ReadonlyRootfs</tt> in the <a>Create a container</a> section of
--   the <a>Docker Remote API</a> and the <tt>--read-only</tt> option to
--   <tt>docker run</tt>.
[$sel:readonlyRootFilesystem:ContainerProperties'] :: ContainerProperties -> Maybe Bool

-- | A list of data volumes used in a job.
[$sel:volumes:ContainerProperties'] :: ContainerProperties -> Maybe [Volume]

-- | The network configuration for jobs that are running on Fargate
--   resources. Jobs that are running on EC2 resources must not specify
--   this parameter.
[$sel:networkConfiguration:ContainerProperties'] :: ContainerProperties -> Maybe NetworkConfiguration

-- | Create a value of <a>ContainerProperties</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:image:ContainerProperties'</a>,
--   <a>containerProperties_image</a> - The image used to start a
--   container. This string is passed directly to the Docker daemon. Images
--   in the Docker Hub registry are available by default. Other
--   repositories are specified with <tt> repository-url/image:tag </tt>.
--   Up to 255 letters (uppercase and lowercase), numbers, hyphens,
--   underscores, colons, periods, forward slashes, and number signs are
--   allowed. This parameter maps to <tt>Image</tt> in the <a>Create a
--   container</a> section of the <a>Docker Remote API</a> and the
--   <tt>IMAGE</tt> parameter of <a>docker run</a>.
--   
--   Docker image architecture must match the processor architecture of the
--   compute resources that they're scheduled on. For example, ARM-based
--   Docker images can only run on ARM-based compute resources.
--   
--   <ul>
--   <li>Images in Amazon ECR repositories use the full registry and
--   repository URI (for example,
--   <tt>012345678910.dkr.ecr.&lt;region-name&gt;.amazonaws.com/&lt;repository-name&gt;</tt>).</li>
--   <li>Images in official repositories on Docker Hub use a single name
--   (for example, <tt>ubuntu</tt> or <tt>mongo</tt>).</li>
--   <li>Images in other repositories on Docker Hub are qualified with an
--   organization name (for example,
--   <tt>amazon/amazon-ecs-agent</tt>).</li>
--   <li>Images in other online repositories are qualified further by a
--   domain name (for example, <tt>quay.io/assemblyline/ubuntu</tt>).</li>
--   </ul>
--   
--   <a>$sel:command:ContainerProperties'</a>,
--   <a>containerProperties_command</a> - The command that's passed to the
--   container. This parameter maps to <tt>Cmd</tt> in the <a>Create a
--   container</a> section of the <a>Docker Remote API</a> and the
--   <tt>COMMAND</tt> parameter to <a>docker run</a>. For more information,
--   see <a>https://docs.docker.com/engine/reference/builder/#cmd</a>.
--   
--   <a>$sel:secrets:ContainerProperties'</a>,
--   <a>containerProperties_secrets</a> - The secrets for the container.
--   For more information, see <a>Specifying sensitive data</a> in the
--   <i>Batch User Guide</i>.
--   
--   <a>$sel:environment:ContainerProperties'</a>,
--   <a>containerProperties_environment</a> - The environment variables to
--   pass to a container. This parameter maps to <tt>Env</tt> in the
--   <a>Create a container</a> section of the <a>Docker Remote API</a> and
--   the <tt>--env</tt> option to <a>docker run</a>.
--   
--   We don't recommend using plaintext environment variables for sensitive
--   information, such as credential data.
--   
--   Environment variables must not start with <tt>AWS_BATCH</tt>; this
--   naming convention is reserved for variables that are set by the Batch
--   service.
--   
--   <a>$sel:ulimits:ContainerProperties'</a>,
--   <a>containerProperties_ulimits</a> - A list of <tt>ulimits</tt> to set
--   in the container. This parameter maps to <tt>Ulimits</tt> in the
--   <a>Create a container</a> section of the <a>Docker Remote API</a> and
--   the <tt>--ulimit</tt> option to <a>docker run</a>.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources and shouldn't be provided.
--   
--   <a>$sel:executionRoleArn:ContainerProperties'</a>,
--   <a>containerProperties_executionRoleArn</a> - The Amazon Resource Name
--   (ARN) of the execution role that Batch can assume. For jobs that run
--   on Fargate resources, you must provide an execution role. For more
--   information, see <a>Batch execution IAM role</a> in the <i>Batch User
--   Guide</i>.
--   
--   <a>$sel:privileged:ContainerProperties'</a>,
--   <a>containerProperties_privileged</a> - When this parameter is true,
--   the container is given elevated permissions on the host container
--   instance (similar to the <tt>root</tt> user). This parameter maps to
--   <tt>Privileged</tt> in the <a>Create a container</a> section of the
--   <a>Docker Remote API</a> and the <tt>--privileged</tt> option to
--   <a>docker run</a>. The default value is false.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources and shouldn't be provided, or specified as false.
--   
--   <a>$sel:jobRoleArn:ContainerProperties'</a>,
--   <a>containerProperties_jobRoleArn</a> - The Amazon Resource Name (ARN)
--   of the IAM role that the container can assume for Amazon Web Services
--   permissions. For more information, see <a>IAM Roles for Tasks</a> in
--   the <i>Amazon Elastic Container Service Developer Guide</i>.
--   
--   <a>$sel:resourceRequirements:ContainerProperties'</a>,
--   <a>containerProperties_resourceRequirements</a> - The type and amount
--   of resources to assign to a container. The supported resources include
--   <tt>GPU</tt>, <tt>MEMORY</tt>, and <tt>VCPU</tt>.
--   
--   <a>$sel:instanceType:ContainerProperties'</a>,
--   <a>containerProperties_instanceType</a> - The instance type to use for
--   a multi-node parallel job. All node groups in a multi-node parallel
--   job must use the same instance type.
--   
--   This parameter isn't applicable to single-node container jobs or jobs
--   that run on Fargate resources, and shouldn't be provided.
--   
--   <a>$sel:memory:ContainerProperties'</a>,
--   <a>containerProperties_memory</a> - This parameter indicates the
--   memory hard limit (in MiB) for a container. If your container attempts
--   to exceed the specified number, it's terminated. You must specify at
--   least 4 MiB of memory for a job using this parameter. The memory hard
--   limit can be specified in several places. It must be specified for
--   each node at least once.
--   
--   This parameter maps to <tt>Memory</tt> in the <a>Create a
--   container</a> section of the <a>Docker Remote API</a> and the
--   <tt>--memory</tt> option to <a>docker run</a>.
--   
--   This parameter is supported on EC2 resources but isn't supported on
--   Fargate resources. For Fargate resources, you should specify the
--   memory requirement using <tt>resourceRequirement</tt>. You can also do
--   this for EC2 resources.
--   
--   If you're trying to maximize your resource utilization by providing
--   your jobs as much memory as possible for a particular instance type,
--   see <a>Memory Management</a> in the <i>Batch User Guide</i>.
--   
--   <a>$sel:user:ContainerProperties'</a>, <a>containerProperties_user</a>
--   - The user name to use inside the container. This parameter maps to
--   <tt>User</tt> in the <a>Create a container</a> section of the
--   <a>Docker Remote API</a> and the <tt>--user</tt> option to <a>docker
--   run</a>.
--   
--   <a>$sel:logConfiguration:ContainerProperties'</a>,
--   <a>containerProperties_logConfiguration</a> - The log configuration
--   specification for the container.
--   
--   This parameter maps to <tt>LogConfig</tt> in the <a>Create a
--   container</a> section of the <a>Docker Remote API</a> and the
--   <tt>--log-driver</tt> option to <a>docker run</a>. By default,
--   containers use the same logging driver that the Docker daemon uses.
--   However the container might use a different logging driver than the
--   Docker daemon by specifying a log driver with this parameter in the
--   container definition. To use a different logging driver for a
--   container, the log system must be configured properly on the container
--   instance (or on a different log server for remote logging options).
--   For more information on the options for different supported log
--   drivers, see <a>Configure logging drivers</a> in the Docker
--   documentation.
--   
--   Batch currently supports a subset of the logging drivers available to
--   the Docker daemon (shown in the LogConfiguration data type).
--   
--   This parameter requires version 1.18 of the Docker Remote API or
--   greater on your container instance. To check the Docker Remote API
--   version on your container instance, log into your container instance
--   and run the following command: <tt>sudo docker version | grep "Server
--   API version"</tt>
--   
--   The Amazon ECS container agent running on a container instance must
--   register the logging drivers available on that instance with the
--   <tt>ECS_AVAILABLE_LOGGING_DRIVERS</tt> environment variable before
--   containers placed on that instance can use these log configuration
--   options. For more information, see <a>Amazon ECS Container Agent
--   Configuration</a> in the <i>Amazon Elastic Container Service Developer
--   Guide</i>.
--   
--   <a>$sel:linuxParameters:ContainerProperties'</a>,
--   <a>containerProperties_linuxParameters</a> - Linux-specific
--   modifications that are applied to the container, such as details for
--   device mappings.
--   
--   <a>$sel:mountPoints:ContainerProperties'</a>,
--   <a>containerProperties_mountPoints</a> - The mount points for data
--   volumes in your container. This parameter maps to <tt>Volumes</tt> in
--   the <a>Create a container</a> section of the <a>Docker Remote API</a>
--   and the <tt>--volume</tt> option to <a>docker run</a>.
--   
--   <a>$sel:fargatePlatformConfiguration:ContainerProperties'</a>,
--   <a>containerProperties_fargatePlatformConfiguration</a> - The platform
--   configuration for jobs that are running on Fargate resources. Jobs
--   that are running on EC2 resources must not specify this parameter.
--   
--   <a>$sel:vcpus:ContainerProperties'</a>,
--   <a>containerProperties_vcpus</a> - The number of vCPUs reserved for
--   the job. Each vCPU is equivalent to 1,024 CPU shares. This parameter
--   maps to <tt>CpuShares</tt> in the <a>Create a container</a> section of
--   the <a>Docker Remote API</a> and the <tt>--cpu-shares</tt> option to
--   <a>docker run</a>. The number of vCPUs must be specified but can be
--   specified in several places. You must specify it at least once for
--   each node.
--   
--   This parameter is supported on EC2 resources but isn't supported for
--   jobs that run on Fargate resources. For these resources, use
--   <tt>resourceRequirement</tt> instead. You can use this parameter or
--   <tt>resourceRequirements</tt> structure but not both.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources and shouldn't be provided. For jobs that run on Fargate
--   resources, you must specify the vCPU requirement for the job using
--   <tt>resourceRequirements</tt>.
--   
--   <a>$sel:readonlyRootFilesystem:ContainerProperties'</a>,
--   <a>containerProperties_readonlyRootFilesystem</a> - When this
--   parameter is true, the container is given read-only access to its root
--   file system. This parameter maps to <tt>ReadonlyRootfs</tt> in the
--   <a>Create a container</a> section of the <a>Docker Remote API</a> and
--   the <tt>--read-only</tt> option to <tt>docker run</tt>.
--   
--   <a>$sel:volumes:ContainerProperties'</a>,
--   <a>containerProperties_volumes</a> - A list of data volumes used in a
--   job.
--   
--   <a>$sel:networkConfiguration:ContainerProperties'</a>,
--   <a>containerProperties_networkConfiguration</a> - The network
--   configuration for jobs that are running on Fargate resources. Jobs
--   that are running on EC2 resources must not specify this parameter.
newContainerProperties :: ContainerProperties

-- | The image used to start a container. This string is passed directly to
--   the Docker daemon. Images in the Docker Hub registry are available by
--   default. Other repositories are specified with <tt>
--   repository-url/image:tag </tt>. Up to 255 letters (uppercase and
--   lowercase), numbers, hyphens, underscores, colons, periods, forward
--   slashes, and number signs are allowed. This parameter maps to
--   <tt>Image</tt> in the <a>Create a container</a> section of the
--   <a>Docker Remote API</a> and the <tt>IMAGE</tt> parameter of <a>docker
--   run</a>.
--   
--   Docker image architecture must match the processor architecture of the
--   compute resources that they're scheduled on. For example, ARM-based
--   Docker images can only run on ARM-based compute resources.
--   
--   <ul>
--   <li>Images in Amazon ECR repositories use the full registry and
--   repository URI (for example,
--   <tt>012345678910.dkr.ecr.&lt;region-name&gt;.amazonaws.com/&lt;repository-name&gt;</tt>).</li>
--   <li>Images in official repositories on Docker Hub use a single name
--   (for example, <tt>ubuntu</tt> or <tt>mongo</tt>).</li>
--   <li>Images in other repositories on Docker Hub are qualified with an
--   organization name (for example,
--   <tt>amazon/amazon-ecs-agent</tt>).</li>
--   <li>Images in other online repositories are qualified further by a
--   domain name (for example, <tt>quay.io/assemblyline/ubuntu</tt>).</li>
--   </ul>
containerProperties_image :: Lens' ContainerProperties (Maybe Text)

-- | The command that's passed to the container. This parameter maps to
--   <tt>Cmd</tt> in the <a>Create a container</a> section of the <a>Docker
--   Remote API</a> and the <tt>COMMAND</tt> parameter to <a>docker
--   run</a>. For more information, see
--   <a>https://docs.docker.com/engine/reference/builder/#cmd</a>.
containerProperties_command :: Lens' ContainerProperties (Maybe [Text])

-- | The secrets for the container. For more information, see <a>Specifying
--   sensitive data</a> in the <i>Batch User Guide</i>.
containerProperties_secrets :: Lens' ContainerProperties (Maybe [Secret])

-- | The environment variables to pass to a container. This parameter maps
--   to <tt>Env</tt> in the <a>Create a container</a> section of the
--   <a>Docker Remote API</a> and the <tt>--env</tt> option to <a>docker
--   run</a>.
--   
--   We don't recommend using plaintext environment variables for sensitive
--   information, such as credential data.
--   
--   Environment variables must not start with <tt>AWS_BATCH</tt>; this
--   naming convention is reserved for variables that are set by the Batch
--   service.
containerProperties_environment :: Lens' ContainerProperties (Maybe [KeyValuePair])

-- | A list of <tt>ulimits</tt> to set in the container. This parameter
--   maps to <tt>Ulimits</tt> in the <a>Create a container</a> section of
--   the <a>Docker Remote API</a> and the <tt>--ulimit</tt> option to
--   <a>docker run</a>.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources and shouldn't be provided.
containerProperties_ulimits :: Lens' ContainerProperties (Maybe [Ulimit])

-- | The Amazon Resource Name (ARN) of the execution role that Batch can
--   assume. For jobs that run on Fargate resources, you must provide an
--   execution role. For more information, see <a>Batch execution IAM
--   role</a> in the <i>Batch User Guide</i>.
containerProperties_executionRoleArn :: Lens' ContainerProperties (Maybe Text)

-- | When this parameter is true, the container is given elevated
--   permissions on the host container instance (similar to the
--   <tt>root</tt> user). This parameter maps to <tt>Privileged</tt> in the
--   <a>Create a container</a> section of the <a>Docker Remote API</a> and
--   the <tt>--privileged</tt> option to <a>docker run</a>. The default
--   value is false.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources and shouldn't be provided, or specified as false.
containerProperties_privileged :: Lens' ContainerProperties (Maybe Bool)

-- | The Amazon Resource Name (ARN) of the IAM role that the container can
--   assume for Amazon Web Services permissions. For more information, see
--   <a>IAM Roles for Tasks</a> in the <i>Amazon Elastic Container Service
--   Developer Guide</i>.
containerProperties_jobRoleArn :: Lens' ContainerProperties (Maybe Text)

-- | The type and amount of resources to assign to a container. The
--   supported resources include <tt>GPU</tt>, <tt>MEMORY</tt>, and
--   <tt>VCPU</tt>.
containerProperties_resourceRequirements :: Lens' ContainerProperties (Maybe [ResourceRequirement])

-- | The instance type to use for a multi-node parallel job. All node
--   groups in a multi-node parallel job must use the same instance type.
--   
--   This parameter isn't applicable to single-node container jobs or jobs
--   that run on Fargate resources, and shouldn't be provided.
containerProperties_instanceType :: Lens' ContainerProperties (Maybe Text)

-- | This parameter indicates the memory hard limit (in MiB) for a
--   container. If your container attempts to exceed the specified number,
--   it's terminated. You must specify at least 4 MiB of memory for a job
--   using this parameter. The memory hard limit can be specified in
--   several places. It must be specified for each node at least once.
--   
--   This parameter maps to <tt>Memory</tt> in the <a>Create a
--   container</a> section of the <a>Docker Remote API</a> and the
--   <tt>--memory</tt> option to <a>docker run</a>.
--   
--   This parameter is supported on EC2 resources but isn't supported on
--   Fargate resources. For Fargate resources, you should specify the
--   memory requirement using <tt>resourceRequirement</tt>. You can also do
--   this for EC2 resources.
--   
--   If you're trying to maximize your resource utilization by providing
--   your jobs as much memory as possible for a particular instance type,
--   see <a>Memory Management</a> in the <i>Batch User Guide</i>.
containerProperties_memory :: Lens' ContainerProperties (Maybe Int)

-- | The user name to use inside the container. This parameter maps to
--   <tt>User</tt> in the <a>Create a container</a> section of the
--   <a>Docker Remote API</a> and the <tt>--user</tt> option to <a>docker
--   run</a>.
containerProperties_user :: Lens' ContainerProperties (Maybe Text)

-- | The log configuration specification for the container.
--   
--   This parameter maps to <tt>LogConfig</tt> in the <a>Create a
--   container</a> section of the <a>Docker Remote API</a> and the
--   <tt>--log-driver</tt> option to <a>docker run</a>. By default,
--   containers use the same logging driver that the Docker daemon uses.
--   However the container might use a different logging driver than the
--   Docker daemon by specifying a log driver with this parameter in the
--   container definition. To use a different logging driver for a
--   container, the log system must be configured properly on the container
--   instance (or on a different log server for remote logging options).
--   For more information on the options for different supported log
--   drivers, see <a>Configure logging drivers</a> in the Docker
--   documentation.
--   
--   Batch currently supports a subset of the logging drivers available to
--   the Docker daemon (shown in the LogConfiguration data type).
--   
--   This parameter requires version 1.18 of the Docker Remote API or
--   greater on your container instance. To check the Docker Remote API
--   version on your container instance, log into your container instance
--   and run the following command: <tt>sudo docker version | grep "Server
--   API version"</tt>
--   
--   The Amazon ECS container agent running on a container instance must
--   register the logging drivers available on that instance with the
--   <tt>ECS_AVAILABLE_LOGGING_DRIVERS</tt> environment variable before
--   containers placed on that instance can use these log configuration
--   options. For more information, see <a>Amazon ECS Container Agent
--   Configuration</a> in the <i>Amazon Elastic Container Service Developer
--   Guide</i>.
containerProperties_logConfiguration :: Lens' ContainerProperties (Maybe LogConfiguration)

-- | Linux-specific modifications that are applied to the container, such
--   as details for device mappings.
containerProperties_linuxParameters :: Lens' ContainerProperties (Maybe LinuxParameters)

-- | The mount points for data volumes in your container. This parameter
--   maps to <tt>Volumes</tt> in the <a>Create a container</a> section of
--   the <a>Docker Remote API</a> and the <tt>--volume</tt> option to
--   <a>docker run</a>.
containerProperties_mountPoints :: Lens' ContainerProperties (Maybe [MountPoint])

-- | The platform configuration for jobs that are running on Fargate
--   resources. Jobs that are running on EC2 resources must not specify
--   this parameter.
containerProperties_fargatePlatformConfiguration :: Lens' ContainerProperties (Maybe FargatePlatformConfiguration)

-- | The number of vCPUs reserved for the job. Each vCPU is equivalent to
--   1,024 CPU shares. This parameter maps to <tt>CpuShares</tt> in the
--   <a>Create a container</a> section of the <a>Docker Remote API</a> and
--   the <tt>--cpu-shares</tt> option to <a>docker run</a>. The number of
--   vCPUs must be specified but can be specified in several places. You
--   must specify it at least once for each node.
--   
--   This parameter is supported on EC2 resources but isn't supported for
--   jobs that run on Fargate resources. For these resources, use
--   <tt>resourceRequirement</tt> instead. You can use this parameter or
--   <tt>resourceRequirements</tt> structure but not both.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources and shouldn't be provided. For jobs that run on Fargate
--   resources, you must specify the vCPU requirement for the job using
--   <tt>resourceRequirements</tt>.
containerProperties_vcpus :: Lens' ContainerProperties (Maybe Int)

-- | When this parameter is true, the container is given read-only access
--   to its root file system. This parameter maps to
--   <tt>ReadonlyRootfs</tt> in the <a>Create a container</a> section of
--   the <a>Docker Remote API</a> and the <tt>--read-only</tt> option to
--   <tt>docker run</tt>.
containerProperties_readonlyRootFilesystem :: Lens' ContainerProperties (Maybe Bool)

-- | A list of data volumes used in a job.
containerProperties_volumes :: Lens' ContainerProperties (Maybe [Volume])

-- | The network configuration for jobs that are running on Fargate
--   resources. Jobs that are running on EC2 resources must not specify
--   this parameter.
containerProperties_networkConfiguration :: Lens' ContainerProperties (Maybe NetworkConfiguration)
instance GHC.Generics.Generic Network.AWS.Batch.Types.ContainerProperties.ContainerProperties
instance GHC.Show.Show Network.AWS.Batch.Types.ContainerProperties.ContainerProperties
instance GHC.Read.Read Network.AWS.Batch.Types.ContainerProperties.ContainerProperties
instance GHC.Classes.Eq Network.AWS.Batch.Types.ContainerProperties.ContainerProperties
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Batch.Types.ContainerProperties.ContainerProperties
instance Data.Hashable.Class.Hashable Network.AWS.Batch.Types.ContainerProperties.ContainerProperties
instance Control.DeepSeq.NFData Network.AWS.Batch.Types.ContainerProperties.ContainerProperties
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Batch.Types.ContainerProperties.ContainerProperties


module Network.AWS.Batch.Types.NodeRangeProperty

-- | An object representing the properties of the node range for a
--   multi-node parallel job.
--   
--   <i>See:</i> <a>newNodeRangeProperty</a> smart constructor.
data NodeRangeProperty
NodeRangeProperty' :: Maybe ContainerProperties -> Text -> NodeRangeProperty

-- | The container details for the node range.
[$sel:container:NodeRangeProperty'] :: NodeRangeProperty -> Maybe ContainerProperties

-- | The range of nodes, using node index values. A range of <tt>0:3</tt>
--   indicates nodes with index values of <tt>0</tt> through <tt>3</tt>. If
--   the starting range value is omitted (<tt>:n</tt>), then <tt>0</tt> is
--   used to start the range. If the ending range value is omitted
--   (<tt>n:</tt>), then the highest possible node index is used to end the
--   range. Your accumulative node ranges must account for all nodes
--   (<tt>0:n</tt>). You can nest node ranges, for example <tt>0:10</tt>
--   and <tt>4:5</tt>, in which case the <tt>4:5</tt> range properties
--   override the <tt>0:10</tt> properties.
[$sel:targetNodes:NodeRangeProperty'] :: NodeRangeProperty -> Text

-- | Create a value of <a>NodeRangeProperty</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:container:NodeRangeProperty'</a>,
--   <a>nodeRangeProperty_container</a> - The container details for the
--   node range.
--   
--   <a>$sel:targetNodes:NodeRangeProperty'</a>,
--   <a>nodeRangeProperty_targetNodes</a> - The range of nodes, using node
--   index values. A range of <tt>0:3</tt> indicates nodes with index
--   values of <tt>0</tt> through <tt>3</tt>. If the starting range value
--   is omitted (<tt>:n</tt>), then <tt>0</tt> is used to start the range.
--   If the ending range value is omitted (<tt>n:</tt>), then the highest
--   possible node index is used to end the range. Your accumulative node
--   ranges must account for all nodes (<tt>0:n</tt>). You can nest node
--   ranges, for example <tt>0:10</tt> and <tt>4:5</tt>, in which case the
--   <tt>4:5</tt> range properties override the <tt>0:10</tt> properties.
newNodeRangeProperty :: Text -> NodeRangeProperty

-- | The container details for the node range.
nodeRangeProperty_container :: Lens' NodeRangeProperty (Maybe ContainerProperties)

-- | The range of nodes, using node index values. A range of <tt>0:3</tt>
--   indicates nodes with index values of <tt>0</tt> through <tt>3</tt>. If
--   the starting range value is omitted (<tt>:n</tt>), then <tt>0</tt> is
--   used to start the range. If the ending range value is omitted
--   (<tt>n:</tt>), then the highest possible node index is used to end the
--   range. Your accumulative node ranges must account for all nodes
--   (<tt>0:n</tt>). You can nest node ranges, for example <tt>0:10</tt>
--   and <tt>4:5</tt>, in which case the <tt>4:5</tt> range properties
--   override the <tt>0:10</tt> properties.
nodeRangeProperty_targetNodes :: Lens' NodeRangeProperty Text
instance GHC.Generics.Generic Network.AWS.Batch.Types.NodeRangeProperty.NodeRangeProperty
instance GHC.Show.Show Network.AWS.Batch.Types.NodeRangeProperty.NodeRangeProperty
instance GHC.Read.Read Network.AWS.Batch.Types.NodeRangeProperty.NodeRangeProperty
instance GHC.Classes.Eq Network.AWS.Batch.Types.NodeRangeProperty.NodeRangeProperty
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Batch.Types.NodeRangeProperty.NodeRangeProperty
instance Data.Hashable.Class.Hashable Network.AWS.Batch.Types.NodeRangeProperty.NodeRangeProperty
instance Control.DeepSeq.NFData Network.AWS.Batch.Types.NodeRangeProperty.NodeRangeProperty
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Batch.Types.NodeRangeProperty.NodeRangeProperty


module Network.AWS.Batch.Types.NodeProperties

-- | An object representing the node properties of a multi-node parallel
--   job.
--   
--   <i>See:</i> <a>newNodeProperties</a> smart constructor.
data NodeProperties
NodeProperties' :: Int -> Int -> [NodeRangeProperty] -> NodeProperties

-- | The number of nodes associated with a multi-node parallel job.
[$sel:numNodes:NodeProperties'] :: NodeProperties -> Int

-- | Specifies the node index for the main node of a multi-node parallel
--   job. This node index value must be fewer than the number of nodes.
[$sel:mainNode:NodeProperties'] :: NodeProperties -> Int

-- | A list of node ranges and their properties associated with a
--   multi-node parallel job.
[$sel:nodeRangeProperties:NodeProperties'] :: NodeProperties -> [NodeRangeProperty]

-- | Create a value of <a>NodeProperties</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:numNodes:NodeProperties'</a>, <a>nodeProperties_numNodes</a> -
--   The number of nodes associated with a multi-node parallel job.
--   
--   <a>$sel:mainNode:NodeProperties'</a>, <a>nodeProperties_mainNode</a> -
--   Specifies the node index for the main node of a multi-node parallel
--   job. This node index value must be fewer than the number of nodes.
--   
--   <a>$sel:nodeRangeProperties:NodeProperties'</a>,
--   <a>nodeProperties_nodeRangeProperties</a> - A list of node ranges and
--   their properties associated with a multi-node parallel job.
newNodeProperties :: Int -> Int -> NodeProperties

-- | The number of nodes associated with a multi-node parallel job.
nodeProperties_numNodes :: Lens' NodeProperties Int

-- | Specifies the node index for the main node of a multi-node parallel
--   job. This node index value must be fewer than the number of nodes.
nodeProperties_mainNode :: Lens' NodeProperties Int

-- | A list of node ranges and their properties associated with a
--   multi-node parallel job.
nodeProperties_nodeRangeProperties :: Lens' NodeProperties [NodeRangeProperty]
instance GHC.Generics.Generic Network.AWS.Batch.Types.NodeProperties.NodeProperties
instance GHC.Show.Show Network.AWS.Batch.Types.NodeProperties.NodeProperties
instance GHC.Read.Read Network.AWS.Batch.Types.NodeProperties.NodeProperties
instance GHC.Classes.Eq Network.AWS.Batch.Types.NodeProperties.NodeProperties
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Batch.Types.NodeProperties.NodeProperties
instance Data.Hashable.Class.Hashable Network.AWS.Batch.Types.NodeProperties.NodeProperties
instance Control.DeepSeq.NFData Network.AWS.Batch.Types.NodeProperties.NodeProperties
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Batch.Types.NodeProperties.NodeProperties


module Network.AWS.Batch.Types.JobDefinition

-- | An object representing an Batch job definition.
--   
--   <i>See:</i> <a>newJobDefinition</a> smart constructor.
data JobDefinition
JobDefinition' :: Maybe Text -> Maybe Bool -> Maybe RetryStrategy -> Maybe [PlatformCapability] -> Maybe (HashMap Text Text) -> Maybe JobTimeout -> Maybe ContainerProperties -> Maybe NodeProperties -> Maybe (HashMap Text Text) -> Text -> Text -> Int -> Text -> JobDefinition

-- | The status of the job definition.
[$sel:status:JobDefinition'] :: JobDefinition -> Maybe Text

-- | Specifies whether to propagate the tags from the job or job definition
--   to the corresponding Amazon ECS task. If no value is specified, the
--   tags aren't propagated. Tags can only be propagated to the tasks
--   during task creation. For tags with the same name, job tags are given
--   priority over job definitions tags. If the total number of combined
--   tags from the job and job definition is over 50, the job is moved to
--   the <tt>FAILED</tt> state.
[$sel:propagateTags:JobDefinition'] :: JobDefinition -> Maybe Bool

-- | The retry strategy to use for failed jobs that are submitted with this
--   job definition.
[$sel:retryStrategy:JobDefinition'] :: JobDefinition -> Maybe RetryStrategy

-- | The platform capabilities required by the job definition. If no value
--   is specified, it defaults to <tt>EC2</tt>. Jobs run on Fargate
--   resources specify <tt>FARGATE</tt>.
[$sel:platformCapabilities:JobDefinition'] :: JobDefinition -> Maybe [PlatformCapability]

-- | Default parameters or parameter substitution placeholders that are set
--   in the job definition. Parameters are specified as a key-value pair
--   mapping. Parameters in a <tt>SubmitJob</tt> request override any
--   corresponding parameter defaults from the job definition. For more
--   information about specifying parameters, see <a>Job Definition
--   Parameters</a> in the <i>Batch User Guide</i>.
[$sel:parameters:JobDefinition'] :: JobDefinition -> Maybe (HashMap Text Text)

-- | The timeout configuration for jobs that are submitted with this job
--   definition. You can specify a timeout duration after which Batch
--   terminates your jobs if they haven't finished.
[$sel:timeout:JobDefinition'] :: JobDefinition -> Maybe JobTimeout

-- | An object with various properties specific to container-based jobs.
[$sel:containerProperties:JobDefinition'] :: JobDefinition -> Maybe ContainerProperties

-- | An object with various properties specific to multi-node parallel
--   jobs.
--   
--   If the job runs on Fargate resources, then you must not specify
--   <tt>nodeProperties</tt>; use <tt>containerProperties</tt> instead.
[$sel:nodeProperties:JobDefinition'] :: JobDefinition -> Maybe NodeProperties

-- | The tags applied to the job definition.
[$sel:tags:JobDefinition'] :: JobDefinition -> Maybe (HashMap Text Text)

-- | The name of the job definition.
[$sel:jobDefinitionName:JobDefinition'] :: JobDefinition -> Text

-- | The Amazon Resource Name (ARN) for the job definition.
[$sel:jobDefinitionArn:JobDefinition'] :: JobDefinition -> Text

-- | The revision of the job definition.
[$sel:revision:JobDefinition'] :: JobDefinition -> Int

-- | The type of job definition. If the job is run on Fargate resources,
--   then <tt>multinode</tt> isn't supported. For more information about
--   multi-node parallel jobs, see <a>Creating a multi-node parallel job
--   definition</a> in the <i>Batch User Guide</i>.
[$sel:type':JobDefinition'] :: JobDefinition -> Text

-- | Create a value of <a>JobDefinition</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:JobDefinition'</a>, <a>jobDefinition_status</a> - The
--   status of the job definition.
--   
--   <a>$sel:propagateTags:JobDefinition'</a>,
--   <a>jobDefinition_propagateTags</a> - Specifies whether to propagate
--   the tags from the job or job definition to the corresponding Amazon
--   ECS task. If no value is specified, the tags aren't propagated. Tags
--   can only be propagated to the tasks during task creation. For tags
--   with the same name, job tags are given priority over job definitions
--   tags. If the total number of combined tags from the job and job
--   definition is over 50, the job is moved to the <tt>FAILED</tt> state.
--   
--   <a>$sel:retryStrategy:JobDefinition'</a>,
--   <a>jobDefinition_retryStrategy</a> - The retry strategy to use for
--   failed jobs that are submitted with this job definition.
--   
--   <a>$sel:platformCapabilities:JobDefinition'</a>,
--   <a>jobDefinition_platformCapabilities</a> - The platform capabilities
--   required by the job definition. If no value is specified, it defaults
--   to <tt>EC2</tt>. Jobs run on Fargate resources specify
--   <tt>FARGATE</tt>.
--   
--   <a>$sel:parameters:JobDefinition'</a>, <a>jobDefinition_parameters</a>
--   - Default parameters or parameter substitution placeholders that are
--   set in the job definition. Parameters are specified as a key-value
--   pair mapping. Parameters in a <tt>SubmitJob</tt> request override any
--   corresponding parameter defaults from the job definition. For more
--   information about specifying parameters, see <a>Job Definition
--   Parameters</a> in the <i>Batch User Guide</i>.
--   
--   <a>$sel:timeout:JobDefinition'</a>, <a>jobDefinition_timeout</a> - The
--   timeout configuration for jobs that are submitted with this job
--   definition. You can specify a timeout duration after which Batch
--   terminates your jobs if they haven't finished.
--   
--   <a>$sel:containerProperties:JobDefinition'</a>,
--   <a>jobDefinition_containerProperties</a> - An object with various
--   properties specific to container-based jobs.
--   
--   <a>$sel:nodeProperties:JobDefinition'</a>,
--   <a>jobDefinition_nodeProperties</a> - An object with various
--   properties specific to multi-node parallel jobs.
--   
--   If the job runs on Fargate resources, then you must not specify
--   <tt>nodeProperties</tt>; use <tt>containerProperties</tt> instead.
--   
--   <a>$sel:tags:JobDefinition'</a>, <a>jobDefinition_tags</a> - The tags
--   applied to the job definition.
--   
--   <a>$sel:jobDefinitionName:JobDefinition'</a>,
--   <a>jobDefinition_jobDefinitionName</a> - The name of the job
--   definition.
--   
--   <a>$sel:jobDefinitionArn:JobDefinition'</a>,
--   <a>jobDefinition_jobDefinitionArn</a> - The Amazon Resource Name (ARN)
--   for the job definition.
--   
--   <a>$sel:revision:JobDefinition'</a>, <a>jobDefinition_revision</a> -
--   The revision of the job definition.
--   
--   <a>$sel:type':JobDefinition'</a>, <a>jobDefinition_type</a> - The type
--   of job definition. If the job is run on Fargate resources, then
--   <tt>multinode</tt> isn't supported. For more information about
--   multi-node parallel jobs, see <a>Creating a multi-node parallel job
--   definition</a> in the <i>Batch User Guide</i>.
newJobDefinition :: Text -> Text -> Int -> Text -> JobDefinition

-- | The status of the job definition.
jobDefinition_status :: Lens' JobDefinition (Maybe Text)

-- | Specifies whether to propagate the tags from the job or job definition
--   to the corresponding Amazon ECS task. If no value is specified, the
--   tags aren't propagated. Tags can only be propagated to the tasks
--   during task creation. For tags with the same name, job tags are given
--   priority over job definitions tags. If the total number of combined
--   tags from the job and job definition is over 50, the job is moved to
--   the <tt>FAILED</tt> state.
jobDefinition_propagateTags :: Lens' JobDefinition (Maybe Bool)

-- | The retry strategy to use for failed jobs that are submitted with this
--   job definition.
jobDefinition_retryStrategy :: Lens' JobDefinition (Maybe RetryStrategy)

-- | The platform capabilities required by the job definition. If no value
--   is specified, it defaults to <tt>EC2</tt>. Jobs run on Fargate
--   resources specify <tt>FARGATE</tt>.
jobDefinition_platformCapabilities :: Lens' JobDefinition (Maybe [PlatformCapability])

-- | Default parameters or parameter substitution placeholders that are set
--   in the job definition. Parameters are specified as a key-value pair
--   mapping. Parameters in a <tt>SubmitJob</tt> request override any
--   corresponding parameter defaults from the job definition. For more
--   information about specifying parameters, see <a>Job Definition
--   Parameters</a> in the <i>Batch User Guide</i>.
jobDefinition_parameters :: Lens' JobDefinition (Maybe (HashMap Text Text))

-- | The timeout configuration for jobs that are submitted with this job
--   definition. You can specify a timeout duration after which Batch
--   terminates your jobs if they haven't finished.
jobDefinition_timeout :: Lens' JobDefinition (Maybe JobTimeout)

-- | An object with various properties specific to container-based jobs.
jobDefinition_containerProperties :: Lens' JobDefinition (Maybe ContainerProperties)

-- | An object with various properties specific to multi-node parallel
--   jobs.
--   
--   If the job runs on Fargate resources, then you must not specify
--   <tt>nodeProperties</tt>; use <tt>containerProperties</tt> instead.
jobDefinition_nodeProperties :: Lens' JobDefinition (Maybe NodeProperties)

-- | The tags applied to the job definition.
jobDefinition_tags :: Lens' JobDefinition (Maybe (HashMap Text Text))

-- | The name of the job definition.
jobDefinition_jobDefinitionName :: Lens' JobDefinition Text

-- | The Amazon Resource Name (ARN) for the job definition.
jobDefinition_jobDefinitionArn :: Lens' JobDefinition Text

-- | The revision of the job definition.
jobDefinition_revision :: Lens' JobDefinition Int

-- | The type of job definition. If the job is run on Fargate resources,
--   then <tt>multinode</tt> isn't supported. For more information about
--   multi-node parallel jobs, see <a>Creating a multi-node parallel job
--   definition</a> in the <i>Batch User Guide</i>.
jobDefinition_type :: Lens' JobDefinition Text
instance GHC.Generics.Generic Network.AWS.Batch.Types.JobDefinition.JobDefinition
instance GHC.Show.Show Network.AWS.Batch.Types.JobDefinition.JobDefinition
instance GHC.Read.Read Network.AWS.Batch.Types.JobDefinition.JobDefinition
instance GHC.Classes.Eq Network.AWS.Batch.Types.JobDefinition.JobDefinition
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Batch.Types.JobDefinition.JobDefinition
instance Data.Hashable.Class.Hashable Network.AWS.Batch.Types.JobDefinition.JobDefinition
instance Control.DeepSeq.NFData Network.AWS.Batch.Types.JobDefinition.JobDefinition


module Network.AWS.Batch.Types.ContainerDetail

-- | An object representing the details of a container that's part of a
--   job.
--   
--   <i>See:</i> <a>newContainerDetail</a> smart constructor.
data ContainerDetail
ContainerDetail' :: Maybe Text -> Maybe [Text] -> Maybe [Secret] -> Maybe [KeyValuePair] -> Maybe [NetworkInterface] -> Maybe Text -> Maybe [Ulimit] -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe Text -> Maybe [ResourceRequirement] -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe LogConfiguration -> Maybe LinuxParameters -> Maybe Text -> Maybe Text -> Maybe [MountPoint] -> Maybe Int -> Maybe FargatePlatformConfiguration -> Maybe Int -> Maybe Bool -> Maybe [Volume] -> Maybe NetworkConfiguration -> ContainerDetail

-- | The image used to start the container.
[$sel:image:ContainerDetail'] :: ContainerDetail -> Maybe Text

-- | The command that's passed to the container.
[$sel:command:ContainerDetail'] :: ContainerDetail -> Maybe [Text]

-- | The secrets to pass to the container. For more information, see
--   <a>Specifying sensitive data</a> in the <i>Batch User Guide</i>.
[$sel:secrets:ContainerDetail'] :: ContainerDetail -> Maybe [Secret]

-- | The environment variables to pass to a container.
--   
--   Environment variables must not start with <tt>AWS_BATCH</tt>; this
--   naming convention is reserved for variables that are set by the Batch
--   service.
[$sel:environment:ContainerDetail'] :: ContainerDetail -> Maybe [KeyValuePair]

-- | The network interfaces associated with the job.
[$sel:networkInterfaces:ContainerDetail'] :: ContainerDetail -> Maybe [NetworkInterface]

-- | The Amazon Resource Name (ARN) of the Amazon ECS task that's
--   associated with the container job. Each container attempt receives a
--   task ARN when they reach the <tt>STARTING</tt> status.
[$sel:taskArn:ContainerDetail'] :: ContainerDetail -> Maybe Text

-- | A list of <tt>ulimit</tt> values to set in the container. This
--   parameter maps to <tt>Ulimits</tt> in the <a>Create a container</a>
--   section of the <a>Docker Remote API</a> and the <tt>--ulimit</tt>
--   option to <a>docker run</a>.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources.
[$sel:ulimits:ContainerDetail'] :: ContainerDetail -> Maybe [Ulimit]

-- | The Amazon Resource Name (ARN) of the container instance that the
--   container is running on.
[$sel:containerInstanceArn:ContainerDetail'] :: ContainerDetail -> Maybe Text

-- | The Amazon Resource Name (ARN) of the execution role that Batch can
--   assume. For more information, see <a>Batch execution IAM role</a> in
--   the <i>Batch User Guide</i>.
[$sel:executionRoleArn:ContainerDetail'] :: ContainerDetail -> Maybe Text

-- | When this parameter is true, the container is given elevated
--   permissions on the host container instance (similar to the
--   <tt>root</tt> user). The default value is false.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources and shouldn't be provided, or specified as false.
[$sel:privileged:ContainerDetail'] :: ContainerDetail -> Maybe Bool

-- | The Amazon Resource Name (ARN) associated with the job upon execution.
[$sel:jobRoleArn:ContainerDetail'] :: ContainerDetail -> Maybe Text

-- | The type and amount of resources to assign to a container. The
--   supported resources include <tt>GPU</tt>, <tt>MEMORY</tt>, and
--   <tt>VCPU</tt>.
[$sel:resourceRequirements:ContainerDetail'] :: ContainerDetail -> Maybe [ResourceRequirement]

-- | The instance type of the underlying host infrastructure of a
--   multi-node parallel job.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources.
[$sel:instanceType:ContainerDetail'] :: ContainerDetail -> Maybe Text

-- | For jobs run on EC2 resources that didn't specify memory requirements
--   using <tt>ResourceRequirement</tt>, the number of MiB of memory
--   reserved for the job. For other jobs, including all run on Fargate
--   resources, see <tt>resourceRequirements</tt>.
[$sel:memory:ContainerDetail'] :: ContainerDetail -> Maybe Int

-- | The user name to use inside the container. This parameter maps to
--   <tt>User</tt> in the <a>Create a container</a> section of the
--   <a>Docker Remote API</a> and the <tt>--user</tt> option to <a>docker
--   run</a>.
[$sel:user:ContainerDetail'] :: ContainerDetail -> Maybe Text

-- | The log configuration specification for the container.
--   
--   This parameter maps to <tt>LogConfig</tt> in the <a>Create a
--   container</a> section of the <a>Docker Remote API</a> and the
--   <tt>--log-driver</tt> option to <a>docker run</a>. By default,
--   containers use the same logging driver that the Docker daemon uses.
--   However, the container might use a different logging driver than the
--   Docker daemon by specifying a log driver with this parameter in the
--   container definition. To use a different logging driver for a
--   container, the log system must be configured properly on the container
--   instance. Or, alternatively, it must be configured on a different log
--   server for remote logging options. For more information on the options
--   for different supported log drivers, see <a>Configure logging
--   drivers</a> in the Docker documentation.
--   
--   Batch currently supports a subset of the logging drivers available to
--   the Docker daemon (shown in the LogConfiguration data type).
--   Additional log drivers might be available in future releases of the
--   Amazon ECS container agent.
--   
--   This parameter requires version 1.18 of the Docker Remote API or
--   greater on your container instance. To check the Docker Remote API
--   version on your container instance, log into your container instance
--   and run the following command: <tt>sudo docker version | grep "Server
--   API version"</tt>
--   
--   The Amazon ECS container agent running on a container instance must
--   register the logging drivers available on that instance with the
--   <tt>ECS_AVAILABLE_LOGGING_DRIVERS</tt> environment variable before
--   containers placed on that instance can use these log configuration
--   options. For more information, see <a>Amazon ECS Container Agent
--   Configuration</a> in the <i>Amazon Elastic Container Service Developer
--   Guide</i>.
[$sel:logConfiguration:ContainerDetail'] :: ContainerDetail -> Maybe LogConfiguration

-- | Linux-specific modifications that are applied to the container, such
--   as details for device mappings.
[$sel:linuxParameters:ContainerDetail'] :: ContainerDetail -> Maybe LinuxParameters

-- | A short (255 max characters) human-readable string to provide
--   additional details about a running or stopped container.
[$sel:reason:ContainerDetail'] :: ContainerDetail -> Maybe Text

-- | The name of the CloudWatch Logs log stream associated with the
--   container. The log group for Batch jobs is <tt>/aws/batch/job</tt>.
--   Each container attempt receives a log stream name when they reach the
--   <tt>RUNNING</tt> status.
[$sel:logStreamName:ContainerDetail'] :: ContainerDetail -> Maybe Text

-- | The mount points for data volumes in your container.
[$sel:mountPoints:ContainerDetail'] :: ContainerDetail -> Maybe [MountPoint]

-- | The exit code to return upon completion.
[$sel:exitCode:ContainerDetail'] :: ContainerDetail -> Maybe Int

-- | The platform configuration for jobs that are running on Fargate
--   resources. Jobs that are running on EC2 resources must not specify
--   this parameter.
[$sel:fargatePlatformConfiguration:ContainerDetail'] :: ContainerDetail -> Maybe FargatePlatformConfiguration

-- | The number of vCPUs reserved for the container. For jobs that run on
--   EC2 resources, you can specify the vCPU requirement for the job using
--   <tt>resourceRequirements</tt>, but you can't specify the vCPU
--   requirements in both the <tt>vcpus</tt> and
--   <tt>resourceRequirement</tt> object. This parameter maps to
--   <tt>CpuShares</tt> in the <a>Create a container</a> section of the
--   <a>Docker Remote API</a> and the <tt>--cpu-shares</tt> option to
--   <a>docker run</a>. Each vCPU is equivalent to 1,024 CPU shares. You
--   must specify at least one vCPU. This is required but can be specified
--   in several places. It must be specified for each node at least once.
--   
--   This parameter isn't applicable to jobs that run on Fargate resources.
--   For jobs that run on Fargate resources, you must specify the vCPU
--   requirement for the job using <tt>resourceRequirements</tt>.
[$sel:vcpus:ContainerDetail'] :: ContainerDetail -> Maybe Int

-- | When this parameter is true, the container is given read-only access
--   to its root file system. This parameter maps to
--   <tt>ReadonlyRootfs</tt> in the <a>Create a container</a> section of
--   the <a>Docker Remote API</a> and the <tt>--read-only</tt> option to
--   <a>docker run</a> .
[$sel:readonlyRootFilesystem:ContainerDetail'] :: ContainerDetail -> Maybe Bool

-- | A list of volumes associated with the job.
[$sel:volumes:ContainerDetail'] :: ContainerDetail -> Maybe [Volume]

-- | The network configuration for jobs that are running on Fargate
--   resources. Jobs that are running on EC2 resources must not specify
--   this parameter.
[$sel:networkConfiguration:ContainerDetail'] :: ContainerDetail -> Maybe NetworkConfiguration

-- | Create a value of <a>ContainerDetail</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:image:ContainerDetail'</a>, <a>containerDetail_image</a> - The
--   image used to start the container.
--   
--   <a>$sel:command:ContainerDetail'</a>, <a>containerDetail_command</a> -
--   The command that's passed to the container.
--   
--   <a>$sel:secrets:ContainerDetail'</a>, <a>containerDetail_secrets</a> -
--   The secrets to pass to the container. For more information, see
--   <a>Specifying sensitive data</a> in the <i>Batch User Guide</i>.
--   
--   <a>$sel:environment:ContainerDetail'</a>,
--   <a>containerDetail_environment</a> - The environment variables to pass
--   to a container.
--   
--   Environment variables must not start with <tt>AWS_BATCH</tt>; this
--   naming convention is reserved for variables that are set by the Batch
--   service.
--   
--   <a>$sel:networkInterfaces:ContainerDetail'</a>,
--   <a>containerDetail_networkInterfaces</a> - The network interfaces
--   associated with the job.
--   
--   <a>$sel:taskArn:ContainerDetail'</a>, <a>containerDetail_taskArn</a> -
--   The Amazon Resource Name (ARN) of the Amazon ECS task that's
--   associated with the container job. Each container attempt receives a
--   task ARN when they reach the <tt>STARTING</tt> status.
--   
--   <a>$sel:ulimits:ContainerDetail'</a>, <a>containerDetail_ulimits</a> -
--   A list of <tt>ulimit</tt> values to set in the container. This
--   parameter maps to <tt>Ulimits</tt> in the <a>Create a container</a>
--   section of the <a>Docker Remote API</a> and the <tt>--ulimit</tt>
--   option to <a>docker run</a>.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources.
--   
--   <a>$sel:containerInstanceArn:ContainerDetail'</a>,
--   <a>containerDetail_containerInstanceArn</a> - The Amazon Resource Name
--   (ARN) of the container instance that the container is running on.
--   
--   <a>$sel:executionRoleArn:ContainerDetail'</a>,
--   <a>containerDetail_executionRoleArn</a> - The Amazon Resource Name
--   (ARN) of the execution role that Batch can assume. For more
--   information, see <a>Batch execution IAM role</a> in the <i>Batch User
--   Guide</i>.
--   
--   <a>$sel:privileged:ContainerDetail'</a>,
--   <a>containerDetail_privileged</a> - When this parameter is true, the
--   container is given elevated permissions on the host container instance
--   (similar to the <tt>root</tt> user). The default value is false.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources and shouldn't be provided, or specified as false.
--   
--   <a>$sel:jobRoleArn:ContainerDetail'</a>,
--   <a>containerDetail_jobRoleArn</a> - The Amazon Resource Name (ARN)
--   associated with the job upon execution.
--   
--   <a>$sel:resourceRequirements:ContainerDetail'</a>,
--   <a>containerDetail_resourceRequirements</a> - The type and amount of
--   resources to assign to a container. The supported resources include
--   <tt>GPU</tt>, <tt>MEMORY</tt>, and <tt>VCPU</tt>.
--   
--   <a>$sel:instanceType:ContainerDetail'</a>,
--   <a>containerDetail_instanceType</a> - The instance type of the
--   underlying host infrastructure of a multi-node parallel job.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources.
--   
--   <a>$sel:memory:ContainerDetail'</a>, <a>containerDetail_memory</a> -
--   For jobs run on EC2 resources that didn't specify memory requirements
--   using <tt>ResourceRequirement</tt>, the number of MiB of memory
--   reserved for the job. For other jobs, including all run on Fargate
--   resources, see <tt>resourceRequirements</tt>.
--   
--   <a>$sel:user:ContainerDetail'</a>, <a>containerDetail_user</a> - The
--   user name to use inside the container. This parameter maps to
--   <tt>User</tt> in the <a>Create a container</a> section of the
--   <a>Docker Remote API</a> and the <tt>--user</tt> option to <a>docker
--   run</a>.
--   
--   <a>$sel:logConfiguration:ContainerDetail'</a>,
--   <a>containerDetail_logConfiguration</a> - The log configuration
--   specification for the container.
--   
--   This parameter maps to <tt>LogConfig</tt> in the <a>Create a
--   container</a> section of the <a>Docker Remote API</a> and the
--   <tt>--log-driver</tt> option to <a>docker run</a>. By default,
--   containers use the same logging driver that the Docker daemon uses.
--   However, the container might use a different logging driver than the
--   Docker daemon by specifying a log driver with this parameter in the
--   container definition. To use a different logging driver for a
--   container, the log system must be configured properly on the container
--   instance. Or, alternatively, it must be configured on a different log
--   server for remote logging options. For more information on the options
--   for different supported log drivers, see <a>Configure logging
--   drivers</a> in the Docker documentation.
--   
--   Batch currently supports a subset of the logging drivers available to
--   the Docker daemon (shown in the LogConfiguration data type).
--   Additional log drivers might be available in future releases of the
--   Amazon ECS container agent.
--   
--   This parameter requires version 1.18 of the Docker Remote API or
--   greater on your container instance. To check the Docker Remote API
--   version on your container instance, log into your container instance
--   and run the following command: <tt>sudo docker version | grep "Server
--   API version"</tt>
--   
--   The Amazon ECS container agent running on a container instance must
--   register the logging drivers available on that instance with the
--   <tt>ECS_AVAILABLE_LOGGING_DRIVERS</tt> environment variable before
--   containers placed on that instance can use these log configuration
--   options. For more information, see <a>Amazon ECS Container Agent
--   Configuration</a> in the <i>Amazon Elastic Container Service Developer
--   Guide</i>.
--   
--   <a>$sel:linuxParameters:ContainerDetail'</a>,
--   <a>containerDetail_linuxParameters</a> - Linux-specific modifications
--   that are applied to the container, such as details for device
--   mappings.
--   
--   <a>$sel:reason:ContainerDetail'</a>, <a>containerDetail_reason</a> - A
--   short (255 max characters) human-readable string to provide additional
--   details about a running or stopped container.
--   
--   <a>$sel:logStreamName:ContainerDetail'</a>,
--   <a>containerDetail_logStreamName</a> - The name of the CloudWatch Logs
--   log stream associated with the container. The log group for Batch jobs
--   is <tt>/aws/batch/job</tt>. Each container attempt receives a log
--   stream name when they reach the <tt>RUNNING</tt> status.
--   
--   <a>$sel:mountPoints:ContainerDetail'</a>,
--   <a>containerDetail_mountPoints</a> - The mount points for data volumes
--   in your container.
--   
--   <a>$sel:exitCode:ContainerDetail'</a>, <a>containerDetail_exitCode</a>
--   - The exit code to return upon completion.
--   
--   <a>$sel:fargatePlatformConfiguration:ContainerDetail'</a>,
--   <a>containerDetail_fargatePlatformConfiguration</a> - The platform
--   configuration for jobs that are running on Fargate resources. Jobs
--   that are running on EC2 resources must not specify this parameter.
--   
--   <a>$sel:vcpus:ContainerDetail'</a>, <a>containerDetail_vcpus</a> - The
--   number of vCPUs reserved for the container. For jobs that run on EC2
--   resources, you can specify the vCPU requirement for the job using
--   <tt>resourceRequirements</tt>, but you can't specify the vCPU
--   requirements in both the <tt>vcpus</tt> and
--   <tt>resourceRequirement</tt> object. This parameter maps to
--   <tt>CpuShares</tt> in the <a>Create a container</a> section of the
--   <a>Docker Remote API</a> and the <tt>--cpu-shares</tt> option to
--   <a>docker run</a>. Each vCPU is equivalent to 1,024 CPU shares. You
--   must specify at least one vCPU. This is required but can be specified
--   in several places. It must be specified for each node at least once.
--   
--   This parameter isn't applicable to jobs that run on Fargate resources.
--   For jobs that run on Fargate resources, you must specify the vCPU
--   requirement for the job using <tt>resourceRequirements</tt>.
--   
--   <a>$sel:readonlyRootFilesystem:ContainerDetail'</a>,
--   <a>containerDetail_readonlyRootFilesystem</a> - When this parameter is
--   true, the container is given read-only access to its root file system.
--   This parameter maps to <tt>ReadonlyRootfs</tt> in the <a>Create a
--   container</a> section of the <a>Docker Remote API</a> and the
--   <tt>--read-only</tt> option to <a>docker run</a> .
--   
--   <a>$sel:volumes:ContainerDetail'</a>, <a>containerDetail_volumes</a> -
--   A list of volumes associated with the job.
--   
--   <a>$sel:networkConfiguration:ContainerDetail'</a>,
--   <a>containerDetail_networkConfiguration</a> - The network
--   configuration for jobs that are running on Fargate resources. Jobs
--   that are running on EC2 resources must not specify this parameter.
newContainerDetail :: ContainerDetail

-- | The image used to start the container.
containerDetail_image :: Lens' ContainerDetail (Maybe Text)

-- | The command that's passed to the container.
containerDetail_command :: Lens' ContainerDetail (Maybe [Text])

-- | The secrets to pass to the container. For more information, see
--   <a>Specifying sensitive data</a> in the <i>Batch User Guide</i>.
containerDetail_secrets :: Lens' ContainerDetail (Maybe [Secret])

-- | The environment variables to pass to a container.
--   
--   Environment variables must not start with <tt>AWS_BATCH</tt>; this
--   naming convention is reserved for variables that are set by the Batch
--   service.
containerDetail_environment :: Lens' ContainerDetail (Maybe [KeyValuePair])

-- | The network interfaces associated with the job.
containerDetail_networkInterfaces :: Lens' ContainerDetail (Maybe [NetworkInterface])

-- | The Amazon Resource Name (ARN) of the Amazon ECS task that's
--   associated with the container job. Each container attempt receives a
--   task ARN when they reach the <tt>STARTING</tt> status.
containerDetail_taskArn :: Lens' ContainerDetail (Maybe Text)

-- | A list of <tt>ulimit</tt> values to set in the container. This
--   parameter maps to <tt>Ulimits</tt> in the <a>Create a container</a>
--   section of the <a>Docker Remote API</a> and the <tt>--ulimit</tt>
--   option to <a>docker run</a>.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources.
containerDetail_ulimits :: Lens' ContainerDetail (Maybe [Ulimit])

-- | The Amazon Resource Name (ARN) of the container instance that the
--   container is running on.
containerDetail_containerInstanceArn :: Lens' ContainerDetail (Maybe Text)

-- | The Amazon Resource Name (ARN) of the execution role that Batch can
--   assume. For more information, see <a>Batch execution IAM role</a> in
--   the <i>Batch User Guide</i>.
containerDetail_executionRoleArn :: Lens' ContainerDetail (Maybe Text)

-- | When this parameter is true, the container is given elevated
--   permissions on the host container instance (similar to the
--   <tt>root</tt> user). The default value is false.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources and shouldn't be provided, or specified as false.
containerDetail_privileged :: Lens' ContainerDetail (Maybe Bool)

-- | The Amazon Resource Name (ARN) associated with the job upon execution.
containerDetail_jobRoleArn :: Lens' ContainerDetail (Maybe Text)

-- | The type and amount of resources to assign to a container. The
--   supported resources include <tt>GPU</tt>, <tt>MEMORY</tt>, and
--   <tt>VCPU</tt>.
containerDetail_resourceRequirements :: Lens' ContainerDetail (Maybe [ResourceRequirement])

-- | The instance type of the underlying host infrastructure of a
--   multi-node parallel job.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources.
containerDetail_instanceType :: Lens' ContainerDetail (Maybe Text)

-- | For jobs run on EC2 resources that didn't specify memory requirements
--   using <tt>ResourceRequirement</tt>, the number of MiB of memory
--   reserved for the job. For other jobs, including all run on Fargate
--   resources, see <tt>resourceRequirements</tt>.
containerDetail_memory :: Lens' ContainerDetail (Maybe Int)

-- | The user name to use inside the container. This parameter maps to
--   <tt>User</tt> in the <a>Create a container</a> section of the
--   <a>Docker Remote API</a> and the <tt>--user</tt> option to <a>docker
--   run</a>.
containerDetail_user :: Lens' ContainerDetail (Maybe Text)

-- | The log configuration specification for the container.
--   
--   This parameter maps to <tt>LogConfig</tt> in the <a>Create a
--   container</a> section of the <a>Docker Remote API</a> and the
--   <tt>--log-driver</tt> option to <a>docker run</a>. By default,
--   containers use the same logging driver that the Docker daemon uses.
--   However, the container might use a different logging driver than the
--   Docker daemon by specifying a log driver with this parameter in the
--   container definition. To use a different logging driver for a
--   container, the log system must be configured properly on the container
--   instance. Or, alternatively, it must be configured on a different log
--   server for remote logging options. For more information on the options
--   for different supported log drivers, see <a>Configure logging
--   drivers</a> in the Docker documentation.
--   
--   Batch currently supports a subset of the logging drivers available to
--   the Docker daemon (shown in the LogConfiguration data type).
--   Additional log drivers might be available in future releases of the
--   Amazon ECS container agent.
--   
--   This parameter requires version 1.18 of the Docker Remote API or
--   greater on your container instance. To check the Docker Remote API
--   version on your container instance, log into your container instance
--   and run the following command: <tt>sudo docker version | grep "Server
--   API version"</tt>
--   
--   The Amazon ECS container agent running on a container instance must
--   register the logging drivers available on that instance with the
--   <tt>ECS_AVAILABLE_LOGGING_DRIVERS</tt> environment variable before
--   containers placed on that instance can use these log configuration
--   options. For more information, see <a>Amazon ECS Container Agent
--   Configuration</a> in the <i>Amazon Elastic Container Service Developer
--   Guide</i>.
containerDetail_logConfiguration :: Lens' ContainerDetail (Maybe LogConfiguration)

-- | Linux-specific modifications that are applied to the container, such
--   as details for device mappings.
containerDetail_linuxParameters :: Lens' ContainerDetail (Maybe LinuxParameters)

-- | A short (255 max characters) human-readable string to provide
--   additional details about a running or stopped container.
containerDetail_reason :: Lens' ContainerDetail (Maybe Text)

-- | The name of the CloudWatch Logs log stream associated with the
--   container. The log group for Batch jobs is <tt>/aws/batch/job</tt>.
--   Each container attempt receives a log stream name when they reach the
--   <tt>RUNNING</tt> status.
containerDetail_logStreamName :: Lens' ContainerDetail (Maybe Text)

-- | The mount points for data volumes in your container.
containerDetail_mountPoints :: Lens' ContainerDetail (Maybe [MountPoint])

-- | The exit code to return upon completion.
containerDetail_exitCode :: Lens' ContainerDetail (Maybe Int)

-- | The platform configuration for jobs that are running on Fargate
--   resources. Jobs that are running on EC2 resources must not specify
--   this parameter.
containerDetail_fargatePlatformConfiguration :: Lens' ContainerDetail (Maybe FargatePlatformConfiguration)

-- | The number of vCPUs reserved for the container. For jobs that run on
--   EC2 resources, you can specify the vCPU requirement for the job using
--   <tt>resourceRequirements</tt>, but you can't specify the vCPU
--   requirements in both the <tt>vcpus</tt> and
--   <tt>resourceRequirement</tt> object. This parameter maps to
--   <tt>CpuShares</tt> in the <a>Create a container</a> section of the
--   <a>Docker Remote API</a> and the <tt>--cpu-shares</tt> option to
--   <a>docker run</a>. Each vCPU is equivalent to 1,024 CPU shares. You
--   must specify at least one vCPU. This is required but can be specified
--   in several places. It must be specified for each node at least once.
--   
--   This parameter isn't applicable to jobs that run on Fargate resources.
--   For jobs that run on Fargate resources, you must specify the vCPU
--   requirement for the job using <tt>resourceRequirements</tt>.
containerDetail_vcpus :: Lens' ContainerDetail (Maybe Int)

-- | When this parameter is true, the container is given read-only access
--   to its root file system. This parameter maps to
--   <tt>ReadonlyRootfs</tt> in the <a>Create a container</a> section of
--   the <a>Docker Remote API</a> and the <tt>--read-only</tt> option to
--   <a>docker run</a> .
containerDetail_readonlyRootFilesystem :: Lens' ContainerDetail (Maybe Bool)

-- | A list of volumes associated with the job.
containerDetail_volumes :: Lens' ContainerDetail (Maybe [Volume])

-- | The network configuration for jobs that are running on Fargate
--   resources. Jobs that are running on EC2 resources must not specify
--   this parameter.
containerDetail_networkConfiguration :: Lens' ContainerDetail (Maybe NetworkConfiguration)
instance GHC.Generics.Generic Network.AWS.Batch.Types.ContainerDetail.ContainerDetail
instance GHC.Show.Show Network.AWS.Batch.Types.ContainerDetail.ContainerDetail
instance GHC.Read.Read Network.AWS.Batch.Types.ContainerDetail.ContainerDetail
instance GHC.Classes.Eq Network.AWS.Batch.Types.ContainerDetail.ContainerDetail
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Batch.Types.ContainerDetail.ContainerDetail
instance Data.Hashable.Class.Hashable Network.AWS.Batch.Types.ContainerDetail.ContainerDetail
instance Control.DeepSeq.NFData Network.AWS.Batch.Types.ContainerDetail.ContainerDetail


module Network.AWS.Batch.Types.JobDetail

-- | An object representing an Batch job.
--   
--   <i>See:</i> <a>newJobDetail</a> smart constructor.
data JobDetail
JobDetail' :: Maybe Integer -> Maybe Text -> Maybe Bool -> Maybe Integer -> Maybe RetryStrategy -> Maybe [AttemptDetail] -> Maybe [PlatformCapability] -> Maybe Integer -> Maybe [JobDependency] -> Maybe ContainerDetail -> Maybe NodeDetails -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe ArrayPropertiesDetail -> Maybe JobTimeout -> Maybe NodeProperties -> Maybe (HashMap Text Text) -> Text -> Text -> Text -> JobStatus -> Text -> JobDetail

-- | The Unix timestamp (in milliseconds) for when the job was stopped
--   (when the job transitioned from the <tt>RUNNING</tt> state to a
--   terminal state, such as <tt>SUCCEEDED</tt> or <tt>FAILED</tt>).
[$sel:stoppedAt:JobDetail'] :: JobDetail -> Maybe Integer

-- | The Amazon Resource Name (ARN) of the job.
[$sel:jobArn:JobDetail'] :: JobDetail -> Maybe Text

-- | Specifies whether to propagate the tags from the job or job definition
--   to the corresponding Amazon ECS task. If no value is specified, the
--   tags aren't propagated. Tags can only be propagated to the tasks
--   during task creation. For tags with the same name, job tags are given
--   priority over job definitions tags. If the total number of combined
--   tags from the job and job definition is over 50, the job is moved to
--   the <tt>FAILED</tt> state.
[$sel:propagateTags:JobDetail'] :: JobDetail -> Maybe Bool

-- | The Unix timestamp (in milliseconds) for when the job was created. For
--   non-array jobs and parent array jobs, this is when the job entered the
--   <tt>SUBMITTED</tt> state (at the time SubmitJob was called). For array
--   child jobs, this is when the child job was spawned by its parent and
--   entered the <tt>PENDING</tt> state.
[$sel:createdAt:JobDetail'] :: JobDetail -> Maybe Integer

-- | The retry strategy to use for this job if an attempt fails.
[$sel:retryStrategy:JobDetail'] :: JobDetail -> Maybe RetryStrategy

-- | A list of job attempts associated with this job.
[$sel:attempts:JobDetail'] :: JobDetail -> Maybe [AttemptDetail]

-- | The platform capabilities required by the job definition. If no value
--   is specified, it defaults to <tt>EC2</tt>. Jobs run on Fargate
--   resources specify <tt>FARGATE</tt>.
[$sel:platformCapabilities:JobDetail'] :: JobDetail -> Maybe [PlatformCapability]

-- | The Unix timestamp (in milliseconds) for when the job was started
--   (when the job transitioned from the <tt>STARTING</tt> state to the
--   <tt>RUNNING</tt> state). This parameter isn't provided for child jobs
--   of array jobs or multi-node parallel jobs.
[$sel:startedAt:JobDetail'] :: JobDetail -> Maybe Integer

-- | A list of job IDs that this job depends on.
[$sel:dependsOn:JobDetail'] :: JobDetail -> Maybe [JobDependency]

-- | An object representing the details of the container that's associated
--   with the job.
[$sel:container:JobDetail'] :: JobDetail -> Maybe ContainerDetail

-- | An object representing the details of a node that's associated with a
--   multi-node parallel job.
[$sel:nodeDetails:JobDetail'] :: JobDetail -> Maybe NodeDetails

-- | Additional parameters passed to the job that replace parameter
--   substitution placeholders or override any corresponding parameter
--   defaults from the job definition.
[$sel:parameters:JobDetail'] :: JobDetail -> Maybe (HashMap Text Text)

-- | A short, human-readable string to provide additional details about the
--   current status of the job.
[$sel:statusReason:JobDetail'] :: JobDetail -> Maybe Text

-- | The array properties of the job, if it is an array job.
[$sel:arrayProperties:JobDetail'] :: JobDetail -> Maybe ArrayPropertiesDetail

-- | The timeout configuration for the job.
[$sel:timeout:JobDetail'] :: JobDetail -> Maybe JobTimeout

-- | An object representing the node properties of a multi-node parallel
--   job.
--   
--   This isn't applicable to jobs that are running on Fargate resources.
[$sel:nodeProperties:JobDetail'] :: JobDetail -> Maybe NodeProperties

-- | The tags applied to the job.
[$sel:tags:JobDetail'] :: JobDetail -> Maybe (HashMap Text Text)

-- | The name of the job.
[$sel:jobName:JobDetail'] :: JobDetail -> Text

-- | The ID for the job.
[$sel:jobId:JobDetail'] :: JobDetail -> Text

-- | The Amazon Resource Name (ARN) of the job queue that the job is
--   associated with.
[$sel:jobQueue:JobDetail'] :: JobDetail -> Text

-- | The current status for the job.
--   
--   If your jobs don't progress to <tt>STARTING</tt>, see <a>Jobs Stuck in
--   RUNNABLE Status</a> in the troubleshooting section of the <i>Batch
--   User Guide</i>.
[$sel:status:JobDetail'] :: JobDetail -> JobStatus

-- | The job definition that's used by this job.
[$sel:jobDefinition:JobDetail'] :: JobDetail -> Text

-- | Create a value of <a>JobDetail</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:stoppedAt:JobDetail'</a>, <a>jobDetail_stoppedAt</a> - The
--   Unix timestamp (in milliseconds) for when the job was stopped (when
--   the job transitioned from the <tt>RUNNING</tt> state to a terminal
--   state, such as <tt>SUCCEEDED</tt> or <tt>FAILED</tt>).
--   
--   <a>$sel:jobArn:JobDetail'</a>, <a>jobDetail_jobArn</a> - The Amazon
--   Resource Name (ARN) of the job.
--   
--   <a>$sel:propagateTags:JobDetail'</a>, <a>jobDetail_propagateTags</a> -
--   Specifies whether to propagate the tags from the job or job definition
--   to the corresponding Amazon ECS task. If no value is specified, the
--   tags aren't propagated. Tags can only be propagated to the tasks
--   during task creation. For tags with the same name, job tags are given
--   priority over job definitions tags. If the total number of combined
--   tags from the job and job definition is over 50, the job is moved to
--   the <tt>FAILED</tt> state.
--   
--   <a>$sel:createdAt:JobDetail'</a>, <a>jobDetail_createdAt</a> - The
--   Unix timestamp (in milliseconds) for when the job was created. For
--   non-array jobs and parent array jobs, this is when the job entered the
--   <tt>SUBMITTED</tt> state (at the time SubmitJob was called). For array
--   child jobs, this is when the child job was spawned by its parent and
--   entered the <tt>PENDING</tt> state.
--   
--   <a>$sel:retryStrategy:JobDetail'</a>, <a>jobDetail_retryStrategy</a> -
--   The retry strategy to use for this job if an attempt fails.
--   
--   <a>$sel:attempts:JobDetail'</a>, <a>jobDetail_attempts</a> - A list of
--   job attempts associated with this job.
--   
--   <a>$sel:platformCapabilities:JobDetail'</a>,
--   <a>jobDetail_platformCapabilities</a> - The platform capabilities
--   required by the job definition. If no value is specified, it defaults
--   to <tt>EC2</tt>. Jobs run on Fargate resources specify
--   <tt>FARGATE</tt>.
--   
--   <a>$sel:startedAt:JobDetail'</a>, <a>jobDetail_startedAt</a> - The
--   Unix timestamp (in milliseconds) for when the job was started (when
--   the job transitioned from the <tt>STARTING</tt> state to the
--   <tt>RUNNING</tt> state). This parameter isn't provided for child jobs
--   of array jobs or multi-node parallel jobs.
--   
--   <a>$sel:dependsOn:JobDetail'</a>, <a>jobDetail_dependsOn</a> - A list
--   of job IDs that this job depends on.
--   
--   <a>$sel:container:JobDetail'</a>, <a>jobDetail_container</a> - An
--   object representing the details of the container that's associated
--   with the job.
--   
--   <a>$sel:nodeDetails:JobDetail'</a>, <a>jobDetail_nodeDetails</a> - An
--   object representing the details of a node that's associated with a
--   multi-node parallel job.
--   
--   <a>$sel:parameters:JobDetail'</a>, <a>jobDetail_parameters</a> -
--   Additional parameters passed to the job that replace parameter
--   substitution placeholders or override any corresponding parameter
--   defaults from the job definition.
--   
--   <a>$sel:statusReason:JobDetail'</a>, <a>jobDetail_statusReason</a> - A
--   short, human-readable string to provide additional details about the
--   current status of the job.
--   
--   <a>$sel:arrayProperties:JobDetail'</a>,
--   <a>jobDetail_arrayProperties</a> - The array properties of the job, if
--   it is an array job.
--   
--   <a>$sel:timeout:JobDetail'</a>, <a>jobDetail_timeout</a> - The timeout
--   configuration for the job.
--   
--   <a>$sel:nodeProperties:JobDetail'</a>, <a>jobDetail_nodeProperties</a>
--   - An object representing the node properties of a multi-node parallel
--   job.
--   
--   This isn't applicable to jobs that are running on Fargate resources.
--   
--   <a>$sel:tags:JobDetail'</a>, <a>jobDetail_tags</a> - The tags applied
--   to the job.
--   
--   <a>$sel:jobName:JobDetail'</a>, <a>jobDetail_jobName</a> - The name of
--   the job.
--   
--   <a>$sel:jobId:JobDetail'</a>, <a>jobDetail_jobId</a> - The ID for the
--   job.
--   
--   <a>$sel:jobQueue:JobDetail'</a>, <a>jobDetail_jobQueue</a> - The
--   Amazon Resource Name (ARN) of the job queue that the job is associated
--   with.
--   
--   <a>$sel:status:JobDetail'</a>, <a>jobDetail_status</a> - The current
--   status for the job.
--   
--   If your jobs don't progress to <tt>STARTING</tt>, see <a>Jobs Stuck in
--   RUNNABLE Status</a> in the troubleshooting section of the <i>Batch
--   User Guide</i>.
--   
--   <a>$sel:jobDefinition:JobDetail'</a>, <a>jobDetail_jobDefinition</a> -
--   The job definition that's used by this job.
newJobDetail :: Text -> Text -> Text -> JobStatus -> Text -> JobDetail

-- | The Unix timestamp (in milliseconds) for when the job was stopped
--   (when the job transitioned from the <tt>RUNNING</tt> state to a
--   terminal state, such as <tt>SUCCEEDED</tt> or <tt>FAILED</tt>).
jobDetail_stoppedAt :: Lens' JobDetail (Maybe Integer)

-- | The Amazon Resource Name (ARN) of the job.
jobDetail_jobArn :: Lens' JobDetail (Maybe Text)

-- | Specifies whether to propagate the tags from the job or job definition
--   to the corresponding Amazon ECS task. If no value is specified, the
--   tags aren't propagated. Tags can only be propagated to the tasks
--   during task creation. For tags with the same name, job tags are given
--   priority over job definitions tags. If the total number of combined
--   tags from the job and job definition is over 50, the job is moved to
--   the <tt>FAILED</tt> state.
jobDetail_propagateTags :: Lens' JobDetail (Maybe Bool)

-- | The Unix timestamp (in milliseconds) for when the job was created. For
--   non-array jobs and parent array jobs, this is when the job entered the
--   <tt>SUBMITTED</tt> state (at the time SubmitJob was called). For array
--   child jobs, this is when the child job was spawned by its parent and
--   entered the <tt>PENDING</tt> state.
jobDetail_createdAt :: Lens' JobDetail (Maybe Integer)

-- | The retry strategy to use for this job if an attempt fails.
jobDetail_retryStrategy :: Lens' JobDetail (Maybe RetryStrategy)

-- | A list of job attempts associated with this job.
jobDetail_attempts :: Lens' JobDetail (Maybe [AttemptDetail])

-- | The platform capabilities required by the job definition. If no value
--   is specified, it defaults to <tt>EC2</tt>. Jobs run on Fargate
--   resources specify <tt>FARGATE</tt>.
jobDetail_platformCapabilities :: Lens' JobDetail (Maybe [PlatformCapability])

-- | The Unix timestamp (in milliseconds) for when the job was started
--   (when the job transitioned from the <tt>STARTING</tt> state to the
--   <tt>RUNNING</tt> state). This parameter isn't provided for child jobs
--   of array jobs or multi-node parallel jobs.
jobDetail_startedAt :: Lens' JobDetail (Maybe Integer)

-- | A list of job IDs that this job depends on.
jobDetail_dependsOn :: Lens' JobDetail (Maybe [JobDependency])

-- | An object representing the details of the container that's associated
--   with the job.
jobDetail_container :: Lens' JobDetail (Maybe ContainerDetail)

-- | An object representing the details of a node that's associated with a
--   multi-node parallel job.
jobDetail_nodeDetails :: Lens' JobDetail (Maybe NodeDetails)

-- | Additional parameters passed to the job that replace parameter
--   substitution placeholders or override any corresponding parameter
--   defaults from the job definition.
jobDetail_parameters :: Lens' JobDetail (Maybe (HashMap Text Text))

-- | A short, human-readable string to provide additional details about the
--   current status of the job.
jobDetail_statusReason :: Lens' JobDetail (Maybe Text)

-- | The array properties of the job, if it is an array job.
jobDetail_arrayProperties :: Lens' JobDetail (Maybe ArrayPropertiesDetail)

-- | The timeout configuration for the job.
jobDetail_timeout :: Lens' JobDetail (Maybe JobTimeout)

-- | An object representing the node properties of a multi-node parallel
--   job.
--   
--   This isn't applicable to jobs that are running on Fargate resources.
jobDetail_nodeProperties :: Lens' JobDetail (Maybe NodeProperties)

-- | The tags applied to the job.
jobDetail_tags :: Lens' JobDetail (Maybe (HashMap Text Text))

-- | The name of the job.
jobDetail_jobName :: Lens' JobDetail Text

-- | The ID for the job.
jobDetail_jobId :: Lens' JobDetail Text

-- | The Amazon Resource Name (ARN) of the job queue that the job is
--   associated with.
jobDetail_jobQueue :: Lens' JobDetail Text

-- | The current status for the job.
--   
--   If your jobs don't progress to <tt>STARTING</tt>, see <a>Jobs Stuck in
--   RUNNABLE Status</a> in the troubleshooting section of the <i>Batch
--   User Guide</i>.
jobDetail_status :: Lens' JobDetail JobStatus

-- | The job definition that's used by this job.
jobDetail_jobDefinition :: Lens' JobDetail Text
instance GHC.Generics.Generic Network.AWS.Batch.Types.JobDetail.JobDetail
instance GHC.Show.Show Network.AWS.Batch.Types.JobDetail.JobDetail
instance GHC.Read.Read Network.AWS.Batch.Types.JobDetail.JobDetail
instance GHC.Classes.Eq Network.AWS.Batch.Types.JobDetail.JobDetail
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Batch.Types.JobDetail.JobDetail
instance Data.Hashable.Class.Hashable Network.AWS.Batch.Types.JobDetail.JobDetail
instance Control.DeepSeq.NFData Network.AWS.Batch.Types.JobDetail.JobDetail


module Network.AWS.Batch.Types

-- | API version <tt>2016-08-10</tt> of the Amazon Batch SDK configuration.
defaultService :: Service

-- | These errors are usually caused by a server issue.
_ServerException :: AsError a => Getting (First ServiceError) a ServiceError

-- | These errors are usually caused by a client action, such as using an
--   action or resource on behalf of a user that doesn't have permissions
--   to use the action or resource, or specifying an identifier that's not
--   valid.
_ClientException :: AsError a => Getting (First ServiceError) a ServiceError
newtype ArrayJobDependency
ArrayJobDependency' :: Text -> ArrayJobDependency
[fromArrayJobDependency] :: ArrayJobDependency -> Text
pattern ArrayJobDependency_N_TO_N :: ArrayJobDependency
pattern ArrayJobDependency_SEQUENTIAL :: ArrayJobDependency
newtype AssignPublicIp
AssignPublicIp' :: Text -> AssignPublicIp
[fromAssignPublicIp] :: AssignPublicIp -> Text
pattern AssignPublicIp_DISABLED :: AssignPublicIp
pattern AssignPublicIp_ENABLED :: AssignPublicIp
newtype CEState
CEState' :: Text -> CEState
[fromCEState] :: CEState -> Text
pattern CEState_DISABLED :: CEState
pattern CEState_ENABLED :: CEState
newtype CEStatus
CEStatus' :: Text -> CEStatus
[fromCEStatus] :: CEStatus -> Text
pattern CEStatus_CREATING :: CEStatus
pattern CEStatus_DELETED :: CEStatus
pattern CEStatus_DELETING :: CEStatus
pattern CEStatus_INVALID :: CEStatus
pattern CEStatus_UPDATING :: CEStatus
pattern CEStatus_VALID :: CEStatus
newtype CEType
CEType' :: Text -> CEType
[fromCEType] :: CEType -> Text
pattern CEType_MANAGED :: CEType
pattern CEType_UNMANAGED :: CEType
newtype CRAllocationStrategy
CRAllocationStrategy' :: Text -> CRAllocationStrategy
[fromCRAllocationStrategy] :: CRAllocationStrategy -> Text
pattern CRAllocationStrategy_BEST_FIT :: CRAllocationStrategy
pattern CRAllocationStrategy_BEST_FIT_PROGRESSIVE :: CRAllocationStrategy
pattern CRAllocationStrategy_SPOT_CAPACITY_OPTIMIZED :: CRAllocationStrategy
newtype CRType
CRType' :: Text -> CRType
[fromCRType] :: CRType -> Text
pattern CRType_EC2 :: CRType
pattern CRType_FARGATE :: CRType
pattern CRType_FARGATE_SPOT :: CRType
pattern CRType_SPOT :: CRType
newtype DeviceCgroupPermission
DeviceCgroupPermission' :: Text -> DeviceCgroupPermission
[fromDeviceCgroupPermission] :: DeviceCgroupPermission -> Text
pattern DeviceCgroupPermission_MKNOD :: DeviceCgroupPermission
pattern DeviceCgroupPermission_READ :: DeviceCgroupPermission
pattern DeviceCgroupPermission_WRITE :: DeviceCgroupPermission
newtype EFSAuthorizationConfigIAM
EFSAuthorizationConfigIAM' :: Text -> EFSAuthorizationConfigIAM
[fromEFSAuthorizationConfigIAM] :: EFSAuthorizationConfigIAM -> Text
pattern EFSAuthorizationConfigIAM_DISABLED :: EFSAuthorizationConfigIAM
pattern EFSAuthorizationConfigIAM_ENABLED :: EFSAuthorizationConfigIAM
newtype EFSTransitEncryption
EFSTransitEncryption' :: Text -> EFSTransitEncryption
[fromEFSTransitEncryption] :: EFSTransitEncryption -> Text
pattern EFSTransitEncryption_DISABLED :: EFSTransitEncryption
pattern EFSTransitEncryption_ENABLED :: EFSTransitEncryption
newtype JQState
JQState' :: Text -> JQState
[fromJQState] :: JQState -> Text
pattern JQState_DISABLED :: JQState
pattern JQState_ENABLED :: JQState
newtype JQStatus
JQStatus' :: Text -> JQStatus
[fromJQStatus] :: JQStatus -> Text
pattern JQStatus_CREATING :: JQStatus
pattern JQStatus_DELETED :: JQStatus
pattern JQStatus_DELETING :: JQStatus
pattern JQStatus_INVALID :: JQStatus
pattern JQStatus_UPDATING :: JQStatus
pattern JQStatus_VALID :: JQStatus
newtype JobDefinitionType
JobDefinitionType' :: Text -> JobDefinitionType
[fromJobDefinitionType] :: JobDefinitionType -> Text
pattern JobDefinitionType_Container :: JobDefinitionType
pattern JobDefinitionType_Multinode :: JobDefinitionType
newtype JobStatus
JobStatus' :: Text -> JobStatus
[fromJobStatus] :: JobStatus -> Text
pattern JobStatus_FAILED :: JobStatus
pattern JobStatus_PENDING :: JobStatus
pattern JobStatus_RUNNABLE :: JobStatus
pattern JobStatus_RUNNING :: JobStatus
pattern JobStatus_STARTING :: JobStatus
pattern JobStatus_SUBMITTED :: JobStatus
pattern JobStatus_SUCCEEDED :: JobStatus
newtype LogDriver
LogDriver' :: Text -> LogDriver
[fromLogDriver] :: LogDriver -> Text
pattern LogDriver_Awslogs :: LogDriver
pattern LogDriver_Fluentd :: LogDriver
pattern LogDriver_Gelf :: LogDriver
pattern LogDriver_Journald :: LogDriver
pattern LogDriver_Json_file :: LogDriver
pattern LogDriver_Splunk :: LogDriver
pattern LogDriver_Syslog :: LogDriver
newtype PlatformCapability
PlatformCapability' :: Text -> PlatformCapability
[fromPlatformCapability] :: PlatformCapability -> Text
pattern PlatformCapability_EC2 :: PlatformCapability
pattern PlatformCapability_FARGATE :: PlatformCapability
newtype ResourceType
ResourceType' :: Text -> ResourceType
[fromResourceType] :: ResourceType -> Text
pattern ResourceType_GPU :: ResourceType
pattern ResourceType_MEMORY :: ResourceType
pattern ResourceType_VCPU :: ResourceType
newtype RetryAction
RetryAction' :: Text -> RetryAction
[fromRetryAction] :: RetryAction -> Text
pattern RetryAction_EXIT :: RetryAction
pattern RetryAction_RETRY :: RetryAction

-- | An object representing an Batch array job.
--   
--   <i>See:</i> <a>newArrayProperties</a> smart constructor.
data ArrayProperties
ArrayProperties' :: Maybe Int -> ArrayProperties

-- | The size of the array job.
[$sel:size:ArrayProperties'] :: ArrayProperties -> Maybe Int

-- | Create a value of <a>ArrayProperties</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:size:ArrayProperties'</a>, <a>arrayProperties_size</a> - The
--   size of the array job.
newArrayProperties :: ArrayProperties

-- | The size of the array job.
arrayProperties_size :: Lens' ArrayProperties (Maybe Int)

-- | An object representing the array properties of a job.
--   
--   <i>See:</i> <a>newArrayPropertiesDetail</a> smart constructor.
data ArrayPropertiesDetail
ArrayPropertiesDetail' :: Maybe Int -> Maybe (HashMap Text Int) -> Maybe Int -> ArrayPropertiesDetail

-- | The size of the array job. This parameter is returned for parent array
--   jobs.
[$sel:size:ArrayPropertiesDetail'] :: ArrayPropertiesDetail -> Maybe Int

-- | A summary of the number of array job children in each available job
--   status. This parameter is returned for parent array jobs.
[$sel:statusSummary:ArrayPropertiesDetail'] :: ArrayPropertiesDetail -> Maybe (HashMap Text Int)

-- | The job index within the array that's associated with this job. This
--   parameter is returned for array job children.
[$sel:index:ArrayPropertiesDetail'] :: ArrayPropertiesDetail -> Maybe Int

-- | Create a value of <a>ArrayPropertiesDetail</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:size:ArrayPropertiesDetail'</a>,
--   <a>arrayPropertiesDetail_size</a> - The size of the array job. This
--   parameter is returned for parent array jobs.
--   
--   <a>$sel:statusSummary:ArrayPropertiesDetail'</a>,
--   <a>arrayPropertiesDetail_statusSummary</a> - A summary of the number
--   of array job children in each available job status. This parameter is
--   returned for parent array jobs.
--   
--   <a>$sel:index:ArrayPropertiesDetail'</a>,
--   <a>arrayPropertiesDetail_index</a> - The job index within the array
--   that's associated with this job. This parameter is returned for array
--   job children.
newArrayPropertiesDetail :: ArrayPropertiesDetail

-- | The size of the array job. This parameter is returned for parent array
--   jobs.
arrayPropertiesDetail_size :: Lens' ArrayPropertiesDetail (Maybe Int)

-- | A summary of the number of array job children in each available job
--   status. This parameter is returned for parent array jobs.
arrayPropertiesDetail_statusSummary :: Lens' ArrayPropertiesDetail (Maybe (HashMap Text Int))

-- | The job index within the array that's associated with this job. This
--   parameter is returned for array job children.
arrayPropertiesDetail_index :: Lens' ArrayPropertiesDetail (Maybe Int)

-- | An object representing the array properties of a job.
--   
--   <i>See:</i> <a>newArrayPropertiesSummary</a> smart constructor.
data ArrayPropertiesSummary
ArrayPropertiesSummary' :: Maybe Int -> Maybe Int -> ArrayPropertiesSummary

-- | The size of the array job. This parameter is returned for parent array
--   jobs.
[$sel:size:ArrayPropertiesSummary'] :: ArrayPropertiesSummary -> Maybe Int

-- | The job index within the array that's associated with this job. This
--   parameter is returned for children of array jobs.
[$sel:index:ArrayPropertiesSummary'] :: ArrayPropertiesSummary -> Maybe Int

-- | Create a value of <a>ArrayPropertiesSummary</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:size:ArrayPropertiesSummary'</a>,
--   <a>arrayPropertiesSummary_size</a> - The size of the array job. This
--   parameter is returned for parent array jobs.
--   
--   <a>$sel:index:ArrayPropertiesSummary'</a>,
--   <a>arrayPropertiesSummary_index</a> - The job index within the array
--   that's associated with this job. This parameter is returned for
--   children of array jobs.
newArrayPropertiesSummary :: ArrayPropertiesSummary

-- | The size of the array job. This parameter is returned for parent array
--   jobs.
arrayPropertiesSummary_size :: Lens' ArrayPropertiesSummary (Maybe Int)

-- | The job index within the array that's associated with this job. This
--   parameter is returned for children of array jobs.
arrayPropertiesSummary_index :: Lens' ArrayPropertiesSummary (Maybe Int)

-- | An object representing the details of a container that's part of a job
--   attempt.
--   
--   <i>See:</i> <a>newAttemptContainerDetail</a> smart constructor.
data AttemptContainerDetail
AttemptContainerDetail' :: Maybe [NetworkInterface] -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Int -> AttemptContainerDetail

-- | The network interfaces associated with the job attempt.
[$sel:networkInterfaces:AttemptContainerDetail'] :: AttemptContainerDetail -> Maybe [NetworkInterface]

-- | The Amazon Resource Name (ARN) of the Amazon ECS task that's
--   associated with the job attempt. Each container attempt receives a
--   task ARN when they reach the <tt>STARTING</tt> status.
[$sel:taskArn:AttemptContainerDetail'] :: AttemptContainerDetail -> Maybe Text

-- | The Amazon Resource Name (ARN) of the Amazon ECS container instance
--   that hosts the job attempt.
[$sel:containerInstanceArn:AttemptContainerDetail'] :: AttemptContainerDetail -> Maybe Text

-- | A short (255 max characters) human-readable string to provide
--   additional details about a running or stopped container.
[$sel:reason:AttemptContainerDetail'] :: AttemptContainerDetail -> Maybe Text

-- | The name of the CloudWatch Logs log stream associated with the
--   container. The log group for Batch jobs is <tt>/aws/batch/job</tt>.
--   Each container attempt receives a log stream name when they reach the
--   <tt>RUNNING</tt> status.
[$sel:logStreamName:AttemptContainerDetail'] :: AttemptContainerDetail -> Maybe Text

-- | The exit code for the job attempt. A non-zero exit code is considered
--   a failure.
[$sel:exitCode:AttemptContainerDetail'] :: AttemptContainerDetail -> Maybe Int

-- | Create a value of <a>AttemptContainerDetail</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:networkInterfaces:AttemptContainerDetail'</a>,
--   <a>attemptContainerDetail_networkInterfaces</a> - The network
--   interfaces associated with the job attempt.
--   
--   <a>$sel:taskArn:AttemptContainerDetail'</a>,
--   <a>attemptContainerDetail_taskArn</a> - The Amazon Resource Name (ARN)
--   of the Amazon ECS task that's associated with the job attempt. Each
--   container attempt receives a task ARN when they reach the
--   <tt>STARTING</tt> status.
--   
--   <a>$sel:containerInstanceArn:AttemptContainerDetail'</a>,
--   <a>attemptContainerDetail_containerInstanceArn</a> - The Amazon
--   Resource Name (ARN) of the Amazon ECS container instance that hosts
--   the job attempt.
--   
--   <a>$sel:reason:AttemptContainerDetail'</a>,
--   <a>attemptContainerDetail_reason</a> - A short (255 max characters)
--   human-readable string to provide additional details about a running or
--   stopped container.
--   
--   <a>$sel:logStreamName:AttemptContainerDetail'</a>,
--   <a>attemptContainerDetail_logStreamName</a> - The name of the
--   CloudWatch Logs log stream associated with the container. The log
--   group for Batch jobs is <tt>/aws/batch/job</tt>. Each container
--   attempt receives a log stream name when they reach the
--   <tt>RUNNING</tt> status.
--   
--   <a>$sel:exitCode:AttemptContainerDetail'</a>,
--   <a>attemptContainerDetail_exitCode</a> - The exit code for the job
--   attempt. A non-zero exit code is considered a failure.
newAttemptContainerDetail :: AttemptContainerDetail

-- | The network interfaces associated with the job attempt.
attemptContainerDetail_networkInterfaces :: Lens' AttemptContainerDetail (Maybe [NetworkInterface])

-- | The Amazon Resource Name (ARN) of the Amazon ECS task that's
--   associated with the job attempt. Each container attempt receives a
--   task ARN when they reach the <tt>STARTING</tt> status.
attemptContainerDetail_taskArn :: Lens' AttemptContainerDetail (Maybe Text)

-- | The Amazon Resource Name (ARN) of the Amazon ECS container instance
--   that hosts the job attempt.
attemptContainerDetail_containerInstanceArn :: Lens' AttemptContainerDetail (Maybe Text)

-- | A short (255 max characters) human-readable string to provide
--   additional details about a running or stopped container.
attemptContainerDetail_reason :: Lens' AttemptContainerDetail (Maybe Text)

-- | The name of the CloudWatch Logs log stream associated with the
--   container. The log group for Batch jobs is <tt>/aws/batch/job</tt>.
--   Each container attempt receives a log stream name when they reach the
--   <tt>RUNNING</tt> status.
attemptContainerDetail_logStreamName :: Lens' AttemptContainerDetail (Maybe Text)

-- | The exit code for the job attempt. A non-zero exit code is considered
--   a failure.
attemptContainerDetail_exitCode :: Lens' AttemptContainerDetail (Maybe Int)

-- | An object representing a job attempt.
--   
--   <i>See:</i> <a>newAttemptDetail</a> smart constructor.
data AttemptDetail
AttemptDetail' :: Maybe Integer -> Maybe Integer -> Maybe AttemptContainerDetail -> Maybe Text -> AttemptDetail

-- | The Unix timestamp (in milliseconds) for when the attempt was stopped
--   (when the attempt transitioned from the <tt>RUNNING</tt> state to a
--   terminal state, such as <tt>SUCCEEDED</tt> or <tt>FAILED</tt>).
[$sel:stoppedAt:AttemptDetail'] :: AttemptDetail -> Maybe Integer

-- | The Unix timestamp (in milliseconds) for when the attempt was started
--   (when the attempt transitioned from the <tt>STARTING</tt> state to the
--   <tt>RUNNING</tt> state).
[$sel:startedAt:AttemptDetail'] :: AttemptDetail -> Maybe Integer

-- | Details about the container in this job attempt.
[$sel:container:AttemptDetail'] :: AttemptDetail -> Maybe AttemptContainerDetail

-- | A short, human-readable string to provide additional details about the
--   current status of the job attempt.
[$sel:statusReason:AttemptDetail'] :: AttemptDetail -> Maybe Text

-- | Create a value of <a>AttemptDetail</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:stoppedAt:AttemptDetail'</a>, <a>attemptDetail_stoppedAt</a> -
--   The Unix timestamp (in milliseconds) for when the attempt was stopped
--   (when the attempt transitioned from the <tt>RUNNING</tt> state to a
--   terminal state, such as <tt>SUCCEEDED</tt> or <tt>FAILED</tt>).
--   
--   <a>$sel:startedAt:AttemptDetail'</a>, <a>attemptDetail_startedAt</a> -
--   The Unix timestamp (in milliseconds) for when the attempt was started
--   (when the attempt transitioned from the <tt>STARTING</tt> state to the
--   <tt>RUNNING</tt> state).
--   
--   <a>$sel:container:AttemptDetail'</a>, <a>attemptDetail_container</a> -
--   Details about the container in this job attempt.
--   
--   <a>$sel:statusReason:AttemptDetail'</a>,
--   <a>attemptDetail_statusReason</a> - A short, human-readable string to
--   provide additional details about the current status of the job
--   attempt.
newAttemptDetail :: AttemptDetail

-- | The Unix timestamp (in milliseconds) for when the attempt was stopped
--   (when the attempt transitioned from the <tt>RUNNING</tt> state to a
--   terminal state, such as <tt>SUCCEEDED</tt> or <tt>FAILED</tt>).
attemptDetail_stoppedAt :: Lens' AttemptDetail (Maybe Integer)

-- | The Unix timestamp (in milliseconds) for when the attempt was started
--   (when the attempt transitioned from the <tt>STARTING</tt> state to the
--   <tt>RUNNING</tt> state).
attemptDetail_startedAt :: Lens' AttemptDetail (Maybe Integer)

-- | Details about the container in this job attempt.
attemptDetail_container :: Lens' AttemptDetail (Maybe AttemptContainerDetail)

-- | A short, human-readable string to provide additional details about the
--   current status of the job attempt.
attemptDetail_statusReason :: Lens' AttemptDetail (Maybe Text)

-- | An object representing an Batch compute environment.
--   
--   <i>See:</i> <a>newComputeEnvironmentDetail</a> smart constructor.
data ComputeEnvironmentDetail
ComputeEnvironmentDetail' :: Maybe CEStatus -> Maybe CEState -> Maybe ComputeResource -> Maybe Text -> Maybe CEType -> Maybe Text -> Maybe (HashMap Text Text) -> Text -> Text -> Text -> ComputeEnvironmentDetail

-- | The current status of the compute environment (for example,
--   <tt>CREATING</tt> or <tt>VALID</tt>).
[$sel:status:ComputeEnvironmentDetail'] :: ComputeEnvironmentDetail -> Maybe CEStatus

-- | The state of the compute environment. The valid values are
--   <tt>ENABLED</tt> or <tt>DISABLED</tt>.
--   
--   If the state is <tt>ENABLED</tt>, then the Batch scheduler can attempt
--   to place jobs from an associated job queue on the compute resources
--   within the environment. If the compute environment is managed, then it
--   can scale its instances out or in automatically, based on the job
--   queue demand.
--   
--   If the state is <tt>DISABLED</tt>, then the Batch scheduler doesn't
--   attempt to place jobs within the environment. Jobs in a
--   <tt>STARTING</tt> or <tt>RUNNING</tt> state continue to progress
--   normally. Managed compute environments in the <tt>DISABLED</tt> state
--   don't scale out. However, they scale in to <tt>minvCpus</tt> value
--   after instances become idle.
[$sel:state:ComputeEnvironmentDetail'] :: ComputeEnvironmentDetail -> Maybe CEState

-- | The compute resources defined for the compute environment. For more
--   information, see <a>Compute Environments</a> in the <i>Batch User
--   Guide</i>.
[$sel:computeResources:ComputeEnvironmentDetail'] :: ComputeEnvironmentDetail -> Maybe ComputeResource

-- | A short, human-readable string to provide additional details about the
--   current status of the compute environment.
[$sel:statusReason:ComputeEnvironmentDetail'] :: ComputeEnvironmentDetail -> Maybe Text

-- | The type of the compute environment: <tt>MANAGED</tt> or
--   <tt>UNMANAGED</tt>. For more information, see <a>Compute
--   Environments</a> in the <i>Batch User Guide</i>.
[$sel:type':ComputeEnvironmentDetail'] :: ComputeEnvironmentDetail -> Maybe CEType

-- | The service role associated with the compute environment that allows
--   Batch to make calls to Amazon Web Services API operations on your
--   behalf. For more information, see <a>Batch service IAM role</a> in the
--   <i>Batch User Guide</i>.
[$sel:serviceRole:ComputeEnvironmentDetail'] :: ComputeEnvironmentDetail -> Maybe Text

-- | The tags applied to the compute environment.
[$sel:tags:ComputeEnvironmentDetail'] :: ComputeEnvironmentDetail -> Maybe (HashMap Text Text)

-- | The name of the compute environment. Up to 128 letters (uppercase and
--   lowercase), numbers, hyphens, and underscores are allowed.
[$sel:computeEnvironmentName:ComputeEnvironmentDetail'] :: ComputeEnvironmentDetail -> Text

-- | The Amazon Resource Name (ARN) of the compute environment.
[$sel:computeEnvironmentArn:ComputeEnvironmentDetail'] :: ComputeEnvironmentDetail -> Text

-- | The Amazon Resource Name (ARN) of the underlying Amazon ECS cluster
--   used by the compute environment.
[$sel:ecsClusterArn:ComputeEnvironmentDetail'] :: ComputeEnvironmentDetail -> Text

-- | Create a value of <a>ComputeEnvironmentDetail</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:ComputeEnvironmentDetail'</a>,
--   <a>computeEnvironmentDetail_status</a> - The current status of the
--   compute environment (for example, <tt>CREATING</tt> or
--   <tt>VALID</tt>).
--   
--   <a>$sel:state:ComputeEnvironmentDetail'</a>,
--   <a>computeEnvironmentDetail_state</a> - The state of the compute
--   environment. The valid values are <tt>ENABLED</tt> or
--   <tt>DISABLED</tt>.
--   
--   If the state is <tt>ENABLED</tt>, then the Batch scheduler can attempt
--   to place jobs from an associated job queue on the compute resources
--   within the environment. If the compute environment is managed, then it
--   can scale its instances out or in automatically, based on the job
--   queue demand.
--   
--   If the state is <tt>DISABLED</tt>, then the Batch scheduler doesn't
--   attempt to place jobs within the environment. Jobs in a
--   <tt>STARTING</tt> or <tt>RUNNING</tt> state continue to progress
--   normally. Managed compute environments in the <tt>DISABLED</tt> state
--   don't scale out. However, they scale in to <tt>minvCpus</tt> value
--   after instances become idle.
--   
--   <a>$sel:computeResources:ComputeEnvironmentDetail'</a>,
--   <a>computeEnvironmentDetail_computeResources</a> - The compute
--   resources defined for the compute environment. For more information,
--   see <a>Compute Environments</a> in the <i>Batch User Guide</i>.
--   
--   <a>$sel:statusReason:ComputeEnvironmentDetail'</a>,
--   <a>computeEnvironmentDetail_statusReason</a> - A short, human-readable
--   string to provide additional details about the current status of the
--   compute environment.
--   
--   <a>$sel:type':ComputeEnvironmentDetail'</a>,
--   <a>computeEnvironmentDetail_type</a> - The type of the compute
--   environment: <tt>MANAGED</tt> or <tt>UNMANAGED</tt>. For more
--   information, see <a>Compute Environments</a> in the <i>Batch User
--   Guide</i>.
--   
--   <a>$sel:serviceRole:ComputeEnvironmentDetail'</a>,
--   <a>computeEnvironmentDetail_serviceRole</a> - The service role
--   associated with the compute environment that allows Batch to make
--   calls to Amazon Web Services API operations on your behalf. For more
--   information, see <a>Batch service IAM role</a> in the <i>Batch User
--   Guide</i>.
--   
--   <a>$sel:tags:ComputeEnvironmentDetail'</a>,
--   <a>computeEnvironmentDetail_tags</a> - The tags applied to the compute
--   environment.
--   
--   <a>$sel:computeEnvironmentName:ComputeEnvironmentDetail'</a>,
--   <a>computeEnvironmentDetail_computeEnvironmentName</a> - The name of
--   the compute environment. Up to 128 letters (uppercase and lowercase),
--   numbers, hyphens, and underscores are allowed.
--   
--   <a>$sel:computeEnvironmentArn:ComputeEnvironmentDetail'</a>,
--   <a>computeEnvironmentDetail_computeEnvironmentArn</a> - The Amazon
--   Resource Name (ARN) of the compute environment.
--   
--   <a>$sel:ecsClusterArn:ComputeEnvironmentDetail'</a>,
--   <a>computeEnvironmentDetail_ecsClusterArn</a> - The Amazon Resource
--   Name (ARN) of the underlying Amazon ECS cluster used by the compute
--   environment.
newComputeEnvironmentDetail :: Text -> Text -> Text -> ComputeEnvironmentDetail

-- | The current status of the compute environment (for example,
--   <tt>CREATING</tt> or <tt>VALID</tt>).
computeEnvironmentDetail_status :: Lens' ComputeEnvironmentDetail (Maybe CEStatus)

-- | The state of the compute environment. The valid values are
--   <tt>ENABLED</tt> or <tt>DISABLED</tt>.
--   
--   If the state is <tt>ENABLED</tt>, then the Batch scheduler can attempt
--   to place jobs from an associated job queue on the compute resources
--   within the environment. If the compute environment is managed, then it
--   can scale its instances out or in automatically, based on the job
--   queue demand.
--   
--   If the state is <tt>DISABLED</tt>, then the Batch scheduler doesn't
--   attempt to place jobs within the environment. Jobs in a
--   <tt>STARTING</tt> or <tt>RUNNING</tt> state continue to progress
--   normally. Managed compute environments in the <tt>DISABLED</tt> state
--   don't scale out. However, they scale in to <tt>minvCpus</tt> value
--   after instances become idle.
computeEnvironmentDetail_state :: Lens' ComputeEnvironmentDetail (Maybe CEState)

-- | The compute resources defined for the compute environment. For more
--   information, see <a>Compute Environments</a> in the <i>Batch User
--   Guide</i>.
computeEnvironmentDetail_computeResources :: Lens' ComputeEnvironmentDetail (Maybe ComputeResource)

-- | A short, human-readable string to provide additional details about the
--   current status of the compute environment.
computeEnvironmentDetail_statusReason :: Lens' ComputeEnvironmentDetail (Maybe Text)

-- | The type of the compute environment: <tt>MANAGED</tt> or
--   <tt>UNMANAGED</tt>. For more information, see <a>Compute
--   Environments</a> in the <i>Batch User Guide</i>.
computeEnvironmentDetail_type :: Lens' ComputeEnvironmentDetail (Maybe CEType)

-- | The service role associated with the compute environment that allows
--   Batch to make calls to Amazon Web Services API operations on your
--   behalf. For more information, see <a>Batch service IAM role</a> in the
--   <i>Batch User Guide</i>.
computeEnvironmentDetail_serviceRole :: Lens' ComputeEnvironmentDetail (Maybe Text)

-- | The tags applied to the compute environment.
computeEnvironmentDetail_tags :: Lens' ComputeEnvironmentDetail (Maybe (HashMap Text Text))

-- | The name of the compute environment. Up to 128 letters (uppercase and
--   lowercase), numbers, hyphens, and underscores are allowed.
computeEnvironmentDetail_computeEnvironmentName :: Lens' ComputeEnvironmentDetail Text

-- | The Amazon Resource Name (ARN) of the compute environment.
computeEnvironmentDetail_computeEnvironmentArn :: Lens' ComputeEnvironmentDetail Text

-- | The Amazon Resource Name (ARN) of the underlying Amazon ECS cluster
--   used by the compute environment.
computeEnvironmentDetail_ecsClusterArn :: Lens' ComputeEnvironmentDetail Text

-- | The order in which compute environments are tried for job placement
--   within a queue. Compute environments are tried in ascending order. For
--   example, if two compute environments are associated with a job queue,
--   the compute environment with a lower order integer value is tried for
--   job placement first. Compute environments must be in the
--   <tt>VALID</tt> state before you can associate them with a job queue.
--   All of the compute environments must be either EC2 (<tt>EC2</tt> or
--   <tt>SPOT</tt>) or Fargate (<tt>FARGATE</tt> or <tt>FARGATE_SPOT</tt>);
--   EC2 and Fargate compute environments can't be mixed.
--   
--   All compute environments that are associated with a job queue must
--   share the same architecture. Batch doesn't support mixing compute
--   environment architecture types in a single job queue.
--   
--   <i>See:</i> <a>newComputeEnvironmentOrder</a> smart constructor.
data ComputeEnvironmentOrder
ComputeEnvironmentOrder' :: Int -> Text -> ComputeEnvironmentOrder

-- | The order of the compute environment. Compute environments are tried
--   in ascending order. For example, if two compute environments are
--   associated with a job queue, the compute environment with a lower
--   <tt>order</tt> integer value is tried for job placement first.
[$sel:order:ComputeEnvironmentOrder'] :: ComputeEnvironmentOrder -> Int

-- | The Amazon Resource Name (ARN) of the compute environment.
[$sel:computeEnvironment:ComputeEnvironmentOrder'] :: ComputeEnvironmentOrder -> Text

-- | Create a value of <a>ComputeEnvironmentOrder</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:order:ComputeEnvironmentOrder'</a>,
--   <a>computeEnvironmentOrder_order</a> - The order of the compute
--   environment. Compute environments are tried in ascending order. For
--   example, if two compute environments are associated with a job queue,
--   the compute environment with a lower <tt>order</tt> integer value is
--   tried for job placement first.
--   
--   <a>$sel:computeEnvironment:ComputeEnvironmentOrder'</a>,
--   <a>computeEnvironmentOrder_computeEnvironment</a> - The Amazon
--   Resource Name (ARN) of the compute environment.
newComputeEnvironmentOrder :: Int -> Text -> ComputeEnvironmentOrder

-- | The order of the compute environment. Compute environments are tried
--   in ascending order. For example, if two compute environments are
--   associated with a job queue, the compute environment with a lower
--   <tt>order</tt> integer value is tried for job placement first.
computeEnvironmentOrder_order :: Lens' ComputeEnvironmentOrder Int

-- | The Amazon Resource Name (ARN) of the compute environment.
computeEnvironmentOrder_computeEnvironment :: Lens' ComputeEnvironmentOrder Text

-- | An object representing an Batch compute resource. For more
--   information, see <a>Compute Environments</a> in the <i>Batch User
--   Guide</i>.
--   
--   <i>See:</i> <a>newComputeResource</a> smart constructor.
data ComputeResource
ComputeResource' :: Maybe [Text] -> Maybe [Text] -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe [Ec2Configuration] -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe LaunchTemplateSpecification -> Maybe Int -> Maybe CRAllocationStrategy -> Maybe Text -> Maybe (HashMap Text Text) -> CRType -> Int -> [Text] -> ComputeResource

-- | The Amazon EC2 security groups associated with instances launched in
--   the compute environment. One or more security groups must be
--   specified, either in <tt>securityGroupIds</tt> or using a launch
--   template referenced in <tt>launchTemplate</tt>. This parameter is
--   required for jobs that are running on Fargate resources and must
--   contain at least one security group. Fargate doesn't support launch
--   templates. If security groups are specified using both
--   <tt>securityGroupIds</tt> and <tt>launchTemplate</tt>, the values in
--   <tt>securityGroupIds</tt> are used.
[$sel:securityGroupIds:ComputeResource'] :: ComputeResource -> Maybe [Text]

-- | The instances types that can be launched. You can specify instance
--   families to launch any instance type within those families (for
--   example, <tt>c5</tt> or <tt>p3</tt>), or you can specify specific
--   sizes within a family (such as <tt>c5.8xlarge</tt>). You can also
--   choose <tt>optimal</tt> to select instance types (from the C4, M4, and
--   R4 instance families) that match the demand of your job queues.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources, and shouldn't be specified.
--   
--   When you create a compute environment, the instance types that you
--   select for the compute environment must share the same architecture.
--   For example, you can't mix x86 and ARM instances in the same compute
--   environment.
--   
--   Currently, <tt>optimal</tt> uses instance types from the C4, M4, and
--   R4 instance families. In Regions that don't have instance types from
--   those instance families, instance types from the C5, M5. and R5
--   instance families are used.
[$sel:instanceTypes:ComputeResource'] :: ComputeResource -> Maybe [Text]

-- | The Amazon ECS instance profile applied to Amazon EC2 instances in a
--   compute environment. You can specify the short name or full Amazon
--   Resource Name (ARN) of an instance profile. For example, <tt>
--   ecsInstanceRole </tt> or
--   <tt>arn:aws:iam::&lt;aws_account_id&gt;:instance-profile/ecsInstanceRole
--   </tt>. For more information, see <a>Amazon ECS Instance Role</a> in
--   the <i>Batch User Guide</i>.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources, and shouldn't be specified.
[$sel:instanceRole:ComputeResource'] :: ComputeResource -> Maybe Text

-- | The Amazon EC2 key pair that's used for instances launched in the
--   compute environment. You can use this key pair to log in to your
--   instances with SSH.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources, and shouldn't be specified.
[$sel:ec2KeyPair:ComputeResource'] :: ComputeResource -> Maybe Text

-- | The minimum number of Amazon EC2 vCPUs that an environment should
--   maintain (even if the compute environment is <tt>DISABLED</tt>).
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources, and shouldn't be specified.
[$sel:minvCpus:ComputeResource'] :: ComputeResource -> Maybe Int

-- | Provides information used to select Amazon Machine Images (AMIs) for
--   EC2 instances in the compute environment. If <tt>Ec2Configuration</tt>
--   isn't specified, the default is <tt>ECS_AL1</tt>.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources, and shouldn't be specified.
[$sel:ec2Configuration:ComputeResource'] :: ComputeResource -> Maybe [Ec2Configuration]

-- | The maximum percentage that a Spot Instance price can be when compared
--   with the On-Demand price for that instance type before instances are
--   launched. For example, if your maximum percentage is 20%, then the
--   Spot price must be less than 20% of the current On-Demand price for
--   that Amazon EC2 instance. You always pay the lowest (market) price and
--   never more than your maximum percentage. If you leave this field
--   empty, the default value is 100% of the On-Demand price.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources, and shouldn't be specified.
[$sel:bidPercentage:ComputeResource'] :: ComputeResource -> Maybe Int

-- | The Amazon Resource Name (ARN) of the Amazon EC2 Spot Fleet IAM role
--   applied to a <tt>SPOT</tt> compute environment. This role is required
--   if the allocation strategy set to <tt>BEST_FIT</tt> or if the
--   allocation strategy isn't specified. For more information, see
--   <a>Amazon EC2 Spot Fleet Role</a> in the <i>Batch User Guide</i>.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources, and shouldn't be specified.
--   
--   To tag your Spot Instances on creation, the Spot Fleet IAM role
--   specified here must use the newer <b>AmazonEC2SpotFleetTaggingRole</b>
--   managed policy. The previously recommended
--   <b>AmazonEC2SpotFleetRole</b> managed policy doesn't have the required
--   permissions to tag Spot Instances. For more information, see <a>Spot
--   Instances not tagged on creation</a> in the <i>Batch User Guide</i>.
[$sel:spotIamFleetRole:ComputeResource'] :: ComputeResource -> Maybe Text

-- | The Amazon Machine Image (AMI) ID used for instances launched in the
--   compute environment. This parameter is overridden by the
--   <tt>imageIdOverride</tt> member of the <tt>Ec2Configuration</tt>
--   structure.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources, and shouldn't be specified.
--   
--   The AMI that you choose for a compute environment must match the
--   architecture of the instance types that you intend to use for that
--   compute environment. For example, if your compute environment uses A1
--   instance types, the compute resource AMI that you choose must support
--   ARM instances. Amazon ECS vends both x86 and ARM versions of the
--   Amazon ECS-optimized Amazon Linux 2 AMI. For more information, see
--   <a>Amazon ECS-optimized Amazon Linux 2 AMI</a> in the <i>Amazon
--   Elastic Container Service Developer Guide</i>.
[$sel:imageId:ComputeResource'] :: ComputeResource -> Maybe Text

-- | The launch template to use for your compute resources. Any other
--   compute resource parameters that you specify in a
--   CreateComputeEnvironment API operation override the same parameters in
--   the launch template. You must specify either the launch template ID or
--   launch template name in the request, but not both. For more
--   information, see <a>Launch Template Support</a> in the <i>Batch User
--   Guide</i>.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources, and shouldn't be specified.
[$sel:launchTemplate:ComputeResource'] :: ComputeResource -> Maybe LaunchTemplateSpecification

-- | The desired number of Amazon EC2 vCPUS in the compute environment.
--   Batch modifies this value between the minimum and maximum values,
--   based on job queue demand.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources, and shouldn't be specified.
[$sel:desiredvCpus:ComputeResource'] :: ComputeResource -> Maybe Int

-- | The allocation strategy to use for the compute resource if not enough
--   instances of the best fitting instance type can be allocated. This
--   might be because of availability of the instance type in the Region or
--   <a>Amazon EC2 service limits</a>. For more information, see
--   <a>Allocation Strategies</a> in the <i>Batch User Guide</i>.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources, and shouldn't be specified.
--   
--   <ul>
--   <li><i>BEST_FIT (default)</i> Batch selects an instance type that best
--   fits the needs of the jobs with a preference for the lowest-cost
--   instance type. If additional instances of the selected instance type
--   aren't available, Batch waits for the additional instances to be
--   available. If there aren't enough instances available, or if the user
--   is reaching <a>Amazon EC2 service limits</a> then additional jobs
--   aren't run until the currently running jobs have completed. This
--   allocation strategy keeps costs lower but can limit scaling. If you
--   are using Spot Fleets with <tt>BEST_FIT</tt> then the Spot Fleet IAM
--   Role must be specified.</li>
--   <li><i>BEST_FIT_PROGRESSIVE</i> Batch will select additional instance
--   types that are large enough to meet the requirements of the jobs in
--   the queue, with a preference for instance types with a lower cost per
--   unit vCPU. If additional instances of the previously selected instance
--   types aren't available, Batch will select new instance types.</li>
--   <li><i>SPOT_CAPACITY_OPTIMIZED</i> Batch will select one or more
--   instance types that are large enough to meet the requirements of the
--   jobs in the queue, with a preference for instance types that are less
--   likely to be interrupted. This allocation strategy is only available
--   for Spot Instance compute resources.</li>
--   </ul>
--   
--   With both <tt>BEST_FIT_PROGRESSIVE</tt> and
--   <tt>SPOT_CAPACITY_OPTIMIZED</tt> strategies, Batch might need to go
--   above <tt>maxvCpus</tt> to meet your capacity requirements. In this
--   event, Batch never exceeds <tt>maxvCpus</tt> by more than a single
--   instance.
[$sel:allocationStrategy:ComputeResource'] :: ComputeResource -> Maybe CRAllocationStrategy

-- | The Amazon EC2 placement group to associate with your compute
--   resources. If you intend to submit multi-node parallel jobs to your
--   compute environment, you should consider creating a cluster placement
--   group and associate it with your compute resources. This keeps your
--   multi-node parallel job on a logical grouping of instances within a
--   single Availability Zone with high network flow potential. For more
--   information, see <a>Placement Groups</a> in the <i>Amazon EC2 User
--   Guide for Linux Instances</i>.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources, and shouldn't be specified.
[$sel:placementGroup:ComputeResource'] :: ComputeResource -> Maybe Text

-- | Key-value pair tags to be applied to EC2 resources that are launched
--   in the compute environment. For Batch, these take the form of
--   "String1": "String2", where String1 is the tag key and String2 is the
--   tag value−for example, <tt>{ "Name": "Batch Instance - C4OnDemand"
--   }</tt>. This is helpful for recognizing your Batch instances in the
--   Amazon EC2 console. These tags can't be updated or removed after the
--   compute environment is created.Aany changes to these tags require that
--   you create a new compute environment and remove the old compute
--   environment. These tags aren't seen when using the Batch
--   <tt>ListTagsForResource</tt> API operation.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources, and shouldn't be specified.
[$sel:tags:ComputeResource'] :: ComputeResource -> Maybe (HashMap Text Text)

-- | The type of compute environment: <tt>EC2</tt>, <tt>SPOT</tt>,
--   <tt>FARGATE</tt>, or <tt>FARGATE_SPOT</tt>. For more information, see
--   <a>Compute Environments</a> in the <i>Batch User Guide</i>.
--   
--   If you choose <tt>SPOT</tt>, you must also specify an Amazon EC2 Spot
--   Fleet role with the <tt>spotIamFleetRole</tt> parameter. For more
--   information, see <a>Amazon EC2 Spot Fleet role</a> in the <i>Batch
--   User Guide</i>.
[$sel:type':ComputeResource'] :: ComputeResource -> CRType

-- | The maximum number of Amazon EC2 vCPUs that a compute environment can
--   reach.
--   
--   With both <tt>BEST_FIT_PROGRESSIVE</tt> and
--   <tt>SPOT_CAPACITY_OPTIMIZED</tt> allocation strategies, Batch might
--   need to exceed <tt>maxvCpus</tt> to meet your capacity requirements.
--   In this event, Batch never exceeds <tt>maxvCpus</tt> by more than a
--   single instance. For example, no more than a single instance from
--   among those specified in your compute environment is allocated.
[$sel:maxvCpus:ComputeResource'] :: ComputeResource -> Int

-- | The VPC subnets where the compute resources are launched. These
--   subnets must be within the same VPC. Fargate compute resources can
--   contain up to 16 subnets. For more information, see <a>VPCs and
--   Subnets</a> in the <i>Amazon VPC User Guide</i>.
[$sel:subnets:ComputeResource'] :: ComputeResource -> [Text]

-- | Create a value of <a>ComputeResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:securityGroupIds:ComputeResource'</a>,
--   <a>computeResource_securityGroupIds</a> - The Amazon EC2 security
--   groups associated with instances launched in the compute environment.
--   One or more security groups must be specified, either in
--   <tt>securityGroupIds</tt> or using a launch template referenced in
--   <tt>launchTemplate</tt>. This parameter is required for jobs that are
--   running on Fargate resources and must contain at least one security
--   group. Fargate doesn't support launch templates. If security groups
--   are specified using both <tt>securityGroupIds</tt> and
--   <tt>launchTemplate</tt>, the values in <tt>securityGroupIds</tt> are
--   used.
--   
--   <a>$sel:instanceTypes:ComputeResource'</a>,
--   <a>computeResource_instanceTypes</a> - The instances types that can be
--   launched. You can specify instance families to launch any instance
--   type within those families (for example, <tt>c5</tt> or <tt>p3</tt>),
--   or you can specify specific sizes within a family (such as
--   <tt>c5.8xlarge</tt>). You can also choose <tt>optimal</tt> to select
--   instance types (from the C4, M4, and R4 instance families) that match
--   the demand of your job queues.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources, and shouldn't be specified.
--   
--   When you create a compute environment, the instance types that you
--   select for the compute environment must share the same architecture.
--   For example, you can't mix x86 and ARM instances in the same compute
--   environment.
--   
--   Currently, <tt>optimal</tt> uses instance types from the C4, M4, and
--   R4 instance families. In Regions that don't have instance types from
--   those instance families, instance types from the C5, M5. and R5
--   instance families are used.
--   
--   <a>$sel:instanceRole:ComputeResource'</a>,
--   <a>computeResource_instanceRole</a> - The Amazon ECS instance profile
--   applied to Amazon EC2 instances in a compute environment. You can
--   specify the short name or full Amazon Resource Name (ARN) of an
--   instance profile. For example, <tt> ecsInstanceRole </tt> or
--   <tt>arn:aws:iam::&lt;aws_account_id&gt;:instance-profile/ecsInstanceRole
--   </tt>. For more information, see <a>Amazon ECS Instance Role</a> in
--   the <i>Batch User Guide</i>.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources, and shouldn't be specified.
--   
--   <a>$sel:ec2KeyPair:ComputeResource'</a>,
--   <a>computeResource_ec2KeyPair</a> - The Amazon EC2 key pair that's
--   used for instances launched in the compute environment. You can use
--   this key pair to log in to your instances with SSH.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources, and shouldn't be specified.
--   
--   <a>$sel:minvCpus:ComputeResource'</a>, <a>computeResource_minvCpus</a>
--   - The minimum number of Amazon EC2 vCPUs that an environment should
--   maintain (even if the compute environment is <tt>DISABLED</tt>).
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources, and shouldn't be specified.
--   
--   <a>$sel:ec2Configuration:ComputeResource'</a>,
--   <a>computeResource_ec2Configuration</a> - Provides information used to
--   select Amazon Machine Images (AMIs) for EC2 instances in the compute
--   environment. If <tt>Ec2Configuration</tt> isn't specified, the default
--   is <tt>ECS_AL1</tt>.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources, and shouldn't be specified.
--   
--   <a>$sel:bidPercentage:ComputeResource'</a>,
--   <a>computeResource_bidPercentage</a> - The maximum percentage that a
--   Spot Instance price can be when compared with the On-Demand price for
--   that instance type before instances are launched. For example, if your
--   maximum percentage is 20%, then the Spot price must be less than 20%
--   of the current On-Demand price for that Amazon EC2 instance. You
--   always pay the lowest (market) price and never more than your maximum
--   percentage. If you leave this field empty, the default value is 100%
--   of the On-Demand price.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources, and shouldn't be specified.
--   
--   <a>$sel:spotIamFleetRole:ComputeResource'</a>,
--   <a>computeResource_spotIamFleetRole</a> - The Amazon Resource Name
--   (ARN) of the Amazon EC2 Spot Fleet IAM role applied to a <tt>SPOT</tt>
--   compute environment. This role is required if the allocation strategy
--   set to <tt>BEST_FIT</tt> or if the allocation strategy isn't
--   specified. For more information, see <a>Amazon EC2 Spot Fleet Role</a>
--   in the <i>Batch User Guide</i>.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources, and shouldn't be specified.
--   
--   To tag your Spot Instances on creation, the Spot Fleet IAM role
--   specified here must use the newer <b>AmazonEC2SpotFleetTaggingRole</b>
--   managed policy. The previously recommended
--   <b>AmazonEC2SpotFleetRole</b> managed policy doesn't have the required
--   permissions to tag Spot Instances. For more information, see <a>Spot
--   Instances not tagged on creation</a> in the <i>Batch User Guide</i>.
--   
--   <a>$sel:imageId:ComputeResource'</a>, <a>computeResource_imageId</a> -
--   The Amazon Machine Image (AMI) ID used for instances launched in the
--   compute environment. This parameter is overridden by the
--   <tt>imageIdOverride</tt> member of the <tt>Ec2Configuration</tt>
--   structure.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources, and shouldn't be specified.
--   
--   The AMI that you choose for a compute environment must match the
--   architecture of the instance types that you intend to use for that
--   compute environment. For example, if your compute environment uses A1
--   instance types, the compute resource AMI that you choose must support
--   ARM instances. Amazon ECS vends both x86 and ARM versions of the
--   Amazon ECS-optimized Amazon Linux 2 AMI. For more information, see
--   <a>Amazon ECS-optimized Amazon Linux 2 AMI</a> in the <i>Amazon
--   Elastic Container Service Developer Guide</i>.
--   
--   <a>$sel:launchTemplate:ComputeResource'</a>,
--   <a>computeResource_launchTemplate</a> - The launch template to use for
--   your compute resources. Any other compute resource parameters that you
--   specify in a CreateComputeEnvironment API operation override the same
--   parameters in the launch template. You must specify either the launch
--   template ID or launch template name in the request, but not both. For
--   more information, see <a>Launch Template Support</a> in the <i>Batch
--   User Guide</i>.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources, and shouldn't be specified.
--   
--   <a>$sel:desiredvCpus:ComputeResource'</a>,
--   <a>computeResource_desiredvCpus</a> - The desired number of Amazon EC2
--   vCPUS in the compute environment. Batch modifies this value between
--   the minimum and maximum values, based on job queue demand.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources, and shouldn't be specified.
--   
--   <a>$sel:allocationStrategy:ComputeResource'</a>,
--   <a>computeResource_allocationStrategy</a> - The allocation strategy to
--   use for the compute resource if not enough instances of the best
--   fitting instance type can be allocated. This might be because of
--   availability of the instance type in the Region or <a>Amazon EC2
--   service limits</a>. For more information, see <a>Allocation
--   Strategies</a> in the <i>Batch User Guide</i>.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources, and shouldn't be specified.
--   
--   <ul>
--   <li><i>BEST_FIT (default)</i> Batch selects an instance type that best
--   fits the needs of the jobs with a preference for the lowest-cost
--   instance type. If additional instances of the selected instance type
--   aren't available, Batch waits for the additional instances to be
--   available. If there aren't enough instances available, or if the user
--   is reaching <a>Amazon EC2 service limits</a> then additional jobs
--   aren't run until the currently running jobs have completed. This
--   allocation strategy keeps costs lower but can limit scaling. If you
--   are using Spot Fleets with <tt>BEST_FIT</tt> then the Spot Fleet IAM
--   Role must be specified.</li>
--   <li><i>BEST_FIT_PROGRESSIVE</i> Batch will select additional instance
--   types that are large enough to meet the requirements of the jobs in
--   the queue, with a preference for instance types with a lower cost per
--   unit vCPU. If additional instances of the previously selected instance
--   types aren't available, Batch will select new instance types.</li>
--   <li><i>SPOT_CAPACITY_OPTIMIZED</i> Batch will select one or more
--   instance types that are large enough to meet the requirements of the
--   jobs in the queue, with a preference for instance types that are less
--   likely to be interrupted. This allocation strategy is only available
--   for Spot Instance compute resources.</li>
--   </ul>
--   
--   With both <tt>BEST_FIT_PROGRESSIVE</tt> and
--   <tt>SPOT_CAPACITY_OPTIMIZED</tt> strategies, Batch might need to go
--   above <tt>maxvCpus</tt> to meet your capacity requirements. In this
--   event, Batch never exceeds <tt>maxvCpus</tt> by more than a single
--   instance.
--   
--   <a>$sel:placementGroup:ComputeResource'</a>,
--   <a>computeResource_placementGroup</a> - The Amazon EC2 placement group
--   to associate with your compute resources. If you intend to submit
--   multi-node parallel jobs to your compute environment, you should
--   consider creating a cluster placement group and associate it with your
--   compute resources. This keeps your multi-node parallel job on a
--   logical grouping of instances within a single Availability Zone with
--   high network flow potential. For more information, see <a>Placement
--   Groups</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources, and shouldn't be specified.
--   
--   <a>$sel:tags:ComputeResource'</a>, <a>computeResource_tags</a> -
--   Key-value pair tags to be applied to EC2 resources that are launched
--   in the compute environment. For Batch, these take the form of
--   "String1": "String2", where String1 is the tag key and String2 is the
--   tag value−for example, <tt>{ "Name": "Batch Instance - C4OnDemand"
--   }</tt>. This is helpful for recognizing your Batch instances in the
--   Amazon EC2 console. These tags can't be updated or removed after the
--   compute environment is created.Aany changes to these tags require that
--   you create a new compute environment and remove the old compute
--   environment. These tags aren't seen when using the Batch
--   <tt>ListTagsForResource</tt> API operation.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources, and shouldn't be specified.
--   
--   <a>$sel:type':ComputeResource'</a>, <a>computeResource_type</a> - The
--   type of compute environment: <tt>EC2</tt>, <tt>SPOT</tt>,
--   <tt>FARGATE</tt>, or <tt>FARGATE_SPOT</tt>. For more information, see
--   <a>Compute Environments</a> in the <i>Batch User Guide</i>.
--   
--   If you choose <tt>SPOT</tt>, you must also specify an Amazon EC2 Spot
--   Fleet role with the <tt>spotIamFleetRole</tt> parameter. For more
--   information, see <a>Amazon EC2 Spot Fleet role</a> in the <i>Batch
--   User Guide</i>.
--   
--   <a>$sel:maxvCpus:ComputeResource'</a>, <a>computeResource_maxvCpus</a>
--   - The maximum number of Amazon EC2 vCPUs that a compute environment
--   can reach.
--   
--   With both <tt>BEST_FIT_PROGRESSIVE</tt> and
--   <tt>SPOT_CAPACITY_OPTIMIZED</tt> allocation strategies, Batch might
--   need to exceed <tt>maxvCpus</tt> to meet your capacity requirements.
--   In this event, Batch never exceeds <tt>maxvCpus</tt> by more than a
--   single instance. For example, no more than a single instance from
--   among those specified in your compute environment is allocated.
--   
--   <a>$sel:subnets:ComputeResource'</a>, <a>computeResource_subnets</a> -
--   The VPC subnets where the compute resources are launched. These
--   subnets must be within the same VPC. Fargate compute resources can
--   contain up to 16 subnets. For more information, see <a>VPCs and
--   Subnets</a> in the <i>Amazon VPC User Guide</i>.
newComputeResource :: CRType -> Int -> ComputeResource

-- | The Amazon EC2 security groups associated with instances launched in
--   the compute environment. One or more security groups must be
--   specified, either in <tt>securityGroupIds</tt> or using a launch
--   template referenced in <tt>launchTemplate</tt>. This parameter is
--   required for jobs that are running on Fargate resources and must
--   contain at least one security group. Fargate doesn't support launch
--   templates. If security groups are specified using both
--   <tt>securityGroupIds</tt> and <tt>launchTemplate</tt>, the values in
--   <tt>securityGroupIds</tt> are used.
computeResource_securityGroupIds :: Lens' ComputeResource (Maybe [Text])

-- | The instances types that can be launched. You can specify instance
--   families to launch any instance type within those families (for
--   example, <tt>c5</tt> or <tt>p3</tt>), or you can specify specific
--   sizes within a family (such as <tt>c5.8xlarge</tt>). You can also
--   choose <tt>optimal</tt> to select instance types (from the C4, M4, and
--   R4 instance families) that match the demand of your job queues.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources, and shouldn't be specified.
--   
--   When you create a compute environment, the instance types that you
--   select for the compute environment must share the same architecture.
--   For example, you can't mix x86 and ARM instances in the same compute
--   environment.
--   
--   Currently, <tt>optimal</tt> uses instance types from the C4, M4, and
--   R4 instance families. In Regions that don't have instance types from
--   those instance families, instance types from the C5, M5. and R5
--   instance families are used.
computeResource_instanceTypes :: Lens' ComputeResource (Maybe [Text])

-- | The Amazon ECS instance profile applied to Amazon EC2 instances in a
--   compute environment. You can specify the short name or full Amazon
--   Resource Name (ARN) of an instance profile. For example, <tt>
--   ecsInstanceRole </tt> or
--   <tt>arn:aws:iam::&lt;aws_account_id&gt;:instance-profile/ecsInstanceRole
--   </tt>. For more information, see <a>Amazon ECS Instance Role</a> in
--   the <i>Batch User Guide</i>.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources, and shouldn't be specified.
computeResource_instanceRole :: Lens' ComputeResource (Maybe Text)

-- | The Amazon EC2 key pair that's used for instances launched in the
--   compute environment. You can use this key pair to log in to your
--   instances with SSH.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources, and shouldn't be specified.
computeResource_ec2KeyPair :: Lens' ComputeResource (Maybe Text)

-- | The minimum number of Amazon EC2 vCPUs that an environment should
--   maintain (even if the compute environment is <tt>DISABLED</tt>).
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources, and shouldn't be specified.
computeResource_minvCpus :: Lens' ComputeResource (Maybe Int)

-- | Provides information used to select Amazon Machine Images (AMIs) for
--   EC2 instances in the compute environment. If <tt>Ec2Configuration</tt>
--   isn't specified, the default is <tt>ECS_AL1</tt>.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources, and shouldn't be specified.
computeResource_ec2Configuration :: Lens' ComputeResource (Maybe [Ec2Configuration])

-- | The maximum percentage that a Spot Instance price can be when compared
--   with the On-Demand price for that instance type before instances are
--   launched. For example, if your maximum percentage is 20%, then the
--   Spot price must be less than 20% of the current On-Demand price for
--   that Amazon EC2 instance. You always pay the lowest (market) price and
--   never more than your maximum percentage. If you leave this field
--   empty, the default value is 100% of the On-Demand price.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources, and shouldn't be specified.
computeResource_bidPercentage :: Lens' ComputeResource (Maybe Int)

-- | The Amazon Resource Name (ARN) of the Amazon EC2 Spot Fleet IAM role
--   applied to a <tt>SPOT</tt> compute environment. This role is required
--   if the allocation strategy set to <tt>BEST_FIT</tt> or if the
--   allocation strategy isn't specified. For more information, see
--   <a>Amazon EC2 Spot Fleet Role</a> in the <i>Batch User Guide</i>.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources, and shouldn't be specified.
--   
--   To tag your Spot Instances on creation, the Spot Fleet IAM role
--   specified here must use the newer <b>AmazonEC2SpotFleetTaggingRole</b>
--   managed policy. The previously recommended
--   <b>AmazonEC2SpotFleetRole</b> managed policy doesn't have the required
--   permissions to tag Spot Instances. For more information, see <a>Spot
--   Instances not tagged on creation</a> in the <i>Batch User Guide</i>.
computeResource_spotIamFleetRole :: Lens' ComputeResource (Maybe Text)

-- | The Amazon Machine Image (AMI) ID used for instances launched in the
--   compute environment. This parameter is overridden by the
--   <tt>imageIdOverride</tt> member of the <tt>Ec2Configuration</tt>
--   structure.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources, and shouldn't be specified.
--   
--   The AMI that you choose for a compute environment must match the
--   architecture of the instance types that you intend to use for that
--   compute environment. For example, if your compute environment uses A1
--   instance types, the compute resource AMI that you choose must support
--   ARM instances. Amazon ECS vends both x86 and ARM versions of the
--   Amazon ECS-optimized Amazon Linux 2 AMI. For more information, see
--   <a>Amazon ECS-optimized Amazon Linux 2 AMI</a> in the <i>Amazon
--   Elastic Container Service Developer Guide</i>.
computeResource_imageId :: Lens' ComputeResource (Maybe Text)

-- | The launch template to use for your compute resources. Any other
--   compute resource parameters that you specify in a
--   CreateComputeEnvironment API operation override the same parameters in
--   the launch template. You must specify either the launch template ID or
--   launch template name in the request, but not both. For more
--   information, see <a>Launch Template Support</a> in the <i>Batch User
--   Guide</i>.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources, and shouldn't be specified.
computeResource_launchTemplate :: Lens' ComputeResource (Maybe LaunchTemplateSpecification)

-- | The desired number of Amazon EC2 vCPUS in the compute environment.
--   Batch modifies this value between the minimum and maximum values,
--   based on job queue demand.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources, and shouldn't be specified.
computeResource_desiredvCpus :: Lens' ComputeResource (Maybe Int)

-- | The allocation strategy to use for the compute resource if not enough
--   instances of the best fitting instance type can be allocated. This
--   might be because of availability of the instance type in the Region or
--   <a>Amazon EC2 service limits</a>. For more information, see
--   <a>Allocation Strategies</a> in the <i>Batch User Guide</i>.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources, and shouldn't be specified.
--   
--   <ul>
--   <li><i>BEST_FIT (default)</i> Batch selects an instance type that best
--   fits the needs of the jobs with a preference for the lowest-cost
--   instance type. If additional instances of the selected instance type
--   aren't available, Batch waits for the additional instances to be
--   available. If there aren't enough instances available, or if the user
--   is reaching <a>Amazon EC2 service limits</a> then additional jobs
--   aren't run until the currently running jobs have completed. This
--   allocation strategy keeps costs lower but can limit scaling. If you
--   are using Spot Fleets with <tt>BEST_FIT</tt> then the Spot Fleet IAM
--   Role must be specified.</li>
--   <li><i>BEST_FIT_PROGRESSIVE</i> Batch will select additional instance
--   types that are large enough to meet the requirements of the jobs in
--   the queue, with a preference for instance types with a lower cost per
--   unit vCPU. If additional instances of the previously selected instance
--   types aren't available, Batch will select new instance types.</li>
--   <li><i>SPOT_CAPACITY_OPTIMIZED</i> Batch will select one or more
--   instance types that are large enough to meet the requirements of the
--   jobs in the queue, with a preference for instance types that are less
--   likely to be interrupted. This allocation strategy is only available
--   for Spot Instance compute resources.</li>
--   </ul>
--   
--   With both <tt>BEST_FIT_PROGRESSIVE</tt> and
--   <tt>SPOT_CAPACITY_OPTIMIZED</tt> strategies, Batch might need to go
--   above <tt>maxvCpus</tt> to meet your capacity requirements. In this
--   event, Batch never exceeds <tt>maxvCpus</tt> by more than a single
--   instance.
computeResource_allocationStrategy :: Lens' ComputeResource (Maybe CRAllocationStrategy)

-- | The Amazon EC2 placement group to associate with your compute
--   resources. If you intend to submit multi-node parallel jobs to your
--   compute environment, you should consider creating a cluster placement
--   group and associate it with your compute resources. This keeps your
--   multi-node parallel job on a logical grouping of instances within a
--   single Availability Zone with high network flow potential. For more
--   information, see <a>Placement Groups</a> in the <i>Amazon EC2 User
--   Guide for Linux Instances</i>.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources, and shouldn't be specified.
computeResource_placementGroup :: Lens' ComputeResource (Maybe Text)

-- | Key-value pair tags to be applied to EC2 resources that are launched
--   in the compute environment. For Batch, these take the form of
--   "String1": "String2", where String1 is the tag key and String2 is the
--   tag value−for example, <tt>{ "Name": "Batch Instance - C4OnDemand"
--   }</tt>. This is helpful for recognizing your Batch instances in the
--   Amazon EC2 console. These tags can't be updated or removed after the
--   compute environment is created.Aany changes to these tags require that
--   you create a new compute environment and remove the old compute
--   environment. These tags aren't seen when using the Batch
--   <tt>ListTagsForResource</tt> API operation.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources, and shouldn't be specified.
computeResource_tags :: Lens' ComputeResource (Maybe (HashMap Text Text))

-- | The type of compute environment: <tt>EC2</tt>, <tt>SPOT</tt>,
--   <tt>FARGATE</tt>, or <tt>FARGATE_SPOT</tt>. For more information, see
--   <a>Compute Environments</a> in the <i>Batch User Guide</i>.
--   
--   If you choose <tt>SPOT</tt>, you must also specify an Amazon EC2 Spot
--   Fleet role with the <tt>spotIamFleetRole</tt> parameter. For more
--   information, see <a>Amazon EC2 Spot Fleet role</a> in the <i>Batch
--   User Guide</i>.
computeResource_type :: Lens' ComputeResource CRType

-- | The maximum number of Amazon EC2 vCPUs that a compute environment can
--   reach.
--   
--   With both <tt>BEST_FIT_PROGRESSIVE</tt> and
--   <tt>SPOT_CAPACITY_OPTIMIZED</tt> allocation strategies, Batch might
--   need to exceed <tt>maxvCpus</tt> to meet your capacity requirements.
--   In this event, Batch never exceeds <tt>maxvCpus</tt> by more than a
--   single instance. For example, no more than a single instance from
--   among those specified in your compute environment is allocated.
computeResource_maxvCpus :: Lens' ComputeResource Int

-- | The VPC subnets where the compute resources are launched. These
--   subnets must be within the same VPC. Fargate compute resources can
--   contain up to 16 subnets. For more information, see <a>VPCs and
--   Subnets</a> in the <i>Amazon VPC User Guide</i>.
computeResource_subnets :: Lens' ComputeResource [Text]

-- | An object representing the attributes of a compute environment that
--   can be updated. For more information, see <a>Compute Environments</a>
--   in the <i>Batch User Guide</i>.
--   
--   <i>See:</i> <a>newComputeResourceUpdate</a> smart constructor.
data ComputeResourceUpdate
ComputeResourceUpdate' :: Maybe [Text] -> Maybe [Text] -> Maybe Int -> Maybe Int -> Maybe Int -> ComputeResourceUpdate

-- | The Amazon EC2 security groups associated with instances launched in
--   the compute environment. This parameter is required for Fargate
--   compute resources, where it can contain up to 5 security groups. This
--   can't be specified for EC2 compute resources. Providing an empty list
--   is handled as if this parameter wasn't specified and no change is
--   made.
[$sel:securityGroupIds:ComputeResourceUpdate'] :: ComputeResourceUpdate -> Maybe [Text]

-- | The VPC subnets where the compute resources are launched. Fargate
--   compute resources can contain up to 16 subnets. Providing an empty
--   list will be handled as if this parameter wasn't specified and no
--   change is made. This can't be specified for EC2 compute resources. For
--   more information, see <a>VPCs and Subnets</a> in the <i>Amazon VPC
--   User Guide</i>.
[$sel:subnets:ComputeResourceUpdate'] :: ComputeResourceUpdate -> Maybe [Text]

-- | The minimum number of Amazon EC2 vCPUs that an environment should
--   maintain.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources, and shouldn't be specified.
[$sel:minvCpus:ComputeResourceUpdate'] :: ComputeResourceUpdate -> Maybe Int

-- | The maximum number of Amazon EC2 vCPUs that an environment can reach.
--   
--   With both <tt>BEST_FIT_PROGRESSIVE</tt> and
--   <tt>SPOT_CAPACITY_OPTIMIZED</tt> allocation strategies, Batch might
--   need to exceed <tt>maxvCpus</tt> to meet your capacity requirements.
--   In this event, Batch never exceeds <tt>maxvCpus</tt> by more than a
--   single instance. That is, no more than a single instance from among
--   those specified in your compute environment.
[$sel:maxvCpus:ComputeResourceUpdate'] :: ComputeResourceUpdate -> Maybe Int

-- | The desired number of Amazon EC2 vCPUS in the compute environment.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources, and shouldn't be specified.
[$sel:desiredvCpus:ComputeResourceUpdate'] :: ComputeResourceUpdate -> Maybe Int

-- | Create a value of <a>ComputeResourceUpdate</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:securityGroupIds:ComputeResourceUpdate'</a>,
--   <a>computeResourceUpdate_securityGroupIds</a> - The Amazon EC2
--   security groups associated with instances launched in the compute
--   environment. This parameter is required for Fargate compute resources,
--   where it can contain up to 5 security groups. This can't be specified
--   for EC2 compute resources. Providing an empty list is handled as if
--   this parameter wasn't specified and no change is made.
--   
--   <a>$sel:subnets:ComputeResourceUpdate'</a>,
--   <a>computeResourceUpdate_subnets</a> - The VPC subnets where the
--   compute resources are launched. Fargate compute resources can contain
--   up to 16 subnets. Providing an empty list will be handled as if this
--   parameter wasn't specified and no change is made. This can't be
--   specified for EC2 compute resources. For more information, see <a>VPCs
--   and Subnets</a> in the <i>Amazon VPC User Guide</i>.
--   
--   <a>$sel:minvCpus:ComputeResourceUpdate'</a>,
--   <a>computeResourceUpdate_minvCpus</a> - The minimum number of Amazon
--   EC2 vCPUs that an environment should maintain.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources, and shouldn't be specified.
--   
--   <a>$sel:maxvCpus:ComputeResourceUpdate'</a>,
--   <a>computeResourceUpdate_maxvCpus</a> - The maximum number of Amazon
--   EC2 vCPUs that an environment can reach.
--   
--   With both <tt>BEST_FIT_PROGRESSIVE</tt> and
--   <tt>SPOT_CAPACITY_OPTIMIZED</tt> allocation strategies, Batch might
--   need to exceed <tt>maxvCpus</tt> to meet your capacity requirements.
--   In this event, Batch never exceeds <tt>maxvCpus</tt> by more than a
--   single instance. That is, no more than a single instance from among
--   those specified in your compute environment.
--   
--   <a>$sel:desiredvCpus:ComputeResourceUpdate'</a>,
--   <a>computeResourceUpdate_desiredvCpus</a> - The desired number of
--   Amazon EC2 vCPUS in the compute environment.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources, and shouldn't be specified.
newComputeResourceUpdate :: ComputeResourceUpdate

-- | The Amazon EC2 security groups associated with instances launched in
--   the compute environment. This parameter is required for Fargate
--   compute resources, where it can contain up to 5 security groups. This
--   can't be specified for EC2 compute resources. Providing an empty list
--   is handled as if this parameter wasn't specified and no change is
--   made.
computeResourceUpdate_securityGroupIds :: Lens' ComputeResourceUpdate (Maybe [Text])

-- | The VPC subnets where the compute resources are launched. Fargate
--   compute resources can contain up to 16 subnets. Providing an empty
--   list will be handled as if this parameter wasn't specified and no
--   change is made. This can't be specified for EC2 compute resources. For
--   more information, see <a>VPCs and Subnets</a> in the <i>Amazon VPC
--   User Guide</i>.
computeResourceUpdate_subnets :: Lens' ComputeResourceUpdate (Maybe [Text])

-- | The minimum number of Amazon EC2 vCPUs that an environment should
--   maintain.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources, and shouldn't be specified.
computeResourceUpdate_minvCpus :: Lens' ComputeResourceUpdate (Maybe Int)

-- | The maximum number of Amazon EC2 vCPUs that an environment can reach.
--   
--   With both <tt>BEST_FIT_PROGRESSIVE</tt> and
--   <tt>SPOT_CAPACITY_OPTIMIZED</tt> allocation strategies, Batch might
--   need to exceed <tt>maxvCpus</tt> to meet your capacity requirements.
--   In this event, Batch never exceeds <tt>maxvCpus</tt> by more than a
--   single instance. That is, no more than a single instance from among
--   those specified in your compute environment.
computeResourceUpdate_maxvCpus :: Lens' ComputeResourceUpdate (Maybe Int)

-- | The desired number of Amazon EC2 vCPUS in the compute environment.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources, and shouldn't be specified.
computeResourceUpdate_desiredvCpus :: Lens' ComputeResourceUpdate (Maybe Int)

-- | An object representing the details of a container that's part of a
--   job.
--   
--   <i>See:</i> <a>newContainerDetail</a> smart constructor.
data ContainerDetail
ContainerDetail' :: Maybe Text -> Maybe [Text] -> Maybe [Secret] -> Maybe [KeyValuePair] -> Maybe [NetworkInterface] -> Maybe Text -> Maybe [Ulimit] -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe Text -> Maybe [ResourceRequirement] -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe LogConfiguration -> Maybe LinuxParameters -> Maybe Text -> Maybe Text -> Maybe [MountPoint] -> Maybe Int -> Maybe FargatePlatformConfiguration -> Maybe Int -> Maybe Bool -> Maybe [Volume] -> Maybe NetworkConfiguration -> ContainerDetail

-- | The image used to start the container.
[$sel:image:ContainerDetail'] :: ContainerDetail -> Maybe Text

-- | The command that's passed to the container.
[$sel:command:ContainerDetail'] :: ContainerDetail -> Maybe [Text]

-- | The secrets to pass to the container. For more information, see
--   <a>Specifying sensitive data</a> in the <i>Batch User Guide</i>.
[$sel:secrets:ContainerDetail'] :: ContainerDetail -> Maybe [Secret]

-- | The environment variables to pass to a container.
--   
--   Environment variables must not start with <tt>AWS_BATCH</tt>; this
--   naming convention is reserved for variables that are set by the Batch
--   service.
[$sel:environment:ContainerDetail'] :: ContainerDetail -> Maybe [KeyValuePair]

-- | The network interfaces associated with the job.
[$sel:networkInterfaces:ContainerDetail'] :: ContainerDetail -> Maybe [NetworkInterface]

-- | The Amazon Resource Name (ARN) of the Amazon ECS task that's
--   associated with the container job. Each container attempt receives a
--   task ARN when they reach the <tt>STARTING</tt> status.
[$sel:taskArn:ContainerDetail'] :: ContainerDetail -> Maybe Text

-- | A list of <tt>ulimit</tt> values to set in the container. This
--   parameter maps to <tt>Ulimits</tt> in the <a>Create a container</a>
--   section of the <a>Docker Remote API</a> and the <tt>--ulimit</tt>
--   option to <a>docker run</a>.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources.
[$sel:ulimits:ContainerDetail'] :: ContainerDetail -> Maybe [Ulimit]

-- | The Amazon Resource Name (ARN) of the container instance that the
--   container is running on.
[$sel:containerInstanceArn:ContainerDetail'] :: ContainerDetail -> Maybe Text

-- | The Amazon Resource Name (ARN) of the execution role that Batch can
--   assume. For more information, see <a>Batch execution IAM role</a> in
--   the <i>Batch User Guide</i>.
[$sel:executionRoleArn:ContainerDetail'] :: ContainerDetail -> Maybe Text

-- | When this parameter is true, the container is given elevated
--   permissions on the host container instance (similar to the
--   <tt>root</tt> user). The default value is false.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources and shouldn't be provided, or specified as false.
[$sel:privileged:ContainerDetail'] :: ContainerDetail -> Maybe Bool

-- | The Amazon Resource Name (ARN) associated with the job upon execution.
[$sel:jobRoleArn:ContainerDetail'] :: ContainerDetail -> Maybe Text

-- | The type and amount of resources to assign to a container. The
--   supported resources include <tt>GPU</tt>, <tt>MEMORY</tt>, and
--   <tt>VCPU</tt>.
[$sel:resourceRequirements:ContainerDetail'] :: ContainerDetail -> Maybe [ResourceRequirement]

-- | The instance type of the underlying host infrastructure of a
--   multi-node parallel job.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources.
[$sel:instanceType:ContainerDetail'] :: ContainerDetail -> Maybe Text

-- | For jobs run on EC2 resources that didn't specify memory requirements
--   using <tt>ResourceRequirement</tt>, the number of MiB of memory
--   reserved for the job. For other jobs, including all run on Fargate
--   resources, see <tt>resourceRequirements</tt>.
[$sel:memory:ContainerDetail'] :: ContainerDetail -> Maybe Int

-- | The user name to use inside the container. This parameter maps to
--   <tt>User</tt> in the <a>Create a container</a> section of the
--   <a>Docker Remote API</a> and the <tt>--user</tt> option to <a>docker
--   run</a>.
[$sel:user:ContainerDetail'] :: ContainerDetail -> Maybe Text

-- | The log configuration specification for the container.
--   
--   This parameter maps to <tt>LogConfig</tt> in the <a>Create a
--   container</a> section of the <a>Docker Remote API</a> and the
--   <tt>--log-driver</tt> option to <a>docker run</a>. By default,
--   containers use the same logging driver that the Docker daemon uses.
--   However, the container might use a different logging driver than the
--   Docker daemon by specifying a log driver with this parameter in the
--   container definition. To use a different logging driver for a
--   container, the log system must be configured properly on the container
--   instance. Or, alternatively, it must be configured on a different log
--   server for remote logging options. For more information on the options
--   for different supported log drivers, see <a>Configure logging
--   drivers</a> in the Docker documentation.
--   
--   Batch currently supports a subset of the logging drivers available to
--   the Docker daemon (shown in the LogConfiguration data type).
--   Additional log drivers might be available in future releases of the
--   Amazon ECS container agent.
--   
--   This parameter requires version 1.18 of the Docker Remote API or
--   greater on your container instance. To check the Docker Remote API
--   version on your container instance, log into your container instance
--   and run the following command: <tt>sudo docker version | grep "Server
--   API version"</tt>
--   
--   The Amazon ECS container agent running on a container instance must
--   register the logging drivers available on that instance with the
--   <tt>ECS_AVAILABLE_LOGGING_DRIVERS</tt> environment variable before
--   containers placed on that instance can use these log configuration
--   options. For more information, see <a>Amazon ECS Container Agent
--   Configuration</a> in the <i>Amazon Elastic Container Service Developer
--   Guide</i>.
[$sel:logConfiguration:ContainerDetail'] :: ContainerDetail -> Maybe LogConfiguration

-- | Linux-specific modifications that are applied to the container, such
--   as details for device mappings.
[$sel:linuxParameters:ContainerDetail'] :: ContainerDetail -> Maybe LinuxParameters

-- | A short (255 max characters) human-readable string to provide
--   additional details about a running or stopped container.
[$sel:reason:ContainerDetail'] :: ContainerDetail -> Maybe Text

-- | The name of the CloudWatch Logs log stream associated with the
--   container. The log group for Batch jobs is <tt>/aws/batch/job</tt>.
--   Each container attempt receives a log stream name when they reach the
--   <tt>RUNNING</tt> status.
[$sel:logStreamName:ContainerDetail'] :: ContainerDetail -> Maybe Text

-- | The mount points for data volumes in your container.
[$sel:mountPoints:ContainerDetail'] :: ContainerDetail -> Maybe [MountPoint]

-- | The exit code to return upon completion.
[$sel:exitCode:ContainerDetail'] :: ContainerDetail -> Maybe Int

-- | The platform configuration for jobs that are running on Fargate
--   resources. Jobs that are running on EC2 resources must not specify
--   this parameter.
[$sel:fargatePlatformConfiguration:ContainerDetail'] :: ContainerDetail -> Maybe FargatePlatformConfiguration

-- | The number of vCPUs reserved for the container. For jobs that run on
--   EC2 resources, you can specify the vCPU requirement for the job using
--   <tt>resourceRequirements</tt>, but you can't specify the vCPU
--   requirements in both the <tt>vcpus</tt> and
--   <tt>resourceRequirement</tt> object. This parameter maps to
--   <tt>CpuShares</tt> in the <a>Create a container</a> section of the
--   <a>Docker Remote API</a> and the <tt>--cpu-shares</tt> option to
--   <a>docker run</a>. Each vCPU is equivalent to 1,024 CPU shares. You
--   must specify at least one vCPU. This is required but can be specified
--   in several places. It must be specified for each node at least once.
--   
--   This parameter isn't applicable to jobs that run on Fargate resources.
--   For jobs that run on Fargate resources, you must specify the vCPU
--   requirement for the job using <tt>resourceRequirements</tt>.
[$sel:vcpus:ContainerDetail'] :: ContainerDetail -> Maybe Int

-- | When this parameter is true, the container is given read-only access
--   to its root file system. This parameter maps to
--   <tt>ReadonlyRootfs</tt> in the <a>Create a container</a> section of
--   the <a>Docker Remote API</a> and the <tt>--read-only</tt> option to
--   <a>docker run</a> .
[$sel:readonlyRootFilesystem:ContainerDetail'] :: ContainerDetail -> Maybe Bool

-- | A list of volumes associated with the job.
[$sel:volumes:ContainerDetail'] :: ContainerDetail -> Maybe [Volume]

-- | The network configuration for jobs that are running on Fargate
--   resources. Jobs that are running on EC2 resources must not specify
--   this parameter.
[$sel:networkConfiguration:ContainerDetail'] :: ContainerDetail -> Maybe NetworkConfiguration

-- | Create a value of <a>ContainerDetail</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:image:ContainerDetail'</a>, <a>containerDetail_image</a> - The
--   image used to start the container.
--   
--   <a>$sel:command:ContainerDetail'</a>, <a>containerDetail_command</a> -
--   The command that's passed to the container.
--   
--   <a>$sel:secrets:ContainerDetail'</a>, <a>containerDetail_secrets</a> -
--   The secrets to pass to the container. For more information, see
--   <a>Specifying sensitive data</a> in the <i>Batch User Guide</i>.
--   
--   <a>$sel:environment:ContainerDetail'</a>,
--   <a>containerDetail_environment</a> - The environment variables to pass
--   to a container.
--   
--   Environment variables must not start with <tt>AWS_BATCH</tt>; this
--   naming convention is reserved for variables that are set by the Batch
--   service.
--   
--   <a>$sel:networkInterfaces:ContainerDetail'</a>,
--   <a>containerDetail_networkInterfaces</a> - The network interfaces
--   associated with the job.
--   
--   <a>$sel:taskArn:ContainerDetail'</a>, <a>containerDetail_taskArn</a> -
--   The Amazon Resource Name (ARN) of the Amazon ECS task that's
--   associated with the container job. Each container attempt receives a
--   task ARN when they reach the <tt>STARTING</tt> status.
--   
--   <a>$sel:ulimits:ContainerDetail'</a>, <a>containerDetail_ulimits</a> -
--   A list of <tt>ulimit</tt> values to set in the container. This
--   parameter maps to <tt>Ulimits</tt> in the <a>Create a container</a>
--   section of the <a>Docker Remote API</a> and the <tt>--ulimit</tt>
--   option to <a>docker run</a>.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources.
--   
--   <a>$sel:containerInstanceArn:ContainerDetail'</a>,
--   <a>containerDetail_containerInstanceArn</a> - The Amazon Resource Name
--   (ARN) of the container instance that the container is running on.
--   
--   <a>$sel:executionRoleArn:ContainerDetail'</a>,
--   <a>containerDetail_executionRoleArn</a> - The Amazon Resource Name
--   (ARN) of the execution role that Batch can assume. For more
--   information, see <a>Batch execution IAM role</a> in the <i>Batch User
--   Guide</i>.
--   
--   <a>$sel:privileged:ContainerDetail'</a>,
--   <a>containerDetail_privileged</a> - When this parameter is true, the
--   container is given elevated permissions on the host container instance
--   (similar to the <tt>root</tt> user). The default value is false.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources and shouldn't be provided, or specified as false.
--   
--   <a>$sel:jobRoleArn:ContainerDetail'</a>,
--   <a>containerDetail_jobRoleArn</a> - The Amazon Resource Name (ARN)
--   associated with the job upon execution.
--   
--   <a>$sel:resourceRequirements:ContainerDetail'</a>,
--   <a>containerDetail_resourceRequirements</a> - The type and amount of
--   resources to assign to a container. The supported resources include
--   <tt>GPU</tt>, <tt>MEMORY</tt>, and <tt>VCPU</tt>.
--   
--   <a>$sel:instanceType:ContainerDetail'</a>,
--   <a>containerDetail_instanceType</a> - The instance type of the
--   underlying host infrastructure of a multi-node parallel job.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources.
--   
--   <a>$sel:memory:ContainerDetail'</a>, <a>containerDetail_memory</a> -
--   For jobs run on EC2 resources that didn't specify memory requirements
--   using <tt>ResourceRequirement</tt>, the number of MiB of memory
--   reserved for the job. For other jobs, including all run on Fargate
--   resources, see <tt>resourceRequirements</tt>.
--   
--   <a>$sel:user:ContainerDetail'</a>, <a>containerDetail_user</a> - The
--   user name to use inside the container. This parameter maps to
--   <tt>User</tt> in the <a>Create a container</a> section of the
--   <a>Docker Remote API</a> and the <tt>--user</tt> option to <a>docker
--   run</a>.
--   
--   <a>$sel:logConfiguration:ContainerDetail'</a>,
--   <a>containerDetail_logConfiguration</a> - The log configuration
--   specification for the container.
--   
--   This parameter maps to <tt>LogConfig</tt> in the <a>Create a
--   container</a> section of the <a>Docker Remote API</a> and the
--   <tt>--log-driver</tt> option to <a>docker run</a>. By default,
--   containers use the same logging driver that the Docker daemon uses.
--   However, the container might use a different logging driver than the
--   Docker daemon by specifying a log driver with this parameter in the
--   container definition. To use a different logging driver for a
--   container, the log system must be configured properly on the container
--   instance. Or, alternatively, it must be configured on a different log
--   server for remote logging options. For more information on the options
--   for different supported log drivers, see <a>Configure logging
--   drivers</a> in the Docker documentation.
--   
--   Batch currently supports a subset of the logging drivers available to
--   the Docker daemon (shown in the LogConfiguration data type).
--   Additional log drivers might be available in future releases of the
--   Amazon ECS container agent.
--   
--   This parameter requires version 1.18 of the Docker Remote API or
--   greater on your container instance. To check the Docker Remote API
--   version on your container instance, log into your container instance
--   and run the following command: <tt>sudo docker version | grep "Server
--   API version"</tt>
--   
--   The Amazon ECS container agent running on a container instance must
--   register the logging drivers available on that instance with the
--   <tt>ECS_AVAILABLE_LOGGING_DRIVERS</tt> environment variable before
--   containers placed on that instance can use these log configuration
--   options. For more information, see <a>Amazon ECS Container Agent
--   Configuration</a> in the <i>Amazon Elastic Container Service Developer
--   Guide</i>.
--   
--   <a>$sel:linuxParameters:ContainerDetail'</a>,
--   <a>containerDetail_linuxParameters</a> - Linux-specific modifications
--   that are applied to the container, such as details for device
--   mappings.
--   
--   <a>$sel:reason:ContainerDetail'</a>, <a>containerDetail_reason</a> - A
--   short (255 max characters) human-readable string to provide additional
--   details about a running or stopped container.
--   
--   <a>$sel:logStreamName:ContainerDetail'</a>,
--   <a>containerDetail_logStreamName</a> - The name of the CloudWatch Logs
--   log stream associated with the container. The log group for Batch jobs
--   is <tt>/aws/batch/job</tt>. Each container attempt receives a log
--   stream name when they reach the <tt>RUNNING</tt> status.
--   
--   <a>$sel:mountPoints:ContainerDetail'</a>,
--   <a>containerDetail_mountPoints</a> - The mount points for data volumes
--   in your container.
--   
--   <a>$sel:exitCode:ContainerDetail'</a>, <a>containerDetail_exitCode</a>
--   - The exit code to return upon completion.
--   
--   <a>$sel:fargatePlatformConfiguration:ContainerDetail'</a>,
--   <a>containerDetail_fargatePlatformConfiguration</a> - The platform
--   configuration for jobs that are running on Fargate resources. Jobs
--   that are running on EC2 resources must not specify this parameter.
--   
--   <a>$sel:vcpus:ContainerDetail'</a>, <a>containerDetail_vcpus</a> - The
--   number of vCPUs reserved for the container. For jobs that run on EC2
--   resources, you can specify the vCPU requirement for the job using
--   <tt>resourceRequirements</tt>, but you can't specify the vCPU
--   requirements in both the <tt>vcpus</tt> and
--   <tt>resourceRequirement</tt> object. This parameter maps to
--   <tt>CpuShares</tt> in the <a>Create a container</a> section of the
--   <a>Docker Remote API</a> and the <tt>--cpu-shares</tt> option to
--   <a>docker run</a>. Each vCPU is equivalent to 1,024 CPU shares. You
--   must specify at least one vCPU. This is required but can be specified
--   in several places. It must be specified for each node at least once.
--   
--   This parameter isn't applicable to jobs that run on Fargate resources.
--   For jobs that run on Fargate resources, you must specify the vCPU
--   requirement for the job using <tt>resourceRequirements</tt>.
--   
--   <a>$sel:readonlyRootFilesystem:ContainerDetail'</a>,
--   <a>containerDetail_readonlyRootFilesystem</a> - When this parameter is
--   true, the container is given read-only access to its root file system.
--   This parameter maps to <tt>ReadonlyRootfs</tt> in the <a>Create a
--   container</a> section of the <a>Docker Remote API</a> and the
--   <tt>--read-only</tt> option to <a>docker run</a> .
--   
--   <a>$sel:volumes:ContainerDetail'</a>, <a>containerDetail_volumes</a> -
--   A list of volumes associated with the job.
--   
--   <a>$sel:networkConfiguration:ContainerDetail'</a>,
--   <a>containerDetail_networkConfiguration</a> - The network
--   configuration for jobs that are running on Fargate resources. Jobs
--   that are running on EC2 resources must not specify this parameter.
newContainerDetail :: ContainerDetail

-- | The image used to start the container.
containerDetail_image :: Lens' ContainerDetail (Maybe Text)

-- | The command that's passed to the container.
containerDetail_command :: Lens' ContainerDetail (Maybe [Text])

-- | The secrets to pass to the container. For more information, see
--   <a>Specifying sensitive data</a> in the <i>Batch User Guide</i>.
containerDetail_secrets :: Lens' ContainerDetail (Maybe [Secret])

-- | The environment variables to pass to a container.
--   
--   Environment variables must not start with <tt>AWS_BATCH</tt>; this
--   naming convention is reserved for variables that are set by the Batch
--   service.
containerDetail_environment :: Lens' ContainerDetail (Maybe [KeyValuePair])

-- | The network interfaces associated with the job.
containerDetail_networkInterfaces :: Lens' ContainerDetail (Maybe [NetworkInterface])

-- | The Amazon Resource Name (ARN) of the Amazon ECS task that's
--   associated with the container job. Each container attempt receives a
--   task ARN when they reach the <tt>STARTING</tt> status.
containerDetail_taskArn :: Lens' ContainerDetail (Maybe Text)

-- | A list of <tt>ulimit</tt> values to set in the container. This
--   parameter maps to <tt>Ulimits</tt> in the <a>Create a container</a>
--   section of the <a>Docker Remote API</a> and the <tt>--ulimit</tt>
--   option to <a>docker run</a>.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources.
containerDetail_ulimits :: Lens' ContainerDetail (Maybe [Ulimit])

-- | The Amazon Resource Name (ARN) of the container instance that the
--   container is running on.
containerDetail_containerInstanceArn :: Lens' ContainerDetail (Maybe Text)

-- | The Amazon Resource Name (ARN) of the execution role that Batch can
--   assume. For more information, see <a>Batch execution IAM role</a> in
--   the <i>Batch User Guide</i>.
containerDetail_executionRoleArn :: Lens' ContainerDetail (Maybe Text)

-- | When this parameter is true, the container is given elevated
--   permissions on the host container instance (similar to the
--   <tt>root</tt> user). The default value is false.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources and shouldn't be provided, or specified as false.
containerDetail_privileged :: Lens' ContainerDetail (Maybe Bool)

-- | The Amazon Resource Name (ARN) associated with the job upon execution.
containerDetail_jobRoleArn :: Lens' ContainerDetail (Maybe Text)

-- | The type and amount of resources to assign to a container. The
--   supported resources include <tt>GPU</tt>, <tt>MEMORY</tt>, and
--   <tt>VCPU</tt>.
containerDetail_resourceRequirements :: Lens' ContainerDetail (Maybe [ResourceRequirement])

-- | The instance type of the underlying host infrastructure of a
--   multi-node parallel job.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources.
containerDetail_instanceType :: Lens' ContainerDetail (Maybe Text)

-- | For jobs run on EC2 resources that didn't specify memory requirements
--   using <tt>ResourceRequirement</tt>, the number of MiB of memory
--   reserved for the job. For other jobs, including all run on Fargate
--   resources, see <tt>resourceRequirements</tt>.
containerDetail_memory :: Lens' ContainerDetail (Maybe Int)

-- | The user name to use inside the container. This parameter maps to
--   <tt>User</tt> in the <a>Create a container</a> section of the
--   <a>Docker Remote API</a> and the <tt>--user</tt> option to <a>docker
--   run</a>.
containerDetail_user :: Lens' ContainerDetail (Maybe Text)

-- | The log configuration specification for the container.
--   
--   This parameter maps to <tt>LogConfig</tt> in the <a>Create a
--   container</a> section of the <a>Docker Remote API</a> and the
--   <tt>--log-driver</tt> option to <a>docker run</a>. By default,
--   containers use the same logging driver that the Docker daemon uses.
--   However, the container might use a different logging driver than the
--   Docker daemon by specifying a log driver with this parameter in the
--   container definition. To use a different logging driver for a
--   container, the log system must be configured properly on the container
--   instance. Or, alternatively, it must be configured on a different log
--   server for remote logging options. For more information on the options
--   for different supported log drivers, see <a>Configure logging
--   drivers</a> in the Docker documentation.
--   
--   Batch currently supports a subset of the logging drivers available to
--   the Docker daemon (shown in the LogConfiguration data type).
--   Additional log drivers might be available in future releases of the
--   Amazon ECS container agent.
--   
--   This parameter requires version 1.18 of the Docker Remote API or
--   greater on your container instance. To check the Docker Remote API
--   version on your container instance, log into your container instance
--   and run the following command: <tt>sudo docker version | grep "Server
--   API version"</tt>
--   
--   The Amazon ECS container agent running on a container instance must
--   register the logging drivers available on that instance with the
--   <tt>ECS_AVAILABLE_LOGGING_DRIVERS</tt> environment variable before
--   containers placed on that instance can use these log configuration
--   options. For more information, see <a>Amazon ECS Container Agent
--   Configuration</a> in the <i>Amazon Elastic Container Service Developer
--   Guide</i>.
containerDetail_logConfiguration :: Lens' ContainerDetail (Maybe LogConfiguration)

-- | Linux-specific modifications that are applied to the container, such
--   as details for device mappings.
containerDetail_linuxParameters :: Lens' ContainerDetail (Maybe LinuxParameters)

-- | A short (255 max characters) human-readable string to provide
--   additional details about a running or stopped container.
containerDetail_reason :: Lens' ContainerDetail (Maybe Text)

-- | The name of the CloudWatch Logs log stream associated with the
--   container. The log group for Batch jobs is <tt>/aws/batch/job</tt>.
--   Each container attempt receives a log stream name when they reach the
--   <tt>RUNNING</tt> status.
containerDetail_logStreamName :: Lens' ContainerDetail (Maybe Text)

-- | The mount points for data volumes in your container.
containerDetail_mountPoints :: Lens' ContainerDetail (Maybe [MountPoint])

-- | The exit code to return upon completion.
containerDetail_exitCode :: Lens' ContainerDetail (Maybe Int)

-- | The platform configuration for jobs that are running on Fargate
--   resources. Jobs that are running on EC2 resources must not specify
--   this parameter.
containerDetail_fargatePlatformConfiguration :: Lens' ContainerDetail (Maybe FargatePlatformConfiguration)

-- | The number of vCPUs reserved for the container. For jobs that run on
--   EC2 resources, you can specify the vCPU requirement for the job using
--   <tt>resourceRequirements</tt>, but you can't specify the vCPU
--   requirements in both the <tt>vcpus</tt> and
--   <tt>resourceRequirement</tt> object. This parameter maps to
--   <tt>CpuShares</tt> in the <a>Create a container</a> section of the
--   <a>Docker Remote API</a> and the <tt>--cpu-shares</tt> option to
--   <a>docker run</a>. Each vCPU is equivalent to 1,024 CPU shares. You
--   must specify at least one vCPU. This is required but can be specified
--   in several places. It must be specified for each node at least once.
--   
--   This parameter isn't applicable to jobs that run on Fargate resources.
--   For jobs that run on Fargate resources, you must specify the vCPU
--   requirement for the job using <tt>resourceRequirements</tt>.
containerDetail_vcpus :: Lens' ContainerDetail (Maybe Int)

-- | When this parameter is true, the container is given read-only access
--   to its root file system. This parameter maps to
--   <tt>ReadonlyRootfs</tt> in the <a>Create a container</a> section of
--   the <a>Docker Remote API</a> and the <tt>--read-only</tt> option to
--   <a>docker run</a> .
containerDetail_readonlyRootFilesystem :: Lens' ContainerDetail (Maybe Bool)

-- | A list of volumes associated with the job.
containerDetail_volumes :: Lens' ContainerDetail (Maybe [Volume])

-- | The network configuration for jobs that are running on Fargate
--   resources. Jobs that are running on EC2 resources must not specify
--   this parameter.
containerDetail_networkConfiguration :: Lens' ContainerDetail (Maybe NetworkConfiguration)

-- | The overrides that should be sent to a container.
--   
--   <i>See:</i> <a>newContainerOverrides</a> smart constructor.
data ContainerOverrides
ContainerOverrides' :: Maybe [Text] -> Maybe [KeyValuePair] -> Maybe [ResourceRequirement] -> Maybe Text -> Maybe Int -> Maybe Int -> ContainerOverrides

-- | The command to send to the container that overrides the default
--   command from the Docker image or the job definition.
[$sel:command:ContainerOverrides'] :: ContainerOverrides -> Maybe [Text]

-- | The environment variables to send to the container. You can add new
--   environment variables, which are added to the container at launch, or
--   you can override the existing environment variables from the Docker
--   image or the job definition.
--   
--   Environment variables must not start with <tt>AWS_BATCH</tt>; this
--   naming convention is reserved for variables that are set by the Batch
--   service.
[$sel:environment:ContainerOverrides'] :: ContainerOverrides -> Maybe [KeyValuePair]

-- | The type and amount of resources to assign to a container. This
--   overrides the settings in the job definition. The supported resources
--   include <tt>GPU</tt>, <tt>MEMORY</tt>, and <tt>VCPU</tt>.
[$sel:resourceRequirements:ContainerOverrides'] :: ContainerOverrides -> Maybe [ResourceRequirement]

-- | The instance type to use for a multi-node parallel job.
--   
--   This parameter isn't applicable to single-node container jobs or jobs
--   that run on Fargate resources, and shouldn't be provided.
[$sel:instanceType:ContainerOverrides'] :: ContainerOverrides -> Maybe Text

-- | This parameter indicates the amount of memory (in MiB) that's reserved
--   for the job. It overrides the <tt>memory</tt> parameter set in the job
--   definition, but doesn't override any memory requirement specified in
--   the <tt>ResourceRequirement</tt> structure in the job definition. To
--   override memory requirements that are specified in the
--   <tt>ResourceRequirement</tt> structure in the job definition,
--   <tt>ResourceRequirement</tt> must be specified in the
--   <tt>SubmitJob</tt> request, with <tt>type</tt> set to <tt>MEMORY</tt>
--   and <tt>value</tt> set to the new value.
--   
--   This parameter is supported for jobs that run on EC2 resources, but
--   isn't supported for jobs that run on Fargate resources. For these
--   resources, use <tt>resourceRequirement</tt> instead.
[$sel:memory:ContainerOverrides'] :: ContainerOverrides -> Maybe Int

-- | This parameter indicates the number of vCPUs reserved for the
--   container.It overrides the <tt>vcpus</tt> parameter that's set in the
--   job definition, but doesn't override any vCPU requirement specified in
--   the <tt>resourceRequirement</tt> structure in the job definition. To
--   override vCPU requirements that are specified in the
--   <tt>ResourceRequirement</tt> structure in the job definition,
--   <tt>ResourceRequirement</tt> must be specified in the
--   <tt>SubmitJob</tt> request, with <tt>type</tt> set to <tt>VCPU</tt>
--   and <tt>value</tt> set to the new value.
--   
--   This parameter maps to <tt>CpuShares</tt> in the <a>Create a
--   container</a> section of the <a>Docker Remote API</a> and the
--   <tt>--cpu-shares</tt> option to <a>docker run</a>. Each vCPU is
--   equivalent to 1,024 CPU shares. You must specify at least one vCPU.
--   
--   This parameter is supported for jobs that run on EC2 resources, but
--   isn't supported for jobs that run on Fargate resources. For Fargate
--   resources, you can only use <tt>resourceRequirement</tt>. For EC2
--   resources, you can use either this parameter or
--   <tt>resourceRequirement</tt> but not both.
[$sel:vcpus:ContainerOverrides'] :: ContainerOverrides -> Maybe Int

-- | Create a value of <a>ContainerOverrides</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:command:ContainerOverrides'</a>,
--   <a>containerOverrides_command</a> - The command to send to the
--   container that overrides the default command from the Docker image or
--   the job definition.
--   
--   <a>$sel:environment:ContainerOverrides'</a>,
--   <a>containerOverrides_environment</a> - The environment variables to
--   send to the container. You can add new environment variables, which
--   are added to the container at launch, or you can override the existing
--   environment variables from the Docker image or the job definition.
--   
--   Environment variables must not start with <tt>AWS_BATCH</tt>; this
--   naming convention is reserved for variables that are set by the Batch
--   service.
--   
--   <a>$sel:resourceRequirements:ContainerOverrides'</a>,
--   <a>containerOverrides_resourceRequirements</a> - The type and amount
--   of resources to assign to a container. This overrides the settings in
--   the job definition. The supported resources include <tt>GPU</tt>,
--   <tt>MEMORY</tt>, and <tt>VCPU</tt>.
--   
--   <a>$sel:instanceType:ContainerOverrides'</a>,
--   <a>containerOverrides_instanceType</a> - The instance type to use for
--   a multi-node parallel job.
--   
--   This parameter isn't applicable to single-node container jobs or jobs
--   that run on Fargate resources, and shouldn't be provided.
--   
--   <a>$sel:memory:ContainerOverrides'</a>,
--   <a>containerOverrides_memory</a> - This parameter indicates the amount
--   of memory (in MiB) that's reserved for the job. It overrides the
--   <tt>memory</tt> parameter set in the job definition, but doesn't
--   override any memory requirement specified in the
--   <tt>ResourceRequirement</tt> structure in the job definition. To
--   override memory requirements that are specified in the
--   <tt>ResourceRequirement</tt> structure in the job definition,
--   <tt>ResourceRequirement</tt> must be specified in the
--   <tt>SubmitJob</tt> request, with <tt>type</tt> set to <tt>MEMORY</tt>
--   and <tt>value</tt> set to the new value.
--   
--   This parameter is supported for jobs that run on EC2 resources, but
--   isn't supported for jobs that run on Fargate resources. For these
--   resources, use <tt>resourceRequirement</tt> instead.
--   
--   <a>$sel:vcpus:ContainerOverrides'</a>, <a>containerOverrides_vcpus</a>
--   - This parameter indicates the number of vCPUs reserved for the
--   container.It overrides the <tt>vcpus</tt> parameter that's set in the
--   job definition, but doesn't override any vCPU requirement specified in
--   the <tt>resourceRequirement</tt> structure in the job definition. To
--   override vCPU requirements that are specified in the
--   <tt>ResourceRequirement</tt> structure in the job definition,
--   <tt>ResourceRequirement</tt> must be specified in the
--   <tt>SubmitJob</tt> request, with <tt>type</tt> set to <tt>VCPU</tt>
--   and <tt>value</tt> set to the new value.
--   
--   This parameter maps to <tt>CpuShares</tt> in the <a>Create a
--   container</a> section of the <a>Docker Remote API</a> and the
--   <tt>--cpu-shares</tt> option to <a>docker run</a>. Each vCPU is
--   equivalent to 1,024 CPU shares. You must specify at least one vCPU.
--   
--   This parameter is supported for jobs that run on EC2 resources, but
--   isn't supported for jobs that run on Fargate resources. For Fargate
--   resources, you can only use <tt>resourceRequirement</tt>. For EC2
--   resources, you can use either this parameter or
--   <tt>resourceRequirement</tt> but not both.
newContainerOverrides :: ContainerOverrides

-- | The command to send to the container that overrides the default
--   command from the Docker image or the job definition.
containerOverrides_command :: Lens' ContainerOverrides (Maybe [Text])

-- | The environment variables to send to the container. You can add new
--   environment variables, which are added to the container at launch, or
--   you can override the existing environment variables from the Docker
--   image or the job definition.
--   
--   Environment variables must not start with <tt>AWS_BATCH</tt>; this
--   naming convention is reserved for variables that are set by the Batch
--   service.
containerOverrides_environment :: Lens' ContainerOverrides (Maybe [KeyValuePair])

-- | The type and amount of resources to assign to a container. This
--   overrides the settings in the job definition. The supported resources
--   include <tt>GPU</tt>, <tt>MEMORY</tt>, and <tt>VCPU</tt>.
containerOverrides_resourceRequirements :: Lens' ContainerOverrides (Maybe [ResourceRequirement])

-- | The instance type to use for a multi-node parallel job.
--   
--   This parameter isn't applicable to single-node container jobs or jobs
--   that run on Fargate resources, and shouldn't be provided.
containerOverrides_instanceType :: Lens' ContainerOverrides (Maybe Text)

-- | This parameter indicates the amount of memory (in MiB) that's reserved
--   for the job. It overrides the <tt>memory</tt> parameter set in the job
--   definition, but doesn't override any memory requirement specified in
--   the <tt>ResourceRequirement</tt> structure in the job definition. To
--   override memory requirements that are specified in the
--   <tt>ResourceRequirement</tt> structure in the job definition,
--   <tt>ResourceRequirement</tt> must be specified in the
--   <tt>SubmitJob</tt> request, with <tt>type</tt> set to <tt>MEMORY</tt>
--   and <tt>value</tt> set to the new value.
--   
--   This parameter is supported for jobs that run on EC2 resources, but
--   isn't supported for jobs that run on Fargate resources. For these
--   resources, use <tt>resourceRequirement</tt> instead.
containerOverrides_memory :: Lens' ContainerOverrides (Maybe Int)

-- | This parameter indicates the number of vCPUs reserved for the
--   container.It overrides the <tt>vcpus</tt> parameter that's set in the
--   job definition, but doesn't override any vCPU requirement specified in
--   the <tt>resourceRequirement</tt> structure in the job definition. To
--   override vCPU requirements that are specified in the
--   <tt>ResourceRequirement</tt> structure in the job definition,
--   <tt>ResourceRequirement</tt> must be specified in the
--   <tt>SubmitJob</tt> request, with <tt>type</tt> set to <tt>VCPU</tt>
--   and <tt>value</tt> set to the new value.
--   
--   This parameter maps to <tt>CpuShares</tt> in the <a>Create a
--   container</a> section of the <a>Docker Remote API</a> and the
--   <tt>--cpu-shares</tt> option to <a>docker run</a>. Each vCPU is
--   equivalent to 1,024 CPU shares. You must specify at least one vCPU.
--   
--   This parameter is supported for jobs that run on EC2 resources, but
--   isn't supported for jobs that run on Fargate resources. For Fargate
--   resources, you can only use <tt>resourceRequirement</tt>. For EC2
--   resources, you can use either this parameter or
--   <tt>resourceRequirement</tt> but not both.
containerOverrides_vcpus :: Lens' ContainerOverrides (Maybe Int)

-- | Container properties are used in job definitions to describe the
--   container that's launched as part of a job.
--   
--   <i>See:</i> <a>newContainerProperties</a> smart constructor.
data ContainerProperties
ContainerProperties' :: Maybe Text -> Maybe [Text] -> Maybe [Secret] -> Maybe [KeyValuePair] -> Maybe [Ulimit] -> Maybe Text -> Maybe Bool -> Maybe Text -> Maybe [ResourceRequirement] -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe LogConfiguration -> Maybe LinuxParameters -> Maybe [MountPoint] -> Maybe FargatePlatformConfiguration -> Maybe Int -> Maybe Bool -> Maybe [Volume] -> Maybe NetworkConfiguration -> ContainerProperties

-- | The image used to start a container. This string is passed directly to
--   the Docker daemon. Images in the Docker Hub registry are available by
--   default. Other repositories are specified with <tt>
--   repository-url/image:tag </tt>. Up to 255 letters (uppercase and
--   lowercase), numbers, hyphens, underscores, colons, periods, forward
--   slashes, and number signs are allowed. This parameter maps to
--   <tt>Image</tt> in the <a>Create a container</a> section of the
--   <a>Docker Remote API</a> and the <tt>IMAGE</tt> parameter of <a>docker
--   run</a>.
--   
--   Docker image architecture must match the processor architecture of the
--   compute resources that they're scheduled on. For example, ARM-based
--   Docker images can only run on ARM-based compute resources.
--   
--   <ul>
--   <li>Images in Amazon ECR repositories use the full registry and
--   repository URI (for example,
--   <tt>012345678910.dkr.ecr.&lt;region-name&gt;.amazonaws.com/&lt;repository-name&gt;</tt>).</li>
--   <li>Images in official repositories on Docker Hub use a single name
--   (for example, <tt>ubuntu</tt> or <tt>mongo</tt>).</li>
--   <li>Images in other repositories on Docker Hub are qualified with an
--   organization name (for example,
--   <tt>amazon/amazon-ecs-agent</tt>).</li>
--   <li>Images in other online repositories are qualified further by a
--   domain name (for example, <tt>quay.io/assemblyline/ubuntu</tt>).</li>
--   </ul>
[$sel:image:ContainerProperties'] :: ContainerProperties -> Maybe Text

-- | The command that's passed to the container. This parameter maps to
--   <tt>Cmd</tt> in the <a>Create a container</a> section of the <a>Docker
--   Remote API</a> and the <tt>COMMAND</tt> parameter to <a>docker
--   run</a>. For more information, see
--   <a>https://docs.docker.com/engine/reference/builder/#cmd</a>.
[$sel:command:ContainerProperties'] :: ContainerProperties -> Maybe [Text]

-- | The secrets for the container. For more information, see <a>Specifying
--   sensitive data</a> in the <i>Batch User Guide</i>.
[$sel:secrets:ContainerProperties'] :: ContainerProperties -> Maybe [Secret]

-- | The environment variables to pass to a container. This parameter maps
--   to <tt>Env</tt> in the <a>Create a container</a> section of the
--   <a>Docker Remote API</a> and the <tt>--env</tt> option to <a>docker
--   run</a>.
--   
--   We don't recommend using plaintext environment variables for sensitive
--   information, such as credential data.
--   
--   Environment variables must not start with <tt>AWS_BATCH</tt>; this
--   naming convention is reserved for variables that are set by the Batch
--   service.
[$sel:environment:ContainerProperties'] :: ContainerProperties -> Maybe [KeyValuePair]

-- | A list of <tt>ulimits</tt> to set in the container. This parameter
--   maps to <tt>Ulimits</tt> in the <a>Create a container</a> section of
--   the <a>Docker Remote API</a> and the <tt>--ulimit</tt> option to
--   <a>docker run</a>.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources and shouldn't be provided.
[$sel:ulimits:ContainerProperties'] :: ContainerProperties -> Maybe [Ulimit]

-- | The Amazon Resource Name (ARN) of the execution role that Batch can
--   assume. For jobs that run on Fargate resources, you must provide an
--   execution role. For more information, see <a>Batch execution IAM
--   role</a> in the <i>Batch User Guide</i>.
[$sel:executionRoleArn:ContainerProperties'] :: ContainerProperties -> Maybe Text

-- | When this parameter is true, the container is given elevated
--   permissions on the host container instance (similar to the
--   <tt>root</tt> user). This parameter maps to <tt>Privileged</tt> in the
--   <a>Create a container</a> section of the <a>Docker Remote API</a> and
--   the <tt>--privileged</tt> option to <a>docker run</a>. The default
--   value is false.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources and shouldn't be provided, or specified as false.
[$sel:privileged:ContainerProperties'] :: ContainerProperties -> Maybe Bool

-- | The Amazon Resource Name (ARN) of the IAM role that the container can
--   assume for Amazon Web Services permissions. For more information, see
--   <a>IAM Roles for Tasks</a> in the <i>Amazon Elastic Container Service
--   Developer Guide</i>.
[$sel:jobRoleArn:ContainerProperties'] :: ContainerProperties -> Maybe Text

-- | The type and amount of resources to assign to a container. The
--   supported resources include <tt>GPU</tt>, <tt>MEMORY</tt>, and
--   <tt>VCPU</tt>.
[$sel:resourceRequirements:ContainerProperties'] :: ContainerProperties -> Maybe [ResourceRequirement]

-- | The instance type to use for a multi-node parallel job. All node
--   groups in a multi-node parallel job must use the same instance type.
--   
--   This parameter isn't applicable to single-node container jobs or jobs
--   that run on Fargate resources, and shouldn't be provided.
[$sel:instanceType:ContainerProperties'] :: ContainerProperties -> Maybe Text

-- | This parameter indicates the memory hard limit (in MiB) for a
--   container. If your container attempts to exceed the specified number,
--   it's terminated. You must specify at least 4 MiB of memory for a job
--   using this parameter. The memory hard limit can be specified in
--   several places. It must be specified for each node at least once.
--   
--   This parameter maps to <tt>Memory</tt> in the <a>Create a
--   container</a> section of the <a>Docker Remote API</a> and the
--   <tt>--memory</tt> option to <a>docker run</a>.
--   
--   This parameter is supported on EC2 resources but isn't supported on
--   Fargate resources. For Fargate resources, you should specify the
--   memory requirement using <tt>resourceRequirement</tt>. You can also do
--   this for EC2 resources.
--   
--   If you're trying to maximize your resource utilization by providing
--   your jobs as much memory as possible for a particular instance type,
--   see <a>Memory Management</a> in the <i>Batch User Guide</i>.
[$sel:memory:ContainerProperties'] :: ContainerProperties -> Maybe Int

-- | The user name to use inside the container. This parameter maps to
--   <tt>User</tt> in the <a>Create a container</a> section of the
--   <a>Docker Remote API</a> and the <tt>--user</tt> option to <a>docker
--   run</a>.
[$sel:user:ContainerProperties'] :: ContainerProperties -> Maybe Text

-- | The log configuration specification for the container.
--   
--   This parameter maps to <tt>LogConfig</tt> in the <a>Create a
--   container</a> section of the <a>Docker Remote API</a> and the
--   <tt>--log-driver</tt> option to <a>docker run</a>. By default,
--   containers use the same logging driver that the Docker daemon uses.
--   However the container might use a different logging driver than the
--   Docker daemon by specifying a log driver with this parameter in the
--   container definition. To use a different logging driver for a
--   container, the log system must be configured properly on the container
--   instance (or on a different log server for remote logging options).
--   For more information on the options for different supported log
--   drivers, see <a>Configure logging drivers</a> in the Docker
--   documentation.
--   
--   Batch currently supports a subset of the logging drivers available to
--   the Docker daemon (shown in the LogConfiguration data type).
--   
--   This parameter requires version 1.18 of the Docker Remote API or
--   greater on your container instance. To check the Docker Remote API
--   version on your container instance, log into your container instance
--   and run the following command: <tt>sudo docker version | grep "Server
--   API version"</tt>
--   
--   The Amazon ECS container agent running on a container instance must
--   register the logging drivers available on that instance with the
--   <tt>ECS_AVAILABLE_LOGGING_DRIVERS</tt> environment variable before
--   containers placed on that instance can use these log configuration
--   options. For more information, see <a>Amazon ECS Container Agent
--   Configuration</a> in the <i>Amazon Elastic Container Service Developer
--   Guide</i>.
[$sel:logConfiguration:ContainerProperties'] :: ContainerProperties -> Maybe LogConfiguration

-- | Linux-specific modifications that are applied to the container, such
--   as details for device mappings.
[$sel:linuxParameters:ContainerProperties'] :: ContainerProperties -> Maybe LinuxParameters

-- | The mount points for data volumes in your container. This parameter
--   maps to <tt>Volumes</tt> in the <a>Create a container</a> section of
--   the <a>Docker Remote API</a> and the <tt>--volume</tt> option to
--   <a>docker run</a>.
[$sel:mountPoints:ContainerProperties'] :: ContainerProperties -> Maybe [MountPoint]

-- | The platform configuration for jobs that are running on Fargate
--   resources. Jobs that are running on EC2 resources must not specify
--   this parameter.
[$sel:fargatePlatformConfiguration:ContainerProperties'] :: ContainerProperties -> Maybe FargatePlatformConfiguration

-- | The number of vCPUs reserved for the job. Each vCPU is equivalent to
--   1,024 CPU shares. This parameter maps to <tt>CpuShares</tt> in the
--   <a>Create a container</a> section of the <a>Docker Remote API</a> and
--   the <tt>--cpu-shares</tt> option to <a>docker run</a>. The number of
--   vCPUs must be specified but can be specified in several places. You
--   must specify it at least once for each node.
--   
--   This parameter is supported on EC2 resources but isn't supported for
--   jobs that run on Fargate resources. For these resources, use
--   <tt>resourceRequirement</tt> instead. You can use this parameter or
--   <tt>resourceRequirements</tt> structure but not both.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources and shouldn't be provided. For jobs that run on Fargate
--   resources, you must specify the vCPU requirement for the job using
--   <tt>resourceRequirements</tt>.
[$sel:vcpus:ContainerProperties'] :: ContainerProperties -> Maybe Int

-- | When this parameter is true, the container is given read-only access
--   to its root file system. This parameter maps to
--   <tt>ReadonlyRootfs</tt> in the <a>Create a container</a> section of
--   the <a>Docker Remote API</a> and the <tt>--read-only</tt> option to
--   <tt>docker run</tt>.
[$sel:readonlyRootFilesystem:ContainerProperties'] :: ContainerProperties -> Maybe Bool

-- | A list of data volumes used in a job.
[$sel:volumes:ContainerProperties'] :: ContainerProperties -> Maybe [Volume]

-- | The network configuration for jobs that are running on Fargate
--   resources. Jobs that are running on EC2 resources must not specify
--   this parameter.
[$sel:networkConfiguration:ContainerProperties'] :: ContainerProperties -> Maybe NetworkConfiguration

-- | Create a value of <a>ContainerProperties</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:image:ContainerProperties'</a>,
--   <a>containerProperties_image</a> - The image used to start a
--   container. This string is passed directly to the Docker daemon. Images
--   in the Docker Hub registry are available by default. Other
--   repositories are specified with <tt> repository-url/image:tag </tt>.
--   Up to 255 letters (uppercase and lowercase), numbers, hyphens,
--   underscores, colons, periods, forward slashes, and number signs are
--   allowed. This parameter maps to <tt>Image</tt> in the <a>Create a
--   container</a> section of the <a>Docker Remote API</a> and the
--   <tt>IMAGE</tt> parameter of <a>docker run</a>.
--   
--   Docker image architecture must match the processor architecture of the
--   compute resources that they're scheduled on. For example, ARM-based
--   Docker images can only run on ARM-based compute resources.
--   
--   <ul>
--   <li>Images in Amazon ECR repositories use the full registry and
--   repository URI (for example,
--   <tt>012345678910.dkr.ecr.&lt;region-name&gt;.amazonaws.com/&lt;repository-name&gt;</tt>).</li>
--   <li>Images in official repositories on Docker Hub use a single name
--   (for example, <tt>ubuntu</tt> or <tt>mongo</tt>).</li>
--   <li>Images in other repositories on Docker Hub are qualified with an
--   organization name (for example,
--   <tt>amazon/amazon-ecs-agent</tt>).</li>
--   <li>Images in other online repositories are qualified further by a
--   domain name (for example, <tt>quay.io/assemblyline/ubuntu</tt>).</li>
--   </ul>
--   
--   <a>$sel:command:ContainerProperties'</a>,
--   <a>containerProperties_command</a> - The command that's passed to the
--   container. This parameter maps to <tt>Cmd</tt> in the <a>Create a
--   container</a> section of the <a>Docker Remote API</a> and the
--   <tt>COMMAND</tt> parameter to <a>docker run</a>. For more information,
--   see <a>https://docs.docker.com/engine/reference/builder/#cmd</a>.
--   
--   <a>$sel:secrets:ContainerProperties'</a>,
--   <a>containerProperties_secrets</a> - The secrets for the container.
--   For more information, see <a>Specifying sensitive data</a> in the
--   <i>Batch User Guide</i>.
--   
--   <a>$sel:environment:ContainerProperties'</a>,
--   <a>containerProperties_environment</a> - The environment variables to
--   pass to a container. This parameter maps to <tt>Env</tt> in the
--   <a>Create a container</a> section of the <a>Docker Remote API</a> and
--   the <tt>--env</tt> option to <a>docker run</a>.
--   
--   We don't recommend using plaintext environment variables for sensitive
--   information, such as credential data.
--   
--   Environment variables must not start with <tt>AWS_BATCH</tt>; this
--   naming convention is reserved for variables that are set by the Batch
--   service.
--   
--   <a>$sel:ulimits:ContainerProperties'</a>,
--   <a>containerProperties_ulimits</a> - A list of <tt>ulimits</tt> to set
--   in the container. This parameter maps to <tt>Ulimits</tt> in the
--   <a>Create a container</a> section of the <a>Docker Remote API</a> and
--   the <tt>--ulimit</tt> option to <a>docker run</a>.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources and shouldn't be provided.
--   
--   <a>$sel:executionRoleArn:ContainerProperties'</a>,
--   <a>containerProperties_executionRoleArn</a> - The Amazon Resource Name
--   (ARN) of the execution role that Batch can assume. For jobs that run
--   on Fargate resources, you must provide an execution role. For more
--   information, see <a>Batch execution IAM role</a> in the <i>Batch User
--   Guide</i>.
--   
--   <a>$sel:privileged:ContainerProperties'</a>,
--   <a>containerProperties_privileged</a> - When this parameter is true,
--   the container is given elevated permissions on the host container
--   instance (similar to the <tt>root</tt> user). This parameter maps to
--   <tt>Privileged</tt> in the <a>Create a container</a> section of the
--   <a>Docker Remote API</a> and the <tt>--privileged</tt> option to
--   <a>docker run</a>. The default value is false.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources and shouldn't be provided, or specified as false.
--   
--   <a>$sel:jobRoleArn:ContainerProperties'</a>,
--   <a>containerProperties_jobRoleArn</a> - The Amazon Resource Name (ARN)
--   of the IAM role that the container can assume for Amazon Web Services
--   permissions. For more information, see <a>IAM Roles for Tasks</a> in
--   the <i>Amazon Elastic Container Service Developer Guide</i>.
--   
--   <a>$sel:resourceRequirements:ContainerProperties'</a>,
--   <a>containerProperties_resourceRequirements</a> - The type and amount
--   of resources to assign to a container. The supported resources include
--   <tt>GPU</tt>, <tt>MEMORY</tt>, and <tt>VCPU</tt>.
--   
--   <a>$sel:instanceType:ContainerProperties'</a>,
--   <a>containerProperties_instanceType</a> - The instance type to use for
--   a multi-node parallel job. All node groups in a multi-node parallel
--   job must use the same instance type.
--   
--   This parameter isn't applicable to single-node container jobs or jobs
--   that run on Fargate resources, and shouldn't be provided.
--   
--   <a>$sel:memory:ContainerProperties'</a>,
--   <a>containerProperties_memory</a> - This parameter indicates the
--   memory hard limit (in MiB) for a container. If your container attempts
--   to exceed the specified number, it's terminated. You must specify at
--   least 4 MiB of memory for a job using this parameter. The memory hard
--   limit can be specified in several places. It must be specified for
--   each node at least once.
--   
--   This parameter maps to <tt>Memory</tt> in the <a>Create a
--   container</a> section of the <a>Docker Remote API</a> and the
--   <tt>--memory</tt> option to <a>docker run</a>.
--   
--   This parameter is supported on EC2 resources but isn't supported on
--   Fargate resources. For Fargate resources, you should specify the
--   memory requirement using <tt>resourceRequirement</tt>. You can also do
--   this for EC2 resources.
--   
--   If you're trying to maximize your resource utilization by providing
--   your jobs as much memory as possible for a particular instance type,
--   see <a>Memory Management</a> in the <i>Batch User Guide</i>.
--   
--   <a>$sel:user:ContainerProperties'</a>, <a>containerProperties_user</a>
--   - The user name to use inside the container. This parameter maps to
--   <tt>User</tt> in the <a>Create a container</a> section of the
--   <a>Docker Remote API</a> and the <tt>--user</tt> option to <a>docker
--   run</a>.
--   
--   <a>$sel:logConfiguration:ContainerProperties'</a>,
--   <a>containerProperties_logConfiguration</a> - The log configuration
--   specification for the container.
--   
--   This parameter maps to <tt>LogConfig</tt> in the <a>Create a
--   container</a> section of the <a>Docker Remote API</a> and the
--   <tt>--log-driver</tt> option to <a>docker run</a>. By default,
--   containers use the same logging driver that the Docker daemon uses.
--   However the container might use a different logging driver than the
--   Docker daemon by specifying a log driver with this parameter in the
--   container definition. To use a different logging driver for a
--   container, the log system must be configured properly on the container
--   instance (or on a different log server for remote logging options).
--   For more information on the options for different supported log
--   drivers, see <a>Configure logging drivers</a> in the Docker
--   documentation.
--   
--   Batch currently supports a subset of the logging drivers available to
--   the Docker daemon (shown in the LogConfiguration data type).
--   
--   This parameter requires version 1.18 of the Docker Remote API or
--   greater on your container instance. To check the Docker Remote API
--   version on your container instance, log into your container instance
--   and run the following command: <tt>sudo docker version | grep "Server
--   API version"</tt>
--   
--   The Amazon ECS container agent running on a container instance must
--   register the logging drivers available on that instance with the
--   <tt>ECS_AVAILABLE_LOGGING_DRIVERS</tt> environment variable before
--   containers placed on that instance can use these log configuration
--   options. For more information, see <a>Amazon ECS Container Agent
--   Configuration</a> in the <i>Amazon Elastic Container Service Developer
--   Guide</i>.
--   
--   <a>$sel:linuxParameters:ContainerProperties'</a>,
--   <a>containerProperties_linuxParameters</a> - Linux-specific
--   modifications that are applied to the container, such as details for
--   device mappings.
--   
--   <a>$sel:mountPoints:ContainerProperties'</a>,
--   <a>containerProperties_mountPoints</a> - The mount points for data
--   volumes in your container. This parameter maps to <tt>Volumes</tt> in
--   the <a>Create a container</a> section of the <a>Docker Remote API</a>
--   and the <tt>--volume</tt> option to <a>docker run</a>.
--   
--   <a>$sel:fargatePlatformConfiguration:ContainerProperties'</a>,
--   <a>containerProperties_fargatePlatformConfiguration</a> - The platform
--   configuration for jobs that are running on Fargate resources. Jobs
--   that are running on EC2 resources must not specify this parameter.
--   
--   <a>$sel:vcpus:ContainerProperties'</a>,
--   <a>containerProperties_vcpus</a> - The number of vCPUs reserved for
--   the job. Each vCPU is equivalent to 1,024 CPU shares. This parameter
--   maps to <tt>CpuShares</tt> in the <a>Create a container</a> section of
--   the <a>Docker Remote API</a> and the <tt>--cpu-shares</tt> option to
--   <a>docker run</a>. The number of vCPUs must be specified but can be
--   specified in several places. You must specify it at least once for
--   each node.
--   
--   This parameter is supported on EC2 resources but isn't supported for
--   jobs that run on Fargate resources. For these resources, use
--   <tt>resourceRequirement</tt> instead. You can use this parameter or
--   <tt>resourceRequirements</tt> structure but not both.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources and shouldn't be provided. For jobs that run on Fargate
--   resources, you must specify the vCPU requirement for the job using
--   <tt>resourceRequirements</tt>.
--   
--   <a>$sel:readonlyRootFilesystem:ContainerProperties'</a>,
--   <a>containerProperties_readonlyRootFilesystem</a> - When this
--   parameter is true, the container is given read-only access to its root
--   file system. This parameter maps to <tt>ReadonlyRootfs</tt> in the
--   <a>Create a container</a> section of the <a>Docker Remote API</a> and
--   the <tt>--read-only</tt> option to <tt>docker run</tt>.
--   
--   <a>$sel:volumes:ContainerProperties'</a>,
--   <a>containerProperties_volumes</a> - A list of data volumes used in a
--   job.
--   
--   <a>$sel:networkConfiguration:ContainerProperties'</a>,
--   <a>containerProperties_networkConfiguration</a> - The network
--   configuration for jobs that are running on Fargate resources. Jobs
--   that are running on EC2 resources must not specify this parameter.
newContainerProperties :: ContainerProperties

-- | The image used to start a container. This string is passed directly to
--   the Docker daemon. Images in the Docker Hub registry are available by
--   default. Other repositories are specified with <tt>
--   repository-url/image:tag </tt>. Up to 255 letters (uppercase and
--   lowercase), numbers, hyphens, underscores, colons, periods, forward
--   slashes, and number signs are allowed. This parameter maps to
--   <tt>Image</tt> in the <a>Create a container</a> section of the
--   <a>Docker Remote API</a> and the <tt>IMAGE</tt> parameter of <a>docker
--   run</a>.
--   
--   Docker image architecture must match the processor architecture of the
--   compute resources that they're scheduled on. For example, ARM-based
--   Docker images can only run on ARM-based compute resources.
--   
--   <ul>
--   <li>Images in Amazon ECR repositories use the full registry and
--   repository URI (for example,
--   <tt>012345678910.dkr.ecr.&lt;region-name&gt;.amazonaws.com/&lt;repository-name&gt;</tt>).</li>
--   <li>Images in official repositories on Docker Hub use a single name
--   (for example, <tt>ubuntu</tt> or <tt>mongo</tt>).</li>
--   <li>Images in other repositories on Docker Hub are qualified with an
--   organization name (for example,
--   <tt>amazon/amazon-ecs-agent</tt>).</li>
--   <li>Images in other online repositories are qualified further by a
--   domain name (for example, <tt>quay.io/assemblyline/ubuntu</tt>).</li>
--   </ul>
containerProperties_image :: Lens' ContainerProperties (Maybe Text)

-- | The command that's passed to the container. This parameter maps to
--   <tt>Cmd</tt> in the <a>Create a container</a> section of the <a>Docker
--   Remote API</a> and the <tt>COMMAND</tt> parameter to <a>docker
--   run</a>. For more information, see
--   <a>https://docs.docker.com/engine/reference/builder/#cmd</a>.
containerProperties_command :: Lens' ContainerProperties (Maybe [Text])

-- | The secrets for the container. For more information, see <a>Specifying
--   sensitive data</a> in the <i>Batch User Guide</i>.
containerProperties_secrets :: Lens' ContainerProperties (Maybe [Secret])

-- | The environment variables to pass to a container. This parameter maps
--   to <tt>Env</tt> in the <a>Create a container</a> section of the
--   <a>Docker Remote API</a> and the <tt>--env</tt> option to <a>docker
--   run</a>.
--   
--   We don't recommend using plaintext environment variables for sensitive
--   information, such as credential data.
--   
--   Environment variables must not start with <tt>AWS_BATCH</tt>; this
--   naming convention is reserved for variables that are set by the Batch
--   service.
containerProperties_environment :: Lens' ContainerProperties (Maybe [KeyValuePair])

-- | A list of <tt>ulimits</tt> to set in the container. This parameter
--   maps to <tt>Ulimits</tt> in the <a>Create a container</a> section of
--   the <a>Docker Remote API</a> and the <tt>--ulimit</tt> option to
--   <a>docker run</a>.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources and shouldn't be provided.
containerProperties_ulimits :: Lens' ContainerProperties (Maybe [Ulimit])

-- | The Amazon Resource Name (ARN) of the execution role that Batch can
--   assume. For jobs that run on Fargate resources, you must provide an
--   execution role. For more information, see <a>Batch execution IAM
--   role</a> in the <i>Batch User Guide</i>.
containerProperties_executionRoleArn :: Lens' ContainerProperties (Maybe Text)

-- | When this parameter is true, the container is given elevated
--   permissions on the host container instance (similar to the
--   <tt>root</tt> user). This parameter maps to <tt>Privileged</tt> in the
--   <a>Create a container</a> section of the <a>Docker Remote API</a> and
--   the <tt>--privileged</tt> option to <a>docker run</a>. The default
--   value is false.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources and shouldn't be provided, or specified as false.
containerProperties_privileged :: Lens' ContainerProperties (Maybe Bool)

-- | The Amazon Resource Name (ARN) of the IAM role that the container can
--   assume for Amazon Web Services permissions. For more information, see
--   <a>IAM Roles for Tasks</a> in the <i>Amazon Elastic Container Service
--   Developer Guide</i>.
containerProperties_jobRoleArn :: Lens' ContainerProperties (Maybe Text)

-- | The type and amount of resources to assign to a container. The
--   supported resources include <tt>GPU</tt>, <tt>MEMORY</tt>, and
--   <tt>VCPU</tt>.
containerProperties_resourceRequirements :: Lens' ContainerProperties (Maybe [ResourceRequirement])

-- | The instance type to use for a multi-node parallel job. All node
--   groups in a multi-node parallel job must use the same instance type.
--   
--   This parameter isn't applicable to single-node container jobs or jobs
--   that run on Fargate resources, and shouldn't be provided.
containerProperties_instanceType :: Lens' ContainerProperties (Maybe Text)

-- | This parameter indicates the memory hard limit (in MiB) for a
--   container. If your container attempts to exceed the specified number,
--   it's terminated. You must specify at least 4 MiB of memory for a job
--   using this parameter. The memory hard limit can be specified in
--   several places. It must be specified for each node at least once.
--   
--   This parameter maps to <tt>Memory</tt> in the <a>Create a
--   container</a> section of the <a>Docker Remote API</a> and the
--   <tt>--memory</tt> option to <a>docker run</a>.
--   
--   This parameter is supported on EC2 resources but isn't supported on
--   Fargate resources. For Fargate resources, you should specify the
--   memory requirement using <tt>resourceRequirement</tt>. You can also do
--   this for EC2 resources.
--   
--   If you're trying to maximize your resource utilization by providing
--   your jobs as much memory as possible for a particular instance type,
--   see <a>Memory Management</a> in the <i>Batch User Guide</i>.
containerProperties_memory :: Lens' ContainerProperties (Maybe Int)

-- | The user name to use inside the container. This parameter maps to
--   <tt>User</tt> in the <a>Create a container</a> section of the
--   <a>Docker Remote API</a> and the <tt>--user</tt> option to <a>docker
--   run</a>.
containerProperties_user :: Lens' ContainerProperties (Maybe Text)

-- | The log configuration specification for the container.
--   
--   This parameter maps to <tt>LogConfig</tt> in the <a>Create a
--   container</a> section of the <a>Docker Remote API</a> and the
--   <tt>--log-driver</tt> option to <a>docker run</a>. By default,
--   containers use the same logging driver that the Docker daemon uses.
--   However the container might use a different logging driver than the
--   Docker daemon by specifying a log driver with this parameter in the
--   container definition. To use a different logging driver for a
--   container, the log system must be configured properly on the container
--   instance (or on a different log server for remote logging options).
--   For more information on the options for different supported log
--   drivers, see <a>Configure logging drivers</a> in the Docker
--   documentation.
--   
--   Batch currently supports a subset of the logging drivers available to
--   the Docker daemon (shown in the LogConfiguration data type).
--   
--   This parameter requires version 1.18 of the Docker Remote API or
--   greater on your container instance. To check the Docker Remote API
--   version on your container instance, log into your container instance
--   and run the following command: <tt>sudo docker version | grep "Server
--   API version"</tt>
--   
--   The Amazon ECS container agent running on a container instance must
--   register the logging drivers available on that instance with the
--   <tt>ECS_AVAILABLE_LOGGING_DRIVERS</tt> environment variable before
--   containers placed on that instance can use these log configuration
--   options. For more information, see <a>Amazon ECS Container Agent
--   Configuration</a> in the <i>Amazon Elastic Container Service Developer
--   Guide</i>.
containerProperties_logConfiguration :: Lens' ContainerProperties (Maybe LogConfiguration)

-- | Linux-specific modifications that are applied to the container, such
--   as details for device mappings.
containerProperties_linuxParameters :: Lens' ContainerProperties (Maybe LinuxParameters)

-- | The mount points for data volumes in your container. This parameter
--   maps to <tt>Volumes</tt> in the <a>Create a container</a> section of
--   the <a>Docker Remote API</a> and the <tt>--volume</tt> option to
--   <a>docker run</a>.
containerProperties_mountPoints :: Lens' ContainerProperties (Maybe [MountPoint])

-- | The platform configuration for jobs that are running on Fargate
--   resources. Jobs that are running on EC2 resources must not specify
--   this parameter.
containerProperties_fargatePlatformConfiguration :: Lens' ContainerProperties (Maybe FargatePlatformConfiguration)

-- | The number of vCPUs reserved for the job. Each vCPU is equivalent to
--   1,024 CPU shares. This parameter maps to <tt>CpuShares</tt> in the
--   <a>Create a container</a> section of the <a>Docker Remote API</a> and
--   the <tt>--cpu-shares</tt> option to <a>docker run</a>. The number of
--   vCPUs must be specified but can be specified in several places. You
--   must specify it at least once for each node.
--   
--   This parameter is supported on EC2 resources but isn't supported for
--   jobs that run on Fargate resources. For these resources, use
--   <tt>resourceRequirement</tt> instead. You can use this parameter or
--   <tt>resourceRequirements</tt> structure but not both.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources and shouldn't be provided. For jobs that run on Fargate
--   resources, you must specify the vCPU requirement for the job using
--   <tt>resourceRequirements</tt>.
containerProperties_vcpus :: Lens' ContainerProperties (Maybe Int)

-- | When this parameter is true, the container is given read-only access
--   to its root file system. This parameter maps to
--   <tt>ReadonlyRootfs</tt> in the <a>Create a container</a> section of
--   the <a>Docker Remote API</a> and the <tt>--read-only</tt> option to
--   <tt>docker run</tt>.
containerProperties_readonlyRootFilesystem :: Lens' ContainerProperties (Maybe Bool)

-- | A list of data volumes used in a job.
containerProperties_volumes :: Lens' ContainerProperties (Maybe [Volume])

-- | The network configuration for jobs that are running on Fargate
--   resources. Jobs that are running on EC2 resources must not specify
--   this parameter.
containerProperties_networkConfiguration :: Lens' ContainerProperties (Maybe NetworkConfiguration)

-- | An object representing summary details of a container within a job.
--   
--   <i>See:</i> <a>newContainerSummary</a> smart constructor.
data ContainerSummary
ContainerSummary' :: Maybe Text -> Maybe Int -> ContainerSummary

-- | A short (255 max characters) human-readable string to provide
--   additional details about a running or stopped container.
[$sel:reason:ContainerSummary'] :: ContainerSummary -> Maybe Text

-- | The exit code to return upon completion.
[$sel:exitCode:ContainerSummary'] :: ContainerSummary -> Maybe Int

-- | Create a value of <a>ContainerSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:reason:ContainerSummary'</a>, <a>containerSummary_reason</a> -
--   A short (255 max characters) human-readable string to provide
--   additional details about a running or stopped container.
--   
--   <a>$sel:exitCode:ContainerSummary'</a>,
--   <a>containerSummary_exitCode</a> - The exit code to return upon
--   completion.
newContainerSummary :: ContainerSummary

-- | A short (255 max characters) human-readable string to provide
--   additional details about a running or stopped container.
containerSummary_reason :: Lens' ContainerSummary (Maybe Text)

-- | The exit code to return upon completion.
containerSummary_exitCode :: Lens' ContainerSummary (Maybe Int)

-- | An object representing a container instance host device.
--   
--   This object isn't applicable to jobs that are running on Fargate
--   resources and shouldn't be provided.
--   
--   <i>See:</i> <a>newDevice</a> smart constructor.
data Device
Device' :: Maybe Text -> Maybe [DeviceCgroupPermission] -> Text -> Device

-- | The path inside the container that's used to expose the host device.
--   By default, the <tt>hostPath</tt> value is used.
[$sel:containerPath:Device'] :: Device -> Maybe Text

-- | The explicit permissions to provide to the container for the device.
--   By default, the container has permissions for <tt>read</tt>,
--   <tt>write</tt>, and <tt>mknod</tt> for the device.
[$sel:permissions:Device'] :: Device -> Maybe [DeviceCgroupPermission]

-- | The path for the device on the host container instance.
[$sel:hostPath:Device'] :: Device -> Text

-- | Create a value of <a>Device</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:containerPath:Device'</a>, <a>device_containerPath</a> - The
--   path inside the container that's used to expose the host device. By
--   default, the <tt>hostPath</tt> value is used.
--   
--   <a>$sel:permissions:Device'</a>, <a>device_permissions</a> - The
--   explicit permissions to provide to the container for the device. By
--   default, the container has permissions for <tt>read</tt>,
--   <tt>write</tt>, and <tt>mknod</tt> for the device.
--   
--   <a>$sel:hostPath:Device'</a>, <a>device_hostPath</a> - The path for
--   the device on the host container instance.
newDevice :: Text -> Device

-- | The path inside the container that's used to expose the host device.
--   By default, the <tt>hostPath</tt> value is used.
device_containerPath :: Lens' Device (Maybe Text)

-- | The explicit permissions to provide to the container for the device.
--   By default, the container has permissions for <tt>read</tt>,
--   <tt>write</tt>, and <tt>mknod</tt> for the device.
device_permissions :: Lens' Device (Maybe [DeviceCgroupPermission])

-- | The path for the device on the host container instance.
device_hostPath :: Lens' Device Text

-- | The authorization configuration details for the Amazon EFS file
--   system.
--   
--   <i>See:</i> <a>newEFSAuthorizationConfig</a> smart constructor.
data EFSAuthorizationConfig
EFSAuthorizationConfig' :: Maybe Text -> Maybe EFSAuthorizationConfigIAM -> EFSAuthorizationConfig

-- | The Amazon EFS access point ID to use. If an access point is
--   specified, the root directory value specified in the
--   <tt>EFSVolumeConfiguration</tt> must either be omitted or set to
--   <tt>/</tt> which will enforce the path set on the EFS access point. If
--   an access point is used, transit encryption must be enabled in the
--   <tt>EFSVolumeConfiguration</tt>. For more information, see <a>Working
--   with Amazon EFS Access Points</a> in the <i>Amazon Elastic File System
--   User Guide</i>.
[$sel:accessPointId:EFSAuthorizationConfig'] :: EFSAuthorizationConfig -> Maybe Text

-- | Whether or not to use the Batch job IAM role defined in a job
--   definition when mounting the Amazon EFS file system. If enabled,
--   transit encryption must be enabled in the
--   <tt>EFSVolumeConfiguration</tt>. If this parameter is omitted, the
--   default value of <tt>DISABLED</tt> is used. For more information, see
--   <a>Using Amazon EFS Access Points</a> in the <i>Batch User Guide</i>.
--   EFS IAM authorization requires that <tt>TransitEncryption</tt> be
--   <tt>ENABLED</tt> and that a <tt>JobRoleArn</tt> is specified.
[$sel:iam:EFSAuthorizationConfig'] :: EFSAuthorizationConfig -> Maybe EFSAuthorizationConfigIAM

-- | Create a value of <a>EFSAuthorizationConfig</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:accessPointId:EFSAuthorizationConfig'</a>,
--   <a>eFSAuthorizationConfig_accessPointId</a> - The Amazon EFS access
--   point ID to use. If an access point is specified, the root directory
--   value specified in the <tt>EFSVolumeConfiguration</tt> must either be
--   omitted or set to <tt>/</tt> which will enforce the path set on the
--   EFS access point. If an access point is used, transit encryption must
--   be enabled in the <tt>EFSVolumeConfiguration</tt>. For more
--   information, see <a>Working with Amazon EFS Access Points</a> in the
--   <i>Amazon Elastic File System User Guide</i>.
--   
--   <a>$sel:iam:EFSAuthorizationConfig'</a>,
--   <a>eFSAuthorizationConfig_iam</a> - Whether or not to use the Batch
--   job IAM role defined in a job definition when mounting the Amazon EFS
--   file system. If enabled, transit encryption must be enabled in the
--   <tt>EFSVolumeConfiguration</tt>. If this parameter is omitted, the
--   default value of <tt>DISABLED</tt> is used. For more information, see
--   <a>Using Amazon EFS Access Points</a> in the <i>Batch User Guide</i>.
--   EFS IAM authorization requires that <tt>TransitEncryption</tt> be
--   <tt>ENABLED</tt> and that a <tt>JobRoleArn</tt> is specified.
newEFSAuthorizationConfig :: EFSAuthorizationConfig

-- | The Amazon EFS access point ID to use. If an access point is
--   specified, the root directory value specified in the
--   <tt>EFSVolumeConfiguration</tt> must either be omitted or set to
--   <tt>/</tt> which will enforce the path set on the EFS access point. If
--   an access point is used, transit encryption must be enabled in the
--   <tt>EFSVolumeConfiguration</tt>. For more information, see <a>Working
--   with Amazon EFS Access Points</a> in the <i>Amazon Elastic File System
--   User Guide</i>.
eFSAuthorizationConfig_accessPointId :: Lens' EFSAuthorizationConfig (Maybe Text)

-- | Whether or not to use the Batch job IAM role defined in a job
--   definition when mounting the Amazon EFS file system. If enabled,
--   transit encryption must be enabled in the
--   <tt>EFSVolumeConfiguration</tt>. If this parameter is omitted, the
--   default value of <tt>DISABLED</tt> is used. For more information, see
--   <a>Using Amazon EFS Access Points</a> in the <i>Batch User Guide</i>.
--   EFS IAM authorization requires that <tt>TransitEncryption</tt> be
--   <tt>ENABLED</tt> and that a <tt>JobRoleArn</tt> is specified.
eFSAuthorizationConfig_iam :: Lens' EFSAuthorizationConfig (Maybe EFSAuthorizationConfigIAM)

-- | This is used when you're using an Amazon Elastic File System file
--   system for job storage. For more information, see <a>Amazon EFS
--   Volumes</a> in the <i>Batch User Guide</i>.
--   
--   <i>See:</i> <a>newEFSVolumeConfiguration</a> smart constructor.
data EFSVolumeConfiguration
EFSVolumeConfiguration' :: Maybe Text -> Maybe EFSTransitEncryption -> Maybe EFSAuthorizationConfig -> Maybe Int -> Text -> EFSVolumeConfiguration

-- | The directory within the Amazon EFS file system to mount as the root
--   directory inside the host. If this parameter is omitted, the root of
--   the Amazon EFS volume is used instead. Specifying <tt>/</tt> has the
--   same effect as omitting this parameter. The maximum length is 4,096
--   characters.
--   
--   If an EFS access point is specified in the
--   <tt>authorizationConfig</tt>, the root directory parameter must either
--   be omitted or set to <tt>/</tt>, which enforces the path set on the
--   Amazon EFS access point.
[$sel:rootDirectory:EFSVolumeConfiguration'] :: EFSVolumeConfiguration -> Maybe Text

-- | Determines whether to enable encryption for Amazon EFS data in transit
--   between the Amazon ECS host and the Amazon EFS server. Transit
--   encryption must be enabled if Amazon EFS IAM authorization is used. If
--   this parameter is omitted, the default value of <tt>DISABLED</tt> is
--   used. For more information, see <a>Encrypting data in transit</a> in
--   the <i>Amazon Elastic File System User Guide</i>.
[$sel:transitEncryption:EFSVolumeConfiguration'] :: EFSVolumeConfiguration -> Maybe EFSTransitEncryption

-- | The authorization configuration details for the Amazon EFS file
--   system.
[$sel:authorizationConfig:EFSVolumeConfiguration'] :: EFSVolumeConfiguration -> Maybe EFSAuthorizationConfig

-- | The port to use when sending encrypted data between the Amazon ECS
--   host and the Amazon EFS server. If you don't specify a transit
--   encryption port, it uses the port selection strategy that the Amazon
--   EFS mount helper uses. The value must be between 0 and 65,535. For
--   more information, see <a>EFS Mount Helper</a> in the <i>Amazon Elastic
--   File System User Guide</i>.
[$sel:transitEncryptionPort:EFSVolumeConfiguration'] :: EFSVolumeConfiguration -> Maybe Int

-- | The Amazon EFS file system ID to use.
[$sel:fileSystemId:EFSVolumeConfiguration'] :: EFSVolumeConfiguration -> Text

-- | Create a value of <a>EFSVolumeConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:rootDirectory:EFSVolumeConfiguration'</a>,
--   <a>eFSVolumeConfiguration_rootDirectory</a> - The directory within the
--   Amazon EFS file system to mount as the root directory inside the host.
--   If this parameter is omitted, the root of the Amazon EFS volume is
--   used instead. Specifying <tt>/</tt> has the same effect as omitting
--   this parameter. The maximum length is 4,096 characters.
--   
--   If an EFS access point is specified in the
--   <tt>authorizationConfig</tt>, the root directory parameter must either
--   be omitted or set to <tt>/</tt>, which enforces the path set on the
--   Amazon EFS access point.
--   
--   <a>$sel:transitEncryption:EFSVolumeConfiguration'</a>,
--   <a>eFSVolumeConfiguration_transitEncryption</a> - Determines whether
--   to enable encryption for Amazon EFS data in transit between the Amazon
--   ECS host and the Amazon EFS server. Transit encryption must be enabled
--   if Amazon EFS IAM authorization is used. If this parameter is omitted,
--   the default value of <tt>DISABLED</tt> is used. For more information,
--   see <a>Encrypting data in transit</a> in the <i>Amazon Elastic File
--   System User Guide</i>.
--   
--   <a>$sel:authorizationConfig:EFSVolumeConfiguration'</a>,
--   <a>eFSVolumeConfiguration_authorizationConfig</a> - The authorization
--   configuration details for the Amazon EFS file system.
--   
--   <a>$sel:transitEncryptionPort:EFSVolumeConfiguration'</a>,
--   <a>eFSVolumeConfiguration_transitEncryptionPort</a> - The port to use
--   when sending encrypted data between the Amazon ECS host and the Amazon
--   EFS server. If you don't specify a transit encryption port, it uses
--   the port selection strategy that the Amazon EFS mount helper uses. The
--   value must be between 0 and 65,535. For more information, see <a>EFS
--   Mount Helper</a> in the <i>Amazon Elastic File System User Guide</i>.
--   
--   <a>$sel:fileSystemId:EFSVolumeConfiguration'</a>,
--   <a>eFSVolumeConfiguration_fileSystemId</a> - The Amazon EFS file
--   system ID to use.
newEFSVolumeConfiguration :: Text -> EFSVolumeConfiguration

-- | The directory within the Amazon EFS file system to mount as the root
--   directory inside the host. If this parameter is omitted, the root of
--   the Amazon EFS volume is used instead. Specifying <tt>/</tt> has the
--   same effect as omitting this parameter. The maximum length is 4,096
--   characters.
--   
--   If an EFS access point is specified in the
--   <tt>authorizationConfig</tt>, the root directory parameter must either
--   be omitted or set to <tt>/</tt>, which enforces the path set on the
--   Amazon EFS access point.
eFSVolumeConfiguration_rootDirectory :: Lens' EFSVolumeConfiguration (Maybe Text)

-- | Determines whether to enable encryption for Amazon EFS data in transit
--   between the Amazon ECS host and the Amazon EFS server. Transit
--   encryption must be enabled if Amazon EFS IAM authorization is used. If
--   this parameter is omitted, the default value of <tt>DISABLED</tt> is
--   used. For more information, see <a>Encrypting data in transit</a> in
--   the <i>Amazon Elastic File System User Guide</i>.
eFSVolumeConfiguration_transitEncryption :: Lens' EFSVolumeConfiguration (Maybe EFSTransitEncryption)

-- | The authorization configuration details for the Amazon EFS file
--   system.
eFSVolumeConfiguration_authorizationConfig :: Lens' EFSVolumeConfiguration (Maybe EFSAuthorizationConfig)

-- | The port to use when sending encrypted data between the Amazon ECS
--   host and the Amazon EFS server. If you don't specify a transit
--   encryption port, it uses the port selection strategy that the Amazon
--   EFS mount helper uses. The value must be between 0 and 65,535. For
--   more information, see <a>EFS Mount Helper</a> in the <i>Amazon Elastic
--   File System User Guide</i>.
eFSVolumeConfiguration_transitEncryptionPort :: Lens' EFSVolumeConfiguration (Maybe Int)

-- | The Amazon EFS file system ID to use.
eFSVolumeConfiguration_fileSystemId :: Lens' EFSVolumeConfiguration Text

-- | Provides information used to select Amazon Machine Images (AMIs) for
--   instances in the compute environment. If <tt>Ec2Configuration</tt>
--   isn't specified, the default is currently <tt>ECS_AL1</tt> (<a>Amazon
--   Linux</a>) for non-GPU, non AWSGraviton instances. Starting on March
--   31, 2021, this default will be changing to <tt>ECS_AL2</tt> (<a>Amazon
--   Linux 2</a>).
--   
--   This object isn't applicable to jobs that are running on Fargate
--   resources.
--   
--   <i>See:</i> <a>newEc2Configuration</a> smart constructor.
data Ec2Configuration
Ec2Configuration' :: Maybe Text -> Text -> Ec2Configuration

-- | The AMI ID used for instances launched in the compute environment that
--   match the image type. This setting overrides the <tt>imageId</tt> set
--   in the <tt>computeResource</tt> object.
[$sel:imageIdOverride:Ec2Configuration'] :: Ec2Configuration -> Maybe Text

-- | The image type to match with the instance type to select an AMI. If
--   the <tt>imageIdOverride</tt> parameter isn't specified, then a recent
--   <a>Amazon ECS-optimized AMI</a> (<tt>ECS_AL1</tt>) is used. Starting
--   on March 31, 2021, this default will be changing to <tt>ECS_AL2</tt>
--   (<a>Amazon Linux 2</a>).
--   
--   <ul>
--   <li><i>ECS_AL2</i> <a>Amazon Linux 2</a>− Default for all Amazon Web
--   Services Graviton-based instance families (for example, <tt>C6g</tt>,
--   <tt>M6g</tt>, <tt>R6g</tt>, and <tt>T4g</tt>) and can be used for all
--   non-GPU instance types.</li>
--   <li><i>ECS_AL2_NVIDIA</i> <a>Amazon Linux 2 (GPU)</a>−Default for all
--   GPU instance families (for example <tt>P4</tt> and <tt>G4</tt>) and
--   can be used for all non Amazon Web Services Graviton-based instance
--   types.</li>
--   <li><i>ECS_AL1</i> <a>Amazon Linux</a>−Default for all non-GPU, non
--   Amazon Web Services Graviton instance families. Amazon Linux is
--   reaching the end-of-life of standard support. For more information,
--   see <a>Amazon Linux AMI</a>.</li>
--   </ul>
[$sel:imageType:Ec2Configuration'] :: Ec2Configuration -> Text

-- | Create a value of <a>Ec2Configuration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:imageIdOverride:Ec2Configuration'</a>,
--   <a>ec2Configuration_imageIdOverride</a> - The AMI ID used for
--   instances launched in the compute environment that match the image
--   type. This setting overrides the <tt>imageId</tt> set in the
--   <tt>computeResource</tt> object.
--   
--   <a>$sel:imageType:Ec2Configuration'</a>,
--   <a>ec2Configuration_imageType</a> - The image type to match with the
--   instance type to select an AMI. If the <tt>imageIdOverride</tt>
--   parameter isn't specified, then a recent <a>Amazon ECS-optimized
--   AMI</a> (<tt>ECS_AL1</tt>) is used. Starting on March 31, 2021, this
--   default will be changing to <tt>ECS_AL2</tt> (<a>Amazon Linux 2</a>).
--   
--   <ul>
--   <li><i>ECS_AL2</i> <a>Amazon Linux 2</a>− Default for all Amazon Web
--   Services Graviton-based instance families (for example, <tt>C6g</tt>,
--   <tt>M6g</tt>, <tt>R6g</tt>, and <tt>T4g</tt>) and can be used for all
--   non-GPU instance types.</li>
--   <li><i>ECS_AL2_NVIDIA</i> <a>Amazon Linux 2 (GPU)</a>−Default for all
--   GPU instance families (for example <tt>P4</tt> and <tt>G4</tt>) and
--   can be used for all non Amazon Web Services Graviton-based instance
--   types.</li>
--   <li><i>ECS_AL1</i> <a>Amazon Linux</a>−Default for all non-GPU, non
--   Amazon Web Services Graviton instance families. Amazon Linux is
--   reaching the end-of-life of standard support. For more information,
--   see <a>Amazon Linux AMI</a>.</li>
--   </ul>
newEc2Configuration :: Text -> Ec2Configuration

-- | The AMI ID used for instances launched in the compute environment that
--   match the image type. This setting overrides the <tt>imageId</tt> set
--   in the <tt>computeResource</tt> object.
ec2Configuration_imageIdOverride :: Lens' Ec2Configuration (Maybe Text)

-- | The image type to match with the instance type to select an AMI. If
--   the <tt>imageIdOverride</tt> parameter isn't specified, then a recent
--   <a>Amazon ECS-optimized AMI</a> (<tt>ECS_AL1</tt>) is used. Starting
--   on March 31, 2021, this default will be changing to <tt>ECS_AL2</tt>
--   (<a>Amazon Linux 2</a>).
--   
--   <ul>
--   <li><i>ECS_AL2</i> <a>Amazon Linux 2</a>− Default for all Amazon Web
--   Services Graviton-based instance families (for example, <tt>C6g</tt>,
--   <tt>M6g</tt>, <tt>R6g</tt>, and <tt>T4g</tt>) and can be used for all
--   non-GPU instance types.</li>
--   <li><i>ECS_AL2_NVIDIA</i> <a>Amazon Linux 2 (GPU)</a>−Default for all
--   GPU instance families (for example <tt>P4</tt> and <tt>G4</tt>) and
--   can be used for all non Amazon Web Services Graviton-based instance
--   types.</li>
--   <li><i>ECS_AL1</i> <a>Amazon Linux</a>−Default for all non-GPU, non
--   Amazon Web Services Graviton instance families. Amazon Linux is
--   reaching the end-of-life of standard support. For more information,
--   see <a>Amazon Linux AMI</a>.</li>
--   </ul>
ec2Configuration_imageType :: Lens' Ec2Configuration Text

-- | Specifies a set of conditions to be met, and an action to take
--   (<tt>RETRY</tt> or <tt>EXIT</tt>) if all conditions are met.
--   
--   <i>See:</i> <a>newEvaluateOnExit</a> smart constructor.
data EvaluateOnExit
EvaluateOnExit' :: Maybe Text -> Maybe Text -> Maybe Text -> RetryAction -> EvaluateOnExit

-- | Contains a glob pattern to match against the decimal representation of
--   the <tt>ExitCode</tt> returned for a job. The pattern can be up to 512
--   characters in length. It can contain only numbers, and can optionally
--   end with an asterisk (*) so that only the start of the string needs to
--   be an exact match.
[$sel:onExitCode:EvaluateOnExit'] :: EvaluateOnExit -> Maybe Text

-- | Contains a glob pattern to match against the <tt>Reason</tt> returned
--   for a job. The pattern can be up to 512 characters in length. It can
--   contain letters, numbers, periods (.), colons (:), and white space
--   (including spaces and tabs). It can optionally end with an asterisk
--   (*) so that only the start of the string needs to be an exact match.
[$sel:onReason:EvaluateOnExit'] :: EvaluateOnExit -> Maybe Text

-- | Contains a glob pattern to match against the <tt>StatusReason</tt>
--   returned for a job. The pattern can be up to 512 characters in length.
--   It can contain letters, numbers, periods (.), colons (:), and white
--   space (including spaces or tabs). It can optionally end with an
--   asterisk (*) so that only the start of the string needs to be an exact
--   match.
[$sel:onStatusReason:EvaluateOnExit'] :: EvaluateOnExit -> Maybe Text

-- | Specifies the action to take if all of the specified conditions
--   (<tt>onStatusReason</tt>, <tt>onReason</tt>, and <tt>onExitCode</tt>)
--   are met. The values aren't case sensitive.
[$sel:action:EvaluateOnExit'] :: EvaluateOnExit -> RetryAction

-- | Create a value of <a>EvaluateOnExit</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:onExitCode:EvaluateOnExit'</a>,
--   <a>evaluateOnExit_onExitCode</a> - Contains a glob pattern to match
--   against the decimal representation of the <tt>ExitCode</tt> returned
--   for a job. The pattern can be up to 512 characters in length. It can
--   contain only numbers, and can optionally end with an asterisk (*) so
--   that only the start of the string needs to be an exact match.
--   
--   <a>$sel:onReason:EvaluateOnExit'</a>, <a>evaluateOnExit_onReason</a> -
--   Contains a glob pattern to match against the <tt>Reason</tt> returned
--   for a job. The pattern can be up to 512 characters in length. It can
--   contain letters, numbers, periods (.), colons (:), and white space
--   (including spaces and tabs). It can optionally end with an asterisk
--   (*) so that only the start of the string needs to be an exact match.
--   
--   <a>$sel:onStatusReason:EvaluateOnExit'</a>,
--   <a>evaluateOnExit_onStatusReason</a> - Contains a glob pattern to
--   match against the <tt>StatusReason</tt> returned for a job. The
--   pattern can be up to 512 characters in length. It can contain letters,
--   numbers, periods (.), colons (:), and white space (including spaces or
--   tabs). It can optionally end with an asterisk (*) so that only the
--   start of the string needs to be an exact match.
--   
--   <a>$sel:action:EvaluateOnExit'</a>, <a>evaluateOnExit_action</a> -
--   Specifies the action to take if all of the specified conditions
--   (<tt>onStatusReason</tt>, <tt>onReason</tt>, and <tt>onExitCode</tt>)
--   are met. The values aren't case sensitive.
newEvaluateOnExit :: RetryAction -> EvaluateOnExit

-- | Contains a glob pattern to match against the decimal representation of
--   the <tt>ExitCode</tt> returned for a job. The pattern can be up to 512
--   characters in length. It can contain only numbers, and can optionally
--   end with an asterisk (*) so that only the start of the string needs to
--   be an exact match.
evaluateOnExit_onExitCode :: Lens' EvaluateOnExit (Maybe Text)

-- | Contains a glob pattern to match against the <tt>Reason</tt> returned
--   for a job. The pattern can be up to 512 characters in length. It can
--   contain letters, numbers, periods (.), colons (:), and white space
--   (including spaces and tabs). It can optionally end with an asterisk
--   (*) so that only the start of the string needs to be an exact match.
evaluateOnExit_onReason :: Lens' EvaluateOnExit (Maybe Text)

-- | Contains a glob pattern to match against the <tt>StatusReason</tt>
--   returned for a job. The pattern can be up to 512 characters in length.
--   It can contain letters, numbers, periods (.), colons (:), and white
--   space (including spaces or tabs). It can optionally end with an
--   asterisk (*) so that only the start of the string needs to be an exact
--   match.
evaluateOnExit_onStatusReason :: Lens' EvaluateOnExit (Maybe Text)

-- | Specifies the action to take if all of the specified conditions
--   (<tt>onStatusReason</tt>, <tt>onReason</tt>, and <tt>onExitCode</tt>)
--   are met. The values aren't case sensitive.
evaluateOnExit_action :: Lens' EvaluateOnExit RetryAction

-- | The platform configuration for jobs that are running on Fargate
--   resources. Jobs that run on EC2 resources must not specify this
--   parameter.
--   
--   <i>See:</i> <a>newFargatePlatformConfiguration</a> smart constructor.
data FargatePlatformConfiguration
FargatePlatformConfiguration' :: Maybe Text -> FargatePlatformConfiguration

-- | The Fargate platform version where the jobs are running. A platform
--   version is specified only for jobs that are running on Fargate
--   resources. If one isn't specified, the <tt>LATEST</tt> platform
--   version is used by default. This uses a recent, approved version of
--   the Fargate platform for compute resources. For more information, see
--   <a>Fargate platform versions</a> in the <i>Amazon Elastic Container
--   Service Developer Guide</i>.
[$sel:platformVersion:FargatePlatformConfiguration'] :: FargatePlatformConfiguration -> Maybe Text

-- | Create a value of <a>FargatePlatformConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:platformVersion:FargatePlatformConfiguration'</a>,
--   <a>fargatePlatformConfiguration_platformVersion</a> - The Fargate
--   platform version where the jobs are running. A platform version is
--   specified only for jobs that are running on Fargate resources. If one
--   isn't specified, the <tt>LATEST</tt> platform version is used by
--   default. This uses a recent, approved version of the Fargate platform
--   for compute resources. For more information, see <a>Fargate platform
--   versions</a> in the <i>Amazon Elastic Container Service Developer
--   Guide</i>.
newFargatePlatformConfiguration :: FargatePlatformConfiguration

-- | The Fargate platform version where the jobs are running. A platform
--   version is specified only for jobs that are running on Fargate
--   resources. If one isn't specified, the <tt>LATEST</tt> platform
--   version is used by default. This uses a recent, approved version of
--   the Fargate platform for compute resources. For more information, see
--   <a>Fargate platform versions</a> in the <i>Amazon Elastic Container
--   Service Developer Guide</i>.
fargatePlatformConfiguration_platformVersion :: Lens' FargatePlatformConfiguration (Maybe Text)

-- | Determine whether your data volume persists on the host container
--   instance and where it is stored. If this parameter is empty, then the
--   Docker daemon assigns a host path for your data volume, but the data
--   isn't guaranteed to persist after the containers associated with it
--   stop running.
--   
--   <i>See:</i> <a>newHost</a> smart constructor.
data Host
Host' :: Maybe Text -> Host

-- | The path on the host container instance that's presented to the
--   container. If this parameter is empty, then the Docker daemon has
--   assigned a host path for you. If this parameter contains a file
--   location, then the data volume persists at the specified location on
--   the host container instance until you delete it manually. If the
--   source path location doesn't exist on the host container instance, the
--   Docker daemon creates it. If the location does exist, the contents of
--   the source path folder are exported.
--   
--   This parameter isn't applicable to jobs that run on Fargate resources
--   and shouldn't be provided.
[$sel:sourcePath:Host'] :: Host -> Maybe Text

-- | Create a value of <a>Host</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sourcePath:Host'</a>, <a>host_sourcePath</a> - The path on the
--   host container instance that's presented to the container. If this
--   parameter is empty, then the Docker daemon has assigned a host path
--   for you. If this parameter contains a file location, then the data
--   volume persists at the specified location on the host container
--   instance until you delete it manually. If the source path location
--   doesn't exist on the host container instance, the Docker daemon
--   creates it. If the location does exist, the contents of the source
--   path folder are exported.
--   
--   This parameter isn't applicable to jobs that run on Fargate resources
--   and shouldn't be provided.
newHost :: Host

-- | The path on the host container instance that's presented to the
--   container. If this parameter is empty, then the Docker daemon has
--   assigned a host path for you. If this parameter contains a file
--   location, then the data volume persists at the specified location on
--   the host container instance until you delete it manually. If the
--   source path location doesn't exist on the host container instance, the
--   Docker daemon creates it. If the location does exist, the contents of
--   the source path folder are exported.
--   
--   This parameter isn't applicable to jobs that run on Fargate resources
--   and shouldn't be provided.
host_sourcePath :: Lens' Host (Maybe Text)

-- | An object representing an Batch job definition.
--   
--   <i>See:</i> <a>newJobDefinition</a> smart constructor.
data JobDefinition
JobDefinition' :: Maybe Text -> Maybe Bool -> Maybe RetryStrategy -> Maybe [PlatformCapability] -> Maybe (HashMap Text Text) -> Maybe JobTimeout -> Maybe ContainerProperties -> Maybe NodeProperties -> Maybe (HashMap Text Text) -> Text -> Text -> Int -> Text -> JobDefinition

-- | The status of the job definition.
[$sel:status:JobDefinition'] :: JobDefinition -> Maybe Text

-- | Specifies whether to propagate the tags from the job or job definition
--   to the corresponding Amazon ECS task. If no value is specified, the
--   tags aren't propagated. Tags can only be propagated to the tasks
--   during task creation. For tags with the same name, job tags are given
--   priority over job definitions tags. If the total number of combined
--   tags from the job and job definition is over 50, the job is moved to
--   the <tt>FAILED</tt> state.
[$sel:propagateTags:JobDefinition'] :: JobDefinition -> Maybe Bool

-- | The retry strategy to use for failed jobs that are submitted with this
--   job definition.
[$sel:retryStrategy:JobDefinition'] :: JobDefinition -> Maybe RetryStrategy

-- | The platform capabilities required by the job definition. If no value
--   is specified, it defaults to <tt>EC2</tt>. Jobs run on Fargate
--   resources specify <tt>FARGATE</tt>.
[$sel:platformCapabilities:JobDefinition'] :: JobDefinition -> Maybe [PlatformCapability]

-- | Default parameters or parameter substitution placeholders that are set
--   in the job definition. Parameters are specified as a key-value pair
--   mapping. Parameters in a <tt>SubmitJob</tt> request override any
--   corresponding parameter defaults from the job definition. For more
--   information about specifying parameters, see <a>Job Definition
--   Parameters</a> in the <i>Batch User Guide</i>.
[$sel:parameters:JobDefinition'] :: JobDefinition -> Maybe (HashMap Text Text)

-- | The timeout configuration for jobs that are submitted with this job
--   definition. You can specify a timeout duration after which Batch
--   terminates your jobs if they haven't finished.
[$sel:timeout:JobDefinition'] :: JobDefinition -> Maybe JobTimeout

-- | An object with various properties specific to container-based jobs.
[$sel:containerProperties:JobDefinition'] :: JobDefinition -> Maybe ContainerProperties

-- | An object with various properties specific to multi-node parallel
--   jobs.
--   
--   If the job runs on Fargate resources, then you must not specify
--   <tt>nodeProperties</tt>; use <tt>containerProperties</tt> instead.
[$sel:nodeProperties:JobDefinition'] :: JobDefinition -> Maybe NodeProperties

-- | The tags applied to the job definition.
[$sel:tags:JobDefinition'] :: JobDefinition -> Maybe (HashMap Text Text)

-- | The name of the job definition.
[$sel:jobDefinitionName:JobDefinition'] :: JobDefinition -> Text

-- | The Amazon Resource Name (ARN) for the job definition.
[$sel:jobDefinitionArn:JobDefinition'] :: JobDefinition -> Text

-- | The revision of the job definition.
[$sel:revision:JobDefinition'] :: JobDefinition -> Int

-- | The type of job definition. If the job is run on Fargate resources,
--   then <tt>multinode</tt> isn't supported. For more information about
--   multi-node parallel jobs, see <a>Creating a multi-node parallel job
--   definition</a> in the <i>Batch User Guide</i>.
[$sel:type':JobDefinition'] :: JobDefinition -> Text

-- | Create a value of <a>JobDefinition</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:JobDefinition'</a>, <a>jobDefinition_status</a> - The
--   status of the job definition.
--   
--   <a>$sel:propagateTags:JobDefinition'</a>,
--   <a>jobDefinition_propagateTags</a> - Specifies whether to propagate
--   the tags from the job or job definition to the corresponding Amazon
--   ECS task. If no value is specified, the tags aren't propagated. Tags
--   can only be propagated to the tasks during task creation. For tags
--   with the same name, job tags are given priority over job definitions
--   tags. If the total number of combined tags from the job and job
--   definition is over 50, the job is moved to the <tt>FAILED</tt> state.
--   
--   <a>$sel:retryStrategy:JobDefinition'</a>,
--   <a>jobDefinition_retryStrategy</a> - The retry strategy to use for
--   failed jobs that are submitted with this job definition.
--   
--   <a>$sel:platformCapabilities:JobDefinition'</a>,
--   <a>jobDefinition_platformCapabilities</a> - The platform capabilities
--   required by the job definition. If no value is specified, it defaults
--   to <tt>EC2</tt>. Jobs run on Fargate resources specify
--   <tt>FARGATE</tt>.
--   
--   <a>$sel:parameters:JobDefinition'</a>, <a>jobDefinition_parameters</a>
--   - Default parameters or parameter substitution placeholders that are
--   set in the job definition. Parameters are specified as a key-value
--   pair mapping. Parameters in a <tt>SubmitJob</tt> request override any
--   corresponding parameter defaults from the job definition. For more
--   information about specifying parameters, see <a>Job Definition
--   Parameters</a> in the <i>Batch User Guide</i>.
--   
--   <a>$sel:timeout:JobDefinition'</a>, <a>jobDefinition_timeout</a> - The
--   timeout configuration for jobs that are submitted with this job
--   definition. You can specify a timeout duration after which Batch
--   terminates your jobs if they haven't finished.
--   
--   <a>$sel:containerProperties:JobDefinition'</a>,
--   <a>jobDefinition_containerProperties</a> - An object with various
--   properties specific to container-based jobs.
--   
--   <a>$sel:nodeProperties:JobDefinition'</a>,
--   <a>jobDefinition_nodeProperties</a> - An object with various
--   properties specific to multi-node parallel jobs.
--   
--   If the job runs on Fargate resources, then you must not specify
--   <tt>nodeProperties</tt>; use <tt>containerProperties</tt> instead.
--   
--   <a>$sel:tags:JobDefinition'</a>, <a>jobDefinition_tags</a> - The tags
--   applied to the job definition.
--   
--   <a>$sel:jobDefinitionName:JobDefinition'</a>,
--   <a>jobDefinition_jobDefinitionName</a> - The name of the job
--   definition.
--   
--   <a>$sel:jobDefinitionArn:JobDefinition'</a>,
--   <a>jobDefinition_jobDefinitionArn</a> - The Amazon Resource Name (ARN)
--   for the job definition.
--   
--   <a>$sel:revision:JobDefinition'</a>, <a>jobDefinition_revision</a> -
--   The revision of the job definition.
--   
--   <a>$sel:type':JobDefinition'</a>, <a>jobDefinition_type</a> - The type
--   of job definition. If the job is run on Fargate resources, then
--   <tt>multinode</tt> isn't supported. For more information about
--   multi-node parallel jobs, see <a>Creating a multi-node parallel job
--   definition</a> in the <i>Batch User Guide</i>.
newJobDefinition :: Text -> Text -> Int -> Text -> JobDefinition

-- | The status of the job definition.
jobDefinition_status :: Lens' JobDefinition (Maybe Text)

-- | Specifies whether to propagate the tags from the job or job definition
--   to the corresponding Amazon ECS task. If no value is specified, the
--   tags aren't propagated. Tags can only be propagated to the tasks
--   during task creation. For tags with the same name, job tags are given
--   priority over job definitions tags. If the total number of combined
--   tags from the job and job definition is over 50, the job is moved to
--   the <tt>FAILED</tt> state.
jobDefinition_propagateTags :: Lens' JobDefinition (Maybe Bool)

-- | The retry strategy to use for failed jobs that are submitted with this
--   job definition.
jobDefinition_retryStrategy :: Lens' JobDefinition (Maybe RetryStrategy)

-- | The platform capabilities required by the job definition. If no value
--   is specified, it defaults to <tt>EC2</tt>. Jobs run on Fargate
--   resources specify <tt>FARGATE</tt>.
jobDefinition_platformCapabilities :: Lens' JobDefinition (Maybe [PlatformCapability])

-- | Default parameters or parameter substitution placeholders that are set
--   in the job definition. Parameters are specified as a key-value pair
--   mapping. Parameters in a <tt>SubmitJob</tt> request override any
--   corresponding parameter defaults from the job definition. For more
--   information about specifying parameters, see <a>Job Definition
--   Parameters</a> in the <i>Batch User Guide</i>.
jobDefinition_parameters :: Lens' JobDefinition (Maybe (HashMap Text Text))

-- | The timeout configuration for jobs that are submitted with this job
--   definition. You can specify a timeout duration after which Batch
--   terminates your jobs if they haven't finished.
jobDefinition_timeout :: Lens' JobDefinition (Maybe JobTimeout)

-- | An object with various properties specific to container-based jobs.
jobDefinition_containerProperties :: Lens' JobDefinition (Maybe ContainerProperties)

-- | An object with various properties specific to multi-node parallel
--   jobs.
--   
--   If the job runs on Fargate resources, then you must not specify
--   <tt>nodeProperties</tt>; use <tt>containerProperties</tt> instead.
jobDefinition_nodeProperties :: Lens' JobDefinition (Maybe NodeProperties)

-- | The tags applied to the job definition.
jobDefinition_tags :: Lens' JobDefinition (Maybe (HashMap Text Text))

-- | The name of the job definition.
jobDefinition_jobDefinitionName :: Lens' JobDefinition Text

-- | The Amazon Resource Name (ARN) for the job definition.
jobDefinition_jobDefinitionArn :: Lens' JobDefinition Text

-- | The revision of the job definition.
jobDefinition_revision :: Lens' JobDefinition Int

-- | The type of job definition. If the job is run on Fargate resources,
--   then <tt>multinode</tt> isn't supported. For more information about
--   multi-node parallel jobs, see <a>Creating a multi-node parallel job
--   definition</a> in the <i>Batch User Guide</i>.
jobDefinition_type :: Lens' JobDefinition Text

-- | An object representing an Batch job dependency.
--   
--   <i>See:</i> <a>newJobDependency</a> smart constructor.
data JobDependency
JobDependency' :: Maybe Text -> Maybe ArrayJobDependency -> JobDependency

-- | The job ID of the Batch job associated with this dependency.
[$sel:jobId:JobDependency'] :: JobDependency -> Maybe Text

-- | The type of the job dependency.
[$sel:type':JobDependency'] :: JobDependency -> Maybe ArrayJobDependency

-- | Create a value of <a>JobDependency</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobId:JobDependency'</a>, <a>jobDependency_jobId</a> - The job
--   ID of the Batch job associated with this dependency.
--   
--   <a>$sel:type':JobDependency'</a>, <a>jobDependency_type</a> - The type
--   of the job dependency.
newJobDependency :: JobDependency

-- | The job ID of the Batch job associated with this dependency.
jobDependency_jobId :: Lens' JobDependency (Maybe Text)

-- | The type of the job dependency.
jobDependency_type :: Lens' JobDependency (Maybe ArrayJobDependency)

-- | An object representing an Batch job.
--   
--   <i>See:</i> <a>newJobDetail</a> smart constructor.
data JobDetail
JobDetail' :: Maybe Integer -> Maybe Text -> Maybe Bool -> Maybe Integer -> Maybe RetryStrategy -> Maybe [AttemptDetail] -> Maybe [PlatformCapability] -> Maybe Integer -> Maybe [JobDependency] -> Maybe ContainerDetail -> Maybe NodeDetails -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe ArrayPropertiesDetail -> Maybe JobTimeout -> Maybe NodeProperties -> Maybe (HashMap Text Text) -> Text -> Text -> Text -> JobStatus -> Text -> JobDetail

-- | The Unix timestamp (in milliseconds) for when the job was stopped
--   (when the job transitioned from the <tt>RUNNING</tt> state to a
--   terminal state, such as <tt>SUCCEEDED</tt> or <tt>FAILED</tt>).
[$sel:stoppedAt:JobDetail'] :: JobDetail -> Maybe Integer

-- | The Amazon Resource Name (ARN) of the job.
[$sel:jobArn:JobDetail'] :: JobDetail -> Maybe Text

-- | Specifies whether to propagate the tags from the job or job definition
--   to the corresponding Amazon ECS task. If no value is specified, the
--   tags aren't propagated. Tags can only be propagated to the tasks
--   during task creation. For tags with the same name, job tags are given
--   priority over job definitions tags. If the total number of combined
--   tags from the job and job definition is over 50, the job is moved to
--   the <tt>FAILED</tt> state.
[$sel:propagateTags:JobDetail'] :: JobDetail -> Maybe Bool

-- | The Unix timestamp (in milliseconds) for when the job was created. For
--   non-array jobs and parent array jobs, this is when the job entered the
--   <tt>SUBMITTED</tt> state (at the time SubmitJob was called). For array
--   child jobs, this is when the child job was spawned by its parent and
--   entered the <tt>PENDING</tt> state.
[$sel:createdAt:JobDetail'] :: JobDetail -> Maybe Integer

-- | The retry strategy to use for this job if an attempt fails.
[$sel:retryStrategy:JobDetail'] :: JobDetail -> Maybe RetryStrategy

-- | A list of job attempts associated with this job.
[$sel:attempts:JobDetail'] :: JobDetail -> Maybe [AttemptDetail]

-- | The platform capabilities required by the job definition. If no value
--   is specified, it defaults to <tt>EC2</tt>. Jobs run on Fargate
--   resources specify <tt>FARGATE</tt>.
[$sel:platformCapabilities:JobDetail'] :: JobDetail -> Maybe [PlatformCapability]

-- | The Unix timestamp (in milliseconds) for when the job was started
--   (when the job transitioned from the <tt>STARTING</tt> state to the
--   <tt>RUNNING</tt> state). This parameter isn't provided for child jobs
--   of array jobs or multi-node parallel jobs.
[$sel:startedAt:JobDetail'] :: JobDetail -> Maybe Integer

-- | A list of job IDs that this job depends on.
[$sel:dependsOn:JobDetail'] :: JobDetail -> Maybe [JobDependency]

-- | An object representing the details of the container that's associated
--   with the job.
[$sel:container:JobDetail'] :: JobDetail -> Maybe ContainerDetail

-- | An object representing the details of a node that's associated with a
--   multi-node parallel job.
[$sel:nodeDetails:JobDetail'] :: JobDetail -> Maybe NodeDetails

-- | Additional parameters passed to the job that replace parameter
--   substitution placeholders or override any corresponding parameter
--   defaults from the job definition.
[$sel:parameters:JobDetail'] :: JobDetail -> Maybe (HashMap Text Text)

-- | A short, human-readable string to provide additional details about the
--   current status of the job.
[$sel:statusReason:JobDetail'] :: JobDetail -> Maybe Text

-- | The array properties of the job, if it is an array job.
[$sel:arrayProperties:JobDetail'] :: JobDetail -> Maybe ArrayPropertiesDetail

-- | The timeout configuration for the job.
[$sel:timeout:JobDetail'] :: JobDetail -> Maybe JobTimeout

-- | An object representing the node properties of a multi-node parallel
--   job.
--   
--   This isn't applicable to jobs that are running on Fargate resources.
[$sel:nodeProperties:JobDetail'] :: JobDetail -> Maybe NodeProperties

-- | The tags applied to the job.
[$sel:tags:JobDetail'] :: JobDetail -> Maybe (HashMap Text Text)

-- | The name of the job.
[$sel:jobName:JobDetail'] :: JobDetail -> Text

-- | The ID for the job.
[$sel:jobId:JobDetail'] :: JobDetail -> Text

-- | The Amazon Resource Name (ARN) of the job queue that the job is
--   associated with.
[$sel:jobQueue:JobDetail'] :: JobDetail -> Text

-- | The current status for the job.
--   
--   If your jobs don't progress to <tt>STARTING</tt>, see <a>Jobs Stuck in
--   RUNNABLE Status</a> in the troubleshooting section of the <i>Batch
--   User Guide</i>.
[$sel:status:JobDetail'] :: JobDetail -> JobStatus

-- | The job definition that's used by this job.
[$sel:jobDefinition:JobDetail'] :: JobDetail -> Text

-- | Create a value of <a>JobDetail</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:stoppedAt:JobDetail'</a>, <a>jobDetail_stoppedAt</a> - The
--   Unix timestamp (in milliseconds) for when the job was stopped (when
--   the job transitioned from the <tt>RUNNING</tt> state to a terminal
--   state, such as <tt>SUCCEEDED</tt> or <tt>FAILED</tt>).
--   
--   <a>$sel:jobArn:JobDetail'</a>, <a>jobDetail_jobArn</a> - The Amazon
--   Resource Name (ARN) of the job.
--   
--   <a>$sel:propagateTags:JobDetail'</a>, <a>jobDetail_propagateTags</a> -
--   Specifies whether to propagate the tags from the job or job definition
--   to the corresponding Amazon ECS task. If no value is specified, the
--   tags aren't propagated. Tags can only be propagated to the tasks
--   during task creation. For tags with the same name, job tags are given
--   priority over job definitions tags. If the total number of combined
--   tags from the job and job definition is over 50, the job is moved to
--   the <tt>FAILED</tt> state.
--   
--   <a>$sel:createdAt:JobDetail'</a>, <a>jobDetail_createdAt</a> - The
--   Unix timestamp (in milliseconds) for when the job was created. For
--   non-array jobs and parent array jobs, this is when the job entered the
--   <tt>SUBMITTED</tt> state (at the time SubmitJob was called). For array
--   child jobs, this is when the child job was spawned by its parent and
--   entered the <tt>PENDING</tt> state.
--   
--   <a>$sel:retryStrategy:JobDetail'</a>, <a>jobDetail_retryStrategy</a> -
--   The retry strategy to use for this job if an attempt fails.
--   
--   <a>$sel:attempts:JobDetail'</a>, <a>jobDetail_attempts</a> - A list of
--   job attempts associated with this job.
--   
--   <a>$sel:platformCapabilities:JobDetail'</a>,
--   <a>jobDetail_platformCapabilities</a> - The platform capabilities
--   required by the job definition. If no value is specified, it defaults
--   to <tt>EC2</tt>. Jobs run on Fargate resources specify
--   <tt>FARGATE</tt>.
--   
--   <a>$sel:startedAt:JobDetail'</a>, <a>jobDetail_startedAt</a> - The
--   Unix timestamp (in milliseconds) for when the job was started (when
--   the job transitioned from the <tt>STARTING</tt> state to the
--   <tt>RUNNING</tt> state). This parameter isn't provided for child jobs
--   of array jobs or multi-node parallel jobs.
--   
--   <a>$sel:dependsOn:JobDetail'</a>, <a>jobDetail_dependsOn</a> - A list
--   of job IDs that this job depends on.
--   
--   <a>$sel:container:JobDetail'</a>, <a>jobDetail_container</a> - An
--   object representing the details of the container that's associated
--   with the job.
--   
--   <a>$sel:nodeDetails:JobDetail'</a>, <a>jobDetail_nodeDetails</a> - An
--   object representing the details of a node that's associated with a
--   multi-node parallel job.
--   
--   <a>$sel:parameters:JobDetail'</a>, <a>jobDetail_parameters</a> -
--   Additional parameters passed to the job that replace parameter
--   substitution placeholders or override any corresponding parameter
--   defaults from the job definition.
--   
--   <a>$sel:statusReason:JobDetail'</a>, <a>jobDetail_statusReason</a> - A
--   short, human-readable string to provide additional details about the
--   current status of the job.
--   
--   <a>$sel:arrayProperties:JobDetail'</a>,
--   <a>jobDetail_arrayProperties</a> - The array properties of the job, if
--   it is an array job.
--   
--   <a>$sel:timeout:JobDetail'</a>, <a>jobDetail_timeout</a> - The timeout
--   configuration for the job.
--   
--   <a>$sel:nodeProperties:JobDetail'</a>, <a>jobDetail_nodeProperties</a>
--   - An object representing the node properties of a multi-node parallel
--   job.
--   
--   This isn't applicable to jobs that are running on Fargate resources.
--   
--   <a>$sel:tags:JobDetail'</a>, <a>jobDetail_tags</a> - The tags applied
--   to the job.
--   
--   <a>$sel:jobName:JobDetail'</a>, <a>jobDetail_jobName</a> - The name of
--   the job.
--   
--   <a>$sel:jobId:JobDetail'</a>, <a>jobDetail_jobId</a> - The ID for the
--   job.
--   
--   <a>$sel:jobQueue:JobDetail'</a>, <a>jobDetail_jobQueue</a> - The
--   Amazon Resource Name (ARN) of the job queue that the job is associated
--   with.
--   
--   <a>$sel:status:JobDetail'</a>, <a>jobDetail_status</a> - The current
--   status for the job.
--   
--   If your jobs don't progress to <tt>STARTING</tt>, see <a>Jobs Stuck in
--   RUNNABLE Status</a> in the troubleshooting section of the <i>Batch
--   User Guide</i>.
--   
--   <a>$sel:jobDefinition:JobDetail'</a>, <a>jobDetail_jobDefinition</a> -
--   The job definition that's used by this job.
newJobDetail :: Text -> Text -> Text -> JobStatus -> Text -> JobDetail

-- | The Unix timestamp (in milliseconds) for when the job was stopped
--   (when the job transitioned from the <tt>RUNNING</tt> state to a
--   terminal state, such as <tt>SUCCEEDED</tt> or <tt>FAILED</tt>).
jobDetail_stoppedAt :: Lens' JobDetail (Maybe Integer)

-- | The Amazon Resource Name (ARN) of the job.
jobDetail_jobArn :: Lens' JobDetail (Maybe Text)

-- | Specifies whether to propagate the tags from the job or job definition
--   to the corresponding Amazon ECS task. If no value is specified, the
--   tags aren't propagated. Tags can only be propagated to the tasks
--   during task creation. For tags with the same name, job tags are given
--   priority over job definitions tags. If the total number of combined
--   tags from the job and job definition is over 50, the job is moved to
--   the <tt>FAILED</tt> state.
jobDetail_propagateTags :: Lens' JobDetail (Maybe Bool)

-- | The Unix timestamp (in milliseconds) for when the job was created. For
--   non-array jobs and parent array jobs, this is when the job entered the
--   <tt>SUBMITTED</tt> state (at the time SubmitJob was called). For array
--   child jobs, this is when the child job was spawned by its parent and
--   entered the <tt>PENDING</tt> state.
jobDetail_createdAt :: Lens' JobDetail (Maybe Integer)

-- | The retry strategy to use for this job if an attempt fails.
jobDetail_retryStrategy :: Lens' JobDetail (Maybe RetryStrategy)

-- | A list of job attempts associated with this job.
jobDetail_attempts :: Lens' JobDetail (Maybe [AttemptDetail])

-- | The platform capabilities required by the job definition. If no value
--   is specified, it defaults to <tt>EC2</tt>. Jobs run on Fargate
--   resources specify <tt>FARGATE</tt>.
jobDetail_platformCapabilities :: Lens' JobDetail (Maybe [PlatformCapability])

-- | The Unix timestamp (in milliseconds) for when the job was started
--   (when the job transitioned from the <tt>STARTING</tt> state to the
--   <tt>RUNNING</tt> state). This parameter isn't provided for child jobs
--   of array jobs or multi-node parallel jobs.
jobDetail_startedAt :: Lens' JobDetail (Maybe Integer)

-- | A list of job IDs that this job depends on.
jobDetail_dependsOn :: Lens' JobDetail (Maybe [JobDependency])

-- | An object representing the details of the container that's associated
--   with the job.
jobDetail_container :: Lens' JobDetail (Maybe ContainerDetail)

-- | An object representing the details of a node that's associated with a
--   multi-node parallel job.
jobDetail_nodeDetails :: Lens' JobDetail (Maybe NodeDetails)

-- | Additional parameters passed to the job that replace parameter
--   substitution placeholders or override any corresponding parameter
--   defaults from the job definition.
jobDetail_parameters :: Lens' JobDetail (Maybe (HashMap Text Text))

-- | A short, human-readable string to provide additional details about the
--   current status of the job.
jobDetail_statusReason :: Lens' JobDetail (Maybe Text)

-- | The array properties of the job, if it is an array job.
jobDetail_arrayProperties :: Lens' JobDetail (Maybe ArrayPropertiesDetail)

-- | The timeout configuration for the job.
jobDetail_timeout :: Lens' JobDetail (Maybe JobTimeout)

-- | An object representing the node properties of a multi-node parallel
--   job.
--   
--   This isn't applicable to jobs that are running on Fargate resources.
jobDetail_nodeProperties :: Lens' JobDetail (Maybe NodeProperties)

-- | The tags applied to the job.
jobDetail_tags :: Lens' JobDetail (Maybe (HashMap Text Text))

-- | The name of the job.
jobDetail_jobName :: Lens' JobDetail Text

-- | The ID for the job.
jobDetail_jobId :: Lens' JobDetail Text

-- | The Amazon Resource Name (ARN) of the job queue that the job is
--   associated with.
jobDetail_jobQueue :: Lens' JobDetail Text

-- | The current status for the job.
--   
--   If your jobs don't progress to <tt>STARTING</tt>, see <a>Jobs Stuck in
--   RUNNABLE Status</a> in the troubleshooting section of the <i>Batch
--   User Guide</i>.
jobDetail_status :: Lens' JobDetail JobStatus

-- | The job definition that's used by this job.
jobDetail_jobDefinition :: Lens' JobDetail Text

-- | An object representing the details of an Batch job queue.
--   
--   <i>See:</i> <a>newJobQueueDetail</a> smart constructor.
data JobQueueDetail
JobQueueDetail' :: Maybe JQStatus -> Maybe Text -> Maybe (HashMap Text Text) -> Text -> Text -> JQState -> Int -> [ComputeEnvironmentOrder] -> JobQueueDetail

-- | The status of the job queue (for example, <tt>CREATING</tt> or
--   <tt>VALID</tt>).
[$sel:status:JobQueueDetail'] :: JobQueueDetail -> Maybe JQStatus

-- | A short, human-readable string to provide additional details about the
--   current status of the job queue.
[$sel:statusReason:JobQueueDetail'] :: JobQueueDetail -> Maybe Text

-- | The tags applied to the job queue. For more information, see
--   <a>Tagging your Batch resources</a> in <i>Batch User Guide</i>.
[$sel:tags:JobQueueDetail'] :: JobQueueDetail -> Maybe (HashMap Text Text)

-- | The name of the job queue.
[$sel:jobQueueName:JobQueueDetail'] :: JobQueueDetail -> Text

-- | The Amazon Resource Name (ARN) of the job queue.
[$sel:jobQueueArn:JobQueueDetail'] :: JobQueueDetail -> Text

-- | Describes the ability of the queue to accept new jobs. If the job
--   queue state is <tt>ENABLED</tt>, it's able to accept jobs. If the job
--   queue state is <tt>DISABLED</tt>, new jobs can't be added to the
--   queue, but jobs already in the queue can finish.
[$sel:state:JobQueueDetail'] :: JobQueueDetail -> JQState

-- | The priority of the job queue. Job queues with a higher priority (or a
--   higher integer value for the <tt>priority</tt> parameter) are
--   evaluated first when associated with the same compute environment.
--   Priority is determined in descending order, for example, a job queue
--   with a priority value of <tt>10</tt> is given scheduling preference
--   over a job queue with a priority value of <tt>1</tt>. All of the
--   compute environments must be either EC2 (<tt>EC2</tt> or
--   <tt>SPOT</tt>) or Fargate (<tt>FARGATE</tt> or <tt>FARGATE_SPOT</tt>);
--   EC2 and Fargate compute environments can't be mixed.
[$sel:priority:JobQueueDetail'] :: JobQueueDetail -> Int

-- | The compute environments that are attached to the job queue and the
--   order that job placement is preferred. Compute environments are
--   selected for job placement in ascending order.
[$sel:computeEnvironmentOrder:JobQueueDetail'] :: JobQueueDetail -> [ComputeEnvironmentOrder]

-- | Create a value of <a>JobQueueDetail</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:JobQueueDetail'</a>, <a>jobQueueDetail_status</a> - The
--   status of the job queue (for example, <tt>CREATING</tt> or
--   <tt>VALID</tt>).
--   
--   <a>$sel:statusReason:JobQueueDetail'</a>,
--   <a>jobQueueDetail_statusReason</a> - A short, human-readable string to
--   provide additional details about the current status of the job queue.
--   
--   <a>$sel:tags:JobQueueDetail'</a>, <a>jobQueueDetail_tags</a> - The
--   tags applied to the job queue. For more information, see <a>Tagging
--   your Batch resources</a> in <i>Batch User Guide</i>.
--   
--   <a>$sel:jobQueueName:JobQueueDetail'</a>,
--   <a>jobQueueDetail_jobQueueName</a> - The name of the job queue.
--   
--   <a>$sel:jobQueueArn:JobQueueDetail'</a>,
--   <a>jobQueueDetail_jobQueueArn</a> - The Amazon Resource Name (ARN) of
--   the job queue.
--   
--   <a>$sel:state:JobQueueDetail'</a>, <a>jobQueueDetail_state</a> -
--   Describes the ability of the queue to accept new jobs. If the job
--   queue state is <tt>ENABLED</tt>, it's able to accept jobs. If the job
--   queue state is <tt>DISABLED</tt>, new jobs can't be added to the
--   queue, but jobs already in the queue can finish.
--   
--   <a>$sel:priority:JobQueueDetail'</a>, <a>jobQueueDetail_priority</a> -
--   The priority of the job queue. Job queues with a higher priority (or a
--   higher integer value for the <tt>priority</tt> parameter) are
--   evaluated first when associated with the same compute environment.
--   Priority is determined in descending order, for example, a job queue
--   with a priority value of <tt>10</tt> is given scheduling preference
--   over a job queue with a priority value of <tt>1</tt>. All of the
--   compute environments must be either EC2 (<tt>EC2</tt> or
--   <tt>SPOT</tt>) or Fargate (<tt>FARGATE</tt> or <tt>FARGATE_SPOT</tt>);
--   EC2 and Fargate compute environments can't be mixed.
--   
--   <a>$sel:computeEnvironmentOrder:JobQueueDetail'</a>,
--   <a>jobQueueDetail_computeEnvironmentOrder</a> - The compute
--   environments that are attached to the job queue and the order that job
--   placement is preferred. Compute environments are selected for job
--   placement in ascending order.
newJobQueueDetail :: Text -> Text -> JQState -> Int -> JobQueueDetail

-- | The status of the job queue (for example, <tt>CREATING</tt> or
--   <tt>VALID</tt>).
jobQueueDetail_status :: Lens' JobQueueDetail (Maybe JQStatus)

-- | A short, human-readable string to provide additional details about the
--   current status of the job queue.
jobQueueDetail_statusReason :: Lens' JobQueueDetail (Maybe Text)

-- | The tags applied to the job queue. For more information, see
--   <a>Tagging your Batch resources</a> in <i>Batch User Guide</i>.
jobQueueDetail_tags :: Lens' JobQueueDetail (Maybe (HashMap Text Text))

-- | The name of the job queue.
jobQueueDetail_jobQueueName :: Lens' JobQueueDetail Text

-- | The Amazon Resource Name (ARN) of the job queue.
jobQueueDetail_jobQueueArn :: Lens' JobQueueDetail Text

-- | Describes the ability of the queue to accept new jobs. If the job
--   queue state is <tt>ENABLED</tt>, it's able to accept jobs. If the job
--   queue state is <tt>DISABLED</tt>, new jobs can't be added to the
--   queue, but jobs already in the queue can finish.
jobQueueDetail_state :: Lens' JobQueueDetail JQState

-- | The priority of the job queue. Job queues with a higher priority (or a
--   higher integer value for the <tt>priority</tt> parameter) are
--   evaluated first when associated with the same compute environment.
--   Priority is determined in descending order, for example, a job queue
--   with a priority value of <tt>10</tt> is given scheduling preference
--   over a job queue with a priority value of <tt>1</tt>. All of the
--   compute environments must be either EC2 (<tt>EC2</tt> or
--   <tt>SPOT</tt>) or Fargate (<tt>FARGATE</tt> or <tt>FARGATE_SPOT</tt>);
--   EC2 and Fargate compute environments can't be mixed.
jobQueueDetail_priority :: Lens' JobQueueDetail Int

-- | The compute environments that are attached to the job queue and the
--   order that job placement is preferred. Compute environments are
--   selected for job placement in ascending order.
jobQueueDetail_computeEnvironmentOrder :: Lens' JobQueueDetail [ComputeEnvironmentOrder]

-- | An object representing summary details of a job.
--   
--   <i>See:</i> <a>newJobSummary</a> smart constructor.
data JobSummary
JobSummary' :: Maybe Integer -> Maybe JobStatus -> Maybe Text -> Maybe Integer -> Maybe Integer -> Maybe ContainerSummary -> Maybe Text -> Maybe Text -> Maybe ArrayPropertiesSummary -> Maybe NodePropertiesSummary -> Text -> Text -> JobSummary

-- | The Unix timestamp for when the job was stopped (when the job
--   transitioned from the <tt>RUNNING</tt> state to a terminal state, such
--   as <tt>SUCCEEDED</tt> or <tt>FAILED</tt>).
[$sel:stoppedAt:JobSummary'] :: JobSummary -> Maybe Integer

-- | The current status for the job.
[$sel:status:JobSummary'] :: JobSummary -> Maybe JobStatus

-- | The Amazon Resource Name (ARN) of the job.
[$sel:jobArn:JobSummary'] :: JobSummary -> Maybe Text

-- | The Unix timestamp for when the job was created. For non-array jobs
--   and parent array jobs, this is when the job entered the
--   <tt>SUBMITTED</tt> state (at the time SubmitJob was called). For array
--   child jobs, this is when the child job was spawned by its parent and
--   entered the <tt>PENDING</tt> state.
[$sel:createdAt:JobSummary'] :: JobSummary -> Maybe Integer

-- | The Unix timestamp for when the job was started (when the job
--   transitioned from the <tt>STARTING</tt> state to the <tt>RUNNING</tt>
--   state).
[$sel:startedAt:JobSummary'] :: JobSummary -> Maybe Integer

-- | An object representing the details of the container that's associated
--   with the job.
[$sel:container:JobSummary'] :: JobSummary -> Maybe ContainerSummary

-- | The Amazon Resource Name (ARN) of the job definition.
[$sel:jobDefinition:JobSummary'] :: JobSummary -> Maybe Text

-- | A short, human-readable string to provide additional details about the
--   current status of the job.
[$sel:statusReason:JobSummary'] :: JobSummary -> Maybe Text

-- | The array properties of the job, if it is an array job.
[$sel:arrayProperties:JobSummary'] :: JobSummary -> Maybe ArrayPropertiesSummary

-- | The node properties for a single node in a job summary list.
--   
--   This isn't applicable to jobs that are running on Fargate resources.
[$sel:nodeProperties:JobSummary'] :: JobSummary -> Maybe NodePropertiesSummary

-- | The ID of the job.
[$sel:jobId:JobSummary'] :: JobSummary -> Text

-- | The name of the job.
[$sel:jobName:JobSummary'] :: JobSummary -> Text

-- | Create a value of <a>JobSummary</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:stoppedAt:JobSummary'</a>, <a>jobSummary_stoppedAt</a> - The
--   Unix timestamp for when the job was stopped (when the job transitioned
--   from the <tt>RUNNING</tt> state to a terminal state, such as
--   <tt>SUCCEEDED</tt> or <tt>FAILED</tt>).
--   
--   <a>$sel:status:JobSummary'</a>, <a>jobSummary_status</a> - The current
--   status for the job.
--   
--   <a>$sel:jobArn:JobSummary'</a>, <a>jobSummary_jobArn</a> - The Amazon
--   Resource Name (ARN) of the job.
--   
--   <a>$sel:createdAt:JobSummary'</a>, <a>jobSummary_createdAt</a> - The
--   Unix timestamp for when the job was created. For non-array jobs and
--   parent array jobs, this is when the job entered the <tt>SUBMITTED</tt>
--   state (at the time SubmitJob was called). For array child jobs, this
--   is when the child job was spawned by its parent and entered the
--   <tt>PENDING</tt> state.
--   
--   <a>$sel:startedAt:JobSummary'</a>, <a>jobSummary_startedAt</a> - The
--   Unix timestamp for when the job was started (when the job transitioned
--   from the <tt>STARTING</tt> state to the <tt>RUNNING</tt> state).
--   
--   <a>$sel:container:JobSummary'</a>, <a>jobSummary_container</a> - An
--   object representing the details of the container that's associated
--   with the job.
--   
--   <a>$sel:jobDefinition:JobSummary'</a>, <a>jobSummary_jobDefinition</a>
--   - The Amazon Resource Name (ARN) of the job definition.
--   
--   <a>$sel:statusReason:JobSummary'</a>, <a>jobSummary_statusReason</a> -
--   A short, human-readable string to provide additional details about the
--   current status of the job.
--   
--   <a>$sel:arrayProperties:JobSummary'</a>,
--   <a>jobSummary_arrayProperties</a> - The array properties of the job,
--   if it is an array job.
--   
--   <a>$sel:nodeProperties:JobSummary'</a>,
--   <a>jobSummary_nodeProperties</a> - The node properties for a single
--   node in a job summary list.
--   
--   This isn't applicable to jobs that are running on Fargate resources.
--   
--   <a>$sel:jobId:JobSummary'</a>, <a>jobSummary_jobId</a> - The ID of the
--   job.
--   
--   <a>$sel:jobName:JobSummary'</a>, <a>jobSummary_jobName</a> - The name
--   of the job.
newJobSummary :: Text -> Text -> JobSummary

-- | The Unix timestamp for when the job was stopped (when the job
--   transitioned from the <tt>RUNNING</tt> state to a terminal state, such
--   as <tt>SUCCEEDED</tt> or <tt>FAILED</tt>).
jobSummary_stoppedAt :: Lens' JobSummary (Maybe Integer)

-- | The current status for the job.
jobSummary_status :: Lens' JobSummary (Maybe JobStatus)

-- | The Amazon Resource Name (ARN) of the job.
jobSummary_jobArn :: Lens' JobSummary (Maybe Text)

-- | The Unix timestamp for when the job was created. For non-array jobs
--   and parent array jobs, this is when the job entered the
--   <tt>SUBMITTED</tt> state (at the time SubmitJob was called). For array
--   child jobs, this is when the child job was spawned by its parent and
--   entered the <tt>PENDING</tt> state.
jobSummary_createdAt :: Lens' JobSummary (Maybe Integer)

-- | The Unix timestamp for when the job was started (when the job
--   transitioned from the <tt>STARTING</tt> state to the <tt>RUNNING</tt>
--   state).
jobSummary_startedAt :: Lens' JobSummary (Maybe Integer)

-- | An object representing the details of the container that's associated
--   with the job.
jobSummary_container :: Lens' JobSummary (Maybe ContainerSummary)

-- | The Amazon Resource Name (ARN) of the job definition.
jobSummary_jobDefinition :: Lens' JobSummary (Maybe Text)

-- | A short, human-readable string to provide additional details about the
--   current status of the job.
jobSummary_statusReason :: Lens' JobSummary (Maybe Text)

-- | The array properties of the job, if it is an array job.
jobSummary_arrayProperties :: Lens' JobSummary (Maybe ArrayPropertiesSummary)

-- | The node properties for a single node in a job summary list.
--   
--   This isn't applicable to jobs that are running on Fargate resources.
jobSummary_nodeProperties :: Lens' JobSummary (Maybe NodePropertiesSummary)

-- | The ID of the job.
jobSummary_jobId :: Lens' JobSummary Text

-- | The name of the job.
jobSummary_jobName :: Lens' JobSummary Text

-- | An object representing a job timeout configuration.
--   
--   <i>See:</i> <a>newJobTimeout</a> smart constructor.
data JobTimeout
JobTimeout' :: Maybe Int -> JobTimeout

-- | The time duration in seconds (measured from the job attempt's
--   <tt>startedAt</tt> timestamp) after which Batch terminates your jobs
--   if they have not finished. The minimum value for the timeout is 60
--   seconds.
[$sel:attemptDurationSeconds:JobTimeout'] :: JobTimeout -> Maybe Int

-- | Create a value of <a>JobTimeout</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:attemptDurationSeconds:JobTimeout'</a>,
--   <a>jobTimeout_attemptDurationSeconds</a> - The time duration in
--   seconds (measured from the job attempt's <tt>startedAt</tt> timestamp)
--   after which Batch terminates your jobs if they have not finished. The
--   minimum value for the timeout is 60 seconds.
newJobTimeout :: JobTimeout

-- | The time duration in seconds (measured from the job attempt's
--   <tt>startedAt</tt> timestamp) after which Batch terminates your jobs
--   if they have not finished. The minimum value for the timeout is 60
--   seconds.
jobTimeout_attemptDurationSeconds :: Lens' JobTimeout (Maybe Int)

-- | A key-value pair object.
--   
--   <i>See:</i> <a>newKeyValuePair</a> smart constructor.
data KeyValuePair
KeyValuePair' :: Maybe Text -> Maybe Text -> KeyValuePair

-- | The value of the key-value pair. For environment variables, this is
--   the value of the environment variable.
[$sel:value:KeyValuePair'] :: KeyValuePair -> Maybe Text

-- | The name of the key-value pair. For environment variables, this is the
--   name of the environment variable.
[$sel:name:KeyValuePair'] :: KeyValuePair -> Maybe Text

-- | Create a value of <a>KeyValuePair</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:value:KeyValuePair'</a>, <a>keyValuePair_value</a> - The value
--   of the key-value pair. For environment variables, this is the value of
--   the environment variable.
--   
--   <a>$sel:name:KeyValuePair'</a>, <a>keyValuePair_name</a> - The name of
--   the key-value pair. For environment variables, this is the name of the
--   environment variable.
newKeyValuePair :: KeyValuePair

-- | The value of the key-value pair. For environment variables, this is
--   the value of the environment variable.
keyValuePair_value :: Lens' KeyValuePair (Maybe Text)

-- | The name of the key-value pair. For environment variables, this is the
--   name of the environment variable.
keyValuePair_name :: Lens' KeyValuePair (Maybe Text)

-- | A filter name and value pair that's used to return a more specific
--   list of results from a <tt>ListJobs</tt> API operation.
--   
--   <i>See:</i> <a>newKeyValuesPair</a> smart constructor.
data KeyValuesPair
KeyValuesPair' :: Maybe [Text] -> Maybe Text -> KeyValuesPair

-- | The filter values.
[$sel:values:KeyValuesPair'] :: KeyValuesPair -> Maybe [Text]

-- | The name of the filter. Filter names are case sensitive.
[$sel:name:KeyValuesPair'] :: KeyValuesPair -> Maybe Text

-- | Create a value of <a>KeyValuesPair</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:values:KeyValuesPair'</a>, <a>keyValuesPair_values</a> - The
--   filter values.
--   
--   <a>$sel:name:KeyValuesPair'</a>, <a>keyValuesPair_name</a> - The name
--   of the filter. Filter names are case sensitive.
newKeyValuesPair :: KeyValuesPair

-- | The filter values.
keyValuesPair_values :: Lens' KeyValuesPair (Maybe [Text])

-- | The name of the filter. Filter names are case sensitive.
keyValuesPair_name :: Lens' KeyValuesPair (Maybe Text)

-- | An object representing a launch template associated with a compute
--   resource. You must specify either the launch template ID or launch
--   template name in the request, but not both.
--   
--   If security groups are specified using both the
--   <tt>securityGroupIds</tt> parameter of
--   <tt>CreateComputeEnvironment</tt> and the launch template, the values
--   in the <tt>securityGroupIds</tt> parameter of
--   <tt>CreateComputeEnvironment</tt> will be used.
--   
--   This object isn't applicable to jobs that are running on Fargate
--   resources.
--   
--   <i>See:</i> <a>newLaunchTemplateSpecification</a> smart constructor.
data LaunchTemplateSpecification
LaunchTemplateSpecification' :: Maybe Text -> Maybe Text -> Maybe Text -> LaunchTemplateSpecification

-- | The name of the launch template.
[$sel:launchTemplateName:LaunchTemplateSpecification'] :: LaunchTemplateSpecification -> Maybe Text

-- | The ID of the launch template.
[$sel:launchTemplateId:LaunchTemplateSpecification'] :: LaunchTemplateSpecification -> Maybe Text

-- | The version number of the launch template, <tt>$Latest</tt>, or
--   <tt>$Default</tt>.
--   
--   If the value is <tt>$Latest</tt>, the latest version of the launch
--   template is used. If the value is <tt>$Default</tt>, the default
--   version of the launch template is used.
--   
--   After the compute environment is created, the launch template version
--   that's used isn't changed, even if the <tt>$Default</tt> or
--   <tt>$Latest</tt> version for the launch template is updated. To use a
--   new launch template version, create a new compute environment, add the
--   new compute environment to the existing job queue, remove the old
--   compute environment from the job queue, and delete the old compute
--   environment.
--   
--   Default: <tt>$Default</tt>.
[$sel:version:LaunchTemplateSpecification'] :: LaunchTemplateSpecification -> Maybe Text

-- | Create a value of <a>LaunchTemplateSpecification</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:launchTemplateName:LaunchTemplateSpecification'</a>,
--   <a>launchTemplateSpecification_launchTemplateName</a> - The name of
--   the launch template.
--   
--   <a>$sel:launchTemplateId:LaunchTemplateSpecification'</a>,
--   <a>launchTemplateSpecification_launchTemplateId</a> - The ID of the
--   launch template.
--   
--   <a>$sel:version:LaunchTemplateSpecification'</a>,
--   <a>launchTemplateSpecification_version</a> - The version number of the
--   launch template, <tt>$Latest</tt>, or <tt>$Default</tt>.
--   
--   If the value is <tt>$Latest</tt>, the latest version of the launch
--   template is used. If the value is <tt>$Default</tt>, the default
--   version of the launch template is used.
--   
--   After the compute environment is created, the launch template version
--   that's used isn't changed, even if the <tt>$Default</tt> or
--   <tt>$Latest</tt> version for the launch template is updated. To use a
--   new launch template version, create a new compute environment, add the
--   new compute environment to the existing job queue, remove the old
--   compute environment from the job queue, and delete the old compute
--   environment.
--   
--   Default: <tt>$Default</tt>.
newLaunchTemplateSpecification :: LaunchTemplateSpecification

-- | The name of the launch template.
launchTemplateSpecification_launchTemplateName :: Lens' LaunchTemplateSpecification (Maybe Text)

-- | The ID of the launch template.
launchTemplateSpecification_launchTemplateId :: Lens' LaunchTemplateSpecification (Maybe Text)

-- | The version number of the launch template, <tt>$Latest</tt>, or
--   <tt>$Default</tt>.
--   
--   If the value is <tt>$Latest</tt>, the latest version of the launch
--   template is used. If the value is <tt>$Default</tt>, the default
--   version of the launch template is used.
--   
--   After the compute environment is created, the launch template version
--   that's used isn't changed, even if the <tt>$Default</tt> or
--   <tt>$Latest</tt> version for the launch template is updated. To use a
--   new launch template version, create a new compute environment, add the
--   new compute environment to the existing job queue, remove the old
--   compute environment from the job queue, and delete the old compute
--   environment.
--   
--   Default: <tt>$Default</tt>.
launchTemplateSpecification_version :: Lens' LaunchTemplateSpecification (Maybe Text)

-- | Linux-specific modifications that are applied to the container, such
--   as details for device mappings.
--   
--   <i>See:</i> <a>newLinuxParameters</a> smart constructor.
data LinuxParameters
LinuxParameters' :: Maybe Int -> Maybe Bool -> Maybe [Tmpfs] -> Maybe Int -> Maybe [Device] -> Maybe Int -> LinuxParameters

-- | The value for the size (in MiB) of the <tt>/dev/shm</tt> volume. This
--   parameter maps to the <tt>--shm-size</tt> option to <a>docker run</a>.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources and shouldn't be provided.
[$sel:sharedMemorySize:LinuxParameters'] :: LinuxParameters -> Maybe Int

-- | If true, run an <tt>init</tt> process inside the container that
--   forwards signals and reaps processes. This parameter maps to the
--   <tt>--init</tt> option to <a>docker run</a>. This parameter requires
--   version 1.25 of the Docker Remote API or greater on your container
--   instance. To check the Docker Remote API version on your container
--   instance, log into your container instance and run the following
--   command: <tt>sudo docker version | grep "Server API version"</tt>
[$sel:initProcessEnabled:LinuxParameters'] :: LinuxParameters -> Maybe Bool

-- | The container path, mount options, and size (in MiB) of the tmpfs
--   mount. This parameter maps to the <tt>--tmpfs</tt> option to <a>docker
--   run</a>.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources and shouldn't be provided.
[$sel:tmpfs:LinuxParameters'] :: LinuxParameters -> Maybe [Tmpfs]

-- | This allows you to tune a container's memory swappiness behavior. A
--   <tt>swappiness</tt> value of <tt>0</tt> causes swapping not to happen
--   unless absolutely necessary. A <tt>swappiness</tt> value of
--   <tt>100</tt> causes pages to be swapped very aggressively. Accepted
--   values are whole numbers between <tt>0</tt> and <tt>100</tt>. If the
--   <tt>swappiness</tt> parameter isn't specified, a default value of
--   <tt>60</tt> is used. If a value isn't specified for <tt>maxSwap</tt>,
--   then this parameter is ignored. If <tt>maxSwap</tt> is set to 0, the
--   container doesn't use swap. This parameter maps to the
--   <tt>--memory-swappiness</tt> option to <a>docker run</a>.
--   
--   Consider the following when you use a per-container swap
--   configuration.
--   
--   <ul>
--   <li>Swap space must be enabled and allocated on the container instance
--   for the containers to use.The Amazon ECS optimized AMIs don't have
--   swap enabled by default. You must enable swap on the instance to use
--   this feature. For more information, see <a>Instance Store Swap
--   Volumes</a> in the <i>Amazon EC2 User Guide for Linux Instances</i> or
--   <a>How do I allocate memory to work as swap space in an Amazon EC2
--   instance by using a swap file?</a></li>
--   <li>The swap space parameters are only supported for job definitions
--   using EC2 resources.</li>
--   <li>If the <tt>maxSwap</tt> and <tt>swappiness</tt> parameters are
--   omitted from a job definition, each container will have a default
--   <tt>swappiness</tt> value of 60, and the total swap usage will be
--   limited to two times the memory reservation of the container.</li>
--   </ul>
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources and shouldn't be provided.
[$sel:swappiness:LinuxParameters'] :: LinuxParameters -> Maybe Int

-- | Any host devices to expose to the container. This parameter maps to
--   <tt>Devices</tt> in the <a>Create a container</a> section of the
--   <a>Docker Remote API</a> and the <tt>--device</tt> option to <a>docker
--   run</a>.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources and shouldn't be provided.
[$sel:devices:LinuxParameters'] :: LinuxParameters -> Maybe [Device]

-- | The total amount of swap memory (in MiB) a container can use. This
--   parameter is translated to the <tt>--memory-swap</tt> option to
--   <a>docker run</a> where the value is the sum of the container memory
--   plus the <tt>maxSwap</tt> value. For more information, see
--   <a>--memory-swap details</a> in the Docker documentation.
--   
--   If a <tt>maxSwap</tt> value of <tt>0</tt> is specified, the container
--   doesn't use swap. Accepted values are <tt>0</tt> or any positive
--   integer. If the <tt>maxSwap</tt> parameter is omitted, the container
--   doesn't use the swap configuration for the container instance it is
--   running on. A <tt>maxSwap</tt> value must be set for the
--   <tt>swappiness</tt> parameter to be used.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources and shouldn't be provided.
[$sel:maxSwap:LinuxParameters'] :: LinuxParameters -> Maybe Int

-- | Create a value of <a>LinuxParameters</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sharedMemorySize:LinuxParameters'</a>,
--   <a>linuxParameters_sharedMemorySize</a> - The value for the size (in
--   MiB) of the <tt>/dev/shm</tt> volume. This parameter maps to the
--   <tt>--shm-size</tt> option to <a>docker run</a>.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources and shouldn't be provided.
--   
--   <a>$sel:initProcessEnabled:LinuxParameters'</a>,
--   <a>linuxParameters_initProcessEnabled</a> - If true, run an
--   <tt>init</tt> process inside the container that forwards signals and
--   reaps processes. This parameter maps to the <tt>--init</tt> option to
--   <a>docker run</a>. This parameter requires version 1.25 of the Docker
--   Remote API or greater on your container instance. To check the Docker
--   Remote API version on your container instance, log into your container
--   instance and run the following command: <tt>sudo docker version | grep
--   "Server API version"</tt>
--   
--   <a>$sel:tmpfs:LinuxParameters'</a>, <a>linuxParameters_tmpfs</a> - The
--   container path, mount options, and size (in MiB) of the tmpfs mount.
--   This parameter maps to the <tt>--tmpfs</tt> option to <a>docker
--   run</a>.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources and shouldn't be provided.
--   
--   <a>$sel:swappiness:LinuxParameters'</a>,
--   <a>linuxParameters_swappiness</a> - This allows you to tune a
--   container's memory swappiness behavior. A <tt>swappiness</tt> value of
--   <tt>0</tt> causes swapping not to happen unless absolutely necessary.
--   A <tt>swappiness</tt> value of <tt>100</tt> causes pages to be swapped
--   very aggressively. Accepted values are whole numbers between
--   <tt>0</tt> and <tt>100</tt>. If the <tt>swappiness</tt> parameter
--   isn't specified, a default value of <tt>60</tt> is used. If a value
--   isn't specified for <tt>maxSwap</tt>, then this parameter is ignored.
--   If <tt>maxSwap</tt> is set to 0, the container doesn't use swap. This
--   parameter maps to the <tt>--memory-swappiness</tt> option to <a>docker
--   run</a>.
--   
--   Consider the following when you use a per-container swap
--   configuration.
--   
--   <ul>
--   <li>Swap space must be enabled and allocated on the container instance
--   for the containers to use.The Amazon ECS optimized AMIs don't have
--   swap enabled by default. You must enable swap on the instance to use
--   this feature. For more information, see <a>Instance Store Swap
--   Volumes</a> in the <i>Amazon EC2 User Guide for Linux Instances</i> or
--   <a>How do I allocate memory to work as swap space in an Amazon EC2
--   instance by using a swap file?</a></li>
--   <li>The swap space parameters are only supported for job definitions
--   using EC2 resources.</li>
--   <li>If the <tt>maxSwap</tt> and <tt>swappiness</tt> parameters are
--   omitted from a job definition, each container will have a default
--   <tt>swappiness</tt> value of 60, and the total swap usage will be
--   limited to two times the memory reservation of the container.</li>
--   </ul>
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources and shouldn't be provided.
--   
--   <a>$sel:devices:LinuxParameters'</a>, <a>linuxParameters_devices</a> -
--   Any host devices to expose to the container. This parameter maps to
--   <tt>Devices</tt> in the <a>Create a container</a> section of the
--   <a>Docker Remote API</a> and the <tt>--device</tt> option to <a>docker
--   run</a>.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources and shouldn't be provided.
--   
--   <a>$sel:maxSwap:LinuxParameters'</a>, <a>linuxParameters_maxSwap</a> -
--   The total amount of swap memory (in MiB) a container can use. This
--   parameter is translated to the <tt>--memory-swap</tt> option to
--   <a>docker run</a> where the value is the sum of the container memory
--   plus the <tt>maxSwap</tt> value. For more information, see
--   <a>--memory-swap details</a> in the Docker documentation.
--   
--   If a <tt>maxSwap</tt> value of <tt>0</tt> is specified, the container
--   doesn't use swap. Accepted values are <tt>0</tt> or any positive
--   integer. If the <tt>maxSwap</tt> parameter is omitted, the container
--   doesn't use the swap configuration for the container instance it is
--   running on. A <tt>maxSwap</tt> value must be set for the
--   <tt>swappiness</tt> parameter to be used.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources and shouldn't be provided.
newLinuxParameters :: LinuxParameters

-- | The value for the size (in MiB) of the <tt>/dev/shm</tt> volume. This
--   parameter maps to the <tt>--shm-size</tt> option to <a>docker run</a>.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources and shouldn't be provided.
linuxParameters_sharedMemorySize :: Lens' LinuxParameters (Maybe Int)

-- | If true, run an <tt>init</tt> process inside the container that
--   forwards signals and reaps processes. This parameter maps to the
--   <tt>--init</tt> option to <a>docker run</a>. This parameter requires
--   version 1.25 of the Docker Remote API or greater on your container
--   instance. To check the Docker Remote API version on your container
--   instance, log into your container instance and run the following
--   command: <tt>sudo docker version | grep "Server API version"</tt>
linuxParameters_initProcessEnabled :: Lens' LinuxParameters (Maybe Bool)

-- | The container path, mount options, and size (in MiB) of the tmpfs
--   mount. This parameter maps to the <tt>--tmpfs</tt> option to <a>docker
--   run</a>.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources and shouldn't be provided.
linuxParameters_tmpfs :: Lens' LinuxParameters (Maybe [Tmpfs])

-- | This allows you to tune a container's memory swappiness behavior. A
--   <tt>swappiness</tt> value of <tt>0</tt> causes swapping not to happen
--   unless absolutely necessary. A <tt>swappiness</tt> value of
--   <tt>100</tt> causes pages to be swapped very aggressively. Accepted
--   values are whole numbers between <tt>0</tt> and <tt>100</tt>. If the
--   <tt>swappiness</tt> parameter isn't specified, a default value of
--   <tt>60</tt> is used. If a value isn't specified for <tt>maxSwap</tt>,
--   then this parameter is ignored. If <tt>maxSwap</tt> is set to 0, the
--   container doesn't use swap. This parameter maps to the
--   <tt>--memory-swappiness</tt> option to <a>docker run</a>.
--   
--   Consider the following when you use a per-container swap
--   configuration.
--   
--   <ul>
--   <li>Swap space must be enabled and allocated on the container instance
--   for the containers to use.The Amazon ECS optimized AMIs don't have
--   swap enabled by default. You must enable swap on the instance to use
--   this feature. For more information, see <a>Instance Store Swap
--   Volumes</a> in the <i>Amazon EC2 User Guide for Linux Instances</i> or
--   <a>How do I allocate memory to work as swap space in an Amazon EC2
--   instance by using a swap file?</a></li>
--   <li>The swap space parameters are only supported for job definitions
--   using EC2 resources.</li>
--   <li>If the <tt>maxSwap</tt> and <tt>swappiness</tt> parameters are
--   omitted from a job definition, each container will have a default
--   <tt>swappiness</tt> value of 60, and the total swap usage will be
--   limited to two times the memory reservation of the container.</li>
--   </ul>
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources and shouldn't be provided.
linuxParameters_swappiness :: Lens' LinuxParameters (Maybe Int)

-- | Any host devices to expose to the container. This parameter maps to
--   <tt>Devices</tt> in the <a>Create a container</a> section of the
--   <a>Docker Remote API</a> and the <tt>--device</tt> option to <a>docker
--   run</a>.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources and shouldn't be provided.
linuxParameters_devices :: Lens' LinuxParameters (Maybe [Device])

-- | The total amount of swap memory (in MiB) a container can use. This
--   parameter is translated to the <tt>--memory-swap</tt> option to
--   <a>docker run</a> where the value is the sum of the container memory
--   plus the <tt>maxSwap</tt> value. For more information, see
--   <a>--memory-swap details</a> in the Docker documentation.
--   
--   If a <tt>maxSwap</tt> value of <tt>0</tt> is specified, the container
--   doesn't use swap. Accepted values are <tt>0</tt> or any positive
--   integer. If the <tt>maxSwap</tt> parameter is omitted, the container
--   doesn't use the swap configuration for the container instance it is
--   running on. A <tt>maxSwap</tt> value must be set for the
--   <tt>swappiness</tt> parameter to be used.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources and shouldn't be provided.
linuxParameters_maxSwap :: Lens' LinuxParameters (Maybe Int)

-- | Log configuration options to send to a custom log driver for the
--   container.
--   
--   <i>See:</i> <a>newLogConfiguration</a> smart constructor.
data LogConfiguration
LogConfiguration' :: Maybe (HashMap Text Text) -> Maybe [Secret] -> LogDriver -> LogConfiguration

-- | The configuration options to send to the log driver. This parameter
--   requires version 1.19 of the Docker Remote API or greater on your
--   container instance. To check the Docker Remote API version on your
--   container instance, log into your container instance and run the
--   following command: <tt>sudo docker version | grep "Server API
--   version"</tt>
[$sel:options:LogConfiguration'] :: LogConfiguration -> Maybe (HashMap Text Text)

-- | The secrets to pass to the log configuration. For more information,
--   see <a>Specifying Sensitive Data</a> in the <i>Batch User Guide</i>.
[$sel:secretOptions:LogConfiguration'] :: LogConfiguration -> Maybe [Secret]

-- | The log driver to use for the container. The valid values listed for
--   this parameter are log drivers that the Amazon ECS container agent can
--   communicate with by default.
--   
--   The supported log drivers are <tt>awslogs</tt>, <tt>fluentd</tt>,
--   <tt>gelf</tt>, <tt>json-file</tt>, <tt>journald</tt>,
--   <tt>logentries</tt>, <tt>syslog</tt>, and <tt>splunk</tt>.
--   
--   Jobs that are running on Fargate resources are restricted to the
--   <tt>awslogs</tt> and <tt>splunk</tt> log drivers.
--   
--   <ul>
--   <li><i>awslogs</i> Specifies the Amazon CloudWatch Logs logging
--   driver. For more information, see <a>Using the awslogs Log Driver</a>
--   in the <i>Batch User Guide</i> and <a>Amazon CloudWatch Logs logging
--   driver</a> in the Docker documentation.</li>
--   <li><i>fluentd</i> Specifies the Fluentd logging driver. For more
--   information, including usage and options, see <a>Fluentd logging
--   driver</a> in the Docker documentation.</li>
--   <li><i>gelf</i> Specifies the Graylog Extended Format (GELF) logging
--   driver. For more information, including usage and options, see
--   <a>Graylog Extended Format logging driver</a> in the Docker
--   documentation.</li>
--   <li><i>journald</i> Specifies the journald logging driver. For more
--   information, including usage and options, see <a>Journald logging
--   driver</a> in the Docker documentation.</li>
--   <li><i>json-file</i> Specifies the JSON file logging driver. For more
--   information, including usage and options, see <a>JSON File logging
--   driver</a> in the Docker documentation.</li>
--   <li><i>splunk</i> Specifies the Splunk logging driver. For more
--   information, including usage and options, see <a>Splunk logging
--   driver</a> in the Docker documentation.</li>
--   <li><i>syslog</i> Specifies the syslog logging driver. For more
--   information, including usage and options, see <a>Syslog logging
--   driver</a> in the Docker documentation.</li>
--   </ul>
--   
--   If you have a custom driver that's not listed earlier that you want to
--   work with the Amazon ECS container agent, you can fork the Amazon ECS
--   container agent project that's <a>available on GitHub</a> and
--   customize it to work with that driver. We encourage you to submit pull
--   requests for changes that you want to have included. However, Amazon
--   Web Services doesn't currently support running modified copies of this
--   software.
--   
--   This parameter requires version 1.18 of the Docker Remote API or
--   greater on your container instance. To check the Docker Remote API
--   version on your container instance, log into your container instance
--   and run the following command: <tt>sudo docker version | grep "Server
--   API version"</tt>
[$sel:logDriver:LogConfiguration'] :: LogConfiguration -> LogDriver

-- | Create a value of <a>LogConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:options:LogConfiguration'</a>, <a>logConfiguration_options</a>
--   - The configuration options to send to the log driver. This parameter
--   requires version 1.19 of the Docker Remote API or greater on your
--   container instance. To check the Docker Remote API version on your
--   container instance, log into your container instance and run the
--   following command: <tt>sudo docker version | grep "Server API
--   version"</tt>
--   
--   <a>$sel:secretOptions:LogConfiguration'</a>,
--   <a>logConfiguration_secretOptions</a> - The secrets to pass to the log
--   configuration. For more information, see <a>Specifying Sensitive
--   Data</a> in the <i>Batch User Guide</i>.
--   
--   <a>$sel:logDriver:LogConfiguration'</a>,
--   <a>logConfiguration_logDriver</a> - The log driver to use for the
--   container. The valid values listed for this parameter are log drivers
--   that the Amazon ECS container agent can communicate with by default.
--   
--   The supported log drivers are <tt>awslogs</tt>, <tt>fluentd</tt>,
--   <tt>gelf</tt>, <tt>json-file</tt>, <tt>journald</tt>,
--   <tt>logentries</tt>, <tt>syslog</tt>, and <tt>splunk</tt>.
--   
--   Jobs that are running on Fargate resources are restricted to the
--   <tt>awslogs</tt> and <tt>splunk</tt> log drivers.
--   
--   <ul>
--   <li><i>awslogs</i> Specifies the Amazon CloudWatch Logs logging
--   driver. For more information, see <a>Using the awslogs Log Driver</a>
--   in the <i>Batch User Guide</i> and <a>Amazon CloudWatch Logs logging
--   driver</a> in the Docker documentation.</li>
--   <li><i>fluentd</i> Specifies the Fluentd logging driver. For more
--   information, including usage and options, see <a>Fluentd logging
--   driver</a> in the Docker documentation.</li>
--   <li><i>gelf</i> Specifies the Graylog Extended Format (GELF) logging
--   driver. For more information, including usage and options, see
--   <a>Graylog Extended Format logging driver</a> in the Docker
--   documentation.</li>
--   <li><i>journald</i> Specifies the journald logging driver. For more
--   information, including usage and options, see <a>Journald logging
--   driver</a> in the Docker documentation.</li>
--   <li><i>json-file</i> Specifies the JSON file logging driver. For more
--   information, including usage and options, see <a>JSON File logging
--   driver</a> in the Docker documentation.</li>
--   <li><i>splunk</i> Specifies the Splunk logging driver. For more
--   information, including usage and options, see <a>Splunk logging
--   driver</a> in the Docker documentation.</li>
--   <li><i>syslog</i> Specifies the syslog logging driver. For more
--   information, including usage and options, see <a>Syslog logging
--   driver</a> in the Docker documentation.</li>
--   </ul>
--   
--   If you have a custom driver that's not listed earlier that you want to
--   work with the Amazon ECS container agent, you can fork the Amazon ECS
--   container agent project that's <a>available on GitHub</a> and
--   customize it to work with that driver. We encourage you to submit pull
--   requests for changes that you want to have included. However, Amazon
--   Web Services doesn't currently support running modified copies of this
--   software.
--   
--   This parameter requires version 1.18 of the Docker Remote API or
--   greater on your container instance. To check the Docker Remote API
--   version on your container instance, log into your container instance
--   and run the following command: <tt>sudo docker version | grep "Server
--   API version"</tt>
newLogConfiguration :: LogDriver -> LogConfiguration

-- | The configuration options to send to the log driver. This parameter
--   requires version 1.19 of the Docker Remote API or greater on your
--   container instance. To check the Docker Remote API version on your
--   container instance, log into your container instance and run the
--   following command: <tt>sudo docker version | grep "Server API
--   version"</tt>
logConfiguration_options :: Lens' LogConfiguration (Maybe (HashMap Text Text))

-- | The secrets to pass to the log configuration. For more information,
--   see <a>Specifying Sensitive Data</a> in the <i>Batch User Guide</i>.
logConfiguration_secretOptions :: Lens' LogConfiguration (Maybe [Secret])

-- | The log driver to use for the container. The valid values listed for
--   this parameter are log drivers that the Amazon ECS container agent can
--   communicate with by default.
--   
--   The supported log drivers are <tt>awslogs</tt>, <tt>fluentd</tt>,
--   <tt>gelf</tt>, <tt>json-file</tt>, <tt>journald</tt>,
--   <tt>logentries</tt>, <tt>syslog</tt>, and <tt>splunk</tt>.
--   
--   Jobs that are running on Fargate resources are restricted to the
--   <tt>awslogs</tt> and <tt>splunk</tt> log drivers.
--   
--   <ul>
--   <li><i>awslogs</i> Specifies the Amazon CloudWatch Logs logging
--   driver. For more information, see <a>Using the awslogs Log Driver</a>
--   in the <i>Batch User Guide</i> and <a>Amazon CloudWatch Logs logging
--   driver</a> in the Docker documentation.</li>
--   <li><i>fluentd</i> Specifies the Fluentd logging driver. For more
--   information, including usage and options, see <a>Fluentd logging
--   driver</a> in the Docker documentation.</li>
--   <li><i>gelf</i> Specifies the Graylog Extended Format (GELF) logging
--   driver. For more information, including usage and options, see
--   <a>Graylog Extended Format logging driver</a> in the Docker
--   documentation.</li>
--   <li><i>journald</i> Specifies the journald logging driver. For more
--   information, including usage and options, see <a>Journald logging
--   driver</a> in the Docker documentation.</li>
--   <li><i>json-file</i> Specifies the JSON file logging driver. For more
--   information, including usage and options, see <a>JSON File logging
--   driver</a> in the Docker documentation.</li>
--   <li><i>splunk</i> Specifies the Splunk logging driver. For more
--   information, including usage and options, see <a>Splunk logging
--   driver</a> in the Docker documentation.</li>
--   <li><i>syslog</i> Specifies the syslog logging driver. For more
--   information, including usage and options, see <a>Syslog logging
--   driver</a> in the Docker documentation.</li>
--   </ul>
--   
--   If you have a custom driver that's not listed earlier that you want to
--   work with the Amazon ECS container agent, you can fork the Amazon ECS
--   container agent project that's <a>available on GitHub</a> and
--   customize it to work with that driver. We encourage you to submit pull
--   requests for changes that you want to have included. However, Amazon
--   Web Services doesn't currently support running modified copies of this
--   software.
--   
--   This parameter requires version 1.18 of the Docker Remote API or
--   greater on your container instance. To check the Docker Remote API
--   version on your container instance, log into your container instance
--   and run the following command: <tt>sudo docker version | grep "Server
--   API version"</tt>
logConfiguration_logDriver :: Lens' LogConfiguration LogDriver

-- | Details on a Docker volume mount point that's used in a job's
--   container properties. This parameter maps to <tt>Volumes</tt> in the
--   <a>Create a container</a> section of the Docker Remote API and the
--   <tt>--volume</tt> option to docker run.
--   
--   <i>See:</i> <a>newMountPoint</a> smart constructor.
data MountPoint
MountPoint' :: Maybe Text -> Maybe Text -> Maybe Bool -> MountPoint

-- | The path on the container where the host volume is mounted.
[$sel:containerPath:MountPoint'] :: MountPoint -> Maybe Text

-- | The name of the volume to mount.
[$sel:sourceVolume:MountPoint'] :: MountPoint -> Maybe Text

-- | If this value is <tt>true</tt>, the container has read-only access to
--   the volume. Otherwise, the container can write to the volume. The
--   default value is <tt>false</tt>.
[$sel:readOnly:MountPoint'] :: MountPoint -> Maybe Bool

-- | Create a value of <a>MountPoint</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:containerPath:MountPoint'</a>, <a>mountPoint_containerPath</a>
--   - The path on the container where the host volume is mounted.
--   
--   <a>$sel:sourceVolume:MountPoint'</a>, <a>mountPoint_sourceVolume</a> -
--   The name of the volume to mount.
--   
--   <a>$sel:readOnly:MountPoint'</a>, <a>mountPoint_readOnly</a> - If this
--   value is <tt>true</tt>, the container has read-only access to the
--   volume. Otherwise, the container can write to the volume. The default
--   value is <tt>false</tt>.
newMountPoint :: MountPoint

-- | The path on the container where the host volume is mounted.
mountPoint_containerPath :: Lens' MountPoint (Maybe Text)

-- | The name of the volume to mount.
mountPoint_sourceVolume :: Lens' MountPoint (Maybe Text)

-- | If this value is <tt>true</tt>, the container has read-only access to
--   the volume. Otherwise, the container can write to the volume. The
--   default value is <tt>false</tt>.
mountPoint_readOnly :: Lens' MountPoint (Maybe Bool)

-- | The network configuration for jobs that are running on Fargate
--   resources. Jobs that are running on EC2 resources must not specify
--   this parameter.
--   
--   <i>See:</i> <a>newNetworkConfiguration</a> smart constructor.
data NetworkConfiguration
NetworkConfiguration' :: Maybe AssignPublicIp -> NetworkConfiguration

-- | Indicates whether the job should have a public IP address. For a job
--   that is running on Fargate resources in a private subnet to send
--   outbound traffic to the internet (for example, to pull container
--   images), the private subnet requires a NAT gateway be attached to
--   route requests to the internet. For more information, see <a>Amazon
--   ECS task networking</a>. The default value is "DISABLED".
[$sel:assignPublicIp:NetworkConfiguration'] :: NetworkConfiguration -> Maybe AssignPublicIp

-- | Create a value of <a>NetworkConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:assignPublicIp:NetworkConfiguration'</a>,
--   <a>networkConfiguration_assignPublicIp</a> - Indicates whether the job
--   should have a public IP address. For a job that is running on Fargate
--   resources in a private subnet to send outbound traffic to the internet
--   (for example, to pull container images), the private subnet requires a
--   NAT gateway be attached to route requests to the internet. For more
--   information, see <a>Amazon ECS task networking</a>. The default value
--   is "DISABLED".
newNetworkConfiguration :: NetworkConfiguration

-- | Indicates whether the job should have a public IP address. For a job
--   that is running on Fargate resources in a private subnet to send
--   outbound traffic to the internet (for example, to pull container
--   images), the private subnet requires a NAT gateway be attached to
--   route requests to the internet. For more information, see <a>Amazon
--   ECS task networking</a>. The default value is "DISABLED".
networkConfiguration_assignPublicIp :: Lens' NetworkConfiguration (Maybe AssignPublicIp)

-- | An object representing the elastic network interface for a multi-node
--   parallel job node.
--   
--   <i>See:</i> <a>newNetworkInterface</a> smart constructor.
data NetworkInterface
NetworkInterface' :: Maybe Text -> Maybe Text -> Maybe Text -> NetworkInterface

-- | The private IPv6 address for the network interface.
[$sel:ipv6Address:NetworkInterface'] :: NetworkInterface -> Maybe Text

-- | The private IPv4 address for the network interface.
[$sel:privateIpv4Address:NetworkInterface'] :: NetworkInterface -> Maybe Text

-- | The attachment ID for the network interface.
[$sel:attachmentId:NetworkInterface'] :: NetworkInterface -> Maybe Text

-- | Create a value of <a>NetworkInterface</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ipv6Address:NetworkInterface'</a>,
--   <a>networkInterface_ipv6Address</a> - The private IPv6 address for the
--   network interface.
--   
--   <a>$sel:privateIpv4Address:NetworkInterface'</a>,
--   <a>networkInterface_privateIpv4Address</a> - The private IPv4 address
--   for the network interface.
--   
--   <a>$sel:attachmentId:NetworkInterface'</a>,
--   <a>networkInterface_attachmentId</a> - The attachment ID for the
--   network interface.
newNetworkInterface :: NetworkInterface

-- | The private IPv6 address for the network interface.
networkInterface_ipv6Address :: Lens' NetworkInterface (Maybe Text)

-- | The private IPv4 address for the network interface.
networkInterface_privateIpv4Address :: Lens' NetworkInterface (Maybe Text)

-- | The attachment ID for the network interface.
networkInterface_attachmentId :: Lens' NetworkInterface (Maybe Text)

-- | An object representing the details of a multi-node parallel job node.
--   
--   <i>See:</i> <a>newNodeDetails</a> smart constructor.
data NodeDetails
NodeDetails' :: Maybe Int -> Maybe Bool -> NodeDetails

-- | The node index for the node. Node index numbering begins at zero. This
--   index is also available on the node with the
--   <tt>AWS_BATCH_JOB_NODE_INDEX</tt> environment variable.
[$sel:nodeIndex:NodeDetails'] :: NodeDetails -> Maybe Int

-- | Specifies whether the current node is the main node for a multi-node
--   parallel job.
[$sel:isMainNode:NodeDetails'] :: NodeDetails -> Maybe Bool

-- | Create a value of <a>NodeDetails</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nodeIndex:NodeDetails'</a>, <a>nodeDetails_nodeIndex</a> - The
--   node index for the node. Node index numbering begins at zero. This
--   index is also available on the node with the
--   <tt>AWS_BATCH_JOB_NODE_INDEX</tt> environment variable.
--   
--   <a>$sel:isMainNode:NodeDetails'</a>, <a>nodeDetails_isMainNode</a> -
--   Specifies whether the current node is the main node for a multi-node
--   parallel job.
newNodeDetails :: NodeDetails

-- | The node index for the node. Node index numbering begins at zero. This
--   index is also available on the node with the
--   <tt>AWS_BATCH_JOB_NODE_INDEX</tt> environment variable.
nodeDetails_nodeIndex :: Lens' NodeDetails (Maybe Int)

-- | Specifies whether the current node is the main node for a multi-node
--   parallel job.
nodeDetails_isMainNode :: Lens' NodeDetails (Maybe Bool)

-- | Object representing any node overrides to a job definition that's used
--   in a SubmitJob API operation.
--   
--   This isn't applicable to jobs that are running on Fargate resources
--   and shouldn't be provided; use <tt>containerOverrides</tt> instead.
--   
--   <i>See:</i> <a>newNodeOverrides</a> smart constructor.
data NodeOverrides
NodeOverrides' :: Maybe Int -> Maybe [NodePropertyOverride] -> NodeOverrides

-- | The number of nodes to use with a multi-node parallel job. This value
--   overrides the number of nodes that are specified in the job
--   definition. To use this override:
--   
--   <ul>
--   <li>There must be at least one node range in your job definition that
--   has an open upper boundary (such as <tt>:</tt> or <tt>n:</tt>).</li>
--   <li>The lower boundary of the node range specified in the job
--   definition must be fewer than the number of nodes specified in the
--   override.</li>
--   <li>The main node index specified in the job definition must be fewer
--   than the number of nodes specified in the override.</li>
--   </ul>
[$sel:numNodes:NodeOverrides'] :: NodeOverrides -> Maybe Int

-- | The node property overrides for the job.
[$sel:nodePropertyOverrides:NodeOverrides'] :: NodeOverrides -> Maybe [NodePropertyOverride]

-- | Create a value of <a>NodeOverrides</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:numNodes:NodeOverrides'</a>, <a>nodeOverrides_numNodes</a> -
--   The number of nodes to use with a multi-node parallel job. This value
--   overrides the number of nodes that are specified in the job
--   definition. To use this override:
--   
--   <ul>
--   <li>There must be at least one node range in your job definition that
--   has an open upper boundary (such as <tt>:</tt> or <tt>n:</tt>).</li>
--   <li>The lower boundary of the node range specified in the job
--   definition must be fewer than the number of nodes specified in the
--   override.</li>
--   <li>The main node index specified in the job definition must be fewer
--   than the number of nodes specified in the override.</li>
--   </ul>
--   
--   <a>$sel:nodePropertyOverrides:NodeOverrides'</a>,
--   <a>nodeOverrides_nodePropertyOverrides</a> - The node property
--   overrides for the job.
newNodeOverrides :: NodeOverrides

-- | The number of nodes to use with a multi-node parallel job. This value
--   overrides the number of nodes that are specified in the job
--   definition. To use this override:
--   
--   <ul>
--   <li>There must be at least one node range in your job definition that
--   has an open upper boundary (such as <tt>:</tt> or <tt>n:</tt>).</li>
--   <li>The lower boundary of the node range specified in the job
--   definition must be fewer than the number of nodes specified in the
--   override.</li>
--   <li>The main node index specified in the job definition must be fewer
--   than the number of nodes specified in the override.</li>
--   </ul>
nodeOverrides_numNodes :: Lens' NodeOverrides (Maybe Int)

-- | The node property overrides for the job.
nodeOverrides_nodePropertyOverrides :: Lens' NodeOverrides (Maybe [NodePropertyOverride])

-- | An object representing the node properties of a multi-node parallel
--   job.
--   
--   <i>See:</i> <a>newNodeProperties</a> smart constructor.
data NodeProperties
NodeProperties' :: Int -> Int -> [NodeRangeProperty] -> NodeProperties

-- | The number of nodes associated with a multi-node parallel job.
[$sel:numNodes:NodeProperties'] :: NodeProperties -> Int

-- | Specifies the node index for the main node of a multi-node parallel
--   job. This node index value must be fewer than the number of nodes.
[$sel:mainNode:NodeProperties'] :: NodeProperties -> Int

-- | A list of node ranges and their properties associated with a
--   multi-node parallel job.
[$sel:nodeRangeProperties:NodeProperties'] :: NodeProperties -> [NodeRangeProperty]

-- | Create a value of <a>NodeProperties</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:numNodes:NodeProperties'</a>, <a>nodeProperties_numNodes</a> -
--   The number of nodes associated with a multi-node parallel job.
--   
--   <a>$sel:mainNode:NodeProperties'</a>, <a>nodeProperties_mainNode</a> -
--   Specifies the node index for the main node of a multi-node parallel
--   job. This node index value must be fewer than the number of nodes.
--   
--   <a>$sel:nodeRangeProperties:NodeProperties'</a>,
--   <a>nodeProperties_nodeRangeProperties</a> - A list of node ranges and
--   their properties associated with a multi-node parallel job.
newNodeProperties :: Int -> Int -> NodeProperties

-- | The number of nodes associated with a multi-node parallel job.
nodeProperties_numNodes :: Lens' NodeProperties Int

-- | Specifies the node index for the main node of a multi-node parallel
--   job. This node index value must be fewer than the number of nodes.
nodeProperties_mainNode :: Lens' NodeProperties Int

-- | A list of node ranges and their properties associated with a
--   multi-node parallel job.
nodeProperties_nodeRangeProperties :: Lens' NodeProperties [NodeRangeProperty]

-- | An object representing the properties of a node that's associated with
--   a multi-node parallel job.
--   
--   <i>See:</i> <a>newNodePropertiesSummary</a> smart constructor.
data NodePropertiesSummary
NodePropertiesSummary' :: Maybe Int -> Maybe Int -> Maybe Bool -> NodePropertiesSummary

-- | The number of nodes associated with a multi-node parallel job.
[$sel:numNodes:NodePropertiesSummary'] :: NodePropertiesSummary -> Maybe Int

-- | The node index for the node. Node index numbering begins at zero. This
--   index is also available on the node with the
--   <tt>AWS_BATCH_JOB_NODE_INDEX</tt> environment variable.
[$sel:nodeIndex:NodePropertiesSummary'] :: NodePropertiesSummary -> Maybe Int

-- | Specifies whether the current node is the main node for a multi-node
--   parallel job.
[$sel:isMainNode:NodePropertiesSummary'] :: NodePropertiesSummary -> Maybe Bool

-- | Create a value of <a>NodePropertiesSummary</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:numNodes:NodePropertiesSummary'</a>,
--   <a>nodePropertiesSummary_numNodes</a> - The number of nodes associated
--   with a multi-node parallel job.
--   
--   <a>$sel:nodeIndex:NodePropertiesSummary'</a>,
--   <a>nodePropertiesSummary_nodeIndex</a> - The node index for the node.
--   Node index numbering begins at zero. This index is also available on
--   the node with the <tt>AWS_BATCH_JOB_NODE_INDEX</tt> environment
--   variable.
--   
--   <a>$sel:isMainNode:NodePropertiesSummary'</a>,
--   <a>nodePropertiesSummary_isMainNode</a> - Specifies whether the
--   current node is the main node for a multi-node parallel job.
newNodePropertiesSummary :: NodePropertiesSummary

-- | The number of nodes associated with a multi-node parallel job.
nodePropertiesSummary_numNodes :: Lens' NodePropertiesSummary (Maybe Int)

-- | The node index for the node. Node index numbering begins at zero. This
--   index is also available on the node with the
--   <tt>AWS_BATCH_JOB_NODE_INDEX</tt> environment variable.
nodePropertiesSummary_nodeIndex :: Lens' NodePropertiesSummary (Maybe Int)

-- | Specifies whether the current node is the main node for a multi-node
--   parallel job.
nodePropertiesSummary_isMainNode :: Lens' NodePropertiesSummary (Maybe Bool)

-- | Object representing any node overrides to a job definition that's used
--   in a SubmitJob API operation.
--   
--   <i>See:</i> <a>newNodePropertyOverride</a> smart constructor.
data NodePropertyOverride
NodePropertyOverride' :: Maybe ContainerOverrides -> Text -> NodePropertyOverride

-- | The overrides that should be sent to a node range.
[$sel:containerOverrides:NodePropertyOverride'] :: NodePropertyOverride -> Maybe ContainerOverrides

-- | The range of nodes, using node index values, that's used to override.
--   A range of <tt>0:3</tt> indicates nodes with index values of
--   <tt>0</tt> through <tt>3</tt>. If the starting range value is omitted
--   (<tt>:n</tt>), then <tt>0</tt> is used to start the range. If the
--   ending range value is omitted (<tt>n:</tt>), then the highest possible
--   node index is used to end the range.
[$sel:targetNodes:NodePropertyOverride'] :: NodePropertyOverride -> Text

-- | Create a value of <a>NodePropertyOverride</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:containerOverrides:NodePropertyOverride'</a>,
--   <a>nodePropertyOverride_containerOverrides</a> - The overrides that
--   should be sent to a node range.
--   
--   <a>$sel:targetNodes:NodePropertyOverride'</a>,
--   <a>nodePropertyOverride_targetNodes</a> - The range of nodes, using
--   node index values, that's used to override. A range of <tt>0:3</tt>
--   indicates nodes with index values of <tt>0</tt> through <tt>3</tt>. If
--   the starting range value is omitted (<tt>:n</tt>), then <tt>0</tt> is
--   used to start the range. If the ending range value is omitted
--   (<tt>n:</tt>), then the highest possible node index is used to end the
--   range.
newNodePropertyOverride :: Text -> NodePropertyOverride

-- | The overrides that should be sent to a node range.
nodePropertyOverride_containerOverrides :: Lens' NodePropertyOverride (Maybe ContainerOverrides)

-- | The range of nodes, using node index values, that's used to override.
--   A range of <tt>0:3</tt> indicates nodes with index values of
--   <tt>0</tt> through <tt>3</tt>. If the starting range value is omitted
--   (<tt>:n</tt>), then <tt>0</tt> is used to start the range. If the
--   ending range value is omitted (<tt>n:</tt>), then the highest possible
--   node index is used to end the range.
nodePropertyOverride_targetNodes :: Lens' NodePropertyOverride Text

-- | An object representing the properties of the node range for a
--   multi-node parallel job.
--   
--   <i>See:</i> <a>newNodeRangeProperty</a> smart constructor.
data NodeRangeProperty
NodeRangeProperty' :: Maybe ContainerProperties -> Text -> NodeRangeProperty

-- | The container details for the node range.
[$sel:container:NodeRangeProperty'] :: NodeRangeProperty -> Maybe ContainerProperties

-- | The range of nodes, using node index values. A range of <tt>0:3</tt>
--   indicates nodes with index values of <tt>0</tt> through <tt>3</tt>. If
--   the starting range value is omitted (<tt>:n</tt>), then <tt>0</tt> is
--   used to start the range. If the ending range value is omitted
--   (<tt>n:</tt>), then the highest possible node index is used to end the
--   range. Your accumulative node ranges must account for all nodes
--   (<tt>0:n</tt>). You can nest node ranges, for example <tt>0:10</tt>
--   and <tt>4:5</tt>, in which case the <tt>4:5</tt> range properties
--   override the <tt>0:10</tt> properties.
[$sel:targetNodes:NodeRangeProperty'] :: NodeRangeProperty -> Text

-- | Create a value of <a>NodeRangeProperty</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:container:NodeRangeProperty'</a>,
--   <a>nodeRangeProperty_container</a> - The container details for the
--   node range.
--   
--   <a>$sel:targetNodes:NodeRangeProperty'</a>,
--   <a>nodeRangeProperty_targetNodes</a> - The range of nodes, using node
--   index values. A range of <tt>0:3</tt> indicates nodes with index
--   values of <tt>0</tt> through <tt>3</tt>. If the starting range value
--   is omitted (<tt>:n</tt>), then <tt>0</tt> is used to start the range.
--   If the ending range value is omitted (<tt>n:</tt>), then the highest
--   possible node index is used to end the range. Your accumulative node
--   ranges must account for all nodes (<tt>0:n</tt>). You can nest node
--   ranges, for example <tt>0:10</tt> and <tt>4:5</tt>, in which case the
--   <tt>4:5</tt> range properties override the <tt>0:10</tt> properties.
newNodeRangeProperty :: Text -> NodeRangeProperty

-- | The container details for the node range.
nodeRangeProperty_container :: Lens' NodeRangeProperty (Maybe ContainerProperties)

-- | The range of nodes, using node index values. A range of <tt>0:3</tt>
--   indicates nodes with index values of <tt>0</tt> through <tt>3</tt>. If
--   the starting range value is omitted (<tt>:n</tt>), then <tt>0</tt> is
--   used to start the range. If the ending range value is omitted
--   (<tt>n:</tt>), then the highest possible node index is used to end the
--   range. Your accumulative node ranges must account for all nodes
--   (<tt>0:n</tt>). You can nest node ranges, for example <tt>0:10</tt>
--   and <tt>4:5</tt>, in which case the <tt>4:5</tt> range properties
--   override the <tt>0:10</tt> properties.
nodeRangeProperty_targetNodes :: Lens' NodeRangeProperty Text

-- | The type and amount of a resource to assign to a container. The
--   supported resources include <tt>GPU</tt>, <tt>MEMORY</tt>, and
--   <tt>VCPU</tt>.
--   
--   <i>See:</i> <a>newResourceRequirement</a> smart constructor.
data ResourceRequirement
ResourceRequirement' :: Text -> ResourceType -> ResourceRequirement

-- | The quantity of the specified resource to reserve for the container.
--   The values vary based on the <tt>type</tt> specified.
--   
--   <ul>
--   <li><i>type="GPU"</i> The number of physical GPUs to reserve for the
--   container. The number of GPUs reserved for all containers in a job
--   shouldn't exceed the number of available GPUs on the compute resource
--   that the job is launched on.GPUs are not available for jobs that are
--   running on Fargate resources.</li>
--   <li><i>type="MEMORY"</i> The memory hard limit (in MiB) present to the
--   container. This parameter is supported for jobs that are running on
--   EC2 resources. If your container attempts to exceed the memory
--   specified, the container is terminated. This parameter maps to
--   <tt>Memory</tt> in the <a>Create a container</a> section of the
--   <a>Docker Remote API</a> and the <tt>--memory</tt> option to <a>docker
--   run</a>. You must specify at least 4 MiB of memory for a job. This is
--   required but can be specified in several places for multi-node
--   parallel (MNP) jobs. It must be specified for each node at least once.
--   This parameter maps to <tt>Memory</tt> in the <a>Create a
--   container</a> section of the <a>Docker Remote API</a> and the
--   <tt>--memory</tt> option to <a>docker run</a>.If you're trying to
--   maximize your resource utilization by providing your jobs as much
--   memory as possible for a particular instance type, see <a>Memory
--   Management</a> in the <i>Batch User Guide</i>.For jobs that are
--   running on Fargate resources, then <tt>value</tt> is the hard limit
--   (in MiB), and must match one of the supported values and the
--   <tt>VCPU</tt> values must be one of the values supported for that
--   memory value.<ul><li><i>value = 512</i> <tt>VCPU</tt> =
--   0.25</li><li><i>value = 1024</i> <tt>VCPU</tt> = 0.25 or
--   0.5</li><li><i>value = 2048</i> <tt>VCPU</tt> = 0.25, 0.5, or
--   1</li><li><i>value = 3072</i> <tt>VCPU</tt> = 0.5, or
--   1</li><li><i>value = 4096</i> <tt>VCPU</tt> = 0.5, 1, or
--   2</li><li><i>value = 5120, 6144, or 7168</i> <tt>VCPU</tt> = 1 or
--   2</li><li><i>value = 8192</i> <tt>VCPU</tt> = 1, 2, or
--   4</li><li><i>value = 9216, 10240, 11264, 12288, 13312, 14336, 15360,
--   or 16384</i> <tt>VCPU</tt> = 2 or 4</li><li><i>value = 17408, 18432,
--   19456, 20480, 21504, 22528, 23552, 24576, 25600, 26624, 27648, 28672,
--   29696, or 30720</i> <tt>VCPU</tt> = 4</li></ul></li>
--   <li><i>type="VCPU"</i> The number of vCPUs reserved for the container.
--   This parameter maps to <tt>CpuShares</tt> in the <a>Create a
--   container</a> section of the <a>Docker Remote API</a> and the
--   <tt>--cpu-shares</tt> option to <a>docker run</a>. Each vCPU is
--   equivalent to 1,024 CPU shares. For EC2 resources, you must specify at
--   least one vCPU. This is required but can be specified in several
--   places; it must be specified for each node at least once.For jobs that
--   are running on Fargate resources, then <tt>value</tt> must match one
--   of the supported values and the <tt>MEMORY</tt> values must be one of
--   the values supported for that VCPU value. The supported values are
--   0.25, 0.5, 1, 2, and 4<ul><li><i>value = 0.25</i> <tt>MEMORY</tt> =
--   512, 1024, or 2048</li><li><i>value = 0.5</i> <tt>MEMORY</tt> = 1024,
--   2048, 3072, or 4096</li><li><i>value = 1</i> <tt>MEMORY</tt> = 2048,
--   3072, 4096, 5120, 6144, 7168, or 8192</li><li><i>value = 2</i>
--   <tt>MEMORY</tt> = 4096, 5120, 6144, 7168, 8192, 9216, 10240, 11264,
--   12288, 13312, 14336, 15360, or 16384</li><li><i>value = 4</i>
--   <tt>MEMORY</tt> = 8192, 9216, 10240, 11264, 12288, 13312, 14336,
--   15360, 16384, 17408, 18432, 19456, 20480, 21504, 22528, 23552, 24576,
--   25600, 26624, 27648, 28672, 29696, or 30720</li></ul></li>
--   </ul>
[$sel:value:ResourceRequirement'] :: ResourceRequirement -> Text

-- | The type of resource to assign to a container. The supported resources
--   include <tt>GPU</tt>, <tt>MEMORY</tt>, and <tt>VCPU</tt>.
[$sel:type':ResourceRequirement'] :: ResourceRequirement -> ResourceType

-- | Create a value of <a>ResourceRequirement</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:value:ResourceRequirement'</a>,
--   <a>resourceRequirement_value</a> - The quantity of the specified
--   resource to reserve for the container. The values vary based on the
--   <tt>type</tt> specified.
--   
--   <ul>
--   <li><i>type="GPU"</i> The number of physical GPUs to reserve for the
--   container. The number of GPUs reserved for all containers in a job
--   shouldn't exceed the number of available GPUs on the compute resource
--   that the job is launched on.GPUs are not available for jobs that are
--   running on Fargate resources.</li>
--   <li><i>type="MEMORY"</i> The memory hard limit (in MiB) present to the
--   container. This parameter is supported for jobs that are running on
--   EC2 resources. If your container attempts to exceed the memory
--   specified, the container is terminated. This parameter maps to
--   <tt>Memory</tt> in the <a>Create a container</a> section of the
--   <a>Docker Remote API</a> and the <tt>--memory</tt> option to <a>docker
--   run</a>. You must specify at least 4 MiB of memory for a job. This is
--   required but can be specified in several places for multi-node
--   parallel (MNP) jobs. It must be specified for each node at least once.
--   This parameter maps to <tt>Memory</tt> in the <a>Create a
--   container</a> section of the <a>Docker Remote API</a> and the
--   <tt>--memory</tt> option to <a>docker run</a>.If you're trying to
--   maximize your resource utilization by providing your jobs as much
--   memory as possible for a particular instance type, see <a>Memory
--   Management</a> in the <i>Batch User Guide</i>.For jobs that are
--   running on Fargate resources, then <tt>value</tt> is the hard limit
--   (in MiB), and must match one of the supported values and the
--   <tt>VCPU</tt> values must be one of the values supported for that
--   memory value.<ul><li><i>value = 512</i> <tt>VCPU</tt> =
--   0.25</li><li><i>value = 1024</i> <tt>VCPU</tt> = 0.25 or
--   0.5</li><li><i>value = 2048</i> <tt>VCPU</tt> = 0.25, 0.5, or
--   1</li><li><i>value = 3072</i> <tt>VCPU</tt> = 0.5, or
--   1</li><li><i>value = 4096</i> <tt>VCPU</tt> = 0.5, 1, or
--   2</li><li><i>value = 5120, 6144, or 7168</i> <tt>VCPU</tt> = 1 or
--   2</li><li><i>value = 8192</i> <tt>VCPU</tt> = 1, 2, or
--   4</li><li><i>value = 9216, 10240, 11264, 12288, 13312, 14336, 15360,
--   or 16384</i> <tt>VCPU</tt> = 2 or 4</li><li><i>value = 17408, 18432,
--   19456, 20480, 21504, 22528, 23552, 24576, 25600, 26624, 27648, 28672,
--   29696, or 30720</i> <tt>VCPU</tt> = 4</li></ul></li>
--   <li><i>type="VCPU"</i> The number of vCPUs reserved for the container.
--   This parameter maps to <tt>CpuShares</tt> in the <a>Create a
--   container</a> section of the <a>Docker Remote API</a> and the
--   <tt>--cpu-shares</tt> option to <a>docker run</a>. Each vCPU is
--   equivalent to 1,024 CPU shares. For EC2 resources, you must specify at
--   least one vCPU. This is required but can be specified in several
--   places; it must be specified for each node at least once.For jobs that
--   are running on Fargate resources, then <tt>value</tt> must match one
--   of the supported values and the <tt>MEMORY</tt> values must be one of
--   the values supported for that VCPU value. The supported values are
--   0.25, 0.5, 1, 2, and 4<ul><li><i>value = 0.25</i> <tt>MEMORY</tt> =
--   512, 1024, or 2048</li><li><i>value = 0.5</i> <tt>MEMORY</tt> = 1024,
--   2048, 3072, or 4096</li><li><i>value = 1</i> <tt>MEMORY</tt> = 2048,
--   3072, 4096, 5120, 6144, 7168, or 8192</li><li><i>value = 2</i>
--   <tt>MEMORY</tt> = 4096, 5120, 6144, 7168, 8192, 9216, 10240, 11264,
--   12288, 13312, 14336, 15360, or 16384</li><li><i>value = 4</i>
--   <tt>MEMORY</tt> = 8192, 9216, 10240, 11264, 12288, 13312, 14336,
--   15360, 16384, 17408, 18432, 19456, 20480, 21504, 22528, 23552, 24576,
--   25600, 26624, 27648, 28672, 29696, or 30720</li></ul></li>
--   </ul>
--   
--   <a>$sel:type':ResourceRequirement'</a>,
--   <a>resourceRequirement_type</a> - The type of resource to assign to a
--   container. The supported resources include <tt>GPU</tt>,
--   <tt>MEMORY</tt>, and <tt>VCPU</tt>.
newResourceRequirement :: Text -> ResourceType -> ResourceRequirement

-- | The quantity of the specified resource to reserve for the container.
--   The values vary based on the <tt>type</tt> specified.
--   
--   <ul>
--   <li><i>type="GPU"</i> The number of physical GPUs to reserve for the
--   container. The number of GPUs reserved for all containers in a job
--   shouldn't exceed the number of available GPUs on the compute resource
--   that the job is launched on.GPUs are not available for jobs that are
--   running on Fargate resources.</li>
--   <li><i>type="MEMORY"</i> The memory hard limit (in MiB) present to the
--   container. This parameter is supported for jobs that are running on
--   EC2 resources. If your container attempts to exceed the memory
--   specified, the container is terminated. This parameter maps to
--   <tt>Memory</tt> in the <a>Create a container</a> section of the
--   <a>Docker Remote API</a> and the <tt>--memory</tt> option to <a>docker
--   run</a>. You must specify at least 4 MiB of memory for a job. This is
--   required but can be specified in several places for multi-node
--   parallel (MNP) jobs. It must be specified for each node at least once.
--   This parameter maps to <tt>Memory</tt> in the <a>Create a
--   container</a> section of the <a>Docker Remote API</a> and the
--   <tt>--memory</tt> option to <a>docker run</a>.If you're trying to
--   maximize your resource utilization by providing your jobs as much
--   memory as possible for a particular instance type, see <a>Memory
--   Management</a> in the <i>Batch User Guide</i>.For jobs that are
--   running on Fargate resources, then <tt>value</tt> is the hard limit
--   (in MiB), and must match one of the supported values and the
--   <tt>VCPU</tt> values must be one of the values supported for that
--   memory value.<ul><li><i>value = 512</i> <tt>VCPU</tt> =
--   0.25</li><li><i>value = 1024</i> <tt>VCPU</tt> = 0.25 or
--   0.5</li><li><i>value = 2048</i> <tt>VCPU</tt> = 0.25, 0.5, or
--   1</li><li><i>value = 3072</i> <tt>VCPU</tt> = 0.5, or
--   1</li><li><i>value = 4096</i> <tt>VCPU</tt> = 0.5, 1, or
--   2</li><li><i>value = 5120, 6144, or 7168</i> <tt>VCPU</tt> = 1 or
--   2</li><li><i>value = 8192</i> <tt>VCPU</tt> = 1, 2, or
--   4</li><li><i>value = 9216, 10240, 11264, 12288, 13312, 14336, 15360,
--   or 16384</i> <tt>VCPU</tt> = 2 or 4</li><li><i>value = 17408, 18432,
--   19456, 20480, 21504, 22528, 23552, 24576, 25600, 26624, 27648, 28672,
--   29696, or 30720</i> <tt>VCPU</tt> = 4</li></ul></li>
--   <li><i>type="VCPU"</i> The number of vCPUs reserved for the container.
--   This parameter maps to <tt>CpuShares</tt> in the <a>Create a
--   container</a> section of the <a>Docker Remote API</a> and the
--   <tt>--cpu-shares</tt> option to <a>docker run</a>. Each vCPU is
--   equivalent to 1,024 CPU shares. For EC2 resources, you must specify at
--   least one vCPU. This is required but can be specified in several
--   places; it must be specified for each node at least once.For jobs that
--   are running on Fargate resources, then <tt>value</tt> must match one
--   of the supported values and the <tt>MEMORY</tt> values must be one of
--   the values supported for that VCPU value. The supported values are
--   0.25, 0.5, 1, 2, and 4<ul><li><i>value = 0.25</i> <tt>MEMORY</tt> =
--   512, 1024, or 2048</li><li><i>value = 0.5</i> <tt>MEMORY</tt> = 1024,
--   2048, 3072, or 4096</li><li><i>value = 1</i> <tt>MEMORY</tt> = 2048,
--   3072, 4096, 5120, 6144, 7168, or 8192</li><li><i>value = 2</i>
--   <tt>MEMORY</tt> = 4096, 5120, 6144, 7168, 8192, 9216, 10240, 11264,
--   12288, 13312, 14336, 15360, or 16384</li><li><i>value = 4</i>
--   <tt>MEMORY</tt> = 8192, 9216, 10240, 11264, 12288, 13312, 14336,
--   15360, 16384, 17408, 18432, 19456, 20480, 21504, 22528, 23552, 24576,
--   25600, 26624, 27648, 28672, 29696, or 30720</li></ul></li>
--   </ul>
resourceRequirement_value :: Lens' ResourceRequirement Text

-- | The type of resource to assign to a container. The supported resources
--   include <tt>GPU</tt>, <tt>MEMORY</tt>, and <tt>VCPU</tt>.
resourceRequirement_type :: Lens' ResourceRequirement ResourceType

-- | The retry strategy associated with a job. For more information, see
--   <a>Automated job retries</a> in the <i>Batch User Guide</i>.
--   
--   <i>See:</i> <a>newRetryStrategy</a> smart constructor.
data RetryStrategy
RetryStrategy' :: Maybe [EvaluateOnExit] -> Maybe Int -> RetryStrategy

-- | Array of up to 5 objects that specify conditions under which the job
--   should be retried or failed. If this parameter is specified, then the
--   <tt>attempts</tt> parameter must also be specified.
[$sel:evaluateOnExit:RetryStrategy'] :: RetryStrategy -> Maybe [EvaluateOnExit]

-- | The number of times to move a job to the <tt>RUNNABLE</tt> status. You
--   can specify between 1 and 10 attempts. If the value of
--   <tt>attempts</tt> is greater than one, the job is retried on failure
--   the same number of attempts as the value.
[$sel:attempts:RetryStrategy'] :: RetryStrategy -> Maybe Int

-- | Create a value of <a>RetryStrategy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:evaluateOnExit:RetryStrategy'</a>,
--   <a>retryStrategy_evaluateOnExit</a> - Array of up to 5 objects that
--   specify conditions under which the job should be retried or failed. If
--   this parameter is specified, then the <tt>attempts</tt> parameter must
--   also be specified.
--   
--   <a>$sel:attempts:RetryStrategy'</a>, <a>retryStrategy_attempts</a> -
--   The number of times to move a job to the <tt>RUNNABLE</tt> status. You
--   can specify between 1 and 10 attempts. If the value of
--   <tt>attempts</tt> is greater than one, the job is retried on failure
--   the same number of attempts as the value.
newRetryStrategy :: RetryStrategy

-- | Array of up to 5 objects that specify conditions under which the job
--   should be retried or failed. If this parameter is specified, then the
--   <tt>attempts</tt> parameter must also be specified.
retryStrategy_evaluateOnExit :: Lens' RetryStrategy (Maybe [EvaluateOnExit])

-- | The number of times to move a job to the <tt>RUNNABLE</tt> status. You
--   can specify between 1 and 10 attempts. If the value of
--   <tt>attempts</tt> is greater than one, the job is retried on failure
--   the same number of attempts as the value.
retryStrategy_attempts :: Lens' RetryStrategy (Maybe Int)

-- | An object representing the secret to expose to your container. Secrets
--   can be exposed to a container in the following ways:
--   
--   <ul>
--   <li>To inject sensitive data into your containers as environment
--   variables, use the <tt>secrets</tt> container definition
--   parameter.</li>
--   <li>To reference sensitive information in the log configuration of a
--   container, use the <tt>secretOptions</tt> container definition
--   parameter.</li>
--   </ul>
--   
--   For more information, see <a>Specifying sensitive data</a> in the
--   <i>Batch User Guide</i>.
--   
--   <i>See:</i> <a>newSecret</a> smart constructor.
data Secret
Secret' :: Text -> Text -> Secret

-- | The name of the secret.
[$sel:name:Secret'] :: Secret -> Text

-- | The secret to expose to the container. The supported values are either
--   the full ARN of the Secrets Manager secret or the full ARN of the
--   parameter in the Amazon Web Services Systems Manager Parameter Store.
--   
--   If the Amazon Web Services Systems Manager Parameter Store parameter
--   exists in the same Region as the job you're launching, then you can
--   use either the full ARN or name of the parameter. If the parameter
--   exists in a different Region, then the full ARN must be specified.
[$sel:valueFrom:Secret'] :: Secret -> Text

-- | Create a value of <a>Secret</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:Secret'</a>, <a>secret_name</a> - The name of the secret.
--   
--   <a>$sel:valueFrom:Secret'</a>, <a>secret_valueFrom</a> - The secret to
--   expose to the container. The supported values are either the full ARN
--   of the Secrets Manager secret or the full ARN of the parameter in the
--   Amazon Web Services Systems Manager Parameter Store.
--   
--   If the Amazon Web Services Systems Manager Parameter Store parameter
--   exists in the same Region as the job you're launching, then you can
--   use either the full ARN or name of the parameter. If the parameter
--   exists in a different Region, then the full ARN must be specified.
newSecret :: Text -> Text -> Secret

-- | The name of the secret.
secret_name :: Lens' Secret Text

-- | The secret to expose to the container. The supported values are either
--   the full ARN of the Secrets Manager secret or the full ARN of the
--   parameter in the Amazon Web Services Systems Manager Parameter Store.
--   
--   If the Amazon Web Services Systems Manager Parameter Store parameter
--   exists in the same Region as the job you're launching, then you can
--   use either the full ARN or name of the parameter. If the parameter
--   exists in a different Region, then the full ARN must be specified.
secret_valueFrom :: Lens' Secret Text

-- | The container path, mount options, and size of the tmpfs mount.
--   
--   This object isn't applicable to jobs that are running on Fargate
--   resources.
--   
--   <i>See:</i> <a>newTmpfs</a> smart constructor.
data Tmpfs
Tmpfs' :: Maybe [Text] -> Text -> Int -> Tmpfs

-- | The list of tmpfs volume mount options.
--   
--   Valid values: "<tt>defaults</tt>" | "<tt>ro</tt>" | "<tt>rw</tt>" |
--   "<tt>suid</tt>" | "<tt>nosuid</tt>" | "<tt>dev</tt>" |
--   "<tt>nodev</tt>" | "<tt>exec</tt>" | "<tt>noexec</tt>" |
--   "<tt>sync</tt>" | "<tt>async</tt>" | "<tt>dirsync</tt>" |
--   "<tt>remount</tt>" | "<tt>mand</tt>" | "<tt>nomand</tt>" |
--   "<tt>atime</tt>" | "<tt>noatime</tt>" | "<tt>diratime</tt>" |
--   "<tt>nodiratime</tt>" | "<tt>bind</tt>" | "<tt>rbind" | "unbindable" |
--   "runbindable" | "private" | "rprivate" | "shared" | "rshared" |
--   "slave" | "rslave" | "relatime</tt>" | "<tt>norelatime</tt>" |
--   "<tt>strictatime</tt>" | "<tt>nostrictatime</tt>" | "<tt>mode</tt>" |
--   "<tt>uid</tt>" | "<tt>gid</tt>" | "<tt>nr_inodes</tt>" |
--   "<tt>nr_blocks</tt>" | "<tt>mpol</tt>"
[$sel:mountOptions:Tmpfs'] :: Tmpfs -> Maybe [Text]

-- | The absolute file path in the container where the tmpfs volume is
--   mounted.
[$sel:containerPath:Tmpfs'] :: Tmpfs -> Text

-- | The size (in MiB) of the tmpfs volume.
[$sel:size:Tmpfs'] :: Tmpfs -> Int

-- | Create a value of <a>Tmpfs</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:mountOptions:Tmpfs'</a>, <a>tmpfs_mountOptions</a> - The list
--   of tmpfs volume mount options.
--   
--   Valid values: "<tt>defaults</tt>" | "<tt>ro</tt>" | "<tt>rw</tt>" |
--   "<tt>suid</tt>" | "<tt>nosuid</tt>" | "<tt>dev</tt>" |
--   "<tt>nodev</tt>" | "<tt>exec</tt>" | "<tt>noexec</tt>" |
--   "<tt>sync</tt>" | "<tt>async</tt>" | "<tt>dirsync</tt>" |
--   "<tt>remount</tt>" | "<tt>mand</tt>" | "<tt>nomand</tt>" |
--   "<tt>atime</tt>" | "<tt>noatime</tt>" | "<tt>diratime</tt>" |
--   "<tt>nodiratime</tt>" | "<tt>bind</tt>" | "<tt>rbind" | "unbindable" |
--   "runbindable" | "private" | "rprivate" | "shared" | "rshared" |
--   "slave" | "rslave" | "relatime</tt>" | "<tt>norelatime</tt>" |
--   "<tt>strictatime</tt>" | "<tt>nostrictatime</tt>" | "<tt>mode</tt>" |
--   "<tt>uid</tt>" | "<tt>gid</tt>" | "<tt>nr_inodes</tt>" |
--   "<tt>nr_blocks</tt>" | "<tt>mpol</tt>"
--   
--   <a>$sel:containerPath:Tmpfs'</a>, <a>tmpfs_containerPath</a> - The
--   absolute file path in the container where the tmpfs volume is mounted.
--   
--   <a>$sel:size:Tmpfs'</a>, <a>tmpfs_size</a> - The size (in MiB) of the
--   tmpfs volume.
newTmpfs :: Text -> Int -> Tmpfs

-- | The list of tmpfs volume mount options.
--   
--   Valid values: "<tt>defaults</tt>" | "<tt>ro</tt>" | "<tt>rw</tt>" |
--   "<tt>suid</tt>" | "<tt>nosuid</tt>" | "<tt>dev</tt>" |
--   "<tt>nodev</tt>" | "<tt>exec</tt>" | "<tt>noexec</tt>" |
--   "<tt>sync</tt>" | "<tt>async</tt>" | "<tt>dirsync</tt>" |
--   "<tt>remount</tt>" | "<tt>mand</tt>" | "<tt>nomand</tt>" |
--   "<tt>atime</tt>" | "<tt>noatime</tt>" | "<tt>diratime</tt>" |
--   "<tt>nodiratime</tt>" | "<tt>bind</tt>" | "<tt>rbind" | "unbindable" |
--   "runbindable" | "private" | "rprivate" | "shared" | "rshared" |
--   "slave" | "rslave" | "relatime</tt>" | "<tt>norelatime</tt>" |
--   "<tt>strictatime</tt>" | "<tt>nostrictatime</tt>" | "<tt>mode</tt>" |
--   "<tt>uid</tt>" | "<tt>gid</tt>" | "<tt>nr_inodes</tt>" |
--   "<tt>nr_blocks</tt>" | "<tt>mpol</tt>"
tmpfs_mountOptions :: Lens' Tmpfs (Maybe [Text])

-- | The absolute file path in the container where the tmpfs volume is
--   mounted.
tmpfs_containerPath :: Lens' Tmpfs Text

-- | The size (in MiB) of the tmpfs volume.
tmpfs_size :: Lens' Tmpfs Int

-- | The <tt>ulimit</tt> settings to pass to the container.
--   
--   This object isn't applicable to jobs that are running on Fargate
--   resources.
--   
--   <i>See:</i> <a>newUlimit</a> smart constructor.
data Ulimit
Ulimit' :: Int -> Text -> Int -> Ulimit

-- | The hard limit for the <tt>ulimit</tt> type.
[$sel:hardLimit:Ulimit'] :: Ulimit -> Int

-- | The <tt>type</tt> of the <tt>ulimit</tt>.
[$sel:name:Ulimit'] :: Ulimit -> Text

-- | The soft limit for the <tt>ulimit</tt> type.
[$sel:softLimit:Ulimit'] :: Ulimit -> Int

-- | Create a value of <a>Ulimit</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:hardLimit:Ulimit'</a>, <a>ulimit_hardLimit</a> - The hard
--   limit for the <tt>ulimit</tt> type.
--   
--   <a>$sel:name:Ulimit'</a>, <a>ulimit_name</a> - The <tt>type</tt> of
--   the <tt>ulimit</tt>.
--   
--   <a>$sel:softLimit:Ulimit'</a>, <a>ulimit_softLimit</a> - The soft
--   limit for the <tt>ulimit</tt> type.
newUlimit :: Int -> Text -> Int -> Ulimit

-- | The hard limit for the <tt>ulimit</tt> type.
ulimit_hardLimit :: Lens' Ulimit Int

-- | The <tt>type</tt> of the <tt>ulimit</tt>.
ulimit_name :: Lens' Ulimit Text

-- | The soft limit for the <tt>ulimit</tt> type.
ulimit_softLimit :: Lens' Ulimit Int

-- | A data volume used in a job's container properties.
--   
--   <i>See:</i> <a>newVolume</a> smart constructor.
data Volume
Volume' :: Maybe Text -> Maybe EFSVolumeConfiguration -> Maybe Host -> Volume

-- | The name of the volume. Up to 255 letters (uppercase and lowercase),
--   numbers, hyphens, and underscores are allowed. This name is referenced
--   in the <tt>sourceVolume</tt> parameter of container definition
--   <tt>mountPoints</tt>.
[$sel:name:Volume'] :: Volume -> Maybe Text

-- | This parameter is specified when you are using an Amazon Elastic File
--   System file system for job storage. Jobs that are running on Fargate
--   resources must specify a <tt>platformVersion</tt> of at least
--   <tt>1.4.0</tt>.
[$sel:efsVolumeConfiguration:Volume'] :: Volume -> Maybe EFSVolumeConfiguration

-- | The contents of the <tt>host</tt> parameter determine whether your
--   data volume persists on the host container instance and where it is
--   stored. If the host parameter is empty, then the Docker daemon assigns
--   a host path for your data volume. However, the data isn't guaranteed
--   to persist after the containers associated with it stop running.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources and shouldn't be provided.
[$sel:host:Volume'] :: Volume -> Maybe Host

-- | Create a value of <a>Volume</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:Volume'</a>, <a>volume_name</a> - The name of the volume.
--   Up to 255 letters (uppercase and lowercase), numbers, hyphens, and
--   underscores are allowed. This name is referenced in the
--   <tt>sourceVolume</tt> parameter of container definition
--   <tt>mountPoints</tt>.
--   
--   <a>$sel:efsVolumeConfiguration:Volume'</a>,
--   <a>volume_efsVolumeConfiguration</a> - This parameter is specified
--   when you are using an Amazon Elastic File System file system for job
--   storage. Jobs that are running on Fargate resources must specify a
--   <tt>platformVersion</tt> of at least <tt>1.4.0</tt>.
--   
--   <a>$sel:host:Volume'</a>, <a>volume_host</a> - The contents of the
--   <tt>host</tt> parameter determine whether your data volume persists on
--   the host container instance and where it is stored. If the host
--   parameter is empty, then the Docker daemon assigns a host path for
--   your data volume. However, the data isn't guaranteed to persist after
--   the containers associated with it stop running.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources and shouldn't be provided.
newVolume :: Volume

-- | The name of the volume. Up to 255 letters (uppercase and lowercase),
--   numbers, hyphens, and underscores are allowed. This name is referenced
--   in the <tt>sourceVolume</tt> parameter of container definition
--   <tt>mountPoints</tt>.
volume_name :: Lens' Volume (Maybe Text)

-- | This parameter is specified when you are using an Amazon Elastic File
--   System file system for job storage. Jobs that are running on Fargate
--   resources must specify a <tt>platformVersion</tt> of at least
--   <tt>1.4.0</tt>.
volume_efsVolumeConfiguration :: Lens' Volume (Maybe EFSVolumeConfiguration)

-- | The contents of the <tt>host</tt> parameter determine whether your
--   data volume persists on the host container instance and where it is
--   stored. If the host parameter is empty, then the Docker daemon assigns
--   a host path for your data volume. However, the data isn't guaranteed
--   to persist after the containers associated with it stop running.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources and shouldn't be provided.
volume_host :: Lens' Volume (Maybe Host)


-- | Terminates a job in a job queue. Jobs that are in the
--   <tt>STARTING</tt> or <tt>RUNNING</tt> state are terminated, which
--   causes them to transition to <tt>FAILED</tt>. Jobs that have not
--   progressed to the <tt>STARTING</tt> state are cancelled.
module Network.AWS.Batch.TerminateJob

-- | Contains the parameters for <tt>TerminateJob</tt>.
--   
--   <i>See:</i> <a>newTerminateJob</a> smart constructor.
data TerminateJob
TerminateJob' :: Text -> Text -> TerminateJob

-- | The Batch job ID of the job to terminate.
[$sel:jobId:TerminateJob'] :: TerminateJob -> Text

-- | A message to attach to the job that explains the reason for canceling
--   it. This message is returned by future DescribeJobs operations on the
--   job. This message is also recorded in the Batch activity logs.
[$sel:reason:TerminateJob'] :: TerminateJob -> Text

-- | Create a value of <a>TerminateJob</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobId:TerminateJob'</a>, <a>terminateJob_jobId</a> - The Batch
--   job ID of the job to terminate.
--   
--   <a>$sel:reason:TerminateJob'</a>, <a>terminateJob_reason</a> - A
--   message to attach to the job that explains the reason for canceling
--   it. This message is returned by future DescribeJobs operations on the
--   job. This message is also recorded in the Batch activity logs.
newTerminateJob :: Text -> Text -> TerminateJob

-- | The Batch job ID of the job to terminate.
terminateJob_jobId :: Lens' TerminateJob Text

-- | A message to attach to the job that explains the reason for canceling
--   it. This message is returned by future DescribeJobs operations on the
--   job. This message is also recorded in the Batch activity logs.
terminateJob_reason :: Lens' TerminateJob Text

-- | <i>See:</i> <a>newTerminateJobResponse</a> smart constructor.
data TerminateJobResponse
TerminateJobResponse' :: Int -> TerminateJobResponse

-- | The response's http status code.
[$sel:httpStatus:TerminateJobResponse'] :: TerminateJobResponse -> Int

-- | Create a value of <a>TerminateJobResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:TerminateJobResponse'</a>,
--   <a>terminateJobResponse_httpStatus</a> - The response's http status
--   code.
newTerminateJobResponse :: Int -> TerminateJobResponse

-- | The response's http status code.
terminateJobResponse_httpStatus :: Lens' TerminateJobResponse Int
instance GHC.Generics.Generic Network.AWS.Batch.TerminateJob.TerminateJob
instance GHC.Show.Show Network.AWS.Batch.TerminateJob.TerminateJob
instance GHC.Read.Read Network.AWS.Batch.TerminateJob.TerminateJob
instance GHC.Classes.Eq Network.AWS.Batch.TerminateJob.TerminateJob
instance GHC.Generics.Generic Network.AWS.Batch.TerminateJob.TerminateJobResponse
instance GHC.Show.Show Network.AWS.Batch.TerminateJob.TerminateJobResponse
instance GHC.Read.Read Network.AWS.Batch.TerminateJob.TerminateJobResponse
instance GHC.Classes.Eq Network.AWS.Batch.TerminateJob.TerminateJobResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Batch.TerminateJob.TerminateJob
instance Control.DeepSeq.NFData Network.AWS.Batch.TerminateJob.TerminateJobResponse
instance Data.Hashable.Class.Hashable Network.AWS.Batch.TerminateJob.TerminateJob
instance Control.DeepSeq.NFData Network.AWS.Batch.TerminateJob.TerminateJob
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Batch.TerminateJob.TerminateJob
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Batch.TerminateJob.TerminateJob
instance Network.AWS.Data.Path.ToPath Network.AWS.Batch.TerminateJob.TerminateJob
instance Network.AWS.Data.Query.ToQuery Network.AWS.Batch.TerminateJob.TerminateJob


-- | Associates the specified tags to a resource with the specified
--   <tt>resourceArn</tt>. If existing tags on a resource aren't specified
--   in the request parameters, they aren't changed. When a resource is
--   deleted, the tags that are associated with that resource are deleted
--   as well. Batch resources that support tags are compute environments,
--   jobs, job definitions, and job queues. ARNs for child jobs of array
--   and multi-node parallel (MNP) jobs are not supported.
module Network.AWS.Batch.TagResource

-- | <i>See:</i> <a>newTagResource</a> smart constructor.
data TagResource
TagResource' :: Text -> HashMap Text Text -> TagResource

-- | The Amazon Resource Name (ARN) of the resource that tags are added to.
--   Batch resources that support tags are compute environments, jobs, job
--   definitions, and job queues. ARNs for child jobs of array and
--   multi-node parallel (MNP) jobs are not supported.
[$sel:resourceArn:TagResource'] :: TagResource -> Text

-- | The tags that you apply to the resource to help you categorize and
--   organize your resources. Each tag consists of a key and an optional
--   value. For more information, see <a>Tagging Amazon Web Services
--   Resources</a> in <i>Amazon Web Services General Reference</i>.
[$sel:tags:TagResource'] :: TagResource -> HashMap Text Text

-- | Create a value of <a>TagResource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:TagResource'</a>, <a>tagResource_resourceArn</a> -
--   The Amazon Resource Name (ARN) of the resource that tags are added to.
--   Batch resources that support tags are compute environments, jobs, job
--   definitions, and job queues. ARNs for child jobs of array and
--   multi-node parallel (MNP) jobs are not supported.
--   
--   <a>$sel:tags:TagResource'</a>, <a>tagResource_tags</a> - The tags that
--   you apply to the resource to help you categorize and organize your
--   resources. Each tag consists of a key and an optional value. For more
--   information, see <a>Tagging Amazon Web Services Resources</a> in
--   <i>Amazon Web Services General Reference</i>.
newTagResource :: Text -> TagResource

-- | The Amazon Resource Name (ARN) of the resource that tags are added to.
--   Batch resources that support tags are compute environments, jobs, job
--   definitions, and job queues. ARNs for child jobs of array and
--   multi-node parallel (MNP) jobs are not supported.
tagResource_resourceArn :: Lens' TagResource Text

-- | The tags that you apply to the resource to help you categorize and
--   organize your resources. Each tag consists of a key and an optional
--   value. For more information, see <a>Tagging Amazon Web Services
--   Resources</a> in <i>Amazon Web Services General Reference</i>.
tagResource_tags :: Lens' TagResource (HashMap Text Text)

-- | <i>See:</i> <a>newTagResourceResponse</a> smart constructor.
data TagResourceResponse
TagResourceResponse' :: Int -> TagResourceResponse

-- | The response's http status code.
[$sel:httpStatus:TagResourceResponse'] :: TagResourceResponse -> Int

-- | Create a value of <a>TagResourceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:TagResourceResponse'</a>,
--   <a>tagResourceResponse_httpStatus</a> - The response's http status
--   code.
newTagResourceResponse :: Int -> TagResourceResponse

-- | The response's http status code.
tagResourceResponse_httpStatus :: Lens' TagResourceResponse Int
instance GHC.Generics.Generic Network.AWS.Batch.TagResource.TagResource
instance GHC.Show.Show Network.AWS.Batch.TagResource.TagResource
instance GHC.Read.Read Network.AWS.Batch.TagResource.TagResource
instance GHC.Classes.Eq Network.AWS.Batch.TagResource.TagResource
instance GHC.Generics.Generic Network.AWS.Batch.TagResource.TagResourceResponse
instance GHC.Show.Show Network.AWS.Batch.TagResource.TagResourceResponse
instance GHC.Read.Read Network.AWS.Batch.TagResource.TagResourceResponse
instance GHC.Classes.Eq Network.AWS.Batch.TagResource.TagResourceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Batch.TagResource.TagResource
instance Control.DeepSeq.NFData Network.AWS.Batch.TagResource.TagResourceResponse
instance Data.Hashable.Class.Hashable Network.AWS.Batch.TagResource.TagResource
instance Control.DeepSeq.NFData Network.AWS.Batch.TagResource.TagResource
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Batch.TagResource.TagResource
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Batch.TagResource.TagResource
instance Network.AWS.Data.Path.ToPath Network.AWS.Batch.TagResource.TagResource
instance Network.AWS.Data.Query.ToQuery Network.AWS.Batch.TagResource.TagResource


-- | Submits an Batch job from a job definition. Parameters that are
--   specified during SubmitJob override parameters defined in the job
--   definition. vCPU and memory requirements that are specified in the
--   <tt>ResourceRequirements</tt> objects in the job definition are the
--   exception. They can't be overridden this way using the <tt>memory</tt>
--   and <tt>vcpus</tt> parameters. Rather, you must specify updates to job
--   definition parameters in a <tt>ResourceRequirements</tt> object that's
--   included in the <tt>containerOverrides</tt> parameter.
--   
--   Jobs that run on Fargate resources can't be guaranteed to run for more
--   than 14 days. This is because, after 14 days, Fargate resources might
--   become unavailable and job might be terminated.
module Network.AWS.Batch.SubmitJob

-- | Contains the parameters for <tt>SubmitJob</tt>.
--   
--   <i>See:</i> <a>newSubmitJob</a> smart constructor.
data SubmitJob
SubmitJob' :: Maybe NodeOverrides -> Maybe Bool -> Maybe ContainerOverrides -> Maybe RetryStrategy -> Maybe [JobDependency] -> Maybe (HashMap Text Text) -> Maybe ArrayProperties -> Maybe JobTimeout -> Maybe (HashMap Text Text) -> Text -> Text -> Text -> SubmitJob

-- | A list of node overrides in JSON format that specify the node range to
--   target and the container overrides for that node range.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources; use <tt>containerOverrides</tt> instead.
[$sel:nodeOverrides:SubmitJob'] :: SubmitJob -> Maybe NodeOverrides

-- | Specifies whether to propagate the tags from the job or job definition
--   to the corresponding Amazon ECS task. If no value is specified, the
--   tags aren't propagated. Tags can only be propagated to the tasks
--   during task creation. For tags with the same name, job tags are given
--   priority over job definitions tags. If the total number of combined
--   tags from the job and job definition is over 50, the job is moved to
--   the <tt>FAILED</tt> state. When specified, this overrides the tag
--   propagation setting in the job definition.
[$sel:propagateTags:SubmitJob'] :: SubmitJob -> Maybe Bool

-- | A list of container overrides in the JSON format that specify the name
--   of a container in the specified job definition and the overrides it
--   should receive. You can override the default command for a container,
--   which is specified in the job definition or the Docker image, with a
--   <tt>command</tt> override. You can also override existing environment
--   variables on a container or add new environment variables to it with
--   an <tt>environment</tt> override.
[$sel:containerOverrides:SubmitJob'] :: SubmitJob -> Maybe ContainerOverrides

-- | The retry strategy to use for failed jobs from this SubmitJob
--   operation. When a retry strategy is specified here, it overrides the
--   retry strategy defined in the job definition.
[$sel:retryStrategy:SubmitJob'] :: SubmitJob -> Maybe RetryStrategy

-- | A list of dependencies for the job. A job can depend upon a maximum of
--   20 jobs. You can specify a <tt>SEQUENTIAL</tt> type dependency without
--   specifying a job ID for array jobs so that each child array job
--   completes sequentially, starting at index 0. You can also specify an
--   <tt>N_TO_N</tt> type dependency with a job ID for array jobs. In that
--   case, each index child of this job must wait for the corresponding
--   index child of each dependency to complete before it can begin.
[$sel:dependsOn:SubmitJob'] :: SubmitJob -> Maybe [JobDependency]

-- | Additional parameters passed to the job that replace parameter
--   substitution placeholders that are set in the job definition.
--   Parameters are specified as a key and value pair mapping. Parameters
--   in a <tt>SubmitJob</tt> request override any corresponding parameter
--   defaults from the job definition.
[$sel:parameters:SubmitJob'] :: SubmitJob -> Maybe (HashMap Text Text)

-- | The array properties for the submitted job, such as the size of the
--   array. The array size can be between 2 and 10,000. If you specify
--   array properties for a job, it becomes an array job. For more
--   information, see <a>Array Jobs</a> in the <i>Batch User Guide</i>.
[$sel:arrayProperties:SubmitJob'] :: SubmitJob -> Maybe ArrayProperties

-- | The timeout configuration for this SubmitJob operation. You can
--   specify a timeout duration after which Batch terminates your jobs if
--   they haven't finished. If a job is terminated due to a timeout, it
--   isn't retried. The minimum value for the timeout is 60 seconds. This
--   configuration overrides any timeout configuration specified in the job
--   definition. For array jobs, child jobs have the same timeout
--   configuration as the parent job. For more information, see <a>Job
--   Timeouts</a> in the <i>Amazon Elastic Container Service Developer
--   Guide</i>.
[$sel:timeout:SubmitJob'] :: SubmitJob -> Maybe JobTimeout

-- | The tags that you apply to the job request to help you categorize and
--   organize your resources. Each tag consists of a key and an optional
--   value. For more information, see <a>Tagging Amazon Web Services
--   Resources</a> in <i>Amazon Web Services General Reference</i>.
[$sel:tags:SubmitJob'] :: SubmitJob -> Maybe (HashMap Text Text)

-- | The name of the job. The first character must be alphanumeric, and up
--   to 128 letters (uppercase and lowercase), numbers, hyphens, and
--   underscores are allowed.
[$sel:jobName:SubmitJob'] :: SubmitJob -> Text

-- | The job queue where the job is submitted. You can specify either the
--   name or the Amazon Resource Name (ARN) of the queue.
[$sel:jobQueue:SubmitJob'] :: SubmitJob -> Text

-- | The job definition used by this job. This value can be one of
--   <tt>name</tt>, <tt>name:revision</tt>, or the Amazon Resource Name
--   (ARN) for the job definition. If <tt>name</tt> is specified without a
--   revision then the latest active revision is used.
[$sel:jobDefinition:SubmitJob'] :: SubmitJob -> Text

-- | Create a value of <a>SubmitJob</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nodeOverrides:SubmitJob'</a>, <a>submitJob_nodeOverrides</a> -
--   A list of node overrides in JSON format that specify the node range to
--   target and the container overrides for that node range.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources; use <tt>containerOverrides</tt> instead.
--   
--   <a>$sel:propagateTags:SubmitJob'</a>, <a>submitJob_propagateTags</a> -
--   Specifies whether to propagate the tags from the job or job definition
--   to the corresponding Amazon ECS task. If no value is specified, the
--   tags aren't propagated. Tags can only be propagated to the tasks
--   during task creation. For tags with the same name, job tags are given
--   priority over job definitions tags. If the total number of combined
--   tags from the job and job definition is over 50, the job is moved to
--   the <tt>FAILED</tt> state. When specified, this overrides the tag
--   propagation setting in the job definition.
--   
--   <a>$sel:containerOverrides:SubmitJob'</a>,
--   <a>submitJob_containerOverrides</a> - A list of container overrides in
--   the JSON format that specify the name of a container in the specified
--   job definition and the overrides it should receive. You can override
--   the default command for a container, which is specified in the job
--   definition or the Docker image, with a <tt>command</tt> override. You
--   can also override existing environment variables on a container or add
--   new environment variables to it with an <tt>environment</tt> override.
--   
--   <a>$sel:retryStrategy:SubmitJob'</a>, <a>submitJob_retryStrategy</a> -
--   The retry strategy to use for failed jobs from this SubmitJob
--   operation. When a retry strategy is specified here, it overrides the
--   retry strategy defined in the job definition.
--   
--   <a>$sel:dependsOn:SubmitJob'</a>, <a>submitJob_dependsOn</a> - A list
--   of dependencies for the job. A job can depend upon a maximum of 20
--   jobs. You can specify a <tt>SEQUENTIAL</tt> type dependency without
--   specifying a job ID for array jobs so that each child array job
--   completes sequentially, starting at index 0. You can also specify an
--   <tt>N_TO_N</tt> type dependency with a job ID for array jobs. In that
--   case, each index child of this job must wait for the corresponding
--   index child of each dependency to complete before it can begin.
--   
--   <a>$sel:parameters:SubmitJob'</a>, <a>submitJob_parameters</a> -
--   Additional parameters passed to the job that replace parameter
--   substitution placeholders that are set in the job definition.
--   Parameters are specified as a key and value pair mapping. Parameters
--   in a <tt>SubmitJob</tt> request override any corresponding parameter
--   defaults from the job definition.
--   
--   <a>$sel:arrayProperties:SubmitJob'</a>,
--   <a>submitJob_arrayProperties</a> - The array properties for the
--   submitted job, such as the size of the array. The array size can be
--   between 2 and 10,000. If you specify array properties for a job, it
--   becomes an array job. For more information, see <a>Array Jobs</a> in
--   the <i>Batch User Guide</i>.
--   
--   <a>$sel:timeout:SubmitJob'</a>, <a>submitJob_timeout</a> - The timeout
--   configuration for this SubmitJob operation. You can specify a timeout
--   duration after which Batch terminates your jobs if they haven't
--   finished. If a job is terminated due to a timeout, it isn't retried.
--   The minimum value for the timeout is 60 seconds. This configuration
--   overrides any timeout configuration specified in the job definition.
--   For array jobs, child jobs have the same timeout configuration as the
--   parent job. For more information, see <a>Job Timeouts</a> in the
--   <i>Amazon Elastic Container Service Developer Guide</i>.
--   
--   <a>$sel:tags:SubmitJob'</a>, <a>submitJob_tags</a> - The tags that you
--   apply to the job request to help you categorize and organize your
--   resources. Each tag consists of a key and an optional value. For more
--   information, see <a>Tagging Amazon Web Services Resources</a> in
--   <i>Amazon Web Services General Reference</i>.
--   
--   <a>$sel:jobName:SubmitJob'</a>, <a>submitJob_jobName</a> - The name of
--   the job. The first character must be alphanumeric, and up to 128
--   letters (uppercase and lowercase), numbers, hyphens, and underscores
--   are allowed.
--   
--   <a>$sel:jobQueue:SubmitJob'</a>, <a>submitJob_jobQueue</a> - The job
--   queue where the job is submitted. You can specify either the name or
--   the Amazon Resource Name (ARN) of the queue.
--   
--   <a>$sel:jobDefinition:SubmitJob'</a>, <a>submitJob_jobDefinition</a> -
--   The job definition used by this job. This value can be one of
--   <tt>name</tt>, <tt>name:revision</tt>, or the Amazon Resource Name
--   (ARN) for the job definition. If <tt>name</tt> is specified without a
--   revision then the latest active revision is used.
newSubmitJob :: Text -> Text -> Text -> SubmitJob

-- | A list of node overrides in JSON format that specify the node range to
--   target and the container overrides for that node range.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources; use <tt>containerOverrides</tt> instead.
submitJob_nodeOverrides :: Lens' SubmitJob (Maybe NodeOverrides)

-- | Specifies whether to propagate the tags from the job or job definition
--   to the corresponding Amazon ECS task. If no value is specified, the
--   tags aren't propagated. Tags can only be propagated to the tasks
--   during task creation. For tags with the same name, job tags are given
--   priority over job definitions tags. If the total number of combined
--   tags from the job and job definition is over 50, the job is moved to
--   the <tt>FAILED</tt> state. When specified, this overrides the tag
--   propagation setting in the job definition.
submitJob_propagateTags :: Lens' SubmitJob (Maybe Bool)

-- | A list of container overrides in the JSON format that specify the name
--   of a container in the specified job definition and the overrides it
--   should receive. You can override the default command for a container,
--   which is specified in the job definition or the Docker image, with a
--   <tt>command</tt> override. You can also override existing environment
--   variables on a container or add new environment variables to it with
--   an <tt>environment</tt> override.
submitJob_containerOverrides :: Lens' SubmitJob (Maybe ContainerOverrides)

-- | The retry strategy to use for failed jobs from this SubmitJob
--   operation. When a retry strategy is specified here, it overrides the
--   retry strategy defined in the job definition.
submitJob_retryStrategy :: Lens' SubmitJob (Maybe RetryStrategy)

-- | A list of dependencies for the job. A job can depend upon a maximum of
--   20 jobs. You can specify a <tt>SEQUENTIAL</tt> type dependency without
--   specifying a job ID for array jobs so that each child array job
--   completes sequentially, starting at index 0. You can also specify an
--   <tt>N_TO_N</tt> type dependency with a job ID for array jobs. In that
--   case, each index child of this job must wait for the corresponding
--   index child of each dependency to complete before it can begin.
submitJob_dependsOn :: Lens' SubmitJob (Maybe [JobDependency])

-- | Additional parameters passed to the job that replace parameter
--   substitution placeholders that are set in the job definition.
--   Parameters are specified as a key and value pair mapping. Parameters
--   in a <tt>SubmitJob</tt> request override any corresponding parameter
--   defaults from the job definition.
submitJob_parameters :: Lens' SubmitJob (Maybe (HashMap Text Text))

-- | The array properties for the submitted job, such as the size of the
--   array. The array size can be between 2 and 10,000. If you specify
--   array properties for a job, it becomes an array job. For more
--   information, see <a>Array Jobs</a> in the <i>Batch User Guide</i>.
submitJob_arrayProperties :: Lens' SubmitJob (Maybe ArrayProperties)

-- | The timeout configuration for this SubmitJob operation. You can
--   specify a timeout duration after which Batch terminates your jobs if
--   they haven't finished. If a job is terminated due to a timeout, it
--   isn't retried. The minimum value for the timeout is 60 seconds. This
--   configuration overrides any timeout configuration specified in the job
--   definition. For array jobs, child jobs have the same timeout
--   configuration as the parent job. For more information, see <a>Job
--   Timeouts</a> in the <i>Amazon Elastic Container Service Developer
--   Guide</i>.
submitJob_timeout :: Lens' SubmitJob (Maybe JobTimeout)

-- | The tags that you apply to the job request to help you categorize and
--   organize your resources. Each tag consists of a key and an optional
--   value. For more information, see <a>Tagging Amazon Web Services
--   Resources</a> in <i>Amazon Web Services General Reference</i>.
submitJob_tags :: Lens' SubmitJob (Maybe (HashMap Text Text))

-- | The name of the job. The first character must be alphanumeric, and up
--   to 128 letters (uppercase and lowercase), numbers, hyphens, and
--   underscores are allowed.
submitJob_jobName :: Lens' SubmitJob Text

-- | The job queue where the job is submitted. You can specify either the
--   name or the Amazon Resource Name (ARN) of the queue.
submitJob_jobQueue :: Lens' SubmitJob Text

-- | The job definition used by this job. This value can be one of
--   <tt>name</tt>, <tt>name:revision</tt>, or the Amazon Resource Name
--   (ARN) for the job definition. If <tt>name</tt> is specified without a
--   revision then the latest active revision is used.
submitJob_jobDefinition :: Lens' SubmitJob Text

-- | <i>See:</i> <a>newSubmitJobResponse</a> smart constructor.
data SubmitJobResponse
SubmitJobResponse' :: Maybe Text -> Int -> Text -> Text -> SubmitJobResponse

-- | The Amazon Resource Name (ARN) for the job.
[$sel:jobArn:SubmitJobResponse'] :: SubmitJobResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:SubmitJobResponse'] :: SubmitJobResponse -> Int

-- | The name of the job.
[$sel:jobName:SubmitJobResponse'] :: SubmitJobResponse -> Text

-- | The unique identifier for the job.
[$sel:jobId:SubmitJobResponse'] :: SubmitJobResponse -> Text

-- | Create a value of <a>SubmitJobResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobArn:SubmitJobResponse'</a>, <a>submitJobResponse_jobArn</a>
--   - The Amazon Resource Name (ARN) for the job.
--   
--   <a>$sel:httpStatus:SubmitJobResponse'</a>,
--   <a>submitJobResponse_httpStatus</a> - The response's http status code.
--   
--   <a>$sel:jobName:SubmitJob'</a>, <a>submitJobResponse_jobName</a> - The
--   name of the job.
--   
--   <a>$sel:jobId:SubmitJobResponse'</a>, <a>submitJobResponse_jobId</a> -
--   The unique identifier for the job.
newSubmitJobResponse :: Int -> Text -> Text -> SubmitJobResponse

-- | The Amazon Resource Name (ARN) for the job.
submitJobResponse_jobArn :: Lens' SubmitJobResponse (Maybe Text)

-- | The response's http status code.
submitJobResponse_httpStatus :: Lens' SubmitJobResponse Int

-- | The name of the job.
submitJobResponse_jobName :: Lens' SubmitJobResponse Text

-- | The unique identifier for the job.
submitJobResponse_jobId :: Lens' SubmitJobResponse Text
instance GHC.Generics.Generic Network.AWS.Batch.SubmitJob.SubmitJob
instance GHC.Show.Show Network.AWS.Batch.SubmitJob.SubmitJob
instance GHC.Read.Read Network.AWS.Batch.SubmitJob.SubmitJob
instance GHC.Classes.Eq Network.AWS.Batch.SubmitJob.SubmitJob
instance GHC.Generics.Generic Network.AWS.Batch.SubmitJob.SubmitJobResponse
instance GHC.Show.Show Network.AWS.Batch.SubmitJob.SubmitJobResponse
instance GHC.Read.Read Network.AWS.Batch.SubmitJob.SubmitJobResponse
instance GHC.Classes.Eq Network.AWS.Batch.SubmitJob.SubmitJobResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Batch.SubmitJob.SubmitJob
instance Control.DeepSeq.NFData Network.AWS.Batch.SubmitJob.SubmitJobResponse
instance Data.Hashable.Class.Hashable Network.AWS.Batch.SubmitJob.SubmitJob
instance Control.DeepSeq.NFData Network.AWS.Batch.SubmitJob.SubmitJob
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Batch.SubmitJob.SubmitJob
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Batch.SubmitJob.SubmitJob
instance Network.AWS.Data.Path.ToPath Network.AWS.Batch.SubmitJob.SubmitJob
instance Network.AWS.Data.Query.ToQuery Network.AWS.Batch.SubmitJob.SubmitJob


-- | Registers an Batch job definition.
module Network.AWS.Batch.RegisterJobDefinition

-- | Contains the parameters for <tt>RegisterJobDefinition</tt>.
--   
--   <i>See:</i> <a>newRegisterJobDefinition</a> smart constructor.
data RegisterJobDefinition
RegisterJobDefinition' :: Maybe Bool -> Maybe RetryStrategy -> Maybe [PlatformCapability] -> Maybe (HashMap Text Text) -> Maybe JobTimeout -> Maybe ContainerProperties -> Maybe NodeProperties -> Maybe (HashMap Text Text) -> Text -> JobDefinitionType -> RegisterJobDefinition

-- | Specifies whether to propagate the tags from the job or job definition
--   to the corresponding Amazon ECS task. If no value is specified, the
--   tags are not propagated. Tags can only be propagated to the tasks
--   during task creation. For tags with the same name, job tags are given
--   priority over job definitions tags. If the total number of combined
--   tags from the job and job definition is over 50, the job is moved to
--   the <tt>FAILED</tt> state.
[$sel:propagateTags:RegisterJobDefinition'] :: RegisterJobDefinition -> Maybe Bool

-- | The retry strategy to use for failed jobs that are submitted with this
--   job definition. Any retry strategy that's specified during a SubmitJob
--   operation overrides the retry strategy defined here. If a job is
--   terminated due to a timeout, it isn't retried.
[$sel:retryStrategy:RegisterJobDefinition'] :: RegisterJobDefinition -> Maybe RetryStrategy

-- | The platform capabilities required by the job definition. If no value
--   is specified, it defaults to <tt>EC2</tt>. To run the job on Fargate
--   resources, specify <tt>FARGATE</tt>.
[$sel:platformCapabilities:RegisterJobDefinition'] :: RegisterJobDefinition -> Maybe [PlatformCapability]

-- | Default parameter substitution placeholders to set in the job
--   definition. Parameters are specified as a key-value pair mapping.
--   Parameters in a <tt>SubmitJob</tt> request override any corresponding
--   parameter defaults from the job definition.
[$sel:parameters:RegisterJobDefinition'] :: RegisterJobDefinition -> Maybe (HashMap Text Text)

-- | The timeout configuration for jobs that are submitted with this job
--   definition, after which Batch terminates your jobs if they have not
--   finished. If a job is terminated due to a timeout, it isn't retried.
--   The minimum value for the timeout is 60 seconds. Any timeout
--   configuration that's specified during a SubmitJob operation overrides
--   the timeout configuration defined here. For more information, see
--   <a>Job Timeouts</a> in the <i>Batch User Guide</i>.
[$sel:timeout:RegisterJobDefinition'] :: RegisterJobDefinition -> Maybe JobTimeout

-- | An object with various properties specific to single-node
--   container-based jobs. If the job definition's <tt>type</tt> parameter
--   is <tt>container</tt>, then you must specify either
--   <tt>containerProperties</tt> or <tt>nodeProperties</tt>.
--   
--   If the job runs on Fargate resources, then you must not specify
--   <tt>nodeProperties</tt>; use only <tt>containerProperties</tt>.
[$sel:containerProperties:RegisterJobDefinition'] :: RegisterJobDefinition -> Maybe ContainerProperties

-- | An object with various properties specific to multi-node parallel
--   jobs. If you specify node properties for a job, it becomes a
--   multi-node parallel job. For more information, see <a>Multi-node
--   Parallel Jobs</a> in the <i>Batch User Guide</i>. If the job
--   definition's <tt>type</tt> parameter is <tt>container</tt>, then you
--   must specify either <tt>containerProperties</tt> or
--   <tt>nodeProperties</tt>.
--   
--   If the job runs on Fargate resources, then you must not specify
--   <tt>nodeProperties</tt>; use <tt>containerProperties</tt> instead.
[$sel:nodeProperties:RegisterJobDefinition'] :: RegisterJobDefinition -> Maybe NodeProperties

-- | The tags that you apply to the job definition to help you categorize
--   and organize your resources. Each tag consists of a key and an
--   optional value. For more information, see <a>Tagging Amazon Web
--   Services Resources</a> in <i>Batch User Guide</i>.
[$sel:tags:RegisterJobDefinition'] :: RegisterJobDefinition -> Maybe (HashMap Text Text)

-- | The name of the job definition to register. Up to 128 letters
--   (uppercase and lowercase), numbers, hyphens, and underscores are
--   allowed.
[$sel:jobDefinitionName:RegisterJobDefinition'] :: RegisterJobDefinition -> Text

-- | The type of job definition. For more information about multi-node
--   parallel jobs, see <a>Creating a multi-node parallel job
--   definition</a> in the <i>Batch User Guide</i>.
--   
--   If the job is run on Fargate resources, then <tt>multinode</tt> isn't
--   supported.
[$sel:type':RegisterJobDefinition'] :: RegisterJobDefinition -> JobDefinitionType

-- | Create a value of <a>RegisterJobDefinition</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:propagateTags:RegisterJobDefinition'</a>,
--   <a>registerJobDefinition_propagateTags</a> - Specifies whether to
--   propagate the tags from the job or job definition to the corresponding
--   Amazon ECS task. If no value is specified, the tags are not
--   propagated. Tags can only be propagated to the tasks during task
--   creation. For tags with the same name, job tags are given priority
--   over job definitions tags. If the total number of combined tags from
--   the job and job definition is over 50, the job is moved to the
--   <tt>FAILED</tt> state.
--   
--   <a>$sel:retryStrategy:RegisterJobDefinition'</a>,
--   <a>registerJobDefinition_retryStrategy</a> - The retry strategy to use
--   for failed jobs that are submitted with this job definition. Any retry
--   strategy that's specified during a SubmitJob operation overrides the
--   retry strategy defined here. If a job is terminated due to a timeout,
--   it isn't retried.
--   
--   <a>$sel:platformCapabilities:RegisterJobDefinition'</a>,
--   <a>registerJobDefinition_platformCapabilities</a> - The platform
--   capabilities required by the job definition. If no value is specified,
--   it defaults to <tt>EC2</tt>. To run the job on Fargate resources,
--   specify <tt>FARGATE</tt>.
--   
--   <a>$sel:parameters:RegisterJobDefinition'</a>,
--   <a>registerJobDefinition_parameters</a> - Default parameter
--   substitution placeholders to set in the job definition. Parameters are
--   specified as a key-value pair mapping. Parameters in a
--   <tt>SubmitJob</tt> request override any corresponding parameter
--   defaults from the job definition.
--   
--   <a>$sel:timeout:RegisterJobDefinition'</a>,
--   <a>registerJobDefinition_timeout</a> - The timeout configuration for
--   jobs that are submitted with this job definition, after which Batch
--   terminates your jobs if they have not finished. If a job is terminated
--   due to a timeout, it isn't retried. The minimum value for the timeout
--   is 60 seconds. Any timeout configuration that's specified during a
--   SubmitJob operation overrides the timeout configuration defined here.
--   For more information, see <a>Job Timeouts</a> in the <i>Batch User
--   Guide</i>.
--   
--   <a>$sel:containerProperties:RegisterJobDefinition'</a>,
--   <a>registerJobDefinition_containerProperties</a> - An object with
--   various properties specific to single-node container-based jobs. If
--   the job definition's <tt>type</tt> parameter is <tt>container</tt>,
--   then you must specify either <tt>containerProperties</tt> or
--   <tt>nodeProperties</tt>.
--   
--   If the job runs on Fargate resources, then you must not specify
--   <tt>nodeProperties</tt>; use only <tt>containerProperties</tt>.
--   
--   <a>$sel:nodeProperties:RegisterJobDefinition'</a>,
--   <a>registerJobDefinition_nodeProperties</a> - An object with various
--   properties specific to multi-node parallel jobs. If you specify node
--   properties for a job, it becomes a multi-node parallel job. For more
--   information, see <a>Multi-node Parallel Jobs</a> in the <i>Batch User
--   Guide</i>. If the job definition's <tt>type</tt> parameter is
--   <tt>container</tt>, then you must specify either
--   <tt>containerProperties</tt> or <tt>nodeProperties</tt>.
--   
--   If the job runs on Fargate resources, then you must not specify
--   <tt>nodeProperties</tt>; use <tt>containerProperties</tt> instead.
--   
--   <a>$sel:tags:RegisterJobDefinition'</a>,
--   <a>registerJobDefinition_tags</a> - The tags that you apply to the job
--   definition to help you categorize and organize your resources. Each
--   tag consists of a key and an optional value. For more information, see
--   <a>Tagging Amazon Web Services Resources</a> in <i>Batch User
--   Guide</i>.
--   
--   <a>$sel:jobDefinitionName:RegisterJobDefinition'</a>,
--   <a>registerJobDefinition_jobDefinitionName</a> - The name of the job
--   definition to register. Up to 128 letters (uppercase and lowercase),
--   numbers, hyphens, and underscores are allowed.
--   
--   <a>$sel:type':RegisterJobDefinition'</a>,
--   <a>registerJobDefinition_type</a> - The type of job definition. For
--   more information about multi-node parallel jobs, see <a>Creating a
--   multi-node parallel job definition</a> in the <i>Batch User Guide</i>.
--   
--   If the job is run on Fargate resources, then <tt>multinode</tt> isn't
--   supported.
newRegisterJobDefinition :: Text -> JobDefinitionType -> RegisterJobDefinition

-- | Specifies whether to propagate the tags from the job or job definition
--   to the corresponding Amazon ECS task. If no value is specified, the
--   tags are not propagated. Tags can only be propagated to the tasks
--   during task creation. For tags with the same name, job tags are given
--   priority over job definitions tags. If the total number of combined
--   tags from the job and job definition is over 50, the job is moved to
--   the <tt>FAILED</tt> state.
registerJobDefinition_propagateTags :: Lens' RegisterJobDefinition (Maybe Bool)

-- | The retry strategy to use for failed jobs that are submitted with this
--   job definition. Any retry strategy that's specified during a SubmitJob
--   operation overrides the retry strategy defined here. If a job is
--   terminated due to a timeout, it isn't retried.
registerJobDefinition_retryStrategy :: Lens' RegisterJobDefinition (Maybe RetryStrategy)

-- | The platform capabilities required by the job definition. If no value
--   is specified, it defaults to <tt>EC2</tt>. To run the job on Fargate
--   resources, specify <tt>FARGATE</tt>.
registerJobDefinition_platformCapabilities :: Lens' RegisterJobDefinition (Maybe [PlatformCapability])

-- | Default parameter substitution placeholders to set in the job
--   definition. Parameters are specified as a key-value pair mapping.
--   Parameters in a <tt>SubmitJob</tt> request override any corresponding
--   parameter defaults from the job definition.
registerJobDefinition_parameters :: Lens' RegisterJobDefinition (Maybe (HashMap Text Text))

-- | The timeout configuration for jobs that are submitted with this job
--   definition, after which Batch terminates your jobs if they have not
--   finished. If a job is terminated due to a timeout, it isn't retried.
--   The minimum value for the timeout is 60 seconds. Any timeout
--   configuration that's specified during a SubmitJob operation overrides
--   the timeout configuration defined here. For more information, see
--   <a>Job Timeouts</a> in the <i>Batch User Guide</i>.
registerJobDefinition_timeout :: Lens' RegisterJobDefinition (Maybe JobTimeout)

-- | An object with various properties specific to single-node
--   container-based jobs. If the job definition's <tt>type</tt> parameter
--   is <tt>container</tt>, then you must specify either
--   <tt>containerProperties</tt> or <tt>nodeProperties</tt>.
--   
--   If the job runs on Fargate resources, then you must not specify
--   <tt>nodeProperties</tt>; use only <tt>containerProperties</tt>.
registerJobDefinition_containerProperties :: Lens' RegisterJobDefinition (Maybe ContainerProperties)

-- | An object with various properties specific to multi-node parallel
--   jobs. If you specify node properties for a job, it becomes a
--   multi-node parallel job. For more information, see <a>Multi-node
--   Parallel Jobs</a> in the <i>Batch User Guide</i>. If the job
--   definition's <tt>type</tt> parameter is <tt>container</tt>, then you
--   must specify either <tt>containerProperties</tt> or
--   <tt>nodeProperties</tt>.
--   
--   If the job runs on Fargate resources, then you must not specify
--   <tt>nodeProperties</tt>; use <tt>containerProperties</tt> instead.
registerJobDefinition_nodeProperties :: Lens' RegisterJobDefinition (Maybe NodeProperties)

-- | The tags that you apply to the job definition to help you categorize
--   and organize your resources. Each tag consists of a key and an
--   optional value. For more information, see <a>Tagging Amazon Web
--   Services Resources</a> in <i>Batch User Guide</i>.
registerJobDefinition_tags :: Lens' RegisterJobDefinition (Maybe (HashMap Text Text))

-- | The name of the job definition to register. Up to 128 letters
--   (uppercase and lowercase), numbers, hyphens, and underscores are
--   allowed.
registerJobDefinition_jobDefinitionName :: Lens' RegisterJobDefinition Text

-- | The type of job definition. For more information about multi-node
--   parallel jobs, see <a>Creating a multi-node parallel job
--   definition</a> in the <i>Batch User Guide</i>.
--   
--   If the job is run on Fargate resources, then <tt>multinode</tt> isn't
--   supported.
registerJobDefinition_type :: Lens' RegisterJobDefinition JobDefinitionType

-- | <i>See:</i> <a>newRegisterJobDefinitionResponse</a> smart constructor.
data RegisterJobDefinitionResponse
RegisterJobDefinitionResponse' :: Int -> Text -> Text -> Int -> RegisterJobDefinitionResponse

-- | The response's http status code.
[$sel:httpStatus:RegisterJobDefinitionResponse'] :: RegisterJobDefinitionResponse -> Int

-- | The name of the job definition.
[$sel:jobDefinitionName:RegisterJobDefinitionResponse'] :: RegisterJobDefinitionResponse -> Text

-- | The Amazon Resource Name (ARN) of the job definition.
[$sel:jobDefinitionArn:RegisterJobDefinitionResponse'] :: RegisterJobDefinitionResponse -> Text

-- | The revision of the job definition.
[$sel:revision:RegisterJobDefinitionResponse'] :: RegisterJobDefinitionResponse -> Int

-- | Create a value of <a>RegisterJobDefinitionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:RegisterJobDefinitionResponse'</a>,
--   <a>registerJobDefinitionResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:jobDefinitionName:RegisterJobDefinition'</a>,
--   <a>registerJobDefinitionResponse_jobDefinitionName</a> - The name of
--   the job definition.
--   
--   <a>$sel:jobDefinitionArn:RegisterJobDefinitionResponse'</a>,
--   <a>registerJobDefinitionResponse_jobDefinitionArn</a> - The Amazon
--   Resource Name (ARN) of the job definition.
--   
--   <a>$sel:revision:RegisterJobDefinitionResponse'</a>,
--   <a>registerJobDefinitionResponse_revision</a> - The revision of the
--   job definition.
newRegisterJobDefinitionResponse :: Int -> Text -> Text -> Int -> RegisterJobDefinitionResponse

-- | The response's http status code.
registerJobDefinitionResponse_httpStatus :: Lens' RegisterJobDefinitionResponse Int

-- | The name of the job definition.
registerJobDefinitionResponse_jobDefinitionName :: Lens' RegisterJobDefinitionResponse Text

-- | The Amazon Resource Name (ARN) of the job definition.
registerJobDefinitionResponse_jobDefinitionArn :: Lens' RegisterJobDefinitionResponse Text

-- | The revision of the job definition.
registerJobDefinitionResponse_revision :: Lens' RegisterJobDefinitionResponse Int
instance GHC.Generics.Generic Network.AWS.Batch.RegisterJobDefinition.RegisterJobDefinition
instance GHC.Show.Show Network.AWS.Batch.RegisterJobDefinition.RegisterJobDefinition
instance GHC.Read.Read Network.AWS.Batch.RegisterJobDefinition.RegisterJobDefinition
instance GHC.Classes.Eq Network.AWS.Batch.RegisterJobDefinition.RegisterJobDefinition
instance GHC.Generics.Generic Network.AWS.Batch.RegisterJobDefinition.RegisterJobDefinitionResponse
instance GHC.Show.Show Network.AWS.Batch.RegisterJobDefinition.RegisterJobDefinitionResponse
instance GHC.Read.Read Network.AWS.Batch.RegisterJobDefinition.RegisterJobDefinitionResponse
instance GHC.Classes.Eq Network.AWS.Batch.RegisterJobDefinition.RegisterJobDefinitionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Batch.RegisterJobDefinition.RegisterJobDefinition
instance Control.DeepSeq.NFData Network.AWS.Batch.RegisterJobDefinition.RegisterJobDefinitionResponse
instance Data.Hashable.Class.Hashable Network.AWS.Batch.RegisterJobDefinition.RegisterJobDefinition
instance Control.DeepSeq.NFData Network.AWS.Batch.RegisterJobDefinition.RegisterJobDefinition
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Batch.RegisterJobDefinition.RegisterJobDefinition
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Batch.RegisterJobDefinition.RegisterJobDefinition
instance Network.AWS.Data.Path.ToPath Network.AWS.Batch.RegisterJobDefinition.RegisterJobDefinition
instance Network.AWS.Data.Query.ToQuery Network.AWS.Batch.RegisterJobDefinition.RegisterJobDefinition


-- | Lists the tags for an Batch resource. Batch resources that support
--   tags are compute environments, jobs, job definitions, and job queues.
--   ARNs for child jobs of array and multi-node parallel (MNP) jobs are
--   not supported.
module Network.AWS.Batch.ListTagsForResource

-- | <i>See:</i> <a>newListTagsForResource</a> smart constructor.
data ListTagsForResource
ListTagsForResource' :: Text -> ListTagsForResource

-- | The Amazon Resource Name (ARN) that identifies the resource that tags
--   are listed for. Batch resources that support tags are compute
--   environments, jobs, job definitions, and job queues. ARNs for child
--   jobs of array and multi-node parallel (MNP) jobs are not supported.
[$sel:resourceArn:ListTagsForResource'] :: ListTagsForResource -> Text

-- | Create a value of <a>ListTagsForResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:ListTagsForResource'</a>,
--   <a>listTagsForResource_resourceArn</a> - The Amazon Resource Name
--   (ARN) that identifies the resource that tags are listed for. Batch
--   resources that support tags are compute environments, jobs, job
--   definitions, and job queues. ARNs for child jobs of array and
--   multi-node parallel (MNP) jobs are not supported.
newListTagsForResource :: Text -> ListTagsForResource

-- | The Amazon Resource Name (ARN) that identifies the resource that tags
--   are listed for. Batch resources that support tags are compute
--   environments, jobs, job definitions, and job queues. ARNs for child
--   jobs of array and multi-node parallel (MNP) jobs are not supported.
listTagsForResource_resourceArn :: Lens' ListTagsForResource Text

-- | <i>See:</i> <a>newListTagsForResourceResponse</a> smart constructor.
data ListTagsForResourceResponse
ListTagsForResourceResponse' :: Maybe (HashMap Text Text) -> Int -> ListTagsForResourceResponse

-- | The tags for the resource.
[$sel:tags:ListTagsForResourceResponse'] :: ListTagsForResourceResponse -> Maybe (HashMap Text Text)

-- | The response's http status code.
[$sel:httpStatus:ListTagsForResourceResponse'] :: ListTagsForResourceResponse -> Int

-- | Create a value of <a>ListTagsForResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_tags</a> - The tags for the resource.
--   
--   <a>$sel:httpStatus:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_httpStatus</a> - The response's http
--   status code.
newListTagsForResourceResponse :: Int -> ListTagsForResourceResponse

-- | The tags for the resource.
listTagsForResourceResponse_tags :: Lens' ListTagsForResourceResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
listTagsForResourceResponse_httpStatus :: Lens' ListTagsForResourceResponse Int
instance GHC.Generics.Generic Network.AWS.Batch.ListTagsForResource.ListTagsForResource
instance GHC.Show.Show Network.AWS.Batch.ListTagsForResource.ListTagsForResource
instance GHC.Read.Read Network.AWS.Batch.ListTagsForResource.ListTagsForResource
instance GHC.Classes.Eq Network.AWS.Batch.ListTagsForResource.ListTagsForResource
instance GHC.Generics.Generic Network.AWS.Batch.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Show.Show Network.AWS.Batch.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Read.Read Network.AWS.Batch.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Classes.Eq Network.AWS.Batch.ListTagsForResource.ListTagsForResourceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Batch.ListTagsForResource.ListTagsForResource
instance Control.DeepSeq.NFData Network.AWS.Batch.ListTagsForResource.ListTagsForResourceResponse
instance Data.Hashable.Class.Hashable Network.AWS.Batch.ListTagsForResource.ListTagsForResource
instance Control.DeepSeq.NFData Network.AWS.Batch.ListTagsForResource.ListTagsForResource
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Batch.ListTagsForResource.ListTagsForResource
instance Network.AWS.Data.Path.ToPath Network.AWS.Batch.ListTagsForResource.ListTagsForResource
instance Network.AWS.Data.Query.ToQuery Network.AWS.Batch.ListTagsForResource.ListTagsForResource


-- | Returns a list of Batch jobs.
--   
--   You must specify only one of the following items:
--   
--   <ul>
--   <li>A job queue ID to return a list of jobs in that job queue</li>
--   <li>A multi-node parallel job ID to return a list of nodes for that
--   job</li>
--   <li>An array job ID to return a list of the children for that job</li>
--   </ul>
--   
--   You can filter the results by job status with the <tt>jobStatus</tt>
--   parameter. If you don't specify a status, only <tt>RUNNING</tt> jobs
--   are returned.
--   
--   This operation returns paginated results.
module Network.AWS.Batch.ListJobs

-- | Contains the parameters for <tt>ListJobs</tt>.
--   
--   <i>See:</i> <a>newListJobs</a> smart constructor.
data ListJobs
ListJobs' :: Maybe [KeyValuesPair] -> Maybe Text -> Maybe Text -> Maybe JobStatus -> Maybe Text -> Maybe Text -> Maybe Int -> ListJobs

-- | The filter to apply to the query. Only one filter can be used at a
--   time. When the filter is used, <tt>jobStatus</tt> is ignored. The
--   filter doesn't apply to child jobs in an array or multi-node parallel
--   (MNP) jobs. The results are sorted by the <tt>createdAt</tt> field,
--   with the most recent jobs being first.
--   
--   <ul>
--   <li><i>JOB_NAME</i> The value of the filter is a case-insensitive
--   match for the job name. If the value ends with an asterisk (*), the
--   filter will match any job name that begins with the string before the
--   '*'. This corresponds to the <tt>jobName</tt> value. For example,
--   <tt>test1</tt> matches both <tt>Test1</tt> and <tt>test1</tt>, and
--   <tt>test1*</tt> matches both <tt>test1</tt> and <tt>Test10</tt>. When
--   the <tt>JOB_NAME</tt> filter is used, the results are grouped by the
--   job name and version.</li>
--   <li><i>JOB_DEFINITION</i> The value for the filter is the name or
--   Amazon Resource Name (ARN) of the job definition. This corresponds to
--   the <tt>jobDefinition</tt> value. The value is case sensitive. When
--   the value for the filter is the job definition name, the results
--   include all the jobs that used any revision of that job definition
--   name. If the value ends with an asterisk (*), the filter will match
--   any job definition name that begins with the string before the '*'.
--   For example, <tt>jd1</tt> matches only <tt>jd1</tt>, and <tt>jd1*</tt>
--   matches both <tt>jd1</tt> and <tt>jd1A</tt>. The version of the job
--   definition that's used doesn't affect the sort order. When the
--   <tt>JOB_DEFINITION</tt> filter is used and the ARN is used (which is
--   in the form
--   <tt>arn:${Partition}:batch:${Region}:${Account}:job-definition/${JobDefinitionName}:${Revision}</tt>),
--   the results include jobs that used the specified revision of the job
--   definition. Asterisk (*) is not supported when the ARN is used.</li>
--   <li><i>BEFORE_CREATED_AT</i> The value for the filter is the time
--   that's before the job was created. This corresponds to the
--   <tt>createdAt</tt> value. The value is a string representation of the
--   number of seconds since 00:00:00 UTC (midnight) on January 1,
--   1970.</li>
--   <li><i>AFTER_CREATED_AT</i> The value for the filter is the time
--   that's after the job was created. This corresponds to the
--   <tt>createdAt</tt> value. The value is a string representation of the
--   number of seconds since 00:00:00 UTC (midnight) on January 1,
--   1970.</li>
--   </ul>
[$sel:filters:ListJobs'] :: ListJobs -> Maybe [KeyValuesPair]

-- | The <tt>nextToken</tt> value returned from a previous paginated
--   <tt>ListJobs</tt> request where <tt>maxResults</tt> was used and the
--   results exceeded the value of that parameter. Pagination continues
--   from the end of the previous results that returned the
--   <tt>nextToken</tt> value. This value is <tt>null</tt> when there are
--   no more results to return.
--   
--   This token should be treated as an opaque identifier that's only used
--   to retrieve the next items in a list and not for other programmatic
--   purposes.
[$sel:nextToken:ListJobs'] :: ListJobs -> Maybe Text

-- | The job ID for a multi-node parallel job. Specifying a multi-node
--   parallel job ID with this parameter lists all nodes that are
--   associated with the specified job.
[$sel:multiNodeJobId:ListJobs'] :: ListJobs -> Maybe Text

-- | The job status used to filter jobs in the specified queue. If the
--   <tt>filters</tt> parameter is specified, the <tt>jobStatus</tt>
--   parameter is ignored and jobs with any status are returned. If you
--   don't specify a status, only <tt>RUNNING</tt> jobs are returned.
[$sel:jobStatus:ListJobs'] :: ListJobs -> Maybe JobStatus

-- | The job ID for an array job. Specifying an array job ID with this
--   parameter lists all child jobs from within the specified array.
[$sel:arrayJobId:ListJobs'] :: ListJobs -> Maybe Text

-- | The name or full Amazon Resource Name (ARN) of the job queue used to
--   list jobs.
[$sel:jobQueue:ListJobs'] :: ListJobs -> Maybe Text

-- | The maximum number of results returned by <tt>ListJobs</tt> in
--   paginated output. When this parameter is used, <tt>ListJobs</tt> only
--   returns <tt>maxResults</tt> results in a single page and a
--   <tt>nextToken</tt> response element. The remaining results of the
--   initial request can be seen by sending another <tt>ListJobs</tt>
--   request with the returned <tt>nextToken</tt> value. This value can be
--   between 1 and 100. If this parameter isn't used, then
--   <tt>ListJobs</tt> returns up to 100 results and a <tt>nextToken</tt>
--   value if applicable.
[$sel:maxResults:ListJobs'] :: ListJobs -> Maybe Int

-- | Create a value of <a>ListJobs</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:filters:ListJobs'</a>, <a>listJobs_filters</a> - The filter to
--   apply to the query. Only one filter can be used at a time. When the
--   filter is used, <tt>jobStatus</tt> is ignored. The filter doesn't
--   apply to child jobs in an array or multi-node parallel (MNP) jobs. The
--   results are sorted by the <tt>createdAt</tt> field, with the most
--   recent jobs being first.
--   
--   <ul>
--   <li><i>JOB_NAME</i> The value of the filter is a case-insensitive
--   match for the job name. If the value ends with an asterisk (*), the
--   filter will match any job name that begins with the string before the
--   '*'. This corresponds to the <tt>jobName</tt> value. For example,
--   <tt>test1</tt> matches both <tt>Test1</tt> and <tt>test1</tt>, and
--   <tt>test1*</tt> matches both <tt>test1</tt> and <tt>Test10</tt>. When
--   the <tt>JOB_NAME</tt> filter is used, the results are grouped by the
--   job name and version.</li>
--   <li><i>JOB_DEFINITION</i> The value for the filter is the name or
--   Amazon Resource Name (ARN) of the job definition. This corresponds to
--   the <tt>jobDefinition</tt> value. The value is case sensitive. When
--   the value for the filter is the job definition name, the results
--   include all the jobs that used any revision of that job definition
--   name. If the value ends with an asterisk (*), the filter will match
--   any job definition name that begins with the string before the '*'.
--   For example, <tt>jd1</tt> matches only <tt>jd1</tt>, and <tt>jd1*</tt>
--   matches both <tt>jd1</tt> and <tt>jd1A</tt>. The version of the job
--   definition that's used doesn't affect the sort order. When the
--   <tt>JOB_DEFINITION</tt> filter is used and the ARN is used (which is
--   in the form
--   <tt>arn:${Partition}:batch:${Region}:${Account}:job-definition/${JobDefinitionName}:${Revision}</tt>),
--   the results include jobs that used the specified revision of the job
--   definition. Asterisk (*) is not supported when the ARN is used.</li>
--   <li><i>BEFORE_CREATED_AT</i> The value for the filter is the time
--   that's before the job was created. This corresponds to the
--   <tt>createdAt</tt> value. The value is a string representation of the
--   number of seconds since 00:00:00 UTC (midnight) on January 1,
--   1970.</li>
--   <li><i>AFTER_CREATED_AT</i> The value for the filter is the time
--   that's after the job was created. This corresponds to the
--   <tt>createdAt</tt> value. The value is a string representation of the
--   number of seconds since 00:00:00 UTC (midnight) on January 1,
--   1970.</li>
--   </ul>
--   
--   <a>$sel:nextToken:ListJobs'</a>, <a>listJobs_nextToken</a> - The
--   <tt>nextToken</tt> value returned from a previous paginated
--   <tt>ListJobs</tt> request where <tt>maxResults</tt> was used and the
--   results exceeded the value of that parameter. Pagination continues
--   from the end of the previous results that returned the
--   <tt>nextToken</tt> value. This value is <tt>null</tt> when there are
--   no more results to return.
--   
--   This token should be treated as an opaque identifier that's only used
--   to retrieve the next items in a list and not for other programmatic
--   purposes.
--   
--   <a>$sel:multiNodeJobId:ListJobs'</a>, <a>listJobs_multiNodeJobId</a> -
--   The job ID for a multi-node parallel job. Specifying a multi-node
--   parallel job ID with this parameter lists all nodes that are
--   associated with the specified job.
--   
--   <a>$sel:jobStatus:ListJobs'</a>, <a>listJobs_jobStatus</a> - The job
--   status used to filter jobs in the specified queue. If the
--   <tt>filters</tt> parameter is specified, the <tt>jobStatus</tt>
--   parameter is ignored and jobs with any status are returned. If you
--   don't specify a status, only <tt>RUNNING</tt> jobs are returned.
--   
--   <a>$sel:arrayJobId:ListJobs'</a>, <a>listJobs_arrayJobId</a> - The job
--   ID for an array job. Specifying an array job ID with this parameter
--   lists all child jobs from within the specified array.
--   
--   <a>$sel:jobQueue:ListJobs'</a>, <a>listJobs_jobQueue</a> - The name or
--   full Amazon Resource Name (ARN) of the job queue used to list jobs.
--   
--   <a>$sel:maxResults:ListJobs'</a>, <a>listJobs_maxResults</a> - The
--   maximum number of results returned by <tt>ListJobs</tt> in paginated
--   output. When this parameter is used, <tt>ListJobs</tt> only returns
--   <tt>maxResults</tt> results in a single page and a <tt>nextToken</tt>
--   response element. The remaining results of the initial request can be
--   seen by sending another <tt>ListJobs</tt> request with the returned
--   <tt>nextToken</tt> value. This value can be between 1 and 100. If this
--   parameter isn't used, then <tt>ListJobs</tt> returns up to 100 results
--   and a <tt>nextToken</tt> value if applicable.
newListJobs :: ListJobs

-- | The filter to apply to the query. Only one filter can be used at a
--   time. When the filter is used, <tt>jobStatus</tt> is ignored. The
--   filter doesn't apply to child jobs in an array or multi-node parallel
--   (MNP) jobs. The results are sorted by the <tt>createdAt</tt> field,
--   with the most recent jobs being first.
--   
--   <ul>
--   <li><i>JOB_NAME</i> The value of the filter is a case-insensitive
--   match for the job name. If the value ends with an asterisk (*), the
--   filter will match any job name that begins with the string before the
--   '*'. This corresponds to the <tt>jobName</tt> value. For example,
--   <tt>test1</tt> matches both <tt>Test1</tt> and <tt>test1</tt>, and
--   <tt>test1*</tt> matches both <tt>test1</tt> and <tt>Test10</tt>. When
--   the <tt>JOB_NAME</tt> filter is used, the results are grouped by the
--   job name and version.</li>
--   <li><i>JOB_DEFINITION</i> The value for the filter is the name or
--   Amazon Resource Name (ARN) of the job definition. This corresponds to
--   the <tt>jobDefinition</tt> value. The value is case sensitive. When
--   the value for the filter is the job definition name, the results
--   include all the jobs that used any revision of that job definition
--   name. If the value ends with an asterisk (*), the filter will match
--   any job definition name that begins with the string before the '*'.
--   For example, <tt>jd1</tt> matches only <tt>jd1</tt>, and <tt>jd1*</tt>
--   matches both <tt>jd1</tt> and <tt>jd1A</tt>. The version of the job
--   definition that's used doesn't affect the sort order. When the
--   <tt>JOB_DEFINITION</tt> filter is used and the ARN is used (which is
--   in the form
--   <tt>arn:${Partition}:batch:${Region}:${Account}:job-definition/${JobDefinitionName}:${Revision}</tt>),
--   the results include jobs that used the specified revision of the job
--   definition. Asterisk (*) is not supported when the ARN is used.</li>
--   <li><i>BEFORE_CREATED_AT</i> The value for the filter is the time
--   that's before the job was created. This corresponds to the
--   <tt>createdAt</tt> value. The value is a string representation of the
--   number of seconds since 00:00:00 UTC (midnight) on January 1,
--   1970.</li>
--   <li><i>AFTER_CREATED_AT</i> The value for the filter is the time
--   that's after the job was created. This corresponds to the
--   <tt>createdAt</tt> value. The value is a string representation of the
--   number of seconds since 00:00:00 UTC (midnight) on January 1,
--   1970.</li>
--   </ul>
listJobs_filters :: Lens' ListJobs (Maybe [KeyValuesPair])

-- | The <tt>nextToken</tt> value returned from a previous paginated
--   <tt>ListJobs</tt> request where <tt>maxResults</tt> was used and the
--   results exceeded the value of that parameter. Pagination continues
--   from the end of the previous results that returned the
--   <tt>nextToken</tt> value. This value is <tt>null</tt> when there are
--   no more results to return.
--   
--   This token should be treated as an opaque identifier that's only used
--   to retrieve the next items in a list and not for other programmatic
--   purposes.
listJobs_nextToken :: Lens' ListJobs (Maybe Text)

-- | The job ID for a multi-node parallel job. Specifying a multi-node
--   parallel job ID with this parameter lists all nodes that are
--   associated with the specified job.
listJobs_multiNodeJobId :: Lens' ListJobs (Maybe Text)

-- | The job status used to filter jobs in the specified queue. If the
--   <tt>filters</tt> parameter is specified, the <tt>jobStatus</tt>
--   parameter is ignored and jobs with any status are returned. If you
--   don't specify a status, only <tt>RUNNING</tt> jobs are returned.
listJobs_jobStatus :: Lens' ListJobs (Maybe JobStatus)

-- | The job ID for an array job. Specifying an array job ID with this
--   parameter lists all child jobs from within the specified array.
listJobs_arrayJobId :: Lens' ListJobs (Maybe Text)

-- | The name or full Amazon Resource Name (ARN) of the job queue used to
--   list jobs.
listJobs_jobQueue :: Lens' ListJobs (Maybe Text)

-- | The maximum number of results returned by <tt>ListJobs</tt> in
--   paginated output. When this parameter is used, <tt>ListJobs</tt> only
--   returns <tt>maxResults</tt> results in a single page and a
--   <tt>nextToken</tt> response element. The remaining results of the
--   initial request can be seen by sending another <tt>ListJobs</tt>
--   request with the returned <tt>nextToken</tt> value. This value can be
--   between 1 and 100. If this parameter isn't used, then
--   <tt>ListJobs</tt> returns up to 100 results and a <tt>nextToken</tt>
--   value if applicable.
listJobs_maxResults :: Lens' ListJobs (Maybe Int)

-- | <i>See:</i> <a>newListJobsResponse</a> smart constructor.
data ListJobsResponse
ListJobsResponse' :: Maybe Text -> Int -> [JobSummary] -> ListJobsResponse

-- | The <tt>nextToken</tt> value to include in a future <tt>ListJobs</tt>
--   request. When the results of a <tt>ListJobs</tt> request exceed
--   <tt>maxResults</tt>, this value can be used to retrieve the next page
--   of results. This value is <tt>null</tt> when there are no more results
--   to return.
[$sel:nextToken:ListJobsResponse'] :: ListJobsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListJobsResponse'] :: ListJobsResponse -> Int

-- | A list of job summaries that match the request.
[$sel:jobSummaryList:ListJobsResponse'] :: ListJobsResponse -> [JobSummary]

-- | Create a value of <a>ListJobsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListJobs'</a>, <a>listJobsResponse_nextToken</a> -
--   The <tt>nextToken</tt> value to include in a future <tt>ListJobs</tt>
--   request. When the results of a <tt>ListJobs</tt> request exceed
--   <tt>maxResults</tt>, this value can be used to retrieve the next page
--   of results. This value is <tt>null</tt> when there are no more results
--   to return.
--   
--   <a>$sel:httpStatus:ListJobsResponse'</a>,
--   <a>listJobsResponse_httpStatus</a> - The response's http status code.
--   
--   <a>$sel:jobSummaryList:ListJobsResponse'</a>,
--   <a>listJobsResponse_jobSummaryList</a> - A list of job summaries that
--   match the request.
newListJobsResponse :: Int -> ListJobsResponse

-- | The <tt>nextToken</tt> value to include in a future <tt>ListJobs</tt>
--   request. When the results of a <tt>ListJobs</tt> request exceed
--   <tt>maxResults</tt>, this value can be used to retrieve the next page
--   of results. This value is <tt>null</tt> when there are no more results
--   to return.
listJobsResponse_nextToken :: Lens' ListJobsResponse (Maybe Text)

-- | The response's http status code.
listJobsResponse_httpStatus :: Lens' ListJobsResponse Int

-- | A list of job summaries that match the request.
listJobsResponse_jobSummaryList :: Lens' ListJobsResponse [JobSummary]
instance GHC.Generics.Generic Network.AWS.Batch.ListJobs.ListJobs
instance GHC.Show.Show Network.AWS.Batch.ListJobs.ListJobs
instance GHC.Read.Read Network.AWS.Batch.ListJobs.ListJobs
instance GHC.Classes.Eq Network.AWS.Batch.ListJobs.ListJobs
instance GHC.Generics.Generic Network.AWS.Batch.ListJobs.ListJobsResponse
instance GHC.Show.Show Network.AWS.Batch.ListJobs.ListJobsResponse
instance GHC.Read.Read Network.AWS.Batch.ListJobs.ListJobsResponse
instance GHC.Classes.Eq Network.AWS.Batch.ListJobs.ListJobsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Batch.ListJobs.ListJobs
instance Control.DeepSeq.NFData Network.AWS.Batch.ListJobs.ListJobsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.Batch.ListJobs.ListJobs
instance Data.Hashable.Class.Hashable Network.AWS.Batch.ListJobs.ListJobs
instance Control.DeepSeq.NFData Network.AWS.Batch.ListJobs.ListJobs
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Batch.ListJobs.ListJobs
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Batch.ListJobs.ListJobs
instance Network.AWS.Data.Path.ToPath Network.AWS.Batch.ListJobs.ListJobs
instance Network.AWS.Data.Query.ToQuery Network.AWS.Batch.ListJobs.ListJobs


-- | Describes a list of Batch jobs.
module Network.AWS.Batch.DescribeJobs

-- | Contains the parameters for <tt>DescribeJobs</tt>.
--   
--   <i>See:</i> <a>newDescribeJobs</a> smart constructor.
data DescribeJobs
DescribeJobs' :: [Text] -> DescribeJobs

-- | A list of up to 100 job IDs.
[$sel:jobs:DescribeJobs'] :: DescribeJobs -> [Text]

-- | Create a value of <a>DescribeJobs</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobs:DescribeJobs'</a>, <a>describeJobs_jobs</a> - A list of
--   up to 100 job IDs.
newDescribeJobs :: DescribeJobs

-- | A list of up to 100 job IDs.
describeJobs_jobs :: Lens' DescribeJobs [Text]

-- | <i>See:</i> <a>newDescribeJobsResponse</a> smart constructor.
data DescribeJobsResponse
DescribeJobsResponse' :: Maybe [JobDetail] -> Int -> DescribeJobsResponse

-- | The list of jobs.
[$sel:jobs:DescribeJobsResponse'] :: DescribeJobsResponse -> Maybe [JobDetail]

-- | The response's http status code.
[$sel:httpStatus:DescribeJobsResponse'] :: DescribeJobsResponse -> Int

-- | Create a value of <a>DescribeJobsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobs:DescribeJobs'</a>, <a>describeJobsResponse_jobs</a> - The
--   list of jobs.
--   
--   <a>$sel:httpStatus:DescribeJobsResponse'</a>,
--   <a>describeJobsResponse_httpStatus</a> - The response's http status
--   code.
newDescribeJobsResponse :: Int -> DescribeJobsResponse

-- | The list of jobs.
describeJobsResponse_jobs :: Lens' DescribeJobsResponse (Maybe [JobDetail])

-- | The response's http status code.
describeJobsResponse_httpStatus :: Lens' DescribeJobsResponse Int
instance GHC.Generics.Generic Network.AWS.Batch.DescribeJobs.DescribeJobs
instance GHC.Show.Show Network.AWS.Batch.DescribeJobs.DescribeJobs
instance GHC.Read.Read Network.AWS.Batch.DescribeJobs.DescribeJobs
instance GHC.Classes.Eq Network.AWS.Batch.DescribeJobs.DescribeJobs
instance GHC.Generics.Generic Network.AWS.Batch.DescribeJobs.DescribeJobsResponse
instance GHC.Show.Show Network.AWS.Batch.DescribeJobs.DescribeJobsResponse
instance GHC.Read.Read Network.AWS.Batch.DescribeJobs.DescribeJobsResponse
instance GHC.Classes.Eq Network.AWS.Batch.DescribeJobs.DescribeJobsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Batch.DescribeJobs.DescribeJobs
instance Control.DeepSeq.NFData Network.AWS.Batch.DescribeJobs.DescribeJobsResponse
instance Data.Hashable.Class.Hashable Network.AWS.Batch.DescribeJobs.DescribeJobs
instance Control.DeepSeq.NFData Network.AWS.Batch.DescribeJobs.DescribeJobs
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Batch.DescribeJobs.DescribeJobs
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Batch.DescribeJobs.DescribeJobs
instance Network.AWS.Data.Path.ToPath Network.AWS.Batch.DescribeJobs.DescribeJobs
instance Network.AWS.Data.Query.ToQuery Network.AWS.Batch.DescribeJobs.DescribeJobs


-- | Describes one or more of your job queues.
--   
--   This operation returns paginated results.
module Network.AWS.Batch.DescribeJobQueues

-- | Contains the parameters for <tt>DescribeJobQueues</tt>.
--   
--   <i>See:</i> <a>newDescribeJobQueues</a> smart constructor.
data DescribeJobQueues
DescribeJobQueues' :: Maybe Text -> Maybe [Text] -> Maybe Int -> DescribeJobQueues

-- | The <tt>nextToken</tt> value returned from a previous paginated
--   <tt>DescribeJobQueues</tt> request where <tt>maxResults</tt> was used
--   and the results exceeded the value of that parameter. Pagination
--   continues from the end of the previous results that returned the
--   <tt>nextToken</tt> value. This value is <tt>null</tt> when there are
--   no more results to return.
--   
--   This token should be treated as an opaque identifier that's only used
--   to retrieve the next items in a list and not for other programmatic
--   purposes.
[$sel:nextToken:DescribeJobQueues'] :: DescribeJobQueues -> Maybe Text

-- | A list of up to 100 queue names or full queue Amazon Resource Name
--   (ARN) entries.
[$sel:jobQueues:DescribeJobQueues'] :: DescribeJobQueues -> Maybe [Text]

-- | The maximum number of results returned by <tt>DescribeJobQueues</tt>
--   in paginated output. When this parameter is used,
--   <tt>DescribeJobQueues</tt> only returns <tt>maxResults</tt> results in
--   a single page and a <tt>nextToken</tt> response element. The remaining
--   results of the initial request can be seen by sending another
--   <tt>DescribeJobQueues</tt> request with the returned
--   <tt>nextToken</tt> value. This value can be between 1 and 100. If this
--   parameter isn't used, then <tt>DescribeJobQueues</tt> returns up to
--   100 results and a <tt>nextToken</tt> value if applicable.
[$sel:maxResults:DescribeJobQueues'] :: DescribeJobQueues -> Maybe Int

-- | Create a value of <a>DescribeJobQueues</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeJobQueues'</a>,
--   <a>describeJobQueues_nextToken</a> - The <tt>nextToken</tt> value
--   returned from a previous paginated <tt>DescribeJobQueues</tt> request
--   where <tt>maxResults</tt> was used and the results exceeded the value
--   of that parameter. Pagination continues from the end of the previous
--   results that returned the <tt>nextToken</tt> value. This value is
--   <tt>null</tt> when there are no more results to return.
--   
--   This token should be treated as an opaque identifier that's only used
--   to retrieve the next items in a list and not for other programmatic
--   purposes.
--   
--   <a>$sel:jobQueues:DescribeJobQueues'</a>,
--   <a>describeJobQueues_jobQueues</a> - A list of up to 100 queue names
--   or full queue Amazon Resource Name (ARN) entries.
--   
--   <a>$sel:maxResults:DescribeJobQueues'</a>,
--   <a>describeJobQueues_maxResults</a> - The maximum number of results
--   returned by <tt>DescribeJobQueues</tt> in paginated output. When this
--   parameter is used, <tt>DescribeJobQueues</tt> only returns
--   <tt>maxResults</tt> results in a single page and a <tt>nextToken</tt>
--   response element. The remaining results of the initial request can be
--   seen by sending another <tt>DescribeJobQueues</tt> request with the
--   returned <tt>nextToken</tt> value. This value can be between 1 and
--   100. If this parameter isn't used, then <tt>DescribeJobQueues</tt>
--   returns up to 100 results and a <tt>nextToken</tt> value if
--   applicable.
newDescribeJobQueues :: DescribeJobQueues

-- | The <tt>nextToken</tt> value returned from a previous paginated
--   <tt>DescribeJobQueues</tt> request where <tt>maxResults</tt> was used
--   and the results exceeded the value of that parameter. Pagination
--   continues from the end of the previous results that returned the
--   <tt>nextToken</tt> value. This value is <tt>null</tt> when there are
--   no more results to return.
--   
--   This token should be treated as an opaque identifier that's only used
--   to retrieve the next items in a list and not for other programmatic
--   purposes.
describeJobQueues_nextToken :: Lens' DescribeJobQueues (Maybe Text)

-- | A list of up to 100 queue names or full queue Amazon Resource Name
--   (ARN) entries.
describeJobQueues_jobQueues :: Lens' DescribeJobQueues (Maybe [Text])

-- | The maximum number of results returned by <tt>DescribeJobQueues</tt>
--   in paginated output. When this parameter is used,
--   <tt>DescribeJobQueues</tt> only returns <tt>maxResults</tt> results in
--   a single page and a <tt>nextToken</tt> response element. The remaining
--   results of the initial request can be seen by sending another
--   <tt>DescribeJobQueues</tt> request with the returned
--   <tt>nextToken</tt> value. This value can be between 1 and 100. If this
--   parameter isn't used, then <tt>DescribeJobQueues</tt> returns up to
--   100 results and a <tt>nextToken</tt> value if applicable.
describeJobQueues_maxResults :: Lens' DescribeJobQueues (Maybe Int)

-- | <i>See:</i> <a>newDescribeJobQueuesResponse</a> smart constructor.
data DescribeJobQueuesResponse
DescribeJobQueuesResponse' :: Maybe Text -> Maybe [JobQueueDetail] -> Int -> DescribeJobQueuesResponse

-- | The <tt>nextToken</tt> value to include in a future
--   <tt>DescribeJobQueues</tt> request. When the results of a
--   <tt>DescribeJobQueues</tt> request exceed <tt>maxResults</tt>, this
--   value can be used to retrieve the next page of results. This value is
--   <tt>null</tt> when there are no more results to return.
[$sel:nextToken:DescribeJobQueuesResponse'] :: DescribeJobQueuesResponse -> Maybe Text

-- | The list of job queues.
[$sel:jobQueues:DescribeJobQueuesResponse'] :: DescribeJobQueuesResponse -> Maybe [JobQueueDetail]

-- | The response's http status code.
[$sel:httpStatus:DescribeJobQueuesResponse'] :: DescribeJobQueuesResponse -> Int

-- | Create a value of <a>DescribeJobQueuesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeJobQueues'</a>,
--   <a>describeJobQueuesResponse_nextToken</a> - The <tt>nextToken</tt>
--   value to include in a future <tt>DescribeJobQueues</tt> request. When
--   the results of a <tt>DescribeJobQueues</tt> request exceed
--   <tt>maxResults</tt>, this value can be used to retrieve the next page
--   of results. This value is <tt>null</tt> when there are no more results
--   to return.
--   
--   <a>$sel:jobQueues:DescribeJobQueues'</a>,
--   <a>describeJobQueuesResponse_jobQueues</a> - The list of job queues.
--   
--   <a>$sel:httpStatus:DescribeJobQueuesResponse'</a>,
--   <a>describeJobQueuesResponse_httpStatus</a> - The response's http
--   status code.
newDescribeJobQueuesResponse :: Int -> DescribeJobQueuesResponse

-- | The <tt>nextToken</tt> value to include in a future
--   <tt>DescribeJobQueues</tt> request. When the results of a
--   <tt>DescribeJobQueues</tt> request exceed <tt>maxResults</tt>, this
--   value can be used to retrieve the next page of results. This value is
--   <tt>null</tt> when there are no more results to return.
describeJobQueuesResponse_nextToken :: Lens' DescribeJobQueuesResponse (Maybe Text)

-- | The list of job queues.
describeJobQueuesResponse_jobQueues :: Lens' DescribeJobQueuesResponse (Maybe [JobQueueDetail])

-- | The response's http status code.
describeJobQueuesResponse_httpStatus :: Lens' DescribeJobQueuesResponse Int
instance GHC.Generics.Generic Network.AWS.Batch.DescribeJobQueues.DescribeJobQueues
instance GHC.Show.Show Network.AWS.Batch.DescribeJobQueues.DescribeJobQueues
instance GHC.Read.Read Network.AWS.Batch.DescribeJobQueues.DescribeJobQueues
instance GHC.Classes.Eq Network.AWS.Batch.DescribeJobQueues.DescribeJobQueues
instance GHC.Generics.Generic Network.AWS.Batch.DescribeJobQueues.DescribeJobQueuesResponse
instance GHC.Show.Show Network.AWS.Batch.DescribeJobQueues.DescribeJobQueuesResponse
instance GHC.Read.Read Network.AWS.Batch.DescribeJobQueues.DescribeJobQueuesResponse
instance GHC.Classes.Eq Network.AWS.Batch.DescribeJobQueues.DescribeJobQueuesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Batch.DescribeJobQueues.DescribeJobQueues
instance Control.DeepSeq.NFData Network.AWS.Batch.DescribeJobQueues.DescribeJobQueuesResponse
instance Network.AWS.Pager.AWSPager Network.AWS.Batch.DescribeJobQueues.DescribeJobQueues
instance Data.Hashable.Class.Hashable Network.AWS.Batch.DescribeJobQueues.DescribeJobQueues
instance Control.DeepSeq.NFData Network.AWS.Batch.DescribeJobQueues.DescribeJobQueues
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Batch.DescribeJobQueues.DescribeJobQueues
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Batch.DescribeJobQueues.DescribeJobQueues
instance Network.AWS.Data.Path.ToPath Network.AWS.Batch.DescribeJobQueues.DescribeJobQueues
instance Network.AWS.Data.Query.ToQuery Network.AWS.Batch.DescribeJobQueues.DescribeJobQueues


-- | Describes a list of job definitions. You can specify a <tt>status</tt>
--   (such as <tt>ACTIVE</tt>) to only return job definitions that match
--   that status.
--   
--   This operation returns paginated results.
module Network.AWS.Batch.DescribeJobDefinitions

-- | Contains the parameters for <tt>DescribeJobDefinitions</tt>.
--   
--   <i>See:</i> <a>newDescribeJobDefinitions</a> smart constructor.
data DescribeJobDefinitions
DescribeJobDefinitions' :: Maybe Text -> Maybe Text -> Maybe [Text] -> Maybe Text -> Maybe Int -> DescribeJobDefinitions

-- | The status used to filter job definitions.
[$sel:status:DescribeJobDefinitions'] :: DescribeJobDefinitions -> Maybe Text

-- | The name of the job definition to describe.
[$sel:jobDefinitionName:DescribeJobDefinitions'] :: DescribeJobDefinitions -> Maybe Text

-- | A list of up to 100 job definitions. Each entry in the list can either
--   be an ARN of the form
--   <tt>arn:aws:batch:${Region}:${Account}:job-definition/${JobDefinitionName}:${Revision}</tt>
--   or a short version using the form
--   <tt>${JobDefinitionName}:${Revision}</tt>.
[$sel:jobDefinitions:DescribeJobDefinitions'] :: DescribeJobDefinitions -> Maybe [Text]

-- | The <tt>nextToken</tt> value returned from a previous paginated
--   <tt>DescribeJobDefinitions</tt> request where <tt>maxResults</tt> was
--   used and the results exceeded the value of that parameter. Pagination
--   continues from the end of the previous results that returned the
--   <tt>nextToken</tt> value. This value is <tt>null</tt> when there are
--   no more results to return.
--   
--   This token should be treated as an opaque identifier that's only used
--   to retrieve the next items in a list and not for other programmatic
--   purposes.
[$sel:nextToken:DescribeJobDefinitions'] :: DescribeJobDefinitions -> Maybe Text

-- | The maximum number of results returned by
--   <tt>DescribeJobDefinitions</tt> in paginated output. When this
--   parameter is used, <tt>DescribeJobDefinitions</tt> only returns
--   <tt>maxResults</tt> results in a single page and a <tt>nextToken</tt>
--   response element. The remaining results of the initial request can be
--   seen by sending another <tt>DescribeJobDefinitions</tt> request with
--   the returned <tt>nextToken</tt> value. This value can be between 1 and
--   100. If this parameter isn't used, then
--   <tt>DescribeJobDefinitions</tt> returns up to 100 results and a
--   <tt>nextToken</tt> value if applicable.
[$sel:maxResults:DescribeJobDefinitions'] :: DescribeJobDefinitions -> Maybe Int

-- | Create a value of <a>DescribeJobDefinitions</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:DescribeJobDefinitions'</a>,
--   <a>describeJobDefinitions_status</a> - The status used to filter job
--   definitions.
--   
--   <a>$sel:jobDefinitionName:DescribeJobDefinitions'</a>,
--   <a>describeJobDefinitions_jobDefinitionName</a> - The name of the job
--   definition to describe.
--   
--   <a>$sel:jobDefinitions:DescribeJobDefinitions'</a>,
--   <a>describeJobDefinitions_jobDefinitions</a> - A list of up to 100 job
--   definitions. Each entry in the list can either be an ARN of the form
--   <tt>arn:aws:batch:${Region}:${Account}:job-definition/${JobDefinitionName}:${Revision}</tt>
--   or a short version using the form
--   <tt>${JobDefinitionName}:${Revision}</tt>.
--   
--   <a>$sel:nextToken:DescribeJobDefinitions'</a>,
--   <a>describeJobDefinitions_nextToken</a> - The <tt>nextToken</tt> value
--   returned from a previous paginated <tt>DescribeJobDefinitions</tt>
--   request where <tt>maxResults</tt> was used and the results exceeded
--   the value of that parameter. Pagination continues from the end of the
--   previous results that returned the <tt>nextToken</tt> value. This
--   value is <tt>null</tt> when there are no more results to return.
--   
--   This token should be treated as an opaque identifier that's only used
--   to retrieve the next items in a list and not for other programmatic
--   purposes.
--   
--   <a>$sel:maxResults:DescribeJobDefinitions'</a>,
--   <a>describeJobDefinitions_maxResults</a> - The maximum number of
--   results returned by <tt>DescribeJobDefinitions</tt> in paginated
--   output. When this parameter is used, <tt>DescribeJobDefinitions</tt>
--   only returns <tt>maxResults</tt> results in a single page and a
--   <tt>nextToken</tt> response element. The remaining results of the
--   initial request can be seen by sending another
--   <tt>DescribeJobDefinitions</tt> request with the returned
--   <tt>nextToken</tt> value. This value can be between 1 and 100. If this
--   parameter isn't used, then <tt>DescribeJobDefinitions</tt> returns up
--   to 100 results and a <tt>nextToken</tt> value if applicable.
newDescribeJobDefinitions :: DescribeJobDefinitions

-- | The status used to filter job definitions.
describeJobDefinitions_status :: Lens' DescribeJobDefinitions (Maybe Text)

-- | The name of the job definition to describe.
describeJobDefinitions_jobDefinitionName :: Lens' DescribeJobDefinitions (Maybe Text)

-- | A list of up to 100 job definitions. Each entry in the list can either
--   be an ARN of the form
--   <tt>arn:aws:batch:${Region}:${Account}:job-definition/${JobDefinitionName}:${Revision}</tt>
--   or a short version using the form
--   <tt>${JobDefinitionName}:${Revision}</tt>.
describeJobDefinitions_jobDefinitions :: Lens' DescribeJobDefinitions (Maybe [Text])

-- | The <tt>nextToken</tt> value returned from a previous paginated
--   <tt>DescribeJobDefinitions</tt> request where <tt>maxResults</tt> was
--   used and the results exceeded the value of that parameter. Pagination
--   continues from the end of the previous results that returned the
--   <tt>nextToken</tt> value. This value is <tt>null</tt> when there are
--   no more results to return.
--   
--   This token should be treated as an opaque identifier that's only used
--   to retrieve the next items in a list and not for other programmatic
--   purposes.
describeJobDefinitions_nextToken :: Lens' DescribeJobDefinitions (Maybe Text)

-- | The maximum number of results returned by
--   <tt>DescribeJobDefinitions</tt> in paginated output. When this
--   parameter is used, <tt>DescribeJobDefinitions</tt> only returns
--   <tt>maxResults</tt> results in a single page and a <tt>nextToken</tt>
--   response element. The remaining results of the initial request can be
--   seen by sending another <tt>DescribeJobDefinitions</tt> request with
--   the returned <tt>nextToken</tt> value. This value can be between 1 and
--   100. If this parameter isn't used, then
--   <tt>DescribeJobDefinitions</tt> returns up to 100 results and a
--   <tt>nextToken</tt> value if applicable.
describeJobDefinitions_maxResults :: Lens' DescribeJobDefinitions (Maybe Int)

-- | <i>See:</i> <a>newDescribeJobDefinitionsResponse</a> smart
--   constructor.
data DescribeJobDefinitionsResponse
DescribeJobDefinitionsResponse' :: Maybe [JobDefinition] -> Maybe Text -> Int -> DescribeJobDefinitionsResponse

-- | The list of job definitions.
[$sel:jobDefinitions:DescribeJobDefinitionsResponse'] :: DescribeJobDefinitionsResponse -> Maybe [JobDefinition]

-- | The <tt>nextToken</tt> value to include in a future
--   <tt>DescribeJobDefinitions</tt> request. When the results of a
--   <tt>DescribeJobDefinitions</tt> request exceed <tt>maxResults</tt>,
--   this value can be used to retrieve the next page of results. This
--   value is <tt>null</tt> when there are no more results to return.
[$sel:nextToken:DescribeJobDefinitionsResponse'] :: DescribeJobDefinitionsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:DescribeJobDefinitionsResponse'] :: DescribeJobDefinitionsResponse -> Int

-- | Create a value of <a>DescribeJobDefinitionsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobDefinitions:DescribeJobDefinitions'</a>,
--   <a>describeJobDefinitionsResponse_jobDefinitions</a> - The list of job
--   definitions.
--   
--   <a>$sel:nextToken:DescribeJobDefinitions'</a>,
--   <a>describeJobDefinitionsResponse_nextToken</a> - The
--   <tt>nextToken</tt> value to include in a future
--   <tt>DescribeJobDefinitions</tt> request. When the results of a
--   <tt>DescribeJobDefinitions</tt> request exceed <tt>maxResults</tt>,
--   this value can be used to retrieve the next page of results. This
--   value is <tt>null</tt> when there are no more results to return.
--   
--   <a>$sel:httpStatus:DescribeJobDefinitionsResponse'</a>,
--   <a>describeJobDefinitionsResponse_httpStatus</a> - The response's http
--   status code.
newDescribeJobDefinitionsResponse :: Int -> DescribeJobDefinitionsResponse

-- | The list of job definitions.
describeJobDefinitionsResponse_jobDefinitions :: Lens' DescribeJobDefinitionsResponse (Maybe [JobDefinition])

-- | The <tt>nextToken</tt> value to include in a future
--   <tt>DescribeJobDefinitions</tt> request. When the results of a
--   <tt>DescribeJobDefinitions</tt> request exceed <tt>maxResults</tt>,
--   this value can be used to retrieve the next page of results. This
--   value is <tt>null</tt> when there are no more results to return.
describeJobDefinitionsResponse_nextToken :: Lens' DescribeJobDefinitionsResponse (Maybe Text)

-- | The response's http status code.
describeJobDefinitionsResponse_httpStatus :: Lens' DescribeJobDefinitionsResponse Int
instance GHC.Generics.Generic Network.AWS.Batch.DescribeJobDefinitions.DescribeJobDefinitions
instance GHC.Show.Show Network.AWS.Batch.DescribeJobDefinitions.DescribeJobDefinitions
instance GHC.Read.Read Network.AWS.Batch.DescribeJobDefinitions.DescribeJobDefinitions
instance GHC.Classes.Eq Network.AWS.Batch.DescribeJobDefinitions.DescribeJobDefinitions
instance GHC.Generics.Generic Network.AWS.Batch.DescribeJobDefinitions.DescribeJobDefinitionsResponse
instance GHC.Show.Show Network.AWS.Batch.DescribeJobDefinitions.DescribeJobDefinitionsResponse
instance GHC.Read.Read Network.AWS.Batch.DescribeJobDefinitions.DescribeJobDefinitionsResponse
instance GHC.Classes.Eq Network.AWS.Batch.DescribeJobDefinitions.DescribeJobDefinitionsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Batch.DescribeJobDefinitions.DescribeJobDefinitions
instance Control.DeepSeq.NFData Network.AWS.Batch.DescribeJobDefinitions.DescribeJobDefinitionsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.Batch.DescribeJobDefinitions.DescribeJobDefinitions
instance Data.Hashable.Class.Hashable Network.AWS.Batch.DescribeJobDefinitions.DescribeJobDefinitions
instance Control.DeepSeq.NFData Network.AWS.Batch.DescribeJobDefinitions.DescribeJobDefinitions
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Batch.DescribeJobDefinitions.DescribeJobDefinitions
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Batch.DescribeJobDefinitions.DescribeJobDefinitions
instance Network.AWS.Data.Path.ToPath Network.AWS.Batch.DescribeJobDefinitions.DescribeJobDefinitions
instance Network.AWS.Data.Query.ToQuery Network.AWS.Batch.DescribeJobDefinitions.DescribeJobDefinitions


-- | Describes one or more of your compute environments.
--   
--   If you're using an unmanaged compute environment, you can use the
--   <tt>DescribeComputeEnvironment</tt> operation to determine the
--   <tt>ecsClusterArn</tt> that you should launch your Amazon ECS
--   container instances into.
--   
--   This operation returns paginated results.
module Network.AWS.Batch.DescribeComputeEnvironments

-- | Contains the parameters for <tt>DescribeComputeEnvironments</tt>.
--   
--   <i>See:</i> <a>newDescribeComputeEnvironments</a> smart constructor.
data DescribeComputeEnvironments
DescribeComputeEnvironments' :: Maybe [Text] -> Maybe Text -> Maybe Int -> DescribeComputeEnvironments

-- | A list of up to 100 compute environment names or full Amazon Resource
--   Name (ARN) entries.
[$sel:computeEnvironments:DescribeComputeEnvironments'] :: DescribeComputeEnvironments -> Maybe [Text]

-- | The <tt>nextToken</tt> value returned from a previous paginated
--   <tt>DescribeComputeEnvironments</tt> request where <tt>maxResults</tt>
--   was used and the results exceeded the value of that parameter.
--   Pagination continues from the end of the previous results that
--   returned the <tt>nextToken</tt> value. This value is <tt>null</tt>
--   when there are no more results to return.
--   
--   This token should be treated as an opaque identifier that's only used
--   to retrieve the next items in a list and not for other programmatic
--   purposes.
[$sel:nextToken:DescribeComputeEnvironments'] :: DescribeComputeEnvironments -> Maybe Text

-- | The maximum number of cluster results returned by
--   <tt>DescribeComputeEnvironments</tt> in paginated output. When this
--   parameter is used, <tt>DescribeComputeEnvironments</tt> only returns
--   <tt>maxResults</tt> results in a single page along with a
--   <tt>nextToken</tt> response element. The remaining results of the
--   initial request can be seen by sending another
--   <tt>DescribeComputeEnvironments</tt> request with the returned
--   <tt>nextToken</tt> value. This value can be between 1 and 100. If this
--   parameter isn't used, then <tt>DescribeComputeEnvironments</tt>
--   returns up to 100 results and a <tt>nextToken</tt> value if
--   applicable.
[$sel:maxResults:DescribeComputeEnvironments'] :: DescribeComputeEnvironments -> Maybe Int

-- | Create a value of <a>DescribeComputeEnvironments</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:computeEnvironments:DescribeComputeEnvironments'</a>,
--   <a>describeComputeEnvironments_computeEnvironments</a> - A list of up
--   to 100 compute environment names or full Amazon Resource Name (ARN)
--   entries.
--   
--   <a>$sel:nextToken:DescribeComputeEnvironments'</a>,
--   <a>describeComputeEnvironments_nextToken</a> - The <tt>nextToken</tt>
--   value returned from a previous paginated
--   <tt>DescribeComputeEnvironments</tt> request where <tt>maxResults</tt>
--   was used and the results exceeded the value of that parameter.
--   Pagination continues from the end of the previous results that
--   returned the <tt>nextToken</tt> value. This value is <tt>null</tt>
--   when there are no more results to return.
--   
--   This token should be treated as an opaque identifier that's only used
--   to retrieve the next items in a list and not for other programmatic
--   purposes.
--   
--   <a>$sel:maxResults:DescribeComputeEnvironments'</a>,
--   <a>describeComputeEnvironments_maxResults</a> - The maximum number of
--   cluster results returned by <tt>DescribeComputeEnvironments</tt> in
--   paginated output. When this parameter is used,
--   <tt>DescribeComputeEnvironments</tt> only returns <tt>maxResults</tt>
--   results in a single page along with a <tt>nextToken</tt> response
--   element. The remaining results of the initial request can be seen by
--   sending another <tt>DescribeComputeEnvironments</tt> request with the
--   returned <tt>nextToken</tt> value. This value can be between 1 and
--   100. If this parameter isn't used, then
--   <tt>DescribeComputeEnvironments</tt> returns up to 100 results and a
--   <tt>nextToken</tt> value if applicable.
newDescribeComputeEnvironments :: DescribeComputeEnvironments

-- | A list of up to 100 compute environment names or full Amazon Resource
--   Name (ARN) entries.
describeComputeEnvironments_computeEnvironments :: Lens' DescribeComputeEnvironments (Maybe [Text])

-- | The <tt>nextToken</tt> value returned from a previous paginated
--   <tt>DescribeComputeEnvironments</tt> request where <tt>maxResults</tt>
--   was used and the results exceeded the value of that parameter.
--   Pagination continues from the end of the previous results that
--   returned the <tt>nextToken</tt> value. This value is <tt>null</tt>
--   when there are no more results to return.
--   
--   This token should be treated as an opaque identifier that's only used
--   to retrieve the next items in a list and not for other programmatic
--   purposes.
describeComputeEnvironments_nextToken :: Lens' DescribeComputeEnvironments (Maybe Text)

-- | The maximum number of cluster results returned by
--   <tt>DescribeComputeEnvironments</tt> in paginated output. When this
--   parameter is used, <tt>DescribeComputeEnvironments</tt> only returns
--   <tt>maxResults</tt> results in a single page along with a
--   <tt>nextToken</tt> response element. The remaining results of the
--   initial request can be seen by sending another
--   <tt>DescribeComputeEnvironments</tt> request with the returned
--   <tt>nextToken</tt> value. This value can be between 1 and 100. If this
--   parameter isn't used, then <tt>DescribeComputeEnvironments</tt>
--   returns up to 100 results and a <tt>nextToken</tt> value if
--   applicable.
describeComputeEnvironments_maxResults :: Lens' DescribeComputeEnvironments (Maybe Int)

-- | <i>See:</i> <a>newDescribeComputeEnvironmentsResponse</a> smart
--   constructor.
data DescribeComputeEnvironmentsResponse
DescribeComputeEnvironmentsResponse' :: Maybe [ComputeEnvironmentDetail] -> Maybe Text -> Int -> DescribeComputeEnvironmentsResponse

-- | The list of compute environments.
[$sel:computeEnvironments:DescribeComputeEnvironmentsResponse'] :: DescribeComputeEnvironmentsResponse -> Maybe [ComputeEnvironmentDetail]

-- | The <tt>nextToken</tt> value to include in a future
--   <tt>DescribeComputeEnvironments</tt> request. When the results of a
--   <tt>DescribeJobDefinitions</tt> request exceed <tt>maxResults</tt>,
--   this value can be used to retrieve the next page of results. This
--   value is <tt>null</tt> when there are no more results to return.
[$sel:nextToken:DescribeComputeEnvironmentsResponse'] :: DescribeComputeEnvironmentsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:DescribeComputeEnvironmentsResponse'] :: DescribeComputeEnvironmentsResponse -> Int

-- | Create a value of <a>DescribeComputeEnvironmentsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:computeEnvironments:DescribeComputeEnvironments'</a>,
--   <a>describeComputeEnvironmentsResponse_computeEnvironments</a> - The
--   list of compute environments.
--   
--   <a>$sel:nextToken:DescribeComputeEnvironments'</a>,
--   <a>describeComputeEnvironmentsResponse_nextToken</a> - The
--   <tt>nextToken</tt> value to include in a future
--   <tt>DescribeComputeEnvironments</tt> request. When the results of a
--   <tt>DescribeJobDefinitions</tt> request exceed <tt>maxResults</tt>,
--   this value can be used to retrieve the next page of results. This
--   value is <tt>null</tt> when there are no more results to return.
--   
--   <a>$sel:httpStatus:DescribeComputeEnvironmentsResponse'</a>,
--   <a>describeComputeEnvironmentsResponse_httpStatus</a> - The response's
--   http status code.
newDescribeComputeEnvironmentsResponse :: Int -> DescribeComputeEnvironmentsResponse

-- | The list of compute environments.
describeComputeEnvironmentsResponse_computeEnvironments :: Lens' DescribeComputeEnvironmentsResponse (Maybe [ComputeEnvironmentDetail])

-- | The <tt>nextToken</tt> value to include in a future
--   <tt>DescribeComputeEnvironments</tt> request. When the results of a
--   <tt>DescribeJobDefinitions</tt> request exceed <tt>maxResults</tt>,
--   this value can be used to retrieve the next page of results. This
--   value is <tt>null</tt> when there are no more results to return.
describeComputeEnvironmentsResponse_nextToken :: Lens' DescribeComputeEnvironmentsResponse (Maybe Text)

-- | The response's http status code.
describeComputeEnvironmentsResponse_httpStatus :: Lens' DescribeComputeEnvironmentsResponse Int
instance GHC.Generics.Generic Network.AWS.Batch.DescribeComputeEnvironments.DescribeComputeEnvironments
instance GHC.Show.Show Network.AWS.Batch.DescribeComputeEnvironments.DescribeComputeEnvironments
instance GHC.Read.Read Network.AWS.Batch.DescribeComputeEnvironments.DescribeComputeEnvironments
instance GHC.Classes.Eq Network.AWS.Batch.DescribeComputeEnvironments.DescribeComputeEnvironments
instance GHC.Generics.Generic Network.AWS.Batch.DescribeComputeEnvironments.DescribeComputeEnvironmentsResponse
instance GHC.Show.Show Network.AWS.Batch.DescribeComputeEnvironments.DescribeComputeEnvironmentsResponse
instance GHC.Read.Read Network.AWS.Batch.DescribeComputeEnvironments.DescribeComputeEnvironmentsResponse
instance GHC.Classes.Eq Network.AWS.Batch.DescribeComputeEnvironments.DescribeComputeEnvironmentsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Batch.DescribeComputeEnvironments.DescribeComputeEnvironments
instance Control.DeepSeq.NFData Network.AWS.Batch.DescribeComputeEnvironments.DescribeComputeEnvironmentsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.Batch.DescribeComputeEnvironments.DescribeComputeEnvironments
instance Data.Hashable.Class.Hashable Network.AWS.Batch.DescribeComputeEnvironments.DescribeComputeEnvironments
instance Control.DeepSeq.NFData Network.AWS.Batch.DescribeComputeEnvironments.DescribeComputeEnvironments
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Batch.DescribeComputeEnvironments.DescribeComputeEnvironments
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Batch.DescribeComputeEnvironments.DescribeComputeEnvironments
instance Network.AWS.Data.Path.ToPath Network.AWS.Batch.DescribeComputeEnvironments.DescribeComputeEnvironments
instance Network.AWS.Data.Query.ToQuery Network.AWS.Batch.DescribeComputeEnvironments.DescribeComputeEnvironments


-- | Deregisters an Batch job definition. Job definitions are permanently
--   deleted after 180 days.
module Network.AWS.Batch.DeregisterJobDefinition

-- | <i>See:</i> <a>newDeregisterJobDefinition</a> smart constructor.
data DeregisterJobDefinition
DeregisterJobDefinition' :: Text -> DeregisterJobDefinition

-- | The name and revision (<tt>name:revision</tt>) or full Amazon Resource
--   Name (ARN) of the job definition to deregister.
[$sel:jobDefinition:DeregisterJobDefinition'] :: DeregisterJobDefinition -> Text

-- | Create a value of <a>DeregisterJobDefinition</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobDefinition:DeregisterJobDefinition'</a>,
--   <a>deregisterJobDefinition_jobDefinition</a> - The name and revision
--   (<tt>name:revision</tt>) or full Amazon Resource Name (ARN) of the job
--   definition to deregister.
newDeregisterJobDefinition :: Text -> DeregisterJobDefinition

-- | The name and revision (<tt>name:revision</tt>) or full Amazon Resource
--   Name (ARN) of the job definition to deregister.
deregisterJobDefinition_jobDefinition :: Lens' DeregisterJobDefinition Text

-- | <i>See:</i> <a>newDeregisterJobDefinitionResponse</a> smart
--   constructor.
data DeregisterJobDefinitionResponse
DeregisterJobDefinitionResponse' :: Int -> DeregisterJobDefinitionResponse

-- | The response's http status code.
[$sel:httpStatus:DeregisterJobDefinitionResponse'] :: DeregisterJobDefinitionResponse -> Int

-- | Create a value of <a>DeregisterJobDefinitionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeregisterJobDefinitionResponse'</a>,
--   <a>deregisterJobDefinitionResponse_httpStatus</a> - The response's
--   http status code.
newDeregisterJobDefinitionResponse :: Int -> DeregisterJobDefinitionResponse

-- | The response's http status code.
deregisterJobDefinitionResponse_httpStatus :: Lens' DeregisterJobDefinitionResponse Int
instance GHC.Generics.Generic Network.AWS.Batch.DeregisterJobDefinition.DeregisterJobDefinition
instance GHC.Show.Show Network.AWS.Batch.DeregisterJobDefinition.DeregisterJobDefinition
instance GHC.Read.Read Network.AWS.Batch.DeregisterJobDefinition.DeregisterJobDefinition
instance GHC.Classes.Eq Network.AWS.Batch.DeregisterJobDefinition.DeregisterJobDefinition
instance GHC.Generics.Generic Network.AWS.Batch.DeregisterJobDefinition.DeregisterJobDefinitionResponse
instance GHC.Show.Show Network.AWS.Batch.DeregisterJobDefinition.DeregisterJobDefinitionResponse
instance GHC.Read.Read Network.AWS.Batch.DeregisterJobDefinition.DeregisterJobDefinitionResponse
instance GHC.Classes.Eq Network.AWS.Batch.DeregisterJobDefinition.DeregisterJobDefinitionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Batch.DeregisterJobDefinition.DeregisterJobDefinition
instance Control.DeepSeq.NFData Network.AWS.Batch.DeregisterJobDefinition.DeregisterJobDefinitionResponse
instance Data.Hashable.Class.Hashable Network.AWS.Batch.DeregisterJobDefinition.DeregisterJobDefinition
instance Control.DeepSeq.NFData Network.AWS.Batch.DeregisterJobDefinition.DeregisterJobDefinition
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Batch.DeregisterJobDefinition.DeregisterJobDefinition
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Batch.DeregisterJobDefinition.DeregisterJobDefinition
instance Network.AWS.Data.Path.ToPath Network.AWS.Batch.DeregisterJobDefinition.DeregisterJobDefinition
instance Network.AWS.Data.Query.ToQuery Network.AWS.Batch.DeregisterJobDefinition.DeregisterJobDefinition


-- | Deletes the specified job queue. You must first disable submissions
--   for a queue with the UpdateJobQueue operation. All jobs in the queue
--   are eventually terminated when you delete a job queue. The jobs are
--   terminated at a rate of about 16 jobs each second.
--   
--   It's not necessary to disassociate compute environments from a queue
--   before submitting a <tt>DeleteJobQueue</tt> request.
module Network.AWS.Batch.DeleteJobQueue

-- | Contains the parameters for <tt>DeleteJobQueue</tt>.
--   
--   <i>See:</i> <a>newDeleteJobQueue</a> smart constructor.
data DeleteJobQueue
DeleteJobQueue' :: Text -> DeleteJobQueue

-- | The short name or full Amazon Resource Name (ARN) of the queue to
--   delete.
[$sel:jobQueue:DeleteJobQueue'] :: DeleteJobQueue -> Text

-- | Create a value of <a>DeleteJobQueue</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobQueue:DeleteJobQueue'</a>, <a>deleteJobQueue_jobQueue</a> -
--   The short name or full Amazon Resource Name (ARN) of the queue to
--   delete.
newDeleteJobQueue :: Text -> DeleteJobQueue

-- | The short name or full Amazon Resource Name (ARN) of the queue to
--   delete.
deleteJobQueue_jobQueue :: Lens' DeleteJobQueue Text

-- | <i>See:</i> <a>newDeleteJobQueueResponse</a> smart constructor.
data DeleteJobQueueResponse
DeleteJobQueueResponse' :: Int -> DeleteJobQueueResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteJobQueueResponse'] :: DeleteJobQueueResponse -> Int

-- | Create a value of <a>DeleteJobQueueResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteJobQueueResponse'</a>,
--   <a>deleteJobQueueResponse_httpStatus</a> - The response's http status
--   code.
newDeleteJobQueueResponse :: Int -> DeleteJobQueueResponse

-- | The response's http status code.
deleteJobQueueResponse_httpStatus :: Lens' DeleteJobQueueResponse Int
instance GHC.Generics.Generic Network.AWS.Batch.DeleteJobQueue.DeleteJobQueue
instance GHC.Show.Show Network.AWS.Batch.DeleteJobQueue.DeleteJobQueue
instance GHC.Read.Read Network.AWS.Batch.DeleteJobQueue.DeleteJobQueue
instance GHC.Classes.Eq Network.AWS.Batch.DeleteJobQueue.DeleteJobQueue
instance GHC.Generics.Generic Network.AWS.Batch.DeleteJobQueue.DeleteJobQueueResponse
instance GHC.Show.Show Network.AWS.Batch.DeleteJobQueue.DeleteJobQueueResponse
instance GHC.Read.Read Network.AWS.Batch.DeleteJobQueue.DeleteJobQueueResponse
instance GHC.Classes.Eq Network.AWS.Batch.DeleteJobQueue.DeleteJobQueueResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Batch.DeleteJobQueue.DeleteJobQueue
instance Control.DeepSeq.NFData Network.AWS.Batch.DeleteJobQueue.DeleteJobQueueResponse
instance Data.Hashable.Class.Hashable Network.AWS.Batch.DeleteJobQueue.DeleteJobQueue
instance Control.DeepSeq.NFData Network.AWS.Batch.DeleteJobQueue.DeleteJobQueue
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Batch.DeleteJobQueue.DeleteJobQueue
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Batch.DeleteJobQueue.DeleteJobQueue
instance Network.AWS.Data.Path.ToPath Network.AWS.Batch.DeleteJobQueue.DeleteJobQueue
instance Network.AWS.Data.Query.ToQuery Network.AWS.Batch.DeleteJobQueue.DeleteJobQueue


-- | Deletes an Batch compute environment.
--   
--   Before you can delete a compute environment, you must set its state to
--   <tt>DISABLED</tt> with the UpdateComputeEnvironment API operation and
--   disassociate it from any job queues with the UpdateJobQueue API
--   operation. Compute environments that use Fargate resources must
--   terminate all active jobs on that compute environment before deleting
--   the compute environment. If this isn't done, the compute environment
--   enters an invalid state.
module Network.AWS.Batch.DeleteComputeEnvironment

-- | Contains the parameters for <tt>DeleteComputeEnvironment</tt>.
--   
--   <i>See:</i> <a>newDeleteComputeEnvironment</a> smart constructor.
data DeleteComputeEnvironment
DeleteComputeEnvironment' :: Text -> DeleteComputeEnvironment

-- | The name or Amazon Resource Name (ARN) of the compute environment to
--   delete.
[$sel:computeEnvironment:DeleteComputeEnvironment'] :: DeleteComputeEnvironment -> Text

-- | Create a value of <a>DeleteComputeEnvironment</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:computeEnvironment:DeleteComputeEnvironment'</a>,
--   <a>deleteComputeEnvironment_computeEnvironment</a> - The name or
--   Amazon Resource Name (ARN) of the compute environment to delete.
newDeleteComputeEnvironment :: Text -> DeleteComputeEnvironment

-- | The name or Amazon Resource Name (ARN) of the compute environment to
--   delete.
deleteComputeEnvironment_computeEnvironment :: Lens' DeleteComputeEnvironment Text

-- | <i>See:</i> <a>newDeleteComputeEnvironmentResponse</a> smart
--   constructor.
data DeleteComputeEnvironmentResponse
DeleteComputeEnvironmentResponse' :: Int -> DeleteComputeEnvironmentResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteComputeEnvironmentResponse'] :: DeleteComputeEnvironmentResponse -> Int

-- | Create a value of <a>DeleteComputeEnvironmentResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteComputeEnvironmentResponse'</a>,
--   <a>deleteComputeEnvironmentResponse_httpStatus</a> - The response's
--   http status code.
newDeleteComputeEnvironmentResponse :: Int -> DeleteComputeEnvironmentResponse

-- | The response's http status code.
deleteComputeEnvironmentResponse_httpStatus :: Lens' DeleteComputeEnvironmentResponse Int
instance GHC.Generics.Generic Network.AWS.Batch.DeleteComputeEnvironment.DeleteComputeEnvironment
instance GHC.Show.Show Network.AWS.Batch.DeleteComputeEnvironment.DeleteComputeEnvironment
instance GHC.Read.Read Network.AWS.Batch.DeleteComputeEnvironment.DeleteComputeEnvironment
instance GHC.Classes.Eq Network.AWS.Batch.DeleteComputeEnvironment.DeleteComputeEnvironment
instance GHC.Generics.Generic Network.AWS.Batch.DeleteComputeEnvironment.DeleteComputeEnvironmentResponse
instance GHC.Show.Show Network.AWS.Batch.DeleteComputeEnvironment.DeleteComputeEnvironmentResponse
instance GHC.Read.Read Network.AWS.Batch.DeleteComputeEnvironment.DeleteComputeEnvironmentResponse
instance GHC.Classes.Eq Network.AWS.Batch.DeleteComputeEnvironment.DeleteComputeEnvironmentResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Batch.DeleteComputeEnvironment.DeleteComputeEnvironment
instance Control.DeepSeq.NFData Network.AWS.Batch.DeleteComputeEnvironment.DeleteComputeEnvironmentResponse
instance Data.Hashable.Class.Hashable Network.AWS.Batch.DeleteComputeEnvironment.DeleteComputeEnvironment
instance Control.DeepSeq.NFData Network.AWS.Batch.DeleteComputeEnvironment.DeleteComputeEnvironment
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Batch.DeleteComputeEnvironment.DeleteComputeEnvironment
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Batch.DeleteComputeEnvironment.DeleteComputeEnvironment
instance Network.AWS.Data.Path.ToPath Network.AWS.Batch.DeleteComputeEnvironment.DeleteComputeEnvironment
instance Network.AWS.Data.Query.ToQuery Network.AWS.Batch.DeleteComputeEnvironment.DeleteComputeEnvironment


-- | Creates an Batch job queue. When you create a job queue, you associate
--   one or more compute environments to the queue and assign an order of
--   preference for the compute environments.
--   
--   You also set a priority to the job queue that determines the order
--   that the Batch scheduler places jobs onto its associated compute
--   environments. For example, if a compute environment is associated with
--   more than one job queue, the job queue with a higher priority is given
--   preference for scheduling jobs to that compute environment.
module Network.AWS.Batch.CreateJobQueue

-- | Contains the parameters for <tt>CreateJobQueue</tt>.
--   
--   <i>See:</i> <a>newCreateJobQueue</a> smart constructor.
data CreateJobQueue
CreateJobQueue' :: Maybe JQState -> Maybe (HashMap Text Text) -> Text -> Int -> [ComputeEnvironmentOrder] -> CreateJobQueue

-- | The state of the job queue. If the job queue state is
--   <tt>ENABLED</tt>, it is able to accept jobs. If the job queue state is
--   <tt>DISABLED</tt>, new jobs can't be added to the queue, but jobs
--   already in the queue can finish.
[$sel:state:CreateJobQueue'] :: CreateJobQueue -> Maybe JQState

-- | The tags that you apply to the job queue to help you categorize and
--   organize your resources. Each tag consists of a key and an optional
--   value. For more information, see <a>Tagging your Batch resources</a>
--   in <i>Batch User Guide</i>.
[$sel:tags:CreateJobQueue'] :: CreateJobQueue -> Maybe (HashMap Text Text)

-- | The name of the job queue. Up to 128 letters (uppercase and
--   lowercase), numbers, and underscores are allowed.
[$sel:jobQueueName:CreateJobQueue'] :: CreateJobQueue -> Text

-- | The priority of the job queue. Job queues with a higher priority (or a
--   higher integer value for the <tt>priority</tt> parameter) are
--   evaluated first when associated with the same compute environment.
--   Priority is determined in descending order. For example, a job queue
--   with a priority value of <tt>10</tt> is given scheduling preference
--   over a job queue with a priority value of <tt>1</tt>. All of the
--   compute environments must be either EC2 (<tt>EC2</tt> or
--   <tt>SPOT</tt>) or Fargate (<tt>FARGATE</tt> or <tt>FARGATE_SPOT</tt>);
--   EC2 and Fargate compute environments can't be mixed.
[$sel:priority:CreateJobQueue'] :: CreateJobQueue -> Int

-- | The set of compute environments mapped to a job queue and their order
--   relative to each other. The job scheduler uses this parameter to
--   determine which compute environment should run a specific job. Compute
--   environments must be in the <tt>VALID</tt> state before you can
--   associate them with a job queue. You can associate up to three compute
--   environments with a job queue. All of the compute environments must be
--   either EC2 (<tt>EC2</tt> or <tt>SPOT</tt>) or Fargate
--   (<tt>FARGATE</tt> or <tt>FARGATE_SPOT</tt>); EC2 and Fargate compute
--   environments can't be mixed.
--   
--   All compute environments that are associated with a job queue must
--   share the same architecture. Batch doesn't support mixing compute
--   environment architecture types in a single job queue.
[$sel:computeEnvironmentOrder:CreateJobQueue'] :: CreateJobQueue -> [ComputeEnvironmentOrder]

-- | Create a value of <a>CreateJobQueue</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:state:CreateJobQueue'</a>, <a>createJobQueue_state</a> - The
--   state of the job queue. If the job queue state is <tt>ENABLED</tt>, it
--   is able to accept jobs. If the job queue state is <tt>DISABLED</tt>,
--   new jobs can't be added to the queue, but jobs already in the queue
--   can finish.
--   
--   <a>$sel:tags:CreateJobQueue'</a>, <a>createJobQueue_tags</a> - The
--   tags that you apply to the job queue to help you categorize and
--   organize your resources. Each tag consists of a key and an optional
--   value. For more information, see <a>Tagging your Batch resources</a>
--   in <i>Batch User Guide</i>.
--   
--   <a>$sel:jobQueueName:CreateJobQueue'</a>,
--   <a>createJobQueue_jobQueueName</a> - The name of the job queue. Up to
--   128 letters (uppercase and lowercase), numbers, and underscores are
--   allowed.
--   
--   <a>$sel:priority:CreateJobQueue'</a>, <a>createJobQueue_priority</a> -
--   The priority of the job queue. Job queues with a higher priority (or a
--   higher integer value for the <tt>priority</tt> parameter) are
--   evaluated first when associated with the same compute environment.
--   Priority is determined in descending order. For example, a job queue
--   with a priority value of <tt>10</tt> is given scheduling preference
--   over a job queue with a priority value of <tt>1</tt>. All of the
--   compute environments must be either EC2 (<tt>EC2</tt> or
--   <tt>SPOT</tt>) or Fargate (<tt>FARGATE</tt> or <tt>FARGATE_SPOT</tt>);
--   EC2 and Fargate compute environments can't be mixed.
--   
--   <a>$sel:computeEnvironmentOrder:CreateJobQueue'</a>,
--   <a>createJobQueue_computeEnvironmentOrder</a> - The set of compute
--   environments mapped to a job queue and their order relative to each
--   other. The job scheduler uses this parameter to determine which
--   compute environment should run a specific job. Compute environments
--   must be in the <tt>VALID</tt> state before you can associate them with
--   a job queue. You can associate up to three compute environments with a
--   job queue. All of the compute environments must be either EC2
--   (<tt>EC2</tt> or <tt>SPOT</tt>) or Fargate (<tt>FARGATE</tt> or
--   <tt>FARGATE_SPOT</tt>); EC2 and Fargate compute environments can't be
--   mixed.
--   
--   All compute environments that are associated with a job queue must
--   share the same architecture. Batch doesn't support mixing compute
--   environment architecture types in a single job queue.
newCreateJobQueue :: Text -> Int -> CreateJobQueue

-- | The state of the job queue. If the job queue state is
--   <tt>ENABLED</tt>, it is able to accept jobs. If the job queue state is
--   <tt>DISABLED</tt>, new jobs can't be added to the queue, but jobs
--   already in the queue can finish.
createJobQueue_state :: Lens' CreateJobQueue (Maybe JQState)

-- | The tags that you apply to the job queue to help you categorize and
--   organize your resources. Each tag consists of a key and an optional
--   value. For more information, see <a>Tagging your Batch resources</a>
--   in <i>Batch User Guide</i>.
createJobQueue_tags :: Lens' CreateJobQueue (Maybe (HashMap Text Text))

-- | The name of the job queue. Up to 128 letters (uppercase and
--   lowercase), numbers, and underscores are allowed.
createJobQueue_jobQueueName :: Lens' CreateJobQueue Text

-- | The priority of the job queue. Job queues with a higher priority (or a
--   higher integer value for the <tt>priority</tt> parameter) are
--   evaluated first when associated with the same compute environment.
--   Priority is determined in descending order. For example, a job queue
--   with a priority value of <tt>10</tt> is given scheduling preference
--   over a job queue with a priority value of <tt>1</tt>. All of the
--   compute environments must be either EC2 (<tt>EC2</tt> or
--   <tt>SPOT</tt>) or Fargate (<tt>FARGATE</tt> or <tt>FARGATE_SPOT</tt>);
--   EC2 and Fargate compute environments can't be mixed.
createJobQueue_priority :: Lens' CreateJobQueue Int

-- | The set of compute environments mapped to a job queue and their order
--   relative to each other. The job scheduler uses this parameter to
--   determine which compute environment should run a specific job. Compute
--   environments must be in the <tt>VALID</tt> state before you can
--   associate them with a job queue. You can associate up to three compute
--   environments with a job queue. All of the compute environments must be
--   either EC2 (<tt>EC2</tt> or <tt>SPOT</tt>) or Fargate
--   (<tt>FARGATE</tt> or <tt>FARGATE_SPOT</tt>); EC2 and Fargate compute
--   environments can't be mixed.
--   
--   All compute environments that are associated with a job queue must
--   share the same architecture. Batch doesn't support mixing compute
--   environment architecture types in a single job queue.
createJobQueue_computeEnvironmentOrder :: Lens' CreateJobQueue [ComputeEnvironmentOrder]

-- | <i>See:</i> <a>newCreateJobQueueResponse</a> smart constructor.
data CreateJobQueueResponse
CreateJobQueueResponse' :: Int -> Text -> Text -> CreateJobQueueResponse

-- | The response's http status code.
[$sel:httpStatus:CreateJobQueueResponse'] :: CreateJobQueueResponse -> Int

-- | The name of the job queue.
[$sel:jobQueueName:CreateJobQueueResponse'] :: CreateJobQueueResponse -> Text

-- | The Amazon Resource Name (ARN) of the job queue.
[$sel:jobQueueArn:CreateJobQueueResponse'] :: CreateJobQueueResponse -> Text

-- | Create a value of <a>CreateJobQueueResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreateJobQueueResponse'</a>,
--   <a>createJobQueueResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:jobQueueName:CreateJobQueue'</a>,
--   <a>createJobQueueResponse_jobQueueName</a> - The name of the job
--   queue.
--   
--   <a>$sel:jobQueueArn:CreateJobQueueResponse'</a>,
--   <a>createJobQueueResponse_jobQueueArn</a> - The Amazon Resource Name
--   (ARN) of the job queue.
newCreateJobQueueResponse :: Int -> Text -> Text -> CreateJobQueueResponse

-- | The response's http status code.
createJobQueueResponse_httpStatus :: Lens' CreateJobQueueResponse Int

-- | The name of the job queue.
createJobQueueResponse_jobQueueName :: Lens' CreateJobQueueResponse Text

-- | The Amazon Resource Name (ARN) of the job queue.
createJobQueueResponse_jobQueueArn :: Lens' CreateJobQueueResponse Text
instance GHC.Generics.Generic Network.AWS.Batch.CreateJobQueue.CreateJobQueue
instance GHC.Show.Show Network.AWS.Batch.CreateJobQueue.CreateJobQueue
instance GHC.Read.Read Network.AWS.Batch.CreateJobQueue.CreateJobQueue
instance GHC.Classes.Eq Network.AWS.Batch.CreateJobQueue.CreateJobQueue
instance GHC.Generics.Generic Network.AWS.Batch.CreateJobQueue.CreateJobQueueResponse
instance GHC.Show.Show Network.AWS.Batch.CreateJobQueue.CreateJobQueueResponse
instance GHC.Read.Read Network.AWS.Batch.CreateJobQueue.CreateJobQueueResponse
instance GHC.Classes.Eq Network.AWS.Batch.CreateJobQueue.CreateJobQueueResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Batch.CreateJobQueue.CreateJobQueue
instance Control.DeepSeq.NFData Network.AWS.Batch.CreateJobQueue.CreateJobQueueResponse
instance Data.Hashable.Class.Hashable Network.AWS.Batch.CreateJobQueue.CreateJobQueue
instance Control.DeepSeq.NFData Network.AWS.Batch.CreateJobQueue.CreateJobQueue
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Batch.CreateJobQueue.CreateJobQueue
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Batch.CreateJobQueue.CreateJobQueue
instance Network.AWS.Data.Path.ToPath Network.AWS.Batch.CreateJobQueue.CreateJobQueue
instance Network.AWS.Data.Query.ToQuery Network.AWS.Batch.CreateJobQueue.CreateJobQueue


-- | Creates an Batch compute environment. You can create <tt>MANAGED</tt>
--   or <tt>UNMANAGED</tt> compute environments. <tt>MANAGED</tt> compute
--   environments can use Amazon EC2 or Fargate resources.
--   <tt>UNMANAGED</tt> compute environments can only use EC2 resources.
--   
--   In a managed compute environment, Batch manages the capacity and
--   instance types of the compute resources within the environment. This
--   is based on the compute resource specification that you define or the
--   <a>launch template</a> that you specify when you create the compute
--   environment. Either, you can choose to use EC2 On-Demand Instances and
--   EC2 Spot Instances. Or, you can use Fargate and Fargate Spot capacity
--   in your managed compute environment. You can optionally set a maximum
--   price so that Spot Instances only launch when the Spot Instance price
--   is less than a specified percentage of the On-Demand price.
--   
--   Multi-node parallel jobs aren't supported on Spot Instances.
--   
--   In an unmanaged compute environment, you can manage your own EC2
--   compute resources and have a lot of flexibility with how you configure
--   your compute resources. For example, you can use custom AMIs. However,
--   you must verify that each of your AMIs meet the Amazon ECS container
--   instance AMI specification. For more information, see <a>container
--   instance AMIs</a> in the <i>Amazon Elastic Container Service Developer
--   Guide</i>. After you created your unmanaged compute environment, you
--   can use the DescribeComputeEnvironments operation to find the Amazon
--   ECS cluster that's associated with it. Then, launch your container
--   instances into that Amazon ECS cluster. For more information, see
--   <a>Launching an Amazon ECS container instance</a> in the <i>Amazon
--   Elastic Container Service Developer Guide</i>.
--   
--   Batch doesn't upgrade the AMIs in a compute environment after the
--   environment is created. For example, it doesn't update the AMIs when a
--   newer version of the Amazon ECS optimized AMI is available. Therefore,
--   you're responsible for managing the guest operating system (including
--   its updates and security patches) and any additional application
--   software or utilities that you install on the compute resources. To
--   use a new AMI for your Batch jobs, complete these steps:
--   
--   <ol>
--   <li>Create a new compute environment with the new AMI.</li>
--   <li>Add the compute environment to an existing job queue.</li>
--   <li>Remove the earlier compute environment from your job queue.</li>
--   <li>Delete the earlier compute environment.</li>
--   </ol>
module Network.AWS.Batch.CreateComputeEnvironment

-- | Contains the parameters for <tt>CreateComputeEnvironment</tt>.
--   
--   <i>See:</i> <a>newCreateComputeEnvironment</a> smart constructor.
data CreateComputeEnvironment
CreateComputeEnvironment' :: Maybe CEState -> Maybe ComputeResource -> Maybe Text -> Maybe (HashMap Text Text) -> Text -> CEType -> CreateComputeEnvironment

-- | The state of the compute environment. If the state is
--   <tt>ENABLED</tt>, then the compute environment accepts jobs from a
--   queue and can scale out automatically based on queues.
--   
--   If the state is <tt>ENABLED</tt>, then the Batch scheduler can attempt
--   to place jobs from an associated job queue on the compute resources
--   within the environment. If the compute environment is managed, then it
--   can scale its instances out or in automatically, based on the job
--   queue demand.
--   
--   If the state is <tt>DISABLED</tt>, then the Batch scheduler doesn't
--   attempt to place jobs within the environment. Jobs in a
--   <tt>STARTING</tt> or <tt>RUNNING</tt> state continue to progress
--   normally. Managed compute environments in the <tt>DISABLED</tt> state
--   don't scale out. However, they scale in to <tt>minvCpus</tt> value
--   after instances become idle.
[$sel:state:CreateComputeEnvironment'] :: CreateComputeEnvironment -> Maybe CEState

-- | Details about the compute resources managed by the compute
--   environment. This parameter is required for managed compute
--   environments. For more information, see <a>Compute Environments</a> in
--   the <i>Batch User Guide</i>.
[$sel:computeResources:CreateComputeEnvironment'] :: CreateComputeEnvironment -> Maybe ComputeResource

-- | The full Amazon Resource Name (ARN) of the IAM role that allows Batch
--   to make calls to other Amazon Web Services services on your behalf.
--   For more information, see <a>Batch service IAM role</a> in the
--   <i>Batch User Guide</i>.
--   
--   If your account already created the Batch service-linked role, that
--   role is used by default for your compute environment unless you
--   specify a different role here. If the Batch service-linked role
--   doesn't exist in your account, and no role is specified here, the
--   service attempts to create the Batch service-linked role in your
--   account.
--   
--   If your specified role has a path other than <tt>/</tt>, then you must
--   specify either the full role ARN (recommended) or prefix the role name
--   with the path. For example, if a role with the name <tt>bar</tt> has a
--   path of <tt>/foo/</tt> then you would specify <tt>/foo/bar</tt> as the
--   role name. For more information, see <a>Friendly names and paths</a>
--   in the <i>IAM User Guide</i>.
--   
--   Depending on how you created your Batch service role, its ARN might
--   contain the <tt>service-role</tt> path prefix. When you only specify
--   the name of the service role, Batch assumes that your ARN doesn't use
--   the <tt>service-role</tt> path prefix. Because of this, we recommend
--   that you specify the full ARN of your service role when you create
--   compute environments.
[$sel:serviceRole:CreateComputeEnvironment'] :: CreateComputeEnvironment -> Maybe Text

-- | The tags that you apply to the compute environment to help you
--   categorize and organize your resources. Each tag consists of a key and
--   an optional value. For more information, see <a>Tagging Amazon Web
--   Services Resources</a> in <i>Amazon Web Services General
--   Reference</i>.
--   
--   These tags can be updated or removed using the <a>TagResource</a> and
--   <a>UntagResource</a> API operations. These tags don't propagate to the
--   underlying compute resources.
[$sel:tags:CreateComputeEnvironment'] :: CreateComputeEnvironment -> Maybe (HashMap Text Text)

-- | The name for your compute environment. Up to 128 letters (uppercase
--   and lowercase), numbers, hyphens, and underscores are allowed.
[$sel:computeEnvironmentName:CreateComputeEnvironment'] :: CreateComputeEnvironment -> Text

-- | The type of the compute environment: <tt>MANAGED</tt> or
--   <tt>UNMANAGED</tt>. For more information, see <a>Compute
--   Environments</a> in the <i>Batch User Guide</i>.
[$sel:type':CreateComputeEnvironment'] :: CreateComputeEnvironment -> CEType

-- | Create a value of <a>CreateComputeEnvironment</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:state:CreateComputeEnvironment'</a>,
--   <a>createComputeEnvironment_state</a> - The state of the compute
--   environment. If the state is <tt>ENABLED</tt>, then the compute
--   environment accepts jobs from a queue and can scale out automatically
--   based on queues.
--   
--   If the state is <tt>ENABLED</tt>, then the Batch scheduler can attempt
--   to place jobs from an associated job queue on the compute resources
--   within the environment. If the compute environment is managed, then it
--   can scale its instances out or in automatically, based on the job
--   queue demand.
--   
--   If the state is <tt>DISABLED</tt>, then the Batch scheduler doesn't
--   attempt to place jobs within the environment. Jobs in a
--   <tt>STARTING</tt> or <tt>RUNNING</tt> state continue to progress
--   normally. Managed compute environments in the <tt>DISABLED</tt> state
--   don't scale out. However, they scale in to <tt>minvCpus</tt> value
--   after instances become idle.
--   
--   <a>$sel:computeResources:CreateComputeEnvironment'</a>,
--   <a>createComputeEnvironment_computeResources</a> - Details about the
--   compute resources managed by the compute environment. This parameter
--   is required for managed compute environments. For more information,
--   see <a>Compute Environments</a> in the <i>Batch User Guide</i>.
--   
--   <a>$sel:serviceRole:CreateComputeEnvironment'</a>,
--   <a>createComputeEnvironment_serviceRole</a> - The full Amazon Resource
--   Name (ARN) of the IAM role that allows Batch to make calls to other
--   Amazon Web Services services on your behalf. For more information, see
--   <a>Batch service IAM role</a> in the <i>Batch User Guide</i>.
--   
--   If your account already created the Batch service-linked role, that
--   role is used by default for your compute environment unless you
--   specify a different role here. If the Batch service-linked role
--   doesn't exist in your account, and no role is specified here, the
--   service attempts to create the Batch service-linked role in your
--   account.
--   
--   If your specified role has a path other than <tt>/</tt>, then you must
--   specify either the full role ARN (recommended) or prefix the role name
--   with the path. For example, if a role with the name <tt>bar</tt> has a
--   path of <tt>/foo/</tt> then you would specify <tt>/foo/bar</tt> as the
--   role name. For more information, see <a>Friendly names and paths</a>
--   in the <i>IAM User Guide</i>.
--   
--   Depending on how you created your Batch service role, its ARN might
--   contain the <tt>service-role</tt> path prefix. When you only specify
--   the name of the service role, Batch assumes that your ARN doesn't use
--   the <tt>service-role</tt> path prefix. Because of this, we recommend
--   that you specify the full ARN of your service role when you create
--   compute environments.
--   
--   <a>$sel:tags:CreateComputeEnvironment'</a>,
--   <a>createComputeEnvironment_tags</a> - The tags that you apply to the
--   compute environment to help you categorize and organize your
--   resources. Each tag consists of a key and an optional value. For more
--   information, see <a>Tagging Amazon Web Services Resources</a> in
--   <i>Amazon Web Services General Reference</i>.
--   
--   These tags can be updated or removed using the <a>TagResource</a> and
--   <a>UntagResource</a> API operations. These tags don't propagate to the
--   underlying compute resources.
--   
--   <a>$sel:computeEnvironmentName:CreateComputeEnvironment'</a>,
--   <a>createComputeEnvironment_computeEnvironmentName</a> - The name for
--   your compute environment. Up to 128 letters (uppercase and lowercase),
--   numbers, hyphens, and underscores are allowed.
--   
--   <a>$sel:type':CreateComputeEnvironment'</a>,
--   <a>createComputeEnvironment_type</a> - The type of the compute
--   environment: <tt>MANAGED</tt> or <tt>UNMANAGED</tt>. For more
--   information, see <a>Compute Environments</a> in the <i>Batch User
--   Guide</i>.
newCreateComputeEnvironment :: Text -> CEType -> CreateComputeEnvironment

-- | The state of the compute environment. If the state is
--   <tt>ENABLED</tt>, then the compute environment accepts jobs from a
--   queue and can scale out automatically based on queues.
--   
--   If the state is <tt>ENABLED</tt>, then the Batch scheduler can attempt
--   to place jobs from an associated job queue on the compute resources
--   within the environment. If the compute environment is managed, then it
--   can scale its instances out or in automatically, based on the job
--   queue demand.
--   
--   If the state is <tt>DISABLED</tt>, then the Batch scheduler doesn't
--   attempt to place jobs within the environment. Jobs in a
--   <tt>STARTING</tt> or <tt>RUNNING</tt> state continue to progress
--   normally. Managed compute environments in the <tt>DISABLED</tt> state
--   don't scale out. However, they scale in to <tt>minvCpus</tt> value
--   after instances become idle.
createComputeEnvironment_state :: Lens' CreateComputeEnvironment (Maybe CEState)

-- | Details about the compute resources managed by the compute
--   environment. This parameter is required for managed compute
--   environments. For more information, see <a>Compute Environments</a> in
--   the <i>Batch User Guide</i>.
createComputeEnvironment_computeResources :: Lens' CreateComputeEnvironment (Maybe ComputeResource)

-- | The full Amazon Resource Name (ARN) of the IAM role that allows Batch
--   to make calls to other Amazon Web Services services on your behalf.
--   For more information, see <a>Batch service IAM role</a> in the
--   <i>Batch User Guide</i>.
--   
--   If your account already created the Batch service-linked role, that
--   role is used by default for your compute environment unless you
--   specify a different role here. If the Batch service-linked role
--   doesn't exist in your account, and no role is specified here, the
--   service attempts to create the Batch service-linked role in your
--   account.
--   
--   If your specified role has a path other than <tt>/</tt>, then you must
--   specify either the full role ARN (recommended) or prefix the role name
--   with the path. For example, if a role with the name <tt>bar</tt> has a
--   path of <tt>/foo/</tt> then you would specify <tt>/foo/bar</tt> as the
--   role name. For more information, see <a>Friendly names and paths</a>
--   in the <i>IAM User Guide</i>.
--   
--   Depending on how you created your Batch service role, its ARN might
--   contain the <tt>service-role</tt> path prefix. When you only specify
--   the name of the service role, Batch assumes that your ARN doesn't use
--   the <tt>service-role</tt> path prefix. Because of this, we recommend
--   that you specify the full ARN of your service role when you create
--   compute environments.
createComputeEnvironment_serviceRole :: Lens' CreateComputeEnvironment (Maybe Text)

-- | The tags that you apply to the compute environment to help you
--   categorize and organize your resources. Each tag consists of a key and
--   an optional value. For more information, see <a>Tagging Amazon Web
--   Services Resources</a> in <i>Amazon Web Services General
--   Reference</i>.
--   
--   These tags can be updated or removed using the <a>TagResource</a> and
--   <a>UntagResource</a> API operations. These tags don't propagate to the
--   underlying compute resources.
createComputeEnvironment_tags :: Lens' CreateComputeEnvironment (Maybe (HashMap Text Text))

-- | The name for your compute environment. Up to 128 letters (uppercase
--   and lowercase), numbers, hyphens, and underscores are allowed.
createComputeEnvironment_computeEnvironmentName :: Lens' CreateComputeEnvironment Text

-- | The type of the compute environment: <tt>MANAGED</tt> or
--   <tt>UNMANAGED</tt>. For more information, see <a>Compute
--   Environments</a> in the <i>Batch User Guide</i>.
createComputeEnvironment_type :: Lens' CreateComputeEnvironment CEType

-- | <i>See:</i> <a>newCreateComputeEnvironmentResponse</a> smart
--   constructor.
data CreateComputeEnvironmentResponse
CreateComputeEnvironmentResponse' :: Maybe Text -> Maybe Text -> Int -> CreateComputeEnvironmentResponse

-- | The name of the compute environment. Up to 128 letters (uppercase and
--   lowercase), numbers, hyphens, and underscores are allowed.
[$sel:computeEnvironmentName:CreateComputeEnvironmentResponse'] :: CreateComputeEnvironmentResponse -> Maybe Text

-- | The Amazon Resource Name (ARN) of the compute environment.
[$sel:computeEnvironmentArn:CreateComputeEnvironmentResponse'] :: CreateComputeEnvironmentResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:CreateComputeEnvironmentResponse'] :: CreateComputeEnvironmentResponse -> Int

-- | Create a value of <a>CreateComputeEnvironmentResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:computeEnvironmentName:CreateComputeEnvironment'</a>,
--   <a>createComputeEnvironmentResponse_computeEnvironmentName</a> - The
--   name of the compute environment. Up to 128 letters (uppercase and
--   lowercase), numbers, hyphens, and underscores are allowed.
--   
--   <a>$sel:computeEnvironmentArn:CreateComputeEnvironmentResponse'</a>,
--   <a>createComputeEnvironmentResponse_computeEnvironmentArn</a> - The
--   Amazon Resource Name (ARN) of the compute environment.
--   
--   <a>$sel:httpStatus:CreateComputeEnvironmentResponse'</a>,
--   <a>createComputeEnvironmentResponse_httpStatus</a> - The response's
--   http status code.
newCreateComputeEnvironmentResponse :: Int -> CreateComputeEnvironmentResponse

-- | The name of the compute environment. Up to 128 letters (uppercase and
--   lowercase), numbers, hyphens, and underscores are allowed.
createComputeEnvironmentResponse_computeEnvironmentName :: Lens' CreateComputeEnvironmentResponse (Maybe Text)

-- | The Amazon Resource Name (ARN) of the compute environment.
createComputeEnvironmentResponse_computeEnvironmentArn :: Lens' CreateComputeEnvironmentResponse (Maybe Text)

-- | The response's http status code.
createComputeEnvironmentResponse_httpStatus :: Lens' CreateComputeEnvironmentResponse Int
instance GHC.Generics.Generic Network.AWS.Batch.CreateComputeEnvironment.CreateComputeEnvironment
instance GHC.Show.Show Network.AWS.Batch.CreateComputeEnvironment.CreateComputeEnvironment
instance GHC.Read.Read Network.AWS.Batch.CreateComputeEnvironment.CreateComputeEnvironment
instance GHC.Classes.Eq Network.AWS.Batch.CreateComputeEnvironment.CreateComputeEnvironment
instance GHC.Generics.Generic Network.AWS.Batch.CreateComputeEnvironment.CreateComputeEnvironmentResponse
instance GHC.Show.Show Network.AWS.Batch.CreateComputeEnvironment.CreateComputeEnvironmentResponse
instance GHC.Read.Read Network.AWS.Batch.CreateComputeEnvironment.CreateComputeEnvironmentResponse
instance GHC.Classes.Eq Network.AWS.Batch.CreateComputeEnvironment.CreateComputeEnvironmentResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Batch.CreateComputeEnvironment.CreateComputeEnvironment
instance Control.DeepSeq.NFData Network.AWS.Batch.CreateComputeEnvironment.CreateComputeEnvironmentResponse
instance Data.Hashable.Class.Hashable Network.AWS.Batch.CreateComputeEnvironment.CreateComputeEnvironment
instance Control.DeepSeq.NFData Network.AWS.Batch.CreateComputeEnvironment.CreateComputeEnvironment
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Batch.CreateComputeEnvironment.CreateComputeEnvironment
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Batch.CreateComputeEnvironment.CreateComputeEnvironment
instance Network.AWS.Data.Path.ToPath Network.AWS.Batch.CreateComputeEnvironment.CreateComputeEnvironment
instance Network.AWS.Data.Query.ToQuery Network.AWS.Batch.CreateComputeEnvironment.CreateComputeEnvironment


-- | Cancels a job in an Batch job queue. Jobs that are in the
--   <tt>SUBMITTED</tt>, <tt>PENDING</tt>, or <tt>RUNNABLE</tt> state are
--   canceled. Jobs that have progressed to <tt>STARTING</tt> or
--   <tt>RUNNING</tt> aren't canceled, but the API operation still
--   succeeds, even if no job is canceled. These jobs must be terminated
--   with the TerminateJob operation.
module Network.AWS.Batch.CancelJob

-- | Contains the parameters for <tt>CancelJob</tt>.
--   
--   <i>See:</i> <a>newCancelJob</a> smart constructor.
data CancelJob
CancelJob' :: Text -> Text -> CancelJob

-- | The Batch job ID of the job to cancel.
[$sel:jobId:CancelJob'] :: CancelJob -> Text

-- | A message to attach to the job that explains the reason for canceling
--   it. This message is returned by future DescribeJobs operations on the
--   job. This message is also recorded in the Batch activity logs.
[$sel:reason:CancelJob'] :: CancelJob -> Text

-- | Create a value of <a>CancelJob</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobId:CancelJob'</a>, <a>cancelJob_jobId</a> - The Batch job
--   ID of the job to cancel.
--   
--   <a>$sel:reason:CancelJob'</a>, <a>cancelJob_reason</a> - A message to
--   attach to the job that explains the reason for canceling it. This
--   message is returned by future DescribeJobs operations on the job. This
--   message is also recorded in the Batch activity logs.
newCancelJob :: Text -> Text -> CancelJob

-- | The Batch job ID of the job to cancel.
cancelJob_jobId :: Lens' CancelJob Text

-- | A message to attach to the job that explains the reason for canceling
--   it. This message is returned by future DescribeJobs operations on the
--   job. This message is also recorded in the Batch activity logs.
cancelJob_reason :: Lens' CancelJob Text

-- | <i>See:</i> <a>newCancelJobResponse</a> smart constructor.
data CancelJobResponse
CancelJobResponse' :: Int -> CancelJobResponse

-- | The response's http status code.
[$sel:httpStatus:CancelJobResponse'] :: CancelJobResponse -> Int

-- | Create a value of <a>CancelJobResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CancelJobResponse'</a>,
--   <a>cancelJobResponse_httpStatus</a> - The response's http status code.
newCancelJobResponse :: Int -> CancelJobResponse

-- | The response's http status code.
cancelJobResponse_httpStatus :: Lens' CancelJobResponse Int
instance GHC.Generics.Generic Network.AWS.Batch.CancelJob.CancelJob
instance GHC.Show.Show Network.AWS.Batch.CancelJob.CancelJob
instance GHC.Read.Read Network.AWS.Batch.CancelJob.CancelJob
instance GHC.Classes.Eq Network.AWS.Batch.CancelJob.CancelJob
instance GHC.Generics.Generic Network.AWS.Batch.CancelJob.CancelJobResponse
instance GHC.Show.Show Network.AWS.Batch.CancelJob.CancelJobResponse
instance GHC.Read.Read Network.AWS.Batch.CancelJob.CancelJobResponse
instance GHC.Classes.Eq Network.AWS.Batch.CancelJob.CancelJobResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Batch.CancelJob.CancelJob
instance Control.DeepSeq.NFData Network.AWS.Batch.CancelJob.CancelJobResponse
instance Data.Hashable.Class.Hashable Network.AWS.Batch.CancelJob.CancelJob
instance Control.DeepSeq.NFData Network.AWS.Batch.CancelJob.CancelJob
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Batch.CancelJob.CancelJob
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Batch.CancelJob.CancelJob
instance Network.AWS.Data.Path.ToPath Network.AWS.Batch.CancelJob.CancelJob
instance Network.AWS.Data.Query.ToQuery Network.AWS.Batch.CancelJob.CancelJob


-- | Deletes specified tags from an Batch resource.
module Network.AWS.Batch.UntagResource

-- | <i>See:</i> <a>newUntagResource</a> smart constructor.
data UntagResource
UntagResource' :: Text -> NonEmpty Text -> UntagResource

-- | The Amazon Resource Name (ARN) of the resource from which to delete
--   tags. Batch resources that support tags are compute environments,
--   jobs, job definitions, and job queues. ARNs for child jobs of array
--   and multi-node parallel (MNP) jobs are not supported.
[$sel:resourceArn:UntagResource'] :: UntagResource -> Text

-- | The keys of the tags to be removed.
[$sel:tagKeys:UntagResource'] :: UntagResource -> NonEmpty Text

-- | Create a value of <a>UntagResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:UntagResource'</a>,
--   <a>untagResource_resourceArn</a> - The Amazon Resource Name (ARN) of
--   the resource from which to delete tags. Batch resources that support
--   tags are compute environments, jobs, job definitions, and job queues.
--   ARNs for child jobs of array and multi-node parallel (MNP) jobs are
--   not supported.
--   
--   <a>$sel:tagKeys:UntagResource'</a>, <a>untagResource_tagKeys</a> - The
--   keys of the tags to be removed.
newUntagResource :: Text -> NonEmpty Text -> UntagResource

-- | The Amazon Resource Name (ARN) of the resource from which to delete
--   tags. Batch resources that support tags are compute environments,
--   jobs, job definitions, and job queues. ARNs for child jobs of array
--   and multi-node parallel (MNP) jobs are not supported.
untagResource_resourceArn :: Lens' UntagResource Text

-- | The keys of the tags to be removed.
untagResource_tagKeys :: Lens' UntagResource (NonEmpty Text)

-- | <i>See:</i> <a>newUntagResourceResponse</a> smart constructor.
data UntagResourceResponse
UntagResourceResponse' :: Int -> UntagResourceResponse

-- | The response's http status code.
[$sel:httpStatus:UntagResourceResponse'] :: UntagResourceResponse -> Int

-- | Create a value of <a>UntagResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UntagResourceResponse'</a>,
--   <a>untagResourceResponse_httpStatus</a> - The response's http status
--   code.
newUntagResourceResponse :: Int -> UntagResourceResponse

-- | The response's http status code.
untagResourceResponse_httpStatus :: Lens' UntagResourceResponse Int
instance GHC.Generics.Generic Network.AWS.Batch.UntagResource.UntagResource
instance GHC.Show.Show Network.AWS.Batch.UntagResource.UntagResource
instance GHC.Read.Read Network.AWS.Batch.UntagResource.UntagResource
instance GHC.Classes.Eq Network.AWS.Batch.UntagResource.UntagResource
instance GHC.Generics.Generic Network.AWS.Batch.UntagResource.UntagResourceResponse
instance GHC.Show.Show Network.AWS.Batch.UntagResource.UntagResourceResponse
instance GHC.Read.Read Network.AWS.Batch.UntagResource.UntagResourceResponse
instance GHC.Classes.Eq Network.AWS.Batch.UntagResource.UntagResourceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Batch.UntagResource.UntagResource
instance Control.DeepSeq.NFData Network.AWS.Batch.UntagResource.UntagResourceResponse
instance Data.Hashable.Class.Hashable Network.AWS.Batch.UntagResource.UntagResource
instance Control.DeepSeq.NFData Network.AWS.Batch.UntagResource.UntagResource
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Batch.UntagResource.UntagResource
instance Network.AWS.Data.Path.ToPath Network.AWS.Batch.UntagResource.UntagResource
instance Network.AWS.Data.Query.ToQuery Network.AWS.Batch.UntagResource.UntagResource


-- | Updates an Batch compute environment.
module Network.AWS.Batch.UpdateComputeEnvironment

-- | Contains the parameters for <tt>UpdateComputeEnvironment</tt>.
--   
--   <i>See:</i> <a>newUpdateComputeEnvironment</a> smart constructor.
data UpdateComputeEnvironment
UpdateComputeEnvironment' :: Maybe CEState -> Maybe ComputeResourceUpdate -> Maybe Text -> Text -> UpdateComputeEnvironment

-- | The state of the compute environment. Compute environments in the
--   <tt>ENABLED</tt> state can accept jobs from a queue and scale in or
--   out automatically based on the workload demand of its associated
--   queues.
--   
--   If the state is <tt>ENABLED</tt>, then the Batch scheduler can attempt
--   to place jobs from an associated job queue on the compute resources
--   within the environment. If the compute environment is managed, then it
--   can scale its instances out or in automatically, based on the job
--   queue demand.
--   
--   If the state is <tt>DISABLED</tt>, then the Batch scheduler doesn't
--   attempt to place jobs within the environment. Jobs in a
--   <tt>STARTING</tt> or <tt>RUNNING</tt> state continue to progress
--   normally. Managed compute environments in the <tt>DISABLED</tt> state
--   don't scale out. However, they scale in to <tt>minvCpus</tt> value
--   after instances become idle.
[$sel:state:UpdateComputeEnvironment'] :: UpdateComputeEnvironment -> Maybe CEState

-- | Details of the compute resources managed by the compute environment.
--   Required for a managed compute environment. For more information, see
--   <a>Compute Environments</a> in the <i>Batch User Guide</i>.
[$sel:computeResources:UpdateComputeEnvironment'] :: UpdateComputeEnvironment -> Maybe ComputeResourceUpdate

-- | The full Amazon Resource Name (ARN) of the IAM role that allows Batch
--   to make calls to other Amazon Web Services services on your behalf.
--   For more information, see <a>Batch service IAM role</a> in the
--   <i>Batch User Guide</i>.
--   
--   If the compute environment has a service-linked role, it can't be
--   changed to use a regular IAM role. Likewise, if the compute
--   environment has a regular IAM role, it can't be changed to use a
--   service-linked role.
--   
--   If your specified role has a path other than <tt>/</tt>, then you must
--   either specify the full role ARN (this is recommended) or prefix the
--   role name with the path.
--   
--   Depending on how you created your Batch service role, its ARN might
--   contain the <tt>service-role</tt> path prefix. When you only specify
--   the name of the service role, Batch assumes that your ARN doesn't use
--   the <tt>service-role</tt> path prefix. Because of this, we recommend
--   that you specify the full ARN of your service role when you create
--   compute environments.
[$sel:serviceRole:UpdateComputeEnvironment'] :: UpdateComputeEnvironment -> Maybe Text

-- | The name or full Amazon Resource Name (ARN) of the compute environment
--   to update.
[$sel:computeEnvironment:UpdateComputeEnvironment'] :: UpdateComputeEnvironment -> Text

-- | Create a value of <a>UpdateComputeEnvironment</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:state:UpdateComputeEnvironment'</a>,
--   <a>updateComputeEnvironment_state</a> - The state of the compute
--   environment. Compute environments in the <tt>ENABLED</tt> state can
--   accept jobs from a queue and scale in or out automatically based on
--   the workload demand of its associated queues.
--   
--   If the state is <tt>ENABLED</tt>, then the Batch scheduler can attempt
--   to place jobs from an associated job queue on the compute resources
--   within the environment. If the compute environment is managed, then it
--   can scale its instances out or in automatically, based on the job
--   queue demand.
--   
--   If the state is <tt>DISABLED</tt>, then the Batch scheduler doesn't
--   attempt to place jobs within the environment. Jobs in a
--   <tt>STARTING</tt> or <tt>RUNNING</tt> state continue to progress
--   normally. Managed compute environments in the <tt>DISABLED</tt> state
--   don't scale out. However, they scale in to <tt>minvCpus</tt> value
--   after instances become idle.
--   
--   <a>$sel:computeResources:UpdateComputeEnvironment'</a>,
--   <a>updateComputeEnvironment_computeResources</a> - Details of the
--   compute resources managed by the compute environment. Required for a
--   managed compute environment. For more information, see <a>Compute
--   Environments</a> in the <i>Batch User Guide</i>.
--   
--   <a>$sel:serviceRole:UpdateComputeEnvironment'</a>,
--   <a>updateComputeEnvironment_serviceRole</a> - The full Amazon Resource
--   Name (ARN) of the IAM role that allows Batch to make calls to other
--   Amazon Web Services services on your behalf. For more information, see
--   <a>Batch service IAM role</a> in the <i>Batch User Guide</i>.
--   
--   If the compute environment has a service-linked role, it can't be
--   changed to use a regular IAM role. Likewise, if the compute
--   environment has a regular IAM role, it can't be changed to use a
--   service-linked role.
--   
--   If your specified role has a path other than <tt>/</tt>, then you must
--   either specify the full role ARN (this is recommended) or prefix the
--   role name with the path.
--   
--   Depending on how you created your Batch service role, its ARN might
--   contain the <tt>service-role</tt> path prefix. When you only specify
--   the name of the service role, Batch assumes that your ARN doesn't use
--   the <tt>service-role</tt> path prefix. Because of this, we recommend
--   that you specify the full ARN of your service role when you create
--   compute environments.
--   
--   <a>$sel:computeEnvironment:UpdateComputeEnvironment'</a>,
--   <a>updateComputeEnvironment_computeEnvironment</a> - The name or full
--   Amazon Resource Name (ARN) of the compute environment to update.
newUpdateComputeEnvironment :: Text -> UpdateComputeEnvironment

-- | The state of the compute environment. Compute environments in the
--   <tt>ENABLED</tt> state can accept jobs from a queue and scale in or
--   out automatically based on the workload demand of its associated
--   queues.
--   
--   If the state is <tt>ENABLED</tt>, then the Batch scheduler can attempt
--   to place jobs from an associated job queue on the compute resources
--   within the environment. If the compute environment is managed, then it
--   can scale its instances out or in automatically, based on the job
--   queue demand.
--   
--   If the state is <tt>DISABLED</tt>, then the Batch scheduler doesn't
--   attempt to place jobs within the environment. Jobs in a
--   <tt>STARTING</tt> or <tt>RUNNING</tt> state continue to progress
--   normally. Managed compute environments in the <tt>DISABLED</tt> state
--   don't scale out. However, they scale in to <tt>minvCpus</tt> value
--   after instances become idle.
updateComputeEnvironment_state :: Lens' UpdateComputeEnvironment (Maybe CEState)

-- | Details of the compute resources managed by the compute environment.
--   Required for a managed compute environment. For more information, see
--   <a>Compute Environments</a> in the <i>Batch User Guide</i>.
updateComputeEnvironment_computeResources :: Lens' UpdateComputeEnvironment (Maybe ComputeResourceUpdate)

-- | The full Amazon Resource Name (ARN) of the IAM role that allows Batch
--   to make calls to other Amazon Web Services services on your behalf.
--   For more information, see <a>Batch service IAM role</a> in the
--   <i>Batch User Guide</i>.
--   
--   If the compute environment has a service-linked role, it can't be
--   changed to use a regular IAM role. Likewise, if the compute
--   environment has a regular IAM role, it can't be changed to use a
--   service-linked role.
--   
--   If your specified role has a path other than <tt>/</tt>, then you must
--   either specify the full role ARN (this is recommended) or prefix the
--   role name with the path.
--   
--   Depending on how you created your Batch service role, its ARN might
--   contain the <tt>service-role</tt> path prefix. When you only specify
--   the name of the service role, Batch assumes that your ARN doesn't use
--   the <tt>service-role</tt> path prefix. Because of this, we recommend
--   that you specify the full ARN of your service role when you create
--   compute environments.
updateComputeEnvironment_serviceRole :: Lens' UpdateComputeEnvironment (Maybe Text)

-- | The name or full Amazon Resource Name (ARN) of the compute environment
--   to update.
updateComputeEnvironment_computeEnvironment :: Lens' UpdateComputeEnvironment Text

-- | <i>See:</i> <a>newUpdateComputeEnvironmentResponse</a> smart
--   constructor.
data UpdateComputeEnvironmentResponse
UpdateComputeEnvironmentResponse' :: Maybe Text -> Maybe Text -> Int -> UpdateComputeEnvironmentResponse

-- | The name of the compute environment. Up to 128 letters (uppercase and
--   lowercase), numbers, hyphens, and underscores are allowed.
[$sel:computeEnvironmentName:UpdateComputeEnvironmentResponse'] :: UpdateComputeEnvironmentResponse -> Maybe Text

-- | The Amazon Resource Name (ARN) of the compute environment.
[$sel:computeEnvironmentArn:UpdateComputeEnvironmentResponse'] :: UpdateComputeEnvironmentResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:UpdateComputeEnvironmentResponse'] :: UpdateComputeEnvironmentResponse -> Int

-- | Create a value of <a>UpdateComputeEnvironmentResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:computeEnvironmentName:UpdateComputeEnvironmentResponse'</a>,
--   <a>updateComputeEnvironmentResponse_computeEnvironmentName</a> - The
--   name of the compute environment. Up to 128 letters (uppercase and
--   lowercase), numbers, hyphens, and underscores are allowed.
--   
--   <a>$sel:computeEnvironmentArn:UpdateComputeEnvironmentResponse'</a>,
--   <a>updateComputeEnvironmentResponse_computeEnvironmentArn</a> - The
--   Amazon Resource Name (ARN) of the compute environment.
--   
--   <a>$sel:httpStatus:UpdateComputeEnvironmentResponse'</a>,
--   <a>updateComputeEnvironmentResponse_httpStatus</a> - The response's
--   http status code.
newUpdateComputeEnvironmentResponse :: Int -> UpdateComputeEnvironmentResponse

-- | The name of the compute environment. Up to 128 letters (uppercase and
--   lowercase), numbers, hyphens, and underscores are allowed.
updateComputeEnvironmentResponse_computeEnvironmentName :: Lens' UpdateComputeEnvironmentResponse (Maybe Text)

-- | The Amazon Resource Name (ARN) of the compute environment.
updateComputeEnvironmentResponse_computeEnvironmentArn :: Lens' UpdateComputeEnvironmentResponse (Maybe Text)

-- | The response's http status code.
updateComputeEnvironmentResponse_httpStatus :: Lens' UpdateComputeEnvironmentResponse Int
instance GHC.Generics.Generic Network.AWS.Batch.UpdateComputeEnvironment.UpdateComputeEnvironment
instance GHC.Show.Show Network.AWS.Batch.UpdateComputeEnvironment.UpdateComputeEnvironment
instance GHC.Read.Read Network.AWS.Batch.UpdateComputeEnvironment.UpdateComputeEnvironment
instance GHC.Classes.Eq Network.AWS.Batch.UpdateComputeEnvironment.UpdateComputeEnvironment
instance GHC.Generics.Generic Network.AWS.Batch.UpdateComputeEnvironment.UpdateComputeEnvironmentResponse
instance GHC.Show.Show Network.AWS.Batch.UpdateComputeEnvironment.UpdateComputeEnvironmentResponse
instance GHC.Read.Read Network.AWS.Batch.UpdateComputeEnvironment.UpdateComputeEnvironmentResponse
instance GHC.Classes.Eq Network.AWS.Batch.UpdateComputeEnvironment.UpdateComputeEnvironmentResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Batch.UpdateComputeEnvironment.UpdateComputeEnvironment
instance Control.DeepSeq.NFData Network.AWS.Batch.UpdateComputeEnvironment.UpdateComputeEnvironmentResponse
instance Data.Hashable.Class.Hashable Network.AWS.Batch.UpdateComputeEnvironment.UpdateComputeEnvironment
instance Control.DeepSeq.NFData Network.AWS.Batch.UpdateComputeEnvironment.UpdateComputeEnvironment
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Batch.UpdateComputeEnvironment.UpdateComputeEnvironment
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Batch.UpdateComputeEnvironment.UpdateComputeEnvironment
instance Network.AWS.Data.Path.ToPath Network.AWS.Batch.UpdateComputeEnvironment.UpdateComputeEnvironment
instance Network.AWS.Data.Query.ToQuery Network.AWS.Batch.UpdateComputeEnvironment.UpdateComputeEnvironment


-- | Updates a job queue.
module Network.AWS.Batch.UpdateJobQueue

-- | Contains the parameters for <tt>UpdateJobQueue</tt>.
--   
--   <i>See:</i> <a>newUpdateJobQueue</a> smart constructor.
data UpdateJobQueue
UpdateJobQueue' :: Maybe JQState -> Maybe Int -> Maybe [ComputeEnvironmentOrder] -> Text -> UpdateJobQueue

-- | Describes the queue's ability to accept new jobs. If the job queue
--   state is <tt>ENABLED</tt>, it can accept jobs. If the job queue state
--   is <tt>DISABLED</tt>, new jobs can't be added to the queue, but jobs
--   already in the queue can finish.
[$sel:state:UpdateJobQueue'] :: UpdateJobQueue -> Maybe JQState

-- | The priority of the job queue. Job queues with a higher priority (or a
--   higher integer value for the <tt>priority</tt> parameter) are
--   evaluated first when associated with the same compute environment.
--   Priority is determined in descending order, for example, a job queue
--   with a priority value of <tt>10</tt> is given scheduling preference
--   over a job queue with a priority value of <tt>1</tt>. All of the
--   compute environments must be either EC2 (<tt>EC2</tt> or
--   <tt>SPOT</tt>) or Fargate (<tt>FARGATE</tt> or <tt>FARGATE_SPOT</tt>).
--   EC2 and Fargate compute environments can't be mixed.
[$sel:priority:UpdateJobQueue'] :: UpdateJobQueue -> Maybe Int

-- | Details the set of compute environments mapped to a job queue and
--   their order relative to each other. This is one of the parameters used
--   by the job scheduler to determine which compute environment should run
--   a given job. Compute environments must be in the <tt>VALID</tt> state
--   before you can associate them with a job queue. All of the compute
--   environments must be either EC2 (<tt>EC2</tt> or <tt>SPOT</tt>) or
--   Fargate (<tt>FARGATE</tt> or <tt>FARGATE_SPOT</tt>). EC2 and Fargate
--   compute environments can't be mixed.
--   
--   All compute environments that are associated with a job queue must
--   share the same architecture. Batch doesn't support mixing compute
--   environment architecture types in a single job queue.
[$sel:computeEnvironmentOrder:UpdateJobQueue'] :: UpdateJobQueue -> Maybe [ComputeEnvironmentOrder]

-- | The name or the Amazon Resource Name (ARN) of the job queue.
[$sel:jobQueue:UpdateJobQueue'] :: UpdateJobQueue -> Text

-- | Create a value of <a>UpdateJobQueue</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:state:UpdateJobQueue'</a>, <a>updateJobQueue_state</a> -
--   Describes the queue's ability to accept new jobs. If the job queue
--   state is <tt>ENABLED</tt>, it can accept jobs. If the job queue state
--   is <tt>DISABLED</tt>, new jobs can't be added to the queue, but jobs
--   already in the queue can finish.
--   
--   <a>$sel:priority:UpdateJobQueue'</a>, <a>updateJobQueue_priority</a> -
--   The priority of the job queue. Job queues with a higher priority (or a
--   higher integer value for the <tt>priority</tt> parameter) are
--   evaluated first when associated with the same compute environment.
--   Priority is determined in descending order, for example, a job queue
--   with a priority value of <tt>10</tt> is given scheduling preference
--   over a job queue with a priority value of <tt>1</tt>. All of the
--   compute environments must be either EC2 (<tt>EC2</tt> or
--   <tt>SPOT</tt>) or Fargate (<tt>FARGATE</tt> or <tt>FARGATE_SPOT</tt>).
--   EC2 and Fargate compute environments can't be mixed.
--   
--   <a>$sel:computeEnvironmentOrder:UpdateJobQueue'</a>,
--   <a>updateJobQueue_computeEnvironmentOrder</a> - Details the set of
--   compute environments mapped to a job queue and their order relative to
--   each other. This is one of the parameters used by the job scheduler to
--   determine which compute environment should run a given job. Compute
--   environments must be in the <tt>VALID</tt> state before you can
--   associate them with a job queue. All of the compute environments must
--   be either EC2 (<tt>EC2</tt> or <tt>SPOT</tt>) or Fargate
--   (<tt>FARGATE</tt> or <tt>FARGATE_SPOT</tt>). EC2 and Fargate compute
--   environments can't be mixed.
--   
--   All compute environments that are associated with a job queue must
--   share the same architecture. Batch doesn't support mixing compute
--   environment architecture types in a single job queue.
--   
--   <a>$sel:jobQueue:UpdateJobQueue'</a>, <a>updateJobQueue_jobQueue</a> -
--   The name or the Amazon Resource Name (ARN) of the job queue.
newUpdateJobQueue :: Text -> UpdateJobQueue

-- | Describes the queue's ability to accept new jobs. If the job queue
--   state is <tt>ENABLED</tt>, it can accept jobs. If the job queue state
--   is <tt>DISABLED</tt>, new jobs can't be added to the queue, but jobs
--   already in the queue can finish.
updateJobQueue_state :: Lens' UpdateJobQueue (Maybe JQState)

-- | The priority of the job queue. Job queues with a higher priority (or a
--   higher integer value for the <tt>priority</tt> parameter) are
--   evaluated first when associated with the same compute environment.
--   Priority is determined in descending order, for example, a job queue
--   with a priority value of <tt>10</tt> is given scheduling preference
--   over a job queue with a priority value of <tt>1</tt>. All of the
--   compute environments must be either EC2 (<tt>EC2</tt> or
--   <tt>SPOT</tt>) or Fargate (<tt>FARGATE</tt> or <tt>FARGATE_SPOT</tt>).
--   EC2 and Fargate compute environments can't be mixed.
updateJobQueue_priority :: Lens' UpdateJobQueue (Maybe Int)

-- | Details the set of compute environments mapped to a job queue and
--   their order relative to each other. This is one of the parameters used
--   by the job scheduler to determine which compute environment should run
--   a given job. Compute environments must be in the <tt>VALID</tt> state
--   before you can associate them with a job queue. All of the compute
--   environments must be either EC2 (<tt>EC2</tt> or <tt>SPOT</tt>) or
--   Fargate (<tt>FARGATE</tt> or <tt>FARGATE_SPOT</tt>). EC2 and Fargate
--   compute environments can't be mixed.
--   
--   All compute environments that are associated with a job queue must
--   share the same architecture. Batch doesn't support mixing compute
--   environment architecture types in a single job queue.
updateJobQueue_computeEnvironmentOrder :: Lens' UpdateJobQueue (Maybe [ComputeEnvironmentOrder])

-- | The name or the Amazon Resource Name (ARN) of the job queue.
updateJobQueue_jobQueue :: Lens' UpdateJobQueue Text

-- | <i>See:</i> <a>newUpdateJobQueueResponse</a> smart constructor.
data UpdateJobQueueResponse
UpdateJobQueueResponse' :: Maybe Text -> Maybe Text -> Int -> UpdateJobQueueResponse

-- | The Amazon Resource Name (ARN) of the job queue.
[$sel:jobQueueArn:UpdateJobQueueResponse'] :: UpdateJobQueueResponse -> Maybe Text

-- | The name of the job queue.
[$sel:jobQueueName:UpdateJobQueueResponse'] :: UpdateJobQueueResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:UpdateJobQueueResponse'] :: UpdateJobQueueResponse -> Int

-- | Create a value of <a>UpdateJobQueueResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobQueueArn:UpdateJobQueueResponse'</a>,
--   <a>updateJobQueueResponse_jobQueueArn</a> - The Amazon Resource Name
--   (ARN) of the job queue.
--   
--   <a>$sel:jobQueueName:UpdateJobQueueResponse'</a>,
--   <a>updateJobQueueResponse_jobQueueName</a> - The name of the job
--   queue.
--   
--   <a>$sel:httpStatus:UpdateJobQueueResponse'</a>,
--   <a>updateJobQueueResponse_httpStatus</a> - The response's http status
--   code.
newUpdateJobQueueResponse :: Int -> UpdateJobQueueResponse

-- | The Amazon Resource Name (ARN) of the job queue.
updateJobQueueResponse_jobQueueArn :: Lens' UpdateJobQueueResponse (Maybe Text)

-- | The name of the job queue.
updateJobQueueResponse_jobQueueName :: Lens' UpdateJobQueueResponse (Maybe Text)

-- | The response's http status code.
updateJobQueueResponse_httpStatus :: Lens' UpdateJobQueueResponse Int
instance GHC.Generics.Generic Network.AWS.Batch.UpdateJobQueue.UpdateJobQueue
instance GHC.Show.Show Network.AWS.Batch.UpdateJobQueue.UpdateJobQueue
instance GHC.Read.Read Network.AWS.Batch.UpdateJobQueue.UpdateJobQueue
instance GHC.Classes.Eq Network.AWS.Batch.UpdateJobQueue.UpdateJobQueue
instance GHC.Generics.Generic Network.AWS.Batch.UpdateJobQueue.UpdateJobQueueResponse
instance GHC.Show.Show Network.AWS.Batch.UpdateJobQueue.UpdateJobQueueResponse
instance GHC.Read.Read Network.AWS.Batch.UpdateJobQueue.UpdateJobQueueResponse
instance GHC.Classes.Eq Network.AWS.Batch.UpdateJobQueue.UpdateJobQueueResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Batch.UpdateJobQueue.UpdateJobQueue
instance Control.DeepSeq.NFData Network.AWS.Batch.UpdateJobQueue.UpdateJobQueueResponse
instance Data.Hashable.Class.Hashable Network.AWS.Batch.UpdateJobQueue.UpdateJobQueue
instance Control.DeepSeq.NFData Network.AWS.Batch.UpdateJobQueue.UpdateJobQueue
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Batch.UpdateJobQueue.UpdateJobQueue
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Batch.UpdateJobQueue.UpdateJobQueue
instance Network.AWS.Data.Path.ToPath Network.AWS.Batch.UpdateJobQueue.UpdateJobQueue
instance Network.AWS.Data.Query.ToQuery Network.AWS.Batch.UpdateJobQueue.UpdateJobQueue


module Network.AWS.Batch.Lens

-- | The state of the compute environment. If the state is
--   <tt>ENABLED</tt>, then the compute environment accepts jobs from a
--   queue and can scale out automatically based on queues.
--   
--   If the state is <tt>ENABLED</tt>, then the Batch scheduler can attempt
--   to place jobs from an associated job queue on the compute resources
--   within the environment. If the compute environment is managed, then it
--   can scale its instances out or in automatically, based on the job
--   queue demand.
--   
--   If the state is <tt>DISABLED</tt>, then the Batch scheduler doesn't
--   attempt to place jobs within the environment. Jobs in a
--   <tt>STARTING</tt> or <tt>RUNNING</tt> state continue to progress
--   normally. Managed compute environments in the <tt>DISABLED</tt> state
--   don't scale out. However, they scale in to <tt>minvCpus</tt> value
--   after instances become idle.
createComputeEnvironment_state :: Lens' CreateComputeEnvironment (Maybe CEState)

-- | Details about the compute resources managed by the compute
--   environment. This parameter is required for managed compute
--   environments. For more information, see <a>Compute Environments</a> in
--   the <i>Batch User Guide</i>.
createComputeEnvironment_computeResources :: Lens' CreateComputeEnvironment (Maybe ComputeResource)

-- | The full Amazon Resource Name (ARN) of the IAM role that allows Batch
--   to make calls to other Amazon Web Services services on your behalf.
--   For more information, see <a>Batch service IAM role</a> in the
--   <i>Batch User Guide</i>.
--   
--   If your account already created the Batch service-linked role, that
--   role is used by default for your compute environment unless you
--   specify a different role here. If the Batch service-linked role
--   doesn't exist in your account, and no role is specified here, the
--   service attempts to create the Batch service-linked role in your
--   account.
--   
--   If your specified role has a path other than <tt>/</tt>, then you must
--   specify either the full role ARN (recommended) or prefix the role name
--   with the path. For example, if a role with the name <tt>bar</tt> has a
--   path of <tt>/foo/</tt> then you would specify <tt>/foo/bar</tt> as the
--   role name. For more information, see <a>Friendly names and paths</a>
--   in the <i>IAM User Guide</i>.
--   
--   Depending on how you created your Batch service role, its ARN might
--   contain the <tt>service-role</tt> path prefix. When you only specify
--   the name of the service role, Batch assumes that your ARN doesn't use
--   the <tt>service-role</tt> path prefix. Because of this, we recommend
--   that you specify the full ARN of your service role when you create
--   compute environments.
createComputeEnvironment_serviceRole :: Lens' CreateComputeEnvironment (Maybe Text)

-- | The tags that you apply to the compute environment to help you
--   categorize and organize your resources. Each tag consists of a key and
--   an optional value. For more information, see <a>Tagging Amazon Web
--   Services Resources</a> in <i>Amazon Web Services General
--   Reference</i>.
--   
--   These tags can be updated or removed using the <a>TagResource</a> and
--   <a>UntagResource</a> API operations. These tags don't propagate to the
--   underlying compute resources.
createComputeEnvironment_tags :: Lens' CreateComputeEnvironment (Maybe (HashMap Text Text))

-- | The name for your compute environment. Up to 128 letters (uppercase
--   and lowercase), numbers, hyphens, and underscores are allowed.
createComputeEnvironment_computeEnvironmentName :: Lens' CreateComputeEnvironment Text

-- | The type of the compute environment: <tt>MANAGED</tt> or
--   <tt>UNMANAGED</tt>. For more information, see <a>Compute
--   Environments</a> in the <i>Batch User Guide</i>.
createComputeEnvironment_type :: Lens' CreateComputeEnvironment CEType

-- | The name of the compute environment. Up to 128 letters (uppercase and
--   lowercase), numbers, hyphens, and underscores are allowed.
createComputeEnvironmentResponse_computeEnvironmentName :: Lens' CreateComputeEnvironmentResponse (Maybe Text)

-- | The Amazon Resource Name (ARN) of the compute environment.
createComputeEnvironmentResponse_computeEnvironmentArn :: Lens' CreateComputeEnvironmentResponse (Maybe Text)

-- | The response's http status code.
createComputeEnvironmentResponse_httpStatus :: Lens' CreateComputeEnvironmentResponse Int

-- | The Amazon Resource Name (ARN) that identifies the resource that tags
--   are listed for. Batch resources that support tags are compute
--   environments, jobs, job definitions, and job queues. ARNs for child
--   jobs of array and multi-node parallel (MNP) jobs are not supported.
listTagsForResource_resourceArn :: Lens' ListTagsForResource Text

-- | The tags for the resource.
listTagsForResourceResponse_tags :: Lens' ListTagsForResourceResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
listTagsForResourceResponse_httpStatus :: Lens' ListTagsForResourceResponse Int

-- | Specifies whether to propagate the tags from the job or job definition
--   to the corresponding Amazon ECS task. If no value is specified, the
--   tags are not propagated. Tags can only be propagated to the tasks
--   during task creation. For tags with the same name, job tags are given
--   priority over job definitions tags. If the total number of combined
--   tags from the job and job definition is over 50, the job is moved to
--   the <tt>FAILED</tt> state.
registerJobDefinition_propagateTags :: Lens' RegisterJobDefinition (Maybe Bool)

-- | The retry strategy to use for failed jobs that are submitted with this
--   job definition. Any retry strategy that's specified during a SubmitJob
--   operation overrides the retry strategy defined here. If a job is
--   terminated due to a timeout, it isn't retried.
registerJobDefinition_retryStrategy :: Lens' RegisterJobDefinition (Maybe RetryStrategy)

-- | The platform capabilities required by the job definition. If no value
--   is specified, it defaults to <tt>EC2</tt>. To run the job on Fargate
--   resources, specify <tt>FARGATE</tt>.
registerJobDefinition_platformCapabilities :: Lens' RegisterJobDefinition (Maybe [PlatformCapability])

-- | Default parameter substitution placeholders to set in the job
--   definition. Parameters are specified as a key-value pair mapping.
--   Parameters in a <tt>SubmitJob</tt> request override any corresponding
--   parameter defaults from the job definition.
registerJobDefinition_parameters :: Lens' RegisterJobDefinition (Maybe (HashMap Text Text))

-- | The timeout configuration for jobs that are submitted with this job
--   definition, after which Batch terminates your jobs if they have not
--   finished. If a job is terminated due to a timeout, it isn't retried.
--   The minimum value for the timeout is 60 seconds. Any timeout
--   configuration that's specified during a SubmitJob operation overrides
--   the timeout configuration defined here. For more information, see
--   <a>Job Timeouts</a> in the <i>Batch User Guide</i>.
registerJobDefinition_timeout :: Lens' RegisterJobDefinition (Maybe JobTimeout)

-- | An object with various properties specific to single-node
--   container-based jobs. If the job definition's <tt>type</tt> parameter
--   is <tt>container</tt>, then you must specify either
--   <tt>containerProperties</tt> or <tt>nodeProperties</tt>.
--   
--   If the job runs on Fargate resources, then you must not specify
--   <tt>nodeProperties</tt>; use only <tt>containerProperties</tt>.
registerJobDefinition_containerProperties :: Lens' RegisterJobDefinition (Maybe ContainerProperties)

-- | An object with various properties specific to multi-node parallel
--   jobs. If you specify node properties for a job, it becomes a
--   multi-node parallel job. For more information, see <a>Multi-node
--   Parallel Jobs</a> in the <i>Batch User Guide</i>. If the job
--   definition's <tt>type</tt> parameter is <tt>container</tt>, then you
--   must specify either <tt>containerProperties</tt> or
--   <tt>nodeProperties</tt>.
--   
--   If the job runs on Fargate resources, then you must not specify
--   <tt>nodeProperties</tt>; use <tt>containerProperties</tt> instead.
registerJobDefinition_nodeProperties :: Lens' RegisterJobDefinition (Maybe NodeProperties)

-- | The tags that you apply to the job definition to help you categorize
--   and organize your resources. Each tag consists of a key and an
--   optional value. For more information, see <a>Tagging Amazon Web
--   Services Resources</a> in <i>Batch User Guide</i>.
registerJobDefinition_tags :: Lens' RegisterJobDefinition (Maybe (HashMap Text Text))

-- | The name of the job definition to register. Up to 128 letters
--   (uppercase and lowercase), numbers, hyphens, and underscores are
--   allowed.
registerJobDefinition_jobDefinitionName :: Lens' RegisterJobDefinition Text

-- | The type of job definition. For more information about multi-node
--   parallel jobs, see <a>Creating a multi-node parallel job
--   definition</a> in the <i>Batch User Guide</i>.
--   
--   If the job is run on Fargate resources, then <tt>multinode</tt> isn't
--   supported.
registerJobDefinition_type :: Lens' RegisterJobDefinition JobDefinitionType

-- | The response's http status code.
registerJobDefinitionResponse_httpStatus :: Lens' RegisterJobDefinitionResponse Int

-- | The name of the job definition.
registerJobDefinitionResponse_jobDefinitionName :: Lens' RegisterJobDefinitionResponse Text

-- | The Amazon Resource Name (ARN) of the job definition.
registerJobDefinitionResponse_jobDefinitionArn :: Lens' RegisterJobDefinitionResponse Text

-- | The revision of the job definition.
registerJobDefinitionResponse_revision :: Lens' RegisterJobDefinitionResponse Int

-- | A list of node overrides in JSON format that specify the node range to
--   target and the container overrides for that node range.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources; use <tt>containerOverrides</tt> instead.
submitJob_nodeOverrides :: Lens' SubmitJob (Maybe NodeOverrides)

-- | Specifies whether to propagate the tags from the job or job definition
--   to the corresponding Amazon ECS task. If no value is specified, the
--   tags aren't propagated. Tags can only be propagated to the tasks
--   during task creation. For tags with the same name, job tags are given
--   priority over job definitions tags. If the total number of combined
--   tags from the job and job definition is over 50, the job is moved to
--   the <tt>FAILED</tt> state. When specified, this overrides the tag
--   propagation setting in the job definition.
submitJob_propagateTags :: Lens' SubmitJob (Maybe Bool)

-- | A list of container overrides in the JSON format that specify the name
--   of a container in the specified job definition and the overrides it
--   should receive. You can override the default command for a container,
--   which is specified in the job definition or the Docker image, with a
--   <tt>command</tt> override. You can also override existing environment
--   variables on a container or add new environment variables to it with
--   an <tt>environment</tt> override.
submitJob_containerOverrides :: Lens' SubmitJob (Maybe ContainerOverrides)

-- | The retry strategy to use for failed jobs from this SubmitJob
--   operation. When a retry strategy is specified here, it overrides the
--   retry strategy defined in the job definition.
submitJob_retryStrategy :: Lens' SubmitJob (Maybe RetryStrategy)

-- | A list of dependencies for the job. A job can depend upon a maximum of
--   20 jobs. You can specify a <tt>SEQUENTIAL</tt> type dependency without
--   specifying a job ID for array jobs so that each child array job
--   completes sequentially, starting at index 0. You can also specify an
--   <tt>N_TO_N</tt> type dependency with a job ID for array jobs. In that
--   case, each index child of this job must wait for the corresponding
--   index child of each dependency to complete before it can begin.
submitJob_dependsOn :: Lens' SubmitJob (Maybe [JobDependency])

-- | Additional parameters passed to the job that replace parameter
--   substitution placeholders that are set in the job definition.
--   Parameters are specified as a key and value pair mapping. Parameters
--   in a <tt>SubmitJob</tt> request override any corresponding parameter
--   defaults from the job definition.
submitJob_parameters :: Lens' SubmitJob (Maybe (HashMap Text Text))

-- | The array properties for the submitted job, such as the size of the
--   array. The array size can be between 2 and 10,000. If you specify
--   array properties for a job, it becomes an array job. For more
--   information, see <a>Array Jobs</a> in the <i>Batch User Guide</i>.
submitJob_arrayProperties :: Lens' SubmitJob (Maybe ArrayProperties)

-- | The timeout configuration for this SubmitJob operation. You can
--   specify a timeout duration after which Batch terminates your jobs if
--   they haven't finished. If a job is terminated due to a timeout, it
--   isn't retried. The minimum value for the timeout is 60 seconds. This
--   configuration overrides any timeout configuration specified in the job
--   definition. For array jobs, child jobs have the same timeout
--   configuration as the parent job. For more information, see <a>Job
--   Timeouts</a> in the <i>Amazon Elastic Container Service Developer
--   Guide</i>.
submitJob_timeout :: Lens' SubmitJob (Maybe JobTimeout)

-- | The tags that you apply to the job request to help you categorize and
--   organize your resources. Each tag consists of a key and an optional
--   value. For more information, see <a>Tagging Amazon Web Services
--   Resources</a> in <i>Amazon Web Services General Reference</i>.
submitJob_tags :: Lens' SubmitJob (Maybe (HashMap Text Text))

-- | The name of the job. The first character must be alphanumeric, and up
--   to 128 letters (uppercase and lowercase), numbers, hyphens, and
--   underscores are allowed.
submitJob_jobName :: Lens' SubmitJob Text

-- | The job queue where the job is submitted. You can specify either the
--   name or the Amazon Resource Name (ARN) of the queue.
submitJob_jobQueue :: Lens' SubmitJob Text

-- | The job definition used by this job. This value can be one of
--   <tt>name</tt>, <tt>name:revision</tt>, or the Amazon Resource Name
--   (ARN) for the job definition. If <tt>name</tt> is specified without a
--   revision then the latest active revision is used.
submitJob_jobDefinition :: Lens' SubmitJob Text

-- | The Amazon Resource Name (ARN) for the job.
submitJobResponse_jobArn :: Lens' SubmitJobResponse (Maybe Text)

-- | The response's http status code.
submitJobResponse_httpStatus :: Lens' SubmitJobResponse Int

-- | The name of the job.
submitJobResponse_jobName :: Lens' SubmitJobResponse Text

-- | The unique identifier for the job.
submitJobResponse_jobId :: Lens' SubmitJobResponse Text

-- | The filter to apply to the query. Only one filter can be used at a
--   time. When the filter is used, <tt>jobStatus</tt> is ignored. The
--   filter doesn't apply to child jobs in an array or multi-node parallel
--   (MNP) jobs. The results are sorted by the <tt>createdAt</tt> field,
--   with the most recent jobs being first.
--   
--   <ul>
--   <li><i>JOB_NAME</i> The value of the filter is a case-insensitive
--   match for the job name. If the value ends with an asterisk (*), the
--   filter will match any job name that begins with the string before the
--   '*'. This corresponds to the <tt>jobName</tt> value. For example,
--   <tt>test1</tt> matches both <tt>Test1</tt> and <tt>test1</tt>, and
--   <tt>test1*</tt> matches both <tt>test1</tt> and <tt>Test10</tt>. When
--   the <tt>JOB_NAME</tt> filter is used, the results are grouped by the
--   job name and version.</li>
--   <li><i>JOB_DEFINITION</i> The value for the filter is the name or
--   Amazon Resource Name (ARN) of the job definition. This corresponds to
--   the <tt>jobDefinition</tt> value. The value is case sensitive. When
--   the value for the filter is the job definition name, the results
--   include all the jobs that used any revision of that job definition
--   name. If the value ends with an asterisk (*), the filter will match
--   any job definition name that begins with the string before the '*'.
--   For example, <tt>jd1</tt> matches only <tt>jd1</tt>, and <tt>jd1*</tt>
--   matches both <tt>jd1</tt> and <tt>jd1A</tt>. The version of the job
--   definition that's used doesn't affect the sort order. When the
--   <tt>JOB_DEFINITION</tt> filter is used and the ARN is used (which is
--   in the form
--   <tt>arn:${Partition}:batch:${Region}:${Account}:job-definition/${JobDefinitionName}:${Revision}</tt>),
--   the results include jobs that used the specified revision of the job
--   definition. Asterisk (*) is not supported when the ARN is used.</li>
--   <li><i>BEFORE_CREATED_AT</i> The value for the filter is the time
--   that's before the job was created. This corresponds to the
--   <tt>createdAt</tt> value. The value is a string representation of the
--   number of seconds since 00:00:00 UTC (midnight) on January 1,
--   1970.</li>
--   <li><i>AFTER_CREATED_AT</i> The value for the filter is the time
--   that's after the job was created. This corresponds to the
--   <tt>createdAt</tt> value. The value is a string representation of the
--   number of seconds since 00:00:00 UTC (midnight) on January 1,
--   1970.</li>
--   </ul>
listJobs_filters :: Lens' ListJobs (Maybe [KeyValuesPair])

-- | The <tt>nextToken</tt> value returned from a previous paginated
--   <tt>ListJobs</tt> request where <tt>maxResults</tt> was used and the
--   results exceeded the value of that parameter. Pagination continues
--   from the end of the previous results that returned the
--   <tt>nextToken</tt> value. This value is <tt>null</tt> when there are
--   no more results to return.
--   
--   This token should be treated as an opaque identifier that's only used
--   to retrieve the next items in a list and not for other programmatic
--   purposes.
listJobs_nextToken :: Lens' ListJobs (Maybe Text)

-- | The job ID for a multi-node parallel job. Specifying a multi-node
--   parallel job ID with this parameter lists all nodes that are
--   associated with the specified job.
listJobs_multiNodeJobId :: Lens' ListJobs (Maybe Text)

-- | The job status used to filter jobs in the specified queue. If the
--   <tt>filters</tt> parameter is specified, the <tt>jobStatus</tt>
--   parameter is ignored and jobs with any status are returned. If you
--   don't specify a status, only <tt>RUNNING</tt> jobs are returned.
listJobs_jobStatus :: Lens' ListJobs (Maybe JobStatus)

-- | The job ID for an array job. Specifying an array job ID with this
--   parameter lists all child jobs from within the specified array.
listJobs_arrayJobId :: Lens' ListJobs (Maybe Text)

-- | The name or full Amazon Resource Name (ARN) of the job queue used to
--   list jobs.
listJobs_jobQueue :: Lens' ListJobs (Maybe Text)

-- | The maximum number of results returned by <tt>ListJobs</tt> in
--   paginated output. When this parameter is used, <tt>ListJobs</tt> only
--   returns <tt>maxResults</tt> results in a single page and a
--   <tt>nextToken</tt> response element. The remaining results of the
--   initial request can be seen by sending another <tt>ListJobs</tt>
--   request with the returned <tt>nextToken</tt> value. This value can be
--   between 1 and 100. If this parameter isn't used, then
--   <tt>ListJobs</tt> returns up to 100 results and a <tt>nextToken</tt>
--   value if applicable.
listJobs_maxResults :: Lens' ListJobs (Maybe Int)

-- | The <tt>nextToken</tt> value to include in a future <tt>ListJobs</tt>
--   request. When the results of a <tt>ListJobs</tt> request exceed
--   <tt>maxResults</tt>, this value can be used to retrieve the next page
--   of results. This value is <tt>null</tt> when there are no more results
--   to return.
listJobsResponse_nextToken :: Lens' ListJobsResponse (Maybe Text)

-- | The response's http status code.
listJobsResponse_httpStatus :: Lens' ListJobsResponse Int

-- | A list of job summaries that match the request.
listJobsResponse_jobSummaryList :: Lens' ListJobsResponse [JobSummary]

-- | The Batch job ID of the job to terminate.
terminateJob_jobId :: Lens' TerminateJob Text

-- | A message to attach to the job that explains the reason for canceling
--   it. This message is returned by future DescribeJobs operations on the
--   job. This message is also recorded in the Batch activity logs.
terminateJob_reason :: Lens' TerminateJob Text

-- | The response's http status code.
terminateJobResponse_httpStatus :: Lens' TerminateJobResponse Int

-- | A list of up to 100 job IDs.
describeJobs_jobs :: Lens' DescribeJobs [Text]

-- | The list of jobs.
describeJobsResponse_jobs :: Lens' DescribeJobsResponse (Maybe [JobDetail])

-- | The response's http status code.
describeJobsResponse_httpStatus :: Lens' DescribeJobsResponse Int

-- | The name or Amazon Resource Name (ARN) of the compute environment to
--   delete.
deleteComputeEnvironment_computeEnvironment :: Lens' DeleteComputeEnvironment Text

-- | The response's http status code.
deleteComputeEnvironmentResponse_httpStatus :: Lens' DeleteComputeEnvironmentResponse Int

-- | The state of the compute environment. Compute environments in the
--   <tt>ENABLED</tt> state can accept jobs from a queue and scale in or
--   out automatically based on the workload demand of its associated
--   queues.
--   
--   If the state is <tt>ENABLED</tt>, then the Batch scheduler can attempt
--   to place jobs from an associated job queue on the compute resources
--   within the environment. If the compute environment is managed, then it
--   can scale its instances out or in automatically, based on the job
--   queue demand.
--   
--   If the state is <tt>DISABLED</tt>, then the Batch scheduler doesn't
--   attempt to place jobs within the environment. Jobs in a
--   <tt>STARTING</tt> or <tt>RUNNING</tt> state continue to progress
--   normally. Managed compute environments in the <tt>DISABLED</tt> state
--   don't scale out. However, they scale in to <tt>minvCpus</tt> value
--   after instances become idle.
updateComputeEnvironment_state :: Lens' UpdateComputeEnvironment (Maybe CEState)

-- | Details of the compute resources managed by the compute environment.
--   Required for a managed compute environment. For more information, see
--   <a>Compute Environments</a> in the <i>Batch User Guide</i>.
updateComputeEnvironment_computeResources :: Lens' UpdateComputeEnvironment (Maybe ComputeResourceUpdate)

-- | The full Amazon Resource Name (ARN) of the IAM role that allows Batch
--   to make calls to other Amazon Web Services services on your behalf.
--   For more information, see <a>Batch service IAM role</a> in the
--   <i>Batch User Guide</i>.
--   
--   If the compute environment has a service-linked role, it can't be
--   changed to use a regular IAM role. Likewise, if the compute
--   environment has a regular IAM role, it can't be changed to use a
--   service-linked role.
--   
--   If your specified role has a path other than <tt>/</tt>, then you must
--   either specify the full role ARN (this is recommended) or prefix the
--   role name with the path.
--   
--   Depending on how you created your Batch service role, its ARN might
--   contain the <tt>service-role</tt> path prefix. When you only specify
--   the name of the service role, Batch assumes that your ARN doesn't use
--   the <tt>service-role</tt> path prefix. Because of this, we recommend
--   that you specify the full ARN of your service role when you create
--   compute environments.
updateComputeEnvironment_serviceRole :: Lens' UpdateComputeEnvironment (Maybe Text)

-- | The name or full Amazon Resource Name (ARN) of the compute environment
--   to update.
updateComputeEnvironment_computeEnvironment :: Lens' UpdateComputeEnvironment Text

-- | The name of the compute environment. Up to 128 letters (uppercase and
--   lowercase), numbers, hyphens, and underscores are allowed.
updateComputeEnvironmentResponse_computeEnvironmentName :: Lens' UpdateComputeEnvironmentResponse (Maybe Text)

-- | The Amazon Resource Name (ARN) of the compute environment.
updateComputeEnvironmentResponse_computeEnvironmentArn :: Lens' UpdateComputeEnvironmentResponse (Maybe Text)

-- | The response's http status code.
updateComputeEnvironmentResponse_httpStatus :: Lens' UpdateComputeEnvironmentResponse Int

-- | The status used to filter job definitions.
describeJobDefinitions_status :: Lens' DescribeJobDefinitions (Maybe Text)

-- | The name of the job definition to describe.
describeJobDefinitions_jobDefinitionName :: Lens' DescribeJobDefinitions (Maybe Text)

-- | A list of up to 100 job definitions. Each entry in the list can either
--   be an ARN of the form
--   <tt>arn:aws:batch:${Region}:${Account}:job-definition/${JobDefinitionName}:${Revision}</tt>
--   or a short version using the form
--   <tt>${JobDefinitionName}:${Revision}</tt>.
describeJobDefinitions_jobDefinitions :: Lens' DescribeJobDefinitions (Maybe [Text])

-- | The <tt>nextToken</tt> value returned from a previous paginated
--   <tt>DescribeJobDefinitions</tt> request where <tt>maxResults</tt> was
--   used and the results exceeded the value of that parameter. Pagination
--   continues from the end of the previous results that returned the
--   <tt>nextToken</tt> value. This value is <tt>null</tt> when there are
--   no more results to return.
--   
--   This token should be treated as an opaque identifier that's only used
--   to retrieve the next items in a list and not for other programmatic
--   purposes.
describeJobDefinitions_nextToken :: Lens' DescribeJobDefinitions (Maybe Text)

-- | The maximum number of results returned by
--   <tt>DescribeJobDefinitions</tt> in paginated output. When this
--   parameter is used, <tt>DescribeJobDefinitions</tt> only returns
--   <tt>maxResults</tt> results in a single page and a <tt>nextToken</tt>
--   response element. The remaining results of the initial request can be
--   seen by sending another <tt>DescribeJobDefinitions</tt> request with
--   the returned <tt>nextToken</tt> value. This value can be between 1 and
--   100. If this parameter isn't used, then
--   <tt>DescribeJobDefinitions</tt> returns up to 100 results and a
--   <tt>nextToken</tt> value if applicable.
describeJobDefinitions_maxResults :: Lens' DescribeJobDefinitions (Maybe Int)

-- | The list of job definitions.
describeJobDefinitionsResponse_jobDefinitions :: Lens' DescribeJobDefinitionsResponse (Maybe [JobDefinition])

-- | The <tt>nextToken</tt> value to include in a future
--   <tt>DescribeJobDefinitions</tt> request. When the results of a
--   <tt>DescribeJobDefinitions</tt> request exceed <tt>maxResults</tt>,
--   this value can be used to retrieve the next page of results. This
--   value is <tt>null</tt> when there are no more results to return.
describeJobDefinitionsResponse_nextToken :: Lens' DescribeJobDefinitionsResponse (Maybe Text)

-- | The response's http status code.
describeJobDefinitionsResponse_httpStatus :: Lens' DescribeJobDefinitionsResponse Int

-- | Describes the queue's ability to accept new jobs. If the job queue
--   state is <tt>ENABLED</tt>, it can accept jobs. If the job queue state
--   is <tt>DISABLED</tt>, new jobs can't be added to the queue, but jobs
--   already in the queue can finish.
updateJobQueue_state :: Lens' UpdateJobQueue (Maybe JQState)

-- | The priority of the job queue. Job queues with a higher priority (or a
--   higher integer value for the <tt>priority</tt> parameter) are
--   evaluated first when associated with the same compute environment.
--   Priority is determined in descending order, for example, a job queue
--   with a priority value of <tt>10</tt> is given scheduling preference
--   over a job queue with a priority value of <tt>1</tt>. All of the
--   compute environments must be either EC2 (<tt>EC2</tt> or
--   <tt>SPOT</tt>) or Fargate (<tt>FARGATE</tt> or <tt>FARGATE_SPOT</tt>).
--   EC2 and Fargate compute environments can't be mixed.
updateJobQueue_priority :: Lens' UpdateJobQueue (Maybe Int)

-- | Details the set of compute environments mapped to a job queue and
--   their order relative to each other. This is one of the parameters used
--   by the job scheduler to determine which compute environment should run
--   a given job. Compute environments must be in the <tt>VALID</tt> state
--   before you can associate them with a job queue. All of the compute
--   environments must be either EC2 (<tt>EC2</tt> or <tt>SPOT</tt>) or
--   Fargate (<tt>FARGATE</tt> or <tt>FARGATE_SPOT</tt>). EC2 and Fargate
--   compute environments can't be mixed.
--   
--   All compute environments that are associated with a job queue must
--   share the same architecture. Batch doesn't support mixing compute
--   environment architecture types in a single job queue.
updateJobQueue_computeEnvironmentOrder :: Lens' UpdateJobQueue (Maybe [ComputeEnvironmentOrder])

-- | The name or the Amazon Resource Name (ARN) of the job queue.
updateJobQueue_jobQueue :: Lens' UpdateJobQueue Text

-- | The Amazon Resource Name (ARN) of the job queue.
updateJobQueueResponse_jobQueueArn :: Lens' UpdateJobQueueResponse (Maybe Text)

-- | The name of the job queue.
updateJobQueueResponse_jobQueueName :: Lens' UpdateJobQueueResponse (Maybe Text)

-- | The response's http status code.
updateJobQueueResponse_httpStatus :: Lens' UpdateJobQueueResponse Int

-- | The short name or full Amazon Resource Name (ARN) of the queue to
--   delete.
deleteJobQueue_jobQueue :: Lens' DeleteJobQueue Text

-- | The response's http status code.
deleteJobQueueResponse_httpStatus :: Lens' DeleteJobQueueResponse Int

-- | The state of the job queue. If the job queue state is
--   <tt>ENABLED</tt>, it is able to accept jobs. If the job queue state is
--   <tt>DISABLED</tt>, new jobs can't be added to the queue, but jobs
--   already in the queue can finish.
createJobQueue_state :: Lens' CreateJobQueue (Maybe JQState)

-- | The tags that you apply to the job queue to help you categorize and
--   organize your resources. Each tag consists of a key and an optional
--   value. For more information, see <a>Tagging your Batch resources</a>
--   in <i>Batch User Guide</i>.
createJobQueue_tags :: Lens' CreateJobQueue (Maybe (HashMap Text Text))

-- | The name of the job queue. Up to 128 letters (uppercase and
--   lowercase), numbers, and underscores are allowed.
createJobQueue_jobQueueName :: Lens' CreateJobQueue Text

-- | The priority of the job queue. Job queues with a higher priority (or a
--   higher integer value for the <tt>priority</tt> parameter) are
--   evaluated first when associated with the same compute environment.
--   Priority is determined in descending order. For example, a job queue
--   with a priority value of <tt>10</tt> is given scheduling preference
--   over a job queue with a priority value of <tt>1</tt>. All of the
--   compute environments must be either EC2 (<tt>EC2</tt> or
--   <tt>SPOT</tt>) or Fargate (<tt>FARGATE</tt> or <tt>FARGATE_SPOT</tt>);
--   EC2 and Fargate compute environments can't be mixed.
createJobQueue_priority :: Lens' CreateJobQueue Int

-- | The set of compute environments mapped to a job queue and their order
--   relative to each other. The job scheduler uses this parameter to
--   determine which compute environment should run a specific job. Compute
--   environments must be in the <tt>VALID</tt> state before you can
--   associate them with a job queue. You can associate up to three compute
--   environments with a job queue. All of the compute environments must be
--   either EC2 (<tt>EC2</tt> or <tt>SPOT</tt>) or Fargate
--   (<tt>FARGATE</tt> or <tt>FARGATE_SPOT</tt>); EC2 and Fargate compute
--   environments can't be mixed.
--   
--   All compute environments that are associated with a job queue must
--   share the same architecture. Batch doesn't support mixing compute
--   environment architecture types in a single job queue.
createJobQueue_computeEnvironmentOrder :: Lens' CreateJobQueue [ComputeEnvironmentOrder]

-- | The response's http status code.
createJobQueueResponse_httpStatus :: Lens' CreateJobQueueResponse Int

-- | The name of the job queue.
createJobQueueResponse_jobQueueName :: Lens' CreateJobQueueResponse Text

-- | The Amazon Resource Name (ARN) of the job queue.
createJobQueueResponse_jobQueueArn :: Lens' CreateJobQueueResponse Text

-- | The name and revision (<tt>name:revision</tt>) or full Amazon Resource
--   Name (ARN) of the job definition to deregister.
deregisterJobDefinition_jobDefinition :: Lens' DeregisterJobDefinition Text

-- | The response's http status code.
deregisterJobDefinitionResponse_httpStatus :: Lens' DeregisterJobDefinitionResponse Int

-- | The <tt>nextToken</tt> value returned from a previous paginated
--   <tt>DescribeJobQueues</tt> request where <tt>maxResults</tt> was used
--   and the results exceeded the value of that parameter. Pagination
--   continues from the end of the previous results that returned the
--   <tt>nextToken</tt> value. This value is <tt>null</tt> when there are
--   no more results to return.
--   
--   This token should be treated as an opaque identifier that's only used
--   to retrieve the next items in a list and not for other programmatic
--   purposes.
describeJobQueues_nextToken :: Lens' DescribeJobQueues (Maybe Text)

-- | A list of up to 100 queue names or full queue Amazon Resource Name
--   (ARN) entries.
describeJobQueues_jobQueues :: Lens' DescribeJobQueues (Maybe [Text])

-- | The maximum number of results returned by <tt>DescribeJobQueues</tt>
--   in paginated output. When this parameter is used,
--   <tt>DescribeJobQueues</tt> only returns <tt>maxResults</tt> results in
--   a single page and a <tt>nextToken</tt> response element. The remaining
--   results of the initial request can be seen by sending another
--   <tt>DescribeJobQueues</tt> request with the returned
--   <tt>nextToken</tt> value. This value can be between 1 and 100. If this
--   parameter isn't used, then <tt>DescribeJobQueues</tt> returns up to
--   100 results and a <tt>nextToken</tt> value if applicable.
describeJobQueues_maxResults :: Lens' DescribeJobQueues (Maybe Int)

-- | The <tt>nextToken</tt> value to include in a future
--   <tt>DescribeJobQueues</tt> request. When the results of a
--   <tt>DescribeJobQueues</tt> request exceed <tt>maxResults</tt>, this
--   value can be used to retrieve the next page of results. This value is
--   <tt>null</tt> when there are no more results to return.
describeJobQueuesResponse_nextToken :: Lens' DescribeJobQueuesResponse (Maybe Text)

-- | The list of job queues.
describeJobQueuesResponse_jobQueues :: Lens' DescribeJobQueuesResponse (Maybe [JobQueueDetail])

-- | The response's http status code.
describeJobQueuesResponse_httpStatus :: Lens' DescribeJobQueuesResponse Int

-- | The Amazon Resource Name (ARN) of the resource that tags are added to.
--   Batch resources that support tags are compute environments, jobs, job
--   definitions, and job queues. ARNs for child jobs of array and
--   multi-node parallel (MNP) jobs are not supported.
tagResource_resourceArn :: Lens' TagResource Text

-- | The tags that you apply to the resource to help you categorize and
--   organize your resources. Each tag consists of a key and an optional
--   value. For more information, see <a>Tagging Amazon Web Services
--   Resources</a> in <i>Amazon Web Services General Reference</i>.
tagResource_tags :: Lens' TagResource (HashMap Text Text)

-- | The response's http status code.
tagResourceResponse_httpStatus :: Lens' TagResourceResponse Int

-- | The Amazon Resource Name (ARN) of the resource from which to delete
--   tags. Batch resources that support tags are compute environments,
--   jobs, job definitions, and job queues. ARNs for child jobs of array
--   and multi-node parallel (MNP) jobs are not supported.
untagResource_resourceArn :: Lens' UntagResource Text

-- | The keys of the tags to be removed.
untagResource_tagKeys :: Lens' UntagResource (NonEmpty Text)

-- | The response's http status code.
untagResourceResponse_httpStatus :: Lens' UntagResourceResponse Int

-- | A list of up to 100 compute environment names or full Amazon Resource
--   Name (ARN) entries.
describeComputeEnvironments_computeEnvironments :: Lens' DescribeComputeEnvironments (Maybe [Text])

-- | The <tt>nextToken</tt> value returned from a previous paginated
--   <tt>DescribeComputeEnvironments</tt> request where <tt>maxResults</tt>
--   was used and the results exceeded the value of that parameter.
--   Pagination continues from the end of the previous results that
--   returned the <tt>nextToken</tt> value. This value is <tt>null</tt>
--   when there are no more results to return.
--   
--   This token should be treated as an opaque identifier that's only used
--   to retrieve the next items in a list and not for other programmatic
--   purposes.
describeComputeEnvironments_nextToken :: Lens' DescribeComputeEnvironments (Maybe Text)

-- | The maximum number of cluster results returned by
--   <tt>DescribeComputeEnvironments</tt> in paginated output. When this
--   parameter is used, <tt>DescribeComputeEnvironments</tt> only returns
--   <tt>maxResults</tt> results in a single page along with a
--   <tt>nextToken</tt> response element. The remaining results of the
--   initial request can be seen by sending another
--   <tt>DescribeComputeEnvironments</tt> request with the returned
--   <tt>nextToken</tt> value. This value can be between 1 and 100. If this
--   parameter isn't used, then <tt>DescribeComputeEnvironments</tt>
--   returns up to 100 results and a <tt>nextToken</tt> value if
--   applicable.
describeComputeEnvironments_maxResults :: Lens' DescribeComputeEnvironments (Maybe Int)

-- | The list of compute environments.
describeComputeEnvironmentsResponse_computeEnvironments :: Lens' DescribeComputeEnvironmentsResponse (Maybe [ComputeEnvironmentDetail])

-- | The <tt>nextToken</tt> value to include in a future
--   <tt>DescribeComputeEnvironments</tt> request. When the results of a
--   <tt>DescribeJobDefinitions</tt> request exceed <tt>maxResults</tt>,
--   this value can be used to retrieve the next page of results. This
--   value is <tt>null</tt> when there are no more results to return.
describeComputeEnvironmentsResponse_nextToken :: Lens' DescribeComputeEnvironmentsResponse (Maybe Text)

-- | The response's http status code.
describeComputeEnvironmentsResponse_httpStatus :: Lens' DescribeComputeEnvironmentsResponse Int

-- | The Batch job ID of the job to cancel.
cancelJob_jobId :: Lens' CancelJob Text

-- | A message to attach to the job that explains the reason for canceling
--   it. This message is returned by future DescribeJobs operations on the
--   job. This message is also recorded in the Batch activity logs.
cancelJob_reason :: Lens' CancelJob Text

-- | The response's http status code.
cancelJobResponse_httpStatus :: Lens' CancelJobResponse Int

-- | The size of the array job.
arrayProperties_size :: Lens' ArrayProperties (Maybe Int)

-- | The size of the array job. This parameter is returned for parent array
--   jobs.
arrayPropertiesDetail_size :: Lens' ArrayPropertiesDetail (Maybe Int)

-- | A summary of the number of array job children in each available job
--   status. This parameter is returned for parent array jobs.
arrayPropertiesDetail_statusSummary :: Lens' ArrayPropertiesDetail (Maybe (HashMap Text Int))

-- | The job index within the array that's associated with this job. This
--   parameter is returned for array job children.
arrayPropertiesDetail_index :: Lens' ArrayPropertiesDetail (Maybe Int)

-- | The size of the array job. This parameter is returned for parent array
--   jobs.
arrayPropertiesSummary_size :: Lens' ArrayPropertiesSummary (Maybe Int)

-- | The job index within the array that's associated with this job. This
--   parameter is returned for children of array jobs.
arrayPropertiesSummary_index :: Lens' ArrayPropertiesSummary (Maybe Int)

-- | The network interfaces associated with the job attempt.
attemptContainerDetail_networkInterfaces :: Lens' AttemptContainerDetail (Maybe [NetworkInterface])

-- | The Amazon Resource Name (ARN) of the Amazon ECS task that's
--   associated with the job attempt. Each container attempt receives a
--   task ARN when they reach the <tt>STARTING</tt> status.
attemptContainerDetail_taskArn :: Lens' AttemptContainerDetail (Maybe Text)

-- | The Amazon Resource Name (ARN) of the Amazon ECS container instance
--   that hosts the job attempt.
attemptContainerDetail_containerInstanceArn :: Lens' AttemptContainerDetail (Maybe Text)

-- | A short (255 max characters) human-readable string to provide
--   additional details about a running or stopped container.
attemptContainerDetail_reason :: Lens' AttemptContainerDetail (Maybe Text)

-- | The name of the CloudWatch Logs log stream associated with the
--   container. The log group for Batch jobs is <tt>/aws/batch/job</tt>.
--   Each container attempt receives a log stream name when they reach the
--   <tt>RUNNING</tt> status.
attemptContainerDetail_logStreamName :: Lens' AttemptContainerDetail (Maybe Text)

-- | The exit code for the job attempt. A non-zero exit code is considered
--   a failure.
attemptContainerDetail_exitCode :: Lens' AttemptContainerDetail (Maybe Int)

-- | The Unix timestamp (in milliseconds) for when the attempt was stopped
--   (when the attempt transitioned from the <tt>RUNNING</tt> state to a
--   terminal state, such as <tt>SUCCEEDED</tt> or <tt>FAILED</tt>).
attemptDetail_stoppedAt :: Lens' AttemptDetail (Maybe Integer)

-- | The Unix timestamp (in milliseconds) for when the attempt was started
--   (when the attempt transitioned from the <tt>STARTING</tt> state to the
--   <tt>RUNNING</tt> state).
attemptDetail_startedAt :: Lens' AttemptDetail (Maybe Integer)

-- | Details about the container in this job attempt.
attemptDetail_container :: Lens' AttemptDetail (Maybe AttemptContainerDetail)

-- | A short, human-readable string to provide additional details about the
--   current status of the job attempt.
attemptDetail_statusReason :: Lens' AttemptDetail (Maybe Text)

-- | The current status of the compute environment (for example,
--   <tt>CREATING</tt> or <tt>VALID</tt>).
computeEnvironmentDetail_status :: Lens' ComputeEnvironmentDetail (Maybe CEStatus)

-- | The state of the compute environment. The valid values are
--   <tt>ENABLED</tt> or <tt>DISABLED</tt>.
--   
--   If the state is <tt>ENABLED</tt>, then the Batch scheduler can attempt
--   to place jobs from an associated job queue on the compute resources
--   within the environment. If the compute environment is managed, then it
--   can scale its instances out or in automatically, based on the job
--   queue demand.
--   
--   If the state is <tt>DISABLED</tt>, then the Batch scheduler doesn't
--   attempt to place jobs within the environment. Jobs in a
--   <tt>STARTING</tt> or <tt>RUNNING</tt> state continue to progress
--   normally. Managed compute environments in the <tt>DISABLED</tt> state
--   don't scale out. However, they scale in to <tt>minvCpus</tt> value
--   after instances become idle.
computeEnvironmentDetail_state :: Lens' ComputeEnvironmentDetail (Maybe CEState)

-- | The compute resources defined for the compute environment. For more
--   information, see <a>Compute Environments</a> in the <i>Batch User
--   Guide</i>.
computeEnvironmentDetail_computeResources :: Lens' ComputeEnvironmentDetail (Maybe ComputeResource)

-- | A short, human-readable string to provide additional details about the
--   current status of the compute environment.
computeEnvironmentDetail_statusReason :: Lens' ComputeEnvironmentDetail (Maybe Text)

-- | The type of the compute environment: <tt>MANAGED</tt> or
--   <tt>UNMANAGED</tt>. For more information, see <a>Compute
--   Environments</a> in the <i>Batch User Guide</i>.
computeEnvironmentDetail_type :: Lens' ComputeEnvironmentDetail (Maybe CEType)

-- | The service role associated with the compute environment that allows
--   Batch to make calls to Amazon Web Services API operations on your
--   behalf. For more information, see <a>Batch service IAM role</a> in the
--   <i>Batch User Guide</i>.
computeEnvironmentDetail_serviceRole :: Lens' ComputeEnvironmentDetail (Maybe Text)

-- | The tags applied to the compute environment.
computeEnvironmentDetail_tags :: Lens' ComputeEnvironmentDetail (Maybe (HashMap Text Text))

-- | The name of the compute environment. Up to 128 letters (uppercase and
--   lowercase), numbers, hyphens, and underscores are allowed.
computeEnvironmentDetail_computeEnvironmentName :: Lens' ComputeEnvironmentDetail Text

-- | The Amazon Resource Name (ARN) of the compute environment.
computeEnvironmentDetail_computeEnvironmentArn :: Lens' ComputeEnvironmentDetail Text

-- | The Amazon Resource Name (ARN) of the underlying Amazon ECS cluster
--   used by the compute environment.
computeEnvironmentDetail_ecsClusterArn :: Lens' ComputeEnvironmentDetail Text

-- | The order of the compute environment. Compute environments are tried
--   in ascending order. For example, if two compute environments are
--   associated with a job queue, the compute environment with a lower
--   <tt>order</tt> integer value is tried for job placement first.
computeEnvironmentOrder_order :: Lens' ComputeEnvironmentOrder Int

-- | The Amazon Resource Name (ARN) of the compute environment.
computeEnvironmentOrder_computeEnvironment :: Lens' ComputeEnvironmentOrder Text

-- | The Amazon EC2 security groups associated with instances launched in
--   the compute environment. One or more security groups must be
--   specified, either in <tt>securityGroupIds</tt> or using a launch
--   template referenced in <tt>launchTemplate</tt>. This parameter is
--   required for jobs that are running on Fargate resources and must
--   contain at least one security group. Fargate doesn't support launch
--   templates. If security groups are specified using both
--   <tt>securityGroupIds</tt> and <tt>launchTemplate</tt>, the values in
--   <tt>securityGroupIds</tt> are used.
computeResource_securityGroupIds :: Lens' ComputeResource (Maybe [Text])

-- | The instances types that can be launched. You can specify instance
--   families to launch any instance type within those families (for
--   example, <tt>c5</tt> or <tt>p3</tt>), or you can specify specific
--   sizes within a family (such as <tt>c5.8xlarge</tt>). You can also
--   choose <tt>optimal</tt> to select instance types (from the C4, M4, and
--   R4 instance families) that match the demand of your job queues.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources, and shouldn't be specified.
--   
--   When you create a compute environment, the instance types that you
--   select for the compute environment must share the same architecture.
--   For example, you can't mix x86 and ARM instances in the same compute
--   environment.
--   
--   Currently, <tt>optimal</tt> uses instance types from the C4, M4, and
--   R4 instance families. In Regions that don't have instance types from
--   those instance families, instance types from the C5, M5. and R5
--   instance families are used.
computeResource_instanceTypes :: Lens' ComputeResource (Maybe [Text])

-- | The Amazon ECS instance profile applied to Amazon EC2 instances in a
--   compute environment. You can specify the short name or full Amazon
--   Resource Name (ARN) of an instance profile. For example, <tt>
--   ecsInstanceRole </tt> or
--   <tt>arn:aws:iam::&lt;aws_account_id&gt;:instance-profile/ecsInstanceRole
--   </tt>. For more information, see <a>Amazon ECS Instance Role</a> in
--   the <i>Batch User Guide</i>.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources, and shouldn't be specified.
computeResource_instanceRole :: Lens' ComputeResource (Maybe Text)

-- | The Amazon EC2 key pair that's used for instances launched in the
--   compute environment. You can use this key pair to log in to your
--   instances with SSH.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources, and shouldn't be specified.
computeResource_ec2KeyPair :: Lens' ComputeResource (Maybe Text)

-- | The minimum number of Amazon EC2 vCPUs that an environment should
--   maintain (even if the compute environment is <tt>DISABLED</tt>).
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources, and shouldn't be specified.
computeResource_minvCpus :: Lens' ComputeResource (Maybe Int)

-- | Provides information used to select Amazon Machine Images (AMIs) for
--   EC2 instances in the compute environment. If <tt>Ec2Configuration</tt>
--   isn't specified, the default is <tt>ECS_AL1</tt>.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources, and shouldn't be specified.
computeResource_ec2Configuration :: Lens' ComputeResource (Maybe [Ec2Configuration])

-- | The maximum percentage that a Spot Instance price can be when compared
--   with the On-Demand price for that instance type before instances are
--   launched. For example, if your maximum percentage is 20%, then the
--   Spot price must be less than 20% of the current On-Demand price for
--   that Amazon EC2 instance. You always pay the lowest (market) price and
--   never more than your maximum percentage. If you leave this field
--   empty, the default value is 100% of the On-Demand price.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources, and shouldn't be specified.
computeResource_bidPercentage :: Lens' ComputeResource (Maybe Int)

-- | The Amazon Resource Name (ARN) of the Amazon EC2 Spot Fleet IAM role
--   applied to a <tt>SPOT</tt> compute environment. This role is required
--   if the allocation strategy set to <tt>BEST_FIT</tt> or if the
--   allocation strategy isn't specified. For more information, see
--   <a>Amazon EC2 Spot Fleet Role</a> in the <i>Batch User Guide</i>.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources, and shouldn't be specified.
--   
--   To tag your Spot Instances on creation, the Spot Fleet IAM role
--   specified here must use the newer <b>AmazonEC2SpotFleetTaggingRole</b>
--   managed policy. The previously recommended
--   <b>AmazonEC2SpotFleetRole</b> managed policy doesn't have the required
--   permissions to tag Spot Instances. For more information, see <a>Spot
--   Instances not tagged on creation</a> in the <i>Batch User Guide</i>.
computeResource_spotIamFleetRole :: Lens' ComputeResource (Maybe Text)

-- | The Amazon Machine Image (AMI) ID used for instances launched in the
--   compute environment. This parameter is overridden by the
--   <tt>imageIdOverride</tt> member of the <tt>Ec2Configuration</tt>
--   structure.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources, and shouldn't be specified.
--   
--   The AMI that you choose for a compute environment must match the
--   architecture of the instance types that you intend to use for that
--   compute environment. For example, if your compute environment uses A1
--   instance types, the compute resource AMI that you choose must support
--   ARM instances. Amazon ECS vends both x86 and ARM versions of the
--   Amazon ECS-optimized Amazon Linux 2 AMI. For more information, see
--   <a>Amazon ECS-optimized Amazon Linux 2 AMI</a> in the <i>Amazon
--   Elastic Container Service Developer Guide</i>.
computeResource_imageId :: Lens' ComputeResource (Maybe Text)

-- | The launch template to use for your compute resources. Any other
--   compute resource parameters that you specify in a
--   CreateComputeEnvironment API operation override the same parameters in
--   the launch template. You must specify either the launch template ID or
--   launch template name in the request, but not both. For more
--   information, see <a>Launch Template Support</a> in the <i>Batch User
--   Guide</i>.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources, and shouldn't be specified.
computeResource_launchTemplate :: Lens' ComputeResource (Maybe LaunchTemplateSpecification)

-- | The desired number of Amazon EC2 vCPUS in the compute environment.
--   Batch modifies this value between the minimum and maximum values,
--   based on job queue demand.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources, and shouldn't be specified.
computeResource_desiredvCpus :: Lens' ComputeResource (Maybe Int)

-- | The allocation strategy to use for the compute resource if not enough
--   instances of the best fitting instance type can be allocated. This
--   might be because of availability of the instance type in the Region or
--   <a>Amazon EC2 service limits</a>. For more information, see
--   <a>Allocation Strategies</a> in the <i>Batch User Guide</i>.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources, and shouldn't be specified.
--   
--   <ul>
--   <li><i>BEST_FIT (default)</i> Batch selects an instance type that best
--   fits the needs of the jobs with a preference for the lowest-cost
--   instance type. If additional instances of the selected instance type
--   aren't available, Batch waits for the additional instances to be
--   available. If there aren't enough instances available, or if the user
--   is reaching <a>Amazon EC2 service limits</a> then additional jobs
--   aren't run until the currently running jobs have completed. This
--   allocation strategy keeps costs lower but can limit scaling. If you
--   are using Spot Fleets with <tt>BEST_FIT</tt> then the Spot Fleet IAM
--   Role must be specified.</li>
--   <li><i>BEST_FIT_PROGRESSIVE</i> Batch will select additional instance
--   types that are large enough to meet the requirements of the jobs in
--   the queue, with a preference for instance types with a lower cost per
--   unit vCPU. If additional instances of the previously selected instance
--   types aren't available, Batch will select new instance types.</li>
--   <li><i>SPOT_CAPACITY_OPTIMIZED</i> Batch will select one or more
--   instance types that are large enough to meet the requirements of the
--   jobs in the queue, with a preference for instance types that are less
--   likely to be interrupted. This allocation strategy is only available
--   for Spot Instance compute resources.</li>
--   </ul>
--   
--   With both <tt>BEST_FIT_PROGRESSIVE</tt> and
--   <tt>SPOT_CAPACITY_OPTIMIZED</tt> strategies, Batch might need to go
--   above <tt>maxvCpus</tt> to meet your capacity requirements. In this
--   event, Batch never exceeds <tt>maxvCpus</tt> by more than a single
--   instance.
computeResource_allocationStrategy :: Lens' ComputeResource (Maybe CRAllocationStrategy)

-- | The Amazon EC2 placement group to associate with your compute
--   resources. If you intend to submit multi-node parallel jobs to your
--   compute environment, you should consider creating a cluster placement
--   group and associate it with your compute resources. This keeps your
--   multi-node parallel job on a logical grouping of instances within a
--   single Availability Zone with high network flow potential. For more
--   information, see <a>Placement Groups</a> in the <i>Amazon EC2 User
--   Guide for Linux Instances</i>.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources, and shouldn't be specified.
computeResource_placementGroup :: Lens' ComputeResource (Maybe Text)

-- | Key-value pair tags to be applied to EC2 resources that are launched
--   in the compute environment. For Batch, these take the form of
--   "String1": "String2", where String1 is the tag key and String2 is the
--   tag value−for example, <tt>{ "Name": "Batch Instance - C4OnDemand"
--   }</tt>. This is helpful for recognizing your Batch instances in the
--   Amazon EC2 console. These tags can't be updated or removed after the
--   compute environment is created.Aany changes to these tags require that
--   you create a new compute environment and remove the old compute
--   environment. These tags aren't seen when using the Batch
--   <tt>ListTagsForResource</tt> API operation.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources, and shouldn't be specified.
computeResource_tags :: Lens' ComputeResource (Maybe (HashMap Text Text))

-- | The type of compute environment: <tt>EC2</tt>, <tt>SPOT</tt>,
--   <tt>FARGATE</tt>, or <tt>FARGATE_SPOT</tt>. For more information, see
--   <a>Compute Environments</a> in the <i>Batch User Guide</i>.
--   
--   If you choose <tt>SPOT</tt>, you must also specify an Amazon EC2 Spot
--   Fleet role with the <tt>spotIamFleetRole</tt> parameter. For more
--   information, see <a>Amazon EC2 Spot Fleet role</a> in the <i>Batch
--   User Guide</i>.
computeResource_type :: Lens' ComputeResource CRType

-- | The maximum number of Amazon EC2 vCPUs that a compute environment can
--   reach.
--   
--   With both <tt>BEST_FIT_PROGRESSIVE</tt> and
--   <tt>SPOT_CAPACITY_OPTIMIZED</tt> allocation strategies, Batch might
--   need to exceed <tt>maxvCpus</tt> to meet your capacity requirements.
--   In this event, Batch never exceeds <tt>maxvCpus</tt> by more than a
--   single instance. For example, no more than a single instance from
--   among those specified in your compute environment is allocated.
computeResource_maxvCpus :: Lens' ComputeResource Int

-- | The VPC subnets where the compute resources are launched. These
--   subnets must be within the same VPC. Fargate compute resources can
--   contain up to 16 subnets. For more information, see <a>VPCs and
--   Subnets</a> in the <i>Amazon VPC User Guide</i>.
computeResource_subnets :: Lens' ComputeResource [Text]

-- | The Amazon EC2 security groups associated with instances launched in
--   the compute environment. This parameter is required for Fargate
--   compute resources, where it can contain up to 5 security groups. This
--   can't be specified for EC2 compute resources. Providing an empty list
--   is handled as if this parameter wasn't specified and no change is
--   made.
computeResourceUpdate_securityGroupIds :: Lens' ComputeResourceUpdate (Maybe [Text])

-- | The VPC subnets where the compute resources are launched. Fargate
--   compute resources can contain up to 16 subnets. Providing an empty
--   list will be handled as if this parameter wasn't specified and no
--   change is made. This can't be specified for EC2 compute resources. For
--   more information, see <a>VPCs and Subnets</a> in the <i>Amazon VPC
--   User Guide</i>.
computeResourceUpdate_subnets :: Lens' ComputeResourceUpdate (Maybe [Text])

-- | The minimum number of Amazon EC2 vCPUs that an environment should
--   maintain.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources, and shouldn't be specified.
computeResourceUpdate_minvCpus :: Lens' ComputeResourceUpdate (Maybe Int)

-- | The maximum number of Amazon EC2 vCPUs that an environment can reach.
--   
--   With both <tt>BEST_FIT_PROGRESSIVE</tt> and
--   <tt>SPOT_CAPACITY_OPTIMIZED</tt> allocation strategies, Batch might
--   need to exceed <tt>maxvCpus</tt> to meet your capacity requirements.
--   In this event, Batch never exceeds <tt>maxvCpus</tt> by more than a
--   single instance. That is, no more than a single instance from among
--   those specified in your compute environment.
computeResourceUpdate_maxvCpus :: Lens' ComputeResourceUpdate (Maybe Int)

-- | The desired number of Amazon EC2 vCPUS in the compute environment.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources, and shouldn't be specified.
computeResourceUpdate_desiredvCpus :: Lens' ComputeResourceUpdate (Maybe Int)

-- | The image used to start the container.
containerDetail_image :: Lens' ContainerDetail (Maybe Text)

-- | The command that's passed to the container.
containerDetail_command :: Lens' ContainerDetail (Maybe [Text])

-- | The secrets to pass to the container. For more information, see
--   <a>Specifying sensitive data</a> in the <i>Batch User Guide</i>.
containerDetail_secrets :: Lens' ContainerDetail (Maybe [Secret])

-- | The environment variables to pass to a container.
--   
--   Environment variables must not start with <tt>AWS_BATCH</tt>; this
--   naming convention is reserved for variables that are set by the Batch
--   service.
containerDetail_environment :: Lens' ContainerDetail (Maybe [KeyValuePair])

-- | The network interfaces associated with the job.
containerDetail_networkInterfaces :: Lens' ContainerDetail (Maybe [NetworkInterface])

-- | The Amazon Resource Name (ARN) of the Amazon ECS task that's
--   associated with the container job. Each container attempt receives a
--   task ARN when they reach the <tt>STARTING</tt> status.
containerDetail_taskArn :: Lens' ContainerDetail (Maybe Text)

-- | A list of <tt>ulimit</tt> values to set in the container. This
--   parameter maps to <tt>Ulimits</tt> in the <a>Create a container</a>
--   section of the <a>Docker Remote API</a> and the <tt>--ulimit</tt>
--   option to <a>docker run</a>.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources.
containerDetail_ulimits :: Lens' ContainerDetail (Maybe [Ulimit])

-- | The Amazon Resource Name (ARN) of the container instance that the
--   container is running on.
containerDetail_containerInstanceArn :: Lens' ContainerDetail (Maybe Text)

-- | The Amazon Resource Name (ARN) of the execution role that Batch can
--   assume. For more information, see <a>Batch execution IAM role</a> in
--   the <i>Batch User Guide</i>.
containerDetail_executionRoleArn :: Lens' ContainerDetail (Maybe Text)

-- | When this parameter is true, the container is given elevated
--   permissions on the host container instance (similar to the
--   <tt>root</tt> user). The default value is false.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources and shouldn't be provided, or specified as false.
containerDetail_privileged :: Lens' ContainerDetail (Maybe Bool)

-- | The Amazon Resource Name (ARN) associated with the job upon execution.
containerDetail_jobRoleArn :: Lens' ContainerDetail (Maybe Text)

-- | The type and amount of resources to assign to a container. The
--   supported resources include <tt>GPU</tt>, <tt>MEMORY</tt>, and
--   <tt>VCPU</tt>.
containerDetail_resourceRequirements :: Lens' ContainerDetail (Maybe [ResourceRequirement])

-- | The instance type of the underlying host infrastructure of a
--   multi-node parallel job.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources.
containerDetail_instanceType :: Lens' ContainerDetail (Maybe Text)

-- | For jobs run on EC2 resources that didn't specify memory requirements
--   using <tt>ResourceRequirement</tt>, the number of MiB of memory
--   reserved for the job. For other jobs, including all run on Fargate
--   resources, see <tt>resourceRequirements</tt>.
containerDetail_memory :: Lens' ContainerDetail (Maybe Int)

-- | The user name to use inside the container. This parameter maps to
--   <tt>User</tt> in the <a>Create a container</a> section of the
--   <a>Docker Remote API</a> and the <tt>--user</tt> option to <a>docker
--   run</a>.
containerDetail_user :: Lens' ContainerDetail (Maybe Text)

-- | The log configuration specification for the container.
--   
--   This parameter maps to <tt>LogConfig</tt> in the <a>Create a
--   container</a> section of the <a>Docker Remote API</a> and the
--   <tt>--log-driver</tt> option to <a>docker run</a>. By default,
--   containers use the same logging driver that the Docker daemon uses.
--   However, the container might use a different logging driver than the
--   Docker daemon by specifying a log driver with this parameter in the
--   container definition. To use a different logging driver for a
--   container, the log system must be configured properly on the container
--   instance. Or, alternatively, it must be configured on a different log
--   server for remote logging options. For more information on the options
--   for different supported log drivers, see <a>Configure logging
--   drivers</a> in the Docker documentation.
--   
--   Batch currently supports a subset of the logging drivers available to
--   the Docker daemon (shown in the LogConfiguration data type).
--   Additional log drivers might be available in future releases of the
--   Amazon ECS container agent.
--   
--   This parameter requires version 1.18 of the Docker Remote API or
--   greater on your container instance. To check the Docker Remote API
--   version on your container instance, log into your container instance
--   and run the following command: <tt>sudo docker version | grep "Server
--   API version"</tt>
--   
--   The Amazon ECS container agent running on a container instance must
--   register the logging drivers available on that instance with the
--   <tt>ECS_AVAILABLE_LOGGING_DRIVERS</tt> environment variable before
--   containers placed on that instance can use these log configuration
--   options. For more information, see <a>Amazon ECS Container Agent
--   Configuration</a> in the <i>Amazon Elastic Container Service Developer
--   Guide</i>.
containerDetail_logConfiguration :: Lens' ContainerDetail (Maybe LogConfiguration)

-- | Linux-specific modifications that are applied to the container, such
--   as details for device mappings.
containerDetail_linuxParameters :: Lens' ContainerDetail (Maybe LinuxParameters)

-- | A short (255 max characters) human-readable string to provide
--   additional details about a running or stopped container.
containerDetail_reason :: Lens' ContainerDetail (Maybe Text)

-- | The name of the CloudWatch Logs log stream associated with the
--   container. The log group for Batch jobs is <tt>/aws/batch/job</tt>.
--   Each container attempt receives a log stream name when they reach the
--   <tt>RUNNING</tt> status.
containerDetail_logStreamName :: Lens' ContainerDetail (Maybe Text)

-- | The mount points for data volumes in your container.
containerDetail_mountPoints :: Lens' ContainerDetail (Maybe [MountPoint])

-- | The exit code to return upon completion.
containerDetail_exitCode :: Lens' ContainerDetail (Maybe Int)

-- | The platform configuration for jobs that are running on Fargate
--   resources. Jobs that are running on EC2 resources must not specify
--   this parameter.
containerDetail_fargatePlatformConfiguration :: Lens' ContainerDetail (Maybe FargatePlatformConfiguration)

-- | The number of vCPUs reserved for the container. For jobs that run on
--   EC2 resources, you can specify the vCPU requirement for the job using
--   <tt>resourceRequirements</tt>, but you can't specify the vCPU
--   requirements in both the <tt>vcpus</tt> and
--   <tt>resourceRequirement</tt> object. This parameter maps to
--   <tt>CpuShares</tt> in the <a>Create a container</a> section of the
--   <a>Docker Remote API</a> and the <tt>--cpu-shares</tt> option to
--   <a>docker run</a>. Each vCPU is equivalent to 1,024 CPU shares. You
--   must specify at least one vCPU. This is required but can be specified
--   in several places. It must be specified for each node at least once.
--   
--   This parameter isn't applicable to jobs that run on Fargate resources.
--   For jobs that run on Fargate resources, you must specify the vCPU
--   requirement for the job using <tt>resourceRequirements</tt>.
containerDetail_vcpus :: Lens' ContainerDetail (Maybe Int)

-- | When this parameter is true, the container is given read-only access
--   to its root file system. This parameter maps to
--   <tt>ReadonlyRootfs</tt> in the <a>Create a container</a> section of
--   the <a>Docker Remote API</a> and the <tt>--read-only</tt> option to
--   <a>docker run</a> .
containerDetail_readonlyRootFilesystem :: Lens' ContainerDetail (Maybe Bool)

-- | A list of volumes associated with the job.
containerDetail_volumes :: Lens' ContainerDetail (Maybe [Volume])

-- | The network configuration for jobs that are running on Fargate
--   resources. Jobs that are running on EC2 resources must not specify
--   this parameter.
containerDetail_networkConfiguration :: Lens' ContainerDetail (Maybe NetworkConfiguration)

-- | The command to send to the container that overrides the default
--   command from the Docker image or the job definition.
containerOverrides_command :: Lens' ContainerOverrides (Maybe [Text])

-- | The environment variables to send to the container. You can add new
--   environment variables, which are added to the container at launch, or
--   you can override the existing environment variables from the Docker
--   image or the job definition.
--   
--   Environment variables must not start with <tt>AWS_BATCH</tt>; this
--   naming convention is reserved for variables that are set by the Batch
--   service.
containerOverrides_environment :: Lens' ContainerOverrides (Maybe [KeyValuePair])

-- | The type and amount of resources to assign to a container. This
--   overrides the settings in the job definition. The supported resources
--   include <tt>GPU</tt>, <tt>MEMORY</tt>, and <tt>VCPU</tt>.
containerOverrides_resourceRequirements :: Lens' ContainerOverrides (Maybe [ResourceRequirement])

-- | The instance type to use for a multi-node parallel job.
--   
--   This parameter isn't applicable to single-node container jobs or jobs
--   that run on Fargate resources, and shouldn't be provided.
containerOverrides_instanceType :: Lens' ContainerOverrides (Maybe Text)

-- | This parameter indicates the amount of memory (in MiB) that's reserved
--   for the job. It overrides the <tt>memory</tt> parameter set in the job
--   definition, but doesn't override any memory requirement specified in
--   the <tt>ResourceRequirement</tt> structure in the job definition. To
--   override memory requirements that are specified in the
--   <tt>ResourceRequirement</tt> structure in the job definition,
--   <tt>ResourceRequirement</tt> must be specified in the
--   <tt>SubmitJob</tt> request, with <tt>type</tt> set to <tt>MEMORY</tt>
--   and <tt>value</tt> set to the new value.
--   
--   This parameter is supported for jobs that run on EC2 resources, but
--   isn't supported for jobs that run on Fargate resources. For these
--   resources, use <tt>resourceRequirement</tt> instead.
containerOverrides_memory :: Lens' ContainerOverrides (Maybe Int)

-- | This parameter indicates the number of vCPUs reserved for the
--   container.It overrides the <tt>vcpus</tt> parameter that's set in the
--   job definition, but doesn't override any vCPU requirement specified in
--   the <tt>resourceRequirement</tt> structure in the job definition. To
--   override vCPU requirements that are specified in the
--   <tt>ResourceRequirement</tt> structure in the job definition,
--   <tt>ResourceRequirement</tt> must be specified in the
--   <tt>SubmitJob</tt> request, with <tt>type</tt> set to <tt>VCPU</tt>
--   and <tt>value</tt> set to the new value.
--   
--   This parameter maps to <tt>CpuShares</tt> in the <a>Create a
--   container</a> section of the <a>Docker Remote API</a> and the
--   <tt>--cpu-shares</tt> option to <a>docker run</a>. Each vCPU is
--   equivalent to 1,024 CPU shares. You must specify at least one vCPU.
--   
--   This parameter is supported for jobs that run on EC2 resources, but
--   isn't supported for jobs that run on Fargate resources. For Fargate
--   resources, you can only use <tt>resourceRequirement</tt>. For EC2
--   resources, you can use either this parameter or
--   <tt>resourceRequirement</tt> but not both.
containerOverrides_vcpus :: Lens' ContainerOverrides (Maybe Int)

-- | The image used to start a container. This string is passed directly to
--   the Docker daemon. Images in the Docker Hub registry are available by
--   default. Other repositories are specified with <tt>
--   repository-url/image:tag </tt>. Up to 255 letters (uppercase and
--   lowercase), numbers, hyphens, underscores, colons, periods, forward
--   slashes, and number signs are allowed. This parameter maps to
--   <tt>Image</tt> in the <a>Create a container</a> section of the
--   <a>Docker Remote API</a> and the <tt>IMAGE</tt> parameter of <a>docker
--   run</a>.
--   
--   Docker image architecture must match the processor architecture of the
--   compute resources that they're scheduled on. For example, ARM-based
--   Docker images can only run on ARM-based compute resources.
--   
--   <ul>
--   <li>Images in Amazon ECR repositories use the full registry and
--   repository URI (for example,
--   <tt>012345678910.dkr.ecr.&lt;region-name&gt;.amazonaws.com/&lt;repository-name&gt;</tt>).</li>
--   <li>Images in official repositories on Docker Hub use a single name
--   (for example, <tt>ubuntu</tt> or <tt>mongo</tt>).</li>
--   <li>Images in other repositories on Docker Hub are qualified with an
--   organization name (for example,
--   <tt>amazon/amazon-ecs-agent</tt>).</li>
--   <li>Images in other online repositories are qualified further by a
--   domain name (for example, <tt>quay.io/assemblyline/ubuntu</tt>).</li>
--   </ul>
containerProperties_image :: Lens' ContainerProperties (Maybe Text)

-- | The command that's passed to the container. This parameter maps to
--   <tt>Cmd</tt> in the <a>Create a container</a> section of the <a>Docker
--   Remote API</a> and the <tt>COMMAND</tt> parameter to <a>docker
--   run</a>. For more information, see
--   <a>https://docs.docker.com/engine/reference/builder/#cmd</a>.
containerProperties_command :: Lens' ContainerProperties (Maybe [Text])

-- | The secrets for the container. For more information, see <a>Specifying
--   sensitive data</a> in the <i>Batch User Guide</i>.
containerProperties_secrets :: Lens' ContainerProperties (Maybe [Secret])

-- | The environment variables to pass to a container. This parameter maps
--   to <tt>Env</tt> in the <a>Create a container</a> section of the
--   <a>Docker Remote API</a> and the <tt>--env</tt> option to <a>docker
--   run</a>.
--   
--   We don't recommend using plaintext environment variables for sensitive
--   information, such as credential data.
--   
--   Environment variables must not start with <tt>AWS_BATCH</tt>; this
--   naming convention is reserved for variables that are set by the Batch
--   service.
containerProperties_environment :: Lens' ContainerProperties (Maybe [KeyValuePair])

-- | A list of <tt>ulimits</tt> to set in the container. This parameter
--   maps to <tt>Ulimits</tt> in the <a>Create a container</a> section of
--   the <a>Docker Remote API</a> and the <tt>--ulimit</tt> option to
--   <a>docker run</a>.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources and shouldn't be provided.
containerProperties_ulimits :: Lens' ContainerProperties (Maybe [Ulimit])

-- | The Amazon Resource Name (ARN) of the execution role that Batch can
--   assume. For jobs that run on Fargate resources, you must provide an
--   execution role. For more information, see <a>Batch execution IAM
--   role</a> in the <i>Batch User Guide</i>.
containerProperties_executionRoleArn :: Lens' ContainerProperties (Maybe Text)

-- | When this parameter is true, the container is given elevated
--   permissions on the host container instance (similar to the
--   <tt>root</tt> user). This parameter maps to <tt>Privileged</tt> in the
--   <a>Create a container</a> section of the <a>Docker Remote API</a> and
--   the <tt>--privileged</tt> option to <a>docker run</a>. The default
--   value is false.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources and shouldn't be provided, or specified as false.
containerProperties_privileged :: Lens' ContainerProperties (Maybe Bool)

-- | The Amazon Resource Name (ARN) of the IAM role that the container can
--   assume for Amazon Web Services permissions. For more information, see
--   <a>IAM Roles for Tasks</a> in the <i>Amazon Elastic Container Service
--   Developer Guide</i>.
containerProperties_jobRoleArn :: Lens' ContainerProperties (Maybe Text)

-- | The type and amount of resources to assign to a container. The
--   supported resources include <tt>GPU</tt>, <tt>MEMORY</tt>, and
--   <tt>VCPU</tt>.
containerProperties_resourceRequirements :: Lens' ContainerProperties (Maybe [ResourceRequirement])

-- | The instance type to use for a multi-node parallel job. All node
--   groups in a multi-node parallel job must use the same instance type.
--   
--   This parameter isn't applicable to single-node container jobs or jobs
--   that run on Fargate resources, and shouldn't be provided.
containerProperties_instanceType :: Lens' ContainerProperties (Maybe Text)

-- | This parameter indicates the memory hard limit (in MiB) for a
--   container. If your container attempts to exceed the specified number,
--   it's terminated. You must specify at least 4 MiB of memory for a job
--   using this parameter. The memory hard limit can be specified in
--   several places. It must be specified for each node at least once.
--   
--   This parameter maps to <tt>Memory</tt> in the <a>Create a
--   container</a> section of the <a>Docker Remote API</a> and the
--   <tt>--memory</tt> option to <a>docker run</a>.
--   
--   This parameter is supported on EC2 resources but isn't supported on
--   Fargate resources. For Fargate resources, you should specify the
--   memory requirement using <tt>resourceRequirement</tt>. You can also do
--   this for EC2 resources.
--   
--   If you're trying to maximize your resource utilization by providing
--   your jobs as much memory as possible for a particular instance type,
--   see <a>Memory Management</a> in the <i>Batch User Guide</i>.
containerProperties_memory :: Lens' ContainerProperties (Maybe Int)

-- | The user name to use inside the container. This parameter maps to
--   <tt>User</tt> in the <a>Create a container</a> section of the
--   <a>Docker Remote API</a> and the <tt>--user</tt> option to <a>docker
--   run</a>.
containerProperties_user :: Lens' ContainerProperties (Maybe Text)

-- | The log configuration specification for the container.
--   
--   This parameter maps to <tt>LogConfig</tt> in the <a>Create a
--   container</a> section of the <a>Docker Remote API</a> and the
--   <tt>--log-driver</tt> option to <a>docker run</a>. By default,
--   containers use the same logging driver that the Docker daemon uses.
--   However the container might use a different logging driver than the
--   Docker daemon by specifying a log driver with this parameter in the
--   container definition. To use a different logging driver for a
--   container, the log system must be configured properly on the container
--   instance (or on a different log server for remote logging options).
--   For more information on the options for different supported log
--   drivers, see <a>Configure logging drivers</a> in the Docker
--   documentation.
--   
--   Batch currently supports a subset of the logging drivers available to
--   the Docker daemon (shown in the LogConfiguration data type).
--   
--   This parameter requires version 1.18 of the Docker Remote API or
--   greater on your container instance. To check the Docker Remote API
--   version on your container instance, log into your container instance
--   and run the following command: <tt>sudo docker version | grep "Server
--   API version"</tt>
--   
--   The Amazon ECS container agent running on a container instance must
--   register the logging drivers available on that instance with the
--   <tt>ECS_AVAILABLE_LOGGING_DRIVERS</tt> environment variable before
--   containers placed on that instance can use these log configuration
--   options. For more information, see <a>Amazon ECS Container Agent
--   Configuration</a> in the <i>Amazon Elastic Container Service Developer
--   Guide</i>.
containerProperties_logConfiguration :: Lens' ContainerProperties (Maybe LogConfiguration)

-- | Linux-specific modifications that are applied to the container, such
--   as details for device mappings.
containerProperties_linuxParameters :: Lens' ContainerProperties (Maybe LinuxParameters)

-- | The mount points for data volumes in your container. This parameter
--   maps to <tt>Volumes</tt> in the <a>Create a container</a> section of
--   the <a>Docker Remote API</a> and the <tt>--volume</tt> option to
--   <a>docker run</a>.
containerProperties_mountPoints :: Lens' ContainerProperties (Maybe [MountPoint])

-- | The platform configuration for jobs that are running on Fargate
--   resources. Jobs that are running on EC2 resources must not specify
--   this parameter.
containerProperties_fargatePlatformConfiguration :: Lens' ContainerProperties (Maybe FargatePlatformConfiguration)

-- | The number of vCPUs reserved for the job. Each vCPU is equivalent to
--   1,024 CPU shares. This parameter maps to <tt>CpuShares</tt> in the
--   <a>Create a container</a> section of the <a>Docker Remote API</a> and
--   the <tt>--cpu-shares</tt> option to <a>docker run</a>. The number of
--   vCPUs must be specified but can be specified in several places. You
--   must specify it at least once for each node.
--   
--   This parameter is supported on EC2 resources but isn't supported for
--   jobs that run on Fargate resources. For these resources, use
--   <tt>resourceRequirement</tt> instead. You can use this parameter or
--   <tt>resourceRequirements</tt> structure but not both.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources and shouldn't be provided. For jobs that run on Fargate
--   resources, you must specify the vCPU requirement for the job using
--   <tt>resourceRequirements</tt>.
containerProperties_vcpus :: Lens' ContainerProperties (Maybe Int)

-- | When this parameter is true, the container is given read-only access
--   to its root file system. This parameter maps to
--   <tt>ReadonlyRootfs</tt> in the <a>Create a container</a> section of
--   the <a>Docker Remote API</a> and the <tt>--read-only</tt> option to
--   <tt>docker run</tt>.
containerProperties_readonlyRootFilesystem :: Lens' ContainerProperties (Maybe Bool)

-- | A list of data volumes used in a job.
containerProperties_volumes :: Lens' ContainerProperties (Maybe [Volume])

-- | The network configuration for jobs that are running on Fargate
--   resources. Jobs that are running on EC2 resources must not specify
--   this parameter.
containerProperties_networkConfiguration :: Lens' ContainerProperties (Maybe NetworkConfiguration)

-- | A short (255 max characters) human-readable string to provide
--   additional details about a running or stopped container.
containerSummary_reason :: Lens' ContainerSummary (Maybe Text)

-- | The exit code to return upon completion.
containerSummary_exitCode :: Lens' ContainerSummary (Maybe Int)

-- | The path inside the container that's used to expose the host device.
--   By default, the <tt>hostPath</tt> value is used.
device_containerPath :: Lens' Device (Maybe Text)

-- | The explicit permissions to provide to the container for the device.
--   By default, the container has permissions for <tt>read</tt>,
--   <tt>write</tt>, and <tt>mknod</tt> for the device.
device_permissions :: Lens' Device (Maybe [DeviceCgroupPermission])

-- | The path for the device on the host container instance.
device_hostPath :: Lens' Device Text

-- | The Amazon EFS access point ID to use. If an access point is
--   specified, the root directory value specified in the
--   <tt>EFSVolumeConfiguration</tt> must either be omitted or set to
--   <tt>/</tt> which will enforce the path set on the EFS access point. If
--   an access point is used, transit encryption must be enabled in the
--   <tt>EFSVolumeConfiguration</tt>. For more information, see <a>Working
--   with Amazon EFS Access Points</a> in the <i>Amazon Elastic File System
--   User Guide</i>.
eFSAuthorizationConfig_accessPointId :: Lens' EFSAuthorizationConfig (Maybe Text)

-- | Whether or not to use the Batch job IAM role defined in a job
--   definition when mounting the Amazon EFS file system. If enabled,
--   transit encryption must be enabled in the
--   <tt>EFSVolumeConfiguration</tt>. If this parameter is omitted, the
--   default value of <tt>DISABLED</tt> is used. For more information, see
--   <a>Using Amazon EFS Access Points</a> in the <i>Batch User Guide</i>.
--   EFS IAM authorization requires that <tt>TransitEncryption</tt> be
--   <tt>ENABLED</tt> and that a <tt>JobRoleArn</tt> is specified.
eFSAuthorizationConfig_iam :: Lens' EFSAuthorizationConfig (Maybe EFSAuthorizationConfigIAM)

-- | The directory within the Amazon EFS file system to mount as the root
--   directory inside the host. If this parameter is omitted, the root of
--   the Amazon EFS volume is used instead. Specifying <tt>/</tt> has the
--   same effect as omitting this parameter. The maximum length is 4,096
--   characters.
--   
--   If an EFS access point is specified in the
--   <tt>authorizationConfig</tt>, the root directory parameter must either
--   be omitted or set to <tt>/</tt>, which enforces the path set on the
--   Amazon EFS access point.
eFSVolumeConfiguration_rootDirectory :: Lens' EFSVolumeConfiguration (Maybe Text)

-- | Determines whether to enable encryption for Amazon EFS data in transit
--   between the Amazon ECS host and the Amazon EFS server. Transit
--   encryption must be enabled if Amazon EFS IAM authorization is used. If
--   this parameter is omitted, the default value of <tt>DISABLED</tt> is
--   used. For more information, see <a>Encrypting data in transit</a> in
--   the <i>Amazon Elastic File System User Guide</i>.
eFSVolumeConfiguration_transitEncryption :: Lens' EFSVolumeConfiguration (Maybe EFSTransitEncryption)

-- | The authorization configuration details for the Amazon EFS file
--   system.
eFSVolumeConfiguration_authorizationConfig :: Lens' EFSVolumeConfiguration (Maybe EFSAuthorizationConfig)

-- | The port to use when sending encrypted data between the Amazon ECS
--   host and the Amazon EFS server. If you don't specify a transit
--   encryption port, it uses the port selection strategy that the Amazon
--   EFS mount helper uses. The value must be between 0 and 65,535. For
--   more information, see <a>EFS Mount Helper</a> in the <i>Amazon Elastic
--   File System User Guide</i>.
eFSVolumeConfiguration_transitEncryptionPort :: Lens' EFSVolumeConfiguration (Maybe Int)

-- | The Amazon EFS file system ID to use.
eFSVolumeConfiguration_fileSystemId :: Lens' EFSVolumeConfiguration Text

-- | The AMI ID used for instances launched in the compute environment that
--   match the image type. This setting overrides the <tt>imageId</tt> set
--   in the <tt>computeResource</tt> object.
ec2Configuration_imageIdOverride :: Lens' Ec2Configuration (Maybe Text)

-- | The image type to match with the instance type to select an AMI. If
--   the <tt>imageIdOverride</tt> parameter isn't specified, then a recent
--   <a>Amazon ECS-optimized AMI</a> (<tt>ECS_AL1</tt>) is used. Starting
--   on March 31, 2021, this default will be changing to <tt>ECS_AL2</tt>
--   (<a>Amazon Linux 2</a>).
--   
--   <ul>
--   <li><i>ECS_AL2</i> <a>Amazon Linux 2</a>− Default for all Amazon Web
--   Services Graviton-based instance families (for example, <tt>C6g</tt>,
--   <tt>M6g</tt>, <tt>R6g</tt>, and <tt>T4g</tt>) and can be used for all
--   non-GPU instance types.</li>
--   <li><i>ECS_AL2_NVIDIA</i> <a>Amazon Linux 2 (GPU)</a>−Default for all
--   GPU instance families (for example <tt>P4</tt> and <tt>G4</tt>) and
--   can be used for all non Amazon Web Services Graviton-based instance
--   types.</li>
--   <li><i>ECS_AL1</i> <a>Amazon Linux</a>−Default for all non-GPU, non
--   Amazon Web Services Graviton instance families. Amazon Linux is
--   reaching the end-of-life of standard support. For more information,
--   see <a>Amazon Linux AMI</a>.</li>
--   </ul>
ec2Configuration_imageType :: Lens' Ec2Configuration Text

-- | Contains a glob pattern to match against the decimal representation of
--   the <tt>ExitCode</tt> returned for a job. The pattern can be up to 512
--   characters in length. It can contain only numbers, and can optionally
--   end with an asterisk (*) so that only the start of the string needs to
--   be an exact match.
evaluateOnExit_onExitCode :: Lens' EvaluateOnExit (Maybe Text)

-- | Contains a glob pattern to match against the <tt>Reason</tt> returned
--   for a job. The pattern can be up to 512 characters in length. It can
--   contain letters, numbers, periods (.), colons (:), and white space
--   (including spaces and tabs). It can optionally end with an asterisk
--   (*) so that only the start of the string needs to be an exact match.
evaluateOnExit_onReason :: Lens' EvaluateOnExit (Maybe Text)

-- | Contains a glob pattern to match against the <tt>StatusReason</tt>
--   returned for a job. The pattern can be up to 512 characters in length.
--   It can contain letters, numbers, periods (.), colons (:), and white
--   space (including spaces or tabs). It can optionally end with an
--   asterisk (*) so that only the start of the string needs to be an exact
--   match.
evaluateOnExit_onStatusReason :: Lens' EvaluateOnExit (Maybe Text)

-- | Specifies the action to take if all of the specified conditions
--   (<tt>onStatusReason</tt>, <tt>onReason</tt>, and <tt>onExitCode</tt>)
--   are met. The values aren't case sensitive.
evaluateOnExit_action :: Lens' EvaluateOnExit RetryAction

-- | The Fargate platform version where the jobs are running. A platform
--   version is specified only for jobs that are running on Fargate
--   resources. If one isn't specified, the <tt>LATEST</tt> platform
--   version is used by default. This uses a recent, approved version of
--   the Fargate platform for compute resources. For more information, see
--   <a>Fargate platform versions</a> in the <i>Amazon Elastic Container
--   Service Developer Guide</i>.
fargatePlatformConfiguration_platformVersion :: Lens' FargatePlatformConfiguration (Maybe Text)

-- | The path on the host container instance that's presented to the
--   container. If this parameter is empty, then the Docker daemon has
--   assigned a host path for you. If this parameter contains a file
--   location, then the data volume persists at the specified location on
--   the host container instance until you delete it manually. If the
--   source path location doesn't exist on the host container instance, the
--   Docker daemon creates it. If the location does exist, the contents of
--   the source path folder are exported.
--   
--   This parameter isn't applicable to jobs that run on Fargate resources
--   and shouldn't be provided.
host_sourcePath :: Lens' Host (Maybe Text)

-- | The status of the job definition.
jobDefinition_status :: Lens' JobDefinition (Maybe Text)

-- | Specifies whether to propagate the tags from the job or job definition
--   to the corresponding Amazon ECS task. If no value is specified, the
--   tags aren't propagated. Tags can only be propagated to the tasks
--   during task creation. For tags with the same name, job tags are given
--   priority over job definitions tags. If the total number of combined
--   tags from the job and job definition is over 50, the job is moved to
--   the <tt>FAILED</tt> state.
jobDefinition_propagateTags :: Lens' JobDefinition (Maybe Bool)

-- | The retry strategy to use for failed jobs that are submitted with this
--   job definition.
jobDefinition_retryStrategy :: Lens' JobDefinition (Maybe RetryStrategy)

-- | The platform capabilities required by the job definition. If no value
--   is specified, it defaults to <tt>EC2</tt>. Jobs run on Fargate
--   resources specify <tt>FARGATE</tt>.
jobDefinition_platformCapabilities :: Lens' JobDefinition (Maybe [PlatformCapability])

-- | Default parameters or parameter substitution placeholders that are set
--   in the job definition. Parameters are specified as a key-value pair
--   mapping. Parameters in a <tt>SubmitJob</tt> request override any
--   corresponding parameter defaults from the job definition. For more
--   information about specifying parameters, see <a>Job Definition
--   Parameters</a> in the <i>Batch User Guide</i>.
jobDefinition_parameters :: Lens' JobDefinition (Maybe (HashMap Text Text))

-- | The timeout configuration for jobs that are submitted with this job
--   definition. You can specify a timeout duration after which Batch
--   terminates your jobs if they haven't finished.
jobDefinition_timeout :: Lens' JobDefinition (Maybe JobTimeout)

-- | An object with various properties specific to container-based jobs.
jobDefinition_containerProperties :: Lens' JobDefinition (Maybe ContainerProperties)

-- | An object with various properties specific to multi-node parallel
--   jobs.
--   
--   If the job runs on Fargate resources, then you must not specify
--   <tt>nodeProperties</tt>; use <tt>containerProperties</tt> instead.
jobDefinition_nodeProperties :: Lens' JobDefinition (Maybe NodeProperties)

-- | The tags applied to the job definition.
jobDefinition_tags :: Lens' JobDefinition (Maybe (HashMap Text Text))

-- | The name of the job definition.
jobDefinition_jobDefinitionName :: Lens' JobDefinition Text

-- | The Amazon Resource Name (ARN) for the job definition.
jobDefinition_jobDefinitionArn :: Lens' JobDefinition Text

-- | The revision of the job definition.
jobDefinition_revision :: Lens' JobDefinition Int

-- | The type of job definition. If the job is run on Fargate resources,
--   then <tt>multinode</tt> isn't supported. For more information about
--   multi-node parallel jobs, see <a>Creating a multi-node parallel job
--   definition</a> in the <i>Batch User Guide</i>.
jobDefinition_type :: Lens' JobDefinition Text

-- | The job ID of the Batch job associated with this dependency.
jobDependency_jobId :: Lens' JobDependency (Maybe Text)

-- | The type of the job dependency.
jobDependency_type :: Lens' JobDependency (Maybe ArrayJobDependency)

-- | The Unix timestamp (in milliseconds) for when the job was stopped
--   (when the job transitioned from the <tt>RUNNING</tt> state to a
--   terminal state, such as <tt>SUCCEEDED</tt> or <tt>FAILED</tt>).
jobDetail_stoppedAt :: Lens' JobDetail (Maybe Integer)

-- | The Amazon Resource Name (ARN) of the job.
jobDetail_jobArn :: Lens' JobDetail (Maybe Text)

-- | Specifies whether to propagate the tags from the job or job definition
--   to the corresponding Amazon ECS task. If no value is specified, the
--   tags aren't propagated. Tags can only be propagated to the tasks
--   during task creation. For tags with the same name, job tags are given
--   priority over job definitions tags. If the total number of combined
--   tags from the job and job definition is over 50, the job is moved to
--   the <tt>FAILED</tt> state.
jobDetail_propagateTags :: Lens' JobDetail (Maybe Bool)

-- | The Unix timestamp (in milliseconds) for when the job was created. For
--   non-array jobs and parent array jobs, this is when the job entered the
--   <tt>SUBMITTED</tt> state (at the time SubmitJob was called). For array
--   child jobs, this is when the child job was spawned by its parent and
--   entered the <tt>PENDING</tt> state.
jobDetail_createdAt :: Lens' JobDetail (Maybe Integer)

-- | The retry strategy to use for this job if an attempt fails.
jobDetail_retryStrategy :: Lens' JobDetail (Maybe RetryStrategy)

-- | A list of job attempts associated with this job.
jobDetail_attempts :: Lens' JobDetail (Maybe [AttemptDetail])

-- | The platform capabilities required by the job definition. If no value
--   is specified, it defaults to <tt>EC2</tt>. Jobs run on Fargate
--   resources specify <tt>FARGATE</tt>.
jobDetail_platformCapabilities :: Lens' JobDetail (Maybe [PlatformCapability])

-- | The Unix timestamp (in milliseconds) for when the job was started
--   (when the job transitioned from the <tt>STARTING</tt> state to the
--   <tt>RUNNING</tt> state). This parameter isn't provided for child jobs
--   of array jobs or multi-node parallel jobs.
jobDetail_startedAt :: Lens' JobDetail (Maybe Integer)

-- | A list of job IDs that this job depends on.
jobDetail_dependsOn :: Lens' JobDetail (Maybe [JobDependency])

-- | An object representing the details of the container that's associated
--   with the job.
jobDetail_container :: Lens' JobDetail (Maybe ContainerDetail)

-- | An object representing the details of a node that's associated with a
--   multi-node parallel job.
jobDetail_nodeDetails :: Lens' JobDetail (Maybe NodeDetails)

-- | Additional parameters passed to the job that replace parameter
--   substitution placeholders or override any corresponding parameter
--   defaults from the job definition.
jobDetail_parameters :: Lens' JobDetail (Maybe (HashMap Text Text))

-- | A short, human-readable string to provide additional details about the
--   current status of the job.
jobDetail_statusReason :: Lens' JobDetail (Maybe Text)

-- | The array properties of the job, if it is an array job.
jobDetail_arrayProperties :: Lens' JobDetail (Maybe ArrayPropertiesDetail)

-- | The timeout configuration for the job.
jobDetail_timeout :: Lens' JobDetail (Maybe JobTimeout)

-- | An object representing the node properties of a multi-node parallel
--   job.
--   
--   This isn't applicable to jobs that are running on Fargate resources.
jobDetail_nodeProperties :: Lens' JobDetail (Maybe NodeProperties)

-- | The tags applied to the job.
jobDetail_tags :: Lens' JobDetail (Maybe (HashMap Text Text))

-- | The name of the job.
jobDetail_jobName :: Lens' JobDetail Text

-- | The ID for the job.
jobDetail_jobId :: Lens' JobDetail Text

-- | The Amazon Resource Name (ARN) of the job queue that the job is
--   associated with.
jobDetail_jobQueue :: Lens' JobDetail Text

-- | The current status for the job.
--   
--   If your jobs don't progress to <tt>STARTING</tt>, see <a>Jobs Stuck in
--   RUNNABLE Status</a> in the troubleshooting section of the <i>Batch
--   User Guide</i>.
jobDetail_status :: Lens' JobDetail JobStatus

-- | The job definition that's used by this job.
jobDetail_jobDefinition :: Lens' JobDetail Text

-- | The status of the job queue (for example, <tt>CREATING</tt> or
--   <tt>VALID</tt>).
jobQueueDetail_status :: Lens' JobQueueDetail (Maybe JQStatus)

-- | A short, human-readable string to provide additional details about the
--   current status of the job queue.
jobQueueDetail_statusReason :: Lens' JobQueueDetail (Maybe Text)

-- | The tags applied to the job queue. For more information, see
--   <a>Tagging your Batch resources</a> in <i>Batch User Guide</i>.
jobQueueDetail_tags :: Lens' JobQueueDetail (Maybe (HashMap Text Text))

-- | The name of the job queue.
jobQueueDetail_jobQueueName :: Lens' JobQueueDetail Text

-- | The Amazon Resource Name (ARN) of the job queue.
jobQueueDetail_jobQueueArn :: Lens' JobQueueDetail Text

-- | Describes the ability of the queue to accept new jobs. If the job
--   queue state is <tt>ENABLED</tt>, it's able to accept jobs. If the job
--   queue state is <tt>DISABLED</tt>, new jobs can't be added to the
--   queue, but jobs already in the queue can finish.
jobQueueDetail_state :: Lens' JobQueueDetail JQState

-- | The priority of the job queue. Job queues with a higher priority (or a
--   higher integer value for the <tt>priority</tt> parameter) are
--   evaluated first when associated with the same compute environment.
--   Priority is determined in descending order, for example, a job queue
--   with a priority value of <tt>10</tt> is given scheduling preference
--   over a job queue with a priority value of <tt>1</tt>. All of the
--   compute environments must be either EC2 (<tt>EC2</tt> or
--   <tt>SPOT</tt>) or Fargate (<tt>FARGATE</tt> or <tt>FARGATE_SPOT</tt>);
--   EC2 and Fargate compute environments can't be mixed.
jobQueueDetail_priority :: Lens' JobQueueDetail Int

-- | The compute environments that are attached to the job queue and the
--   order that job placement is preferred. Compute environments are
--   selected for job placement in ascending order.
jobQueueDetail_computeEnvironmentOrder :: Lens' JobQueueDetail [ComputeEnvironmentOrder]

-- | The Unix timestamp for when the job was stopped (when the job
--   transitioned from the <tt>RUNNING</tt> state to a terminal state, such
--   as <tt>SUCCEEDED</tt> or <tt>FAILED</tt>).
jobSummary_stoppedAt :: Lens' JobSummary (Maybe Integer)

-- | The current status for the job.
jobSummary_status :: Lens' JobSummary (Maybe JobStatus)

-- | The Amazon Resource Name (ARN) of the job.
jobSummary_jobArn :: Lens' JobSummary (Maybe Text)

-- | The Unix timestamp for when the job was created. For non-array jobs
--   and parent array jobs, this is when the job entered the
--   <tt>SUBMITTED</tt> state (at the time SubmitJob was called). For array
--   child jobs, this is when the child job was spawned by its parent and
--   entered the <tt>PENDING</tt> state.
jobSummary_createdAt :: Lens' JobSummary (Maybe Integer)

-- | The Unix timestamp for when the job was started (when the job
--   transitioned from the <tt>STARTING</tt> state to the <tt>RUNNING</tt>
--   state).
jobSummary_startedAt :: Lens' JobSummary (Maybe Integer)

-- | An object representing the details of the container that's associated
--   with the job.
jobSummary_container :: Lens' JobSummary (Maybe ContainerSummary)

-- | The Amazon Resource Name (ARN) of the job definition.
jobSummary_jobDefinition :: Lens' JobSummary (Maybe Text)

-- | A short, human-readable string to provide additional details about the
--   current status of the job.
jobSummary_statusReason :: Lens' JobSummary (Maybe Text)

-- | The array properties of the job, if it is an array job.
jobSummary_arrayProperties :: Lens' JobSummary (Maybe ArrayPropertiesSummary)

-- | The node properties for a single node in a job summary list.
--   
--   This isn't applicable to jobs that are running on Fargate resources.
jobSummary_nodeProperties :: Lens' JobSummary (Maybe NodePropertiesSummary)

-- | The ID of the job.
jobSummary_jobId :: Lens' JobSummary Text

-- | The name of the job.
jobSummary_jobName :: Lens' JobSummary Text

-- | The time duration in seconds (measured from the job attempt's
--   <tt>startedAt</tt> timestamp) after which Batch terminates your jobs
--   if they have not finished. The minimum value for the timeout is 60
--   seconds.
jobTimeout_attemptDurationSeconds :: Lens' JobTimeout (Maybe Int)

-- | The value of the key-value pair. For environment variables, this is
--   the value of the environment variable.
keyValuePair_value :: Lens' KeyValuePair (Maybe Text)

-- | The name of the key-value pair. For environment variables, this is the
--   name of the environment variable.
keyValuePair_name :: Lens' KeyValuePair (Maybe Text)

-- | The filter values.
keyValuesPair_values :: Lens' KeyValuesPair (Maybe [Text])

-- | The name of the filter. Filter names are case sensitive.
keyValuesPair_name :: Lens' KeyValuesPair (Maybe Text)

-- | The name of the launch template.
launchTemplateSpecification_launchTemplateName :: Lens' LaunchTemplateSpecification (Maybe Text)

-- | The ID of the launch template.
launchTemplateSpecification_launchTemplateId :: Lens' LaunchTemplateSpecification (Maybe Text)

-- | The version number of the launch template, <tt>$Latest</tt>, or
--   <tt>$Default</tt>.
--   
--   If the value is <tt>$Latest</tt>, the latest version of the launch
--   template is used. If the value is <tt>$Default</tt>, the default
--   version of the launch template is used.
--   
--   After the compute environment is created, the launch template version
--   that's used isn't changed, even if the <tt>$Default</tt> or
--   <tt>$Latest</tt> version for the launch template is updated. To use a
--   new launch template version, create a new compute environment, add the
--   new compute environment to the existing job queue, remove the old
--   compute environment from the job queue, and delete the old compute
--   environment.
--   
--   Default: <tt>$Default</tt>.
launchTemplateSpecification_version :: Lens' LaunchTemplateSpecification (Maybe Text)

-- | The value for the size (in MiB) of the <tt>/dev/shm</tt> volume. This
--   parameter maps to the <tt>--shm-size</tt> option to <a>docker run</a>.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources and shouldn't be provided.
linuxParameters_sharedMemorySize :: Lens' LinuxParameters (Maybe Int)

-- | If true, run an <tt>init</tt> process inside the container that
--   forwards signals and reaps processes. This parameter maps to the
--   <tt>--init</tt> option to <a>docker run</a>. This parameter requires
--   version 1.25 of the Docker Remote API or greater on your container
--   instance. To check the Docker Remote API version on your container
--   instance, log into your container instance and run the following
--   command: <tt>sudo docker version | grep "Server API version"</tt>
linuxParameters_initProcessEnabled :: Lens' LinuxParameters (Maybe Bool)

-- | The container path, mount options, and size (in MiB) of the tmpfs
--   mount. This parameter maps to the <tt>--tmpfs</tt> option to <a>docker
--   run</a>.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources and shouldn't be provided.
linuxParameters_tmpfs :: Lens' LinuxParameters (Maybe [Tmpfs])

-- | This allows you to tune a container's memory swappiness behavior. A
--   <tt>swappiness</tt> value of <tt>0</tt> causes swapping not to happen
--   unless absolutely necessary. A <tt>swappiness</tt> value of
--   <tt>100</tt> causes pages to be swapped very aggressively. Accepted
--   values are whole numbers between <tt>0</tt> and <tt>100</tt>. If the
--   <tt>swappiness</tt> parameter isn't specified, a default value of
--   <tt>60</tt> is used. If a value isn't specified for <tt>maxSwap</tt>,
--   then this parameter is ignored. If <tt>maxSwap</tt> is set to 0, the
--   container doesn't use swap. This parameter maps to the
--   <tt>--memory-swappiness</tt> option to <a>docker run</a>.
--   
--   Consider the following when you use a per-container swap
--   configuration.
--   
--   <ul>
--   <li>Swap space must be enabled and allocated on the container instance
--   for the containers to use.The Amazon ECS optimized AMIs don't have
--   swap enabled by default. You must enable swap on the instance to use
--   this feature. For more information, see <a>Instance Store Swap
--   Volumes</a> in the <i>Amazon EC2 User Guide for Linux Instances</i> or
--   <a>How do I allocate memory to work as swap space in an Amazon EC2
--   instance by using a swap file?</a></li>
--   <li>The swap space parameters are only supported for job definitions
--   using EC2 resources.</li>
--   <li>If the <tt>maxSwap</tt> and <tt>swappiness</tt> parameters are
--   omitted from a job definition, each container will have a default
--   <tt>swappiness</tt> value of 60, and the total swap usage will be
--   limited to two times the memory reservation of the container.</li>
--   </ul>
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources and shouldn't be provided.
linuxParameters_swappiness :: Lens' LinuxParameters (Maybe Int)

-- | Any host devices to expose to the container. This parameter maps to
--   <tt>Devices</tt> in the <a>Create a container</a> section of the
--   <a>Docker Remote API</a> and the <tt>--device</tt> option to <a>docker
--   run</a>.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources and shouldn't be provided.
linuxParameters_devices :: Lens' LinuxParameters (Maybe [Device])

-- | The total amount of swap memory (in MiB) a container can use. This
--   parameter is translated to the <tt>--memory-swap</tt> option to
--   <a>docker run</a> where the value is the sum of the container memory
--   plus the <tt>maxSwap</tt> value. For more information, see
--   <a>--memory-swap details</a> in the Docker documentation.
--   
--   If a <tt>maxSwap</tt> value of <tt>0</tt> is specified, the container
--   doesn't use swap. Accepted values are <tt>0</tt> or any positive
--   integer. If the <tt>maxSwap</tt> parameter is omitted, the container
--   doesn't use the swap configuration for the container instance it is
--   running on. A <tt>maxSwap</tt> value must be set for the
--   <tt>swappiness</tt> parameter to be used.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources and shouldn't be provided.
linuxParameters_maxSwap :: Lens' LinuxParameters (Maybe Int)

-- | The configuration options to send to the log driver. This parameter
--   requires version 1.19 of the Docker Remote API or greater on your
--   container instance. To check the Docker Remote API version on your
--   container instance, log into your container instance and run the
--   following command: <tt>sudo docker version | grep "Server API
--   version"</tt>
logConfiguration_options :: Lens' LogConfiguration (Maybe (HashMap Text Text))

-- | The secrets to pass to the log configuration. For more information,
--   see <a>Specifying Sensitive Data</a> in the <i>Batch User Guide</i>.
logConfiguration_secretOptions :: Lens' LogConfiguration (Maybe [Secret])

-- | The log driver to use for the container. The valid values listed for
--   this parameter are log drivers that the Amazon ECS container agent can
--   communicate with by default.
--   
--   The supported log drivers are <tt>awslogs</tt>, <tt>fluentd</tt>,
--   <tt>gelf</tt>, <tt>json-file</tt>, <tt>journald</tt>,
--   <tt>logentries</tt>, <tt>syslog</tt>, and <tt>splunk</tt>.
--   
--   Jobs that are running on Fargate resources are restricted to the
--   <tt>awslogs</tt> and <tt>splunk</tt> log drivers.
--   
--   <ul>
--   <li><i>awslogs</i> Specifies the Amazon CloudWatch Logs logging
--   driver. For more information, see <a>Using the awslogs Log Driver</a>
--   in the <i>Batch User Guide</i> and <a>Amazon CloudWatch Logs logging
--   driver</a> in the Docker documentation.</li>
--   <li><i>fluentd</i> Specifies the Fluentd logging driver. For more
--   information, including usage and options, see <a>Fluentd logging
--   driver</a> in the Docker documentation.</li>
--   <li><i>gelf</i> Specifies the Graylog Extended Format (GELF) logging
--   driver. For more information, including usage and options, see
--   <a>Graylog Extended Format logging driver</a> in the Docker
--   documentation.</li>
--   <li><i>journald</i> Specifies the journald logging driver. For more
--   information, including usage and options, see <a>Journald logging
--   driver</a> in the Docker documentation.</li>
--   <li><i>json-file</i> Specifies the JSON file logging driver. For more
--   information, including usage and options, see <a>JSON File logging
--   driver</a> in the Docker documentation.</li>
--   <li><i>splunk</i> Specifies the Splunk logging driver. For more
--   information, including usage and options, see <a>Splunk logging
--   driver</a> in the Docker documentation.</li>
--   <li><i>syslog</i> Specifies the syslog logging driver. For more
--   information, including usage and options, see <a>Syslog logging
--   driver</a> in the Docker documentation.</li>
--   </ul>
--   
--   If you have a custom driver that's not listed earlier that you want to
--   work with the Amazon ECS container agent, you can fork the Amazon ECS
--   container agent project that's <a>available on GitHub</a> and
--   customize it to work with that driver. We encourage you to submit pull
--   requests for changes that you want to have included. However, Amazon
--   Web Services doesn't currently support running modified copies of this
--   software.
--   
--   This parameter requires version 1.18 of the Docker Remote API or
--   greater on your container instance. To check the Docker Remote API
--   version on your container instance, log into your container instance
--   and run the following command: <tt>sudo docker version | grep "Server
--   API version"</tt>
logConfiguration_logDriver :: Lens' LogConfiguration LogDriver

-- | The path on the container where the host volume is mounted.
mountPoint_containerPath :: Lens' MountPoint (Maybe Text)

-- | The name of the volume to mount.
mountPoint_sourceVolume :: Lens' MountPoint (Maybe Text)

-- | If this value is <tt>true</tt>, the container has read-only access to
--   the volume. Otherwise, the container can write to the volume. The
--   default value is <tt>false</tt>.
mountPoint_readOnly :: Lens' MountPoint (Maybe Bool)

-- | Indicates whether the job should have a public IP address. For a job
--   that is running on Fargate resources in a private subnet to send
--   outbound traffic to the internet (for example, to pull container
--   images), the private subnet requires a NAT gateway be attached to
--   route requests to the internet. For more information, see <a>Amazon
--   ECS task networking</a>. The default value is "DISABLED".
networkConfiguration_assignPublicIp :: Lens' NetworkConfiguration (Maybe AssignPublicIp)

-- | The private IPv6 address for the network interface.
networkInterface_ipv6Address :: Lens' NetworkInterface (Maybe Text)

-- | The private IPv4 address for the network interface.
networkInterface_privateIpv4Address :: Lens' NetworkInterface (Maybe Text)

-- | The attachment ID for the network interface.
networkInterface_attachmentId :: Lens' NetworkInterface (Maybe Text)

-- | The node index for the node. Node index numbering begins at zero. This
--   index is also available on the node with the
--   <tt>AWS_BATCH_JOB_NODE_INDEX</tt> environment variable.
nodeDetails_nodeIndex :: Lens' NodeDetails (Maybe Int)

-- | Specifies whether the current node is the main node for a multi-node
--   parallel job.
nodeDetails_isMainNode :: Lens' NodeDetails (Maybe Bool)

-- | The number of nodes to use with a multi-node parallel job. This value
--   overrides the number of nodes that are specified in the job
--   definition. To use this override:
--   
--   <ul>
--   <li>There must be at least one node range in your job definition that
--   has an open upper boundary (such as <tt>:</tt> or <tt>n:</tt>).</li>
--   <li>The lower boundary of the node range specified in the job
--   definition must be fewer than the number of nodes specified in the
--   override.</li>
--   <li>The main node index specified in the job definition must be fewer
--   than the number of nodes specified in the override.</li>
--   </ul>
nodeOverrides_numNodes :: Lens' NodeOverrides (Maybe Int)

-- | The node property overrides for the job.
nodeOverrides_nodePropertyOverrides :: Lens' NodeOverrides (Maybe [NodePropertyOverride])

-- | The number of nodes associated with a multi-node parallel job.
nodeProperties_numNodes :: Lens' NodeProperties Int

-- | Specifies the node index for the main node of a multi-node parallel
--   job. This node index value must be fewer than the number of nodes.
nodeProperties_mainNode :: Lens' NodeProperties Int

-- | A list of node ranges and their properties associated with a
--   multi-node parallel job.
nodeProperties_nodeRangeProperties :: Lens' NodeProperties [NodeRangeProperty]

-- | The number of nodes associated with a multi-node parallel job.
nodePropertiesSummary_numNodes :: Lens' NodePropertiesSummary (Maybe Int)

-- | The node index for the node. Node index numbering begins at zero. This
--   index is also available on the node with the
--   <tt>AWS_BATCH_JOB_NODE_INDEX</tt> environment variable.
nodePropertiesSummary_nodeIndex :: Lens' NodePropertiesSummary (Maybe Int)

-- | Specifies whether the current node is the main node for a multi-node
--   parallel job.
nodePropertiesSummary_isMainNode :: Lens' NodePropertiesSummary (Maybe Bool)

-- | The overrides that should be sent to a node range.
nodePropertyOverride_containerOverrides :: Lens' NodePropertyOverride (Maybe ContainerOverrides)

-- | The range of nodes, using node index values, that's used to override.
--   A range of <tt>0:3</tt> indicates nodes with index values of
--   <tt>0</tt> through <tt>3</tt>. If the starting range value is omitted
--   (<tt>:n</tt>), then <tt>0</tt> is used to start the range. If the
--   ending range value is omitted (<tt>n:</tt>), then the highest possible
--   node index is used to end the range.
nodePropertyOverride_targetNodes :: Lens' NodePropertyOverride Text

-- | The container details for the node range.
nodeRangeProperty_container :: Lens' NodeRangeProperty (Maybe ContainerProperties)

-- | The range of nodes, using node index values. A range of <tt>0:3</tt>
--   indicates nodes with index values of <tt>0</tt> through <tt>3</tt>. If
--   the starting range value is omitted (<tt>:n</tt>), then <tt>0</tt> is
--   used to start the range. If the ending range value is omitted
--   (<tt>n:</tt>), then the highest possible node index is used to end the
--   range. Your accumulative node ranges must account for all nodes
--   (<tt>0:n</tt>). You can nest node ranges, for example <tt>0:10</tt>
--   and <tt>4:5</tt>, in which case the <tt>4:5</tt> range properties
--   override the <tt>0:10</tt> properties.
nodeRangeProperty_targetNodes :: Lens' NodeRangeProperty Text

-- | The quantity of the specified resource to reserve for the container.
--   The values vary based on the <tt>type</tt> specified.
--   
--   <ul>
--   <li><i>type="GPU"</i> The number of physical GPUs to reserve for the
--   container. The number of GPUs reserved for all containers in a job
--   shouldn't exceed the number of available GPUs on the compute resource
--   that the job is launched on.GPUs are not available for jobs that are
--   running on Fargate resources.</li>
--   <li><i>type="MEMORY"</i> The memory hard limit (in MiB) present to the
--   container. This parameter is supported for jobs that are running on
--   EC2 resources. If your container attempts to exceed the memory
--   specified, the container is terminated. This parameter maps to
--   <tt>Memory</tt> in the <a>Create a container</a> section of the
--   <a>Docker Remote API</a> and the <tt>--memory</tt> option to <a>docker
--   run</a>. You must specify at least 4 MiB of memory for a job. This is
--   required but can be specified in several places for multi-node
--   parallel (MNP) jobs. It must be specified for each node at least once.
--   This parameter maps to <tt>Memory</tt> in the <a>Create a
--   container</a> section of the <a>Docker Remote API</a> and the
--   <tt>--memory</tt> option to <a>docker run</a>.If you're trying to
--   maximize your resource utilization by providing your jobs as much
--   memory as possible for a particular instance type, see <a>Memory
--   Management</a> in the <i>Batch User Guide</i>.For jobs that are
--   running on Fargate resources, then <tt>value</tt> is the hard limit
--   (in MiB), and must match one of the supported values and the
--   <tt>VCPU</tt> values must be one of the values supported for that
--   memory value.<ul><li><i>value = 512</i> <tt>VCPU</tt> =
--   0.25</li><li><i>value = 1024</i> <tt>VCPU</tt> = 0.25 or
--   0.5</li><li><i>value = 2048</i> <tt>VCPU</tt> = 0.25, 0.5, or
--   1</li><li><i>value = 3072</i> <tt>VCPU</tt> = 0.5, or
--   1</li><li><i>value = 4096</i> <tt>VCPU</tt> = 0.5, 1, or
--   2</li><li><i>value = 5120, 6144, or 7168</i> <tt>VCPU</tt> = 1 or
--   2</li><li><i>value = 8192</i> <tt>VCPU</tt> = 1, 2, or
--   4</li><li><i>value = 9216, 10240, 11264, 12288, 13312, 14336, 15360,
--   or 16384</i> <tt>VCPU</tt> = 2 or 4</li><li><i>value = 17408, 18432,
--   19456, 20480, 21504, 22528, 23552, 24576, 25600, 26624, 27648, 28672,
--   29696, or 30720</i> <tt>VCPU</tt> = 4</li></ul></li>
--   <li><i>type="VCPU"</i> The number of vCPUs reserved for the container.
--   This parameter maps to <tt>CpuShares</tt> in the <a>Create a
--   container</a> section of the <a>Docker Remote API</a> and the
--   <tt>--cpu-shares</tt> option to <a>docker run</a>. Each vCPU is
--   equivalent to 1,024 CPU shares. For EC2 resources, you must specify at
--   least one vCPU. This is required but can be specified in several
--   places; it must be specified for each node at least once.For jobs that
--   are running on Fargate resources, then <tt>value</tt> must match one
--   of the supported values and the <tt>MEMORY</tt> values must be one of
--   the values supported for that VCPU value. The supported values are
--   0.25, 0.5, 1, 2, and 4<ul><li><i>value = 0.25</i> <tt>MEMORY</tt> =
--   512, 1024, or 2048</li><li><i>value = 0.5</i> <tt>MEMORY</tt> = 1024,
--   2048, 3072, or 4096</li><li><i>value = 1</i> <tt>MEMORY</tt> = 2048,
--   3072, 4096, 5120, 6144, 7168, or 8192</li><li><i>value = 2</i>
--   <tt>MEMORY</tt> = 4096, 5120, 6144, 7168, 8192, 9216, 10240, 11264,
--   12288, 13312, 14336, 15360, or 16384</li><li><i>value = 4</i>
--   <tt>MEMORY</tt> = 8192, 9216, 10240, 11264, 12288, 13312, 14336,
--   15360, 16384, 17408, 18432, 19456, 20480, 21504, 22528, 23552, 24576,
--   25600, 26624, 27648, 28672, 29696, or 30720</li></ul></li>
--   </ul>
resourceRequirement_value :: Lens' ResourceRequirement Text

-- | The type of resource to assign to a container. The supported resources
--   include <tt>GPU</tt>, <tt>MEMORY</tt>, and <tt>VCPU</tt>.
resourceRequirement_type :: Lens' ResourceRequirement ResourceType

-- | Array of up to 5 objects that specify conditions under which the job
--   should be retried or failed. If this parameter is specified, then the
--   <tt>attempts</tt> parameter must also be specified.
retryStrategy_evaluateOnExit :: Lens' RetryStrategy (Maybe [EvaluateOnExit])

-- | The number of times to move a job to the <tt>RUNNABLE</tt> status. You
--   can specify between 1 and 10 attempts. If the value of
--   <tt>attempts</tt> is greater than one, the job is retried on failure
--   the same number of attempts as the value.
retryStrategy_attempts :: Lens' RetryStrategy (Maybe Int)

-- | The name of the secret.
secret_name :: Lens' Secret Text

-- | The secret to expose to the container. The supported values are either
--   the full ARN of the Secrets Manager secret or the full ARN of the
--   parameter in the Amazon Web Services Systems Manager Parameter Store.
--   
--   If the Amazon Web Services Systems Manager Parameter Store parameter
--   exists in the same Region as the job you're launching, then you can
--   use either the full ARN or name of the parameter. If the parameter
--   exists in a different Region, then the full ARN must be specified.
secret_valueFrom :: Lens' Secret Text

-- | The list of tmpfs volume mount options.
--   
--   Valid values: "<tt>defaults</tt>" | "<tt>ro</tt>" | "<tt>rw</tt>" |
--   "<tt>suid</tt>" | "<tt>nosuid</tt>" | "<tt>dev</tt>" |
--   "<tt>nodev</tt>" | "<tt>exec</tt>" | "<tt>noexec</tt>" |
--   "<tt>sync</tt>" | "<tt>async</tt>" | "<tt>dirsync</tt>" |
--   "<tt>remount</tt>" | "<tt>mand</tt>" | "<tt>nomand</tt>" |
--   "<tt>atime</tt>" | "<tt>noatime</tt>" | "<tt>diratime</tt>" |
--   "<tt>nodiratime</tt>" | "<tt>bind</tt>" | "<tt>rbind" | "unbindable" |
--   "runbindable" | "private" | "rprivate" | "shared" | "rshared" |
--   "slave" | "rslave" | "relatime</tt>" | "<tt>norelatime</tt>" |
--   "<tt>strictatime</tt>" | "<tt>nostrictatime</tt>" | "<tt>mode</tt>" |
--   "<tt>uid</tt>" | "<tt>gid</tt>" | "<tt>nr_inodes</tt>" |
--   "<tt>nr_blocks</tt>" | "<tt>mpol</tt>"
tmpfs_mountOptions :: Lens' Tmpfs (Maybe [Text])

-- | The absolute file path in the container where the tmpfs volume is
--   mounted.
tmpfs_containerPath :: Lens' Tmpfs Text

-- | The size (in MiB) of the tmpfs volume.
tmpfs_size :: Lens' Tmpfs Int

-- | The hard limit for the <tt>ulimit</tt> type.
ulimit_hardLimit :: Lens' Ulimit Int

-- | The <tt>type</tt> of the <tt>ulimit</tt>.
ulimit_name :: Lens' Ulimit Text

-- | The soft limit for the <tt>ulimit</tt> type.
ulimit_softLimit :: Lens' Ulimit Int

-- | The name of the volume. Up to 255 letters (uppercase and lowercase),
--   numbers, hyphens, and underscores are allowed. This name is referenced
--   in the <tt>sourceVolume</tt> parameter of container definition
--   <tt>mountPoints</tt>.
volume_name :: Lens' Volume (Maybe Text)

-- | This parameter is specified when you are using an Amazon Elastic File
--   System file system for job storage. Jobs that are running on Fargate
--   resources must specify a <tt>platformVersion</tt> of at least
--   <tt>1.4.0</tt>.
volume_efsVolumeConfiguration :: Lens' Volume (Maybe EFSVolumeConfiguration)

-- | The contents of the <tt>host</tt> parameter determine whether your
--   data volume persists on the host container instance and where it is
--   stored. If the host parameter is empty, then the Docker daemon assigns
--   a host path for your data volume. However, the data isn't guaranteed
--   to persist after the containers associated with it stop running.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources and shouldn't be provided.
volume_host :: Lens' Volume (Maybe Host)


module Network.AWS.Batch.Waiters


-- | Derived from API version <tt>2016-08-10</tt> of the AWS service
--   descriptions, licensed under Apache 2.0.
--   
--   Batch
--   
--   Using Batch, you can run batch computing workloads on the Cloud. Batch
--   computing is a common means for developers, scientists, and engineers
--   to access large amounts of compute resources. Batch uses the
--   advantages of this computing workload to remove the undifferentiated
--   heavy lifting of configuring and managing required infrastructure. At
--   the same time, it also adopts a familiar batch computing software
--   approach. Given these advantages, Batch can help you to efficiently
--   provision resources in response to jobs submitted, thus effectively
--   helping you to eliminate capacity constraints, reduce compute costs,
--   and deliver your results more quickly.
--   
--   As a fully managed service, Batch can run batch computing workloads of
--   any scale. Batch automatically provisions compute resources and
--   optimizes workload distribution based on the quantity and scale of
--   your specific workloads. With Batch, there's no need to install or
--   manage batch computing software. This means that you can focus your
--   time and energy on analyzing results and solving your specific
--   problems.
module Network.AWS.Batch

-- | API version <tt>2016-08-10</tt> of the Amazon Batch SDK configuration.
defaultService :: Service

-- | These errors are usually caused by a server issue.
_ServerException :: AsError a => Getting (First ServiceError) a ServiceError

-- | These errors are usually caused by a client action, such as using an
--   action or resource on behalf of a user that doesn't have permissions
--   to use the action or resource, or specifying an identifier that's not
--   valid.
_ClientException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Contains the parameters for <tt>CreateComputeEnvironment</tt>.
--   
--   <i>See:</i> <a>newCreateComputeEnvironment</a> smart constructor.
data CreateComputeEnvironment
CreateComputeEnvironment' :: Maybe CEState -> Maybe ComputeResource -> Maybe Text -> Maybe (HashMap Text Text) -> Text -> CEType -> CreateComputeEnvironment

-- | Create a value of <a>CreateComputeEnvironment</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:state:CreateComputeEnvironment'</a>,
--   <a>createComputeEnvironment_state</a> - The state of the compute
--   environment. If the state is <tt>ENABLED</tt>, then the compute
--   environment accepts jobs from a queue and can scale out automatically
--   based on queues.
--   
--   If the state is <tt>ENABLED</tt>, then the Batch scheduler can attempt
--   to place jobs from an associated job queue on the compute resources
--   within the environment. If the compute environment is managed, then it
--   can scale its instances out or in automatically, based on the job
--   queue demand.
--   
--   If the state is <tt>DISABLED</tt>, then the Batch scheduler doesn't
--   attempt to place jobs within the environment. Jobs in a
--   <tt>STARTING</tt> or <tt>RUNNING</tt> state continue to progress
--   normally. Managed compute environments in the <tt>DISABLED</tt> state
--   don't scale out. However, they scale in to <tt>minvCpus</tt> value
--   after instances become idle.
--   
--   <a>$sel:computeResources:CreateComputeEnvironment'</a>,
--   <a>createComputeEnvironment_computeResources</a> - Details about the
--   compute resources managed by the compute environment. This parameter
--   is required for managed compute environments. For more information,
--   see <a>Compute Environments</a> in the <i>Batch User Guide</i>.
--   
--   <a>$sel:serviceRole:CreateComputeEnvironment'</a>,
--   <a>createComputeEnvironment_serviceRole</a> - The full Amazon Resource
--   Name (ARN) of the IAM role that allows Batch to make calls to other
--   Amazon Web Services services on your behalf. For more information, see
--   <a>Batch service IAM role</a> in the <i>Batch User Guide</i>.
--   
--   If your account already created the Batch service-linked role, that
--   role is used by default for your compute environment unless you
--   specify a different role here. If the Batch service-linked role
--   doesn't exist in your account, and no role is specified here, the
--   service attempts to create the Batch service-linked role in your
--   account.
--   
--   If your specified role has a path other than <tt>/</tt>, then you must
--   specify either the full role ARN (recommended) or prefix the role name
--   with the path. For example, if a role with the name <tt>bar</tt> has a
--   path of <tt>/foo/</tt> then you would specify <tt>/foo/bar</tt> as the
--   role name. For more information, see <a>Friendly names and paths</a>
--   in the <i>IAM User Guide</i>.
--   
--   Depending on how you created your Batch service role, its ARN might
--   contain the <tt>service-role</tt> path prefix. When you only specify
--   the name of the service role, Batch assumes that your ARN doesn't use
--   the <tt>service-role</tt> path prefix. Because of this, we recommend
--   that you specify the full ARN of your service role when you create
--   compute environments.
--   
--   <a>$sel:tags:CreateComputeEnvironment'</a>,
--   <a>createComputeEnvironment_tags</a> - The tags that you apply to the
--   compute environment to help you categorize and organize your
--   resources. Each tag consists of a key and an optional value. For more
--   information, see <a>Tagging Amazon Web Services Resources</a> in
--   <i>Amazon Web Services General Reference</i>.
--   
--   These tags can be updated or removed using the <a>TagResource</a> and
--   <a>UntagResource</a> API operations. These tags don't propagate to the
--   underlying compute resources.
--   
--   <a>$sel:computeEnvironmentName:CreateComputeEnvironment'</a>,
--   <a>createComputeEnvironment_computeEnvironmentName</a> - The name for
--   your compute environment. Up to 128 letters (uppercase and lowercase),
--   numbers, hyphens, and underscores are allowed.
--   
--   <a>$sel:type':CreateComputeEnvironment'</a>,
--   <a>createComputeEnvironment_type</a> - The type of the compute
--   environment: <tt>MANAGED</tt> or <tt>UNMANAGED</tt>. For more
--   information, see <a>Compute Environments</a> in the <i>Batch User
--   Guide</i>.
newCreateComputeEnvironment :: Text -> CEType -> CreateComputeEnvironment

-- | <i>See:</i> <a>newCreateComputeEnvironmentResponse</a> smart
--   constructor.
data CreateComputeEnvironmentResponse
CreateComputeEnvironmentResponse' :: Maybe Text -> Maybe Text -> Int -> CreateComputeEnvironmentResponse

-- | Create a value of <a>CreateComputeEnvironmentResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:computeEnvironmentName:CreateComputeEnvironment'</a>,
--   <a>createComputeEnvironmentResponse_computeEnvironmentName</a> - The
--   name of the compute environment. Up to 128 letters (uppercase and
--   lowercase), numbers, hyphens, and underscores are allowed.
--   
--   <a>$sel:computeEnvironmentArn:CreateComputeEnvironmentResponse'</a>,
--   <a>createComputeEnvironmentResponse_computeEnvironmentArn</a> - The
--   Amazon Resource Name (ARN) of the compute environment.
--   
--   <a>$sel:httpStatus:CreateComputeEnvironmentResponse'</a>,
--   <a>createComputeEnvironmentResponse_httpStatus</a> - The response's
--   http status code.
newCreateComputeEnvironmentResponse :: Int -> CreateComputeEnvironmentResponse

-- | <i>See:</i> <a>newListTagsForResource</a> smart constructor.
data ListTagsForResource
ListTagsForResource' :: Text -> ListTagsForResource

-- | Create a value of <a>ListTagsForResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:ListTagsForResource'</a>,
--   <a>listTagsForResource_resourceArn</a> - The Amazon Resource Name
--   (ARN) that identifies the resource that tags are listed for. Batch
--   resources that support tags are compute environments, jobs, job
--   definitions, and job queues. ARNs for child jobs of array and
--   multi-node parallel (MNP) jobs are not supported.
newListTagsForResource :: Text -> ListTagsForResource

-- | <i>See:</i> <a>newListTagsForResourceResponse</a> smart constructor.
data ListTagsForResourceResponse
ListTagsForResourceResponse' :: Maybe (HashMap Text Text) -> Int -> ListTagsForResourceResponse

-- | Create a value of <a>ListTagsForResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_tags</a> - The tags for the resource.
--   
--   <a>$sel:httpStatus:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_httpStatus</a> - The response's http
--   status code.
newListTagsForResourceResponse :: Int -> ListTagsForResourceResponse

-- | Contains the parameters for <tt>RegisterJobDefinition</tt>.
--   
--   <i>See:</i> <a>newRegisterJobDefinition</a> smart constructor.
data RegisterJobDefinition
RegisterJobDefinition' :: Maybe Bool -> Maybe RetryStrategy -> Maybe [PlatformCapability] -> Maybe (HashMap Text Text) -> Maybe JobTimeout -> Maybe ContainerProperties -> Maybe NodeProperties -> Maybe (HashMap Text Text) -> Text -> JobDefinitionType -> RegisterJobDefinition

-- | Create a value of <a>RegisterJobDefinition</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:propagateTags:RegisterJobDefinition'</a>,
--   <a>registerJobDefinition_propagateTags</a> - Specifies whether to
--   propagate the tags from the job or job definition to the corresponding
--   Amazon ECS task. If no value is specified, the tags are not
--   propagated. Tags can only be propagated to the tasks during task
--   creation. For tags with the same name, job tags are given priority
--   over job definitions tags. If the total number of combined tags from
--   the job and job definition is over 50, the job is moved to the
--   <tt>FAILED</tt> state.
--   
--   <a>$sel:retryStrategy:RegisterJobDefinition'</a>,
--   <a>registerJobDefinition_retryStrategy</a> - The retry strategy to use
--   for failed jobs that are submitted with this job definition. Any retry
--   strategy that's specified during a SubmitJob operation overrides the
--   retry strategy defined here. If a job is terminated due to a timeout,
--   it isn't retried.
--   
--   <a>$sel:platformCapabilities:RegisterJobDefinition'</a>,
--   <a>registerJobDefinition_platformCapabilities</a> - The platform
--   capabilities required by the job definition. If no value is specified,
--   it defaults to <tt>EC2</tt>. To run the job on Fargate resources,
--   specify <tt>FARGATE</tt>.
--   
--   <a>$sel:parameters:RegisterJobDefinition'</a>,
--   <a>registerJobDefinition_parameters</a> - Default parameter
--   substitution placeholders to set in the job definition. Parameters are
--   specified as a key-value pair mapping. Parameters in a
--   <tt>SubmitJob</tt> request override any corresponding parameter
--   defaults from the job definition.
--   
--   <a>$sel:timeout:RegisterJobDefinition'</a>,
--   <a>registerJobDefinition_timeout</a> - The timeout configuration for
--   jobs that are submitted with this job definition, after which Batch
--   terminates your jobs if they have not finished. If a job is terminated
--   due to a timeout, it isn't retried. The minimum value for the timeout
--   is 60 seconds. Any timeout configuration that's specified during a
--   SubmitJob operation overrides the timeout configuration defined here.
--   For more information, see <a>Job Timeouts</a> in the <i>Batch User
--   Guide</i>.
--   
--   <a>$sel:containerProperties:RegisterJobDefinition'</a>,
--   <a>registerJobDefinition_containerProperties</a> - An object with
--   various properties specific to single-node container-based jobs. If
--   the job definition's <tt>type</tt> parameter is <tt>container</tt>,
--   then you must specify either <tt>containerProperties</tt> or
--   <tt>nodeProperties</tt>.
--   
--   If the job runs on Fargate resources, then you must not specify
--   <tt>nodeProperties</tt>; use only <tt>containerProperties</tt>.
--   
--   <a>$sel:nodeProperties:RegisterJobDefinition'</a>,
--   <a>registerJobDefinition_nodeProperties</a> - An object with various
--   properties specific to multi-node parallel jobs. If you specify node
--   properties for a job, it becomes a multi-node parallel job. For more
--   information, see <a>Multi-node Parallel Jobs</a> in the <i>Batch User
--   Guide</i>. If the job definition's <tt>type</tt> parameter is
--   <tt>container</tt>, then you must specify either
--   <tt>containerProperties</tt> or <tt>nodeProperties</tt>.
--   
--   If the job runs on Fargate resources, then you must not specify
--   <tt>nodeProperties</tt>; use <tt>containerProperties</tt> instead.
--   
--   <a>$sel:tags:RegisterJobDefinition'</a>,
--   <a>registerJobDefinition_tags</a> - The tags that you apply to the job
--   definition to help you categorize and organize your resources. Each
--   tag consists of a key and an optional value. For more information, see
--   <a>Tagging Amazon Web Services Resources</a> in <i>Batch User
--   Guide</i>.
--   
--   <a>$sel:jobDefinitionName:RegisterJobDefinition'</a>,
--   <a>registerJobDefinition_jobDefinitionName</a> - The name of the job
--   definition to register. Up to 128 letters (uppercase and lowercase),
--   numbers, hyphens, and underscores are allowed.
--   
--   <a>$sel:type':RegisterJobDefinition'</a>,
--   <a>registerJobDefinition_type</a> - The type of job definition. For
--   more information about multi-node parallel jobs, see <a>Creating a
--   multi-node parallel job definition</a> in the <i>Batch User Guide</i>.
--   
--   If the job is run on Fargate resources, then <tt>multinode</tt> isn't
--   supported.
newRegisterJobDefinition :: Text -> JobDefinitionType -> RegisterJobDefinition

-- | <i>See:</i> <a>newRegisterJobDefinitionResponse</a> smart constructor.
data RegisterJobDefinitionResponse
RegisterJobDefinitionResponse' :: Int -> Text -> Text -> Int -> RegisterJobDefinitionResponse

-- | Create a value of <a>RegisterJobDefinitionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:RegisterJobDefinitionResponse'</a>,
--   <a>registerJobDefinitionResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:jobDefinitionName:RegisterJobDefinition'</a>,
--   <a>registerJobDefinitionResponse_jobDefinitionName</a> - The name of
--   the job definition.
--   
--   <a>$sel:jobDefinitionArn:RegisterJobDefinitionResponse'</a>,
--   <a>registerJobDefinitionResponse_jobDefinitionArn</a> - The Amazon
--   Resource Name (ARN) of the job definition.
--   
--   <a>$sel:revision:RegisterJobDefinitionResponse'</a>,
--   <a>registerJobDefinitionResponse_revision</a> - The revision of the
--   job definition.
newRegisterJobDefinitionResponse :: Int -> Text -> Text -> Int -> RegisterJobDefinitionResponse

-- | Contains the parameters for <tt>SubmitJob</tt>.
--   
--   <i>See:</i> <a>newSubmitJob</a> smart constructor.
data SubmitJob
SubmitJob' :: Maybe NodeOverrides -> Maybe Bool -> Maybe ContainerOverrides -> Maybe RetryStrategy -> Maybe [JobDependency] -> Maybe (HashMap Text Text) -> Maybe ArrayProperties -> Maybe JobTimeout -> Maybe (HashMap Text Text) -> Text -> Text -> Text -> SubmitJob

-- | Create a value of <a>SubmitJob</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nodeOverrides:SubmitJob'</a>, <a>submitJob_nodeOverrides</a> -
--   A list of node overrides in JSON format that specify the node range to
--   target and the container overrides for that node range.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources; use <tt>containerOverrides</tt> instead.
--   
--   <a>$sel:propagateTags:SubmitJob'</a>, <a>submitJob_propagateTags</a> -
--   Specifies whether to propagate the tags from the job or job definition
--   to the corresponding Amazon ECS task. If no value is specified, the
--   tags aren't propagated. Tags can only be propagated to the tasks
--   during task creation. For tags with the same name, job tags are given
--   priority over job definitions tags. If the total number of combined
--   tags from the job and job definition is over 50, the job is moved to
--   the <tt>FAILED</tt> state. When specified, this overrides the tag
--   propagation setting in the job definition.
--   
--   <a>$sel:containerOverrides:SubmitJob'</a>,
--   <a>submitJob_containerOverrides</a> - A list of container overrides in
--   the JSON format that specify the name of a container in the specified
--   job definition and the overrides it should receive. You can override
--   the default command for a container, which is specified in the job
--   definition or the Docker image, with a <tt>command</tt> override. You
--   can also override existing environment variables on a container or add
--   new environment variables to it with an <tt>environment</tt> override.
--   
--   <a>$sel:retryStrategy:SubmitJob'</a>, <a>submitJob_retryStrategy</a> -
--   The retry strategy to use for failed jobs from this SubmitJob
--   operation. When a retry strategy is specified here, it overrides the
--   retry strategy defined in the job definition.
--   
--   <a>$sel:dependsOn:SubmitJob'</a>, <a>submitJob_dependsOn</a> - A list
--   of dependencies for the job. A job can depend upon a maximum of 20
--   jobs. You can specify a <tt>SEQUENTIAL</tt> type dependency without
--   specifying a job ID for array jobs so that each child array job
--   completes sequentially, starting at index 0. You can also specify an
--   <tt>N_TO_N</tt> type dependency with a job ID for array jobs. In that
--   case, each index child of this job must wait for the corresponding
--   index child of each dependency to complete before it can begin.
--   
--   <a>$sel:parameters:SubmitJob'</a>, <a>submitJob_parameters</a> -
--   Additional parameters passed to the job that replace parameter
--   substitution placeholders that are set in the job definition.
--   Parameters are specified as a key and value pair mapping. Parameters
--   in a <tt>SubmitJob</tt> request override any corresponding parameter
--   defaults from the job definition.
--   
--   <a>$sel:arrayProperties:SubmitJob'</a>,
--   <a>submitJob_arrayProperties</a> - The array properties for the
--   submitted job, such as the size of the array. The array size can be
--   between 2 and 10,000. If you specify array properties for a job, it
--   becomes an array job. For more information, see <a>Array Jobs</a> in
--   the <i>Batch User Guide</i>.
--   
--   <a>$sel:timeout:SubmitJob'</a>, <a>submitJob_timeout</a> - The timeout
--   configuration for this SubmitJob operation. You can specify a timeout
--   duration after which Batch terminates your jobs if they haven't
--   finished. If a job is terminated due to a timeout, it isn't retried.
--   The minimum value for the timeout is 60 seconds. This configuration
--   overrides any timeout configuration specified in the job definition.
--   For array jobs, child jobs have the same timeout configuration as the
--   parent job. For more information, see <a>Job Timeouts</a> in the
--   <i>Amazon Elastic Container Service Developer Guide</i>.
--   
--   <a>$sel:tags:SubmitJob'</a>, <a>submitJob_tags</a> - The tags that you
--   apply to the job request to help you categorize and organize your
--   resources. Each tag consists of a key and an optional value. For more
--   information, see <a>Tagging Amazon Web Services Resources</a> in
--   <i>Amazon Web Services General Reference</i>.
--   
--   <a>$sel:jobName:SubmitJob'</a>, <a>submitJob_jobName</a> - The name of
--   the job. The first character must be alphanumeric, and up to 128
--   letters (uppercase and lowercase), numbers, hyphens, and underscores
--   are allowed.
--   
--   <a>$sel:jobQueue:SubmitJob'</a>, <a>submitJob_jobQueue</a> - The job
--   queue where the job is submitted. You can specify either the name or
--   the Amazon Resource Name (ARN) of the queue.
--   
--   <a>$sel:jobDefinition:SubmitJob'</a>, <a>submitJob_jobDefinition</a> -
--   The job definition used by this job. This value can be one of
--   <tt>name</tt>, <tt>name:revision</tt>, or the Amazon Resource Name
--   (ARN) for the job definition. If <tt>name</tt> is specified without a
--   revision then the latest active revision is used.
newSubmitJob :: Text -> Text -> Text -> SubmitJob

-- | <i>See:</i> <a>newSubmitJobResponse</a> smart constructor.
data SubmitJobResponse
SubmitJobResponse' :: Maybe Text -> Int -> Text -> Text -> SubmitJobResponse

-- | Create a value of <a>SubmitJobResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobArn:SubmitJobResponse'</a>, <a>submitJobResponse_jobArn</a>
--   - The Amazon Resource Name (ARN) for the job.
--   
--   <a>$sel:httpStatus:SubmitJobResponse'</a>,
--   <a>submitJobResponse_httpStatus</a> - The response's http status code.
--   
--   <a>$sel:jobName:SubmitJob'</a>, <a>submitJobResponse_jobName</a> - The
--   name of the job.
--   
--   <a>$sel:jobId:SubmitJobResponse'</a>, <a>submitJobResponse_jobId</a> -
--   The unique identifier for the job.
newSubmitJobResponse :: Int -> Text -> Text -> SubmitJobResponse

-- | Contains the parameters for <tt>ListJobs</tt>.
--   
--   <i>See:</i> <a>newListJobs</a> smart constructor.
data ListJobs
ListJobs' :: Maybe [KeyValuesPair] -> Maybe Text -> Maybe Text -> Maybe JobStatus -> Maybe Text -> Maybe Text -> Maybe Int -> ListJobs

-- | Create a value of <a>ListJobs</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:filters:ListJobs'</a>, <a>listJobs_filters</a> - The filter to
--   apply to the query. Only one filter can be used at a time. When the
--   filter is used, <tt>jobStatus</tt> is ignored. The filter doesn't
--   apply to child jobs in an array or multi-node parallel (MNP) jobs. The
--   results are sorted by the <tt>createdAt</tt> field, with the most
--   recent jobs being first.
--   
--   <ul>
--   <li><i>JOB_NAME</i> The value of the filter is a case-insensitive
--   match for the job name. If the value ends with an asterisk (*), the
--   filter will match any job name that begins with the string before the
--   '*'. This corresponds to the <tt>jobName</tt> value. For example,
--   <tt>test1</tt> matches both <tt>Test1</tt> and <tt>test1</tt>, and
--   <tt>test1*</tt> matches both <tt>test1</tt> and <tt>Test10</tt>. When
--   the <tt>JOB_NAME</tt> filter is used, the results are grouped by the
--   job name and version.</li>
--   <li><i>JOB_DEFINITION</i> The value for the filter is the name or
--   Amazon Resource Name (ARN) of the job definition. This corresponds to
--   the <tt>jobDefinition</tt> value. The value is case sensitive. When
--   the value for the filter is the job definition name, the results
--   include all the jobs that used any revision of that job definition
--   name. If the value ends with an asterisk (*), the filter will match
--   any job definition name that begins with the string before the '*'.
--   For example, <tt>jd1</tt> matches only <tt>jd1</tt>, and <tt>jd1*</tt>
--   matches both <tt>jd1</tt> and <tt>jd1A</tt>. The version of the job
--   definition that's used doesn't affect the sort order. When the
--   <tt>JOB_DEFINITION</tt> filter is used and the ARN is used (which is
--   in the form
--   <tt>arn:${Partition}:batch:${Region}:${Account}:job-definition/${JobDefinitionName}:${Revision}</tt>),
--   the results include jobs that used the specified revision of the job
--   definition. Asterisk (*) is not supported when the ARN is used.</li>
--   <li><i>BEFORE_CREATED_AT</i> The value for the filter is the time
--   that's before the job was created. This corresponds to the
--   <tt>createdAt</tt> value. The value is a string representation of the
--   number of seconds since 00:00:00 UTC (midnight) on January 1,
--   1970.</li>
--   <li><i>AFTER_CREATED_AT</i> The value for the filter is the time
--   that's after the job was created. This corresponds to the
--   <tt>createdAt</tt> value. The value is a string representation of the
--   number of seconds since 00:00:00 UTC (midnight) on January 1,
--   1970.</li>
--   </ul>
--   
--   <a>$sel:nextToken:ListJobs'</a>, <a>listJobs_nextToken</a> - The
--   <tt>nextToken</tt> value returned from a previous paginated
--   <tt>ListJobs</tt> request where <tt>maxResults</tt> was used and the
--   results exceeded the value of that parameter. Pagination continues
--   from the end of the previous results that returned the
--   <tt>nextToken</tt> value. This value is <tt>null</tt> when there are
--   no more results to return.
--   
--   This token should be treated as an opaque identifier that's only used
--   to retrieve the next items in a list and not for other programmatic
--   purposes.
--   
--   <a>$sel:multiNodeJobId:ListJobs'</a>, <a>listJobs_multiNodeJobId</a> -
--   The job ID for a multi-node parallel job. Specifying a multi-node
--   parallel job ID with this parameter lists all nodes that are
--   associated with the specified job.
--   
--   <a>$sel:jobStatus:ListJobs'</a>, <a>listJobs_jobStatus</a> - The job
--   status used to filter jobs in the specified queue. If the
--   <tt>filters</tt> parameter is specified, the <tt>jobStatus</tt>
--   parameter is ignored and jobs with any status are returned. If you
--   don't specify a status, only <tt>RUNNING</tt> jobs are returned.
--   
--   <a>$sel:arrayJobId:ListJobs'</a>, <a>listJobs_arrayJobId</a> - The job
--   ID for an array job. Specifying an array job ID with this parameter
--   lists all child jobs from within the specified array.
--   
--   <a>$sel:jobQueue:ListJobs'</a>, <a>listJobs_jobQueue</a> - The name or
--   full Amazon Resource Name (ARN) of the job queue used to list jobs.
--   
--   <a>$sel:maxResults:ListJobs'</a>, <a>listJobs_maxResults</a> - The
--   maximum number of results returned by <tt>ListJobs</tt> in paginated
--   output. When this parameter is used, <tt>ListJobs</tt> only returns
--   <tt>maxResults</tt> results in a single page and a <tt>nextToken</tt>
--   response element. The remaining results of the initial request can be
--   seen by sending another <tt>ListJobs</tt> request with the returned
--   <tt>nextToken</tt> value. This value can be between 1 and 100. If this
--   parameter isn't used, then <tt>ListJobs</tt> returns up to 100 results
--   and a <tt>nextToken</tt> value if applicable.
newListJobs :: ListJobs

-- | <i>See:</i> <a>newListJobsResponse</a> smart constructor.
data ListJobsResponse
ListJobsResponse' :: Maybe Text -> Int -> [JobSummary] -> ListJobsResponse

-- | Create a value of <a>ListJobsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListJobs'</a>, <a>listJobsResponse_nextToken</a> -
--   The <tt>nextToken</tt> value to include in a future <tt>ListJobs</tt>
--   request. When the results of a <tt>ListJobs</tt> request exceed
--   <tt>maxResults</tt>, this value can be used to retrieve the next page
--   of results. This value is <tt>null</tt> when there are no more results
--   to return.
--   
--   <a>$sel:httpStatus:ListJobsResponse'</a>,
--   <a>listJobsResponse_httpStatus</a> - The response's http status code.
--   
--   <a>$sel:jobSummaryList:ListJobsResponse'</a>,
--   <a>listJobsResponse_jobSummaryList</a> - A list of job summaries that
--   match the request.
newListJobsResponse :: Int -> ListJobsResponse

-- | Contains the parameters for <tt>TerminateJob</tt>.
--   
--   <i>See:</i> <a>newTerminateJob</a> smart constructor.
data TerminateJob
TerminateJob' :: Text -> Text -> TerminateJob

-- | Create a value of <a>TerminateJob</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobId:TerminateJob'</a>, <a>terminateJob_jobId</a> - The Batch
--   job ID of the job to terminate.
--   
--   <a>$sel:reason:TerminateJob'</a>, <a>terminateJob_reason</a> - A
--   message to attach to the job that explains the reason for canceling
--   it. This message is returned by future DescribeJobs operations on the
--   job. This message is also recorded in the Batch activity logs.
newTerminateJob :: Text -> Text -> TerminateJob

-- | <i>See:</i> <a>newTerminateJobResponse</a> smart constructor.
data TerminateJobResponse
TerminateJobResponse' :: Int -> TerminateJobResponse

-- | Create a value of <a>TerminateJobResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:TerminateJobResponse'</a>,
--   <a>terminateJobResponse_httpStatus</a> - The response's http status
--   code.
newTerminateJobResponse :: Int -> TerminateJobResponse

-- | Contains the parameters for <tt>DescribeJobs</tt>.
--   
--   <i>See:</i> <a>newDescribeJobs</a> smart constructor.
data DescribeJobs
DescribeJobs' :: [Text] -> DescribeJobs

-- | Create a value of <a>DescribeJobs</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobs:DescribeJobs'</a>, <a>describeJobs_jobs</a> - A list of
--   up to 100 job IDs.
newDescribeJobs :: DescribeJobs

-- | <i>See:</i> <a>newDescribeJobsResponse</a> smart constructor.
data DescribeJobsResponse
DescribeJobsResponse' :: Maybe [JobDetail] -> Int -> DescribeJobsResponse

-- | Create a value of <a>DescribeJobsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobs:DescribeJobs'</a>, <a>describeJobsResponse_jobs</a> - The
--   list of jobs.
--   
--   <a>$sel:httpStatus:DescribeJobsResponse'</a>,
--   <a>describeJobsResponse_httpStatus</a> - The response's http status
--   code.
newDescribeJobsResponse :: Int -> DescribeJobsResponse

-- | Contains the parameters for <tt>DeleteComputeEnvironment</tt>.
--   
--   <i>See:</i> <a>newDeleteComputeEnvironment</a> smart constructor.
data DeleteComputeEnvironment
DeleteComputeEnvironment' :: Text -> DeleteComputeEnvironment

-- | Create a value of <a>DeleteComputeEnvironment</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:computeEnvironment:DeleteComputeEnvironment'</a>,
--   <a>deleteComputeEnvironment_computeEnvironment</a> - The name or
--   Amazon Resource Name (ARN) of the compute environment to delete.
newDeleteComputeEnvironment :: Text -> DeleteComputeEnvironment

-- | <i>See:</i> <a>newDeleteComputeEnvironmentResponse</a> smart
--   constructor.
data DeleteComputeEnvironmentResponse
DeleteComputeEnvironmentResponse' :: Int -> DeleteComputeEnvironmentResponse

-- | Create a value of <a>DeleteComputeEnvironmentResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteComputeEnvironmentResponse'</a>,
--   <a>deleteComputeEnvironmentResponse_httpStatus</a> - The response's
--   http status code.
newDeleteComputeEnvironmentResponse :: Int -> DeleteComputeEnvironmentResponse

-- | Contains the parameters for <tt>UpdateComputeEnvironment</tt>.
--   
--   <i>See:</i> <a>newUpdateComputeEnvironment</a> smart constructor.
data UpdateComputeEnvironment
UpdateComputeEnvironment' :: Maybe CEState -> Maybe ComputeResourceUpdate -> Maybe Text -> Text -> UpdateComputeEnvironment

-- | Create a value of <a>UpdateComputeEnvironment</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:state:UpdateComputeEnvironment'</a>,
--   <a>updateComputeEnvironment_state</a> - The state of the compute
--   environment. Compute environments in the <tt>ENABLED</tt> state can
--   accept jobs from a queue and scale in or out automatically based on
--   the workload demand of its associated queues.
--   
--   If the state is <tt>ENABLED</tt>, then the Batch scheduler can attempt
--   to place jobs from an associated job queue on the compute resources
--   within the environment. If the compute environment is managed, then it
--   can scale its instances out or in automatically, based on the job
--   queue demand.
--   
--   If the state is <tt>DISABLED</tt>, then the Batch scheduler doesn't
--   attempt to place jobs within the environment. Jobs in a
--   <tt>STARTING</tt> or <tt>RUNNING</tt> state continue to progress
--   normally. Managed compute environments in the <tt>DISABLED</tt> state
--   don't scale out. However, they scale in to <tt>minvCpus</tt> value
--   after instances become idle.
--   
--   <a>$sel:computeResources:UpdateComputeEnvironment'</a>,
--   <a>updateComputeEnvironment_computeResources</a> - Details of the
--   compute resources managed by the compute environment. Required for a
--   managed compute environment. For more information, see <a>Compute
--   Environments</a> in the <i>Batch User Guide</i>.
--   
--   <a>$sel:serviceRole:UpdateComputeEnvironment'</a>,
--   <a>updateComputeEnvironment_serviceRole</a> - The full Amazon Resource
--   Name (ARN) of the IAM role that allows Batch to make calls to other
--   Amazon Web Services services on your behalf. For more information, see
--   <a>Batch service IAM role</a> in the <i>Batch User Guide</i>.
--   
--   If the compute environment has a service-linked role, it can't be
--   changed to use a regular IAM role. Likewise, if the compute
--   environment has a regular IAM role, it can't be changed to use a
--   service-linked role.
--   
--   If your specified role has a path other than <tt>/</tt>, then you must
--   either specify the full role ARN (this is recommended) or prefix the
--   role name with the path.
--   
--   Depending on how you created your Batch service role, its ARN might
--   contain the <tt>service-role</tt> path prefix. When you only specify
--   the name of the service role, Batch assumes that your ARN doesn't use
--   the <tt>service-role</tt> path prefix. Because of this, we recommend
--   that you specify the full ARN of your service role when you create
--   compute environments.
--   
--   <a>$sel:computeEnvironment:UpdateComputeEnvironment'</a>,
--   <a>updateComputeEnvironment_computeEnvironment</a> - The name or full
--   Amazon Resource Name (ARN) of the compute environment to update.
newUpdateComputeEnvironment :: Text -> UpdateComputeEnvironment

-- | <i>See:</i> <a>newUpdateComputeEnvironmentResponse</a> smart
--   constructor.
data UpdateComputeEnvironmentResponse
UpdateComputeEnvironmentResponse' :: Maybe Text -> Maybe Text -> Int -> UpdateComputeEnvironmentResponse

-- | Create a value of <a>UpdateComputeEnvironmentResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:computeEnvironmentName:UpdateComputeEnvironmentResponse'</a>,
--   <a>updateComputeEnvironmentResponse_computeEnvironmentName</a> - The
--   name of the compute environment. Up to 128 letters (uppercase and
--   lowercase), numbers, hyphens, and underscores are allowed.
--   
--   <a>$sel:computeEnvironmentArn:UpdateComputeEnvironmentResponse'</a>,
--   <a>updateComputeEnvironmentResponse_computeEnvironmentArn</a> - The
--   Amazon Resource Name (ARN) of the compute environment.
--   
--   <a>$sel:httpStatus:UpdateComputeEnvironmentResponse'</a>,
--   <a>updateComputeEnvironmentResponse_httpStatus</a> - The response's
--   http status code.
newUpdateComputeEnvironmentResponse :: Int -> UpdateComputeEnvironmentResponse

-- | Contains the parameters for <tt>DescribeJobDefinitions</tt>.
--   
--   <i>See:</i> <a>newDescribeJobDefinitions</a> smart constructor.
data DescribeJobDefinitions
DescribeJobDefinitions' :: Maybe Text -> Maybe Text -> Maybe [Text] -> Maybe Text -> Maybe Int -> DescribeJobDefinitions

-- | Create a value of <a>DescribeJobDefinitions</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:DescribeJobDefinitions'</a>,
--   <a>describeJobDefinitions_status</a> - The status used to filter job
--   definitions.
--   
--   <a>$sel:jobDefinitionName:DescribeJobDefinitions'</a>,
--   <a>describeJobDefinitions_jobDefinitionName</a> - The name of the job
--   definition to describe.
--   
--   <a>$sel:jobDefinitions:DescribeJobDefinitions'</a>,
--   <a>describeJobDefinitions_jobDefinitions</a> - A list of up to 100 job
--   definitions. Each entry in the list can either be an ARN of the form
--   <tt>arn:aws:batch:${Region}:${Account}:job-definition/${JobDefinitionName}:${Revision}</tt>
--   or a short version using the form
--   <tt>${JobDefinitionName}:${Revision}</tt>.
--   
--   <a>$sel:nextToken:DescribeJobDefinitions'</a>,
--   <a>describeJobDefinitions_nextToken</a> - The <tt>nextToken</tt> value
--   returned from a previous paginated <tt>DescribeJobDefinitions</tt>
--   request where <tt>maxResults</tt> was used and the results exceeded
--   the value of that parameter. Pagination continues from the end of the
--   previous results that returned the <tt>nextToken</tt> value. This
--   value is <tt>null</tt> when there are no more results to return.
--   
--   This token should be treated as an opaque identifier that's only used
--   to retrieve the next items in a list and not for other programmatic
--   purposes.
--   
--   <a>$sel:maxResults:DescribeJobDefinitions'</a>,
--   <a>describeJobDefinitions_maxResults</a> - The maximum number of
--   results returned by <tt>DescribeJobDefinitions</tt> in paginated
--   output. When this parameter is used, <tt>DescribeJobDefinitions</tt>
--   only returns <tt>maxResults</tt> results in a single page and a
--   <tt>nextToken</tt> response element. The remaining results of the
--   initial request can be seen by sending another
--   <tt>DescribeJobDefinitions</tt> request with the returned
--   <tt>nextToken</tt> value. This value can be between 1 and 100. If this
--   parameter isn't used, then <tt>DescribeJobDefinitions</tt> returns up
--   to 100 results and a <tt>nextToken</tt> value if applicable.
newDescribeJobDefinitions :: DescribeJobDefinitions

-- | <i>See:</i> <a>newDescribeJobDefinitionsResponse</a> smart
--   constructor.
data DescribeJobDefinitionsResponse
DescribeJobDefinitionsResponse' :: Maybe [JobDefinition] -> Maybe Text -> Int -> DescribeJobDefinitionsResponse

-- | Create a value of <a>DescribeJobDefinitionsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobDefinitions:DescribeJobDefinitions'</a>,
--   <a>describeJobDefinitionsResponse_jobDefinitions</a> - The list of job
--   definitions.
--   
--   <a>$sel:nextToken:DescribeJobDefinitions'</a>,
--   <a>describeJobDefinitionsResponse_nextToken</a> - The
--   <tt>nextToken</tt> value to include in a future
--   <tt>DescribeJobDefinitions</tt> request. When the results of a
--   <tt>DescribeJobDefinitions</tt> request exceed <tt>maxResults</tt>,
--   this value can be used to retrieve the next page of results. This
--   value is <tt>null</tt> when there are no more results to return.
--   
--   <a>$sel:httpStatus:DescribeJobDefinitionsResponse'</a>,
--   <a>describeJobDefinitionsResponse_httpStatus</a> - The response's http
--   status code.
newDescribeJobDefinitionsResponse :: Int -> DescribeJobDefinitionsResponse

-- | Contains the parameters for <tt>UpdateJobQueue</tt>.
--   
--   <i>See:</i> <a>newUpdateJobQueue</a> smart constructor.
data UpdateJobQueue
UpdateJobQueue' :: Maybe JQState -> Maybe Int -> Maybe [ComputeEnvironmentOrder] -> Text -> UpdateJobQueue

-- | Create a value of <a>UpdateJobQueue</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:state:UpdateJobQueue'</a>, <a>updateJobQueue_state</a> -
--   Describes the queue's ability to accept new jobs. If the job queue
--   state is <tt>ENABLED</tt>, it can accept jobs. If the job queue state
--   is <tt>DISABLED</tt>, new jobs can't be added to the queue, but jobs
--   already in the queue can finish.
--   
--   <a>$sel:priority:UpdateJobQueue'</a>, <a>updateJobQueue_priority</a> -
--   The priority of the job queue. Job queues with a higher priority (or a
--   higher integer value for the <tt>priority</tt> parameter) are
--   evaluated first when associated with the same compute environment.
--   Priority is determined in descending order, for example, a job queue
--   with a priority value of <tt>10</tt> is given scheduling preference
--   over a job queue with a priority value of <tt>1</tt>. All of the
--   compute environments must be either EC2 (<tt>EC2</tt> or
--   <tt>SPOT</tt>) or Fargate (<tt>FARGATE</tt> or <tt>FARGATE_SPOT</tt>).
--   EC2 and Fargate compute environments can't be mixed.
--   
--   <a>$sel:computeEnvironmentOrder:UpdateJobQueue'</a>,
--   <a>updateJobQueue_computeEnvironmentOrder</a> - Details the set of
--   compute environments mapped to a job queue and their order relative to
--   each other. This is one of the parameters used by the job scheduler to
--   determine which compute environment should run a given job. Compute
--   environments must be in the <tt>VALID</tt> state before you can
--   associate them with a job queue. All of the compute environments must
--   be either EC2 (<tt>EC2</tt> or <tt>SPOT</tt>) or Fargate
--   (<tt>FARGATE</tt> or <tt>FARGATE_SPOT</tt>). EC2 and Fargate compute
--   environments can't be mixed.
--   
--   All compute environments that are associated with a job queue must
--   share the same architecture. Batch doesn't support mixing compute
--   environment architecture types in a single job queue.
--   
--   <a>$sel:jobQueue:UpdateJobQueue'</a>, <a>updateJobQueue_jobQueue</a> -
--   The name or the Amazon Resource Name (ARN) of the job queue.
newUpdateJobQueue :: Text -> UpdateJobQueue

-- | <i>See:</i> <a>newUpdateJobQueueResponse</a> smart constructor.
data UpdateJobQueueResponse
UpdateJobQueueResponse' :: Maybe Text -> Maybe Text -> Int -> UpdateJobQueueResponse

-- | Create a value of <a>UpdateJobQueueResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobQueueArn:UpdateJobQueueResponse'</a>,
--   <a>updateJobQueueResponse_jobQueueArn</a> - The Amazon Resource Name
--   (ARN) of the job queue.
--   
--   <a>$sel:jobQueueName:UpdateJobQueueResponse'</a>,
--   <a>updateJobQueueResponse_jobQueueName</a> - The name of the job
--   queue.
--   
--   <a>$sel:httpStatus:UpdateJobQueueResponse'</a>,
--   <a>updateJobQueueResponse_httpStatus</a> - The response's http status
--   code.
newUpdateJobQueueResponse :: Int -> UpdateJobQueueResponse

-- | Contains the parameters for <tt>DeleteJobQueue</tt>.
--   
--   <i>See:</i> <a>newDeleteJobQueue</a> smart constructor.
data DeleteJobQueue
DeleteJobQueue' :: Text -> DeleteJobQueue

-- | Create a value of <a>DeleteJobQueue</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobQueue:DeleteJobQueue'</a>, <a>deleteJobQueue_jobQueue</a> -
--   The short name or full Amazon Resource Name (ARN) of the queue to
--   delete.
newDeleteJobQueue :: Text -> DeleteJobQueue

-- | <i>See:</i> <a>newDeleteJobQueueResponse</a> smart constructor.
data DeleteJobQueueResponse
DeleteJobQueueResponse' :: Int -> DeleteJobQueueResponse

-- | Create a value of <a>DeleteJobQueueResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteJobQueueResponse'</a>,
--   <a>deleteJobQueueResponse_httpStatus</a> - The response's http status
--   code.
newDeleteJobQueueResponse :: Int -> DeleteJobQueueResponse

-- | Contains the parameters for <tt>CreateJobQueue</tt>.
--   
--   <i>See:</i> <a>newCreateJobQueue</a> smart constructor.
data CreateJobQueue
CreateJobQueue' :: Maybe JQState -> Maybe (HashMap Text Text) -> Text -> Int -> [ComputeEnvironmentOrder] -> CreateJobQueue

-- | Create a value of <a>CreateJobQueue</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:state:CreateJobQueue'</a>, <a>createJobQueue_state</a> - The
--   state of the job queue. If the job queue state is <tt>ENABLED</tt>, it
--   is able to accept jobs. If the job queue state is <tt>DISABLED</tt>,
--   new jobs can't be added to the queue, but jobs already in the queue
--   can finish.
--   
--   <a>$sel:tags:CreateJobQueue'</a>, <a>createJobQueue_tags</a> - The
--   tags that you apply to the job queue to help you categorize and
--   organize your resources. Each tag consists of a key and an optional
--   value. For more information, see <a>Tagging your Batch resources</a>
--   in <i>Batch User Guide</i>.
--   
--   <a>$sel:jobQueueName:CreateJobQueue'</a>,
--   <a>createJobQueue_jobQueueName</a> - The name of the job queue. Up to
--   128 letters (uppercase and lowercase), numbers, and underscores are
--   allowed.
--   
--   <a>$sel:priority:CreateJobQueue'</a>, <a>createJobQueue_priority</a> -
--   The priority of the job queue. Job queues with a higher priority (or a
--   higher integer value for the <tt>priority</tt> parameter) are
--   evaluated first when associated with the same compute environment.
--   Priority is determined in descending order. For example, a job queue
--   with a priority value of <tt>10</tt> is given scheduling preference
--   over a job queue with a priority value of <tt>1</tt>. All of the
--   compute environments must be either EC2 (<tt>EC2</tt> or
--   <tt>SPOT</tt>) or Fargate (<tt>FARGATE</tt> or <tt>FARGATE_SPOT</tt>);
--   EC2 and Fargate compute environments can't be mixed.
--   
--   <a>$sel:computeEnvironmentOrder:CreateJobQueue'</a>,
--   <a>createJobQueue_computeEnvironmentOrder</a> - The set of compute
--   environments mapped to a job queue and their order relative to each
--   other. The job scheduler uses this parameter to determine which
--   compute environment should run a specific job. Compute environments
--   must be in the <tt>VALID</tt> state before you can associate them with
--   a job queue. You can associate up to three compute environments with a
--   job queue. All of the compute environments must be either EC2
--   (<tt>EC2</tt> or <tt>SPOT</tt>) or Fargate (<tt>FARGATE</tt> or
--   <tt>FARGATE_SPOT</tt>); EC2 and Fargate compute environments can't be
--   mixed.
--   
--   All compute environments that are associated with a job queue must
--   share the same architecture. Batch doesn't support mixing compute
--   environment architecture types in a single job queue.
newCreateJobQueue :: Text -> Int -> CreateJobQueue

-- | <i>See:</i> <a>newCreateJobQueueResponse</a> smart constructor.
data CreateJobQueueResponse
CreateJobQueueResponse' :: Int -> Text -> Text -> CreateJobQueueResponse

-- | Create a value of <a>CreateJobQueueResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreateJobQueueResponse'</a>,
--   <a>createJobQueueResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:jobQueueName:CreateJobQueue'</a>,
--   <a>createJobQueueResponse_jobQueueName</a> - The name of the job
--   queue.
--   
--   <a>$sel:jobQueueArn:CreateJobQueueResponse'</a>,
--   <a>createJobQueueResponse_jobQueueArn</a> - The Amazon Resource Name
--   (ARN) of the job queue.
newCreateJobQueueResponse :: Int -> Text -> Text -> CreateJobQueueResponse

-- | <i>See:</i> <a>newDeregisterJobDefinition</a> smart constructor.
data DeregisterJobDefinition
DeregisterJobDefinition' :: Text -> DeregisterJobDefinition

-- | Create a value of <a>DeregisterJobDefinition</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobDefinition:DeregisterJobDefinition'</a>,
--   <a>deregisterJobDefinition_jobDefinition</a> - The name and revision
--   (<tt>name:revision</tt>) or full Amazon Resource Name (ARN) of the job
--   definition to deregister.
newDeregisterJobDefinition :: Text -> DeregisterJobDefinition

-- | <i>See:</i> <a>newDeregisterJobDefinitionResponse</a> smart
--   constructor.
data DeregisterJobDefinitionResponse
DeregisterJobDefinitionResponse' :: Int -> DeregisterJobDefinitionResponse

-- | Create a value of <a>DeregisterJobDefinitionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeregisterJobDefinitionResponse'</a>,
--   <a>deregisterJobDefinitionResponse_httpStatus</a> - The response's
--   http status code.
newDeregisterJobDefinitionResponse :: Int -> DeregisterJobDefinitionResponse

-- | Contains the parameters for <tt>DescribeJobQueues</tt>.
--   
--   <i>See:</i> <a>newDescribeJobQueues</a> smart constructor.
data DescribeJobQueues
DescribeJobQueues' :: Maybe Text -> Maybe [Text] -> Maybe Int -> DescribeJobQueues

-- | Create a value of <a>DescribeJobQueues</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeJobQueues'</a>,
--   <a>describeJobQueues_nextToken</a> - The <tt>nextToken</tt> value
--   returned from a previous paginated <tt>DescribeJobQueues</tt> request
--   where <tt>maxResults</tt> was used and the results exceeded the value
--   of that parameter. Pagination continues from the end of the previous
--   results that returned the <tt>nextToken</tt> value. This value is
--   <tt>null</tt> when there are no more results to return.
--   
--   This token should be treated as an opaque identifier that's only used
--   to retrieve the next items in a list and not for other programmatic
--   purposes.
--   
--   <a>$sel:jobQueues:DescribeJobQueues'</a>,
--   <a>describeJobQueues_jobQueues</a> - A list of up to 100 queue names
--   or full queue Amazon Resource Name (ARN) entries.
--   
--   <a>$sel:maxResults:DescribeJobQueues'</a>,
--   <a>describeJobQueues_maxResults</a> - The maximum number of results
--   returned by <tt>DescribeJobQueues</tt> in paginated output. When this
--   parameter is used, <tt>DescribeJobQueues</tt> only returns
--   <tt>maxResults</tt> results in a single page and a <tt>nextToken</tt>
--   response element. The remaining results of the initial request can be
--   seen by sending another <tt>DescribeJobQueues</tt> request with the
--   returned <tt>nextToken</tt> value. This value can be between 1 and
--   100. If this parameter isn't used, then <tt>DescribeJobQueues</tt>
--   returns up to 100 results and a <tt>nextToken</tt> value if
--   applicable.
newDescribeJobQueues :: DescribeJobQueues

-- | <i>See:</i> <a>newDescribeJobQueuesResponse</a> smart constructor.
data DescribeJobQueuesResponse
DescribeJobQueuesResponse' :: Maybe Text -> Maybe [JobQueueDetail] -> Int -> DescribeJobQueuesResponse

-- | Create a value of <a>DescribeJobQueuesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeJobQueues'</a>,
--   <a>describeJobQueuesResponse_nextToken</a> - The <tt>nextToken</tt>
--   value to include in a future <tt>DescribeJobQueues</tt> request. When
--   the results of a <tt>DescribeJobQueues</tt> request exceed
--   <tt>maxResults</tt>, this value can be used to retrieve the next page
--   of results. This value is <tt>null</tt> when there are no more results
--   to return.
--   
--   <a>$sel:jobQueues:DescribeJobQueues'</a>,
--   <a>describeJobQueuesResponse_jobQueues</a> - The list of job queues.
--   
--   <a>$sel:httpStatus:DescribeJobQueuesResponse'</a>,
--   <a>describeJobQueuesResponse_httpStatus</a> - The response's http
--   status code.
newDescribeJobQueuesResponse :: Int -> DescribeJobQueuesResponse

-- | <i>See:</i> <a>newTagResource</a> smart constructor.
data TagResource
TagResource' :: Text -> HashMap Text Text -> TagResource

-- | Create a value of <a>TagResource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:TagResource'</a>, <a>tagResource_resourceArn</a> -
--   The Amazon Resource Name (ARN) of the resource that tags are added to.
--   Batch resources that support tags are compute environments, jobs, job
--   definitions, and job queues. ARNs for child jobs of array and
--   multi-node parallel (MNP) jobs are not supported.
--   
--   <a>$sel:tags:TagResource'</a>, <a>tagResource_tags</a> - The tags that
--   you apply to the resource to help you categorize and organize your
--   resources. Each tag consists of a key and an optional value. For more
--   information, see <a>Tagging Amazon Web Services Resources</a> in
--   <i>Amazon Web Services General Reference</i>.
newTagResource :: Text -> TagResource

-- | <i>See:</i> <a>newTagResourceResponse</a> smart constructor.
data TagResourceResponse
TagResourceResponse' :: Int -> TagResourceResponse

-- | Create a value of <a>TagResourceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:TagResourceResponse'</a>,
--   <a>tagResourceResponse_httpStatus</a> - The response's http status
--   code.
newTagResourceResponse :: Int -> TagResourceResponse

-- | <i>See:</i> <a>newUntagResource</a> smart constructor.
data UntagResource
UntagResource' :: Text -> NonEmpty Text -> UntagResource

-- | Create a value of <a>UntagResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:UntagResource'</a>,
--   <a>untagResource_resourceArn</a> - The Amazon Resource Name (ARN) of
--   the resource from which to delete tags. Batch resources that support
--   tags are compute environments, jobs, job definitions, and job queues.
--   ARNs for child jobs of array and multi-node parallel (MNP) jobs are
--   not supported.
--   
--   <a>$sel:tagKeys:UntagResource'</a>, <a>untagResource_tagKeys</a> - The
--   keys of the tags to be removed.
newUntagResource :: Text -> NonEmpty Text -> UntagResource

-- | <i>See:</i> <a>newUntagResourceResponse</a> smart constructor.
data UntagResourceResponse
UntagResourceResponse' :: Int -> UntagResourceResponse

-- | Create a value of <a>UntagResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UntagResourceResponse'</a>,
--   <a>untagResourceResponse_httpStatus</a> - The response's http status
--   code.
newUntagResourceResponse :: Int -> UntagResourceResponse

-- | Contains the parameters for <tt>DescribeComputeEnvironments</tt>.
--   
--   <i>See:</i> <a>newDescribeComputeEnvironments</a> smart constructor.
data DescribeComputeEnvironments
DescribeComputeEnvironments' :: Maybe [Text] -> Maybe Text -> Maybe Int -> DescribeComputeEnvironments

-- | Create a value of <a>DescribeComputeEnvironments</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:computeEnvironments:DescribeComputeEnvironments'</a>,
--   <a>describeComputeEnvironments_computeEnvironments</a> - A list of up
--   to 100 compute environment names or full Amazon Resource Name (ARN)
--   entries.
--   
--   <a>$sel:nextToken:DescribeComputeEnvironments'</a>,
--   <a>describeComputeEnvironments_nextToken</a> - The <tt>nextToken</tt>
--   value returned from a previous paginated
--   <tt>DescribeComputeEnvironments</tt> request where <tt>maxResults</tt>
--   was used and the results exceeded the value of that parameter.
--   Pagination continues from the end of the previous results that
--   returned the <tt>nextToken</tt> value. This value is <tt>null</tt>
--   when there are no more results to return.
--   
--   This token should be treated as an opaque identifier that's only used
--   to retrieve the next items in a list and not for other programmatic
--   purposes.
--   
--   <a>$sel:maxResults:DescribeComputeEnvironments'</a>,
--   <a>describeComputeEnvironments_maxResults</a> - The maximum number of
--   cluster results returned by <tt>DescribeComputeEnvironments</tt> in
--   paginated output. When this parameter is used,
--   <tt>DescribeComputeEnvironments</tt> only returns <tt>maxResults</tt>
--   results in a single page along with a <tt>nextToken</tt> response
--   element. The remaining results of the initial request can be seen by
--   sending another <tt>DescribeComputeEnvironments</tt> request with the
--   returned <tt>nextToken</tt> value. This value can be between 1 and
--   100. If this parameter isn't used, then
--   <tt>DescribeComputeEnvironments</tt> returns up to 100 results and a
--   <tt>nextToken</tt> value if applicable.
newDescribeComputeEnvironments :: DescribeComputeEnvironments

-- | <i>See:</i> <a>newDescribeComputeEnvironmentsResponse</a> smart
--   constructor.
data DescribeComputeEnvironmentsResponse
DescribeComputeEnvironmentsResponse' :: Maybe [ComputeEnvironmentDetail] -> Maybe Text -> Int -> DescribeComputeEnvironmentsResponse

-- | Create a value of <a>DescribeComputeEnvironmentsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:computeEnvironments:DescribeComputeEnvironments'</a>,
--   <a>describeComputeEnvironmentsResponse_computeEnvironments</a> - The
--   list of compute environments.
--   
--   <a>$sel:nextToken:DescribeComputeEnvironments'</a>,
--   <a>describeComputeEnvironmentsResponse_nextToken</a> - The
--   <tt>nextToken</tt> value to include in a future
--   <tt>DescribeComputeEnvironments</tt> request. When the results of a
--   <tt>DescribeJobDefinitions</tt> request exceed <tt>maxResults</tt>,
--   this value can be used to retrieve the next page of results. This
--   value is <tt>null</tt> when there are no more results to return.
--   
--   <a>$sel:httpStatus:DescribeComputeEnvironmentsResponse'</a>,
--   <a>describeComputeEnvironmentsResponse_httpStatus</a> - The response's
--   http status code.
newDescribeComputeEnvironmentsResponse :: Int -> DescribeComputeEnvironmentsResponse

-- | Contains the parameters for <tt>CancelJob</tt>.
--   
--   <i>See:</i> <a>newCancelJob</a> smart constructor.
data CancelJob
CancelJob' :: Text -> Text -> CancelJob

-- | Create a value of <a>CancelJob</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobId:CancelJob'</a>, <a>cancelJob_jobId</a> - The Batch job
--   ID of the job to cancel.
--   
--   <a>$sel:reason:CancelJob'</a>, <a>cancelJob_reason</a> - A message to
--   attach to the job that explains the reason for canceling it. This
--   message is returned by future DescribeJobs operations on the job. This
--   message is also recorded in the Batch activity logs.
newCancelJob :: Text -> Text -> CancelJob

-- | <i>See:</i> <a>newCancelJobResponse</a> smart constructor.
data CancelJobResponse
CancelJobResponse' :: Int -> CancelJobResponse

-- | Create a value of <a>CancelJobResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CancelJobResponse'</a>,
--   <a>cancelJobResponse_httpStatus</a> - The response's http status code.
newCancelJobResponse :: Int -> CancelJobResponse
newtype ArrayJobDependency
ArrayJobDependency' :: Text -> ArrayJobDependency
[fromArrayJobDependency] :: ArrayJobDependency -> Text
pattern ArrayJobDependency_N_TO_N :: ArrayJobDependency
pattern ArrayJobDependency_SEQUENTIAL :: ArrayJobDependency
newtype AssignPublicIp
AssignPublicIp' :: Text -> AssignPublicIp
[fromAssignPublicIp] :: AssignPublicIp -> Text
pattern AssignPublicIp_DISABLED :: AssignPublicIp
pattern AssignPublicIp_ENABLED :: AssignPublicIp
newtype CEState
CEState' :: Text -> CEState
[fromCEState] :: CEState -> Text
pattern CEState_DISABLED :: CEState
pattern CEState_ENABLED :: CEState
newtype CEStatus
CEStatus' :: Text -> CEStatus
[fromCEStatus] :: CEStatus -> Text
pattern CEStatus_CREATING :: CEStatus
pattern CEStatus_DELETED :: CEStatus
pattern CEStatus_DELETING :: CEStatus
pattern CEStatus_INVALID :: CEStatus
pattern CEStatus_UPDATING :: CEStatus
pattern CEStatus_VALID :: CEStatus
newtype CEType
CEType' :: Text -> CEType
[fromCEType] :: CEType -> Text
pattern CEType_MANAGED :: CEType
pattern CEType_UNMANAGED :: CEType
newtype CRAllocationStrategy
CRAllocationStrategy' :: Text -> CRAllocationStrategy
[fromCRAllocationStrategy] :: CRAllocationStrategy -> Text
pattern CRAllocationStrategy_BEST_FIT :: CRAllocationStrategy
pattern CRAllocationStrategy_BEST_FIT_PROGRESSIVE :: CRAllocationStrategy
pattern CRAllocationStrategy_SPOT_CAPACITY_OPTIMIZED :: CRAllocationStrategy
newtype CRType
CRType' :: Text -> CRType
[fromCRType] :: CRType -> Text
pattern CRType_EC2 :: CRType
pattern CRType_FARGATE :: CRType
pattern CRType_FARGATE_SPOT :: CRType
pattern CRType_SPOT :: CRType
newtype DeviceCgroupPermission
DeviceCgroupPermission' :: Text -> DeviceCgroupPermission
[fromDeviceCgroupPermission] :: DeviceCgroupPermission -> Text
pattern DeviceCgroupPermission_MKNOD :: DeviceCgroupPermission
pattern DeviceCgroupPermission_READ :: DeviceCgroupPermission
pattern DeviceCgroupPermission_WRITE :: DeviceCgroupPermission
newtype EFSAuthorizationConfigIAM
EFSAuthorizationConfigIAM' :: Text -> EFSAuthorizationConfigIAM
[fromEFSAuthorizationConfigIAM] :: EFSAuthorizationConfigIAM -> Text
pattern EFSAuthorizationConfigIAM_DISABLED :: EFSAuthorizationConfigIAM
pattern EFSAuthorizationConfigIAM_ENABLED :: EFSAuthorizationConfigIAM
newtype EFSTransitEncryption
EFSTransitEncryption' :: Text -> EFSTransitEncryption
[fromEFSTransitEncryption] :: EFSTransitEncryption -> Text
pattern EFSTransitEncryption_DISABLED :: EFSTransitEncryption
pattern EFSTransitEncryption_ENABLED :: EFSTransitEncryption
newtype JQState
JQState' :: Text -> JQState
[fromJQState] :: JQState -> Text
pattern JQState_DISABLED :: JQState
pattern JQState_ENABLED :: JQState
newtype JQStatus
JQStatus' :: Text -> JQStatus
[fromJQStatus] :: JQStatus -> Text
pattern JQStatus_CREATING :: JQStatus
pattern JQStatus_DELETED :: JQStatus
pattern JQStatus_DELETING :: JQStatus
pattern JQStatus_INVALID :: JQStatus
pattern JQStatus_UPDATING :: JQStatus
pattern JQStatus_VALID :: JQStatus
newtype JobDefinitionType
JobDefinitionType' :: Text -> JobDefinitionType
[fromJobDefinitionType] :: JobDefinitionType -> Text
pattern JobDefinitionType_Container :: JobDefinitionType
pattern JobDefinitionType_Multinode :: JobDefinitionType
newtype JobStatus
JobStatus' :: Text -> JobStatus
[fromJobStatus] :: JobStatus -> Text
pattern JobStatus_FAILED :: JobStatus
pattern JobStatus_PENDING :: JobStatus
pattern JobStatus_RUNNABLE :: JobStatus
pattern JobStatus_RUNNING :: JobStatus
pattern JobStatus_STARTING :: JobStatus
pattern JobStatus_SUBMITTED :: JobStatus
pattern JobStatus_SUCCEEDED :: JobStatus
newtype LogDriver
LogDriver' :: Text -> LogDriver
[fromLogDriver] :: LogDriver -> Text
pattern LogDriver_Awslogs :: LogDriver
pattern LogDriver_Fluentd :: LogDriver
pattern LogDriver_Gelf :: LogDriver
pattern LogDriver_Journald :: LogDriver
pattern LogDriver_Json_file :: LogDriver
pattern LogDriver_Splunk :: LogDriver
pattern LogDriver_Syslog :: LogDriver
newtype PlatformCapability
PlatformCapability' :: Text -> PlatformCapability
[fromPlatformCapability] :: PlatformCapability -> Text
pattern PlatformCapability_EC2 :: PlatformCapability
pattern PlatformCapability_FARGATE :: PlatformCapability
newtype ResourceType
ResourceType' :: Text -> ResourceType
[fromResourceType] :: ResourceType -> Text
pattern ResourceType_GPU :: ResourceType
pattern ResourceType_MEMORY :: ResourceType
pattern ResourceType_VCPU :: ResourceType
newtype RetryAction
RetryAction' :: Text -> RetryAction
[fromRetryAction] :: RetryAction -> Text
pattern RetryAction_EXIT :: RetryAction
pattern RetryAction_RETRY :: RetryAction

-- | An object representing an Batch array job.
--   
--   <i>See:</i> <a>newArrayProperties</a> smart constructor.
data ArrayProperties
ArrayProperties' :: Maybe Int -> ArrayProperties

-- | Create a value of <a>ArrayProperties</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:size:ArrayProperties'</a>, <a>arrayProperties_size</a> - The
--   size of the array job.
newArrayProperties :: ArrayProperties

-- | An object representing the array properties of a job.
--   
--   <i>See:</i> <a>newArrayPropertiesDetail</a> smart constructor.
data ArrayPropertiesDetail
ArrayPropertiesDetail' :: Maybe Int -> Maybe (HashMap Text Int) -> Maybe Int -> ArrayPropertiesDetail

-- | Create a value of <a>ArrayPropertiesDetail</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:size:ArrayPropertiesDetail'</a>,
--   <a>arrayPropertiesDetail_size</a> - The size of the array job. This
--   parameter is returned for parent array jobs.
--   
--   <a>$sel:statusSummary:ArrayPropertiesDetail'</a>,
--   <a>arrayPropertiesDetail_statusSummary</a> - A summary of the number
--   of array job children in each available job status. This parameter is
--   returned for parent array jobs.
--   
--   <a>$sel:index:ArrayPropertiesDetail'</a>,
--   <a>arrayPropertiesDetail_index</a> - The job index within the array
--   that's associated with this job. This parameter is returned for array
--   job children.
newArrayPropertiesDetail :: ArrayPropertiesDetail

-- | An object representing the array properties of a job.
--   
--   <i>See:</i> <a>newArrayPropertiesSummary</a> smart constructor.
data ArrayPropertiesSummary
ArrayPropertiesSummary' :: Maybe Int -> Maybe Int -> ArrayPropertiesSummary

-- | Create a value of <a>ArrayPropertiesSummary</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:size:ArrayPropertiesSummary'</a>,
--   <a>arrayPropertiesSummary_size</a> - The size of the array job. This
--   parameter is returned for parent array jobs.
--   
--   <a>$sel:index:ArrayPropertiesSummary'</a>,
--   <a>arrayPropertiesSummary_index</a> - The job index within the array
--   that's associated with this job. This parameter is returned for
--   children of array jobs.
newArrayPropertiesSummary :: ArrayPropertiesSummary

-- | An object representing the details of a container that's part of a job
--   attempt.
--   
--   <i>See:</i> <a>newAttemptContainerDetail</a> smart constructor.
data AttemptContainerDetail
AttemptContainerDetail' :: Maybe [NetworkInterface] -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Int -> AttemptContainerDetail

-- | Create a value of <a>AttemptContainerDetail</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:networkInterfaces:AttemptContainerDetail'</a>,
--   <a>attemptContainerDetail_networkInterfaces</a> - The network
--   interfaces associated with the job attempt.
--   
--   <a>$sel:taskArn:AttemptContainerDetail'</a>,
--   <a>attemptContainerDetail_taskArn</a> - The Amazon Resource Name (ARN)
--   of the Amazon ECS task that's associated with the job attempt. Each
--   container attempt receives a task ARN when they reach the
--   <tt>STARTING</tt> status.
--   
--   <a>$sel:containerInstanceArn:AttemptContainerDetail'</a>,
--   <a>attemptContainerDetail_containerInstanceArn</a> - The Amazon
--   Resource Name (ARN) of the Amazon ECS container instance that hosts
--   the job attempt.
--   
--   <a>$sel:reason:AttemptContainerDetail'</a>,
--   <a>attemptContainerDetail_reason</a> - A short (255 max characters)
--   human-readable string to provide additional details about a running or
--   stopped container.
--   
--   <a>$sel:logStreamName:AttemptContainerDetail'</a>,
--   <a>attemptContainerDetail_logStreamName</a> - The name of the
--   CloudWatch Logs log stream associated with the container. The log
--   group for Batch jobs is <tt>/aws/batch/job</tt>. Each container
--   attempt receives a log stream name when they reach the
--   <tt>RUNNING</tt> status.
--   
--   <a>$sel:exitCode:AttemptContainerDetail'</a>,
--   <a>attemptContainerDetail_exitCode</a> - The exit code for the job
--   attempt. A non-zero exit code is considered a failure.
newAttemptContainerDetail :: AttemptContainerDetail

-- | An object representing a job attempt.
--   
--   <i>See:</i> <a>newAttemptDetail</a> smart constructor.
data AttemptDetail
AttemptDetail' :: Maybe Integer -> Maybe Integer -> Maybe AttemptContainerDetail -> Maybe Text -> AttemptDetail

-- | Create a value of <a>AttemptDetail</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:stoppedAt:AttemptDetail'</a>, <a>attemptDetail_stoppedAt</a> -
--   The Unix timestamp (in milliseconds) for when the attempt was stopped
--   (when the attempt transitioned from the <tt>RUNNING</tt> state to a
--   terminal state, such as <tt>SUCCEEDED</tt> or <tt>FAILED</tt>).
--   
--   <a>$sel:startedAt:AttemptDetail'</a>, <a>attemptDetail_startedAt</a> -
--   The Unix timestamp (in milliseconds) for when the attempt was started
--   (when the attempt transitioned from the <tt>STARTING</tt> state to the
--   <tt>RUNNING</tt> state).
--   
--   <a>$sel:container:AttemptDetail'</a>, <a>attemptDetail_container</a> -
--   Details about the container in this job attempt.
--   
--   <a>$sel:statusReason:AttemptDetail'</a>,
--   <a>attemptDetail_statusReason</a> - A short, human-readable string to
--   provide additional details about the current status of the job
--   attempt.
newAttemptDetail :: AttemptDetail

-- | An object representing an Batch compute environment.
--   
--   <i>See:</i> <a>newComputeEnvironmentDetail</a> smart constructor.
data ComputeEnvironmentDetail
ComputeEnvironmentDetail' :: Maybe CEStatus -> Maybe CEState -> Maybe ComputeResource -> Maybe Text -> Maybe CEType -> Maybe Text -> Maybe (HashMap Text Text) -> Text -> Text -> Text -> ComputeEnvironmentDetail

-- | Create a value of <a>ComputeEnvironmentDetail</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:ComputeEnvironmentDetail'</a>,
--   <a>computeEnvironmentDetail_status</a> - The current status of the
--   compute environment (for example, <tt>CREATING</tt> or
--   <tt>VALID</tt>).
--   
--   <a>$sel:state:ComputeEnvironmentDetail'</a>,
--   <a>computeEnvironmentDetail_state</a> - The state of the compute
--   environment. The valid values are <tt>ENABLED</tt> or
--   <tt>DISABLED</tt>.
--   
--   If the state is <tt>ENABLED</tt>, then the Batch scheduler can attempt
--   to place jobs from an associated job queue on the compute resources
--   within the environment. If the compute environment is managed, then it
--   can scale its instances out or in automatically, based on the job
--   queue demand.
--   
--   If the state is <tt>DISABLED</tt>, then the Batch scheduler doesn't
--   attempt to place jobs within the environment. Jobs in a
--   <tt>STARTING</tt> or <tt>RUNNING</tt> state continue to progress
--   normally. Managed compute environments in the <tt>DISABLED</tt> state
--   don't scale out. However, they scale in to <tt>minvCpus</tt> value
--   after instances become idle.
--   
--   <a>$sel:computeResources:ComputeEnvironmentDetail'</a>,
--   <a>computeEnvironmentDetail_computeResources</a> - The compute
--   resources defined for the compute environment. For more information,
--   see <a>Compute Environments</a> in the <i>Batch User Guide</i>.
--   
--   <a>$sel:statusReason:ComputeEnvironmentDetail'</a>,
--   <a>computeEnvironmentDetail_statusReason</a> - A short, human-readable
--   string to provide additional details about the current status of the
--   compute environment.
--   
--   <a>$sel:type':ComputeEnvironmentDetail'</a>,
--   <a>computeEnvironmentDetail_type</a> - The type of the compute
--   environment: <tt>MANAGED</tt> or <tt>UNMANAGED</tt>. For more
--   information, see <a>Compute Environments</a> in the <i>Batch User
--   Guide</i>.
--   
--   <a>$sel:serviceRole:ComputeEnvironmentDetail'</a>,
--   <a>computeEnvironmentDetail_serviceRole</a> - The service role
--   associated with the compute environment that allows Batch to make
--   calls to Amazon Web Services API operations on your behalf. For more
--   information, see <a>Batch service IAM role</a> in the <i>Batch User
--   Guide</i>.
--   
--   <a>$sel:tags:ComputeEnvironmentDetail'</a>,
--   <a>computeEnvironmentDetail_tags</a> - The tags applied to the compute
--   environment.
--   
--   <a>$sel:computeEnvironmentName:ComputeEnvironmentDetail'</a>,
--   <a>computeEnvironmentDetail_computeEnvironmentName</a> - The name of
--   the compute environment. Up to 128 letters (uppercase and lowercase),
--   numbers, hyphens, and underscores are allowed.
--   
--   <a>$sel:computeEnvironmentArn:ComputeEnvironmentDetail'</a>,
--   <a>computeEnvironmentDetail_computeEnvironmentArn</a> - The Amazon
--   Resource Name (ARN) of the compute environment.
--   
--   <a>$sel:ecsClusterArn:ComputeEnvironmentDetail'</a>,
--   <a>computeEnvironmentDetail_ecsClusterArn</a> - The Amazon Resource
--   Name (ARN) of the underlying Amazon ECS cluster used by the compute
--   environment.
newComputeEnvironmentDetail :: Text -> Text -> Text -> ComputeEnvironmentDetail

-- | The order in which compute environments are tried for job placement
--   within a queue. Compute environments are tried in ascending order. For
--   example, if two compute environments are associated with a job queue,
--   the compute environment with a lower order integer value is tried for
--   job placement first. Compute environments must be in the
--   <tt>VALID</tt> state before you can associate them with a job queue.
--   All of the compute environments must be either EC2 (<tt>EC2</tt> or
--   <tt>SPOT</tt>) or Fargate (<tt>FARGATE</tt> or <tt>FARGATE_SPOT</tt>);
--   EC2 and Fargate compute environments can't be mixed.
--   
--   All compute environments that are associated with a job queue must
--   share the same architecture. Batch doesn't support mixing compute
--   environment architecture types in a single job queue.
--   
--   <i>See:</i> <a>newComputeEnvironmentOrder</a> smart constructor.
data ComputeEnvironmentOrder
ComputeEnvironmentOrder' :: Int -> Text -> ComputeEnvironmentOrder

-- | Create a value of <a>ComputeEnvironmentOrder</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:order:ComputeEnvironmentOrder'</a>,
--   <a>computeEnvironmentOrder_order</a> - The order of the compute
--   environment. Compute environments are tried in ascending order. For
--   example, if two compute environments are associated with a job queue,
--   the compute environment with a lower <tt>order</tt> integer value is
--   tried for job placement first.
--   
--   <a>$sel:computeEnvironment:ComputeEnvironmentOrder'</a>,
--   <a>computeEnvironmentOrder_computeEnvironment</a> - The Amazon
--   Resource Name (ARN) of the compute environment.
newComputeEnvironmentOrder :: Int -> Text -> ComputeEnvironmentOrder

-- | An object representing an Batch compute resource. For more
--   information, see <a>Compute Environments</a> in the <i>Batch User
--   Guide</i>.
--   
--   <i>See:</i> <a>newComputeResource</a> smart constructor.
data ComputeResource
ComputeResource' :: Maybe [Text] -> Maybe [Text] -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe [Ec2Configuration] -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe LaunchTemplateSpecification -> Maybe Int -> Maybe CRAllocationStrategy -> Maybe Text -> Maybe (HashMap Text Text) -> CRType -> Int -> [Text] -> ComputeResource

-- | Create a value of <a>ComputeResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:securityGroupIds:ComputeResource'</a>,
--   <a>computeResource_securityGroupIds</a> - The Amazon EC2 security
--   groups associated with instances launched in the compute environment.
--   One or more security groups must be specified, either in
--   <tt>securityGroupIds</tt> or using a launch template referenced in
--   <tt>launchTemplate</tt>. This parameter is required for jobs that are
--   running on Fargate resources and must contain at least one security
--   group. Fargate doesn't support launch templates. If security groups
--   are specified using both <tt>securityGroupIds</tt> and
--   <tt>launchTemplate</tt>, the values in <tt>securityGroupIds</tt> are
--   used.
--   
--   <a>$sel:instanceTypes:ComputeResource'</a>,
--   <a>computeResource_instanceTypes</a> - The instances types that can be
--   launched. You can specify instance families to launch any instance
--   type within those families (for example, <tt>c5</tt> or <tt>p3</tt>),
--   or you can specify specific sizes within a family (such as
--   <tt>c5.8xlarge</tt>). You can also choose <tt>optimal</tt> to select
--   instance types (from the C4, M4, and R4 instance families) that match
--   the demand of your job queues.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources, and shouldn't be specified.
--   
--   When you create a compute environment, the instance types that you
--   select for the compute environment must share the same architecture.
--   For example, you can't mix x86 and ARM instances in the same compute
--   environment.
--   
--   Currently, <tt>optimal</tt> uses instance types from the C4, M4, and
--   R4 instance families. In Regions that don't have instance types from
--   those instance families, instance types from the C5, M5. and R5
--   instance families are used.
--   
--   <a>$sel:instanceRole:ComputeResource'</a>,
--   <a>computeResource_instanceRole</a> - The Amazon ECS instance profile
--   applied to Amazon EC2 instances in a compute environment. You can
--   specify the short name or full Amazon Resource Name (ARN) of an
--   instance profile. For example, <tt> ecsInstanceRole </tt> or
--   <tt>arn:aws:iam::&lt;aws_account_id&gt;:instance-profile/ecsInstanceRole
--   </tt>. For more information, see <a>Amazon ECS Instance Role</a> in
--   the <i>Batch User Guide</i>.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources, and shouldn't be specified.
--   
--   <a>$sel:ec2KeyPair:ComputeResource'</a>,
--   <a>computeResource_ec2KeyPair</a> - The Amazon EC2 key pair that's
--   used for instances launched in the compute environment. You can use
--   this key pair to log in to your instances with SSH.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources, and shouldn't be specified.
--   
--   <a>$sel:minvCpus:ComputeResource'</a>, <a>computeResource_minvCpus</a>
--   - The minimum number of Amazon EC2 vCPUs that an environment should
--   maintain (even if the compute environment is <tt>DISABLED</tt>).
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources, and shouldn't be specified.
--   
--   <a>$sel:ec2Configuration:ComputeResource'</a>,
--   <a>computeResource_ec2Configuration</a> - Provides information used to
--   select Amazon Machine Images (AMIs) for EC2 instances in the compute
--   environment. If <tt>Ec2Configuration</tt> isn't specified, the default
--   is <tt>ECS_AL1</tt>.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources, and shouldn't be specified.
--   
--   <a>$sel:bidPercentage:ComputeResource'</a>,
--   <a>computeResource_bidPercentage</a> - The maximum percentage that a
--   Spot Instance price can be when compared with the On-Demand price for
--   that instance type before instances are launched. For example, if your
--   maximum percentage is 20%, then the Spot price must be less than 20%
--   of the current On-Demand price for that Amazon EC2 instance. You
--   always pay the lowest (market) price and never more than your maximum
--   percentage. If you leave this field empty, the default value is 100%
--   of the On-Demand price.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources, and shouldn't be specified.
--   
--   <a>$sel:spotIamFleetRole:ComputeResource'</a>,
--   <a>computeResource_spotIamFleetRole</a> - The Amazon Resource Name
--   (ARN) of the Amazon EC2 Spot Fleet IAM role applied to a <tt>SPOT</tt>
--   compute environment. This role is required if the allocation strategy
--   set to <tt>BEST_FIT</tt> or if the allocation strategy isn't
--   specified. For more information, see <a>Amazon EC2 Spot Fleet Role</a>
--   in the <i>Batch User Guide</i>.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources, and shouldn't be specified.
--   
--   To tag your Spot Instances on creation, the Spot Fleet IAM role
--   specified here must use the newer <b>AmazonEC2SpotFleetTaggingRole</b>
--   managed policy. The previously recommended
--   <b>AmazonEC2SpotFleetRole</b> managed policy doesn't have the required
--   permissions to tag Spot Instances. For more information, see <a>Spot
--   Instances not tagged on creation</a> in the <i>Batch User Guide</i>.
--   
--   <a>$sel:imageId:ComputeResource'</a>, <a>computeResource_imageId</a> -
--   The Amazon Machine Image (AMI) ID used for instances launched in the
--   compute environment. This parameter is overridden by the
--   <tt>imageIdOverride</tt> member of the <tt>Ec2Configuration</tt>
--   structure.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources, and shouldn't be specified.
--   
--   The AMI that you choose for a compute environment must match the
--   architecture of the instance types that you intend to use for that
--   compute environment. For example, if your compute environment uses A1
--   instance types, the compute resource AMI that you choose must support
--   ARM instances. Amazon ECS vends both x86 and ARM versions of the
--   Amazon ECS-optimized Amazon Linux 2 AMI. For more information, see
--   <a>Amazon ECS-optimized Amazon Linux 2 AMI</a> in the <i>Amazon
--   Elastic Container Service Developer Guide</i>.
--   
--   <a>$sel:launchTemplate:ComputeResource'</a>,
--   <a>computeResource_launchTemplate</a> - The launch template to use for
--   your compute resources. Any other compute resource parameters that you
--   specify in a CreateComputeEnvironment API operation override the same
--   parameters in the launch template. You must specify either the launch
--   template ID or launch template name in the request, but not both. For
--   more information, see <a>Launch Template Support</a> in the <i>Batch
--   User Guide</i>.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources, and shouldn't be specified.
--   
--   <a>$sel:desiredvCpus:ComputeResource'</a>,
--   <a>computeResource_desiredvCpus</a> - The desired number of Amazon EC2
--   vCPUS in the compute environment. Batch modifies this value between
--   the minimum and maximum values, based on job queue demand.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources, and shouldn't be specified.
--   
--   <a>$sel:allocationStrategy:ComputeResource'</a>,
--   <a>computeResource_allocationStrategy</a> - The allocation strategy to
--   use for the compute resource if not enough instances of the best
--   fitting instance type can be allocated. This might be because of
--   availability of the instance type in the Region or <a>Amazon EC2
--   service limits</a>. For more information, see <a>Allocation
--   Strategies</a> in the <i>Batch User Guide</i>.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources, and shouldn't be specified.
--   
--   <ul>
--   <li><i>BEST_FIT (default)</i> Batch selects an instance type that best
--   fits the needs of the jobs with a preference for the lowest-cost
--   instance type. If additional instances of the selected instance type
--   aren't available, Batch waits for the additional instances to be
--   available. If there aren't enough instances available, or if the user
--   is reaching <a>Amazon EC2 service limits</a> then additional jobs
--   aren't run until the currently running jobs have completed. This
--   allocation strategy keeps costs lower but can limit scaling. If you
--   are using Spot Fleets with <tt>BEST_FIT</tt> then the Spot Fleet IAM
--   Role must be specified.</li>
--   <li><i>BEST_FIT_PROGRESSIVE</i> Batch will select additional instance
--   types that are large enough to meet the requirements of the jobs in
--   the queue, with a preference for instance types with a lower cost per
--   unit vCPU. If additional instances of the previously selected instance
--   types aren't available, Batch will select new instance types.</li>
--   <li><i>SPOT_CAPACITY_OPTIMIZED</i> Batch will select one or more
--   instance types that are large enough to meet the requirements of the
--   jobs in the queue, with a preference for instance types that are less
--   likely to be interrupted. This allocation strategy is only available
--   for Spot Instance compute resources.</li>
--   </ul>
--   
--   With both <tt>BEST_FIT_PROGRESSIVE</tt> and
--   <tt>SPOT_CAPACITY_OPTIMIZED</tt> strategies, Batch might need to go
--   above <tt>maxvCpus</tt> to meet your capacity requirements. In this
--   event, Batch never exceeds <tt>maxvCpus</tt> by more than a single
--   instance.
--   
--   <a>$sel:placementGroup:ComputeResource'</a>,
--   <a>computeResource_placementGroup</a> - The Amazon EC2 placement group
--   to associate with your compute resources. If you intend to submit
--   multi-node parallel jobs to your compute environment, you should
--   consider creating a cluster placement group and associate it with your
--   compute resources. This keeps your multi-node parallel job on a
--   logical grouping of instances within a single Availability Zone with
--   high network flow potential. For more information, see <a>Placement
--   Groups</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources, and shouldn't be specified.
--   
--   <a>$sel:tags:ComputeResource'</a>, <a>computeResource_tags</a> -
--   Key-value pair tags to be applied to EC2 resources that are launched
--   in the compute environment. For Batch, these take the form of
--   "String1": "String2", where String1 is the tag key and String2 is the
--   tag value−for example, <tt>{ "Name": "Batch Instance - C4OnDemand"
--   }</tt>. This is helpful for recognizing your Batch instances in the
--   Amazon EC2 console. These tags can't be updated or removed after the
--   compute environment is created.Aany changes to these tags require that
--   you create a new compute environment and remove the old compute
--   environment. These tags aren't seen when using the Batch
--   <tt>ListTagsForResource</tt> API operation.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources, and shouldn't be specified.
--   
--   <a>$sel:type':ComputeResource'</a>, <a>computeResource_type</a> - The
--   type of compute environment: <tt>EC2</tt>, <tt>SPOT</tt>,
--   <tt>FARGATE</tt>, or <tt>FARGATE_SPOT</tt>. For more information, see
--   <a>Compute Environments</a> in the <i>Batch User Guide</i>.
--   
--   If you choose <tt>SPOT</tt>, you must also specify an Amazon EC2 Spot
--   Fleet role with the <tt>spotIamFleetRole</tt> parameter. For more
--   information, see <a>Amazon EC2 Spot Fleet role</a> in the <i>Batch
--   User Guide</i>.
--   
--   <a>$sel:maxvCpus:ComputeResource'</a>, <a>computeResource_maxvCpus</a>
--   - The maximum number of Amazon EC2 vCPUs that a compute environment
--   can reach.
--   
--   With both <tt>BEST_FIT_PROGRESSIVE</tt> and
--   <tt>SPOT_CAPACITY_OPTIMIZED</tt> allocation strategies, Batch might
--   need to exceed <tt>maxvCpus</tt> to meet your capacity requirements.
--   In this event, Batch never exceeds <tt>maxvCpus</tt> by more than a
--   single instance. For example, no more than a single instance from
--   among those specified in your compute environment is allocated.
--   
--   <a>$sel:subnets:ComputeResource'</a>, <a>computeResource_subnets</a> -
--   The VPC subnets where the compute resources are launched. These
--   subnets must be within the same VPC. Fargate compute resources can
--   contain up to 16 subnets. For more information, see <a>VPCs and
--   Subnets</a> in the <i>Amazon VPC User Guide</i>.
newComputeResource :: CRType -> Int -> ComputeResource

-- | An object representing the attributes of a compute environment that
--   can be updated. For more information, see <a>Compute Environments</a>
--   in the <i>Batch User Guide</i>.
--   
--   <i>See:</i> <a>newComputeResourceUpdate</a> smart constructor.
data ComputeResourceUpdate
ComputeResourceUpdate' :: Maybe [Text] -> Maybe [Text] -> Maybe Int -> Maybe Int -> Maybe Int -> ComputeResourceUpdate

-- | Create a value of <a>ComputeResourceUpdate</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:securityGroupIds:ComputeResourceUpdate'</a>,
--   <a>computeResourceUpdate_securityGroupIds</a> - The Amazon EC2
--   security groups associated with instances launched in the compute
--   environment. This parameter is required for Fargate compute resources,
--   where it can contain up to 5 security groups. This can't be specified
--   for EC2 compute resources. Providing an empty list is handled as if
--   this parameter wasn't specified and no change is made.
--   
--   <a>$sel:subnets:ComputeResourceUpdate'</a>,
--   <a>computeResourceUpdate_subnets</a> - The VPC subnets where the
--   compute resources are launched. Fargate compute resources can contain
--   up to 16 subnets. Providing an empty list will be handled as if this
--   parameter wasn't specified and no change is made. This can't be
--   specified for EC2 compute resources. For more information, see <a>VPCs
--   and Subnets</a> in the <i>Amazon VPC User Guide</i>.
--   
--   <a>$sel:minvCpus:ComputeResourceUpdate'</a>,
--   <a>computeResourceUpdate_minvCpus</a> - The minimum number of Amazon
--   EC2 vCPUs that an environment should maintain.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources, and shouldn't be specified.
--   
--   <a>$sel:maxvCpus:ComputeResourceUpdate'</a>,
--   <a>computeResourceUpdate_maxvCpus</a> - The maximum number of Amazon
--   EC2 vCPUs that an environment can reach.
--   
--   With both <tt>BEST_FIT_PROGRESSIVE</tt> and
--   <tt>SPOT_CAPACITY_OPTIMIZED</tt> allocation strategies, Batch might
--   need to exceed <tt>maxvCpus</tt> to meet your capacity requirements.
--   In this event, Batch never exceeds <tt>maxvCpus</tt> by more than a
--   single instance. That is, no more than a single instance from among
--   those specified in your compute environment.
--   
--   <a>$sel:desiredvCpus:ComputeResourceUpdate'</a>,
--   <a>computeResourceUpdate_desiredvCpus</a> - The desired number of
--   Amazon EC2 vCPUS in the compute environment.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources, and shouldn't be specified.
newComputeResourceUpdate :: ComputeResourceUpdate

-- | An object representing the details of a container that's part of a
--   job.
--   
--   <i>See:</i> <a>newContainerDetail</a> smart constructor.
data ContainerDetail
ContainerDetail' :: Maybe Text -> Maybe [Text] -> Maybe [Secret] -> Maybe [KeyValuePair] -> Maybe [NetworkInterface] -> Maybe Text -> Maybe [Ulimit] -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe Text -> Maybe [ResourceRequirement] -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe LogConfiguration -> Maybe LinuxParameters -> Maybe Text -> Maybe Text -> Maybe [MountPoint] -> Maybe Int -> Maybe FargatePlatformConfiguration -> Maybe Int -> Maybe Bool -> Maybe [Volume] -> Maybe NetworkConfiguration -> ContainerDetail

-- | Create a value of <a>ContainerDetail</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:image:ContainerDetail'</a>, <a>containerDetail_image</a> - The
--   image used to start the container.
--   
--   <a>$sel:command:ContainerDetail'</a>, <a>containerDetail_command</a> -
--   The command that's passed to the container.
--   
--   <a>$sel:secrets:ContainerDetail'</a>, <a>containerDetail_secrets</a> -
--   The secrets to pass to the container. For more information, see
--   <a>Specifying sensitive data</a> in the <i>Batch User Guide</i>.
--   
--   <a>$sel:environment:ContainerDetail'</a>,
--   <a>containerDetail_environment</a> - The environment variables to pass
--   to a container.
--   
--   Environment variables must not start with <tt>AWS_BATCH</tt>; this
--   naming convention is reserved for variables that are set by the Batch
--   service.
--   
--   <a>$sel:networkInterfaces:ContainerDetail'</a>,
--   <a>containerDetail_networkInterfaces</a> - The network interfaces
--   associated with the job.
--   
--   <a>$sel:taskArn:ContainerDetail'</a>, <a>containerDetail_taskArn</a> -
--   The Amazon Resource Name (ARN) of the Amazon ECS task that's
--   associated with the container job. Each container attempt receives a
--   task ARN when they reach the <tt>STARTING</tt> status.
--   
--   <a>$sel:ulimits:ContainerDetail'</a>, <a>containerDetail_ulimits</a> -
--   A list of <tt>ulimit</tt> values to set in the container. This
--   parameter maps to <tt>Ulimits</tt> in the <a>Create a container</a>
--   section of the <a>Docker Remote API</a> and the <tt>--ulimit</tt>
--   option to <a>docker run</a>.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources.
--   
--   <a>$sel:containerInstanceArn:ContainerDetail'</a>,
--   <a>containerDetail_containerInstanceArn</a> - The Amazon Resource Name
--   (ARN) of the container instance that the container is running on.
--   
--   <a>$sel:executionRoleArn:ContainerDetail'</a>,
--   <a>containerDetail_executionRoleArn</a> - The Amazon Resource Name
--   (ARN) of the execution role that Batch can assume. For more
--   information, see <a>Batch execution IAM role</a> in the <i>Batch User
--   Guide</i>.
--   
--   <a>$sel:privileged:ContainerDetail'</a>,
--   <a>containerDetail_privileged</a> - When this parameter is true, the
--   container is given elevated permissions on the host container instance
--   (similar to the <tt>root</tt> user). The default value is false.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources and shouldn't be provided, or specified as false.
--   
--   <a>$sel:jobRoleArn:ContainerDetail'</a>,
--   <a>containerDetail_jobRoleArn</a> - The Amazon Resource Name (ARN)
--   associated with the job upon execution.
--   
--   <a>$sel:resourceRequirements:ContainerDetail'</a>,
--   <a>containerDetail_resourceRequirements</a> - The type and amount of
--   resources to assign to a container. The supported resources include
--   <tt>GPU</tt>, <tt>MEMORY</tt>, and <tt>VCPU</tt>.
--   
--   <a>$sel:instanceType:ContainerDetail'</a>,
--   <a>containerDetail_instanceType</a> - The instance type of the
--   underlying host infrastructure of a multi-node parallel job.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources.
--   
--   <a>$sel:memory:ContainerDetail'</a>, <a>containerDetail_memory</a> -
--   For jobs run on EC2 resources that didn't specify memory requirements
--   using <tt>ResourceRequirement</tt>, the number of MiB of memory
--   reserved for the job. For other jobs, including all run on Fargate
--   resources, see <tt>resourceRequirements</tt>.
--   
--   <a>$sel:user:ContainerDetail'</a>, <a>containerDetail_user</a> - The
--   user name to use inside the container. This parameter maps to
--   <tt>User</tt> in the <a>Create a container</a> section of the
--   <a>Docker Remote API</a> and the <tt>--user</tt> option to <a>docker
--   run</a>.
--   
--   <a>$sel:logConfiguration:ContainerDetail'</a>,
--   <a>containerDetail_logConfiguration</a> - The log configuration
--   specification for the container.
--   
--   This parameter maps to <tt>LogConfig</tt> in the <a>Create a
--   container</a> section of the <a>Docker Remote API</a> and the
--   <tt>--log-driver</tt> option to <a>docker run</a>. By default,
--   containers use the same logging driver that the Docker daemon uses.
--   However, the container might use a different logging driver than the
--   Docker daemon by specifying a log driver with this parameter in the
--   container definition. To use a different logging driver for a
--   container, the log system must be configured properly on the container
--   instance. Or, alternatively, it must be configured on a different log
--   server for remote logging options. For more information on the options
--   for different supported log drivers, see <a>Configure logging
--   drivers</a> in the Docker documentation.
--   
--   Batch currently supports a subset of the logging drivers available to
--   the Docker daemon (shown in the LogConfiguration data type).
--   Additional log drivers might be available in future releases of the
--   Amazon ECS container agent.
--   
--   This parameter requires version 1.18 of the Docker Remote API or
--   greater on your container instance. To check the Docker Remote API
--   version on your container instance, log into your container instance
--   and run the following command: <tt>sudo docker version | grep "Server
--   API version"</tt>
--   
--   The Amazon ECS container agent running on a container instance must
--   register the logging drivers available on that instance with the
--   <tt>ECS_AVAILABLE_LOGGING_DRIVERS</tt> environment variable before
--   containers placed on that instance can use these log configuration
--   options. For more information, see <a>Amazon ECS Container Agent
--   Configuration</a> in the <i>Amazon Elastic Container Service Developer
--   Guide</i>.
--   
--   <a>$sel:linuxParameters:ContainerDetail'</a>,
--   <a>containerDetail_linuxParameters</a> - Linux-specific modifications
--   that are applied to the container, such as details for device
--   mappings.
--   
--   <a>$sel:reason:ContainerDetail'</a>, <a>containerDetail_reason</a> - A
--   short (255 max characters) human-readable string to provide additional
--   details about a running or stopped container.
--   
--   <a>$sel:logStreamName:ContainerDetail'</a>,
--   <a>containerDetail_logStreamName</a> - The name of the CloudWatch Logs
--   log stream associated with the container. The log group for Batch jobs
--   is <tt>/aws/batch/job</tt>. Each container attempt receives a log
--   stream name when they reach the <tt>RUNNING</tt> status.
--   
--   <a>$sel:mountPoints:ContainerDetail'</a>,
--   <a>containerDetail_mountPoints</a> - The mount points for data volumes
--   in your container.
--   
--   <a>$sel:exitCode:ContainerDetail'</a>, <a>containerDetail_exitCode</a>
--   - The exit code to return upon completion.
--   
--   <a>$sel:fargatePlatformConfiguration:ContainerDetail'</a>,
--   <a>containerDetail_fargatePlatformConfiguration</a> - The platform
--   configuration for jobs that are running on Fargate resources. Jobs
--   that are running on EC2 resources must not specify this parameter.
--   
--   <a>$sel:vcpus:ContainerDetail'</a>, <a>containerDetail_vcpus</a> - The
--   number of vCPUs reserved for the container. For jobs that run on EC2
--   resources, you can specify the vCPU requirement for the job using
--   <tt>resourceRequirements</tt>, but you can't specify the vCPU
--   requirements in both the <tt>vcpus</tt> and
--   <tt>resourceRequirement</tt> object. This parameter maps to
--   <tt>CpuShares</tt> in the <a>Create a container</a> section of the
--   <a>Docker Remote API</a> and the <tt>--cpu-shares</tt> option to
--   <a>docker run</a>. Each vCPU is equivalent to 1,024 CPU shares. You
--   must specify at least one vCPU. This is required but can be specified
--   in several places. It must be specified for each node at least once.
--   
--   This parameter isn't applicable to jobs that run on Fargate resources.
--   For jobs that run on Fargate resources, you must specify the vCPU
--   requirement for the job using <tt>resourceRequirements</tt>.
--   
--   <a>$sel:readonlyRootFilesystem:ContainerDetail'</a>,
--   <a>containerDetail_readonlyRootFilesystem</a> - When this parameter is
--   true, the container is given read-only access to its root file system.
--   This parameter maps to <tt>ReadonlyRootfs</tt> in the <a>Create a
--   container</a> section of the <a>Docker Remote API</a> and the
--   <tt>--read-only</tt> option to <a>docker run</a> .
--   
--   <a>$sel:volumes:ContainerDetail'</a>, <a>containerDetail_volumes</a> -
--   A list of volumes associated with the job.
--   
--   <a>$sel:networkConfiguration:ContainerDetail'</a>,
--   <a>containerDetail_networkConfiguration</a> - The network
--   configuration for jobs that are running on Fargate resources. Jobs
--   that are running on EC2 resources must not specify this parameter.
newContainerDetail :: ContainerDetail

-- | The overrides that should be sent to a container.
--   
--   <i>See:</i> <a>newContainerOverrides</a> smart constructor.
data ContainerOverrides
ContainerOverrides' :: Maybe [Text] -> Maybe [KeyValuePair] -> Maybe [ResourceRequirement] -> Maybe Text -> Maybe Int -> Maybe Int -> ContainerOverrides

-- | Create a value of <a>ContainerOverrides</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:command:ContainerOverrides'</a>,
--   <a>containerOverrides_command</a> - The command to send to the
--   container that overrides the default command from the Docker image or
--   the job definition.
--   
--   <a>$sel:environment:ContainerOverrides'</a>,
--   <a>containerOverrides_environment</a> - The environment variables to
--   send to the container. You can add new environment variables, which
--   are added to the container at launch, or you can override the existing
--   environment variables from the Docker image or the job definition.
--   
--   Environment variables must not start with <tt>AWS_BATCH</tt>; this
--   naming convention is reserved for variables that are set by the Batch
--   service.
--   
--   <a>$sel:resourceRequirements:ContainerOverrides'</a>,
--   <a>containerOverrides_resourceRequirements</a> - The type and amount
--   of resources to assign to a container. This overrides the settings in
--   the job definition. The supported resources include <tt>GPU</tt>,
--   <tt>MEMORY</tt>, and <tt>VCPU</tt>.
--   
--   <a>$sel:instanceType:ContainerOverrides'</a>,
--   <a>containerOverrides_instanceType</a> - The instance type to use for
--   a multi-node parallel job.
--   
--   This parameter isn't applicable to single-node container jobs or jobs
--   that run on Fargate resources, and shouldn't be provided.
--   
--   <a>$sel:memory:ContainerOverrides'</a>,
--   <a>containerOverrides_memory</a> - This parameter indicates the amount
--   of memory (in MiB) that's reserved for the job. It overrides the
--   <tt>memory</tt> parameter set in the job definition, but doesn't
--   override any memory requirement specified in the
--   <tt>ResourceRequirement</tt> structure in the job definition. To
--   override memory requirements that are specified in the
--   <tt>ResourceRequirement</tt> structure in the job definition,
--   <tt>ResourceRequirement</tt> must be specified in the
--   <tt>SubmitJob</tt> request, with <tt>type</tt> set to <tt>MEMORY</tt>
--   and <tt>value</tt> set to the new value.
--   
--   This parameter is supported for jobs that run on EC2 resources, but
--   isn't supported for jobs that run on Fargate resources. For these
--   resources, use <tt>resourceRequirement</tt> instead.
--   
--   <a>$sel:vcpus:ContainerOverrides'</a>, <a>containerOverrides_vcpus</a>
--   - This parameter indicates the number of vCPUs reserved for the
--   container.It overrides the <tt>vcpus</tt> parameter that's set in the
--   job definition, but doesn't override any vCPU requirement specified in
--   the <tt>resourceRequirement</tt> structure in the job definition. To
--   override vCPU requirements that are specified in the
--   <tt>ResourceRequirement</tt> structure in the job definition,
--   <tt>ResourceRequirement</tt> must be specified in the
--   <tt>SubmitJob</tt> request, with <tt>type</tt> set to <tt>VCPU</tt>
--   and <tt>value</tt> set to the new value.
--   
--   This parameter maps to <tt>CpuShares</tt> in the <a>Create a
--   container</a> section of the <a>Docker Remote API</a> and the
--   <tt>--cpu-shares</tt> option to <a>docker run</a>. Each vCPU is
--   equivalent to 1,024 CPU shares. You must specify at least one vCPU.
--   
--   This parameter is supported for jobs that run on EC2 resources, but
--   isn't supported for jobs that run on Fargate resources. For Fargate
--   resources, you can only use <tt>resourceRequirement</tt>. For EC2
--   resources, you can use either this parameter or
--   <tt>resourceRequirement</tt> but not both.
newContainerOverrides :: ContainerOverrides

-- | Container properties are used in job definitions to describe the
--   container that's launched as part of a job.
--   
--   <i>See:</i> <a>newContainerProperties</a> smart constructor.
data ContainerProperties
ContainerProperties' :: Maybe Text -> Maybe [Text] -> Maybe [Secret] -> Maybe [KeyValuePair] -> Maybe [Ulimit] -> Maybe Text -> Maybe Bool -> Maybe Text -> Maybe [ResourceRequirement] -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe LogConfiguration -> Maybe LinuxParameters -> Maybe [MountPoint] -> Maybe FargatePlatformConfiguration -> Maybe Int -> Maybe Bool -> Maybe [Volume] -> Maybe NetworkConfiguration -> ContainerProperties

-- | Create a value of <a>ContainerProperties</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:image:ContainerProperties'</a>,
--   <a>containerProperties_image</a> - The image used to start a
--   container. This string is passed directly to the Docker daemon. Images
--   in the Docker Hub registry are available by default. Other
--   repositories are specified with <tt> repository-url/image:tag </tt>.
--   Up to 255 letters (uppercase and lowercase), numbers, hyphens,
--   underscores, colons, periods, forward slashes, and number signs are
--   allowed. This parameter maps to <tt>Image</tt> in the <a>Create a
--   container</a> section of the <a>Docker Remote API</a> and the
--   <tt>IMAGE</tt> parameter of <a>docker run</a>.
--   
--   Docker image architecture must match the processor architecture of the
--   compute resources that they're scheduled on. For example, ARM-based
--   Docker images can only run on ARM-based compute resources.
--   
--   <ul>
--   <li>Images in Amazon ECR repositories use the full registry and
--   repository URI (for example,
--   <tt>012345678910.dkr.ecr.&lt;region-name&gt;.amazonaws.com/&lt;repository-name&gt;</tt>).</li>
--   <li>Images in official repositories on Docker Hub use a single name
--   (for example, <tt>ubuntu</tt> or <tt>mongo</tt>).</li>
--   <li>Images in other repositories on Docker Hub are qualified with an
--   organization name (for example,
--   <tt>amazon/amazon-ecs-agent</tt>).</li>
--   <li>Images in other online repositories are qualified further by a
--   domain name (for example, <tt>quay.io/assemblyline/ubuntu</tt>).</li>
--   </ul>
--   
--   <a>$sel:command:ContainerProperties'</a>,
--   <a>containerProperties_command</a> - The command that's passed to the
--   container. This parameter maps to <tt>Cmd</tt> in the <a>Create a
--   container</a> section of the <a>Docker Remote API</a> and the
--   <tt>COMMAND</tt> parameter to <a>docker run</a>. For more information,
--   see <a>https://docs.docker.com/engine/reference/builder/#cmd</a>.
--   
--   <a>$sel:secrets:ContainerProperties'</a>,
--   <a>containerProperties_secrets</a> - The secrets for the container.
--   For more information, see <a>Specifying sensitive data</a> in the
--   <i>Batch User Guide</i>.
--   
--   <a>$sel:environment:ContainerProperties'</a>,
--   <a>containerProperties_environment</a> - The environment variables to
--   pass to a container. This parameter maps to <tt>Env</tt> in the
--   <a>Create a container</a> section of the <a>Docker Remote API</a> and
--   the <tt>--env</tt> option to <a>docker run</a>.
--   
--   We don't recommend using plaintext environment variables for sensitive
--   information, such as credential data.
--   
--   Environment variables must not start with <tt>AWS_BATCH</tt>; this
--   naming convention is reserved for variables that are set by the Batch
--   service.
--   
--   <a>$sel:ulimits:ContainerProperties'</a>,
--   <a>containerProperties_ulimits</a> - A list of <tt>ulimits</tt> to set
--   in the container. This parameter maps to <tt>Ulimits</tt> in the
--   <a>Create a container</a> section of the <a>Docker Remote API</a> and
--   the <tt>--ulimit</tt> option to <a>docker run</a>.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources and shouldn't be provided.
--   
--   <a>$sel:executionRoleArn:ContainerProperties'</a>,
--   <a>containerProperties_executionRoleArn</a> - The Amazon Resource Name
--   (ARN) of the execution role that Batch can assume. For jobs that run
--   on Fargate resources, you must provide an execution role. For more
--   information, see <a>Batch execution IAM role</a> in the <i>Batch User
--   Guide</i>.
--   
--   <a>$sel:privileged:ContainerProperties'</a>,
--   <a>containerProperties_privileged</a> - When this parameter is true,
--   the container is given elevated permissions on the host container
--   instance (similar to the <tt>root</tt> user). This parameter maps to
--   <tt>Privileged</tt> in the <a>Create a container</a> section of the
--   <a>Docker Remote API</a> and the <tt>--privileged</tt> option to
--   <a>docker run</a>. The default value is false.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources and shouldn't be provided, or specified as false.
--   
--   <a>$sel:jobRoleArn:ContainerProperties'</a>,
--   <a>containerProperties_jobRoleArn</a> - The Amazon Resource Name (ARN)
--   of the IAM role that the container can assume for Amazon Web Services
--   permissions. For more information, see <a>IAM Roles for Tasks</a> in
--   the <i>Amazon Elastic Container Service Developer Guide</i>.
--   
--   <a>$sel:resourceRequirements:ContainerProperties'</a>,
--   <a>containerProperties_resourceRequirements</a> - The type and amount
--   of resources to assign to a container. The supported resources include
--   <tt>GPU</tt>, <tt>MEMORY</tt>, and <tt>VCPU</tt>.
--   
--   <a>$sel:instanceType:ContainerProperties'</a>,
--   <a>containerProperties_instanceType</a> - The instance type to use for
--   a multi-node parallel job. All node groups in a multi-node parallel
--   job must use the same instance type.
--   
--   This parameter isn't applicable to single-node container jobs or jobs
--   that run on Fargate resources, and shouldn't be provided.
--   
--   <a>$sel:memory:ContainerProperties'</a>,
--   <a>containerProperties_memory</a> - This parameter indicates the
--   memory hard limit (in MiB) for a container. If your container attempts
--   to exceed the specified number, it's terminated. You must specify at
--   least 4 MiB of memory for a job using this parameter. The memory hard
--   limit can be specified in several places. It must be specified for
--   each node at least once.
--   
--   This parameter maps to <tt>Memory</tt> in the <a>Create a
--   container</a> section of the <a>Docker Remote API</a> and the
--   <tt>--memory</tt> option to <a>docker run</a>.
--   
--   This parameter is supported on EC2 resources but isn't supported on
--   Fargate resources. For Fargate resources, you should specify the
--   memory requirement using <tt>resourceRequirement</tt>. You can also do
--   this for EC2 resources.
--   
--   If you're trying to maximize your resource utilization by providing
--   your jobs as much memory as possible for a particular instance type,
--   see <a>Memory Management</a> in the <i>Batch User Guide</i>.
--   
--   <a>$sel:user:ContainerProperties'</a>, <a>containerProperties_user</a>
--   - The user name to use inside the container. This parameter maps to
--   <tt>User</tt> in the <a>Create a container</a> section of the
--   <a>Docker Remote API</a> and the <tt>--user</tt> option to <a>docker
--   run</a>.
--   
--   <a>$sel:logConfiguration:ContainerProperties'</a>,
--   <a>containerProperties_logConfiguration</a> - The log configuration
--   specification for the container.
--   
--   This parameter maps to <tt>LogConfig</tt> in the <a>Create a
--   container</a> section of the <a>Docker Remote API</a> and the
--   <tt>--log-driver</tt> option to <a>docker run</a>. By default,
--   containers use the same logging driver that the Docker daemon uses.
--   However the container might use a different logging driver than the
--   Docker daemon by specifying a log driver with this parameter in the
--   container definition. To use a different logging driver for a
--   container, the log system must be configured properly on the container
--   instance (or on a different log server for remote logging options).
--   For more information on the options for different supported log
--   drivers, see <a>Configure logging drivers</a> in the Docker
--   documentation.
--   
--   Batch currently supports a subset of the logging drivers available to
--   the Docker daemon (shown in the LogConfiguration data type).
--   
--   This parameter requires version 1.18 of the Docker Remote API or
--   greater on your container instance. To check the Docker Remote API
--   version on your container instance, log into your container instance
--   and run the following command: <tt>sudo docker version | grep "Server
--   API version"</tt>
--   
--   The Amazon ECS container agent running on a container instance must
--   register the logging drivers available on that instance with the
--   <tt>ECS_AVAILABLE_LOGGING_DRIVERS</tt> environment variable before
--   containers placed on that instance can use these log configuration
--   options. For more information, see <a>Amazon ECS Container Agent
--   Configuration</a> in the <i>Amazon Elastic Container Service Developer
--   Guide</i>.
--   
--   <a>$sel:linuxParameters:ContainerProperties'</a>,
--   <a>containerProperties_linuxParameters</a> - Linux-specific
--   modifications that are applied to the container, such as details for
--   device mappings.
--   
--   <a>$sel:mountPoints:ContainerProperties'</a>,
--   <a>containerProperties_mountPoints</a> - The mount points for data
--   volumes in your container. This parameter maps to <tt>Volumes</tt> in
--   the <a>Create a container</a> section of the <a>Docker Remote API</a>
--   and the <tt>--volume</tt> option to <a>docker run</a>.
--   
--   <a>$sel:fargatePlatformConfiguration:ContainerProperties'</a>,
--   <a>containerProperties_fargatePlatformConfiguration</a> - The platform
--   configuration for jobs that are running on Fargate resources. Jobs
--   that are running on EC2 resources must not specify this parameter.
--   
--   <a>$sel:vcpus:ContainerProperties'</a>,
--   <a>containerProperties_vcpus</a> - The number of vCPUs reserved for
--   the job. Each vCPU is equivalent to 1,024 CPU shares. This parameter
--   maps to <tt>CpuShares</tt> in the <a>Create a container</a> section of
--   the <a>Docker Remote API</a> and the <tt>--cpu-shares</tt> option to
--   <a>docker run</a>. The number of vCPUs must be specified but can be
--   specified in several places. You must specify it at least once for
--   each node.
--   
--   This parameter is supported on EC2 resources but isn't supported for
--   jobs that run on Fargate resources. For these resources, use
--   <tt>resourceRequirement</tt> instead. You can use this parameter or
--   <tt>resourceRequirements</tt> structure but not both.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources and shouldn't be provided. For jobs that run on Fargate
--   resources, you must specify the vCPU requirement for the job using
--   <tt>resourceRequirements</tt>.
--   
--   <a>$sel:readonlyRootFilesystem:ContainerProperties'</a>,
--   <a>containerProperties_readonlyRootFilesystem</a> - When this
--   parameter is true, the container is given read-only access to its root
--   file system. This parameter maps to <tt>ReadonlyRootfs</tt> in the
--   <a>Create a container</a> section of the <a>Docker Remote API</a> and
--   the <tt>--read-only</tt> option to <tt>docker run</tt>.
--   
--   <a>$sel:volumes:ContainerProperties'</a>,
--   <a>containerProperties_volumes</a> - A list of data volumes used in a
--   job.
--   
--   <a>$sel:networkConfiguration:ContainerProperties'</a>,
--   <a>containerProperties_networkConfiguration</a> - The network
--   configuration for jobs that are running on Fargate resources. Jobs
--   that are running on EC2 resources must not specify this parameter.
newContainerProperties :: ContainerProperties

-- | An object representing summary details of a container within a job.
--   
--   <i>See:</i> <a>newContainerSummary</a> smart constructor.
data ContainerSummary
ContainerSummary' :: Maybe Text -> Maybe Int -> ContainerSummary

-- | Create a value of <a>ContainerSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:reason:ContainerSummary'</a>, <a>containerSummary_reason</a> -
--   A short (255 max characters) human-readable string to provide
--   additional details about a running or stopped container.
--   
--   <a>$sel:exitCode:ContainerSummary'</a>,
--   <a>containerSummary_exitCode</a> - The exit code to return upon
--   completion.
newContainerSummary :: ContainerSummary

-- | An object representing a container instance host device.
--   
--   This object isn't applicable to jobs that are running on Fargate
--   resources and shouldn't be provided.
--   
--   <i>See:</i> <a>newDevice</a> smart constructor.
data Device
Device' :: Maybe Text -> Maybe [DeviceCgroupPermission] -> Text -> Device

-- | Create a value of <a>Device</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:containerPath:Device'</a>, <a>device_containerPath</a> - The
--   path inside the container that's used to expose the host device. By
--   default, the <tt>hostPath</tt> value is used.
--   
--   <a>$sel:permissions:Device'</a>, <a>device_permissions</a> - The
--   explicit permissions to provide to the container for the device. By
--   default, the container has permissions for <tt>read</tt>,
--   <tt>write</tt>, and <tt>mknod</tt> for the device.
--   
--   <a>$sel:hostPath:Device'</a>, <a>device_hostPath</a> - The path for
--   the device on the host container instance.
newDevice :: Text -> Device

-- | The authorization configuration details for the Amazon EFS file
--   system.
--   
--   <i>See:</i> <a>newEFSAuthorizationConfig</a> smart constructor.
data EFSAuthorizationConfig
EFSAuthorizationConfig' :: Maybe Text -> Maybe EFSAuthorizationConfigIAM -> EFSAuthorizationConfig

-- | Create a value of <a>EFSAuthorizationConfig</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:accessPointId:EFSAuthorizationConfig'</a>,
--   <a>eFSAuthorizationConfig_accessPointId</a> - The Amazon EFS access
--   point ID to use. If an access point is specified, the root directory
--   value specified in the <tt>EFSVolumeConfiguration</tt> must either be
--   omitted or set to <tt>/</tt> which will enforce the path set on the
--   EFS access point. If an access point is used, transit encryption must
--   be enabled in the <tt>EFSVolumeConfiguration</tt>. For more
--   information, see <a>Working with Amazon EFS Access Points</a> in the
--   <i>Amazon Elastic File System User Guide</i>.
--   
--   <a>$sel:iam:EFSAuthorizationConfig'</a>,
--   <a>eFSAuthorizationConfig_iam</a> - Whether or not to use the Batch
--   job IAM role defined in a job definition when mounting the Amazon EFS
--   file system. If enabled, transit encryption must be enabled in the
--   <tt>EFSVolumeConfiguration</tt>. If this parameter is omitted, the
--   default value of <tt>DISABLED</tt> is used. For more information, see
--   <a>Using Amazon EFS Access Points</a> in the <i>Batch User Guide</i>.
--   EFS IAM authorization requires that <tt>TransitEncryption</tt> be
--   <tt>ENABLED</tt> and that a <tt>JobRoleArn</tt> is specified.
newEFSAuthorizationConfig :: EFSAuthorizationConfig

-- | This is used when you're using an Amazon Elastic File System file
--   system for job storage. For more information, see <a>Amazon EFS
--   Volumes</a> in the <i>Batch User Guide</i>.
--   
--   <i>See:</i> <a>newEFSVolumeConfiguration</a> smart constructor.
data EFSVolumeConfiguration
EFSVolumeConfiguration' :: Maybe Text -> Maybe EFSTransitEncryption -> Maybe EFSAuthorizationConfig -> Maybe Int -> Text -> EFSVolumeConfiguration

-- | Create a value of <a>EFSVolumeConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:rootDirectory:EFSVolumeConfiguration'</a>,
--   <a>eFSVolumeConfiguration_rootDirectory</a> - The directory within the
--   Amazon EFS file system to mount as the root directory inside the host.
--   If this parameter is omitted, the root of the Amazon EFS volume is
--   used instead. Specifying <tt>/</tt> has the same effect as omitting
--   this parameter. The maximum length is 4,096 characters.
--   
--   If an EFS access point is specified in the
--   <tt>authorizationConfig</tt>, the root directory parameter must either
--   be omitted or set to <tt>/</tt>, which enforces the path set on the
--   Amazon EFS access point.
--   
--   <a>$sel:transitEncryption:EFSVolumeConfiguration'</a>,
--   <a>eFSVolumeConfiguration_transitEncryption</a> - Determines whether
--   to enable encryption for Amazon EFS data in transit between the Amazon
--   ECS host and the Amazon EFS server. Transit encryption must be enabled
--   if Amazon EFS IAM authorization is used. If this parameter is omitted,
--   the default value of <tt>DISABLED</tt> is used. For more information,
--   see <a>Encrypting data in transit</a> in the <i>Amazon Elastic File
--   System User Guide</i>.
--   
--   <a>$sel:authorizationConfig:EFSVolumeConfiguration'</a>,
--   <a>eFSVolumeConfiguration_authorizationConfig</a> - The authorization
--   configuration details for the Amazon EFS file system.
--   
--   <a>$sel:transitEncryptionPort:EFSVolumeConfiguration'</a>,
--   <a>eFSVolumeConfiguration_transitEncryptionPort</a> - The port to use
--   when sending encrypted data between the Amazon ECS host and the Amazon
--   EFS server. If you don't specify a transit encryption port, it uses
--   the port selection strategy that the Amazon EFS mount helper uses. The
--   value must be between 0 and 65,535. For more information, see <a>EFS
--   Mount Helper</a> in the <i>Amazon Elastic File System User Guide</i>.
--   
--   <a>$sel:fileSystemId:EFSVolumeConfiguration'</a>,
--   <a>eFSVolumeConfiguration_fileSystemId</a> - The Amazon EFS file
--   system ID to use.
newEFSVolumeConfiguration :: Text -> EFSVolumeConfiguration

-- | Provides information used to select Amazon Machine Images (AMIs) for
--   instances in the compute environment. If <tt>Ec2Configuration</tt>
--   isn't specified, the default is currently <tt>ECS_AL1</tt> (<a>Amazon
--   Linux</a>) for non-GPU, non AWSGraviton instances. Starting on March
--   31, 2021, this default will be changing to <tt>ECS_AL2</tt> (<a>Amazon
--   Linux 2</a>).
--   
--   This object isn't applicable to jobs that are running on Fargate
--   resources.
--   
--   <i>See:</i> <a>newEc2Configuration</a> smart constructor.
data Ec2Configuration
Ec2Configuration' :: Maybe Text -> Text -> Ec2Configuration

-- | Create a value of <a>Ec2Configuration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:imageIdOverride:Ec2Configuration'</a>,
--   <a>ec2Configuration_imageIdOverride</a> - The AMI ID used for
--   instances launched in the compute environment that match the image
--   type. This setting overrides the <tt>imageId</tt> set in the
--   <tt>computeResource</tt> object.
--   
--   <a>$sel:imageType:Ec2Configuration'</a>,
--   <a>ec2Configuration_imageType</a> - The image type to match with the
--   instance type to select an AMI. If the <tt>imageIdOverride</tt>
--   parameter isn't specified, then a recent <a>Amazon ECS-optimized
--   AMI</a> (<tt>ECS_AL1</tt>) is used. Starting on March 31, 2021, this
--   default will be changing to <tt>ECS_AL2</tt> (<a>Amazon Linux 2</a>).
--   
--   <ul>
--   <li><i>ECS_AL2</i> <a>Amazon Linux 2</a>− Default for all Amazon Web
--   Services Graviton-based instance families (for example, <tt>C6g</tt>,
--   <tt>M6g</tt>, <tt>R6g</tt>, and <tt>T4g</tt>) and can be used for all
--   non-GPU instance types.</li>
--   <li><i>ECS_AL2_NVIDIA</i> <a>Amazon Linux 2 (GPU)</a>−Default for all
--   GPU instance families (for example <tt>P4</tt> and <tt>G4</tt>) and
--   can be used for all non Amazon Web Services Graviton-based instance
--   types.</li>
--   <li><i>ECS_AL1</i> <a>Amazon Linux</a>−Default for all non-GPU, non
--   Amazon Web Services Graviton instance families. Amazon Linux is
--   reaching the end-of-life of standard support. For more information,
--   see <a>Amazon Linux AMI</a>.</li>
--   </ul>
newEc2Configuration :: Text -> Ec2Configuration

-- | Specifies a set of conditions to be met, and an action to take
--   (<tt>RETRY</tt> or <tt>EXIT</tt>) if all conditions are met.
--   
--   <i>See:</i> <a>newEvaluateOnExit</a> smart constructor.
data EvaluateOnExit
EvaluateOnExit' :: Maybe Text -> Maybe Text -> Maybe Text -> RetryAction -> EvaluateOnExit

-- | Create a value of <a>EvaluateOnExit</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:onExitCode:EvaluateOnExit'</a>,
--   <a>evaluateOnExit_onExitCode</a> - Contains a glob pattern to match
--   against the decimal representation of the <tt>ExitCode</tt> returned
--   for a job. The pattern can be up to 512 characters in length. It can
--   contain only numbers, and can optionally end with an asterisk (*) so
--   that only the start of the string needs to be an exact match.
--   
--   <a>$sel:onReason:EvaluateOnExit'</a>, <a>evaluateOnExit_onReason</a> -
--   Contains a glob pattern to match against the <tt>Reason</tt> returned
--   for a job. The pattern can be up to 512 characters in length. It can
--   contain letters, numbers, periods (.), colons (:), and white space
--   (including spaces and tabs). It can optionally end with an asterisk
--   (*) so that only the start of the string needs to be an exact match.
--   
--   <a>$sel:onStatusReason:EvaluateOnExit'</a>,
--   <a>evaluateOnExit_onStatusReason</a> - Contains a glob pattern to
--   match against the <tt>StatusReason</tt> returned for a job. The
--   pattern can be up to 512 characters in length. It can contain letters,
--   numbers, periods (.), colons (:), and white space (including spaces or
--   tabs). It can optionally end with an asterisk (*) so that only the
--   start of the string needs to be an exact match.
--   
--   <a>$sel:action:EvaluateOnExit'</a>, <a>evaluateOnExit_action</a> -
--   Specifies the action to take if all of the specified conditions
--   (<tt>onStatusReason</tt>, <tt>onReason</tt>, and <tt>onExitCode</tt>)
--   are met. The values aren't case sensitive.
newEvaluateOnExit :: RetryAction -> EvaluateOnExit

-- | The platform configuration for jobs that are running on Fargate
--   resources. Jobs that run on EC2 resources must not specify this
--   parameter.
--   
--   <i>See:</i> <a>newFargatePlatformConfiguration</a> smart constructor.
data FargatePlatformConfiguration
FargatePlatformConfiguration' :: Maybe Text -> FargatePlatformConfiguration

-- | Create a value of <a>FargatePlatformConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:platformVersion:FargatePlatformConfiguration'</a>,
--   <a>fargatePlatformConfiguration_platformVersion</a> - The Fargate
--   platform version where the jobs are running. A platform version is
--   specified only for jobs that are running on Fargate resources. If one
--   isn't specified, the <tt>LATEST</tt> platform version is used by
--   default. This uses a recent, approved version of the Fargate platform
--   for compute resources. For more information, see <a>Fargate platform
--   versions</a> in the <i>Amazon Elastic Container Service Developer
--   Guide</i>.
newFargatePlatformConfiguration :: FargatePlatformConfiguration

-- | Determine whether your data volume persists on the host container
--   instance and where it is stored. If this parameter is empty, then the
--   Docker daemon assigns a host path for your data volume, but the data
--   isn't guaranteed to persist after the containers associated with it
--   stop running.
--   
--   <i>See:</i> <a>newHost</a> smart constructor.
data Host
Host' :: Maybe Text -> Host

-- | Create a value of <a>Host</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sourcePath:Host'</a>, <a>host_sourcePath</a> - The path on the
--   host container instance that's presented to the container. If this
--   parameter is empty, then the Docker daemon has assigned a host path
--   for you. If this parameter contains a file location, then the data
--   volume persists at the specified location on the host container
--   instance until you delete it manually. If the source path location
--   doesn't exist on the host container instance, the Docker daemon
--   creates it. If the location does exist, the contents of the source
--   path folder are exported.
--   
--   This parameter isn't applicable to jobs that run on Fargate resources
--   and shouldn't be provided.
newHost :: Host

-- | An object representing an Batch job definition.
--   
--   <i>See:</i> <a>newJobDefinition</a> smart constructor.
data JobDefinition
JobDefinition' :: Maybe Text -> Maybe Bool -> Maybe RetryStrategy -> Maybe [PlatformCapability] -> Maybe (HashMap Text Text) -> Maybe JobTimeout -> Maybe ContainerProperties -> Maybe NodeProperties -> Maybe (HashMap Text Text) -> Text -> Text -> Int -> Text -> JobDefinition

-- | Create a value of <a>JobDefinition</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:JobDefinition'</a>, <a>jobDefinition_status</a> - The
--   status of the job definition.
--   
--   <a>$sel:propagateTags:JobDefinition'</a>,
--   <a>jobDefinition_propagateTags</a> - Specifies whether to propagate
--   the tags from the job or job definition to the corresponding Amazon
--   ECS task. If no value is specified, the tags aren't propagated. Tags
--   can only be propagated to the tasks during task creation. For tags
--   with the same name, job tags are given priority over job definitions
--   tags. If the total number of combined tags from the job and job
--   definition is over 50, the job is moved to the <tt>FAILED</tt> state.
--   
--   <a>$sel:retryStrategy:JobDefinition'</a>,
--   <a>jobDefinition_retryStrategy</a> - The retry strategy to use for
--   failed jobs that are submitted with this job definition.
--   
--   <a>$sel:platformCapabilities:JobDefinition'</a>,
--   <a>jobDefinition_platformCapabilities</a> - The platform capabilities
--   required by the job definition. If no value is specified, it defaults
--   to <tt>EC2</tt>. Jobs run on Fargate resources specify
--   <tt>FARGATE</tt>.
--   
--   <a>$sel:parameters:JobDefinition'</a>, <a>jobDefinition_parameters</a>
--   - Default parameters or parameter substitution placeholders that are
--   set in the job definition. Parameters are specified as a key-value
--   pair mapping. Parameters in a <tt>SubmitJob</tt> request override any
--   corresponding parameter defaults from the job definition. For more
--   information about specifying parameters, see <a>Job Definition
--   Parameters</a> in the <i>Batch User Guide</i>.
--   
--   <a>$sel:timeout:JobDefinition'</a>, <a>jobDefinition_timeout</a> - The
--   timeout configuration for jobs that are submitted with this job
--   definition. You can specify a timeout duration after which Batch
--   terminates your jobs if they haven't finished.
--   
--   <a>$sel:containerProperties:JobDefinition'</a>,
--   <a>jobDefinition_containerProperties</a> - An object with various
--   properties specific to container-based jobs.
--   
--   <a>$sel:nodeProperties:JobDefinition'</a>,
--   <a>jobDefinition_nodeProperties</a> - An object with various
--   properties specific to multi-node parallel jobs.
--   
--   If the job runs on Fargate resources, then you must not specify
--   <tt>nodeProperties</tt>; use <tt>containerProperties</tt> instead.
--   
--   <a>$sel:tags:JobDefinition'</a>, <a>jobDefinition_tags</a> - The tags
--   applied to the job definition.
--   
--   <a>$sel:jobDefinitionName:JobDefinition'</a>,
--   <a>jobDefinition_jobDefinitionName</a> - The name of the job
--   definition.
--   
--   <a>$sel:jobDefinitionArn:JobDefinition'</a>,
--   <a>jobDefinition_jobDefinitionArn</a> - The Amazon Resource Name (ARN)
--   for the job definition.
--   
--   <a>$sel:revision:JobDefinition'</a>, <a>jobDefinition_revision</a> -
--   The revision of the job definition.
--   
--   <a>$sel:type':JobDefinition'</a>, <a>jobDefinition_type</a> - The type
--   of job definition. If the job is run on Fargate resources, then
--   <tt>multinode</tt> isn't supported. For more information about
--   multi-node parallel jobs, see <a>Creating a multi-node parallel job
--   definition</a> in the <i>Batch User Guide</i>.
newJobDefinition :: Text -> Text -> Int -> Text -> JobDefinition

-- | An object representing an Batch job dependency.
--   
--   <i>See:</i> <a>newJobDependency</a> smart constructor.
data JobDependency
JobDependency' :: Maybe Text -> Maybe ArrayJobDependency -> JobDependency

-- | Create a value of <a>JobDependency</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobId:JobDependency'</a>, <a>jobDependency_jobId</a> - The job
--   ID of the Batch job associated with this dependency.
--   
--   <a>$sel:type':JobDependency'</a>, <a>jobDependency_type</a> - The type
--   of the job dependency.
newJobDependency :: JobDependency

-- | An object representing an Batch job.
--   
--   <i>See:</i> <a>newJobDetail</a> smart constructor.
data JobDetail
JobDetail' :: Maybe Integer -> Maybe Text -> Maybe Bool -> Maybe Integer -> Maybe RetryStrategy -> Maybe [AttemptDetail] -> Maybe [PlatformCapability] -> Maybe Integer -> Maybe [JobDependency] -> Maybe ContainerDetail -> Maybe NodeDetails -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe ArrayPropertiesDetail -> Maybe JobTimeout -> Maybe NodeProperties -> Maybe (HashMap Text Text) -> Text -> Text -> Text -> JobStatus -> Text -> JobDetail

-- | Create a value of <a>JobDetail</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:stoppedAt:JobDetail'</a>, <a>jobDetail_stoppedAt</a> - The
--   Unix timestamp (in milliseconds) for when the job was stopped (when
--   the job transitioned from the <tt>RUNNING</tt> state to a terminal
--   state, such as <tt>SUCCEEDED</tt> or <tt>FAILED</tt>).
--   
--   <a>$sel:jobArn:JobDetail'</a>, <a>jobDetail_jobArn</a> - The Amazon
--   Resource Name (ARN) of the job.
--   
--   <a>$sel:propagateTags:JobDetail'</a>, <a>jobDetail_propagateTags</a> -
--   Specifies whether to propagate the tags from the job or job definition
--   to the corresponding Amazon ECS task. If no value is specified, the
--   tags aren't propagated. Tags can only be propagated to the tasks
--   during task creation. For tags with the same name, job tags are given
--   priority over job definitions tags. If the total number of combined
--   tags from the job and job definition is over 50, the job is moved to
--   the <tt>FAILED</tt> state.
--   
--   <a>$sel:createdAt:JobDetail'</a>, <a>jobDetail_createdAt</a> - The
--   Unix timestamp (in milliseconds) for when the job was created. For
--   non-array jobs and parent array jobs, this is when the job entered the
--   <tt>SUBMITTED</tt> state (at the time SubmitJob was called). For array
--   child jobs, this is when the child job was spawned by its parent and
--   entered the <tt>PENDING</tt> state.
--   
--   <a>$sel:retryStrategy:JobDetail'</a>, <a>jobDetail_retryStrategy</a> -
--   The retry strategy to use for this job if an attempt fails.
--   
--   <a>$sel:attempts:JobDetail'</a>, <a>jobDetail_attempts</a> - A list of
--   job attempts associated with this job.
--   
--   <a>$sel:platformCapabilities:JobDetail'</a>,
--   <a>jobDetail_platformCapabilities</a> - The platform capabilities
--   required by the job definition. If no value is specified, it defaults
--   to <tt>EC2</tt>. Jobs run on Fargate resources specify
--   <tt>FARGATE</tt>.
--   
--   <a>$sel:startedAt:JobDetail'</a>, <a>jobDetail_startedAt</a> - The
--   Unix timestamp (in milliseconds) for when the job was started (when
--   the job transitioned from the <tt>STARTING</tt> state to the
--   <tt>RUNNING</tt> state). This parameter isn't provided for child jobs
--   of array jobs or multi-node parallel jobs.
--   
--   <a>$sel:dependsOn:JobDetail'</a>, <a>jobDetail_dependsOn</a> - A list
--   of job IDs that this job depends on.
--   
--   <a>$sel:container:JobDetail'</a>, <a>jobDetail_container</a> - An
--   object representing the details of the container that's associated
--   with the job.
--   
--   <a>$sel:nodeDetails:JobDetail'</a>, <a>jobDetail_nodeDetails</a> - An
--   object representing the details of a node that's associated with a
--   multi-node parallel job.
--   
--   <a>$sel:parameters:JobDetail'</a>, <a>jobDetail_parameters</a> -
--   Additional parameters passed to the job that replace parameter
--   substitution placeholders or override any corresponding parameter
--   defaults from the job definition.
--   
--   <a>$sel:statusReason:JobDetail'</a>, <a>jobDetail_statusReason</a> - A
--   short, human-readable string to provide additional details about the
--   current status of the job.
--   
--   <a>$sel:arrayProperties:JobDetail'</a>,
--   <a>jobDetail_arrayProperties</a> - The array properties of the job, if
--   it is an array job.
--   
--   <a>$sel:timeout:JobDetail'</a>, <a>jobDetail_timeout</a> - The timeout
--   configuration for the job.
--   
--   <a>$sel:nodeProperties:JobDetail'</a>, <a>jobDetail_nodeProperties</a>
--   - An object representing the node properties of a multi-node parallel
--   job.
--   
--   This isn't applicable to jobs that are running on Fargate resources.
--   
--   <a>$sel:tags:JobDetail'</a>, <a>jobDetail_tags</a> - The tags applied
--   to the job.
--   
--   <a>$sel:jobName:JobDetail'</a>, <a>jobDetail_jobName</a> - The name of
--   the job.
--   
--   <a>$sel:jobId:JobDetail'</a>, <a>jobDetail_jobId</a> - The ID for the
--   job.
--   
--   <a>$sel:jobQueue:JobDetail'</a>, <a>jobDetail_jobQueue</a> - The
--   Amazon Resource Name (ARN) of the job queue that the job is associated
--   with.
--   
--   <a>$sel:status:JobDetail'</a>, <a>jobDetail_status</a> - The current
--   status for the job.
--   
--   If your jobs don't progress to <tt>STARTING</tt>, see <a>Jobs Stuck in
--   RUNNABLE Status</a> in the troubleshooting section of the <i>Batch
--   User Guide</i>.
--   
--   <a>$sel:jobDefinition:JobDetail'</a>, <a>jobDetail_jobDefinition</a> -
--   The job definition that's used by this job.
newJobDetail :: Text -> Text -> Text -> JobStatus -> Text -> JobDetail

-- | An object representing the details of an Batch job queue.
--   
--   <i>See:</i> <a>newJobQueueDetail</a> smart constructor.
data JobQueueDetail
JobQueueDetail' :: Maybe JQStatus -> Maybe Text -> Maybe (HashMap Text Text) -> Text -> Text -> JQState -> Int -> [ComputeEnvironmentOrder] -> JobQueueDetail

-- | Create a value of <a>JobQueueDetail</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:JobQueueDetail'</a>, <a>jobQueueDetail_status</a> - The
--   status of the job queue (for example, <tt>CREATING</tt> or
--   <tt>VALID</tt>).
--   
--   <a>$sel:statusReason:JobQueueDetail'</a>,
--   <a>jobQueueDetail_statusReason</a> - A short, human-readable string to
--   provide additional details about the current status of the job queue.
--   
--   <a>$sel:tags:JobQueueDetail'</a>, <a>jobQueueDetail_tags</a> - The
--   tags applied to the job queue. For more information, see <a>Tagging
--   your Batch resources</a> in <i>Batch User Guide</i>.
--   
--   <a>$sel:jobQueueName:JobQueueDetail'</a>,
--   <a>jobQueueDetail_jobQueueName</a> - The name of the job queue.
--   
--   <a>$sel:jobQueueArn:JobQueueDetail'</a>,
--   <a>jobQueueDetail_jobQueueArn</a> - The Amazon Resource Name (ARN) of
--   the job queue.
--   
--   <a>$sel:state:JobQueueDetail'</a>, <a>jobQueueDetail_state</a> -
--   Describes the ability of the queue to accept new jobs. If the job
--   queue state is <tt>ENABLED</tt>, it's able to accept jobs. If the job
--   queue state is <tt>DISABLED</tt>, new jobs can't be added to the
--   queue, but jobs already in the queue can finish.
--   
--   <a>$sel:priority:JobQueueDetail'</a>, <a>jobQueueDetail_priority</a> -
--   The priority of the job queue. Job queues with a higher priority (or a
--   higher integer value for the <tt>priority</tt> parameter) are
--   evaluated first when associated with the same compute environment.
--   Priority is determined in descending order, for example, a job queue
--   with a priority value of <tt>10</tt> is given scheduling preference
--   over a job queue with a priority value of <tt>1</tt>. All of the
--   compute environments must be either EC2 (<tt>EC2</tt> or
--   <tt>SPOT</tt>) or Fargate (<tt>FARGATE</tt> or <tt>FARGATE_SPOT</tt>);
--   EC2 and Fargate compute environments can't be mixed.
--   
--   <a>$sel:computeEnvironmentOrder:JobQueueDetail'</a>,
--   <a>jobQueueDetail_computeEnvironmentOrder</a> - The compute
--   environments that are attached to the job queue and the order that job
--   placement is preferred. Compute environments are selected for job
--   placement in ascending order.
newJobQueueDetail :: Text -> Text -> JQState -> Int -> JobQueueDetail

-- | An object representing summary details of a job.
--   
--   <i>See:</i> <a>newJobSummary</a> smart constructor.
data JobSummary
JobSummary' :: Maybe Integer -> Maybe JobStatus -> Maybe Text -> Maybe Integer -> Maybe Integer -> Maybe ContainerSummary -> Maybe Text -> Maybe Text -> Maybe ArrayPropertiesSummary -> Maybe NodePropertiesSummary -> Text -> Text -> JobSummary

-- | Create a value of <a>JobSummary</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:stoppedAt:JobSummary'</a>, <a>jobSummary_stoppedAt</a> - The
--   Unix timestamp for when the job was stopped (when the job transitioned
--   from the <tt>RUNNING</tt> state to a terminal state, such as
--   <tt>SUCCEEDED</tt> or <tt>FAILED</tt>).
--   
--   <a>$sel:status:JobSummary'</a>, <a>jobSummary_status</a> - The current
--   status for the job.
--   
--   <a>$sel:jobArn:JobSummary'</a>, <a>jobSummary_jobArn</a> - The Amazon
--   Resource Name (ARN) of the job.
--   
--   <a>$sel:createdAt:JobSummary'</a>, <a>jobSummary_createdAt</a> - The
--   Unix timestamp for when the job was created. For non-array jobs and
--   parent array jobs, this is when the job entered the <tt>SUBMITTED</tt>
--   state (at the time SubmitJob was called). For array child jobs, this
--   is when the child job was spawned by its parent and entered the
--   <tt>PENDING</tt> state.
--   
--   <a>$sel:startedAt:JobSummary'</a>, <a>jobSummary_startedAt</a> - The
--   Unix timestamp for when the job was started (when the job transitioned
--   from the <tt>STARTING</tt> state to the <tt>RUNNING</tt> state).
--   
--   <a>$sel:container:JobSummary'</a>, <a>jobSummary_container</a> - An
--   object representing the details of the container that's associated
--   with the job.
--   
--   <a>$sel:jobDefinition:JobSummary'</a>, <a>jobSummary_jobDefinition</a>
--   - The Amazon Resource Name (ARN) of the job definition.
--   
--   <a>$sel:statusReason:JobSummary'</a>, <a>jobSummary_statusReason</a> -
--   A short, human-readable string to provide additional details about the
--   current status of the job.
--   
--   <a>$sel:arrayProperties:JobSummary'</a>,
--   <a>jobSummary_arrayProperties</a> - The array properties of the job,
--   if it is an array job.
--   
--   <a>$sel:nodeProperties:JobSummary'</a>,
--   <a>jobSummary_nodeProperties</a> - The node properties for a single
--   node in a job summary list.
--   
--   This isn't applicable to jobs that are running on Fargate resources.
--   
--   <a>$sel:jobId:JobSummary'</a>, <a>jobSummary_jobId</a> - The ID of the
--   job.
--   
--   <a>$sel:jobName:JobSummary'</a>, <a>jobSummary_jobName</a> - The name
--   of the job.
newJobSummary :: Text -> Text -> JobSummary

-- | An object representing a job timeout configuration.
--   
--   <i>See:</i> <a>newJobTimeout</a> smart constructor.
data JobTimeout
JobTimeout' :: Maybe Int -> JobTimeout

-- | Create a value of <a>JobTimeout</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:attemptDurationSeconds:JobTimeout'</a>,
--   <a>jobTimeout_attemptDurationSeconds</a> - The time duration in
--   seconds (measured from the job attempt's <tt>startedAt</tt> timestamp)
--   after which Batch terminates your jobs if they have not finished. The
--   minimum value for the timeout is 60 seconds.
newJobTimeout :: JobTimeout

-- | A key-value pair object.
--   
--   <i>See:</i> <a>newKeyValuePair</a> smart constructor.
data KeyValuePair
KeyValuePair' :: Maybe Text -> Maybe Text -> KeyValuePair

-- | Create a value of <a>KeyValuePair</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:value:KeyValuePair'</a>, <a>keyValuePair_value</a> - The value
--   of the key-value pair. For environment variables, this is the value of
--   the environment variable.
--   
--   <a>$sel:name:KeyValuePair'</a>, <a>keyValuePair_name</a> - The name of
--   the key-value pair. For environment variables, this is the name of the
--   environment variable.
newKeyValuePair :: KeyValuePair

-- | A filter name and value pair that's used to return a more specific
--   list of results from a <tt>ListJobs</tt> API operation.
--   
--   <i>See:</i> <a>newKeyValuesPair</a> smart constructor.
data KeyValuesPair
KeyValuesPair' :: Maybe [Text] -> Maybe Text -> KeyValuesPair

-- | Create a value of <a>KeyValuesPair</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:values:KeyValuesPair'</a>, <a>keyValuesPair_values</a> - The
--   filter values.
--   
--   <a>$sel:name:KeyValuesPair'</a>, <a>keyValuesPair_name</a> - The name
--   of the filter. Filter names are case sensitive.
newKeyValuesPair :: KeyValuesPair

-- | An object representing a launch template associated with a compute
--   resource. You must specify either the launch template ID or launch
--   template name in the request, but not both.
--   
--   If security groups are specified using both the
--   <tt>securityGroupIds</tt> parameter of
--   <tt>CreateComputeEnvironment</tt> and the launch template, the values
--   in the <tt>securityGroupIds</tt> parameter of
--   <tt>CreateComputeEnvironment</tt> will be used.
--   
--   This object isn't applicable to jobs that are running on Fargate
--   resources.
--   
--   <i>See:</i> <a>newLaunchTemplateSpecification</a> smart constructor.
data LaunchTemplateSpecification
LaunchTemplateSpecification' :: Maybe Text -> Maybe Text -> Maybe Text -> LaunchTemplateSpecification

-- | Create a value of <a>LaunchTemplateSpecification</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:launchTemplateName:LaunchTemplateSpecification'</a>,
--   <a>launchTemplateSpecification_launchTemplateName</a> - The name of
--   the launch template.
--   
--   <a>$sel:launchTemplateId:LaunchTemplateSpecification'</a>,
--   <a>launchTemplateSpecification_launchTemplateId</a> - The ID of the
--   launch template.
--   
--   <a>$sel:version:LaunchTemplateSpecification'</a>,
--   <a>launchTemplateSpecification_version</a> - The version number of the
--   launch template, <tt>$Latest</tt>, or <tt>$Default</tt>.
--   
--   If the value is <tt>$Latest</tt>, the latest version of the launch
--   template is used. If the value is <tt>$Default</tt>, the default
--   version of the launch template is used.
--   
--   After the compute environment is created, the launch template version
--   that's used isn't changed, even if the <tt>$Default</tt> or
--   <tt>$Latest</tt> version for the launch template is updated. To use a
--   new launch template version, create a new compute environment, add the
--   new compute environment to the existing job queue, remove the old
--   compute environment from the job queue, and delete the old compute
--   environment.
--   
--   Default: <tt>$Default</tt>.
newLaunchTemplateSpecification :: LaunchTemplateSpecification

-- | Linux-specific modifications that are applied to the container, such
--   as details for device mappings.
--   
--   <i>See:</i> <a>newLinuxParameters</a> smart constructor.
data LinuxParameters
LinuxParameters' :: Maybe Int -> Maybe Bool -> Maybe [Tmpfs] -> Maybe Int -> Maybe [Device] -> Maybe Int -> LinuxParameters

-- | Create a value of <a>LinuxParameters</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sharedMemorySize:LinuxParameters'</a>,
--   <a>linuxParameters_sharedMemorySize</a> - The value for the size (in
--   MiB) of the <tt>/dev/shm</tt> volume. This parameter maps to the
--   <tt>--shm-size</tt> option to <a>docker run</a>.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources and shouldn't be provided.
--   
--   <a>$sel:initProcessEnabled:LinuxParameters'</a>,
--   <a>linuxParameters_initProcessEnabled</a> - If true, run an
--   <tt>init</tt> process inside the container that forwards signals and
--   reaps processes. This parameter maps to the <tt>--init</tt> option to
--   <a>docker run</a>. This parameter requires version 1.25 of the Docker
--   Remote API or greater on your container instance. To check the Docker
--   Remote API version on your container instance, log into your container
--   instance and run the following command: <tt>sudo docker version | grep
--   "Server API version"</tt>
--   
--   <a>$sel:tmpfs:LinuxParameters'</a>, <a>linuxParameters_tmpfs</a> - The
--   container path, mount options, and size (in MiB) of the tmpfs mount.
--   This parameter maps to the <tt>--tmpfs</tt> option to <a>docker
--   run</a>.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources and shouldn't be provided.
--   
--   <a>$sel:swappiness:LinuxParameters'</a>,
--   <a>linuxParameters_swappiness</a> - This allows you to tune a
--   container's memory swappiness behavior. A <tt>swappiness</tt> value of
--   <tt>0</tt> causes swapping not to happen unless absolutely necessary.
--   A <tt>swappiness</tt> value of <tt>100</tt> causes pages to be swapped
--   very aggressively. Accepted values are whole numbers between
--   <tt>0</tt> and <tt>100</tt>. If the <tt>swappiness</tt> parameter
--   isn't specified, a default value of <tt>60</tt> is used. If a value
--   isn't specified for <tt>maxSwap</tt>, then this parameter is ignored.
--   If <tt>maxSwap</tt> is set to 0, the container doesn't use swap. This
--   parameter maps to the <tt>--memory-swappiness</tt> option to <a>docker
--   run</a>.
--   
--   Consider the following when you use a per-container swap
--   configuration.
--   
--   <ul>
--   <li>Swap space must be enabled and allocated on the container instance
--   for the containers to use.The Amazon ECS optimized AMIs don't have
--   swap enabled by default. You must enable swap on the instance to use
--   this feature. For more information, see <a>Instance Store Swap
--   Volumes</a> in the <i>Amazon EC2 User Guide for Linux Instances</i> or
--   <a>How do I allocate memory to work as swap space in an Amazon EC2
--   instance by using a swap file?</a></li>
--   <li>The swap space parameters are only supported for job definitions
--   using EC2 resources.</li>
--   <li>If the <tt>maxSwap</tt> and <tt>swappiness</tt> parameters are
--   omitted from a job definition, each container will have a default
--   <tt>swappiness</tt> value of 60, and the total swap usage will be
--   limited to two times the memory reservation of the container.</li>
--   </ul>
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources and shouldn't be provided.
--   
--   <a>$sel:devices:LinuxParameters'</a>, <a>linuxParameters_devices</a> -
--   Any host devices to expose to the container. This parameter maps to
--   <tt>Devices</tt> in the <a>Create a container</a> section of the
--   <a>Docker Remote API</a> and the <tt>--device</tt> option to <a>docker
--   run</a>.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources and shouldn't be provided.
--   
--   <a>$sel:maxSwap:LinuxParameters'</a>, <a>linuxParameters_maxSwap</a> -
--   The total amount of swap memory (in MiB) a container can use. This
--   parameter is translated to the <tt>--memory-swap</tt> option to
--   <a>docker run</a> where the value is the sum of the container memory
--   plus the <tt>maxSwap</tt> value. For more information, see
--   <a>--memory-swap details</a> in the Docker documentation.
--   
--   If a <tt>maxSwap</tt> value of <tt>0</tt> is specified, the container
--   doesn't use swap. Accepted values are <tt>0</tt> or any positive
--   integer. If the <tt>maxSwap</tt> parameter is omitted, the container
--   doesn't use the swap configuration for the container instance it is
--   running on. A <tt>maxSwap</tt> value must be set for the
--   <tt>swappiness</tt> parameter to be used.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources and shouldn't be provided.
newLinuxParameters :: LinuxParameters

-- | Log configuration options to send to a custom log driver for the
--   container.
--   
--   <i>See:</i> <a>newLogConfiguration</a> smart constructor.
data LogConfiguration
LogConfiguration' :: Maybe (HashMap Text Text) -> Maybe [Secret] -> LogDriver -> LogConfiguration

-- | Create a value of <a>LogConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:options:LogConfiguration'</a>, <a>logConfiguration_options</a>
--   - The configuration options to send to the log driver. This parameter
--   requires version 1.19 of the Docker Remote API or greater on your
--   container instance. To check the Docker Remote API version on your
--   container instance, log into your container instance and run the
--   following command: <tt>sudo docker version | grep "Server API
--   version"</tt>
--   
--   <a>$sel:secretOptions:LogConfiguration'</a>,
--   <a>logConfiguration_secretOptions</a> - The secrets to pass to the log
--   configuration. For more information, see <a>Specifying Sensitive
--   Data</a> in the <i>Batch User Guide</i>.
--   
--   <a>$sel:logDriver:LogConfiguration'</a>,
--   <a>logConfiguration_logDriver</a> - The log driver to use for the
--   container. The valid values listed for this parameter are log drivers
--   that the Amazon ECS container agent can communicate with by default.
--   
--   The supported log drivers are <tt>awslogs</tt>, <tt>fluentd</tt>,
--   <tt>gelf</tt>, <tt>json-file</tt>, <tt>journald</tt>,
--   <tt>logentries</tt>, <tt>syslog</tt>, and <tt>splunk</tt>.
--   
--   Jobs that are running on Fargate resources are restricted to the
--   <tt>awslogs</tt> and <tt>splunk</tt> log drivers.
--   
--   <ul>
--   <li><i>awslogs</i> Specifies the Amazon CloudWatch Logs logging
--   driver. For more information, see <a>Using the awslogs Log Driver</a>
--   in the <i>Batch User Guide</i> and <a>Amazon CloudWatch Logs logging
--   driver</a> in the Docker documentation.</li>
--   <li><i>fluentd</i> Specifies the Fluentd logging driver. For more
--   information, including usage and options, see <a>Fluentd logging
--   driver</a> in the Docker documentation.</li>
--   <li><i>gelf</i> Specifies the Graylog Extended Format (GELF) logging
--   driver. For more information, including usage and options, see
--   <a>Graylog Extended Format logging driver</a> in the Docker
--   documentation.</li>
--   <li><i>journald</i> Specifies the journald logging driver. For more
--   information, including usage and options, see <a>Journald logging
--   driver</a> in the Docker documentation.</li>
--   <li><i>json-file</i> Specifies the JSON file logging driver. For more
--   information, including usage and options, see <a>JSON File logging
--   driver</a> in the Docker documentation.</li>
--   <li><i>splunk</i> Specifies the Splunk logging driver. For more
--   information, including usage and options, see <a>Splunk logging
--   driver</a> in the Docker documentation.</li>
--   <li><i>syslog</i> Specifies the syslog logging driver. For more
--   information, including usage and options, see <a>Syslog logging
--   driver</a> in the Docker documentation.</li>
--   </ul>
--   
--   If you have a custom driver that's not listed earlier that you want to
--   work with the Amazon ECS container agent, you can fork the Amazon ECS
--   container agent project that's <a>available on GitHub</a> and
--   customize it to work with that driver. We encourage you to submit pull
--   requests for changes that you want to have included. However, Amazon
--   Web Services doesn't currently support running modified copies of this
--   software.
--   
--   This parameter requires version 1.18 of the Docker Remote API or
--   greater on your container instance. To check the Docker Remote API
--   version on your container instance, log into your container instance
--   and run the following command: <tt>sudo docker version | grep "Server
--   API version"</tt>
newLogConfiguration :: LogDriver -> LogConfiguration

-- | Details on a Docker volume mount point that's used in a job's
--   container properties. This parameter maps to <tt>Volumes</tt> in the
--   <a>Create a container</a> section of the Docker Remote API and the
--   <tt>--volume</tt> option to docker run.
--   
--   <i>See:</i> <a>newMountPoint</a> smart constructor.
data MountPoint
MountPoint' :: Maybe Text -> Maybe Text -> Maybe Bool -> MountPoint

-- | Create a value of <a>MountPoint</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:containerPath:MountPoint'</a>, <a>mountPoint_containerPath</a>
--   - The path on the container where the host volume is mounted.
--   
--   <a>$sel:sourceVolume:MountPoint'</a>, <a>mountPoint_sourceVolume</a> -
--   The name of the volume to mount.
--   
--   <a>$sel:readOnly:MountPoint'</a>, <a>mountPoint_readOnly</a> - If this
--   value is <tt>true</tt>, the container has read-only access to the
--   volume. Otherwise, the container can write to the volume. The default
--   value is <tt>false</tt>.
newMountPoint :: MountPoint

-- | The network configuration for jobs that are running on Fargate
--   resources. Jobs that are running on EC2 resources must not specify
--   this parameter.
--   
--   <i>See:</i> <a>newNetworkConfiguration</a> smart constructor.
data NetworkConfiguration
NetworkConfiguration' :: Maybe AssignPublicIp -> NetworkConfiguration

-- | Create a value of <a>NetworkConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:assignPublicIp:NetworkConfiguration'</a>,
--   <a>networkConfiguration_assignPublicIp</a> - Indicates whether the job
--   should have a public IP address. For a job that is running on Fargate
--   resources in a private subnet to send outbound traffic to the internet
--   (for example, to pull container images), the private subnet requires a
--   NAT gateway be attached to route requests to the internet. For more
--   information, see <a>Amazon ECS task networking</a>. The default value
--   is "DISABLED".
newNetworkConfiguration :: NetworkConfiguration

-- | An object representing the elastic network interface for a multi-node
--   parallel job node.
--   
--   <i>See:</i> <a>newNetworkInterface</a> smart constructor.
data NetworkInterface
NetworkInterface' :: Maybe Text -> Maybe Text -> Maybe Text -> NetworkInterface

-- | Create a value of <a>NetworkInterface</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ipv6Address:NetworkInterface'</a>,
--   <a>networkInterface_ipv6Address</a> - The private IPv6 address for the
--   network interface.
--   
--   <a>$sel:privateIpv4Address:NetworkInterface'</a>,
--   <a>networkInterface_privateIpv4Address</a> - The private IPv4 address
--   for the network interface.
--   
--   <a>$sel:attachmentId:NetworkInterface'</a>,
--   <a>networkInterface_attachmentId</a> - The attachment ID for the
--   network interface.
newNetworkInterface :: NetworkInterface

-- | An object representing the details of a multi-node parallel job node.
--   
--   <i>See:</i> <a>newNodeDetails</a> smart constructor.
data NodeDetails
NodeDetails' :: Maybe Int -> Maybe Bool -> NodeDetails

-- | Create a value of <a>NodeDetails</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nodeIndex:NodeDetails'</a>, <a>nodeDetails_nodeIndex</a> - The
--   node index for the node. Node index numbering begins at zero. This
--   index is also available on the node with the
--   <tt>AWS_BATCH_JOB_NODE_INDEX</tt> environment variable.
--   
--   <a>$sel:isMainNode:NodeDetails'</a>, <a>nodeDetails_isMainNode</a> -
--   Specifies whether the current node is the main node for a multi-node
--   parallel job.
newNodeDetails :: NodeDetails

-- | Object representing any node overrides to a job definition that's used
--   in a SubmitJob API operation.
--   
--   This isn't applicable to jobs that are running on Fargate resources
--   and shouldn't be provided; use <tt>containerOverrides</tt> instead.
--   
--   <i>See:</i> <a>newNodeOverrides</a> smart constructor.
data NodeOverrides
NodeOverrides' :: Maybe Int -> Maybe [NodePropertyOverride] -> NodeOverrides

-- | Create a value of <a>NodeOverrides</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:numNodes:NodeOverrides'</a>, <a>nodeOverrides_numNodes</a> -
--   The number of nodes to use with a multi-node parallel job. This value
--   overrides the number of nodes that are specified in the job
--   definition. To use this override:
--   
--   <ul>
--   <li>There must be at least one node range in your job definition that
--   has an open upper boundary (such as <tt>:</tt> or <tt>n:</tt>).</li>
--   <li>The lower boundary of the node range specified in the job
--   definition must be fewer than the number of nodes specified in the
--   override.</li>
--   <li>The main node index specified in the job definition must be fewer
--   than the number of nodes specified in the override.</li>
--   </ul>
--   
--   <a>$sel:nodePropertyOverrides:NodeOverrides'</a>,
--   <a>nodeOverrides_nodePropertyOverrides</a> - The node property
--   overrides for the job.
newNodeOverrides :: NodeOverrides

-- | An object representing the node properties of a multi-node parallel
--   job.
--   
--   <i>See:</i> <a>newNodeProperties</a> smart constructor.
data NodeProperties
NodeProperties' :: Int -> Int -> [NodeRangeProperty] -> NodeProperties

-- | Create a value of <a>NodeProperties</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:numNodes:NodeProperties'</a>, <a>nodeProperties_numNodes</a> -
--   The number of nodes associated with a multi-node parallel job.
--   
--   <a>$sel:mainNode:NodeProperties'</a>, <a>nodeProperties_mainNode</a> -
--   Specifies the node index for the main node of a multi-node parallel
--   job. This node index value must be fewer than the number of nodes.
--   
--   <a>$sel:nodeRangeProperties:NodeProperties'</a>,
--   <a>nodeProperties_nodeRangeProperties</a> - A list of node ranges and
--   their properties associated with a multi-node parallel job.
newNodeProperties :: Int -> Int -> NodeProperties

-- | An object representing the properties of a node that's associated with
--   a multi-node parallel job.
--   
--   <i>See:</i> <a>newNodePropertiesSummary</a> smart constructor.
data NodePropertiesSummary
NodePropertiesSummary' :: Maybe Int -> Maybe Int -> Maybe Bool -> NodePropertiesSummary

-- | Create a value of <a>NodePropertiesSummary</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:numNodes:NodePropertiesSummary'</a>,
--   <a>nodePropertiesSummary_numNodes</a> - The number of nodes associated
--   with a multi-node parallel job.
--   
--   <a>$sel:nodeIndex:NodePropertiesSummary'</a>,
--   <a>nodePropertiesSummary_nodeIndex</a> - The node index for the node.
--   Node index numbering begins at zero. This index is also available on
--   the node with the <tt>AWS_BATCH_JOB_NODE_INDEX</tt> environment
--   variable.
--   
--   <a>$sel:isMainNode:NodePropertiesSummary'</a>,
--   <a>nodePropertiesSummary_isMainNode</a> - Specifies whether the
--   current node is the main node for a multi-node parallel job.
newNodePropertiesSummary :: NodePropertiesSummary

-- | Object representing any node overrides to a job definition that's used
--   in a SubmitJob API operation.
--   
--   <i>See:</i> <a>newNodePropertyOverride</a> smart constructor.
data NodePropertyOverride
NodePropertyOverride' :: Maybe ContainerOverrides -> Text -> NodePropertyOverride

-- | Create a value of <a>NodePropertyOverride</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:containerOverrides:NodePropertyOverride'</a>,
--   <a>nodePropertyOverride_containerOverrides</a> - The overrides that
--   should be sent to a node range.
--   
--   <a>$sel:targetNodes:NodePropertyOverride'</a>,
--   <a>nodePropertyOverride_targetNodes</a> - The range of nodes, using
--   node index values, that's used to override. A range of <tt>0:3</tt>
--   indicates nodes with index values of <tt>0</tt> through <tt>3</tt>. If
--   the starting range value is omitted (<tt>:n</tt>), then <tt>0</tt> is
--   used to start the range. If the ending range value is omitted
--   (<tt>n:</tt>), then the highest possible node index is used to end the
--   range.
newNodePropertyOverride :: Text -> NodePropertyOverride

-- | An object representing the properties of the node range for a
--   multi-node parallel job.
--   
--   <i>See:</i> <a>newNodeRangeProperty</a> smart constructor.
data NodeRangeProperty
NodeRangeProperty' :: Maybe ContainerProperties -> Text -> NodeRangeProperty

-- | Create a value of <a>NodeRangeProperty</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:container:NodeRangeProperty'</a>,
--   <a>nodeRangeProperty_container</a> - The container details for the
--   node range.
--   
--   <a>$sel:targetNodes:NodeRangeProperty'</a>,
--   <a>nodeRangeProperty_targetNodes</a> - The range of nodes, using node
--   index values. A range of <tt>0:3</tt> indicates nodes with index
--   values of <tt>0</tt> through <tt>3</tt>. If the starting range value
--   is omitted (<tt>:n</tt>), then <tt>0</tt> is used to start the range.
--   If the ending range value is omitted (<tt>n:</tt>), then the highest
--   possible node index is used to end the range. Your accumulative node
--   ranges must account for all nodes (<tt>0:n</tt>). You can nest node
--   ranges, for example <tt>0:10</tt> and <tt>4:5</tt>, in which case the
--   <tt>4:5</tt> range properties override the <tt>0:10</tt> properties.
newNodeRangeProperty :: Text -> NodeRangeProperty

-- | The type and amount of a resource to assign to a container. The
--   supported resources include <tt>GPU</tt>, <tt>MEMORY</tt>, and
--   <tt>VCPU</tt>.
--   
--   <i>See:</i> <a>newResourceRequirement</a> smart constructor.
data ResourceRequirement
ResourceRequirement' :: Text -> ResourceType -> ResourceRequirement

-- | Create a value of <a>ResourceRequirement</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:value:ResourceRequirement'</a>,
--   <a>resourceRequirement_value</a> - The quantity of the specified
--   resource to reserve for the container. The values vary based on the
--   <tt>type</tt> specified.
--   
--   <ul>
--   <li><i>type="GPU"</i> The number of physical GPUs to reserve for the
--   container. The number of GPUs reserved for all containers in a job
--   shouldn't exceed the number of available GPUs on the compute resource
--   that the job is launched on.GPUs are not available for jobs that are
--   running on Fargate resources.</li>
--   <li><i>type="MEMORY"</i> The memory hard limit (in MiB) present to the
--   container. This parameter is supported for jobs that are running on
--   EC2 resources. If your container attempts to exceed the memory
--   specified, the container is terminated. This parameter maps to
--   <tt>Memory</tt> in the <a>Create a container</a> section of the
--   <a>Docker Remote API</a> and the <tt>--memory</tt> option to <a>docker
--   run</a>. You must specify at least 4 MiB of memory for a job. This is
--   required but can be specified in several places for multi-node
--   parallel (MNP) jobs. It must be specified for each node at least once.
--   This parameter maps to <tt>Memory</tt> in the <a>Create a
--   container</a> section of the <a>Docker Remote API</a> and the
--   <tt>--memory</tt> option to <a>docker run</a>.If you're trying to
--   maximize your resource utilization by providing your jobs as much
--   memory as possible for a particular instance type, see <a>Memory
--   Management</a> in the <i>Batch User Guide</i>.For jobs that are
--   running on Fargate resources, then <tt>value</tt> is the hard limit
--   (in MiB), and must match one of the supported values and the
--   <tt>VCPU</tt> values must be one of the values supported for that
--   memory value.<ul><li><i>value = 512</i> <tt>VCPU</tt> =
--   0.25</li><li><i>value = 1024</i> <tt>VCPU</tt> = 0.25 or
--   0.5</li><li><i>value = 2048</i> <tt>VCPU</tt> = 0.25, 0.5, or
--   1</li><li><i>value = 3072</i> <tt>VCPU</tt> = 0.5, or
--   1</li><li><i>value = 4096</i> <tt>VCPU</tt> = 0.5, 1, or
--   2</li><li><i>value = 5120, 6144, or 7168</i> <tt>VCPU</tt> = 1 or
--   2</li><li><i>value = 8192</i> <tt>VCPU</tt> = 1, 2, or
--   4</li><li><i>value = 9216, 10240, 11264, 12288, 13312, 14336, 15360,
--   or 16384</i> <tt>VCPU</tt> = 2 or 4</li><li><i>value = 17408, 18432,
--   19456, 20480, 21504, 22528, 23552, 24576, 25600, 26624, 27648, 28672,
--   29696, or 30720</i> <tt>VCPU</tt> = 4</li></ul></li>
--   <li><i>type="VCPU"</i> The number of vCPUs reserved for the container.
--   This parameter maps to <tt>CpuShares</tt> in the <a>Create a
--   container</a> section of the <a>Docker Remote API</a> and the
--   <tt>--cpu-shares</tt> option to <a>docker run</a>. Each vCPU is
--   equivalent to 1,024 CPU shares. For EC2 resources, you must specify at
--   least one vCPU. This is required but can be specified in several
--   places; it must be specified for each node at least once.For jobs that
--   are running on Fargate resources, then <tt>value</tt> must match one
--   of the supported values and the <tt>MEMORY</tt> values must be one of
--   the values supported for that VCPU value. The supported values are
--   0.25, 0.5, 1, 2, and 4<ul><li><i>value = 0.25</i> <tt>MEMORY</tt> =
--   512, 1024, or 2048</li><li><i>value = 0.5</i> <tt>MEMORY</tt> = 1024,
--   2048, 3072, or 4096</li><li><i>value = 1</i> <tt>MEMORY</tt> = 2048,
--   3072, 4096, 5120, 6144, 7168, or 8192</li><li><i>value = 2</i>
--   <tt>MEMORY</tt> = 4096, 5120, 6144, 7168, 8192, 9216, 10240, 11264,
--   12288, 13312, 14336, 15360, or 16384</li><li><i>value = 4</i>
--   <tt>MEMORY</tt> = 8192, 9216, 10240, 11264, 12288, 13312, 14336,
--   15360, 16384, 17408, 18432, 19456, 20480, 21504, 22528, 23552, 24576,
--   25600, 26624, 27648, 28672, 29696, or 30720</li></ul></li>
--   </ul>
--   
--   <a>$sel:type':ResourceRequirement'</a>,
--   <a>resourceRequirement_type</a> - The type of resource to assign to a
--   container. The supported resources include <tt>GPU</tt>,
--   <tt>MEMORY</tt>, and <tt>VCPU</tt>.
newResourceRequirement :: Text -> ResourceType -> ResourceRequirement

-- | The retry strategy associated with a job. For more information, see
--   <a>Automated job retries</a> in the <i>Batch User Guide</i>.
--   
--   <i>See:</i> <a>newRetryStrategy</a> smart constructor.
data RetryStrategy
RetryStrategy' :: Maybe [EvaluateOnExit] -> Maybe Int -> RetryStrategy

-- | Create a value of <a>RetryStrategy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:evaluateOnExit:RetryStrategy'</a>,
--   <a>retryStrategy_evaluateOnExit</a> - Array of up to 5 objects that
--   specify conditions under which the job should be retried or failed. If
--   this parameter is specified, then the <tt>attempts</tt> parameter must
--   also be specified.
--   
--   <a>$sel:attempts:RetryStrategy'</a>, <a>retryStrategy_attempts</a> -
--   The number of times to move a job to the <tt>RUNNABLE</tt> status. You
--   can specify between 1 and 10 attempts. If the value of
--   <tt>attempts</tt> is greater than one, the job is retried on failure
--   the same number of attempts as the value.
newRetryStrategy :: RetryStrategy

-- | An object representing the secret to expose to your container. Secrets
--   can be exposed to a container in the following ways:
--   
--   <ul>
--   <li>To inject sensitive data into your containers as environment
--   variables, use the <tt>secrets</tt> container definition
--   parameter.</li>
--   <li>To reference sensitive information in the log configuration of a
--   container, use the <tt>secretOptions</tt> container definition
--   parameter.</li>
--   </ul>
--   
--   For more information, see <a>Specifying sensitive data</a> in the
--   <i>Batch User Guide</i>.
--   
--   <i>See:</i> <a>newSecret</a> smart constructor.
data Secret
Secret' :: Text -> Text -> Secret

-- | Create a value of <a>Secret</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:Secret'</a>, <a>secret_name</a> - The name of the secret.
--   
--   <a>$sel:valueFrom:Secret'</a>, <a>secret_valueFrom</a> - The secret to
--   expose to the container. The supported values are either the full ARN
--   of the Secrets Manager secret or the full ARN of the parameter in the
--   Amazon Web Services Systems Manager Parameter Store.
--   
--   If the Amazon Web Services Systems Manager Parameter Store parameter
--   exists in the same Region as the job you're launching, then you can
--   use either the full ARN or name of the parameter. If the parameter
--   exists in a different Region, then the full ARN must be specified.
newSecret :: Text -> Text -> Secret

-- | The container path, mount options, and size of the tmpfs mount.
--   
--   This object isn't applicable to jobs that are running on Fargate
--   resources.
--   
--   <i>See:</i> <a>newTmpfs</a> smart constructor.
data Tmpfs
Tmpfs' :: Maybe [Text] -> Text -> Int -> Tmpfs

-- | Create a value of <a>Tmpfs</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:mountOptions:Tmpfs'</a>, <a>tmpfs_mountOptions</a> - The list
--   of tmpfs volume mount options.
--   
--   Valid values: "<tt>defaults</tt>" | "<tt>ro</tt>" | "<tt>rw</tt>" |
--   "<tt>suid</tt>" | "<tt>nosuid</tt>" | "<tt>dev</tt>" |
--   "<tt>nodev</tt>" | "<tt>exec</tt>" | "<tt>noexec</tt>" |
--   "<tt>sync</tt>" | "<tt>async</tt>" | "<tt>dirsync</tt>" |
--   "<tt>remount</tt>" | "<tt>mand</tt>" | "<tt>nomand</tt>" |
--   "<tt>atime</tt>" | "<tt>noatime</tt>" | "<tt>diratime</tt>" |
--   "<tt>nodiratime</tt>" | "<tt>bind</tt>" | "<tt>rbind" | "unbindable" |
--   "runbindable" | "private" | "rprivate" | "shared" | "rshared" |
--   "slave" | "rslave" | "relatime</tt>" | "<tt>norelatime</tt>" |
--   "<tt>strictatime</tt>" | "<tt>nostrictatime</tt>" | "<tt>mode</tt>" |
--   "<tt>uid</tt>" | "<tt>gid</tt>" | "<tt>nr_inodes</tt>" |
--   "<tt>nr_blocks</tt>" | "<tt>mpol</tt>"
--   
--   <a>$sel:containerPath:Tmpfs'</a>, <a>tmpfs_containerPath</a> - The
--   absolute file path in the container where the tmpfs volume is mounted.
--   
--   <a>$sel:size:Tmpfs'</a>, <a>tmpfs_size</a> - The size (in MiB) of the
--   tmpfs volume.
newTmpfs :: Text -> Int -> Tmpfs

-- | The <tt>ulimit</tt> settings to pass to the container.
--   
--   This object isn't applicable to jobs that are running on Fargate
--   resources.
--   
--   <i>See:</i> <a>newUlimit</a> smart constructor.
data Ulimit
Ulimit' :: Int -> Text -> Int -> Ulimit

-- | Create a value of <a>Ulimit</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:hardLimit:Ulimit'</a>, <a>ulimit_hardLimit</a> - The hard
--   limit for the <tt>ulimit</tt> type.
--   
--   <a>$sel:name:Ulimit'</a>, <a>ulimit_name</a> - The <tt>type</tt> of
--   the <tt>ulimit</tt>.
--   
--   <a>$sel:softLimit:Ulimit'</a>, <a>ulimit_softLimit</a> - The soft
--   limit for the <tt>ulimit</tt> type.
newUlimit :: Int -> Text -> Int -> Ulimit

-- | A data volume used in a job's container properties.
--   
--   <i>See:</i> <a>newVolume</a> smart constructor.
data Volume
Volume' :: Maybe Text -> Maybe EFSVolumeConfiguration -> Maybe Host -> Volume

-- | Create a value of <a>Volume</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:Volume'</a>, <a>volume_name</a> - The name of the volume.
--   Up to 255 letters (uppercase and lowercase), numbers, hyphens, and
--   underscores are allowed. This name is referenced in the
--   <tt>sourceVolume</tt> parameter of container definition
--   <tt>mountPoints</tt>.
--   
--   <a>$sel:efsVolumeConfiguration:Volume'</a>,
--   <a>volume_efsVolumeConfiguration</a> - This parameter is specified
--   when you are using an Amazon Elastic File System file system for job
--   storage. Jobs that are running on Fargate resources must specify a
--   <tt>platformVersion</tt> of at least <tt>1.4.0</tt>.
--   
--   <a>$sel:host:Volume'</a>, <a>volume_host</a> - The contents of the
--   <tt>host</tt> parameter determine whether your data volume persists on
--   the host container instance and where it is stored. If the host
--   parameter is empty, then the Docker daemon assigns a host path for
--   your data volume. However, the data isn't guaranteed to persist after
--   the containers associated with it stop running.
--   
--   This parameter isn't applicable to jobs that are running on Fargate
--   resources and shouldn't be provided.
newVolume :: Volume
