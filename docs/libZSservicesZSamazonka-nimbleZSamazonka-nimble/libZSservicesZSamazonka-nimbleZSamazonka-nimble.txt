-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/

@package libZSservicesZSamazonka-nimbleZSamazonka-nimble
@version 2.0


module Network.AWS.Nimble.Types.ActiveDirectoryComputerAttribute

-- | An LDAP attribute of an Active Directory computer account, in the form
--   of a name:value pair.
--   
--   <i>See:</i> <a>newActiveDirectoryComputerAttribute</a> smart
--   constructor.
data ActiveDirectoryComputerAttribute
ActiveDirectoryComputerAttribute' :: Maybe Text -> Maybe Text -> ActiveDirectoryComputerAttribute

-- | The value for the LDAP attribute.
[$sel:value:ActiveDirectoryComputerAttribute'] :: ActiveDirectoryComputerAttribute -> Maybe Text

-- | The name for the LDAP attribute.
[$sel:name:ActiveDirectoryComputerAttribute'] :: ActiveDirectoryComputerAttribute -> Maybe Text

-- | Create a value of <a>ActiveDirectoryComputerAttribute</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:value:ActiveDirectoryComputerAttribute'</a>,
--   <a>activeDirectoryComputerAttribute_value</a> - The value for the LDAP
--   attribute.
--   
--   <a>$sel:name:ActiveDirectoryComputerAttribute'</a>,
--   <a>activeDirectoryComputerAttribute_name</a> - The name for the LDAP
--   attribute.
newActiveDirectoryComputerAttribute :: ActiveDirectoryComputerAttribute

-- | The value for the LDAP attribute.
activeDirectoryComputerAttribute_value :: Lens' ActiveDirectoryComputerAttribute (Maybe Text)

-- | The name for the LDAP attribute.
activeDirectoryComputerAttribute_name :: Lens' ActiveDirectoryComputerAttribute (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Nimble.Types.ActiveDirectoryComputerAttribute.ActiveDirectoryComputerAttribute
instance GHC.Show.Show Network.AWS.Nimble.Types.ActiveDirectoryComputerAttribute.ActiveDirectoryComputerAttribute
instance GHC.Read.Read Network.AWS.Nimble.Types.ActiveDirectoryComputerAttribute.ActiveDirectoryComputerAttribute
instance GHC.Classes.Eq Network.AWS.Nimble.Types.ActiveDirectoryComputerAttribute.ActiveDirectoryComputerAttribute
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Nimble.Types.ActiveDirectoryComputerAttribute.ActiveDirectoryComputerAttribute
instance Data.Hashable.Class.Hashable Network.AWS.Nimble.Types.ActiveDirectoryComputerAttribute.ActiveDirectoryComputerAttribute
instance Control.DeepSeq.NFData Network.AWS.Nimble.Types.ActiveDirectoryComputerAttribute.ActiveDirectoryComputerAttribute
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Nimble.Types.ActiveDirectoryComputerAttribute.ActiveDirectoryComputerAttribute


module Network.AWS.Nimble.Types.ActiveDirectoryConfiguration

-- | The configuration for a Microsoft Active Directory (Microsoft AD)
--   studio resource.
--   
--   <i>See:</i> <a>newActiveDirectoryConfiguration</a> smart constructor.
data ActiveDirectoryConfiguration
ActiveDirectoryConfiguration' :: Maybe Text -> Maybe [ActiveDirectoryComputerAttribute] -> Maybe Text -> ActiveDirectoryConfiguration

-- | The directory ID of the Directory Service for Microsoft Active
--   Directory to access using this studio component.
[$sel:directoryId:ActiveDirectoryConfiguration'] :: ActiveDirectoryConfiguration -> Maybe Text

-- | A collection of custom attributes for an Active Directory computer.
[$sel:computerAttributes:ActiveDirectoryConfiguration'] :: ActiveDirectoryConfiguration -> Maybe [ActiveDirectoryComputerAttribute]

-- | The distinguished name (DN) and organizational unit (OU) of an Active
--   Directory computer.
[$sel:organizationalUnitDistinguishedName:ActiveDirectoryConfiguration'] :: ActiveDirectoryConfiguration -> Maybe Text

-- | Create a value of <a>ActiveDirectoryConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:directoryId:ActiveDirectoryConfiguration'</a>,
--   <a>activeDirectoryConfiguration_directoryId</a> - The directory ID of
--   the Directory Service for Microsoft Active Directory to access using
--   this studio component.
--   
--   <a>$sel:computerAttributes:ActiveDirectoryConfiguration'</a>,
--   <a>activeDirectoryConfiguration_computerAttributes</a> - A collection
--   of custom attributes for an Active Directory computer.
--   
--   
--   <a>$sel:organizationalUnitDistinguishedName:ActiveDirectoryConfiguration'</a>,
--   <a>activeDirectoryConfiguration_organizationalUnitDistinguishedName</a>
--   - The distinguished name (DN) and organizational unit (OU) of an
--   Active Directory computer.
newActiveDirectoryConfiguration :: ActiveDirectoryConfiguration

-- | The directory ID of the Directory Service for Microsoft Active
--   Directory to access using this studio component.
activeDirectoryConfiguration_directoryId :: Lens' ActiveDirectoryConfiguration (Maybe Text)

-- | A collection of custom attributes for an Active Directory computer.
activeDirectoryConfiguration_computerAttributes :: Lens' ActiveDirectoryConfiguration (Maybe [ActiveDirectoryComputerAttribute])

-- | The distinguished name (DN) and organizational unit (OU) of an Active
--   Directory computer.
activeDirectoryConfiguration_organizationalUnitDistinguishedName :: Lens' ActiveDirectoryConfiguration (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Nimble.Types.ActiveDirectoryConfiguration.ActiveDirectoryConfiguration
instance GHC.Show.Show Network.AWS.Nimble.Types.ActiveDirectoryConfiguration.ActiveDirectoryConfiguration
instance GHC.Read.Read Network.AWS.Nimble.Types.ActiveDirectoryConfiguration.ActiveDirectoryConfiguration
instance GHC.Classes.Eq Network.AWS.Nimble.Types.ActiveDirectoryConfiguration.ActiveDirectoryConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Nimble.Types.ActiveDirectoryConfiguration.ActiveDirectoryConfiguration
instance Data.Hashable.Class.Hashable Network.AWS.Nimble.Types.ActiveDirectoryConfiguration.ActiveDirectoryConfiguration
instance Control.DeepSeq.NFData Network.AWS.Nimble.Types.ActiveDirectoryConfiguration.ActiveDirectoryConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Nimble.Types.ActiveDirectoryConfiguration.ActiveDirectoryConfiguration


module Network.AWS.Nimble.Types.ComputeFarmConfiguration

-- | The configuration for a render farm that is associated with a studio
--   resource.
--   
--   <i>See:</i> <a>newComputeFarmConfiguration</a> smart constructor.
data ComputeFarmConfiguration
ComputeFarmConfiguration' :: Maybe Text -> Maybe Text -> ComputeFarmConfiguration

-- | The name of an Active Directory user that is used on ComputeFarm
--   worker instances.
[$sel:activeDirectoryUser:ComputeFarmConfiguration'] :: ComputeFarmConfiguration -> Maybe Text

-- | The endpoint of the ComputeFarm that is accessed by the studio
--   component resource.
[$sel:endpoint:ComputeFarmConfiguration'] :: ComputeFarmConfiguration -> Maybe Text

-- | Create a value of <a>ComputeFarmConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:activeDirectoryUser:ComputeFarmConfiguration'</a>,
--   <a>computeFarmConfiguration_activeDirectoryUser</a> - The name of an
--   Active Directory user that is used on ComputeFarm worker instances.
--   
--   <a>$sel:endpoint:ComputeFarmConfiguration'</a>,
--   <a>computeFarmConfiguration_endpoint</a> - The endpoint of the
--   ComputeFarm that is accessed by the studio component resource.
newComputeFarmConfiguration :: ComputeFarmConfiguration

-- | The name of an Active Directory user that is used on ComputeFarm
--   worker instances.
computeFarmConfiguration_activeDirectoryUser :: Lens' ComputeFarmConfiguration (Maybe Text)

-- | The endpoint of the ComputeFarm that is accessed by the studio
--   component resource.
computeFarmConfiguration_endpoint :: Lens' ComputeFarmConfiguration (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Nimble.Types.ComputeFarmConfiguration.ComputeFarmConfiguration
instance GHC.Show.Show Network.AWS.Nimble.Types.ComputeFarmConfiguration.ComputeFarmConfiguration
instance GHC.Read.Read Network.AWS.Nimble.Types.ComputeFarmConfiguration.ComputeFarmConfiguration
instance GHC.Classes.Eq Network.AWS.Nimble.Types.ComputeFarmConfiguration.ComputeFarmConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Nimble.Types.ComputeFarmConfiguration.ComputeFarmConfiguration
instance Data.Hashable.Class.Hashable Network.AWS.Nimble.Types.ComputeFarmConfiguration.ComputeFarmConfiguration
instance Control.DeepSeq.NFData Network.AWS.Nimble.Types.ComputeFarmConfiguration.ComputeFarmConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Nimble.Types.ComputeFarmConfiguration.ComputeFarmConfiguration


module Network.AWS.Nimble.Types.Eula

-- | Represents a EULA resource.
--   
--   <i>See:</i> <a>newEula</a> smart constructor.
data Eula
Eula' :: Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> Eula

-- | The Unix epoch timestamp in seconds for when the resource was created.
[$sel:createdAt:Eula'] :: Eula -> Maybe POSIX

-- | The EULA ID.
[$sel:eulaId:Eula'] :: Eula -> Maybe Text

-- | The EULA content.
[$sel:content:Eula'] :: Eula -> Maybe Text

-- | The name for the EULA.
[$sel:name:Eula'] :: Eula -> Maybe Text

-- | The Unix epoch timestamp in seconds for when the resource was updated.
[$sel:updatedAt:Eula'] :: Eula -> Maybe POSIX

-- | Create a value of <a>Eula</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:createdAt:Eula'</a>, <a>eula_createdAt</a> - The Unix epoch
--   timestamp in seconds for when the resource was created.
--   
--   <a>$sel:eulaId:Eula'</a>, <a>eula_eulaId</a> - The EULA ID.
--   
--   <a>$sel:content:Eula'</a>, <a>eula_content</a> - The EULA content.
--   
--   <a>$sel:name:Eula'</a>, <a>eula_name</a> - The name for the EULA.
--   
--   <a>$sel:updatedAt:Eula'</a>, <a>eula_updatedAt</a> - The Unix epoch
--   timestamp in seconds for when the resource was updated.
newEula :: Eula

-- | The Unix epoch timestamp in seconds for when the resource was created.
eula_createdAt :: Lens' Eula (Maybe UTCTime)

-- | The EULA ID.
eula_eulaId :: Lens' Eula (Maybe Text)

-- | The EULA content.
eula_content :: Lens' Eula (Maybe Text)

-- | The name for the EULA.
eula_name :: Lens' Eula (Maybe Text)

-- | The Unix epoch timestamp in seconds for when the resource was updated.
eula_updatedAt :: Lens' Eula (Maybe UTCTime)
instance GHC.Generics.Generic Network.AWS.Nimble.Types.Eula.Eula
instance GHC.Show.Show Network.AWS.Nimble.Types.Eula.Eula
instance GHC.Read.Read Network.AWS.Nimble.Types.Eula.Eula
instance GHC.Classes.Eq Network.AWS.Nimble.Types.Eula.Eula
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Nimble.Types.Eula.Eula
instance Data.Hashable.Class.Hashable Network.AWS.Nimble.Types.Eula.Eula
instance Control.DeepSeq.NFData Network.AWS.Nimble.Types.Eula.Eula


module Network.AWS.Nimble.Types.EulaAcceptance

-- | <i>See:</i> <a>newEulaAcceptance</a> smart constructor.
data EulaAcceptance
EulaAcceptance' :: Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> EulaAcceptance

-- | The ID of the acceptee.
[$sel:accepteeId:EulaAcceptance'] :: EulaAcceptance -> Maybe Text

-- | The EULA ID.
[$sel:eulaId:EulaAcceptance'] :: EulaAcceptance -> Maybe Text

-- | The Unix epoch timestamp in seconds for when the EULA was accepted.
[$sel:acceptedAt:EulaAcceptance'] :: EulaAcceptance -> Maybe POSIX

-- | The ID of the person who accepted the EULA.
[$sel:acceptedBy:EulaAcceptance'] :: EulaAcceptance -> Maybe Text

-- | The EULA acceptance ID.
[$sel:eulaAcceptanceId:EulaAcceptance'] :: EulaAcceptance -> Maybe Text

-- | Create a value of <a>EulaAcceptance</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:accepteeId:EulaAcceptance'</a>,
--   <a>eulaAcceptance_accepteeId</a> - The ID of the acceptee.
--   
--   <a>$sel:eulaId:EulaAcceptance'</a>, <a>eulaAcceptance_eulaId</a> - The
--   EULA ID.
--   
--   <a>$sel:acceptedAt:EulaAcceptance'</a>,
--   <a>eulaAcceptance_acceptedAt</a> - The Unix epoch timestamp in seconds
--   for when the EULA was accepted.
--   
--   <a>$sel:acceptedBy:EulaAcceptance'</a>,
--   <a>eulaAcceptance_acceptedBy</a> - The ID of the person who accepted
--   the EULA.
--   
--   <a>$sel:eulaAcceptanceId:EulaAcceptance'</a>,
--   <a>eulaAcceptance_eulaAcceptanceId</a> - The EULA acceptance ID.
newEulaAcceptance :: EulaAcceptance

-- | The ID of the acceptee.
eulaAcceptance_accepteeId :: Lens' EulaAcceptance (Maybe Text)

-- | The EULA ID.
eulaAcceptance_eulaId :: Lens' EulaAcceptance (Maybe Text)

-- | The Unix epoch timestamp in seconds for when the EULA was accepted.
eulaAcceptance_acceptedAt :: Lens' EulaAcceptance (Maybe UTCTime)

-- | The ID of the person who accepted the EULA.
eulaAcceptance_acceptedBy :: Lens' EulaAcceptance (Maybe Text)

-- | The EULA acceptance ID.
eulaAcceptance_eulaAcceptanceId :: Lens' EulaAcceptance (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Nimble.Types.EulaAcceptance.EulaAcceptance
instance GHC.Show.Show Network.AWS.Nimble.Types.EulaAcceptance.EulaAcceptance
instance GHC.Read.Read Network.AWS.Nimble.Types.EulaAcceptance.EulaAcceptance
instance GHC.Classes.Eq Network.AWS.Nimble.Types.EulaAcceptance.EulaAcceptance
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Nimble.Types.EulaAcceptance.EulaAcceptance
instance Data.Hashable.Class.Hashable Network.AWS.Nimble.Types.EulaAcceptance.EulaAcceptance
instance Control.DeepSeq.NFData Network.AWS.Nimble.Types.EulaAcceptance.EulaAcceptance


module Network.AWS.Nimble.Types.LaunchProfileInitializationActiveDirectory

-- | <i>See:</i> <a>newLaunchProfileInitializationActiveDirectory</a> smart
--   constructor.
data LaunchProfileInitializationActiveDirectory
LaunchProfileInitializationActiveDirectory' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe [Text] -> Maybe [ActiveDirectoryComputerAttribute] -> Maybe Text -> Maybe Text -> LaunchProfileInitializationActiveDirectory

-- | The directory ID of the Directory Service for Microsoft Active
--   Directory to access using this launch profile.
[$sel:directoryId:LaunchProfileInitializationActiveDirectory'] :: LaunchProfileInitializationActiveDirectory -> Maybe Text

-- | The unique identifier for a studio component resource.
[$sel:studioComponentId:LaunchProfileInitializationActiveDirectory'] :: LaunchProfileInitializationActiveDirectory -> Maybe Text

-- | The name for the studio component.
[$sel:studioComponentName:LaunchProfileInitializationActiveDirectory'] :: LaunchProfileInitializationActiveDirectory -> Maybe Text

-- | The DNS IP address.
[$sel:dnsIpAddresses:LaunchProfileInitializationActiveDirectory'] :: LaunchProfileInitializationActiveDirectory -> Maybe [Text]

-- | A collection of custom attributes for an Active Directory computer.
[$sel:computerAttributes:LaunchProfileInitializationActiveDirectory'] :: LaunchProfileInitializationActiveDirectory -> Maybe [ActiveDirectoryComputerAttribute]

-- | The name for the organizational unit distinguished name.
[$sel:organizationalUnitDistinguishedName:LaunchProfileInitializationActiveDirectory'] :: LaunchProfileInitializationActiveDirectory -> Maybe Text

-- | The directory name.
[$sel:directoryName:LaunchProfileInitializationActiveDirectory'] :: LaunchProfileInitializationActiveDirectory -> Maybe Text

-- | Create a value of <a>LaunchProfileInitializationActiveDirectory</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:directoryId:LaunchProfileInitializationActiveDirectory'</a>,
--   <a>launchProfileInitializationActiveDirectory_directoryId</a> - The
--   directory ID of the Directory Service for Microsoft Active Directory
--   to access using this launch profile.
--   
--   
--   <a>$sel:studioComponentId:LaunchProfileInitializationActiveDirectory'</a>,
--   <a>launchProfileInitializationActiveDirectory_studioComponentId</a> -
--   The unique identifier for a studio component resource.
--   
--   
--   <a>$sel:studioComponentName:LaunchProfileInitializationActiveDirectory'</a>,
--   <a>launchProfileInitializationActiveDirectory_studioComponentName</a>
--   - The name for the studio component.
--   
--   
--   <a>$sel:dnsIpAddresses:LaunchProfileInitializationActiveDirectory'</a>,
--   <a>launchProfileInitializationActiveDirectory_dnsIpAddresses</a> - The
--   DNS IP address.
--   
--   
--   <a>$sel:computerAttributes:LaunchProfileInitializationActiveDirectory'</a>,
--   <a>launchProfileInitializationActiveDirectory_computerAttributes</a> -
--   A collection of custom attributes for an Active Directory computer.
--   
--   
--   <a>$sel:organizationalUnitDistinguishedName:LaunchProfileInitializationActiveDirectory'</a>,
--   <a>launchProfileInitializationActiveDirectory_organizationalUnitDistinguishedName</a>
--   - The name for the organizational unit distinguished name.
--   
--   <a>$sel:directoryName:LaunchProfileInitializationActiveDirectory'</a>,
--   <a>launchProfileInitializationActiveDirectory_directoryName</a> - The
--   directory name.
newLaunchProfileInitializationActiveDirectory :: LaunchProfileInitializationActiveDirectory

-- | The directory ID of the Directory Service for Microsoft Active
--   Directory to access using this launch profile.
launchProfileInitializationActiveDirectory_directoryId :: Lens' LaunchProfileInitializationActiveDirectory (Maybe Text)

-- | The unique identifier for a studio component resource.
launchProfileInitializationActiveDirectory_studioComponentId :: Lens' LaunchProfileInitializationActiveDirectory (Maybe Text)

-- | The name for the studio component.
launchProfileInitializationActiveDirectory_studioComponentName :: Lens' LaunchProfileInitializationActiveDirectory (Maybe Text)

-- | The DNS IP address.
launchProfileInitializationActiveDirectory_dnsIpAddresses :: Lens' LaunchProfileInitializationActiveDirectory (Maybe [Text])

-- | A collection of custom attributes for an Active Directory computer.
launchProfileInitializationActiveDirectory_computerAttributes :: Lens' LaunchProfileInitializationActiveDirectory (Maybe [ActiveDirectoryComputerAttribute])

-- | The name for the organizational unit distinguished name.
launchProfileInitializationActiveDirectory_organizationalUnitDistinguishedName :: Lens' LaunchProfileInitializationActiveDirectory (Maybe Text)

-- | The directory name.
launchProfileInitializationActiveDirectory_directoryName :: Lens' LaunchProfileInitializationActiveDirectory (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Nimble.Types.LaunchProfileInitializationActiveDirectory.LaunchProfileInitializationActiveDirectory
instance GHC.Show.Show Network.AWS.Nimble.Types.LaunchProfileInitializationActiveDirectory.LaunchProfileInitializationActiveDirectory
instance GHC.Read.Read Network.AWS.Nimble.Types.LaunchProfileInitializationActiveDirectory.LaunchProfileInitializationActiveDirectory
instance GHC.Classes.Eq Network.AWS.Nimble.Types.LaunchProfileInitializationActiveDirectory.LaunchProfileInitializationActiveDirectory
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Nimble.Types.LaunchProfileInitializationActiveDirectory.LaunchProfileInitializationActiveDirectory
instance Data.Hashable.Class.Hashable Network.AWS.Nimble.Types.LaunchProfileInitializationActiveDirectory.LaunchProfileInitializationActiveDirectory
instance Control.DeepSeq.NFData Network.AWS.Nimble.Types.LaunchProfileInitializationActiveDirectory.LaunchProfileInitializationActiveDirectory


module Network.AWS.Nimble.Types.LaunchProfileInitializationScript

-- | <i>See:</i> <a>newLaunchProfileInitializationScript</a> smart
--   constructor.
data LaunchProfileInitializationScript
LaunchProfileInitializationScript' :: Maybe Text -> Maybe Text -> Maybe Text -> LaunchProfileInitializationScript

-- | The initialization script.
[$sel:script:LaunchProfileInitializationScript'] :: LaunchProfileInitializationScript -> Maybe Text

-- | The unique identifier for a studio component resource.
[$sel:studioComponentId:LaunchProfileInitializationScript'] :: LaunchProfileInitializationScript -> Maybe Text

-- | The name for the studio component.
[$sel:studioComponentName:LaunchProfileInitializationScript'] :: LaunchProfileInitializationScript -> Maybe Text

-- | Create a value of <a>LaunchProfileInitializationScript</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:script:LaunchProfileInitializationScript'</a>,
--   <a>launchProfileInitializationScript_script</a> - The initialization
--   script.
--   
--   <a>$sel:studioComponentId:LaunchProfileInitializationScript'</a>,
--   <a>launchProfileInitializationScript_studioComponentId</a> - The
--   unique identifier for a studio component resource.
--   
--   <a>$sel:studioComponentName:LaunchProfileInitializationScript'</a>,
--   <a>launchProfileInitializationScript_studioComponentName</a> - The
--   name for the studio component.
newLaunchProfileInitializationScript :: LaunchProfileInitializationScript

-- | The initialization script.
launchProfileInitializationScript_script :: Lens' LaunchProfileInitializationScript (Maybe Text)

-- | The unique identifier for a studio component resource.
launchProfileInitializationScript_studioComponentId :: Lens' LaunchProfileInitializationScript (Maybe Text)

-- | The name for the studio component.
launchProfileInitializationScript_studioComponentName :: Lens' LaunchProfileInitializationScript (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Nimble.Types.LaunchProfileInitializationScript.LaunchProfileInitializationScript
instance GHC.Show.Show Network.AWS.Nimble.Types.LaunchProfileInitializationScript.LaunchProfileInitializationScript
instance GHC.Read.Read Network.AWS.Nimble.Types.LaunchProfileInitializationScript.LaunchProfileInitializationScript
instance GHC.Classes.Eq Network.AWS.Nimble.Types.LaunchProfileInitializationScript.LaunchProfileInitializationScript
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Nimble.Types.LaunchProfileInitializationScript.LaunchProfileInitializationScript
instance Data.Hashable.Class.Hashable Network.AWS.Nimble.Types.LaunchProfileInitializationScript.LaunchProfileInitializationScript
instance Control.DeepSeq.NFData Network.AWS.Nimble.Types.LaunchProfileInitializationScript.LaunchProfileInitializationScript


module Network.AWS.Nimble.Types.LaunchProfilePersona

newtype LaunchProfilePersona
LaunchProfilePersona' :: Text -> LaunchProfilePersona
[fromLaunchProfilePersona] :: LaunchProfilePersona -> Text
pattern LaunchProfilePersona_USER :: LaunchProfilePersona
instance Network.AWS.Data.XML.ToXML Network.AWS.Nimble.Types.LaunchProfilePersona.LaunchProfilePersona
instance Network.AWS.Data.XML.FromXML Network.AWS.Nimble.Types.LaunchProfilePersona.LaunchProfilePersona
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Nimble.Types.LaunchProfilePersona.LaunchProfilePersona
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Nimble.Types.LaunchProfilePersona.LaunchProfilePersona
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Nimble.Types.LaunchProfilePersona.LaunchProfilePersona
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Nimble.Types.LaunchProfilePersona.LaunchProfilePersona
instance Network.AWS.Data.Query.ToQuery Network.AWS.Nimble.Types.LaunchProfilePersona.LaunchProfilePersona
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Nimble.Types.LaunchProfilePersona.LaunchProfilePersona
instance Network.AWS.Data.Log.ToLog Network.AWS.Nimble.Types.LaunchProfilePersona.LaunchProfilePersona
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Nimble.Types.LaunchProfilePersona.LaunchProfilePersona
instance Network.AWS.Data.Text.ToText Network.AWS.Nimble.Types.LaunchProfilePersona.LaunchProfilePersona
instance Network.AWS.Data.Text.FromText Network.AWS.Nimble.Types.LaunchProfilePersona.LaunchProfilePersona
instance Control.DeepSeq.NFData Network.AWS.Nimble.Types.LaunchProfilePersona.LaunchProfilePersona
instance Data.Hashable.Class.Hashable Network.AWS.Nimble.Types.LaunchProfilePersona.LaunchProfilePersona
instance GHC.Generics.Generic Network.AWS.Nimble.Types.LaunchProfilePersona.LaunchProfilePersona
instance GHC.Classes.Ord Network.AWS.Nimble.Types.LaunchProfilePersona.LaunchProfilePersona
instance GHC.Classes.Eq Network.AWS.Nimble.Types.LaunchProfilePersona.LaunchProfilePersona
instance GHC.Read.Read Network.AWS.Nimble.Types.LaunchProfilePersona.LaunchProfilePersona
instance GHC.Show.Show Network.AWS.Nimble.Types.LaunchProfilePersona.LaunchProfilePersona


module Network.AWS.Nimble.Types.LaunchProfileMembership

-- | <i>See:</i> <a>newLaunchProfileMembership</a> smart constructor.
data LaunchProfileMembership
LaunchProfileMembership' :: Maybe Text -> Maybe Text -> Maybe LaunchProfilePersona -> LaunchProfileMembership

-- | The ID of the identity store.
[$sel:identityStoreId:LaunchProfileMembership'] :: LaunchProfileMembership -> Maybe Text

-- | The principal ID.
[$sel:principalId:LaunchProfileMembership'] :: LaunchProfileMembership -> Maybe Text

-- | The persona.
[$sel:persona:LaunchProfileMembership'] :: LaunchProfileMembership -> Maybe LaunchProfilePersona

-- | Create a value of <a>LaunchProfileMembership</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:identityStoreId:LaunchProfileMembership'</a>,
--   <a>launchProfileMembership_identityStoreId</a> - The ID of the
--   identity store.
--   
--   <a>$sel:principalId:LaunchProfileMembership'</a>,
--   <a>launchProfileMembership_principalId</a> - The principal ID.
--   
--   <a>$sel:persona:LaunchProfileMembership'</a>,
--   <a>launchProfileMembership_persona</a> - The persona.
newLaunchProfileMembership :: LaunchProfileMembership

-- | The ID of the identity store.
launchProfileMembership_identityStoreId :: Lens' LaunchProfileMembership (Maybe Text)

-- | The principal ID.
launchProfileMembership_principalId :: Lens' LaunchProfileMembership (Maybe Text)

-- | The persona.
launchProfileMembership_persona :: Lens' LaunchProfileMembership (Maybe LaunchProfilePersona)
instance GHC.Generics.Generic Network.AWS.Nimble.Types.LaunchProfileMembership.LaunchProfileMembership
instance GHC.Show.Show Network.AWS.Nimble.Types.LaunchProfileMembership.LaunchProfileMembership
instance GHC.Read.Read Network.AWS.Nimble.Types.LaunchProfileMembership.LaunchProfileMembership
instance GHC.Classes.Eq Network.AWS.Nimble.Types.LaunchProfileMembership.LaunchProfileMembership
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Nimble.Types.LaunchProfileMembership.LaunchProfileMembership
instance Data.Hashable.Class.Hashable Network.AWS.Nimble.Types.LaunchProfileMembership.LaunchProfileMembership
instance Control.DeepSeq.NFData Network.AWS.Nimble.Types.LaunchProfileMembership.LaunchProfileMembership


module Network.AWS.Nimble.Types.LaunchProfilePlatform

newtype LaunchProfilePlatform
LaunchProfilePlatform' :: Text -> LaunchProfilePlatform
[fromLaunchProfilePlatform] :: LaunchProfilePlatform -> Text
pattern LaunchProfilePlatform_LINUX :: LaunchProfilePlatform
pattern LaunchProfilePlatform_WINDOWS :: LaunchProfilePlatform
instance Network.AWS.Data.XML.ToXML Network.AWS.Nimble.Types.LaunchProfilePlatform.LaunchProfilePlatform
instance Network.AWS.Data.XML.FromXML Network.AWS.Nimble.Types.LaunchProfilePlatform.LaunchProfilePlatform
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Nimble.Types.LaunchProfilePlatform.LaunchProfilePlatform
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Nimble.Types.LaunchProfilePlatform.LaunchProfilePlatform
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Nimble.Types.LaunchProfilePlatform.LaunchProfilePlatform
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Nimble.Types.LaunchProfilePlatform.LaunchProfilePlatform
instance Network.AWS.Data.Query.ToQuery Network.AWS.Nimble.Types.LaunchProfilePlatform.LaunchProfilePlatform
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Nimble.Types.LaunchProfilePlatform.LaunchProfilePlatform
instance Network.AWS.Data.Log.ToLog Network.AWS.Nimble.Types.LaunchProfilePlatform.LaunchProfilePlatform
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Nimble.Types.LaunchProfilePlatform.LaunchProfilePlatform
instance Network.AWS.Data.Text.ToText Network.AWS.Nimble.Types.LaunchProfilePlatform.LaunchProfilePlatform
instance Network.AWS.Data.Text.FromText Network.AWS.Nimble.Types.LaunchProfilePlatform.LaunchProfilePlatform
instance Control.DeepSeq.NFData Network.AWS.Nimble.Types.LaunchProfilePlatform.LaunchProfilePlatform
instance Data.Hashable.Class.Hashable Network.AWS.Nimble.Types.LaunchProfilePlatform.LaunchProfilePlatform
instance GHC.Generics.Generic Network.AWS.Nimble.Types.LaunchProfilePlatform.LaunchProfilePlatform
instance GHC.Classes.Ord Network.AWS.Nimble.Types.LaunchProfilePlatform.LaunchProfilePlatform
instance GHC.Classes.Eq Network.AWS.Nimble.Types.LaunchProfilePlatform.LaunchProfilePlatform
instance GHC.Read.Read Network.AWS.Nimble.Types.LaunchProfilePlatform.LaunchProfilePlatform
instance GHC.Show.Show Network.AWS.Nimble.Types.LaunchProfilePlatform.LaunchProfilePlatform


module Network.AWS.Nimble.Types.LaunchProfileInitialization

-- | <i>See:</i> <a>newLaunchProfileInitialization</a> smart constructor.
data LaunchProfileInitialization
LaunchProfileInitialization' :: Maybe LaunchProfilePlatform -> Maybe LaunchProfileInitializationActiveDirectory -> Maybe Text -> Maybe Text -> Maybe (NonEmpty Text) -> Maybe Text -> Maybe Text -> Maybe [LaunchProfileInitializationScript] -> Maybe [LaunchProfileInitializationScript] -> LaunchProfileInitialization

-- | The platform of the launch platform, either WINDOWS or LINUX.
[$sel:platform:LaunchProfileInitialization'] :: LaunchProfileInitialization -> Maybe LaunchProfilePlatform

-- | A LaunchProfileInitializationActiveDirectory resource.
[$sel:activeDirectory:LaunchProfileInitialization'] :: LaunchProfileInitialization -> Maybe LaunchProfileInitializationActiveDirectory

-- | The launch purpose.
[$sel:launchPurpose:LaunchProfileInitialization'] :: LaunchProfileInitialization -> Maybe Text

-- | The launch profile ID.
[$sel:launchProfileId:LaunchProfileInitialization'] :: LaunchProfileInitialization -> Maybe Text

-- | The EC2 security groups that control access to the studio component.
[$sel:ec2SecurityGroupIds:LaunchProfileInitialization'] :: LaunchProfileInitialization -> Maybe (NonEmpty Text)

-- | The name for the launch profile.
[$sel:name:LaunchProfileInitialization'] :: LaunchProfileInitialization -> Maybe Text

-- | The version number of the protocol that is used by the launch profile.
--   The only valid version is "2021-03-31".
[$sel:launchProfileProtocolVersion:LaunchProfileInitialization'] :: LaunchProfileInitialization -> Maybe Text

-- | The user initializtion scripts.
[$sel:userInitializationScripts:LaunchProfileInitialization'] :: LaunchProfileInitialization -> Maybe [LaunchProfileInitializationScript]

-- | The system initializtion scripts.
[$sel:systemInitializationScripts:LaunchProfileInitialization'] :: LaunchProfileInitialization -> Maybe [LaunchProfileInitializationScript]

-- | Create a value of <a>LaunchProfileInitialization</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:platform:LaunchProfileInitialization'</a>,
--   <a>launchProfileInitialization_platform</a> - The platform of the
--   launch platform, either WINDOWS or LINUX.
--   
--   <a>$sel:activeDirectory:LaunchProfileInitialization'</a>,
--   <a>launchProfileInitialization_activeDirectory</a> - A
--   LaunchProfileInitializationActiveDirectory resource.
--   
--   <a>$sel:launchPurpose:LaunchProfileInitialization'</a>,
--   <a>launchProfileInitialization_launchPurpose</a> - The launch purpose.
--   
--   <a>$sel:launchProfileId:LaunchProfileInitialization'</a>,
--   <a>launchProfileInitialization_launchProfileId</a> - The launch
--   profile ID.
--   
--   <a>$sel:ec2SecurityGroupIds:LaunchProfileInitialization'</a>,
--   <a>launchProfileInitialization_ec2SecurityGroupIds</a> - The EC2
--   security groups that control access to the studio component.
--   
--   <a>$sel:name:LaunchProfileInitialization'</a>,
--   <a>launchProfileInitialization_name</a> - The name for the launch
--   profile.
--   
--   <a>$sel:launchProfileProtocolVersion:LaunchProfileInitialization'</a>,
--   <a>launchProfileInitialization_launchProfileProtocolVersion</a> - The
--   version number of the protocol that is used by the launch profile. The
--   only valid version is "2021-03-31".
--   
--   <a>$sel:userInitializationScripts:LaunchProfileInitialization'</a>,
--   <a>launchProfileInitialization_userInitializationScripts</a> - The
--   user initializtion scripts.
--   
--   <a>$sel:systemInitializationScripts:LaunchProfileInitialization'</a>,
--   <a>launchProfileInitialization_systemInitializationScripts</a> - The
--   system initializtion scripts.
newLaunchProfileInitialization :: LaunchProfileInitialization

-- | The platform of the launch platform, either WINDOWS or LINUX.
launchProfileInitialization_platform :: Lens' LaunchProfileInitialization (Maybe LaunchProfilePlatform)

-- | A LaunchProfileInitializationActiveDirectory resource.
launchProfileInitialization_activeDirectory :: Lens' LaunchProfileInitialization (Maybe LaunchProfileInitializationActiveDirectory)

-- | The launch purpose.
launchProfileInitialization_launchPurpose :: Lens' LaunchProfileInitialization (Maybe Text)

-- | The launch profile ID.
launchProfileInitialization_launchProfileId :: Lens' LaunchProfileInitialization (Maybe Text)

-- | The EC2 security groups that control access to the studio component.
launchProfileInitialization_ec2SecurityGroupIds :: Lens' LaunchProfileInitialization (Maybe (NonEmpty Text))

-- | The name for the launch profile.
launchProfileInitialization_name :: Lens' LaunchProfileInitialization (Maybe Text)

-- | The version number of the protocol that is used by the launch profile.
--   The only valid version is "2021-03-31".
launchProfileInitialization_launchProfileProtocolVersion :: Lens' LaunchProfileInitialization (Maybe Text)

-- | The user initializtion scripts.
launchProfileInitialization_userInitializationScripts :: Lens' LaunchProfileInitialization (Maybe [LaunchProfileInitializationScript])

-- | The system initializtion scripts.
launchProfileInitialization_systemInitializationScripts :: Lens' LaunchProfileInitialization (Maybe [LaunchProfileInitializationScript])
instance GHC.Generics.Generic Network.AWS.Nimble.Types.LaunchProfileInitialization.LaunchProfileInitialization
instance GHC.Show.Show Network.AWS.Nimble.Types.LaunchProfileInitialization.LaunchProfileInitialization
instance GHC.Read.Read Network.AWS.Nimble.Types.LaunchProfileInitialization.LaunchProfileInitialization
instance GHC.Classes.Eq Network.AWS.Nimble.Types.LaunchProfileInitialization.LaunchProfileInitialization
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Nimble.Types.LaunchProfileInitialization.LaunchProfileInitialization
instance Data.Hashable.Class.Hashable Network.AWS.Nimble.Types.LaunchProfileInitialization.LaunchProfileInitialization
instance Control.DeepSeq.NFData Network.AWS.Nimble.Types.LaunchProfileInitialization.LaunchProfileInitialization


module Network.AWS.Nimble.Types.LaunchProfileState

newtype LaunchProfileState
LaunchProfileState' :: Text -> LaunchProfileState
[fromLaunchProfileState] :: LaunchProfileState -> Text
pattern LaunchProfileState_CREATE_FAILED :: LaunchProfileState
pattern LaunchProfileState_CREATE_IN_PROGRESS :: LaunchProfileState
pattern LaunchProfileState_DELETED :: LaunchProfileState
pattern LaunchProfileState_DELETE_FAILED :: LaunchProfileState
pattern LaunchProfileState_DELETE_IN_PROGRESS :: LaunchProfileState
pattern LaunchProfileState_READY :: LaunchProfileState
pattern LaunchProfileState_UPDATE_FAILED :: LaunchProfileState
pattern LaunchProfileState_UPDATE_IN_PROGRESS :: LaunchProfileState
instance Network.AWS.Data.XML.ToXML Network.AWS.Nimble.Types.LaunchProfileState.LaunchProfileState
instance Network.AWS.Data.XML.FromXML Network.AWS.Nimble.Types.LaunchProfileState.LaunchProfileState
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Nimble.Types.LaunchProfileState.LaunchProfileState
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Nimble.Types.LaunchProfileState.LaunchProfileState
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Nimble.Types.LaunchProfileState.LaunchProfileState
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Nimble.Types.LaunchProfileState.LaunchProfileState
instance Network.AWS.Data.Query.ToQuery Network.AWS.Nimble.Types.LaunchProfileState.LaunchProfileState
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Nimble.Types.LaunchProfileState.LaunchProfileState
instance Network.AWS.Data.Log.ToLog Network.AWS.Nimble.Types.LaunchProfileState.LaunchProfileState
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Nimble.Types.LaunchProfileState.LaunchProfileState
instance Network.AWS.Data.Text.ToText Network.AWS.Nimble.Types.LaunchProfileState.LaunchProfileState
instance Network.AWS.Data.Text.FromText Network.AWS.Nimble.Types.LaunchProfileState.LaunchProfileState
instance Control.DeepSeq.NFData Network.AWS.Nimble.Types.LaunchProfileState.LaunchProfileState
instance Data.Hashable.Class.Hashable Network.AWS.Nimble.Types.LaunchProfileState.LaunchProfileState
instance GHC.Generics.Generic Network.AWS.Nimble.Types.LaunchProfileState.LaunchProfileState
instance GHC.Classes.Ord Network.AWS.Nimble.Types.LaunchProfileState.LaunchProfileState
instance GHC.Classes.Eq Network.AWS.Nimble.Types.LaunchProfileState.LaunchProfileState
instance GHC.Read.Read Network.AWS.Nimble.Types.LaunchProfileState.LaunchProfileState
instance GHC.Show.Show Network.AWS.Nimble.Types.LaunchProfileState.LaunchProfileState


module Network.AWS.Nimble.Types.LaunchProfileStatusCode

newtype LaunchProfileStatusCode
LaunchProfileStatusCode' :: Text -> LaunchProfileStatusCode
[fromLaunchProfileStatusCode] :: LaunchProfileStatusCode -> Text
pattern LaunchProfileStatusCode_ENCRYPTION_KEY_ACCESS_DENIED :: LaunchProfileStatusCode
pattern LaunchProfileStatusCode_ENCRYPTION_KEY_NOT_FOUND :: LaunchProfileStatusCode
pattern LaunchProfileStatusCode_INTERNAL_ERROR :: LaunchProfileStatusCode
pattern LaunchProfileStatusCode_INVALID_SUBNETS_PROVIDED :: LaunchProfileStatusCode
pattern LaunchProfileStatusCode_LAUNCH_PROFILE_CREATED :: LaunchProfileStatusCode
pattern LaunchProfileStatusCode_LAUNCH_PROFILE_CREATE_IN_PROGRESS :: LaunchProfileStatusCode
pattern LaunchProfileStatusCode_LAUNCH_PROFILE_DELETED :: LaunchProfileStatusCode
pattern LaunchProfileStatusCode_LAUNCH_PROFILE_DELETE_IN_PROGRESS :: LaunchProfileStatusCode
pattern LaunchProfileStatusCode_LAUNCH_PROFILE_UPDATED :: LaunchProfileStatusCode
pattern LaunchProfileStatusCode_LAUNCH_PROFILE_UPDATE_IN_PROGRESS :: LaunchProfileStatusCode
pattern LaunchProfileStatusCode_LAUNCH_PROFILE_WITH_STREAM_SESSIONS_NOT_DELETED :: LaunchProfileStatusCode
pattern LaunchProfileStatusCode_STREAMING_IMAGE_NOT_FOUND :: LaunchProfileStatusCode
pattern LaunchProfileStatusCode_STREAMING_IMAGE_NOT_READY :: LaunchProfileStatusCode
instance Network.AWS.Data.XML.ToXML Network.AWS.Nimble.Types.LaunchProfileStatusCode.LaunchProfileStatusCode
instance Network.AWS.Data.XML.FromXML Network.AWS.Nimble.Types.LaunchProfileStatusCode.LaunchProfileStatusCode
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Nimble.Types.LaunchProfileStatusCode.LaunchProfileStatusCode
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Nimble.Types.LaunchProfileStatusCode.LaunchProfileStatusCode
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Nimble.Types.LaunchProfileStatusCode.LaunchProfileStatusCode
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Nimble.Types.LaunchProfileStatusCode.LaunchProfileStatusCode
instance Network.AWS.Data.Query.ToQuery Network.AWS.Nimble.Types.LaunchProfileStatusCode.LaunchProfileStatusCode
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Nimble.Types.LaunchProfileStatusCode.LaunchProfileStatusCode
instance Network.AWS.Data.Log.ToLog Network.AWS.Nimble.Types.LaunchProfileStatusCode.LaunchProfileStatusCode
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Nimble.Types.LaunchProfileStatusCode.LaunchProfileStatusCode
instance Network.AWS.Data.Text.ToText Network.AWS.Nimble.Types.LaunchProfileStatusCode.LaunchProfileStatusCode
instance Network.AWS.Data.Text.FromText Network.AWS.Nimble.Types.LaunchProfileStatusCode.LaunchProfileStatusCode
instance Control.DeepSeq.NFData Network.AWS.Nimble.Types.LaunchProfileStatusCode.LaunchProfileStatusCode
instance Data.Hashable.Class.Hashable Network.AWS.Nimble.Types.LaunchProfileStatusCode.LaunchProfileStatusCode
instance GHC.Generics.Generic Network.AWS.Nimble.Types.LaunchProfileStatusCode.LaunchProfileStatusCode
instance GHC.Classes.Ord Network.AWS.Nimble.Types.LaunchProfileStatusCode.LaunchProfileStatusCode
instance GHC.Classes.Eq Network.AWS.Nimble.Types.LaunchProfileStatusCode.LaunchProfileStatusCode
instance GHC.Read.Read Network.AWS.Nimble.Types.LaunchProfileStatusCode.LaunchProfileStatusCode
instance GHC.Show.Show Network.AWS.Nimble.Types.LaunchProfileStatusCode.LaunchProfileStatusCode


module Network.AWS.Nimble.Types.LicenseServiceConfiguration

-- | The configuration for a license service that is associated with a
--   studio resource.
--   
--   <i>See:</i> <a>newLicenseServiceConfiguration</a> smart constructor.
data LicenseServiceConfiguration
LicenseServiceConfiguration' :: Maybe Text -> LicenseServiceConfiguration

-- | The endpoint of the license service that is accessed by the studio
--   component resource.
[$sel:endpoint:LicenseServiceConfiguration'] :: LicenseServiceConfiguration -> Maybe Text

-- | Create a value of <a>LicenseServiceConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:endpoint:LicenseServiceConfiguration'</a>,
--   <a>licenseServiceConfiguration_endpoint</a> - The endpoint of the
--   license service that is accessed by the studio component resource.
newLicenseServiceConfiguration :: LicenseServiceConfiguration

-- | The endpoint of the license service that is accessed by the studio
--   component resource.
licenseServiceConfiguration_endpoint :: Lens' LicenseServiceConfiguration (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Nimble.Types.LicenseServiceConfiguration.LicenseServiceConfiguration
instance GHC.Show.Show Network.AWS.Nimble.Types.LicenseServiceConfiguration.LicenseServiceConfiguration
instance GHC.Read.Read Network.AWS.Nimble.Types.LicenseServiceConfiguration.LicenseServiceConfiguration
instance GHC.Classes.Eq Network.AWS.Nimble.Types.LicenseServiceConfiguration.LicenseServiceConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Nimble.Types.LicenseServiceConfiguration.LicenseServiceConfiguration
instance Data.Hashable.Class.Hashable Network.AWS.Nimble.Types.LicenseServiceConfiguration.LicenseServiceConfiguration
instance Control.DeepSeq.NFData Network.AWS.Nimble.Types.LicenseServiceConfiguration.LicenseServiceConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Nimble.Types.LicenseServiceConfiguration.LicenseServiceConfiguration


module Network.AWS.Nimble.Types.NewLaunchProfileMember

-- | <i>See:</i> <a>newNewLaunchProfileMember</a> smart constructor.
data NewLaunchProfileMember
NewLaunchProfileMember' :: LaunchProfilePersona -> Text -> NewLaunchProfileMember

-- | The persona.
[$sel:persona:NewLaunchProfileMember'] :: NewLaunchProfileMember -> LaunchProfilePersona

-- | The principal ID.
[$sel:principalId:NewLaunchProfileMember'] :: NewLaunchProfileMember -> Text

-- | Create a value of <a>NewLaunchProfileMember</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:persona:NewLaunchProfileMember'</a>,
--   <a>newLaunchProfileMember_persona</a> - The persona.
--   
--   <a>$sel:principalId:NewLaunchProfileMember'</a>,
--   <a>newLaunchProfileMember_principalId</a> - The principal ID.
newNewLaunchProfileMember :: LaunchProfilePersona -> Text -> NewLaunchProfileMember

-- | The persona.
newLaunchProfileMember_persona :: Lens' NewLaunchProfileMember LaunchProfilePersona

-- | The principal ID.
newLaunchProfileMember_principalId :: Lens' NewLaunchProfileMember Text
instance GHC.Generics.Generic Network.AWS.Nimble.Types.NewLaunchProfileMember.NewLaunchProfileMember
instance GHC.Show.Show Network.AWS.Nimble.Types.NewLaunchProfileMember.NewLaunchProfileMember
instance GHC.Read.Read Network.AWS.Nimble.Types.NewLaunchProfileMember.NewLaunchProfileMember
instance GHC.Classes.Eq Network.AWS.Nimble.Types.NewLaunchProfileMember.NewLaunchProfileMember
instance Data.Hashable.Class.Hashable Network.AWS.Nimble.Types.NewLaunchProfileMember.NewLaunchProfileMember
instance Control.DeepSeq.NFData Network.AWS.Nimble.Types.NewLaunchProfileMember.NewLaunchProfileMember
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Nimble.Types.NewLaunchProfileMember.NewLaunchProfileMember


module Network.AWS.Nimble.Types.ScriptParameterKeyValue

-- | A parameter for a studio component script, in the form of a key:value
--   pair.
--   
--   <i>See:</i> <a>newScriptParameterKeyValue</a> smart constructor.
data ScriptParameterKeyValue
ScriptParameterKeyValue' :: Maybe Text -> Maybe Text -> ScriptParameterKeyValue

-- | A script parameter value.
[$sel:value:ScriptParameterKeyValue'] :: ScriptParameterKeyValue -> Maybe Text

-- | A script parameter key.
[$sel:key:ScriptParameterKeyValue'] :: ScriptParameterKeyValue -> Maybe Text

-- | Create a value of <a>ScriptParameterKeyValue</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:value:ScriptParameterKeyValue'</a>,
--   <a>scriptParameterKeyValue_value</a> - A script parameter value.
--   
--   <a>$sel:key:ScriptParameterKeyValue'</a>,
--   <a>scriptParameterKeyValue_key</a> - A script parameter key.
newScriptParameterKeyValue :: ScriptParameterKeyValue

-- | A script parameter value.
scriptParameterKeyValue_value :: Lens' ScriptParameterKeyValue (Maybe Text)

-- | A script parameter key.
scriptParameterKeyValue_key :: Lens' ScriptParameterKeyValue (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Nimble.Types.ScriptParameterKeyValue.ScriptParameterKeyValue
instance GHC.Show.Show Network.AWS.Nimble.Types.ScriptParameterKeyValue.ScriptParameterKeyValue
instance GHC.Read.Read Network.AWS.Nimble.Types.ScriptParameterKeyValue.ScriptParameterKeyValue
instance GHC.Classes.Eq Network.AWS.Nimble.Types.ScriptParameterKeyValue.ScriptParameterKeyValue
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Nimble.Types.ScriptParameterKeyValue.ScriptParameterKeyValue
instance Data.Hashable.Class.Hashable Network.AWS.Nimble.Types.ScriptParameterKeyValue.ScriptParameterKeyValue
instance Control.DeepSeq.NFData Network.AWS.Nimble.Types.ScriptParameterKeyValue.ScriptParameterKeyValue
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Nimble.Types.ScriptParameterKeyValue.ScriptParameterKeyValue


module Network.AWS.Nimble.Types.SharedFileSystemConfiguration

-- | The configuration for a shared file storage system that is associated
--   with a studio resource.
--   
--   <i>See:</i> <a>newSharedFileSystemConfiguration</a> smart constructor.
data SharedFileSystemConfiguration
SharedFileSystemConfiguration' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> SharedFileSystemConfiguration

-- | The unique identifier for a file system.
[$sel:fileSystemId:SharedFileSystemConfiguration'] :: SharedFileSystemConfiguration -> Maybe Text

-- | The mount location for a shared file system on a Windows virtual
--   workstation.
[$sel:windowsMountDrive:SharedFileSystemConfiguration'] :: SharedFileSystemConfiguration -> Maybe Text

-- | The mount location for a shared file system on a Linux virtual
--   workstation.
[$sel:linuxMountPoint:SharedFileSystemConfiguration'] :: SharedFileSystemConfiguration -> Maybe Text

-- | The name of the file share.
[$sel:shareName:SharedFileSystemConfiguration'] :: SharedFileSystemConfiguration -> Maybe Text

-- | The endpoint of the shared file system that is accessed by the studio
--   component resource.
[$sel:endpoint:SharedFileSystemConfiguration'] :: SharedFileSystemConfiguration -> Maybe Text

-- | Create a value of <a>SharedFileSystemConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fileSystemId:SharedFileSystemConfiguration'</a>,
--   <a>sharedFileSystemConfiguration_fileSystemId</a> - The unique
--   identifier for a file system.
--   
--   <a>$sel:windowsMountDrive:SharedFileSystemConfiguration'</a>,
--   <a>sharedFileSystemConfiguration_windowsMountDrive</a> - The mount
--   location for a shared file system on a Windows virtual workstation.
--   
--   <a>$sel:linuxMountPoint:SharedFileSystemConfiguration'</a>,
--   <a>sharedFileSystemConfiguration_linuxMountPoint</a> - The mount
--   location for a shared file system on a Linux virtual workstation.
--   
--   <a>$sel:shareName:SharedFileSystemConfiguration'</a>,
--   <a>sharedFileSystemConfiguration_shareName</a> - The name of the file
--   share.
--   
--   <a>$sel:endpoint:SharedFileSystemConfiguration'</a>,
--   <a>sharedFileSystemConfiguration_endpoint</a> - The endpoint of the
--   shared file system that is accessed by the studio component resource.
newSharedFileSystemConfiguration :: SharedFileSystemConfiguration

-- | The unique identifier for a file system.
sharedFileSystemConfiguration_fileSystemId :: Lens' SharedFileSystemConfiguration (Maybe Text)

-- | The mount location for a shared file system on a Windows virtual
--   workstation.
sharedFileSystemConfiguration_windowsMountDrive :: Lens' SharedFileSystemConfiguration (Maybe Text)

-- | The mount location for a shared file system on a Linux virtual
--   workstation.
sharedFileSystemConfiguration_linuxMountPoint :: Lens' SharedFileSystemConfiguration (Maybe Text)

-- | The name of the file share.
sharedFileSystemConfiguration_shareName :: Lens' SharedFileSystemConfiguration (Maybe Text)

-- | The endpoint of the shared file system that is accessed by the studio
--   component resource.
sharedFileSystemConfiguration_endpoint :: Lens' SharedFileSystemConfiguration (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Nimble.Types.SharedFileSystemConfiguration.SharedFileSystemConfiguration
instance GHC.Show.Show Network.AWS.Nimble.Types.SharedFileSystemConfiguration.SharedFileSystemConfiguration
instance GHC.Read.Read Network.AWS.Nimble.Types.SharedFileSystemConfiguration.SharedFileSystemConfiguration
instance GHC.Classes.Eq Network.AWS.Nimble.Types.SharedFileSystemConfiguration.SharedFileSystemConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Nimble.Types.SharedFileSystemConfiguration.SharedFileSystemConfiguration
instance Data.Hashable.Class.Hashable Network.AWS.Nimble.Types.SharedFileSystemConfiguration.SharedFileSystemConfiguration
instance Control.DeepSeq.NFData Network.AWS.Nimble.Types.SharedFileSystemConfiguration.SharedFileSystemConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Nimble.Types.SharedFileSystemConfiguration.SharedFileSystemConfiguration


module Network.AWS.Nimble.Types.StreamingClipboardMode

newtype StreamingClipboardMode
StreamingClipboardMode' :: Text -> StreamingClipboardMode
[fromStreamingClipboardMode] :: StreamingClipboardMode -> Text
pattern StreamingClipboardMode_DISABLED :: StreamingClipboardMode
pattern StreamingClipboardMode_ENABLED :: StreamingClipboardMode
instance Network.AWS.Data.XML.ToXML Network.AWS.Nimble.Types.StreamingClipboardMode.StreamingClipboardMode
instance Network.AWS.Data.XML.FromXML Network.AWS.Nimble.Types.StreamingClipboardMode.StreamingClipboardMode
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Nimble.Types.StreamingClipboardMode.StreamingClipboardMode
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Nimble.Types.StreamingClipboardMode.StreamingClipboardMode
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Nimble.Types.StreamingClipboardMode.StreamingClipboardMode
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Nimble.Types.StreamingClipboardMode.StreamingClipboardMode
instance Network.AWS.Data.Query.ToQuery Network.AWS.Nimble.Types.StreamingClipboardMode.StreamingClipboardMode
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Nimble.Types.StreamingClipboardMode.StreamingClipboardMode
instance Network.AWS.Data.Log.ToLog Network.AWS.Nimble.Types.StreamingClipboardMode.StreamingClipboardMode
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Nimble.Types.StreamingClipboardMode.StreamingClipboardMode
instance Network.AWS.Data.Text.ToText Network.AWS.Nimble.Types.StreamingClipboardMode.StreamingClipboardMode
instance Network.AWS.Data.Text.FromText Network.AWS.Nimble.Types.StreamingClipboardMode.StreamingClipboardMode
instance Control.DeepSeq.NFData Network.AWS.Nimble.Types.StreamingClipboardMode.StreamingClipboardMode
instance Data.Hashable.Class.Hashable Network.AWS.Nimble.Types.StreamingClipboardMode.StreamingClipboardMode
instance GHC.Generics.Generic Network.AWS.Nimble.Types.StreamingClipboardMode.StreamingClipboardMode
instance GHC.Classes.Ord Network.AWS.Nimble.Types.StreamingClipboardMode.StreamingClipboardMode
instance GHC.Classes.Eq Network.AWS.Nimble.Types.StreamingClipboardMode.StreamingClipboardMode
instance GHC.Read.Read Network.AWS.Nimble.Types.StreamingClipboardMode.StreamingClipboardMode
instance GHC.Show.Show Network.AWS.Nimble.Types.StreamingClipboardMode.StreamingClipboardMode


module Network.AWS.Nimble.Types.StreamingImageEncryptionConfigurationKeyType

newtype StreamingImageEncryptionConfigurationKeyType
StreamingImageEncryptionConfigurationKeyType' :: Text -> StreamingImageEncryptionConfigurationKeyType
[fromStreamingImageEncryptionConfigurationKeyType] :: StreamingImageEncryptionConfigurationKeyType -> Text
pattern StreamingImageEncryptionConfigurationKeyType_CUSTOMER_MANAGED_KEY :: StreamingImageEncryptionConfigurationKeyType
instance Network.AWS.Data.XML.ToXML Network.AWS.Nimble.Types.StreamingImageEncryptionConfigurationKeyType.StreamingImageEncryptionConfigurationKeyType
instance Network.AWS.Data.XML.FromXML Network.AWS.Nimble.Types.StreamingImageEncryptionConfigurationKeyType.StreamingImageEncryptionConfigurationKeyType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Nimble.Types.StreamingImageEncryptionConfigurationKeyType.StreamingImageEncryptionConfigurationKeyType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Nimble.Types.StreamingImageEncryptionConfigurationKeyType.StreamingImageEncryptionConfigurationKeyType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Nimble.Types.StreamingImageEncryptionConfigurationKeyType.StreamingImageEncryptionConfigurationKeyType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Nimble.Types.StreamingImageEncryptionConfigurationKeyType.StreamingImageEncryptionConfigurationKeyType
instance Network.AWS.Data.Query.ToQuery Network.AWS.Nimble.Types.StreamingImageEncryptionConfigurationKeyType.StreamingImageEncryptionConfigurationKeyType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Nimble.Types.StreamingImageEncryptionConfigurationKeyType.StreamingImageEncryptionConfigurationKeyType
instance Network.AWS.Data.Log.ToLog Network.AWS.Nimble.Types.StreamingImageEncryptionConfigurationKeyType.StreamingImageEncryptionConfigurationKeyType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Nimble.Types.StreamingImageEncryptionConfigurationKeyType.StreamingImageEncryptionConfigurationKeyType
instance Network.AWS.Data.Text.ToText Network.AWS.Nimble.Types.StreamingImageEncryptionConfigurationKeyType.StreamingImageEncryptionConfigurationKeyType
instance Network.AWS.Data.Text.FromText Network.AWS.Nimble.Types.StreamingImageEncryptionConfigurationKeyType.StreamingImageEncryptionConfigurationKeyType
instance Control.DeepSeq.NFData Network.AWS.Nimble.Types.StreamingImageEncryptionConfigurationKeyType.StreamingImageEncryptionConfigurationKeyType
instance Data.Hashable.Class.Hashable Network.AWS.Nimble.Types.StreamingImageEncryptionConfigurationKeyType.StreamingImageEncryptionConfigurationKeyType
instance GHC.Generics.Generic Network.AWS.Nimble.Types.StreamingImageEncryptionConfigurationKeyType.StreamingImageEncryptionConfigurationKeyType
instance GHC.Classes.Ord Network.AWS.Nimble.Types.StreamingImageEncryptionConfigurationKeyType.StreamingImageEncryptionConfigurationKeyType
instance GHC.Classes.Eq Network.AWS.Nimble.Types.StreamingImageEncryptionConfigurationKeyType.StreamingImageEncryptionConfigurationKeyType
instance GHC.Read.Read Network.AWS.Nimble.Types.StreamingImageEncryptionConfigurationKeyType.StreamingImageEncryptionConfigurationKeyType
instance GHC.Show.Show Network.AWS.Nimble.Types.StreamingImageEncryptionConfigurationKeyType.StreamingImageEncryptionConfigurationKeyType


module Network.AWS.Nimble.Types.StreamingImageEncryptionConfiguration

-- | <i>See:</i> <a>newStreamingImageEncryptionConfiguration</a> smart
--   constructor.
data StreamingImageEncryptionConfiguration
StreamingImageEncryptionConfiguration' :: Maybe Text -> StreamingImageEncryptionConfigurationKeyType -> StreamingImageEncryptionConfiguration

-- | The ARN for a KMS key that is used to encrypt studio data.
[$sel:keyArn:StreamingImageEncryptionConfiguration'] :: StreamingImageEncryptionConfiguration -> Maybe Text

-- | The type of KMS key that is used to encrypt studio data.
[$sel:keyType:StreamingImageEncryptionConfiguration'] :: StreamingImageEncryptionConfiguration -> StreamingImageEncryptionConfigurationKeyType

-- | Create a value of <a>StreamingImageEncryptionConfiguration</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:keyArn:StreamingImageEncryptionConfiguration'</a>,
--   <a>streamingImageEncryptionConfiguration_keyArn</a> - The ARN for a
--   KMS key that is used to encrypt studio data.
--   
--   <a>$sel:keyType:StreamingImageEncryptionConfiguration'</a>,
--   <a>streamingImageEncryptionConfiguration_keyType</a> - The type of KMS
--   key that is used to encrypt studio data.
newStreamingImageEncryptionConfiguration :: StreamingImageEncryptionConfigurationKeyType -> StreamingImageEncryptionConfiguration

-- | The ARN for a KMS key that is used to encrypt studio data.
streamingImageEncryptionConfiguration_keyArn :: Lens' StreamingImageEncryptionConfiguration (Maybe Text)

-- | The type of KMS key that is used to encrypt studio data.
streamingImageEncryptionConfiguration_keyType :: Lens' StreamingImageEncryptionConfiguration StreamingImageEncryptionConfigurationKeyType
instance GHC.Generics.Generic Network.AWS.Nimble.Types.StreamingImageEncryptionConfiguration.StreamingImageEncryptionConfiguration
instance GHC.Show.Show Network.AWS.Nimble.Types.StreamingImageEncryptionConfiguration.StreamingImageEncryptionConfiguration
instance GHC.Read.Read Network.AWS.Nimble.Types.StreamingImageEncryptionConfiguration.StreamingImageEncryptionConfiguration
instance GHC.Classes.Eq Network.AWS.Nimble.Types.StreamingImageEncryptionConfiguration.StreamingImageEncryptionConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Nimble.Types.StreamingImageEncryptionConfiguration.StreamingImageEncryptionConfiguration
instance Data.Hashable.Class.Hashable Network.AWS.Nimble.Types.StreamingImageEncryptionConfiguration.StreamingImageEncryptionConfiguration
instance Control.DeepSeq.NFData Network.AWS.Nimble.Types.StreamingImageEncryptionConfiguration.StreamingImageEncryptionConfiguration


module Network.AWS.Nimble.Types.StreamingImageState

newtype StreamingImageState
StreamingImageState' :: Text -> StreamingImageState
[fromStreamingImageState] :: StreamingImageState -> Text
pattern StreamingImageState_CREATE_FAILED :: StreamingImageState
pattern StreamingImageState_CREATE_IN_PROGRESS :: StreamingImageState
pattern StreamingImageState_DELETED :: StreamingImageState
pattern StreamingImageState_DELETE_FAILED :: StreamingImageState
pattern StreamingImageState_DELETE_IN_PROGRESS :: StreamingImageState
pattern StreamingImageState_READY :: StreamingImageState
pattern StreamingImageState_UPDATE_FAILED :: StreamingImageState
pattern StreamingImageState_UPDATE_IN_PROGRESS :: StreamingImageState
instance Network.AWS.Data.XML.ToXML Network.AWS.Nimble.Types.StreamingImageState.StreamingImageState
instance Network.AWS.Data.XML.FromXML Network.AWS.Nimble.Types.StreamingImageState.StreamingImageState
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Nimble.Types.StreamingImageState.StreamingImageState
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Nimble.Types.StreamingImageState.StreamingImageState
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Nimble.Types.StreamingImageState.StreamingImageState
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Nimble.Types.StreamingImageState.StreamingImageState
instance Network.AWS.Data.Query.ToQuery Network.AWS.Nimble.Types.StreamingImageState.StreamingImageState
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Nimble.Types.StreamingImageState.StreamingImageState
instance Network.AWS.Data.Log.ToLog Network.AWS.Nimble.Types.StreamingImageState.StreamingImageState
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Nimble.Types.StreamingImageState.StreamingImageState
instance Network.AWS.Data.Text.ToText Network.AWS.Nimble.Types.StreamingImageState.StreamingImageState
instance Network.AWS.Data.Text.FromText Network.AWS.Nimble.Types.StreamingImageState.StreamingImageState
instance Control.DeepSeq.NFData Network.AWS.Nimble.Types.StreamingImageState.StreamingImageState
instance Data.Hashable.Class.Hashable Network.AWS.Nimble.Types.StreamingImageState.StreamingImageState
instance GHC.Generics.Generic Network.AWS.Nimble.Types.StreamingImageState.StreamingImageState
instance GHC.Classes.Ord Network.AWS.Nimble.Types.StreamingImageState.StreamingImageState
instance GHC.Classes.Eq Network.AWS.Nimble.Types.StreamingImageState.StreamingImageState
instance GHC.Read.Read Network.AWS.Nimble.Types.StreamingImageState.StreamingImageState
instance GHC.Show.Show Network.AWS.Nimble.Types.StreamingImageState.StreamingImageState


module Network.AWS.Nimble.Types.StreamingImageStatusCode

-- | The status code.
newtype StreamingImageStatusCode
StreamingImageStatusCode' :: Text -> StreamingImageStatusCode
[fromStreamingImageStatusCode] :: StreamingImageStatusCode -> Text
pattern StreamingImageStatusCode_INTERNAL_ERROR :: StreamingImageStatusCode
pattern StreamingImageStatusCode_STREAMING_IMAGE_CREATE_IN_PROGRESS :: StreamingImageStatusCode
pattern StreamingImageStatusCode_STREAMING_IMAGE_DELETED :: StreamingImageStatusCode
pattern StreamingImageStatusCode_STREAMING_IMAGE_DELETE_IN_PROGRESS :: StreamingImageStatusCode
pattern StreamingImageStatusCode_STREAMING_IMAGE_READY :: StreamingImageStatusCode
pattern StreamingImageStatusCode_STREAMING_IMAGE_UPDATE_IN_PROGRESS :: StreamingImageStatusCode
instance Network.AWS.Data.XML.ToXML Network.AWS.Nimble.Types.StreamingImageStatusCode.StreamingImageStatusCode
instance Network.AWS.Data.XML.FromXML Network.AWS.Nimble.Types.StreamingImageStatusCode.StreamingImageStatusCode
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Nimble.Types.StreamingImageStatusCode.StreamingImageStatusCode
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Nimble.Types.StreamingImageStatusCode.StreamingImageStatusCode
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Nimble.Types.StreamingImageStatusCode.StreamingImageStatusCode
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Nimble.Types.StreamingImageStatusCode.StreamingImageStatusCode
instance Network.AWS.Data.Query.ToQuery Network.AWS.Nimble.Types.StreamingImageStatusCode.StreamingImageStatusCode
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Nimble.Types.StreamingImageStatusCode.StreamingImageStatusCode
instance Network.AWS.Data.Log.ToLog Network.AWS.Nimble.Types.StreamingImageStatusCode.StreamingImageStatusCode
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Nimble.Types.StreamingImageStatusCode.StreamingImageStatusCode
instance Network.AWS.Data.Text.ToText Network.AWS.Nimble.Types.StreamingImageStatusCode.StreamingImageStatusCode
instance Network.AWS.Data.Text.FromText Network.AWS.Nimble.Types.StreamingImageStatusCode.StreamingImageStatusCode
instance Control.DeepSeq.NFData Network.AWS.Nimble.Types.StreamingImageStatusCode.StreamingImageStatusCode
instance Data.Hashable.Class.Hashable Network.AWS.Nimble.Types.StreamingImageStatusCode.StreamingImageStatusCode
instance GHC.Generics.Generic Network.AWS.Nimble.Types.StreamingImageStatusCode.StreamingImageStatusCode
instance GHC.Classes.Ord Network.AWS.Nimble.Types.StreamingImageStatusCode.StreamingImageStatusCode
instance GHC.Classes.Eq Network.AWS.Nimble.Types.StreamingImageStatusCode.StreamingImageStatusCode
instance GHC.Read.Read Network.AWS.Nimble.Types.StreamingImageStatusCode.StreamingImageStatusCode
instance GHC.Show.Show Network.AWS.Nimble.Types.StreamingImageStatusCode.StreamingImageStatusCode


module Network.AWS.Nimble.Types.StreamingImage

-- | <i>See:</i> <a>newStreamingImage</a> smart constructor.
data StreamingImage
StreamingImage' :: Maybe StreamingImageState -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe StreamingImageEncryptionConfiguration -> Maybe Text -> Maybe [Text] -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe StreamingImageStatusCode -> StreamingImage

-- | The current state.
[$sel:state:StreamingImage'] :: StreamingImage -> Maybe StreamingImageState

-- | The platform of the streaming image, either WINDOWS or LINUX.
[$sel:platform:StreamingImage'] :: StreamingImage -> Maybe Text

-- | The ARN of the resource.
[$sel:arn:StreamingImage'] :: StreamingImage -> Maybe Text

-- | The ID of the streaming image.
[$sel:streamingImageId:StreamingImage'] :: StreamingImage -> Maybe Text

-- | The ID of an EC2 machine image with which to create the streaming
--   image.
[$sel:ec2ImageId:StreamingImage'] :: StreamingImage -> Maybe Text

-- | The owner of the streaming image, either the studioId that contains
--   the streaming image, or 'amazon' for images that are provided by
--   Amazon Nimble Studio.
[$sel:owner:StreamingImage'] :: StreamingImage -> Maybe Text

-- | A friendly name for a streaming image resource.
[$sel:name:StreamingImage'] :: StreamingImage -> Maybe Text

-- | The encryption configuration.
[$sel:encryptionConfiguration:StreamingImage'] :: StreamingImage -> Maybe StreamingImageEncryptionConfiguration

-- | The status message for the streaming image.
[$sel:statusMessage:StreamingImage'] :: StreamingImage -> Maybe Text

-- | The list of EULAs that must be accepted before a Streaming Session can
--   be started using this streaming image.
[$sel:eulaIds:StreamingImage'] :: StreamingImage -> Maybe [Text]

-- | A human-readable description of the streaming image.
[$sel:description:StreamingImage'] :: StreamingImage -> Maybe Text

-- | A collection of labels, in the form of key:value pairs, that apply to
--   this resource.
[$sel:tags:StreamingImage'] :: StreamingImage -> Maybe (HashMap Text Text)

-- | The status code.
[$sel:statusCode:StreamingImage'] :: StreamingImage -> Maybe StreamingImageStatusCode

-- | Create a value of <a>StreamingImage</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:state:StreamingImage'</a>, <a>streamingImage_state</a> - The
--   current state.
--   
--   <a>$sel:platform:StreamingImage'</a>, <a>streamingImage_platform</a> -
--   The platform of the streaming image, either WINDOWS or LINUX.
--   
--   <a>$sel:arn:StreamingImage'</a>, <a>streamingImage_arn</a> - The ARN
--   of the resource.
--   
--   <a>$sel:streamingImageId:StreamingImage'</a>,
--   <a>streamingImage_streamingImageId</a> - The ID of the streaming
--   image.
--   
--   <a>$sel:ec2ImageId:StreamingImage'</a>,
--   <a>streamingImage_ec2ImageId</a> - The ID of an EC2 machine image with
--   which to create the streaming image.
--   
--   <a>$sel:owner:StreamingImage'</a>, <a>streamingImage_owner</a> - The
--   owner of the streaming image, either the studioId that contains the
--   streaming image, or 'amazon' for images that are provided by Amazon
--   Nimble Studio.
--   
--   <a>$sel:name:StreamingImage'</a>, <a>streamingImage_name</a> - A
--   friendly name for a streaming image resource.
--   
--   <a>$sel:encryptionConfiguration:StreamingImage'</a>,
--   <a>streamingImage_encryptionConfiguration</a> - The encryption
--   configuration.
--   
--   <a>$sel:statusMessage:StreamingImage'</a>,
--   <a>streamingImage_statusMessage</a> - The status message for the
--   streaming image.
--   
--   <a>$sel:eulaIds:StreamingImage'</a>, <a>streamingImage_eulaIds</a> -
--   The list of EULAs that must be accepted before a Streaming Session can
--   be started using this streaming image.
--   
--   <a>$sel:description:StreamingImage'</a>,
--   <a>streamingImage_description</a> - A human-readable description of
--   the streaming image.
--   
--   <a>$sel:tags:StreamingImage'</a>, <a>streamingImage_tags</a> - A
--   collection of labels, in the form of key:value pairs, that apply to
--   this resource.
--   
--   <a>$sel:statusCode:StreamingImage'</a>,
--   <a>streamingImage_statusCode</a> - The status code.
newStreamingImage :: StreamingImage

-- | The current state.
streamingImage_state :: Lens' StreamingImage (Maybe StreamingImageState)

-- | The platform of the streaming image, either WINDOWS or LINUX.
streamingImage_platform :: Lens' StreamingImage (Maybe Text)

-- | The ARN of the resource.
streamingImage_arn :: Lens' StreamingImage (Maybe Text)

-- | The ID of the streaming image.
streamingImage_streamingImageId :: Lens' StreamingImage (Maybe Text)

-- | The ID of an EC2 machine image with which to create the streaming
--   image.
streamingImage_ec2ImageId :: Lens' StreamingImage (Maybe Text)

-- | The owner of the streaming image, either the studioId that contains
--   the streaming image, or 'amazon' for images that are provided by
--   Amazon Nimble Studio.
streamingImage_owner :: Lens' StreamingImage (Maybe Text)

-- | A friendly name for a streaming image resource.
streamingImage_name :: Lens' StreamingImage (Maybe Text)

-- | The encryption configuration.
streamingImage_encryptionConfiguration :: Lens' StreamingImage (Maybe StreamingImageEncryptionConfiguration)

-- | The status message for the streaming image.
streamingImage_statusMessage :: Lens' StreamingImage (Maybe Text)

-- | The list of EULAs that must be accepted before a Streaming Session can
--   be started using this streaming image.
streamingImage_eulaIds :: Lens' StreamingImage (Maybe [Text])

-- | A human-readable description of the streaming image.
streamingImage_description :: Lens' StreamingImage (Maybe Text)

-- | A collection of labels, in the form of key:value pairs, that apply to
--   this resource.
streamingImage_tags :: Lens' StreamingImage (Maybe (HashMap Text Text))

-- | The status code.
streamingImage_statusCode :: Lens' StreamingImage (Maybe StreamingImageStatusCode)
instance GHC.Generics.Generic Network.AWS.Nimble.Types.StreamingImage.StreamingImage
instance GHC.Show.Show Network.AWS.Nimble.Types.StreamingImage.StreamingImage
instance GHC.Read.Read Network.AWS.Nimble.Types.StreamingImage.StreamingImage
instance GHC.Classes.Eq Network.AWS.Nimble.Types.StreamingImage.StreamingImage
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Nimble.Types.StreamingImage.StreamingImage
instance Data.Hashable.Class.Hashable Network.AWS.Nimble.Types.StreamingImage.StreamingImage
instance Control.DeepSeq.NFData Network.AWS.Nimble.Types.StreamingImage.StreamingImage


module Network.AWS.Nimble.Types.StreamingInstanceType

newtype StreamingInstanceType
StreamingInstanceType' :: Text -> StreamingInstanceType
[fromStreamingInstanceType] :: StreamingInstanceType -> Text
pattern StreamingInstanceType_G4dn_12xlarge :: StreamingInstanceType
pattern StreamingInstanceType_G4dn_16xlarge :: StreamingInstanceType
pattern StreamingInstanceType_G4dn_2xlarge :: StreamingInstanceType
pattern StreamingInstanceType_G4dn_4xlarge :: StreamingInstanceType
pattern StreamingInstanceType_G4dn_8xlarge :: StreamingInstanceType
pattern StreamingInstanceType_G4dn_xlarge :: StreamingInstanceType
instance Network.AWS.Data.XML.ToXML Network.AWS.Nimble.Types.StreamingInstanceType.StreamingInstanceType
instance Network.AWS.Data.XML.FromXML Network.AWS.Nimble.Types.StreamingInstanceType.StreamingInstanceType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Nimble.Types.StreamingInstanceType.StreamingInstanceType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Nimble.Types.StreamingInstanceType.StreamingInstanceType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Nimble.Types.StreamingInstanceType.StreamingInstanceType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Nimble.Types.StreamingInstanceType.StreamingInstanceType
instance Network.AWS.Data.Query.ToQuery Network.AWS.Nimble.Types.StreamingInstanceType.StreamingInstanceType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Nimble.Types.StreamingInstanceType.StreamingInstanceType
instance Network.AWS.Data.Log.ToLog Network.AWS.Nimble.Types.StreamingInstanceType.StreamingInstanceType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Nimble.Types.StreamingInstanceType.StreamingInstanceType
instance Network.AWS.Data.Text.ToText Network.AWS.Nimble.Types.StreamingInstanceType.StreamingInstanceType
instance Network.AWS.Data.Text.FromText Network.AWS.Nimble.Types.StreamingInstanceType.StreamingInstanceType
instance Control.DeepSeq.NFData Network.AWS.Nimble.Types.StreamingInstanceType.StreamingInstanceType
instance Data.Hashable.Class.Hashable Network.AWS.Nimble.Types.StreamingInstanceType.StreamingInstanceType
instance GHC.Generics.Generic Network.AWS.Nimble.Types.StreamingInstanceType.StreamingInstanceType
instance GHC.Classes.Ord Network.AWS.Nimble.Types.StreamingInstanceType.StreamingInstanceType
instance GHC.Classes.Eq Network.AWS.Nimble.Types.StreamingInstanceType.StreamingInstanceType
instance GHC.Read.Read Network.AWS.Nimble.Types.StreamingInstanceType.StreamingInstanceType
instance GHC.Show.Show Network.AWS.Nimble.Types.StreamingInstanceType.StreamingInstanceType


module Network.AWS.Nimble.Types.StreamConfigurationCreate

-- | <i>See:</i> <a>newStreamConfigurationCreate</a> smart constructor.
data StreamConfigurationCreate
StreamConfigurationCreate' :: Maybe Natural -> StreamingClipboardMode -> [Text] -> NonEmpty StreamingInstanceType -> StreamConfigurationCreate

-- | The length of time, in minutes, that a streaming session can run.
--   After this point, Nimble Studio automatically terminates the session.
[$sel:maxSessionLengthInMinutes:StreamConfigurationCreate'] :: StreamConfigurationCreate -> Maybe Natural

-- | Enable or disable the use of the system clipboard to copy and paste
--   between the streaming session and streaming client.
[$sel:clipboardMode:StreamConfigurationCreate'] :: StreamConfigurationCreate -> StreamingClipboardMode

-- | The streaming images that users can select from when launching a
--   streaming session with this launch profile.
[$sel:streamingImageIds:StreamConfigurationCreate'] :: StreamConfigurationCreate -> [Text]

-- | The EC2 instance types that users can select from when launching a
--   streaming session with this launch profile.
[$sel:ec2InstanceTypes:StreamConfigurationCreate'] :: StreamConfigurationCreate -> NonEmpty StreamingInstanceType

-- | Create a value of <a>StreamConfigurationCreate</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:maxSessionLengthInMinutes:StreamConfigurationCreate'</a>,
--   <a>streamConfigurationCreate_maxSessionLengthInMinutes</a> - The
--   length of time, in minutes, that a streaming session can run. After
--   this point, Nimble Studio automatically terminates the session.
--   
--   <a>$sel:clipboardMode:StreamConfigurationCreate'</a>,
--   <a>streamConfigurationCreate_clipboardMode</a> - Enable or disable the
--   use of the system clipboard to copy and paste between the streaming
--   session and streaming client.
--   
--   <a>$sel:streamingImageIds:StreamConfigurationCreate'</a>,
--   <a>streamConfigurationCreate_streamingImageIds</a> - The streaming
--   images that users can select from when launching a streaming session
--   with this launch profile.
--   
--   <a>$sel:ec2InstanceTypes:StreamConfigurationCreate'</a>,
--   <a>streamConfigurationCreate_ec2InstanceTypes</a> - The EC2 instance
--   types that users can select from when launching a streaming session
--   with this launch profile.
newStreamConfigurationCreate :: StreamingClipboardMode -> NonEmpty StreamingInstanceType -> StreamConfigurationCreate

-- | The length of time, in minutes, that a streaming session can run.
--   After this point, Nimble Studio automatically terminates the session.
streamConfigurationCreate_maxSessionLengthInMinutes :: Lens' StreamConfigurationCreate (Maybe Natural)

-- | Enable or disable the use of the system clipboard to copy and paste
--   between the streaming session and streaming client.
streamConfigurationCreate_clipboardMode :: Lens' StreamConfigurationCreate StreamingClipboardMode

-- | The streaming images that users can select from when launching a
--   streaming session with this launch profile.
streamConfigurationCreate_streamingImageIds :: Lens' StreamConfigurationCreate [Text]

-- | The EC2 instance types that users can select from when launching a
--   streaming session with this launch profile.
streamConfigurationCreate_ec2InstanceTypes :: Lens' StreamConfigurationCreate (NonEmpty StreamingInstanceType)
instance GHC.Generics.Generic Network.AWS.Nimble.Types.StreamConfigurationCreate.StreamConfigurationCreate
instance GHC.Show.Show Network.AWS.Nimble.Types.StreamConfigurationCreate.StreamConfigurationCreate
instance GHC.Read.Read Network.AWS.Nimble.Types.StreamConfigurationCreate.StreamConfigurationCreate
instance GHC.Classes.Eq Network.AWS.Nimble.Types.StreamConfigurationCreate.StreamConfigurationCreate
instance Data.Hashable.Class.Hashable Network.AWS.Nimble.Types.StreamConfigurationCreate.StreamConfigurationCreate
instance Control.DeepSeq.NFData Network.AWS.Nimble.Types.StreamConfigurationCreate.StreamConfigurationCreate
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Nimble.Types.StreamConfigurationCreate.StreamConfigurationCreate


module Network.AWS.Nimble.Types.StreamConfiguration

-- | A configuration for a streaming session.
--   
--   <i>See:</i> <a>newStreamConfiguration</a> smart constructor.
data StreamConfiguration
StreamConfiguration' :: Maybe [Text] -> Maybe Natural -> Maybe StreamingClipboardMode -> Maybe (NonEmpty StreamingInstanceType) -> StreamConfiguration

-- | The streaming images that users can select from when launching a
--   streaming session with this launch profile.
[$sel:streamingImageIds:StreamConfiguration'] :: StreamConfiguration -> Maybe [Text]

-- | The length of time, in minutes, that a streaming session can run.
--   After this point, Nimble Studio automatically terminates the session.
[$sel:maxSessionLengthInMinutes:StreamConfiguration'] :: StreamConfiguration -> Maybe Natural

-- | Enable or disable the use of the system clipboard to copy and paste
--   between the streaming session and streaming client.
[$sel:clipboardMode:StreamConfiguration'] :: StreamConfiguration -> Maybe StreamingClipboardMode

-- | The EC2 instance types that users can select from when launching a
--   streaming session with this launch profile.
[$sel:ec2InstanceTypes:StreamConfiguration'] :: StreamConfiguration -> Maybe (NonEmpty StreamingInstanceType)

-- | Create a value of <a>StreamConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:streamingImageIds:StreamConfiguration'</a>,
--   <a>streamConfiguration_streamingImageIds</a> - The streaming images
--   that users can select from when launching a streaming session with
--   this launch profile.
--   
--   <a>$sel:maxSessionLengthInMinutes:StreamConfiguration'</a>,
--   <a>streamConfiguration_maxSessionLengthInMinutes</a> - The length of
--   time, in minutes, that a streaming session can run. After this point,
--   Nimble Studio automatically terminates the session.
--   
--   <a>$sel:clipboardMode:StreamConfiguration'</a>,
--   <a>streamConfiguration_clipboardMode</a> - Enable or disable the use
--   of the system clipboard to copy and paste between the streaming
--   session and streaming client.
--   
--   <a>$sel:ec2InstanceTypes:StreamConfiguration'</a>,
--   <a>streamConfiguration_ec2InstanceTypes</a> - The EC2 instance types
--   that users can select from when launching a streaming session with
--   this launch profile.
newStreamConfiguration :: StreamConfiguration

-- | The streaming images that users can select from when launching a
--   streaming session with this launch profile.
streamConfiguration_streamingImageIds :: Lens' StreamConfiguration (Maybe [Text])

-- | The length of time, in minutes, that a streaming session can run.
--   After this point, Nimble Studio automatically terminates the session.
streamConfiguration_maxSessionLengthInMinutes :: Lens' StreamConfiguration (Maybe Natural)

-- | Enable or disable the use of the system clipboard to copy and paste
--   between the streaming session and streaming client.
streamConfiguration_clipboardMode :: Lens' StreamConfiguration (Maybe StreamingClipboardMode)

-- | The EC2 instance types that users can select from when launching a
--   streaming session with this launch profile.
streamConfiguration_ec2InstanceTypes :: Lens' StreamConfiguration (Maybe (NonEmpty StreamingInstanceType))
instance GHC.Generics.Generic Network.AWS.Nimble.Types.StreamConfiguration.StreamConfiguration
instance GHC.Show.Show Network.AWS.Nimble.Types.StreamConfiguration.StreamConfiguration
instance GHC.Read.Read Network.AWS.Nimble.Types.StreamConfiguration.StreamConfiguration
instance GHC.Classes.Eq Network.AWS.Nimble.Types.StreamConfiguration.StreamConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Nimble.Types.StreamConfiguration.StreamConfiguration
instance Data.Hashable.Class.Hashable Network.AWS.Nimble.Types.StreamConfiguration.StreamConfiguration
instance Control.DeepSeq.NFData Network.AWS.Nimble.Types.StreamConfiguration.StreamConfiguration


module Network.AWS.Nimble.Types.LaunchProfile

-- | <i>See:</i> <a>newLaunchProfile</a> smart constructor.
data LaunchProfile
LaunchProfile' :: Maybe LaunchProfileState -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe [Text] -> Maybe [Text] -> Maybe StreamConfiguration -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe LaunchProfileStatusCode -> Maybe (NonEmpty Text) -> LaunchProfile

-- | The current state.
[$sel:state:LaunchProfile'] :: LaunchProfile -> Maybe LaunchProfileState

-- | The ARN of the resource.
[$sel:arn:LaunchProfile'] :: LaunchProfile -> Maybe Text

-- | The Unix epoch timestamp in seconds for when the resource was created.
[$sel:createdAt:LaunchProfile'] :: LaunchProfile -> Maybe POSIX

-- | The user ID of the user that created the launch profile.
[$sel:createdBy:LaunchProfile'] :: LaunchProfile -> Maybe Text

-- | The launch profile ID.
[$sel:launchProfileId:LaunchProfile'] :: LaunchProfile -> Maybe Text

-- | The user ID of the user that most recently updated the resource.
[$sel:updatedBy:LaunchProfile'] :: LaunchProfile -> Maybe Text

-- | The version number of the protocol that is used by the launch profile.
--   The only valid version is "2021-03-31".
[$sel:launchProfileProtocolVersions:LaunchProfile'] :: LaunchProfile -> Maybe [Text]

-- | Unique identifiers for a collection of EC2 subnets.
[$sel:ec2SubnetIds:LaunchProfile'] :: LaunchProfile -> Maybe [Text]

-- | A configuration for a streaming session.
[$sel:streamConfiguration:LaunchProfile'] :: LaunchProfile -> Maybe StreamConfiguration

-- | A friendly name for the launch profile.
[$sel:name:LaunchProfile'] :: LaunchProfile -> Maybe Text

-- | The status message for the launch profile.
[$sel:statusMessage:LaunchProfile'] :: LaunchProfile -> Maybe Text

-- | The Unix epoch timestamp in seconds for when the resource was updated.
[$sel:updatedAt:LaunchProfile'] :: LaunchProfile -> Maybe POSIX

-- | A human-readable description of the launch profile.
[$sel:description:LaunchProfile'] :: LaunchProfile -> Maybe Text

-- | A collection of labels, in the form of key:value pairs, that apply to
--   this resource.
[$sel:tags:LaunchProfile'] :: LaunchProfile -> Maybe (HashMap Text Text)

-- | The status code.
[$sel:statusCode:LaunchProfile'] :: LaunchProfile -> Maybe LaunchProfileStatusCode

-- | Unique identifiers for a collection of studio components that can be
--   used with this launch profile.
[$sel:studioComponentIds:LaunchProfile'] :: LaunchProfile -> Maybe (NonEmpty Text)

-- | Create a value of <a>LaunchProfile</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:state:LaunchProfile'</a>, <a>launchProfile_state</a> - The
--   current state.
--   
--   <a>$sel:arn:LaunchProfile'</a>, <a>launchProfile_arn</a> - The ARN of
--   the resource.
--   
--   <a>$sel:createdAt:LaunchProfile'</a>, <a>launchProfile_createdAt</a> -
--   The Unix epoch timestamp in seconds for when the resource was created.
--   
--   <a>$sel:createdBy:LaunchProfile'</a>, <a>launchProfile_createdBy</a> -
--   The user ID of the user that created the launch profile.
--   
--   <a>$sel:launchProfileId:LaunchProfile'</a>,
--   <a>launchProfile_launchProfileId</a> - The launch profile ID.
--   
--   <a>$sel:updatedBy:LaunchProfile'</a>, <a>launchProfile_updatedBy</a> -
--   The user ID of the user that most recently updated the resource.
--   
--   <a>$sel:launchProfileProtocolVersions:LaunchProfile'</a>,
--   <a>launchProfile_launchProfileProtocolVersions</a> - The version
--   number of the protocol that is used by the launch profile. The only
--   valid version is "2021-03-31".
--   
--   <a>$sel:ec2SubnetIds:LaunchProfile'</a>,
--   <a>launchProfile_ec2SubnetIds</a> - Unique identifiers for a
--   collection of EC2 subnets.
--   
--   <a>$sel:streamConfiguration:LaunchProfile'</a>,
--   <a>launchProfile_streamConfiguration</a> - A configuration for a
--   streaming session.
--   
--   <a>$sel:name:LaunchProfile'</a>, <a>launchProfile_name</a> - A
--   friendly name for the launch profile.
--   
--   <a>$sel:statusMessage:LaunchProfile'</a>,
--   <a>launchProfile_statusMessage</a> - The status message for the launch
--   profile.
--   
--   <a>$sel:updatedAt:LaunchProfile'</a>, <a>launchProfile_updatedAt</a> -
--   The Unix epoch timestamp in seconds for when the resource was updated.
--   
--   <a>$sel:description:LaunchProfile'</a>,
--   <a>launchProfile_description</a> - A human-readable description of the
--   launch profile.
--   
--   <a>$sel:tags:LaunchProfile'</a>, <a>launchProfile_tags</a> - A
--   collection of labels, in the form of key:value pairs, that apply to
--   this resource.
--   
--   <a>$sel:statusCode:LaunchProfile'</a>, <a>launchProfile_statusCode</a>
--   - The status code.
--   
--   <a>$sel:studioComponentIds:LaunchProfile'</a>,
--   <a>launchProfile_studioComponentIds</a> - Unique identifiers for a
--   collection of studio components that can be used with this launch
--   profile.
newLaunchProfile :: LaunchProfile

-- | The current state.
launchProfile_state :: Lens' LaunchProfile (Maybe LaunchProfileState)

-- | The ARN of the resource.
launchProfile_arn :: Lens' LaunchProfile (Maybe Text)

-- | The Unix epoch timestamp in seconds for when the resource was created.
launchProfile_createdAt :: Lens' LaunchProfile (Maybe UTCTime)

-- | The user ID of the user that created the launch profile.
launchProfile_createdBy :: Lens' LaunchProfile (Maybe Text)

-- | The launch profile ID.
launchProfile_launchProfileId :: Lens' LaunchProfile (Maybe Text)

-- | The user ID of the user that most recently updated the resource.
launchProfile_updatedBy :: Lens' LaunchProfile (Maybe Text)

-- | The version number of the protocol that is used by the launch profile.
--   The only valid version is "2021-03-31".
launchProfile_launchProfileProtocolVersions :: Lens' LaunchProfile (Maybe [Text])

-- | Unique identifiers for a collection of EC2 subnets.
launchProfile_ec2SubnetIds :: Lens' LaunchProfile (Maybe [Text])

-- | A configuration for a streaming session.
launchProfile_streamConfiguration :: Lens' LaunchProfile (Maybe StreamConfiguration)

-- | A friendly name for the launch profile.
launchProfile_name :: Lens' LaunchProfile (Maybe Text)

-- | The status message for the launch profile.
launchProfile_statusMessage :: Lens' LaunchProfile (Maybe Text)

-- | The Unix epoch timestamp in seconds for when the resource was updated.
launchProfile_updatedAt :: Lens' LaunchProfile (Maybe UTCTime)

-- | A human-readable description of the launch profile.
launchProfile_description :: Lens' LaunchProfile (Maybe Text)

-- | A collection of labels, in the form of key:value pairs, that apply to
--   this resource.
launchProfile_tags :: Lens' LaunchProfile (Maybe (HashMap Text Text))

-- | The status code.
launchProfile_statusCode :: Lens' LaunchProfile (Maybe LaunchProfileStatusCode)

-- | Unique identifiers for a collection of studio components that can be
--   used with this launch profile.
launchProfile_studioComponentIds :: Lens' LaunchProfile (Maybe (NonEmpty Text))
instance GHC.Generics.Generic Network.AWS.Nimble.Types.LaunchProfile.LaunchProfile
instance GHC.Show.Show Network.AWS.Nimble.Types.LaunchProfile.LaunchProfile
instance GHC.Read.Read Network.AWS.Nimble.Types.LaunchProfile.LaunchProfile
instance GHC.Classes.Eq Network.AWS.Nimble.Types.LaunchProfile.LaunchProfile
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Nimble.Types.LaunchProfile.LaunchProfile
instance Data.Hashable.Class.Hashable Network.AWS.Nimble.Types.LaunchProfile.LaunchProfile
instance Control.DeepSeq.NFData Network.AWS.Nimble.Types.LaunchProfile.LaunchProfile


module Network.AWS.Nimble.Types.StreamingSessionState

-- | The streaming session state.
newtype StreamingSessionState
StreamingSessionState' :: Text -> StreamingSessionState
[fromStreamingSessionState] :: StreamingSessionState -> Text
pattern StreamingSessionState_CREATE_FAILED :: StreamingSessionState
pattern StreamingSessionState_CREATE_IN_PROGRESS :: StreamingSessionState
pattern StreamingSessionState_DELETED :: StreamingSessionState
pattern StreamingSessionState_DELETE_FAILED :: StreamingSessionState
pattern StreamingSessionState_DELETE_IN_PROGRESS :: StreamingSessionState
pattern StreamingSessionState_READY :: StreamingSessionState
instance Network.AWS.Data.XML.ToXML Network.AWS.Nimble.Types.StreamingSessionState.StreamingSessionState
instance Network.AWS.Data.XML.FromXML Network.AWS.Nimble.Types.StreamingSessionState.StreamingSessionState
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Nimble.Types.StreamingSessionState.StreamingSessionState
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Nimble.Types.StreamingSessionState.StreamingSessionState
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Nimble.Types.StreamingSessionState.StreamingSessionState
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Nimble.Types.StreamingSessionState.StreamingSessionState
instance Network.AWS.Data.Query.ToQuery Network.AWS.Nimble.Types.StreamingSessionState.StreamingSessionState
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Nimble.Types.StreamingSessionState.StreamingSessionState
instance Network.AWS.Data.Log.ToLog Network.AWS.Nimble.Types.StreamingSessionState.StreamingSessionState
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Nimble.Types.StreamingSessionState.StreamingSessionState
instance Network.AWS.Data.Text.ToText Network.AWS.Nimble.Types.StreamingSessionState.StreamingSessionState
instance Network.AWS.Data.Text.FromText Network.AWS.Nimble.Types.StreamingSessionState.StreamingSessionState
instance Control.DeepSeq.NFData Network.AWS.Nimble.Types.StreamingSessionState.StreamingSessionState
instance Data.Hashable.Class.Hashable Network.AWS.Nimble.Types.StreamingSessionState.StreamingSessionState
instance GHC.Generics.Generic Network.AWS.Nimble.Types.StreamingSessionState.StreamingSessionState
instance GHC.Classes.Ord Network.AWS.Nimble.Types.StreamingSessionState.StreamingSessionState
instance GHC.Classes.Eq Network.AWS.Nimble.Types.StreamingSessionState.StreamingSessionState
instance GHC.Read.Read Network.AWS.Nimble.Types.StreamingSessionState.StreamingSessionState
instance GHC.Show.Show Network.AWS.Nimble.Types.StreamingSessionState.StreamingSessionState


module Network.AWS.Nimble.Types.StreamingSessionStatusCode

newtype StreamingSessionStatusCode
StreamingSessionStatusCode' :: Text -> StreamingSessionStatusCode
[fromStreamingSessionStatusCode] :: StreamingSessionStatusCode -> Text
pattern StreamingSessionStatusCode_ACTIVE_DIRECTORY_DOMAIN_JOIN_ERROR :: StreamingSessionStatusCode
pattern StreamingSessionStatusCode_DECRYPT_STREAMING_IMAGE_ERROR :: StreamingSessionStatusCode
pattern StreamingSessionStatusCode_INITIALIZATION_SCRIPT_ERROR :: StreamingSessionStatusCode
pattern StreamingSessionStatusCode_INSUFFICIENT_CAPACITY :: StreamingSessionStatusCode
pattern StreamingSessionStatusCode_INTERNAL_ERROR :: StreamingSessionStatusCode
pattern StreamingSessionStatusCode_NETWORK_CONNECTION_ERROR :: StreamingSessionStatusCode
pattern StreamingSessionStatusCode_NETWORK_INTERFACE_ERROR :: StreamingSessionStatusCode
pattern StreamingSessionStatusCode_STREAMING_SESSION_CREATE_IN_PROGRESS :: StreamingSessionStatusCode
pattern StreamingSessionStatusCode_STREAMING_SESSION_DELETED :: StreamingSessionStatusCode
pattern StreamingSessionStatusCode_STREAMING_SESSION_DELETE_IN_PROGRESS :: StreamingSessionStatusCode
pattern StreamingSessionStatusCode_STREAMING_SESSION_READY :: StreamingSessionStatusCode
instance Network.AWS.Data.XML.ToXML Network.AWS.Nimble.Types.StreamingSessionStatusCode.StreamingSessionStatusCode
instance Network.AWS.Data.XML.FromXML Network.AWS.Nimble.Types.StreamingSessionStatusCode.StreamingSessionStatusCode
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Nimble.Types.StreamingSessionStatusCode.StreamingSessionStatusCode
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Nimble.Types.StreamingSessionStatusCode.StreamingSessionStatusCode
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Nimble.Types.StreamingSessionStatusCode.StreamingSessionStatusCode
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Nimble.Types.StreamingSessionStatusCode.StreamingSessionStatusCode
instance Network.AWS.Data.Query.ToQuery Network.AWS.Nimble.Types.StreamingSessionStatusCode.StreamingSessionStatusCode
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Nimble.Types.StreamingSessionStatusCode.StreamingSessionStatusCode
instance Network.AWS.Data.Log.ToLog Network.AWS.Nimble.Types.StreamingSessionStatusCode.StreamingSessionStatusCode
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Nimble.Types.StreamingSessionStatusCode.StreamingSessionStatusCode
instance Network.AWS.Data.Text.ToText Network.AWS.Nimble.Types.StreamingSessionStatusCode.StreamingSessionStatusCode
instance Network.AWS.Data.Text.FromText Network.AWS.Nimble.Types.StreamingSessionStatusCode.StreamingSessionStatusCode
instance Control.DeepSeq.NFData Network.AWS.Nimble.Types.StreamingSessionStatusCode.StreamingSessionStatusCode
instance Data.Hashable.Class.Hashable Network.AWS.Nimble.Types.StreamingSessionStatusCode.StreamingSessionStatusCode
instance GHC.Generics.Generic Network.AWS.Nimble.Types.StreamingSessionStatusCode.StreamingSessionStatusCode
instance GHC.Classes.Ord Network.AWS.Nimble.Types.StreamingSessionStatusCode.StreamingSessionStatusCode
instance GHC.Classes.Eq Network.AWS.Nimble.Types.StreamingSessionStatusCode.StreamingSessionStatusCode
instance GHC.Read.Read Network.AWS.Nimble.Types.StreamingSessionStatusCode.StreamingSessionStatusCode
instance GHC.Show.Show Network.AWS.Nimble.Types.StreamingSessionStatusCode.StreamingSessionStatusCode


module Network.AWS.Nimble.Types.StreamingSession

-- | <i>See:</i> <a>newStreamingSession</a> smart constructor.
data StreamingSession
StreamingSession' :: Maybe Text -> Maybe StreamingSessionState -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe StreamingSessionStatusCode -> StreamingSession

-- | The user ID of the user that owns the streaming session.
[$sel:ownedBy:StreamingSession'] :: StreamingSession -> Maybe Text

-- | The current state.
[$sel:state:StreamingSession'] :: StreamingSession -> Maybe StreamingSessionState

-- | The ARN of the resource.
[$sel:arn:StreamingSession'] :: StreamingSession -> Maybe Text

-- | The Unix epoch timestamp in seconds for when the resource was created.
[$sel:createdAt:StreamingSession'] :: StreamingSession -> Maybe POSIX

-- | The EC2 Instance type used for the streaming session.
[$sel:ec2InstanceType:StreamingSession'] :: StreamingSession -> Maybe Text

-- | The user ID of the user that created the streaming session.
[$sel:createdBy:StreamingSession'] :: StreamingSession -> Maybe Text

-- | The ID of the launch profile used to control access from the streaming
--   session.
[$sel:launchProfileId:StreamingSession'] :: StreamingSession -> Maybe Text

-- | The ID of the streaming image.
[$sel:streamingImageId:StreamingSession'] :: StreamingSession -> Maybe Text

-- | The user ID of the user that most recently updated the resource.
[$sel:updatedBy:StreamingSession'] :: StreamingSession -> Maybe Text

-- | The time the streaming session will automatically terminate if not
--   terminated by the user.
[$sel:terminateAt:StreamingSession'] :: StreamingSession -> Maybe POSIX

-- | The status message for the streaming session.
[$sel:statusMessage:StreamingSession'] :: StreamingSession -> Maybe Text

-- | The Unix epoch timestamp in seconds for when the resource was updated.
[$sel:updatedAt:StreamingSession'] :: StreamingSession -> Maybe POSIX

-- | The session ID.
[$sel:sessionId:StreamingSession'] :: StreamingSession -> Maybe Text

-- | A collection of labels, in the form of key:value pairs, that apply to
--   this resource.
[$sel:tags:StreamingSession'] :: StreamingSession -> Maybe (HashMap Text Text)

-- | The status code.
[$sel:statusCode:StreamingSession'] :: StreamingSession -> Maybe StreamingSessionStatusCode

-- | Create a value of <a>StreamingSession</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ownedBy:StreamingSession'</a>, <a>streamingSession_ownedBy</a>
--   - The user ID of the user that owns the streaming session.
--   
--   <a>$sel:state:StreamingSession'</a>, <a>streamingSession_state</a> -
--   The current state.
--   
--   <a>$sel:arn:StreamingSession'</a>, <a>streamingSession_arn</a> - The
--   ARN of the resource.
--   
--   <a>$sel:createdAt:StreamingSession'</a>,
--   <a>streamingSession_createdAt</a> - The Unix epoch timestamp in
--   seconds for when the resource was created.
--   
--   <a>$sel:ec2InstanceType:StreamingSession'</a>,
--   <a>streamingSession_ec2InstanceType</a> - The EC2 Instance type used
--   for the streaming session.
--   
--   <a>$sel:createdBy:StreamingSession'</a>,
--   <a>streamingSession_createdBy</a> - The user ID of the user that
--   created the streaming session.
--   
--   <a>$sel:launchProfileId:StreamingSession'</a>,
--   <a>streamingSession_launchProfileId</a> - The ID of the launch profile
--   used to control access from the streaming session.
--   
--   <a>$sel:streamingImageId:StreamingSession'</a>,
--   <a>streamingSession_streamingImageId</a> - The ID of the streaming
--   image.
--   
--   <a>$sel:updatedBy:StreamingSession'</a>,
--   <a>streamingSession_updatedBy</a> - The user ID of the user that most
--   recently updated the resource.
--   
--   <a>$sel:terminateAt:StreamingSession'</a>,
--   <a>streamingSession_terminateAt</a> - The time the streaming session
--   will automatically terminate if not terminated by the user.
--   
--   <a>$sel:statusMessage:StreamingSession'</a>,
--   <a>streamingSession_statusMessage</a> - The status message for the
--   streaming session.
--   
--   <a>$sel:updatedAt:StreamingSession'</a>,
--   <a>streamingSession_updatedAt</a> - The Unix epoch timestamp in
--   seconds for when the resource was updated.
--   
--   <a>$sel:sessionId:StreamingSession'</a>,
--   <a>streamingSession_sessionId</a> - The session ID.
--   
--   <a>$sel:tags:StreamingSession'</a>, <a>streamingSession_tags</a> - A
--   collection of labels, in the form of key:value pairs, that apply to
--   this resource.
--   
--   <a>$sel:statusCode:StreamingSession'</a>,
--   <a>streamingSession_statusCode</a> - The status code.
newStreamingSession :: StreamingSession

-- | The user ID of the user that owns the streaming session.
streamingSession_ownedBy :: Lens' StreamingSession (Maybe Text)

-- | The current state.
streamingSession_state :: Lens' StreamingSession (Maybe StreamingSessionState)

-- | The ARN of the resource.
streamingSession_arn :: Lens' StreamingSession (Maybe Text)

-- | The Unix epoch timestamp in seconds for when the resource was created.
streamingSession_createdAt :: Lens' StreamingSession (Maybe UTCTime)

-- | The EC2 Instance type used for the streaming session.
streamingSession_ec2InstanceType :: Lens' StreamingSession (Maybe Text)

-- | The user ID of the user that created the streaming session.
streamingSession_createdBy :: Lens' StreamingSession (Maybe Text)

-- | The ID of the launch profile used to control access from the streaming
--   session.
streamingSession_launchProfileId :: Lens' StreamingSession (Maybe Text)

-- | The ID of the streaming image.
streamingSession_streamingImageId :: Lens' StreamingSession (Maybe Text)

-- | The user ID of the user that most recently updated the resource.
streamingSession_updatedBy :: Lens' StreamingSession (Maybe Text)

-- | The time the streaming session will automatically terminate if not
--   terminated by the user.
streamingSession_terminateAt :: Lens' StreamingSession (Maybe UTCTime)

-- | The status message for the streaming session.
streamingSession_statusMessage :: Lens' StreamingSession (Maybe Text)

-- | The Unix epoch timestamp in seconds for when the resource was updated.
streamingSession_updatedAt :: Lens' StreamingSession (Maybe UTCTime)

-- | The session ID.
streamingSession_sessionId :: Lens' StreamingSession (Maybe Text)

-- | A collection of labels, in the form of key:value pairs, that apply to
--   this resource.
streamingSession_tags :: Lens' StreamingSession (Maybe (HashMap Text Text))

-- | The status code.
streamingSession_statusCode :: Lens' StreamingSession (Maybe StreamingSessionStatusCode)
instance GHC.Generics.Generic Network.AWS.Nimble.Types.StreamingSession.StreamingSession
instance GHC.Show.Show Network.AWS.Nimble.Types.StreamingSession.StreamingSession
instance GHC.Read.Read Network.AWS.Nimble.Types.StreamingSession.StreamingSession
instance GHC.Classes.Eq Network.AWS.Nimble.Types.StreamingSession.StreamingSession
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Nimble.Types.StreamingSession.StreamingSession
instance Data.Hashable.Class.Hashable Network.AWS.Nimble.Types.StreamingSession.StreamingSession
instance Control.DeepSeq.NFData Network.AWS.Nimble.Types.StreamingSession.StreamingSession


module Network.AWS.Nimble.Types.StreamingSessionStreamState

newtype StreamingSessionStreamState
StreamingSessionStreamState' :: Text -> StreamingSessionStreamState
[fromStreamingSessionStreamState] :: StreamingSessionStreamState -> Text
pattern StreamingSessionStreamState_CREATE_FAILED :: StreamingSessionStreamState
pattern StreamingSessionStreamState_CREATE_IN_PROGRESS :: StreamingSessionStreamState
pattern StreamingSessionStreamState_DELETED :: StreamingSessionStreamState
pattern StreamingSessionStreamState_DELETE_FAILED :: StreamingSessionStreamState
pattern StreamingSessionStreamState_DELETE_IN_PROGRESS :: StreamingSessionStreamState
pattern StreamingSessionStreamState_READY :: StreamingSessionStreamState
instance Network.AWS.Data.XML.ToXML Network.AWS.Nimble.Types.StreamingSessionStreamState.StreamingSessionStreamState
instance Network.AWS.Data.XML.FromXML Network.AWS.Nimble.Types.StreamingSessionStreamState.StreamingSessionStreamState
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Nimble.Types.StreamingSessionStreamState.StreamingSessionStreamState
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Nimble.Types.StreamingSessionStreamState.StreamingSessionStreamState
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Nimble.Types.StreamingSessionStreamState.StreamingSessionStreamState
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Nimble.Types.StreamingSessionStreamState.StreamingSessionStreamState
instance Network.AWS.Data.Query.ToQuery Network.AWS.Nimble.Types.StreamingSessionStreamState.StreamingSessionStreamState
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Nimble.Types.StreamingSessionStreamState.StreamingSessionStreamState
instance Network.AWS.Data.Log.ToLog Network.AWS.Nimble.Types.StreamingSessionStreamState.StreamingSessionStreamState
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Nimble.Types.StreamingSessionStreamState.StreamingSessionStreamState
instance Network.AWS.Data.Text.ToText Network.AWS.Nimble.Types.StreamingSessionStreamState.StreamingSessionStreamState
instance Network.AWS.Data.Text.FromText Network.AWS.Nimble.Types.StreamingSessionStreamState.StreamingSessionStreamState
instance Control.DeepSeq.NFData Network.AWS.Nimble.Types.StreamingSessionStreamState.StreamingSessionStreamState
instance Data.Hashable.Class.Hashable Network.AWS.Nimble.Types.StreamingSessionStreamState.StreamingSessionStreamState
instance GHC.Generics.Generic Network.AWS.Nimble.Types.StreamingSessionStreamState.StreamingSessionStreamState
instance GHC.Classes.Ord Network.AWS.Nimble.Types.StreamingSessionStreamState.StreamingSessionStreamState
instance GHC.Classes.Eq Network.AWS.Nimble.Types.StreamingSessionStreamState.StreamingSessionStreamState
instance GHC.Read.Read Network.AWS.Nimble.Types.StreamingSessionStreamState.StreamingSessionStreamState
instance GHC.Show.Show Network.AWS.Nimble.Types.StreamingSessionStreamState.StreamingSessionStreamState


module Network.AWS.Nimble.Types.StreamingSessionStreamStatusCode
newtype StreamingSessionStreamStatusCode
StreamingSessionStreamStatusCode' :: Text -> StreamingSessionStreamStatusCode
[fromStreamingSessionStreamStatusCode] :: StreamingSessionStreamStatusCode -> Text
pattern StreamingSessionStreamStatusCode_INTERNAL_ERROR :: StreamingSessionStreamStatusCode
pattern StreamingSessionStreamStatusCode_NETWORK_CONNECTION_ERROR :: StreamingSessionStreamStatusCode
pattern StreamingSessionStreamStatusCode_STREAM_CREATE_IN_PROGRESS :: StreamingSessionStreamStatusCode
pattern StreamingSessionStreamStatusCode_STREAM_DELETED :: StreamingSessionStreamStatusCode
pattern StreamingSessionStreamStatusCode_STREAM_DELETE_IN_PROGRESS :: StreamingSessionStreamStatusCode
pattern StreamingSessionStreamStatusCode_STREAM_READY :: StreamingSessionStreamStatusCode
instance Network.AWS.Data.XML.ToXML Network.AWS.Nimble.Types.StreamingSessionStreamStatusCode.StreamingSessionStreamStatusCode
instance Network.AWS.Data.XML.FromXML Network.AWS.Nimble.Types.StreamingSessionStreamStatusCode.StreamingSessionStreamStatusCode
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Nimble.Types.StreamingSessionStreamStatusCode.StreamingSessionStreamStatusCode
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Nimble.Types.StreamingSessionStreamStatusCode.StreamingSessionStreamStatusCode
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Nimble.Types.StreamingSessionStreamStatusCode.StreamingSessionStreamStatusCode
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Nimble.Types.StreamingSessionStreamStatusCode.StreamingSessionStreamStatusCode
instance Network.AWS.Data.Query.ToQuery Network.AWS.Nimble.Types.StreamingSessionStreamStatusCode.StreamingSessionStreamStatusCode
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Nimble.Types.StreamingSessionStreamStatusCode.StreamingSessionStreamStatusCode
instance Network.AWS.Data.Log.ToLog Network.AWS.Nimble.Types.StreamingSessionStreamStatusCode.StreamingSessionStreamStatusCode
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Nimble.Types.StreamingSessionStreamStatusCode.StreamingSessionStreamStatusCode
instance Network.AWS.Data.Text.ToText Network.AWS.Nimble.Types.StreamingSessionStreamStatusCode.StreamingSessionStreamStatusCode
instance Network.AWS.Data.Text.FromText Network.AWS.Nimble.Types.StreamingSessionStreamStatusCode.StreamingSessionStreamStatusCode
instance Control.DeepSeq.NFData Network.AWS.Nimble.Types.StreamingSessionStreamStatusCode.StreamingSessionStreamStatusCode
instance Data.Hashable.Class.Hashable Network.AWS.Nimble.Types.StreamingSessionStreamStatusCode.StreamingSessionStreamStatusCode
instance GHC.Generics.Generic Network.AWS.Nimble.Types.StreamingSessionStreamStatusCode.StreamingSessionStreamStatusCode
instance GHC.Classes.Ord Network.AWS.Nimble.Types.StreamingSessionStreamStatusCode.StreamingSessionStreamStatusCode
instance GHC.Classes.Eq Network.AWS.Nimble.Types.StreamingSessionStreamStatusCode.StreamingSessionStreamStatusCode
instance GHC.Read.Read Network.AWS.Nimble.Types.StreamingSessionStreamStatusCode.StreamingSessionStreamStatusCode
instance GHC.Show.Show Network.AWS.Nimble.Types.StreamingSessionStreamStatusCode.StreamingSessionStreamStatusCode


module Network.AWS.Nimble.Types.StreamingSessionStream

-- | <i>See:</i> <a>newStreamingSessionStream</a> smart constructor.
data StreamingSessionStream
StreamingSessionStream' :: Maybe Text -> Maybe StreamingSessionStreamState -> Maybe POSIX -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe StreamingSessionStreamStatusCode -> StreamingSessionStream

-- | The user ID of the user that owns the streaming session.
[$sel:ownedBy:StreamingSessionStream'] :: StreamingSessionStream -> Maybe Text

-- | The current state.
[$sel:state:StreamingSessionStream'] :: StreamingSessionStream -> Maybe StreamingSessionStreamState

-- | The Unix epoch timestamp in seconds for when the resource was created.
[$sel:createdAt:StreamingSessionStream'] :: StreamingSessionStream -> Maybe POSIX

-- | The Unix epoch timestamp in seconds for when the resource expires.
[$sel:expiresAt:StreamingSessionStream'] :: StreamingSessionStream -> Maybe POSIX

-- | The URL to connect to this stream using the DCV client.
[$sel:url:StreamingSessionStream'] :: StreamingSessionStream -> Maybe Text

-- | The user ID of the user that created the streaming session stream.
[$sel:createdBy:StreamingSessionStream'] :: StreamingSessionStream -> Maybe Text

-- | The stream ID.
[$sel:streamId:StreamingSessionStream'] :: StreamingSessionStream -> Maybe Text

-- | The streaming session stream status code.
[$sel:statusCode:StreamingSessionStream'] :: StreamingSessionStream -> Maybe StreamingSessionStreamStatusCode

-- | Create a value of <a>StreamingSessionStream</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ownedBy:StreamingSessionStream'</a>,
--   <a>streamingSessionStream_ownedBy</a> - The user ID of the user that
--   owns the streaming session.
--   
--   <a>$sel:state:StreamingSessionStream'</a>,
--   <a>streamingSessionStream_state</a> - The current state.
--   
--   <a>$sel:createdAt:StreamingSessionStream'</a>,
--   <a>streamingSessionStream_createdAt</a> - The Unix epoch timestamp in
--   seconds for when the resource was created.
--   
--   <a>$sel:expiresAt:StreamingSessionStream'</a>,
--   <a>streamingSessionStream_expiresAt</a> - The Unix epoch timestamp in
--   seconds for when the resource expires.
--   
--   <a>$sel:url:StreamingSessionStream'</a>,
--   <a>streamingSessionStream_url</a> - The URL to connect to this stream
--   using the DCV client.
--   
--   <a>$sel:createdBy:StreamingSessionStream'</a>,
--   <a>streamingSessionStream_createdBy</a> - The user ID of the user that
--   created the streaming session stream.
--   
--   <a>$sel:streamId:StreamingSessionStream'</a>,
--   <a>streamingSessionStream_streamId</a> - The stream ID.
--   
--   <a>$sel:statusCode:StreamingSessionStream'</a>,
--   <a>streamingSessionStream_statusCode</a> - The streaming session
--   stream status code.
newStreamingSessionStream :: StreamingSessionStream

-- | The user ID of the user that owns the streaming session.
streamingSessionStream_ownedBy :: Lens' StreamingSessionStream (Maybe Text)

-- | The current state.
streamingSessionStream_state :: Lens' StreamingSessionStream (Maybe StreamingSessionStreamState)

-- | The Unix epoch timestamp in seconds for when the resource was created.
streamingSessionStream_createdAt :: Lens' StreamingSessionStream (Maybe UTCTime)

-- | The Unix epoch timestamp in seconds for when the resource expires.
streamingSessionStream_expiresAt :: Lens' StreamingSessionStream (Maybe UTCTime)

-- | The URL to connect to this stream using the DCV client.
streamingSessionStream_url :: Lens' StreamingSessionStream (Maybe Text)

-- | The user ID of the user that created the streaming session stream.
streamingSessionStream_createdBy :: Lens' StreamingSessionStream (Maybe Text)

-- | The stream ID.
streamingSessionStream_streamId :: Lens' StreamingSessionStream (Maybe Text)

-- | The streaming session stream status code.
streamingSessionStream_statusCode :: Lens' StreamingSessionStream (Maybe StreamingSessionStreamStatusCode)
instance GHC.Generics.Generic Network.AWS.Nimble.Types.StreamingSessionStream.StreamingSessionStream
instance GHC.Show.Show Network.AWS.Nimble.Types.StreamingSessionStream.StreamingSessionStream
instance GHC.Read.Read Network.AWS.Nimble.Types.StreamingSessionStream.StreamingSessionStream
instance GHC.Classes.Eq Network.AWS.Nimble.Types.StreamingSessionStream.StreamingSessionStream
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Nimble.Types.StreamingSessionStream.StreamingSessionStream
instance Data.Hashable.Class.Hashable Network.AWS.Nimble.Types.StreamingSessionStream.StreamingSessionStream
instance Control.DeepSeq.NFData Network.AWS.Nimble.Types.StreamingSessionStream.StreamingSessionStream


module Network.AWS.Nimble.Types.StudioComponentConfiguration

-- | The configuration of the studio component, based on component type.
--   
--   <i>See:</i> <a>newStudioComponentConfiguration</a> smart constructor.
data StudioComponentConfiguration
StudioComponentConfiguration' :: Maybe ActiveDirectoryConfiguration -> Maybe LicenseServiceConfiguration -> Maybe SharedFileSystemConfiguration -> Maybe ComputeFarmConfiguration -> StudioComponentConfiguration

-- | The configuration for a Microsoft Active Directory (Microsoft AD)
--   studio resource.
[$sel:activeDirectoryConfiguration:StudioComponentConfiguration'] :: StudioComponentConfiguration -> Maybe ActiveDirectoryConfiguration

-- | The configuration for a license service that is associated with a
--   studio resource.
[$sel:licenseServiceConfiguration:StudioComponentConfiguration'] :: StudioComponentConfiguration -> Maybe LicenseServiceConfiguration

-- | The configuration for a shared file storage system that is associated
--   with a studio resource.
[$sel:sharedFileSystemConfiguration:StudioComponentConfiguration'] :: StudioComponentConfiguration -> Maybe SharedFileSystemConfiguration

-- | The configuration for a render farm that is associated with a studio
--   resource.
[$sel:computeFarmConfiguration:StudioComponentConfiguration'] :: StudioComponentConfiguration -> Maybe ComputeFarmConfiguration

-- | Create a value of <a>StudioComponentConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:activeDirectoryConfiguration:StudioComponentConfiguration'</a>,
--   <a>studioComponentConfiguration_activeDirectoryConfiguration</a> - The
--   configuration for a Microsoft Active Directory (Microsoft AD) studio
--   resource.
--   
--   <a>$sel:licenseServiceConfiguration:StudioComponentConfiguration'</a>,
--   <a>studioComponentConfiguration_licenseServiceConfiguration</a> - The
--   configuration for a license service that is associated with a studio
--   resource.
--   
--   
--   <a>$sel:sharedFileSystemConfiguration:StudioComponentConfiguration'</a>,
--   <a>studioComponentConfiguration_sharedFileSystemConfiguration</a> -
--   The configuration for a shared file storage system that is associated
--   with a studio resource.
--   
--   <a>$sel:computeFarmConfiguration:StudioComponentConfiguration'</a>,
--   <a>studioComponentConfiguration_computeFarmConfiguration</a> - The
--   configuration for a render farm that is associated with a studio
--   resource.
newStudioComponentConfiguration :: StudioComponentConfiguration

-- | The configuration for a Microsoft Active Directory (Microsoft AD)
--   studio resource.
studioComponentConfiguration_activeDirectoryConfiguration :: Lens' StudioComponentConfiguration (Maybe ActiveDirectoryConfiguration)

-- | The configuration for a license service that is associated with a
--   studio resource.
studioComponentConfiguration_licenseServiceConfiguration :: Lens' StudioComponentConfiguration (Maybe LicenseServiceConfiguration)

-- | The configuration for a shared file storage system that is associated
--   with a studio resource.
studioComponentConfiguration_sharedFileSystemConfiguration :: Lens' StudioComponentConfiguration (Maybe SharedFileSystemConfiguration)

-- | The configuration for a render farm that is associated with a studio
--   resource.
studioComponentConfiguration_computeFarmConfiguration :: Lens' StudioComponentConfiguration (Maybe ComputeFarmConfiguration)
instance GHC.Generics.Generic Network.AWS.Nimble.Types.StudioComponentConfiguration.StudioComponentConfiguration
instance GHC.Show.Show Network.AWS.Nimble.Types.StudioComponentConfiguration.StudioComponentConfiguration
instance GHC.Read.Read Network.AWS.Nimble.Types.StudioComponentConfiguration.StudioComponentConfiguration
instance GHC.Classes.Eq Network.AWS.Nimble.Types.StudioComponentConfiguration.StudioComponentConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Nimble.Types.StudioComponentConfiguration.StudioComponentConfiguration
instance Data.Hashable.Class.Hashable Network.AWS.Nimble.Types.StudioComponentConfiguration.StudioComponentConfiguration
instance Control.DeepSeq.NFData Network.AWS.Nimble.Types.StudioComponentConfiguration.StudioComponentConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Nimble.Types.StudioComponentConfiguration.StudioComponentConfiguration


module Network.AWS.Nimble.Types.StudioComponentInitializationScriptRunContext

newtype StudioComponentInitializationScriptRunContext
StudioComponentInitializationScriptRunContext' :: Text -> StudioComponentInitializationScriptRunContext
[fromStudioComponentInitializationScriptRunContext] :: StudioComponentInitializationScriptRunContext -> Text
pattern StudioComponentInitializationScriptRunContext_SYSTEM_INITIALIZATION :: StudioComponentInitializationScriptRunContext
pattern StudioComponentInitializationScriptRunContext_USER_INITIALIZATION :: StudioComponentInitializationScriptRunContext
instance Network.AWS.Data.XML.ToXML Network.AWS.Nimble.Types.StudioComponentInitializationScriptRunContext.StudioComponentInitializationScriptRunContext
instance Network.AWS.Data.XML.FromXML Network.AWS.Nimble.Types.StudioComponentInitializationScriptRunContext.StudioComponentInitializationScriptRunContext
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Nimble.Types.StudioComponentInitializationScriptRunContext.StudioComponentInitializationScriptRunContext
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Nimble.Types.StudioComponentInitializationScriptRunContext.StudioComponentInitializationScriptRunContext
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Nimble.Types.StudioComponentInitializationScriptRunContext.StudioComponentInitializationScriptRunContext
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Nimble.Types.StudioComponentInitializationScriptRunContext.StudioComponentInitializationScriptRunContext
instance Network.AWS.Data.Query.ToQuery Network.AWS.Nimble.Types.StudioComponentInitializationScriptRunContext.StudioComponentInitializationScriptRunContext
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Nimble.Types.StudioComponentInitializationScriptRunContext.StudioComponentInitializationScriptRunContext
instance Network.AWS.Data.Log.ToLog Network.AWS.Nimble.Types.StudioComponentInitializationScriptRunContext.StudioComponentInitializationScriptRunContext
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Nimble.Types.StudioComponentInitializationScriptRunContext.StudioComponentInitializationScriptRunContext
instance Network.AWS.Data.Text.ToText Network.AWS.Nimble.Types.StudioComponentInitializationScriptRunContext.StudioComponentInitializationScriptRunContext
instance Network.AWS.Data.Text.FromText Network.AWS.Nimble.Types.StudioComponentInitializationScriptRunContext.StudioComponentInitializationScriptRunContext
instance Control.DeepSeq.NFData Network.AWS.Nimble.Types.StudioComponentInitializationScriptRunContext.StudioComponentInitializationScriptRunContext
instance Data.Hashable.Class.Hashable Network.AWS.Nimble.Types.StudioComponentInitializationScriptRunContext.StudioComponentInitializationScriptRunContext
instance GHC.Generics.Generic Network.AWS.Nimble.Types.StudioComponentInitializationScriptRunContext.StudioComponentInitializationScriptRunContext
instance GHC.Classes.Ord Network.AWS.Nimble.Types.StudioComponentInitializationScriptRunContext.StudioComponentInitializationScriptRunContext
instance GHC.Classes.Eq Network.AWS.Nimble.Types.StudioComponentInitializationScriptRunContext.StudioComponentInitializationScriptRunContext
instance GHC.Read.Read Network.AWS.Nimble.Types.StudioComponentInitializationScriptRunContext.StudioComponentInitializationScriptRunContext
instance GHC.Show.Show Network.AWS.Nimble.Types.StudioComponentInitializationScriptRunContext.StudioComponentInitializationScriptRunContext


module Network.AWS.Nimble.Types.StudioComponentInitializationScript

-- | Initialization scripts for studio components.
--   
--   <i>See:</i> <a>newStudioComponentInitializationScript</a> smart
--   constructor.
data StudioComponentInitializationScript
StudioComponentInitializationScript' :: Maybe Text -> Maybe LaunchProfilePlatform -> Maybe StudioComponentInitializationScriptRunContext -> Maybe Text -> StudioComponentInitializationScript

-- | The initialization script.
[$sel:script:StudioComponentInitializationScript'] :: StudioComponentInitializationScript -> Maybe Text

-- | The platform of the initialization script, either WINDOWS or LINUX.
[$sel:platform:StudioComponentInitializationScript'] :: StudioComponentInitializationScript -> Maybe LaunchProfilePlatform

-- | The method to use when running the initialization script.
[$sel:runContext:StudioComponentInitializationScript'] :: StudioComponentInitializationScript -> Maybe StudioComponentInitializationScriptRunContext

-- | The version number of the protocol that is used by the launch profile.
--   The only valid version is "2021-03-31".
[$sel:launchProfileProtocolVersion:StudioComponentInitializationScript'] :: StudioComponentInitializationScript -> Maybe Text

-- | Create a value of <a>StudioComponentInitializationScript</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:script:StudioComponentInitializationScript'</a>,
--   <a>studioComponentInitializationScript_script</a> - The initialization
--   script.
--   
--   <a>$sel:platform:StudioComponentInitializationScript'</a>,
--   <a>studioComponentInitializationScript_platform</a> - The platform of
--   the initialization script, either WINDOWS or LINUX.
--   
--   <a>$sel:runContext:StudioComponentInitializationScript'</a>,
--   <a>studioComponentInitializationScript_runContext</a> - The method to
--   use when running the initialization script.
--   
--   
--   <a>$sel:launchProfileProtocolVersion:StudioComponentInitializationScript'</a>,
--   <a>studioComponentInitializationScript_launchProfileProtocolVersion</a>
--   - The version number of the protocol that is used by the launch
--   profile. The only valid version is "2021-03-31".
newStudioComponentInitializationScript :: StudioComponentInitializationScript

-- | The initialization script.
studioComponentInitializationScript_script :: Lens' StudioComponentInitializationScript (Maybe Text)

-- | The platform of the initialization script, either WINDOWS or LINUX.
studioComponentInitializationScript_platform :: Lens' StudioComponentInitializationScript (Maybe LaunchProfilePlatform)

-- | The method to use when running the initialization script.
studioComponentInitializationScript_runContext :: Lens' StudioComponentInitializationScript (Maybe StudioComponentInitializationScriptRunContext)

-- | The version number of the protocol that is used by the launch profile.
--   The only valid version is "2021-03-31".
studioComponentInitializationScript_launchProfileProtocolVersion :: Lens' StudioComponentInitializationScript (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Nimble.Types.StudioComponentInitializationScript.StudioComponentInitializationScript
instance GHC.Show.Show Network.AWS.Nimble.Types.StudioComponentInitializationScript.StudioComponentInitializationScript
instance GHC.Read.Read Network.AWS.Nimble.Types.StudioComponentInitializationScript.StudioComponentInitializationScript
instance GHC.Classes.Eq Network.AWS.Nimble.Types.StudioComponentInitializationScript.StudioComponentInitializationScript
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Nimble.Types.StudioComponentInitializationScript.StudioComponentInitializationScript
instance Data.Hashable.Class.Hashable Network.AWS.Nimble.Types.StudioComponentInitializationScript.StudioComponentInitializationScript
instance Control.DeepSeq.NFData Network.AWS.Nimble.Types.StudioComponentInitializationScript.StudioComponentInitializationScript
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Nimble.Types.StudioComponentInitializationScript.StudioComponentInitializationScript


module Network.AWS.Nimble.Types.StudioComponentState

-- | The current state of the studio component resource.
--   
--   While a studio component is being created, modified, or deleted, its
--   state will equal "CREATE_IN_PROGRESS", "UPDATE_IN_PROGRESS", or
--   "DELETE_IN_PROGRESS"
--   
--   These are called 'transition states'.
--   
--   No modifications may be made to the studio component while it is in a
--   transition state.
--   
--   If creation of the resource fails, the state will change to
--   `CREATE_FAILED`. The resource StatusCode and StatusMessage will
--   provide more information of why creation failed. The resource in this
--   state will automatically be deleted from your account after a period
--   of time.
--   
--   If updating the resource fails, the state will change to
--   `UPDATE_FAILED`. The resource StatusCode and StatusMessage will
--   provide more information of why the update failed. The resource will
--   be returned to the state it was in when the update request was
--   invoked.
--   
--   If deleting the resource fails, the state will change to
--   `DELETE_FAILED`. The resource StatusCode and StatusMessage will
--   provide more information of why the update failed. The resource will
--   be returned to the state it was in when the update request was
--   invoked. After the resource is deleted successfully, it will change to
--   the "DELETED" state. The resource will no longer count against service
--   quotas and cannot be used or acted upon any futher. It will be removed
--   from your account after a period of time.
newtype StudioComponentState
StudioComponentState' :: Text -> StudioComponentState
[fromStudioComponentState] :: StudioComponentState -> Text
pattern StudioComponentState_CREATE_FAILED :: StudioComponentState
pattern StudioComponentState_CREATE_IN_PROGRESS :: StudioComponentState
pattern StudioComponentState_DELETED :: StudioComponentState
pattern StudioComponentState_DELETE_FAILED :: StudioComponentState
pattern StudioComponentState_DELETE_IN_PROGRESS :: StudioComponentState
pattern StudioComponentState_READY :: StudioComponentState
pattern StudioComponentState_UPDATE_FAILED :: StudioComponentState
pattern StudioComponentState_UPDATE_IN_PROGRESS :: StudioComponentState
instance Network.AWS.Data.XML.ToXML Network.AWS.Nimble.Types.StudioComponentState.StudioComponentState
instance Network.AWS.Data.XML.FromXML Network.AWS.Nimble.Types.StudioComponentState.StudioComponentState
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Nimble.Types.StudioComponentState.StudioComponentState
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Nimble.Types.StudioComponentState.StudioComponentState
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Nimble.Types.StudioComponentState.StudioComponentState
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Nimble.Types.StudioComponentState.StudioComponentState
instance Network.AWS.Data.Query.ToQuery Network.AWS.Nimble.Types.StudioComponentState.StudioComponentState
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Nimble.Types.StudioComponentState.StudioComponentState
instance Network.AWS.Data.Log.ToLog Network.AWS.Nimble.Types.StudioComponentState.StudioComponentState
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Nimble.Types.StudioComponentState.StudioComponentState
instance Network.AWS.Data.Text.ToText Network.AWS.Nimble.Types.StudioComponentState.StudioComponentState
instance Network.AWS.Data.Text.FromText Network.AWS.Nimble.Types.StudioComponentState.StudioComponentState
instance Control.DeepSeq.NFData Network.AWS.Nimble.Types.StudioComponentState.StudioComponentState
instance Data.Hashable.Class.Hashable Network.AWS.Nimble.Types.StudioComponentState.StudioComponentState
instance GHC.Generics.Generic Network.AWS.Nimble.Types.StudioComponentState.StudioComponentState
instance GHC.Classes.Ord Network.AWS.Nimble.Types.StudioComponentState.StudioComponentState
instance GHC.Classes.Eq Network.AWS.Nimble.Types.StudioComponentState.StudioComponentState
instance GHC.Read.Read Network.AWS.Nimble.Types.StudioComponentState.StudioComponentState
instance GHC.Show.Show Network.AWS.Nimble.Types.StudioComponentState.StudioComponentState


module Network.AWS.Nimble.Types.StudioComponentStatusCode

-- | The current status of the studio component resource.
--   
--   When the resource is in the 'READY' state, the status code signals
--   what the last mutation made to the resource was.
--   
--   When the resource is in a CREATE_FAILED/UPDATE_FAILED/DELETE_FAILED
--   state, the status code signals what went wrong and why the mutation
--   failed.
newtype StudioComponentStatusCode
StudioComponentStatusCode' :: Text -> StudioComponentStatusCode
[fromStudioComponentStatusCode] :: StudioComponentStatusCode -> Text
pattern StudioComponentStatusCode_ACTIVE_DIRECTORY_ALREADY_EXISTS :: StudioComponentStatusCode
pattern StudioComponentStatusCode_ENCRYPTION_KEY_ACCESS_DENIED :: StudioComponentStatusCode
pattern StudioComponentStatusCode_ENCRYPTION_KEY_NOT_FOUND :: StudioComponentStatusCode
pattern StudioComponentStatusCode_INTERNAL_ERROR :: StudioComponentStatusCode
pattern StudioComponentStatusCode_STUDIO_COMPONENT_CREATED :: StudioComponentStatusCode
pattern StudioComponentStatusCode_STUDIO_COMPONENT_CREATE_IN_PROGRESS :: StudioComponentStatusCode
pattern StudioComponentStatusCode_STUDIO_COMPONENT_DELETED :: StudioComponentStatusCode
pattern StudioComponentStatusCode_STUDIO_COMPONENT_DELETE_IN_PROGRESS :: StudioComponentStatusCode
pattern StudioComponentStatusCode_STUDIO_COMPONENT_UPDATED :: StudioComponentStatusCode
pattern StudioComponentStatusCode_STUDIO_COMPONENT_UPDATE_IN_PROGRESS :: StudioComponentStatusCode
instance Network.AWS.Data.XML.ToXML Network.AWS.Nimble.Types.StudioComponentStatusCode.StudioComponentStatusCode
instance Network.AWS.Data.XML.FromXML Network.AWS.Nimble.Types.StudioComponentStatusCode.StudioComponentStatusCode
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Nimble.Types.StudioComponentStatusCode.StudioComponentStatusCode
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Nimble.Types.StudioComponentStatusCode.StudioComponentStatusCode
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Nimble.Types.StudioComponentStatusCode.StudioComponentStatusCode
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Nimble.Types.StudioComponentStatusCode.StudioComponentStatusCode
instance Network.AWS.Data.Query.ToQuery Network.AWS.Nimble.Types.StudioComponentStatusCode.StudioComponentStatusCode
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Nimble.Types.StudioComponentStatusCode.StudioComponentStatusCode
instance Network.AWS.Data.Log.ToLog Network.AWS.Nimble.Types.StudioComponentStatusCode.StudioComponentStatusCode
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Nimble.Types.StudioComponentStatusCode.StudioComponentStatusCode
instance Network.AWS.Data.Text.ToText Network.AWS.Nimble.Types.StudioComponentStatusCode.StudioComponentStatusCode
instance Network.AWS.Data.Text.FromText Network.AWS.Nimble.Types.StudioComponentStatusCode.StudioComponentStatusCode
instance Control.DeepSeq.NFData Network.AWS.Nimble.Types.StudioComponentStatusCode.StudioComponentStatusCode
instance Data.Hashable.Class.Hashable Network.AWS.Nimble.Types.StudioComponentStatusCode.StudioComponentStatusCode
instance GHC.Generics.Generic Network.AWS.Nimble.Types.StudioComponentStatusCode.StudioComponentStatusCode
instance GHC.Classes.Ord Network.AWS.Nimble.Types.StudioComponentStatusCode.StudioComponentStatusCode
instance GHC.Classes.Eq Network.AWS.Nimble.Types.StudioComponentStatusCode.StudioComponentStatusCode
instance GHC.Read.Read Network.AWS.Nimble.Types.StudioComponentStatusCode.StudioComponentStatusCode
instance GHC.Show.Show Network.AWS.Nimble.Types.StudioComponentStatusCode.StudioComponentStatusCode


module Network.AWS.Nimble.Types.StudioComponentSubtype

newtype StudioComponentSubtype
StudioComponentSubtype' :: Text -> StudioComponentSubtype
[fromStudioComponentSubtype] :: StudioComponentSubtype -> Text
pattern StudioComponentSubtype_AMAZON_FSX_FOR_LUSTRE :: StudioComponentSubtype
pattern StudioComponentSubtype_AMAZON_FSX_FOR_WINDOWS :: StudioComponentSubtype
pattern StudioComponentSubtype_AWS_MANAGED_MICROSOFT_AD :: StudioComponentSubtype
pattern StudioComponentSubtype_CUSTOM :: StudioComponentSubtype
instance Network.AWS.Data.XML.ToXML Network.AWS.Nimble.Types.StudioComponentSubtype.StudioComponentSubtype
instance Network.AWS.Data.XML.FromXML Network.AWS.Nimble.Types.StudioComponentSubtype.StudioComponentSubtype
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Nimble.Types.StudioComponentSubtype.StudioComponentSubtype
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Nimble.Types.StudioComponentSubtype.StudioComponentSubtype
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Nimble.Types.StudioComponentSubtype.StudioComponentSubtype
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Nimble.Types.StudioComponentSubtype.StudioComponentSubtype
instance Network.AWS.Data.Query.ToQuery Network.AWS.Nimble.Types.StudioComponentSubtype.StudioComponentSubtype
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Nimble.Types.StudioComponentSubtype.StudioComponentSubtype
instance Network.AWS.Data.Log.ToLog Network.AWS.Nimble.Types.StudioComponentSubtype.StudioComponentSubtype
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Nimble.Types.StudioComponentSubtype.StudioComponentSubtype
instance Network.AWS.Data.Text.ToText Network.AWS.Nimble.Types.StudioComponentSubtype.StudioComponentSubtype
instance Network.AWS.Data.Text.FromText Network.AWS.Nimble.Types.StudioComponentSubtype.StudioComponentSubtype
instance Control.DeepSeq.NFData Network.AWS.Nimble.Types.StudioComponentSubtype.StudioComponentSubtype
instance Data.Hashable.Class.Hashable Network.AWS.Nimble.Types.StudioComponentSubtype.StudioComponentSubtype
instance GHC.Generics.Generic Network.AWS.Nimble.Types.StudioComponentSubtype.StudioComponentSubtype
instance GHC.Classes.Ord Network.AWS.Nimble.Types.StudioComponentSubtype.StudioComponentSubtype
instance GHC.Classes.Eq Network.AWS.Nimble.Types.StudioComponentSubtype.StudioComponentSubtype
instance GHC.Read.Read Network.AWS.Nimble.Types.StudioComponentSubtype.StudioComponentSubtype
instance GHC.Show.Show Network.AWS.Nimble.Types.StudioComponentSubtype.StudioComponentSubtype


module Network.AWS.Nimble.Types.StudioComponentType

newtype StudioComponentType
StudioComponentType' :: Text -> StudioComponentType
[fromStudioComponentType] :: StudioComponentType -> Text
pattern StudioComponentType_ACTIVE_DIRECTORY :: StudioComponentType
pattern StudioComponentType_COMPUTE_FARM :: StudioComponentType
pattern StudioComponentType_CUSTOM :: StudioComponentType
pattern StudioComponentType_LICENSE_SERVICE :: StudioComponentType
pattern StudioComponentType_SHARED_FILE_SYSTEM :: StudioComponentType
instance Network.AWS.Data.XML.ToXML Network.AWS.Nimble.Types.StudioComponentType.StudioComponentType
instance Network.AWS.Data.XML.FromXML Network.AWS.Nimble.Types.StudioComponentType.StudioComponentType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Nimble.Types.StudioComponentType.StudioComponentType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Nimble.Types.StudioComponentType.StudioComponentType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Nimble.Types.StudioComponentType.StudioComponentType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Nimble.Types.StudioComponentType.StudioComponentType
instance Network.AWS.Data.Query.ToQuery Network.AWS.Nimble.Types.StudioComponentType.StudioComponentType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Nimble.Types.StudioComponentType.StudioComponentType
instance Network.AWS.Data.Log.ToLog Network.AWS.Nimble.Types.StudioComponentType.StudioComponentType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Nimble.Types.StudioComponentType.StudioComponentType
instance Network.AWS.Data.Text.ToText Network.AWS.Nimble.Types.StudioComponentType.StudioComponentType
instance Network.AWS.Data.Text.FromText Network.AWS.Nimble.Types.StudioComponentType.StudioComponentType
instance Control.DeepSeq.NFData Network.AWS.Nimble.Types.StudioComponentType.StudioComponentType
instance Data.Hashable.Class.Hashable Network.AWS.Nimble.Types.StudioComponentType.StudioComponentType
instance GHC.Generics.Generic Network.AWS.Nimble.Types.StudioComponentType.StudioComponentType
instance GHC.Classes.Ord Network.AWS.Nimble.Types.StudioComponentType.StudioComponentType
instance GHC.Classes.Eq Network.AWS.Nimble.Types.StudioComponentType.StudioComponentType
instance GHC.Read.Read Network.AWS.Nimble.Types.StudioComponentType.StudioComponentType
instance GHC.Show.Show Network.AWS.Nimble.Types.StudioComponentType.StudioComponentType


module Network.AWS.Nimble.Types.StudioComponentSummary

-- | <i>See:</i> <a>newStudioComponentSummary</a> smart constructor.
data StudioComponentSummary
StudioComponentSummary' :: Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe StudioComponentSubtype -> Maybe Text -> Maybe POSIX -> Maybe StudioComponentType -> Maybe Text -> StudioComponentSummary

-- | The unique identifier for a studio component resource.
[$sel:studioComponentId:StudioComponentSummary'] :: StudioComponentSummary -> Maybe Text

-- | The Unix epoch timestamp in seconds for when the resource was created.
[$sel:createdAt:StudioComponentSummary'] :: StudioComponentSummary -> Maybe POSIX

-- | The user ID of the user that created the studio component.
[$sel:createdBy:StudioComponentSummary'] :: StudioComponentSummary -> Maybe Text

-- | The user ID of the user that most recently updated the resource.
[$sel:updatedBy:StudioComponentSummary'] :: StudioComponentSummary -> Maybe Text

-- | The specific subtype of a studio component.
[$sel:subtype:StudioComponentSummary'] :: StudioComponentSummary -> Maybe StudioComponentSubtype

-- | The name for the studio component.
[$sel:name:StudioComponentSummary'] :: StudioComponentSummary -> Maybe Text

-- | The Unix epoch timestamp in seconds for when the resource was updated.
[$sel:updatedAt:StudioComponentSummary'] :: StudioComponentSummary -> Maybe POSIX

-- | The type of the studio component.
[$sel:type':StudioComponentSummary'] :: StudioComponentSummary -> Maybe StudioComponentType

-- | The description.
[$sel:description:StudioComponentSummary'] :: StudioComponentSummary -> Maybe Text

-- | Create a value of <a>StudioComponentSummary</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:studioComponentId:StudioComponentSummary'</a>,
--   <a>studioComponentSummary_studioComponentId</a> - The unique
--   identifier for a studio component resource.
--   
--   <a>$sel:createdAt:StudioComponentSummary'</a>,
--   <a>studioComponentSummary_createdAt</a> - The Unix epoch timestamp in
--   seconds for when the resource was created.
--   
--   <a>$sel:createdBy:StudioComponentSummary'</a>,
--   <a>studioComponentSummary_createdBy</a> - The user ID of the user that
--   created the studio component.
--   
--   <a>$sel:updatedBy:StudioComponentSummary'</a>,
--   <a>studioComponentSummary_updatedBy</a> - The user ID of the user that
--   most recently updated the resource.
--   
--   <a>$sel:subtype:StudioComponentSummary'</a>,
--   <a>studioComponentSummary_subtype</a> - The specific subtype of a
--   studio component.
--   
--   <a>$sel:name:StudioComponentSummary'</a>,
--   <a>studioComponentSummary_name</a> - The name for the studio
--   component.
--   
--   <a>$sel:updatedAt:StudioComponentSummary'</a>,
--   <a>studioComponentSummary_updatedAt</a> - The Unix epoch timestamp in
--   seconds for when the resource was updated.
--   
--   <a>$sel:type':StudioComponentSummary'</a>,
--   <a>studioComponentSummary_type</a> - The type of the studio component.
--   
--   <a>$sel:description:StudioComponentSummary'</a>,
--   <a>studioComponentSummary_description</a> - The description.
newStudioComponentSummary :: StudioComponentSummary

-- | The unique identifier for a studio component resource.
studioComponentSummary_studioComponentId :: Lens' StudioComponentSummary (Maybe Text)

-- | The Unix epoch timestamp in seconds for when the resource was created.
studioComponentSummary_createdAt :: Lens' StudioComponentSummary (Maybe UTCTime)

-- | The user ID of the user that created the studio component.
studioComponentSummary_createdBy :: Lens' StudioComponentSummary (Maybe Text)

-- | The user ID of the user that most recently updated the resource.
studioComponentSummary_updatedBy :: Lens' StudioComponentSummary (Maybe Text)

-- | The specific subtype of a studio component.
studioComponentSummary_subtype :: Lens' StudioComponentSummary (Maybe StudioComponentSubtype)

-- | The name for the studio component.
studioComponentSummary_name :: Lens' StudioComponentSummary (Maybe Text)

-- | The Unix epoch timestamp in seconds for when the resource was updated.
studioComponentSummary_updatedAt :: Lens' StudioComponentSummary (Maybe UTCTime)

-- | The type of the studio component.
studioComponentSummary_type :: Lens' StudioComponentSummary (Maybe StudioComponentType)

-- | The description.
studioComponentSummary_description :: Lens' StudioComponentSummary (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Nimble.Types.StudioComponentSummary.StudioComponentSummary
instance GHC.Show.Show Network.AWS.Nimble.Types.StudioComponentSummary.StudioComponentSummary
instance GHC.Read.Read Network.AWS.Nimble.Types.StudioComponentSummary.StudioComponentSummary
instance GHC.Classes.Eq Network.AWS.Nimble.Types.StudioComponentSummary.StudioComponentSummary
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Nimble.Types.StudioComponentSummary.StudioComponentSummary
instance Data.Hashable.Class.Hashable Network.AWS.Nimble.Types.StudioComponentSummary.StudioComponentSummary
instance Control.DeepSeq.NFData Network.AWS.Nimble.Types.StudioComponentSummary.StudioComponentSummary


module Network.AWS.Nimble.Types.StudioComponent

-- | A network that is used by a studio’s users and workflows, including
--   render farm, Active Directory, licensing, and file system.
--   
--   <i>See:</i> <a>newStudioComponent</a> smart constructor.
data StudioComponent
StudioComponent' :: Maybe [StudioComponentInitializationScript] -> Maybe StudioComponentState -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe (NonEmpty Text) -> Maybe Text -> Maybe StudioComponentSubtype -> Maybe Text -> Maybe Text -> Maybe [ScriptParameterKeyValue] -> Maybe POSIX -> Maybe StudioComponentType -> Maybe StudioComponentConfiguration -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe StudioComponentStatusCode -> StudioComponent

-- | Initialization scripts for studio components.
[$sel:initializationScripts:StudioComponent'] :: StudioComponent -> Maybe [StudioComponentInitializationScript]

-- | The current state.
[$sel:state:StudioComponent'] :: StudioComponent -> Maybe StudioComponentState

-- | The unique identifier for a studio component resource.
[$sel:studioComponentId:StudioComponent'] :: StudioComponent -> Maybe Text

-- | The ARN of the resource.
[$sel:arn:StudioComponent'] :: StudioComponent -> Maybe Text

-- | The Unix epoch timestamp in seconds for when the resource was created.
[$sel:createdAt:StudioComponent'] :: StudioComponent -> Maybe POSIX

-- | The user ID of the user that created the studio component.
[$sel:createdBy:StudioComponent'] :: StudioComponent -> Maybe Text

-- | The EC2 security groups that control access to the studio component.
[$sel:ec2SecurityGroupIds:StudioComponent'] :: StudioComponent -> Maybe (NonEmpty Text)

-- | The user ID of the user that most recently updated the resource.
[$sel:updatedBy:StudioComponent'] :: StudioComponent -> Maybe Text

-- | The specific subtype of a studio component.
[$sel:subtype:StudioComponent'] :: StudioComponent -> Maybe StudioComponentSubtype

-- | A friendly name for the studio component resource.
[$sel:name:StudioComponent'] :: StudioComponent -> Maybe Text

-- | The status message for the studio component.
[$sel:statusMessage:StudioComponent'] :: StudioComponent -> Maybe Text

-- | Parameters for the studio component scripts.
[$sel:scriptParameters:StudioComponent'] :: StudioComponent -> Maybe [ScriptParameterKeyValue]

-- | The Unix epoch timestamp in seconds for when the resource was updated.
[$sel:updatedAt:StudioComponent'] :: StudioComponent -> Maybe POSIX

-- | The type of the studio component.
[$sel:type':StudioComponent'] :: StudioComponent -> Maybe StudioComponentType

-- | The configuration of the studio component, based on component type.
[$sel:configuration:StudioComponent'] :: StudioComponent -> Maybe StudioComponentConfiguration

-- | A human-readable description for the studio component resource.
[$sel:description:StudioComponent'] :: StudioComponent -> Maybe Text

-- | A collection of labels, in the form of key:value pairs, that apply to
--   this resource.
[$sel:tags:StudioComponent'] :: StudioComponent -> Maybe (HashMap Text Text)

-- | The status code.
[$sel:statusCode:StudioComponent'] :: StudioComponent -> Maybe StudioComponentStatusCode

-- | Create a value of <a>StudioComponent</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:initializationScripts:StudioComponent'</a>,
--   <a>studioComponent_initializationScripts</a> - Initialization scripts
--   for studio components.
--   
--   <a>$sel:state:StudioComponent'</a>, <a>studioComponent_state</a> - The
--   current state.
--   
--   <a>$sel:studioComponentId:StudioComponent'</a>,
--   <a>studioComponent_studioComponentId</a> - The unique identifier for a
--   studio component resource.
--   
--   <a>$sel:arn:StudioComponent'</a>, <a>studioComponent_arn</a> - The ARN
--   of the resource.
--   
--   <a>$sel:createdAt:StudioComponent'</a>,
--   <a>studioComponent_createdAt</a> - The Unix epoch timestamp in seconds
--   for when the resource was created.
--   
--   <a>$sel:createdBy:StudioComponent'</a>,
--   <a>studioComponent_createdBy</a> - The user ID of the user that
--   created the studio component.
--   
--   <a>$sel:ec2SecurityGroupIds:StudioComponent'</a>,
--   <a>studioComponent_ec2SecurityGroupIds</a> - The EC2 security groups
--   that control access to the studio component.
--   
--   <a>$sel:updatedBy:StudioComponent'</a>,
--   <a>studioComponent_updatedBy</a> - The user ID of the user that most
--   recently updated the resource.
--   
--   <a>$sel:subtype:StudioComponent'</a>, <a>studioComponent_subtype</a> -
--   The specific subtype of a studio component.
--   
--   <a>$sel:name:StudioComponent'</a>, <a>studioComponent_name</a> - A
--   friendly name for the studio component resource.
--   
--   <a>$sel:statusMessage:StudioComponent'</a>,
--   <a>studioComponent_statusMessage</a> - The status message for the
--   studio component.
--   
--   <a>$sel:scriptParameters:StudioComponent'</a>,
--   <a>studioComponent_scriptParameters</a> - Parameters for the studio
--   component scripts.
--   
--   <a>$sel:updatedAt:StudioComponent'</a>,
--   <a>studioComponent_updatedAt</a> - The Unix epoch timestamp in seconds
--   for when the resource was updated.
--   
--   <a>$sel:type':StudioComponent'</a>, <a>studioComponent_type</a> - The
--   type of the studio component.
--   
--   <a>$sel:configuration:StudioComponent'</a>,
--   <a>studioComponent_configuration</a> - The configuration of the studio
--   component, based on component type.
--   
--   <a>$sel:description:StudioComponent'</a>,
--   <a>studioComponent_description</a> - A human-readable description for
--   the studio component resource.
--   
--   <a>$sel:tags:StudioComponent'</a>, <a>studioComponent_tags</a> - A
--   collection of labels, in the form of key:value pairs, that apply to
--   this resource.
--   
--   <a>$sel:statusCode:StudioComponent'</a>,
--   <a>studioComponent_statusCode</a> - The status code.
newStudioComponent :: StudioComponent

-- | Initialization scripts for studio components.
studioComponent_initializationScripts :: Lens' StudioComponent (Maybe [StudioComponentInitializationScript])

-- | The current state.
studioComponent_state :: Lens' StudioComponent (Maybe StudioComponentState)

-- | The unique identifier for a studio component resource.
studioComponent_studioComponentId :: Lens' StudioComponent (Maybe Text)

-- | The ARN of the resource.
studioComponent_arn :: Lens' StudioComponent (Maybe Text)

-- | The Unix epoch timestamp in seconds for when the resource was created.
studioComponent_createdAt :: Lens' StudioComponent (Maybe UTCTime)

-- | The user ID of the user that created the studio component.
studioComponent_createdBy :: Lens' StudioComponent (Maybe Text)

-- | The EC2 security groups that control access to the studio component.
studioComponent_ec2SecurityGroupIds :: Lens' StudioComponent (Maybe (NonEmpty Text))

-- | The user ID of the user that most recently updated the resource.
studioComponent_updatedBy :: Lens' StudioComponent (Maybe Text)

-- | The specific subtype of a studio component.
studioComponent_subtype :: Lens' StudioComponent (Maybe StudioComponentSubtype)

-- | A friendly name for the studio component resource.
studioComponent_name :: Lens' StudioComponent (Maybe Text)

-- | The status message for the studio component.
studioComponent_statusMessage :: Lens' StudioComponent (Maybe Text)

-- | Parameters for the studio component scripts.
studioComponent_scriptParameters :: Lens' StudioComponent (Maybe [ScriptParameterKeyValue])

-- | The Unix epoch timestamp in seconds for when the resource was updated.
studioComponent_updatedAt :: Lens' StudioComponent (Maybe UTCTime)

-- | The type of the studio component.
studioComponent_type :: Lens' StudioComponent (Maybe StudioComponentType)

-- | The configuration of the studio component, based on component type.
studioComponent_configuration :: Lens' StudioComponent (Maybe StudioComponentConfiguration)

-- | A human-readable description for the studio component resource.
studioComponent_description :: Lens' StudioComponent (Maybe Text)

-- | A collection of labels, in the form of key:value pairs, that apply to
--   this resource.
studioComponent_tags :: Lens' StudioComponent (Maybe (HashMap Text Text))

-- | The status code.
studioComponent_statusCode :: Lens' StudioComponent (Maybe StudioComponentStatusCode)
instance GHC.Generics.Generic Network.AWS.Nimble.Types.StudioComponent.StudioComponent
instance GHC.Show.Show Network.AWS.Nimble.Types.StudioComponent.StudioComponent
instance GHC.Read.Read Network.AWS.Nimble.Types.StudioComponent.StudioComponent
instance GHC.Classes.Eq Network.AWS.Nimble.Types.StudioComponent.StudioComponent
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Nimble.Types.StudioComponent.StudioComponent
instance Data.Hashable.Class.Hashable Network.AWS.Nimble.Types.StudioComponent.StudioComponent
instance Control.DeepSeq.NFData Network.AWS.Nimble.Types.StudioComponent.StudioComponent


module Network.AWS.Nimble.Types.StudioEncryptionConfigurationKeyType

-- | The type of KMS key that is used to encrypt studio data.
newtype StudioEncryptionConfigurationKeyType
StudioEncryptionConfigurationKeyType' :: Text -> StudioEncryptionConfigurationKeyType
[fromStudioEncryptionConfigurationKeyType] :: StudioEncryptionConfigurationKeyType -> Text
pattern StudioEncryptionConfigurationKeyType_AWS_OWNED_KEY :: StudioEncryptionConfigurationKeyType
pattern StudioEncryptionConfigurationKeyType_CUSTOMER_MANAGED_KEY :: StudioEncryptionConfigurationKeyType
instance Network.AWS.Data.XML.ToXML Network.AWS.Nimble.Types.StudioEncryptionConfigurationKeyType.StudioEncryptionConfigurationKeyType
instance Network.AWS.Data.XML.FromXML Network.AWS.Nimble.Types.StudioEncryptionConfigurationKeyType.StudioEncryptionConfigurationKeyType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Nimble.Types.StudioEncryptionConfigurationKeyType.StudioEncryptionConfigurationKeyType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Nimble.Types.StudioEncryptionConfigurationKeyType.StudioEncryptionConfigurationKeyType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Nimble.Types.StudioEncryptionConfigurationKeyType.StudioEncryptionConfigurationKeyType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Nimble.Types.StudioEncryptionConfigurationKeyType.StudioEncryptionConfigurationKeyType
instance Network.AWS.Data.Query.ToQuery Network.AWS.Nimble.Types.StudioEncryptionConfigurationKeyType.StudioEncryptionConfigurationKeyType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Nimble.Types.StudioEncryptionConfigurationKeyType.StudioEncryptionConfigurationKeyType
instance Network.AWS.Data.Log.ToLog Network.AWS.Nimble.Types.StudioEncryptionConfigurationKeyType.StudioEncryptionConfigurationKeyType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Nimble.Types.StudioEncryptionConfigurationKeyType.StudioEncryptionConfigurationKeyType
instance Network.AWS.Data.Text.ToText Network.AWS.Nimble.Types.StudioEncryptionConfigurationKeyType.StudioEncryptionConfigurationKeyType
instance Network.AWS.Data.Text.FromText Network.AWS.Nimble.Types.StudioEncryptionConfigurationKeyType.StudioEncryptionConfigurationKeyType
instance Control.DeepSeq.NFData Network.AWS.Nimble.Types.StudioEncryptionConfigurationKeyType.StudioEncryptionConfigurationKeyType
instance Data.Hashable.Class.Hashable Network.AWS.Nimble.Types.StudioEncryptionConfigurationKeyType.StudioEncryptionConfigurationKeyType
instance GHC.Generics.Generic Network.AWS.Nimble.Types.StudioEncryptionConfigurationKeyType.StudioEncryptionConfigurationKeyType
instance GHC.Classes.Ord Network.AWS.Nimble.Types.StudioEncryptionConfigurationKeyType.StudioEncryptionConfigurationKeyType
instance GHC.Classes.Eq Network.AWS.Nimble.Types.StudioEncryptionConfigurationKeyType.StudioEncryptionConfigurationKeyType
instance GHC.Read.Read Network.AWS.Nimble.Types.StudioEncryptionConfigurationKeyType.StudioEncryptionConfigurationKeyType
instance GHC.Show.Show Network.AWS.Nimble.Types.StudioEncryptionConfigurationKeyType.StudioEncryptionConfigurationKeyType


module Network.AWS.Nimble.Types.StudioEncryptionConfiguration

-- | Configuration of the encryption method that is used for the studio.
--   
--   <i>See:</i> <a>newStudioEncryptionConfiguration</a> smart constructor.
data StudioEncryptionConfiguration
StudioEncryptionConfiguration' :: Maybe Text -> StudioEncryptionConfigurationKeyType -> StudioEncryptionConfiguration

-- | The ARN for a KMS key that is used to encrypt studio data.
[$sel:keyArn:StudioEncryptionConfiguration'] :: StudioEncryptionConfiguration -> Maybe Text

-- | The type of KMS key that is used to encrypt studio data.
[$sel:keyType:StudioEncryptionConfiguration'] :: StudioEncryptionConfiguration -> StudioEncryptionConfigurationKeyType

-- | Create a value of <a>StudioEncryptionConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:keyArn:StudioEncryptionConfiguration'</a>,
--   <a>studioEncryptionConfiguration_keyArn</a> - The ARN for a KMS key
--   that is used to encrypt studio data.
--   
--   <a>$sel:keyType:StudioEncryptionConfiguration'</a>,
--   <a>studioEncryptionConfiguration_keyType</a> - The type of KMS key
--   that is used to encrypt studio data.
newStudioEncryptionConfiguration :: StudioEncryptionConfigurationKeyType -> StudioEncryptionConfiguration

-- | The ARN for a KMS key that is used to encrypt studio data.
studioEncryptionConfiguration_keyArn :: Lens' StudioEncryptionConfiguration (Maybe Text)

-- | The type of KMS key that is used to encrypt studio data.
studioEncryptionConfiguration_keyType :: Lens' StudioEncryptionConfiguration StudioEncryptionConfigurationKeyType
instance GHC.Generics.Generic Network.AWS.Nimble.Types.StudioEncryptionConfiguration.StudioEncryptionConfiguration
instance GHC.Show.Show Network.AWS.Nimble.Types.StudioEncryptionConfiguration.StudioEncryptionConfiguration
instance GHC.Read.Read Network.AWS.Nimble.Types.StudioEncryptionConfiguration.StudioEncryptionConfiguration
instance GHC.Classes.Eq Network.AWS.Nimble.Types.StudioEncryptionConfiguration.StudioEncryptionConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Nimble.Types.StudioEncryptionConfiguration.StudioEncryptionConfiguration
instance Data.Hashable.Class.Hashable Network.AWS.Nimble.Types.StudioEncryptionConfiguration.StudioEncryptionConfiguration
instance Control.DeepSeq.NFData Network.AWS.Nimble.Types.StudioEncryptionConfiguration.StudioEncryptionConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Nimble.Types.StudioEncryptionConfiguration.StudioEncryptionConfiguration


module Network.AWS.Nimble.Types.StudioPersona

newtype StudioPersona
StudioPersona' :: Text -> StudioPersona
[fromStudioPersona] :: StudioPersona -> Text
pattern StudioPersona_ADMINISTRATOR :: StudioPersona
instance Network.AWS.Data.XML.ToXML Network.AWS.Nimble.Types.StudioPersona.StudioPersona
instance Network.AWS.Data.XML.FromXML Network.AWS.Nimble.Types.StudioPersona.StudioPersona
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Nimble.Types.StudioPersona.StudioPersona
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Nimble.Types.StudioPersona.StudioPersona
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Nimble.Types.StudioPersona.StudioPersona
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Nimble.Types.StudioPersona.StudioPersona
instance Network.AWS.Data.Query.ToQuery Network.AWS.Nimble.Types.StudioPersona.StudioPersona
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Nimble.Types.StudioPersona.StudioPersona
instance Network.AWS.Data.Log.ToLog Network.AWS.Nimble.Types.StudioPersona.StudioPersona
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Nimble.Types.StudioPersona.StudioPersona
instance Network.AWS.Data.Text.ToText Network.AWS.Nimble.Types.StudioPersona.StudioPersona
instance Network.AWS.Data.Text.FromText Network.AWS.Nimble.Types.StudioPersona.StudioPersona
instance Control.DeepSeq.NFData Network.AWS.Nimble.Types.StudioPersona.StudioPersona
instance Data.Hashable.Class.Hashable Network.AWS.Nimble.Types.StudioPersona.StudioPersona
instance GHC.Generics.Generic Network.AWS.Nimble.Types.StudioPersona.StudioPersona
instance GHC.Classes.Ord Network.AWS.Nimble.Types.StudioPersona.StudioPersona
instance GHC.Classes.Eq Network.AWS.Nimble.Types.StudioPersona.StudioPersona
instance GHC.Read.Read Network.AWS.Nimble.Types.StudioPersona.StudioPersona
instance GHC.Show.Show Network.AWS.Nimble.Types.StudioPersona.StudioPersona


module Network.AWS.Nimble.Types.StudioMembership

-- | <i>See:</i> <a>newStudioMembership</a> smart constructor.
data StudioMembership
StudioMembership' :: Maybe Text -> Maybe Text -> Maybe StudioPersona -> StudioMembership

-- | The ID of the identity store.
[$sel:identityStoreId:StudioMembership'] :: StudioMembership -> Maybe Text

-- | The principal ID.
[$sel:principalId:StudioMembership'] :: StudioMembership -> Maybe Text

-- | The persona.
[$sel:persona:StudioMembership'] :: StudioMembership -> Maybe StudioPersona

-- | Create a value of <a>StudioMembership</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:identityStoreId:StudioMembership'</a>,
--   <a>studioMembership_identityStoreId</a> - The ID of the identity
--   store.
--   
--   <a>$sel:principalId:StudioMembership'</a>,
--   <a>studioMembership_principalId</a> - The principal ID.
--   
--   <a>$sel:persona:StudioMembership'</a>, <a>studioMembership_persona</a>
--   - The persona.
newStudioMembership :: StudioMembership

-- | The ID of the identity store.
studioMembership_identityStoreId :: Lens' StudioMembership (Maybe Text)

-- | The principal ID.
studioMembership_principalId :: Lens' StudioMembership (Maybe Text)

-- | The persona.
studioMembership_persona :: Lens' StudioMembership (Maybe StudioPersona)
instance GHC.Generics.Generic Network.AWS.Nimble.Types.StudioMembership.StudioMembership
instance GHC.Show.Show Network.AWS.Nimble.Types.StudioMembership.StudioMembership
instance GHC.Read.Read Network.AWS.Nimble.Types.StudioMembership.StudioMembership
instance GHC.Classes.Eq Network.AWS.Nimble.Types.StudioMembership.StudioMembership
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Nimble.Types.StudioMembership.StudioMembership
instance Data.Hashable.Class.Hashable Network.AWS.Nimble.Types.StudioMembership.StudioMembership
instance Control.DeepSeq.NFData Network.AWS.Nimble.Types.StudioMembership.StudioMembership


module Network.AWS.Nimble.Types.NewStudioMember

-- | <i>See:</i> <a>newNewStudioMember</a> smart constructor.
data NewStudioMember
NewStudioMember' :: StudioPersona -> Text -> NewStudioMember

-- | The persona.
[$sel:persona:NewStudioMember'] :: NewStudioMember -> StudioPersona

-- | The principal ID.
[$sel:principalId:NewStudioMember'] :: NewStudioMember -> Text

-- | Create a value of <a>NewStudioMember</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:persona:NewStudioMember'</a>, <a>newStudioMember_persona</a> -
--   The persona.
--   
--   <a>$sel:principalId:NewStudioMember'</a>,
--   <a>newStudioMember_principalId</a> - The principal ID.
newNewStudioMember :: StudioPersona -> Text -> NewStudioMember

-- | The persona.
newStudioMember_persona :: Lens' NewStudioMember StudioPersona

-- | The principal ID.
newStudioMember_principalId :: Lens' NewStudioMember Text
instance GHC.Generics.Generic Network.AWS.Nimble.Types.NewStudioMember.NewStudioMember
instance GHC.Show.Show Network.AWS.Nimble.Types.NewStudioMember.NewStudioMember
instance GHC.Read.Read Network.AWS.Nimble.Types.NewStudioMember.NewStudioMember
instance GHC.Classes.Eq Network.AWS.Nimble.Types.NewStudioMember.NewStudioMember
instance Data.Hashable.Class.Hashable Network.AWS.Nimble.Types.NewStudioMember.NewStudioMember
instance Control.DeepSeq.NFData Network.AWS.Nimble.Types.NewStudioMember.NewStudioMember
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Nimble.Types.NewStudioMember.NewStudioMember


module Network.AWS.Nimble.Types.StudioState

newtype StudioState
StudioState' :: Text -> StudioState
[fromStudioState] :: StudioState -> Text
pattern StudioState_CREATE_FAILED :: StudioState
pattern StudioState_CREATE_IN_PROGRESS :: StudioState
pattern StudioState_DELETED :: StudioState
pattern StudioState_DELETE_FAILED :: StudioState
pattern StudioState_DELETE_IN_PROGRESS :: StudioState
pattern StudioState_READY :: StudioState
pattern StudioState_UPDATE_FAILED :: StudioState
pattern StudioState_UPDATE_IN_PROGRESS :: StudioState
instance Network.AWS.Data.XML.ToXML Network.AWS.Nimble.Types.StudioState.StudioState
instance Network.AWS.Data.XML.FromXML Network.AWS.Nimble.Types.StudioState.StudioState
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Nimble.Types.StudioState.StudioState
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Nimble.Types.StudioState.StudioState
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Nimble.Types.StudioState.StudioState
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Nimble.Types.StudioState.StudioState
instance Network.AWS.Data.Query.ToQuery Network.AWS.Nimble.Types.StudioState.StudioState
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Nimble.Types.StudioState.StudioState
instance Network.AWS.Data.Log.ToLog Network.AWS.Nimble.Types.StudioState.StudioState
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Nimble.Types.StudioState.StudioState
instance Network.AWS.Data.Text.ToText Network.AWS.Nimble.Types.StudioState.StudioState
instance Network.AWS.Data.Text.FromText Network.AWS.Nimble.Types.StudioState.StudioState
instance Control.DeepSeq.NFData Network.AWS.Nimble.Types.StudioState.StudioState
instance Data.Hashable.Class.Hashable Network.AWS.Nimble.Types.StudioState.StudioState
instance GHC.Generics.Generic Network.AWS.Nimble.Types.StudioState.StudioState
instance GHC.Classes.Ord Network.AWS.Nimble.Types.StudioState.StudioState
instance GHC.Classes.Eq Network.AWS.Nimble.Types.StudioState.StudioState
instance GHC.Read.Read Network.AWS.Nimble.Types.StudioState.StudioState
instance GHC.Show.Show Network.AWS.Nimble.Types.StudioState.StudioState


module Network.AWS.Nimble.Types.StudioStatusCode

-- | The status code.
newtype StudioStatusCode
StudioStatusCode' :: Text -> StudioStatusCode
[fromStudioStatusCode] :: StudioStatusCode -> Text
pattern StudioStatusCode_AWS_SSO_ACCESS_DENIED :: StudioStatusCode
pattern StudioStatusCode_AWS_SSO_CONFIGURATION_REPAIRED :: StudioStatusCode
pattern StudioStatusCode_AWS_SSO_CONFIGURATION_REPAIR_IN_PROGRESS :: StudioStatusCode
pattern StudioStatusCode_AWS_SSO_NOT_ENABLED :: StudioStatusCode
pattern StudioStatusCode_ENCRYPTION_KEY_ACCESS_DENIED :: StudioStatusCode
pattern StudioStatusCode_ENCRYPTION_KEY_NOT_FOUND :: StudioStatusCode
pattern StudioStatusCode_INTERNAL_ERROR :: StudioStatusCode
pattern StudioStatusCode_ROLE_COULD_NOT_BE_ASSUMED :: StudioStatusCode
pattern StudioStatusCode_ROLE_NOT_OWNED_BY_STUDIO_OWNER :: StudioStatusCode
pattern StudioStatusCode_STUDIO_CREATED :: StudioStatusCode
pattern StudioStatusCode_STUDIO_CREATE_IN_PROGRESS :: StudioStatusCode
pattern StudioStatusCode_STUDIO_DELETED :: StudioStatusCode
pattern StudioStatusCode_STUDIO_DELETE_IN_PROGRESS :: StudioStatusCode
pattern StudioStatusCode_STUDIO_UPDATED :: StudioStatusCode
pattern StudioStatusCode_STUDIO_UPDATE_IN_PROGRESS :: StudioStatusCode
pattern StudioStatusCode_STUDIO_WITH_LAUNCH_PROFILES_NOT_DELETED :: StudioStatusCode
pattern StudioStatusCode_STUDIO_WITH_STREAMING_IMAGES_NOT_DELETED :: StudioStatusCode
pattern StudioStatusCode_STUDIO_WITH_STUDIO_COMPONENTS_NOT_DELETED :: StudioStatusCode
instance Network.AWS.Data.XML.ToXML Network.AWS.Nimble.Types.StudioStatusCode.StudioStatusCode
instance Network.AWS.Data.XML.FromXML Network.AWS.Nimble.Types.StudioStatusCode.StudioStatusCode
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Nimble.Types.StudioStatusCode.StudioStatusCode
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Nimble.Types.StudioStatusCode.StudioStatusCode
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Nimble.Types.StudioStatusCode.StudioStatusCode
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Nimble.Types.StudioStatusCode.StudioStatusCode
instance Network.AWS.Data.Query.ToQuery Network.AWS.Nimble.Types.StudioStatusCode.StudioStatusCode
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Nimble.Types.StudioStatusCode.StudioStatusCode
instance Network.AWS.Data.Log.ToLog Network.AWS.Nimble.Types.StudioStatusCode.StudioStatusCode
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Nimble.Types.StudioStatusCode.StudioStatusCode
instance Network.AWS.Data.Text.ToText Network.AWS.Nimble.Types.StudioStatusCode.StudioStatusCode
instance Network.AWS.Data.Text.FromText Network.AWS.Nimble.Types.StudioStatusCode.StudioStatusCode
instance Control.DeepSeq.NFData Network.AWS.Nimble.Types.StudioStatusCode.StudioStatusCode
instance Data.Hashable.Class.Hashable Network.AWS.Nimble.Types.StudioStatusCode.StudioStatusCode
instance GHC.Generics.Generic Network.AWS.Nimble.Types.StudioStatusCode.StudioStatusCode
instance GHC.Classes.Ord Network.AWS.Nimble.Types.StudioStatusCode.StudioStatusCode
instance GHC.Classes.Eq Network.AWS.Nimble.Types.StudioStatusCode.StudioStatusCode
instance GHC.Read.Read Network.AWS.Nimble.Types.StudioStatusCode.StudioStatusCode
instance GHC.Show.Show Network.AWS.Nimble.Types.StudioStatusCode.StudioStatusCode


module Network.AWS.Nimble.Types.Studio

-- | <i>See:</i> <a>newStudio</a> smart constructor.
data Studio
Studio' :: Maybe StudioEncryptionConfiguration -> Maybe StudioState -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe StudioStatusCode -> Studio

-- | Configuration of the encryption method that is used for the studio.
[$sel:studioEncryptionConfiguration:Studio'] :: Studio -> Maybe StudioEncryptionConfiguration

-- | The current state of the studio resource.
[$sel:state:Studio'] :: Studio -> Maybe StudioState

-- | The name of the studio, as included in the URL when accessing it in
--   the Nimble Studio portal.
[$sel:studioName:Studio'] :: Studio -> Maybe Text

-- | The Amazon Resource Name (ARN) that is assigned to a studio resource
--   and uniquely identifies it. ARNs are unique across all Regions.
[$sel:arn:Studio'] :: Studio -> Maybe Text

-- | The Unix epoch timestamp in seconds for when the resource was created.
[$sel:createdAt:Studio'] :: Studio -> Maybe POSIX

-- | The unique identifier for a studio resource. In Nimble Studio, all
--   other resources are contained in a studio resource.
[$sel:studioId:Studio'] :: Studio -> Maybe Text

-- | The IAM role that studio users assume when logging in to the Nimble
--   Studio portal.
[$sel:userRoleArn:Studio'] :: Studio -> Maybe Text

-- | The Amazon Web Services SSO application client ID used to integrate
--   with Amazon Web Services SSO to enable Amazon Web Services SSO users
--   to log in to Nimble portal.
[$sel:ssoClientId:Studio'] :: Studio -> Maybe Text

-- | The Amazon Web Services Region where the studio resource is located.
[$sel:homeRegion:Studio'] :: Studio -> Maybe Text

-- | Additional detail on the studio state.
[$sel:statusMessage:Studio'] :: Studio -> Maybe Text

-- | A friendly name for the studio.
[$sel:displayName:Studio'] :: Studio -> Maybe Text

-- | The Unix epoch timestamp in seconds for when the resource was updated.
[$sel:updatedAt:Studio'] :: Studio -> Maybe POSIX

-- | The address of the web page for the studio.
[$sel:studioUrl:Studio'] :: Studio -> Maybe Text

-- | The IAM role that studio admins assume when logging in to the Nimble
--   Studio portal.
[$sel:adminRoleArn:Studio'] :: Studio -> Maybe Text

-- | A collection of labels, in the form of key:value pairs, that apply to
--   this resource.
[$sel:tags:Studio'] :: Studio -> Maybe (HashMap Text Text)

-- | Status codes that provide additional detail on the studio state.
[$sel:statusCode:Studio'] :: Studio -> Maybe StudioStatusCode

-- | Create a value of <a>Studio</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:studioEncryptionConfiguration:Studio'</a>,
--   <a>studio_studioEncryptionConfiguration</a> - Configuration of the
--   encryption method that is used for the studio.
--   
--   <a>$sel:state:Studio'</a>, <a>studio_state</a> - The current state of
--   the studio resource.
--   
--   <a>$sel:studioName:Studio'</a>, <a>studio_studioName</a> - The name of
--   the studio, as included in the URL when accessing it in the Nimble
--   Studio portal.
--   
--   <a>$sel:arn:Studio'</a>, <a>studio_arn</a> - The Amazon Resource Name
--   (ARN) that is assigned to a studio resource and uniquely identifies
--   it. ARNs are unique across all Regions.
--   
--   <a>$sel:createdAt:Studio'</a>, <a>studio_createdAt</a> - The Unix
--   epoch timestamp in seconds for when the resource was created.
--   
--   <a>$sel:studioId:Studio'</a>, <a>studio_studioId</a> - The unique
--   identifier for a studio resource. In Nimble Studio, all other
--   resources are contained in a studio resource.
--   
--   <a>$sel:userRoleArn:Studio'</a>, <a>studio_userRoleArn</a> - The IAM
--   role that studio users assume when logging in to the Nimble Studio
--   portal.
--   
--   <a>$sel:ssoClientId:Studio'</a>, <a>studio_ssoClientId</a> - The
--   Amazon Web Services SSO application client ID used to integrate with
--   Amazon Web Services SSO to enable Amazon Web Services SSO users to log
--   in to Nimble portal.
--   
--   <a>$sel:homeRegion:Studio'</a>, <a>studio_homeRegion</a> - The Amazon
--   Web Services Region where the studio resource is located.
--   
--   <a>$sel:statusMessage:Studio'</a>, <a>studio_statusMessage</a> -
--   Additional detail on the studio state.
--   
--   <a>$sel:displayName:Studio'</a>, <a>studio_displayName</a> - A
--   friendly name for the studio.
--   
--   <a>$sel:updatedAt:Studio'</a>, <a>studio_updatedAt</a> - The Unix
--   epoch timestamp in seconds for when the resource was updated.
--   
--   <a>$sel:studioUrl:Studio'</a>, <a>studio_studioUrl</a> - The address
--   of the web page for the studio.
--   
--   <a>$sel:adminRoleArn:Studio'</a>, <a>studio_adminRoleArn</a> - The IAM
--   role that studio admins assume when logging in to the Nimble Studio
--   portal.
--   
--   <a>$sel:tags:Studio'</a>, <a>studio_tags</a> - A collection of labels,
--   in the form of key:value pairs, that apply to this resource.
--   
--   <a>$sel:statusCode:Studio'</a>, <a>studio_statusCode</a> - Status
--   codes that provide additional detail on the studio state.
newStudio :: Studio

-- | Configuration of the encryption method that is used for the studio.
studio_studioEncryptionConfiguration :: Lens' Studio (Maybe StudioEncryptionConfiguration)

-- | The current state of the studio resource.
studio_state :: Lens' Studio (Maybe StudioState)

-- | The name of the studio, as included in the URL when accessing it in
--   the Nimble Studio portal.
studio_studioName :: Lens' Studio (Maybe Text)

-- | The Amazon Resource Name (ARN) that is assigned to a studio resource
--   and uniquely identifies it. ARNs are unique across all Regions.
studio_arn :: Lens' Studio (Maybe Text)

-- | The Unix epoch timestamp in seconds for when the resource was created.
studio_createdAt :: Lens' Studio (Maybe UTCTime)

-- | The unique identifier for a studio resource. In Nimble Studio, all
--   other resources are contained in a studio resource.
studio_studioId :: Lens' Studio (Maybe Text)

-- | The IAM role that studio users assume when logging in to the Nimble
--   Studio portal.
studio_userRoleArn :: Lens' Studio (Maybe Text)

-- | The Amazon Web Services SSO application client ID used to integrate
--   with Amazon Web Services SSO to enable Amazon Web Services SSO users
--   to log in to Nimble portal.
studio_ssoClientId :: Lens' Studio (Maybe Text)

-- | The Amazon Web Services Region where the studio resource is located.
studio_homeRegion :: Lens' Studio (Maybe Text)

-- | Additional detail on the studio state.
studio_statusMessage :: Lens' Studio (Maybe Text)

-- | A friendly name for the studio.
studio_displayName :: Lens' Studio (Maybe Text)

-- | The Unix epoch timestamp in seconds for when the resource was updated.
studio_updatedAt :: Lens' Studio (Maybe UTCTime)

-- | The address of the web page for the studio.
studio_studioUrl :: Lens' Studio (Maybe Text)

-- | The IAM role that studio admins assume when logging in to the Nimble
--   Studio portal.
studio_adminRoleArn :: Lens' Studio (Maybe Text)

-- | A collection of labels, in the form of key:value pairs, that apply to
--   this resource.
studio_tags :: Lens' Studio (Maybe (HashMap Text Text))

-- | Status codes that provide additional detail on the studio state.
studio_statusCode :: Lens' Studio (Maybe StudioStatusCode)
instance GHC.Generics.Generic Network.AWS.Nimble.Types.Studio.Studio
instance GHC.Show.Show Network.AWS.Nimble.Types.Studio.Studio
instance GHC.Read.Read Network.AWS.Nimble.Types.Studio.Studio
instance GHC.Classes.Eq Network.AWS.Nimble.Types.Studio.Studio
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Nimble.Types.Studio.Studio
instance Data.Hashable.Class.Hashable Network.AWS.Nimble.Types.Studio.Studio
instance Control.DeepSeq.NFData Network.AWS.Nimble.Types.Studio.Studio


module Network.AWS.Nimble.Types

-- | API version <tt>2020-08-01</tt> of the Amazon NimbleStudio SDK
--   configuration.
defaultService :: Service

_ValidationException :: AsError a => Getting (First ServiceError) a ServiceError

_AccessDeniedException :: AsError a => Getting (First ServiceError) a ServiceError

_ConflictException :: AsError a => Getting (First ServiceError) a ServiceError

_ServiceQuotaExceededException :: AsError a => Getting (First ServiceError) a ServiceError

_ThrottlingException :: AsError a => Getting (First ServiceError) a ServiceError

_InternalServerErrorException :: AsError a => Getting (First ServiceError) a ServiceError

_ResourceNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

newtype LaunchProfilePersona
LaunchProfilePersona' :: Text -> LaunchProfilePersona
[fromLaunchProfilePersona] :: LaunchProfilePersona -> Text
pattern LaunchProfilePersona_USER :: LaunchProfilePersona

newtype LaunchProfilePlatform
LaunchProfilePlatform' :: Text -> LaunchProfilePlatform
[fromLaunchProfilePlatform] :: LaunchProfilePlatform -> Text
pattern LaunchProfilePlatform_LINUX :: LaunchProfilePlatform
pattern LaunchProfilePlatform_WINDOWS :: LaunchProfilePlatform

newtype LaunchProfileState
LaunchProfileState' :: Text -> LaunchProfileState
[fromLaunchProfileState] :: LaunchProfileState -> Text
pattern LaunchProfileState_CREATE_FAILED :: LaunchProfileState
pattern LaunchProfileState_CREATE_IN_PROGRESS :: LaunchProfileState
pattern LaunchProfileState_DELETED :: LaunchProfileState
pattern LaunchProfileState_DELETE_FAILED :: LaunchProfileState
pattern LaunchProfileState_DELETE_IN_PROGRESS :: LaunchProfileState
pattern LaunchProfileState_READY :: LaunchProfileState
pattern LaunchProfileState_UPDATE_FAILED :: LaunchProfileState
pattern LaunchProfileState_UPDATE_IN_PROGRESS :: LaunchProfileState

newtype LaunchProfileStatusCode
LaunchProfileStatusCode' :: Text -> LaunchProfileStatusCode
[fromLaunchProfileStatusCode] :: LaunchProfileStatusCode -> Text
pattern LaunchProfileStatusCode_ENCRYPTION_KEY_ACCESS_DENIED :: LaunchProfileStatusCode
pattern LaunchProfileStatusCode_ENCRYPTION_KEY_NOT_FOUND :: LaunchProfileStatusCode
pattern LaunchProfileStatusCode_INTERNAL_ERROR :: LaunchProfileStatusCode
pattern LaunchProfileStatusCode_INVALID_SUBNETS_PROVIDED :: LaunchProfileStatusCode
pattern LaunchProfileStatusCode_LAUNCH_PROFILE_CREATED :: LaunchProfileStatusCode
pattern LaunchProfileStatusCode_LAUNCH_PROFILE_CREATE_IN_PROGRESS :: LaunchProfileStatusCode
pattern LaunchProfileStatusCode_LAUNCH_PROFILE_DELETED :: LaunchProfileStatusCode
pattern LaunchProfileStatusCode_LAUNCH_PROFILE_DELETE_IN_PROGRESS :: LaunchProfileStatusCode
pattern LaunchProfileStatusCode_LAUNCH_PROFILE_UPDATED :: LaunchProfileStatusCode
pattern LaunchProfileStatusCode_LAUNCH_PROFILE_UPDATE_IN_PROGRESS :: LaunchProfileStatusCode
pattern LaunchProfileStatusCode_LAUNCH_PROFILE_WITH_STREAM_SESSIONS_NOT_DELETED :: LaunchProfileStatusCode
pattern LaunchProfileStatusCode_STREAMING_IMAGE_NOT_FOUND :: LaunchProfileStatusCode
pattern LaunchProfileStatusCode_STREAMING_IMAGE_NOT_READY :: LaunchProfileStatusCode

newtype StreamingClipboardMode
StreamingClipboardMode' :: Text -> StreamingClipboardMode
[fromStreamingClipboardMode] :: StreamingClipboardMode -> Text
pattern StreamingClipboardMode_DISABLED :: StreamingClipboardMode
pattern StreamingClipboardMode_ENABLED :: StreamingClipboardMode

newtype StreamingImageEncryptionConfigurationKeyType
StreamingImageEncryptionConfigurationKeyType' :: Text -> StreamingImageEncryptionConfigurationKeyType
[fromStreamingImageEncryptionConfigurationKeyType] :: StreamingImageEncryptionConfigurationKeyType -> Text
pattern StreamingImageEncryptionConfigurationKeyType_CUSTOMER_MANAGED_KEY :: StreamingImageEncryptionConfigurationKeyType

newtype StreamingImageState
StreamingImageState' :: Text -> StreamingImageState
[fromStreamingImageState] :: StreamingImageState -> Text
pattern StreamingImageState_CREATE_FAILED :: StreamingImageState
pattern StreamingImageState_CREATE_IN_PROGRESS :: StreamingImageState
pattern StreamingImageState_DELETED :: StreamingImageState
pattern StreamingImageState_DELETE_FAILED :: StreamingImageState
pattern StreamingImageState_DELETE_IN_PROGRESS :: StreamingImageState
pattern StreamingImageState_READY :: StreamingImageState
pattern StreamingImageState_UPDATE_FAILED :: StreamingImageState
pattern StreamingImageState_UPDATE_IN_PROGRESS :: StreamingImageState

-- | The status code.
newtype StreamingImageStatusCode
StreamingImageStatusCode' :: Text -> StreamingImageStatusCode
[fromStreamingImageStatusCode] :: StreamingImageStatusCode -> Text
pattern StreamingImageStatusCode_INTERNAL_ERROR :: StreamingImageStatusCode
pattern StreamingImageStatusCode_STREAMING_IMAGE_CREATE_IN_PROGRESS :: StreamingImageStatusCode
pattern StreamingImageStatusCode_STREAMING_IMAGE_DELETED :: StreamingImageStatusCode
pattern StreamingImageStatusCode_STREAMING_IMAGE_DELETE_IN_PROGRESS :: StreamingImageStatusCode
pattern StreamingImageStatusCode_STREAMING_IMAGE_READY :: StreamingImageStatusCode
pattern StreamingImageStatusCode_STREAMING_IMAGE_UPDATE_IN_PROGRESS :: StreamingImageStatusCode

newtype StreamingInstanceType
StreamingInstanceType' :: Text -> StreamingInstanceType
[fromStreamingInstanceType] :: StreamingInstanceType -> Text
pattern StreamingInstanceType_G4dn_12xlarge :: StreamingInstanceType
pattern StreamingInstanceType_G4dn_16xlarge :: StreamingInstanceType
pattern StreamingInstanceType_G4dn_2xlarge :: StreamingInstanceType
pattern StreamingInstanceType_G4dn_4xlarge :: StreamingInstanceType
pattern StreamingInstanceType_G4dn_8xlarge :: StreamingInstanceType
pattern StreamingInstanceType_G4dn_xlarge :: StreamingInstanceType

-- | The streaming session state.
newtype StreamingSessionState
StreamingSessionState' :: Text -> StreamingSessionState
[fromStreamingSessionState] :: StreamingSessionState -> Text
pattern StreamingSessionState_CREATE_FAILED :: StreamingSessionState
pattern StreamingSessionState_CREATE_IN_PROGRESS :: StreamingSessionState
pattern StreamingSessionState_DELETED :: StreamingSessionState
pattern StreamingSessionState_DELETE_FAILED :: StreamingSessionState
pattern StreamingSessionState_DELETE_IN_PROGRESS :: StreamingSessionState
pattern StreamingSessionState_READY :: StreamingSessionState

newtype StreamingSessionStatusCode
StreamingSessionStatusCode' :: Text -> StreamingSessionStatusCode
[fromStreamingSessionStatusCode] :: StreamingSessionStatusCode -> Text
pattern StreamingSessionStatusCode_ACTIVE_DIRECTORY_DOMAIN_JOIN_ERROR :: StreamingSessionStatusCode
pattern StreamingSessionStatusCode_DECRYPT_STREAMING_IMAGE_ERROR :: StreamingSessionStatusCode
pattern StreamingSessionStatusCode_INITIALIZATION_SCRIPT_ERROR :: StreamingSessionStatusCode
pattern StreamingSessionStatusCode_INSUFFICIENT_CAPACITY :: StreamingSessionStatusCode
pattern StreamingSessionStatusCode_INTERNAL_ERROR :: StreamingSessionStatusCode
pattern StreamingSessionStatusCode_NETWORK_CONNECTION_ERROR :: StreamingSessionStatusCode
pattern StreamingSessionStatusCode_NETWORK_INTERFACE_ERROR :: StreamingSessionStatusCode
pattern StreamingSessionStatusCode_STREAMING_SESSION_CREATE_IN_PROGRESS :: StreamingSessionStatusCode
pattern StreamingSessionStatusCode_STREAMING_SESSION_DELETED :: StreamingSessionStatusCode
pattern StreamingSessionStatusCode_STREAMING_SESSION_DELETE_IN_PROGRESS :: StreamingSessionStatusCode
pattern StreamingSessionStatusCode_STREAMING_SESSION_READY :: StreamingSessionStatusCode

newtype StreamingSessionStreamState
StreamingSessionStreamState' :: Text -> StreamingSessionStreamState
[fromStreamingSessionStreamState] :: StreamingSessionStreamState -> Text
pattern StreamingSessionStreamState_CREATE_FAILED :: StreamingSessionStreamState
pattern StreamingSessionStreamState_CREATE_IN_PROGRESS :: StreamingSessionStreamState
pattern StreamingSessionStreamState_DELETED :: StreamingSessionStreamState
pattern StreamingSessionStreamState_DELETE_FAILED :: StreamingSessionStreamState
pattern StreamingSessionStreamState_DELETE_IN_PROGRESS :: StreamingSessionStreamState
pattern StreamingSessionStreamState_READY :: StreamingSessionStreamState
newtype StreamingSessionStreamStatusCode
StreamingSessionStreamStatusCode' :: Text -> StreamingSessionStreamStatusCode
[fromStreamingSessionStreamStatusCode] :: StreamingSessionStreamStatusCode -> Text
pattern StreamingSessionStreamStatusCode_INTERNAL_ERROR :: StreamingSessionStreamStatusCode
pattern StreamingSessionStreamStatusCode_NETWORK_CONNECTION_ERROR :: StreamingSessionStreamStatusCode
pattern StreamingSessionStreamStatusCode_STREAM_CREATE_IN_PROGRESS :: StreamingSessionStreamStatusCode
pattern StreamingSessionStreamStatusCode_STREAM_DELETED :: StreamingSessionStreamStatusCode
pattern StreamingSessionStreamStatusCode_STREAM_DELETE_IN_PROGRESS :: StreamingSessionStreamStatusCode
pattern StreamingSessionStreamStatusCode_STREAM_READY :: StreamingSessionStreamStatusCode

newtype StudioComponentInitializationScriptRunContext
StudioComponentInitializationScriptRunContext' :: Text -> StudioComponentInitializationScriptRunContext
[fromStudioComponentInitializationScriptRunContext] :: StudioComponentInitializationScriptRunContext -> Text
pattern StudioComponentInitializationScriptRunContext_SYSTEM_INITIALIZATION :: StudioComponentInitializationScriptRunContext
pattern StudioComponentInitializationScriptRunContext_USER_INITIALIZATION :: StudioComponentInitializationScriptRunContext

-- | The current state of the studio component resource.
--   
--   While a studio component is being created, modified, or deleted, its
--   state will equal "CREATE_IN_PROGRESS", "UPDATE_IN_PROGRESS", or
--   "DELETE_IN_PROGRESS"
--   
--   These are called 'transition states'.
--   
--   No modifications may be made to the studio component while it is in a
--   transition state.
--   
--   If creation of the resource fails, the state will change to
--   `CREATE_FAILED`. The resource StatusCode and StatusMessage will
--   provide more information of why creation failed. The resource in this
--   state will automatically be deleted from your account after a period
--   of time.
--   
--   If updating the resource fails, the state will change to
--   `UPDATE_FAILED`. The resource StatusCode and StatusMessage will
--   provide more information of why the update failed. The resource will
--   be returned to the state it was in when the update request was
--   invoked.
--   
--   If deleting the resource fails, the state will change to
--   `DELETE_FAILED`. The resource StatusCode and StatusMessage will
--   provide more information of why the update failed. The resource will
--   be returned to the state it was in when the update request was
--   invoked. After the resource is deleted successfully, it will change to
--   the "DELETED" state. The resource will no longer count against service
--   quotas and cannot be used or acted upon any futher. It will be removed
--   from your account after a period of time.
newtype StudioComponentState
StudioComponentState' :: Text -> StudioComponentState
[fromStudioComponentState] :: StudioComponentState -> Text
pattern StudioComponentState_CREATE_FAILED :: StudioComponentState
pattern StudioComponentState_CREATE_IN_PROGRESS :: StudioComponentState
pattern StudioComponentState_DELETED :: StudioComponentState
pattern StudioComponentState_DELETE_FAILED :: StudioComponentState
pattern StudioComponentState_DELETE_IN_PROGRESS :: StudioComponentState
pattern StudioComponentState_READY :: StudioComponentState
pattern StudioComponentState_UPDATE_FAILED :: StudioComponentState
pattern StudioComponentState_UPDATE_IN_PROGRESS :: StudioComponentState

-- | The current status of the studio component resource.
--   
--   When the resource is in the 'READY' state, the status code signals
--   what the last mutation made to the resource was.
--   
--   When the resource is in a CREATE_FAILED/UPDATE_FAILED/DELETE_FAILED
--   state, the status code signals what went wrong and why the mutation
--   failed.
newtype StudioComponentStatusCode
StudioComponentStatusCode' :: Text -> StudioComponentStatusCode
[fromStudioComponentStatusCode] :: StudioComponentStatusCode -> Text
pattern StudioComponentStatusCode_ACTIVE_DIRECTORY_ALREADY_EXISTS :: StudioComponentStatusCode
pattern StudioComponentStatusCode_ENCRYPTION_KEY_ACCESS_DENIED :: StudioComponentStatusCode
pattern StudioComponentStatusCode_ENCRYPTION_KEY_NOT_FOUND :: StudioComponentStatusCode
pattern StudioComponentStatusCode_INTERNAL_ERROR :: StudioComponentStatusCode
pattern StudioComponentStatusCode_STUDIO_COMPONENT_CREATED :: StudioComponentStatusCode
pattern StudioComponentStatusCode_STUDIO_COMPONENT_CREATE_IN_PROGRESS :: StudioComponentStatusCode
pattern StudioComponentStatusCode_STUDIO_COMPONENT_DELETED :: StudioComponentStatusCode
pattern StudioComponentStatusCode_STUDIO_COMPONENT_DELETE_IN_PROGRESS :: StudioComponentStatusCode
pattern StudioComponentStatusCode_STUDIO_COMPONENT_UPDATED :: StudioComponentStatusCode
pattern StudioComponentStatusCode_STUDIO_COMPONENT_UPDATE_IN_PROGRESS :: StudioComponentStatusCode

newtype StudioComponentSubtype
StudioComponentSubtype' :: Text -> StudioComponentSubtype
[fromStudioComponentSubtype] :: StudioComponentSubtype -> Text
pattern StudioComponentSubtype_AMAZON_FSX_FOR_LUSTRE :: StudioComponentSubtype
pattern StudioComponentSubtype_AMAZON_FSX_FOR_WINDOWS :: StudioComponentSubtype
pattern StudioComponentSubtype_AWS_MANAGED_MICROSOFT_AD :: StudioComponentSubtype
pattern StudioComponentSubtype_CUSTOM :: StudioComponentSubtype

newtype StudioComponentType
StudioComponentType' :: Text -> StudioComponentType
[fromStudioComponentType] :: StudioComponentType -> Text
pattern StudioComponentType_ACTIVE_DIRECTORY :: StudioComponentType
pattern StudioComponentType_COMPUTE_FARM :: StudioComponentType
pattern StudioComponentType_CUSTOM :: StudioComponentType
pattern StudioComponentType_LICENSE_SERVICE :: StudioComponentType
pattern StudioComponentType_SHARED_FILE_SYSTEM :: StudioComponentType

-- | The type of KMS key that is used to encrypt studio data.
newtype StudioEncryptionConfigurationKeyType
StudioEncryptionConfigurationKeyType' :: Text -> StudioEncryptionConfigurationKeyType
[fromStudioEncryptionConfigurationKeyType] :: StudioEncryptionConfigurationKeyType -> Text
pattern StudioEncryptionConfigurationKeyType_AWS_OWNED_KEY :: StudioEncryptionConfigurationKeyType
pattern StudioEncryptionConfigurationKeyType_CUSTOMER_MANAGED_KEY :: StudioEncryptionConfigurationKeyType

newtype StudioPersona
StudioPersona' :: Text -> StudioPersona
[fromStudioPersona] :: StudioPersona -> Text
pattern StudioPersona_ADMINISTRATOR :: StudioPersona

newtype StudioState
StudioState' :: Text -> StudioState
[fromStudioState] :: StudioState -> Text
pattern StudioState_CREATE_FAILED :: StudioState
pattern StudioState_CREATE_IN_PROGRESS :: StudioState
pattern StudioState_DELETED :: StudioState
pattern StudioState_DELETE_FAILED :: StudioState
pattern StudioState_DELETE_IN_PROGRESS :: StudioState
pattern StudioState_READY :: StudioState
pattern StudioState_UPDATE_FAILED :: StudioState
pattern StudioState_UPDATE_IN_PROGRESS :: StudioState

-- | The status code.
newtype StudioStatusCode
StudioStatusCode' :: Text -> StudioStatusCode
[fromStudioStatusCode] :: StudioStatusCode -> Text
pattern StudioStatusCode_AWS_SSO_ACCESS_DENIED :: StudioStatusCode
pattern StudioStatusCode_AWS_SSO_CONFIGURATION_REPAIRED :: StudioStatusCode
pattern StudioStatusCode_AWS_SSO_CONFIGURATION_REPAIR_IN_PROGRESS :: StudioStatusCode
pattern StudioStatusCode_AWS_SSO_NOT_ENABLED :: StudioStatusCode
pattern StudioStatusCode_ENCRYPTION_KEY_ACCESS_DENIED :: StudioStatusCode
pattern StudioStatusCode_ENCRYPTION_KEY_NOT_FOUND :: StudioStatusCode
pattern StudioStatusCode_INTERNAL_ERROR :: StudioStatusCode
pattern StudioStatusCode_ROLE_COULD_NOT_BE_ASSUMED :: StudioStatusCode
pattern StudioStatusCode_ROLE_NOT_OWNED_BY_STUDIO_OWNER :: StudioStatusCode
pattern StudioStatusCode_STUDIO_CREATED :: StudioStatusCode
pattern StudioStatusCode_STUDIO_CREATE_IN_PROGRESS :: StudioStatusCode
pattern StudioStatusCode_STUDIO_DELETED :: StudioStatusCode
pattern StudioStatusCode_STUDIO_DELETE_IN_PROGRESS :: StudioStatusCode
pattern StudioStatusCode_STUDIO_UPDATED :: StudioStatusCode
pattern StudioStatusCode_STUDIO_UPDATE_IN_PROGRESS :: StudioStatusCode
pattern StudioStatusCode_STUDIO_WITH_LAUNCH_PROFILES_NOT_DELETED :: StudioStatusCode
pattern StudioStatusCode_STUDIO_WITH_STREAMING_IMAGES_NOT_DELETED :: StudioStatusCode
pattern StudioStatusCode_STUDIO_WITH_STUDIO_COMPONENTS_NOT_DELETED :: StudioStatusCode

-- | An LDAP attribute of an Active Directory computer account, in the form
--   of a name:value pair.
--   
--   <i>See:</i> <a>newActiveDirectoryComputerAttribute</a> smart
--   constructor.
data ActiveDirectoryComputerAttribute
ActiveDirectoryComputerAttribute' :: Maybe Text -> Maybe Text -> ActiveDirectoryComputerAttribute

-- | The value for the LDAP attribute.
[$sel:value:ActiveDirectoryComputerAttribute'] :: ActiveDirectoryComputerAttribute -> Maybe Text

-- | The name for the LDAP attribute.
[$sel:name:ActiveDirectoryComputerAttribute'] :: ActiveDirectoryComputerAttribute -> Maybe Text

-- | Create a value of <a>ActiveDirectoryComputerAttribute</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:value:ActiveDirectoryComputerAttribute'</a>,
--   <a>activeDirectoryComputerAttribute_value</a> - The value for the LDAP
--   attribute.
--   
--   <a>$sel:name:ActiveDirectoryComputerAttribute'</a>,
--   <a>activeDirectoryComputerAttribute_name</a> - The name for the LDAP
--   attribute.
newActiveDirectoryComputerAttribute :: ActiveDirectoryComputerAttribute

-- | The value for the LDAP attribute.
activeDirectoryComputerAttribute_value :: Lens' ActiveDirectoryComputerAttribute (Maybe Text)

-- | The name for the LDAP attribute.
activeDirectoryComputerAttribute_name :: Lens' ActiveDirectoryComputerAttribute (Maybe Text)

-- | The configuration for a Microsoft Active Directory (Microsoft AD)
--   studio resource.
--   
--   <i>See:</i> <a>newActiveDirectoryConfiguration</a> smart constructor.
data ActiveDirectoryConfiguration
ActiveDirectoryConfiguration' :: Maybe Text -> Maybe [ActiveDirectoryComputerAttribute] -> Maybe Text -> ActiveDirectoryConfiguration

-- | The directory ID of the Directory Service for Microsoft Active
--   Directory to access using this studio component.
[$sel:directoryId:ActiveDirectoryConfiguration'] :: ActiveDirectoryConfiguration -> Maybe Text

-- | A collection of custom attributes for an Active Directory computer.
[$sel:computerAttributes:ActiveDirectoryConfiguration'] :: ActiveDirectoryConfiguration -> Maybe [ActiveDirectoryComputerAttribute]

-- | The distinguished name (DN) and organizational unit (OU) of an Active
--   Directory computer.
[$sel:organizationalUnitDistinguishedName:ActiveDirectoryConfiguration'] :: ActiveDirectoryConfiguration -> Maybe Text

-- | Create a value of <a>ActiveDirectoryConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:directoryId:ActiveDirectoryConfiguration'</a>,
--   <a>activeDirectoryConfiguration_directoryId</a> - The directory ID of
--   the Directory Service for Microsoft Active Directory to access using
--   this studio component.
--   
--   <a>$sel:computerAttributes:ActiveDirectoryConfiguration'</a>,
--   <a>activeDirectoryConfiguration_computerAttributes</a> - A collection
--   of custom attributes for an Active Directory computer.
--   
--   
--   <a>$sel:organizationalUnitDistinguishedName:ActiveDirectoryConfiguration'</a>,
--   <a>activeDirectoryConfiguration_organizationalUnitDistinguishedName</a>
--   - The distinguished name (DN) and organizational unit (OU) of an
--   Active Directory computer.
newActiveDirectoryConfiguration :: ActiveDirectoryConfiguration

-- | The directory ID of the Directory Service for Microsoft Active
--   Directory to access using this studio component.
activeDirectoryConfiguration_directoryId :: Lens' ActiveDirectoryConfiguration (Maybe Text)

-- | A collection of custom attributes for an Active Directory computer.
activeDirectoryConfiguration_computerAttributes :: Lens' ActiveDirectoryConfiguration (Maybe [ActiveDirectoryComputerAttribute])

-- | The distinguished name (DN) and organizational unit (OU) of an Active
--   Directory computer.
activeDirectoryConfiguration_organizationalUnitDistinguishedName :: Lens' ActiveDirectoryConfiguration (Maybe Text)

-- | The configuration for a render farm that is associated with a studio
--   resource.
--   
--   <i>See:</i> <a>newComputeFarmConfiguration</a> smart constructor.
data ComputeFarmConfiguration
ComputeFarmConfiguration' :: Maybe Text -> Maybe Text -> ComputeFarmConfiguration

-- | The name of an Active Directory user that is used on ComputeFarm
--   worker instances.
[$sel:activeDirectoryUser:ComputeFarmConfiguration'] :: ComputeFarmConfiguration -> Maybe Text

-- | The endpoint of the ComputeFarm that is accessed by the studio
--   component resource.
[$sel:endpoint:ComputeFarmConfiguration'] :: ComputeFarmConfiguration -> Maybe Text

-- | Create a value of <a>ComputeFarmConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:activeDirectoryUser:ComputeFarmConfiguration'</a>,
--   <a>computeFarmConfiguration_activeDirectoryUser</a> - The name of an
--   Active Directory user that is used on ComputeFarm worker instances.
--   
--   <a>$sel:endpoint:ComputeFarmConfiguration'</a>,
--   <a>computeFarmConfiguration_endpoint</a> - The endpoint of the
--   ComputeFarm that is accessed by the studio component resource.
newComputeFarmConfiguration :: ComputeFarmConfiguration

-- | The name of an Active Directory user that is used on ComputeFarm
--   worker instances.
computeFarmConfiguration_activeDirectoryUser :: Lens' ComputeFarmConfiguration (Maybe Text)

-- | The endpoint of the ComputeFarm that is accessed by the studio
--   component resource.
computeFarmConfiguration_endpoint :: Lens' ComputeFarmConfiguration (Maybe Text)

-- | Represents a EULA resource.
--   
--   <i>See:</i> <a>newEula</a> smart constructor.
data Eula
Eula' :: Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> Eula

-- | The Unix epoch timestamp in seconds for when the resource was created.
[$sel:createdAt:Eula'] :: Eula -> Maybe POSIX

-- | The EULA ID.
[$sel:eulaId:Eula'] :: Eula -> Maybe Text

-- | The EULA content.
[$sel:content:Eula'] :: Eula -> Maybe Text

-- | The name for the EULA.
[$sel:name:Eula'] :: Eula -> Maybe Text

-- | The Unix epoch timestamp in seconds for when the resource was updated.
[$sel:updatedAt:Eula'] :: Eula -> Maybe POSIX

-- | Create a value of <a>Eula</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:createdAt:Eula'</a>, <a>eula_createdAt</a> - The Unix epoch
--   timestamp in seconds for when the resource was created.
--   
--   <a>$sel:eulaId:Eula'</a>, <a>eula_eulaId</a> - The EULA ID.
--   
--   <a>$sel:content:Eula'</a>, <a>eula_content</a> - The EULA content.
--   
--   <a>$sel:name:Eula'</a>, <a>eula_name</a> - The name for the EULA.
--   
--   <a>$sel:updatedAt:Eula'</a>, <a>eula_updatedAt</a> - The Unix epoch
--   timestamp in seconds for when the resource was updated.
newEula :: Eula

-- | The Unix epoch timestamp in seconds for when the resource was created.
eula_createdAt :: Lens' Eula (Maybe UTCTime)

-- | The EULA ID.
eula_eulaId :: Lens' Eula (Maybe Text)

-- | The EULA content.
eula_content :: Lens' Eula (Maybe Text)

-- | The name for the EULA.
eula_name :: Lens' Eula (Maybe Text)

-- | The Unix epoch timestamp in seconds for when the resource was updated.
eula_updatedAt :: Lens' Eula (Maybe UTCTime)

-- | <i>See:</i> <a>newEulaAcceptance</a> smart constructor.
data EulaAcceptance
EulaAcceptance' :: Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> EulaAcceptance

-- | The ID of the acceptee.
[$sel:accepteeId:EulaAcceptance'] :: EulaAcceptance -> Maybe Text

-- | The EULA ID.
[$sel:eulaId:EulaAcceptance'] :: EulaAcceptance -> Maybe Text

-- | The Unix epoch timestamp in seconds for when the EULA was accepted.
[$sel:acceptedAt:EulaAcceptance'] :: EulaAcceptance -> Maybe POSIX

-- | The ID of the person who accepted the EULA.
[$sel:acceptedBy:EulaAcceptance'] :: EulaAcceptance -> Maybe Text

-- | The EULA acceptance ID.
[$sel:eulaAcceptanceId:EulaAcceptance'] :: EulaAcceptance -> Maybe Text

-- | Create a value of <a>EulaAcceptance</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:accepteeId:EulaAcceptance'</a>,
--   <a>eulaAcceptance_accepteeId</a> - The ID of the acceptee.
--   
--   <a>$sel:eulaId:EulaAcceptance'</a>, <a>eulaAcceptance_eulaId</a> - The
--   EULA ID.
--   
--   <a>$sel:acceptedAt:EulaAcceptance'</a>,
--   <a>eulaAcceptance_acceptedAt</a> - The Unix epoch timestamp in seconds
--   for when the EULA was accepted.
--   
--   <a>$sel:acceptedBy:EulaAcceptance'</a>,
--   <a>eulaAcceptance_acceptedBy</a> - The ID of the person who accepted
--   the EULA.
--   
--   <a>$sel:eulaAcceptanceId:EulaAcceptance'</a>,
--   <a>eulaAcceptance_eulaAcceptanceId</a> - The EULA acceptance ID.
newEulaAcceptance :: EulaAcceptance

-- | The ID of the acceptee.
eulaAcceptance_accepteeId :: Lens' EulaAcceptance (Maybe Text)

-- | The EULA ID.
eulaAcceptance_eulaId :: Lens' EulaAcceptance (Maybe Text)

-- | The Unix epoch timestamp in seconds for when the EULA was accepted.
eulaAcceptance_acceptedAt :: Lens' EulaAcceptance (Maybe UTCTime)

-- | The ID of the person who accepted the EULA.
eulaAcceptance_acceptedBy :: Lens' EulaAcceptance (Maybe Text)

-- | The EULA acceptance ID.
eulaAcceptance_eulaAcceptanceId :: Lens' EulaAcceptance (Maybe Text)

-- | <i>See:</i> <a>newLaunchProfile</a> smart constructor.
data LaunchProfile
LaunchProfile' :: Maybe LaunchProfileState -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe [Text] -> Maybe [Text] -> Maybe StreamConfiguration -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe LaunchProfileStatusCode -> Maybe (NonEmpty Text) -> LaunchProfile

-- | The current state.
[$sel:state:LaunchProfile'] :: LaunchProfile -> Maybe LaunchProfileState

-- | The ARN of the resource.
[$sel:arn:LaunchProfile'] :: LaunchProfile -> Maybe Text

-- | The Unix epoch timestamp in seconds for when the resource was created.
[$sel:createdAt:LaunchProfile'] :: LaunchProfile -> Maybe POSIX

-- | The user ID of the user that created the launch profile.
[$sel:createdBy:LaunchProfile'] :: LaunchProfile -> Maybe Text

-- | The launch profile ID.
[$sel:launchProfileId:LaunchProfile'] :: LaunchProfile -> Maybe Text

-- | The user ID of the user that most recently updated the resource.
[$sel:updatedBy:LaunchProfile'] :: LaunchProfile -> Maybe Text

-- | The version number of the protocol that is used by the launch profile.
--   The only valid version is "2021-03-31".
[$sel:launchProfileProtocolVersions:LaunchProfile'] :: LaunchProfile -> Maybe [Text]

-- | Unique identifiers for a collection of EC2 subnets.
[$sel:ec2SubnetIds:LaunchProfile'] :: LaunchProfile -> Maybe [Text]

-- | A configuration for a streaming session.
[$sel:streamConfiguration:LaunchProfile'] :: LaunchProfile -> Maybe StreamConfiguration

-- | A friendly name for the launch profile.
[$sel:name:LaunchProfile'] :: LaunchProfile -> Maybe Text

-- | The status message for the launch profile.
[$sel:statusMessage:LaunchProfile'] :: LaunchProfile -> Maybe Text

-- | The Unix epoch timestamp in seconds for when the resource was updated.
[$sel:updatedAt:LaunchProfile'] :: LaunchProfile -> Maybe POSIX

-- | A human-readable description of the launch profile.
[$sel:description:LaunchProfile'] :: LaunchProfile -> Maybe Text

-- | A collection of labels, in the form of key:value pairs, that apply to
--   this resource.
[$sel:tags:LaunchProfile'] :: LaunchProfile -> Maybe (HashMap Text Text)

-- | The status code.
[$sel:statusCode:LaunchProfile'] :: LaunchProfile -> Maybe LaunchProfileStatusCode

-- | Unique identifiers for a collection of studio components that can be
--   used with this launch profile.
[$sel:studioComponentIds:LaunchProfile'] :: LaunchProfile -> Maybe (NonEmpty Text)

-- | Create a value of <a>LaunchProfile</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:state:LaunchProfile'</a>, <a>launchProfile_state</a> - The
--   current state.
--   
--   <a>$sel:arn:LaunchProfile'</a>, <a>launchProfile_arn</a> - The ARN of
--   the resource.
--   
--   <a>$sel:createdAt:LaunchProfile'</a>, <a>launchProfile_createdAt</a> -
--   The Unix epoch timestamp in seconds for when the resource was created.
--   
--   <a>$sel:createdBy:LaunchProfile'</a>, <a>launchProfile_createdBy</a> -
--   The user ID of the user that created the launch profile.
--   
--   <a>$sel:launchProfileId:LaunchProfile'</a>,
--   <a>launchProfile_launchProfileId</a> - The launch profile ID.
--   
--   <a>$sel:updatedBy:LaunchProfile'</a>, <a>launchProfile_updatedBy</a> -
--   The user ID of the user that most recently updated the resource.
--   
--   <a>$sel:launchProfileProtocolVersions:LaunchProfile'</a>,
--   <a>launchProfile_launchProfileProtocolVersions</a> - The version
--   number of the protocol that is used by the launch profile. The only
--   valid version is "2021-03-31".
--   
--   <a>$sel:ec2SubnetIds:LaunchProfile'</a>,
--   <a>launchProfile_ec2SubnetIds</a> - Unique identifiers for a
--   collection of EC2 subnets.
--   
--   <a>$sel:streamConfiguration:LaunchProfile'</a>,
--   <a>launchProfile_streamConfiguration</a> - A configuration for a
--   streaming session.
--   
--   <a>$sel:name:LaunchProfile'</a>, <a>launchProfile_name</a> - A
--   friendly name for the launch profile.
--   
--   <a>$sel:statusMessage:LaunchProfile'</a>,
--   <a>launchProfile_statusMessage</a> - The status message for the launch
--   profile.
--   
--   <a>$sel:updatedAt:LaunchProfile'</a>, <a>launchProfile_updatedAt</a> -
--   The Unix epoch timestamp in seconds for when the resource was updated.
--   
--   <a>$sel:description:LaunchProfile'</a>,
--   <a>launchProfile_description</a> - A human-readable description of the
--   launch profile.
--   
--   <a>$sel:tags:LaunchProfile'</a>, <a>launchProfile_tags</a> - A
--   collection of labels, in the form of key:value pairs, that apply to
--   this resource.
--   
--   <a>$sel:statusCode:LaunchProfile'</a>, <a>launchProfile_statusCode</a>
--   - The status code.
--   
--   <a>$sel:studioComponentIds:LaunchProfile'</a>,
--   <a>launchProfile_studioComponentIds</a> - Unique identifiers for a
--   collection of studio components that can be used with this launch
--   profile.
newLaunchProfile :: LaunchProfile

-- | The current state.
launchProfile_state :: Lens' LaunchProfile (Maybe LaunchProfileState)

-- | The ARN of the resource.
launchProfile_arn :: Lens' LaunchProfile (Maybe Text)

-- | The Unix epoch timestamp in seconds for when the resource was created.
launchProfile_createdAt :: Lens' LaunchProfile (Maybe UTCTime)

-- | The user ID of the user that created the launch profile.
launchProfile_createdBy :: Lens' LaunchProfile (Maybe Text)

-- | The launch profile ID.
launchProfile_launchProfileId :: Lens' LaunchProfile (Maybe Text)

-- | The user ID of the user that most recently updated the resource.
launchProfile_updatedBy :: Lens' LaunchProfile (Maybe Text)

-- | The version number of the protocol that is used by the launch profile.
--   The only valid version is "2021-03-31".
launchProfile_launchProfileProtocolVersions :: Lens' LaunchProfile (Maybe [Text])

-- | Unique identifiers for a collection of EC2 subnets.
launchProfile_ec2SubnetIds :: Lens' LaunchProfile (Maybe [Text])

-- | A configuration for a streaming session.
launchProfile_streamConfiguration :: Lens' LaunchProfile (Maybe StreamConfiguration)

-- | A friendly name for the launch profile.
launchProfile_name :: Lens' LaunchProfile (Maybe Text)

-- | The status message for the launch profile.
launchProfile_statusMessage :: Lens' LaunchProfile (Maybe Text)

-- | The Unix epoch timestamp in seconds for when the resource was updated.
launchProfile_updatedAt :: Lens' LaunchProfile (Maybe UTCTime)

-- | A human-readable description of the launch profile.
launchProfile_description :: Lens' LaunchProfile (Maybe Text)

-- | A collection of labels, in the form of key:value pairs, that apply to
--   this resource.
launchProfile_tags :: Lens' LaunchProfile (Maybe (HashMap Text Text))

-- | The status code.
launchProfile_statusCode :: Lens' LaunchProfile (Maybe LaunchProfileStatusCode)

-- | Unique identifiers for a collection of studio components that can be
--   used with this launch profile.
launchProfile_studioComponentIds :: Lens' LaunchProfile (Maybe (NonEmpty Text))

-- | <i>See:</i> <a>newLaunchProfileInitialization</a> smart constructor.
data LaunchProfileInitialization
LaunchProfileInitialization' :: Maybe LaunchProfilePlatform -> Maybe LaunchProfileInitializationActiveDirectory -> Maybe Text -> Maybe Text -> Maybe (NonEmpty Text) -> Maybe Text -> Maybe Text -> Maybe [LaunchProfileInitializationScript] -> Maybe [LaunchProfileInitializationScript] -> LaunchProfileInitialization

-- | The platform of the launch platform, either WINDOWS or LINUX.
[$sel:platform:LaunchProfileInitialization'] :: LaunchProfileInitialization -> Maybe LaunchProfilePlatform

-- | A LaunchProfileInitializationActiveDirectory resource.
[$sel:activeDirectory:LaunchProfileInitialization'] :: LaunchProfileInitialization -> Maybe LaunchProfileInitializationActiveDirectory

-- | The launch purpose.
[$sel:launchPurpose:LaunchProfileInitialization'] :: LaunchProfileInitialization -> Maybe Text

-- | The launch profile ID.
[$sel:launchProfileId:LaunchProfileInitialization'] :: LaunchProfileInitialization -> Maybe Text

-- | The EC2 security groups that control access to the studio component.
[$sel:ec2SecurityGroupIds:LaunchProfileInitialization'] :: LaunchProfileInitialization -> Maybe (NonEmpty Text)

-- | The name for the launch profile.
[$sel:name:LaunchProfileInitialization'] :: LaunchProfileInitialization -> Maybe Text

-- | The version number of the protocol that is used by the launch profile.
--   The only valid version is "2021-03-31".
[$sel:launchProfileProtocolVersion:LaunchProfileInitialization'] :: LaunchProfileInitialization -> Maybe Text

-- | The user initializtion scripts.
[$sel:userInitializationScripts:LaunchProfileInitialization'] :: LaunchProfileInitialization -> Maybe [LaunchProfileInitializationScript]

-- | The system initializtion scripts.
[$sel:systemInitializationScripts:LaunchProfileInitialization'] :: LaunchProfileInitialization -> Maybe [LaunchProfileInitializationScript]

-- | Create a value of <a>LaunchProfileInitialization</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:platform:LaunchProfileInitialization'</a>,
--   <a>launchProfileInitialization_platform</a> - The platform of the
--   launch platform, either WINDOWS or LINUX.
--   
--   <a>$sel:activeDirectory:LaunchProfileInitialization'</a>,
--   <a>launchProfileInitialization_activeDirectory</a> - A
--   LaunchProfileInitializationActiveDirectory resource.
--   
--   <a>$sel:launchPurpose:LaunchProfileInitialization'</a>,
--   <a>launchProfileInitialization_launchPurpose</a> - The launch purpose.
--   
--   <a>$sel:launchProfileId:LaunchProfileInitialization'</a>,
--   <a>launchProfileInitialization_launchProfileId</a> - The launch
--   profile ID.
--   
--   <a>$sel:ec2SecurityGroupIds:LaunchProfileInitialization'</a>,
--   <a>launchProfileInitialization_ec2SecurityGroupIds</a> - The EC2
--   security groups that control access to the studio component.
--   
--   <a>$sel:name:LaunchProfileInitialization'</a>,
--   <a>launchProfileInitialization_name</a> - The name for the launch
--   profile.
--   
--   <a>$sel:launchProfileProtocolVersion:LaunchProfileInitialization'</a>,
--   <a>launchProfileInitialization_launchProfileProtocolVersion</a> - The
--   version number of the protocol that is used by the launch profile. The
--   only valid version is "2021-03-31".
--   
--   <a>$sel:userInitializationScripts:LaunchProfileInitialization'</a>,
--   <a>launchProfileInitialization_userInitializationScripts</a> - The
--   user initializtion scripts.
--   
--   <a>$sel:systemInitializationScripts:LaunchProfileInitialization'</a>,
--   <a>launchProfileInitialization_systemInitializationScripts</a> - The
--   system initializtion scripts.
newLaunchProfileInitialization :: LaunchProfileInitialization

-- | The platform of the launch platform, either WINDOWS or LINUX.
launchProfileInitialization_platform :: Lens' LaunchProfileInitialization (Maybe LaunchProfilePlatform)

-- | A LaunchProfileInitializationActiveDirectory resource.
launchProfileInitialization_activeDirectory :: Lens' LaunchProfileInitialization (Maybe LaunchProfileInitializationActiveDirectory)

-- | The launch purpose.
launchProfileInitialization_launchPurpose :: Lens' LaunchProfileInitialization (Maybe Text)

-- | The launch profile ID.
launchProfileInitialization_launchProfileId :: Lens' LaunchProfileInitialization (Maybe Text)

-- | The EC2 security groups that control access to the studio component.
launchProfileInitialization_ec2SecurityGroupIds :: Lens' LaunchProfileInitialization (Maybe (NonEmpty Text))

-- | The name for the launch profile.
launchProfileInitialization_name :: Lens' LaunchProfileInitialization (Maybe Text)

-- | The version number of the protocol that is used by the launch profile.
--   The only valid version is "2021-03-31".
launchProfileInitialization_launchProfileProtocolVersion :: Lens' LaunchProfileInitialization (Maybe Text)

-- | The user initializtion scripts.
launchProfileInitialization_userInitializationScripts :: Lens' LaunchProfileInitialization (Maybe [LaunchProfileInitializationScript])

-- | The system initializtion scripts.
launchProfileInitialization_systemInitializationScripts :: Lens' LaunchProfileInitialization (Maybe [LaunchProfileInitializationScript])

-- | <i>See:</i> <a>newLaunchProfileInitializationActiveDirectory</a> smart
--   constructor.
data LaunchProfileInitializationActiveDirectory
LaunchProfileInitializationActiveDirectory' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe [Text] -> Maybe [ActiveDirectoryComputerAttribute] -> Maybe Text -> Maybe Text -> LaunchProfileInitializationActiveDirectory

-- | The directory ID of the Directory Service for Microsoft Active
--   Directory to access using this launch profile.
[$sel:directoryId:LaunchProfileInitializationActiveDirectory'] :: LaunchProfileInitializationActiveDirectory -> Maybe Text

-- | The unique identifier for a studio component resource.
[$sel:studioComponentId:LaunchProfileInitializationActiveDirectory'] :: LaunchProfileInitializationActiveDirectory -> Maybe Text

-- | The name for the studio component.
[$sel:studioComponentName:LaunchProfileInitializationActiveDirectory'] :: LaunchProfileInitializationActiveDirectory -> Maybe Text

-- | The DNS IP address.
[$sel:dnsIpAddresses:LaunchProfileInitializationActiveDirectory'] :: LaunchProfileInitializationActiveDirectory -> Maybe [Text]

-- | A collection of custom attributes for an Active Directory computer.
[$sel:computerAttributes:LaunchProfileInitializationActiveDirectory'] :: LaunchProfileInitializationActiveDirectory -> Maybe [ActiveDirectoryComputerAttribute]

-- | The name for the organizational unit distinguished name.
[$sel:organizationalUnitDistinguishedName:LaunchProfileInitializationActiveDirectory'] :: LaunchProfileInitializationActiveDirectory -> Maybe Text

-- | The directory name.
[$sel:directoryName:LaunchProfileInitializationActiveDirectory'] :: LaunchProfileInitializationActiveDirectory -> Maybe Text

-- | Create a value of <a>LaunchProfileInitializationActiveDirectory</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:directoryId:LaunchProfileInitializationActiveDirectory'</a>,
--   <a>launchProfileInitializationActiveDirectory_directoryId</a> - The
--   directory ID of the Directory Service for Microsoft Active Directory
--   to access using this launch profile.
--   
--   
--   <a>$sel:studioComponentId:LaunchProfileInitializationActiveDirectory'</a>,
--   <a>launchProfileInitializationActiveDirectory_studioComponentId</a> -
--   The unique identifier for a studio component resource.
--   
--   
--   <a>$sel:studioComponentName:LaunchProfileInitializationActiveDirectory'</a>,
--   <a>launchProfileInitializationActiveDirectory_studioComponentName</a>
--   - The name for the studio component.
--   
--   
--   <a>$sel:dnsIpAddresses:LaunchProfileInitializationActiveDirectory'</a>,
--   <a>launchProfileInitializationActiveDirectory_dnsIpAddresses</a> - The
--   DNS IP address.
--   
--   
--   <a>$sel:computerAttributes:LaunchProfileInitializationActiveDirectory'</a>,
--   <a>launchProfileInitializationActiveDirectory_computerAttributes</a> -
--   A collection of custom attributes for an Active Directory computer.
--   
--   
--   <a>$sel:organizationalUnitDistinguishedName:LaunchProfileInitializationActiveDirectory'</a>,
--   <a>launchProfileInitializationActiveDirectory_organizationalUnitDistinguishedName</a>
--   - The name for the organizational unit distinguished name.
--   
--   <a>$sel:directoryName:LaunchProfileInitializationActiveDirectory'</a>,
--   <a>launchProfileInitializationActiveDirectory_directoryName</a> - The
--   directory name.
newLaunchProfileInitializationActiveDirectory :: LaunchProfileInitializationActiveDirectory

-- | The directory ID of the Directory Service for Microsoft Active
--   Directory to access using this launch profile.
launchProfileInitializationActiveDirectory_directoryId :: Lens' LaunchProfileInitializationActiveDirectory (Maybe Text)

-- | The unique identifier for a studio component resource.
launchProfileInitializationActiveDirectory_studioComponentId :: Lens' LaunchProfileInitializationActiveDirectory (Maybe Text)

-- | The name for the studio component.
launchProfileInitializationActiveDirectory_studioComponentName :: Lens' LaunchProfileInitializationActiveDirectory (Maybe Text)

-- | The DNS IP address.
launchProfileInitializationActiveDirectory_dnsIpAddresses :: Lens' LaunchProfileInitializationActiveDirectory (Maybe [Text])

-- | A collection of custom attributes for an Active Directory computer.
launchProfileInitializationActiveDirectory_computerAttributes :: Lens' LaunchProfileInitializationActiveDirectory (Maybe [ActiveDirectoryComputerAttribute])

-- | The name for the organizational unit distinguished name.
launchProfileInitializationActiveDirectory_organizationalUnitDistinguishedName :: Lens' LaunchProfileInitializationActiveDirectory (Maybe Text)

-- | The directory name.
launchProfileInitializationActiveDirectory_directoryName :: Lens' LaunchProfileInitializationActiveDirectory (Maybe Text)

-- | <i>See:</i> <a>newLaunchProfileInitializationScript</a> smart
--   constructor.
data LaunchProfileInitializationScript
LaunchProfileInitializationScript' :: Maybe Text -> Maybe Text -> Maybe Text -> LaunchProfileInitializationScript

-- | The initialization script.
[$sel:script:LaunchProfileInitializationScript'] :: LaunchProfileInitializationScript -> Maybe Text

-- | The unique identifier for a studio component resource.
[$sel:studioComponentId:LaunchProfileInitializationScript'] :: LaunchProfileInitializationScript -> Maybe Text

-- | The name for the studio component.
[$sel:studioComponentName:LaunchProfileInitializationScript'] :: LaunchProfileInitializationScript -> Maybe Text

-- | Create a value of <a>LaunchProfileInitializationScript</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:script:LaunchProfileInitializationScript'</a>,
--   <a>launchProfileInitializationScript_script</a> - The initialization
--   script.
--   
--   <a>$sel:studioComponentId:LaunchProfileInitializationScript'</a>,
--   <a>launchProfileInitializationScript_studioComponentId</a> - The
--   unique identifier for a studio component resource.
--   
--   <a>$sel:studioComponentName:LaunchProfileInitializationScript'</a>,
--   <a>launchProfileInitializationScript_studioComponentName</a> - The
--   name for the studio component.
newLaunchProfileInitializationScript :: LaunchProfileInitializationScript

-- | The initialization script.
launchProfileInitializationScript_script :: Lens' LaunchProfileInitializationScript (Maybe Text)

-- | The unique identifier for a studio component resource.
launchProfileInitializationScript_studioComponentId :: Lens' LaunchProfileInitializationScript (Maybe Text)

-- | The name for the studio component.
launchProfileInitializationScript_studioComponentName :: Lens' LaunchProfileInitializationScript (Maybe Text)

-- | <i>See:</i> <a>newLaunchProfileMembership</a> smart constructor.
data LaunchProfileMembership
LaunchProfileMembership' :: Maybe Text -> Maybe Text -> Maybe LaunchProfilePersona -> LaunchProfileMembership

-- | The ID of the identity store.
[$sel:identityStoreId:LaunchProfileMembership'] :: LaunchProfileMembership -> Maybe Text

-- | The principal ID.
[$sel:principalId:LaunchProfileMembership'] :: LaunchProfileMembership -> Maybe Text

-- | The persona.
[$sel:persona:LaunchProfileMembership'] :: LaunchProfileMembership -> Maybe LaunchProfilePersona

-- | Create a value of <a>LaunchProfileMembership</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:identityStoreId:LaunchProfileMembership'</a>,
--   <a>launchProfileMembership_identityStoreId</a> - The ID of the
--   identity store.
--   
--   <a>$sel:principalId:LaunchProfileMembership'</a>,
--   <a>launchProfileMembership_principalId</a> - The principal ID.
--   
--   <a>$sel:persona:LaunchProfileMembership'</a>,
--   <a>launchProfileMembership_persona</a> - The persona.
newLaunchProfileMembership :: LaunchProfileMembership

-- | The ID of the identity store.
launchProfileMembership_identityStoreId :: Lens' LaunchProfileMembership (Maybe Text)

-- | The principal ID.
launchProfileMembership_principalId :: Lens' LaunchProfileMembership (Maybe Text)

-- | The persona.
launchProfileMembership_persona :: Lens' LaunchProfileMembership (Maybe LaunchProfilePersona)

-- | The configuration for a license service that is associated with a
--   studio resource.
--   
--   <i>See:</i> <a>newLicenseServiceConfiguration</a> smart constructor.
data LicenseServiceConfiguration
LicenseServiceConfiguration' :: Maybe Text -> LicenseServiceConfiguration

-- | The endpoint of the license service that is accessed by the studio
--   component resource.
[$sel:endpoint:LicenseServiceConfiguration'] :: LicenseServiceConfiguration -> Maybe Text

-- | Create a value of <a>LicenseServiceConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:endpoint:LicenseServiceConfiguration'</a>,
--   <a>licenseServiceConfiguration_endpoint</a> - The endpoint of the
--   license service that is accessed by the studio component resource.
newLicenseServiceConfiguration :: LicenseServiceConfiguration

-- | The endpoint of the license service that is accessed by the studio
--   component resource.
licenseServiceConfiguration_endpoint :: Lens' LicenseServiceConfiguration (Maybe Text)

-- | <i>See:</i> <a>newNewLaunchProfileMember</a> smart constructor.
data NewLaunchProfileMember
NewLaunchProfileMember' :: LaunchProfilePersona -> Text -> NewLaunchProfileMember

-- | The persona.
[$sel:persona:NewLaunchProfileMember'] :: NewLaunchProfileMember -> LaunchProfilePersona

-- | The principal ID.
[$sel:principalId:NewLaunchProfileMember'] :: NewLaunchProfileMember -> Text

-- | Create a value of <a>NewLaunchProfileMember</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:persona:NewLaunchProfileMember'</a>,
--   <a>newLaunchProfileMember_persona</a> - The persona.
--   
--   <a>$sel:principalId:NewLaunchProfileMember'</a>,
--   <a>newLaunchProfileMember_principalId</a> - The principal ID.
newNewLaunchProfileMember :: LaunchProfilePersona -> Text -> NewLaunchProfileMember

-- | The persona.
newLaunchProfileMember_persona :: Lens' NewLaunchProfileMember LaunchProfilePersona

-- | The principal ID.
newLaunchProfileMember_principalId :: Lens' NewLaunchProfileMember Text

-- | <i>See:</i> <a>newNewStudioMember</a> smart constructor.
data NewStudioMember
NewStudioMember' :: StudioPersona -> Text -> NewStudioMember

-- | The persona.
[$sel:persona:NewStudioMember'] :: NewStudioMember -> StudioPersona

-- | The principal ID.
[$sel:principalId:NewStudioMember'] :: NewStudioMember -> Text

-- | Create a value of <a>NewStudioMember</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:persona:NewStudioMember'</a>, <a>newStudioMember_persona</a> -
--   The persona.
--   
--   <a>$sel:principalId:NewStudioMember'</a>,
--   <a>newStudioMember_principalId</a> - The principal ID.
newNewStudioMember :: StudioPersona -> Text -> NewStudioMember

-- | The persona.
newStudioMember_persona :: Lens' NewStudioMember StudioPersona

-- | The principal ID.
newStudioMember_principalId :: Lens' NewStudioMember Text

-- | A parameter for a studio component script, in the form of a key:value
--   pair.
--   
--   <i>See:</i> <a>newScriptParameterKeyValue</a> smart constructor.
data ScriptParameterKeyValue
ScriptParameterKeyValue' :: Maybe Text -> Maybe Text -> ScriptParameterKeyValue

-- | A script parameter value.
[$sel:value:ScriptParameterKeyValue'] :: ScriptParameterKeyValue -> Maybe Text

-- | A script parameter key.
[$sel:key:ScriptParameterKeyValue'] :: ScriptParameterKeyValue -> Maybe Text

-- | Create a value of <a>ScriptParameterKeyValue</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:value:ScriptParameterKeyValue'</a>,
--   <a>scriptParameterKeyValue_value</a> - A script parameter value.
--   
--   <a>$sel:key:ScriptParameterKeyValue'</a>,
--   <a>scriptParameterKeyValue_key</a> - A script parameter key.
newScriptParameterKeyValue :: ScriptParameterKeyValue

-- | A script parameter value.
scriptParameterKeyValue_value :: Lens' ScriptParameterKeyValue (Maybe Text)

-- | A script parameter key.
scriptParameterKeyValue_key :: Lens' ScriptParameterKeyValue (Maybe Text)

-- | The configuration for a shared file storage system that is associated
--   with a studio resource.
--   
--   <i>See:</i> <a>newSharedFileSystemConfiguration</a> smart constructor.
data SharedFileSystemConfiguration
SharedFileSystemConfiguration' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> SharedFileSystemConfiguration

-- | The unique identifier for a file system.
[$sel:fileSystemId:SharedFileSystemConfiguration'] :: SharedFileSystemConfiguration -> Maybe Text

-- | The mount location for a shared file system on a Windows virtual
--   workstation.
[$sel:windowsMountDrive:SharedFileSystemConfiguration'] :: SharedFileSystemConfiguration -> Maybe Text

-- | The mount location for a shared file system on a Linux virtual
--   workstation.
[$sel:linuxMountPoint:SharedFileSystemConfiguration'] :: SharedFileSystemConfiguration -> Maybe Text

-- | The name of the file share.
[$sel:shareName:SharedFileSystemConfiguration'] :: SharedFileSystemConfiguration -> Maybe Text

-- | The endpoint of the shared file system that is accessed by the studio
--   component resource.
[$sel:endpoint:SharedFileSystemConfiguration'] :: SharedFileSystemConfiguration -> Maybe Text

-- | Create a value of <a>SharedFileSystemConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fileSystemId:SharedFileSystemConfiguration'</a>,
--   <a>sharedFileSystemConfiguration_fileSystemId</a> - The unique
--   identifier for a file system.
--   
--   <a>$sel:windowsMountDrive:SharedFileSystemConfiguration'</a>,
--   <a>sharedFileSystemConfiguration_windowsMountDrive</a> - The mount
--   location for a shared file system on a Windows virtual workstation.
--   
--   <a>$sel:linuxMountPoint:SharedFileSystemConfiguration'</a>,
--   <a>sharedFileSystemConfiguration_linuxMountPoint</a> - The mount
--   location for a shared file system on a Linux virtual workstation.
--   
--   <a>$sel:shareName:SharedFileSystemConfiguration'</a>,
--   <a>sharedFileSystemConfiguration_shareName</a> - The name of the file
--   share.
--   
--   <a>$sel:endpoint:SharedFileSystemConfiguration'</a>,
--   <a>sharedFileSystemConfiguration_endpoint</a> - The endpoint of the
--   shared file system that is accessed by the studio component resource.
newSharedFileSystemConfiguration :: SharedFileSystemConfiguration

-- | The unique identifier for a file system.
sharedFileSystemConfiguration_fileSystemId :: Lens' SharedFileSystemConfiguration (Maybe Text)

-- | The mount location for a shared file system on a Windows virtual
--   workstation.
sharedFileSystemConfiguration_windowsMountDrive :: Lens' SharedFileSystemConfiguration (Maybe Text)

-- | The mount location for a shared file system on a Linux virtual
--   workstation.
sharedFileSystemConfiguration_linuxMountPoint :: Lens' SharedFileSystemConfiguration (Maybe Text)

-- | The name of the file share.
sharedFileSystemConfiguration_shareName :: Lens' SharedFileSystemConfiguration (Maybe Text)

-- | The endpoint of the shared file system that is accessed by the studio
--   component resource.
sharedFileSystemConfiguration_endpoint :: Lens' SharedFileSystemConfiguration (Maybe Text)

-- | A configuration for a streaming session.
--   
--   <i>See:</i> <a>newStreamConfiguration</a> smart constructor.
data StreamConfiguration
StreamConfiguration' :: Maybe [Text] -> Maybe Natural -> Maybe StreamingClipboardMode -> Maybe (NonEmpty StreamingInstanceType) -> StreamConfiguration

-- | The streaming images that users can select from when launching a
--   streaming session with this launch profile.
[$sel:streamingImageIds:StreamConfiguration'] :: StreamConfiguration -> Maybe [Text]

-- | The length of time, in minutes, that a streaming session can run.
--   After this point, Nimble Studio automatically terminates the session.
[$sel:maxSessionLengthInMinutes:StreamConfiguration'] :: StreamConfiguration -> Maybe Natural

-- | Enable or disable the use of the system clipboard to copy and paste
--   between the streaming session and streaming client.
[$sel:clipboardMode:StreamConfiguration'] :: StreamConfiguration -> Maybe StreamingClipboardMode

-- | The EC2 instance types that users can select from when launching a
--   streaming session with this launch profile.
[$sel:ec2InstanceTypes:StreamConfiguration'] :: StreamConfiguration -> Maybe (NonEmpty StreamingInstanceType)

-- | Create a value of <a>StreamConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:streamingImageIds:StreamConfiguration'</a>,
--   <a>streamConfiguration_streamingImageIds</a> - The streaming images
--   that users can select from when launching a streaming session with
--   this launch profile.
--   
--   <a>$sel:maxSessionLengthInMinutes:StreamConfiguration'</a>,
--   <a>streamConfiguration_maxSessionLengthInMinutes</a> - The length of
--   time, in minutes, that a streaming session can run. After this point,
--   Nimble Studio automatically terminates the session.
--   
--   <a>$sel:clipboardMode:StreamConfiguration'</a>,
--   <a>streamConfiguration_clipboardMode</a> - Enable or disable the use
--   of the system clipboard to copy and paste between the streaming
--   session and streaming client.
--   
--   <a>$sel:ec2InstanceTypes:StreamConfiguration'</a>,
--   <a>streamConfiguration_ec2InstanceTypes</a> - The EC2 instance types
--   that users can select from when launching a streaming session with
--   this launch profile.
newStreamConfiguration :: StreamConfiguration

-- | The streaming images that users can select from when launching a
--   streaming session with this launch profile.
streamConfiguration_streamingImageIds :: Lens' StreamConfiguration (Maybe [Text])

-- | The length of time, in minutes, that a streaming session can run.
--   After this point, Nimble Studio automatically terminates the session.
streamConfiguration_maxSessionLengthInMinutes :: Lens' StreamConfiguration (Maybe Natural)

-- | Enable or disable the use of the system clipboard to copy and paste
--   between the streaming session and streaming client.
streamConfiguration_clipboardMode :: Lens' StreamConfiguration (Maybe StreamingClipboardMode)

-- | The EC2 instance types that users can select from when launching a
--   streaming session with this launch profile.
streamConfiguration_ec2InstanceTypes :: Lens' StreamConfiguration (Maybe (NonEmpty StreamingInstanceType))

-- | <i>See:</i> <a>newStreamConfigurationCreate</a> smart constructor.
data StreamConfigurationCreate
StreamConfigurationCreate' :: Maybe Natural -> StreamingClipboardMode -> [Text] -> NonEmpty StreamingInstanceType -> StreamConfigurationCreate

-- | The length of time, in minutes, that a streaming session can run.
--   After this point, Nimble Studio automatically terminates the session.
[$sel:maxSessionLengthInMinutes:StreamConfigurationCreate'] :: StreamConfigurationCreate -> Maybe Natural

-- | Enable or disable the use of the system clipboard to copy and paste
--   between the streaming session and streaming client.
[$sel:clipboardMode:StreamConfigurationCreate'] :: StreamConfigurationCreate -> StreamingClipboardMode

-- | The streaming images that users can select from when launching a
--   streaming session with this launch profile.
[$sel:streamingImageIds:StreamConfigurationCreate'] :: StreamConfigurationCreate -> [Text]

-- | The EC2 instance types that users can select from when launching a
--   streaming session with this launch profile.
[$sel:ec2InstanceTypes:StreamConfigurationCreate'] :: StreamConfigurationCreate -> NonEmpty StreamingInstanceType

-- | Create a value of <a>StreamConfigurationCreate</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:maxSessionLengthInMinutes:StreamConfigurationCreate'</a>,
--   <a>streamConfigurationCreate_maxSessionLengthInMinutes</a> - The
--   length of time, in minutes, that a streaming session can run. After
--   this point, Nimble Studio automatically terminates the session.
--   
--   <a>$sel:clipboardMode:StreamConfigurationCreate'</a>,
--   <a>streamConfigurationCreate_clipboardMode</a> - Enable or disable the
--   use of the system clipboard to copy and paste between the streaming
--   session and streaming client.
--   
--   <a>$sel:streamingImageIds:StreamConfigurationCreate'</a>,
--   <a>streamConfigurationCreate_streamingImageIds</a> - The streaming
--   images that users can select from when launching a streaming session
--   with this launch profile.
--   
--   <a>$sel:ec2InstanceTypes:StreamConfigurationCreate'</a>,
--   <a>streamConfigurationCreate_ec2InstanceTypes</a> - The EC2 instance
--   types that users can select from when launching a streaming session
--   with this launch profile.
newStreamConfigurationCreate :: StreamingClipboardMode -> NonEmpty StreamingInstanceType -> StreamConfigurationCreate

-- | The length of time, in minutes, that a streaming session can run.
--   After this point, Nimble Studio automatically terminates the session.
streamConfigurationCreate_maxSessionLengthInMinutes :: Lens' StreamConfigurationCreate (Maybe Natural)

-- | Enable or disable the use of the system clipboard to copy and paste
--   between the streaming session and streaming client.
streamConfigurationCreate_clipboardMode :: Lens' StreamConfigurationCreate StreamingClipboardMode

-- | The streaming images that users can select from when launching a
--   streaming session with this launch profile.
streamConfigurationCreate_streamingImageIds :: Lens' StreamConfigurationCreate [Text]

-- | The EC2 instance types that users can select from when launching a
--   streaming session with this launch profile.
streamConfigurationCreate_ec2InstanceTypes :: Lens' StreamConfigurationCreate (NonEmpty StreamingInstanceType)

-- | <i>See:</i> <a>newStreamingImage</a> smart constructor.
data StreamingImage
StreamingImage' :: Maybe StreamingImageState -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe StreamingImageEncryptionConfiguration -> Maybe Text -> Maybe [Text] -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe StreamingImageStatusCode -> StreamingImage

-- | The current state.
[$sel:state:StreamingImage'] :: StreamingImage -> Maybe StreamingImageState

-- | The platform of the streaming image, either WINDOWS or LINUX.
[$sel:platform:StreamingImage'] :: StreamingImage -> Maybe Text

-- | The ARN of the resource.
[$sel:arn:StreamingImage'] :: StreamingImage -> Maybe Text

-- | The ID of the streaming image.
[$sel:streamingImageId:StreamingImage'] :: StreamingImage -> Maybe Text

-- | The ID of an EC2 machine image with which to create the streaming
--   image.
[$sel:ec2ImageId:StreamingImage'] :: StreamingImage -> Maybe Text

-- | The owner of the streaming image, either the studioId that contains
--   the streaming image, or 'amazon' for images that are provided by
--   Amazon Nimble Studio.
[$sel:owner:StreamingImage'] :: StreamingImage -> Maybe Text

-- | A friendly name for a streaming image resource.
[$sel:name:StreamingImage'] :: StreamingImage -> Maybe Text

-- | The encryption configuration.
[$sel:encryptionConfiguration:StreamingImage'] :: StreamingImage -> Maybe StreamingImageEncryptionConfiguration

-- | The status message for the streaming image.
[$sel:statusMessage:StreamingImage'] :: StreamingImage -> Maybe Text

-- | The list of EULAs that must be accepted before a Streaming Session can
--   be started using this streaming image.
[$sel:eulaIds:StreamingImage'] :: StreamingImage -> Maybe [Text]

-- | A human-readable description of the streaming image.
[$sel:description:StreamingImage'] :: StreamingImage -> Maybe Text

-- | A collection of labels, in the form of key:value pairs, that apply to
--   this resource.
[$sel:tags:StreamingImage'] :: StreamingImage -> Maybe (HashMap Text Text)

-- | The status code.
[$sel:statusCode:StreamingImage'] :: StreamingImage -> Maybe StreamingImageStatusCode

-- | Create a value of <a>StreamingImage</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:state:StreamingImage'</a>, <a>streamingImage_state</a> - The
--   current state.
--   
--   <a>$sel:platform:StreamingImage'</a>, <a>streamingImage_platform</a> -
--   The platform of the streaming image, either WINDOWS or LINUX.
--   
--   <a>$sel:arn:StreamingImage'</a>, <a>streamingImage_arn</a> - The ARN
--   of the resource.
--   
--   <a>$sel:streamingImageId:StreamingImage'</a>,
--   <a>streamingImage_streamingImageId</a> - The ID of the streaming
--   image.
--   
--   <a>$sel:ec2ImageId:StreamingImage'</a>,
--   <a>streamingImage_ec2ImageId</a> - The ID of an EC2 machine image with
--   which to create the streaming image.
--   
--   <a>$sel:owner:StreamingImage'</a>, <a>streamingImage_owner</a> - The
--   owner of the streaming image, either the studioId that contains the
--   streaming image, or 'amazon' for images that are provided by Amazon
--   Nimble Studio.
--   
--   <a>$sel:name:StreamingImage'</a>, <a>streamingImage_name</a> - A
--   friendly name for a streaming image resource.
--   
--   <a>$sel:encryptionConfiguration:StreamingImage'</a>,
--   <a>streamingImage_encryptionConfiguration</a> - The encryption
--   configuration.
--   
--   <a>$sel:statusMessage:StreamingImage'</a>,
--   <a>streamingImage_statusMessage</a> - The status message for the
--   streaming image.
--   
--   <a>$sel:eulaIds:StreamingImage'</a>, <a>streamingImage_eulaIds</a> -
--   The list of EULAs that must be accepted before a Streaming Session can
--   be started using this streaming image.
--   
--   <a>$sel:description:StreamingImage'</a>,
--   <a>streamingImage_description</a> - A human-readable description of
--   the streaming image.
--   
--   <a>$sel:tags:StreamingImage'</a>, <a>streamingImage_tags</a> - A
--   collection of labels, in the form of key:value pairs, that apply to
--   this resource.
--   
--   <a>$sel:statusCode:StreamingImage'</a>,
--   <a>streamingImage_statusCode</a> - The status code.
newStreamingImage :: StreamingImage

-- | The current state.
streamingImage_state :: Lens' StreamingImage (Maybe StreamingImageState)

-- | The platform of the streaming image, either WINDOWS or LINUX.
streamingImage_platform :: Lens' StreamingImage (Maybe Text)

-- | The ARN of the resource.
streamingImage_arn :: Lens' StreamingImage (Maybe Text)

-- | The ID of the streaming image.
streamingImage_streamingImageId :: Lens' StreamingImage (Maybe Text)

-- | The ID of an EC2 machine image with which to create the streaming
--   image.
streamingImage_ec2ImageId :: Lens' StreamingImage (Maybe Text)

-- | The owner of the streaming image, either the studioId that contains
--   the streaming image, or 'amazon' for images that are provided by
--   Amazon Nimble Studio.
streamingImage_owner :: Lens' StreamingImage (Maybe Text)

-- | A friendly name for a streaming image resource.
streamingImage_name :: Lens' StreamingImage (Maybe Text)

-- | The encryption configuration.
streamingImage_encryptionConfiguration :: Lens' StreamingImage (Maybe StreamingImageEncryptionConfiguration)

-- | The status message for the streaming image.
streamingImage_statusMessage :: Lens' StreamingImage (Maybe Text)

-- | The list of EULAs that must be accepted before a Streaming Session can
--   be started using this streaming image.
streamingImage_eulaIds :: Lens' StreamingImage (Maybe [Text])

-- | A human-readable description of the streaming image.
streamingImage_description :: Lens' StreamingImage (Maybe Text)

-- | A collection of labels, in the form of key:value pairs, that apply to
--   this resource.
streamingImage_tags :: Lens' StreamingImage (Maybe (HashMap Text Text))

-- | The status code.
streamingImage_statusCode :: Lens' StreamingImage (Maybe StreamingImageStatusCode)

-- | <i>See:</i> <a>newStreamingImageEncryptionConfiguration</a> smart
--   constructor.
data StreamingImageEncryptionConfiguration
StreamingImageEncryptionConfiguration' :: Maybe Text -> StreamingImageEncryptionConfigurationKeyType -> StreamingImageEncryptionConfiguration

-- | The ARN for a KMS key that is used to encrypt studio data.
[$sel:keyArn:StreamingImageEncryptionConfiguration'] :: StreamingImageEncryptionConfiguration -> Maybe Text

-- | The type of KMS key that is used to encrypt studio data.
[$sel:keyType:StreamingImageEncryptionConfiguration'] :: StreamingImageEncryptionConfiguration -> StreamingImageEncryptionConfigurationKeyType

-- | Create a value of <a>StreamingImageEncryptionConfiguration</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:keyArn:StreamingImageEncryptionConfiguration'</a>,
--   <a>streamingImageEncryptionConfiguration_keyArn</a> - The ARN for a
--   KMS key that is used to encrypt studio data.
--   
--   <a>$sel:keyType:StreamingImageEncryptionConfiguration'</a>,
--   <a>streamingImageEncryptionConfiguration_keyType</a> - The type of KMS
--   key that is used to encrypt studio data.
newStreamingImageEncryptionConfiguration :: StreamingImageEncryptionConfigurationKeyType -> StreamingImageEncryptionConfiguration

-- | The ARN for a KMS key that is used to encrypt studio data.
streamingImageEncryptionConfiguration_keyArn :: Lens' StreamingImageEncryptionConfiguration (Maybe Text)

-- | The type of KMS key that is used to encrypt studio data.
streamingImageEncryptionConfiguration_keyType :: Lens' StreamingImageEncryptionConfiguration StreamingImageEncryptionConfigurationKeyType

-- | <i>See:</i> <a>newStreamingSession</a> smart constructor.
data StreamingSession
StreamingSession' :: Maybe Text -> Maybe StreamingSessionState -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe StreamingSessionStatusCode -> StreamingSession

-- | The user ID of the user that owns the streaming session.
[$sel:ownedBy:StreamingSession'] :: StreamingSession -> Maybe Text

-- | The current state.
[$sel:state:StreamingSession'] :: StreamingSession -> Maybe StreamingSessionState

-- | The ARN of the resource.
[$sel:arn:StreamingSession'] :: StreamingSession -> Maybe Text

-- | The Unix epoch timestamp in seconds for when the resource was created.
[$sel:createdAt:StreamingSession'] :: StreamingSession -> Maybe POSIX

-- | The EC2 Instance type used for the streaming session.
[$sel:ec2InstanceType:StreamingSession'] :: StreamingSession -> Maybe Text

-- | The user ID of the user that created the streaming session.
[$sel:createdBy:StreamingSession'] :: StreamingSession -> Maybe Text

-- | The ID of the launch profile used to control access from the streaming
--   session.
[$sel:launchProfileId:StreamingSession'] :: StreamingSession -> Maybe Text

-- | The ID of the streaming image.
[$sel:streamingImageId:StreamingSession'] :: StreamingSession -> Maybe Text

-- | The user ID of the user that most recently updated the resource.
[$sel:updatedBy:StreamingSession'] :: StreamingSession -> Maybe Text

-- | The time the streaming session will automatically terminate if not
--   terminated by the user.
[$sel:terminateAt:StreamingSession'] :: StreamingSession -> Maybe POSIX

-- | The status message for the streaming session.
[$sel:statusMessage:StreamingSession'] :: StreamingSession -> Maybe Text

-- | The Unix epoch timestamp in seconds for when the resource was updated.
[$sel:updatedAt:StreamingSession'] :: StreamingSession -> Maybe POSIX

-- | The session ID.
[$sel:sessionId:StreamingSession'] :: StreamingSession -> Maybe Text

-- | A collection of labels, in the form of key:value pairs, that apply to
--   this resource.
[$sel:tags:StreamingSession'] :: StreamingSession -> Maybe (HashMap Text Text)

-- | The status code.
[$sel:statusCode:StreamingSession'] :: StreamingSession -> Maybe StreamingSessionStatusCode

-- | Create a value of <a>StreamingSession</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ownedBy:StreamingSession'</a>, <a>streamingSession_ownedBy</a>
--   - The user ID of the user that owns the streaming session.
--   
--   <a>$sel:state:StreamingSession'</a>, <a>streamingSession_state</a> -
--   The current state.
--   
--   <a>$sel:arn:StreamingSession'</a>, <a>streamingSession_arn</a> - The
--   ARN of the resource.
--   
--   <a>$sel:createdAt:StreamingSession'</a>,
--   <a>streamingSession_createdAt</a> - The Unix epoch timestamp in
--   seconds for when the resource was created.
--   
--   <a>$sel:ec2InstanceType:StreamingSession'</a>,
--   <a>streamingSession_ec2InstanceType</a> - The EC2 Instance type used
--   for the streaming session.
--   
--   <a>$sel:createdBy:StreamingSession'</a>,
--   <a>streamingSession_createdBy</a> - The user ID of the user that
--   created the streaming session.
--   
--   <a>$sel:launchProfileId:StreamingSession'</a>,
--   <a>streamingSession_launchProfileId</a> - The ID of the launch profile
--   used to control access from the streaming session.
--   
--   <a>$sel:streamingImageId:StreamingSession'</a>,
--   <a>streamingSession_streamingImageId</a> - The ID of the streaming
--   image.
--   
--   <a>$sel:updatedBy:StreamingSession'</a>,
--   <a>streamingSession_updatedBy</a> - The user ID of the user that most
--   recently updated the resource.
--   
--   <a>$sel:terminateAt:StreamingSession'</a>,
--   <a>streamingSession_terminateAt</a> - The time the streaming session
--   will automatically terminate if not terminated by the user.
--   
--   <a>$sel:statusMessage:StreamingSession'</a>,
--   <a>streamingSession_statusMessage</a> - The status message for the
--   streaming session.
--   
--   <a>$sel:updatedAt:StreamingSession'</a>,
--   <a>streamingSession_updatedAt</a> - The Unix epoch timestamp in
--   seconds for when the resource was updated.
--   
--   <a>$sel:sessionId:StreamingSession'</a>,
--   <a>streamingSession_sessionId</a> - The session ID.
--   
--   <a>$sel:tags:StreamingSession'</a>, <a>streamingSession_tags</a> - A
--   collection of labels, in the form of key:value pairs, that apply to
--   this resource.
--   
--   <a>$sel:statusCode:StreamingSession'</a>,
--   <a>streamingSession_statusCode</a> - The status code.
newStreamingSession :: StreamingSession

-- | The user ID of the user that owns the streaming session.
streamingSession_ownedBy :: Lens' StreamingSession (Maybe Text)

-- | The current state.
streamingSession_state :: Lens' StreamingSession (Maybe StreamingSessionState)

-- | The ARN of the resource.
streamingSession_arn :: Lens' StreamingSession (Maybe Text)

-- | The Unix epoch timestamp in seconds for when the resource was created.
streamingSession_createdAt :: Lens' StreamingSession (Maybe UTCTime)

-- | The EC2 Instance type used for the streaming session.
streamingSession_ec2InstanceType :: Lens' StreamingSession (Maybe Text)

-- | The user ID of the user that created the streaming session.
streamingSession_createdBy :: Lens' StreamingSession (Maybe Text)

-- | The ID of the launch profile used to control access from the streaming
--   session.
streamingSession_launchProfileId :: Lens' StreamingSession (Maybe Text)

-- | The ID of the streaming image.
streamingSession_streamingImageId :: Lens' StreamingSession (Maybe Text)

-- | The user ID of the user that most recently updated the resource.
streamingSession_updatedBy :: Lens' StreamingSession (Maybe Text)

-- | The time the streaming session will automatically terminate if not
--   terminated by the user.
streamingSession_terminateAt :: Lens' StreamingSession (Maybe UTCTime)

-- | The status message for the streaming session.
streamingSession_statusMessage :: Lens' StreamingSession (Maybe Text)

-- | The Unix epoch timestamp in seconds for when the resource was updated.
streamingSession_updatedAt :: Lens' StreamingSession (Maybe UTCTime)

-- | The session ID.
streamingSession_sessionId :: Lens' StreamingSession (Maybe Text)

-- | A collection of labels, in the form of key:value pairs, that apply to
--   this resource.
streamingSession_tags :: Lens' StreamingSession (Maybe (HashMap Text Text))

-- | The status code.
streamingSession_statusCode :: Lens' StreamingSession (Maybe StreamingSessionStatusCode)

-- | <i>See:</i> <a>newStreamingSessionStream</a> smart constructor.
data StreamingSessionStream
StreamingSessionStream' :: Maybe Text -> Maybe StreamingSessionStreamState -> Maybe POSIX -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe StreamingSessionStreamStatusCode -> StreamingSessionStream

-- | The user ID of the user that owns the streaming session.
[$sel:ownedBy:StreamingSessionStream'] :: StreamingSessionStream -> Maybe Text

-- | The current state.
[$sel:state:StreamingSessionStream'] :: StreamingSessionStream -> Maybe StreamingSessionStreamState

-- | The Unix epoch timestamp in seconds for when the resource was created.
[$sel:createdAt:StreamingSessionStream'] :: StreamingSessionStream -> Maybe POSIX

-- | The Unix epoch timestamp in seconds for when the resource expires.
[$sel:expiresAt:StreamingSessionStream'] :: StreamingSessionStream -> Maybe POSIX

-- | The URL to connect to this stream using the DCV client.
[$sel:url:StreamingSessionStream'] :: StreamingSessionStream -> Maybe Text

-- | The user ID of the user that created the streaming session stream.
[$sel:createdBy:StreamingSessionStream'] :: StreamingSessionStream -> Maybe Text

-- | The stream ID.
[$sel:streamId:StreamingSessionStream'] :: StreamingSessionStream -> Maybe Text

-- | The streaming session stream status code.
[$sel:statusCode:StreamingSessionStream'] :: StreamingSessionStream -> Maybe StreamingSessionStreamStatusCode

-- | Create a value of <a>StreamingSessionStream</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ownedBy:StreamingSessionStream'</a>,
--   <a>streamingSessionStream_ownedBy</a> - The user ID of the user that
--   owns the streaming session.
--   
--   <a>$sel:state:StreamingSessionStream'</a>,
--   <a>streamingSessionStream_state</a> - The current state.
--   
--   <a>$sel:createdAt:StreamingSessionStream'</a>,
--   <a>streamingSessionStream_createdAt</a> - The Unix epoch timestamp in
--   seconds for when the resource was created.
--   
--   <a>$sel:expiresAt:StreamingSessionStream'</a>,
--   <a>streamingSessionStream_expiresAt</a> - The Unix epoch timestamp in
--   seconds for when the resource expires.
--   
--   <a>$sel:url:StreamingSessionStream'</a>,
--   <a>streamingSessionStream_url</a> - The URL to connect to this stream
--   using the DCV client.
--   
--   <a>$sel:createdBy:StreamingSessionStream'</a>,
--   <a>streamingSessionStream_createdBy</a> - The user ID of the user that
--   created the streaming session stream.
--   
--   <a>$sel:streamId:StreamingSessionStream'</a>,
--   <a>streamingSessionStream_streamId</a> - The stream ID.
--   
--   <a>$sel:statusCode:StreamingSessionStream'</a>,
--   <a>streamingSessionStream_statusCode</a> - The streaming session
--   stream status code.
newStreamingSessionStream :: StreamingSessionStream

-- | The user ID of the user that owns the streaming session.
streamingSessionStream_ownedBy :: Lens' StreamingSessionStream (Maybe Text)

-- | The current state.
streamingSessionStream_state :: Lens' StreamingSessionStream (Maybe StreamingSessionStreamState)

-- | The Unix epoch timestamp in seconds for when the resource was created.
streamingSessionStream_createdAt :: Lens' StreamingSessionStream (Maybe UTCTime)

-- | The Unix epoch timestamp in seconds for when the resource expires.
streamingSessionStream_expiresAt :: Lens' StreamingSessionStream (Maybe UTCTime)

-- | The URL to connect to this stream using the DCV client.
streamingSessionStream_url :: Lens' StreamingSessionStream (Maybe Text)

-- | The user ID of the user that created the streaming session stream.
streamingSessionStream_createdBy :: Lens' StreamingSessionStream (Maybe Text)

-- | The stream ID.
streamingSessionStream_streamId :: Lens' StreamingSessionStream (Maybe Text)

-- | The streaming session stream status code.
streamingSessionStream_statusCode :: Lens' StreamingSessionStream (Maybe StreamingSessionStreamStatusCode)

-- | <i>See:</i> <a>newStudio</a> smart constructor.
data Studio
Studio' :: Maybe StudioEncryptionConfiguration -> Maybe StudioState -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe StudioStatusCode -> Studio

-- | Configuration of the encryption method that is used for the studio.
[$sel:studioEncryptionConfiguration:Studio'] :: Studio -> Maybe StudioEncryptionConfiguration

-- | The current state of the studio resource.
[$sel:state:Studio'] :: Studio -> Maybe StudioState

-- | The name of the studio, as included in the URL when accessing it in
--   the Nimble Studio portal.
[$sel:studioName:Studio'] :: Studio -> Maybe Text

-- | The Amazon Resource Name (ARN) that is assigned to a studio resource
--   and uniquely identifies it. ARNs are unique across all Regions.
[$sel:arn:Studio'] :: Studio -> Maybe Text

-- | The Unix epoch timestamp in seconds for when the resource was created.
[$sel:createdAt:Studio'] :: Studio -> Maybe POSIX

-- | The unique identifier for a studio resource. In Nimble Studio, all
--   other resources are contained in a studio resource.
[$sel:studioId:Studio'] :: Studio -> Maybe Text

-- | The IAM role that studio users assume when logging in to the Nimble
--   Studio portal.
[$sel:userRoleArn:Studio'] :: Studio -> Maybe Text

-- | The Amazon Web Services SSO application client ID used to integrate
--   with Amazon Web Services SSO to enable Amazon Web Services SSO users
--   to log in to Nimble portal.
[$sel:ssoClientId:Studio'] :: Studio -> Maybe Text

-- | The Amazon Web Services Region where the studio resource is located.
[$sel:homeRegion:Studio'] :: Studio -> Maybe Text

-- | Additional detail on the studio state.
[$sel:statusMessage:Studio'] :: Studio -> Maybe Text

-- | A friendly name for the studio.
[$sel:displayName:Studio'] :: Studio -> Maybe Text

-- | The Unix epoch timestamp in seconds for when the resource was updated.
[$sel:updatedAt:Studio'] :: Studio -> Maybe POSIX

-- | The address of the web page for the studio.
[$sel:studioUrl:Studio'] :: Studio -> Maybe Text

-- | The IAM role that studio admins assume when logging in to the Nimble
--   Studio portal.
[$sel:adminRoleArn:Studio'] :: Studio -> Maybe Text

-- | A collection of labels, in the form of key:value pairs, that apply to
--   this resource.
[$sel:tags:Studio'] :: Studio -> Maybe (HashMap Text Text)

-- | Status codes that provide additional detail on the studio state.
[$sel:statusCode:Studio'] :: Studio -> Maybe StudioStatusCode

-- | Create a value of <a>Studio</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:studioEncryptionConfiguration:Studio'</a>,
--   <a>studio_studioEncryptionConfiguration</a> - Configuration of the
--   encryption method that is used for the studio.
--   
--   <a>$sel:state:Studio'</a>, <a>studio_state</a> - The current state of
--   the studio resource.
--   
--   <a>$sel:studioName:Studio'</a>, <a>studio_studioName</a> - The name of
--   the studio, as included in the URL when accessing it in the Nimble
--   Studio portal.
--   
--   <a>$sel:arn:Studio'</a>, <a>studio_arn</a> - The Amazon Resource Name
--   (ARN) that is assigned to a studio resource and uniquely identifies
--   it. ARNs are unique across all Regions.
--   
--   <a>$sel:createdAt:Studio'</a>, <a>studio_createdAt</a> - The Unix
--   epoch timestamp in seconds for when the resource was created.
--   
--   <a>$sel:studioId:Studio'</a>, <a>studio_studioId</a> - The unique
--   identifier for a studio resource. In Nimble Studio, all other
--   resources are contained in a studio resource.
--   
--   <a>$sel:userRoleArn:Studio'</a>, <a>studio_userRoleArn</a> - The IAM
--   role that studio users assume when logging in to the Nimble Studio
--   portal.
--   
--   <a>$sel:ssoClientId:Studio'</a>, <a>studio_ssoClientId</a> - The
--   Amazon Web Services SSO application client ID used to integrate with
--   Amazon Web Services SSO to enable Amazon Web Services SSO users to log
--   in to Nimble portal.
--   
--   <a>$sel:homeRegion:Studio'</a>, <a>studio_homeRegion</a> - The Amazon
--   Web Services Region where the studio resource is located.
--   
--   <a>$sel:statusMessage:Studio'</a>, <a>studio_statusMessage</a> -
--   Additional detail on the studio state.
--   
--   <a>$sel:displayName:Studio'</a>, <a>studio_displayName</a> - A
--   friendly name for the studio.
--   
--   <a>$sel:updatedAt:Studio'</a>, <a>studio_updatedAt</a> - The Unix
--   epoch timestamp in seconds for when the resource was updated.
--   
--   <a>$sel:studioUrl:Studio'</a>, <a>studio_studioUrl</a> - The address
--   of the web page for the studio.
--   
--   <a>$sel:adminRoleArn:Studio'</a>, <a>studio_adminRoleArn</a> - The IAM
--   role that studio admins assume when logging in to the Nimble Studio
--   portal.
--   
--   <a>$sel:tags:Studio'</a>, <a>studio_tags</a> - A collection of labels,
--   in the form of key:value pairs, that apply to this resource.
--   
--   <a>$sel:statusCode:Studio'</a>, <a>studio_statusCode</a> - Status
--   codes that provide additional detail on the studio state.
newStudio :: Studio

-- | Configuration of the encryption method that is used for the studio.
studio_studioEncryptionConfiguration :: Lens' Studio (Maybe StudioEncryptionConfiguration)

-- | The current state of the studio resource.
studio_state :: Lens' Studio (Maybe StudioState)

-- | The name of the studio, as included in the URL when accessing it in
--   the Nimble Studio portal.
studio_studioName :: Lens' Studio (Maybe Text)

-- | The Amazon Resource Name (ARN) that is assigned to a studio resource
--   and uniquely identifies it. ARNs are unique across all Regions.
studio_arn :: Lens' Studio (Maybe Text)

-- | The Unix epoch timestamp in seconds for when the resource was created.
studio_createdAt :: Lens' Studio (Maybe UTCTime)

-- | The unique identifier for a studio resource. In Nimble Studio, all
--   other resources are contained in a studio resource.
studio_studioId :: Lens' Studio (Maybe Text)

-- | The IAM role that studio users assume when logging in to the Nimble
--   Studio portal.
studio_userRoleArn :: Lens' Studio (Maybe Text)

-- | The Amazon Web Services SSO application client ID used to integrate
--   with Amazon Web Services SSO to enable Amazon Web Services SSO users
--   to log in to Nimble portal.
studio_ssoClientId :: Lens' Studio (Maybe Text)

-- | The Amazon Web Services Region where the studio resource is located.
studio_homeRegion :: Lens' Studio (Maybe Text)

-- | Additional detail on the studio state.
studio_statusMessage :: Lens' Studio (Maybe Text)

-- | A friendly name for the studio.
studio_displayName :: Lens' Studio (Maybe Text)

-- | The Unix epoch timestamp in seconds for when the resource was updated.
studio_updatedAt :: Lens' Studio (Maybe UTCTime)

-- | The address of the web page for the studio.
studio_studioUrl :: Lens' Studio (Maybe Text)

-- | The IAM role that studio admins assume when logging in to the Nimble
--   Studio portal.
studio_adminRoleArn :: Lens' Studio (Maybe Text)

-- | A collection of labels, in the form of key:value pairs, that apply to
--   this resource.
studio_tags :: Lens' Studio (Maybe (HashMap Text Text))

-- | Status codes that provide additional detail on the studio state.
studio_statusCode :: Lens' Studio (Maybe StudioStatusCode)

-- | A network that is used by a studio’s users and workflows, including
--   render farm, Active Directory, licensing, and file system.
--   
--   <i>See:</i> <a>newStudioComponent</a> smart constructor.
data StudioComponent
StudioComponent' :: Maybe [StudioComponentInitializationScript] -> Maybe StudioComponentState -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe (NonEmpty Text) -> Maybe Text -> Maybe StudioComponentSubtype -> Maybe Text -> Maybe Text -> Maybe [ScriptParameterKeyValue] -> Maybe POSIX -> Maybe StudioComponentType -> Maybe StudioComponentConfiguration -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe StudioComponentStatusCode -> StudioComponent

-- | Initialization scripts for studio components.
[$sel:initializationScripts:StudioComponent'] :: StudioComponent -> Maybe [StudioComponentInitializationScript]

-- | The current state.
[$sel:state:StudioComponent'] :: StudioComponent -> Maybe StudioComponentState

-- | The unique identifier for a studio component resource.
[$sel:studioComponentId:StudioComponent'] :: StudioComponent -> Maybe Text

-- | The ARN of the resource.
[$sel:arn:StudioComponent'] :: StudioComponent -> Maybe Text

-- | The Unix epoch timestamp in seconds for when the resource was created.
[$sel:createdAt:StudioComponent'] :: StudioComponent -> Maybe POSIX

-- | The user ID of the user that created the studio component.
[$sel:createdBy:StudioComponent'] :: StudioComponent -> Maybe Text

-- | The EC2 security groups that control access to the studio component.
[$sel:ec2SecurityGroupIds:StudioComponent'] :: StudioComponent -> Maybe (NonEmpty Text)

-- | The user ID of the user that most recently updated the resource.
[$sel:updatedBy:StudioComponent'] :: StudioComponent -> Maybe Text

-- | The specific subtype of a studio component.
[$sel:subtype:StudioComponent'] :: StudioComponent -> Maybe StudioComponentSubtype

-- | A friendly name for the studio component resource.
[$sel:name:StudioComponent'] :: StudioComponent -> Maybe Text

-- | The status message for the studio component.
[$sel:statusMessage:StudioComponent'] :: StudioComponent -> Maybe Text

-- | Parameters for the studio component scripts.
[$sel:scriptParameters:StudioComponent'] :: StudioComponent -> Maybe [ScriptParameterKeyValue]

-- | The Unix epoch timestamp in seconds for when the resource was updated.
[$sel:updatedAt:StudioComponent'] :: StudioComponent -> Maybe POSIX

-- | The type of the studio component.
[$sel:type':StudioComponent'] :: StudioComponent -> Maybe StudioComponentType

-- | The configuration of the studio component, based on component type.
[$sel:configuration:StudioComponent'] :: StudioComponent -> Maybe StudioComponentConfiguration

-- | A human-readable description for the studio component resource.
[$sel:description:StudioComponent'] :: StudioComponent -> Maybe Text

-- | A collection of labels, in the form of key:value pairs, that apply to
--   this resource.
[$sel:tags:StudioComponent'] :: StudioComponent -> Maybe (HashMap Text Text)

-- | The status code.
[$sel:statusCode:StudioComponent'] :: StudioComponent -> Maybe StudioComponentStatusCode

-- | Create a value of <a>StudioComponent</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:initializationScripts:StudioComponent'</a>,
--   <a>studioComponent_initializationScripts</a> - Initialization scripts
--   for studio components.
--   
--   <a>$sel:state:StudioComponent'</a>, <a>studioComponent_state</a> - The
--   current state.
--   
--   <a>$sel:studioComponentId:StudioComponent'</a>,
--   <a>studioComponent_studioComponentId</a> - The unique identifier for a
--   studio component resource.
--   
--   <a>$sel:arn:StudioComponent'</a>, <a>studioComponent_arn</a> - The ARN
--   of the resource.
--   
--   <a>$sel:createdAt:StudioComponent'</a>,
--   <a>studioComponent_createdAt</a> - The Unix epoch timestamp in seconds
--   for when the resource was created.
--   
--   <a>$sel:createdBy:StudioComponent'</a>,
--   <a>studioComponent_createdBy</a> - The user ID of the user that
--   created the studio component.
--   
--   <a>$sel:ec2SecurityGroupIds:StudioComponent'</a>,
--   <a>studioComponent_ec2SecurityGroupIds</a> - The EC2 security groups
--   that control access to the studio component.
--   
--   <a>$sel:updatedBy:StudioComponent'</a>,
--   <a>studioComponent_updatedBy</a> - The user ID of the user that most
--   recently updated the resource.
--   
--   <a>$sel:subtype:StudioComponent'</a>, <a>studioComponent_subtype</a> -
--   The specific subtype of a studio component.
--   
--   <a>$sel:name:StudioComponent'</a>, <a>studioComponent_name</a> - A
--   friendly name for the studio component resource.
--   
--   <a>$sel:statusMessage:StudioComponent'</a>,
--   <a>studioComponent_statusMessage</a> - The status message for the
--   studio component.
--   
--   <a>$sel:scriptParameters:StudioComponent'</a>,
--   <a>studioComponent_scriptParameters</a> - Parameters for the studio
--   component scripts.
--   
--   <a>$sel:updatedAt:StudioComponent'</a>,
--   <a>studioComponent_updatedAt</a> - The Unix epoch timestamp in seconds
--   for when the resource was updated.
--   
--   <a>$sel:type':StudioComponent'</a>, <a>studioComponent_type</a> - The
--   type of the studio component.
--   
--   <a>$sel:configuration:StudioComponent'</a>,
--   <a>studioComponent_configuration</a> - The configuration of the studio
--   component, based on component type.
--   
--   <a>$sel:description:StudioComponent'</a>,
--   <a>studioComponent_description</a> - A human-readable description for
--   the studio component resource.
--   
--   <a>$sel:tags:StudioComponent'</a>, <a>studioComponent_tags</a> - A
--   collection of labels, in the form of key:value pairs, that apply to
--   this resource.
--   
--   <a>$sel:statusCode:StudioComponent'</a>,
--   <a>studioComponent_statusCode</a> - The status code.
newStudioComponent :: StudioComponent

-- | Initialization scripts for studio components.
studioComponent_initializationScripts :: Lens' StudioComponent (Maybe [StudioComponentInitializationScript])

-- | The current state.
studioComponent_state :: Lens' StudioComponent (Maybe StudioComponentState)

-- | The unique identifier for a studio component resource.
studioComponent_studioComponentId :: Lens' StudioComponent (Maybe Text)

-- | The ARN of the resource.
studioComponent_arn :: Lens' StudioComponent (Maybe Text)

-- | The Unix epoch timestamp in seconds for when the resource was created.
studioComponent_createdAt :: Lens' StudioComponent (Maybe UTCTime)

-- | The user ID of the user that created the studio component.
studioComponent_createdBy :: Lens' StudioComponent (Maybe Text)

-- | The EC2 security groups that control access to the studio component.
studioComponent_ec2SecurityGroupIds :: Lens' StudioComponent (Maybe (NonEmpty Text))

-- | The user ID of the user that most recently updated the resource.
studioComponent_updatedBy :: Lens' StudioComponent (Maybe Text)

-- | The specific subtype of a studio component.
studioComponent_subtype :: Lens' StudioComponent (Maybe StudioComponentSubtype)

-- | A friendly name for the studio component resource.
studioComponent_name :: Lens' StudioComponent (Maybe Text)

-- | The status message for the studio component.
studioComponent_statusMessage :: Lens' StudioComponent (Maybe Text)

-- | Parameters for the studio component scripts.
studioComponent_scriptParameters :: Lens' StudioComponent (Maybe [ScriptParameterKeyValue])

-- | The Unix epoch timestamp in seconds for when the resource was updated.
studioComponent_updatedAt :: Lens' StudioComponent (Maybe UTCTime)

-- | The type of the studio component.
studioComponent_type :: Lens' StudioComponent (Maybe StudioComponentType)

-- | The configuration of the studio component, based on component type.
studioComponent_configuration :: Lens' StudioComponent (Maybe StudioComponentConfiguration)

-- | A human-readable description for the studio component resource.
studioComponent_description :: Lens' StudioComponent (Maybe Text)

-- | A collection of labels, in the form of key:value pairs, that apply to
--   this resource.
studioComponent_tags :: Lens' StudioComponent (Maybe (HashMap Text Text))

-- | The status code.
studioComponent_statusCode :: Lens' StudioComponent (Maybe StudioComponentStatusCode)

-- | The configuration of the studio component, based on component type.
--   
--   <i>See:</i> <a>newStudioComponentConfiguration</a> smart constructor.
data StudioComponentConfiguration
StudioComponentConfiguration' :: Maybe ActiveDirectoryConfiguration -> Maybe LicenseServiceConfiguration -> Maybe SharedFileSystemConfiguration -> Maybe ComputeFarmConfiguration -> StudioComponentConfiguration

-- | The configuration for a Microsoft Active Directory (Microsoft AD)
--   studio resource.
[$sel:activeDirectoryConfiguration:StudioComponentConfiguration'] :: StudioComponentConfiguration -> Maybe ActiveDirectoryConfiguration

-- | The configuration for a license service that is associated with a
--   studio resource.
[$sel:licenseServiceConfiguration:StudioComponentConfiguration'] :: StudioComponentConfiguration -> Maybe LicenseServiceConfiguration

-- | The configuration for a shared file storage system that is associated
--   with a studio resource.
[$sel:sharedFileSystemConfiguration:StudioComponentConfiguration'] :: StudioComponentConfiguration -> Maybe SharedFileSystemConfiguration

-- | The configuration for a render farm that is associated with a studio
--   resource.
[$sel:computeFarmConfiguration:StudioComponentConfiguration'] :: StudioComponentConfiguration -> Maybe ComputeFarmConfiguration

-- | Create a value of <a>StudioComponentConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:activeDirectoryConfiguration:StudioComponentConfiguration'</a>,
--   <a>studioComponentConfiguration_activeDirectoryConfiguration</a> - The
--   configuration for a Microsoft Active Directory (Microsoft AD) studio
--   resource.
--   
--   <a>$sel:licenseServiceConfiguration:StudioComponentConfiguration'</a>,
--   <a>studioComponentConfiguration_licenseServiceConfiguration</a> - The
--   configuration for a license service that is associated with a studio
--   resource.
--   
--   
--   <a>$sel:sharedFileSystemConfiguration:StudioComponentConfiguration'</a>,
--   <a>studioComponentConfiguration_sharedFileSystemConfiguration</a> -
--   The configuration for a shared file storage system that is associated
--   with a studio resource.
--   
--   <a>$sel:computeFarmConfiguration:StudioComponentConfiguration'</a>,
--   <a>studioComponentConfiguration_computeFarmConfiguration</a> - The
--   configuration for a render farm that is associated with a studio
--   resource.
newStudioComponentConfiguration :: StudioComponentConfiguration

-- | The configuration for a Microsoft Active Directory (Microsoft AD)
--   studio resource.
studioComponentConfiguration_activeDirectoryConfiguration :: Lens' StudioComponentConfiguration (Maybe ActiveDirectoryConfiguration)

-- | The configuration for a license service that is associated with a
--   studio resource.
studioComponentConfiguration_licenseServiceConfiguration :: Lens' StudioComponentConfiguration (Maybe LicenseServiceConfiguration)

-- | The configuration for a shared file storage system that is associated
--   with a studio resource.
studioComponentConfiguration_sharedFileSystemConfiguration :: Lens' StudioComponentConfiguration (Maybe SharedFileSystemConfiguration)

-- | The configuration for a render farm that is associated with a studio
--   resource.
studioComponentConfiguration_computeFarmConfiguration :: Lens' StudioComponentConfiguration (Maybe ComputeFarmConfiguration)

-- | Initialization scripts for studio components.
--   
--   <i>See:</i> <a>newStudioComponentInitializationScript</a> smart
--   constructor.
data StudioComponentInitializationScript
StudioComponentInitializationScript' :: Maybe Text -> Maybe LaunchProfilePlatform -> Maybe StudioComponentInitializationScriptRunContext -> Maybe Text -> StudioComponentInitializationScript

-- | The initialization script.
[$sel:script:StudioComponentInitializationScript'] :: StudioComponentInitializationScript -> Maybe Text

-- | The platform of the initialization script, either WINDOWS or LINUX.
[$sel:platform:StudioComponentInitializationScript'] :: StudioComponentInitializationScript -> Maybe LaunchProfilePlatform

-- | The method to use when running the initialization script.
[$sel:runContext:StudioComponentInitializationScript'] :: StudioComponentInitializationScript -> Maybe StudioComponentInitializationScriptRunContext

-- | The version number of the protocol that is used by the launch profile.
--   The only valid version is "2021-03-31".
[$sel:launchProfileProtocolVersion:StudioComponentInitializationScript'] :: StudioComponentInitializationScript -> Maybe Text

-- | Create a value of <a>StudioComponentInitializationScript</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:script:StudioComponentInitializationScript'</a>,
--   <a>studioComponentInitializationScript_script</a> - The initialization
--   script.
--   
--   <a>$sel:platform:StudioComponentInitializationScript'</a>,
--   <a>studioComponentInitializationScript_platform</a> - The platform of
--   the initialization script, either WINDOWS or LINUX.
--   
--   <a>$sel:runContext:StudioComponentInitializationScript'</a>,
--   <a>studioComponentInitializationScript_runContext</a> - The method to
--   use when running the initialization script.
--   
--   
--   <a>$sel:launchProfileProtocolVersion:StudioComponentInitializationScript'</a>,
--   <a>studioComponentInitializationScript_launchProfileProtocolVersion</a>
--   - The version number of the protocol that is used by the launch
--   profile. The only valid version is "2021-03-31".
newStudioComponentInitializationScript :: StudioComponentInitializationScript

-- | The initialization script.
studioComponentInitializationScript_script :: Lens' StudioComponentInitializationScript (Maybe Text)

-- | The platform of the initialization script, either WINDOWS or LINUX.
studioComponentInitializationScript_platform :: Lens' StudioComponentInitializationScript (Maybe LaunchProfilePlatform)

-- | The method to use when running the initialization script.
studioComponentInitializationScript_runContext :: Lens' StudioComponentInitializationScript (Maybe StudioComponentInitializationScriptRunContext)

-- | The version number of the protocol that is used by the launch profile.
--   The only valid version is "2021-03-31".
studioComponentInitializationScript_launchProfileProtocolVersion :: Lens' StudioComponentInitializationScript (Maybe Text)

-- | <i>See:</i> <a>newStudioComponentSummary</a> smart constructor.
data StudioComponentSummary
StudioComponentSummary' :: Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe StudioComponentSubtype -> Maybe Text -> Maybe POSIX -> Maybe StudioComponentType -> Maybe Text -> StudioComponentSummary

-- | The unique identifier for a studio component resource.
[$sel:studioComponentId:StudioComponentSummary'] :: StudioComponentSummary -> Maybe Text

-- | The Unix epoch timestamp in seconds for when the resource was created.
[$sel:createdAt:StudioComponentSummary'] :: StudioComponentSummary -> Maybe POSIX

-- | The user ID of the user that created the studio component.
[$sel:createdBy:StudioComponentSummary'] :: StudioComponentSummary -> Maybe Text

-- | The user ID of the user that most recently updated the resource.
[$sel:updatedBy:StudioComponentSummary'] :: StudioComponentSummary -> Maybe Text

-- | The specific subtype of a studio component.
[$sel:subtype:StudioComponentSummary'] :: StudioComponentSummary -> Maybe StudioComponentSubtype

-- | The name for the studio component.
[$sel:name:StudioComponentSummary'] :: StudioComponentSummary -> Maybe Text

-- | The Unix epoch timestamp in seconds for when the resource was updated.
[$sel:updatedAt:StudioComponentSummary'] :: StudioComponentSummary -> Maybe POSIX

-- | The type of the studio component.
[$sel:type':StudioComponentSummary'] :: StudioComponentSummary -> Maybe StudioComponentType

-- | The description.
[$sel:description:StudioComponentSummary'] :: StudioComponentSummary -> Maybe Text

-- | Create a value of <a>StudioComponentSummary</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:studioComponentId:StudioComponentSummary'</a>,
--   <a>studioComponentSummary_studioComponentId</a> - The unique
--   identifier for a studio component resource.
--   
--   <a>$sel:createdAt:StudioComponentSummary'</a>,
--   <a>studioComponentSummary_createdAt</a> - The Unix epoch timestamp in
--   seconds for when the resource was created.
--   
--   <a>$sel:createdBy:StudioComponentSummary'</a>,
--   <a>studioComponentSummary_createdBy</a> - The user ID of the user that
--   created the studio component.
--   
--   <a>$sel:updatedBy:StudioComponentSummary'</a>,
--   <a>studioComponentSummary_updatedBy</a> - The user ID of the user that
--   most recently updated the resource.
--   
--   <a>$sel:subtype:StudioComponentSummary'</a>,
--   <a>studioComponentSummary_subtype</a> - The specific subtype of a
--   studio component.
--   
--   <a>$sel:name:StudioComponentSummary'</a>,
--   <a>studioComponentSummary_name</a> - The name for the studio
--   component.
--   
--   <a>$sel:updatedAt:StudioComponentSummary'</a>,
--   <a>studioComponentSummary_updatedAt</a> - The Unix epoch timestamp in
--   seconds for when the resource was updated.
--   
--   <a>$sel:type':StudioComponentSummary'</a>,
--   <a>studioComponentSummary_type</a> - The type of the studio component.
--   
--   <a>$sel:description:StudioComponentSummary'</a>,
--   <a>studioComponentSummary_description</a> - The description.
newStudioComponentSummary :: StudioComponentSummary

-- | The unique identifier for a studio component resource.
studioComponentSummary_studioComponentId :: Lens' StudioComponentSummary (Maybe Text)

-- | The Unix epoch timestamp in seconds for when the resource was created.
studioComponentSummary_createdAt :: Lens' StudioComponentSummary (Maybe UTCTime)

-- | The user ID of the user that created the studio component.
studioComponentSummary_createdBy :: Lens' StudioComponentSummary (Maybe Text)

-- | The user ID of the user that most recently updated the resource.
studioComponentSummary_updatedBy :: Lens' StudioComponentSummary (Maybe Text)

-- | The specific subtype of a studio component.
studioComponentSummary_subtype :: Lens' StudioComponentSummary (Maybe StudioComponentSubtype)

-- | The name for the studio component.
studioComponentSummary_name :: Lens' StudioComponentSummary (Maybe Text)

-- | The Unix epoch timestamp in seconds for when the resource was updated.
studioComponentSummary_updatedAt :: Lens' StudioComponentSummary (Maybe UTCTime)

-- | The type of the studio component.
studioComponentSummary_type :: Lens' StudioComponentSummary (Maybe StudioComponentType)

-- | The description.
studioComponentSummary_description :: Lens' StudioComponentSummary (Maybe Text)

-- | Configuration of the encryption method that is used for the studio.
--   
--   <i>See:</i> <a>newStudioEncryptionConfiguration</a> smart constructor.
data StudioEncryptionConfiguration
StudioEncryptionConfiguration' :: Maybe Text -> StudioEncryptionConfigurationKeyType -> StudioEncryptionConfiguration

-- | The ARN for a KMS key that is used to encrypt studio data.
[$sel:keyArn:StudioEncryptionConfiguration'] :: StudioEncryptionConfiguration -> Maybe Text

-- | The type of KMS key that is used to encrypt studio data.
[$sel:keyType:StudioEncryptionConfiguration'] :: StudioEncryptionConfiguration -> StudioEncryptionConfigurationKeyType

-- | Create a value of <a>StudioEncryptionConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:keyArn:StudioEncryptionConfiguration'</a>,
--   <a>studioEncryptionConfiguration_keyArn</a> - The ARN for a KMS key
--   that is used to encrypt studio data.
--   
--   <a>$sel:keyType:StudioEncryptionConfiguration'</a>,
--   <a>studioEncryptionConfiguration_keyType</a> - The type of KMS key
--   that is used to encrypt studio data.
newStudioEncryptionConfiguration :: StudioEncryptionConfigurationKeyType -> StudioEncryptionConfiguration

-- | The ARN for a KMS key that is used to encrypt studio data.
studioEncryptionConfiguration_keyArn :: Lens' StudioEncryptionConfiguration (Maybe Text)

-- | The type of KMS key that is used to encrypt studio data.
studioEncryptionConfiguration_keyType :: Lens' StudioEncryptionConfiguration StudioEncryptionConfigurationKeyType

-- | <i>See:</i> <a>newStudioMembership</a> smart constructor.
data StudioMembership
StudioMembership' :: Maybe Text -> Maybe Text -> Maybe StudioPersona -> StudioMembership

-- | The ID of the identity store.
[$sel:identityStoreId:StudioMembership'] :: StudioMembership -> Maybe Text

-- | The principal ID.
[$sel:principalId:StudioMembership'] :: StudioMembership -> Maybe Text

-- | The persona.
[$sel:persona:StudioMembership'] :: StudioMembership -> Maybe StudioPersona

-- | Create a value of <a>StudioMembership</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:identityStoreId:StudioMembership'</a>,
--   <a>studioMembership_identityStoreId</a> - The ID of the identity
--   store.
--   
--   <a>$sel:principalId:StudioMembership'</a>,
--   <a>studioMembership_principalId</a> - The principal ID.
--   
--   <a>$sel:persona:StudioMembership'</a>, <a>studioMembership_persona</a>
--   - The persona.
newStudioMembership :: StudioMembership

-- | The ID of the identity store.
studioMembership_identityStoreId :: Lens' StudioMembership (Maybe Text)

-- | The principal ID.
studioMembership_principalId :: Lens' StudioMembership (Maybe Text)

-- | The persona.
studioMembership_persona :: Lens' StudioMembership (Maybe StudioPersona)


-- | Creates tags for a resource, given its ARN.
module Network.AWS.Nimble.TagResource

-- | The ARN for the role that manages access.
--   
--   <i>See:</i> <a>newTagResource</a> smart constructor.
data TagResource
TagResource' :: Maybe (HashMap Text Text) -> Text -> TagResource

-- | A collection of labels, in the form of key:value pairs, that apply to
--   this resource.
[$sel:tags:TagResource'] :: TagResource -> Maybe (HashMap Text Text)

-- | The ARN of the target resource for tagging operations.
[$sel:resourceArn:TagResource'] :: TagResource -> Text

-- | Create a value of <a>TagResource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:TagResource'</a>, <a>tagResource_tags</a> - A collection
--   of labels, in the form of key:value pairs, that apply to this
--   resource.
--   
--   <a>$sel:resourceArn:TagResource'</a>, <a>tagResource_resourceArn</a> -
--   The ARN of the target resource for tagging operations.
newTagResource :: Text -> TagResource

-- | A collection of labels, in the form of key:value pairs, that apply to
--   this resource.
tagResource_tags :: Lens' TagResource (Maybe (HashMap Text Text))

-- | The ARN of the target resource for tagging operations.
tagResource_resourceArn :: Lens' TagResource Text

-- | <i>See:</i> <a>newTagResourceResponse</a> smart constructor.
data TagResourceResponse
TagResourceResponse' :: Int -> TagResourceResponse

-- | The response's http status code.
[$sel:httpStatus:TagResourceResponse'] :: TagResourceResponse -> Int

-- | Create a value of <a>TagResourceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:TagResourceResponse'</a>,
--   <a>tagResourceResponse_httpStatus</a> - The response's http status
--   code.
newTagResourceResponse :: Int -> TagResourceResponse

-- | The response's http status code.
tagResourceResponse_httpStatus :: Lens' TagResourceResponse Int
instance GHC.Generics.Generic Network.AWS.Nimble.TagResource.TagResource
instance GHC.Show.Show Network.AWS.Nimble.TagResource.TagResource
instance GHC.Read.Read Network.AWS.Nimble.TagResource.TagResource
instance GHC.Classes.Eq Network.AWS.Nimble.TagResource.TagResource
instance GHC.Generics.Generic Network.AWS.Nimble.TagResource.TagResourceResponse
instance GHC.Show.Show Network.AWS.Nimble.TagResource.TagResourceResponse
instance GHC.Read.Read Network.AWS.Nimble.TagResource.TagResourceResponse
instance GHC.Classes.Eq Network.AWS.Nimble.TagResource.TagResourceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Nimble.TagResource.TagResource
instance Control.DeepSeq.NFData Network.AWS.Nimble.TagResource.TagResourceResponse
instance Data.Hashable.Class.Hashable Network.AWS.Nimble.TagResource.TagResource
instance Control.DeepSeq.NFData Network.AWS.Nimble.TagResource.TagResource
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Nimble.TagResource.TagResource
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Nimble.TagResource.TagResource
instance Network.AWS.Data.Path.ToPath Network.AWS.Nimble.TagResource.TagResource
instance Network.AWS.Data.Query.ToQuery Network.AWS.Nimble.TagResource.TagResource


-- | Repairs the SSO configuration for a given studio.
--   
--   If the studio has a valid Amazon Web Services SSO configuration
--   currently associated with it, this operation will fail with a
--   validation error.
--   
--   If the studio does not have a valid Amazon Web Services SSO
--   configuration currently associated with it, then a new Amazon Web
--   Services SSO application is created for the studio and the studio is
--   changed to the READY state.
--   
--   After the Amazon Web Services SSO application is repaired, you must
--   use the Amazon Nimble Studio console to add administrators and users
--   to your studio.
module Network.AWS.Nimble.StartStudioSSOConfigurationRepair

-- | <i>See:</i> <a>newStartStudioSSOConfigurationRepair</a> smart
--   constructor.
data StartStudioSSOConfigurationRepair
StartStudioSSOConfigurationRepair' :: Maybe Text -> Text -> StartStudioSSOConfigurationRepair

-- | To make an idempotent API request using one of these actions, specify
--   a client token in the request. You should not reuse the same client
--   token for other API requests. If you retry a request that completed
--   successfully using the same client token and the same parameters, the
--   retry succeeds without performing any further actions. If you retry a
--   successful request using the same client token, but one or more of the
--   parameters are different, the retry fails with a ValidationException
--   error.
[$sel:clientToken:StartStudioSSOConfigurationRepair'] :: StartStudioSSOConfigurationRepair -> Maybe Text

-- | The studio ID.
[$sel:studioId:StartStudioSSOConfigurationRepair'] :: StartStudioSSOConfigurationRepair -> Text

-- | Create a value of <a>StartStudioSSOConfigurationRepair</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientToken:StartStudioSSOConfigurationRepair'</a>,
--   <a>startStudioSSOConfigurationRepair_clientToken</a> - To make an
--   idempotent API request using one of these actions, specify a client
--   token in the request. You should not reuse the same client token for
--   other API requests. If you retry a request that completed successfully
--   using the same client token and the same parameters, the retry
--   succeeds without performing any further actions. If you retry a
--   successful request using the same client token, but one or more of the
--   parameters are different, the retry fails with a ValidationException
--   error.
--   
--   <a>$sel:studioId:StartStudioSSOConfigurationRepair'</a>,
--   <a>startStudioSSOConfigurationRepair_studioId</a> - The studio ID.
newStartStudioSSOConfigurationRepair :: Text -> StartStudioSSOConfigurationRepair

-- | To make an idempotent API request using one of these actions, specify
--   a client token in the request. You should not reuse the same client
--   token for other API requests. If you retry a request that completed
--   successfully using the same client token and the same parameters, the
--   retry succeeds without performing any further actions. If you retry a
--   successful request using the same client token, but one or more of the
--   parameters are different, the retry fails with a ValidationException
--   error.
startStudioSSOConfigurationRepair_clientToken :: Lens' StartStudioSSOConfigurationRepair (Maybe Text)

-- | The studio ID.
startStudioSSOConfigurationRepair_studioId :: Lens' StartStudioSSOConfigurationRepair Text

-- | <i>See:</i> <a>newStartStudioSSOConfigurationRepairResponse</a> smart
--   constructor.
data StartStudioSSOConfigurationRepairResponse
StartStudioSSOConfigurationRepairResponse' :: Maybe Studio -> Int -> StartStudioSSOConfigurationRepairResponse

-- | Information about a studio.
[$sel:studio:StartStudioSSOConfigurationRepairResponse'] :: StartStudioSSOConfigurationRepairResponse -> Maybe Studio

-- | The response's http status code.
[$sel:httpStatus:StartStudioSSOConfigurationRepairResponse'] :: StartStudioSSOConfigurationRepairResponse -> Int

-- | Create a value of <a>StartStudioSSOConfigurationRepairResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:studio:StartStudioSSOConfigurationRepairResponse'</a>,
--   <a>startStudioSSOConfigurationRepairResponse_studio</a> - Information
--   about a studio.
--   
--   <a>$sel:httpStatus:StartStudioSSOConfigurationRepairResponse'</a>,
--   <a>startStudioSSOConfigurationRepairResponse_httpStatus</a> - The
--   response's http status code.
newStartStudioSSOConfigurationRepairResponse :: Int -> StartStudioSSOConfigurationRepairResponse

-- | Information about a studio.
startStudioSSOConfigurationRepairResponse_studio :: Lens' StartStudioSSOConfigurationRepairResponse (Maybe Studio)

-- | The response's http status code.
startStudioSSOConfigurationRepairResponse_httpStatus :: Lens' StartStudioSSOConfigurationRepairResponse Int
instance GHC.Generics.Generic Network.AWS.Nimble.StartStudioSSOConfigurationRepair.StartStudioSSOConfigurationRepair
instance GHC.Show.Show Network.AWS.Nimble.StartStudioSSOConfigurationRepair.StartStudioSSOConfigurationRepair
instance GHC.Read.Read Network.AWS.Nimble.StartStudioSSOConfigurationRepair.StartStudioSSOConfigurationRepair
instance GHC.Classes.Eq Network.AWS.Nimble.StartStudioSSOConfigurationRepair.StartStudioSSOConfigurationRepair
instance GHC.Generics.Generic Network.AWS.Nimble.StartStudioSSOConfigurationRepair.StartStudioSSOConfigurationRepairResponse
instance GHC.Show.Show Network.AWS.Nimble.StartStudioSSOConfigurationRepair.StartStudioSSOConfigurationRepairResponse
instance GHC.Read.Read Network.AWS.Nimble.StartStudioSSOConfigurationRepair.StartStudioSSOConfigurationRepairResponse
instance GHC.Classes.Eq Network.AWS.Nimble.StartStudioSSOConfigurationRepair.StartStudioSSOConfigurationRepairResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Nimble.StartStudioSSOConfigurationRepair.StartStudioSSOConfigurationRepair
instance Control.DeepSeq.NFData Network.AWS.Nimble.StartStudioSSOConfigurationRepair.StartStudioSSOConfigurationRepairResponse
instance Data.Hashable.Class.Hashable Network.AWS.Nimble.StartStudioSSOConfigurationRepair.StartStudioSSOConfigurationRepair
instance Control.DeepSeq.NFData Network.AWS.Nimble.StartStudioSSOConfigurationRepair.StartStudioSSOConfigurationRepair
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Nimble.StartStudioSSOConfigurationRepair.StartStudioSSOConfigurationRepair
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Nimble.StartStudioSSOConfigurationRepair.StartStudioSSOConfigurationRepair
instance Network.AWS.Data.Path.ToPath Network.AWS.Nimble.StartStudioSSOConfigurationRepair.StartStudioSSOConfigurationRepair
instance Network.AWS.Data.Query.ToQuery Network.AWS.Nimble.StartStudioSSOConfigurationRepair.StartStudioSSOConfigurationRepair


-- | Add/update users with given persona to studio membership.
module Network.AWS.Nimble.PutStudioMembers

-- | A launch profile membership collection.
--   
--   <i>See:</i> <a>newPutStudioMembers</a> smart constructor.
data PutStudioMembers
PutStudioMembers' :: Maybe Text -> Text -> NonEmpty NewStudioMember -> Text -> PutStudioMembers

-- | To make an idempotent API request using one of these actions, specify
--   a client token in the request. You should not reuse the same client
--   token for other API requests. If you retry a request that completed
--   successfully using the same client token and the same parameters, the
--   retry succeeds without performing any further actions. If you retry a
--   successful request using the same client token, but one or more of the
--   parameters are different, the retry fails with a ValidationException
--   error.
[$sel:clientToken:PutStudioMembers'] :: PutStudioMembers -> Maybe Text

-- | The studio ID.
[$sel:studioId:PutStudioMembers'] :: PutStudioMembers -> Text

-- | A list of members.
[$sel:members:PutStudioMembers'] :: PutStudioMembers -> NonEmpty NewStudioMember

-- | The ID of the identity store.
[$sel:identityStoreId:PutStudioMembers'] :: PutStudioMembers -> Text

-- | Create a value of <a>PutStudioMembers</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientToken:PutStudioMembers'</a>,
--   <a>putStudioMembers_clientToken</a> - To make an idempotent API
--   request using one of these actions, specify a client token in the
--   request. You should not reuse the same client token for other API
--   requests. If you retry a request that completed successfully using the
--   same client token and the same parameters, the retry succeeds without
--   performing any further actions. If you retry a successful request
--   using the same client token, but one or more of the parameters are
--   different, the retry fails with a ValidationException error.
--   
--   <a>$sel:studioId:PutStudioMembers'</a>,
--   <a>putStudioMembers_studioId</a> - The studio ID.
--   
--   <a>$sel:members:PutStudioMembers'</a>, <a>putStudioMembers_members</a>
--   - A list of members.
--   
--   <a>$sel:identityStoreId:PutStudioMembers'</a>,
--   <a>putStudioMembers_identityStoreId</a> - The ID of the identity
--   store.
newPutStudioMembers :: Text -> NonEmpty NewStudioMember -> Text -> PutStudioMembers

-- | To make an idempotent API request using one of these actions, specify
--   a client token in the request. You should not reuse the same client
--   token for other API requests. If you retry a request that completed
--   successfully using the same client token and the same parameters, the
--   retry succeeds without performing any further actions. If you retry a
--   successful request using the same client token, but one or more of the
--   parameters are different, the retry fails with a ValidationException
--   error.
putStudioMembers_clientToken :: Lens' PutStudioMembers (Maybe Text)

-- | The studio ID.
putStudioMembers_studioId :: Lens' PutStudioMembers Text

-- | A list of members.
putStudioMembers_members :: Lens' PutStudioMembers (NonEmpty NewStudioMember)

-- | The ID of the identity store.
putStudioMembers_identityStoreId :: Lens' PutStudioMembers Text

-- | <i>See:</i> <a>newPutStudioMembersResponse</a> smart constructor.
data PutStudioMembersResponse
PutStudioMembersResponse' :: Int -> PutStudioMembersResponse

-- | The response's http status code.
[$sel:httpStatus:PutStudioMembersResponse'] :: PutStudioMembersResponse -> Int

-- | Create a value of <a>PutStudioMembersResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:PutStudioMembersResponse'</a>,
--   <a>putStudioMembersResponse_httpStatus</a> - The response's http
--   status code.
newPutStudioMembersResponse :: Int -> PutStudioMembersResponse

-- | The response's http status code.
putStudioMembersResponse_httpStatus :: Lens' PutStudioMembersResponse Int
instance GHC.Generics.Generic Network.AWS.Nimble.PutStudioMembers.PutStudioMembers
instance GHC.Show.Show Network.AWS.Nimble.PutStudioMembers.PutStudioMembers
instance GHC.Read.Read Network.AWS.Nimble.PutStudioMembers.PutStudioMembers
instance GHC.Classes.Eq Network.AWS.Nimble.PutStudioMembers.PutStudioMembers
instance GHC.Generics.Generic Network.AWS.Nimble.PutStudioMembers.PutStudioMembersResponse
instance GHC.Show.Show Network.AWS.Nimble.PutStudioMembers.PutStudioMembersResponse
instance GHC.Read.Read Network.AWS.Nimble.PutStudioMembers.PutStudioMembersResponse
instance GHC.Classes.Eq Network.AWS.Nimble.PutStudioMembers.PutStudioMembersResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Nimble.PutStudioMembers.PutStudioMembers
instance Control.DeepSeq.NFData Network.AWS.Nimble.PutStudioMembers.PutStudioMembersResponse
instance Data.Hashable.Class.Hashable Network.AWS.Nimble.PutStudioMembers.PutStudioMembers
instance Control.DeepSeq.NFData Network.AWS.Nimble.PutStudioMembers.PutStudioMembers
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Nimble.PutStudioMembers.PutStudioMembers
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Nimble.PutStudioMembers.PutStudioMembers
instance Network.AWS.Data.Path.ToPath Network.AWS.Nimble.PutStudioMembers.PutStudioMembers
instance Network.AWS.Data.Query.ToQuery Network.AWS.Nimble.PutStudioMembers.PutStudioMembers


-- | Add/update users with given persona to launch profile membership.
module Network.AWS.Nimble.PutLaunchProfileMembers

-- | Information about a launch profile membership.
--   
--   <i>See:</i> <a>newPutLaunchProfileMembers</a> smart constructor.
data PutLaunchProfileMembers
PutLaunchProfileMembers' :: Maybe Text -> Text -> NonEmpty NewLaunchProfileMember -> Text -> Text -> PutLaunchProfileMembers

-- | To make an idempotent API request using one of these actions, specify
--   a client token in the request. You should not reuse the same client
--   token for other API requests. If you retry a request that completed
--   successfully using the same client token and the same parameters, the
--   retry succeeds without performing any further actions. If you retry a
--   successful request using the same client token, but one or more of the
--   parameters are different, the retry fails with a ValidationException
--   error.
[$sel:clientToken:PutLaunchProfileMembers'] :: PutLaunchProfileMembers -> Maybe Text

-- | The studio ID.
[$sel:studioId:PutLaunchProfileMembers'] :: PutLaunchProfileMembers -> Text

-- | A list of members.
[$sel:members:PutLaunchProfileMembers'] :: PutLaunchProfileMembers -> NonEmpty NewLaunchProfileMember

-- | The launch profile ID.
[$sel:launchProfileId:PutLaunchProfileMembers'] :: PutLaunchProfileMembers -> Text

-- | The ID of the identity store.
[$sel:identityStoreId:PutLaunchProfileMembers'] :: PutLaunchProfileMembers -> Text

-- | Create a value of <a>PutLaunchProfileMembers</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientToken:PutLaunchProfileMembers'</a>,
--   <a>putLaunchProfileMembers_clientToken</a> - To make an idempotent API
--   request using one of these actions, specify a client token in the
--   request. You should not reuse the same client token for other API
--   requests. If you retry a request that completed successfully using the
--   same client token and the same parameters, the retry succeeds without
--   performing any further actions. If you retry a successful request
--   using the same client token, but one or more of the parameters are
--   different, the retry fails with a ValidationException error.
--   
--   <a>$sel:studioId:PutLaunchProfileMembers'</a>,
--   <a>putLaunchProfileMembers_studioId</a> - The studio ID.
--   
--   <a>$sel:members:PutLaunchProfileMembers'</a>,
--   <a>putLaunchProfileMembers_members</a> - A list of members.
--   
--   <a>$sel:launchProfileId:PutLaunchProfileMembers'</a>,
--   <a>putLaunchProfileMembers_launchProfileId</a> - The launch profile
--   ID.
--   
--   <a>$sel:identityStoreId:PutLaunchProfileMembers'</a>,
--   <a>putLaunchProfileMembers_identityStoreId</a> - The ID of the
--   identity store.
newPutLaunchProfileMembers :: Text -> NonEmpty NewLaunchProfileMember -> Text -> Text -> PutLaunchProfileMembers

-- | To make an idempotent API request using one of these actions, specify
--   a client token in the request. You should not reuse the same client
--   token for other API requests. If you retry a request that completed
--   successfully using the same client token and the same parameters, the
--   retry succeeds without performing any further actions. If you retry a
--   successful request using the same client token, but one or more of the
--   parameters are different, the retry fails with a ValidationException
--   error.
putLaunchProfileMembers_clientToken :: Lens' PutLaunchProfileMembers (Maybe Text)

-- | The studio ID.
putLaunchProfileMembers_studioId :: Lens' PutLaunchProfileMembers Text

-- | A list of members.
putLaunchProfileMembers_members :: Lens' PutLaunchProfileMembers (NonEmpty NewLaunchProfileMember)

-- | The launch profile ID.
putLaunchProfileMembers_launchProfileId :: Lens' PutLaunchProfileMembers Text

-- | The ID of the identity store.
putLaunchProfileMembers_identityStoreId :: Lens' PutLaunchProfileMembers Text

-- | <i>See:</i> <a>newPutLaunchProfileMembersResponse</a> smart
--   constructor.
data PutLaunchProfileMembersResponse
PutLaunchProfileMembersResponse' :: Int -> PutLaunchProfileMembersResponse

-- | The response's http status code.
[$sel:httpStatus:PutLaunchProfileMembersResponse'] :: PutLaunchProfileMembersResponse -> Int

-- | Create a value of <a>PutLaunchProfileMembersResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:PutLaunchProfileMembersResponse'</a>,
--   <a>putLaunchProfileMembersResponse_httpStatus</a> - The response's
--   http status code.
newPutLaunchProfileMembersResponse :: Int -> PutLaunchProfileMembersResponse

-- | The response's http status code.
putLaunchProfileMembersResponse_httpStatus :: Lens' PutLaunchProfileMembersResponse Int
instance GHC.Generics.Generic Network.AWS.Nimble.PutLaunchProfileMembers.PutLaunchProfileMembers
instance GHC.Show.Show Network.AWS.Nimble.PutLaunchProfileMembers.PutLaunchProfileMembers
instance GHC.Read.Read Network.AWS.Nimble.PutLaunchProfileMembers.PutLaunchProfileMembers
instance GHC.Classes.Eq Network.AWS.Nimble.PutLaunchProfileMembers.PutLaunchProfileMembers
instance GHC.Generics.Generic Network.AWS.Nimble.PutLaunchProfileMembers.PutLaunchProfileMembersResponse
instance GHC.Show.Show Network.AWS.Nimble.PutLaunchProfileMembers.PutLaunchProfileMembersResponse
instance GHC.Read.Read Network.AWS.Nimble.PutLaunchProfileMembers.PutLaunchProfileMembersResponse
instance GHC.Classes.Eq Network.AWS.Nimble.PutLaunchProfileMembers.PutLaunchProfileMembersResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Nimble.PutLaunchProfileMembers.PutLaunchProfileMembers
instance Control.DeepSeq.NFData Network.AWS.Nimble.PutLaunchProfileMembers.PutLaunchProfileMembersResponse
instance Data.Hashable.Class.Hashable Network.AWS.Nimble.PutLaunchProfileMembers.PutLaunchProfileMembers
instance Control.DeepSeq.NFData Network.AWS.Nimble.PutLaunchProfileMembers.PutLaunchProfileMembers
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Nimble.PutLaunchProfileMembers.PutLaunchProfileMembers
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Nimble.PutLaunchProfileMembers.PutLaunchProfileMembers
instance Network.AWS.Data.Path.ToPath Network.AWS.Nimble.PutLaunchProfileMembers.PutLaunchProfileMembers
instance Network.AWS.Data.Query.ToQuery Network.AWS.Nimble.PutLaunchProfileMembers.PutLaunchProfileMembers


-- | Gets the tags for a resource, given its Amazon Resource Names (ARN).
--   
--   This operation supports ARNs for all resource types in Nimble Studio
--   that support tags, including studio, studio component, launch profile,
--   streaming image, and streaming session. All resources that can be
--   tagged will contain an ARN property, so you do not have to create this
--   ARN yourself.
module Network.AWS.Nimble.ListTagsForResource

-- | <i>See:</i> <a>newListTagsForResource</a> smart constructor.
data ListTagsForResource
ListTagsForResource' :: Text -> ListTagsForResource

-- | The ARN of the target resource for tagging operations.
[$sel:resourceArn:ListTagsForResource'] :: ListTagsForResource -> Text

-- | Create a value of <a>ListTagsForResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:ListTagsForResource'</a>,
--   <a>listTagsForResource_resourceArn</a> - The ARN of the target
--   resource for tagging operations.
newListTagsForResource :: Text -> ListTagsForResource

-- | The ARN of the target resource for tagging operations.
listTagsForResource_resourceArn :: Lens' ListTagsForResource Text

-- | <i>See:</i> <a>newListTagsForResourceResponse</a> smart constructor.
data ListTagsForResourceResponse
ListTagsForResourceResponse' :: Maybe (HashMap Text Text) -> Int -> ListTagsForResourceResponse

-- | A collection of labels, in the form of key:value pairs, that apply to
--   this resource.
[$sel:tags:ListTagsForResourceResponse'] :: ListTagsForResourceResponse -> Maybe (HashMap Text Text)

-- | The response's http status code.
[$sel:httpStatus:ListTagsForResourceResponse'] :: ListTagsForResourceResponse -> Int

-- | Create a value of <a>ListTagsForResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_tags</a> - A collection of labels, in
--   the form of key:value pairs, that apply to this resource.
--   
--   <a>$sel:httpStatus:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_httpStatus</a> - The response's http
--   status code.
newListTagsForResourceResponse :: Int -> ListTagsForResourceResponse

-- | A collection of labels, in the form of key:value pairs, that apply to
--   this resource.
listTagsForResourceResponse_tags :: Lens' ListTagsForResourceResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
listTagsForResourceResponse_httpStatus :: Lens' ListTagsForResourceResponse Int
instance GHC.Generics.Generic Network.AWS.Nimble.ListTagsForResource.ListTagsForResource
instance GHC.Show.Show Network.AWS.Nimble.ListTagsForResource.ListTagsForResource
instance GHC.Read.Read Network.AWS.Nimble.ListTagsForResource.ListTagsForResource
instance GHC.Classes.Eq Network.AWS.Nimble.ListTagsForResource.ListTagsForResource
instance GHC.Generics.Generic Network.AWS.Nimble.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Show.Show Network.AWS.Nimble.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Read.Read Network.AWS.Nimble.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Classes.Eq Network.AWS.Nimble.ListTagsForResource.ListTagsForResourceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Nimble.ListTagsForResource.ListTagsForResource
instance Control.DeepSeq.NFData Network.AWS.Nimble.ListTagsForResource.ListTagsForResourceResponse
instance Data.Hashable.Class.Hashable Network.AWS.Nimble.ListTagsForResource.ListTagsForResource
instance Control.DeepSeq.NFData Network.AWS.Nimble.ListTagsForResource.ListTagsForResource
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Nimble.ListTagsForResource.ListTagsForResource
instance Network.AWS.Data.Path.ToPath Network.AWS.Nimble.ListTagsForResource.ListTagsForResource
instance Network.AWS.Data.Query.ToQuery Network.AWS.Nimble.ListTagsForResource.ListTagsForResource


-- | List studios in your Amazon Web Services account in the requested
--   Amazon Web Services Region.
--   
--   This operation returns paginated results.
module Network.AWS.Nimble.ListStudios

-- | <i>See:</i> <a>newListStudios</a> smart constructor.
data ListStudios
ListStudios' :: Maybe Text -> ListStudios

-- | The token for the next set of results, or null if there are no more
--   results.
[$sel:nextToken:ListStudios'] :: ListStudios -> Maybe Text

-- | Create a value of <a>ListStudios</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListStudios'</a>, <a>listStudios_nextToken</a> - The
--   token for the next set of results, or null if there are no more
--   results.
newListStudios :: ListStudios

-- | The token for the next set of results, or null if there are no more
--   results.
listStudios_nextToken :: Lens' ListStudios (Maybe Text)

-- | <i>See:</i> <a>newListStudiosResponse</a> smart constructor.
data ListStudiosResponse
ListStudiosResponse' :: Maybe [Studio] -> Maybe Text -> Int -> ListStudiosResponse

-- | A collection of studios.
[$sel:studios:ListStudiosResponse'] :: ListStudiosResponse -> Maybe [Studio]

-- | The token for the next set of results, or null if there are no more
--   results.
[$sel:nextToken:ListStudiosResponse'] :: ListStudiosResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListStudiosResponse'] :: ListStudiosResponse -> Int

-- | Create a value of <a>ListStudiosResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:studios:ListStudiosResponse'</a>,
--   <a>listStudiosResponse_studios</a> - A collection of studios.
--   
--   <a>$sel:nextToken:ListStudios'</a>,
--   <a>listStudiosResponse_nextToken</a> - The token for the next set of
--   results, or null if there are no more results.
--   
--   <a>$sel:httpStatus:ListStudiosResponse'</a>,
--   <a>listStudiosResponse_httpStatus</a> - The response's http status
--   code.
newListStudiosResponse :: Int -> ListStudiosResponse

-- | A collection of studios.
listStudiosResponse_studios :: Lens' ListStudiosResponse (Maybe [Studio])

-- | The token for the next set of results, or null if there are no more
--   results.
listStudiosResponse_nextToken :: Lens' ListStudiosResponse (Maybe Text)

-- | The response's http status code.
listStudiosResponse_httpStatus :: Lens' ListStudiosResponse Int
instance GHC.Generics.Generic Network.AWS.Nimble.ListStudios.ListStudios
instance GHC.Show.Show Network.AWS.Nimble.ListStudios.ListStudios
instance GHC.Read.Read Network.AWS.Nimble.ListStudios.ListStudios
instance GHC.Classes.Eq Network.AWS.Nimble.ListStudios.ListStudios
instance GHC.Generics.Generic Network.AWS.Nimble.ListStudios.ListStudiosResponse
instance GHC.Show.Show Network.AWS.Nimble.ListStudios.ListStudiosResponse
instance GHC.Read.Read Network.AWS.Nimble.ListStudios.ListStudiosResponse
instance GHC.Classes.Eq Network.AWS.Nimble.ListStudios.ListStudiosResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Nimble.ListStudios.ListStudios
instance Control.DeepSeq.NFData Network.AWS.Nimble.ListStudios.ListStudiosResponse
instance Network.AWS.Pager.AWSPager Network.AWS.Nimble.ListStudios.ListStudios
instance Data.Hashable.Class.Hashable Network.AWS.Nimble.ListStudios.ListStudios
instance Control.DeepSeq.NFData Network.AWS.Nimble.ListStudios.ListStudios
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Nimble.ListStudios.ListStudios
instance Network.AWS.Data.Path.ToPath Network.AWS.Nimble.ListStudios.ListStudios
instance Network.AWS.Data.Query.ToQuery Network.AWS.Nimble.ListStudios.ListStudios


-- | Get all users in a given studio membership.
--   
--   This operation returns paginated results.
module Network.AWS.Nimble.ListStudioMembers

-- | <i>See:</i> <a>newListStudioMembers</a> smart constructor.
data ListStudioMembers
ListStudioMembers' :: Maybe Text -> Maybe Natural -> Text -> ListStudioMembers

-- | The token for the next set of results, or null if there are no more
--   results.
[$sel:nextToken:ListStudioMembers'] :: ListStudioMembers -> Maybe Text

-- | The maximum number of results to be returned per request.
[$sel:maxResults:ListStudioMembers'] :: ListStudioMembers -> Maybe Natural

-- | The studio ID.
[$sel:studioId:ListStudioMembers'] :: ListStudioMembers -> Text

-- | Create a value of <a>ListStudioMembers</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListStudioMembers'</a>,
--   <a>listStudioMembers_nextToken</a> - The token for the next set of
--   results, or null if there are no more results.
--   
--   <a>$sel:maxResults:ListStudioMembers'</a>,
--   <a>listStudioMembers_maxResults</a> - The maximum number of results to
--   be returned per request.
--   
--   <a>$sel:studioId:ListStudioMembers'</a>,
--   <a>listStudioMembers_studioId</a> - The studio ID.
newListStudioMembers :: Text -> ListStudioMembers

-- | The token for the next set of results, or null if there are no more
--   results.
listStudioMembers_nextToken :: Lens' ListStudioMembers (Maybe Text)

-- | The maximum number of results to be returned per request.
listStudioMembers_maxResults :: Lens' ListStudioMembers (Maybe Natural)

-- | The studio ID.
listStudioMembers_studioId :: Lens' ListStudioMembers Text

-- | <i>See:</i> <a>newListStudioMembersResponse</a> smart constructor.
data ListStudioMembersResponse
ListStudioMembersResponse' :: Maybe [StudioMembership] -> Maybe Text -> Int -> ListStudioMembersResponse

-- | A list of members.
[$sel:members:ListStudioMembersResponse'] :: ListStudioMembersResponse -> Maybe [StudioMembership]

-- | The token for the next set of results, or null if there are no more
--   results.
[$sel:nextToken:ListStudioMembersResponse'] :: ListStudioMembersResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListStudioMembersResponse'] :: ListStudioMembersResponse -> Int

-- | Create a value of <a>ListStudioMembersResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:members:ListStudioMembersResponse'</a>,
--   <a>listStudioMembersResponse_members</a> - A list of members.
--   
--   <a>$sel:nextToken:ListStudioMembers'</a>,
--   <a>listStudioMembersResponse_nextToken</a> - The token for the next
--   set of results, or null if there are no more results.
--   
--   <a>$sel:httpStatus:ListStudioMembersResponse'</a>,
--   <a>listStudioMembersResponse_httpStatus</a> - The response's http
--   status code.
newListStudioMembersResponse :: Int -> ListStudioMembersResponse

-- | A list of members.
listStudioMembersResponse_members :: Lens' ListStudioMembersResponse (Maybe [StudioMembership])

-- | The token for the next set of results, or null if there are no more
--   results.
listStudioMembersResponse_nextToken :: Lens' ListStudioMembersResponse (Maybe Text)

-- | The response's http status code.
listStudioMembersResponse_httpStatus :: Lens' ListStudioMembersResponse Int
instance GHC.Generics.Generic Network.AWS.Nimble.ListStudioMembers.ListStudioMembers
instance GHC.Show.Show Network.AWS.Nimble.ListStudioMembers.ListStudioMembers
instance GHC.Read.Read Network.AWS.Nimble.ListStudioMembers.ListStudioMembers
instance GHC.Classes.Eq Network.AWS.Nimble.ListStudioMembers.ListStudioMembers
instance GHC.Generics.Generic Network.AWS.Nimble.ListStudioMembers.ListStudioMembersResponse
instance GHC.Show.Show Network.AWS.Nimble.ListStudioMembers.ListStudioMembersResponse
instance GHC.Read.Read Network.AWS.Nimble.ListStudioMembers.ListStudioMembersResponse
instance GHC.Classes.Eq Network.AWS.Nimble.ListStudioMembers.ListStudioMembersResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Nimble.ListStudioMembers.ListStudioMembers
instance Control.DeepSeq.NFData Network.AWS.Nimble.ListStudioMembers.ListStudioMembersResponse
instance Network.AWS.Pager.AWSPager Network.AWS.Nimble.ListStudioMembers.ListStudioMembers
instance Data.Hashable.Class.Hashable Network.AWS.Nimble.ListStudioMembers.ListStudioMembers
instance Control.DeepSeq.NFData Network.AWS.Nimble.ListStudioMembers.ListStudioMembers
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Nimble.ListStudioMembers.ListStudioMembers
instance Network.AWS.Data.Path.ToPath Network.AWS.Nimble.ListStudioMembers.ListStudioMembers
instance Network.AWS.Data.Query.ToQuery Network.AWS.Nimble.ListStudioMembers.ListStudioMembers


-- | Lists the StudioComponents in a studio.
--   
--   This operation returns paginated results.
module Network.AWS.Nimble.ListStudioComponents

-- | <i>See:</i> <a>newListStudioComponents</a> smart constructor.
data ListStudioComponents
ListStudioComponents' :: Maybe [Text] -> Maybe [Text] -> Maybe Text -> Maybe Natural -> Text -> ListStudioComponents

-- | A list of states.
[$sel:states:ListStudioComponents'] :: ListStudioComponents -> Maybe [Text]

-- | The types.
[$sel:types:ListStudioComponents'] :: ListStudioComponents -> Maybe [Text]

-- | The token for the next set of results, or null if there are no more
--   results.
[$sel:nextToken:ListStudioComponents'] :: ListStudioComponents -> Maybe Text

-- | The maximum number of results to be returned per request.
[$sel:maxResults:ListStudioComponents'] :: ListStudioComponents -> Maybe Natural

-- | The studio ID.
[$sel:studioId:ListStudioComponents'] :: ListStudioComponents -> Text

-- | Create a value of <a>ListStudioComponents</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:states:ListStudioComponents'</a>,
--   <a>listStudioComponents_states</a> - A list of states.
--   
--   <a>$sel:types:ListStudioComponents'</a>,
--   <a>listStudioComponents_types</a> - The types.
--   
--   <a>$sel:nextToken:ListStudioComponents'</a>,
--   <a>listStudioComponents_nextToken</a> - The token for the next set of
--   results, or null if there are no more results.
--   
--   <a>$sel:maxResults:ListStudioComponents'</a>,
--   <a>listStudioComponents_maxResults</a> - The maximum number of results
--   to be returned per request.
--   
--   <a>$sel:studioId:ListStudioComponents'</a>,
--   <a>listStudioComponents_studioId</a> - The studio ID.
newListStudioComponents :: Text -> ListStudioComponents

-- | A list of states.
listStudioComponents_states :: Lens' ListStudioComponents (Maybe [Text])

-- | The types.
listStudioComponents_types :: Lens' ListStudioComponents (Maybe [Text])

-- | The token for the next set of results, or null if there are no more
--   results.
listStudioComponents_nextToken :: Lens' ListStudioComponents (Maybe Text)

-- | The maximum number of results to be returned per request.
listStudioComponents_maxResults :: Lens' ListStudioComponents (Maybe Natural)

-- | The studio ID.
listStudioComponents_studioId :: Lens' ListStudioComponents Text

-- | <i>See:</i> <a>newListStudioComponentsResponse</a> smart constructor.
data ListStudioComponentsResponse
ListStudioComponentsResponse' :: Maybe [StudioComponent] -> Maybe Text -> Int -> ListStudioComponentsResponse

-- | A collection of studio components.
[$sel:studioComponents:ListStudioComponentsResponse'] :: ListStudioComponentsResponse -> Maybe [StudioComponent]

-- | The token for the next set of results, or null if there are no more
--   results.
[$sel:nextToken:ListStudioComponentsResponse'] :: ListStudioComponentsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListStudioComponentsResponse'] :: ListStudioComponentsResponse -> Int

-- | Create a value of <a>ListStudioComponentsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:studioComponents:ListStudioComponentsResponse'</a>,
--   <a>listStudioComponentsResponse_studioComponents</a> - A collection of
--   studio components.
--   
--   <a>$sel:nextToken:ListStudioComponents'</a>,
--   <a>listStudioComponentsResponse_nextToken</a> - The token for the next
--   set of results, or null if there are no more results.
--   
--   <a>$sel:httpStatus:ListStudioComponentsResponse'</a>,
--   <a>listStudioComponentsResponse_httpStatus</a> - The response's http
--   status code.
newListStudioComponentsResponse :: Int -> ListStudioComponentsResponse

-- | A collection of studio components.
listStudioComponentsResponse_studioComponents :: Lens' ListStudioComponentsResponse (Maybe [StudioComponent])

-- | The token for the next set of results, or null if there are no more
--   results.
listStudioComponentsResponse_nextToken :: Lens' ListStudioComponentsResponse (Maybe Text)

-- | The response's http status code.
listStudioComponentsResponse_httpStatus :: Lens' ListStudioComponentsResponse Int
instance GHC.Generics.Generic Network.AWS.Nimble.ListStudioComponents.ListStudioComponents
instance GHC.Show.Show Network.AWS.Nimble.ListStudioComponents.ListStudioComponents
instance GHC.Read.Read Network.AWS.Nimble.ListStudioComponents.ListStudioComponents
instance GHC.Classes.Eq Network.AWS.Nimble.ListStudioComponents.ListStudioComponents
instance GHC.Generics.Generic Network.AWS.Nimble.ListStudioComponents.ListStudioComponentsResponse
instance GHC.Show.Show Network.AWS.Nimble.ListStudioComponents.ListStudioComponentsResponse
instance GHC.Read.Read Network.AWS.Nimble.ListStudioComponents.ListStudioComponentsResponse
instance GHC.Classes.Eq Network.AWS.Nimble.ListStudioComponents.ListStudioComponentsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Nimble.ListStudioComponents.ListStudioComponents
instance Control.DeepSeq.NFData Network.AWS.Nimble.ListStudioComponents.ListStudioComponentsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.Nimble.ListStudioComponents.ListStudioComponents
instance Data.Hashable.Class.Hashable Network.AWS.Nimble.ListStudioComponents.ListStudioComponents
instance Control.DeepSeq.NFData Network.AWS.Nimble.ListStudioComponents.ListStudioComponents
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Nimble.ListStudioComponents.ListStudioComponents
instance Network.AWS.Data.Path.ToPath Network.AWS.Nimble.ListStudioComponents.ListStudioComponents
instance Network.AWS.Data.Query.ToQuery Network.AWS.Nimble.ListStudioComponents.ListStudioComponents


-- | Lists the streaming image resources in a studio.
--   
--   This operation returns paginated results.
module Network.AWS.Nimble.ListStreamingSessions

-- | <i>See:</i> <a>newListStreamingSessions</a> smart constructor.
data ListStreamingSessions
ListStreamingSessions' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Text -> ListStreamingSessions

-- | The user ID of the user that owns the streaming session.
[$sel:ownedBy:ListStreamingSessions'] :: ListStreamingSessions -> Maybe Text

-- | The user ID of the user that created the streaming session.
[$sel:createdBy:ListStreamingSessions'] :: ListStreamingSessions -> Maybe Text

-- | The token for the next set of results, or null if there are no more
--   results.
[$sel:nextToken:ListStreamingSessions'] :: ListStreamingSessions -> Maybe Text

-- | A collection of session IDs.
[$sel:sessionIds:ListStreamingSessions'] :: ListStreamingSessions -> Maybe Text

-- | The studio ID.
[$sel:studioId:ListStreamingSessions'] :: ListStreamingSessions -> Text

-- | Create a value of <a>ListStreamingSessions</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ownedBy:ListStreamingSessions'</a>,
--   <a>listStreamingSessions_ownedBy</a> - The user ID of the user that
--   owns the streaming session.
--   
--   <a>$sel:createdBy:ListStreamingSessions'</a>,
--   <a>listStreamingSessions_createdBy</a> - The user ID of the user that
--   created the streaming session.
--   
--   <a>$sel:nextToken:ListStreamingSessions'</a>,
--   <a>listStreamingSessions_nextToken</a> - The token for the next set of
--   results, or null if there are no more results.
--   
--   <a>$sel:sessionIds:ListStreamingSessions'</a>,
--   <a>listStreamingSessions_sessionIds</a> - A collection of session IDs.
--   
--   <a>$sel:studioId:ListStreamingSessions'</a>,
--   <a>listStreamingSessions_studioId</a> - The studio ID.
newListStreamingSessions :: Text -> ListStreamingSessions

-- | The user ID of the user that owns the streaming session.
listStreamingSessions_ownedBy :: Lens' ListStreamingSessions (Maybe Text)

-- | The user ID of the user that created the streaming session.
listStreamingSessions_createdBy :: Lens' ListStreamingSessions (Maybe Text)

-- | The token for the next set of results, or null if there are no more
--   results.
listStreamingSessions_nextToken :: Lens' ListStreamingSessions (Maybe Text)

-- | A collection of session IDs.
listStreamingSessions_sessionIds :: Lens' ListStreamingSessions (Maybe Text)

-- | The studio ID.
listStreamingSessions_studioId :: Lens' ListStreamingSessions Text

-- | <i>See:</i> <a>newListStreamingSessionsResponse</a> smart constructor.
data ListStreamingSessionsResponse
ListStreamingSessionsResponse' :: Maybe Text -> Maybe [StreamingSession] -> Int -> ListStreamingSessionsResponse

-- | The token for the next set of results, or null if there are no more
--   results.
[$sel:nextToken:ListStreamingSessionsResponse'] :: ListStreamingSessionsResponse -> Maybe Text

-- | A collection of streaming sessions.
[$sel:sessions:ListStreamingSessionsResponse'] :: ListStreamingSessionsResponse -> Maybe [StreamingSession]

-- | The response's http status code.
[$sel:httpStatus:ListStreamingSessionsResponse'] :: ListStreamingSessionsResponse -> Int

-- | Create a value of <a>ListStreamingSessionsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListStreamingSessions'</a>,
--   <a>listStreamingSessionsResponse_nextToken</a> - The token for the
--   next set of results, or null if there are no more results.
--   
--   <a>$sel:sessions:ListStreamingSessionsResponse'</a>,
--   <a>listStreamingSessionsResponse_sessions</a> - A collection of
--   streaming sessions.
--   
--   <a>$sel:httpStatus:ListStreamingSessionsResponse'</a>,
--   <a>listStreamingSessionsResponse_httpStatus</a> - The response's http
--   status code.
newListStreamingSessionsResponse :: Int -> ListStreamingSessionsResponse

-- | The token for the next set of results, or null if there are no more
--   results.
listStreamingSessionsResponse_nextToken :: Lens' ListStreamingSessionsResponse (Maybe Text)

-- | A collection of streaming sessions.
listStreamingSessionsResponse_sessions :: Lens' ListStreamingSessionsResponse (Maybe [StreamingSession])

-- | The response's http status code.
listStreamingSessionsResponse_httpStatus :: Lens' ListStreamingSessionsResponse Int
instance GHC.Generics.Generic Network.AWS.Nimble.ListStreamingSessions.ListStreamingSessions
instance GHC.Show.Show Network.AWS.Nimble.ListStreamingSessions.ListStreamingSessions
instance GHC.Read.Read Network.AWS.Nimble.ListStreamingSessions.ListStreamingSessions
instance GHC.Classes.Eq Network.AWS.Nimble.ListStreamingSessions.ListStreamingSessions
instance GHC.Generics.Generic Network.AWS.Nimble.ListStreamingSessions.ListStreamingSessionsResponse
instance GHC.Show.Show Network.AWS.Nimble.ListStreamingSessions.ListStreamingSessionsResponse
instance GHC.Read.Read Network.AWS.Nimble.ListStreamingSessions.ListStreamingSessionsResponse
instance GHC.Classes.Eq Network.AWS.Nimble.ListStreamingSessions.ListStreamingSessionsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Nimble.ListStreamingSessions.ListStreamingSessions
instance Control.DeepSeq.NFData Network.AWS.Nimble.ListStreamingSessions.ListStreamingSessionsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.Nimble.ListStreamingSessions.ListStreamingSessions
instance Data.Hashable.Class.Hashable Network.AWS.Nimble.ListStreamingSessions.ListStreamingSessions
instance Control.DeepSeq.NFData Network.AWS.Nimble.ListStreamingSessions.ListStreamingSessions
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Nimble.ListStreamingSessions.ListStreamingSessions
instance Network.AWS.Data.Path.ToPath Network.AWS.Nimble.ListStreamingSessions.ListStreamingSessions
instance Network.AWS.Data.Query.ToQuery Network.AWS.Nimble.ListStreamingSessions.ListStreamingSessions


-- | List the streaming image resources available to this studio.
--   
--   This list will contain both images provided by Amazon Web Services, as
--   well as streaming images that you have created in your studio.
--   
--   This operation returns paginated results.
module Network.AWS.Nimble.ListStreamingImages

-- | <i>See:</i> <a>newListStreamingImages</a> smart constructor.
data ListStreamingImages
ListStreamingImages' :: Maybe Text -> Maybe Text -> Text -> ListStreamingImages

-- | The owner.
[$sel:owner:ListStreamingImages'] :: ListStreamingImages -> Maybe Text

-- | The token for the next set of results, or null if there are no more
--   results.
[$sel:nextToken:ListStreamingImages'] :: ListStreamingImages -> Maybe Text

-- | The studio ID.
[$sel:studioId:ListStreamingImages'] :: ListStreamingImages -> Text

-- | Create a value of <a>ListStreamingImages</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:owner:ListStreamingImages'</a>,
--   <a>listStreamingImages_owner</a> - The owner.
--   
--   <a>$sel:nextToken:ListStreamingImages'</a>,
--   <a>listStreamingImages_nextToken</a> - The token for the next set of
--   results, or null if there are no more results.
--   
--   <a>$sel:studioId:ListStreamingImages'</a>,
--   <a>listStreamingImages_studioId</a> - The studio ID.
newListStreamingImages :: Text -> ListStreamingImages

-- | The owner.
listStreamingImages_owner :: Lens' ListStreamingImages (Maybe Text)

-- | The token for the next set of results, or null if there are no more
--   results.
listStreamingImages_nextToken :: Lens' ListStreamingImages (Maybe Text)

-- | The studio ID.
listStreamingImages_studioId :: Lens' ListStreamingImages Text

-- | <i>See:</i> <a>newListStreamingImagesResponse</a> smart constructor.
data ListStreamingImagesResponse
ListStreamingImagesResponse' :: Maybe [StreamingImage] -> Maybe Text -> Int -> ListStreamingImagesResponse

-- | A collection of streaming images.
[$sel:streamingImages:ListStreamingImagesResponse'] :: ListStreamingImagesResponse -> Maybe [StreamingImage]

-- | The token for the next set of results, or null if there are no more
--   results.
[$sel:nextToken:ListStreamingImagesResponse'] :: ListStreamingImagesResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListStreamingImagesResponse'] :: ListStreamingImagesResponse -> Int

-- | Create a value of <a>ListStreamingImagesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:streamingImages:ListStreamingImagesResponse'</a>,
--   <a>listStreamingImagesResponse_streamingImages</a> - A collection of
--   streaming images.
--   
--   <a>$sel:nextToken:ListStreamingImages'</a>,
--   <a>listStreamingImagesResponse_nextToken</a> - The token for the next
--   set of results, or null if there are no more results.
--   
--   <a>$sel:httpStatus:ListStreamingImagesResponse'</a>,
--   <a>listStreamingImagesResponse_httpStatus</a> - The response's http
--   status code.
newListStreamingImagesResponse :: Int -> ListStreamingImagesResponse

-- | A collection of streaming images.
listStreamingImagesResponse_streamingImages :: Lens' ListStreamingImagesResponse (Maybe [StreamingImage])

-- | The token for the next set of results, or null if there are no more
--   results.
listStreamingImagesResponse_nextToken :: Lens' ListStreamingImagesResponse (Maybe Text)

-- | The response's http status code.
listStreamingImagesResponse_httpStatus :: Lens' ListStreamingImagesResponse Int
instance GHC.Generics.Generic Network.AWS.Nimble.ListStreamingImages.ListStreamingImages
instance GHC.Show.Show Network.AWS.Nimble.ListStreamingImages.ListStreamingImages
instance GHC.Read.Read Network.AWS.Nimble.ListStreamingImages.ListStreamingImages
instance GHC.Classes.Eq Network.AWS.Nimble.ListStreamingImages.ListStreamingImages
instance GHC.Generics.Generic Network.AWS.Nimble.ListStreamingImages.ListStreamingImagesResponse
instance GHC.Show.Show Network.AWS.Nimble.ListStreamingImages.ListStreamingImagesResponse
instance GHC.Read.Read Network.AWS.Nimble.ListStreamingImages.ListStreamingImagesResponse
instance GHC.Classes.Eq Network.AWS.Nimble.ListStreamingImages.ListStreamingImagesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Nimble.ListStreamingImages.ListStreamingImages
instance Control.DeepSeq.NFData Network.AWS.Nimble.ListStreamingImages.ListStreamingImagesResponse
instance Network.AWS.Pager.AWSPager Network.AWS.Nimble.ListStreamingImages.ListStreamingImages
instance Data.Hashable.Class.Hashable Network.AWS.Nimble.ListStreamingImages.ListStreamingImages
instance Control.DeepSeq.NFData Network.AWS.Nimble.ListStreamingImages.ListStreamingImages
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Nimble.ListStreamingImages.ListStreamingImages
instance Network.AWS.Data.Path.ToPath Network.AWS.Nimble.ListStreamingImages.ListStreamingImages
instance Network.AWS.Data.Query.ToQuery Network.AWS.Nimble.ListStreamingImages.ListStreamingImages


-- | List all the launch profiles a studio.
--   
--   This operation returns paginated results.
module Network.AWS.Nimble.ListLaunchProfiles

-- | <i>See:</i> <a>newListLaunchProfiles</a> smart constructor.
data ListLaunchProfiles
ListLaunchProfiles' :: Maybe [Text] -> Maybe Text -> Maybe Text -> Maybe Natural -> Text -> ListLaunchProfiles

-- | A list of states.
[$sel:states:ListLaunchProfiles'] :: ListLaunchProfiles -> Maybe [Text]

-- | The principal ID.
[$sel:principalId:ListLaunchProfiles'] :: ListLaunchProfiles -> Maybe Text

-- | The token for the next set of results, or null if there are no more
--   results.
[$sel:nextToken:ListLaunchProfiles'] :: ListLaunchProfiles -> Maybe Text

-- | The maximum number of results to be returned per request.
[$sel:maxResults:ListLaunchProfiles'] :: ListLaunchProfiles -> Maybe Natural

-- | The studio ID.
[$sel:studioId:ListLaunchProfiles'] :: ListLaunchProfiles -> Text

-- | Create a value of <a>ListLaunchProfiles</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:states:ListLaunchProfiles'</a>,
--   <a>listLaunchProfiles_states</a> - A list of states.
--   
--   <a>$sel:principalId:ListLaunchProfiles'</a>,
--   <a>listLaunchProfiles_principalId</a> - The principal ID.
--   
--   <a>$sel:nextToken:ListLaunchProfiles'</a>,
--   <a>listLaunchProfiles_nextToken</a> - The token for the next set of
--   results, or null if there are no more results.
--   
--   <a>$sel:maxResults:ListLaunchProfiles'</a>,
--   <a>listLaunchProfiles_maxResults</a> - The maximum number of results
--   to be returned per request.
--   
--   <a>$sel:studioId:ListLaunchProfiles'</a>,
--   <a>listLaunchProfiles_studioId</a> - The studio ID.
newListLaunchProfiles :: Text -> ListLaunchProfiles

-- | A list of states.
listLaunchProfiles_states :: Lens' ListLaunchProfiles (Maybe [Text])

-- | The principal ID.
listLaunchProfiles_principalId :: Lens' ListLaunchProfiles (Maybe Text)

-- | The token for the next set of results, or null if there are no more
--   results.
listLaunchProfiles_nextToken :: Lens' ListLaunchProfiles (Maybe Text)

-- | The maximum number of results to be returned per request.
listLaunchProfiles_maxResults :: Lens' ListLaunchProfiles (Maybe Natural)

-- | The studio ID.
listLaunchProfiles_studioId :: Lens' ListLaunchProfiles Text

-- | <i>See:</i> <a>newListLaunchProfilesResponse</a> smart constructor.
data ListLaunchProfilesResponse
ListLaunchProfilesResponse' :: Maybe [LaunchProfile] -> Maybe Text -> Int -> ListLaunchProfilesResponse

-- | A collection of launch profiles.
[$sel:launchProfiles:ListLaunchProfilesResponse'] :: ListLaunchProfilesResponse -> Maybe [LaunchProfile]

-- | The token for the next set of results, or null if there are no more
--   results.
[$sel:nextToken:ListLaunchProfilesResponse'] :: ListLaunchProfilesResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListLaunchProfilesResponse'] :: ListLaunchProfilesResponse -> Int

-- | Create a value of <a>ListLaunchProfilesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:launchProfiles:ListLaunchProfilesResponse'</a>,
--   <a>listLaunchProfilesResponse_launchProfiles</a> - A collection of
--   launch profiles.
--   
--   <a>$sel:nextToken:ListLaunchProfiles'</a>,
--   <a>listLaunchProfilesResponse_nextToken</a> - The token for the next
--   set of results, or null if there are no more results.
--   
--   <a>$sel:httpStatus:ListLaunchProfilesResponse'</a>,
--   <a>listLaunchProfilesResponse_httpStatus</a> - The response's http
--   status code.
newListLaunchProfilesResponse :: Int -> ListLaunchProfilesResponse

-- | A collection of launch profiles.
listLaunchProfilesResponse_launchProfiles :: Lens' ListLaunchProfilesResponse (Maybe [LaunchProfile])

-- | The token for the next set of results, or null if there are no more
--   results.
listLaunchProfilesResponse_nextToken :: Lens' ListLaunchProfilesResponse (Maybe Text)

-- | The response's http status code.
listLaunchProfilesResponse_httpStatus :: Lens' ListLaunchProfilesResponse Int
instance GHC.Generics.Generic Network.AWS.Nimble.ListLaunchProfiles.ListLaunchProfiles
instance GHC.Show.Show Network.AWS.Nimble.ListLaunchProfiles.ListLaunchProfiles
instance GHC.Read.Read Network.AWS.Nimble.ListLaunchProfiles.ListLaunchProfiles
instance GHC.Classes.Eq Network.AWS.Nimble.ListLaunchProfiles.ListLaunchProfiles
instance GHC.Generics.Generic Network.AWS.Nimble.ListLaunchProfiles.ListLaunchProfilesResponse
instance GHC.Show.Show Network.AWS.Nimble.ListLaunchProfiles.ListLaunchProfilesResponse
instance GHC.Read.Read Network.AWS.Nimble.ListLaunchProfiles.ListLaunchProfilesResponse
instance GHC.Classes.Eq Network.AWS.Nimble.ListLaunchProfiles.ListLaunchProfilesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Nimble.ListLaunchProfiles.ListLaunchProfiles
instance Control.DeepSeq.NFData Network.AWS.Nimble.ListLaunchProfiles.ListLaunchProfilesResponse
instance Network.AWS.Pager.AWSPager Network.AWS.Nimble.ListLaunchProfiles.ListLaunchProfiles
instance Data.Hashable.Class.Hashable Network.AWS.Nimble.ListLaunchProfiles.ListLaunchProfiles
instance Control.DeepSeq.NFData Network.AWS.Nimble.ListLaunchProfiles.ListLaunchProfiles
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Nimble.ListLaunchProfiles.ListLaunchProfiles
instance Network.AWS.Data.Path.ToPath Network.AWS.Nimble.ListLaunchProfiles.ListLaunchProfiles
instance Network.AWS.Data.Query.ToQuery Network.AWS.Nimble.ListLaunchProfiles.ListLaunchProfiles


-- | Get all users in a given launch profile membership.
--   
--   This operation returns paginated results.
module Network.AWS.Nimble.ListLaunchProfileMembers

-- | <i>See:</i> <a>newListLaunchProfileMembers</a> smart constructor.
data ListLaunchProfileMembers
ListLaunchProfileMembers' :: Maybe Text -> Maybe Natural -> Text -> Text -> ListLaunchProfileMembers

-- | The token for the next set of results, or null if there are no more
--   results.
[$sel:nextToken:ListLaunchProfileMembers'] :: ListLaunchProfileMembers -> Maybe Text

-- | The maximum number of results to be returned per request.
[$sel:maxResults:ListLaunchProfileMembers'] :: ListLaunchProfileMembers -> Maybe Natural

-- | The studio ID.
[$sel:studioId:ListLaunchProfileMembers'] :: ListLaunchProfileMembers -> Text

-- | The launch profile ID.
[$sel:launchProfileId:ListLaunchProfileMembers'] :: ListLaunchProfileMembers -> Text

-- | Create a value of <a>ListLaunchProfileMembers</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListLaunchProfileMembers'</a>,
--   <a>listLaunchProfileMembers_nextToken</a> - The token for the next set
--   of results, or null if there are no more results.
--   
--   <a>$sel:maxResults:ListLaunchProfileMembers'</a>,
--   <a>listLaunchProfileMembers_maxResults</a> - The maximum number of
--   results to be returned per request.
--   
--   <a>$sel:studioId:ListLaunchProfileMembers'</a>,
--   <a>listLaunchProfileMembers_studioId</a> - The studio ID.
--   
--   <a>$sel:launchProfileId:ListLaunchProfileMembers'</a>,
--   <a>listLaunchProfileMembers_launchProfileId</a> - The launch profile
--   ID.
newListLaunchProfileMembers :: Text -> Text -> ListLaunchProfileMembers

-- | The token for the next set of results, or null if there are no more
--   results.
listLaunchProfileMembers_nextToken :: Lens' ListLaunchProfileMembers (Maybe Text)

-- | The maximum number of results to be returned per request.
listLaunchProfileMembers_maxResults :: Lens' ListLaunchProfileMembers (Maybe Natural)

-- | The studio ID.
listLaunchProfileMembers_studioId :: Lens' ListLaunchProfileMembers Text

-- | The launch profile ID.
listLaunchProfileMembers_launchProfileId :: Lens' ListLaunchProfileMembers Text

-- | <i>See:</i> <a>newListLaunchProfileMembersResponse</a> smart
--   constructor.
data ListLaunchProfileMembersResponse
ListLaunchProfileMembersResponse' :: Maybe [LaunchProfileMembership] -> Maybe Text -> Int -> ListLaunchProfileMembersResponse

-- | A list of members.
[$sel:members:ListLaunchProfileMembersResponse'] :: ListLaunchProfileMembersResponse -> Maybe [LaunchProfileMembership]

-- | The token for the next set of results, or null if there are no more
--   results.
[$sel:nextToken:ListLaunchProfileMembersResponse'] :: ListLaunchProfileMembersResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListLaunchProfileMembersResponse'] :: ListLaunchProfileMembersResponse -> Int

-- | Create a value of <a>ListLaunchProfileMembersResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:members:ListLaunchProfileMembersResponse'</a>,
--   <a>listLaunchProfileMembersResponse_members</a> - A list of members.
--   
--   <a>$sel:nextToken:ListLaunchProfileMembers'</a>,
--   <a>listLaunchProfileMembersResponse_nextToken</a> - The token for the
--   next set of results, or null if there are no more results.
--   
--   <a>$sel:httpStatus:ListLaunchProfileMembersResponse'</a>,
--   <a>listLaunchProfileMembersResponse_httpStatus</a> - The response's
--   http status code.
newListLaunchProfileMembersResponse :: Int -> ListLaunchProfileMembersResponse

-- | A list of members.
listLaunchProfileMembersResponse_members :: Lens' ListLaunchProfileMembersResponse (Maybe [LaunchProfileMembership])

-- | The token for the next set of results, or null if there are no more
--   results.
listLaunchProfileMembersResponse_nextToken :: Lens' ListLaunchProfileMembersResponse (Maybe Text)

-- | The response's http status code.
listLaunchProfileMembersResponse_httpStatus :: Lens' ListLaunchProfileMembersResponse Int
instance GHC.Generics.Generic Network.AWS.Nimble.ListLaunchProfileMembers.ListLaunchProfileMembers
instance GHC.Show.Show Network.AWS.Nimble.ListLaunchProfileMembers.ListLaunchProfileMembers
instance GHC.Read.Read Network.AWS.Nimble.ListLaunchProfileMembers.ListLaunchProfileMembers
instance GHC.Classes.Eq Network.AWS.Nimble.ListLaunchProfileMembers.ListLaunchProfileMembers
instance GHC.Generics.Generic Network.AWS.Nimble.ListLaunchProfileMembers.ListLaunchProfileMembersResponse
instance GHC.Show.Show Network.AWS.Nimble.ListLaunchProfileMembers.ListLaunchProfileMembersResponse
instance GHC.Read.Read Network.AWS.Nimble.ListLaunchProfileMembers.ListLaunchProfileMembersResponse
instance GHC.Classes.Eq Network.AWS.Nimble.ListLaunchProfileMembers.ListLaunchProfileMembersResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Nimble.ListLaunchProfileMembers.ListLaunchProfileMembers
instance Control.DeepSeq.NFData Network.AWS.Nimble.ListLaunchProfileMembers.ListLaunchProfileMembersResponse
instance Network.AWS.Pager.AWSPager Network.AWS.Nimble.ListLaunchProfileMembers.ListLaunchProfileMembers
instance Data.Hashable.Class.Hashable Network.AWS.Nimble.ListLaunchProfileMembers.ListLaunchProfileMembers
instance Control.DeepSeq.NFData Network.AWS.Nimble.ListLaunchProfileMembers.ListLaunchProfileMembers
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Nimble.ListLaunchProfileMembers.ListLaunchProfileMembers
instance Network.AWS.Data.Path.ToPath Network.AWS.Nimble.ListLaunchProfileMembers.ListLaunchProfileMembers
instance Network.AWS.Data.Query.ToQuery Network.AWS.Nimble.ListLaunchProfileMembers.ListLaunchProfileMembers


-- | List Eulas.
--   
--   This operation returns paginated results.
module Network.AWS.Nimble.ListEulas

-- | <i>See:</i> <a>newListEulas</a> smart constructor.
data ListEulas
ListEulas' :: Maybe Text -> Maybe [Text] -> ListEulas

-- | The token for the next set of results, or null if there are no more
--   results.
[$sel:nextToken:ListEulas'] :: ListEulas -> Maybe Text

-- | A collection of EULA IDs.
[$sel:eulaIds:ListEulas'] :: ListEulas -> Maybe [Text]

-- | Create a value of <a>ListEulas</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListEulas'</a>, <a>listEulas_nextToken</a> - The
--   token for the next set of results, or null if there are no more
--   results.
--   
--   <a>$sel:eulaIds:ListEulas'</a>, <a>listEulas_eulaIds</a> - A
--   collection of EULA IDs.
newListEulas :: ListEulas

-- | The token for the next set of results, or null if there are no more
--   results.
listEulas_nextToken :: Lens' ListEulas (Maybe Text)

-- | A collection of EULA IDs.
listEulas_eulaIds :: Lens' ListEulas (Maybe [Text])

-- | <i>See:</i> <a>newListEulasResponse</a> smart constructor.
data ListEulasResponse
ListEulasResponse' :: Maybe [Eula] -> Maybe Text -> Int -> ListEulasResponse

-- | A collection of EULA resources.
[$sel:eulas:ListEulasResponse'] :: ListEulasResponse -> Maybe [Eula]

-- | The token for the next set of results, or null if there are no more
--   results.
[$sel:nextToken:ListEulasResponse'] :: ListEulasResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListEulasResponse'] :: ListEulasResponse -> Int

-- | Create a value of <a>ListEulasResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:eulas:ListEulasResponse'</a>, <a>listEulasResponse_eulas</a> -
--   A collection of EULA resources.
--   
--   <a>$sel:nextToken:ListEulas'</a>, <a>listEulasResponse_nextToken</a> -
--   The token for the next set of results, or null if there are no more
--   results.
--   
--   <a>$sel:httpStatus:ListEulasResponse'</a>,
--   <a>listEulasResponse_httpStatus</a> - The response's http status code.
newListEulasResponse :: Int -> ListEulasResponse

-- | A collection of EULA resources.
listEulasResponse_eulas :: Lens' ListEulasResponse (Maybe [Eula])

-- | The token for the next set of results, or null if there are no more
--   results.
listEulasResponse_nextToken :: Lens' ListEulasResponse (Maybe Text)

-- | The response's http status code.
listEulasResponse_httpStatus :: Lens' ListEulasResponse Int
instance GHC.Generics.Generic Network.AWS.Nimble.ListEulas.ListEulas
instance GHC.Show.Show Network.AWS.Nimble.ListEulas.ListEulas
instance GHC.Read.Read Network.AWS.Nimble.ListEulas.ListEulas
instance GHC.Classes.Eq Network.AWS.Nimble.ListEulas.ListEulas
instance GHC.Generics.Generic Network.AWS.Nimble.ListEulas.ListEulasResponse
instance GHC.Show.Show Network.AWS.Nimble.ListEulas.ListEulasResponse
instance GHC.Read.Read Network.AWS.Nimble.ListEulas.ListEulasResponse
instance GHC.Classes.Eq Network.AWS.Nimble.ListEulas.ListEulasResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Nimble.ListEulas.ListEulas
instance Control.DeepSeq.NFData Network.AWS.Nimble.ListEulas.ListEulasResponse
instance Network.AWS.Pager.AWSPager Network.AWS.Nimble.ListEulas.ListEulas
instance Data.Hashable.Class.Hashable Network.AWS.Nimble.ListEulas.ListEulas
instance Control.DeepSeq.NFData Network.AWS.Nimble.ListEulas.ListEulas
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Nimble.ListEulas.ListEulas
instance Network.AWS.Data.Path.ToPath Network.AWS.Nimble.ListEulas.ListEulas
instance Network.AWS.Data.Query.ToQuery Network.AWS.Nimble.ListEulas.ListEulas


-- | List Eula Acceptances.
--   
--   This operation returns paginated results.
module Network.AWS.Nimble.ListEulaAcceptances

-- | <i>See:</i> <a>newListEulaAcceptances</a> smart constructor.
data ListEulaAcceptances
ListEulaAcceptances' :: Maybe Text -> Maybe [Text] -> Text -> ListEulaAcceptances

-- | The token for the next set of results, or null if there are no more
--   results.
[$sel:nextToken:ListEulaAcceptances'] :: ListEulaAcceptances -> Maybe Text

-- | A collection of EULA IDs.
[$sel:eulaIds:ListEulaAcceptances'] :: ListEulaAcceptances -> Maybe [Text]

-- | The studio ID.
[$sel:studioId:ListEulaAcceptances'] :: ListEulaAcceptances -> Text

-- | Create a value of <a>ListEulaAcceptances</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListEulaAcceptances'</a>,
--   <a>listEulaAcceptances_nextToken</a> - The token for the next set of
--   results, or null if there are no more results.
--   
--   <a>$sel:eulaIds:ListEulaAcceptances'</a>,
--   <a>listEulaAcceptances_eulaIds</a> - A collection of EULA IDs.
--   
--   <a>$sel:studioId:ListEulaAcceptances'</a>,
--   <a>listEulaAcceptances_studioId</a> - The studio ID.
newListEulaAcceptances :: Text -> ListEulaAcceptances

-- | The token for the next set of results, or null if there are no more
--   results.
listEulaAcceptances_nextToken :: Lens' ListEulaAcceptances (Maybe Text)

-- | A collection of EULA IDs.
listEulaAcceptances_eulaIds :: Lens' ListEulaAcceptances (Maybe [Text])

-- | The studio ID.
listEulaAcceptances_studioId :: Lens' ListEulaAcceptances Text

-- | <i>See:</i> <a>newListEulaAcceptancesResponse</a> smart constructor.
data ListEulaAcceptancesResponse
ListEulaAcceptancesResponse' :: Maybe Text -> Maybe [EulaAcceptance] -> Int -> ListEulaAcceptancesResponse

-- | The token for the next set of results, or null if there are no more
--   results.
[$sel:nextToken:ListEulaAcceptancesResponse'] :: ListEulaAcceptancesResponse -> Maybe Text

-- | A collection of EULA acceptances.
[$sel:eulaAcceptances:ListEulaAcceptancesResponse'] :: ListEulaAcceptancesResponse -> Maybe [EulaAcceptance]

-- | The response's http status code.
[$sel:httpStatus:ListEulaAcceptancesResponse'] :: ListEulaAcceptancesResponse -> Int

-- | Create a value of <a>ListEulaAcceptancesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListEulaAcceptances'</a>,
--   <a>listEulaAcceptancesResponse_nextToken</a> - The token for the next
--   set of results, or null if there are no more results.
--   
--   <a>$sel:eulaAcceptances:ListEulaAcceptancesResponse'</a>,
--   <a>listEulaAcceptancesResponse_eulaAcceptances</a> - A collection of
--   EULA acceptances.
--   
--   <a>$sel:httpStatus:ListEulaAcceptancesResponse'</a>,
--   <a>listEulaAcceptancesResponse_httpStatus</a> - The response's http
--   status code.
newListEulaAcceptancesResponse :: Int -> ListEulaAcceptancesResponse

-- | The token for the next set of results, or null if there are no more
--   results.
listEulaAcceptancesResponse_nextToken :: Lens' ListEulaAcceptancesResponse (Maybe Text)

-- | A collection of EULA acceptances.
listEulaAcceptancesResponse_eulaAcceptances :: Lens' ListEulaAcceptancesResponse (Maybe [EulaAcceptance])

-- | The response's http status code.
listEulaAcceptancesResponse_httpStatus :: Lens' ListEulaAcceptancesResponse Int
instance GHC.Generics.Generic Network.AWS.Nimble.ListEulaAcceptances.ListEulaAcceptances
instance GHC.Show.Show Network.AWS.Nimble.ListEulaAcceptances.ListEulaAcceptances
instance GHC.Read.Read Network.AWS.Nimble.ListEulaAcceptances.ListEulaAcceptances
instance GHC.Classes.Eq Network.AWS.Nimble.ListEulaAcceptances.ListEulaAcceptances
instance GHC.Generics.Generic Network.AWS.Nimble.ListEulaAcceptances.ListEulaAcceptancesResponse
instance GHC.Show.Show Network.AWS.Nimble.ListEulaAcceptances.ListEulaAcceptancesResponse
instance GHC.Read.Read Network.AWS.Nimble.ListEulaAcceptances.ListEulaAcceptancesResponse
instance GHC.Classes.Eq Network.AWS.Nimble.ListEulaAcceptances.ListEulaAcceptancesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Nimble.ListEulaAcceptances.ListEulaAcceptances
instance Control.DeepSeq.NFData Network.AWS.Nimble.ListEulaAcceptances.ListEulaAcceptancesResponse
instance Network.AWS.Pager.AWSPager Network.AWS.Nimble.ListEulaAcceptances.ListEulaAcceptances
instance Data.Hashable.Class.Hashable Network.AWS.Nimble.ListEulaAcceptances.ListEulaAcceptances
instance Control.DeepSeq.NFData Network.AWS.Nimble.ListEulaAcceptances.ListEulaAcceptances
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Nimble.ListEulaAcceptances.ListEulaAcceptances
instance Network.AWS.Data.Path.ToPath Network.AWS.Nimble.ListEulaAcceptances.ListEulaAcceptances
instance Network.AWS.Data.Query.ToQuery Network.AWS.Nimble.ListEulaAcceptances.ListEulaAcceptances


-- | Get a user's membership in a studio.
module Network.AWS.Nimble.GetStudioMember

-- | <i>See:</i> <a>newGetStudioMember</a> smart constructor.
data GetStudioMember
GetStudioMember' :: Text -> Text -> GetStudioMember

-- | The studio ID.
[$sel:studioId:GetStudioMember'] :: GetStudioMember -> Text

-- | The principal ID.
[$sel:principalId:GetStudioMember'] :: GetStudioMember -> Text

-- | Create a value of <a>GetStudioMember</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:studioId:GetStudioMember'</a>, <a>getStudioMember_studioId</a>
--   - The studio ID.
--   
--   <a>$sel:principalId:GetStudioMember'</a>,
--   <a>getStudioMember_principalId</a> - The principal ID.
newGetStudioMember :: Text -> Text -> GetStudioMember

-- | The studio ID.
getStudioMember_studioId :: Lens' GetStudioMember Text

-- | The principal ID.
getStudioMember_principalId :: Lens' GetStudioMember Text

-- | <i>See:</i> <a>newGetStudioMemberResponse</a> smart constructor.
data GetStudioMemberResponse
GetStudioMemberResponse' :: Maybe StudioMembership -> Int -> GetStudioMemberResponse

-- | The member.
[$sel:member:GetStudioMemberResponse'] :: GetStudioMemberResponse -> Maybe StudioMembership

-- | The response's http status code.
[$sel:httpStatus:GetStudioMemberResponse'] :: GetStudioMemberResponse -> Int

-- | Create a value of <a>GetStudioMemberResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:member:GetStudioMemberResponse'</a>,
--   <a>getStudioMemberResponse_member</a> - The member.
--   
--   <a>$sel:httpStatus:GetStudioMemberResponse'</a>,
--   <a>getStudioMemberResponse_httpStatus</a> - The response's http status
--   code.
newGetStudioMemberResponse :: Int -> GetStudioMemberResponse

-- | The member.
getStudioMemberResponse_member :: Lens' GetStudioMemberResponse (Maybe StudioMembership)

-- | The response's http status code.
getStudioMemberResponse_httpStatus :: Lens' GetStudioMemberResponse Int
instance GHC.Generics.Generic Network.AWS.Nimble.GetStudioMember.GetStudioMember
instance GHC.Show.Show Network.AWS.Nimble.GetStudioMember.GetStudioMember
instance GHC.Read.Read Network.AWS.Nimble.GetStudioMember.GetStudioMember
instance GHC.Classes.Eq Network.AWS.Nimble.GetStudioMember.GetStudioMember
instance GHC.Generics.Generic Network.AWS.Nimble.GetStudioMember.GetStudioMemberResponse
instance GHC.Show.Show Network.AWS.Nimble.GetStudioMember.GetStudioMemberResponse
instance GHC.Read.Read Network.AWS.Nimble.GetStudioMember.GetStudioMemberResponse
instance GHC.Classes.Eq Network.AWS.Nimble.GetStudioMember.GetStudioMemberResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Nimble.GetStudioMember.GetStudioMember
instance Control.DeepSeq.NFData Network.AWS.Nimble.GetStudioMember.GetStudioMemberResponse
instance Data.Hashable.Class.Hashable Network.AWS.Nimble.GetStudioMember.GetStudioMember
instance Control.DeepSeq.NFData Network.AWS.Nimble.GetStudioMember.GetStudioMember
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Nimble.GetStudioMember.GetStudioMember
instance Network.AWS.Data.Path.ToPath Network.AWS.Nimble.GetStudioMember.GetStudioMember
instance Network.AWS.Data.Query.ToQuery Network.AWS.Nimble.GetStudioMember.GetStudioMember


-- | Gets a studio component resource.
module Network.AWS.Nimble.GetStudioComponent

-- | <i>See:</i> <a>newGetStudioComponent</a> smart constructor.
data GetStudioComponent
GetStudioComponent' :: Text -> Text -> GetStudioComponent

-- | The studio ID.
[$sel:studioId:GetStudioComponent'] :: GetStudioComponent -> Text

-- | The studio component ID.
[$sel:studioComponentId:GetStudioComponent'] :: GetStudioComponent -> Text

-- | Create a value of <a>GetStudioComponent</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:studioId:GetStudioComponent'</a>,
--   <a>getStudioComponent_studioId</a> - The studio ID.
--   
--   <a>$sel:studioComponentId:GetStudioComponent'</a>,
--   <a>getStudioComponent_studioComponentId</a> - The studio component ID.
newGetStudioComponent :: Text -> Text -> GetStudioComponent

-- | The studio ID.
getStudioComponent_studioId :: Lens' GetStudioComponent Text

-- | The studio component ID.
getStudioComponent_studioComponentId :: Lens' GetStudioComponent Text

-- | <i>See:</i> <a>newGetStudioComponentResponse</a> smart constructor.
data GetStudioComponentResponse
GetStudioComponentResponse' :: Maybe StudioComponent -> Int -> GetStudioComponentResponse

-- | Information about the studio component.
[$sel:studioComponent:GetStudioComponentResponse'] :: GetStudioComponentResponse -> Maybe StudioComponent

-- | The response's http status code.
[$sel:httpStatus:GetStudioComponentResponse'] :: GetStudioComponentResponse -> Int

-- | Create a value of <a>GetStudioComponentResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:studioComponent:GetStudioComponentResponse'</a>,
--   <a>getStudioComponentResponse_studioComponent</a> - Information about
--   the studio component.
--   
--   <a>$sel:httpStatus:GetStudioComponentResponse'</a>,
--   <a>getStudioComponentResponse_httpStatus</a> - The response's http
--   status code.
newGetStudioComponentResponse :: Int -> GetStudioComponentResponse

-- | Information about the studio component.
getStudioComponentResponse_studioComponent :: Lens' GetStudioComponentResponse (Maybe StudioComponent)

-- | The response's http status code.
getStudioComponentResponse_httpStatus :: Lens' GetStudioComponentResponse Int
instance GHC.Generics.Generic Network.AWS.Nimble.GetStudioComponent.GetStudioComponent
instance GHC.Show.Show Network.AWS.Nimble.GetStudioComponent.GetStudioComponent
instance GHC.Read.Read Network.AWS.Nimble.GetStudioComponent.GetStudioComponent
instance GHC.Classes.Eq Network.AWS.Nimble.GetStudioComponent.GetStudioComponent
instance GHC.Generics.Generic Network.AWS.Nimble.GetStudioComponent.GetStudioComponentResponse
instance GHC.Show.Show Network.AWS.Nimble.GetStudioComponent.GetStudioComponentResponse
instance GHC.Read.Read Network.AWS.Nimble.GetStudioComponent.GetStudioComponentResponse
instance GHC.Classes.Eq Network.AWS.Nimble.GetStudioComponent.GetStudioComponentResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Nimble.GetStudioComponent.GetStudioComponent
instance Control.DeepSeq.NFData Network.AWS.Nimble.GetStudioComponent.GetStudioComponentResponse
instance Data.Hashable.Class.Hashable Network.AWS.Nimble.GetStudioComponent.GetStudioComponent
instance Control.DeepSeq.NFData Network.AWS.Nimble.GetStudioComponent.GetStudioComponent
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Nimble.GetStudioComponent.GetStudioComponent
instance Network.AWS.Data.Path.ToPath Network.AWS.Nimble.GetStudioComponent.GetStudioComponent
instance Network.AWS.Data.Query.ToQuery Network.AWS.Nimble.GetStudioComponent.GetStudioComponent


-- | Get a Studio resource.
module Network.AWS.Nimble.GetStudio

-- | <i>See:</i> <a>newGetStudio</a> smart constructor.
data GetStudio
GetStudio' :: Text -> GetStudio

-- | The studio ID.
[$sel:studioId:GetStudio'] :: GetStudio -> Text

-- | Create a value of <a>GetStudio</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:studioId:GetStudio'</a>, <a>getStudio_studioId</a> - The
--   studio ID.
newGetStudio :: Text -> GetStudio

-- | The studio ID.
getStudio_studioId :: Lens' GetStudio Text

-- | <i>See:</i> <a>newGetStudioResponse</a> smart constructor.
data GetStudioResponse
GetStudioResponse' :: Maybe Studio -> Int -> GetStudioResponse

-- | Information about a studio.
[$sel:studio:GetStudioResponse'] :: GetStudioResponse -> Maybe Studio

-- | The response's http status code.
[$sel:httpStatus:GetStudioResponse'] :: GetStudioResponse -> Int

-- | Create a value of <a>GetStudioResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:studio:GetStudioResponse'</a>, <a>getStudioResponse_studio</a>
--   - Information about a studio.
--   
--   <a>$sel:httpStatus:GetStudioResponse'</a>,
--   <a>getStudioResponse_httpStatus</a> - The response's http status code.
newGetStudioResponse :: Int -> GetStudioResponse

-- | Information about a studio.
getStudioResponse_studio :: Lens' GetStudioResponse (Maybe Studio)

-- | The response's http status code.
getStudioResponse_httpStatus :: Lens' GetStudioResponse Int
instance GHC.Generics.Generic Network.AWS.Nimble.GetStudio.GetStudio
instance GHC.Show.Show Network.AWS.Nimble.GetStudio.GetStudio
instance GHC.Read.Read Network.AWS.Nimble.GetStudio.GetStudio
instance GHC.Classes.Eq Network.AWS.Nimble.GetStudio.GetStudio
instance GHC.Generics.Generic Network.AWS.Nimble.GetStudio.GetStudioResponse
instance GHC.Show.Show Network.AWS.Nimble.GetStudio.GetStudioResponse
instance GHC.Read.Read Network.AWS.Nimble.GetStudio.GetStudioResponse
instance GHC.Classes.Eq Network.AWS.Nimble.GetStudio.GetStudioResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Nimble.GetStudio.GetStudio
instance Control.DeepSeq.NFData Network.AWS.Nimble.GetStudio.GetStudioResponse
instance Data.Hashable.Class.Hashable Network.AWS.Nimble.GetStudio.GetStudio
instance Control.DeepSeq.NFData Network.AWS.Nimble.GetStudio.GetStudio
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Nimble.GetStudio.GetStudio
instance Network.AWS.Data.Path.ToPath Network.AWS.Nimble.GetStudio.GetStudio
instance Network.AWS.Data.Query.ToQuery Network.AWS.Nimble.GetStudio.GetStudio


-- | Gets a StreamingSessionStream for a streaming session.
--   
--   Invoke this operation to poll the resource after invoking
--   CreateStreamingSessionStream.
--   
--   After the StreamingSessionStream changes to the state READY, the url
--   property will contain a stream to be used with the DCV streaming
--   client.
module Network.AWS.Nimble.GetStreamingSessionStream

-- | <i>See:</i> <a>newGetStreamingSessionStream</a> smart constructor.
data GetStreamingSessionStream
GetStreamingSessionStream' :: Text -> Text -> Text -> GetStreamingSessionStream

-- | The studio ID.
[$sel:studioId:GetStreamingSessionStream'] :: GetStreamingSessionStream -> Text

-- | The stream ID.
[$sel:streamId:GetStreamingSessionStream'] :: GetStreamingSessionStream -> Text

-- | The session ID.
[$sel:sessionId:GetStreamingSessionStream'] :: GetStreamingSessionStream -> Text

-- | Create a value of <a>GetStreamingSessionStream</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:studioId:GetStreamingSessionStream'</a>,
--   <a>getStreamingSessionStream_studioId</a> - The studio ID.
--   
--   <a>$sel:streamId:GetStreamingSessionStream'</a>,
--   <a>getStreamingSessionStream_streamId</a> - The stream ID.
--   
--   <a>$sel:sessionId:GetStreamingSessionStream'</a>,
--   <a>getStreamingSessionStream_sessionId</a> - The session ID.
newGetStreamingSessionStream :: Text -> Text -> Text -> GetStreamingSessionStream

-- | The studio ID.
getStreamingSessionStream_studioId :: Lens' GetStreamingSessionStream Text

-- | The stream ID.
getStreamingSessionStream_streamId :: Lens' GetStreamingSessionStream Text

-- | The session ID.
getStreamingSessionStream_sessionId :: Lens' GetStreamingSessionStream Text

-- | <i>See:</i> <a>newGetStreamingSessionStreamResponse</a> smart
--   constructor.
data GetStreamingSessionStreamResponse
GetStreamingSessionStreamResponse' :: Maybe StreamingSessionStream -> Int -> GetStreamingSessionStreamResponse

-- | The stream.
[$sel:stream:GetStreamingSessionStreamResponse'] :: GetStreamingSessionStreamResponse -> Maybe StreamingSessionStream

-- | The response's http status code.
[$sel:httpStatus:GetStreamingSessionStreamResponse'] :: GetStreamingSessionStreamResponse -> Int

-- | Create a value of <a>GetStreamingSessionStreamResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:stream:GetStreamingSessionStreamResponse'</a>,
--   <a>getStreamingSessionStreamResponse_stream</a> - The stream.
--   
--   <a>$sel:httpStatus:GetStreamingSessionStreamResponse'</a>,
--   <a>getStreamingSessionStreamResponse_httpStatus</a> - The response's
--   http status code.
newGetStreamingSessionStreamResponse :: Int -> GetStreamingSessionStreamResponse

-- | The stream.
getStreamingSessionStreamResponse_stream :: Lens' GetStreamingSessionStreamResponse (Maybe StreamingSessionStream)

-- | The response's http status code.
getStreamingSessionStreamResponse_httpStatus :: Lens' GetStreamingSessionStreamResponse Int
instance GHC.Generics.Generic Network.AWS.Nimble.GetStreamingSessionStream.GetStreamingSessionStream
instance GHC.Show.Show Network.AWS.Nimble.GetStreamingSessionStream.GetStreamingSessionStream
instance GHC.Read.Read Network.AWS.Nimble.GetStreamingSessionStream.GetStreamingSessionStream
instance GHC.Classes.Eq Network.AWS.Nimble.GetStreamingSessionStream.GetStreamingSessionStream
instance GHC.Generics.Generic Network.AWS.Nimble.GetStreamingSessionStream.GetStreamingSessionStreamResponse
instance GHC.Show.Show Network.AWS.Nimble.GetStreamingSessionStream.GetStreamingSessionStreamResponse
instance GHC.Read.Read Network.AWS.Nimble.GetStreamingSessionStream.GetStreamingSessionStreamResponse
instance GHC.Classes.Eq Network.AWS.Nimble.GetStreamingSessionStream.GetStreamingSessionStreamResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Nimble.GetStreamingSessionStream.GetStreamingSessionStream
instance Control.DeepSeq.NFData Network.AWS.Nimble.GetStreamingSessionStream.GetStreamingSessionStreamResponse
instance Data.Hashable.Class.Hashable Network.AWS.Nimble.GetStreamingSessionStream.GetStreamingSessionStream
instance Control.DeepSeq.NFData Network.AWS.Nimble.GetStreamingSessionStream.GetStreamingSessionStream
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Nimble.GetStreamingSessionStream.GetStreamingSessionStream
instance Network.AWS.Data.Path.ToPath Network.AWS.Nimble.GetStreamingSessionStream.GetStreamingSessionStream
instance Network.AWS.Data.Query.ToQuery Network.AWS.Nimble.GetStreamingSessionStream.GetStreamingSessionStream


-- | Gets StreamingSession resource.
--   
--   Invoke this operation to poll for a streaming session state while
--   creating or deleting a session.
module Network.AWS.Nimble.GetStreamingSession

-- | <i>See:</i> <a>newGetStreamingSession</a> smart constructor.
data GetStreamingSession
GetStreamingSession' :: Text -> Text -> GetStreamingSession

-- | The studio ID.
[$sel:studioId:GetStreamingSession'] :: GetStreamingSession -> Text

-- | The session ID.
[$sel:sessionId:GetStreamingSession'] :: GetStreamingSession -> Text

-- | Create a value of <a>GetStreamingSession</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:studioId:GetStreamingSession'</a>,
--   <a>getStreamingSession_studioId</a> - The studio ID.
--   
--   <a>$sel:sessionId:GetStreamingSession'</a>,
--   <a>getStreamingSession_sessionId</a> - The session ID.
newGetStreamingSession :: Text -> Text -> GetStreamingSession

-- | The studio ID.
getStreamingSession_studioId :: Lens' GetStreamingSession Text

-- | The session ID.
getStreamingSession_sessionId :: Lens' GetStreamingSession Text

-- | <i>See:</i> <a>newGetStreamingSessionResponse</a> smart constructor.
data GetStreamingSessionResponse
GetStreamingSessionResponse' :: Maybe StreamingSession -> Int -> GetStreamingSessionResponse

-- | The session.
[$sel:session:GetStreamingSessionResponse'] :: GetStreamingSessionResponse -> Maybe StreamingSession

-- | The response's http status code.
[$sel:httpStatus:GetStreamingSessionResponse'] :: GetStreamingSessionResponse -> Int

-- | Create a value of <a>GetStreamingSessionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:session:GetStreamingSessionResponse'</a>,
--   <a>getStreamingSessionResponse_session</a> - The session.
--   
--   <a>$sel:httpStatus:GetStreamingSessionResponse'</a>,
--   <a>getStreamingSessionResponse_httpStatus</a> - The response's http
--   status code.
newGetStreamingSessionResponse :: Int -> GetStreamingSessionResponse

-- | The session.
getStreamingSessionResponse_session :: Lens' GetStreamingSessionResponse (Maybe StreamingSession)

-- | The response's http status code.
getStreamingSessionResponse_httpStatus :: Lens' GetStreamingSessionResponse Int
instance GHC.Generics.Generic Network.AWS.Nimble.GetStreamingSession.GetStreamingSession
instance GHC.Show.Show Network.AWS.Nimble.GetStreamingSession.GetStreamingSession
instance GHC.Read.Read Network.AWS.Nimble.GetStreamingSession.GetStreamingSession
instance GHC.Classes.Eq Network.AWS.Nimble.GetStreamingSession.GetStreamingSession
instance GHC.Generics.Generic Network.AWS.Nimble.GetStreamingSession.GetStreamingSessionResponse
instance GHC.Show.Show Network.AWS.Nimble.GetStreamingSession.GetStreamingSessionResponse
instance GHC.Read.Read Network.AWS.Nimble.GetStreamingSession.GetStreamingSessionResponse
instance GHC.Classes.Eq Network.AWS.Nimble.GetStreamingSession.GetStreamingSessionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Nimble.GetStreamingSession.GetStreamingSession
instance Control.DeepSeq.NFData Network.AWS.Nimble.GetStreamingSession.GetStreamingSessionResponse
instance Data.Hashable.Class.Hashable Network.AWS.Nimble.GetStreamingSession.GetStreamingSession
instance Control.DeepSeq.NFData Network.AWS.Nimble.GetStreamingSession.GetStreamingSession
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Nimble.GetStreamingSession.GetStreamingSession
instance Network.AWS.Data.Path.ToPath Network.AWS.Nimble.GetStreamingSession.GetStreamingSession
instance Network.AWS.Data.Query.ToQuery Network.AWS.Nimble.GetStreamingSession.GetStreamingSession


-- | Get streaming image.
module Network.AWS.Nimble.GetStreamingImage

-- | <i>See:</i> <a>newGetStreamingImage</a> smart constructor.
data GetStreamingImage
GetStreamingImage' :: Text -> Text -> GetStreamingImage

-- | The studio ID.
[$sel:studioId:GetStreamingImage'] :: GetStreamingImage -> Text

-- | The streaming image ID.
[$sel:streamingImageId:GetStreamingImage'] :: GetStreamingImage -> Text

-- | Create a value of <a>GetStreamingImage</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:studioId:GetStreamingImage'</a>,
--   <a>getStreamingImage_studioId</a> - The studio ID.
--   
--   <a>$sel:streamingImageId:GetStreamingImage'</a>,
--   <a>getStreamingImage_streamingImageId</a> - The streaming image ID.
newGetStreamingImage :: Text -> Text -> GetStreamingImage

-- | The studio ID.
getStreamingImage_studioId :: Lens' GetStreamingImage Text

-- | The streaming image ID.
getStreamingImage_streamingImageId :: Lens' GetStreamingImage Text

-- | <i>See:</i> <a>newGetStreamingImageResponse</a> smart constructor.
data GetStreamingImageResponse
GetStreamingImageResponse' :: Maybe StreamingImage -> Int -> GetStreamingImageResponse

-- | The streaming image.
[$sel:streamingImage:GetStreamingImageResponse'] :: GetStreamingImageResponse -> Maybe StreamingImage

-- | The response's http status code.
[$sel:httpStatus:GetStreamingImageResponse'] :: GetStreamingImageResponse -> Int

-- | Create a value of <a>GetStreamingImageResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:streamingImage:GetStreamingImageResponse'</a>,
--   <a>getStreamingImageResponse_streamingImage</a> - The streaming image.
--   
--   <a>$sel:httpStatus:GetStreamingImageResponse'</a>,
--   <a>getStreamingImageResponse_httpStatus</a> - The response's http
--   status code.
newGetStreamingImageResponse :: Int -> GetStreamingImageResponse

-- | The streaming image.
getStreamingImageResponse_streamingImage :: Lens' GetStreamingImageResponse (Maybe StreamingImage)

-- | The response's http status code.
getStreamingImageResponse_httpStatus :: Lens' GetStreamingImageResponse Int
instance GHC.Generics.Generic Network.AWS.Nimble.GetStreamingImage.GetStreamingImage
instance GHC.Show.Show Network.AWS.Nimble.GetStreamingImage.GetStreamingImage
instance GHC.Read.Read Network.AWS.Nimble.GetStreamingImage.GetStreamingImage
instance GHC.Classes.Eq Network.AWS.Nimble.GetStreamingImage.GetStreamingImage
instance GHC.Generics.Generic Network.AWS.Nimble.GetStreamingImage.GetStreamingImageResponse
instance GHC.Show.Show Network.AWS.Nimble.GetStreamingImage.GetStreamingImageResponse
instance GHC.Read.Read Network.AWS.Nimble.GetStreamingImage.GetStreamingImageResponse
instance GHC.Classes.Eq Network.AWS.Nimble.GetStreamingImage.GetStreamingImageResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Nimble.GetStreamingImage.GetStreamingImage
instance Control.DeepSeq.NFData Network.AWS.Nimble.GetStreamingImage.GetStreamingImageResponse
instance Data.Hashable.Class.Hashable Network.AWS.Nimble.GetStreamingImage.GetStreamingImage
instance Control.DeepSeq.NFData Network.AWS.Nimble.GetStreamingImage.GetStreamingImage
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Nimble.GetStreamingImage.GetStreamingImage
instance Network.AWS.Data.Path.ToPath Network.AWS.Nimble.GetStreamingImage.GetStreamingImage
instance Network.AWS.Data.Query.ToQuery Network.AWS.Nimble.GetStreamingImage.GetStreamingImage


-- | Get a user persona in launch profile membership.
module Network.AWS.Nimble.GetLaunchProfileMember

-- | <i>See:</i> <a>newGetLaunchProfileMember</a> smart constructor.
data GetLaunchProfileMember
GetLaunchProfileMember' :: Text -> Text -> Text -> GetLaunchProfileMember

-- | The studio ID.
[$sel:studioId:GetLaunchProfileMember'] :: GetLaunchProfileMember -> Text

-- | The principal ID.
[$sel:principalId:GetLaunchProfileMember'] :: GetLaunchProfileMember -> Text

-- | The launch profile ID.
[$sel:launchProfileId:GetLaunchProfileMember'] :: GetLaunchProfileMember -> Text

-- | Create a value of <a>GetLaunchProfileMember</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:studioId:GetLaunchProfileMember'</a>,
--   <a>getLaunchProfileMember_studioId</a> - The studio ID.
--   
--   <a>$sel:principalId:GetLaunchProfileMember'</a>,
--   <a>getLaunchProfileMember_principalId</a> - The principal ID.
--   
--   <a>$sel:launchProfileId:GetLaunchProfileMember'</a>,
--   <a>getLaunchProfileMember_launchProfileId</a> - The launch profile ID.
newGetLaunchProfileMember :: Text -> Text -> Text -> GetLaunchProfileMember

-- | The studio ID.
getLaunchProfileMember_studioId :: Lens' GetLaunchProfileMember Text

-- | The principal ID.
getLaunchProfileMember_principalId :: Lens' GetLaunchProfileMember Text

-- | The launch profile ID.
getLaunchProfileMember_launchProfileId :: Lens' GetLaunchProfileMember Text

-- | <i>See:</i> <a>newGetLaunchProfileMemberResponse</a> smart
--   constructor.
data GetLaunchProfileMemberResponse
GetLaunchProfileMemberResponse' :: Maybe LaunchProfileMembership -> Int -> GetLaunchProfileMemberResponse

-- | The member.
[$sel:member:GetLaunchProfileMemberResponse'] :: GetLaunchProfileMemberResponse -> Maybe LaunchProfileMembership

-- | The response's http status code.
[$sel:httpStatus:GetLaunchProfileMemberResponse'] :: GetLaunchProfileMemberResponse -> Int

-- | Create a value of <a>GetLaunchProfileMemberResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:member:GetLaunchProfileMemberResponse'</a>,
--   <a>getLaunchProfileMemberResponse_member</a> - The member.
--   
--   <a>$sel:httpStatus:GetLaunchProfileMemberResponse'</a>,
--   <a>getLaunchProfileMemberResponse_httpStatus</a> - The response's http
--   status code.
newGetLaunchProfileMemberResponse :: Int -> GetLaunchProfileMemberResponse

-- | The member.
getLaunchProfileMemberResponse_member :: Lens' GetLaunchProfileMemberResponse (Maybe LaunchProfileMembership)

-- | The response's http status code.
getLaunchProfileMemberResponse_httpStatus :: Lens' GetLaunchProfileMemberResponse Int
instance GHC.Generics.Generic Network.AWS.Nimble.GetLaunchProfileMember.GetLaunchProfileMember
instance GHC.Show.Show Network.AWS.Nimble.GetLaunchProfileMember.GetLaunchProfileMember
instance GHC.Read.Read Network.AWS.Nimble.GetLaunchProfileMember.GetLaunchProfileMember
instance GHC.Classes.Eq Network.AWS.Nimble.GetLaunchProfileMember.GetLaunchProfileMember
instance GHC.Generics.Generic Network.AWS.Nimble.GetLaunchProfileMember.GetLaunchProfileMemberResponse
instance GHC.Show.Show Network.AWS.Nimble.GetLaunchProfileMember.GetLaunchProfileMemberResponse
instance GHC.Read.Read Network.AWS.Nimble.GetLaunchProfileMember.GetLaunchProfileMemberResponse
instance GHC.Classes.Eq Network.AWS.Nimble.GetLaunchProfileMember.GetLaunchProfileMemberResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Nimble.GetLaunchProfileMember.GetLaunchProfileMember
instance Control.DeepSeq.NFData Network.AWS.Nimble.GetLaunchProfileMember.GetLaunchProfileMemberResponse
instance Data.Hashable.Class.Hashable Network.AWS.Nimble.GetLaunchProfileMember.GetLaunchProfileMember
instance Control.DeepSeq.NFData Network.AWS.Nimble.GetLaunchProfileMember.GetLaunchProfileMember
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Nimble.GetLaunchProfileMember.GetLaunchProfileMember
instance Network.AWS.Data.Path.ToPath Network.AWS.Nimble.GetLaunchProfileMember.GetLaunchProfileMember
instance Network.AWS.Data.Query.ToQuery Network.AWS.Nimble.GetLaunchProfileMember.GetLaunchProfileMember


-- | Get a launch profile initialization.
module Network.AWS.Nimble.GetLaunchProfileInitialization

-- | <i>See:</i> <a>newGetLaunchProfileInitialization</a> smart
--   constructor.
data GetLaunchProfileInitialization
GetLaunchProfileInitialization' :: Text -> [Text] -> Text -> Text -> Text -> GetLaunchProfileInitialization

-- | The studio ID.
[$sel:studioId:GetLaunchProfileInitialization'] :: GetLaunchProfileInitialization -> Text

-- | A collection of launch profile protocol versions.
[$sel:launchProfileProtocolVersions:GetLaunchProfileInitialization'] :: GetLaunchProfileInitialization -> [Text]

-- | The launch purpose.
[$sel:launchPurpose:GetLaunchProfileInitialization'] :: GetLaunchProfileInitialization -> Text

-- | The launch profile ID.
[$sel:launchProfileId:GetLaunchProfileInitialization'] :: GetLaunchProfileInitialization -> Text

-- | The platform.
[$sel:platform:GetLaunchProfileInitialization'] :: GetLaunchProfileInitialization -> Text

-- | Create a value of <a>GetLaunchProfileInitialization</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:studioId:GetLaunchProfileInitialization'</a>,
--   <a>getLaunchProfileInitialization_studioId</a> - The studio ID.
--   
--   
--   <a>$sel:launchProfileProtocolVersions:GetLaunchProfileInitialization'</a>,
--   <a>getLaunchProfileInitialization_launchProfileProtocolVersions</a> -
--   A collection of launch profile protocol versions.
--   
--   <a>$sel:launchPurpose:GetLaunchProfileInitialization'</a>,
--   <a>getLaunchProfileInitialization_launchPurpose</a> - The launch
--   purpose.
--   
--   <a>$sel:launchProfileId:GetLaunchProfileInitialization'</a>,
--   <a>getLaunchProfileInitialization_launchProfileId</a> - The launch
--   profile ID.
--   
--   <a>$sel:platform:GetLaunchProfileInitialization'</a>,
--   <a>getLaunchProfileInitialization_platform</a> - The platform.
newGetLaunchProfileInitialization :: Text -> Text -> Text -> Text -> GetLaunchProfileInitialization

-- | The studio ID.
getLaunchProfileInitialization_studioId :: Lens' GetLaunchProfileInitialization Text

-- | A collection of launch profile protocol versions.
getLaunchProfileInitialization_launchProfileProtocolVersions :: Lens' GetLaunchProfileInitialization [Text]

-- | The launch purpose.
getLaunchProfileInitialization_launchPurpose :: Lens' GetLaunchProfileInitialization Text

-- | The launch profile ID.
getLaunchProfileInitialization_launchProfileId :: Lens' GetLaunchProfileInitialization Text

-- | The platform.
getLaunchProfileInitialization_platform :: Lens' GetLaunchProfileInitialization Text

-- | <i>See:</i> <a>newGetLaunchProfileInitializationResponse</a> smart
--   constructor.
data GetLaunchProfileInitializationResponse
GetLaunchProfileInitializationResponse' :: Maybe LaunchProfileInitialization -> Int -> GetLaunchProfileInitializationResponse

-- | The launch profile initialization.
[$sel:launchProfileInitialization:GetLaunchProfileInitializationResponse'] :: GetLaunchProfileInitializationResponse -> Maybe LaunchProfileInitialization

-- | The response's http status code.
[$sel:httpStatus:GetLaunchProfileInitializationResponse'] :: GetLaunchProfileInitializationResponse -> Int

-- | Create a value of <a>GetLaunchProfileInitializationResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:launchProfileInitialization:GetLaunchProfileInitializationResponse'</a>,
--   <a>getLaunchProfileInitializationResponse_launchProfileInitialization</a>
--   - The launch profile initialization.
--   
--   <a>$sel:httpStatus:GetLaunchProfileInitializationResponse'</a>,
--   <a>getLaunchProfileInitializationResponse_httpStatus</a> - The
--   response's http status code.
newGetLaunchProfileInitializationResponse :: Int -> GetLaunchProfileInitializationResponse

-- | The launch profile initialization.
getLaunchProfileInitializationResponse_launchProfileInitialization :: Lens' GetLaunchProfileInitializationResponse (Maybe LaunchProfileInitialization)

-- | The response's http status code.
getLaunchProfileInitializationResponse_httpStatus :: Lens' GetLaunchProfileInitializationResponse Int
instance GHC.Generics.Generic Network.AWS.Nimble.GetLaunchProfileInitialization.GetLaunchProfileInitialization
instance GHC.Show.Show Network.AWS.Nimble.GetLaunchProfileInitialization.GetLaunchProfileInitialization
instance GHC.Read.Read Network.AWS.Nimble.GetLaunchProfileInitialization.GetLaunchProfileInitialization
instance GHC.Classes.Eq Network.AWS.Nimble.GetLaunchProfileInitialization.GetLaunchProfileInitialization
instance GHC.Generics.Generic Network.AWS.Nimble.GetLaunchProfileInitialization.GetLaunchProfileInitializationResponse
instance GHC.Show.Show Network.AWS.Nimble.GetLaunchProfileInitialization.GetLaunchProfileInitializationResponse
instance GHC.Read.Read Network.AWS.Nimble.GetLaunchProfileInitialization.GetLaunchProfileInitializationResponse
instance GHC.Classes.Eq Network.AWS.Nimble.GetLaunchProfileInitialization.GetLaunchProfileInitializationResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Nimble.GetLaunchProfileInitialization.GetLaunchProfileInitialization
instance Control.DeepSeq.NFData Network.AWS.Nimble.GetLaunchProfileInitialization.GetLaunchProfileInitializationResponse
instance Data.Hashable.Class.Hashable Network.AWS.Nimble.GetLaunchProfileInitialization.GetLaunchProfileInitialization
instance Control.DeepSeq.NFData Network.AWS.Nimble.GetLaunchProfileInitialization.GetLaunchProfileInitialization
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Nimble.GetLaunchProfileInitialization.GetLaunchProfileInitialization
instance Network.AWS.Data.Path.ToPath Network.AWS.Nimble.GetLaunchProfileInitialization.GetLaunchProfileInitialization
instance Network.AWS.Data.Query.ToQuery Network.AWS.Nimble.GetLaunchProfileInitialization.GetLaunchProfileInitialization


-- | Launch profile details include the launch profile resource and summary
--   information of resources that are used by, or available to, the launch
--   profile. This includes the name and description of all studio
--   components used by the launch profiles, and the name and description
--   of streaming images that can be used with this launch profile.
module Network.AWS.Nimble.GetLaunchProfileDetails

-- | <i>See:</i> <a>newGetLaunchProfileDetails</a> smart constructor.
data GetLaunchProfileDetails
GetLaunchProfileDetails' :: Text -> Text -> GetLaunchProfileDetails

-- | The studio ID.
[$sel:studioId:GetLaunchProfileDetails'] :: GetLaunchProfileDetails -> Text

-- | The launch profile ID.
[$sel:launchProfileId:GetLaunchProfileDetails'] :: GetLaunchProfileDetails -> Text

-- | Create a value of <a>GetLaunchProfileDetails</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:studioId:GetLaunchProfileDetails'</a>,
--   <a>getLaunchProfileDetails_studioId</a> - The studio ID.
--   
--   <a>$sel:launchProfileId:GetLaunchProfileDetails'</a>,
--   <a>getLaunchProfileDetails_launchProfileId</a> - The launch profile
--   ID.
newGetLaunchProfileDetails :: Text -> Text -> GetLaunchProfileDetails

-- | The studio ID.
getLaunchProfileDetails_studioId :: Lens' GetLaunchProfileDetails Text

-- | The launch profile ID.
getLaunchProfileDetails_launchProfileId :: Lens' GetLaunchProfileDetails Text

-- | <i>See:</i> <a>newGetLaunchProfileDetailsResponse</a> smart
--   constructor.
data GetLaunchProfileDetailsResponse
GetLaunchProfileDetailsResponse' :: Maybe [StreamingImage] -> Maybe LaunchProfile -> Maybe [StudioComponentSummary] -> Int -> GetLaunchProfileDetailsResponse

-- | A collection of streaming images.
[$sel:streamingImages:GetLaunchProfileDetailsResponse'] :: GetLaunchProfileDetailsResponse -> Maybe [StreamingImage]

-- | The launch profile.
[$sel:launchProfile:GetLaunchProfileDetailsResponse'] :: GetLaunchProfileDetailsResponse -> Maybe LaunchProfile

-- | A collection of studio component summaries.
[$sel:studioComponentSummaries:GetLaunchProfileDetailsResponse'] :: GetLaunchProfileDetailsResponse -> Maybe [StudioComponentSummary]

-- | The response's http status code.
[$sel:httpStatus:GetLaunchProfileDetailsResponse'] :: GetLaunchProfileDetailsResponse -> Int

-- | Create a value of <a>GetLaunchProfileDetailsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:streamingImages:GetLaunchProfileDetailsResponse'</a>,
--   <a>getLaunchProfileDetailsResponse_streamingImages</a> - A collection
--   of streaming images.
--   
--   <a>$sel:launchProfile:GetLaunchProfileDetailsResponse'</a>,
--   <a>getLaunchProfileDetailsResponse_launchProfile</a> - The launch
--   profile.
--   
--   <a>$sel:studioComponentSummaries:GetLaunchProfileDetailsResponse'</a>,
--   <a>getLaunchProfileDetailsResponse_studioComponentSummaries</a> - A
--   collection of studio component summaries.
--   
--   <a>$sel:httpStatus:GetLaunchProfileDetailsResponse'</a>,
--   <a>getLaunchProfileDetailsResponse_httpStatus</a> - The response's
--   http status code.
newGetLaunchProfileDetailsResponse :: Int -> GetLaunchProfileDetailsResponse

-- | A collection of streaming images.
getLaunchProfileDetailsResponse_streamingImages :: Lens' GetLaunchProfileDetailsResponse (Maybe [StreamingImage])

-- | The launch profile.
getLaunchProfileDetailsResponse_launchProfile :: Lens' GetLaunchProfileDetailsResponse (Maybe LaunchProfile)

-- | A collection of studio component summaries.
getLaunchProfileDetailsResponse_studioComponentSummaries :: Lens' GetLaunchProfileDetailsResponse (Maybe [StudioComponentSummary])

-- | The response's http status code.
getLaunchProfileDetailsResponse_httpStatus :: Lens' GetLaunchProfileDetailsResponse Int
instance GHC.Generics.Generic Network.AWS.Nimble.GetLaunchProfileDetails.GetLaunchProfileDetails
instance GHC.Show.Show Network.AWS.Nimble.GetLaunchProfileDetails.GetLaunchProfileDetails
instance GHC.Read.Read Network.AWS.Nimble.GetLaunchProfileDetails.GetLaunchProfileDetails
instance GHC.Classes.Eq Network.AWS.Nimble.GetLaunchProfileDetails.GetLaunchProfileDetails
instance GHC.Generics.Generic Network.AWS.Nimble.GetLaunchProfileDetails.GetLaunchProfileDetailsResponse
instance GHC.Show.Show Network.AWS.Nimble.GetLaunchProfileDetails.GetLaunchProfileDetailsResponse
instance GHC.Read.Read Network.AWS.Nimble.GetLaunchProfileDetails.GetLaunchProfileDetailsResponse
instance GHC.Classes.Eq Network.AWS.Nimble.GetLaunchProfileDetails.GetLaunchProfileDetailsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Nimble.GetLaunchProfileDetails.GetLaunchProfileDetails
instance Control.DeepSeq.NFData Network.AWS.Nimble.GetLaunchProfileDetails.GetLaunchProfileDetailsResponse
instance Data.Hashable.Class.Hashable Network.AWS.Nimble.GetLaunchProfileDetails.GetLaunchProfileDetails
instance Control.DeepSeq.NFData Network.AWS.Nimble.GetLaunchProfileDetails.GetLaunchProfileDetails
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Nimble.GetLaunchProfileDetails.GetLaunchProfileDetails
instance Network.AWS.Data.Path.ToPath Network.AWS.Nimble.GetLaunchProfileDetails.GetLaunchProfileDetails
instance Network.AWS.Data.Query.ToQuery Network.AWS.Nimble.GetLaunchProfileDetails.GetLaunchProfileDetails


-- | Get a launch profile.
module Network.AWS.Nimble.GetLaunchProfile

-- | <i>See:</i> <a>newGetLaunchProfile</a> smart constructor.
data GetLaunchProfile
GetLaunchProfile' :: Text -> Text -> GetLaunchProfile

-- | The studio ID.
[$sel:studioId:GetLaunchProfile'] :: GetLaunchProfile -> Text

-- | The launch profile ID.
[$sel:launchProfileId:GetLaunchProfile'] :: GetLaunchProfile -> Text

-- | Create a value of <a>GetLaunchProfile</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:studioId:GetLaunchProfile'</a>,
--   <a>getLaunchProfile_studioId</a> - The studio ID.
--   
--   <a>$sel:launchProfileId:GetLaunchProfile'</a>,
--   <a>getLaunchProfile_launchProfileId</a> - The launch profile ID.
newGetLaunchProfile :: Text -> Text -> GetLaunchProfile

-- | The studio ID.
getLaunchProfile_studioId :: Lens' GetLaunchProfile Text

-- | The launch profile ID.
getLaunchProfile_launchProfileId :: Lens' GetLaunchProfile Text

-- | <i>See:</i> <a>newGetLaunchProfileResponse</a> smart constructor.
data GetLaunchProfileResponse
GetLaunchProfileResponse' :: Maybe LaunchProfile -> Int -> GetLaunchProfileResponse

-- | The launch profile.
[$sel:launchProfile:GetLaunchProfileResponse'] :: GetLaunchProfileResponse -> Maybe LaunchProfile

-- | The response's http status code.
[$sel:httpStatus:GetLaunchProfileResponse'] :: GetLaunchProfileResponse -> Int

-- | Create a value of <a>GetLaunchProfileResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:launchProfile:GetLaunchProfileResponse'</a>,
--   <a>getLaunchProfileResponse_launchProfile</a> - The launch profile.
--   
--   <a>$sel:httpStatus:GetLaunchProfileResponse'</a>,
--   <a>getLaunchProfileResponse_httpStatus</a> - The response's http
--   status code.
newGetLaunchProfileResponse :: Int -> GetLaunchProfileResponse

-- | The launch profile.
getLaunchProfileResponse_launchProfile :: Lens' GetLaunchProfileResponse (Maybe LaunchProfile)

-- | The response's http status code.
getLaunchProfileResponse_httpStatus :: Lens' GetLaunchProfileResponse Int
instance GHC.Generics.Generic Network.AWS.Nimble.GetLaunchProfile.GetLaunchProfile
instance GHC.Show.Show Network.AWS.Nimble.GetLaunchProfile.GetLaunchProfile
instance GHC.Read.Read Network.AWS.Nimble.GetLaunchProfile.GetLaunchProfile
instance GHC.Classes.Eq Network.AWS.Nimble.GetLaunchProfile.GetLaunchProfile
instance GHC.Generics.Generic Network.AWS.Nimble.GetLaunchProfile.GetLaunchProfileResponse
instance GHC.Show.Show Network.AWS.Nimble.GetLaunchProfile.GetLaunchProfileResponse
instance GHC.Read.Read Network.AWS.Nimble.GetLaunchProfile.GetLaunchProfileResponse
instance GHC.Classes.Eq Network.AWS.Nimble.GetLaunchProfile.GetLaunchProfileResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Nimble.GetLaunchProfile.GetLaunchProfile
instance Control.DeepSeq.NFData Network.AWS.Nimble.GetLaunchProfile.GetLaunchProfileResponse
instance Data.Hashable.Class.Hashable Network.AWS.Nimble.GetLaunchProfile.GetLaunchProfile
instance Control.DeepSeq.NFData Network.AWS.Nimble.GetLaunchProfile.GetLaunchProfile
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Nimble.GetLaunchProfile.GetLaunchProfile
instance Network.AWS.Data.Path.ToPath Network.AWS.Nimble.GetLaunchProfile.GetLaunchProfile
instance Network.AWS.Data.Query.ToQuery Network.AWS.Nimble.GetLaunchProfile.GetLaunchProfile


-- | Get Eula.
module Network.AWS.Nimble.GetEula

-- | <i>See:</i> <a>newGetEula</a> smart constructor.
data GetEula
GetEula' :: Text -> GetEula

-- | The EULA ID.
[$sel:eulaId:GetEula'] :: GetEula -> Text

-- | Create a value of <a>GetEula</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:eulaId:GetEula'</a>, <a>getEula_eulaId</a> - The EULA ID.
newGetEula :: Text -> GetEula

-- | The EULA ID.
getEula_eulaId :: Lens' GetEula Text

-- | <i>See:</i> <a>newGetEulaResponse</a> smart constructor.
data GetEulaResponse
GetEulaResponse' :: Maybe Eula -> Int -> GetEulaResponse

-- | The EULA.
[$sel:eula:GetEulaResponse'] :: GetEulaResponse -> Maybe Eula

-- | The response's http status code.
[$sel:httpStatus:GetEulaResponse'] :: GetEulaResponse -> Int

-- | Create a value of <a>GetEulaResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:eula:GetEulaResponse'</a>, <a>getEulaResponse_eula</a> - The
--   EULA.
--   
--   <a>$sel:httpStatus:GetEulaResponse'</a>,
--   <a>getEulaResponse_httpStatus</a> - The response's http status code.
newGetEulaResponse :: Int -> GetEulaResponse

-- | The EULA.
getEulaResponse_eula :: Lens' GetEulaResponse (Maybe Eula)

-- | The response's http status code.
getEulaResponse_httpStatus :: Lens' GetEulaResponse Int
instance GHC.Generics.Generic Network.AWS.Nimble.GetEula.GetEula
instance GHC.Show.Show Network.AWS.Nimble.GetEula.GetEula
instance GHC.Read.Read Network.AWS.Nimble.GetEula.GetEula
instance GHC.Classes.Eq Network.AWS.Nimble.GetEula.GetEula
instance GHC.Generics.Generic Network.AWS.Nimble.GetEula.GetEulaResponse
instance GHC.Show.Show Network.AWS.Nimble.GetEula.GetEulaResponse
instance GHC.Read.Read Network.AWS.Nimble.GetEula.GetEulaResponse
instance GHC.Classes.Eq Network.AWS.Nimble.GetEula.GetEulaResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Nimble.GetEula.GetEula
instance Control.DeepSeq.NFData Network.AWS.Nimble.GetEula.GetEulaResponse
instance Data.Hashable.Class.Hashable Network.AWS.Nimble.GetEula.GetEula
instance Control.DeepSeq.NFData Network.AWS.Nimble.GetEula.GetEula
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Nimble.GetEula.GetEula
instance Network.AWS.Data.Path.ToPath Network.AWS.Nimble.GetEula.GetEula
instance Network.AWS.Data.Query.ToQuery Network.AWS.Nimble.GetEula.GetEula


-- | Delete a user from studio membership.
module Network.AWS.Nimble.DeleteStudioMember

-- | <i>See:</i> <a>newDeleteStudioMember</a> smart constructor.
data DeleteStudioMember
DeleteStudioMember' :: Maybe Text -> Text -> Text -> DeleteStudioMember

-- | To make an idempotent API request using one of these actions, specify
--   a client token in the request. You should not reuse the same client
--   token for other API requests. If you retry a request that completed
--   successfully using the same client token and the same parameters, the
--   retry succeeds without performing any further actions. If you retry a
--   successful request using the same client token, but one or more of the
--   parameters are different, the retry fails with a ValidationException
--   error.
[$sel:clientToken:DeleteStudioMember'] :: DeleteStudioMember -> Maybe Text

-- | The studio ID.
[$sel:studioId:DeleteStudioMember'] :: DeleteStudioMember -> Text

-- | The principal ID.
[$sel:principalId:DeleteStudioMember'] :: DeleteStudioMember -> Text

-- | Create a value of <a>DeleteStudioMember</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientToken:DeleteStudioMember'</a>,
--   <a>deleteStudioMember_clientToken</a> - To make an idempotent API
--   request using one of these actions, specify a client token in the
--   request. You should not reuse the same client token for other API
--   requests. If you retry a request that completed successfully using the
--   same client token and the same parameters, the retry succeeds without
--   performing any further actions. If you retry a successful request
--   using the same client token, but one or more of the parameters are
--   different, the retry fails with a ValidationException error.
--   
--   <a>$sel:studioId:DeleteStudioMember'</a>,
--   <a>deleteStudioMember_studioId</a> - The studio ID.
--   
--   <a>$sel:principalId:DeleteStudioMember'</a>,
--   <a>deleteStudioMember_principalId</a> - The principal ID.
newDeleteStudioMember :: Text -> Text -> DeleteStudioMember

-- | To make an idempotent API request using one of these actions, specify
--   a client token in the request. You should not reuse the same client
--   token for other API requests. If you retry a request that completed
--   successfully using the same client token and the same parameters, the
--   retry succeeds without performing any further actions. If you retry a
--   successful request using the same client token, but one or more of the
--   parameters are different, the retry fails with a ValidationException
--   error.
deleteStudioMember_clientToken :: Lens' DeleteStudioMember (Maybe Text)

-- | The studio ID.
deleteStudioMember_studioId :: Lens' DeleteStudioMember Text

-- | The principal ID.
deleteStudioMember_principalId :: Lens' DeleteStudioMember Text

-- | <i>See:</i> <a>newDeleteStudioMemberResponse</a> smart constructor.
data DeleteStudioMemberResponse
DeleteStudioMemberResponse' :: Int -> DeleteStudioMemberResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteStudioMemberResponse'] :: DeleteStudioMemberResponse -> Int

-- | Create a value of <a>DeleteStudioMemberResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteStudioMemberResponse'</a>,
--   <a>deleteStudioMemberResponse_httpStatus</a> - The response's http
--   status code.
newDeleteStudioMemberResponse :: Int -> DeleteStudioMemberResponse

-- | The response's http status code.
deleteStudioMemberResponse_httpStatus :: Lens' DeleteStudioMemberResponse Int
instance GHC.Generics.Generic Network.AWS.Nimble.DeleteStudioMember.DeleteStudioMember
instance GHC.Show.Show Network.AWS.Nimble.DeleteStudioMember.DeleteStudioMember
instance GHC.Read.Read Network.AWS.Nimble.DeleteStudioMember.DeleteStudioMember
instance GHC.Classes.Eq Network.AWS.Nimble.DeleteStudioMember.DeleteStudioMember
instance GHC.Generics.Generic Network.AWS.Nimble.DeleteStudioMember.DeleteStudioMemberResponse
instance GHC.Show.Show Network.AWS.Nimble.DeleteStudioMember.DeleteStudioMemberResponse
instance GHC.Read.Read Network.AWS.Nimble.DeleteStudioMember.DeleteStudioMemberResponse
instance GHC.Classes.Eq Network.AWS.Nimble.DeleteStudioMember.DeleteStudioMemberResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Nimble.DeleteStudioMember.DeleteStudioMember
instance Control.DeepSeq.NFData Network.AWS.Nimble.DeleteStudioMember.DeleteStudioMemberResponse
instance Data.Hashable.Class.Hashable Network.AWS.Nimble.DeleteStudioMember.DeleteStudioMember
instance Control.DeepSeq.NFData Network.AWS.Nimble.DeleteStudioMember.DeleteStudioMember
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Nimble.DeleteStudioMember.DeleteStudioMember
instance Network.AWS.Data.Path.ToPath Network.AWS.Nimble.DeleteStudioMember.DeleteStudioMember
instance Network.AWS.Data.Query.ToQuery Network.AWS.Nimble.DeleteStudioMember.DeleteStudioMember


-- | Deletes a studio component resource.
module Network.AWS.Nimble.DeleteStudioComponent

-- | <i>See:</i> <a>newDeleteStudioComponent</a> smart constructor.
data DeleteStudioComponent
DeleteStudioComponent' :: Maybe Text -> Text -> Text -> DeleteStudioComponent

-- | To make an idempotent API request using one of these actions, specify
--   a client token in the request. You should not reuse the same client
--   token for other API requests. If you retry a request that completed
--   successfully using the same client token and the same parameters, the
--   retry succeeds without performing any further actions. If you retry a
--   successful request using the same client token, but one or more of the
--   parameters are different, the retry fails with a ValidationException
--   error.
[$sel:clientToken:DeleteStudioComponent'] :: DeleteStudioComponent -> Maybe Text

-- | The studio ID.
[$sel:studioId:DeleteStudioComponent'] :: DeleteStudioComponent -> Text

-- | The studio component ID.
[$sel:studioComponentId:DeleteStudioComponent'] :: DeleteStudioComponent -> Text

-- | Create a value of <a>DeleteStudioComponent</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientToken:DeleteStudioComponent'</a>,
--   <a>deleteStudioComponent_clientToken</a> - To make an idempotent API
--   request using one of these actions, specify a client token in the
--   request. You should not reuse the same client token for other API
--   requests. If you retry a request that completed successfully using the
--   same client token and the same parameters, the retry succeeds without
--   performing any further actions. If you retry a successful request
--   using the same client token, but one or more of the parameters are
--   different, the retry fails with a ValidationException error.
--   
--   <a>$sel:studioId:DeleteStudioComponent'</a>,
--   <a>deleteStudioComponent_studioId</a> - The studio ID.
--   
--   <a>$sel:studioComponentId:DeleteStudioComponent'</a>,
--   <a>deleteStudioComponent_studioComponentId</a> - The studio component
--   ID.
newDeleteStudioComponent :: Text -> Text -> DeleteStudioComponent

-- | To make an idempotent API request using one of these actions, specify
--   a client token in the request. You should not reuse the same client
--   token for other API requests. If you retry a request that completed
--   successfully using the same client token and the same parameters, the
--   retry succeeds without performing any further actions. If you retry a
--   successful request using the same client token, but one or more of the
--   parameters are different, the retry fails with a ValidationException
--   error.
deleteStudioComponent_clientToken :: Lens' DeleteStudioComponent (Maybe Text)

-- | The studio ID.
deleteStudioComponent_studioId :: Lens' DeleteStudioComponent Text

-- | The studio component ID.
deleteStudioComponent_studioComponentId :: Lens' DeleteStudioComponent Text

-- | <i>See:</i> <a>newDeleteStudioComponentResponse</a> smart constructor.
data DeleteStudioComponentResponse
DeleteStudioComponentResponse' :: Maybe StudioComponent -> Int -> DeleteStudioComponentResponse

-- | Information about the studio component.
[$sel:studioComponent:DeleteStudioComponentResponse'] :: DeleteStudioComponentResponse -> Maybe StudioComponent

-- | The response's http status code.
[$sel:httpStatus:DeleteStudioComponentResponse'] :: DeleteStudioComponentResponse -> Int

-- | Create a value of <a>DeleteStudioComponentResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:studioComponent:DeleteStudioComponentResponse'</a>,
--   <a>deleteStudioComponentResponse_studioComponent</a> - Information
--   about the studio component.
--   
--   <a>$sel:httpStatus:DeleteStudioComponentResponse'</a>,
--   <a>deleteStudioComponentResponse_httpStatus</a> - The response's http
--   status code.
newDeleteStudioComponentResponse :: Int -> DeleteStudioComponentResponse

-- | Information about the studio component.
deleteStudioComponentResponse_studioComponent :: Lens' DeleteStudioComponentResponse (Maybe StudioComponent)

-- | The response's http status code.
deleteStudioComponentResponse_httpStatus :: Lens' DeleteStudioComponentResponse Int
instance GHC.Generics.Generic Network.AWS.Nimble.DeleteStudioComponent.DeleteStudioComponent
instance GHC.Show.Show Network.AWS.Nimble.DeleteStudioComponent.DeleteStudioComponent
instance GHC.Read.Read Network.AWS.Nimble.DeleteStudioComponent.DeleteStudioComponent
instance GHC.Classes.Eq Network.AWS.Nimble.DeleteStudioComponent.DeleteStudioComponent
instance GHC.Generics.Generic Network.AWS.Nimble.DeleteStudioComponent.DeleteStudioComponentResponse
instance GHC.Show.Show Network.AWS.Nimble.DeleteStudioComponent.DeleteStudioComponentResponse
instance GHC.Read.Read Network.AWS.Nimble.DeleteStudioComponent.DeleteStudioComponentResponse
instance GHC.Classes.Eq Network.AWS.Nimble.DeleteStudioComponent.DeleteStudioComponentResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Nimble.DeleteStudioComponent.DeleteStudioComponent
instance Control.DeepSeq.NFData Network.AWS.Nimble.DeleteStudioComponent.DeleteStudioComponentResponse
instance Data.Hashable.Class.Hashable Network.AWS.Nimble.DeleteStudioComponent.DeleteStudioComponent
instance Control.DeepSeq.NFData Network.AWS.Nimble.DeleteStudioComponent.DeleteStudioComponent
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Nimble.DeleteStudioComponent.DeleteStudioComponent
instance Network.AWS.Data.Path.ToPath Network.AWS.Nimble.DeleteStudioComponent.DeleteStudioComponent
instance Network.AWS.Data.Query.ToQuery Network.AWS.Nimble.DeleteStudioComponent.DeleteStudioComponent


-- | Delete a studio resource.
module Network.AWS.Nimble.DeleteStudio

-- | <i>See:</i> <a>newDeleteStudio</a> smart constructor.
data DeleteStudio
DeleteStudio' :: Maybe Text -> Text -> DeleteStudio

-- | To make an idempotent API request using one of these actions, specify
--   a client token in the request. You should not reuse the same client
--   token for other API requests. If you retry a request that completed
--   successfully using the same client token and the same parameters, the
--   retry succeeds without performing any further actions. If you retry a
--   successful request using the same client token, but one or more of the
--   parameters are different, the retry fails with a ValidationException
--   error.
[$sel:clientToken:DeleteStudio'] :: DeleteStudio -> Maybe Text

-- | The studio ID.
[$sel:studioId:DeleteStudio'] :: DeleteStudio -> Text

-- | Create a value of <a>DeleteStudio</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientToken:DeleteStudio'</a>, <a>deleteStudio_clientToken</a>
--   - To make an idempotent API request using one of these actions,
--   specify a client token in the request. You should not reuse the same
--   client token for other API requests. If you retry a request that
--   completed successfully using the same client token and the same
--   parameters, the retry succeeds without performing any further actions.
--   If you retry a successful request using the same client token, but one
--   or more of the parameters are different, the retry fails with a
--   ValidationException error.
--   
--   <a>$sel:studioId:DeleteStudio'</a>, <a>deleteStudio_studioId</a> - The
--   studio ID.
newDeleteStudio :: Text -> DeleteStudio

-- | To make an idempotent API request using one of these actions, specify
--   a client token in the request. You should not reuse the same client
--   token for other API requests. If you retry a request that completed
--   successfully using the same client token and the same parameters, the
--   retry succeeds without performing any further actions. If you retry a
--   successful request using the same client token, but one or more of the
--   parameters are different, the retry fails with a ValidationException
--   error.
deleteStudio_clientToken :: Lens' DeleteStudio (Maybe Text)

-- | The studio ID.
deleteStudio_studioId :: Lens' DeleteStudio Text

-- | <i>See:</i> <a>newDeleteStudioResponse</a> smart constructor.
data DeleteStudioResponse
DeleteStudioResponse' :: Maybe Studio -> Int -> DeleteStudioResponse

-- | Information about a studio.
[$sel:studio:DeleteStudioResponse'] :: DeleteStudioResponse -> Maybe Studio

-- | The response's http status code.
[$sel:httpStatus:DeleteStudioResponse'] :: DeleteStudioResponse -> Int

-- | Create a value of <a>DeleteStudioResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:studio:DeleteStudioResponse'</a>,
--   <a>deleteStudioResponse_studio</a> - Information about a studio.
--   
--   <a>$sel:httpStatus:DeleteStudioResponse'</a>,
--   <a>deleteStudioResponse_httpStatus</a> - The response's http status
--   code.
newDeleteStudioResponse :: Int -> DeleteStudioResponse

-- | Information about a studio.
deleteStudioResponse_studio :: Lens' DeleteStudioResponse (Maybe Studio)

-- | The response's http status code.
deleteStudioResponse_httpStatus :: Lens' DeleteStudioResponse Int
instance GHC.Generics.Generic Network.AWS.Nimble.DeleteStudio.DeleteStudio
instance GHC.Show.Show Network.AWS.Nimble.DeleteStudio.DeleteStudio
instance GHC.Read.Read Network.AWS.Nimble.DeleteStudio.DeleteStudio
instance GHC.Classes.Eq Network.AWS.Nimble.DeleteStudio.DeleteStudio
instance GHC.Generics.Generic Network.AWS.Nimble.DeleteStudio.DeleteStudioResponse
instance GHC.Show.Show Network.AWS.Nimble.DeleteStudio.DeleteStudioResponse
instance GHC.Read.Read Network.AWS.Nimble.DeleteStudio.DeleteStudioResponse
instance GHC.Classes.Eq Network.AWS.Nimble.DeleteStudio.DeleteStudioResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Nimble.DeleteStudio.DeleteStudio
instance Control.DeepSeq.NFData Network.AWS.Nimble.DeleteStudio.DeleteStudioResponse
instance Data.Hashable.Class.Hashable Network.AWS.Nimble.DeleteStudio.DeleteStudio
instance Control.DeepSeq.NFData Network.AWS.Nimble.DeleteStudio.DeleteStudio
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Nimble.DeleteStudio.DeleteStudio
instance Network.AWS.Data.Path.ToPath Network.AWS.Nimble.DeleteStudio.DeleteStudio
instance Network.AWS.Data.Query.ToQuery Network.AWS.Nimble.DeleteStudio.DeleteStudio


-- | Deletes streaming session resource.
--   
--   After invoking this operation, use GetStreamingSession to poll the
--   resource until it transitions to a DELETED state.
--   
--   A streaming session will count against your streaming session quota
--   until it is marked DELETED.
module Network.AWS.Nimble.DeleteStreamingSession

-- | <i>See:</i> <a>newDeleteStreamingSession</a> smart constructor.
data DeleteStreamingSession
DeleteStreamingSession' :: Maybe Text -> Text -> Text -> DeleteStreamingSession

-- | To make an idempotent API request using one of these actions, specify
--   a client token in the request. You should not reuse the same client
--   token for other API requests. If you retry a request that completed
--   successfully using the same client token and the same parameters, the
--   retry succeeds without performing any further actions. If you retry a
--   successful request using the same client token, but one or more of the
--   parameters are different, the retry fails with a ValidationException
--   error.
[$sel:clientToken:DeleteStreamingSession'] :: DeleteStreamingSession -> Maybe Text

-- | The studio ID.
[$sel:studioId:DeleteStreamingSession'] :: DeleteStreamingSession -> Text

-- | The session ID.
[$sel:sessionId:DeleteStreamingSession'] :: DeleteStreamingSession -> Text

-- | Create a value of <a>DeleteStreamingSession</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientToken:DeleteStreamingSession'</a>,
--   <a>deleteStreamingSession_clientToken</a> - To make an idempotent API
--   request using one of these actions, specify a client token in the
--   request. You should not reuse the same client token for other API
--   requests. If you retry a request that completed successfully using the
--   same client token and the same parameters, the retry succeeds without
--   performing any further actions. If you retry a successful request
--   using the same client token, but one or more of the parameters are
--   different, the retry fails with a ValidationException error.
--   
--   <a>$sel:studioId:DeleteStreamingSession'</a>,
--   <a>deleteStreamingSession_studioId</a> - The studio ID.
--   
--   <a>$sel:sessionId:DeleteStreamingSession'</a>,
--   <a>deleteStreamingSession_sessionId</a> - The session ID.
newDeleteStreamingSession :: Text -> Text -> DeleteStreamingSession

-- | To make an idempotent API request using one of these actions, specify
--   a client token in the request. You should not reuse the same client
--   token for other API requests. If you retry a request that completed
--   successfully using the same client token and the same parameters, the
--   retry succeeds without performing any further actions. If you retry a
--   successful request using the same client token, but one or more of the
--   parameters are different, the retry fails with a ValidationException
--   error.
deleteStreamingSession_clientToken :: Lens' DeleteStreamingSession (Maybe Text)

-- | The studio ID.
deleteStreamingSession_studioId :: Lens' DeleteStreamingSession Text

-- | The session ID.
deleteStreamingSession_sessionId :: Lens' DeleteStreamingSession Text

-- | <i>See:</i> <a>newDeleteStreamingSessionResponse</a> smart
--   constructor.
data DeleteStreamingSessionResponse
DeleteStreamingSessionResponse' :: Maybe StreamingSession -> Int -> DeleteStreamingSessionResponse

-- | The session.
[$sel:session:DeleteStreamingSessionResponse'] :: DeleteStreamingSessionResponse -> Maybe StreamingSession

-- | The response's http status code.
[$sel:httpStatus:DeleteStreamingSessionResponse'] :: DeleteStreamingSessionResponse -> Int

-- | Create a value of <a>DeleteStreamingSessionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:session:DeleteStreamingSessionResponse'</a>,
--   <a>deleteStreamingSessionResponse_session</a> - The session.
--   
--   <a>$sel:httpStatus:DeleteStreamingSessionResponse'</a>,
--   <a>deleteStreamingSessionResponse_httpStatus</a> - The response's http
--   status code.
newDeleteStreamingSessionResponse :: Int -> DeleteStreamingSessionResponse

-- | The session.
deleteStreamingSessionResponse_session :: Lens' DeleteStreamingSessionResponse (Maybe StreamingSession)

-- | The response's http status code.
deleteStreamingSessionResponse_httpStatus :: Lens' DeleteStreamingSessionResponse Int
instance GHC.Generics.Generic Network.AWS.Nimble.DeleteStreamingSession.DeleteStreamingSession
instance GHC.Show.Show Network.AWS.Nimble.DeleteStreamingSession.DeleteStreamingSession
instance GHC.Read.Read Network.AWS.Nimble.DeleteStreamingSession.DeleteStreamingSession
instance GHC.Classes.Eq Network.AWS.Nimble.DeleteStreamingSession.DeleteStreamingSession
instance GHC.Generics.Generic Network.AWS.Nimble.DeleteStreamingSession.DeleteStreamingSessionResponse
instance GHC.Show.Show Network.AWS.Nimble.DeleteStreamingSession.DeleteStreamingSessionResponse
instance GHC.Read.Read Network.AWS.Nimble.DeleteStreamingSession.DeleteStreamingSessionResponse
instance GHC.Classes.Eq Network.AWS.Nimble.DeleteStreamingSession.DeleteStreamingSessionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Nimble.DeleteStreamingSession.DeleteStreamingSession
instance Control.DeepSeq.NFData Network.AWS.Nimble.DeleteStreamingSession.DeleteStreamingSessionResponse
instance Data.Hashable.Class.Hashable Network.AWS.Nimble.DeleteStreamingSession.DeleteStreamingSession
instance Control.DeepSeq.NFData Network.AWS.Nimble.DeleteStreamingSession.DeleteStreamingSession
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Nimble.DeleteStreamingSession.DeleteStreamingSession
instance Network.AWS.Data.Path.ToPath Network.AWS.Nimble.DeleteStreamingSession.DeleteStreamingSession
instance Network.AWS.Data.Query.ToQuery Network.AWS.Nimble.DeleteStreamingSession.DeleteStreamingSession


-- | Delete streaming image.
module Network.AWS.Nimble.DeleteStreamingImage

-- | <i>See:</i> <a>newDeleteStreamingImage</a> smart constructor.
data DeleteStreamingImage
DeleteStreamingImage' :: Maybe Text -> Text -> Text -> DeleteStreamingImage

-- | To make an idempotent API request using one of these actions, specify
--   a client token in the request. You should not reuse the same client
--   token for other API requests. If you retry a request that completed
--   successfully using the same client token and the same parameters, the
--   retry succeeds without performing any further actions. If you retry a
--   successful request using the same client token, but one or more of the
--   parameters are different, the retry fails with a ValidationException
--   error.
[$sel:clientToken:DeleteStreamingImage'] :: DeleteStreamingImage -> Maybe Text

-- | The studio ID.
[$sel:studioId:DeleteStreamingImage'] :: DeleteStreamingImage -> Text

-- | The streaming image ID.
[$sel:streamingImageId:DeleteStreamingImage'] :: DeleteStreamingImage -> Text

-- | Create a value of <a>DeleteStreamingImage</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientToken:DeleteStreamingImage'</a>,
--   <a>deleteStreamingImage_clientToken</a> - To make an idempotent API
--   request using one of these actions, specify a client token in the
--   request. You should not reuse the same client token for other API
--   requests. If you retry a request that completed successfully using the
--   same client token and the same parameters, the retry succeeds without
--   performing any further actions. If you retry a successful request
--   using the same client token, but one or more of the parameters are
--   different, the retry fails with a ValidationException error.
--   
--   <a>$sel:studioId:DeleteStreamingImage'</a>,
--   <a>deleteStreamingImage_studioId</a> - The studio ID.
--   
--   <a>$sel:streamingImageId:DeleteStreamingImage'</a>,
--   <a>deleteStreamingImage_streamingImageId</a> - The streaming image ID.
newDeleteStreamingImage :: Text -> Text -> DeleteStreamingImage

-- | To make an idempotent API request using one of these actions, specify
--   a client token in the request. You should not reuse the same client
--   token for other API requests. If you retry a request that completed
--   successfully using the same client token and the same parameters, the
--   retry succeeds without performing any further actions. If you retry a
--   successful request using the same client token, but one or more of the
--   parameters are different, the retry fails with a ValidationException
--   error.
deleteStreamingImage_clientToken :: Lens' DeleteStreamingImage (Maybe Text)

-- | The studio ID.
deleteStreamingImage_studioId :: Lens' DeleteStreamingImage Text

-- | The streaming image ID.
deleteStreamingImage_streamingImageId :: Lens' DeleteStreamingImage Text

-- | <i>See:</i> <a>newDeleteStreamingImageResponse</a> smart constructor.
data DeleteStreamingImageResponse
DeleteStreamingImageResponse' :: Maybe StreamingImage -> Int -> DeleteStreamingImageResponse

-- | The streaming image.
[$sel:streamingImage:DeleteStreamingImageResponse'] :: DeleteStreamingImageResponse -> Maybe StreamingImage

-- | The response's http status code.
[$sel:httpStatus:DeleteStreamingImageResponse'] :: DeleteStreamingImageResponse -> Int

-- | Create a value of <a>DeleteStreamingImageResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:streamingImage:DeleteStreamingImageResponse'</a>,
--   <a>deleteStreamingImageResponse_streamingImage</a> - The streaming
--   image.
--   
--   <a>$sel:httpStatus:DeleteStreamingImageResponse'</a>,
--   <a>deleteStreamingImageResponse_httpStatus</a> - The response's http
--   status code.
newDeleteStreamingImageResponse :: Int -> DeleteStreamingImageResponse

-- | The streaming image.
deleteStreamingImageResponse_streamingImage :: Lens' DeleteStreamingImageResponse (Maybe StreamingImage)

-- | The response's http status code.
deleteStreamingImageResponse_httpStatus :: Lens' DeleteStreamingImageResponse Int
instance GHC.Generics.Generic Network.AWS.Nimble.DeleteStreamingImage.DeleteStreamingImage
instance GHC.Show.Show Network.AWS.Nimble.DeleteStreamingImage.DeleteStreamingImage
instance GHC.Read.Read Network.AWS.Nimble.DeleteStreamingImage.DeleteStreamingImage
instance GHC.Classes.Eq Network.AWS.Nimble.DeleteStreamingImage.DeleteStreamingImage
instance GHC.Generics.Generic Network.AWS.Nimble.DeleteStreamingImage.DeleteStreamingImageResponse
instance GHC.Show.Show Network.AWS.Nimble.DeleteStreamingImage.DeleteStreamingImageResponse
instance GHC.Read.Read Network.AWS.Nimble.DeleteStreamingImage.DeleteStreamingImageResponse
instance GHC.Classes.Eq Network.AWS.Nimble.DeleteStreamingImage.DeleteStreamingImageResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Nimble.DeleteStreamingImage.DeleteStreamingImage
instance Control.DeepSeq.NFData Network.AWS.Nimble.DeleteStreamingImage.DeleteStreamingImageResponse
instance Data.Hashable.Class.Hashable Network.AWS.Nimble.DeleteStreamingImage.DeleteStreamingImage
instance Control.DeepSeq.NFData Network.AWS.Nimble.DeleteStreamingImage.DeleteStreamingImage
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Nimble.DeleteStreamingImage.DeleteStreamingImage
instance Network.AWS.Data.Path.ToPath Network.AWS.Nimble.DeleteStreamingImage.DeleteStreamingImage
instance Network.AWS.Data.Query.ToQuery Network.AWS.Nimble.DeleteStreamingImage.DeleteStreamingImage


-- | Delete a user from launch profile membership.
module Network.AWS.Nimble.DeleteLaunchProfileMember

-- | <i>See:</i> <a>newDeleteLaunchProfileMember</a> smart constructor.
data DeleteLaunchProfileMember
DeleteLaunchProfileMember' :: Maybe Text -> Text -> Text -> Text -> DeleteLaunchProfileMember

-- | To make an idempotent API request using one of these actions, specify
--   a client token in the request. You should not reuse the same client
--   token for other API requests. If you retry a request that completed
--   successfully using the same client token and the same parameters, the
--   retry succeeds without performing any further actions. If you retry a
--   successful request using the same client token, but one or more of the
--   parameters are different, the retry fails with a ValidationException
--   error.
[$sel:clientToken:DeleteLaunchProfileMember'] :: DeleteLaunchProfileMember -> Maybe Text

-- | The studio ID.
[$sel:studioId:DeleteLaunchProfileMember'] :: DeleteLaunchProfileMember -> Text

-- | The principal ID.
[$sel:principalId:DeleteLaunchProfileMember'] :: DeleteLaunchProfileMember -> Text

-- | The launch profile ID.
[$sel:launchProfileId:DeleteLaunchProfileMember'] :: DeleteLaunchProfileMember -> Text

-- | Create a value of <a>DeleteLaunchProfileMember</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientToken:DeleteLaunchProfileMember'</a>,
--   <a>deleteLaunchProfileMember_clientToken</a> - To make an idempotent
--   API request using one of these actions, specify a client token in the
--   request. You should not reuse the same client token for other API
--   requests. If you retry a request that completed successfully using the
--   same client token and the same parameters, the retry succeeds without
--   performing any further actions. If you retry a successful request
--   using the same client token, but one or more of the parameters are
--   different, the retry fails with a ValidationException error.
--   
--   <a>$sel:studioId:DeleteLaunchProfileMember'</a>,
--   <a>deleteLaunchProfileMember_studioId</a> - The studio ID.
--   
--   <a>$sel:principalId:DeleteLaunchProfileMember'</a>,
--   <a>deleteLaunchProfileMember_principalId</a> - The principal ID.
--   
--   <a>$sel:launchProfileId:DeleteLaunchProfileMember'</a>,
--   <a>deleteLaunchProfileMember_launchProfileId</a> - The launch profile
--   ID.
newDeleteLaunchProfileMember :: Text -> Text -> Text -> DeleteLaunchProfileMember

-- | To make an idempotent API request using one of these actions, specify
--   a client token in the request. You should not reuse the same client
--   token for other API requests. If you retry a request that completed
--   successfully using the same client token and the same parameters, the
--   retry succeeds without performing any further actions. If you retry a
--   successful request using the same client token, but one or more of the
--   parameters are different, the retry fails with a ValidationException
--   error.
deleteLaunchProfileMember_clientToken :: Lens' DeleteLaunchProfileMember (Maybe Text)

-- | The studio ID.
deleteLaunchProfileMember_studioId :: Lens' DeleteLaunchProfileMember Text

-- | The principal ID.
deleteLaunchProfileMember_principalId :: Lens' DeleteLaunchProfileMember Text

-- | The launch profile ID.
deleteLaunchProfileMember_launchProfileId :: Lens' DeleteLaunchProfileMember Text

-- | <i>See:</i> <a>newDeleteLaunchProfileMemberResponse</a> smart
--   constructor.
data DeleteLaunchProfileMemberResponse
DeleteLaunchProfileMemberResponse' :: Int -> DeleteLaunchProfileMemberResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteLaunchProfileMemberResponse'] :: DeleteLaunchProfileMemberResponse -> Int

-- | Create a value of <a>DeleteLaunchProfileMemberResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteLaunchProfileMemberResponse'</a>,
--   <a>deleteLaunchProfileMemberResponse_httpStatus</a> - The response's
--   http status code.
newDeleteLaunchProfileMemberResponse :: Int -> DeleteLaunchProfileMemberResponse

-- | The response's http status code.
deleteLaunchProfileMemberResponse_httpStatus :: Lens' DeleteLaunchProfileMemberResponse Int
instance GHC.Generics.Generic Network.AWS.Nimble.DeleteLaunchProfileMember.DeleteLaunchProfileMember
instance GHC.Show.Show Network.AWS.Nimble.DeleteLaunchProfileMember.DeleteLaunchProfileMember
instance GHC.Read.Read Network.AWS.Nimble.DeleteLaunchProfileMember.DeleteLaunchProfileMember
instance GHC.Classes.Eq Network.AWS.Nimble.DeleteLaunchProfileMember.DeleteLaunchProfileMember
instance GHC.Generics.Generic Network.AWS.Nimble.DeleteLaunchProfileMember.DeleteLaunchProfileMemberResponse
instance GHC.Show.Show Network.AWS.Nimble.DeleteLaunchProfileMember.DeleteLaunchProfileMemberResponse
instance GHC.Read.Read Network.AWS.Nimble.DeleteLaunchProfileMember.DeleteLaunchProfileMemberResponse
instance GHC.Classes.Eq Network.AWS.Nimble.DeleteLaunchProfileMember.DeleteLaunchProfileMemberResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Nimble.DeleteLaunchProfileMember.DeleteLaunchProfileMember
instance Control.DeepSeq.NFData Network.AWS.Nimble.DeleteLaunchProfileMember.DeleteLaunchProfileMemberResponse
instance Data.Hashable.Class.Hashable Network.AWS.Nimble.DeleteLaunchProfileMember.DeleteLaunchProfileMember
instance Control.DeepSeq.NFData Network.AWS.Nimble.DeleteLaunchProfileMember.DeleteLaunchProfileMember
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Nimble.DeleteLaunchProfileMember.DeleteLaunchProfileMember
instance Network.AWS.Data.Path.ToPath Network.AWS.Nimble.DeleteLaunchProfileMember.DeleteLaunchProfileMember
instance Network.AWS.Data.Query.ToQuery Network.AWS.Nimble.DeleteLaunchProfileMember.DeleteLaunchProfileMember


-- | Permanently delete a launch profile.
module Network.AWS.Nimble.DeleteLaunchProfile

-- | <i>See:</i> <a>newDeleteLaunchProfile</a> smart constructor.
data DeleteLaunchProfile
DeleteLaunchProfile' :: Maybe Text -> Text -> Text -> DeleteLaunchProfile

-- | To make an idempotent API request using one of these actions, specify
--   a client token in the request. You should not reuse the same client
--   token for other API requests. If you retry a request that completed
--   successfully using the same client token and the same parameters, the
--   retry succeeds without performing any further actions. If you retry a
--   successful request using the same client token, but one or more of the
--   parameters are different, the retry fails with a ValidationException
--   error.
[$sel:clientToken:DeleteLaunchProfile'] :: DeleteLaunchProfile -> Maybe Text

-- | The studio ID.
[$sel:studioId:DeleteLaunchProfile'] :: DeleteLaunchProfile -> Text

-- | The launch profile ID.
[$sel:launchProfileId:DeleteLaunchProfile'] :: DeleteLaunchProfile -> Text

-- | Create a value of <a>DeleteLaunchProfile</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientToken:DeleteLaunchProfile'</a>,
--   <a>deleteLaunchProfile_clientToken</a> - To make an idempotent API
--   request using one of these actions, specify a client token in the
--   request. You should not reuse the same client token for other API
--   requests. If you retry a request that completed successfully using the
--   same client token and the same parameters, the retry succeeds without
--   performing any further actions. If you retry a successful request
--   using the same client token, but one or more of the parameters are
--   different, the retry fails with a ValidationException error.
--   
--   <a>$sel:studioId:DeleteLaunchProfile'</a>,
--   <a>deleteLaunchProfile_studioId</a> - The studio ID.
--   
--   <a>$sel:launchProfileId:DeleteLaunchProfile'</a>,
--   <a>deleteLaunchProfile_launchProfileId</a> - The launch profile ID.
newDeleteLaunchProfile :: Text -> Text -> DeleteLaunchProfile

-- | To make an idempotent API request using one of these actions, specify
--   a client token in the request. You should not reuse the same client
--   token for other API requests. If you retry a request that completed
--   successfully using the same client token and the same parameters, the
--   retry succeeds without performing any further actions. If you retry a
--   successful request using the same client token, but one or more of the
--   parameters are different, the retry fails with a ValidationException
--   error.
deleteLaunchProfile_clientToken :: Lens' DeleteLaunchProfile (Maybe Text)

-- | The studio ID.
deleteLaunchProfile_studioId :: Lens' DeleteLaunchProfile Text

-- | The launch profile ID.
deleteLaunchProfile_launchProfileId :: Lens' DeleteLaunchProfile Text

-- | <i>See:</i> <a>newDeleteLaunchProfileResponse</a> smart constructor.
data DeleteLaunchProfileResponse
DeleteLaunchProfileResponse' :: Maybe LaunchProfile -> Int -> DeleteLaunchProfileResponse

-- | The launch profile.
[$sel:launchProfile:DeleteLaunchProfileResponse'] :: DeleteLaunchProfileResponse -> Maybe LaunchProfile

-- | The response's http status code.
[$sel:httpStatus:DeleteLaunchProfileResponse'] :: DeleteLaunchProfileResponse -> Int

-- | Create a value of <a>DeleteLaunchProfileResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:launchProfile:DeleteLaunchProfileResponse'</a>,
--   <a>deleteLaunchProfileResponse_launchProfile</a> - The launch profile.
--   
--   <a>$sel:httpStatus:DeleteLaunchProfileResponse'</a>,
--   <a>deleteLaunchProfileResponse_httpStatus</a> - The response's http
--   status code.
newDeleteLaunchProfileResponse :: Int -> DeleteLaunchProfileResponse

-- | The launch profile.
deleteLaunchProfileResponse_launchProfile :: Lens' DeleteLaunchProfileResponse (Maybe LaunchProfile)

-- | The response's http status code.
deleteLaunchProfileResponse_httpStatus :: Lens' DeleteLaunchProfileResponse Int
instance GHC.Generics.Generic Network.AWS.Nimble.DeleteLaunchProfile.DeleteLaunchProfile
instance GHC.Show.Show Network.AWS.Nimble.DeleteLaunchProfile.DeleteLaunchProfile
instance GHC.Read.Read Network.AWS.Nimble.DeleteLaunchProfile.DeleteLaunchProfile
instance GHC.Classes.Eq Network.AWS.Nimble.DeleteLaunchProfile.DeleteLaunchProfile
instance GHC.Generics.Generic Network.AWS.Nimble.DeleteLaunchProfile.DeleteLaunchProfileResponse
instance GHC.Show.Show Network.AWS.Nimble.DeleteLaunchProfile.DeleteLaunchProfileResponse
instance GHC.Read.Read Network.AWS.Nimble.DeleteLaunchProfile.DeleteLaunchProfileResponse
instance GHC.Classes.Eq Network.AWS.Nimble.DeleteLaunchProfile.DeleteLaunchProfileResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Nimble.DeleteLaunchProfile.DeleteLaunchProfile
instance Control.DeepSeq.NFData Network.AWS.Nimble.DeleteLaunchProfile.DeleteLaunchProfileResponse
instance Data.Hashable.Class.Hashable Network.AWS.Nimble.DeleteLaunchProfile.DeleteLaunchProfile
instance Control.DeepSeq.NFData Network.AWS.Nimble.DeleteLaunchProfile.DeleteLaunchProfile
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Nimble.DeleteLaunchProfile.DeleteLaunchProfile
instance Network.AWS.Data.Path.ToPath Network.AWS.Nimble.DeleteLaunchProfile.DeleteLaunchProfile
instance Network.AWS.Data.Query.ToQuery Network.AWS.Nimble.DeleteLaunchProfile.DeleteLaunchProfile


-- | Creates a studio component resource.
module Network.AWS.Nimble.CreateStudioComponent

-- | The studio components.
--   
--   <i>See:</i> <a>newCreateStudioComponent</a> smart constructor.
data CreateStudioComponent
CreateStudioComponent' :: Maybe [StudioComponentInitializationScript] -> Maybe Text -> Maybe (NonEmpty Text) -> Maybe StudioComponentSubtype -> Maybe [ScriptParameterKeyValue] -> Maybe StudioComponentConfiguration -> Maybe Text -> Maybe (HashMap Text Text) -> Text -> Text -> StudioComponentType -> CreateStudioComponent

-- | Initialization scripts for studio components.
[$sel:initializationScripts:CreateStudioComponent'] :: CreateStudioComponent -> Maybe [StudioComponentInitializationScript]

-- | To make an idempotent API request using one of these actions, specify
--   a client token in the request. You should not reuse the same client
--   token for other API requests. If you retry a request that completed
--   successfully using the same client token and the same parameters, the
--   retry succeeds without performing any further actions. If you retry a
--   successful request using the same client token, but one or more of the
--   parameters are different, the retry fails with a ValidationException
--   error.
[$sel:clientToken:CreateStudioComponent'] :: CreateStudioComponent -> Maybe Text

-- | The EC2 security groups that control access to the studio component.
[$sel:ec2SecurityGroupIds:CreateStudioComponent'] :: CreateStudioComponent -> Maybe (NonEmpty Text)

-- | The specific subtype of a studio component.
[$sel:subtype:CreateStudioComponent'] :: CreateStudioComponent -> Maybe StudioComponentSubtype

-- | Parameters for the studio component scripts.
[$sel:scriptParameters:CreateStudioComponent'] :: CreateStudioComponent -> Maybe [ScriptParameterKeyValue]

-- | The configuration of the studio component, based on component type.
[$sel:configuration:CreateStudioComponent'] :: CreateStudioComponent -> Maybe StudioComponentConfiguration

-- | The description.
[$sel:description:CreateStudioComponent'] :: CreateStudioComponent -> Maybe Text

-- | A collection of labels, in the form of key:value pairs, that apply to
--   this resource.
[$sel:tags:CreateStudioComponent'] :: CreateStudioComponent -> Maybe (HashMap Text Text)

-- | The studio ID.
[$sel:studioId:CreateStudioComponent'] :: CreateStudioComponent -> Text

-- | The name for the studio component.
[$sel:name:CreateStudioComponent'] :: CreateStudioComponent -> Text

-- | The type of the studio component.
[$sel:type':CreateStudioComponent'] :: CreateStudioComponent -> StudioComponentType

-- | Create a value of <a>CreateStudioComponent</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:initializationScripts:CreateStudioComponent'</a>,
--   <a>createStudioComponent_initializationScripts</a> - Initialization
--   scripts for studio components.
--   
--   <a>$sel:clientToken:CreateStudioComponent'</a>,
--   <a>createStudioComponent_clientToken</a> - To make an idempotent API
--   request using one of these actions, specify a client token in the
--   request. You should not reuse the same client token for other API
--   requests. If you retry a request that completed successfully using the
--   same client token and the same parameters, the retry succeeds without
--   performing any further actions. If you retry a successful request
--   using the same client token, but one or more of the parameters are
--   different, the retry fails with a ValidationException error.
--   
--   <a>$sel:ec2SecurityGroupIds:CreateStudioComponent'</a>,
--   <a>createStudioComponent_ec2SecurityGroupIds</a> - The EC2 security
--   groups that control access to the studio component.
--   
--   <a>$sel:subtype:CreateStudioComponent'</a>,
--   <a>createStudioComponent_subtype</a> - The specific subtype of a
--   studio component.
--   
--   <a>$sel:scriptParameters:CreateStudioComponent'</a>,
--   <a>createStudioComponent_scriptParameters</a> - Parameters for the
--   studio component scripts.
--   
--   <a>$sel:configuration:CreateStudioComponent'</a>,
--   <a>createStudioComponent_configuration</a> - The configuration of the
--   studio component, based on component type.
--   
--   <a>$sel:description:CreateStudioComponent'</a>,
--   <a>createStudioComponent_description</a> - The description.
--   
--   <a>$sel:tags:CreateStudioComponent'</a>,
--   <a>createStudioComponent_tags</a> - A collection of labels, in the
--   form of key:value pairs, that apply to this resource.
--   
--   <a>$sel:studioId:CreateStudioComponent'</a>,
--   <a>createStudioComponent_studioId</a> - The studio ID.
--   
--   <a>$sel:name:CreateStudioComponent'</a>,
--   <a>createStudioComponent_name</a> - The name for the studio component.
--   
--   <a>$sel:type':CreateStudioComponent'</a>,
--   <a>createStudioComponent_type</a> - The type of the studio component.
newCreateStudioComponent :: Text -> Text -> StudioComponentType -> CreateStudioComponent

-- | Initialization scripts for studio components.
createStudioComponent_initializationScripts :: Lens' CreateStudioComponent (Maybe [StudioComponentInitializationScript])

-- | To make an idempotent API request using one of these actions, specify
--   a client token in the request. You should not reuse the same client
--   token for other API requests. If you retry a request that completed
--   successfully using the same client token and the same parameters, the
--   retry succeeds without performing any further actions. If you retry a
--   successful request using the same client token, but one or more of the
--   parameters are different, the retry fails with a ValidationException
--   error.
createStudioComponent_clientToken :: Lens' CreateStudioComponent (Maybe Text)

-- | The EC2 security groups that control access to the studio component.
createStudioComponent_ec2SecurityGroupIds :: Lens' CreateStudioComponent (Maybe (NonEmpty Text))

-- | The specific subtype of a studio component.
createStudioComponent_subtype :: Lens' CreateStudioComponent (Maybe StudioComponentSubtype)

-- | Parameters for the studio component scripts.
createStudioComponent_scriptParameters :: Lens' CreateStudioComponent (Maybe [ScriptParameterKeyValue])

-- | The configuration of the studio component, based on component type.
createStudioComponent_configuration :: Lens' CreateStudioComponent (Maybe StudioComponentConfiguration)

-- | The description.
createStudioComponent_description :: Lens' CreateStudioComponent (Maybe Text)

-- | A collection of labels, in the form of key:value pairs, that apply to
--   this resource.
createStudioComponent_tags :: Lens' CreateStudioComponent (Maybe (HashMap Text Text))

-- | The studio ID.
createStudioComponent_studioId :: Lens' CreateStudioComponent Text

-- | The name for the studio component.
createStudioComponent_name :: Lens' CreateStudioComponent Text

-- | The type of the studio component.
createStudioComponent_type :: Lens' CreateStudioComponent StudioComponentType

-- | <i>See:</i> <a>newCreateStudioComponentResponse</a> smart constructor.
data CreateStudioComponentResponse
CreateStudioComponentResponse' :: Maybe StudioComponent -> Int -> CreateStudioComponentResponse

-- | Information about the studio component.
[$sel:studioComponent:CreateStudioComponentResponse'] :: CreateStudioComponentResponse -> Maybe StudioComponent

-- | The response's http status code.
[$sel:httpStatus:CreateStudioComponentResponse'] :: CreateStudioComponentResponse -> Int

-- | Create a value of <a>CreateStudioComponentResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:studioComponent:CreateStudioComponentResponse'</a>,
--   <a>createStudioComponentResponse_studioComponent</a> - Information
--   about the studio component.
--   
--   <a>$sel:httpStatus:CreateStudioComponentResponse'</a>,
--   <a>createStudioComponentResponse_httpStatus</a> - The response's http
--   status code.
newCreateStudioComponentResponse :: Int -> CreateStudioComponentResponse

-- | Information about the studio component.
createStudioComponentResponse_studioComponent :: Lens' CreateStudioComponentResponse (Maybe StudioComponent)

-- | The response's http status code.
createStudioComponentResponse_httpStatus :: Lens' CreateStudioComponentResponse Int
instance GHC.Generics.Generic Network.AWS.Nimble.CreateStudioComponent.CreateStudioComponent
instance GHC.Show.Show Network.AWS.Nimble.CreateStudioComponent.CreateStudioComponent
instance GHC.Read.Read Network.AWS.Nimble.CreateStudioComponent.CreateStudioComponent
instance GHC.Classes.Eq Network.AWS.Nimble.CreateStudioComponent.CreateStudioComponent
instance GHC.Generics.Generic Network.AWS.Nimble.CreateStudioComponent.CreateStudioComponentResponse
instance GHC.Show.Show Network.AWS.Nimble.CreateStudioComponent.CreateStudioComponentResponse
instance GHC.Read.Read Network.AWS.Nimble.CreateStudioComponent.CreateStudioComponentResponse
instance GHC.Classes.Eq Network.AWS.Nimble.CreateStudioComponent.CreateStudioComponentResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Nimble.CreateStudioComponent.CreateStudioComponent
instance Control.DeepSeq.NFData Network.AWS.Nimble.CreateStudioComponent.CreateStudioComponentResponse
instance Data.Hashable.Class.Hashable Network.AWS.Nimble.CreateStudioComponent.CreateStudioComponent
instance Control.DeepSeq.NFData Network.AWS.Nimble.CreateStudioComponent.CreateStudioComponent
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Nimble.CreateStudioComponent.CreateStudioComponent
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Nimble.CreateStudioComponent.CreateStudioComponent
instance Network.AWS.Data.Path.ToPath Network.AWS.Nimble.CreateStudioComponent.CreateStudioComponent
instance Network.AWS.Data.Query.ToQuery Network.AWS.Nimble.CreateStudioComponent.CreateStudioComponent


-- | Create a new Studio.
--   
--   When creating a Studio, two IAM roles must be provided: the admin role
--   and the user Role. These roles are assumed by your users when they log
--   in to the Nimble Studio portal.
--   
--   The user role must have the AmazonNimbleStudio-StudioUser managed
--   policy attached for the portal to function properly.
--   
--   The Admin Role must have the AmazonNimbleStudio-StudioAdmin managed
--   policy attached for the portal to function properly.
--   
--   You may optionally specify a KMS key in the
--   StudioEncryptionConfiguration.
--   
--   In Nimble Studio, resource names, descriptions, initialization
--   scripts, and other data you provide are always encrypted at rest using
--   an KMS key. By default, this key is owned by Amazon Web Services and
--   managed on your behalf. You may provide your own KMS key when calling
--   CreateStudio to encrypt this data using a key you own and manage.
--   
--   When providing an KMS key during studio creation, Nimble Studio
--   creates KMS grants in your account to provide your studio user and
--   admin roles access to these KMS keys.
--   
--   If you delete this grant, the studio will no longer be accessible to
--   your portal users.
--   
--   If you delete the studio KMS key, your studio will no longer be
--   accessible.
module Network.AWS.Nimble.CreateStudio

-- | A collection of studio resources.
--   
--   <i>See:</i> <a>newCreateStudio</a> smart constructor.
data CreateStudio
CreateStudio' :: Maybe StudioEncryptionConfiguration -> Maybe Text -> Maybe (HashMap Text Text) -> Text -> Text -> Text -> Text -> CreateStudio

-- | The studio encryption configuration.
[$sel:studioEncryptionConfiguration:CreateStudio'] :: CreateStudio -> Maybe StudioEncryptionConfiguration

-- | To make an idempotent API request using one of these actions, specify
--   a client token in the request. You should not reuse the same client
--   token for other API requests. If you retry a request that completed
--   successfully using the same client token and the same parameters, the
--   retry succeeds without performing any further actions. If you retry a
--   successful request using the same client token, but one or more of the
--   parameters are different, the retry fails with a ValidationException
--   error.
[$sel:clientToken:CreateStudio'] :: CreateStudio -> Maybe Text

-- | A collection of labels, in the form of key:value pairs, that apply to
--   this resource.
[$sel:tags:CreateStudio'] :: CreateStudio -> Maybe (HashMap Text Text)

-- | A friendly name for the studio.
[$sel:displayName:CreateStudio'] :: CreateStudio -> Text

-- | The studio name that is used in the URL of the Nimble Studio portal
--   when accessed by Nimble Studio users.
[$sel:studioName:CreateStudio'] :: CreateStudio -> Text

-- | The IAM role that Studio Users will assume when logging in to the
--   Nimble Studio portal.
[$sel:userRoleArn:CreateStudio'] :: CreateStudio -> Text

-- | The IAM role that Studio Admins will assume when logging in to the
--   Nimble Studio portal.
[$sel:adminRoleArn:CreateStudio'] :: CreateStudio -> Text

-- | Create a value of <a>CreateStudio</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:studioEncryptionConfiguration:CreateStudio'</a>,
--   <a>createStudio_studioEncryptionConfiguration</a> - The studio
--   encryption configuration.
--   
--   <a>$sel:clientToken:CreateStudio'</a>, <a>createStudio_clientToken</a>
--   - To make an idempotent API request using one of these actions,
--   specify a client token in the request. You should not reuse the same
--   client token for other API requests. If you retry a request that
--   completed successfully using the same client token and the same
--   parameters, the retry succeeds without performing any further actions.
--   If you retry a successful request using the same client token, but one
--   or more of the parameters are different, the retry fails with a
--   ValidationException error.
--   
--   <a>$sel:tags:CreateStudio'</a>, <a>createStudio_tags</a> - A
--   collection of labels, in the form of key:value pairs, that apply to
--   this resource.
--   
--   <a>$sel:displayName:CreateStudio'</a>, <a>createStudio_displayName</a>
--   - A friendly name for the studio.
--   
--   <a>$sel:studioName:CreateStudio'</a>, <a>createStudio_studioName</a> -
--   The studio name that is used in the URL of the Nimble Studio portal
--   when accessed by Nimble Studio users.
--   
--   <a>$sel:userRoleArn:CreateStudio'</a>, <a>createStudio_userRoleArn</a>
--   - The IAM role that Studio Users will assume when logging in to the
--   Nimble Studio portal.
--   
--   <a>$sel:adminRoleArn:CreateStudio'</a>,
--   <a>createStudio_adminRoleArn</a> - The IAM role that Studio Admins
--   will assume when logging in to the Nimble Studio portal.
newCreateStudio :: Text -> Text -> Text -> Text -> CreateStudio

-- | The studio encryption configuration.
createStudio_studioEncryptionConfiguration :: Lens' CreateStudio (Maybe StudioEncryptionConfiguration)

-- | To make an idempotent API request using one of these actions, specify
--   a client token in the request. You should not reuse the same client
--   token for other API requests. If you retry a request that completed
--   successfully using the same client token and the same parameters, the
--   retry succeeds without performing any further actions. If you retry a
--   successful request using the same client token, but one or more of the
--   parameters are different, the retry fails with a ValidationException
--   error.
createStudio_clientToken :: Lens' CreateStudio (Maybe Text)

-- | A collection of labels, in the form of key:value pairs, that apply to
--   this resource.
createStudio_tags :: Lens' CreateStudio (Maybe (HashMap Text Text))

-- | A friendly name for the studio.
createStudio_displayName :: Lens' CreateStudio Text

-- | The studio name that is used in the URL of the Nimble Studio portal
--   when accessed by Nimble Studio users.
createStudio_studioName :: Lens' CreateStudio Text

-- | The IAM role that Studio Users will assume when logging in to the
--   Nimble Studio portal.
createStudio_userRoleArn :: Lens' CreateStudio Text

-- | The IAM role that Studio Admins will assume when logging in to the
--   Nimble Studio portal.
createStudio_adminRoleArn :: Lens' CreateStudio Text

-- | <i>See:</i> <a>newCreateStudioResponse</a> smart constructor.
data CreateStudioResponse
CreateStudioResponse' :: Maybe Studio -> Int -> CreateStudioResponse

-- | Information about a studio.
[$sel:studio:CreateStudioResponse'] :: CreateStudioResponse -> Maybe Studio

-- | The response's http status code.
[$sel:httpStatus:CreateStudioResponse'] :: CreateStudioResponse -> Int

-- | Create a value of <a>CreateStudioResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:studio:CreateStudioResponse'</a>,
--   <a>createStudioResponse_studio</a> - Information about a studio.
--   
--   <a>$sel:httpStatus:CreateStudioResponse'</a>,
--   <a>createStudioResponse_httpStatus</a> - The response's http status
--   code.
newCreateStudioResponse :: Int -> CreateStudioResponse

-- | Information about a studio.
createStudioResponse_studio :: Lens' CreateStudioResponse (Maybe Studio)

-- | The response's http status code.
createStudioResponse_httpStatus :: Lens' CreateStudioResponse Int
instance GHC.Generics.Generic Network.AWS.Nimble.CreateStudio.CreateStudio
instance GHC.Show.Show Network.AWS.Nimble.CreateStudio.CreateStudio
instance GHC.Read.Read Network.AWS.Nimble.CreateStudio.CreateStudio
instance GHC.Classes.Eq Network.AWS.Nimble.CreateStudio.CreateStudio
instance GHC.Generics.Generic Network.AWS.Nimble.CreateStudio.CreateStudioResponse
instance GHC.Show.Show Network.AWS.Nimble.CreateStudio.CreateStudioResponse
instance GHC.Read.Read Network.AWS.Nimble.CreateStudio.CreateStudioResponse
instance GHC.Classes.Eq Network.AWS.Nimble.CreateStudio.CreateStudioResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Nimble.CreateStudio.CreateStudio
instance Control.DeepSeq.NFData Network.AWS.Nimble.CreateStudio.CreateStudioResponse
instance Data.Hashable.Class.Hashable Network.AWS.Nimble.CreateStudio.CreateStudio
instance Control.DeepSeq.NFData Network.AWS.Nimble.CreateStudio.CreateStudio
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Nimble.CreateStudio.CreateStudio
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Nimble.CreateStudio.CreateStudio
instance Network.AWS.Data.Path.ToPath Network.AWS.Nimble.CreateStudio.CreateStudio
instance Network.AWS.Data.Query.ToQuery Network.AWS.Nimble.CreateStudio.CreateStudio


-- | Creates a streaming session stream for a streaming session.
--   
--   After invoking this API, invoke GetStreamingSessionStream with the
--   returned streamId to poll the resource until it is in state READY.
module Network.AWS.Nimble.CreateStreamingSessionStream

-- | A list collection streams.
--   
--   <i>See:</i> <a>newCreateStreamingSessionStream</a> smart constructor.
data CreateStreamingSessionStream
CreateStreamingSessionStream' :: Maybe Natural -> Maybe Text -> Text -> Text -> CreateStreamingSessionStream

-- | The expiration time in seconds.
[$sel:expirationInSeconds:CreateStreamingSessionStream'] :: CreateStreamingSessionStream -> Maybe Natural

-- | To make an idempotent API request using one of these actions, specify
--   a client token in the request. You should not reuse the same client
--   token for other API requests. If you retry a request that completed
--   successfully using the same client token and the same parameters, the
--   retry succeeds without performing any further actions. If you retry a
--   successful request using the same client token, but one or more of the
--   parameters are different, the retry fails with a ValidationException
--   error.
[$sel:clientToken:CreateStreamingSessionStream'] :: CreateStreamingSessionStream -> Maybe Text

-- | The studio ID.
[$sel:studioId:CreateStreamingSessionStream'] :: CreateStreamingSessionStream -> Text

-- | The session ID.
[$sel:sessionId:CreateStreamingSessionStream'] :: CreateStreamingSessionStream -> Text

-- | Create a value of <a>CreateStreamingSessionStream</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:expirationInSeconds:CreateStreamingSessionStream'</a>,
--   <a>createStreamingSessionStream_expirationInSeconds</a> - The
--   expiration time in seconds.
--   
--   <a>$sel:clientToken:CreateStreamingSessionStream'</a>,
--   <a>createStreamingSessionStream_clientToken</a> - To make an
--   idempotent API request using one of these actions, specify a client
--   token in the request. You should not reuse the same client token for
--   other API requests. If you retry a request that completed successfully
--   using the same client token and the same parameters, the retry
--   succeeds without performing any further actions. If you retry a
--   successful request using the same client token, but one or more of the
--   parameters are different, the retry fails with a ValidationException
--   error.
--   
--   <a>$sel:studioId:CreateStreamingSessionStream'</a>,
--   <a>createStreamingSessionStream_studioId</a> - The studio ID.
--   
--   <a>$sel:sessionId:CreateStreamingSessionStream'</a>,
--   <a>createStreamingSessionStream_sessionId</a> - The session ID.
newCreateStreamingSessionStream :: Text -> Text -> CreateStreamingSessionStream

-- | The expiration time in seconds.
createStreamingSessionStream_expirationInSeconds :: Lens' CreateStreamingSessionStream (Maybe Natural)

-- | To make an idempotent API request using one of these actions, specify
--   a client token in the request. You should not reuse the same client
--   token for other API requests. If you retry a request that completed
--   successfully using the same client token and the same parameters, the
--   retry succeeds without performing any further actions. If you retry a
--   successful request using the same client token, but one or more of the
--   parameters are different, the retry fails with a ValidationException
--   error.
createStreamingSessionStream_clientToken :: Lens' CreateStreamingSessionStream (Maybe Text)

-- | The studio ID.
createStreamingSessionStream_studioId :: Lens' CreateStreamingSessionStream Text

-- | The session ID.
createStreamingSessionStream_sessionId :: Lens' CreateStreamingSessionStream Text

-- | <i>See:</i> <a>newCreateStreamingSessionStreamResponse</a> smart
--   constructor.
data CreateStreamingSessionStreamResponse
CreateStreamingSessionStreamResponse' :: Maybe StreamingSessionStream -> Int -> CreateStreamingSessionStreamResponse

-- | The stream.
[$sel:stream:CreateStreamingSessionStreamResponse'] :: CreateStreamingSessionStreamResponse -> Maybe StreamingSessionStream

-- | The response's http status code.
[$sel:httpStatus:CreateStreamingSessionStreamResponse'] :: CreateStreamingSessionStreamResponse -> Int

-- | Create a value of <a>CreateStreamingSessionStreamResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:stream:CreateStreamingSessionStreamResponse'</a>,
--   <a>createStreamingSessionStreamResponse_stream</a> - The stream.
--   
--   <a>$sel:httpStatus:CreateStreamingSessionStreamResponse'</a>,
--   <a>createStreamingSessionStreamResponse_httpStatus</a> - The
--   response's http status code.
newCreateStreamingSessionStreamResponse :: Int -> CreateStreamingSessionStreamResponse

-- | The stream.
createStreamingSessionStreamResponse_stream :: Lens' CreateStreamingSessionStreamResponse (Maybe StreamingSessionStream)

-- | The response's http status code.
createStreamingSessionStreamResponse_httpStatus :: Lens' CreateStreamingSessionStreamResponse Int
instance GHC.Generics.Generic Network.AWS.Nimble.CreateStreamingSessionStream.CreateStreamingSessionStream
instance GHC.Show.Show Network.AWS.Nimble.CreateStreamingSessionStream.CreateStreamingSessionStream
instance GHC.Read.Read Network.AWS.Nimble.CreateStreamingSessionStream.CreateStreamingSessionStream
instance GHC.Classes.Eq Network.AWS.Nimble.CreateStreamingSessionStream.CreateStreamingSessionStream
instance GHC.Generics.Generic Network.AWS.Nimble.CreateStreamingSessionStream.CreateStreamingSessionStreamResponse
instance GHC.Show.Show Network.AWS.Nimble.CreateStreamingSessionStream.CreateStreamingSessionStreamResponse
instance GHC.Read.Read Network.AWS.Nimble.CreateStreamingSessionStream.CreateStreamingSessionStreamResponse
instance GHC.Classes.Eq Network.AWS.Nimble.CreateStreamingSessionStream.CreateStreamingSessionStreamResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Nimble.CreateStreamingSessionStream.CreateStreamingSessionStream
instance Control.DeepSeq.NFData Network.AWS.Nimble.CreateStreamingSessionStream.CreateStreamingSessionStreamResponse
instance Data.Hashable.Class.Hashable Network.AWS.Nimble.CreateStreamingSessionStream.CreateStreamingSessionStream
instance Control.DeepSeq.NFData Network.AWS.Nimble.CreateStreamingSessionStream.CreateStreamingSessionStream
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Nimble.CreateStreamingSessionStream.CreateStreamingSessionStream
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Nimble.CreateStreamingSessionStream.CreateStreamingSessionStream
instance Network.AWS.Data.Path.ToPath Network.AWS.Nimble.CreateStreamingSessionStream.CreateStreamingSessionStream
instance Network.AWS.Data.Query.ToQuery Network.AWS.Nimble.CreateStreamingSessionStream.CreateStreamingSessionStream


-- | Creates a streaming session in a studio.
--   
--   After invoking this operation, you must poll GetStreamingSession until
--   the streaming session is in state READY.
module Network.AWS.Nimble.CreateStreamingSession

-- | A collection of streaming sessions.
--   
--   <i>See:</i> <a>newCreateStreamingSession</a> smart constructor.
data CreateStreamingSession
CreateStreamingSession' :: Maybe Text -> Maybe Text -> Maybe StreamingInstanceType -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Text -> CreateStreamingSession

-- | The user ID of the user that owns the streaming session.
[$sel:ownedBy:CreateStreamingSession'] :: CreateStreamingSession -> Maybe Text

-- | To make an idempotent API request using one of these actions, specify
--   a client token in the request. You should not reuse the same client
--   token for other API requests. If you retry a request that completed
--   successfully using the same client token and the same parameters, the
--   retry succeeds without performing any further actions. If you retry a
--   successful request using the same client token, but one or more of the
--   parameters are different, the retry fails with a ValidationException
--   error.
[$sel:clientToken:CreateStreamingSession'] :: CreateStreamingSession -> Maybe Text

-- | The EC2 Instance type used for the streaming session.
[$sel:ec2InstanceType:CreateStreamingSession'] :: CreateStreamingSession -> Maybe StreamingInstanceType

-- | The launch profile ID.
[$sel:launchProfileId:CreateStreamingSession'] :: CreateStreamingSession -> Maybe Text

-- | The ID of the streaming image.
[$sel:streamingImageId:CreateStreamingSession'] :: CreateStreamingSession -> Maybe Text

-- | A collection of labels, in the form of key:value pairs, that apply to
--   this resource.
[$sel:tags:CreateStreamingSession'] :: CreateStreamingSession -> Maybe (HashMap Text Text)

-- | The studio ID.
[$sel:studioId:CreateStreamingSession'] :: CreateStreamingSession -> Text

-- | Create a value of <a>CreateStreamingSession</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ownedBy:CreateStreamingSession'</a>,
--   <a>createStreamingSession_ownedBy</a> - The user ID of the user that
--   owns the streaming session.
--   
--   <a>$sel:clientToken:CreateStreamingSession'</a>,
--   <a>createStreamingSession_clientToken</a> - To make an idempotent API
--   request using one of these actions, specify a client token in the
--   request. You should not reuse the same client token for other API
--   requests. If you retry a request that completed successfully using the
--   same client token and the same parameters, the retry succeeds without
--   performing any further actions. If you retry a successful request
--   using the same client token, but one or more of the parameters are
--   different, the retry fails with a ValidationException error.
--   
--   <a>$sel:ec2InstanceType:CreateStreamingSession'</a>,
--   <a>createStreamingSession_ec2InstanceType</a> - The EC2 Instance type
--   used for the streaming session.
--   
--   <a>$sel:launchProfileId:CreateStreamingSession'</a>,
--   <a>createStreamingSession_launchProfileId</a> - The launch profile ID.
--   
--   <a>$sel:streamingImageId:CreateStreamingSession'</a>,
--   <a>createStreamingSession_streamingImageId</a> - The ID of the
--   streaming image.
--   
--   <a>$sel:tags:CreateStreamingSession'</a>,
--   <a>createStreamingSession_tags</a> - A collection of labels, in the
--   form of key:value pairs, that apply to this resource.
--   
--   <a>$sel:studioId:CreateStreamingSession'</a>,
--   <a>createStreamingSession_studioId</a> - The studio ID.
newCreateStreamingSession :: Text -> CreateStreamingSession

-- | The user ID of the user that owns the streaming session.
createStreamingSession_ownedBy :: Lens' CreateStreamingSession (Maybe Text)

-- | To make an idempotent API request using one of these actions, specify
--   a client token in the request. You should not reuse the same client
--   token for other API requests. If you retry a request that completed
--   successfully using the same client token and the same parameters, the
--   retry succeeds without performing any further actions. If you retry a
--   successful request using the same client token, but one or more of the
--   parameters are different, the retry fails with a ValidationException
--   error.
createStreamingSession_clientToken :: Lens' CreateStreamingSession (Maybe Text)

-- | The EC2 Instance type used for the streaming session.
createStreamingSession_ec2InstanceType :: Lens' CreateStreamingSession (Maybe StreamingInstanceType)

-- | The launch profile ID.
createStreamingSession_launchProfileId :: Lens' CreateStreamingSession (Maybe Text)

-- | The ID of the streaming image.
createStreamingSession_streamingImageId :: Lens' CreateStreamingSession (Maybe Text)

-- | A collection of labels, in the form of key:value pairs, that apply to
--   this resource.
createStreamingSession_tags :: Lens' CreateStreamingSession (Maybe (HashMap Text Text))

-- | The studio ID.
createStreamingSession_studioId :: Lens' CreateStreamingSession Text

-- | <i>See:</i> <a>newCreateStreamingSessionResponse</a> smart
--   constructor.
data CreateStreamingSessionResponse
CreateStreamingSessionResponse' :: Maybe StreamingSession -> Int -> CreateStreamingSessionResponse

-- | The session.
[$sel:session:CreateStreamingSessionResponse'] :: CreateStreamingSessionResponse -> Maybe StreamingSession

-- | The response's http status code.
[$sel:httpStatus:CreateStreamingSessionResponse'] :: CreateStreamingSessionResponse -> Int

-- | Create a value of <a>CreateStreamingSessionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:session:CreateStreamingSessionResponse'</a>,
--   <a>createStreamingSessionResponse_session</a> - The session.
--   
--   <a>$sel:httpStatus:CreateStreamingSessionResponse'</a>,
--   <a>createStreamingSessionResponse_httpStatus</a> - The response's http
--   status code.
newCreateStreamingSessionResponse :: Int -> CreateStreamingSessionResponse

-- | The session.
createStreamingSessionResponse_session :: Lens' CreateStreamingSessionResponse (Maybe StreamingSession)

-- | The response's http status code.
createStreamingSessionResponse_httpStatus :: Lens' CreateStreamingSessionResponse Int
instance GHC.Generics.Generic Network.AWS.Nimble.CreateStreamingSession.CreateStreamingSession
instance GHC.Show.Show Network.AWS.Nimble.CreateStreamingSession.CreateStreamingSession
instance GHC.Read.Read Network.AWS.Nimble.CreateStreamingSession.CreateStreamingSession
instance GHC.Classes.Eq Network.AWS.Nimble.CreateStreamingSession.CreateStreamingSession
instance GHC.Generics.Generic Network.AWS.Nimble.CreateStreamingSession.CreateStreamingSessionResponse
instance GHC.Show.Show Network.AWS.Nimble.CreateStreamingSession.CreateStreamingSessionResponse
instance GHC.Read.Read Network.AWS.Nimble.CreateStreamingSession.CreateStreamingSessionResponse
instance GHC.Classes.Eq Network.AWS.Nimble.CreateStreamingSession.CreateStreamingSessionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Nimble.CreateStreamingSession.CreateStreamingSession
instance Control.DeepSeq.NFData Network.AWS.Nimble.CreateStreamingSession.CreateStreamingSessionResponse
instance Data.Hashable.Class.Hashable Network.AWS.Nimble.CreateStreamingSession.CreateStreamingSession
instance Control.DeepSeq.NFData Network.AWS.Nimble.CreateStreamingSession.CreateStreamingSession
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Nimble.CreateStreamingSession.CreateStreamingSession
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Nimble.CreateStreamingSession.CreateStreamingSession
instance Network.AWS.Data.Path.ToPath Network.AWS.Nimble.CreateStreamingSession.CreateStreamingSession
instance Network.AWS.Data.Query.ToQuery Network.AWS.Nimble.CreateStreamingSession.CreateStreamingSession


-- | Creates a streaming image resource in a studio.
module Network.AWS.Nimble.CreateStreamingImage

-- | A collection of streaming images.
--   
--   <i>See:</i> <a>newCreateStreamingImage</a> smart constructor.
data CreateStreamingImage
CreateStreamingImage' :: Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Text -> Text -> Text -> CreateStreamingImage

-- | To make an idempotent API request using one of these actions, specify
--   a client token in the request. You should not reuse the same client
--   token for other API requests. If you retry a request that completed
--   successfully using the same client token and the same parameters, the
--   retry succeeds without performing any further actions. If you retry a
--   successful request using the same client token, but one or more of the
--   parameters are different, the retry fails with a ValidationException
--   error.
[$sel:clientToken:CreateStreamingImage'] :: CreateStreamingImage -> Maybe Text

-- | A human-readable description of the streaming image.
[$sel:description:CreateStreamingImage'] :: CreateStreamingImage -> Maybe Text

-- | A collection of labels, in the form of key:value pairs, that apply to
--   this resource.
[$sel:tags:CreateStreamingImage'] :: CreateStreamingImage -> Maybe (HashMap Text Text)

-- | The studio ID.
[$sel:studioId:CreateStreamingImage'] :: CreateStreamingImage -> Text

-- | A friendly name for a streaming image resource.
[$sel:name:CreateStreamingImage'] :: CreateStreamingImage -> Text

-- | The ID of an EC2 machine image with which to create this streaming
--   image.
[$sel:ec2ImageId:CreateStreamingImage'] :: CreateStreamingImage -> Text

-- | Create a value of <a>CreateStreamingImage</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientToken:CreateStreamingImage'</a>,
--   <a>createStreamingImage_clientToken</a> - To make an idempotent API
--   request using one of these actions, specify a client token in the
--   request. You should not reuse the same client token for other API
--   requests. If you retry a request that completed successfully using the
--   same client token and the same parameters, the retry succeeds without
--   performing any further actions. If you retry a successful request
--   using the same client token, but one or more of the parameters are
--   different, the retry fails with a ValidationException error.
--   
--   <a>$sel:description:CreateStreamingImage'</a>,
--   <a>createStreamingImage_description</a> - A human-readable description
--   of the streaming image.
--   
--   <a>$sel:tags:CreateStreamingImage'</a>,
--   <a>createStreamingImage_tags</a> - A collection of labels, in the form
--   of key:value pairs, that apply to this resource.
--   
--   <a>$sel:studioId:CreateStreamingImage'</a>,
--   <a>createStreamingImage_studioId</a> - The studio ID.
--   
--   <a>$sel:name:CreateStreamingImage'</a>,
--   <a>createStreamingImage_name</a> - A friendly name for a streaming
--   image resource.
--   
--   <a>$sel:ec2ImageId:CreateStreamingImage'</a>,
--   <a>createStreamingImage_ec2ImageId</a> - The ID of an EC2 machine
--   image with which to create this streaming image.
newCreateStreamingImage :: Text -> Text -> Text -> CreateStreamingImage

-- | To make an idempotent API request using one of these actions, specify
--   a client token in the request. You should not reuse the same client
--   token for other API requests. If you retry a request that completed
--   successfully using the same client token and the same parameters, the
--   retry succeeds without performing any further actions. If you retry a
--   successful request using the same client token, but one or more of the
--   parameters are different, the retry fails with a ValidationException
--   error.
createStreamingImage_clientToken :: Lens' CreateStreamingImage (Maybe Text)

-- | A human-readable description of the streaming image.
createStreamingImage_description :: Lens' CreateStreamingImage (Maybe Text)

-- | A collection of labels, in the form of key:value pairs, that apply to
--   this resource.
createStreamingImage_tags :: Lens' CreateStreamingImage (Maybe (HashMap Text Text))

-- | The studio ID.
createStreamingImage_studioId :: Lens' CreateStreamingImage Text

-- | A friendly name for a streaming image resource.
createStreamingImage_name :: Lens' CreateStreamingImage Text

-- | The ID of an EC2 machine image with which to create this streaming
--   image.
createStreamingImage_ec2ImageId :: Lens' CreateStreamingImage Text

-- | <i>See:</i> <a>newCreateStreamingImageResponse</a> smart constructor.
data CreateStreamingImageResponse
CreateStreamingImageResponse' :: Maybe StreamingImage -> Int -> CreateStreamingImageResponse
[$sel:streamingImage:CreateStreamingImageResponse'] :: CreateStreamingImageResponse -> Maybe StreamingImage

-- | The response's http status code.
[$sel:httpStatus:CreateStreamingImageResponse'] :: CreateStreamingImageResponse -> Int

-- | Create a value of <a>CreateStreamingImageResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:streamingImage:CreateStreamingImageResponse'</a>,
--   <a>createStreamingImageResponse_streamingImage</a> -
--   
--   <a>$sel:httpStatus:CreateStreamingImageResponse'</a>,
--   <a>createStreamingImageResponse_httpStatus</a> - The response's http
--   status code.
newCreateStreamingImageResponse :: Int -> CreateStreamingImageResponse

createStreamingImageResponse_streamingImage :: Lens' CreateStreamingImageResponse (Maybe StreamingImage)

-- | The response's http status code.
createStreamingImageResponse_httpStatus :: Lens' CreateStreamingImageResponse Int
instance GHC.Generics.Generic Network.AWS.Nimble.CreateStreamingImage.CreateStreamingImage
instance GHC.Show.Show Network.AWS.Nimble.CreateStreamingImage.CreateStreamingImage
instance GHC.Read.Read Network.AWS.Nimble.CreateStreamingImage.CreateStreamingImage
instance GHC.Classes.Eq Network.AWS.Nimble.CreateStreamingImage.CreateStreamingImage
instance GHC.Generics.Generic Network.AWS.Nimble.CreateStreamingImage.CreateStreamingImageResponse
instance GHC.Show.Show Network.AWS.Nimble.CreateStreamingImage.CreateStreamingImageResponse
instance GHC.Read.Read Network.AWS.Nimble.CreateStreamingImage.CreateStreamingImageResponse
instance GHC.Classes.Eq Network.AWS.Nimble.CreateStreamingImage.CreateStreamingImageResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Nimble.CreateStreamingImage.CreateStreamingImage
instance Control.DeepSeq.NFData Network.AWS.Nimble.CreateStreamingImage.CreateStreamingImageResponse
instance Data.Hashable.Class.Hashable Network.AWS.Nimble.CreateStreamingImage.CreateStreamingImage
instance Control.DeepSeq.NFData Network.AWS.Nimble.CreateStreamingImage.CreateStreamingImage
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Nimble.CreateStreamingImage.CreateStreamingImage
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Nimble.CreateStreamingImage.CreateStreamingImage
instance Network.AWS.Data.Path.ToPath Network.AWS.Nimble.CreateStreamingImage.CreateStreamingImage
instance Network.AWS.Data.Query.ToQuery Network.AWS.Nimble.CreateStreamingImage.CreateStreamingImage


-- | Create a launch profile.
module Network.AWS.Nimble.CreateLaunchProfile

-- | A collection of launch profiles.
--   
--   <i>See:</i> <a>newCreateLaunchProfile</a> smart constructor.
data CreateLaunchProfile
CreateLaunchProfile' :: Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> [Text] -> NonEmpty Text -> Text -> [Text] -> Text -> StreamConfigurationCreate -> CreateLaunchProfile

-- | To make an idempotent API request using one of these actions, specify
--   a client token in the request. You should not reuse the same client
--   token for other API requests. If you retry a request that completed
--   successfully using the same client token and the same parameters, the
--   retry succeeds without performing any further actions. If you retry a
--   successful request using the same client token, but one or more of the
--   parameters are different, the retry fails with a ValidationException
--   error.
[$sel:clientToken:CreateLaunchProfile'] :: CreateLaunchProfile -> Maybe Text

-- | The description.
[$sel:description:CreateLaunchProfile'] :: CreateLaunchProfile -> Maybe Text

-- | A collection of labels, in the form of key:value pairs, that apply to
--   this resource.
[$sel:tags:CreateLaunchProfile'] :: CreateLaunchProfile -> Maybe (HashMap Text Text)
[$sel:ec2SubnetIds:CreateLaunchProfile'] :: CreateLaunchProfile -> [Text]

-- | Unique identifiers for a collection of studio components that can be
--   used with this launch profile.
[$sel:studioComponentIds:CreateLaunchProfile'] :: CreateLaunchProfile -> NonEmpty Text

-- | The studio ID.
[$sel:studioId:CreateLaunchProfile'] :: CreateLaunchProfile -> Text

-- | The version number of the protocol that is used by the launch profile.
--   The only valid version is "2021-03-31".
[$sel:launchProfileProtocolVersions:CreateLaunchProfile'] :: CreateLaunchProfile -> [Text]

-- | The name for the launch profile.
[$sel:name:CreateLaunchProfile'] :: CreateLaunchProfile -> Text

-- | A configuration for a streaming session.
[$sel:streamConfiguration:CreateLaunchProfile'] :: CreateLaunchProfile -> StreamConfigurationCreate

-- | Create a value of <a>CreateLaunchProfile</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientToken:CreateLaunchProfile'</a>,
--   <a>createLaunchProfile_clientToken</a> - To make an idempotent API
--   request using one of these actions, specify a client token in the
--   request. You should not reuse the same client token for other API
--   requests. If you retry a request that completed successfully using the
--   same client token and the same parameters, the retry succeeds without
--   performing any further actions. If you retry a successful request
--   using the same client token, but one or more of the parameters are
--   different, the retry fails with a ValidationException error.
--   
--   <a>$sel:description:CreateLaunchProfile'</a>,
--   <a>createLaunchProfile_description</a> - The description.
--   
--   <a>$sel:tags:CreateLaunchProfile'</a>, <a>createLaunchProfile_tags</a>
--   - A collection of labels, in the form of key:value pairs, that apply
--   to this resource.
--   
--   <a>$sel:ec2SubnetIds:CreateLaunchProfile'</a>,
--   <a>createLaunchProfile_ec2SubnetIds</a> -
--   
--   <a>$sel:studioComponentIds:CreateLaunchProfile'</a>,
--   <a>createLaunchProfile_studioComponentIds</a> - Unique identifiers for
--   a collection of studio components that can be used with this launch
--   profile.
--   
--   <a>$sel:studioId:CreateLaunchProfile'</a>,
--   <a>createLaunchProfile_studioId</a> - The studio ID.
--   
--   <a>$sel:launchProfileProtocolVersions:CreateLaunchProfile'</a>,
--   <a>createLaunchProfile_launchProfileProtocolVersions</a> - The version
--   number of the protocol that is used by the launch profile. The only
--   valid version is "2021-03-31".
--   
--   <a>$sel:name:CreateLaunchProfile'</a>, <a>createLaunchProfile_name</a>
--   - The name for the launch profile.
--   
--   <a>$sel:streamConfiguration:CreateLaunchProfile'</a>,
--   <a>createLaunchProfile_streamConfiguration</a> - A configuration for a
--   streaming session.
newCreateLaunchProfile :: NonEmpty Text -> Text -> Text -> StreamConfigurationCreate -> CreateLaunchProfile

-- | To make an idempotent API request using one of these actions, specify
--   a client token in the request. You should not reuse the same client
--   token for other API requests. If you retry a request that completed
--   successfully using the same client token and the same parameters, the
--   retry succeeds without performing any further actions. If you retry a
--   successful request using the same client token, but one or more of the
--   parameters are different, the retry fails with a ValidationException
--   error.
createLaunchProfile_clientToken :: Lens' CreateLaunchProfile (Maybe Text)

-- | The description.
createLaunchProfile_description :: Lens' CreateLaunchProfile (Maybe Text)

-- | A collection of labels, in the form of key:value pairs, that apply to
--   this resource.
createLaunchProfile_tags :: Lens' CreateLaunchProfile (Maybe (HashMap Text Text))

createLaunchProfile_ec2SubnetIds :: Lens' CreateLaunchProfile [Text]

-- | Unique identifiers for a collection of studio components that can be
--   used with this launch profile.
createLaunchProfile_studioComponentIds :: Lens' CreateLaunchProfile (NonEmpty Text)

-- | The studio ID.
createLaunchProfile_studioId :: Lens' CreateLaunchProfile Text

-- | The version number of the protocol that is used by the launch profile.
--   The only valid version is "2021-03-31".
createLaunchProfile_launchProfileProtocolVersions :: Lens' CreateLaunchProfile [Text]

-- | The name for the launch profile.
createLaunchProfile_name :: Lens' CreateLaunchProfile Text

-- | A configuration for a streaming session.
createLaunchProfile_streamConfiguration :: Lens' CreateLaunchProfile StreamConfigurationCreate

-- | <i>See:</i> <a>newCreateLaunchProfileResponse</a> smart constructor.
data CreateLaunchProfileResponse
CreateLaunchProfileResponse' :: Maybe LaunchProfile -> Int -> CreateLaunchProfileResponse

-- | The launch profile.
[$sel:launchProfile:CreateLaunchProfileResponse'] :: CreateLaunchProfileResponse -> Maybe LaunchProfile

-- | The response's http status code.
[$sel:httpStatus:CreateLaunchProfileResponse'] :: CreateLaunchProfileResponse -> Int

-- | Create a value of <a>CreateLaunchProfileResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:launchProfile:CreateLaunchProfileResponse'</a>,
--   <a>createLaunchProfileResponse_launchProfile</a> - The launch profile.
--   
--   <a>$sel:httpStatus:CreateLaunchProfileResponse'</a>,
--   <a>createLaunchProfileResponse_httpStatus</a> - The response's http
--   status code.
newCreateLaunchProfileResponse :: Int -> CreateLaunchProfileResponse

-- | The launch profile.
createLaunchProfileResponse_launchProfile :: Lens' CreateLaunchProfileResponse (Maybe LaunchProfile)

-- | The response's http status code.
createLaunchProfileResponse_httpStatus :: Lens' CreateLaunchProfileResponse Int
instance GHC.Generics.Generic Network.AWS.Nimble.CreateLaunchProfile.CreateLaunchProfile
instance GHC.Show.Show Network.AWS.Nimble.CreateLaunchProfile.CreateLaunchProfile
instance GHC.Read.Read Network.AWS.Nimble.CreateLaunchProfile.CreateLaunchProfile
instance GHC.Classes.Eq Network.AWS.Nimble.CreateLaunchProfile.CreateLaunchProfile
instance GHC.Generics.Generic Network.AWS.Nimble.CreateLaunchProfile.CreateLaunchProfileResponse
instance GHC.Show.Show Network.AWS.Nimble.CreateLaunchProfile.CreateLaunchProfileResponse
instance GHC.Read.Read Network.AWS.Nimble.CreateLaunchProfile.CreateLaunchProfileResponse
instance GHC.Classes.Eq Network.AWS.Nimble.CreateLaunchProfile.CreateLaunchProfileResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Nimble.CreateLaunchProfile.CreateLaunchProfile
instance Control.DeepSeq.NFData Network.AWS.Nimble.CreateLaunchProfile.CreateLaunchProfileResponse
instance Data.Hashable.Class.Hashable Network.AWS.Nimble.CreateLaunchProfile.CreateLaunchProfile
instance Control.DeepSeq.NFData Network.AWS.Nimble.CreateLaunchProfile.CreateLaunchProfile
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Nimble.CreateLaunchProfile.CreateLaunchProfile
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Nimble.CreateLaunchProfile.CreateLaunchProfile
instance Network.AWS.Data.Path.ToPath Network.AWS.Nimble.CreateLaunchProfile.CreateLaunchProfile
instance Network.AWS.Data.Query.ToQuery Network.AWS.Nimble.CreateLaunchProfile.CreateLaunchProfile


-- | Accept EULAs.
module Network.AWS.Nimble.AcceptEulas

-- | A collection of EULA acceptances.
--   
--   <i>See:</i> <a>newAcceptEulas</a> smart constructor.
data AcceptEulas
AcceptEulas' :: Maybe Text -> Maybe [Text] -> Text -> AcceptEulas

-- | To make an idempotent API request using one of these actions, specify
--   a client token in the request. You should not reuse the same client
--   token for other API requests. If you retry a request that completed
--   successfully using the same client token and the same parameters, the
--   retry succeeds without performing any further actions. If you retry a
--   successful request using the same client token, but one or more of the
--   parameters are different, the retry fails with a ValidationException
--   error.
[$sel:clientToken:AcceptEulas'] :: AcceptEulas -> Maybe Text

-- | The EULA ID.
[$sel:eulaIds:AcceptEulas'] :: AcceptEulas -> Maybe [Text]

-- | The studio ID.
[$sel:studioId:AcceptEulas'] :: AcceptEulas -> Text

-- | Create a value of <a>AcceptEulas</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientToken:AcceptEulas'</a>, <a>acceptEulas_clientToken</a> -
--   To make an idempotent API request using one of these actions, specify
--   a client token in the request. You should not reuse the same client
--   token for other API requests. If you retry a request that completed
--   successfully using the same client token and the same parameters, the
--   retry succeeds without performing any further actions. If you retry a
--   successful request using the same client token, but one or more of the
--   parameters are different, the retry fails with a ValidationException
--   error.
--   
--   <a>$sel:eulaIds:AcceptEulas'</a>, <a>acceptEulas_eulaIds</a> - The
--   EULA ID.
--   
--   <a>$sel:studioId:AcceptEulas'</a>, <a>acceptEulas_studioId</a> - The
--   studio ID.
newAcceptEulas :: Text -> AcceptEulas

-- | To make an idempotent API request using one of these actions, specify
--   a client token in the request. You should not reuse the same client
--   token for other API requests. If you retry a request that completed
--   successfully using the same client token and the same parameters, the
--   retry succeeds without performing any further actions. If you retry a
--   successful request using the same client token, but one or more of the
--   parameters are different, the retry fails with a ValidationException
--   error.
acceptEulas_clientToken :: Lens' AcceptEulas (Maybe Text)

-- | The EULA ID.
acceptEulas_eulaIds :: Lens' AcceptEulas (Maybe [Text])

-- | The studio ID.
acceptEulas_studioId :: Lens' AcceptEulas Text

-- | <i>See:</i> <a>newAcceptEulasResponse</a> smart constructor.
data AcceptEulasResponse
AcceptEulasResponse' :: Maybe [EulaAcceptance] -> Int -> AcceptEulasResponse

-- | A collection of EULA acceptances.
[$sel:eulaAcceptances:AcceptEulasResponse'] :: AcceptEulasResponse -> Maybe [EulaAcceptance]

-- | The response's http status code.
[$sel:httpStatus:AcceptEulasResponse'] :: AcceptEulasResponse -> Int

-- | Create a value of <a>AcceptEulasResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:eulaAcceptances:AcceptEulasResponse'</a>,
--   <a>acceptEulasResponse_eulaAcceptances</a> - A collection of EULA
--   acceptances.
--   
--   <a>$sel:httpStatus:AcceptEulasResponse'</a>,
--   <a>acceptEulasResponse_httpStatus</a> - The response's http status
--   code.
newAcceptEulasResponse :: Int -> AcceptEulasResponse

-- | A collection of EULA acceptances.
acceptEulasResponse_eulaAcceptances :: Lens' AcceptEulasResponse (Maybe [EulaAcceptance])

-- | The response's http status code.
acceptEulasResponse_httpStatus :: Lens' AcceptEulasResponse Int
instance GHC.Generics.Generic Network.AWS.Nimble.AcceptEulas.AcceptEulas
instance GHC.Show.Show Network.AWS.Nimble.AcceptEulas.AcceptEulas
instance GHC.Read.Read Network.AWS.Nimble.AcceptEulas.AcceptEulas
instance GHC.Classes.Eq Network.AWS.Nimble.AcceptEulas.AcceptEulas
instance GHC.Generics.Generic Network.AWS.Nimble.AcceptEulas.AcceptEulasResponse
instance GHC.Show.Show Network.AWS.Nimble.AcceptEulas.AcceptEulasResponse
instance GHC.Read.Read Network.AWS.Nimble.AcceptEulas.AcceptEulasResponse
instance GHC.Classes.Eq Network.AWS.Nimble.AcceptEulas.AcceptEulasResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Nimble.AcceptEulas.AcceptEulas
instance Control.DeepSeq.NFData Network.AWS.Nimble.AcceptEulas.AcceptEulasResponse
instance Data.Hashable.Class.Hashable Network.AWS.Nimble.AcceptEulas.AcceptEulas
instance Control.DeepSeq.NFData Network.AWS.Nimble.AcceptEulas.AcceptEulas
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Nimble.AcceptEulas.AcceptEulas
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Nimble.AcceptEulas.AcceptEulas
instance Network.AWS.Data.Path.ToPath Network.AWS.Nimble.AcceptEulas.AcceptEulas
instance Network.AWS.Data.Query.ToQuery Network.AWS.Nimble.AcceptEulas.AcceptEulas


-- | Deletes the tags for a resource.
module Network.AWS.Nimble.UntagResource

-- | <i>See:</i> <a>newUntagResource</a> smart constructor.
data UntagResource
UntagResource' :: [Text] -> Text -> UntagResource

-- | An array of tag keys to delete.
[$sel:tagKeys:UntagResource'] :: UntagResource -> [Text]

-- | The ARN of the target resource for tagging operations.
[$sel:resourceArn:UntagResource'] :: UntagResource -> Text

-- | Create a value of <a>UntagResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tagKeys:UntagResource'</a>, <a>untagResource_tagKeys</a> - An
--   array of tag keys to delete.
--   
--   <a>$sel:resourceArn:UntagResource'</a>,
--   <a>untagResource_resourceArn</a> - The ARN of the target resource for
--   tagging operations.
newUntagResource :: Text -> UntagResource

-- | An array of tag keys to delete.
untagResource_tagKeys :: Lens' UntagResource [Text]

-- | The ARN of the target resource for tagging operations.
untagResource_resourceArn :: Lens' UntagResource Text

-- | <i>See:</i> <a>newUntagResourceResponse</a> smart constructor.
data UntagResourceResponse
UntagResourceResponse' :: Int -> UntagResourceResponse

-- | The response's http status code.
[$sel:httpStatus:UntagResourceResponse'] :: UntagResourceResponse -> Int

-- | Create a value of <a>UntagResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UntagResourceResponse'</a>,
--   <a>untagResourceResponse_httpStatus</a> - The response's http status
--   code.
newUntagResourceResponse :: Int -> UntagResourceResponse

-- | The response's http status code.
untagResourceResponse_httpStatus :: Lens' UntagResourceResponse Int
instance GHC.Generics.Generic Network.AWS.Nimble.UntagResource.UntagResource
instance GHC.Show.Show Network.AWS.Nimble.UntagResource.UntagResource
instance GHC.Read.Read Network.AWS.Nimble.UntagResource.UntagResource
instance GHC.Classes.Eq Network.AWS.Nimble.UntagResource.UntagResource
instance GHC.Generics.Generic Network.AWS.Nimble.UntagResource.UntagResourceResponse
instance GHC.Show.Show Network.AWS.Nimble.UntagResource.UntagResourceResponse
instance GHC.Read.Read Network.AWS.Nimble.UntagResource.UntagResourceResponse
instance GHC.Classes.Eq Network.AWS.Nimble.UntagResource.UntagResourceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Nimble.UntagResource.UntagResource
instance Control.DeepSeq.NFData Network.AWS.Nimble.UntagResource.UntagResourceResponse
instance Data.Hashable.Class.Hashable Network.AWS.Nimble.UntagResource.UntagResource
instance Control.DeepSeq.NFData Network.AWS.Nimble.UntagResource.UntagResource
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Nimble.UntagResource.UntagResource
instance Network.AWS.Data.Path.ToPath Network.AWS.Nimble.UntagResource.UntagResource
instance Network.AWS.Data.Query.ToQuery Network.AWS.Nimble.UntagResource.UntagResource


-- | Update a launch profile.
module Network.AWS.Nimble.UpdateLaunchProfile

-- | The launch profile ID.
--   
--   <i>See:</i> <a>newUpdateLaunchProfile</a> smart constructor.
data UpdateLaunchProfile
UpdateLaunchProfile' :: Maybe Text -> Maybe [Text] -> Maybe StreamConfigurationCreate -> Maybe Text -> Maybe Text -> Maybe (NonEmpty Text) -> Text -> Text -> UpdateLaunchProfile

-- | To make an idempotent API request using one of these actions, specify
--   a client token in the request. You should not reuse the same client
--   token for other API requests. If you retry a request that completed
--   successfully using the same client token and the same parameters, the
--   retry succeeds without performing any further actions. If you retry a
--   successful request using the same client token, but one or more of the
--   parameters are different, the retry fails with a ValidationException
--   error.
[$sel:clientToken:UpdateLaunchProfile'] :: UpdateLaunchProfile -> Maybe Text

-- | The version number of the protocol that is used by the launch profile.
--   The only valid version is "2021-03-31".
[$sel:launchProfileProtocolVersions:UpdateLaunchProfile'] :: UpdateLaunchProfile -> Maybe [Text]

-- | A configuration for a streaming session.
[$sel:streamConfiguration:UpdateLaunchProfile'] :: UpdateLaunchProfile -> Maybe StreamConfigurationCreate

-- | The name for the launch profile.
[$sel:name:UpdateLaunchProfile'] :: UpdateLaunchProfile -> Maybe Text

-- | The description.
[$sel:description:UpdateLaunchProfile'] :: UpdateLaunchProfile -> Maybe Text

-- | Unique identifiers for a collection of studio components that can be
--   used with this launch profile.
[$sel:studioComponentIds:UpdateLaunchProfile'] :: UpdateLaunchProfile -> Maybe (NonEmpty Text)

-- | The studio ID.
[$sel:studioId:UpdateLaunchProfile'] :: UpdateLaunchProfile -> Text

-- | The launch profile ID.
[$sel:launchProfileId:UpdateLaunchProfile'] :: UpdateLaunchProfile -> Text

-- | Create a value of <a>UpdateLaunchProfile</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientToken:UpdateLaunchProfile'</a>,
--   <a>updateLaunchProfile_clientToken</a> - To make an idempotent API
--   request using one of these actions, specify a client token in the
--   request. You should not reuse the same client token for other API
--   requests. If you retry a request that completed successfully using the
--   same client token and the same parameters, the retry succeeds without
--   performing any further actions. If you retry a successful request
--   using the same client token, but one or more of the parameters are
--   different, the retry fails with a ValidationException error.
--   
--   <a>$sel:launchProfileProtocolVersions:UpdateLaunchProfile'</a>,
--   <a>updateLaunchProfile_launchProfileProtocolVersions</a> - The version
--   number of the protocol that is used by the launch profile. The only
--   valid version is "2021-03-31".
--   
--   <a>$sel:streamConfiguration:UpdateLaunchProfile'</a>,
--   <a>updateLaunchProfile_streamConfiguration</a> - A configuration for a
--   streaming session.
--   
--   <a>$sel:name:UpdateLaunchProfile'</a>, <a>updateLaunchProfile_name</a>
--   - The name for the launch profile.
--   
--   <a>$sel:description:UpdateLaunchProfile'</a>,
--   <a>updateLaunchProfile_description</a> - The description.
--   
--   <a>$sel:studioComponentIds:UpdateLaunchProfile'</a>,
--   <a>updateLaunchProfile_studioComponentIds</a> - Unique identifiers for
--   a collection of studio components that can be used with this launch
--   profile.
--   
--   <a>$sel:studioId:UpdateLaunchProfile'</a>,
--   <a>updateLaunchProfile_studioId</a> - The studio ID.
--   
--   <a>$sel:launchProfileId:UpdateLaunchProfile'</a>,
--   <a>updateLaunchProfile_launchProfileId</a> - The launch profile ID.
newUpdateLaunchProfile :: Text -> Text -> UpdateLaunchProfile

-- | To make an idempotent API request using one of these actions, specify
--   a client token in the request. You should not reuse the same client
--   token for other API requests. If you retry a request that completed
--   successfully using the same client token and the same parameters, the
--   retry succeeds without performing any further actions. If you retry a
--   successful request using the same client token, but one or more of the
--   parameters are different, the retry fails with a ValidationException
--   error.
updateLaunchProfile_clientToken :: Lens' UpdateLaunchProfile (Maybe Text)

-- | The version number of the protocol that is used by the launch profile.
--   The only valid version is "2021-03-31".
updateLaunchProfile_launchProfileProtocolVersions :: Lens' UpdateLaunchProfile (Maybe [Text])

-- | A configuration for a streaming session.
updateLaunchProfile_streamConfiguration :: Lens' UpdateLaunchProfile (Maybe StreamConfigurationCreate)

-- | The name for the launch profile.
updateLaunchProfile_name :: Lens' UpdateLaunchProfile (Maybe Text)

-- | The description.
updateLaunchProfile_description :: Lens' UpdateLaunchProfile (Maybe Text)

-- | Unique identifiers for a collection of studio components that can be
--   used with this launch profile.
updateLaunchProfile_studioComponentIds :: Lens' UpdateLaunchProfile (Maybe (NonEmpty Text))

-- | The studio ID.
updateLaunchProfile_studioId :: Lens' UpdateLaunchProfile Text

-- | The launch profile ID.
updateLaunchProfile_launchProfileId :: Lens' UpdateLaunchProfile Text

-- | <i>See:</i> <a>newUpdateLaunchProfileResponse</a> smart constructor.
data UpdateLaunchProfileResponse
UpdateLaunchProfileResponse' :: Maybe LaunchProfile -> Int -> UpdateLaunchProfileResponse

-- | The launch profile.
[$sel:launchProfile:UpdateLaunchProfileResponse'] :: UpdateLaunchProfileResponse -> Maybe LaunchProfile

-- | The response's http status code.
[$sel:httpStatus:UpdateLaunchProfileResponse'] :: UpdateLaunchProfileResponse -> Int

-- | Create a value of <a>UpdateLaunchProfileResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:launchProfile:UpdateLaunchProfileResponse'</a>,
--   <a>updateLaunchProfileResponse_launchProfile</a> - The launch profile.
--   
--   <a>$sel:httpStatus:UpdateLaunchProfileResponse'</a>,
--   <a>updateLaunchProfileResponse_httpStatus</a> - The response's http
--   status code.
newUpdateLaunchProfileResponse :: Int -> UpdateLaunchProfileResponse

-- | The launch profile.
updateLaunchProfileResponse_launchProfile :: Lens' UpdateLaunchProfileResponse (Maybe LaunchProfile)

-- | The response's http status code.
updateLaunchProfileResponse_httpStatus :: Lens' UpdateLaunchProfileResponse Int
instance GHC.Generics.Generic Network.AWS.Nimble.UpdateLaunchProfile.UpdateLaunchProfile
instance GHC.Show.Show Network.AWS.Nimble.UpdateLaunchProfile.UpdateLaunchProfile
instance GHC.Read.Read Network.AWS.Nimble.UpdateLaunchProfile.UpdateLaunchProfile
instance GHC.Classes.Eq Network.AWS.Nimble.UpdateLaunchProfile.UpdateLaunchProfile
instance GHC.Generics.Generic Network.AWS.Nimble.UpdateLaunchProfile.UpdateLaunchProfileResponse
instance GHC.Show.Show Network.AWS.Nimble.UpdateLaunchProfile.UpdateLaunchProfileResponse
instance GHC.Read.Read Network.AWS.Nimble.UpdateLaunchProfile.UpdateLaunchProfileResponse
instance GHC.Classes.Eq Network.AWS.Nimble.UpdateLaunchProfile.UpdateLaunchProfileResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Nimble.UpdateLaunchProfile.UpdateLaunchProfile
instance Control.DeepSeq.NFData Network.AWS.Nimble.UpdateLaunchProfile.UpdateLaunchProfileResponse
instance Data.Hashable.Class.Hashable Network.AWS.Nimble.UpdateLaunchProfile.UpdateLaunchProfile
instance Control.DeepSeq.NFData Network.AWS.Nimble.UpdateLaunchProfile.UpdateLaunchProfile
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Nimble.UpdateLaunchProfile.UpdateLaunchProfile
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Nimble.UpdateLaunchProfile.UpdateLaunchProfile
instance Network.AWS.Data.Path.ToPath Network.AWS.Nimble.UpdateLaunchProfile.UpdateLaunchProfile
instance Network.AWS.Data.Query.ToQuery Network.AWS.Nimble.UpdateLaunchProfile.UpdateLaunchProfile


-- | Update a user persona in launch profile membership.
module Network.AWS.Nimble.UpdateLaunchProfileMember

-- | The principal ID.
--   
--   <i>See:</i> <a>newUpdateLaunchProfileMember</a> smart constructor.
data UpdateLaunchProfileMember
UpdateLaunchProfileMember' :: Maybe Text -> Text -> LaunchProfilePersona -> Text -> Text -> UpdateLaunchProfileMember

-- | To make an idempotent API request using one of these actions, specify
--   a client token in the request. You should not reuse the same client
--   token for other API requests. If you retry a request that completed
--   successfully using the same client token and the same parameters, the
--   retry succeeds without performing any further actions. If you retry a
--   successful request using the same client token, but one or more of the
--   parameters are different, the retry fails with a ValidationException
--   error.
[$sel:clientToken:UpdateLaunchProfileMember'] :: UpdateLaunchProfileMember -> Maybe Text

-- | The studio ID.
[$sel:studioId:UpdateLaunchProfileMember'] :: UpdateLaunchProfileMember -> Text

-- | The persona.
[$sel:persona:UpdateLaunchProfileMember'] :: UpdateLaunchProfileMember -> LaunchProfilePersona

-- | The principal ID.
[$sel:principalId:UpdateLaunchProfileMember'] :: UpdateLaunchProfileMember -> Text

-- | The launch profile ID.
[$sel:launchProfileId:UpdateLaunchProfileMember'] :: UpdateLaunchProfileMember -> Text

-- | Create a value of <a>UpdateLaunchProfileMember</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientToken:UpdateLaunchProfileMember'</a>,
--   <a>updateLaunchProfileMember_clientToken</a> - To make an idempotent
--   API request using one of these actions, specify a client token in the
--   request. You should not reuse the same client token for other API
--   requests. If you retry a request that completed successfully using the
--   same client token and the same parameters, the retry succeeds without
--   performing any further actions. If you retry a successful request
--   using the same client token, but one or more of the parameters are
--   different, the retry fails with a ValidationException error.
--   
--   <a>$sel:studioId:UpdateLaunchProfileMember'</a>,
--   <a>updateLaunchProfileMember_studioId</a> - The studio ID.
--   
--   <a>$sel:persona:UpdateLaunchProfileMember'</a>,
--   <a>updateLaunchProfileMember_persona</a> - The persona.
--   
--   <a>$sel:principalId:UpdateLaunchProfileMember'</a>,
--   <a>updateLaunchProfileMember_principalId</a> - The principal ID.
--   
--   <a>$sel:launchProfileId:UpdateLaunchProfileMember'</a>,
--   <a>updateLaunchProfileMember_launchProfileId</a> - The launch profile
--   ID.
newUpdateLaunchProfileMember :: Text -> LaunchProfilePersona -> Text -> Text -> UpdateLaunchProfileMember

-- | To make an idempotent API request using one of these actions, specify
--   a client token in the request. You should not reuse the same client
--   token for other API requests. If you retry a request that completed
--   successfully using the same client token and the same parameters, the
--   retry succeeds without performing any further actions. If you retry a
--   successful request using the same client token, but one or more of the
--   parameters are different, the retry fails with a ValidationException
--   error.
updateLaunchProfileMember_clientToken :: Lens' UpdateLaunchProfileMember (Maybe Text)

-- | The studio ID.
updateLaunchProfileMember_studioId :: Lens' UpdateLaunchProfileMember Text

-- | The persona.
updateLaunchProfileMember_persona :: Lens' UpdateLaunchProfileMember LaunchProfilePersona

-- | The principal ID.
updateLaunchProfileMember_principalId :: Lens' UpdateLaunchProfileMember Text

-- | The launch profile ID.
updateLaunchProfileMember_launchProfileId :: Lens' UpdateLaunchProfileMember Text

-- | <i>See:</i> <a>newUpdateLaunchProfileMemberResponse</a> smart
--   constructor.
data UpdateLaunchProfileMemberResponse
UpdateLaunchProfileMemberResponse' :: Maybe LaunchProfileMembership -> Int -> UpdateLaunchProfileMemberResponse

-- | The member.
[$sel:member:UpdateLaunchProfileMemberResponse'] :: UpdateLaunchProfileMemberResponse -> Maybe LaunchProfileMembership

-- | The response's http status code.
[$sel:httpStatus:UpdateLaunchProfileMemberResponse'] :: UpdateLaunchProfileMemberResponse -> Int

-- | Create a value of <a>UpdateLaunchProfileMemberResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:member:UpdateLaunchProfileMemberResponse'</a>,
--   <a>updateLaunchProfileMemberResponse_member</a> - The member.
--   
--   <a>$sel:httpStatus:UpdateLaunchProfileMemberResponse'</a>,
--   <a>updateLaunchProfileMemberResponse_httpStatus</a> - The response's
--   http status code.
newUpdateLaunchProfileMemberResponse :: Int -> UpdateLaunchProfileMemberResponse

-- | The member.
updateLaunchProfileMemberResponse_member :: Lens' UpdateLaunchProfileMemberResponse (Maybe LaunchProfileMembership)

-- | The response's http status code.
updateLaunchProfileMemberResponse_httpStatus :: Lens' UpdateLaunchProfileMemberResponse Int
instance GHC.Generics.Generic Network.AWS.Nimble.UpdateLaunchProfileMember.UpdateLaunchProfileMember
instance GHC.Show.Show Network.AWS.Nimble.UpdateLaunchProfileMember.UpdateLaunchProfileMember
instance GHC.Read.Read Network.AWS.Nimble.UpdateLaunchProfileMember.UpdateLaunchProfileMember
instance GHC.Classes.Eq Network.AWS.Nimble.UpdateLaunchProfileMember.UpdateLaunchProfileMember
instance GHC.Generics.Generic Network.AWS.Nimble.UpdateLaunchProfileMember.UpdateLaunchProfileMemberResponse
instance GHC.Show.Show Network.AWS.Nimble.UpdateLaunchProfileMember.UpdateLaunchProfileMemberResponse
instance GHC.Read.Read Network.AWS.Nimble.UpdateLaunchProfileMember.UpdateLaunchProfileMemberResponse
instance GHC.Classes.Eq Network.AWS.Nimble.UpdateLaunchProfileMember.UpdateLaunchProfileMemberResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Nimble.UpdateLaunchProfileMember.UpdateLaunchProfileMember
instance Control.DeepSeq.NFData Network.AWS.Nimble.UpdateLaunchProfileMember.UpdateLaunchProfileMemberResponse
instance Data.Hashable.Class.Hashable Network.AWS.Nimble.UpdateLaunchProfileMember.UpdateLaunchProfileMember
instance Control.DeepSeq.NFData Network.AWS.Nimble.UpdateLaunchProfileMember.UpdateLaunchProfileMember
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Nimble.UpdateLaunchProfileMember.UpdateLaunchProfileMember
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Nimble.UpdateLaunchProfileMember.UpdateLaunchProfileMember
instance Network.AWS.Data.Path.ToPath Network.AWS.Nimble.UpdateLaunchProfileMember.UpdateLaunchProfileMember
instance Network.AWS.Data.Query.ToQuery Network.AWS.Nimble.UpdateLaunchProfileMember.UpdateLaunchProfileMember


-- | Update streaming image.
module Network.AWS.Nimble.UpdateStreamingImage

-- | The streaming image ID.
--   
--   <i>See:</i> <a>newUpdateStreamingImage</a> smart constructor.
data UpdateStreamingImage
UpdateStreamingImage' :: Maybe Text -> Maybe Text -> Maybe Text -> Text -> Text -> UpdateStreamingImage

-- | To make an idempotent API request using one of these actions, specify
--   a client token in the request. You should not reuse the same client
--   token for other API requests. If you retry a request that completed
--   successfully using the same client token and the same parameters, the
--   retry succeeds without performing any further actions. If you retry a
--   successful request using the same client token, but one or more of the
--   parameters are different, the retry fails with a ValidationException
--   error.
[$sel:clientToken:UpdateStreamingImage'] :: UpdateStreamingImage -> Maybe Text

-- | The name for the streaming image.
[$sel:name:UpdateStreamingImage'] :: UpdateStreamingImage -> Maybe Text

-- | The description.
[$sel:description:UpdateStreamingImage'] :: UpdateStreamingImage -> Maybe Text

-- | The studio ID.
[$sel:studioId:UpdateStreamingImage'] :: UpdateStreamingImage -> Text

-- | The streaming image ID.
[$sel:streamingImageId:UpdateStreamingImage'] :: UpdateStreamingImage -> Text

-- | Create a value of <a>UpdateStreamingImage</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientToken:UpdateStreamingImage'</a>,
--   <a>updateStreamingImage_clientToken</a> - To make an idempotent API
--   request using one of these actions, specify a client token in the
--   request. You should not reuse the same client token for other API
--   requests. If you retry a request that completed successfully using the
--   same client token and the same parameters, the retry succeeds without
--   performing any further actions. If you retry a successful request
--   using the same client token, but one or more of the parameters are
--   different, the retry fails with a ValidationException error.
--   
--   <a>$sel:name:UpdateStreamingImage'</a>,
--   <a>updateStreamingImage_name</a> - The name for the streaming image.
--   
--   <a>$sel:description:UpdateStreamingImage'</a>,
--   <a>updateStreamingImage_description</a> - The description.
--   
--   <a>$sel:studioId:UpdateStreamingImage'</a>,
--   <a>updateStreamingImage_studioId</a> - The studio ID.
--   
--   <a>$sel:streamingImageId:UpdateStreamingImage'</a>,
--   <a>updateStreamingImage_streamingImageId</a> - The streaming image ID.
newUpdateStreamingImage :: Text -> Text -> UpdateStreamingImage

-- | To make an idempotent API request using one of these actions, specify
--   a client token in the request. You should not reuse the same client
--   token for other API requests. If you retry a request that completed
--   successfully using the same client token and the same parameters, the
--   retry succeeds without performing any further actions. If you retry a
--   successful request using the same client token, but one or more of the
--   parameters are different, the retry fails with a ValidationException
--   error.
updateStreamingImage_clientToken :: Lens' UpdateStreamingImage (Maybe Text)

-- | The name for the streaming image.
updateStreamingImage_name :: Lens' UpdateStreamingImage (Maybe Text)

-- | The description.
updateStreamingImage_description :: Lens' UpdateStreamingImage (Maybe Text)

-- | The studio ID.
updateStreamingImage_studioId :: Lens' UpdateStreamingImage Text

-- | The streaming image ID.
updateStreamingImage_streamingImageId :: Lens' UpdateStreamingImage Text

-- | <i>See:</i> <a>newUpdateStreamingImageResponse</a> smart constructor.
data UpdateStreamingImageResponse
UpdateStreamingImageResponse' :: Maybe StreamingImage -> Int -> UpdateStreamingImageResponse
[$sel:streamingImage:UpdateStreamingImageResponse'] :: UpdateStreamingImageResponse -> Maybe StreamingImage

-- | The response's http status code.
[$sel:httpStatus:UpdateStreamingImageResponse'] :: UpdateStreamingImageResponse -> Int

-- | Create a value of <a>UpdateStreamingImageResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:streamingImage:UpdateStreamingImageResponse'</a>,
--   <a>updateStreamingImageResponse_streamingImage</a> -
--   
--   <a>$sel:httpStatus:UpdateStreamingImageResponse'</a>,
--   <a>updateStreamingImageResponse_httpStatus</a> - The response's http
--   status code.
newUpdateStreamingImageResponse :: Int -> UpdateStreamingImageResponse

updateStreamingImageResponse_streamingImage :: Lens' UpdateStreamingImageResponse (Maybe StreamingImage)

-- | The response's http status code.
updateStreamingImageResponse_httpStatus :: Lens' UpdateStreamingImageResponse Int
instance GHC.Generics.Generic Network.AWS.Nimble.UpdateStreamingImage.UpdateStreamingImage
instance GHC.Show.Show Network.AWS.Nimble.UpdateStreamingImage.UpdateStreamingImage
instance GHC.Read.Read Network.AWS.Nimble.UpdateStreamingImage.UpdateStreamingImage
instance GHC.Classes.Eq Network.AWS.Nimble.UpdateStreamingImage.UpdateStreamingImage
instance GHC.Generics.Generic Network.AWS.Nimble.UpdateStreamingImage.UpdateStreamingImageResponse
instance GHC.Show.Show Network.AWS.Nimble.UpdateStreamingImage.UpdateStreamingImageResponse
instance GHC.Read.Read Network.AWS.Nimble.UpdateStreamingImage.UpdateStreamingImageResponse
instance GHC.Classes.Eq Network.AWS.Nimble.UpdateStreamingImage.UpdateStreamingImageResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Nimble.UpdateStreamingImage.UpdateStreamingImage
instance Control.DeepSeq.NFData Network.AWS.Nimble.UpdateStreamingImage.UpdateStreamingImageResponse
instance Data.Hashable.Class.Hashable Network.AWS.Nimble.UpdateStreamingImage.UpdateStreamingImage
instance Control.DeepSeq.NFData Network.AWS.Nimble.UpdateStreamingImage.UpdateStreamingImage
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Nimble.UpdateStreamingImage.UpdateStreamingImage
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Nimble.UpdateStreamingImage.UpdateStreamingImage
instance Network.AWS.Data.Path.ToPath Network.AWS.Nimble.UpdateStreamingImage.UpdateStreamingImage
instance Network.AWS.Data.Query.ToQuery Network.AWS.Nimble.UpdateStreamingImage.UpdateStreamingImage


-- | Update a Studio resource.
--   
--   Currently, this operation only supports updating the displayName of
--   your studio.
module Network.AWS.Nimble.UpdateStudio

-- | The studio ID.
--   
--   <i>See:</i> <a>newUpdateStudio</a> smart constructor.
data UpdateStudio
UpdateStudio' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Text -> UpdateStudio

-- | To make an idempotent API request using one of these actions, specify
--   a client token in the request. You should not reuse the same client
--   token for other API requests. If you retry a request that completed
--   successfully using the same client token and the same parameters, the
--   retry succeeds without performing any further actions. If you retry a
--   successful request using the same client token, but one or more of the
--   parameters are different, the retry fails with a ValidationException
--   error.
[$sel:clientToken:UpdateStudio'] :: UpdateStudio -> Maybe Text

-- | The IAM role that Studio Users will assume when logging in to the
--   Nimble Studio portal.
[$sel:userRoleArn:UpdateStudio'] :: UpdateStudio -> Maybe Text

-- | A friendly name for the studio.
[$sel:displayName:UpdateStudio'] :: UpdateStudio -> Maybe Text

-- | The IAM role that Studio Admins will assume when logging in to the
--   Nimble Studio portal.
[$sel:adminRoleArn:UpdateStudio'] :: UpdateStudio -> Maybe Text

-- | The studio ID.
[$sel:studioId:UpdateStudio'] :: UpdateStudio -> Text

-- | Create a value of <a>UpdateStudio</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientToken:UpdateStudio'</a>, <a>updateStudio_clientToken</a>
--   - To make an idempotent API request using one of these actions,
--   specify a client token in the request. You should not reuse the same
--   client token for other API requests. If you retry a request that
--   completed successfully using the same client token and the same
--   parameters, the retry succeeds without performing any further actions.
--   If you retry a successful request using the same client token, but one
--   or more of the parameters are different, the retry fails with a
--   ValidationException error.
--   
--   <a>$sel:userRoleArn:UpdateStudio'</a>, <a>updateStudio_userRoleArn</a>
--   - The IAM role that Studio Users will assume when logging in to the
--   Nimble Studio portal.
--   
--   <a>$sel:displayName:UpdateStudio'</a>, <a>updateStudio_displayName</a>
--   - A friendly name for the studio.
--   
--   <a>$sel:adminRoleArn:UpdateStudio'</a>,
--   <a>updateStudio_adminRoleArn</a> - The IAM role that Studio Admins
--   will assume when logging in to the Nimble Studio portal.
--   
--   <a>$sel:studioId:UpdateStudio'</a>, <a>updateStudio_studioId</a> - The
--   studio ID.
newUpdateStudio :: Text -> UpdateStudio

-- | To make an idempotent API request using one of these actions, specify
--   a client token in the request. You should not reuse the same client
--   token for other API requests. If you retry a request that completed
--   successfully using the same client token and the same parameters, the
--   retry succeeds without performing any further actions. If you retry a
--   successful request using the same client token, but one or more of the
--   parameters are different, the retry fails with a ValidationException
--   error.
updateStudio_clientToken :: Lens' UpdateStudio (Maybe Text)

-- | The IAM role that Studio Users will assume when logging in to the
--   Nimble Studio portal.
updateStudio_userRoleArn :: Lens' UpdateStudio (Maybe Text)

-- | A friendly name for the studio.
updateStudio_displayName :: Lens' UpdateStudio (Maybe Text)

-- | The IAM role that Studio Admins will assume when logging in to the
--   Nimble Studio portal.
updateStudio_adminRoleArn :: Lens' UpdateStudio (Maybe Text)

-- | The studio ID.
updateStudio_studioId :: Lens' UpdateStudio Text

-- | <i>See:</i> <a>newUpdateStudioResponse</a> smart constructor.
data UpdateStudioResponse
UpdateStudioResponse' :: Maybe Studio -> Int -> UpdateStudioResponse

-- | Information about a studio.
[$sel:studio:UpdateStudioResponse'] :: UpdateStudioResponse -> Maybe Studio

-- | The response's http status code.
[$sel:httpStatus:UpdateStudioResponse'] :: UpdateStudioResponse -> Int

-- | Create a value of <a>UpdateStudioResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:studio:UpdateStudioResponse'</a>,
--   <a>updateStudioResponse_studio</a> - Information about a studio.
--   
--   <a>$sel:httpStatus:UpdateStudioResponse'</a>,
--   <a>updateStudioResponse_httpStatus</a> - The response's http status
--   code.
newUpdateStudioResponse :: Int -> UpdateStudioResponse

-- | Information about a studio.
updateStudioResponse_studio :: Lens' UpdateStudioResponse (Maybe Studio)

-- | The response's http status code.
updateStudioResponse_httpStatus :: Lens' UpdateStudioResponse Int
instance GHC.Generics.Generic Network.AWS.Nimble.UpdateStudio.UpdateStudio
instance GHC.Show.Show Network.AWS.Nimble.UpdateStudio.UpdateStudio
instance GHC.Read.Read Network.AWS.Nimble.UpdateStudio.UpdateStudio
instance GHC.Classes.Eq Network.AWS.Nimble.UpdateStudio.UpdateStudio
instance GHC.Generics.Generic Network.AWS.Nimble.UpdateStudio.UpdateStudioResponse
instance GHC.Show.Show Network.AWS.Nimble.UpdateStudio.UpdateStudioResponse
instance GHC.Read.Read Network.AWS.Nimble.UpdateStudio.UpdateStudioResponse
instance GHC.Classes.Eq Network.AWS.Nimble.UpdateStudio.UpdateStudioResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Nimble.UpdateStudio.UpdateStudio
instance Control.DeepSeq.NFData Network.AWS.Nimble.UpdateStudio.UpdateStudioResponse
instance Data.Hashable.Class.Hashable Network.AWS.Nimble.UpdateStudio.UpdateStudio
instance Control.DeepSeq.NFData Network.AWS.Nimble.UpdateStudio.UpdateStudio
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Nimble.UpdateStudio.UpdateStudio
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Nimble.UpdateStudio.UpdateStudio
instance Network.AWS.Data.Path.ToPath Network.AWS.Nimble.UpdateStudio.UpdateStudio
instance Network.AWS.Data.Query.ToQuery Network.AWS.Nimble.UpdateStudio.UpdateStudio


-- | Updates a studio component resource.
module Network.AWS.Nimble.UpdateStudioComponent

-- | The studio component ID.
--   
--   <i>See:</i> <a>newUpdateStudioComponent</a> smart constructor.
data UpdateStudioComponent
UpdateStudioComponent' :: Maybe [StudioComponentInitializationScript] -> Maybe Text -> Maybe (NonEmpty Text) -> Maybe StudioComponentSubtype -> Maybe Text -> Maybe [ScriptParameterKeyValue] -> Maybe StudioComponentType -> Maybe StudioComponentConfiguration -> Maybe Text -> Text -> Text -> UpdateStudioComponent

-- | Initialization scripts for studio components.
[$sel:initializationScripts:UpdateStudioComponent'] :: UpdateStudioComponent -> Maybe [StudioComponentInitializationScript]

-- | To make an idempotent API request using one of these actions, specify
--   a client token in the request. You should not reuse the same client
--   token for other API requests. If you retry a request that completed
--   successfully using the same client token and the same parameters, the
--   retry succeeds without performing any further actions. If you retry a
--   successful request using the same client token, but one or more of the
--   parameters are different, the retry fails with a ValidationException
--   error.
[$sel:clientToken:UpdateStudioComponent'] :: UpdateStudioComponent -> Maybe Text

-- | The EC2 security groups that control access to the studio component.
[$sel:ec2SecurityGroupIds:UpdateStudioComponent'] :: UpdateStudioComponent -> Maybe (NonEmpty Text)

-- | The specific subtype of a studio component.
[$sel:subtype:UpdateStudioComponent'] :: UpdateStudioComponent -> Maybe StudioComponentSubtype

-- | The name for the studio component.
[$sel:name:UpdateStudioComponent'] :: UpdateStudioComponent -> Maybe Text

-- | Parameters for the studio component scripts.
[$sel:scriptParameters:UpdateStudioComponent'] :: UpdateStudioComponent -> Maybe [ScriptParameterKeyValue]

-- | The type of the studio component.
[$sel:type':UpdateStudioComponent'] :: UpdateStudioComponent -> Maybe StudioComponentType

-- | The configuration of the studio component, based on component type.
[$sel:configuration:UpdateStudioComponent'] :: UpdateStudioComponent -> Maybe StudioComponentConfiguration

-- | The description.
[$sel:description:UpdateStudioComponent'] :: UpdateStudioComponent -> Maybe Text

-- | The studio ID.
[$sel:studioId:UpdateStudioComponent'] :: UpdateStudioComponent -> Text

-- | The studio component ID.
[$sel:studioComponentId:UpdateStudioComponent'] :: UpdateStudioComponent -> Text

-- | Create a value of <a>UpdateStudioComponent</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:initializationScripts:UpdateStudioComponent'</a>,
--   <a>updateStudioComponent_initializationScripts</a> - Initialization
--   scripts for studio components.
--   
--   <a>$sel:clientToken:UpdateStudioComponent'</a>,
--   <a>updateStudioComponent_clientToken</a> - To make an idempotent API
--   request using one of these actions, specify a client token in the
--   request. You should not reuse the same client token for other API
--   requests. If you retry a request that completed successfully using the
--   same client token and the same parameters, the retry succeeds without
--   performing any further actions. If you retry a successful request
--   using the same client token, but one or more of the parameters are
--   different, the retry fails with a ValidationException error.
--   
--   <a>$sel:ec2SecurityGroupIds:UpdateStudioComponent'</a>,
--   <a>updateStudioComponent_ec2SecurityGroupIds</a> - The EC2 security
--   groups that control access to the studio component.
--   
--   <a>$sel:subtype:UpdateStudioComponent'</a>,
--   <a>updateStudioComponent_subtype</a> - The specific subtype of a
--   studio component.
--   
--   <a>$sel:name:UpdateStudioComponent'</a>,
--   <a>updateStudioComponent_name</a> - The name for the studio component.
--   
--   <a>$sel:scriptParameters:UpdateStudioComponent'</a>,
--   <a>updateStudioComponent_scriptParameters</a> - Parameters for the
--   studio component scripts.
--   
--   <a>$sel:type':UpdateStudioComponent'</a>,
--   <a>updateStudioComponent_type</a> - The type of the studio component.
--   
--   <a>$sel:configuration:UpdateStudioComponent'</a>,
--   <a>updateStudioComponent_configuration</a> - The configuration of the
--   studio component, based on component type.
--   
--   <a>$sel:description:UpdateStudioComponent'</a>,
--   <a>updateStudioComponent_description</a> - The description.
--   
--   <a>$sel:studioId:UpdateStudioComponent'</a>,
--   <a>updateStudioComponent_studioId</a> - The studio ID.
--   
--   <a>$sel:studioComponentId:UpdateStudioComponent'</a>,
--   <a>updateStudioComponent_studioComponentId</a> - The studio component
--   ID.
newUpdateStudioComponent :: Text -> Text -> UpdateStudioComponent

-- | Initialization scripts for studio components.
updateStudioComponent_initializationScripts :: Lens' UpdateStudioComponent (Maybe [StudioComponentInitializationScript])

-- | To make an idempotent API request using one of these actions, specify
--   a client token in the request. You should not reuse the same client
--   token for other API requests. If you retry a request that completed
--   successfully using the same client token and the same parameters, the
--   retry succeeds without performing any further actions. If you retry a
--   successful request using the same client token, but one or more of the
--   parameters are different, the retry fails with a ValidationException
--   error.
updateStudioComponent_clientToken :: Lens' UpdateStudioComponent (Maybe Text)

-- | The EC2 security groups that control access to the studio component.
updateStudioComponent_ec2SecurityGroupIds :: Lens' UpdateStudioComponent (Maybe (NonEmpty Text))

-- | The specific subtype of a studio component.
updateStudioComponent_subtype :: Lens' UpdateStudioComponent (Maybe StudioComponentSubtype)

-- | The name for the studio component.
updateStudioComponent_name :: Lens' UpdateStudioComponent (Maybe Text)

-- | Parameters for the studio component scripts.
updateStudioComponent_scriptParameters :: Lens' UpdateStudioComponent (Maybe [ScriptParameterKeyValue])

-- | The type of the studio component.
updateStudioComponent_type :: Lens' UpdateStudioComponent (Maybe StudioComponentType)

-- | The configuration of the studio component, based on component type.
updateStudioComponent_configuration :: Lens' UpdateStudioComponent (Maybe StudioComponentConfiguration)

-- | The description.
updateStudioComponent_description :: Lens' UpdateStudioComponent (Maybe Text)

-- | The studio ID.
updateStudioComponent_studioId :: Lens' UpdateStudioComponent Text

-- | The studio component ID.
updateStudioComponent_studioComponentId :: Lens' UpdateStudioComponent Text

-- | <i>See:</i> <a>newUpdateStudioComponentResponse</a> smart constructor.
data UpdateStudioComponentResponse
UpdateStudioComponentResponse' :: Maybe StudioComponent -> Int -> UpdateStudioComponentResponse

-- | Information about the studio component.
[$sel:studioComponent:UpdateStudioComponentResponse'] :: UpdateStudioComponentResponse -> Maybe StudioComponent

-- | The response's http status code.
[$sel:httpStatus:UpdateStudioComponentResponse'] :: UpdateStudioComponentResponse -> Int

-- | Create a value of <a>UpdateStudioComponentResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:studioComponent:UpdateStudioComponentResponse'</a>,
--   <a>updateStudioComponentResponse_studioComponent</a> - Information
--   about the studio component.
--   
--   <a>$sel:httpStatus:UpdateStudioComponentResponse'</a>,
--   <a>updateStudioComponentResponse_httpStatus</a> - The response's http
--   status code.
newUpdateStudioComponentResponse :: Int -> UpdateStudioComponentResponse

-- | Information about the studio component.
updateStudioComponentResponse_studioComponent :: Lens' UpdateStudioComponentResponse (Maybe StudioComponent)

-- | The response's http status code.
updateStudioComponentResponse_httpStatus :: Lens' UpdateStudioComponentResponse Int
instance GHC.Generics.Generic Network.AWS.Nimble.UpdateStudioComponent.UpdateStudioComponent
instance GHC.Show.Show Network.AWS.Nimble.UpdateStudioComponent.UpdateStudioComponent
instance GHC.Read.Read Network.AWS.Nimble.UpdateStudioComponent.UpdateStudioComponent
instance GHC.Classes.Eq Network.AWS.Nimble.UpdateStudioComponent.UpdateStudioComponent
instance GHC.Generics.Generic Network.AWS.Nimble.UpdateStudioComponent.UpdateStudioComponentResponse
instance GHC.Show.Show Network.AWS.Nimble.UpdateStudioComponent.UpdateStudioComponentResponse
instance GHC.Read.Read Network.AWS.Nimble.UpdateStudioComponent.UpdateStudioComponentResponse
instance GHC.Classes.Eq Network.AWS.Nimble.UpdateStudioComponent.UpdateStudioComponentResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Nimble.UpdateStudioComponent.UpdateStudioComponent
instance Control.DeepSeq.NFData Network.AWS.Nimble.UpdateStudioComponent.UpdateStudioComponentResponse
instance Data.Hashable.Class.Hashable Network.AWS.Nimble.UpdateStudioComponent.UpdateStudioComponent
instance Control.DeepSeq.NFData Network.AWS.Nimble.UpdateStudioComponent.UpdateStudioComponent
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Nimble.UpdateStudioComponent.UpdateStudioComponent
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Nimble.UpdateStudioComponent.UpdateStudioComponent
instance Network.AWS.Data.Path.ToPath Network.AWS.Nimble.UpdateStudioComponent.UpdateStudioComponent
instance Network.AWS.Data.Query.ToQuery Network.AWS.Nimble.UpdateStudioComponent.UpdateStudioComponent


module Network.AWS.Nimble.Lens

-- | To make an idempotent API request using one of these actions, specify
--   a client token in the request. You should not reuse the same client
--   token for other API requests. If you retry a request that completed
--   successfully using the same client token and the same parameters, the
--   retry succeeds without performing any further actions. If you retry a
--   successful request using the same client token, but one or more of the
--   parameters are different, the retry fails with a ValidationException
--   error.
putLaunchProfileMembers_clientToken :: Lens' PutLaunchProfileMembers (Maybe Text)

-- | The studio ID.
putLaunchProfileMembers_studioId :: Lens' PutLaunchProfileMembers Text

-- | A list of members.
putLaunchProfileMembers_members :: Lens' PutLaunchProfileMembers (NonEmpty NewLaunchProfileMember)

-- | The launch profile ID.
putLaunchProfileMembers_launchProfileId :: Lens' PutLaunchProfileMembers Text

-- | The ID of the identity store.
putLaunchProfileMembers_identityStoreId :: Lens' PutLaunchProfileMembers Text

-- | The response's http status code.
putLaunchProfileMembersResponse_httpStatus :: Lens' PutLaunchProfileMembersResponse Int

-- | The studio encryption configuration.
createStudio_studioEncryptionConfiguration :: Lens' CreateStudio (Maybe StudioEncryptionConfiguration)

-- | To make an idempotent API request using one of these actions, specify
--   a client token in the request. You should not reuse the same client
--   token for other API requests. If you retry a request that completed
--   successfully using the same client token and the same parameters, the
--   retry succeeds without performing any further actions. If you retry a
--   successful request using the same client token, but one or more of the
--   parameters are different, the retry fails with a ValidationException
--   error.
createStudio_clientToken :: Lens' CreateStudio (Maybe Text)

-- | A collection of labels, in the form of key:value pairs, that apply to
--   this resource.
createStudio_tags :: Lens' CreateStudio (Maybe (HashMap Text Text))

-- | A friendly name for the studio.
createStudio_displayName :: Lens' CreateStudio Text

-- | The studio name that is used in the URL of the Nimble Studio portal
--   when accessed by Nimble Studio users.
createStudio_studioName :: Lens' CreateStudio Text

-- | The IAM role that Studio Users will assume when logging in to the
--   Nimble Studio portal.
createStudio_userRoleArn :: Lens' CreateStudio Text

-- | The IAM role that Studio Admins will assume when logging in to the
--   Nimble Studio portal.
createStudio_adminRoleArn :: Lens' CreateStudio Text

-- | Information about a studio.
createStudioResponse_studio :: Lens' CreateStudioResponse (Maybe Studio)

-- | The response's http status code.
createStudioResponse_httpStatus :: Lens' CreateStudioResponse Int

-- | To make an idempotent API request using one of these actions, specify
--   a client token in the request. You should not reuse the same client
--   token for other API requests. If you retry a request that completed
--   successfully using the same client token and the same parameters, the
--   retry succeeds without performing any further actions. If you retry a
--   successful request using the same client token, but one or more of the
--   parameters are different, the retry fails with a ValidationException
--   error.
updateLaunchProfileMember_clientToken :: Lens' UpdateLaunchProfileMember (Maybe Text)

-- | The studio ID.
updateLaunchProfileMember_studioId :: Lens' UpdateLaunchProfileMember Text

-- | The persona.
updateLaunchProfileMember_persona :: Lens' UpdateLaunchProfileMember LaunchProfilePersona

-- | The principal ID.
updateLaunchProfileMember_principalId :: Lens' UpdateLaunchProfileMember Text

-- | The launch profile ID.
updateLaunchProfileMember_launchProfileId :: Lens' UpdateLaunchProfileMember Text

-- | The member.
updateLaunchProfileMemberResponse_member :: Lens' UpdateLaunchProfileMemberResponse (Maybe LaunchProfileMembership)

-- | The response's http status code.
updateLaunchProfileMemberResponse_httpStatus :: Lens' UpdateLaunchProfileMemberResponse Int

-- | To make an idempotent API request using one of these actions, specify
--   a client token in the request. You should not reuse the same client
--   token for other API requests. If you retry a request that completed
--   successfully using the same client token and the same parameters, the
--   retry succeeds without performing any further actions. If you retry a
--   successful request using the same client token, but one or more of the
--   parameters are different, the retry fails with a ValidationException
--   error.
deleteLaunchProfileMember_clientToken :: Lens' DeleteLaunchProfileMember (Maybe Text)

-- | The studio ID.
deleteLaunchProfileMember_studioId :: Lens' DeleteLaunchProfileMember Text

-- | The principal ID.
deleteLaunchProfileMember_principalId :: Lens' DeleteLaunchProfileMember Text

-- | The launch profile ID.
deleteLaunchProfileMember_launchProfileId :: Lens' DeleteLaunchProfileMember Text

-- | The response's http status code.
deleteLaunchProfileMemberResponse_httpStatus :: Lens' DeleteLaunchProfileMemberResponse Int

-- | A list of states.
listLaunchProfiles_states :: Lens' ListLaunchProfiles (Maybe [Text])

-- | The principal ID.
listLaunchProfiles_principalId :: Lens' ListLaunchProfiles (Maybe Text)

-- | The token for the next set of results, or null if there are no more
--   results.
listLaunchProfiles_nextToken :: Lens' ListLaunchProfiles (Maybe Text)

-- | The maximum number of results to be returned per request.
listLaunchProfiles_maxResults :: Lens' ListLaunchProfiles (Maybe Natural)

-- | The studio ID.
listLaunchProfiles_studioId :: Lens' ListLaunchProfiles Text

-- | A collection of launch profiles.
listLaunchProfilesResponse_launchProfiles :: Lens' ListLaunchProfilesResponse (Maybe [LaunchProfile])

-- | The token for the next set of results, or null if there are no more
--   results.
listLaunchProfilesResponse_nextToken :: Lens' ListLaunchProfilesResponse (Maybe Text)

-- | The response's http status code.
listLaunchProfilesResponse_httpStatus :: Lens' ListLaunchProfilesResponse Int

-- | To make an idempotent API request using one of these actions, specify
--   a client token in the request. You should not reuse the same client
--   token for other API requests. If you retry a request that completed
--   successfully using the same client token and the same parameters, the
--   retry succeeds without performing any further actions. If you retry a
--   successful request using the same client token, but one or more of the
--   parameters are different, the retry fails with a ValidationException
--   error.
createLaunchProfile_clientToken :: Lens' CreateLaunchProfile (Maybe Text)

-- | The description.
createLaunchProfile_description :: Lens' CreateLaunchProfile (Maybe Text)

-- | A collection of labels, in the form of key:value pairs, that apply to
--   this resource.
createLaunchProfile_tags :: Lens' CreateLaunchProfile (Maybe (HashMap Text Text))

createLaunchProfile_ec2SubnetIds :: Lens' CreateLaunchProfile [Text]

-- | Unique identifiers for a collection of studio components that can be
--   used with this launch profile.
createLaunchProfile_studioComponentIds :: Lens' CreateLaunchProfile (NonEmpty Text)

-- | The studio ID.
createLaunchProfile_studioId :: Lens' CreateLaunchProfile Text

-- | The version number of the protocol that is used by the launch profile.
--   The only valid version is "2021-03-31".
createLaunchProfile_launchProfileProtocolVersions :: Lens' CreateLaunchProfile [Text]

-- | The name for the launch profile.
createLaunchProfile_name :: Lens' CreateLaunchProfile Text

-- | A configuration for a streaming session.
createLaunchProfile_streamConfiguration :: Lens' CreateLaunchProfile StreamConfigurationCreate

-- | The launch profile.
createLaunchProfileResponse_launchProfile :: Lens' CreateLaunchProfileResponse (Maybe LaunchProfile)

-- | The response's http status code.
createLaunchProfileResponse_httpStatus :: Lens' CreateLaunchProfileResponse Int

-- | The owner.
listStreamingImages_owner :: Lens' ListStreamingImages (Maybe Text)

-- | The token for the next set of results, or null if there are no more
--   results.
listStreamingImages_nextToken :: Lens' ListStreamingImages (Maybe Text)

-- | The studio ID.
listStreamingImages_studioId :: Lens' ListStreamingImages Text

-- | A collection of streaming images.
listStreamingImagesResponse_streamingImages :: Lens' ListStreamingImagesResponse (Maybe [StreamingImage])

-- | The token for the next set of results, or null if there are no more
--   results.
listStreamingImagesResponse_nextToken :: Lens' ListStreamingImagesResponse (Maybe Text)

-- | The response's http status code.
listStreamingImagesResponse_httpStatus :: Lens' ListStreamingImagesResponse Int

-- | The ARN of the target resource for tagging operations.
listTagsForResource_resourceArn :: Lens' ListTagsForResource Text

-- | A collection of labels, in the form of key:value pairs, that apply to
--   this resource.
listTagsForResourceResponse_tags :: Lens' ListTagsForResourceResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
listTagsForResourceResponse_httpStatus :: Lens' ListTagsForResourceResponse Int

-- | To make an idempotent API request using one of these actions, specify
--   a client token in the request. You should not reuse the same client
--   token for other API requests. If you retry a request that completed
--   successfully using the same client token and the same parameters, the
--   retry succeeds without performing any further actions. If you retry a
--   successful request using the same client token, but one or more of the
--   parameters are different, the retry fails with a ValidationException
--   error.
startStudioSSOConfigurationRepair_clientToken :: Lens' StartStudioSSOConfigurationRepair (Maybe Text)

-- | The studio ID.
startStudioSSOConfigurationRepair_studioId :: Lens' StartStudioSSOConfigurationRepair Text

-- | Information about a studio.
startStudioSSOConfigurationRepairResponse_studio :: Lens' StartStudioSSOConfigurationRepairResponse (Maybe Studio)

-- | The response's http status code.
startStudioSSOConfigurationRepairResponse_httpStatus :: Lens' StartStudioSSOConfigurationRepairResponse Int

-- | The studio ID.
getLaunchProfileInitialization_studioId :: Lens' GetLaunchProfileInitialization Text

-- | A collection of launch profile protocol versions.
getLaunchProfileInitialization_launchProfileProtocolVersions :: Lens' GetLaunchProfileInitialization [Text]

-- | The launch purpose.
getLaunchProfileInitialization_launchPurpose :: Lens' GetLaunchProfileInitialization Text

-- | The launch profile ID.
getLaunchProfileInitialization_launchProfileId :: Lens' GetLaunchProfileInitialization Text

-- | The platform.
getLaunchProfileInitialization_platform :: Lens' GetLaunchProfileInitialization Text

-- | The launch profile initialization.
getLaunchProfileInitializationResponse_launchProfileInitialization :: Lens' GetLaunchProfileInitializationResponse (Maybe LaunchProfileInitialization)

-- | The response's http status code.
getLaunchProfileInitializationResponse_httpStatus :: Lens' GetLaunchProfileInitializationResponse Int

-- | The studio ID.
getLaunchProfile_studioId :: Lens' GetLaunchProfile Text

-- | The launch profile ID.
getLaunchProfile_launchProfileId :: Lens' GetLaunchProfile Text

-- | The launch profile.
getLaunchProfileResponse_launchProfile :: Lens' GetLaunchProfileResponse (Maybe LaunchProfile)

-- | The response's http status code.
getLaunchProfileResponse_httpStatus :: Lens' GetLaunchProfileResponse Int

-- | Initialization scripts for studio components.
createStudioComponent_initializationScripts :: Lens' CreateStudioComponent (Maybe [StudioComponentInitializationScript])

-- | To make an idempotent API request using one of these actions, specify
--   a client token in the request. You should not reuse the same client
--   token for other API requests. If you retry a request that completed
--   successfully using the same client token and the same parameters, the
--   retry succeeds without performing any further actions. If you retry a
--   successful request using the same client token, but one or more of the
--   parameters are different, the retry fails with a ValidationException
--   error.
createStudioComponent_clientToken :: Lens' CreateStudioComponent (Maybe Text)

-- | The EC2 security groups that control access to the studio component.
createStudioComponent_ec2SecurityGroupIds :: Lens' CreateStudioComponent (Maybe (NonEmpty Text))

-- | The specific subtype of a studio component.
createStudioComponent_subtype :: Lens' CreateStudioComponent (Maybe StudioComponentSubtype)

-- | Parameters for the studio component scripts.
createStudioComponent_scriptParameters :: Lens' CreateStudioComponent (Maybe [ScriptParameterKeyValue])

-- | The configuration of the studio component, based on component type.
createStudioComponent_configuration :: Lens' CreateStudioComponent (Maybe StudioComponentConfiguration)

-- | The description.
createStudioComponent_description :: Lens' CreateStudioComponent (Maybe Text)

-- | A collection of labels, in the form of key:value pairs, that apply to
--   this resource.
createStudioComponent_tags :: Lens' CreateStudioComponent (Maybe (HashMap Text Text))

-- | The studio ID.
createStudioComponent_studioId :: Lens' CreateStudioComponent Text

-- | The name for the studio component.
createStudioComponent_name :: Lens' CreateStudioComponent Text

-- | The type of the studio component.
createStudioComponent_type :: Lens' CreateStudioComponent StudioComponentType

-- | Information about the studio component.
createStudioComponentResponse_studioComponent :: Lens' CreateStudioComponentResponse (Maybe StudioComponent)

-- | The response's http status code.
createStudioComponentResponse_httpStatus :: Lens' CreateStudioComponentResponse Int

-- | The EULA ID.
getEula_eulaId :: Lens' GetEula Text

-- | The EULA.
getEulaResponse_eula :: Lens' GetEulaResponse (Maybe Eula)

-- | The response's http status code.
getEulaResponse_httpStatus :: Lens' GetEulaResponse Int

-- | A list of states.
listStudioComponents_states :: Lens' ListStudioComponents (Maybe [Text])

-- | The types.
listStudioComponents_types :: Lens' ListStudioComponents (Maybe [Text])

-- | The token for the next set of results, or null if there are no more
--   results.
listStudioComponents_nextToken :: Lens' ListStudioComponents (Maybe Text)

-- | The maximum number of results to be returned per request.
listStudioComponents_maxResults :: Lens' ListStudioComponents (Maybe Natural)

-- | The studio ID.
listStudioComponents_studioId :: Lens' ListStudioComponents Text

-- | A collection of studio components.
listStudioComponentsResponse_studioComponents :: Lens' ListStudioComponentsResponse (Maybe [StudioComponent])

-- | The token for the next set of results, or null if there are no more
--   results.
listStudioComponentsResponse_nextToken :: Lens' ListStudioComponentsResponse (Maybe Text)

-- | The response's http status code.
listStudioComponentsResponse_httpStatus :: Lens' ListStudioComponentsResponse Int

-- | To make an idempotent API request using one of these actions, specify
--   a client token in the request. You should not reuse the same client
--   token for other API requests. If you retry a request that completed
--   successfully using the same client token and the same parameters, the
--   retry succeeds without performing any further actions. If you retry a
--   successful request using the same client token, but one or more of the
--   parameters are different, the retry fails with a ValidationException
--   error.
acceptEulas_clientToken :: Lens' AcceptEulas (Maybe Text)

-- | The EULA ID.
acceptEulas_eulaIds :: Lens' AcceptEulas (Maybe [Text])

-- | The studio ID.
acceptEulas_studioId :: Lens' AcceptEulas Text

-- | A collection of EULA acceptances.
acceptEulasResponse_eulaAcceptances :: Lens' AcceptEulasResponse (Maybe [EulaAcceptance])

-- | The response's http status code.
acceptEulasResponse_httpStatus :: Lens' AcceptEulasResponse Int

-- | The user ID of the user that owns the streaming session.
createStreamingSession_ownedBy :: Lens' CreateStreamingSession (Maybe Text)

-- | To make an idempotent API request using one of these actions, specify
--   a client token in the request. You should not reuse the same client
--   token for other API requests. If you retry a request that completed
--   successfully using the same client token and the same parameters, the
--   retry succeeds without performing any further actions. If you retry a
--   successful request using the same client token, but one or more of the
--   parameters are different, the retry fails with a ValidationException
--   error.
createStreamingSession_clientToken :: Lens' CreateStreamingSession (Maybe Text)

-- | The EC2 Instance type used for the streaming session.
createStreamingSession_ec2InstanceType :: Lens' CreateStreamingSession (Maybe StreamingInstanceType)

-- | The launch profile ID.
createStreamingSession_launchProfileId :: Lens' CreateStreamingSession (Maybe Text)

-- | The ID of the streaming image.
createStreamingSession_streamingImageId :: Lens' CreateStreamingSession (Maybe Text)

-- | A collection of labels, in the form of key:value pairs, that apply to
--   this resource.
createStreamingSession_tags :: Lens' CreateStreamingSession (Maybe (HashMap Text Text))

-- | The studio ID.
createStreamingSession_studioId :: Lens' CreateStreamingSession Text

-- | The session.
createStreamingSessionResponse_session :: Lens' CreateStreamingSessionResponse (Maybe StreamingSession)

-- | The response's http status code.
createStreamingSessionResponse_httpStatus :: Lens' CreateStreamingSessionResponse Int

-- | To make an idempotent API request using one of these actions, specify
--   a client token in the request. You should not reuse the same client
--   token for other API requests. If you retry a request that completed
--   successfully using the same client token and the same parameters, the
--   retry succeeds without performing any further actions. If you retry a
--   successful request using the same client token, but one or more of the
--   parameters are different, the retry fails with a ValidationException
--   error.
deleteStudioComponent_clientToken :: Lens' DeleteStudioComponent (Maybe Text)

-- | The studio ID.
deleteStudioComponent_studioId :: Lens' DeleteStudioComponent Text

-- | The studio component ID.
deleteStudioComponent_studioComponentId :: Lens' DeleteStudioComponent Text

-- | Information about the studio component.
deleteStudioComponentResponse_studioComponent :: Lens' DeleteStudioComponentResponse (Maybe StudioComponent)

-- | The response's http status code.
deleteStudioComponentResponse_httpStatus :: Lens' DeleteStudioComponentResponse Int

-- | Initialization scripts for studio components.
updateStudioComponent_initializationScripts :: Lens' UpdateStudioComponent (Maybe [StudioComponentInitializationScript])

-- | To make an idempotent API request using one of these actions, specify
--   a client token in the request. You should not reuse the same client
--   token for other API requests. If you retry a request that completed
--   successfully using the same client token and the same parameters, the
--   retry succeeds without performing any further actions. If you retry a
--   successful request using the same client token, but one or more of the
--   parameters are different, the retry fails with a ValidationException
--   error.
updateStudioComponent_clientToken :: Lens' UpdateStudioComponent (Maybe Text)

-- | The EC2 security groups that control access to the studio component.
updateStudioComponent_ec2SecurityGroupIds :: Lens' UpdateStudioComponent (Maybe (NonEmpty Text))

-- | The specific subtype of a studio component.
updateStudioComponent_subtype :: Lens' UpdateStudioComponent (Maybe StudioComponentSubtype)

-- | The name for the studio component.
updateStudioComponent_name :: Lens' UpdateStudioComponent (Maybe Text)

-- | Parameters for the studio component scripts.
updateStudioComponent_scriptParameters :: Lens' UpdateStudioComponent (Maybe [ScriptParameterKeyValue])

-- | The type of the studio component.
updateStudioComponent_type :: Lens' UpdateStudioComponent (Maybe StudioComponentType)

-- | The configuration of the studio component, based on component type.
updateStudioComponent_configuration :: Lens' UpdateStudioComponent (Maybe StudioComponentConfiguration)

-- | The description.
updateStudioComponent_description :: Lens' UpdateStudioComponent (Maybe Text)

-- | The studio ID.
updateStudioComponent_studioId :: Lens' UpdateStudioComponent Text

-- | The studio component ID.
updateStudioComponent_studioComponentId :: Lens' UpdateStudioComponent Text

-- | Information about the studio component.
updateStudioComponentResponse_studioComponent :: Lens' UpdateStudioComponentResponse (Maybe StudioComponent)

-- | The response's http status code.
updateStudioComponentResponse_httpStatus :: Lens' UpdateStudioComponentResponse Int

-- | The studio ID.
getStudioMember_studioId :: Lens' GetStudioMember Text

-- | The principal ID.
getStudioMember_principalId :: Lens' GetStudioMember Text

-- | The member.
getStudioMemberResponse_member :: Lens' GetStudioMemberResponse (Maybe StudioMembership)

-- | The response's http status code.
getStudioMemberResponse_httpStatus :: Lens' GetStudioMemberResponse Int

-- | To make an idempotent API request using one of these actions, specify
--   a client token in the request. You should not reuse the same client
--   token for other API requests. If you retry a request that completed
--   successfully using the same client token and the same parameters, the
--   retry succeeds without performing any further actions. If you retry a
--   successful request using the same client token, but one or more of the
--   parameters are different, the retry fails with a ValidationException
--   error.
deleteStudio_clientToken :: Lens' DeleteStudio (Maybe Text)

-- | The studio ID.
deleteStudio_studioId :: Lens' DeleteStudio Text

-- | Information about a studio.
deleteStudioResponse_studio :: Lens' DeleteStudioResponse (Maybe Studio)

-- | The response's http status code.
deleteStudioResponse_httpStatus :: Lens' DeleteStudioResponse Int

-- | To make an idempotent API request using one of these actions, specify
--   a client token in the request. You should not reuse the same client
--   token for other API requests. If you retry a request that completed
--   successfully using the same client token and the same parameters, the
--   retry succeeds without performing any further actions. If you retry a
--   successful request using the same client token, but one or more of the
--   parameters are different, the retry fails with a ValidationException
--   error.
updateStudio_clientToken :: Lens' UpdateStudio (Maybe Text)

-- | The IAM role that Studio Users will assume when logging in to the
--   Nimble Studio portal.
updateStudio_userRoleArn :: Lens' UpdateStudio (Maybe Text)

-- | A friendly name for the studio.
updateStudio_displayName :: Lens' UpdateStudio (Maybe Text)

-- | The IAM role that Studio Admins will assume when logging in to the
--   Nimble Studio portal.
updateStudio_adminRoleArn :: Lens' UpdateStudio (Maybe Text)

-- | The studio ID.
updateStudio_studioId :: Lens' UpdateStudio Text

-- | Information about a studio.
updateStudioResponse_studio :: Lens' UpdateStudioResponse (Maybe Studio)

-- | The response's http status code.
updateStudioResponse_httpStatus :: Lens' UpdateStudioResponse Int

-- | The token for the next set of results, or null if there are no more
--   results.
listStudios_nextToken :: Lens' ListStudios (Maybe Text)

-- | A collection of studios.
listStudiosResponse_studios :: Lens' ListStudiosResponse (Maybe [Studio])

-- | The token for the next set of results, or null if there are no more
--   results.
listStudiosResponse_nextToken :: Lens' ListStudiosResponse (Maybe Text)

-- | The response's http status code.
listStudiosResponse_httpStatus :: Lens' ListStudiosResponse Int

-- | The studio ID.
getStudioComponent_studioId :: Lens' GetStudioComponent Text

-- | The studio component ID.
getStudioComponent_studioComponentId :: Lens' GetStudioComponent Text

-- | Information about the studio component.
getStudioComponentResponse_studioComponent :: Lens' GetStudioComponentResponse (Maybe StudioComponent)

-- | The response's http status code.
getStudioComponentResponse_httpStatus :: Lens' GetStudioComponentResponse Int

-- | The token for the next set of results, or null if there are no more
--   results.
listEulas_nextToken :: Lens' ListEulas (Maybe Text)

-- | A collection of EULA IDs.
listEulas_eulaIds :: Lens' ListEulas (Maybe [Text])

-- | A collection of EULA resources.
listEulasResponse_eulas :: Lens' ListEulasResponse (Maybe [Eula])

-- | The token for the next set of results, or null if there are no more
--   results.
listEulasResponse_nextToken :: Lens' ListEulasResponse (Maybe Text)

-- | The response's http status code.
listEulasResponse_httpStatus :: Lens' ListEulasResponse Int

-- | The studio ID.
getStreamingSession_studioId :: Lens' GetStreamingSession Text

-- | The session ID.
getStreamingSession_sessionId :: Lens' GetStreamingSession Text

-- | The session.
getStreamingSessionResponse_session :: Lens' GetStreamingSessionResponse (Maybe StreamingSession)

-- | The response's http status code.
getStreamingSessionResponse_httpStatus :: Lens' GetStreamingSessionResponse Int

-- | The token for the next set of results, or null if there are no more
--   results.
listLaunchProfileMembers_nextToken :: Lens' ListLaunchProfileMembers (Maybe Text)

-- | The maximum number of results to be returned per request.
listLaunchProfileMembers_maxResults :: Lens' ListLaunchProfileMembers (Maybe Natural)

-- | The studio ID.
listLaunchProfileMembers_studioId :: Lens' ListLaunchProfileMembers Text

-- | The launch profile ID.
listLaunchProfileMembers_launchProfileId :: Lens' ListLaunchProfileMembers Text

-- | A list of members.
listLaunchProfileMembersResponse_members :: Lens' ListLaunchProfileMembersResponse (Maybe [LaunchProfileMembership])

-- | The token for the next set of results, or null if there are no more
--   results.
listLaunchProfileMembersResponse_nextToken :: Lens' ListLaunchProfileMembersResponse (Maybe Text)

-- | The response's http status code.
listLaunchProfileMembersResponse_httpStatus :: Lens' ListLaunchProfileMembersResponse Int

-- | To make an idempotent API request using one of these actions, specify
--   a client token in the request. You should not reuse the same client
--   token for other API requests. If you retry a request that completed
--   successfully using the same client token and the same parameters, the
--   retry succeeds without performing any further actions. If you retry a
--   successful request using the same client token, but one or more of the
--   parameters are different, the retry fails with a ValidationException
--   error.
deleteLaunchProfile_clientToken :: Lens' DeleteLaunchProfile (Maybe Text)

-- | The studio ID.
deleteLaunchProfile_studioId :: Lens' DeleteLaunchProfile Text

-- | The launch profile ID.
deleteLaunchProfile_launchProfileId :: Lens' DeleteLaunchProfile Text

-- | The launch profile.
deleteLaunchProfileResponse_launchProfile :: Lens' DeleteLaunchProfileResponse (Maybe LaunchProfile)

-- | The response's http status code.
deleteLaunchProfileResponse_httpStatus :: Lens' DeleteLaunchProfileResponse Int

-- | To make an idempotent API request using one of these actions, specify
--   a client token in the request. You should not reuse the same client
--   token for other API requests. If you retry a request that completed
--   successfully using the same client token and the same parameters, the
--   retry succeeds without performing any further actions. If you retry a
--   successful request using the same client token, but one or more of the
--   parameters are different, the retry fails with a ValidationException
--   error.
updateLaunchProfile_clientToken :: Lens' UpdateLaunchProfile (Maybe Text)

-- | The version number of the protocol that is used by the launch profile.
--   The only valid version is "2021-03-31".
updateLaunchProfile_launchProfileProtocolVersions :: Lens' UpdateLaunchProfile (Maybe [Text])

-- | A configuration for a streaming session.
updateLaunchProfile_streamConfiguration :: Lens' UpdateLaunchProfile (Maybe StreamConfigurationCreate)

-- | The name for the launch profile.
updateLaunchProfile_name :: Lens' UpdateLaunchProfile (Maybe Text)

-- | The description.
updateLaunchProfile_description :: Lens' UpdateLaunchProfile (Maybe Text)

-- | Unique identifiers for a collection of studio components that can be
--   used with this launch profile.
updateLaunchProfile_studioComponentIds :: Lens' UpdateLaunchProfile (Maybe (NonEmpty Text))

-- | The studio ID.
updateLaunchProfile_studioId :: Lens' UpdateLaunchProfile Text

-- | The launch profile ID.
updateLaunchProfile_launchProfileId :: Lens' UpdateLaunchProfile Text

-- | The launch profile.
updateLaunchProfileResponse_launchProfile :: Lens' UpdateLaunchProfileResponse (Maybe LaunchProfile)

-- | The response's http status code.
updateLaunchProfileResponse_httpStatus :: Lens' UpdateLaunchProfileResponse Int

-- | To make an idempotent API request using one of these actions, specify
--   a client token in the request. You should not reuse the same client
--   token for other API requests. If you retry a request that completed
--   successfully using the same client token and the same parameters, the
--   retry succeeds without performing any further actions. If you retry a
--   successful request using the same client token, but one or more of the
--   parameters are different, the retry fails with a ValidationException
--   error.
createStreamingImage_clientToken :: Lens' CreateStreamingImage (Maybe Text)

-- | A human-readable description of the streaming image.
createStreamingImage_description :: Lens' CreateStreamingImage (Maybe Text)

-- | A collection of labels, in the form of key:value pairs, that apply to
--   this resource.
createStreamingImage_tags :: Lens' CreateStreamingImage (Maybe (HashMap Text Text))

-- | The studio ID.
createStreamingImage_studioId :: Lens' CreateStreamingImage Text

-- | A friendly name for a streaming image resource.
createStreamingImage_name :: Lens' CreateStreamingImage Text

-- | The ID of an EC2 machine image with which to create this streaming
--   image.
createStreamingImage_ec2ImageId :: Lens' CreateStreamingImage Text

createStreamingImageResponse_streamingImage :: Lens' CreateStreamingImageResponse (Maybe StreamingImage)

-- | The response's http status code.
createStreamingImageResponse_httpStatus :: Lens' CreateStreamingImageResponse Int

-- | The expiration time in seconds.
createStreamingSessionStream_expirationInSeconds :: Lens' CreateStreamingSessionStream (Maybe Natural)

-- | To make an idempotent API request using one of these actions, specify
--   a client token in the request. You should not reuse the same client
--   token for other API requests. If you retry a request that completed
--   successfully using the same client token and the same parameters, the
--   retry succeeds without performing any further actions. If you retry a
--   successful request using the same client token, but one or more of the
--   parameters are different, the retry fails with a ValidationException
--   error.
createStreamingSessionStream_clientToken :: Lens' CreateStreamingSessionStream (Maybe Text)

-- | The studio ID.
createStreamingSessionStream_studioId :: Lens' CreateStreamingSessionStream Text

-- | The session ID.
createStreamingSessionStream_sessionId :: Lens' CreateStreamingSessionStream Text

-- | The stream.
createStreamingSessionStreamResponse_stream :: Lens' CreateStreamingSessionStreamResponse (Maybe StreamingSessionStream)

-- | The response's http status code.
createStreamingSessionStreamResponse_httpStatus :: Lens' CreateStreamingSessionStreamResponse Int

-- | The studio ID.
getLaunchProfileDetails_studioId :: Lens' GetLaunchProfileDetails Text

-- | The launch profile ID.
getLaunchProfileDetails_launchProfileId :: Lens' GetLaunchProfileDetails Text

-- | A collection of streaming images.
getLaunchProfileDetailsResponse_streamingImages :: Lens' GetLaunchProfileDetailsResponse (Maybe [StreamingImage])

-- | The launch profile.
getLaunchProfileDetailsResponse_launchProfile :: Lens' GetLaunchProfileDetailsResponse (Maybe LaunchProfile)

-- | A collection of studio component summaries.
getLaunchProfileDetailsResponse_studioComponentSummaries :: Lens' GetLaunchProfileDetailsResponse (Maybe [StudioComponentSummary])

-- | The response's http status code.
getLaunchProfileDetailsResponse_httpStatus :: Lens' GetLaunchProfileDetailsResponse Int

-- | To make an idempotent API request using one of these actions, specify
--   a client token in the request. You should not reuse the same client
--   token for other API requests. If you retry a request that completed
--   successfully using the same client token and the same parameters, the
--   retry succeeds without performing any further actions. If you retry a
--   successful request using the same client token, but one or more of the
--   parameters are different, the retry fails with a ValidationException
--   error.
putStudioMembers_clientToken :: Lens' PutStudioMembers (Maybe Text)

-- | The studio ID.
putStudioMembers_studioId :: Lens' PutStudioMembers Text

-- | A list of members.
putStudioMembers_members :: Lens' PutStudioMembers (NonEmpty NewStudioMember)

-- | The ID of the identity store.
putStudioMembers_identityStoreId :: Lens' PutStudioMembers Text

-- | The response's http status code.
putStudioMembersResponse_httpStatus :: Lens' PutStudioMembersResponse Int

-- | To make an idempotent API request using one of these actions, specify
--   a client token in the request. You should not reuse the same client
--   token for other API requests. If you retry a request that completed
--   successfully using the same client token and the same parameters, the
--   retry succeeds without performing any further actions. If you retry a
--   successful request using the same client token, but one or more of the
--   parameters are different, the retry fails with a ValidationException
--   error.
deleteStreamingImage_clientToken :: Lens' DeleteStreamingImage (Maybe Text)

-- | The studio ID.
deleteStreamingImage_studioId :: Lens' DeleteStreamingImage Text

-- | The streaming image ID.
deleteStreamingImage_streamingImageId :: Lens' DeleteStreamingImage Text

-- | The streaming image.
deleteStreamingImageResponse_streamingImage :: Lens' DeleteStreamingImageResponse (Maybe StreamingImage)

-- | The response's http status code.
deleteStreamingImageResponse_httpStatus :: Lens' DeleteStreamingImageResponse Int

-- | To make an idempotent API request using one of these actions, specify
--   a client token in the request. You should not reuse the same client
--   token for other API requests. If you retry a request that completed
--   successfully using the same client token and the same parameters, the
--   retry succeeds without performing any further actions. If you retry a
--   successful request using the same client token, but one or more of the
--   parameters are different, the retry fails with a ValidationException
--   error.
updateStreamingImage_clientToken :: Lens' UpdateStreamingImage (Maybe Text)

-- | The name for the streaming image.
updateStreamingImage_name :: Lens' UpdateStreamingImage (Maybe Text)

-- | The description.
updateStreamingImage_description :: Lens' UpdateStreamingImage (Maybe Text)

-- | The studio ID.
updateStreamingImage_studioId :: Lens' UpdateStreamingImage Text

-- | The streaming image ID.
updateStreamingImage_streamingImageId :: Lens' UpdateStreamingImage Text

updateStreamingImageResponse_streamingImage :: Lens' UpdateStreamingImageResponse (Maybe StreamingImage)

-- | The response's http status code.
updateStreamingImageResponse_httpStatus :: Lens' UpdateStreamingImageResponse Int

-- | The studio ID.
getStreamingImage_studioId :: Lens' GetStreamingImage Text

-- | The streaming image ID.
getStreamingImage_streamingImageId :: Lens' GetStreamingImage Text

-- | The streaming image.
getStreamingImageResponse_streamingImage :: Lens' GetStreamingImageResponse (Maybe StreamingImage)

-- | The response's http status code.
getStreamingImageResponse_httpStatus :: Lens' GetStreamingImageResponse Int

-- | The token for the next set of results, or null if there are no more
--   results.
listEulaAcceptances_nextToken :: Lens' ListEulaAcceptances (Maybe Text)

-- | A collection of EULA IDs.
listEulaAcceptances_eulaIds :: Lens' ListEulaAcceptances (Maybe [Text])

-- | The studio ID.
listEulaAcceptances_studioId :: Lens' ListEulaAcceptances Text

-- | The token for the next set of results, or null if there are no more
--   results.
listEulaAcceptancesResponse_nextToken :: Lens' ListEulaAcceptancesResponse (Maybe Text)

-- | A collection of EULA acceptances.
listEulaAcceptancesResponse_eulaAcceptances :: Lens' ListEulaAcceptancesResponse (Maybe [EulaAcceptance])

-- | The response's http status code.
listEulaAcceptancesResponse_httpStatus :: Lens' ListEulaAcceptancesResponse Int

-- | The studio ID.
getStreamingSessionStream_studioId :: Lens' GetStreamingSessionStream Text

-- | The stream ID.
getStreamingSessionStream_streamId :: Lens' GetStreamingSessionStream Text

-- | The session ID.
getStreamingSessionStream_sessionId :: Lens' GetStreamingSessionStream Text

-- | The stream.
getStreamingSessionStreamResponse_stream :: Lens' GetStreamingSessionStreamResponse (Maybe StreamingSessionStream)

-- | The response's http status code.
getStreamingSessionStreamResponse_httpStatus :: Lens' GetStreamingSessionStreamResponse Int

-- | A collection of labels, in the form of key:value pairs, that apply to
--   this resource.
tagResource_tags :: Lens' TagResource (Maybe (HashMap Text Text))

-- | The ARN of the target resource for tagging operations.
tagResource_resourceArn :: Lens' TagResource Text

-- | The response's http status code.
tagResourceResponse_httpStatus :: Lens' TagResourceResponse Int

-- | The studio ID.
getLaunchProfileMember_studioId :: Lens' GetLaunchProfileMember Text

-- | The principal ID.
getLaunchProfileMember_principalId :: Lens' GetLaunchProfileMember Text

-- | The launch profile ID.
getLaunchProfileMember_launchProfileId :: Lens' GetLaunchProfileMember Text

-- | The member.
getLaunchProfileMemberResponse_member :: Lens' GetLaunchProfileMemberResponse (Maybe LaunchProfileMembership)

-- | The response's http status code.
getLaunchProfileMemberResponse_httpStatus :: Lens' GetLaunchProfileMemberResponse Int

-- | To make an idempotent API request using one of these actions, specify
--   a client token in the request. You should not reuse the same client
--   token for other API requests. If you retry a request that completed
--   successfully using the same client token and the same parameters, the
--   retry succeeds without performing any further actions. If you retry a
--   successful request using the same client token, but one or more of the
--   parameters are different, the retry fails with a ValidationException
--   error.
deleteStreamingSession_clientToken :: Lens' DeleteStreamingSession (Maybe Text)

-- | The studio ID.
deleteStreamingSession_studioId :: Lens' DeleteStreamingSession Text

-- | The session ID.
deleteStreamingSession_sessionId :: Lens' DeleteStreamingSession Text

-- | The session.
deleteStreamingSessionResponse_session :: Lens' DeleteStreamingSessionResponse (Maybe StreamingSession)

-- | The response's http status code.
deleteStreamingSessionResponse_httpStatus :: Lens' DeleteStreamingSessionResponse Int

-- | An array of tag keys to delete.
untagResource_tagKeys :: Lens' UntagResource [Text]

-- | The ARN of the target resource for tagging operations.
untagResource_resourceArn :: Lens' UntagResource Text

-- | The response's http status code.
untagResourceResponse_httpStatus :: Lens' UntagResourceResponse Int

-- | The user ID of the user that owns the streaming session.
listStreamingSessions_ownedBy :: Lens' ListStreamingSessions (Maybe Text)

-- | The user ID of the user that created the streaming session.
listStreamingSessions_createdBy :: Lens' ListStreamingSessions (Maybe Text)

-- | The token for the next set of results, or null if there are no more
--   results.
listStreamingSessions_nextToken :: Lens' ListStreamingSessions (Maybe Text)

-- | A collection of session IDs.
listStreamingSessions_sessionIds :: Lens' ListStreamingSessions (Maybe Text)

-- | The studio ID.
listStreamingSessions_studioId :: Lens' ListStreamingSessions Text

-- | The token for the next set of results, or null if there are no more
--   results.
listStreamingSessionsResponse_nextToken :: Lens' ListStreamingSessionsResponse (Maybe Text)

-- | A collection of streaming sessions.
listStreamingSessionsResponse_sessions :: Lens' ListStreamingSessionsResponse (Maybe [StreamingSession])

-- | The response's http status code.
listStreamingSessionsResponse_httpStatus :: Lens' ListStreamingSessionsResponse Int

-- | The studio ID.
getStudio_studioId :: Lens' GetStudio Text

-- | Information about a studio.
getStudioResponse_studio :: Lens' GetStudioResponse (Maybe Studio)

-- | The response's http status code.
getStudioResponse_httpStatus :: Lens' GetStudioResponse Int

-- | The token for the next set of results, or null if there are no more
--   results.
listStudioMembers_nextToken :: Lens' ListStudioMembers (Maybe Text)

-- | The maximum number of results to be returned per request.
listStudioMembers_maxResults :: Lens' ListStudioMembers (Maybe Natural)

-- | The studio ID.
listStudioMembers_studioId :: Lens' ListStudioMembers Text

-- | A list of members.
listStudioMembersResponse_members :: Lens' ListStudioMembersResponse (Maybe [StudioMembership])

-- | The token for the next set of results, or null if there are no more
--   results.
listStudioMembersResponse_nextToken :: Lens' ListStudioMembersResponse (Maybe Text)

-- | The response's http status code.
listStudioMembersResponse_httpStatus :: Lens' ListStudioMembersResponse Int

-- | To make an idempotent API request using one of these actions, specify
--   a client token in the request. You should not reuse the same client
--   token for other API requests. If you retry a request that completed
--   successfully using the same client token and the same parameters, the
--   retry succeeds without performing any further actions. If you retry a
--   successful request using the same client token, but one or more of the
--   parameters are different, the retry fails with a ValidationException
--   error.
deleteStudioMember_clientToken :: Lens' DeleteStudioMember (Maybe Text)

-- | The studio ID.
deleteStudioMember_studioId :: Lens' DeleteStudioMember Text

-- | The principal ID.
deleteStudioMember_principalId :: Lens' DeleteStudioMember Text

-- | The response's http status code.
deleteStudioMemberResponse_httpStatus :: Lens' DeleteStudioMemberResponse Int

-- | The value for the LDAP attribute.
activeDirectoryComputerAttribute_value :: Lens' ActiveDirectoryComputerAttribute (Maybe Text)

-- | The name for the LDAP attribute.
activeDirectoryComputerAttribute_name :: Lens' ActiveDirectoryComputerAttribute (Maybe Text)

-- | The directory ID of the Directory Service for Microsoft Active
--   Directory to access using this studio component.
activeDirectoryConfiguration_directoryId :: Lens' ActiveDirectoryConfiguration (Maybe Text)

-- | A collection of custom attributes for an Active Directory computer.
activeDirectoryConfiguration_computerAttributes :: Lens' ActiveDirectoryConfiguration (Maybe [ActiveDirectoryComputerAttribute])

-- | The distinguished name (DN) and organizational unit (OU) of an Active
--   Directory computer.
activeDirectoryConfiguration_organizationalUnitDistinguishedName :: Lens' ActiveDirectoryConfiguration (Maybe Text)

-- | The name of an Active Directory user that is used on ComputeFarm
--   worker instances.
computeFarmConfiguration_activeDirectoryUser :: Lens' ComputeFarmConfiguration (Maybe Text)

-- | The endpoint of the ComputeFarm that is accessed by the studio
--   component resource.
computeFarmConfiguration_endpoint :: Lens' ComputeFarmConfiguration (Maybe Text)

-- | The Unix epoch timestamp in seconds for when the resource was created.
eula_createdAt :: Lens' Eula (Maybe UTCTime)

-- | The EULA ID.
eula_eulaId :: Lens' Eula (Maybe Text)

-- | The EULA content.
eula_content :: Lens' Eula (Maybe Text)

-- | The name for the EULA.
eula_name :: Lens' Eula (Maybe Text)

-- | The Unix epoch timestamp in seconds for when the resource was updated.
eula_updatedAt :: Lens' Eula (Maybe UTCTime)

-- | The ID of the acceptee.
eulaAcceptance_accepteeId :: Lens' EulaAcceptance (Maybe Text)

-- | The EULA ID.
eulaAcceptance_eulaId :: Lens' EulaAcceptance (Maybe Text)

-- | The Unix epoch timestamp in seconds for when the EULA was accepted.
eulaAcceptance_acceptedAt :: Lens' EulaAcceptance (Maybe UTCTime)

-- | The ID of the person who accepted the EULA.
eulaAcceptance_acceptedBy :: Lens' EulaAcceptance (Maybe Text)

-- | The EULA acceptance ID.
eulaAcceptance_eulaAcceptanceId :: Lens' EulaAcceptance (Maybe Text)

-- | The current state.
launchProfile_state :: Lens' LaunchProfile (Maybe LaunchProfileState)

-- | The ARN of the resource.
launchProfile_arn :: Lens' LaunchProfile (Maybe Text)

-- | The Unix epoch timestamp in seconds for when the resource was created.
launchProfile_createdAt :: Lens' LaunchProfile (Maybe UTCTime)

-- | The user ID of the user that created the launch profile.
launchProfile_createdBy :: Lens' LaunchProfile (Maybe Text)

-- | The launch profile ID.
launchProfile_launchProfileId :: Lens' LaunchProfile (Maybe Text)

-- | The user ID of the user that most recently updated the resource.
launchProfile_updatedBy :: Lens' LaunchProfile (Maybe Text)

-- | The version number of the protocol that is used by the launch profile.
--   The only valid version is "2021-03-31".
launchProfile_launchProfileProtocolVersions :: Lens' LaunchProfile (Maybe [Text])

-- | Unique identifiers for a collection of EC2 subnets.
launchProfile_ec2SubnetIds :: Lens' LaunchProfile (Maybe [Text])

-- | A configuration for a streaming session.
launchProfile_streamConfiguration :: Lens' LaunchProfile (Maybe StreamConfiguration)

-- | A friendly name for the launch profile.
launchProfile_name :: Lens' LaunchProfile (Maybe Text)

-- | The status message for the launch profile.
launchProfile_statusMessage :: Lens' LaunchProfile (Maybe Text)

-- | The Unix epoch timestamp in seconds for when the resource was updated.
launchProfile_updatedAt :: Lens' LaunchProfile (Maybe UTCTime)

-- | A human-readable description of the launch profile.
launchProfile_description :: Lens' LaunchProfile (Maybe Text)

-- | A collection of labels, in the form of key:value pairs, that apply to
--   this resource.
launchProfile_tags :: Lens' LaunchProfile (Maybe (HashMap Text Text))

-- | The status code.
launchProfile_statusCode :: Lens' LaunchProfile (Maybe LaunchProfileStatusCode)

-- | Unique identifiers for a collection of studio components that can be
--   used with this launch profile.
launchProfile_studioComponentIds :: Lens' LaunchProfile (Maybe (NonEmpty Text))

-- | The platform of the launch platform, either WINDOWS or LINUX.
launchProfileInitialization_platform :: Lens' LaunchProfileInitialization (Maybe LaunchProfilePlatform)

-- | A LaunchProfileInitializationActiveDirectory resource.
launchProfileInitialization_activeDirectory :: Lens' LaunchProfileInitialization (Maybe LaunchProfileInitializationActiveDirectory)

-- | The launch purpose.
launchProfileInitialization_launchPurpose :: Lens' LaunchProfileInitialization (Maybe Text)

-- | The launch profile ID.
launchProfileInitialization_launchProfileId :: Lens' LaunchProfileInitialization (Maybe Text)

-- | The EC2 security groups that control access to the studio component.
launchProfileInitialization_ec2SecurityGroupIds :: Lens' LaunchProfileInitialization (Maybe (NonEmpty Text))

-- | The name for the launch profile.
launchProfileInitialization_name :: Lens' LaunchProfileInitialization (Maybe Text)

-- | The version number of the protocol that is used by the launch profile.
--   The only valid version is "2021-03-31".
launchProfileInitialization_launchProfileProtocolVersion :: Lens' LaunchProfileInitialization (Maybe Text)

-- | The user initializtion scripts.
launchProfileInitialization_userInitializationScripts :: Lens' LaunchProfileInitialization (Maybe [LaunchProfileInitializationScript])

-- | The system initializtion scripts.
launchProfileInitialization_systemInitializationScripts :: Lens' LaunchProfileInitialization (Maybe [LaunchProfileInitializationScript])

-- | The directory ID of the Directory Service for Microsoft Active
--   Directory to access using this launch profile.
launchProfileInitializationActiveDirectory_directoryId :: Lens' LaunchProfileInitializationActiveDirectory (Maybe Text)

-- | The unique identifier for a studio component resource.
launchProfileInitializationActiveDirectory_studioComponentId :: Lens' LaunchProfileInitializationActiveDirectory (Maybe Text)

-- | The name for the studio component.
launchProfileInitializationActiveDirectory_studioComponentName :: Lens' LaunchProfileInitializationActiveDirectory (Maybe Text)

-- | The DNS IP address.
launchProfileInitializationActiveDirectory_dnsIpAddresses :: Lens' LaunchProfileInitializationActiveDirectory (Maybe [Text])

-- | A collection of custom attributes for an Active Directory computer.
launchProfileInitializationActiveDirectory_computerAttributes :: Lens' LaunchProfileInitializationActiveDirectory (Maybe [ActiveDirectoryComputerAttribute])

-- | The name for the organizational unit distinguished name.
launchProfileInitializationActiveDirectory_organizationalUnitDistinguishedName :: Lens' LaunchProfileInitializationActiveDirectory (Maybe Text)

-- | The directory name.
launchProfileInitializationActiveDirectory_directoryName :: Lens' LaunchProfileInitializationActiveDirectory (Maybe Text)

-- | The initialization script.
launchProfileInitializationScript_script :: Lens' LaunchProfileInitializationScript (Maybe Text)

-- | The unique identifier for a studio component resource.
launchProfileInitializationScript_studioComponentId :: Lens' LaunchProfileInitializationScript (Maybe Text)

-- | The name for the studio component.
launchProfileInitializationScript_studioComponentName :: Lens' LaunchProfileInitializationScript (Maybe Text)

-- | The ID of the identity store.
launchProfileMembership_identityStoreId :: Lens' LaunchProfileMembership (Maybe Text)

-- | The principal ID.
launchProfileMembership_principalId :: Lens' LaunchProfileMembership (Maybe Text)

-- | The persona.
launchProfileMembership_persona :: Lens' LaunchProfileMembership (Maybe LaunchProfilePersona)

-- | The endpoint of the license service that is accessed by the studio
--   component resource.
licenseServiceConfiguration_endpoint :: Lens' LicenseServiceConfiguration (Maybe Text)

-- | The persona.
newLaunchProfileMember_persona :: Lens' NewLaunchProfileMember LaunchProfilePersona

-- | The principal ID.
newLaunchProfileMember_principalId :: Lens' NewLaunchProfileMember Text

-- | The persona.
newStudioMember_persona :: Lens' NewStudioMember StudioPersona

-- | The principal ID.
newStudioMember_principalId :: Lens' NewStudioMember Text

-- | A script parameter value.
scriptParameterKeyValue_value :: Lens' ScriptParameterKeyValue (Maybe Text)

-- | A script parameter key.
scriptParameterKeyValue_key :: Lens' ScriptParameterKeyValue (Maybe Text)

-- | The unique identifier for a file system.
sharedFileSystemConfiguration_fileSystemId :: Lens' SharedFileSystemConfiguration (Maybe Text)

-- | The mount location for a shared file system on a Windows virtual
--   workstation.
sharedFileSystemConfiguration_windowsMountDrive :: Lens' SharedFileSystemConfiguration (Maybe Text)

-- | The mount location for a shared file system on a Linux virtual
--   workstation.
sharedFileSystemConfiguration_linuxMountPoint :: Lens' SharedFileSystemConfiguration (Maybe Text)

-- | The name of the file share.
sharedFileSystemConfiguration_shareName :: Lens' SharedFileSystemConfiguration (Maybe Text)

-- | The endpoint of the shared file system that is accessed by the studio
--   component resource.
sharedFileSystemConfiguration_endpoint :: Lens' SharedFileSystemConfiguration (Maybe Text)

-- | The streaming images that users can select from when launching a
--   streaming session with this launch profile.
streamConfiguration_streamingImageIds :: Lens' StreamConfiguration (Maybe [Text])

-- | The length of time, in minutes, that a streaming session can run.
--   After this point, Nimble Studio automatically terminates the session.
streamConfiguration_maxSessionLengthInMinutes :: Lens' StreamConfiguration (Maybe Natural)

-- | Enable or disable the use of the system clipboard to copy and paste
--   between the streaming session and streaming client.
streamConfiguration_clipboardMode :: Lens' StreamConfiguration (Maybe StreamingClipboardMode)

-- | The EC2 instance types that users can select from when launching a
--   streaming session with this launch profile.
streamConfiguration_ec2InstanceTypes :: Lens' StreamConfiguration (Maybe (NonEmpty StreamingInstanceType))

-- | The length of time, in minutes, that a streaming session can run.
--   After this point, Nimble Studio automatically terminates the session.
streamConfigurationCreate_maxSessionLengthInMinutes :: Lens' StreamConfigurationCreate (Maybe Natural)

-- | Enable or disable the use of the system clipboard to copy and paste
--   between the streaming session and streaming client.
streamConfigurationCreate_clipboardMode :: Lens' StreamConfigurationCreate StreamingClipboardMode

-- | The streaming images that users can select from when launching a
--   streaming session with this launch profile.
streamConfigurationCreate_streamingImageIds :: Lens' StreamConfigurationCreate [Text]

-- | The EC2 instance types that users can select from when launching a
--   streaming session with this launch profile.
streamConfigurationCreate_ec2InstanceTypes :: Lens' StreamConfigurationCreate (NonEmpty StreamingInstanceType)

-- | The current state.
streamingImage_state :: Lens' StreamingImage (Maybe StreamingImageState)

-- | The platform of the streaming image, either WINDOWS or LINUX.
streamingImage_platform :: Lens' StreamingImage (Maybe Text)

-- | The ARN of the resource.
streamingImage_arn :: Lens' StreamingImage (Maybe Text)

-- | The ID of the streaming image.
streamingImage_streamingImageId :: Lens' StreamingImage (Maybe Text)

-- | The ID of an EC2 machine image with which to create the streaming
--   image.
streamingImage_ec2ImageId :: Lens' StreamingImage (Maybe Text)

-- | The owner of the streaming image, either the studioId that contains
--   the streaming image, or 'amazon' for images that are provided by
--   Amazon Nimble Studio.
streamingImage_owner :: Lens' StreamingImage (Maybe Text)

-- | A friendly name for a streaming image resource.
streamingImage_name :: Lens' StreamingImage (Maybe Text)

-- | The encryption configuration.
streamingImage_encryptionConfiguration :: Lens' StreamingImage (Maybe StreamingImageEncryptionConfiguration)

-- | The status message for the streaming image.
streamingImage_statusMessage :: Lens' StreamingImage (Maybe Text)

-- | The list of EULAs that must be accepted before a Streaming Session can
--   be started using this streaming image.
streamingImage_eulaIds :: Lens' StreamingImage (Maybe [Text])

-- | A human-readable description of the streaming image.
streamingImage_description :: Lens' StreamingImage (Maybe Text)

-- | A collection of labels, in the form of key:value pairs, that apply to
--   this resource.
streamingImage_tags :: Lens' StreamingImage (Maybe (HashMap Text Text))

-- | The status code.
streamingImage_statusCode :: Lens' StreamingImage (Maybe StreamingImageStatusCode)

-- | The ARN for a KMS key that is used to encrypt studio data.
streamingImageEncryptionConfiguration_keyArn :: Lens' StreamingImageEncryptionConfiguration (Maybe Text)

-- | The type of KMS key that is used to encrypt studio data.
streamingImageEncryptionConfiguration_keyType :: Lens' StreamingImageEncryptionConfiguration StreamingImageEncryptionConfigurationKeyType

-- | The user ID of the user that owns the streaming session.
streamingSession_ownedBy :: Lens' StreamingSession (Maybe Text)

-- | The current state.
streamingSession_state :: Lens' StreamingSession (Maybe StreamingSessionState)

-- | The ARN of the resource.
streamingSession_arn :: Lens' StreamingSession (Maybe Text)

-- | The Unix epoch timestamp in seconds for when the resource was created.
streamingSession_createdAt :: Lens' StreamingSession (Maybe UTCTime)

-- | The EC2 Instance type used for the streaming session.
streamingSession_ec2InstanceType :: Lens' StreamingSession (Maybe Text)

-- | The user ID of the user that created the streaming session.
streamingSession_createdBy :: Lens' StreamingSession (Maybe Text)

-- | The ID of the launch profile used to control access from the streaming
--   session.
streamingSession_launchProfileId :: Lens' StreamingSession (Maybe Text)

-- | The ID of the streaming image.
streamingSession_streamingImageId :: Lens' StreamingSession (Maybe Text)

-- | The user ID of the user that most recently updated the resource.
streamingSession_updatedBy :: Lens' StreamingSession (Maybe Text)

-- | The time the streaming session will automatically terminate if not
--   terminated by the user.
streamingSession_terminateAt :: Lens' StreamingSession (Maybe UTCTime)

-- | The status message for the streaming session.
streamingSession_statusMessage :: Lens' StreamingSession (Maybe Text)

-- | The Unix epoch timestamp in seconds for when the resource was updated.
streamingSession_updatedAt :: Lens' StreamingSession (Maybe UTCTime)

-- | The session ID.
streamingSession_sessionId :: Lens' StreamingSession (Maybe Text)

-- | A collection of labels, in the form of key:value pairs, that apply to
--   this resource.
streamingSession_tags :: Lens' StreamingSession (Maybe (HashMap Text Text))

-- | The status code.
streamingSession_statusCode :: Lens' StreamingSession (Maybe StreamingSessionStatusCode)

-- | The user ID of the user that owns the streaming session.
streamingSessionStream_ownedBy :: Lens' StreamingSessionStream (Maybe Text)

-- | The current state.
streamingSessionStream_state :: Lens' StreamingSessionStream (Maybe StreamingSessionStreamState)

-- | The Unix epoch timestamp in seconds for when the resource was created.
streamingSessionStream_createdAt :: Lens' StreamingSessionStream (Maybe UTCTime)

-- | The Unix epoch timestamp in seconds for when the resource expires.
streamingSessionStream_expiresAt :: Lens' StreamingSessionStream (Maybe UTCTime)

-- | The URL to connect to this stream using the DCV client.
streamingSessionStream_url :: Lens' StreamingSessionStream (Maybe Text)

-- | The user ID of the user that created the streaming session stream.
streamingSessionStream_createdBy :: Lens' StreamingSessionStream (Maybe Text)

-- | The stream ID.
streamingSessionStream_streamId :: Lens' StreamingSessionStream (Maybe Text)

-- | The streaming session stream status code.
streamingSessionStream_statusCode :: Lens' StreamingSessionStream (Maybe StreamingSessionStreamStatusCode)

-- | Configuration of the encryption method that is used for the studio.
studio_studioEncryptionConfiguration :: Lens' Studio (Maybe StudioEncryptionConfiguration)

-- | The current state of the studio resource.
studio_state :: Lens' Studio (Maybe StudioState)

-- | The name of the studio, as included in the URL when accessing it in
--   the Nimble Studio portal.
studio_studioName :: Lens' Studio (Maybe Text)

-- | The Amazon Resource Name (ARN) that is assigned to a studio resource
--   and uniquely identifies it. ARNs are unique across all Regions.
studio_arn :: Lens' Studio (Maybe Text)

-- | The Unix epoch timestamp in seconds for when the resource was created.
studio_createdAt :: Lens' Studio (Maybe UTCTime)

-- | The unique identifier for a studio resource. In Nimble Studio, all
--   other resources are contained in a studio resource.
studio_studioId :: Lens' Studio (Maybe Text)

-- | The IAM role that studio users assume when logging in to the Nimble
--   Studio portal.
studio_userRoleArn :: Lens' Studio (Maybe Text)

-- | The Amazon Web Services SSO application client ID used to integrate
--   with Amazon Web Services SSO to enable Amazon Web Services SSO users
--   to log in to Nimble portal.
studio_ssoClientId :: Lens' Studio (Maybe Text)

-- | The Amazon Web Services Region where the studio resource is located.
studio_homeRegion :: Lens' Studio (Maybe Text)

-- | Additional detail on the studio state.
studio_statusMessage :: Lens' Studio (Maybe Text)

-- | A friendly name for the studio.
studio_displayName :: Lens' Studio (Maybe Text)

-- | The Unix epoch timestamp in seconds for when the resource was updated.
studio_updatedAt :: Lens' Studio (Maybe UTCTime)

-- | The address of the web page for the studio.
studio_studioUrl :: Lens' Studio (Maybe Text)

-- | The IAM role that studio admins assume when logging in to the Nimble
--   Studio portal.
studio_adminRoleArn :: Lens' Studio (Maybe Text)

-- | A collection of labels, in the form of key:value pairs, that apply to
--   this resource.
studio_tags :: Lens' Studio (Maybe (HashMap Text Text))

-- | Status codes that provide additional detail on the studio state.
studio_statusCode :: Lens' Studio (Maybe StudioStatusCode)

-- | Initialization scripts for studio components.
studioComponent_initializationScripts :: Lens' StudioComponent (Maybe [StudioComponentInitializationScript])

-- | The current state.
studioComponent_state :: Lens' StudioComponent (Maybe StudioComponentState)

-- | The unique identifier for a studio component resource.
studioComponent_studioComponentId :: Lens' StudioComponent (Maybe Text)

-- | The ARN of the resource.
studioComponent_arn :: Lens' StudioComponent (Maybe Text)

-- | The Unix epoch timestamp in seconds for when the resource was created.
studioComponent_createdAt :: Lens' StudioComponent (Maybe UTCTime)

-- | The user ID of the user that created the studio component.
studioComponent_createdBy :: Lens' StudioComponent (Maybe Text)

-- | The EC2 security groups that control access to the studio component.
studioComponent_ec2SecurityGroupIds :: Lens' StudioComponent (Maybe (NonEmpty Text))

-- | The user ID of the user that most recently updated the resource.
studioComponent_updatedBy :: Lens' StudioComponent (Maybe Text)

-- | The specific subtype of a studio component.
studioComponent_subtype :: Lens' StudioComponent (Maybe StudioComponentSubtype)

-- | A friendly name for the studio component resource.
studioComponent_name :: Lens' StudioComponent (Maybe Text)

-- | The status message for the studio component.
studioComponent_statusMessage :: Lens' StudioComponent (Maybe Text)

-- | Parameters for the studio component scripts.
studioComponent_scriptParameters :: Lens' StudioComponent (Maybe [ScriptParameterKeyValue])

-- | The Unix epoch timestamp in seconds for when the resource was updated.
studioComponent_updatedAt :: Lens' StudioComponent (Maybe UTCTime)

-- | The type of the studio component.
studioComponent_type :: Lens' StudioComponent (Maybe StudioComponentType)

-- | The configuration of the studio component, based on component type.
studioComponent_configuration :: Lens' StudioComponent (Maybe StudioComponentConfiguration)

-- | A human-readable description for the studio component resource.
studioComponent_description :: Lens' StudioComponent (Maybe Text)

-- | A collection of labels, in the form of key:value pairs, that apply to
--   this resource.
studioComponent_tags :: Lens' StudioComponent (Maybe (HashMap Text Text))

-- | The status code.
studioComponent_statusCode :: Lens' StudioComponent (Maybe StudioComponentStatusCode)

-- | The configuration for a Microsoft Active Directory (Microsoft AD)
--   studio resource.
studioComponentConfiguration_activeDirectoryConfiguration :: Lens' StudioComponentConfiguration (Maybe ActiveDirectoryConfiguration)

-- | The configuration for a license service that is associated with a
--   studio resource.
studioComponentConfiguration_licenseServiceConfiguration :: Lens' StudioComponentConfiguration (Maybe LicenseServiceConfiguration)

-- | The configuration for a shared file storage system that is associated
--   with a studio resource.
studioComponentConfiguration_sharedFileSystemConfiguration :: Lens' StudioComponentConfiguration (Maybe SharedFileSystemConfiguration)

-- | The configuration for a render farm that is associated with a studio
--   resource.
studioComponentConfiguration_computeFarmConfiguration :: Lens' StudioComponentConfiguration (Maybe ComputeFarmConfiguration)

-- | The initialization script.
studioComponentInitializationScript_script :: Lens' StudioComponentInitializationScript (Maybe Text)

-- | The platform of the initialization script, either WINDOWS or LINUX.
studioComponentInitializationScript_platform :: Lens' StudioComponentInitializationScript (Maybe LaunchProfilePlatform)

-- | The method to use when running the initialization script.
studioComponentInitializationScript_runContext :: Lens' StudioComponentInitializationScript (Maybe StudioComponentInitializationScriptRunContext)

-- | The version number of the protocol that is used by the launch profile.
--   The only valid version is "2021-03-31".
studioComponentInitializationScript_launchProfileProtocolVersion :: Lens' StudioComponentInitializationScript (Maybe Text)

-- | The unique identifier for a studio component resource.
studioComponentSummary_studioComponentId :: Lens' StudioComponentSummary (Maybe Text)

-- | The Unix epoch timestamp in seconds for when the resource was created.
studioComponentSummary_createdAt :: Lens' StudioComponentSummary (Maybe UTCTime)

-- | The user ID of the user that created the studio component.
studioComponentSummary_createdBy :: Lens' StudioComponentSummary (Maybe Text)

-- | The user ID of the user that most recently updated the resource.
studioComponentSummary_updatedBy :: Lens' StudioComponentSummary (Maybe Text)

-- | The specific subtype of a studio component.
studioComponentSummary_subtype :: Lens' StudioComponentSummary (Maybe StudioComponentSubtype)

-- | The name for the studio component.
studioComponentSummary_name :: Lens' StudioComponentSummary (Maybe Text)

-- | The Unix epoch timestamp in seconds for when the resource was updated.
studioComponentSummary_updatedAt :: Lens' StudioComponentSummary (Maybe UTCTime)

-- | The type of the studio component.
studioComponentSummary_type :: Lens' StudioComponentSummary (Maybe StudioComponentType)

-- | The description.
studioComponentSummary_description :: Lens' StudioComponentSummary (Maybe Text)

-- | The ARN for a KMS key that is used to encrypt studio data.
studioEncryptionConfiguration_keyArn :: Lens' StudioEncryptionConfiguration (Maybe Text)

-- | The type of KMS key that is used to encrypt studio data.
studioEncryptionConfiguration_keyType :: Lens' StudioEncryptionConfiguration StudioEncryptionConfigurationKeyType

-- | The ID of the identity store.
studioMembership_identityStoreId :: Lens' StudioMembership (Maybe Text)

-- | The principal ID.
studioMembership_principalId :: Lens' StudioMembership (Maybe Text)

-- | The persona.
studioMembership_persona :: Lens' StudioMembership (Maybe StudioPersona)


module Network.AWS.Nimble.Waiters


-- | Derived from API version <tt>2020-08-01</tt> of the AWS service
--   descriptions, licensed under Apache 2.0.
--   
--   Amazon Nimble Studio empowers creative studios to produce visual
--   effects, animation, and interactive content entirely in the cloud,
--   from storyboard sketch to final deliverable. Rapidly onboard and
--   collaborate with artists globally and create content faster with
--   access to virtual workstations, high-speed storage, and scalable
--   rendering across AWS’s global infrastructure.
module Network.AWS.Nimble

-- | API version <tt>2020-08-01</tt> of the Amazon NimbleStudio SDK
--   configuration.
defaultService :: Service

_ValidationException :: AsError a => Getting (First ServiceError) a ServiceError

_AccessDeniedException :: AsError a => Getting (First ServiceError) a ServiceError

_ConflictException :: AsError a => Getting (First ServiceError) a ServiceError

_ServiceQuotaExceededException :: AsError a => Getting (First ServiceError) a ServiceError

_ThrottlingException :: AsError a => Getting (First ServiceError) a ServiceError

_InternalServerErrorException :: AsError a => Getting (First ServiceError) a ServiceError

_ResourceNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Information about a launch profile membership.
--   
--   <i>See:</i> <a>newPutLaunchProfileMembers</a> smart constructor.
data PutLaunchProfileMembers
PutLaunchProfileMembers' :: Maybe Text -> Text -> NonEmpty NewLaunchProfileMember -> Text -> Text -> PutLaunchProfileMembers

-- | Create a value of <a>PutLaunchProfileMembers</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientToken:PutLaunchProfileMembers'</a>,
--   <a>putLaunchProfileMembers_clientToken</a> - To make an idempotent API
--   request using one of these actions, specify a client token in the
--   request. You should not reuse the same client token for other API
--   requests. If you retry a request that completed successfully using the
--   same client token and the same parameters, the retry succeeds without
--   performing any further actions. If you retry a successful request
--   using the same client token, but one or more of the parameters are
--   different, the retry fails with a ValidationException error.
--   
--   <a>$sel:studioId:PutLaunchProfileMembers'</a>,
--   <a>putLaunchProfileMembers_studioId</a> - The studio ID.
--   
--   <a>$sel:members:PutLaunchProfileMembers'</a>,
--   <a>putLaunchProfileMembers_members</a> - A list of members.
--   
--   <a>$sel:launchProfileId:PutLaunchProfileMembers'</a>,
--   <a>putLaunchProfileMembers_launchProfileId</a> - The launch profile
--   ID.
--   
--   <a>$sel:identityStoreId:PutLaunchProfileMembers'</a>,
--   <a>putLaunchProfileMembers_identityStoreId</a> - The ID of the
--   identity store.
newPutLaunchProfileMembers :: Text -> NonEmpty NewLaunchProfileMember -> Text -> Text -> PutLaunchProfileMembers

-- | <i>See:</i> <a>newPutLaunchProfileMembersResponse</a> smart
--   constructor.
data PutLaunchProfileMembersResponse
PutLaunchProfileMembersResponse' :: Int -> PutLaunchProfileMembersResponse

-- | Create a value of <a>PutLaunchProfileMembersResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:PutLaunchProfileMembersResponse'</a>,
--   <a>putLaunchProfileMembersResponse_httpStatus</a> - The response's
--   http status code.
newPutLaunchProfileMembersResponse :: Int -> PutLaunchProfileMembersResponse

-- | A collection of studio resources.
--   
--   <i>See:</i> <a>newCreateStudio</a> smart constructor.
data CreateStudio
CreateStudio' :: Maybe StudioEncryptionConfiguration -> Maybe Text -> Maybe (HashMap Text Text) -> Text -> Text -> Text -> Text -> CreateStudio

-- | Create a value of <a>CreateStudio</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:studioEncryptionConfiguration:CreateStudio'</a>,
--   <a>createStudio_studioEncryptionConfiguration</a> - The studio
--   encryption configuration.
--   
--   <a>$sel:clientToken:CreateStudio'</a>, <a>createStudio_clientToken</a>
--   - To make an idempotent API request using one of these actions,
--   specify a client token in the request. You should not reuse the same
--   client token for other API requests. If you retry a request that
--   completed successfully using the same client token and the same
--   parameters, the retry succeeds without performing any further actions.
--   If you retry a successful request using the same client token, but one
--   or more of the parameters are different, the retry fails with a
--   ValidationException error.
--   
--   <a>$sel:tags:CreateStudio'</a>, <a>createStudio_tags</a> - A
--   collection of labels, in the form of key:value pairs, that apply to
--   this resource.
--   
--   <a>$sel:displayName:CreateStudio'</a>, <a>createStudio_displayName</a>
--   - A friendly name for the studio.
--   
--   <a>$sel:studioName:CreateStudio'</a>, <a>createStudio_studioName</a> -
--   The studio name that is used in the URL of the Nimble Studio portal
--   when accessed by Nimble Studio users.
--   
--   <a>$sel:userRoleArn:CreateStudio'</a>, <a>createStudio_userRoleArn</a>
--   - The IAM role that Studio Users will assume when logging in to the
--   Nimble Studio portal.
--   
--   <a>$sel:adminRoleArn:CreateStudio'</a>,
--   <a>createStudio_adminRoleArn</a> - The IAM role that Studio Admins
--   will assume when logging in to the Nimble Studio portal.
newCreateStudio :: Text -> Text -> Text -> Text -> CreateStudio

-- | <i>See:</i> <a>newCreateStudioResponse</a> smart constructor.
data CreateStudioResponse
CreateStudioResponse' :: Maybe Studio -> Int -> CreateStudioResponse

-- | Create a value of <a>CreateStudioResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:studio:CreateStudioResponse'</a>,
--   <a>createStudioResponse_studio</a> - Information about a studio.
--   
--   <a>$sel:httpStatus:CreateStudioResponse'</a>,
--   <a>createStudioResponse_httpStatus</a> - The response's http status
--   code.
newCreateStudioResponse :: Int -> CreateStudioResponse

-- | The principal ID.
--   
--   <i>See:</i> <a>newUpdateLaunchProfileMember</a> smart constructor.
data UpdateLaunchProfileMember
UpdateLaunchProfileMember' :: Maybe Text -> Text -> LaunchProfilePersona -> Text -> Text -> UpdateLaunchProfileMember

-- | Create a value of <a>UpdateLaunchProfileMember</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientToken:UpdateLaunchProfileMember'</a>,
--   <a>updateLaunchProfileMember_clientToken</a> - To make an idempotent
--   API request using one of these actions, specify a client token in the
--   request. You should not reuse the same client token for other API
--   requests. If you retry a request that completed successfully using the
--   same client token and the same parameters, the retry succeeds without
--   performing any further actions. If you retry a successful request
--   using the same client token, but one or more of the parameters are
--   different, the retry fails with a ValidationException error.
--   
--   <a>$sel:studioId:UpdateLaunchProfileMember'</a>,
--   <a>updateLaunchProfileMember_studioId</a> - The studio ID.
--   
--   <a>$sel:persona:UpdateLaunchProfileMember'</a>,
--   <a>updateLaunchProfileMember_persona</a> - The persona.
--   
--   <a>$sel:principalId:UpdateLaunchProfileMember'</a>,
--   <a>updateLaunchProfileMember_principalId</a> - The principal ID.
--   
--   <a>$sel:launchProfileId:UpdateLaunchProfileMember'</a>,
--   <a>updateLaunchProfileMember_launchProfileId</a> - The launch profile
--   ID.
newUpdateLaunchProfileMember :: Text -> LaunchProfilePersona -> Text -> Text -> UpdateLaunchProfileMember

-- | <i>See:</i> <a>newUpdateLaunchProfileMemberResponse</a> smart
--   constructor.
data UpdateLaunchProfileMemberResponse
UpdateLaunchProfileMemberResponse' :: Maybe LaunchProfileMembership -> Int -> UpdateLaunchProfileMemberResponse

-- | Create a value of <a>UpdateLaunchProfileMemberResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:member:UpdateLaunchProfileMemberResponse'</a>,
--   <a>updateLaunchProfileMemberResponse_member</a> - The member.
--   
--   <a>$sel:httpStatus:UpdateLaunchProfileMemberResponse'</a>,
--   <a>updateLaunchProfileMemberResponse_httpStatus</a> - The response's
--   http status code.
newUpdateLaunchProfileMemberResponse :: Int -> UpdateLaunchProfileMemberResponse

-- | <i>See:</i> <a>newDeleteLaunchProfileMember</a> smart constructor.
data DeleteLaunchProfileMember
DeleteLaunchProfileMember' :: Maybe Text -> Text -> Text -> Text -> DeleteLaunchProfileMember

-- | Create a value of <a>DeleteLaunchProfileMember</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientToken:DeleteLaunchProfileMember'</a>,
--   <a>deleteLaunchProfileMember_clientToken</a> - To make an idempotent
--   API request using one of these actions, specify a client token in the
--   request. You should not reuse the same client token for other API
--   requests. If you retry a request that completed successfully using the
--   same client token and the same parameters, the retry succeeds without
--   performing any further actions. If you retry a successful request
--   using the same client token, but one or more of the parameters are
--   different, the retry fails with a ValidationException error.
--   
--   <a>$sel:studioId:DeleteLaunchProfileMember'</a>,
--   <a>deleteLaunchProfileMember_studioId</a> - The studio ID.
--   
--   <a>$sel:principalId:DeleteLaunchProfileMember'</a>,
--   <a>deleteLaunchProfileMember_principalId</a> - The principal ID.
--   
--   <a>$sel:launchProfileId:DeleteLaunchProfileMember'</a>,
--   <a>deleteLaunchProfileMember_launchProfileId</a> - The launch profile
--   ID.
newDeleteLaunchProfileMember :: Text -> Text -> Text -> DeleteLaunchProfileMember

-- | <i>See:</i> <a>newDeleteLaunchProfileMemberResponse</a> smart
--   constructor.
data DeleteLaunchProfileMemberResponse
DeleteLaunchProfileMemberResponse' :: Int -> DeleteLaunchProfileMemberResponse

-- | Create a value of <a>DeleteLaunchProfileMemberResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteLaunchProfileMemberResponse'</a>,
--   <a>deleteLaunchProfileMemberResponse_httpStatus</a> - The response's
--   http status code.
newDeleteLaunchProfileMemberResponse :: Int -> DeleteLaunchProfileMemberResponse

-- | <i>See:</i> <a>newListLaunchProfiles</a> smart constructor.
data ListLaunchProfiles
ListLaunchProfiles' :: Maybe [Text] -> Maybe Text -> Maybe Text -> Maybe Natural -> Text -> ListLaunchProfiles

-- | Create a value of <a>ListLaunchProfiles</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:states:ListLaunchProfiles'</a>,
--   <a>listLaunchProfiles_states</a> - A list of states.
--   
--   <a>$sel:principalId:ListLaunchProfiles'</a>,
--   <a>listLaunchProfiles_principalId</a> - The principal ID.
--   
--   <a>$sel:nextToken:ListLaunchProfiles'</a>,
--   <a>listLaunchProfiles_nextToken</a> - The token for the next set of
--   results, or null if there are no more results.
--   
--   <a>$sel:maxResults:ListLaunchProfiles'</a>,
--   <a>listLaunchProfiles_maxResults</a> - The maximum number of results
--   to be returned per request.
--   
--   <a>$sel:studioId:ListLaunchProfiles'</a>,
--   <a>listLaunchProfiles_studioId</a> - The studio ID.
newListLaunchProfiles :: Text -> ListLaunchProfiles

-- | <i>See:</i> <a>newListLaunchProfilesResponse</a> smart constructor.
data ListLaunchProfilesResponse
ListLaunchProfilesResponse' :: Maybe [LaunchProfile] -> Maybe Text -> Int -> ListLaunchProfilesResponse

-- | Create a value of <a>ListLaunchProfilesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:launchProfiles:ListLaunchProfilesResponse'</a>,
--   <a>listLaunchProfilesResponse_launchProfiles</a> - A collection of
--   launch profiles.
--   
--   <a>$sel:nextToken:ListLaunchProfiles'</a>,
--   <a>listLaunchProfilesResponse_nextToken</a> - The token for the next
--   set of results, or null if there are no more results.
--   
--   <a>$sel:httpStatus:ListLaunchProfilesResponse'</a>,
--   <a>listLaunchProfilesResponse_httpStatus</a> - The response's http
--   status code.
newListLaunchProfilesResponse :: Int -> ListLaunchProfilesResponse

-- | A collection of launch profiles.
--   
--   <i>See:</i> <a>newCreateLaunchProfile</a> smart constructor.
data CreateLaunchProfile
CreateLaunchProfile' :: Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> [Text] -> NonEmpty Text -> Text -> [Text] -> Text -> StreamConfigurationCreate -> CreateLaunchProfile

-- | Create a value of <a>CreateLaunchProfile</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientToken:CreateLaunchProfile'</a>,
--   <a>createLaunchProfile_clientToken</a> - To make an idempotent API
--   request using one of these actions, specify a client token in the
--   request. You should not reuse the same client token for other API
--   requests. If you retry a request that completed successfully using the
--   same client token and the same parameters, the retry succeeds without
--   performing any further actions. If you retry a successful request
--   using the same client token, but one or more of the parameters are
--   different, the retry fails with a ValidationException error.
--   
--   <a>$sel:description:CreateLaunchProfile'</a>,
--   <a>createLaunchProfile_description</a> - The description.
--   
--   <a>$sel:tags:CreateLaunchProfile'</a>, <a>createLaunchProfile_tags</a>
--   - A collection of labels, in the form of key:value pairs, that apply
--   to this resource.
--   
--   <a>$sel:ec2SubnetIds:CreateLaunchProfile'</a>,
--   <a>createLaunchProfile_ec2SubnetIds</a> -
--   
--   <a>$sel:studioComponentIds:CreateLaunchProfile'</a>,
--   <a>createLaunchProfile_studioComponentIds</a> - Unique identifiers for
--   a collection of studio components that can be used with this launch
--   profile.
--   
--   <a>$sel:studioId:CreateLaunchProfile'</a>,
--   <a>createLaunchProfile_studioId</a> - The studio ID.
--   
--   <a>$sel:launchProfileProtocolVersions:CreateLaunchProfile'</a>,
--   <a>createLaunchProfile_launchProfileProtocolVersions</a> - The version
--   number of the protocol that is used by the launch profile. The only
--   valid version is "2021-03-31".
--   
--   <a>$sel:name:CreateLaunchProfile'</a>, <a>createLaunchProfile_name</a>
--   - The name for the launch profile.
--   
--   <a>$sel:streamConfiguration:CreateLaunchProfile'</a>,
--   <a>createLaunchProfile_streamConfiguration</a> - A configuration for a
--   streaming session.
newCreateLaunchProfile :: NonEmpty Text -> Text -> Text -> StreamConfigurationCreate -> CreateLaunchProfile

-- | <i>See:</i> <a>newCreateLaunchProfileResponse</a> smart constructor.
data CreateLaunchProfileResponse
CreateLaunchProfileResponse' :: Maybe LaunchProfile -> Int -> CreateLaunchProfileResponse

-- | Create a value of <a>CreateLaunchProfileResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:launchProfile:CreateLaunchProfileResponse'</a>,
--   <a>createLaunchProfileResponse_launchProfile</a> - The launch profile.
--   
--   <a>$sel:httpStatus:CreateLaunchProfileResponse'</a>,
--   <a>createLaunchProfileResponse_httpStatus</a> - The response's http
--   status code.
newCreateLaunchProfileResponse :: Int -> CreateLaunchProfileResponse

-- | <i>See:</i> <a>newListStreamingImages</a> smart constructor.
data ListStreamingImages
ListStreamingImages' :: Maybe Text -> Maybe Text -> Text -> ListStreamingImages

-- | Create a value of <a>ListStreamingImages</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:owner:ListStreamingImages'</a>,
--   <a>listStreamingImages_owner</a> - The owner.
--   
--   <a>$sel:nextToken:ListStreamingImages'</a>,
--   <a>listStreamingImages_nextToken</a> - The token for the next set of
--   results, or null if there are no more results.
--   
--   <a>$sel:studioId:ListStreamingImages'</a>,
--   <a>listStreamingImages_studioId</a> - The studio ID.
newListStreamingImages :: Text -> ListStreamingImages

-- | <i>See:</i> <a>newListStreamingImagesResponse</a> smart constructor.
data ListStreamingImagesResponse
ListStreamingImagesResponse' :: Maybe [StreamingImage] -> Maybe Text -> Int -> ListStreamingImagesResponse

-- | Create a value of <a>ListStreamingImagesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:streamingImages:ListStreamingImagesResponse'</a>,
--   <a>listStreamingImagesResponse_streamingImages</a> - A collection of
--   streaming images.
--   
--   <a>$sel:nextToken:ListStreamingImages'</a>,
--   <a>listStreamingImagesResponse_nextToken</a> - The token for the next
--   set of results, or null if there are no more results.
--   
--   <a>$sel:httpStatus:ListStreamingImagesResponse'</a>,
--   <a>listStreamingImagesResponse_httpStatus</a> - The response's http
--   status code.
newListStreamingImagesResponse :: Int -> ListStreamingImagesResponse

-- | <i>See:</i> <a>newListTagsForResource</a> smart constructor.
data ListTagsForResource
ListTagsForResource' :: Text -> ListTagsForResource

-- | Create a value of <a>ListTagsForResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:ListTagsForResource'</a>,
--   <a>listTagsForResource_resourceArn</a> - The ARN of the target
--   resource for tagging operations.
newListTagsForResource :: Text -> ListTagsForResource

-- | <i>See:</i> <a>newListTagsForResourceResponse</a> smart constructor.
data ListTagsForResourceResponse
ListTagsForResourceResponse' :: Maybe (HashMap Text Text) -> Int -> ListTagsForResourceResponse

-- | Create a value of <a>ListTagsForResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_tags</a> - A collection of labels, in
--   the form of key:value pairs, that apply to this resource.
--   
--   <a>$sel:httpStatus:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_httpStatus</a> - The response's http
--   status code.
newListTagsForResourceResponse :: Int -> ListTagsForResourceResponse

-- | <i>See:</i> <a>newStartStudioSSOConfigurationRepair</a> smart
--   constructor.
data StartStudioSSOConfigurationRepair
StartStudioSSOConfigurationRepair' :: Maybe Text -> Text -> StartStudioSSOConfigurationRepair

-- | Create a value of <a>StartStudioSSOConfigurationRepair</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientToken:StartStudioSSOConfigurationRepair'</a>,
--   <a>startStudioSSOConfigurationRepair_clientToken</a> - To make an
--   idempotent API request using one of these actions, specify a client
--   token in the request. You should not reuse the same client token for
--   other API requests. If you retry a request that completed successfully
--   using the same client token and the same parameters, the retry
--   succeeds without performing any further actions. If you retry a
--   successful request using the same client token, but one or more of the
--   parameters are different, the retry fails with a ValidationException
--   error.
--   
--   <a>$sel:studioId:StartStudioSSOConfigurationRepair'</a>,
--   <a>startStudioSSOConfigurationRepair_studioId</a> - The studio ID.
newStartStudioSSOConfigurationRepair :: Text -> StartStudioSSOConfigurationRepair

-- | <i>See:</i> <a>newStartStudioSSOConfigurationRepairResponse</a> smart
--   constructor.
data StartStudioSSOConfigurationRepairResponse
StartStudioSSOConfigurationRepairResponse' :: Maybe Studio -> Int -> StartStudioSSOConfigurationRepairResponse

-- | Create a value of <a>StartStudioSSOConfigurationRepairResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:studio:StartStudioSSOConfigurationRepairResponse'</a>,
--   <a>startStudioSSOConfigurationRepairResponse_studio</a> - Information
--   about a studio.
--   
--   <a>$sel:httpStatus:StartStudioSSOConfigurationRepairResponse'</a>,
--   <a>startStudioSSOConfigurationRepairResponse_httpStatus</a> - The
--   response's http status code.
newStartStudioSSOConfigurationRepairResponse :: Int -> StartStudioSSOConfigurationRepairResponse

-- | <i>See:</i> <a>newGetLaunchProfileInitialization</a> smart
--   constructor.
data GetLaunchProfileInitialization
GetLaunchProfileInitialization' :: Text -> [Text] -> Text -> Text -> Text -> GetLaunchProfileInitialization

-- | Create a value of <a>GetLaunchProfileInitialization</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:studioId:GetLaunchProfileInitialization'</a>,
--   <a>getLaunchProfileInitialization_studioId</a> - The studio ID.
--   
--   
--   <a>$sel:launchProfileProtocolVersions:GetLaunchProfileInitialization'</a>,
--   <a>getLaunchProfileInitialization_launchProfileProtocolVersions</a> -
--   A collection of launch profile protocol versions.
--   
--   <a>$sel:launchPurpose:GetLaunchProfileInitialization'</a>,
--   <a>getLaunchProfileInitialization_launchPurpose</a> - The launch
--   purpose.
--   
--   <a>$sel:launchProfileId:GetLaunchProfileInitialization'</a>,
--   <a>getLaunchProfileInitialization_launchProfileId</a> - The launch
--   profile ID.
--   
--   <a>$sel:platform:GetLaunchProfileInitialization'</a>,
--   <a>getLaunchProfileInitialization_platform</a> - The platform.
newGetLaunchProfileInitialization :: Text -> Text -> Text -> Text -> GetLaunchProfileInitialization

-- | <i>See:</i> <a>newGetLaunchProfileInitializationResponse</a> smart
--   constructor.
data GetLaunchProfileInitializationResponse
GetLaunchProfileInitializationResponse' :: Maybe LaunchProfileInitialization -> Int -> GetLaunchProfileInitializationResponse

-- | Create a value of <a>GetLaunchProfileInitializationResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:launchProfileInitialization:GetLaunchProfileInitializationResponse'</a>,
--   <a>getLaunchProfileInitializationResponse_launchProfileInitialization</a>
--   - The launch profile initialization.
--   
--   <a>$sel:httpStatus:GetLaunchProfileInitializationResponse'</a>,
--   <a>getLaunchProfileInitializationResponse_httpStatus</a> - The
--   response's http status code.
newGetLaunchProfileInitializationResponse :: Int -> GetLaunchProfileInitializationResponse

-- | <i>See:</i> <a>newGetLaunchProfile</a> smart constructor.
data GetLaunchProfile
GetLaunchProfile' :: Text -> Text -> GetLaunchProfile

-- | Create a value of <a>GetLaunchProfile</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:studioId:GetLaunchProfile'</a>,
--   <a>getLaunchProfile_studioId</a> - The studio ID.
--   
--   <a>$sel:launchProfileId:GetLaunchProfile'</a>,
--   <a>getLaunchProfile_launchProfileId</a> - The launch profile ID.
newGetLaunchProfile :: Text -> Text -> GetLaunchProfile

-- | <i>See:</i> <a>newGetLaunchProfileResponse</a> smart constructor.
data GetLaunchProfileResponse
GetLaunchProfileResponse' :: Maybe LaunchProfile -> Int -> GetLaunchProfileResponse

-- | Create a value of <a>GetLaunchProfileResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:launchProfile:GetLaunchProfileResponse'</a>,
--   <a>getLaunchProfileResponse_launchProfile</a> - The launch profile.
--   
--   <a>$sel:httpStatus:GetLaunchProfileResponse'</a>,
--   <a>getLaunchProfileResponse_httpStatus</a> - The response's http
--   status code.
newGetLaunchProfileResponse :: Int -> GetLaunchProfileResponse

-- | The studio components.
--   
--   <i>See:</i> <a>newCreateStudioComponent</a> smart constructor.
data CreateStudioComponent
CreateStudioComponent' :: Maybe [StudioComponentInitializationScript] -> Maybe Text -> Maybe (NonEmpty Text) -> Maybe StudioComponentSubtype -> Maybe [ScriptParameterKeyValue] -> Maybe StudioComponentConfiguration -> Maybe Text -> Maybe (HashMap Text Text) -> Text -> Text -> StudioComponentType -> CreateStudioComponent

-- | Create a value of <a>CreateStudioComponent</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:initializationScripts:CreateStudioComponent'</a>,
--   <a>createStudioComponent_initializationScripts</a> - Initialization
--   scripts for studio components.
--   
--   <a>$sel:clientToken:CreateStudioComponent'</a>,
--   <a>createStudioComponent_clientToken</a> - To make an idempotent API
--   request using one of these actions, specify a client token in the
--   request. You should not reuse the same client token for other API
--   requests. If you retry a request that completed successfully using the
--   same client token and the same parameters, the retry succeeds without
--   performing any further actions. If you retry a successful request
--   using the same client token, but one or more of the parameters are
--   different, the retry fails with a ValidationException error.
--   
--   <a>$sel:ec2SecurityGroupIds:CreateStudioComponent'</a>,
--   <a>createStudioComponent_ec2SecurityGroupIds</a> - The EC2 security
--   groups that control access to the studio component.
--   
--   <a>$sel:subtype:CreateStudioComponent'</a>,
--   <a>createStudioComponent_subtype</a> - The specific subtype of a
--   studio component.
--   
--   <a>$sel:scriptParameters:CreateStudioComponent'</a>,
--   <a>createStudioComponent_scriptParameters</a> - Parameters for the
--   studio component scripts.
--   
--   <a>$sel:configuration:CreateStudioComponent'</a>,
--   <a>createStudioComponent_configuration</a> - The configuration of the
--   studio component, based on component type.
--   
--   <a>$sel:description:CreateStudioComponent'</a>,
--   <a>createStudioComponent_description</a> - The description.
--   
--   <a>$sel:tags:CreateStudioComponent'</a>,
--   <a>createStudioComponent_tags</a> - A collection of labels, in the
--   form of key:value pairs, that apply to this resource.
--   
--   <a>$sel:studioId:CreateStudioComponent'</a>,
--   <a>createStudioComponent_studioId</a> - The studio ID.
--   
--   <a>$sel:name:CreateStudioComponent'</a>,
--   <a>createStudioComponent_name</a> - The name for the studio component.
--   
--   <a>$sel:type':CreateStudioComponent'</a>,
--   <a>createStudioComponent_type</a> - The type of the studio component.
newCreateStudioComponent :: Text -> Text -> StudioComponentType -> CreateStudioComponent

-- | <i>See:</i> <a>newCreateStudioComponentResponse</a> smart constructor.
data CreateStudioComponentResponse
CreateStudioComponentResponse' :: Maybe StudioComponent -> Int -> CreateStudioComponentResponse

-- | Create a value of <a>CreateStudioComponentResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:studioComponent:CreateStudioComponentResponse'</a>,
--   <a>createStudioComponentResponse_studioComponent</a> - Information
--   about the studio component.
--   
--   <a>$sel:httpStatus:CreateStudioComponentResponse'</a>,
--   <a>createStudioComponentResponse_httpStatus</a> - The response's http
--   status code.
newCreateStudioComponentResponse :: Int -> CreateStudioComponentResponse

-- | <i>See:</i> <a>newGetEula</a> smart constructor.
data GetEula
GetEula' :: Text -> GetEula

-- | Create a value of <a>GetEula</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:eulaId:GetEula'</a>, <a>getEula_eulaId</a> - The EULA ID.
newGetEula :: Text -> GetEula

-- | <i>See:</i> <a>newGetEulaResponse</a> smart constructor.
data GetEulaResponse
GetEulaResponse' :: Maybe Eula -> Int -> GetEulaResponse

-- | Create a value of <a>GetEulaResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:eula:GetEulaResponse'</a>, <a>getEulaResponse_eula</a> - The
--   EULA.
--   
--   <a>$sel:httpStatus:GetEulaResponse'</a>,
--   <a>getEulaResponse_httpStatus</a> - The response's http status code.
newGetEulaResponse :: Int -> GetEulaResponse

-- | <i>See:</i> <a>newListStudioComponents</a> smart constructor.
data ListStudioComponents
ListStudioComponents' :: Maybe [Text] -> Maybe [Text] -> Maybe Text -> Maybe Natural -> Text -> ListStudioComponents

-- | Create a value of <a>ListStudioComponents</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:states:ListStudioComponents'</a>,
--   <a>listStudioComponents_states</a> - A list of states.
--   
--   <a>$sel:types:ListStudioComponents'</a>,
--   <a>listStudioComponents_types</a> - The types.
--   
--   <a>$sel:nextToken:ListStudioComponents'</a>,
--   <a>listStudioComponents_nextToken</a> - The token for the next set of
--   results, or null if there are no more results.
--   
--   <a>$sel:maxResults:ListStudioComponents'</a>,
--   <a>listStudioComponents_maxResults</a> - The maximum number of results
--   to be returned per request.
--   
--   <a>$sel:studioId:ListStudioComponents'</a>,
--   <a>listStudioComponents_studioId</a> - The studio ID.
newListStudioComponents :: Text -> ListStudioComponents

-- | <i>See:</i> <a>newListStudioComponentsResponse</a> smart constructor.
data ListStudioComponentsResponse
ListStudioComponentsResponse' :: Maybe [StudioComponent] -> Maybe Text -> Int -> ListStudioComponentsResponse

-- | Create a value of <a>ListStudioComponentsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:studioComponents:ListStudioComponentsResponse'</a>,
--   <a>listStudioComponentsResponse_studioComponents</a> - A collection of
--   studio components.
--   
--   <a>$sel:nextToken:ListStudioComponents'</a>,
--   <a>listStudioComponentsResponse_nextToken</a> - The token for the next
--   set of results, or null if there are no more results.
--   
--   <a>$sel:httpStatus:ListStudioComponentsResponse'</a>,
--   <a>listStudioComponentsResponse_httpStatus</a> - The response's http
--   status code.
newListStudioComponentsResponse :: Int -> ListStudioComponentsResponse

-- | A collection of EULA acceptances.
--   
--   <i>See:</i> <a>newAcceptEulas</a> smart constructor.
data AcceptEulas
AcceptEulas' :: Maybe Text -> Maybe [Text] -> Text -> AcceptEulas

-- | Create a value of <a>AcceptEulas</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientToken:AcceptEulas'</a>, <a>acceptEulas_clientToken</a> -
--   To make an idempotent API request using one of these actions, specify
--   a client token in the request. You should not reuse the same client
--   token for other API requests. If you retry a request that completed
--   successfully using the same client token and the same parameters, the
--   retry succeeds without performing any further actions. If you retry a
--   successful request using the same client token, but one or more of the
--   parameters are different, the retry fails with a ValidationException
--   error.
--   
--   <a>$sel:eulaIds:AcceptEulas'</a>, <a>acceptEulas_eulaIds</a> - The
--   EULA ID.
--   
--   <a>$sel:studioId:AcceptEulas'</a>, <a>acceptEulas_studioId</a> - The
--   studio ID.
newAcceptEulas :: Text -> AcceptEulas

-- | <i>See:</i> <a>newAcceptEulasResponse</a> smart constructor.
data AcceptEulasResponse
AcceptEulasResponse' :: Maybe [EulaAcceptance] -> Int -> AcceptEulasResponse

-- | Create a value of <a>AcceptEulasResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:eulaAcceptances:AcceptEulasResponse'</a>,
--   <a>acceptEulasResponse_eulaAcceptances</a> - A collection of EULA
--   acceptances.
--   
--   <a>$sel:httpStatus:AcceptEulasResponse'</a>,
--   <a>acceptEulasResponse_httpStatus</a> - The response's http status
--   code.
newAcceptEulasResponse :: Int -> AcceptEulasResponse

-- | A collection of streaming sessions.
--   
--   <i>See:</i> <a>newCreateStreamingSession</a> smart constructor.
data CreateStreamingSession
CreateStreamingSession' :: Maybe Text -> Maybe Text -> Maybe StreamingInstanceType -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Text -> CreateStreamingSession

-- | Create a value of <a>CreateStreamingSession</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ownedBy:CreateStreamingSession'</a>,
--   <a>createStreamingSession_ownedBy</a> - The user ID of the user that
--   owns the streaming session.
--   
--   <a>$sel:clientToken:CreateStreamingSession'</a>,
--   <a>createStreamingSession_clientToken</a> - To make an idempotent API
--   request using one of these actions, specify a client token in the
--   request. You should not reuse the same client token for other API
--   requests. If you retry a request that completed successfully using the
--   same client token and the same parameters, the retry succeeds without
--   performing any further actions. If you retry a successful request
--   using the same client token, but one or more of the parameters are
--   different, the retry fails with a ValidationException error.
--   
--   <a>$sel:ec2InstanceType:CreateStreamingSession'</a>,
--   <a>createStreamingSession_ec2InstanceType</a> - The EC2 Instance type
--   used for the streaming session.
--   
--   <a>$sel:launchProfileId:CreateStreamingSession'</a>,
--   <a>createStreamingSession_launchProfileId</a> - The launch profile ID.
--   
--   <a>$sel:streamingImageId:CreateStreamingSession'</a>,
--   <a>createStreamingSession_streamingImageId</a> - The ID of the
--   streaming image.
--   
--   <a>$sel:tags:CreateStreamingSession'</a>,
--   <a>createStreamingSession_tags</a> - A collection of labels, in the
--   form of key:value pairs, that apply to this resource.
--   
--   <a>$sel:studioId:CreateStreamingSession'</a>,
--   <a>createStreamingSession_studioId</a> - The studio ID.
newCreateStreamingSession :: Text -> CreateStreamingSession

-- | <i>See:</i> <a>newCreateStreamingSessionResponse</a> smart
--   constructor.
data CreateStreamingSessionResponse
CreateStreamingSessionResponse' :: Maybe StreamingSession -> Int -> CreateStreamingSessionResponse

-- | Create a value of <a>CreateStreamingSessionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:session:CreateStreamingSessionResponse'</a>,
--   <a>createStreamingSessionResponse_session</a> - The session.
--   
--   <a>$sel:httpStatus:CreateStreamingSessionResponse'</a>,
--   <a>createStreamingSessionResponse_httpStatus</a> - The response's http
--   status code.
newCreateStreamingSessionResponse :: Int -> CreateStreamingSessionResponse

-- | <i>See:</i> <a>newDeleteStudioComponent</a> smart constructor.
data DeleteStudioComponent
DeleteStudioComponent' :: Maybe Text -> Text -> Text -> DeleteStudioComponent

-- | Create a value of <a>DeleteStudioComponent</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientToken:DeleteStudioComponent'</a>,
--   <a>deleteStudioComponent_clientToken</a> - To make an idempotent API
--   request using one of these actions, specify a client token in the
--   request. You should not reuse the same client token for other API
--   requests. If you retry a request that completed successfully using the
--   same client token and the same parameters, the retry succeeds without
--   performing any further actions. If you retry a successful request
--   using the same client token, but one or more of the parameters are
--   different, the retry fails with a ValidationException error.
--   
--   <a>$sel:studioId:DeleteStudioComponent'</a>,
--   <a>deleteStudioComponent_studioId</a> - The studio ID.
--   
--   <a>$sel:studioComponentId:DeleteStudioComponent'</a>,
--   <a>deleteStudioComponent_studioComponentId</a> - The studio component
--   ID.
newDeleteStudioComponent :: Text -> Text -> DeleteStudioComponent

-- | <i>See:</i> <a>newDeleteStudioComponentResponse</a> smart constructor.
data DeleteStudioComponentResponse
DeleteStudioComponentResponse' :: Maybe StudioComponent -> Int -> DeleteStudioComponentResponse

-- | Create a value of <a>DeleteStudioComponentResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:studioComponent:DeleteStudioComponentResponse'</a>,
--   <a>deleteStudioComponentResponse_studioComponent</a> - Information
--   about the studio component.
--   
--   <a>$sel:httpStatus:DeleteStudioComponentResponse'</a>,
--   <a>deleteStudioComponentResponse_httpStatus</a> - The response's http
--   status code.
newDeleteStudioComponentResponse :: Int -> DeleteStudioComponentResponse

-- | The studio component ID.
--   
--   <i>See:</i> <a>newUpdateStudioComponent</a> smart constructor.
data UpdateStudioComponent
UpdateStudioComponent' :: Maybe [StudioComponentInitializationScript] -> Maybe Text -> Maybe (NonEmpty Text) -> Maybe StudioComponentSubtype -> Maybe Text -> Maybe [ScriptParameterKeyValue] -> Maybe StudioComponentType -> Maybe StudioComponentConfiguration -> Maybe Text -> Text -> Text -> UpdateStudioComponent

-- | Create a value of <a>UpdateStudioComponent</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:initializationScripts:UpdateStudioComponent'</a>,
--   <a>updateStudioComponent_initializationScripts</a> - Initialization
--   scripts for studio components.
--   
--   <a>$sel:clientToken:UpdateStudioComponent'</a>,
--   <a>updateStudioComponent_clientToken</a> - To make an idempotent API
--   request using one of these actions, specify a client token in the
--   request. You should not reuse the same client token for other API
--   requests. If you retry a request that completed successfully using the
--   same client token and the same parameters, the retry succeeds without
--   performing any further actions. If you retry a successful request
--   using the same client token, but one or more of the parameters are
--   different, the retry fails with a ValidationException error.
--   
--   <a>$sel:ec2SecurityGroupIds:UpdateStudioComponent'</a>,
--   <a>updateStudioComponent_ec2SecurityGroupIds</a> - The EC2 security
--   groups that control access to the studio component.
--   
--   <a>$sel:subtype:UpdateStudioComponent'</a>,
--   <a>updateStudioComponent_subtype</a> - The specific subtype of a
--   studio component.
--   
--   <a>$sel:name:UpdateStudioComponent'</a>,
--   <a>updateStudioComponent_name</a> - The name for the studio component.
--   
--   <a>$sel:scriptParameters:UpdateStudioComponent'</a>,
--   <a>updateStudioComponent_scriptParameters</a> - Parameters for the
--   studio component scripts.
--   
--   <a>$sel:type':UpdateStudioComponent'</a>,
--   <a>updateStudioComponent_type</a> - The type of the studio component.
--   
--   <a>$sel:configuration:UpdateStudioComponent'</a>,
--   <a>updateStudioComponent_configuration</a> - The configuration of the
--   studio component, based on component type.
--   
--   <a>$sel:description:UpdateStudioComponent'</a>,
--   <a>updateStudioComponent_description</a> - The description.
--   
--   <a>$sel:studioId:UpdateStudioComponent'</a>,
--   <a>updateStudioComponent_studioId</a> - The studio ID.
--   
--   <a>$sel:studioComponentId:UpdateStudioComponent'</a>,
--   <a>updateStudioComponent_studioComponentId</a> - The studio component
--   ID.
newUpdateStudioComponent :: Text -> Text -> UpdateStudioComponent

-- | <i>See:</i> <a>newUpdateStudioComponentResponse</a> smart constructor.
data UpdateStudioComponentResponse
UpdateStudioComponentResponse' :: Maybe StudioComponent -> Int -> UpdateStudioComponentResponse

-- | Create a value of <a>UpdateStudioComponentResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:studioComponent:UpdateStudioComponentResponse'</a>,
--   <a>updateStudioComponentResponse_studioComponent</a> - Information
--   about the studio component.
--   
--   <a>$sel:httpStatus:UpdateStudioComponentResponse'</a>,
--   <a>updateStudioComponentResponse_httpStatus</a> - The response's http
--   status code.
newUpdateStudioComponentResponse :: Int -> UpdateStudioComponentResponse

-- | <i>See:</i> <a>newGetStudioMember</a> smart constructor.
data GetStudioMember
GetStudioMember' :: Text -> Text -> GetStudioMember

-- | Create a value of <a>GetStudioMember</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:studioId:GetStudioMember'</a>, <a>getStudioMember_studioId</a>
--   - The studio ID.
--   
--   <a>$sel:principalId:GetStudioMember'</a>,
--   <a>getStudioMember_principalId</a> - The principal ID.
newGetStudioMember :: Text -> Text -> GetStudioMember

-- | <i>See:</i> <a>newGetStudioMemberResponse</a> smart constructor.
data GetStudioMemberResponse
GetStudioMemberResponse' :: Maybe StudioMembership -> Int -> GetStudioMemberResponse

-- | Create a value of <a>GetStudioMemberResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:member:GetStudioMemberResponse'</a>,
--   <a>getStudioMemberResponse_member</a> - The member.
--   
--   <a>$sel:httpStatus:GetStudioMemberResponse'</a>,
--   <a>getStudioMemberResponse_httpStatus</a> - The response's http status
--   code.
newGetStudioMemberResponse :: Int -> GetStudioMemberResponse

-- | <i>See:</i> <a>newDeleteStudio</a> smart constructor.
data DeleteStudio
DeleteStudio' :: Maybe Text -> Text -> DeleteStudio

-- | Create a value of <a>DeleteStudio</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientToken:DeleteStudio'</a>, <a>deleteStudio_clientToken</a>
--   - To make an idempotent API request using one of these actions,
--   specify a client token in the request. You should not reuse the same
--   client token for other API requests. If you retry a request that
--   completed successfully using the same client token and the same
--   parameters, the retry succeeds without performing any further actions.
--   If you retry a successful request using the same client token, but one
--   or more of the parameters are different, the retry fails with a
--   ValidationException error.
--   
--   <a>$sel:studioId:DeleteStudio'</a>, <a>deleteStudio_studioId</a> - The
--   studio ID.
newDeleteStudio :: Text -> DeleteStudio

-- | <i>See:</i> <a>newDeleteStudioResponse</a> smart constructor.
data DeleteStudioResponse
DeleteStudioResponse' :: Maybe Studio -> Int -> DeleteStudioResponse

-- | Create a value of <a>DeleteStudioResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:studio:DeleteStudioResponse'</a>,
--   <a>deleteStudioResponse_studio</a> - Information about a studio.
--   
--   <a>$sel:httpStatus:DeleteStudioResponse'</a>,
--   <a>deleteStudioResponse_httpStatus</a> - The response's http status
--   code.
newDeleteStudioResponse :: Int -> DeleteStudioResponse

-- | The studio ID.
--   
--   <i>See:</i> <a>newUpdateStudio</a> smart constructor.
data UpdateStudio
UpdateStudio' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Text -> UpdateStudio

-- | Create a value of <a>UpdateStudio</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientToken:UpdateStudio'</a>, <a>updateStudio_clientToken</a>
--   - To make an idempotent API request using one of these actions,
--   specify a client token in the request. You should not reuse the same
--   client token for other API requests. If you retry a request that
--   completed successfully using the same client token and the same
--   parameters, the retry succeeds without performing any further actions.
--   If you retry a successful request using the same client token, but one
--   or more of the parameters are different, the retry fails with a
--   ValidationException error.
--   
--   <a>$sel:userRoleArn:UpdateStudio'</a>, <a>updateStudio_userRoleArn</a>
--   - The IAM role that Studio Users will assume when logging in to the
--   Nimble Studio portal.
--   
--   <a>$sel:displayName:UpdateStudio'</a>, <a>updateStudio_displayName</a>
--   - A friendly name for the studio.
--   
--   <a>$sel:adminRoleArn:UpdateStudio'</a>,
--   <a>updateStudio_adminRoleArn</a> - The IAM role that Studio Admins
--   will assume when logging in to the Nimble Studio portal.
--   
--   <a>$sel:studioId:UpdateStudio'</a>, <a>updateStudio_studioId</a> - The
--   studio ID.
newUpdateStudio :: Text -> UpdateStudio

-- | <i>See:</i> <a>newUpdateStudioResponse</a> smart constructor.
data UpdateStudioResponse
UpdateStudioResponse' :: Maybe Studio -> Int -> UpdateStudioResponse

-- | Create a value of <a>UpdateStudioResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:studio:UpdateStudioResponse'</a>,
--   <a>updateStudioResponse_studio</a> - Information about a studio.
--   
--   <a>$sel:httpStatus:UpdateStudioResponse'</a>,
--   <a>updateStudioResponse_httpStatus</a> - The response's http status
--   code.
newUpdateStudioResponse :: Int -> UpdateStudioResponse

-- | <i>See:</i> <a>newListStudios</a> smart constructor.
data ListStudios
ListStudios' :: Maybe Text -> ListStudios

-- | Create a value of <a>ListStudios</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListStudios'</a>, <a>listStudios_nextToken</a> - The
--   token for the next set of results, or null if there are no more
--   results.
newListStudios :: ListStudios

-- | <i>See:</i> <a>newListStudiosResponse</a> smart constructor.
data ListStudiosResponse
ListStudiosResponse' :: Maybe [Studio] -> Maybe Text -> Int -> ListStudiosResponse

-- | Create a value of <a>ListStudiosResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:studios:ListStudiosResponse'</a>,
--   <a>listStudiosResponse_studios</a> - A collection of studios.
--   
--   <a>$sel:nextToken:ListStudios'</a>,
--   <a>listStudiosResponse_nextToken</a> - The token for the next set of
--   results, or null if there are no more results.
--   
--   <a>$sel:httpStatus:ListStudiosResponse'</a>,
--   <a>listStudiosResponse_httpStatus</a> - The response's http status
--   code.
newListStudiosResponse :: Int -> ListStudiosResponse

-- | <i>See:</i> <a>newGetStudioComponent</a> smart constructor.
data GetStudioComponent
GetStudioComponent' :: Text -> Text -> GetStudioComponent

-- | Create a value of <a>GetStudioComponent</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:studioId:GetStudioComponent'</a>,
--   <a>getStudioComponent_studioId</a> - The studio ID.
--   
--   <a>$sel:studioComponentId:GetStudioComponent'</a>,
--   <a>getStudioComponent_studioComponentId</a> - The studio component ID.
newGetStudioComponent :: Text -> Text -> GetStudioComponent

-- | <i>See:</i> <a>newGetStudioComponentResponse</a> smart constructor.
data GetStudioComponentResponse
GetStudioComponentResponse' :: Maybe StudioComponent -> Int -> GetStudioComponentResponse

-- | Create a value of <a>GetStudioComponentResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:studioComponent:GetStudioComponentResponse'</a>,
--   <a>getStudioComponentResponse_studioComponent</a> - Information about
--   the studio component.
--   
--   <a>$sel:httpStatus:GetStudioComponentResponse'</a>,
--   <a>getStudioComponentResponse_httpStatus</a> - The response's http
--   status code.
newGetStudioComponentResponse :: Int -> GetStudioComponentResponse

-- | <i>See:</i> <a>newListEulas</a> smart constructor.
data ListEulas
ListEulas' :: Maybe Text -> Maybe [Text] -> ListEulas

-- | Create a value of <a>ListEulas</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListEulas'</a>, <a>listEulas_nextToken</a> - The
--   token for the next set of results, or null if there are no more
--   results.
--   
--   <a>$sel:eulaIds:ListEulas'</a>, <a>listEulas_eulaIds</a> - A
--   collection of EULA IDs.
newListEulas :: ListEulas

-- | <i>See:</i> <a>newListEulasResponse</a> smart constructor.
data ListEulasResponse
ListEulasResponse' :: Maybe [Eula] -> Maybe Text -> Int -> ListEulasResponse

-- | Create a value of <a>ListEulasResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:eulas:ListEulasResponse'</a>, <a>listEulasResponse_eulas</a> -
--   A collection of EULA resources.
--   
--   <a>$sel:nextToken:ListEulas'</a>, <a>listEulasResponse_nextToken</a> -
--   The token for the next set of results, or null if there are no more
--   results.
--   
--   <a>$sel:httpStatus:ListEulasResponse'</a>,
--   <a>listEulasResponse_httpStatus</a> - The response's http status code.
newListEulasResponse :: Int -> ListEulasResponse

-- | <i>See:</i> <a>newGetStreamingSession</a> smart constructor.
data GetStreamingSession
GetStreamingSession' :: Text -> Text -> GetStreamingSession

-- | Create a value of <a>GetStreamingSession</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:studioId:GetStreamingSession'</a>,
--   <a>getStreamingSession_studioId</a> - The studio ID.
--   
--   <a>$sel:sessionId:GetStreamingSession'</a>,
--   <a>getStreamingSession_sessionId</a> - The session ID.
newGetStreamingSession :: Text -> Text -> GetStreamingSession

-- | <i>See:</i> <a>newGetStreamingSessionResponse</a> smart constructor.
data GetStreamingSessionResponse
GetStreamingSessionResponse' :: Maybe StreamingSession -> Int -> GetStreamingSessionResponse

-- | Create a value of <a>GetStreamingSessionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:session:GetStreamingSessionResponse'</a>,
--   <a>getStreamingSessionResponse_session</a> - The session.
--   
--   <a>$sel:httpStatus:GetStreamingSessionResponse'</a>,
--   <a>getStreamingSessionResponse_httpStatus</a> - The response's http
--   status code.
newGetStreamingSessionResponse :: Int -> GetStreamingSessionResponse

-- | <i>See:</i> <a>newListLaunchProfileMembers</a> smart constructor.
data ListLaunchProfileMembers
ListLaunchProfileMembers' :: Maybe Text -> Maybe Natural -> Text -> Text -> ListLaunchProfileMembers

-- | Create a value of <a>ListLaunchProfileMembers</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListLaunchProfileMembers'</a>,
--   <a>listLaunchProfileMembers_nextToken</a> - The token for the next set
--   of results, or null if there are no more results.
--   
--   <a>$sel:maxResults:ListLaunchProfileMembers'</a>,
--   <a>listLaunchProfileMembers_maxResults</a> - The maximum number of
--   results to be returned per request.
--   
--   <a>$sel:studioId:ListLaunchProfileMembers'</a>,
--   <a>listLaunchProfileMembers_studioId</a> - The studio ID.
--   
--   <a>$sel:launchProfileId:ListLaunchProfileMembers'</a>,
--   <a>listLaunchProfileMembers_launchProfileId</a> - The launch profile
--   ID.
newListLaunchProfileMembers :: Text -> Text -> ListLaunchProfileMembers

-- | <i>See:</i> <a>newListLaunchProfileMembersResponse</a> smart
--   constructor.
data ListLaunchProfileMembersResponse
ListLaunchProfileMembersResponse' :: Maybe [LaunchProfileMembership] -> Maybe Text -> Int -> ListLaunchProfileMembersResponse

-- | Create a value of <a>ListLaunchProfileMembersResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:members:ListLaunchProfileMembersResponse'</a>,
--   <a>listLaunchProfileMembersResponse_members</a> - A list of members.
--   
--   <a>$sel:nextToken:ListLaunchProfileMembers'</a>,
--   <a>listLaunchProfileMembersResponse_nextToken</a> - The token for the
--   next set of results, or null if there are no more results.
--   
--   <a>$sel:httpStatus:ListLaunchProfileMembersResponse'</a>,
--   <a>listLaunchProfileMembersResponse_httpStatus</a> - The response's
--   http status code.
newListLaunchProfileMembersResponse :: Int -> ListLaunchProfileMembersResponse

-- | <i>See:</i> <a>newDeleteLaunchProfile</a> smart constructor.
data DeleteLaunchProfile
DeleteLaunchProfile' :: Maybe Text -> Text -> Text -> DeleteLaunchProfile

-- | Create a value of <a>DeleteLaunchProfile</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientToken:DeleteLaunchProfile'</a>,
--   <a>deleteLaunchProfile_clientToken</a> - To make an idempotent API
--   request using one of these actions, specify a client token in the
--   request. You should not reuse the same client token for other API
--   requests. If you retry a request that completed successfully using the
--   same client token and the same parameters, the retry succeeds without
--   performing any further actions. If you retry a successful request
--   using the same client token, but one or more of the parameters are
--   different, the retry fails with a ValidationException error.
--   
--   <a>$sel:studioId:DeleteLaunchProfile'</a>,
--   <a>deleteLaunchProfile_studioId</a> - The studio ID.
--   
--   <a>$sel:launchProfileId:DeleteLaunchProfile'</a>,
--   <a>deleteLaunchProfile_launchProfileId</a> - The launch profile ID.
newDeleteLaunchProfile :: Text -> Text -> DeleteLaunchProfile

-- | <i>See:</i> <a>newDeleteLaunchProfileResponse</a> smart constructor.
data DeleteLaunchProfileResponse
DeleteLaunchProfileResponse' :: Maybe LaunchProfile -> Int -> DeleteLaunchProfileResponse

-- | Create a value of <a>DeleteLaunchProfileResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:launchProfile:DeleteLaunchProfileResponse'</a>,
--   <a>deleteLaunchProfileResponse_launchProfile</a> - The launch profile.
--   
--   <a>$sel:httpStatus:DeleteLaunchProfileResponse'</a>,
--   <a>deleteLaunchProfileResponse_httpStatus</a> - The response's http
--   status code.
newDeleteLaunchProfileResponse :: Int -> DeleteLaunchProfileResponse

-- | The launch profile ID.
--   
--   <i>See:</i> <a>newUpdateLaunchProfile</a> smart constructor.
data UpdateLaunchProfile
UpdateLaunchProfile' :: Maybe Text -> Maybe [Text] -> Maybe StreamConfigurationCreate -> Maybe Text -> Maybe Text -> Maybe (NonEmpty Text) -> Text -> Text -> UpdateLaunchProfile

-- | Create a value of <a>UpdateLaunchProfile</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientToken:UpdateLaunchProfile'</a>,
--   <a>updateLaunchProfile_clientToken</a> - To make an idempotent API
--   request using one of these actions, specify a client token in the
--   request. You should not reuse the same client token for other API
--   requests. If you retry a request that completed successfully using the
--   same client token and the same parameters, the retry succeeds without
--   performing any further actions. If you retry a successful request
--   using the same client token, but one or more of the parameters are
--   different, the retry fails with a ValidationException error.
--   
--   <a>$sel:launchProfileProtocolVersions:UpdateLaunchProfile'</a>,
--   <a>updateLaunchProfile_launchProfileProtocolVersions</a> - The version
--   number of the protocol that is used by the launch profile. The only
--   valid version is "2021-03-31".
--   
--   <a>$sel:streamConfiguration:UpdateLaunchProfile'</a>,
--   <a>updateLaunchProfile_streamConfiguration</a> - A configuration for a
--   streaming session.
--   
--   <a>$sel:name:UpdateLaunchProfile'</a>, <a>updateLaunchProfile_name</a>
--   - The name for the launch profile.
--   
--   <a>$sel:description:UpdateLaunchProfile'</a>,
--   <a>updateLaunchProfile_description</a> - The description.
--   
--   <a>$sel:studioComponentIds:UpdateLaunchProfile'</a>,
--   <a>updateLaunchProfile_studioComponentIds</a> - Unique identifiers for
--   a collection of studio components that can be used with this launch
--   profile.
--   
--   <a>$sel:studioId:UpdateLaunchProfile'</a>,
--   <a>updateLaunchProfile_studioId</a> - The studio ID.
--   
--   <a>$sel:launchProfileId:UpdateLaunchProfile'</a>,
--   <a>updateLaunchProfile_launchProfileId</a> - The launch profile ID.
newUpdateLaunchProfile :: Text -> Text -> UpdateLaunchProfile

-- | <i>See:</i> <a>newUpdateLaunchProfileResponse</a> smart constructor.
data UpdateLaunchProfileResponse
UpdateLaunchProfileResponse' :: Maybe LaunchProfile -> Int -> UpdateLaunchProfileResponse

-- | Create a value of <a>UpdateLaunchProfileResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:launchProfile:UpdateLaunchProfileResponse'</a>,
--   <a>updateLaunchProfileResponse_launchProfile</a> - The launch profile.
--   
--   <a>$sel:httpStatus:UpdateLaunchProfileResponse'</a>,
--   <a>updateLaunchProfileResponse_httpStatus</a> - The response's http
--   status code.
newUpdateLaunchProfileResponse :: Int -> UpdateLaunchProfileResponse

-- | A collection of streaming images.
--   
--   <i>See:</i> <a>newCreateStreamingImage</a> smart constructor.
data CreateStreamingImage
CreateStreamingImage' :: Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Text -> Text -> Text -> CreateStreamingImage

-- | Create a value of <a>CreateStreamingImage</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientToken:CreateStreamingImage'</a>,
--   <a>createStreamingImage_clientToken</a> - To make an idempotent API
--   request using one of these actions, specify a client token in the
--   request. You should not reuse the same client token for other API
--   requests. If you retry a request that completed successfully using the
--   same client token and the same parameters, the retry succeeds without
--   performing any further actions. If you retry a successful request
--   using the same client token, but one or more of the parameters are
--   different, the retry fails with a ValidationException error.
--   
--   <a>$sel:description:CreateStreamingImage'</a>,
--   <a>createStreamingImage_description</a> - A human-readable description
--   of the streaming image.
--   
--   <a>$sel:tags:CreateStreamingImage'</a>,
--   <a>createStreamingImage_tags</a> - A collection of labels, in the form
--   of key:value pairs, that apply to this resource.
--   
--   <a>$sel:studioId:CreateStreamingImage'</a>,
--   <a>createStreamingImage_studioId</a> - The studio ID.
--   
--   <a>$sel:name:CreateStreamingImage'</a>,
--   <a>createStreamingImage_name</a> - A friendly name for a streaming
--   image resource.
--   
--   <a>$sel:ec2ImageId:CreateStreamingImage'</a>,
--   <a>createStreamingImage_ec2ImageId</a> - The ID of an EC2 machine
--   image with which to create this streaming image.
newCreateStreamingImage :: Text -> Text -> Text -> CreateStreamingImage

-- | <i>See:</i> <a>newCreateStreamingImageResponse</a> smart constructor.
data CreateStreamingImageResponse
CreateStreamingImageResponse' :: Maybe StreamingImage -> Int -> CreateStreamingImageResponse

-- | Create a value of <a>CreateStreamingImageResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:streamingImage:CreateStreamingImageResponse'</a>,
--   <a>createStreamingImageResponse_streamingImage</a> -
--   
--   <a>$sel:httpStatus:CreateStreamingImageResponse'</a>,
--   <a>createStreamingImageResponse_httpStatus</a> - The response's http
--   status code.
newCreateStreamingImageResponse :: Int -> CreateStreamingImageResponse

-- | A list collection streams.
--   
--   <i>See:</i> <a>newCreateStreamingSessionStream</a> smart constructor.
data CreateStreamingSessionStream
CreateStreamingSessionStream' :: Maybe Natural -> Maybe Text -> Text -> Text -> CreateStreamingSessionStream

-- | Create a value of <a>CreateStreamingSessionStream</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:expirationInSeconds:CreateStreamingSessionStream'</a>,
--   <a>createStreamingSessionStream_expirationInSeconds</a> - The
--   expiration time in seconds.
--   
--   <a>$sel:clientToken:CreateStreamingSessionStream'</a>,
--   <a>createStreamingSessionStream_clientToken</a> - To make an
--   idempotent API request using one of these actions, specify a client
--   token in the request. You should not reuse the same client token for
--   other API requests. If you retry a request that completed successfully
--   using the same client token and the same parameters, the retry
--   succeeds without performing any further actions. If you retry a
--   successful request using the same client token, but one or more of the
--   parameters are different, the retry fails with a ValidationException
--   error.
--   
--   <a>$sel:studioId:CreateStreamingSessionStream'</a>,
--   <a>createStreamingSessionStream_studioId</a> - The studio ID.
--   
--   <a>$sel:sessionId:CreateStreamingSessionStream'</a>,
--   <a>createStreamingSessionStream_sessionId</a> - The session ID.
newCreateStreamingSessionStream :: Text -> Text -> CreateStreamingSessionStream

-- | <i>See:</i> <a>newCreateStreamingSessionStreamResponse</a> smart
--   constructor.
data CreateStreamingSessionStreamResponse
CreateStreamingSessionStreamResponse' :: Maybe StreamingSessionStream -> Int -> CreateStreamingSessionStreamResponse

-- | Create a value of <a>CreateStreamingSessionStreamResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:stream:CreateStreamingSessionStreamResponse'</a>,
--   <a>createStreamingSessionStreamResponse_stream</a> - The stream.
--   
--   <a>$sel:httpStatus:CreateStreamingSessionStreamResponse'</a>,
--   <a>createStreamingSessionStreamResponse_httpStatus</a> - The
--   response's http status code.
newCreateStreamingSessionStreamResponse :: Int -> CreateStreamingSessionStreamResponse

-- | <i>See:</i> <a>newGetLaunchProfileDetails</a> smart constructor.
data GetLaunchProfileDetails
GetLaunchProfileDetails' :: Text -> Text -> GetLaunchProfileDetails

-- | Create a value of <a>GetLaunchProfileDetails</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:studioId:GetLaunchProfileDetails'</a>,
--   <a>getLaunchProfileDetails_studioId</a> - The studio ID.
--   
--   <a>$sel:launchProfileId:GetLaunchProfileDetails'</a>,
--   <a>getLaunchProfileDetails_launchProfileId</a> - The launch profile
--   ID.
newGetLaunchProfileDetails :: Text -> Text -> GetLaunchProfileDetails

-- | <i>See:</i> <a>newGetLaunchProfileDetailsResponse</a> smart
--   constructor.
data GetLaunchProfileDetailsResponse
GetLaunchProfileDetailsResponse' :: Maybe [StreamingImage] -> Maybe LaunchProfile -> Maybe [StudioComponentSummary] -> Int -> GetLaunchProfileDetailsResponse

-- | Create a value of <a>GetLaunchProfileDetailsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:streamingImages:GetLaunchProfileDetailsResponse'</a>,
--   <a>getLaunchProfileDetailsResponse_streamingImages</a> - A collection
--   of streaming images.
--   
--   <a>$sel:launchProfile:GetLaunchProfileDetailsResponse'</a>,
--   <a>getLaunchProfileDetailsResponse_launchProfile</a> - The launch
--   profile.
--   
--   <a>$sel:studioComponentSummaries:GetLaunchProfileDetailsResponse'</a>,
--   <a>getLaunchProfileDetailsResponse_studioComponentSummaries</a> - A
--   collection of studio component summaries.
--   
--   <a>$sel:httpStatus:GetLaunchProfileDetailsResponse'</a>,
--   <a>getLaunchProfileDetailsResponse_httpStatus</a> - The response's
--   http status code.
newGetLaunchProfileDetailsResponse :: Int -> GetLaunchProfileDetailsResponse

-- | A launch profile membership collection.
--   
--   <i>See:</i> <a>newPutStudioMembers</a> smart constructor.
data PutStudioMembers
PutStudioMembers' :: Maybe Text -> Text -> NonEmpty NewStudioMember -> Text -> PutStudioMembers

-- | Create a value of <a>PutStudioMembers</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientToken:PutStudioMembers'</a>,
--   <a>putStudioMembers_clientToken</a> - To make an idempotent API
--   request using one of these actions, specify a client token in the
--   request. You should not reuse the same client token for other API
--   requests. If you retry a request that completed successfully using the
--   same client token and the same parameters, the retry succeeds without
--   performing any further actions. If you retry a successful request
--   using the same client token, but one or more of the parameters are
--   different, the retry fails with a ValidationException error.
--   
--   <a>$sel:studioId:PutStudioMembers'</a>,
--   <a>putStudioMembers_studioId</a> - The studio ID.
--   
--   <a>$sel:members:PutStudioMembers'</a>, <a>putStudioMembers_members</a>
--   - A list of members.
--   
--   <a>$sel:identityStoreId:PutStudioMembers'</a>,
--   <a>putStudioMembers_identityStoreId</a> - The ID of the identity
--   store.
newPutStudioMembers :: Text -> NonEmpty NewStudioMember -> Text -> PutStudioMembers

-- | <i>See:</i> <a>newPutStudioMembersResponse</a> smart constructor.
data PutStudioMembersResponse
PutStudioMembersResponse' :: Int -> PutStudioMembersResponse

-- | Create a value of <a>PutStudioMembersResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:PutStudioMembersResponse'</a>,
--   <a>putStudioMembersResponse_httpStatus</a> - The response's http
--   status code.
newPutStudioMembersResponse :: Int -> PutStudioMembersResponse

-- | <i>See:</i> <a>newDeleteStreamingImage</a> smart constructor.
data DeleteStreamingImage
DeleteStreamingImage' :: Maybe Text -> Text -> Text -> DeleteStreamingImage

-- | Create a value of <a>DeleteStreamingImage</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientToken:DeleteStreamingImage'</a>,
--   <a>deleteStreamingImage_clientToken</a> - To make an idempotent API
--   request using one of these actions, specify a client token in the
--   request. You should not reuse the same client token for other API
--   requests. If you retry a request that completed successfully using the
--   same client token and the same parameters, the retry succeeds without
--   performing any further actions. If you retry a successful request
--   using the same client token, but one or more of the parameters are
--   different, the retry fails with a ValidationException error.
--   
--   <a>$sel:studioId:DeleteStreamingImage'</a>,
--   <a>deleteStreamingImage_studioId</a> - The studio ID.
--   
--   <a>$sel:streamingImageId:DeleteStreamingImage'</a>,
--   <a>deleteStreamingImage_streamingImageId</a> - The streaming image ID.
newDeleteStreamingImage :: Text -> Text -> DeleteStreamingImage

-- | <i>See:</i> <a>newDeleteStreamingImageResponse</a> smart constructor.
data DeleteStreamingImageResponse
DeleteStreamingImageResponse' :: Maybe StreamingImage -> Int -> DeleteStreamingImageResponse

-- | Create a value of <a>DeleteStreamingImageResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:streamingImage:DeleteStreamingImageResponse'</a>,
--   <a>deleteStreamingImageResponse_streamingImage</a> - The streaming
--   image.
--   
--   <a>$sel:httpStatus:DeleteStreamingImageResponse'</a>,
--   <a>deleteStreamingImageResponse_httpStatus</a> - The response's http
--   status code.
newDeleteStreamingImageResponse :: Int -> DeleteStreamingImageResponse

-- | The streaming image ID.
--   
--   <i>See:</i> <a>newUpdateStreamingImage</a> smart constructor.
data UpdateStreamingImage
UpdateStreamingImage' :: Maybe Text -> Maybe Text -> Maybe Text -> Text -> Text -> UpdateStreamingImage

-- | Create a value of <a>UpdateStreamingImage</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientToken:UpdateStreamingImage'</a>,
--   <a>updateStreamingImage_clientToken</a> - To make an idempotent API
--   request using one of these actions, specify a client token in the
--   request. You should not reuse the same client token for other API
--   requests. If you retry a request that completed successfully using the
--   same client token and the same parameters, the retry succeeds without
--   performing any further actions. If you retry a successful request
--   using the same client token, but one or more of the parameters are
--   different, the retry fails with a ValidationException error.
--   
--   <a>$sel:name:UpdateStreamingImage'</a>,
--   <a>updateStreamingImage_name</a> - The name for the streaming image.
--   
--   <a>$sel:description:UpdateStreamingImage'</a>,
--   <a>updateStreamingImage_description</a> - The description.
--   
--   <a>$sel:studioId:UpdateStreamingImage'</a>,
--   <a>updateStreamingImage_studioId</a> - The studio ID.
--   
--   <a>$sel:streamingImageId:UpdateStreamingImage'</a>,
--   <a>updateStreamingImage_streamingImageId</a> - The streaming image ID.
newUpdateStreamingImage :: Text -> Text -> UpdateStreamingImage

-- | <i>See:</i> <a>newUpdateStreamingImageResponse</a> smart constructor.
data UpdateStreamingImageResponse
UpdateStreamingImageResponse' :: Maybe StreamingImage -> Int -> UpdateStreamingImageResponse

-- | Create a value of <a>UpdateStreamingImageResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:streamingImage:UpdateStreamingImageResponse'</a>,
--   <a>updateStreamingImageResponse_streamingImage</a> -
--   
--   <a>$sel:httpStatus:UpdateStreamingImageResponse'</a>,
--   <a>updateStreamingImageResponse_httpStatus</a> - The response's http
--   status code.
newUpdateStreamingImageResponse :: Int -> UpdateStreamingImageResponse

-- | <i>See:</i> <a>newGetStreamingImage</a> smart constructor.
data GetStreamingImage
GetStreamingImage' :: Text -> Text -> GetStreamingImage

-- | Create a value of <a>GetStreamingImage</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:studioId:GetStreamingImage'</a>,
--   <a>getStreamingImage_studioId</a> - The studio ID.
--   
--   <a>$sel:streamingImageId:GetStreamingImage'</a>,
--   <a>getStreamingImage_streamingImageId</a> - The streaming image ID.
newGetStreamingImage :: Text -> Text -> GetStreamingImage

-- | <i>See:</i> <a>newGetStreamingImageResponse</a> smart constructor.
data GetStreamingImageResponse
GetStreamingImageResponse' :: Maybe StreamingImage -> Int -> GetStreamingImageResponse

-- | Create a value of <a>GetStreamingImageResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:streamingImage:GetStreamingImageResponse'</a>,
--   <a>getStreamingImageResponse_streamingImage</a> - The streaming image.
--   
--   <a>$sel:httpStatus:GetStreamingImageResponse'</a>,
--   <a>getStreamingImageResponse_httpStatus</a> - The response's http
--   status code.
newGetStreamingImageResponse :: Int -> GetStreamingImageResponse

-- | <i>See:</i> <a>newListEulaAcceptances</a> smart constructor.
data ListEulaAcceptances
ListEulaAcceptances' :: Maybe Text -> Maybe [Text] -> Text -> ListEulaAcceptances

-- | Create a value of <a>ListEulaAcceptances</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListEulaAcceptances'</a>,
--   <a>listEulaAcceptances_nextToken</a> - The token for the next set of
--   results, or null if there are no more results.
--   
--   <a>$sel:eulaIds:ListEulaAcceptances'</a>,
--   <a>listEulaAcceptances_eulaIds</a> - A collection of EULA IDs.
--   
--   <a>$sel:studioId:ListEulaAcceptances'</a>,
--   <a>listEulaAcceptances_studioId</a> - The studio ID.
newListEulaAcceptances :: Text -> ListEulaAcceptances

-- | <i>See:</i> <a>newListEulaAcceptancesResponse</a> smart constructor.
data ListEulaAcceptancesResponse
ListEulaAcceptancesResponse' :: Maybe Text -> Maybe [EulaAcceptance] -> Int -> ListEulaAcceptancesResponse

-- | Create a value of <a>ListEulaAcceptancesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListEulaAcceptances'</a>,
--   <a>listEulaAcceptancesResponse_nextToken</a> - The token for the next
--   set of results, or null if there are no more results.
--   
--   <a>$sel:eulaAcceptances:ListEulaAcceptancesResponse'</a>,
--   <a>listEulaAcceptancesResponse_eulaAcceptances</a> - A collection of
--   EULA acceptances.
--   
--   <a>$sel:httpStatus:ListEulaAcceptancesResponse'</a>,
--   <a>listEulaAcceptancesResponse_httpStatus</a> - The response's http
--   status code.
newListEulaAcceptancesResponse :: Int -> ListEulaAcceptancesResponse

-- | <i>See:</i> <a>newGetStreamingSessionStream</a> smart constructor.
data GetStreamingSessionStream
GetStreamingSessionStream' :: Text -> Text -> Text -> GetStreamingSessionStream

-- | Create a value of <a>GetStreamingSessionStream</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:studioId:GetStreamingSessionStream'</a>,
--   <a>getStreamingSessionStream_studioId</a> - The studio ID.
--   
--   <a>$sel:streamId:GetStreamingSessionStream'</a>,
--   <a>getStreamingSessionStream_streamId</a> - The stream ID.
--   
--   <a>$sel:sessionId:GetStreamingSessionStream'</a>,
--   <a>getStreamingSessionStream_sessionId</a> - The session ID.
newGetStreamingSessionStream :: Text -> Text -> Text -> GetStreamingSessionStream

-- | <i>See:</i> <a>newGetStreamingSessionStreamResponse</a> smart
--   constructor.
data GetStreamingSessionStreamResponse
GetStreamingSessionStreamResponse' :: Maybe StreamingSessionStream -> Int -> GetStreamingSessionStreamResponse

-- | Create a value of <a>GetStreamingSessionStreamResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:stream:GetStreamingSessionStreamResponse'</a>,
--   <a>getStreamingSessionStreamResponse_stream</a> - The stream.
--   
--   <a>$sel:httpStatus:GetStreamingSessionStreamResponse'</a>,
--   <a>getStreamingSessionStreamResponse_httpStatus</a> - The response's
--   http status code.
newGetStreamingSessionStreamResponse :: Int -> GetStreamingSessionStreamResponse

-- | The ARN for the role that manages access.
--   
--   <i>See:</i> <a>newTagResource</a> smart constructor.
data TagResource
TagResource' :: Maybe (HashMap Text Text) -> Text -> TagResource

-- | Create a value of <a>TagResource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:TagResource'</a>, <a>tagResource_tags</a> - A collection
--   of labels, in the form of key:value pairs, that apply to this
--   resource.
--   
--   <a>$sel:resourceArn:TagResource'</a>, <a>tagResource_resourceArn</a> -
--   The ARN of the target resource for tagging operations.
newTagResource :: Text -> TagResource

-- | <i>See:</i> <a>newTagResourceResponse</a> smart constructor.
data TagResourceResponse
TagResourceResponse' :: Int -> TagResourceResponse

-- | Create a value of <a>TagResourceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:TagResourceResponse'</a>,
--   <a>tagResourceResponse_httpStatus</a> - The response's http status
--   code.
newTagResourceResponse :: Int -> TagResourceResponse

-- | <i>See:</i> <a>newGetLaunchProfileMember</a> smart constructor.
data GetLaunchProfileMember
GetLaunchProfileMember' :: Text -> Text -> Text -> GetLaunchProfileMember

-- | Create a value of <a>GetLaunchProfileMember</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:studioId:GetLaunchProfileMember'</a>,
--   <a>getLaunchProfileMember_studioId</a> - The studio ID.
--   
--   <a>$sel:principalId:GetLaunchProfileMember'</a>,
--   <a>getLaunchProfileMember_principalId</a> - The principal ID.
--   
--   <a>$sel:launchProfileId:GetLaunchProfileMember'</a>,
--   <a>getLaunchProfileMember_launchProfileId</a> - The launch profile ID.
newGetLaunchProfileMember :: Text -> Text -> Text -> GetLaunchProfileMember

-- | <i>See:</i> <a>newGetLaunchProfileMemberResponse</a> smart
--   constructor.
data GetLaunchProfileMemberResponse
GetLaunchProfileMemberResponse' :: Maybe LaunchProfileMembership -> Int -> GetLaunchProfileMemberResponse

-- | Create a value of <a>GetLaunchProfileMemberResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:member:GetLaunchProfileMemberResponse'</a>,
--   <a>getLaunchProfileMemberResponse_member</a> - The member.
--   
--   <a>$sel:httpStatus:GetLaunchProfileMemberResponse'</a>,
--   <a>getLaunchProfileMemberResponse_httpStatus</a> - The response's http
--   status code.
newGetLaunchProfileMemberResponse :: Int -> GetLaunchProfileMemberResponse

-- | <i>See:</i> <a>newDeleteStreamingSession</a> smart constructor.
data DeleteStreamingSession
DeleteStreamingSession' :: Maybe Text -> Text -> Text -> DeleteStreamingSession

-- | Create a value of <a>DeleteStreamingSession</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientToken:DeleteStreamingSession'</a>,
--   <a>deleteStreamingSession_clientToken</a> - To make an idempotent API
--   request using one of these actions, specify a client token in the
--   request. You should not reuse the same client token for other API
--   requests. If you retry a request that completed successfully using the
--   same client token and the same parameters, the retry succeeds without
--   performing any further actions. If you retry a successful request
--   using the same client token, but one or more of the parameters are
--   different, the retry fails with a ValidationException error.
--   
--   <a>$sel:studioId:DeleteStreamingSession'</a>,
--   <a>deleteStreamingSession_studioId</a> - The studio ID.
--   
--   <a>$sel:sessionId:DeleteStreamingSession'</a>,
--   <a>deleteStreamingSession_sessionId</a> - The session ID.
newDeleteStreamingSession :: Text -> Text -> DeleteStreamingSession

-- | <i>See:</i> <a>newDeleteStreamingSessionResponse</a> smart
--   constructor.
data DeleteStreamingSessionResponse
DeleteStreamingSessionResponse' :: Maybe StreamingSession -> Int -> DeleteStreamingSessionResponse

-- | Create a value of <a>DeleteStreamingSessionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:session:DeleteStreamingSessionResponse'</a>,
--   <a>deleteStreamingSessionResponse_session</a> - The session.
--   
--   <a>$sel:httpStatus:DeleteStreamingSessionResponse'</a>,
--   <a>deleteStreamingSessionResponse_httpStatus</a> - The response's http
--   status code.
newDeleteStreamingSessionResponse :: Int -> DeleteStreamingSessionResponse

-- | <i>See:</i> <a>newUntagResource</a> smart constructor.
data UntagResource
UntagResource' :: [Text] -> Text -> UntagResource

-- | Create a value of <a>UntagResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tagKeys:UntagResource'</a>, <a>untagResource_tagKeys</a> - An
--   array of tag keys to delete.
--   
--   <a>$sel:resourceArn:UntagResource'</a>,
--   <a>untagResource_resourceArn</a> - The ARN of the target resource for
--   tagging operations.
newUntagResource :: Text -> UntagResource

-- | <i>See:</i> <a>newUntagResourceResponse</a> smart constructor.
data UntagResourceResponse
UntagResourceResponse' :: Int -> UntagResourceResponse

-- | Create a value of <a>UntagResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UntagResourceResponse'</a>,
--   <a>untagResourceResponse_httpStatus</a> - The response's http status
--   code.
newUntagResourceResponse :: Int -> UntagResourceResponse

-- | <i>See:</i> <a>newListStreamingSessions</a> smart constructor.
data ListStreamingSessions
ListStreamingSessions' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Text -> ListStreamingSessions

-- | Create a value of <a>ListStreamingSessions</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ownedBy:ListStreamingSessions'</a>,
--   <a>listStreamingSessions_ownedBy</a> - The user ID of the user that
--   owns the streaming session.
--   
--   <a>$sel:createdBy:ListStreamingSessions'</a>,
--   <a>listStreamingSessions_createdBy</a> - The user ID of the user that
--   created the streaming session.
--   
--   <a>$sel:nextToken:ListStreamingSessions'</a>,
--   <a>listStreamingSessions_nextToken</a> - The token for the next set of
--   results, or null if there are no more results.
--   
--   <a>$sel:sessionIds:ListStreamingSessions'</a>,
--   <a>listStreamingSessions_sessionIds</a> - A collection of session IDs.
--   
--   <a>$sel:studioId:ListStreamingSessions'</a>,
--   <a>listStreamingSessions_studioId</a> - The studio ID.
newListStreamingSessions :: Text -> ListStreamingSessions

-- | <i>See:</i> <a>newListStreamingSessionsResponse</a> smart constructor.
data ListStreamingSessionsResponse
ListStreamingSessionsResponse' :: Maybe Text -> Maybe [StreamingSession] -> Int -> ListStreamingSessionsResponse

-- | Create a value of <a>ListStreamingSessionsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListStreamingSessions'</a>,
--   <a>listStreamingSessionsResponse_nextToken</a> - The token for the
--   next set of results, or null if there are no more results.
--   
--   <a>$sel:sessions:ListStreamingSessionsResponse'</a>,
--   <a>listStreamingSessionsResponse_sessions</a> - A collection of
--   streaming sessions.
--   
--   <a>$sel:httpStatus:ListStreamingSessionsResponse'</a>,
--   <a>listStreamingSessionsResponse_httpStatus</a> - The response's http
--   status code.
newListStreamingSessionsResponse :: Int -> ListStreamingSessionsResponse

-- | <i>See:</i> <a>newGetStudio</a> smart constructor.
data GetStudio
GetStudio' :: Text -> GetStudio

-- | Create a value of <a>GetStudio</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:studioId:GetStudio'</a>, <a>getStudio_studioId</a> - The
--   studio ID.
newGetStudio :: Text -> GetStudio

-- | <i>See:</i> <a>newGetStudioResponse</a> smart constructor.
data GetStudioResponse
GetStudioResponse' :: Maybe Studio -> Int -> GetStudioResponse

-- | Create a value of <a>GetStudioResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:studio:GetStudioResponse'</a>, <a>getStudioResponse_studio</a>
--   - Information about a studio.
--   
--   <a>$sel:httpStatus:GetStudioResponse'</a>,
--   <a>getStudioResponse_httpStatus</a> - The response's http status code.
newGetStudioResponse :: Int -> GetStudioResponse

-- | <i>See:</i> <a>newListStudioMembers</a> smart constructor.
data ListStudioMembers
ListStudioMembers' :: Maybe Text -> Maybe Natural -> Text -> ListStudioMembers

-- | Create a value of <a>ListStudioMembers</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListStudioMembers'</a>,
--   <a>listStudioMembers_nextToken</a> - The token for the next set of
--   results, or null if there are no more results.
--   
--   <a>$sel:maxResults:ListStudioMembers'</a>,
--   <a>listStudioMembers_maxResults</a> - The maximum number of results to
--   be returned per request.
--   
--   <a>$sel:studioId:ListStudioMembers'</a>,
--   <a>listStudioMembers_studioId</a> - The studio ID.
newListStudioMembers :: Text -> ListStudioMembers

-- | <i>See:</i> <a>newListStudioMembersResponse</a> smart constructor.
data ListStudioMembersResponse
ListStudioMembersResponse' :: Maybe [StudioMembership] -> Maybe Text -> Int -> ListStudioMembersResponse

-- | Create a value of <a>ListStudioMembersResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:members:ListStudioMembersResponse'</a>,
--   <a>listStudioMembersResponse_members</a> - A list of members.
--   
--   <a>$sel:nextToken:ListStudioMembers'</a>,
--   <a>listStudioMembersResponse_nextToken</a> - The token for the next
--   set of results, or null if there are no more results.
--   
--   <a>$sel:httpStatus:ListStudioMembersResponse'</a>,
--   <a>listStudioMembersResponse_httpStatus</a> - The response's http
--   status code.
newListStudioMembersResponse :: Int -> ListStudioMembersResponse

-- | <i>See:</i> <a>newDeleteStudioMember</a> smart constructor.
data DeleteStudioMember
DeleteStudioMember' :: Maybe Text -> Text -> Text -> DeleteStudioMember

-- | Create a value of <a>DeleteStudioMember</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientToken:DeleteStudioMember'</a>,
--   <a>deleteStudioMember_clientToken</a> - To make an idempotent API
--   request using one of these actions, specify a client token in the
--   request. You should not reuse the same client token for other API
--   requests. If you retry a request that completed successfully using the
--   same client token and the same parameters, the retry succeeds without
--   performing any further actions. If you retry a successful request
--   using the same client token, but one or more of the parameters are
--   different, the retry fails with a ValidationException error.
--   
--   <a>$sel:studioId:DeleteStudioMember'</a>,
--   <a>deleteStudioMember_studioId</a> - The studio ID.
--   
--   <a>$sel:principalId:DeleteStudioMember'</a>,
--   <a>deleteStudioMember_principalId</a> - The principal ID.
newDeleteStudioMember :: Text -> Text -> DeleteStudioMember

-- | <i>See:</i> <a>newDeleteStudioMemberResponse</a> smart constructor.
data DeleteStudioMemberResponse
DeleteStudioMemberResponse' :: Int -> DeleteStudioMemberResponse

-- | Create a value of <a>DeleteStudioMemberResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteStudioMemberResponse'</a>,
--   <a>deleteStudioMemberResponse_httpStatus</a> - The response's http
--   status code.
newDeleteStudioMemberResponse :: Int -> DeleteStudioMemberResponse

newtype LaunchProfilePersona
LaunchProfilePersona' :: Text -> LaunchProfilePersona
[fromLaunchProfilePersona] :: LaunchProfilePersona -> Text
pattern LaunchProfilePersona_USER :: LaunchProfilePersona

newtype LaunchProfilePlatform
LaunchProfilePlatform' :: Text -> LaunchProfilePlatform
[fromLaunchProfilePlatform] :: LaunchProfilePlatform -> Text
pattern LaunchProfilePlatform_LINUX :: LaunchProfilePlatform
pattern LaunchProfilePlatform_WINDOWS :: LaunchProfilePlatform

newtype LaunchProfileState
LaunchProfileState' :: Text -> LaunchProfileState
[fromLaunchProfileState] :: LaunchProfileState -> Text
pattern LaunchProfileState_CREATE_FAILED :: LaunchProfileState
pattern LaunchProfileState_CREATE_IN_PROGRESS :: LaunchProfileState
pattern LaunchProfileState_DELETED :: LaunchProfileState
pattern LaunchProfileState_DELETE_FAILED :: LaunchProfileState
pattern LaunchProfileState_DELETE_IN_PROGRESS :: LaunchProfileState
pattern LaunchProfileState_READY :: LaunchProfileState
pattern LaunchProfileState_UPDATE_FAILED :: LaunchProfileState
pattern LaunchProfileState_UPDATE_IN_PROGRESS :: LaunchProfileState

newtype LaunchProfileStatusCode
LaunchProfileStatusCode' :: Text -> LaunchProfileStatusCode
[fromLaunchProfileStatusCode] :: LaunchProfileStatusCode -> Text
pattern LaunchProfileStatusCode_ENCRYPTION_KEY_ACCESS_DENIED :: LaunchProfileStatusCode
pattern LaunchProfileStatusCode_ENCRYPTION_KEY_NOT_FOUND :: LaunchProfileStatusCode
pattern LaunchProfileStatusCode_INTERNAL_ERROR :: LaunchProfileStatusCode
pattern LaunchProfileStatusCode_INVALID_SUBNETS_PROVIDED :: LaunchProfileStatusCode
pattern LaunchProfileStatusCode_LAUNCH_PROFILE_CREATED :: LaunchProfileStatusCode
pattern LaunchProfileStatusCode_LAUNCH_PROFILE_CREATE_IN_PROGRESS :: LaunchProfileStatusCode
pattern LaunchProfileStatusCode_LAUNCH_PROFILE_DELETED :: LaunchProfileStatusCode
pattern LaunchProfileStatusCode_LAUNCH_PROFILE_DELETE_IN_PROGRESS :: LaunchProfileStatusCode
pattern LaunchProfileStatusCode_LAUNCH_PROFILE_UPDATED :: LaunchProfileStatusCode
pattern LaunchProfileStatusCode_LAUNCH_PROFILE_UPDATE_IN_PROGRESS :: LaunchProfileStatusCode
pattern LaunchProfileStatusCode_LAUNCH_PROFILE_WITH_STREAM_SESSIONS_NOT_DELETED :: LaunchProfileStatusCode
pattern LaunchProfileStatusCode_STREAMING_IMAGE_NOT_FOUND :: LaunchProfileStatusCode
pattern LaunchProfileStatusCode_STREAMING_IMAGE_NOT_READY :: LaunchProfileStatusCode

newtype StreamingClipboardMode
StreamingClipboardMode' :: Text -> StreamingClipboardMode
[fromStreamingClipboardMode] :: StreamingClipboardMode -> Text
pattern StreamingClipboardMode_DISABLED :: StreamingClipboardMode
pattern StreamingClipboardMode_ENABLED :: StreamingClipboardMode

newtype StreamingImageEncryptionConfigurationKeyType
StreamingImageEncryptionConfigurationKeyType' :: Text -> StreamingImageEncryptionConfigurationKeyType
[fromStreamingImageEncryptionConfigurationKeyType] :: StreamingImageEncryptionConfigurationKeyType -> Text
pattern StreamingImageEncryptionConfigurationKeyType_CUSTOMER_MANAGED_KEY :: StreamingImageEncryptionConfigurationKeyType

newtype StreamingImageState
StreamingImageState' :: Text -> StreamingImageState
[fromStreamingImageState] :: StreamingImageState -> Text
pattern StreamingImageState_CREATE_FAILED :: StreamingImageState
pattern StreamingImageState_CREATE_IN_PROGRESS :: StreamingImageState
pattern StreamingImageState_DELETED :: StreamingImageState
pattern StreamingImageState_DELETE_FAILED :: StreamingImageState
pattern StreamingImageState_DELETE_IN_PROGRESS :: StreamingImageState
pattern StreamingImageState_READY :: StreamingImageState
pattern StreamingImageState_UPDATE_FAILED :: StreamingImageState
pattern StreamingImageState_UPDATE_IN_PROGRESS :: StreamingImageState

-- | The status code.
newtype StreamingImageStatusCode
StreamingImageStatusCode' :: Text -> StreamingImageStatusCode
[fromStreamingImageStatusCode] :: StreamingImageStatusCode -> Text
pattern StreamingImageStatusCode_INTERNAL_ERROR :: StreamingImageStatusCode
pattern StreamingImageStatusCode_STREAMING_IMAGE_CREATE_IN_PROGRESS :: StreamingImageStatusCode
pattern StreamingImageStatusCode_STREAMING_IMAGE_DELETED :: StreamingImageStatusCode
pattern StreamingImageStatusCode_STREAMING_IMAGE_DELETE_IN_PROGRESS :: StreamingImageStatusCode
pattern StreamingImageStatusCode_STREAMING_IMAGE_READY :: StreamingImageStatusCode
pattern StreamingImageStatusCode_STREAMING_IMAGE_UPDATE_IN_PROGRESS :: StreamingImageStatusCode

newtype StreamingInstanceType
StreamingInstanceType' :: Text -> StreamingInstanceType
[fromStreamingInstanceType] :: StreamingInstanceType -> Text
pattern StreamingInstanceType_G4dn_12xlarge :: StreamingInstanceType
pattern StreamingInstanceType_G4dn_16xlarge :: StreamingInstanceType
pattern StreamingInstanceType_G4dn_2xlarge :: StreamingInstanceType
pattern StreamingInstanceType_G4dn_4xlarge :: StreamingInstanceType
pattern StreamingInstanceType_G4dn_8xlarge :: StreamingInstanceType
pattern StreamingInstanceType_G4dn_xlarge :: StreamingInstanceType

-- | The streaming session state.
newtype StreamingSessionState
StreamingSessionState' :: Text -> StreamingSessionState
[fromStreamingSessionState] :: StreamingSessionState -> Text
pattern StreamingSessionState_CREATE_FAILED :: StreamingSessionState
pattern StreamingSessionState_CREATE_IN_PROGRESS :: StreamingSessionState
pattern StreamingSessionState_DELETED :: StreamingSessionState
pattern StreamingSessionState_DELETE_FAILED :: StreamingSessionState
pattern StreamingSessionState_DELETE_IN_PROGRESS :: StreamingSessionState
pattern StreamingSessionState_READY :: StreamingSessionState

newtype StreamingSessionStatusCode
StreamingSessionStatusCode' :: Text -> StreamingSessionStatusCode
[fromStreamingSessionStatusCode] :: StreamingSessionStatusCode -> Text
pattern StreamingSessionStatusCode_ACTIVE_DIRECTORY_DOMAIN_JOIN_ERROR :: StreamingSessionStatusCode
pattern StreamingSessionStatusCode_DECRYPT_STREAMING_IMAGE_ERROR :: StreamingSessionStatusCode
pattern StreamingSessionStatusCode_INITIALIZATION_SCRIPT_ERROR :: StreamingSessionStatusCode
pattern StreamingSessionStatusCode_INSUFFICIENT_CAPACITY :: StreamingSessionStatusCode
pattern StreamingSessionStatusCode_INTERNAL_ERROR :: StreamingSessionStatusCode
pattern StreamingSessionStatusCode_NETWORK_CONNECTION_ERROR :: StreamingSessionStatusCode
pattern StreamingSessionStatusCode_NETWORK_INTERFACE_ERROR :: StreamingSessionStatusCode
pattern StreamingSessionStatusCode_STREAMING_SESSION_CREATE_IN_PROGRESS :: StreamingSessionStatusCode
pattern StreamingSessionStatusCode_STREAMING_SESSION_DELETED :: StreamingSessionStatusCode
pattern StreamingSessionStatusCode_STREAMING_SESSION_DELETE_IN_PROGRESS :: StreamingSessionStatusCode
pattern StreamingSessionStatusCode_STREAMING_SESSION_READY :: StreamingSessionStatusCode

newtype StreamingSessionStreamState
StreamingSessionStreamState' :: Text -> StreamingSessionStreamState
[fromStreamingSessionStreamState] :: StreamingSessionStreamState -> Text
pattern StreamingSessionStreamState_CREATE_FAILED :: StreamingSessionStreamState
pattern StreamingSessionStreamState_CREATE_IN_PROGRESS :: StreamingSessionStreamState
pattern StreamingSessionStreamState_DELETED :: StreamingSessionStreamState
pattern StreamingSessionStreamState_DELETE_FAILED :: StreamingSessionStreamState
pattern StreamingSessionStreamState_DELETE_IN_PROGRESS :: StreamingSessionStreamState
pattern StreamingSessionStreamState_READY :: StreamingSessionStreamState
newtype StreamingSessionStreamStatusCode
StreamingSessionStreamStatusCode' :: Text -> StreamingSessionStreamStatusCode
[fromStreamingSessionStreamStatusCode] :: StreamingSessionStreamStatusCode -> Text
pattern StreamingSessionStreamStatusCode_INTERNAL_ERROR :: StreamingSessionStreamStatusCode
pattern StreamingSessionStreamStatusCode_NETWORK_CONNECTION_ERROR :: StreamingSessionStreamStatusCode
pattern StreamingSessionStreamStatusCode_STREAM_CREATE_IN_PROGRESS :: StreamingSessionStreamStatusCode
pattern StreamingSessionStreamStatusCode_STREAM_DELETED :: StreamingSessionStreamStatusCode
pattern StreamingSessionStreamStatusCode_STREAM_DELETE_IN_PROGRESS :: StreamingSessionStreamStatusCode
pattern StreamingSessionStreamStatusCode_STREAM_READY :: StreamingSessionStreamStatusCode

newtype StudioComponentInitializationScriptRunContext
StudioComponentInitializationScriptRunContext' :: Text -> StudioComponentInitializationScriptRunContext
[fromStudioComponentInitializationScriptRunContext] :: StudioComponentInitializationScriptRunContext -> Text
pattern StudioComponentInitializationScriptRunContext_SYSTEM_INITIALIZATION :: StudioComponentInitializationScriptRunContext
pattern StudioComponentInitializationScriptRunContext_USER_INITIALIZATION :: StudioComponentInitializationScriptRunContext

-- | The current state of the studio component resource.
--   
--   While a studio component is being created, modified, or deleted, its
--   state will equal "CREATE_IN_PROGRESS", "UPDATE_IN_PROGRESS", or
--   "DELETE_IN_PROGRESS"
--   
--   These are called 'transition states'.
--   
--   No modifications may be made to the studio component while it is in a
--   transition state.
--   
--   If creation of the resource fails, the state will change to
--   `CREATE_FAILED`. The resource StatusCode and StatusMessage will
--   provide more information of why creation failed. The resource in this
--   state will automatically be deleted from your account after a period
--   of time.
--   
--   If updating the resource fails, the state will change to
--   `UPDATE_FAILED`. The resource StatusCode and StatusMessage will
--   provide more information of why the update failed. The resource will
--   be returned to the state it was in when the update request was
--   invoked.
--   
--   If deleting the resource fails, the state will change to
--   `DELETE_FAILED`. The resource StatusCode and StatusMessage will
--   provide more information of why the update failed. The resource will
--   be returned to the state it was in when the update request was
--   invoked. After the resource is deleted successfully, it will change to
--   the "DELETED" state. The resource will no longer count against service
--   quotas and cannot be used or acted upon any futher. It will be removed
--   from your account after a period of time.
newtype StudioComponentState
StudioComponentState' :: Text -> StudioComponentState
[fromStudioComponentState] :: StudioComponentState -> Text
pattern StudioComponentState_CREATE_FAILED :: StudioComponentState
pattern StudioComponentState_CREATE_IN_PROGRESS :: StudioComponentState
pattern StudioComponentState_DELETED :: StudioComponentState
pattern StudioComponentState_DELETE_FAILED :: StudioComponentState
pattern StudioComponentState_DELETE_IN_PROGRESS :: StudioComponentState
pattern StudioComponentState_READY :: StudioComponentState
pattern StudioComponentState_UPDATE_FAILED :: StudioComponentState
pattern StudioComponentState_UPDATE_IN_PROGRESS :: StudioComponentState

-- | The current status of the studio component resource.
--   
--   When the resource is in the 'READY' state, the status code signals
--   what the last mutation made to the resource was.
--   
--   When the resource is in a CREATE_FAILED/UPDATE_FAILED/DELETE_FAILED
--   state, the status code signals what went wrong and why the mutation
--   failed.
newtype StudioComponentStatusCode
StudioComponentStatusCode' :: Text -> StudioComponentStatusCode
[fromStudioComponentStatusCode] :: StudioComponentStatusCode -> Text
pattern StudioComponentStatusCode_ACTIVE_DIRECTORY_ALREADY_EXISTS :: StudioComponentStatusCode
pattern StudioComponentStatusCode_ENCRYPTION_KEY_ACCESS_DENIED :: StudioComponentStatusCode
pattern StudioComponentStatusCode_ENCRYPTION_KEY_NOT_FOUND :: StudioComponentStatusCode
pattern StudioComponentStatusCode_INTERNAL_ERROR :: StudioComponentStatusCode
pattern StudioComponentStatusCode_STUDIO_COMPONENT_CREATED :: StudioComponentStatusCode
pattern StudioComponentStatusCode_STUDIO_COMPONENT_CREATE_IN_PROGRESS :: StudioComponentStatusCode
pattern StudioComponentStatusCode_STUDIO_COMPONENT_DELETED :: StudioComponentStatusCode
pattern StudioComponentStatusCode_STUDIO_COMPONENT_DELETE_IN_PROGRESS :: StudioComponentStatusCode
pattern StudioComponentStatusCode_STUDIO_COMPONENT_UPDATED :: StudioComponentStatusCode
pattern StudioComponentStatusCode_STUDIO_COMPONENT_UPDATE_IN_PROGRESS :: StudioComponentStatusCode

newtype StudioComponentSubtype
StudioComponentSubtype' :: Text -> StudioComponentSubtype
[fromStudioComponentSubtype] :: StudioComponentSubtype -> Text
pattern StudioComponentSubtype_AMAZON_FSX_FOR_LUSTRE :: StudioComponentSubtype
pattern StudioComponentSubtype_AMAZON_FSX_FOR_WINDOWS :: StudioComponentSubtype
pattern StudioComponentSubtype_AWS_MANAGED_MICROSOFT_AD :: StudioComponentSubtype
pattern StudioComponentSubtype_CUSTOM :: StudioComponentSubtype

newtype StudioComponentType
StudioComponentType' :: Text -> StudioComponentType
[fromStudioComponentType] :: StudioComponentType -> Text
pattern StudioComponentType_ACTIVE_DIRECTORY :: StudioComponentType
pattern StudioComponentType_COMPUTE_FARM :: StudioComponentType
pattern StudioComponentType_CUSTOM :: StudioComponentType
pattern StudioComponentType_LICENSE_SERVICE :: StudioComponentType
pattern StudioComponentType_SHARED_FILE_SYSTEM :: StudioComponentType

-- | The type of KMS key that is used to encrypt studio data.
newtype StudioEncryptionConfigurationKeyType
StudioEncryptionConfigurationKeyType' :: Text -> StudioEncryptionConfigurationKeyType
[fromStudioEncryptionConfigurationKeyType] :: StudioEncryptionConfigurationKeyType -> Text
pattern StudioEncryptionConfigurationKeyType_AWS_OWNED_KEY :: StudioEncryptionConfigurationKeyType
pattern StudioEncryptionConfigurationKeyType_CUSTOMER_MANAGED_KEY :: StudioEncryptionConfigurationKeyType

newtype StudioPersona
StudioPersona' :: Text -> StudioPersona
[fromStudioPersona] :: StudioPersona -> Text
pattern StudioPersona_ADMINISTRATOR :: StudioPersona

newtype StudioState
StudioState' :: Text -> StudioState
[fromStudioState] :: StudioState -> Text
pattern StudioState_CREATE_FAILED :: StudioState
pattern StudioState_CREATE_IN_PROGRESS :: StudioState
pattern StudioState_DELETED :: StudioState
pattern StudioState_DELETE_FAILED :: StudioState
pattern StudioState_DELETE_IN_PROGRESS :: StudioState
pattern StudioState_READY :: StudioState
pattern StudioState_UPDATE_FAILED :: StudioState
pattern StudioState_UPDATE_IN_PROGRESS :: StudioState

-- | The status code.
newtype StudioStatusCode
StudioStatusCode' :: Text -> StudioStatusCode
[fromStudioStatusCode] :: StudioStatusCode -> Text
pattern StudioStatusCode_AWS_SSO_ACCESS_DENIED :: StudioStatusCode
pattern StudioStatusCode_AWS_SSO_CONFIGURATION_REPAIRED :: StudioStatusCode
pattern StudioStatusCode_AWS_SSO_CONFIGURATION_REPAIR_IN_PROGRESS :: StudioStatusCode
pattern StudioStatusCode_AWS_SSO_NOT_ENABLED :: StudioStatusCode
pattern StudioStatusCode_ENCRYPTION_KEY_ACCESS_DENIED :: StudioStatusCode
pattern StudioStatusCode_ENCRYPTION_KEY_NOT_FOUND :: StudioStatusCode
pattern StudioStatusCode_INTERNAL_ERROR :: StudioStatusCode
pattern StudioStatusCode_ROLE_COULD_NOT_BE_ASSUMED :: StudioStatusCode
pattern StudioStatusCode_ROLE_NOT_OWNED_BY_STUDIO_OWNER :: StudioStatusCode
pattern StudioStatusCode_STUDIO_CREATED :: StudioStatusCode
pattern StudioStatusCode_STUDIO_CREATE_IN_PROGRESS :: StudioStatusCode
pattern StudioStatusCode_STUDIO_DELETED :: StudioStatusCode
pattern StudioStatusCode_STUDIO_DELETE_IN_PROGRESS :: StudioStatusCode
pattern StudioStatusCode_STUDIO_UPDATED :: StudioStatusCode
pattern StudioStatusCode_STUDIO_UPDATE_IN_PROGRESS :: StudioStatusCode
pattern StudioStatusCode_STUDIO_WITH_LAUNCH_PROFILES_NOT_DELETED :: StudioStatusCode
pattern StudioStatusCode_STUDIO_WITH_STREAMING_IMAGES_NOT_DELETED :: StudioStatusCode
pattern StudioStatusCode_STUDIO_WITH_STUDIO_COMPONENTS_NOT_DELETED :: StudioStatusCode

-- | An LDAP attribute of an Active Directory computer account, in the form
--   of a name:value pair.
--   
--   <i>See:</i> <a>newActiveDirectoryComputerAttribute</a> smart
--   constructor.
data ActiveDirectoryComputerAttribute
ActiveDirectoryComputerAttribute' :: Maybe Text -> Maybe Text -> ActiveDirectoryComputerAttribute

-- | Create a value of <a>ActiveDirectoryComputerAttribute</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:value:ActiveDirectoryComputerAttribute'</a>,
--   <a>activeDirectoryComputerAttribute_value</a> - The value for the LDAP
--   attribute.
--   
--   <a>$sel:name:ActiveDirectoryComputerAttribute'</a>,
--   <a>activeDirectoryComputerAttribute_name</a> - The name for the LDAP
--   attribute.
newActiveDirectoryComputerAttribute :: ActiveDirectoryComputerAttribute

-- | The configuration for a Microsoft Active Directory (Microsoft AD)
--   studio resource.
--   
--   <i>See:</i> <a>newActiveDirectoryConfiguration</a> smart constructor.
data ActiveDirectoryConfiguration
ActiveDirectoryConfiguration' :: Maybe Text -> Maybe [ActiveDirectoryComputerAttribute] -> Maybe Text -> ActiveDirectoryConfiguration

-- | Create a value of <a>ActiveDirectoryConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:directoryId:ActiveDirectoryConfiguration'</a>,
--   <a>activeDirectoryConfiguration_directoryId</a> - The directory ID of
--   the Directory Service for Microsoft Active Directory to access using
--   this studio component.
--   
--   <a>$sel:computerAttributes:ActiveDirectoryConfiguration'</a>,
--   <a>activeDirectoryConfiguration_computerAttributes</a> - A collection
--   of custom attributes for an Active Directory computer.
--   
--   
--   <a>$sel:organizationalUnitDistinguishedName:ActiveDirectoryConfiguration'</a>,
--   <a>activeDirectoryConfiguration_organizationalUnitDistinguishedName</a>
--   - The distinguished name (DN) and organizational unit (OU) of an
--   Active Directory computer.
newActiveDirectoryConfiguration :: ActiveDirectoryConfiguration

-- | The configuration for a render farm that is associated with a studio
--   resource.
--   
--   <i>See:</i> <a>newComputeFarmConfiguration</a> smart constructor.
data ComputeFarmConfiguration
ComputeFarmConfiguration' :: Maybe Text -> Maybe Text -> ComputeFarmConfiguration

-- | Create a value of <a>ComputeFarmConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:activeDirectoryUser:ComputeFarmConfiguration'</a>,
--   <a>computeFarmConfiguration_activeDirectoryUser</a> - The name of an
--   Active Directory user that is used on ComputeFarm worker instances.
--   
--   <a>$sel:endpoint:ComputeFarmConfiguration'</a>,
--   <a>computeFarmConfiguration_endpoint</a> - The endpoint of the
--   ComputeFarm that is accessed by the studio component resource.
newComputeFarmConfiguration :: ComputeFarmConfiguration

-- | Represents a EULA resource.
--   
--   <i>See:</i> <a>newEula</a> smart constructor.
data Eula
Eula' :: Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> Eula

-- | Create a value of <a>Eula</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:createdAt:Eula'</a>, <a>eula_createdAt</a> - The Unix epoch
--   timestamp in seconds for when the resource was created.
--   
--   <a>$sel:eulaId:Eula'</a>, <a>eula_eulaId</a> - The EULA ID.
--   
--   <a>$sel:content:Eula'</a>, <a>eula_content</a> - The EULA content.
--   
--   <a>$sel:name:Eula'</a>, <a>eula_name</a> - The name for the EULA.
--   
--   <a>$sel:updatedAt:Eula'</a>, <a>eula_updatedAt</a> - The Unix epoch
--   timestamp in seconds for when the resource was updated.
newEula :: Eula

-- | <i>See:</i> <a>newEulaAcceptance</a> smart constructor.
data EulaAcceptance
EulaAcceptance' :: Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> EulaAcceptance

-- | Create a value of <a>EulaAcceptance</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:accepteeId:EulaAcceptance'</a>,
--   <a>eulaAcceptance_accepteeId</a> - The ID of the acceptee.
--   
--   <a>$sel:eulaId:EulaAcceptance'</a>, <a>eulaAcceptance_eulaId</a> - The
--   EULA ID.
--   
--   <a>$sel:acceptedAt:EulaAcceptance'</a>,
--   <a>eulaAcceptance_acceptedAt</a> - The Unix epoch timestamp in seconds
--   for when the EULA was accepted.
--   
--   <a>$sel:acceptedBy:EulaAcceptance'</a>,
--   <a>eulaAcceptance_acceptedBy</a> - The ID of the person who accepted
--   the EULA.
--   
--   <a>$sel:eulaAcceptanceId:EulaAcceptance'</a>,
--   <a>eulaAcceptance_eulaAcceptanceId</a> - The EULA acceptance ID.
newEulaAcceptance :: EulaAcceptance

-- | <i>See:</i> <a>newLaunchProfile</a> smart constructor.
data LaunchProfile
LaunchProfile' :: Maybe LaunchProfileState -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe [Text] -> Maybe [Text] -> Maybe StreamConfiguration -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe LaunchProfileStatusCode -> Maybe (NonEmpty Text) -> LaunchProfile

-- | Create a value of <a>LaunchProfile</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:state:LaunchProfile'</a>, <a>launchProfile_state</a> - The
--   current state.
--   
--   <a>$sel:arn:LaunchProfile'</a>, <a>launchProfile_arn</a> - The ARN of
--   the resource.
--   
--   <a>$sel:createdAt:LaunchProfile'</a>, <a>launchProfile_createdAt</a> -
--   The Unix epoch timestamp in seconds for when the resource was created.
--   
--   <a>$sel:createdBy:LaunchProfile'</a>, <a>launchProfile_createdBy</a> -
--   The user ID of the user that created the launch profile.
--   
--   <a>$sel:launchProfileId:LaunchProfile'</a>,
--   <a>launchProfile_launchProfileId</a> - The launch profile ID.
--   
--   <a>$sel:updatedBy:LaunchProfile'</a>, <a>launchProfile_updatedBy</a> -
--   The user ID of the user that most recently updated the resource.
--   
--   <a>$sel:launchProfileProtocolVersions:LaunchProfile'</a>,
--   <a>launchProfile_launchProfileProtocolVersions</a> - The version
--   number of the protocol that is used by the launch profile. The only
--   valid version is "2021-03-31".
--   
--   <a>$sel:ec2SubnetIds:LaunchProfile'</a>,
--   <a>launchProfile_ec2SubnetIds</a> - Unique identifiers for a
--   collection of EC2 subnets.
--   
--   <a>$sel:streamConfiguration:LaunchProfile'</a>,
--   <a>launchProfile_streamConfiguration</a> - A configuration for a
--   streaming session.
--   
--   <a>$sel:name:LaunchProfile'</a>, <a>launchProfile_name</a> - A
--   friendly name for the launch profile.
--   
--   <a>$sel:statusMessage:LaunchProfile'</a>,
--   <a>launchProfile_statusMessage</a> - The status message for the launch
--   profile.
--   
--   <a>$sel:updatedAt:LaunchProfile'</a>, <a>launchProfile_updatedAt</a> -
--   The Unix epoch timestamp in seconds for when the resource was updated.
--   
--   <a>$sel:description:LaunchProfile'</a>,
--   <a>launchProfile_description</a> - A human-readable description of the
--   launch profile.
--   
--   <a>$sel:tags:LaunchProfile'</a>, <a>launchProfile_tags</a> - A
--   collection of labels, in the form of key:value pairs, that apply to
--   this resource.
--   
--   <a>$sel:statusCode:LaunchProfile'</a>, <a>launchProfile_statusCode</a>
--   - The status code.
--   
--   <a>$sel:studioComponentIds:LaunchProfile'</a>,
--   <a>launchProfile_studioComponentIds</a> - Unique identifiers for a
--   collection of studio components that can be used with this launch
--   profile.
newLaunchProfile :: LaunchProfile

-- | <i>See:</i> <a>newLaunchProfileInitialization</a> smart constructor.
data LaunchProfileInitialization
LaunchProfileInitialization' :: Maybe LaunchProfilePlatform -> Maybe LaunchProfileInitializationActiveDirectory -> Maybe Text -> Maybe Text -> Maybe (NonEmpty Text) -> Maybe Text -> Maybe Text -> Maybe [LaunchProfileInitializationScript] -> Maybe [LaunchProfileInitializationScript] -> LaunchProfileInitialization

-- | Create a value of <a>LaunchProfileInitialization</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:platform:LaunchProfileInitialization'</a>,
--   <a>launchProfileInitialization_platform</a> - The platform of the
--   launch platform, either WINDOWS or LINUX.
--   
--   <a>$sel:activeDirectory:LaunchProfileInitialization'</a>,
--   <a>launchProfileInitialization_activeDirectory</a> - A
--   LaunchProfileInitializationActiveDirectory resource.
--   
--   <a>$sel:launchPurpose:LaunchProfileInitialization'</a>,
--   <a>launchProfileInitialization_launchPurpose</a> - The launch purpose.
--   
--   <a>$sel:launchProfileId:LaunchProfileInitialization'</a>,
--   <a>launchProfileInitialization_launchProfileId</a> - The launch
--   profile ID.
--   
--   <a>$sel:ec2SecurityGroupIds:LaunchProfileInitialization'</a>,
--   <a>launchProfileInitialization_ec2SecurityGroupIds</a> - The EC2
--   security groups that control access to the studio component.
--   
--   <a>$sel:name:LaunchProfileInitialization'</a>,
--   <a>launchProfileInitialization_name</a> - The name for the launch
--   profile.
--   
--   <a>$sel:launchProfileProtocolVersion:LaunchProfileInitialization'</a>,
--   <a>launchProfileInitialization_launchProfileProtocolVersion</a> - The
--   version number of the protocol that is used by the launch profile. The
--   only valid version is "2021-03-31".
--   
--   <a>$sel:userInitializationScripts:LaunchProfileInitialization'</a>,
--   <a>launchProfileInitialization_userInitializationScripts</a> - The
--   user initializtion scripts.
--   
--   <a>$sel:systemInitializationScripts:LaunchProfileInitialization'</a>,
--   <a>launchProfileInitialization_systemInitializationScripts</a> - The
--   system initializtion scripts.
newLaunchProfileInitialization :: LaunchProfileInitialization

-- | <i>See:</i> <a>newLaunchProfileInitializationActiveDirectory</a> smart
--   constructor.
data LaunchProfileInitializationActiveDirectory
LaunchProfileInitializationActiveDirectory' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe [Text] -> Maybe [ActiveDirectoryComputerAttribute] -> Maybe Text -> Maybe Text -> LaunchProfileInitializationActiveDirectory

-- | Create a value of <a>LaunchProfileInitializationActiveDirectory</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:directoryId:LaunchProfileInitializationActiveDirectory'</a>,
--   <a>launchProfileInitializationActiveDirectory_directoryId</a> - The
--   directory ID of the Directory Service for Microsoft Active Directory
--   to access using this launch profile.
--   
--   
--   <a>$sel:studioComponentId:LaunchProfileInitializationActiveDirectory'</a>,
--   <a>launchProfileInitializationActiveDirectory_studioComponentId</a> -
--   The unique identifier for a studio component resource.
--   
--   
--   <a>$sel:studioComponentName:LaunchProfileInitializationActiveDirectory'</a>,
--   <a>launchProfileInitializationActiveDirectory_studioComponentName</a>
--   - The name for the studio component.
--   
--   
--   <a>$sel:dnsIpAddresses:LaunchProfileInitializationActiveDirectory'</a>,
--   <a>launchProfileInitializationActiveDirectory_dnsIpAddresses</a> - The
--   DNS IP address.
--   
--   
--   <a>$sel:computerAttributes:LaunchProfileInitializationActiveDirectory'</a>,
--   <a>launchProfileInitializationActiveDirectory_computerAttributes</a> -
--   A collection of custom attributes for an Active Directory computer.
--   
--   
--   <a>$sel:organizationalUnitDistinguishedName:LaunchProfileInitializationActiveDirectory'</a>,
--   <a>launchProfileInitializationActiveDirectory_organizationalUnitDistinguishedName</a>
--   - The name for the organizational unit distinguished name.
--   
--   <a>$sel:directoryName:LaunchProfileInitializationActiveDirectory'</a>,
--   <a>launchProfileInitializationActiveDirectory_directoryName</a> - The
--   directory name.
newLaunchProfileInitializationActiveDirectory :: LaunchProfileInitializationActiveDirectory

-- | <i>See:</i> <a>newLaunchProfileInitializationScript</a> smart
--   constructor.
data LaunchProfileInitializationScript
LaunchProfileInitializationScript' :: Maybe Text -> Maybe Text -> Maybe Text -> LaunchProfileInitializationScript

-- | Create a value of <a>LaunchProfileInitializationScript</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:script:LaunchProfileInitializationScript'</a>,
--   <a>launchProfileInitializationScript_script</a> - The initialization
--   script.
--   
--   <a>$sel:studioComponentId:LaunchProfileInitializationScript'</a>,
--   <a>launchProfileInitializationScript_studioComponentId</a> - The
--   unique identifier for a studio component resource.
--   
--   <a>$sel:studioComponentName:LaunchProfileInitializationScript'</a>,
--   <a>launchProfileInitializationScript_studioComponentName</a> - The
--   name for the studio component.
newLaunchProfileInitializationScript :: LaunchProfileInitializationScript

-- | <i>See:</i> <a>newLaunchProfileMembership</a> smart constructor.
data LaunchProfileMembership
LaunchProfileMembership' :: Maybe Text -> Maybe Text -> Maybe LaunchProfilePersona -> LaunchProfileMembership

-- | Create a value of <a>LaunchProfileMembership</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:identityStoreId:LaunchProfileMembership'</a>,
--   <a>launchProfileMembership_identityStoreId</a> - The ID of the
--   identity store.
--   
--   <a>$sel:principalId:LaunchProfileMembership'</a>,
--   <a>launchProfileMembership_principalId</a> - The principal ID.
--   
--   <a>$sel:persona:LaunchProfileMembership'</a>,
--   <a>launchProfileMembership_persona</a> - The persona.
newLaunchProfileMembership :: LaunchProfileMembership

-- | The configuration for a license service that is associated with a
--   studio resource.
--   
--   <i>See:</i> <a>newLicenseServiceConfiguration</a> smart constructor.
data LicenseServiceConfiguration
LicenseServiceConfiguration' :: Maybe Text -> LicenseServiceConfiguration

-- | Create a value of <a>LicenseServiceConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:endpoint:LicenseServiceConfiguration'</a>,
--   <a>licenseServiceConfiguration_endpoint</a> - The endpoint of the
--   license service that is accessed by the studio component resource.
newLicenseServiceConfiguration :: LicenseServiceConfiguration

-- | <i>See:</i> <a>newNewLaunchProfileMember</a> smart constructor.
data NewLaunchProfileMember
NewLaunchProfileMember' :: LaunchProfilePersona -> Text -> NewLaunchProfileMember

-- | Create a value of <a>NewLaunchProfileMember</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:persona:NewLaunchProfileMember'</a>,
--   <a>newLaunchProfileMember_persona</a> - The persona.
--   
--   <a>$sel:principalId:NewLaunchProfileMember'</a>,
--   <a>newLaunchProfileMember_principalId</a> - The principal ID.
newNewLaunchProfileMember :: LaunchProfilePersona -> Text -> NewLaunchProfileMember

-- | <i>See:</i> <a>newNewStudioMember</a> smart constructor.
data NewStudioMember
NewStudioMember' :: StudioPersona -> Text -> NewStudioMember

-- | Create a value of <a>NewStudioMember</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:persona:NewStudioMember'</a>, <a>newStudioMember_persona</a> -
--   The persona.
--   
--   <a>$sel:principalId:NewStudioMember'</a>,
--   <a>newStudioMember_principalId</a> - The principal ID.
newNewStudioMember :: StudioPersona -> Text -> NewStudioMember

-- | A parameter for a studio component script, in the form of a key:value
--   pair.
--   
--   <i>See:</i> <a>newScriptParameterKeyValue</a> smart constructor.
data ScriptParameterKeyValue
ScriptParameterKeyValue' :: Maybe Text -> Maybe Text -> ScriptParameterKeyValue

-- | Create a value of <a>ScriptParameterKeyValue</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:value:ScriptParameterKeyValue'</a>,
--   <a>scriptParameterKeyValue_value</a> - A script parameter value.
--   
--   <a>$sel:key:ScriptParameterKeyValue'</a>,
--   <a>scriptParameterKeyValue_key</a> - A script parameter key.
newScriptParameterKeyValue :: ScriptParameterKeyValue

-- | The configuration for a shared file storage system that is associated
--   with a studio resource.
--   
--   <i>See:</i> <a>newSharedFileSystemConfiguration</a> smart constructor.
data SharedFileSystemConfiguration
SharedFileSystemConfiguration' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> SharedFileSystemConfiguration

-- | Create a value of <a>SharedFileSystemConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fileSystemId:SharedFileSystemConfiguration'</a>,
--   <a>sharedFileSystemConfiguration_fileSystemId</a> - The unique
--   identifier for a file system.
--   
--   <a>$sel:windowsMountDrive:SharedFileSystemConfiguration'</a>,
--   <a>sharedFileSystemConfiguration_windowsMountDrive</a> - The mount
--   location for a shared file system on a Windows virtual workstation.
--   
--   <a>$sel:linuxMountPoint:SharedFileSystemConfiguration'</a>,
--   <a>sharedFileSystemConfiguration_linuxMountPoint</a> - The mount
--   location for a shared file system on a Linux virtual workstation.
--   
--   <a>$sel:shareName:SharedFileSystemConfiguration'</a>,
--   <a>sharedFileSystemConfiguration_shareName</a> - The name of the file
--   share.
--   
--   <a>$sel:endpoint:SharedFileSystemConfiguration'</a>,
--   <a>sharedFileSystemConfiguration_endpoint</a> - The endpoint of the
--   shared file system that is accessed by the studio component resource.
newSharedFileSystemConfiguration :: SharedFileSystemConfiguration

-- | A configuration for a streaming session.
--   
--   <i>See:</i> <a>newStreamConfiguration</a> smart constructor.
data StreamConfiguration
StreamConfiguration' :: Maybe [Text] -> Maybe Natural -> Maybe StreamingClipboardMode -> Maybe (NonEmpty StreamingInstanceType) -> StreamConfiguration

-- | Create a value of <a>StreamConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:streamingImageIds:StreamConfiguration'</a>,
--   <a>streamConfiguration_streamingImageIds</a> - The streaming images
--   that users can select from when launching a streaming session with
--   this launch profile.
--   
--   <a>$sel:maxSessionLengthInMinutes:StreamConfiguration'</a>,
--   <a>streamConfiguration_maxSessionLengthInMinutes</a> - The length of
--   time, in minutes, that a streaming session can run. After this point,
--   Nimble Studio automatically terminates the session.
--   
--   <a>$sel:clipboardMode:StreamConfiguration'</a>,
--   <a>streamConfiguration_clipboardMode</a> - Enable or disable the use
--   of the system clipboard to copy and paste between the streaming
--   session and streaming client.
--   
--   <a>$sel:ec2InstanceTypes:StreamConfiguration'</a>,
--   <a>streamConfiguration_ec2InstanceTypes</a> - The EC2 instance types
--   that users can select from when launching a streaming session with
--   this launch profile.
newStreamConfiguration :: StreamConfiguration

-- | <i>See:</i> <a>newStreamConfigurationCreate</a> smart constructor.
data StreamConfigurationCreate
StreamConfigurationCreate' :: Maybe Natural -> StreamingClipboardMode -> [Text] -> NonEmpty StreamingInstanceType -> StreamConfigurationCreate

-- | Create a value of <a>StreamConfigurationCreate</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:maxSessionLengthInMinutes:StreamConfigurationCreate'</a>,
--   <a>streamConfigurationCreate_maxSessionLengthInMinutes</a> - The
--   length of time, in minutes, that a streaming session can run. After
--   this point, Nimble Studio automatically terminates the session.
--   
--   <a>$sel:clipboardMode:StreamConfigurationCreate'</a>,
--   <a>streamConfigurationCreate_clipboardMode</a> - Enable or disable the
--   use of the system clipboard to copy and paste between the streaming
--   session and streaming client.
--   
--   <a>$sel:streamingImageIds:StreamConfigurationCreate'</a>,
--   <a>streamConfigurationCreate_streamingImageIds</a> - The streaming
--   images that users can select from when launching a streaming session
--   with this launch profile.
--   
--   <a>$sel:ec2InstanceTypes:StreamConfigurationCreate'</a>,
--   <a>streamConfigurationCreate_ec2InstanceTypes</a> - The EC2 instance
--   types that users can select from when launching a streaming session
--   with this launch profile.
newStreamConfigurationCreate :: StreamingClipboardMode -> NonEmpty StreamingInstanceType -> StreamConfigurationCreate

-- | <i>See:</i> <a>newStreamingImage</a> smart constructor.
data StreamingImage
StreamingImage' :: Maybe StreamingImageState -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe StreamingImageEncryptionConfiguration -> Maybe Text -> Maybe [Text] -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe StreamingImageStatusCode -> StreamingImage

-- | Create a value of <a>StreamingImage</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:state:StreamingImage'</a>, <a>streamingImage_state</a> - The
--   current state.
--   
--   <a>$sel:platform:StreamingImage'</a>, <a>streamingImage_platform</a> -
--   The platform of the streaming image, either WINDOWS or LINUX.
--   
--   <a>$sel:arn:StreamingImage'</a>, <a>streamingImage_arn</a> - The ARN
--   of the resource.
--   
--   <a>$sel:streamingImageId:StreamingImage'</a>,
--   <a>streamingImage_streamingImageId</a> - The ID of the streaming
--   image.
--   
--   <a>$sel:ec2ImageId:StreamingImage'</a>,
--   <a>streamingImage_ec2ImageId</a> - The ID of an EC2 machine image with
--   which to create the streaming image.
--   
--   <a>$sel:owner:StreamingImage'</a>, <a>streamingImage_owner</a> - The
--   owner of the streaming image, either the studioId that contains the
--   streaming image, or 'amazon' for images that are provided by Amazon
--   Nimble Studio.
--   
--   <a>$sel:name:StreamingImage'</a>, <a>streamingImage_name</a> - A
--   friendly name for a streaming image resource.
--   
--   <a>$sel:encryptionConfiguration:StreamingImage'</a>,
--   <a>streamingImage_encryptionConfiguration</a> - The encryption
--   configuration.
--   
--   <a>$sel:statusMessage:StreamingImage'</a>,
--   <a>streamingImage_statusMessage</a> - The status message for the
--   streaming image.
--   
--   <a>$sel:eulaIds:StreamingImage'</a>, <a>streamingImage_eulaIds</a> -
--   The list of EULAs that must be accepted before a Streaming Session can
--   be started using this streaming image.
--   
--   <a>$sel:description:StreamingImage'</a>,
--   <a>streamingImage_description</a> - A human-readable description of
--   the streaming image.
--   
--   <a>$sel:tags:StreamingImage'</a>, <a>streamingImage_tags</a> - A
--   collection of labels, in the form of key:value pairs, that apply to
--   this resource.
--   
--   <a>$sel:statusCode:StreamingImage'</a>,
--   <a>streamingImage_statusCode</a> - The status code.
newStreamingImage :: StreamingImage

-- | <i>See:</i> <a>newStreamingImageEncryptionConfiguration</a> smart
--   constructor.
data StreamingImageEncryptionConfiguration
StreamingImageEncryptionConfiguration' :: Maybe Text -> StreamingImageEncryptionConfigurationKeyType -> StreamingImageEncryptionConfiguration

-- | Create a value of <a>StreamingImageEncryptionConfiguration</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:keyArn:StreamingImageEncryptionConfiguration'</a>,
--   <a>streamingImageEncryptionConfiguration_keyArn</a> - The ARN for a
--   KMS key that is used to encrypt studio data.
--   
--   <a>$sel:keyType:StreamingImageEncryptionConfiguration'</a>,
--   <a>streamingImageEncryptionConfiguration_keyType</a> - The type of KMS
--   key that is used to encrypt studio data.
newStreamingImageEncryptionConfiguration :: StreamingImageEncryptionConfigurationKeyType -> StreamingImageEncryptionConfiguration

-- | <i>See:</i> <a>newStreamingSession</a> smart constructor.
data StreamingSession
StreamingSession' :: Maybe Text -> Maybe StreamingSessionState -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe StreamingSessionStatusCode -> StreamingSession

-- | Create a value of <a>StreamingSession</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ownedBy:StreamingSession'</a>, <a>streamingSession_ownedBy</a>
--   - The user ID of the user that owns the streaming session.
--   
--   <a>$sel:state:StreamingSession'</a>, <a>streamingSession_state</a> -
--   The current state.
--   
--   <a>$sel:arn:StreamingSession'</a>, <a>streamingSession_arn</a> - The
--   ARN of the resource.
--   
--   <a>$sel:createdAt:StreamingSession'</a>,
--   <a>streamingSession_createdAt</a> - The Unix epoch timestamp in
--   seconds for when the resource was created.
--   
--   <a>$sel:ec2InstanceType:StreamingSession'</a>,
--   <a>streamingSession_ec2InstanceType</a> - The EC2 Instance type used
--   for the streaming session.
--   
--   <a>$sel:createdBy:StreamingSession'</a>,
--   <a>streamingSession_createdBy</a> - The user ID of the user that
--   created the streaming session.
--   
--   <a>$sel:launchProfileId:StreamingSession'</a>,
--   <a>streamingSession_launchProfileId</a> - The ID of the launch profile
--   used to control access from the streaming session.
--   
--   <a>$sel:streamingImageId:StreamingSession'</a>,
--   <a>streamingSession_streamingImageId</a> - The ID of the streaming
--   image.
--   
--   <a>$sel:updatedBy:StreamingSession'</a>,
--   <a>streamingSession_updatedBy</a> - The user ID of the user that most
--   recently updated the resource.
--   
--   <a>$sel:terminateAt:StreamingSession'</a>,
--   <a>streamingSession_terminateAt</a> - The time the streaming session
--   will automatically terminate if not terminated by the user.
--   
--   <a>$sel:statusMessage:StreamingSession'</a>,
--   <a>streamingSession_statusMessage</a> - The status message for the
--   streaming session.
--   
--   <a>$sel:updatedAt:StreamingSession'</a>,
--   <a>streamingSession_updatedAt</a> - The Unix epoch timestamp in
--   seconds for when the resource was updated.
--   
--   <a>$sel:sessionId:StreamingSession'</a>,
--   <a>streamingSession_sessionId</a> - The session ID.
--   
--   <a>$sel:tags:StreamingSession'</a>, <a>streamingSession_tags</a> - A
--   collection of labels, in the form of key:value pairs, that apply to
--   this resource.
--   
--   <a>$sel:statusCode:StreamingSession'</a>,
--   <a>streamingSession_statusCode</a> - The status code.
newStreamingSession :: StreamingSession

-- | <i>See:</i> <a>newStreamingSessionStream</a> smart constructor.
data StreamingSessionStream
StreamingSessionStream' :: Maybe Text -> Maybe StreamingSessionStreamState -> Maybe POSIX -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe StreamingSessionStreamStatusCode -> StreamingSessionStream

-- | Create a value of <a>StreamingSessionStream</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ownedBy:StreamingSessionStream'</a>,
--   <a>streamingSessionStream_ownedBy</a> - The user ID of the user that
--   owns the streaming session.
--   
--   <a>$sel:state:StreamingSessionStream'</a>,
--   <a>streamingSessionStream_state</a> - The current state.
--   
--   <a>$sel:createdAt:StreamingSessionStream'</a>,
--   <a>streamingSessionStream_createdAt</a> - The Unix epoch timestamp in
--   seconds for when the resource was created.
--   
--   <a>$sel:expiresAt:StreamingSessionStream'</a>,
--   <a>streamingSessionStream_expiresAt</a> - The Unix epoch timestamp in
--   seconds for when the resource expires.
--   
--   <a>$sel:url:StreamingSessionStream'</a>,
--   <a>streamingSessionStream_url</a> - The URL to connect to this stream
--   using the DCV client.
--   
--   <a>$sel:createdBy:StreamingSessionStream'</a>,
--   <a>streamingSessionStream_createdBy</a> - The user ID of the user that
--   created the streaming session stream.
--   
--   <a>$sel:streamId:StreamingSessionStream'</a>,
--   <a>streamingSessionStream_streamId</a> - The stream ID.
--   
--   <a>$sel:statusCode:StreamingSessionStream'</a>,
--   <a>streamingSessionStream_statusCode</a> - The streaming session
--   stream status code.
newStreamingSessionStream :: StreamingSessionStream

-- | <i>See:</i> <a>newStudio</a> smart constructor.
data Studio
Studio' :: Maybe StudioEncryptionConfiguration -> Maybe StudioState -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe StudioStatusCode -> Studio

-- | Create a value of <a>Studio</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:studioEncryptionConfiguration:Studio'</a>,
--   <a>studio_studioEncryptionConfiguration</a> - Configuration of the
--   encryption method that is used for the studio.
--   
--   <a>$sel:state:Studio'</a>, <a>studio_state</a> - The current state of
--   the studio resource.
--   
--   <a>$sel:studioName:Studio'</a>, <a>studio_studioName</a> - The name of
--   the studio, as included in the URL when accessing it in the Nimble
--   Studio portal.
--   
--   <a>$sel:arn:Studio'</a>, <a>studio_arn</a> - The Amazon Resource Name
--   (ARN) that is assigned to a studio resource and uniquely identifies
--   it. ARNs are unique across all Regions.
--   
--   <a>$sel:createdAt:Studio'</a>, <a>studio_createdAt</a> - The Unix
--   epoch timestamp in seconds for when the resource was created.
--   
--   <a>$sel:studioId:Studio'</a>, <a>studio_studioId</a> - The unique
--   identifier for a studio resource. In Nimble Studio, all other
--   resources are contained in a studio resource.
--   
--   <a>$sel:userRoleArn:Studio'</a>, <a>studio_userRoleArn</a> - The IAM
--   role that studio users assume when logging in to the Nimble Studio
--   portal.
--   
--   <a>$sel:ssoClientId:Studio'</a>, <a>studio_ssoClientId</a> - The
--   Amazon Web Services SSO application client ID used to integrate with
--   Amazon Web Services SSO to enable Amazon Web Services SSO users to log
--   in to Nimble portal.
--   
--   <a>$sel:homeRegion:Studio'</a>, <a>studio_homeRegion</a> - The Amazon
--   Web Services Region where the studio resource is located.
--   
--   <a>$sel:statusMessage:Studio'</a>, <a>studio_statusMessage</a> -
--   Additional detail on the studio state.
--   
--   <a>$sel:displayName:Studio'</a>, <a>studio_displayName</a> - A
--   friendly name for the studio.
--   
--   <a>$sel:updatedAt:Studio'</a>, <a>studio_updatedAt</a> - The Unix
--   epoch timestamp in seconds for when the resource was updated.
--   
--   <a>$sel:studioUrl:Studio'</a>, <a>studio_studioUrl</a> - The address
--   of the web page for the studio.
--   
--   <a>$sel:adminRoleArn:Studio'</a>, <a>studio_adminRoleArn</a> - The IAM
--   role that studio admins assume when logging in to the Nimble Studio
--   portal.
--   
--   <a>$sel:tags:Studio'</a>, <a>studio_tags</a> - A collection of labels,
--   in the form of key:value pairs, that apply to this resource.
--   
--   <a>$sel:statusCode:Studio'</a>, <a>studio_statusCode</a> - Status
--   codes that provide additional detail on the studio state.
newStudio :: Studio

-- | A network that is used by a studio’s users and workflows, including
--   render farm, Active Directory, licensing, and file system.
--   
--   <i>See:</i> <a>newStudioComponent</a> smart constructor.
data StudioComponent
StudioComponent' :: Maybe [StudioComponentInitializationScript] -> Maybe StudioComponentState -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe (NonEmpty Text) -> Maybe Text -> Maybe StudioComponentSubtype -> Maybe Text -> Maybe Text -> Maybe [ScriptParameterKeyValue] -> Maybe POSIX -> Maybe StudioComponentType -> Maybe StudioComponentConfiguration -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe StudioComponentStatusCode -> StudioComponent

-- | Create a value of <a>StudioComponent</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:initializationScripts:StudioComponent'</a>,
--   <a>studioComponent_initializationScripts</a> - Initialization scripts
--   for studio components.
--   
--   <a>$sel:state:StudioComponent'</a>, <a>studioComponent_state</a> - The
--   current state.
--   
--   <a>$sel:studioComponentId:StudioComponent'</a>,
--   <a>studioComponent_studioComponentId</a> - The unique identifier for a
--   studio component resource.
--   
--   <a>$sel:arn:StudioComponent'</a>, <a>studioComponent_arn</a> - The ARN
--   of the resource.
--   
--   <a>$sel:createdAt:StudioComponent'</a>,
--   <a>studioComponent_createdAt</a> - The Unix epoch timestamp in seconds
--   for when the resource was created.
--   
--   <a>$sel:createdBy:StudioComponent'</a>,
--   <a>studioComponent_createdBy</a> - The user ID of the user that
--   created the studio component.
--   
--   <a>$sel:ec2SecurityGroupIds:StudioComponent'</a>,
--   <a>studioComponent_ec2SecurityGroupIds</a> - The EC2 security groups
--   that control access to the studio component.
--   
--   <a>$sel:updatedBy:StudioComponent'</a>,
--   <a>studioComponent_updatedBy</a> - The user ID of the user that most
--   recently updated the resource.
--   
--   <a>$sel:subtype:StudioComponent'</a>, <a>studioComponent_subtype</a> -
--   The specific subtype of a studio component.
--   
--   <a>$sel:name:StudioComponent'</a>, <a>studioComponent_name</a> - A
--   friendly name for the studio component resource.
--   
--   <a>$sel:statusMessage:StudioComponent'</a>,
--   <a>studioComponent_statusMessage</a> - The status message for the
--   studio component.
--   
--   <a>$sel:scriptParameters:StudioComponent'</a>,
--   <a>studioComponent_scriptParameters</a> - Parameters for the studio
--   component scripts.
--   
--   <a>$sel:updatedAt:StudioComponent'</a>,
--   <a>studioComponent_updatedAt</a> - The Unix epoch timestamp in seconds
--   for when the resource was updated.
--   
--   <a>$sel:type':StudioComponent'</a>, <a>studioComponent_type</a> - The
--   type of the studio component.
--   
--   <a>$sel:configuration:StudioComponent'</a>,
--   <a>studioComponent_configuration</a> - The configuration of the studio
--   component, based on component type.
--   
--   <a>$sel:description:StudioComponent'</a>,
--   <a>studioComponent_description</a> - A human-readable description for
--   the studio component resource.
--   
--   <a>$sel:tags:StudioComponent'</a>, <a>studioComponent_tags</a> - A
--   collection of labels, in the form of key:value pairs, that apply to
--   this resource.
--   
--   <a>$sel:statusCode:StudioComponent'</a>,
--   <a>studioComponent_statusCode</a> - The status code.
newStudioComponent :: StudioComponent

-- | The configuration of the studio component, based on component type.
--   
--   <i>See:</i> <a>newStudioComponentConfiguration</a> smart constructor.
data StudioComponentConfiguration
StudioComponentConfiguration' :: Maybe ActiveDirectoryConfiguration -> Maybe LicenseServiceConfiguration -> Maybe SharedFileSystemConfiguration -> Maybe ComputeFarmConfiguration -> StudioComponentConfiguration

-- | Create a value of <a>StudioComponentConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:activeDirectoryConfiguration:StudioComponentConfiguration'</a>,
--   <a>studioComponentConfiguration_activeDirectoryConfiguration</a> - The
--   configuration for a Microsoft Active Directory (Microsoft AD) studio
--   resource.
--   
--   <a>$sel:licenseServiceConfiguration:StudioComponentConfiguration'</a>,
--   <a>studioComponentConfiguration_licenseServiceConfiguration</a> - The
--   configuration for a license service that is associated with a studio
--   resource.
--   
--   
--   <a>$sel:sharedFileSystemConfiguration:StudioComponentConfiguration'</a>,
--   <a>studioComponentConfiguration_sharedFileSystemConfiguration</a> -
--   The configuration for a shared file storage system that is associated
--   with a studio resource.
--   
--   <a>$sel:computeFarmConfiguration:StudioComponentConfiguration'</a>,
--   <a>studioComponentConfiguration_computeFarmConfiguration</a> - The
--   configuration for a render farm that is associated with a studio
--   resource.
newStudioComponentConfiguration :: StudioComponentConfiguration

-- | Initialization scripts for studio components.
--   
--   <i>See:</i> <a>newStudioComponentInitializationScript</a> smart
--   constructor.
data StudioComponentInitializationScript
StudioComponentInitializationScript' :: Maybe Text -> Maybe LaunchProfilePlatform -> Maybe StudioComponentInitializationScriptRunContext -> Maybe Text -> StudioComponentInitializationScript

-- | Create a value of <a>StudioComponentInitializationScript</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:script:StudioComponentInitializationScript'</a>,
--   <a>studioComponentInitializationScript_script</a> - The initialization
--   script.
--   
--   <a>$sel:platform:StudioComponentInitializationScript'</a>,
--   <a>studioComponentInitializationScript_platform</a> - The platform of
--   the initialization script, either WINDOWS or LINUX.
--   
--   <a>$sel:runContext:StudioComponentInitializationScript'</a>,
--   <a>studioComponentInitializationScript_runContext</a> - The method to
--   use when running the initialization script.
--   
--   
--   <a>$sel:launchProfileProtocolVersion:StudioComponentInitializationScript'</a>,
--   <a>studioComponentInitializationScript_launchProfileProtocolVersion</a>
--   - The version number of the protocol that is used by the launch
--   profile. The only valid version is "2021-03-31".
newStudioComponentInitializationScript :: StudioComponentInitializationScript

-- | <i>See:</i> <a>newStudioComponentSummary</a> smart constructor.
data StudioComponentSummary
StudioComponentSummary' :: Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe StudioComponentSubtype -> Maybe Text -> Maybe POSIX -> Maybe StudioComponentType -> Maybe Text -> StudioComponentSummary

-- | Create a value of <a>StudioComponentSummary</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:studioComponentId:StudioComponentSummary'</a>,
--   <a>studioComponentSummary_studioComponentId</a> - The unique
--   identifier for a studio component resource.
--   
--   <a>$sel:createdAt:StudioComponentSummary'</a>,
--   <a>studioComponentSummary_createdAt</a> - The Unix epoch timestamp in
--   seconds for when the resource was created.
--   
--   <a>$sel:createdBy:StudioComponentSummary'</a>,
--   <a>studioComponentSummary_createdBy</a> - The user ID of the user that
--   created the studio component.
--   
--   <a>$sel:updatedBy:StudioComponentSummary'</a>,
--   <a>studioComponentSummary_updatedBy</a> - The user ID of the user that
--   most recently updated the resource.
--   
--   <a>$sel:subtype:StudioComponentSummary'</a>,
--   <a>studioComponentSummary_subtype</a> - The specific subtype of a
--   studio component.
--   
--   <a>$sel:name:StudioComponentSummary'</a>,
--   <a>studioComponentSummary_name</a> - The name for the studio
--   component.
--   
--   <a>$sel:updatedAt:StudioComponentSummary'</a>,
--   <a>studioComponentSummary_updatedAt</a> - The Unix epoch timestamp in
--   seconds for when the resource was updated.
--   
--   <a>$sel:type':StudioComponentSummary'</a>,
--   <a>studioComponentSummary_type</a> - The type of the studio component.
--   
--   <a>$sel:description:StudioComponentSummary'</a>,
--   <a>studioComponentSummary_description</a> - The description.
newStudioComponentSummary :: StudioComponentSummary

-- | Configuration of the encryption method that is used for the studio.
--   
--   <i>See:</i> <a>newStudioEncryptionConfiguration</a> smart constructor.
data StudioEncryptionConfiguration
StudioEncryptionConfiguration' :: Maybe Text -> StudioEncryptionConfigurationKeyType -> StudioEncryptionConfiguration

-- | Create a value of <a>StudioEncryptionConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:keyArn:StudioEncryptionConfiguration'</a>,
--   <a>studioEncryptionConfiguration_keyArn</a> - The ARN for a KMS key
--   that is used to encrypt studio data.
--   
--   <a>$sel:keyType:StudioEncryptionConfiguration'</a>,
--   <a>studioEncryptionConfiguration_keyType</a> - The type of KMS key
--   that is used to encrypt studio data.
newStudioEncryptionConfiguration :: StudioEncryptionConfigurationKeyType -> StudioEncryptionConfiguration

-- | <i>See:</i> <a>newStudioMembership</a> smart constructor.
data StudioMembership
StudioMembership' :: Maybe Text -> Maybe Text -> Maybe StudioPersona -> StudioMembership

-- | Create a value of <a>StudioMembership</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:identityStoreId:StudioMembership'</a>,
--   <a>studioMembership_identityStoreId</a> - The ID of the identity
--   store.
--   
--   <a>$sel:principalId:StudioMembership'</a>,
--   <a>studioMembership_principalId</a> - The principal ID.
--   
--   <a>$sel:persona:StudioMembership'</a>, <a>studioMembership_persona</a>
--   - The persona.
newStudioMembership :: StudioMembership
