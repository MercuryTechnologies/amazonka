-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/

@package libZSservicesZSamazonka-textractZSamazonka-textract
@version 1.6.1


module Network.AWS.Textract.Types.BlockType
newtype BlockType
BlockType' :: Text -> BlockType
[fromBlockType] :: BlockType -> Text
pattern BlockType_CELL :: BlockType
pattern BlockType_KEY_VALUE_SET :: BlockType
pattern BlockType_LINE :: BlockType
pattern BlockType_PAGE :: BlockType
pattern BlockType_SELECTION_ELEMENT :: BlockType
pattern BlockType_TABLE :: BlockType
pattern BlockType_WORD :: BlockType
instance Network.AWS.Data.XML.ToXML Network.AWS.Textract.Types.BlockType.BlockType
instance Network.AWS.Data.XML.FromXML Network.AWS.Textract.Types.BlockType.BlockType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Textract.Types.BlockType.BlockType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Textract.Types.BlockType.BlockType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Textract.Types.BlockType.BlockType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Textract.Types.BlockType.BlockType
instance Network.AWS.Data.Query.ToQuery Network.AWS.Textract.Types.BlockType.BlockType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Textract.Types.BlockType.BlockType
instance Network.AWS.Data.Log.ToLog Network.AWS.Textract.Types.BlockType.BlockType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Textract.Types.BlockType.BlockType
instance Network.AWS.Data.Text.ToText Network.AWS.Textract.Types.BlockType.BlockType
instance Network.AWS.Data.Text.FromText Network.AWS.Textract.Types.BlockType.BlockType
instance Control.DeepSeq.NFData Network.AWS.Textract.Types.BlockType.BlockType
instance Data.Hashable.Class.Hashable Network.AWS.Textract.Types.BlockType.BlockType
instance GHC.Generics.Generic Network.AWS.Textract.Types.BlockType.BlockType
instance GHC.Classes.Ord Network.AWS.Textract.Types.BlockType.BlockType
instance GHC.Classes.Eq Network.AWS.Textract.Types.BlockType.BlockType
instance GHC.Read.Read Network.AWS.Textract.Types.BlockType.BlockType
instance GHC.Show.Show Network.AWS.Textract.Types.BlockType.BlockType


module Network.AWS.Textract.Types.BoundingBox

-- | The bounding box around the detected page, text, key-value pair,
--   table, table cell, or selection element on a document page. The
--   <tt>left</tt> (x-coordinate) and <tt>top</tt> (y-coordinate) are
--   coordinates that represent the top and left sides of the bounding box.
--   Note that the upper-left corner of the image is the origin (0,0).
--   
--   The <tt>top</tt> and <tt>left</tt> values returned are ratios of the
--   overall document page size. For example, if the input image is 700 x
--   200 pixels, and the top-left coordinate of the bounding box is 350 x
--   50 pixels, the API returns a <tt>left</tt> value of 0.5 (350/700) and
--   a <tt>top</tt> value of 0.25 (50/200).
--   
--   The <tt>width</tt> and <tt>height</tt> values represent the dimensions
--   of the bounding box as a ratio of the overall document page dimension.
--   For example, if the document page size is 700 x 200 pixels, and the
--   bounding box width is 70 pixels, the width returned is 0.1.
--   
--   <i>See:</i> <a>newBoundingBox</a> smart constructor.
data BoundingBox
BoundingBox' :: Maybe Double -> Maybe Double -> Maybe Double -> Maybe Double -> BoundingBox

-- | The height of the bounding box as a ratio of the overall document page
--   height.
[$sel:height:BoundingBox'] :: BoundingBox -> Maybe Double

-- | The width of the bounding box as a ratio of the overall document page
--   width.
[$sel:width:BoundingBox'] :: BoundingBox -> Maybe Double

-- | The left coordinate of the bounding box as a ratio of overall document
--   page width.
[$sel:left:BoundingBox'] :: BoundingBox -> Maybe Double

-- | The top coordinate of the bounding box as a ratio of overall document
--   page height.
[$sel:top:BoundingBox'] :: BoundingBox -> Maybe Double

-- | Create a value of <a>BoundingBox</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:height:BoundingBox'</a>, <a>boundingBox_height</a> - The
--   height of the bounding box as a ratio of the overall document page
--   height.
--   
--   <a>$sel:width:BoundingBox'</a>, <a>boundingBox_width</a> - The width
--   of the bounding box as a ratio of the overall document page width.
--   
--   <a>$sel:left:BoundingBox'</a>, <a>boundingBox_left</a> - The left
--   coordinate of the bounding box as a ratio of overall document page
--   width.
--   
--   <a>$sel:top:BoundingBox'</a>, <a>boundingBox_top</a> - The top
--   coordinate of the bounding box as a ratio of overall document page
--   height.
newBoundingBox :: BoundingBox

-- | The height of the bounding box as a ratio of the overall document page
--   height.
boundingBox_height :: Lens' BoundingBox (Maybe Double)

-- | The width of the bounding box as a ratio of the overall document page
--   width.
boundingBox_width :: Lens' BoundingBox (Maybe Double)

-- | The left coordinate of the bounding box as a ratio of overall document
--   page width.
boundingBox_left :: Lens' BoundingBox (Maybe Double)

-- | The top coordinate of the bounding box as a ratio of overall document
--   page height.
boundingBox_top :: Lens' BoundingBox (Maybe Double)
instance GHC.Generics.Generic Network.AWS.Textract.Types.BoundingBox.BoundingBox
instance GHC.Show.Show Network.AWS.Textract.Types.BoundingBox.BoundingBox
instance GHC.Read.Read Network.AWS.Textract.Types.BoundingBox.BoundingBox
instance GHC.Classes.Eq Network.AWS.Textract.Types.BoundingBox.BoundingBox
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Textract.Types.BoundingBox.BoundingBox
instance Data.Hashable.Class.Hashable Network.AWS.Textract.Types.BoundingBox.BoundingBox
instance Control.DeepSeq.NFData Network.AWS.Textract.Types.BoundingBox.BoundingBox


module Network.AWS.Textract.Types.ContentClassifier
newtype ContentClassifier
ContentClassifier' :: Text -> ContentClassifier
[fromContentClassifier] :: ContentClassifier -> Text
pattern ContentClassifier_FreeOfAdultContent :: ContentClassifier
pattern ContentClassifier_FreeOfPersonallyIdentifiableInformation :: ContentClassifier
instance Network.AWS.Data.XML.ToXML Network.AWS.Textract.Types.ContentClassifier.ContentClassifier
instance Network.AWS.Data.XML.FromXML Network.AWS.Textract.Types.ContentClassifier.ContentClassifier
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Textract.Types.ContentClassifier.ContentClassifier
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Textract.Types.ContentClassifier.ContentClassifier
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Textract.Types.ContentClassifier.ContentClassifier
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Textract.Types.ContentClassifier.ContentClassifier
instance Network.AWS.Data.Query.ToQuery Network.AWS.Textract.Types.ContentClassifier.ContentClassifier
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Textract.Types.ContentClassifier.ContentClassifier
instance Network.AWS.Data.Log.ToLog Network.AWS.Textract.Types.ContentClassifier.ContentClassifier
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Textract.Types.ContentClassifier.ContentClassifier
instance Network.AWS.Data.Text.ToText Network.AWS.Textract.Types.ContentClassifier.ContentClassifier
instance Network.AWS.Data.Text.FromText Network.AWS.Textract.Types.ContentClassifier.ContentClassifier
instance Control.DeepSeq.NFData Network.AWS.Textract.Types.ContentClassifier.ContentClassifier
instance Data.Hashable.Class.Hashable Network.AWS.Textract.Types.ContentClassifier.ContentClassifier
instance GHC.Generics.Generic Network.AWS.Textract.Types.ContentClassifier.ContentClassifier
instance GHC.Classes.Ord Network.AWS.Textract.Types.ContentClassifier.ContentClassifier
instance GHC.Classes.Eq Network.AWS.Textract.Types.ContentClassifier.ContentClassifier
instance GHC.Read.Read Network.AWS.Textract.Types.ContentClassifier.ContentClassifier
instance GHC.Show.Show Network.AWS.Textract.Types.ContentClassifier.ContentClassifier


module Network.AWS.Textract.Types.DocumentMetadata

-- | Information about the input document.
--   
--   <i>See:</i> <a>newDocumentMetadata</a> smart constructor.
data DocumentMetadata
DocumentMetadata' :: Maybe Natural -> DocumentMetadata

-- | The number of pages that are detected in the document.
[$sel:pages:DocumentMetadata'] :: DocumentMetadata -> Maybe Natural

-- | Create a value of <a>DocumentMetadata</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pages:DocumentMetadata'</a>, <a>documentMetadata_pages</a> -
--   The number of pages that are detected in the document.
newDocumentMetadata :: DocumentMetadata

-- | The number of pages that are detected in the document.
documentMetadata_pages :: Lens' DocumentMetadata (Maybe Natural)
instance GHC.Generics.Generic Network.AWS.Textract.Types.DocumentMetadata.DocumentMetadata
instance GHC.Show.Show Network.AWS.Textract.Types.DocumentMetadata.DocumentMetadata
instance GHC.Read.Read Network.AWS.Textract.Types.DocumentMetadata.DocumentMetadata
instance GHC.Classes.Eq Network.AWS.Textract.Types.DocumentMetadata.DocumentMetadata
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Textract.Types.DocumentMetadata.DocumentMetadata
instance Data.Hashable.Class.Hashable Network.AWS.Textract.Types.DocumentMetadata.DocumentMetadata
instance Control.DeepSeq.NFData Network.AWS.Textract.Types.DocumentMetadata.DocumentMetadata


module Network.AWS.Textract.Types.EntityType
newtype EntityType
EntityType' :: Text -> EntityType
[fromEntityType] :: EntityType -> Text
pattern EntityType_KEY :: EntityType
pattern EntityType_VALUE :: EntityType
instance Network.AWS.Data.XML.ToXML Network.AWS.Textract.Types.EntityType.EntityType
instance Network.AWS.Data.XML.FromXML Network.AWS.Textract.Types.EntityType.EntityType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Textract.Types.EntityType.EntityType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Textract.Types.EntityType.EntityType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Textract.Types.EntityType.EntityType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Textract.Types.EntityType.EntityType
instance Network.AWS.Data.Query.ToQuery Network.AWS.Textract.Types.EntityType.EntityType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Textract.Types.EntityType.EntityType
instance Network.AWS.Data.Log.ToLog Network.AWS.Textract.Types.EntityType.EntityType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Textract.Types.EntityType.EntityType
instance Network.AWS.Data.Text.ToText Network.AWS.Textract.Types.EntityType.EntityType
instance Network.AWS.Data.Text.FromText Network.AWS.Textract.Types.EntityType.EntityType
instance Control.DeepSeq.NFData Network.AWS.Textract.Types.EntityType.EntityType
instance Data.Hashable.Class.Hashable Network.AWS.Textract.Types.EntityType.EntityType
instance GHC.Generics.Generic Network.AWS.Textract.Types.EntityType.EntityType
instance GHC.Classes.Ord Network.AWS.Textract.Types.EntityType.EntityType
instance GHC.Classes.Eq Network.AWS.Textract.Types.EntityType.EntityType
instance GHC.Read.Read Network.AWS.Textract.Types.EntityType.EntityType
instance GHC.Show.Show Network.AWS.Textract.Types.EntityType.EntityType


module Network.AWS.Textract.Types.ExpenseType

-- | An object used to store information about the Type detected by Amazon
--   Textract.
--   
--   <i>See:</i> <a>newExpenseType</a> smart constructor.
data ExpenseType
ExpenseType' :: Maybe Double -> Maybe Text -> ExpenseType

-- | The confidence of accuracy, as a percentage.
[$sel:confidence:ExpenseType'] :: ExpenseType -> Maybe Double

-- | The word or line of text detected by Amazon Textract.
[$sel:text:ExpenseType'] :: ExpenseType -> Maybe Text

-- | Create a value of <a>ExpenseType</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:confidence:ExpenseType'</a>, <a>expenseType_confidence</a> -
--   The confidence of accuracy, as a percentage.
--   
--   <a>$sel:text:ExpenseType'</a>, <a>expenseType_text</a> - The word or
--   line of text detected by Amazon Textract.
newExpenseType :: ExpenseType

-- | The confidence of accuracy, as a percentage.
expenseType_confidence :: Lens' ExpenseType (Maybe Double)

-- | The word or line of text detected by Amazon Textract.
expenseType_text :: Lens' ExpenseType (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Textract.Types.ExpenseType.ExpenseType
instance GHC.Show.Show Network.AWS.Textract.Types.ExpenseType.ExpenseType
instance GHC.Read.Read Network.AWS.Textract.Types.ExpenseType.ExpenseType
instance GHC.Classes.Eq Network.AWS.Textract.Types.ExpenseType.ExpenseType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Textract.Types.ExpenseType.ExpenseType
instance Data.Hashable.Class.Hashable Network.AWS.Textract.Types.ExpenseType.ExpenseType
instance Control.DeepSeq.NFData Network.AWS.Textract.Types.ExpenseType.ExpenseType


module Network.AWS.Textract.Types.FeatureType
newtype FeatureType
FeatureType' :: Text -> FeatureType
[fromFeatureType] :: FeatureType -> Text
pattern FeatureType_FORMS :: FeatureType
pattern FeatureType_TABLES :: FeatureType
instance Network.AWS.Data.XML.ToXML Network.AWS.Textract.Types.FeatureType.FeatureType
instance Network.AWS.Data.XML.FromXML Network.AWS.Textract.Types.FeatureType.FeatureType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Textract.Types.FeatureType.FeatureType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Textract.Types.FeatureType.FeatureType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Textract.Types.FeatureType.FeatureType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Textract.Types.FeatureType.FeatureType
instance Network.AWS.Data.Query.ToQuery Network.AWS.Textract.Types.FeatureType.FeatureType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Textract.Types.FeatureType.FeatureType
instance Network.AWS.Data.Log.ToLog Network.AWS.Textract.Types.FeatureType.FeatureType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Textract.Types.FeatureType.FeatureType
instance Network.AWS.Data.Text.ToText Network.AWS.Textract.Types.FeatureType.FeatureType
instance Network.AWS.Data.Text.FromText Network.AWS.Textract.Types.FeatureType.FeatureType
instance Control.DeepSeq.NFData Network.AWS.Textract.Types.FeatureType.FeatureType
instance Data.Hashable.Class.Hashable Network.AWS.Textract.Types.FeatureType.FeatureType
instance GHC.Generics.Generic Network.AWS.Textract.Types.FeatureType.FeatureType
instance GHC.Classes.Ord Network.AWS.Textract.Types.FeatureType.FeatureType
instance GHC.Classes.Eq Network.AWS.Textract.Types.FeatureType.FeatureType
instance GHC.Read.Read Network.AWS.Textract.Types.FeatureType.FeatureType
instance GHC.Show.Show Network.AWS.Textract.Types.FeatureType.FeatureType


module Network.AWS.Textract.Types.HumanLoopActivationOutput

-- | Shows the results of the human in the loop evaluation. If there is no
--   HumanLoopArn, the input did not trigger human review.
--   
--   <i>See:</i> <a>newHumanLoopActivationOutput</a> smart constructor.
data HumanLoopActivationOutput
HumanLoopActivationOutput' :: Maybe (NonEmpty Text) -> Maybe Text -> Maybe Text -> HumanLoopActivationOutput

-- | Shows if and why human review was needed.
[$sel:humanLoopActivationReasons:HumanLoopActivationOutput'] :: HumanLoopActivationOutput -> Maybe (NonEmpty Text)

-- | The Amazon Resource Name (ARN) of the HumanLoop created.
[$sel:humanLoopArn:HumanLoopActivationOutput'] :: HumanLoopActivationOutput -> Maybe Text

-- | Shows the result of condition evaluations, including those conditions
--   which activated a human review.
[$sel:humanLoopActivationConditionsEvaluationResults:HumanLoopActivationOutput'] :: HumanLoopActivationOutput -> Maybe Text

-- | Create a value of <a>HumanLoopActivationOutput</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:humanLoopActivationReasons:HumanLoopActivationOutput'</a>,
--   <a>humanLoopActivationOutput_humanLoopActivationReasons</a> - Shows if
--   and why human review was needed.
--   
--   <a>$sel:humanLoopArn:HumanLoopActivationOutput'</a>,
--   <a>humanLoopActivationOutput_humanLoopArn</a> - The Amazon Resource
--   Name (ARN) of the HumanLoop created.
--   
--   
--   <a>$sel:humanLoopActivationConditionsEvaluationResults:HumanLoopActivationOutput'</a>,
--   <a>humanLoopActivationOutput_humanLoopActivationConditionsEvaluationResults</a>
--   - Shows the result of condition evaluations, including those
--   conditions which activated a human review.
newHumanLoopActivationOutput :: HumanLoopActivationOutput

-- | Shows if and why human review was needed.
humanLoopActivationOutput_humanLoopActivationReasons :: Lens' HumanLoopActivationOutput (Maybe (NonEmpty Text))

-- | The Amazon Resource Name (ARN) of the HumanLoop created.
humanLoopActivationOutput_humanLoopArn :: Lens' HumanLoopActivationOutput (Maybe Text)

-- | Shows the result of condition evaluations, including those conditions
--   which activated a human review.
humanLoopActivationOutput_humanLoopActivationConditionsEvaluationResults :: Lens' HumanLoopActivationOutput (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Textract.Types.HumanLoopActivationOutput.HumanLoopActivationOutput
instance GHC.Show.Show Network.AWS.Textract.Types.HumanLoopActivationOutput.HumanLoopActivationOutput
instance GHC.Read.Read Network.AWS.Textract.Types.HumanLoopActivationOutput.HumanLoopActivationOutput
instance GHC.Classes.Eq Network.AWS.Textract.Types.HumanLoopActivationOutput.HumanLoopActivationOutput
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Textract.Types.HumanLoopActivationOutput.HumanLoopActivationOutput
instance Data.Hashable.Class.Hashable Network.AWS.Textract.Types.HumanLoopActivationOutput.HumanLoopActivationOutput
instance Control.DeepSeq.NFData Network.AWS.Textract.Types.HumanLoopActivationOutput.HumanLoopActivationOutput


module Network.AWS.Textract.Types.HumanLoopDataAttributes

-- | Allows you to set attributes of the image. Currently, you can declare
--   an image as free of personally identifiable information and adult
--   content.
--   
--   <i>See:</i> <a>newHumanLoopDataAttributes</a> smart constructor.
data HumanLoopDataAttributes
HumanLoopDataAttributes' :: Maybe [ContentClassifier] -> HumanLoopDataAttributes

-- | Sets whether the input image is free of personally identifiable
--   information or adult content.
[$sel:contentClassifiers:HumanLoopDataAttributes'] :: HumanLoopDataAttributes -> Maybe [ContentClassifier]

-- | Create a value of <a>HumanLoopDataAttributes</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:contentClassifiers:HumanLoopDataAttributes'</a>,
--   <a>humanLoopDataAttributes_contentClassifiers</a> - Sets whether the
--   input image is free of personally identifiable information or adult
--   content.
newHumanLoopDataAttributes :: HumanLoopDataAttributes

-- | Sets whether the input image is free of personally identifiable
--   information or adult content.
humanLoopDataAttributes_contentClassifiers :: Lens' HumanLoopDataAttributes (Maybe [ContentClassifier])
instance GHC.Generics.Generic Network.AWS.Textract.Types.HumanLoopDataAttributes.HumanLoopDataAttributes
instance GHC.Show.Show Network.AWS.Textract.Types.HumanLoopDataAttributes.HumanLoopDataAttributes
instance GHC.Read.Read Network.AWS.Textract.Types.HumanLoopDataAttributes.HumanLoopDataAttributes
instance GHC.Classes.Eq Network.AWS.Textract.Types.HumanLoopDataAttributes.HumanLoopDataAttributes
instance Data.Hashable.Class.Hashable Network.AWS.Textract.Types.HumanLoopDataAttributes.HumanLoopDataAttributes
instance Control.DeepSeq.NFData Network.AWS.Textract.Types.HumanLoopDataAttributes.HumanLoopDataAttributes
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Textract.Types.HumanLoopDataAttributes.HumanLoopDataAttributes


module Network.AWS.Textract.Types.HumanLoopConfig

-- | Sets up the human review workflow the document will be sent to if one
--   of the conditions is met. You can also set certain attributes of the
--   image before review.
--   
--   <i>See:</i> <a>newHumanLoopConfig</a> smart constructor.
data HumanLoopConfig
HumanLoopConfig' :: Maybe HumanLoopDataAttributes -> Text -> Text -> HumanLoopConfig

-- | Sets attributes of the input data.
[$sel:dataAttributes:HumanLoopConfig'] :: HumanLoopConfig -> Maybe HumanLoopDataAttributes

-- | The name of the human workflow used for this image. This should be
--   kept unique within a region.
[$sel:humanLoopName:HumanLoopConfig'] :: HumanLoopConfig -> Text

-- | The Amazon Resource Name (ARN) of the flow definition.
[$sel:flowDefinitionArn:HumanLoopConfig'] :: HumanLoopConfig -> Text

-- | Create a value of <a>HumanLoopConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dataAttributes:HumanLoopConfig'</a>,
--   <a>humanLoopConfig_dataAttributes</a> - Sets attributes of the input
--   data.
--   
--   <a>$sel:humanLoopName:HumanLoopConfig'</a>,
--   <a>humanLoopConfig_humanLoopName</a> - The name of the human workflow
--   used for this image. This should be kept unique within a region.
--   
--   <a>$sel:flowDefinitionArn:HumanLoopConfig'</a>,
--   <a>humanLoopConfig_flowDefinitionArn</a> - The Amazon Resource Name
--   (ARN) of the flow definition.
newHumanLoopConfig :: Text -> Text -> HumanLoopConfig

-- | Sets attributes of the input data.
humanLoopConfig_dataAttributes :: Lens' HumanLoopConfig (Maybe HumanLoopDataAttributes)

-- | The name of the human workflow used for this image. This should be
--   kept unique within a region.
humanLoopConfig_humanLoopName :: Lens' HumanLoopConfig Text

-- | The Amazon Resource Name (ARN) of the flow definition.
humanLoopConfig_flowDefinitionArn :: Lens' HumanLoopConfig Text
instance GHC.Generics.Generic Network.AWS.Textract.Types.HumanLoopConfig.HumanLoopConfig
instance GHC.Show.Show Network.AWS.Textract.Types.HumanLoopConfig.HumanLoopConfig
instance GHC.Read.Read Network.AWS.Textract.Types.HumanLoopConfig.HumanLoopConfig
instance GHC.Classes.Eq Network.AWS.Textract.Types.HumanLoopConfig.HumanLoopConfig
instance Data.Hashable.Class.Hashable Network.AWS.Textract.Types.HumanLoopConfig.HumanLoopConfig
instance Control.DeepSeq.NFData Network.AWS.Textract.Types.HumanLoopConfig.HumanLoopConfig
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Textract.Types.HumanLoopConfig.HumanLoopConfig


module Network.AWS.Textract.Types.JobStatus
newtype JobStatus
JobStatus' :: Text -> JobStatus
[fromJobStatus] :: JobStatus -> Text
pattern JobStatus_FAILED :: JobStatus
pattern JobStatus_IN_PROGRESS :: JobStatus
pattern JobStatus_PARTIAL_SUCCESS :: JobStatus
pattern JobStatus_SUCCEEDED :: JobStatus
instance Network.AWS.Data.XML.ToXML Network.AWS.Textract.Types.JobStatus.JobStatus
instance Network.AWS.Data.XML.FromXML Network.AWS.Textract.Types.JobStatus.JobStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Textract.Types.JobStatus.JobStatus
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Textract.Types.JobStatus.JobStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Textract.Types.JobStatus.JobStatus
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Textract.Types.JobStatus.JobStatus
instance Network.AWS.Data.Query.ToQuery Network.AWS.Textract.Types.JobStatus.JobStatus
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Textract.Types.JobStatus.JobStatus
instance Network.AWS.Data.Log.ToLog Network.AWS.Textract.Types.JobStatus.JobStatus
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Textract.Types.JobStatus.JobStatus
instance Network.AWS.Data.Text.ToText Network.AWS.Textract.Types.JobStatus.JobStatus
instance Network.AWS.Data.Text.FromText Network.AWS.Textract.Types.JobStatus.JobStatus
instance Control.DeepSeq.NFData Network.AWS.Textract.Types.JobStatus.JobStatus
instance Data.Hashable.Class.Hashable Network.AWS.Textract.Types.JobStatus.JobStatus
instance GHC.Generics.Generic Network.AWS.Textract.Types.JobStatus.JobStatus
instance GHC.Classes.Ord Network.AWS.Textract.Types.JobStatus.JobStatus
instance GHC.Classes.Eq Network.AWS.Textract.Types.JobStatus.JobStatus
instance GHC.Read.Read Network.AWS.Textract.Types.JobStatus.JobStatus
instance GHC.Show.Show Network.AWS.Textract.Types.JobStatus.JobStatus


module Network.AWS.Textract.Types.NotificationChannel

-- | The Amazon Simple Notification Service (Amazon SNS) topic to which
--   Amazon Textract publishes the completion status of an asynchronous
--   document operation, such as StartDocumentTextDetection.
--   
--   <i>See:</i> <a>newNotificationChannel</a> smart constructor.
data NotificationChannel
NotificationChannel' :: Text -> Text -> NotificationChannel

-- | The Amazon SNS topic that Amazon Textract posts the completion status
--   to.
[$sel:sNSTopicArn:NotificationChannel'] :: NotificationChannel -> Text

-- | The Amazon Resource Name (ARN) of an IAM role that gives Amazon
--   Textract publishing permissions to the Amazon SNS topic.
[$sel:roleArn:NotificationChannel'] :: NotificationChannel -> Text

-- | Create a value of <a>NotificationChannel</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sNSTopicArn:NotificationChannel'</a>,
--   <a>notificationChannel_sNSTopicArn</a> - The Amazon SNS topic that
--   Amazon Textract posts the completion status to.
--   
--   <a>$sel:roleArn:NotificationChannel'</a>,
--   <a>notificationChannel_roleArn</a> - The Amazon Resource Name (ARN) of
--   an IAM role that gives Amazon Textract publishing permissions to the
--   Amazon SNS topic.
newNotificationChannel :: Text -> Text -> NotificationChannel

-- | The Amazon SNS topic that Amazon Textract posts the completion status
--   to.
notificationChannel_sNSTopicArn :: Lens' NotificationChannel Text

-- | The Amazon Resource Name (ARN) of an IAM role that gives Amazon
--   Textract publishing permissions to the Amazon SNS topic.
notificationChannel_roleArn :: Lens' NotificationChannel Text
instance GHC.Generics.Generic Network.AWS.Textract.Types.NotificationChannel.NotificationChannel
instance GHC.Show.Show Network.AWS.Textract.Types.NotificationChannel.NotificationChannel
instance GHC.Read.Read Network.AWS.Textract.Types.NotificationChannel.NotificationChannel
instance GHC.Classes.Eq Network.AWS.Textract.Types.NotificationChannel.NotificationChannel
instance Data.Hashable.Class.Hashable Network.AWS.Textract.Types.NotificationChannel.NotificationChannel
instance Control.DeepSeq.NFData Network.AWS.Textract.Types.NotificationChannel.NotificationChannel
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Textract.Types.NotificationChannel.NotificationChannel


module Network.AWS.Textract.Types.OutputConfig

-- | Sets whether or not your output will go to a user created bucket. Used
--   to set the name of the bucket, and the prefix on the output file.
--   
--   <tt>OutputConfig</tt> is an optional parameter which lets you adjust
--   where your output will be placed. By default, Amazon Textract will
--   store the results internally and can only be accessed by the Get API
--   operations. With OutputConfig enabled, you can set the name of the
--   bucket the output will be sent to and the file prefix of the results
--   where you can download your results. Additionally, you can set the
--   <tt>KMSKeyID</tt> parameter to a customer master key (CMK) to encrypt
--   your output. Without this parameter set Amazon Textract will encrypt
--   server-side using the AWS managed CMK for Amazon S3.
--   
--   Decryption of Customer Content is necessary for processing of the
--   documents by Amazon Textract. If your account is opted out under an AI
--   services opt out policy then all unencrypted Customer Content is
--   immediately and permanently deleted after the Customer Content has
--   been processed by the service. No copy of of the output is retained by
--   Amazon Textract. For information about how to opt out, see <a>Managing
--   AI services opt-out policy.</a>
--   
--   For more information on data privacy, see the <a>Data Privacy FAQ</a>.
--   
--   <i>See:</i> <a>newOutputConfig</a> smart constructor.
data OutputConfig
OutputConfig' :: Maybe Text -> Text -> OutputConfig

-- | The prefix of the object key that the output will be saved to. When
--   not enabled, the prefix will be “textract_output".
[$sel:s3Prefix:OutputConfig'] :: OutputConfig -> Maybe Text

-- | The name of the bucket your output will go to.
[$sel:s3Bucket:OutputConfig'] :: OutputConfig -> Text

-- | Create a value of <a>OutputConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:s3Prefix:OutputConfig'</a>, <a>outputConfig_s3Prefix</a> - The
--   prefix of the object key that the output will be saved to. When not
--   enabled, the prefix will be “textract_output".
--   
--   <a>$sel:s3Bucket:OutputConfig'</a>, <a>outputConfig_s3Bucket</a> - The
--   name of the bucket your output will go to.
newOutputConfig :: Text -> OutputConfig

-- | The prefix of the object key that the output will be saved to. When
--   not enabled, the prefix will be “textract_output".
outputConfig_s3Prefix :: Lens' OutputConfig (Maybe Text)

-- | The name of the bucket your output will go to.
outputConfig_s3Bucket :: Lens' OutputConfig Text
instance GHC.Generics.Generic Network.AWS.Textract.Types.OutputConfig.OutputConfig
instance GHC.Show.Show Network.AWS.Textract.Types.OutputConfig.OutputConfig
instance GHC.Read.Read Network.AWS.Textract.Types.OutputConfig.OutputConfig
instance GHC.Classes.Eq Network.AWS.Textract.Types.OutputConfig.OutputConfig
instance Data.Hashable.Class.Hashable Network.AWS.Textract.Types.OutputConfig.OutputConfig
instance Control.DeepSeq.NFData Network.AWS.Textract.Types.OutputConfig.OutputConfig
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Textract.Types.OutputConfig.OutputConfig


module Network.AWS.Textract.Types.Point

-- | The X and Y coordinates of a point on a document page. The X and Y
--   values that are returned are ratios of the overall document page size.
--   For example, if the input document is 700 x 200 and the operation
--   returns X=0.5 and Y=0.25, then the point is at the (350,50) pixel
--   coordinate on the document page.
--   
--   An array of <tt>Point</tt> objects, <tt>Polygon</tt>, is returned by
--   DetectDocumentText. <tt>Polygon</tt> represents a fine-grained polygon
--   around detected text. For more information, see Geometry in the Amazon
--   Textract Developer Guide.
--   
--   <i>See:</i> <a>newPoint</a> smart constructor.
data Point
Point' :: Maybe Double -> Maybe Double -> Point

-- | The value of the Y coordinate for a point on a <tt>Polygon</tt>.
[$sel:y:Point'] :: Point -> Maybe Double

-- | The value of the X coordinate for a point on a <tt>Polygon</tt>.
[$sel:x:Point'] :: Point -> Maybe Double

-- | Create a value of <a>Point</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:y:Point'</a>, <a>point_y</a> - The value of the Y coordinate
--   for a point on a <tt>Polygon</tt>.
--   
--   <a>$sel:x:Point'</a>, <a>point_x</a> - The value of the X coordinate
--   for a point on a <tt>Polygon</tt>.
newPoint :: Point

-- | The value of the Y coordinate for a point on a <tt>Polygon</tt>.
point_y :: Lens' Point (Maybe Double)

-- | The value of the X coordinate for a point on a <tt>Polygon</tt>.
point_x :: Lens' Point (Maybe Double)
instance GHC.Generics.Generic Network.AWS.Textract.Types.Point.Point
instance GHC.Show.Show Network.AWS.Textract.Types.Point.Point
instance GHC.Read.Read Network.AWS.Textract.Types.Point.Point
instance GHC.Classes.Eq Network.AWS.Textract.Types.Point.Point
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Textract.Types.Point.Point
instance Data.Hashable.Class.Hashable Network.AWS.Textract.Types.Point.Point
instance Control.DeepSeq.NFData Network.AWS.Textract.Types.Point.Point


module Network.AWS.Textract.Types.Geometry

-- | Information about where the following items are located on a document
--   page: detected page, text, key-value pairs, tables, table cells, and
--   selection elements.
--   
--   <i>See:</i> <a>newGeometry</a> smart constructor.
data Geometry
Geometry' :: Maybe [Point] -> Maybe BoundingBox -> Geometry

-- | Within the bounding box, a fine-grained polygon around the recognized
--   item.
[$sel:polygon:Geometry'] :: Geometry -> Maybe [Point]

-- | An axis-aligned coarse representation of the location of the
--   recognized item on the document page.
[$sel:boundingBox:Geometry'] :: Geometry -> Maybe BoundingBox

-- | Create a value of <a>Geometry</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:polygon:Geometry'</a>, <a>geometry_polygon</a> - Within the
--   bounding box, a fine-grained polygon around the recognized item.
--   
--   <a>$sel:boundingBox:Geometry'</a>, <a>geometry_boundingBox</a> - An
--   axis-aligned coarse representation of the location of the recognized
--   item on the document page.
newGeometry :: Geometry

-- | Within the bounding box, a fine-grained polygon around the recognized
--   item.
geometry_polygon :: Lens' Geometry (Maybe [Point])

-- | An axis-aligned coarse representation of the location of the
--   recognized item on the document page.
geometry_boundingBox :: Lens' Geometry (Maybe BoundingBox)
instance GHC.Generics.Generic Network.AWS.Textract.Types.Geometry.Geometry
instance GHC.Show.Show Network.AWS.Textract.Types.Geometry.Geometry
instance GHC.Read.Read Network.AWS.Textract.Types.Geometry.Geometry
instance GHC.Classes.Eq Network.AWS.Textract.Types.Geometry.Geometry
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Textract.Types.Geometry.Geometry
instance Data.Hashable.Class.Hashable Network.AWS.Textract.Types.Geometry.Geometry
instance Control.DeepSeq.NFData Network.AWS.Textract.Types.Geometry.Geometry


module Network.AWS.Textract.Types.ExpenseDetection

-- | An object used to store information about the Value or Label detected
--   by Amazon Textract.
--   
--   <i>See:</i> <a>newExpenseDetection</a> smart constructor.
data ExpenseDetection
ExpenseDetection' :: Maybe Double -> Maybe Text -> Maybe Geometry -> ExpenseDetection

-- | The confidence in detection, as a percentage
[$sel:confidence:ExpenseDetection'] :: ExpenseDetection -> Maybe Double

-- | The word or line of text recognized by Amazon Textract
[$sel:text:ExpenseDetection'] :: ExpenseDetection -> Maybe Text
[$sel:geometry:ExpenseDetection'] :: ExpenseDetection -> Maybe Geometry

-- | Create a value of <a>ExpenseDetection</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:confidence:ExpenseDetection'</a>,
--   <a>expenseDetection_confidence</a> - The confidence in detection, as a
--   percentage
--   
--   <a>$sel:text:ExpenseDetection'</a>, <a>expenseDetection_text</a> - The
--   word or line of text recognized by Amazon Textract
--   
--   <a>$sel:geometry:ExpenseDetection'</a>,
--   <a>expenseDetection_geometry</a> - Undocumented member.
newExpenseDetection :: ExpenseDetection

-- | The confidence in detection, as a percentage
expenseDetection_confidence :: Lens' ExpenseDetection (Maybe Double)

-- | The word or line of text recognized by Amazon Textract
expenseDetection_text :: Lens' ExpenseDetection (Maybe Text)

-- | Undocumented member.
expenseDetection_geometry :: Lens' ExpenseDetection (Maybe Geometry)
instance GHC.Generics.Generic Network.AWS.Textract.Types.ExpenseDetection.ExpenseDetection
instance GHC.Show.Show Network.AWS.Textract.Types.ExpenseDetection.ExpenseDetection
instance GHC.Read.Read Network.AWS.Textract.Types.ExpenseDetection.ExpenseDetection
instance GHC.Classes.Eq Network.AWS.Textract.Types.ExpenseDetection.ExpenseDetection
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Textract.Types.ExpenseDetection.ExpenseDetection
instance Data.Hashable.Class.Hashable Network.AWS.Textract.Types.ExpenseDetection.ExpenseDetection
instance Control.DeepSeq.NFData Network.AWS.Textract.Types.ExpenseDetection.ExpenseDetection


module Network.AWS.Textract.Types.ExpenseField

-- | Breakdown of detected information, seperated into the catagories Type,
--   LableDetection, and ValueDetection
--   
--   <i>See:</i> <a>newExpenseField</a> smart constructor.
data ExpenseField
ExpenseField' :: Maybe ExpenseDetection -> Maybe ExpenseDetection -> Maybe Natural -> Maybe ExpenseType -> ExpenseField

-- | The explicitly stated label of a detected element.
[$sel:labelDetection:ExpenseField'] :: ExpenseField -> Maybe ExpenseDetection

-- | The value of a detected element. Present in explicit and implicit
--   elements.
[$sel:valueDetection:ExpenseField'] :: ExpenseField -> Maybe ExpenseDetection

-- | The page number the value was detected on.
[$sel:pageNumber:ExpenseField'] :: ExpenseField -> Maybe Natural

-- | The implied label of a detected element. Present alongside
--   LabelDetection for explicit elements.
[$sel:type':ExpenseField'] :: ExpenseField -> Maybe ExpenseType

-- | Create a value of <a>ExpenseField</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:labelDetection:ExpenseField'</a>,
--   <a>expenseField_labelDetection</a> - The explicitly stated label of a
--   detected element.
--   
--   <a>$sel:valueDetection:ExpenseField'</a>,
--   <a>expenseField_valueDetection</a> - The value of a detected element.
--   Present in explicit and implicit elements.
--   
--   <a>$sel:pageNumber:ExpenseField'</a>, <a>expenseField_pageNumber</a> -
--   The page number the value was detected on.
--   
--   <a>$sel:type':ExpenseField'</a>, <a>expenseField_type</a> - The
--   implied label of a detected element. Present alongside LabelDetection
--   for explicit elements.
newExpenseField :: ExpenseField

-- | The explicitly stated label of a detected element.
expenseField_labelDetection :: Lens' ExpenseField (Maybe ExpenseDetection)

-- | The value of a detected element. Present in explicit and implicit
--   elements.
expenseField_valueDetection :: Lens' ExpenseField (Maybe ExpenseDetection)

-- | The page number the value was detected on.
expenseField_pageNumber :: Lens' ExpenseField (Maybe Natural)

-- | The implied label of a detected element. Present alongside
--   LabelDetection for explicit elements.
expenseField_type :: Lens' ExpenseField (Maybe ExpenseType)
instance GHC.Generics.Generic Network.AWS.Textract.Types.ExpenseField.ExpenseField
instance GHC.Show.Show Network.AWS.Textract.Types.ExpenseField.ExpenseField
instance GHC.Read.Read Network.AWS.Textract.Types.ExpenseField.ExpenseField
instance GHC.Classes.Eq Network.AWS.Textract.Types.ExpenseField.ExpenseField
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Textract.Types.ExpenseField.ExpenseField
instance Data.Hashable.Class.Hashable Network.AWS.Textract.Types.ExpenseField.ExpenseField
instance Control.DeepSeq.NFData Network.AWS.Textract.Types.ExpenseField.ExpenseField


module Network.AWS.Textract.Types.LineItemFields

-- | A structure that holds information about the different lines found in
--   a document's tables.
--   
--   <i>See:</i> <a>newLineItemFields</a> smart constructor.
data LineItemFields
LineItemFields' :: Maybe [ExpenseField] -> LineItemFields

-- | ExpenseFields used to show information from detected lines on a table.
[$sel:lineItemExpenseFields:LineItemFields'] :: LineItemFields -> Maybe [ExpenseField]

-- | Create a value of <a>LineItemFields</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lineItemExpenseFields:LineItemFields'</a>,
--   <a>lineItemFields_lineItemExpenseFields</a> - ExpenseFields used to
--   show information from detected lines on a table.
newLineItemFields :: LineItemFields

-- | ExpenseFields used to show information from detected lines on a table.
lineItemFields_lineItemExpenseFields :: Lens' LineItemFields (Maybe [ExpenseField])
instance GHC.Generics.Generic Network.AWS.Textract.Types.LineItemFields.LineItemFields
instance GHC.Show.Show Network.AWS.Textract.Types.LineItemFields.LineItemFields
instance GHC.Read.Read Network.AWS.Textract.Types.LineItemFields.LineItemFields
instance GHC.Classes.Eq Network.AWS.Textract.Types.LineItemFields.LineItemFields
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Textract.Types.LineItemFields.LineItemFields
instance Data.Hashable.Class.Hashable Network.AWS.Textract.Types.LineItemFields.LineItemFields
instance Control.DeepSeq.NFData Network.AWS.Textract.Types.LineItemFields.LineItemFields


module Network.AWS.Textract.Types.LineItemGroup

-- | A grouping of tables which contain LineItems, with each table
--   identified by the table's <tt>LineItemGroupIndex</tt>.
--   
--   <i>See:</i> <a>newLineItemGroup</a> smart constructor.
data LineItemGroup
LineItemGroup' :: Maybe [LineItemFields] -> Maybe Natural -> LineItemGroup

-- | The breakdown of information on a particular line of a table.
[$sel:lineItems:LineItemGroup'] :: LineItemGroup -> Maybe [LineItemFields]

-- | The number used to identify a specific table in a document. The first
--   table encountered will have a LineItemGroupIndex of 1, the second 2,
--   etc.
[$sel:lineItemGroupIndex:LineItemGroup'] :: LineItemGroup -> Maybe Natural

-- | Create a value of <a>LineItemGroup</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lineItems:LineItemGroup'</a>, <a>lineItemGroup_lineItems</a> -
--   The breakdown of information on a particular line of a table.
--   
--   <a>$sel:lineItemGroupIndex:LineItemGroup'</a>,
--   <a>lineItemGroup_lineItemGroupIndex</a> - The number used to identify
--   a specific table in a document. The first table encountered will have
--   a LineItemGroupIndex of 1, the second 2, etc.
newLineItemGroup :: LineItemGroup

-- | The breakdown of information on a particular line of a table.
lineItemGroup_lineItems :: Lens' LineItemGroup (Maybe [LineItemFields])

-- | The number used to identify a specific table in a document. The first
--   table encountered will have a LineItemGroupIndex of 1, the second 2,
--   etc.
lineItemGroup_lineItemGroupIndex :: Lens' LineItemGroup (Maybe Natural)
instance GHC.Generics.Generic Network.AWS.Textract.Types.LineItemGroup.LineItemGroup
instance GHC.Show.Show Network.AWS.Textract.Types.LineItemGroup.LineItemGroup
instance GHC.Read.Read Network.AWS.Textract.Types.LineItemGroup.LineItemGroup
instance GHC.Classes.Eq Network.AWS.Textract.Types.LineItemGroup.LineItemGroup
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Textract.Types.LineItemGroup.LineItemGroup
instance Data.Hashable.Class.Hashable Network.AWS.Textract.Types.LineItemGroup.LineItemGroup
instance Control.DeepSeq.NFData Network.AWS.Textract.Types.LineItemGroup.LineItemGroup


module Network.AWS.Textract.Types.ExpenseDocument

-- | The structure holding all the information returned by AnalyzeExpense
--   
--   <i>See:</i> <a>newExpenseDocument</a> smart constructor.
data ExpenseDocument
ExpenseDocument' :: Maybe [LineItemGroup] -> Maybe Natural -> Maybe [ExpenseField] -> ExpenseDocument

-- | Information detected on each table of a document, seperated into
--   <tt>LineItems</tt>.
[$sel:lineItemGroups:ExpenseDocument'] :: ExpenseDocument -> Maybe [LineItemGroup]

-- | Denotes which invoice or receipt in the document the information is
--   coming from. First document will be 1, the second 2, and so on.
[$sel:expenseIndex:ExpenseDocument'] :: ExpenseDocument -> Maybe Natural

-- | Any information found outside of a table by Amazon Textract.
[$sel:summaryFields:ExpenseDocument'] :: ExpenseDocument -> Maybe [ExpenseField]

-- | Create a value of <a>ExpenseDocument</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lineItemGroups:ExpenseDocument'</a>,
--   <a>expenseDocument_lineItemGroups</a> - Information detected on each
--   table of a document, seperated into <tt>LineItems</tt>.
--   
--   <a>$sel:expenseIndex:ExpenseDocument'</a>,
--   <a>expenseDocument_expenseIndex</a> - Denotes which invoice or receipt
--   in the document the information is coming from. First document will be
--   1, the second 2, and so on.
--   
--   <a>$sel:summaryFields:ExpenseDocument'</a>,
--   <a>expenseDocument_summaryFields</a> - Any information found outside
--   of a table by Amazon Textract.
newExpenseDocument :: ExpenseDocument

-- | Information detected on each table of a document, seperated into
--   <tt>LineItems</tt>.
expenseDocument_lineItemGroups :: Lens' ExpenseDocument (Maybe [LineItemGroup])

-- | Denotes which invoice or receipt in the document the information is
--   coming from. First document will be 1, the second 2, and so on.
expenseDocument_expenseIndex :: Lens' ExpenseDocument (Maybe Natural)

-- | Any information found outside of a table by Amazon Textract.
expenseDocument_summaryFields :: Lens' ExpenseDocument (Maybe [ExpenseField])
instance GHC.Generics.Generic Network.AWS.Textract.Types.ExpenseDocument.ExpenseDocument
instance GHC.Show.Show Network.AWS.Textract.Types.ExpenseDocument.ExpenseDocument
instance GHC.Read.Read Network.AWS.Textract.Types.ExpenseDocument.ExpenseDocument
instance GHC.Classes.Eq Network.AWS.Textract.Types.ExpenseDocument.ExpenseDocument
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Textract.Types.ExpenseDocument.ExpenseDocument
instance Data.Hashable.Class.Hashable Network.AWS.Textract.Types.ExpenseDocument.ExpenseDocument
instance Control.DeepSeq.NFData Network.AWS.Textract.Types.ExpenseDocument.ExpenseDocument


module Network.AWS.Textract.Types.RelationshipType
newtype RelationshipType
RelationshipType' :: Text -> RelationshipType
[fromRelationshipType] :: RelationshipType -> Text
pattern RelationshipType_CHILD :: RelationshipType
pattern RelationshipType_COMPLEX_FEATURES :: RelationshipType
pattern RelationshipType_VALUE :: RelationshipType
instance Network.AWS.Data.XML.ToXML Network.AWS.Textract.Types.RelationshipType.RelationshipType
instance Network.AWS.Data.XML.FromXML Network.AWS.Textract.Types.RelationshipType.RelationshipType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Textract.Types.RelationshipType.RelationshipType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Textract.Types.RelationshipType.RelationshipType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Textract.Types.RelationshipType.RelationshipType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Textract.Types.RelationshipType.RelationshipType
instance Network.AWS.Data.Query.ToQuery Network.AWS.Textract.Types.RelationshipType.RelationshipType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Textract.Types.RelationshipType.RelationshipType
instance Network.AWS.Data.Log.ToLog Network.AWS.Textract.Types.RelationshipType.RelationshipType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Textract.Types.RelationshipType.RelationshipType
instance Network.AWS.Data.Text.ToText Network.AWS.Textract.Types.RelationshipType.RelationshipType
instance Network.AWS.Data.Text.FromText Network.AWS.Textract.Types.RelationshipType.RelationshipType
instance Control.DeepSeq.NFData Network.AWS.Textract.Types.RelationshipType.RelationshipType
instance Data.Hashable.Class.Hashable Network.AWS.Textract.Types.RelationshipType.RelationshipType
instance GHC.Generics.Generic Network.AWS.Textract.Types.RelationshipType.RelationshipType
instance GHC.Classes.Ord Network.AWS.Textract.Types.RelationshipType.RelationshipType
instance GHC.Classes.Eq Network.AWS.Textract.Types.RelationshipType.RelationshipType
instance GHC.Read.Read Network.AWS.Textract.Types.RelationshipType.RelationshipType
instance GHC.Show.Show Network.AWS.Textract.Types.RelationshipType.RelationshipType


module Network.AWS.Textract.Types.Relationship

-- | Information about how blocks are related to each other. A
--   <tt>Block</tt> object contains 0 or more <tt>Relation</tt> objects in
--   a list, <tt>Relationships</tt>. For more information, see Block.
--   
--   The <tt>Type</tt> element provides the type of the relationship for
--   all blocks in the <tt>IDs</tt> array.
--   
--   <i>See:</i> <a>newRelationship</a> smart constructor.
data Relationship
Relationship' :: Maybe [Text] -> Maybe RelationshipType -> Relationship

-- | An array of IDs for related blocks. You can get the type of the
--   relationship from the <tt>Type</tt> element.
[$sel:ids:Relationship'] :: Relationship -> Maybe [Text]

-- | The type of relationship that the blocks in the IDs array have with
--   the current block. The relationship can be <tt>VALUE</tt> or
--   <tt>CHILD</tt>. A relationship of type VALUE is a list that contains
--   the ID of the VALUE block that's associated with the KEY of a
--   key-value pair. A relationship of type CHILD is a list of IDs that
--   identify WORD blocks in the case of lines Cell blocks in the case of
--   Tables, and WORD blocks in the case of Selection Elements.
[$sel:type':Relationship'] :: Relationship -> Maybe RelationshipType

-- | Create a value of <a>Relationship</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ids:Relationship'</a>, <a>relationship_ids</a> - An array of
--   IDs for related blocks. You can get the type of the relationship from
--   the <tt>Type</tt> element.
--   
--   <a>$sel:type':Relationship'</a>, <a>relationship_type</a> - The type
--   of relationship that the blocks in the IDs array have with the current
--   block. The relationship can be <tt>VALUE</tt> or <tt>CHILD</tt>. A
--   relationship of type VALUE is a list that contains the ID of the VALUE
--   block that's associated with the KEY of a key-value pair. A
--   relationship of type CHILD is a list of IDs that identify WORD blocks
--   in the case of lines Cell blocks in the case of Tables, and WORD
--   blocks in the case of Selection Elements.
newRelationship :: Relationship

-- | An array of IDs for related blocks. You can get the type of the
--   relationship from the <tt>Type</tt> element.
relationship_ids :: Lens' Relationship (Maybe [Text])

-- | The type of relationship that the blocks in the IDs array have with
--   the current block. The relationship can be <tt>VALUE</tt> or
--   <tt>CHILD</tt>. A relationship of type VALUE is a list that contains
--   the ID of the VALUE block that's associated with the KEY of a
--   key-value pair. A relationship of type CHILD is a list of IDs that
--   identify WORD blocks in the case of lines Cell blocks in the case of
--   Tables, and WORD blocks in the case of Selection Elements.
relationship_type :: Lens' Relationship (Maybe RelationshipType)
instance GHC.Generics.Generic Network.AWS.Textract.Types.Relationship.Relationship
instance GHC.Show.Show Network.AWS.Textract.Types.Relationship.Relationship
instance GHC.Read.Read Network.AWS.Textract.Types.Relationship.Relationship
instance GHC.Classes.Eq Network.AWS.Textract.Types.Relationship.Relationship
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Textract.Types.Relationship.Relationship
instance Data.Hashable.Class.Hashable Network.AWS.Textract.Types.Relationship.Relationship
instance Control.DeepSeq.NFData Network.AWS.Textract.Types.Relationship.Relationship


module Network.AWS.Textract.Types.S3Object

-- | The S3 bucket name and file name that identifies the document.
--   
--   The AWS Region for the S3 bucket that contains the document must match
--   the Region that you use for Amazon Textract operations.
--   
--   For Amazon Textract to process a file in an S3 bucket, the user must
--   have permission to access the S3 bucket and file.
--   
--   <i>See:</i> <a>newS3Object</a> smart constructor.
data S3Object
S3Object' :: Maybe Text -> Maybe Text -> Maybe Text -> S3Object

-- | If the bucket has versioning enabled, you can specify the object
--   version.
[$sel:version:S3Object'] :: S3Object -> Maybe Text

-- | The file name of the input document. Synchronous operations can use
--   image files that are in JPEG or PNG format. Asynchronous operations
--   also support PDF format files.
[$sel:name:S3Object'] :: S3Object -> Maybe Text

-- | The name of the S3 bucket. Note that the # character is not valid in
--   the file name.
[$sel:bucket:S3Object'] :: S3Object -> Maybe Text

-- | Create a value of <a>S3Object</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:version:S3Object'</a>, <a>s3Object_version</a> - If the bucket
--   has versioning enabled, you can specify the object version.
--   
--   <a>$sel:name:S3Object'</a>, <a>s3Object_name</a> - The file name of
--   the input document. Synchronous operations can use image files that
--   are in JPEG or PNG format. Asynchronous operations also support PDF
--   format files.
--   
--   <a>$sel:bucket:S3Object'</a>, <a>s3Object_bucket</a> - The name of the
--   S3 bucket. Note that the # character is not valid in the file name.
newS3Object :: S3Object

-- | If the bucket has versioning enabled, you can specify the object
--   version.
s3Object_version :: Lens' S3Object (Maybe Text)

-- | The file name of the input document. Synchronous operations can use
--   image files that are in JPEG or PNG format. Asynchronous operations
--   also support PDF format files.
s3Object_name :: Lens' S3Object (Maybe Text)

-- | The name of the S3 bucket. Note that the # character is not valid in
--   the file name.
s3Object_bucket :: Lens' S3Object (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Textract.Types.S3Object.S3Object
instance GHC.Show.Show Network.AWS.Textract.Types.S3Object.S3Object
instance GHC.Read.Read Network.AWS.Textract.Types.S3Object.S3Object
instance GHC.Classes.Eq Network.AWS.Textract.Types.S3Object.S3Object
instance Data.Hashable.Class.Hashable Network.AWS.Textract.Types.S3Object.S3Object
instance Control.DeepSeq.NFData Network.AWS.Textract.Types.S3Object.S3Object
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Textract.Types.S3Object.S3Object


module Network.AWS.Textract.Types.DocumentLocation

-- | The Amazon S3 bucket that contains the document to be processed. It's
--   used by asynchronous operations such as StartDocumentTextDetection.
--   
--   The input document can be an image file in JPEG or PNG format. It can
--   also be a file in PDF format.
--   
--   <i>See:</i> <a>newDocumentLocation</a> smart constructor.
data DocumentLocation
DocumentLocation' :: Maybe S3Object -> DocumentLocation

-- | The Amazon S3 bucket that contains the input document.
[$sel:s3Object:DocumentLocation'] :: DocumentLocation -> Maybe S3Object

-- | Create a value of <a>DocumentLocation</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:s3Object:DocumentLocation'</a>,
--   <a>documentLocation_s3Object</a> - The Amazon S3 bucket that contains
--   the input document.
newDocumentLocation :: DocumentLocation

-- | The Amazon S3 bucket that contains the input document.
documentLocation_s3Object :: Lens' DocumentLocation (Maybe S3Object)
instance GHC.Generics.Generic Network.AWS.Textract.Types.DocumentLocation.DocumentLocation
instance GHC.Show.Show Network.AWS.Textract.Types.DocumentLocation.DocumentLocation
instance GHC.Read.Read Network.AWS.Textract.Types.DocumentLocation.DocumentLocation
instance GHC.Classes.Eq Network.AWS.Textract.Types.DocumentLocation.DocumentLocation
instance Data.Hashable.Class.Hashable Network.AWS.Textract.Types.DocumentLocation.DocumentLocation
instance Control.DeepSeq.NFData Network.AWS.Textract.Types.DocumentLocation.DocumentLocation
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Textract.Types.DocumentLocation.DocumentLocation


module Network.AWS.Textract.Types.Document

-- | The input document, either as bytes or as an S3 object.
--   
--   You pass image bytes to an Amazon Textract API operation by using the
--   <tt>Bytes</tt> property. For example, you would use the <tt>Bytes</tt>
--   property to pass a document loaded from a local file system. Image
--   bytes passed by using the <tt>Bytes</tt> property must be base64
--   encoded. Your code might not need to encode document file bytes if
--   you're using an AWS SDK to call Amazon Textract API operations.
--   
--   You pass images stored in an S3 bucket to an Amazon Textract API
--   operation by using the <tt>S3Object</tt> property. Documents stored in
--   an S3 bucket don't need to be base64 encoded.
--   
--   The AWS Region for the S3 bucket that contains the S3 object must
--   match the AWS Region that you use for Amazon Textract operations.
--   
--   If you use the AWS CLI to call Amazon Textract operations, passing
--   image bytes using the Bytes property isn't supported. You must first
--   upload the document to an Amazon S3 bucket, and then call the
--   operation using the S3Object property.
--   
--   For Amazon Textract to process an S3 object, the user must have
--   permission to access the S3 object.
--   
--   <i>See:</i> <a>newDocument</a> smart constructor.
data Document
Document' :: Maybe Base64 -> Maybe S3Object -> Document

-- | A blob of base64-encoded document bytes. The maximum size of a
--   document that's provided in a blob of bytes is 5 MB. The document
--   bytes must be in PNG or JPEG format.
--   
--   If you're using an AWS SDK to call Amazon Textract, you might not need
--   to base64-encode image bytes passed using the <tt>Bytes</tt> field.
[$sel:bytes:Document'] :: Document -> Maybe Base64

-- | Identifies an S3 object as the document source. The maximum size of a
--   document that's stored in an S3 bucket is 5 MB.
[$sel:s3Object:Document'] :: Document -> Maybe S3Object

-- | Create a value of <a>Document</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:bytes:Document'</a>, <a>document_bytes</a> - A blob of
--   base64-encoded document bytes. The maximum size of a document that's
--   provided in a blob of bytes is 5 MB. The document bytes must be in PNG
--   or JPEG format.
--   
--   If you're using an AWS SDK to call Amazon Textract, you might not need
--   to base64-encode image bytes passed using the <tt>Bytes</tt> field.--
--   -- <i>Note:</i> This <tt>Lens</tt> automatically encodes and decodes
--   Base64 data. -- The underlying isomorphism will encode to Base64
--   representation during -- serialisation, and decode from Base64
--   representation during deserialisation. -- This <tt>Lens</tt> accepts
--   and returns only raw unencoded data.
--   
--   <a>$sel:s3Object:Document'</a>, <a>document_s3Object</a> - Identifies
--   an S3 object as the document source. The maximum size of a document
--   that's stored in an S3 bucket is 5 MB.
newDocument :: Document

-- | A blob of base64-encoded document bytes. The maximum size of a
--   document that's provided in a blob of bytes is 5 MB. The document
--   bytes must be in PNG or JPEG format.
--   
--   If you're using an AWS SDK to call Amazon Textract, you might not need
--   to base64-encode image bytes passed using the <tt>Bytes</tt> field.--
--   -- <i>Note:</i> This <tt>Lens</tt> automatically encodes and decodes
--   Base64 data. -- The underlying isomorphism will encode to Base64
--   representation during -- serialisation, and decode from Base64
--   representation during deserialisation. -- This <tt>Lens</tt> accepts
--   and returns only raw unencoded data.
document_bytes :: Lens' Document (Maybe ByteString)

-- | Identifies an S3 object as the document source. The maximum size of a
--   document that's stored in an S3 bucket is 5 MB.
document_s3Object :: Lens' Document (Maybe S3Object)
instance GHC.Generics.Generic Network.AWS.Textract.Types.Document.Document
instance GHC.Show.Show Network.AWS.Textract.Types.Document.Document
instance GHC.Read.Read Network.AWS.Textract.Types.Document.Document
instance GHC.Classes.Eq Network.AWS.Textract.Types.Document.Document
instance Data.Hashable.Class.Hashable Network.AWS.Textract.Types.Document.Document
instance Control.DeepSeq.NFData Network.AWS.Textract.Types.Document.Document
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Textract.Types.Document.Document


module Network.AWS.Textract.Types.SelectionStatus
newtype SelectionStatus
SelectionStatus' :: Text -> SelectionStatus
[fromSelectionStatus] :: SelectionStatus -> Text
pattern SelectionStatus_NOT_SELECTED :: SelectionStatus
pattern SelectionStatus_SELECTED :: SelectionStatus
instance Network.AWS.Data.XML.ToXML Network.AWS.Textract.Types.SelectionStatus.SelectionStatus
instance Network.AWS.Data.XML.FromXML Network.AWS.Textract.Types.SelectionStatus.SelectionStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Textract.Types.SelectionStatus.SelectionStatus
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Textract.Types.SelectionStatus.SelectionStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Textract.Types.SelectionStatus.SelectionStatus
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Textract.Types.SelectionStatus.SelectionStatus
instance Network.AWS.Data.Query.ToQuery Network.AWS.Textract.Types.SelectionStatus.SelectionStatus
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Textract.Types.SelectionStatus.SelectionStatus
instance Network.AWS.Data.Log.ToLog Network.AWS.Textract.Types.SelectionStatus.SelectionStatus
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Textract.Types.SelectionStatus.SelectionStatus
instance Network.AWS.Data.Text.ToText Network.AWS.Textract.Types.SelectionStatus.SelectionStatus
instance Network.AWS.Data.Text.FromText Network.AWS.Textract.Types.SelectionStatus.SelectionStatus
instance Control.DeepSeq.NFData Network.AWS.Textract.Types.SelectionStatus.SelectionStatus
instance Data.Hashable.Class.Hashable Network.AWS.Textract.Types.SelectionStatus.SelectionStatus
instance GHC.Generics.Generic Network.AWS.Textract.Types.SelectionStatus.SelectionStatus
instance GHC.Classes.Ord Network.AWS.Textract.Types.SelectionStatus.SelectionStatus
instance GHC.Classes.Eq Network.AWS.Textract.Types.SelectionStatus.SelectionStatus
instance GHC.Read.Read Network.AWS.Textract.Types.SelectionStatus.SelectionStatus
instance GHC.Show.Show Network.AWS.Textract.Types.SelectionStatus.SelectionStatus


module Network.AWS.Textract.Types.TextType
newtype TextType
TextType' :: Text -> TextType
[fromTextType] :: TextType -> Text
pattern TextType_HANDWRITING :: TextType
pattern TextType_PRINTED :: TextType
instance Network.AWS.Data.XML.ToXML Network.AWS.Textract.Types.TextType.TextType
instance Network.AWS.Data.XML.FromXML Network.AWS.Textract.Types.TextType.TextType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Textract.Types.TextType.TextType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Textract.Types.TextType.TextType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Textract.Types.TextType.TextType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Textract.Types.TextType.TextType
instance Network.AWS.Data.Query.ToQuery Network.AWS.Textract.Types.TextType.TextType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Textract.Types.TextType.TextType
instance Network.AWS.Data.Log.ToLog Network.AWS.Textract.Types.TextType.TextType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Textract.Types.TextType.TextType
instance Network.AWS.Data.Text.ToText Network.AWS.Textract.Types.TextType.TextType
instance Network.AWS.Data.Text.FromText Network.AWS.Textract.Types.TextType.TextType
instance Control.DeepSeq.NFData Network.AWS.Textract.Types.TextType.TextType
instance Data.Hashable.Class.Hashable Network.AWS.Textract.Types.TextType.TextType
instance GHC.Generics.Generic Network.AWS.Textract.Types.TextType.TextType
instance GHC.Classes.Ord Network.AWS.Textract.Types.TextType.TextType
instance GHC.Classes.Eq Network.AWS.Textract.Types.TextType.TextType
instance GHC.Read.Read Network.AWS.Textract.Types.TextType.TextType
instance GHC.Show.Show Network.AWS.Textract.Types.TextType.TextType


module Network.AWS.Textract.Types.Block

-- | A <tt>Block</tt> represents items that are recognized in a document
--   within a group of pixels close to each other. The information returned
--   in a <tt>Block</tt> object depends on the type of operation. In text
--   detection for documents (for example DetectDocumentText), you get
--   information about the detected words and lines of text. In text
--   analysis (for example AnalyzeDocument), you can also get information
--   about the fields, tables, and selection elements that are detected in
--   the document.
--   
--   An array of <tt>Block</tt> objects is returned by both synchronous and
--   asynchronous operations. In synchronous operations, such as
--   DetectDocumentText, the array of <tt>Block</tt> objects is the entire
--   set of results. In asynchronous operations, such as
--   GetDocumentAnalysis, the array is returned over one or more responses.
--   
--   For more information, see <a>How Amazon Textract Works</a>.
--   
--   <i>See:</i> <a>newBlock</a> smart constructor.
data Block
Block' :: Maybe [Relationship] -> Maybe SelectionStatus -> Maybe BlockType -> Maybe Natural -> Maybe Natural -> Maybe Text -> Maybe TextType -> Maybe Natural -> Maybe Natural -> Maybe Double -> Maybe Natural -> Maybe [EntityType] -> Maybe Text -> Maybe Geometry -> Block

-- | A list of child blocks of the current block. For example, a LINE
--   object has child blocks for each WORD block that's part of the line of
--   text. There aren't Relationship objects in the list for relationships
--   that don't exist, such as when the current block has no child blocks.
--   The list size can be the following:
--   
--   <ul>
--   <li>0 - The block has no child blocks.</li>
--   <li>1 - The block has child blocks.</li>
--   </ul>
[$sel:relationships:Block'] :: Block -> Maybe [Relationship]

-- | The selection status of a selection element, such as an option button
--   or check box.
[$sel:selectionStatus:Block'] :: Block -> Maybe SelectionStatus

-- | The type of text item that's recognized. In operations for text
--   detection, the following types are returned:
--   
--   <ul>
--   <li><i>PAGE</i> - Contains a list of the LINE <tt>Block</tt> objects
--   that are detected on a document page.</li>
--   <li><i>WORD</i> - A word detected on a document page. A word is one or
--   more ISO basic Latin script characters that aren't separated by
--   spaces.</li>
--   <li><i>LINE</i> - A string of tab-delimited, contiguous words that are
--   detected on a document page.</li>
--   </ul>
--   
--   In text analysis operations, the following types are returned:
--   
--   <ul>
--   <li><i>PAGE</i> - Contains a list of child <tt>Block</tt> objects that
--   are detected on a document page.</li>
--   <li><i>KEY_VALUE_SET</i> - Stores the KEY and VALUE <tt>Block</tt>
--   objects for linked text that's detected on a document page. Use the
--   <tt>EntityType</tt> field to determine if a KEY_VALUE_SET object is a
--   KEY <tt>Block</tt> object or a VALUE <tt>Block</tt> object.</li>
--   <li><i>WORD</i> - A word that's detected on a document page. A word is
--   one or more ISO basic Latin script characters that aren't separated by
--   spaces.</li>
--   <li><i>LINE</i> - A string of tab-delimited, contiguous words that are
--   detected on a document page.</li>
--   <li><i>TABLE</i> - A table that's detected on a document page. A table
--   is grid-based information with two or more rows or columns, with a
--   cell span of one row and one column each.</li>
--   <li><i>CELL</i> - A cell within a detected table. The cell is the
--   parent of the block that contains the text in the cell.</li>
--   <li><i>SELECTION_ELEMENT</i> - A selection element such as an option
--   button (radio button) or a check box that's detected on a document
--   page. Use the value of <tt>SelectionStatus</tt> to determine the
--   status of the selection element.</li>
--   </ul>
[$sel:blockType:Block'] :: Block -> Maybe BlockType

-- | The number of rows that a table cell spans. Currently this value is
--   always 1, even if the number of rows spanned is greater than 1.
--   <tt>RowSpan</tt> isn't returned by <tt>DetectDocumentText</tt> and
--   <tt>GetDocumentTextDetection</tt>.
[$sel:rowSpan:Block'] :: Block -> Maybe Natural

-- | The page on which a block was detected. <tt>Page</tt> is returned by
--   asynchronous operations. Page values greater than 1 are only returned
--   for multipage documents that are in PDF format. A scanned image
--   (JPEG/PNG), even if it contains multiple document pages, is considered
--   to be a single-page document. The value of <tt>Page</tt> is always 1.
--   Synchronous operations don't return <tt>Page</tt> because every input
--   document is considered to be a single-page document.
[$sel:page:Block'] :: Block -> Maybe Natural

-- | The identifier for the recognized text. The identifier is only unique
--   for a single operation.
[$sel:id:Block'] :: Block -> Maybe Text

-- | The kind of text that Amazon Textract has detected. Can check for
--   handwritten text and printed text.
[$sel:textType:Block'] :: Block -> Maybe TextType

-- | The number of columns that a table cell spans. Currently this value is
--   always 1, even if the number of columns spanned is greater than 1.
--   <tt>ColumnSpan</tt> isn't returned by <tt>DetectDocumentText</tt> and
--   <tt>GetDocumentTextDetection</tt>.
[$sel:columnSpan:Block'] :: Block -> Maybe Natural

-- | The row in which a table cell is located. The first row position is 1.
--   <tt>RowIndex</tt> isn't returned by <tt>DetectDocumentText</tt> and
--   <tt>GetDocumentTextDetection</tt>.
[$sel:rowIndex:Block'] :: Block -> Maybe Natural

-- | The confidence score that Amazon Textract has in the accuracy of the
--   recognized text and the accuracy of the geometry points around the
--   recognized text.
[$sel:confidence:Block'] :: Block -> Maybe Double

-- | The column in which a table cell appears. The first column position is
--   1. <tt>ColumnIndex</tt> isn't returned by <tt>DetectDocumentText</tt>
--   and <tt>GetDocumentTextDetection</tt>.
[$sel:columnIndex:Block'] :: Block -> Maybe Natural

-- | The type of entity. The following can be returned:
--   
--   <ul>
--   <li><i>KEY</i> - An identifier for a field on the document.</li>
--   <li><i>VALUE</i> - The field text.</li>
--   </ul>
--   
--   <tt>EntityTypes</tt> isn't returned by <tt>DetectDocumentText</tt> and
--   <tt>GetDocumentTextDetection</tt>.
[$sel:entityTypes:Block'] :: Block -> Maybe [EntityType]

-- | The word or line of text that's recognized by Amazon Textract.
[$sel:text:Block'] :: Block -> Maybe Text

-- | The location of the recognized text on the image. It includes an
--   axis-aligned, coarse bounding box that surrounds the text, and a
--   finer-grain polygon for more accurate spatial information.
[$sel:geometry:Block'] :: Block -> Maybe Geometry

-- | Create a value of <a>Block</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:relationships:Block'</a>, <a>block_relationships</a> - A list
--   of child blocks of the current block. For example, a LINE object has
--   child blocks for each WORD block that's part of the line of text.
--   There aren't Relationship objects in the list for relationships that
--   don't exist, such as when the current block has no child blocks. The
--   list size can be the following:
--   
--   <ul>
--   <li>0 - The block has no child blocks.</li>
--   <li>1 - The block has child blocks.</li>
--   </ul>
--   
--   <a>$sel:selectionStatus:Block'</a>, <a>block_selectionStatus</a> - The
--   selection status of a selection element, such as an option button or
--   check box.
--   
--   <a>$sel:blockType:Block'</a>, <a>block_blockType</a> - The type of
--   text item that's recognized. In operations for text detection, the
--   following types are returned:
--   
--   <ul>
--   <li><i>PAGE</i> - Contains a list of the LINE <tt>Block</tt> objects
--   that are detected on a document page.</li>
--   <li><i>WORD</i> - A word detected on a document page. A word is one or
--   more ISO basic Latin script characters that aren't separated by
--   spaces.</li>
--   <li><i>LINE</i> - A string of tab-delimited, contiguous words that are
--   detected on a document page.</li>
--   </ul>
--   
--   In text analysis operations, the following types are returned:
--   
--   <ul>
--   <li><i>PAGE</i> - Contains a list of child <tt>Block</tt> objects that
--   are detected on a document page.</li>
--   <li><i>KEY_VALUE_SET</i> - Stores the KEY and VALUE <tt>Block</tt>
--   objects for linked text that's detected on a document page. Use the
--   <tt>EntityType</tt> field to determine if a KEY_VALUE_SET object is a
--   KEY <tt>Block</tt> object or a VALUE <tt>Block</tt> object.</li>
--   <li><i>WORD</i> - A word that's detected on a document page. A word is
--   one or more ISO basic Latin script characters that aren't separated by
--   spaces.</li>
--   <li><i>LINE</i> - A string of tab-delimited, contiguous words that are
--   detected on a document page.</li>
--   <li><i>TABLE</i> - A table that's detected on a document page. A table
--   is grid-based information with two or more rows or columns, with a
--   cell span of one row and one column each.</li>
--   <li><i>CELL</i> - A cell within a detected table. The cell is the
--   parent of the block that contains the text in the cell.</li>
--   <li><i>SELECTION_ELEMENT</i> - A selection element such as an option
--   button (radio button) or a check box that's detected on a document
--   page. Use the value of <tt>SelectionStatus</tt> to determine the
--   status of the selection element.</li>
--   </ul>
--   
--   <a>$sel:rowSpan:Block'</a>, <a>block_rowSpan</a> - The number of rows
--   that a table cell spans. Currently this value is always 1, even if the
--   number of rows spanned is greater than 1. <tt>RowSpan</tt> isn't
--   returned by <tt>DetectDocumentText</tt> and
--   <tt>GetDocumentTextDetection</tt>.
--   
--   <a>$sel:page:Block'</a>, <a>block_page</a> - The page on which a block
--   was detected. <tt>Page</tt> is returned by asynchronous operations.
--   Page values greater than 1 are only returned for multipage documents
--   that are in PDF format. A scanned image (JPEG/PNG), even if it
--   contains multiple document pages, is considered to be a single-page
--   document. The value of <tt>Page</tt> is always 1. Synchronous
--   operations don't return <tt>Page</tt> because every input document is
--   considered to be a single-page document.
--   
--   <a>$sel:id:Block'</a>, <a>block_id</a> - The identifier for the
--   recognized text. The identifier is only unique for a single operation.
--   
--   <a>$sel:textType:Block'</a>, <a>block_textType</a> - The kind of text
--   that Amazon Textract has detected. Can check for handwritten text and
--   printed text.
--   
--   <a>$sel:columnSpan:Block'</a>, <a>block_columnSpan</a> - The number of
--   columns that a table cell spans. Currently this value is always 1,
--   even if the number of columns spanned is greater than 1.
--   <tt>ColumnSpan</tt> isn't returned by <tt>DetectDocumentText</tt> and
--   <tt>GetDocumentTextDetection</tt>.
--   
--   <a>$sel:rowIndex:Block'</a>, <a>block_rowIndex</a> - The row in which
--   a table cell is located. The first row position is 1.
--   <tt>RowIndex</tt> isn't returned by <tt>DetectDocumentText</tt> and
--   <tt>GetDocumentTextDetection</tt>.
--   
--   <a>$sel:confidence:Block'</a>, <a>block_confidence</a> - The
--   confidence score that Amazon Textract has in the accuracy of the
--   recognized text and the accuracy of the geometry points around the
--   recognized text.
--   
--   <a>$sel:columnIndex:Block'</a>, <a>block_columnIndex</a> - The column
--   in which a table cell appears. The first column position is 1.
--   <tt>ColumnIndex</tt> isn't returned by <tt>DetectDocumentText</tt> and
--   <tt>GetDocumentTextDetection</tt>.
--   
--   <a>$sel:entityTypes:Block'</a>, <a>block_entityTypes</a> - The type of
--   entity. The following can be returned:
--   
--   <ul>
--   <li><i>KEY</i> - An identifier for a field on the document.</li>
--   <li><i>VALUE</i> - The field text.</li>
--   </ul>
--   
--   <tt>EntityTypes</tt> isn't returned by <tt>DetectDocumentText</tt> and
--   <tt>GetDocumentTextDetection</tt>.
--   
--   <a>$sel:text:Block'</a>, <a>block_text</a> - The word or line of text
--   that's recognized by Amazon Textract.
--   
--   <a>$sel:geometry:Block'</a>, <a>block_geometry</a> - The location of
--   the recognized text on the image. It includes an axis-aligned, coarse
--   bounding box that surrounds the text, and a finer-grain polygon for
--   more accurate spatial information.
newBlock :: Block

-- | A list of child blocks of the current block. For example, a LINE
--   object has child blocks for each WORD block that's part of the line of
--   text. There aren't Relationship objects in the list for relationships
--   that don't exist, such as when the current block has no child blocks.
--   The list size can be the following:
--   
--   <ul>
--   <li>0 - The block has no child blocks.</li>
--   <li>1 - The block has child blocks.</li>
--   </ul>
block_relationships :: Lens' Block (Maybe [Relationship])

-- | The selection status of a selection element, such as an option button
--   or check box.
block_selectionStatus :: Lens' Block (Maybe SelectionStatus)

-- | The type of text item that's recognized. In operations for text
--   detection, the following types are returned:
--   
--   <ul>
--   <li><i>PAGE</i> - Contains a list of the LINE <tt>Block</tt> objects
--   that are detected on a document page.</li>
--   <li><i>WORD</i> - A word detected on a document page. A word is one or
--   more ISO basic Latin script characters that aren't separated by
--   spaces.</li>
--   <li><i>LINE</i> - A string of tab-delimited, contiguous words that are
--   detected on a document page.</li>
--   </ul>
--   
--   In text analysis operations, the following types are returned:
--   
--   <ul>
--   <li><i>PAGE</i> - Contains a list of child <tt>Block</tt> objects that
--   are detected on a document page.</li>
--   <li><i>KEY_VALUE_SET</i> - Stores the KEY and VALUE <tt>Block</tt>
--   objects for linked text that's detected on a document page. Use the
--   <tt>EntityType</tt> field to determine if a KEY_VALUE_SET object is a
--   KEY <tt>Block</tt> object or a VALUE <tt>Block</tt> object.</li>
--   <li><i>WORD</i> - A word that's detected on a document page. A word is
--   one or more ISO basic Latin script characters that aren't separated by
--   spaces.</li>
--   <li><i>LINE</i> - A string of tab-delimited, contiguous words that are
--   detected on a document page.</li>
--   <li><i>TABLE</i> - A table that's detected on a document page. A table
--   is grid-based information with two or more rows or columns, with a
--   cell span of one row and one column each.</li>
--   <li><i>CELL</i> - A cell within a detected table. The cell is the
--   parent of the block that contains the text in the cell.</li>
--   <li><i>SELECTION_ELEMENT</i> - A selection element such as an option
--   button (radio button) or a check box that's detected on a document
--   page. Use the value of <tt>SelectionStatus</tt> to determine the
--   status of the selection element.</li>
--   </ul>
block_blockType :: Lens' Block (Maybe BlockType)

-- | The number of rows that a table cell spans. Currently this value is
--   always 1, even if the number of rows spanned is greater than 1.
--   <tt>RowSpan</tt> isn't returned by <tt>DetectDocumentText</tt> and
--   <tt>GetDocumentTextDetection</tt>.
block_rowSpan :: Lens' Block (Maybe Natural)

-- | The page on which a block was detected. <tt>Page</tt> is returned by
--   asynchronous operations. Page values greater than 1 are only returned
--   for multipage documents that are in PDF format. A scanned image
--   (JPEG/PNG), even if it contains multiple document pages, is considered
--   to be a single-page document. The value of <tt>Page</tt> is always 1.
--   Synchronous operations don't return <tt>Page</tt> because every input
--   document is considered to be a single-page document.
block_page :: Lens' Block (Maybe Natural)

-- | The identifier for the recognized text. The identifier is only unique
--   for a single operation.
block_id :: Lens' Block (Maybe Text)

-- | The kind of text that Amazon Textract has detected. Can check for
--   handwritten text and printed text.
block_textType :: Lens' Block (Maybe TextType)

-- | The number of columns that a table cell spans. Currently this value is
--   always 1, even if the number of columns spanned is greater than 1.
--   <tt>ColumnSpan</tt> isn't returned by <tt>DetectDocumentText</tt> and
--   <tt>GetDocumentTextDetection</tt>.
block_columnSpan :: Lens' Block (Maybe Natural)

-- | The row in which a table cell is located. The first row position is 1.
--   <tt>RowIndex</tt> isn't returned by <tt>DetectDocumentText</tt> and
--   <tt>GetDocumentTextDetection</tt>.
block_rowIndex :: Lens' Block (Maybe Natural)

-- | The confidence score that Amazon Textract has in the accuracy of the
--   recognized text and the accuracy of the geometry points around the
--   recognized text.
block_confidence :: Lens' Block (Maybe Double)

-- | The column in which a table cell appears. The first column position is
--   1. <tt>ColumnIndex</tt> isn't returned by <tt>DetectDocumentText</tt>
--   and <tt>GetDocumentTextDetection</tt>.
block_columnIndex :: Lens' Block (Maybe Natural)

-- | The type of entity. The following can be returned:
--   
--   <ul>
--   <li><i>KEY</i> - An identifier for a field on the document.</li>
--   <li><i>VALUE</i> - The field text.</li>
--   </ul>
--   
--   <tt>EntityTypes</tt> isn't returned by <tt>DetectDocumentText</tt> and
--   <tt>GetDocumentTextDetection</tt>.
block_entityTypes :: Lens' Block (Maybe [EntityType])

-- | The word or line of text that's recognized by Amazon Textract.
block_text :: Lens' Block (Maybe Text)

-- | The location of the recognized text on the image. It includes an
--   axis-aligned, coarse bounding box that surrounds the text, and a
--   finer-grain polygon for more accurate spatial information.
block_geometry :: Lens' Block (Maybe Geometry)
instance GHC.Generics.Generic Network.AWS.Textract.Types.Block.Block
instance GHC.Show.Show Network.AWS.Textract.Types.Block.Block
instance GHC.Read.Read Network.AWS.Textract.Types.Block.Block
instance GHC.Classes.Eq Network.AWS.Textract.Types.Block.Block
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Textract.Types.Block.Block
instance Data.Hashable.Class.Hashable Network.AWS.Textract.Types.Block.Block
instance Control.DeepSeq.NFData Network.AWS.Textract.Types.Block.Block


module Network.AWS.Textract.Types.Warning

-- | A warning about an issue that occurred during asynchronous text
--   analysis (StartDocumentAnalysis) or asynchronous document text
--   detection (StartDocumentTextDetection).
--   
--   <i>See:</i> <a>newWarning</a> smart constructor.
data Warning
Warning' :: Maybe [Natural] -> Maybe Text -> Warning

-- | A list of the pages that the warning applies to.
[$sel:pages:Warning'] :: Warning -> Maybe [Natural]

-- | The error code for the warning.
[$sel:errorCode:Warning'] :: Warning -> Maybe Text

-- | Create a value of <a>Warning</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pages:Warning'</a>, <a>warning_pages</a> - A list of the pages
--   that the warning applies to.
--   
--   <a>$sel:errorCode:Warning'</a>, <a>warning_errorCode</a> - The error
--   code for the warning.
newWarning :: Warning

-- | A list of the pages that the warning applies to.
warning_pages :: Lens' Warning (Maybe [Natural])

-- | The error code for the warning.
warning_errorCode :: Lens' Warning (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Textract.Types.Warning.Warning
instance GHC.Show.Show Network.AWS.Textract.Types.Warning.Warning
instance GHC.Read.Read Network.AWS.Textract.Types.Warning.Warning
instance GHC.Classes.Eq Network.AWS.Textract.Types.Warning.Warning
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Textract.Types.Warning.Warning
instance Data.Hashable.Class.Hashable Network.AWS.Textract.Types.Warning.Warning
instance Control.DeepSeq.NFData Network.AWS.Textract.Types.Warning.Warning


module Network.AWS.Textract.Types

-- | API version <tt>2018-06-27</tt> of the Amazon Textract SDK
--   configuration.
defaultService :: Service

-- | Amazon Textract isn't able to read the document. For more information
--   on the document limits in Amazon Textract, see limits.
_BadDocumentException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The document can't be processed because it's too large. The maximum
--   document size for synchronous operations 10 MB. The maximum document
--   size for asynchronous operations is 500 MB for PDF files.
_DocumentTooLargeException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Indicates you have exceeded the maximum number of active human in the
--   loop workflows available
_HumanLoopQuotaExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Amazon Textract is unable to access the S3 object that's specified in
--   the request. for more information, <a>Configure Access to Amazon
--   S3</a> For troubleshooting information, see <a>Troubleshooting Amazon
--   S3</a>
_InvalidS3ObjectException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Amazon Textract experienced a service issue. Try your call again.
_InternalServerError :: AsError a => Getting (First ServiceError) a ServiceError

-- | Amazon Textract is temporarily unable to process the request. Try your
--   call again.
_ThrottlingException :: AsError a => Getting (First ServiceError) a ServiceError

-- | An input parameter violated a constraint. For example, in synchronous
--   operations, an <tt>InvalidParameterException</tt> exception occurs
--   when neither of the <tt>S3Object</tt> or <tt>Bytes</tt> values are
--   supplied in the <tt>Document</tt> request parameter. Validate your
--   parameter before calling the API operation again.
_InvalidParameterException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You aren't authorized to perform the action. Use the Amazon Resource
--   Name (ARN) of an authorized user or IAM role to perform the operation.
_AccessDeniedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Indicates you do not have decrypt permissions with the KMS key
--   entered, or the KMS key was entered incorrectly.
_InvalidKMSKeyException :: AsError a => Getting (First ServiceError) a ServiceError

-- | An invalid job identifier was passed to GetDocumentAnalysis or to
--   GetDocumentAnalysis.
_InvalidJobIdException :: AsError a => Getting (First ServiceError) a ServiceError

-- | An Amazon Textract service limit was exceeded. For example, if you
--   start too many asynchronous jobs concurrently, calls to start
--   operations (<tt>StartDocumentTextDetection</tt>, for example) raise a
--   LimitExceededException exception (HTTP status code: 400) until the
--   number of concurrently running jobs is below the Amazon Textract
--   service limit.
_LimitExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The number of requests exceeded your throughput limit. If you want to
--   increase this limit, contact Amazon Textract.
_ProvisionedThroughputExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A <tt>ClientRequestToken</tt> input parameter was reused with an
--   operation, but at least one of the other input parameters is different
--   from the previous call to the operation.
_IdempotentParameterMismatchException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The format of the input document isn't supported. Documents for
--   synchronous operations can be in PNG or JPEG format. Documents for
--   asynchronous operations can also be in PDF format.
_UnsupportedDocumentException :: AsError a => Getting (First ServiceError) a ServiceError
newtype BlockType
BlockType' :: Text -> BlockType
[fromBlockType] :: BlockType -> Text
pattern BlockType_CELL :: BlockType
pattern BlockType_KEY_VALUE_SET :: BlockType
pattern BlockType_LINE :: BlockType
pattern BlockType_PAGE :: BlockType
pattern BlockType_SELECTION_ELEMENT :: BlockType
pattern BlockType_TABLE :: BlockType
pattern BlockType_WORD :: BlockType
newtype ContentClassifier
ContentClassifier' :: Text -> ContentClassifier
[fromContentClassifier] :: ContentClassifier -> Text
pattern ContentClassifier_FreeOfAdultContent :: ContentClassifier
pattern ContentClassifier_FreeOfPersonallyIdentifiableInformation :: ContentClassifier
newtype EntityType
EntityType' :: Text -> EntityType
[fromEntityType] :: EntityType -> Text
pattern EntityType_KEY :: EntityType
pattern EntityType_VALUE :: EntityType
newtype FeatureType
FeatureType' :: Text -> FeatureType
[fromFeatureType] :: FeatureType -> Text
pattern FeatureType_FORMS :: FeatureType
pattern FeatureType_TABLES :: FeatureType
newtype JobStatus
JobStatus' :: Text -> JobStatus
[fromJobStatus] :: JobStatus -> Text
pattern JobStatus_FAILED :: JobStatus
pattern JobStatus_IN_PROGRESS :: JobStatus
pattern JobStatus_PARTIAL_SUCCESS :: JobStatus
pattern JobStatus_SUCCEEDED :: JobStatus
newtype RelationshipType
RelationshipType' :: Text -> RelationshipType
[fromRelationshipType] :: RelationshipType -> Text
pattern RelationshipType_CHILD :: RelationshipType
pattern RelationshipType_COMPLEX_FEATURES :: RelationshipType
pattern RelationshipType_VALUE :: RelationshipType
newtype SelectionStatus
SelectionStatus' :: Text -> SelectionStatus
[fromSelectionStatus] :: SelectionStatus -> Text
pattern SelectionStatus_NOT_SELECTED :: SelectionStatus
pattern SelectionStatus_SELECTED :: SelectionStatus
newtype TextType
TextType' :: Text -> TextType
[fromTextType] :: TextType -> Text
pattern TextType_HANDWRITING :: TextType
pattern TextType_PRINTED :: TextType

-- | A <tt>Block</tt> represents items that are recognized in a document
--   within a group of pixels close to each other. The information returned
--   in a <tt>Block</tt> object depends on the type of operation. In text
--   detection for documents (for example DetectDocumentText), you get
--   information about the detected words and lines of text. In text
--   analysis (for example AnalyzeDocument), you can also get information
--   about the fields, tables, and selection elements that are detected in
--   the document.
--   
--   An array of <tt>Block</tt> objects is returned by both synchronous and
--   asynchronous operations. In synchronous operations, such as
--   DetectDocumentText, the array of <tt>Block</tt> objects is the entire
--   set of results. In asynchronous operations, such as
--   GetDocumentAnalysis, the array is returned over one or more responses.
--   
--   For more information, see <a>How Amazon Textract Works</a>.
--   
--   <i>See:</i> <a>newBlock</a> smart constructor.
data Block
Block' :: Maybe [Relationship] -> Maybe SelectionStatus -> Maybe BlockType -> Maybe Natural -> Maybe Natural -> Maybe Text -> Maybe TextType -> Maybe Natural -> Maybe Natural -> Maybe Double -> Maybe Natural -> Maybe [EntityType] -> Maybe Text -> Maybe Geometry -> Block

-- | A list of child blocks of the current block. For example, a LINE
--   object has child blocks for each WORD block that's part of the line of
--   text. There aren't Relationship objects in the list for relationships
--   that don't exist, such as when the current block has no child blocks.
--   The list size can be the following:
--   
--   <ul>
--   <li>0 - The block has no child blocks.</li>
--   <li>1 - The block has child blocks.</li>
--   </ul>
[$sel:relationships:Block'] :: Block -> Maybe [Relationship]

-- | The selection status of a selection element, such as an option button
--   or check box.
[$sel:selectionStatus:Block'] :: Block -> Maybe SelectionStatus

-- | The type of text item that's recognized. In operations for text
--   detection, the following types are returned:
--   
--   <ul>
--   <li><i>PAGE</i> - Contains a list of the LINE <tt>Block</tt> objects
--   that are detected on a document page.</li>
--   <li><i>WORD</i> - A word detected on a document page. A word is one or
--   more ISO basic Latin script characters that aren't separated by
--   spaces.</li>
--   <li><i>LINE</i> - A string of tab-delimited, contiguous words that are
--   detected on a document page.</li>
--   </ul>
--   
--   In text analysis operations, the following types are returned:
--   
--   <ul>
--   <li><i>PAGE</i> - Contains a list of child <tt>Block</tt> objects that
--   are detected on a document page.</li>
--   <li><i>KEY_VALUE_SET</i> - Stores the KEY and VALUE <tt>Block</tt>
--   objects for linked text that's detected on a document page. Use the
--   <tt>EntityType</tt> field to determine if a KEY_VALUE_SET object is a
--   KEY <tt>Block</tt> object or a VALUE <tt>Block</tt> object.</li>
--   <li><i>WORD</i> - A word that's detected on a document page. A word is
--   one or more ISO basic Latin script characters that aren't separated by
--   spaces.</li>
--   <li><i>LINE</i> - A string of tab-delimited, contiguous words that are
--   detected on a document page.</li>
--   <li><i>TABLE</i> - A table that's detected on a document page. A table
--   is grid-based information with two or more rows or columns, with a
--   cell span of one row and one column each.</li>
--   <li><i>CELL</i> - A cell within a detected table. The cell is the
--   parent of the block that contains the text in the cell.</li>
--   <li><i>SELECTION_ELEMENT</i> - A selection element such as an option
--   button (radio button) or a check box that's detected on a document
--   page. Use the value of <tt>SelectionStatus</tt> to determine the
--   status of the selection element.</li>
--   </ul>
[$sel:blockType:Block'] :: Block -> Maybe BlockType

-- | The number of rows that a table cell spans. Currently this value is
--   always 1, even if the number of rows spanned is greater than 1.
--   <tt>RowSpan</tt> isn't returned by <tt>DetectDocumentText</tt> and
--   <tt>GetDocumentTextDetection</tt>.
[$sel:rowSpan:Block'] :: Block -> Maybe Natural

-- | The page on which a block was detected. <tt>Page</tt> is returned by
--   asynchronous operations. Page values greater than 1 are only returned
--   for multipage documents that are in PDF format. A scanned image
--   (JPEG/PNG), even if it contains multiple document pages, is considered
--   to be a single-page document. The value of <tt>Page</tt> is always 1.
--   Synchronous operations don't return <tt>Page</tt> because every input
--   document is considered to be a single-page document.
[$sel:page:Block'] :: Block -> Maybe Natural

-- | The identifier for the recognized text. The identifier is only unique
--   for a single operation.
[$sel:id:Block'] :: Block -> Maybe Text

-- | The kind of text that Amazon Textract has detected. Can check for
--   handwritten text and printed text.
[$sel:textType:Block'] :: Block -> Maybe TextType

-- | The number of columns that a table cell spans. Currently this value is
--   always 1, even if the number of columns spanned is greater than 1.
--   <tt>ColumnSpan</tt> isn't returned by <tt>DetectDocumentText</tt> and
--   <tt>GetDocumentTextDetection</tt>.
[$sel:columnSpan:Block'] :: Block -> Maybe Natural

-- | The row in which a table cell is located. The first row position is 1.
--   <tt>RowIndex</tt> isn't returned by <tt>DetectDocumentText</tt> and
--   <tt>GetDocumentTextDetection</tt>.
[$sel:rowIndex:Block'] :: Block -> Maybe Natural

-- | The confidence score that Amazon Textract has in the accuracy of the
--   recognized text and the accuracy of the geometry points around the
--   recognized text.
[$sel:confidence:Block'] :: Block -> Maybe Double

-- | The column in which a table cell appears. The first column position is
--   1. <tt>ColumnIndex</tt> isn't returned by <tt>DetectDocumentText</tt>
--   and <tt>GetDocumentTextDetection</tt>.
[$sel:columnIndex:Block'] :: Block -> Maybe Natural

-- | The type of entity. The following can be returned:
--   
--   <ul>
--   <li><i>KEY</i> - An identifier for a field on the document.</li>
--   <li><i>VALUE</i> - The field text.</li>
--   </ul>
--   
--   <tt>EntityTypes</tt> isn't returned by <tt>DetectDocumentText</tt> and
--   <tt>GetDocumentTextDetection</tt>.
[$sel:entityTypes:Block'] :: Block -> Maybe [EntityType]

-- | The word or line of text that's recognized by Amazon Textract.
[$sel:text:Block'] :: Block -> Maybe Text

-- | The location of the recognized text on the image. It includes an
--   axis-aligned, coarse bounding box that surrounds the text, and a
--   finer-grain polygon for more accurate spatial information.
[$sel:geometry:Block'] :: Block -> Maybe Geometry

-- | Create a value of <a>Block</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:relationships:Block'</a>, <a>block_relationships</a> - A list
--   of child blocks of the current block. For example, a LINE object has
--   child blocks for each WORD block that's part of the line of text.
--   There aren't Relationship objects in the list for relationships that
--   don't exist, such as when the current block has no child blocks. The
--   list size can be the following:
--   
--   <ul>
--   <li>0 - The block has no child blocks.</li>
--   <li>1 - The block has child blocks.</li>
--   </ul>
--   
--   <a>$sel:selectionStatus:Block'</a>, <a>block_selectionStatus</a> - The
--   selection status of a selection element, such as an option button or
--   check box.
--   
--   <a>$sel:blockType:Block'</a>, <a>block_blockType</a> - The type of
--   text item that's recognized. In operations for text detection, the
--   following types are returned:
--   
--   <ul>
--   <li><i>PAGE</i> - Contains a list of the LINE <tt>Block</tt> objects
--   that are detected on a document page.</li>
--   <li><i>WORD</i> - A word detected on a document page. A word is one or
--   more ISO basic Latin script characters that aren't separated by
--   spaces.</li>
--   <li><i>LINE</i> - A string of tab-delimited, contiguous words that are
--   detected on a document page.</li>
--   </ul>
--   
--   In text analysis operations, the following types are returned:
--   
--   <ul>
--   <li><i>PAGE</i> - Contains a list of child <tt>Block</tt> objects that
--   are detected on a document page.</li>
--   <li><i>KEY_VALUE_SET</i> - Stores the KEY and VALUE <tt>Block</tt>
--   objects for linked text that's detected on a document page. Use the
--   <tt>EntityType</tt> field to determine if a KEY_VALUE_SET object is a
--   KEY <tt>Block</tt> object or a VALUE <tt>Block</tt> object.</li>
--   <li><i>WORD</i> - A word that's detected on a document page. A word is
--   one or more ISO basic Latin script characters that aren't separated by
--   spaces.</li>
--   <li><i>LINE</i> - A string of tab-delimited, contiguous words that are
--   detected on a document page.</li>
--   <li><i>TABLE</i> - A table that's detected on a document page. A table
--   is grid-based information with two or more rows or columns, with a
--   cell span of one row and one column each.</li>
--   <li><i>CELL</i> - A cell within a detected table. The cell is the
--   parent of the block that contains the text in the cell.</li>
--   <li><i>SELECTION_ELEMENT</i> - A selection element such as an option
--   button (radio button) or a check box that's detected on a document
--   page. Use the value of <tt>SelectionStatus</tt> to determine the
--   status of the selection element.</li>
--   </ul>
--   
--   <a>$sel:rowSpan:Block'</a>, <a>block_rowSpan</a> - The number of rows
--   that a table cell spans. Currently this value is always 1, even if the
--   number of rows spanned is greater than 1. <tt>RowSpan</tt> isn't
--   returned by <tt>DetectDocumentText</tt> and
--   <tt>GetDocumentTextDetection</tt>.
--   
--   <a>$sel:page:Block'</a>, <a>block_page</a> - The page on which a block
--   was detected. <tt>Page</tt> is returned by asynchronous operations.
--   Page values greater than 1 are only returned for multipage documents
--   that are in PDF format. A scanned image (JPEG/PNG), even if it
--   contains multiple document pages, is considered to be a single-page
--   document. The value of <tt>Page</tt> is always 1. Synchronous
--   operations don't return <tt>Page</tt> because every input document is
--   considered to be a single-page document.
--   
--   <a>$sel:id:Block'</a>, <a>block_id</a> - The identifier for the
--   recognized text. The identifier is only unique for a single operation.
--   
--   <a>$sel:textType:Block'</a>, <a>block_textType</a> - The kind of text
--   that Amazon Textract has detected. Can check for handwritten text and
--   printed text.
--   
--   <a>$sel:columnSpan:Block'</a>, <a>block_columnSpan</a> - The number of
--   columns that a table cell spans. Currently this value is always 1,
--   even if the number of columns spanned is greater than 1.
--   <tt>ColumnSpan</tt> isn't returned by <tt>DetectDocumentText</tt> and
--   <tt>GetDocumentTextDetection</tt>.
--   
--   <a>$sel:rowIndex:Block'</a>, <a>block_rowIndex</a> - The row in which
--   a table cell is located. The first row position is 1.
--   <tt>RowIndex</tt> isn't returned by <tt>DetectDocumentText</tt> and
--   <tt>GetDocumentTextDetection</tt>.
--   
--   <a>$sel:confidence:Block'</a>, <a>block_confidence</a> - The
--   confidence score that Amazon Textract has in the accuracy of the
--   recognized text and the accuracy of the geometry points around the
--   recognized text.
--   
--   <a>$sel:columnIndex:Block'</a>, <a>block_columnIndex</a> - The column
--   in which a table cell appears. The first column position is 1.
--   <tt>ColumnIndex</tt> isn't returned by <tt>DetectDocumentText</tt> and
--   <tt>GetDocumentTextDetection</tt>.
--   
--   <a>$sel:entityTypes:Block'</a>, <a>block_entityTypes</a> - The type of
--   entity. The following can be returned:
--   
--   <ul>
--   <li><i>KEY</i> - An identifier for a field on the document.</li>
--   <li><i>VALUE</i> - The field text.</li>
--   </ul>
--   
--   <tt>EntityTypes</tt> isn't returned by <tt>DetectDocumentText</tt> and
--   <tt>GetDocumentTextDetection</tt>.
--   
--   <a>$sel:text:Block'</a>, <a>block_text</a> - The word or line of text
--   that's recognized by Amazon Textract.
--   
--   <a>$sel:geometry:Block'</a>, <a>block_geometry</a> - The location of
--   the recognized text on the image. It includes an axis-aligned, coarse
--   bounding box that surrounds the text, and a finer-grain polygon for
--   more accurate spatial information.
newBlock :: Block

-- | A list of child blocks of the current block. For example, a LINE
--   object has child blocks for each WORD block that's part of the line of
--   text. There aren't Relationship objects in the list for relationships
--   that don't exist, such as when the current block has no child blocks.
--   The list size can be the following:
--   
--   <ul>
--   <li>0 - The block has no child blocks.</li>
--   <li>1 - The block has child blocks.</li>
--   </ul>
block_relationships :: Lens' Block (Maybe [Relationship])

-- | The selection status of a selection element, such as an option button
--   or check box.
block_selectionStatus :: Lens' Block (Maybe SelectionStatus)

-- | The type of text item that's recognized. In operations for text
--   detection, the following types are returned:
--   
--   <ul>
--   <li><i>PAGE</i> - Contains a list of the LINE <tt>Block</tt> objects
--   that are detected on a document page.</li>
--   <li><i>WORD</i> - A word detected on a document page. A word is one or
--   more ISO basic Latin script characters that aren't separated by
--   spaces.</li>
--   <li><i>LINE</i> - A string of tab-delimited, contiguous words that are
--   detected on a document page.</li>
--   </ul>
--   
--   In text analysis operations, the following types are returned:
--   
--   <ul>
--   <li><i>PAGE</i> - Contains a list of child <tt>Block</tt> objects that
--   are detected on a document page.</li>
--   <li><i>KEY_VALUE_SET</i> - Stores the KEY and VALUE <tt>Block</tt>
--   objects for linked text that's detected on a document page. Use the
--   <tt>EntityType</tt> field to determine if a KEY_VALUE_SET object is a
--   KEY <tt>Block</tt> object or a VALUE <tt>Block</tt> object.</li>
--   <li><i>WORD</i> - A word that's detected on a document page. A word is
--   one or more ISO basic Latin script characters that aren't separated by
--   spaces.</li>
--   <li><i>LINE</i> - A string of tab-delimited, contiguous words that are
--   detected on a document page.</li>
--   <li><i>TABLE</i> - A table that's detected on a document page. A table
--   is grid-based information with two or more rows or columns, with a
--   cell span of one row and one column each.</li>
--   <li><i>CELL</i> - A cell within a detected table. The cell is the
--   parent of the block that contains the text in the cell.</li>
--   <li><i>SELECTION_ELEMENT</i> - A selection element such as an option
--   button (radio button) or a check box that's detected on a document
--   page. Use the value of <tt>SelectionStatus</tt> to determine the
--   status of the selection element.</li>
--   </ul>
block_blockType :: Lens' Block (Maybe BlockType)

-- | The number of rows that a table cell spans. Currently this value is
--   always 1, even if the number of rows spanned is greater than 1.
--   <tt>RowSpan</tt> isn't returned by <tt>DetectDocumentText</tt> and
--   <tt>GetDocumentTextDetection</tt>.
block_rowSpan :: Lens' Block (Maybe Natural)

-- | The page on which a block was detected. <tt>Page</tt> is returned by
--   asynchronous operations. Page values greater than 1 are only returned
--   for multipage documents that are in PDF format. A scanned image
--   (JPEG/PNG), even if it contains multiple document pages, is considered
--   to be a single-page document. The value of <tt>Page</tt> is always 1.
--   Synchronous operations don't return <tt>Page</tt> because every input
--   document is considered to be a single-page document.
block_page :: Lens' Block (Maybe Natural)

-- | The identifier for the recognized text. The identifier is only unique
--   for a single operation.
block_id :: Lens' Block (Maybe Text)

-- | The kind of text that Amazon Textract has detected. Can check for
--   handwritten text and printed text.
block_textType :: Lens' Block (Maybe TextType)

-- | The number of columns that a table cell spans. Currently this value is
--   always 1, even if the number of columns spanned is greater than 1.
--   <tt>ColumnSpan</tt> isn't returned by <tt>DetectDocumentText</tt> and
--   <tt>GetDocumentTextDetection</tt>.
block_columnSpan :: Lens' Block (Maybe Natural)

-- | The row in which a table cell is located. The first row position is 1.
--   <tt>RowIndex</tt> isn't returned by <tt>DetectDocumentText</tt> and
--   <tt>GetDocumentTextDetection</tt>.
block_rowIndex :: Lens' Block (Maybe Natural)

-- | The confidence score that Amazon Textract has in the accuracy of the
--   recognized text and the accuracy of the geometry points around the
--   recognized text.
block_confidence :: Lens' Block (Maybe Double)

-- | The column in which a table cell appears. The first column position is
--   1. <tt>ColumnIndex</tt> isn't returned by <tt>DetectDocumentText</tt>
--   and <tt>GetDocumentTextDetection</tt>.
block_columnIndex :: Lens' Block (Maybe Natural)

-- | The type of entity. The following can be returned:
--   
--   <ul>
--   <li><i>KEY</i> - An identifier for a field on the document.</li>
--   <li><i>VALUE</i> - The field text.</li>
--   </ul>
--   
--   <tt>EntityTypes</tt> isn't returned by <tt>DetectDocumentText</tt> and
--   <tt>GetDocumentTextDetection</tt>.
block_entityTypes :: Lens' Block (Maybe [EntityType])

-- | The word or line of text that's recognized by Amazon Textract.
block_text :: Lens' Block (Maybe Text)

-- | The location of the recognized text on the image. It includes an
--   axis-aligned, coarse bounding box that surrounds the text, and a
--   finer-grain polygon for more accurate spatial information.
block_geometry :: Lens' Block (Maybe Geometry)

-- | The bounding box around the detected page, text, key-value pair,
--   table, table cell, or selection element on a document page. The
--   <tt>left</tt> (x-coordinate) and <tt>top</tt> (y-coordinate) are
--   coordinates that represent the top and left sides of the bounding box.
--   Note that the upper-left corner of the image is the origin (0,0).
--   
--   The <tt>top</tt> and <tt>left</tt> values returned are ratios of the
--   overall document page size. For example, if the input image is 700 x
--   200 pixels, and the top-left coordinate of the bounding box is 350 x
--   50 pixels, the API returns a <tt>left</tt> value of 0.5 (350/700) and
--   a <tt>top</tt> value of 0.25 (50/200).
--   
--   The <tt>width</tt> and <tt>height</tt> values represent the dimensions
--   of the bounding box as a ratio of the overall document page dimension.
--   For example, if the document page size is 700 x 200 pixels, and the
--   bounding box width is 70 pixels, the width returned is 0.1.
--   
--   <i>See:</i> <a>newBoundingBox</a> smart constructor.
data BoundingBox
BoundingBox' :: Maybe Double -> Maybe Double -> Maybe Double -> Maybe Double -> BoundingBox

-- | The height of the bounding box as a ratio of the overall document page
--   height.
[$sel:height:BoundingBox'] :: BoundingBox -> Maybe Double

-- | The width of the bounding box as a ratio of the overall document page
--   width.
[$sel:width:BoundingBox'] :: BoundingBox -> Maybe Double

-- | The left coordinate of the bounding box as a ratio of overall document
--   page width.
[$sel:left:BoundingBox'] :: BoundingBox -> Maybe Double

-- | The top coordinate of the bounding box as a ratio of overall document
--   page height.
[$sel:top:BoundingBox'] :: BoundingBox -> Maybe Double

-- | Create a value of <a>BoundingBox</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:height:BoundingBox'</a>, <a>boundingBox_height</a> - The
--   height of the bounding box as a ratio of the overall document page
--   height.
--   
--   <a>$sel:width:BoundingBox'</a>, <a>boundingBox_width</a> - The width
--   of the bounding box as a ratio of the overall document page width.
--   
--   <a>$sel:left:BoundingBox'</a>, <a>boundingBox_left</a> - The left
--   coordinate of the bounding box as a ratio of overall document page
--   width.
--   
--   <a>$sel:top:BoundingBox'</a>, <a>boundingBox_top</a> - The top
--   coordinate of the bounding box as a ratio of overall document page
--   height.
newBoundingBox :: BoundingBox

-- | The height of the bounding box as a ratio of the overall document page
--   height.
boundingBox_height :: Lens' BoundingBox (Maybe Double)

-- | The width of the bounding box as a ratio of the overall document page
--   width.
boundingBox_width :: Lens' BoundingBox (Maybe Double)

-- | The left coordinate of the bounding box as a ratio of overall document
--   page width.
boundingBox_left :: Lens' BoundingBox (Maybe Double)

-- | The top coordinate of the bounding box as a ratio of overall document
--   page height.
boundingBox_top :: Lens' BoundingBox (Maybe Double)

-- | The input document, either as bytes or as an S3 object.
--   
--   You pass image bytes to an Amazon Textract API operation by using the
--   <tt>Bytes</tt> property. For example, you would use the <tt>Bytes</tt>
--   property to pass a document loaded from a local file system. Image
--   bytes passed by using the <tt>Bytes</tt> property must be base64
--   encoded. Your code might not need to encode document file bytes if
--   you're using an AWS SDK to call Amazon Textract API operations.
--   
--   You pass images stored in an S3 bucket to an Amazon Textract API
--   operation by using the <tt>S3Object</tt> property. Documents stored in
--   an S3 bucket don't need to be base64 encoded.
--   
--   The AWS Region for the S3 bucket that contains the S3 object must
--   match the AWS Region that you use for Amazon Textract operations.
--   
--   If you use the AWS CLI to call Amazon Textract operations, passing
--   image bytes using the Bytes property isn't supported. You must first
--   upload the document to an Amazon S3 bucket, and then call the
--   operation using the S3Object property.
--   
--   For Amazon Textract to process an S3 object, the user must have
--   permission to access the S3 object.
--   
--   <i>See:</i> <a>newDocument</a> smart constructor.
data Document
Document' :: Maybe Base64 -> Maybe S3Object -> Document

-- | A blob of base64-encoded document bytes. The maximum size of a
--   document that's provided in a blob of bytes is 5 MB. The document
--   bytes must be in PNG or JPEG format.
--   
--   If you're using an AWS SDK to call Amazon Textract, you might not need
--   to base64-encode image bytes passed using the <tt>Bytes</tt> field.
[$sel:bytes:Document'] :: Document -> Maybe Base64

-- | Identifies an S3 object as the document source. The maximum size of a
--   document that's stored in an S3 bucket is 5 MB.
[$sel:s3Object:Document'] :: Document -> Maybe S3Object

-- | Create a value of <a>Document</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:bytes:Document'</a>, <a>document_bytes</a> - A blob of
--   base64-encoded document bytes. The maximum size of a document that's
--   provided in a blob of bytes is 5 MB. The document bytes must be in PNG
--   or JPEG format.
--   
--   If you're using an AWS SDK to call Amazon Textract, you might not need
--   to base64-encode image bytes passed using the <tt>Bytes</tt> field.--
--   -- <i>Note:</i> This <tt>Lens</tt> automatically encodes and decodes
--   Base64 data. -- The underlying isomorphism will encode to Base64
--   representation during -- serialisation, and decode from Base64
--   representation during deserialisation. -- This <tt>Lens</tt> accepts
--   and returns only raw unencoded data.
--   
--   <a>$sel:s3Object:Document'</a>, <a>document_s3Object</a> - Identifies
--   an S3 object as the document source. The maximum size of a document
--   that's stored in an S3 bucket is 5 MB.
newDocument :: Document

-- | A blob of base64-encoded document bytes. The maximum size of a
--   document that's provided in a blob of bytes is 5 MB. The document
--   bytes must be in PNG or JPEG format.
--   
--   If you're using an AWS SDK to call Amazon Textract, you might not need
--   to base64-encode image bytes passed using the <tt>Bytes</tt> field.--
--   -- <i>Note:</i> This <tt>Lens</tt> automatically encodes and decodes
--   Base64 data. -- The underlying isomorphism will encode to Base64
--   representation during -- serialisation, and decode from Base64
--   representation during deserialisation. -- This <tt>Lens</tt> accepts
--   and returns only raw unencoded data.
document_bytes :: Lens' Document (Maybe ByteString)

-- | Identifies an S3 object as the document source. The maximum size of a
--   document that's stored in an S3 bucket is 5 MB.
document_s3Object :: Lens' Document (Maybe S3Object)

-- | The Amazon S3 bucket that contains the document to be processed. It's
--   used by asynchronous operations such as StartDocumentTextDetection.
--   
--   The input document can be an image file in JPEG or PNG format. It can
--   also be a file in PDF format.
--   
--   <i>See:</i> <a>newDocumentLocation</a> smart constructor.
data DocumentLocation
DocumentLocation' :: Maybe S3Object -> DocumentLocation

-- | The Amazon S3 bucket that contains the input document.
[$sel:s3Object:DocumentLocation'] :: DocumentLocation -> Maybe S3Object

-- | Create a value of <a>DocumentLocation</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:s3Object:DocumentLocation'</a>,
--   <a>documentLocation_s3Object</a> - The Amazon S3 bucket that contains
--   the input document.
newDocumentLocation :: DocumentLocation

-- | The Amazon S3 bucket that contains the input document.
documentLocation_s3Object :: Lens' DocumentLocation (Maybe S3Object)

-- | Information about the input document.
--   
--   <i>See:</i> <a>newDocumentMetadata</a> smart constructor.
data DocumentMetadata
DocumentMetadata' :: Maybe Natural -> DocumentMetadata

-- | The number of pages that are detected in the document.
[$sel:pages:DocumentMetadata'] :: DocumentMetadata -> Maybe Natural

-- | Create a value of <a>DocumentMetadata</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pages:DocumentMetadata'</a>, <a>documentMetadata_pages</a> -
--   The number of pages that are detected in the document.
newDocumentMetadata :: DocumentMetadata

-- | The number of pages that are detected in the document.
documentMetadata_pages :: Lens' DocumentMetadata (Maybe Natural)

-- | An object used to store information about the Value or Label detected
--   by Amazon Textract.
--   
--   <i>See:</i> <a>newExpenseDetection</a> smart constructor.
data ExpenseDetection
ExpenseDetection' :: Maybe Double -> Maybe Text -> Maybe Geometry -> ExpenseDetection

-- | The confidence in detection, as a percentage
[$sel:confidence:ExpenseDetection'] :: ExpenseDetection -> Maybe Double

-- | The word or line of text recognized by Amazon Textract
[$sel:text:ExpenseDetection'] :: ExpenseDetection -> Maybe Text
[$sel:geometry:ExpenseDetection'] :: ExpenseDetection -> Maybe Geometry

-- | Create a value of <a>ExpenseDetection</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:confidence:ExpenseDetection'</a>,
--   <a>expenseDetection_confidence</a> - The confidence in detection, as a
--   percentage
--   
--   <a>$sel:text:ExpenseDetection'</a>, <a>expenseDetection_text</a> - The
--   word or line of text recognized by Amazon Textract
--   
--   <a>$sel:geometry:ExpenseDetection'</a>,
--   <a>expenseDetection_geometry</a> - Undocumented member.
newExpenseDetection :: ExpenseDetection

-- | The confidence in detection, as a percentage
expenseDetection_confidence :: Lens' ExpenseDetection (Maybe Double)

-- | The word or line of text recognized by Amazon Textract
expenseDetection_text :: Lens' ExpenseDetection (Maybe Text)

-- | Undocumented member.
expenseDetection_geometry :: Lens' ExpenseDetection (Maybe Geometry)

-- | The structure holding all the information returned by AnalyzeExpense
--   
--   <i>See:</i> <a>newExpenseDocument</a> smart constructor.
data ExpenseDocument
ExpenseDocument' :: Maybe [LineItemGroup] -> Maybe Natural -> Maybe [ExpenseField] -> ExpenseDocument

-- | Information detected on each table of a document, seperated into
--   <tt>LineItems</tt>.
[$sel:lineItemGroups:ExpenseDocument'] :: ExpenseDocument -> Maybe [LineItemGroup]

-- | Denotes which invoice or receipt in the document the information is
--   coming from. First document will be 1, the second 2, and so on.
[$sel:expenseIndex:ExpenseDocument'] :: ExpenseDocument -> Maybe Natural

-- | Any information found outside of a table by Amazon Textract.
[$sel:summaryFields:ExpenseDocument'] :: ExpenseDocument -> Maybe [ExpenseField]

-- | Create a value of <a>ExpenseDocument</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lineItemGroups:ExpenseDocument'</a>,
--   <a>expenseDocument_lineItemGroups</a> - Information detected on each
--   table of a document, seperated into <tt>LineItems</tt>.
--   
--   <a>$sel:expenseIndex:ExpenseDocument'</a>,
--   <a>expenseDocument_expenseIndex</a> - Denotes which invoice or receipt
--   in the document the information is coming from. First document will be
--   1, the second 2, and so on.
--   
--   <a>$sel:summaryFields:ExpenseDocument'</a>,
--   <a>expenseDocument_summaryFields</a> - Any information found outside
--   of a table by Amazon Textract.
newExpenseDocument :: ExpenseDocument

-- | Information detected on each table of a document, seperated into
--   <tt>LineItems</tt>.
expenseDocument_lineItemGroups :: Lens' ExpenseDocument (Maybe [LineItemGroup])

-- | Denotes which invoice or receipt in the document the information is
--   coming from. First document will be 1, the second 2, and so on.
expenseDocument_expenseIndex :: Lens' ExpenseDocument (Maybe Natural)

-- | Any information found outside of a table by Amazon Textract.
expenseDocument_summaryFields :: Lens' ExpenseDocument (Maybe [ExpenseField])

-- | Breakdown of detected information, seperated into the catagories Type,
--   LableDetection, and ValueDetection
--   
--   <i>See:</i> <a>newExpenseField</a> smart constructor.
data ExpenseField
ExpenseField' :: Maybe ExpenseDetection -> Maybe ExpenseDetection -> Maybe Natural -> Maybe ExpenseType -> ExpenseField

-- | The explicitly stated label of a detected element.
[$sel:labelDetection:ExpenseField'] :: ExpenseField -> Maybe ExpenseDetection

-- | The value of a detected element. Present in explicit and implicit
--   elements.
[$sel:valueDetection:ExpenseField'] :: ExpenseField -> Maybe ExpenseDetection

-- | The page number the value was detected on.
[$sel:pageNumber:ExpenseField'] :: ExpenseField -> Maybe Natural

-- | The implied label of a detected element. Present alongside
--   LabelDetection for explicit elements.
[$sel:type':ExpenseField'] :: ExpenseField -> Maybe ExpenseType

-- | Create a value of <a>ExpenseField</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:labelDetection:ExpenseField'</a>,
--   <a>expenseField_labelDetection</a> - The explicitly stated label of a
--   detected element.
--   
--   <a>$sel:valueDetection:ExpenseField'</a>,
--   <a>expenseField_valueDetection</a> - The value of a detected element.
--   Present in explicit and implicit elements.
--   
--   <a>$sel:pageNumber:ExpenseField'</a>, <a>expenseField_pageNumber</a> -
--   The page number the value was detected on.
--   
--   <a>$sel:type':ExpenseField'</a>, <a>expenseField_type</a> - The
--   implied label of a detected element. Present alongside LabelDetection
--   for explicit elements.
newExpenseField :: ExpenseField

-- | The explicitly stated label of a detected element.
expenseField_labelDetection :: Lens' ExpenseField (Maybe ExpenseDetection)

-- | The value of a detected element. Present in explicit and implicit
--   elements.
expenseField_valueDetection :: Lens' ExpenseField (Maybe ExpenseDetection)

-- | The page number the value was detected on.
expenseField_pageNumber :: Lens' ExpenseField (Maybe Natural)

-- | The implied label of a detected element. Present alongside
--   LabelDetection for explicit elements.
expenseField_type :: Lens' ExpenseField (Maybe ExpenseType)

-- | An object used to store information about the Type detected by Amazon
--   Textract.
--   
--   <i>See:</i> <a>newExpenseType</a> smart constructor.
data ExpenseType
ExpenseType' :: Maybe Double -> Maybe Text -> ExpenseType

-- | The confidence of accuracy, as a percentage.
[$sel:confidence:ExpenseType'] :: ExpenseType -> Maybe Double

-- | The word or line of text detected by Amazon Textract.
[$sel:text:ExpenseType'] :: ExpenseType -> Maybe Text

-- | Create a value of <a>ExpenseType</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:confidence:ExpenseType'</a>, <a>expenseType_confidence</a> -
--   The confidence of accuracy, as a percentage.
--   
--   <a>$sel:text:ExpenseType'</a>, <a>expenseType_text</a> - The word or
--   line of text detected by Amazon Textract.
newExpenseType :: ExpenseType

-- | The confidence of accuracy, as a percentage.
expenseType_confidence :: Lens' ExpenseType (Maybe Double)

-- | The word or line of text detected by Amazon Textract.
expenseType_text :: Lens' ExpenseType (Maybe Text)

-- | Information about where the following items are located on a document
--   page: detected page, text, key-value pairs, tables, table cells, and
--   selection elements.
--   
--   <i>See:</i> <a>newGeometry</a> smart constructor.
data Geometry
Geometry' :: Maybe [Point] -> Maybe BoundingBox -> Geometry

-- | Within the bounding box, a fine-grained polygon around the recognized
--   item.
[$sel:polygon:Geometry'] :: Geometry -> Maybe [Point]

-- | An axis-aligned coarse representation of the location of the
--   recognized item on the document page.
[$sel:boundingBox:Geometry'] :: Geometry -> Maybe BoundingBox

-- | Create a value of <a>Geometry</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:polygon:Geometry'</a>, <a>geometry_polygon</a> - Within the
--   bounding box, a fine-grained polygon around the recognized item.
--   
--   <a>$sel:boundingBox:Geometry'</a>, <a>geometry_boundingBox</a> - An
--   axis-aligned coarse representation of the location of the recognized
--   item on the document page.
newGeometry :: Geometry

-- | Within the bounding box, a fine-grained polygon around the recognized
--   item.
geometry_polygon :: Lens' Geometry (Maybe [Point])

-- | An axis-aligned coarse representation of the location of the
--   recognized item on the document page.
geometry_boundingBox :: Lens' Geometry (Maybe BoundingBox)

-- | Shows the results of the human in the loop evaluation. If there is no
--   HumanLoopArn, the input did not trigger human review.
--   
--   <i>See:</i> <a>newHumanLoopActivationOutput</a> smart constructor.
data HumanLoopActivationOutput
HumanLoopActivationOutput' :: Maybe (NonEmpty Text) -> Maybe Text -> Maybe Text -> HumanLoopActivationOutput

-- | Shows if and why human review was needed.
[$sel:humanLoopActivationReasons:HumanLoopActivationOutput'] :: HumanLoopActivationOutput -> Maybe (NonEmpty Text)

-- | The Amazon Resource Name (ARN) of the HumanLoop created.
[$sel:humanLoopArn:HumanLoopActivationOutput'] :: HumanLoopActivationOutput -> Maybe Text

-- | Shows the result of condition evaluations, including those conditions
--   which activated a human review.
[$sel:humanLoopActivationConditionsEvaluationResults:HumanLoopActivationOutput'] :: HumanLoopActivationOutput -> Maybe Text

-- | Create a value of <a>HumanLoopActivationOutput</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:humanLoopActivationReasons:HumanLoopActivationOutput'</a>,
--   <a>humanLoopActivationOutput_humanLoopActivationReasons</a> - Shows if
--   and why human review was needed.
--   
--   <a>$sel:humanLoopArn:HumanLoopActivationOutput'</a>,
--   <a>humanLoopActivationOutput_humanLoopArn</a> - The Amazon Resource
--   Name (ARN) of the HumanLoop created.
--   
--   
--   <a>$sel:humanLoopActivationConditionsEvaluationResults:HumanLoopActivationOutput'</a>,
--   <a>humanLoopActivationOutput_humanLoopActivationConditionsEvaluationResults</a>
--   - Shows the result of condition evaluations, including those
--   conditions which activated a human review.
newHumanLoopActivationOutput :: HumanLoopActivationOutput

-- | Shows if and why human review was needed.
humanLoopActivationOutput_humanLoopActivationReasons :: Lens' HumanLoopActivationOutput (Maybe (NonEmpty Text))

-- | The Amazon Resource Name (ARN) of the HumanLoop created.
humanLoopActivationOutput_humanLoopArn :: Lens' HumanLoopActivationOutput (Maybe Text)

-- | Shows the result of condition evaluations, including those conditions
--   which activated a human review.
humanLoopActivationOutput_humanLoopActivationConditionsEvaluationResults :: Lens' HumanLoopActivationOutput (Maybe Text)

-- | Sets up the human review workflow the document will be sent to if one
--   of the conditions is met. You can also set certain attributes of the
--   image before review.
--   
--   <i>See:</i> <a>newHumanLoopConfig</a> smart constructor.
data HumanLoopConfig
HumanLoopConfig' :: Maybe HumanLoopDataAttributes -> Text -> Text -> HumanLoopConfig

-- | Sets attributes of the input data.
[$sel:dataAttributes:HumanLoopConfig'] :: HumanLoopConfig -> Maybe HumanLoopDataAttributes

-- | The name of the human workflow used for this image. This should be
--   kept unique within a region.
[$sel:humanLoopName:HumanLoopConfig'] :: HumanLoopConfig -> Text

-- | The Amazon Resource Name (ARN) of the flow definition.
[$sel:flowDefinitionArn:HumanLoopConfig'] :: HumanLoopConfig -> Text

-- | Create a value of <a>HumanLoopConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dataAttributes:HumanLoopConfig'</a>,
--   <a>humanLoopConfig_dataAttributes</a> - Sets attributes of the input
--   data.
--   
--   <a>$sel:humanLoopName:HumanLoopConfig'</a>,
--   <a>humanLoopConfig_humanLoopName</a> - The name of the human workflow
--   used for this image. This should be kept unique within a region.
--   
--   <a>$sel:flowDefinitionArn:HumanLoopConfig'</a>,
--   <a>humanLoopConfig_flowDefinitionArn</a> - The Amazon Resource Name
--   (ARN) of the flow definition.
newHumanLoopConfig :: Text -> Text -> HumanLoopConfig

-- | Sets attributes of the input data.
humanLoopConfig_dataAttributes :: Lens' HumanLoopConfig (Maybe HumanLoopDataAttributes)

-- | The name of the human workflow used for this image. This should be
--   kept unique within a region.
humanLoopConfig_humanLoopName :: Lens' HumanLoopConfig Text

-- | The Amazon Resource Name (ARN) of the flow definition.
humanLoopConfig_flowDefinitionArn :: Lens' HumanLoopConfig Text

-- | Allows you to set attributes of the image. Currently, you can declare
--   an image as free of personally identifiable information and adult
--   content.
--   
--   <i>See:</i> <a>newHumanLoopDataAttributes</a> smart constructor.
data HumanLoopDataAttributes
HumanLoopDataAttributes' :: Maybe [ContentClassifier] -> HumanLoopDataAttributes

-- | Sets whether the input image is free of personally identifiable
--   information or adult content.
[$sel:contentClassifiers:HumanLoopDataAttributes'] :: HumanLoopDataAttributes -> Maybe [ContentClassifier]

-- | Create a value of <a>HumanLoopDataAttributes</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:contentClassifiers:HumanLoopDataAttributes'</a>,
--   <a>humanLoopDataAttributes_contentClassifiers</a> - Sets whether the
--   input image is free of personally identifiable information or adult
--   content.
newHumanLoopDataAttributes :: HumanLoopDataAttributes

-- | Sets whether the input image is free of personally identifiable
--   information or adult content.
humanLoopDataAttributes_contentClassifiers :: Lens' HumanLoopDataAttributes (Maybe [ContentClassifier])

-- | A structure that holds information about the different lines found in
--   a document's tables.
--   
--   <i>See:</i> <a>newLineItemFields</a> smart constructor.
data LineItemFields
LineItemFields' :: Maybe [ExpenseField] -> LineItemFields

-- | ExpenseFields used to show information from detected lines on a table.
[$sel:lineItemExpenseFields:LineItemFields'] :: LineItemFields -> Maybe [ExpenseField]

-- | Create a value of <a>LineItemFields</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lineItemExpenseFields:LineItemFields'</a>,
--   <a>lineItemFields_lineItemExpenseFields</a> - ExpenseFields used to
--   show information from detected lines on a table.
newLineItemFields :: LineItemFields

-- | ExpenseFields used to show information from detected lines on a table.
lineItemFields_lineItemExpenseFields :: Lens' LineItemFields (Maybe [ExpenseField])

-- | A grouping of tables which contain LineItems, with each table
--   identified by the table's <tt>LineItemGroupIndex</tt>.
--   
--   <i>See:</i> <a>newLineItemGroup</a> smart constructor.
data LineItemGroup
LineItemGroup' :: Maybe [LineItemFields] -> Maybe Natural -> LineItemGroup

-- | The breakdown of information on a particular line of a table.
[$sel:lineItems:LineItemGroup'] :: LineItemGroup -> Maybe [LineItemFields]

-- | The number used to identify a specific table in a document. The first
--   table encountered will have a LineItemGroupIndex of 1, the second 2,
--   etc.
[$sel:lineItemGroupIndex:LineItemGroup'] :: LineItemGroup -> Maybe Natural

-- | Create a value of <a>LineItemGroup</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lineItems:LineItemGroup'</a>, <a>lineItemGroup_lineItems</a> -
--   The breakdown of information on a particular line of a table.
--   
--   <a>$sel:lineItemGroupIndex:LineItemGroup'</a>,
--   <a>lineItemGroup_lineItemGroupIndex</a> - The number used to identify
--   a specific table in a document. The first table encountered will have
--   a LineItemGroupIndex of 1, the second 2, etc.
newLineItemGroup :: LineItemGroup

-- | The breakdown of information on a particular line of a table.
lineItemGroup_lineItems :: Lens' LineItemGroup (Maybe [LineItemFields])

-- | The number used to identify a specific table in a document. The first
--   table encountered will have a LineItemGroupIndex of 1, the second 2,
--   etc.
lineItemGroup_lineItemGroupIndex :: Lens' LineItemGroup (Maybe Natural)

-- | The Amazon Simple Notification Service (Amazon SNS) topic to which
--   Amazon Textract publishes the completion status of an asynchronous
--   document operation, such as StartDocumentTextDetection.
--   
--   <i>See:</i> <a>newNotificationChannel</a> smart constructor.
data NotificationChannel
NotificationChannel' :: Text -> Text -> NotificationChannel

-- | The Amazon SNS topic that Amazon Textract posts the completion status
--   to.
[$sel:sNSTopicArn:NotificationChannel'] :: NotificationChannel -> Text

-- | The Amazon Resource Name (ARN) of an IAM role that gives Amazon
--   Textract publishing permissions to the Amazon SNS topic.
[$sel:roleArn:NotificationChannel'] :: NotificationChannel -> Text

-- | Create a value of <a>NotificationChannel</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sNSTopicArn:NotificationChannel'</a>,
--   <a>notificationChannel_sNSTopicArn</a> - The Amazon SNS topic that
--   Amazon Textract posts the completion status to.
--   
--   <a>$sel:roleArn:NotificationChannel'</a>,
--   <a>notificationChannel_roleArn</a> - The Amazon Resource Name (ARN) of
--   an IAM role that gives Amazon Textract publishing permissions to the
--   Amazon SNS topic.
newNotificationChannel :: Text -> Text -> NotificationChannel

-- | The Amazon SNS topic that Amazon Textract posts the completion status
--   to.
notificationChannel_sNSTopicArn :: Lens' NotificationChannel Text

-- | The Amazon Resource Name (ARN) of an IAM role that gives Amazon
--   Textract publishing permissions to the Amazon SNS topic.
notificationChannel_roleArn :: Lens' NotificationChannel Text

-- | Sets whether or not your output will go to a user created bucket. Used
--   to set the name of the bucket, and the prefix on the output file.
--   
--   <tt>OutputConfig</tt> is an optional parameter which lets you adjust
--   where your output will be placed. By default, Amazon Textract will
--   store the results internally and can only be accessed by the Get API
--   operations. With OutputConfig enabled, you can set the name of the
--   bucket the output will be sent to and the file prefix of the results
--   where you can download your results. Additionally, you can set the
--   <tt>KMSKeyID</tt> parameter to a customer master key (CMK) to encrypt
--   your output. Without this parameter set Amazon Textract will encrypt
--   server-side using the AWS managed CMK for Amazon S3.
--   
--   Decryption of Customer Content is necessary for processing of the
--   documents by Amazon Textract. If your account is opted out under an AI
--   services opt out policy then all unencrypted Customer Content is
--   immediately and permanently deleted after the Customer Content has
--   been processed by the service. No copy of of the output is retained by
--   Amazon Textract. For information about how to opt out, see <a>Managing
--   AI services opt-out policy.</a>
--   
--   For more information on data privacy, see the <a>Data Privacy FAQ</a>.
--   
--   <i>See:</i> <a>newOutputConfig</a> smart constructor.
data OutputConfig
OutputConfig' :: Maybe Text -> Text -> OutputConfig

-- | The prefix of the object key that the output will be saved to. When
--   not enabled, the prefix will be “textract_output".
[$sel:s3Prefix:OutputConfig'] :: OutputConfig -> Maybe Text

-- | The name of the bucket your output will go to.
[$sel:s3Bucket:OutputConfig'] :: OutputConfig -> Text

-- | Create a value of <a>OutputConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:s3Prefix:OutputConfig'</a>, <a>outputConfig_s3Prefix</a> - The
--   prefix of the object key that the output will be saved to. When not
--   enabled, the prefix will be “textract_output".
--   
--   <a>$sel:s3Bucket:OutputConfig'</a>, <a>outputConfig_s3Bucket</a> - The
--   name of the bucket your output will go to.
newOutputConfig :: Text -> OutputConfig

-- | The prefix of the object key that the output will be saved to. When
--   not enabled, the prefix will be “textract_output".
outputConfig_s3Prefix :: Lens' OutputConfig (Maybe Text)

-- | The name of the bucket your output will go to.
outputConfig_s3Bucket :: Lens' OutputConfig Text

-- | The X and Y coordinates of a point on a document page. The X and Y
--   values that are returned are ratios of the overall document page size.
--   For example, if the input document is 700 x 200 and the operation
--   returns X=0.5 and Y=0.25, then the point is at the (350,50) pixel
--   coordinate on the document page.
--   
--   An array of <tt>Point</tt> objects, <tt>Polygon</tt>, is returned by
--   DetectDocumentText. <tt>Polygon</tt> represents a fine-grained polygon
--   around detected text. For more information, see Geometry in the Amazon
--   Textract Developer Guide.
--   
--   <i>See:</i> <a>newPoint</a> smart constructor.
data Point
Point' :: Maybe Double -> Maybe Double -> Point

-- | The value of the Y coordinate for a point on a <tt>Polygon</tt>.
[$sel:y:Point'] :: Point -> Maybe Double

-- | The value of the X coordinate for a point on a <tt>Polygon</tt>.
[$sel:x:Point'] :: Point -> Maybe Double

-- | Create a value of <a>Point</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:y:Point'</a>, <a>point_y</a> - The value of the Y coordinate
--   for a point on a <tt>Polygon</tt>.
--   
--   <a>$sel:x:Point'</a>, <a>point_x</a> - The value of the X coordinate
--   for a point on a <tt>Polygon</tt>.
newPoint :: Point

-- | The value of the Y coordinate for a point on a <tt>Polygon</tt>.
point_y :: Lens' Point (Maybe Double)

-- | The value of the X coordinate for a point on a <tt>Polygon</tt>.
point_x :: Lens' Point (Maybe Double)

-- | Information about how blocks are related to each other. A
--   <tt>Block</tt> object contains 0 or more <tt>Relation</tt> objects in
--   a list, <tt>Relationships</tt>. For more information, see Block.
--   
--   The <tt>Type</tt> element provides the type of the relationship for
--   all blocks in the <tt>IDs</tt> array.
--   
--   <i>See:</i> <a>newRelationship</a> smart constructor.
data Relationship
Relationship' :: Maybe [Text] -> Maybe RelationshipType -> Relationship

-- | An array of IDs for related blocks. You can get the type of the
--   relationship from the <tt>Type</tt> element.
[$sel:ids:Relationship'] :: Relationship -> Maybe [Text]

-- | The type of relationship that the blocks in the IDs array have with
--   the current block. The relationship can be <tt>VALUE</tt> or
--   <tt>CHILD</tt>. A relationship of type VALUE is a list that contains
--   the ID of the VALUE block that's associated with the KEY of a
--   key-value pair. A relationship of type CHILD is a list of IDs that
--   identify WORD blocks in the case of lines Cell blocks in the case of
--   Tables, and WORD blocks in the case of Selection Elements.
[$sel:type':Relationship'] :: Relationship -> Maybe RelationshipType

-- | Create a value of <a>Relationship</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ids:Relationship'</a>, <a>relationship_ids</a> - An array of
--   IDs for related blocks. You can get the type of the relationship from
--   the <tt>Type</tt> element.
--   
--   <a>$sel:type':Relationship'</a>, <a>relationship_type</a> - The type
--   of relationship that the blocks in the IDs array have with the current
--   block. The relationship can be <tt>VALUE</tt> or <tt>CHILD</tt>. A
--   relationship of type VALUE is a list that contains the ID of the VALUE
--   block that's associated with the KEY of a key-value pair. A
--   relationship of type CHILD is a list of IDs that identify WORD blocks
--   in the case of lines Cell blocks in the case of Tables, and WORD
--   blocks in the case of Selection Elements.
newRelationship :: Relationship

-- | An array of IDs for related blocks. You can get the type of the
--   relationship from the <tt>Type</tt> element.
relationship_ids :: Lens' Relationship (Maybe [Text])

-- | The type of relationship that the blocks in the IDs array have with
--   the current block. The relationship can be <tt>VALUE</tt> or
--   <tt>CHILD</tt>. A relationship of type VALUE is a list that contains
--   the ID of the VALUE block that's associated with the KEY of a
--   key-value pair. A relationship of type CHILD is a list of IDs that
--   identify WORD blocks in the case of lines Cell blocks in the case of
--   Tables, and WORD blocks in the case of Selection Elements.
relationship_type :: Lens' Relationship (Maybe RelationshipType)

-- | The S3 bucket name and file name that identifies the document.
--   
--   The AWS Region for the S3 bucket that contains the document must match
--   the Region that you use for Amazon Textract operations.
--   
--   For Amazon Textract to process a file in an S3 bucket, the user must
--   have permission to access the S3 bucket and file.
--   
--   <i>See:</i> <a>newS3Object</a> smart constructor.
data S3Object
S3Object' :: Maybe Text -> Maybe Text -> Maybe Text -> S3Object

-- | If the bucket has versioning enabled, you can specify the object
--   version.
[$sel:version:S3Object'] :: S3Object -> Maybe Text

-- | The file name of the input document. Synchronous operations can use
--   image files that are in JPEG or PNG format. Asynchronous operations
--   also support PDF format files.
[$sel:name:S3Object'] :: S3Object -> Maybe Text

-- | The name of the S3 bucket. Note that the # character is not valid in
--   the file name.
[$sel:bucket:S3Object'] :: S3Object -> Maybe Text

-- | Create a value of <a>S3Object</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:version:S3Object'</a>, <a>s3Object_version</a> - If the bucket
--   has versioning enabled, you can specify the object version.
--   
--   <a>$sel:name:S3Object'</a>, <a>s3Object_name</a> - The file name of
--   the input document. Synchronous operations can use image files that
--   are in JPEG or PNG format. Asynchronous operations also support PDF
--   format files.
--   
--   <a>$sel:bucket:S3Object'</a>, <a>s3Object_bucket</a> - The name of the
--   S3 bucket. Note that the # character is not valid in the file name.
newS3Object :: S3Object

-- | If the bucket has versioning enabled, you can specify the object
--   version.
s3Object_version :: Lens' S3Object (Maybe Text)

-- | The file name of the input document. Synchronous operations can use
--   image files that are in JPEG or PNG format. Asynchronous operations
--   also support PDF format files.
s3Object_name :: Lens' S3Object (Maybe Text)

-- | The name of the S3 bucket. Note that the # character is not valid in
--   the file name.
s3Object_bucket :: Lens' S3Object (Maybe Text)

-- | A warning about an issue that occurred during asynchronous text
--   analysis (StartDocumentAnalysis) or asynchronous document text
--   detection (StartDocumentTextDetection).
--   
--   <i>See:</i> <a>newWarning</a> smart constructor.
data Warning
Warning' :: Maybe [Natural] -> Maybe Text -> Warning

-- | A list of the pages that the warning applies to.
[$sel:pages:Warning'] :: Warning -> Maybe [Natural]

-- | The error code for the warning.
[$sel:errorCode:Warning'] :: Warning -> Maybe Text

-- | Create a value of <a>Warning</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pages:Warning'</a>, <a>warning_pages</a> - A list of the pages
--   that the warning applies to.
--   
--   <a>$sel:errorCode:Warning'</a>, <a>warning_errorCode</a> - The error
--   code for the warning.
newWarning :: Warning

-- | A list of the pages that the warning applies to.
warning_pages :: Lens' Warning (Maybe [Natural])

-- | The error code for the warning.
warning_errorCode :: Lens' Warning (Maybe Text)


-- | Starts the asynchronous detection of text in a document. Amazon
--   Textract can detect lines of text and the words that make up a line of
--   text.
--   
--   <tt>StartDocumentTextDetection</tt> can analyze text in documents that
--   are in JPEG, PNG, and PDF format. The documents are stored in an
--   Amazon S3 bucket. Use DocumentLocation to specify the bucket name and
--   file name of the document.
--   
--   <tt>StartTextDetection</tt> returns a job identifier (<tt>JobId</tt>)
--   that you use to get the results of the operation. When text detection
--   is finished, Amazon Textract publishes a completion status to the
--   Amazon Simple Notification Service (Amazon SNS) topic that you specify
--   in <tt>NotificationChannel</tt>. To get the results of the text
--   detection operation, first check that the status value published to
--   the Amazon SNS topic is <tt>SUCCEEDED</tt>. If so, call
--   GetDocumentTextDetection, and pass the job identifier (<tt>JobId</tt>)
--   from the initial call to <tt>StartDocumentTextDetection</tt>.
--   
--   For more information, see <a>Document Text Detection</a>.
module Network.AWS.Textract.StartDocumentTextDetection

-- | <i>See:</i> <a>newStartDocumentTextDetection</a> smart constructor.
data StartDocumentTextDetection
StartDocumentTextDetection' :: Maybe NotificationChannel -> Maybe OutputConfig -> Maybe Text -> Maybe Text -> Maybe Text -> DocumentLocation -> StartDocumentTextDetection

-- | The Amazon SNS topic ARN that you want Amazon Textract to publish the
--   completion status of the operation to.
[$sel:notificationChannel:StartDocumentTextDetection'] :: StartDocumentTextDetection -> Maybe NotificationChannel

-- | Sets if the output will go to a customer defined bucket. By default
--   Amazon Textract will save the results internally to be accessed with
--   the GetDocumentTextDetection operation.
[$sel:outputConfig:StartDocumentTextDetection'] :: StartDocumentTextDetection -> Maybe OutputConfig

-- | The KMS key used to encrypt the inference results. This can be in
--   either Key ID or Key Alias format. When a KMS key is provided, the KMS
--   key will be used for server-side encryption of the objects in the
--   customer bucket. When this parameter is not enabled, the result will
--   be encrypted server side,using SSE-S3.
[$sel:kmsKeyId:StartDocumentTextDetection'] :: StartDocumentTextDetection -> Maybe Text

-- | The idempotent token that's used to identify the start request. If you
--   use the same token with multiple <tt>StartDocumentTextDetection</tt>
--   requests, the same <tt>JobId</tt> is returned. Use
--   <tt>ClientRequestToken</tt> to prevent the same job from being
--   accidentally started more than once. For more information, see
--   <a>Calling Amazon Textract Asynchronous Operations</a>.
[$sel:clientRequestToken:StartDocumentTextDetection'] :: StartDocumentTextDetection -> Maybe Text

-- | An identifier that you specify that's included in the completion
--   notification published to the Amazon SNS topic. For example, you can
--   use <tt>JobTag</tt> to identify the type of document that the
--   completion notification corresponds to (such as a tax form or a
--   receipt).
[$sel:jobTag:StartDocumentTextDetection'] :: StartDocumentTextDetection -> Maybe Text

-- | The location of the document to be processed.
[$sel:documentLocation:StartDocumentTextDetection'] :: StartDocumentTextDetection -> DocumentLocation

-- | Create a value of <a>StartDocumentTextDetection</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:notificationChannel:StartDocumentTextDetection'</a>,
--   <a>startDocumentTextDetection_notificationChannel</a> - The Amazon SNS
--   topic ARN that you want Amazon Textract to publish the completion
--   status of the operation to.
--   
--   <a>$sel:outputConfig:StartDocumentTextDetection'</a>,
--   <a>startDocumentTextDetection_outputConfig</a> - Sets if the output
--   will go to a customer defined bucket. By default Amazon Textract will
--   save the results internally to be accessed with the
--   GetDocumentTextDetection operation.
--   
--   <a>$sel:kmsKeyId:StartDocumentTextDetection'</a>,
--   <a>startDocumentTextDetection_kmsKeyId</a> - The KMS key used to
--   encrypt the inference results. This can be in either Key ID or Key
--   Alias format. When a KMS key is provided, the KMS key will be used for
--   server-side encryption of the objects in the customer bucket. When
--   this parameter is not enabled, the result will be encrypted server
--   side,using SSE-S3.
--   
--   <a>$sel:clientRequestToken:StartDocumentTextDetection'</a>,
--   <a>startDocumentTextDetection_clientRequestToken</a> - The idempotent
--   token that's used to identify the start request. If you use the same
--   token with multiple <tt>StartDocumentTextDetection</tt> requests, the
--   same <tt>JobId</tt> is returned. Use <tt>ClientRequestToken</tt> to
--   prevent the same job from being accidentally started more than once.
--   For more information, see <a>Calling Amazon Textract Asynchronous
--   Operations</a>.
--   
--   <a>$sel:jobTag:StartDocumentTextDetection'</a>,
--   <a>startDocumentTextDetection_jobTag</a> - An identifier that you
--   specify that's included in the completion notification published to
--   the Amazon SNS topic. For example, you can use <tt>JobTag</tt> to
--   identify the type of document that the completion notification
--   corresponds to (such as a tax form or a receipt).
--   
--   <a>$sel:documentLocation:StartDocumentTextDetection'</a>,
--   <a>startDocumentTextDetection_documentLocation</a> - The location of
--   the document to be processed.
newStartDocumentTextDetection :: DocumentLocation -> StartDocumentTextDetection

-- | The Amazon SNS topic ARN that you want Amazon Textract to publish the
--   completion status of the operation to.
startDocumentTextDetection_notificationChannel :: Lens' StartDocumentTextDetection (Maybe NotificationChannel)

-- | Sets if the output will go to a customer defined bucket. By default
--   Amazon Textract will save the results internally to be accessed with
--   the GetDocumentTextDetection operation.
startDocumentTextDetection_outputConfig :: Lens' StartDocumentTextDetection (Maybe OutputConfig)

-- | The KMS key used to encrypt the inference results. This can be in
--   either Key ID or Key Alias format. When a KMS key is provided, the KMS
--   key will be used for server-side encryption of the objects in the
--   customer bucket. When this parameter is not enabled, the result will
--   be encrypted server side,using SSE-S3.
startDocumentTextDetection_kmsKeyId :: Lens' StartDocumentTextDetection (Maybe Text)

-- | The idempotent token that's used to identify the start request. If you
--   use the same token with multiple <tt>StartDocumentTextDetection</tt>
--   requests, the same <tt>JobId</tt> is returned. Use
--   <tt>ClientRequestToken</tt> to prevent the same job from being
--   accidentally started more than once. For more information, see
--   <a>Calling Amazon Textract Asynchronous Operations</a>.
startDocumentTextDetection_clientRequestToken :: Lens' StartDocumentTextDetection (Maybe Text)

-- | An identifier that you specify that's included in the completion
--   notification published to the Amazon SNS topic. For example, you can
--   use <tt>JobTag</tt> to identify the type of document that the
--   completion notification corresponds to (such as a tax form or a
--   receipt).
startDocumentTextDetection_jobTag :: Lens' StartDocumentTextDetection (Maybe Text)

-- | The location of the document to be processed.
startDocumentTextDetection_documentLocation :: Lens' StartDocumentTextDetection DocumentLocation

-- | <i>See:</i> <a>newStartDocumentTextDetectionResponse</a> smart
--   constructor.
data StartDocumentTextDetectionResponse
StartDocumentTextDetectionResponse' :: Maybe Text -> Int -> StartDocumentTextDetectionResponse

-- | The identifier of the text detection job for the document. Use
--   <tt>JobId</tt> to identify the job in a subsequent call to
--   <tt>GetDocumentTextDetection</tt>. A <tt>JobId</tt> value is only
--   valid for 7 days.
[$sel:jobId:StartDocumentTextDetectionResponse'] :: StartDocumentTextDetectionResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:StartDocumentTextDetectionResponse'] :: StartDocumentTextDetectionResponse -> Int

-- | Create a value of <a>StartDocumentTextDetectionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobId:StartDocumentTextDetectionResponse'</a>,
--   <a>startDocumentTextDetectionResponse_jobId</a> - The identifier of
--   the text detection job for the document. Use <tt>JobId</tt> to
--   identify the job in a subsequent call to
--   <tt>GetDocumentTextDetection</tt>. A <tt>JobId</tt> value is only
--   valid for 7 days.
--   
--   <a>$sel:httpStatus:StartDocumentTextDetectionResponse'</a>,
--   <a>startDocumentTextDetectionResponse_httpStatus</a> - The response's
--   http status code.
newStartDocumentTextDetectionResponse :: Int -> StartDocumentTextDetectionResponse

-- | The identifier of the text detection job for the document. Use
--   <tt>JobId</tt> to identify the job in a subsequent call to
--   <tt>GetDocumentTextDetection</tt>. A <tt>JobId</tt> value is only
--   valid for 7 days.
startDocumentTextDetectionResponse_jobId :: Lens' StartDocumentTextDetectionResponse (Maybe Text)

-- | The response's http status code.
startDocumentTextDetectionResponse_httpStatus :: Lens' StartDocumentTextDetectionResponse Int
instance GHC.Generics.Generic Network.AWS.Textract.StartDocumentTextDetection.StartDocumentTextDetection
instance GHC.Show.Show Network.AWS.Textract.StartDocumentTextDetection.StartDocumentTextDetection
instance GHC.Read.Read Network.AWS.Textract.StartDocumentTextDetection.StartDocumentTextDetection
instance GHC.Classes.Eq Network.AWS.Textract.StartDocumentTextDetection.StartDocumentTextDetection
instance GHC.Generics.Generic Network.AWS.Textract.StartDocumentTextDetection.StartDocumentTextDetectionResponse
instance GHC.Show.Show Network.AWS.Textract.StartDocumentTextDetection.StartDocumentTextDetectionResponse
instance GHC.Read.Read Network.AWS.Textract.StartDocumentTextDetection.StartDocumentTextDetectionResponse
instance GHC.Classes.Eq Network.AWS.Textract.StartDocumentTextDetection.StartDocumentTextDetectionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Textract.StartDocumentTextDetection.StartDocumentTextDetection
instance Control.DeepSeq.NFData Network.AWS.Textract.StartDocumentTextDetection.StartDocumentTextDetectionResponse
instance Data.Hashable.Class.Hashable Network.AWS.Textract.StartDocumentTextDetection.StartDocumentTextDetection
instance Control.DeepSeq.NFData Network.AWS.Textract.StartDocumentTextDetection.StartDocumentTextDetection
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Textract.StartDocumentTextDetection.StartDocumentTextDetection
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Textract.StartDocumentTextDetection.StartDocumentTextDetection
instance Network.AWS.Data.Path.ToPath Network.AWS.Textract.StartDocumentTextDetection.StartDocumentTextDetection
instance Network.AWS.Data.Query.ToQuery Network.AWS.Textract.StartDocumentTextDetection.StartDocumentTextDetection


-- | Starts the asynchronous analysis of an input document for
--   relationships between detected items such as key-value pairs, tables,
--   and selection elements.
--   
--   <tt>StartDocumentAnalysis</tt> can analyze text in documents that are
--   in JPEG, PNG, and PDF format. The documents are stored in an Amazon S3
--   bucket. Use DocumentLocation to specify the bucket name and file name
--   of the document.
--   
--   <tt>StartDocumentAnalysis</tt> returns a job identifier
--   (<tt>JobId</tt>) that you use to get the results of the operation.
--   When text analysis is finished, Amazon Textract publishes a completion
--   status to the Amazon Simple Notification Service (Amazon SNS) topic
--   that you specify in <tt>NotificationChannel</tt>. To get the results
--   of the text analysis operation, first check that the status value
--   published to the Amazon SNS topic is <tt>SUCCEEDED</tt>. If so, call
--   GetDocumentAnalysis, and pass the job identifier (<tt>JobId</tt>) from
--   the initial call to <tt>StartDocumentAnalysis</tt>.
--   
--   For more information, see <a>Document Text Analysis</a>.
module Network.AWS.Textract.StartDocumentAnalysis

-- | <i>See:</i> <a>newStartDocumentAnalysis</a> smart constructor.
data StartDocumentAnalysis
StartDocumentAnalysis' :: Maybe NotificationChannel -> Maybe OutputConfig -> Maybe Text -> Maybe Text -> Maybe Text -> DocumentLocation -> [FeatureType] -> StartDocumentAnalysis

-- | The Amazon SNS topic ARN that you want Amazon Textract to publish the
--   completion status of the operation to.
[$sel:notificationChannel:StartDocumentAnalysis'] :: StartDocumentAnalysis -> Maybe NotificationChannel

-- | Sets if the output will go to a customer defined bucket. By default,
--   Amazon Textract will save the results internally to be accessed by the
--   GetDocumentAnalysis operation.
[$sel:outputConfig:StartDocumentAnalysis'] :: StartDocumentAnalysis -> Maybe OutputConfig

-- | The KMS key used to encrypt the inference results. This can be in
--   either Key ID or Key Alias format. When a KMS key is provided, the KMS
--   key will be used for server-side encryption of the objects in the
--   customer bucket. When this parameter is not enabled, the result will
--   be encrypted server side,using SSE-S3.
[$sel:kmsKeyId:StartDocumentAnalysis'] :: StartDocumentAnalysis -> Maybe Text

-- | The idempotent token that you use to identify the start request. If
--   you use the same token with multiple <tt>StartDocumentAnalysis</tt>
--   requests, the same <tt>JobId</tt> is returned. Use
--   <tt>ClientRequestToken</tt> to prevent the same job from being
--   accidentally started more than once. For more information, see
--   <a>Calling Amazon Textract Asynchronous Operations</a>.
[$sel:clientRequestToken:StartDocumentAnalysis'] :: StartDocumentAnalysis -> Maybe Text

-- | An identifier that you specify that's included in the completion
--   notification published to the Amazon SNS topic. For example, you can
--   use <tt>JobTag</tt> to identify the type of document that the
--   completion notification corresponds to (such as a tax form or a
--   receipt).
[$sel:jobTag:StartDocumentAnalysis'] :: StartDocumentAnalysis -> Maybe Text

-- | The location of the document to be processed.
[$sel:documentLocation:StartDocumentAnalysis'] :: StartDocumentAnalysis -> DocumentLocation

-- | A list of the types of analysis to perform. Add TABLES to the list to
--   return information about the tables that are detected in the input
--   document. Add FORMS to return detected form data. To perform both
--   types of analysis, add TABLES and FORMS to <tt>FeatureTypes</tt>. All
--   lines and words detected in the document are included in the response
--   (including text that isn't related to the value of
--   <tt>FeatureTypes</tt>).
[$sel:featureTypes:StartDocumentAnalysis'] :: StartDocumentAnalysis -> [FeatureType]

-- | Create a value of <a>StartDocumentAnalysis</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:notificationChannel:StartDocumentAnalysis'</a>,
--   <a>startDocumentAnalysis_notificationChannel</a> - The Amazon SNS
--   topic ARN that you want Amazon Textract to publish the completion
--   status of the operation to.
--   
--   <a>$sel:outputConfig:StartDocumentAnalysis'</a>,
--   <a>startDocumentAnalysis_outputConfig</a> - Sets if the output will go
--   to a customer defined bucket. By default, Amazon Textract will save
--   the results internally to be accessed by the GetDocumentAnalysis
--   operation.
--   
--   <a>$sel:kmsKeyId:StartDocumentAnalysis'</a>,
--   <a>startDocumentAnalysis_kmsKeyId</a> - The KMS key used to encrypt
--   the inference results. This can be in either Key ID or Key Alias
--   format. When a KMS key is provided, the KMS key will be used for
--   server-side encryption of the objects in the customer bucket. When
--   this parameter is not enabled, the result will be encrypted server
--   side,using SSE-S3.
--   
--   <a>$sel:clientRequestToken:StartDocumentAnalysis'</a>,
--   <a>startDocumentAnalysis_clientRequestToken</a> - The idempotent token
--   that you use to identify the start request. If you use the same token
--   with multiple <tt>StartDocumentAnalysis</tt> requests, the same
--   <tt>JobId</tt> is returned. Use <tt>ClientRequestToken</tt> to prevent
--   the same job from being accidentally started more than once. For more
--   information, see <a>Calling Amazon Textract Asynchronous
--   Operations</a>.
--   
--   <a>$sel:jobTag:StartDocumentAnalysis'</a>,
--   <a>startDocumentAnalysis_jobTag</a> - An identifier that you specify
--   that's included in the completion notification published to the Amazon
--   SNS topic. For example, you can use <tt>JobTag</tt> to identify the
--   type of document that the completion notification corresponds to (such
--   as a tax form or a receipt).
--   
--   <a>$sel:documentLocation:StartDocumentAnalysis'</a>,
--   <a>startDocumentAnalysis_documentLocation</a> - The location of the
--   document to be processed.
--   
--   <a>$sel:featureTypes:StartDocumentAnalysis'</a>,
--   <a>startDocumentAnalysis_featureTypes</a> - A list of the types of
--   analysis to perform. Add TABLES to the list to return information
--   about the tables that are detected in the input document. Add FORMS to
--   return detected form data. To perform both types of analysis, add
--   TABLES and FORMS to <tt>FeatureTypes</tt>. All lines and words
--   detected in the document are included in the response (including text
--   that isn't related to the value of <tt>FeatureTypes</tt>).
newStartDocumentAnalysis :: DocumentLocation -> StartDocumentAnalysis

-- | The Amazon SNS topic ARN that you want Amazon Textract to publish the
--   completion status of the operation to.
startDocumentAnalysis_notificationChannel :: Lens' StartDocumentAnalysis (Maybe NotificationChannel)

-- | Sets if the output will go to a customer defined bucket. By default,
--   Amazon Textract will save the results internally to be accessed by the
--   GetDocumentAnalysis operation.
startDocumentAnalysis_outputConfig :: Lens' StartDocumentAnalysis (Maybe OutputConfig)

-- | The KMS key used to encrypt the inference results. This can be in
--   either Key ID or Key Alias format. When a KMS key is provided, the KMS
--   key will be used for server-side encryption of the objects in the
--   customer bucket. When this parameter is not enabled, the result will
--   be encrypted server side,using SSE-S3.
startDocumentAnalysis_kmsKeyId :: Lens' StartDocumentAnalysis (Maybe Text)

-- | The idempotent token that you use to identify the start request. If
--   you use the same token with multiple <tt>StartDocumentAnalysis</tt>
--   requests, the same <tt>JobId</tt> is returned. Use
--   <tt>ClientRequestToken</tt> to prevent the same job from being
--   accidentally started more than once. For more information, see
--   <a>Calling Amazon Textract Asynchronous Operations</a>.
startDocumentAnalysis_clientRequestToken :: Lens' StartDocumentAnalysis (Maybe Text)

-- | An identifier that you specify that's included in the completion
--   notification published to the Amazon SNS topic. For example, you can
--   use <tt>JobTag</tt> to identify the type of document that the
--   completion notification corresponds to (such as a tax form or a
--   receipt).
startDocumentAnalysis_jobTag :: Lens' StartDocumentAnalysis (Maybe Text)

-- | The location of the document to be processed.
startDocumentAnalysis_documentLocation :: Lens' StartDocumentAnalysis DocumentLocation

-- | A list of the types of analysis to perform. Add TABLES to the list to
--   return information about the tables that are detected in the input
--   document. Add FORMS to return detected form data. To perform both
--   types of analysis, add TABLES and FORMS to <tt>FeatureTypes</tt>. All
--   lines and words detected in the document are included in the response
--   (including text that isn't related to the value of
--   <tt>FeatureTypes</tt>).
startDocumentAnalysis_featureTypes :: Lens' StartDocumentAnalysis [FeatureType]

-- | <i>See:</i> <a>newStartDocumentAnalysisResponse</a> smart constructor.
data StartDocumentAnalysisResponse
StartDocumentAnalysisResponse' :: Maybe Text -> Int -> StartDocumentAnalysisResponse

-- | The identifier for the document text detection job. Use <tt>JobId</tt>
--   to identify the job in a subsequent call to
--   <tt>GetDocumentAnalysis</tt>. A <tt>JobId</tt> value is only valid for
--   7 days.
[$sel:jobId:StartDocumentAnalysisResponse'] :: StartDocumentAnalysisResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:StartDocumentAnalysisResponse'] :: StartDocumentAnalysisResponse -> Int

-- | Create a value of <a>StartDocumentAnalysisResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobId:StartDocumentAnalysisResponse'</a>,
--   <a>startDocumentAnalysisResponse_jobId</a> - The identifier for the
--   document text detection job. Use <tt>JobId</tt> to identify the job in
--   a subsequent call to <tt>GetDocumentAnalysis</tt>. A <tt>JobId</tt>
--   value is only valid for 7 days.
--   
--   <a>$sel:httpStatus:StartDocumentAnalysisResponse'</a>,
--   <a>startDocumentAnalysisResponse_httpStatus</a> - The response's http
--   status code.
newStartDocumentAnalysisResponse :: Int -> StartDocumentAnalysisResponse

-- | The identifier for the document text detection job. Use <tt>JobId</tt>
--   to identify the job in a subsequent call to
--   <tt>GetDocumentAnalysis</tt>. A <tt>JobId</tt> value is only valid for
--   7 days.
startDocumentAnalysisResponse_jobId :: Lens' StartDocumentAnalysisResponse (Maybe Text)

-- | The response's http status code.
startDocumentAnalysisResponse_httpStatus :: Lens' StartDocumentAnalysisResponse Int
instance GHC.Generics.Generic Network.AWS.Textract.StartDocumentAnalysis.StartDocumentAnalysis
instance GHC.Show.Show Network.AWS.Textract.StartDocumentAnalysis.StartDocumentAnalysis
instance GHC.Read.Read Network.AWS.Textract.StartDocumentAnalysis.StartDocumentAnalysis
instance GHC.Classes.Eq Network.AWS.Textract.StartDocumentAnalysis.StartDocumentAnalysis
instance GHC.Generics.Generic Network.AWS.Textract.StartDocumentAnalysis.StartDocumentAnalysisResponse
instance GHC.Show.Show Network.AWS.Textract.StartDocumentAnalysis.StartDocumentAnalysisResponse
instance GHC.Read.Read Network.AWS.Textract.StartDocumentAnalysis.StartDocumentAnalysisResponse
instance GHC.Classes.Eq Network.AWS.Textract.StartDocumentAnalysis.StartDocumentAnalysisResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Textract.StartDocumentAnalysis.StartDocumentAnalysis
instance Control.DeepSeq.NFData Network.AWS.Textract.StartDocumentAnalysis.StartDocumentAnalysisResponse
instance Data.Hashable.Class.Hashable Network.AWS.Textract.StartDocumentAnalysis.StartDocumentAnalysis
instance Control.DeepSeq.NFData Network.AWS.Textract.StartDocumentAnalysis.StartDocumentAnalysis
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Textract.StartDocumentAnalysis.StartDocumentAnalysis
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Textract.StartDocumentAnalysis.StartDocumentAnalysis
instance Network.AWS.Data.Path.ToPath Network.AWS.Textract.StartDocumentAnalysis.StartDocumentAnalysis
instance Network.AWS.Data.Query.ToQuery Network.AWS.Textract.StartDocumentAnalysis.StartDocumentAnalysis


-- | Gets the results for an Amazon Textract asynchronous operation that
--   detects text in a document. Amazon Textract can detect lines of text
--   and the words that make up a line of text.
--   
--   You start asynchronous text detection by calling
--   StartDocumentTextDetection, which returns a job identifier
--   (<tt>JobId</tt>). When the text detection operation finishes, Amazon
--   Textract publishes a completion status to the Amazon Simple
--   Notification Service (Amazon SNS) topic that's registered in the
--   initial call to <tt>StartDocumentTextDetection</tt>. To get the
--   results of the text-detection operation, first check that the status
--   value published to the Amazon SNS topic is <tt>SUCCEEDED</tt>. If so,
--   call <tt>GetDocumentTextDetection</tt>, and pass the job identifier
--   (<tt>JobId</tt>) from the initial call to
--   <tt>StartDocumentTextDetection</tt>.
--   
--   <tt>GetDocumentTextDetection</tt> returns an array of Block objects.
--   
--   Each document page has as an associated <tt>Block</tt> of type PAGE.
--   Each PAGE <tt>Block</tt> object is the parent of LINE <tt>Block</tt>
--   objects that represent the lines of detected text on a page. A LINE
--   <tt>Block</tt> object is a parent for each word that makes up the
--   line. Words are represented by <tt>Block</tt> objects of type WORD.
--   
--   Use the MaxResults parameter to limit the number of blocks that are
--   returned. If there are more results than specified in
--   <tt>MaxResults</tt>, the value of <tt>NextToken</tt> in the operation
--   response contains a pagination token for getting the next set of
--   results. To get the next page of results, call
--   <tt>GetDocumentTextDetection</tt>, and populate the <tt>NextToken</tt>
--   request parameter with the token value that's returned from the
--   previous call to <tt>GetDocumentTextDetection</tt>.
--   
--   For more information, see <a>Document Text Detection</a>.
module Network.AWS.Textract.GetDocumentTextDetection

-- | <i>See:</i> <a>newGetDocumentTextDetection</a> smart constructor.
data GetDocumentTextDetection
GetDocumentTextDetection' :: Maybe Text -> Maybe Natural -> Text -> GetDocumentTextDetection

-- | If the previous response was incomplete (because there are more blocks
--   to retrieve), Amazon Textract returns a pagination token in the
--   response. You can use this pagination token to retrieve the next set
--   of blocks.
[$sel:nextToken:GetDocumentTextDetection'] :: GetDocumentTextDetection -> Maybe Text

-- | The maximum number of results to return per paginated call. The
--   largest value you can specify is 1,000. If you specify a value greater
--   than 1,000, a maximum of 1,000 results is returned. The default value
--   is 1,000.
[$sel:maxResults:GetDocumentTextDetection'] :: GetDocumentTextDetection -> Maybe Natural

-- | A unique identifier for the text detection job. The <tt>JobId</tt> is
--   returned from <tt>StartDocumentTextDetection</tt>. A <tt>JobId</tt>
--   value is only valid for 7 days.
[$sel:jobId:GetDocumentTextDetection'] :: GetDocumentTextDetection -> Text

-- | Create a value of <a>GetDocumentTextDetection</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetDocumentTextDetection'</a>,
--   <a>getDocumentTextDetection_nextToken</a> - If the previous response
--   was incomplete (because there are more blocks to retrieve), Amazon
--   Textract returns a pagination token in the response. You can use this
--   pagination token to retrieve the next set of blocks.
--   
--   <a>$sel:maxResults:GetDocumentTextDetection'</a>,
--   <a>getDocumentTextDetection_maxResults</a> - The maximum number of
--   results to return per paginated call. The largest value you can
--   specify is 1,000. If you specify a value greater than 1,000, a maximum
--   of 1,000 results is returned. The default value is 1,000.
--   
--   <a>$sel:jobId:GetDocumentTextDetection'</a>,
--   <a>getDocumentTextDetection_jobId</a> - A unique identifier for the
--   text detection job. The <tt>JobId</tt> is returned from
--   <tt>StartDocumentTextDetection</tt>. A <tt>JobId</tt> value is only
--   valid for 7 days.
newGetDocumentTextDetection :: Text -> GetDocumentTextDetection

-- | If the previous response was incomplete (because there are more blocks
--   to retrieve), Amazon Textract returns a pagination token in the
--   response. You can use this pagination token to retrieve the next set
--   of blocks.
getDocumentTextDetection_nextToken :: Lens' GetDocumentTextDetection (Maybe Text)

-- | The maximum number of results to return per paginated call. The
--   largest value you can specify is 1,000. If you specify a value greater
--   than 1,000, a maximum of 1,000 results is returned. The default value
--   is 1,000.
getDocumentTextDetection_maxResults :: Lens' GetDocumentTextDetection (Maybe Natural)

-- | A unique identifier for the text detection job. The <tt>JobId</tt> is
--   returned from <tt>StartDocumentTextDetection</tt>. A <tt>JobId</tt>
--   value is only valid for 7 days.
getDocumentTextDetection_jobId :: Lens' GetDocumentTextDetection Text

-- | <i>See:</i> <a>newGetDocumentTextDetectionResponse</a> smart
--   constructor.
data GetDocumentTextDetectionResponse
GetDocumentTextDetectionResponse' :: Maybe Text -> Maybe Text -> Maybe [Warning] -> Maybe JobStatus -> Maybe [Block] -> Maybe DocumentMetadata -> Maybe Text -> Int -> GetDocumentTextDetectionResponse

-- | Returns if the detection job could not be completed. Contains
--   explanation for what error occured.
[$sel:statusMessage:GetDocumentTextDetectionResponse'] :: GetDocumentTextDetectionResponse -> Maybe Text

-- | If the response is truncated, Amazon Textract returns this token. You
--   can use this token in the subsequent request to retrieve the next set
--   of text-detection results.
[$sel:nextToken:GetDocumentTextDetectionResponse'] :: GetDocumentTextDetectionResponse -> Maybe Text

-- | A list of warnings that occurred during the text-detection operation
--   for the document.
[$sel:warnings:GetDocumentTextDetectionResponse'] :: GetDocumentTextDetectionResponse -> Maybe [Warning]

-- | The current status of the text detection job.
[$sel:jobStatus:GetDocumentTextDetectionResponse'] :: GetDocumentTextDetectionResponse -> Maybe JobStatus

-- | The results of the text-detection operation.
[$sel:blocks:GetDocumentTextDetectionResponse'] :: GetDocumentTextDetectionResponse -> Maybe [Block]

-- | Information about a document that Amazon Textract processed.
--   <tt>DocumentMetadata</tt> is returned in every page of paginated
--   responses from an Amazon Textract video operation.
[$sel:documentMetadata:GetDocumentTextDetectionResponse'] :: GetDocumentTextDetectionResponse -> Maybe DocumentMetadata
[$sel:detectDocumentTextModelVersion:GetDocumentTextDetectionResponse'] :: GetDocumentTextDetectionResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetDocumentTextDetectionResponse'] :: GetDocumentTextDetectionResponse -> Int

-- | Create a value of <a>GetDocumentTextDetectionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:statusMessage:GetDocumentTextDetectionResponse'</a>,
--   <a>getDocumentTextDetectionResponse_statusMessage</a> - Returns if the
--   detection job could not be completed. Contains explanation for what
--   error occured.
--   
--   <a>$sel:nextToken:GetDocumentTextDetection'</a>,
--   <a>getDocumentTextDetectionResponse_nextToken</a> - If the response is
--   truncated, Amazon Textract returns this token. You can use this token
--   in the subsequent request to retrieve the next set of text-detection
--   results.
--   
--   <a>$sel:warnings:GetDocumentTextDetectionResponse'</a>,
--   <a>getDocumentTextDetectionResponse_warnings</a> - A list of warnings
--   that occurred during the text-detection operation for the document.
--   
--   <a>$sel:jobStatus:GetDocumentTextDetectionResponse'</a>,
--   <a>getDocumentTextDetectionResponse_jobStatus</a> - The current status
--   of the text detection job.
--   
--   <a>$sel:blocks:GetDocumentTextDetectionResponse'</a>,
--   <a>getDocumentTextDetectionResponse_blocks</a> - The results of the
--   text-detection operation.
--   
--   <a>$sel:documentMetadata:GetDocumentTextDetectionResponse'</a>,
--   <a>getDocumentTextDetectionResponse_documentMetadata</a> - Information
--   about a document that Amazon Textract processed.
--   <tt>DocumentMetadata</tt> is returned in every page of paginated
--   responses from an Amazon Textract video operation.
--   
--   
--   <a>$sel:detectDocumentTextModelVersion:GetDocumentTextDetectionResponse'</a>,
--   <a>getDocumentTextDetectionResponse_detectDocumentTextModelVersion</a>
--   -
--   
--   <a>$sel:httpStatus:GetDocumentTextDetectionResponse'</a>,
--   <a>getDocumentTextDetectionResponse_httpStatus</a> - The response's
--   http status code.
newGetDocumentTextDetectionResponse :: Int -> GetDocumentTextDetectionResponse

-- | Returns if the detection job could not be completed. Contains
--   explanation for what error occured.
getDocumentTextDetectionResponse_statusMessage :: Lens' GetDocumentTextDetectionResponse (Maybe Text)

-- | If the response is truncated, Amazon Textract returns this token. You
--   can use this token in the subsequent request to retrieve the next set
--   of text-detection results.
getDocumentTextDetectionResponse_nextToken :: Lens' GetDocumentTextDetectionResponse (Maybe Text)

-- | A list of warnings that occurred during the text-detection operation
--   for the document.
getDocumentTextDetectionResponse_warnings :: Lens' GetDocumentTextDetectionResponse (Maybe [Warning])

-- | The current status of the text detection job.
getDocumentTextDetectionResponse_jobStatus :: Lens' GetDocumentTextDetectionResponse (Maybe JobStatus)

-- | The results of the text-detection operation.
getDocumentTextDetectionResponse_blocks :: Lens' GetDocumentTextDetectionResponse (Maybe [Block])

-- | Information about a document that Amazon Textract processed.
--   <tt>DocumentMetadata</tt> is returned in every page of paginated
--   responses from an Amazon Textract video operation.
getDocumentTextDetectionResponse_documentMetadata :: Lens' GetDocumentTextDetectionResponse (Maybe DocumentMetadata)

getDocumentTextDetectionResponse_detectDocumentTextModelVersion :: Lens' GetDocumentTextDetectionResponse (Maybe Text)

-- | The response's http status code.
getDocumentTextDetectionResponse_httpStatus :: Lens' GetDocumentTextDetectionResponse Int
instance GHC.Generics.Generic Network.AWS.Textract.GetDocumentTextDetection.GetDocumentTextDetection
instance GHC.Show.Show Network.AWS.Textract.GetDocumentTextDetection.GetDocumentTextDetection
instance GHC.Read.Read Network.AWS.Textract.GetDocumentTextDetection.GetDocumentTextDetection
instance GHC.Classes.Eq Network.AWS.Textract.GetDocumentTextDetection.GetDocumentTextDetection
instance GHC.Generics.Generic Network.AWS.Textract.GetDocumentTextDetection.GetDocumentTextDetectionResponse
instance GHC.Show.Show Network.AWS.Textract.GetDocumentTextDetection.GetDocumentTextDetectionResponse
instance GHC.Read.Read Network.AWS.Textract.GetDocumentTextDetection.GetDocumentTextDetectionResponse
instance GHC.Classes.Eq Network.AWS.Textract.GetDocumentTextDetection.GetDocumentTextDetectionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Textract.GetDocumentTextDetection.GetDocumentTextDetection
instance Control.DeepSeq.NFData Network.AWS.Textract.GetDocumentTextDetection.GetDocumentTextDetectionResponse
instance Data.Hashable.Class.Hashable Network.AWS.Textract.GetDocumentTextDetection.GetDocumentTextDetection
instance Control.DeepSeq.NFData Network.AWS.Textract.GetDocumentTextDetection.GetDocumentTextDetection
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Textract.GetDocumentTextDetection.GetDocumentTextDetection
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Textract.GetDocumentTextDetection.GetDocumentTextDetection
instance Network.AWS.Data.Path.ToPath Network.AWS.Textract.GetDocumentTextDetection.GetDocumentTextDetection
instance Network.AWS.Data.Query.ToQuery Network.AWS.Textract.GetDocumentTextDetection.GetDocumentTextDetection


-- | Gets the results for an Amazon Textract asynchronous operation that
--   analyzes text in a document.
--   
--   You start asynchronous text analysis by calling StartDocumentAnalysis,
--   which returns a job identifier (<tt>JobId</tt>). When the text
--   analysis operation finishes, Amazon Textract publishes a completion
--   status to the Amazon Simple Notification Service (Amazon SNS) topic
--   that's registered in the initial call to
--   <tt>StartDocumentAnalysis</tt>. To get the results of the
--   text-detection operation, first check that the status value published
--   to the Amazon SNS topic is <tt>SUCCEEDED</tt>. If so, call
--   <tt>GetDocumentAnalysis</tt>, and pass the job identifier
--   (<tt>JobId</tt>) from the initial call to
--   <tt>StartDocumentAnalysis</tt>.
--   
--   <tt>GetDocumentAnalysis</tt> returns an array of Block objects. The
--   following types of information are returned:
--   
--   <ul>
--   <li>Form data (key-value pairs). The related information is returned
--   in two Block objects, each of type <tt>KEY_VALUE_SET</tt>: a KEY
--   <tt>Block</tt> object and a VALUE <tt>Block</tt> object. For example,
--   /Name: Ana Silva Carolina<i> contains a key and value. </i>Name:<i> is
--   the key. </i>Ana Silva Carolina/ is the value.</li>
--   <li>Table and table cell data. A TABLE <tt>Block</tt> object contains
--   information about a detected table. A CELL <tt>Block</tt> object is
--   returned for each cell in a table.</li>
--   <li>Lines and words of text. A LINE <tt>Block</tt> object contains one
--   or more WORD <tt>Block</tt> objects. All lines and words that are
--   detected in the document are returned (including text that doesn't
--   have a relationship with the value of the
--   <tt>StartDocumentAnalysis</tt> <tt>FeatureTypes</tt> input
--   parameter).</li>
--   </ul>
--   
--   Selection elements such as check boxes and option buttons (radio
--   buttons) can be detected in form data and in tables. A
--   SELECTION_ELEMENT <tt>Block</tt> object contains information about a
--   selection element, including the selection status.
--   
--   Use the <tt>MaxResults</tt> parameter to limit the number of blocks
--   that are returned. If there are more results than specified in
--   <tt>MaxResults</tt>, the value of <tt>NextToken</tt> in the operation
--   response contains a pagination token for getting the next set of
--   results. To get the next page of results, call
--   <tt>GetDocumentAnalysis</tt>, and populate the <tt>NextToken</tt>
--   request parameter with the token value that's returned from the
--   previous call to <tt>GetDocumentAnalysis</tt>.
--   
--   For more information, see <a>Document Text Analysis</a>.
module Network.AWS.Textract.GetDocumentAnalysis

-- | <i>See:</i> <a>newGetDocumentAnalysis</a> smart constructor.
data GetDocumentAnalysis
GetDocumentAnalysis' :: Maybe Text -> Maybe Natural -> Text -> GetDocumentAnalysis

-- | If the previous response was incomplete (because there are more blocks
--   to retrieve), Amazon Textract returns a pagination token in the
--   response. You can use this pagination token to retrieve the next set
--   of blocks.
[$sel:nextToken:GetDocumentAnalysis'] :: GetDocumentAnalysis -> Maybe Text

-- | The maximum number of results to return per paginated call. The
--   largest value that you can specify is 1,000. If you specify a value
--   greater than 1,000, a maximum of 1,000 results is returned. The
--   default value is 1,000.
[$sel:maxResults:GetDocumentAnalysis'] :: GetDocumentAnalysis -> Maybe Natural

-- | A unique identifier for the text-detection job. The <tt>JobId</tt> is
--   returned from <tt>StartDocumentAnalysis</tt>. A <tt>JobId</tt> value
--   is only valid for 7 days.
[$sel:jobId:GetDocumentAnalysis'] :: GetDocumentAnalysis -> Text

-- | Create a value of <a>GetDocumentAnalysis</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetDocumentAnalysis'</a>,
--   <a>getDocumentAnalysis_nextToken</a> - If the previous response was
--   incomplete (because there are more blocks to retrieve), Amazon
--   Textract returns a pagination token in the response. You can use this
--   pagination token to retrieve the next set of blocks.
--   
--   <a>$sel:maxResults:GetDocumentAnalysis'</a>,
--   <a>getDocumentAnalysis_maxResults</a> - The maximum number of results
--   to return per paginated call. The largest value that you can specify
--   is 1,000. If you specify a value greater than 1,000, a maximum of
--   1,000 results is returned. The default value is 1,000.
--   
--   <a>$sel:jobId:GetDocumentAnalysis'</a>,
--   <a>getDocumentAnalysis_jobId</a> - A unique identifier for the
--   text-detection job. The <tt>JobId</tt> is returned from
--   <tt>StartDocumentAnalysis</tt>. A <tt>JobId</tt> value is only valid
--   for 7 days.
newGetDocumentAnalysis :: Text -> GetDocumentAnalysis

-- | If the previous response was incomplete (because there are more blocks
--   to retrieve), Amazon Textract returns a pagination token in the
--   response. You can use this pagination token to retrieve the next set
--   of blocks.
getDocumentAnalysis_nextToken :: Lens' GetDocumentAnalysis (Maybe Text)

-- | The maximum number of results to return per paginated call. The
--   largest value that you can specify is 1,000. If you specify a value
--   greater than 1,000, a maximum of 1,000 results is returned. The
--   default value is 1,000.
getDocumentAnalysis_maxResults :: Lens' GetDocumentAnalysis (Maybe Natural)

-- | A unique identifier for the text-detection job. The <tt>JobId</tt> is
--   returned from <tt>StartDocumentAnalysis</tt>. A <tt>JobId</tt> value
--   is only valid for 7 days.
getDocumentAnalysis_jobId :: Lens' GetDocumentAnalysis Text

-- | <i>See:</i> <a>newGetDocumentAnalysisResponse</a> smart constructor.
data GetDocumentAnalysisResponse
GetDocumentAnalysisResponse' :: Maybe Text -> Maybe Text -> Maybe [Warning] -> Maybe Text -> Maybe JobStatus -> Maybe [Block] -> Maybe DocumentMetadata -> Int -> GetDocumentAnalysisResponse

-- | Returns if the detection job could not be completed. Contains
--   explanation for what error occured.
[$sel:statusMessage:GetDocumentAnalysisResponse'] :: GetDocumentAnalysisResponse -> Maybe Text

-- | If the response is truncated, Amazon Textract returns this token. You
--   can use this token in the subsequent request to retrieve the next set
--   of text detection results.
[$sel:nextToken:GetDocumentAnalysisResponse'] :: GetDocumentAnalysisResponse -> Maybe Text

-- | A list of warnings that occurred during the document-analysis
--   operation.
[$sel:warnings:GetDocumentAnalysisResponse'] :: GetDocumentAnalysisResponse -> Maybe [Warning]
[$sel:analyzeDocumentModelVersion:GetDocumentAnalysisResponse'] :: GetDocumentAnalysisResponse -> Maybe Text

-- | The current status of the text detection job.
[$sel:jobStatus:GetDocumentAnalysisResponse'] :: GetDocumentAnalysisResponse -> Maybe JobStatus

-- | The results of the text-analysis operation.
[$sel:blocks:GetDocumentAnalysisResponse'] :: GetDocumentAnalysisResponse -> Maybe [Block]

-- | Information about a document that Amazon Textract processed.
--   <tt>DocumentMetadata</tt> is returned in every page of paginated
--   responses from an Amazon Textract video operation.
[$sel:documentMetadata:GetDocumentAnalysisResponse'] :: GetDocumentAnalysisResponse -> Maybe DocumentMetadata

-- | The response's http status code.
[$sel:httpStatus:GetDocumentAnalysisResponse'] :: GetDocumentAnalysisResponse -> Int

-- | Create a value of <a>GetDocumentAnalysisResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:statusMessage:GetDocumentAnalysisResponse'</a>,
--   <a>getDocumentAnalysisResponse_statusMessage</a> - Returns if the
--   detection job could not be completed. Contains explanation for what
--   error occured.
--   
--   <a>$sel:nextToken:GetDocumentAnalysis'</a>,
--   <a>getDocumentAnalysisResponse_nextToken</a> - If the response is
--   truncated, Amazon Textract returns this token. You can use this token
--   in the subsequent request to retrieve the next set of text detection
--   results.
--   
--   <a>$sel:warnings:GetDocumentAnalysisResponse'</a>,
--   <a>getDocumentAnalysisResponse_warnings</a> - A list of warnings that
--   occurred during the document-analysis operation.
--   
--   <a>$sel:analyzeDocumentModelVersion:GetDocumentAnalysisResponse'</a>,
--   <a>getDocumentAnalysisResponse_analyzeDocumentModelVersion</a> -
--   
--   <a>$sel:jobStatus:GetDocumentAnalysisResponse'</a>,
--   <a>getDocumentAnalysisResponse_jobStatus</a> - The current status of
--   the text detection job.
--   
--   <a>$sel:blocks:GetDocumentAnalysisResponse'</a>,
--   <a>getDocumentAnalysisResponse_blocks</a> - The results of the
--   text-analysis operation.
--   
--   <a>$sel:documentMetadata:GetDocumentAnalysisResponse'</a>,
--   <a>getDocumentAnalysisResponse_documentMetadata</a> - Information
--   about a document that Amazon Textract processed.
--   <tt>DocumentMetadata</tt> is returned in every page of paginated
--   responses from an Amazon Textract video operation.
--   
--   <a>$sel:httpStatus:GetDocumentAnalysisResponse'</a>,
--   <a>getDocumentAnalysisResponse_httpStatus</a> - The response's http
--   status code.
newGetDocumentAnalysisResponse :: Int -> GetDocumentAnalysisResponse

-- | Returns if the detection job could not be completed. Contains
--   explanation for what error occured.
getDocumentAnalysisResponse_statusMessage :: Lens' GetDocumentAnalysisResponse (Maybe Text)

-- | If the response is truncated, Amazon Textract returns this token. You
--   can use this token in the subsequent request to retrieve the next set
--   of text detection results.
getDocumentAnalysisResponse_nextToken :: Lens' GetDocumentAnalysisResponse (Maybe Text)

-- | A list of warnings that occurred during the document-analysis
--   operation.
getDocumentAnalysisResponse_warnings :: Lens' GetDocumentAnalysisResponse (Maybe [Warning])

getDocumentAnalysisResponse_analyzeDocumentModelVersion :: Lens' GetDocumentAnalysisResponse (Maybe Text)

-- | The current status of the text detection job.
getDocumentAnalysisResponse_jobStatus :: Lens' GetDocumentAnalysisResponse (Maybe JobStatus)

-- | The results of the text-analysis operation.
getDocumentAnalysisResponse_blocks :: Lens' GetDocumentAnalysisResponse (Maybe [Block])

-- | Information about a document that Amazon Textract processed.
--   <tt>DocumentMetadata</tt> is returned in every page of paginated
--   responses from an Amazon Textract video operation.
getDocumentAnalysisResponse_documentMetadata :: Lens' GetDocumentAnalysisResponse (Maybe DocumentMetadata)

-- | The response's http status code.
getDocumentAnalysisResponse_httpStatus :: Lens' GetDocumentAnalysisResponse Int
instance GHC.Generics.Generic Network.AWS.Textract.GetDocumentAnalysis.GetDocumentAnalysis
instance GHC.Show.Show Network.AWS.Textract.GetDocumentAnalysis.GetDocumentAnalysis
instance GHC.Read.Read Network.AWS.Textract.GetDocumentAnalysis.GetDocumentAnalysis
instance GHC.Classes.Eq Network.AWS.Textract.GetDocumentAnalysis.GetDocumentAnalysis
instance GHC.Generics.Generic Network.AWS.Textract.GetDocumentAnalysis.GetDocumentAnalysisResponse
instance GHC.Show.Show Network.AWS.Textract.GetDocumentAnalysis.GetDocumentAnalysisResponse
instance GHC.Read.Read Network.AWS.Textract.GetDocumentAnalysis.GetDocumentAnalysisResponse
instance GHC.Classes.Eq Network.AWS.Textract.GetDocumentAnalysis.GetDocumentAnalysisResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Textract.GetDocumentAnalysis.GetDocumentAnalysis
instance Control.DeepSeq.NFData Network.AWS.Textract.GetDocumentAnalysis.GetDocumentAnalysisResponse
instance Data.Hashable.Class.Hashable Network.AWS.Textract.GetDocumentAnalysis.GetDocumentAnalysis
instance Control.DeepSeq.NFData Network.AWS.Textract.GetDocumentAnalysis.GetDocumentAnalysis
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Textract.GetDocumentAnalysis.GetDocumentAnalysis
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Textract.GetDocumentAnalysis.GetDocumentAnalysis
instance Network.AWS.Data.Path.ToPath Network.AWS.Textract.GetDocumentAnalysis.GetDocumentAnalysis
instance Network.AWS.Data.Query.ToQuery Network.AWS.Textract.GetDocumentAnalysis.GetDocumentAnalysis


-- | Detects text in the input document. Amazon Textract can detect lines
--   of text and the words that make up a line of text. The input document
--   must be an image in JPEG or PNG format. <tt>DetectDocumentText</tt>
--   returns the detected text in an array of Block objects.
--   
--   Each document page has as an associated <tt>Block</tt> of type PAGE.
--   Each PAGE <tt>Block</tt> object is the parent of LINE <tt>Block</tt>
--   objects that represent the lines of detected text on a page. A LINE
--   <tt>Block</tt> object is a parent for each word that makes up the
--   line. Words are represented by <tt>Block</tt> objects of type WORD.
--   
--   <tt>DetectDocumentText</tt> is a synchronous operation. To analyze
--   documents asynchronously, use StartDocumentTextDetection.
--   
--   For more information, see <a>Document Text Detection</a>.
module Network.AWS.Textract.DetectDocumentText

-- | <i>See:</i> <a>newDetectDocumentText</a> smart constructor.
data DetectDocumentText
DetectDocumentText' :: Document -> DetectDocumentText

-- | The input document as base64-encoded bytes or an Amazon S3 object. If
--   you use the AWS CLI to call Amazon Textract operations, you can't pass
--   image bytes. The document must be an image in JPEG or PNG format.
--   
--   If you're using an AWS SDK to call Amazon Textract, you might not need
--   to base64-encode image bytes that are passed using the <tt>Bytes</tt>
--   field.
[$sel:document:DetectDocumentText'] :: DetectDocumentText -> Document

-- | Create a value of <a>DetectDocumentText</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:document:DetectDocumentText'</a>,
--   <a>detectDocumentText_document</a> - The input document as
--   base64-encoded bytes or an Amazon S3 object. If you use the AWS CLI to
--   call Amazon Textract operations, you can't pass image bytes. The
--   document must be an image in JPEG or PNG format.
--   
--   If you're using an AWS SDK to call Amazon Textract, you might not need
--   to base64-encode image bytes that are passed using the <tt>Bytes</tt>
--   field.
newDetectDocumentText :: Document -> DetectDocumentText

-- | The input document as base64-encoded bytes or an Amazon S3 object. If
--   you use the AWS CLI to call Amazon Textract operations, you can't pass
--   image bytes. The document must be an image in JPEG or PNG format.
--   
--   If you're using an AWS SDK to call Amazon Textract, you might not need
--   to base64-encode image bytes that are passed using the <tt>Bytes</tt>
--   field.
detectDocumentText_document :: Lens' DetectDocumentText Document

-- | <i>See:</i> <a>newDetectDocumentTextResponse</a> smart constructor.
data DetectDocumentTextResponse
DetectDocumentTextResponse' :: Maybe [Block] -> Maybe DocumentMetadata -> Maybe Text -> Int -> DetectDocumentTextResponse

-- | An array of <tt>Block</tt> objects that contain the text that's
--   detected in the document.
[$sel:blocks:DetectDocumentTextResponse'] :: DetectDocumentTextResponse -> Maybe [Block]

-- | Metadata about the document. It contains the number of pages that are
--   detected in the document.
[$sel:documentMetadata:DetectDocumentTextResponse'] :: DetectDocumentTextResponse -> Maybe DocumentMetadata
[$sel:detectDocumentTextModelVersion:DetectDocumentTextResponse'] :: DetectDocumentTextResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:DetectDocumentTextResponse'] :: DetectDocumentTextResponse -> Int

-- | Create a value of <a>DetectDocumentTextResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:blocks:DetectDocumentTextResponse'</a>,
--   <a>detectDocumentTextResponse_blocks</a> - An array of <tt>Block</tt>
--   objects that contain the text that's detected in the document.
--   
--   <a>$sel:documentMetadata:DetectDocumentTextResponse'</a>,
--   <a>detectDocumentTextResponse_documentMetadata</a> - Metadata about
--   the document. It contains the number of pages that are detected in the
--   document.
--   
--   
--   <a>$sel:detectDocumentTextModelVersion:DetectDocumentTextResponse'</a>,
--   <a>detectDocumentTextResponse_detectDocumentTextModelVersion</a> -
--   
--   <a>$sel:httpStatus:DetectDocumentTextResponse'</a>,
--   <a>detectDocumentTextResponse_httpStatus</a> - The response's http
--   status code.
newDetectDocumentTextResponse :: Int -> DetectDocumentTextResponse

-- | An array of <tt>Block</tt> objects that contain the text that's
--   detected in the document.
detectDocumentTextResponse_blocks :: Lens' DetectDocumentTextResponse (Maybe [Block])

-- | Metadata about the document. It contains the number of pages that are
--   detected in the document.
detectDocumentTextResponse_documentMetadata :: Lens' DetectDocumentTextResponse (Maybe DocumentMetadata)

detectDocumentTextResponse_detectDocumentTextModelVersion :: Lens' DetectDocumentTextResponse (Maybe Text)

-- | The response's http status code.
detectDocumentTextResponse_httpStatus :: Lens' DetectDocumentTextResponse Int
instance GHC.Generics.Generic Network.AWS.Textract.DetectDocumentText.DetectDocumentText
instance GHC.Show.Show Network.AWS.Textract.DetectDocumentText.DetectDocumentText
instance GHC.Read.Read Network.AWS.Textract.DetectDocumentText.DetectDocumentText
instance GHC.Classes.Eq Network.AWS.Textract.DetectDocumentText.DetectDocumentText
instance GHC.Generics.Generic Network.AWS.Textract.DetectDocumentText.DetectDocumentTextResponse
instance GHC.Show.Show Network.AWS.Textract.DetectDocumentText.DetectDocumentTextResponse
instance GHC.Read.Read Network.AWS.Textract.DetectDocumentText.DetectDocumentTextResponse
instance GHC.Classes.Eq Network.AWS.Textract.DetectDocumentText.DetectDocumentTextResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Textract.DetectDocumentText.DetectDocumentText
instance Control.DeepSeq.NFData Network.AWS.Textract.DetectDocumentText.DetectDocumentTextResponse
instance Data.Hashable.Class.Hashable Network.AWS.Textract.DetectDocumentText.DetectDocumentText
instance Control.DeepSeq.NFData Network.AWS.Textract.DetectDocumentText.DetectDocumentText
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Textract.DetectDocumentText.DetectDocumentText
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Textract.DetectDocumentText.DetectDocumentText
instance Network.AWS.Data.Path.ToPath Network.AWS.Textract.DetectDocumentText.DetectDocumentText
instance Network.AWS.Data.Query.ToQuery Network.AWS.Textract.DetectDocumentText.DetectDocumentText


-- | Analyzes an input document for financially related relationships
--   between text.
--   
--   Information is returned as <tt>ExpenseDocuments</tt> and seperated as
--   follows.
--   
--   <ul>
--   <li><tt>LineItemGroups</tt>- A data set containing <tt>LineItems</tt>
--   which store information about the lines of text, such as an item
--   purchased and its price on a receipt.</li>
--   <li><tt>SummaryFields</tt>- Contains all other information a receipt,
--   such as header information or the vendors name.</li>
--   </ul>
module Network.AWS.Textract.AnalyzeExpense

-- | <i>See:</i> <a>newAnalyzeExpense</a> smart constructor.
data AnalyzeExpense
AnalyzeExpense' :: Document -> AnalyzeExpense
[$sel:document:AnalyzeExpense'] :: AnalyzeExpense -> Document

-- | Create a value of <a>AnalyzeExpense</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:document:AnalyzeExpense'</a>, <a>analyzeExpense_document</a> -
--   Undocumented member.
newAnalyzeExpense :: Document -> AnalyzeExpense

-- | Undocumented member.
analyzeExpense_document :: Lens' AnalyzeExpense Document

-- | <i>See:</i> <a>newAnalyzeExpenseResponse</a> smart constructor.
data AnalyzeExpenseResponse
AnalyzeExpenseResponse' :: Maybe DocumentMetadata -> Maybe [ExpenseDocument] -> Int -> AnalyzeExpenseResponse
[$sel:documentMetadata:AnalyzeExpenseResponse'] :: AnalyzeExpenseResponse -> Maybe DocumentMetadata

-- | The expenses detected by Amazon Textract.
[$sel:expenseDocuments:AnalyzeExpenseResponse'] :: AnalyzeExpenseResponse -> Maybe [ExpenseDocument]

-- | The response's http status code.
[$sel:httpStatus:AnalyzeExpenseResponse'] :: AnalyzeExpenseResponse -> Int

-- | Create a value of <a>AnalyzeExpenseResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:documentMetadata:AnalyzeExpenseResponse'</a>,
--   <a>analyzeExpenseResponse_documentMetadata</a> - Undocumented member.
--   
--   <a>$sel:expenseDocuments:AnalyzeExpenseResponse'</a>,
--   <a>analyzeExpenseResponse_expenseDocuments</a> - The expenses detected
--   by Amazon Textract.
--   
--   <a>$sel:httpStatus:AnalyzeExpenseResponse'</a>,
--   <a>analyzeExpenseResponse_httpStatus</a> - The response's http status
--   code.
newAnalyzeExpenseResponse :: Int -> AnalyzeExpenseResponse

-- | Undocumented member.
analyzeExpenseResponse_documentMetadata :: Lens' AnalyzeExpenseResponse (Maybe DocumentMetadata)

-- | The expenses detected by Amazon Textract.
analyzeExpenseResponse_expenseDocuments :: Lens' AnalyzeExpenseResponse (Maybe [ExpenseDocument])

-- | The response's http status code.
analyzeExpenseResponse_httpStatus :: Lens' AnalyzeExpenseResponse Int
instance GHC.Generics.Generic Network.AWS.Textract.AnalyzeExpense.AnalyzeExpense
instance GHC.Show.Show Network.AWS.Textract.AnalyzeExpense.AnalyzeExpense
instance GHC.Read.Read Network.AWS.Textract.AnalyzeExpense.AnalyzeExpense
instance GHC.Classes.Eq Network.AWS.Textract.AnalyzeExpense.AnalyzeExpense
instance GHC.Generics.Generic Network.AWS.Textract.AnalyzeExpense.AnalyzeExpenseResponse
instance GHC.Show.Show Network.AWS.Textract.AnalyzeExpense.AnalyzeExpenseResponse
instance GHC.Read.Read Network.AWS.Textract.AnalyzeExpense.AnalyzeExpenseResponse
instance GHC.Classes.Eq Network.AWS.Textract.AnalyzeExpense.AnalyzeExpenseResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Textract.AnalyzeExpense.AnalyzeExpense
instance Control.DeepSeq.NFData Network.AWS.Textract.AnalyzeExpense.AnalyzeExpenseResponse
instance Data.Hashable.Class.Hashable Network.AWS.Textract.AnalyzeExpense.AnalyzeExpense
instance Control.DeepSeq.NFData Network.AWS.Textract.AnalyzeExpense.AnalyzeExpense
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Textract.AnalyzeExpense.AnalyzeExpense
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Textract.AnalyzeExpense.AnalyzeExpense
instance Network.AWS.Data.Path.ToPath Network.AWS.Textract.AnalyzeExpense.AnalyzeExpense
instance Network.AWS.Data.Query.ToQuery Network.AWS.Textract.AnalyzeExpense.AnalyzeExpense


-- | Analyzes an input document for relationships between detected items.
--   
--   The types of information returned are as follows:
--   
--   <ul>
--   <li>Form data (key-value pairs). The related information is returned
--   in two Block objects, each of type <tt>KEY_VALUE_SET</tt>: a KEY
--   <tt>Block</tt> object and a VALUE <tt>Block</tt> object. For example,
--   /Name: Ana Silva Carolina<i> contains a key and value. </i>Name:<i> is
--   the key. </i>Ana Silva Carolina/ is the value.</li>
--   <li>Table and table cell data. A TABLE <tt>Block</tt> object contains
--   information about a detected table. A CELL <tt>Block</tt> object is
--   returned for each cell in a table.</li>
--   <li>Lines and words of text. A LINE <tt>Block</tt> object contains one
--   or more WORD <tt>Block</tt> objects. All lines and words that are
--   detected in the document are returned (including text that doesn't
--   have a relationship with the value of <tt>FeatureTypes</tt>).</li>
--   </ul>
--   
--   Selection elements such as check boxes and option buttons (radio
--   buttons) can be detected in form data and in tables. A
--   SELECTION_ELEMENT <tt>Block</tt> object contains information about a
--   selection element, including the selection status.
--   
--   You can choose which type of analysis to perform by specifying the
--   <tt>FeatureTypes</tt> list.
--   
--   The output is returned in a list of <tt>Block</tt> objects.
--   
--   <tt>AnalyzeDocument</tt> is a synchronous operation. To analyze
--   documents asynchronously, use StartDocumentAnalysis.
--   
--   For more information, see <a>Document Text Analysis</a>.
module Network.AWS.Textract.AnalyzeDocument

-- | <i>See:</i> <a>newAnalyzeDocument</a> smart constructor.
data AnalyzeDocument
AnalyzeDocument' :: Maybe HumanLoopConfig -> Document -> [FeatureType] -> AnalyzeDocument

-- | Sets the configuration for the human in the loop workflow for
--   analyzing documents.
[$sel:humanLoopConfig:AnalyzeDocument'] :: AnalyzeDocument -> Maybe HumanLoopConfig

-- | The input document as base64-encoded bytes or an Amazon S3 object. If
--   you use the AWS CLI to call Amazon Textract operations, you can't pass
--   image bytes. The document must be an image in JPEG or PNG format.
--   
--   If you're using an AWS SDK to call Amazon Textract, you might not need
--   to base64-encode image bytes that are passed using the <tt>Bytes</tt>
--   field.
[$sel:document:AnalyzeDocument'] :: AnalyzeDocument -> Document

-- | A list of the types of analysis to perform. Add TABLES to the list to
--   return information about the tables that are detected in the input
--   document. Add FORMS to return detected form data. To perform both
--   types of analysis, add TABLES and FORMS to <tt>FeatureTypes</tt>. All
--   lines and words detected in the document are included in the response
--   (including text that isn't related to the value of
--   <tt>FeatureTypes</tt>).
[$sel:featureTypes:AnalyzeDocument'] :: AnalyzeDocument -> [FeatureType]

-- | Create a value of <a>AnalyzeDocument</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:humanLoopConfig:AnalyzeDocument'</a>,
--   <a>analyzeDocument_humanLoopConfig</a> - Sets the configuration for
--   the human in the loop workflow for analyzing documents.
--   
--   <a>$sel:document:AnalyzeDocument'</a>, <a>analyzeDocument_document</a>
--   - The input document as base64-encoded bytes or an Amazon S3 object.
--   If you use the AWS CLI to call Amazon Textract operations, you can't
--   pass image bytes. The document must be an image in JPEG or PNG format.
--   
--   If you're using an AWS SDK to call Amazon Textract, you might not need
--   to base64-encode image bytes that are passed using the <tt>Bytes</tt>
--   field.
--   
--   <a>$sel:featureTypes:AnalyzeDocument'</a>,
--   <a>analyzeDocument_featureTypes</a> - A list of the types of analysis
--   to perform. Add TABLES to the list to return information about the
--   tables that are detected in the input document. Add FORMS to return
--   detected form data. To perform both types of analysis, add TABLES and
--   FORMS to <tt>FeatureTypes</tt>. All lines and words detected in the
--   document are included in the response (including text that isn't
--   related to the value of <tt>FeatureTypes</tt>).
newAnalyzeDocument :: Document -> AnalyzeDocument

-- | Sets the configuration for the human in the loop workflow for
--   analyzing documents.
analyzeDocument_humanLoopConfig :: Lens' AnalyzeDocument (Maybe HumanLoopConfig)

-- | The input document as base64-encoded bytes or an Amazon S3 object. If
--   you use the AWS CLI to call Amazon Textract operations, you can't pass
--   image bytes. The document must be an image in JPEG or PNG format.
--   
--   If you're using an AWS SDK to call Amazon Textract, you might not need
--   to base64-encode image bytes that are passed using the <tt>Bytes</tt>
--   field.
analyzeDocument_document :: Lens' AnalyzeDocument Document

-- | A list of the types of analysis to perform. Add TABLES to the list to
--   return information about the tables that are detected in the input
--   document. Add FORMS to return detected form data. To perform both
--   types of analysis, add TABLES and FORMS to <tt>FeatureTypes</tt>. All
--   lines and words detected in the document are included in the response
--   (including text that isn't related to the value of
--   <tt>FeatureTypes</tt>).
analyzeDocument_featureTypes :: Lens' AnalyzeDocument [FeatureType]

-- | <i>See:</i> <a>newAnalyzeDocumentResponse</a> smart constructor.
data AnalyzeDocumentResponse
AnalyzeDocumentResponse' :: Maybe Text -> Maybe [Block] -> Maybe DocumentMetadata -> Maybe HumanLoopActivationOutput -> Int -> AnalyzeDocumentResponse

-- | The version of the model used to analyze the document.
[$sel:analyzeDocumentModelVersion:AnalyzeDocumentResponse'] :: AnalyzeDocumentResponse -> Maybe Text

-- | The items that are detected and analyzed by <tt>AnalyzeDocument</tt>.
[$sel:blocks:AnalyzeDocumentResponse'] :: AnalyzeDocumentResponse -> Maybe [Block]

-- | Metadata about the analyzed document. An example is the number of
--   pages.
[$sel:documentMetadata:AnalyzeDocumentResponse'] :: AnalyzeDocumentResponse -> Maybe DocumentMetadata

-- | Shows the results of the human in the loop evaluation.
[$sel:humanLoopActivationOutput:AnalyzeDocumentResponse'] :: AnalyzeDocumentResponse -> Maybe HumanLoopActivationOutput

-- | The response's http status code.
[$sel:httpStatus:AnalyzeDocumentResponse'] :: AnalyzeDocumentResponse -> Int

-- | Create a value of <a>AnalyzeDocumentResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:analyzeDocumentModelVersion:AnalyzeDocumentResponse'</a>,
--   <a>analyzeDocumentResponse_analyzeDocumentModelVersion</a> - The
--   version of the model used to analyze the document.
--   
--   <a>$sel:blocks:AnalyzeDocumentResponse'</a>,
--   <a>analyzeDocumentResponse_blocks</a> - The items that are detected
--   and analyzed by <tt>AnalyzeDocument</tt>.
--   
--   <a>$sel:documentMetadata:AnalyzeDocumentResponse'</a>,
--   <a>analyzeDocumentResponse_documentMetadata</a> - Metadata about the
--   analyzed document. An example is the number of pages.
--   
--   <a>$sel:humanLoopActivationOutput:AnalyzeDocumentResponse'</a>,
--   <a>analyzeDocumentResponse_humanLoopActivationOutput</a> - Shows the
--   results of the human in the loop evaluation.
--   
--   <a>$sel:httpStatus:AnalyzeDocumentResponse'</a>,
--   <a>analyzeDocumentResponse_httpStatus</a> - The response's http status
--   code.
newAnalyzeDocumentResponse :: Int -> AnalyzeDocumentResponse

-- | The version of the model used to analyze the document.
analyzeDocumentResponse_analyzeDocumentModelVersion :: Lens' AnalyzeDocumentResponse (Maybe Text)

-- | The items that are detected and analyzed by <tt>AnalyzeDocument</tt>.
analyzeDocumentResponse_blocks :: Lens' AnalyzeDocumentResponse (Maybe [Block])

-- | Metadata about the analyzed document. An example is the number of
--   pages.
analyzeDocumentResponse_documentMetadata :: Lens' AnalyzeDocumentResponse (Maybe DocumentMetadata)

-- | Shows the results of the human in the loop evaluation.
analyzeDocumentResponse_humanLoopActivationOutput :: Lens' AnalyzeDocumentResponse (Maybe HumanLoopActivationOutput)

-- | The response's http status code.
analyzeDocumentResponse_httpStatus :: Lens' AnalyzeDocumentResponse Int
instance GHC.Generics.Generic Network.AWS.Textract.AnalyzeDocument.AnalyzeDocument
instance GHC.Show.Show Network.AWS.Textract.AnalyzeDocument.AnalyzeDocument
instance GHC.Read.Read Network.AWS.Textract.AnalyzeDocument.AnalyzeDocument
instance GHC.Classes.Eq Network.AWS.Textract.AnalyzeDocument.AnalyzeDocument
instance GHC.Generics.Generic Network.AWS.Textract.AnalyzeDocument.AnalyzeDocumentResponse
instance GHC.Show.Show Network.AWS.Textract.AnalyzeDocument.AnalyzeDocumentResponse
instance GHC.Read.Read Network.AWS.Textract.AnalyzeDocument.AnalyzeDocumentResponse
instance GHC.Classes.Eq Network.AWS.Textract.AnalyzeDocument.AnalyzeDocumentResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Textract.AnalyzeDocument.AnalyzeDocument
instance Control.DeepSeq.NFData Network.AWS.Textract.AnalyzeDocument.AnalyzeDocumentResponse
instance Data.Hashable.Class.Hashable Network.AWS.Textract.AnalyzeDocument.AnalyzeDocument
instance Control.DeepSeq.NFData Network.AWS.Textract.AnalyzeDocument.AnalyzeDocument
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Textract.AnalyzeDocument.AnalyzeDocument
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Textract.AnalyzeDocument.AnalyzeDocument
instance Network.AWS.Data.Path.ToPath Network.AWS.Textract.AnalyzeDocument.AnalyzeDocument
instance Network.AWS.Data.Query.ToQuery Network.AWS.Textract.AnalyzeDocument.AnalyzeDocument


module Network.AWS.Textract.Lens

-- | If the previous response was incomplete (because there are more blocks
--   to retrieve), Amazon Textract returns a pagination token in the
--   response. You can use this pagination token to retrieve the next set
--   of blocks.
getDocumentTextDetection_nextToken :: Lens' GetDocumentTextDetection (Maybe Text)

-- | The maximum number of results to return per paginated call. The
--   largest value you can specify is 1,000. If you specify a value greater
--   than 1,000, a maximum of 1,000 results is returned. The default value
--   is 1,000.
getDocumentTextDetection_maxResults :: Lens' GetDocumentTextDetection (Maybe Natural)

-- | A unique identifier for the text detection job. The <tt>JobId</tt> is
--   returned from <tt>StartDocumentTextDetection</tt>. A <tt>JobId</tt>
--   value is only valid for 7 days.
getDocumentTextDetection_jobId :: Lens' GetDocumentTextDetection Text

-- | Returns if the detection job could not be completed. Contains
--   explanation for what error occured.
getDocumentTextDetectionResponse_statusMessage :: Lens' GetDocumentTextDetectionResponse (Maybe Text)

-- | If the response is truncated, Amazon Textract returns this token. You
--   can use this token in the subsequent request to retrieve the next set
--   of text-detection results.
getDocumentTextDetectionResponse_nextToken :: Lens' GetDocumentTextDetectionResponse (Maybe Text)

-- | A list of warnings that occurred during the text-detection operation
--   for the document.
getDocumentTextDetectionResponse_warnings :: Lens' GetDocumentTextDetectionResponse (Maybe [Warning])

-- | The current status of the text detection job.
getDocumentTextDetectionResponse_jobStatus :: Lens' GetDocumentTextDetectionResponse (Maybe JobStatus)

-- | The results of the text-detection operation.
getDocumentTextDetectionResponse_blocks :: Lens' GetDocumentTextDetectionResponse (Maybe [Block])

-- | Information about a document that Amazon Textract processed.
--   <tt>DocumentMetadata</tt> is returned in every page of paginated
--   responses from an Amazon Textract video operation.
getDocumentTextDetectionResponse_documentMetadata :: Lens' GetDocumentTextDetectionResponse (Maybe DocumentMetadata)

getDocumentTextDetectionResponse_detectDocumentTextModelVersion :: Lens' GetDocumentTextDetectionResponse (Maybe Text)

-- | The response's http status code.
getDocumentTextDetectionResponse_httpStatus :: Lens' GetDocumentTextDetectionResponse Int

-- | If the previous response was incomplete (because there are more blocks
--   to retrieve), Amazon Textract returns a pagination token in the
--   response. You can use this pagination token to retrieve the next set
--   of blocks.
getDocumentAnalysis_nextToken :: Lens' GetDocumentAnalysis (Maybe Text)

-- | The maximum number of results to return per paginated call. The
--   largest value that you can specify is 1,000. If you specify a value
--   greater than 1,000, a maximum of 1,000 results is returned. The
--   default value is 1,000.
getDocumentAnalysis_maxResults :: Lens' GetDocumentAnalysis (Maybe Natural)

-- | A unique identifier for the text-detection job. The <tt>JobId</tt> is
--   returned from <tt>StartDocumentAnalysis</tt>. A <tt>JobId</tt> value
--   is only valid for 7 days.
getDocumentAnalysis_jobId :: Lens' GetDocumentAnalysis Text

-- | Returns if the detection job could not be completed. Contains
--   explanation for what error occured.
getDocumentAnalysisResponse_statusMessage :: Lens' GetDocumentAnalysisResponse (Maybe Text)

-- | If the response is truncated, Amazon Textract returns this token. You
--   can use this token in the subsequent request to retrieve the next set
--   of text detection results.
getDocumentAnalysisResponse_nextToken :: Lens' GetDocumentAnalysisResponse (Maybe Text)

-- | A list of warnings that occurred during the document-analysis
--   operation.
getDocumentAnalysisResponse_warnings :: Lens' GetDocumentAnalysisResponse (Maybe [Warning])

getDocumentAnalysisResponse_analyzeDocumentModelVersion :: Lens' GetDocumentAnalysisResponse (Maybe Text)

-- | The current status of the text detection job.
getDocumentAnalysisResponse_jobStatus :: Lens' GetDocumentAnalysisResponse (Maybe JobStatus)

-- | The results of the text-analysis operation.
getDocumentAnalysisResponse_blocks :: Lens' GetDocumentAnalysisResponse (Maybe [Block])

-- | Information about a document that Amazon Textract processed.
--   <tt>DocumentMetadata</tt> is returned in every page of paginated
--   responses from an Amazon Textract video operation.
getDocumentAnalysisResponse_documentMetadata :: Lens' GetDocumentAnalysisResponse (Maybe DocumentMetadata)

-- | The response's http status code.
getDocumentAnalysisResponse_httpStatus :: Lens' GetDocumentAnalysisResponse Int

-- | The Amazon SNS topic ARN that you want Amazon Textract to publish the
--   completion status of the operation to.
startDocumentAnalysis_notificationChannel :: Lens' StartDocumentAnalysis (Maybe NotificationChannel)

-- | Sets if the output will go to a customer defined bucket. By default,
--   Amazon Textract will save the results internally to be accessed by the
--   GetDocumentAnalysis operation.
startDocumentAnalysis_outputConfig :: Lens' StartDocumentAnalysis (Maybe OutputConfig)

-- | The KMS key used to encrypt the inference results. This can be in
--   either Key ID or Key Alias format. When a KMS key is provided, the KMS
--   key will be used for server-side encryption of the objects in the
--   customer bucket. When this parameter is not enabled, the result will
--   be encrypted server side,using SSE-S3.
startDocumentAnalysis_kmsKeyId :: Lens' StartDocumentAnalysis (Maybe Text)

-- | The idempotent token that you use to identify the start request. If
--   you use the same token with multiple <tt>StartDocumentAnalysis</tt>
--   requests, the same <tt>JobId</tt> is returned. Use
--   <tt>ClientRequestToken</tt> to prevent the same job from being
--   accidentally started more than once. For more information, see
--   <a>Calling Amazon Textract Asynchronous Operations</a>.
startDocumentAnalysis_clientRequestToken :: Lens' StartDocumentAnalysis (Maybe Text)

-- | An identifier that you specify that's included in the completion
--   notification published to the Amazon SNS topic. For example, you can
--   use <tt>JobTag</tt> to identify the type of document that the
--   completion notification corresponds to (such as a tax form or a
--   receipt).
startDocumentAnalysis_jobTag :: Lens' StartDocumentAnalysis (Maybe Text)

-- | The location of the document to be processed.
startDocumentAnalysis_documentLocation :: Lens' StartDocumentAnalysis DocumentLocation

-- | A list of the types of analysis to perform. Add TABLES to the list to
--   return information about the tables that are detected in the input
--   document. Add FORMS to return detected form data. To perform both
--   types of analysis, add TABLES and FORMS to <tt>FeatureTypes</tt>. All
--   lines and words detected in the document are included in the response
--   (including text that isn't related to the value of
--   <tt>FeatureTypes</tt>).
startDocumentAnalysis_featureTypes :: Lens' StartDocumentAnalysis [FeatureType]

-- | The identifier for the document text detection job. Use <tt>JobId</tt>
--   to identify the job in a subsequent call to
--   <tt>GetDocumentAnalysis</tt>. A <tt>JobId</tt> value is only valid for
--   7 days.
startDocumentAnalysisResponse_jobId :: Lens' StartDocumentAnalysisResponse (Maybe Text)

-- | The response's http status code.
startDocumentAnalysisResponse_httpStatus :: Lens' StartDocumentAnalysisResponse Int

-- | The Amazon SNS topic ARN that you want Amazon Textract to publish the
--   completion status of the operation to.
startDocumentTextDetection_notificationChannel :: Lens' StartDocumentTextDetection (Maybe NotificationChannel)

-- | Sets if the output will go to a customer defined bucket. By default
--   Amazon Textract will save the results internally to be accessed with
--   the GetDocumentTextDetection operation.
startDocumentTextDetection_outputConfig :: Lens' StartDocumentTextDetection (Maybe OutputConfig)

-- | The KMS key used to encrypt the inference results. This can be in
--   either Key ID or Key Alias format. When a KMS key is provided, the KMS
--   key will be used for server-side encryption of the objects in the
--   customer bucket. When this parameter is not enabled, the result will
--   be encrypted server side,using SSE-S3.
startDocumentTextDetection_kmsKeyId :: Lens' StartDocumentTextDetection (Maybe Text)

-- | The idempotent token that's used to identify the start request. If you
--   use the same token with multiple <tt>StartDocumentTextDetection</tt>
--   requests, the same <tt>JobId</tt> is returned. Use
--   <tt>ClientRequestToken</tt> to prevent the same job from being
--   accidentally started more than once. For more information, see
--   <a>Calling Amazon Textract Asynchronous Operations</a>.
startDocumentTextDetection_clientRequestToken :: Lens' StartDocumentTextDetection (Maybe Text)

-- | An identifier that you specify that's included in the completion
--   notification published to the Amazon SNS topic. For example, you can
--   use <tt>JobTag</tt> to identify the type of document that the
--   completion notification corresponds to (such as a tax form or a
--   receipt).
startDocumentTextDetection_jobTag :: Lens' StartDocumentTextDetection (Maybe Text)

-- | The location of the document to be processed.
startDocumentTextDetection_documentLocation :: Lens' StartDocumentTextDetection DocumentLocation

-- | The identifier of the text detection job for the document. Use
--   <tt>JobId</tt> to identify the job in a subsequent call to
--   <tt>GetDocumentTextDetection</tt>. A <tt>JobId</tt> value is only
--   valid for 7 days.
startDocumentTextDetectionResponse_jobId :: Lens' StartDocumentTextDetectionResponse (Maybe Text)

-- | The response's http status code.
startDocumentTextDetectionResponse_httpStatus :: Lens' StartDocumentTextDetectionResponse Int

-- | Undocumented member.
analyzeExpense_document :: Lens' AnalyzeExpense Document

-- | Undocumented member.
analyzeExpenseResponse_documentMetadata :: Lens' AnalyzeExpenseResponse (Maybe DocumentMetadata)

-- | The expenses detected by Amazon Textract.
analyzeExpenseResponse_expenseDocuments :: Lens' AnalyzeExpenseResponse (Maybe [ExpenseDocument])

-- | The response's http status code.
analyzeExpenseResponse_httpStatus :: Lens' AnalyzeExpenseResponse Int

-- | Sets the configuration for the human in the loop workflow for
--   analyzing documents.
analyzeDocument_humanLoopConfig :: Lens' AnalyzeDocument (Maybe HumanLoopConfig)

-- | The input document as base64-encoded bytes or an Amazon S3 object. If
--   you use the AWS CLI to call Amazon Textract operations, you can't pass
--   image bytes. The document must be an image in JPEG or PNG format.
--   
--   If you're using an AWS SDK to call Amazon Textract, you might not need
--   to base64-encode image bytes that are passed using the <tt>Bytes</tt>
--   field.
analyzeDocument_document :: Lens' AnalyzeDocument Document

-- | A list of the types of analysis to perform. Add TABLES to the list to
--   return information about the tables that are detected in the input
--   document. Add FORMS to return detected form data. To perform both
--   types of analysis, add TABLES and FORMS to <tt>FeatureTypes</tt>. All
--   lines and words detected in the document are included in the response
--   (including text that isn't related to the value of
--   <tt>FeatureTypes</tt>).
analyzeDocument_featureTypes :: Lens' AnalyzeDocument [FeatureType]

-- | The version of the model used to analyze the document.
analyzeDocumentResponse_analyzeDocumentModelVersion :: Lens' AnalyzeDocumentResponse (Maybe Text)

-- | The items that are detected and analyzed by <tt>AnalyzeDocument</tt>.
analyzeDocumentResponse_blocks :: Lens' AnalyzeDocumentResponse (Maybe [Block])

-- | Metadata about the analyzed document. An example is the number of
--   pages.
analyzeDocumentResponse_documentMetadata :: Lens' AnalyzeDocumentResponse (Maybe DocumentMetadata)

-- | Shows the results of the human in the loop evaluation.
analyzeDocumentResponse_humanLoopActivationOutput :: Lens' AnalyzeDocumentResponse (Maybe HumanLoopActivationOutput)

-- | The response's http status code.
analyzeDocumentResponse_httpStatus :: Lens' AnalyzeDocumentResponse Int

-- | The input document as base64-encoded bytes or an Amazon S3 object. If
--   you use the AWS CLI to call Amazon Textract operations, you can't pass
--   image bytes. The document must be an image in JPEG or PNG format.
--   
--   If you're using an AWS SDK to call Amazon Textract, you might not need
--   to base64-encode image bytes that are passed using the <tt>Bytes</tt>
--   field.
detectDocumentText_document :: Lens' DetectDocumentText Document

-- | An array of <tt>Block</tt> objects that contain the text that's
--   detected in the document.
detectDocumentTextResponse_blocks :: Lens' DetectDocumentTextResponse (Maybe [Block])

-- | Metadata about the document. It contains the number of pages that are
--   detected in the document.
detectDocumentTextResponse_documentMetadata :: Lens' DetectDocumentTextResponse (Maybe DocumentMetadata)

detectDocumentTextResponse_detectDocumentTextModelVersion :: Lens' DetectDocumentTextResponse (Maybe Text)

-- | The response's http status code.
detectDocumentTextResponse_httpStatus :: Lens' DetectDocumentTextResponse Int

-- | A list of child blocks of the current block. For example, a LINE
--   object has child blocks for each WORD block that's part of the line of
--   text. There aren't Relationship objects in the list for relationships
--   that don't exist, such as when the current block has no child blocks.
--   The list size can be the following:
--   
--   <ul>
--   <li>0 - The block has no child blocks.</li>
--   <li>1 - The block has child blocks.</li>
--   </ul>
block_relationships :: Lens' Block (Maybe [Relationship])

-- | The selection status of a selection element, such as an option button
--   or check box.
block_selectionStatus :: Lens' Block (Maybe SelectionStatus)

-- | The type of text item that's recognized. In operations for text
--   detection, the following types are returned:
--   
--   <ul>
--   <li><i>PAGE</i> - Contains a list of the LINE <tt>Block</tt> objects
--   that are detected on a document page.</li>
--   <li><i>WORD</i> - A word detected on a document page. A word is one or
--   more ISO basic Latin script characters that aren't separated by
--   spaces.</li>
--   <li><i>LINE</i> - A string of tab-delimited, contiguous words that are
--   detected on a document page.</li>
--   </ul>
--   
--   In text analysis operations, the following types are returned:
--   
--   <ul>
--   <li><i>PAGE</i> - Contains a list of child <tt>Block</tt> objects that
--   are detected on a document page.</li>
--   <li><i>KEY_VALUE_SET</i> - Stores the KEY and VALUE <tt>Block</tt>
--   objects for linked text that's detected on a document page. Use the
--   <tt>EntityType</tt> field to determine if a KEY_VALUE_SET object is a
--   KEY <tt>Block</tt> object or a VALUE <tt>Block</tt> object.</li>
--   <li><i>WORD</i> - A word that's detected on a document page. A word is
--   one or more ISO basic Latin script characters that aren't separated by
--   spaces.</li>
--   <li><i>LINE</i> - A string of tab-delimited, contiguous words that are
--   detected on a document page.</li>
--   <li><i>TABLE</i> - A table that's detected on a document page. A table
--   is grid-based information with two or more rows or columns, with a
--   cell span of one row and one column each.</li>
--   <li><i>CELL</i> - A cell within a detected table. The cell is the
--   parent of the block that contains the text in the cell.</li>
--   <li><i>SELECTION_ELEMENT</i> - A selection element such as an option
--   button (radio button) or a check box that's detected on a document
--   page. Use the value of <tt>SelectionStatus</tt> to determine the
--   status of the selection element.</li>
--   </ul>
block_blockType :: Lens' Block (Maybe BlockType)

-- | The number of rows that a table cell spans. Currently this value is
--   always 1, even if the number of rows spanned is greater than 1.
--   <tt>RowSpan</tt> isn't returned by <tt>DetectDocumentText</tt> and
--   <tt>GetDocumentTextDetection</tt>.
block_rowSpan :: Lens' Block (Maybe Natural)

-- | The page on which a block was detected. <tt>Page</tt> is returned by
--   asynchronous operations. Page values greater than 1 are only returned
--   for multipage documents that are in PDF format. A scanned image
--   (JPEG/PNG), even if it contains multiple document pages, is considered
--   to be a single-page document. The value of <tt>Page</tt> is always 1.
--   Synchronous operations don't return <tt>Page</tt> because every input
--   document is considered to be a single-page document.
block_page :: Lens' Block (Maybe Natural)

-- | The identifier for the recognized text. The identifier is only unique
--   for a single operation.
block_id :: Lens' Block (Maybe Text)

-- | The kind of text that Amazon Textract has detected. Can check for
--   handwritten text and printed text.
block_textType :: Lens' Block (Maybe TextType)

-- | The number of columns that a table cell spans. Currently this value is
--   always 1, even if the number of columns spanned is greater than 1.
--   <tt>ColumnSpan</tt> isn't returned by <tt>DetectDocumentText</tt> and
--   <tt>GetDocumentTextDetection</tt>.
block_columnSpan :: Lens' Block (Maybe Natural)

-- | The row in which a table cell is located. The first row position is 1.
--   <tt>RowIndex</tt> isn't returned by <tt>DetectDocumentText</tt> and
--   <tt>GetDocumentTextDetection</tt>.
block_rowIndex :: Lens' Block (Maybe Natural)

-- | The confidence score that Amazon Textract has in the accuracy of the
--   recognized text and the accuracy of the geometry points around the
--   recognized text.
block_confidence :: Lens' Block (Maybe Double)

-- | The column in which a table cell appears. The first column position is
--   1. <tt>ColumnIndex</tt> isn't returned by <tt>DetectDocumentText</tt>
--   and <tt>GetDocumentTextDetection</tt>.
block_columnIndex :: Lens' Block (Maybe Natural)

-- | The type of entity. The following can be returned:
--   
--   <ul>
--   <li><i>KEY</i> - An identifier for a field on the document.</li>
--   <li><i>VALUE</i> - The field text.</li>
--   </ul>
--   
--   <tt>EntityTypes</tt> isn't returned by <tt>DetectDocumentText</tt> and
--   <tt>GetDocumentTextDetection</tt>.
block_entityTypes :: Lens' Block (Maybe [EntityType])

-- | The word or line of text that's recognized by Amazon Textract.
block_text :: Lens' Block (Maybe Text)

-- | The location of the recognized text on the image. It includes an
--   axis-aligned, coarse bounding box that surrounds the text, and a
--   finer-grain polygon for more accurate spatial information.
block_geometry :: Lens' Block (Maybe Geometry)

-- | The height of the bounding box as a ratio of the overall document page
--   height.
boundingBox_height :: Lens' BoundingBox (Maybe Double)

-- | The width of the bounding box as a ratio of the overall document page
--   width.
boundingBox_width :: Lens' BoundingBox (Maybe Double)

-- | The left coordinate of the bounding box as a ratio of overall document
--   page width.
boundingBox_left :: Lens' BoundingBox (Maybe Double)

-- | The top coordinate of the bounding box as a ratio of overall document
--   page height.
boundingBox_top :: Lens' BoundingBox (Maybe Double)

-- | A blob of base64-encoded document bytes. The maximum size of a
--   document that's provided in a blob of bytes is 5 MB. The document
--   bytes must be in PNG or JPEG format.
--   
--   If you're using an AWS SDK to call Amazon Textract, you might not need
--   to base64-encode image bytes passed using the <tt>Bytes</tt> field.--
--   -- <i>Note:</i> This <tt>Lens</tt> automatically encodes and decodes
--   Base64 data. -- The underlying isomorphism will encode to Base64
--   representation during -- serialisation, and decode from Base64
--   representation during deserialisation. -- This <tt>Lens</tt> accepts
--   and returns only raw unencoded data.
document_bytes :: Lens' Document (Maybe ByteString)

-- | Identifies an S3 object as the document source. The maximum size of a
--   document that's stored in an S3 bucket is 5 MB.
document_s3Object :: Lens' Document (Maybe S3Object)

-- | The Amazon S3 bucket that contains the input document.
documentLocation_s3Object :: Lens' DocumentLocation (Maybe S3Object)

-- | The number of pages that are detected in the document.
documentMetadata_pages :: Lens' DocumentMetadata (Maybe Natural)

-- | The confidence in detection, as a percentage
expenseDetection_confidence :: Lens' ExpenseDetection (Maybe Double)

-- | The word or line of text recognized by Amazon Textract
expenseDetection_text :: Lens' ExpenseDetection (Maybe Text)

-- | Undocumented member.
expenseDetection_geometry :: Lens' ExpenseDetection (Maybe Geometry)

-- | Information detected on each table of a document, seperated into
--   <tt>LineItems</tt>.
expenseDocument_lineItemGroups :: Lens' ExpenseDocument (Maybe [LineItemGroup])

-- | Denotes which invoice or receipt in the document the information is
--   coming from. First document will be 1, the second 2, and so on.
expenseDocument_expenseIndex :: Lens' ExpenseDocument (Maybe Natural)

-- | Any information found outside of a table by Amazon Textract.
expenseDocument_summaryFields :: Lens' ExpenseDocument (Maybe [ExpenseField])

-- | The explicitly stated label of a detected element.
expenseField_labelDetection :: Lens' ExpenseField (Maybe ExpenseDetection)

-- | The value of a detected element. Present in explicit and implicit
--   elements.
expenseField_valueDetection :: Lens' ExpenseField (Maybe ExpenseDetection)

-- | The page number the value was detected on.
expenseField_pageNumber :: Lens' ExpenseField (Maybe Natural)

-- | The implied label of a detected element. Present alongside
--   LabelDetection for explicit elements.
expenseField_type :: Lens' ExpenseField (Maybe ExpenseType)

-- | The confidence of accuracy, as a percentage.
expenseType_confidence :: Lens' ExpenseType (Maybe Double)

-- | The word or line of text detected by Amazon Textract.
expenseType_text :: Lens' ExpenseType (Maybe Text)

-- | Within the bounding box, a fine-grained polygon around the recognized
--   item.
geometry_polygon :: Lens' Geometry (Maybe [Point])

-- | An axis-aligned coarse representation of the location of the
--   recognized item on the document page.
geometry_boundingBox :: Lens' Geometry (Maybe BoundingBox)

-- | Shows if and why human review was needed.
humanLoopActivationOutput_humanLoopActivationReasons :: Lens' HumanLoopActivationOutput (Maybe (NonEmpty Text))

-- | The Amazon Resource Name (ARN) of the HumanLoop created.
humanLoopActivationOutput_humanLoopArn :: Lens' HumanLoopActivationOutput (Maybe Text)

-- | Shows the result of condition evaluations, including those conditions
--   which activated a human review.
humanLoopActivationOutput_humanLoopActivationConditionsEvaluationResults :: Lens' HumanLoopActivationOutput (Maybe Text)

-- | Sets attributes of the input data.
humanLoopConfig_dataAttributes :: Lens' HumanLoopConfig (Maybe HumanLoopDataAttributes)

-- | The name of the human workflow used for this image. This should be
--   kept unique within a region.
humanLoopConfig_humanLoopName :: Lens' HumanLoopConfig Text

-- | The Amazon Resource Name (ARN) of the flow definition.
humanLoopConfig_flowDefinitionArn :: Lens' HumanLoopConfig Text

-- | Sets whether the input image is free of personally identifiable
--   information or adult content.
humanLoopDataAttributes_contentClassifiers :: Lens' HumanLoopDataAttributes (Maybe [ContentClassifier])

-- | ExpenseFields used to show information from detected lines on a table.
lineItemFields_lineItemExpenseFields :: Lens' LineItemFields (Maybe [ExpenseField])

-- | The breakdown of information on a particular line of a table.
lineItemGroup_lineItems :: Lens' LineItemGroup (Maybe [LineItemFields])

-- | The number used to identify a specific table in a document. The first
--   table encountered will have a LineItemGroupIndex of 1, the second 2,
--   etc.
lineItemGroup_lineItemGroupIndex :: Lens' LineItemGroup (Maybe Natural)

-- | The Amazon SNS topic that Amazon Textract posts the completion status
--   to.
notificationChannel_sNSTopicArn :: Lens' NotificationChannel Text

-- | The Amazon Resource Name (ARN) of an IAM role that gives Amazon
--   Textract publishing permissions to the Amazon SNS topic.
notificationChannel_roleArn :: Lens' NotificationChannel Text

-- | The prefix of the object key that the output will be saved to. When
--   not enabled, the prefix will be “textract_output".
outputConfig_s3Prefix :: Lens' OutputConfig (Maybe Text)

-- | The name of the bucket your output will go to.
outputConfig_s3Bucket :: Lens' OutputConfig Text

-- | The value of the Y coordinate for a point on a <tt>Polygon</tt>.
point_y :: Lens' Point (Maybe Double)

-- | The value of the X coordinate for a point on a <tt>Polygon</tt>.
point_x :: Lens' Point (Maybe Double)

-- | An array of IDs for related blocks. You can get the type of the
--   relationship from the <tt>Type</tt> element.
relationship_ids :: Lens' Relationship (Maybe [Text])

-- | The type of relationship that the blocks in the IDs array have with
--   the current block. The relationship can be <tt>VALUE</tt> or
--   <tt>CHILD</tt>. A relationship of type VALUE is a list that contains
--   the ID of the VALUE block that's associated with the KEY of a
--   key-value pair. A relationship of type CHILD is a list of IDs that
--   identify WORD blocks in the case of lines Cell blocks in the case of
--   Tables, and WORD blocks in the case of Selection Elements.
relationship_type :: Lens' Relationship (Maybe RelationshipType)

-- | If the bucket has versioning enabled, you can specify the object
--   version.
s3Object_version :: Lens' S3Object (Maybe Text)

-- | The file name of the input document. Synchronous operations can use
--   image files that are in JPEG or PNG format. Asynchronous operations
--   also support PDF format files.
s3Object_name :: Lens' S3Object (Maybe Text)

-- | The name of the S3 bucket. Note that the # character is not valid in
--   the file name.
s3Object_bucket :: Lens' S3Object (Maybe Text)

-- | A list of the pages that the warning applies to.
warning_pages :: Lens' Warning (Maybe [Natural])

-- | The error code for the warning.
warning_errorCode :: Lens' Warning (Maybe Text)


module Network.AWS.Textract.Waiters


-- | Derived from API version <tt>2018-06-27</tt> of the AWS service
--   descriptions, licensed under Apache 2.0.
--   
--   Amazon Textract detects and analyzes text in documents and converts it
--   into machine-readable text. This is the API reference documentation
--   for Amazon Textract.
module Network.AWS.Textract

-- | API version <tt>2018-06-27</tt> of the Amazon Textract SDK
--   configuration.
defaultService :: Service

-- | Amazon Textract isn't able to read the document. For more information
--   on the document limits in Amazon Textract, see limits.
_BadDocumentException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The document can't be processed because it's too large. The maximum
--   document size for synchronous operations 10 MB. The maximum document
--   size for asynchronous operations is 500 MB for PDF files.
_DocumentTooLargeException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Indicates you have exceeded the maximum number of active human in the
--   loop workflows available
_HumanLoopQuotaExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Amazon Textract is unable to access the S3 object that's specified in
--   the request. for more information, <a>Configure Access to Amazon
--   S3</a> For troubleshooting information, see <a>Troubleshooting Amazon
--   S3</a>
_InvalidS3ObjectException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Amazon Textract experienced a service issue. Try your call again.
_InternalServerError :: AsError a => Getting (First ServiceError) a ServiceError

-- | Amazon Textract is temporarily unable to process the request. Try your
--   call again.
_ThrottlingException :: AsError a => Getting (First ServiceError) a ServiceError

-- | An input parameter violated a constraint. For example, in synchronous
--   operations, an <tt>InvalidParameterException</tt> exception occurs
--   when neither of the <tt>S3Object</tt> or <tt>Bytes</tt> values are
--   supplied in the <tt>Document</tt> request parameter. Validate your
--   parameter before calling the API operation again.
_InvalidParameterException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You aren't authorized to perform the action. Use the Amazon Resource
--   Name (ARN) of an authorized user or IAM role to perform the operation.
_AccessDeniedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Indicates you do not have decrypt permissions with the KMS key
--   entered, or the KMS key was entered incorrectly.
_InvalidKMSKeyException :: AsError a => Getting (First ServiceError) a ServiceError

-- | An invalid job identifier was passed to GetDocumentAnalysis or to
--   GetDocumentAnalysis.
_InvalidJobIdException :: AsError a => Getting (First ServiceError) a ServiceError

-- | An Amazon Textract service limit was exceeded. For example, if you
--   start too many asynchronous jobs concurrently, calls to start
--   operations (<tt>StartDocumentTextDetection</tt>, for example) raise a
--   LimitExceededException exception (HTTP status code: 400) until the
--   number of concurrently running jobs is below the Amazon Textract
--   service limit.
_LimitExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The number of requests exceeded your throughput limit. If you want to
--   increase this limit, contact Amazon Textract.
_ProvisionedThroughputExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A <tt>ClientRequestToken</tt> input parameter was reused with an
--   operation, but at least one of the other input parameters is different
--   from the previous call to the operation.
_IdempotentParameterMismatchException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The format of the input document isn't supported. Documents for
--   synchronous operations can be in PNG or JPEG format. Documents for
--   asynchronous operations can also be in PDF format.
_UnsupportedDocumentException :: AsError a => Getting (First ServiceError) a ServiceError

-- | <i>See:</i> <a>newGetDocumentTextDetection</a> smart constructor.
data GetDocumentTextDetection
GetDocumentTextDetection' :: Maybe Text -> Maybe Natural -> Text -> GetDocumentTextDetection

-- | Create a value of <a>GetDocumentTextDetection</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetDocumentTextDetection'</a>,
--   <a>getDocumentTextDetection_nextToken</a> - If the previous response
--   was incomplete (because there are more blocks to retrieve), Amazon
--   Textract returns a pagination token in the response. You can use this
--   pagination token to retrieve the next set of blocks.
--   
--   <a>$sel:maxResults:GetDocumentTextDetection'</a>,
--   <a>getDocumentTextDetection_maxResults</a> - The maximum number of
--   results to return per paginated call. The largest value you can
--   specify is 1,000. If you specify a value greater than 1,000, a maximum
--   of 1,000 results is returned. The default value is 1,000.
--   
--   <a>$sel:jobId:GetDocumentTextDetection'</a>,
--   <a>getDocumentTextDetection_jobId</a> - A unique identifier for the
--   text detection job. The <tt>JobId</tt> is returned from
--   <tt>StartDocumentTextDetection</tt>. A <tt>JobId</tt> value is only
--   valid for 7 days.
newGetDocumentTextDetection :: Text -> GetDocumentTextDetection

-- | <i>See:</i> <a>newGetDocumentTextDetectionResponse</a> smart
--   constructor.
data GetDocumentTextDetectionResponse
GetDocumentTextDetectionResponse' :: Maybe Text -> Maybe Text -> Maybe [Warning] -> Maybe JobStatus -> Maybe [Block] -> Maybe DocumentMetadata -> Maybe Text -> Int -> GetDocumentTextDetectionResponse

-- | Create a value of <a>GetDocumentTextDetectionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:statusMessage:GetDocumentTextDetectionResponse'</a>,
--   <a>getDocumentTextDetectionResponse_statusMessage</a> - Returns if the
--   detection job could not be completed. Contains explanation for what
--   error occured.
--   
--   <a>$sel:nextToken:GetDocumentTextDetection'</a>,
--   <a>getDocumentTextDetectionResponse_nextToken</a> - If the response is
--   truncated, Amazon Textract returns this token. You can use this token
--   in the subsequent request to retrieve the next set of text-detection
--   results.
--   
--   <a>$sel:warnings:GetDocumentTextDetectionResponse'</a>,
--   <a>getDocumentTextDetectionResponse_warnings</a> - A list of warnings
--   that occurred during the text-detection operation for the document.
--   
--   <a>$sel:jobStatus:GetDocumentTextDetectionResponse'</a>,
--   <a>getDocumentTextDetectionResponse_jobStatus</a> - The current status
--   of the text detection job.
--   
--   <a>$sel:blocks:GetDocumentTextDetectionResponse'</a>,
--   <a>getDocumentTextDetectionResponse_blocks</a> - The results of the
--   text-detection operation.
--   
--   <a>$sel:documentMetadata:GetDocumentTextDetectionResponse'</a>,
--   <a>getDocumentTextDetectionResponse_documentMetadata</a> - Information
--   about a document that Amazon Textract processed.
--   <tt>DocumentMetadata</tt> is returned in every page of paginated
--   responses from an Amazon Textract video operation.
--   
--   
--   <a>$sel:detectDocumentTextModelVersion:GetDocumentTextDetectionResponse'</a>,
--   <a>getDocumentTextDetectionResponse_detectDocumentTextModelVersion</a>
--   -
--   
--   <a>$sel:httpStatus:GetDocumentTextDetectionResponse'</a>,
--   <a>getDocumentTextDetectionResponse_httpStatus</a> - The response's
--   http status code.
newGetDocumentTextDetectionResponse :: Int -> GetDocumentTextDetectionResponse

-- | <i>See:</i> <a>newGetDocumentAnalysis</a> smart constructor.
data GetDocumentAnalysis
GetDocumentAnalysis' :: Maybe Text -> Maybe Natural -> Text -> GetDocumentAnalysis

-- | Create a value of <a>GetDocumentAnalysis</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetDocumentAnalysis'</a>,
--   <a>getDocumentAnalysis_nextToken</a> - If the previous response was
--   incomplete (because there are more blocks to retrieve), Amazon
--   Textract returns a pagination token in the response. You can use this
--   pagination token to retrieve the next set of blocks.
--   
--   <a>$sel:maxResults:GetDocumentAnalysis'</a>,
--   <a>getDocumentAnalysis_maxResults</a> - The maximum number of results
--   to return per paginated call. The largest value that you can specify
--   is 1,000. If you specify a value greater than 1,000, a maximum of
--   1,000 results is returned. The default value is 1,000.
--   
--   <a>$sel:jobId:GetDocumentAnalysis'</a>,
--   <a>getDocumentAnalysis_jobId</a> - A unique identifier for the
--   text-detection job. The <tt>JobId</tt> is returned from
--   <tt>StartDocumentAnalysis</tt>. A <tt>JobId</tt> value is only valid
--   for 7 days.
newGetDocumentAnalysis :: Text -> GetDocumentAnalysis

-- | <i>See:</i> <a>newGetDocumentAnalysisResponse</a> smart constructor.
data GetDocumentAnalysisResponse
GetDocumentAnalysisResponse' :: Maybe Text -> Maybe Text -> Maybe [Warning] -> Maybe Text -> Maybe JobStatus -> Maybe [Block] -> Maybe DocumentMetadata -> Int -> GetDocumentAnalysisResponse

-- | Create a value of <a>GetDocumentAnalysisResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:statusMessage:GetDocumentAnalysisResponse'</a>,
--   <a>getDocumentAnalysisResponse_statusMessage</a> - Returns if the
--   detection job could not be completed. Contains explanation for what
--   error occured.
--   
--   <a>$sel:nextToken:GetDocumentAnalysis'</a>,
--   <a>getDocumentAnalysisResponse_nextToken</a> - If the response is
--   truncated, Amazon Textract returns this token. You can use this token
--   in the subsequent request to retrieve the next set of text detection
--   results.
--   
--   <a>$sel:warnings:GetDocumentAnalysisResponse'</a>,
--   <a>getDocumentAnalysisResponse_warnings</a> - A list of warnings that
--   occurred during the document-analysis operation.
--   
--   <a>$sel:analyzeDocumentModelVersion:GetDocumentAnalysisResponse'</a>,
--   <a>getDocumentAnalysisResponse_analyzeDocumentModelVersion</a> -
--   
--   <a>$sel:jobStatus:GetDocumentAnalysisResponse'</a>,
--   <a>getDocumentAnalysisResponse_jobStatus</a> - The current status of
--   the text detection job.
--   
--   <a>$sel:blocks:GetDocumentAnalysisResponse'</a>,
--   <a>getDocumentAnalysisResponse_blocks</a> - The results of the
--   text-analysis operation.
--   
--   <a>$sel:documentMetadata:GetDocumentAnalysisResponse'</a>,
--   <a>getDocumentAnalysisResponse_documentMetadata</a> - Information
--   about a document that Amazon Textract processed.
--   <tt>DocumentMetadata</tt> is returned in every page of paginated
--   responses from an Amazon Textract video operation.
--   
--   <a>$sel:httpStatus:GetDocumentAnalysisResponse'</a>,
--   <a>getDocumentAnalysisResponse_httpStatus</a> - The response's http
--   status code.
newGetDocumentAnalysisResponse :: Int -> GetDocumentAnalysisResponse

-- | <i>See:</i> <a>newStartDocumentAnalysis</a> smart constructor.
data StartDocumentAnalysis
StartDocumentAnalysis' :: Maybe NotificationChannel -> Maybe OutputConfig -> Maybe Text -> Maybe Text -> Maybe Text -> DocumentLocation -> [FeatureType] -> StartDocumentAnalysis

-- | Create a value of <a>StartDocumentAnalysis</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:notificationChannel:StartDocumentAnalysis'</a>,
--   <a>startDocumentAnalysis_notificationChannel</a> - The Amazon SNS
--   topic ARN that you want Amazon Textract to publish the completion
--   status of the operation to.
--   
--   <a>$sel:outputConfig:StartDocumentAnalysis'</a>,
--   <a>startDocumentAnalysis_outputConfig</a> - Sets if the output will go
--   to a customer defined bucket. By default, Amazon Textract will save
--   the results internally to be accessed by the GetDocumentAnalysis
--   operation.
--   
--   <a>$sel:kmsKeyId:StartDocumentAnalysis'</a>,
--   <a>startDocumentAnalysis_kmsKeyId</a> - The KMS key used to encrypt
--   the inference results. This can be in either Key ID or Key Alias
--   format. When a KMS key is provided, the KMS key will be used for
--   server-side encryption of the objects in the customer bucket. When
--   this parameter is not enabled, the result will be encrypted server
--   side,using SSE-S3.
--   
--   <a>$sel:clientRequestToken:StartDocumentAnalysis'</a>,
--   <a>startDocumentAnalysis_clientRequestToken</a> - The idempotent token
--   that you use to identify the start request. If you use the same token
--   with multiple <tt>StartDocumentAnalysis</tt> requests, the same
--   <tt>JobId</tt> is returned. Use <tt>ClientRequestToken</tt> to prevent
--   the same job from being accidentally started more than once. For more
--   information, see <a>Calling Amazon Textract Asynchronous
--   Operations</a>.
--   
--   <a>$sel:jobTag:StartDocumentAnalysis'</a>,
--   <a>startDocumentAnalysis_jobTag</a> - An identifier that you specify
--   that's included in the completion notification published to the Amazon
--   SNS topic. For example, you can use <tt>JobTag</tt> to identify the
--   type of document that the completion notification corresponds to (such
--   as a tax form or a receipt).
--   
--   <a>$sel:documentLocation:StartDocumentAnalysis'</a>,
--   <a>startDocumentAnalysis_documentLocation</a> - The location of the
--   document to be processed.
--   
--   <a>$sel:featureTypes:StartDocumentAnalysis'</a>,
--   <a>startDocumentAnalysis_featureTypes</a> - A list of the types of
--   analysis to perform. Add TABLES to the list to return information
--   about the tables that are detected in the input document. Add FORMS to
--   return detected form data. To perform both types of analysis, add
--   TABLES and FORMS to <tt>FeatureTypes</tt>. All lines and words
--   detected in the document are included in the response (including text
--   that isn't related to the value of <tt>FeatureTypes</tt>).
newStartDocumentAnalysis :: DocumentLocation -> StartDocumentAnalysis

-- | <i>See:</i> <a>newStartDocumentAnalysisResponse</a> smart constructor.
data StartDocumentAnalysisResponse
StartDocumentAnalysisResponse' :: Maybe Text -> Int -> StartDocumentAnalysisResponse

-- | Create a value of <a>StartDocumentAnalysisResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobId:StartDocumentAnalysisResponse'</a>,
--   <a>startDocumentAnalysisResponse_jobId</a> - The identifier for the
--   document text detection job. Use <tt>JobId</tt> to identify the job in
--   a subsequent call to <tt>GetDocumentAnalysis</tt>. A <tt>JobId</tt>
--   value is only valid for 7 days.
--   
--   <a>$sel:httpStatus:StartDocumentAnalysisResponse'</a>,
--   <a>startDocumentAnalysisResponse_httpStatus</a> - The response's http
--   status code.
newStartDocumentAnalysisResponse :: Int -> StartDocumentAnalysisResponse

-- | <i>See:</i> <a>newStartDocumentTextDetection</a> smart constructor.
data StartDocumentTextDetection
StartDocumentTextDetection' :: Maybe NotificationChannel -> Maybe OutputConfig -> Maybe Text -> Maybe Text -> Maybe Text -> DocumentLocation -> StartDocumentTextDetection

-- | Create a value of <a>StartDocumentTextDetection</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:notificationChannel:StartDocumentTextDetection'</a>,
--   <a>startDocumentTextDetection_notificationChannel</a> - The Amazon SNS
--   topic ARN that you want Amazon Textract to publish the completion
--   status of the operation to.
--   
--   <a>$sel:outputConfig:StartDocumentTextDetection'</a>,
--   <a>startDocumentTextDetection_outputConfig</a> - Sets if the output
--   will go to a customer defined bucket. By default Amazon Textract will
--   save the results internally to be accessed with the
--   GetDocumentTextDetection operation.
--   
--   <a>$sel:kmsKeyId:StartDocumentTextDetection'</a>,
--   <a>startDocumentTextDetection_kmsKeyId</a> - The KMS key used to
--   encrypt the inference results. This can be in either Key ID or Key
--   Alias format. When a KMS key is provided, the KMS key will be used for
--   server-side encryption of the objects in the customer bucket. When
--   this parameter is not enabled, the result will be encrypted server
--   side,using SSE-S3.
--   
--   <a>$sel:clientRequestToken:StartDocumentTextDetection'</a>,
--   <a>startDocumentTextDetection_clientRequestToken</a> - The idempotent
--   token that's used to identify the start request. If you use the same
--   token with multiple <tt>StartDocumentTextDetection</tt> requests, the
--   same <tt>JobId</tt> is returned. Use <tt>ClientRequestToken</tt> to
--   prevent the same job from being accidentally started more than once.
--   For more information, see <a>Calling Amazon Textract Asynchronous
--   Operations</a>.
--   
--   <a>$sel:jobTag:StartDocumentTextDetection'</a>,
--   <a>startDocumentTextDetection_jobTag</a> - An identifier that you
--   specify that's included in the completion notification published to
--   the Amazon SNS topic. For example, you can use <tt>JobTag</tt> to
--   identify the type of document that the completion notification
--   corresponds to (such as a tax form or a receipt).
--   
--   <a>$sel:documentLocation:StartDocumentTextDetection'</a>,
--   <a>startDocumentTextDetection_documentLocation</a> - The location of
--   the document to be processed.
newStartDocumentTextDetection :: DocumentLocation -> StartDocumentTextDetection

-- | <i>See:</i> <a>newStartDocumentTextDetectionResponse</a> smart
--   constructor.
data StartDocumentTextDetectionResponse
StartDocumentTextDetectionResponse' :: Maybe Text -> Int -> StartDocumentTextDetectionResponse

-- | Create a value of <a>StartDocumentTextDetectionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobId:StartDocumentTextDetectionResponse'</a>,
--   <a>startDocumentTextDetectionResponse_jobId</a> - The identifier of
--   the text detection job for the document. Use <tt>JobId</tt> to
--   identify the job in a subsequent call to
--   <tt>GetDocumentTextDetection</tt>. A <tt>JobId</tt> value is only
--   valid for 7 days.
--   
--   <a>$sel:httpStatus:StartDocumentTextDetectionResponse'</a>,
--   <a>startDocumentTextDetectionResponse_httpStatus</a> - The response's
--   http status code.
newStartDocumentTextDetectionResponse :: Int -> StartDocumentTextDetectionResponse

-- | <i>See:</i> <a>newAnalyzeExpense</a> smart constructor.
data AnalyzeExpense
AnalyzeExpense' :: Document -> AnalyzeExpense

-- | Create a value of <a>AnalyzeExpense</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:document:AnalyzeExpense'</a>, <a>analyzeExpense_document</a> -
--   Undocumented member.
newAnalyzeExpense :: Document -> AnalyzeExpense

-- | <i>See:</i> <a>newAnalyzeExpenseResponse</a> smart constructor.
data AnalyzeExpenseResponse
AnalyzeExpenseResponse' :: Maybe DocumentMetadata -> Maybe [ExpenseDocument] -> Int -> AnalyzeExpenseResponse

-- | Create a value of <a>AnalyzeExpenseResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:documentMetadata:AnalyzeExpenseResponse'</a>,
--   <a>analyzeExpenseResponse_documentMetadata</a> - Undocumented member.
--   
--   <a>$sel:expenseDocuments:AnalyzeExpenseResponse'</a>,
--   <a>analyzeExpenseResponse_expenseDocuments</a> - The expenses detected
--   by Amazon Textract.
--   
--   <a>$sel:httpStatus:AnalyzeExpenseResponse'</a>,
--   <a>analyzeExpenseResponse_httpStatus</a> - The response's http status
--   code.
newAnalyzeExpenseResponse :: Int -> AnalyzeExpenseResponse

-- | <i>See:</i> <a>newAnalyzeDocument</a> smart constructor.
data AnalyzeDocument
AnalyzeDocument' :: Maybe HumanLoopConfig -> Document -> [FeatureType] -> AnalyzeDocument

-- | Create a value of <a>AnalyzeDocument</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:humanLoopConfig:AnalyzeDocument'</a>,
--   <a>analyzeDocument_humanLoopConfig</a> - Sets the configuration for
--   the human in the loop workflow for analyzing documents.
--   
--   <a>$sel:document:AnalyzeDocument'</a>, <a>analyzeDocument_document</a>
--   - The input document as base64-encoded bytes or an Amazon S3 object.
--   If you use the AWS CLI to call Amazon Textract operations, you can't
--   pass image bytes. The document must be an image in JPEG or PNG format.
--   
--   If you're using an AWS SDK to call Amazon Textract, you might not need
--   to base64-encode image bytes that are passed using the <tt>Bytes</tt>
--   field.
--   
--   <a>$sel:featureTypes:AnalyzeDocument'</a>,
--   <a>analyzeDocument_featureTypes</a> - A list of the types of analysis
--   to perform. Add TABLES to the list to return information about the
--   tables that are detected in the input document. Add FORMS to return
--   detected form data. To perform both types of analysis, add TABLES and
--   FORMS to <tt>FeatureTypes</tt>. All lines and words detected in the
--   document are included in the response (including text that isn't
--   related to the value of <tt>FeatureTypes</tt>).
newAnalyzeDocument :: Document -> AnalyzeDocument

-- | <i>See:</i> <a>newAnalyzeDocumentResponse</a> smart constructor.
data AnalyzeDocumentResponse
AnalyzeDocumentResponse' :: Maybe Text -> Maybe [Block] -> Maybe DocumentMetadata -> Maybe HumanLoopActivationOutput -> Int -> AnalyzeDocumentResponse

-- | Create a value of <a>AnalyzeDocumentResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:analyzeDocumentModelVersion:AnalyzeDocumentResponse'</a>,
--   <a>analyzeDocumentResponse_analyzeDocumentModelVersion</a> - The
--   version of the model used to analyze the document.
--   
--   <a>$sel:blocks:AnalyzeDocumentResponse'</a>,
--   <a>analyzeDocumentResponse_blocks</a> - The items that are detected
--   and analyzed by <tt>AnalyzeDocument</tt>.
--   
--   <a>$sel:documentMetadata:AnalyzeDocumentResponse'</a>,
--   <a>analyzeDocumentResponse_documentMetadata</a> - Metadata about the
--   analyzed document. An example is the number of pages.
--   
--   <a>$sel:humanLoopActivationOutput:AnalyzeDocumentResponse'</a>,
--   <a>analyzeDocumentResponse_humanLoopActivationOutput</a> - Shows the
--   results of the human in the loop evaluation.
--   
--   <a>$sel:httpStatus:AnalyzeDocumentResponse'</a>,
--   <a>analyzeDocumentResponse_httpStatus</a> - The response's http status
--   code.
newAnalyzeDocumentResponse :: Int -> AnalyzeDocumentResponse

-- | <i>See:</i> <a>newDetectDocumentText</a> smart constructor.
data DetectDocumentText
DetectDocumentText' :: Document -> DetectDocumentText

-- | Create a value of <a>DetectDocumentText</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:document:DetectDocumentText'</a>,
--   <a>detectDocumentText_document</a> - The input document as
--   base64-encoded bytes or an Amazon S3 object. If you use the AWS CLI to
--   call Amazon Textract operations, you can't pass image bytes. The
--   document must be an image in JPEG or PNG format.
--   
--   If you're using an AWS SDK to call Amazon Textract, you might not need
--   to base64-encode image bytes that are passed using the <tt>Bytes</tt>
--   field.
newDetectDocumentText :: Document -> DetectDocumentText

-- | <i>See:</i> <a>newDetectDocumentTextResponse</a> smart constructor.
data DetectDocumentTextResponse
DetectDocumentTextResponse' :: Maybe [Block] -> Maybe DocumentMetadata -> Maybe Text -> Int -> DetectDocumentTextResponse

-- | Create a value of <a>DetectDocumentTextResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:blocks:DetectDocumentTextResponse'</a>,
--   <a>detectDocumentTextResponse_blocks</a> - An array of <tt>Block</tt>
--   objects that contain the text that's detected in the document.
--   
--   <a>$sel:documentMetadata:DetectDocumentTextResponse'</a>,
--   <a>detectDocumentTextResponse_documentMetadata</a> - Metadata about
--   the document. It contains the number of pages that are detected in the
--   document.
--   
--   
--   <a>$sel:detectDocumentTextModelVersion:DetectDocumentTextResponse'</a>,
--   <a>detectDocumentTextResponse_detectDocumentTextModelVersion</a> -
--   
--   <a>$sel:httpStatus:DetectDocumentTextResponse'</a>,
--   <a>detectDocumentTextResponse_httpStatus</a> - The response's http
--   status code.
newDetectDocumentTextResponse :: Int -> DetectDocumentTextResponse
newtype BlockType
BlockType' :: Text -> BlockType
[fromBlockType] :: BlockType -> Text
pattern BlockType_CELL :: BlockType
pattern BlockType_KEY_VALUE_SET :: BlockType
pattern BlockType_LINE :: BlockType
pattern BlockType_PAGE :: BlockType
pattern BlockType_SELECTION_ELEMENT :: BlockType
pattern BlockType_TABLE :: BlockType
pattern BlockType_WORD :: BlockType
newtype ContentClassifier
ContentClassifier' :: Text -> ContentClassifier
[fromContentClassifier] :: ContentClassifier -> Text
pattern ContentClassifier_FreeOfAdultContent :: ContentClassifier
pattern ContentClassifier_FreeOfPersonallyIdentifiableInformation :: ContentClassifier
newtype EntityType
EntityType' :: Text -> EntityType
[fromEntityType] :: EntityType -> Text
pattern EntityType_KEY :: EntityType
pattern EntityType_VALUE :: EntityType
newtype FeatureType
FeatureType' :: Text -> FeatureType
[fromFeatureType] :: FeatureType -> Text
pattern FeatureType_FORMS :: FeatureType
pattern FeatureType_TABLES :: FeatureType
newtype JobStatus
JobStatus' :: Text -> JobStatus
[fromJobStatus] :: JobStatus -> Text
pattern JobStatus_FAILED :: JobStatus
pattern JobStatus_IN_PROGRESS :: JobStatus
pattern JobStatus_PARTIAL_SUCCESS :: JobStatus
pattern JobStatus_SUCCEEDED :: JobStatus
newtype RelationshipType
RelationshipType' :: Text -> RelationshipType
[fromRelationshipType] :: RelationshipType -> Text
pattern RelationshipType_CHILD :: RelationshipType
pattern RelationshipType_COMPLEX_FEATURES :: RelationshipType
pattern RelationshipType_VALUE :: RelationshipType
newtype SelectionStatus
SelectionStatus' :: Text -> SelectionStatus
[fromSelectionStatus] :: SelectionStatus -> Text
pattern SelectionStatus_NOT_SELECTED :: SelectionStatus
pattern SelectionStatus_SELECTED :: SelectionStatus
newtype TextType
TextType' :: Text -> TextType
[fromTextType] :: TextType -> Text
pattern TextType_HANDWRITING :: TextType
pattern TextType_PRINTED :: TextType

-- | A <tt>Block</tt> represents items that are recognized in a document
--   within a group of pixels close to each other. The information returned
--   in a <tt>Block</tt> object depends on the type of operation. In text
--   detection for documents (for example DetectDocumentText), you get
--   information about the detected words and lines of text. In text
--   analysis (for example AnalyzeDocument), you can also get information
--   about the fields, tables, and selection elements that are detected in
--   the document.
--   
--   An array of <tt>Block</tt> objects is returned by both synchronous and
--   asynchronous operations. In synchronous operations, such as
--   DetectDocumentText, the array of <tt>Block</tt> objects is the entire
--   set of results. In asynchronous operations, such as
--   GetDocumentAnalysis, the array is returned over one or more responses.
--   
--   For more information, see <a>How Amazon Textract Works</a>.
--   
--   <i>See:</i> <a>newBlock</a> smart constructor.
data Block
Block' :: Maybe [Relationship] -> Maybe SelectionStatus -> Maybe BlockType -> Maybe Natural -> Maybe Natural -> Maybe Text -> Maybe TextType -> Maybe Natural -> Maybe Natural -> Maybe Double -> Maybe Natural -> Maybe [EntityType] -> Maybe Text -> Maybe Geometry -> Block

-- | Create a value of <a>Block</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:relationships:Block'</a>, <a>block_relationships</a> - A list
--   of child blocks of the current block. For example, a LINE object has
--   child blocks for each WORD block that's part of the line of text.
--   There aren't Relationship objects in the list for relationships that
--   don't exist, such as when the current block has no child blocks. The
--   list size can be the following:
--   
--   <ul>
--   <li>0 - The block has no child blocks.</li>
--   <li>1 - The block has child blocks.</li>
--   </ul>
--   
--   <a>$sel:selectionStatus:Block'</a>, <a>block_selectionStatus</a> - The
--   selection status of a selection element, such as an option button or
--   check box.
--   
--   <a>$sel:blockType:Block'</a>, <a>block_blockType</a> - The type of
--   text item that's recognized. In operations for text detection, the
--   following types are returned:
--   
--   <ul>
--   <li><i>PAGE</i> - Contains a list of the LINE <tt>Block</tt> objects
--   that are detected on a document page.</li>
--   <li><i>WORD</i> - A word detected on a document page. A word is one or
--   more ISO basic Latin script characters that aren't separated by
--   spaces.</li>
--   <li><i>LINE</i> - A string of tab-delimited, contiguous words that are
--   detected on a document page.</li>
--   </ul>
--   
--   In text analysis operations, the following types are returned:
--   
--   <ul>
--   <li><i>PAGE</i> - Contains a list of child <tt>Block</tt> objects that
--   are detected on a document page.</li>
--   <li><i>KEY_VALUE_SET</i> - Stores the KEY and VALUE <tt>Block</tt>
--   objects for linked text that's detected on a document page. Use the
--   <tt>EntityType</tt> field to determine if a KEY_VALUE_SET object is a
--   KEY <tt>Block</tt> object or a VALUE <tt>Block</tt> object.</li>
--   <li><i>WORD</i> - A word that's detected on a document page. A word is
--   one or more ISO basic Latin script characters that aren't separated by
--   spaces.</li>
--   <li><i>LINE</i> - A string of tab-delimited, contiguous words that are
--   detected on a document page.</li>
--   <li><i>TABLE</i> - A table that's detected on a document page. A table
--   is grid-based information with two or more rows or columns, with a
--   cell span of one row and one column each.</li>
--   <li><i>CELL</i> - A cell within a detected table. The cell is the
--   parent of the block that contains the text in the cell.</li>
--   <li><i>SELECTION_ELEMENT</i> - A selection element such as an option
--   button (radio button) or a check box that's detected on a document
--   page. Use the value of <tt>SelectionStatus</tt> to determine the
--   status of the selection element.</li>
--   </ul>
--   
--   <a>$sel:rowSpan:Block'</a>, <a>block_rowSpan</a> - The number of rows
--   that a table cell spans. Currently this value is always 1, even if the
--   number of rows spanned is greater than 1. <tt>RowSpan</tt> isn't
--   returned by <tt>DetectDocumentText</tt> and
--   <tt>GetDocumentTextDetection</tt>.
--   
--   <a>$sel:page:Block'</a>, <a>block_page</a> - The page on which a block
--   was detected. <tt>Page</tt> is returned by asynchronous operations.
--   Page values greater than 1 are only returned for multipage documents
--   that are in PDF format. A scanned image (JPEG/PNG), even if it
--   contains multiple document pages, is considered to be a single-page
--   document. The value of <tt>Page</tt> is always 1. Synchronous
--   operations don't return <tt>Page</tt> because every input document is
--   considered to be a single-page document.
--   
--   <a>$sel:id:Block'</a>, <a>block_id</a> - The identifier for the
--   recognized text. The identifier is only unique for a single operation.
--   
--   <a>$sel:textType:Block'</a>, <a>block_textType</a> - The kind of text
--   that Amazon Textract has detected. Can check for handwritten text and
--   printed text.
--   
--   <a>$sel:columnSpan:Block'</a>, <a>block_columnSpan</a> - The number of
--   columns that a table cell spans. Currently this value is always 1,
--   even if the number of columns spanned is greater than 1.
--   <tt>ColumnSpan</tt> isn't returned by <tt>DetectDocumentText</tt> and
--   <tt>GetDocumentTextDetection</tt>.
--   
--   <a>$sel:rowIndex:Block'</a>, <a>block_rowIndex</a> - The row in which
--   a table cell is located. The first row position is 1.
--   <tt>RowIndex</tt> isn't returned by <tt>DetectDocumentText</tt> and
--   <tt>GetDocumentTextDetection</tt>.
--   
--   <a>$sel:confidence:Block'</a>, <a>block_confidence</a> - The
--   confidence score that Amazon Textract has in the accuracy of the
--   recognized text and the accuracy of the geometry points around the
--   recognized text.
--   
--   <a>$sel:columnIndex:Block'</a>, <a>block_columnIndex</a> - The column
--   in which a table cell appears. The first column position is 1.
--   <tt>ColumnIndex</tt> isn't returned by <tt>DetectDocumentText</tt> and
--   <tt>GetDocumentTextDetection</tt>.
--   
--   <a>$sel:entityTypes:Block'</a>, <a>block_entityTypes</a> - The type of
--   entity. The following can be returned:
--   
--   <ul>
--   <li><i>KEY</i> - An identifier for a field on the document.</li>
--   <li><i>VALUE</i> - The field text.</li>
--   </ul>
--   
--   <tt>EntityTypes</tt> isn't returned by <tt>DetectDocumentText</tt> and
--   <tt>GetDocumentTextDetection</tt>.
--   
--   <a>$sel:text:Block'</a>, <a>block_text</a> - The word or line of text
--   that's recognized by Amazon Textract.
--   
--   <a>$sel:geometry:Block'</a>, <a>block_geometry</a> - The location of
--   the recognized text on the image. It includes an axis-aligned, coarse
--   bounding box that surrounds the text, and a finer-grain polygon for
--   more accurate spatial information.
newBlock :: Block

-- | The bounding box around the detected page, text, key-value pair,
--   table, table cell, or selection element on a document page. The
--   <tt>left</tt> (x-coordinate) and <tt>top</tt> (y-coordinate) are
--   coordinates that represent the top and left sides of the bounding box.
--   Note that the upper-left corner of the image is the origin (0,0).
--   
--   The <tt>top</tt> and <tt>left</tt> values returned are ratios of the
--   overall document page size. For example, if the input image is 700 x
--   200 pixels, and the top-left coordinate of the bounding box is 350 x
--   50 pixels, the API returns a <tt>left</tt> value of 0.5 (350/700) and
--   a <tt>top</tt> value of 0.25 (50/200).
--   
--   The <tt>width</tt> and <tt>height</tt> values represent the dimensions
--   of the bounding box as a ratio of the overall document page dimension.
--   For example, if the document page size is 700 x 200 pixels, and the
--   bounding box width is 70 pixels, the width returned is 0.1.
--   
--   <i>See:</i> <a>newBoundingBox</a> smart constructor.
data BoundingBox
BoundingBox' :: Maybe Double -> Maybe Double -> Maybe Double -> Maybe Double -> BoundingBox

-- | Create a value of <a>BoundingBox</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:height:BoundingBox'</a>, <a>boundingBox_height</a> - The
--   height of the bounding box as a ratio of the overall document page
--   height.
--   
--   <a>$sel:width:BoundingBox'</a>, <a>boundingBox_width</a> - The width
--   of the bounding box as a ratio of the overall document page width.
--   
--   <a>$sel:left:BoundingBox'</a>, <a>boundingBox_left</a> - The left
--   coordinate of the bounding box as a ratio of overall document page
--   width.
--   
--   <a>$sel:top:BoundingBox'</a>, <a>boundingBox_top</a> - The top
--   coordinate of the bounding box as a ratio of overall document page
--   height.
newBoundingBox :: BoundingBox

-- | The input document, either as bytes or as an S3 object.
--   
--   You pass image bytes to an Amazon Textract API operation by using the
--   <tt>Bytes</tt> property. For example, you would use the <tt>Bytes</tt>
--   property to pass a document loaded from a local file system. Image
--   bytes passed by using the <tt>Bytes</tt> property must be base64
--   encoded. Your code might not need to encode document file bytes if
--   you're using an AWS SDK to call Amazon Textract API operations.
--   
--   You pass images stored in an S3 bucket to an Amazon Textract API
--   operation by using the <tt>S3Object</tt> property. Documents stored in
--   an S3 bucket don't need to be base64 encoded.
--   
--   The AWS Region for the S3 bucket that contains the S3 object must
--   match the AWS Region that you use for Amazon Textract operations.
--   
--   If you use the AWS CLI to call Amazon Textract operations, passing
--   image bytes using the Bytes property isn't supported. You must first
--   upload the document to an Amazon S3 bucket, and then call the
--   operation using the S3Object property.
--   
--   For Amazon Textract to process an S3 object, the user must have
--   permission to access the S3 object.
--   
--   <i>See:</i> <a>newDocument</a> smart constructor.
data Document
Document' :: Maybe Base64 -> Maybe S3Object -> Document

-- | Create a value of <a>Document</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:bytes:Document'</a>, <a>document_bytes</a> - A blob of
--   base64-encoded document bytes. The maximum size of a document that's
--   provided in a blob of bytes is 5 MB. The document bytes must be in PNG
--   or JPEG format.
--   
--   If you're using an AWS SDK to call Amazon Textract, you might not need
--   to base64-encode image bytes passed using the <tt>Bytes</tt> field.--
--   -- <i>Note:</i> This <tt>Lens</tt> automatically encodes and decodes
--   Base64 data. -- The underlying isomorphism will encode to Base64
--   representation during -- serialisation, and decode from Base64
--   representation during deserialisation. -- This <tt>Lens</tt> accepts
--   and returns only raw unencoded data.
--   
--   <a>$sel:s3Object:Document'</a>, <a>document_s3Object</a> - Identifies
--   an S3 object as the document source. The maximum size of a document
--   that's stored in an S3 bucket is 5 MB.
newDocument :: Document

-- | The Amazon S3 bucket that contains the document to be processed. It's
--   used by asynchronous operations such as StartDocumentTextDetection.
--   
--   The input document can be an image file in JPEG or PNG format. It can
--   also be a file in PDF format.
--   
--   <i>See:</i> <a>newDocumentLocation</a> smart constructor.
data DocumentLocation
DocumentLocation' :: Maybe S3Object -> DocumentLocation

-- | Create a value of <a>DocumentLocation</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:s3Object:DocumentLocation'</a>,
--   <a>documentLocation_s3Object</a> - The Amazon S3 bucket that contains
--   the input document.
newDocumentLocation :: DocumentLocation

-- | Information about the input document.
--   
--   <i>See:</i> <a>newDocumentMetadata</a> smart constructor.
data DocumentMetadata
DocumentMetadata' :: Maybe Natural -> DocumentMetadata

-- | Create a value of <a>DocumentMetadata</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pages:DocumentMetadata'</a>, <a>documentMetadata_pages</a> -
--   The number of pages that are detected in the document.
newDocumentMetadata :: DocumentMetadata

-- | An object used to store information about the Value or Label detected
--   by Amazon Textract.
--   
--   <i>See:</i> <a>newExpenseDetection</a> smart constructor.
data ExpenseDetection
ExpenseDetection' :: Maybe Double -> Maybe Text -> Maybe Geometry -> ExpenseDetection

-- | Create a value of <a>ExpenseDetection</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:confidence:ExpenseDetection'</a>,
--   <a>expenseDetection_confidence</a> - The confidence in detection, as a
--   percentage
--   
--   <a>$sel:text:ExpenseDetection'</a>, <a>expenseDetection_text</a> - The
--   word or line of text recognized by Amazon Textract
--   
--   <a>$sel:geometry:ExpenseDetection'</a>,
--   <a>expenseDetection_geometry</a> - Undocumented member.
newExpenseDetection :: ExpenseDetection

-- | The structure holding all the information returned by AnalyzeExpense
--   
--   <i>See:</i> <a>newExpenseDocument</a> smart constructor.
data ExpenseDocument
ExpenseDocument' :: Maybe [LineItemGroup] -> Maybe Natural -> Maybe [ExpenseField] -> ExpenseDocument

-- | Create a value of <a>ExpenseDocument</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lineItemGroups:ExpenseDocument'</a>,
--   <a>expenseDocument_lineItemGroups</a> - Information detected on each
--   table of a document, seperated into <tt>LineItems</tt>.
--   
--   <a>$sel:expenseIndex:ExpenseDocument'</a>,
--   <a>expenseDocument_expenseIndex</a> - Denotes which invoice or receipt
--   in the document the information is coming from. First document will be
--   1, the second 2, and so on.
--   
--   <a>$sel:summaryFields:ExpenseDocument'</a>,
--   <a>expenseDocument_summaryFields</a> - Any information found outside
--   of a table by Amazon Textract.
newExpenseDocument :: ExpenseDocument

-- | Breakdown of detected information, seperated into the catagories Type,
--   LableDetection, and ValueDetection
--   
--   <i>See:</i> <a>newExpenseField</a> smart constructor.
data ExpenseField
ExpenseField' :: Maybe ExpenseDetection -> Maybe ExpenseDetection -> Maybe Natural -> Maybe ExpenseType -> ExpenseField

-- | Create a value of <a>ExpenseField</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:labelDetection:ExpenseField'</a>,
--   <a>expenseField_labelDetection</a> - The explicitly stated label of a
--   detected element.
--   
--   <a>$sel:valueDetection:ExpenseField'</a>,
--   <a>expenseField_valueDetection</a> - The value of a detected element.
--   Present in explicit and implicit elements.
--   
--   <a>$sel:pageNumber:ExpenseField'</a>, <a>expenseField_pageNumber</a> -
--   The page number the value was detected on.
--   
--   <a>$sel:type':ExpenseField'</a>, <a>expenseField_type</a> - The
--   implied label of a detected element. Present alongside LabelDetection
--   for explicit elements.
newExpenseField :: ExpenseField

-- | An object used to store information about the Type detected by Amazon
--   Textract.
--   
--   <i>See:</i> <a>newExpenseType</a> smart constructor.
data ExpenseType
ExpenseType' :: Maybe Double -> Maybe Text -> ExpenseType

-- | Create a value of <a>ExpenseType</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:confidence:ExpenseType'</a>, <a>expenseType_confidence</a> -
--   The confidence of accuracy, as a percentage.
--   
--   <a>$sel:text:ExpenseType'</a>, <a>expenseType_text</a> - The word or
--   line of text detected by Amazon Textract.
newExpenseType :: ExpenseType

-- | Information about where the following items are located on a document
--   page: detected page, text, key-value pairs, tables, table cells, and
--   selection elements.
--   
--   <i>See:</i> <a>newGeometry</a> smart constructor.
data Geometry
Geometry' :: Maybe [Point] -> Maybe BoundingBox -> Geometry

-- | Create a value of <a>Geometry</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:polygon:Geometry'</a>, <a>geometry_polygon</a> - Within the
--   bounding box, a fine-grained polygon around the recognized item.
--   
--   <a>$sel:boundingBox:Geometry'</a>, <a>geometry_boundingBox</a> - An
--   axis-aligned coarse representation of the location of the recognized
--   item on the document page.
newGeometry :: Geometry

-- | Shows the results of the human in the loop evaluation. If there is no
--   HumanLoopArn, the input did not trigger human review.
--   
--   <i>See:</i> <a>newHumanLoopActivationOutput</a> smart constructor.
data HumanLoopActivationOutput
HumanLoopActivationOutput' :: Maybe (NonEmpty Text) -> Maybe Text -> Maybe Text -> HumanLoopActivationOutput

-- | Create a value of <a>HumanLoopActivationOutput</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:humanLoopActivationReasons:HumanLoopActivationOutput'</a>,
--   <a>humanLoopActivationOutput_humanLoopActivationReasons</a> - Shows if
--   and why human review was needed.
--   
--   <a>$sel:humanLoopArn:HumanLoopActivationOutput'</a>,
--   <a>humanLoopActivationOutput_humanLoopArn</a> - The Amazon Resource
--   Name (ARN) of the HumanLoop created.
--   
--   
--   <a>$sel:humanLoopActivationConditionsEvaluationResults:HumanLoopActivationOutput'</a>,
--   <a>humanLoopActivationOutput_humanLoopActivationConditionsEvaluationResults</a>
--   - Shows the result of condition evaluations, including those
--   conditions which activated a human review.
newHumanLoopActivationOutput :: HumanLoopActivationOutput

-- | Sets up the human review workflow the document will be sent to if one
--   of the conditions is met. You can also set certain attributes of the
--   image before review.
--   
--   <i>See:</i> <a>newHumanLoopConfig</a> smart constructor.
data HumanLoopConfig
HumanLoopConfig' :: Maybe HumanLoopDataAttributes -> Text -> Text -> HumanLoopConfig

-- | Create a value of <a>HumanLoopConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dataAttributes:HumanLoopConfig'</a>,
--   <a>humanLoopConfig_dataAttributes</a> - Sets attributes of the input
--   data.
--   
--   <a>$sel:humanLoopName:HumanLoopConfig'</a>,
--   <a>humanLoopConfig_humanLoopName</a> - The name of the human workflow
--   used for this image. This should be kept unique within a region.
--   
--   <a>$sel:flowDefinitionArn:HumanLoopConfig'</a>,
--   <a>humanLoopConfig_flowDefinitionArn</a> - The Amazon Resource Name
--   (ARN) of the flow definition.
newHumanLoopConfig :: Text -> Text -> HumanLoopConfig

-- | Allows you to set attributes of the image. Currently, you can declare
--   an image as free of personally identifiable information and adult
--   content.
--   
--   <i>See:</i> <a>newHumanLoopDataAttributes</a> smart constructor.
data HumanLoopDataAttributes
HumanLoopDataAttributes' :: Maybe [ContentClassifier] -> HumanLoopDataAttributes

-- | Create a value of <a>HumanLoopDataAttributes</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:contentClassifiers:HumanLoopDataAttributes'</a>,
--   <a>humanLoopDataAttributes_contentClassifiers</a> - Sets whether the
--   input image is free of personally identifiable information or adult
--   content.
newHumanLoopDataAttributes :: HumanLoopDataAttributes

-- | A structure that holds information about the different lines found in
--   a document's tables.
--   
--   <i>See:</i> <a>newLineItemFields</a> smart constructor.
data LineItemFields
LineItemFields' :: Maybe [ExpenseField] -> LineItemFields

-- | Create a value of <a>LineItemFields</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lineItemExpenseFields:LineItemFields'</a>,
--   <a>lineItemFields_lineItemExpenseFields</a> - ExpenseFields used to
--   show information from detected lines on a table.
newLineItemFields :: LineItemFields

-- | A grouping of tables which contain LineItems, with each table
--   identified by the table's <tt>LineItemGroupIndex</tt>.
--   
--   <i>See:</i> <a>newLineItemGroup</a> smart constructor.
data LineItemGroup
LineItemGroup' :: Maybe [LineItemFields] -> Maybe Natural -> LineItemGroup

-- | Create a value of <a>LineItemGroup</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lineItems:LineItemGroup'</a>, <a>lineItemGroup_lineItems</a> -
--   The breakdown of information on a particular line of a table.
--   
--   <a>$sel:lineItemGroupIndex:LineItemGroup'</a>,
--   <a>lineItemGroup_lineItemGroupIndex</a> - The number used to identify
--   a specific table in a document. The first table encountered will have
--   a LineItemGroupIndex of 1, the second 2, etc.
newLineItemGroup :: LineItemGroup

-- | The Amazon Simple Notification Service (Amazon SNS) topic to which
--   Amazon Textract publishes the completion status of an asynchronous
--   document operation, such as StartDocumentTextDetection.
--   
--   <i>See:</i> <a>newNotificationChannel</a> smart constructor.
data NotificationChannel
NotificationChannel' :: Text -> Text -> NotificationChannel

-- | Create a value of <a>NotificationChannel</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sNSTopicArn:NotificationChannel'</a>,
--   <a>notificationChannel_sNSTopicArn</a> - The Amazon SNS topic that
--   Amazon Textract posts the completion status to.
--   
--   <a>$sel:roleArn:NotificationChannel'</a>,
--   <a>notificationChannel_roleArn</a> - The Amazon Resource Name (ARN) of
--   an IAM role that gives Amazon Textract publishing permissions to the
--   Amazon SNS topic.
newNotificationChannel :: Text -> Text -> NotificationChannel

-- | Sets whether or not your output will go to a user created bucket. Used
--   to set the name of the bucket, and the prefix on the output file.
--   
--   <tt>OutputConfig</tt> is an optional parameter which lets you adjust
--   where your output will be placed. By default, Amazon Textract will
--   store the results internally and can only be accessed by the Get API
--   operations. With OutputConfig enabled, you can set the name of the
--   bucket the output will be sent to and the file prefix of the results
--   where you can download your results. Additionally, you can set the
--   <tt>KMSKeyID</tt> parameter to a customer master key (CMK) to encrypt
--   your output. Without this parameter set Amazon Textract will encrypt
--   server-side using the AWS managed CMK for Amazon S3.
--   
--   Decryption of Customer Content is necessary for processing of the
--   documents by Amazon Textract. If your account is opted out under an AI
--   services opt out policy then all unencrypted Customer Content is
--   immediately and permanently deleted after the Customer Content has
--   been processed by the service. No copy of of the output is retained by
--   Amazon Textract. For information about how to opt out, see <a>Managing
--   AI services opt-out policy.</a>
--   
--   For more information on data privacy, see the <a>Data Privacy FAQ</a>.
--   
--   <i>See:</i> <a>newOutputConfig</a> smart constructor.
data OutputConfig
OutputConfig' :: Maybe Text -> Text -> OutputConfig

-- | Create a value of <a>OutputConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:s3Prefix:OutputConfig'</a>, <a>outputConfig_s3Prefix</a> - The
--   prefix of the object key that the output will be saved to. When not
--   enabled, the prefix will be “textract_output".
--   
--   <a>$sel:s3Bucket:OutputConfig'</a>, <a>outputConfig_s3Bucket</a> - The
--   name of the bucket your output will go to.
newOutputConfig :: Text -> OutputConfig

-- | The X and Y coordinates of a point on a document page. The X and Y
--   values that are returned are ratios of the overall document page size.
--   For example, if the input document is 700 x 200 and the operation
--   returns X=0.5 and Y=0.25, then the point is at the (350,50) pixel
--   coordinate on the document page.
--   
--   An array of <tt>Point</tt> objects, <tt>Polygon</tt>, is returned by
--   DetectDocumentText. <tt>Polygon</tt> represents a fine-grained polygon
--   around detected text. For more information, see Geometry in the Amazon
--   Textract Developer Guide.
--   
--   <i>See:</i> <a>newPoint</a> smart constructor.
data Point
Point' :: Maybe Double -> Maybe Double -> Point

-- | Create a value of <a>Point</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:y:Point'</a>, <a>point_y</a> - The value of the Y coordinate
--   for a point on a <tt>Polygon</tt>.
--   
--   <a>$sel:x:Point'</a>, <a>point_x</a> - The value of the X coordinate
--   for a point on a <tt>Polygon</tt>.
newPoint :: Point

-- | Information about how blocks are related to each other. A
--   <tt>Block</tt> object contains 0 or more <tt>Relation</tt> objects in
--   a list, <tt>Relationships</tt>. For more information, see Block.
--   
--   The <tt>Type</tt> element provides the type of the relationship for
--   all blocks in the <tt>IDs</tt> array.
--   
--   <i>See:</i> <a>newRelationship</a> smart constructor.
data Relationship
Relationship' :: Maybe [Text] -> Maybe RelationshipType -> Relationship

-- | Create a value of <a>Relationship</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ids:Relationship'</a>, <a>relationship_ids</a> - An array of
--   IDs for related blocks. You can get the type of the relationship from
--   the <tt>Type</tt> element.
--   
--   <a>$sel:type':Relationship'</a>, <a>relationship_type</a> - The type
--   of relationship that the blocks in the IDs array have with the current
--   block. The relationship can be <tt>VALUE</tt> or <tt>CHILD</tt>. A
--   relationship of type VALUE is a list that contains the ID of the VALUE
--   block that's associated with the KEY of a key-value pair. A
--   relationship of type CHILD is a list of IDs that identify WORD blocks
--   in the case of lines Cell blocks in the case of Tables, and WORD
--   blocks in the case of Selection Elements.
newRelationship :: Relationship

-- | The S3 bucket name and file name that identifies the document.
--   
--   The AWS Region for the S3 bucket that contains the document must match
--   the Region that you use for Amazon Textract operations.
--   
--   For Amazon Textract to process a file in an S3 bucket, the user must
--   have permission to access the S3 bucket and file.
--   
--   <i>See:</i> <a>newS3Object</a> smart constructor.
data S3Object
S3Object' :: Maybe Text -> Maybe Text -> Maybe Text -> S3Object

-- | Create a value of <a>S3Object</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:version:S3Object'</a>, <a>s3Object_version</a> - If the bucket
--   has versioning enabled, you can specify the object version.
--   
--   <a>$sel:name:S3Object'</a>, <a>s3Object_name</a> - The file name of
--   the input document. Synchronous operations can use image files that
--   are in JPEG or PNG format. Asynchronous operations also support PDF
--   format files.
--   
--   <a>$sel:bucket:S3Object'</a>, <a>s3Object_bucket</a> - The name of the
--   S3 bucket. Note that the # character is not valid in the file name.
newS3Object :: S3Object

-- | A warning about an issue that occurred during asynchronous text
--   analysis (StartDocumentAnalysis) or asynchronous document text
--   detection (StartDocumentTextDetection).
--   
--   <i>See:</i> <a>newWarning</a> smart constructor.
data Warning
Warning' :: Maybe [Natural] -> Maybe Text -> Warning

-- | Create a value of <a>Warning</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pages:Warning'</a>, <a>warning_pages</a> - A list of the pages
--   that the warning applies to.
--   
--   <a>$sel:errorCode:Warning'</a>, <a>warning_errorCode</a> - The error
--   code for the warning.
newWarning :: Warning
