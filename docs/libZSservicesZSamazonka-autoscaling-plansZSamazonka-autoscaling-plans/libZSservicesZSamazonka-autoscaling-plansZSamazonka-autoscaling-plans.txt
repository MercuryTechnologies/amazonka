-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/

@package libZSservicesZSamazonka-autoscaling-plansZSamazonka-autoscaling-plans
@version 1.6.1


module Network.AWS.AutoScalingPlans.Types.Datapoint

-- | Represents a single value in the forecast data used for predictive
--   scaling.
--   
--   <i>See:</i> <a>newDatapoint</a> smart constructor.
data Datapoint
Datapoint' :: Maybe POSIX -> Maybe Double -> Datapoint

-- | The time stamp for the data point in UTC format.
[$sel:timestamp:Datapoint'] :: Datapoint -> Maybe POSIX

-- | The value of the data point.
[$sel:value:Datapoint'] :: Datapoint -> Maybe Double

-- | Create a value of <a>Datapoint</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:timestamp:Datapoint'</a>, <a>datapoint_timestamp</a> - The
--   time stamp for the data point in UTC format.
--   
--   <a>$sel:value:Datapoint'</a>, <a>datapoint_value</a> - The value of
--   the data point.
newDatapoint :: Datapoint

-- | The time stamp for the data point in UTC format.
datapoint_timestamp :: Lens' Datapoint (Maybe UTCTime)

-- | The value of the data point.
datapoint_value :: Lens' Datapoint (Maybe Double)
instance GHC.Generics.Generic Network.AWS.AutoScalingPlans.Types.Datapoint.Datapoint
instance GHC.Show.Show Network.AWS.AutoScalingPlans.Types.Datapoint.Datapoint
instance GHC.Read.Read Network.AWS.AutoScalingPlans.Types.Datapoint.Datapoint
instance GHC.Classes.Eq Network.AWS.AutoScalingPlans.Types.Datapoint.Datapoint
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.AutoScalingPlans.Types.Datapoint.Datapoint
instance Data.Hashable.Class.Hashable Network.AWS.AutoScalingPlans.Types.Datapoint.Datapoint
instance Control.DeepSeq.NFData Network.AWS.AutoScalingPlans.Types.Datapoint.Datapoint


module Network.AWS.AutoScalingPlans.Types.ForecastDataType
newtype ForecastDataType
ForecastDataType' :: Text -> ForecastDataType
[fromForecastDataType] :: ForecastDataType -> Text
pattern ForecastDataType_CapacityForecast :: ForecastDataType
pattern ForecastDataType_LoadForecast :: ForecastDataType
pattern ForecastDataType_ScheduledActionMaxCapacity :: ForecastDataType
pattern ForecastDataType_ScheduledActionMinCapacity :: ForecastDataType
instance Network.AWS.Data.XML.ToXML Network.AWS.AutoScalingPlans.Types.ForecastDataType.ForecastDataType
instance Network.AWS.Data.XML.FromXML Network.AWS.AutoScalingPlans.Types.ForecastDataType.ForecastDataType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.AutoScalingPlans.Types.ForecastDataType.ForecastDataType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.AutoScalingPlans.Types.ForecastDataType.ForecastDataType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.AutoScalingPlans.Types.ForecastDataType.ForecastDataType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.AutoScalingPlans.Types.ForecastDataType.ForecastDataType
instance Network.AWS.Data.Query.ToQuery Network.AWS.AutoScalingPlans.Types.ForecastDataType.ForecastDataType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.AutoScalingPlans.Types.ForecastDataType.ForecastDataType
instance Network.AWS.Data.Log.ToLog Network.AWS.AutoScalingPlans.Types.ForecastDataType.ForecastDataType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.AutoScalingPlans.Types.ForecastDataType.ForecastDataType
instance Network.AWS.Data.Text.ToText Network.AWS.AutoScalingPlans.Types.ForecastDataType.ForecastDataType
instance Network.AWS.Data.Text.FromText Network.AWS.AutoScalingPlans.Types.ForecastDataType.ForecastDataType
instance Control.DeepSeq.NFData Network.AWS.AutoScalingPlans.Types.ForecastDataType.ForecastDataType
instance Data.Hashable.Class.Hashable Network.AWS.AutoScalingPlans.Types.ForecastDataType.ForecastDataType
instance GHC.Generics.Generic Network.AWS.AutoScalingPlans.Types.ForecastDataType.ForecastDataType
instance GHC.Classes.Ord Network.AWS.AutoScalingPlans.Types.ForecastDataType.ForecastDataType
instance GHC.Classes.Eq Network.AWS.AutoScalingPlans.Types.ForecastDataType.ForecastDataType
instance GHC.Read.Read Network.AWS.AutoScalingPlans.Types.ForecastDataType.ForecastDataType
instance GHC.Show.Show Network.AWS.AutoScalingPlans.Types.ForecastDataType.ForecastDataType


module Network.AWS.AutoScalingPlans.Types.LoadMetricType
newtype LoadMetricType
LoadMetricType' :: Text -> LoadMetricType
[fromLoadMetricType] :: LoadMetricType -> Text
pattern LoadMetricType_ALBTargetGroupRequestCount :: LoadMetricType
pattern LoadMetricType_ASGTotalCPUUtilization :: LoadMetricType
pattern LoadMetricType_ASGTotalNetworkIn :: LoadMetricType
pattern LoadMetricType_ASGTotalNetworkOut :: LoadMetricType
instance Network.AWS.Data.XML.ToXML Network.AWS.AutoScalingPlans.Types.LoadMetricType.LoadMetricType
instance Network.AWS.Data.XML.FromXML Network.AWS.AutoScalingPlans.Types.LoadMetricType.LoadMetricType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.AutoScalingPlans.Types.LoadMetricType.LoadMetricType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.AutoScalingPlans.Types.LoadMetricType.LoadMetricType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.AutoScalingPlans.Types.LoadMetricType.LoadMetricType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.AutoScalingPlans.Types.LoadMetricType.LoadMetricType
instance Network.AWS.Data.Query.ToQuery Network.AWS.AutoScalingPlans.Types.LoadMetricType.LoadMetricType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.AutoScalingPlans.Types.LoadMetricType.LoadMetricType
instance Network.AWS.Data.Log.ToLog Network.AWS.AutoScalingPlans.Types.LoadMetricType.LoadMetricType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.AutoScalingPlans.Types.LoadMetricType.LoadMetricType
instance Network.AWS.Data.Text.ToText Network.AWS.AutoScalingPlans.Types.LoadMetricType.LoadMetricType
instance Network.AWS.Data.Text.FromText Network.AWS.AutoScalingPlans.Types.LoadMetricType.LoadMetricType
instance Control.DeepSeq.NFData Network.AWS.AutoScalingPlans.Types.LoadMetricType.LoadMetricType
instance Data.Hashable.Class.Hashable Network.AWS.AutoScalingPlans.Types.LoadMetricType.LoadMetricType
instance GHC.Generics.Generic Network.AWS.AutoScalingPlans.Types.LoadMetricType.LoadMetricType
instance GHC.Classes.Ord Network.AWS.AutoScalingPlans.Types.LoadMetricType.LoadMetricType
instance GHC.Classes.Eq Network.AWS.AutoScalingPlans.Types.LoadMetricType.LoadMetricType
instance GHC.Read.Read Network.AWS.AutoScalingPlans.Types.LoadMetricType.LoadMetricType
instance GHC.Show.Show Network.AWS.AutoScalingPlans.Types.LoadMetricType.LoadMetricType


module Network.AWS.AutoScalingPlans.Types.MetricDimension

-- | Represents a dimension for a customized metric.
--   
--   <i>See:</i> <a>newMetricDimension</a> smart constructor.
data MetricDimension
MetricDimension' :: Text -> Text -> MetricDimension

-- | The name of the dimension.
[$sel:name:MetricDimension'] :: MetricDimension -> Text

-- | The value of the dimension.
[$sel:value:MetricDimension'] :: MetricDimension -> Text

-- | Create a value of <a>MetricDimension</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:MetricDimension'</a>, <a>metricDimension_name</a> - The
--   name of the dimension.
--   
--   <a>$sel:value:MetricDimension'</a>, <a>metricDimension_value</a> - The
--   value of the dimension.
newMetricDimension :: Text -> Text -> MetricDimension

-- | The name of the dimension.
metricDimension_name :: Lens' MetricDimension Text

-- | The value of the dimension.
metricDimension_value :: Lens' MetricDimension Text
instance GHC.Generics.Generic Network.AWS.AutoScalingPlans.Types.MetricDimension.MetricDimension
instance GHC.Show.Show Network.AWS.AutoScalingPlans.Types.MetricDimension.MetricDimension
instance GHC.Read.Read Network.AWS.AutoScalingPlans.Types.MetricDimension.MetricDimension
instance GHC.Classes.Eq Network.AWS.AutoScalingPlans.Types.MetricDimension.MetricDimension
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.AutoScalingPlans.Types.MetricDimension.MetricDimension
instance Data.Hashable.Class.Hashable Network.AWS.AutoScalingPlans.Types.MetricDimension.MetricDimension
instance Control.DeepSeq.NFData Network.AWS.AutoScalingPlans.Types.MetricDimension.MetricDimension
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.AutoScalingPlans.Types.MetricDimension.MetricDimension


module Network.AWS.AutoScalingPlans.Types.MetricStatistic
newtype MetricStatistic
MetricStatistic' :: Text -> MetricStatistic
[fromMetricStatistic] :: MetricStatistic -> Text
pattern MetricStatistic_Average :: MetricStatistic
pattern MetricStatistic_Maximum :: MetricStatistic
pattern MetricStatistic_Minimum :: MetricStatistic
pattern MetricStatistic_SampleCount :: MetricStatistic
pattern MetricStatistic_Sum :: MetricStatistic
instance Network.AWS.Data.XML.ToXML Network.AWS.AutoScalingPlans.Types.MetricStatistic.MetricStatistic
instance Network.AWS.Data.XML.FromXML Network.AWS.AutoScalingPlans.Types.MetricStatistic.MetricStatistic
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.AutoScalingPlans.Types.MetricStatistic.MetricStatistic
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.AutoScalingPlans.Types.MetricStatistic.MetricStatistic
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.AutoScalingPlans.Types.MetricStatistic.MetricStatistic
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.AutoScalingPlans.Types.MetricStatistic.MetricStatistic
instance Network.AWS.Data.Query.ToQuery Network.AWS.AutoScalingPlans.Types.MetricStatistic.MetricStatistic
instance Network.AWS.Data.Headers.ToHeader Network.AWS.AutoScalingPlans.Types.MetricStatistic.MetricStatistic
instance Network.AWS.Data.Log.ToLog Network.AWS.AutoScalingPlans.Types.MetricStatistic.MetricStatistic
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.AutoScalingPlans.Types.MetricStatistic.MetricStatistic
instance Network.AWS.Data.Text.ToText Network.AWS.AutoScalingPlans.Types.MetricStatistic.MetricStatistic
instance Network.AWS.Data.Text.FromText Network.AWS.AutoScalingPlans.Types.MetricStatistic.MetricStatistic
instance Control.DeepSeq.NFData Network.AWS.AutoScalingPlans.Types.MetricStatistic.MetricStatistic
instance Data.Hashable.Class.Hashable Network.AWS.AutoScalingPlans.Types.MetricStatistic.MetricStatistic
instance GHC.Generics.Generic Network.AWS.AutoScalingPlans.Types.MetricStatistic.MetricStatistic
instance GHC.Classes.Ord Network.AWS.AutoScalingPlans.Types.MetricStatistic.MetricStatistic
instance GHC.Classes.Eq Network.AWS.AutoScalingPlans.Types.MetricStatistic.MetricStatistic
instance GHC.Read.Read Network.AWS.AutoScalingPlans.Types.MetricStatistic.MetricStatistic
instance GHC.Show.Show Network.AWS.AutoScalingPlans.Types.MetricStatistic.MetricStatistic


module Network.AWS.AutoScalingPlans.Types.CustomizedScalingMetricSpecification

-- | Represents a CloudWatch metric of your choosing that can be used for
--   dynamic scaling as part of a target tracking scaling policy.
--   
--   To create your customized scaling metric specification:
--   
--   <ul>
--   <li>Add values for each required parameter from CloudWatch. You can
--   use an existing metric, or a new metric that you create. To use your
--   own metric, you must first publish the metric to CloudWatch. For more
--   information, see <a>Publish Custom Metrics</a> in the <i>Amazon
--   CloudWatch User Guide</i>.</li>
--   <li>Choose a metric that changes proportionally with capacity. The
--   value of the metric should increase or decrease in inverse proportion
--   to the number of capacity units. That is, the value of the metric
--   should decrease when capacity increases.</li>
--   </ul>
--   
--   For information about terminology, available metrics, or how to
--   publish new metrics, see <a>Amazon CloudWatch Concepts</a> in the
--   <i>Amazon CloudWatch User Guide</i>.
--   
--   <i>See:</i> <a>newCustomizedScalingMetricSpecification</a> smart
--   constructor.
data CustomizedScalingMetricSpecification
CustomizedScalingMetricSpecification' :: Maybe Text -> Maybe [MetricDimension] -> Text -> Text -> MetricStatistic -> CustomizedScalingMetricSpecification

-- | The unit of the metric.
[$sel:unit:CustomizedScalingMetricSpecification'] :: CustomizedScalingMetricSpecification -> Maybe Text

-- | The dimensions of the metric.
--   
--   Conditional: If you published your metric with dimensions, you must
--   specify the same dimensions in your customized scaling metric
--   specification.
[$sel:dimensions:CustomizedScalingMetricSpecification'] :: CustomizedScalingMetricSpecification -> Maybe [MetricDimension]

-- | The name of the metric.
[$sel:metricName:CustomizedScalingMetricSpecification'] :: CustomizedScalingMetricSpecification -> Text

-- | The namespace of the metric.
[$sel:namespace:CustomizedScalingMetricSpecification'] :: CustomizedScalingMetricSpecification -> Text

-- | The statistic of the metric.
[$sel:statistic:CustomizedScalingMetricSpecification'] :: CustomizedScalingMetricSpecification -> MetricStatistic

-- | Create a value of <a>CustomizedScalingMetricSpecification</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:unit:CustomizedScalingMetricSpecification'</a>,
--   <a>customizedScalingMetricSpecification_unit</a> - The unit of the
--   metric.
--   
--   <a>$sel:dimensions:CustomizedScalingMetricSpecification'</a>,
--   <a>customizedScalingMetricSpecification_dimensions</a> - The
--   dimensions of the metric.
--   
--   Conditional: If you published your metric with dimensions, you must
--   specify the same dimensions in your customized scaling metric
--   specification.
--   
--   <a>$sel:metricName:CustomizedScalingMetricSpecification'</a>,
--   <a>customizedScalingMetricSpecification_metricName</a> - The name of
--   the metric.
--   
--   <a>$sel:namespace:CustomizedScalingMetricSpecification'</a>,
--   <a>customizedScalingMetricSpecification_namespace</a> - The namespace
--   of the metric.
--   
--   <a>$sel:statistic:CustomizedScalingMetricSpecification'</a>,
--   <a>customizedScalingMetricSpecification_statistic</a> - The statistic
--   of the metric.
newCustomizedScalingMetricSpecification :: Text -> Text -> MetricStatistic -> CustomizedScalingMetricSpecification

-- | The unit of the metric.
customizedScalingMetricSpecification_unit :: Lens' CustomizedScalingMetricSpecification (Maybe Text)

-- | The dimensions of the metric.
--   
--   Conditional: If you published your metric with dimensions, you must
--   specify the same dimensions in your customized scaling metric
--   specification.
customizedScalingMetricSpecification_dimensions :: Lens' CustomizedScalingMetricSpecification (Maybe [MetricDimension])

-- | The name of the metric.
customizedScalingMetricSpecification_metricName :: Lens' CustomizedScalingMetricSpecification Text

-- | The namespace of the metric.
customizedScalingMetricSpecification_namespace :: Lens' CustomizedScalingMetricSpecification Text

-- | The statistic of the metric.
customizedScalingMetricSpecification_statistic :: Lens' CustomizedScalingMetricSpecification MetricStatistic
instance GHC.Generics.Generic Network.AWS.AutoScalingPlans.Types.CustomizedScalingMetricSpecification.CustomizedScalingMetricSpecification
instance GHC.Show.Show Network.AWS.AutoScalingPlans.Types.CustomizedScalingMetricSpecification.CustomizedScalingMetricSpecification
instance GHC.Read.Read Network.AWS.AutoScalingPlans.Types.CustomizedScalingMetricSpecification.CustomizedScalingMetricSpecification
instance GHC.Classes.Eq Network.AWS.AutoScalingPlans.Types.CustomizedScalingMetricSpecification.CustomizedScalingMetricSpecification
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.AutoScalingPlans.Types.CustomizedScalingMetricSpecification.CustomizedScalingMetricSpecification
instance Data.Hashable.Class.Hashable Network.AWS.AutoScalingPlans.Types.CustomizedScalingMetricSpecification.CustomizedScalingMetricSpecification
instance Control.DeepSeq.NFData Network.AWS.AutoScalingPlans.Types.CustomizedScalingMetricSpecification.CustomizedScalingMetricSpecification
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.AutoScalingPlans.Types.CustomizedScalingMetricSpecification.CustomizedScalingMetricSpecification


module Network.AWS.AutoScalingPlans.Types.CustomizedLoadMetricSpecification

-- | Represents a CloudWatch metric of your choosing that can be used for
--   predictive scaling.
--   
--   For predictive scaling to work with a customized load metric
--   specification, AWS Auto Scaling needs access to the <tt>Sum</tt> and
--   <tt>Average</tt> statistics that CloudWatch computes from metric data.
--   
--   When you choose a load metric, make sure that the required
--   <tt>Sum</tt> and <tt>Average</tt> statistics for your metric are
--   available in CloudWatch and that they provide relevant data for
--   predictive scaling. The <tt>Sum</tt> statistic must represent the
--   total load on the resource, and the <tt>Average</tt> statistic must
--   represent the average load per capacity unit of the resource. For
--   example, there is a metric that counts the number of requests
--   processed by your Auto Scaling group. If the <tt>Sum</tt> statistic
--   represents the total request count processed by the group, then the
--   <tt>Average</tt> statistic for the specified metric must represent the
--   average request count processed by each instance of the group.
--   
--   If you publish your own metrics, you can aggregate the data points at
--   a given interval and then publish the aggregated data points to
--   CloudWatch. Before AWS Auto Scaling generates the forecast, it sums up
--   all the metric data points that occurred within each hour to match the
--   granularity period that is used in the forecast (60 minutes).
--   
--   For information about terminology, available metrics, or how to
--   publish new metrics, see <a>Amazon CloudWatch Concepts</a> in the
--   <i>Amazon CloudWatch User Guide</i>.
--   
--   After creating your scaling plan, you can use the AWS Auto Scaling
--   console to visualize forecasts for the specified metric. For more
--   information, see <a>View Scaling Information for a Resource</a> in the
--   <i>AWS Auto Scaling User Guide</i>.
--   
--   <i>See:</i> <a>newCustomizedLoadMetricSpecification</a> smart
--   constructor.
data CustomizedLoadMetricSpecification
CustomizedLoadMetricSpecification' :: Maybe Text -> Maybe [MetricDimension] -> Text -> Text -> MetricStatistic -> CustomizedLoadMetricSpecification

-- | The unit of the metric.
[$sel:unit:CustomizedLoadMetricSpecification'] :: CustomizedLoadMetricSpecification -> Maybe Text

-- | The dimensions of the metric.
--   
--   Conditional: If you published your metric with dimensions, you must
--   specify the same dimensions in your customized load metric
--   specification.
[$sel:dimensions:CustomizedLoadMetricSpecification'] :: CustomizedLoadMetricSpecification -> Maybe [MetricDimension]

-- | The name of the metric.
[$sel:metricName:CustomizedLoadMetricSpecification'] :: CustomizedLoadMetricSpecification -> Text

-- | The namespace of the metric.
[$sel:namespace:CustomizedLoadMetricSpecification'] :: CustomizedLoadMetricSpecification -> Text

-- | The statistic of the metric. The only valid value is <tt>Sum</tt>.
[$sel:statistic:CustomizedLoadMetricSpecification'] :: CustomizedLoadMetricSpecification -> MetricStatistic

-- | Create a value of <a>CustomizedLoadMetricSpecification</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:unit:CustomizedLoadMetricSpecification'</a>,
--   <a>customizedLoadMetricSpecification_unit</a> - The unit of the
--   metric.
--   
--   <a>$sel:dimensions:CustomizedLoadMetricSpecification'</a>,
--   <a>customizedLoadMetricSpecification_dimensions</a> - The dimensions
--   of the metric.
--   
--   Conditional: If you published your metric with dimensions, you must
--   specify the same dimensions in your customized load metric
--   specification.
--   
--   <a>$sel:metricName:CustomizedLoadMetricSpecification'</a>,
--   <a>customizedLoadMetricSpecification_metricName</a> - The name of the
--   metric.
--   
--   <a>$sel:namespace:CustomizedLoadMetricSpecification'</a>,
--   <a>customizedLoadMetricSpecification_namespace</a> - The namespace of
--   the metric.
--   
--   <a>$sel:statistic:CustomizedLoadMetricSpecification'</a>,
--   <a>customizedLoadMetricSpecification_statistic</a> - The statistic of
--   the metric. The only valid value is <tt>Sum</tt>.
newCustomizedLoadMetricSpecification :: Text -> Text -> MetricStatistic -> CustomizedLoadMetricSpecification

-- | The unit of the metric.
customizedLoadMetricSpecification_unit :: Lens' CustomizedLoadMetricSpecification (Maybe Text)

-- | The dimensions of the metric.
--   
--   Conditional: If you published your metric with dimensions, you must
--   specify the same dimensions in your customized load metric
--   specification.
customizedLoadMetricSpecification_dimensions :: Lens' CustomizedLoadMetricSpecification (Maybe [MetricDimension])

-- | The name of the metric.
customizedLoadMetricSpecification_metricName :: Lens' CustomizedLoadMetricSpecification Text

-- | The namespace of the metric.
customizedLoadMetricSpecification_namespace :: Lens' CustomizedLoadMetricSpecification Text

-- | The statistic of the metric. The only valid value is <tt>Sum</tt>.
customizedLoadMetricSpecification_statistic :: Lens' CustomizedLoadMetricSpecification MetricStatistic
instance GHC.Generics.Generic Network.AWS.AutoScalingPlans.Types.CustomizedLoadMetricSpecification.CustomizedLoadMetricSpecification
instance GHC.Show.Show Network.AWS.AutoScalingPlans.Types.CustomizedLoadMetricSpecification.CustomizedLoadMetricSpecification
instance GHC.Read.Read Network.AWS.AutoScalingPlans.Types.CustomizedLoadMetricSpecification.CustomizedLoadMetricSpecification
instance GHC.Classes.Eq Network.AWS.AutoScalingPlans.Types.CustomizedLoadMetricSpecification.CustomizedLoadMetricSpecification
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.AutoScalingPlans.Types.CustomizedLoadMetricSpecification.CustomizedLoadMetricSpecification
instance Data.Hashable.Class.Hashable Network.AWS.AutoScalingPlans.Types.CustomizedLoadMetricSpecification.CustomizedLoadMetricSpecification
instance Control.DeepSeq.NFData Network.AWS.AutoScalingPlans.Types.CustomizedLoadMetricSpecification.CustomizedLoadMetricSpecification
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.AutoScalingPlans.Types.CustomizedLoadMetricSpecification.CustomizedLoadMetricSpecification


module Network.AWS.AutoScalingPlans.Types.PolicyType
newtype PolicyType
PolicyType' :: Text -> PolicyType
[fromPolicyType] :: PolicyType -> Text
pattern PolicyType_TargetTrackingScaling :: PolicyType
instance Network.AWS.Data.XML.ToXML Network.AWS.AutoScalingPlans.Types.PolicyType.PolicyType
instance Network.AWS.Data.XML.FromXML Network.AWS.AutoScalingPlans.Types.PolicyType.PolicyType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.AutoScalingPlans.Types.PolicyType.PolicyType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.AutoScalingPlans.Types.PolicyType.PolicyType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.AutoScalingPlans.Types.PolicyType.PolicyType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.AutoScalingPlans.Types.PolicyType.PolicyType
instance Network.AWS.Data.Query.ToQuery Network.AWS.AutoScalingPlans.Types.PolicyType.PolicyType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.AutoScalingPlans.Types.PolicyType.PolicyType
instance Network.AWS.Data.Log.ToLog Network.AWS.AutoScalingPlans.Types.PolicyType.PolicyType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.AutoScalingPlans.Types.PolicyType.PolicyType
instance Network.AWS.Data.Text.ToText Network.AWS.AutoScalingPlans.Types.PolicyType.PolicyType
instance Network.AWS.Data.Text.FromText Network.AWS.AutoScalingPlans.Types.PolicyType.PolicyType
instance Control.DeepSeq.NFData Network.AWS.AutoScalingPlans.Types.PolicyType.PolicyType
instance Data.Hashable.Class.Hashable Network.AWS.AutoScalingPlans.Types.PolicyType.PolicyType
instance GHC.Generics.Generic Network.AWS.AutoScalingPlans.Types.PolicyType.PolicyType
instance GHC.Classes.Ord Network.AWS.AutoScalingPlans.Types.PolicyType.PolicyType
instance GHC.Classes.Eq Network.AWS.AutoScalingPlans.Types.PolicyType.PolicyType
instance GHC.Read.Read Network.AWS.AutoScalingPlans.Types.PolicyType.PolicyType
instance GHC.Show.Show Network.AWS.AutoScalingPlans.Types.PolicyType.PolicyType


module Network.AWS.AutoScalingPlans.Types.PredefinedLoadMetricSpecification

-- | Represents a predefined metric that can be used for predictive
--   scaling.
--   
--   After creating your scaling plan, you can use the AWS Auto Scaling
--   console to visualize forecasts for the specified metric. For more
--   information, see <a>View Scaling Information for a Resource</a> in the
--   <i>AWS Auto Scaling User Guide</i>.
--   
--   <i>See:</i> <a>newPredefinedLoadMetricSpecification</a> smart
--   constructor.
data PredefinedLoadMetricSpecification
PredefinedLoadMetricSpecification' :: Maybe Text -> LoadMetricType -> PredefinedLoadMetricSpecification

-- | Identifies the resource associated with the metric type. You can't
--   specify a resource label unless the metric type is
--   <tt>ALBTargetGroupRequestCount</tt> and there is a target group for an
--   Application Load Balancer attached to the Auto Scaling group.
--   
--   You create the resource label by appending the final portion of the
--   load balancer ARN and the final portion of the target group ARN into a
--   single value, separated by a forward slash (/). The format is
--   app/&lt;load-balancer-name&gt;/&lt;load-balancer-id&gt;/targetgroup/&lt;target-group-name&gt;/&lt;target-group-id&gt;,
--   where:
--   
--   <ul>
--   <li>app/&lt;load-balancer-name&gt;/&lt;load-balancer-id&gt; is the
--   final portion of the load balancer ARN</li>
--   <li>targetgroup/&lt;target-group-name&gt;/&lt;target-group-id&gt; is
--   the final portion of the target group ARN.</li>
--   </ul>
--   
--   This is an example:
--   app/EC2Co-EcsEl-1TKLTMITMM0EO/f37c06a68c1748aa/targetgroup/EC2Co-Defau-LDNM7Q3ZH1ZN/6d4ea56ca2d6a18d.
--   
--   To find the ARN for an Application Load Balancer, use the
--   <a>DescribeLoadBalancers</a> API operation. To find the ARN for the
--   target group, use the <a>DescribeTargetGroups</a> API operation.
[$sel:resourceLabel:PredefinedLoadMetricSpecification'] :: PredefinedLoadMetricSpecification -> Maybe Text

-- | The metric type.
[$sel:predefinedLoadMetricType:PredefinedLoadMetricSpecification'] :: PredefinedLoadMetricSpecification -> LoadMetricType

-- | Create a value of <a>PredefinedLoadMetricSpecification</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceLabel:PredefinedLoadMetricSpecification'</a>,
--   <a>predefinedLoadMetricSpecification_resourceLabel</a> - Identifies
--   the resource associated with the metric type. You can't specify a
--   resource label unless the metric type is
--   <tt>ALBTargetGroupRequestCount</tt> and there is a target group for an
--   Application Load Balancer attached to the Auto Scaling group.
--   
--   You create the resource label by appending the final portion of the
--   load balancer ARN and the final portion of the target group ARN into a
--   single value, separated by a forward slash (/). The format is
--   app/&lt;load-balancer-name&gt;/&lt;load-balancer-id&gt;/targetgroup/&lt;target-group-name&gt;/&lt;target-group-id&gt;,
--   where:
--   
--   <ul>
--   <li>app/&lt;load-balancer-name&gt;/&lt;load-balancer-id&gt; is the
--   final portion of the load balancer ARN</li>
--   <li>targetgroup/&lt;target-group-name&gt;/&lt;target-group-id&gt; is
--   the final portion of the target group ARN.</li>
--   </ul>
--   
--   This is an example:
--   app/EC2Co-EcsEl-1TKLTMITMM0EO/f37c06a68c1748aa/targetgroup/EC2Co-Defau-LDNM7Q3ZH1ZN/6d4ea56ca2d6a18d.
--   
--   To find the ARN for an Application Load Balancer, use the
--   <a>DescribeLoadBalancers</a> API operation. To find the ARN for the
--   target group, use the <a>DescribeTargetGroups</a> API operation.
--   
--   
--   <a>$sel:predefinedLoadMetricType:PredefinedLoadMetricSpecification'</a>,
--   <a>predefinedLoadMetricSpecification_predefinedLoadMetricType</a> -
--   The metric type.
newPredefinedLoadMetricSpecification :: LoadMetricType -> PredefinedLoadMetricSpecification

-- | Identifies the resource associated with the metric type. You can't
--   specify a resource label unless the metric type is
--   <tt>ALBTargetGroupRequestCount</tt> and there is a target group for an
--   Application Load Balancer attached to the Auto Scaling group.
--   
--   You create the resource label by appending the final portion of the
--   load balancer ARN and the final portion of the target group ARN into a
--   single value, separated by a forward slash (/). The format is
--   app/&lt;load-balancer-name&gt;/&lt;load-balancer-id&gt;/targetgroup/&lt;target-group-name&gt;/&lt;target-group-id&gt;,
--   where:
--   
--   <ul>
--   <li>app/&lt;load-balancer-name&gt;/&lt;load-balancer-id&gt; is the
--   final portion of the load balancer ARN</li>
--   <li>targetgroup/&lt;target-group-name&gt;/&lt;target-group-id&gt; is
--   the final portion of the target group ARN.</li>
--   </ul>
--   
--   This is an example:
--   app/EC2Co-EcsEl-1TKLTMITMM0EO/f37c06a68c1748aa/targetgroup/EC2Co-Defau-LDNM7Q3ZH1ZN/6d4ea56ca2d6a18d.
--   
--   To find the ARN for an Application Load Balancer, use the
--   <a>DescribeLoadBalancers</a> API operation. To find the ARN for the
--   target group, use the <a>DescribeTargetGroups</a> API operation.
predefinedLoadMetricSpecification_resourceLabel :: Lens' PredefinedLoadMetricSpecification (Maybe Text)

-- | The metric type.
predefinedLoadMetricSpecification_predefinedLoadMetricType :: Lens' PredefinedLoadMetricSpecification LoadMetricType
instance GHC.Generics.Generic Network.AWS.AutoScalingPlans.Types.PredefinedLoadMetricSpecification.PredefinedLoadMetricSpecification
instance GHC.Show.Show Network.AWS.AutoScalingPlans.Types.PredefinedLoadMetricSpecification.PredefinedLoadMetricSpecification
instance GHC.Read.Read Network.AWS.AutoScalingPlans.Types.PredefinedLoadMetricSpecification.PredefinedLoadMetricSpecification
instance GHC.Classes.Eq Network.AWS.AutoScalingPlans.Types.PredefinedLoadMetricSpecification.PredefinedLoadMetricSpecification
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.AutoScalingPlans.Types.PredefinedLoadMetricSpecification.PredefinedLoadMetricSpecification
instance Data.Hashable.Class.Hashable Network.AWS.AutoScalingPlans.Types.PredefinedLoadMetricSpecification.PredefinedLoadMetricSpecification
instance Control.DeepSeq.NFData Network.AWS.AutoScalingPlans.Types.PredefinedLoadMetricSpecification.PredefinedLoadMetricSpecification
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.AutoScalingPlans.Types.PredefinedLoadMetricSpecification.PredefinedLoadMetricSpecification


module Network.AWS.AutoScalingPlans.Types.PredictiveScalingMaxCapacityBehavior
newtype PredictiveScalingMaxCapacityBehavior
PredictiveScalingMaxCapacityBehavior' :: Text -> PredictiveScalingMaxCapacityBehavior
[fromPredictiveScalingMaxCapacityBehavior] :: PredictiveScalingMaxCapacityBehavior -> Text
pattern PredictiveScalingMaxCapacityBehavior_SetForecastCapacityToMaxCapacity :: PredictiveScalingMaxCapacityBehavior
pattern PredictiveScalingMaxCapacityBehavior_SetMaxCapacityAboveForecastCapacity :: PredictiveScalingMaxCapacityBehavior
pattern PredictiveScalingMaxCapacityBehavior_SetMaxCapacityToForecastCapacity :: PredictiveScalingMaxCapacityBehavior
instance Network.AWS.Data.XML.ToXML Network.AWS.AutoScalingPlans.Types.PredictiveScalingMaxCapacityBehavior.PredictiveScalingMaxCapacityBehavior
instance Network.AWS.Data.XML.FromXML Network.AWS.AutoScalingPlans.Types.PredictiveScalingMaxCapacityBehavior.PredictiveScalingMaxCapacityBehavior
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.AutoScalingPlans.Types.PredictiveScalingMaxCapacityBehavior.PredictiveScalingMaxCapacityBehavior
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.AutoScalingPlans.Types.PredictiveScalingMaxCapacityBehavior.PredictiveScalingMaxCapacityBehavior
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.AutoScalingPlans.Types.PredictiveScalingMaxCapacityBehavior.PredictiveScalingMaxCapacityBehavior
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.AutoScalingPlans.Types.PredictiveScalingMaxCapacityBehavior.PredictiveScalingMaxCapacityBehavior
instance Network.AWS.Data.Query.ToQuery Network.AWS.AutoScalingPlans.Types.PredictiveScalingMaxCapacityBehavior.PredictiveScalingMaxCapacityBehavior
instance Network.AWS.Data.Headers.ToHeader Network.AWS.AutoScalingPlans.Types.PredictiveScalingMaxCapacityBehavior.PredictiveScalingMaxCapacityBehavior
instance Network.AWS.Data.Log.ToLog Network.AWS.AutoScalingPlans.Types.PredictiveScalingMaxCapacityBehavior.PredictiveScalingMaxCapacityBehavior
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.AutoScalingPlans.Types.PredictiveScalingMaxCapacityBehavior.PredictiveScalingMaxCapacityBehavior
instance Network.AWS.Data.Text.ToText Network.AWS.AutoScalingPlans.Types.PredictiveScalingMaxCapacityBehavior.PredictiveScalingMaxCapacityBehavior
instance Network.AWS.Data.Text.FromText Network.AWS.AutoScalingPlans.Types.PredictiveScalingMaxCapacityBehavior.PredictiveScalingMaxCapacityBehavior
instance Control.DeepSeq.NFData Network.AWS.AutoScalingPlans.Types.PredictiveScalingMaxCapacityBehavior.PredictiveScalingMaxCapacityBehavior
instance Data.Hashable.Class.Hashable Network.AWS.AutoScalingPlans.Types.PredictiveScalingMaxCapacityBehavior.PredictiveScalingMaxCapacityBehavior
instance GHC.Generics.Generic Network.AWS.AutoScalingPlans.Types.PredictiveScalingMaxCapacityBehavior.PredictiveScalingMaxCapacityBehavior
instance GHC.Classes.Ord Network.AWS.AutoScalingPlans.Types.PredictiveScalingMaxCapacityBehavior.PredictiveScalingMaxCapacityBehavior
instance GHC.Classes.Eq Network.AWS.AutoScalingPlans.Types.PredictiveScalingMaxCapacityBehavior.PredictiveScalingMaxCapacityBehavior
instance GHC.Read.Read Network.AWS.AutoScalingPlans.Types.PredictiveScalingMaxCapacityBehavior.PredictiveScalingMaxCapacityBehavior
instance GHC.Show.Show Network.AWS.AutoScalingPlans.Types.PredictiveScalingMaxCapacityBehavior.PredictiveScalingMaxCapacityBehavior


module Network.AWS.AutoScalingPlans.Types.PredictiveScalingMode
newtype PredictiveScalingMode
PredictiveScalingMode' :: Text -> PredictiveScalingMode
[fromPredictiveScalingMode] :: PredictiveScalingMode -> Text
pattern PredictiveScalingMode_ForecastAndScale :: PredictiveScalingMode
pattern PredictiveScalingMode_ForecastOnly :: PredictiveScalingMode
instance Network.AWS.Data.XML.ToXML Network.AWS.AutoScalingPlans.Types.PredictiveScalingMode.PredictiveScalingMode
instance Network.AWS.Data.XML.FromXML Network.AWS.AutoScalingPlans.Types.PredictiveScalingMode.PredictiveScalingMode
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.AutoScalingPlans.Types.PredictiveScalingMode.PredictiveScalingMode
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.AutoScalingPlans.Types.PredictiveScalingMode.PredictiveScalingMode
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.AutoScalingPlans.Types.PredictiveScalingMode.PredictiveScalingMode
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.AutoScalingPlans.Types.PredictiveScalingMode.PredictiveScalingMode
instance Network.AWS.Data.Query.ToQuery Network.AWS.AutoScalingPlans.Types.PredictiveScalingMode.PredictiveScalingMode
instance Network.AWS.Data.Headers.ToHeader Network.AWS.AutoScalingPlans.Types.PredictiveScalingMode.PredictiveScalingMode
instance Network.AWS.Data.Log.ToLog Network.AWS.AutoScalingPlans.Types.PredictiveScalingMode.PredictiveScalingMode
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.AutoScalingPlans.Types.PredictiveScalingMode.PredictiveScalingMode
instance Network.AWS.Data.Text.ToText Network.AWS.AutoScalingPlans.Types.PredictiveScalingMode.PredictiveScalingMode
instance Network.AWS.Data.Text.FromText Network.AWS.AutoScalingPlans.Types.PredictiveScalingMode.PredictiveScalingMode
instance Control.DeepSeq.NFData Network.AWS.AutoScalingPlans.Types.PredictiveScalingMode.PredictiveScalingMode
instance Data.Hashable.Class.Hashable Network.AWS.AutoScalingPlans.Types.PredictiveScalingMode.PredictiveScalingMode
instance GHC.Generics.Generic Network.AWS.AutoScalingPlans.Types.PredictiveScalingMode.PredictiveScalingMode
instance GHC.Classes.Ord Network.AWS.AutoScalingPlans.Types.PredictiveScalingMode.PredictiveScalingMode
instance GHC.Classes.Eq Network.AWS.AutoScalingPlans.Types.PredictiveScalingMode.PredictiveScalingMode
instance GHC.Read.Read Network.AWS.AutoScalingPlans.Types.PredictiveScalingMode.PredictiveScalingMode
instance GHC.Show.Show Network.AWS.AutoScalingPlans.Types.PredictiveScalingMode.PredictiveScalingMode


module Network.AWS.AutoScalingPlans.Types.ScalableDimension
newtype ScalableDimension
ScalableDimension' :: Text -> ScalableDimension
[fromScalableDimension] :: ScalableDimension -> Text
pattern ScalableDimension_Autoscaling_autoScalingGroup_DesiredCapacity :: ScalableDimension
pattern ScalableDimension_Dynamodb_index_ReadCapacityUnits :: ScalableDimension
pattern ScalableDimension_Dynamodb_index_WriteCapacityUnits :: ScalableDimension
pattern ScalableDimension_Dynamodb_table_ReadCapacityUnits :: ScalableDimension
pattern ScalableDimension_Dynamodb_table_WriteCapacityUnits :: ScalableDimension
pattern ScalableDimension_Ec2_spot_fleet_request_TargetCapacity :: ScalableDimension
pattern ScalableDimension_Ecs_service_DesiredCount :: ScalableDimension
pattern ScalableDimension_Rds_cluster_ReadReplicaCount :: ScalableDimension
instance Network.AWS.Data.XML.ToXML Network.AWS.AutoScalingPlans.Types.ScalableDimension.ScalableDimension
instance Network.AWS.Data.XML.FromXML Network.AWS.AutoScalingPlans.Types.ScalableDimension.ScalableDimension
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.AutoScalingPlans.Types.ScalableDimension.ScalableDimension
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.AutoScalingPlans.Types.ScalableDimension.ScalableDimension
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.AutoScalingPlans.Types.ScalableDimension.ScalableDimension
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.AutoScalingPlans.Types.ScalableDimension.ScalableDimension
instance Network.AWS.Data.Query.ToQuery Network.AWS.AutoScalingPlans.Types.ScalableDimension.ScalableDimension
instance Network.AWS.Data.Headers.ToHeader Network.AWS.AutoScalingPlans.Types.ScalableDimension.ScalableDimension
instance Network.AWS.Data.Log.ToLog Network.AWS.AutoScalingPlans.Types.ScalableDimension.ScalableDimension
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.AutoScalingPlans.Types.ScalableDimension.ScalableDimension
instance Network.AWS.Data.Text.ToText Network.AWS.AutoScalingPlans.Types.ScalableDimension.ScalableDimension
instance Network.AWS.Data.Text.FromText Network.AWS.AutoScalingPlans.Types.ScalableDimension.ScalableDimension
instance Control.DeepSeq.NFData Network.AWS.AutoScalingPlans.Types.ScalableDimension.ScalableDimension
instance Data.Hashable.Class.Hashable Network.AWS.AutoScalingPlans.Types.ScalableDimension.ScalableDimension
instance GHC.Generics.Generic Network.AWS.AutoScalingPlans.Types.ScalableDimension.ScalableDimension
instance GHC.Classes.Ord Network.AWS.AutoScalingPlans.Types.ScalableDimension.ScalableDimension
instance GHC.Classes.Eq Network.AWS.AutoScalingPlans.Types.ScalableDimension.ScalableDimension
instance GHC.Read.Read Network.AWS.AutoScalingPlans.Types.ScalableDimension.ScalableDimension
instance GHC.Show.Show Network.AWS.AutoScalingPlans.Types.ScalableDimension.ScalableDimension


module Network.AWS.AutoScalingPlans.Types.ScalingMetricType
newtype ScalingMetricType
ScalingMetricType' :: Text -> ScalingMetricType
[fromScalingMetricType] :: ScalingMetricType -> Text
pattern ScalingMetricType_ALBRequestCountPerTarget :: ScalingMetricType
pattern ScalingMetricType_ASGAverageCPUUtilization :: ScalingMetricType
pattern ScalingMetricType_ASGAverageNetworkIn :: ScalingMetricType
pattern ScalingMetricType_ASGAverageNetworkOut :: ScalingMetricType
pattern ScalingMetricType_DynamoDBReadCapacityUtilization :: ScalingMetricType
pattern ScalingMetricType_DynamoDBWriteCapacityUtilization :: ScalingMetricType
pattern ScalingMetricType_EC2SpotFleetRequestAverageCPUUtilization :: ScalingMetricType
pattern ScalingMetricType_EC2SpotFleetRequestAverageNetworkIn :: ScalingMetricType
pattern ScalingMetricType_EC2SpotFleetRequestAverageNetworkOut :: ScalingMetricType
pattern ScalingMetricType_ECSServiceAverageCPUUtilization :: ScalingMetricType
pattern ScalingMetricType_ECSServiceAverageMemoryUtilization :: ScalingMetricType
pattern ScalingMetricType_RDSReaderAverageCPUUtilization :: ScalingMetricType
pattern ScalingMetricType_RDSReaderAverageDatabaseConnections :: ScalingMetricType
instance Network.AWS.Data.XML.ToXML Network.AWS.AutoScalingPlans.Types.ScalingMetricType.ScalingMetricType
instance Network.AWS.Data.XML.FromXML Network.AWS.AutoScalingPlans.Types.ScalingMetricType.ScalingMetricType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.AutoScalingPlans.Types.ScalingMetricType.ScalingMetricType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.AutoScalingPlans.Types.ScalingMetricType.ScalingMetricType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.AutoScalingPlans.Types.ScalingMetricType.ScalingMetricType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.AutoScalingPlans.Types.ScalingMetricType.ScalingMetricType
instance Network.AWS.Data.Query.ToQuery Network.AWS.AutoScalingPlans.Types.ScalingMetricType.ScalingMetricType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.AutoScalingPlans.Types.ScalingMetricType.ScalingMetricType
instance Network.AWS.Data.Log.ToLog Network.AWS.AutoScalingPlans.Types.ScalingMetricType.ScalingMetricType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.AutoScalingPlans.Types.ScalingMetricType.ScalingMetricType
instance Network.AWS.Data.Text.ToText Network.AWS.AutoScalingPlans.Types.ScalingMetricType.ScalingMetricType
instance Network.AWS.Data.Text.FromText Network.AWS.AutoScalingPlans.Types.ScalingMetricType.ScalingMetricType
instance Control.DeepSeq.NFData Network.AWS.AutoScalingPlans.Types.ScalingMetricType.ScalingMetricType
instance Data.Hashable.Class.Hashable Network.AWS.AutoScalingPlans.Types.ScalingMetricType.ScalingMetricType
instance GHC.Generics.Generic Network.AWS.AutoScalingPlans.Types.ScalingMetricType.ScalingMetricType
instance GHC.Classes.Ord Network.AWS.AutoScalingPlans.Types.ScalingMetricType.ScalingMetricType
instance GHC.Classes.Eq Network.AWS.AutoScalingPlans.Types.ScalingMetricType.ScalingMetricType
instance GHC.Read.Read Network.AWS.AutoScalingPlans.Types.ScalingMetricType.ScalingMetricType
instance GHC.Show.Show Network.AWS.AutoScalingPlans.Types.ScalingMetricType.ScalingMetricType


module Network.AWS.AutoScalingPlans.Types.PredefinedScalingMetricSpecification

-- | Represents a predefined metric that can be used for dynamic scaling as
--   part of a target tracking scaling policy.
--   
--   <i>See:</i> <a>newPredefinedScalingMetricSpecification</a> smart
--   constructor.
data PredefinedScalingMetricSpecification
PredefinedScalingMetricSpecification' :: Maybe Text -> ScalingMetricType -> PredefinedScalingMetricSpecification

-- | Identifies the resource associated with the metric type. You can't
--   specify a resource label unless the metric type is
--   <tt>ALBRequestCountPerTarget</tt> and there is a target group for an
--   Application Load Balancer attached to the Auto Scaling group, Spot
--   Fleet request, or ECS service.
--   
--   You create the resource label by appending the final portion of the
--   load balancer ARN and the final portion of the target group ARN into a
--   single value, separated by a forward slash (/). The format is
--   app/&lt;load-balancer-name&gt;/&lt;load-balancer-id&gt;/targetgroup/&lt;target-group-name&gt;/&lt;target-group-id&gt;,
--   where:
--   
--   <ul>
--   <li>app/&lt;load-balancer-name&gt;/&lt;load-balancer-id&gt; is the
--   final portion of the load balancer ARN</li>
--   <li>targetgroup/&lt;target-group-name&gt;/&lt;target-group-id&gt; is
--   the final portion of the target group ARN.</li>
--   </ul>
--   
--   This is an example:
--   app/EC2Co-EcsEl-1TKLTMITMM0EO/f37c06a68c1748aa/targetgroup/EC2Co-Defau-LDNM7Q3ZH1ZN/6d4ea56ca2d6a18d.
--   
--   To find the ARN for an Application Load Balancer, use the
--   <a>DescribeLoadBalancers</a> API operation. To find the ARN for the
--   target group, use the <a>DescribeTargetGroups</a> API operation.
[$sel:resourceLabel:PredefinedScalingMetricSpecification'] :: PredefinedScalingMetricSpecification -> Maybe Text

-- | The metric type. The <tt>ALBRequestCountPerTarget</tt> metric type
--   applies only to Auto Scaling groups, Spot Fleet requests, and ECS
--   services.
[$sel:predefinedScalingMetricType:PredefinedScalingMetricSpecification'] :: PredefinedScalingMetricSpecification -> ScalingMetricType

-- | Create a value of <a>PredefinedScalingMetricSpecification</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceLabel:PredefinedScalingMetricSpecification'</a>,
--   <a>predefinedScalingMetricSpecification_resourceLabel</a> - Identifies
--   the resource associated with the metric type. You can't specify a
--   resource label unless the metric type is
--   <tt>ALBRequestCountPerTarget</tt> and there is a target group for an
--   Application Load Balancer attached to the Auto Scaling group, Spot
--   Fleet request, or ECS service.
--   
--   You create the resource label by appending the final portion of the
--   load balancer ARN and the final portion of the target group ARN into a
--   single value, separated by a forward slash (/). The format is
--   app/&lt;load-balancer-name&gt;/&lt;load-balancer-id&gt;/targetgroup/&lt;target-group-name&gt;/&lt;target-group-id&gt;,
--   where:
--   
--   <ul>
--   <li>app/&lt;load-balancer-name&gt;/&lt;load-balancer-id&gt; is the
--   final portion of the load balancer ARN</li>
--   <li>targetgroup/&lt;target-group-name&gt;/&lt;target-group-id&gt; is
--   the final portion of the target group ARN.</li>
--   </ul>
--   
--   This is an example:
--   app/EC2Co-EcsEl-1TKLTMITMM0EO/f37c06a68c1748aa/targetgroup/EC2Co-Defau-LDNM7Q3ZH1ZN/6d4ea56ca2d6a18d.
--   
--   To find the ARN for an Application Load Balancer, use the
--   <a>DescribeLoadBalancers</a> API operation. To find the ARN for the
--   target group, use the <a>DescribeTargetGroups</a> API operation.
--   
--   
--   <a>$sel:predefinedScalingMetricType:PredefinedScalingMetricSpecification'</a>,
--   <a>predefinedScalingMetricSpecification_predefinedScalingMetricType</a>
--   - The metric type. The <tt>ALBRequestCountPerTarget</tt> metric type
--   applies only to Auto Scaling groups, Spot Fleet requests, and ECS
--   services.
newPredefinedScalingMetricSpecification :: ScalingMetricType -> PredefinedScalingMetricSpecification

-- | Identifies the resource associated with the metric type. You can't
--   specify a resource label unless the metric type is
--   <tt>ALBRequestCountPerTarget</tt> and there is a target group for an
--   Application Load Balancer attached to the Auto Scaling group, Spot
--   Fleet request, or ECS service.
--   
--   You create the resource label by appending the final portion of the
--   load balancer ARN and the final portion of the target group ARN into a
--   single value, separated by a forward slash (/). The format is
--   app/&lt;load-balancer-name&gt;/&lt;load-balancer-id&gt;/targetgroup/&lt;target-group-name&gt;/&lt;target-group-id&gt;,
--   where:
--   
--   <ul>
--   <li>app/&lt;load-balancer-name&gt;/&lt;load-balancer-id&gt; is the
--   final portion of the load balancer ARN</li>
--   <li>targetgroup/&lt;target-group-name&gt;/&lt;target-group-id&gt; is
--   the final portion of the target group ARN.</li>
--   </ul>
--   
--   This is an example:
--   app/EC2Co-EcsEl-1TKLTMITMM0EO/f37c06a68c1748aa/targetgroup/EC2Co-Defau-LDNM7Q3ZH1ZN/6d4ea56ca2d6a18d.
--   
--   To find the ARN for an Application Load Balancer, use the
--   <a>DescribeLoadBalancers</a> API operation. To find the ARN for the
--   target group, use the <a>DescribeTargetGroups</a> API operation.
predefinedScalingMetricSpecification_resourceLabel :: Lens' PredefinedScalingMetricSpecification (Maybe Text)

-- | The metric type. The <tt>ALBRequestCountPerTarget</tt> metric type
--   applies only to Auto Scaling groups, Spot Fleet requests, and ECS
--   services.
predefinedScalingMetricSpecification_predefinedScalingMetricType :: Lens' PredefinedScalingMetricSpecification ScalingMetricType
instance GHC.Generics.Generic Network.AWS.AutoScalingPlans.Types.PredefinedScalingMetricSpecification.PredefinedScalingMetricSpecification
instance GHC.Show.Show Network.AWS.AutoScalingPlans.Types.PredefinedScalingMetricSpecification.PredefinedScalingMetricSpecification
instance GHC.Read.Read Network.AWS.AutoScalingPlans.Types.PredefinedScalingMetricSpecification.PredefinedScalingMetricSpecification
instance GHC.Classes.Eq Network.AWS.AutoScalingPlans.Types.PredefinedScalingMetricSpecification.PredefinedScalingMetricSpecification
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.AutoScalingPlans.Types.PredefinedScalingMetricSpecification.PredefinedScalingMetricSpecification
instance Data.Hashable.Class.Hashable Network.AWS.AutoScalingPlans.Types.PredefinedScalingMetricSpecification.PredefinedScalingMetricSpecification
instance Control.DeepSeq.NFData Network.AWS.AutoScalingPlans.Types.PredefinedScalingMetricSpecification.PredefinedScalingMetricSpecification
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.AutoScalingPlans.Types.PredefinedScalingMetricSpecification.PredefinedScalingMetricSpecification


module Network.AWS.AutoScalingPlans.Types.ScalingPlanStatusCode
newtype ScalingPlanStatusCode
ScalingPlanStatusCode' :: Text -> ScalingPlanStatusCode
[fromScalingPlanStatusCode] :: ScalingPlanStatusCode -> Text
pattern ScalingPlanStatusCode_Active :: ScalingPlanStatusCode
pattern ScalingPlanStatusCode_ActiveWithProblems :: ScalingPlanStatusCode
pattern ScalingPlanStatusCode_CreationFailed :: ScalingPlanStatusCode
pattern ScalingPlanStatusCode_CreationInProgress :: ScalingPlanStatusCode
pattern ScalingPlanStatusCode_DeletionFailed :: ScalingPlanStatusCode
pattern ScalingPlanStatusCode_DeletionInProgress :: ScalingPlanStatusCode
pattern ScalingPlanStatusCode_UpdateFailed :: ScalingPlanStatusCode
pattern ScalingPlanStatusCode_UpdateInProgress :: ScalingPlanStatusCode
instance Network.AWS.Data.XML.ToXML Network.AWS.AutoScalingPlans.Types.ScalingPlanStatusCode.ScalingPlanStatusCode
instance Network.AWS.Data.XML.FromXML Network.AWS.AutoScalingPlans.Types.ScalingPlanStatusCode.ScalingPlanStatusCode
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.AutoScalingPlans.Types.ScalingPlanStatusCode.ScalingPlanStatusCode
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.AutoScalingPlans.Types.ScalingPlanStatusCode.ScalingPlanStatusCode
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.AutoScalingPlans.Types.ScalingPlanStatusCode.ScalingPlanStatusCode
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.AutoScalingPlans.Types.ScalingPlanStatusCode.ScalingPlanStatusCode
instance Network.AWS.Data.Query.ToQuery Network.AWS.AutoScalingPlans.Types.ScalingPlanStatusCode.ScalingPlanStatusCode
instance Network.AWS.Data.Headers.ToHeader Network.AWS.AutoScalingPlans.Types.ScalingPlanStatusCode.ScalingPlanStatusCode
instance Network.AWS.Data.Log.ToLog Network.AWS.AutoScalingPlans.Types.ScalingPlanStatusCode.ScalingPlanStatusCode
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.AutoScalingPlans.Types.ScalingPlanStatusCode.ScalingPlanStatusCode
instance Network.AWS.Data.Text.ToText Network.AWS.AutoScalingPlans.Types.ScalingPlanStatusCode.ScalingPlanStatusCode
instance Network.AWS.Data.Text.FromText Network.AWS.AutoScalingPlans.Types.ScalingPlanStatusCode.ScalingPlanStatusCode
instance Control.DeepSeq.NFData Network.AWS.AutoScalingPlans.Types.ScalingPlanStatusCode.ScalingPlanStatusCode
instance Data.Hashable.Class.Hashable Network.AWS.AutoScalingPlans.Types.ScalingPlanStatusCode.ScalingPlanStatusCode
instance GHC.Generics.Generic Network.AWS.AutoScalingPlans.Types.ScalingPlanStatusCode.ScalingPlanStatusCode
instance GHC.Classes.Ord Network.AWS.AutoScalingPlans.Types.ScalingPlanStatusCode.ScalingPlanStatusCode
instance GHC.Classes.Eq Network.AWS.AutoScalingPlans.Types.ScalingPlanStatusCode.ScalingPlanStatusCode
instance GHC.Read.Read Network.AWS.AutoScalingPlans.Types.ScalingPlanStatusCode.ScalingPlanStatusCode
instance GHC.Show.Show Network.AWS.AutoScalingPlans.Types.ScalingPlanStatusCode.ScalingPlanStatusCode


module Network.AWS.AutoScalingPlans.Types.ScalingPolicyUpdateBehavior
newtype ScalingPolicyUpdateBehavior
ScalingPolicyUpdateBehavior' :: Text -> ScalingPolicyUpdateBehavior
[fromScalingPolicyUpdateBehavior] :: ScalingPolicyUpdateBehavior -> Text
pattern ScalingPolicyUpdateBehavior_KeepExternalPolicies :: ScalingPolicyUpdateBehavior
pattern ScalingPolicyUpdateBehavior_ReplaceExternalPolicies :: ScalingPolicyUpdateBehavior
instance Network.AWS.Data.XML.ToXML Network.AWS.AutoScalingPlans.Types.ScalingPolicyUpdateBehavior.ScalingPolicyUpdateBehavior
instance Network.AWS.Data.XML.FromXML Network.AWS.AutoScalingPlans.Types.ScalingPolicyUpdateBehavior.ScalingPolicyUpdateBehavior
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.AutoScalingPlans.Types.ScalingPolicyUpdateBehavior.ScalingPolicyUpdateBehavior
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.AutoScalingPlans.Types.ScalingPolicyUpdateBehavior.ScalingPolicyUpdateBehavior
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.AutoScalingPlans.Types.ScalingPolicyUpdateBehavior.ScalingPolicyUpdateBehavior
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.AutoScalingPlans.Types.ScalingPolicyUpdateBehavior.ScalingPolicyUpdateBehavior
instance Network.AWS.Data.Query.ToQuery Network.AWS.AutoScalingPlans.Types.ScalingPolicyUpdateBehavior.ScalingPolicyUpdateBehavior
instance Network.AWS.Data.Headers.ToHeader Network.AWS.AutoScalingPlans.Types.ScalingPolicyUpdateBehavior.ScalingPolicyUpdateBehavior
instance Network.AWS.Data.Log.ToLog Network.AWS.AutoScalingPlans.Types.ScalingPolicyUpdateBehavior.ScalingPolicyUpdateBehavior
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.AutoScalingPlans.Types.ScalingPolicyUpdateBehavior.ScalingPolicyUpdateBehavior
instance Network.AWS.Data.Text.ToText Network.AWS.AutoScalingPlans.Types.ScalingPolicyUpdateBehavior.ScalingPolicyUpdateBehavior
instance Network.AWS.Data.Text.FromText Network.AWS.AutoScalingPlans.Types.ScalingPolicyUpdateBehavior.ScalingPolicyUpdateBehavior
instance Control.DeepSeq.NFData Network.AWS.AutoScalingPlans.Types.ScalingPolicyUpdateBehavior.ScalingPolicyUpdateBehavior
instance Data.Hashable.Class.Hashable Network.AWS.AutoScalingPlans.Types.ScalingPolicyUpdateBehavior.ScalingPolicyUpdateBehavior
instance GHC.Generics.Generic Network.AWS.AutoScalingPlans.Types.ScalingPolicyUpdateBehavior.ScalingPolicyUpdateBehavior
instance GHC.Classes.Ord Network.AWS.AutoScalingPlans.Types.ScalingPolicyUpdateBehavior.ScalingPolicyUpdateBehavior
instance GHC.Classes.Eq Network.AWS.AutoScalingPlans.Types.ScalingPolicyUpdateBehavior.ScalingPolicyUpdateBehavior
instance GHC.Read.Read Network.AWS.AutoScalingPlans.Types.ScalingPolicyUpdateBehavior.ScalingPolicyUpdateBehavior
instance GHC.Show.Show Network.AWS.AutoScalingPlans.Types.ScalingPolicyUpdateBehavior.ScalingPolicyUpdateBehavior


module Network.AWS.AutoScalingPlans.Types.ScalingStatusCode
newtype ScalingStatusCode
ScalingStatusCode' :: Text -> ScalingStatusCode
[fromScalingStatusCode] :: ScalingStatusCode -> Text
pattern ScalingStatusCode_Active :: ScalingStatusCode
pattern ScalingStatusCode_Inactive :: ScalingStatusCode
pattern ScalingStatusCode_PartiallyActive :: ScalingStatusCode
instance Network.AWS.Data.XML.ToXML Network.AWS.AutoScalingPlans.Types.ScalingStatusCode.ScalingStatusCode
instance Network.AWS.Data.XML.FromXML Network.AWS.AutoScalingPlans.Types.ScalingStatusCode.ScalingStatusCode
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.AutoScalingPlans.Types.ScalingStatusCode.ScalingStatusCode
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.AutoScalingPlans.Types.ScalingStatusCode.ScalingStatusCode
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.AutoScalingPlans.Types.ScalingStatusCode.ScalingStatusCode
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.AutoScalingPlans.Types.ScalingStatusCode.ScalingStatusCode
instance Network.AWS.Data.Query.ToQuery Network.AWS.AutoScalingPlans.Types.ScalingStatusCode.ScalingStatusCode
instance Network.AWS.Data.Headers.ToHeader Network.AWS.AutoScalingPlans.Types.ScalingStatusCode.ScalingStatusCode
instance Network.AWS.Data.Log.ToLog Network.AWS.AutoScalingPlans.Types.ScalingStatusCode.ScalingStatusCode
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.AutoScalingPlans.Types.ScalingStatusCode.ScalingStatusCode
instance Network.AWS.Data.Text.ToText Network.AWS.AutoScalingPlans.Types.ScalingStatusCode.ScalingStatusCode
instance Network.AWS.Data.Text.FromText Network.AWS.AutoScalingPlans.Types.ScalingStatusCode.ScalingStatusCode
instance Control.DeepSeq.NFData Network.AWS.AutoScalingPlans.Types.ScalingStatusCode.ScalingStatusCode
instance Data.Hashable.Class.Hashable Network.AWS.AutoScalingPlans.Types.ScalingStatusCode.ScalingStatusCode
instance GHC.Generics.Generic Network.AWS.AutoScalingPlans.Types.ScalingStatusCode.ScalingStatusCode
instance GHC.Classes.Ord Network.AWS.AutoScalingPlans.Types.ScalingStatusCode.ScalingStatusCode
instance GHC.Classes.Eq Network.AWS.AutoScalingPlans.Types.ScalingStatusCode.ScalingStatusCode
instance GHC.Read.Read Network.AWS.AutoScalingPlans.Types.ScalingStatusCode.ScalingStatusCode
instance GHC.Show.Show Network.AWS.AutoScalingPlans.Types.ScalingStatusCode.ScalingStatusCode


module Network.AWS.AutoScalingPlans.Types.ServiceNamespace
newtype ServiceNamespace
ServiceNamespace' :: Text -> ServiceNamespace
[fromServiceNamespace] :: ServiceNamespace -> Text
pattern ServiceNamespace_Autoscaling :: ServiceNamespace
pattern ServiceNamespace_Dynamodb :: ServiceNamespace
pattern ServiceNamespace_Ec2 :: ServiceNamespace
pattern ServiceNamespace_Ecs :: ServiceNamespace
pattern ServiceNamespace_Rds :: ServiceNamespace
instance Network.AWS.Data.XML.ToXML Network.AWS.AutoScalingPlans.Types.ServiceNamespace.ServiceNamespace
instance Network.AWS.Data.XML.FromXML Network.AWS.AutoScalingPlans.Types.ServiceNamespace.ServiceNamespace
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.AutoScalingPlans.Types.ServiceNamespace.ServiceNamespace
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.AutoScalingPlans.Types.ServiceNamespace.ServiceNamespace
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.AutoScalingPlans.Types.ServiceNamespace.ServiceNamespace
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.AutoScalingPlans.Types.ServiceNamespace.ServiceNamespace
instance Network.AWS.Data.Query.ToQuery Network.AWS.AutoScalingPlans.Types.ServiceNamespace.ServiceNamespace
instance Network.AWS.Data.Headers.ToHeader Network.AWS.AutoScalingPlans.Types.ServiceNamespace.ServiceNamespace
instance Network.AWS.Data.Log.ToLog Network.AWS.AutoScalingPlans.Types.ServiceNamespace.ServiceNamespace
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.AutoScalingPlans.Types.ServiceNamespace.ServiceNamespace
instance Network.AWS.Data.Text.ToText Network.AWS.AutoScalingPlans.Types.ServiceNamespace.ServiceNamespace
instance Network.AWS.Data.Text.FromText Network.AWS.AutoScalingPlans.Types.ServiceNamespace.ServiceNamespace
instance Control.DeepSeq.NFData Network.AWS.AutoScalingPlans.Types.ServiceNamespace.ServiceNamespace
instance Data.Hashable.Class.Hashable Network.AWS.AutoScalingPlans.Types.ServiceNamespace.ServiceNamespace
instance GHC.Generics.Generic Network.AWS.AutoScalingPlans.Types.ServiceNamespace.ServiceNamespace
instance GHC.Classes.Ord Network.AWS.AutoScalingPlans.Types.ServiceNamespace.ServiceNamespace
instance GHC.Classes.Eq Network.AWS.AutoScalingPlans.Types.ServiceNamespace.ServiceNamespace
instance GHC.Read.Read Network.AWS.AutoScalingPlans.Types.ServiceNamespace.ServiceNamespace
instance GHC.Show.Show Network.AWS.AutoScalingPlans.Types.ServiceNamespace.ServiceNamespace


module Network.AWS.AutoScalingPlans.Types.TagFilter

-- | Represents a tag.
--   
--   <i>See:</i> <a>newTagFilter</a> smart constructor.
data TagFilter
TagFilter' :: Maybe Text -> Maybe [Text] -> TagFilter

-- | The tag key.
[$sel:key:TagFilter'] :: TagFilter -> Maybe Text

-- | The tag values (0 to 20).
[$sel:values:TagFilter'] :: TagFilter -> Maybe [Text]

-- | Create a value of <a>TagFilter</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:TagFilter'</a>, <a>tagFilter_key</a> - The tag key.
--   
--   <a>$sel:values:TagFilter'</a>, <a>tagFilter_values</a> - The tag
--   values (0 to 20).
newTagFilter :: TagFilter

-- | The tag key.
tagFilter_key :: Lens' TagFilter (Maybe Text)

-- | The tag values (0 to 20).
tagFilter_values :: Lens' TagFilter (Maybe [Text])
instance GHC.Generics.Generic Network.AWS.AutoScalingPlans.Types.TagFilter.TagFilter
instance GHC.Show.Show Network.AWS.AutoScalingPlans.Types.TagFilter.TagFilter
instance GHC.Read.Read Network.AWS.AutoScalingPlans.Types.TagFilter.TagFilter
instance GHC.Classes.Eq Network.AWS.AutoScalingPlans.Types.TagFilter.TagFilter
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.AutoScalingPlans.Types.TagFilter.TagFilter
instance Data.Hashable.Class.Hashable Network.AWS.AutoScalingPlans.Types.TagFilter.TagFilter
instance Control.DeepSeq.NFData Network.AWS.AutoScalingPlans.Types.TagFilter.TagFilter
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.AutoScalingPlans.Types.TagFilter.TagFilter


module Network.AWS.AutoScalingPlans.Types.ApplicationSource

-- | Represents an application source.
--   
--   <i>See:</i> <a>newApplicationSource</a> smart constructor.
data ApplicationSource
ApplicationSource' :: Maybe [TagFilter] -> Maybe Text -> ApplicationSource

-- | A set of tags (up to 50).
[$sel:tagFilters:ApplicationSource'] :: ApplicationSource -> Maybe [TagFilter]

-- | The Amazon Resource Name (ARN) of a AWS CloudFormation stack.
[$sel:cloudFormationStackARN:ApplicationSource'] :: ApplicationSource -> Maybe Text

-- | Create a value of <a>ApplicationSource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tagFilters:ApplicationSource'</a>,
--   <a>applicationSource_tagFilters</a> - A set of tags (up to 50).
--   
--   <a>$sel:cloudFormationStackARN:ApplicationSource'</a>,
--   <a>applicationSource_cloudFormationStackARN</a> - The Amazon Resource
--   Name (ARN) of a AWS CloudFormation stack.
newApplicationSource :: ApplicationSource

-- | A set of tags (up to 50).
applicationSource_tagFilters :: Lens' ApplicationSource (Maybe [TagFilter])

-- | The Amazon Resource Name (ARN) of a AWS CloudFormation stack.
applicationSource_cloudFormationStackARN :: Lens' ApplicationSource (Maybe Text)
instance GHC.Generics.Generic Network.AWS.AutoScalingPlans.Types.ApplicationSource.ApplicationSource
instance GHC.Show.Show Network.AWS.AutoScalingPlans.Types.ApplicationSource.ApplicationSource
instance GHC.Read.Read Network.AWS.AutoScalingPlans.Types.ApplicationSource.ApplicationSource
instance GHC.Classes.Eq Network.AWS.AutoScalingPlans.Types.ApplicationSource.ApplicationSource
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.AutoScalingPlans.Types.ApplicationSource.ApplicationSource
instance Data.Hashable.Class.Hashable Network.AWS.AutoScalingPlans.Types.ApplicationSource.ApplicationSource
instance Control.DeepSeq.NFData Network.AWS.AutoScalingPlans.Types.ApplicationSource.ApplicationSource
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.AutoScalingPlans.Types.ApplicationSource.ApplicationSource


module Network.AWS.AutoScalingPlans.Types.TargetTrackingConfiguration

-- | Describes a target tracking configuration to use with AWS Auto
--   Scaling. Used with ScalingInstruction and ScalingPolicy.
--   
--   <i>See:</i> <a>newTargetTrackingConfiguration</a> smart constructor.
data TargetTrackingConfiguration
TargetTrackingConfiguration' :: Maybe Bool -> Maybe CustomizedScalingMetricSpecification -> Maybe PredefinedScalingMetricSpecification -> Maybe Int -> Maybe Int -> Maybe Int -> Double -> TargetTrackingConfiguration

-- | Indicates whether scale in by the target tracking scaling policy is
--   disabled. If the value is <tt>true</tt>, scale in is disabled and the
--   target tracking scaling policy doesn't remove capacity from the
--   scalable resource. Otherwise, scale in is enabled and the target
--   tracking scaling policy can remove capacity from the scalable
--   resource.
--   
--   The default value is <tt>false</tt>.
[$sel:disableScaleIn:TargetTrackingConfiguration'] :: TargetTrackingConfiguration -> Maybe Bool

-- | A customized metric. You can specify either a predefined metric or a
--   customized metric.
[$sel:customizedScalingMetricSpecification:TargetTrackingConfiguration'] :: TargetTrackingConfiguration -> Maybe CustomizedScalingMetricSpecification

-- | A predefined metric. You can specify either a predefined metric or a
--   customized metric.
[$sel:predefinedScalingMetricSpecification:TargetTrackingConfiguration'] :: TargetTrackingConfiguration -> Maybe PredefinedScalingMetricSpecification

-- | The estimated time, in seconds, until a newly launched instance can
--   contribute to the CloudWatch metrics. This value is used only if the
--   resource is an Auto Scaling group.
[$sel:estimatedInstanceWarmup:TargetTrackingConfiguration'] :: TargetTrackingConfiguration -> Maybe Int

-- | The amount of time, in seconds, to wait for a previous scale-out
--   activity to take effect. This property is not used if the scalable
--   resource is an Auto Scaling group.
--   
--   With the <i>scale-out cooldown period</i>, the intention is to
--   continuously (but not excessively) scale out. After Auto Scaling
--   successfully scales out using a target tracking scaling policy, it
--   starts to calculate the cooldown time. The scaling policy won't
--   increase the desired capacity again unless either a larger scale out
--   is triggered or the cooldown period ends.
[$sel:scaleOutCooldown:TargetTrackingConfiguration'] :: TargetTrackingConfiguration -> Maybe Int

-- | The amount of time, in seconds, after a scale-in activity completes
--   before another scale-in activity can start. This property is not used
--   if the scalable resource is an Auto Scaling group.
--   
--   With the <i>scale-in cooldown period</i>, the intention is to scale in
--   conservatively to protect your application’s availability, so scale-in
--   activities are blocked until the cooldown period has expired. However,
--   if another alarm triggers a scale-out activity during the scale-in
--   cooldown period, Auto Scaling scales out the target immediately. In
--   this case, the scale-in cooldown period stops and doesn't complete.
[$sel:scaleInCooldown:TargetTrackingConfiguration'] :: TargetTrackingConfiguration -> Maybe Int

-- | The target value for the metric. Although this property accepts
--   numbers of type Double, it won't accept values that are either too
--   small or too large. Values must be in the range of -2^360 to 2^360.
[$sel:targetValue:TargetTrackingConfiguration'] :: TargetTrackingConfiguration -> Double

-- | Create a value of <a>TargetTrackingConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:disableScaleIn:TargetTrackingConfiguration'</a>,
--   <a>targetTrackingConfiguration_disableScaleIn</a> - Indicates whether
--   scale in by the target tracking scaling policy is disabled. If the
--   value is <tt>true</tt>, scale in is disabled and the target tracking
--   scaling policy doesn't remove capacity from the scalable resource.
--   Otherwise, scale in is enabled and the target tracking scaling policy
--   can remove capacity from the scalable resource.
--   
--   The default value is <tt>false</tt>.
--   
--   
--   <a>$sel:customizedScalingMetricSpecification:TargetTrackingConfiguration'</a>,
--   <a>targetTrackingConfiguration_customizedScalingMetricSpecification</a>
--   - A customized metric. You can specify either a predefined metric or a
--   customized metric.
--   
--   
--   <a>$sel:predefinedScalingMetricSpecification:TargetTrackingConfiguration'</a>,
--   <a>targetTrackingConfiguration_predefinedScalingMetricSpecification</a>
--   - A predefined metric. You can specify either a predefined metric or a
--   customized metric.
--   
--   <a>$sel:estimatedInstanceWarmup:TargetTrackingConfiguration'</a>,
--   <a>targetTrackingConfiguration_estimatedInstanceWarmup</a> - The
--   estimated time, in seconds, until a newly launched instance can
--   contribute to the CloudWatch metrics. This value is used only if the
--   resource is an Auto Scaling group.
--   
--   <a>$sel:scaleOutCooldown:TargetTrackingConfiguration'</a>,
--   <a>targetTrackingConfiguration_scaleOutCooldown</a> - The amount of
--   time, in seconds, to wait for a previous scale-out activity to take
--   effect. This property is not used if the scalable resource is an Auto
--   Scaling group.
--   
--   With the <i>scale-out cooldown period</i>, the intention is to
--   continuously (but not excessively) scale out. After Auto Scaling
--   successfully scales out using a target tracking scaling policy, it
--   starts to calculate the cooldown time. The scaling policy won't
--   increase the desired capacity again unless either a larger scale out
--   is triggered or the cooldown period ends.
--   
--   <a>$sel:scaleInCooldown:TargetTrackingConfiguration'</a>,
--   <a>targetTrackingConfiguration_scaleInCooldown</a> - The amount of
--   time, in seconds, after a scale-in activity completes before another
--   scale-in activity can start. This property is not used if the scalable
--   resource is an Auto Scaling group.
--   
--   With the <i>scale-in cooldown period</i>, the intention is to scale in
--   conservatively to protect your application’s availability, so scale-in
--   activities are blocked until the cooldown period has expired. However,
--   if another alarm triggers a scale-out activity during the scale-in
--   cooldown period, Auto Scaling scales out the target immediately. In
--   this case, the scale-in cooldown period stops and doesn't complete.
--   
--   <a>$sel:targetValue:TargetTrackingConfiguration'</a>,
--   <a>targetTrackingConfiguration_targetValue</a> - The target value for
--   the metric. Although this property accepts numbers of type Double, it
--   won't accept values that are either too small or too large. Values
--   must be in the range of -2^360 to 2^360.
newTargetTrackingConfiguration :: Double -> TargetTrackingConfiguration

-- | Indicates whether scale in by the target tracking scaling policy is
--   disabled. If the value is <tt>true</tt>, scale in is disabled and the
--   target tracking scaling policy doesn't remove capacity from the
--   scalable resource. Otherwise, scale in is enabled and the target
--   tracking scaling policy can remove capacity from the scalable
--   resource.
--   
--   The default value is <tt>false</tt>.
targetTrackingConfiguration_disableScaleIn :: Lens' TargetTrackingConfiguration (Maybe Bool)

-- | A customized metric. You can specify either a predefined metric or a
--   customized metric.
targetTrackingConfiguration_customizedScalingMetricSpecification :: Lens' TargetTrackingConfiguration (Maybe CustomizedScalingMetricSpecification)

-- | A predefined metric. You can specify either a predefined metric or a
--   customized metric.
targetTrackingConfiguration_predefinedScalingMetricSpecification :: Lens' TargetTrackingConfiguration (Maybe PredefinedScalingMetricSpecification)

-- | The estimated time, in seconds, until a newly launched instance can
--   contribute to the CloudWatch metrics. This value is used only if the
--   resource is an Auto Scaling group.
targetTrackingConfiguration_estimatedInstanceWarmup :: Lens' TargetTrackingConfiguration (Maybe Int)

-- | The amount of time, in seconds, to wait for a previous scale-out
--   activity to take effect. This property is not used if the scalable
--   resource is an Auto Scaling group.
--   
--   With the <i>scale-out cooldown period</i>, the intention is to
--   continuously (but not excessively) scale out. After Auto Scaling
--   successfully scales out using a target tracking scaling policy, it
--   starts to calculate the cooldown time. The scaling policy won't
--   increase the desired capacity again unless either a larger scale out
--   is triggered or the cooldown period ends.
targetTrackingConfiguration_scaleOutCooldown :: Lens' TargetTrackingConfiguration (Maybe Int)

-- | The amount of time, in seconds, after a scale-in activity completes
--   before another scale-in activity can start. This property is not used
--   if the scalable resource is an Auto Scaling group.
--   
--   With the <i>scale-in cooldown period</i>, the intention is to scale in
--   conservatively to protect your application’s availability, so scale-in
--   activities are blocked until the cooldown period has expired. However,
--   if another alarm triggers a scale-out activity during the scale-in
--   cooldown period, Auto Scaling scales out the target immediately. In
--   this case, the scale-in cooldown period stops and doesn't complete.
targetTrackingConfiguration_scaleInCooldown :: Lens' TargetTrackingConfiguration (Maybe Int)

-- | The target value for the metric. Although this property accepts
--   numbers of type Double, it won't accept values that are either too
--   small or too large. Values must be in the range of -2^360 to 2^360.
targetTrackingConfiguration_targetValue :: Lens' TargetTrackingConfiguration Double
instance GHC.Generics.Generic Network.AWS.AutoScalingPlans.Types.TargetTrackingConfiguration.TargetTrackingConfiguration
instance GHC.Show.Show Network.AWS.AutoScalingPlans.Types.TargetTrackingConfiguration.TargetTrackingConfiguration
instance GHC.Read.Read Network.AWS.AutoScalingPlans.Types.TargetTrackingConfiguration.TargetTrackingConfiguration
instance GHC.Classes.Eq Network.AWS.AutoScalingPlans.Types.TargetTrackingConfiguration.TargetTrackingConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.AutoScalingPlans.Types.TargetTrackingConfiguration.TargetTrackingConfiguration
instance Data.Hashable.Class.Hashable Network.AWS.AutoScalingPlans.Types.TargetTrackingConfiguration.TargetTrackingConfiguration
instance Control.DeepSeq.NFData Network.AWS.AutoScalingPlans.Types.TargetTrackingConfiguration.TargetTrackingConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.AutoScalingPlans.Types.TargetTrackingConfiguration.TargetTrackingConfiguration


module Network.AWS.AutoScalingPlans.Types.ScalingPolicy

-- | Represents a scaling policy.
--   
--   <i>See:</i> <a>newScalingPolicy</a> smart constructor.
data ScalingPolicy
ScalingPolicy' :: Maybe TargetTrackingConfiguration -> Text -> PolicyType -> ScalingPolicy

-- | The target tracking scaling policy. Includes support for predefined or
--   customized metrics.
[$sel:targetTrackingConfiguration:ScalingPolicy'] :: ScalingPolicy -> Maybe TargetTrackingConfiguration

-- | The name of the scaling policy.
[$sel:policyName:ScalingPolicy'] :: ScalingPolicy -> Text

-- | The type of scaling policy.
[$sel:policyType:ScalingPolicy'] :: ScalingPolicy -> PolicyType

-- | Create a value of <a>ScalingPolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:targetTrackingConfiguration:ScalingPolicy'</a>,
--   <a>scalingPolicy_targetTrackingConfiguration</a> - The target tracking
--   scaling policy. Includes support for predefined or customized metrics.
--   
--   <a>$sel:policyName:ScalingPolicy'</a>, <a>scalingPolicy_policyName</a>
--   - The name of the scaling policy.
--   
--   <a>$sel:policyType:ScalingPolicy'</a>, <a>scalingPolicy_policyType</a>
--   - The type of scaling policy.
newScalingPolicy :: Text -> PolicyType -> ScalingPolicy

-- | The target tracking scaling policy. Includes support for predefined or
--   customized metrics.
scalingPolicy_targetTrackingConfiguration :: Lens' ScalingPolicy (Maybe TargetTrackingConfiguration)

-- | The name of the scaling policy.
scalingPolicy_policyName :: Lens' ScalingPolicy Text

-- | The type of scaling policy.
scalingPolicy_policyType :: Lens' ScalingPolicy PolicyType
instance GHC.Generics.Generic Network.AWS.AutoScalingPlans.Types.ScalingPolicy.ScalingPolicy
instance GHC.Show.Show Network.AWS.AutoScalingPlans.Types.ScalingPolicy.ScalingPolicy
instance GHC.Read.Read Network.AWS.AutoScalingPlans.Types.ScalingPolicy.ScalingPolicy
instance GHC.Classes.Eq Network.AWS.AutoScalingPlans.Types.ScalingPolicy.ScalingPolicy
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.AutoScalingPlans.Types.ScalingPolicy.ScalingPolicy
instance Data.Hashable.Class.Hashable Network.AWS.AutoScalingPlans.Types.ScalingPolicy.ScalingPolicy
instance Control.DeepSeq.NFData Network.AWS.AutoScalingPlans.Types.ScalingPolicy.ScalingPolicy


module Network.AWS.AutoScalingPlans.Types.ScalingPlanResource

-- | Represents a scalable resource.
--   
--   <i>See:</i> <a>newScalingPlanResource</a> smart constructor.
data ScalingPlanResource
ScalingPlanResource' :: Maybe [ScalingPolicy] -> Maybe Text -> Text -> Integer -> ServiceNamespace -> Text -> ScalableDimension -> ScalingStatusCode -> ScalingPlanResource

-- | The scaling policies.
[$sel:scalingPolicies:ScalingPlanResource'] :: ScalingPlanResource -> Maybe [ScalingPolicy]

-- | A simple message about the current scaling status of the resource.
[$sel:scalingStatusMessage:ScalingPlanResource'] :: ScalingPlanResource -> Maybe Text

-- | The name of the scaling plan.
[$sel:scalingPlanName:ScalingPlanResource'] :: ScalingPlanResource -> Text

-- | The version number of the scaling plan.
[$sel:scalingPlanVersion:ScalingPlanResource'] :: ScalingPlanResource -> Integer

-- | The namespace of the AWS service.
[$sel:serviceNamespace:ScalingPlanResource'] :: ScalingPlanResource -> ServiceNamespace

-- | The ID of the resource. This string consists of the resource type and
--   unique identifier.
--   
--   <ul>
--   <li>Auto Scaling group - The resource type is
--   <tt>autoScalingGroup</tt> and the unique identifier is the name of the
--   Auto Scaling group. Example: <tt>autoScalingGroup/my-asg</tt>.</li>
--   <li>ECS service - The resource type is <tt>service</tt> and the unique
--   identifier is the cluster name and service name. Example:
--   <tt>service/default/sample-webapp</tt>.</li>
--   <li>Spot Fleet request - The resource type is
--   <tt>spot-fleet-request</tt> and the unique identifier is the Spot
--   Fleet request ID. Example:
--   <tt>spot-fleet-request/sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE</tt>.</li>
--   <li>DynamoDB table - The resource type is <tt>table</tt> and the
--   unique identifier is the resource ID. Example:
--   <tt>table/my-table</tt>.</li>
--   <li>DynamoDB global secondary index - The resource type is
--   <tt>index</tt> and the unique identifier is the resource ID. Example:
--   <tt>table/my-table/index/my-table-index</tt>.</li>
--   <li>Aurora DB cluster - The resource type is <tt>cluster</tt> and the
--   unique identifier is the cluster name. Example:
--   <tt>cluster:my-db-cluster</tt>.</li>
--   </ul>
[$sel:resourceId:ScalingPlanResource'] :: ScalingPlanResource -> Text

-- | The scalable dimension for the resource.
--   
--   <ul>
--   <li><tt>autoscaling:autoScalingGroup:DesiredCapacity</tt> - The
--   desired capacity of an Auto Scaling group.</li>
--   <li><tt>ecs:service:DesiredCount</tt> - The desired task count of an
--   ECS service.</li>
--   <li><tt>ec2:spot-fleet-request:TargetCapacity</tt> - The target
--   capacity of a Spot Fleet request.</li>
--   <li><tt>dynamodb:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:table:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:index:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>dynamodb:index:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>rds:cluster:ReadReplicaCount</tt> - The count of Aurora
--   Replicas in an Aurora DB cluster. Available for Aurora
--   MySQL-compatible edition and Aurora PostgreSQL-compatible
--   edition.</li>
--   </ul>
[$sel:scalableDimension:ScalingPlanResource'] :: ScalingPlanResource -> ScalableDimension

-- | The scaling status of the resource.
--   
--   <ul>
--   <li><tt>Active</tt> - The scaling configuration is active.</li>
--   <li><tt>Inactive</tt> - The scaling configuration is not active
--   because the scaling plan is being created or the scaling configuration
--   could not be applied. Check the status message for more
--   information.</li>
--   <li><tt>PartiallyActive</tt> - The scaling configuration is partially
--   active because the scaling plan is being created or deleted or the
--   scaling configuration could not be fully applied. Check the status
--   message for more information.</li>
--   </ul>
[$sel:scalingStatusCode:ScalingPlanResource'] :: ScalingPlanResource -> ScalingStatusCode

-- | Create a value of <a>ScalingPlanResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:scalingPolicies:ScalingPlanResource'</a>,
--   <a>scalingPlanResource_scalingPolicies</a> - The scaling policies.
--   
--   <a>$sel:scalingStatusMessage:ScalingPlanResource'</a>,
--   <a>scalingPlanResource_scalingStatusMessage</a> - A simple message
--   about the current scaling status of the resource.
--   
--   <a>$sel:scalingPlanName:ScalingPlanResource'</a>,
--   <a>scalingPlanResource_scalingPlanName</a> - The name of the scaling
--   plan.
--   
--   <a>$sel:scalingPlanVersion:ScalingPlanResource'</a>,
--   <a>scalingPlanResource_scalingPlanVersion</a> - The version number of
--   the scaling plan.
--   
--   <a>$sel:serviceNamespace:ScalingPlanResource'</a>,
--   <a>scalingPlanResource_serviceNamespace</a> - The namespace of the AWS
--   service.
--   
--   <a>$sel:resourceId:ScalingPlanResource'</a>,
--   <a>scalingPlanResource_resourceId</a> - The ID of the resource. This
--   string consists of the resource type and unique identifier.
--   
--   <ul>
--   <li>Auto Scaling group - The resource type is
--   <tt>autoScalingGroup</tt> and the unique identifier is the name of the
--   Auto Scaling group. Example: <tt>autoScalingGroup/my-asg</tt>.</li>
--   <li>ECS service - The resource type is <tt>service</tt> and the unique
--   identifier is the cluster name and service name. Example:
--   <tt>service/default/sample-webapp</tt>.</li>
--   <li>Spot Fleet request - The resource type is
--   <tt>spot-fleet-request</tt> and the unique identifier is the Spot
--   Fleet request ID. Example:
--   <tt>spot-fleet-request/sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE</tt>.</li>
--   <li>DynamoDB table - The resource type is <tt>table</tt> and the
--   unique identifier is the resource ID. Example:
--   <tt>table/my-table</tt>.</li>
--   <li>DynamoDB global secondary index - The resource type is
--   <tt>index</tt> and the unique identifier is the resource ID. Example:
--   <tt>table/my-table/index/my-table-index</tt>.</li>
--   <li>Aurora DB cluster - The resource type is <tt>cluster</tt> and the
--   unique identifier is the cluster name. Example:
--   <tt>cluster:my-db-cluster</tt>.</li>
--   </ul>
--   
--   <a>$sel:scalableDimension:ScalingPlanResource'</a>,
--   <a>scalingPlanResource_scalableDimension</a> - The scalable dimension
--   for the resource.
--   
--   <ul>
--   <li><tt>autoscaling:autoScalingGroup:DesiredCapacity</tt> - The
--   desired capacity of an Auto Scaling group.</li>
--   <li><tt>ecs:service:DesiredCount</tt> - The desired task count of an
--   ECS service.</li>
--   <li><tt>ec2:spot-fleet-request:TargetCapacity</tt> - The target
--   capacity of a Spot Fleet request.</li>
--   <li><tt>dynamodb:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:table:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:index:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>dynamodb:index:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>rds:cluster:ReadReplicaCount</tt> - The count of Aurora
--   Replicas in an Aurora DB cluster. Available for Aurora
--   MySQL-compatible edition and Aurora PostgreSQL-compatible
--   edition.</li>
--   </ul>
--   
--   <a>$sel:scalingStatusCode:ScalingPlanResource'</a>,
--   <a>scalingPlanResource_scalingStatusCode</a> - The scaling status of
--   the resource.
--   
--   <ul>
--   <li><tt>Active</tt> - The scaling configuration is active.</li>
--   <li><tt>Inactive</tt> - The scaling configuration is not active
--   because the scaling plan is being created or the scaling configuration
--   could not be applied. Check the status message for more
--   information.</li>
--   <li><tt>PartiallyActive</tt> - The scaling configuration is partially
--   active because the scaling plan is being created or deleted or the
--   scaling configuration could not be fully applied. Check the status
--   message for more information.</li>
--   </ul>
newScalingPlanResource :: Text -> Integer -> ServiceNamespace -> Text -> ScalableDimension -> ScalingStatusCode -> ScalingPlanResource

-- | The scaling policies.
scalingPlanResource_scalingPolicies :: Lens' ScalingPlanResource (Maybe [ScalingPolicy])

-- | A simple message about the current scaling status of the resource.
scalingPlanResource_scalingStatusMessage :: Lens' ScalingPlanResource (Maybe Text)

-- | The name of the scaling plan.
scalingPlanResource_scalingPlanName :: Lens' ScalingPlanResource Text

-- | The version number of the scaling plan.
scalingPlanResource_scalingPlanVersion :: Lens' ScalingPlanResource Integer

-- | The namespace of the AWS service.
scalingPlanResource_serviceNamespace :: Lens' ScalingPlanResource ServiceNamespace

-- | The ID of the resource. This string consists of the resource type and
--   unique identifier.
--   
--   <ul>
--   <li>Auto Scaling group - The resource type is
--   <tt>autoScalingGroup</tt> and the unique identifier is the name of the
--   Auto Scaling group. Example: <tt>autoScalingGroup/my-asg</tt>.</li>
--   <li>ECS service - The resource type is <tt>service</tt> and the unique
--   identifier is the cluster name and service name. Example:
--   <tt>service/default/sample-webapp</tt>.</li>
--   <li>Spot Fleet request - The resource type is
--   <tt>spot-fleet-request</tt> and the unique identifier is the Spot
--   Fleet request ID. Example:
--   <tt>spot-fleet-request/sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE</tt>.</li>
--   <li>DynamoDB table - The resource type is <tt>table</tt> and the
--   unique identifier is the resource ID. Example:
--   <tt>table/my-table</tt>.</li>
--   <li>DynamoDB global secondary index - The resource type is
--   <tt>index</tt> and the unique identifier is the resource ID. Example:
--   <tt>table/my-table/index/my-table-index</tt>.</li>
--   <li>Aurora DB cluster - The resource type is <tt>cluster</tt> and the
--   unique identifier is the cluster name. Example:
--   <tt>cluster:my-db-cluster</tt>.</li>
--   </ul>
scalingPlanResource_resourceId :: Lens' ScalingPlanResource Text

-- | The scalable dimension for the resource.
--   
--   <ul>
--   <li><tt>autoscaling:autoScalingGroup:DesiredCapacity</tt> - The
--   desired capacity of an Auto Scaling group.</li>
--   <li><tt>ecs:service:DesiredCount</tt> - The desired task count of an
--   ECS service.</li>
--   <li><tt>ec2:spot-fleet-request:TargetCapacity</tt> - The target
--   capacity of a Spot Fleet request.</li>
--   <li><tt>dynamodb:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:table:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:index:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>dynamodb:index:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>rds:cluster:ReadReplicaCount</tt> - The count of Aurora
--   Replicas in an Aurora DB cluster. Available for Aurora
--   MySQL-compatible edition and Aurora PostgreSQL-compatible
--   edition.</li>
--   </ul>
scalingPlanResource_scalableDimension :: Lens' ScalingPlanResource ScalableDimension

-- | The scaling status of the resource.
--   
--   <ul>
--   <li><tt>Active</tt> - The scaling configuration is active.</li>
--   <li><tt>Inactive</tt> - The scaling configuration is not active
--   because the scaling plan is being created or the scaling configuration
--   could not be applied. Check the status message for more
--   information.</li>
--   <li><tt>PartiallyActive</tt> - The scaling configuration is partially
--   active because the scaling plan is being created or deleted or the
--   scaling configuration could not be fully applied. Check the status
--   message for more information.</li>
--   </ul>
scalingPlanResource_scalingStatusCode :: Lens' ScalingPlanResource ScalingStatusCode
instance GHC.Generics.Generic Network.AWS.AutoScalingPlans.Types.ScalingPlanResource.ScalingPlanResource
instance GHC.Show.Show Network.AWS.AutoScalingPlans.Types.ScalingPlanResource.ScalingPlanResource
instance GHC.Read.Read Network.AWS.AutoScalingPlans.Types.ScalingPlanResource.ScalingPlanResource
instance GHC.Classes.Eq Network.AWS.AutoScalingPlans.Types.ScalingPlanResource.ScalingPlanResource
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.AutoScalingPlans.Types.ScalingPlanResource.ScalingPlanResource
instance Data.Hashable.Class.Hashable Network.AWS.AutoScalingPlans.Types.ScalingPlanResource.ScalingPlanResource
instance Control.DeepSeq.NFData Network.AWS.AutoScalingPlans.Types.ScalingPlanResource.ScalingPlanResource


module Network.AWS.AutoScalingPlans.Types.ScalingInstruction

-- | Describes a scaling instruction for a scalable resource in a scaling
--   plan. Each scaling instruction applies to one resource.
--   
--   AWS Auto Scaling creates target tracking scaling policies based on the
--   scaling instructions. Target tracking scaling policies adjust the
--   capacity of your scalable resource as required to maintain resource
--   utilization at the target value that you specified.
--   
--   AWS Auto Scaling also configures predictive scaling for your Amazon
--   EC2 Auto Scaling groups using a subset of parameters, including the
--   load metric, the scaling metric, the target value for the scaling
--   metric, the predictive scaling mode (forecast and scale or forecast
--   only), and the desired behavior when the forecast capacity exceeds the
--   maximum capacity of the resource. With predictive scaling, AWS Auto
--   Scaling generates forecasts with traffic predictions for the two days
--   ahead and schedules scaling actions that proactively add and remove
--   resource capacity to match the forecast.
--   
--   We recommend waiting a minimum of 24 hours after creating an Auto
--   Scaling group to configure predictive scaling. At minimum, there must
--   be 24 hours of historical data to generate a forecast. For more
--   information, see <a>Best Practices for AWS Auto Scaling</a> in the
--   <i>AWS Auto Scaling User Guide</i>.
--   
--   <i>See:</i> <a>newScalingInstruction</a> smart constructor.
data ScalingInstruction
ScalingInstruction' :: Maybe Bool -> Maybe PredefinedLoadMetricSpecification -> Maybe PredictiveScalingMaxCapacityBehavior -> Maybe CustomizedLoadMetricSpecification -> Maybe Int -> Maybe PredictiveScalingMode -> Maybe ScalingPolicyUpdateBehavior -> Maybe Natural -> ServiceNamespace -> Text -> ScalableDimension -> Int -> Int -> [TargetTrackingConfiguration] -> ScalingInstruction

-- | Controls whether dynamic scaling by AWS Auto Scaling is disabled. When
--   dynamic scaling is enabled, AWS Auto Scaling creates target tracking
--   scaling policies based on the specified target tracking
--   configurations.
--   
--   The default is enabled (<tt>false</tt>).
[$sel:disableDynamicScaling:ScalingInstruction'] :: ScalingInstruction -> Maybe Bool

-- | The predefined load metric to use for predictive scaling. This
--   parameter or a <b>CustomizedLoadMetricSpecification</b> is required
--   when configuring predictive scaling, and cannot be used otherwise.
[$sel:predefinedLoadMetricSpecification:ScalingInstruction'] :: ScalingInstruction -> Maybe PredefinedLoadMetricSpecification

-- | Defines the behavior that should be applied if the forecast capacity
--   approaches or exceeds the maximum capacity specified for the resource.
--   The default value is <tt>SetForecastCapacityToMaxCapacity</tt>.
--   
--   The following are possible values:
--   
--   <ul>
--   <li><tt>SetForecastCapacityToMaxCapacity</tt> - AWS Auto Scaling
--   cannot scale resource capacity higher than the maximum capacity. The
--   maximum capacity is enforced as a hard limit.</li>
--   <li><tt>SetMaxCapacityToForecastCapacity</tt> - AWS Auto Scaling may
--   scale resource capacity higher than the maximum capacity to equal but
--   not exceed forecast capacity.</li>
--   <li><tt>SetMaxCapacityAboveForecastCapacity</tt> - AWS Auto Scaling
--   may scale resource capacity higher than the maximum capacity by a
--   specified buffer value. The intention is to give the target tracking
--   scaling policy extra capacity if unexpected traffic occurs.</li>
--   </ul>
--   
--   Only valid when configuring predictive scaling.
[$sel:predictiveScalingMaxCapacityBehavior:ScalingInstruction'] :: ScalingInstruction -> Maybe PredictiveScalingMaxCapacityBehavior

-- | The customized load metric to use for predictive scaling. This
--   parameter or a <b>PredefinedLoadMetricSpecification</b> is required
--   when configuring predictive scaling, and cannot be used otherwise.
[$sel:customizedLoadMetricSpecification:ScalingInstruction'] :: ScalingInstruction -> Maybe CustomizedLoadMetricSpecification

-- | The size of the capacity buffer to use when the forecast capacity is
--   close to or exceeds the maximum capacity. The value is specified as a
--   percentage relative to the forecast capacity. For example, if the
--   buffer is 10, this means a 10 percent buffer, such that if the
--   forecast capacity is 50, and the maximum capacity is 40, then the
--   effective maximum capacity is 55.
--   
--   Only valid when configuring predictive scaling. Required if the
--   <b>PredictiveScalingMaxCapacityBehavior</b> is set to
--   <tt>SetMaxCapacityAboveForecastCapacity</tt>, and cannot be used
--   otherwise.
--   
--   The range is 1-100.
[$sel:predictiveScalingMaxCapacityBuffer:ScalingInstruction'] :: ScalingInstruction -> Maybe Int

-- | The predictive scaling mode. The default value is
--   <tt>ForecastAndScale</tt>. Otherwise, AWS Auto Scaling forecasts
--   capacity but does not create any scheduled scaling actions based on
--   the capacity forecast.
[$sel:predictiveScalingMode:ScalingInstruction'] :: ScalingInstruction -> Maybe PredictiveScalingMode

-- | Controls whether a resource's externally created scaling policies are
--   kept or replaced.
--   
--   The default value is <tt>KeepExternalPolicies</tt>. If the parameter
--   is set to <tt>ReplaceExternalPolicies</tt>, any scaling policies that
--   are external to AWS Auto Scaling are deleted and new target tracking
--   scaling policies created.
--   
--   Only valid when configuring dynamic scaling.
--   
--   Condition: The number of existing policies to be replaced must be less
--   than or equal to 50. If there are more than 50 policies to be
--   replaced, AWS Auto Scaling keeps all existing policies and does not
--   create new ones.
[$sel:scalingPolicyUpdateBehavior:ScalingInstruction'] :: ScalingInstruction -> Maybe ScalingPolicyUpdateBehavior

-- | The amount of time, in seconds, to buffer the run time of scheduled
--   scaling actions when scaling out. For example, if the forecast says to
--   add capacity at 10:00 AM, and the buffer time is 5 minutes, then the
--   run time of the corresponding scheduled scaling action will be 9:55
--   AM. The intention is to give resources time to be provisioned. For
--   example, it can take a few minutes to launch an EC2 instance. The
--   actual amount of time required depends on several factors, such as the
--   size of the instance and whether there are startup scripts to
--   complete.
--   
--   The value must be less than the forecast interval duration of 3600
--   seconds (60 minutes). The default is 300 seconds.
--   
--   Only valid when configuring predictive scaling.
[$sel:scheduledActionBufferTime:ScalingInstruction'] :: ScalingInstruction -> Maybe Natural

-- | The namespace of the AWS service.
[$sel:serviceNamespace:ScalingInstruction'] :: ScalingInstruction -> ServiceNamespace

-- | The ID of the resource. This string consists of the resource type and
--   unique identifier.
--   
--   <ul>
--   <li>Auto Scaling group - The resource type is
--   <tt>autoScalingGroup</tt> and the unique identifier is the name of the
--   Auto Scaling group. Example: <tt>autoScalingGroup/my-asg</tt>.</li>
--   <li>ECS service - The resource type is <tt>service</tt> and the unique
--   identifier is the cluster name and service name. Example:
--   <tt>service/default/sample-webapp</tt>.</li>
--   <li>Spot Fleet request - The resource type is
--   <tt>spot-fleet-request</tt> and the unique identifier is the Spot
--   Fleet request ID. Example:
--   <tt>spot-fleet-request/sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE</tt>.</li>
--   <li>DynamoDB table - The resource type is <tt>table</tt> and the
--   unique identifier is the resource ID. Example:
--   <tt>table/my-table</tt>.</li>
--   <li>DynamoDB global secondary index - The resource type is
--   <tt>index</tt> and the unique identifier is the resource ID. Example:
--   <tt>table/my-table/index/my-table-index</tt>.</li>
--   <li>Aurora DB cluster - The resource type is <tt>cluster</tt> and the
--   unique identifier is the cluster name. Example:
--   <tt>cluster:my-db-cluster</tt>.</li>
--   </ul>
[$sel:resourceId:ScalingInstruction'] :: ScalingInstruction -> Text

-- | The scalable dimension associated with the resource.
--   
--   <ul>
--   <li><tt>autoscaling:autoScalingGroup:DesiredCapacity</tt> - The
--   desired capacity of an Auto Scaling group.</li>
--   <li><tt>ecs:service:DesiredCount</tt> - The desired task count of an
--   ECS service.</li>
--   <li><tt>ec2:spot-fleet-request:TargetCapacity</tt> - The target
--   capacity of a Spot Fleet request.</li>
--   <li><tt>dynamodb:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:table:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:index:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>dynamodb:index:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>rds:cluster:ReadReplicaCount</tt> - The count of Aurora
--   Replicas in an Aurora DB cluster. Available for Aurora
--   MySQL-compatible edition and Aurora PostgreSQL-compatible
--   edition.</li>
--   </ul>
[$sel:scalableDimension:ScalingInstruction'] :: ScalingInstruction -> ScalableDimension

-- | The minimum capacity of the resource.
[$sel:minCapacity:ScalingInstruction'] :: ScalingInstruction -> Int

-- | The maximum capacity of the resource. The exception to this upper
--   limit is if you specify a non-default setting for
--   <b>PredictiveScalingMaxCapacityBehavior</b>.
[$sel:maxCapacity:ScalingInstruction'] :: ScalingInstruction -> Int

-- | The target tracking configurations (up to 10). Each of these
--   structures must specify a unique scaling metric and a target value for
--   the metric.
[$sel:targetTrackingConfigurations:ScalingInstruction'] :: ScalingInstruction -> [TargetTrackingConfiguration]

-- | Create a value of <a>ScalingInstruction</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:disableDynamicScaling:ScalingInstruction'</a>,
--   <a>scalingInstruction_disableDynamicScaling</a> - Controls whether
--   dynamic scaling by AWS Auto Scaling is disabled. When dynamic scaling
--   is enabled, AWS Auto Scaling creates target tracking scaling policies
--   based on the specified target tracking configurations.
--   
--   The default is enabled (<tt>false</tt>).
--   
--   <a>$sel:predefinedLoadMetricSpecification:ScalingInstruction'</a>,
--   <a>scalingInstruction_predefinedLoadMetricSpecification</a> - The
--   predefined load metric to use for predictive scaling. This parameter
--   or a <b>CustomizedLoadMetricSpecification</b> is required when
--   configuring predictive scaling, and cannot be used otherwise.
--   
--   <a>$sel:predictiveScalingMaxCapacityBehavior:ScalingInstruction'</a>,
--   <a>scalingInstruction_predictiveScalingMaxCapacityBehavior</a> -
--   Defines the behavior that should be applied if the forecast capacity
--   approaches or exceeds the maximum capacity specified for the resource.
--   The default value is <tt>SetForecastCapacityToMaxCapacity</tt>.
--   
--   The following are possible values:
--   
--   <ul>
--   <li><tt>SetForecastCapacityToMaxCapacity</tt> - AWS Auto Scaling
--   cannot scale resource capacity higher than the maximum capacity. The
--   maximum capacity is enforced as a hard limit.</li>
--   <li><tt>SetMaxCapacityToForecastCapacity</tt> - AWS Auto Scaling may
--   scale resource capacity higher than the maximum capacity to equal but
--   not exceed forecast capacity.</li>
--   <li><tt>SetMaxCapacityAboveForecastCapacity</tt> - AWS Auto Scaling
--   may scale resource capacity higher than the maximum capacity by a
--   specified buffer value. The intention is to give the target tracking
--   scaling policy extra capacity if unexpected traffic occurs.</li>
--   </ul>
--   
--   Only valid when configuring predictive scaling.
--   
--   <a>$sel:customizedLoadMetricSpecification:ScalingInstruction'</a>,
--   <a>scalingInstruction_customizedLoadMetricSpecification</a> - The
--   customized load metric to use for predictive scaling. This parameter
--   or a <b>PredefinedLoadMetricSpecification</b> is required when
--   configuring predictive scaling, and cannot be used otherwise.
--   
--   <a>$sel:predictiveScalingMaxCapacityBuffer:ScalingInstruction'</a>,
--   <a>scalingInstruction_predictiveScalingMaxCapacityBuffer</a> - The
--   size of the capacity buffer to use when the forecast capacity is close
--   to or exceeds the maximum capacity. The value is specified as a
--   percentage relative to the forecast capacity. For example, if the
--   buffer is 10, this means a 10 percent buffer, such that if the
--   forecast capacity is 50, and the maximum capacity is 40, then the
--   effective maximum capacity is 55.
--   
--   Only valid when configuring predictive scaling. Required if the
--   <b>PredictiveScalingMaxCapacityBehavior</b> is set to
--   <tt>SetMaxCapacityAboveForecastCapacity</tt>, and cannot be used
--   otherwise.
--   
--   The range is 1-100.
--   
--   <a>$sel:predictiveScalingMode:ScalingInstruction'</a>,
--   <a>scalingInstruction_predictiveScalingMode</a> - The predictive
--   scaling mode. The default value is <tt>ForecastAndScale</tt>.
--   Otherwise, AWS Auto Scaling forecasts capacity but does not create any
--   scheduled scaling actions based on the capacity forecast.
--   
--   <a>$sel:scalingPolicyUpdateBehavior:ScalingInstruction'</a>,
--   <a>scalingInstruction_scalingPolicyUpdateBehavior</a> - Controls
--   whether a resource's externally created scaling policies are kept or
--   replaced.
--   
--   The default value is <tt>KeepExternalPolicies</tt>. If the parameter
--   is set to <tt>ReplaceExternalPolicies</tt>, any scaling policies that
--   are external to AWS Auto Scaling are deleted and new target tracking
--   scaling policies created.
--   
--   Only valid when configuring dynamic scaling.
--   
--   Condition: The number of existing policies to be replaced must be less
--   than or equal to 50. If there are more than 50 policies to be
--   replaced, AWS Auto Scaling keeps all existing policies and does not
--   create new ones.
--   
--   <a>$sel:scheduledActionBufferTime:ScalingInstruction'</a>,
--   <a>scalingInstruction_scheduledActionBufferTime</a> - The amount of
--   time, in seconds, to buffer the run time of scheduled scaling actions
--   when scaling out. For example, if the forecast says to add capacity at
--   10:00 AM, and the buffer time is 5 minutes, then the run time of the
--   corresponding scheduled scaling action will be 9:55 AM. The intention
--   is to give resources time to be provisioned. For example, it can take
--   a few minutes to launch an EC2 instance. The actual amount of time
--   required depends on several factors, such as the size of the instance
--   and whether there are startup scripts to complete.
--   
--   The value must be less than the forecast interval duration of 3600
--   seconds (60 minutes). The default is 300 seconds.
--   
--   Only valid when configuring predictive scaling.
--   
--   <a>$sel:serviceNamespace:ScalingInstruction'</a>,
--   <a>scalingInstruction_serviceNamespace</a> - The namespace of the AWS
--   service.
--   
--   <a>$sel:resourceId:ScalingInstruction'</a>,
--   <a>scalingInstruction_resourceId</a> - The ID of the resource. This
--   string consists of the resource type and unique identifier.
--   
--   <ul>
--   <li>Auto Scaling group - The resource type is
--   <tt>autoScalingGroup</tt> and the unique identifier is the name of the
--   Auto Scaling group. Example: <tt>autoScalingGroup/my-asg</tt>.</li>
--   <li>ECS service - The resource type is <tt>service</tt> and the unique
--   identifier is the cluster name and service name. Example:
--   <tt>service/default/sample-webapp</tt>.</li>
--   <li>Spot Fleet request - The resource type is
--   <tt>spot-fleet-request</tt> and the unique identifier is the Spot
--   Fleet request ID. Example:
--   <tt>spot-fleet-request/sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE</tt>.</li>
--   <li>DynamoDB table - The resource type is <tt>table</tt> and the
--   unique identifier is the resource ID. Example:
--   <tt>table/my-table</tt>.</li>
--   <li>DynamoDB global secondary index - The resource type is
--   <tt>index</tt> and the unique identifier is the resource ID. Example:
--   <tt>table/my-table/index/my-table-index</tt>.</li>
--   <li>Aurora DB cluster - The resource type is <tt>cluster</tt> and the
--   unique identifier is the cluster name. Example:
--   <tt>cluster:my-db-cluster</tt>.</li>
--   </ul>
--   
--   <a>$sel:scalableDimension:ScalingInstruction'</a>,
--   <a>scalingInstruction_scalableDimension</a> - The scalable dimension
--   associated with the resource.
--   
--   <ul>
--   <li><tt>autoscaling:autoScalingGroup:DesiredCapacity</tt> - The
--   desired capacity of an Auto Scaling group.</li>
--   <li><tt>ecs:service:DesiredCount</tt> - The desired task count of an
--   ECS service.</li>
--   <li><tt>ec2:spot-fleet-request:TargetCapacity</tt> - The target
--   capacity of a Spot Fleet request.</li>
--   <li><tt>dynamodb:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:table:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:index:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>dynamodb:index:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>rds:cluster:ReadReplicaCount</tt> - The count of Aurora
--   Replicas in an Aurora DB cluster. Available for Aurora
--   MySQL-compatible edition and Aurora PostgreSQL-compatible
--   edition.</li>
--   </ul>
--   
--   <a>$sel:minCapacity:ScalingInstruction'</a>,
--   <a>scalingInstruction_minCapacity</a> - The minimum capacity of the
--   resource.
--   
--   <a>$sel:maxCapacity:ScalingInstruction'</a>,
--   <a>scalingInstruction_maxCapacity</a> - The maximum capacity of the
--   resource. The exception to this upper limit is if you specify a
--   non-default setting for <b>PredictiveScalingMaxCapacityBehavior</b>.
--   
--   <a>$sel:targetTrackingConfigurations:ScalingInstruction'</a>,
--   <a>scalingInstruction_targetTrackingConfigurations</a> - The target
--   tracking configurations (up to 10). Each of these structures must
--   specify a unique scaling metric and a target value for the metric.
newScalingInstruction :: ServiceNamespace -> Text -> ScalableDimension -> Int -> Int -> ScalingInstruction

-- | Controls whether dynamic scaling by AWS Auto Scaling is disabled. When
--   dynamic scaling is enabled, AWS Auto Scaling creates target tracking
--   scaling policies based on the specified target tracking
--   configurations.
--   
--   The default is enabled (<tt>false</tt>).
scalingInstruction_disableDynamicScaling :: Lens' ScalingInstruction (Maybe Bool)

-- | The predefined load metric to use for predictive scaling. This
--   parameter or a <b>CustomizedLoadMetricSpecification</b> is required
--   when configuring predictive scaling, and cannot be used otherwise.
scalingInstruction_predefinedLoadMetricSpecification :: Lens' ScalingInstruction (Maybe PredefinedLoadMetricSpecification)

-- | Defines the behavior that should be applied if the forecast capacity
--   approaches or exceeds the maximum capacity specified for the resource.
--   The default value is <tt>SetForecastCapacityToMaxCapacity</tt>.
--   
--   The following are possible values:
--   
--   <ul>
--   <li><tt>SetForecastCapacityToMaxCapacity</tt> - AWS Auto Scaling
--   cannot scale resource capacity higher than the maximum capacity. The
--   maximum capacity is enforced as a hard limit.</li>
--   <li><tt>SetMaxCapacityToForecastCapacity</tt> - AWS Auto Scaling may
--   scale resource capacity higher than the maximum capacity to equal but
--   not exceed forecast capacity.</li>
--   <li><tt>SetMaxCapacityAboveForecastCapacity</tt> - AWS Auto Scaling
--   may scale resource capacity higher than the maximum capacity by a
--   specified buffer value. The intention is to give the target tracking
--   scaling policy extra capacity if unexpected traffic occurs.</li>
--   </ul>
--   
--   Only valid when configuring predictive scaling.
scalingInstruction_predictiveScalingMaxCapacityBehavior :: Lens' ScalingInstruction (Maybe PredictiveScalingMaxCapacityBehavior)

-- | The customized load metric to use for predictive scaling. This
--   parameter or a <b>PredefinedLoadMetricSpecification</b> is required
--   when configuring predictive scaling, and cannot be used otherwise.
scalingInstruction_customizedLoadMetricSpecification :: Lens' ScalingInstruction (Maybe CustomizedLoadMetricSpecification)

-- | The size of the capacity buffer to use when the forecast capacity is
--   close to or exceeds the maximum capacity. The value is specified as a
--   percentage relative to the forecast capacity. For example, if the
--   buffer is 10, this means a 10 percent buffer, such that if the
--   forecast capacity is 50, and the maximum capacity is 40, then the
--   effective maximum capacity is 55.
--   
--   Only valid when configuring predictive scaling. Required if the
--   <b>PredictiveScalingMaxCapacityBehavior</b> is set to
--   <tt>SetMaxCapacityAboveForecastCapacity</tt>, and cannot be used
--   otherwise.
--   
--   The range is 1-100.
scalingInstruction_predictiveScalingMaxCapacityBuffer :: Lens' ScalingInstruction (Maybe Int)

-- | The predictive scaling mode. The default value is
--   <tt>ForecastAndScale</tt>. Otherwise, AWS Auto Scaling forecasts
--   capacity but does not create any scheduled scaling actions based on
--   the capacity forecast.
scalingInstruction_predictiveScalingMode :: Lens' ScalingInstruction (Maybe PredictiveScalingMode)

-- | Controls whether a resource's externally created scaling policies are
--   kept or replaced.
--   
--   The default value is <tt>KeepExternalPolicies</tt>. If the parameter
--   is set to <tt>ReplaceExternalPolicies</tt>, any scaling policies that
--   are external to AWS Auto Scaling are deleted and new target tracking
--   scaling policies created.
--   
--   Only valid when configuring dynamic scaling.
--   
--   Condition: The number of existing policies to be replaced must be less
--   than or equal to 50. If there are more than 50 policies to be
--   replaced, AWS Auto Scaling keeps all existing policies and does not
--   create new ones.
scalingInstruction_scalingPolicyUpdateBehavior :: Lens' ScalingInstruction (Maybe ScalingPolicyUpdateBehavior)

-- | The amount of time, in seconds, to buffer the run time of scheduled
--   scaling actions when scaling out. For example, if the forecast says to
--   add capacity at 10:00 AM, and the buffer time is 5 minutes, then the
--   run time of the corresponding scheduled scaling action will be 9:55
--   AM. The intention is to give resources time to be provisioned. For
--   example, it can take a few minutes to launch an EC2 instance. The
--   actual amount of time required depends on several factors, such as the
--   size of the instance and whether there are startup scripts to
--   complete.
--   
--   The value must be less than the forecast interval duration of 3600
--   seconds (60 minutes). The default is 300 seconds.
--   
--   Only valid when configuring predictive scaling.
scalingInstruction_scheduledActionBufferTime :: Lens' ScalingInstruction (Maybe Natural)

-- | The namespace of the AWS service.
scalingInstruction_serviceNamespace :: Lens' ScalingInstruction ServiceNamespace

-- | The ID of the resource. This string consists of the resource type and
--   unique identifier.
--   
--   <ul>
--   <li>Auto Scaling group - The resource type is
--   <tt>autoScalingGroup</tt> and the unique identifier is the name of the
--   Auto Scaling group. Example: <tt>autoScalingGroup/my-asg</tt>.</li>
--   <li>ECS service - The resource type is <tt>service</tt> and the unique
--   identifier is the cluster name and service name. Example:
--   <tt>service/default/sample-webapp</tt>.</li>
--   <li>Spot Fleet request - The resource type is
--   <tt>spot-fleet-request</tt> and the unique identifier is the Spot
--   Fleet request ID. Example:
--   <tt>spot-fleet-request/sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE</tt>.</li>
--   <li>DynamoDB table - The resource type is <tt>table</tt> and the
--   unique identifier is the resource ID. Example:
--   <tt>table/my-table</tt>.</li>
--   <li>DynamoDB global secondary index - The resource type is
--   <tt>index</tt> and the unique identifier is the resource ID. Example:
--   <tt>table/my-table/index/my-table-index</tt>.</li>
--   <li>Aurora DB cluster - The resource type is <tt>cluster</tt> and the
--   unique identifier is the cluster name. Example:
--   <tt>cluster:my-db-cluster</tt>.</li>
--   </ul>
scalingInstruction_resourceId :: Lens' ScalingInstruction Text

-- | The scalable dimension associated with the resource.
--   
--   <ul>
--   <li><tt>autoscaling:autoScalingGroup:DesiredCapacity</tt> - The
--   desired capacity of an Auto Scaling group.</li>
--   <li><tt>ecs:service:DesiredCount</tt> - The desired task count of an
--   ECS service.</li>
--   <li><tt>ec2:spot-fleet-request:TargetCapacity</tt> - The target
--   capacity of a Spot Fleet request.</li>
--   <li><tt>dynamodb:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:table:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:index:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>dynamodb:index:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>rds:cluster:ReadReplicaCount</tt> - The count of Aurora
--   Replicas in an Aurora DB cluster. Available for Aurora
--   MySQL-compatible edition and Aurora PostgreSQL-compatible
--   edition.</li>
--   </ul>
scalingInstruction_scalableDimension :: Lens' ScalingInstruction ScalableDimension

-- | The minimum capacity of the resource.
scalingInstruction_minCapacity :: Lens' ScalingInstruction Int

-- | The maximum capacity of the resource. The exception to this upper
--   limit is if you specify a non-default setting for
--   <b>PredictiveScalingMaxCapacityBehavior</b>.
scalingInstruction_maxCapacity :: Lens' ScalingInstruction Int

-- | The target tracking configurations (up to 10). Each of these
--   structures must specify a unique scaling metric and a target value for
--   the metric.
scalingInstruction_targetTrackingConfigurations :: Lens' ScalingInstruction [TargetTrackingConfiguration]
instance GHC.Generics.Generic Network.AWS.AutoScalingPlans.Types.ScalingInstruction.ScalingInstruction
instance GHC.Show.Show Network.AWS.AutoScalingPlans.Types.ScalingInstruction.ScalingInstruction
instance GHC.Read.Read Network.AWS.AutoScalingPlans.Types.ScalingInstruction.ScalingInstruction
instance GHC.Classes.Eq Network.AWS.AutoScalingPlans.Types.ScalingInstruction.ScalingInstruction
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.AutoScalingPlans.Types.ScalingInstruction.ScalingInstruction
instance Data.Hashable.Class.Hashable Network.AWS.AutoScalingPlans.Types.ScalingInstruction.ScalingInstruction
instance Control.DeepSeq.NFData Network.AWS.AutoScalingPlans.Types.ScalingInstruction.ScalingInstruction
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.AutoScalingPlans.Types.ScalingInstruction.ScalingInstruction


module Network.AWS.AutoScalingPlans.Types.ScalingPlan

-- | Represents a scaling plan.
--   
--   <i>See:</i> <a>newScalingPlan</a> smart constructor.
data ScalingPlan
ScalingPlan' :: Maybe Text -> Maybe POSIX -> Maybe POSIX -> Text -> Integer -> ApplicationSource -> [ScalingInstruction] -> ScalingPlanStatusCode -> ScalingPlan

-- | A simple message about the current status of the scaling plan.
[$sel:statusMessage:ScalingPlan'] :: ScalingPlan -> Maybe Text

-- | The Unix time stamp when the scaling plan was created.
[$sel:creationTime:ScalingPlan'] :: ScalingPlan -> Maybe POSIX

-- | The Unix time stamp when the scaling plan entered the current status.
[$sel:statusStartTime:ScalingPlan'] :: ScalingPlan -> Maybe POSIX

-- | The name of the scaling plan.
[$sel:scalingPlanName:ScalingPlan'] :: ScalingPlan -> Text

-- | The version number of the scaling plan.
[$sel:scalingPlanVersion:ScalingPlan'] :: ScalingPlan -> Integer

-- | A CloudFormation stack or a set of tags. You can create one scaling
--   plan per application source.
[$sel:applicationSource:ScalingPlan'] :: ScalingPlan -> ApplicationSource

-- | The scaling instructions.
[$sel:scalingInstructions:ScalingPlan'] :: ScalingPlan -> [ScalingInstruction]

-- | The status of the scaling plan.
--   
--   <ul>
--   <li><tt>Active</tt> - The scaling plan is active.</li>
--   <li><tt>ActiveWithProblems</tt> - The scaling plan is active, but the
--   scaling configuration for one or more resources could not be
--   applied.</li>
--   <li><tt>CreationInProgress</tt> - The scaling plan is being
--   created.</li>
--   <li><tt>CreationFailed</tt> - The scaling plan could not be
--   created.</li>
--   <li><tt>DeletionInProgress</tt> - The scaling plan is being
--   deleted.</li>
--   <li><tt>DeletionFailed</tt> - The scaling plan could not be
--   deleted.</li>
--   <li><tt>UpdateInProgress</tt> - The scaling plan is being
--   updated.</li>
--   <li><tt>UpdateFailed</tt> - The scaling plan could not be
--   updated.</li>
--   </ul>
[$sel:statusCode:ScalingPlan'] :: ScalingPlan -> ScalingPlanStatusCode

-- | Create a value of <a>ScalingPlan</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:statusMessage:ScalingPlan'</a>,
--   <a>scalingPlan_statusMessage</a> - A simple message about the current
--   status of the scaling plan.
--   
--   <a>$sel:creationTime:ScalingPlan'</a>, <a>scalingPlan_creationTime</a>
--   - The Unix time stamp when the scaling plan was created.
--   
--   <a>$sel:statusStartTime:ScalingPlan'</a>,
--   <a>scalingPlan_statusStartTime</a> - The Unix time stamp when the
--   scaling plan entered the current status.
--   
--   <a>$sel:scalingPlanName:ScalingPlan'</a>,
--   <a>scalingPlan_scalingPlanName</a> - The name of the scaling plan.
--   
--   <a>$sel:scalingPlanVersion:ScalingPlan'</a>,
--   <a>scalingPlan_scalingPlanVersion</a> - The version number of the
--   scaling plan.
--   
--   <a>$sel:applicationSource:ScalingPlan'</a>,
--   <a>scalingPlan_applicationSource</a> - A CloudFormation stack or a set
--   of tags. You can create one scaling plan per application source.
--   
--   <a>$sel:scalingInstructions:ScalingPlan'</a>,
--   <a>scalingPlan_scalingInstructions</a> - The scaling instructions.
--   
--   <a>$sel:statusCode:ScalingPlan'</a>, <a>scalingPlan_statusCode</a> -
--   The status of the scaling plan.
--   
--   <ul>
--   <li><tt>Active</tt> - The scaling plan is active.</li>
--   <li><tt>ActiveWithProblems</tt> - The scaling plan is active, but the
--   scaling configuration for one or more resources could not be
--   applied.</li>
--   <li><tt>CreationInProgress</tt> - The scaling plan is being
--   created.</li>
--   <li><tt>CreationFailed</tt> - The scaling plan could not be
--   created.</li>
--   <li><tt>DeletionInProgress</tt> - The scaling plan is being
--   deleted.</li>
--   <li><tt>DeletionFailed</tt> - The scaling plan could not be
--   deleted.</li>
--   <li><tt>UpdateInProgress</tt> - The scaling plan is being
--   updated.</li>
--   <li><tt>UpdateFailed</tt> - The scaling plan could not be
--   updated.</li>
--   </ul>
newScalingPlan :: Text -> Integer -> ApplicationSource -> ScalingPlanStatusCode -> ScalingPlan

-- | A simple message about the current status of the scaling plan.
scalingPlan_statusMessage :: Lens' ScalingPlan (Maybe Text)

-- | The Unix time stamp when the scaling plan was created.
scalingPlan_creationTime :: Lens' ScalingPlan (Maybe UTCTime)

-- | The Unix time stamp when the scaling plan entered the current status.
scalingPlan_statusStartTime :: Lens' ScalingPlan (Maybe UTCTime)

-- | The name of the scaling plan.
scalingPlan_scalingPlanName :: Lens' ScalingPlan Text

-- | The version number of the scaling plan.
scalingPlan_scalingPlanVersion :: Lens' ScalingPlan Integer

-- | A CloudFormation stack or a set of tags. You can create one scaling
--   plan per application source.
scalingPlan_applicationSource :: Lens' ScalingPlan ApplicationSource

-- | The scaling instructions.
scalingPlan_scalingInstructions :: Lens' ScalingPlan [ScalingInstruction]

-- | The status of the scaling plan.
--   
--   <ul>
--   <li><tt>Active</tt> - The scaling plan is active.</li>
--   <li><tt>ActiveWithProblems</tt> - The scaling plan is active, but the
--   scaling configuration for one or more resources could not be
--   applied.</li>
--   <li><tt>CreationInProgress</tt> - The scaling plan is being
--   created.</li>
--   <li><tt>CreationFailed</tt> - The scaling plan could not be
--   created.</li>
--   <li><tt>DeletionInProgress</tt> - The scaling plan is being
--   deleted.</li>
--   <li><tt>DeletionFailed</tt> - The scaling plan could not be
--   deleted.</li>
--   <li><tt>UpdateInProgress</tt> - The scaling plan is being
--   updated.</li>
--   <li><tt>UpdateFailed</tt> - The scaling plan could not be
--   updated.</li>
--   </ul>
scalingPlan_statusCode :: Lens' ScalingPlan ScalingPlanStatusCode
instance GHC.Generics.Generic Network.AWS.AutoScalingPlans.Types.ScalingPlan.ScalingPlan
instance GHC.Show.Show Network.AWS.AutoScalingPlans.Types.ScalingPlan.ScalingPlan
instance GHC.Read.Read Network.AWS.AutoScalingPlans.Types.ScalingPlan.ScalingPlan
instance GHC.Classes.Eq Network.AWS.AutoScalingPlans.Types.ScalingPlan.ScalingPlan
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.AutoScalingPlans.Types.ScalingPlan.ScalingPlan
instance Data.Hashable.Class.Hashable Network.AWS.AutoScalingPlans.Types.ScalingPlan.ScalingPlan
instance Control.DeepSeq.NFData Network.AWS.AutoScalingPlans.Types.ScalingPlan.ScalingPlan


module Network.AWS.AutoScalingPlans.Types

-- | API version <tt>2018-01-06</tt> of the Amazon Auto Scaling Plans SDK
--   configuration.
defaultService :: Service

-- | The specified object could not be found.
_ObjectNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The service encountered an internal error.
_InternalServiceException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The token provided is not valid.
_InvalidNextTokenException :: AsError a => Getting (First ServiceError) a ServiceError

-- | An exception was thrown for a validation issue. Review the parameters
--   provided.
_ValidationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Your account exceeded a limit. This exception is thrown when a
--   per-account resource limit is exceeded.
_LimitExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Concurrent updates caused an exception, for example, if you request an
--   update to a scaling plan that already has a pending update.
_ConcurrentUpdateException :: AsError a => Getting (First ServiceError) a ServiceError
newtype ForecastDataType
ForecastDataType' :: Text -> ForecastDataType
[fromForecastDataType] :: ForecastDataType -> Text
pattern ForecastDataType_CapacityForecast :: ForecastDataType
pattern ForecastDataType_LoadForecast :: ForecastDataType
pattern ForecastDataType_ScheduledActionMaxCapacity :: ForecastDataType
pattern ForecastDataType_ScheduledActionMinCapacity :: ForecastDataType
newtype LoadMetricType
LoadMetricType' :: Text -> LoadMetricType
[fromLoadMetricType] :: LoadMetricType -> Text
pattern LoadMetricType_ALBTargetGroupRequestCount :: LoadMetricType
pattern LoadMetricType_ASGTotalCPUUtilization :: LoadMetricType
pattern LoadMetricType_ASGTotalNetworkIn :: LoadMetricType
pattern LoadMetricType_ASGTotalNetworkOut :: LoadMetricType
newtype MetricStatistic
MetricStatistic' :: Text -> MetricStatistic
[fromMetricStatistic] :: MetricStatistic -> Text
pattern MetricStatistic_Average :: MetricStatistic
pattern MetricStatistic_Maximum :: MetricStatistic
pattern MetricStatistic_Minimum :: MetricStatistic
pattern MetricStatistic_SampleCount :: MetricStatistic
pattern MetricStatistic_Sum :: MetricStatistic
newtype PolicyType
PolicyType' :: Text -> PolicyType
[fromPolicyType] :: PolicyType -> Text
pattern PolicyType_TargetTrackingScaling :: PolicyType
newtype PredictiveScalingMaxCapacityBehavior
PredictiveScalingMaxCapacityBehavior' :: Text -> PredictiveScalingMaxCapacityBehavior
[fromPredictiveScalingMaxCapacityBehavior] :: PredictiveScalingMaxCapacityBehavior -> Text
pattern PredictiveScalingMaxCapacityBehavior_SetForecastCapacityToMaxCapacity :: PredictiveScalingMaxCapacityBehavior
pattern PredictiveScalingMaxCapacityBehavior_SetMaxCapacityAboveForecastCapacity :: PredictiveScalingMaxCapacityBehavior
pattern PredictiveScalingMaxCapacityBehavior_SetMaxCapacityToForecastCapacity :: PredictiveScalingMaxCapacityBehavior
newtype PredictiveScalingMode
PredictiveScalingMode' :: Text -> PredictiveScalingMode
[fromPredictiveScalingMode] :: PredictiveScalingMode -> Text
pattern PredictiveScalingMode_ForecastAndScale :: PredictiveScalingMode
pattern PredictiveScalingMode_ForecastOnly :: PredictiveScalingMode
newtype ScalableDimension
ScalableDimension' :: Text -> ScalableDimension
[fromScalableDimension] :: ScalableDimension -> Text
pattern ScalableDimension_Autoscaling_autoScalingGroup_DesiredCapacity :: ScalableDimension
pattern ScalableDimension_Dynamodb_index_ReadCapacityUnits :: ScalableDimension
pattern ScalableDimension_Dynamodb_index_WriteCapacityUnits :: ScalableDimension
pattern ScalableDimension_Dynamodb_table_ReadCapacityUnits :: ScalableDimension
pattern ScalableDimension_Dynamodb_table_WriteCapacityUnits :: ScalableDimension
pattern ScalableDimension_Ec2_spot_fleet_request_TargetCapacity :: ScalableDimension
pattern ScalableDimension_Ecs_service_DesiredCount :: ScalableDimension
pattern ScalableDimension_Rds_cluster_ReadReplicaCount :: ScalableDimension
newtype ScalingMetricType
ScalingMetricType' :: Text -> ScalingMetricType
[fromScalingMetricType] :: ScalingMetricType -> Text
pattern ScalingMetricType_ALBRequestCountPerTarget :: ScalingMetricType
pattern ScalingMetricType_ASGAverageCPUUtilization :: ScalingMetricType
pattern ScalingMetricType_ASGAverageNetworkIn :: ScalingMetricType
pattern ScalingMetricType_ASGAverageNetworkOut :: ScalingMetricType
pattern ScalingMetricType_DynamoDBReadCapacityUtilization :: ScalingMetricType
pattern ScalingMetricType_DynamoDBWriteCapacityUtilization :: ScalingMetricType
pattern ScalingMetricType_EC2SpotFleetRequestAverageCPUUtilization :: ScalingMetricType
pattern ScalingMetricType_EC2SpotFleetRequestAverageNetworkIn :: ScalingMetricType
pattern ScalingMetricType_EC2SpotFleetRequestAverageNetworkOut :: ScalingMetricType
pattern ScalingMetricType_ECSServiceAverageCPUUtilization :: ScalingMetricType
pattern ScalingMetricType_ECSServiceAverageMemoryUtilization :: ScalingMetricType
pattern ScalingMetricType_RDSReaderAverageCPUUtilization :: ScalingMetricType
pattern ScalingMetricType_RDSReaderAverageDatabaseConnections :: ScalingMetricType
newtype ScalingPlanStatusCode
ScalingPlanStatusCode' :: Text -> ScalingPlanStatusCode
[fromScalingPlanStatusCode] :: ScalingPlanStatusCode -> Text
pattern ScalingPlanStatusCode_Active :: ScalingPlanStatusCode
pattern ScalingPlanStatusCode_ActiveWithProblems :: ScalingPlanStatusCode
pattern ScalingPlanStatusCode_CreationFailed :: ScalingPlanStatusCode
pattern ScalingPlanStatusCode_CreationInProgress :: ScalingPlanStatusCode
pattern ScalingPlanStatusCode_DeletionFailed :: ScalingPlanStatusCode
pattern ScalingPlanStatusCode_DeletionInProgress :: ScalingPlanStatusCode
pattern ScalingPlanStatusCode_UpdateFailed :: ScalingPlanStatusCode
pattern ScalingPlanStatusCode_UpdateInProgress :: ScalingPlanStatusCode
newtype ScalingPolicyUpdateBehavior
ScalingPolicyUpdateBehavior' :: Text -> ScalingPolicyUpdateBehavior
[fromScalingPolicyUpdateBehavior] :: ScalingPolicyUpdateBehavior -> Text
pattern ScalingPolicyUpdateBehavior_KeepExternalPolicies :: ScalingPolicyUpdateBehavior
pattern ScalingPolicyUpdateBehavior_ReplaceExternalPolicies :: ScalingPolicyUpdateBehavior
newtype ScalingStatusCode
ScalingStatusCode' :: Text -> ScalingStatusCode
[fromScalingStatusCode] :: ScalingStatusCode -> Text
pattern ScalingStatusCode_Active :: ScalingStatusCode
pattern ScalingStatusCode_Inactive :: ScalingStatusCode
pattern ScalingStatusCode_PartiallyActive :: ScalingStatusCode
newtype ServiceNamespace
ServiceNamespace' :: Text -> ServiceNamespace
[fromServiceNamespace] :: ServiceNamespace -> Text
pattern ServiceNamespace_Autoscaling :: ServiceNamespace
pattern ServiceNamespace_Dynamodb :: ServiceNamespace
pattern ServiceNamespace_Ec2 :: ServiceNamespace
pattern ServiceNamespace_Ecs :: ServiceNamespace
pattern ServiceNamespace_Rds :: ServiceNamespace

-- | Represents an application source.
--   
--   <i>See:</i> <a>newApplicationSource</a> smart constructor.
data ApplicationSource
ApplicationSource' :: Maybe [TagFilter] -> Maybe Text -> ApplicationSource

-- | A set of tags (up to 50).
[$sel:tagFilters:ApplicationSource'] :: ApplicationSource -> Maybe [TagFilter]

-- | The Amazon Resource Name (ARN) of a AWS CloudFormation stack.
[$sel:cloudFormationStackARN:ApplicationSource'] :: ApplicationSource -> Maybe Text

-- | Create a value of <a>ApplicationSource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tagFilters:ApplicationSource'</a>,
--   <a>applicationSource_tagFilters</a> - A set of tags (up to 50).
--   
--   <a>$sel:cloudFormationStackARN:ApplicationSource'</a>,
--   <a>applicationSource_cloudFormationStackARN</a> - The Amazon Resource
--   Name (ARN) of a AWS CloudFormation stack.
newApplicationSource :: ApplicationSource

-- | A set of tags (up to 50).
applicationSource_tagFilters :: Lens' ApplicationSource (Maybe [TagFilter])

-- | The Amazon Resource Name (ARN) of a AWS CloudFormation stack.
applicationSource_cloudFormationStackARN :: Lens' ApplicationSource (Maybe Text)

-- | Represents a CloudWatch metric of your choosing that can be used for
--   predictive scaling.
--   
--   For predictive scaling to work with a customized load metric
--   specification, AWS Auto Scaling needs access to the <tt>Sum</tt> and
--   <tt>Average</tt> statistics that CloudWatch computes from metric data.
--   
--   When you choose a load metric, make sure that the required
--   <tt>Sum</tt> and <tt>Average</tt> statistics for your metric are
--   available in CloudWatch and that they provide relevant data for
--   predictive scaling. The <tt>Sum</tt> statistic must represent the
--   total load on the resource, and the <tt>Average</tt> statistic must
--   represent the average load per capacity unit of the resource. For
--   example, there is a metric that counts the number of requests
--   processed by your Auto Scaling group. If the <tt>Sum</tt> statistic
--   represents the total request count processed by the group, then the
--   <tt>Average</tt> statistic for the specified metric must represent the
--   average request count processed by each instance of the group.
--   
--   If you publish your own metrics, you can aggregate the data points at
--   a given interval and then publish the aggregated data points to
--   CloudWatch. Before AWS Auto Scaling generates the forecast, it sums up
--   all the metric data points that occurred within each hour to match the
--   granularity period that is used in the forecast (60 minutes).
--   
--   For information about terminology, available metrics, or how to
--   publish new metrics, see <a>Amazon CloudWatch Concepts</a> in the
--   <i>Amazon CloudWatch User Guide</i>.
--   
--   After creating your scaling plan, you can use the AWS Auto Scaling
--   console to visualize forecasts for the specified metric. For more
--   information, see <a>View Scaling Information for a Resource</a> in the
--   <i>AWS Auto Scaling User Guide</i>.
--   
--   <i>See:</i> <a>newCustomizedLoadMetricSpecification</a> smart
--   constructor.
data CustomizedLoadMetricSpecification
CustomizedLoadMetricSpecification' :: Maybe Text -> Maybe [MetricDimension] -> Text -> Text -> MetricStatistic -> CustomizedLoadMetricSpecification

-- | The unit of the metric.
[$sel:unit:CustomizedLoadMetricSpecification'] :: CustomizedLoadMetricSpecification -> Maybe Text

-- | The dimensions of the metric.
--   
--   Conditional: If you published your metric with dimensions, you must
--   specify the same dimensions in your customized load metric
--   specification.
[$sel:dimensions:CustomizedLoadMetricSpecification'] :: CustomizedLoadMetricSpecification -> Maybe [MetricDimension]

-- | The name of the metric.
[$sel:metricName:CustomizedLoadMetricSpecification'] :: CustomizedLoadMetricSpecification -> Text

-- | The namespace of the metric.
[$sel:namespace:CustomizedLoadMetricSpecification'] :: CustomizedLoadMetricSpecification -> Text

-- | The statistic of the metric. The only valid value is <tt>Sum</tt>.
[$sel:statistic:CustomizedLoadMetricSpecification'] :: CustomizedLoadMetricSpecification -> MetricStatistic

-- | Create a value of <a>CustomizedLoadMetricSpecification</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:unit:CustomizedLoadMetricSpecification'</a>,
--   <a>customizedLoadMetricSpecification_unit</a> - The unit of the
--   metric.
--   
--   <a>$sel:dimensions:CustomizedLoadMetricSpecification'</a>,
--   <a>customizedLoadMetricSpecification_dimensions</a> - The dimensions
--   of the metric.
--   
--   Conditional: If you published your metric with dimensions, you must
--   specify the same dimensions in your customized load metric
--   specification.
--   
--   <a>$sel:metricName:CustomizedLoadMetricSpecification'</a>,
--   <a>customizedLoadMetricSpecification_metricName</a> - The name of the
--   metric.
--   
--   <a>$sel:namespace:CustomizedLoadMetricSpecification'</a>,
--   <a>customizedLoadMetricSpecification_namespace</a> - The namespace of
--   the metric.
--   
--   <a>$sel:statistic:CustomizedLoadMetricSpecification'</a>,
--   <a>customizedLoadMetricSpecification_statistic</a> - The statistic of
--   the metric. The only valid value is <tt>Sum</tt>.
newCustomizedLoadMetricSpecification :: Text -> Text -> MetricStatistic -> CustomizedLoadMetricSpecification

-- | The unit of the metric.
customizedLoadMetricSpecification_unit :: Lens' CustomizedLoadMetricSpecification (Maybe Text)

-- | The dimensions of the metric.
--   
--   Conditional: If you published your metric with dimensions, you must
--   specify the same dimensions in your customized load metric
--   specification.
customizedLoadMetricSpecification_dimensions :: Lens' CustomizedLoadMetricSpecification (Maybe [MetricDimension])

-- | The name of the metric.
customizedLoadMetricSpecification_metricName :: Lens' CustomizedLoadMetricSpecification Text

-- | The namespace of the metric.
customizedLoadMetricSpecification_namespace :: Lens' CustomizedLoadMetricSpecification Text

-- | The statistic of the metric. The only valid value is <tt>Sum</tt>.
customizedLoadMetricSpecification_statistic :: Lens' CustomizedLoadMetricSpecification MetricStatistic

-- | Represents a CloudWatch metric of your choosing that can be used for
--   dynamic scaling as part of a target tracking scaling policy.
--   
--   To create your customized scaling metric specification:
--   
--   <ul>
--   <li>Add values for each required parameter from CloudWatch. You can
--   use an existing metric, or a new metric that you create. To use your
--   own metric, you must first publish the metric to CloudWatch. For more
--   information, see <a>Publish Custom Metrics</a> in the <i>Amazon
--   CloudWatch User Guide</i>.</li>
--   <li>Choose a metric that changes proportionally with capacity. The
--   value of the metric should increase or decrease in inverse proportion
--   to the number of capacity units. That is, the value of the metric
--   should decrease when capacity increases.</li>
--   </ul>
--   
--   For information about terminology, available metrics, or how to
--   publish new metrics, see <a>Amazon CloudWatch Concepts</a> in the
--   <i>Amazon CloudWatch User Guide</i>.
--   
--   <i>See:</i> <a>newCustomizedScalingMetricSpecification</a> smart
--   constructor.
data CustomizedScalingMetricSpecification
CustomizedScalingMetricSpecification' :: Maybe Text -> Maybe [MetricDimension] -> Text -> Text -> MetricStatistic -> CustomizedScalingMetricSpecification

-- | The unit of the metric.
[$sel:unit:CustomizedScalingMetricSpecification'] :: CustomizedScalingMetricSpecification -> Maybe Text

-- | The dimensions of the metric.
--   
--   Conditional: If you published your metric with dimensions, you must
--   specify the same dimensions in your customized scaling metric
--   specification.
[$sel:dimensions:CustomizedScalingMetricSpecification'] :: CustomizedScalingMetricSpecification -> Maybe [MetricDimension]

-- | The name of the metric.
[$sel:metricName:CustomizedScalingMetricSpecification'] :: CustomizedScalingMetricSpecification -> Text

-- | The namespace of the metric.
[$sel:namespace:CustomizedScalingMetricSpecification'] :: CustomizedScalingMetricSpecification -> Text

-- | The statistic of the metric.
[$sel:statistic:CustomizedScalingMetricSpecification'] :: CustomizedScalingMetricSpecification -> MetricStatistic

-- | Create a value of <a>CustomizedScalingMetricSpecification</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:unit:CustomizedScalingMetricSpecification'</a>,
--   <a>customizedScalingMetricSpecification_unit</a> - The unit of the
--   metric.
--   
--   <a>$sel:dimensions:CustomizedScalingMetricSpecification'</a>,
--   <a>customizedScalingMetricSpecification_dimensions</a> - The
--   dimensions of the metric.
--   
--   Conditional: If you published your metric with dimensions, you must
--   specify the same dimensions in your customized scaling metric
--   specification.
--   
--   <a>$sel:metricName:CustomizedScalingMetricSpecification'</a>,
--   <a>customizedScalingMetricSpecification_metricName</a> - The name of
--   the metric.
--   
--   <a>$sel:namespace:CustomizedScalingMetricSpecification'</a>,
--   <a>customizedScalingMetricSpecification_namespace</a> - The namespace
--   of the metric.
--   
--   <a>$sel:statistic:CustomizedScalingMetricSpecification'</a>,
--   <a>customizedScalingMetricSpecification_statistic</a> - The statistic
--   of the metric.
newCustomizedScalingMetricSpecification :: Text -> Text -> MetricStatistic -> CustomizedScalingMetricSpecification

-- | The unit of the metric.
customizedScalingMetricSpecification_unit :: Lens' CustomizedScalingMetricSpecification (Maybe Text)

-- | The dimensions of the metric.
--   
--   Conditional: If you published your metric with dimensions, you must
--   specify the same dimensions in your customized scaling metric
--   specification.
customizedScalingMetricSpecification_dimensions :: Lens' CustomizedScalingMetricSpecification (Maybe [MetricDimension])

-- | The name of the metric.
customizedScalingMetricSpecification_metricName :: Lens' CustomizedScalingMetricSpecification Text

-- | The namespace of the metric.
customizedScalingMetricSpecification_namespace :: Lens' CustomizedScalingMetricSpecification Text

-- | The statistic of the metric.
customizedScalingMetricSpecification_statistic :: Lens' CustomizedScalingMetricSpecification MetricStatistic

-- | Represents a single value in the forecast data used for predictive
--   scaling.
--   
--   <i>See:</i> <a>newDatapoint</a> smart constructor.
data Datapoint
Datapoint' :: Maybe POSIX -> Maybe Double -> Datapoint

-- | The time stamp for the data point in UTC format.
[$sel:timestamp:Datapoint'] :: Datapoint -> Maybe POSIX

-- | The value of the data point.
[$sel:value:Datapoint'] :: Datapoint -> Maybe Double

-- | Create a value of <a>Datapoint</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:timestamp:Datapoint'</a>, <a>datapoint_timestamp</a> - The
--   time stamp for the data point in UTC format.
--   
--   <a>$sel:value:Datapoint'</a>, <a>datapoint_value</a> - The value of
--   the data point.
newDatapoint :: Datapoint

-- | The time stamp for the data point in UTC format.
datapoint_timestamp :: Lens' Datapoint (Maybe UTCTime)

-- | The value of the data point.
datapoint_value :: Lens' Datapoint (Maybe Double)

-- | Represents a dimension for a customized metric.
--   
--   <i>See:</i> <a>newMetricDimension</a> smart constructor.
data MetricDimension
MetricDimension' :: Text -> Text -> MetricDimension

-- | The name of the dimension.
[$sel:name:MetricDimension'] :: MetricDimension -> Text

-- | The value of the dimension.
[$sel:value:MetricDimension'] :: MetricDimension -> Text

-- | Create a value of <a>MetricDimension</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:MetricDimension'</a>, <a>metricDimension_name</a> - The
--   name of the dimension.
--   
--   <a>$sel:value:MetricDimension'</a>, <a>metricDimension_value</a> - The
--   value of the dimension.
newMetricDimension :: Text -> Text -> MetricDimension

-- | The name of the dimension.
metricDimension_name :: Lens' MetricDimension Text

-- | The value of the dimension.
metricDimension_value :: Lens' MetricDimension Text

-- | Represents a predefined metric that can be used for predictive
--   scaling.
--   
--   After creating your scaling plan, you can use the AWS Auto Scaling
--   console to visualize forecasts for the specified metric. For more
--   information, see <a>View Scaling Information for a Resource</a> in the
--   <i>AWS Auto Scaling User Guide</i>.
--   
--   <i>See:</i> <a>newPredefinedLoadMetricSpecification</a> smart
--   constructor.
data PredefinedLoadMetricSpecification
PredefinedLoadMetricSpecification' :: Maybe Text -> LoadMetricType -> PredefinedLoadMetricSpecification

-- | Identifies the resource associated with the metric type. You can't
--   specify a resource label unless the metric type is
--   <tt>ALBTargetGroupRequestCount</tt> and there is a target group for an
--   Application Load Balancer attached to the Auto Scaling group.
--   
--   You create the resource label by appending the final portion of the
--   load balancer ARN and the final portion of the target group ARN into a
--   single value, separated by a forward slash (/). The format is
--   app/&lt;load-balancer-name&gt;/&lt;load-balancer-id&gt;/targetgroup/&lt;target-group-name&gt;/&lt;target-group-id&gt;,
--   where:
--   
--   <ul>
--   <li>app/&lt;load-balancer-name&gt;/&lt;load-balancer-id&gt; is the
--   final portion of the load balancer ARN</li>
--   <li>targetgroup/&lt;target-group-name&gt;/&lt;target-group-id&gt; is
--   the final portion of the target group ARN.</li>
--   </ul>
--   
--   This is an example:
--   app/EC2Co-EcsEl-1TKLTMITMM0EO/f37c06a68c1748aa/targetgroup/EC2Co-Defau-LDNM7Q3ZH1ZN/6d4ea56ca2d6a18d.
--   
--   To find the ARN for an Application Load Balancer, use the
--   <a>DescribeLoadBalancers</a> API operation. To find the ARN for the
--   target group, use the <a>DescribeTargetGroups</a> API operation.
[$sel:resourceLabel:PredefinedLoadMetricSpecification'] :: PredefinedLoadMetricSpecification -> Maybe Text

-- | The metric type.
[$sel:predefinedLoadMetricType:PredefinedLoadMetricSpecification'] :: PredefinedLoadMetricSpecification -> LoadMetricType

-- | Create a value of <a>PredefinedLoadMetricSpecification</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceLabel:PredefinedLoadMetricSpecification'</a>,
--   <a>predefinedLoadMetricSpecification_resourceLabel</a> - Identifies
--   the resource associated with the metric type. You can't specify a
--   resource label unless the metric type is
--   <tt>ALBTargetGroupRequestCount</tt> and there is a target group for an
--   Application Load Balancer attached to the Auto Scaling group.
--   
--   You create the resource label by appending the final portion of the
--   load balancer ARN and the final portion of the target group ARN into a
--   single value, separated by a forward slash (/). The format is
--   app/&lt;load-balancer-name&gt;/&lt;load-balancer-id&gt;/targetgroup/&lt;target-group-name&gt;/&lt;target-group-id&gt;,
--   where:
--   
--   <ul>
--   <li>app/&lt;load-balancer-name&gt;/&lt;load-balancer-id&gt; is the
--   final portion of the load balancer ARN</li>
--   <li>targetgroup/&lt;target-group-name&gt;/&lt;target-group-id&gt; is
--   the final portion of the target group ARN.</li>
--   </ul>
--   
--   This is an example:
--   app/EC2Co-EcsEl-1TKLTMITMM0EO/f37c06a68c1748aa/targetgroup/EC2Co-Defau-LDNM7Q3ZH1ZN/6d4ea56ca2d6a18d.
--   
--   To find the ARN for an Application Load Balancer, use the
--   <a>DescribeLoadBalancers</a> API operation. To find the ARN for the
--   target group, use the <a>DescribeTargetGroups</a> API operation.
--   
--   
--   <a>$sel:predefinedLoadMetricType:PredefinedLoadMetricSpecification'</a>,
--   <a>predefinedLoadMetricSpecification_predefinedLoadMetricType</a> -
--   The metric type.
newPredefinedLoadMetricSpecification :: LoadMetricType -> PredefinedLoadMetricSpecification

-- | Identifies the resource associated with the metric type. You can't
--   specify a resource label unless the metric type is
--   <tt>ALBTargetGroupRequestCount</tt> and there is a target group for an
--   Application Load Balancer attached to the Auto Scaling group.
--   
--   You create the resource label by appending the final portion of the
--   load balancer ARN and the final portion of the target group ARN into a
--   single value, separated by a forward slash (/). The format is
--   app/&lt;load-balancer-name&gt;/&lt;load-balancer-id&gt;/targetgroup/&lt;target-group-name&gt;/&lt;target-group-id&gt;,
--   where:
--   
--   <ul>
--   <li>app/&lt;load-balancer-name&gt;/&lt;load-balancer-id&gt; is the
--   final portion of the load balancer ARN</li>
--   <li>targetgroup/&lt;target-group-name&gt;/&lt;target-group-id&gt; is
--   the final portion of the target group ARN.</li>
--   </ul>
--   
--   This is an example:
--   app/EC2Co-EcsEl-1TKLTMITMM0EO/f37c06a68c1748aa/targetgroup/EC2Co-Defau-LDNM7Q3ZH1ZN/6d4ea56ca2d6a18d.
--   
--   To find the ARN for an Application Load Balancer, use the
--   <a>DescribeLoadBalancers</a> API operation. To find the ARN for the
--   target group, use the <a>DescribeTargetGroups</a> API operation.
predefinedLoadMetricSpecification_resourceLabel :: Lens' PredefinedLoadMetricSpecification (Maybe Text)

-- | The metric type.
predefinedLoadMetricSpecification_predefinedLoadMetricType :: Lens' PredefinedLoadMetricSpecification LoadMetricType

-- | Represents a predefined metric that can be used for dynamic scaling as
--   part of a target tracking scaling policy.
--   
--   <i>See:</i> <a>newPredefinedScalingMetricSpecification</a> smart
--   constructor.
data PredefinedScalingMetricSpecification
PredefinedScalingMetricSpecification' :: Maybe Text -> ScalingMetricType -> PredefinedScalingMetricSpecification

-- | Identifies the resource associated with the metric type. You can't
--   specify a resource label unless the metric type is
--   <tt>ALBRequestCountPerTarget</tt> and there is a target group for an
--   Application Load Balancer attached to the Auto Scaling group, Spot
--   Fleet request, or ECS service.
--   
--   You create the resource label by appending the final portion of the
--   load balancer ARN and the final portion of the target group ARN into a
--   single value, separated by a forward slash (/). The format is
--   app/&lt;load-balancer-name&gt;/&lt;load-balancer-id&gt;/targetgroup/&lt;target-group-name&gt;/&lt;target-group-id&gt;,
--   where:
--   
--   <ul>
--   <li>app/&lt;load-balancer-name&gt;/&lt;load-balancer-id&gt; is the
--   final portion of the load balancer ARN</li>
--   <li>targetgroup/&lt;target-group-name&gt;/&lt;target-group-id&gt; is
--   the final portion of the target group ARN.</li>
--   </ul>
--   
--   This is an example:
--   app/EC2Co-EcsEl-1TKLTMITMM0EO/f37c06a68c1748aa/targetgroup/EC2Co-Defau-LDNM7Q3ZH1ZN/6d4ea56ca2d6a18d.
--   
--   To find the ARN for an Application Load Balancer, use the
--   <a>DescribeLoadBalancers</a> API operation. To find the ARN for the
--   target group, use the <a>DescribeTargetGroups</a> API operation.
[$sel:resourceLabel:PredefinedScalingMetricSpecification'] :: PredefinedScalingMetricSpecification -> Maybe Text

-- | The metric type. The <tt>ALBRequestCountPerTarget</tt> metric type
--   applies only to Auto Scaling groups, Spot Fleet requests, and ECS
--   services.
[$sel:predefinedScalingMetricType:PredefinedScalingMetricSpecification'] :: PredefinedScalingMetricSpecification -> ScalingMetricType

-- | Create a value of <a>PredefinedScalingMetricSpecification</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceLabel:PredefinedScalingMetricSpecification'</a>,
--   <a>predefinedScalingMetricSpecification_resourceLabel</a> - Identifies
--   the resource associated with the metric type. You can't specify a
--   resource label unless the metric type is
--   <tt>ALBRequestCountPerTarget</tt> and there is a target group for an
--   Application Load Balancer attached to the Auto Scaling group, Spot
--   Fleet request, or ECS service.
--   
--   You create the resource label by appending the final portion of the
--   load balancer ARN and the final portion of the target group ARN into a
--   single value, separated by a forward slash (/). The format is
--   app/&lt;load-balancer-name&gt;/&lt;load-balancer-id&gt;/targetgroup/&lt;target-group-name&gt;/&lt;target-group-id&gt;,
--   where:
--   
--   <ul>
--   <li>app/&lt;load-balancer-name&gt;/&lt;load-balancer-id&gt; is the
--   final portion of the load balancer ARN</li>
--   <li>targetgroup/&lt;target-group-name&gt;/&lt;target-group-id&gt; is
--   the final portion of the target group ARN.</li>
--   </ul>
--   
--   This is an example:
--   app/EC2Co-EcsEl-1TKLTMITMM0EO/f37c06a68c1748aa/targetgroup/EC2Co-Defau-LDNM7Q3ZH1ZN/6d4ea56ca2d6a18d.
--   
--   To find the ARN for an Application Load Balancer, use the
--   <a>DescribeLoadBalancers</a> API operation. To find the ARN for the
--   target group, use the <a>DescribeTargetGroups</a> API operation.
--   
--   
--   <a>$sel:predefinedScalingMetricType:PredefinedScalingMetricSpecification'</a>,
--   <a>predefinedScalingMetricSpecification_predefinedScalingMetricType</a>
--   - The metric type. The <tt>ALBRequestCountPerTarget</tt> metric type
--   applies only to Auto Scaling groups, Spot Fleet requests, and ECS
--   services.
newPredefinedScalingMetricSpecification :: ScalingMetricType -> PredefinedScalingMetricSpecification

-- | Identifies the resource associated with the metric type. You can't
--   specify a resource label unless the metric type is
--   <tt>ALBRequestCountPerTarget</tt> and there is a target group for an
--   Application Load Balancer attached to the Auto Scaling group, Spot
--   Fleet request, or ECS service.
--   
--   You create the resource label by appending the final portion of the
--   load balancer ARN and the final portion of the target group ARN into a
--   single value, separated by a forward slash (/). The format is
--   app/&lt;load-balancer-name&gt;/&lt;load-balancer-id&gt;/targetgroup/&lt;target-group-name&gt;/&lt;target-group-id&gt;,
--   where:
--   
--   <ul>
--   <li>app/&lt;load-balancer-name&gt;/&lt;load-balancer-id&gt; is the
--   final portion of the load balancer ARN</li>
--   <li>targetgroup/&lt;target-group-name&gt;/&lt;target-group-id&gt; is
--   the final portion of the target group ARN.</li>
--   </ul>
--   
--   This is an example:
--   app/EC2Co-EcsEl-1TKLTMITMM0EO/f37c06a68c1748aa/targetgroup/EC2Co-Defau-LDNM7Q3ZH1ZN/6d4ea56ca2d6a18d.
--   
--   To find the ARN for an Application Load Balancer, use the
--   <a>DescribeLoadBalancers</a> API operation. To find the ARN for the
--   target group, use the <a>DescribeTargetGroups</a> API operation.
predefinedScalingMetricSpecification_resourceLabel :: Lens' PredefinedScalingMetricSpecification (Maybe Text)

-- | The metric type. The <tt>ALBRequestCountPerTarget</tt> metric type
--   applies only to Auto Scaling groups, Spot Fleet requests, and ECS
--   services.
predefinedScalingMetricSpecification_predefinedScalingMetricType :: Lens' PredefinedScalingMetricSpecification ScalingMetricType

-- | Describes a scaling instruction for a scalable resource in a scaling
--   plan. Each scaling instruction applies to one resource.
--   
--   AWS Auto Scaling creates target tracking scaling policies based on the
--   scaling instructions. Target tracking scaling policies adjust the
--   capacity of your scalable resource as required to maintain resource
--   utilization at the target value that you specified.
--   
--   AWS Auto Scaling also configures predictive scaling for your Amazon
--   EC2 Auto Scaling groups using a subset of parameters, including the
--   load metric, the scaling metric, the target value for the scaling
--   metric, the predictive scaling mode (forecast and scale or forecast
--   only), and the desired behavior when the forecast capacity exceeds the
--   maximum capacity of the resource. With predictive scaling, AWS Auto
--   Scaling generates forecasts with traffic predictions for the two days
--   ahead and schedules scaling actions that proactively add and remove
--   resource capacity to match the forecast.
--   
--   We recommend waiting a minimum of 24 hours after creating an Auto
--   Scaling group to configure predictive scaling. At minimum, there must
--   be 24 hours of historical data to generate a forecast. For more
--   information, see <a>Best Practices for AWS Auto Scaling</a> in the
--   <i>AWS Auto Scaling User Guide</i>.
--   
--   <i>See:</i> <a>newScalingInstruction</a> smart constructor.
data ScalingInstruction
ScalingInstruction' :: Maybe Bool -> Maybe PredefinedLoadMetricSpecification -> Maybe PredictiveScalingMaxCapacityBehavior -> Maybe CustomizedLoadMetricSpecification -> Maybe Int -> Maybe PredictiveScalingMode -> Maybe ScalingPolicyUpdateBehavior -> Maybe Natural -> ServiceNamespace -> Text -> ScalableDimension -> Int -> Int -> [TargetTrackingConfiguration] -> ScalingInstruction

-- | Controls whether dynamic scaling by AWS Auto Scaling is disabled. When
--   dynamic scaling is enabled, AWS Auto Scaling creates target tracking
--   scaling policies based on the specified target tracking
--   configurations.
--   
--   The default is enabled (<tt>false</tt>).
[$sel:disableDynamicScaling:ScalingInstruction'] :: ScalingInstruction -> Maybe Bool

-- | The predefined load metric to use for predictive scaling. This
--   parameter or a <b>CustomizedLoadMetricSpecification</b> is required
--   when configuring predictive scaling, and cannot be used otherwise.
[$sel:predefinedLoadMetricSpecification:ScalingInstruction'] :: ScalingInstruction -> Maybe PredefinedLoadMetricSpecification

-- | Defines the behavior that should be applied if the forecast capacity
--   approaches or exceeds the maximum capacity specified for the resource.
--   The default value is <tt>SetForecastCapacityToMaxCapacity</tt>.
--   
--   The following are possible values:
--   
--   <ul>
--   <li><tt>SetForecastCapacityToMaxCapacity</tt> - AWS Auto Scaling
--   cannot scale resource capacity higher than the maximum capacity. The
--   maximum capacity is enforced as a hard limit.</li>
--   <li><tt>SetMaxCapacityToForecastCapacity</tt> - AWS Auto Scaling may
--   scale resource capacity higher than the maximum capacity to equal but
--   not exceed forecast capacity.</li>
--   <li><tt>SetMaxCapacityAboveForecastCapacity</tt> - AWS Auto Scaling
--   may scale resource capacity higher than the maximum capacity by a
--   specified buffer value. The intention is to give the target tracking
--   scaling policy extra capacity if unexpected traffic occurs.</li>
--   </ul>
--   
--   Only valid when configuring predictive scaling.
[$sel:predictiveScalingMaxCapacityBehavior:ScalingInstruction'] :: ScalingInstruction -> Maybe PredictiveScalingMaxCapacityBehavior

-- | The customized load metric to use for predictive scaling. This
--   parameter or a <b>PredefinedLoadMetricSpecification</b> is required
--   when configuring predictive scaling, and cannot be used otherwise.
[$sel:customizedLoadMetricSpecification:ScalingInstruction'] :: ScalingInstruction -> Maybe CustomizedLoadMetricSpecification

-- | The size of the capacity buffer to use when the forecast capacity is
--   close to or exceeds the maximum capacity. The value is specified as a
--   percentage relative to the forecast capacity. For example, if the
--   buffer is 10, this means a 10 percent buffer, such that if the
--   forecast capacity is 50, and the maximum capacity is 40, then the
--   effective maximum capacity is 55.
--   
--   Only valid when configuring predictive scaling. Required if the
--   <b>PredictiveScalingMaxCapacityBehavior</b> is set to
--   <tt>SetMaxCapacityAboveForecastCapacity</tt>, and cannot be used
--   otherwise.
--   
--   The range is 1-100.
[$sel:predictiveScalingMaxCapacityBuffer:ScalingInstruction'] :: ScalingInstruction -> Maybe Int

-- | The predictive scaling mode. The default value is
--   <tt>ForecastAndScale</tt>. Otherwise, AWS Auto Scaling forecasts
--   capacity but does not create any scheduled scaling actions based on
--   the capacity forecast.
[$sel:predictiveScalingMode:ScalingInstruction'] :: ScalingInstruction -> Maybe PredictiveScalingMode

-- | Controls whether a resource's externally created scaling policies are
--   kept or replaced.
--   
--   The default value is <tt>KeepExternalPolicies</tt>. If the parameter
--   is set to <tt>ReplaceExternalPolicies</tt>, any scaling policies that
--   are external to AWS Auto Scaling are deleted and new target tracking
--   scaling policies created.
--   
--   Only valid when configuring dynamic scaling.
--   
--   Condition: The number of existing policies to be replaced must be less
--   than or equal to 50. If there are more than 50 policies to be
--   replaced, AWS Auto Scaling keeps all existing policies and does not
--   create new ones.
[$sel:scalingPolicyUpdateBehavior:ScalingInstruction'] :: ScalingInstruction -> Maybe ScalingPolicyUpdateBehavior

-- | The amount of time, in seconds, to buffer the run time of scheduled
--   scaling actions when scaling out. For example, if the forecast says to
--   add capacity at 10:00 AM, and the buffer time is 5 minutes, then the
--   run time of the corresponding scheduled scaling action will be 9:55
--   AM. The intention is to give resources time to be provisioned. For
--   example, it can take a few minutes to launch an EC2 instance. The
--   actual amount of time required depends on several factors, such as the
--   size of the instance and whether there are startup scripts to
--   complete.
--   
--   The value must be less than the forecast interval duration of 3600
--   seconds (60 minutes). The default is 300 seconds.
--   
--   Only valid when configuring predictive scaling.
[$sel:scheduledActionBufferTime:ScalingInstruction'] :: ScalingInstruction -> Maybe Natural

-- | The namespace of the AWS service.
[$sel:serviceNamespace:ScalingInstruction'] :: ScalingInstruction -> ServiceNamespace

-- | The ID of the resource. This string consists of the resource type and
--   unique identifier.
--   
--   <ul>
--   <li>Auto Scaling group - The resource type is
--   <tt>autoScalingGroup</tt> and the unique identifier is the name of the
--   Auto Scaling group. Example: <tt>autoScalingGroup/my-asg</tt>.</li>
--   <li>ECS service - The resource type is <tt>service</tt> and the unique
--   identifier is the cluster name and service name. Example:
--   <tt>service/default/sample-webapp</tt>.</li>
--   <li>Spot Fleet request - The resource type is
--   <tt>spot-fleet-request</tt> and the unique identifier is the Spot
--   Fleet request ID. Example:
--   <tt>spot-fleet-request/sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE</tt>.</li>
--   <li>DynamoDB table - The resource type is <tt>table</tt> and the
--   unique identifier is the resource ID. Example:
--   <tt>table/my-table</tt>.</li>
--   <li>DynamoDB global secondary index - The resource type is
--   <tt>index</tt> and the unique identifier is the resource ID. Example:
--   <tt>table/my-table/index/my-table-index</tt>.</li>
--   <li>Aurora DB cluster - The resource type is <tt>cluster</tt> and the
--   unique identifier is the cluster name. Example:
--   <tt>cluster:my-db-cluster</tt>.</li>
--   </ul>
[$sel:resourceId:ScalingInstruction'] :: ScalingInstruction -> Text

-- | The scalable dimension associated with the resource.
--   
--   <ul>
--   <li><tt>autoscaling:autoScalingGroup:DesiredCapacity</tt> - The
--   desired capacity of an Auto Scaling group.</li>
--   <li><tt>ecs:service:DesiredCount</tt> - The desired task count of an
--   ECS service.</li>
--   <li><tt>ec2:spot-fleet-request:TargetCapacity</tt> - The target
--   capacity of a Spot Fleet request.</li>
--   <li><tt>dynamodb:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:table:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:index:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>dynamodb:index:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>rds:cluster:ReadReplicaCount</tt> - The count of Aurora
--   Replicas in an Aurora DB cluster. Available for Aurora
--   MySQL-compatible edition and Aurora PostgreSQL-compatible
--   edition.</li>
--   </ul>
[$sel:scalableDimension:ScalingInstruction'] :: ScalingInstruction -> ScalableDimension

-- | The minimum capacity of the resource.
[$sel:minCapacity:ScalingInstruction'] :: ScalingInstruction -> Int

-- | The maximum capacity of the resource. The exception to this upper
--   limit is if you specify a non-default setting for
--   <b>PredictiveScalingMaxCapacityBehavior</b>.
[$sel:maxCapacity:ScalingInstruction'] :: ScalingInstruction -> Int

-- | The target tracking configurations (up to 10). Each of these
--   structures must specify a unique scaling metric and a target value for
--   the metric.
[$sel:targetTrackingConfigurations:ScalingInstruction'] :: ScalingInstruction -> [TargetTrackingConfiguration]

-- | Create a value of <a>ScalingInstruction</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:disableDynamicScaling:ScalingInstruction'</a>,
--   <a>scalingInstruction_disableDynamicScaling</a> - Controls whether
--   dynamic scaling by AWS Auto Scaling is disabled. When dynamic scaling
--   is enabled, AWS Auto Scaling creates target tracking scaling policies
--   based on the specified target tracking configurations.
--   
--   The default is enabled (<tt>false</tt>).
--   
--   <a>$sel:predefinedLoadMetricSpecification:ScalingInstruction'</a>,
--   <a>scalingInstruction_predefinedLoadMetricSpecification</a> - The
--   predefined load metric to use for predictive scaling. This parameter
--   or a <b>CustomizedLoadMetricSpecification</b> is required when
--   configuring predictive scaling, and cannot be used otherwise.
--   
--   <a>$sel:predictiveScalingMaxCapacityBehavior:ScalingInstruction'</a>,
--   <a>scalingInstruction_predictiveScalingMaxCapacityBehavior</a> -
--   Defines the behavior that should be applied if the forecast capacity
--   approaches or exceeds the maximum capacity specified for the resource.
--   The default value is <tt>SetForecastCapacityToMaxCapacity</tt>.
--   
--   The following are possible values:
--   
--   <ul>
--   <li><tt>SetForecastCapacityToMaxCapacity</tt> - AWS Auto Scaling
--   cannot scale resource capacity higher than the maximum capacity. The
--   maximum capacity is enforced as a hard limit.</li>
--   <li><tt>SetMaxCapacityToForecastCapacity</tt> - AWS Auto Scaling may
--   scale resource capacity higher than the maximum capacity to equal but
--   not exceed forecast capacity.</li>
--   <li><tt>SetMaxCapacityAboveForecastCapacity</tt> - AWS Auto Scaling
--   may scale resource capacity higher than the maximum capacity by a
--   specified buffer value. The intention is to give the target tracking
--   scaling policy extra capacity if unexpected traffic occurs.</li>
--   </ul>
--   
--   Only valid when configuring predictive scaling.
--   
--   <a>$sel:customizedLoadMetricSpecification:ScalingInstruction'</a>,
--   <a>scalingInstruction_customizedLoadMetricSpecification</a> - The
--   customized load metric to use for predictive scaling. This parameter
--   or a <b>PredefinedLoadMetricSpecification</b> is required when
--   configuring predictive scaling, and cannot be used otherwise.
--   
--   <a>$sel:predictiveScalingMaxCapacityBuffer:ScalingInstruction'</a>,
--   <a>scalingInstruction_predictiveScalingMaxCapacityBuffer</a> - The
--   size of the capacity buffer to use when the forecast capacity is close
--   to or exceeds the maximum capacity. The value is specified as a
--   percentage relative to the forecast capacity. For example, if the
--   buffer is 10, this means a 10 percent buffer, such that if the
--   forecast capacity is 50, and the maximum capacity is 40, then the
--   effective maximum capacity is 55.
--   
--   Only valid when configuring predictive scaling. Required if the
--   <b>PredictiveScalingMaxCapacityBehavior</b> is set to
--   <tt>SetMaxCapacityAboveForecastCapacity</tt>, and cannot be used
--   otherwise.
--   
--   The range is 1-100.
--   
--   <a>$sel:predictiveScalingMode:ScalingInstruction'</a>,
--   <a>scalingInstruction_predictiveScalingMode</a> - The predictive
--   scaling mode. The default value is <tt>ForecastAndScale</tt>.
--   Otherwise, AWS Auto Scaling forecasts capacity but does not create any
--   scheduled scaling actions based on the capacity forecast.
--   
--   <a>$sel:scalingPolicyUpdateBehavior:ScalingInstruction'</a>,
--   <a>scalingInstruction_scalingPolicyUpdateBehavior</a> - Controls
--   whether a resource's externally created scaling policies are kept or
--   replaced.
--   
--   The default value is <tt>KeepExternalPolicies</tt>. If the parameter
--   is set to <tt>ReplaceExternalPolicies</tt>, any scaling policies that
--   are external to AWS Auto Scaling are deleted and new target tracking
--   scaling policies created.
--   
--   Only valid when configuring dynamic scaling.
--   
--   Condition: The number of existing policies to be replaced must be less
--   than or equal to 50. If there are more than 50 policies to be
--   replaced, AWS Auto Scaling keeps all existing policies and does not
--   create new ones.
--   
--   <a>$sel:scheduledActionBufferTime:ScalingInstruction'</a>,
--   <a>scalingInstruction_scheduledActionBufferTime</a> - The amount of
--   time, in seconds, to buffer the run time of scheduled scaling actions
--   when scaling out. For example, if the forecast says to add capacity at
--   10:00 AM, and the buffer time is 5 minutes, then the run time of the
--   corresponding scheduled scaling action will be 9:55 AM. The intention
--   is to give resources time to be provisioned. For example, it can take
--   a few minutes to launch an EC2 instance. The actual amount of time
--   required depends on several factors, such as the size of the instance
--   and whether there are startup scripts to complete.
--   
--   The value must be less than the forecast interval duration of 3600
--   seconds (60 minutes). The default is 300 seconds.
--   
--   Only valid when configuring predictive scaling.
--   
--   <a>$sel:serviceNamespace:ScalingInstruction'</a>,
--   <a>scalingInstruction_serviceNamespace</a> - The namespace of the AWS
--   service.
--   
--   <a>$sel:resourceId:ScalingInstruction'</a>,
--   <a>scalingInstruction_resourceId</a> - The ID of the resource. This
--   string consists of the resource type and unique identifier.
--   
--   <ul>
--   <li>Auto Scaling group - The resource type is
--   <tt>autoScalingGroup</tt> and the unique identifier is the name of the
--   Auto Scaling group. Example: <tt>autoScalingGroup/my-asg</tt>.</li>
--   <li>ECS service - The resource type is <tt>service</tt> and the unique
--   identifier is the cluster name and service name. Example:
--   <tt>service/default/sample-webapp</tt>.</li>
--   <li>Spot Fleet request - The resource type is
--   <tt>spot-fleet-request</tt> and the unique identifier is the Spot
--   Fleet request ID. Example:
--   <tt>spot-fleet-request/sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE</tt>.</li>
--   <li>DynamoDB table - The resource type is <tt>table</tt> and the
--   unique identifier is the resource ID. Example:
--   <tt>table/my-table</tt>.</li>
--   <li>DynamoDB global secondary index - The resource type is
--   <tt>index</tt> and the unique identifier is the resource ID. Example:
--   <tt>table/my-table/index/my-table-index</tt>.</li>
--   <li>Aurora DB cluster - The resource type is <tt>cluster</tt> and the
--   unique identifier is the cluster name. Example:
--   <tt>cluster:my-db-cluster</tt>.</li>
--   </ul>
--   
--   <a>$sel:scalableDimension:ScalingInstruction'</a>,
--   <a>scalingInstruction_scalableDimension</a> - The scalable dimension
--   associated with the resource.
--   
--   <ul>
--   <li><tt>autoscaling:autoScalingGroup:DesiredCapacity</tt> - The
--   desired capacity of an Auto Scaling group.</li>
--   <li><tt>ecs:service:DesiredCount</tt> - The desired task count of an
--   ECS service.</li>
--   <li><tt>ec2:spot-fleet-request:TargetCapacity</tt> - The target
--   capacity of a Spot Fleet request.</li>
--   <li><tt>dynamodb:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:table:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:index:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>dynamodb:index:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>rds:cluster:ReadReplicaCount</tt> - The count of Aurora
--   Replicas in an Aurora DB cluster. Available for Aurora
--   MySQL-compatible edition and Aurora PostgreSQL-compatible
--   edition.</li>
--   </ul>
--   
--   <a>$sel:minCapacity:ScalingInstruction'</a>,
--   <a>scalingInstruction_minCapacity</a> - The minimum capacity of the
--   resource.
--   
--   <a>$sel:maxCapacity:ScalingInstruction'</a>,
--   <a>scalingInstruction_maxCapacity</a> - The maximum capacity of the
--   resource. The exception to this upper limit is if you specify a
--   non-default setting for <b>PredictiveScalingMaxCapacityBehavior</b>.
--   
--   <a>$sel:targetTrackingConfigurations:ScalingInstruction'</a>,
--   <a>scalingInstruction_targetTrackingConfigurations</a> - The target
--   tracking configurations (up to 10). Each of these structures must
--   specify a unique scaling metric and a target value for the metric.
newScalingInstruction :: ServiceNamespace -> Text -> ScalableDimension -> Int -> Int -> ScalingInstruction

-- | Controls whether dynamic scaling by AWS Auto Scaling is disabled. When
--   dynamic scaling is enabled, AWS Auto Scaling creates target tracking
--   scaling policies based on the specified target tracking
--   configurations.
--   
--   The default is enabled (<tt>false</tt>).
scalingInstruction_disableDynamicScaling :: Lens' ScalingInstruction (Maybe Bool)

-- | The predefined load metric to use for predictive scaling. This
--   parameter or a <b>CustomizedLoadMetricSpecification</b> is required
--   when configuring predictive scaling, and cannot be used otherwise.
scalingInstruction_predefinedLoadMetricSpecification :: Lens' ScalingInstruction (Maybe PredefinedLoadMetricSpecification)

-- | Defines the behavior that should be applied if the forecast capacity
--   approaches or exceeds the maximum capacity specified for the resource.
--   The default value is <tt>SetForecastCapacityToMaxCapacity</tt>.
--   
--   The following are possible values:
--   
--   <ul>
--   <li><tt>SetForecastCapacityToMaxCapacity</tt> - AWS Auto Scaling
--   cannot scale resource capacity higher than the maximum capacity. The
--   maximum capacity is enforced as a hard limit.</li>
--   <li><tt>SetMaxCapacityToForecastCapacity</tt> - AWS Auto Scaling may
--   scale resource capacity higher than the maximum capacity to equal but
--   not exceed forecast capacity.</li>
--   <li><tt>SetMaxCapacityAboveForecastCapacity</tt> - AWS Auto Scaling
--   may scale resource capacity higher than the maximum capacity by a
--   specified buffer value. The intention is to give the target tracking
--   scaling policy extra capacity if unexpected traffic occurs.</li>
--   </ul>
--   
--   Only valid when configuring predictive scaling.
scalingInstruction_predictiveScalingMaxCapacityBehavior :: Lens' ScalingInstruction (Maybe PredictiveScalingMaxCapacityBehavior)

-- | The customized load metric to use for predictive scaling. This
--   parameter or a <b>PredefinedLoadMetricSpecification</b> is required
--   when configuring predictive scaling, and cannot be used otherwise.
scalingInstruction_customizedLoadMetricSpecification :: Lens' ScalingInstruction (Maybe CustomizedLoadMetricSpecification)

-- | The size of the capacity buffer to use when the forecast capacity is
--   close to or exceeds the maximum capacity. The value is specified as a
--   percentage relative to the forecast capacity. For example, if the
--   buffer is 10, this means a 10 percent buffer, such that if the
--   forecast capacity is 50, and the maximum capacity is 40, then the
--   effective maximum capacity is 55.
--   
--   Only valid when configuring predictive scaling. Required if the
--   <b>PredictiveScalingMaxCapacityBehavior</b> is set to
--   <tt>SetMaxCapacityAboveForecastCapacity</tt>, and cannot be used
--   otherwise.
--   
--   The range is 1-100.
scalingInstruction_predictiveScalingMaxCapacityBuffer :: Lens' ScalingInstruction (Maybe Int)

-- | The predictive scaling mode. The default value is
--   <tt>ForecastAndScale</tt>. Otherwise, AWS Auto Scaling forecasts
--   capacity but does not create any scheduled scaling actions based on
--   the capacity forecast.
scalingInstruction_predictiveScalingMode :: Lens' ScalingInstruction (Maybe PredictiveScalingMode)

-- | Controls whether a resource's externally created scaling policies are
--   kept or replaced.
--   
--   The default value is <tt>KeepExternalPolicies</tt>. If the parameter
--   is set to <tt>ReplaceExternalPolicies</tt>, any scaling policies that
--   are external to AWS Auto Scaling are deleted and new target tracking
--   scaling policies created.
--   
--   Only valid when configuring dynamic scaling.
--   
--   Condition: The number of existing policies to be replaced must be less
--   than or equal to 50. If there are more than 50 policies to be
--   replaced, AWS Auto Scaling keeps all existing policies and does not
--   create new ones.
scalingInstruction_scalingPolicyUpdateBehavior :: Lens' ScalingInstruction (Maybe ScalingPolicyUpdateBehavior)

-- | The amount of time, in seconds, to buffer the run time of scheduled
--   scaling actions when scaling out. For example, if the forecast says to
--   add capacity at 10:00 AM, and the buffer time is 5 minutes, then the
--   run time of the corresponding scheduled scaling action will be 9:55
--   AM. The intention is to give resources time to be provisioned. For
--   example, it can take a few minutes to launch an EC2 instance. The
--   actual amount of time required depends on several factors, such as the
--   size of the instance and whether there are startup scripts to
--   complete.
--   
--   The value must be less than the forecast interval duration of 3600
--   seconds (60 minutes). The default is 300 seconds.
--   
--   Only valid when configuring predictive scaling.
scalingInstruction_scheduledActionBufferTime :: Lens' ScalingInstruction (Maybe Natural)

-- | The namespace of the AWS service.
scalingInstruction_serviceNamespace :: Lens' ScalingInstruction ServiceNamespace

-- | The ID of the resource. This string consists of the resource type and
--   unique identifier.
--   
--   <ul>
--   <li>Auto Scaling group - The resource type is
--   <tt>autoScalingGroup</tt> and the unique identifier is the name of the
--   Auto Scaling group. Example: <tt>autoScalingGroup/my-asg</tt>.</li>
--   <li>ECS service - The resource type is <tt>service</tt> and the unique
--   identifier is the cluster name and service name. Example:
--   <tt>service/default/sample-webapp</tt>.</li>
--   <li>Spot Fleet request - The resource type is
--   <tt>spot-fleet-request</tt> and the unique identifier is the Spot
--   Fleet request ID. Example:
--   <tt>spot-fleet-request/sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE</tt>.</li>
--   <li>DynamoDB table - The resource type is <tt>table</tt> and the
--   unique identifier is the resource ID. Example:
--   <tt>table/my-table</tt>.</li>
--   <li>DynamoDB global secondary index - The resource type is
--   <tt>index</tt> and the unique identifier is the resource ID. Example:
--   <tt>table/my-table/index/my-table-index</tt>.</li>
--   <li>Aurora DB cluster - The resource type is <tt>cluster</tt> and the
--   unique identifier is the cluster name. Example:
--   <tt>cluster:my-db-cluster</tt>.</li>
--   </ul>
scalingInstruction_resourceId :: Lens' ScalingInstruction Text

-- | The scalable dimension associated with the resource.
--   
--   <ul>
--   <li><tt>autoscaling:autoScalingGroup:DesiredCapacity</tt> - The
--   desired capacity of an Auto Scaling group.</li>
--   <li><tt>ecs:service:DesiredCount</tt> - The desired task count of an
--   ECS service.</li>
--   <li><tt>ec2:spot-fleet-request:TargetCapacity</tt> - The target
--   capacity of a Spot Fleet request.</li>
--   <li><tt>dynamodb:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:table:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:index:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>dynamodb:index:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>rds:cluster:ReadReplicaCount</tt> - The count of Aurora
--   Replicas in an Aurora DB cluster. Available for Aurora
--   MySQL-compatible edition and Aurora PostgreSQL-compatible
--   edition.</li>
--   </ul>
scalingInstruction_scalableDimension :: Lens' ScalingInstruction ScalableDimension

-- | The minimum capacity of the resource.
scalingInstruction_minCapacity :: Lens' ScalingInstruction Int

-- | The maximum capacity of the resource. The exception to this upper
--   limit is if you specify a non-default setting for
--   <b>PredictiveScalingMaxCapacityBehavior</b>.
scalingInstruction_maxCapacity :: Lens' ScalingInstruction Int

-- | The target tracking configurations (up to 10). Each of these
--   structures must specify a unique scaling metric and a target value for
--   the metric.
scalingInstruction_targetTrackingConfigurations :: Lens' ScalingInstruction [TargetTrackingConfiguration]

-- | Represents a scaling plan.
--   
--   <i>See:</i> <a>newScalingPlan</a> smart constructor.
data ScalingPlan
ScalingPlan' :: Maybe Text -> Maybe POSIX -> Maybe POSIX -> Text -> Integer -> ApplicationSource -> [ScalingInstruction] -> ScalingPlanStatusCode -> ScalingPlan

-- | A simple message about the current status of the scaling plan.
[$sel:statusMessage:ScalingPlan'] :: ScalingPlan -> Maybe Text

-- | The Unix time stamp when the scaling plan was created.
[$sel:creationTime:ScalingPlan'] :: ScalingPlan -> Maybe POSIX

-- | The Unix time stamp when the scaling plan entered the current status.
[$sel:statusStartTime:ScalingPlan'] :: ScalingPlan -> Maybe POSIX

-- | The name of the scaling plan.
[$sel:scalingPlanName:ScalingPlan'] :: ScalingPlan -> Text

-- | The version number of the scaling plan.
[$sel:scalingPlanVersion:ScalingPlan'] :: ScalingPlan -> Integer

-- | A CloudFormation stack or a set of tags. You can create one scaling
--   plan per application source.
[$sel:applicationSource:ScalingPlan'] :: ScalingPlan -> ApplicationSource

-- | The scaling instructions.
[$sel:scalingInstructions:ScalingPlan'] :: ScalingPlan -> [ScalingInstruction]

-- | The status of the scaling plan.
--   
--   <ul>
--   <li><tt>Active</tt> - The scaling plan is active.</li>
--   <li><tt>ActiveWithProblems</tt> - The scaling plan is active, but the
--   scaling configuration for one or more resources could not be
--   applied.</li>
--   <li><tt>CreationInProgress</tt> - The scaling plan is being
--   created.</li>
--   <li><tt>CreationFailed</tt> - The scaling plan could not be
--   created.</li>
--   <li><tt>DeletionInProgress</tt> - The scaling plan is being
--   deleted.</li>
--   <li><tt>DeletionFailed</tt> - The scaling plan could not be
--   deleted.</li>
--   <li><tt>UpdateInProgress</tt> - The scaling plan is being
--   updated.</li>
--   <li><tt>UpdateFailed</tt> - The scaling plan could not be
--   updated.</li>
--   </ul>
[$sel:statusCode:ScalingPlan'] :: ScalingPlan -> ScalingPlanStatusCode

-- | Create a value of <a>ScalingPlan</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:statusMessage:ScalingPlan'</a>,
--   <a>scalingPlan_statusMessage</a> - A simple message about the current
--   status of the scaling plan.
--   
--   <a>$sel:creationTime:ScalingPlan'</a>, <a>scalingPlan_creationTime</a>
--   - The Unix time stamp when the scaling plan was created.
--   
--   <a>$sel:statusStartTime:ScalingPlan'</a>,
--   <a>scalingPlan_statusStartTime</a> - The Unix time stamp when the
--   scaling plan entered the current status.
--   
--   <a>$sel:scalingPlanName:ScalingPlan'</a>,
--   <a>scalingPlan_scalingPlanName</a> - The name of the scaling plan.
--   
--   <a>$sel:scalingPlanVersion:ScalingPlan'</a>,
--   <a>scalingPlan_scalingPlanVersion</a> - The version number of the
--   scaling plan.
--   
--   <a>$sel:applicationSource:ScalingPlan'</a>,
--   <a>scalingPlan_applicationSource</a> - A CloudFormation stack or a set
--   of tags. You can create one scaling plan per application source.
--   
--   <a>$sel:scalingInstructions:ScalingPlan'</a>,
--   <a>scalingPlan_scalingInstructions</a> - The scaling instructions.
--   
--   <a>$sel:statusCode:ScalingPlan'</a>, <a>scalingPlan_statusCode</a> -
--   The status of the scaling plan.
--   
--   <ul>
--   <li><tt>Active</tt> - The scaling plan is active.</li>
--   <li><tt>ActiveWithProblems</tt> - The scaling plan is active, but the
--   scaling configuration for one or more resources could not be
--   applied.</li>
--   <li><tt>CreationInProgress</tt> - The scaling plan is being
--   created.</li>
--   <li><tt>CreationFailed</tt> - The scaling plan could not be
--   created.</li>
--   <li><tt>DeletionInProgress</tt> - The scaling plan is being
--   deleted.</li>
--   <li><tt>DeletionFailed</tt> - The scaling plan could not be
--   deleted.</li>
--   <li><tt>UpdateInProgress</tt> - The scaling plan is being
--   updated.</li>
--   <li><tt>UpdateFailed</tt> - The scaling plan could not be
--   updated.</li>
--   </ul>
newScalingPlan :: Text -> Integer -> ApplicationSource -> ScalingPlanStatusCode -> ScalingPlan

-- | A simple message about the current status of the scaling plan.
scalingPlan_statusMessage :: Lens' ScalingPlan (Maybe Text)

-- | The Unix time stamp when the scaling plan was created.
scalingPlan_creationTime :: Lens' ScalingPlan (Maybe UTCTime)

-- | The Unix time stamp when the scaling plan entered the current status.
scalingPlan_statusStartTime :: Lens' ScalingPlan (Maybe UTCTime)

-- | The name of the scaling plan.
scalingPlan_scalingPlanName :: Lens' ScalingPlan Text

-- | The version number of the scaling plan.
scalingPlan_scalingPlanVersion :: Lens' ScalingPlan Integer

-- | A CloudFormation stack or a set of tags. You can create one scaling
--   plan per application source.
scalingPlan_applicationSource :: Lens' ScalingPlan ApplicationSource

-- | The scaling instructions.
scalingPlan_scalingInstructions :: Lens' ScalingPlan [ScalingInstruction]

-- | The status of the scaling plan.
--   
--   <ul>
--   <li><tt>Active</tt> - The scaling plan is active.</li>
--   <li><tt>ActiveWithProblems</tt> - The scaling plan is active, but the
--   scaling configuration for one or more resources could not be
--   applied.</li>
--   <li><tt>CreationInProgress</tt> - The scaling plan is being
--   created.</li>
--   <li><tt>CreationFailed</tt> - The scaling plan could not be
--   created.</li>
--   <li><tt>DeletionInProgress</tt> - The scaling plan is being
--   deleted.</li>
--   <li><tt>DeletionFailed</tt> - The scaling plan could not be
--   deleted.</li>
--   <li><tt>UpdateInProgress</tt> - The scaling plan is being
--   updated.</li>
--   <li><tt>UpdateFailed</tt> - The scaling plan could not be
--   updated.</li>
--   </ul>
scalingPlan_statusCode :: Lens' ScalingPlan ScalingPlanStatusCode

-- | Represents a scalable resource.
--   
--   <i>See:</i> <a>newScalingPlanResource</a> smart constructor.
data ScalingPlanResource
ScalingPlanResource' :: Maybe [ScalingPolicy] -> Maybe Text -> Text -> Integer -> ServiceNamespace -> Text -> ScalableDimension -> ScalingStatusCode -> ScalingPlanResource

-- | The scaling policies.
[$sel:scalingPolicies:ScalingPlanResource'] :: ScalingPlanResource -> Maybe [ScalingPolicy]

-- | A simple message about the current scaling status of the resource.
[$sel:scalingStatusMessage:ScalingPlanResource'] :: ScalingPlanResource -> Maybe Text

-- | The name of the scaling plan.
[$sel:scalingPlanName:ScalingPlanResource'] :: ScalingPlanResource -> Text

-- | The version number of the scaling plan.
[$sel:scalingPlanVersion:ScalingPlanResource'] :: ScalingPlanResource -> Integer

-- | The namespace of the AWS service.
[$sel:serviceNamespace:ScalingPlanResource'] :: ScalingPlanResource -> ServiceNamespace

-- | The ID of the resource. This string consists of the resource type and
--   unique identifier.
--   
--   <ul>
--   <li>Auto Scaling group - The resource type is
--   <tt>autoScalingGroup</tt> and the unique identifier is the name of the
--   Auto Scaling group. Example: <tt>autoScalingGroup/my-asg</tt>.</li>
--   <li>ECS service - The resource type is <tt>service</tt> and the unique
--   identifier is the cluster name and service name. Example:
--   <tt>service/default/sample-webapp</tt>.</li>
--   <li>Spot Fleet request - The resource type is
--   <tt>spot-fleet-request</tt> and the unique identifier is the Spot
--   Fleet request ID. Example:
--   <tt>spot-fleet-request/sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE</tt>.</li>
--   <li>DynamoDB table - The resource type is <tt>table</tt> and the
--   unique identifier is the resource ID. Example:
--   <tt>table/my-table</tt>.</li>
--   <li>DynamoDB global secondary index - The resource type is
--   <tt>index</tt> and the unique identifier is the resource ID. Example:
--   <tt>table/my-table/index/my-table-index</tt>.</li>
--   <li>Aurora DB cluster - The resource type is <tt>cluster</tt> and the
--   unique identifier is the cluster name. Example:
--   <tt>cluster:my-db-cluster</tt>.</li>
--   </ul>
[$sel:resourceId:ScalingPlanResource'] :: ScalingPlanResource -> Text

-- | The scalable dimension for the resource.
--   
--   <ul>
--   <li><tt>autoscaling:autoScalingGroup:DesiredCapacity</tt> - The
--   desired capacity of an Auto Scaling group.</li>
--   <li><tt>ecs:service:DesiredCount</tt> - The desired task count of an
--   ECS service.</li>
--   <li><tt>ec2:spot-fleet-request:TargetCapacity</tt> - The target
--   capacity of a Spot Fleet request.</li>
--   <li><tt>dynamodb:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:table:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:index:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>dynamodb:index:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>rds:cluster:ReadReplicaCount</tt> - The count of Aurora
--   Replicas in an Aurora DB cluster. Available for Aurora
--   MySQL-compatible edition and Aurora PostgreSQL-compatible
--   edition.</li>
--   </ul>
[$sel:scalableDimension:ScalingPlanResource'] :: ScalingPlanResource -> ScalableDimension

-- | The scaling status of the resource.
--   
--   <ul>
--   <li><tt>Active</tt> - The scaling configuration is active.</li>
--   <li><tt>Inactive</tt> - The scaling configuration is not active
--   because the scaling plan is being created or the scaling configuration
--   could not be applied. Check the status message for more
--   information.</li>
--   <li><tt>PartiallyActive</tt> - The scaling configuration is partially
--   active because the scaling plan is being created or deleted or the
--   scaling configuration could not be fully applied. Check the status
--   message for more information.</li>
--   </ul>
[$sel:scalingStatusCode:ScalingPlanResource'] :: ScalingPlanResource -> ScalingStatusCode

-- | Create a value of <a>ScalingPlanResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:scalingPolicies:ScalingPlanResource'</a>,
--   <a>scalingPlanResource_scalingPolicies</a> - The scaling policies.
--   
--   <a>$sel:scalingStatusMessage:ScalingPlanResource'</a>,
--   <a>scalingPlanResource_scalingStatusMessage</a> - A simple message
--   about the current scaling status of the resource.
--   
--   <a>$sel:scalingPlanName:ScalingPlanResource'</a>,
--   <a>scalingPlanResource_scalingPlanName</a> - The name of the scaling
--   plan.
--   
--   <a>$sel:scalingPlanVersion:ScalingPlanResource'</a>,
--   <a>scalingPlanResource_scalingPlanVersion</a> - The version number of
--   the scaling plan.
--   
--   <a>$sel:serviceNamespace:ScalingPlanResource'</a>,
--   <a>scalingPlanResource_serviceNamespace</a> - The namespace of the AWS
--   service.
--   
--   <a>$sel:resourceId:ScalingPlanResource'</a>,
--   <a>scalingPlanResource_resourceId</a> - The ID of the resource. This
--   string consists of the resource type and unique identifier.
--   
--   <ul>
--   <li>Auto Scaling group - The resource type is
--   <tt>autoScalingGroup</tt> and the unique identifier is the name of the
--   Auto Scaling group. Example: <tt>autoScalingGroup/my-asg</tt>.</li>
--   <li>ECS service - The resource type is <tt>service</tt> and the unique
--   identifier is the cluster name and service name. Example:
--   <tt>service/default/sample-webapp</tt>.</li>
--   <li>Spot Fleet request - The resource type is
--   <tt>spot-fleet-request</tt> and the unique identifier is the Spot
--   Fleet request ID. Example:
--   <tt>spot-fleet-request/sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE</tt>.</li>
--   <li>DynamoDB table - The resource type is <tt>table</tt> and the
--   unique identifier is the resource ID. Example:
--   <tt>table/my-table</tt>.</li>
--   <li>DynamoDB global secondary index - The resource type is
--   <tt>index</tt> and the unique identifier is the resource ID. Example:
--   <tt>table/my-table/index/my-table-index</tt>.</li>
--   <li>Aurora DB cluster - The resource type is <tt>cluster</tt> and the
--   unique identifier is the cluster name. Example:
--   <tt>cluster:my-db-cluster</tt>.</li>
--   </ul>
--   
--   <a>$sel:scalableDimension:ScalingPlanResource'</a>,
--   <a>scalingPlanResource_scalableDimension</a> - The scalable dimension
--   for the resource.
--   
--   <ul>
--   <li><tt>autoscaling:autoScalingGroup:DesiredCapacity</tt> - The
--   desired capacity of an Auto Scaling group.</li>
--   <li><tt>ecs:service:DesiredCount</tt> - The desired task count of an
--   ECS service.</li>
--   <li><tt>ec2:spot-fleet-request:TargetCapacity</tt> - The target
--   capacity of a Spot Fleet request.</li>
--   <li><tt>dynamodb:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:table:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:index:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>dynamodb:index:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>rds:cluster:ReadReplicaCount</tt> - The count of Aurora
--   Replicas in an Aurora DB cluster. Available for Aurora
--   MySQL-compatible edition and Aurora PostgreSQL-compatible
--   edition.</li>
--   </ul>
--   
--   <a>$sel:scalingStatusCode:ScalingPlanResource'</a>,
--   <a>scalingPlanResource_scalingStatusCode</a> - The scaling status of
--   the resource.
--   
--   <ul>
--   <li><tt>Active</tt> - The scaling configuration is active.</li>
--   <li><tt>Inactive</tt> - The scaling configuration is not active
--   because the scaling plan is being created or the scaling configuration
--   could not be applied. Check the status message for more
--   information.</li>
--   <li><tt>PartiallyActive</tt> - The scaling configuration is partially
--   active because the scaling plan is being created or deleted or the
--   scaling configuration could not be fully applied. Check the status
--   message for more information.</li>
--   </ul>
newScalingPlanResource :: Text -> Integer -> ServiceNamespace -> Text -> ScalableDimension -> ScalingStatusCode -> ScalingPlanResource

-- | The scaling policies.
scalingPlanResource_scalingPolicies :: Lens' ScalingPlanResource (Maybe [ScalingPolicy])

-- | A simple message about the current scaling status of the resource.
scalingPlanResource_scalingStatusMessage :: Lens' ScalingPlanResource (Maybe Text)

-- | The name of the scaling plan.
scalingPlanResource_scalingPlanName :: Lens' ScalingPlanResource Text

-- | The version number of the scaling plan.
scalingPlanResource_scalingPlanVersion :: Lens' ScalingPlanResource Integer

-- | The namespace of the AWS service.
scalingPlanResource_serviceNamespace :: Lens' ScalingPlanResource ServiceNamespace

-- | The ID of the resource. This string consists of the resource type and
--   unique identifier.
--   
--   <ul>
--   <li>Auto Scaling group - The resource type is
--   <tt>autoScalingGroup</tt> and the unique identifier is the name of the
--   Auto Scaling group. Example: <tt>autoScalingGroup/my-asg</tt>.</li>
--   <li>ECS service - The resource type is <tt>service</tt> and the unique
--   identifier is the cluster name and service name. Example:
--   <tt>service/default/sample-webapp</tt>.</li>
--   <li>Spot Fleet request - The resource type is
--   <tt>spot-fleet-request</tt> and the unique identifier is the Spot
--   Fleet request ID. Example:
--   <tt>spot-fleet-request/sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE</tt>.</li>
--   <li>DynamoDB table - The resource type is <tt>table</tt> and the
--   unique identifier is the resource ID. Example:
--   <tt>table/my-table</tt>.</li>
--   <li>DynamoDB global secondary index - The resource type is
--   <tt>index</tt> and the unique identifier is the resource ID. Example:
--   <tt>table/my-table/index/my-table-index</tt>.</li>
--   <li>Aurora DB cluster - The resource type is <tt>cluster</tt> and the
--   unique identifier is the cluster name. Example:
--   <tt>cluster:my-db-cluster</tt>.</li>
--   </ul>
scalingPlanResource_resourceId :: Lens' ScalingPlanResource Text

-- | The scalable dimension for the resource.
--   
--   <ul>
--   <li><tt>autoscaling:autoScalingGroup:DesiredCapacity</tt> - The
--   desired capacity of an Auto Scaling group.</li>
--   <li><tt>ecs:service:DesiredCount</tt> - The desired task count of an
--   ECS service.</li>
--   <li><tt>ec2:spot-fleet-request:TargetCapacity</tt> - The target
--   capacity of a Spot Fleet request.</li>
--   <li><tt>dynamodb:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:table:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:index:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>dynamodb:index:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>rds:cluster:ReadReplicaCount</tt> - The count of Aurora
--   Replicas in an Aurora DB cluster. Available for Aurora
--   MySQL-compatible edition and Aurora PostgreSQL-compatible
--   edition.</li>
--   </ul>
scalingPlanResource_scalableDimension :: Lens' ScalingPlanResource ScalableDimension

-- | The scaling status of the resource.
--   
--   <ul>
--   <li><tt>Active</tt> - The scaling configuration is active.</li>
--   <li><tt>Inactive</tt> - The scaling configuration is not active
--   because the scaling plan is being created or the scaling configuration
--   could not be applied. Check the status message for more
--   information.</li>
--   <li><tt>PartiallyActive</tt> - The scaling configuration is partially
--   active because the scaling plan is being created or deleted or the
--   scaling configuration could not be fully applied. Check the status
--   message for more information.</li>
--   </ul>
scalingPlanResource_scalingStatusCode :: Lens' ScalingPlanResource ScalingStatusCode

-- | Represents a scaling policy.
--   
--   <i>See:</i> <a>newScalingPolicy</a> smart constructor.
data ScalingPolicy
ScalingPolicy' :: Maybe TargetTrackingConfiguration -> Text -> PolicyType -> ScalingPolicy

-- | The target tracking scaling policy. Includes support for predefined or
--   customized metrics.
[$sel:targetTrackingConfiguration:ScalingPolicy'] :: ScalingPolicy -> Maybe TargetTrackingConfiguration

-- | The name of the scaling policy.
[$sel:policyName:ScalingPolicy'] :: ScalingPolicy -> Text

-- | The type of scaling policy.
[$sel:policyType:ScalingPolicy'] :: ScalingPolicy -> PolicyType

-- | Create a value of <a>ScalingPolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:targetTrackingConfiguration:ScalingPolicy'</a>,
--   <a>scalingPolicy_targetTrackingConfiguration</a> - The target tracking
--   scaling policy. Includes support for predefined or customized metrics.
--   
--   <a>$sel:policyName:ScalingPolicy'</a>, <a>scalingPolicy_policyName</a>
--   - The name of the scaling policy.
--   
--   <a>$sel:policyType:ScalingPolicy'</a>, <a>scalingPolicy_policyType</a>
--   - The type of scaling policy.
newScalingPolicy :: Text -> PolicyType -> ScalingPolicy

-- | The target tracking scaling policy. Includes support for predefined or
--   customized metrics.
scalingPolicy_targetTrackingConfiguration :: Lens' ScalingPolicy (Maybe TargetTrackingConfiguration)

-- | The name of the scaling policy.
scalingPolicy_policyName :: Lens' ScalingPolicy Text

-- | The type of scaling policy.
scalingPolicy_policyType :: Lens' ScalingPolicy PolicyType

-- | Represents a tag.
--   
--   <i>See:</i> <a>newTagFilter</a> smart constructor.
data TagFilter
TagFilter' :: Maybe Text -> Maybe [Text] -> TagFilter

-- | The tag key.
[$sel:key:TagFilter'] :: TagFilter -> Maybe Text

-- | The tag values (0 to 20).
[$sel:values:TagFilter'] :: TagFilter -> Maybe [Text]

-- | Create a value of <a>TagFilter</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:TagFilter'</a>, <a>tagFilter_key</a> - The tag key.
--   
--   <a>$sel:values:TagFilter'</a>, <a>tagFilter_values</a> - The tag
--   values (0 to 20).
newTagFilter :: TagFilter

-- | The tag key.
tagFilter_key :: Lens' TagFilter (Maybe Text)

-- | The tag values (0 to 20).
tagFilter_values :: Lens' TagFilter (Maybe [Text])

-- | Describes a target tracking configuration to use with AWS Auto
--   Scaling. Used with ScalingInstruction and ScalingPolicy.
--   
--   <i>See:</i> <a>newTargetTrackingConfiguration</a> smart constructor.
data TargetTrackingConfiguration
TargetTrackingConfiguration' :: Maybe Bool -> Maybe CustomizedScalingMetricSpecification -> Maybe PredefinedScalingMetricSpecification -> Maybe Int -> Maybe Int -> Maybe Int -> Double -> TargetTrackingConfiguration

-- | Indicates whether scale in by the target tracking scaling policy is
--   disabled. If the value is <tt>true</tt>, scale in is disabled and the
--   target tracking scaling policy doesn't remove capacity from the
--   scalable resource. Otherwise, scale in is enabled and the target
--   tracking scaling policy can remove capacity from the scalable
--   resource.
--   
--   The default value is <tt>false</tt>.
[$sel:disableScaleIn:TargetTrackingConfiguration'] :: TargetTrackingConfiguration -> Maybe Bool

-- | A customized metric. You can specify either a predefined metric or a
--   customized metric.
[$sel:customizedScalingMetricSpecification:TargetTrackingConfiguration'] :: TargetTrackingConfiguration -> Maybe CustomizedScalingMetricSpecification

-- | A predefined metric. You can specify either a predefined metric or a
--   customized metric.
[$sel:predefinedScalingMetricSpecification:TargetTrackingConfiguration'] :: TargetTrackingConfiguration -> Maybe PredefinedScalingMetricSpecification

-- | The estimated time, in seconds, until a newly launched instance can
--   contribute to the CloudWatch metrics. This value is used only if the
--   resource is an Auto Scaling group.
[$sel:estimatedInstanceWarmup:TargetTrackingConfiguration'] :: TargetTrackingConfiguration -> Maybe Int

-- | The amount of time, in seconds, to wait for a previous scale-out
--   activity to take effect. This property is not used if the scalable
--   resource is an Auto Scaling group.
--   
--   With the <i>scale-out cooldown period</i>, the intention is to
--   continuously (but not excessively) scale out. After Auto Scaling
--   successfully scales out using a target tracking scaling policy, it
--   starts to calculate the cooldown time. The scaling policy won't
--   increase the desired capacity again unless either a larger scale out
--   is triggered or the cooldown period ends.
[$sel:scaleOutCooldown:TargetTrackingConfiguration'] :: TargetTrackingConfiguration -> Maybe Int

-- | The amount of time, in seconds, after a scale-in activity completes
--   before another scale-in activity can start. This property is not used
--   if the scalable resource is an Auto Scaling group.
--   
--   With the <i>scale-in cooldown period</i>, the intention is to scale in
--   conservatively to protect your application’s availability, so scale-in
--   activities are blocked until the cooldown period has expired. However,
--   if another alarm triggers a scale-out activity during the scale-in
--   cooldown period, Auto Scaling scales out the target immediately. In
--   this case, the scale-in cooldown period stops and doesn't complete.
[$sel:scaleInCooldown:TargetTrackingConfiguration'] :: TargetTrackingConfiguration -> Maybe Int

-- | The target value for the metric. Although this property accepts
--   numbers of type Double, it won't accept values that are either too
--   small or too large. Values must be in the range of -2^360 to 2^360.
[$sel:targetValue:TargetTrackingConfiguration'] :: TargetTrackingConfiguration -> Double

-- | Create a value of <a>TargetTrackingConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:disableScaleIn:TargetTrackingConfiguration'</a>,
--   <a>targetTrackingConfiguration_disableScaleIn</a> - Indicates whether
--   scale in by the target tracking scaling policy is disabled. If the
--   value is <tt>true</tt>, scale in is disabled and the target tracking
--   scaling policy doesn't remove capacity from the scalable resource.
--   Otherwise, scale in is enabled and the target tracking scaling policy
--   can remove capacity from the scalable resource.
--   
--   The default value is <tt>false</tt>.
--   
--   
--   <a>$sel:customizedScalingMetricSpecification:TargetTrackingConfiguration'</a>,
--   <a>targetTrackingConfiguration_customizedScalingMetricSpecification</a>
--   - A customized metric. You can specify either a predefined metric or a
--   customized metric.
--   
--   
--   <a>$sel:predefinedScalingMetricSpecification:TargetTrackingConfiguration'</a>,
--   <a>targetTrackingConfiguration_predefinedScalingMetricSpecification</a>
--   - A predefined metric. You can specify either a predefined metric or a
--   customized metric.
--   
--   <a>$sel:estimatedInstanceWarmup:TargetTrackingConfiguration'</a>,
--   <a>targetTrackingConfiguration_estimatedInstanceWarmup</a> - The
--   estimated time, in seconds, until a newly launched instance can
--   contribute to the CloudWatch metrics. This value is used only if the
--   resource is an Auto Scaling group.
--   
--   <a>$sel:scaleOutCooldown:TargetTrackingConfiguration'</a>,
--   <a>targetTrackingConfiguration_scaleOutCooldown</a> - The amount of
--   time, in seconds, to wait for a previous scale-out activity to take
--   effect. This property is not used if the scalable resource is an Auto
--   Scaling group.
--   
--   With the <i>scale-out cooldown period</i>, the intention is to
--   continuously (but not excessively) scale out. After Auto Scaling
--   successfully scales out using a target tracking scaling policy, it
--   starts to calculate the cooldown time. The scaling policy won't
--   increase the desired capacity again unless either a larger scale out
--   is triggered or the cooldown period ends.
--   
--   <a>$sel:scaleInCooldown:TargetTrackingConfiguration'</a>,
--   <a>targetTrackingConfiguration_scaleInCooldown</a> - The amount of
--   time, in seconds, after a scale-in activity completes before another
--   scale-in activity can start. This property is not used if the scalable
--   resource is an Auto Scaling group.
--   
--   With the <i>scale-in cooldown period</i>, the intention is to scale in
--   conservatively to protect your application’s availability, so scale-in
--   activities are blocked until the cooldown period has expired. However,
--   if another alarm triggers a scale-out activity during the scale-in
--   cooldown period, Auto Scaling scales out the target immediately. In
--   this case, the scale-in cooldown period stops and doesn't complete.
--   
--   <a>$sel:targetValue:TargetTrackingConfiguration'</a>,
--   <a>targetTrackingConfiguration_targetValue</a> - The target value for
--   the metric. Although this property accepts numbers of type Double, it
--   won't accept values that are either too small or too large. Values
--   must be in the range of -2^360 to 2^360.
newTargetTrackingConfiguration :: Double -> TargetTrackingConfiguration

-- | Indicates whether scale in by the target tracking scaling policy is
--   disabled. If the value is <tt>true</tt>, scale in is disabled and the
--   target tracking scaling policy doesn't remove capacity from the
--   scalable resource. Otherwise, scale in is enabled and the target
--   tracking scaling policy can remove capacity from the scalable
--   resource.
--   
--   The default value is <tt>false</tt>.
targetTrackingConfiguration_disableScaleIn :: Lens' TargetTrackingConfiguration (Maybe Bool)

-- | A customized metric. You can specify either a predefined metric or a
--   customized metric.
targetTrackingConfiguration_customizedScalingMetricSpecification :: Lens' TargetTrackingConfiguration (Maybe CustomizedScalingMetricSpecification)

-- | A predefined metric. You can specify either a predefined metric or a
--   customized metric.
targetTrackingConfiguration_predefinedScalingMetricSpecification :: Lens' TargetTrackingConfiguration (Maybe PredefinedScalingMetricSpecification)

-- | The estimated time, in seconds, until a newly launched instance can
--   contribute to the CloudWatch metrics. This value is used only if the
--   resource is an Auto Scaling group.
targetTrackingConfiguration_estimatedInstanceWarmup :: Lens' TargetTrackingConfiguration (Maybe Int)

-- | The amount of time, in seconds, to wait for a previous scale-out
--   activity to take effect. This property is not used if the scalable
--   resource is an Auto Scaling group.
--   
--   With the <i>scale-out cooldown period</i>, the intention is to
--   continuously (but not excessively) scale out. After Auto Scaling
--   successfully scales out using a target tracking scaling policy, it
--   starts to calculate the cooldown time. The scaling policy won't
--   increase the desired capacity again unless either a larger scale out
--   is triggered or the cooldown period ends.
targetTrackingConfiguration_scaleOutCooldown :: Lens' TargetTrackingConfiguration (Maybe Int)

-- | The amount of time, in seconds, after a scale-in activity completes
--   before another scale-in activity can start. This property is not used
--   if the scalable resource is an Auto Scaling group.
--   
--   With the <i>scale-in cooldown period</i>, the intention is to scale in
--   conservatively to protect your application’s availability, so scale-in
--   activities are blocked until the cooldown period has expired. However,
--   if another alarm triggers a scale-out activity during the scale-in
--   cooldown period, Auto Scaling scales out the target immediately. In
--   this case, the scale-in cooldown period stops and doesn't complete.
targetTrackingConfiguration_scaleInCooldown :: Lens' TargetTrackingConfiguration (Maybe Int)

-- | The target value for the metric. Although this property accepts
--   numbers of type Double, it won't accept values that are either too
--   small or too large. Values must be in the range of -2^360 to 2^360.
targetTrackingConfiguration_targetValue :: Lens' TargetTrackingConfiguration Double


-- | Retrieves the forecast data for a scalable resource.
--   
--   Capacity forecasts are represented as predicted values, or data
--   points, that are calculated using historical data points from a
--   specified CloudWatch load metric. Data points are available for up to
--   56 days.
module Network.AWS.AutoScalingPlans.GetScalingPlanResourceForecastData

-- | <i>See:</i> <a>newGetScalingPlanResourceForecastData</a> smart
--   constructor.
data GetScalingPlanResourceForecastData
GetScalingPlanResourceForecastData' :: Text -> Integer -> ServiceNamespace -> Text -> ScalableDimension -> ForecastDataType -> POSIX -> POSIX -> GetScalingPlanResourceForecastData

-- | The name of the scaling plan.
[$sel:scalingPlanName:GetScalingPlanResourceForecastData'] :: GetScalingPlanResourceForecastData -> Text

-- | The version number of the scaling plan. Currently, the only valid
--   value is <tt>1</tt>.
[$sel:scalingPlanVersion:GetScalingPlanResourceForecastData'] :: GetScalingPlanResourceForecastData -> Integer

-- | The namespace of the AWS service. The only valid value is
--   <tt>autoscaling</tt>.
[$sel:serviceNamespace:GetScalingPlanResourceForecastData'] :: GetScalingPlanResourceForecastData -> ServiceNamespace

-- | The ID of the resource. This string consists of a prefix
--   (<tt>autoScalingGroup</tt>) followed by the name of a specified Auto
--   Scaling group (<tt>my-asg</tt>). Example:
--   <tt>autoScalingGroup/my-asg</tt>.
[$sel:resourceId:GetScalingPlanResourceForecastData'] :: GetScalingPlanResourceForecastData -> Text

-- | The scalable dimension for the resource. The only valid value is
--   <tt>autoscaling:autoScalingGroup:DesiredCapacity</tt>.
[$sel:scalableDimension:GetScalingPlanResourceForecastData'] :: GetScalingPlanResourceForecastData -> ScalableDimension

-- | The type of forecast data to get.
--   
--   <ul>
--   <li><tt>LoadForecast</tt>: The load metric forecast.</li>
--   <li><tt>CapacityForecast</tt>: The capacity forecast.</li>
--   <li><tt>ScheduledActionMinCapacity</tt>: The minimum capacity for each
--   scheduled scaling action. This data is calculated as the larger of two
--   values: the capacity forecast or the minimum capacity in the scaling
--   instruction.</li>
--   <li><tt>ScheduledActionMaxCapacity</tt>: The maximum capacity for each
--   scheduled scaling action. The calculation used is determined by the
--   predictive scaling maximum capacity behavior setting in the scaling
--   instruction.</li>
--   </ul>
[$sel:forecastDataType:GetScalingPlanResourceForecastData'] :: GetScalingPlanResourceForecastData -> ForecastDataType

-- | The inclusive start time of the time range for the forecast data to
--   get. The date and time can be at most 56 days before the current date
--   and time.
[$sel:startTime:GetScalingPlanResourceForecastData'] :: GetScalingPlanResourceForecastData -> POSIX

-- | The exclusive end time of the time range for the forecast data to get.
--   The maximum time duration between the start and end time is seven
--   days.
--   
--   Although this parameter can accept a date and time that is more than
--   two days in the future, the availability of forecast data has limits.
--   AWS Auto Scaling only issues forecasts for periods of two days in
--   advance.
[$sel:endTime:GetScalingPlanResourceForecastData'] :: GetScalingPlanResourceForecastData -> POSIX

-- | Create a value of <a>GetScalingPlanResourceForecastData</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:scalingPlanName:GetScalingPlanResourceForecastData'</a>,
--   <a>getScalingPlanResourceForecastData_scalingPlanName</a> - The name
--   of the scaling plan.
--   
--   <a>$sel:scalingPlanVersion:GetScalingPlanResourceForecastData'</a>,
--   <a>getScalingPlanResourceForecastData_scalingPlanVersion</a> - The
--   version number of the scaling plan. Currently, the only valid value is
--   <tt>1</tt>.
--   
--   <a>$sel:serviceNamespace:GetScalingPlanResourceForecastData'</a>,
--   <a>getScalingPlanResourceForecastData_serviceNamespace</a> - The
--   namespace of the AWS service. The only valid value is
--   <tt>autoscaling</tt>.
--   
--   <a>$sel:resourceId:GetScalingPlanResourceForecastData'</a>,
--   <a>getScalingPlanResourceForecastData_resourceId</a> - The ID of the
--   resource. This string consists of a prefix (<tt>autoScalingGroup</tt>)
--   followed by the name of a specified Auto Scaling group
--   (<tt>my-asg</tt>). Example: <tt>autoScalingGroup/my-asg</tt>.
--   
--   <a>$sel:scalableDimension:GetScalingPlanResourceForecastData'</a>,
--   <a>getScalingPlanResourceForecastData_scalableDimension</a> - The
--   scalable dimension for the resource. The only valid value is
--   <tt>autoscaling:autoScalingGroup:DesiredCapacity</tt>.
--   
--   <a>$sel:forecastDataType:GetScalingPlanResourceForecastData'</a>,
--   <a>getScalingPlanResourceForecastData_forecastDataType</a> - The type
--   of forecast data to get.
--   
--   <ul>
--   <li><tt>LoadForecast</tt>: The load metric forecast.</li>
--   <li><tt>CapacityForecast</tt>: The capacity forecast.</li>
--   <li><tt>ScheduledActionMinCapacity</tt>: The minimum capacity for each
--   scheduled scaling action. This data is calculated as the larger of two
--   values: the capacity forecast or the minimum capacity in the scaling
--   instruction.</li>
--   <li><tt>ScheduledActionMaxCapacity</tt>: The maximum capacity for each
--   scheduled scaling action. The calculation used is determined by the
--   predictive scaling maximum capacity behavior setting in the scaling
--   instruction.</li>
--   </ul>
--   
--   <a>$sel:startTime:GetScalingPlanResourceForecastData'</a>,
--   <a>getScalingPlanResourceForecastData_startTime</a> - The inclusive
--   start time of the time range for the forecast data to get. The date
--   and time can be at most 56 days before the current date and time.
--   
--   <a>$sel:endTime:GetScalingPlanResourceForecastData'</a>,
--   <a>getScalingPlanResourceForecastData_endTime</a> - The exclusive end
--   time of the time range for the forecast data to get. The maximum time
--   duration between the start and end time is seven days.
--   
--   Although this parameter can accept a date and time that is more than
--   two days in the future, the availability of forecast data has limits.
--   AWS Auto Scaling only issues forecasts for periods of two days in
--   advance.
newGetScalingPlanResourceForecastData :: Text -> Integer -> ServiceNamespace -> Text -> ScalableDimension -> ForecastDataType -> UTCTime -> UTCTime -> GetScalingPlanResourceForecastData

-- | The name of the scaling plan.
getScalingPlanResourceForecastData_scalingPlanName :: Lens' GetScalingPlanResourceForecastData Text

-- | The version number of the scaling plan. Currently, the only valid
--   value is <tt>1</tt>.
getScalingPlanResourceForecastData_scalingPlanVersion :: Lens' GetScalingPlanResourceForecastData Integer

-- | The namespace of the AWS service. The only valid value is
--   <tt>autoscaling</tt>.
getScalingPlanResourceForecastData_serviceNamespace :: Lens' GetScalingPlanResourceForecastData ServiceNamespace

-- | The ID of the resource. This string consists of a prefix
--   (<tt>autoScalingGroup</tt>) followed by the name of a specified Auto
--   Scaling group (<tt>my-asg</tt>). Example:
--   <tt>autoScalingGroup/my-asg</tt>.
getScalingPlanResourceForecastData_resourceId :: Lens' GetScalingPlanResourceForecastData Text

-- | The scalable dimension for the resource. The only valid value is
--   <tt>autoscaling:autoScalingGroup:DesiredCapacity</tt>.
getScalingPlanResourceForecastData_scalableDimension :: Lens' GetScalingPlanResourceForecastData ScalableDimension

-- | The type of forecast data to get.
--   
--   <ul>
--   <li><tt>LoadForecast</tt>: The load metric forecast.</li>
--   <li><tt>CapacityForecast</tt>: The capacity forecast.</li>
--   <li><tt>ScheduledActionMinCapacity</tt>: The minimum capacity for each
--   scheduled scaling action. This data is calculated as the larger of two
--   values: the capacity forecast or the minimum capacity in the scaling
--   instruction.</li>
--   <li><tt>ScheduledActionMaxCapacity</tt>: The maximum capacity for each
--   scheduled scaling action. The calculation used is determined by the
--   predictive scaling maximum capacity behavior setting in the scaling
--   instruction.</li>
--   </ul>
getScalingPlanResourceForecastData_forecastDataType :: Lens' GetScalingPlanResourceForecastData ForecastDataType

-- | The inclusive start time of the time range for the forecast data to
--   get. The date and time can be at most 56 days before the current date
--   and time.
getScalingPlanResourceForecastData_startTime :: Lens' GetScalingPlanResourceForecastData UTCTime

-- | The exclusive end time of the time range for the forecast data to get.
--   The maximum time duration between the start and end time is seven
--   days.
--   
--   Although this parameter can accept a date and time that is more than
--   two days in the future, the availability of forecast data has limits.
--   AWS Auto Scaling only issues forecasts for periods of two days in
--   advance.
getScalingPlanResourceForecastData_endTime :: Lens' GetScalingPlanResourceForecastData UTCTime

-- | <i>See:</i> <a>newGetScalingPlanResourceForecastDataResponse</a> smart
--   constructor.
data GetScalingPlanResourceForecastDataResponse
GetScalingPlanResourceForecastDataResponse' :: Int -> [Datapoint] -> GetScalingPlanResourceForecastDataResponse

-- | The response's http status code.
[$sel:httpStatus:GetScalingPlanResourceForecastDataResponse'] :: GetScalingPlanResourceForecastDataResponse -> Int

-- | The data points to return.
[$sel:datapoints:GetScalingPlanResourceForecastDataResponse'] :: GetScalingPlanResourceForecastDataResponse -> [Datapoint]

-- | Create a value of <a>GetScalingPlanResourceForecastDataResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:GetScalingPlanResourceForecastDataResponse'</a>,
--   <a>getScalingPlanResourceForecastDataResponse_httpStatus</a> - The
--   response's http status code.
--   
--   <a>$sel:datapoints:GetScalingPlanResourceForecastDataResponse'</a>,
--   <a>getScalingPlanResourceForecastDataResponse_datapoints</a> - The
--   data points to return.
newGetScalingPlanResourceForecastDataResponse :: Int -> GetScalingPlanResourceForecastDataResponse

-- | The response's http status code.
getScalingPlanResourceForecastDataResponse_httpStatus :: Lens' GetScalingPlanResourceForecastDataResponse Int

-- | The data points to return.
getScalingPlanResourceForecastDataResponse_datapoints :: Lens' GetScalingPlanResourceForecastDataResponse [Datapoint]
instance GHC.Generics.Generic Network.AWS.AutoScalingPlans.GetScalingPlanResourceForecastData.GetScalingPlanResourceForecastData
instance GHC.Show.Show Network.AWS.AutoScalingPlans.GetScalingPlanResourceForecastData.GetScalingPlanResourceForecastData
instance GHC.Read.Read Network.AWS.AutoScalingPlans.GetScalingPlanResourceForecastData.GetScalingPlanResourceForecastData
instance GHC.Classes.Eq Network.AWS.AutoScalingPlans.GetScalingPlanResourceForecastData.GetScalingPlanResourceForecastData
instance GHC.Generics.Generic Network.AWS.AutoScalingPlans.GetScalingPlanResourceForecastData.GetScalingPlanResourceForecastDataResponse
instance GHC.Show.Show Network.AWS.AutoScalingPlans.GetScalingPlanResourceForecastData.GetScalingPlanResourceForecastDataResponse
instance GHC.Read.Read Network.AWS.AutoScalingPlans.GetScalingPlanResourceForecastData.GetScalingPlanResourceForecastDataResponse
instance GHC.Classes.Eq Network.AWS.AutoScalingPlans.GetScalingPlanResourceForecastData.GetScalingPlanResourceForecastDataResponse
instance Network.AWS.Types.AWSRequest Network.AWS.AutoScalingPlans.GetScalingPlanResourceForecastData.GetScalingPlanResourceForecastData
instance Control.DeepSeq.NFData Network.AWS.AutoScalingPlans.GetScalingPlanResourceForecastData.GetScalingPlanResourceForecastDataResponse
instance Data.Hashable.Class.Hashable Network.AWS.AutoScalingPlans.GetScalingPlanResourceForecastData.GetScalingPlanResourceForecastData
instance Control.DeepSeq.NFData Network.AWS.AutoScalingPlans.GetScalingPlanResourceForecastData.GetScalingPlanResourceForecastData
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.AutoScalingPlans.GetScalingPlanResourceForecastData.GetScalingPlanResourceForecastData
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.AutoScalingPlans.GetScalingPlanResourceForecastData.GetScalingPlanResourceForecastData
instance Network.AWS.Data.Path.ToPath Network.AWS.AutoScalingPlans.GetScalingPlanResourceForecastData.GetScalingPlanResourceForecastData
instance Network.AWS.Data.Query.ToQuery Network.AWS.AutoScalingPlans.GetScalingPlanResourceForecastData.GetScalingPlanResourceForecastData


-- | Describes one or more of your scaling plans.
--   
--   This operation returns paginated results.
module Network.AWS.AutoScalingPlans.DescribeScalingPlans

-- | <i>See:</i> <a>newDescribeScalingPlans</a> smart constructor.
data DescribeScalingPlans
DescribeScalingPlans' :: Maybe Integer -> Maybe Text -> Maybe Int -> Maybe [Text] -> Maybe [ApplicationSource] -> DescribeScalingPlans

-- | The version number of the scaling plan. Currently, the only valid
--   value is <tt>1</tt>.
--   
--   If you specify a scaling plan version, you must also specify a scaling
--   plan name.
[$sel:scalingPlanVersion:DescribeScalingPlans'] :: DescribeScalingPlans -> Maybe Integer

-- | The token for the next set of results.
[$sel:nextToken:DescribeScalingPlans'] :: DescribeScalingPlans -> Maybe Text

-- | The maximum number of scalable resources to return. This value can be
--   between 1 and 50. The default value is 50.
[$sel:maxResults:DescribeScalingPlans'] :: DescribeScalingPlans -> Maybe Int

-- | The names of the scaling plans (up to 10). If you specify application
--   sources, you cannot specify scaling plan names.
[$sel:scalingPlanNames:DescribeScalingPlans'] :: DescribeScalingPlans -> Maybe [Text]

-- | The sources for the applications (up to 10). If you specify scaling
--   plan names, you cannot specify application sources.
[$sel:applicationSources:DescribeScalingPlans'] :: DescribeScalingPlans -> Maybe [ApplicationSource]

-- | Create a value of <a>DescribeScalingPlans</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:scalingPlanVersion:DescribeScalingPlans'</a>,
--   <a>describeScalingPlans_scalingPlanVersion</a> - The version number of
--   the scaling plan. Currently, the only valid value is <tt>1</tt>.
--   
--   If you specify a scaling plan version, you must also specify a scaling
--   plan name.
--   
--   <a>$sel:nextToken:DescribeScalingPlans'</a>,
--   <a>describeScalingPlans_nextToken</a> - The token for the next set of
--   results.
--   
--   <a>$sel:maxResults:DescribeScalingPlans'</a>,
--   <a>describeScalingPlans_maxResults</a> - The maximum number of
--   scalable resources to return. This value can be between 1 and 50. The
--   default value is 50.
--   
--   <a>$sel:scalingPlanNames:DescribeScalingPlans'</a>,
--   <a>describeScalingPlans_scalingPlanNames</a> - The names of the
--   scaling plans (up to 10). If you specify application sources, you
--   cannot specify scaling plan names.
--   
--   <a>$sel:applicationSources:DescribeScalingPlans'</a>,
--   <a>describeScalingPlans_applicationSources</a> - The sources for the
--   applications (up to 10). If you specify scaling plan names, you cannot
--   specify application sources.
newDescribeScalingPlans :: DescribeScalingPlans

-- | The version number of the scaling plan. Currently, the only valid
--   value is <tt>1</tt>.
--   
--   If you specify a scaling plan version, you must also specify a scaling
--   plan name.
describeScalingPlans_scalingPlanVersion :: Lens' DescribeScalingPlans (Maybe Integer)

-- | The token for the next set of results.
describeScalingPlans_nextToken :: Lens' DescribeScalingPlans (Maybe Text)

-- | The maximum number of scalable resources to return. This value can be
--   between 1 and 50. The default value is 50.
describeScalingPlans_maxResults :: Lens' DescribeScalingPlans (Maybe Int)

-- | The names of the scaling plans (up to 10). If you specify application
--   sources, you cannot specify scaling plan names.
describeScalingPlans_scalingPlanNames :: Lens' DescribeScalingPlans (Maybe [Text])

-- | The sources for the applications (up to 10). If you specify scaling
--   plan names, you cannot specify application sources.
describeScalingPlans_applicationSources :: Lens' DescribeScalingPlans (Maybe [ApplicationSource])

-- | <i>See:</i> <a>newDescribeScalingPlansResponse</a> smart constructor.
data DescribeScalingPlansResponse
DescribeScalingPlansResponse' :: Maybe Text -> Maybe [ScalingPlan] -> Int -> DescribeScalingPlansResponse

-- | The token required to get the next set of results. This value is
--   <tt>null</tt> if there are no more results to return.
[$sel:nextToken:DescribeScalingPlansResponse'] :: DescribeScalingPlansResponse -> Maybe Text

-- | Information about the scaling plans.
[$sel:scalingPlans:DescribeScalingPlansResponse'] :: DescribeScalingPlansResponse -> Maybe [ScalingPlan]

-- | The response's http status code.
[$sel:httpStatus:DescribeScalingPlansResponse'] :: DescribeScalingPlansResponse -> Int

-- | Create a value of <a>DescribeScalingPlansResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeScalingPlans'</a>,
--   <a>describeScalingPlansResponse_nextToken</a> - The token required to
--   get the next set of results. This value is <tt>null</tt> if there are
--   no more results to return.
--   
--   <a>$sel:scalingPlans:DescribeScalingPlansResponse'</a>,
--   <a>describeScalingPlansResponse_scalingPlans</a> - Information about
--   the scaling plans.
--   
--   <a>$sel:httpStatus:DescribeScalingPlansResponse'</a>,
--   <a>describeScalingPlansResponse_httpStatus</a> - The response's http
--   status code.
newDescribeScalingPlansResponse :: Int -> DescribeScalingPlansResponse

-- | The token required to get the next set of results. This value is
--   <tt>null</tt> if there are no more results to return.
describeScalingPlansResponse_nextToken :: Lens' DescribeScalingPlansResponse (Maybe Text)

-- | Information about the scaling plans.
describeScalingPlansResponse_scalingPlans :: Lens' DescribeScalingPlansResponse (Maybe [ScalingPlan])

-- | The response's http status code.
describeScalingPlansResponse_httpStatus :: Lens' DescribeScalingPlansResponse Int
instance GHC.Generics.Generic Network.AWS.AutoScalingPlans.DescribeScalingPlans.DescribeScalingPlans
instance GHC.Show.Show Network.AWS.AutoScalingPlans.DescribeScalingPlans.DescribeScalingPlans
instance GHC.Read.Read Network.AWS.AutoScalingPlans.DescribeScalingPlans.DescribeScalingPlans
instance GHC.Classes.Eq Network.AWS.AutoScalingPlans.DescribeScalingPlans.DescribeScalingPlans
instance GHC.Generics.Generic Network.AWS.AutoScalingPlans.DescribeScalingPlans.DescribeScalingPlansResponse
instance GHC.Show.Show Network.AWS.AutoScalingPlans.DescribeScalingPlans.DescribeScalingPlansResponse
instance GHC.Read.Read Network.AWS.AutoScalingPlans.DescribeScalingPlans.DescribeScalingPlansResponse
instance GHC.Classes.Eq Network.AWS.AutoScalingPlans.DescribeScalingPlans.DescribeScalingPlansResponse
instance Network.AWS.Types.AWSRequest Network.AWS.AutoScalingPlans.DescribeScalingPlans.DescribeScalingPlans
instance Control.DeepSeq.NFData Network.AWS.AutoScalingPlans.DescribeScalingPlans.DescribeScalingPlansResponse
instance Network.AWS.Pager.AWSPager Network.AWS.AutoScalingPlans.DescribeScalingPlans.DescribeScalingPlans
instance Data.Hashable.Class.Hashable Network.AWS.AutoScalingPlans.DescribeScalingPlans.DescribeScalingPlans
instance Control.DeepSeq.NFData Network.AWS.AutoScalingPlans.DescribeScalingPlans.DescribeScalingPlans
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.AutoScalingPlans.DescribeScalingPlans.DescribeScalingPlans
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.AutoScalingPlans.DescribeScalingPlans.DescribeScalingPlans
instance Network.AWS.Data.Path.ToPath Network.AWS.AutoScalingPlans.DescribeScalingPlans.DescribeScalingPlans
instance Network.AWS.Data.Query.ToQuery Network.AWS.AutoScalingPlans.DescribeScalingPlans.DescribeScalingPlans


-- | Describes the scalable resources in the specified scaling plan.
--   
--   This operation returns paginated results.
module Network.AWS.AutoScalingPlans.DescribeScalingPlanResources

-- | <i>See:</i> <a>newDescribeScalingPlanResources</a> smart constructor.
data DescribeScalingPlanResources
DescribeScalingPlanResources' :: Maybe Text -> Maybe Int -> Text -> Integer -> DescribeScalingPlanResources

-- | The token for the next set of results.
[$sel:nextToken:DescribeScalingPlanResources'] :: DescribeScalingPlanResources -> Maybe Text

-- | The maximum number of scalable resources to return. The value must be
--   between 1 and 50. The default value is 50.
[$sel:maxResults:DescribeScalingPlanResources'] :: DescribeScalingPlanResources -> Maybe Int

-- | The name of the scaling plan.
[$sel:scalingPlanName:DescribeScalingPlanResources'] :: DescribeScalingPlanResources -> Text

-- | The version number of the scaling plan. Currently, the only valid
--   value is <tt>1</tt>.
[$sel:scalingPlanVersion:DescribeScalingPlanResources'] :: DescribeScalingPlanResources -> Integer

-- | Create a value of <a>DescribeScalingPlanResources</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeScalingPlanResources'</a>,
--   <a>describeScalingPlanResources_nextToken</a> - The token for the next
--   set of results.
--   
--   <a>$sel:maxResults:DescribeScalingPlanResources'</a>,
--   <a>describeScalingPlanResources_maxResults</a> - The maximum number of
--   scalable resources to return. The value must be between 1 and 50. The
--   default value is 50.
--   
--   <a>$sel:scalingPlanName:DescribeScalingPlanResources'</a>,
--   <a>describeScalingPlanResources_scalingPlanName</a> - The name of the
--   scaling plan.
--   
--   <a>$sel:scalingPlanVersion:DescribeScalingPlanResources'</a>,
--   <a>describeScalingPlanResources_scalingPlanVersion</a> - The version
--   number of the scaling plan. Currently, the only valid value is
--   <tt>1</tt>.
newDescribeScalingPlanResources :: Text -> Integer -> DescribeScalingPlanResources

-- | The token for the next set of results.
describeScalingPlanResources_nextToken :: Lens' DescribeScalingPlanResources (Maybe Text)

-- | The maximum number of scalable resources to return. The value must be
--   between 1 and 50. The default value is 50.
describeScalingPlanResources_maxResults :: Lens' DescribeScalingPlanResources (Maybe Int)

-- | The name of the scaling plan.
describeScalingPlanResources_scalingPlanName :: Lens' DescribeScalingPlanResources Text

-- | The version number of the scaling plan. Currently, the only valid
--   value is <tt>1</tt>.
describeScalingPlanResources_scalingPlanVersion :: Lens' DescribeScalingPlanResources Integer

-- | <i>See:</i> <a>newDescribeScalingPlanResourcesResponse</a> smart
--   constructor.
data DescribeScalingPlanResourcesResponse
DescribeScalingPlanResourcesResponse' :: Maybe Text -> Maybe [ScalingPlanResource] -> Int -> DescribeScalingPlanResourcesResponse

-- | The token required to get the next set of results. This value is
--   <tt>null</tt> if there are no more results to return.
[$sel:nextToken:DescribeScalingPlanResourcesResponse'] :: DescribeScalingPlanResourcesResponse -> Maybe Text

-- | Information about the scalable resources.
[$sel:scalingPlanResources:DescribeScalingPlanResourcesResponse'] :: DescribeScalingPlanResourcesResponse -> Maybe [ScalingPlanResource]

-- | The response's http status code.
[$sel:httpStatus:DescribeScalingPlanResourcesResponse'] :: DescribeScalingPlanResourcesResponse -> Int

-- | Create a value of <a>DescribeScalingPlanResourcesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeScalingPlanResources'</a>,
--   <a>describeScalingPlanResourcesResponse_nextToken</a> - The token
--   required to get the next set of results. This value is <tt>null</tt>
--   if there are no more results to return.
--   
--   
--   <a>$sel:scalingPlanResources:DescribeScalingPlanResourcesResponse'</a>,
--   <a>describeScalingPlanResourcesResponse_scalingPlanResources</a> -
--   Information about the scalable resources.
--   
--   <a>$sel:httpStatus:DescribeScalingPlanResourcesResponse'</a>,
--   <a>describeScalingPlanResourcesResponse_httpStatus</a> - The
--   response's http status code.
newDescribeScalingPlanResourcesResponse :: Int -> DescribeScalingPlanResourcesResponse

-- | The token required to get the next set of results. This value is
--   <tt>null</tt> if there are no more results to return.
describeScalingPlanResourcesResponse_nextToken :: Lens' DescribeScalingPlanResourcesResponse (Maybe Text)

-- | Information about the scalable resources.
describeScalingPlanResourcesResponse_scalingPlanResources :: Lens' DescribeScalingPlanResourcesResponse (Maybe [ScalingPlanResource])

-- | The response's http status code.
describeScalingPlanResourcesResponse_httpStatus :: Lens' DescribeScalingPlanResourcesResponse Int
instance GHC.Generics.Generic Network.AWS.AutoScalingPlans.DescribeScalingPlanResources.DescribeScalingPlanResources
instance GHC.Show.Show Network.AWS.AutoScalingPlans.DescribeScalingPlanResources.DescribeScalingPlanResources
instance GHC.Read.Read Network.AWS.AutoScalingPlans.DescribeScalingPlanResources.DescribeScalingPlanResources
instance GHC.Classes.Eq Network.AWS.AutoScalingPlans.DescribeScalingPlanResources.DescribeScalingPlanResources
instance GHC.Generics.Generic Network.AWS.AutoScalingPlans.DescribeScalingPlanResources.DescribeScalingPlanResourcesResponse
instance GHC.Show.Show Network.AWS.AutoScalingPlans.DescribeScalingPlanResources.DescribeScalingPlanResourcesResponse
instance GHC.Read.Read Network.AWS.AutoScalingPlans.DescribeScalingPlanResources.DescribeScalingPlanResourcesResponse
instance GHC.Classes.Eq Network.AWS.AutoScalingPlans.DescribeScalingPlanResources.DescribeScalingPlanResourcesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.AutoScalingPlans.DescribeScalingPlanResources.DescribeScalingPlanResources
instance Control.DeepSeq.NFData Network.AWS.AutoScalingPlans.DescribeScalingPlanResources.DescribeScalingPlanResourcesResponse
instance Network.AWS.Pager.AWSPager Network.AWS.AutoScalingPlans.DescribeScalingPlanResources.DescribeScalingPlanResources
instance Data.Hashable.Class.Hashable Network.AWS.AutoScalingPlans.DescribeScalingPlanResources.DescribeScalingPlanResources
instance Control.DeepSeq.NFData Network.AWS.AutoScalingPlans.DescribeScalingPlanResources.DescribeScalingPlanResources
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.AutoScalingPlans.DescribeScalingPlanResources.DescribeScalingPlanResources
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.AutoScalingPlans.DescribeScalingPlanResources.DescribeScalingPlanResources
instance Network.AWS.Data.Path.ToPath Network.AWS.AutoScalingPlans.DescribeScalingPlanResources.DescribeScalingPlanResources
instance Network.AWS.Data.Query.ToQuery Network.AWS.AutoScalingPlans.DescribeScalingPlanResources.DescribeScalingPlanResources


-- | Deletes the specified scaling plan.
--   
--   Deleting a scaling plan deletes the underlying ScalingInstruction for
--   all of the scalable resources that are covered by the plan.
--   
--   If the plan has launched resources or has scaling activities in
--   progress, you must delete those resources separately.
module Network.AWS.AutoScalingPlans.DeleteScalingPlan

-- | <i>See:</i> <a>newDeleteScalingPlan</a> smart constructor.
data DeleteScalingPlan
DeleteScalingPlan' :: Text -> Integer -> DeleteScalingPlan

-- | The name of the scaling plan.
[$sel:scalingPlanName:DeleteScalingPlan'] :: DeleteScalingPlan -> Text

-- | The version number of the scaling plan. Currently, the only valid
--   value is <tt>1</tt>.
[$sel:scalingPlanVersion:DeleteScalingPlan'] :: DeleteScalingPlan -> Integer

-- | Create a value of <a>DeleteScalingPlan</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:scalingPlanName:DeleteScalingPlan'</a>,
--   <a>deleteScalingPlan_scalingPlanName</a> - The name of the scaling
--   plan.
--   
--   <a>$sel:scalingPlanVersion:DeleteScalingPlan'</a>,
--   <a>deleteScalingPlan_scalingPlanVersion</a> - The version number of
--   the scaling plan. Currently, the only valid value is <tt>1</tt>.
newDeleteScalingPlan :: Text -> Integer -> DeleteScalingPlan

-- | The name of the scaling plan.
deleteScalingPlan_scalingPlanName :: Lens' DeleteScalingPlan Text

-- | The version number of the scaling plan. Currently, the only valid
--   value is <tt>1</tt>.
deleteScalingPlan_scalingPlanVersion :: Lens' DeleteScalingPlan Integer

-- | <i>See:</i> <a>newDeleteScalingPlanResponse</a> smart constructor.
data DeleteScalingPlanResponse
DeleteScalingPlanResponse' :: Int -> DeleteScalingPlanResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteScalingPlanResponse'] :: DeleteScalingPlanResponse -> Int

-- | Create a value of <a>DeleteScalingPlanResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteScalingPlanResponse'</a>,
--   <a>deleteScalingPlanResponse_httpStatus</a> - The response's http
--   status code.
newDeleteScalingPlanResponse :: Int -> DeleteScalingPlanResponse

-- | The response's http status code.
deleteScalingPlanResponse_httpStatus :: Lens' DeleteScalingPlanResponse Int
instance GHC.Generics.Generic Network.AWS.AutoScalingPlans.DeleteScalingPlan.DeleteScalingPlan
instance GHC.Show.Show Network.AWS.AutoScalingPlans.DeleteScalingPlan.DeleteScalingPlan
instance GHC.Read.Read Network.AWS.AutoScalingPlans.DeleteScalingPlan.DeleteScalingPlan
instance GHC.Classes.Eq Network.AWS.AutoScalingPlans.DeleteScalingPlan.DeleteScalingPlan
instance GHC.Generics.Generic Network.AWS.AutoScalingPlans.DeleteScalingPlan.DeleteScalingPlanResponse
instance GHC.Show.Show Network.AWS.AutoScalingPlans.DeleteScalingPlan.DeleteScalingPlanResponse
instance GHC.Read.Read Network.AWS.AutoScalingPlans.DeleteScalingPlan.DeleteScalingPlanResponse
instance GHC.Classes.Eq Network.AWS.AutoScalingPlans.DeleteScalingPlan.DeleteScalingPlanResponse
instance Network.AWS.Types.AWSRequest Network.AWS.AutoScalingPlans.DeleteScalingPlan.DeleteScalingPlan
instance Control.DeepSeq.NFData Network.AWS.AutoScalingPlans.DeleteScalingPlan.DeleteScalingPlanResponse
instance Data.Hashable.Class.Hashable Network.AWS.AutoScalingPlans.DeleteScalingPlan.DeleteScalingPlan
instance Control.DeepSeq.NFData Network.AWS.AutoScalingPlans.DeleteScalingPlan.DeleteScalingPlan
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.AutoScalingPlans.DeleteScalingPlan.DeleteScalingPlan
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.AutoScalingPlans.DeleteScalingPlan.DeleteScalingPlan
instance Network.AWS.Data.Path.ToPath Network.AWS.AutoScalingPlans.DeleteScalingPlan.DeleteScalingPlan
instance Network.AWS.Data.Query.ToQuery Network.AWS.AutoScalingPlans.DeleteScalingPlan.DeleteScalingPlan


-- | Creates a scaling plan.
module Network.AWS.AutoScalingPlans.CreateScalingPlan

-- | <i>See:</i> <a>newCreateScalingPlan</a> smart constructor.
data CreateScalingPlan
CreateScalingPlan' :: Text -> ApplicationSource -> [ScalingInstruction] -> CreateScalingPlan

-- | The name of the scaling plan. Names cannot contain vertical bars,
--   colons, or forward slashes.
[$sel:scalingPlanName:CreateScalingPlan'] :: CreateScalingPlan -> Text

-- | A CloudFormation stack or set of tags. You can create one scaling plan
--   per application source.
--   
--   For more information, see <a>ApplicationSource</a> in the <i>AWS Auto
--   Scaling API Reference</i>.
[$sel:applicationSource:CreateScalingPlan'] :: CreateScalingPlan -> ApplicationSource

-- | The scaling instructions.
--   
--   For more information, see <a>ScalingInstruction</a> in the <i>AWS Auto
--   Scaling API Reference</i>.
[$sel:scalingInstructions:CreateScalingPlan'] :: CreateScalingPlan -> [ScalingInstruction]

-- | Create a value of <a>CreateScalingPlan</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:scalingPlanName:CreateScalingPlan'</a>,
--   <a>createScalingPlan_scalingPlanName</a> - The name of the scaling
--   plan. Names cannot contain vertical bars, colons, or forward slashes.
--   
--   <a>$sel:applicationSource:CreateScalingPlan'</a>,
--   <a>createScalingPlan_applicationSource</a> - A CloudFormation stack or
--   set of tags. You can create one scaling plan per application source.
--   
--   For more information, see <a>ApplicationSource</a> in the <i>AWS Auto
--   Scaling API Reference</i>.
--   
--   <a>$sel:scalingInstructions:CreateScalingPlan'</a>,
--   <a>createScalingPlan_scalingInstructions</a> - The scaling
--   instructions.
--   
--   For more information, see <a>ScalingInstruction</a> in the <i>AWS Auto
--   Scaling API Reference</i>.
newCreateScalingPlan :: Text -> ApplicationSource -> CreateScalingPlan

-- | The name of the scaling plan. Names cannot contain vertical bars,
--   colons, or forward slashes.
createScalingPlan_scalingPlanName :: Lens' CreateScalingPlan Text

-- | A CloudFormation stack or set of tags. You can create one scaling plan
--   per application source.
--   
--   For more information, see <a>ApplicationSource</a> in the <i>AWS Auto
--   Scaling API Reference</i>.
createScalingPlan_applicationSource :: Lens' CreateScalingPlan ApplicationSource

-- | The scaling instructions.
--   
--   For more information, see <a>ScalingInstruction</a> in the <i>AWS Auto
--   Scaling API Reference</i>.
createScalingPlan_scalingInstructions :: Lens' CreateScalingPlan [ScalingInstruction]

-- | <i>See:</i> <a>newCreateScalingPlanResponse</a> smart constructor.
data CreateScalingPlanResponse
CreateScalingPlanResponse' :: Int -> Integer -> CreateScalingPlanResponse

-- | The response's http status code.
[$sel:httpStatus:CreateScalingPlanResponse'] :: CreateScalingPlanResponse -> Int

-- | The version number of the scaling plan. This value is always
--   <tt>1</tt>. Currently, you cannot have multiple scaling plan versions.
[$sel:scalingPlanVersion:CreateScalingPlanResponse'] :: CreateScalingPlanResponse -> Integer

-- | Create a value of <a>CreateScalingPlanResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreateScalingPlanResponse'</a>,
--   <a>createScalingPlanResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:scalingPlanVersion:CreateScalingPlanResponse'</a>,
--   <a>createScalingPlanResponse_scalingPlanVersion</a> - The version
--   number of the scaling plan. This value is always <tt>1</tt>.
--   Currently, you cannot have multiple scaling plan versions.
newCreateScalingPlanResponse :: Int -> Integer -> CreateScalingPlanResponse

-- | The response's http status code.
createScalingPlanResponse_httpStatus :: Lens' CreateScalingPlanResponse Int

-- | The version number of the scaling plan. This value is always
--   <tt>1</tt>. Currently, you cannot have multiple scaling plan versions.
createScalingPlanResponse_scalingPlanVersion :: Lens' CreateScalingPlanResponse Integer
instance GHC.Generics.Generic Network.AWS.AutoScalingPlans.CreateScalingPlan.CreateScalingPlan
instance GHC.Show.Show Network.AWS.AutoScalingPlans.CreateScalingPlan.CreateScalingPlan
instance GHC.Read.Read Network.AWS.AutoScalingPlans.CreateScalingPlan.CreateScalingPlan
instance GHC.Classes.Eq Network.AWS.AutoScalingPlans.CreateScalingPlan.CreateScalingPlan
instance GHC.Generics.Generic Network.AWS.AutoScalingPlans.CreateScalingPlan.CreateScalingPlanResponse
instance GHC.Show.Show Network.AWS.AutoScalingPlans.CreateScalingPlan.CreateScalingPlanResponse
instance GHC.Read.Read Network.AWS.AutoScalingPlans.CreateScalingPlan.CreateScalingPlanResponse
instance GHC.Classes.Eq Network.AWS.AutoScalingPlans.CreateScalingPlan.CreateScalingPlanResponse
instance Network.AWS.Types.AWSRequest Network.AWS.AutoScalingPlans.CreateScalingPlan.CreateScalingPlan
instance Control.DeepSeq.NFData Network.AWS.AutoScalingPlans.CreateScalingPlan.CreateScalingPlanResponse
instance Data.Hashable.Class.Hashable Network.AWS.AutoScalingPlans.CreateScalingPlan.CreateScalingPlan
instance Control.DeepSeq.NFData Network.AWS.AutoScalingPlans.CreateScalingPlan.CreateScalingPlan
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.AutoScalingPlans.CreateScalingPlan.CreateScalingPlan
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.AutoScalingPlans.CreateScalingPlan.CreateScalingPlan
instance Network.AWS.Data.Path.ToPath Network.AWS.AutoScalingPlans.CreateScalingPlan.CreateScalingPlan
instance Network.AWS.Data.Query.ToQuery Network.AWS.AutoScalingPlans.CreateScalingPlan.CreateScalingPlan


-- | Updates the specified scaling plan.
--   
--   You cannot update a scaling plan if it is in the process of being
--   created, updated, or deleted.
module Network.AWS.AutoScalingPlans.UpdateScalingPlan

-- | <i>See:</i> <a>newUpdateScalingPlan</a> smart constructor.
data UpdateScalingPlan
UpdateScalingPlan' :: Maybe ApplicationSource -> Maybe [ScalingInstruction] -> Text -> Integer -> UpdateScalingPlan

-- | A CloudFormation stack or set of tags.
--   
--   For more information, see <a>ApplicationSource</a> in the <i>AWS Auto
--   Scaling API Reference</i>.
[$sel:applicationSource:UpdateScalingPlan'] :: UpdateScalingPlan -> Maybe ApplicationSource

-- | The scaling instructions.
--   
--   For more information, see <a>ScalingInstruction</a> in the <i>AWS Auto
--   Scaling API Reference</i>.
[$sel:scalingInstructions:UpdateScalingPlan'] :: UpdateScalingPlan -> Maybe [ScalingInstruction]

-- | The name of the scaling plan.
[$sel:scalingPlanName:UpdateScalingPlan'] :: UpdateScalingPlan -> Text

-- | The version number of the scaling plan. The only valid value is
--   <tt>1</tt>. Currently, you cannot have multiple scaling plan versions.
[$sel:scalingPlanVersion:UpdateScalingPlan'] :: UpdateScalingPlan -> Integer

-- | Create a value of <a>UpdateScalingPlan</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:applicationSource:UpdateScalingPlan'</a>,
--   <a>updateScalingPlan_applicationSource</a> - A CloudFormation stack or
--   set of tags.
--   
--   For more information, see <a>ApplicationSource</a> in the <i>AWS Auto
--   Scaling API Reference</i>.
--   
--   <a>$sel:scalingInstructions:UpdateScalingPlan'</a>,
--   <a>updateScalingPlan_scalingInstructions</a> - The scaling
--   instructions.
--   
--   For more information, see <a>ScalingInstruction</a> in the <i>AWS Auto
--   Scaling API Reference</i>.
--   
--   <a>$sel:scalingPlanName:UpdateScalingPlan'</a>,
--   <a>updateScalingPlan_scalingPlanName</a> - The name of the scaling
--   plan.
--   
--   <a>$sel:scalingPlanVersion:UpdateScalingPlan'</a>,
--   <a>updateScalingPlan_scalingPlanVersion</a> - The version number of
--   the scaling plan. The only valid value is <tt>1</tt>. Currently, you
--   cannot have multiple scaling plan versions.
newUpdateScalingPlan :: Text -> Integer -> UpdateScalingPlan

-- | A CloudFormation stack or set of tags.
--   
--   For more information, see <a>ApplicationSource</a> in the <i>AWS Auto
--   Scaling API Reference</i>.
updateScalingPlan_applicationSource :: Lens' UpdateScalingPlan (Maybe ApplicationSource)

-- | The scaling instructions.
--   
--   For more information, see <a>ScalingInstruction</a> in the <i>AWS Auto
--   Scaling API Reference</i>.
updateScalingPlan_scalingInstructions :: Lens' UpdateScalingPlan (Maybe [ScalingInstruction])

-- | The name of the scaling plan.
updateScalingPlan_scalingPlanName :: Lens' UpdateScalingPlan Text

-- | The version number of the scaling plan. The only valid value is
--   <tt>1</tt>. Currently, you cannot have multiple scaling plan versions.
updateScalingPlan_scalingPlanVersion :: Lens' UpdateScalingPlan Integer

-- | <i>See:</i> <a>newUpdateScalingPlanResponse</a> smart constructor.
data UpdateScalingPlanResponse
UpdateScalingPlanResponse' :: Int -> UpdateScalingPlanResponse

-- | The response's http status code.
[$sel:httpStatus:UpdateScalingPlanResponse'] :: UpdateScalingPlanResponse -> Int

-- | Create a value of <a>UpdateScalingPlanResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateScalingPlanResponse'</a>,
--   <a>updateScalingPlanResponse_httpStatus</a> - The response's http
--   status code.
newUpdateScalingPlanResponse :: Int -> UpdateScalingPlanResponse

-- | The response's http status code.
updateScalingPlanResponse_httpStatus :: Lens' UpdateScalingPlanResponse Int
instance GHC.Generics.Generic Network.AWS.AutoScalingPlans.UpdateScalingPlan.UpdateScalingPlan
instance GHC.Show.Show Network.AWS.AutoScalingPlans.UpdateScalingPlan.UpdateScalingPlan
instance GHC.Read.Read Network.AWS.AutoScalingPlans.UpdateScalingPlan.UpdateScalingPlan
instance GHC.Classes.Eq Network.AWS.AutoScalingPlans.UpdateScalingPlan.UpdateScalingPlan
instance GHC.Generics.Generic Network.AWS.AutoScalingPlans.UpdateScalingPlan.UpdateScalingPlanResponse
instance GHC.Show.Show Network.AWS.AutoScalingPlans.UpdateScalingPlan.UpdateScalingPlanResponse
instance GHC.Read.Read Network.AWS.AutoScalingPlans.UpdateScalingPlan.UpdateScalingPlanResponse
instance GHC.Classes.Eq Network.AWS.AutoScalingPlans.UpdateScalingPlan.UpdateScalingPlanResponse
instance Network.AWS.Types.AWSRequest Network.AWS.AutoScalingPlans.UpdateScalingPlan.UpdateScalingPlan
instance Control.DeepSeq.NFData Network.AWS.AutoScalingPlans.UpdateScalingPlan.UpdateScalingPlanResponse
instance Data.Hashable.Class.Hashable Network.AWS.AutoScalingPlans.UpdateScalingPlan.UpdateScalingPlan
instance Control.DeepSeq.NFData Network.AWS.AutoScalingPlans.UpdateScalingPlan.UpdateScalingPlan
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.AutoScalingPlans.UpdateScalingPlan.UpdateScalingPlan
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.AutoScalingPlans.UpdateScalingPlan.UpdateScalingPlan
instance Network.AWS.Data.Path.ToPath Network.AWS.AutoScalingPlans.UpdateScalingPlan.UpdateScalingPlan
instance Network.AWS.Data.Query.ToQuery Network.AWS.AutoScalingPlans.UpdateScalingPlan.UpdateScalingPlan


module Network.AWS.AutoScalingPlans.Lens

-- | A CloudFormation stack or set of tags.
--   
--   For more information, see <a>ApplicationSource</a> in the <i>AWS Auto
--   Scaling API Reference</i>.
updateScalingPlan_applicationSource :: Lens' UpdateScalingPlan (Maybe ApplicationSource)

-- | The scaling instructions.
--   
--   For more information, see <a>ScalingInstruction</a> in the <i>AWS Auto
--   Scaling API Reference</i>.
updateScalingPlan_scalingInstructions :: Lens' UpdateScalingPlan (Maybe [ScalingInstruction])

-- | The name of the scaling plan.
updateScalingPlan_scalingPlanName :: Lens' UpdateScalingPlan Text

-- | The version number of the scaling plan. The only valid value is
--   <tt>1</tt>. Currently, you cannot have multiple scaling plan versions.
updateScalingPlan_scalingPlanVersion :: Lens' UpdateScalingPlan Integer

-- | The response's http status code.
updateScalingPlanResponse_httpStatus :: Lens' UpdateScalingPlanResponse Int

-- | The name of the scaling plan.
deleteScalingPlan_scalingPlanName :: Lens' DeleteScalingPlan Text

-- | The version number of the scaling plan. Currently, the only valid
--   value is <tt>1</tt>.
deleteScalingPlan_scalingPlanVersion :: Lens' DeleteScalingPlan Integer

-- | The response's http status code.
deleteScalingPlanResponse_httpStatus :: Lens' DeleteScalingPlanResponse Int

-- | The token for the next set of results.
describeScalingPlanResources_nextToken :: Lens' DescribeScalingPlanResources (Maybe Text)

-- | The maximum number of scalable resources to return. The value must be
--   between 1 and 50. The default value is 50.
describeScalingPlanResources_maxResults :: Lens' DescribeScalingPlanResources (Maybe Int)

-- | The name of the scaling plan.
describeScalingPlanResources_scalingPlanName :: Lens' DescribeScalingPlanResources Text

-- | The version number of the scaling plan. Currently, the only valid
--   value is <tt>1</tt>.
describeScalingPlanResources_scalingPlanVersion :: Lens' DescribeScalingPlanResources Integer

-- | The token required to get the next set of results. This value is
--   <tt>null</tt> if there are no more results to return.
describeScalingPlanResourcesResponse_nextToken :: Lens' DescribeScalingPlanResourcesResponse (Maybe Text)

-- | Information about the scalable resources.
describeScalingPlanResourcesResponse_scalingPlanResources :: Lens' DescribeScalingPlanResourcesResponse (Maybe [ScalingPlanResource])

-- | The response's http status code.
describeScalingPlanResourcesResponse_httpStatus :: Lens' DescribeScalingPlanResourcesResponse Int

-- | The name of the scaling plan.
getScalingPlanResourceForecastData_scalingPlanName :: Lens' GetScalingPlanResourceForecastData Text

-- | The version number of the scaling plan. Currently, the only valid
--   value is <tt>1</tt>.
getScalingPlanResourceForecastData_scalingPlanVersion :: Lens' GetScalingPlanResourceForecastData Integer

-- | The namespace of the AWS service. The only valid value is
--   <tt>autoscaling</tt>.
getScalingPlanResourceForecastData_serviceNamespace :: Lens' GetScalingPlanResourceForecastData ServiceNamespace

-- | The ID of the resource. This string consists of a prefix
--   (<tt>autoScalingGroup</tt>) followed by the name of a specified Auto
--   Scaling group (<tt>my-asg</tt>). Example:
--   <tt>autoScalingGroup/my-asg</tt>.
getScalingPlanResourceForecastData_resourceId :: Lens' GetScalingPlanResourceForecastData Text

-- | The scalable dimension for the resource. The only valid value is
--   <tt>autoscaling:autoScalingGroup:DesiredCapacity</tt>.
getScalingPlanResourceForecastData_scalableDimension :: Lens' GetScalingPlanResourceForecastData ScalableDimension

-- | The type of forecast data to get.
--   
--   <ul>
--   <li><tt>LoadForecast</tt>: The load metric forecast.</li>
--   <li><tt>CapacityForecast</tt>: The capacity forecast.</li>
--   <li><tt>ScheduledActionMinCapacity</tt>: The minimum capacity for each
--   scheduled scaling action. This data is calculated as the larger of two
--   values: the capacity forecast or the minimum capacity in the scaling
--   instruction.</li>
--   <li><tt>ScheduledActionMaxCapacity</tt>: The maximum capacity for each
--   scheduled scaling action. The calculation used is determined by the
--   predictive scaling maximum capacity behavior setting in the scaling
--   instruction.</li>
--   </ul>
getScalingPlanResourceForecastData_forecastDataType :: Lens' GetScalingPlanResourceForecastData ForecastDataType

-- | The inclusive start time of the time range for the forecast data to
--   get. The date and time can be at most 56 days before the current date
--   and time.
getScalingPlanResourceForecastData_startTime :: Lens' GetScalingPlanResourceForecastData UTCTime

-- | The exclusive end time of the time range for the forecast data to get.
--   The maximum time duration between the start and end time is seven
--   days.
--   
--   Although this parameter can accept a date and time that is more than
--   two days in the future, the availability of forecast data has limits.
--   AWS Auto Scaling only issues forecasts for periods of two days in
--   advance.
getScalingPlanResourceForecastData_endTime :: Lens' GetScalingPlanResourceForecastData UTCTime

-- | The response's http status code.
getScalingPlanResourceForecastDataResponse_httpStatus :: Lens' GetScalingPlanResourceForecastDataResponse Int

-- | The data points to return.
getScalingPlanResourceForecastDataResponse_datapoints :: Lens' GetScalingPlanResourceForecastDataResponse [Datapoint]

-- | The version number of the scaling plan. Currently, the only valid
--   value is <tt>1</tt>.
--   
--   If you specify a scaling plan version, you must also specify a scaling
--   plan name.
describeScalingPlans_scalingPlanVersion :: Lens' DescribeScalingPlans (Maybe Integer)

-- | The token for the next set of results.
describeScalingPlans_nextToken :: Lens' DescribeScalingPlans (Maybe Text)

-- | The maximum number of scalable resources to return. This value can be
--   between 1 and 50. The default value is 50.
describeScalingPlans_maxResults :: Lens' DescribeScalingPlans (Maybe Int)

-- | The names of the scaling plans (up to 10). If you specify application
--   sources, you cannot specify scaling plan names.
describeScalingPlans_scalingPlanNames :: Lens' DescribeScalingPlans (Maybe [Text])

-- | The sources for the applications (up to 10). If you specify scaling
--   plan names, you cannot specify application sources.
describeScalingPlans_applicationSources :: Lens' DescribeScalingPlans (Maybe [ApplicationSource])

-- | The token required to get the next set of results. This value is
--   <tt>null</tt> if there are no more results to return.
describeScalingPlansResponse_nextToken :: Lens' DescribeScalingPlansResponse (Maybe Text)

-- | Information about the scaling plans.
describeScalingPlansResponse_scalingPlans :: Lens' DescribeScalingPlansResponse (Maybe [ScalingPlan])

-- | The response's http status code.
describeScalingPlansResponse_httpStatus :: Lens' DescribeScalingPlansResponse Int

-- | The name of the scaling plan. Names cannot contain vertical bars,
--   colons, or forward slashes.
createScalingPlan_scalingPlanName :: Lens' CreateScalingPlan Text

-- | A CloudFormation stack or set of tags. You can create one scaling plan
--   per application source.
--   
--   For more information, see <a>ApplicationSource</a> in the <i>AWS Auto
--   Scaling API Reference</i>.
createScalingPlan_applicationSource :: Lens' CreateScalingPlan ApplicationSource

-- | The scaling instructions.
--   
--   For more information, see <a>ScalingInstruction</a> in the <i>AWS Auto
--   Scaling API Reference</i>.
createScalingPlan_scalingInstructions :: Lens' CreateScalingPlan [ScalingInstruction]

-- | The response's http status code.
createScalingPlanResponse_httpStatus :: Lens' CreateScalingPlanResponse Int

-- | The version number of the scaling plan. This value is always
--   <tt>1</tt>. Currently, you cannot have multiple scaling plan versions.
createScalingPlanResponse_scalingPlanVersion :: Lens' CreateScalingPlanResponse Integer

-- | A set of tags (up to 50).
applicationSource_tagFilters :: Lens' ApplicationSource (Maybe [TagFilter])

-- | The Amazon Resource Name (ARN) of a AWS CloudFormation stack.
applicationSource_cloudFormationStackARN :: Lens' ApplicationSource (Maybe Text)

-- | The unit of the metric.
customizedLoadMetricSpecification_unit :: Lens' CustomizedLoadMetricSpecification (Maybe Text)

-- | The dimensions of the metric.
--   
--   Conditional: If you published your metric with dimensions, you must
--   specify the same dimensions in your customized load metric
--   specification.
customizedLoadMetricSpecification_dimensions :: Lens' CustomizedLoadMetricSpecification (Maybe [MetricDimension])

-- | The name of the metric.
customizedLoadMetricSpecification_metricName :: Lens' CustomizedLoadMetricSpecification Text

-- | The namespace of the metric.
customizedLoadMetricSpecification_namespace :: Lens' CustomizedLoadMetricSpecification Text

-- | The statistic of the metric. The only valid value is <tt>Sum</tt>.
customizedLoadMetricSpecification_statistic :: Lens' CustomizedLoadMetricSpecification MetricStatistic

-- | The unit of the metric.
customizedScalingMetricSpecification_unit :: Lens' CustomizedScalingMetricSpecification (Maybe Text)

-- | The dimensions of the metric.
--   
--   Conditional: If you published your metric with dimensions, you must
--   specify the same dimensions in your customized scaling metric
--   specification.
customizedScalingMetricSpecification_dimensions :: Lens' CustomizedScalingMetricSpecification (Maybe [MetricDimension])

-- | The name of the metric.
customizedScalingMetricSpecification_metricName :: Lens' CustomizedScalingMetricSpecification Text

-- | The namespace of the metric.
customizedScalingMetricSpecification_namespace :: Lens' CustomizedScalingMetricSpecification Text

-- | The statistic of the metric.
customizedScalingMetricSpecification_statistic :: Lens' CustomizedScalingMetricSpecification MetricStatistic

-- | The time stamp for the data point in UTC format.
datapoint_timestamp :: Lens' Datapoint (Maybe UTCTime)

-- | The value of the data point.
datapoint_value :: Lens' Datapoint (Maybe Double)

-- | The name of the dimension.
metricDimension_name :: Lens' MetricDimension Text

-- | The value of the dimension.
metricDimension_value :: Lens' MetricDimension Text

-- | Identifies the resource associated with the metric type. You can't
--   specify a resource label unless the metric type is
--   <tt>ALBTargetGroupRequestCount</tt> and there is a target group for an
--   Application Load Balancer attached to the Auto Scaling group.
--   
--   You create the resource label by appending the final portion of the
--   load balancer ARN and the final portion of the target group ARN into a
--   single value, separated by a forward slash (/). The format is
--   app/&lt;load-balancer-name&gt;/&lt;load-balancer-id&gt;/targetgroup/&lt;target-group-name&gt;/&lt;target-group-id&gt;,
--   where:
--   
--   <ul>
--   <li>app/&lt;load-balancer-name&gt;/&lt;load-balancer-id&gt; is the
--   final portion of the load balancer ARN</li>
--   <li>targetgroup/&lt;target-group-name&gt;/&lt;target-group-id&gt; is
--   the final portion of the target group ARN.</li>
--   </ul>
--   
--   This is an example:
--   app/EC2Co-EcsEl-1TKLTMITMM0EO/f37c06a68c1748aa/targetgroup/EC2Co-Defau-LDNM7Q3ZH1ZN/6d4ea56ca2d6a18d.
--   
--   To find the ARN for an Application Load Balancer, use the
--   <a>DescribeLoadBalancers</a> API operation. To find the ARN for the
--   target group, use the <a>DescribeTargetGroups</a> API operation.
predefinedLoadMetricSpecification_resourceLabel :: Lens' PredefinedLoadMetricSpecification (Maybe Text)

-- | The metric type.
predefinedLoadMetricSpecification_predefinedLoadMetricType :: Lens' PredefinedLoadMetricSpecification LoadMetricType

-- | Identifies the resource associated with the metric type. You can't
--   specify a resource label unless the metric type is
--   <tt>ALBRequestCountPerTarget</tt> and there is a target group for an
--   Application Load Balancer attached to the Auto Scaling group, Spot
--   Fleet request, or ECS service.
--   
--   You create the resource label by appending the final portion of the
--   load balancer ARN and the final portion of the target group ARN into a
--   single value, separated by a forward slash (/). The format is
--   app/&lt;load-balancer-name&gt;/&lt;load-balancer-id&gt;/targetgroup/&lt;target-group-name&gt;/&lt;target-group-id&gt;,
--   where:
--   
--   <ul>
--   <li>app/&lt;load-balancer-name&gt;/&lt;load-balancer-id&gt; is the
--   final portion of the load balancer ARN</li>
--   <li>targetgroup/&lt;target-group-name&gt;/&lt;target-group-id&gt; is
--   the final portion of the target group ARN.</li>
--   </ul>
--   
--   This is an example:
--   app/EC2Co-EcsEl-1TKLTMITMM0EO/f37c06a68c1748aa/targetgroup/EC2Co-Defau-LDNM7Q3ZH1ZN/6d4ea56ca2d6a18d.
--   
--   To find the ARN for an Application Load Balancer, use the
--   <a>DescribeLoadBalancers</a> API operation. To find the ARN for the
--   target group, use the <a>DescribeTargetGroups</a> API operation.
predefinedScalingMetricSpecification_resourceLabel :: Lens' PredefinedScalingMetricSpecification (Maybe Text)

-- | The metric type. The <tt>ALBRequestCountPerTarget</tt> metric type
--   applies only to Auto Scaling groups, Spot Fleet requests, and ECS
--   services.
predefinedScalingMetricSpecification_predefinedScalingMetricType :: Lens' PredefinedScalingMetricSpecification ScalingMetricType

-- | Controls whether dynamic scaling by AWS Auto Scaling is disabled. When
--   dynamic scaling is enabled, AWS Auto Scaling creates target tracking
--   scaling policies based on the specified target tracking
--   configurations.
--   
--   The default is enabled (<tt>false</tt>).
scalingInstruction_disableDynamicScaling :: Lens' ScalingInstruction (Maybe Bool)

-- | The predefined load metric to use for predictive scaling. This
--   parameter or a <b>CustomizedLoadMetricSpecification</b> is required
--   when configuring predictive scaling, and cannot be used otherwise.
scalingInstruction_predefinedLoadMetricSpecification :: Lens' ScalingInstruction (Maybe PredefinedLoadMetricSpecification)

-- | Defines the behavior that should be applied if the forecast capacity
--   approaches or exceeds the maximum capacity specified for the resource.
--   The default value is <tt>SetForecastCapacityToMaxCapacity</tt>.
--   
--   The following are possible values:
--   
--   <ul>
--   <li><tt>SetForecastCapacityToMaxCapacity</tt> - AWS Auto Scaling
--   cannot scale resource capacity higher than the maximum capacity. The
--   maximum capacity is enforced as a hard limit.</li>
--   <li><tt>SetMaxCapacityToForecastCapacity</tt> - AWS Auto Scaling may
--   scale resource capacity higher than the maximum capacity to equal but
--   not exceed forecast capacity.</li>
--   <li><tt>SetMaxCapacityAboveForecastCapacity</tt> - AWS Auto Scaling
--   may scale resource capacity higher than the maximum capacity by a
--   specified buffer value. The intention is to give the target tracking
--   scaling policy extra capacity if unexpected traffic occurs.</li>
--   </ul>
--   
--   Only valid when configuring predictive scaling.
scalingInstruction_predictiveScalingMaxCapacityBehavior :: Lens' ScalingInstruction (Maybe PredictiveScalingMaxCapacityBehavior)

-- | The customized load metric to use for predictive scaling. This
--   parameter or a <b>PredefinedLoadMetricSpecification</b> is required
--   when configuring predictive scaling, and cannot be used otherwise.
scalingInstruction_customizedLoadMetricSpecification :: Lens' ScalingInstruction (Maybe CustomizedLoadMetricSpecification)

-- | The size of the capacity buffer to use when the forecast capacity is
--   close to or exceeds the maximum capacity. The value is specified as a
--   percentage relative to the forecast capacity. For example, if the
--   buffer is 10, this means a 10 percent buffer, such that if the
--   forecast capacity is 50, and the maximum capacity is 40, then the
--   effective maximum capacity is 55.
--   
--   Only valid when configuring predictive scaling. Required if the
--   <b>PredictiveScalingMaxCapacityBehavior</b> is set to
--   <tt>SetMaxCapacityAboveForecastCapacity</tt>, and cannot be used
--   otherwise.
--   
--   The range is 1-100.
scalingInstruction_predictiveScalingMaxCapacityBuffer :: Lens' ScalingInstruction (Maybe Int)

-- | The predictive scaling mode. The default value is
--   <tt>ForecastAndScale</tt>. Otherwise, AWS Auto Scaling forecasts
--   capacity but does not create any scheduled scaling actions based on
--   the capacity forecast.
scalingInstruction_predictiveScalingMode :: Lens' ScalingInstruction (Maybe PredictiveScalingMode)

-- | Controls whether a resource's externally created scaling policies are
--   kept or replaced.
--   
--   The default value is <tt>KeepExternalPolicies</tt>. If the parameter
--   is set to <tt>ReplaceExternalPolicies</tt>, any scaling policies that
--   are external to AWS Auto Scaling are deleted and new target tracking
--   scaling policies created.
--   
--   Only valid when configuring dynamic scaling.
--   
--   Condition: The number of existing policies to be replaced must be less
--   than or equal to 50. If there are more than 50 policies to be
--   replaced, AWS Auto Scaling keeps all existing policies and does not
--   create new ones.
scalingInstruction_scalingPolicyUpdateBehavior :: Lens' ScalingInstruction (Maybe ScalingPolicyUpdateBehavior)

-- | The amount of time, in seconds, to buffer the run time of scheduled
--   scaling actions when scaling out. For example, if the forecast says to
--   add capacity at 10:00 AM, and the buffer time is 5 minutes, then the
--   run time of the corresponding scheduled scaling action will be 9:55
--   AM. The intention is to give resources time to be provisioned. For
--   example, it can take a few minutes to launch an EC2 instance. The
--   actual amount of time required depends on several factors, such as the
--   size of the instance and whether there are startup scripts to
--   complete.
--   
--   The value must be less than the forecast interval duration of 3600
--   seconds (60 minutes). The default is 300 seconds.
--   
--   Only valid when configuring predictive scaling.
scalingInstruction_scheduledActionBufferTime :: Lens' ScalingInstruction (Maybe Natural)

-- | The namespace of the AWS service.
scalingInstruction_serviceNamespace :: Lens' ScalingInstruction ServiceNamespace

-- | The ID of the resource. This string consists of the resource type and
--   unique identifier.
--   
--   <ul>
--   <li>Auto Scaling group - The resource type is
--   <tt>autoScalingGroup</tt> and the unique identifier is the name of the
--   Auto Scaling group. Example: <tt>autoScalingGroup/my-asg</tt>.</li>
--   <li>ECS service - The resource type is <tt>service</tt> and the unique
--   identifier is the cluster name and service name. Example:
--   <tt>service/default/sample-webapp</tt>.</li>
--   <li>Spot Fleet request - The resource type is
--   <tt>spot-fleet-request</tt> and the unique identifier is the Spot
--   Fleet request ID. Example:
--   <tt>spot-fleet-request/sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE</tt>.</li>
--   <li>DynamoDB table - The resource type is <tt>table</tt> and the
--   unique identifier is the resource ID. Example:
--   <tt>table/my-table</tt>.</li>
--   <li>DynamoDB global secondary index - The resource type is
--   <tt>index</tt> and the unique identifier is the resource ID. Example:
--   <tt>table/my-table/index/my-table-index</tt>.</li>
--   <li>Aurora DB cluster - The resource type is <tt>cluster</tt> and the
--   unique identifier is the cluster name. Example:
--   <tt>cluster:my-db-cluster</tt>.</li>
--   </ul>
scalingInstruction_resourceId :: Lens' ScalingInstruction Text

-- | The scalable dimension associated with the resource.
--   
--   <ul>
--   <li><tt>autoscaling:autoScalingGroup:DesiredCapacity</tt> - The
--   desired capacity of an Auto Scaling group.</li>
--   <li><tt>ecs:service:DesiredCount</tt> - The desired task count of an
--   ECS service.</li>
--   <li><tt>ec2:spot-fleet-request:TargetCapacity</tt> - The target
--   capacity of a Spot Fleet request.</li>
--   <li><tt>dynamodb:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:table:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:index:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>dynamodb:index:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>rds:cluster:ReadReplicaCount</tt> - The count of Aurora
--   Replicas in an Aurora DB cluster. Available for Aurora
--   MySQL-compatible edition and Aurora PostgreSQL-compatible
--   edition.</li>
--   </ul>
scalingInstruction_scalableDimension :: Lens' ScalingInstruction ScalableDimension

-- | The minimum capacity of the resource.
scalingInstruction_minCapacity :: Lens' ScalingInstruction Int

-- | The maximum capacity of the resource. The exception to this upper
--   limit is if you specify a non-default setting for
--   <b>PredictiveScalingMaxCapacityBehavior</b>.
scalingInstruction_maxCapacity :: Lens' ScalingInstruction Int

-- | The target tracking configurations (up to 10). Each of these
--   structures must specify a unique scaling metric and a target value for
--   the metric.
scalingInstruction_targetTrackingConfigurations :: Lens' ScalingInstruction [TargetTrackingConfiguration]

-- | A simple message about the current status of the scaling plan.
scalingPlan_statusMessage :: Lens' ScalingPlan (Maybe Text)

-- | The Unix time stamp when the scaling plan was created.
scalingPlan_creationTime :: Lens' ScalingPlan (Maybe UTCTime)

-- | The Unix time stamp when the scaling plan entered the current status.
scalingPlan_statusStartTime :: Lens' ScalingPlan (Maybe UTCTime)

-- | The name of the scaling plan.
scalingPlan_scalingPlanName :: Lens' ScalingPlan Text

-- | The version number of the scaling plan.
scalingPlan_scalingPlanVersion :: Lens' ScalingPlan Integer

-- | A CloudFormation stack or a set of tags. You can create one scaling
--   plan per application source.
scalingPlan_applicationSource :: Lens' ScalingPlan ApplicationSource

-- | The scaling instructions.
scalingPlan_scalingInstructions :: Lens' ScalingPlan [ScalingInstruction]

-- | The status of the scaling plan.
--   
--   <ul>
--   <li><tt>Active</tt> - The scaling plan is active.</li>
--   <li><tt>ActiveWithProblems</tt> - The scaling plan is active, but the
--   scaling configuration for one or more resources could not be
--   applied.</li>
--   <li><tt>CreationInProgress</tt> - The scaling plan is being
--   created.</li>
--   <li><tt>CreationFailed</tt> - The scaling plan could not be
--   created.</li>
--   <li><tt>DeletionInProgress</tt> - The scaling plan is being
--   deleted.</li>
--   <li><tt>DeletionFailed</tt> - The scaling plan could not be
--   deleted.</li>
--   <li><tt>UpdateInProgress</tt> - The scaling plan is being
--   updated.</li>
--   <li><tt>UpdateFailed</tt> - The scaling plan could not be
--   updated.</li>
--   </ul>
scalingPlan_statusCode :: Lens' ScalingPlan ScalingPlanStatusCode

-- | The scaling policies.
scalingPlanResource_scalingPolicies :: Lens' ScalingPlanResource (Maybe [ScalingPolicy])

-- | A simple message about the current scaling status of the resource.
scalingPlanResource_scalingStatusMessage :: Lens' ScalingPlanResource (Maybe Text)

-- | The name of the scaling plan.
scalingPlanResource_scalingPlanName :: Lens' ScalingPlanResource Text

-- | The version number of the scaling plan.
scalingPlanResource_scalingPlanVersion :: Lens' ScalingPlanResource Integer

-- | The namespace of the AWS service.
scalingPlanResource_serviceNamespace :: Lens' ScalingPlanResource ServiceNamespace

-- | The ID of the resource. This string consists of the resource type and
--   unique identifier.
--   
--   <ul>
--   <li>Auto Scaling group - The resource type is
--   <tt>autoScalingGroup</tt> and the unique identifier is the name of the
--   Auto Scaling group. Example: <tt>autoScalingGroup/my-asg</tt>.</li>
--   <li>ECS service - The resource type is <tt>service</tt> and the unique
--   identifier is the cluster name and service name. Example:
--   <tt>service/default/sample-webapp</tt>.</li>
--   <li>Spot Fleet request - The resource type is
--   <tt>spot-fleet-request</tt> and the unique identifier is the Spot
--   Fleet request ID. Example:
--   <tt>spot-fleet-request/sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE</tt>.</li>
--   <li>DynamoDB table - The resource type is <tt>table</tt> and the
--   unique identifier is the resource ID. Example:
--   <tt>table/my-table</tt>.</li>
--   <li>DynamoDB global secondary index - The resource type is
--   <tt>index</tt> and the unique identifier is the resource ID. Example:
--   <tt>table/my-table/index/my-table-index</tt>.</li>
--   <li>Aurora DB cluster - The resource type is <tt>cluster</tt> and the
--   unique identifier is the cluster name. Example:
--   <tt>cluster:my-db-cluster</tt>.</li>
--   </ul>
scalingPlanResource_resourceId :: Lens' ScalingPlanResource Text

-- | The scalable dimension for the resource.
--   
--   <ul>
--   <li><tt>autoscaling:autoScalingGroup:DesiredCapacity</tt> - The
--   desired capacity of an Auto Scaling group.</li>
--   <li><tt>ecs:service:DesiredCount</tt> - The desired task count of an
--   ECS service.</li>
--   <li><tt>ec2:spot-fleet-request:TargetCapacity</tt> - The target
--   capacity of a Spot Fleet request.</li>
--   <li><tt>dynamodb:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:table:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:index:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>dynamodb:index:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>rds:cluster:ReadReplicaCount</tt> - The count of Aurora
--   Replicas in an Aurora DB cluster. Available for Aurora
--   MySQL-compatible edition and Aurora PostgreSQL-compatible
--   edition.</li>
--   </ul>
scalingPlanResource_scalableDimension :: Lens' ScalingPlanResource ScalableDimension

-- | The scaling status of the resource.
--   
--   <ul>
--   <li><tt>Active</tt> - The scaling configuration is active.</li>
--   <li><tt>Inactive</tt> - The scaling configuration is not active
--   because the scaling plan is being created or the scaling configuration
--   could not be applied. Check the status message for more
--   information.</li>
--   <li><tt>PartiallyActive</tt> - The scaling configuration is partially
--   active because the scaling plan is being created or deleted or the
--   scaling configuration could not be fully applied. Check the status
--   message for more information.</li>
--   </ul>
scalingPlanResource_scalingStatusCode :: Lens' ScalingPlanResource ScalingStatusCode

-- | The target tracking scaling policy. Includes support for predefined or
--   customized metrics.
scalingPolicy_targetTrackingConfiguration :: Lens' ScalingPolicy (Maybe TargetTrackingConfiguration)

-- | The name of the scaling policy.
scalingPolicy_policyName :: Lens' ScalingPolicy Text

-- | The type of scaling policy.
scalingPolicy_policyType :: Lens' ScalingPolicy PolicyType

-- | The tag key.
tagFilter_key :: Lens' TagFilter (Maybe Text)

-- | The tag values (0 to 20).
tagFilter_values :: Lens' TagFilter (Maybe [Text])

-- | Indicates whether scale in by the target tracking scaling policy is
--   disabled. If the value is <tt>true</tt>, scale in is disabled and the
--   target tracking scaling policy doesn't remove capacity from the
--   scalable resource. Otherwise, scale in is enabled and the target
--   tracking scaling policy can remove capacity from the scalable
--   resource.
--   
--   The default value is <tt>false</tt>.
targetTrackingConfiguration_disableScaleIn :: Lens' TargetTrackingConfiguration (Maybe Bool)

-- | A customized metric. You can specify either a predefined metric or a
--   customized metric.
targetTrackingConfiguration_customizedScalingMetricSpecification :: Lens' TargetTrackingConfiguration (Maybe CustomizedScalingMetricSpecification)

-- | A predefined metric. You can specify either a predefined metric or a
--   customized metric.
targetTrackingConfiguration_predefinedScalingMetricSpecification :: Lens' TargetTrackingConfiguration (Maybe PredefinedScalingMetricSpecification)

-- | The estimated time, in seconds, until a newly launched instance can
--   contribute to the CloudWatch metrics. This value is used only if the
--   resource is an Auto Scaling group.
targetTrackingConfiguration_estimatedInstanceWarmup :: Lens' TargetTrackingConfiguration (Maybe Int)

-- | The amount of time, in seconds, to wait for a previous scale-out
--   activity to take effect. This property is not used if the scalable
--   resource is an Auto Scaling group.
--   
--   With the <i>scale-out cooldown period</i>, the intention is to
--   continuously (but not excessively) scale out. After Auto Scaling
--   successfully scales out using a target tracking scaling policy, it
--   starts to calculate the cooldown time. The scaling policy won't
--   increase the desired capacity again unless either a larger scale out
--   is triggered or the cooldown period ends.
targetTrackingConfiguration_scaleOutCooldown :: Lens' TargetTrackingConfiguration (Maybe Int)

-- | The amount of time, in seconds, after a scale-in activity completes
--   before another scale-in activity can start. This property is not used
--   if the scalable resource is an Auto Scaling group.
--   
--   With the <i>scale-in cooldown period</i>, the intention is to scale in
--   conservatively to protect your application’s availability, so scale-in
--   activities are blocked until the cooldown period has expired. However,
--   if another alarm triggers a scale-out activity during the scale-in
--   cooldown period, Auto Scaling scales out the target immediately. In
--   this case, the scale-in cooldown period stops and doesn't complete.
targetTrackingConfiguration_scaleInCooldown :: Lens' TargetTrackingConfiguration (Maybe Int)

-- | The target value for the metric. Although this property accepts
--   numbers of type Double, it won't accept values that are either too
--   small or too large. Values must be in the range of -2^360 to 2^360.
targetTrackingConfiguration_targetValue :: Lens' TargetTrackingConfiguration Double


module Network.AWS.AutoScalingPlans.Waiters


-- | Derived from API version <tt>2018-01-06</tt> of the AWS service
--   descriptions, licensed under Apache 2.0.
--   
--   AWS Auto Scaling
--   
--   Use AWS Auto Scaling to create scaling plans for your applications to
--   automatically scale your scalable AWS resources.
--   
--   <b>API Summary</b>
--   
--   You can use the AWS Auto Scaling service API to accomplish the
--   following tasks:
--   
--   <ul>
--   <li>Create and manage scaling plans</li>
--   <li>Define target tracking scaling policies to dynamically scale your
--   resources based on utilization</li>
--   <li>Scale Amazon EC2 Auto Scaling groups using predictive scaling and
--   dynamic scaling to scale your Amazon EC2 capacity faster</li>
--   <li>Set minimum and maximum capacity limits</li>
--   <li>Retrieve information on existing scaling plans</li>
--   <li>Access current forecast data and historical forecast data for up
--   to 56 days previous</li>
--   </ul>
--   
--   To learn more about AWS Auto Scaling, including information about
--   granting IAM users required permissions for AWS Auto Scaling actions,
--   see the <a>AWS Auto Scaling User Guide</a>.
module Network.AWS.AutoScalingPlans

-- | API version <tt>2018-01-06</tt> of the Amazon Auto Scaling Plans SDK
--   configuration.
defaultService :: Service

-- | The specified object could not be found.
_ObjectNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The service encountered an internal error.
_InternalServiceException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The token provided is not valid.
_InvalidNextTokenException :: AsError a => Getting (First ServiceError) a ServiceError

-- | An exception was thrown for a validation issue. Review the parameters
--   provided.
_ValidationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Your account exceeded a limit. This exception is thrown when a
--   per-account resource limit is exceeded.
_LimitExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Concurrent updates caused an exception, for example, if you request an
--   update to a scaling plan that already has a pending update.
_ConcurrentUpdateException :: AsError a => Getting (First ServiceError) a ServiceError

-- | <i>See:</i> <a>newUpdateScalingPlan</a> smart constructor.
data UpdateScalingPlan
UpdateScalingPlan' :: Maybe ApplicationSource -> Maybe [ScalingInstruction] -> Text -> Integer -> UpdateScalingPlan

-- | Create a value of <a>UpdateScalingPlan</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:applicationSource:UpdateScalingPlan'</a>,
--   <a>updateScalingPlan_applicationSource</a> - A CloudFormation stack or
--   set of tags.
--   
--   For more information, see <a>ApplicationSource</a> in the <i>AWS Auto
--   Scaling API Reference</i>.
--   
--   <a>$sel:scalingInstructions:UpdateScalingPlan'</a>,
--   <a>updateScalingPlan_scalingInstructions</a> - The scaling
--   instructions.
--   
--   For more information, see <a>ScalingInstruction</a> in the <i>AWS Auto
--   Scaling API Reference</i>.
--   
--   <a>$sel:scalingPlanName:UpdateScalingPlan'</a>,
--   <a>updateScalingPlan_scalingPlanName</a> - The name of the scaling
--   plan.
--   
--   <a>$sel:scalingPlanVersion:UpdateScalingPlan'</a>,
--   <a>updateScalingPlan_scalingPlanVersion</a> - The version number of
--   the scaling plan. The only valid value is <tt>1</tt>. Currently, you
--   cannot have multiple scaling plan versions.
newUpdateScalingPlan :: Text -> Integer -> UpdateScalingPlan

-- | <i>See:</i> <a>newUpdateScalingPlanResponse</a> smart constructor.
data UpdateScalingPlanResponse
UpdateScalingPlanResponse' :: Int -> UpdateScalingPlanResponse

-- | Create a value of <a>UpdateScalingPlanResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateScalingPlanResponse'</a>,
--   <a>updateScalingPlanResponse_httpStatus</a> - The response's http
--   status code.
newUpdateScalingPlanResponse :: Int -> UpdateScalingPlanResponse

-- | <i>See:</i> <a>newDeleteScalingPlan</a> smart constructor.
data DeleteScalingPlan
DeleteScalingPlan' :: Text -> Integer -> DeleteScalingPlan

-- | Create a value of <a>DeleteScalingPlan</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:scalingPlanName:DeleteScalingPlan'</a>,
--   <a>deleteScalingPlan_scalingPlanName</a> - The name of the scaling
--   plan.
--   
--   <a>$sel:scalingPlanVersion:DeleteScalingPlan'</a>,
--   <a>deleteScalingPlan_scalingPlanVersion</a> - The version number of
--   the scaling plan. Currently, the only valid value is <tt>1</tt>.
newDeleteScalingPlan :: Text -> Integer -> DeleteScalingPlan

-- | <i>See:</i> <a>newDeleteScalingPlanResponse</a> smart constructor.
data DeleteScalingPlanResponse
DeleteScalingPlanResponse' :: Int -> DeleteScalingPlanResponse

-- | Create a value of <a>DeleteScalingPlanResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteScalingPlanResponse'</a>,
--   <a>deleteScalingPlanResponse_httpStatus</a> - The response's http
--   status code.
newDeleteScalingPlanResponse :: Int -> DeleteScalingPlanResponse

-- | <i>See:</i> <a>newDescribeScalingPlanResources</a> smart constructor.
data DescribeScalingPlanResources
DescribeScalingPlanResources' :: Maybe Text -> Maybe Int -> Text -> Integer -> DescribeScalingPlanResources

-- | Create a value of <a>DescribeScalingPlanResources</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeScalingPlanResources'</a>,
--   <a>describeScalingPlanResources_nextToken</a> - The token for the next
--   set of results.
--   
--   <a>$sel:maxResults:DescribeScalingPlanResources'</a>,
--   <a>describeScalingPlanResources_maxResults</a> - The maximum number of
--   scalable resources to return. The value must be between 1 and 50. The
--   default value is 50.
--   
--   <a>$sel:scalingPlanName:DescribeScalingPlanResources'</a>,
--   <a>describeScalingPlanResources_scalingPlanName</a> - The name of the
--   scaling plan.
--   
--   <a>$sel:scalingPlanVersion:DescribeScalingPlanResources'</a>,
--   <a>describeScalingPlanResources_scalingPlanVersion</a> - The version
--   number of the scaling plan. Currently, the only valid value is
--   <tt>1</tt>.
newDescribeScalingPlanResources :: Text -> Integer -> DescribeScalingPlanResources

-- | <i>See:</i> <a>newDescribeScalingPlanResourcesResponse</a> smart
--   constructor.
data DescribeScalingPlanResourcesResponse
DescribeScalingPlanResourcesResponse' :: Maybe Text -> Maybe [ScalingPlanResource] -> Int -> DescribeScalingPlanResourcesResponse

-- | Create a value of <a>DescribeScalingPlanResourcesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeScalingPlanResources'</a>,
--   <a>describeScalingPlanResourcesResponse_nextToken</a> - The token
--   required to get the next set of results. This value is <tt>null</tt>
--   if there are no more results to return.
--   
--   
--   <a>$sel:scalingPlanResources:DescribeScalingPlanResourcesResponse'</a>,
--   <a>describeScalingPlanResourcesResponse_scalingPlanResources</a> -
--   Information about the scalable resources.
--   
--   <a>$sel:httpStatus:DescribeScalingPlanResourcesResponse'</a>,
--   <a>describeScalingPlanResourcesResponse_httpStatus</a> - The
--   response's http status code.
newDescribeScalingPlanResourcesResponse :: Int -> DescribeScalingPlanResourcesResponse

-- | <i>See:</i> <a>newGetScalingPlanResourceForecastData</a> smart
--   constructor.
data GetScalingPlanResourceForecastData
GetScalingPlanResourceForecastData' :: Text -> Integer -> ServiceNamespace -> Text -> ScalableDimension -> ForecastDataType -> POSIX -> POSIX -> GetScalingPlanResourceForecastData

-- | Create a value of <a>GetScalingPlanResourceForecastData</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:scalingPlanName:GetScalingPlanResourceForecastData'</a>,
--   <a>getScalingPlanResourceForecastData_scalingPlanName</a> - The name
--   of the scaling plan.
--   
--   <a>$sel:scalingPlanVersion:GetScalingPlanResourceForecastData'</a>,
--   <a>getScalingPlanResourceForecastData_scalingPlanVersion</a> - The
--   version number of the scaling plan. Currently, the only valid value is
--   <tt>1</tt>.
--   
--   <a>$sel:serviceNamespace:GetScalingPlanResourceForecastData'</a>,
--   <a>getScalingPlanResourceForecastData_serviceNamespace</a> - The
--   namespace of the AWS service. The only valid value is
--   <tt>autoscaling</tt>.
--   
--   <a>$sel:resourceId:GetScalingPlanResourceForecastData'</a>,
--   <a>getScalingPlanResourceForecastData_resourceId</a> - The ID of the
--   resource. This string consists of a prefix (<tt>autoScalingGroup</tt>)
--   followed by the name of a specified Auto Scaling group
--   (<tt>my-asg</tt>). Example: <tt>autoScalingGroup/my-asg</tt>.
--   
--   <a>$sel:scalableDimension:GetScalingPlanResourceForecastData'</a>,
--   <a>getScalingPlanResourceForecastData_scalableDimension</a> - The
--   scalable dimension for the resource. The only valid value is
--   <tt>autoscaling:autoScalingGroup:DesiredCapacity</tt>.
--   
--   <a>$sel:forecastDataType:GetScalingPlanResourceForecastData'</a>,
--   <a>getScalingPlanResourceForecastData_forecastDataType</a> - The type
--   of forecast data to get.
--   
--   <ul>
--   <li><tt>LoadForecast</tt>: The load metric forecast.</li>
--   <li><tt>CapacityForecast</tt>: The capacity forecast.</li>
--   <li><tt>ScheduledActionMinCapacity</tt>: The minimum capacity for each
--   scheduled scaling action. This data is calculated as the larger of two
--   values: the capacity forecast or the minimum capacity in the scaling
--   instruction.</li>
--   <li><tt>ScheduledActionMaxCapacity</tt>: The maximum capacity for each
--   scheduled scaling action. The calculation used is determined by the
--   predictive scaling maximum capacity behavior setting in the scaling
--   instruction.</li>
--   </ul>
--   
--   <a>$sel:startTime:GetScalingPlanResourceForecastData'</a>,
--   <a>getScalingPlanResourceForecastData_startTime</a> - The inclusive
--   start time of the time range for the forecast data to get. The date
--   and time can be at most 56 days before the current date and time.
--   
--   <a>$sel:endTime:GetScalingPlanResourceForecastData'</a>,
--   <a>getScalingPlanResourceForecastData_endTime</a> - The exclusive end
--   time of the time range for the forecast data to get. The maximum time
--   duration between the start and end time is seven days.
--   
--   Although this parameter can accept a date and time that is more than
--   two days in the future, the availability of forecast data has limits.
--   AWS Auto Scaling only issues forecasts for periods of two days in
--   advance.
newGetScalingPlanResourceForecastData :: Text -> Integer -> ServiceNamespace -> Text -> ScalableDimension -> ForecastDataType -> UTCTime -> UTCTime -> GetScalingPlanResourceForecastData

-- | <i>See:</i> <a>newGetScalingPlanResourceForecastDataResponse</a> smart
--   constructor.
data GetScalingPlanResourceForecastDataResponse
GetScalingPlanResourceForecastDataResponse' :: Int -> [Datapoint] -> GetScalingPlanResourceForecastDataResponse

-- | Create a value of <a>GetScalingPlanResourceForecastDataResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:GetScalingPlanResourceForecastDataResponse'</a>,
--   <a>getScalingPlanResourceForecastDataResponse_httpStatus</a> - The
--   response's http status code.
--   
--   <a>$sel:datapoints:GetScalingPlanResourceForecastDataResponse'</a>,
--   <a>getScalingPlanResourceForecastDataResponse_datapoints</a> - The
--   data points to return.
newGetScalingPlanResourceForecastDataResponse :: Int -> GetScalingPlanResourceForecastDataResponse

-- | <i>See:</i> <a>newDescribeScalingPlans</a> smart constructor.
data DescribeScalingPlans
DescribeScalingPlans' :: Maybe Integer -> Maybe Text -> Maybe Int -> Maybe [Text] -> Maybe [ApplicationSource] -> DescribeScalingPlans

-- | Create a value of <a>DescribeScalingPlans</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:scalingPlanVersion:DescribeScalingPlans'</a>,
--   <a>describeScalingPlans_scalingPlanVersion</a> - The version number of
--   the scaling plan. Currently, the only valid value is <tt>1</tt>.
--   
--   If you specify a scaling plan version, you must also specify a scaling
--   plan name.
--   
--   <a>$sel:nextToken:DescribeScalingPlans'</a>,
--   <a>describeScalingPlans_nextToken</a> - The token for the next set of
--   results.
--   
--   <a>$sel:maxResults:DescribeScalingPlans'</a>,
--   <a>describeScalingPlans_maxResults</a> - The maximum number of
--   scalable resources to return. This value can be between 1 and 50. The
--   default value is 50.
--   
--   <a>$sel:scalingPlanNames:DescribeScalingPlans'</a>,
--   <a>describeScalingPlans_scalingPlanNames</a> - The names of the
--   scaling plans (up to 10). If you specify application sources, you
--   cannot specify scaling plan names.
--   
--   <a>$sel:applicationSources:DescribeScalingPlans'</a>,
--   <a>describeScalingPlans_applicationSources</a> - The sources for the
--   applications (up to 10). If you specify scaling plan names, you cannot
--   specify application sources.
newDescribeScalingPlans :: DescribeScalingPlans

-- | <i>See:</i> <a>newDescribeScalingPlansResponse</a> smart constructor.
data DescribeScalingPlansResponse
DescribeScalingPlansResponse' :: Maybe Text -> Maybe [ScalingPlan] -> Int -> DescribeScalingPlansResponse

-- | Create a value of <a>DescribeScalingPlansResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeScalingPlans'</a>,
--   <a>describeScalingPlansResponse_nextToken</a> - The token required to
--   get the next set of results. This value is <tt>null</tt> if there are
--   no more results to return.
--   
--   <a>$sel:scalingPlans:DescribeScalingPlansResponse'</a>,
--   <a>describeScalingPlansResponse_scalingPlans</a> - Information about
--   the scaling plans.
--   
--   <a>$sel:httpStatus:DescribeScalingPlansResponse'</a>,
--   <a>describeScalingPlansResponse_httpStatus</a> - The response's http
--   status code.
newDescribeScalingPlansResponse :: Int -> DescribeScalingPlansResponse

-- | <i>See:</i> <a>newCreateScalingPlan</a> smart constructor.
data CreateScalingPlan
CreateScalingPlan' :: Text -> ApplicationSource -> [ScalingInstruction] -> CreateScalingPlan

-- | Create a value of <a>CreateScalingPlan</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:scalingPlanName:CreateScalingPlan'</a>,
--   <a>createScalingPlan_scalingPlanName</a> - The name of the scaling
--   plan. Names cannot contain vertical bars, colons, or forward slashes.
--   
--   <a>$sel:applicationSource:CreateScalingPlan'</a>,
--   <a>createScalingPlan_applicationSource</a> - A CloudFormation stack or
--   set of tags. You can create one scaling plan per application source.
--   
--   For more information, see <a>ApplicationSource</a> in the <i>AWS Auto
--   Scaling API Reference</i>.
--   
--   <a>$sel:scalingInstructions:CreateScalingPlan'</a>,
--   <a>createScalingPlan_scalingInstructions</a> - The scaling
--   instructions.
--   
--   For more information, see <a>ScalingInstruction</a> in the <i>AWS Auto
--   Scaling API Reference</i>.
newCreateScalingPlan :: Text -> ApplicationSource -> CreateScalingPlan

-- | <i>See:</i> <a>newCreateScalingPlanResponse</a> smart constructor.
data CreateScalingPlanResponse
CreateScalingPlanResponse' :: Int -> Integer -> CreateScalingPlanResponse

-- | Create a value of <a>CreateScalingPlanResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreateScalingPlanResponse'</a>,
--   <a>createScalingPlanResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:scalingPlanVersion:CreateScalingPlanResponse'</a>,
--   <a>createScalingPlanResponse_scalingPlanVersion</a> - The version
--   number of the scaling plan. This value is always <tt>1</tt>.
--   Currently, you cannot have multiple scaling plan versions.
newCreateScalingPlanResponse :: Int -> Integer -> CreateScalingPlanResponse
newtype ForecastDataType
ForecastDataType' :: Text -> ForecastDataType
[fromForecastDataType] :: ForecastDataType -> Text
pattern ForecastDataType_CapacityForecast :: ForecastDataType
pattern ForecastDataType_LoadForecast :: ForecastDataType
pattern ForecastDataType_ScheduledActionMaxCapacity :: ForecastDataType
pattern ForecastDataType_ScheduledActionMinCapacity :: ForecastDataType
newtype LoadMetricType
LoadMetricType' :: Text -> LoadMetricType
[fromLoadMetricType] :: LoadMetricType -> Text
pattern LoadMetricType_ALBTargetGroupRequestCount :: LoadMetricType
pattern LoadMetricType_ASGTotalCPUUtilization :: LoadMetricType
pattern LoadMetricType_ASGTotalNetworkIn :: LoadMetricType
pattern LoadMetricType_ASGTotalNetworkOut :: LoadMetricType
newtype MetricStatistic
MetricStatistic' :: Text -> MetricStatistic
[fromMetricStatistic] :: MetricStatistic -> Text
pattern MetricStatistic_Average :: MetricStatistic
pattern MetricStatistic_Maximum :: MetricStatistic
pattern MetricStatistic_Minimum :: MetricStatistic
pattern MetricStatistic_SampleCount :: MetricStatistic
pattern MetricStatistic_Sum :: MetricStatistic
newtype PolicyType
PolicyType' :: Text -> PolicyType
[fromPolicyType] :: PolicyType -> Text
pattern PolicyType_TargetTrackingScaling :: PolicyType
newtype PredictiveScalingMaxCapacityBehavior
PredictiveScalingMaxCapacityBehavior' :: Text -> PredictiveScalingMaxCapacityBehavior
[fromPredictiveScalingMaxCapacityBehavior] :: PredictiveScalingMaxCapacityBehavior -> Text
pattern PredictiveScalingMaxCapacityBehavior_SetForecastCapacityToMaxCapacity :: PredictiveScalingMaxCapacityBehavior
pattern PredictiveScalingMaxCapacityBehavior_SetMaxCapacityAboveForecastCapacity :: PredictiveScalingMaxCapacityBehavior
pattern PredictiveScalingMaxCapacityBehavior_SetMaxCapacityToForecastCapacity :: PredictiveScalingMaxCapacityBehavior
newtype PredictiveScalingMode
PredictiveScalingMode' :: Text -> PredictiveScalingMode
[fromPredictiveScalingMode] :: PredictiveScalingMode -> Text
pattern PredictiveScalingMode_ForecastAndScale :: PredictiveScalingMode
pattern PredictiveScalingMode_ForecastOnly :: PredictiveScalingMode
newtype ScalableDimension
ScalableDimension' :: Text -> ScalableDimension
[fromScalableDimension] :: ScalableDimension -> Text
pattern ScalableDimension_Autoscaling_autoScalingGroup_DesiredCapacity :: ScalableDimension
pattern ScalableDimension_Dynamodb_index_ReadCapacityUnits :: ScalableDimension
pattern ScalableDimension_Dynamodb_index_WriteCapacityUnits :: ScalableDimension
pattern ScalableDimension_Dynamodb_table_ReadCapacityUnits :: ScalableDimension
pattern ScalableDimension_Dynamodb_table_WriteCapacityUnits :: ScalableDimension
pattern ScalableDimension_Ec2_spot_fleet_request_TargetCapacity :: ScalableDimension
pattern ScalableDimension_Ecs_service_DesiredCount :: ScalableDimension
pattern ScalableDimension_Rds_cluster_ReadReplicaCount :: ScalableDimension
newtype ScalingMetricType
ScalingMetricType' :: Text -> ScalingMetricType
[fromScalingMetricType] :: ScalingMetricType -> Text
pattern ScalingMetricType_ALBRequestCountPerTarget :: ScalingMetricType
pattern ScalingMetricType_ASGAverageCPUUtilization :: ScalingMetricType
pattern ScalingMetricType_ASGAverageNetworkIn :: ScalingMetricType
pattern ScalingMetricType_ASGAverageNetworkOut :: ScalingMetricType
pattern ScalingMetricType_DynamoDBReadCapacityUtilization :: ScalingMetricType
pattern ScalingMetricType_DynamoDBWriteCapacityUtilization :: ScalingMetricType
pattern ScalingMetricType_EC2SpotFleetRequestAverageCPUUtilization :: ScalingMetricType
pattern ScalingMetricType_EC2SpotFleetRequestAverageNetworkIn :: ScalingMetricType
pattern ScalingMetricType_EC2SpotFleetRequestAverageNetworkOut :: ScalingMetricType
pattern ScalingMetricType_ECSServiceAverageCPUUtilization :: ScalingMetricType
pattern ScalingMetricType_ECSServiceAverageMemoryUtilization :: ScalingMetricType
pattern ScalingMetricType_RDSReaderAverageCPUUtilization :: ScalingMetricType
pattern ScalingMetricType_RDSReaderAverageDatabaseConnections :: ScalingMetricType
newtype ScalingPlanStatusCode
ScalingPlanStatusCode' :: Text -> ScalingPlanStatusCode
[fromScalingPlanStatusCode] :: ScalingPlanStatusCode -> Text
pattern ScalingPlanStatusCode_Active :: ScalingPlanStatusCode
pattern ScalingPlanStatusCode_ActiveWithProblems :: ScalingPlanStatusCode
pattern ScalingPlanStatusCode_CreationFailed :: ScalingPlanStatusCode
pattern ScalingPlanStatusCode_CreationInProgress :: ScalingPlanStatusCode
pattern ScalingPlanStatusCode_DeletionFailed :: ScalingPlanStatusCode
pattern ScalingPlanStatusCode_DeletionInProgress :: ScalingPlanStatusCode
pattern ScalingPlanStatusCode_UpdateFailed :: ScalingPlanStatusCode
pattern ScalingPlanStatusCode_UpdateInProgress :: ScalingPlanStatusCode
newtype ScalingPolicyUpdateBehavior
ScalingPolicyUpdateBehavior' :: Text -> ScalingPolicyUpdateBehavior
[fromScalingPolicyUpdateBehavior] :: ScalingPolicyUpdateBehavior -> Text
pattern ScalingPolicyUpdateBehavior_KeepExternalPolicies :: ScalingPolicyUpdateBehavior
pattern ScalingPolicyUpdateBehavior_ReplaceExternalPolicies :: ScalingPolicyUpdateBehavior
newtype ScalingStatusCode
ScalingStatusCode' :: Text -> ScalingStatusCode
[fromScalingStatusCode] :: ScalingStatusCode -> Text
pattern ScalingStatusCode_Active :: ScalingStatusCode
pattern ScalingStatusCode_Inactive :: ScalingStatusCode
pattern ScalingStatusCode_PartiallyActive :: ScalingStatusCode
newtype ServiceNamespace
ServiceNamespace' :: Text -> ServiceNamespace
[fromServiceNamespace] :: ServiceNamespace -> Text
pattern ServiceNamespace_Autoscaling :: ServiceNamespace
pattern ServiceNamespace_Dynamodb :: ServiceNamespace
pattern ServiceNamespace_Ec2 :: ServiceNamespace
pattern ServiceNamespace_Ecs :: ServiceNamespace
pattern ServiceNamespace_Rds :: ServiceNamespace

-- | Represents an application source.
--   
--   <i>See:</i> <a>newApplicationSource</a> smart constructor.
data ApplicationSource
ApplicationSource' :: Maybe [TagFilter] -> Maybe Text -> ApplicationSource

-- | Create a value of <a>ApplicationSource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tagFilters:ApplicationSource'</a>,
--   <a>applicationSource_tagFilters</a> - A set of tags (up to 50).
--   
--   <a>$sel:cloudFormationStackARN:ApplicationSource'</a>,
--   <a>applicationSource_cloudFormationStackARN</a> - The Amazon Resource
--   Name (ARN) of a AWS CloudFormation stack.
newApplicationSource :: ApplicationSource

-- | Represents a CloudWatch metric of your choosing that can be used for
--   predictive scaling.
--   
--   For predictive scaling to work with a customized load metric
--   specification, AWS Auto Scaling needs access to the <tt>Sum</tt> and
--   <tt>Average</tt> statistics that CloudWatch computes from metric data.
--   
--   When you choose a load metric, make sure that the required
--   <tt>Sum</tt> and <tt>Average</tt> statistics for your metric are
--   available in CloudWatch and that they provide relevant data for
--   predictive scaling. The <tt>Sum</tt> statistic must represent the
--   total load on the resource, and the <tt>Average</tt> statistic must
--   represent the average load per capacity unit of the resource. For
--   example, there is a metric that counts the number of requests
--   processed by your Auto Scaling group. If the <tt>Sum</tt> statistic
--   represents the total request count processed by the group, then the
--   <tt>Average</tt> statistic for the specified metric must represent the
--   average request count processed by each instance of the group.
--   
--   If you publish your own metrics, you can aggregate the data points at
--   a given interval and then publish the aggregated data points to
--   CloudWatch. Before AWS Auto Scaling generates the forecast, it sums up
--   all the metric data points that occurred within each hour to match the
--   granularity period that is used in the forecast (60 minutes).
--   
--   For information about terminology, available metrics, or how to
--   publish new metrics, see <a>Amazon CloudWatch Concepts</a> in the
--   <i>Amazon CloudWatch User Guide</i>.
--   
--   After creating your scaling plan, you can use the AWS Auto Scaling
--   console to visualize forecasts for the specified metric. For more
--   information, see <a>View Scaling Information for a Resource</a> in the
--   <i>AWS Auto Scaling User Guide</i>.
--   
--   <i>See:</i> <a>newCustomizedLoadMetricSpecification</a> smart
--   constructor.
data CustomizedLoadMetricSpecification
CustomizedLoadMetricSpecification' :: Maybe Text -> Maybe [MetricDimension] -> Text -> Text -> MetricStatistic -> CustomizedLoadMetricSpecification

-- | Create a value of <a>CustomizedLoadMetricSpecification</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:unit:CustomizedLoadMetricSpecification'</a>,
--   <a>customizedLoadMetricSpecification_unit</a> - The unit of the
--   metric.
--   
--   <a>$sel:dimensions:CustomizedLoadMetricSpecification'</a>,
--   <a>customizedLoadMetricSpecification_dimensions</a> - The dimensions
--   of the metric.
--   
--   Conditional: If you published your metric with dimensions, you must
--   specify the same dimensions in your customized load metric
--   specification.
--   
--   <a>$sel:metricName:CustomizedLoadMetricSpecification'</a>,
--   <a>customizedLoadMetricSpecification_metricName</a> - The name of the
--   metric.
--   
--   <a>$sel:namespace:CustomizedLoadMetricSpecification'</a>,
--   <a>customizedLoadMetricSpecification_namespace</a> - The namespace of
--   the metric.
--   
--   <a>$sel:statistic:CustomizedLoadMetricSpecification'</a>,
--   <a>customizedLoadMetricSpecification_statistic</a> - The statistic of
--   the metric. The only valid value is <tt>Sum</tt>.
newCustomizedLoadMetricSpecification :: Text -> Text -> MetricStatistic -> CustomizedLoadMetricSpecification

-- | Represents a CloudWatch metric of your choosing that can be used for
--   dynamic scaling as part of a target tracking scaling policy.
--   
--   To create your customized scaling metric specification:
--   
--   <ul>
--   <li>Add values for each required parameter from CloudWatch. You can
--   use an existing metric, or a new metric that you create. To use your
--   own metric, you must first publish the metric to CloudWatch. For more
--   information, see <a>Publish Custom Metrics</a> in the <i>Amazon
--   CloudWatch User Guide</i>.</li>
--   <li>Choose a metric that changes proportionally with capacity. The
--   value of the metric should increase or decrease in inverse proportion
--   to the number of capacity units. That is, the value of the metric
--   should decrease when capacity increases.</li>
--   </ul>
--   
--   For information about terminology, available metrics, or how to
--   publish new metrics, see <a>Amazon CloudWatch Concepts</a> in the
--   <i>Amazon CloudWatch User Guide</i>.
--   
--   <i>See:</i> <a>newCustomizedScalingMetricSpecification</a> smart
--   constructor.
data CustomizedScalingMetricSpecification
CustomizedScalingMetricSpecification' :: Maybe Text -> Maybe [MetricDimension] -> Text -> Text -> MetricStatistic -> CustomizedScalingMetricSpecification

-- | Create a value of <a>CustomizedScalingMetricSpecification</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:unit:CustomizedScalingMetricSpecification'</a>,
--   <a>customizedScalingMetricSpecification_unit</a> - The unit of the
--   metric.
--   
--   <a>$sel:dimensions:CustomizedScalingMetricSpecification'</a>,
--   <a>customizedScalingMetricSpecification_dimensions</a> - The
--   dimensions of the metric.
--   
--   Conditional: If you published your metric with dimensions, you must
--   specify the same dimensions in your customized scaling metric
--   specification.
--   
--   <a>$sel:metricName:CustomizedScalingMetricSpecification'</a>,
--   <a>customizedScalingMetricSpecification_metricName</a> - The name of
--   the metric.
--   
--   <a>$sel:namespace:CustomizedScalingMetricSpecification'</a>,
--   <a>customizedScalingMetricSpecification_namespace</a> - The namespace
--   of the metric.
--   
--   <a>$sel:statistic:CustomizedScalingMetricSpecification'</a>,
--   <a>customizedScalingMetricSpecification_statistic</a> - The statistic
--   of the metric.
newCustomizedScalingMetricSpecification :: Text -> Text -> MetricStatistic -> CustomizedScalingMetricSpecification

-- | Represents a single value in the forecast data used for predictive
--   scaling.
--   
--   <i>See:</i> <a>newDatapoint</a> smart constructor.
data Datapoint
Datapoint' :: Maybe POSIX -> Maybe Double -> Datapoint

-- | Create a value of <a>Datapoint</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:timestamp:Datapoint'</a>, <a>datapoint_timestamp</a> - The
--   time stamp for the data point in UTC format.
--   
--   <a>$sel:value:Datapoint'</a>, <a>datapoint_value</a> - The value of
--   the data point.
newDatapoint :: Datapoint

-- | Represents a dimension for a customized metric.
--   
--   <i>See:</i> <a>newMetricDimension</a> smart constructor.
data MetricDimension
MetricDimension' :: Text -> Text -> MetricDimension

-- | Create a value of <a>MetricDimension</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:MetricDimension'</a>, <a>metricDimension_name</a> - The
--   name of the dimension.
--   
--   <a>$sel:value:MetricDimension'</a>, <a>metricDimension_value</a> - The
--   value of the dimension.
newMetricDimension :: Text -> Text -> MetricDimension

-- | Represents a predefined metric that can be used for predictive
--   scaling.
--   
--   After creating your scaling plan, you can use the AWS Auto Scaling
--   console to visualize forecasts for the specified metric. For more
--   information, see <a>View Scaling Information for a Resource</a> in the
--   <i>AWS Auto Scaling User Guide</i>.
--   
--   <i>See:</i> <a>newPredefinedLoadMetricSpecification</a> smart
--   constructor.
data PredefinedLoadMetricSpecification
PredefinedLoadMetricSpecification' :: Maybe Text -> LoadMetricType -> PredefinedLoadMetricSpecification

-- | Create a value of <a>PredefinedLoadMetricSpecification</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceLabel:PredefinedLoadMetricSpecification'</a>,
--   <a>predefinedLoadMetricSpecification_resourceLabel</a> - Identifies
--   the resource associated with the metric type. You can't specify a
--   resource label unless the metric type is
--   <tt>ALBTargetGroupRequestCount</tt> and there is a target group for an
--   Application Load Balancer attached to the Auto Scaling group.
--   
--   You create the resource label by appending the final portion of the
--   load balancer ARN and the final portion of the target group ARN into a
--   single value, separated by a forward slash (/). The format is
--   app/&lt;load-balancer-name&gt;/&lt;load-balancer-id&gt;/targetgroup/&lt;target-group-name&gt;/&lt;target-group-id&gt;,
--   where:
--   
--   <ul>
--   <li>app/&lt;load-balancer-name&gt;/&lt;load-balancer-id&gt; is the
--   final portion of the load balancer ARN</li>
--   <li>targetgroup/&lt;target-group-name&gt;/&lt;target-group-id&gt; is
--   the final portion of the target group ARN.</li>
--   </ul>
--   
--   This is an example:
--   app/EC2Co-EcsEl-1TKLTMITMM0EO/f37c06a68c1748aa/targetgroup/EC2Co-Defau-LDNM7Q3ZH1ZN/6d4ea56ca2d6a18d.
--   
--   To find the ARN for an Application Load Balancer, use the
--   <a>DescribeLoadBalancers</a> API operation. To find the ARN for the
--   target group, use the <a>DescribeTargetGroups</a> API operation.
--   
--   
--   <a>$sel:predefinedLoadMetricType:PredefinedLoadMetricSpecification'</a>,
--   <a>predefinedLoadMetricSpecification_predefinedLoadMetricType</a> -
--   The metric type.
newPredefinedLoadMetricSpecification :: LoadMetricType -> PredefinedLoadMetricSpecification

-- | Represents a predefined metric that can be used for dynamic scaling as
--   part of a target tracking scaling policy.
--   
--   <i>See:</i> <a>newPredefinedScalingMetricSpecification</a> smart
--   constructor.
data PredefinedScalingMetricSpecification
PredefinedScalingMetricSpecification' :: Maybe Text -> ScalingMetricType -> PredefinedScalingMetricSpecification

-- | Create a value of <a>PredefinedScalingMetricSpecification</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceLabel:PredefinedScalingMetricSpecification'</a>,
--   <a>predefinedScalingMetricSpecification_resourceLabel</a> - Identifies
--   the resource associated with the metric type. You can't specify a
--   resource label unless the metric type is
--   <tt>ALBRequestCountPerTarget</tt> and there is a target group for an
--   Application Load Balancer attached to the Auto Scaling group, Spot
--   Fleet request, or ECS service.
--   
--   You create the resource label by appending the final portion of the
--   load balancer ARN and the final portion of the target group ARN into a
--   single value, separated by a forward slash (/). The format is
--   app/&lt;load-balancer-name&gt;/&lt;load-balancer-id&gt;/targetgroup/&lt;target-group-name&gt;/&lt;target-group-id&gt;,
--   where:
--   
--   <ul>
--   <li>app/&lt;load-balancer-name&gt;/&lt;load-balancer-id&gt; is the
--   final portion of the load balancer ARN</li>
--   <li>targetgroup/&lt;target-group-name&gt;/&lt;target-group-id&gt; is
--   the final portion of the target group ARN.</li>
--   </ul>
--   
--   This is an example:
--   app/EC2Co-EcsEl-1TKLTMITMM0EO/f37c06a68c1748aa/targetgroup/EC2Co-Defau-LDNM7Q3ZH1ZN/6d4ea56ca2d6a18d.
--   
--   To find the ARN for an Application Load Balancer, use the
--   <a>DescribeLoadBalancers</a> API operation. To find the ARN for the
--   target group, use the <a>DescribeTargetGroups</a> API operation.
--   
--   
--   <a>$sel:predefinedScalingMetricType:PredefinedScalingMetricSpecification'</a>,
--   <a>predefinedScalingMetricSpecification_predefinedScalingMetricType</a>
--   - The metric type. The <tt>ALBRequestCountPerTarget</tt> metric type
--   applies only to Auto Scaling groups, Spot Fleet requests, and ECS
--   services.
newPredefinedScalingMetricSpecification :: ScalingMetricType -> PredefinedScalingMetricSpecification

-- | Describes a scaling instruction for a scalable resource in a scaling
--   plan. Each scaling instruction applies to one resource.
--   
--   AWS Auto Scaling creates target tracking scaling policies based on the
--   scaling instructions. Target tracking scaling policies adjust the
--   capacity of your scalable resource as required to maintain resource
--   utilization at the target value that you specified.
--   
--   AWS Auto Scaling also configures predictive scaling for your Amazon
--   EC2 Auto Scaling groups using a subset of parameters, including the
--   load metric, the scaling metric, the target value for the scaling
--   metric, the predictive scaling mode (forecast and scale or forecast
--   only), and the desired behavior when the forecast capacity exceeds the
--   maximum capacity of the resource. With predictive scaling, AWS Auto
--   Scaling generates forecasts with traffic predictions for the two days
--   ahead and schedules scaling actions that proactively add and remove
--   resource capacity to match the forecast.
--   
--   We recommend waiting a minimum of 24 hours after creating an Auto
--   Scaling group to configure predictive scaling. At minimum, there must
--   be 24 hours of historical data to generate a forecast. For more
--   information, see <a>Best Practices for AWS Auto Scaling</a> in the
--   <i>AWS Auto Scaling User Guide</i>.
--   
--   <i>See:</i> <a>newScalingInstruction</a> smart constructor.
data ScalingInstruction
ScalingInstruction' :: Maybe Bool -> Maybe PredefinedLoadMetricSpecification -> Maybe PredictiveScalingMaxCapacityBehavior -> Maybe CustomizedLoadMetricSpecification -> Maybe Int -> Maybe PredictiveScalingMode -> Maybe ScalingPolicyUpdateBehavior -> Maybe Natural -> ServiceNamespace -> Text -> ScalableDimension -> Int -> Int -> [TargetTrackingConfiguration] -> ScalingInstruction

-- | Create a value of <a>ScalingInstruction</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:disableDynamicScaling:ScalingInstruction'</a>,
--   <a>scalingInstruction_disableDynamicScaling</a> - Controls whether
--   dynamic scaling by AWS Auto Scaling is disabled. When dynamic scaling
--   is enabled, AWS Auto Scaling creates target tracking scaling policies
--   based on the specified target tracking configurations.
--   
--   The default is enabled (<tt>false</tt>).
--   
--   <a>$sel:predefinedLoadMetricSpecification:ScalingInstruction'</a>,
--   <a>scalingInstruction_predefinedLoadMetricSpecification</a> - The
--   predefined load metric to use for predictive scaling. This parameter
--   or a <b>CustomizedLoadMetricSpecification</b> is required when
--   configuring predictive scaling, and cannot be used otherwise.
--   
--   <a>$sel:predictiveScalingMaxCapacityBehavior:ScalingInstruction'</a>,
--   <a>scalingInstruction_predictiveScalingMaxCapacityBehavior</a> -
--   Defines the behavior that should be applied if the forecast capacity
--   approaches or exceeds the maximum capacity specified for the resource.
--   The default value is <tt>SetForecastCapacityToMaxCapacity</tt>.
--   
--   The following are possible values:
--   
--   <ul>
--   <li><tt>SetForecastCapacityToMaxCapacity</tt> - AWS Auto Scaling
--   cannot scale resource capacity higher than the maximum capacity. The
--   maximum capacity is enforced as a hard limit.</li>
--   <li><tt>SetMaxCapacityToForecastCapacity</tt> - AWS Auto Scaling may
--   scale resource capacity higher than the maximum capacity to equal but
--   not exceed forecast capacity.</li>
--   <li><tt>SetMaxCapacityAboveForecastCapacity</tt> - AWS Auto Scaling
--   may scale resource capacity higher than the maximum capacity by a
--   specified buffer value. The intention is to give the target tracking
--   scaling policy extra capacity if unexpected traffic occurs.</li>
--   </ul>
--   
--   Only valid when configuring predictive scaling.
--   
--   <a>$sel:customizedLoadMetricSpecification:ScalingInstruction'</a>,
--   <a>scalingInstruction_customizedLoadMetricSpecification</a> - The
--   customized load metric to use for predictive scaling. This parameter
--   or a <b>PredefinedLoadMetricSpecification</b> is required when
--   configuring predictive scaling, and cannot be used otherwise.
--   
--   <a>$sel:predictiveScalingMaxCapacityBuffer:ScalingInstruction'</a>,
--   <a>scalingInstruction_predictiveScalingMaxCapacityBuffer</a> - The
--   size of the capacity buffer to use when the forecast capacity is close
--   to or exceeds the maximum capacity. The value is specified as a
--   percentage relative to the forecast capacity. For example, if the
--   buffer is 10, this means a 10 percent buffer, such that if the
--   forecast capacity is 50, and the maximum capacity is 40, then the
--   effective maximum capacity is 55.
--   
--   Only valid when configuring predictive scaling. Required if the
--   <b>PredictiveScalingMaxCapacityBehavior</b> is set to
--   <tt>SetMaxCapacityAboveForecastCapacity</tt>, and cannot be used
--   otherwise.
--   
--   The range is 1-100.
--   
--   <a>$sel:predictiveScalingMode:ScalingInstruction'</a>,
--   <a>scalingInstruction_predictiveScalingMode</a> - The predictive
--   scaling mode. The default value is <tt>ForecastAndScale</tt>.
--   Otherwise, AWS Auto Scaling forecasts capacity but does not create any
--   scheduled scaling actions based on the capacity forecast.
--   
--   <a>$sel:scalingPolicyUpdateBehavior:ScalingInstruction'</a>,
--   <a>scalingInstruction_scalingPolicyUpdateBehavior</a> - Controls
--   whether a resource's externally created scaling policies are kept or
--   replaced.
--   
--   The default value is <tt>KeepExternalPolicies</tt>. If the parameter
--   is set to <tt>ReplaceExternalPolicies</tt>, any scaling policies that
--   are external to AWS Auto Scaling are deleted and new target tracking
--   scaling policies created.
--   
--   Only valid when configuring dynamic scaling.
--   
--   Condition: The number of existing policies to be replaced must be less
--   than or equal to 50. If there are more than 50 policies to be
--   replaced, AWS Auto Scaling keeps all existing policies and does not
--   create new ones.
--   
--   <a>$sel:scheduledActionBufferTime:ScalingInstruction'</a>,
--   <a>scalingInstruction_scheduledActionBufferTime</a> - The amount of
--   time, in seconds, to buffer the run time of scheduled scaling actions
--   when scaling out. For example, if the forecast says to add capacity at
--   10:00 AM, and the buffer time is 5 minutes, then the run time of the
--   corresponding scheduled scaling action will be 9:55 AM. The intention
--   is to give resources time to be provisioned. For example, it can take
--   a few minutes to launch an EC2 instance. The actual amount of time
--   required depends on several factors, such as the size of the instance
--   and whether there are startup scripts to complete.
--   
--   The value must be less than the forecast interval duration of 3600
--   seconds (60 minutes). The default is 300 seconds.
--   
--   Only valid when configuring predictive scaling.
--   
--   <a>$sel:serviceNamespace:ScalingInstruction'</a>,
--   <a>scalingInstruction_serviceNamespace</a> - The namespace of the AWS
--   service.
--   
--   <a>$sel:resourceId:ScalingInstruction'</a>,
--   <a>scalingInstruction_resourceId</a> - The ID of the resource. This
--   string consists of the resource type and unique identifier.
--   
--   <ul>
--   <li>Auto Scaling group - The resource type is
--   <tt>autoScalingGroup</tt> and the unique identifier is the name of the
--   Auto Scaling group. Example: <tt>autoScalingGroup/my-asg</tt>.</li>
--   <li>ECS service - The resource type is <tt>service</tt> and the unique
--   identifier is the cluster name and service name. Example:
--   <tt>service/default/sample-webapp</tt>.</li>
--   <li>Spot Fleet request - The resource type is
--   <tt>spot-fleet-request</tt> and the unique identifier is the Spot
--   Fleet request ID. Example:
--   <tt>spot-fleet-request/sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE</tt>.</li>
--   <li>DynamoDB table - The resource type is <tt>table</tt> and the
--   unique identifier is the resource ID. Example:
--   <tt>table/my-table</tt>.</li>
--   <li>DynamoDB global secondary index - The resource type is
--   <tt>index</tt> and the unique identifier is the resource ID. Example:
--   <tt>table/my-table/index/my-table-index</tt>.</li>
--   <li>Aurora DB cluster - The resource type is <tt>cluster</tt> and the
--   unique identifier is the cluster name. Example:
--   <tt>cluster:my-db-cluster</tt>.</li>
--   </ul>
--   
--   <a>$sel:scalableDimension:ScalingInstruction'</a>,
--   <a>scalingInstruction_scalableDimension</a> - The scalable dimension
--   associated with the resource.
--   
--   <ul>
--   <li><tt>autoscaling:autoScalingGroup:DesiredCapacity</tt> - The
--   desired capacity of an Auto Scaling group.</li>
--   <li><tt>ecs:service:DesiredCount</tt> - The desired task count of an
--   ECS service.</li>
--   <li><tt>ec2:spot-fleet-request:TargetCapacity</tt> - The target
--   capacity of a Spot Fleet request.</li>
--   <li><tt>dynamodb:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:table:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:index:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>dynamodb:index:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>rds:cluster:ReadReplicaCount</tt> - The count of Aurora
--   Replicas in an Aurora DB cluster. Available for Aurora
--   MySQL-compatible edition and Aurora PostgreSQL-compatible
--   edition.</li>
--   </ul>
--   
--   <a>$sel:minCapacity:ScalingInstruction'</a>,
--   <a>scalingInstruction_minCapacity</a> - The minimum capacity of the
--   resource.
--   
--   <a>$sel:maxCapacity:ScalingInstruction'</a>,
--   <a>scalingInstruction_maxCapacity</a> - The maximum capacity of the
--   resource. The exception to this upper limit is if you specify a
--   non-default setting for <b>PredictiveScalingMaxCapacityBehavior</b>.
--   
--   <a>$sel:targetTrackingConfigurations:ScalingInstruction'</a>,
--   <a>scalingInstruction_targetTrackingConfigurations</a> - The target
--   tracking configurations (up to 10). Each of these structures must
--   specify a unique scaling metric and a target value for the metric.
newScalingInstruction :: ServiceNamespace -> Text -> ScalableDimension -> Int -> Int -> ScalingInstruction

-- | Represents a scaling plan.
--   
--   <i>See:</i> <a>newScalingPlan</a> smart constructor.
data ScalingPlan
ScalingPlan' :: Maybe Text -> Maybe POSIX -> Maybe POSIX -> Text -> Integer -> ApplicationSource -> [ScalingInstruction] -> ScalingPlanStatusCode -> ScalingPlan

-- | Create a value of <a>ScalingPlan</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:statusMessage:ScalingPlan'</a>,
--   <a>scalingPlan_statusMessage</a> - A simple message about the current
--   status of the scaling plan.
--   
--   <a>$sel:creationTime:ScalingPlan'</a>, <a>scalingPlan_creationTime</a>
--   - The Unix time stamp when the scaling plan was created.
--   
--   <a>$sel:statusStartTime:ScalingPlan'</a>,
--   <a>scalingPlan_statusStartTime</a> - The Unix time stamp when the
--   scaling plan entered the current status.
--   
--   <a>$sel:scalingPlanName:ScalingPlan'</a>,
--   <a>scalingPlan_scalingPlanName</a> - The name of the scaling plan.
--   
--   <a>$sel:scalingPlanVersion:ScalingPlan'</a>,
--   <a>scalingPlan_scalingPlanVersion</a> - The version number of the
--   scaling plan.
--   
--   <a>$sel:applicationSource:ScalingPlan'</a>,
--   <a>scalingPlan_applicationSource</a> - A CloudFormation stack or a set
--   of tags. You can create one scaling plan per application source.
--   
--   <a>$sel:scalingInstructions:ScalingPlan'</a>,
--   <a>scalingPlan_scalingInstructions</a> - The scaling instructions.
--   
--   <a>$sel:statusCode:ScalingPlan'</a>, <a>scalingPlan_statusCode</a> -
--   The status of the scaling plan.
--   
--   <ul>
--   <li><tt>Active</tt> - The scaling plan is active.</li>
--   <li><tt>ActiveWithProblems</tt> - The scaling plan is active, but the
--   scaling configuration for one or more resources could not be
--   applied.</li>
--   <li><tt>CreationInProgress</tt> - The scaling plan is being
--   created.</li>
--   <li><tt>CreationFailed</tt> - The scaling plan could not be
--   created.</li>
--   <li><tt>DeletionInProgress</tt> - The scaling plan is being
--   deleted.</li>
--   <li><tt>DeletionFailed</tt> - The scaling plan could not be
--   deleted.</li>
--   <li><tt>UpdateInProgress</tt> - The scaling plan is being
--   updated.</li>
--   <li><tt>UpdateFailed</tt> - The scaling plan could not be
--   updated.</li>
--   </ul>
newScalingPlan :: Text -> Integer -> ApplicationSource -> ScalingPlanStatusCode -> ScalingPlan

-- | Represents a scalable resource.
--   
--   <i>See:</i> <a>newScalingPlanResource</a> smart constructor.
data ScalingPlanResource
ScalingPlanResource' :: Maybe [ScalingPolicy] -> Maybe Text -> Text -> Integer -> ServiceNamespace -> Text -> ScalableDimension -> ScalingStatusCode -> ScalingPlanResource

-- | Create a value of <a>ScalingPlanResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:scalingPolicies:ScalingPlanResource'</a>,
--   <a>scalingPlanResource_scalingPolicies</a> - The scaling policies.
--   
--   <a>$sel:scalingStatusMessage:ScalingPlanResource'</a>,
--   <a>scalingPlanResource_scalingStatusMessage</a> - A simple message
--   about the current scaling status of the resource.
--   
--   <a>$sel:scalingPlanName:ScalingPlanResource'</a>,
--   <a>scalingPlanResource_scalingPlanName</a> - The name of the scaling
--   plan.
--   
--   <a>$sel:scalingPlanVersion:ScalingPlanResource'</a>,
--   <a>scalingPlanResource_scalingPlanVersion</a> - The version number of
--   the scaling plan.
--   
--   <a>$sel:serviceNamespace:ScalingPlanResource'</a>,
--   <a>scalingPlanResource_serviceNamespace</a> - The namespace of the AWS
--   service.
--   
--   <a>$sel:resourceId:ScalingPlanResource'</a>,
--   <a>scalingPlanResource_resourceId</a> - The ID of the resource. This
--   string consists of the resource type and unique identifier.
--   
--   <ul>
--   <li>Auto Scaling group - The resource type is
--   <tt>autoScalingGroup</tt> and the unique identifier is the name of the
--   Auto Scaling group. Example: <tt>autoScalingGroup/my-asg</tt>.</li>
--   <li>ECS service - The resource type is <tt>service</tt> and the unique
--   identifier is the cluster name and service name. Example:
--   <tt>service/default/sample-webapp</tt>.</li>
--   <li>Spot Fleet request - The resource type is
--   <tt>spot-fleet-request</tt> and the unique identifier is the Spot
--   Fleet request ID. Example:
--   <tt>spot-fleet-request/sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE</tt>.</li>
--   <li>DynamoDB table - The resource type is <tt>table</tt> and the
--   unique identifier is the resource ID. Example:
--   <tt>table/my-table</tt>.</li>
--   <li>DynamoDB global secondary index - The resource type is
--   <tt>index</tt> and the unique identifier is the resource ID. Example:
--   <tt>table/my-table/index/my-table-index</tt>.</li>
--   <li>Aurora DB cluster - The resource type is <tt>cluster</tt> and the
--   unique identifier is the cluster name. Example:
--   <tt>cluster:my-db-cluster</tt>.</li>
--   </ul>
--   
--   <a>$sel:scalableDimension:ScalingPlanResource'</a>,
--   <a>scalingPlanResource_scalableDimension</a> - The scalable dimension
--   for the resource.
--   
--   <ul>
--   <li><tt>autoscaling:autoScalingGroup:DesiredCapacity</tt> - The
--   desired capacity of an Auto Scaling group.</li>
--   <li><tt>ecs:service:DesiredCount</tt> - The desired task count of an
--   ECS service.</li>
--   <li><tt>ec2:spot-fleet-request:TargetCapacity</tt> - The target
--   capacity of a Spot Fleet request.</li>
--   <li><tt>dynamodb:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:table:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:index:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>dynamodb:index:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>rds:cluster:ReadReplicaCount</tt> - The count of Aurora
--   Replicas in an Aurora DB cluster. Available for Aurora
--   MySQL-compatible edition and Aurora PostgreSQL-compatible
--   edition.</li>
--   </ul>
--   
--   <a>$sel:scalingStatusCode:ScalingPlanResource'</a>,
--   <a>scalingPlanResource_scalingStatusCode</a> - The scaling status of
--   the resource.
--   
--   <ul>
--   <li><tt>Active</tt> - The scaling configuration is active.</li>
--   <li><tt>Inactive</tt> - The scaling configuration is not active
--   because the scaling plan is being created or the scaling configuration
--   could not be applied. Check the status message for more
--   information.</li>
--   <li><tt>PartiallyActive</tt> - The scaling configuration is partially
--   active because the scaling plan is being created or deleted or the
--   scaling configuration could not be fully applied. Check the status
--   message for more information.</li>
--   </ul>
newScalingPlanResource :: Text -> Integer -> ServiceNamespace -> Text -> ScalableDimension -> ScalingStatusCode -> ScalingPlanResource

-- | Represents a scaling policy.
--   
--   <i>See:</i> <a>newScalingPolicy</a> smart constructor.
data ScalingPolicy
ScalingPolicy' :: Maybe TargetTrackingConfiguration -> Text -> PolicyType -> ScalingPolicy

-- | Create a value of <a>ScalingPolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:targetTrackingConfiguration:ScalingPolicy'</a>,
--   <a>scalingPolicy_targetTrackingConfiguration</a> - The target tracking
--   scaling policy. Includes support for predefined or customized metrics.
--   
--   <a>$sel:policyName:ScalingPolicy'</a>, <a>scalingPolicy_policyName</a>
--   - The name of the scaling policy.
--   
--   <a>$sel:policyType:ScalingPolicy'</a>, <a>scalingPolicy_policyType</a>
--   - The type of scaling policy.
newScalingPolicy :: Text -> PolicyType -> ScalingPolicy

-- | Represents a tag.
--   
--   <i>See:</i> <a>newTagFilter</a> smart constructor.
data TagFilter
TagFilter' :: Maybe Text -> Maybe [Text] -> TagFilter

-- | Create a value of <a>TagFilter</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:TagFilter'</a>, <a>tagFilter_key</a> - The tag key.
--   
--   <a>$sel:values:TagFilter'</a>, <a>tagFilter_values</a> - The tag
--   values (0 to 20).
newTagFilter :: TagFilter

-- | Describes a target tracking configuration to use with AWS Auto
--   Scaling. Used with ScalingInstruction and ScalingPolicy.
--   
--   <i>See:</i> <a>newTargetTrackingConfiguration</a> smart constructor.
data TargetTrackingConfiguration
TargetTrackingConfiguration' :: Maybe Bool -> Maybe CustomizedScalingMetricSpecification -> Maybe PredefinedScalingMetricSpecification -> Maybe Int -> Maybe Int -> Maybe Int -> Double -> TargetTrackingConfiguration

-- | Create a value of <a>TargetTrackingConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:disableScaleIn:TargetTrackingConfiguration'</a>,
--   <a>targetTrackingConfiguration_disableScaleIn</a> - Indicates whether
--   scale in by the target tracking scaling policy is disabled. If the
--   value is <tt>true</tt>, scale in is disabled and the target tracking
--   scaling policy doesn't remove capacity from the scalable resource.
--   Otherwise, scale in is enabled and the target tracking scaling policy
--   can remove capacity from the scalable resource.
--   
--   The default value is <tt>false</tt>.
--   
--   
--   <a>$sel:customizedScalingMetricSpecification:TargetTrackingConfiguration'</a>,
--   <a>targetTrackingConfiguration_customizedScalingMetricSpecification</a>
--   - A customized metric. You can specify either a predefined metric or a
--   customized metric.
--   
--   
--   <a>$sel:predefinedScalingMetricSpecification:TargetTrackingConfiguration'</a>,
--   <a>targetTrackingConfiguration_predefinedScalingMetricSpecification</a>
--   - A predefined metric. You can specify either a predefined metric or a
--   customized metric.
--   
--   <a>$sel:estimatedInstanceWarmup:TargetTrackingConfiguration'</a>,
--   <a>targetTrackingConfiguration_estimatedInstanceWarmup</a> - The
--   estimated time, in seconds, until a newly launched instance can
--   contribute to the CloudWatch metrics. This value is used only if the
--   resource is an Auto Scaling group.
--   
--   <a>$sel:scaleOutCooldown:TargetTrackingConfiguration'</a>,
--   <a>targetTrackingConfiguration_scaleOutCooldown</a> - The amount of
--   time, in seconds, to wait for a previous scale-out activity to take
--   effect. This property is not used if the scalable resource is an Auto
--   Scaling group.
--   
--   With the <i>scale-out cooldown period</i>, the intention is to
--   continuously (but not excessively) scale out. After Auto Scaling
--   successfully scales out using a target tracking scaling policy, it
--   starts to calculate the cooldown time. The scaling policy won't
--   increase the desired capacity again unless either a larger scale out
--   is triggered or the cooldown period ends.
--   
--   <a>$sel:scaleInCooldown:TargetTrackingConfiguration'</a>,
--   <a>targetTrackingConfiguration_scaleInCooldown</a> - The amount of
--   time, in seconds, after a scale-in activity completes before another
--   scale-in activity can start. This property is not used if the scalable
--   resource is an Auto Scaling group.
--   
--   With the <i>scale-in cooldown period</i>, the intention is to scale in
--   conservatively to protect your application’s availability, so scale-in
--   activities are blocked until the cooldown period has expired. However,
--   if another alarm triggers a scale-out activity during the scale-in
--   cooldown period, Auto Scaling scales out the target immediately. In
--   this case, the scale-in cooldown period stops and doesn't complete.
--   
--   <a>$sel:targetValue:TargetTrackingConfiguration'</a>,
--   <a>targetTrackingConfiguration_targetValue</a> - The target value for
--   the metric. Although this property accepts numbers of type Double, it
--   won't accept values that are either too small or too large. Values
--   must be in the range of -2^360 to 2^360.
newTargetTrackingConfiguration :: Double -> TargetTrackingConfiguration
