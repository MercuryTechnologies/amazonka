-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/

@package libZSservicesZSamazonka-route53-recovery-control-configZSamazonka-route53-recovery-control-config
@version 2.0


module Amazonka.Route53RecoveryControlConfig.Types.AssertionRuleUpdate

-- | An update to an assertion rule. You can update the name or the
--   evaluation period (wait period). If you don't specify one of the items
--   to update, the item is unchanged.
--   
--   <i>See:</i> <a>newAssertionRuleUpdate</a> smart constructor.
data AssertionRuleUpdate
AssertionRuleUpdate' :: Text -> Int -> Text -> AssertionRuleUpdate

-- | The Amazon Resource Name (ARN) of the assertion rule.
[$sel:safetyRuleArn:AssertionRuleUpdate'] :: AssertionRuleUpdate -> Text

-- | An evaluation period, in milliseconds (ms), during which any request
--   against the target routing controls will fail. This helps prevent
--   "flapping" of state. The wait period is 5000 ms by default, but you
--   can choose a custom value.
[$sel:waitPeriodMs:AssertionRuleUpdate'] :: AssertionRuleUpdate -> Int

-- | The name of the assertion rule. You can use any non-white space
--   character in the name.
[$sel:name:AssertionRuleUpdate'] :: AssertionRuleUpdate -> Text

-- | Create a value of <a>AssertionRuleUpdate</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:safetyRuleArn:AssertionRuleUpdate'</a>,
--   <a>assertionRuleUpdate_safetyRuleArn</a> - The Amazon Resource Name
--   (ARN) of the assertion rule.
--   
--   <a>$sel:waitPeriodMs:AssertionRuleUpdate'</a>,
--   <a>assertionRuleUpdate_waitPeriodMs</a> - An evaluation period, in
--   milliseconds (ms), during which any request against the target routing
--   controls will fail. This helps prevent "flapping" of state. The wait
--   period is 5000 ms by default, but you can choose a custom value.
--   
--   <a>$sel:name:AssertionRuleUpdate'</a>, <a>assertionRuleUpdate_name</a>
--   - The name of the assertion rule. You can use any non-white space
--   character in the name.
newAssertionRuleUpdate :: Text -> Int -> Text -> AssertionRuleUpdate

-- | The Amazon Resource Name (ARN) of the assertion rule.
assertionRuleUpdate_safetyRuleArn :: Lens' AssertionRuleUpdate Text

-- | An evaluation period, in milliseconds (ms), during which any request
--   against the target routing controls will fail. This helps prevent
--   "flapping" of state. The wait period is 5000 ms by default, but you
--   can choose a custom value.
assertionRuleUpdate_waitPeriodMs :: Lens' AssertionRuleUpdate Int

-- | The name of the assertion rule. You can use any non-white space
--   character in the name.
assertionRuleUpdate_name :: Lens' AssertionRuleUpdate Text
instance GHC.Generics.Generic Amazonka.Route53RecoveryControlConfig.Types.AssertionRuleUpdate.AssertionRuleUpdate
instance GHC.Show.Show Amazonka.Route53RecoveryControlConfig.Types.AssertionRuleUpdate.AssertionRuleUpdate
instance GHC.Read.Read Amazonka.Route53RecoveryControlConfig.Types.AssertionRuleUpdate.AssertionRuleUpdate
instance GHC.Classes.Eq Amazonka.Route53RecoveryControlConfig.Types.AssertionRuleUpdate.AssertionRuleUpdate
instance Data.Hashable.Class.Hashable Amazonka.Route53RecoveryControlConfig.Types.AssertionRuleUpdate.AssertionRuleUpdate
instance Control.DeepSeq.NFData Amazonka.Route53RecoveryControlConfig.Types.AssertionRuleUpdate.AssertionRuleUpdate
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Route53RecoveryControlConfig.Types.AssertionRuleUpdate.AssertionRuleUpdate


module Amazonka.Route53RecoveryControlConfig.Types.ClusterEndpoint

-- | A cluster endpoint. Specify an endpoint when you want to set or
--   retrieve a routing control state in the cluster.
--   
--   <i>See:</i> <a>newClusterEndpoint</a> smart constructor.
data ClusterEndpoint
ClusterEndpoint' :: Maybe Text -> Maybe Text -> ClusterEndpoint

-- | The Amazon Web Services Region for a cluster endpoint.
[$sel:region:ClusterEndpoint'] :: ClusterEndpoint -> Maybe Text

-- | A cluster endpoint. Specify an endpoint and Amazon Web Services Region
--   when you want to set or retrieve a routing control state in the
--   cluster.
--   
--   To get or update the routing control state, see the Amazon Route 53
--   Application Recovery Controller Cluster (Data Plane) Actions.
[$sel:endpoint:ClusterEndpoint'] :: ClusterEndpoint -> Maybe Text

-- | Create a value of <a>ClusterEndpoint</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:region:ClusterEndpoint'</a>, <a>clusterEndpoint_region</a> -
--   The Amazon Web Services Region for a cluster endpoint.
--   
--   <a>$sel:endpoint:ClusterEndpoint'</a>, <a>clusterEndpoint_endpoint</a>
--   - A cluster endpoint. Specify an endpoint and Amazon Web Services
--   Region when you want to set or retrieve a routing control state in the
--   cluster.
--   
--   To get or update the routing control state, see the Amazon Route 53
--   Application Recovery Controller Cluster (Data Plane) Actions.
newClusterEndpoint :: ClusterEndpoint

-- | The Amazon Web Services Region for a cluster endpoint.
clusterEndpoint_region :: Lens' ClusterEndpoint (Maybe Text)

-- | A cluster endpoint. Specify an endpoint and Amazon Web Services Region
--   when you want to set or retrieve a routing control state in the
--   cluster.
--   
--   To get or update the routing control state, see the Amazon Route 53
--   Application Recovery Controller Cluster (Data Plane) Actions.
clusterEndpoint_endpoint :: Lens' ClusterEndpoint (Maybe Text)
instance GHC.Generics.Generic Amazonka.Route53RecoveryControlConfig.Types.ClusterEndpoint.ClusterEndpoint
instance GHC.Show.Show Amazonka.Route53RecoveryControlConfig.Types.ClusterEndpoint.ClusterEndpoint
instance GHC.Read.Read Amazonka.Route53RecoveryControlConfig.Types.ClusterEndpoint.ClusterEndpoint
instance GHC.Classes.Eq Amazonka.Route53RecoveryControlConfig.Types.ClusterEndpoint.ClusterEndpoint
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Route53RecoveryControlConfig.Types.ClusterEndpoint.ClusterEndpoint
instance Data.Hashable.Class.Hashable Amazonka.Route53RecoveryControlConfig.Types.ClusterEndpoint.ClusterEndpoint
instance Control.DeepSeq.NFData Amazonka.Route53RecoveryControlConfig.Types.ClusterEndpoint.ClusterEndpoint


module Amazonka.Route53RecoveryControlConfig.Types.GatingRuleUpdate

-- | Update to a gating rule. You can update the name or the evaluation
--   period (wait period). If you don't specify one of the items to update,
--   the item is unchanged.
--   
--   <i>See:</i> <a>newGatingRuleUpdate</a> smart constructor.
data GatingRuleUpdate
GatingRuleUpdate' :: Text -> Int -> Text -> GatingRuleUpdate

-- | The Amazon Resource Name (ARN) of the gating rule.
[$sel:safetyRuleArn:GatingRuleUpdate'] :: GatingRuleUpdate -> Text

-- | An evaluation period, in milliseconds (ms), during which any request
--   against the target routing controls will fail. This helps prevent
--   "flapping" of state. The wait period is 5000 ms by default, but you
--   can choose a custom value.
[$sel:waitPeriodMs:GatingRuleUpdate'] :: GatingRuleUpdate -> Int

-- | The name for the gating rule.
[$sel:name:GatingRuleUpdate'] :: GatingRuleUpdate -> Text

-- | Create a value of <a>GatingRuleUpdate</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:safetyRuleArn:GatingRuleUpdate'</a>,
--   <a>gatingRuleUpdate_safetyRuleArn</a> - The Amazon Resource Name (ARN)
--   of the gating rule.
--   
--   <a>$sel:waitPeriodMs:GatingRuleUpdate'</a>,
--   <a>gatingRuleUpdate_waitPeriodMs</a> - An evaluation period, in
--   milliseconds (ms), during which any request against the target routing
--   controls will fail. This helps prevent "flapping" of state. The wait
--   period is 5000 ms by default, but you can choose a custom value.
--   
--   <a>$sel:name:GatingRuleUpdate'</a>, <a>gatingRuleUpdate_name</a> - The
--   name for the gating rule.
newGatingRuleUpdate :: Text -> Int -> Text -> GatingRuleUpdate

-- | The Amazon Resource Name (ARN) of the gating rule.
gatingRuleUpdate_safetyRuleArn :: Lens' GatingRuleUpdate Text

-- | An evaluation period, in milliseconds (ms), during which any request
--   against the target routing controls will fail. This helps prevent
--   "flapping" of state. The wait period is 5000 ms by default, but you
--   can choose a custom value.
gatingRuleUpdate_waitPeriodMs :: Lens' GatingRuleUpdate Int

-- | The name for the gating rule.
gatingRuleUpdate_name :: Lens' GatingRuleUpdate Text
instance GHC.Generics.Generic Amazonka.Route53RecoveryControlConfig.Types.GatingRuleUpdate.GatingRuleUpdate
instance GHC.Show.Show Amazonka.Route53RecoveryControlConfig.Types.GatingRuleUpdate.GatingRuleUpdate
instance GHC.Read.Read Amazonka.Route53RecoveryControlConfig.Types.GatingRuleUpdate.GatingRuleUpdate
instance GHC.Classes.Eq Amazonka.Route53RecoveryControlConfig.Types.GatingRuleUpdate.GatingRuleUpdate
instance Data.Hashable.Class.Hashable Amazonka.Route53RecoveryControlConfig.Types.GatingRuleUpdate.GatingRuleUpdate
instance Control.DeepSeq.NFData Amazonka.Route53RecoveryControlConfig.Types.GatingRuleUpdate.GatingRuleUpdate
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Route53RecoveryControlConfig.Types.GatingRuleUpdate.GatingRuleUpdate


module Amazonka.Route53RecoveryControlConfig.Types.RuleType

-- | An enumerated type that determines how the evaluated rules are
--   processed. RuleType can be one of the following:
--   
--   ATLEAST - At least N routing controls must be set. You specify N as
--   the Threshold in the rule configuration.
--   
--   AND - All routing controls must be set. This is a shortcut for "At
--   least N," where N is the total number of controls in the rule.
--   
--   OR - Any control must be set. This is a shortcut for "At least N,"
--   where N is 1.
newtype RuleType
RuleType' :: Text -> RuleType
[fromRuleType] :: RuleType -> Text
pattern RuleType_AND :: RuleType
pattern RuleType_ATLEAST :: RuleType
pattern RuleType_OR :: RuleType
instance Amazonka.Data.XML.ToXML Amazonka.Route53RecoveryControlConfig.Types.RuleType.RuleType
instance Amazonka.Data.XML.FromXML Amazonka.Route53RecoveryControlConfig.Types.RuleType.RuleType
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.Route53RecoveryControlConfig.Types.RuleType.RuleType
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Route53RecoveryControlConfig.Types.RuleType.RuleType
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.Route53RecoveryControlConfig.Types.RuleType.RuleType
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Route53RecoveryControlConfig.Types.RuleType.RuleType
instance Amazonka.Data.Query.ToQuery Amazonka.Route53RecoveryControlConfig.Types.RuleType.RuleType
instance Amazonka.Data.Headers.ToHeader Amazonka.Route53RecoveryControlConfig.Types.RuleType.RuleType
instance Amazonka.Data.Log.ToLog Amazonka.Route53RecoveryControlConfig.Types.RuleType.RuleType
instance Amazonka.Data.ByteString.ToByteString Amazonka.Route53RecoveryControlConfig.Types.RuleType.RuleType
instance Amazonka.Data.Text.ToText Amazonka.Route53RecoveryControlConfig.Types.RuleType.RuleType
instance Amazonka.Data.Text.FromText Amazonka.Route53RecoveryControlConfig.Types.RuleType.RuleType
instance Control.DeepSeq.NFData Amazonka.Route53RecoveryControlConfig.Types.RuleType.RuleType
instance Data.Hashable.Class.Hashable Amazonka.Route53RecoveryControlConfig.Types.RuleType.RuleType
instance GHC.Generics.Generic Amazonka.Route53RecoveryControlConfig.Types.RuleType.RuleType
instance GHC.Classes.Ord Amazonka.Route53RecoveryControlConfig.Types.RuleType.RuleType
instance GHC.Classes.Eq Amazonka.Route53RecoveryControlConfig.Types.RuleType.RuleType
instance GHC.Read.Read Amazonka.Route53RecoveryControlConfig.Types.RuleType.RuleType
instance GHC.Show.Show Amazonka.Route53RecoveryControlConfig.Types.RuleType.RuleType


module Amazonka.Route53RecoveryControlConfig.Types.RuleConfig

-- | The rule configuration for an assertion rule. That is, the criteria
--   that you set for specific assertion controls (routing controls) that
--   specify how many controls must be enabled after a transaction
--   completes.
--   
--   <i>See:</i> <a>newRuleConfig</a> smart constructor.
data RuleConfig
RuleConfig' :: RuleType -> Bool -> Int -> RuleConfig

-- | A rule can be one of the following: ATLEAST, AND, or OR.
[$sel:type':RuleConfig'] :: RuleConfig -> RuleType

-- | Logical negation of the rule. If the rule would usually evaluate true,
--   it's evaluated as false, and vice versa.
[$sel:inverted:RuleConfig'] :: RuleConfig -> Bool

-- | The value of N, when you specify an ATLEAST rule type. That is,
--   Threshold is the number of controls that must be set when you specify
--   an ATLEAST type.
[$sel:threshold:RuleConfig'] :: RuleConfig -> Int

-- | Create a value of <a>RuleConfig</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:type':RuleConfig'</a>, <a>ruleConfig_type</a> - A rule can be
--   one of the following: ATLEAST, AND, or OR.
--   
--   <a>$sel:inverted:RuleConfig'</a>, <a>ruleConfig_inverted</a> - Logical
--   negation of the rule. If the rule would usually evaluate true, it's
--   evaluated as false, and vice versa.
--   
--   <a>$sel:threshold:RuleConfig'</a>, <a>ruleConfig_threshold</a> - The
--   value of N, when you specify an ATLEAST rule type. That is, Threshold
--   is the number of controls that must be set when you specify an ATLEAST
--   type.
newRuleConfig :: RuleType -> Bool -> Int -> RuleConfig

-- | A rule can be one of the following: ATLEAST, AND, or OR.
ruleConfig_type :: Lens' RuleConfig RuleType

-- | Logical negation of the rule. If the rule would usually evaluate true,
--   it's evaluated as false, and vice versa.
ruleConfig_inverted :: Lens' RuleConfig Bool

-- | The value of N, when you specify an ATLEAST rule type. That is,
--   Threshold is the number of controls that must be set when you specify
--   an ATLEAST type.
ruleConfig_threshold :: Lens' RuleConfig Int
instance GHC.Generics.Generic Amazonka.Route53RecoveryControlConfig.Types.RuleConfig.RuleConfig
instance GHC.Show.Show Amazonka.Route53RecoveryControlConfig.Types.RuleConfig.RuleConfig
instance GHC.Read.Read Amazonka.Route53RecoveryControlConfig.Types.RuleConfig.RuleConfig
instance GHC.Classes.Eq Amazonka.Route53RecoveryControlConfig.Types.RuleConfig.RuleConfig
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Route53RecoveryControlConfig.Types.RuleConfig.RuleConfig
instance Data.Hashable.Class.Hashable Amazonka.Route53RecoveryControlConfig.Types.RuleConfig.RuleConfig
instance Control.DeepSeq.NFData Amazonka.Route53RecoveryControlConfig.Types.RuleConfig.RuleConfig
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Route53RecoveryControlConfig.Types.RuleConfig.RuleConfig


module Amazonka.Route53RecoveryControlConfig.Types.NewGatingRule

-- | A new gating rule for a control panel.
--   
--   <i>See:</i> <a>newNewGatingRule</a> smart constructor.
data NewGatingRule
NewGatingRule' :: [Text] -> Text -> [Text] -> RuleConfig -> Int -> Text -> NewGatingRule

-- | Routing controls that can only be set or unset if the specified
--   RuleConfig evaluates to true for the specified GatingControls. For
--   example, say you have three gating controls, one for each of three
--   Amazon Web Services Regions. Now you specify AtLeast 2 as your
--   RuleConfig. With these settings, you can only change (set or unset)
--   the routing controls that you have specified as TargetControls if that
--   rule evaluates to true.
--   
--   In other words, your ability to change the routing controls that you
--   have specified as TargetControls is gated by the rule that you set for
--   the routing controls in GatingControls.
[$sel:targetControls:NewGatingRule'] :: NewGatingRule -> [Text]

-- | The Amazon Resource Name (ARN) of the control panel.
[$sel:controlPanelArn:NewGatingRule'] :: NewGatingRule -> Text

-- | The gating controls for the new gating rule. That is, routing controls
--   that are evaluated by the rule configuration that you specify.
[$sel:gatingControls:NewGatingRule'] :: NewGatingRule -> [Text]

-- | The criteria that you set for specific gating controls (routing
--   controls) that designates how many controls must be enabled to allow
--   you to change (set or unset) the target controls.
[$sel:ruleConfig:NewGatingRule'] :: NewGatingRule -> RuleConfig

-- | An evaluation period, in milliseconds (ms), during which any request
--   against the target routing controls will fail. This helps prevent
--   "flapping" of state. The wait period is 5000 ms by default, but you
--   can choose a custom value.
[$sel:waitPeriodMs:NewGatingRule'] :: NewGatingRule -> Int

-- | The name for the new gating rule.
[$sel:name:NewGatingRule'] :: NewGatingRule -> Text

-- | Create a value of <a>NewGatingRule</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:targetControls:NewGatingRule'</a>,
--   <a>newGatingRule_targetControls</a> - Routing controls that can only
--   be set or unset if the specified RuleConfig evaluates to true for the
--   specified GatingControls. For example, say you have three gating
--   controls, one for each of three Amazon Web Services Regions. Now you
--   specify AtLeast 2 as your RuleConfig. With these settings, you can
--   only change (set or unset) the routing controls that you have
--   specified as TargetControls if that rule evaluates to true.
--   
--   In other words, your ability to change the routing controls that you
--   have specified as TargetControls is gated by the rule that you set for
--   the routing controls in GatingControls.
--   
--   <a>$sel:controlPanelArn:NewGatingRule'</a>,
--   <a>newGatingRule_controlPanelArn</a> - The Amazon Resource Name (ARN)
--   of the control panel.
--   
--   <a>$sel:gatingControls:NewGatingRule'</a>,
--   <a>newGatingRule_gatingControls</a> - The gating controls for the new
--   gating rule. That is, routing controls that are evaluated by the rule
--   configuration that you specify.
--   
--   <a>$sel:ruleConfig:NewGatingRule'</a>, <a>newGatingRule_ruleConfig</a>
--   - The criteria that you set for specific gating controls (routing
--   controls) that designates how many controls must be enabled to allow
--   you to change (set or unset) the target controls.
--   
--   <a>$sel:waitPeriodMs:NewGatingRule'</a>,
--   <a>newGatingRule_waitPeriodMs</a> - An evaluation period, in
--   milliseconds (ms), during which any request against the target routing
--   controls will fail. This helps prevent "flapping" of state. The wait
--   period is 5000 ms by default, but you can choose a custom value.
--   
--   <a>$sel:name:NewGatingRule'</a>, <a>newGatingRule_name</a> - The name
--   for the new gating rule.
newNewGatingRule :: Text -> RuleConfig -> Int -> Text -> NewGatingRule

-- | Routing controls that can only be set or unset if the specified
--   RuleConfig evaluates to true for the specified GatingControls. For
--   example, say you have three gating controls, one for each of three
--   Amazon Web Services Regions. Now you specify AtLeast 2 as your
--   RuleConfig. With these settings, you can only change (set or unset)
--   the routing controls that you have specified as TargetControls if that
--   rule evaluates to true.
--   
--   In other words, your ability to change the routing controls that you
--   have specified as TargetControls is gated by the rule that you set for
--   the routing controls in GatingControls.
newGatingRule_targetControls :: Lens' NewGatingRule [Text]

-- | The Amazon Resource Name (ARN) of the control panel.
newGatingRule_controlPanelArn :: Lens' NewGatingRule Text

-- | The gating controls for the new gating rule. That is, routing controls
--   that are evaluated by the rule configuration that you specify.
newGatingRule_gatingControls :: Lens' NewGatingRule [Text]

-- | The criteria that you set for specific gating controls (routing
--   controls) that designates how many controls must be enabled to allow
--   you to change (set or unset) the target controls.
newGatingRule_ruleConfig :: Lens' NewGatingRule RuleConfig

-- | An evaluation period, in milliseconds (ms), during which any request
--   against the target routing controls will fail. This helps prevent
--   "flapping" of state. The wait period is 5000 ms by default, but you
--   can choose a custom value.
newGatingRule_waitPeriodMs :: Lens' NewGatingRule Int

-- | The name for the new gating rule.
newGatingRule_name :: Lens' NewGatingRule Text
instance GHC.Generics.Generic Amazonka.Route53RecoveryControlConfig.Types.NewGatingRule.NewGatingRule
instance GHC.Show.Show Amazonka.Route53RecoveryControlConfig.Types.NewGatingRule.NewGatingRule
instance GHC.Read.Read Amazonka.Route53RecoveryControlConfig.Types.NewGatingRule.NewGatingRule
instance GHC.Classes.Eq Amazonka.Route53RecoveryControlConfig.Types.NewGatingRule.NewGatingRule
instance Data.Hashable.Class.Hashable Amazonka.Route53RecoveryControlConfig.Types.NewGatingRule.NewGatingRule
instance Control.DeepSeq.NFData Amazonka.Route53RecoveryControlConfig.Types.NewGatingRule.NewGatingRule
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Route53RecoveryControlConfig.Types.NewGatingRule.NewGatingRule


module Amazonka.Route53RecoveryControlConfig.Types.NewAssertionRule

-- | A new assertion rule for a control panel.
--   
--   <i>See:</i> <a>newNewAssertionRule</a> smart constructor.
data NewAssertionRule
NewAssertionRule' :: Text -> [Text] -> RuleConfig -> Int -> Text -> NewAssertionRule

-- | The Amazon Resource Name (ARN) for the control panel.
[$sel:controlPanelArn:NewAssertionRule'] :: NewAssertionRule -> Text

-- | The routing controls that are part of transactions that are evaluated
--   to determine if a request to change a routing control state is
--   allowed. For example, you might include three routing controls, one
--   for each of three Amazon Web Services Regions.
[$sel:assertedControls:NewAssertionRule'] :: NewAssertionRule -> [Text]

-- | The criteria that you set for specific assertion controls (routing
--   controls) that designate how many controls must be enabled as the
--   result of a transaction. For example, if you have three assertion
--   controls, you might specify atleast 2 for your rule configuration.
--   This means that at least two assertion controls must be enabled, so
--   that at least two Amazon Web Services Regions are enabled.
[$sel:ruleConfig:NewAssertionRule'] :: NewAssertionRule -> RuleConfig

-- | An evaluation period, in milliseconds (ms), during which any request
--   against the target routing controls will fail. This helps prevent
--   "flapping" of state. The wait period is 5000 ms by default, but you
--   can choose a custom value.
[$sel:waitPeriodMs:NewAssertionRule'] :: NewAssertionRule -> Int

-- | The name of the assertion rule. You can use any non-white space
--   character in the name.
[$sel:name:NewAssertionRule'] :: NewAssertionRule -> Text

-- | Create a value of <a>NewAssertionRule</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:controlPanelArn:NewAssertionRule'</a>,
--   <a>newAssertionRule_controlPanelArn</a> - The Amazon Resource Name
--   (ARN) for the control panel.
--   
--   <a>$sel:assertedControls:NewAssertionRule'</a>,
--   <a>newAssertionRule_assertedControls</a> - The routing controls that
--   are part of transactions that are evaluated to determine if a request
--   to change a routing control state is allowed. For example, you might
--   include three routing controls, one for each of three Amazon Web
--   Services Regions.
--   
--   <a>$sel:ruleConfig:NewAssertionRule'</a>,
--   <a>newAssertionRule_ruleConfig</a> - The criteria that you set for
--   specific assertion controls (routing controls) that designate how many
--   controls must be enabled as the result of a transaction. For example,
--   if you have three assertion controls, you might specify atleast 2 for
--   your rule configuration. This means that at least two assertion
--   controls must be enabled, so that at least two Amazon Web Services
--   Regions are enabled.
--   
--   <a>$sel:waitPeriodMs:NewAssertionRule'</a>,
--   <a>newAssertionRule_waitPeriodMs</a> - An evaluation period, in
--   milliseconds (ms), during which any request against the target routing
--   controls will fail. This helps prevent "flapping" of state. The wait
--   period is 5000 ms by default, but you can choose a custom value.
--   
--   <a>$sel:name:NewAssertionRule'</a>, <a>newAssertionRule_name</a> - The
--   name of the assertion rule. You can use any non-white space character
--   in the name.
newNewAssertionRule :: Text -> RuleConfig -> Int -> Text -> NewAssertionRule

-- | The Amazon Resource Name (ARN) for the control panel.
newAssertionRule_controlPanelArn :: Lens' NewAssertionRule Text

-- | The routing controls that are part of transactions that are evaluated
--   to determine if a request to change a routing control state is
--   allowed. For example, you might include three routing controls, one
--   for each of three Amazon Web Services Regions.
newAssertionRule_assertedControls :: Lens' NewAssertionRule [Text]

-- | The criteria that you set for specific assertion controls (routing
--   controls) that designate how many controls must be enabled as the
--   result of a transaction. For example, if you have three assertion
--   controls, you might specify atleast 2 for your rule configuration.
--   This means that at least two assertion controls must be enabled, so
--   that at least two Amazon Web Services Regions are enabled.
newAssertionRule_ruleConfig :: Lens' NewAssertionRule RuleConfig

-- | An evaluation period, in milliseconds (ms), during which any request
--   against the target routing controls will fail. This helps prevent
--   "flapping" of state. The wait period is 5000 ms by default, but you
--   can choose a custom value.
newAssertionRule_waitPeriodMs :: Lens' NewAssertionRule Int

-- | The name of the assertion rule. You can use any non-white space
--   character in the name.
newAssertionRule_name :: Lens' NewAssertionRule Text
instance GHC.Generics.Generic Amazonka.Route53RecoveryControlConfig.Types.NewAssertionRule.NewAssertionRule
instance GHC.Show.Show Amazonka.Route53RecoveryControlConfig.Types.NewAssertionRule.NewAssertionRule
instance GHC.Read.Read Amazonka.Route53RecoveryControlConfig.Types.NewAssertionRule.NewAssertionRule
instance GHC.Classes.Eq Amazonka.Route53RecoveryControlConfig.Types.NewAssertionRule.NewAssertionRule
instance Data.Hashable.Class.Hashable Amazonka.Route53RecoveryControlConfig.Types.NewAssertionRule.NewAssertionRule
instance Control.DeepSeq.NFData Amazonka.Route53RecoveryControlConfig.Types.NewAssertionRule.NewAssertionRule
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Route53RecoveryControlConfig.Types.NewAssertionRule.NewAssertionRule


module Amazonka.Route53RecoveryControlConfig.Types.Status

-- | The deployment status of a resource. Status can be one of the
--   following:
--   
--   PENDING: Amazon Route 53 Application Recovery Controller is creating
--   the resource.
--   
--   DEPLOYED: The resource is deployed and ready to use.
--   
--   PENDING_DELETION: Amazon Route 53 Application Recovery Controller is
--   deleting the resource.
newtype Status
Status' :: Text -> Status
[fromStatus] :: Status -> Text
pattern Status_DEPLOYED :: Status
pattern Status_PENDING :: Status
pattern Status_PENDING_DELETION :: Status
instance Amazonka.Data.XML.ToXML Amazonka.Route53RecoveryControlConfig.Types.Status.Status
instance Amazonka.Data.XML.FromXML Amazonka.Route53RecoveryControlConfig.Types.Status.Status
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.Route53RecoveryControlConfig.Types.Status.Status
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Route53RecoveryControlConfig.Types.Status.Status
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.Route53RecoveryControlConfig.Types.Status.Status
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Route53RecoveryControlConfig.Types.Status.Status
instance Amazonka.Data.Query.ToQuery Amazonka.Route53RecoveryControlConfig.Types.Status.Status
instance Amazonka.Data.Headers.ToHeader Amazonka.Route53RecoveryControlConfig.Types.Status.Status
instance Amazonka.Data.Log.ToLog Amazonka.Route53RecoveryControlConfig.Types.Status.Status
instance Amazonka.Data.ByteString.ToByteString Amazonka.Route53RecoveryControlConfig.Types.Status.Status
instance Amazonka.Data.Text.ToText Amazonka.Route53RecoveryControlConfig.Types.Status.Status
instance Amazonka.Data.Text.FromText Amazonka.Route53RecoveryControlConfig.Types.Status.Status
instance Control.DeepSeq.NFData Amazonka.Route53RecoveryControlConfig.Types.Status.Status
instance Data.Hashable.Class.Hashable Amazonka.Route53RecoveryControlConfig.Types.Status.Status
instance GHC.Generics.Generic Amazonka.Route53RecoveryControlConfig.Types.Status.Status
instance GHC.Classes.Ord Amazonka.Route53RecoveryControlConfig.Types.Status.Status
instance GHC.Classes.Eq Amazonka.Route53RecoveryControlConfig.Types.Status.Status
instance GHC.Read.Read Amazonka.Route53RecoveryControlConfig.Types.Status.Status
instance GHC.Show.Show Amazonka.Route53RecoveryControlConfig.Types.Status.Status


module Amazonka.Route53RecoveryControlConfig.Types.RoutingControl

-- | A routing control has one of two states: ON and OFF. You can map the
--   routing control state to the state of an Amazon Route 53 health check,
--   which can be used to control traffic routing.
--   
--   <i>See:</i> <a>newRoutingControl</a> smart constructor.
data RoutingControl
RoutingControl' :: Maybe Status -> Maybe Text -> Maybe Text -> Maybe Text -> RoutingControl

-- | The deployment status of a routing control. Status can be one of the
--   following: PENDING, DEPLOYED, PENDING_DELETION.
[$sel:status:RoutingControl'] :: RoutingControl -> Maybe Status

-- | The Amazon Resource Name (ARN) of the control panel that includes the
--   routing control.
[$sel:controlPanelArn:RoutingControl'] :: RoutingControl -> Maybe Text

-- | The name of the routing control.
[$sel:name:RoutingControl'] :: RoutingControl -> Maybe Text

-- | The Amazon Resource Name (ARN) of the routing control.
[$sel:routingControlArn:RoutingControl'] :: RoutingControl -> Maybe Text

-- | Create a value of <a>RoutingControl</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:RoutingControl'</a>, <a>routingControl_status</a> - The
--   deployment status of a routing control. Status can be one of the
--   following: PENDING, DEPLOYED, PENDING_DELETION.
--   
--   <a>$sel:controlPanelArn:RoutingControl'</a>,
--   <a>routingControl_controlPanelArn</a> - The Amazon Resource Name (ARN)
--   of the control panel that includes the routing control.
--   
--   <a>$sel:name:RoutingControl'</a>, <a>routingControl_name</a> - The
--   name of the routing control.
--   
--   <a>$sel:routingControlArn:RoutingControl'</a>,
--   <a>routingControl_routingControlArn</a> - The Amazon Resource Name
--   (ARN) of the routing control.
newRoutingControl :: RoutingControl

-- | The deployment status of a routing control. Status can be one of the
--   following: PENDING, DEPLOYED, PENDING_DELETION.
routingControl_status :: Lens' RoutingControl (Maybe Status)

-- | The Amazon Resource Name (ARN) of the control panel that includes the
--   routing control.
routingControl_controlPanelArn :: Lens' RoutingControl (Maybe Text)

-- | The name of the routing control.
routingControl_name :: Lens' RoutingControl (Maybe Text)

-- | The Amazon Resource Name (ARN) of the routing control.
routingControl_routingControlArn :: Lens' RoutingControl (Maybe Text)
instance GHC.Generics.Generic Amazonka.Route53RecoveryControlConfig.Types.RoutingControl.RoutingControl
instance GHC.Show.Show Amazonka.Route53RecoveryControlConfig.Types.RoutingControl.RoutingControl
instance GHC.Read.Read Amazonka.Route53RecoveryControlConfig.Types.RoutingControl.RoutingControl
instance GHC.Classes.Eq Amazonka.Route53RecoveryControlConfig.Types.RoutingControl.RoutingControl
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Route53RecoveryControlConfig.Types.RoutingControl.RoutingControl
instance Data.Hashable.Class.Hashable Amazonka.Route53RecoveryControlConfig.Types.RoutingControl.RoutingControl
instance Control.DeepSeq.NFData Amazonka.Route53RecoveryControlConfig.Types.RoutingControl.RoutingControl


module Amazonka.Route53RecoveryControlConfig.Types.GatingRule

-- | A gating rule verifies that a set of gating controls evaluates as
--   true, based on a rule configuration that you specify. If the gating
--   rule evaluates to true, Amazon Route 53 Application Recovery
--   Controller allows a set of routing control state changes to run and
--   complete against the set of target controls.
--   
--   <i>See:</i> <a>newGatingRule</a> smart constructor.
data GatingRule
GatingRule' :: Status -> [Text] -> Text -> Text -> [Text] -> RuleConfig -> Int -> Text -> GatingRule

-- | The deployment status of a gating rule. Status can be one of the
--   following: PENDING, DEPLOYED, PENDING_DELETION.
[$sel:status:GatingRule'] :: GatingRule -> Status

-- | Routing controls that can only be set or unset if the specified
--   RuleConfig evaluates to true for the specified GatingControls. For
--   example, say you have three gating controls, one for each of three
--   Amazon Web Services Regions. Now you specify ATLEAST 2 as your
--   RuleConfig. With these settings, you can only change (set or unset)
--   the routing controls that you have specified as TargetControls if that
--   rule evaluates to true.
--   
--   In other words, your ability to change the routing controls that you
--   have specified as TargetControls is gated by the rule that you set for
--   the routing controls in GatingControls.
[$sel:targetControls:GatingRule'] :: GatingRule -> [Text]

-- | The Amazon Resource Name (ARN) of the control panel.
[$sel:controlPanelArn:GatingRule'] :: GatingRule -> Text

-- | The Amazon Resource Name (ARN) of the gating rule.
[$sel:safetyRuleArn:GatingRule'] :: GatingRule -> Text

-- | The gating controls for the gating rule. That is, routing controls
--   that are evaluated by the rule configuration that you specify.
[$sel:gatingControls:GatingRule'] :: GatingRule -> [Text]

-- | The criteria that you set for specific gating controls (routing
--   controls) that designates how many controls must be enabled to allow
--   you to change (set or unset) the target controls.
[$sel:ruleConfig:GatingRule'] :: GatingRule -> RuleConfig

-- | An evaluation period, in milliseconds (ms), during which any request
--   against the target routing controls will fail. This helps prevent
--   "flapping" of state. The wait period is 5000 ms by default, but you
--   can choose a custom value.
[$sel:waitPeriodMs:GatingRule'] :: GatingRule -> Int

-- | The name for the gating rule.
[$sel:name:GatingRule'] :: GatingRule -> Text

-- | Create a value of <a>GatingRule</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:GatingRule'</a>, <a>gatingRule_status</a> - The
--   deployment status of a gating rule. Status can be one of the
--   following: PENDING, DEPLOYED, PENDING_DELETION.
--   
--   <a>$sel:targetControls:GatingRule'</a>,
--   <a>gatingRule_targetControls</a> - Routing controls that can only be
--   set or unset if the specified RuleConfig evaluates to true for the
--   specified GatingControls. For example, say you have three gating
--   controls, one for each of three Amazon Web Services Regions. Now you
--   specify ATLEAST 2 as your RuleConfig. With these settings, you can
--   only change (set or unset) the routing controls that you have
--   specified as TargetControls if that rule evaluates to true.
--   
--   In other words, your ability to change the routing controls that you
--   have specified as TargetControls is gated by the rule that you set for
--   the routing controls in GatingControls.
--   
--   <a>$sel:controlPanelArn:GatingRule'</a>,
--   <a>gatingRule_controlPanelArn</a> - The Amazon Resource Name (ARN) of
--   the control panel.
--   
--   <a>$sel:safetyRuleArn:GatingRule'</a>, <a>gatingRule_safetyRuleArn</a>
--   - The Amazon Resource Name (ARN) of the gating rule.
--   
--   <a>$sel:gatingControls:GatingRule'</a>,
--   <a>gatingRule_gatingControls</a> - The gating controls for the gating
--   rule. That is, routing controls that are evaluated by the rule
--   configuration that you specify.
--   
--   <a>$sel:ruleConfig:GatingRule'</a>, <a>gatingRule_ruleConfig</a> - The
--   criteria that you set for specific gating controls (routing controls)
--   that designates how many controls must be enabled to allow you to
--   change (set or unset) the target controls.
--   
--   <a>$sel:waitPeriodMs:GatingRule'</a>, <a>gatingRule_waitPeriodMs</a> -
--   An evaluation period, in milliseconds (ms), during which any request
--   against the target routing controls will fail. This helps prevent
--   "flapping" of state. The wait period is 5000 ms by default, but you
--   can choose a custom value.
--   
--   <a>$sel:name:GatingRule'</a>, <a>gatingRule_name</a> - The name for
--   the gating rule.
newGatingRule :: Status -> Text -> Text -> RuleConfig -> Int -> Text -> GatingRule

-- | The deployment status of a gating rule. Status can be one of the
--   following: PENDING, DEPLOYED, PENDING_DELETION.
gatingRule_status :: Lens' GatingRule Status

-- | Routing controls that can only be set or unset if the specified
--   RuleConfig evaluates to true for the specified GatingControls. For
--   example, say you have three gating controls, one for each of three
--   Amazon Web Services Regions. Now you specify ATLEAST 2 as your
--   RuleConfig. With these settings, you can only change (set or unset)
--   the routing controls that you have specified as TargetControls if that
--   rule evaluates to true.
--   
--   In other words, your ability to change the routing controls that you
--   have specified as TargetControls is gated by the rule that you set for
--   the routing controls in GatingControls.
gatingRule_targetControls :: Lens' GatingRule [Text]

-- | The Amazon Resource Name (ARN) of the control panel.
gatingRule_controlPanelArn :: Lens' GatingRule Text

-- | The Amazon Resource Name (ARN) of the gating rule.
gatingRule_safetyRuleArn :: Lens' GatingRule Text

-- | The gating controls for the gating rule. That is, routing controls
--   that are evaluated by the rule configuration that you specify.
gatingRule_gatingControls :: Lens' GatingRule [Text]

-- | The criteria that you set for specific gating controls (routing
--   controls) that designates how many controls must be enabled to allow
--   you to change (set or unset) the target controls.
gatingRule_ruleConfig :: Lens' GatingRule RuleConfig

-- | An evaluation period, in milliseconds (ms), during which any request
--   against the target routing controls will fail. This helps prevent
--   "flapping" of state. The wait period is 5000 ms by default, but you
--   can choose a custom value.
gatingRule_waitPeriodMs :: Lens' GatingRule Int

-- | The name for the gating rule.
gatingRule_name :: Lens' GatingRule Text
instance GHC.Generics.Generic Amazonka.Route53RecoveryControlConfig.Types.GatingRule.GatingRule
instance GHC.Show.Show Amazonka.Route53RecoveryControlConfig.Types.GatingRule.GatingRule
instance GHC.Read.Read Amazonka.Route53RecoveryControlConfig.Types.GatingRule.GatingRule
instance GHC.Classes.Eq Amazonka.Route53RecoveryControlConfig.Types.GatingRule.GatingRule
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Route53RecoveryControlConfig.Types.GatingRule.GatingRule
instance Data.Hashable.Class.Hashable Amazonka.Route53RecoveryControlConfig.Types.GatingRule.GatingRule
instance Control.DeepSeq.NFData Amazonka.Route53RecoveryControlConfig.Types.GatingRule.GatingRule


module Amazonka.Route53RecoveryControlConfig.Types.ControlPanel

-- | A control panel represents a group of routing controls that can be
--   changed together in a single transaction.
--   
--   <i>See:</i> <a>newControlPanel</a> smart constructor.
data ControlPanel
ControlPanel' :: Maybe Status -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe Bool -> ControlPanel

-- | The deployment status of control panel. Status can be one of the
--   following: PENDING, DEPLOYED, PENDING_DELETION.
[$sel:status:ControlPanel'] :: ControlPanel -> Maybe Status

-- | The Amazon Resource Name (ARN) of the control panel.
[$sel:controlPanelArn:ControlPanel'] :: ControlPanel -> Maybe Text

-- | The Amazon Resource Name (ARN) of the cluster that includes the
--   control panel.
[$sel:clusterArn:ControlPanel'] :: ControlPanel -> Maybe Text

-- | The number of routing controls in the control panel.
[$sel:routingControlCount:ControlPanel'] :: ControlPanel -> Maybe Int

-- | The name of the control panel. You can use any non-white space
--   character in the name.
[$sel:name:ControlPanel'] :: ControlPanel -> Maybe Text

-- | A flag that Amazon Route 53 Application Recovery Controller sets to
--   true to designate the default control panel for a cluster. When you
--   create a cluster, Amazon Route 53 Application Recovery Controller
--   creates a control panel, and sets this flag for that control panel. If
--   you create a control panel yourself, this flag is set to false.
[$sel:defaultControlPanel:ControlPanel'] :: ControlPanel -> Maybe Bool

-- | Create a value of <a>ControlPanel</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:ControlPanel'</a>, <a>controlPanel_status</a> - The
--   deployment status of control panel. Status can be one of the
--   following: PENDING, DEPLOYED, PENDING_DELETION.
--   
--   <a>$sel:controlPanelArn:ControlPanel'</a>,
--   <a>controlPanel_controlPanelArn</a> - The Amazon Resource Name (ARN)
--   of the control panel.
--   
--   <a>$sel:clusterArn:ControlPanel'</a>, <a>controlPanel_clusterArn</a> -
--   The Amazon Resource Name (ARN) of the cluster that includes the
--   control panel.
--   
--   <a>$sel:routingControlCount:ControlPanel'</a>,
--   <a>controlPanel_routingControlCount</a> - The number of routing
--   controls in the control panel.
--   
--   <a>$sel:name:ControlPanel'</a>, <a>controlPanel_name</a> - The name of
--   the control panel. You can use any non-white space character in the
--   name.
--   
--   <a>$sel:defaultControlPanel:ControlPanel'</a>,
--   <a>controlPanel_defaultControlPanel</a> - A flag that Amazon Route 53
--   Application Recovery Controller sets to true to designate the default
--   control panel for a cluster. When you create a cluster, Amazon Route
--   53 Application Recovery Controller creates a control panel, and sets
--   this flag for that control panel. If you create a control panel
--   yourself, this flag is set to false.
newControlPanel :: ControlPanel

-- | The deployment status of control panel. Status can be one of the
--   following: PENDING, DEPLOYED, PENDING_DELETION.
controlPanel_status :: Lens' ControlPanel (Maybe Status)

-- | The Amazon Resource Name (ARN) of the control panel.
controlPanel_controlPanelArn :: Lens' ControlPanel (Maybe Text)

-- | The Amazon Resource Name (ARN) of the cluster that includes the
--   control panel.
controlPanel_clusterArn :: Lens' ControlPanel (Maybe Text)

-- | The number of routing controls in the control panel.
controlPanel_routingControlCount :: Lens' ControlPanel (Maybe Int)

-- | The name of the control panel. You can use any non-white space
--   character in the name.
controlPanel_name :: Lens' ControlPanel (Maybe Text)

-- | A flag that Amazon Route 53 Application Recovery Controller sets to
--   true to designate the default control panel for a cluster. When you
--   create a cluster, Amazon Route 53 Application Recovery Controller
--   creates a control panel, and sets this flag for that control panel. If
--   you create a control panel yourself, this flag is set to false.
controlPanel_defaultControlPanel :: Lens' ControlPanel (Maybe Bool)
instance GHC.Generics.Generic Amazonka.Route53RecoveryControlConfig.Types.ControlPanel.ControlPanel
instance GHC.Show.Show Amazonka.Route53RecoveryControlConfig.Types.ControlPanel.ControlPanel
instance GHC.Read.Read Amazonka.Route53RecoveryControlConfig.Types.ControlPanel.ControlPanel
instance GHC.Classes.Eq Amazonka.Route53RecoveryControlConfig.Types.ControlPanel.ControlPanel
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Route53RecoveryControlConfig.Types.ControlPanel.ControlPanel
instance Data.Hashable.Class.Hashable Amazonka.Route53RecoveryControlConfig.Types.ControlPanel.ControlPanel
instance Control.DeepSeq.NFData Amazonka.Route53RecoveryControlConfig.Types.ControlPanel.ControlPanel


module Amazonka.Route53RecoveryControlConfig.Types.Cluster

-- | A cluster is a set of five consensus-forming Regional endpoints that
--   represent the infrastructure that hosts your routing controls.
--   Typically, you host together on one cluster all of the routing
--   controls for your applications.
--   
--   <i>See:</i> <a>newCluster</a> smart constructor.
data Cluster
Cluster' :: Maybe Status -> Maybe Text -> Maybe Text -> Maybe [ClusterEndpoint] -> Cluster

-- | Deployment status of a resource. Status can be one of the following:
--   PENDING, DEPLOYED, PENDING_DELETION.
[$sel:status:Cluster'] :: Cluster -> Maybe Status

-- | The Amazon Resource Name (ARN) of the cluster.
[$sel:clusterArn:Cluster'] :: Cluster -> Maybe Text

-- | The name of the cluster.
[$sel:name:Cluster'] :: Cluster -> Maybe Text

-- | Endpoints for a cluster. Specify one of these endpoints when you want
--   to set or retrieve a routing control state in the cluster.
--   
--   To get or update the routing control state, see the Amazon Route 53
--   Application Recovery Controller Cluster (Data Plane) Actions.
[$sel:clusterEndpoints:Cluster'] :: Cluster -> Maybe [ClusterEndpoint]

-- | Create a value of <a>Cluster</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:Cluster'</a>, <a>cluster_status</a> - Deployment status
--   of a resource. Status can be one of the following: PENDING, DEPLOYED,
--   PENDING_DELETION.
--   
--   <a>$sel:clusterArn:Cluster'</a>, <a>cluster_clusterArn</a> - The
--   Amazon Resource Name (ARN) of the cluster.
--   
--   <a>$sel:name:Cluster'</a>, <a>cluster_name</a> - The name of the
--   cluster.
--   
--   <a>$sel:clusterEndpoints:Cluster'</a>, <a>cluster_clusterEndpoints</a>
--   - Endpoints for a cluster. Specify one of these endpoints when you
--   want to set or retrieve a routing control state in the cluster.
--   
--   To get or update the routing control state, see the Amazon Route 53
--   Application Recovery Controller Cluster (Data Plane) Actions.
newCluster :: Cluster

-- | Deployment status of a resource. Status can be one of the following:
--   PENDING, DEPLOYED, PENDING_DELETION.
cluster_status :: Lens' Cluster (Maybe Status)

-- | The Amazon Resource Name (ARN) of the cluster.
cluster_clusterArn :: Lens' Cluster (Maybe Text)

-- | The name of the cluster.
cluster_name :: Lens' Cluster (Maybe Text)

-- | Endpoints for a cluster. Specify one of these endpoints when you want
--   to set or retrieve a routing control state in the cluster.
--   
--   To get or update the routing control state, see the Amazon Route 53
--   Application Recovery Controller Cluster (Data Plane) Actions.
cluster_clusterEndpoints :: Lens' Cluster (Maybe [ClusterEndpoint])
instance GHC.Generics.Generic Amazonka.Route53RecoveryControlConfig.Types.Cluster.Cluster
instance GHC.Show.Show Amazonka.Route53RecoveryControlConfig.Types.Cluster.Cluster
instance GHC.Read.Read Amazonka.Route53RecoveryControlConfig.Types.Cluster.Cluster
instance GHC.Classes.Eq Amazonka.Route53RecoveryControlConfig.Types.Cluster.Cluster
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Route53RecoveryControlConfig.Types.Cluster.Cluster
instance Data.Hashable.Class.Hashable Amazonka.Route53RecoveryControlConfig.Types.Cluster.Cluster
instance Control.DeepSeq.NFData Amazonka.Route53RecoveryControlConfig.Types.Cluster.Cluster


module Amazonka.Route53RecoveryControlConfig.Types.AssertionRule

-- | An assertion rule enforces that, when a routing control state is
--   changed, the criteria set by the rule configuration is met. Otherwise,
--   the change to the routing control is not accepted.
--   
--   <i>See:</i> <a>newAssertionRule</a> smart constructor.
data AssertionRule
AssertionRule' :: Status -> Text -> Text -> [Text] -> RuleConfig -> Int -> Text -> AssertionRule

-- | The deployment status of an assertion rule. Status can be one of the
--   following: PENDING, DEPLOYED, PENDING_DELETION.
[$sel:status:AssertionRule'] :: AssertionRule -> Status

-- | The Amazon Resource Name (ARN) of the control panel.
[$sel:controlPanelArn:AssertionRule'] :: AssertionRule -> Text

-- | The Amazon Resource Name (ARN) of the assertion rule.
[$sel:safetyRuleArn:AssertionRule'] :: AssertionRule -> Text

-- | The routing controls that are part of transactions that are evaluated
--   to determine if a request to change a routing control state is
--   allowed. For example, you might include three routing controls, one
--   for each of three Amazon Web Services Regions.
[$sel:assertedControls:AssertionRule'] :: AssertionRule -> [Text]

-- | The criteria that you set for specific assertion controls (routing
--   controls) that designate how many controls must be enabled as the
--   result of a transaction. For example, if you have three assertion
--   controls, you might specify atleast 2 for your rule configuration.
--   This means that at least two assertion controls must be enabled, so
--   that at least two Amazon Web Services Regions are enabled.
[$sel:ruleConfig:AssertionRule'] :: AssertionRule -> RuleConfig

-- | An evaluation period, in milliseconds (ms), during which any request
--   against the target routing controls will fail. This helps prevent
--   "flapping" of state. The wait period is 5000 ms by default, but you
--   can choose a custom value.
[$sel:waitPeriodMs:AssertionRule'] :: AssertionRule -> Int

-- | Name of the assertion rule. You can use any non-white space character
--   in the name.
[$sel:name:AssertionRule'] :: AssertionRule -> Text

-- | Create a value of <a>AssertionRule</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:AssertionRule'</a>, <a>assertionRule_status</a> - The
--   deployment status of an assertion rule. Status can be one of the
--   following: PENDING, DEPLOYED, PENDING_DELETION.
--   
--   <a>$sel:controlPanelArn:AssertionRule'</a>,
--   <a>assertionRule_controlPanelArn</a> - The Amazon Resource Name (ARN)
--   of the control panel.
--   
--   <a>$sel:safetyRuleArn:AssertionRule'</a>,
--   <a>assertionRule_safetyRuleArn</a> - The Amazon Resource Name (ARN) of
--   the assertion rule.
--   
--   <a>$sel:assertedControls:AssertionRule'</a>,
--   <a>assertionRule_assertedControls</a> - The routing controls that are
--   part of transactions that are evaluated to determine if a request to
--   change a routing control state is allowed. For example, you might
--   include three routing controls, one for each of three Amazon Web
--   Services Regions.
--   
--   <a>$sel:ruleConfig:AssertionRule'</a>, <a>assertionRule_ruleConfig</a>
--   - The criteria that you set for specific assertion controls (routing
--   controls) that designate how many controls must be enabled as the
--   result of a transaction. For example, if you have three assertion
--   controls, you might specify atleast 2 for your rule configuration.
--   This means that at least two assertion controls must be enabled, so
--   that at least two Amazon Web Services Regions are enabled.
--   
--   <a>$sel:waitPeriodMs:AssertionRule'</a>,
--   <a>assertionRule_waitPeriodMs</a> - An evaluation period, in
--   milliseconds (ms), during which any request against the target routing
--   controls will fail. This helps prevent "flapping" of state. The wait
--   period is 5000 ms by default, but you can choose a custom value.
--   
--   <a>$sel:name:AssertionRule'</a>, <a>assertionRule_name</a> - Name of
--   the assertion rule. You can use any non-white space character in the
--   name.
newAssertionRule :: Status -> Text -> Text -> RuleConfig -> Int -> Text -> AssertionRule

-- | The deployment status of an assertion rule. Status can be one of the
--   following: PENDING, DEPLOYED, PENDING_DELETION.
assertionRule_status :: Lens' AssertionRule Status

-- | The Amazon Resource Name (ARN) of the control panel.
assertionRule_controlPanelArn :: Lens' AssertionRule Text

-- | The Amazon Resource Name (ARN) of the assertion rule.
assertionRule_safetyRuleArn :: Lens' AssertionRule Text

-- | The routing controls that are part of transactions that are evaluated
--   to determine if a request to change a routing control state is
--   allowed. For example, you might include three routing controls, one
--   for each of three Amazon Web Services Regions.
assertionRule_assertedControls :: Lens' AssertionRule [Text]

-- | The criteria that you set for specific assertion controls (routing
--   controls) that designate how many controls must be enabled as the
--   result of a transaction. For example, if you have three assertion
--   controls, you might specify atleast 2 for your rule configuration.
--   This means that at least two assertion controls must be enabled, so
--   that at least two Amazon Web Services Regions are enabled.
assertionRule_ruleConfig :: Lens' AssertionRule RuleConfig

-- | An evaluation period, in milliseconds (ms), during which any request
--   against the target routing controls will fail. This helps prevent
--   "flapping" of state. The wait period is 5000 ms by default, but you
--   can choose a custom value.
assertionRule_waitPeriodMs :: Lens' AssertionRule Int

-- | Name of the assertion rule. You can use any non-white space character
--   in the name.
assertionRule_name :: Lens' AssertionRule Text
instance GHC.Generics.Generic Amazonka.Route53RecoveryControlConfig.Types.AssertionRule.AssertionRule
instance GHC.Show.Show Amazonka.Route53RecoveryControlConfig.Types.AssertionRule.AssertionRule
instance GHC.Read.Read Amazonka.Route53RecoveryControlConfig.Types.AssertionRule.AssertionRule
instance GHC.Classes.Eq Amazonka.Route53RecoveryControlConfig.Types.AssertionRule.AssertionRule
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Route53RecoveryControlConfig.Types.AssertionRule.AssertionRule
instance Data.Hashable.Class.Hashable Amazonka.Route53RecoveryControlConfig.Types.AssertionRule.AssertionRule
instance Control.DeepSeq.NFData Amazonka.Route53RecoveryControlConfig.Types.AssertionRule.AssertionRule


module Amazonka.Route53RecoveryControlConfig.Types.Rule

-- | A safety rule. A safety rule can be an assertion rule or a gating
--   rule.
--   
--   <i>See:</i> <a>newRule</a> smart constructor.
data Rule
Rule' :: Maybe GatingRule -> Maybe AssertionRule -> Rule

-- | A gating rule verifies that a set of gating controls evaluates as
--   true, based on a rule configuration that you specify. If the gating
--   rule evaluates to true, Amazon Route 53 Application Recovery
--   Controller allows a set of routing control state changes to run and
--   complete against the set of target controls.
[$sel:gating:Rule'] :: Rule -> Maybe GatingRule

-- | An assertion rule enforces that, when a routing control state is
--   changed, the criteria set by the rule configuration is met. Otherwise,
--   the change to the routing control is not accepted.
[$sel:assertion:Rule'] :: Rule -> Maybe AssertionRule

-- | Create a value of <a>Rule</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:gating:Rule'</a>, <a>rule_gating</a> - A gating rule verifies
--   that a set of gating controls evaluates as true, based on a rule
--   configuration that you specify. If the gating rule evaluates to true,
--   Amazon Route 53 Application Recovery Controller allows a set of
--   routing control state changes to run and complete against the set of
--   target controls.
--   
--   <a>$sel:assertion:Rule'</a>, <a>rule_assertion</a> - An assertion rule
--   enforces that, when a routing control state is changed, the criteria
--   set by the rule configuration is met. Otherwise, the change to the
--   routing control is not accepted.
newRule :: Rule

-- | A gating rule verifies that a set of gating controls evaluates as
--   true, based on a rule configuration that you specify. If the gating
--   rule evaluates to true, Amazon Route 53 Application Recovery
--   Controller allows a set of routing control state changes to run and
--   complete against the set of target controls.
rule_gating :: Lens' Rule (Maybe GatingRule)

-- | An assertion rule enforces that, when a routing control state is
--   changed, the criteria set by the rule configuration is met. Otherwise,
--   the change to the routing control is not accepted.
rule_assertion :: Lens' Rule (Maybe AssertionRule)
instance GHC.Generics.Generic Amazonka.Route53RecoveryControlConfig.Types.Rule.Rule
instance GHC.Show.Show Amazonka.Route53RecoveryControlConfig.Types.Rule.Rule
instance GHC.Read.Read Amazonka.Route53RecoveryControlConfig.Types.Rule.Rule
instance GHC.Classes.Eq Amazonka.Route53RecoveryControlConfig.Types.Rule.Rule
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Route53RecoveryControlConfig.Types.Rule.Rule
instance Data.Hashable.Class.Hashable Amazonka.Route53RecoveryControlConfig.Types.Rule.Rule
instance Control.DeepSeq.NFData Amazonka.Route53RecoveryControlConfig.Types.Rule.Rule


module Amazonka.Route53RecoveryControlConfig.Types

-- | API version <tt>2020-11-02</tt> of the Amazon Route53 Recovery Control
--   Config SDK configuration.
defaultService :: Service

-- | 400 response - Multiple causes. For example, you might have a
--   malformed query string and input parameter might be out of range, or
--   you used parameters together incorrectly.
_ValidationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | 403 response - AccessDeniedException. You do not have sufficient
--   access to perform this action.
_AccessDeniedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | 409 response - ConflictException.
_ConflictException :: AsError a => Getting (First ServiceError) a ServiceError

-- | 402 response
_ServiceQuotaExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | 429 response - ThrottlingException.
_ThrottlingException :: AsError a => Getting (First ServiceError) a ServiceError

-- | 500 response - InternalServiceError. Temporary service error. Retry
--   the request.
_InternalServerException :: AsError a => Getting (First ServiceError) a ServiceError

-- | 404 response - The query string contains a syntax error or resource
--   not found.
_ResourceNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | An enumerated type that determines how the evaluated rules are
--   processed. RuleType can be one of the following:
--   
--   ATLEAST - At least N routing controls must be set. You specify N as
--   the Threshold in the rule configuration.
--   
--   AND - All routing controls must be set. This is a shortcut for "At
--   least N," where N is the total number of controls in the rule.
--   
--   OR - Any control must be set. This is a shortcut for "At least N,"
--   where N is 1.
newtype RuleType
RuleType' :: Text -> RuleType
[fromRuleType] :: RuleType -> Text
pattern RuleType_AND :: RuleType
pattern RuleType_ATLEAST :: RuleType
pattern RuleType_OR :: RuleType

-- | The deployment status of a resource. Status can be one of the
--   following:
--   
--   PENDING: Amazon Route 53 Application Recovery Controller is creating
--   the resource.
--   
--   DEPLOYED: The resource is deployed and ready to use.
--   
--   PENDING_DELETION: Amazon Route 53 Application Recovery Controller is
--   deleting the resource.
newtype Status
Status' :: Text -> Status
[fromStatus] :: Status -> Text
pattern Status_DEPLOYED :: Status
pattern Status_PENDING :: Status
pattern Status_PENDING_DELETION :: Status

-- | An assertion rule enforces that, when a routing control state is
--   changed, the criteria set by the rule configuration is met. Otherwise,
--   the change to the routing control is not accepted.
--   
--   <i>See:</i> <a>newAssertionRule</a> smart constructor.
data AssertionRule
AssertionRule' :: Status -> Text -> Text -> [Text] -> RuleConfig -> Int -> Text -> AssertionRule

-- | The deployment status of an assertion rule. Status can be one of the
--   following: PENDING, DEPLOYED, PENDING_DELETION.
[$sel:status:AssertionRule'] :: AssertionRule -> Status

-- | The Amazon Resource Name (ARN) of the control panel.
[$sel:controlPanelArn:AssertionRule'] :: AssertionRule -> Text

-- | The Amazon Resource Name (ARN) of the assertion rule.
[$sel:safetyRuleArn:AssertionRule'] :: AssertionRule -> Text

-- | The routing controls that are part of transactions that are evaluated
--   to determine if a request to change a routing control state is
--   allowed. For example, you might include three routing controls, one
--   for each of three Amazon Web Services Regions.
[$sel:assertedControls:AssertionRule'] :: AssertionRule -> [Text]

-- | The criteria that you set for specific assertion controls (routing
--   controls) that designate how many controls must be enabled as the
--   result of a transaction. For example, if you have three assertion
--   controls, you might specify atleast 2 for your rule configuration.
--   This means that at least two assertion controls must be enabled, so
--   that at least two Amazon Web Services Regions are enabled.
[$sel:ruleConfig:AssertionRule'] :: AssertionRule -> RuleConfig

-- | An evaluation period, in milliseconds (ms), during which any request
--   against the target routing controls will fail. This helps prevent
--   "flapping" of state. The wait period is 5000 ms by default, but you
--   can choose a custom value.
[$sel:waitPeriodMs:AssertionRule'] :: AssertionRule -> Int

-- | Name of the assertion rule. You can use any non-white space character
--   in the name.
[$sel:name:AssertionRule'] :: AssertionRule -> Text

-- | Create a value of <a>AssertionRule</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:AssertionRule'</a>, <a>assertionRule_status</a> - The
--   deployment status of an assertion rule. Status can be one of the
--   following: PENDING, DEPLOYED, PENDING_DELETION.
--   
--   <a>$sel:controlPanelArn:AssertionRule'</a>,
--   <a>assertionRule_controlPanelArn</a> - The Amazon Resource Name (ARN)
--   of the control panel.
--   
--   <a>$sel:safetyRuleArn:AssertionRule'</a>,
--   <a>assertionRule_safetyRuleArn</a> - The Amazon Resource Name (ARN) of
--   the assertion rule.
--   
--   <a>$sel:assertedControls:AssertionRule'</a>,
--   <a>assertionRule_assertedControls</a> - The routing controls that are
--   part of transactions that are evaluated to determine if a request to
--   change a routing control state is allowed. For example, you might
--   include three routing controls, one for each of three Amazon Web
--   Services Regions.
--   
--   <a>$sel:ruleConfig:AssertionRule'</a>, <a>assertionRule_ruleConfig</a>
--   - The criteria that you set for specific assertion controls (routing
--   controls) that designate how many controls must be enabled as the
--   result of a transaction. For example, if you have three assertion
--   controls, you might specify atleast 2 for your rule configuration.
--   This means that at least two assertion controls must be enabled, so
--   that at least two Amazon Web Services Regions are enabled.
--   
--   <a>$sel:waitPeriodMs:AssertionRule'</a>,
--   <a>assertionRule_waitPeriodMs</a> - An evaluation period, in
--   milliseconds (ms), during which any request against the target routing
--   controls will fail. This helps prevent "flapping" of state. The wait
--   period is 5000 ms by default, but you can choose a custom value.
--   
--   <a>$sel:name:AssertionRule'</a>, <a>assertionRule_name</a> - Name of
--   the assertion rule. You can use any non-white space character in the
--   name.
newAssertionRule :: Status -> Text -> Text -> RuleConfig -> Int -> Text -> AssertionRule

-- | The deployment status of an assertion rule. Status can be one of the
--   following: PENDING, DEPLOYED, PENDING_DELETION.
assertionRule_status :: Lens' AssertionRule Status

-- | The Amazon Resource Name (ARN) of the control panel.
assertionRule_controlPanelArn :: Lens' AssertionRule Text

-- | The Amazon Resource Name (ARN) of the assertion rule.
assertionRule_safetyRuleArn :: Lens' AssertionRule Text

-- | The routing controls that are part of transactions that are evaluated
--   to determine if a request to change a routing control state is
--   allowed. For example, you might include three routing controls, one
--   for each of three Amazon Web Services Regions.
assertionRule_assertedControls :: Lens' AssertionRule [Text]

-- | The criteria that you set for specific assertion controls (routing
--   controls) that designate how many controls must be enabled as the
--   result of a transaction. For example, if you have three assertion
--   controls, you might specify atleast 2 for your rule configuration.
--   This means that at least two assertion controls must be enabled, so
--   that at least two Amazon Web Services Regions are enabled.
assertionRule_ruleConfig :: Lens' AssertionRule RuleConfig

-- | An evaluation period, in milliseconds (ms), during which any request
--   against the target routing controls will fail. This helps prevent
--   "flapping" of state. The wait period is 5000 ms by default, but you
--   can choose a custom value.
assertionRule_waitPeriodMs :: Lens' AssertionRule Int

-- | Name of the assertion rule. You can use any non-white space character
--   in the name.
assertionRule_name :: Lens' AssertionRule Text

-- | An update to an assertion rule. You can update the name or the
--   evaluation period (wait period). If you don't specify one of the items
--   to update, the item is unchanged.
--   
--   <i>See:</i> <a>newAssertionRuleUpdate</a> smart constructor.
data AssertionRuleUpdate
AssertionRuleUpdate' :: Text -> Int -> Text -> AssertionRuleUpdate

-- | The Amazon Resource Name (ARN) of the assertion rule.
[$sel:safetyRuleArn:AssertionRuleUpdate'] :: AssertionRuleUpdate -> Text

-- | An evaluation period, in milliseconds (ms), during which any request
--   against the target routing controls will fail. This helps prevent
--   "flapping" of state. The wait period is 5000 ms by default, but you
--   can choose a custom value.
[$sel:waitPeriodMs:AssertionRuleUpdate'] :: AssertionRuleUpdate -> Int

-- | The name of the assertion rule. You can use any non-white space
--   character in the name.
[$sel:name:AssertionRuleUpdate'] :: AssertionRuleUpdate -> Text

-- | Create a value of <a>AssertionRuleUpdate</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:safetyRuleArn:AssertionRuleUpdate'</a>,
--   <a>assertionRuleUpdate_safetyRuleArn</a> - The Amazon Resource Name
--   (ARN) of the assertion rule.
--   
--   <a>$sel:waitPeriodMs:AssertionRuleUpdate'</a>,
--   <a>assertionRuleUpdate_waitPeriodMs</a> - An evaluation period, in
--   milliseconds (ms), during which any request against the target routing
--   controls will fail. This helps prevent "flapping" of state. The wait
--   period is 5000 ms by default, but you can choose a custom value.
--   
--   <a>$sel:name:AssertionRuleUpdate'</a>, <a>assertionRuleUpdate_name</a>
--   - The name of the assertion rule. You can use any non-white space
--   character in the name.
newAssertionRuleUpdate :: Text -> Int -> Text -> AssertionRuleUpdate

-- | The Amazon Resource Name (ARN) of the assertion rule.
assertionRuleUpdate_safetyRuleArn :: Lens' AssertionRuleUpdate Text

-- | An evaluation period, in milliseconds (ms), during which any request
--   against the target routing controls will fail. This helps prevent
--   "flapping" of state. The wait period is 5000 ms by default, but you
--   can choose a custom value.
assertionRuleUpdate_waitPeriodMs :: Lens' AssertionRuleUpdate Int

-- | The name of the assertion rule. You can use any non-white space
--   character in the name.
assertionRuleUpdate_name :: Lens' AssertionRuleUpdate Text

-- | A cluster is a set of five consensus-forming Regional endpoints that
--   represent the infrastructure that hosts your routing controls.
--   Typically, you host together on one cluster all of the routing
--   controls for your applications.
--   
--   <i>See:</i> <a>newCluster</a> smart constructor.
data Cluster
Cluster' :: Maybe Status -> Maybe Text -> Maybe Text -> Maybe [ClusterEndpoint] -> Cluster

-- | Deployment status of a resource. Status can be one of the following:
--   PENDING, DEPLOYED, PENDING_DELETION.
[$sel:status:Cluster'] :: Cluster -> Maybe Status

-- | The Amazon Resource Name (ARN) of the cluster.
[$sel:clusterArn:Cluster'] :: Cluster -> Maybe Text

-- | The name of the cluster.
[$sel:name:Cluster'] :: Cluster -> Maybe Text

-- | Endpoints for a cluster. Specify one of these endpoints when you want
--   to set or retrieve a routing control state in the cluster.
--   
--   To get or update the routing control state, see the Amazon Route 53
--   Application Recovery Controller Cluster (Data Plane) Actions.
[$sel:clusterEndpoints:Cluster'] :: Cluster -> Maybe [ClusterEndpoint]

-- | Create a value of <a>Cluster</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:Cluster'</a>, <a>cluster_status</a> - Deployment status
--   of a resource. Status can be one of the following: PENDING, DEPLOYED,
--   PENDING_DELETION.
--   
--   <a>$sel:clusterArn:Cluster'</a>, <a>cluster_clusterArn</a> - The
--   Amazon Resource Name (ARN) of the cluster.
--   
--   <a>$sel:name:Cluster'</a>, <a>cluster_name</a> - The name of the
--   cluster.
--   
--   <a>$sel:clusterEndpoints:Cluster'</a>, <a>cluster_clusterEndpoints</a>
--   - Endpoints for a cluster. Specify one of these endpoints when you
--   want to set or retrieve a routing control state in the cluster.
--   
--   To get or update the routing control state, see the Amazon Route 53
--   Application Recovery Controller Cluster (Data Plane) Actions.
newCluster :: Cluster

-- | Deployment status of a resource. Status can be one of the following:
--   PENDING, DEPLOYED, PENDING_DELETION.
cluster_status :: Lens' Cluster (Maybe Status)

-- | The Amazon Resource Name (ARN) of the cluster.
cluster_clusterArn :: Lens' Cluster (Maybe Text)

-- | The name of the cluster.
cluster_name :: Lens' Cluster (Maybe Text)

-- | Endpoints for a cluster. Specify one of these endpoints when you want
--   to set or retrieve a routing control state in the cluster.
--   
--   To get or update the routing control state, see the Amazon Route 53
--   Application Recovery Controller Cluster (Data Plane) Actions.
cluster_clusterEndpoints :: Lens' Cluster (Maybe [ClusterEndpoint])

-- | A cluster endpoint. Specify an endpoint when you want to set or
--   retrieve a routing control state in the cluster.
--   
--   <i>See:</i> <a>newClusterEndpoint</a> smart constructor.
data ClusterEndpoint
ClusterEndpoint' :: Maybe Text -> Maybe Text -> ClusterEndpoint

-- | The Amazon Web Services Region for a cluster endpoint.
[$sel:region:ClusterEndpoint'] :: ClusterEndpoint -> Maybe Text

-- | A cluster endpoint. Specify an endpoint and Amazon Web Services Region
--   when you want to set or retrieve a routing control state in the
--   cluster.
--   
--   To get or update the routing control state, see the Amazon Route 53
--   Application Recovery Controller Cluster (Data Plane) Actions.
[$sel:endpoint:ClusterEndpoint'] :: ClusterEndpoint -> Maybe Text

-- | Create a value of <a>ClusterEndpoint</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:region:ClusterEndpoint'</a>, <a>clusterEndpoint_region</a> -
--   The Amazon Web Services Region for a cluster endpoint.
--   
--   <a>$sel:endpoint:ClusterEndpoint'</a>, <a>clusterEndpoint_endpoint</a>
--   - A cluster endpoint. Specify an endpoint and Amazon Web Services
--   Region when you want to set or retrieve a routing control state in the
--   cluster.
--   
--   To get or update the routing control state, see the Amazon Route 53
--   Application Recovery Controller Cluster (Data Plane) Actions.
newClusterEndpoint :: ClusterEndpoint

-- | The Amazon Web Services Region for a cluster endpoint.
clusterEndpoint_region :: Lens' ClusterEndpoint (Maybe Text)

-- | A cluster endpoint. Specify an endpoint and Amazon Web Services Region
--   when you want to set or retrieve a routing control state in the
--   cluster.
--   
--   To get or update the routing control state, see the Amazon Route 53
--   Application Recovery Controller Cluster (Data Plane) Actions.
clusterEndpoint_endpoint :: Lens' ClusterEndpoint (Maybe Text)

-- | A control panel represents a group of routing controls that can be
--   changed together in a single transaction.
--   
--   <i>See:</i> <a>newControlPanel</a> smart constructor.
data ControlPanel
ControlPanel' :: Maybe Status -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe Bool -> ControlPanel

-- | The deployment status of control panel. Status can be one of the
--   following: PENDING, DEPLOYED, PENDING_DELETION.
[$sel:status:ControlPanel'] :: ControlPanel -> Maybe Status

-- | The Amazon Resource Name (ARN) of the control panel.
[$sel:controlPanelArn:ControlPanel'] :: ControlPanel -> Maybe Text

-- | The Amazon Resource Name (ARN) of the cluster that includes the
--   control panel.
[$sel:clusterArn:ControlPanel'] :: ControlPanel -> Maybe Text

-- | The number of routing controls in the control panel.
[$sel:routingControlCount:ControlPanel'] :: ControlPanel -> Maybe Int

-- | The name of the control panel. You can use any non-white space
--   character in the name.
[$sel:name:ControlPanel'] :: ControlPanel -> Maybe Text

-- | A flag that Amazon Route 53 Application Recovery Controller sets to
--   true to designate the default control panel for a cluster. When you
--   create a cluster, Amazon Route 53 Application Recovery Controller
--   creates a control panel, and sets this flag for that control panel. If
--   you create a control panel yourself, this flag is set to false.
[$sel:defaultControlPanel:ControlPanel'] :: ControlPanel -> Maybe Bool

-- | Create a value of <a>ControlPanel</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:ControlPanel'</a>, <a>controlPanel_status</a> - The
--   deployment status of control panel. Status can be one of the
--   following: PENDING, DEPLOYED, PENDING_DELETION.
--   
--   <a>$sel:controlPanelArn:ControlPanel'</a>,
--   <a>controlPanel_controlPanelArn</a> - The Amazon Resource Name (ARN)
--   of the control panel.
--   
--   <a>$sel:clusterArn:ControlPanel'</a>, <a>controlPanel_clusterArn</a> -
--   The Amazon Resource Name (ARN) of the cluster that includes the
--   control panel.
--   
--   <a>$sel:routingControlCount:ControlPanel'</a>,
--   <a>controlPanel_routingControlCount</a> - The number of routing
--   controls in the control panel.
--   
--   <a>$sel:name:ControlPanel'</a>, <a>controlPanel_name</a> - The name of
--   the control panel. You can use any non-white space character in the
--   name.
--   
--   <a>$sel:defaultControlPanel:ControlPanel'</a>,
--   <a>controlPanel_defaultControlPanel</a> - A flag that Amazon Route 53
--   Application Recovery Controller sets to true to designate the default
--   control panel for a cluster. When you create a cluster, Amazon Route
--   53 Application Recovery Controller creates a control panel, and sets
--   this flag for that control panel. If you create a control panel
--   yourself, this flag is set to false.
newControlPanel :: ControlPanel

-- | The deployment status of control panel. Status can be one of the
--   following: PENDING, DEPLOYED, PENDING_DELETION.
controlPanel_status :: Lens' ControlPanel (Maybe Status)

-- | The Amazon Resource Name (ARN) of the control panel.
controlPanel_controlPanelArn :: Lens' ControlPanel (Maybe Text)

-- | The Amazon Resource Name (ARN) of the cluster that includes the
--   control panel.
controlPanel_clusterArn :: Lens' ControlPanel (Maybe Text)

-- | The number of routing controls in the control panel.
controlPanel_routingControlCount :: Lens' ControlPanel (Maybe Int)

-- | The name of the control panel. You can use any non-white space
--   character in the name.
controlPanel_name :: Lens' ControlPanel (Maybe Text)

-- | A flag that Amazon Route 53 Application Recovery Controller sets to
--   true to designate the default control panel for a cluster. When you
--   create a cluster, Amazon Route 53 Application Recovery Controller
--   creates a control panel, and sets this flag for that control panel. If
--   you create a control panel yourself, this flag is set to false.
controlPanel_defaultControlPanel :: Lens' ControlPanel (Maybe Bool)

-- | A gating rule verifies that a set of gating controls evaluates as
--   true, based on a rule configuration that you specify. If the gating
--   rule evaluates to true, Amazon Route 53 Application Recovery
--   Controller allows a set of routing control state changes to run and
--   complete against the set of target controls.
--   
--   <i>See:</i> <a>newGatingRule</a> smart constructor.
data GatingRule
GatingRule' :: Status -> [Text] -> Text -> Text -> [Text] -> RuleConfig -> Int -> Text -> GatingRule

-- | The deployment status of a gating rule. Status can be one of the
--   following: PENDING, DEPLOYED, PENDING_DELETION.
[$sel:status:GatingRule'] :: GatingRule -> Status

-- | Routing controls that can only be set or unset if the specified
--   RuleConfig evaluates to true for the specified GatingControls. For
--   example, say you have three gating controls, one for each of three
--   Amazon Web Services Regions. Now you specify ATLEAST 2 as your
--   RuleConfig. With these settings, you can only change (set or unset)
--   the routing controls that you have specified as TargetControls if that
--   rule evaluates to true.
--   
--   In other words, your ability to change the routing controls that you
--   have specified as TargetControls is gated by the rule that you set for
--   the routing controls in GatingControls.
[$sel:targetControls:GatingRule'] :: GatingRule -> [Text]

-- | The Amazon Resource Name (ARN) of the control panel.
[$sel:controlPanelArn:GatingRule'] :: GatingRule -> Text

-- | The Amazon Resource Name (ARN) of the gating rule.
[$sel:safetyRuleArn:GatingRule'] :: GatingRule -> Text

-- | The gating controls for the gating rule. That is, routing controls
--   that are evaluated by the rule configuration that you specify.
[$sel:gatingControls:GatingRule'] :: GatingRule -> [Text]

-- | The criteria that you set for specific gating controls (routing
--   controls) that designates how many controls must be enabled to allow
--   you to change (set or unset) the target controls.
[$sel:ruleConfig:GatingRule'] :: GatingRule -> RuleConfig

-- | An evaluation period, in milliseconds (ms), during which any request
--   against the target routing controls will fail. This helps prevent
--   "flapping" of state. The wait period is 5000 ms by default, but you
--   can choose a custom value.
[$sel:waitPeriodMs:GatingRule'] :: GatingRule -> Int

-- | The name for the gating rule.
[$sel:name:GatingRule'] :: GatingRule -> Text

-- | Create a value of <a>GatingRule</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:GatingRule'</a>, <a>gatingRule_status</a> - The
--   deployment status of a gating rule. Status can be one of the
--   following: PENDING, DEPLOYED, PENDING_DELETION.
--   
--   <a>$sel:targetControls:GatingRule'</a>,
--   <a>gatingRule_targetControls</a> - Routing controls that can only be
--   set or unset if the specified RuleConfig evaluates to true for the
--   specified GatingControls. For example, say you have three gating
--   controls, one for each of three Amazon Web Services Regions. Now you
--   specify ATLEAST 2 as your RuleConfig. With these settings, you can
--   only change (set or unset) the routing controls that you have
--   specified as TargetControls if that rule evaluates to true.
--   
--   In other words, your ability to change the routing controls that you
--   have specified as TargetControls is gated by the rule that you set for
--   the routing controls in GatingControls.
--   
--   <a>$sel:controlPanelArn:GatingRule'</a>,
--   <a>gatingRule_controlPanelArn</a> - The Amazon Resource Name (ARN) of
--   the control panel.
--   
--   <a>$sel:safetyRuleArn:GatingRule'</a>, <a>gatingRule_safetyRuleArn</a>
--   - The Amazon Resource Name (ARN) of the gating rule.
--   
--   <a>$sel:gatingControls:GatingRule'</a>,
--   <a>gatingRule_gatingControls</a> - The gating controls for the gating
--   rule. That is, routing controls that are evaluated by the rule
--   configuration that you specify.
--   
--   <a>$sel:ruleConfig:GatingRule'</a>, <a>gatingRule_ruleConfig</a> - The
--   criteria that you set for specific gating controls (routing controls)
--   that designates how many controls must be enabled to allow you to
--   change (set or unset) the target controls.
--   
--   <a>$sel:waitPeriodMs:GatingRule'</a>, <a>gatingRule_waitPeriodMs</a> -
--   An evaluation period, in milliseconds (ms), during which any request
--   against the target routing controls will fail. This helps prevent
--   "flapping" of state. The wait period is 5000 ms by default, but you
--   can choose a custom value.
--   
--   <a>$sel:name:GatingRule'</a>, <a>gatingRule_name</a> - The name for
--   the gating rule.
newGatingRule :: Status -> Text -> Text -> RuleConfig -> Int -> Text -> GatingRule

-- | The deployment status of a gating rule. Status can be one of the
--   following: PENDING, DEPLOYED, PENDING_DELETION.
gatingRule_status :: Lens' GatingRule Status

-- | Routing controls that can only be set or unset if the specified
--   RuleConfig evaluates to true for the specified GatingControls. For
--   example, say you have three gating controls, one for each of three
--   Amazon Web Services Regions. Now you specify ATLEAST 2 as your
--   RuleConfig. With these settings, you can only change (set or unset)
--   the routing controls that you have specified as TargetControls if that
--   rule evaluates to true.
--   
--   In other words, your ability to change the routing controls that you
--   have specified as TargetControls is gated by the rule that you set for
--   the routing controls in GatingControls.
gatingRule_targetControls :: Lens' GatingRule [Text]

-- | The Amazon Resource Name (ARN) of the control panel.
gatingRule_controlPanelArn :: Lens' GatingRule Text

-- | The Amazon Resource Name (ARN) of the gating rule.
gatingRule_safetyRuleArn :: Lens' GatingRule Text

-- | The gating controls for the gating rule. That is, routing controls
--   that are evaluated by the rule configuration that you specify.
gatingRule_gatingControls :: Lens' GatingRule [Text]

-- | The criteria that you set for specific gating controls (routing
--   controls) that designates how many controls must be enabled to allow
--   you to change (set or unset) the target controls.
gatingRule_ruleConfig :: Lens' GatingRule RuleConfig

-- | An evaluation period, in milliseconds (ms), during which any request
--   against the target routing controls will fail. This helps prevent
--   "flapping" of state. The wait period is 5000 ms by default, but you
--   can choose a custom value.
gatingRule_waitPeriodMs :: Lens' GatingRule Int

-- | The name for the gating rule.
gatingRule_name :: Lens' GatingRule Text

-- | Update to a gating rule. You can update the name or the evaluation
--   period (wait period). If you don't specify one of the items to update,
--   the item is unchanged.
--   
--   <i>See:</i> <a>newGatingRuleUpdate</a> smart constructor.
data GatingRuleUpdate
GatingRuleUpdate' :: Text -> Int -> Text -> GatingRuleUpdate

-- | The Amazon Resource Name (ARN) of the gating rule.
[$sel:safetyRuleArn:GatingRuleUpdate'] :: GatingRuleUpdate -> Text

-- | An evaluation period, in milliseconds (ms), during which any request
--   against the target routing controls will fail. This helps prevent
--   "flapping" of state. The wait period is 5000 ms by default, but you
--   can choose a custom value.
[$sel:waitPeriodMs:GatingRuleUpdate'] :: GatingRuleUpdate -> Int

-- | The name for the gating rule.
[$sel:name:GatingRuleUpdate'] :: GatingRuleUpdate -> Text

-- | Create a value of <a>GatingRuleUpdate</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:safetyRuleArn:GatingRuleUpdate'</a>,
--   <a>gatingRuleUpdate_safetyRuleArn</a> - The Amazon Resource Name (ARN)
--   of the gating rule.
--   
--   <a>$sel:waitPeriodMs:GatingRuleUpdate'</a>,
--   <a>gatingRuleUpdate_waitPeriodMs</a> - An evaluation period, in
--   milliseconds (ms), during which any request against the target routing
--   controls will fail. This helps prevent "flapping" of state. The wait
--   period is 5000 ms by default, but you can choose a custom value.
--   
--   <a>$sel:name:GatingRuleUpdate'</a>, <a>gatingRuleUpdate_name</a> - The
--   name for the gating rule.
newGatingRuleUpdate :: Text -> Int -> Text -> GatingRuleUpdate

-- | The Amazon Resource Name (ARN) of the gating rule.
gatingRuleUpdate_safetyRuleArn :: Lens' GatingRuleUpdate Text

-- | An evaluation period, in milliseconds (ms), during which any request
--   against the target routing controls will fail. This helps prevent
--   "flapping" of state. The wait period is 5000 ms by default, but you
--   can choose a custom value.
gatingRuleUpdate_waitPeriodMs :: Lens' GatingRuleUpdate Int

-- | The name for the gating rule.
gatingRuleUpdate_name :: Lens' GatingRuleUpdate Text

-- | A new assertion rule for a control panel.
--   
--   <i>See:</i> <a>newNewAssertionRule</a> smart constructor.
data NewAssertionRule
NewAssertionRule' :: Text -> [Text] -> RuleConfig -> Int -> Text -> NewAssertionRule

-- | The Amazon Resource Name (ARN) for the control panel.
[$sel:controlPanelArn:NewAssertionRule'] :: NewAssertionRule -> Text

-- | The routing controls that are part of transactions that are evaluated
--   to determine if a request to change a routing control state is
--   allowed. For example, you might include three routing controls, one
--   for each of three Amazon Web Services Regions.
[$sel:assertedControls:NewAssertionRule'] :: NewAssertionRule -> [Text]

-- | The criteria that you set for specific assertion controls (routing
--   controls) that designate how many controls must be enabled as the
--   result of a transaction. For example, if you have three assertion
--   controls, you might specify atleast 2 for your rule configuration.
--   This means that at least two assertion controls must be enabled, so
--   that at least two Amazon Web Services Regions are enabled.
[$sel:ruleConfig:NewAssertionRule'] :: NewAssertionRule -> RuleConfig

-- | An evaluation period, in milliseconds (ms), during which any request
--   against the target routing controls will fail. This helps prevent
--   "flapping" of state. The wait period is 5000 ms by default, but you
--   can choose a custom value.
[$sel:waitPeriodMs:NewAssertionRule'] :: NewAssertionRule -> Int

-- | The name of the assertion rule. You can use any non-white space
--   character in the name.
[$sel:name:NewAssertionRule'] :: NewAssertionRule -> Text

-- | Create a value of <a>NewAssertionRule</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:controlPanelArn:NewAssertionRule'</a>,
--   <a>newAssertionRule_controlPanelArn</a> - The Amazon Resource Name
--   (ARN) for the control panel.
--   
--   <a>$sel:assertedControls:NewAssertionRule'</a>,
--   <a>newAssertionRule_assertedControls</a> - The routing controls that
--   are part of transactions that are evaluated to determine if a request
--   to change a routing control state is allowed. For example, you might
--   include three routing controls, one for each of three Amazon Web
--   Services Regions.
--   
--   <a>$sel:ruleConfig:NewAssertionRule'</a>,
--   <a>newAssertionRule_ruleConfig</a> - The criteria that you set for
--   specific assertion controls (routing controls) that designate how many
--   controls must be enabled as the result of a transaction. For example,
--   if you have three assertion controls, you might specify atleast 2 for
--   your rule configuration. This means that at least two assertion
--   controls must be enabled, so that at least two Amazon Web Services
--   Regions are enabled.
--   
--   <a>$sel:waitPeriodMs:NewAssertionRule'</a>,
--   <a>newAssertionRule_waitPeriodMs</a> - An evaluation period, in
--   milliseconds (ms), during which any request against the target routing
--   controls will fail. This helps prevent "flapping" of state. The wait
--   period is 5000 ms by default, but you can choose a custom value.
--   
--   <a>$sel:name:NewAssertionRule'</a>, <a>newAssertionRule_name</a> - The
--   name of the assertion rule. You can use any non-white space character
--   in the name.
newNewAssertionRule :: Text -> RuleConfig -> Int -> Text -> NewAssertionRule

-- | The Amazon Resource Name (ARN) for the control panel.
newAssertionRule_controlPanelArn :: Lens' NewAssertionRule Text

-- | The routing controls that are part of transactions that are evaluated
--   to determine if a request to change a routing control state is
--   allowed. For example, you might include three routing controls, one
--   for each of three Amazon Web Services Regions.
newAssertionRule_assertedControls :: Lens' NewAssertionRule [Text]

-- | The criteria that you set for specific assertion controls (routing
--   controls) that designate how many controls must be enabled as the
--   result of a transaction. For example, if you have three assertion
--   controls, you might specify atleast 2 for your rule configuration.
--   This means that at least two assertion controls must be enabled, so
--   that at least two Amazon Web Services Regions are enabled.
newAssertionRule_ruleConfig :: Lens' NewAssertionRule RuleConfig

-- | An evaluation period, in milliseconds (ms), during which any request
--   against the target routing controls will fail. This helps prevent
--   "flapping" of state. The wait period is 5000 ms by default, but you
--   can choose a custom value.
newAssertionRule_waitPeriodMs :: Lens' NewAssertionRule Int

-- | The name of the assertion rule. You can use any non-white space
--   character in the name.
newAssertionRule_name :: Lens' NewAssertionRule Text

-- | A new gating rule for a control panel.
--   
--   <i>See:</i> <a>newNewGatingRule</a> smart constructor.
data NewGatingRule
NewGatingRule' :: [Text] -> Text -> [Text] -> RuleConfig -> Int -> Text -> NewGatingRule

-- | Routing controls that can only be set or unset if the specified
--   RuleConfig evaluates to true for the specified GatingControls. For
--   example, say you have three gating controls, one for each of three
--   Amazon Web Services Regions. Now you specify AtLeast 2 as your
--   RuleConfig. With these settings, you can only change (set or unset)
--   the routing controls that you have specified as TargetControls if that
--   rule evaluates to true.
--   
--   In other words, your ability to change the routing controls that you
--   have specified as TargetControls is gated by the rule that you set for
--   the routing controls in GatingControls.
[$sel:targetControls:NewGatingRule'] :: NewGatingRule -> [Text]

-- | The Amazon Resource Name (ARN) of the control panel.
[$sel:controlPanelArn:NewGatingRule'] :: NewGatingRule -> Text

-- | The gating controls for the new gating rule. That is, routing controls
--   that are evaluated by the rule configuration that you specify.
[$sel:gatingControls:NewGatingRule'] :: NewGatingRule -> [Text]

-- | The criteria that you set for specific gating controls (routing
--   controls) that designates how many controls must be enabled to allow
--   you to change (set or unset) the target controls.
[$sel:ruleConfig:NewGatingRule'] :: NewGatingRule -> RuleConfig

-- | An evaluation period, in milliseconds (ms), during which any request
--   against the target routing controls will fail. This helps prevent
--   "flapping" of state. The wait period is 5000 ms by default, but you
--   can choose a custom value.
[$sel:waitPeriodMs:NewGatingRule'] :: NewGatingRule -> Int

-- | The name for the new gating rule.
[$sel:name:NewGatingRule'] :: NewGatingRule -> Text

-- | Create a value of <a>NewGatingRule</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:targetControls:NewGatingRule'</a>,
--   <a>newGatingRule_targetControls</a> - Routing controls that can only
--   be set or unset if the specified RuleConfig evaluates to true for the
--   specified GatingControls. For example, say you have three gating
--   controls, one for each of three Amazon Web Services Regions. Now you
--   specify AtLeast 2 as your RuleConfig. With these settings, you can
--   only change (set or unset) the routing controls that you have
--   specified as TargetControls if that rule evaluates to true.
--   
--   In other words, your ability to change the routing controls that you
--   have specified as TargetControls is gated by the rule that you set for
--   the routing controls in GatingControls.
--   
--   <a>$sel:controlPanelArn:NewGatingRule'</a>,
--   <a>newGatingRule_controlPanelArn</a> - The Amazon Resource Name (ARN)
--   of the control panel.
--   
--   <a>$sel:gatingControls:NewGatingRule'</a>,
--   <a>newGatingRule_gatingControls</a> - The gating controls for the new
--   gating rule. That is, routing controls that are evaluated by the rule
--   configuration that you specify.
--   
--   <a>$sel:ruleConfig:NewGatingRule'</a>, <a>newGatingRule_ruleConfig</a>
--   - The criteria that you set for specific gating controls (routing
--   controls) that designates how many controls must be enabled to allow
--   you to change (set or unset) the target controls.
--   
--   <a>$sel:waitPeriodMs:NewGatingRule'</a>,
--   <a>newGatingRule_waitPeriodMs</a> - An evaluation period, in
--   milliseconds (ms), during which any request against the target routing
--   controls will fail. This helps prevent "flapping" of state. The wait
--   period is 5000 ms by default, but you can choose a custom value.
--   
--   <a>$sel:name:NewGatingRule'</a>, <a>newGatingRule_name</a> - The name
--   for the new gating rule.
newNewGatingRule :: Text -> RuleConfig -> Int -> Text -> NewGatingRule

-- | Routing controls that can only be set or unset if the specified
--   RuleConfig evaluates to true for the specified GatingControls. For
--   example, say you have three gating controls, one for each of three
--   Amazon Web Services Regions. Now you specify AtLeast 2 as your
--   RuleConfig. With these settings, you can only change (set or unset)
--   the routing controls that you have specified as TargetControls if that
--   rule evaluates to true.
--   
--   In other words, your ability to change the routing controls that you
--   have specified as TargetControls is gated by the rule that you set for
--   the routing controls in GatingControls.
newGatingRule_targetControls :: Lens' NewGatingRule [Text]

-- | The Amazon Resource Name (ARN) of the control panel.
newGatingRule_controlPanelArn :: Lens' NewGatingRule Text

-- | The gating controls for the new gating rule. That is, routing controls
--   that are evaluated by the rule configuration that you specify.
newGatingRule_gatingControls :: Lens' NewGatingRule [Text]

-- | The criteria that you set for specific gating controls (routing
--   controls) that designates how many controls must be enabled to allow
--   you to change (set or unset) the target controls.
newGatingRule_ruleConfig :: Lens' NewGatingRule RuleConfig

-- | An evaluation period, in milliseconds (ms), during which any request
--   against the target routing controls will fail. This helps prevent
--   "flapping" of state. The wait period is 5000 ms by default, but you
--   can choose a custom value.
newGatingRule_waitPeriodMs :: Lens' NewGatingRule Int

-- | The name for the new gating rule.
newGatingRule_name :: Lens' NewGatingRule Text

-- | A routing control has one of two states: ON and OFF. You can map the
--   routing control state to the state of an Amazon Route 53 health check,
--   which can be used to control traffic routing.
--   
--   <i>See:</i> <a>newRoutingControl</a> smart constructor.
data RoutingControl
RoutingControl' :: Maybe Status -> Maybe Text -> Maybe Text -> Maybe Text -> RoutingControl

-- | The deployment status of a routing control. Status can be one of the
--   following: PENDING, DEPLOYED, PENDING_DELETION.
[$sel:status:RoutingControl'] :: RoutingControl -> Maybe Status

-- | The Amazon Resource Name (ARN) of the control panel that includes the
--   routing control.
[$sel:controlPanelArn:RoutingControl'] :: RoutingControl -> Maybe Text

-- | The name of the routing control.
[$sel:name:RoutingControl'] :: RoutingControl -> Maybe Text

-- | The Amazon Resource Name (ARN) of the routing control.
[$sel:routingControlArn:RoutingControl'] :: RoutingControl -> Maybe Text

-- | Create a value of <a>RoutingControl</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:RoutingControl'</a>, <a>routingControl_status</a> - The
--   deployment status of a routing control. Status can be one of the
--   following: PENDING, DEPLOYED, PENDING_DELETION.
--   
--   <a>$sel:controlPanelArn:RoutingControl'</a>,
--   <a>routingControl_controlPanelArn</a> - The Amazon Resource Name (ARN)
--   of the control panel that includes the routing control.
--   
--   <a>$sel:name:RoutingControl'</a>, <a>routingControl_name</a> - The
--   name of the routing control.
--   
--   <a>$sel:routingControlArn:RoutingControl'</a>,
--   <a>routingControl_routingControlArn</a> - The Amazon Resource Name
--   (ARN) of the routing control.
newRoutingControl :: RoutingControl

-- | The deployment status of a routing control. Status can be one of the
--   following: PENDING, DEPLOYED, PENDING_DELETION.
routingControl_status :: Lens' RoutingControl (Maybe Status)

-- | The Amazon Resource Name (ARN) of the control panel that includes the
--   routing control.
routingControl_controlPanelArn :: Lens' RoutingControl (Maybe Text)

-- | The name of the routing control.
routingControl_name :: Lens' RoutingControl (Maybe Text)

-- | The Amazon Resource Name (ARN) of the routing control.
routingControl_routingControlArn :: Lens' RoutingControl (Maybe Text)

-- | A safety rule. A safety rule can be an assertion rule or a gating
--   rule.
--   
--   <i>See:</i> <a>newRule</a> smart constructor.
data Rule
Rule' :: Maybe GatingRule -> Maybe AssertionRule -> Rule

-- | A gating rule verifies that a set of gating controls evaluates as
--   true, based on a rule configuration that you specify. If the gating
--   rule evaluates to true, Amazon Route 53 Application Recovery
--   Controller allows a set of routing control state changes to run and
--   complete against the set of target controls.
[$sel:gating:Rule'] :: Rule -> Maybe GatingRule

-- | An assertion rule enforces that, when a routing control state is
--   changed, the criteria set by the rule configuration is met. Otherwise,
--   the change to the routing control is not accepted.
[$sel:assertion:Rule'] :: Rule -> Maybe AssertionRule

-- | Create a value of <a>Rule</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:gating:Rule'</a>, <a>rule_gating</a> - A gating rule verifies
--   that a set of gating controls evaluates as true, based on a rule
--   configuration that you specify. If the gating rule evaluates to true,
--   Amazon Route 53 Application Recovery Controller allows a set of
--   routing control state changes to run and complete against the set of
--   target controls.
--   
--   <a>$sel:assertion:Rule'</a>, <a>rule_assertion</a> - An assertion rule
--   enforces that, when a routing control state is changed, the criteria
--   set by the rule configuration is met. Otherwise, the change to the
--   routing control is not accepted.
newRule :: Rule

-- | A gating rule verifies that a set of gating controls evaluates as
--   true, based on a rule configuration that you specify. If the gating
--   rule evaluates to true, Amazon Route 53 Application Recovery
--   Controller allows a set of routing control state changes to run and
--   complete against the set of target controls.
rule_gating :: Lens' Rule (Maybe GatingRule)

-- | An assertion rule enforces that, when a routing control state is
--   changed, the criteria set by the rule configuration is met. Otherwise,
--   the change to the routing control is not accepted.
rule_assertion :: Lens' Rule (Maybe AssertionRule)

-- | The rule configuration for an assertion rule. That is, the criteria
--   that you set for specific assertion controls (routing controls) that
--   specify how many controls must be enabled after a transaction
--   completes.
--   
--   <i>See:</i> <a>newRuleConfig</a> smart constructor.
data RuleConfig
RuleConfig' :: RuleType -> Bool -> Int -> RuleConfig

-- | A rule can be one of the following: ATLEAST, AND, or OR.
[$sel:type':RuleConfig'] :: RuleConfig -> RuleType

-- | Logical negation of the rule. If the rule would usually evaluate true,
--   it's evaluated as false, and vice versa.
[$sel:inverted:RuleConfig'] :: RuleConfig -> Bool

-- | The value of N, when you specify an ATLEAST rule type. That is,
--   Threshold is the number of controls that must be set when you specify
--   an ATLEAST type.
[$sel:threshold:RuleConfig'] :: RuleConfig -> Int

-- | Create a value of <a>RuleConfig</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:type':RuleConfig'</a>, <a>ruleConfig_type</a> - A rule can be
--   one of the following: ATLEAST, AND, or OR.
--   
--   <a>$sel:inverted:RuleConfig'</a>, <a>ruleConfig_inverted</a> - Logical
--   negation of the rule. If the rule would usually evaluate true, it's
--   evaluated as false, and vice versa.
--   
--   <a>$sel:threshold:RuleConfig'</a>, <a>ruleConfig_threshold</a> - The
--   value of N, when you specify an ATLEAST rule type. That is, Threshold
--   is the number of controls that must be set when you specify an ATLEAST
--   type.
newRuleConfig :: RuleType -> Bool -> Int -> RuleConfig

-- | A rule can be one of the following: ATLEAST, AND, or OR.
ruleConfig_type :: Lens' RuleConfig RuleType

-- | Logical negation of the rule. If the rule would usually evaluate true,
--   it's evaluated as false, and vice versa.
ruleConfig_inverted :: Lens' RuleConfig Bool

-- | The value of N, when you specify an ATLEAST rule type. That is,
--   Threshold is the number of controls that must be set when you specify
--   an ATLEAST type.
ruleConfig_threshold :: Lens' RuleConfig Int


-- | List the safety rules (the assertion rules and gating rules) that
--   you've defined for the routing controls in a control panel.
module Amazonka.Route53RecoveryControlConfig.ListSafetyRules

-- | <i>See:</i> <a>newListSafetyRules</a> smart constructor.
data ListSafetyRules
ListSafetyRules' :: Maybe Text -> Maybe Natural -> Text -> ListSafetyRules

-- | The token that identifies which batch of results you want to see.
[$sel:nextToken:ListSafetyRules'] :: ListSafetyRules -> Maybe Text

-- | The number of objects that you want to return with this call.
[$sel:maxResults:ListSafetyRules'] :: ListSafetyRules -> Maybe Natural

-- | The Amazon Resource Name (ARN) of the control panel that you're
--   getting details for.
[$sel:controlPanelArn:ListSafetyRules'] :: ListSafetyRules -> Text

-- | Create a value of <a>ListSafetyRules</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListSafetyRules'</a>,
--   <a>listSafetyRules_nextToken</a> - The token that identifies which
--   batch of results you want to see.
--   
--   <a>$sel:maxResults:ListSafetyRules'</a>,
--   <a>listSafetyRules_maxResults</a> - The number of objects that you
--   want to return with this call.
--   
--   <a>$sel:controlPanelArn:ListSafetyRules'</a>,
--   <a>listSafetyRules_controlPanelArn</a> - The Amazon Resource Name
--   (ARN) of the control panel that you're getting details for.
newListSafetyRules :: Text -> ListSafetyRules

-- | The token that identifies which batch of results you want to see.
listSafetyRules_nextToken :: Lens' ListSafetyRules (Maybe Text)

-- | The number of objects that you want to return with this call.
listSafetyRules_maxResults :: Lens' ListSafetyRules (Maybe Natural)

-- | The Amazon Resource Name (ARN) of the control panel that you're
--   getting details for.
listSafetyRules_controlPanelArn :: Lens' ListSafetyRules Text

-- | <i>See:</i> <a>newListSafetyRulesResponse</a> smart constructor.
data ListSafetyRulesResponse
ListSafetyRulesResponse' :: Maybe Text -> Maybe [Rule] -> Int -> ListSafetyRulesResponse

-- | The token that identifies which batch of results you want to see.
[$sel:nextToken:ListSafetyRulesResponse'] :: ListSafetyRulesResponse -> Maybe Text

-- | The list of safety rules in a control panel.
[$sel:safetyRules:ListSafetyRulesResponse'] :: ListSafetyRulesResponse -> Maybe [Rule]

-- | The response's http status code.
[$sel:httpStatus:ListSafetyRulesResponse'] :: ListSafetyRulesResponse -> Int

-- | Create a value of <a>ListSafetyRulesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListSafetyRules'</a>,
--   <a>listSafetyRulesResponse_nextToken</a> - The token that identifies
--   which batch of results you want to see.
--   
--   <a>$sel:safetyRules:ListSafetyRulesResponse'</a>,
--   <a>listSafetyRulesResponse_safetyRules</a> - The list of safety rules
--   in a control panel.
--   
--   <a>$sel:httpStatus:ListSafetyRulesResponse'</a>,
--   <a>listSafetyRulesResponse_httpStatus</a> - The response's http status
--   code.
newListSafetyRulesResponse :: Int -> ListSafetyRulesResponse

-- | The token that identifies which batch of results you want to see.
listSafetyRulesResponse_nextToken :: Lens' ListSafetyRulesResponse (Maybe Text)

-- | The list of safety rules in a control panel.
listSafetyRulesResponse_safetyRules :: Lens' ListSafetyRulesResponse (Maybe [Rule])

-- | The response's http status code.
listSafetyRulesResponse_httpStatus :: Lens' ListSafetyRulesResponse Int
instance GHC.Generics.Generic Amazonka.Route53RecoveryControlConfig.ListSafetyRules.ListSafetyRules
instance GHC.Show.Show Amazonka.Route53RecoveryControlConfig.ListSafetyRules.ListSafetyRules
instance GHC.Read.Read Amazonka.Route53RecoveryControlConfig.ListSafetyRules.ListSafetyRules
instance GHC.Classes.Eq Amazonka.Route53RecoveryControlConfig.ListSafetyRules.ListSafetyRules
instance GHC.Generics.Generic Amazonka.Route53RecoveryControlConfig.ListSafetyRules.ListSafetyRulesResponse
instance GHC.Show.Show Amazonka.Route53RecoveryControlConfig.ListSafetyRules.ListSafetyRulesResponse
instance GHC.Read.Read Amazonka.Route53RecoveryControlConfig.ListSafetyRules.ListSafetyRulesResponse
instance GHC.Classes.Eq Amazonka.Route53RecoveryControlConfig.ListSafetyRules.ListSafetyRulesResponse
instance Amazonka.Types.AWSRequest Amazonka.Route53RecoveryControlConfig.ListSafetyRules.ListSafetyRules
instance Control.DeepSeq.NFData Amazonka.Route53RecoveryControlConfig.ListSafetyRules.ListSafetyRulesResponse
instance Data.Hashable.Class.Hashable Amazonka.Route53RecoveryControlConfig.ListSafetyRules.ListSafetyRules
instance Control.DeepSeq.NFData Amazonka.Route53RecoveryControlConfig.ListSafetyRules.ListSafetyRules
instance Amazonka.Data.Headers.ToHeaders Amazonka.Route53RecoveryControlConfig.ListSafetyRules.ListSafetyRules
instance Amazonka.Data.Path.ToPath Amazonka.Route53RecoveryControlConfig.ListSafetyRules.ListSafetyRules
instance Amazonka.Data.Query.ToQuery Amazonka.Route53RecoveryControlConfig.ListSafetyRules.ListSafetyRules


-- | Returns an array of routing controls for a control panel. A routing
--   control is an Amazon Route 53 Application Recovery Controller
--   construct that has one of two states: ON and OFF. You can map the
--   routing control state to the state of an Amazon Route 53 health check,
--   which can be used to control routing.
module Amazonka.Route53RecoveryControlConfig.ListRoutingControls

-- | <i>See:</i> <a>newListRoutingControls</a> smart constructor.
data ListRoutingControls
ListRoutingControls' :: Maybe Text -> Maybe Natural -> Text -> ListRoutingControls

-- | The token that identifies which batch of results you want to see.
[$sel:nextToken:ListRoutingControls'] :: ListRoutingControls -> Maybe Text

-- | The number of objects that you want to return with this call.
[$sel:maxResults:ListRoutingControls'] :: ListRoutingControls -> Maybe Natural

-- | The Amazon Resource Name (ARN) of the control panel that you're
--   getting routing control details for.
[$sel:controlPanelArn:ListRoutingControls'] :: ListRoutingControls -> Text

-- | Create a value of <a>ListRoutingControls</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListRoutingControls'</a>,
--   <a>listRoutingControls_nextToken</a> - The token that identifies which
--   batch of results you want to see.
--   
--   <a>$sel:maxResults:ListRoutingControls'</a>,
--   <a>listRoutingControls_maxResults</a> - The number of objects that you
--   want to return with this call.
--   
--   <a>$sel:controlPanelArn:ListRoutingControls'</a>,
--   <a>listRoutingControls_controlPanelArn</a> - The Amazon Resource Name
--   (ARN) of the control panel that you're getting routing control details
--   for.
newListRoutingControls :: Text -> ListRoutingControls

-- | The token that identifies which batch of results you want to see.
listRoutingControls_nextToken :: Lens' ListRoutingControls (Maybe Text)

-- | The number of objects that you want to return with this call.
listRoutingControls_maxResults :: Lens' ListRoutingControls (Maybe Natural)

-- | The Amazon Resource Name (ARN) of the control panel that you're
--   getting routing control details for.
listRoutingControls_controlPanelArn :: Lens' ListRoutingControls Text

-- | <i>See:</i> <a>newListRoutingControlsResponse</a> smart constructor.
data ListRoutingControlsResponse
ListRoutingControlsResponse' :: Maybe Text -> Maybe [RoutingControl] -> Int -> ListRoutingControlsResponse

-- | The token that identifies which batch of results you want to see.
[$sel:nextToken:ListRoutingControlsResponse'] :: ListRoutingControlsResponse -> Maybe Text

-- | An array of routing controls.
[$sel:routingControls:ListRoutingControlsResponse'] :: ListRoutingControlsResponse -> Maybe [RoutingControl]

-- | The response's http status code.
[$sel:httpStatus:ListRoutingControlsResponse'] :: ListRoutingControlsResponse -> Int

-- | Create a value of <a>ListRoutingControlsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListRoutingControls'</a>,
--   <a>listRoutingControlsResponse_nextToken</a> - The token that
--   identifies which batch of results you want to see.
--   
--   <a>$sel:routingControls:ListRoutingControlsResponse'</a>,
--   <a>listRoutingControlsResponse_routingControls</a> - An array of
--   routing controls.
--   
--   <a>$sel:httpStatus:ListRoutingControlsResponse'</a>,
--   <a>listRoutingControlsResponse_httpStatus</a> - The response's http
--   status code.
newListRoutingControlsResponse :: Int -> ListRoutingControlsResponse

-- | The token that identifies which batch of results you want to see.
listRoutingControlsResponse_nextToken :: Lens' ListRoutingControlsResponse (Maybe Text)

-- | An array of routing controls.
listRoutingControlsResponse_routingControls :: Lens' ListRoutingControlsResponse (Maybe [RoutingControl])

-- | The response's http status code.
listRoutingControlsResponse_httpStatus :: Lens' ListRoutingControlsResponse Int
instance GHC.Generics.Generic Amazonka.Route53RecoveryControlConfig.ListRoutingControls.ListRoutingControls
instance GHC.Show.Show Amazonka.Route53RecoveryControlConfig.ListRoutingControls.ListRoutingControls
instance GHC.Read.Read Amazonka.Route53RecoveryControlConfig.ListRoutingControls.ListRoutingControls
instance GHC.Classes.Eq Amazonka.Route53RecoveryControlConfig.ListRoutingControls.ListRoutingControls
instance GHC.Generics.Generic Amazonka.Route53RecoveryControlConfig.ListRoutingControls.ListRoutingControlsResponse
instance GHC.Show.Show Amazonka.Route53RecoveryControlConfig.ListRoutingControls.ListRoutingControlsResponse
instance GHC.Read.Read Amazonka.Route53RecoveryControlConfig.ListRoutingControls.ListRoutingControlsResponse
instance GHC.Classes.Eq Amazonka.Route53RecoveryControlConfig.ListRoutingControls.ListRoutingControlsResponse
instance Amazonka.Types.AWSRequest Amazonka.Route53RecoveryControlConfig.ListRoutingControls.ListRoutingControls
instance Control.DeepSeq.NFData Amazonka.Route53RecoveryControlConfig.ListRoutingControls.ListRoutingControlsResponse
instance Data.Hashable.Class.Hashable Amazonka.Route53RecoveryControlConfig.ListRoutingControls.ListRoutingControls
instance Control.DeepSeq.NFData Amazonka.Route53RecoveryControlConfig.ListRoutingControls.ListRoutingControls
instance Amazonka.Data.Headers.ToHeaders Amazonka.Route53RecoveryControlConfig.ListRoutingControls.ListRoutingControls
instance Amazonka.Data.Path.ToPath Amazonka.Route53RecoveryControlConfig.ListRoutingControls.ListRoutingControls
instance Amazonka.Data.Query.ToQuery Amazonka.Route53RecoveryControlConfig.ListRoutingControls.ListRoutingControls


-- | Returns an array of control panels for a cluster.
module Amazonka.Route53RecoveryControlConfig.ListControlPanels

-- | <i>See:</i> <a>newListControlPanels</a> smart constructor.
data ListControlPanels
ListControlPanels' :: Maybe Text -> Maybe Text -> Maybe Natural -> ListControlPanels

-- | The Amazon Resource Name (ARN) of a cluster.
[$sel:clusterArn:ListControlPanels'] :: ListControlPanels -> Maybe Text

-- | The token that identifies which batch of results you want to see.
[$sel:nextToken:ListControlPanels'] :: ListControlPanels -> Maybe Text

-- | The number of objects that you want to return with this call.
[$sel:maxResults:ListControlPanels'] :: ListControlPanels -> Maybe Natural

-- | Create a value of <a>ListControlPanels</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clusterArn:ListControlPanels'</a>,
--   <a>listControlPanels_clusterArn</a> - The Amazon Resource Name (ARN)
--   of a cluster.
--   
--   <a>$sel:nextToken:ListControlPanels'</a>,
--   <a>listControlPanels_nextToken</a> - The token that identifies which
--   batch of results you want to see.
--   
--   <a>$sel:maxResults:ListControlPanels'</a>,
--   <a>listControlPanels_maxResults</a> - The number of objects that you
--   want to return with this call.
newListControlPanels :: ListControlPanels

-- | The Amazon Resource Name (ARN) of a cluster.
listControlPanels_clusterArn :: Lens' ListControlPanels (Maybe Text)

-- | The token that identifies which batch of results you want to see.
listControlPanels_nextToken :: Lens' ListControlPanels (Maybe Text)

-- | The number of objects that you want to return with this call.
listControlPanels_maxResults :: Lens' ListControlPanels (Maybe Natural)

-- | <i>See:</i> <a>newListControlPanelsResponse</a> smart constructor.
data ListControlPanelsResponse
ListControlPanelsResponse' :: Maybe Text -> Maybe [ControlPanel] -> Int -> ListControlPanelsResponse

-- | The token that identifies which batch of results you want to see.
[$sel:nextToken:ListControlPanelsResponse'] :: ListControlPanelsResponse -> Maybe Text

-- | The result of a successful ListControlPanel request.
[$sel:controlPanels:ListControlPanelsResponse'] :: ListControlPanelsResponse -> Maybe [ControlPanel]

-- | The response's http status code.
[$sel:httpStatus:ListControlPanelsResponse'] :: ListControlPanelsResponse -> Int

-- | Create a value of <a>ListControlPanelsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListControlPanels'</a>,
--   <a>listControlPanelsResponse_nextToken</a> - The token that identifies
--   which batch of results you want to see.
--   
--   <a>$sel:controlPanels:ListControlPanelsResponse'</a>,
--   <a>listControlPanelsResponse_controlPanels</a> - The result of a
--   successful ListControlPanel request.
--   
--   <a>$sel:httpStatus:ListControlPanelsResponse'</a>,
--   <a>listControlPanelsResponse_httpStatus</a> - The response's http
--   status code.
newListControlPanelsResponse :: Int -> ListControlPanelsResponse

-- | The token that identifies which batch of results you want to see.
listControlPanelsResponse_nextToken :: Lens' ListControlPanelsResponse (Maybe Text)

-- | The result of a successful ListControlPanel request.
listControlPanelsResponse_controlPanels :: Lens' ListControlPanelsResponse (Maybe [ControlPanel])

-- | The response's http status code.
listControlPanelsResponse_httpStatus :: Lens' ListControlPanelsResponse Int
instance GHC.Generics.Generic Amazonka.Route53RecoveryControlConfig.ListControlPanels.ListControlPanels
instance GHC.Show.Show Amazonka.Route53RecoveryControlConfig.ListControlPanels.ListControlPanels
instance GHC.Read.Read Amazonka.Route53RecoveryControlConfig.ListControlPanels.ListControlPanels
instance GHC.Classes.Eq Amazonka.Route53RecoveryControlConfig.ListControlPanels.ListControlPanels
instance GHC.Generics.Generic Amazonka.Route53RecoveryControlConfig.ListControlPanels.ListControlPanelsResponse
instance GHC.Show.Show Amazonka.Route53RecoveryControlConfig.ListControlPanels.ListControlPanelsResponse
instance GHC.Read.Read Amazonka.Route53RecoveryControlConfig.ListControlPanels.ListControlPanelsResponse
instance GHC.Classes.Eq Amazonka.Route53RecoveryControlConfig.ListControlPanels.ListControlPanelsResponse
instance Amazonka.Types.AWSRequest Amazonka.Route53RecoveryControlConfig.ListControlPanels.ListControlPanels
instance Control.DeepSeq.NFData Amazonka.Route53RecoveryControlConfig.ListControlPanels.ListControlPanelsResponse
instance Data.Hashable.Class.Hashable Amazonka.Route53RecoveryControlConfig.ListControlPanels.ListControlPanels
instance Control.DeepSeq.NFData Amazonka.Route53RecoveryControlConfig.ListControlPanels.ListControlPanels
instance Amazonka.Data.Headers.ToHeaders Amazonka.Route53RecoveryControlConfig.ListControlPanels.ListControlPanels
instance Amazonka.Data.Path.ToPath Amazonka.Route53RecoveryControlConfig.ListControlPanels.ListControlPanels
instance Amazonka.Data.Query.ToQuery Amazonka.Route53RecoveryControlConfig.ListControlPanels.ListControlPanels


-- | Returns an array of all the clusters in an account.
module Amazonka.Route53RecoveryControlConfig.ListClusters

-- | <i>See:</i> <a>newListClusters</a> smart constructor.
data ListClusters
ListClusters' :: Maybe Text -> Maybe Natural -> ListClusters

-- | The token that identifies which batch of results you want to see.
[$sel:nextToken:ListClusters'] :: ListClusters -> Maybe Text

-- | The number of objects that you want to return with this call.
[$sel:maxResults:ListClusters'] :: ListClusters -> Maybe Natural

-- | Create a value of <a>ListClusters</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListClusters'</a>, <a>listClusters_nextToken</a> -
--   The token that identifies which batch of results you want to see.
--   
--   <a>$sel:maxResults:ListClusters'</a>, <a>listClusters_maxResults</a> -
--   The number of objects that you want to return with this call.
newListClusters :: ListClusters

-- | The token that identifies which batch of results you want to see.
listClusters_nextToken :: Lens' ListClusters (Maybe Text)

-- | The number of objects that you want to return with this call.
listClusters_maxResults :: Lens' ListClusters (Maybe Natural)

-- | <i>See:</i> <a>newListClustersResponse</a> smart constructor.
data ListClustersResponse
ListClustersResponse' :: Maybe Text -> Maybe [Cluster] -> Int -> ListClustersResponse

-- | The token that identifies which batch of results you want to see.
[$sel:nextToken:ListClustersResponse'] :: ListClustersResponse -> Maybe Text

-- | An array of the clusters in an account.
[$sel:clusters:ListClustersResponse'] :: ListClustersResponse -> Maybe [Cluster]

-- | The response's http status code.
[$sel:httpStatus:ListClustersResponse'] :: ListClustersResponse -> Int

-- | Create a value of <a>ListClustersResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListClusters'</a>,
--   <a>listClustersResponse_nextToken</a> - The token that identifies
--   which batch of results you want to see.
--   
--   <a>$sel:clusters:ListClustersResponse'</a>,
--   <a>listClustersResponse_clusters</a> - An array of the clusters in an
--   account.
--   
--   <a>$sel:httpStatus:ListClustersResponse'</a>,
--   <a>listClustersResponse_httpStatus</a> - The response's http status
--   code.
newListClustersResponse :: Int -> ListClustersResponse

-- | The token that identifies which batch of results you want to see.
listClustersResponse_nextToken :: Lens' ListClustersResponse (Maybe Text)

-- | An array of the clusters in an account.
listClustersResponse_clusters :: Lens' ListClustersResponse (Maybe [Cluster])

-- | The response's http status code.
listClustersResponse_httpStatus :: Lens' ListClustersResponse Int
instance GHC.Generics.Generic Amazonka.Route53RecoveryControlConfig.ListClusters.ListClusters
instance GHC.Show.Show Amazonka.Route53RecoveryControlConfig.ListClusters.ListClusters
instance GHC.Read.Read Amazonka.Route53RecoveryControlConfig.ListClusters.ListClusters
instance GHC.Classes.Eq Amazonka.Route53RecoveryControlConfig.ListClusters.ListClusters
instance GHC.Generics.Generic Amazonka.Route53RecoveryControlConfig.ListClusters.ListClustersResponse
instance GHC.Show.Show Amazonka.Route53RecoveryControlConfig.ListClusters.ListClustersResponse
instance GHC.Read.Read Amazonka.Route53RecoveryControlConfig.ListClusters.ListClustersResponse
instance GHC.Classes.Eq Amazonka.Route53RecoveryControlConfig.ListClusters.ListClustersResponse
instance Amazonka.Types.AWSRequest Amazonka.Route53RecoveryControlConfig.ListClusters.ListClusters
instance Control.DeepSeq.NFData Amazonka.Route53RecoveryControlConfig.ListClusters.ListClustersResponse
instance Data.Hashable.Class.Hashable Amazonka.Route53RecoveryControlConfig.ListClusters.ListClusters
instance Control.DeepSeq.NFData Amazonka.Route53RecoveryControlConfig.ListClusters.ListClusters
instance Amazonka.Data.Headers.ToHeaders Amazonka.Route53RecoveryControlConfig.ListClusters.ListClusters
instance Amazonka.Data.Path.ToPath Amazonka.Route53RecoveryControlConfig.ListClusters.ListClusters
instance Amazonka.Data.Query.ToQuery Amazonka.Route53RecoveryControlConfig.ListClusters.ListClusters


-- | Returns an array of all Amazon Route 53 health checks associated with
--   a specific routing control.
module Amazonka.Route53RecoveryControlConfig.ListAssociatedRoute53HealthChecks

-- | <i>See:</i> <a>newListAssociatedRoute53HealthChecks</a> smart
--   constructor.
data ListAssociatedRoute53HealthChecks
ListAssociatedRoute53HealthChecks' :: Maybe Text -> Maybe Natural -> Text -> ListAssociatedRoute53HealthChecks

-- | The token that identifies which batch of results you want to see.
[$sel:nextToken:ListAssociatedRoute53HealthChecks'] :: ListAssociatedRoute53HealthChecks -> Maybe Text

-- | The number of objects that you want to return with this call.
[$sel:maxResults:ListAssociatedRoute53HealthChecks'] :: ListAssociatedRoute53HealthChecks -> Maybe Natural

-- | The Amazon Resource Name (ARN) of the routing control that you're
--   getting details for.
[$sel:routingControlArn:ListAssociatedRoute53HealthChecks'] :: ListAssociatedRoute53HealthChecks -> Text

-- | Create a value of <a>ListAssociatedRoute53HealthChecks</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListAssociatedRoute53HealthChecks'</a>,
--   <a>listAssociatedRoute53HealthChecks_nextToken</a> - The token that
--   identifies which batch of results you want to see.
--   
--   <a>$sel:maxResults:ListAssociatedRoute53HealthChecks'</a>,
--   <a>listAssociatedRoute53HealthChecks_maxResults</a> - The number of
--   objects that you want to return with this call.
--   
--   <a>$sel:routingControlArn:ListAssociatedRoute53HealthChecks'</a>,
--   <a>listAssociatedRoute53HealthChecks_routingControlArn</a> - The
--   Amazon Resource Name (ARN) of the routing control that you're getting
--   details for.
newListAssociatedRoute53HealthChecks :: Text -> ListAssociatedRoute53HealthChecks

-- | The token that identifies which batch of results you want to see.
listAssociatedRoute53HealthChecks_nextToken :: Lens' ListAssociatedRoute53HealthChecks (Maybe Text)

-- | The number of objects that you want to return with this call.
listAssociatedRoute53HealthChecks_maxResults :: Lens' ListAssociatedRoute53HealthChecks (Maybe Natural)

-- | The Amazon Resource Name (ARN) of the routing control that you're
--   getting details for.
listAssociatedRoute53HealthChecks_routingControlArn :: Lens' ListAssociatedRoute53HealthChecks Text

-- | <i>See:</i> <a>newListAssociatedRoute53HealthChecksResponse</a> smart
--   constructor.
data ListAssociatedRoute53HealthChecksResponse
ListAssociatedRoute53HealthChecksResponse' :: Maybe Text -> Maybe [Text] -> Int -> ListAssociatedRoute53HealthChecksResponse

-- | The token that identifies which batch of results you want to see.
[$sel:nextToken:ListAssociatedRoute53HealthChecksResponse'] :: ListAssociatedRoute53HealthChecksResponse -> Maybe Text

-- | Identifiers for the health checks.
[$sel:healthCheckIds:ListAssociatedRoute53HealthChecksResponse'] :: ListAssociatedRoute53HealthChecksResponse -> Maybe [Text]

-- | The response's http status code.
[$sel:httpStatus:ListAssociatedRoute53HealthChecksResponse'] :: ListAssociatedRoute53HealthChecksResponse -> Int

-- | Create a value of <a>ListAssociatedRoute53HealthChecksResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListAssociatedRoute53HealthChecks'</a>,
--   <a>listAssociatedRoute53HealthChecksResponse_nextToken</a> - The token
--   that identifies which batch of results you want to see.
--   
--   <a>$sel:healthCheckIds:ListAssociatedRoute53HealthChecksResponse'</a>,
--   <a>listAssociatedRoute53HealthChecksResponse_healthCheckIds</a> -
--   Identifiers for the health checks.
--   
--   <a>$sel:httpStatus:ListAssociatedRoute53HealthChecksResponse'</a>,
--   <a>listAssociatedRoute53HealthChecksResponse_httpStatus</a> - The
--   response's http status code.
newListAssociatedRoute53HealthChecksResponse :: Int -> ListAssociatedRoute53HealthChecksResponse

-- | The token that identifies which batch of results you want to see.
listAssociatedRoute53HealthChecksResponse_nextToken :: Lens' ListAssociatedRoute53HealthChecksResponse (Maybe Text)

-- | Identifiers for the health checks.
listAssociatedRoute53HealthChecksResponse_healthCheckIds :: Lens' ListAssociatedRoute53HealthChecksResponse (Maybe [Text])

-- | The response's http status code.
listAssociatedRoute53HealthChecksResponse_httpStatus :: Lens' ListAssociatedRoute53HealthChecksResponse Int
instance GHC.Generics.Generic Amazonka.Route53RecoveryControlConfig.ListAssociatedRoute53HealthChecks.ListAssociatedRoute53HealthChecks
instance GHC.Show.Show Amazonka.Route53RecoveryControlConfig.ListAssociatedRoute53HealthChecks.ListAssociatedRoute53HealthChecks
instance GHC.Read.Read Amazonka.Route53RecoveryControlConfig.ListAssociatedRoute53HealthChecks.ListAssociatedRoute53HealthChecks
instance GHC.Classes.Eq Amazonka.Route53RecoveryControlConfig.ListAssociatedRoute53HealthChecks.ListAssociatedRoute53HealthChecks
instance GHC.Generics.Generic Amazonka.Route53RecoveryControlConfig.ListAssociatedRoute53HealthChecks.ListAssociatedRoute53HealthChecksResponse
instance GHC.Show.Show Amazonka.Route53RecoveryControlConfig.ListAssociatedRoute53HealthChecks.ListAssociatedRoute53HealthChecksResponse
instance GHC.Read.Read Amazonka.Route53RecoveryControlConfig.ListAssociatedRoute53HealthChecks.ListAssociatedRoute53HealthChecksResponse
instance GHC.Classes.Eq Amazonka.Route53RecoveryControlConfig.ListAssociatedRoute53HealthChecks.ListAssociatedRoute53HealthChecksResponse
instance Amazonka.Types.AWSRequest Amazonka.Route53RecoveryControlConfig.ListAssociatedRoute53HealthChecks.ListAssociatedRoute53HealthChecks
instance Control.DeepSeq.NFData Amazonka.Route53RecoveryControlConfig.ListAssociatedRoute53HealthChecks.ListAssociatedRoute53HealthChecksResponse
instance Data.Hashable.Class.Hashable Amazonka.Route53RecoveryControlConfig.ListAssociatedRoute53HealthChecks.ListAssociatedRoute53HealthChecks
instance Control.DeepSeq.NFData Amazonka.Route53RecoveryControlConfig.ListAssociatedRoute53HealthChecks.ListAssociatedRoute53HealthChecks
instance Amazonka.Data.Headers.ToHeaders Amazonka.Route53RecoveryControlConfig.ListAssociatedRoute53HealthChecks.ListAssociatedRoute53HealthChecks
instance Amazonka.Data.Path.ToPath Amazonka.Route53RecoveryControlConfig.ListAssociatedRoute53HealthChecks.ListAssociatedRoute53HealthChecks
instance Amazonka.Data.Query.ToQuery Amazonka.Route53RecoveryControlConfig.ListAssociatedRoute53HealthChecks.ListAssociatedRoute53HealthChecks


-- | Describes the safety rules (that is, the assertion rules and gating
--   rules) for the routing controls in a control panel.
module Amazonka.Route53RecoveryControlConfig.DescribeSafetyRule

-- | <i>See:</i> <a>newDescribeSafetyRule</a> smart constructor.
data DescribeSafetyRule
DescribeSafetyRule' :: Text -> DescribeSafetyRule

-- | The request body that you include when you update a safety rule.
[$sel:safetyRuleArn:DescribeSafetyRule'] :: DescribeSafetyRule -> Text

-- | Create a value of <a>DescribeSafetyRule</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:safetyRuleArn:DescribeSafetyRule'</a>,
--   <a>describeSafetyRule_safetyRuleArn</a> - The request body that you
--   include when you update a safety rule.
newDescribeSafetyRule :: Text -> DescribeSafetyRule

-- | The request body that you include when you update a safety rule.
describeSafetyRule_safetyRuleArn :: Lens' DescribeSafetyRule Text

-- | <i>See:</i> <a>newDescribeSafetyRuleResponse</a> smart constructor.
data DescribeSafetyRuleResponse
DescribeSafetyRuleResponse' :: Maybe AssertionRule -> Maybe GatingRule -> Int -> DescribeSafetyRuleResponse
[$sel:assertionRule:DescribeSafetyRuleResponse'] :: DescribeSafetyRuleResponse -> Maybe AssertionRule
[$sel:gatingRule:DescribeSafetyRuleResponse'] :: DescribeSafetyRuleResponse -> Maybe GatingRule

-- | The response's http status code.
[$sel:httpStatus:DescribeSafetyRuleResponse'] :: DescribeSafetyRuleResponse -> Int

-- | Create a value of <a>DescribeSafetyRuleResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:assertionRule:DescribeSafetyRuleResponse'</a>,
--   <a>describeSafetyRuleResponse_assertionRule</a> - Undocumented member.
--   
--   <a>$sel:gatingRule:DescribeSafetyRuleResponse'</a>,
--   <a>describeSafetyRuleResponse_gatingRule</a> - Undocumented member.
--   
--   <a>$sel:httpStatus:DescribeSafetyRuleResponse'</a>,
--   <a>describeSafetyRuleResponse_httpStatus</a> - The response's http
--   status code.
newDescribeSafetyRuleResponse :: Int -> DescribeSafetyRuleResponse

-- | Undocumented member.
describeSafetyRuleResponse_assertionRule :: Lens' DescribeSafetyRuleResponse (Maybe AssertionRule)

-- | Undocumented member.
describeSafetyRuleResponse_gatingRule :: Lens' DescribeSafetyRuleResponse (Maybe GatingRule)

-- | The response's http status code.
describeSafetyRuleResponse_httpStatus :: Lens' DescribeSafetyRuleResponse Int
instance GHC.Generics.Generic Amazonka.Route53RecoveryControlConfig.DescribeSafetyRule.DescribeSafetyRule
instance GHC.Show.Show Amazonka.Route53RecoveryControlConfig.DescribeSafetyRule.DescribeSafetyRule
instance GHC.Read.Read Amazonka.Route53RecoveryControlConfig.DescribeSafetyRule.DescribeSafetyRule
instance GHC.Classes.Eq Amazonka.Route53RecoveryControlConfig.DescribeSafetyRule.DescribeSafetyRule
instance GHC.Generics.Generic Amazonka.Route53RecoveryControlConfig.DescribeSafetyRule.DescribeSafetyRuleResponse
instance GHC.Show.Show Amazonka.Route53RecoveryControlConfig.DescribeSafetyRule.DescribeSafetyRuleResponse
instance GHC.Read.Read Amazonka.Route53RecoveryControlConfig.DescribeSafetyRule.DescribeSafetyRuleResponse
instance GHC.Classes.Eq Amazonka.Route53RecoveryControlConfig.DescribeSafetyRule.DescribeSafetyRuleResponse
instance Amazonka.Types.AWSRequest Amazonka.Route53RecoveryControlConfig.DescribeSafetyRule.DescribeSafetyRule
instance Control.DeepSeq.NFData Amazonka.Route53RecoveryControlConfig.DescribeSafetyRule.DescribeSafetyRuleResponse
instance Data.Hashable.Class.Hashable Amazonka.Route53RecoveryControlConfig.DescribeSafetyRule.DescribeSafetyRule
instance Control.DeepSeq.NFData Amazonka.Route53RecoveryControlConfig.DescribeSafetyRule.DescribeSafetyRule
instance Amazonka.Data.Headers.ToHeaders Amazonka.Route53RecoveryControlConfig.DescribeSafetyRule.DescribeSafetyRule
instance Amazonka.Data.Path.ToPath Amazonka.Route53RecoveryControlConfig.DescribeSafetyRule.DescribeSafetyRule
instance Amazonka.Data.Query.ToQuery Amazonka.Route53RecoveryControlConfig.DescribeSafetyRule.DescribeSafetyRule


-- | Displays details about a routing control. A routing control has one of
--   two states: ON and OFF. You can map the routing control state to the
--   state of an Amazon Route 53 health check, which can be used to control
--   routing.
--   
--   To get or update the routing control state, see the Recovery Cluster
--   (data plane) API actions for Amazon Route 53 Application Recovery
--   Controller.
module Amazonka.Route53RecoveryControlConfig.DescribeRoutingControl

-- | <i>See:</i> <a>newDescribeRoutingControl</a> smart constructor.
data DescribeRoutingControl
DescribeRoutingControl' :: Text -> DescribeRoutingControl

-- | The Amazon Resource Name (ARN) of the routing control that you're
--   getting details for.
[$sel:routingControlArn:DescribeRoutingControl'] :: DescribeRoutingControl -> Text

-- | Create a value of <a>DescribeRoutingControl</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:routingControlArn:DescribeRoutingControl'</a>,
--   <a>describeRoutingControl_routingControlArn</a> - The Amazon Resource
--   Name (ARN) of the routing control that you're getting details for.
newDescribeRoutingControl :: Text -> DescribeRoutingControl

-- | The Amazon Resource Name (ARN) of the routing control that you're
--   getting details for.
describeRoutingControl_routingControlArn :: Lens' DescribeRoutingControl Text

-- | <i>See:</i> <a>newDescribeRoutingControlResponse</a> smart
--   constructor.
data DescribeRoutingControlResponse
DescribeRoutingControlResponse' :: Maybe RoutingControl -> Int -> DescribeRoutingControlResponse

-- | Information about the routing control.
[$sel:routingControl:DescribeRoutingControlResponse'] :: DescribeRoutingControlResponse -> Maybe RoutingControl

-- | The response's http status code.
[$sel:httpStatus:DescribeRoutingControlResponse'] :: DescribeRoutingControlResponse -> Int

-- | Create a value of <a>DescribeRoutingControlResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:routingControl:DescribeRoutingControlResponse'</a>,
--   <a>describeRoutingControlResponse_routingControl</a> - Information
--   about the routing control.
--   
--   <a>$sel:httpStatus:DescribeRoutingControlResponse'</a>,
--   <a>describeRoutingControlResponse_httpStatus</a> - The response's http
--   status code.
newDescribeRoutingControlResponse :: Int -> DescribeRoutingControlResponse

-- | Information about the routing control.
describeRoutingControlResponse_routingControl :: Lens' DescribeRoutingControlResponse (Maybe RoutingControl)

-- | The response's http status code.
describeRoutingControlResponse_httpStatus :: Lens' DescribeRoutingControlResponse Int
instance GHC.Generics.Generic Amazonka.Route53RecoveryControlConfig.DescribeRoutingControl.DescribeRoutingControl
instance GHC.Show.Show Amazonka.Route53RecoveryControlConfig.DescribeRoutingControl.DescribeRoutingControl
instance GHC.Read.Read Amazonka.Route53RecoveryControlConfig.DescribeRoutingControl.DescribeRoutingControl
instance GHC.Classes.Eq Amazonka.Route53RecoveryControlConfig.DescribeRoutingControl.DescribeRoutingControl
instance GHC.Generics.Generic Amazonka.Route53RecoveryControlConfig.DescribeRoutingControl.DescribeRoutingControlResponse
instance GHC.Show.Show Amazonka.Route53RecoveryControlConfig.DescribeRoutingControl.DescribeRoutingControlResponse
instance GHC.Read.Read Amazonka.Route53RecoveryControlConfig.DescribeRoutingControl.DescribeRoutingControlResponse
instance GHC.Classes.Eq Amazonka.Route53RecoveryControlConfig.DescribeRoutingControl.DescribeRoutingControlResponse
instance Amazonka.Types.AWSRequest Amazonka.Route53RecoveryControlConfig.DescribeRoutingControl.DescribeRoutingControl
instance Control.DeepSeq.NFData Amazonka.Route53RecoveryControlConfig.DescribeRoutingControl.DescribeRoutingControlResponse
instance Data.Hashable.Class.Hashable Amazonka.Route53RecoveryControlConfig.DescribeRoutingControl.DescribeRoutingControl
instance Control.DeepSeq.NFData Amazonka.Route53RecoveryControlConfig.DescribeRoutingControl.DescribeRoutingControl
instance Amazonka.Data.Headers.ToHeaders Amazonka.Route53RecoveryControlConfig.DescribeRoutingControl.DescribeRoutingControl
instance Amazonka.Data.Path.ToPath Amazonka.Route53RecoveryControlConfig.DescribeRoutingControl.DescribeRoutingControl
instance Amazonka.Data.Query.ToQuery Amazonka.Route53RecoveryControlConfig.DescribeRoutingControl.DescribeRoutingControl


-- | Displays details about a control panel.
module Amazonka.Route53RecoveryControlConfig.DescribeControlPanel

-- | <i>See:</i> <a>newDescribeControlPanel</a> smart constructor.
data DescribeControlPanel
DescribeControlPanel' :: Text -> DescribeControlPanel

-- | The Amazon Resource Name (ARN) of the control panel that you're
--   getting details for.
[$sel:controlPanelArn:DescribeControlPanel'] :: DescribeControlPanel -> Text

-- | Create a value of <a>DescribeControlPanel</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:controlPanelArn:DescribeControlPanel'</a>,
--   <a>describeControlPanel_controlPanelArn</a> - The Amazon Resource Name
--   (ARN) of the control panel that you're getting details for.
newDescribeControlPanel :: Text -> DescribeControlPanel

-- | The Amazon Resource Name (ARN) of the control panel that you're
--   getting details for.
describeControlPanel_controlPanelArn :: Lens' DescribeControlPanel Text

-- | <i>See:</i> <a>newDescribeControlPanelResponse</a> smart constructor.
data DescribeControlPanelResponse
DescribeControlPanelResponse' :: Maybe ControlPanel -> Int -> DescribeControlPanelResponse

-- | Information about the control panel.
[$sel:controlPanel:DescribeControlPanelResponse'] :: DescribeControlPanelResponse -> Maybe ControlPanel

-- | The response's http status code.
[$sel:httpStatus:DescribeControlPanelResponse'] :: DescribeControlPanelResponse -> Int

-- | Create a value of <a>DescribeControlPanelResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:controlPanel:DescribeControlPanelResponse'</a>,
--   <a>describeControlPanelResponse_controlPanel</a> - Information about
--   the control panel.
--   
--   <a>$sel:httpStatus:DescribeControlPanelResponse'</a>,
--   <a>describeControlPanelResponse_httpStatus</a> - The response's http
--   status code.
newDescribeControlPanelResponse :: Int -> DescribeControlPanelResponse

-- | Information about the control panel.
describeControlPanelResponse_controlPanel :: Lens' DescribeControlPanelResponse (Maybe ControlPanel)

-- | The response's http status code.
describeControlPanelResponse_httpStatus :: Lens' DescribeControlPanelResponse Int
instance GHC.Generics.Generic Amazonka.Route53RecoveryControlConfig.DescribeControlPanel.DescribeControlPanel
instance GHC.Show.Show Amazonka.Route53RecoveryControlConfig.DescribeControlPanel.DescribeControlPanel
instance GHC.Read.Read Amazonka.Route53RecoveryControlConfig.DescribeControlPanel.DescribeControlPanel
instance GHC.Classes.Eq Amazonka.Route53RecoveryControlConfig.DescribeControlPanel.DescribeControlPanel
instance GHC.Generics.Generic Amazonka.Route53RecoveryControlConfig.DescribeControlPanel.DescribeControlPanelResponse
instance GHC.Show.Show Amazonka.Route53RecoveryControlConfig.DescribeControlPanel.DescribeControlPanelResponse
instance GHC.Read.Read Amazonka.Route53RecoveryControlConfig.DescribeControlPanel.DescribeControlPanelResponse
instance GHC.Classes.Eq Amazonka.Route53RecoveryControlConfig.DescribeControlPanel.DescribeControlPanelResponse
instance Amazonka.Types.AWSRequest Amazonka.Route53RecoveryControlConfig.DescribeControlPanel.DescribeControlPanel
instance Control.DeepSeq.NFData Amazonka.Route53RecoveryControlConfig.DescribeControlPanel.DescribeControlPanelResponse
instance Data.Hashable.Class.Hashable Amazonka.Route53RecoveryControlConfig.DescribeControlPanel.DescribeControlPanel
instance Control.DeepSeq.NFData Amazonka.Route53RecoveryControlConfig.DescribeControlPanel.DescribeControlPanel
instance Amazonka.Data.Headers.ToHeaders Amazonka.Route53RecoveryControlConfig.DescribeControlPanel.DescribeControlPanel
instance Amazonka.Data.Path.ToPath Amazonka.Route53RecoveryControlConfig.DescribeControlPanel.DescribeControlPanel
instance Amazonka.Data.Query.ToQuery Amazonka.Route53RecoveryControlConfig.DescribeControlPanel.DescribeControlPanel


-- | Display the details about a cluster. The response includes the cluster
--   name, endpoints, status, and Amazon Resource Name (ARN).
module Amazonka.Route53RecoveryControlConfig.DescribeCluster

-- | <i>See:</i> <a>newDescribeCluster</a> smart constructor.
data DescribeCluster
DescribeCluster' :: Text -> DescribeCluster

-- | The Amazon Resource Name (ARN) of the cluster that you're getting
--   details for.
[$sel:clusterArn:DescribeCluster'] :: DescribeCluster -> Text

-- | Create a value of <a>DescribeCluster</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clusterArn:DescribeCluster'</a>,
--   <a>describeCluster_clusterArn</a> - The Amazon Resource Name (ARN) of
--   the cluster that you're getting details for.
newDescribeCluster :: Text -> DescribeCluster

-- | The Amazon Resource Name (ARN) of the cluster that you're getting
--   details for.
describeCluster_clusterArn :: Lens' DescribeCluster Text

-- | <i>See:</i> <a>newDescribeClusterResponse</a> smart constructor.
data DescribeClusterResponse
DescribeClusterResponse' :: Maybe Cluster -> Int -> DescribeClusterResponse

-- | The cluster for the DescribeCluster request.
[$sel:cluster:DescribeClusterResponse'] :: DescribeClusterResponse -> Maybe Cluster

-- | The response's http status code.
[$sel:httpStatus:DescribeClusterResponse'] :: DescribeClusterResponse -> Int

-- | Create a value of <a>DescribeClusterResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cluster:DescribeClusterResponse'</a>,
--   <a>describeClusterResponse_cluster</a> - The cluster for the
--   DescribeCluster request.
--   
--   <a>$sel:httpStatus:DescribeClusterResponse'</a>,
--   <a>describeClusterResponse_httpStatus</a> - The response's http status
--   code.
newDescribeClusterResponse :: Int -> DescribeClusterResponse

-- | The cluster for the DescribeCluster request.
describeClusterResponse_cluster :: Lens' DescribeClusterResponse (Maybe Cluster)

-- | The response's http status code.
describeClusterResponse_httpStatus :: Lens' DescribeClusterResponse Int
instance GHC.Generics.Generic Amazonka.Route53RecoveryControlConfig.DescribeCluster.DescribeCluster
instance GHC.Show.Show Amazonka.Route53RecoveryControlConfig.DescribeCluster.DescribeCluster
instance GHC.Read.Read Amazonka.Route53RecoveryControlConfig.DescribeCluster.DescribeCluster
instance GHC.Classes.Eq Amazonka.Route53RecoveryControlConfig.DescribeCluster.DescribeCluster
instance GHC.Generics.Generic Amazonka.Route53RecoveryControlConfig.DescribeCluster.DescribeClusterResponse
instance GHC.Show.Show Amazonka.Route53RecoveryControlConfig.DescribeCluster.DescribeClusterResponse
instance GHC.Read.Read Amazonka.Route53RecoveryControlConfig.DescribeCluster.DescribeClusterResponse
instance GHC.Classes.Eq Amazonka.Route53RecoveryControlConfig.DescribeCluster.DescribeClusterResponse
instance Amazonka.Types.AWSRequest Amazonka.Route53RecoveryControlConfig.DescribeCluster.DescribeCluster
instance Control.DeepSeq.NFData Amazonka.Route53RecoveryControlConfig.DescribeCluster.DescribeClusterResponse
instance Data.Hashable.Class.Hashable Amazonka.Route53RecoveryControlConfig.DescribeCluster.DescribeCluster
instance Control.DeepSeq.NFData Amazonka.Route53RecoveryControlConfig.DescribeCluster.DescribeCluster
instance Amazonka.Data.Headers.ToHeaders Amazonka.Route53RecoveryControlConfig.DescribeCluster.DescribeCluster
instance Amazonka.Data.Path.ToPath Amazonka.Route53RecoveryControlConfig.DescribeCluster.DescribeCluster
instance Amazonka.Data.Query.ToQuery Amazonka.Route53RecoveryControlConfig.DescribeCluster.DescribeCluster


-- | Deletes a safety rule.
--   
--   /&gt;
module Amazonka.Route53RecoveryControlConfig.DeleteSafetyRule

-- | <i>See:</i> <a>newDeleteSafetyRule</a> smart constructor.
data DeleteSafetyRule
DeleteSafetyRule' :: Text -> DeleteSafetyRule

-- | The request body that you include when you update a safety rule.
[$sel:safetyRuleArn:DeleteSafetyRule'] :: DeleteSafetyRule -> Text

-- | Create a value of <a>DeleteSafetyRule</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:safetyRuleArn:DeleteSafetyRule'</a>,
--   <a>deleteSafetyRule_safetyRuleArn</a> - The request body that you
--   include when you update a safety rule.
newDeleteSafetyRule :: Text -> DeleteSafetyRule

-- | The request body that you include when you update a safety rule.
deleteSafetyRule_safetyRuleArn :: Lens' DeleteSafetyRule Text

-- | <i>See:</i> <a>newDeleteSafetyRuleResponse</a> smart constructor.
data DeleteSafetyRuleResponse
DeleteSafetyRuleResponse' :: Int -> DeleteSafetyRuleResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteSafetyRuleResponse'] :: DeleteSafetyRuleResponse -> Int

-- | Create a value of <a>DeleteSafetyRuleResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteSafetyRuleResponse'</a>,
--   <a>deleteSafetyRuleResponse_httpStatus</a> - The response's http
--   status code.
newDeleteSafetyRuleResponse :: Int -> DeleteSafetyRuleResponse

-- | The response's http status code.
deleteSafetyRuleResponse_httpStatus :: Lens' DeleteSafetyRuleResponse Int
instance GHC.Generics.Generic Amazonka.Route53RecoveryControlConfig.DeleteSafetyRule.DeleteSafetyRule
instance GHC.Show.Show Amazonka.Route53RecoveryControlConfig.DeleteSafetyRule.DeleteSafetyRule
instance GHC.Read.Read Amazonka.Route53RecoveryControlConfig.DeleteSafetyRule.DeleteSafetyRule
instance GHC.Classes.Eq Amazonka.Route53RecoveryControlConfig.DeleteSafetyRule.DeleteSafetyRule
instance GHC.Generics.Generic Amazonka.Route53RecoveryControlConfig.DeleteSafetyRule.DeleteSafetyRuleResponse
instance GHC.Show.Show Amazonka.Route53RecoveryControlConfig.DeleteSafetyRule.DeleteSafetyRuleResponse
instance GHC.Read.Read Amazonka.Route53RecoveryControlConfig.DeleteSafetyRule.DeleteSafetyRuleResponse
instance GHC.Classes.Eq Amazonka.Route53RecoveryControlConfig.DeleteSafetyRule.DeleteSafetyRuleResponse
instance Amazonka.Types.AWSRequest Amazonka.Route53RecoveryControlConfig.DeleteSafetyRule.DeleteSafetyRule
instance Control.DeepSeq.NFData Amazonka.Route53RecoveryControlConfig.DeleteSafetyRule.DeleteSafetyRuleResponse
instance Data.Hashable.Class.Hashable Amazonka.Route53RecoveryControlConfig.DeleteSafetyRule.DeleteSafetyRule
instance Control.DeepSeq.NFData Amazonka.Route53RecoveryControlConfig.DeleteSafetyRule.DeleteSafetyRule
instance Amazonka.Data.Headers.ToHeaders Amazonka.Route53RecoveryControlConfig.DeleteSafetyRule.DeleteSafetyRule
instance Amazonka.Data.Path.ToPath Amazonka.Route53RecoveryControlConfig.DeleteSafetyRule.DeleteSafetyRule
instance Amazonka.Data.Query.ToQuery Amazonka.Route53RecoveryControlConfig.DeleteSafetyRule.DeleteSafetyRule


-- | Deletes a routing control.
module Amazonka.Route53RecoveryControlConfig.DeleteRoutingControl

-- | <i>See:</i> <a>newDeleteRoutingControl</a> smart constructor.
data DeleteRoutingControl
DeleteRoutingControl' :: Text -> DeleteRoutingControl

-- | The Amazon Resource Name (ARN) of the routing control that you're
--   deleting.
[$sel:routingControlArn:DeleteRoutingControl'] :: DeleteRoutingControl -> Text

-- | Create a value of <a>DeleteRoutingControl</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:routingControlArn:DeleteRoutingControl'</a>,
--   <a>deleteRoutingControl_routingControlArn</a> - The Amazon Resource
--   Name (ARN) of the routing control that you're deleting.
newDeleteRoutingControl :: Text -> DeleteRoutingControl

-- | The Amazon Resource Name (ARN) of the routing control that you're
--   deleting.
deleteRoutingControl_routingControlArn :: Lens' DeleteRoutingControl Text

-- | <i>See:</i> <a>newDeleteRoutingControlResponse</a> smart constructor.
data DeleteRoutingControlResponse
DeleteRoutingControlResponse' :: Int -> DeleteRoutingControlResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteRoutingControlResponse'] :: DeleteRoutingControlResponse -> Int

-- | Create a value of <a>DeleteRoutingControlResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteRoutingControlResponse'</a>,
--   <a>deleteRoutingControlResponse_httpStatus</a> - The response's http
--   status code.
newDeleteRoutingControlResponse :: Int -> DeleteRoutingControlResponse

-- | The response's http status code.
deleteRoutingControlResponse_httpStatus :: Lens' DeleteRoutingControlResponse Int
instance GHC.Generics.Generic Amazonka.Route53RecoveryControlConfig.DeleteRoutingControl.DeleteRoutingControl
instance GHC.Show.Show Amazonka.Route53RecoveryControlConfig.DeleteRoutingControl.DeleteRoutingControl
instance GHC.Read.Read Amazonka.Route53RecoveryControlConfig.DeleteRoutingControl.DeleteRoutingControl
instance GHC.Classes.Eq Amazonka.Route53RecoveryControlConfig.DeleteRoutingControl.DeleteRoutingControl
instance GHC.Generics.Generic Amazonka.Route53RecoveryControlConfig.DeleteRoutingControl.DeleteRoutingControlResponse
instance GHC.Show.Show Amazonka.Route53RecoveryControlConfig.DeleteRoutingControl.DeleteRoutingControlResponse
instance GHC.Read.Read Amazonka.Route53RecoveryControlConfig.DeleteRoutingControl.DeleteRoutingControlResponse
instance GHC.Classes.Eq Amazonka.Route53RecoveryControlConfig.DeleteRoutingControl.DeleteRoutingControlResponse
instance Amazonka.Types.AWSRequest Amazonka.Route53RecoveryControlConfig.DeleteRoutingControl.DeleteRoutingControl
instance Control.DeepSeq.NFData Amazonka.Route53RecoveryControlConfig.DeleteRoutingControl.DeleteRoutingControlResponse
instance Data.Hashable.Class.Hashable Amazonka.Route53RecoveryControlConfig.DeleteRoutingControl.DeleteRoutingControl
instance Control.DeepSeq.NFData Amazonka.Route53RecoveryControlConfig.DeleteRoutingControl.DeleteRoutingControl
instance Amazonka.Data.Headers.ToHeaders Amazonka.Route53RecoveryControlConfig.DeleteRoutingControl.DeleteRoutingControl
instance Amazonka.Data.Path.ToPath Amazonka.Route53RecoveryControlConfig.DeleteRoutingControl.DeleteRoutingControl
instance Amazonka.Data.Query.ToQuery Amazonka.Route53RecoveryControlConfig.DeleteRoutingControl.DeleteRoutingControl


-- | Deletes a control panel.
module Amazonka.Route53RecoveryControlConfig.DeleteControlPanel

-- | <i>See:</i> <a>newDeleteControlPanel</a> smart constructor.
data DeleteControlPanel
DeleteControlPanel' :: Text -> DeleteControlPanel

-- | The Amazon Resource Name (ARN) of the control panel that you're
--   deleting.
[$sel:controlPanelArn:DeleteControlPanel'] :: DeleteControlPanel -> Text

-- | Create a value of <a>DeleteControlPanel</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:controlPanelArn:DeleteControlPanel'</a>,
--   <a>deleteControlPanel_controlPanelArn</a> - The Amazon Resource Name
--   (ARN) of the control panel that you're deleting.
newDeleteControlPanel :: Text -> DeleteControlPanel

-- | The Amazon Resource Name (ARN) of the control panel that you're
--   deleting.
deleteControlPanel_controlPanelArn :: Lens' DeleteControlPanel Text

-- | <i>See:</i> <a>newDeleteControlPanelResponse</a> smart constructor.
data DeleteControlPanelResponse
DeleteControlPanelResponse' :: Int -> DeleteControlPanelResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteControlPanelResponse'] :: DeleteControlPanelResponse -> Int

-- | Create a value of <a>DeleteControlPanelResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteControlPanelResponse'</a>,
--   <a>deleteControlPanelResponse_httpStatus</a> - The response's http
--   status code.
newDeleteControlPanelResponse :: Int -> DeleteControlPanelResponse

-- | The response's http status code.
deleteControlPanelResponse_httpStatus :: Lens' DeleteControlPanelResponse Int
instance GHC.Generics.Generic Amazonka.Route53RecoveryControlConfig.DeleteControlPanel.DeleteControlPanel
instance GHC.Show.Show Amazonka.Route53RecoveryControlConfig.DeleteControlPanel.DeleteControlPanel
instance GHC.Read.Read Amazonka.Route53RecoveryControlConfig.DeleteControlPanel.DeleteControlPanel
instance GHC.Classes.Eq Amazonka.Route53RecoveryControlConfig.DeleteControlPanel.DeleteControlPanel
instance GHC.Generics.Generic Amazonka.Route53RecoveryControlConfig.DeleteControlPanel.DeleteControlPanelResponse
instance GHC.Show.Show Amazonka.Route53RecoveryControlConfig.DeleteControlPanel.DeleteControlPanelResponse
instance GHC.Read.Read Amazonka.Route53RecoveryControlConfig.DeleteControlPanel.DeleteControlPanelResponse
instance GHC.Classes.Eq Amazonka.Route53RecoveryControlConfig.DeleteControlPanel.DeleteControlPanelResponse
instance Amazonka.Types.AWSRequest Amazonka.Route53RecoveryControlConfig.DeleteControlPanel.DeleteControlPanel
instance Control.DeepSeq.NFData Amazonka.Route53RecoveryControlConfig.DeleteControlPanel.DeleteControlPanelResponse
instance Data.Hashable.Class.Hashable Amazonka.Route53RecoveryControlConfig.DeleteControlPanel.DeleteControlPanel
instance Control.DeepSeq.NFData Amazonka.Route53RecoveryControlConfig.DeleteControlPanel.DeleteControlPanel
instance Amazonka.Data.Headers.ToHeaders Amazonka.Route53RecoveryControlConfig.DeleteControlPanel.DeleteControlPanel
instance Amazonka.Data.Path.ToPath Amazonka.Route53RecoveryControlConfig.DeleteControlPanel.DeleteControlPanel
instance Amazonka.Data.Query.ToQuery Amazonka.Route53RecoveryControlConfig.DeleteControlPanel.DeleteControlPanel


-- | Delete a cluster.
module Amazonka.Route53RecoveryControlConfig.DeleteCluster

-- | <i>See:</i> <a>newDeleteCluster</a> smart constructor.
data DeleteCluster
DeleteCluster' :: Text -> DeleteCluster

-- | The Amazon Resource Name (ARN) of the cluster that you're deleting.
[$sel:clusterArn:DeleteCluster'] :: DeleteCluster -> Text

-- | Create a value of <a>DeleteCluster</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clusterArn:DeleteCluster'</a>, <a>deleteCluster_clusterArn</a>
--   - The Amazon Resource Name (ARN) of the cluster that you're deleting.
newDeleteCluster :: Text -> DeleteCluster

-- | The Amazon Resource Name (ARN) of the cluster that you're deleting.
deleteCluster_clusterArn :: Lens' DeleteCluster Text

-- | <i>See:</i> <a>newDeleteClusterResponse</a> smart constructor.
data DeleteClusterResponse
DeleteClusterResponse' :: Int -> DeleteClusterResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteClusterResponse'] :: DeleteClusterResponse -> Int

-- | Create a value of <a>DeleteClusterResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteClusterResponse'</a>,
--   <a>deleteClusterResponse_httpStatus</a> - The response's http status
--   code.
newDeleteClusterResponse :: Int -> DeleteClusterResponse

-- | The response's http status code.
deleteClusterResponse_httpStatus :: Lens' DeleteClusterResponse Int
instance GHC.Generics.Generic Amazonka.Route53RecoveryControlConfig.DeleteCluster.DeleteCluster
instance GHC.Show.Show Amazonka.Route53RecoveryControlConfig.DeleteCluster.DeleteCluster
instance GHC.Read.Read Amazonka.Route53RecoveryControlConfig.DeleteCluster.DeleteCluster
instance GHC.Classes.Eq Amazonka.Route53RecoveryControlConfig.DeleteCluster.DeleteCluster
instance GHC.Generics.Generic Amazonka.Route53RecoveryControlConfig.DeleteCluster.DeleteClusterResponse
instance GHC.Show.Show Amazonka.Route53RecoveryControlConfig.DeleteCluster.DeleteClusterResponse
instance GHC.Read.Read Amazonka.Route53RecoveryControlConfig.DeleteCluster.DeleteClusterResponse
instance GHC.Classes.Eq Amazonka.Route53RecoveryControlConfig.DeleteCluster.DeleteClusterResponse
instance Amazonka.Types.AWSRequest Amazonka.Route53RecoveryControlConfig.DeleteCluster.DeleteCluster
instance Control.DeepSeq.NFData Amazonka.Route53RecoveryControlConfig.DeleteCluster.DeleteClusterResponse
instance Data.Hashable.Class.Hashable Amazonka.Route53RecoveryControlConfig.DeleteCluster.DeleteCluster
instance Control.DeepSeq.NFData Amazonka.Route53RecoveryControlConfig.DeleteCluster.DeleteCluster
instance Amazonka.Data.Headers.ToHeaders Amazonka.Route53RecoveryControlConfig.DeleteCluster.DeleteCluster
instance Amazonka.Data.Path.ToPath Amazonka.Route53RecoveryControlConfig.DeleteCluster.DeleteCluster
instance Amazonka.Data.Query.ToQuery Amazonka.Route53RecoveryControlConfig.DeleteCluster.DeleteCluster


-- | Creates a safety rule in a control panel. Safety rules let you add
--   safeguards around enabling and disabling routing controls, to help
--   prevent unexpected outcomes.
--   
--   There are two types of safety rules: assertion rules and gating rules.
--   
--   Assertion rule: An assertion rule enforces that, when a routing
--   control state is changed, the criteria set by the rule configuration
--   is met. Otherwise, the change to the routing control is not accepted.
--   
--   Gating rule: A gating rule verifies that a set of gating controls
--   evaluates as true, based on a rule configuration that you specify. If
--   the gating rule evaluates to true, Amazon Route 53 Application
--   Recovery Controller allows a set of routing control state changes to
--   run and complete against the set of target controls.
module Amazonka.Route53RecoveryControlConfig.CreateSafetyRule

-- | The request body that you include when you create a safety rule.
--   
--   <i>See:</i> <a>newCreateSafetyRule</a> smart constructor.
data CreateSafetyRule
CreateSafetyRule' :: Maybe NewAssertionRule -> Maybe Text -> Maybe NewGatingRule -> CreateSafetyRule
[$sel:assertionRule:CreateSafetyRule'] :: CreateSafetyRule -> Maybe NewAssertionRule

-- | Unique client idempotency token.
[$sel:clientToken:CreateSafetyRule'] :: CreateSafetyRule -> Maybe Text
[$sel:gatingRule:CreateSafetyRule'] :: CreateSafetyRule -> Maybe NewGatingRule

-- | Create a value of <a>CreateSafetyRule</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:assertionRule:CreateSafetyRule'</a>,
--   <a>createSafetyRule_assertionRule</a> - Undocumented member.
--   
--   <a>$sel:clientToken:CreateSafetyRule'</a>,
--   <a>createSafetyRule_clientToken</a> - Unique client idempotency token.
--   
--   <a>$sel:gatingRule:CreateSafetyRule'</a>,
--   <a>createSafetyRule_gatingRule</a> - Undocumented member.
newCreateSafetyRule :: CreateSafetyRule

-- | Undocumented member.
createSafetyRule_assertionRule :: Lens' CreateSafetyRule (Maybe NewAssertionRule)

-- | Unique client idempotency token.
createSafetyRule_clientToken :: Lens' CreateSafetyRule (Maybe Text)

-- | Undocumented member.
createSafetyRule_gatingRule :: Lens' CreateSafetyRule (Maybe NewGatingRule)

-- | <i>See:</i> <a>newCreateSafetyRuleResponse</a> smart constructor.
data CreateSafetyRuleResponse
CreateSafetyRuleResponse' :: Maybe AssertionRule -> Maybe GatingRule -> Int -> CreateSafetyRuleResponse
[$sel:assertionRule:CreateSafetyRuleResponse'] :: CreateSafetyRuleResponse -> Maybe AssertionRule
[$sel:gatingRule:CreateSafetyRuleResponse'] :: CreateSafetyRuleResponse -> Maybe GatingRule

-- | The response's http status code.
[$sel:httpStatus:CreateSafetyRuleResponse'] :: CreateSafetyRuleResponse -> Int

-- | Create a value of <a>CreateSafetyRuleResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:assertionRule:CreateSafetyRule'</a>,
--   <a>createSafetyRuleResponse_assertionRule</a> - Undocumented member.
--   
--   <a>$sel:gatingRule:CreateSafetyRule'</a>,
--   <a>createSafetyRuleResponse_gatingRule</a> - Undocumented member.
--   
--   <a>$sel:httpStatus:CreateSafetyRuleResponse'</a>,
--   <a>createSafetyRuleResponse_httpStatus</a> - The response's http
--   status code.
newCreateSafetyRuleResponse :: Int -> CreateSafetyRuleResponse

-- | Undocumented member.
createSafetyRuleResponse_assertionRule :: Lens' CreateSafetyRuleResponse (Maybe AssertionRule)

-- | Undocumented member.
createSafetyRuleResponse_gatingRule :: Lens' CreateSafetyRuleResponse (Maybe GatingRule)

-- | The response's http status code.
createSafetyRuleResponse_httpStatus :: Lens' CreateSafetyRuleResponse Int
instance GHC.Generics.Generic Amazonka.Route53RecoveryControlConfig.CreateSafetyRule.CreateSafetyRule
instance GHC.Show.Show Amazonka.Route53RecoveryControlConfig.CreateSafetyRule.CreateSafetyRule
instance GHC.Read.Read Amazonka.Route53RecoveryControlConfig.CreateSafetyRule.CreateSafetyRule
instance GHC.Classes.Eq Amazonka.Route53RecoveryControlConfig.CreateSafetyRule.CreateSafetyRule
instance GHC.Generics.Generic Amazonka.Route53RecoveryControlConfig.CreateSafetyRule.CreateSafetyRuleResponse
instance GHC.Show.Show Amazonka.Route53RecoveryControlConfig.CreateSafetyRule.CreateSafetyRuleResponse
instance GHC.Read.Read Amazonka.Route53RecoveryControlConfig.CreateSafetyRule.CreateSafetyRuleResponse
instance GHC.Classes.Eq Amazonka.Route53RecoveryControlConfig.CreateSafetyRule.CreateSafetyRuleResponse
instance Amazonka.Types.AWSRequest Amazonka.Route53RecoveryControlConfig.CreateSafetyRule.CreateSafetyRule
instance Control.DeepSeq.NFData Amazonka.Route53RecoveryControlConfig.CreateSafetyRule.CreateSafetyRuleResponse
instance Data.Hashable.Class.Hashable Amazonka.Route53RecoveryControlConfig.CreateSafetyRule.CreateSafetyRule
instance Control.DeepSeq.NFData Amazonka.Route53RecoveryControlConfig.CreateSafetyRule.CreateSafetyRule
instance Amazonka.Data.Headers.ToHeaders Amazonka.Route53RecoveryControlConfig.CreateSafetyRule.CreateSafetyRule
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Route53RecoveryControlConfig.CreateSafetyRule.CreateSafetyRule
instance Amazonka.Data.Path.ToPath Amazonka.Route53RecoveryControlConfig.CreateSafetyRule.CreateSafetyRule
instance Amazonka.Data.Query.ToQuery Amazonka.Route53RecoveryControlConfig.CreateSafetyRule.CreateSafetyRule


-- | Creates a new routing control.
--   
--   A routing control has one of two states: ON and OFF. You can map the
--   routing control state to the state of an Amazon Route 53 health check,
--   which can be used to control traffic routing.
--   
--   To get or update the routing control state, see the Recovery Cluster
--   (data plane) API actions for Amazon Route 53 Application Recovery
--   Controller.
module Amazonka.Route53RecoveryControlConfig.CreateRoutingControl

-- | The details of the routing control that you're creating.
--   
--   <i>See:</i> <a>newCreateRoutingControl</a> smart constructor.
data CreateRoutingControl
CreateRoutingControl' :: Maybe Text -> Maybe Text -> Text -> Text -> CreateRoutingControl

-- | The Amazon Resource Name (ARN) of the control panel that includes the
--   routing control.
[$sel:controlPanelArn:CreateRoutingControl'] :: CreateRoutingControl -> Maybe Text

-- | Unique client idempotency token.
[$sel:clientToken:CreateRoutingControl'] :: CreateRoutingControl -> Maybe Text

-- | The Amazon Resource Name (ARN) of the cluster that includes the
--   routing control.
[$sel:clusterArn:CreateRoutingControl'] :: CreateRoutingControl -> Text

-- | The name of the routing control.
[$sel:routingControlName:CreateRoutingControl'] :: CreateRoutingControl -> Text

-- | Create a value of <a>CreateRoutingControl</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:controlPanelArn:CreateRoutingControl'</a>,
--   <a>createRoutingControl_controlPanelArn</a> - The Amazon Resource Name
--   (ARN) of the control panel that includes the routing control.
--   
--   <a>$sel:clientToken:CreateRoutingControl'</a>,
--   <a>createRoutingControl_clientToken</a> - Unique client idempotency
--   token.
--   
--   <a>$sel:clusterArn:CreateRoutingControl'</a>,
--   <a>createRoutingControl_clusterArn</a> - The Amazon Resource Name
--   (ARN) of the cluster that includes the routing control.
--   
--   <a>$sel:routingControlName:CreateRoutingControl'</a>,
--   <a>createRoutingControl_routingControlName</a> - The name of the
--   routing control.
newCreateRoutingControl :: Text -> Text -> CreateRoutingControl

-- | The Amazon Resource Name (ARN) of the control panel that includes the
--   routing control.
createRoutingControl_controlPanelArn :: Lens' CreateRoutingControl (Maybe Text)

-- | Unique client idempotency token.
createRoutingControl_clientToken :: Lens' CreateRoutingControl (Maybe Text)

-- | The Amazon Resource Name (ARN) of the cluster that includes the
--   routing control.
createRoutingControl_clusterArn :: Lens' CreateRoutingControl Text

-- | The name of the routing control.
createRoutingControl_routingControlName :: Lens' CreateRoutingControl Text

-- | <i>See:</i> <a>newCreateRoutingControlResponse</a> smart constructor.
data CreateRoutingControlResponse
CreateRoutingControlResponse' :: Maybe RoutingControl -> Int -> CreateRoutingControlResponse

-- | The routing control that is created.
[$sel:routingControl:CreateRoutingControlResponse'] :: CreateRoutingControlResponse -> Maybe RoutingControl

-- | The response's http status code.
[$sel:httpStatus:CreateRoutingControlResponse'] :: CreateRoutingControlResponse -> Int

-- | Create a value of <a>CreateRoutingControlResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:routingControl:CreateRoutingControlResponse'</a>,
--   <a>createRoutingControlResponse_routingControl</a> - The routing
--   control that is created.
--   
--   <a>$sel:httpStatus:CreateRoutingControlResponse'</a>,
--   <a>createRoutingControlResponse_httpStatus</a> - The response's http
--   status code.
newCreateRoutingControlResponse :: Int -> CreateRoutingControlResponse

-- | The routing control that is created.
createRoutingControlResponse_routingControl :: Lens' CreateRoutingControlResponse (Maybe RoutingControl)

-- | The response's http status code.
createRoutingControlResponse_httpStatus :: Lens' CreateRoutingControlResponse Int
instance GHC.Generics.Generic Amazonka.Route53RecoveryControlConfig.CreateRoutingControl.CreateRoutingControl
instance GHC.Show.Show Amazonka.Route53RecoveryControlConfig.CreateRoutingControl.CreateRoutingControl
instance GHC.Read.Read Amazonka.Route53RecoveryControlConfig.CreateRoutingControl.CreateRoutingControl
instance GHC.Classes.Eq Amazonka.Route53RecoveryControlConfig.CreateRoutingControl.CreateRoutingControl
instance GHC.Generics.Generic Amazonka.Route53RecoveryControlConfig.CreateRoutingControl.CreateRoutingControlResponse
instance GHC.Show.Show Amazonka.Route53RecoveryControlConfig.CreateRoutingControl.CreateRoutingControlResponse
instance GHC.Read.Read Amazonka.Route53RecoveryControlConfig.CreateRoutingControl.CreateRoutingControlResponse
instance GHC.Classes.Eq Amazonka.Route53RecoveryControlConfig.CreateRoutingControl.CreateRoutingControlResponse
instance Amazonka.Types.AWSRequest Amazonka.Route53RecoveryControlConfig.CreateRoutingControl.CreateRoutingControl
instance Control.DeepSeq.NFData Amazonka.Route53RecoveryControlConfig.CreateRoutingControl.CreateRoutingControlResponse
instance Data.Hashable.Class.Hashable Amazonka.Route53RecoveryControlConfig.CreateRoutingControl.CreateRoutingControl
instance Control.DeepSeq.NFData Amazonka.Route53RecoveryControlConfig.CreateRoutingControl.CreateRoutingControl
instance Amazonka.Data.Headers.ToHeaders Amazonka.Route53RecoveryControlConfig.CreateRoutingControl.CreateRoutingControl
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Route53RecoveryControlConfig.CreateRoutingControl.CreateRoutingControl
instance Amazonka.Data.Path.ToPath Amazonka.Route53RecoveryControlConfig.CreateRoutingControl.CreateRoutingControl
instance Amazonka.Data.Query.ToQuery Amazonka.Route53RecoveryControlConfig.CreateRoutingControl.CreateRoutingControl


-- | Creates a new control panel. A control panel represents a group of
--   routing controls that can be changed together in a single transaction.
--   You can use a control panel to centrally view the operational status
--   of applications across your organization, and trigger multi-app
--   failovers in a single transaction, for example, to fail over an
--   Availability Zone or AWS Region.
module Amazonka.Route53RecoveryControlConfig.CreateControlPanel

-- | The details of the control panel that you're creating.
--   
--   <i>See:</i> <a>newCreateControlPanel</a> smart constructor.
data CreateControlPanel
CreateControlPanel' :: Maybe Text -> Text -> Text -> CreateControlPanel

-- | Unique client idempotency token.
[$sel:clientToken:CreateControlPanel'] :: CreateControlPanel -> Maybe Text

-- | The Amazon Resource Name (ARN) of the cluster for the control panel.
[$sel:clusterArn:CreateControlPanel'] :: CreateControlPanel -> Text

-- | The name of the control panel.
[$sel:controlPanelName:CreateControlPanel'] :: CreateControlPanel -> Text

-- | Create a value of <a>CreateControlPanel</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientToken:CreateControlPanel'</a>,
--   <a>createControlPanel_clientToken</a> - Unique client idempotency
--   token.
--   
--   <a>$sel:clusterArn:CreateControlPanel'</a>,
--   <a>createControlPanel_clusterArn</a> - The Amazon Resource Name (ARN)
--   of the cluster for the control panel.
--   
--   <a>$sel:controlPanelName:CreateControlPanel'</a>,
--   <a>createControlPanel_controlPanelName</a> - The name of the control
--   panel.
newCreateControlPanel :: Text -> Text -> CreateControlPanel

-- | Unique client idempotency token.
createControlPanel_clientToken :: Lens' CreateControlPanel (Maybe Text)

-- | The Amazon Resource Name (ARN) of the cluster for the control panel.
createControlPanel_clusterArn :: Lens' CreateControlPanel Text

-- | The name of the control panel.
createControlPanel_controlPanelName :: Lens' CreateControlPanel Text

-- | <i>See:</i> <a>newCreateControlPanelResponse</a> smart constructor.
data CreateControlPanelResponse
CreateControlPanelResponse' :: Maybe ControlPanel -> Int -> CreateControlPanelResponse

-- | Information about a control panel.
[$sel:controlPanel:CreateControlPanelResponse'] :: CreateControlPanelResponse -> Maybe ControlPanel

-- | The response's http status code.
[$sel:httpStatus:CreateControlPanelResponse'] :: CreateControlPanelResponse -> Int

-- | Create a value of <a>CreateControlPanelResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:controlPanel:CreateControlPanelResponse'</a>,
--   <a>createControlPanelResponse_controlPanel</a> - Information about a
--   control panel.
--   
--   <a>$sel:httpStatus:CreateControlPanelResponse'</a>,
--   <a>createControlPanelResponse_httpStatus</a> - The response's http
--   status code.
newCreateControlPanelResponse :: Int -> CreateControlPanelResponse

-- | Information about a control panel.
createControlPanelResponse_controlPanel :: Lens' CreateControlPanelResponse (Maybe ControlPanel)

-- | The response's http status code.
createControlPanelResponse_httpStatus :: Lens' CreateControlPanelResponse Int
instance GHC.Generics.Generic Amazonka.Route53RecoveryControlConfig.CreateControlPanel.CreateControlPanel
instance GHC.Show.Show Amazonka.Route53RecoveryControlConfig.CreateControlPanel.CreateControlPanel
instance GHC.Read.Read Amazonka.Route53RecoveryControlConfig.CreateControlPanel.CreateControlPanel
instance GHC.Classes.Eq Amazonka.Route53RecoveryControlConfig.CreateControlPanel.CreateControlPanel
instance GHC.Generics.Generic Amazonka.Route53RecoveryControlConfig.CreateControlPanel.CreateControlPanelResponse
instance GHC.Show.Show Amazonka.Route53RecoveryControlConfig.CreateControlPanel.CreateControlPanelResponse
instance GHC.Read.Read Amazonka.Route53RecoveryControlConfig.CreateControlPanel.CreateControlPanelResponse
instance GHC.Classes.Eq Amazonka.Route53RecoveryControlConfig.CreateControlPanel.CreateControlPanelResponse
instance Amazonka.Types.AWSRequest Amazonka.Route53RecoveryControlConfig.CreateControlPanel.CreateControlPanel
instance Control.DeepSeq.NFData Amazonka.Route53RecoveryControlConfig.CreateControlPanel.CreateControlPanelResponse
instance Data.Hashable.Class.Hashable Amazonka.Route53RecoveryControlConfig.CreateControlPanel.CreateControlPanel
instance Control.DeepSeq.NFData Amazonka.Route53RecoveryControlConfig.CreateControlPanel.CreateControlPanel
instance Amazonka.Data.Headers.ToHeaders Amazonka.Route53RecoveryControlConfig.CreateControlPanel.CreateControlPanel
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Route53RecoveryControlConfig.CreateControlPanel.CreateControlPanel
instance Amazonka.Data.Path.ToPath Amazonka.Route53RecoveryControlConfig.CreateControlPanel.CreateControlPanel
instance Amazonka.Data.Query.ToQuery Amazonka.Route53RecoveryControlConfig.CreateControlPanel.CreateControlPanel


-- | Create a new cluster. A cluster is a set of redundant Regional
--   endpoints against which you can run API calls to update or get the
--   state of one or more routing controls. Each cluster has a name,
--   status, Amazon Resource Name (ARN), and an array of the five cluster
--   endpoints (one for each supported Amazon Web Services Region) that you
--   can use with API calls to the Amazon Route 53 Application Recovery
--   Controller cluster data plane.
module Amazonka.Route53RecoveryControlConfig.CreateCluster

-- | Creates a cluster.
--   
--   <i>See:</i> <a>newCreateCluster</a> smart constructor.
data CreateCluster
CreateCluster' :: Maybe Text -> Text -> CreateCluster

-- | Unique client idempotency token.
[$sel:clientToken:CreateCluster'] :: CreateCluster -> Maybe Text

-- | The name of the cluster.
[$sel:clusterName:CreateCluster'] :: CreateCluster -> Text

-- | Create a value of <a>CreateCluster</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientToken:CreateCluster'</a>,
--   <a>createCluster_clientToken</a> - Unique client idempotency token.
--   
--   <a>$sel:clusterName:CreateCluster'</a>,
--   <a>createCluster_clusterName</a> - The name of the cluster.
newCreateCluster :: Text -> CreateCluster

-- | Unique client idempotency token.
createCluster_clientToken :: Lens' CreateCluster (Maybe Text)

-- | The name of the cluster.
createCluster_clusterName :: Lens' CreateCluster Text

-- | <i>See:</i> <a>newCreateClusterResponse</a> smart constructor.
data CreateClusterResponse
CreateClusterResponse' :: Maybe Cluster -> Int -> CreateClusterResponse

-- | The cluster that was created.
[$sel:cluster:CreateClusterResponse'] :: CreateClusterResponse -> Maybe Cluster

-- | The response's http status code.
[$sel:httpStatus:CreateClusterResponse'] :: CreateClusterResponse -> Int

-- | Create a value of <a>CreateClusterResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cluster:CreateClusterResponse'</a>,
--   <a>createClusterResponse_cluster</a> - The cluster that was created.
--   
--   <a>$sel:httpStatus:CreateClusterResponse'</a>,
--   <a>createClusterResponse_httpStatus</a> - The response's http status
--   code.
newCreateClusterResponse :: Int -> CreateClusterResponse

-- | The cluster that was created.
createClusterResponse_cluster :: Lens' CreateClusterResponse (Maybe Cluster)

-- | The response's http status code.
createClusterResponse_httpStatus :: Lens' CreateClusterResponse Int
instance GHC.Generics.Generic Amazonka.Route53RecoveryControlConfig.CreateCluster.CreateCluster
instance GHC.Show.Show Amazonka.Route53RecoveryControlConfig.CreateCluster.CreateCluster
instance GHC.Read.Read Amazonka.Route53RecoveryControlConfig.CreateCluster.CreateCluster
instance GHC.Classes.Eq Amazonka.Route53RecoveryControlConfig.CreateCluster.CreateCluster
instance GHC.Generics.Generic Amazonka.Route53RecoveryControlConfig.CreateCluster.CreateClusterResponse
instance GHC.Show.Show Amazonka.Route53RecoveryControlConfig.CreateCluster.CreateClusterResponse
instance GHC.Read.Read Amazonka.Route53RecoveryControlConfig.CreateCluster.CreateClusterResponse
instance GHC.Classes.Eq Amazonka.Route53RecoveryControlConfig.CreateCluster.CreateClusterResponse
instance Amazonka.Types.AWSRequest Amazonka.Route53RecoveryControlConfig.CreateCluster.CreateCluster
instance Control.DeepSeq.NFData Amazonka.Route53RecoveryControlConfig.CreateCluster.CreateClusterResponse
instance Data.Hashable.Class.Hashable Amazonka.Route53RecoveryControlConfig.CreateCluster.CreateCluster
instance Control.DeepSeq.NFData Amazonka.Route53RecoveryControlConfig.CreateCluster.CreateCluster
instance Amazonka.Data.Headers.ToHeaders Amazonka.Route53RecoveryControlConfig.CreateCluster.CreateCluster
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Route53RecoveryControlConfig.CreateCluster.CreateCluster
instance Amazonka.Data.Path.ToPath Amazonka.Route53RecoveryControlConfig.CreateCluster.CreateCluster
instance Amazonka.Data.Query.ToQuery Amazonka.Route53RecoveryControlConfig.CreateCluster.CreateCluster


-- | Updates a control panel. The only update you can make to a control
--   panel is to change the name of the control panel.
module Amazonka.Route53RecoveryControlConfig.UpdateControlPanel

-- | The details of the control panel that you're updating.
--   
--   <i>See:</i> <a>newUpdateControlPanel</a> smart constructor.
data UpdateControlPanel
UpdateControlPanel' :: Text -> Text -> UpdateControlPanel

-- | The Amazon Resource Name (ARN) of the control panel.
[$sel:controlPanelArn:UpdateControlPanel'] :: UpdateControlPanel -> Text

-- | The name of the control panel.
[$sel:controlPanelName:UpdateControlPanel'] :: UpdateControlPanel -> Text

-- | Create a value of <a>UpdateControlPanel</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:controlPanelArn:UpdateControlPanel'</a>,
--   <a>updateControlPanel_controlPanelArn</a> - The Amazon Resource Name
--   (ARN) of the control panel.
--   
--   <a>$sel:controlPanelName:UpdateControlPanel'</a>,
--   <a>updateControlPanel_controlPanelName</a> - The name of the control
--   panel.
newUpdateControlPanel :: Text -> Text -> UpdateControlPanel

-- | The Amazon Resource Name (ARN) of the control panel.
updateControlPanel_controlPanelArn :: Lens' UpdateControlPanel Text

-- | The name of the control panel.
updateControlPanel_controlPanelName :: Lens' UpdateControlPanel Text

-- | <i>See:</i> <a>newUpdateControlPanelResponse</a> smart constructor.
data UpdateControlPanelResponse
UpdateControlPanelResponse' :: Maybe ControlPanel -> Int -> UpdateControlPanelResponse

-- | The control panel to update.
[$sel:controlPanel:UpdateControlPanelResponse'] :: UpdateControlPanelResponse -> Maybe ControlPanel

-- | The response's http status code.
[$sel:httpStatus:UpdateControlPanelResponse'] :: UpdateControlPanelResponse -> Int

-- | Create a value of <a>UpdateControlPanelResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:controlPanel:UpdateControlPanelResponse'</a>,
--   <a>updateControlPanelResponse_controlPanel</a> - The control panel to
--   update.
--   
--   <a>$sel:httpStatus:UpdateControlPanelResponse'</a>,
--   <a>updateControlPanelResponse_httpStatus</a> - The response's http
--   status code.
newUpdateControlPanelResponse :: Int -> UpdateControlPanelResponse

-- | The control panel to update.
updateControlPanelResponse_controlPanel :: Lens' UpdateControlPanelResponse (Maybe ControlPanel)

-- | The response's http status code.
updateControlPanelResponse_httpStatus :: Lens' UpdateControlPanelResponse Int
instance GHC.Generics.Generic Amazonka.Route53RecoveryControlConfig.UpdateControlPanel.UpdateControlPanel
instance GHC.Show.Show Amazonka.Route53RecoveryControlConfig.UpdateControlPanel.UpdateControlPanel
instance GHC.Read.Read Amazonka.Route53RecoveryControlConfig.UpdateControlPanel.UpdateControlPanel
instance GHC.Classes.Eq Amazonka.Route53RecoveryControlConfig.UpdateControlPanel.UpdateControlPanel
instance GHC.Generics.Generic Amazonka.Route53RecoveryControlConfig.UpdateControlPanel.UpdateControlPanelResponse
instance GHC.Show.Show Amazonka.Route53RecoveryControlConfig.UpdateControlPanel.UpdateControlPanelResponse
instance GHC.Read.Read Amazonka.Route53RecoveryControlConfig.UpdateControlPanel.UpdateControlPanelResponse
instance GHC.Classes.Eq Amazonka.Route53RecoveryControlConfig.UpdateControlPanel.UpdateControlPanelResponse
instance Amazonka.Types.AWSRequest Amazonka.Route53RecoveryControlConfig.UpdateControlPanel.UpdateControlPanel
instance Control.DeepSeq.NFData Amazonka.Route53RecoveryControlConfig.UpdateControlPanel.UpdateControlPanelResponse
instance Data.Hashable.Class.Hashable Amazonka.Route53RecoveryControlConfig.UpdateControlPanel.UpdateControlPanel
instance Control.DeepSeq.NFData Amazonka.Route53RecoveryControlConfig.UpdateControlPanel.UpdateControlPanel
instance Amazonka.Data.Headers.ToHeaders Amazonka.Route53RecoveryControlConfig.UpdateControlPanel.UpdateControlPanel
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Route53RecoveryControlConfig.UpdateControlPanel.UpdateControlPanel
instance Amazonka.Data.Path.ToPath Amazonka.Route53RecoveryControlConfig.UpdateControlPanel.UpdateControlPanel
instance Amazonka.Data.Query.ToQuery Amazonka.Route53RecoveryControlConfig.UpdateControlPanel.UpdateControlPanel


-- | Updates a routing control. You can only update the name of the routing
--   control. To get or update the routing control state, see the Recovery
--   Cluster (data plane) API actions for Amazon Route 53 Application
--   Recovery Controller.
module Amazonka.Route53RecoveryControlConfig.UpdateRoutingControl

-- | The details of the routing control that you're updating.
--   
--   <i>See:</i> <a>newUpdateRoutingControl</a> smart constructor.
data UpdateRoutingControl
UpdateRoutingControl' :: Text -> Text -> UpdateRoutingControl

-- | The name of the routing control.
[$sel:routingControlName:UpdateRoutingControl'] :: UpdateRoutingControl -> Text

-- | The Amazon Resource Name (ARN) of the routing control.
[$sel:routingControlArn:UpdateRoutingControl'] :: UpdateRoutingControl -> Text

-- | Create a value of <a>UpdateRoutingControl</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:routingControlName:UpdateRoutingControl'</a>,
--   <a>updateRoutingControl_routingControlName</a> - The name of the
--   routing control.
--   
--   <a>$sel:routingControlArn:UpdateRoutingControl'</a>,
--   <a>updateRoutingControl_routingControlArn</a> - The Amazon Resource
--   Name (ARN) of the routing control.
newUpdateRoutingControl :: Text -> Text -> UpdateRoutingControl

-- | The name of the routing control.
updateRoutingControl_routingControlName :: Lens' UpdateRoutingControl Text

-- | The Amazon Resource Name (ARN) of the routing control.
updateRoutingControl_routingControlArn :: Lens' UpdateRoutingControl Text

-- | <i>See:</i> <a>newUpdateRoutingControlResponse</a> smart constructor.
data UpdateRoutingControlResponse
UpdateRoutingControlResponse' :: Maybe RoutingControl -> Int -> UpdateRoutingControlResponse

-- | The routing control that was updated.
[$sel:routingControl:UpdateRoutingControlResponse'] :: UpdateRoutingControlResponse -> Maybe RoutingControl

-- | The response's http status code.
[$sel:httpStatus:UpdateRoutingControlResponse'] :: UpdateRoutingControlResponse -> Int

-- | Create a value of <a>UpdateRoutingControlResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:routingControl:UpdateRoutingControlResponse'</a>,
--   <a>updateRoutingControlResponse_routingControl</a> - The routing
--   control that was updated.
--   
--   <a>$sel:httpStatus:UpdateRoutingControlResponse'</a>,
--   <a>updateRoutingControlResponse_httpStatus</a> - The response's http
--   status code.
newUpdateRoutingControlResponse :: Int -> UpdateRoutingControlResponse

-- | The routing control that was updated.
updateRoutingControlResponse_routingControl :: Lens' UpdateRoutingControlResponse (Maybe RoutingControl)

-- | The response's http status code.
updateRoutingControlResponse_httpStatus :: Lens' UpdateRoutingControlResponse Int
instance GHC.Generics.Generic Amazonka.Route53RecoveryControlConfig.UpdateRoutingControl.UpdateRoutingControl
instance GHC.Show.Show Amazonka.Route53RecoveryControlConfig.UpdateRoutingControl.UpdateRoutingControl
instance GHC.Read.Read Amazonka.Route53RecoveryControlConfig.UpdateRoutingControl.UpdateRoutingControl
instance GHC.Classes.Eq Amazonka.Route53RecoveryControlConfig.UpdateRoutingControl.UpdateRoutingControl
instance GHC.Generics.Generic Amazonka.Route53RecoveryControlConfig.UpdateRoutingControl.UpdateRoutingControlResponse
instance GHC.Show.Show Amazonka.Route53RecoveryControlConfig.UpdateRoutingControl.UpdateRoutingControlResponse
instance GHC.Read.Read Amazonka.Route53RecoveryControlConfig.UpdateRoutingControl.UpdateRoutingControlResponse
instance GHC.Classes.Eq Amazonka.Route53RecoveryControlConfig.UpdateRoutingControl.UpdateRoutingControlResponse
instance Amazonka.Types.AWSRequest Amazonka.Route53RecoveryControlConfig.UpdateRoutingControl.UpdateRoutingControl
instance Control.DeepSeq.NFData Amazonka.Route53RecoveryControlConfig.UpdateRoutingControl.UpdateRoutingControlResponse
instance Data.Hashable.Class.Hashable Amazonka.Route53RecoveryControlConfig.UpdateRoutingControl.UpdateRoutingControl
instance Control.DeepSeq.NFData Amazonka.Route53RecoveryControlConfig.UpdateRoutingControl.UpdateRoutingControl
instance Amazonka.Data.Headers.ToHeaders Amazonka.Route53RecoveryControlConfig.UpdateRoutingControl.UpdateRoutingControl
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Route53RecoveryControlConfig.UpdateRoutingControl.UpdateRoutingControl
instance Amazonka.Data.Path.ToPath Amazonka.Route53RecoveryControlConfig.UpdateRoutingControl.UpdateRoutingControl
instance Amazonka.Data.Query.ToQuery Amazonka.Route53RecoveryControlConfig.UpdateRoutingControl.UpdateRoutingControl


-- | Update a safety rule (an assertion rule or gating rule) for the
--   routing controls in a control panel. You can only update the name and
--   the waiting period for a safety rule. To make other updates, delete
--   the safety rule and create a new safety rule.
module Amazonka.Route53RecoveryControlConfig.UpdateSafetyRule

-- | <i>See:</i> <a>newUpdateSafetyRule</a> smart constructor.
data UpdateSafetyRule
UpdateSafetyRule' :: Maybe GatingRuleUpdate -> Maybe AssertionRuleUpdate -> UpdateSafetyRule
[$sel:gatingRuleUpdate:UpdateSafetyRule'] :: UpdateSafetyRule -> Maybe GatingRuleUpdate
[$sel:assertionRuleUpdate:UpdateSafetyRule'] :: UpdateSafetyRule -> Maybe AssertionRuleUpdate

-- | Create a value of <a>UpdateSafetyRule</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:gatingRuleUpdate:UpdateSafetyRule'</a>,
--   <a>updateSafetyRule_gatingRuleUpdate</a> - Undocumented member.
--   
--   <a>$sel:assertionRuleUpdate:UpdateSafetyRule'</a>,
--   <a>updateSafetyRule_assertionRuleUpdate</a> - Undocumented member.
newUpdateSafetyRule :: UpdateSafetyRule

-- | Undocumented member.
updateSafetyRule_gatingRuleUpdate :: Lens' UpdateSafetyRule (Maybe GatingRuleUpdate)

-- | Undocumented member.
updateSafetyRule_assertionRuleUpdate :: Lens' UpdateSafetyRule (Maybe AssertionRuleUpdate)

-- | <i>See:</i> <a>newUpdateSafetyRuleResponse</a> smart constructor.
data UpdateSafetyRuleResponse
UpdateSafetyRuleResponse' :: Maybe AssertionRule -> Maybe GatingRule -> Int -> UpdateSafetyRuleResponse
[$sel:assertionRule:UpdateSafetyRuleResponse'] :: UpdateSafetyRuleResponse -> Maybe AssertionRule
[$sel:gatingRule:UpdateSafetyRuleResponse'] :: UpdateSafetyRuleResponse -> Maybe GatingRule

-- | The response's http status code.
[$sel:httpStatus:UpdateSafetyRuleResponse'] :: UpdateSafetyRuleResponse -> Int

-- | Create a value of <a>UpdateSafetyRuleResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:assertionRule:UpdateSafetyRuleResponse'</a>,
--   <a>updateSafetyRuleResponse_assertionRule</a> - Undocumented member.
--   
--   <a>$sel:gatingRule:UpdateSafetyRuleResponse'</a>,
--   <a>updateSafetyRuleResponse_gatingRule</a> - Undocumented member.
--   
--   <a>$sel:httpStatus:UpdateSafetyRuleResponse'</a>,
--   <a>updateSafetyRuleResponse_httpStatus</a> - The response's http
--   status code.
newUpdateSafetyRuleResponse :: Int -> UpdateSafetyRuleResponse

-- | Undocumented member.
updateSafetyRuleResponse_assertionRule :: Lens' UpdateSafetyRuleResponse (Maybe AssertionRule)

-- | Undocumented member.
updateSafetyRuleResponse_gatingRule :: Lens' UpdateSafetyRuleResponse (Maybe GatingRule)

-- | The response's http status code.
updateSafetyRuleResponse_httpStatus :: Lens' UpdateSafetyRuleResponse Int
instance GHC.Generics.Generic Amazonka.Route53RecoveryControlConfig.UpdateSafetyRule.UpdateSafetyRule
instance GHC.Show.Show Amazonka.Route53RecoveryControlConfig.UpdateSafetyRule.UpdateSafetyRule
instance GHC.Read.Read Amazonka.Route53RecoveryControlConfig.UpdateSafetyRule.UpdateSafetyRule
instance GHC.Classes.Eq Amazonka.Route53RecoveryControlConfig.UpdateSafetyRule.UpdateSafetyRule
instance GHC.Generics.Generic Amazonka.Route53RecoveryControlConfig.UpdateSafetyRule.UpdateSafetyRuleResponse
instance GHC.Show.Show Amazonka.Route53RecoveryControlConfig.UpdateSafetyRule.UpdateSafetyRuleResponse
instance GHC.Read.Read Amazonka.Route53RecoveryControlConfig.UpdateSafetyRule.UpdateSafetyRuleResponse
instance GHC.Classes.Eq Amazonka.Route53RecoveryControlConfig.UpdateSafetyRule.UpdateSafetyRuleResponse
instance Amazonka.Types.AWSRequest Amazonka.Route53RecoveryControlConfig.UpdateSafetyRule.UpdateSafetyRule
instance Control.DeepSeq.NFData Amazonka.Route53RecoveryControlConfig.UpdateSafetyRule.UpdateSafetyRuleResponse
instance Data.Hashable.Class.Hashable Amazonka.Route53RecoveryControlConfig.UpdateSafetyRule.UpdateSafetyRule
instance Control.DeepSeq.NFData Amazonka.Route53RecoveryControlConfig.UpdateSafetyRule.UpdateSafetyRule
instance Amazonka.Data.Headers.ToHeaders Amazonka.Route53RecoveryControlConfig.UpdateSafetyRule.UpdateSafetyRule
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Route53RecoveryControlConfig.UpdateSafetyRule.UpdateSafetyRule
instance Amazonka.Data.Path.ToPath Amazonka.Route53RecoveryControlConfig.UpdateSafetyRule.UpdateSafetyRule
instance Amazonka.Data.Query.ToQuery Amazonka.Route53RecoveryControlConfig.UpdateSafetyRule.UpdateSafetyRule


module Amazonka.Route53RecoveryControlConfig.Lens

-- | The Amazon Resource Name (ARN) of the control panel that you're
--   getting details for.
describeControlPanel_controlPanelArn :: Lens' DescribeControlPanel Text

-- | Information about the control panel.
describeControlPanelResponse_controlPanel :: Lens' DescribeControlPanelResponse (Maybe ControlPanel)

-- | The response's http status code.
describeControlPanelResponse_httpStatus :: Lens' DescribeControlPanelResponse Int

-- | The Amazon Resource Name (ARN) of the control panel that includes the
--   routing control.
createRoutingControl_controlPanelArn :: Lens' CreateRoutingControl (Maybe Text)

-- | Unique client idempotency token.
createRoutingControl_clientToken :: Lens' CreateRoutingControl (Maybe Text)

-- | The Amazon Resource Name (ARN) of the cluster that includes the
--   routing control.
createRoutingControl_clusterArn :: Lens' CreateRoutingControl Text

-- | The name of the routing control.
createRoutingControl_routingControlName :: Lens' CreateRoutingControl Text

-- | The routing control that is created.
createRoutingControlResponse_routingControl :: Lens' CreateRoutingControlResponse (Maybe RoutingControl)

-- | The response's http status code.
createRoutingControlResponse_httpStatus :: Lens' CreateRoutingControlResponse Int

-- | The Amazon Resource Name (ARN) of the cluster that you're getting
--   details for.
describeCluster_clusterArn :: Lens' DescribeCluster Text

-- | The cluster for the DescribeCluster request.
describeClusterResponse_cluster :: Lens' DescribeClusterResponse (Maybe Cluster)

-- | The response's http status code.
describeClusterResponse_httpStatus :: Lens' DescribeClusterResponse Int

-- | The Amazon Resource Name (ARN) of the routing control that you're
--   deleting.
deleteRoutingControl_routingControlArn :: Lens' DeleteRoutingControl Text

-- | The response's http status code.
deleteRoutingControlResponse_httpStatus :: Lens' DeleteRoutingControlResponse Int

-- | The name of the routing control.
updateRoutingControl_routingControlName :: Lens' UpdateRoutingControl Text

-- | The Amazon Resource Name (ARN) of the routing control.
updateRoutingControl_routingControlArn :: Lens' UpdateRoutingControl Text

-- | The routing control that was updated.
updateRoutingControlResponse_routingControl :: Lens' UpdateRoutingControlResponse (Maybe RoutingControl)

-- | The response's http status code.
updateRoutingControlResponse_httpStatus :: Lens' UpdateRoutingControlResponse Int

-- | Unique client idempotency token.
createControlPanel_clientToken :: Lens' CreateControlPanel (Maybe Text)

-- | The Amazon Resource Name (ARN) of the cluster for the control panel.
createControlPanel_clusterArn :: Lens' CreateControlPanel Text

-- | The name of the control panel.
createControlPanel_controlPanelName :: Lens' CreateControlPanel Text

-- | Information about a control panel.
createControlPanelResponse_controlPanel :: Lens' CreateControlPanelResponse (Maybe ControlPanel)

-- | The response's http status code.
createControlPanelResponse_httpStatus :: Lens' CreateControlPanelResponse Int

-- | The Amazon Resource Name (ARN) of the control panel.
updateControlPanel_controlPanelArn :: Lens' UpdateControlPanel Text

-- | The name of the control panel.
updateControlPanel_controlPanelName :: Lens' UpdateControlPanel Text

-- | The control panel to update.
updateControlPanelResponse_controlPanel :: Lens' UpdateControlPanelResponse (Maybe ControlPanel)

-- | The response's http status code.
updateControlPanelResponse_httpStatus :: Lens' UpdateControlPanelResponse Int

-- | The Amazon Resource Name (ARN) of the control panel that you're
--   deleting.
deleteControlPanel_controlPanelArn :: Lens' DeleteControlPanel Text

-- | The response's http status code.
deleteControlPanelResponse_httpStatus :: Lens' DeleteControlPanelResponse Int

-- | The Amazon Resource Name (ARN) of the cluster that you're deleting.
deleteCluster_clusterArn :: Lens' DeleteCluster Text

-- | The response's http status code.
deleteClusterResponse_httpStatus :: Lens' DeleteClusterResponse Int

-- | Undocumented member.
createSafetyRule_assertionRule :: Lens' CreateSafetyRule (Maybe NewAssertionRule)

-- | Unique client idempotency token.
createSafetyRule_clientToken :: Lens' CreateSafetyRule (Maybe Text)

-- | Undocumented member.
createSafetyRule_gatingRule :: Lens' CreateSafetyRule (Maybe NewGatingRule)

-- | Undocumented member.
createSafetyRuleResponse_assertionRule :: Lens' CreateSafetyRuleResponse (Maybe AssertionRule)

-- | Undocumented member.
createSafetyRuleResponse_gatingRule :: Lens' CreateSafetyRuleResponse (Maybe GatingRule)

-- | The response's http status code.
createSafetyRuleResponse_httpStatus :: Lens' CreateSafetyRuleResponse Int

-- | Unique client idempotency token.
createCluster_clientToken :: Lens' CreateCluster (Maybe Text)

-- | The name of the cluster.
createCluster_clusterName :: Lens' CreateCluster Text

-- | The cluster that was created.
createClusterResponse_cluster :: Lens' CreateClusterResponse (Maybe Cluster)

-- | The response's http status code.
createClusterResponse_httpStatus :: Lens' CreateClusterResponse Int

-- | The token that identifies which batch of results you want to see.
listAssociatedRoute53HealthChecks_nextToken :: Lens' ListAssociatedRoute53HealthChecks (Maybe Text)

-- | The number of objects that you want to return with this call.
listAssociatedRoute53HealthChecks_maxResults :: Lens' ListAssociatedRoute53HealthChecks (Maybe Natural)

-- | The Amazon Resource Name (ARN) of the routing control that you're
--   getting details for.
listAssociatedRoute53HealthChecks_routingControlArn :: Lens' ListAssociatedRoute53HealthChecks Text

-- | The token that identifies which batch of results you want to see.
listAssociatedRoute53HealthChecksResponse_nextToken :: Lens' ListAssociatedRoute53HealthChecksResponse (Maybe Text)

-- | Identifiers for the health checks.
listAssociatedRoute53HealthChecksResponse_healthCheckIds :: Lens' ListAssociatedRoute53HealthChecksResponse (Maybe [Text])

-- | The response's http status code.
listAssociatedRoute53HealthChecksResponse_httpStatus :: Lens' ListAssociatedRoute53HealthChecksResponse Int

-- | The request body that you include when you update a safety rule.
describeSafetyRule_safetyRuleArn :: Lens' DescribeSafetyRule Text

-- | Undocumented member.
describeSafetyRuleResponse_assertionRule :: Lens' DescribeSafetyRuleResponse (Maybe AssertionRule)

-- | Undocumented member.
describeSafetyRuleResponse_gatingRule :: Lens' DescribeSafetyRuleResponse (Maybe GatingRule)

-- | The response's http status code.
describeSafetyRuleResponse_httpStatus :: Lens' DescribeSafetyRuleResponse Int

-- | The token that identifies which batch of results you want to see.
listRoutingControls_nextToken :: Lens' ListRoutingControls (Maybe Text)

-- | The number of objects that you want to return with this call.
listRoutingControls_maxResults :: Lens' ListRoutingControls (Maybe Natural)

-- | The Amazon Resource Name (ARN) of the control panel that you're
--   getting routing control details for.
listRoutingControls_controlPanelArn :: Lens' ListRoutingControls Text

-- | The token that identifies which batch of results you want to see.
listRoutingControlsResponse_nextToken :: Lens' ListRoutingControlsResponse (Maybe Text)

-- | An array of routing controls.
listRoutingControlsResponse_routingControls :: Lens' ListRoutingControlsResponse (Maybe [RoutingControl])

-- | The response's http status code.
listRoutingControlsResponse_httpStatus :: Lens' ListRoutingControlsResponse Int

-- | The Amazon Resource Name (ARN) of a cluster.
listControlPanels_clusterArn :: Lens' ListControlPanels (Maybe Text)

-- | The token that identifies which batch of results you want to see.
listControlPanels_nextToken :: Lens' ListControlPanels (Maybe Text)

-- | The number of objects that you want to return with this call.
listControlPanels_maxResults :: Lens' ListControlPanels (Maybe Natural)

-- | The token that identifies which batch of results you want to see.
listControlPanelsResponse_nextToken :: Lens' ListControlPanelsResponse (Maybe Text)

-- | The result of a successful ListControlPanel request.
listControlPanelsResponse_controlPanels :: Lens' ListControlPanelsResponse (Maybe [ControlPanel])

-- | The response's http status code.
listControlPanelsResponse_httpStatus :: Lens' ListControlPanelsResponse Int

-- | Undocumented member.
updateSafetyRule_gatingRuleUpdate :: Lens' UpdateSafetyRule (Maybe GatingRuleUpdate)

-- | Undocumented member.
updateSafetyRule_assertionRuleUpdate :: Lens' UpdateSafetyRule (Maybe AssertionRuleUpdate)

-- | Undocumented member.
updateSafetyRuleResponse_assertionRule :: Lens' UpdateSafetyRuleResponse (Maybe AssertionRule)

-- | Undocumented member.
updateSafetyRuleResponse_gatingRule :: Lens' UpdateSafetyRuleResponse (Maybe GatingRule)

-- | The response's http status code.
updateSafetyRuleResponse_httpStatus :: Lens' UpdateSafetyRuleResponse Int

-- | The request body that you include when you update a safety rule.
deleteSafetyRule_safetyRuleArn :: Lens' DeleteSafetyRule Text

-- | The response's http status code.
deleteSafetyRuleResponse_httpStatus :: Lens' DeleteSafetyRuleResponse Int

-- | The token that identifies which batch of results you want to see.
listClusters_nextToken :: Lens' ListClusters (Maybe Text)

-- | The number of objects that you want to return with this call.
listClusters_maxResults :: Lens' ListClusters (Maybe Natural)

-- | The token that identifies which batch of results you want to see.
listClustersResponse_nextToken :: Lens' ListClustersResponse (Maybe Text)

-- | An array of the clusters in an account.
listClustersResponse_clusters :: Lens' ListClustersResponse (Maybe [Cluster])

-- | The response's http status code.
listClustersResponse_httpStatus :: Lens' ListClustersResponse Int

-- | The token that identifies which batch of results you want to see.
listSafetyRules_nextToken :: Lens' ListSafetyRules (Maybe Text)

-- | The number of objects that you want to return with this call.
listSafetyRules_maxResults :: Lens' ListSafetyRules (Maybe Natural)

-- | The Amazon Resource Name (ARN) of the control panel that you're
--   getting details for.
listSafetyRules_controlPanelArn :: Lens' ListSafetyRules Text

-- | The token that identifies which batch of results you want to see.
listSafetyRulesResponse_nextToken :: Lens' ListSafetyRulesResponse (Maybe Text)

-- | The list of safety rules in a control panel.
listSafetyRulesResponse_safetyRules :: Lens' ListSafetyRulesResponse (Maybe [Rule])

-- | The response's http status code.
listSafetyRulesResponse_httpStatus :: Lens' ListSafetyRulesResponse Int

-- | The Amazon Resource Name (ARN) of the routing control that you're
--   getting details for.
describeRoutingControl_routingControlArn :: Lens' DescribeRoutingControl Text

-- | Information about the routing control.
describeRoutingControlResponse_routingControl :: Lens' DescribeRoutingControlResponse (Maybe RoutingControl)

-- | The response's http status code.
describeRoutingControlResponse_httpStatus :: Lens' DescribeRoutingControlResponse Int

-- | The deployment status of an assertion rule. Status can be one of the
--   following: PENDING, DEPLOYED, PENDING_DELETION.
assertionRule_status :: Lens' AssertionRule Status

-- | The Amazon Resource Name (ARN) of the control panel.
assertionRule_controlPanelArn :: Lens' AssertionRule Text

-- | The Amazon Resource Name (ARN) of the assertion rule.
assertionRule_safetyRuleArn :: Lens' AssertionRule Text

-- | The routing controls that are part of transactions that are evaluated
--   to determine if a request to change a routing control state is
--   allowed. For example, you might include three routing controls, one
--   for each of three Amazon Web Services Regions.
assertionRule_assertedControls :: Lens' AssertionRule [Text]

-- | The criteria that you set for specific assertion controls (routing
--   controls) that designate how many controls must be enabled as the
--   result of a transaction. For example, if you have three assertion
--   controls, you might specify atleast 2 for your rule configuration.
--   This means that at least two assertion controls must be enabled, so
--   that at least two Amazon Web Services Regions are enabled.
assertionRule_ruleConfig :: Lens' AssertionRule RuleConfig

-- | An evaluation period, in milliseconds (ms), during which any request
--   against the target routing controls will fail. This helps prevent
--   "flapping" of state. The wait period is 5000 ms by default, but you
--   can choose a custom value.
assertionRule_waitPeriodMs :: Lens' AssertionRule Int

-- | Name of the assertion rule. You can use any non-white space character
--   in the name.
assertionRule_name :: Lens' AssertionRule Text

-- | The Amazon Resource Name (ARN) of the assertion rule.
assertionRuleUpdate_safetyRuleArn :: Lens' AssertionRuleUpdate Text

-- | An evaluation period, in milliseconds (ms), during which any request
--   against the target routing controls will fail. This helps prevent
--   "flapping" of state. The wait period is 5000 ms by default, but you
--   can choose a custom value.
assertionRuleUpdate_waitPeriodMs :: Lens' AssertionRuleUpdate Int

-- | The name of the assertion rule. You can use any non-white space
--   character in the name.
assertionRuleUpdate_name :: Lens' AssertionRuleUpdate Text

-- | Deployment status of a resource. Status can be one of the following:
--   PENDING, DEPLOYED, PENDING_DELETION.
cluster_status :: Lens' Cluster (Maybe Status)

-- | The Amazon Resource Name (ARN) of the cluster.
cluster_clusterArn :: Lens' Cluster (Maybe Text)

-- | The name of the cluster.
cluster_name :: Lens' Cluster (Maybe Text)

-- | Endpoints for a cluster. Specify one of these endpoints when you want
--   to set or retrieve a routing control state in the cluster.
--   
--   To get or update the routing control state, see the Amazon Route 53
--   Application Recovery Controller Cluster (Data Plane) Actions.
cluster_clusterEndpoints :: Lens' Cluster (Maybe [ClusterEndpoint])

-- | The Amazon Web Services Region for a cluster endpoint.
clusterEndpoint_region :: Lens' ClusterEndpoint (Maybe Text)

-- | A cluster endpoint. Specify an endpoint and Amazon Web Services Region
--   when you want to set or retrieve a routing control state in the
--   cluster.
--   
--   To get or update the routing control state, see the Amazon Route 53
--   Application Recovery Controller Cluster (Data Plane) Actions.
clusterEndpoint_endpoint :: Lens' ClusterEndpoint (Maybe Text)

-- | The deployment status of control panel. Status can be one of the
--   following: PENDING, DEPLOYED, PENDING_DELETION.
controlPanel_status :: Lens' ControlPanel (Maybe Status)

-- | The Amazon Resource Name (ARN) of the control panel.
controlPanel_controlPanelArn :: Lens' ControlPanel (Maybe Text)

-- | The Amazon Resource Name (ARN) of the cluster that includes the
--   control panel.
controlPanel_clusterArn :: Lens' ControlPanel (Maybe Text)

-- | The number of routing controls in the control panel.
controlPanel_routingControlCount :: Lens' ControlPanel (Maybe Int)

-- | The name of the control panel. You can use any non-white space
--   character in the name.
controlPanel_name :: Lens' ControlPanel (Maybe Text)

-- | A flag that Amazon Route 53 Application Recovery Controller sets to
--   true to designate the default control panel for a cluster. When you
--   create a cluster, Amazon Route 53 Application Recovery Controller
--   creates a control panel, and sets this flag for that control panel. If
--   you create a control panel yourself, this flag is set to false.
controlPanel_defaultControlPanel :: Lens' ControlPanel (Maybe Bool)

-- | The deployment status of a gating rule. Status can be one of the
--   following: PENDING, DEPLOYED, PENDING_DELETION.
gatingRule_status :: Lens' GatingRule Status

-- | Routing controls that can only be set or unset if the specified
--   RuleConfig evaluates to true for the specified GatingControls. For
--   example, say you have three gating controls, one for each of three
--   Amazon Web Services Regions. Now you specify ATLEAST 2 as your
--   RuleConfig. With these settings, you can only change (set or unset)
--   the routing controls that you have specified as TargetControls if that
--   rule evaluates to true.
--   
--   In other words, your ability to change the routing controls that you
--   have specified as TargetControls is gated by the rule that you set for
--   the routing controls in GatingControls.
gatingRule_targetControls :: Lens' GatingRule [Text]

-- | The Amazon Resource Name (ARN) of the control panel.
gatingRule_controlPanelArn :: Lens' GatingRule Text

-- | The Amazon Resource Name (ARN) of the gating rule.
gatingRule_safetyRuleArn :: Lens' GatingRule Text

-- | The gating controls for the gating rule. That is, routing controls
--   that are evaluated by the rule configuration that you specify.
gatingRule_gatingControls :: Lens' GatingRule [Text]

-- | The criteria that you set for specific gating controls (routing
--   controls) that designates how many controls must be enabled to allow
--   you to change (set or unset) the target controls.
gatingRule_ruleConfig :: Lens' GatingRule RuleConfig

-- | An evaluation period, in milliseconds (ms), during which any request
--   against the target routing controls will fail. This helps prevent
--   "flapping" of state. The wait period is 5000 ms by default, but you
--   can choose a custom value.
gatingRule_waitPeriodMs :: Lens' GatingRule Int

-- | The name for the gating rule.
gatingRule_name :: Lens' GatingRule Text

-- | The Amazon Resource Name (ARN) of the gating rule.
gatingRuleUpdate_safetyRuleArn :: Lens' GatingRuleUpdate Text

-- | An evaluation period, in milliseconds (ms), during which any request
--   against the target routing controls will fail. This helps prevent
--   "flapping" of state. The wait period is 5000 ms by default, but you
--   can choose a custom value.
gatingRuleUpdate_waitPeriodMs :: Lens' GatingRuleUpdate Int

-- | The name for the gating rule.
gatingRuleUpdate_name :: Lens' GatingRuleUpdate Text

-- | The Amazon Resource Name (ARN) for the control panel.
newAssertionRule_controlPanelArn :: Lens' NewAssertionRule Text

-- | The routing controls that are part of transactions that are evaluated
--   to determine if a request to change a routing control state is
--   allowed. For example, you might include three routing controls, one
--   for each of three Amazon Web Services Regions.
newAssertionRule_assertedControls :: Lens' NewAssertionRule [Text]

-- | The criteria that you set for specific assertion controls (routing
--   controls) that designate how many controls must be enabled as the
--   result of a transaction. For example, if you have three assertion
--   controls, you might specify atleast 2 for your rule configuration.
--   This means that at least two assertion controls must be enabled, so
--   that at least two Amazon Web Services Regions are enabled.
newAssertionRule_ruleConfig :: Lens' NewAssertionRule RuleConfig

-- | An evaluation period, in milliseconds (ms), during which any request
--   against the target routing controls will fail. This helps prevent
--   "flapping" of state. The wait period is 5000 ms by default, but you
--   can choose a custom value.
newAssertionRule_waitPeriodMs :: Lens' NewAssertionRule Int

-- | The name of the assertion rule. You can use any non-white space
--   character in the name.
newAssertionRule_name :: Lens' NewAssertionRule Text

-- | Routing controls that can only be set or unset if the specified
--   RuleConfig evaluates to true for the specified GatingControls. For
--   example, say you have three gating controls, one for each of three
--   Amazon Web Services Regions. Now you specify AtLeast 2 as your
--   RuleConfig. With these settings, you can only change (set or unset)
--   the routing controls that you have specified as TargetControls if that
--   rule evaluates to true.
--   
--   In other words, your ability to change the routing controls that you
--   have specified as TargetControls is gated by the rule that you set for
--   the routing controls in GatingControls.
newGatingRule_targetControls :: Lens' NewGatingRule [Text]

-- | The Amazon Resource Name (ARN) of the control panel.
newGatingRule_controlPanelArn :: Lens' NewGatingRule Text

-- | The gating controls for the new gating rule. That is, routing controls
--   that are evaluated by the rule configuration that you specify.
newGatingRule_gatingControls :: Lens' NewGatingRule [Text]

-- | The criteria that you set for specific gating controls (routing
--   controls) that designates how many controls must be enabled to allow
--   you to change (set or unset) the target controls.
newGatingRule_ruleConfig :: Lens' NewGatingRule RuleConfig

-- | An evaluation period, in milliseconds (ms), during which any request
--   against the target routing controls will fail. This helps prevent
--   "flapping" of state. The wait period is 5000 ms by default, but you
--   can choose a custom value.
newGatingRule_waitPeriodMs :: Lens' NewGatingRule Int

-- | The name for the new gating rule.
newGatingRule_name :: Lens' NewGatingRule Text

-- | The deployment status of a routing control. Status can be one of the
--   following: PENDING, DEPLOYED, PENDING_DELETION.
routingControl_status :: Lens' RoutingControl (Maybe Status)

-- | The Amazon Resource Name (ARN) of the control panel that includes the
--   routing control.
routingControl_controlPanelArn :: Lens' RoutingControl (Maybe Text)

-- | The name of the routing control.
routingControl_name :: Lens' RoutingControl (Maybe Text)

-- | The Amazon Resource Name (ARN) of the routing control.
routingControl_routingControlArn :: Lens' RoutingControl (Maybe Text)

-- | A gating rule verifies that a set of gating controls evaluates as
--   true, based on a rule configuration that you specify. If the gating
--   rule evaluates to true, Amazon Route 53 Application Recovery
--   Controller allows a set of routing control state changes to run and
--   complete against the set of target controls.
rule_gating :: Lens' Rule (Maybe GatingRule)

-- | An assertion rule enforces that, when a routing control state is
--   changed, the criteria set by the rule configuration is met. Otherwise,
--   the change to the routing control is not accepted.
rule_assertion :: Lens' Rule (Maybe AssertionRule)

-- | A rule can be one of the following: ATLEAST, AND, or OR.
ruleConfig_type :: Lens' RuleConfig RuleType

-- | Logical negation of the rule. If the rule would usually evaluate true,
--   it's evaluated as false, and vice versa.
ruleConfig_inverted :: Lens' RuleConfig Bool

-- | The value of N, when you specify an ATLEAST rule type. That is,
--   Threshold is the number of controls that must be set when you specify
--   an ATLEAST type.
ruleConfig_threshold :: Lens' RuleConfig Int


module Amazonka.Route53RecoveryControlConfig.Waiters

-- | Polls <a>DescribeCluster</a> every 5 seconds until a successful state
--   is reached. An error is returned after 26 failed checks.
newClusterCreated :: Wait DescribeCluster

-- | Polls <a>DescribeRoutingControl</a> every 5 seconds until a successful
--   state is reached. An error is returned after 26 failed checks.
newRoutingControlCreated :: Wait DescribeRoutingControl

-- | Polls <a>DescribeRoutingControl</a> every 5 seconds until a successful
--   state is reached. An error is returned after 26 failed checks.
newRoutingControlDeleted :: Wait DescribeRoutingControl

-- | Polls <a>DescribeControlPanel</a> every 5 seconds until a successful
--   state is reached. An error is returned after 26 failed checks.
newControlPanelCreated :: Wait DescribeControlPanel

-- | Polls <a>DescribeControlPanel</a> every 5 seconds until a successful
--   state is reached. An error is returned after 26 failed checks.
newControlPanelDeleted :: Wait DescribeControlPanel

-- | Polls <a>DescribeCluster</a> every 5 seconds until a successful state
--   is reached. An error is returned after 26 failed checks.
newClusterDeleted :: Wait DescribeCluster


-- | Derived from API version <tt>2020-11-02</tt> of the AWS service
--   descriptions, licensed under Apache 2.0.
--   
--   Recovery Control Configuration API Reference for Amazon Route 53
--   Application Recovery Controller
module Amazonka.Route53RecoveryControlConfig

-- | API version <tt>2020-11-02</tt> of the Amazon Route53 Recovery Control
--   Config SDK configuration.
defaultService :: Service

-- | 400 response - Multiple causes. For example, you might have a
--   malformed query string and input parameter might be out of range, or
--   you used parameters together incorrectly.
_ValidationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | 403 response - AccessDeniedException. You do not have sufficient
--   access to perform this action.
_AccessDeniedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | 409 response - ConflictException.
_ConflictException :: AsError a => Getting (First ServiceError) a ServiceError

-- | 402 response
_ServiceQuotaExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | 429 response - ThrottlingException.
_ThrottlingException :: AsError a => Getting (First ServiceError) a ServiceError

-- | 500 response - InternalServiceError. Temporary service error. Retry
--   the request.
_InternalServerException :: AsError a => Getting (First ServiceError) a ServiceError

-- | 404 response - The query string contains a syntax error or resource
--   not found.
_ResourceNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Polls <a>DescribeCluster</a> every 5 seconds until a successful state
--   is reached. An error is returned after 26 failed checks.
newClusterCreated :: Wait DescribeCluster

-- | Polls <a>DescribeRoutingControl</a> every 5 seconds until a successful
--   state is reached. An error is returned after 26 failed checks.
newRoutingControlCreated :: Wait DescribeRoutingControl

-- | Polls <a>DescribeRoutingControl</a> every 5 seconds until a successful
--   state is reached. An error is returned after 26 failed checks.
newRoutingControlDeleted :: Wait DescribeRoutingControl

-- | Polls <a>DescribeControlPanel</a> every 5 seconds until a successful
--   state is reached. An error is returned after 26 failed checks.
newControlPanelCreated :: Wait DescribeControlPanel

-- | Polls <a>DescribeControlPanel</a> every 5 seconds until a successful
--   state is reached. An error is returned after 26 failed checks.
newControlPanelDeleted :: Wait DescribeControlPanel

-- | Polls <a>DescribeCluster</a> every 5 seconds until a successful state
--   is reached. An error is returned after 26 failed checks.
newClusterDeleted :: Wait DescribeCluster

-- | <i>See:</i> <a>newDescribeControlPanel</a> smart constructor.
data DescribeControlPanel
DescribeControlPanel' :: Text -> DescribeControlPanel

-- | Create a value of <a>DescribeControlPanel</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:controlPanelArn:DescribeControlPanel'</a>,
--   <a>describeControlPanel_controlPanelArn</a> - The Amazon Resource Name
--   (ARN) of the control panel that you're getting details for.
newDescribeControlPanel :: Text -> DescribeControlPanel

-- | <i>See:</i> <a>newDescribeControlPanelResponse</a> smart constructor.
data DescribeControlPanelResponse
DescribeControlPanelResponse' :: Maybe ControlPanel -> Int -> DescribeControlPanelResponse

-- | Create a value of <a>DescribeControlPanelResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:controlPanel:DescribeControlPanelResponse'</a>,
--   <a>describeControlPanelResponse_controlPanel</a> - Information about
--   the control panel.
--   
--   <a>$sel:httpStatus:DescribeControlPanelResponse'</a>,
--   <a>describeControlPanelResponse_httpStatus</a> - The response's http
--   status code.
newDescribeControlPanelResponse :: Int -> DescribeControlPanelResponse

-- | The details of the routing control that you're creating.
--   
--   <i>See:</i> <a>newCreateRoutingControl</a> smart constructor.
data CreateRoutingControl
CreateRoutingControl' :: Maybe Text -> Maybe Text -> Text -> Text -> CreateRoutingControl

-- | Create a value of <a>CreateRoutingControl</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:controlPanelArn:CreateRoutingControl'</a>,
--   <a>createRoutingControl_controlPanelArn</a> - The Amazon Resource Name
--   (ARN) of the control panel that includes the routing control.
--   
--   <a>$sel:clientToken:CreateRoutingControl'</a>,
--   <a>createRoutingControl_clientToken</a> - Unique client idempotency
--   token.
--   
--   <a>$sel:clusterArn:CreateRoutingControl'</a>,
--   <a>createRoutingControl_clusterArn</a> - The Amazon Resource Name
--   (ARN) of the cluster that includes the routing control.
--   
--   <a>$sel:routingControlName:CreateRoutingControl'</a>,
--   <a>createRoutingControl_routingControlName</a> - The name of the
--   routing control.
newCreateRoutingControl :: Text -> Text -> CreateRoutingControl

-- | <i>See:</i> <a>newCreateRoutingControlResponse</a> smart constructor.
data CreateRoutingControlResponse
CreateRoutingControlResponse' :: Maybe RoutingControl -> Int -> CreateRoutingControlResponse

-- | Create a value of <a>CreateRoutingControlResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:routingControl:CreateRoutingControlResponse'</a>,
--   <a>createRoutingControlResponse_routingControl</a> - The routing
--   control that is created.
--   
--   <a>$sel:httpStatus:CreateRoutingControlResponse'</a>,
--   <a>createRoutingControlResponse_httpStatus</a> - The response's http
--   status code.
newCreateRoutingControlResponse :: Int -> CreateRoutingControlResponse

-- | <i>See:</i> <a>newDescribeCluster</a> smart constructor.
data DescribeCluster
DescribeCluster' :: Text -> DescribeCluster

-- | Create a value of <a>DescribeCluster</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clusterArn:DescribeCluster'</a>,
--   <a>describeCluster_clusterArn</a> - The Amazon Resource Name (ARN) of
--   the cluster that you're getting details for.
newDescribeCluster :: Text -> DescribeCluster

-- | <i>See:</i> <a>newDescribeClusterResponse</a> smart constructor.
data DescribeClusterResponse
DescribeClusterResponse' :: Maybe Cluster -> Int -> DescribeClusterResponse

-- | Create a value of <a>DescribeClusterResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cluster:DescribeClusterResponse'</a>,
--   <a>describeClusterResponse_cluster</a> - The cluster for the
--   DescribeCluster request.
--   
--   <a>$sel:httpStatus:DescribeClusterResponse'</a>,
--   <a>describeClusterResponse_httpStatus</a> - The response's http status
--   code.
newDescribeClusterResponse :: Int -> DescribeClusterResponse

-- | <i>See:</i> <a>newDeleteRoutingControl</a> smart constructor.
data DeleteRoutingControl
DeleteRoutingControl' :: Text -> DeleteRoutingControl

-- | Create a value of <a>DeleteRoutingControl</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:routingControlArn:DeleteRoutingControl'</a>,
--   <a>deleteRoutingControl_routingControlArn</a> - The Amazon Resource
--   Name (ARN) of the routing control that you're deleting.
newDeleteRoutingControl :: Text -> DeleteRoutingControl

-- | <i>See:</i> <a>newDeleteRoutingControlResponse</a> smart constructor.
data DeleteRoutingControlResponse
DeleteRoutingControlResponse' :: Int -> DeleteRoutingControlResponse

-- | Create a value of <a>DeleteRoutingControlResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteRoutingControlResponse'</a>,
--   <a>deleteRoutingControlResponse_httpStatus</a> - The response's http
--   status code.
newDeleteRoutingControlResponse :: Int -> DeleteRoutingControlResponse

-- | The details of the routing control that you're updating.
--   
--   <i>See:</i> <a>newUpdateRoutingControl</a> smart constructor.
data UpdateRoutingControl
UpdateRoutingControl' :: Text -> Text -> UpdateRoutingControl

-- | Create a value of <a>UpdateRoutingControl</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:routingControlName:UpdateRoutingControl'</a>,
--   <a>updateRoutingControl_routingControlName</a> - The name of the
--   routing control.
--   
--   <a>$sel:routingControlArn:UpdateRoutingControl'</a>,
--   <a>updateRoutingControl_routingControlArn</a> - The Amazon Resource
--   Name (ARN) of the routing control.
newUpdateRoutingControl :: Text -> Text -> UpdateRoutingControl

-- | <i>See:</i> <a>newUpdateRoutingControlResponse</a> smart constructor.
data UpdateRoutingControlResponse
UpdateRoutingControlResponse' :: Maybe RoutingControl -> Int -> UpdateRoutingControlResponse

-- | Create a value of <a>UpdateRoutingControlResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:routingControl:UpdateRoutingControlResponse'</a>,
--   <a>updateRoutingControlResponse_routingControl</a> - The routing
--   control that was updated.
--   
--   <a>$sel:httpStatus:UpdateRoutingControlResponse'</a>,
--   <a>updateRoutingControlResponse_httpStatus</a> - The response's http
--   status code.
newUpdateRoutingControlResponse :: Int -> UpdateRoutingControlResponse

-- | The details of the control panel that you're creating.
--   
--   <i>See:</i> <a>newCreateControlPanel</a> smart constructor.
data CreateControlPanel
CreateControlPanel' :: Maybe Text -> Text -> Text -> CreateControlPanel

-- | Create a value of <a>CreateControlPanel</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientToken:CreateControlPanel'</a>,
--   <a>createControlPanel_clientToken</a> - Unique client idempotency
--   token.
--   
--   <a>$sel:clusterArn:CreateControlPanel'</a>,
--   <a>createControlPanel_clusterArn</a> - The Amazon Resource Name (ARN)
--   of the cluster for the control panel.
--   
--   <a>$sel:controlPanelName:CreateControlPanel'</a>,
--   <a>createControlPanel_controlPanelName</a> - The name of the control
--   panel.
newCreateControlPanel :: Text -> Text -> CreateControlPanel

-- | <i>See:</i> <a>newCreateControlPanelResponse</a> smart constructor.
data CreateControlPanelResponse
CreateControlPanelResponse' :: Maybe ControlPanel -> Int -> CreateControlPanelResponse

-- | Create a value of <a>CreateControlPanelResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:controlPanel:CreateControlPanelResponse'</a>,
--   <a>createControlPanelResponse_controlPanel</a> - Information about a
--   control panel.
--   
--   <a>$sel:httpStatus:CreateControlPanelResponse'</a>,
--   <a>createControlPanelResponse_httpStatus</a> - The response's http
--   status code.
newCreateControlPanelResponse :: Int -> CreateControlPanelResponse

-- | The details of the control panel that you're updating.
--   
--   <i>See:</i> <a>newUpdateControlPanel</a> smart constructor.
data UpdateControlPanel
UpdateControlPanel' :: Text -> Text -> UpdateControlPanel

-- | Create a value of <a>UpdateControlPanel</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:controlPanelArn:UpdateControlPanel'</a>,
--   <a>updateControlPanel_controlPanelArn</a> - The Amazon Resource Name
--   (ARN) of the control panel.
--   
--   <a>$sel:controlPanelName:UpdateControlPanel'</a>,
--   <a>updateControlPanel_controlPanelName</a> - The name of the control
--   panel.
newUpdateControlPanel :: Text -> Text -> UpdateControlPanel

-- | <i>See:</i> <a>newUpdateControlPanelResponse</a> smart constructor.
data UpdateControlPanelResponse
UpdateControlPanelResponse' :: Maybe ControlPanel -> Int -> UpdateControlPanelResponse

-- | Create a value of <a>UpdateControlPanelResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:controlPanel:UpdateControlPanelResponse'</a>,
--   <a>updateControlPanelResponse_controlPanel</a> - The control panel to
--   update.
--   
--   <a>$sel:httpStatus:UpdateControlPanelResponse'</a>,
--   <a>updateControlPanelResponse_httpStatus</a> - The response's http
--   status code.
newUpdateControlPanelResponse :: Int -> UpdateControlPanelResponse

-- | <i>See:</i> <a>newDeleteControlPanel</a> smart constructor.
data DeleteControlPanel
DeleteControlPanel' :: Text -> DeleteControlPanel

-- | Create a value of <a>DeleteControlPanel</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:controlPanelArn:DeleteControlPanel'</a>,
--   <a>deleteControlPanel_controlPanelArn</a> - The Amazon Resource Name
--   (ARN) of the control panel that you're deleting.
newDeleteControlPanel :: Text -> DeleteControlPanel

-- | <i>See:</i> <a>newDeleteControlPanelResponse</a> smart constructor.
data DeleteControlPanelResponse
DeleteControlPanelResponse' :: Int -> DeleteControlPanelResponse

-- | Create a value of <a>DeleteControlPanelResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteControlPanelResponse'</a>,
--   <a>deleteControlPanelResponse_httpStatus</a> - The response's http
--   status code.
newDeleteControlPanelResponse :: Int -> DeleteControlPanelResponse

-- | <i>See:</i> <a>newDeleteCluster</a> smart constructor.
data DeleteCluster
DeleteCluster' :: Text -> DeleteCluster

-- | Create a value of <a>DeleteCluster</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clusterArn:DeleteCluster'</a>, <a>deleteCluster_clusterArn</a>
--   - The Amazon Resource Name (ARN) of the cluster that you're deleting.
newDeleteCluster :: Text -> DeleteCluster

-- | <i>See:</i> <a>newDeleteClusterResponse</a> smart constructor.
data DeleteClusterResponse
DeleteClusterResponse' :: Int -> DeleteClusterResponse

-- | Create a value of <a>DeleteClusterResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteClusterResponse'</a>,
--   <a>deleteClusterResponse_httpStatus</a> - The response's http status
--   code.
newDeleteClusterResponse :: Int -> DeleteClusterResponse

-- | The request body that you include when you create a safety rule.
--   
--   <i>See:</i> <a>newCreateSafetyRule</a> smart constructor.
data CreateSafetyRule
CreateSafetyRule' :: Maybe NewAssertionRule -> Maybe Text -> Maybe NewGatingRule -> CreateSafetyRule

-- | Create a value of <a>CreateSafetyRule</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:assertionRule:CreateSafetyRule'</a>,
--   <a>createSafetyRule_assertionRule</a> - Undocumented member.
--   
--   <a>$sel:clientToken:CreateSafetyRule'</a>,
--   <a>createSafetyRule_clientToken</a> - Unique client idempotency token.
--   
--   <a>$sel:gatingRule:CreateSafetyRule'</a>,
--   <a>createSafetyRule_gatingRule</a> - Undocumented member.
newCreateSafetyRule :: CreateSafetyRule

-- | <i>See:</i> <a>newCreateSafetyRuleResponse</a> smart constructor.
data CreateSafetyRuleResponse
CreateSafetyRuleResponse' :: Maybe AssertionRule -> Maybe GatingRule -> Int -> CreateSafetyRuleResponse

-- | Create a value of <a>CreateSafetyRuleResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:assertionRule:CreateSafetyRule'</a>,
--   <a>createSafetyRuleResponse_assertionRule</a> - Undocumented member.
--   
--   <a>$sel:gatingRule:CreateSafetyRule'</a>,
--   <a>createSafetyRuleResponse_gatingRule</a> - Undocumented member.
--   
--   <a>$sel:httpStatus:CreateSafetyRuleResponse'</a>,
--   <a>createSafetyRuleResponse_httpStatus</a> - The response's http
--   status code.
newCreateSafetyRuleResponse :: Int -> CreateSafetyRuleResponse

-- | Creates a cluster.
--   
--   <i>See:</i> <a>newCreateCluster</a> smart constructor.
data CreateCluster
CreateCluster' :: Maybe Text -> Text -> CreateCluster

-- | Create a value of <a>CreateCluster</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientToken:CreateCluster'</a>,
--   <a>createCluster_clientToken</a> - Unique client idempotency token.
--   
--   <a>$sel:clusterName:CreateCluster'</a>,
--   <a>createCluster_clusterName</a> - The name of the cluster.
newCreateCluster :: Text -> CreateCluster

-- | <i>See:</i> <a>newCreateClusterResponse</a> smart constructor.
data CreateClusterResponse
CreateClusterResponse' :: Maybe Cluster -> Int -> CreateClusterResponse

-- | Create a value of <a>CreateClusterResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cluster:CreateClusterResponse'</a>,
--   <a>createClusterResponse_cluster</a> - The cluster that was created.
--   
--   <a>$sel:httpStatus:CreateClusterResponse'</a>,
--   <a>createClusterResponse_httpStatus</a> - The response's http status
--   code.
newCreateClusterResponse :: Int -> CreateClusterResponse

-- | <i>See:</i> <a>newListAssociatedRoute53HealthChecks</a> smart
--   constructor.
data ListAssociatedRoute53HealthChecks
ListAssociatedRoute53HealthChecks' :: Maybe Text -> Maybe Natural -> Text -> ListAssociatedRoute53HealthChecks

-- | Create a value of <a>ListAssociatedRoute53HealthChecks</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListAssociatedRoute53HealthChecks'</a>,
--   <a>listAssociatedRoute53HealthChecks_nextToken</a> - The token that
--   identifies which batch of results you want to see.
--   
--   <a>$sel:maxResults:ListAssociatedRoute53HealthChecks'</a>,
--   <a>listAssociatedRoute53HealthChecks_maxResults</a> - The number of
--   objects that you want to return with this call.
--   
--   <a>$sel:routingControlArn:ListAssociatedRoute53HealthChecks'</a>,
--   <a>listAssociatedRoute53HealthChecks_routingControlArn</a> - The
--   Amazon Resource Name (ARN) of the routing control that you're getting
--   details for.
newListAssociatedRoute53HealthChecks :: Text -> ListAssociatedRoute53HealthChecks

-- | <i>See:</i> <a>newListAssociatedRoute53HealthChecksResponse</a> smart
--   constructor.
data ListAssociatedRoute53HealthChecksResponse
ListAssociatedRoute53HealthChecksResponse' :: Maybe Text -> Maybe [Text] -> Int -> ListAssociatedRoute53HealthChecksResponse

-- | Create a value of <a>ListAssociatedRoute53HealthChecksResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListAssociatedRoute53HealthChecks'</a>,
--   <a>listAssociatedRoute53HealthChecksResponse_nextToken</a> - The token
--   that identifies which batch of results you want to see.
--   
--   <a>$sel:healthCheckIds:ListAssociatedRoute53HealthChecksResponse'</a>,
--   <a>listAssociatedRoute53HealthChecksResponse_healthCheckIds</a> -
--   Identifiers for the health checks.
--   
--   <a>$sel:httpStatus:ListAssociatedRoute53HealthChecksResponse'</a>,
--   <a>listAssociatedRoute53HealthChecksResponse_httpStatus</a> - The
--   response's http status code.
newListAssociatedRoute53HealthChecksResponse :: Int -> ListAssociatedRoute53HealthChecksResponse

-- | <i>See:</i> <a>newDescribeSafetyRule</a> smart constructor.
data DescribeSafetyRule
DescribeSafetyRule' :: Text -> DescribeSafetyRule

-- | Create a value of <a>DescribeSafetyRule</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:safetyRuleArn:DescribeSafetyRule'</a>,
--   <a>describeSafetyRule_safetyRuleArn</a> - The request body that you
--   include when you update a safety rule.
newDescribeSafetyRule :: Text -> DescribeSafetyRule

-- | <i>See:</i> <a>newDescribeSafetyRuleResponse</a> smart constructor.
data DescribeSafetyRuleResponse
DescribeSafetyRuleResponse' :: Maybe AssertionRule -> Maybe GatingRule -> Int -> DescribeSafetyRuleResponse

-- | Create a value of <a>DescribeSafetyRuleResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:assertionRule:DescribeSafetyRuleResponse'</a>,
--   <a>describeSafetyRuleResponse_assertionRule</a> - Undocumented member.
--   
--   <a>$sel:gatingRule:DescribeSafetyRuleResponse'</a>,
--   <a>describeSafetyRuleResponse_gatingRule</a> - Undocumented member.
--   
--   <a>$sel:httpStatus:DescribeSafetyRuleResponse'</a>,
--   <a>describeSafetyRuleResponse_httpStatus</a> - The response's http
--   status code.
newDescribeSafetyRuleResponse :: Int -> DescribeSafetyRuleResponse

-- | <i>See:</i> <a>newListRoutingControls</a> smart constructor.
data ListRoutingControls
ListRoutingControls' :: Maybe Text -> Maybe Natural -> Text -> ListRoutingControls

-- | Create a value of <a>ListRoutingControls</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListRoutingControls'</a>,
--   <a>listRoutingControls_nextToken</a> - The token that identifies which
--   batch of results you want to see.
--   
--   <a>$sel:maxResults:ListRoutingControls'</a>,
--   <a>listRoutingControls_maxResults</a> - The number of objects that you
--   want to return with this call.
--   
--   <a>$sel:controlPanelArn:ListRoutingControls'</a>,
--   <a>listRoutingControls_controlPanelArn</a> - The Amazon Resource Name
--   (ARN) of the control panel that you're getting routing control details
--   for.
newListRoutingControls :: Text -> ListRoutingControls

-- | <i>See:</i> <a>newListRoutingControlsResponse</a> smart constructor.
data ListRoutingControlsResponse
ListRoutingControlsResponse' :: Maybe Text -> Maybe [RoutingControl] -> Int -> ListRoutingControlsResponse

-- | Create a value of <a>ListRoutingControlsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListRoutingControls'</a>,
--   <a>listRoutingControlsResponse_nextToken</a> - The token that
--   identifies which batch of results you want to see.
--   
--   <a>$sel:routingControls:ListRoutingControlsResponse'</a>,
--   <a>listRoutingControlsResponse_routingControls</a> - An array of
--   routing controls.
--   
--   <a>$sel:httpStatus:ListRoutingControlsResponse'</a>,
--   <a>listRoutingControlsResponse_httpStatus</a> - The response's http
--   status code.
newListRoutingControlsResponse :: Int -> ListRoutingControlsResponse

-- | <i>See:</i> <a>newListControlPanels</a> smart constructor.
data ListControlPanels
ListControlPanels' :: Maybe Text -> Maybe Text -> Maybe Natural -> ListControlPanels

-- | Create a value of <a>ListControlPanels</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clusterArn:ListControlPanels'</a>,
--   <a>listControlPanels_clusterArn</a> - The Amazon Resource Name (ARN)
--   of a cluster.
--   
--   <a>$sel:nextToken:ListControlPanels'</a>,
--   <a>listControlPanels_nextToken</a> - The token that identifies which
--   batch of results you want to see.
--   
--   <a>$sel:maxResults:ListControlPanels'</a>,
--   <a>listControlPanels_maxResults</a> - The number of objects that you
--   want to return with this call.
newListControlPanels :: ListControlPanels

-- | <i>See:</i> <a>newListControlPanelsResponse</a> smart constructor.
data ListControlPanelsResponse
ListControlPanelsResponse' :: Maybe Text -> Maybe [ControlPanel] -> Int -> ListControlPanelsResponse

-- | Create a value of <a>ListControlPanelsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListControlPanels'</a>,
--   <a>listControlPanelsResponse_nextToken</a> - The token that identifies
--   which batch of results you want to see.
--   
--   <a>$sel:controlPanels:ListControlPanelsResponse'</a>,
--   <a>listControlPanelsResponse_controlPanels</a> - The result of a
--   successful ListControlPanel request.
--   
--   <a>$sel:httpStatus:ListControlPanelsResponse'</a>,
--   <a>listControlPanelsResponse_httpStatus</a> - The response's http
--   status code.
newListControlPanelsResponse :: Int -> ListControlPanelsResponse

-- | <i>See:</i> <a>newUpdateSafetyRule</a> smart constructor.
data UpdateSafetyRule
UpdateSafetyRule' :: Maybe GatingRuleUpdate -> Maybe AssertionRuleUpdate -> UpdateSafetyRule

-- | Create a value of <a>UpdateSafetyRule</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:gatingRuleUpdate:UpdateSafetyRule'</a>,
--   <a>updateSafetyRule_gatingRuleUpdate</a> - Undocumented member.
--   
--   <a>$sel:assertionRuleUpdate:UpdateSafetyRule'</a>,
--   <a>updateSafetyRule_assertionRuleUpdate</a> - Undocumented member.
newUpdateSafetyRule :: UpdateSafetyRule

-- | <i>See:</i> <a>newUpdateSafetyRuleResponse</a> smart constructor.
data UpdateSafetyRuleResponse
UpdateSafetyRuleResponse' :: Maybe AssertionRule -> Maybe GatingRule -> Int -> UpdateSafetyRuleResponse

-- | Create a value of <a>UpdateSafetyRuleResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:assertionRule:UpdateSafetyRuleResponse'</a>,
--   <a>updateSafetyRuleResponse_assertionRule</a> - Undocumented member.
--   
--   <a>$sel:gatingRule:UpdateSafetyRuleResponse'</a>,
--   <a>updateSafetyRuleResponse_gatingRule</a> - Undocumented member.
--   
--   <a>$sel:httpStatus:UpdateSafetyRuleResponse'</a>,
--   <a>updateSafetyRuleResponse_httpStatus</a> - The response's http
--   status code.
newUpdateSafetyRuleResponse :: Int -> UpdateSafetyRuleResponse

-- | <i>See:</i> <a>newDeleteSafetyRule</a> smart constructor.
data DeleteSafetyRule
DeleteSafetyRule' :: Text -> DeleteSafetyRule

-- | Create a value of <a>DeleteSafetyRule</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:safetyRuleArn:DeleteSafetyRule'</a>,
--   <a>deleteSafetyRule_safetyRuleArn</a> - The request body that you
--   include when you update a safety rule.
newDeleteSafetyRule :: Text -> DeleteSafetyRule

-- | <i>See:</i> <a>newDeleteSafetyRuleResponse</a> smart constructor.
data DeleteSafetyRuleResponse
DeleteSafetyRuleResponse' :: Int -> DeleteSafetyRuleResponse

-- | Create a value of <a>DeleteSafetyRuleResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteSafetyRuleResponse'</a>,
--   <a>deleteSafetyRuleResponse_httpStatus</a> - The response's http
--   status code.
newDeleteSafetyRuleResponse :: Int -> DeleteSafetyRuleResponse

-- | <i>See:</i> <a>newListClusters</a> smart constructor.
data ListClusters
ListClusters' :: Maybe Text -> Maybe Natural -> ListClusters

-- | Create a value of <a>ListClusters</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListClusters'</a>, <a>listClusters_nextToken</a> -
--   The token that identifies which batch of results you want to see.
--   
--   <a>$sel:maxResults:ListClusters'</a>, <a>listClusters_maxResults</a> -
--   The number of objects that you want to return with this call.
newListClusters :: ListClusters

-- | <i>See:</i> <a>newListClustersResponse</a> smart constructor.
data ListClustersResponse
ListClustersResponse' :: Maybe Text -> Maybe [Cluster] -> Int -> ListClustersResponse

-- | Create a value of <a>ListClustersResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListClusters'</a>,
--   <a>listClustersResponse_nextToken</a> - The token that identifies
--   which batch of results you want to see.
--   
--   <a>$sel:clusters:ListClustersResponse'</a>,
--   <a>listClustersResponse_clusters</a> - An array of the clusters in an
--   account.
--   
--   <a>$sel:httpStatus:ListClustersResponse'</a>,
--   <a>listClustersResponse_httpStatus</a> - The response's http status
--   code.
newListClustersResponse :: Int -> ListClustersResponse

-- | <i>See:</i> <a>newListSafetyRules</a> smart constructor.
data ListSafetyRules
ListSafetyRules' :: Maybe Text -> Maybe Natural -> Text -> ListSafetyRules

-- | Create a value of <a>ListSafetyRules</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListSafetyRules'</a>,
--   <a>listSafetyRules_nextToken</a> - The token that identifies which
--   batch of results you want to see.
--   
--   <a>$sel:maxResults:ListSafetyRules'</a>,
--   <a>listSafetyRules_maxResults</a> - The number of objects that you
--   want to return with this call.
--   
--   <a>$sel:controlPanelArn:ListSafetyRules'</a>,
--   <a>listSafetyRules_controlPanelArn</a> - The Amazon Resource Name
--   (ARN) of the control panel that you're getting details for.
newListSafetyRules :: Text -> ListSafetyRules

-- | <i>See:</i> <a>newListSafetyRulesResponse</a> smart constructor.
data ListSafetyRulesResponse
ListSafetyRulesResponse' :: Maybe Text -> Maybe [Rule] -> Int -> ListSafetyRulesResponse

-- | Create a value of <a>ListSafetyRulesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListSafetyRules'</a>,
--   <a>listSafetyRulesResponse_nextToken</a> - The token that identifies
--   which batch of results you want to see.
--   
--   <a>$sel:safetyRules:ListSafetyRulesResponse'</a>,
--   <a>listSafetyRulesResponse_safetyRules</a> - The list of safety rules
--   in a control panel.
--   
--   <a>$sel:httpStatus:ListSafetyRulesResponse'</a>,
--   <a>listSafetyRulesResponse_httpStatus</a> - The response's http status
--   code.
newListSafetyRulesResponse :: Int -> ListSafetyRulesResponse

-- | <i>See:</i> <a>newDescribeRoutingControl</a> smart constructor.
data DescribeRoutingControl
DescribeRoutingControl' :: Text -> DescribeRoutingControl

-- | Create a value of <a>DescribeRoutingControl</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:routingControlArn:DescribeRoutingControl'</a>,
--   <a>describeRoutingControl_routingControlArn</a> - The Amazon Resource
--   Name (ARN) of the routing control that you're getting details for.
newDescribeRoutingControl :: Text -> DescribeRoutingControl

-- | <i>See:</i> <a>newDescribeRoutingControlResponse</a> smart
--   constructor.
data DescribeRoutingControlResponse
DescribeRoutingControlResponse' :: Maybe RoutingControl -> Int -> DescribeRoutingControlResponse

-- | Create a value of <a>DescribeRoutingControlResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:routingControl:DescribeRoutingControlResponse'</a>,
--   <a>describeRoutingControlResponse_routingControl</a> - Information
--   about the routing control.
--   
--   <a>$sel:httpStatus:DescribeRoutingControlResponse'</a>,
--   <a>describeRoutingControlResponse_httpStatus</a> - The response's http
--   status code.
newDescribeRoutingControlResponse :: Int -> DescribeRoutingControlResponse

-- | An enumerated type that determines how the evaluated rules are
--   processed. RuleType can be one of the following:
--   
--   ATLEAST - At least N routing controls must be set. You specify N as
--   the Threshold in the rule configuration.
--   
--   AND - All routing controls must be set. This is a shortcut for "At
--   least N," where N is the total number of controls in the rule.
--   
--   OR - Any control must be set. This is a shortcut for "At least N,"
--   where N is 1.
newtype RuleType
RuleType' :: Text -> RuleType
[fromRuleType] :: RuleType -> Text
pattern RuleType_AND :: RuleType
pattern RuleType_ATLEAST :: RuleType
pattern RuleType_OR :: RuleType

-- | The deployment status of a resource. Status can be one of the
--   following:
--   
--   PENDING: Amazon Route 53 Application Recovery Controller is creating
--   the resource.
--   
--   DEPLOYED: The resource is deployed and ready to use.
--   
--   PENDING_DELETION: Amazon Route 53 Application Recovery Controller is
--   deleting the resource.
newtype Status
Status' :: Text -> Status
[fromStatus] :: Status -> Text
pattern Status_DEPLOYED :: Status
pattern Status_PENDING :: Status
pattern Status_PENDING_DELETION :: Status

-- | An assertion rule enforces that, when a routing control state is
--   changed, the criteria set by the rule configuration is met. Otherwise,
--   the change to the routing control is not accepted.
--   
--   <i>See:</i> <a>newAssertionRule</a> smart constructor.
data AssertionRule
AssertionRule' :: Status -> Text -> Text -> [Text] -> RuleConfig -> Int -> Text -> AssertionRule

-- | Create a value of <a>AssertionRule</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:AssertionRule'</a>, <a>assertionRule_status</a> - The
--   deployment status of an assertion rule. Status can be one of the
--   following: PENDING, DEPLOYED, PENDING_DELETION.
--   
--   <a>$sel:controlPanelArn:AssertionRule'</a>,
--   <a>assertionRule_controlPanelArn</a> - The Amazon Resource Name (ARN)
--   of the control panel.
--   
--   <a>$sel:safetyRuleArn:AssertionRule'</a>,
--   <a>assertionRule_safetyRuleArn</a> - The Amazon Resource Name (ARN) of
--   the assertion rule.
--   
--   <a>$sel:assertedControls:AssertionRule'</a>,
--   <a>assertionRule_assertedControls</a> - The routing controls that are
--   part of transactions that are evaluated to determine if a request to
--   change a routing control state is allowed. For example, you might
--   include three routing controls, one for each of three Amazon Web
--   Services Regions.
--   
--   <a>$sel:ruleConfig:AssertionRule'</a>, <a>assertionRule_ruleConfig</a>
--   - The criteria that you set for specific assertion controls (routing
--   controls) that designate how many controls must be enabled as the
--   result of a transaction. For example, if you have three assertion
--   controls, you might specify atleast 2 for your rule configuration.
--   This means that at least two assertion controls must be enabled, so
--   that at least two Amazon Web Services Regions are enabled.
--   
--   <a>$sel:waitPeriodMs:AssertionRule'</a>,
--   <a>assertionRule_waitPeriodMs</a> - An evaluation period, in
--   milliseconds (ms), during which any request against the target routing
--   controls will fail. This helps prevent "flapping" of state. The wait
--   period is 5000 ms by default, but you can choose a custom value.
--   
--   <a>$sel:name:AssertionRule'</a>, <a>assertionRule_name</a> - Name of
--   the assertion rule. You can use any non-white space character in the
--   name.
newAssertionRule :: Status -> Text -> Text -> RuleConfig -> Int -> Text -> AssertionRule

-- | An update to an assertion rule. You can update the name or the
--   evaluation period (wait period). If you don't specify one of the items
--   to update, the item is unchanged.
--   
--   <i>See:</i> <a>newAssertionRuleUpdate</a> smart constructor.
data AssertionRuleUpdate
AssertionRuleUpdate' :: Text -> Int -> Text -> AssertionRuleUpdate

-- | Create a value of <a>AssertionRuleUpdate</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:safetyRuleArn:AssertionRuleUpdate'</a>,
--   <a>assertionRuleUpdate_safetyRuleArn</a> - The Amazon Resource Name
--   (ARN) of the assertion rule.
--   
--   <a>$sel:waitPeriodMs:AssertionRuleUpdate'</a>,
--   <a>assertionRuleUpdate_waitPeriodMs</a> - An evaluation period, in
--   milliseconds (ms), during which any request against the target routing
--   controls will fail. This helps prevent "flapping" of state. The wait
--   period is 5000 ms by default, but you can choose a custom value.
--   
--   <a>$sel:name:AssertionRuleUpdate'</a>, <a>assertionRuleUpdate_name</a>
--   - The name of the assertion rule. You can use any non-white space
--   character in the name.
newAssertionRuleUpdate :: Text -> Int -> Text -> AssertionRuleUpdate

-- | A cluster is a set of five consensus-forming Regional endpoints that
--   represent the infrastructure that hosts your routing controls.
--   Typically, you host together on one cluster all of the routing
--   controls for your applications.
--   
--   <i>See:</i> <a>newCluster</a> smart constructor.
data Cluster
Cluster' :: Maybe Status -> Maybe Text -> Maybe Text -> Maybe [ClusterEndpoint] -> Cluster

-- | Create a value of <a>Cluster</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:Cluster'</a>, <a>cluster_status</a> - Deployment status
--   of a resource. Status can be one of the following: PENDING, DEPLOYED,
--   PENDING_DELETION.
--   
--   <a>$sel:clusterArn:Cluster'</a>, <a>cluster_clusterArn</a> - The
--   Amazon Resource Name (ARN) of the cluster.
--   
--   <a>$sel:name:Cluster'</a>, <a>cluster_name</a> - The name of the
--   cluster.
--   
--   <a>$sel:clusterEndpoints:Cluster'</a>, <a>cluster_clusterEndpoints</a>
--   - Endpoints for a cluster. Specify one of these endpoints when you
--   want to set or retrieve a routing control state in the cluster.
--   
--   To get or update the routing control state, see the Amazon Route 53
--   Application Recovery Controller Cluster (Data Plane) Actions.
newCluster :: Cluster

-- | A cluster endpoint. Specify an endpoint when you want to set or
--   retrieve a routing control state in the cluster.
--   
--   <i>See:</i> <a>newClusterEndpoint</a> smart constructor.
data ClusterEndpoint
ClusterEndpoint' :: Maybe Text -> Maybe Text -> ClusterEndpoint

-- | Create a value of <a>ClusterEndpoint</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:region:ClusterEndpoint'</a>, <a>clusterEndpoint_region</a> -
--   The Amazon Web Services Region for a cluster endpoint.
--   
--   <a>$sel:endpoint:ClusterEndpoint'</a>, <a>clusterEndpoint_endpoint</a>
--   - A cluster endpoint. Specify an endpoint and Amazon Web Services
--   Region when you want to set or retrieve a routing control state in the
--   cluster.
--   
--   To get or update the routing control state, see the Amazon Route 53
--   Application Recovery Controller Cluster (Data Plane) Actions.
newClusterEndpoint :: ClusterEndpoint

-- | A control panel represents a group of routing controls that can be
--   changed together in a single transaction.
--   
--   <i>See:</i> <a>newControlPanel</a> smart constructor.
data ControlPanel
ControlPanel' :: Maybe Status -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe Bool -> ControlPanel

-- | Create a value of <a>ControlPanel</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:ControlPanel'</a>, <a>controlPanel_status</a> - The
--   deployment status of control panel. Status can be one of the
--   following: PENDING, DEPLOYED, PENDING_DELETION.
--   
--   <a>$sel:controlPanelArn:ControlPanel'</a>,
--   <a>controlPanel_controlPanelArn</a> - The Amazon Resource Name (ARN)
--   of the control panel.
--   
--   <a>$sel:clusterArn:ControlPanel'</a>, <a>controlPanel_clusterArn</a> -
--   The Amazon Resource Name (ARN) of the cluster that includes the
--   control panel.
--   
--   <a>$sel:routingControlCount:ControlPanel'</a>,
--   <a>controlPanel_routingControlCount</a> - The number of routing
--   controls in the control panel.
--   
--   <a>$sel:name:ControlPanel'</a>, <a>controlPanel_name</a> - The name of
--   the control panel. You can use any non-white space character in the
--   name.
--   
--   <a>$sel:defaultControlPanel:ControlPanel'</a>,
--   <a>controlPanel_defaultControlPanel</a> - A flag that Amazon Route 53
--   Application Recovery Controller sets to true to designate the default
--   control panel for a cluster. When you create a cluster, Amazon Route
--   53 Application Recovery Controller creates a control panel, and sets
--   this flag for that control panel. If you create a control panel
--   yourself, this flag is set to false.
newControlPanel :: ControlPanel

-- | A gating rule verifies that a set of gating controls evaluates as
--   true, based on a rule configuration that you specify. If the gating
--   rule evaluates to true, Amazon Route 53 Application Recovery
--   Controller allows a set of routing control state changes to run and
--   complete against the set of target controls.
--   
--   <i>See:</i> <a>newGatingRule</a> smart constructor.
data GatingRule
GatingRule' :: Status -> [Text] -> Text -> Text -> [Text] -> RuleConfig -> Int -> Text -> GatingRule

-- | Create a value of <a>GatingRule</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:GatingRule'</a>, <a>gatingRule_status</a> - The
--   deployment status of a gating rule. Status can be one of the
--   following: PENDING, DEPLOYED, PENDING_DELETION.
--   
--   <a>$sel:targetControls:GatingRule'</a>,
--   <a>gatingRule_targetControls</a> - Routing controls that can only be
--   set or unset if the specified RuleConfig evaluates to true for the
--   specified GatingControls. For example, say you have three gating
--   controls, one for each of three Amazon Web Services Regions. Now you
--   specify ATLEAST 2 as your RuleConfig. With these settings, you can
--   only change (set or unset) the routing controls that you have
--   specified as TargetControls if that rule evaluates to true.
--   
--   In other words, your ability to change the routing controls that you
--   have specified as TargetControls is gated by the rule that you set for
--   the routing controls in GatingControls.
--   
--   <a>$sel:controlPanelArn:GatingRule'</a>,
--   <a>gatingRule_controlPanelArn</a> - The Amazon Resource Name (ARN) of
--   the control panel.
--   
--   <a>$sel:safetyRuleArn:GatingRule'</a>, <a>gatingRule_safetyRuleArn</a>
--   - The Amazon Resource Name (ARN) of the gating rule.
--   
--   <a>$sel:gatingControls:GatingRule'</a>,
--   <a>gatingRule_gatingControls</a> - The gating controls for the gating
--   rule. That is, routing controls that are evaluated by the rule
--   configuration that you specify.
--   
--   <a>$sel:ruleConfig:GatingRule'</a>, <a>gatingRule_ruleConfig</a> - The
--   criteria that you set for specific gating controls (routing controls)
--   that designates how many controls must be enabled to allow you to
--   change (set or unset) the target controls.
--   
--   <a>$sel:waitPeriodMs:GatingRule'</a>, <a>gatingRule_waitPeriodMs</a> -
--   An evaluation period, in milliseconds (ms), during which any request
--   against the target routing controls will fail. This helps prevent
--   "flapping" of state. The wait period is 5000 ms by default, but you
--   can choose a custom value.
--   
--   <a>$sel:name:GatingRule'</a>, <a>gatingRule_name</a> - The name for
--   the gating rule.
newGatingRule :: Status -> Text -> Text -> RuleConfig -> Int -> Text -> GatingRule

-- | Update to a gating rule. You can update the name or the evaluation
--   period (wait period). If you don't specify one of the items to update,
--   the item is unchanged.
--   
--   <i>See:</i> <a>newGatingRuleUpdate</a> smart constructor.
data GatingRuleUpdate
GatingRuleUpdate' :: Text -> Int -> Text -> GatingRuleUpdate

-- | Create a value of <a>GatingRuleUpdate</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:safetyRuleArn:GatingRuleUpdate'</a>,
--   <a>gatingRuleUpdate_safetyRuleArn</a> - The Amazon Resource Name (ARN)
--   of the gating rule.
--   
--   <a>$sel:waitPeriodMs:GatingRuleUpdate'</a>,
--   <a>gatingRuleUpdate_waitPeriodMs</a> - An evaluation period, in
--   milliseconds (ms), during which any request against the target routing
--   controls will fail. This helps prevent "flapping" of state. The wait
--   period is 5000 ms by default, but you can choose a custom value.
--   
--   <a>$sel:name:GatingRuleUpdate'</a>, <a>gatingRuleUpdate_name</a> - The
--   name for the gating rule.
newGatingRuleUpdate :: Text -> Int -> Text -> GatingRuleUpdate

-- | A new assertion rule for a control panel.
--   
--   <i>See:</i> <a>newNewAssertionRule</a> smart constructor.
data NewAssertionRule
NewAssertionRule' :: Text -> [Text] -> RuleConfig -> Int -> Text -> NewAssertionRule

-- | Create a value of <a>NewAssertionRule</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:controlPanelArn:NewAssertionRule'</a>,
--   <a>newAssertionRule_controlPanelArn</a> - The Amazon Resource Name
--   (ARN) for the control panel.
--   
--   <a>$sel:assertedControls:NewAssertionRule'</a>,
--   <a>newAssertionRule_assertedControls</a> - The routing controls that
--   are part of transactions that are evaluated to determine if a request
--   to change a routing control state is allowed. For example, you might
--   include three routing controls, one for each of three Amazon Web
--   Services Regions.
--   
--   <a>$sel:ruleConfig:NewAssertionRule'</a>,
--   <a>newAssertionRule_ruleConfig</a> - The criteria that you set for
--   specific assertion controls (routing controls) that designate how many
--   controls must be enabled as the result of a transaction. For example,
--   if you have three assertion controls, you might specify atleast 2 for
--   your rule configuration. This means that at least two assertion
--   controls must be enabled, so that at least two Amazon Web Services
--   Regions are enabled.
--   
--   <a>$sel:waitPeriodMs:NewAssertionRule'</a>,
--   <a>newAssertionRule_waitPeriodMs</a> - An evaluation period, in
--   milliseconds (ms), during which any request against the target routing
--   controls will fail. This helps prevent "flapping" of state. The wait
--   period is 5000 ms by default, but you can choose a custom value.
--   
--   <a>$sel:name:NewAssertionRule'</a>, <a>newAssertionRule_name</a> - The
--   name of the assertion rule. You can use any non-white space character
--   in the name.
newNewAssertionRule :: Text -> RuleConfig -> Int -> Text -> NewAssertionRule

-- | A new gating rule for a control panel.
--   
--   <i>See:</i> <a>newNewGatingRule</a> smart constructor.
data NewGatingRule
NewGatingRule' :: [Text] -> Text -> [Text] -> RuleConfig -> Int -> Text -> NewGatingRule

-- | Create a value of <a>NewGatingRule</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:targetControls:NewGatingRule'</a>,
--   <a>newGatingRule_targetControls</a> - Routing controls that can only
--   be set or unset if the specified RuleConfig evaluates to true for the
--   specified GatingControls. For example, say you have three gating
--   controls, one for each of three Amazon Web Services Regions. Now you
--   specify AtLeast 2 as your RuleConfig. With these settings, you can
--   only change (set or unset) the routing controls that you have
--   specified as TargetControls if that rule evaluates to true.
--   
--   In other words, your ability to change the routing controls that you
--   have specified as TargetControls is gated by the rule that you set for
--   the routing controls in GatingControls.
--   
--   <a>$sel:controlPanelArn:NewGatingRule'</a>,
--   <a>newGatingRule_controlPanelArn</a> - The Amazon Resource Name (ARN)
--   of the control panel.
--   
--   <a>$sel:gatingControls:NewGatingRule'</a>,
--   <a>newGatingRule_gatingControls</a> - The gating controls for the new
--   gating rule. That is, routing controls that are evaluated by the rule
--   configuration that you specify.
--   
--   <a>$sel:ruleConfig:NewGatingRule'</a>, <a>newGatingRule_ruleConfig</a>
--   - The criteria that you set for specific gating controls (routing
--   controls) that designates how many controls must be enabled to allow
--   you to change (set or unset) the target controls.
--   
--   <a>$sel:waitPeriodMs:NewGatingRule'</a>,
--   <a>newGatingRule_waitPeriodMs</a> - An evaluation period, in
--   milliseconds (ms), during which any request against the target routing
--   controls will fail. This helps prevent "flapping" of state. The wait
--   period is 5000 ms by default, but you can choose a custom value.
--   
--   <a>$sel:name:NewGatingRule'</a>, <a>newGatingRule_name</a> - The name
--   for the new gating rule.
newNewGatingRule :: Text -> RuleConfig -> Int -> Text -> NewGatingRule

-- | A routing control has one of two states: ON and OFF. You can map the
--   routing control state to the state of an Amazon Route 53 health check,
--   which can be used to control traffic routing.
--   
--   <i>See:</i> <a>newRoutingControl</a> smart constructor.
data RoutingControl
RoutingControl' :: Maybe Status -> Maybe Text -> Maybe Text -> Maybe Text -> RoutingControl

-- | Create a value of <a>RoutingControl</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:RoutingControl'</a>, <a>routingControl_status</a> - The
--   deployment status of a routing control. Status can be one of the
--   following: PENDING, DEPLOYED, PENDING_DELETION.
--   
--   <a>$sel:controlPanelArn:RoutingControl'</a>,
--   <a>routingControl_controlPanelArn</a> - The Amazon Resource Name (ARN)
--   of the control panel that includes the routing control.
--   
--   <a>$sel:name:RoutingControl'</a>, <a>routingControl_name</a> - The
--   name of the routing control.
--   
--   <a>$sel:routingControlArn:RoutingControl'</a>,
--   <a>routingControl_routingControlArn</a> - The Amazon Resource Name
--   (ARN) of the routing control.
newRoutingControl :: RoutingControl

-- | A safety rule. A safety rule can be an assertion rule or a gating
--   rule.
--   
--   <i>See:</i> <a>newRule</a> smart constructor.
data Rule
Rule' :: Maybe GatingRule -> Maybe AssertionRule -> Rule

-- | Create a value of <a>Rule</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:gating:Rule'</a>, <a>rule_gating</a> - A gating rule verifies
--   that a set of gating controls evaluates as true, based on a rule
--   configuration that you specify. If the gating rule evaluates to true,
--   Amazon Route 53 Application Recovery Controller allows a set of
--   routing control state changes to run and complete against the set of
--   target controls.
--   
--   <a>$sel:assertion:Rule'</a>, <a>rule_assertion</a> - An assertion rule
--   enforces that, when a routing control state is changed, the criteria
--   set by the rule configuration is met. Otherwise, the change to the
--   routing control is not accepted.
newRule :: Rule

-- | The rule configuration for an assertion rule. That is, the criteria
--   that you set for specific assertion controls (routing controls) that
--   specify how many controls must be enabled after a transaction
--   completes.
--   
--   <i>See:</i> <a>newRuleConfig</a> smart constructor.
data RuleConfig
RuleConfig' :: RuleType -> Bool -> Int -> RuleConfig

-- | Create a value of <a>RuleConfig</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:type':RuleConfig'</a>, <a>ruleConfig_type</a> - A rule can be
--   one of the following: ATLEAST, AND, or OR.
--   
--   <a>$sel:inverted:RuleConfig'</a>, <a>ruleConfig_inverted</a> - Logical
--   negation of the rule. If the rule would usually evaluate true, it's
--   evaluated as false, and vice versa.
--   
--   <a>$sel:threshold:RuleConfig'</a>, <a>ruleConfig_threshold</a> - The
--   value of N, when you specify an ATLEAST rule type. That is, Threshold
--   is the number of controls that must be set when you specify an ATLEAST
--   type.
newRuleConfig :: RuleType -> Bool -> Int -> RuleConfig
