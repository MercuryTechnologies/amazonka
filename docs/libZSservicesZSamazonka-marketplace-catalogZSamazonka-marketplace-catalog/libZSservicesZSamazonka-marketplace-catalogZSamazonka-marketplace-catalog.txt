-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/

@package libZSservicesZSamazonka-marketplace-catalogZSamazonka-marketplace-catalog
@version 2.0


module Amazonka.MarketplaceCatalog.Types.ChangeStatus
newtype ChangeStatus
ChangeStatus' :: Text -> ChangeStatus
[fromChangeStatus] :: ChangeStatus -> Text
pattern ChangeStatus_APPLYING :: ChangeStatus
pattern ChangeStatus_CANCELLED :: ChangeStatus
pattern ChangeStatus_FAILED :: ChangeStatus
pattern ChangeStatus_PREPARING :: ChangeStatus
pattern ChangeStatus_SUCCEEDED :: ChangeStatus
instance Amazonka.Data.XML.ToXML Amazonka.MarketplaceCatalog.Types.ChangeStatus.ChangeStatus
instance Amazonka.Data.XML.FromXML Amazonka.MarketplaceCatalog.Types.ChangeStatus.ChangeStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.MarketplaceCatalog.Types.ChangeStatus.ChangeStatus
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MarketplaceCatalog.Types.ChangeStatus.ChangeStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.MarketplaceCatalog.Types.ChangeStatus.ChangeStatus
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.MarketplaceCatalog.Types.ChangeStatus.ChangeStatus
instance Amazonka.Data.Query.ToQuery Amazonka.MarketplaceCatalog.Types.ChangeStatus.ChangeStatus
instance Amazonka.Data.Headers.ToHeader Amazonka.MarketplaceCatalog.Types.ChangeStatus.ChangeStatus
instance Amazonka.Data.Log.ToLog Amazonka.MarketplaceCatalog.Types.ChangeStatus.ChangeStatus
instance Amazonka.Data.ByteString.ToByteString Amazonka.MarketplaceCatalog.Types.ChangeStatus.ChangeStatus
instance Amazonka.Data.Text.ToText Amazonka.MarketplaceCatalog.Types.ChangeStatus.ChangeStatus
instance Amazonka.Data.Text.FromText Amazonka.MarketplaceCatalog.Types.ChangeStatus.ChangeStatus
instance Control.DeepSeq.NFData Amazonka.MarketplaceCatalog.Types.ChangeStatus.ChangeStatus
instance Data.Hashable.Class.Hashable Amazonka.MarketplaceCatalog.Types.ChangeStatus.ChangeStatus
instance GHC.Generics.Generic Amazonka.MarketplaceCatalog.Types.ChangeStatus.ChangeStatus
instance GHC.Classes.Ord Amazonka.MarketplaceCatalog.Types.ChangeStatus.ChangeStatus
instance GHC.Classes.Eq Amazonka.MarketplaceCatalog.Types.ChangeStatus.ChangeStatus
instance GHC.Read.Read Amazonka.MarketplaceCatalog.Types.ChangeStatus.ChangeStatus
instance GHC.Show.Show Amazonka.MarketplaceCatalog.Types.ChangeStatus.ChangeStatus


module Amazonka.MarketplaceCatalog.Types.Entity

-- | An entity contains data that describes your product, its supported
--   features, and how it can be used or launched by your customer.
--   
--   <i>See:</i> <a>newEntity</a> smart constructor.
data Entity
Entity' :: Maybe Text -> Text -> Entity

-- | The identifier for the entity.
[$sel:identifier:Entity'] :: Entity -> Maybe Text

-- | The type of entity.
[$sel:type':Entity'] :: Entity -> Text

-- | Create a value of <a>Entity</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:identifier:Entity'</a>, <a>entity_identifier</a> - The
--   identifier for the entity.
--   
--   <a>$sel:type':Entity'</a>, <a>entity_type</a> - The type of entity.
newEntity :: Text -> Entity

-- | The identifier for the entity.
entity_identifier :: Lens' Entity (Maybe Text)

-- | The type of entity.
entity_type :: Lens' Entity Text
instance GHC.Generics.Generic Amazonka.MarketplaceCatalog.Types.Entity.Entity
instance GHC.Show.Show Amazonka.MarketplaceCatalog.Types.Entity.Entity
instance GHC.Read.Read Amazonka.MarketplaceCatalog.Types.Entity.Entity
instance GHC.Classes.Eq Amazonka.MarketplaceCatalog.Types.Entity.Entity
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.MarketplaceCatalog.Types.Entity.Entity
instance Data.Hashable.Class.Hashable Amazonka.MarketplaceCatalog.Types.Entity.Entity
instance Control.DeepSeq.NFData Amazonka.MarketplaceCatalog.Types.Entity.Entity
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MarketplaceCatalog.Types.Entity.Entity


module Amazonka.MarketplaceCatalog.Types.Change

-- | An object that contains the <tt>ChangeType</tt>, <tt>Details</tt>, and
--   <tt>Entity</tt>.
--   
--   <i>See:</i> <a>newChange</a> smart constructor.
data Change
Change' :: Maybe Text -> Text -> Entity -> Text -> Change

-- | Optional name for the change.
[$sel:changeName:Change'] :: Change -> Maybe Text

-- | Change types are single string values that describe your intention for
--   the change. Each change type is unique for each <tt>EntityType</tt>
--   provided in the change's scope.
[$sel:changeType:Change'] :: Change -> Text

-- | The entity to be changed.
[$sel:entity:Change'] :: Change -> Entity

-- | This object contains details specific to the change type of the
--   requested change.
[$sel:details:Change'] :: Change -> Text

-- | Create a value of <a>Change</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:changeName:Change'</a>, <a>change_changeName</a> - Optional
--   name for the change.
--   
--   <a>$sel:changeType:Change'</a>, <a>change_changeType</a> - Change
--   types are single string values that describe your intention for the
--   change. Each change type is unique for each <tt>EntityType</tt>
--   provided in the change's scope.
--   
--   <a>$sel:entity:Change'</a>, <a>change_entity</a> - The entity to be
--   changed.
--   
--   <a>$sel:details:Change'</a>, <a>change_details</a> - This object
--   contains details specific to the change type of the requested change.
newChange :: Text -> Entity -> Text -> Change

-- | Optional name for the change.
change_changeName :: Lens' Change (Maybe Text)

-- | Change types are single string values that describe your intention for
--   the change. Each change type is unique for each <tt>EntityType</tt>
--   provided in the change's scope.
change_changeType :: Lens' Change Text

-- | The entity to be changed.
change_entity :: Lens' Change Entity

-- | This object contains details specific to the change type of the
--   requested change.
change_details :: Lens' Change Text
instance GHC.Generics.Generic Amazonka.MarketplaceCatalog.Types.Change.Change
instance GHC.Show.Show Amazonka.MarketplaceCatalog.Types.Change.Change
instance GHC.Read.Read Amazonka.MarketplaceCatalog.Types.Change.Change
instance GHC.Classes.Eq Amazonka.MarketplaceCatalog.Types.Change.Change
instance Data.Hashable.Class.Hashable Amazonka.MarketplaceCatalog.Types.Change.Change
instance Control.DeepSeq.NFData Amazonka.MarketplaceCatalog.Types.Change.Change
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MarketplaceCatalog.Types.Change.Change


module Amazonka.MarketplaceCatalog.Types.EntitySummary

-- | This object is a container for common summary information about the
--   entity. The summary doesn't contain the whole entity structure, but it
--   does contain information common across all entities.
--   
--   <i>See:</i> <a>newEntitySummary</a> smart constructor.
data EntitySummary
EntitySummary' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> EntitySummary

-- | The last time the entity was published, using ISO 8601 format
--   (2018-02-27T13:45:22Z).
[$sel:lastModifiedDate:EntitySummary'] :: EntitySummary -> Maybe Text

-- | The type of the entity.
[$sel:entityType:EntitySummary'] :: EntitySummary -> Maybe Text

-- | The visibility status of the entity to buyers. This value can be
--   <tt>Public</tt> (everyone can view the entity), <tt>Limited</tt> (the
--   entity is visible to limited accounts only), or <tt>Restricted</tt>
--   (the entity was published and then unpublished and only existing
--   buyers can view it).
[$sel:visibility:EntitySummary'] :: EntitySummary -> Maybe Text

-- | The name for the entity. This value is not unique. It is defined by
--   the seller.
[$sel:name:EntitySummary'] :: EntitySummary -> Maybe Text

-- | The unique identifier for the entity.
[$sel:entityId:EntitySummary'] :: EntitySummary -> Maybe Text

-- | The ARN associated with the unique identifier for the entity.
[$sel:entityArn:EntitySummary'] :: EntitySummary -> Maybe Text

-- | Create a value of <a>EntitySummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lastModifiedDate:EntitySummary'</a>,
--   <a>entitySummary_lastModifiedDate</a> - The last time the entity was
--   published, using ISO 8601 format (2018-02-27T13:45:22Z).
--   
--   <a>$sel:entityType:EntitySummary'</a>, <a>entitySummary_entityType</a>
--   - The type of the entity.
--   
--   <a>$sel:visibility:EntitySummary'</a>, <a>entitySummary_visibility</a>
--   - The visibility status of the entity to buyers. This value can be
--   <tt>Public</tt> (everyone can view the entity), <tt>Limited</tt> (the
--   entity is visible to limited accounts only), or <tt>Restricted</tt>
--   (the entity was published and then unpublished and only existing
--   buyers can view it).
--   
--   <a>$sel:name:EntitySummary'</a>, <a>entitySummary_name</a> - The name
--   for the entity. This value is not unique. It is defined by the seller.
--   
--   <a>$sel:entityId:EntitySummary'</a>, <a>entitySummary_entityId</a> -
--   The unique identifier for the entity.
--   
--   <a>$sel:entityArn:EntitySummary'</a>, <a>entitySummary_entityArn</a> -
--   The ARN associated with the unique identifier for the entity.
newEntitySummary :: EntitySummary

-- | The last time the entity was published, using ISO 8601 format
--   (2018-02-27T13:45:22Z).
entitySummary_lastModifiedDate :: Lens' EntitySummary (Maybe Text)

-- | The type of the entity.
entitySummary_entityType :: Lens' EntitySummary (Maybe Text)

-- | The visibility status of the entity to buyers. This value can be
--   <tt>Public</tt> (everyone can view the entity), <tt>Limited</tt> (the
--   entity is visible to limited accounts only), or <tt>Restricted</tt>
--   (the entity was published and then unpublished and only existing
--   buyers can view it).
entitySummary_visibility :: Lens' EntitySummary (Maybe Text)

-- | The name for the entity. This value is not unique. It is defined by
--   the seller.
entitySummary_name :: Lens' EntitySummary (Maybe Text)

-- | The unique identifier for the entity.
entitySummary_entityId :: Lens' EntitySummary (Maybe Text)

-- | The ARN associated with the unique identifier for the entity.
entitySummary_entityArn :: Lens' EntitySummary (Maybe Text)
instance GHC.Generics.Generic Amazonka.MarketplaceCatalog.Types.EntitySummary.EntitySummary
instance GHC.Show.Show Amazonka.MarketplaceCatalog.Types.EntitySummary.EntitySummary
instance GHC.Read.Read Amazonka.MarketplaceCatalog.Types.EntitySummary.EntitySummary
instance GHC.Classes.Eq Amazonka.MarketplaceCatalog.Types.EntitySummary.EntitySummary
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.MarketplaceCatalog.Types.EntitySummary.EntitySummary
instance Data.Hashable.Class.Hashable Amazonka.MarketplaceCatalog.Types.EntitySummary.EntitySummary
instance Control.DeepSeq.NFData Amazonka.MarketplaceCatalog.Types.EntitySummary.EntitySummary


module Amazonka.MarketplaceCatalog.Types.ErrorDetail

-- | Details about the error.
--   
--   <i>See:</i> <a>newErrorDetail</a> smart constructor.
data ErrorDetail
ErrorDetail' :: Maybe Text -> Maybe Text -> ErrorDetail

-- | The error code that identifies the type of error.
[$sel:errorCode:ErrorDetail'] :: ErrorDetail -> Maybe Text

-- | The message for the error.
[$sel:errorMessage:ErrorDetail'] :: ErrorDetail -> Maybe Text

-- | Create a value of <a>ErrorDetail</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:errorCode:ErrorDetail'</a>, <a>errorDetail_errorCode</a> - The
--   error code that identifies the type of error.
--   
--   <a>$sel:errorMessage:ErrorDetail'</a>, <a>errorDetail_errorMessage</a>
--   - The message for the error.
newErrorDetail :: ErrorDetail

-- | The error code that identifies the type of error.
errorDetail_errorCode :: Lens' ErrorDetail (Maybe Text)

-- | The message for the error.
errorDetail_errorMessage :: Lens' ErrorDetail (Maybe Text)
instance GHC.Generics.Generic Amazonka.MarketplaceCatalog.Types.ErrorDetail.ErrorDetail
instance GHC.Show.Show Amazonka.MarketplaceCatalog.Types.ErrorDetail.ErrorDetail
instance GHC.Read.Read Amazonka.MarketplaceCatalog.Types.ErrorDetail.ErrorDetail
instance GHC.Classes.Eq Amazonka.MarketplaceCatalog.Types.ErrorDetail.ErrorDetail
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.MarketplaceCatalog.Types.ErrorDetail.ErrorDetail
instance Data.Hashable.Class.Hashable Amazonka.MarketplaceCatalog.Types.ErrorDetail.ErrorDetail
instance Control.DeepSeq.NFData Amazonka.MarketplaceCatalog.Types.ErrorDetail.ErrorDetail


module Amazonka.MarketplaceCatalog.Types.ChangeSummary

-- | This object is a container for common summary information about the
--   change. The summary doesn't contain the whole change structure.
--   
--   <i>See:</i> <a>newChangeSummary</a> smart constructor.
data ChangeSummary
ChangeSummary' :: Maybe Text -> Maybe Text -> Maybe [ErrorDetail] -> Maybe Entity -> Maybe Text -> ChangeSummary

-- | Optional name for the change.
[$sel:changeName:ChangeSummary'] :: ChangeSummary -> Maybe Text

-- | This object contains details specific to the change type of the
--   requested change.
[$sel:details:ChangeSummary'] :: ChangeSummary -> Maybe Text

-- | An array of <tt>ErrorDetail</tt> objects associated with the change.
[$sel:errorDetailList:ChangeSummary'] :: ChangeSummary -> Maybe [ErrorDetail]

-- | The entity to be changed.
[$sel:entity:ChangeSummary'] :: ChangeSummary -> Maybe Entity

-- | The type of the change.
[$sel:changeType:ChangeSummary'] :: ChangeSummary -> Maybe Text

-- | Create a value of <a>ChangeSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:changeName:ChangeSummary'</a>, <a>changeSummary_changeName</a>
--   - Optional name for the change.
--   
--   <a>$sel:details:ChangeSummary'</a>, <a>changeSummary_details</a> -
--   This object contains details specific to the change type of the
--   requested change.
--   
--   <a>$sel:errorDetailList:ChangeSummary'</a>,
--   <a>changeSummary_errorDetailList</a> - An array of
--   <tt>ErrorDetail</tt> objects associated with the change.
--   
--   <a>$sel:entity:ChangeSummary'</a>, <a>changeSummary_entity</a> - The
--   entity to be changed.
--   
--   <a>$sel:changeType:ChangeSummary'</a>, <a>changeSummary_changeType</a>
--   - The type of the change.
newChangeSummary :: ChangeSummary

-- | Optional name for the change.
changeSummary_changeName :: Lens' ChangeSummary (Maybe Text)

-- | This object contains details specific to the change type of the
--   requested change.
changeSummary_details :: Lens' ChangeSummary (Maybe Text)

-- | An array of <tt>ErrorDetail</tt> objects associated with the change.
changeSummary_errorDetailList :: Lens' ChangeSummary (Maybe [ErrorDetail])

-- | The entity to be changed.
changeSummary_entity :: Lens' ChangeSummary (Maybe Entity)

-- | The type of the change.
changeSummary_changeType :: Lens' ChangeSummary (Maybe Text)
instance GHC.Generics.Generic Amazonka.MarketplaceCatalog.Types.ChangeSummary.ChangeSummary
instance GHC.Show.Show Amazonka.MarketplaceCatalog.Types.ChangeSummary.ChangeSummary
instance GHC.Read.Read Amazonka.MarketplaceCatalog.Types.ChangeSummary.ChangeSummary
instance GHC.Classes.Eq Amazonka.MarketplaceCatalog.Types.ChangeSummary.ChangeSummary
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.MarketplaceCatalog.Types.ChangeSummary.ChangeSummary
instance Data.Hashable.Class.Hashable Amazonka.MarketplaceCatalog.Types.ChangeSummary.ChangeSummary
instance Control.DeepSeq.NFData Amazonka.MarketplaceCatalog.Types.ChangeSummary.ChangeSummary


module Amazonka.MarketplaceCatalog.Types.FailureCode
newtype FailureCode
FailureCode' :: Text -> FailureCode
[fromFailureCode] :: FailureCode -> Text
pattern FailureCode_CLIENT_ERROR :: FailureCode
pattern FailureCode_SERVER_FAULT :: FailureCode
instance Amazonka.Data.XML.ToXML Amazonka.MarketplaceCatalog.Types.FailureCode.FailureCode
instance Amazonka.Data.XML.FromXML Amazonka.MarketplaceCatalog.Types.FailureCode.FailureCode
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.MarketplaceCatalog.Types.FailureCode.FailureCode
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MarketplaceCatalog.Types.FailureCode.FailureCode
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.MarketplaceCatalog.Types.FailureCode.FailureCode
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.MarketplaceCatalog.Types.FailureCode.FailureCode
instance Amazonka.Data.Query.ToQuery Amazonka.MarketplaceCatalog.Types.FailureCode.FailureCode
instance Amazonka.Data.Headers.ToHeader Amazonka.MarketplaceCatalog.Types.FailureCode.FailureCode
instance Amazonka.Data.Log.ToLog Amazonka.MarketplaceCatalog.Types.FailureCode.FailureCode
instance Amazonka.Data.ByteString.ToByteString Amazonka.MarketplaceCatalog.Types.FailureCode.FailureCode
instance Amazonka.Data.Text.ToText Amazonka.MarketplaceCatalog.Types.FailureCode.FailureCode
instance Amazonka.Data.Text.FromText Amazonka.MarketplaceCatalog.Types.FailureCode.FailureCode
instance Control.DeepSeq.NFData Amazonka.MarketplaceCatalog.Types.FailureCode.FailureCode
instance Data.Hashable.Class.Hashable Amazonka.MarketplaceCatalog.Types.FailureCode.FailureCode
instance GHC.Generics.Generic Amazonka.MarketplaceCatalog.Types.FailureCode.FailureCode
instance GHC.Classes.Ord Amazonka.MarketplaceCatalog.Types.FailureCode.FailureCode
instance GHC.Classes.Eq Amazonka.MarketplaceCatalog.Types.FailureCode.FailureCode
instance GHC.Read.Read Amazonka.MarketplaceCatalog.Types.FailureCode.FailureCode
instance GHC.Show.Show Amazonka.MarketplaceCatalog.Types.FailureCode.FailureCode


module Amazonka.MarketplaceCatalog.Types.ChangeSetSummaryListItem

-- | A summary of a change set returned in a list of change sets when the
--   <tt>ListChangeSets</tt> action is called.
--   
--   <i>See:</i> <a>newChangeSetSummaryListItem</a> smart constructor.
data ChangeSetSummaryListItem
ChangeSetSummaryListItem' :: Maybe ChangeStatus -> Maybe [Text] -> Maybe Text -> Maybe FailureCode -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> ChangeSetSummaryListItem

-- | The current status of the change set.
[$sel:status:ChangeSetSummaryListItem'] :: ChangeSetSummaryListItem -> Maybe ChangeStatus

-- | This object is a list of entity IDs (string) that are a part of a
--   change set. The entity ID list is a maximum of 20 entities. It must
--   contain at least one entity.
[$sel:entityIdList:ChangeSetSummaryListItem'] :: ChangeSetSummaryListItem -> Maybe [Text]

-- | The time, in ISO 8601 format (2018-02-27T13:45:22Z), when the change
--   set was started.
[$sel:startTime:ChangeSetSummaryListItem'] :: ChangeSetSummaryListItem -> Maybe Text

-- | Returned if the change set is in <tt>FAILED</tt> status. Can be either
--   <tt>CLIENT_ERROR</tt>, which means that there are issues with the
--   request (see the <tt>ErrorDetailList</tt> of
--   <tt>DescribeChangeSet</tt>), or <tt>SERVER_FAULT</tt>, which means
--   that there is a problem in the system, and you should retry your
--   request.
[$sel:failureCode:ChangeSetSummaryListItem'] :: ChangeSetSummaryListItem -> Maybe FailureCode

-- | The non-unique name for the change set.
[$sel:changeSetName:ChangeSetSummaryListItem'] :: ChangeSetSummaryListItem -> Maybe Text

-- | The unique identifier for a change set.
[$sel:changeSetId:ChangeSetSummaryListItem'] :: ChangeSetSummaryListItem -> Maybe Text

-- | The time, in ISO 8601 format (2018-02-27T13:45:22Z), when the change
--   set was finished.
[$sel:endTime:ChangeSetSummaryListItem'] :: ChangeSetSummaryListItem -> Maybe Text

-- | The ARN associated with the unique identifier for the change set
--   referenced in this request.
[$sel:changeSetArn:ChangeSetSummaryListItem'] :: ChangeSetSummaryListItem -> Maybe Text

-- | Create a value of <a>ChangeSetSummaryListItem</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:ChangeSetSummaryListItem'</a>,
--   <a>changeSetSummaryListItem_status</a> - The current status of the
--   change set.
--   
--   <a>$sel:entityIdList:ChangeSetSummaryListItem'</a>,
--   <a>changeSetSummaryListItem_entityIdList</a> - This object is a list
--   of entity IDs (string) that are a part of a change set. The entity ID
--   list is a maximum of 20 entities. It must contain at least one entity.
--   
--   <a>$sel:startTime:ChangeSetSummaryListItem'</a>,
--   <a>changeSetSummaryListItem_startTime</a> - The time, in ISO 8601
--   format (2018-02-27T13:45:22Z), when the change set was started.
--   
--   <a>$sel:failureCode:ChangeSetSummaryListItem'</a>,
--   <a>changeSetSummaryListItem_failureCode</a> - Returned if the change
--   set is in <tt>FAILED</tt> status. Can be either <tt>CLIENT_ERROR</tt>,
--   which means that there are issues with the request (see the
--   <tt>ErrorDetailList</tt> of <tt>DescribeChangeSet</tt>), or
--   <tt>SERVER_FAULT</tt>, which means that there is a problem in the
--   system, and you should retry your request.
--   
--   <a>$sel:changeSetName:ChangeSetSummaryListItem'</a>,
--   <a>changeSetSummaryListItem_changeSetName</a> - The non-unique name
--   for the change set.
--   
--   <a>$sel:changeSetId:ChangeSetSummaryListItem'</a>,
--   <a>changeSetSummaryListItem_changeSetId</a> - The unique identifier
--   for a change set.
--   
--   <a>$sel:endTime:ChangeSetSummaryListItem'</a>,
--   <a>changeSetSummaryListItem_endTime</a> - The time, in ISO 8601 format
--   (2018-02-27T13:45:22Z), when the change set was finished.
--   
--   <a>$sel:changeSetArn:ChangeSetSummaryListItem'</a>,
--   <a>changeSetSummaryListItem_changeSetArn</a> - The ARN associated with
--   the unique identifier for the change set referenced in this request.
newChangeSetSummaryListItem :: ChangeSetSummaryListItem

-- | The current status of the change set.
changeSetSummaryListItem_status :: Lens' ChangeSetSummaryListItem (Maybe ChangeStatus)

-- | This object is a list of entity IDs (string) that are a part of a
--   change set. The entity ID list is a maximum of 20 entities. It must
--   contain at least one entity.
changeSetSummaryListItem_entityIdList :: Lens' ChangeSetSummaryListItem (Maybe [Text])

-- | The time, in ISO 8601 format (2018-02-27T13:45:22Z), when the change
--   set was started.
changeSetSummaryListItem_startTime :: Lens' ChangeSetSummaryListItem (Maybe Text)

-- | Returned if the change set is in <tt>FAILED</tt> status. Can be either
--   <tt>CLIENT_ERROR</tt>, which means that there are issues with the
--   request (see the <tt>ErrorDetailList</tt> of
--   <tt>DescribeChangeSet</tt>), or <tt>SERVER_FAULT</tt>, which means
--   that there is a problem in the system, and you should retry your
--   request.
changeSetSummaryListItem_failureCode :: Lens' ChangeSetSummaryListItem (Maybe FailureCode)

-- | The non-unique name for the change set.
changeSetSummaryListItem_changeSetName :: Lens' ChangeSetSummaryListItem (Maybe Text)

-- | The unique identifier for a change set.
changeSetSummaryListItem_changeSetId :: Lens' ChangeSetSummaryListItem (Maybe Text)

-- | The time, in ISO 8601 format (2018-02-27T13:45:22Z), when the change
--   set was finished.
changeSetSummaryListItem_endTime :: Lens' ChangeSetSummaryListItem (Maybe Text)

-- | The ARN associated with the unique identifier for the change set
--   referenced in this request.
changeSetSummaryListItem_changeSetArn :: Lens' ChangeSetSummaryListItem (Maybe Text)
instance GHC.Generics.Generic Amazonka.MarketplaceCatalog.Types.ChangeSetSummaryListItem.ChangeSetSummaryListItem
instance GHC.Show.Show Amazonka.MarketplaceCatalog.Types.ChangeSetSummaryListItem.ChangeSetSummaryListItem
instance GHC.Read.Read Amazonka.MarketplaceCatalog.Types.ChangeSetSummaryListItem.ChangeSetSummaryListItem
instance GHC.Classes.Eq Amazonka.MarketplaceCatalog.Types.ChangeSetSummaryListItem.ChangeSetSummaryListItem
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.MarketplaceCatalog.Types.ChangeSetSummaryListItem.ChangeSetSummaryListItem
instance Data.Hashable.Class.Hashable Amazonka.MarketplaceCatalog.Types.ChangeSetSummaryListItem.ChangeSetSummaryListItem
instance Control.DeepSeq.NFData Amazonka.MarketplaceCatalog.Types.ChangeSetSummaryListItem.ChangeSetSummaryListItem


module Amazonka.MarketplaceCatalog.Types.Filter

-- | A filter object, used to optionally filter results from calls to the
--   <tt>ListEntities</tt> and <tt>ListChangeSets</tt> actions.
--   
--   <i>See:</i> <a>newFilter</a> smart constructor.
data Filter
Filter' :: Maybe (NonEmpty Text) -> Maybe Text -> Filter

-- | <tt>ListEntities</tt> - This is a list of unique <tt>EntityId</tt>s.
--   
--   <tt>ListChangeSets</tt> - The supported filter names and associated
--   <tt>ValueList</tt>s is as follows:
--   
--   <ul>
--   <li><tt>ChangeSetName</tt> - The supported <tt>ValueList</tt> is a
--   list of non-unique <tt>ChangeSetName</tt>s. These are defined when you
--   call the <tt>StartChangeSet</tt> action.</li>
--   <li><tt>Status</tt> - The supported <tt>ValueList</tt> is a list of
--   statuses for all change set requests.</li>
--   <li><tt>EntityId</tt> - The supported <tt>ValueList</tt> is a list of
--   unique <tt>EntityId</tt>s.</li>
--   <li><tt>BeforeStartTime</tt> - The supported <tt>ValueList</tt> is a
--   list of all change sets that started before the filter value.</li>
--   <li><tt>AfterStartTime</tt> - The supported <tt>ValueList</tt> is a
--   list of all change sets that started after the filter value.</li>
--   <li><tt>BeforeEndTime</tt> - The supported <tt>ValueList</tt> is a
--   list of all change sets that ended before the filter value.</li>
--   <li><tt>AfterEndTime</tt> - The supported <tt>ValueList</tt> is a list
--   of all change sets that ended after the filter value.</li>
--   </ul>
[$sel:valueList:Filter'] :: Filter -> Maybe (NonEmpty Text)

-- | For <tt>ListEntities</tt>, the supported value for this is an
--   <tt>EntityId</tt>.
--   
--   For <tt>ListChangeSets</tt>, the supported values are as follows:
[$sel:name:Filter'] :: Filter -> Maybe Text

-- | Create a value of <a>Filter</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:valueList:Filter'</a>, <a>filter_valueList</a> -
--   <tt>ListEntities</tt> - This is a list of unique <tt>EntityId</tt>s.
--   
--   <tt>ListChangeSets</tt> - The supported filter names and associated
--   <tt>ValueList</tt>s is as follows:
--   
--   <ul>
--   <li><tt>ChangeSetName</tt> - The supported <tt>ValueList</tt> is a
--   list of non-unique <tt>ChangeSetName</tt>s. These are defined when you
--   call the <tt>StartChangeSet</tt> action.</li>
--   <li><tt>Status</tt> - The supported <tt>ValueList</tt> is a list of
--   statuses for all change set requests.</li>
--   <li><tt>EntityId</tt> - The supported <tt>ValueList</tt> is a list of
--   unique <tt>EntityId</tt>s.</li>
--   <li><tt>BeforeStartTime</tt> - The supported <tt>ValueList</tt> is a
--   list of all change sets that started before the filter value.</li>
--   <li><tt>AfterStartTime</tt> - The supported <tt>ValueList</tt> is a
--   list of all change sets that started after the filter value.</li>
--   <li><tt>BeforeEndTime</tt> - The supported <tt>ValueList</tt> is a
--   list of all change sets that ended before the filter value.</li>
--   <li><tt>AfterEndTime</tt> - The supported <tt>ValueList</tt> is a list
--   of all change sets that ended after the filter value.</li>
--   </ul>
--   
--   <a>$sel:name:Filter'</a>, <a>filter_name</a> - For
--   <tt>ListEntities</tt>, the supported value for this is an
--   <tt>EntityId</tt>.
--   
--   For <tt>ListChangeSets</tt>, the supported values are as follows:
newFilter :: Filter

-- | <tt>ListEntities</tt> - This is a list of unique <tt>EntityId</tt>s.
--   
--   <tt>ListChangeSets</tt> - The supported filter names and associated
--   <tt>ValueList</tt>s is as follows:
--   
--   <ul>
--   <li><tt>ChangeSetName</tt> - The supported <tt>ValueList</tt> is a
--   list of non-unique <tt>ChangeSetName</tt>s. These are defined when you
--   call the <tt>StartChangeSet</tt> action.</li>
--   <li><tt>Status</tt> - The supported <tt>ValueList</tt> is a list of
--   statuses for all change set requests.</li>
--   <li><tt>EntityId</tt> - The supported <tt>ValueList</tt> is a list of
--   unique <tt>EntityId</tt>s.</li>
--   <li><tt>BeforeStartTime</tt> - The supported <tt>ValueList</tt> is a
--   list of all change sets that started before the filter value.</li>
--   <li><tt>AfterStartTime</tt> - The supported <tt>ValueList</tt> is a
--   list of all change sets that started after the filter value.</li>
--   <li><tt>BeforeEndTime</tt> - The supported <tt>ValueList</tt> is a
--   list of all change sets that ended before the filter value.</li>
--   <li><tt>AfterEndTime</tt> - The supported <tt>ValueList</tt> is a list
--   of all change sets that ended after the filter value.</li>
--   </ul>
filter_valueList :: Lens' Filter (Maybe (NonEmpty Text))

-- | For <tt>ListEntities</tt>, the supported value for this is an
--   <tt>EntityId</tt>.
--   
--   For <tt>ListChangeSets</tt>, the supported values are as follows:
filter_name :: Lens' Filter (Maybe Text)
instance GHC.Generics.Generic Amazonka.MarketplaceCatalog.Types.Filter.Filter
instance GHC.Show.Show Amazonka.MarketplaceCatalog.Types.Filter.Filter
instance GHC.Read.Read Amazonka.MarketplaceCatalog.Types.Filter.Filter
instance GHC.Classes.Eq Amazonka.MarketplaceCatalog.Types.Filter.Filter
instance Data.Hashable.Class.Hashable Amazonka.MarketplaceCatalog.Types.Filter.Filter
instance Control.DeepSeq.NFData Amazonka.MarketplaceCatalog.Types.Filter.Filter
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MarketplaceCatalog.Types.Filter.Filter


module Amazonka.MarketplaceCatalog.Types.SortOrder
newtype SortOrder
SortOrder' :: Text -> SortOrder
[fromSortOrder] :: SortOrder -> Text
pattern SortOrder_ASCENDING :: SortOrder
pattern SortOrder_DESCENDING :: SortOrder
instance Amazonka.Data.XML.ToXML Amazonka.MarketplaceCatalog.Types.SortOrder.SortOrder
instance Amazonka.Data.XML.FromXML Amazonka.MarketplaceCatalog.Types.SortOrder.SortOrder
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.MarketplaceCatalog.Types.SortOrder.SortOrder
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MarketplaceCatalog.Types.SortOrder.SortOrder
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.MarketplaceCatalog.Types.SortOrder.SortOrder
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.MarketplaceCatalog.Types.SortOrder.SortOrder
instance Amazonka.Data.Query.ToQuery Amazonka.MarketplaceCatalog.Types.SortOrder.SortOrder
instance Amazonka.Data.Headers.ToHeader Amazonka.MarketplaceCatalog.Types.SortOrder.SortOrder
instance Amazonka.Data.Log.ToLog Amazonka.MarketplaceCatalog.Types.SortOrder.SortOrder
instance Amazonka.Data.ByteString.ToByteString Amazonka.MarketplaceCatalog.Types.SortOrder.SortOrder
instance Amazonka.Data.Text.ToText Amazonka.MarketplaceCatalog.Types.SortOrder.SortOrder
instance Amazonka.Data.Text.FromText Amazonka.MarketplaceCatalog.Types.SortOrder.SortOrder
instance Control.DeepSeq.NFData Amazonka.MarketplaceCatalog.Types.SortOrder.SortOrder
instance Data.Hashable.Class.Hashable Amazonka.MarketplaceCatalog.Types.SortOrder.SortOrder
instance GHC.Generics.Generic Amazonka.MarketplaceCatalog.Types.SortOrder.SortOrder
instance GHC.Classes.Ord Amazonka.MarketplaceCatalog.Types.SortOrder.SortOrder
instance GHC.Classes.Eq Amazonka.MarketplaceCatalog.Types.SortOrder.SortOrder
instance GHC.Read.Read Amazonka.MarketplaceCatalog.Types.SortOrder.SortOrder
instance GHC.Show.Show Amazonka.MarketplaceCatalog.Types.SortOrder.SortOrder


module Amazonka.MarketplaceCatalog.Types.Sort

-- | An object that contains two attributes, <tt>SortBy</tt> and
--   <tt>SortOrder</tt>.
--   
--   <i>See:</i> <a>newSort</a> smart constructor.
data Sort
Sort' :: Maybe SortOrder -> Maybe Text -> Sort

-- | The sorting order. Can be <tt>ASCENDING</tt> or <tt>DESCENDING</tt>.
--   The default value is <tt>DESCENDING</tt>.
[$sel:sortOrder:Sort'] :: Sort -> Maybe SortOrder

-- | For <tt>ListEntities</tt>, supported attributes include
--   <tt>LastModifiedDate</tt> (default), <tt>Visibility</tt>,
--   <tt>EntityId</tt>, and <tt>Name</tt>.
--   
--   For <tt>ListChangeSets</tt>, supported attributes include
--   <tt>StartTime</tt> and <tt>EndTime</tt>.
[$sel:sortBy:Sort'] :: Sort -> Maybe Text

-- | Create a value of <a>Sort</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sortOrder:Sort'</a>, <a>sort_sortOrder</a> - The sorting
--   order. Can be <tt>ASCENDING</tt> or <tt>DESCENDING</tt>. The default
--   value is <tt>DESCENDING</tt>.
--   
--   <a>$sel:sortBy:Sort'</a>, <a>sort_sortBy</a> - For
--   <tt>ListEntities</tt>, supported attributes include
--   <tt>LastModifiedDate</tt> (default), <tt>Visibility</tt>,
--   <tt>EntityId</tt>, and <tt>Name</tt>.
--   
--   For <tt>ListChangeSets</tt>, supported attributes include
--   <tt>StartTime</tt> and <tt>EndTime</tt>.
newSort :: Sort

-- | The sorting order. Can be <tt>ASCENDING</tt> or <tt>DESCENDING</tt>.
--   The default value is <tt>DESCENDING</tt>.
sort_sortOrder :: Lens' Sort (Maybe SortOrder)

-- | For <tt>ListEntities</tt>, supported attributes include
--   <tt>LastModifiedDate</tt> (default), <tt>Visibility</tt>,
--   <tt>EntityId</tt>, and <tt>Name</tt>.
--   
--   For <tt>ListChangeSets</tt>, supported attributes include
--   <tt>StartTime</tt> and <tt>EndTime</tt>.
sort_sortBy :: Lens' Sort (Maybe Text)
instance GHC.Generics.Generic Amazonka.MarketplaceCatalog.Types.Sort.Sort
instance GHC.Show.Show Amazonka.MarketplaceCatalog.Types.Sort.Sort
instance GHC.Read.Read Amazonka.MarketplaceCatalog.Types.Sort.Sort
instance GHC.Classes.Eq Amazonka.MarketplaceCatalog.Types.Sort.Sort
instance Data.Hashable.Class.Hashable Amazonka.MarketplaceCatalog.Types.Sort.Sort
instance Control.DeepSeq.NFData Amazonka.MarketplaceCatalog.Types.Sort.Sort
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MarketplaceCatalog.Types.Sort.Sort


module Amazonka.MarketplaceCatalog.Types

-- | API version <tt>2018-09-17</tt> of the Amazon Marketplace Catalog
--   Service SDK configuration.
defaultService :: Service

-- | An error occurred during validation.
_ValidationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Access is denied.
_AccessDeniedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The maximum number of open requests per account has been exceeded.
_ServiceQuotaExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Too many requests.
_ThrottlingException :: AsError a => Getting (First ServiceError) a ServiceError

-- | There was an internal service exception.
_InternalServiceException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Currently, the specified resource is not supported.
_ResourceNotSupportedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified resource wasn't found.
_ResourceNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The resource is currently in use.
_ResourceInUseException :: AsError a => Getting (First ServiceError) a ServiceError
newtype ChangeStatus
ChangeStatus' :: Text -> ChangeStatus
[fromChangeStatus] :: ChangeStatus -> Text
pattern ChangeStatus_APPLYING :: ChangeStatus
pattern ChangeStatus_CANCELLED :: ChangeStatus
pattern ChangeStatus_FAILED :: ChangeStatus
pattern ChangeStatus_PREPARING :: ChangeStatus
pattern ChangeStatus_SUCCEEDED :: ChangeStatus
newtype FailureCode
FailureCode' :: Text -> FailureCode
[fromFailureCode] :: FailureCode -> Text
pattern FailureCode_CLIENT_ERROR :: FailureCode
pattern FailureCode_SERVER_FAULT :: FailureCode
newtype SortOrder
SortOrder' :: Text -> SortOrder
[fromSortOrder] :: SortOrder -> Text
pattern SortOrder_ASCENDING :: SortOrder
pattern SortOrder_DESCENDING :: SortOrder

-- | An object that contains the <tt>ChangeType</tt>, <tt>Details</tt>, and
--   <tt>Entity</tt>.
--   
--   <i>See:</i> <a>newChange</a> smart constructor.
data Change
Change' :: Maybe Text -> Text -> Entity -> Text -> Change

-- | Optional name for the change.
[$sel:changeName:Change'] :: Change -> Maybe Text

-- | Change types are single string values that describe your intention for
--   the change. Each change type is unique for each <tt>EntityType</tt>
--   provided in the change's scope.
[$sel:changeType:Change'] :: Change -> Text

-- | The entity to be changed.
[$sel:entity:Change'] :: Change -> Entity

-- | This object contains details specific to the change type of the
--   requested change.
[$sel:details:Change'] :: Change -> Text

-- | Create a value of <a>Change</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:changeName:Change'</a>, <a>change_changeName</a> - Optional
--   name for the change.
--   
--   <a>$sel:changeType:Change'</a>, <a>change_changeType</a> - Change
--   types are single string values that describe your intention for the
--   change. Each change type is unique for each <tt>EntityType</tt>
--   provided in the change's scope.
--   
--   <a>$sel:entity:Change'</a>, <a>change_entity</a> - The entity to be
--   changed.
--   
--   <a>$sel:details:Change'</a>, <a>change_details</a> - This object
--   contains details specific to the change type of the requested change.
newChange :: Text -> Entity -> Text -> Change

-- | Optional name for the change.
change_changeName :: Lens' Change (Maybe Text)

-- | Change types are single string values that describe your intention for
--   the change. Each change type is unique for each <tt>EntityType</tt>
--   provided in the change's scope.
change_changeType :: Lens' Change Text

-- | The entity to be changed.
change_entity :: Lens' Change Entity

-- | This object contains details specific to the change type of the
--   requested change.
change_details :: Lens' Change Text

-- | A summary of a change set returned in a list of change sets when the
--   <tt>ListChangeSets</tt> action is called.
--   
--   <i>See:</i> <a>newChangeSetSummaryListItem</a> smart constructor.
data ChangeSetSummaryListItem
ChangeSetSummaryListItem' :: Maybe ChangeStatus -> Maybe [Text] -> Maybe Text -> Maybe FailureCode -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> ChangeSetSummaryListItem

-- | The current status of the change set.
[$sel:status:ChangeSetSummaryListItem'] :: ChangeSetSummaryListItem -> Maybe ChangeStatus

-- | This object is a list of entity IDs (string) that are a part of a
--   change set. The entity ID list is a maximum of 20 entities. It must
--   contain at least one entity.
[$sel:entityIdList:ChangeSetSummaryListItem'] :: ChangeSetSummaryListItem -> Maybe [Text]

-- | The time, in ISO 8601 format (2018-02-27T13:45:22Z), when the change
--   set was started.
[$sel:startTime:ChangeSetSummaryListItem'] :: ChangeSetSummaryListItem -> Maybe Text

-- | Returned if the change set is in <tt>FAILED</tt> status. Can be either
--   <tt>CLIENT_ERROR</tt>, which means that there are issues with the
--   request (see the <tt>ErrorDetailList</tt> of
--   <tt>DescribeChangeSet</tt>), or <tt>SERVER_FAULT</tt>, which means
--   that there is a problem in the system, and you should retry your
--   request.
[$sel:failureCode:ChangeSetSummaryListItem'] :: ChangeSetSummaryListItem -> Maybe FailureCode

-- | The non-unique name for the change set.
[$sel:changeSetName:ChangeSetSummaryListItem'] :: ChangeSetSummaryListItem -> Maybe Text

-- | The unique identifier for a change set.
[$sel:changeSetId:ChangeSetSummaryListItem'] :: ChangeSetSummaryListItem -> Maybe Text

-- | The time, in ISO 8601 format (2018-02-27T13:45:22Z), when the change
--   set was finished.
[$sel:endTime:ChangeSetSummaryListItem'] :: ChangeSetSummaryListItem -> Maybe Text

-- | The ARN associated with the unique identifier for the change set
--   referenced in this request.
[$sel:changeSetArn:ChangeSetSummaryListItem'] :: ChangeSetSummaryListItem -> Maybe Text

-- | Create a value of <a>ChangeSetSummaryListItem</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:ChangeSetSummaryListItem'</a>,
--   <a>changeSetSummaryListItem_status</a> - The current status of the
--   change set.
--   
--   <a>$sel:entityIdList:ChangeSetSummaryListItem'</a>,
--   <a>changeSetSummaryListItem_entityIdList</a> - This object is a list
--   of entity IDs (string) that are a part of a change set. The entity ID
--   list is a maximum of 20 entities. It must contain at least one entity.
--   
--   <a>$sel:startTime:ChangeSetSummaryListItem'</a>,
--   <a>changeSetSummaryListItem_startTime</a> - The time, in ISO 8601
--   format (2018-02-27T13:45:22Z), when the change set was started.
--   
--   <a>$sel:failureCode:ChangeSetSummaryListItem'</a>,
--   <a>changeSetSummaryListItem_failureCode</a> - Returned if the change
--   set is in <tt>FAILED</tt> status. Can be either <tt>CLIENT_ERROR</tt>,
--   which means that there are issues with the request (see the
--   <tt>ErrorDetailList</tt> of <tt>DescribeChangeSet</tt>), or
--   <tt>SERVER_FAULT</tt>, which means that there is a problem in the
--   system, and you should retry your request.
--   
--   <a>$sel:changeSetName:ChangeSetSummaryListItem'</a>,
--   <a>changeSetSummaryListItem_changeSetName</a> - The non-unique name
--   for the change set.
--   
--   <a>$sel:changeSetId:ChangeSetSummaryListItem'</a>,
--   <a>changeSetSummaryListItem_changeSetId</a> - The unique identifier
--   for a change set.
--   
--   <a>$sel:endTime:ChangeSetSummaryListItem'</a>,
--   <a>changeSetSummaryListItem_endTime</a> - The time, in ISO 8601 format
--   (2018-02-27T13:45:22Z), when the change set was finished.
--   
--   <a>$sel:changeSetArn:ChangeSetSummaryListItem'</a>,
--   <a>changeSetSummaryListItem_changeSetArn</a> - The ARN associated with
--   the unique identifier for the change set referenced in this request.
newChangeSetSummaryListItem :: ChangeSetSummaryListItem

-- | The current status of the change set.
changeSetSummaryListItem_status :: Lens' ChangeSetSummaryListItem (Maybe ChangeStatus)

-- | This object is a list of entity IDs (string) that are a part of a
--   change set. The entity ID list is a maximum of 20 entities. It must
--   contain at least one entity.
changeSetSummaryListItem_entityIdList :: Lens' ChangeSetSummaryListItem (Maybe [Text])

-- | The time, in ISO 8601 format (2018-02-27T13:45:22Z), when the change
--   set was started.
changeSetSummaryListItem_startTime :: Lens' ChangeSetSummaryListItem (Maybe Text)

-- | Returned if the change set is in <tt>FAILED</tt> status. Can be either
--   <tt>CLIENT_ERROR</tt>, which means that there are issues with the
--   request (see the <tt>ErrorDetailList</tt> of
--   <tt>DescribeChangeSet</tt>), or <tt>SERVER_FAULT</tt>, which means
--   that there is a problem in the system, and you should retry your
--   request.
changeSetSummaryListItem_failureCode :: Lens' ChangeSetSummaryListItem (Maybe FailureCode)

-- | The non-unique name for the change set.
changeSetSummaryListItem_changeSetName :: Lens' ChangeSetSummaryListItem (Maybe Text)

-- | The unique identifier for a change set.
changeSetSummaryListItem_changeSetId :: Lens' ChangeSetSummaryListItem (Maybe Text)

-- | The time, in ISO 8601 format (2018-02-27T13:45:22Z), when the change
--   set was finished.
changeSetSummaryListItem_endTime :: Lens' ChangeSetSummaryListItem (Maybe Text)

-- | The ARN associated with the unique identifier for the change set
--   referenced in this request.
changeSetSummaryListItem_changeSetArn :: Lens' ChangeSetSummaryListItem (Maybe Text)

-- | This object is a container for common summary information about the
--   change. The summary doesn't contain the whole change structure.
--   
--   <i>See:</i> <a>newChangeSummary</a> smart constructor.
data ChangeSummary
ChangeSummary' :: Maybe Text -> Maybe Text -> Maybe [ErrorDetail] -> Maybe Entity -> Maybe Text -> ChangeSummary

-- | Optional name for the change.
[$sel:changeName:ChangeSummary'] :: ChangeSummary -> Maybe Text

-- | This object contains details specific to the change type of the
--   requested change.
[$sel:details:ChangeSummary'] :: ChangeSummary -> Maybe Text

-- | An array of <tt>ErrorDetail</tt> objects associated with the change.
[$sel:errorDetailList:ChangeSummary'] :: ChangeSummary -> Maybe [ErrorDetail]

-- | The entity to be changed.
[$sel:entity:ChangeSummary'] :: ChangeSummary -> Maybe Entity

-- | The type of the change.
[$sel:changeType:ChangeSummary'] :: ChangeSummary -> Maybe Text

-- | Create a value of <a>ChangeSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:changeName:ChangeSummary'</a>, <a>changeSummary_changeName</a>
--   - Optional name for the change.
--   
--   <a>$sel:details:ChangeSummary'</a>, <a>changeSummary_details</a> -
--   This object contains details specific to the change type of the
--   requested change.
--   
--   <a>$sel:errorDetailList:ChangeSummary'</a>,
--   <a>changeSummary_errorDetailList</a> - An array of
--   <tt>ErrorDetail</tt> objects associated with the change.
--   
--   <a>$sel:entity:ChangeSummary'</a>, <a>changeSummary_entity</a> - The
--   entity to be changed.
--   
--   <a>$sel:changeType:ChangeSummary'</a>, <a>changeSummary_changeType</a>
--   - The type of the change.
newChangeSummary :: ChangeSummary

-- | Optional name for the change.
changeSummary_changeName :: Lens' ChangeSummary (Maybe Text)

-- | This object contains details specific to the change type of the
--   requested change.
changeSummary_details :: Lens' ChangeSummary (Maybe Text)

-- | An array of <tt>ErrorDetail</tt> objects associated with the change.
changeSummary_errorDetailList :: Lens' ChangeSummary (Maybe [ErrorDetail])

-- | The entity to be changed.
changeSummary_entity :: Lens' ChangeSummary (Maybe Entity)

-- | The type of the change.
changeSummary_changeType :: Lens' ChangeSummary (Maybe Text)

-- | An entity contains data that describes your product, its supported
--   features, and how it can be used or launched by your customer.
--   
--   <i>See:</i> <a>newEntity</a> smart constructor.
data Entity
Entity' :: Maybe Text -> Text -> Entity

-- | The identifier for the entity.
[$sel:identifier:Entity'] :: Entity -> Maybe Text

-- | The type of entity.
[$sel:type':Entity'] :: Entity -> Text

-- | Create a value of <a>Entity</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:identifier:Entity'</a>, <a>entity_identifier</a> - The
--   identifier for the entity.
--   
--   <a>$sel:type':Entity'</a>, <a>entity_type</a> - The type of entity.
newEntity :: Text -> Entity

-- | The identifier for the entity.
entity_identifier :: Lens' Entity (Maybe Text)

-- | The type of entity.
entity_type :: Lens' Entity Text

-- | This object is a container for common summary information about the
--   entity. The summary doesn't contain the whole entity structure, but it
--   does contain information common across all entities.
--   
--   <i>See:</i> <a>newEntitySummary</a> smart constructor.
data EntitySummary
EntitySummary' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> EntitySummary

-- | The last time the entity was published, using ISO 8601 format
--   (2018-02-27T13:45:22Z).
[$sel:lastModifiedDate:EntitySummary'] :: EntitySummary -> Maybe Text

-- | The type of the entity.
[$sel:entityType:EntitySummary'] :: EntitySummary -> Maybe Text

-- | The visibility status of the entity to buyers. This value can be
--   <tt>Public</tt> (everyone can view the entity), <tt>Limited</tt> (the
--   entity is visible to limited accounts only), or <tt>Restricted</tt>
--   (the entity was published and then unpublished and only existing
--   buyers can view it).
[$sel:visibility:EntitySummary'] :: EntitySummary -> Maybe Text

-- | The name for the entity. This value is not unique. It is defined by
--   the seller.
[$sel:name:EntitySummary'] :: EntitySummary -> Maybe Text

-- | The unique identifier for the entity.
[$sel:entityId:EntitySummary'] :: EntitySummary -> Maybe Text

-- | The ARN associated with the unique identifier for the entity.
[$sel:entityArn:EntitySummary'] :: EntitySummary -> Maybe Text

-- | Create a value of <a>EntitySummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lastModifiedDate:EntitySummary'</a>,
--   <a>entitySummary_lastModifiedDate</a> - The last time the entity was
--   published, using ISO 8601 format (2018-02-27T13:45:22Z).
--   
--   <a>$sel:entityType:EntitySummary'</a>, <a>entitySummary_entityType</a>
--   - The type of the entity.
--   
--   <a>$sel:visibility:EntitySummary'</a>, <a>entitySummary_visibility</a>
--   - The visibility status of the entity to buyers. This value can be
--   <tt>Public</tt> (everyone can view the entity), <tt>Limited</tt> (the
--   entity is visible to limited accounts only), or <tt>Restricted</tt>
--   (the entity was published and then unpublished and only existing
--   buyers can view it).
--   
--   <a>$sel:name:EntitySummary'</a>, <a>entitySummary_name</a> - The name
--   for the entity. This value is not unique. It is defined by the seller.
--   
--   <a>$sel:entityId:EntitySummary'</a>, <a>entitySummary_entityId</a> -
--   The unique identifier for the entity.
--   
--   <a>$sel:entityArn:EntitySummary'</a>, <a>entitySummary_entityArn</a> -
--   The ARN associated with the unique identifier for the entity.
newEntitySummary :: EntitySummary

-- | The last time the entity was published, using ISO 8601 format
--   (2018-02-27T13:45:22Z).
entitySummary_lastModifiedDate :: Lens' EntitySummary (Maybe Text)

-- | The type of the entity.
entitySummary_entityType :: Lens' EntitySummary (Maybe Text)

-- | The visibility status of the entity to buyers. This value can be
--   <tt>Public</tt> (everyone can view the entity), <tt>Limited</tt> (the
--   entity is visible to limited accounts only), or <tt>Restricted</tt>
--   (the entity was published and then unpublished and only existing
--   buyers can view it).
entitySummary_visibility :: Lens' EntitySummary (Maybe Text)

-- | The name for the entity. This value is not unique. It is defined by
--   the seller.
entitySummary_name :: Lens' EntitySummary (Maybe Text)

-- | The unique identifier for the entity.
entitySummary_entityId :: Lens' EntitySummary (Maybe Text)

-- | The ARN associated with the unique identifier for the entity.
entitySummary_entityArn :: Lens' EntitySummary (Maybe Text)

-- | Details about the error.
--   
--   <i>See:</i> <a>newErrorDetail</a> smart constructor.
data ErrorDetail
ErrorDetail' :: Maybe Text -> Maybe Text -> ErrorDetail

-- | The error code that identifies the type of error.
[$sel:errorCode:ErrorDetail'] :: ErrorDetail -> Maybe Text

-- | The message for the error.
[$sel:errorMessage:ErrorDetail'] :: ErrorDetail -> Maybe Text

-- | Create a value of <a>ErrorDetail</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:errorCode:ErrorDetail'</a>, <a>errorDetail_errorCode</a> - The
--   error code that identifies the type of error.
--   
--   <a>$sel:errorMessage:ErrorDetail'</a>, <a>errorDetail_errorMessage</a>
--   - The message for the error.
newErrorDetail :: ErrorDetail

-- | The error code that identifies the type of error.
errorDetail_errorCode :: Lens' ErrorDetail (Maybe Text)

-- | The message for the error.
errorDetail_errorMessage :: Lens' ErrorDetail (Maybe Text)

-- | A filter object, used to optionally filter results from calls to the
--   <tt>ListEntities</tt> and <tt>ListChangeSets</tt> actions.
--   
--   <i>See:</i> <a>newFilter</a> smart constructor.
data Filter
Filter' :: Maybe (NonEmpty Text) -> Maybe Text -> Filter

-- | <tt>ListEntities</tt> - This is a list of unique <tt>EntityId</tt>s.
--   
--   <tt>ListChangeSets</tt> - The supported filter names and associated
--   <tt>ValueList</tt>s is as follows:
--   
--   <ul>
--   <li><tt>ChangeSetName</tt> - The supported <tt>ValueList</tt> is a
--   list of non-unique <tt>ChangeSetName</tt>s. These are defined when you
--   call the <tt>StartChangeSet</tt> action.</li>
--   <li><tt>Status</tt> - The supported <tt>ValueList</tt> is a list of
--   statuses for all change set requests.</li>
--   <li><tt>EntityId</tt> - The supported <tt>ValueList</tt> is a list of
--   unique <tt>EntityId</tt>s.</li>
--   <li><tt>BeforeStartTime</tt> - The supported <tt>ValueList</tt> is a
--   list of all change sets that started before the filter value.</li>
--   <li><tt>AfterStartTime</tt> - The supported <tt>ValueList</tt> is a
--   list of all change sets that started after the filter value.</li>
--   <li><tt>BeforeEndTime</tt> - The supported <tt>ValueList</tt> is a
--   list of all change sets that ended before the filter value.</li>
--   <li><tt>AfterEndTime</tt> - The supported <tt>ValueList</tt> is a list
--   of all change sets that ended after the filter value.</li>
--   </ul>
[$sel:valueList:Filter'] :: Filter -> Maybe (NonEmpty Text)

-- | For <tt>ListEntities</tt>, the supported value for this is an
--   <tt>EntityId</tt>.
--   
--   For <tt>ListChangeSets</tt>, the supported values are as follows:
[$sel:name:Filter'] :: Filter -> Maybe Text

-- | Create a value of <a>Filter</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:valueList:Filter'</a>, <a>filter_valueList</a> -
--   <tt>ListEntities</tt> - This is a list of unique <tt>EntityId</tt>s.
--   
--   <tt>ListChangeSets</tt> - The supported filter names and associated
--   <tt>ValueList</tt>s is as follows:
--   
--   <ul>
--   <li><tt>ChangeSetName</tt> - The supported <tt>ValueList</tt> is a
--   list of non-unique <tt>ChangeSetName</tt>s. These are defined when you
--   call the <tt>StartChangeSet</tt> action.</li>
--   <li><tt>Status</tt> - The supported <tt>ValueList</tt> is a list of
--   statuses for all change set requests.</li>
--   <li><tt>EntityId</tt> - The supported <tt>ValueList</tt> is a list of
--   unique <tt>EntityId</tt>s.</li>
--   <li><tt>BeforeStartTime</tt> - The supported <tt>ValueList</tt> is a
--   list of all change sets that started before the filter value.</li>
--   <li><tt>AfterStartTime</tt> - The supported <tt>ValueList</tt> is a
--   list of all change sets that started after the filter value.</li>
--   <li><tt>BeforeEndTime</tt> - The supported <tt>ValueList</tt> is a
--   list of all change sets that ended before the filter value.</li>
--   <li><tt>AfterEndTime</tt> - The supported <tt>ValueList</tt> is a list
--   of all change sets that ended after the filter value.</li>
--   </ul>
--   
--   <a>$sel:name:Filter'</a>, <a>filter_name</a> - For
--   <tt>ListEntities</tt>, the supported value for this is an
--   <tt>EntityId</tt>.
--   
--   For <tt>ListChangeSets</tt>, the supported values are as follows:
newFilter :: Filter

-- | <tt>ListEntities</tt> - This is a list of unique <tt>EntityId</tt>s.
--   
--   <tt>ListChangeSets</tt> - The supported filter names and associated
--   <tt>ValueList</tt>s is as follows:
--   
--   <ul>
--   <li><tt>ChangeSetName</tt> - The supported <tt>ValueList</tt> is a
--   list of non-unique <tt>ChangeSetName</tt>s. These are defined when you
--   call the <tt>StartChangeSet</tt> action.</li>
--   <li><tt>Status</tt> - The supported <tt>ValueList</tt> is a list of
--   statuses for all change set requests.</li>
--   <li><tt>EntityId</tt> - The supported <tt>ValueList</tt> is a list of
--   unique <tt>EntityId</tt>s.</li>
--   <li><tt>BeforeStartTime</tt> - The supported <tt>ValueList</tt> is a
--   list of all change sets that started before the filter value.</li>
--   <li><tt>AfterStartTime</tt> - The supported <tt>ValueList</tt> is a
--   list of all change sets that started after the filter value.</li>
--   <li><tt>BeforeEndTime</tt> - The supported <tt>ValueList</tt> is a
--   list of all change sets that ended before the filter value.</li>
--   <li><tt>AfterEndTime</tt> - The supported <tt>ValueList</tt> is a list
--   of all change sets that ended after the filter value.</li>
--   </ul>
filter_valueList :: Lens' Filter (Maybe (NonEmpty Text))

-- | For <tt>ListEntities</tt>, the supported value for this is an
--   <tt>EntityId</tt>.
--   
--   For <tt>ListChangeSets</tt>, the supported values are as follows:
filter_name :: Lens' Filter (Maybe Text)

-- | An object that contains two attributes, <tt>SortBy</tt> and
--   <tt>SortOrder</tt>.
--   
--   <i>See:</i> <a>newSort</a> smart constructor.
data Sort
Sort' :: Maybe SortOrder -> Maybe Text -> Sort

-- | The sorting order. Can be <tt>ASCENDING</tt> or <tt>DESCENDING</tt>.
--   The default value is <tt>DESCENDING</tt>.
[$sel:sortOrder:Sort'] :: Sort -> Maybe SortOrder

-- | For <tt>ListEntities</tt>, supported attributes include
--   <tt>LastModifiedDate</tt> (default), <tt>Visibility</tt>,
--   <tt>EntityId</tt>, and <tt>Name</tt>.
--   
--   For <tt>ListChangeSets</tt>, supported attributes include
--   <tt>StartTime</tt> and <tt>EndTime</tt>.
[$sel:sortBy:Sort'] :: Sort -> Maybe Text

-- | Create a value of <a>Sort</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sortOrder:Sort'</a>, <a>sort_sortOrder</a> - The sorting
--   order. Can be <tt>ASCENDING</tt> or <tt>DESCENDING</tt>. The default
--   value is <tt>DESCENDING</tt>.
--   
--   <a>$sel:sortBy:Sort'</a>, <a>sort_sortBy</a> - For
--   <tt>ListEntities</tt>, supported attributes include
--   <tt>LastModifiedDate</tt> (default), <tt>Visibility</tt>,
--   <tt>EntityId</tt>, and <tt>Name</tt>.
--   
--   For <tt>ListChangeSets</tt>, supported attributes include
--   <tt>StartTime</tt> and <tt>EndTime</tt>.
newSort :: Sort

-- | The sorting order. Can be <tt>ASCENDING</tt> or <tt>DESCENDING</tt>.
--   The default value is <tt>DESCENDING</tt>.
sort_sortOrder :: Lens' Sort (Maybe SortOrder)

-- | For <tt>ListEntities</tt>, supported attributes include
--   <tt>LastModifiedDate</tt> (default), <tt>Visibility</tt>,
--   <tt>EntityId</tt>, and <tt>Name</tt>.
--   
--   For <tt>ListChangeSets</tt>, supported attributes include
--   <tt>StartTime</tt> and <tt>EndTime</tt>.
sort_sortBy :: Lens' Sort (Maybe Text)


-- | This operation allows you to request changes for your entities. Within
--   a single ChangeSet, you cannot start the same change type against the
--   same entity multiple times. Additionally, when a ChangeSet is running,
--   all the entities targeted by the different changes are locked until
--   the ChangeSet has completed (either succeeded, cancelled, or failed).
--   If you try to start a ChangeSet containing a change against an entity
--   that is already locked, you will receive a
--   <tt>ResourceInUseException</tt>.
--   
--   For example, you cannot start the ChangeSet described in the
--   <a>example</a> later in this topic, because it contains two changes to
--   execute the same change type (<tt>AddRevisions</tt>) against the same
--   entity (<tt>entity-id@1)</tt>.
--   
--   For more information about working with change sets, see <a>Working
--   with change sets</a>.
module Amazonka.MarketplaceCatalog.StartChangeSet

-- | <i>See:</i> <a>newStartChangeSet</a> smart constructor.
data StartChangeSet
StartChangeSet' :: Maybe Text -> Maybe Text -> Text -> NonEmpty Change -> StartChangeSet

-- | Optional case sensitive string of up to 100 ASCII characters. The
--   change set name can be used to filter the list of change sets.
[$sel:changeSetName:StartChangeSet'] :: StartChangeSet -> Maybe Text

-- | A unique token to identify the request to ensure idempotency.
[$sel:clientRequestToken:StartChangeSet'] :: StartChangeSet -> Maybe Text

-- | The catalog related to the request. Fixed value:
--   <tt>AWSMarketplace</tt>
[$sel:catalog:StartChangeSet'] :: StartChangeSet -> Text

-- | Array of <tt>change</tt> object.
[$sel:changeSet:StartChangeSet'] :: StartChangeSet -> NonEmpty Change

-- | Create a value of <a>StartChangeSet</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:changeSetName:StartChangeSet'</a>,
--   <a>startChangeSet_changeSetName</a> - Optional case sensitive string
--   of up to 100 ASCII characters. The change set name can be used to
--   filter the list of change sets.
--   
--   <a>$sel:clientRequestToken:StartChangeSet'</a>,
--   <a>startChangeSet_clientRequestToken</a> - A unique token to identify
--   the request to ensure idempotency.
--   
--   <a>$sel:catalog:StartChangeSet'</a>, <a>startChangeSet_catalog</a> -
--   The catalog related to the request. Fixed value:
--   <tt>AWSMarketplace</tt>
--   
--   <a>$sel:changeSet:StartChangeSet'</a>, <a>startChangeSet_changeSet</a>
--   - Array of <tt>change</tt> object.
newStartChangeSet :: Text -> NonEmpty Change -> StartChangeSet

-- | Optional case sensitive string of up to 100 ASCII characters. The
--   change set name can be used to filter the list of change sets.
startChangeSet_changeSetName :: Lens' StartChangeSet (Maybe Text)

-- | A unique token to identify the request to ensure idempotency.
startChangeSet_clientRequestToken :: Lens' StartChangeSet (Maybe Text)

-- | The catalog related to the request. Fixed value:
--   <tt>AWSMarketplace</tt>
startChangeSet_catalog :: Lens' StartChangeSet Text

-- | Array of <tt>change</tt> object.
startChangeSet_changeSet :: Lens' StartChangeSet (NonEmpty Change)

-- | <i>See:</i> <a>newStartChangeSetResponse</a> smart constructor.
data StartChangeSetResponse
StartChangeSetResponse' :: Maybe Text -> Maybe Text -> Int -> StartChangeSetResponse

-- | Unique identifier generated for the request.
[$sel:changeSetId:StartChangeSetResponse'] :: StartChangeSetResponse -> Maybe Text

-- | The ARN associated to the unique identifier generated for the request.
[$sel:changeSetArn:StartChangeSetResponse'] :: StartChangeSetResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:StartChangeSetResponse'] :: StartChangeSetResponse -> Int

-- | Create a value of <a>StartChangeSetResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:changeSetId:StartChangeSetResponse'</a>,
--   <a>startChangeSetResponse_changeSetId</a> - Unique identifier
--   generated for the request.
--   
--   <a>$sel:changeSetArn:StartChangeSetResponse'</a>,
--   <a>startChangeSetResponse_changeSetArn</a> - The ARN associated to the
--   unique identifier generated for the request.
--   
--   <a>$sel:httpStatus:StartChangeSetResponse'</a>,
--   <a>startChangeSetResponse_httpStatus</a> - The response's http status
--   code.
newStartChangeSetResponse :: Int -> StartChangeSetResponse

-- | Unique identifier generated for the request.
startChangeSetResponse_changeSetId :: Lens' StartChangeSetResponse (Maybe Text)

-- | The ARN associated to the unique identifier generated for the request.
startChangeSetResponse_changeSetArn :: Lens' StartChangeSetResponse (Maybe Text)

-- | The response's http status code.
startChangeSetResponse_httpStatus :: Lens' StartChangeSetResponse Int
instance GHC.Generics.Generic Amazonka.MarketplaceCatalog.StartChangeSet.StartChangeSet
instance GHC.Show.Show Amazonka.MarketplaceCatalog.StartChangeSet.StartChangeSet
instance GHC.Read.Read Amazonka.MarketplaceCatalog.StartChangeSet.StartChangeSet
instance GHC.Classes.Eq Amazonka.MarketplaceCatalog.StartChangeSet.StartChangeSet
instance GHC.Generics.Generic Amazonka.MarketplaceCatalog.StartChangeSet.StartChangeSetResponse
instance GHC.Show.Show Amazonka.MarketplaceCatalog.StartChangeSet.StartChangeSetResponse
instance GHC.Read.Read Amazonka.MarketplaceCatalog.StartChangeSet.StartChangeSetResponse
instance GHC.Classes.Eq Amazonka.MarketplaceCatalog.StartChangeSet.StartChangeSetResponse
instance Amazonka.Types.AWSRequest Amazonka.MarketplaceCatalog.StartChangeSet.StartChangeSet
instance Control.DeepSeq.NFData Amazonka.MarketplaceCatalog.StartChangeSet.StartChangeSetResponse
instance Data.Hashable.Class.Hashable Amazonka.MarketplaceCatalog.StartChangeSet.StartChangeSet
instance Control.DeepSeq.NFData Amazonka.MarketplaceCatalog.StartChangeSet.StartChangeSet
instance Amazonka.Data.Headers.ToHeaders Amazonka.MarketplaceCatalog.StartChangeSet.StartChangeSet
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MarketplaceCatalog.StartChangeSet.StartChangeSet
instance Amazonka.Data.Path.ToPath Amazonka.MarketplaceCatalog.StartChangeSet.StartChangeSet
instance Amazonka.Data.Query.ToQuery Amazonka.MarketplaceCatalog.StartChangeSet.StartChangeSet


-- | Provides the list of entities of a given type.
module Amazonka.MarketplaceCatalog.ListEntities

-- | <i>See:</i> <a>newListEntities</a> smart constructor.
data ListEntities
ListEntities' :: Maybe Text -> Maybe (NonEmpty Filter) -> Maybe Sort -> Maybe Natural -> Text -> Text -> ListEntities

-- | The value of the next token, if it exists. Null if there are no more
--   results.
[$sel:nextToken:ListEntities'] :: ListEntities -> Maybe Text

-- | An array of filter objects. Each filter object contains two
--   attributes, <tt>filterName</tt> and <tt>filterValues</tt>.
[$sel:filterList:ListEntities'] :: ListEntities -> Maybe (NonEmpty Filter)

-- | An object that contains two attributes, <tt>SortBy</tt> and
--   <tt>SortOrder</tt>.
[$sel:sort:ListEntities'] :: ListEntities -> Maybe Sort

-- | Specifies the upper limit of the elements on a single page. If a value
--   isn't provided, the default value is 20.
[$sel:maxResults:ListEntities'] :: ListEntities -> Maybe Natural

-- | The catalog related to the request. Fixed value:
--   <tt>AWSMarketplace</tt>
[$sel:catalog:ListEntities'] :: ListEntities -> Text

-- | The type of entities to retrieve.
[$sel:entityType:ListEntities'] :: ListEntities -> Text

-- | Create a value of <a>ListEntities</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListEntities'</a>, <a>listEntities_nextToken</a> -
--   The value of the next token, if it exists. Null if there are no more
--   results.
--   
--   <a>$sel:filterList:ListEntities'</a>, <a>listEntities_filterList</a> -
--   An array of filter objects. Each filter object contains two
--   attributes, <tt>filterName</tt> and <tt>filterValues</tt>.
--   
--   <a>$sel:sort:ListEntities'</a>, <a>listEntities_sort</a> - An object
--   that contains two attributes, <tt>SortBy</tt> and <tt>SortOrder</tt>.
--   
--   <a>$sel:maxResults:ListEntities'</a>, <a>listEntities_maxResults</a> -
--   Specifies the upper limit of the elements on a single page. If a value
--   isn't provided, the default value is 20.
--   
--   <a>$sel:catalog:ListEntities'</a>, <a>listEntities_catalog</a> - The
--   catalog related to the request. Fixed value: <tt>AWSMarketplace</tt>
--   
--   <a>$sel:entityType:ListEntities'</a>, <a>listEntities_entityType</a> -
--   The type of entities to retrieve.
newListEntities :: Text -> Text -> ListEntities

-- | The value of the next token, if it exists. Null if there are no more
--   results.
listEntities_nextToken :: Lens' ListEntities (Maybe Text)

-- | An array of filter objects. Each filter object contains two
--   attributes, <tt>filterName</tt> and <tt>filterValues</tt>.
listEntities_filterList :: Lens' ListEntities (Maybe (NonEmpty Filter))

-- | An object that contains two attributes, <tt>SortBy</tt> and
--   <tt>SortOrder</tt>.
listEntities_sort :: Lens' ListEntities (Maybe Sort)

-- | Specifies the upper limit of the elements on a single page. If a value
--   isn't provided, the default value is 20.
listEntities_maxResults :: Lens' ListEntities (Maybe Natural)

-- | The catalog related to the request. Fixed value:
--   <tt>AWSMarketplace</tt>
listEntities_catalog :: Lens' ListEntities Text

-- | The type of entities to retrieve.
listEntities_entityType :: Lens' ListEntities Text

-- | <i>See:</i> <a>newListEntitiesResponse</a> smart constructor.
data ListEntitiesResponse
ListEntitiesResponse' :: Maybe [EntitySummary] -> Maybe Text -> Int -> ListEntitiesResponse

-- | Array of <tt>EntitySummary</tt> object.
[$sel:entitySummaryList:ListEntitiesResponse'] :: ListEntitiesResponse -> Maybe [EntitySummary]

-- | The value of the next token if it exists. Null if there is no more
--   result.
[$sel:nextToken:ListEntitiesResponse'] :: ListEntitiesResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListEntitiesResponse'] :: ListEntitiesResponse -> Int

-- | Create a value of <a>ListEntitiesResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:entitySummaryList:ListEntitiesResponse'</a>,
--   <a>listEntitiesResponse_entitySummaryList</a> - Array of
--   <tt>EntitySummary</tt> object.
--   
--   <a>$sel:nextToken:ListEntities'</a>,
--   <a>listEntitiesResponse_nextToken</a> - The value of the next token if
--   it exists. Null if there is no more result.
--   
--   <a>$sel:httpStatus:ListEntitiesResponse'</a>,
--   <a>listEntitiesResponse_httpStatus</a> - The response's http status
--   code.
newListEntitiesResponse :: Int -> ListEntitiesResponse

-- | Array of <tt>EntitySummary</tt> object.
listEntitiesResponse_entitySummaryList :: Lens' ListEntitiesResponse (Maybe [EntitySummary])

-- | The value of the next token if it exists. Null if there is no more
--   result.
listEntitiesResponse_nextToken :: Lens' ListEntitiesResponse (Maybe Text)

-- | The response's http status code.
listEntitiesResponse_httpStatus :: Lens' ListEntitiesResponse Int
instance GHC.Generics.Generic Amazonka.MarketplaceCatalog.ListEntities.ListEntities
instance GHC.Show.Show Amazonka.MarketplaceCatalog.ListEntities.ListEntities
instance GHC.Read.Read Amazonka.MarketplaceCatalog.ListEntities.ListEntities
instance GHC.Classes.Eq Amazonka.MarketplaceCatalog.ListEntities.ListEntities
instance GHC.Generics.Generic Amazonka.MarketplaceCatalog.ListEntities.ListEntitiesResponse
instance GHC.Show.Show Amazonka.MarketplaceCatalog.ListEntities.ListEntitiesResponse
instance GHC.Read.Read Amazonka.MarketplaceCatalog.ListEntities.ListEntitiesResponse
instance GHC.Classes.Eq Amazonka.MarketplaceCatalog.ListEntities.ListEntitiesResponse
instance Amazonka.Types.AWSRequest Amazonka.MarketplaceCatalog.ListEntities.ListEntities
instance Control.DeepSeq.NFData Amazonka.MarketplaceCatalog.ListEntities.ListEntitiesResponse
instance Data.Hashable.Class.Hashable Amazonka.MarketplaceCatalog.ListEntities.ListEntities
instance Control.DeepSeq.NFData Amazonka.MarketplaceCatalog.ListEntities.ListEntities
instance Amazonka.Data.Headers.ToHeaders Amazonka.MarketplaceCatalog.ListEntities.ListEntities
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MarketplaceCatalog.ListEntities.ListEntities
instance Amazonka.Data.Path.ToPath Amazonka.MarketplaceCatalog.ListEntities.ListEntities
instance Amazonka.Data.Query.ToQuery Amazonka.MarketplaceCatalog.ListEntities.ListEntities


-- | Returns the list of change sets owned by the account being used to
--   make the call. You can filter this list by providing any combination
--   of <tt>entityId</tt>, <tt>ChangeSetName</tt>, and status. If you
--   provide more than one filter, the API operation applies a logical AND
--   between the filters.
--   
--   You can describe a change during the 60-day request history retention
--   period for API calls.
module Amazonka.MarketplaceCatalog.ListChangeSets

-- | <i>See:</i> <a>newListChangeSets</a> smart constructor.
data ListChangeSets
ListChangeSets' :: Maybe Text -> Maybe (NonEmpty Filter) -> Maybe Sort -> Maybe Natural -> Text -> ListChangeSets

-- | The token value retrieved from a previous call to access the next page
--   of results.
[$sel:nextToken:ListChangeSets'] :: ListChangeSets -> Maybe Text

-- | An array of filter objects.
[$sel:filterList:ListChangeSets'] :: ListChangeSets -> Maybe (NonEmpty Filter)

-- | An object that contains two attributes, <tt>SortBy</tt> and
--   <tt>SortOrder</tt>.
[$sel:sort:ListChangeSets'] :: ListChangeSets -> Maybe Sort

-- | The maximum number of results returned by a single call. This value
--   must be provided in the next call to retrieve the next set of results.
--   By default, this value is 20.
[$sel:maxResults:ListChangeSets'] :: ListChangeSets -> Maybe Natural

-- | The catalog related to the request. Fixed value:
--   <tt>AWSMarketplace</tt>
[$sel:catalog:ListChangeSets'] :: ListChangeSets -> Text

-- | Create a value of <a>ListChangeSets</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListChangeSets'</a>, <a>listChangeSets_nextToken</a>
--   - The token value retrieved from a previous call to access the next
--   page of results.
--   
--   <a>$sel:filterList:ListChangeSets'</a>,
--   <a>listChangeSets_filterList</a> - An array of filter objects.
--   
--   <a>$sel:sort:ListChangeSets'</a>, <a>listChangeSets_sort</a> - An
--   object that contains two attributes, <tt>SortBy</tt> and
--   <tt>SortOrder</tt>.
--   
--   <a>$sel:maxResults:ListChangeSets'</a>,
--   <a>listChangeSets_maxResults</a> - The maximum number of results
--   returned by a single call. This value must be provided in the next
--   call to retrieve the next set of results. By default, this value is
--   20.
--   
--   <a>$sel:catalog:ListChangeSets'</a>, <a>listChangeSets_catalog</a> -
--   The catalog related to the request. Fixed value:
--   <tt>AWSMarketplace</tt>
newListChangeSets :: Text -> ListChangeSets

-- | The token value retrieved from a previous call to access the next page
--   of results.
listChangeSets_nextToken :: Lens' ListChangeSets (Maybe Text)

-- | An array of filter objects.
listChangeSets_filterList :: Lens' ListChangeSets (Maybe (NonEmpty Filter))

-- | An object that contains two attributes, <tt>SortBy</tt> and
--   <tt>SortOrder</tt>.
listChangeSets_sort :: Lens' ListChangeSets (Maybe Sort)

-- | The maximum number of results returned by a single call. This value
--   must be provided in the next call to retrieve the next set of results.
--   By default, this value is 20.
listChangeSets_maxResults :: Lens' ListChangeSets (Maybe Natural)

-- | The catalog related to the request. Fixed value:
--   <tt>AWSMarketplace</tt>
listChangeSets_catalog :: Lens' ListChangeSets Text

-- | <i>See:</i> <a>newListChangeSetsResponse</a> smart constructor.
data ListChangeSetsResponse
ListChangeSetsResponse' :: Maybe Text -> Maybe [ChangeSetSummaryListItem] -> Int -> ListChangeSetsResponse

-- | The value of the next token, if it exists. Null if there are no more
--   results.
[$sel:nextToken:ListChangeSetsResponse'] :: ListChangeSetsResponse -> Maybe Text

-- | Array of <tt>ChangeSetSummaryListItem</tt> objects.
[$sel:changeSetSummaryList:ListChangeSetsResponse'] :: ListChangeSetsResponse -> Maybe [ChangeSetSummaryListItem]

-- | The response's http status code.
[$sel:httpStatus:ListChangeSetsResponse'] :: ListChangeSetsResponse -> Int

-- | Create a value of <a>ListChangeSetsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListChangeSets'</a>,
--   <a>listChangeSetsResponse_nextToken</a> - The value of the next token,
--   if it exists. Null if there are no more results.
--   
--   <a>$sel:changeSetSummaryList:ListChangeSetsResponse'</a>,
--   <a>listChangeSetsResponse_changeSetSummaryList</a> - Array of
--   <tt>ChangeSetSummaryListItem</tt> objects.
--   
--   <a>$sel:httpStatus:ListChangeSetsResponse'</a>,
--   <a>listChangeSetsResponse_httpStatus</a> - The response's http status
--   code.
newListChangeSetsResponse :: Int -> ListChangeSetsResponse

-- | The value of the next token, if it exists. Null if there are no more
--   results.
listChangeSetsResponse_nextToken :: Lens' ListChangeSetsResponse (Maybe Text)

-- | Array of <tt>ChangeSetSummaryListItem</tt> objects.
listChangeSetsResponse_changeSetSummaryList :: Lens' ListChangeSetsResponse (Maybe [ChangeSetSummaryListItem])

-- | The response's http status code.
listChangeSetsResponse_httpStatus :: Lens' ListChangeSetsResponse Int
instance GHC.Generics.Generic Amazonka.MarketplaceCatalog.ListChangeSets.ListChangeSets
instance GHC.Show.Show Amazonka.MarketplaceCatalog.ListChangeSets.ListChangeSets
instance GHC.Read.Read Amazonka.MarketplaceCatalog.ListChangeSets.ListChangeSets
instance GHC.Classes.Eq Amazonka.MarketplaceCatalog.ListChangeSets.ListChangeSets
instance GHC.Generics.Generic Amazonka.MarketplaceCatalog.ListChangeSets.ListChangeSetsResponse
instance GHC.Show.Show Amazonka.MarketplaceCatalog.ListChangeSets.ListChangeSetsResponse
instance GHC.Read.Read Amazonka.MarketplaceCatalog.ListChangeSets.ListChangeSetsResponse
instance GHC.Classes.Eq Amazonka.MarketplaceCatalog.ListChangeSets.ListChangeSetsResponse
instance Amazonka.Types.AWSRequest Amazonka.MarketplaceCatalog.ListChangeSets.ListChangeSets
instance Control.DeepSeq.NFData Amazonka.MarketplaceCatalog.ListChangeSets.ListChangeSetsResponse
instance Data.Hashable.Class.Hashable Amazonka.MarketplaceCatalog.ListChangeSets.ListChangeSets
instance Control.DeepSeq.NFData Amazonka.MarketplaceCatalog.ListChangeSets.ListChangeSets
instance Amazonka.Data.Headers.ToHeaders Amazonka.MarketplaceCatalog.ListChangeSets.ListChangeSets
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MarketplaceCatalog.ListChangeSets.ListChangeSets
instance Amazonka.Data.Path.ToPath Amazonka.MarketplaceCatalog.ListChangeSets.ListChangeSets
instance Amazonka.Data.Query.ToQuery Amazonka.MarketplaceCatalog.ListChangeSets.ListChangeSets


-- | Returns the metadata and content of the entity.
module Amazonka.MarketplaceCatalog.DescribeEntity

-- | <i>See:</i> <a>newDescribeEntity</a> smart constructor.
data DescribeEntity
DescribeEntity' :: Text -> Text -> DescribeEntity

-- | Required. The catalog related to the request. Fixed value:
--   <tt>AWSMarketplace</tt>
[$sel:catalog:DescribeEntity'] :: DescribeEntity -> Text

-- | Required. The unique ID of the entity to describe.
[$sel:entityId:DescribeEntity'] :: DescribeEntity -> Text

-- | Create a value of <a>DescribeEntity</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalog:DescribeEntity'</a>, <a>describeEntity_catalog</a> -
--   Required. The catalog related to the request. Fixed value:
--   <tt>AWSMarketplace</tt>
--   
--   <a>$sel:entityId:DescribeEntity'</a>, <a>describeEntity_entityId</a> -
--   Required. The unique ID of the entity to describe.
newDescribeEntity :: Text -> Text -> DescribeEntity

-- | Required. The catalog related to the request. Fixed value:
--   <tt>AWSMarketplace</tt>
describeEntity_catalog :: Lens' DescribeEntity Text

-- | Required. The unique ID of the entity to describe.
describeEntity_entityId :: Lens' DescribeEntity Text

-- | <i>See:</i> <a>newDescribeEntityResponse</a> smart constructor.
data DescribeEntityResponse
DescribeEntityResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Int -> DescribeEntityResponse

-- | The last modified date of the entity, in ISO 8601 format
--   (2018-02-27T13:45:22Z).
[$sel:lastModifiedDate:DescribeEntityResponse'] :: DescribeEntityResponse -> Maybe Text

-- | The named type of the entity, in the format of
--   <tt>EntityType@Version</tt>.
[$sel:entityType:DescribeEntityResponse'] :: DescribeEntityResponse -> Maybe Text

-- | This stringified JSON object includes the details of the entity.
[$sel:details:DescribeEntityResponse'] :: DescribeEntityResponse -> Maybe Text

-- | The identifier of the entity, in the format of
--   <tt>EntityId@RevisionId</tt>.
[$sel:entityIdentifier:DescribeEntityResponse'] :: DescribeEntityResponse -> Maybe Text

-- | The ARN associated to the unique identifier for the change set
--   referenced in this request.
[$sel:entityArn:DescribeEntityResponse'] :: DescribeEntityResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:DescribeEntityResponse'] :: DescribeEntityResponse -> Int

-- | Create a value of <a>DescribeEntityResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lastModifiedDate:DescribeEntityResponse'</a>,
--   <a>describeEntityResponse_lastModifiedDate</a> - The last modified
--   date of the entity, in ISO 8601 format (2018-02-27T13:45:22Z).
--   
--   <a>$sel:entityType:DescribeEntityResponse'</a>,
--   <a>describeEntityResponse_entityType</a> - The named type of the
--   entity, in the format of <tt>EntityType@Version</tt>.
--   
--   <a>$sel:details:DescribeEntityResponse'</a>,
--   <a>describeEntityResponse_details</a> - This stringified JSON object
--   includes the details of the entity.
--   
--   <a>$sel:entityIdentifier:DescribeEntityResponse'</a>,
--   <a>describeEntityResponse_entityIdentifier</a> - The identifier of the
--   entity, in the format of <tt>EntityId@RevisionId</tt>.
--   
--   <a>$sel:entityArn:DescribeEntityResponse'</a>,
--   <a>describeEntityResponse_entityArn</a> - The ARN associated to the
--   unique identifier for the change set referenced in this request.
--   
--   <a>$sel:httpStatus:DescribeEntityResponse'</a>,
--   <a>describeEntityResponse_httpStatus</a> - The response's http status
--   code.
newDescribeEntityResponse :: Int -> DescribeEntityResponse

-- | The last modified date of the entity, in ISO 8601 format
--   (2018-02-27T13:45:22Z).
describeEntityResponse_lastModifiedDate :: Lens' DescribeEntityResponse (Maybe Text)

-- | The named type of the entity, in the format of
--   <tt>EntityType@Version</tt>.
describeEntityResponse_entityType :: Lens' DescribeEntityResponse (Maybe Text)

-- | This stringified JSON object includes the details of the entity.
describeEntityResponse_details :: Lens' DescribeEntityResponse (Maybe Text)

-- | The identifier of the entity, in the format of
--   <tt>EntityId@RevisionId</tt>.
describeEntityResponse_entityIdentifier :: Lens' DescribeEntityResponse (Maybe Text)

-- | The ARN associated to the unique identifier for the change set
--   referenced in this request.
describeEntityResponse_entityArn :: Lens' DescribeEntityResponse (Maybe Text)

-- | The response's http status code.
describeEntityResponse_httpStatus :: Lens' DescribeEntityResponse Int
instance GHC.Generics.Generic Amazonka.MarketplaceCatalog.DescribeEntity.DescribeEntity
instance GHC.Show.Show Amazonka.MarketplaceCatalog.DescribeEntity.DescribeEntity
instance GHC.Read.Read Amazonka.MarketplaceCatalog.DescribeEntity.DescribeEntity
instance GHC.Classes.Eq Amazonka.MarketplaceCatalog.DescribeEntity.DescribeEntity
instance GHC.Generics.Generic Amazonka.MarketplaceCatalog.DescribeEntity.DescribeEntityResponse
instance GHC.Show.Show Amazonka.MarketplaceCatalog.DescribeEntity.DescribeEntityResponse
instance GHC.Read.Read Amazonka.MarketplaceCatalog.DescribeEntity.DescribeEntityResponse
instance GHC.Classes.Eq Amazonka.MarketplaceCatalog.DescribeEntity.DescribeEntityResponse
instance Amazonka.Types.AWSRequest Amazonka.MarketplaceCatalog.DescribeEntity.DescribeEntity
instance Control.DeepSeq.NFData Amazonka.MarketplaceCatalog.DescribeEntity.DescribeEntityResponse
instance Data.Hashable.Class.Hashable Amazonka.MarketplaceCatalog.DescribeEntity.DescribeEntity
instance Control.DeepSeq.NFData Amazonka.MarketplaceCatalog.DescribeEntity.DescribeEntity
instance Amazonka.Data.Headers.ToHeaders Amazonka.MarketplaceCatalog.DescribeEntity.DescribeEntity
instance Amazonka.Data.Path.ToPath Amazonka.MarketplaceCatalog.DescribeEntity.DescribeEntity
instance Amazonka.Data.Query.ToQuery Amazonka.MarketplaceCatalog.DescribeEntity.DescribeEntity


-- | Provides information about a given change set.
module Amazonka.MarketplaceCatalog.DescribeChangeSet

-- | <i>See:</i> <a>newDescribeChangeSet</a> smart constructor.
data DescribeChangeSet
DescribeChangeSet' :: Text -> Text -> DescribeChangeSet

-- | Required. The catalog related to the request. Fixed value:
--   <tt>AWSMarketplace</tt>
[$sel:catalog:DescribeChangeSet'] :: DescribeChangeSet -> Text

-- | Required. The unique identifier for the <tt>StartChangeSet</tt>
--   request that you want to describe the details for.
[$sel:changeSetId:DescribeChangeSet'] :: DescribeChangeSet -> Text

-- | Create a value of <a>DescribeChangeSet</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalog:DescribeChangeSet'</a>,
--   <a>describeChangeSet_catalog</a> - Required. The catalog related to
--   the request. Fixed value: <tt>AWSMarketplace</tt>
--   
--   <a>$sel:changeSetId:DescribeChangeSet'</a>,
--   <a>describeChangeSet_changeSetId</a> - Required. The unique identifier
--   for the <tt>StartChangeSet</tt> request that you want to describe the
--   details for.
newDescribeChangeSet :: Text -> Text -> DescribeChangeSet

-- | Required. The catalog related to the request. Fixed value:
--   <tt>AWSMarketplace</tt>
describeChangeSet_catalog :: Lens' DescribeChangeSet Text

-- | Required. The unique identifier for the <tt>StartChangeSet</tt>
--   request that you want to describe the details for.
describeChangeSet_changeSetId :: Lens' DescribeChangeSet Text

-- | <i>See:</i> <a>newDescribeChangeSetResponse</a> smart constructor.
data DescribeChangeSetResponse
DescribeChangeSetResponse' :: Maybe ChangeStatus -> Maybe Text -> Maybe FailureCode -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe [ChangeSummary] -> Maybe Text -> Maybe Text -> Int -> DescribeChangeSetResponse

-- | The status of the change request.
[$sel:status:DescribeChangeSetResponse'] :: DescribeChangeSetResponse -> Maybe ChangeStatus

-- | The date and time, in ISO 8601 format (2018-02-27T13:45:22Z), the
--   request started.
[$sel:startTime:DescribeChangeSetResponse'] :: DescribeChangeSetResponse -> Maybe Text

-- | Returned if the change set is in <tt>FAILED</tt> status. Can be either
--   <tt>CLIENT_ERROR</tt>, which means that there are issues with the
--   request (see the <tt>ErrorDetailList</tt>), or <tt>SERVER_FAULT</tt>,
--   which means that there is a problem in the system, and you should
--   retry your request.
[$sel:failureCode:DescribeChangeSetResponse'] :: DescribeChangeSetResponse -> Maybe FailureCode

-- | The optional name provided in the <tt>StartChangeSet</tt> request. If
--   you do not provide a name, one is set by default.
[$sel:changeSetName:DescribeChangeSetResponse'] :: DescribeChangeSetResponse -> Maybe Text

-- | Returned if there is a failure on the change set, but that failure is
--   not related to any of the changes in the request.
[$sel:failureDescription:DescribeChangeSetResponse'] :: DescribeChangeSetResponse -> Maybe Text

-- | Required. The unique identifier for the change set referenced in this
--   request.
[$sel:changeSetId:DescribeChangeSetResponse'] :: DescribeChangeSetResponse -> Maybe Text

-- | An array of <tt>ChangeSummary</tt> objects.
[$sel:changeSet:DescribeChangeSetResponse'] :: DescribeChangeSetResponse -> Maybe [ChangeSummary]

-- | The date and time, in ISO 8601 format (2018-02-27T13:45:22Z), the
--   request transitioned to a terminal state. The change cannot transition
--   to a different state. Null if the request is not in a terminal state.
[$sel:endTime:DescribeChangeSetResponse'] :: DescribeChangeSetResponse -> Maybe Text

-- | The ARN associated with the unique identifier for the change set
--   referenced in this request.
[$sel:changeSetArn:DescribeChangeSetResponse'] :: DescribeChangeSetResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:DescribeChangeSetResponse'] :: DescribeChangeSetResponse -> Int

-- | Create a value of <a>DescribeChangeSetResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:DescribeChangeSetResponse'</a>,
--   <a>describeChangeSetResponse_status</a> - The status of the change
--   request.
--   
--   <a>$sel:startTime:DescribeChangeSetResponse'</a>,
--   <a>describeChangeSetResponse_startTime</a> - The date and time, in ISO
--   8601 format (2018-02-27T13:45:22Z), the request started.
--   
--   <a>$sel:failureCode:DescribeChangeSetResponse'</a>,
--   <a>describeChangeSetResponse_failureCode</a> - Returned if the change
--   set is in <tt>FAILED</tt> status. Can be either <tt>CLIENT_ERROR</tt>,
--   which means that there are issues with the request (see the
--   <tt>ErrorDetailList</tt>), or <tt>SERVER_FAULT</tt>, which means that
--   there is a problem in the system, and you should retry your request.
--   
--   <a>$sel:changeSetName:DescribeChangeSetResponse'</a>,
--   <a>describeChangeSetResponse_changeSetName</a> - The optional name
--   provided in the <tt>StartChangeSet</tt> request. If you do not provide
--   a name, one is set by default.
--   
--   <a>$sel:failureDescription:DescribeChangeSetResponse'</a>,
--   <a>describeChangeSetResponse_failureDescription</a> - Returned if
--   there is a failure on the change set, but that failure is not related
--   to any of the changes in the request.
--   
--   <a>$sel:changeSetId:DescribeChangeSet'</a>,
--   <a>describeChangeSetResponse_changeSetId</a> - Required. The unique
--   identifier for the change set referenced in this request.
--   
--   <a>$sel:changeSet:DescribeChangeSetResponse'</a>,
--   <a>describeChangeSetResponse_changeSet</a> - An array of
--   <tt>ChangeSummary</tt> objects.
--   
--   <a>$sel:endTime:DescribeChangeSetResponse'</a>,
--   <a>describeChangeSetResponse_endTime</a> - The date and time, in ISO
--   8601 format (2018-02-27T13:45:22Z), the request transitioned to a
--   terminal state. The change cannot transition to a different state.
--   Null if the request is not in a terminal state.
--   
--   <a>$sel:changeSetArn:DescribeChangeSetResponse'</a>,
--   <a>describeChangeSetResponse_changeSetArn</a> - The ARN associated
--   with the unique identifier for the change set referenced in this
--   request.
--   
--   <a>$sel:httpStatus:DescribeChangeSetResponse'</a>,
--   <a>describeChangeSetResponse_httpStatus</a> - The response's http
--   status code.
newDescribeChangeSetResponse :: Int -> DescribeChangeSetResponse

-- | The status of the change request.
describeChangeSetResponse_status :: Lens' DescribeChangeSetResponse (Maybe ChangeStatus)

-- | The date and time, in ISO 8601 format (2018-02-27T13:45:22Z), the
--   request started.
describeChangeSetResponse_startTime :: Lens' DescribeChangeSetResponse (Maybe Text)

-- | Returned if the change set is in <tt>FAILED</tt> status. Can be either
--   <tt>CLIENT_ERROR</tt>, which means that there are issues with the
--   request (see the <tt>ErrorDetailList</tt>), or <tt>SERVER_FAULT</tt>,
--   which means that there is a problem in the system, and you should
--   retry your request.
describeChangeSetResponse_failureCode :: Lens' DescribeChangeSetResponse (Maybe FailureCode)

-- | The optional name provided in the <tt>StartChangeSet</tt> request. If
--   you do not provide a name, one is set by default.
describeChangeSetResponse_changeSetName :: Lens' DescribeChangeSetResponse (Maybe Text)

-- | Returned if there is a failure on the change set, but that failure is
--   not related to any of the changes in the request.
describeChangeSetResponse_failureDescription :: Lens' DescribeChangeSetResponse (Maybe Text)

-- | Required. The unique identifier for the change set referenced in this
--   request.
describeChangeSetResponse_changeSetId :: Lens' DescribeChangeSetResponse (Maybe Text)

-- | An array of <tt>ChangeSummary</tt> objects.
describeChangeSetResponse_changeSet :: Lens' DescribeChangeSetResponse (Maybe [ChangeSummary])

-- | The date and time, in ISO 8601 format (2018-02-27T13:45:22Z), the
--   request transitioned to a terminal state. The change cannot transition
--   to a different state. Null if the request is not in a terminal state.
describeChangeSetResponse_endTime :: Lens' DescribeChangeSetResponse (Maybe Text)

-- | The ARN associated with the unique identifier for the change set
--   referenced in this request.
describeChangeSetResponse_changeSetArn :: Lens' DescribeChangeSetResponse (Maybe Text)

-- | The response's http status code.
describeChangeSetResponse_httpStatus :: Lens' DescribeChangeSetResponse Int
instance GHC.Generics.Generic Amazonka.MarketplaceCatalog.DescribeChangeSet.DescribeChangeSet
instance GHC.Show.Show Amazonka.MarketplaceCatalog.DescribeChangeSet.DescribeChangeSet
instance GHC.Read.Read Amazonka.MarketplaceCatalog.DescribeChangeSet.DescribeChangeSet
instance GHC.Classes.Eq Amazonka.MarketplaceCatalog.DescribeChangeSet.DescribeChangeSet
instance GHC.Generics.Generic Amazonka.MarketplaceCatalog.DescribeChangeSet.DescribeChangeSetResponse
instance GHC.Show.Show Amazonka.MarketplaceCatalog.DescribeChangeSet.DescribeChangeSetResponse
instance GHC.Read.Read Amazonka.MarketplaceCatalog.DescribeChangeSet.DescribeChangeSetResponse
instance GHC.Classes.Eq Amazonka.MarketplaceCatalog.DescribeChangeSet.DescribeChangeSetResponse
instance Amazonka.Types.AWSRequest Amazonka.MarketplaceCatalog.DescribeChangeSet.DescribeChangeSet
instance Control.DeepSeq.NFData Amazonka.MarketplaceCatalog.DescribeChangeSet.DescribeChangeSetResponse
instance Data.Hashable.Class.Hashable Amazonka.MarketplaceCatalog.DescribeChangeSet.DescribeChangeSet
instance Control.DeepSeq.NFData Amazonka.MarketplaceCatalog.DescribeChangeSet.DescribeChangeSet
instance Amazonka.Data.Headers.ToHeaders Amazonka.MarketplaceCatalog.DescribeChangeSet.DescribeChangeSet
instance Amazonka.Data.Path.ToPath Amazonka.MarketplaceCatalog.DescribeChangeSet.DescribeChangeSet
instance Amazonka.Data.Query.ToQuery Amazonka.MarketplaceCatalog.DescribeChangeSet.DescribeChangeSet


-- | Used to cancel an open change request. Must be sent before the status
--   of the request changes to <tt>APPLYING</tt>, the final stage of
--   completing your change request. You can describe a change during the
--   60-day request history retention period for API calls.
module Amazonka.MarketplaceCatalog.CancelChangeSet

-- | <i>See:</i> <a>newCancelChangeSet</a> smart constructor.
data CancelChangeSet
CancelChangeSet' :: Text -> Text -> CancelChangeSet

-- | Required. The catalog related to the request. Fixed value:
--   <tt>AWSMarketplace</tt>.
[$sel:catalog:CancelChangeSet'] :: CancelChangeSet -> Text

-- | Required. The unique identifier of the <tt>StartChangeSet</tt> request
--   that you want to cancel.
[$sel:changeSetId:CancelChangeSet'] :: CancelChangeSet -> Text

-- | Create a value of <a>CancelChangeSet</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalog:CancelChangeSet'</a>, <a>cancelChangeSet_catalog</a> -
--   Required. The catalog related to the request. Fixed value:
--   <tt>AWSMarketplace</tt>.
--   
--   <a>$sel:changeSetId:CancelChangeSet'</a>,
--   <a>cancelChangeSet_changeSetId</a> - Required. The unique identifier
--   of the <tt>StartChangeSet</tt> request that you want to cancel.
newCancelChangeSet :: Text -> Text -> CancelChangeSet

-- | Required. The catalog related to the request. Fixed value:
--   <tt>AWSMarketplace</tt>.
cancelChangeSet_catalog :: Lens' CancelChangeSet Text

-- | Required. The unique identifier of the <tt>StartChangeSet</tt> request
--   that you want to cancel.
cancelChangeSet_changeSetId :: Lens' CancelChangeSet Text

-- | <i>See:</i> <a>newCancelChangeSetResponse</a> smart constructor.
data CancelChangeSetResponse
CancelChangeSetResponse' :: Maybe Text -> Maybe Text -> Int -> CancelChangeSetResponse

-- | The unique identifier for the change set referenced in this request.
[$sel:changeSetId:CancelChangeSetResponse'] :: CancelChangeSetResponse -> Maybe Text

-- | The ARN associated with the change set referenced in this request.
[$sel:changeSetArn:CancelChangeSetResponse'] :: CancelChangeSetResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:CancelChangeSetResponse'] :: CancelChangeSetResponse -> Int

-- | Create a value of <a>CancelChangeSetResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:changeSetId:CancelChangeSet'</a>,
--   <a>cancelChangeSetResponse_changeSetId</a> - The unique identifier for
--   the change set referenced in this request.
--   
--   <a>$sel:changeSetArn:CancelChangeSetResponse'</a>,
--   <a>cancelChangeSetResponse_changeSetArn</a> - The ARN associated with
--   the change set referenced in this request.
--   
--   <a>$sel:httpStatus:CancelChangeSetResponse'</a>,
--   <a>cancelChangeSetResponse_httpStatus</a> - The response's http status
--   code.
newCancelChangeSetResponse :: Int -> CancelChangeSetResponse

-- | The unique identifier for the change set referenced in this request.
cancelChangeSetResponse_changeSetId :: Lens' CancelChangeSetResponse (Maybe Text)

-- | The ARN associated with the change set referenced in this request.
cancelChangeSetResponse_changeSetArn :: Lens' CancelChangeSetResponse (Maybe Text)

-- | The response's http status code.
cancelChangeSetResponse_httpStatus :: Lens' CancelChangeSetResponse Int
instance GHC.Generics.Generic Amazonka.MarketplaceCatalog.CancelChangeSet.CancelChangeSet
instance GHC.Show.Show Amazonka.MarketplaceCatalog.CancelChangeSet.CancelChangeSet
instance GHC.Read.Read Amazonka.MarketplaceCatalog.CancelChangeSet.CancelChangeSet
instance GHC.Classes.Eq Amazonka.MarketplaceCatalog.CancelChangeSet.CancelChangeSet
instance GHC.Generics.Generic Amazonka.MarketplaceCatalog.CancelChangeSet.CancelChangeSetResponse
instance GHC.Show.Show Amazonka.MarketplaceCatalog.CancelChangeSet.CancelChangeSetResponse
instance GHC.Read.Read Amazonka.MarketplaceCatalog.CancelChangeSet.CancelChangeSetResponse
instance GHC.Classes.Eq Amazonka.MarketplaceCatalog.CancelChangeSet.CancelChangeSetResponse
instance Amazonka.Types.AWSRequest Amazonka.MarketplaceCatalog.CancelChangeSet.CancelChangeSet
instance Control.DeepSeq.NFData Amazonka.MarketplaceCatalog.CancelChangeSet.CancelChangeSetResponse
instance Data.Hashable.Class.Hashable Amazonka.MarketplaceCatalog.CancelChangeSet.CancelChangeSet
instance Control.DeepSeq.NFData Amazonka.MarketplaceCatalog.CancelChangeSet.CancelChangeSet
instance Amazonka.Data.Headers.ToHeaders Amazonka.MarketplaceCatalog.CancelChangeSet.CancelChangeSet
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MarketplaceCatalog.CancelChangeSet.CancelChangeSet
instance Amazonka.Data.Path.ToPath Amazonka.MarketplaceCatalog.CancelChangeSet.CancelChangeSet
instance Amazonka.Data.Query.ToQuery Amazonka.MarketplaceCatalog.CancelChangeSet.CancelChangeSet


module Amazonka.MarketplaceCatalog.Lens

-- | The value of the next token, if it exists. Null if there are no more
--   results.
listEntities_nextToken :: Lens' ListEntities (Maybe Text)

-- | An array of filter objects. Each filter object contains two
--   attributes, <tt>filterName</tt> and <tt>filterValues</tt>.
listEntities_filterList :: Lens' ListEntities (Maybe (NonEmpty Filter))

-- | An object that contains two attributes, <tt>SortBy</tt> and
--   <tt>SortOrder</tt>.
listEntities_sort :: Lens' ListEntities (Maybe Sort)

-- | Specifies the upper limit of the elements on a single page. If a value
--   isn't provided, the default value is 20.
listEntities_maxResults :: Lens' ListEntities (Maybe Natural)

-- | The catalog related to the request. Fixed value:
--   <tt>AWSMarketplace</tt>
listEntities_catalog :: Lens' ListEntities Text

-- | The type of entities to retrieve.
listEntities_entityType :: Lens' ListEntities Text

-- | Array of <tt>EntitySummary</tt> object.
listEntitiesResponse_entitySummaryList :: Lens' ListEntitiesResponse (Maybe [EntitySummary])

-- | The value of the next token if it exists. Null if there is no more
--   result.
listEntitiesResponse_nextToken :: Lens' ListEntitiesResponse (Maybe Text)

-- | The response's http status code.
listEntitiesResponse_httpStatus :: Lens' ListEntitiesResponse Int

-- | The token value retrieved from a previous call to access the next page
--   of results.
listChangeSets_nextToken :: Lens' ListChangeSets (Maybe Text)

-- | An array of filter objects.
listChangeSets_filterList :: Lens' ListChangeSets (Maybe (NonEmpty Filter))

-- | An object that contains two attributes, <tt>SortBy</tt> and
--   <tt>SortOrder</tt>.
listChangeSets_sort :: Lens' ListChangeSets (Maybe Sort)

-- | The maximum number of results returned by a single call. This value
--   must be provided in the next call to retrieve the next set of results.
--   By default, this value is 20.
listChangeSets_maxResults :: Lens' ListChangeSets (Maybe Natural)

-- | The catalog related to the request. Fixed value:
--   <tt>AWSMarketplace</tt>
listChangeSets_catalog :: Lens' ListChangeSets Text

-- | The value of the next token, if it exists. Null if there are no more
--   results.
listChangeSetsResponse_nextToken :: Lens' ListChangeSetsResponse (Maybe Text)

-- | Array of <tt>ChangeSetSummaryListItem</tt> objects.
listChangeSetsResponse_changeSetSummaryList :: Lens' ListChangeSetsResponse (Maybe [ChangeSetSummaryListItem])

-- | The response's http status code.
listChangeSetsResponse_httpStatus :: Lens' ListChangeSetsResponse Int

-- | Optional case sensitive string of up to 100 ASCII characters. The
--   change set name can be used to filter the list of change sets.
startChangeSet_changeSetName :: Lens' StartChangeSet (Maybe Text)

-- | A unique token to identify the request to ensure idempotency.
startChangeSet_clientRequestToken :: Lens' StartChangeSet (Maybe Text)

-- | The catalog related to the request. Fixed value:
--   <tt>AWSMarketplace</tt>
startChangeSet_catalog :: Lens' StartChangeSet Text

-- | Array of <tt>change</tt> object.
startChangeSet_changeSet :: Lens' StartChangeSet (NonEmpty Change)

-- | Unique identifier generated for the request.
startChangeSetResponse_changeSetId :: Lens' StartChangeSetResponse (Maybe Text)

-- | The ARN associated to the unique identifier generated for the request.
startChangeSetResponse_changeSetArn :: Lens' StartChangeSetResponse (Maybe Text)

-- | The response's http status code.
startChangeSetResponse_httpStatus :: Lens' StartChangeSetResponse Int

-- | Required. The catalog related to the request. Fixed value:
--   <tt>AWSMarketplace</tt>.
cancelChangeSet_catalog :: Lens' CancelChangeSet Text

-- | Required. The unique identifier of the <tt>StartChangeSet</tt> request
--   that you want to cancel.
cancelChangeSet_changeSetId :: Lens' CancelChangeSet Text

-- | The unique identifier for the change set referenced in this request.
cancelChangeSetResponse_changeSetId :: Lens' CancelChangeSetResponse (Maybe Text)

-- | The ARN associated with the change set referenced in this request.
cancelChangeSetResponse_changeSetArn :: Lens' CancelChangeSetResponse (Maybe Text)

-- | The response's http status code.
cancelChangeSetResponse_httpStatus :: Lens' CancelChangeSetResponse Int

-- | Required. The catalog related to the request. Fixed value:
--   <tt>AWSMarketplace</tt>
describeEntity_catalog :: Lens' DescribeEntity Text

-- | Required. The unique ID of the entity to describe.
describeEntity_entityId :: Lens' DescribeEntity Text

-- | The last modified date of the entity, in ISO 8601 format
--   (2018-02-27T13:45:22Z).
describeEntityResponse_lastModifiedDate :: Lens' DescribeEntityResponse (Maybe Text)

-- | The named type of the entity, in the format of
--   <tt>EntityType@Version</tt>.
describeEntityResponse_entityType :: Lens' DescribeEntityResponse (Maybe Text)

-- | This stringified JSON object includes the details of the entity.
describeEntityResponse_details :: Lens' DescribeEntityResponse (Maybe Text)

-- | The identifier of the entity, in the format of
--   <tt>EntityId@RevisionId</tt>.
describeEntityResponse_entityIdentifier :: Lens' DescribeEntityResponse (Maybe Text)

-- | The ARN associated to the unique identifier for the change set
--   referenced in this request.
describeEntityResponse_entityArn :: Lens' DescribeEntityResponse (Maybe Text)

-- | The response's http status code.
describeEntityResponse_httpStatus :: Lens' DescribeEntityResponse Int

-- | Required. The catalog related to the request. Fixed value:
--   <tt>AWSMarketplace</tt>
describeChangeSet_catalog :: Lens' DescribeChangeSet Text

-- | Required. The unique identifier for the <tt>StartChangeSet</tt>
--   request that you want to describe the details for.
describeChangeSet_changeSetId :: Lens' DescribeChangeSet Text

-- | The status of the change request.
describeChangeSetResponse_status :: Lens' DescribeChangeSetResponse (Maybe ChangeStatus)

-- | The date and time, in ISO 8601 format (2018-02-27T13:45:22Z), the
--   request started.
describeChangeSetResponse_startTime :: Lens' DescribeChangeSetResponse (Maybe Text)

-- | Returned if the change set is in <tt>FAILED</tt> status. Can be either
--   <tt>CLIENT_ERROR</tt>, which means that there are issues with the
--   request (see the <tt>ErrorDetailList</tt>), or <tt>SERVER_FAULT</tt>,
--   which means that there is a problem in the system, and you should
--   retry your request.
describeChangeSetResponse_failureCode :: Lens' DescribeChangeSetResponse (Maybe FailureCode)

-- | The optional name provided in the <tt>StartChangeSet</tt> request. If
--   you do not provide a name, one is set by default.
describeChangeSetResponse_changeSetName :: Lens' DescribeChangeSetResponse (Maybe Text)

-- | Returned if there is a failure on the change set, but that failure is
--   not related to any of the changes in the request.
describeChangeSetResponse_failureDescription :: Lens' DescribeChangeSetResponse (Maybe Text)

-- | Required. The unique identifier for the change set referenced in this
--   request.
describeChangeSetResponse_changeSetId :: Lens' DescribeChangeSetResponse (Maybe Text)

-- | An array of <tt>ChangeSummary</tt> objects.
describeChangeSetResponse_changeSet :: Lens' DescribeChangeSetResponse (Maybe [ChangeSummary])

-- | The date and time, in ISO 8601 format (2018-02-27T13:45:22Z), the
--   request transitioned to a terminal state. The change cannot transition
--   to a different state. Null if the request is not in a terminal state.
describeChangeSetResponse_endTime :: Lens' DescribeChangeSetResponse (Maybe Text)

-- | The ARN associated with the unique identifier for the change set
--   referenced in this request.
describeChangeSetResponse_changeSetArn :: Lens' DescribeChangeSetResponse (Maybe Text)

-- | The response's http status code.
describeChangeSetResponse_httpStatus :: Lens' DescribeChangeSetResponse Int

-- | Optional name for the change.
change_changeName :: Lens' Change (Maybe Text)

-- | Change types are single string values that describe your intention for
--   the change. Each change type is unique for each <tt>EntityType</tt>
--   provided in the change's scope.
change_changeType :: Lens' Change Text

-- | The entity to be changed.
change_entity :: Lens' Change Entity

-- | This object contains details specific to the change type of the
--   requested change.
change_details :: Lens' Change Text

-- | The current status of the change set.
changeSetSummaryListItem_status :: Lens' ChangeSetSummaryListItem (Maybe ChangeStatus)

-- | This object is a list of entity IDs (string) that are a part of a
--   change set. The entity ID list is a maximum of 20 entities. It must
--   contain at least one entity.
changeSetSummaryListItem_entityIdList :: Lens' ChangeSetSummaryListItem (Maybe [Text])

-- | The time, in ISO 8601 format (2018-02-27T13:45:22Z), when the change
--   set was started.
changeSetSummaryListItem_startTime :: Lens' ChangeSetSummaryListItem (Maybe Text)

-- | Returned if the change set is in <tt>FAILED</tt> status. Can be either
--   <tt>CLIENT_ERROR</tt>, which means that there are issues with the
--   request (see the <tt>ErrorDetailList</tt> of
--   <tt>DescribeChangeSet</tt>), or <tt>SERVER_FAULT</tt>, which means
--   that there is a problem in the system, and you should retry your
--   request.
changeSetSummaryListItem_failureCode :: Lens' ChangeSetSummaryListItem (Maybe FailureCode)

-- | The non-unique name for the change set.
changeSetSummaryListItem_changeSetName :: Lens' ChangeSetSummaryListItem (Maybe Text)

-- | The unique identifier for a change set.
changeSetSummaryListItem_changeSetId :: Lens' ChangeSetSummaryListItem (Maybe Text)

-- | The time, in ISO 8601 format (2018-02-27T13:45:22Z), when the change
--   set was finished.
changeSetSummaryListItem_endTime :: Lens' ChangeSetSummaryListItem (Maybe Text)

-- | The ARN associated with the unique identifier for the change set
--   referenced in this request.
changeSetSummaryListItem_changeSetArn :: Lens' ChangeSetSummaryListItem (Maybe Text)

-- | Optional name for the change.
changeSummary_changeName :: Lens' ChangeSummary (Maybe Text)

-- | This object contains details specific to the change type of the
--   requested change.
changeSummary_details :: Lens' ChangeSummary (Maybe Text)

-- | An array of <tt>ErrorDetail</tt> objects associated with the change.
changeSummary_errorDetailList :: Lens' ChangeSummary (Maybe [ErrorDetail])

-- | The entity to be changed.
changeSummary_entity :: Lens' ChangeSummary (Maybe Entity)

-- | The type of the change.
changeSummary_changeType :: Lens' ChangeSummary (Maybe Text)

-- | The identifier for the entity.
entity_identifier :: Lens' Entity (Maybe Text)

-- | The type of entity.
entity_type :: Lens' Entity Text

-- | The last time the entity was published, using ISO 8601 format
--   (2018-02-27T13:45:22Z).
entitySummary_lastModifiedDate :: Lens' EntitySummary (Maybe Text)

-- | The type of the entity.
entitySummary_entityType :: Lens' EntitySummary (Maybe Text)

-- | The visibility status of the entity to buyers. This value can be
--   <tt>Public</tt> (everyone can view the entity), <tt>Limited</tt> (the
--   entity is visible to limited accounts only), or <tt>Restricted</tt>
--   (the entity was published and then unpublished and only existing
--   buyers can view it).
entitySummary_visibility :: Lens' EntitySummary (Maybe Text)

-- | The name for the entity. This value is not unique. It is defined by
--   the seller.
entitySummary_name :: Lens' EntitySummary (Maybe Text)

-- | The unique identifier for the entity.
entitySummary_entityId :: Lens' EntitySummary (Maybe Text)

-- | The ARN associated with the unique identifier for the entity.
entitySummary_entityArn :: Lens' EntitySummary (Maybe Text)

-- | The error code that identifies the type of error.
errorDetail_errorCode :: Lens' ErrorDetail (Maybe Text)

-- | The message for the error.
errorDetail_errorMessage :: Lens' ErrorDetail (Maybe Text)

-- | <tt>ListEntities</tt> - This is a list of unique <tt>EntityId</tt>s.
--   
--   <tt>ListChangeSets</tt> - The supported filter names and associated
--   <tt>ValueList</tt>s is as follows:
--   
--   <ul>
--   <li><tt>ChangeSetName</tt> - The supported <tt>ValueList</tt> is a
--   list of non-unique <tt>ChangeSetName</tt>s. These are defined when you
--   call the <tt>StartChangeSet</tt> action.</li>
--   <li><tt>Status</tt> - The supported <tt>ValueList</tt> is a list of
--   statuses for all change set requests.</li>
--   <li><tt>EntityId</tt> - The supported <tt>ValueList</tt> is a list of
--   unique <tt>EntityId</tt>s.</li>
--   <li><tt>BeforeStartTime</tt> - The supported <tt>ValueList</tt> is a
--   list of all change sets that started before the filter value.</li>
--   <li><tt>AfterStartTime</tt> - The supported <tt>ValueList</tt> is a
--   list of all change sets that started after the filter value.</li>
--   <li><tt>BeforeEndTime</tt> - The supported <tt>ValueList</tt> is a
--   list of all change sets that ended before the filter value.</li>
--   <li><tt>AfterEndTime</tt> - The supported <tt>ValueList</tt> is a list
--   of all change sets that ended after the filter value.</li>
--   </ul>
filter_valueList :: Lens' Filter (Maybe (NonEmpty Text))

-- | For <tt>ListEntities</tt>, the supported value for this is an
--   <tt>EntityId</tt>.
--   
--   For <tt>ListChangeSets</tt>, the supported values are as follows:
filter_name :: Lens' Filter (Maybe Text)

-- | The sorting order. Can be <tt>ASCENDING</tt> or <tt>DESCENDING</tt>.
--   The default value is <tt>DESCENDING</tt>.
sort_sortOrder :: Lens' Sort (Maybe SortOrder)

-- | For <tt>ListEntities</tt>, supported attributes include
--   <tt>LastModifiedDate</tt> (default), <tt>Visibility</tt>,
--   <tt>EntityId</tt>, and <tt>Name</tt>.
--   
--   For <tt>ListChangeSets</tt>, supported attributes include
--   <tt>StartTime</tt> and <tt>EndTime</tt>.
sort_sortBy :: Lens' Sort (Maybe Text)


module Amazonka.MarketplaceCatalog.Waiters


-- | Derived from API version <tt>2018-09-17</tt> of the AWS service
--   descriptions, licensed under Apache 2.0.
--   
--   Catalog API actions allow you to manage your entities through list,
--   describe, and update capabilities. An entity can be a product or an
--   offer on AWS Marketplace.
--   
--   You can automate your entity update process by integrating the AWS
--   Marketplace Catalog API with your AWS Marketplace product build or
--   deployment pipelines. You can also create your own applications on top
--   of the Catalog API to manage your products on AWS Marketplace.
module Amazonka.MarketplaceCatalog

-- | API version <tt>2018-09-17</tt> of the Amazon Marketplace Catalog
--   Service SDK configuration.
defaultService :: Service

-- | An error occurred during validation.
_ValidationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Access is denied.
_AccessDeniedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The maximum number of open requests per account has been exceeded.
_ServiceQuotaExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Too many requests.
_ThrottlingException :: AsError a => Getting (First ServiceError) a ServiceError

-- | There was an internal service exception.
_InternalServiceException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Currently, the specified resource is not supported.
_ResourceNotSupportedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified resource wasn't found.
_ResourceNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The resource is currently in use.
_ResourceInUseException :: AsError a => Getting (First ServiceError) a ServiceError

-- | <i>See:</i> <a>newListEntities</a> smart constructor.
data ListEntities
ListEntities' :: Maybe Text -> Maybe (NonEmpty Filter) -> Maybe Sort -> Maybe Natural -> Text -> Text -> ListEntities

-- | Create a value of <a>ListEntities</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListEntities'</a>, <a>listEntities_nextToken</a> -
--   The value of the next token, if it exists. Null if there are no more
--   results.
--   
--   <a>$sel:filterList:ListEntities'</a>, <a>listEntities_filterList</a> -
--   An array of filter objects. Each filter object contains two
--   attributes, <tt>filterName</tt> and <tt>filterValues</tt>.
--   
--   <a>$sel:sort:ListEntities'</a>, <a>listEntities_sort</a> - An object
--   that contains two attributes, <tt>SortBy</tt> and <tt>SortOrder</tt>.
--   
--   <a>$sel:maxResults:ListEntities'</a>, <a>listEntities_maxResults</a> -
--   Specifies the upper limit of the elements on a single page. If a value
--   isn't provided, the default value is 20.
--   
--   <a>$sel:catalog:ListEntities'</a>, <a>listEntities_catalog</a> - The
--   catalog related to the request. Fixed value: <tt>AWSMarketplace</tt>
--   
--   <a>$sel:entityType:ListEntities'</a>, <a>listEntities_entityType</a> -
--   The type of entities to retrieve.
newListEntities :: Text -> Text -> ListEntities

-- | <i>See:</i> <a>newListEntitiesResponse</a> smart constructor.
data ListEntitiesResponse
ListEntitiesResponse' :: Maybe [EntitySummary] -> Maybe Text -> Int -> ListEntitiesResponse

-- | Create a value of <a>ListEntitiesResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:entitySummaryList:ListEntitiesResponse'</a>,
--   <a>listEntitiesResponse_entitySummaryList</a> - Array of
--   <tt>EntitySummary</tt> object.
--   
--   <a>$sel:nextToken:ListEntities'</a>,
--   <a>listEntitiesResponse_nextToken</a> - The value of the next token if
--   it exists. Null if there is no more result.
--   
--   <a>$sel:httpStatus:ListEntitiesResponse'</a>,
--   <a>listEntitiesResponse_httpStatus</a> - The response's http status
--   code.
newListEntitiesResponse :: Int -> ListEntitiesResponse

-- | <i>See:</i> <a>newListChangeSets</a> smart constructor.
data ListChangeSets
ListChangeSets' :: Maybe Text -> Maybe (NonEmpty Filter) -> Maybe Sort -> Maybe Natural -> Text -> ListChangeSets

-- | Create a value of <a>ListChangeSets</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListChangeSets'</a>, <a>listChangeSets_nextToken</a>
--   - The token value retrieved from a previous call to access the next
--   page of results.
--   
--   <a>$sel:filterList:ListChangeSets'</a>,
--   <a>listChangeSets_filterList</a> - An array of filter objects.
--   
--   <a>$sel:sort:ListChangeSets'</a>, <a>listChangeSets_sort</a> - An
--   object that contains two attributes, <tt>SortBy</tt> and
--   <tt>SortOrder</tt>.
--   
--   <a>$sel:maxResults:ListChangeSets'</a>,
--   <a>listChangeSets_maxResults</a> - The maximum number of results
--   returned by a single call. This value must be provided in the next
--   call to retrieve the next set of results. By default, this value is
--   20.
--   
--   <a>$sel:catalog:ListChangeSets'</a>, <a>listChangeSets_catalog</a> -
--   The catalog related to the request. Fixed value:
--   <tt>AWSMarketplace</tt>
newListChangeSets :: Text -> ListChangeSets

-- | <i>See:</i> <a>newListChangeSetsResponse</a> smart constructor.
data ListChangeSetsResponse
ListChangeSetsResponse' :: Maybe Text -> Maybe [ChangeSetSummaryListItem] -> Int -> ListChangeSetsResponse

-- | Create a value of <a>ListChangeSetsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListChangeSets'</a>,
--   <a>listChangeSetsResponse_nextToken</a> - The value of the next token,
--   if it exists. Null if there are no more results.
--   
--   <a>$sel:changeSetSummaryList:ListChangeSetsResponse'</a>,
--   <a>listChangeSetsResponse_changeSetSummaryList</a> - Array of
--   <tt>ChangeSetSummaryListItem</tt> objects.
--   
--   <a>$sel:httpStatus:ListChangeSetsResponse'</a>,
--   <a>listChangeSetsResponse_httpStatus</a> - The response's http status
--   code.
newListChangeSetsResponse :: Int -> ListChangeSetsResponse

-- | <i>See:</i> <a>newStartChangeSet</a> smart constructor.
data StartChangeSet
StartChangeSet' :: Maybe Text -> Maybe Text -> Text -> NonEmpty Change -> StartChangeSet

-- | Create a value of <a>StartChangeSet</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:changeSetName:StartChangeSet'</a>,
--   <a>startChangeSet_changeSetName</a> - Optional case sensitive string
--   of up to 100 ASCII characters. The change set name can be used to
--   filter the list of change sets.
--   
--   <a>$sel:clientRequestToken:StartChangeSet'</a>,
--   <a>startChangeSet_clientRequestToken</a> - A unique token to identify
--   the request to ensure idempotency.
--   
--   <a>$sel:catalog:StartChangeSet'</a>, <a>startChangeSet_catalog</a> -
--   The catalog related to the request. Fixed value:
--   <tt>AWSMarketplace</tt>
--   
--   <a>$sel:changeSet:StartChangeSet'</a>, <a>startChangeSet_changeSet</a>
--   - Array of <tt>change</tt> object.
newStartChangeSet :: Text -> NonEmpty Change -> StartChangeSet

-- | <i>See:</i> <a>newStartChangeSetResponse</a> smart constructor.
data StartChangeSetResponse
StartChangeSetResponse' :: Maybe Text -> Maybe Text -> Int -> StartChangeSetResponse

-- | Create a value of <a>StartChangeSetResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:changeSetId:StartChangeSetResponse'</a>,
--   <a>startChangeSetResponse_changeSetId</a> - Unique identifier
--   generated for the request.
--   
--   <a>$sel:changeSetArn:StartChangeSetResponse'</a>,
--   <a>startChangeSetResponse_changeSetArn</a> - The ARN associated to the
--   unique identifier generated for the request.
--   
--   <a>$sel:httpStatus:StartChangeSetResponse'</a>,
--   <a>startChangeSetResponse_httpStatus</a> - The response's http status
--   code.
newStartChangeSetResponse :: Int -> StartChangeSetResponse

-- | <i>See:</i> <a>newCancelChangeSet</a> smart constructor.
data CancelChangeSet
CancelChangeSet' :: Text -> Text -> CancelChangeSet

-- | Create a value of <a>CancelChangeSet</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalog:CancelChangeSet'</a>, <a>cancelChangeSet_catalog</a> -
--   Required. The catalog related to the request. Fixed value:
--   <tt>AWSMarketplace</tt>.
--   
--   <a>$sel:changeSetId:CancelChangeSet'</a>,
--   <a>cancelChangeSet_changeSetId</a> - Required. The unique identifier
--   of the <tt>StartChangeSet</tt> request that you want to cancel.
newCancelChangeSet :: Text -> Text -> CancelChangeSet

-- | <i>See:</i> <a>newCancelChangeSetResponse</a> smart constructor.
data CancelChangeSetResponse
CancelChangeSetResponse' :: Maybe Text -> Maybe Text -> Int -> CancelChangeSetResponse

-- | Create a value of <a>CancelChangeSetResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:changeSetId:CancelChangeSet'</a>,
--   <a>cancelChangeSetResponse_changeSetId</a> - The unique identifier for
--   the change set referenced in this request.
--   
--   <a>$sel:changeSetArn:CancelChangeSetResponse'</a>,
--   <a>cancelChangeSetResponse_changeSetArn</a> - The ARN associated with
--   the change set referenced in this request.
--   
--   <a>$sel:httpStatus:CancelChangeSetResponse'</a>,
--   <a>cancelChangeSetResponse_httpStatus</a> - The response's http status
--   code.
newCancelChangeSetResponse :: Int -> CancelChangeSetResponse

-- | <i>See:</i> <a>newDescribeEntity</a> smart constructor.
data DescribeEntity
DescribeEntity' :: Text -> Text -> DescribeEntity

-- | Create a value of <a>DescribeEntity</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalog:DescribeEntity'</a>, <a>describeEntity_catalog</a> -
--   Required. The catalog related to the request. Fixed value:
--   <tt>AWSMarketplace</tt>
--   
--   <a>$sel:entityId:DescribeEntity'</a>, <a>describeEntity_entityId</a> -
--   Required. The unique ID of the entity to describe.
newDescribeEntity :: Text -> Text -> DescribeEntity

-- | <i>See:</i> <a>newDescribeEntityResponse</a> smart constructor.
data DescribeEntityResponse
DescribeEntityResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Int -> DescribeEntityResponse

-- | Create a value of <a>DescribeEntityResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lastModifiedDate:DescribeEntityResponse'</a>,
--   <a>describeEntityResponse_lastModifiedDate</a> - The last modified
--   date of the entity, in ISO 8601 format (2018-02-27T13:45:22Z).
--   
--   <a>$sel:entityType:DescribeEntityResponse'</a>,
--   <a>describeEntityResponse_entityType</a> - The named type of the
--   entity, in the format of <tt>EntityType@Version</tt>.
--   
--   <a>$sel:details:DescribeEntityResponse'</a>,
--   <a>describeEntityResponse_details</a> - This stringified JSON object
--   includes the details of the entity.
--   
--   <a>$sel:entityIdentifier:DescribeEntityResponse'</a>,
--   <a>describeEntityResponse_entityIdentifier</a> - The identifier of the
--   entity, in the format of <tt>EntityId@RevisionId</tt>.
--   
--   <a>$sel:entityArn:DescribeEntityResponse'</a>,
--   <a>describeEntityResponse_entityArn</a> - The ARN associated to the
--   unique identifier for the change set referenced in this request.
--   
--   <a>$sel:httpStatus:DescribeEntityResponse'</a>,
--   <a>describeEntityResponse_httpStatus</a> - The response's http status
--   code.
newDescribeEntityResponse :: Int -> DescribeEntityResponse

-- | <i>See:</i> <a>newDescribeChangeSet</a> smart constructor.
data DescribeChangeSet
DescribeChangeSet' :: Text -> Text -> DescribeChangeSet

-- | Create a value of <a>DescribeChangeSet</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:catalog:DescribeChangeSet'</a>,
--   <a>describeChangeSet_catalog</a> - Required. The catalog related to
--   the request. Fixed value: <tt>AWSMarketplace</tt>
--   
--   <a>$sel:changeSetId:DescribeChangeSet'</a>,
--   <a>describeChangeSet_changeSetId</a> - Required. The unique identifier
--   for the <tt>StartChangeSet</tt> request that you want to describe the
--   details for.
newDescribeChangeSet :: Text -> Text -> DescribeChangeSet

-- | <i>See:</i> <a>newDescribeChangeSetResponse</a> smart constructor.
data DescribeChangeSetResponse
DescribeChangeSetResponse' :: Maybe ChangeStatus -> Maybe Text -> Maybe FailureCode -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe [ChangeSummary] -> Maybe Text -> Maybe Text -> Int -> DescribeChangeSetResponse

-- | Create a value of <a>DescribeChangeSetResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:DescribeChangeSetResponse'</a>,
--   <a>describeChangeSetResponse_status</a> - The status of the change
--   request.
--   
--   <a>$sel:startTime:DescribeChangeSetResponse'</a>,
--   <a>describeChangeSetResponse_startTime</a> - The date and time, in ISO
--   8601 format (2018-02-27T13:45:22Z), the request started.
--   
--   <a>$sel:failureCode:DescribeChangeSetResponse'</a>,
--   <a>describeChangeSetResponse_failureCode</a> - Returned if the change
--   set is in <tt>FAILED</tt> status. Can be either <tt>CLIENT_ERROR</tt>,
--   which means that there are issues with the request (see the
--   <tt>ErrorDetailList</tt>), or <tt>SERVER_FAULT</tt>, which means that
--   there is a problem in the system, and you should retry your request.
--   
--   <a>$sel:changeSetName:DescribeChangeSetResponse'</a>,
--   <a>describeChangeSetResponse_changeSetName</a> - The optional name
--   provided in the <tt>StartChangeSet</tt> request. If you do not provide
--   a name, one is set by default.
--   
--   <a>$sel:failureDescription:DescribeChangeSetResponse'</a>,
--   <a>describeChangeSetResponse_failureDescription</a> - Returned if
--   there is a failure on the change set, but that failure is not related
--   to any of the changes in the request.
--   
--   <a>$sel:changeSetId:DescribeChangeSet'</a>,
--   <a>describeChangeSetResponse_changeSetId</a> - Required. The unique
--   identifier for the change set referenced in this request.
--   
--   <a>$sel:changeSet:DescribeChangeSetResponse'</a>,
--   <a>describeChangeSetResponse_changeSet</a> - An array of
--   <tt>ChangeSummary</tt> objects.
--   
--   <a>$sel:endTime:DescribeChangeSetResponse'</a>,
--   <a>describeChangeSetResponse_endTime</a> - The date and time, in ISO
--   8601 format (2018-02-27T13:45:22Z), the request transitioned to a
--   terminal state. The change cannot transition to a different state.
--   Null if the request is not in a terminal state.
--   
--   <a>$sel:changeSetArn:DescribeChangeSetResponse'</a>,
--   <a>describeChangeSetResponse_changeSetArn</a> - The ARN associated
--   with the unique identifier for the change set referenced in this
--   request.
--   
--   <a>$sel:httpStatus:DescribeChangeSetResponse'</a>,
--   <a>describeChangeSetResponse_httpStatus</a> - The response's http
--   status code.
newDescribeChangeSetResponse :: Int -> DescribeChangeSetResponse
newtype ChangeStatus
ChangeStatus' :: Text -> ChangeStatus
[fromChangeStatus] :: ChangeStatus -> Text
pattern ChangeStatus_APPLYING :: ChangeStatus
pattern ChangeStatus_CANCELLED :: ChangeStatus
pattern ChangeStatus_FAILED :: ChangeStatus
pattern ChangeStatus_PREPARING :: ChangeStatus
pattern ChangeStatus_SUCCEEDED :: ChangeStatus
newtype FailureCode
FailureCode' :: Text -> FailureCode
[fromFailureCode] :: FailureCode -> Text
pattern FailureCode_CLIENT_ERROR :: FailureCode
pattern FailureCode_SERVER_FAULT :: FailureCode
newtype SortOrder
SortOrder' :: Text -> SortOrder
[fromSortOrder] :: SortOrder -> Text
pattern SortOrder_ASCENDING :: SortOrder
pattern SortOrder_DESCENDING :: SortOrder

-- | An object that contains the <tt>ChangeType</tt>, <tt>Details</tt>, and
--   <tt>Entity</tt>.
--   
--   <i>See:</i> <a>newChange</a> smart constructor.
data Change
Change' :: Maybe Text -> Text -> Entity -> Text -> Change

-- | Create a value of <a>Change</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:changeName:Change'</a>, <a>change_changeName</a> - Optional
--   name for the change.
--   
--   <a>$sel:changeType:Change'</a>, <a>change_changeType</a> - Change
--   types are single string values that describe your intention for the
--   change. Each change type is unique for each <tt>EntityType</tt>
--   provided in the change's scope.
--   
--   <a>$sel:entity:Change'</a>, <a>change_entity</a> - The entity to be
--   changed.
--   
--   <a>$sel:details:Change'</a>, <a>change_details</a> - This object
--   contains details specific to the change type of the requested change.
newChange :: Text -> Entity -> Text -> Change

-- | A summary of a change set returned in a list of change sets when the
--   <tt>ListChangeSets</tt> action is called.
--   
--   <i>See:</i> <a>newChangeSetSummaryListItem</a> smart constructor.
data ChangeSetSummaryListItem
ChangeSetSummaryListItem' :: Maybe ChangeStatus -> Maybe [Text] -> Maybe Text -> Maybe FailureCode -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> ChangeSetSummaryListItem

-- | Create a value of <a>ChangeSetSummaryListItem</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:ChangeSetSummaryListItem'</a>,
--   <a>changeSetSummaryListItem_status</a> - The current status of the
--   change set.
--   
--   <a>$sel:entityIdList:ChangeSetSummaryListItem'</a>,
--   <a>changeSetSummaryListItem_entityIdList</a> - This object is a list
--   of entity IDs (string) that are a part of a change set. The entity ID
--   list is a maximum of 20 entities. It must contain at least one entity.
--   
--   <a>$sel:startTime:ChangeSetSummaryListItem'</a>,
--   <a>changeSetSummaryListItem_startTime</a> - The time, in ISO 8601
--   format (2018-02-27T13:45:22Z), when the change set was started.
--   
--   <a>$sel:failureCode:ChangeSetSummaryListItem'</a>,
--   <a>changeSetSummaryListItem_failureCode</a> - Returned if the change
--   set is in <tt>FAILED</tt> status. Can be either <tt>CLIENT_ERROR</tt>,
--   which means that there are issues with the request (see the
--   <tt>ErrorDetailList</tt> of <tt>DescribeChangeSet</tt>), or
--   <tt>SERVER_FAULT</tt>, which means that there is a problem in the
--   system, and you should retry your request.
--   
--   <a>$sel:changeSetName:ChangeSetSummaryListItem'</a>,
--   <a>changeSetSummaryListItem_changeSetName</a> - The non-unique name
--   for the change set.
--   
--   <a>$sel:changeSetId:ChangeSetSummaryListItem'</a>,
--   <a>changeSetSummaryListItem_changeSetId</a> - The unique identifier
--   for a change set.
--   
--   <a>$sel:endTime:ChangeSetSummaryListItem'</a>,
--   <a>changeSetSummaryListItem_endTime</a> - The time, in ISO 8601 format
--   (2018-02-27T13:45:22Z), when the change set was finished.
--   
--   <a>$sel:changeSetArn:ChangeSetSummaryListItem'</a>,
--   <a>changeSetSummaryListItem_changeSetArn</a> - The ARN associated with
--   the unique identifier for the change set referenced in this request.
newChangeSetSummaryListItem :: ChangeSetSummaryListItem

-- | This object is a container for common summary information about the
--   change. The summary doesn't contain the whole change structure.
--   
--   <i>See:</i> <a>newChangeSummary</a> smart constructor.
data ChangeSummary
ChangeSummary' :: Maybe Text -> Maybe Text -> Maybe [ErrorDetail] -> Maybe Entity -> Maybe Text -> ChangeSummary

-- | Create a value of <a>ChangeSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:changeName:ChangeSummary'</a>, <a>changeSummary_changeName</a>
--   - Optional name for the change.
--   
--   <a>$sel:details:ChangeSummary'</a>, <a>changeSummary_details</a> -
--   This object contains details specific to the change type of the
--   requested change.
--   
--   <a>$sel:errorDetailList:ChangeSummary'</a>,
--   <a>changeSummary_errorDetailList</a> - An array of
--   <tt>ErrorDetail</tt> objects associated with the change.
--   
--   <a>$sel:entity:ChangeSummary'</a>, <a>changeSummary_entity</a> - The
--   entity to be changed.
--   
--   <a>$sel:changeType:ChangeSummary'</a>, <a>changeSummary_changeType</a>
--   - The type of the change.
newChangeSummary :: ChangeSummary

-- | An entity contains data that describes your product, its supported
--   features, and how it can be used or launched by your customer.
--   
--   <i>See:</i> <a>newEntity</a> smart constructor.
data Entity
Entity' :: Maybe Text -> Text -> Entity

-- | Create a value of <a>Entity</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:identifier:Entity'</a>, <a>entity_identifier</a> - The
--   identifier for the entity.
--   
--   <a>$sel:type':Entity'</a>, <a>entity_type</a> - The type of entity.
newEntity :: Text -> Entity

-- | This object is a container for common summary information about the
--   entity. The summary doesn't contain the whole entity structure, but it
--   does contain information common across all entities.
--   
--   <i>See:</i> <a>newEntitySummary</a> smart constructor.
data EntitySummary
EntitySummary' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> EntitySummary

-- | Create a value of <a>EntitySummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lastModifiedDate:EntitySummary'</a>,
--   <a>entitySummary_lastModifiedDate</a> - The last time the entity was
--   published, using ISO 8601 format (2018-02-27T13:45:22Z).
--   
--   <a>$sel:entityType:EntitySummary'</a>, <a>entitySummary_entityType</a>
--   - The type of the entity.
--   
--   <a>$sel:visibility:EntitySummary'</a>, <a>entitySummary_visibility</a>
--   - The visibility status of the entity to buyers. This value can be
--   <tt>Public</tt> (everyone can view the entity), <tt>Limited</tt> (the
--   entity is visible to limited accounts only), or <tt>Restricted</tt>
--   (the entity was published and then unpublished and only existing
--   buyers can view it).
--   
--   <a>$sel:name:EntitySummary'</a>, <a>entitySummary_name</a> - The name
--   for the entity. This value is not unique. It is defined by the seller.
--   
--   <a>$sel:entityId:EntitySummary'</a>, <a>entitySummary_entityId</a> -
--   The unique identifier for the entity.
--   
--   <a>$sel:entityArn:EntitySummary'</a>, <a>entitySummary_entityArn</a> -
--   The ARN associated with the unique identifier for the entity.
newEntitySummary :: EntitySummary

-- | Details about the error.
--   
--   <i>See:</i> <a>newErrorDetail</a> smart constructor.
data ErrorDetail
ErrorDetail' :: Maybe Text -> Maybe Text -> ErrorDetail

-- | Create a value of <a>ErrorDetail</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:errorCode:ErrorDetail'</a>, <a>errorDetail_errorCode</a> - The
--   error code that identifies the type of error.
--   
--   <a>$sel:errorMessage:ErrorDetail'</a>, <a>errorDetail_errorMessage</a>
--   - The message for the error.
newErrorDetail :: ErrorDetail

-- | A filter object, used to optionally filter results from calls to the
--   <tt>ListEntities</tt> and <tt>ListChangeSets</tt> actions.
--   
--   <i>See:</i> <a>newFilter</a> smart constructor.
data Filter
Filter' :: Maybe (NonEmpty Text) -> Maybe Text -> Filter

-- | Create a value of <a>Filter</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:valueList:Filter'</a>, <a>filter_valueList</a> -
--   <tt>ListEntities</tt> - This is a list of unique <tt>EntityId</tt>s.
--   
--   <tt>ListChangeSets</tt> - The supported filter names and associated
--   <tt>ValueList</tt>s is as follows:
--   
--   <ul>
--   <li><tt>ChangeSetName</tt> - The supported <tt>ValueList</tt> is a
--   list of non-unique <tt>ChangeSetName</tt>s. These are defined when you
--   call the <tt>StartChangeSet</tt> action.</li>
--   <li><tt>Status</tt> - The supported <tt>ValueList</tt> is a list of
--   statuses for all change set requests.</li>
--   <li><tt>EntityId</tt> - The supported <tt>ValueList</tt> is a list of
--   unique <tt>EntityId</tt>s.</li>
--   <li><tt>BeforeStartTime</tt> - The supported <tt>ValueList</tt> is a
--   list of all change sets that started before the filter value.</li>
--   <li><tt>AfterStartTime</tt> - The supported <tt>ValueList</tt> is a
--   list of all change sets that started after the filter value.</li>
--   <li><tt>BeforeEndTime</tt> - The supported <tt>ValueList</tt> is a
--   list of all change sets that ended before the filter value.</li>
--   <li><tt>AfterEndTime</tt> - The supported <tt>ValueList</tt> is a list
--   of all change sets that ended after the filter value.</li>
--   </ul>
--   
--   <a>$sel:name:Filter'</a>, <a>filter_name</a> - For
--   <tt>ListEntities</tt>, the supported value for this is an
--   <tt>EntityId</tt>.
--   
--   For <tt>ListChangeSets</tt>, the supported values are as follows:
newFilter :: Filter

-- | An object that contains two attributes, <tt>SortBy</tt> and
--   <tt>SortOrder</tt>.
--   
--   <i>See:</i> <a>newSort</a> smart constructor.
data Sort
Sort' :: Maybe SortOrder -> Maybe Text -> Sort

-- | Create a value of <a>Sort</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sortOrder:Sort'</a>, <a>sort_sortOrder</a> - The sorting
--   order. Can be <tt>ASCENDING</tt> or <tt>DESCENDING</tt>. The default
--   value is <tt>DESCENDING</tt>.
--   
--   <a>$sel:sortBy:Sort'</a>, <a>sort_sortBy</a> - For
--   <tt>ListEntities</tt>, supported attributes include
--   <tt>LastModifiedDate</tt> (default), <tt>Visibility</tt>,
--   <tt>EntityId</tt>, and <tt>Name</tt>.
--   
--   For <tt>ListChangeSets</tt>, supported attributes include
--   <tt>StartTime</tt> and <tt>EndTime</tt>.
newSort :: Sort
