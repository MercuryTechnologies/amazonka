-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/

@package libZSservicesZSamazonka-iotevents-dataZSamazonka-iotevents-data
@version 2.0


module Amazonka.IoTEventsData.Types.AcknowledgeActionConfiguration

-- | Contains the configuration information of an acknowledge action.
--   
--   <i>See:</i> <a>newAcknowledgeActionConfiguration</a> smart
--   constructor.
data AcknowledgeActionConfiguration
AcknowledgeActionConfiguration' :: Maybe Text -> AcknowledgeActionConfiguration

-- | The note that you can leave when you acknowledge the alarm.
[$sel:note:AcknowledgeActionConfiguration'] :: AcknowledgeActionConfiguration -> Maybe Text

-- | Create a value of <a>AcknowledgeActionConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:note:AcknowledgeActionConfiguration'</a>,
--   <a>acknowledgeActionConfiguration_note</a> - The note that you can
--   leave when you acknowledge the alarm.
newAcknowledgeActionConfiguration :: AcknowledgeActionConfiguration

-- | The note that you can leave when you acknowledge the alarm.
acknowledgeActionConfiguration_note :: Lens' AcknowledgeActionConfiguration (Maybe Text)
instance GHC.Generics.Generic Amazonka.IoTEventsData.Types.AcknowledgeActionConfiguration.AcknowledgeActionConfiguration
instance GHC.Show.Show Amazonka.IoTEventsData.Types.AcknowledgeActionConfiguration.AcknowledgeActionConfiguration
instance GHC.Read.Read Amazonka.IoTEventsData.Types.AcknowledgeActionConfiguration.AcknowledgeActionConfiguration
instance GHC.Classes.Eq Amazonka.IoTEventsData.Types.AcknowledgeActionConfiguration.AcknowledgeActionConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTEventsData.Types.AcknowledgeActionConfiguration.AcknowledgeActionConfiguration
instance Data.Hashable.Class.Hashable Amazonka.IoTEventsData.Types.AcknowledgeActionConfiguration.AcknowledgeActionConfiguration
instance Control.DeepSeq.NFData Amazonka.IoTEventsData.Types.AcknowledgeActionConfiguration.AcknowledgeActionConfiguration


module Amazonka.IoTEventsData.Types.AcknowledgeAlarmActionRequest

-- | Information needed to acknowledge the alarm.
--   
--   <i>See:</i> <a>newAcknowledgeAlarmActionRequest</a> smart constructor.
data AcknowledgeAlarmActionRequest
AcknowledgeAlarmActionRequest' :: Maybe Text -> Maybe Text -> Text -> Text -> AcknowledgeAlarmActionRequest

-- | The value of the key used as a filter to select only the alarms
--   associated with the <a>key</a>.
[$sel:keyValue:AcknowledgeAlarmActionRequest'] :: AcknowledgeAlarmActionRequest -> Maybe Text

-- | The note that you can leave when you acknowledge the alarm.
[$sel:note:AcknowledgeAlarmActionRequest'] :: AcknowledgeAlarmActionRequest -> Maybe Text

-- | The request ID. Each ID must be unique within each batch.
[$sel:requestId:AcknowledgeAlarmActionRequest'] :: AcknowledgeAlarmActionRequest -> Text

-- | The name of the alarm model.
[$sel:alarmModelName:AcknowledgeAlarmActionRequest'] :: AcknowledgeAlarmActionRequest -> Text

-- | Create a value of <a>AcknowledgeAlarmActionRequest</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:keyValue:AcknowledgeAlarmActionRequest'</a>,
--   <a>acknowledgeAlarmActionRequest_keyValue</a> - The value of the key
--   used as a filter to select only the alarms associated with the
--   <a>key</a>.
--   
--   <a>$sel:note:AcknowledgeAlarmActionRequest'</a>,
--   <a>acknowledgeAlarmActionRequest_note</a> - The note that you can
--   leave when you acknowledge the alarm.
--   
--   <a>$sel:requestId:AcknowledgeAlarmActionRequest'</a>,
--   <a>acknowledgeAlarmActionRequest_requestId</a> - The request ID. Each
--   ID must be unique within each batch.
--   
--   <a>$sel:alarmModelName:AcknowledgeAlarmActionRequest'</a>,
--   <a>acknowledgeAlarmActionRequest_alarmModelName</a> - The name of the
--   alarm model.
newAcknowledgeAlarmActionRequest :: Text -> Text -> AcknowledgeAlarmActionRequest

-- | The value of the key used as a filter to select only the alarms
--   associated with the <a>key</a>.
acknowledgeAlarmActionRequest_keyValue :: Lens' AcknowledgeAlarmActionRequest (Maybe Text)

-- | The note that you can leave when you acknowledge the alarm.
acknowledgeAlarmActionRequest_note :: Lens' AcknowledgeAlarmActionRequest (Maybe Text)

-- | The request ID. Each ID must be unique within each batch.
acknowledgeAlarmActionRequest_requestId :: Lens' AcknowledgeAlarmActionRequest Text

-- | The name of the alarm model.
acknowledgeAlarmActionRequest_alarmModelName :: Lens' AcknowledgeAlarmActionRequest Text
instance GHC.Generics.Generic Amazonka.IoTEventsData.Types.AcknowledgeAlarmActionRequest.AcknowledgeAlarmActionRequest
instance GHC.Show.Show Amazonka.IoTEventsData.Types.AcknowledgeAlarmActionRequest.AcknowledgeAlarmActionRequest
instance GHC.Read.Read Amazonka.IoTEventsData.Types.AcknowledgeAlarmActionRequest.AcknowledgeAlarmActionRequest
instance GHC.Classes.Eq Amazonka.IoTEventsData.Types.AcknowledgeAlarmActionRequest.AcknowledgeAlarmActionRequest
instance Data.Hashable.Class.Hashable Amazonka.IoTEventsData.Types.AcknowledgeAlarmActionRequest.AcknowledgeAlarmActionRequest
instance Control.DeepSeq.NFData Amazonka.IoTEventsData.Types.AcknowledgeAlarmActionRequest.AcknowledgeAlarmActionRequest
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTEventsData.Types.AcknowledgeAlarmActionRequest.AcknowledgeAlarmActionRequest


module Amazonka.IoTEventsData.Types.AlarmStateName
newtype AlarmStateName
AlarmStateName' :: Text -> AlarmStateName
[fromAlarmStateName] :: AlarmStateName -> Text
pattern AlarmStateName_ACKNOWLEDGED :: AlarmStateName
pattern AlarmStateName_ACTIVE :: AlarmStateName
pattern AlarmStateName_DISABLED :: AlarmStateName
pattern AlarmStateName_LATCHED :: AlarmStateName
pattern AlarmStateName_NORMAL :: AlarmStateName
pattern AlarmStateName_SNOOZE_DISABLED :: AlarmStateName
instance Amazonka.Data.XML.ToXML Amazonka.IoTEventsData.Types.AlarmStateName.AlarmStateName
instance Amazonka.Data.XML.FromXML Amazonka.IoTEventsData.Types.AlarmStateName.AlarmStateName
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.IoTEventsData.Types.AlarmStateName.AlarmStateName
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTEventsData.Types.AlarmStateName.AlarmStateName
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.IoTEventsData.Types.AlarmStateName.AlarmStateName
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTEventsData.Types.AlarmStateName.AlarmStateName
instance Amazonka.Data.Query.ToQuery Amazonka.IoTEventsData.Types.AlarmStateName.AlarmStateName
instance Amazonka.Data.Headers.ToHeader Amazonka.IoTEventsData.Types.AlarmStateName.AlarmStateName
instance Amazonka.Data.Log.ToLog Amazonka.IoTEventsData.Types.AlarmStateName.AlarmStateName
instance Amazonka.Data.ByteString.ToByteString Amazonka.IoTEventsData.Types.AlarmStateName.AlarmStateName
instance Amazonka.Data.Text.ToText Amazonka.IoTEventsData.Types.AlarmStateName.AlarmStateName
instance Amazonka.Data.Text.FromText Amazonka.IoTEventsData.Types.AlarmStateName.AlarmStateName
instance Control.DeepSeq.NFData Amazonka.IoTEventsData.Types.AlarmStateName.AlarmStateName
instance Data.Hashable.Class.Hashable Amazonka.IoTEventsData.Types.AlarmStateName.AlarmStateName
instance GHC.Generics.Generic Amazonka.IoTEventsData.Types.AlarmStateName.AlarmStateName
instance GHC.Classes.Ord Amazonka.IoTEventsData.Types.AlarmStateName.AlarmStateName
instance GHC.Classes.Eq Amazonka.IoTEventsData.Types.AlarmStateName.AlarmStateName
instance GHC.Read.Read Amazonka.IoTEventsData.Types.AlarmStateName.AlarmStateName
instance GHC.Show.Show Amazonka.IoTEventsData.Types.AlarmStateName.AlarmStateName


module Amazonka.IoTEventsData.Types.AlarmSummary

-- | Contains a summary of an alarm.
--   
--   <i>See:</i> <a>newAlarmSummary</a> smart constructor.
data AlarmSummary
AlarmSummary' :: Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe AlarmStateName -> Maybe POSIX -> Maybe Text -> AlarmSummary

-- | The value of the key used as a filter to select only the alarms
--   associated with the <a>key</a>.
[$sel:keyValue:AlarmSummary'] :: AlarmSummary -> Maybe Text

-- | The time the alarm was created, in the Unix epoch format.
[$sel:creationTime:AlarmSummary'] :: AlarmSummary -> Maybe POSIX

-- | The name of the alarm model.
[$sel:alarmModelName:AlarmSummary'] :: AlarmSummary -> Maybe Text

-- | The name of the alarm state. The state name can be one of the
--   following values:
--   
--   <ul>
--   <li><tt>DISABLED</tt> - When the alarm is in the <tt>DISABLED</tt>
--   state, it isn't ready to evaluate data. To enable the alarm, you must
--   change the alarm to the <tt>NORMAL</tt> state.</li>
--   <li><tt>NORMAL</tt> - When the alarm is in the <tt>NORMAL</tt> state,
--   it's ready to evaluate data.</li>
--   <li><tt>ACTIVE</tt> - If the alarm is in the <tt>ACTIVE</tt> state,
--   the alarm is invoked.</li>
--   <li><tt>ACKNOWLEDGED</tt> - When the alarm is in the
--   <tt>ACKNOWLEDGED</tt> state, the alarm was invoked and you
--   acknowledged the alarm.</li>
--   <li><tt>SNOOZE_DISABLED</tt> - When the alarm is in the
--   <tt>SNOOZE_DISABLED</tt> state, the alarm is disabled for a specified
--   period of time. After the snooze time, the alarm automatically changes
--   to the <tt>NORMAL</tt> state.</li>
--   <li><tt>LATCHED</tt> - When the alarm is in the <tt>LATCHED</tt>
--   state, the alarm was invoked. However, the data that the alarm is
--   currently evaluating is within the specified range. To change the
--   alarm to the <tt>NORMAL</tt> state, you must acknowledge the
--   alarm.</li>
--   </ul>
[$sel:stateName:AlarmSummary'] :: AlarmSummary -> Maybe AlarmStateName

-- | The time the alarm was last updated, in the Unix epoch format.
[$sel:lastUpdateTime:AlarmSummary'] :: AlarmSummary -> Maybe POSIX

-- | The version of the alarm model.
[$sel:alarmModelVersion:AlarmSummary'] :: AlarmSummary -> Maybe Text

-- | Create a value of <a>AlarmSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:keyValue:AlarmSummary'</a>, <a>alarmSummary_keyValue</a> - The
--   value of the key used as a filter to select only the alarms associated
--   with the <a>key</a>.
--   
--   <a>$sel:creationTime:AlarmSummary'</a>,
--   <a>alarmSummary_creationTime</a> - The time the alarm was created, in
--   the Unix epoch format.
--   
--   <a>$sel:alarmModelName:AlarmSummary'</a>,
--   <a>alarmSummary_alarmModelName</a> - The name of the alarm model.
--   
--   <a>$sel:stateName:AlarmSummary'</a>, <a>alarmSummary_stateName</a> -
--   The name of the alarm state. The state name can be one of the
--   following values:
--   
--   <ul>
--   <li><tt>DISABLED</tt> - When the alarm is in the <tt>DISABLED</tt>
--   state, it isn't ready to evaluate data. To enable the alarm, you must
--   change the alarm to the <tt>NORMAL</tt> state.</li>
--   <li><tt>NORMAL</tt> - When the alarm is in the <tt>NORMAL</tt> state,
--   it's ready to evaluate data.</li>
--   <li><tt>ACTIVE</tt> - If the alarm is in the <tt>ACTIVE</tt> state,
--   the alarm is invoked.</li>
--   <li><tt>ACKNOWLEDGED</tt> - When the alarm is in the
--   <tt>ACKNOWLEDGED</tt> state, the alarm was invoked and you
--   acknowledged the alarm.</li>
--   <li><tt>SNOOZE_DISABLED</tt> - When the alarm is in the
--   <tt>SNOOZE_DISABLED</tt> state, the alarm is disabled for a specified
--   period of time. After the snooze time, the alarm automatically changes
--   to the <tt>NORMAL</tt> state.</li>
--   <li><tt>LATCHED</tt> - When the alarm is in the <tt>LATCHED</tt>
--   state, the alarm was invoked. However, the data that the alarm is
--   currently evaluating is within the specified range. To change the
--   alarm to the <tt>NORMAL</tt> state, you must acknowledge the
--   alarm.</li>
--   </ul>
--   
--   <a>$sel:lastUpdateTime:AlarmSummary'</a>,
--   <a>alarmSummary_lastUpdateTime</a> - The time the alarm was last
--   updated, in the Unix epoch format.
--   
--   <a>$sel:alarmModelVersion:AlarmSummary'</a>,
--   <a>alarmSummary_alarmModelVersion</a> - The version of the alarm
--   model.
newAlarmSummary :: AlarmSummary

-- | The value of the key used as a filter to select only the alarms
--   associated with the <a>key</a>.
alarmSummary_keyValue :: Lens' AlarmSummary (Maybe Text)

-- | The time the alarm was created, in the Unix epoch format.
alarmSummary_creationTime :: Lens' AlarmSummary (Maybe UTCTime)

-- | The name of the alarm model.
alarmSummary_alarmModelName :: Lens' AlarmSummary (Maybe Text)

-- | The name of the alarm state. The state name can be one of the
--   following values:
--   
--   <ul>
--   <li><tt>DISABLED</tt> - When the alarm is in the <tt>DISABLED</tt>
--   state, it isn't ready to evaluate data. To enable the alarm, you must
--   change the alarm to the <tt>NORMAL</tt> state.</li>
--   <li><tt>NORMAL</tt> - When the alarm is in the <tt>NORMAL</tt> state,
--   it's ready to evaluate data.</li>
--   <li><tt>ACTIVE</tt> - If the alarm is in the <tt>ACTIVE</tt> state,
--   the alarm is invoked.</li>
--   <li><tt>ACKNOWLEDGED</tt> - When the alarm is in the
--   <tt>ACKNOWLEDGED</tt> state, the alarm was invoked and you
--   acknowledged the alarm.</li>
--   <li><tt>SNOOZE_DISABLED</tt> - When the alarm is in the
--   <tt>SNOOZE_DISABLED</tt> state, the alarm is disabled for a specified
--   period of time. After the snooze time, the alarm automatically changes
--   to the <tt>NORMAL</tt> state.</li>
--   <li><tt>LATCHED</tt> - When the alarm is in the <tt>LATCHED</tt>
--   state, the alarm was invoked. However, the data that the alarm is
--   currently evaluating is within the specified range. To change the
--   alarm to the <tt>NORMAL</tt> state, you must acknowledge the
--   alarm.</li>
--   </ul>
alarmSummary_stateName :: Lens' AlarmSummary (Maybe AlarmStateName)

-- | The time the alarm was last updated, in the Unix epoch format.
alarmSummary_lastUpdateTime :: Lens' AlarmSummary (Maybe UTCTime)

-- | The version of the alarm model.
alarmSummary_alarmModelVersion :: Lens' AlarmSummary (Maybe Text)
instance GHC.Generics.Generic Amazonka.IoTEventsData.Types.AlarmSummary.AlarmSummary
instance GHC.Show.Show Amazonka.IoTEventsData.Types.AlarmSummary.AlarmSummary
instance GHC.Read.Read Amazonka.IoTEventsData.Types.AlarmSummary.AlarmSummary
instance GHC.Classes.Eq Amazonka.IoTEventsData.Types.AlarmSummary.AlarmSummary
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTEventsData.Types.AlarmSummary.AlarmSummary
instance Data.Hashable.Class.Hashable Amazonka.IoTEventsData.Types.AlarmSummary.AlarmSummary
instance Control.DeepSeq.NFData Amazonka.IoTEventsData.Types.AlarmSummary.AlarmSummary


module Amazonka.IoTEventsData.Types.ComparisonOperator
newtype ComparisonOperator
ComparisonOperator' :: Text -> ComparisonOperator
[fromComparisonOperator] :: ComparisonOperator -> Text
pattern ComparisonOperator_EQUAL :: ComparisonOperator
pattern ComparisonOperator_GREATER :: ComparisonOperator
pattern ComparisonOperator_GREATER_OR_EQUAL :: ComparisonOperator
pattern ComparisonOperator_LESS :: ComparisonOperator
pattern ComparisonOperator_LESS_OR_EQUAL :: ComparisonOperator
pattern ComparisonOperator_NOT_EQUAL :: ComparisonOperator
instance Amazonka.Data.XML.ToXML Amazonka.IoTEventsData.Types.ComparisonOperator.ComparisonOperator
instance Amazonka.Data.XML.FromXML Amazonka.IoTEventsData.Types.ComparisonOperator.ComparisonOperator
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.IoTEventsData.Types.ComparisonOperator.ComparisonOperator
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTEventsData.Types.ComparisonOperator.ComparisonOperator
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.IoTEventsData.Types.ComparisonOperator.ComparisonOperator
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTEventsData.Types.ComparisonOperator.ComparisonOperator
instance Amazonka.Data.Query.ToQuery Amazonka.IoTEventsData.Types.ComparisonOperator.ComparisonOperator
instance Amazonka.Data.Headers.ToHeader Amazonka.IoTEventsData.Types.ComparisonOperator.ComparisonOperator
instance Amazonka.Data.Log.ToLog Amazonka.IoTEventsData.Types.ComparisonOperator.ComparisonOperator
instance Amazonka.Data.ByteString.ToByteString Amazonka.IoTEventsData.Types.ComparisonOperator.ComparisonOperator
instance Amazonka.Data.Text.ToText Amazonka.IoTEventsData.Types.ComparisonOperator.ComparisonOperator
instance Amazonka.Data.Text.FromText Amazonka.IoTEventsData.Types.ComparisonOperator.ComparisonOperator
instance Control.DeepSeq.NFData Amazonka.IoTEventsData.Types.ComparisonOperator.ComparisonOperator
instance Data.Hashable.Class.Hashable Amazonka.IoTEventsData.Types.ComparisonOperator.ComparisonOperator
instance GHC.Generics.Generic Amazonka.IoTEventsData.Types.ComparisonOperator.ComparisonOperator
instance GHC.Classes.Ord Amazonka.IoTEventsData.Types.ComparisonOperator.ComparisonOperator
instance GHC.Classes.Eq Amazonka.IoTEventsData.Types.ComparisonOperator.ComparisonOperator
instance GHC.Read.Read Amazonka.IoTEventsData.Types.ComparisonOperator.ComparisonOperator
instance GHC.Show.Show Amazonka.IoTEventsData.Types.ComparisonOperator.ComparisonOperator


module Amazonka.IoTEventsData.Types.CustomerActionName
newtype CustomerActionName
CustomerActionName' :: Text -> CustomerActionName
[fromCustomerActionName] :: CustomerActionName -> Text
pattern CustomerActionName_ACKNOWLEDGE :: CustomerActionName
pattern CustomerActionName_DISABLE :: CustomerActionName
pattern CustomerActionName_ENABLE :: CustomerActionName
pattern CustomerActionName_RESET :: CustomerActionName
pattern CustomerActionName_SNOOZE :: CustomerActionName
instance Amazonka.Data.XML.ToXML Amazonka.IoTEventsData.Types.CustomerActionName.CustomerActionName
instance Amazonka.Data.XML.FromXML Amazonka.IoTEventsData.Types.CustomerActionName.CustomerActionName
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.IoTEventsData.Types.CustomerActionName.CustomerActionName
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTEventsData.Types.CustomerActionName.CustomerActionName
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.IoTEventsData.Types.CustomerActionName.CustomerActionName
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTEventsData.Types.CustomerActionName.CustomerActionName
instance Amazonka.Data.Query.ToQuery Amazonka.IoTEventsData.Types.CustomerActionName.CustomerActionName
instance Amazonka.Data.Headers.ToHeader Amazonka.IoTEventsData.Types.CustomerActionName.CustomerActionName
instance Amazonka.Data.Log.ToLog Amazonka.IoTEventsData.Types.CustomerActionName.CustomerActionName
instance Amazonka.Data.ByteString.ToByteString Amazonka.IoTEventsData.Types.CustomerActionName.CustomerActionName
instance Amazonka.Data.Text.ToText Amazonka.IoTEventsData.Types.CustomerActionName.CustomerActionName
instance Amazonka.Data.Text.FromText Amazonka.IoTEventsData.Types.CustomerActionName.CustomerActionName
instance Control.DeepSeq.NFData Amazonka.IoTEventsData.Types.CustomerActionName.CustomerActionName
instance Data.Hashable.Class.Hashable Amazonka.IoTEventsData.Types.CustomerActionName.CustomerActionName
instance GHC.Generics.Generic Amazonka.IoTEventsData.Types.CustomerActionName.CustomerActionName
instance GHC.Classes.Ord Amazonka.IoTEventsData.Types.CustomerActionName.CustomerActionName
instance GHC.Classes.Eq Amazonka.IoTEventsData.Types.CustomerActionName.CustomerActionName
instance GHC.Read.Read Amazonka.IoTEventsData.Types.CustomerActionName.CustomerActionName
instance GHC.Show.Show Amazonka.IoTEventsData.Types.CustomerActionName.CustomerActionName


module Amazonka.IoTEventsData.Types.DetectorStateSummary

-- | Information about the detector state.
--   
--   <i>See:</i> <a>newDetectorStateSummary</a> smart constructor.
data DetectorStateSummary
DetectorStateSummary' :: Maybe Text -> DetectorStateSummary

-- | The name of the state.
[$sel:stateName:DetectorStateSummary'] :: DetectorStateSummary -> Maybe Text

-- | Create a value of <a>DetectorStateSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:stateName:DetectorStateSummary'</a>,
--   <a>detectorStateSummary_stateName</a> - The name of the state.
newDetectorStateSummary :: DetectorStateSummary

-- | The name of the state.
detectorStateSummary_stateName :: Lens' DetectorStateSummary (Maybe Text)
instance GHC.Generics.Generic Amazonka.IoTEventsData.Types.DetectorStateSummary.DetectorStateSummary
instance GHC.Show.Show Amazonka.IoTEventsData.Types.DetectorStateSummary.DetectorStateSummary
instance GHC.Read.Read Amazonka.IoTEventsData.Types.DetectorStateSummary.DetectorStateSummary
instance GHC.Classes.Eq Amazonka.IoTEventsData.Types.DetectorStateSummary.DetectorStateSummary
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTEventsData.Types.DetectorStateSummary.DetectorStateSummary
instance Data.Hashable.Class.Hashable Amazonka.IoTEventsData.Types.DetectorStateSummary.DetectorStateSummary
instance Control.DeepSeq.NFData Amazonka.IoTEventsData.Types.DetectorStateSummary.DetectorStateSummary


module Amazonka.IoTEventsData.Types.DetectorSummary

-- | Information about the detector (instance).
--   
--   <i>See:</i> <a>newDetectorSummary</a> smart constructor.
data DetectorSummary
DetectorSummary' :: Maybe Text -> Maybe POSIX -> Maybe DetectorStateSummary -> Maybe Text -> Maybe Text -> Maybe POSIX -> DetectorSummary

-- | The value of the key (identifying the device or system) that caused
--   the creation of this detector (instance).
[$sel:keyValue:DetectorSummary'] :: DetectorSummary -> Maybe Text

-- | The time the detector (instance) was created.
[$sel:creationTime:DetectorSummary'] :: DetectorSummary -> Maybe POSIX

-- | The current state of the detector (instance).
[$sel:state:DetectorSummary'] :: DetectorSummary -> Maybe DetectorStateSummary

-- | The name of the detector model that created this detector (instance).
[$sel:detectorModelName:DetectorSummary'] :: DetectorSummary -> Maybe Text

-- | The version of the detector model that created this detector
--   (instance).
[$sel:detectorModelVersion:DetectorSummary'] :: DetectorSummary -> Maybe Text

-- | The time the detector (instance) was last updated.
[$sel:lastUpdateTime:DetectorSummary'] :: DetectorSummary -> Maybe POSIX

-- | Create a value of <a>DetectorSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:keyValue:DetectorSummary'</a>, <a>detectorSummary_keyValue</a>
--   - The value of the key (identifying the device or system) that caused
--   the creation of this detector (instance).
--   
--   <a>$sel:creationTime:DetectorSummary'</a>,
--   <a>detectorSummary_creationTime</a> - The time the detector (instance)
--   was created.
--   
--   <a>$sel:state:DetectorSummary'</a>, <a>detectorSummary_state</a> - The
--   current state of the detector (instance).
--   
--   <a>$sel:detectorModelName:DetectorSummary'</a>,
--   <a>detectorSummary_detectorModelName</a> - The name of the detector
--   model that created this detector (instance).
--   
--   <a>$sel:detectorModelVersion:DetectorSummary'</a>,
--   <a>detectorSummary_detectorModelVersion</a> - The version of the
--   detector model that created this detector (instance).
--   
--   <a>$sel:lastUpdateTime:DetectorSummary'</a>,
--   <a>detectorSummary_lastUpdateTime</a> - The time the detector
--   (instance) was last updated.
newDetectorSummary :: DetectorSummary

-- | The value of the key (identifying the device or system) that caused
--   the creation of this detector (instance).
detectorSummary_keyValue :: Lens' DetectorSummary (Maybe Text)

-- | The time the detector (instance) was created.
detectorSummary_creationTime :: Lens' DetectorSummary (Maybe UTCTime)

-- | The current state of the detector (instance).
detectorSummary_state :: Lens' DetectorSummary (Maybe DetectorStateSummary)

-- | The name of the detector model that created this detector (instance).
detectorSummary_detectorModelName :: Lens' DetectorSummary (Maybe Text)

-- | The version of the detector model that created this detector
--   (instance).
detectorSummary_detectorModelVersion :: Lens' DetectorSummary (Maybe Text)

-- | The time the detector (instance) was last updated.
detectorSummary_lastUpdateTime :: Lens' DetectorSummary (Maybe UTCTime)
instance GHC.Generics.Generic Amazonka.IoTEventsData.Types.DetectorSummary.DetectorSummary
instance GHC.Show.Show Amazonka.IoTEventsData.Types.DetectorSummary.DetectorSummary
instance GHC.Read.Read Amazonka.IoTEventsData.Types.DetectorSummary.DetectorSummary
instance GHC.Classes.Eq Amazonka.IoTEventsData.Types.DetectorSummary.DetectorSummary
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTEventsData.Types.DetectorSummary.DetectorSummary
instance Data.Hashable.Class.Hashable Amazonka.IoTEventsData.Types.DetectorSummary.DetectorSummary
instance Control.DeepSeq.NFData Amazonka.IoTEventsData.Types.DetectorSummary.DetectorSummary


module Amazonka.IoTEventsData.Types.DisableActionConfiguration

-- | Contains the configuration information of a disable action.
--   
--   <i>See:</i> <a>newDisableActionConfiguration</a> smart constructor.
data DisableActionConfiguration
DisableActionConfiguration' :: Maybe Text -> DisableActionConfiguration

-- | The note that you can leave when you disable the alarm.
[$sel:note:DisableActionConfiguration'] :: DisableActionConfiguration -> Maybe Text

-- | Create a value of <a>DisableActionConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:note:DisableActionConfiguration'</a>,
--   <a>disableActionConfiguration_note</a> - The note that you can leave
--   when you disable the alarm.
newDisableActionConfiguration :: DisableActionConfiguration

-- | The note that you can leave when you disable the alarm.
disableActionConfiguration_note :: Lens' DisableActionConfiguration (Maybe Text)
instance GHC.Generics.Generic Amazonka.IoTEventsData.Types.DisableActionConfiguration.DisableActionConfiguration
instance GHC.Show.Show Amazonka.IoTEventsData.Types.DisableActionConfiguration.DisableActionConfiguration
instance GHC.Read.Read Amazonka.IoTEventsData.Types.DisableActionConfiguration.DisableActionConfiguration
instance GHC.Classes.Eq Amazonka.IoTEventsData.Types.DisableActionConfiguration.DisableActionConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTEventsData.Types.DisableActionConfiguration.DisableActionConfiguration
instance Data.Hashable.Class.Hashable Amazonka.IoTEventsData.Types.DisableActionConfiguration.DisableActionConfiguration
instance Control.DeepSeq.NFData Amazonka.IoTEventsData.Types.DisableActionConfiguration.DisableActionConfiguration


module Amazonka.IoTEventsData.Types.DisableAlarmActionRequest

-- | Information used to disable the alarm.
--   
--   <i>See:</i> <a>newDisableAlarmActionRequest</a> smart constructor.
data DisableAlarmActionRequest
DisableAlarmActionRequest' :: Maybe Text -> Maybe Text -> Text -> Text -> DisableAlarmActionRequest

-- | The value of the key used as a filter to select only the alarms
--   associated with the <a>key</a>.
[$sel:keyValue:DisableAlarmActionRequest'] :: DisableAlarmActionRequest -> Maybe Text

-- | The note that you can leave when you disable the alarm.
[$sel:note:DisableAlarmActionRequest'] :: DisableAlarmActionRequest -> Maybe Text

-- | The request ID. Each ID must be unique within each batch.
[$sel:requestId:DisableAlarmActionRequest'] :: DisableAlarmActionRequest -> Text

-- | The name of the alarm model.
[$sel:alarmModelName:DisableAlarmActionRequest'] :: DisableAlarmActionRequest -> Text

-- | Create a value of <a>DisableAlarmActionRequest</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:keyValue:DisableAlarmActionRequest'</a>,
--   <a>disableAlarmActionRequest_keyValue</a> - The value of the key used
--   as a filter to select only the alarms associated with the <a>key</a>.
--   
--   <a>$sel:note:DisableAlarmActionRequest'</a>,
--   <a>disableAlarmActionRequest_note</a> - The note that you can leave
--   when you disable the alarm.
--   
--   <a>$sel:requestId:DisableAlarmActionRequest'</a>,
--   <a>disableAlarmActionRequest_requestId</a> - The request ID. Each ID
--   must be unique within each batch.
--   
--   <a>$sel:alarmModelName:DisableAlarmActionRequest'</a>,
--   <a>disableAlarmActionRequest_alarmModelName</a> - The name of the
--   alarm model.
newDisableAlarmActionRequest :: Text -> Text -> DisableAlarmActionRequest

-- | The value of the key used as a filter to select only the alarms
--   associated with the <a>key</a>.
disableAlarmActionRequest_keyValue :: Lens' DisableAlarmActionRequest (Maybe Text)

-- | The note that you can leave when you disable the alarm.
disableAlarmActionRequest_note :: Lens' DisableAlarmActionRequest (Maybe Text)

-- | The request ID. Each ID must be unique within each batch.
disableAlarmActionRequest_requestId :: Lens' DisableAlarmActionRequest Text

-- | The name of the alarm model.
disableAlarmActionRequest_alarmModelName :: Lens' DisableAlarmActionRequest Text
instance GHC.Generics.Generic Amazonka.IoTEventsData.Types.DisableAlarmActionRequest.DisableAlarmActionRequest
instance GHC.Show.Show Amazonka.IoTEventsData.Types.DisableAlarmActionRequest.DisableAlarmActionRequest
instance GHC.Read.Read Amazonka.IoTEventsData.Types.DisableAlarmActionRequest.DisableAlarmActionRequest
instance GHC.Classes.Eq Amazonka.IoTEventsData.Types.DisableAlarmActionRequest.DisableAlarmActionRequest
instance Data.Hashable.Class.Hashable Amazonka.IoTEventsData.Types.DisableAlarmActionRequest.DisableAlarmActionRequest
instance Control.DeepSeq.NFData Amazonka.IoTEventsData.Types.DisableAlarmActionRequest.DisableAlarmActionRequest
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTEventsData.Types.DisableAlarmActionRequest.DisableAlarmActionRequest


module Amazonka.IoTEventsData.Types.EnableActionConfiguration

-- | Contains the configuration information of an enable action.
--   
--   <i>See:</i> <a>newEnableActionConfiguration</a> smart constructor.
data EnableActionConfiguration
EnableActionConfiguration' :: Maybe Text -> EnableActionConfiguration

-- | The note that you can leave when you enable the alarm.
[$sel:note:EnableActionConfiguration'] :: EnableActionConfiguration -> Maybe Text

-- | Create a value of <a>EnableActionConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:note:EnableActionConfiguration'</a>,
--   <a>enableActionConfiguration_note</a> - The note that you can leave
--   when you enable the alarm.
newEnableActionConfiguration :: EnableActionConfiguration

-- | The note that you can leave when you enable the alarm.
enableActionConfiguration_note :: Lens' EnableActionConfiguration (Maybe Text)
instance GHC.Generics.Generic Amazonka.IoTEventsData.Types.EnableActionConfiguration.EnableActionConfiguration
instance GHC.Show.Show Amazonka.IoTEventsData.Types.EnableActionConfiguration.EnableActionConfiguration
instance GHC.Read.Read Amazonka.IoTEventsData.Types.EnableActionConfiguration.EnableActionConfiguration
instance GHC.Classes.Eq Amazonka.IoTEventsData.Types.EnableActionConfiguration.EnableActionConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTEventsData.Types.EnableActionConfiguration.EnableActionConfiguration
instance Data.Hashable.Class.Hashable Amazonka.IoTEventsData.Types.EnableActionConfiguration.EnableActionConfiguration
instance Control.DeepSeq.NFData Amazonka.IoTEventsData.Types.EnableActionConfiguration.EnableActionConfiguration


module Amazonka.IoTEventsData.Types.EnableAlarmActionRequest

-- | Information needed to enable the alarm.
--   
--   <i>See:</i> <a>newEnableAlarmActionRequest</a> smart constructor.
data EnableAlarmActionRequest
EnableAlarmActionRequest' :: Maybe Text -> Maybe Text -> Text -> Text -> EnableAlarmActionRequest

-- | The value of the key used as a filter to select only the alarms
--   associated with the <a>key</a>.
[$sel:keyValue:EnableAlarmActionRequest'] :: EnableAlarmActionRequest -> Maybe Text

-- | The note that you can leave when you enable the alarm.
[$sel:note:EnableAlarmActionRequest'] :: EnableAlarmActionRequest -> Maybe Text

-- | The request ID. Each ID must be unique within each batch.
[$sel:requestId:EnableAlarmActionRequest'] :: EnableAlarmActionRequest -> Text

-- | The name of the alarm model.
[$sel:alarmModelName:EnableAlarmActionRequest'] :: EnableAlarmActionRequest -> Text

-- | Create a value of <a>EnableAlarmActionRequest</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:keyValue:EnableAlarmActionRequest'</a>,
--   <a>enableAlarmActionRequest_keyValue</a> - The value of the key used
--   as a filter to select only the alarms associated with the <a>key</a>.
--   
--   <a>$sel:note:EnableAlarmActionRequest'</a>,
--   <a>enableAlarmActionRequest_note</a> - The note that you can leave
--   when you enable the alarm.
--   
--   <a>$sel:requestId:EnableAlarmActionRequest'</a>,
--   <a>enableAlarmActionRequest_requestId</a> - The request ID. Each ID
--   must be unique within each batch.
--   
--   <a>$sel:alarmModelName:EnableAlarmActionRequest'</a>,
--   <a>enableAlarmActionRequest_alarmModelName</a> - The name of the alarm
--   model.
newEnableAlarmActionRequest :: Text -> Text -> EnableAlarmActionRequest

-- | The value of the key used as a filter to select only the alarms
--   associated with the <a>key</a>.
enableAlarmActionRequest_keyValue :: Lens' EnableAlarmActionRequest (Maybe Text)

-- | The note that you can leave when you enable the alarm.
enableAlarmActionRequest_note :: Lens' EnableAlarmActionRequest (Maybe Text)

-- | The request ID. Each ID must be unique within each batch.
enableAlarmActionRequest_requestId :: Lens' EnableAlarmActionRequest Text

-- | The name of the alarm model.
enableAlarmActionRequest_alarmModelName :: Lens' EnableAlarmActionRequest Text
instance GHC.Generics.Generic Amazonka.IoTEventsData.Types.EnableAlarmActionRequest.EnableAlarmActionRequest
instance GHC.Show.Show Amazonka.IoTEventsData.Types.EnableAlarmActionRequest.EnableAlarmActionRequest
instance GHC.Read.Read Amazonka.IoTEventsData.Types.EnableAlarmActionRequest.EnableAlarmActionRequest
instance GHC.Classes.Eq Amazonka.IoTEventsData.Types.EnableAlarmActionRequest.EnableAlarmActionRequest
instance Data.Hashable.Class.Hashable Amazonka.IoTEventsData.Types.EnableAlarmActionRequest.EnableAlarmActionRequest
instance Control.DeepSeq.NFData Amazonka.IoTEventsData.Types.EnableAlarmActionRequest.EnableAlarmActionRequest
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTEventsData.Types.EnableAlarmActionRequest.EnableAlarmActionRequest


module Amazonka.IoTEventsData.Types.ErrorCode
newtype ErrorCode
ErrorCode' :: Text -> ErrorCode
[fromErrorCode] :: ErrorCode -> Text
pattern ErrorCode_InternalFailureException :: ErrorCode
pattern ErrorCode_InvalidRequestException :: ErrorCode
pattern ErrorCode_ResourceNotFoundException :: ErrorCode
pattern ErrorCode_ServiceUnavailableException :: ErrorCode
pattern ErrorCode_ThrottlingException :: ErrorCode
instance Amazonka.Data.XML.ToXML Amazonka.IoTEventsData.Types.ErrorCode.ErrorCode
instance Amazonka.Data.XML.FromXML Amazonka.IoTEventsData.Types.ErrorCode.ErrorCode
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.IoTEventsData.Types.ErrorCode.ErrorCode
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTEventsData.Types.ErrorCode.ErrorCode
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.IoTEventsData.Types.ErrorCode.ErrorCode
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTEventsData.Types.ErrorCode.ErrorCode
instance Amazonka.Data.Query.ToQuery Amazonka.IoTEventsData.Types.ErrorCode.ErrorCode
instance Amazonka.Data.Headers.ToHeader Amazonka.IoTEventsData.Types.ErrorCode.ErrorCode
instance Amazonka.Data.Log.ToLog Amazonka.IoTEventsData.Types.ErrorCode.ErrorCode
instance Amazonka.Data.ByteString.ToByteString Amazonka.IoTEventsData.Types.ErrorCode.ErrorCode
instance Amazonka.Data.Text.ToText Amazonka.IoTEventsData.Types.ErrorCode.ErrorCode
instance Amazonka.Data.Text.FromText Amazonka.IoTEventsData.Types.ErrorCode.ErrorCode
instance Control.DeepSeq.NFData Amazonka.IoTEventsData.Types.ErrorCode.ErrorCode
instance Data.Hashable.Class.Hashable Amazonka.IoTEventsData.Types.ErrorCode.ErrorCode
instance GHC.Generics.Generic Amazonka.IoTEventsData.Types.ErrorCode.ErrorCode
instance GHC.Classes.Ord Amazonka.IoTEventsData.Types.ErrorCode.ErrorCode
instance GHC.Classes.Eq Amazonka.IoTEventsData.Types.ErrorCode.ErrorCode
instance GHC.Read.Read Amazonka.IoTEventsData.Types.ErrorCode.ErrorCode
instance GHC.Show.Show Amazonka.IoTEventsData.Types.ErrorCode.ErrorCode


module Amazonka.IoTEventsData.Types.BatchUpdateDetectorErrorEntry

-- | Information about the error that occurred when attempting to update a
--   detector.
--   
--   <i>See:</i> <a>newBatchUpdateDetectorErrorEntry</a> smart constructor.
data BatchUpdateDetectorErrorEntry
BatchUpdateDetectorErrorEntry' :: Maybe ErrorCode -> Maybe Text -> Maybe Text -> BatchUpdateDetectorErrorEntry

-- | The error code.
[$sel:errorCode:BatchUpdateDetectorErrorEntry'] :: BatchUpdateDetectorErrorEntry -> Maybe ErrorCode

-- | A message that describes the error.
[$sel:errorMessage:BatchUpdateDetectorErrorEntry'] :: BatchUpdateDetectorErrorEntry -> Maybe Text

-- | The <tt>"messageId"</tt> of the update request that caused the error.
--   (The value of the <tt>"messageId"</tt> in the update request
--   <tt>"Detector"</tt> object.)
[$sel:messageId:BatchUpdateDetectorErrorEntry'] :: BatchUpdateDetectorErrorEntry -> Maybe Text

-- | Create a value of <a>BatchUpdateDetectorErrorEntry</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:errorCode:BatchUpdateDetectorErrorEntry'</a>,
--   <a>batchUpdateDetectorErrorEntry_errorCode</a> - The error code.
--   
--   <a>$sel:errorMessage:BatchUpdateDetectorErrorEntry'</a>,
--   <a>batchUpdateDetectorErrorEntry_errorMessage</a> - A message that
--   describes the error.
--   
--   <a>$sel:messageId:BatchUpdateDetectorErrorEntry'</a>,
--   <a>batchUpdateDetectorErrorEntry_messageId</a> - The
--   <tt>"messageId"</tt> of the update request that caused the error. (The
--   value of the <tt>"messageId"</tt> in the update request
--   <tt>"Detector"</tt> object.)
newBatchUpdateDetectorErrorEntry :: BatchUpdateDetectorErrorEntry

-- | The error code.
batchUpdateDetectorErrorEntry_errorCode :: Lens' BatchUpdateDetectorErrorEntry (Maybe ErrorCode)

-- | A message that describes the error.
batchUpdateDetectorErrorEntry_errorMessage :: Lens' BatchUpdateDetectorErrorEntry (Maybe Text)

-- | The <tt>"messageId"</tt> of the update request that caused the error.
--   (The value of the <tt>"messageId"</tt> in the update request
--   <tt>"Detector"</tt> object.)
batchUpdateDetectorErrorEntry_messageId :: Lens' BatchUpdateDetectorErrorEntry (Maybe Text)
instance GHC.Generics.Generic Amazonka.IoTEventsData.Types.BatchUpdateDetectorErrorEntry.BatchUpdateDetectorErrorEntry
instance GHC.Show.Show Amazonka.IoTEventsData.Types.BatchUpdateDetectorErrorEntry.BatchUpdateDetectorErrorEntry
instance GHC.Read.Read Amazonka.IoTEventsData.Types.BatchUpdateDetectorErrorEntry.BatchUpdateDetectorErrorEntry
instance GHC.Classes.Eq Amazonka.IoTEventsData.Types.BatchUpdateDetectorErrorEntry.BatchUpdateDetectorErrorEntry
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTEventsData.Types.BatchUpdateDetectorErrorEntry.BatchUpdateDetectorErrorEntry
instance Data.Hashable.Class.Hashable Amazonka.IoTEventsData.Types.BatchUpdateDetectorErrorEntry.BatchUpdateDetectorErrorEntry
instance Control.DeepSeq.NFData Amazonka.IoTEventsData.Types.BatchUpdateDetectorErrorEntry.BatchUpdateDetectorErrorEntry


module Amazonka.IoTEventsData.Types.BatchPutMessageErrorEntry

-- | Contains information about the errors encountered.
--   
--   <i>See:</i> <a>newBatchPutMessageErrorEntry</a> smart constructor.
data BatchPutMessageErrorEntry
BatchPutMessageErrorEntry' :: Maybe ErrorCode -> Maybe Text -> Maybe Text -> BatchPutMessageErrorEntry

-- | The error code.
[$sel:errorCode:BatchPutMessageErrorEntry'] :: BatchPutMessageErrorEntry -> Maybe ErrorCode

-- | A message that describes the error.
[$sel:errorMessage:BatchPutMessageErrorEntry'] :: BatchPutMessageErrorEntry -> Maybe Text

-- | The ID of the message that caused the error. (See the value
--   corresponding to the <tt>"messageId"</tt> key in the
--   <tt>"message"</tt> object.)
[$sel:messageId:BatchPutMessageErrorEntry'] :: BatchPutMessageErrorEntry -> Maybe Text

-- | Create a value of <a>BatchPutMessageErrorEntry</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:errorCode:BatchPutMessageErrorEntry'</a>,
--   <a>batchPutMessageErrorEntry_errorCode</a> - The error code.
--   
--   <a>$sel:errorMessage:BatchPutMessageErrorEntry'</a>,
--   <a>batchPutMessageErrorEntry_errorMessage</a> - A message that
--   describes the error.
--   
--   <a>$sel:messageId:BatchPutMessageErrorEntry'</a>,
--   <a>batchPutMessageErrorEntry_messageId</a> - The ID of the message
--   that caused the error. (See the value corresponding to the
--   <tt>"messageId"</tt> key in the <tt>"message"</tt> object.)
newBatchPutMessageErrorEntry :: BatchPutMessageErrorEntry

-- | The error code.
batchPutMessageErrorEntry_errorCode :: Lens' BatchPutMessageErrorEntry (Maybe ErrorCode)

-- | A message that describes the error.
batchPutMessageErrorEntry_errorMessage :: Lens' BatchPutMessageErrorEntry (Maybe Text)

-- | The ID of the message that caused the error. (See the value
--   corresponding to the <tt>"messageId"</tt> key in the
--   <tt>"message"</tt> object.)
batchPutMessageErrorEntry_messageId :: Lens' BatchPutMessageErrorEntry (Maybe Text)
instance GHC.Generics.Generic Amazonka.IoTEventsData.Types.BatchPutMessageErrorEntry.BatchPutMessageErrorEntry
instance GHC.Show.Show Amazonka.IoTEventsData.Types.BatchPutMessageErrorEntry.BatchPutMessageErrorEntry
instance GHC.Read.Read Amazonka.IoTEventsData.Types.BatchPutMessageErrorEntry.BatchPutMessageErrorEntry
instance GHC.Classes.Eq Amazonka.IoTEventsData.Types.BatchPutMessageErrorEntry.BatchPutMessageErrorEntry
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTEventsData.Types.BatchPutMessageErrorEntry.BatchPutMessageErrorEntry
instance Data.Hashable.Class.Hashable Amazonka.IoTEventsData.Types.BatchPutMessageErrorEntry.BatchPutMessageErrorEntry
instance Control.DeepSeq.NFData Amazonka.IoTEventsData.Types.BatchPutMessageErrorEntry.BatchPutMessageErrorEntry


module Amazonka.IoTEventsData.Types.BatchAlarmActionErrorEntry

-- | Contains error messages associated with one of the following requests:
--   
--   <ul>
--   <li><a>BatchAcknowledgeAlarm</a></li>
--   <li><a>BatchDisableAlarm</a></li>
--   <li><a>BatchEnableAlarm</a></li>
--   <li><a>BatchResetAlarm</a></li>
--   <li><a>BatchSnoozeAlarm</a></li>
--   </ul>
--   
--   <i>See:</i> <a>newBatchAlarmActionErrorEntry</a> smart constructor.
data BatchAlarmActionErrorEntry
BatchAlarmActionErrorEntry' :: Maybe Text -> Maybe ErrorCode -> Maybe Text -> BatchAlarmActionErrorEntry

-- | The request ID. Each ID must be unique within each batch.
[$sel:requestId:BatchAlarmActionErrorEntry'] :: BatchAlarmActionErrorEntry -> Maybe Text

-- | The error code.
[$sel:errorCode:BatchAlarmActionErrorEntry'] :: BatchAlarmActionErrorEntry -> Maybe ErrorCode

-- | A message that describes the error.
[$sel:errorMessage:BatchAlarmActionErrorEntry'] :: BatchAlarmActionErrorEntry -> Maybe Text

-- | Create a value of <a>BatchAlarmActionErrorEntry</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:requestId:BatchAlarmActionErrorEntry'</a>,
--   <a>batchAlarmActionErrorEntry_requestId</a> - The request ID. Each ID
--   must be unique within each batch.
--   
--   <a>$sel:errorCode:BatchAlarmActionErrorEntry'</a>,
--   <a>batchAlarmActionErrorEntry_errorCode</a> - The error code.
--   
--   <a>$sel:errorMessage:BatchAlarmActionErrorEntry'</a>,
--   <a>batchAlarmActionErrorEntry_errorMessage</a> - A message that
--   describes the error.
newBatchAlarmActionErrorEntry :: BatchAlarmActionErrorEntry

-- | The request ID. Each ID must be unique within each batch.
batchAlarmActionErrorEntry_requestId :: Lens' BatchAlarmActionErrorEntry (Maybe Text)

-- | The error code.
batchAlarmActionErrorEntry_errorCode :: Lens' BatchAlarmActionErrorEntry (Maybe ErrorCode)

-- | A message that describes the error.
batchAlarmActionErrorEntry_errorMessage :: Lens' BatchAlarmActionErrorEntry (Maybe Text)
instance GHC.Generics.Generic Amazonka.IoTEventsData.Types.BatchAlarmActionErrorEntry.BatchAlarmActionErrorEntry
instance GHC.Show.Show Amazonka.IoTEventsData.Types.BatchAlarmActionErrorEntry.BatchAlarmActionErrorEntry
instance GHC.Read.Read Amazonka.IoTEventsData.Types.BatchAlarmActionErrorEntry.BatchAlarmActionErrorEntry
instance GHC.Classes.Eq Amazonka.IoTEventsData.Types.BatchAlarmActionErrorEntry.BatchAlarmActionErrorEntry
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTEventsData.Types.BatchAlarmActionErrorEntry.BatchAlarmActionErrorEntry
instance Data.Hashable.Class.Hashable Amazonka.IoTEventsData.Types.BatchAlarmActionErrorEntry.BatchAlarmActionErrorEntry
instance Control.DeepSeq.NFData Amazonka.IoTEventsData.Types.BatchAlarmActionErrorEntry.BatchAlarmActionErrorEntry


module Amazonka.IoTEventsData.Types.EventType
newtype EventType
EventType' :: Text -> EventType
[fromEventType] :: EventType -> Text
pattern EventType_STATE_CHANGE :: EventType
instance Amazonka.Data.XML.ToXML Amazonka.IoTEventsData.Types.EventType.EventType
instance Amazonka.Data.XML.FromXML Amazonka.IoTEventsData.Types.EventType.EventType
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.IoTEventsData.Types.EventType.EventType
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTEventsData.Types.EventType.EventType
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.IoTEventsData.Types.EventType.EventType
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTEventsData.Types.EventType.EventType
instance Amazonka.Data.Query.ToQuery Amazonka.IoTEventsData.Types.EventType.EventType
instance Amazonka.Data.Headers.ToHeader Amazonka.IoTEventsData.Types.EventType.EventType
instance Amazonka.Data.Log.ToLog Amazonka.IoTEventsData.Types.EventType.EventType
instance Amazonka.Data.ByteString.ToByteString Amazonka.IoTEventsData.Types.EventType.EventType
instance Amazonka.Data.Text.ToText Amazonka.IoTEventsData.Types.EventType.EventType
instance Amazonka.Data.Text.FromText Amazonka.IoTEventsData.Types.EventType.EventType
instance Control.DeepSeq.NFData Amazonka.IoTEventsData.Types.EventType.EventType
instance Data.Hashable.Class.Hashable Amazonka.IoTEventsData.Types.EventType.EventType
instance GHC.Generics.Generic Amazonka.IoTEventsData.Types.EventType.EventType
instance GHC.Classes.Ord Amazonka.IoTEventsData.Types.EventType.EventType
instance GHC.Classes.Eq Amazonka.IoTEventsData.Types.EventType.EventType
instance GHC.Read.Read Amazonka.IoTEventsData.Types.EventType.EventType
instance GHC.Show.Show Amazonka.IoTEventsData.Types.EventType.EventType


module Amazonka.IoTEventsData.Types.ResetActionConfiguration

-- | Contains the configuration information of a reset action.
--   
--   <i>See:</i> <a>newResetActionConfiguration</a> smart constructor.
data ResetActionConfiguration
ResetActionConfiguration' :: Maybe Text -> ResetActionConfiguration

-- | The note that you can leave when you reset the alarm.
[$sel:note:ResetActionConfiguration'] :: ResetActionConfiguration -> Maybe Text

-- | Create a value of <a>ResetActionConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:note:ResetActionConfiguration'</a>,
--   <a>resetActionConfiguration_note</a> - The note that you can leave
--   when you reset the alarm.
newResetActionConfiguration :: ResetActionConfiguration

-- | The note that you can leave when you reset the alarm.
resetActionConfiguration_note :: Lens' ResetActionConfiguration (Maybe Text)
instance GHC.Generics.Generic Amazonka.IoTEventsData.Types.ResetActionConfiguration.ResetActionConfiguration
instance GHC.Show.Show Amazonka.IoTEventsData.Types.ResetActionConfiguration.ResetActionConfiguration
instance GHC.Read.Read Amazonka.IoTEventsData.Types.ResetActionConfiguration.ResetActionConfiguration
instance GHC.Classes.Eq Amazonka.IoTEventsData.Types.ResetActionConfiguration.ResetActionConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTEventsData.Types.ResetActionConfiguration.ResetActionConfiguration
instance Data.Hashable.Class.Hashable Amazonka.IoTEventsData.Types.ResetActionConfiguration.ResetActionConfiguration
instance Control.DeepSeq.NFData Amazonka.IoTEventsData.Types.ResetActionConfiguration.ResetActionConfiguration


module Amazonka.IoTEventsData.Types.ResetAlarmActionRequest

-- | Information needed to reset the alarm.
--   
--   <i>See:</i> <a>newResetAlarmActionRequest</a> smart constructor.
data ResetAlarmActionRequest
ResetAlarmActionRequest' :: Maybe Text -> Maybe Text -> Text -> Text -> ResetAlarmActionRequest

-- | The value of the key used as a filter to select only the alarms
--   associated with the <a>key</a>.
[$sel:keyValue:ResetAlarmActionRequest'] :: ResetAlarmActionRequest -> Maybe Text

-- | The note that you can leave when you reset the alarm.
[$sel:note:ResetAlarmActionRequest'] :: ResetAlarmActionRequest -> Maybe Text

-- | The request ID. Each ID must be unique within each batch.
[$sel:requestId:ResetAlarmActionRequest'] :: ResetAlarmActionRequest -> Text

-- | The name of the alarm model.
[$sel:alarmModelName:ResetAlarmActionRequest'] :: ResetAlarmActionRequest -> Text

-- | Create a value of <a>ResetAlarmActionRequest</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:keyValue:ResetAlarmActionRequest'</a>,
--   <a>resetAlarmActionRequest_keyValue</a> - The value of the key used as
--   a filter to select only the alarms associated with the <a>key</a>.
--   
--   <a>$sel:note:ResetAlarmActionRequest'</a>,
--   <a>resetAlarmActionRequest_note</a> - The note that you can leave when
--   you reset the alarm.
--   
--   <a>$sel:requestId:ResetAlarmActionRequest'</a>,
--   <a>resetAlarmActionRequest_requestId</a> - The request ID. Each ID
--   must be unique within each batch.
--   
--   <a>$sel:alarmModelName:ResetAlarmActionRequest'</a>,
--   <a>resetAlarmActionRequest_alarmModelName</a> - The name of the alarm
--   model.
newResetAlarmActionRequest :: Text -> Text -> ResetAlarmActionRequest

-- | The value of the key used as a filter to select only the alarms
--   associated with the <a>key</a>.
resetAlarmActionRequest_keyValue :: Lens' ResetAlarmActionRequest (Maybe Text)

-- | The note that you can leave when you reset the alarm.
resetAlarmActionRequest_note :: Lens' ResetAlarmActionRequest (Maybe Text)

-- | The request ID. Each ID must be unique within each batch.
resetAlarmActionRequest_requestId :: Lens' ResetAlarmActionRequest Text

-- | The name of the alarm model.
resetAlarmActionRequest_alarmModelName :: Lens' ResetAlarmActionRequest Text
instance GHC.Generics.Generic Amazonka.IoTEventsData.Types.ResetAlarmActionRequest.ResetAlarmActionRequest
instance GHC.Show.Show Amazonka.IoTEventsData.Types.ResetAlarmActionRequest.ResetAlarmActionRequest
instance GHC.Read.Read Amazonka.IoTEventsData.Types.ResetAlarmActionRequest.ResetAlarmActionRequest
instance GHC.Classes.Eq Amazonka.IoTEventsData.Types.ResetAlarmActionRequest.ResetAlarmActionRequest
instance Data.Hashable.Class.Hashable Amazonka.IoTEventsData.Types.ResetAlarmActionRequest.ResetAlarmActionRequest
instance Control.DeepSeq.NFData Amazonka.IoTEventsData.Types.ResetAlarmActionRequest.ResetAlarmActionRequest
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTEventsData.Types.ResetAlarmActionRequest.ResetAlarmActionRequest


module Amazonka.IoTEventsData.Types.SimpleRuleEvaluation

-- | Information needed to compare two values with a comparison operator.
--   
--   <i>See:</i> <a>newSimpleRuleEvaluation</a> smart constructor.
data SimpleRuleEvaluation
SimpleRuleEvaluation' :: Maybe Text -> Maybe Text -> Maybe ComparisonOperator -> SimpleRuleEvaluation

-- | The threshold value, on the right side of the comparison operator.
[$sel:thresholdValue:SimpleRuleEvaluation'] :: SimpleRuleEvaluation -> Maybe Text

-- | The value of the input property, on the left side of the comparison
--   operator.
[$sel:inputPropertyValue:SimpleRuleEvaluation'] :: SimpleRuleEvaluation -> Maybe Text

-- | The comparison operator.
[$sel:operator:SimpleRuleEvaluation'] :: SimpleRuleEvaluation -> Maybe ComparisonOperator

-- | Create a value of <a>SimpleRuleEvaluation</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:thresholdValue:SimpleRuleEvaluation'</a>,
--   <a>simpleRuleEvaluation_thresholdValue</a> - The threshold value, on
--   the right side of the comparison operator.
--   
--   <a>$sel:inputPropertyValue:SimpleRuleEvaluation'</a>,
--   <a>simpleRuleEvaluation_inputPropertyValue</a> - The value of the
--   input property, on the left side of the comparison operator.
--   
--   <a>$sel:operator:SimpleRuleEvaluation'</a>,
--   <a>simpleRuleEvaluation_operator</a> - The comparison operator.
newSimpleRuleEvaluation :: SimpleRuleEvaluation

-- | The threshold value, on the right side of the comparison operator.
simpleRuleEvaluation_thresholdValue :: Lens' SimpleRuleEvaluation (Maybe Text)

-- | The value of the input property, on the left side of the comparison
--   operator.
simpleRuleEvaluation_inputPropertyValue :: Lens' SimpleRuleEvaluation (Maybe Text)

-- | The comparison operator.
simpleRuleEvaluation_operator :: Lens' SimpleRuleEvaluation (Maybe ComparisonOperator)
instance GHC.Generics.Generic Amazonka.IoTEventsData.Types.SimpleRuleEvaluation.SimpleRuleEvaluation
instance GHC.Show.Show Amazonka.IoTEventsData.Types.SimpleRuleEvaluation.SimpleRuleEvaluation
instance GHC.Read.Read Amazonka.IoTEventsData.Types.SimpleRuleEvaluation.SimpleRuleEvaluation
instance GHC.Classes.Eq Amazonka.IoTEventsData.Types.SimpleRuleEvaluation.SimpleRuleEvaluation
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTEventsData.Types.SimpleRuleEvaluation.SimpleRuleEvaluation
instance Data.Hashable.Class.Hashable Amazonka.IoTEventsData.Types.SimpleRuleEvaluation.SimpleRuleEvaluation
instance Control.DeepSeq.NFData Amazonka.IoTEventsData.Types.SimpleRuleEvaluation.SimpleRuleEvaluation


module Amazonka.IoTEventsData.Types.RuleEvaluation

-- | Information needed to evaluate data.
--   
--   <i>See:</i> <a>newRuleEvaluation</a> smart constructor.
data RuleEvaluation
RuleEvaluation' :: Maybe SimpleRuleEvaluation -> RuleEvaluation

-- | Information needed to compare two values with a comparison operator.
[$sel:simpleRuleEvaluation:RuleEvaluation'] :: RuleEvaluation -> Maybe SimpleRuleEvaluation

-- | Create a value of <a>RuleEvaluation</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:simpleRuleEvaluation:RuleEvaluation'</a>,
--   <a>ruleEvaluation_simpleRuleEvaluation</a> - Information needed to
--   compare two values with a comparison operator.
newRuleEvaluation :: RuleEvaluation

-- | Information needed to compare two values with a comparison operator.
ruleEvaluation_simpleRuleEvaluation :: Lens' RuleEvaluation (Maybe SimpleRuleEvaluation)
instance GHC.Generics.Generic Amazonka.IoTEventsData.Types.RuleEvaluation.RuleEvaluation
instance GHC.Show.Show Amazonka.IoTEventsData.Types.RuleEvaluation.RuleEvaluation
instance GHC.Read.Read Amazonka.IoTEventsData.Types.RuleEvaluation.RuleEvaluation
instance GHC.Classes.Eq Amazonka.IoTEventsData.Types.RuleEvaluation.RuleEvaluation
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTEventsData.Types.RuleEvaluation.RuleEvaluation
instance Data.Hashable.Class.Hashable Amazonka.IoTEventsData.Types.RuleEvaluation.RuleEvaluation
instance Control.DeepSeq.NFData Amazonka.IoTEventsData.Types.RuleEvaluation.RuleEvaluation


module Amazonka.IoTEventsData.Types.SnoozeActionConfiguration

-- | Contains the configuration information of a snooze action.
--   
--   <i>See:</i> <a>newSnoozeActionConfiguration</a> smart constructor.
data SnoozeActionConfiguration
SnoozeActionConfiguration' :: Maybe Text -> Maybe Int -> SnoozeActionConfiguration

-- | The note that you can leave when you snooze the alarm.
[$sel:note:SnoozeActionConfiguration'] :: SnoozeActionConfiguration -> Maybe Text

-- | The snooze time in seconds. The alarm automatically changes to the
--   <tt>NORMAL</tt> state after this duration.
[$sel:snoozeDuration:SnoozeActionConfiguration'] :: SnoozeActionConfiguration -> Maybe Int

-- | Create a value of <a>SnoozeActionConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:note:SnoozeActionConfiguration'</a>,
--   <a>snoozeActionConfiguration_note</a> - The note that you can leave
--   when you snooze the alarm.
--   
--   <a>$sel:snoozeDuration:SnoozeActionConfiguration'</a>,
--   <a>snoozeActionConfiguration_snoozeDuration</a> - The snooze time in
--   seconds. The alarm automatically changes to the <tt>NORMAL</tt> state
--   after this duration.
newSnoozeActionConfiguration :: SnoozeActionConfiguration

-- | The note that you can leave when you snooze the alarm.
snoozeActionConfiguration_note :: Lens' SnoozeActionConfiguration (Maybe Text)

-- | The snooze time in seconds. The alarm automatically changes to the
--   <tt>NORMAL</tt> state after this duration.
snoozeActionConfiguration_snoozeDuration :: Lens' SnoozeActionConfiguration (Maybe Int)
instance GHC.Generics.Generic Amazonka.IoTEventsData.Types.SnoozeActionConfiguration.SnoozeActionConfiguration
instance GHC.Show.Show Amazonka.IoTEventsData.Types.SnoozeActionConfiguration.SnoozeActionConfiguration
instance GHC.Read.Read Amazonka.IoTEventsData.Types.SnoozeActionConfiguration.SnoozeActionConfiguration
instance GHC.Classes.Eq Amazonka.IoTEventsData.Types.SnoozeActionConfiguration.SnoozeActionConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTEventsData.Types.SnoozeActionConfiguration.SnoozeActionConfiguration
instance Data.Hashable.Class.Hashable Amazonka.IoTEventsData.Types.SnoozeActionConfiguration.SnoozeActionConfiguration
instance Control.DeepSeq.NFData Amazonka.IoTEventsData.Types.SnoozeActionConfiguration.SnoozeActionConfiguration


module Amazonka.IoTEventsData.Types.CustomerAction

-- | Contains information about the action that you can take to respond to
--   the alarm.
--   
--   <i>See:</i> <a>newCustomerAction</a> smart constructor.
data CustomerAction
CustomerAction' :: Maybe ResetActionConfiguration -> Maybe CustomerActionName -> Maybe SnoozeActionConfiguration -> Maybe EnableActionConfiguration -> Maybe DisableActionConfiguration -> Maybe AcknowledgeActionConfiguration -> CustomerAction

-- | Contains the configuration information of a reset action.
[$sel:resetActionConfiguration:CustomerAction'] :: CustomerAction -> Maybe ResetActionConfiguration

-- | The name of the action. The action name can be one of the following
--   values:
--   
--   <ul>
--   <li><tt>SNOOZE</tt> - When you snooze the alarm, the alarm state
--   changes to <tt>SNOOZE_DISABLED</tt>.</li>
--   <li><tt>ENABLE</tt> - When you enable the alarm, the alarm state
--   changes to <tt>NORMAL</tt>.</li>
--   <li><tt>DISABLE</tt> - When you disable the alarm, the alarm state
--   changes to <tt>DISABLED</tt>.</li>
--   <li><tt>ACKNOWLEDGE</tt> - When you acknowledge the alarm, the alarm
--   state changes to <tt>ACKNOWLEDGED</tt>.</li>
--   <li><tt>RESET</tt> - When you reset the alarm, the alarm state changes
--   to <tt>NORMAL</tt>.</li>
--   </ul>
--   
--   For more information, see the <a>AlarmState</a> API.
[$sel:actionName:CustomerAction'] :: CustomerAction -> Maybe CustomerActionName

-- | Contains the configuration information of a snooze action.
[$sel:snoozeActionConfiguration:CustomerAction'] :: CustomerAction -> Maybe SnoozeActionConfiguration

-- | Contains the configuration information of an enable action.
[$sel:enableActionConfiguration:CustomerAction'] :: CustomerAction -> Maybe EnableActionConfiguration

-- | Contains the configuration information of a disable action.
[$sel:disableActionConfiguration:CustomerAction'] :: CustomerAction -> Maybe DisableActionConfiguration

-- | Contains the configuration information of an acknowledge action.
[$sel:acknowledgeActionConfiguration:CustomerAction'] :: CustomerAction -> Maybe AcknowledgeActionConfiguration

-- | Create a value of <a>CustomerAction</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resetActionConfiguration:CustomerAction'</a>,
--   <a>customerAction_resetActionConfiguration</a> - Contains the
--   configuration information of a reset action.
--   
--   <a>$sel:actionName:CustomerAction'</a>,
--   <a>customerAction_actionName</a> - The name of the action. The action
--   name can be one of the following values:
--   
--   <ul>
--   <li><tt>SNOOZE</tt> - When you snooze the alarm, the alarm state
--   changes to <tt>SNOOZE_DISABLED</tt>.</li>
--   <li><tt>ENABLE</tt> - When you enable the alarm, the alarm state
--   changes to <tt>NORMAL</tt>.</li>
--   <li><tt>DISABLE</tt> - When you disable the alarm, the alarm state
--   changes to <tt>DISABLED</tt>.</li>
--   <li><tt>ACKNOWLEDGE</tt> - When you acknowledge the alarm, the alarm
--   state changes to <tt>ACKNOWLEDGED</tt>.</li>
--   <li><tt>RESET</tt> - When you reset the alarm, the alarm state changes
--   to <tt>NORMAL</tt>.</li>
--   </ul>
--   
--   For more information, see the <a>AlarmState</a> API.
--   
--   <a>$sel:snoozeActionConfiguration:CustomerAction'</a>,
--   <a>customerAction_snoozeActionConfiguration</a> - Contains the
--   configuration information of a snooze action.
--   
--   <a>$sel:enableActionConfiguration:CustomerAction'</a>,
--   <a>customerAction_enableActionConfiguration</a> - Contains the
--   configuration information of an enable action.
--   
--   <a>$sel:disableActionConfiguration:CustomerAction'</a>,
--   <a>customerAction_disableActionConfiguration</a> - Contains the
--   configuration information of a disable action.
--   
--   <a>$sel:acknowledgeActionConfiguration:CustomerAction'</a>,
--   <a>customerAction_acknowledgeActionConfiguration</a> - Contains the
--   configuration information of an acknowledge action.
newCustomerAction :: CustomerAction

-- | Contains the configuration information of a reset action.
customerAction_resetActionConfiguration :: Lens' CustomerAction (Maybe ResetActionConfiguration)

-- | The name of the action. The action name can be one of the following
--   values:
--   
--   <ul>
--   <li><tt>SNOOZE</tt> - When you snooze the alarm, the alarm state
--   changes to <tt>SNOOZE_DISABLED</tt>.</li>
--   <li><tt>ENABLE</tt> - When you enable the alarm, the alarm state
--   changes to <tt>NORMAL</tt>.</li>
--   <li><tt>DISABLE</tt> - When you disable the alarm, the alarm state
--   changes to <tt>DISABLED</tt>.</li>
--   <li><tt>ACKNOWLEDGE</tt> - When you acknowledge the alarm, the alarm
--   state changes to <tt>ACKNOWLEDGED</tt>.</li>
--   <li><tt>RESET</tt> - When you reset the alarm, the alarm state changes
--   to <tt>NORMAL</tt>.</li>
--   </ul>
--   
--   For more information, see the <a>AlarmState</a> API.
customerAction_actionName :: Lens' CustomerAction (Maybe CustomerActionName)

-- | Contains the configuration information of a snooze action.
customerAction_snoozeActionConfiguration :: Lens' CustomerAction (Maybe SnoozeActionConfiguration)

-- | Contains the configuration information of an enable action.
customerAction_enableActionConfiguration :: Lens' CustomerAction (Maybe EnableActionConfiguration)

-- | Contains the configuration information of a disable action.
customerAction_disableActionConfiguration :: Lens' CustomerAction (Maybe DisableActionConfiguration)

-- | Contains the configuration information of an acknowledge action.
customerAction_acknowledgeActionConfiguration :: Lens' CustomerAction (Maybe AcknowledgeActionConfiguration)
instance GHC.Generics.Generic Amazonka.IoTEventsData.Types.CustomerAction.CustomerAction
instance GHC.Show.Show Amazonka.IoTEventsData.Types.CustomerAction.CustomerAction
instance GHC.Read.Read Amazonka.IoTEventsData.Types.CustomerAction.CustomerAction
instance GHC.Classes.Eq Amazonka.IoTEventsData.Types.CustomerAction.CustomerAction
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTEventsData.Types.CustomerAction.CustomerAction
instance Data.Hashable.Class.Hashable Amazonka.IoTEventsData.Types.CustomerAction.CustomerAction
instance Control.DeepSeq.NFData Amazonka.IoTEventsData.Types.CustomerAction.CustomerAction


module Amazonka.IoTEventsData.Types.SnoozeAlarmActionRequest

-- | Information needed to snooze the alarm.
--   
--   <i>See:</i> <a>newSnoozeAlarmActionRequest</a> smart constructor.
data SnoozeAlarmActionRequest
SnoozeAlarmActionRequest' :: Maybe Text -> Maybe Text -> Text -> Text -> Int -> SnoozeAlarmActionRequest

-- | The value of the key used as a filter to select only the alarms
--   associated with the <a>key</a>.
[$sel:keyValue:SnoozeAlarmActionRequest'] :: SnoozeAlarmActionRequest -> Maybe Text

-- | The note that you can leave when you snooze the alarm.
[$sel:note:SnoozeAlarmActionRequest'] :: SnoozeAlarmActionRequest -> Maybe Text

-- | The request ID. Each ID must be unique within each batch.
[$sel:requestId:SnoozeAlarmActionRequest'] :: SnoozeAlarmActionRequest -> Text

-- | The name of the alarm model.
[$sel:alarmModelName:SnoozeAlarmActionRequest'] :: SnoozeAlarmActionRequest -> Text

-- | The snooze time in seconds. The alarm automatically changes to the
--   <tt>NORMAL</tt> state after this duration.
[$sel:snoozeDuration:SnoozeAlarmActionRequest'] :: SnoozeAlarmActionRequest -> Int

-- | Create a value of <a>SnoozeAlarmActionRequest</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:keyValue:SnoozeAlarmActionRequest'</a>,
--   <a>snoozeAlarmActionRequest_keyValue</a> - The value of the key used
--   as a filter to select only the alarms associated with the <a>key</a>.
--   
--   <a>$sel:note:SnoozeAlarmActionRequest'</a>,
--   <a>snoozeAlarmActionRequest_note</a> - The note that you can leave
--   when you snooze the alarm.
--   
--   <a>$sel:requestId:SnoozeAlarmActionRequest'</a>,
--   <a>snoozeAlarmActionRequest_requestId</a> - The request ID. Each ID
--   must be unique within each batch.
--   
--   <a>$sel:alarmModelName:SnoozeAlarmActionRequest'</a>,
--   <a>snoozeAlarmActionRequest_alarmModelName</a> - The name of the alarm
--   model.
--   
--   <a>$sel:snoozeDuration:SnoozeAlarmActionRequest'</a>,
--   <a>snoozeAlarmActionRequest_snoozeDuration</a> - The snooze time in
--   seconds. The alarm automatically changes to the <tt>NORMAL</tt> state
--   after this duration.
newSnoozeAlarmActionRequest :: Text -> Text -> Int -> SnoozeAlarmActionRequest

-- | The value of the key used as a filter to select only the alarms
--   associated with the <a>key</a>.
snoozeAlarmActionRequest_keyValue :: Lens' SnoozeAlarmActionRequest (Maybe Text)

-- | The note that you can leave when you snooze the alarm.
snoozeAlarmActionRequest_note :: Lens' SnoozeAlarmActionRequest (Maybe Text)

-- | The request ID. Each ID must be unique within each batch.
snoozeAlarmActionRequest_requestId :: Lens' SnoozeAlarmActionRequest Text

-- | The name of the alarm model.
snoozeAlarmActionRequest_alarmModelName :: Lens' SnoozeAlarmActionRequest Text

-- | The snooze time in seconds. The alarm automatically changes to the
--   <tt>NORMAL</tt> state after this duration.
snoozeAlarmActionRequest_snoozeDuration :: Lens' SnoozeAlarmActionRequest Int
instance GHC.Generics.Generic Amazonka.IoTEventsData.Types.SnoozeAlarmActionRequest.SnoozeAlarmActionRequest
instance GHC.Show.Show Amazonka.IoTEventsData.Types.SnoozeAlarmActionRequest.SnoozeAlarmActionRequest
instance GHC.Read.Read Amazonka.IoTEventsData.Types.SnoozeAlarmActionRequest.SnoozeAlarmActionRequest
instance GHC.Classes.Eq Amazonka.IoTEventsData.Types.SnoozeAlarmActionRequest.SnoozeAlarmActionRequest
instance Data.Hashable.Class.Hashable Amazonka.IoTEventsData.Types.SnoozeAlarmActionRequest.SnoozeAlarmActionRequest
instance Control.DeepSeq.NFData Amazonka.IoTEventsData.Types.SnoozeAlarmActionRequest.SnoozeAlarmActionRequest
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTEventsData.Types.SnoozeAlarmActionRequest.SnoozeAlarmActionRequest


module Amazonka.IoTEventsData.Types.Timer

-- | The current state of a timer.
--   
--   <i>See:</i> <a>newTimer</a> smart constructor.
data Timer
Timer' :: Text -> POSIX -> Timer

-- | The name of the timer.
[$sel:name:Timer'] :: Timer -> Text

-- | The number of seconds which have elapsed on the timer.
[$sel:timestamp:Timer'] :: Timer -> POSIX

-- | Create a value of <a>Timer</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:Timer'</a>, <a>timer_name</a> - The name of the timer.
--   
--   <a>$sel:timestamp:Timer'</a>, <a>timer_timestamp</a> - The number of
--   seconds which have elapsed on the timer.
newTimer :: Text -> UTCTime -> Timer

-- | The name of the timer.
timer_name :: Lens' Timer Text

-- | The number of seconds which have elapsed on the timer.
timer_timestamp :: Lens' Timer UTCTime
instance GHC.Generics.Generic Amazonka.IoTEventsData.Types.Timer.Timer
instance GHC.Show.Show Amazonka.IoTEventsData.Types.Timer.Timer
instance GHC.Read.Read Amazonka.IoTEventsData.Types.Timer.Timer
instance GHC.Classes.Eq Amazonka.IoTEventsData.Types.Timer.Timer
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTEventsData.Types.Timer.Timer
instance Data.Hashable.Class.Hashable Amazonka.IoTEventsData.Types.Timer.Timer
instance Control.DeepSeq.NFData Amazonka.IoTEventsData.Types.Timer.Timer


module Amazonka.IoTEventsData.Types.TimerDefinition

-- | The new setting of a timer.
--   
--   <i>See:</i> <a>newTimerDefinition</a> smart constructor.
data TimerDefinition
TimerDefinition' :: Text -> Int -> TimerDefinition

-- | The name of the timer.
[$sel:name:TimerDefinition'] :: TimerDefinition -> Text

-- | The new setting of the timer (the number of seconds before the timer
--   elapses).
[$sel:seconds:TimerDefinition'] :: TimerDefinition -> Int

-- | Create a value of <a>TimerDefinition</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:TimerDefinition'</a>, <a>timerDefinition_name</a> - The
--   name of the timer.
--   
--   <a>$sel:seconds:TimerDefinition'</a>, <a>timerDefinition_seconds</a> -
--   The new setting of the timer (the number of seconds before the timer
--   elapses).
newTimerDefinition :: Text -> Int -> TimerDefinition

-- | The name of the timer.
timerDefinition_name :: Lens' TimerDefinition Text

-- | The new setting of the timer (the number of seconds before the timer
--   elapses).
timerDefinition_seconds :: Lens' TimerDefinition Int
instance GHC.Generics.Generic Amazonka.IoTEventsData.Types.TimerDefinition.TimerDefinition
instance GHC.Show.Show Amazonka.IoTEventsData.Types.TimerDefinition.TimerDefinition
instance GHC.Read.Read Amazonka.IoTEventsData.Types.TimerDefinition.TimerDefinition
instance GHC.Classes.Eq Amazonka.IoTEventsData.Types.TimerDefinition.TimerDefinition
instance Data.Hashable.Class.Hashable Amazonka.IoTEventsData.Types.TimerDefinition.TimerDefinition
instance Control.DeepSeq.NFData Amazonka.IoTEventsData.Types.TimerDefinition.TimerDefinition
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTEventsData.Types.TimerDefinition.TimerDefinition


module Amazonka.IoTEventsData.Types.TimestampValue

-- | Contains information about a timestamp.
--   
--   <i>See:</i> <a>newTimestampValue</a> smart constructor.
data TimestampValue
TimestampValue' :: Maybe Natural -> TimestampValue

-- | The value of the timestamp, in the Unix epoch format.
[$sel:timeInMillis:TimestampValue'] :: TimestampValue -> Maybe Natural

-- | Create a value of <a>TimestampValue</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:timeInMillis:TimestampValue'</a>,
--   <a>timestampValue_timeInMillis</a> - The value of the timestamp, in
--   the Unix epoch format.
newTimestampValue :: TimestampValue

-- | The value of the timestamp, in the Unix epoch format.
timestampValue_timeInMillis :: Lens' TimestampValue (Maybe Natural)
instance GHC.Generics.Generic Amazonka.IoTEventsData.Types.TimestampValue.TimestampValue
instance GHC.Show.Show Amazonka.IoTEventsData.Types.TimestampValue.TimestampValue
instance GHC.Read.Read Amazonka.IoTEventsData.Types.TimestampValue.TimestampValue
instance GHC.Classes.Eq Amazonka.IoTEventsData.Types.TimestampValue.TimestampValue
instance Data.Hashable.Class.Hashable Amazonka.IoTEventsData.Types.TimestampValue.TimestampValue
instance Control.DeepSeq.NFData Amazonka.IoTEventsData.Types.TimestampValue.TimestampValue
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTEventsData.Types.TimestampValue.TimestampValue


module Amazonka.IoTEventsData.Types.Message

-- | Information about a message.
--   
--   <i>See:</i> <a>newMessage</a> smart constructor.
data Message
Message' :: Maybe TimestampValue -> Text -> Text -> Base64 -> Message

-- | The timestamp associated with the message.
[$sel:timestamp:Message'] :: Message -> Maybe TimestampValue

-- | The ID to assign to the message. Within each batch sent, each
--   <tt>"messageId"</tt> must be unique.
[$sel:messageId:Message'] :: Message -> Text

-- | The name of the input into which the message payload is transformed.
[$sel:inputName:Message'] :: Message -> Text

-- | The payload of the message. This can be a JSON string or a
--   Base-64-encoded string representing binary data (in which case you
--   must decode it).
[$sel:payload:Message'] :: Message -> Base64

-- | Create a value of <a>Message</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:timestamp:Message'</a>, <a>message_timestamp</a> - The
--   timestamp associated with the message.
--   
--   <a>$sel:messageId:Message'</a>, <a>message_messageId</a> - The ID to
--   assign to the message. Within each batch sent, each
--   <tt>"messageId"</tt> must be unique.
--   
--   <a>$sel:inputName:Message'</a>, <a>message_inputName</a> - The name of
--   the input into which the message payload is transformed.
--   
--   <a>$sel:payload:Message'</a>, <a>message_payload</a> - The payload of
--   the message. This can be a JSON string or a Base-64-encoded string
--   representing binary data (in which case you must decode it).-- --
--   <i>Note:</i> This <tt>Lens</tt> automatically encodes and decodes
--   Base64 data. -- The underlying isomorphism will encode to Base64
--   representation during -- serialisation, and decode from Base64
--   representation during deserialisation. -- This <tt>Lens</tt> accepts
--   and returns only raw unencoded data.
newMessage :: Text -> Text -> ByteString -> Message

-- | The timestamp associated with the message.
message_timestamp :: Lens' Message (Maybe TimestampValue)

-- | The ID to assign to the message. Within each batch sent, each
--   <tt>"messageId"</tt> must be unique.
message_messageId :: Lens' Message Text

-- | The name of the input into which the message payload is transformed.
message_inputName :: Lens' Message Text

-- | The payload of the message. This can be a JSON string or a
--   Base-64-encoded string representing binary data (in which case you
--   must decode it).-- -- <i>Note:</i> This <tt>Lens</tt> automatically
--   encodes and decodes Base64 data. -- The underlying isomorphism will
--   encode to Base64 representation during -- serialisation, and decode
--   from Base64 representation during deserialisation. -- This
--   <tt>Lens</tt> accepts and returns only raw unencoded data.
message_payload :: Lens' Message ByteString
instance GHC.Generics.Generic Amazonka.IoTEventsData.Types.Message.Message
instance GHC.Show.Show Amazonka.IoTEventsData.Types.Message.Message
instance GHC.Read.Read Amazonka.IoTEventsData.Types.Message.Message
instance GHC.Classes.Eq Amazonka.IoTEventsData.Types.Message.Message
instance Data.Hashable.Class.Hashable Amazonka.IoTEventsData.Types.Message.Message
instance Control.DeepSeq.NFData Amazonka.IoTEventsData.Types.Message.Message
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTEventsData.Types.Message.Message


module Amazonka.IoTEventsData.Types.TriggerType
newtype TriggerType
TriggerType' :: Text -> TriggerType
[fromTriggerType] :: TriggerType -> Text
pattern TriggerType_SNOOZE_TIMEOUT :: TriggerType
instance Amazonka.Data.XML.ToXML Amazonka.IoTEventsData.Types.TriggerType.TriggerType
instance Amazonka.Data.XML.FromXML Amazonka.IoTEventsData.Types.TriggerType.TriggerType
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.IoTEventsData.Types.TriggerType.TriggerType
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTEventsData.Types.TriggerType.TriggerType
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.IoTEventsData.Types.TriggerType.TriggerType
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTEventsData.Types.TriggerType.TriggerType
instance Amazonka.Data.Query.ToQuery Amazonka.IoTEventsData.Types.TriggerType.TriggerType
instance Amazonka.Data.Headers.ToHeader Amazonka.IoTEventsData.Types.TriggerType.TriggerType
instance Amazonka.Data.Log.ToLog Amazonka.IoTEventsData.Types.TriggerType.TriggerType
instance Amazonka.Data.ByteString.ToByteString Amazonka.IoTEventsData.Types.TriggerType.TriggerType
instance Amazonka.Data.Text.ToText Amazonka.IoTEventsData.Types.TriggerType.TriggerType
instance Amazonka.Data.Text.FromText Amazonka.IoTEventsData.Types.TriggerType.TriggerType
instance Control.DeepSeq.NFData Amazonka.IoTEventsData.Types.TriggerType.TriggerType
instance Data.Hashable.Class.Hashable Amazonka.IoTEventsData.Types.TriggerType.TriggerType
instance GHC.Generics.Generic Amazonka.IoTEventsData.Types.TriggerType.TriggerType
instance GHC.Classes.Ord Amazonka.IoTEventsData.Types.TriggerType.TriggerType
instance GHC.Classes.Eq Amazonka.IoTEventsData.Types.TriggerType.TriggerType
instance GHC.Read.Read Amazonka.IoTEventsData.Types.TriggerType.TriggerType
instance GHC.Show.Show Amazonka.IoTEventsData.Types.TriggerType.TriggerType


module Amazonka.IoTEventsData.Types.StateChangeConfiguration

-- | Contains the configuration information of alarm state changes.
--   
--   <i>See:</i> <a>newStateChangeConfiguration</a> smart constructor.
data StateChangeConfiguration
StateChangeConfiguration' :: Maybe TriggerType -> StateChangeConfiguration

-- | The trigger type. If the value is <tt>SNOOZE_TIMEOUT</tt>, the snooze
--   duration ends and the alarm automatically changes to the
--   <tt>NORMAL</tt> state.
[$sel:triggerType:StateChangeConfiguration'] :: StateChangeConfiguration -> Maybe TriggerType

-- | Create a value of <a>StateChangeConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:triggerType:StateChangeConfiguration'</a>,
--   <a>stateChangeConfiguration_triggerType</a> - The trigger type. If the
--   value is <tt>SNOOZE_TIMEOUT</tt>, the snooze duration ends and the
--   alarm automatically changes to the <tt>NORMAL</tt> state.
newStateChangeConfiguration :: StateChangeConfiguration

-- | The trigger type. If the value is <tt>SNOOZE_TIMEOUT</tt>, the snooze
--   duration ends and the alarm automatically changes to the
--   <tt>NORMAL</tt> state.
stateChangeConfiguration_triggerType :: Lens' StateChangeConfiguration (Maybe TriggerType)
instance GHC.Generics.Generic Amazonka.IoTEventsData.Types.StateChangeConfiguration.StateChangeConfiguration
instance GHC.Show.Show Amazonka.IoTEventsData.Types.StateChangeConfiguration.StateChangeConfiguration
instance GHC.Read.Read Amazonka.IoTEventsData.Types.StateChangeConfiguration.StateChangeConfiguration
instance GHC.Classes.Eq Amazonka.IoTEventsData.Types.StateChangeConfiguration.StateChangeConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTEventsData.Types.StateChangeConfiguration.StateChangeConfiguration
instance Data.Hashable.Class.Hashable Amazonka.IoTEventsData.Types.StateChangeConfiguration.StateChangeConfiguration
instance Control.DeepSeq.NFData Amazonka.IoTEventsData.Types.StateChangeConfiguration.StateChangeConfiguration


module Amazonka.IoTEventsData.Types.SystemEvent

-- | Contains information about alarm state changes.
--   
--   <i>See:</i> <a>newSystemEvent</a> smart constructor.
data SystemEvent
SystemEvent' :: Maybe EventType -> Maybe StateChangeConfiguration -> SystemEvent

-- | The event type. If the value is <tt>STATE_CHANGE</tt>, the event
--   contains information about alarm state changes.
[$sel:eventType:SystemEvent'] :: SystemEvent -> Maybe EventType

-- | Contains the configuration information of alarm state changes.
[$sel:stateChangeConfiguration:SystemEvent'] :: SystemEvent -> Maybe StateChangeConfiguration

-- | Create a value of <a>SystemEvent</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:eventType:SystemEvent'</a>, <a>systemEvent_eventType</a> - The
--   event type. If the value is <tt>STATE_CHANGE</tt>, the event contains
--   information about alarm state changes.
--   
--   <a>$sel:stateChangeConfiguration:SystemEvent'</a>,
--   <a>systemEvent_stateChangeConfiguration</a> - Contains the
--   configuration information of alarm state changes.
newSystemEvent :: SystemEvent

-- | The event type. If the value is <tt>STATE_CHANGE</tt>, the event
--   contains information about alarm state changes.
systemEvent_eventType :: Lens' SystemEvent (Maybe EventType)

-- | Contains the configuration information of alarm state changes.
systemEvent_stateChangeConfiguration :: Lens' SystemEvent (Maybe StateChangeConfiguration)
instance GHC.Generics.Generic Amazonka.IoTEventsData.Types.SystemEvent.SystemEvent
instance GHC.Show.Show Amazonka.IoTEventsData.Types.SystemEvent.SystemEvent
instance GHC.Read.Read Amazonka.IoTEventsData.Types.SystemEvent.SystemEvent
instance GHC.Classes.Eq Amazonka.IoTEventsData.Types.SystemEvent.SystemEvent
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTEventsData.Types.SystemEvent.SystemEvent
instance Data.Hashable.Class.Hashable Amazonka.IoTEventsData.Types.SystemEvent.SystemEvent
instance Control.DeepSeq.NFData Amazonka.IoTEventsData.Types.SystemEvent.SystemEvent


module Amazonka.IoTEventsData.Types.AlarmState

-- | Contains information about the current state of the alarm.
--   
--   <i>See:</i> <a>newAlarmState</a> smart constructor.
data AlarmState
AlarmState' :: Maybe CustomerAction -> Maybe AlarmStateName -> Maybe RuleEvaluation -> Maybe SystemEvent -> AlarmState

-- | Contains information about the action that you can take to respond to
--   the alarm.
[$sel:customerAction:AlarmState'] :: AlarmState -> Maybe CustomerAction

-- | The name of the alarm state. The state name can be one of the
--   following values:
--   
--   <ul>
--   <li><tt>DISABLED</tt> - When the alarm is in the <tt>DISABLED</tt>
--   state, it isn't ready to evaluate data. To enable the alarm, you must
--   change the alarm to the <tt>NORMAL</tt> state.</li>
--   <li><tt>NORMAL</tt> - When the alarm is in the <tt>NORMAL</tt> state,
--   it's ready to evaluate data.</li>
--   <li><tt>ACTIVE</tt> - If the alarm is in the <tt>ACTIVE</tt> state,
--   the alarm is invoked.</li>
--   <li><tt>ACKNOWLEDGED</tt> - When the alarm is in the
--   <tt>ACKNOWLEDGED</tt> state, the alarm was invoked and you
--   acknowledged the alarm.</li>
--   <li><tt>SNOOZE_DISABLED</tt> - When the alarm is in the
--   <tt>SNOOZE_DISABLED</tt> state, the alarm is disabled for a specified
--   period of time. After the snooze time, the alarm automatically changes
--   to the <tt>NORMAL</tt> state.</li>
--   <li><tt>LATCHED</tt> - When the alarm is in the <tt>LATCHED</tt>
--   state, the alarm was invoked. However, the data that the alarm is
--   currently evaluating is within the specified range. To change the
--   alarm to the <tt>NORMAL</tt> state, you must acknowledge the
--   alarm.</li>
--   </ul>
[$sel:stateName:AlarmState'] :: AlarmState -> Maybe AlarmStateName

-- | Information needed to evaluate data.
[$sel:ruleEvaluation:AlarmState'] :: AlarmState -> Maybe RuleEvaluation

-- | Contains information about alarm state changes.
[$sel:systemEvent:AlarmState'] :: AlarmState -> Maybe SystemEvent

-- | Create a value of <a>AlarmState</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:customerAction:AlarmState'</a>,
--   <a>alarmState_customerAction</a> - Contains information about the
--   action that you can take to respond to the alarm.
--   
--   <a>$sel:stateName:AlarmState'</a>, <a>alarmState_stateName</a> - The
--   name of the alarm state. The state name can be one of the following
--   values:
--   
--   <ul>
--   <li><tt>DISABLED</tt> - When the alarm is in the <tt>DISABLED</tt>
--   state, it isn't ready to evaluate data. To enable the alarm, you must
--   change the alarm to the <tt>NORMAL</tt> state.</li>
--   <li><tt>NORMAL</tt> - When the alarm is in the <tt>NORMAL</tt> state,
--   it's ready to evaluate data.</li>
--   <li><tt>ACTIVE</tt> - If the alarm is in the <tt>ACTIVE</tt> state,
--   the alarm is invoked.</li>
--   <li><tt>ACKNOWLEDGED</tt> - When the alarm is in the
--   <tt>ACKNOWLEDGED</tt> state, the alarm was invoked and you
--   acknowledged the alarm.</li>
--   <li><tt>SNOOZE_DISABLED</tt> - When the alarm is in the
--   <tt>SNOOZE_DISABLED</tt> state, the alarm is disabled for a specified
--   period of time. After the snooze time, the alarm automatically changes
--   to the <tt>NORMAL</tt> state.</li>
--   <li><tt>LATCHED</tt> - When the alarm is in the <tt>LATCHED</tt>
--   state, the alarm was invoked. However, the data that the alarm is
--   currently evaluating is within the specified range. To change the
--   alarm to the <tt>NORMAL</tt> state, you must acknowledge the
--   alarm.</li>
--   </ul>
--   
--   <a>$sel:ruleEvaluation:AlarmState'</a>,
--   <a>alarmState_ruleEvaluation</a> - Information needed to evaluate
--   data.
--   
--   <a>$sel:systemEvent:AlarmState'</a>, <a>alarmState_systemEvent</a> -
--   Contains information about alarm state changes.
newAlarmState :: AlarmState

-- | Contains information about the action that you can take to respond to
--   the alarm.
alarmState_customerAction :: Lens' AlarmState (Maybe CustomerAction)

-- | The name of the alarm state. The state name can be one of the
--   following values:
--   
--   <ul>
--   <li><tt>DISABLED</tt> - When the alarm is in the <tt>DISABLED</tt>
--   state, it isn't ready to evaluate data. To enable the alarm, you must
--   change the alarm to the <tt>NORMAL</tt> state.</li>
--   <li><tt>NORMAL</tt> - When the alarm is in the <tt>NORMAL</tt> state,
--   it's ready to evaluate data.</li>
--   <li><tt>ACTIVE</tt> - If the alarm is in the <tt>ACTIVE</tt> state,
--   the alarm is invoked.</li>
--   <li><tt>ACKNOWLEDGED</tt> - When the alarm is in the
--   <tt>ACKNOWLEDGED</tt> state, the alarm was invoked and you
--   acknowledged the alarm.</li>
--   <li><tt>SNOOZE_DISABLED</tt> - When the alarm is in the
--   <tt>SNOOZE_DISABLED</tt> state, the alarm is disabled for a specified
--   period of time. After the snooze time, the alarm automatically changes
--   to the <tt>NORMAL</tt> state.</li>
--   <li><tt>LATCHED</tt> - When the alarm is in the <tt>LATCHED</tt>
--   state, the alarm was invoked. However, the data that the alarm is
--   currently evaluating is within the specified range. To change the
--   alarm to the <tt>NORMAL</tt> state, you must acknowledge the
--   alarm.</li>
--   </ul>
alarmState_stateName :: Lens' AlarmState (Maybe AlarmStateName)

-- | Information needed to evaluate data.
alarmState_ruleEvaluation :: Lens' AlarmState (Maybe RuleEvaluation)

-- | Contains information about alarm state changes.
alarmState_systemEvent :: Lens' AlarmState (Maybe SystemEvent)
instance GHC.Generics.Generic Amazonka.IoTEventsData.Types.AlarmState.AlarmState
instance GHC.Show.Show Amazonka.IoTEventsData.Types.AlarmState.AlarmState
instance GHC.Read.Read Amazonka.IoTEventsData.Types.AlarmState.AlarmState
instance GHC.Classes.Eq Amazonka.IoTEventsData.Types.AlarmState.AlarmState
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTEventsData.Types.AlarmState.AlarmState
instance Data.Hashable.Class.Hashable Amazonka.IoTEventsData.Types.AlarmState.AlarmState
instance Control.DeepSeq.NFData Amazonka.IoTEventsData.Types.AlarmState.AlarmState


module Amazonka.IoTEventsData.Types.Alarm

-- | Contains information about an alarm.
--   
--   <i>See:</i> <a>newAlarm</a> smart constructor.
data Alarm
Alarm' :: Maybe Text -> Maybe POSIX -> Maybe AlarmState -> Maybe Text -> Maybe Natural -> Maybe POSIX -> Maybe Text -> Alarm

-- | The value of the key used as a filter to select only the alarms
--   associated with the <a>key</a>.
[$sel:keyValue:Alarm'] :: Alarm -> Maybe Text

-- | The time the alarm was created, in the Unix epoch format.
[$sel:creationTime:Alarm'] :: Alarm -> Maybe POSIX

-- | Contains information about the current state of the alarm.
[$sel:alarmState:Alarm'] :: Alarm -> Maybe AlarmState

-- | The name of the alarm model.
[$sel:alarmModelName:Alarm'] :: Alarm -> Maybe Text

-- | A non-negative integer that reflects the severity level of the alarm.
[$sel:severity:Alarm'] :: Alarm -> Maybe Natural

-- | The time the alarm was last updated, in the Unix epoch format.
[$sel:lastUpdateTime:Alarm'] :: Alarm -> Maybe POSIX

-- | The version of the alarm model.
[$sel:alarmModelVersion:Alarm'] :: Alarm -> Maybe Text

-- | Create a value of <a>Alarm</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:keyValue:Alarm'</a>, <a>alarm_keyValue</a> - The value of the
--   key used as a filter to select only the alarms associated with the
--   <a>key</a>.
--   
--   <a>$sel:creationTime:Alarm'</a>, <a>alarm_creationTime</a> - The time
--   the alarm was created, in the Unix epoch format.
--   
--   <a>$sel:alarmState:Alarm'</a>, <a>alarm_alarmState</a> - Contains
--   information about the current state of the alarm.
--   
--   <a>$sel:alarmModelName:Alarm'</a>, <a>alarm_alarmModelName</a> - The
--   name of the alarm model.
--   
--   <a>$sel:severity:Alarm'</a>, <a>alarm_severity</a> - A non-negative
--   integer that reflects the severity level of the alarm.
--   
--   <a>$sel:lastUpdateTime:Alarm'</a>, <a>alarm_lastUpdateTime</a> - The
--   time the alarm was last updated, in the Unix epoch format.
--   
--   <a>$sel:alarmModelVersion:Alarm'</a>, <a>alarm_alarmModelVersion</a> -
--   The version of the alarm model.
newAlarm :: Alarm

-- | The value of the key used as a filter to select only the alarms
--   associated with the <a>key</a>.
alarm_keyValue :: Lens' Alarm (Maybe Text)

-- | The time the alarm was created, in the Unix epoch format.
alarm_creationTime :: Lens' Alarm (Maybe UTCTime)

-- | Contains information about the current state of the alarm.
alarm_alarmState :: Lens' Alarm (Maybe AlarmState)

-- | The name of the alarm model.
alarm_alarmModelName :: Lens' Alarm (Maybe Text)

-- | A non-negative integer that reflects the severity level of the alarm.
alarm_severity :: Lens' Alarm (Maybe Natural)

-- | The time the alarm was last updated, in the Unix epoch format.
alarm_lastUpdateTime :: Lens' Alarm (Maybe UTCTime)

-- | The version of the alarm model.
alarm_alarmModelVersion :: Lens' Alarm (Maybe Text)
instance GHC.Generics.Generic Amazonka.IoTEventsData.Types.Alarm.Alarm
instance GHC.Show.Show Amazonka.IoTEventsData.Types.Alarm.Alarm
instance GHC.Read.Read Amazonka.IoTEventsData.Types.Alarm.Alarm
instance GHC.Classes.Eq Amazonka.IoTEventsData.Types.Alarm.Alarm
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTEventsData.Types.Alarm.Alarm
instance Data.Hashable.Class.Hashable Amazonka.IoTEventsData.Types.Alarm.Alarm
instance Control.DeepSeq.NFData Amazonka.IoTEventsData.Types.Alarm.Alarm


module Amazonka.IoTEventsData.Types.Variable

-- | The current state of the variable.
--   
--   <i>See:</i> <a>newVariable</a> smart constructor.
data Variable
Variable' :: Text -> Text -> Variable

-- | The name of the variable.
[$sel:name:Variable'] :: Variable -> Text

-- | The current value of the variable.
[$sel:value:Variable'] :: Variable -> Text

-- | Create a value of <a>Variable</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:Variable'</a>, <a>variable_name</a> - The name of the
--   variable.
--   
--   <a>$sel:value:Variable'</a>, <a>variable_value</a> - The current value
--   of the variable.
newVariable :: Text -> Text -> Variable

-- | The name of the variable.
variable_name :: Lens' Variable Text

-- | The current value of the variable.
variable_value :: Lens' Variable Text
instance GHC.Generics.Generic Amazonka.IoTEventsData.Types.Variable.Variable
instance GHC.Show.Show Amazonka.IoTEventsData.Types.Variable.Variable
instance GHC.Read.Read Amazonka.IoTEventsData.Types.Variable.Variable
instance GHC.Classes.Eq Amazonka.IoTEventsData.Types.Variable.Variable
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTEventsData.Types.Variable.Variable
instance Data.Hashable.Class.Hashable Amazonka.IoTEventsData.Types.Variable.Variable
instance Control.DeepSeq.NFData Amazonka.IoTEventsData.Types.Variable.Variable


module Amazonka.IoTEventsData.Types.DetectorState

-- | Information about the current state of the detector instance.
--   
--   <i>See:</i> <a>newDetectorState</a> smart constructor.
data DetectorState
DetectorState' :: Text -> [Variable] -> [Timer] -> DetectorState

-- | The name of the state.
[$sel:stateName:DetectorState'] :: DetectorState -> Text

-- | The current values of the detector's variables.
[$sel:variables:DetectorState'] :: DetectorState -> [Variable]

-- | The current state of the detector's timers.
[$sel:timers:DetectorState'] :: DetectorState -> [Timer]

-- | Create a value of <a>DetectorState</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:stateName:DetectorState'</a>, <a>detectorState_stateName</a> -
--   The name of the state.
--   
--   <a>$sel:variables:DetectorState'</a>, <a>detectorState_variables</a> -
--   The current values of the detector's variables.
--   
--   <a>$sel:timers:DetectorState'</a>, <a>detectorState_timers</a> - The
--   current state of the detector's timers.
newDetectorState :: Text -> DetectorState

-- | The name of the state.
detectorState_stateName :: Lens' DetectorState Text

-- | The current values of the detector's variables.
detectorState_variables :: Lens' DetectorState [Variable]

-- | The current state of the detector's timers.
detectorState_timers :: Lens' DetectorState [Timer]
instance GHC.Generics.Generic Amazonka.IoTEventsData.Types.DetectorState.DetectorState
instance GHC.Show.Show Amazonka.IoTEventsData.Types.DetectorState.DetectorState
instance GHC.Read.Read Amazonka.IoTEventsData.Types.DetectorState.DetectorState
instance GHC.Classes.Eq Amazonka.IoTEventsData.Types.DetectorState.DetectorState
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTEventsData.Types.DetectorState.DetectorState
instance Data.Hashable.Class.Hashable Amazonka.IoTEventsData.Types.DetectorState.DetectorState
instance Control.DeepSeq.NFData Amazonka.IoTEventsData.Types.DetectorState.DetectorState


module Amazonka.IoTEventsData.Types.Detector

-- | Information about the detector (instance).
--   
--   <i>See:</i> <a>newDetector</a> smart constructor.
data Detector
Detector' :: Maybe Text -> Maybe POSIX -> Maybe DetectorState -> Maybe Text -> Maybe Text -> Maybe POSIX -> Detector

-- | The value of the key (identifying the device or system) that caused
--   the creation of this detector (instance).
[$sel:keyValue:Detector'] :: Detector -> Maybe Text

-- | The time the detector (instance) was created.
[$sel:creationTime:Detector'] :: Detector -> Maybe POSIX

-- | The current state of the detector (instance).
[$sel:state:Detector'] :: Detector -> Maybe DetectorState

-- | The name of the detector model that created this detector (instance).
[$sel:detectorModelName:Detector'] :: Detector -> Maybe Text

-- | The version of the detector model that created this detector
--   (instance).
[$sel:detectorModelVersion:Detector'] :: Detector -> Maybe Text

-- | The time the detector (instance) was last updated.
[$sel:lastUpdateTime:Detector'] :: Detector -> Maybe POSIX

-- | Create a value of <a>Detector</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:keyValue:Detector'</a>, <a>detector_keyValue</a> - The value
--   of the key (identifying the device or system) that caused the creation
--   of this detector (instance).
--   
--   <a>$sel:creationTime:Detector'</a>, <a>detector_creationTime</a> - The
--   time the detector (instance) was created.
--   
--   <a>$sel:state:Detector'</a>, <a>detector_state</a> - The current state
--   of the detector (instance).
--   
--   <a>$sel:detectorModelName:Detector'</a>,
--   <a>detector_detectorModelName</a> - The name of the detector model
--   that created this detector (instance).
--   
--   <a>$sel:detectorModelVersion:Detector'</a>,
--   <a>detector_detectorModelVersion</a> - The version of the detector
--   model that created this detector (instance).
--   
--   <a>$sel:lastUpdateTime:Detector'</a>, <a>detector_lastUpdateTime</a> -
--   The time the detector (instance) was last updated.
newDetector :: Detector

-- | The value of the key (identifying the device or system) that caused
--   the creation of this detector (instance).
detector_keyValue :: Lens' Detector (Maybe Text)

-- | The time the detector (instance) was created.
detector_creationTime :: Lens' Detector (Maybe UTCTime)

-- | The current state of the detector (instance).
detector_state :: Lens' Detector (Maybe DetectorState)

-- | The name of the detector model that created this detector (instance).
detector_detectorModelName :: Lens' Detector (Maybe Text)

-- | The version of the detector model that created this detector
--   (instance).
detector_detectorModelVersion :: Lens' Detector (Maybe Text)

-- | The time the detector (instance) was last updated.
detector_lastUpdateTime :: Lens' Detector (Maybe UTCTime)
instance GHC.Generics.Generic Amazonka.IoTEventsData.Types.Detector.Detector
instance GHC.Show.Show Amazonka.IoTEventsData.Types.Detector.Detector
instance GHC.Read.Read Amazonka.IoTEventsData.Types.Detector.Detector
instance GHC.Classes.Eq Amazonka.IoTEventsData.Types.Detector.Detector
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTEventsData.Types.Detector.Detector
instance Data.Hashable.Class.Hashable Amazonka.IoTEventsData.Types.Detector.Detector
instance Control.DeepSeq.NFData Amazonka.IoTEventsData.Types.Detector.Detector


module Amazonka.IoTEventsData.Types.VariableDefinition

-- | The new value of the variable.
--   
--   <i>See:</i> <a>newVariableDefinition</a> smart constructor.
data VariableDefinition
VariableDefinition' :: Text -> Text -> VariableDefinition

-- | The name of the variable.
[$sel:name:VariableDefinition'] :: VariableDefinition -> Text

-- | The new value of the variable.
[$sel:value:VariableDefinition'] :: VariableDefinition -> Text

-- | Create a value of <a>VariableDefinition</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:VariableDefinition'</a>, <a>variableDefinition_name</a> -
--   The name of the variable.
--   
--   <a>$sel:value:VariableDefinition'</a>, <a>variableDefinition_value</a>
--   - The new value of the variable.
newVariableDefinition :: Text -> Text -> VariableDefinition

-- | The name of the variable.
variableDefinition_name :: Lens' VariableDefinition Text

-- | The new value of the variable.
variableDefinition_value :: Lens' VariableDefinition Text
instance GHC.Generics.Generic Amazonka.IoTEventsData.Types.VariableDefinition.VariableDefinition
instance GHC.Show.Show Amazonka.IoTEventsData.Types.VariableDefinition.VariableDefinition
instance GHC.Read.Read Amazonka.IoTEventsData.Types.VariableDefinition.VariableDefinition
instance GHC.Classes.Eq Amazonka.IoTEventsData.Types.VariableDefinition.VariableDefinition
instance Data.Hashable.Class.Hashable Amazonka.IoTEventsData.Types.VariableDefinition.VariableDefinition
instance Control.DeepSeq.NFData Amazonka.IoTEventsData.Types.VariableDefinition.VariableDefinition
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTEventsData.Types.VariableDefinition.VariableDefinition


module Amazonka.IoTEventsData.Types.DetectorStateDefinition

-- | The new state, variable values, and timer settings of the detector
--   (instance).
--   
--   <i>See:</i> <a>newDetectorStateDefinition</a> smart constructor.
data DetectorStateDefinition
DetectorStateDefinition' :: Text -> [VariableDefinition] -> [TimerDefinition] -> DetectorStateDefinition

-- | The name of the new state of the detector (instance).
[$sel:stateName:DetectorStateDefinition'] :: DetectorStateDefinition -> Text

-- | The new values of the detector's variables. Any variable whose value
--   isn't specified is cleared.
[$sel:variables:DetectorStateDefinition'] :: DetectorStateDefinition -> [VariableDefinition]

-- | The new values of the detector's timers. Any timer whose value isn't
--   specified is cleared, and its timeout event won't occur.
[$sel:timers:DetectorStateDefinition'] :: DetectorStateDefinition -> [TimerDefinition]

-- | Create a value of <a>DetectorStateDefinition</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:stateName:DetectorStateDefinition'</a>,
--   <a>detectorStateDefinition_stateName</a> - The name of the new state
--   of the detector (instance).
--   
--   <a>$sel:variables:DetectorStateDefinition'</a>,
--   <a>detectorStateDefinition_variables</a> - The new values of the
--   detector's variables. Any variable whose value isn't specified is
--   cleared.
--   
--   <a>$sel:timers:DetectorStateDefinition'</a>,
--   <a>detectorStateDefinition_timers</a> - The new values of the
--   detector's timers. Any timer whose value isn't specified is cleared,
--   and its timeout event won't occur.
newDetectorStateDefinition :: Text -> DetectorStateDefinition

-- | The name of the new state of the detector (instance).
detectorStateDefinition_stateName :: Lens' DetectorStateDefinition Text

-- | The new values of the detector's variables. Any variable whose value
--   isn't specified is cleared.
detectorStateDefinition_variables :: Lens' DetectorStateDefinition [VariableDefinition]

-- | The new values of the detector's timers. Any timer whose value isn't
--   specified is cleared, and its timeout event won't occur.
detectorStateDefinition_timers :: Lens' DetectorStateDefinition [TimerDefinition]
instance GHC.Generics.Generic Amazonka.IoTEventsData.Types.DetectorStateDefinition.DetectorStateDefinition
instance GHC.Show.Show Amazonka.IoTEventsData.Types.DetectorStateDefinition.DetectorStateDefinition
instance GHC.Read.Read Amazonka.IoTEventsData.Types.DetectorStateDefinition.DetectorStateDefinition
instance GHC.Classes.Eq Amazonka.IoTEventsData.Types.DetectorStateDefinition.DetectorStateDefinition
instance Data.Hashable.Class.Hashable Amazonka.IoTEventsData.Types.DetectorStateDefinition.DetectorStateDefinition
instance Control.DeepSeq.NFData Amazonka.IoTEventsData.Types.DetectorStateDefinition.DetectorStateDefinition
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTEventsData.Types.DetectorStateDefinition.DetectorStateDefinition


module Amazonka.IoTEventsData.Types.UpdateDetectorRequest

-- | Information used to update the detector (instance).
--   
--   <i>See:</i> <a>newUpdateDetectorRequest</a> smart constructor.
data UpdateDetectorRequest
UpdateDetectorRequest' :: Maybe Text -> Text -> Text -> DetectorStateDefinition -> UpdateDetectorRequest

-- | The value of the input key attribute (identifying the device or
--   system) that caused the creation of this detector (instance).
[$sel:keyValue:UpdateDetectorRequest'] :: UpdateDetectorRequest -> Maybe Text

-- | The ID to assign to the detector update <tt>"message"</tt>. Each
--   <tt>"messageId"</tt> must be unique within each batch sent.
[$sel:messageId:UpdateDetectorRequest'] :: UpdateDetectorRequest -> Text

-- | The name of the detector model that created the detectors (instances).
[$sel:detectorModelName:UpdateDetectorRequest'] :: UpdateDetectorRequest -> Text

-- | The new state, variable values, and timer settings of the detector
--   (instance).
[$sel:state:UpdateDetectorRequest'] :: UpdateDetectorRequest -> DetectorStateDefinition

-- | Create a value of <a>UpdateDetectorRequest</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:keyValue:UpdateDetectorRequest'</a>,
--   <a>updateDetectorRequest_keyValue</a> - The value of the input key
--   attribute (identifying the device or system) that caused the creation
--   of this detector (instance).
--   
--   <a>$sel:messageId:UpdateDetectorRequest'</a>,
--   <a>updateDetectorRequest_messageId</a> - The ID to assign to the
--   detector update <tt>"message"</tt>. Each <tt>"messageId"</tt> must be
--   unique within each batch sent.
--   
--   <a>$sel:detectorModelName:UpdateDetectorRequest'</a>,
--   <a>updateDetectorRequest_detectorModelName</a> - The name of the
--   detector model that created the detectors (instances).
--   
--   <a>$sel:state:UpdateDetectorRequest'</a>,
--   <a>updateDetectorRequest_state</a> - The new state, variable values,
--   and timer settings of the detector (instance).
newUpdateDetectorRequest :: Text -> Text -> DetectorStateDefinition -> UpdateDetectorRequest

-- | The value of the input key attribute (identifying the device or
--   system) that caused the creation of this detector (instance).
updateDetectorRequest_keyValue :: Lens' UpdateDetectorRequest (Maybe Text)

-- | The ID to assign to the detector update <tt>"message"</tt>. Each
--   <tt>"messageId"</tt> must be unique within each batch sent.
updateDetectorRequest_messageId :: Lens' UpdateDetectorRequest Text

-- | The name of the detector model that created the detectors (instances).
updateDetectorRequest_detectorModelName :: Lens' UpdateDetectorRequest Text

-- | The new state, variable values, and timer settings of the detector
--   (instance).
updateDetectorRequest_state :: Lens' UpdateDetectorRequest DetectorStateDefinition
instance GHC.Generics.Generic Amazonka.IoTEventsData.Types.UpdateDetectorRequest.UpdateDetectorRequest
instance GHC.Show.Show Amazonka.IoTEventsData.Types.UpdateDetectorRequest.UpdateDetectorRequest
instance GHC.Read.Read Amazonka.IoTEventsData.Types.UpdateDetectorRequest.UpdateDetectorRequest
instance GHC.Classes.Eq Amazonka.IoTEventsData.Types.UpdateDetectorRequest.UpdateDetectorRequest
instance Data.Hashable.Class.Hashable Amazonka.IoTEventsData.Types.UpdateDetectorRequest.UpdateDetectorRequest
instance Control.DeepSeq.NFData Amazonka.IoTEventsData.Types.UpdateDetectorRequest.UpdateDetectorRequest
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTEventsData.Types.UpdateDetectorRequest.UpdateDetectorRequest


module Amazonka.IoTEventsData.Types

-- | API version <tt>2018-10-23</tt> of the Amazon IoT Events Data SDK
--   configuration.
defaultService :: Service

-- | The request was invalid.
_InvalidRequestException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request could not be completed due to throttling.
_ThrottlingException :: AsError a => Getting (First ServiceError) a ServiceError

-- | An internal failure occurred.
_InternalFailureException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The service is currently unavailable.
_ServiceUnavailableException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The resource was not found.
_ResourceNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError
newtype AlarmStateName
AlarmStateName' :: Text -> AlarmStateName
[fromAlarmStateName] :: AlarmStateName -> Text
pattern AlarmStateName_ACKNOWLEDGED :: AlarmStateName
pattern AlarmStateName_ACTIVE :: AlarmStateName
pattern AlarmStateName_DISABLED :: AlarmStateName
pattern AlarmStateName_LATCHED :: AlarmStateName
pattern AlarmStateName_NORMAL :: AlarmStateName
pattern AlarmStateName_SNOOZE_DISABLED :: AlarmStateName
newtype ComparisonOperator
ComparisonOperator' :: Text -> ComparisonOperator
[fromComparisonOperator] :: ComparisonOperator -> Text
pattern ComparisonOperator_EQUAL :: ComparisonOperator
pattern ComparisonOperator_GREATER :: ComparisonOperator
pattern ComparisonOperator_GREATER_OR_EQUAL :: ComparisonOperator
pattern ComparisonOperator_LESS :: ComparisonOperator
pattern ComparisonOperator_LESS_OR_EQUAL :: ComparisonOperator
pattern ComparisonOperator_NOT_EQUAL :: ComparisonOperator
newtype CustomerActionName
CustomerActionName' :: Text -> CustomerActionName
[fromCustomerActionName] :: CustomerActionName -> Text
pattern CustomerActionName_ACKNOWLEDGE :: CustomerActionName
pattern CustomerActionName_DISABLE :: CustomerActionName
pattern CustomerActionName_ENABLE :: CustomerActionName
pattern CustomerActionName_RESET :: CustomerActionName
pattern CustomerActionName_SNOOZE :: CustomerActionName
newtype ErrorCode
ErrorCode' :: Text -> ErrorCode
[fromErrorCode] :: ErrorCode -> Text
pattern ErrorCode_InternalFailureException :: ErrorCode
pattern ErrorCode_InvalidRequestException :: ErrorCode
pattern ErrorCode_ResourceNotFoundException :: ErrorCode
pattern ErrorCode_ServiceUnavailableException :: ErrorCode
pattern ErrorCode_ThrottlingException :: ErrorCode
newtype EventType
EventType' :: Text -> EventType
[fromEventType] :: EventType -> Text
pattern EventType_STATE_CHANGE :: EventType
newtype TriggerType
TriggerType' :: Text -> TriggerType
[fromTriggerType] :: TriggerType -> Text
pattern TriggerType_SNOOZE_TIMEOUT :: TriggerType

-- | Contains the configuration information of an acknowledge action.
--   
--   <i>See:</i> <a>newAcknowledgeActionConfiguration</a> smart
--   constructor.
data AcknowledgeActionConfiguration
AcknowledgeActionConfiguration' :: Maybe Text -> AcknowledgeActionConfiguration

-- | The note that you can leave when you acknowledge the alarm.
[$sel:note:AcknowledgeActionConfiguration'] :: AcknowledgeActionConfiguration -> Maybe Text

-- | Create a value of <a>AcknowledgeActionConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:note:AcknowledgeActionConfiguration'</a>,
--   <a>acknowledgeActionConfiguration_note</a> - The note that you can
--   leave when you acknowledge the alarm.
newAcknowledgeActionConfiguration :: AcknowledgeActionConfiguration

-- | The note that you can leave when you acknowledge the alarm.
acknowledgeActionConfiguration_note :: Lens' AcknowledgeActionConfiguration (Maybe Text)

-- | Information needed to acknowledge the alarm.
--   
--   <i>See:</i> <a>newAcknowledgeAlarmActionRequest</a> smart constructor.
data AcknowledgeAlarmActionRequest
AcknowledgeAlarmActionRequest' :: Maybe Text -> Maybe Text -> Text -> Text -> AcknowledgeAlarmActionRequest

-- | The value of the key used as a filter to select only the alarms
--   associated with the <a>key</a>.
[$sel:keyValue:AcknowledgeAlarmActionRequest'] :: AcknowledgeAlarmActionRequest -> Maybe Text

-- | The note that you can leave when you acknowledge the alarm.
[$sel:note:AcknowledgeAlarmActionRequest'] :: AcknowledgeAlarmActionRequest -> Maybe Text

-- | The request ID. Each ID must be unique within each batch.
[$sel:requestId:AcknowledgeAlarmActionRequest'] :: AcknowledgeAlarmActionRequest -> Text

-- | The name of the alarm model.
[$sel:alarmModelName:AcknowledgeAlarmActionRequest'] :: AcknowledgeAlarmActionRequest -> Text

-- | Create a value of <a>AcknowledgeAlarmActionRequest</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:keyValue:AcknowledgeAlarmActionRequest'</a>,
--   <a>acknowledgeAlarmActionRequest_keyValue</a> - The value of the key
--   used as a filter to select only the alarms associated with the
--   <a>key</a>.
--   
--   <a>$sel:note:AcknowledgeAlarmActionRequest'</a>,
--   <a>acknowledgeAlarmActionRequest_note</a> - The note that you can
--   leave when you acknowledge the alarm.
--   
--   <a>$sel:requestId:AcknowledgeAlarmActionRequest'</a>,
--   <a>acknowledgeAlarmActionRequest_requestId</a> - The request ID. Each
--   ID must be unique within each batch.
--   
--   <a>$sel:alarmModelName:AcknowledgeAlarmActionRequest'</a>,
--   <a>acknowledgeAlarmActionRequest_alarmModelName</a> - The name of the
--   alarm model.
newAcknowledgeAlarmActionRequest :: Text -> Text -> AcknowledgeAlarmActionRequest

-- | The value of the key used as a filter to select only the alarms
--   associated with the <a>key</a>.
acknowledgeAlarmActionRequest_keyValue :: Lens' AcknowledgeAlarmActionRequest (Maybe Text)

-- | The note that you can leave when you acknowledge the alarm.
acknowledgeAlarmActionRequest_note :: Lens' AcknowledgeAlarmActionRequest (Maybe Text)

-- | The request ID. Each ID must be unique within each batch.
acknowledgeAlarmActionRequest_requestId :: Lens' AcknowledgeAlarmActionRequest Text

-- | The name of the alarm model.
acknowledgeAlarmActionRequest_alarmModelName :: Lens' AcknowledgeAlarmActionRequest Text

-- | Contains information about an alarm.
--   
--   <i>See:</i> <a>newAlarm</a> smart constructor.
data Alarm
Alarm' :: Maybe Text -> Maybe POSIX -> Maybe AlarmState -> Maybe Text -> Maybe Natural -> Maybe POSIX -> Maybe Text -> Alarm

-- | The value of the key used as a filter to select only the alarms
--   associated with the <a>key</a>.
[$sel:keyValue:Alarm'] :: Alarm -> Maybe Text

-- | The time the alarm was created, in the Unix epoch format.
[$sel:creationTime:Alarm'] :: Alarm -> Maybe POSIX

-- | Contains information about the current state of the alarm.
[$sel:alarmState:Alarm'] :: Alarm -> Maybe AlarmState

-- | The name of the alarm model.
[$sel:alarmModelName:Alarm'] :: Alarm -> Maybe Text

-- | A non-negative integer that reflects the severity level of the alarm.
[$sel:severity:Alarm'] :: Alarm -> Maybe Natural

-- | The time the alarm was last updated, in the Unix epoch format.
[$sel:lastUpdateTime:Alarm'] :: Alarm -> Maybe POSIX

-- | The version of the alarm model.
[$sel:alarmModelVersion:Alarm'] :: Alarm -> Maybe Text

-- | Create a value of <a>Alarm</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:keyValue:Alarm'</a>, <a>alarm_keyValue</a> - The value of the
--   key used as a filter to select only the alarms associated with the
--   <a>key</a>.
--   
--   <a>$sel:creationTime:Alarm'</a>, <a>alarm_creationTime</a> - The time
--   the alarm was created, in the Unix epoch format.
--   
--   <a>$sel:alarmState:Alarm'</a>, <a>alarm_alarmState</a> - Contains
--   information about the current state of the alarm.
--   
--   <a>$sel:alarmModelName:Alarm'</a>, <a>alarm_alarmModelName</a> - The
--   name of the alarm model.
--   
--   <a>$sel:severity:Alarm'</a>, <a>alarm_severity</a> - A non-negative
--   integer that reflects the severity level of the alarm.
--   
--   <a>$sel:lastUpdateTime:Alarm'</a>, <a>alarm_lastUpdateTime</a> - The
--   time the alarm was last updated, in the Unix epoch format.
--   
--   <a>$sel:alarmModelVersion:Alarm'</a>, <a>alarm_alarmModelVersion</a> -
--   The version of the alarm model.
newAlarm :: Alarm

-- | The value of the key used as a filter to select only the alarms
--   associated with the <a>key</a>.
alarm_keyValue :: Lens' Alarm (Maybe Text)

-- | The time the alarm was created, in the Unix epoch format.
alarm_creationTime :: Lens' Alarm (Maybe UTCTime)

-- | Contains information about the current state of the alarm.
alarm_alarmState :: Lens' Alarm (Maybe AlarmState)

-- | The name of the alarm model.
alarm_alarmModelName :: Lens' Alarm (Maybe Text)

-- | A non-negative integer that reflects the severity level of the alarm.
alarm_severity :: Lens' Alarm (Maybe Natural)

-- | The time the alarm was last updated, in the Unix epoch format.
alarm_lastUpdateTime :: Lens' Alarm (Maybe UTCTime)

-- | The version of the alarm model.
alarm_alarmModelVersion :: Lens' Alarm (Maybe Text)

-- | Contains information about the current state of the alarm.
--   
--   <i>See:</i> <a>newAlarmState</a> smart constructor.
data AlarmState
AlarmState' :: Maybe CustomerAction -> Maybe AlarmStateName -> Maybe RuleEvaluation -> Maybe SystemEvent -> AlarmState

-- | Contains information about the action that you can take to respond to
--   the alarm.
[$sel:customerAction:AlarmState'] :: AlarmState -> Maybe CustomerAction

-- | The name of the alarm state. The state name can be one of the
--   following values:
--   
--   <ul>
--   <li><tt>DISABLED</tt> - When the alarm is in the <tt>DISABLED</tt>
--   state, it isn't ready to evaluate data. To enable the alarm, you must
--   change the alarm to the <tt>NORMAL</tt> state.</li>
--   <li><tt>NORMAL</tt> - When the alarm is in the <tt>NORMAL</tt> state,
--   it's ready to evaluate data.</li>
--   <li><tt>ACTIVE</tt> - If the alarm is in the <tt>ACTIVE</tt> state,
--   the alarm is invoked.</li>
--   <li><tt>ACKNOWLEDGED</tt> - When the alarm is in the
--   <tt>ACKNOWLEDGED</tt> state, the alarm was invoked and you
--   acknowledged the alarm.</li>
--   <li><tt>SNOOZE_DISABLED</tt> - When the alarm is in the
--   <tt>SNOOZE_DISABLED</tt> state, the alarm is disabled for a specified
--   period of time. After the snooze time, the alarm automatically changes
--   to the <tt>NORMAL</tt> state.</li>
--   <li><tt>LATCHED</tt> - When the alarm is in the <tt>LATCHED</tt>
--   state, the alarm was invoked. However, the data that the alarm is
--   currently evaluating is within the specified range. To change the
--   alarm to the <tt>NORMAL</tt> state, you must acknowledge the
--   alarm.</li>
--   </ul>
[$sel:stateName:AlarmState'] :: AlarmState -> Maybe AlarmStateName

-- | Information needed to evaluate data.
[$sel:ruleEvaluation:AlarmState'] :: AlarmState -> Maybe RuleEvaluation

-- | Contains information about alarm state changes.
[$sel:systemEvent:AlarmState'] :: AlarmState -> Maybe SystemEvent

-- | Create a value of <a>AlarmState</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:customerAction:AlarmState'</a>,
--   <a>alarmState_customerAction</a> - Contains information about the
--   action that you can take to respond to the alarm.
--   
--   <a>$sel:stateName:AlarmState'</a>, <a>alarmState_stateName</a> - The
--   name of the alarm state. The state name can be one of the following
--   values:
--   
--   <ul>
--   <li><tt>DISABLED</tt> - When the alarm is in the <tt>DISABLED</tt>
--   state, it isn't ready to evaluate data. To enable the alarm, you must
--   change the alarm to the <tt>NORMAL</tt> state.</li>
--   <li><tt>NORMAL</tt> - When the alarm is in the <tt>NORMAL</tt> state,
--   it's ready to evaluate data.</li>
--   <li><tt>ACTIVE</tt> - If the alarm is in the <tt>ACTIVE</tt> state,
--   the alarm is invoked.</li>
--   <li><tt>ACKNOWLEDGED</tt> - When the alarm is in the
--   <tt>ACKNOWLEDGED</tt> state, the alarm was invoked and you
--   acknowledged the alarm.</li>
--   <li><tt>SNOOZE_DISABLED</tt> - When the alarm is in the
--   <tt>SNOOZE_DISABLED</tt> state, the alarm is disabled for a specified
--   period of time. After the snooze time, the alarm automatically changes
--   to the <tt>NORMAL</tt> state.</li>
--   <li><tt>LATCHED</tt> - When the alarm is in the <tt>LATCHED</tt>
--   state, the alarm was invoked. However, the data that the alarm is
--   currently evaluating is within the specified range. To change the
--   alarm to the <tt>NORMAL</tt> state, you must acknowledge the
--   alarm.</li>
--   </ul>
--   
--   <a>$sel:ruleEvaluation:AlarmState'</a>,
--   <a>alarmState_ruleEvaluation</a> - Information needed to evaluate
--   data.
--   
--   <a>$sel:systemEvent:AlarmState'</a>, <a>alarmState_systemEvent</a> -
--   Contains information about alarm state changes.
newAlarmState :: AlarmState

-- | Contains information about the action that you can take to respond to
--   the alarm.
alarmState_customerAction :: Lens' AlarmState (Maybe CustomerAction)

-- | The name of the alarm state. The state name can be one of the
--   following values:
--   
--   <ul>
--   <li><tt>DISABLED</tt> - When the alarm is in the <tt>DISABLED</tt>
--   state, it isn't ready to evaluate data. To enable the alarm, you must
--   change the alarm to the <tt>NORMAL</tt> state.</li>
--   <li><tt>NORMAL</tt> - When the alarm is in the <tt>NORMAL</tt> state,
--   it's ready to evaluate data.</li>
--   <li><tt>ACTIVE</tt> - If the alarm is in the <tt>ACTIVE</tt> state,
--   the alarm is invoked.</li>
--   <li><tt>ACKNOWLEDGED</tt> - When the alarm is in the
--   <tt>ACKNOWLEDGED</tt> state, the alarm was invoked and you
--   acknowledged the alarm.</li>
--   <li><tt>SNOOZE_DISABLED</tt> - When the alarm is in the
--   <tt>SNOOZE_DISABLED</tt> state, the alarm is disabled for a specified
--   period of time. After the snooze time, the alarm automatically changes
--   to the <tt>NORMAL</tt> state.</li>
--   <li><tt>LATCHED</tt> - When the alarm is in the <tt>LATCHED</tt>
--   state, the alarm was invoked. However, the data that the alarm is
--   currently evaluating is within the specified range. To change the
--   alarm to the <tt>NORMAL</tt> state, you must acknowledge the
--   alarm.</li>
--   </ul>
alarmState_stateName :: Lens' AlarmState (Maybe AlarmStateName)

-- | Information needed to evaluate data.
alarmState_ruleEvaluation :: Lens' AlarmState (Maybe RuleEvaluation)

-- | Contains information about alarm state changes.
alarmState_systemEvent :: Lens' AlarmState (Maybe SystemEvent)

-- | Contains a summary of an alarm.
--   
--   <i>See:</i> <a>newAlarmSummary</a> smart constructor.
data AlarmSummary
AlarmSummary' :: Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe AlarmStateName -> Maybe POSIX -> Maybe Text -> AlarmSummary

-- | The value of the key used as a filter to select only the alarms
--   associated with the <a>key</a>.
[$sel:keyValue:AlarmSummary'] :: AlarmSummary -> Maybe Text

-- | The time the alarm was created, in the Unix epoch format.
[$sel:creationTime:AlarmSummary'] :: AlarmSummary -> Maybe POSIX

-- | The name of the alarm model.
[$sel:alarmModelName:AlarmSummary'] :: AlarmSummary -> Maybe Text

-- | The name of the alarm state. The state name can be one of the
--   following values:
--   
--   <ul>
--   <li><tt>DISABLED</tt> - When the alarm is in the <tt>DISABLED</tt>
--   state, it isn't ready to evaluate data. To enable the alarm, you must
--   change the alarm to the <tt>NORMAL</tt> state.</li>
--   <li><tt>NORMAL</tt> - When the alarm is in the <tt>NORMAL</tt> state,
--   it's ready to evaluate data.</li>
--   <li><tt>ACTIVE</tt> - If the alarm is in the <tt>ACTIVE</tt> state,
--   the alarm is invoked.</li>
--   <li><tt>ACKNOWLEDGED</tt> - When the alarm is in the
--   <tt>ACKNOWLEDGED</tt> state, the alarm was invoked and you
--   acknowledged the alarm.</li>
--   <li><tt>SNOOZE_DISABLED</tt> - When the alarm is in the
--   <tt>SNOOZE_DISABLED</tt> state, the alarm is disabled for a specified
--   period of time. After the snooze time, the alarm automatically changes
--   to the <tt>NORMAL</tt> state.</li>
--   <li><tt>LATCHED</tt> - When the alarm is in the <tt>LATCHED</tt>
--   state, the alarm was invoked. However, the data that the alarm is
--   currently evaluating is within the specified range. To change the
--   alarm to the <tt>NORMAL</tt> state, you must acknowledge the
--   alarm.</li>
--   </ul>
[$sel:stateName:AlarmSummary'] :: AlarmSummary -> Maybe AlarmStateName

-- | The time the alarm was last updated, in the Unix epoch format.
[$sel:lastUpdateTime:AlarmSummary'] :: AlarmSummary -> Maybe POSIX

-- | The version of the alarm model.
[$sel:alarmModelVersion:AlarmSummary'] :: AlarmSummary -> Maybe Text

-- | Create a value of <a>AlarmSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:keyValue:AlarmSummary'</a>, <a>alarmSummary_keyValue</a> - The
--   value of the key used as a filter to select only the alarms associated
--   with the <a>key</a>.
--   
--   <a>$sel:creationTime:AlarmSummary'</a>,
--   <a>alarmSummary_creationTime</a> - The time the alarm was created, in
--   the Unix epoch format.
--   
--   <a>$sel:alarmModelName:AlarmSummary'</a>,
--   <a>alarmSummary_alarmModelName</a> - The name of the alarm model.
--   
--   <a>$sel:stateName:AlarmSummary'</a>, <a>alarmSummary_stateName</a> -
--   The name of the alarm state. The state name can be one of the
--   following values:
--   
--   <ul>
--   <li><tt>DISABLED</tt> - When the alarm is in the <tt>DISABLED</tt>
--   state, it isn't ready to evaluate data. To enable the alarm, you must
--   change the alarm to the <tt>NORMAL</tt> state.</li>
--   <li><tt>NORMAL</tt> - When the alarm is in the <tt>NORMAL</tt> state,
--   it's ready to evaluate data.</li>
--   <li><tt>ACTIVE</tt> - If the alarm is in the <tt>ACTIVE</tt> state,
--   the alarm is invoked.</li>
--   <li><tt>ACKNOWLEDGED</tt> - When the alarm is in the
--   <tt>ACKNOWLEDGED</tt> state, the alarm was invoked and you
--   acknowledged the alarm.</li>
--   <li><tt>SNOOZE_DISABLED</tt> - When the alarm is in the
--   <tt>SNOOZE_DISABLED</tt> state, the alarm is disabled for a specified
--   period of time. After the snooze time, the alarm automatically changes
--   to the <tt>NORMAL</tt> state.</li>
--   <li><tt>LATCHED</tt> - When the alarm is in the <tt>LATCHED</tt>
--   state, the alarm was invoked. However, the data that the alarm is
--   currently evaluating is within the specified range. To change the
--   alarm to the <tt>NORMAL</tt> state, you must acknowledge the
--   alarm.</li>
--   </ul>
--   
--   <a>$sel:lastUpdateTime:AlarmSummary'</a>,
--   <a>alarmSummary_lastUpdateTime</a> - The time the alarm was last
--   updated, in the Unix epoch format.
--   
--   <a>$sel:alarmModelVersion:AlarmSummary'</a>,
--   <a>alarmSummary_alarmModelVersion</a> - The version of the alarm
--   model.
newAlarmSummary :: AlarmSummary

-- | The value of the key used as a filter to select only the alarms
--   associated with the <a>key</a>.
alarmSummary_keyValue :: Lens' AlarmSummary (Maybe Text)

-- | The time the alarm was created, in the Unix epoch format.
alarmSummary_creationTime :: Lens' AlarmSummary (Maybe UTCTime)

-- | The name of the alarm model.
alarmSummary_alarmModelName :: Lens' AlarmSummary (Maybe Text)

-- | The name of the alarm state. The state name can be one of the
--   following values:
--   
--   <ul>
--   <li><tt>DISABLED</tt> - When the alarm is in the <tt>DISABLED</tt>
--   state, it isn't ready to evaluate data. To enable the alarm, you must
--   change the alarm to the <tt>NORMAL</tt> state.</li>
--   <li><tt>NORMAL</tt> - When the alarm is in the <tt>NORMAL</tt> state,
--   it's ready to evaluate data.</li>
--   <li><tt>ACTIVE</tt> - If the alarm is in the <tt>ACTIVE</tt> state,
--   the alarm is invoked.</li>
--   <li><tt>ACKNOWLEDGED</tt> - When the alarm is in the
--   <tt>ACKNOWLEDGED</tt> state, the alarm was invoked and you
--   acknowledged the alarm.</li>
--   <li><tt>SNOOZE_DISABLED</tt> - When the alarm is in the
--   <tt>SNOOZE_DISABLED</tt> state, the alarm is disabled for a specified
--   period of time. After the snooze time, the alarm automatically changes
--   to the <tt>NORMAL</tt> state.</li>
--   <li><tt>LATCHED</tt> - When the alarm is in the <tt>LATCHED</tt>
--   state, the alarm was invoked. However, the data that the alarm is
--   currently evaluating is within the specified range. To change the
--   alarm to the <tt>NORMAL</tt> state, you must acknowledge the
--   alarm.</li>
--   </ul>
alarmSummary_stateName :: Lens' AlarmSummary (Maybe AlarmStateName)

-- | The time the alarm was last updated, in the Unix epoch format.
alarmSummary_lastUpdateTime :: Lens' AlarmSummary (Maybe UTCTime)

-- | The version of the alarm model.
alarmSummary_alarmModelVersion :: Lens' AlarmSummary (Maybe Text)

-- | Contains error messages associated with one of the following requests:
--   
--   <ul>
--   <li><a>BatchAcknowledgeAlarm</a></li>
--   <li><a>BatchDisableAlarm</a></li>
--   <li><a>BatchEnableAlarm</a></li>
--   <li><a>BatchResetAlarm</a></li>
--   <li><a>BatchSnoozeAlarm</a></li>
--   </ul>
--   
--   <i>See:</i> <a>newBatchAlarmActionErrorEntry</a> smart constructor.
data BatchAlarmActionErrorEntry
BatchAlarmActionErrorEntry' :: Maybe Text -> Maybe ErrorCode -> Maybe Text -> BatchAlarmActionErrorEntry

-- | The request ID. Each ID must be unique within each batch.
[$sel:requestId:BatchAlarmActionErrorEntry'] :: BatchAlarmActionErrorEntry -> Maybe Text

-- | The error code.
[$sel:errorCode:BatchAlarmActionErrorEntry'] :: BatchAlarmActionErrorEntry -> Maybe ErrorCode

-- | A message that describes the error.
[$sel:errorMessage:BatchAlarmActionErrorEntry'] :: BatchAlarmActionErrorEntry -> Maybe Text

-- | Create a value of <a>BatchAlarmActionErrorEntry</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:requestId:BatchAlarmActionErrorEntry'</a>,
--   <a>batchAlarmActionErrorEntry_requestId</a> - The request ID. Each ID
--   must be unique within each batch.
--   
--   <a>$sel:errorCode:BatchAlarmActionErrorEntry'</a>,
--   <a>batchAlarmActionErrorEntry_errorCode</a> - The error code.
--   
--   <a>$sel:errorMessage:BatchAlarmActionErrorEntry'</a>,
--   <a>batchAlarmActionErrorEntry_errorMessage</a> - A message that
--   describes the error.
newBatchAlarmActionErrorEntry :: BatchAlarmActionErrorEntry

-- | The request ID. Each ID must be unique within each batch.
batchAlarmActionErrorEntry_requestId :: Lens' BatchAlarmActionErrorEntry (Maybe Text)

-- | The error code.
batchAlarmActionErrorEntry_errorCode :: Lens' BatchAlarmActionErrorEntry (Maybe ErrorCode)

-- | A message that describes the error.
batchAlarmActionErrorEntry_errorMessage :: Lens' BatchAlarmActionErrorEntry (Maybe Text)

-- | Contains information about the errors encountered.
--   
--   <i>See:</i> <a>newBatchPutMessageErrorEntry</a> smart constructor.
data BatchPutMessageErrorEntry
BatchPutMessageErrorEntry' :: Maybe ErrorCode -> Maybe Text -> Maybe Text -> BatchPutMessageErrorEntry

-- | The error code.
[$sel:errorCode:BatchPutMessageErrorEntry'] :: BatchPutMessageErrorEntry -> Maybe ErrorCode

-- | A message that describes the error.
[$sel:errorMessage:BatchPutMessageErrorEntry'] :: BatchPutMessageErrorEntry -> Maybe Text

-- | The ID of the message that caused the error. (See the value
--   corresponding to the <tt>"messageId"</tt> key in the
--   <tt>"message"</tt> object.)
[$sel:messageId:BatchPutMessageErrorEntry'] :: BatchPutMessageErrorEntry -> Maybe Text

-- | Create a value of <a>BatchPutMessageErrorEntry</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:errorCode:BatchPutMessageErrorEntry'</a>,
--   <a>batchPutMessageErrorEntry_errorCode</a> - The error code.
--   
--   <a>$sel:errorMessage:BatchPutMessageErrorEntry'</a>,
--   <a>batchPutMessageErrorEntry_errorMessage</a> - A message that
--   describes the error.
--   
--   <a>$sel:messageId:BatchPutMessageErrorEntry'</a>,
--   <a>batchPutMessageErrorEntry_messageId</a> - The ID of the message
--   that caused the error. (See the value corresponding to the
--   <tt>"messageId"</tt> key in the <tt>"message"</tt> object.)
newBatchPutMessageErrorEntry :: BatchPutMessageErrorEntry

-- | The error code.
batchPutMessageErrorEntry_errorCode :: Lens' BatchPutMessageErrorEntry (Maybe ErrorCode)

-- | A message that describes the error.
batchPutMessageErrorEntry_errorMessage :: Lens' BatchPutMessageErrorEntry (Maybe Text)

-- | The ID of the message that caused the error. (See the value
--   corresponding to the <tt>"messageId"</tt> key in the
--   <tt>"message"</tt> object.)
batchPutMessageErrorEntry_messageId :: Lens' BatchPutMessageErrorEntry (Maybe Text)

-- | Information about the error that occurred when attempting to update a
--   detector.
--   
--   <i>See:</i> <a>newBatchUpdateDetectorErrorEntry</a> smart constructor.
data BatchUpdateDetectorErrorEntry
BatchUpdateDetectorErrorEntry' :: Maybe ErrorCode -> Maybe Text -> Maybe Text -> BatchUpdateDetectorErrorEntry

-- | The error code.
[$sel:errorCode:BatchUpdateDetectorErrorEntry'] :: BatchUpdateDetectorErrorEntry -> Maybe ErrorCode

-- | A message that describes the error.
[$sel:errorMessage:BatchUpdateDetectorErrorEntry'] :: BatchUpdateDetectorErrorEntry -> Maybe Text

-- | The <tt>"messageId"</tt> of the update request that caused the error.
--   (The value of the <tt>"messageId"</tt> in the update request
--   <tt>"Detector"</tt> object.)
[$sel:messageId:BatchUpdateDetectorErrorEntry'] :: BatchUpdateDetectorErrorEntry -> Maybe Text

-- | Create a value of <a>BatchUpdateDetectorErrorEntry</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:errorCode:BatchUpdateDetectorErrorEntry'</a>,
--   <a>batchUpdateDetectorErrorEntry_errorCode</a> - The error code.
--   
--   <a>$sel:errorMessage:BatchUpdateDetectorErrorEntry'</a>,
--   <a>batchUpdateDetectorErrorEntry_errorMessage</a> - A message that
--   describes the error.
--   
--   <a>$sel:messageId:BatchUpdateDetectorErrorEntry'</a>,
--   <a>batchUpdateDetectorErrorEntry_messageId</a> - The
--   <tt>"messageId"</tt> of the update request that caused the error. (The
--   value of the <tt>"messageId"</tt> in the update request
--   <tt>"Detector"</tt> object.)
newBatchUpdateDetectorErrorEntry :: BatchUpdateDetectorErrorEntry

-- | The error code.
batchUpdateDetectorErrorEntry_errorCode :: Lens' BatchUpdateDetectorErrorEntry (Maybe ErrorCode)

-- | A message that describes the error.
batchUpdateDetectorErrorEntry_errorMessage :: Lens' BatchUpdateDetectorErrorEntry (Maybe Text)

-- | The <tt>"messageId"</tt> of the update request that caused the error.
--   (The value of the <tt>"messageId"</tt> in the update request
--   <tt>"Detector"</tt> object.)
batchUpdateDetectorErrorEntry_messageId :: Lens' BatchUpdateDetectorErrorEntry (Maybe Text)

-- | Contains information about the action that you can take to respond to
--   the alarm.
--   
--   <i>See:</i> <a>newCustomerAction</a> smart constructor.
data CustomerAction
CustomerAction' :: Maybe ResetActionConfiguration -> Maybe CustomerActionName -> Maybe SnoozeActionConfiguration -> Maybe EnableActionConfiguration -> Maybe DisableActionConfiguration -> Maybe AcknowledgeActionConfiguration -> CustomerAction

-- | Contains the configuration information of a reset action.
[$sel:resetActionConfiguration:CustomerAction'] :: CustomerAction -> Maybe ResetActionConfiguration

-- | The name of the action. The action name can be one of the following
--   values:
--   
--   <ul>
--   <li><tt>SNOOZE</tt> - When you snooze the alarm, the alarm state
--   changes to <tt>SNOOZE_DISABLED</tt>.</li>
--   <li><tt>ENABLE</tt> - When you enable the alarm, the alarm state
--   changes to <tt>NORMAL</tt>.</li>
--   <li><tt>DISABLE</tt> - When you disable the alarm, the alarm state
--   changes to <tt>DISABLED</tt>.</li>
--   <li><tt>ACKNOWLEDGE</tt> - When you acknowledge the alarm, the alarm
--   state changes to <tt>ACKNOWLEDGED</tt>.</li>
--   <li><tt>RESET</tt> - When you reset the alarm, the alarm state changes
--   to <tt>NORMAL</tt>.</li>
--   </ul>
--   
--   For more information, see the <a>AlarmState</a> API.
[$sel:actionName:CustomerAction'] :: CustomerAction -> Maybe CustomerActionName

-- | Contains the configuration information of a snooze action.
[$sel:snoozeActionConfiguration:CustomerAction'] :: CustomerAction -> Maybe SnoozeActionConfiguration

-- | Contains the configuration information of an enable action.
[$sel:enableActionConfiguration:CustomerAction'] :: CustomerAction -> Maybe EnableActionConfiguration

-- | Contains the configuration information of a disable action.
[$sel:disableActionConfiguration:CustomerAction'] :: CustomerAction -> Maybe DisableActionConfiguration

-- | Contains the configuration information of an acknowledge action.
[$sel:acknowledgeActionConfiguration:CustomerAction'] :: CustomerAction -> Maybe AcknowledgeActionConfiguration

-- | Create a value of <a>CustomerAction</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resetActionConfiguration:CustomerAction'</a>,
--   <a>customerAction_resetActionConfiguration</a> - Contains the
--   configuration information of a reset action.
--   
--   <a>$sel:actionName:CustomerAction'</a>,
--   <a>customerAction_actionName</a> - The name of the action. The action
--   name can be one of the following values:
--   
--   <ul>
--   <li><tt>SNOOZE</tt> - When you snooze the alarm, the alarm state
--   changes to <tt>SNOOZE_DISABLED</tt>.</li>
--   <li><tt>ENABLE</tt> - When you enable the alarm, the alarm state
--   changes to <tt>NORMAL</tt>.</li>
--   <li><tt>DISABLE</tt> - When you disable the alarm, the alarm state
--   changes to <tt>DISABLED</tt>.</li>
--   <li><tt>ACKNOWLEDGE</tt> - When you acknowledge the alarm, the alarm
--   state changes to <tt>ACKNOWLEDGED</tt>.</li>
--   <li><tt>RESET</tt> - When you reset the alarm, the alarm state changes
--   to <tt>NORMAL</tt>.</li>
--   </ul>
--   
--   For more information, see the <a>AlarmState</a> API.
--   
--   <a>$sel:snoozeActionConfiguration:CustomerAction'</a>,
--   <a>customerAction_snoozeActionConfiguration</a> - Contains the
--   configuration information of a snooze action.
--   
--   <a>$sel:enableActionConfiguration:CustomerAction'</a>,
--   <a>customerAction_enableActionConfiguration</a> - Contains the
--   configuration information of an enable action.
--   
--   <a>$sel:disableActionConfiguration:CustomerAction'</a>,
--   <a>customerAction_disableActionConfiguration</a> - Contains the
--   configuration information of a disable action.
--   
--   <a>$sel:acknowledgeActionConfiguration:CustomerAction'</a>,
--   <a>customerAction_acknowledgeActionConfiguration</a> - Contains the
--   configuration information of an acknowledge action.
newCustomerAction :: CustomerAction

-- | Contains the configuration information of a reset action.
customerAction_resetActionConfiguration :: Lens' CustomerAction (Maybe ResetActionConfiguration)

-- | The name of the action. The action name can be one of the following
--   values:
--   
--   <ul>
--   <li><tt>SNOOZE</tt> - When you snooze the alarm, the alarm state
--   changes to <tt>SNOOZE_DISABLED</tt>.</li>
--   <li><tt>ENABLE</tt> - When you enable the alarm, the alarm state
--   changes to <tt>NORMAL</tt>.</li>
--   <li><tt>DISABLE</tt> - When you disable the alarm, the alarm state
--   changes to <tt>DISABLED</tt>.</li>
--   <li><tt>ACKNOWLEDGE</tt> - When you acknowledge the alarm, the alarm
--   state changes to <tt>ACKNOWLEDGED</tt>.</li>
--   <li><tt>RESET</tt> - When you reset the alarm, the alarm state changes
--   to <tt>NORMAL</tt>.</li>
--   </ul>
--   
--   For more information, see the <a>AlarmState</a> API.
customerAction_actionName :: Lens' CustomerAction (Maybe CustomerActionName)

-- | Contains the configuration information of a snooze action.
customerAction_snoozeActionConfiguration :: Lens' CustomerAction (Maybe SnoozeActionConfiguration)

-- | Contains the configuration information of an enable action.
customerAction_enableActionConfiguration :: Lens' CustomerAction (Maybe EnableActionConfiguration)

-- | Contains the configuration information of a disable action.
customerAction_disableActionConfiguration :: Lens' CustomerAction (Maybe DisableActionConfiguration)

-- | Contains the configuration information of an acknowledge action.
customerAction_acknowledgeActionConfiguration :: Lens' CustomerAction (Maybe AcknowledgeActionConfiguration)

-- | Information about the detector (instance).
--   
--   <i>See:</i> <a>newDetector</a> smart constructor.
data Detector
Detector' :: Maybe Text -> Maybe POSIX -> Maybe DetectorState -> Maybe Text -> Maybe Text -> Maybe POSIX -> Detector

-- | The value of the key (identifying the device or system) that caused
--   the creation of this detector (instance).
[$sel:keyValue:Detector'] :: Detector -> Maybe Text

-- | The time the detector (instance) was created.
[$sel:creationTime:Detector'] :: Detector -> Maybe POSIX

-- | The current state of the detector (instance).
[$sel:state:Detector'] :: Detector -> Maybe DetectorState

-- | The name of the detector model that created this detector (instance).
[$sel:detectorModelName:Detector'] :: Detector -> Maybe Text

-- | The version of the detector model that created this detector
--   (instance).
[$sel:detectorModelVersion:Detector'] :: Detector -> Maybe Text

-- | The time the detector (instance) was last updated.
[$sel:lastUpdateTime:Detector'] :: Detector -> Maybe POSIX

-- | Create a value of <a>Detector</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:keyValue:Detector'</a>, <a>detector_keyValue</a> - The value
--   of the key (identifying the device or system) that caused the creation
--   of this detector (instance).
--   
--   <a>$sel:creationTime:Detector'</a>, <a>detector_creationTime</a> - The
--   time the detector (instance) was created.
--   
--   <a>$sel:state:Detector'</a>, <a>detector_state</a> - The current state
--   of the detector (instance).
--   
--   <a>$sel:detectorModelName:Detector'</a>,
--   <a>detector_detectorModelName</a> - The name of the detector model
--   that created this detector (instance).
--   
--   <a>$sel:detectorModelVersion:Detector'</a>,
--   <a>detector_detectorModelVersion</a> - The version of the detector
--   model that created this detector (instance).
--   
--   <a>$sel:lastUpdateTime:Detector'</a>, <a>detector_lastUpdateTime</a> -
--   The time the detector (instance) was last updated.
newDetector :: Detector

-- | The value of the key (identifying the device or system) that caused
--   the creation of this detector (instance).
detector_keyValue :: Lens' Detector (Maybe Text)

-- | The time the detector (instance) was created.
detector_creationTime :: Lens' Detector (Maybe UTCTime)

-- | The current state of the detector (instance).
detector_state :: Lens' Detector (Maybe DetectorState)

-- | The name of the detector model that created this detector (instance).
detector_detectorModelName :: Lens' Detector (Maybe Text)

-- | The version of the detector model that created this detector
--   (instance).
detector_detectorModelVersion :: Lens' Detector (Maybe Text)

-- | The time the detector (instance) was last updated.
detector_lastUpdateTime :: Lens' Detector (Maybe UTCTime)

-- | Information about the current state of the detector instance.
--   
--   <i>See:</i> <a>newDetectorState</a> smart constructor.
data DetectorState
DetectorState' :: Text -> [Variable] -> [Timer] -> DetectorState

-- | The name of the state.
[$sel:stateName:DetectorState'] :: DetectorState -> Text

-- | The current values of the detector's variables.
[$sel:variables:DetectorState'] :: DetectorState -> [Variable]

-- | The current state of the detector's timers.
[$sel:timers:DetectorState'] :: DetectorState -> [Timer]

-- | Create a value of <a>DetectorState</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:stateName:DetectorState'</a>, <a>detectorState_stateName</a> -
--   The name of the state.
--   
--   <a>$sel:variables:DetectorState'</a>, <a>detectorState_variables</a> -
--   The current values of the detector's variables.
--   
--   <a>$sel:timers:DetectorState'</a>, <a>detectorState_timers</a> - The
--   current state of the detector's timers.
newDetectorState :: Text -> DetectorState

-- | The name of the state.
detectorState_stateName :: Lens' DetectorState Text

-- | The current values of the detector's variables.
detectorState_variables :: Lens' DetectorState [Variable]

-- | The current state of the detector's timers.
detectorState_timers :: Lens' DetectorState [Timer]

-- | The new state, variable values, and timer settings of the detector
--   (instance).
--   
--   <i>See:</i> <a>newDetectorStateDefinition</a> smart constructor.
data DetectorStateDefinition
DetectorStateDefinition' :: Text -> [VariableDefinition] -> [TimerDefinition] -> DetectorStateDefinition

-- | The name of the new state of the detector (instance).
[$sel:stateName:DetectorStateDefinition'] :: DetectorStateDefinition -> Text

-- | The new values of the detector's variables. Any variable whose value
--   isn't specified is cleared.
[$sel:variables:DetectorStateDefinition'] :: DetectorStateDefinition -> [VariableDefinition]

-- | The new values of the detector's timers. Any timer whose value isn't
--   specified is cleared, and its timeout event won't occur.
[$sel:timers:DetectorStateDefinition'] :: DetectorStateDefinition -> [TimerDefinition]

-- | Create a value of <a>DetectorStateDefinition</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:stateName:DetectorStateDefinition'</a>,
--   <a>detectorStateDefinition_stateName</a> - The name of the new state
--   of the detector (instance).
--   
--   <a>$sel:variables:DetectorStateDefinition'</a>,
--   <a>detectorStateDefinition_variables</a> - The new values of the
--   detector's variables. Any variable whose value isn't specified is
--   cleared.
--   
--   <a>$sel:timers:DetectorStateDefinition'</a>,
--   <a>detectorStateDefinition_timers</a> - The new values of the
--   detector's timers. Any timer whose value isn't specified is cleared,
--   and its timeout event won't occur.
newDetectorStateDefinition :: Text -> DetectorStateDefinition

-- | The name of the new state of the detector (instance).
detectorStateDefinition_stateName :: Lens' DetectorStateDefinition Text

-- | The new values of the detector's variables. Any variable whose value
--   isn't specified is cleared.
detectorStateDefinition_variables :: Lens' DetectorStateDefinition [VariableDefinition]

-- | The new values of the detector's timers. Any timer whose value isn't
--   specified is cleared, and its timeout event won't occur.
detectorStateDefinition_timers :: Lens' DetectorStateDefinition [TimerDefinition]

-- | Information about the detector state.
--   
--   <i>See:</i> <a>newDetectorStateSummary</a> smart constructor.
data DetectorStateSummary
DetectorStateSummary' :: Maybe Text -> DetectorStateSummary

-- | The name of the state.
[$sel:stateName:DetectorStateSummary'] :: DetectorStateSummary -> Maybe Text

-- | Create a value of <a>DetectorStateSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:stateName:DetectorStateSummary'</a>,
--   <a>detectorStateSummary_stateName</a> - The name of the state.
newDetectorStateSummary :: DetectorStateSummary

-- | The name of the state.
detectorStateSummary_stateName :: Lens' DetectorStateSummary (Maybe Text)

-- | Information about the detector (instance).
--   
--   <i>See:</i> <a>newDetectorSummary</a> smart constructor.
data DetectorSummary
DetectorSummary' :: Maybe Text -> Maybe POSIX -> Maybe DetectorStateSummary -> Maybe Text -> Maybe Text -> Maybe POSIX -> DetectorSummary

-- | The value of the key (identifying the device or system) that caused
--   the creation of this detector (instance).
[$sel:keyValue:DetectorSummary'] :: DetectorSummary -> Maybe Text

-- | The time the detector (instance) was created.
[$sel:creationTime:DetectorSummary'] :: DetectorSummary -> Maybe POSIX

-- | The current state of the detector (instance).
[$sel:state:DetectorSummary'] :: DetectorSummary -> Maybe DetectorStateSummary

-- | The name of the detector model that created this detector (instance).
[$sel:detectorModelName:DetectorSummary'] :: DetectorSummary -> Maybe Text

-- | The version of the detector model that created this detector
--   (instance).
[$sel:detectorModelVersion:DetectorSummary'] :: DetectorSummary -> Maybe Text

-- | The time the detector (instance) was last updated.
[$sel:lastUpdateTime:DetectorSummary'] :: DetectorSummary -> Maybe POSIX

-- | Create a value of <a>DetectorSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:keyValue:DetectorSummary'</a>, <a>detectorSummary_keyValue</a>
--   - The value of the key (identifying the device or system) that caused
--   the creation of this detector (instance).
--   
--   <a>$sel:creationTime:DetectorSummary'</a>,
--   <a>detectorSummary_creationTime</a> - The time the detector (instance)
--   was created.
--   
--   <a>$sel:state:DetectorSummary'</a>, <a>detectorSummary_state</a> - The
--   current state of the detector (instance).
--   
--   <a>$sel:detectorModelName:DetectorSummary'</a>,
--   <a>detectorSummary_detectorModelName</a> - The name of the detector
--   model that created this detector (instance).
--   
--   <a>$sel:detectorModelVersion:DetectorSummary'</a>,
--   <a>detectorSummary_detectorModelVersion</a> - The version of the
--   detector model that created this detector (instance).
--   
--   <a>$sel:lastUpdateTime:DetectorSummary'</a>,
--   <a>detectorSummary_lastUpdateTime</a> - The time the detector
--   (instance) was last updated.
newDetectorSummary :: DetectorSummary

-- | The value of the key (identifying the device or system) that caused
--   the creation of this detector (instance).
detectorSummary_keyValue :: Lens' DetectorSummary (Maybe Text)

-- | The time the detector (instance) was created.
detectorSummary_creationTime :: Lens' DetectorSummary (Maybe UTCTime)

-- | The current state of the detector (instance).
detectorSummary_state :: Lens' DetectorSummary (Maybe DetectorStateSummary)

-- | The name of the detector model that created this detector (instance).
detectorSummary_detectorModelName :: Lens' DetectorSummary (Maybe Text)

-- | The version of the detector model that created this detector
--   (instance).
detectorSummary_detectorModelVersion :: Lens' DetectorSummary (Maybe Text)

-- | The time the detector (instance) was last updated.
detectorSummary_lastUpdateTime :: Lens' DetectorSummary (Maybe UTCTime)

-- | Contains the configuration information of a disable action.
--   
--   <i>See:</i> <a>newDisableActionConfiguration</a> smart constructor.
data DisableActionConfiguration
DisableActionConfiguration' :: Maybe Text -> DisableActionConfiguration

-- | The note that you can leave when you disable the alarm.
[$sel:note:DisableActionConfiguration'] :: DisableActionConfiguration -> Maybe Text

-- | Create a value of <a>DisableActionConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:note:DisableActionConfiguration'</a>,
--   <a>disableActionConfiguration_note</a> - The note that you can leave
--   when you disable the alarm.
newDisableActionConfiguration :: DisableActionConfiguration

-- | The note that you can leave when you disable the alarm.
disableActionConfiguration_note :: Lens' DisableActionConfiguration (Maybe Text)

-- | Information used to disable the alarm.
--   
--   <i>See:</i> <a>newDisableAlarmActionRequest</a> smart constructor.
data DisableAlarmActionRequest
DisableAlarmActionRequest' :: Maybe Text -> Maybe Text -> Text -> Text -> DisableAlarmActionRequest

-- | The value of the key used as a filter to select only the alarms
--   associated with the <a>key</a>.
[$sel:keyValue:DisableAlarmActionRequest'] :: DisableAlarmActionRequest -> Maybe Text

-- | The note that you can leave when you disable the alarm.
[$sel:note:DisableAlarmActionRequest'] :: DisableAlarmActionRequest -> Maybe Text

-- | The request ID. Each ID must be unique within each batch.
[$sel:requestId:DisableAlarmActionRequest'] :: DisableAlarmActionRequest -> Text

-- | The name of the alarm model.
[$sel:alarmModelName:DisableAlarmActionRequest'] :: DisableAlarmActionRequest -> Text

-- | Create a value of <a>DisableAlarmActionRequest</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:keyValue:DisableAlarmActionRequest'</a>,
--   <a>disableAlarmActionRequest_keyValue</a> - The value of the key used
--   as a filter to select only the alarms associated with the <a>key</a>.
--   
--   <a>$sel:note:DisableAlarmActionRequest'</a>,
--   <a>disableAlarmActionRequest_note</a> - The note that you can leave
--   when you disable the alarm.
--   
--   <a>$sel:requestId:DisableAlarmActionRequest'</a>,
--   <a>disableAlarmActionRequest_requestId</a> - The request ID. Each ID
--   must be unique within each batch.
--   
--   <a>$sel:alarmModelName:DisableAlarmActionRequest'</a>,
--   <a>disableAlarmActionRequest_alarmModelName</a> - The name of the
--   alarm model.
newDisableAlarmActionRequest :: Text -> Text -> DisableAlarmActionRequest

-- | The value of the key used as a filter to select only the alarms
--   associated with the <a>key</a>.
disableAlarmActionRequest_keyValue :: Lens' DisableAlarmActionRequest (Maybe Text)

-- | The note that you can leave when you disable the alarm.
disableAlarmActionRequest_note :: Lens' DisableAlarmActionRequest (Maybe Text)

-- | The request ID. Each ID must be unique within each batch.
disableAlarmActionRequest_requestId :: Lens' DisableAlarmActionRequest Text

-- | The name of the alarm model.
disableAlarmActionRequest_alarmModelName :: Lens' DisableAlarmActionRequest Text

-- | Contains the configuration information of an enable action.
--   
--   <i>See:</i> <a>newEnableActionConfiguration</a> smart constructor.
data EnableActionConfiguration
EnableActionConfiguration' :: Maybe Text -> EnableActionConfiguration

-- | The note that you can leave when you enable the alarm.
[$sel:note:EnableActionConfiguration'] :: EnableActionConfiguration -> Maybe Text

-- | Create a value of <a>EnableActionConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:note:EnableActionConfiguration'</a>,
--   <a>enableActionConfiguration_note</a> - The note that you can leave
--   when you enable the alarm.
newEnableActionConfiguration :: EnableActionConfiguration

-- | The note that you can leave when you enable the alarm.
enableActionConfiguration_note :: Lens' EnableActionConfiguration (Maybe Text)

-- | Information needed to enable the alarm.
--   
--   <i>See:</i> <a>newEnableAlarmActionRequest</a> smart constructor.
data EnableAlarmActionRequest
EnableAlarmActionRequest' :: Maybe Text -> Maybe Text -> Text -> Text -> EnableAlarmActionRequest

-- | The value of the key used as a filter to select only the alarms
--   associated with the <a>key</a>.
[$sel:keyValue:EnableAlarmActionRequest'] :: EnableAlarmActionRequest -> Maybe Text

-- | The note that you can leave when you enable the alarm.
[$sel:note:EnableAlarmActionRequest'] :: EnableAlarmActionRequest -> Maybe Text

-- | The request ID. Each ID must be unique within each batch.
[$sel:requestId:EnableAlarmActionRequest'] :: EnableAlarmActionRequest -> Text

-- | The name of the alarm model.
[$sel:alarmModelName:EnableAlarmActionRequest'] :: EnableAlarmActionRequest -> Text

-- | Create a value of <a>EnableAlarmActionRequest</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:keyValue:EnableAlarmActionRequest'</a>,
--   <a>enableAlarmActionRequest_keyValue</a> - The value of the key used
--   as a filter to select only the alarms associated with the <a>key</a>.
--   
--   <a>$sel:note:EnableAlarmActionRequest'</a>,
--   <a>enableAlarmActionRequest_note</a> - The note that you can leave
--   when you enable the alarm.
--   
--   <a>$sel:requestId:EnableAlarmActionRequest'</a>,
--   <a>enableAlarmActionRequest_requestId</a> - The request ID. Each ID
--   must be unique within each batch.
--   
--   <a>$sel:alarmModelName:EnableAlarmActionRequest'</a>,
--   <a>enableAlarmActionRequest_alarmModelName</a> - The name of the alarm
--   model.
newEnableAlarmActionRequest :: Text -> Text -> EnableAlarmActionRequest

-- | The value of the key used as a filter to select only the alarms
--   associated with the <a>key</a>.
enableAlarmActionRequest_keyValue :: Lens' EnableAlarmActionRequest (Maybe Text)

-- | The note that you can leave when you enable the alarm.
enableAlarmActionRequest_note :: Lens' EnableAlarmActionRequest (Maybe Text)

-- | The request ID. Each ID must be unique within each batch.
enableAlarmActionRequest_requestId :: Lens' EnableAlarmActionRequest Text

-- | The name of the alarm model.
enableAlarmActionRequest_alarmModelName :: Lens' EnableAlarmActionRequest Text

-- | Information about a message.
--   
--   <i>See:</i> <a>newMessage</a> smart constructor.
data Message
Message' :: Maybe TimestampValue -> Text -> Text -> Base64 -> Message

-- | The timestamp associated with the message.
[$sel:timestamp:Message'] :: Message -> Maybe TimestampValue

-- | The ID to assign to the message. Within each batch sent, each
--   <tt>"messageId"</tt> must be unique.
[$sel:messageId:Message'] :: Message -> Text

-- | The name of the input into which the message payload is transformed.
[$sel:inputName:Message'] :: Message -> Text

-- | The payload of the message. This can be a JSON string or a
--   Base-64-encoded string representing binary data (in which case you
--   must decode it).
[$sel:payload:Message'] :: Message -> Base64

-- | Create a value of <a>Message</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:timestamp:Message'</a>, <a>message_timestamp</a> - The
--   timestamp associated with the message.
--   
--   <a>$sel:messageId:Message'</a>, <a>message_messageId</a> - The ID to
--   assign to the message. Within each batch sent, each
--   <tt>"messageId"</tt> must be unique.
--   
--   <a>$sel:inputName:Message'</a>, <a>message_inputName</a> - The name of
--   the input into which the message payload is transformed.
--   
--   <a>$sel:payload:Message'</a>, <a>message_payload</a> - The payload of
--   the message. This can be a JSON string or a Base-64-encoded string
--   representing binary data (in which case you must decode it).-- --
--   <i>Note:</i> This <tt>Lens</tt> automatically encodes and decodes
--   Base64 data. -- The underlying isomorphism will encode to Base64
--   representation during -- serialisation, and decode from Base64
--   representation during deserialisation. -- This <tt>Lens</tt> accepts
--   and returns only raw unencoded data.
newMessage :: Text -> Text -> ByteString -> Message

-- | The timestamp associated with the message.
message_timestamp :: Lens' Message (Maybe TimestampValue)

-- | The ID to assign to the message. Within each batch sent, each
--   <tt>"messageId"</tt> must be unique.
message_messageId :: Lens' Message Text

-- | The name of the input into which the message payload is transformed.
message_inputName :: Lens' Message Text

-- | The payload of the message. This can be a JSON string or a
--   Base-64-encoded string representing binary data (in which case you
--   must decode it).-- -- <i>Note:</i> This <tt>Lens</tt> automatically
--   encodes and decodes Base64 data. -- The underlying isomorphism will
--   encode to Base64 representation during -- serialisation, and decode
--   from Base64 representation during deserialisation. -- This
--   <tt>Lens</tt> accepts and returns only raw unencoded data.
message_payload :: Lens' Message ByteString

-- | Contains the configuration information of a reset action.
--   
--   <i>See:</i> <a>newResetActionConfiguration</a> smart constructor.
data ResetActionConfiguration
ResetActionConfiguration' :: Maybe Text -> ResetActionConfiguration

-- | The note that you can leave when you reset the alarm.
[$sel:note:ResetActionConfiguration'] :: ResetActionConfiguration -> Maybe Text

-- | Create a value of <a>ResetActionConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:note:ResetActionConfiguration'</a>,
--   <a>resetActionConfiguration_note</a> - The note that you can leave
--   when you reset the alarm.
newResetActionConfiguration :: ResetActionConfiguration

-- | The note that you can leave when you reset the alarm.
resetActionConfiguration_note :: Lens' ResetActionConfiguration (Maybe Text)

-- | Information needed to reset the alarm.
--   
--   <i>See:</i> <a>newResetAlarmActionRequest</a> smart constructor.
data ResetAlarmActionRequest
ResetAlarmActionRequest' :: Maybe Text -> Maybe Text -> Text -> Text -> ResetAlarmActionRequest

-- | The value of the key used as a filter to select only the alarms
--   associated with the <a>key</a>.
[$sel:keyValue:ResetAlarmActionRequest'] :: ResetAlarmActionRequest -> Maybe Text

-- | The note that you can leave when you reset the alarm.
[$sel:note:ResetAlarmActionRequest'] :: ResetAlarmActionRequest -> Maybe Text

-- | The request ID. Each ID must be unique within each batch.
[$sel:requestId:ResetAlarmActionRequest'] :: ResetAlarmActionRequest -> Text

-- | The name of the alarm model.
[$sel:alarmModelName:ResetAlarmActionRequest'] :: ResetAlarmActionRequest -> Text

-- | Create a value of <a>ResetAlarmActionRequest</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:keyValue:ResetAlarmActionRequest'</a>,
--   <a>resetAlarmActionRequest_keyValue</a> - The value of the key used as
--   a filter to select only the alarms associated with the <a>key</a>.
--   
--   <a>$sel:note:ResetAlarmActionRequest'</a>,
--   <a>resetAlarmActionRequest_note</a> - The note that you can leave when
--   you reset the alarm.
--   
--   <a>$sel:requestId:ResetAlarmActionRequest'</a>,
--   <a>resetAlarmActionRequest_requestId</a> - The request ID. Each ID
--   must be unique within each batch.
--   
--   <a>$sel:alarmModelName:ResetAlarmActionRequest'</a>,
--   <a>resetAlarmActionRequest_alarmModelName</a> - The name of the alarm
--   model.
newResetAlarmActionRequest :: Text -> Text -> ResetAlarmActionRequest

-- | The value of the key used as a filter to select only the alarms
--   associated with the <a>key</a>.
resetAlarmActionRequest_keyValue :: Lens' ResetAlarmActionRequest (Maybe Text)

-- | The note that you can leave when you reset the alarm.
resetAlarmActionRequest_note :: Lens' ResetAlarmActionRequest (Maybe Text)

-- | The request ID. Each ID must be unique within each batch.
resetAlarmActionRequest_requestId :: Lens' ResetAlarmActionRequest Text

-- | The name of the alarm model.
resetAlarmActionRequest_alarmModelName :: Lens' ResetAlarmActionRequest Text

-- | Information needed to evaluate data.
--   
--   <i>See:</i> <a>newRuleEvaluation</a> smart constructor.
data RuleEvaluation
RuleEvaluation' :: Maybe SimpleRuleEvaluation -> RuleEvaluation

-- | Information needed to compare two values with a comparison operator.
[$sel:simpleRuleEvaluation:RuleEvaluation'] :: RuleEvaluation -> Maybe SimpleRuleEvaluation

-- | Create a value of <a>RuleEvaluation</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:simpleRuleEvaluation:RuleEvaluation'</a>,
--   <a>ruleEvaluation_simpleRuleEvaluation</a> - Information needed to
--   compare two values with a comparison operator.
newRuleEvaluation :: RuleEvaluation

-- | Information needed to compare two values with a comparison operator.
ruleEvaluation_simpleRuleEvaluation :: Lens' RuleEvaluation (Maybe SimpleRuleEvaluation)

-- | Information needed to compare two values with a comparison operator.
--   
--   <i>See:</i> <a>newSimpleRuleEvaluation</a> smart constructor.
data SimpleRuleEvaluation
SimpleRuleEvaluation' :: Maybe Text -> Maybe Text -> Maybe ComparisonOperator -> SimpleRuleEvaluation

-- | The threshold value, on the right side of the comparison operator.
[$sel:thresholdValue:SimpleRuleEvaluation'] :: SimpleRuleEvaluation -> Maybe Text

-- | The value of the input property, on the left side of the comparison
--   operator.
[$sel:inputPropertyValue:SimpleRuleEvaluation'] :: SimpleRuleEvaluation -> Maybe Text

-- | The comparison operator.
[$sel:operator:SimpleRuleEvaluation'] :: SimpleRuleEvaluation -> Maybe ComparisonOperator

-- | Create a value of <a>SimpleRuleEvaluation</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:thresholdValue:SimpleRuleEvaluation'</a>,
--   <a>simpleRuleEvaluation_thresholdValue</a> - The threshold value, on
--   the right side of the comparison operator.
--   
--   <a>$sel:inputPropertyValue:SimpleRuleEvaluation'</a>,
--   <a>simpleRuleEvaluation_inputPropertyValue</a> - The value of the
--   input property, on the left side of the comparison operator.
--   
--   <a>$sel:operator:SimpleRuleEvaluation'</a>,
--   <a>simpleRuleEvaluation_operator</a> - The comparison operator.
newSimpleRuleEvaluation :: SimpleRuleEvaluation

-- | The threshold value, on the right side of the comparison operator.
simpleRuleEvaluation_thresholdValue :: Lens' SimpleRuleEvaluation (Maybe Text)

-- | The value of the input property, on the left side of the comparison
--   operator.
simpleRuleEvaluation_inputPropertyValue :: Lens' SimpleRuleEvaluation (Maybe Text)

-- | The comparison operator.
simpleRuleEvaluation_operator :: Lens' SimpleRuleEvaluation (Maybe ComparisonOperator)

-- | Contains the configuration information of a snooze action.
--   
--   <i>See:</i> <a>newSnoozeActionConfiguration</a> smart constructor.
data SnoozeActionConfiguration
SnoozeActionConfiguration' :: Maybe Text -> Maybe Int -> SnoozeActionConfiguration

-- | The note that you can leave when you snooze the alarm.
[$sel:note:SnoozeActionConfiguration'] :: SnoozeActionConfiguration -> Maybe Text

-- | The snooze time in seconds. The alarm automatically changes to the
--   <tt>NORMAL</tt> state after this duration.
[$sel:snoozeDuration:SnoozeActionConfiguration'] :: SnoozeActionConfiguration -> Maybe Int

-- | Create a value of <a>SnoozeActionConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:note:SnoozeActionConfiguration'</a>,
--   <a>snoozeActionConfiguration_note</a> - The note that you can leave
--   when you snooze the alarm.
--   
--   <a>$sel:snoozeDuration:SnoozeActionConfiguration'</a>,
--   <a>snoozeActionConfiguration_snoozeDuration</a> - The snooze time in
--   seconds. The alarm automatically changes to the <tt>NORMAL</tt> state
--   after this duration.
newSnoozeActionConfiguration :: SnoozeActionConfiguration

-- | The note that you can leave when you snooze the alarm.
snoozeActionConfiguration_note :: Lens' SnoozeActionConfiguration (Maybe Text)

-- | The snooze time in seconds. The alarm automatically changes to the
--   <tt>NORMAL</tt> state after this duration.
snoozeActionConfiguration_snoozeDuration :: Lens' SnoozeActionConfiguration (Maybe Int)

-- | Information needed to snooze the alarm.
--   
--   <i>See:</i> <a>newSnoozeAlarmActionRequest</a> smart constructor.
data SnoozeAlarmActionRequest
SnoozeAlarmActionRequest' :: Maybe Text -> Maybe Text -> Text -> Text -> Int -> SnoozeAlarmActionRequest

-- | The value of the key used as a filter to select only the alarms
--   associated with the <a>key</a>.
[$sel:keyValue:SnoozeAlarmActionRequest'] :: SnoozeAlarmActionRequest -> Maybe Text

-- | The note that you can leave when you snooze the alarm.
[$sel:note:SnoozeAlarmActionRequest'] :: SnoozeAlarmActionRequest -> Maybe Text

-- | The request ID. Each ID must be unique within each batch.
[$sel:requestId:SnoozeAlarmActionRequest'] :: SnoozeAlarmActionRequest -> Text

-- | The name of the alarm model.
[$sel:alarmModelName:SnoozeAlarmActionRequest'] :: SnoozeAlarmActionRequest -> Text

-- | The snooze time in seconds. The alarm automatically changes to the
--   <tt>NORMAL</tt> state after this duration.
[$sel:snoozeDuration:SnoozeAlarmActionRequest'] :: SnoozeAlarmActionRequest -> Int

-- | Create a value of <a>SnoozeAlarmActionRequest</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:keyValue:SnoozeAlarmActionRequest'</a>,
--   <a>snoozeAlarmActionRequest_keyValue</a> - The value of the key used
--   as a filter to select only the alarms associated with the <a>key</a>.
--   
--   <a>$sel:note:SnoozeAlarmActionRequest'</a>,
--   <a>snoozeAlarmActionRequest_note</a> - The note that you can leave
--   when you snooze the alarm.
--   
--   <a>$sel:requestId:SnoozeAlarmActionRequest'</a>,
--   <a>snoozeAlarmActionRequest_requestId</a> - The request ID. Each ID
--   must be unique within each batch.
--   
--   <a>$sel:alarmModelName:SnoozeAlarmActionRequest'</a>,
--   <a>snoozeAlarmActionRequest_alarmModelName</a> - The name of the alarm
--   model.
--   
--   <a>$sel:snoozeDuration:SnoozeAlarmActionRequest'</a>,
--   <a>snoozeAlarmActionRequest_snoozeDuration</a> - The snooze time in
--   seconds. The alarm automatically changes to the <tt>NORMAL</tt> state
--   after this duration.
newSnoozeAlarmActionRequest :: Text -> Text -> Int -> SnoozeAlarmActionRequest

-- | The value of the key used as a filter to select only the alarms
--   associated with the <a>key</a>.
snoozeAlarmActionRequest_keyValue :: Lens' SnoozeAlarmActionRequest (Maybe Text)

-- | The note that you can leave when you snooze the alarm.
snoozeAlarmActionRequest_note :: Lens' SnoozeAlarmActionRequest (Maybe Text)

-- | The request ID. Each ID must be unique within each batch.
snoozeAlarmActionRequest_requestId :: Lens' SnoozeAlarmActionRequest Text

-- | The name of the alarm model.
snoozeAlarmActionRequest_alarmModelName :: Lens' SnoozeAlarmActionRequest Text

-- | The snooze time in seconds. The alarm automatically changes to the
--   <tt>NORMAL</tt> state after this duration.
snoozeAlarmActionRequest_snoozeDuration :: Lens' SnoozeAlarmActionRequest Int

-- | Contains the configuration information of alarm state changes.
--   
--   <i>See:</i> <a>newStateChangeConfiguration</a> smart constructor.
data StateChangeConfiguration
StateChangeConfiguration' :: Maybe TriggerType -> StateChangeConfiguration

-- | The trigger type. If the value is <tt>SNOOZE_TIMEOUT</tt>, the snooze
--   duration ends and the alarm automatically changes to the
--   <tt>NORMAL</tt> state.
[$sel:triggerType:StateChangeConfiguration'] :: StateChangeConfiguration -> Maybe TriggerType

-- | Create a value of <a>StateChangeConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:triggerType:StateChangeConfiguration'</a>,
--   <a>stateChangeConfiguration_triggerType</a> - The trigger type. If the
--   value is <tt>SNOOZE_TIMEOUT</tt>, the snooze duration ends and the
--   alarm automatically changes to the <tt>NORMAL</tt> state.
newStateChangeConfiguration :: StateChangeConfiguration

-- | The trigger type. If the value is <tt>SNOOZE_TIMEOUT</tt>, the snooze
--   duration ends and the alarm automatically changes to the
--   <tt>NORMAL</tt> state.
stateChangeConfiguration_triggerType :: Lens' StateChangeConfiguration (Maybe TriggerType)

-- | Contains information about alarm state changes.
--   
--   <i>See:</i> <a>newSystemEvent</a> smart constructor.
data SystemEvent
SystemEvent' :: Maybe EventType -> Maybe StateChangeConfiguration -> SystemEvent

-- | The event type. If the value is <tt>STATE_CHANGE</tt>, the event
--   contains information about alarm state changes.
[$sel:eventType:SystemEvent'] :: SystemEvent -> Maybe EventType

-- | Contains the configuration information of alarm state changes.
[$sel:stateChangeConfiguration:SystemEvent'] :: SystemEvent -> Maybe StateChangeConfiguration

-- | Create a value of <a>SystemEvent</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:eventType:SystemEvent'</a>, <a>systemEvent_eventType</a> - The
--   event type. If the value is <tt>STATE_CHANGE</tt>, the event contains
--   information about alarm state changes.
--   
--   <a>$sel:stateChangeConfiguration:SystemEvent'</a>,
--   <a>systemEvent_stateChangeConfiguration</a> - Contains the
--   configuration information of alarm state changes.
newSystemEvent :: SystemEvent

-- | The event type. If the value is <tt>STATE_CHANGE</tt>, the event
--   contains information about alarm state changes.
systemEvent_eventType :: Lens' SystemEvent (Maybe EventType)

-- | Contains the configuration information of alarm state changes.
systemEvent_stateChangeConfiguration :: Lens' SystemEvent (Maybe StateChangeConfiguration)

-- | The current state of a timer.
--   
--   <i>See:</i> <a>newTimer</a> smart constructor.
data Timer
Timer' :: Text -> POSIX -> Timer

-- | The name of the timer.
[$sel:name:Timer'] :: Timer -> Text

-- | The number of seconds which have elapsed on the timer.
[$sel:timestamp:Timer'] :: Timer -> POSIX

-- | Create a value of <a>Timer</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:Timer'</a>, <a>timer_name</a> - The name of the timer.
--   
--   <a>$sel:timestamp:Timer'</a>, <a>timer_timestamp</a> - The number of
--   seconds which have elapsed on the timer.
newTimer :: Text -> UTCTime -> Timer

-- | The name of the timer.
timer_name :: Lens' Timer Text

-- | The number of seconds which have elapsed on the timer.
timer_timestamp :: Lens' Timer UTCTime

-- | The new setting of a timer.
--   
--   <i>See:</i> <a>newTimerDefinition</a> smart constructor.
data TimerDefinition
TimerDefinition' :: Text -> Int -> TimerDefinition

-- | The name of the timer.
[$sel:name:TimerDefinition'] :: TimerDefinition -> Text

-- | The new setting of the timer (the number of seconds before the timer
--   elapses).
[$sel:seconds:TimerDefinition'] :: TimerDefinition -> Int

-- | Create a value of <a>TimerDefinition</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:TimerDefinition'</a>, <a>timerDefinition_name</a> - The
--   name of the timer.
--   
--   <a>$sel:seconds:TimerDefinition'</a>, <a>timerDefinition_seconds</a> -
--   The new setting of the timer (the number of seconds before the timer
--   elapses).
newTimerDefinition :: Text -> Int -> TimerDefinition

-- | The name of the timer.
timerDefinition_name :: Lens' TimerDefinition Text

-- | The new setting of the timer (the number of seconds before the timer
--   elapses).
timerDefinition_seconds :: Lens' TimerDefinition Int

-- | Contains information about a timestamp.
--   
--   <i>See:</i> <a>newTimestampValue</a> smart constructor.
data TimestampValue
TimestampValue' :: Maybe Natural -> TimestampValue

-- | The value of the timestamp, in the Unix epoch format.
[$sel:timeInMillis:TimestampValue'] :: TimestampValue -> Maybe Natural

-- | Create a value of <a>TimestampValue</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:timeInMillis:TimestampValue'</a>,
--   <a>timestampValue_timeInMillis</a> - The value of the timestamp, in
--   the Unix epoch format.
newTimestampValue :: TimestampValue

-- | The value of the timestamp, in the Unix epoch format.
timestampValue_timeInMillis :: Lens' TimestampValue (Maybe Natural)

-- | Information used to update the detector (instance).
--   
--   <i>See:</i> <a>newUpdateDetectorRequest</a> smart constructor.
data UpdateDetectorRequest
UpdateDetectorRequest' :: Maybe Text -> Text -> Text -> DetectorStateDefinition -> UpdateDetectorRequest

-- | The value of the input key attribute (identifying the device or
--   system) that caused the creation of this detector (instance).
[$sel:keyValue:UpdateDetectorRequest'] :: UpdateDetectorRequest -> Maybe Text

-- | The ID to assign to the detector update <tt>"message"</tt>. Each
--   <tt>"messageId"</tt> must be unique within each batch sent.
[$sel:messageId:UpdateDetectorRequest'] :: UpdateDetectorRequest -> Text

-- | The name of the detector model that created the detectors (instances).
[$sel:detectorModelName:UpdateDetectorRequest'] :: UpdateDetectorRequest -> Text

-- | The new state, variable values, and timer settings of the detector
--   (instance).
[$sel:state:UpdateDetectorRequest'] :: UpdateDetectorRequest -> DetectorStateDefinition

-- | Create a value of <a>UpdateDetectorRequest</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:keyValue:UpdateDetectorRequest'</a>,
--   <a>updateDetectorRequest_keyValue</a> - The value of the input key
--   attribute (identifying the device or system) that caused the creation
--   of this detector (instance).
--   
--   <a>$sel:messageId:UpdateDetectorRequest'</a>,
--   <a>updateDetectorRequest_messageId</a> - The ID to assign to the
--   detector update <tt>"message"</tt>. Each <tt>"messageId"</tt> must be
--   unique within each batch sent.
--   
--   <a>$sel:detectorModelName:UpdateDetectorRequest'</a>,
--   <a>updateDetectorRequest_detectorModelName</a> - The name of the
--   detector model that created the detectors (instances).
--   
--   <a>$sel:state:UpdateDetectorRequest'</a>,
--   <a>updateDetectorRequest_state</a> - The new state, variable values,
--   and timer settings of the detector (instance).
newUpdateDetectorRequest :: Text -> Text -> DetectorStateDefinition -> UpdateDetectorRequest

-- | The value of the input key attribute (identifying the device or
--   system) that caused the creation of this detector (instance).
updateDetectorRequest_keyValue :: Lens' UpdateDetectorRequest (Maybe Text)

-- | The ID to assign to the detector update <tt>"message"</tt>. Each
--   <tt>"messageId"</tt> must be unique within each batch sent.
updateDetectorRequest_messageId :: Lens' UpdateDetectorRequest Text

-- | The name of the detector model that created the detectors (instances).
updateDetectorRequest_detectorModelName :: Lens' UpdateDetectorRequest Text

-- | The new state, variable values, and timer settings of the detector
--   (instance).
updateDetectorRequest_state :: Lens' UpdateDetectorRequest DetectorStateDefinition

-- | The current state of the variable.
--   
--   <i>See:</i> <a>newVariable</a> smart constructor.
data Variable
Variable' :: Text -> Text -> Variable

-- | The name of the variable.
[$sel:name:Variable'] :: Variable -> Text

-- | The current value of the variable.
[$sel:value:Variable'] :: Variable -> Text

-- | Create a value of <a>Variable</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:Variable'</a>, <a>variable_name</a> - The name of the
--   variable.
--   
--   <a>$sel:value:Variable'</a>, <a>variable_value</a> - The current value
--   of the variable.
newVariable :: Text -> Text -> Variable

-- | The name of the variable.
variable_name :: Lens' Variable Text

-- | The current value of the variable.
variable_value :: Lens' Variable Text

-- | The new value of the variable.
--   
--   <i>See:</i> <a>newVariableDefinition</a> smart constructor.
data VariableDefinition
VariableDefinition' :: Text -> Text -> VariableDefinition

-- | The name of the variable.
[$sel:name:VariableDefinition'] :: VariableDefinition -> Text

-- | The new value of the variable.
[$sel:value:VariableDefinition'] :: VariableDefinition -> Text

-- | Create a value of <a>VariableDefinition</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:VariableDefinition'</a>, <a>variableDefinition_name</a> -
--   The name of the variable.
--   
--   <a>$sel:value:VariableDefinition'</a>, <a>variableDefinition_value</a>
--   - The new value of the variable.
newVariableDefinition :: Text -> Text -> VariableDefinition

-- | The name of the variable.
variableDefinition_name :: Lens' VariableDefinition Text

-- | The new value of the variable.
variableDefinition_value :: Lens' VariableDefinition Text


-- | Lists detectors (the instances of a detector model).
module Amazonka.IoTEventsData.ListDetectors

-- | <i>See:</i> <a>newListDetectors</a> smart constructor.
data ListDetectors
ListDetectors' :: Maybe Text -> Maybe Text -> Maybe Natural -> Text -> ListDetectors

-- | The token that you can use to return the next set of results.
[$sel:nextToken:ListDetectors'] :: ListDetectors -> Maybe Text

-- | A filter that limits results to those detectors (instances) in the
--   given state.
[$sel:stateName:ListDetectors'] :: ListDetectors -> Maybe Text

-- | The maximum number of results to be returned per request.
[$sel:maxResults:ListDetectors'] :: ListDetectors -> Maybe Natural

-- | The name of the detector model whose detectors (instances) are listed.
[$sel:detectorModelName:ListDetectors'] :: ListDetectors -> Text

-- | Create a value of <a>ListDetectors</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListDetectors'</a>, <a>listDetectors_nextToken</a> -
--   The token that you can use to return the next set of results.
--   
--   <a>$sel:stateName:ListDetectors'</a>, <a>listDetectors_stateName</a> -
--   A filter that limits results to those detectors (instances) in the
--   given state.
--   
--   <a>$sel:maxResults:ListDetectors'</a>, <a>listDetectors_maxResults</a>
--   - The maximum number of results to be returned per request.
--   
--   <a>$sel:detectorModelName:ListDetectors'</a>,
--   <a>listDetectors_detectorModelName</a> - The name of the detector
--   model whose detectors (instances) are listed.
newListDetectors :: Text -> ListDetectors

-- | The token that you can use to return the next set of results.
listDetectors_nextToken :: Lens' ListDetectors (Maybe Text)

-- | A filter that limits results to those detectors (instances) in the
--   given state.
listDetectors_stateName :: Lens' ListDetectors (Maybe Text)

-- | The maximum number of results to be returned per request.
listDetectors_maxResults :: Lens' ListDetectors (Maybe Natural)

-- | The name of the detector model whose detectors (instances) are listed.
listDetectors_detectorModelName :: Lens' ListDetectors Text

-- | <i>See:</i> <a>newListDetectorsResponse</a> smart constructor.
data ListDetectorsResponse
ListDetectorsResponse' :: Maybe Text -> Maybe [DetectorSummary] -> Int -> ListDetectorsResponse

-- | The token that you can use to return the next set of results, or
--   <tt>null</tt> if there are no more results.
[$sel:nextToken:ListDetectorsResponse'] :: ListDetectorsResponse -> Maybe Text

-- | A list of summary information about the detectors (instances).
[$sel:detectorSummaries:ListDetectorsResponse'] :: ListDetectorsResponse -> Maybe [DetectorSummary]

-- | The response's http status code.
[$sel:httpStatus:ListDetectorsResponse'] :: ListDetectorsResponse -> Int

-- | Create a value of <a>ListDetectorsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListDetectors'</a>,
--   <a>listDetectorsResponse_nextToken</a> - The token that you can use to
--   return the next set of results, or <tt>null</tt> if there are no more
--   results.
--   
--   <a>$sel:detectorSummaries:ListDetectorsResponse'</a>,
--   <a>listDetectorsResponse_detectorSummaries</a> - A list of summary
--   information about the detectors (instances).
--   
--   <a>$sel:httpStatus:ListDetectorsResponse'</a>,
--   <a>listDetectorsResponse_httpStatus</a> - The response's http status
--   code.
newListDetectorsResponse :: Int -> ListDetectorsResponse

-- | The token that you can use to return the next set of results, or
--   <tt>null</tt> if there are no more results.
listDetectorsResponse_nextToken :: Lens' ListDetectorsResponse (Maybe Text)

-- | A list of summary information about the detectors (instances).
listDetectorsResponse_detectorSummaries :: Lens' ListDetectorsResponse (Maybe [DetectorSummary])

-- | The response's http status code.
listDetectorsResponse_httpStatus :: Lens' ListDetectorsResponse Int
instance GHC.Generics.Generic Amazonka.IoTEventsData.ListDetectors.ListDetectors
instance GHC.Show.Show Amazonka.IoTEventsData.ListDetectors.ListDetectors
instance GHC.Read.Read Amazonka.IoTEventsData.ListDetectors.ListDetectors
instance GHC.Classes.Eq Amazonka.IoTEventsData.ListDetectors.ListDetectors
instance GHC.Generics.Generic Amazonka.IoTEventsData.ListDetectors.ListDetectorsResponse
instance GHC.Show.Show Amazonka.IoTEventsData.ListDetectors.ListDetectorsResponse
instance GHC.Read.Read Amazonka.IoTEventsData.ListDetectors.ListDetectorsResponse
instance GHC.Classes.Eq Amazonka.IoTEventsData.ListDetectors.ListDetectorsResponse
instance Amazonka.Types.AWSRequest Amazonka.IoTEventsData.ListDetectors.ListDetectors
instance Control.DeepSeq.NFData Amazonka.IoTEventsData.ListDetectors.ListDetectorsResponse
instance Data.Hashable.Class.Hashable Amazonka.IoTEventsData.ListDetectors.ListDetectors
instance Control.DeepSeq.NFData Amazonka.IoTEventsData.ListDetectors.ListDetectors
instance Amazonka.Data.Headers.ToHeaders Amazonka.IoTEventsData.ListDetectors.ListDetectors
instance Amazonka.Data.Path.ToPath Amazonka.IoTEventsData.ListDetectors.ListDetectors
instance Amazonka.Data.Query.ToQuery Amazonka.IoTEventsData.ListDetectors.ListDetectors


-- | Lists one or more alarms. The operation returns only the metadata
--   associated with each alarm.
module Amazonka.IoTEventsData.ListAlarms

-- | <i>See:</i> <a>newListAlarms</a> smart constructor.
data ListAlarms
ListAlarms' :: Maybe Text -> Maybe Natural -> Text -> ListAlarms

-- | The token that you can use to return the next set of results.
[$sel:nextToken:ListAlarms'] :: ListAlarms -> Maybe Text

-- | The maximum number of results to be returned per request.
[$sel:maxResults:ListAlarms'] :: ListAlarms -> Maybe Natural

-- | The name of the alarm model.
[$sel:alarmModelName:ListAlarms'] :: ListAlarms -> Text

-- | Create a value of <a>ListAlarms</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListAlarms'</a>, <a>listAlarms_nextToken</a> - The
--   token that you can use to return the next set of results.
--   
--   <a>$sel:maxResults:ListAlarms'</a>, <a>listAlarms_maxResults</a> - The
--   maximum number of results to be returned per request.
--   
--   <a>$sel:alarmModelName:ListAlarms'</a>,
--   <a>listAlarms_alarmModelName</a> - The name of the alarm model.
newListAlarms :: Text -> ListAlarms

-- | The token that you can use to return the next set of results.
listAlarms_nextToken :: Lens' ListAlarms (Maybe Text)

-- | The maximum number of results to be returned per request.
listAlarms_maxResults :: Lens' ListAlarms (Maybe Natural)

-- | The name of the alarm model.
listAlarms_alarmModelName :: Lens' ListAlarms Text

-- | <i>See:</i> <a>newListAlarmsResponse</a> smart constructor.
data ListAlarmsResponse
ListAlarmsResponse' :: Maybe Text -> Maybe [AlarmSummary] -> Int -> ListAlarmsResponse

-- | The token that you can use to return the next set of results, or
--   <tt>null</tt> if there are no more results.
[$sel:nextToken:ListAlarmsResponse'] :: ListAlarmsResponse -> Maybe Text

-- | A list that summarizes each alarm.
[$sel:alarmSummaries:ListAlarmsResponse'] :: ListAlarmsResponse -> Maybe [AlarmSummary]

-- | The response's http status code.
[$sel:httpStatus:ListAlarmsResponse'] :: ListAlarmsResponse -> Int

-- | Create a value of <a>ListAlarmsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListAlarms'</a>, <a>listAlarmsResponse_nextToken</a>
--   - The token that you can use to return the next set of results, or
--   <tt>null</tt> if there are no more results.
--   
--   <a>$sel:alarmSummaries:ListAlarmsResponse'</a>,
--   <a>listAlarmsResponse_alarmSummaries</a> - A list that summarizes each
--   alarm.
--   
--   <a>$sel:httpStatus:ListAlarmsResponse'</a>,
--   <a>listAlarmsResponse_httpStatus</a> - The response's http status
--   code.
newListAlarmsResponse :: Int -> ListAlarmsResponse

-- | The token that you can use to return the next set of results, or
--   <tt>null</tt> if there are no more results.
listAlarmsResponse_nextToken :: Lens' ListAlarmsResponse (Maybe Text)

-- | A list that summarizes each alarm.
listAlarmsResponse_alarmSummaries :: Lens' ListAlarmsResponse (Maybe [AlarmSummary])

-- | The response's http status code.
listAlarmsResponse_httpStatus :: Lens' ListAlarmsResponse Int
instance GHC.Generics.Generic Amazonka.IoTEventsData.ListAlarms.ListAlarms
instance GHC.Show.Show Amazonka.IoTEventsData.ListAlarms.ListAlarms
instance GHC.Read.Read Amazonka.IoTEventsData.ListAlarms.ListAlarms
instance GHC.Classes.Eq Amazonka.IoTEventsData.ListAlarms.ListAlarms
instance GHC.Generics.Generic Amazonka.IoTEventsData.ListAlarms.ListAlarmsResponse
instance GHC.Show.Show Amazonka.IoTEventsData.ListAlarms.ListAlarmsResponse
instance GHC.Read.Read Amazonka.IoTEventsData.ListAlarms.ListAlarmsResponse
instance GHC.Classes.Eq Amazonka.IoTEventsData.ListAlarms.ListAlarmsResponse
instance Amazonka.Types.AWSRequest Amazonka.IoTEventsData.ListAlarms.ListAlarms
instance Control.DeepSeq.NFData Amazonka.IoTEventsData.ListAlarms.ListAlarmsResponse
instance Data.Hashable.Class.Hashable Amazonka.IoTEventsData.ListAlarms.ListAlarms
instance Control.DeepSeq.NFData Amazonka.IoTEventsData.ListAlarms.ListAlarms
instance Amazonka.Data.Headers.ToHeaders Amazonka.IoTEventsData.ListAlarms.ListAlarms
instance Amazonka.Data.Path.ToPath Amazonka.IoTEventsData.ListAlarms.ListAlarms
instance Amazonka.Data.Query.ToQuery Amazonka.IoTEventsData.ListAlarms.ListAlarms


-- | Returns information about the specified detector (instance).
module Amazonka.IoTEventsData.DescribeDetector

-- | <i>See:</i> <a>newDescribeDetector</a> smart constructor.
data DescribeDetector
DescribeDetector' :: Maybe Text -> Text -> DescribeDetector

-- | A filter used to limit results to detectors (instances) created
--   because of the given key ID.
[$sel:keyValue:DescribeDetector'] :: DescribeDetector -> Maybe Text

-- | The name of the detector model whose detectors (instances) you want
--   information about.
[$sel:detectorModelName:DescribeDetector'] :: DescribeDetector -> Text

-- | Create a value of <a>DescribeDetector</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:keyValue:DescribeDetector'</a>,
--   <a>describeDetector_keyValue</a> - A filter used to limit results to
--   detectors (instances) created because of the given key ID.
--   
--   <a>$sel:detectorModelName:DescribeDetector'</a>,
--   <a>describeDetector_detectorModelName</a> - The name of the detector
--   model whose detectors (instances) you want information about.
newDescribeDetector :: Text -> DescribeDetector

-- | A filter used to limit results to detectors (instances) created
--   because of the given key ID.
describeDetector_keyValue :: Lens' DescribeDetector (Maybe Text)

-- | The name of the detector model whose detectors (instances) you want
--   information about.
describeDetector_detectorModelName :: Lens' DescribeDetector Text

-- | <i>See:</i> <a>newDescribeDetectorResponse</a> smart constructor.
data DescribeDetectorResponse
DescribeDetectorResponse' :: Maybe Detector -> Int -> DescribeDetectorResponse

-- | Information about the detector (instance).
[$sel:detector:DescribeDetectorResponse'] :: DescribeDetectorResponse -> Maybe Detector

-- | The response's http status code.
[$sel:httpStatus:DescribeDetectorResponse'] :: DescribeDetectorResponse -> Int

-- | Create a value of <a>DescribeDetectorResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:detector:DescribeDetectorResponse'</a>,
--   <a>describeDetectorResponse_detector</a> - Information about the
--   detector (instance).
--   
--   <a>$sel:httpStatus:DescribeDetectorResponse'</a>,
--   <a>describeDetectorResponse_httpStatus</a> - The response's http
--   status code.
newDescribeDetectorResponse :: Int -> DescribeDetectorResponse

-- | Information about the detector (instance).
describeDetectorResponse_detector :: Lens' DescribeDetectorResponse (Maybe Detector)

-- | The response's http status code.
describeDetectorResponse_httpStatus :: Lens' DescribeDetectorResponse Int
instance GHC.Generics.Generic Amazonka.IoTEventsData.DescribeDetector.DescribeDetector
instance GHC.Show.Show Amazonka.IoTEventsData.DescribeDetector.DescribeDetector
instance GHC.Read.Read Amazonka.IoTEventsData.DescribeDetector.DescribeDetector
instance GHC.Classes.Eq Amazonka.IoTEventsData.DescribeDetector.DescribeDetector
instance GHC.Generics.Generic Amazonka.IoTEventsData.DescribeDetector.DescribeDetectorResponse
instance GHC.Show.Show Amazonka.IoTEventsData.DescribeDetector.DescribeDetectorResponse
instance GHC.Read.Read Amazonka.IoTEventsData.DescribeDetector.DescribeDetectorResponse
instance GHC.Classes.Eq Amazonka.IoTEventsData.DescribeDetector.DescribeDetectorResponse
instance Amazonka.Types.AWSRequest Amazonka.IoTEventsData.DescribeDetector.DescribeDetector
instance Control.DeepSeq.NFData Amazonka.IoTEventsData.DescribeDetector.DescribeDetectorResponse
instance Data.Hashable.Class.Hashable Amazonka.IoTEventsData.DescribeDetector.DescribeDetector
instance Control.DeepSeq.NFData Amazonka.IoTEventsData.DescribeDetector.DescribeDetector
instance Amazonka.Data.Headers.ToHeaders Amazonka.IoTEventsData.DescribeDetector.DescribeDetector
instance Amazonka.Data.Path.ToPath Amazonka.IoTEventsData.DescribeDetector.DescribeDetector
instance Amazonka.Data.Query.ToQuery Amazonka.IoTEventsData.DescribeDetector.DescribeDetector


-- | Retrieves information about an alarm.
module Amazonka.IoTEventsData.DescribeAlarm

-- | <i>See:</i> <a>newDescribeAlarm</a> smart constructor.
data DescribeAlarm
DescribeAlarm' :: Maybe Text -> Text -> DescribeAlarm

-- | The value of the key used as a filter to select only the alarms
--   associated with the <a>key</a>.
[$sel:keyValue:DescribeAlarm'] :: DescribeAlarm -> Maybe Text

-- | The name of the alarm model.
[$sel:alarmModelName:DescribeAlarm'] :: DescribeAlarm -> Text

-- | Create a value of <a>DescribeAlarm</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:keyValue:DescribeAlarm'</a>, <a>describeAlarm_keyValue</a> -
--   The value of the key used as a filter to select only the alarms
--   associated with the <a>key</a>.
--   
--   <a>$sel:alarmModelName:DescribeAlarm'</a>,
--   <a>describeAlarm_alarmModelName</a> - The name of the alarm model.
newDescribeAlarm :: Text -> DescribeAlarm

-- | The value of the key used as a filter to select only the alarms
--   associated with the <a>key</a>.
describeAlarm_keyValue :: Lens' DescribeAlarm (Maybe Text)

-- | The name of the alarm model.
describeAlarm_alarmModelName :: Lens' DescribeAlarm Text

-- | <i>See:</i> <a>newDescribeAlarmResponse</a> smart constructor.
data DescribeAlarmResponse
DescribeAlarmResponse' :: Maybe Alarm -> Int -> DescribeAlarmResponse

-- | Contains information about an alarm.
[$sel:alarm:DescribeAlarmResponse'] :: DescribeAlarmResponse -> Maybe Alarm

-- | The response's http status code.
[$sel:httpStatus:DescribeAlarmResponse'] :: DescribeAlarmResponse -> Int

-- | Create a value of <a>DescribeAlarmResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:alarm:DescribeAlarmResponse'</a>,
--   <a>describeAlarmResponse_alarm</a> - Contains information about an
--   alarm.
--   
--   <a>$sel:httpStatus:DescribeAlarmResponse'</a>,
--   <a>describeAlarmResponse_httpStatus</a> - The response's http status
--   code.
newDescribeAlarmResponse :: Int -> DescribeAlarmResponse

-- | Contains information about an alarm.
describeAlarmResponse_alarm :: Lens' DescribeAlarmResponse (Maybe Alarm)

-- | The response's http status code.
describeAlarmResponse_httpStatus :: Lens' DescribeAlarmResponse Int
instance GHC.Generics.Generic Amazonka.IoTEventsData.DescribeAlarm.DescribeAlarm
instance GHC.Show.Show Amazonka.IoTEventsData.DescribeAlarm.DescribeAlarm
instance GHC.Read.Read Amazonka.IoTEventsData.DescribeAlarm.DescribeAlarm
instance GHC.Classes.Eq Amazonka.IoTEventsData.DescribeAlarm.DescribeAlarm
instance GHC.Generics.Generic Amazonka.IoTEventsData.DescribeAlarm.DescribeAlarmResponse
instance GHC.Show.Show Amazonka.IoTEventsData.DescribeAlarm.DescribeAlarmResponse
instance GHC.Read.Read Amazonka.IoTEventsData.DescribeAlarm.DescribeAlarmResponse
instance GHC.Classes.Eq Amazonka.IoTEventsData.DescribeAlarm.DescribeAlarmResponse
instance Amazonka.Types.AWSRequest Amazonka.IoTEventsData.DescribeAlarm.DescribeAlarm
instance Control.DeepSeq.NFData Amazonka.IoTEventsData.DescribeAlarm.DescribeAlarmResponse
instance Data.Hashable.Class.Hashable Amazonka.IoTEventsData.DescribeAlarm.DescribeAlarm
instance Control.DeepSeq.NFData Amazonka.IoTEventsData.DescribeAlarm.DescribeAlarm
instance Amazonka.Data.Headers.ToHeaders Amazonka.IoTEventsData.DescribeAlarm.DescribeAlarm
instance Amazonka.Data.Path.ToPath Amazonka.IoTEventsData.DescribeAlarm.DescribeAlarm
instance Amazonka.Data.Query.ToQuery Amazonka.IoTEventsData.DescribeAlarm.DescribeAlarm


-- | Updates the state, variable values, and timer settings of one or more
--   detectors (instances) of a specified detector model.
module Amazonka.IoTEventsData.BatchUpdateDetector

-- | <i>See:</i> <a>newBatchUpdateDetector</a> smart constructor.
data BatchUpdateDetector
BatchUpdateDetector' :: NonEmpty UpdateDetectorRequest -> BatchUpdateDetector

-- | The list of detectors (instances) to update, along with the values to
--   update.
[$sel:detectors:BatchUpdateDetector'] :: BatchUpdateDetector -> NonEmpty UpdateDetectorRequest

-- | Create a value of <a>BatchUpdateDetector</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:detectors:BatchUpdateDetector'</a>,
--   <a>batchUpdateDetector_detectors</a> - The list of detectors
--   (instances) to update, along with the values to update.
newBatchUpdateDetector :: NonEmpty UpdateDetectorRequest -> BatchUpdateDetector

-- | The list of detectors (instances) to update, along with the values to
--   update.
batchUpdateDetector_detectors :: Lens' BatchUpdateDetector (NonEmpty UpdateDetectorRequest)

-- | <i>See:</i> <a>newBatchUpdateDetectorResponse</a> smart constructor.
data BatchUpdateDetectorResponse
BatchUpdateDetectorResponse' :: Maybe [BatchUpdateDetectorErrorEntry] -> Int -> BatchUpdateDetectorResponse

-- | A list of those detector updates that resulted in errors. (If an error
--   is listed here, the specific update did not occur.)
[$sel:batchUpdateDetectorErrorEntries:BatchUpdateDetectorResponse'] :: BatchUpdateDetectorResponse -> Maybe [BatchUpdateDetectorErrorEntry]

-- | The response's http status code.
[$sel:httpStatus:BatchUpdateDetectorResponse'] :: BatchUpdateDetectorResponse -> Int

-- | Create a value of <a>BatchUpdateDetectorResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:batchUpdateDetectorErrorEntries:BatchUpdateDetectorResponse'</a>,
--   <a>batchUpdateDetectorResponse_batchUpdateDetectorErrorEntries</a> - A
--   list of those detector updates that resulted in errors. (If an error
--   is listed here, the specific update did not occur.)
--   
--   <a>$sel:httpStatus:BatchUpdateDetectorResponse'</a>,
--   <a>batchUpdateDetectorResponse_httpStatus</a> - The response's http
--   status code.
newBatchUpdateDetectorResponse :: Int -> BatchUpdateDetectorResponse

-- | A list of those detector updates that resulted in errors. (If an error
--   is listed here, the specific update did not occur.)
batchUpdateDetectorResponse_batchUpdateDetectorErrorEntries :: Lens' BatchUpdateDetectorResponse (Maybe [BatchUpdateDetectorErrorEntry])

-- | The response's http status code.
batchUpdateDetectorResponse_httpStatus :: Lens' BatchUpdateDetectorResponse Int
instance GHC.Generics.Generic Amazonka.IoTEventsData.BatchUpdateDetector.BatchUpdateDetector
instance GHC.Show.Show Amazonka.IoTEventsData.BatchUpdateDetector.BatchUpdateDetector
instance GHC.Read.Read Amazonka.IoTEventsData.BatchUpdateDetector.BatchUpdateDetector
instance GHC.Classes.Eq Amazonka.IoTEventsData.BatchUpdateDetector.BatchUpdateDetector
instance GHC.Generics.Generic Amazonka.IoTEventsData.BatchUpdateDetector.BatchUpdateDetectorResponse
instance GHC.Show.Show Amazonka.IoTEventsData.BatchUpdateDetector.BatchUpdateDetectorResponse
instance GHC.Read.Read Amazonka.IoTEventsData.BatchUpdateDetector.BatchUpdateDetectorResponse
instance GHC.Classes.Eq Amazonka.IoTEventsData.BatchUpdateDetector.BatchUpdateDetectorResponse
instance Amazonka.Types.AWSRequest Amazonka.IoTEventsData.BatchUpdateDetector.BatchUpdateDetector
instance Control.DeepSeq.NFData Amazonka.IoTEventsData.BatchUpdateDetector.BatchUpdateDetectorResponse
instance Data.Hashable.Class.Hashable Amazonka.IoTEventsData.BatchUpdateDetector.BatchUpdateDetector
instance Control.DeepSeq.NFData Amazonka.IoTEventsData.BatchUpdateDetector.BatchUpdateDetector
instance Amazonka.Data.Headers.ToHeaders Amazonka.IoTEventsData.BatchUpdateDetector.BatchUpdateDetector
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTEventsData.BatchUpdateDetector.BatchUpdateDetector
instance Amazonka.Data.Path.ToPath Amazonka.IoTEventsData.BatchUpdateDetector.BatchUpdateDetector
instance Amazonka.Data.Query.ToQuery Amazonka.IoTEventsData.BatchUpdateDetector.BatchUpdateDetector


-- | Changes one or more alarms to the snooze mode. The alarms change to
--   the <tt>SNOOZE_DISABLED</tt> state after you set them to the snooze
--   mode.
module Amazonka.IoTEventsData.BatchSnoozeAlarm

-- | <i>See:</i> <a>newBatchSnoozeAlarm</a> smart constructor.
data BatchSnoozeAlarm
BatchSnoozeAlarm' :: NonEmpty SnoozeAlarmActionRequest -> BatchSnoozeAlarm

-- | The list of snooze action requests. You can specify up to 10 requests
--   per operation.
[$sel:snoozeActionRequests:BatchSnoozeAlarm'] :: BatchSnoozeAlarm -> NonEmpty SnoozeAlarmActionRequest

-- | Create a value of <a>BatchSnoozeAlarm</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:snoozeActionRequests:BatchSnoozeAlarm'</a>,
--   <a>batchSnoozeAlarm_snoozeActionRequests</a> - The list of snooze
--   action requests. You can specify up to 10 requests per operation.
newBatchSnoozeAlarm :: NonEmpty SnoozeAlarmActionRequest -> BatchSnoozeAlarm

-- | The list of snooze action requests. You can specify up to 10 requests
--   per operation.
batchSnoozeAlarm_snoozeActionRequests :: Lens' BatchSnoozeAlarm (NonEmpty SnoozeAlarmActionRequest)

-- | <i>See:</i> <a>newBatchSnoozeAlarmResponse</a> smart constructor.
data BatchSnoozeAlarmResponse
BatchSnoozeAlarmResponse' :: Maybe [BatchAlarmActionErrorEntry] -> Int -> BatchSnoozeAlarmResponse

-- | A list of errors associated with the request, or <tt>null</tt> if
--   there are no errors. Each error entry contains an entry ID that helps
--   you identify the entry that failed.
[$sel:errorEntries:BatchSnoozeAlarmResponse'] :: BatchSnoozeAlarmResponse -> Maybe [BatchAlarmActionErrorEntry]

-- | The response's http status code.
[$sel:httpStatus:BatchSnoozeAlarmResponse'] :: BatchSnoozeAlarmResponse -> Int

-- | Create a value of <a>BatchSnoozeAlarmResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:errorEntries:BatchSnoozeAlarmResponse'</a>,
--   <a>batchSnoozeAlarmResponse_errorEntries</a> - A list of errors
--   associated with the request, or <tt>null</tt> if there are no errors.
--   Each error entry contains an entry ID that helps you identify the
--   entry that failed.
--   
--   <a>$sel:httpStatus:BatchSnoozeAlarmResponse'</a>,
--   <a>batchSnoozeAlarmResponse_httpStatus</a> - The response's http
--   status code.
newBatchSnoozeAlarmResponse :: Int -> BatchSnoozeAlarmResponse

-- | A list of errors associated with the request, or <tt>null</tt> if
--   there are no errors. Each error entry contains an entry ID that helps
--   you identify the entry that failed.
batchSnoozeAlarmResponse_errorEntries :: Lens' BatchSnoozeAlarmResponse (Maybe [BatchAlarmActionErrorEntry])

-- | The response's http status code.
batchSnoozeAlarmResponse_httpStatus :: Lens' BatchSnoozeAlarmResponse Int
instance GHC.Generics.Generic Amazonka.IoTEventsData.BatchSnoozeAlarm.BatchSnoozeAlarm
instance GHC.Show.Show Amazonka.IoTEventsData.BatchSnoozeAlarm.BatchSnoozeAlarm
instance GHC.Read.Read Amazonka.IoTEventsData.BatchSnoozeAlarm.BatchSnoozeAlarm
instance GHC.Classes.Eq Amazonka.IoTEventsData.BatchSnoozeAlarm.BatchSnoozeAlarm
instance GHC.Generics.Generic Amazonka.IoTEventsData.BatchSnoozeAlarm.BatchSnoozeAlarmResponse
instance GHC.Show.Show Amazonka.IoTEventsData.BatchSnoozeAlarm.BatchSnoozeAlarmResponse
instance GHC.Read.Read Amazonka.IoTEventsData.BatchSnoozeAlarm.BatchSnoozeAlarmResponse
instance GHC.Classes.Eq Amazonka.IoTEventsData.BatchSnoozeAlarm.BatchSnoozeAlarmResponse
instance Amazonka.Types.AWSRequest Amazonka.IoTEventsData.BatchSnoozeAlarm.BatchSnoozeAlarm
instance Control.DeepSeq.NFData Amazonka.IoTEventsData.BatchSnoozeAlarm.BatchSnoozeAlarmResponse
instance Data.Hashable.Class.Hashable Amazonka.IoTEventsData.BatchSnoozeAlarm.BatchSnoozeAlarm
instance Control.DeepSeq.NFData Amazonka.IoTEventsData.BatchSnoozeAlarm.BatchSnoozeAlarm
instance Amazonka.Data.Headers.ToHeaders Amazonka.IoTEventsData.BatchSnoozeAlarm.BatchSnoozeAlarm
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTEventsData.BatchSnoozeAlarm.BatchSnoozeAlarm
instance Amazonka.Data.Path.ToPath Amazonka.IoTEventsData.BatchSnoozeAlarm.BatchSnoozeAlarm
instance Amazonka.Data.Query.ToQuery Amazonka.IoTEventsData.BatchSnoozeAlarm.BatchSnoozeAlarm


-- | Resets one or more alarms. The alarms return to the <tt>NORMAL</tt>
--   state after you reset them.
module Amazonka.IoTEventsData.BatchResetAlarm

-- | <i>See:</i> <a>newBatchResetAlarm</a> smart constructor.
data BatchResetAlarm
BatchResetAlarm' :: NonEmpty ResetAlarmActionRequest -> BatchResetAlarm

-- | The list of reset action requests. You can specify up to 10 requests
--   per operation.
[$sel:resetActionRequests:BatchResetAlarm'] :: BatchResetAlarm -> NonEmpty ResetAlarmActionRequest

-- | Create a value of <a>BatchResetAlarm</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resetActionRequests:BatchResetAlarm'</a>,
--   <a>batchResetAlarm_resetActionRequests</a> - The list of reset action
--   requests. You can specify up to 10 requests per operation.
newBatchResetAlarm :: NonEmpty ResetAlarmActionRequest -> BatchResetAlarm

-- | The list of reset action requests. You can specify up to 10 requests
--   per operation.
batchResetAlarm_resetActionRequests :: Lens' BatchResetAlarm (NonEmpty ResetAlarmActionRequest)

-- | <i>See:</i> <a>newBatchResetAlarmResponse</a> smart constructor.
data BatchResetAlarmResponse
BatchResetAlarmResponse' :: Maybe [BatchAlarmActionErrorEntry] -> Int -> BatchResetAlarmResponse

-- | A list of errors associated with the request, or <tt>null</tt> if
--   there are no errors. Each error entry contains an entry ID that helps
--   you identify the entry that failed.
[$sel:errorEntries:BatchResetAlarmResponse'] :: BatchResetAlarmResponse -> Maybe [BatchAlarmActionErrorEntry]

-- | The response's http status code.
[$sel:httpStatus:BatchResetAlarmResponse'] :: BatchResetAlarmResponse -> Int

-- | Create a value of <a>BatchResetAlarmResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:errorEntries:BatchResetAlarmResponse'</a>,
--   <a>batchResetAlarmResponse_errorEntries</a> - A list of errors
--   associated with the request, or <tt>null</tt> if there are no errors.
--   Each error entry contains an entry ID that helps you identify the
--   entry that failed.
--   
--   <a>$sel:httpStatus:BatchResetAlarmResponse'</a>,
--   <a>batchResetAlarmResponse_httpStatus</a> - The response's http status
--   code.
newBatchResetAlarmResponse :: Int -> BatchResetAlarmResponse

-- | A list of errors associated with the request, or <tt>null</tt> if
--   there are no errors. Each error entry contains an entry ID that helps
--   you identify the entry that failed.
batchResetAlarmResponse_errorEntries :: Lens' BatchResetAlarmResponse (Maybe [BatchAlarmActionErrorEntry])

-- | The response's http status code.
batchResetAlarmResponse_httpStatus :: Lens' BatchResetAlarmResponse Int
instance GHC.Generics.Generic Amazonka.IoTEventsData.BatchResetAlarm.BatchResetAlarm
instance GHC.Show.Show Amazonka.IoTEventsData.BatchResetAlarm.BatchResetAlarm
instance GHC.Read.Read Amazonka.IoTEventsData.BatchResetAlarm.BatchResetAlarm
instance GHC.Classes.Eq Amazonka.IoTEventsData.BatchResetAlarm.BatchResetAlarm
instance GHC.Generics.Generic Amazonka.IoTEventsData.BatchResetAlarm.BatchResetAlarmResponse
instance GHC.Show.Show Amazonka.IoTEventsData.BatchResetAlarm.BatchResetAlarmResponse
instance GHC.Read.Read Amazonka.IoTEventsData.BatchResetAlarm.BatchResetAlarmResponse
instance GHC.Classes.Eq Amazonka.IoTEventsData.BatchResetAlarm.BatchResetAlarmResponse
instance Amazonka.Types.AWSRequest Amazonka.IoTEventsData.BatchResetAlarm.BatchResetAlarm
instance Control.DeepSeq.NFData Amazonka.IoTEventsData.BatchResetAlarm.BatchResetAlarmResponse
instance Data.Hashable.Class.Hashable Amazonka.IoTEventsData.BatchResetAlarm.BatchResetAlarm
instance Control.DeepSeq.NFData Amazonka.IoTEventsData.BatchResetAlarm.BatchResetAlarm
instance Amazonka.Data.Headers.ToHeaders Amazonka.IoTEventsData.BatchResetAlarm.BatchResetAlarm
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTEventsData.BatchResetAlarm.BatchResetAlarm
instance Amazonka.Data.Path.ToPath Amazonka.IoTEventsData.BatchResetAlarm.BatchResetAlarm
instance Amazonka.Data.Query.ToQuery Amazonka.IoTEventsData.BatchResetAlarm.BatchResetAlarm


-- | Sends a set of messages to the AWS IoT Events system. Each message
--   payload is transformed into the input you specify
--   (<tt>"inputName"</tt>) and ingested into any detectors that monitor
--   that input. If multiple messages are sent, the order in which the
--   messages are processed isn't guaranteed. To guarantee ordering, you
--   must send messages one at a time and wait for a successful response.
module Amazonka.IoTEventsData.BatchPutMessage

-- | <i>See:</i> <a>newBatchPutMessage</a> smart constructor.
data BatchPutMessage
BatchPutMessage' :: NonEmpty Message -> BatchPutMessage

-- | The list of messages to send. Each message has the following format:
--   <tt>'{ "messageId": "string", "inputName": "string", "payload":
--   "string"}'</tt>
[$sel:messages:BatchPutMessage'] :: BatchPutMessage -> NonEmpty Message

-- | Create a value of <a>BatchPutMessage</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:messages:BatchPutMessage'</a>, <a>batchPutMessage_messages</a>
--   - The list of messages to send. Each message has the following format:
--   <tt>'{ "messageId": "string", "inputName": "string", "payload":
--   "string"}'</tt>
newBatchPutMessage :: NonEmpty Message -> BatchPutMessage

-- | The list of messages to send. Each message has the following format:
--   <tt>'{ "messageId": "string", "inputName": "string", "payload":
--   "string"}'</tt>
batchPutMessage_messages :: Lens' BatchPutMessage (NonEmpty Message)

-- | <i>See:</i> <a>newBatchPutMessageResponse</a> smart constructor.
data BatchPutMessageResponse
BatchPutMessageResponse' :: Maybe [BatchPutMessageErrorEntry] -> Int -> BatchPutMessageResponse

-- | A list of any errors encountered when sending the messages.
[$sel:batchPutMessageErrorEntries:BatchPutMessageResponse'] :: BatchPutMessageResponse -> Maybe [BatchPutMessageErrorEntry]

-- | The response's http status code.
[$sel:httpStatus:BatchPutMessageResponse'] :: BatchPutMessageResponse -> Int

-- | Create a value of <a>BatchPutMessageResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:batchPutMessageErrorEntries:BatchPutMessageResponse'</a>,
--   <a>batchPutMessageResponse_batchPutMessageErrorEntries</a> - A list of
--   any errors encountered when sending the messages.
--   
--   <a>$sel:httpStatus:BatchPutMessageResponse'</a>,
--   <a>batchPutMessageResponse_httpStatus</a> - The response's http status
--   code.
newBatchPutMessageResponse :: Int -> BatchPutMessageResponse

-- | A list of any errors encountered when sending the messages.
batchPutMessageResponse_batchPutMessageErrorEntries :: Lens' BatchPutMessageResponse (Maybe [BatchPutMessageErrorEntry])

-- | The response's http status code.
batchPutMessageResponse_httpStatus :: Lens' BatchPutMessageResponse Int
instance GHC.Generics.Generic Amazonka.IoTEventsData.BatchPutMessage.BatchPutMessage
instance GHC.Show.Show Amazonka.IoTEventsData.BatchPutMessage.BatchPutMessage
instance GHC.Read.Read Amazonka.IoTEventsData.BatchPutMessage.BatchPutMessage
instance GHC.Classes.Eq Amazonka.IoTEventsData.BatchPutMessage.BatchPutMessage
instance GHC.Generics.Generic Amazonka.IoTEventsData.BatchPutMessage.BatchPutMessageResponse
instance GHC.Show.Show Amazonka.IoTEventsData.BatchPutMessage.BatchPutMessageResponse
instance GHC.Read.Read Amazonka.IoTEventsData.BatchPutMessage.BatchPutMessageResponse
instance GHC.Classes.Eq Amazonka.IoTEventsData.BatchPutMessage.BatchPutMessageResponse
instance Amazonka.Types.AWSRequest Amazonka.IoTEventsData.BatchPutMessage.BatchPutMessage
instance Control.DeepSeq.NFData Amazonka.IoTEventsData.BatchPutMessage.BatchPutMessageResponse
instance Data.Hashable.Class.Hashable Amazonka.IoTEventsData.BatchPutMessage.BatchPutMessage
instance Control.DeepSeq.NFData Amazonka.IoTEventsData.BatchPutMessage.BatchPutMessage
instance Amazonka.Data.Headers.ToHeaders Amazonka.IoTEventsData.BatchPutMessage.BatchPutMessage
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTEventsData.BatchPutMessage.BatchPutMessage
instance Amazonka.Data.Path.ToPath Amazonka.IoTEventsData.BatchPutMessage.BatchPutMessage
instance Amazonka.Data.Query.ToQuery Amazonka.IoTEventsData.BatchPutMessage.BatchPutMessage


-- | Enables one or more alarms. The alarms change to the <tt>NORMAL</tt>
--   state after you enable them.
module Amazonka.IoTEventsData.BatchEnableAlarm

-- | <i>See:</i> <a>newBatchEnableAlarm</a> smart constructor.
data BatchEnableAlarm
BatchEnableAlarm' :: NonEmpty EnableAlarmActionRequest -> BatchEnableAlarm

-- | The list of enable action requests. You can specify up to 10 requests
--   per operation.
[$sel:enableActionRequests:BatchEnableAlarm'] :: BatchEnableAlarm -> NonEmpty EnableAlarmActionRequest

-- | Create a value of <a>BatchEnableAlarm</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:enableActionRequests:BatchEnableAlarm'</a>,
--   <a>batchEnableAlarm_enableActionRequests</a> - The list of enable
--   action requests. You can specify up to 10 requests per operation.
newBatchEnableAlarm :: NonEmpty EnableAlarmActionRequest -> BatchEnableAlarm

-- | The list of enable action requests. You can specify up to 10 requests
--   per operation.
batchEnableAlarm_enableActionRequests :: Lens' BatchEnableAlarm (NonEmpty EnableAlarmActionRequest)

-- | <i>See:</i> <a>newBatchEnableAlarmResponse</a> smart constructor.
data BatchEnableAlarmResponse
BatchEnableAlarmResponse' :: Maybe [BatchAlarmActionErrorEntry] -> Int -> BatchEnableAlarmResponse

-- | A list of errors associated with the request, or <tt>null</tt> if
--   there are no errors. Each error entry contains an entry ID that helps
--   you identify the entry that failed.
[$sel:errorEntries:BatchEnableAlarmResponse'] :: BatchEnableAlarmResponse -> Maybe [BatchAlarmActionErrorEntry]

-- | The response's http status code.
[$sel:httpStatus:BatchEnableAlarmResponse'] :: BatchEnableAlarmResponse -> Int

-- | Create a value of <a>BatchEnableAlarmResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:errorEntries:BatchEnableAlarmResponse'</a>,
--   <a>batchEnableAlarmResponse_errorEntries</a> - A list of errors
--   associated with the request, or <tt>null</tt> if there are no errors.
--   Each error entry contains an entry ID that helps you identify the
--   entry that failed.
--   
--   <a>$sel:httpStatus:BatchEnableAlarmResponse'</a>,
--   <a>batchEnableAlarmResponse_httpStatus</a> - The response's http
--   status code.
newBatchEnableAlarmResponse :: Int -> BatchEnableAlarmResponse

-- | A list of errors associated with the request, or <tt>null</tt> if
--   there are no errors. Each error entry contains an entry ID that helps
--   you identify the entry that failed.
batchEnableAlarmResponse_errorEntries :: Lens' BatchEnableAlarmResponse (Maybe [BatchAlarmActionErrorEntry])

-- | The response's http status code.
batchEnableAlarmResponse_httpStatus :: Lens' BatchEnableAlarmResponse Int
instance GHC.Generics.Generic Amazonka.IoTEventsData.BatchEnableAlarm.BatchEnableAlarm
instance GHC.Show.Show Amazonka.IoTEventsData.BatchEnableAlarm.BatchEnableAlarm
instance GHC.Read.Read Amazonka.IoTEventsData.BatchEnableAlarm.BatchEnableAlarm
instance GHC.Classes.Eq Amazonka.IoTEventsData.BatchEnableAlarm.BatchEnableAlarm
instance GHC.Generics.Generic Amazonka.IoTEventsData.BatchEnableAlarm.BatchEnableAlarmResponse
instance GHC.Show.Show Amazonka.IoTEventsData.BatchEnableAlarm.BatchEnableAlarmResponse
instance GHC.Read.Read Amazonka.IoTEventsData.BatchEnableAlarm.BatchEnableAlarmResponse
instance GHC.Classes.Eq Amazonka.IoTEventsData.BatchEnableAlarm.BatchEnableAlarmResponse
instance Amazonka.Types.AWSRequest Amazonka.IoTEventsData.BatchEnableAlarm.BatchEnableAlarm
instance Control.DeepSeq.NFData Amazonka.IoTEventsData.BatchEnableAlarm.BatchEnableAlarmResponse
instance Data.Hashable.Class.Hashable Amazonka.IoTEventsData.BatchEnableAlarm.BatchEnableAlarm
instance Control.DeepSeq.NFData Amazonka.IoTEventsData.BatchEnableAlarm.BatchEnableAlarm
instance Amazonka.Data.Headers.ToHeaders Amazonka.IoTEventsData.BatchEnableAlarm.BatchEnableAlarm
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTEventsData.BatchEnableAlarm.BatchEnableAlarm
instance Amazonka.Data.Path.ToPath Amazonka.IoTEventsData.BatchEnableAlarm.BatchEnableAlarm
instance Amazonka.Data.Query.ToQuery Amazonka.IoTEventsData.BatchEnableAlarm.BatchEnableAlarm


-- | Disables one or more alarms. The alarms change to the
--   <tt>DISABLED</tt> state after you disable them.
module Amazonka.IoTEventsData.BatchDisableAlarm

-- | <i>See:</i> <a>newBatchDisableAlarm</a> smart constructor.
data BatchDisableAlarm
BatchDisableAlarm' :: NonEmpty DisableAlarmActionRequest -> BatchDisableAlarm

-- | The list of disable action requests. You can specify up to 10 requests
--   per operation.
[$sel:disableActionRequests:BatchDisableAlarm'] :: BatchDisableAlarm -> NonEmpty DisableAlarmActionRequest

-- | Create a value of <a>BatchDisableAlarm</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:disableActionRequests:BatchDisableAlarm'</a>,
--   <a>batchDisableAlarm_disableActionRequests</a> - The list of disable
--   action requests. You can specify up to 10 requests per operation.
newBatchDisableAlarm :: NonEmpty DisableAlarmActionRequest -> BatchDisableAlarm

-- | The list of disable action requests. You can specify up to 10 requests
--   per operation.
batchDisableAlarm_disableActionRequests :: Lens' BatchDisableAlarm (NonEmpty DisableAlarmActionRequest)

-- | <i>See:</i> <a>newBatchDisableAlarmResponse</a> smart constructor.
data BatchDisableAlarmResponse
BatchDisableAlarmResponse' :: Maybe [BatchAlarmActionErrorEntry] -> Int -> BatchDisableAlarmResponse

-- | A list of errors associated with the request, or <tt>null</tt> if
--   there are no errors. Each error entry contains an entry ID that helps
--   you identify the entry that failed.
[$sel:errorEntries:BatchDisableAlarmResponse'] :: BatchDisableAlarmResponse -> Maybe [BatchAlarmActionErrorEntry]

-- | The response's http status code.
[$sel:httpStatus:BatchDisableAlarmResponse'] :: BatchDisableAlarmResponse -> Int

-- | Create a value of <a>BatchDisableAlarmResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:errorEntries:BatchDisableAlarmResponse'</a>,
--   <a>batchDisableAlarmResponse_errorEntries</a> - A list of errors
--   associated with the request, or <tt>null</tt> if there are no errors.
--   Each error entry contains an entry ID that helps you identify the
--   entry that failed.
--   
--   <a>$sel:httpStatus:BatchDisableAlarmResponse'</a>,
--   <a>batchDisableAlarmResponse_httpStatus</a> - The response's http
--   status code.
newBatchDisableAlarmResponse :: Int -> BatchDisableAlarmResponse

-- | A list of errors associated with the request, or <tt>null</tt> if
--   there are no errors. Each error entry contains an entry ID that helps
--   you identify the entry that failed.
batchDisableAlarmResponse_errorEntries :: Lens' BatchDisableAlarmResponse (Maybe [BatchAlarmActionErrorEntry])

-- | The response's http status code.
batchDisableAlarmResponse_httpStatus :: Lens' BatchDisableAlarmResponse Int
instance GHC.Generics.Generic Amazonka.IoTEventsData.BatchDisableAlarm.BatchDisableAlarm
instance GHC.Show.Show Amazonka.IoTEventsData.BatchDisableAlarm.BatchDisableAlarm
instance GHC.Read.Read Amazonka.IoTEventsData.BatchDisableAlarm.BatchDisableAlarm
instance GHC.Classes.Eq Amazonka.IoTEventsData.BatchDisableAlarm.BatchDisableAlarm
instance GHC.Generics.Generic Amazonka.IoTEventsData.BatchDisableAlarm.BatchDisableAlarmResponse
instance GHC.Show.Show Amazonka.IoTEventsData.BatchDisableAlarm.BatchDisableAlarmResponse
instance GHC.Read.Read Amazonka.IoTEventsData.BatchDisableAlarm.BatchDisableAlarmResponse
instance GHC.Classes.Eq Amazonka.IoTEventsData.BatchDisableAlarm.BatchDisableAlarmResponse
instance Amazonka.Types.AWSRequest Amazonka.IoTEventsData.BatchDisableAlarm.BatchDisableAlarm
instance Control.DeepSeq.NFData Amazonka.IoTEventsData.BatchDisableAlarm.BatchDisableAlarmResponse
instance Data.Hashable.Class.Hashable Amazonka.IoTEventsData.BatchDisableAlarm.BatchDisableAlarm
instance Control.DeepSeq.NFData Amazonka.IoTEventsData.BatchDisableAlarm.BatchDisableAlarm
instance Amazonka.Data.Headers.ToHeaders Amazonka.IoTEventsData.BatchDisableAlarm.BatchDisableAlarm
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTEventsData.BatchDisableAlarm.BatchDisableAlarm
instance Amazonka.Data.Path.ToPath Amazonka.IoTEventsData.BatchDisableAlarm.BatchDisableAlarm
instance Amazonka.Data.Query.ToQuery Amazonka.IoTEventsData.BatchDisableAlarm.BatchDisableAlarm


-- | Acknowledges one or more alarms. The alarms change to the
--   <tt>ACKNOWLEDGED</tt> state after you acknowledge them.
module Amazonka.IoTEventsData.BatchAcknowledgeAlarm

-- | <i>See:</i> <a>newBatchAcknowledgeAlarm</a> smart constructor.
data BatchAcknowledgeAlarm
BatchAcknowledgeAlarm' :: NonEmpty AcknowledgeAlarmActionRequest -> BatchAcknowledgeAlarm

-- | The list of acknowledge action requests. You can specify up to 10
--   requests per operation.
[$sel:acknowledgeActionRequests:BatchAcknowledgeAlarm'] :: BatchAcknowledgeAlarm -> NonEmpty AcknowledgeAlarmActionRequest

-- | Create a value of <a>BatchAcknowledgeAlarm</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:acknowledgeActionRequests:BatchAcknowledgeAlarm'</a>,
--   <a>batchAcknowledgeAlarm_acknowledgeActionRequests</a> - The list of
--   acknowledge action requests. You can specify up to 10 requests per
--   operation.
newBatchAcknowledgeAlarm :: NonEmpty AcknowledgeAlarmActionRequest -> BatchAcknowledgeAlarm

-- | The list of acknowledge action requests. You can specify up to 10
--   requests per operation.
batchAcknowledgeAlarm_acknowledgeActionRequests :: Lens' BatchAcknowledgeAlarm (NonEmpty AcknowledgeAlarmActionRequest)

-- | <i>See:</i> <a>newBatchAcknowledgeAlarmResponse</a> smart constructor.
data BatchAcknowledgeAlarmResponse
BatchAcknowledgeAlarmResponse' :: Maybe [BatchAlarmActionErrorEntry] -> Int -> BatchAcknowledgeAlarmResponse

-- | A list of errors associated with the request, or <tt>null</tt> if
--   there are no errors. Each error entry contains an entry ID that helps
--   you identify the entry that failed.
[$sel:errorEntries:BatchAcknowledgeAlarmResponse'] :: BatchAcknowledgeAlarmResponse -> Maybe [BatchAlarmActionErrorEntry]

-- | The response's http status code.
[$sel:httpStatus:BatchAcknowledgeAlarmResponse'] :: BatchAcknowledgeAlarmResponse -> Int

-- | Create a value of <a>BatchAcknowledgeAlarmResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:errorEntries:BatchAcknowledgeAlarmResponse'</a>,
--   <a>batchAcknowledgeAlarmResponse_errorEntries</a> - A list of errors
--   associated with the request, or <tt>null</tt> if there are no errors.
--   Each error entry contains an entry ID that helps you identify the
--   entry that failed.
--   
--   <a>$sel:httpStatus:BatchAcknowledgeAlarmResponse'</a>,
--   <a>batchAcknowledgeAlarmResponse_httpStatus</a> - The response's http
--   status code.
newBatchAcknowledgeAlarmResponse :: Int -> BatchAcknowledgeAlarmResponse

-- | A list of errors associated with the request, or <tt>null</tt> if
--   there are no errors. Each error entry contains an entry ID that helps
--   you identify the entry that failed.
batchAcknowledgeAlarmResponse_errorEntries :: Lens' BatchAcknowledgeAlarmResponse (Maybe [BatchAlarmActionErrorEntry])

-- | The response's http status code.
batchAcknowledgeAlarmResponse_httpStatus :: Lens' BatchAcknowledgeAlarmResponse Int
instance GHC.Generics.Generic Amazonka.IoTEventsData.BatchAcknowledgeAlarm.BatchAcknowledgeAlarm
instance GHC.Show.Show Amazonka.IoTEventsData.BatchAcknowledgeAlarm.BatchAcknowledgeAlarm
instance GHC.Read.Read Amazonka.IoTEventsData.BatchAcknowledgeAlarm.BatchAcknowledgeAlarm
instance GHC.Classes.Eq Amazonka.IoTEventsData.BatchAcknowledgeAlarm.BatchAcknowledgeAlarm
instance GHC.Generics.Generic Amazonka.IoTEventsData.BatchAcknowledgeAlarm.BatchAcknowledgeAlarmResponse
instance GHC.Show.Show Amazonka.IoTEventsData.BatchAcknowledgeAlarm.BatchAcknowledgeAlarmResponse
instance GHC.Read.Read Amazonka.IoTEventsData.BatchAcknowledgeAlarm.BatchAcknowledgeAlarmResponse
instance GHC.Classes.Eq Amazonka.IoTEventsData.BatchAcknowledgeAlarm.BatchAcknowledgeAlarmResponse
instance Amazonka.Types.AWSRequest Amazonka.IoTEventsData.BatchAcknowledgeAlarm.BatchAcknowledgeAlarm
instance Control.DeepSeq.NFData Amazonka.IoTEventsData.BatchAcknowledgeAlarm.BatchAcknowledgeAlarmResponse
instance Data.Hashable.Class.Hashable Amazonka.IoTEventsData.BatchAcknowledgeAlarm.BatchAcknowledgeAlarm
instance Control.DeepSeq.NFData Amazonka.IoTEventsData.BatchAcknowledgeAlarm.BatchAcknowledgeAlarm
instance Amazonka.Data.Headers.ToHeaders Amazonka.IoTEventsData.BatchAcknowledgeAlarm.BatchAcknowledgeAlarm
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTEventsData.BatchAcknowledgeAlarm.BatchAcknowledgeAlarm
instance Amazonka.Data.Path.ToPath Amazonka.IoTEventsData.BatchAcknowledgeAlarm.BatchAcknowledgeAlarm
instance Amazonka.Data.Query.ToQuery Amazonka.IoTEventsData.BatchAcknowledgeAlarm.BatchAcknowledgeAlarm


module Amazonka.IoTEventsData.Lens

-- | The list of snooze action requests. You can specify up to 10 requests
--   per operation.
batchSnoozeAlarm_snoozeActionRequests :: Lens' BatchSnoozeAlarm (NonEmpty SnoozeAlarmActionRequest)

-- | A list of errors associated with the request, or <tt>null</tt> if
--   there are no errors. Each error entry contains an entry ID that helps
--   you identify the entry that failed.
batchSnoozeAlarmResponse_errorEntries :: Lens' BatchSnoozeAlarmResponse (Maybe [BatchAlarmActionErrorEntry])

-- | The response's http status code.
batchSnoozeAlarmResponse_httpStatus :: Lens' BatchSnoozeAlarmResponse Int

-- | The list of disable action requests. You can specify up to 10 requests
--   per operation.
batchDisableAlarm_disableActionRequests :: Lens' BatchDisableAlarm (NonEmpty DisableAlarmActionRequest)

-- | A list of errors associated with the request, or <tt>null</tt> if
--   there are no errors. Each error entry contains an entry ID that helps
--   you identify the entry that failed.
batchDisableAlarmResponse_errorEntries :: Lens' BatchDisableAlarmResponse (Maybe [BatchAlarmActionErrorEntry])

-- | The response's http status code.
batchDisableAlarmResponse_httpStatus :: Lens' BatchDisableAlarmResponse Int

-- | The value of the key used as a filter to select only the alarms
--   associated with the <a>key</a>.
describeAlarm_keyValue :: Lens' DescribeAlarm (Maybe Text)

-- | The name of the alarm model.
describeAlarm_alarmModelName :: Lens' DescribeAlarm Text

-- | Contains information about an alarm.
describeAlarmResponse_alarm :: Lens' DescribeAlarmResponse (Maybe Alarm)

-- | The response's http status code.
describeAlarmResponse_httpStatus :: Lens' DescribeAlarmResponse Int

-- | The list of messages to send. Each message has the following format:
--   <tt>'{ "messageId": "string", "inputName": "string", "payload":
--   "string"}'</tt>
batchPutMessage_messages :: Lens' BatchPutMessage (NonEmpty Message)

-- | A list of any errors encountered when sending the messages.
batchPutMessageResponse_batchPutMessageErrorEntries :: Lens' BatchPutMessageResponse (Maybe [BatchPutMessageErrorEntry])

-- | The response's http status code.
batchPutMessageResponse_httpStatus :: Lens' BatchPutMessageResponse Int

-- | A filter used to limit results to detectors (instances) created
--   because of the given key ID.
describeDetector_keyValue :: Lens' DescribeDetector (Maybe Text)

-- | The name of the detector model whose detectors (instances) you want
--   information about.
describeDetector_detectorModelName :: Lens' DescribeDetector Text

-- | Information about the detector (instance).
describeDetectorResponse_detector :: Lens' DescribeDetectorResponse (Maybe Detector)

-- | The response's http status code.
describeDetectorResponse_httpStatus :: Lens' DescribeDetectorResponse Int

-- | The list of detectors (instances) to update, along with the values to
--   update.
batchUpdateDetector_detectors :: Lens' BatchUpdateDetector (NonEmpty UpdateDetectorRequest)

-- | A list of those detector updates that resulted in errors. (If an error
--   is listed here, the specific update did not occur.)
batchUpdateDetectorResponse_batchUpdateDetectorErrorEntries :: Lens' BatchUpdateDetectorResponse (Maybe [BatchUpdateDetectorErrorEntry])

-- | The response's http status code.
batchUpdateDetectorResponse_httpStatus :: Lens' BatchUpdateDetectorResponse Int

-- | The list of acknowledge action requests. You can specify up to 10
--   requests per operation.
batchAcknowledgeAlarm_acknowledgeActionRequests :: Lens' BatchAcknowledgeAlarm (NonEmpty AcknowledgeAlarmActionRequest)

-- | A list of errors associated with the request, or <tt>null</tt> if
--   there are no errors. Each error entry contains an entry ID that helps
--   you identify the entry that failed.
batchAcknowledgeAlarmResponse_errorEntries :: Lens' BatchAcknowledgeAlarmResponse (Maybe [BatchAlarmActionErrorEntry])

-- | The response's http status code.
batchAcknowledgeAlarmResponse_httpStatus :: Lens' BatchAcknowledgeAlarmResponse Int

-- | The token that you can use to return the next set of results.
listAlarms_nextToken :: Lens' ListAlarms (Maybe Text)

-- | The maximum number of results to be returned per request.
listAlarms_maxResults :: Lens' ListAlarms (Maybe Natural)

-- | The name of the alarm model.
listAlarms_alarmModelName :: Lens' ListAlarms Text

-- | The token that you can use to return the next set of results, or
--   <tt>null</tt> if there are no more results.
listAlarmsResponse_nextToken :: Lens' ListAlarmsResponse (Maybe Text)

-- | A list that summarizes each alarm.
listAlarmsResponse_alarmSummaries :: Lens' ListAlarmsResponse (Maybe [AlarmSummary])

-- | The response's http status code.
listAlarmsResponse_httpStatus :: Lens' ListAlarmsResponse Int

-- | The list of reset action requests. You can specify up to 10 requests
--   per operation.
batchResetAlarm_resetActionRequests :: Lens' BatchResetAlarm (NonEmpty ResetAlarmActionRequest)

-- | A list of errors associated with the request, or <tt>null</tt> if
--   there are no errors. Each error entry contains an entry ID that helps
--   you identify the entry that failed.
batchResetAlarmResponse_errorEntries :: Lens' BatchResetAlarmResponse (Maybe [BatchAlarmActionErrorEntry])

-- | The response's http status code.
batchResetAlarmResponse_httpStatus :: Lens' BatchResetAlarmResponse Int

-- | The token that you can use to return the next set of results.
listDetectors_nextToken :: Lens' ListDetectors (Maybe Text)

-- | A filter that limits results to those detectors (instances) in the
--   given state.
listDetectors_stateName :: Lens' ListDetectors (Maybe Text)

-- | The maximum number of results to be returned per request.
listDetectors_maxResults :: Lens' ListDetectors (Maybe Natural)

-- | The name of the detector model whose detectors (instances) are listed.
listDetectors_detectorModelName :: Lens' ListDetectors Text

-- | The token that you can use to return the next set of results, or
--   <tt>null</tt> if there are no more results.
listDetectorsResponse_nextToken :: Lens' ListDetectorsResponse (Maybe Text)

-- | A list of summary information about the detectors (instances).
listDetectorsResponse_detectorSummaries :: Lens' ListDetectorsResponse (Maybe [DetectorSummary])

-- | The response's http status code.
listDetectorsResponse_httpStatus :: Lens' ListDetectorsResponse Int

-- | The list of enable action requests. You can specify up to 10 requests
--   per operation.
batchEnableAlarm_enableActionRequests :: Lens' BatchEnableAlarm (NonEmpty EnableAlarmActionRequest)

-- | A list of errors associated with the request, or <tt>null</tt> if
--   there are no errors. Each error entry contains an entry ID that helps
--   you identify the entry that failed.
batchEnableAlarmResponse_errorEntries :: Lens' BatchEnableAlarmResponse (Maybe [BatchAlarmActionErrorEntry])

-- | The response's http status code.
batchEnableAlarmResponse_httpStatus :: Lens' BatchEnableAlarmResponse Int

-- | The note that you can leave when you acknowledge the alarm.
acknowledgeActionConfiguration_note :: Lens' AcknowledgeActionConfiguration (Maybe Text)

-- | The value of the key used as a filter to select only the alarms
--   associated with the <a>key</a>.
acknowledgeAlarmActionRequest_keyValue :: Lens' AcknowledgeAlarmActionRequest (Maybe Text)

-- | The note that you can leave when you acknowledge the alarm.
acknowledgeAlarmActionRequest_note :: Lens' AcknowledgeAlarmActionRequest (Maybe Text)

-- | The request ID. Each ID must be unique within each batch.
acknowledgeAlarmActionRequest_requestId :: Lens' AcknowledgeAlarmActionRequest Text

-- | The name of the alarm model.
acknowledgeAlarmActionRequest_alarmModelName :: Lens' AcknowledgeAlarmActionRequest Text

-- | The value of the key used as a filter to select only the alarms
--   associated with the <a>key</a>.
alarm_keyValue :: Lens' Alarm (Maybe Text)

-- | The time the alarm was created, in the Unix epoch format.
alarm_creationTime :: Lens' Alarm (Maybe UTCTime)

-- | Contains information about the current state of the alarm.
alarm_alarmState :: Lens' Alarm (Maybe AlarmState)

-- | The name of the alarm model.
alarm_alarmModelName :: Lens' Alarm (Maybe Text)

-- | A non-negative integer that reflects the severity level of the alarm.
alarm_severity :: Lens' Alarm (Maybe Natural)

-- | The time the alarm was last updated, in the Unix epoch format.
alarm_lastUpdateTime :: Lens' Alarm (Maybe UTCTime)

-- | The version of the alarm model.
alarm_alarmModelVersion :: Lens' Alarm (Maybe Text)

-- | Contains information about the action that you can take to respond to
--   the alarm.
alarmState_customerAction :: Lens' AlarmState (Maybe CustomerAction)

-- | The name of the alarm state. The state name can be one of the
--   following values:
--   
--   <ul>
--   <li><tt>DISABLED</tt> - When the alarm is in the <tt>DISABLED</tt>
--   state, it isn't ready to evaluate data. To enable the alarm, you must
--   change the alarm to the <tt>NORMAL</tt> state.</li>
--   <li><tt>NORMAL</tt> - When the alarm is in the <tt>NORMAL</tt> state,
--   it's ready to evaluate data.</li>
--   <li><tt>ACTIVE</tt> - If the alarm is in the <tt>ACTIVE</tt> state,
--   the alarm is invoked.</li>
--   <li><tt>ACKNOWLEDGED</tt> - When the alarm is in the
--   <tt>ACKNOWLEDGED</tt> state, the alarm was invoked and you
--   acknowledged the alarm.</li>
--   <li><tt>SNOOZE_DISABLED</tt> - When the alarm is in the
--   <tt>SNOOZE_DISABLED</tt> state, the alarm is disabled for a specified
--   period of time. After the snooze time, the alarm automatically changes
--   to the <tt>NORMAL</tt> state.</li>
--   <li><tt>LATCHED</tt> - When the alarm is in the <tt>LATCHED</tt>
--   state, the alarm was invoked. However, the data that the alarm is
--   currently evaluating is within the specified range. To change the
--   alarm to the <tt>NORMAL</tt> state, you must acknowledge the
--   alarm.</li>
--   </ul>
alarmState_stateName :: Lens' AlarmState (Maybe AlarmStateName)

-- | Information needed to evaluate data.
alarmState_ruleEvaluation :: Lens' AlarmState (Maybe RuleEvaluation)

-- | Contains information about alarm state changes.
alarmState_systemEvent :: Lens' AlarmState (Maybe SystemEvent)

-- | The value of the key used as a filter to select only the alarms
--   associated with the <a>key</a>.
alarmSummary_keyValue :: Lens' AlarmSummary (Maybe Text)

-- | The time the alarm was created, in the Unix epoch format.
alarmSummary_creationTime :: Lens' AlarmSummary (Maybe UTCTime)

-- | The name of the alarm model.
alarmSummary_alarmModelName :: Lens' AlarmSummary (Maybe Text)

-- | The name of the alarm state. The state name can be one of the
--   following values:
--   
--   <ul>
--   <li><tt>DISABLED</tt> - When the alarm is in the <tt>DISABLED</tt>
--   state, it isn't ready to evaluate data. To enable the alarm, you must
--   change the alarm to the <tt>NORMAL</tt> state.</li>
--   <li><tt>NORMAL</tt> - When the alarm is in the <tt>NORMAL</tt> state,
--   it's ready to evaluate data.</li>
--   <li><tt>ACTIVE</tt> - If the alarm is in the <tt>ACTIVE</tt> state,
--   the alarm is invoked.</li>
--   <li><tt>ACKNOWLEDGED</tt> - When the alarm is in the
--   <tt>ACKNOWLEDGED</tt> state, the alarm was invoked and you
--   acknowledged the alarm.</li>
--   <li><tt>SNOOZE_DISABLED</tt> - When the alarm is in the
--   <tt>SNOOZE_DISABLED</tt> state, the alarm is disabled for a specified
--   period of time. After the snooze time, the alarm automatically changes
--   to the <tt>NORMAL</tt> state.</li>
--   <li><tt>LATCHED</tt> - When the alarm is in the <tt>LATCHED</tt>
--   state, the alarm was invoked. However, the data that the alarm is
--   currently evaluating is within the specified range. To change the
--   alarm to the <tt>NORMAL</tt> state, you must acknowledge the
--   alarm.</li>
--   </ul>
alarmSummary_stateName :: Lens' AlarmSummary (Maybe AlarmStateName)

-- | The time the alarm was last updated, in the Unix epoch format.
alarmSummary_lastUpdateTime :: Lens' AlarmSummary (Maybe UTCTime)

-- | The version of the alarm model.
alarmSummary_alarmModelVersion :: Lens' AlarmSummary (Maybe Text)

-- | The request ID. Each ID must be unique within each batch.
batchAlarmActionErrorEntry_requestId :: Lens' BatchAlarmActionErrorEntry (Maybe Text)

-- | The error code.
batchAlarmActionErrorEntry_errorCode :: Lens' BatchAlarmActionErrorEntry (Maybe ErrorCode)

-- | A message that describes the error.
batchAlarmActionErrorEntry_errorMessage :: Lens' BatchAlarmActionErrorEntry (Maybe Text)

-- | The error code.
batchPutMessageErrorEntry_errorCode :: Lens' BatchPutMessageErrorEntry (Maybe ErrorCode)

-- | A message that describes the error.
batchPutMessageErrorEntry_errorMessage :: Lens' BatchPutMessageErrorEntry (Maybe Text)

-- | The ID of the message that caused the error. (See the value
--   corresponding to the <tt>"messageId"</tt> key in the
--   <tt>"message"</tt> object.)
batchPutMessageErrorEntry_messageId :: Lens' BatchPutMessageErrorEntry (Maybe Text)

-- | The error code.
batchUpdateDetectorErrorEntry_errorCode :: Lens' BatchUpdateDetectorErrorEntry (Maybe ErrorCode)

-- | A message that describes the error.
batchUpdateDetectorErrorEntry_errorMessage :: Lens' BatchUpdateDetectorErrorEntry (Maybe Text)

-- | The <tt>"messageId"</tt> of the update request that caused the error.
--   (The value of the <tt>"messageId"</tt> in the update request
--   <tt>"Detector"</tt> object.)
batchUpdateDetectorErrorEntry_messageId :: Lens' BatchUpdateDetectorErrorEntry (Maybe Text)

-- | Contains the configuration information of a reset action.
customerAction_resetActionConfiguration :: Lens' CustomerAction (Maybe ResetActionConfiguration)

-- | The name of the action. The action name can be one of the following
--   values:
--   
--   <ul>
--   <li><tt>SNOOZE</tt> - When you snooze the alarm, the alarm state
--   changes to <tt>SNOOZE_DISABLED</tt>.</li>
--   <li><tt>ENABLE</tt> - When you enable the alarm, the alarm state
--   changes to <tt>NORMAL</tt>.</li>
--   <li><tt>DISABLE</tt> - When you disable the alarm, the alarm state
--   changes to <tt>DISABLED</tt>.</li>
--   <li><tt>ACKNOWLEDGE</tt> - When you acknowledge the alarm, the alarm
--   state changes to <tt>ACKNOWLEDGED</tt>.</li>
--   <li><tt>RESET</tt> - When you reset the alarm, the alarm state changes
--   to <tt>NORMAL</tt>.</li>
--   </ul>
--   
--   For more information, see the <a>AlarmState</a> API.
customerAction_actionName :: Lens' CustomerAction (Maybe CustomerActionName)

-- | Contains the configuration information of a snooze action.
customerAction_snoozeActionConfiguration :: Lens' CustomerAction (Maybe SnoozeActionConfiguration)

-- | Contains the configuration information of an enable action.
customerAction_enableActionConfiguration :: Lens' CustomerAction (Maybe EnableActionConfiguration)

-- | Contains the configuration information of a disable action.
customerAction_disableActionConfiguration :: Lens' CustomerAction (Maybe DisableActionConfiguration)

-- | Contains the configuration information of an acknowledge action.
customerAction_acknowledgeActionConfiguration :: Lens' CustomerAction (Maybe AcknowledgeActionConfiguration)

-- | The value of the key (identifying the device or system) that caused
--   the creation of this detector (instance).
detector_keyValue :: Lens' Detector (Maybe Text)

-- | The time the detector (instance) was created.
detector_creationTime :: Lens' Detector (Maybe UTCTime)

-- | The current state of the detector (instance).
detector_state :: Lens' Detector (Maybe DetectorState)

-- | The name of the detector model that created this detector (instance).
detector_detectorModelName :: Lens' Detector (Maybe Text)

-- | The version of the detector model that created this detector
--   (instance).
detector_detectorModelVersion :: Lens' Detector (Maybe Text)

-- | The time the detector (instance) was last updated.
detector_lastUpdateTime :: Lens' Detector (Maybe UTCTime)

-- | The name of the state.
detectorState_stateName :: Lens' DetectorState Text

-- | The current values of the detector's variables.
detectorState_variables :: Lens' DetectorState [Variable]

-- | The current state of the detector's timers.
detectorState_timers :: Lens' DetectorState [Timer]

-- | The name of the new state of the detector (instance).
detectorStateDefinition_stateName :: Lens' DetectorStateDefinition Text

-- | The new values of the detector's variables. Any variable whose value
--   isn't specified is cleared.
detectorStateDefinition_variables :: Lens' DetectorStateDefinition [VariableDefinition]

-- | The new values of the detector's timers. Any timer whose value isn't
--   specified is cleared, and its timeout event won't occur.
detectorStateDefinition_timers :: Lens' DetectorStateDefinition [TimerDefinition]

-- | The name of the state.
detectorStateSummary_stateName :: Lens' DetectorStateSummary (Maybe Text)

-- | The value of the key (identifying the device or system) that caused
--   the creation of this detector (instance).
detectorSummary_keyValue :: Lens' DetectorSummary (Maybe Text)

-- | The time the detector (instance) was created.
detectorSummary_creationTime :: Lens' DetectorSummary (Maybe UTCTime)

-- | The current state of the detector (instance).
detectorSummary_state :: Lens' DetectorSummary (Maybe DetectorStateSummary)

-- | The name of the detector model that created this detector (instance).
detectorSummary_detectorModelName :: Lens' DetectorSummary (Maybe Text)

-- | The version of the detector model that created this detector
--   (instance).
detectorSummary_detectorModelVersion :: Lens' DetectorSummary (Maybe Text)

-- | The time the detector (instance) was last updated.
detectorSummary_lastUpdateTime :: Lens' DetectorSummary (Maybe UTCTime)

-- | The note that you can leave when you disable the alarm.
disableActionConfiguration_note :: Lens' DisableActionConfiguration (Maybe Text)

-- | The value of the key used as a filter to select only the alarms
--   associated with the <a>key</a>.
disableAlarmActionRequest_keyValue :: Lens' DisableAlarmActionRequest (Maybe Text)

-- | The note that you can leave when you disable the alarm.
disableAlarmActionRequest_note :: Lens' DisableAlarmActionRequest (Maybe Text)

-- | The request ID. Each ID must be unique within each batch.
disableAlarmActionRequest_requestId :: Lens' DisableAlarmActionRequest Text

-- | The name of the alarm model.
disableAlarmActionRequest_alarmModelName :: Lens' DisableAlarmActionRequest Text

-- | The note that you can leave when you enable the alarm.
enableActionConfiguration_note :: Lens' EnableActionConfiguration (Maybe Text)

-- | The value of the key used as a filter to select only the alarms
--   associated with the <a>key</a>.
enableAlarmActionRequest_keyValue :: Lens' EnableAlarmActionRequest (Maybe Text)

-- | The note that you can leave when you enable the alarm.
enableAlarmActionRequest_note :: Lens' EnableAlarmActionRequest (Maybe Text)

-- | The request ID. Each ID must be unique within each batch.
enableAlarmActionRequest_requestId :: Lens' EnableAlarmActionRequest Text

-- | The name of the alarm model.
enableAlarmActionRequest_alarmModelName :: Lens' EnableAlarmActionRequest Text

-- | The timestamp associated with the message.
message_timestamp :: Lens' Message (Maybe TimestampValue)

-- | The ID to assign to the message. Within each batch sent, each
--   <tt>"messageId"</tt> must be unique.
message_messageId :: Lens' Message Text

-- | The name of the input into which the message payload is transformed.
message_inputName :: Lens' Message Text

-- | The payload of the message. This can be a JSON string or a
--   Base-64-encoded string representing binary data (in which case you
--   must decode it).-- -- <i>Note:</i> This <tt>Lens</tt> automatically
--   encodes and decodes Base64 data. -- The underlying isomorphism will
--   encode to Base64 representation during -- serialisation, and decode
--   from Base64 representation during deserialisation. -- This
--   <tt>Lens</tt> accepts and returns only raw unencoded data.
message_payload :: Lens' Message ByteString

-- | The note that you can leave when you reset the alarm.
resetActionConfiguration_note :: Lens' ResetActionConfiguration (Maybe Text)

-- | The value of the key used as a filter to select only the alarms
--   associated with the <a>key</a>.
resetAlarmActionRequest_keyValue :: Lens' ResetAlarmActionRequest (Maybe Text)

-- | The note that you can leave when you reset the alarm.
resetAlarmActionRequest_note :: Lens' ResetAlarmActionRequest (Maybe Text)

-- | The request ID. Each ID must be unique within each batch.
resetAlarmActionRequest_requestId :: Lens' ResetAlarmActionRequest Text

-- | The name of the alarm model.
resetAlarmActionRequest_alarmModelName :: Lens' ResetAlarmActionRequest Text

-- | Information needed to compare two values with a comparison operator.
ruleEvaluation_simpleRuleEvaluation :: Lens' RuleEvaluation (Maybe SimpleRuleEvaluation)

-- | The threshold value, on the right side of the comparison operator.
simpleRuleEvaluation_thresholdValue :: Lens' SimpleRuleEvaluation (Maybe Text)

-- | The value of the input property, on the left side of the comparison
--   operator.
simpleRuleEvaluation_inputPropertyValue :: Lens' SimpleRuleEvaluation (Maybe Text)

-- | The comparison operator.
simpleRuleEvaluation_operator :: Lens' SimpleRuleEvaluation (Maybe ComparisonOperator)

-- | The note that you can leave when you snooze the alarm.
snoozeActionConfiguration_note :: Lens' SnoozeActionConfiguration (Maybe Text)

-- | The snooze time in seconds. The alarm automatically changes to the
--   <tt>NORMAL</tt> state after this duration.
snoozeActionConfiguration_snoozeDuration :: Lens' SnoozeActionConfiguration (Maybe Int)

-- | The value of the key used as a filter to select only the alarms
--   associated with the <a>key</a>.
snoozeAlarmActionRequest_keyValue :: Lens' SnoozeAlarmActionRequest (Maybe Text)

-- | The note that you can leave when you snooze the alarm.
snoozeAlarmActionRequest_note :: Lens' SnoozeAlarmActionRequest (Maybe Text)

-- | The request ID. Each ID must be unique within each batch.
snoozeAlarmActionRequest_requestId :: Lens' SnoozeAlarmActionRequest Text

-- | The name of the alarm model.
snoozeAlarmActionRequest_alarmModelName :: Lens' SnoozeAlarmActionRequest Text

-- | The snooze time in seconds. The alarm automatically changes to the
--   <tt>NORMAL</tt> state after this duration.
snoozeAlarmActionRequest_snoozeDuration :: Lens' SnoozeAlarmActionRequest Int

-- | The trigger type. If the value is <tt>SNOOZE_TIMEOUT</tt>, the snooze
--   duration ends and the alarm automatically changes to the
--   <tt>NORMAL</tt> state.
stateChangeConfiguration_triggerType :: Lens' StateChangeConfiguration (Maybe TriggerType)

-- | The event type. If the value is <tt>STATE_CHANGE</tt>, the event
--   contains information about alarm state changes.
systemEvent_eventType :: Lens' SystemEvent (Maybe EventType)

-- | Contains the configuration information of alarm state changes.
systemEvent_stateChangeConfiguration :: Lens' SystemEvent (Maybe StateChangeConfiguration)

-- | The name of the timer.
timer_name :: Lens' Timer Text

-- | The number of seconds which have elapsed on the timer.
timer_timestamp :: Lens' Timer UTCTime

-- | The name of the timer.
timerDefinition_name :: Lens' TimerDefinition Text

-- | The new setting of the timer (the number of seconds before the timer
--   elapses).
timerDefinition_seconds :: Lens' TimerDefinition Int

-- | The value of the timestamp, in the Unix epoch format.
timestampValue_timeInMillis :: Lens' TimestampValue (Maybe Natural)

-- | The value of the input key attribute (identifying the device or
--   system) that caused the creation of this detector (instance).
updateDetectorRequest_keyValue :: Lens' UpdateDetectorRequest (Maybe Text)

-- | The ID to assign to the detector update <tt>"message"</tt>. Each
--   <tt>"messageId"</tt> must be unique within each batch sent.
updateDetectorRequest_messageId :: Lens' UpdateDetectorRequest Text

-- | The name of the detector model that created the detectors (instances).
updateDetectorRequest_detectorModelName :: Lens' UpdateDetectorRequest Text

-- | The new state, variable values, and timer settings of the detector
--   (instance).
updateDetectorRequest_state :: Lens' UpdateDetectorRequest DetectorStateDefinition

-- | The name of the variable.
variable_name :: Lens' Variable Text

-- | The current value of the variable.
variable_value :: Lens' Variable Text

-- | The name of the variable.
variableDefinition_name :: Lens' VariableDefinition Text

-- | The new value of the variable.
variableDefinition_value :: Lens' VariableDefinition Text


module Amazonka.IoTEventsData.Waiters


-- | Derived from API version <tt>2018-10-23</tt> of the AWS service
--   descriptions, licensed under Apache 2.0.
--   
--   AWS IoT Events monitors your equipment or device fleets for failures
--   or changes in operation, and triggers actions when such events occur.
--   You can use AWS IoT Events Data API commands to send inputs to
--   detectors, list detectors, and view or update a detector's status.
--   
--   For more information, see <a>What is AWS IoT Events?</a> in the <i>AWS
--   IoT Events Developer Guide</i>.
module Amazonka.IoTEventsData

-- | API version <tt>2018-10-23</tt> of the Amazon IoT Events Data SDK
--   configuration.
defaultService :: Service

-- | The request was invalid.
_InvalidRequestException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request could not be completed due to throttling.
_ThrottlingException :: AsError a => Getting (First ServiceError) a ServiceError

-- | An internal failure occurred.
_InternalFailureException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The service is currently unavailable.
_ServiceUnavailableException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The resource was not found.
_ResourceNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | <i>See:</i> <a>newBatchSnoozeAlarm</a> smart constructor.
data BatchSnoozeAlarm
BatchSnoozeAlarm' :: NonEmpty SnoozeAlarmActionRequest -> BatchSnoozeAlarm

-- | Create a value of <a>BatchSnoozeAlarm</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:snoozeActionRequests:BatchSnoozeAlarm'</a>,
--   <a>batchSnoozeAlarm_snoozeActionRequests</a> - The list of snooze
--   action requests. You can specify up to 10 requests per operation.
newBatchSnoozeAlarm :: NonEmpty SnoozeAlarmActionRequest -> BatchSnoozeAlarm

-- | <i>See:</i> <a>newBatchSnoozeAlarmResponse</a> smart constructor.
data BatchSnoozeAlarmResponse
BatchSnoozeAlarmResponse' :: Maybe [BatchAlarmActionErrorEntry] -> Int -> BatchSnoozeAlarmResponse

-- | Create a value of <a>BatchSnoozeAlarmResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:errorEntries:BatchSnoozeAlarmResponse'</a>,
--   <a>batchSnoozeAlarmResponse_errorEntries</a> - A list of errors
--   associated with the request, or <tt>null</tt> if there are no errors.
--   Each error entry contains an entry ID that helps you identify the
--   entry that failed.
--   
--   <a>$sel:httpStatus:BatchSnoozeAlarmResponse'</a>,
--   <a>batchSnoozeAlarmResponse_httpStatus</a> - The response's http
--   status code.
newBatchSnoozeAlarmResponse :: Int -> BatchSnoozeAlarmResponse

-- | <i>See:</i> <a>newBatchDisableAlarm</a> smart constructor.
data BatchDisableAlarm
BatchDisableAlarm' :: NonEmpty DisableAlarmActionRequest -> BatchDisableAlarm

-- | Create a value of <a>BatchDisableAlarm</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:disableActionRequests:BatchDisableAlarm'</a>,
--   <a>batchDisableAlarm_disableActionRequests</a> - The list of disable
--   action requests. You can specify up to 10 requests per operation.
newBatchDisableAlarm :: NonEmpty DisableAlarmActionRequest -> BatchDisableAlarm

-- | <i>See:</i> <a>newBatchDisableAlarmResponse</a> smart constructor.
data BatchDisableAlarmResponse
BatchDisableAlarmResponse' :: Maybe [BatchAlarmActionErrorEntry] -> Int -> BatchDisableAlarmResponse

-- | Create a value of <a>BatchDisableAlarmResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:errorEntries:BatchDisableAlarmResponse'</a>,
--   <a>batchDisableAlarmResponse_errorEntries</a> - A list of errors
--   associated with the request, or <tt>null</tt> if there are no errors.
--   Each error entry contains an entry ID that helps you identify the
--   entry that failed.
--   
--   <a>$sel:httpStatus:BatchDisableAlarmResponse'</a>,
--   <a>batchDisableAlarmResponse_httpStatus</a> - The response's http
--   status code.
newBatchDisableAlarmResponse :: Int -> BatchDisableAlarmResponse

-- | <i>See:</i> <a>newDescribeAlarm</a> smart constructor.
data DescribeAlarm
DescribeAlarm' :: Maybe Text -> Text -> DescribeAlarm

-- | Create a value of <a>DescribeAlarm</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:keyValue:DescribeAlarm'</a>, <a>describeAlarm_keyValue</a> -
--   The value of the key used as a filter to select only the alarms
--   associated with the <a>key</a>.
--   
--   <a>$sel:alarmModelName:DescribeAlarm'</a>,
--   <a>describeAlarm_alarmModelName</a> - The name of the alarm model.
newDescribeAlarm :: Text -> DescribeAlarm

-- | <i>See:</i> <a>newDescribeAlarmResponse</a> smart constructor.
data DescribeAlarmResponse
DescribeAlarmResponse' :: Maybe Alarm -> Int -> DescribeAlarmResponse

-- | Create a value of <a>DescribeAlarmResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:alarm:DescribeAlarmResponse'</a>,
--   <a>describeAlarmResponse_alarm</a> - Contains information about an
--   alarm.
--   
--   <a>$sel:httpStatus:DescribeAlarmResponse'</a>,
--   <a>describeAlarmResponse_httpStatus</a> - The response's http status
--   code.
newDescribeAlarmResponse :: Int -> DescribeAlarmResponse

-- | <i>See:</i> <a>newBatchPutMessage</a> smart constructor.
data BatchPutMessage
BatchPutMessage' :: NonEmpty Message -> BatchPutMessage

-- | Create a value of <a>BatchPutMessage</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:messages:BatchPutMessage'</a>, <a>batchPutMessage_messages</a>
--   - The list of messages to send. Each message has the following format:
--   <tt>'{ "messageId": "string", "inputName": "string", "payload":
--   "string"}'</tt>
newBatchPutMessage :: NonEmpty Message -> BatchPutMessage

-- | <i>See:</i> <a>newBatchPutMessageResponse</a> smart constructor.
data BatchPutMessageResponse
BatchPutMessageResponse' :: Maybe [BatchPutMessageErrorEntry] -> Int -> BatchPutMessageResponse

-- | Create a value of <a>BatchPutMessageResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:batchPutMessageErrorEntries:BatchPutMessageResponse'</a>,
--   <a>batchPutMessageResponse_batchPutMessageErrorEntries</a> - A list of
--   any errors encountered when sending the messages.
--   
--   <a>$sel:httpStatus:BatchPutMessageResponse'</a>,
--   <a>batchPutMessageResponse_httpStatus</a> - The response's http status
--   code.
newBatchPutMessageResponse :: Int -> BatchPutMessageResponse

-- | <i>See:</i> <a>newDescribeDetector</a> smart constructor.
data DescribeDetector
DescribeDetector' :: Maybe Text -> Text -> DescribeDetector

-- | Create a value of <a>DescribeDetector</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:keyValue:DescribeDetector'</a>,
--   <a>describeDetector_keyValue</a> - A filter used to limit results to
--   detectors (instances) created because of the given key ID.
--   
--   <a>$sel:detectorModelName:DescribeDetector'</a>,
--   <a>describeDetector_detectorModelName</a> - The name of the detector
--   model whose detectors (instances) you want information about.
newDescribeDetector :: Text -> DescribeDetector

-- | <i>See:</i> <a>newDescribeDetectorResponse</a> smart constructor.
data DescribeDetectorResponse
DescribeDetectorResponse' :: Maybe Detector -> Int -> DescribeDetectorResponse

-- | Create a value of <a>DescribeDetectorResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:detector:DescribeDetectorResponse'</a>,
--   <a>describeDetectorResponse_detector</a> - Information about the
--   detector (instance).
--   
--   <a>$sel:httpStatus:DescribeDetectorResponse'</a>,
--   <a>describeDetectorResponse_httpStatus</a> - The response's http
--   status code.
newDescribeDetectorResponse :: Int -> DescribeDetectorResponse

-- | <i>See:</i> <a>newBatchUpdateDetector</a> smart constructor.
data BatchUpdateDetector
BatchUpdateDetector' :: NonEmpty UpdateDetectorRequest -> BatchUpdateDetector

-- | Create a value of <a>BatchUpdateDetector</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:detectors:BatchUpdateDetector'</a>,
--   <a>batchUpdateDetector_detectors</a> - The list of detectors
--   (instances) to update, along with the values to update.
newBatchUpdateDetector :: NonEmpty UpdateDetectorRequest -> BatchUpdateDetector

-- | <i>See:</i> <a>newBatchUpdateDetectorResponse</a> smart constructor.
data BatchUpdateDetectorResponse
BatchUpdateDetectorResponse' :: Maybe [BatchUpdateDetectorErrorEntry] -> Int -> BatchUpdateDetectorResponse

-- | Create a value of <a>BatchUpdateDetectorResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:batchUpdateDetectorErrorEntries:BatchUpdateDetectorResponse'</a>,
--   <a>batchUpdateDetectorResponse_batchUpdateDetectorErrorEntries</a> - A
--   list of those detector updates that resulted in errors. (If an error
--   is listed here, the specific update did not occur.)
--   
--   <a>$sel:httpStatus:BatchUpdateDetectorResponse'</a>,
--   <a>batchUpdateDetectorResponse_httpStatus</a> - The response's http
--   status code.
newBatchUpdateDetectorResponse :: Int -> BatchUpdateDetectorResponse

-- | <i>See:</i> <a>newBatchAcknowledgeAlarm</a> smart constructor.
data BatchAcknowledgeAlarm
BatchAcknowledgeAlarm' :: NonEmpty AcknowledgeAlarmActionRequest -> BatchAcknowledgeAlarm

-- | Create a value of <a>BatchAcknowledgeAlarm</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:acknowledgeActionRequests:BatchAcknowledgeAlarm'</a>,
--   <a>batchAcknowledgeAlarm_acknowledgeActionRequests</a> - The list of
--   acknowledge action requests. You can specify up to 10 requests per
--   operation.
newBatchAcknowledgeAlarm :: NonEmpty AcknowledgeAlarmActionRequest -> BatchAcknowledgeAlarm

-- | <i>See:</i> <a>newBatchAcknowledgeAlarmResponse</a> smart constructor.
data BatchAcknowledgeAlarmResponse
BatchAcknowledgeAlarmResponse' :: Maybe [BatchAlarmActionErrorEntry] -> Int -> BatchAcknowledgeAlarmResponse

-- | Create a value of <a>BatchAcknowledgeAlarmResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:errorEntries:BatchAcknowledgeAlarmResponse'</a>,
--   <a>batchAcknowledgeAlarmResponse_errorEntries</a> - A list of errors
--   associated with the request, or <tt>null</tt> if there are no errors.
--   Each error entry contains an entry ID that helps you identify the
--   entry that failed.
--   
--   <a>$sel:httpStatus:BatchAcknowledgeAlarmResponse'</a>,
--   <a>batchAcknowledgeAlarmResponse_httpStatus</a> - The response's http
--   status code.
newBatchAcknowledgeAlarmResponse :: Int -> BatchAcknowledgeAlarmResponse

-- | <i>See:</i> <a>newListAlarms</a> smart constructor.
data ListAlarms
ListAlarms' :: Maybe Text -> Maybe Natural -> Text -> ListAlarms

-- | Create a value of <a>ListAlarms</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListAlarms'</a>, <a>listAlarms_nextToken</a> - The
--   token that you can use to return the next set of results.
--   
--   <a>$sel:maxResults:ListAlarms'</a>, <a>listAlarms_maxResults</a> - The
--   maximum number of results to be returned per request.
--   
--   <a>$sel:alarmModelName:ListAlarms'</a>,
--   <a>listAlarms_alarmModelName</a> - The name of the alarm model.
newListAlarms :: Text -> ListAlarms

-- | <i>See:</i> <a>newListAlarmsResponse</a> smart constructor.
data ListAlarmsResponse
ListAlarmsResponse' :: Maybe Text -> Maybe [AlarmSummary] -> Int -> ListAlarmsResponse

-- | Create a value of <a>ListAlarmsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListAlarms'</a>, <a>listAlarmsResponse_nextToken</a>
--   - The token that you can use to return the next set of results, or
--   <tt>null</tt> if there are no more results.
--   
--   <a>$sel:alarmSummaries:ListAlarmsResponse'</a>,
--   <a>listAlarmsResponse_alarmSummaries</a> - A list that summarizes each
--   alarm.
--   
--   <a>$sel:httpStatus:ListAlarmsResponse'</a>,
--   <a>listAlarmsResponse_httpStatus</a> - The response's http status
--   code.
newListAlarmsResponse :: Int -> ListAlarmsResponse

-- | <i>See:</i> <a>newBatchResetAlarm</a> smart constructor.
data BatchResetAlarm
BatchResetAlarm' :: NonEmpty ResetAlarmActionRequest -> BatchResetAlarm

-- | Create a value of <a>BatchResetAlarm</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resetActionRequests:BatchResetAlarm'</a>,
--   <a>batchResetAlarm_resetActionRequests</a> - The list of reset action
--   requests. You can specify up to 10 requests per operation.
newBatchResetAlarm :: NonEmpty ResetAlarmActionRequest -> BatchResetAlarm

-- | <i>See:</i> <a>newBatchResetAlarmResponse</a> smart constructor.
data BatchResetAlarmResponse
BatchResetAlarmResponse' :: Maybe [BatchAlarmActionErrorEntry] -> Int -> BatchResetAlarmResponse

-- | Create a value of <a>BatchResetAlarmResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:errorEntries:BatchResetAlarmResponse'</a>,
--   <a>batchResetAlarmResponse_errorEntries</a> - A list of errors
--   associated with the request, or <tt>null</tt> if there are no errors.
--   Each error entry contains an entry ID that helps you identify the
--   entry that failed.
--   
--   <a>$sel:httpStatus:BatchResetAlarmResponse'</a>,
--   <a>batchResetAlarmResponse_httpStatus</a> - The response's http status
--   code.
newBatchResetAlarmResponse :: Int -> BatchResetAlarmResponse

-- | <i>See:</i> <a>newListDetectors</a> smart constructor.
data ListDetectors
ListDetectors' :: Maybe Text -> Maybe Text -> Maybe Natural -> Text -> ListDetectors

-- | Create a value of <a>ListDetectors</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListDetectors'</a>, <a>listDetectors_nextToken</a> -
--   The token that you can use to return the next set of results.
--   
--   <a>$sel:stateName:ListDetectors'</a>, <a>listDetectors_stateName</a> -
--   A filter that limits results to those detectors (instances) in the
--   given state.
--   
--   <a>$sel:maxResults:ListDetectors'</a>, <a>listDetectors_maxResults</a>
--   - The maximum number of results to be returned per request.
--   
--   <a>$sel:detectorModelName:ListDetectors'</a>,
--   <a>listDetectors_detectorModelName</a> - The name of the detector
--   model whose detectors (instances) are listed.
newListDetectors :: Text -> ListDetectors

-- | <i>See:</i> <a>newListDetectorsResponse</a> smart constructor.
data ListDetectorsResponse
ListDetectorsResponse' :: Maybe Text -> Maybe [DetectorSummary] -> Int -> ListDetectorsResponse

-- | Create a value of <a>ListDetectorsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListDetectors'</a>,
--   <a>listDetectorsResponse_nextToken</a> - The token that you can use to
--   return the next set of results, or <tt>null</tt> if there are no more
--   results.
--   
--   <a>$sel:detectorSummaries:ListDetectorsResponse'</a>,
--   <a>listDetectorsResponse_detectorSummaries</a> - A list of summary
--   information about the detectors (instances).
--   
--   <a>$sel:httpStatus:ListDetectorsResponse'</a>,
--   <a>listDetectorsResponse_httpStatus</a> - The response's http status
--   code.
newListDetectorsResponse :: Int -> ListDetectorsResponse

-- | <i>See:</i> <a>newBatchEnableAlarm</a> smart constructor.
data BatchEnableAlarm
BatchEnableAlarm' :: NonEmpty EnableAlarmActionRequest -> BatchEnableAlarm

-- | Create a value of <a>BatchEnableAlarm</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:enableActionRequests:BatchEnableAlarm'</a>,
--   <a>batchEnableAlarm_enableActionRequests</a> - The list of enable
--   action requests. You can specify up to 10 requests per operation.
newBatchEnableAlarm :: NonEmpty EnableAlarmActionRequest -> BatchEnableAlarm

-- | <i>See:</i> <a>newBatchEnableAlarmResponse</a> smart constructor.
data BatchEnableAlarmResponse
BatchEnableAlarmResponse' :: Maybe [BatchAlarmActionErrorEntry] -> Int -> BatchEnableAlarmResponse

-- | Create a value of <a>BatchEnableAlarmResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:errorEntries:BatchEnableAlarmResponse'</a>,
--   <a>batchEnableAlarmResponse_errorEntries</a> - A list of errors
--   associated with the request, or <tt>null</tt> if there are no errors.
--   Each error entry contains an entry ID that helps you identify the
--   entry that failed.
--   
--   <a>$sel:httpStatus:BatchEnableAlarmResponse'</a>,
--   <a>batchEnableAlarmResponse_httpStatus</a> - The response's http
--   status code.
newBatchEnableAlarmResponse :: Int -> BatchEnableAlarmResponse
newtype AlarmStateName
AlarmStateName' :: Text -> AlarmStateName
[fromAlarmStateName] :: AlarmStateName -> Text
pattern AlarmStateName_ACKNOWLEDGED :: AlarmStateName
pattern AlarmStateName_ACTIVE :: AlarmStateName
pattern AlarmStateName_DISABLED :: AlarmStateName
pattern AlarmStateName_LATCHED :: AlarmStateName
pattern AlarmStateName_NORMAL :: AlarmStateName
pattern AlarmStateName_SNOOZE_DISABLED :: AlarmStateName
newtype ComparisonOperator
ComparisonOperator' :: Text -> ComparisonOperator
[fromComparisonOperator] :: ComparisonOperator -> Text
pattern ComparisonOperator_EQUAL :: ComparisonOperator
pattern ComparisonOperator_GREATER :: ComparisonOperator
pattern ComparisonOperator_GREATER_OR_EQUAL :: ComparisonOperator
pattern ComparisonOperator_LESS :: ComparisonOperator
pattern ComparisonOperator_LESS_OR_EQUAL :: ComparisonOperator
pattern ComparisonOperator_NOT_EQUAL :: ComparisonOperator
newtype CustomerActionName
CustomerActionName' :: Text -> CustomerActionName
[fromCustomerActionName] :: CustomerActionName -> Text
pattern CustomerActionName_ACKNOWLEDGE :: CustomerActionName
pattern CustomerActionName_DISABLE :: CustomerActionName
pattern CustomerActionName_ENABLE :: CustomerActionName
pattern CustomerActionName_RESET :: CustomerActionName
pattern CustomerActionName_SNOOZE :: CustomerActionName
newtype ErrorCode
ErrorCode' :: Text -> ErrorCode
[fromErrorCode] :: ErrorCode -> Text
pattern ErrorCode_InternalFailureException :: ErrorCode
pattern ErrorCode_InvalidRequestException :: ErrorCode
pattern ErrorCode_ResourceNotFoundException :: ErrorCode
pattern ErrorCode_ServiceUnavailableException :: ErrorCode
pattern ErrorCode_ThrottlingException :: ErrorCode
newtype EventType
EventType' :: Text -> EventType
[fromEventType] :: EventType -> Text
pattern EventType_STATE_CHANGE :: EventType
newtype TriggerType
TriggerType' :: Text -> TriggerType
[fromTriggerType] :: TriggerType -> Text
pattern TriggerType_SNOOZE_TIMEOUT :: TriggerType

-- | Contains the configuration information of an acknowledge action.
--   
--   <i>See:</i> <a>newAcknowledgeActionConfiguration</a> smart
--   constructor.
data AcknowledgeActionConfiguration
AcknowledgeActionConfiguration' :: Maybe Text -> AcknowledgeActionConfiguration

-- | Create a value of <a>AcknowledgeActionConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:note:AcknowledgeActionConfiguration'</a>,
--   <a>acknowledgeActionConfiguration_note</a> - The note that you can
--   leave when you acknowledge the alarm.
newAcknowledgeActionConfiguration :: AcknowledgeActionConfiguration

-- | Information needed to acknowledge the alarm.
--   
--   <i>See:</i> <a>newAcknowledgeAlarmActionRequest</a> smart constructor.
data AcknowledgeAlarmActionRequest
AcknowledgeAlarmActionRequest' :: Maybe Text -> Maybe Text -> Text -> Text -> AcknowledgeAlarmActionRequest

-- | Create a value of <a>AcknowledgeAlarmActionRequest</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:keyValue:AcknowledgeAlarmActionRequest'</a>,
--   <a>acknowledgeAlarmActionRequest_keyValue</a> - The value of the key
--   used as a filter to select only the alarms associated with the
--   <a>key</a>.
--   
--   <a>$sel:note:AcknowledgeAlarmActionRequest'</a>,
--   <a>acknowledgeAlarmActionRequest_note</a> - The note that you can
--   leave when you acknowledge the alarm.
--   
--   <a>$sel:requestId:AcknowledgeAlarmActionRequest'</a>,
--   <a>acknowledgeAlarmActionRequest_requestId</a> - The request ID. Each
--   ID must be unique within each batch.
--   
--   <a>$sel:alarmModelName:AcknowledgeAlarmActionRequest'</a>,
--   <a>acknowledgeAlarmActionRequest_alarmModelName</a> - The name of the
--   alarm model.
newAcknowledgeAlarmActionRequest :: Text -> Text -> AcknowledgeAlarmActionRequest

-- | Contains information about an alarm.
--   
--   <i>See:</i> <a>newAlarm</a> smart constructor.
data Alarm
Alarm' :: Maybe Text -> Maybe POSIX -> Maybe AlarmState -> Maybe Text -> Maybe Natural -> Maybe POSIX -> Maybe Text -> Alarm

-- | Create a value of <a>Alarm</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:keyValue:Alarm'</a>, <a>alarm_keyValue</a> - The value of the
--   key used as a filter to select only the alarms associated with the
--   <a>key</a>.
--   
--   <a>$sel:creationTime:Alarm'</a>, <a>alarm_creationTime</a> - The time
--   the alarm was created, in the Unix epoch format.
--   
--   <a>$sel:alarmState:Alarm'</a>, <a>alarm_alarmState</a> - Contains
--   information about the current state of the alarm.
--   
--   <a>$sel:alarmModelName:Alarm'</a>, <a>alarm_alarmModelName</a> - The
--   name of the alarm model.
--   
--   <a>$sel:severity:Alarm'</a>, <a>alarm_severity</a> - A non-negative
--   integer that reflects the severity level of the alarm.
--   
--   <a>$sel:lastUpdateTime:Alarm'</a>, <a>alarm_lastUpdateTime</a> - The
--   time the alarm was last updated, in the Unix epoch format.
--   
--   <a>$sel:alarmModelVersion:Alarm'</a>, <a>alarm_alarmModelVersion</a> -
--   The version of the alarm model.
newAlarm :: Alarm

-- | Contains information about the current state of the alarm.
--   
--   <i>See:</i> <a>newAlarmState</a> smart constructor.
data AlarmState
AlarmState' :: Maybe CustomerAction -> Maybe AlarmStateName -> Maybe RuleEvaluation -> Maybe SystemEvent -> AlarmState

-- | Create a value of <a>AlarmState</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:customerAction:AlarmState'</a>,
--   <a>alarmState_customerAction</a> - Contains information about the
--   action that you can take to respond to the alarm.
--   
--   <a>$sel:stateName:AlarmState'</a>, <a>alarmState_stateName</a> - The
--   name of the alarm state. The state name can be one of the following
--   values:
--   
--   <ul>
--   <li><tt>DISABLED</tt> - When the alarm is in the <tt>DISABLED</tt>
--   state, it isn't ready to evaluate data. To enable the alarm, you must
--   change the alarm to the <tt>NORMAL</tt> state.</li>
--   <li><tt>NORMAL</tt> - When the alarm is in the <tt>NORMAL</tt> state,
--   it's ready to evaluate data.</li>
--   <li><tt>ACTIVE</tt> - If the alarm is in the <tt>ACTIVE</tt> state,
--   the alarm is invoked.</li>
--   <li><tt>ACKNOWLEDGED</tt> - When the alarm is in the
--   <tt>ACKNOWLEDGED</tt> state, the alarm was invoked and you
--   acknowledged the alarm.</li>
--   <li><tt>SNOOZE_DISABLED</tt> - When the alarm is in the
--   <tt>SNOOZE_DISABLED</tt> state, the alarm is disabled for a specified
--   period of time. After the snooze time, the alarm automatically changes
--   to the <tt>NORMAL</tt> state.</li>
--   <li><tt>LATCHED</tt> - When the alarm is in the <tt>LATCHED</tt>
--   state, the alarm was invoked. However, the data that the alarm is
--   currently evaluating is within the specified range. To change the
--   alarm to the <tt>NORMAL</tt> state, you must acknowledge the
--   alarm.</li>
--   </ul>
--   
--   <a>$sel:ruleEvaluation:AlarmState'</a>,
--   <a>alarmState_ruleEvaluation</a> - Information needed to evaluate
--   data.
--   
--   <a>$sel:systemEvent:AlarmState'</a>, <a>alarmState_systemEvent</a> -
--   Contains information about alarm state changes.
newAlarmState :: AlarmState

-- | Contains a summary of an alarm.
--   
--   <i>See:</i> <a>newAlarmSummary</a> smart constructor.
data AlarmSummary
AlarmSummary' :: Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe AlarmStateName -> Maybe POSIX -> Maybe Text -> AlarmSummary

-- | Create a value of <a>AlarmSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:keyValue:AlarmSummary'</a>, <a>alarmSummary_keyValue</a> - The
--   value of the key used as a filter to select only the alarms associated
--   with the <a>key</a>.
--   
--   <a>$sel:creationTime:AlarmSummary'</a>,
--   <a>alarmSummary_creationTime</a> - The time the alarm was created, in
--   the Unix epoch format.
--   
--   <a>$sel:alarmModelName:AlarmSummary'</a>,
--   <a>alarmSummary_alarmModelName</a> - The name of the alarm model.
--   
--   <a>$sel:stateName:AlarmSummary'</a>, <a>alarmSummary_stateName</a> -
--   The name of the alarm state. The state name can be one of the
--   following values:
--   
--   <ul>
--   <li><tt>DISABLED</tt> - When the alarm is in the <tt>DISABLED</tt>
--   state, it isn't ready to evaluate data. To enable the alarm, you must
--   change the alarm to the <tt>NORMAL</tt> state.</li>
--   <li><tt>NORMAL</tt> - When the alarm is in the <tt>NORMAL</tt> state,
--   it's ready to evaluate data.</li>
--   <li><tt>ACTIVE</tt> - If the alarm is in the <tt>ACTIVE</tt> state,
--   the alarm is invoked.</li>
--   <li><tt>ACKNOWLEDGED</tt> - When the alarm is in the
--   <tt>ACKNOWLEDGED</tt> state, the alarm was invoked and you
--   acknowledged the alarm.</li>
--   <li><tt>SNOOZE_DISABLED</tt> - When the alarm is in the
--   <tt>SNOOZE_DISABLED</tt> state, the alarm is disabled for a specified
--   period of time. After the snooze time, the alarm automatically changes
--   to the <tt>NORMAL</tt> state.</li>
--   <li><tt>LATCHED</tt> - When the alarm is in the <tt>LATCHED</tt>
--   state, the alarm was invoked. However, the data that the alarm is
--   currently evaluating is within the specified range. To change the
--   alarm to the <tt>NORMAL</tt> state, you must acknowledge the
--   alarm.</li>
--   </ul>
--   
--   <a>$sel:lastUpdateTime:AlarmSummary'</a>,
--   <a>alarmSummary_lastUpdateTime</a> - The time the alarm was last
--   updated, in the Unix epoch format.
--   
--   <a>$sel:alarmModelVersion:AlarmSummary'</a>,
--   <a>alarmSummary_alarmModelVersion</a> - The version of the alarm
--   model.
newAlarmSummary :: AlarmSummary

-- | Contains error messages associated with one of the following requests:
--   
--   <ul>
--   <li><a>BatchAcknowledgeAlarm</a></li>
--   <li><a>BatchDisableAlarm</a></li>
--   <li><a>BatchEnableAlarm</a></li>
--   <li><a>BatchResetAlarm</a></li>
--   <li><a>BatchSnoozeAlarm</a></li>
--   </ul>
--   
--   <i>See:</i> <a>newBatchAlarmActionErrorEntry</a> smart constructor.
data BatchAlarmActionErrorEntry
BatchAlarmActionErrorEntry' :: Maybe Text -> Maybe ErrorCode -> Maybe Text -> BatchAlarmActionErrorEntry

-- | Create a value of <a>BatchAlarmActionErrorEntry</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:requestId:BatchAlarmActionErrorEntry'</a>,
--   <a>batchAlarmActionErrorEntry_requestId</a> - The request ID. Each ID
--   must be unique within each batch.
--   
--   <a>$sel:errorCode:BatchAlarmActionErrorEntry'</a>,
--   <a>batchAlarmActionErrorEntry_errorCode</a> - The error code.
--   
--   <a>$sel:errorMessage:BatchAlarmActionErrorEntry'</a>,
--   <a>batchAlarmActionErrorEntry_errorMessage</a> - A message that
--   describes the error.
newBatchAlarmActionErrorEntry :: BatchAlarmActionErrorEntry

-- | Contains information about the errors encountered.
--   
--   <i>See:</i> <a>newBatchPutMessageErrorEntry</a> smart constructor.
data BatchPutMessageErrorEntry
BatchPutMessageErrorEntry' :: Maybe ErrorCode -> Maybe Text -> Maybe Text -> BatchPutMessageErrorEntry

-- | Create a value of <a>BatchPutMessageErrorEntry</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:errorCode:BatchPutMessageErrorEntry'</a>,
--   <a>batchPutMessageErrorEntry_errorCode</a> - The error code.
--   
--   <a>$sel:errorMessage:BatchPutMessageErrorEntry'</a>,
--   <a>batchPutMessageErrorEntry_errorMessage</a> - A message that
--   describes the error.
--   
--   <a>$sel:messageId:BatchPutMessageErrorEntry'</a>,
--   <a>batchPutMessageErrorEntry_messageId</a> - The ID of the message
--   that caused the error. (See the value corresponding to the
--   <tt>"messageId"</tt> key in the <tt>"message"</tt> object.)
newBatchPutMessageErrorEntry :: BatchPutMessageErrorEntry

-- | Information about the error that occurred when attempting to update a
--   detector.
--   
--   <i>See:</i> <a>newBatchUpdateDetectorErrorEntry</a> smart constructor.
data BatchUpdateDetectorErrorEntry
BatchUpdateDetectorErrorEntry' :: Maybe ErrorCode -> Maybe Text -> Maybe Text -> BatchUpdateDetectorErrorEntry

-- | Create a value of <a>BatchUpdateDetectorErrorEntry</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:errorCode:BatchUpdateDetectorErrorEntry'</a>,
--   <a>batchUpdateDetectorErrorEntry_errorCode</a> - The error code.
--   
--   <a>$sel:errorMessage:BatchUpdateDetectorErrorEntry'</a>,
--   <a>batchUpdateDetectorErrorEntry_errorMessage</a> - A message that
--   describes the error.
--   
--   <a>$sel:messageId:BatchUpdateDetectorErrorEntry'</a>,
--   <a>batchUpdateDetectorErrorEntry_messageId</a> - The
--   <tt>"messageId"</tt> of the update request that caused the error. (The
--   value of the <tt>"messageId"</tt> in the update request
--   <tt>"Detector"</tt> object.)
newBatchUpdateDetectorErrorEntry :: BatchUpdateDetectorErrorEntry

-- | Contains information about the action that you can take to respond to
--   the alarm.
--   
--   <i>See:</i> <a>newCustomerAction</a> smart constructor.
data CustomerAction
CustomerAction' :: Maybe ResetActionConfiguration -> Maybe CustomerActionName -> Maybe SnoozeActionConfiguration -> Maybe EnableActionConfiguration -> Maybe DisableActionConfiguration -> Maybe AcknowledgeActionConfiguration -> CustomerAction

-- | Create a value of <a>CustomerAction</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resetActionConfiguration:CustomerAction'</a>,
--   <a>customerAction_resetActionConfiguration</a> - Contains the
--   configuration information of a reset action.
--   
--   <a>$sel:actionName:CustomerAction'</a>,
--   <a>customerAction_actionName</a> - The name of the action. The action
--   name can be one of the following values:
--   
--   <ul>
--   <li><tt>SNOOZE</tt> - When you snooze the alarm, the alarm state
--   changes to <tt>SNOOZE_DISABLED</tt>.</li>
--   <li><tt>ENABLE</tt> - When you enable the alarm, the alarm state
--   changes to <tt>NORMAL</tt>.</li>
--   <li><tt>DISABLE</tt> - When you disable the alarm, the alarm state
--   changes to <tt>DISABLED</tt>.</li>
--   <li><tt>ACKNOWLEDGE</tt> - When you acknowledge the alarm, the alarm
--   state changes to <tt>ACKNOWLEDGED</tt>.</li>
--   <li><tt>RESET</tt> - When you reset the alarm, the alarm state changes
--   to <tt>NORMAL</tt>.</li>
--   </ul>
--   
--   For more information, see the <a>AlarmState</a> API.
--   
--   <a>$sel:snoozeActionConfiguration:CustomerAction'</a>,
--   <a>customerAction_snoozeActionConfiguration</a> - Contains the
--   configuration information of a snooze action.
--   
--   <a>$sel:enableActionConfiguration:CustomerAction'</a>,
--   <a>customerAction_enableActionConfiguration</a> - Contains the
--   configuration information of an enable action.
--   
--   <a>$sel:disableActionConfiguration:CustomerAction'</a>,
--   <a>customerAction_disableActionConfiguration</a> - Contains the
--   configuration information of a disable action.
--   
--   <a>$sel:acknowledgeActionConfiguration:CustomerAction'</a>,
--   <a>customerAction_acknowledgeActionConfiguration</a> - Contains the
--   configuration information of an acknowledge action.
newCustomerAction :: CustomerAction

-- | Information about the detector (instance).
--   
--   <i>See:</i> <a>newDetector</a> smart constructor.
data Detector
Detector' :: Maybe Text -> Maybe POSIX -> Maybe DetectorState -> Maybe Text -> Maybe Text -> Maybe POSIX -> Detector

-- | Create a value of <a>Detector</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:keyValue:Detector'</a>, <a>detector_keyValue</a> - The value
--   of the key (identifying the device or system) that caused the creation
--   of this detector (instance).
--   
--   <a>$sel:creationTime:Detector'</a>, <a>detector_creationTime</a> - The
--   time the detector (instance) was created.
--   
--   <a>$sel:state:Detector'</a>, <a>detector_state</a> - The current state
--   of the detector (instance).
--   
--   <a>$sel:detectorModelName:Detector'</a>,
--   <a>detector_detectorModelName</a> - The name of the detector model
--   that created this detector (instance).
--   
--   <a>$sel:detectorModelVersion:Detector'</a>,
--   <a>detector_detectorModelVersion</a> - The version of the detector
--   model that created this detector (instance).
--   
--   <a>$sel:lastUpdateTime:Detector'</a>, <a>detector_lastUpdateTime</a> -
--   The time the detector (instance) was last updated.
newDetector :: Detector

-- | Information about the current state of the detector instance.
--   
--   <i>See:</i> <a>newDetectorState</a> smart constructor.
data DetectorState
DetectorState' :: Text -> [Variable] -> [Timer] -> DetectorState

-- | Create a value of <a>DetectorState</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:stateName:DetectorState'</a>, <a>detectorState_stateName</a> -
--   The name of the state.
--   
--   <a>$sel:variables:DetectorState'</a>, <a>detectorState_variables</a> -
--   The current values of the detector's variables.
--   
--   <a>$sel:timers:DetectorState'</a>, <a>detectorState_timers</a> - The
--   current state of the detector's timers.
newDetectorState :: Text -> DetectorState

-- | The new state, variable values, and timer settings of the detector
--   (instance).
--   
--   <i>See:</i> <a>newDetectorStateDefinition</a> smart constructor.
data DetectorStateDefinition
DetectorStateDefinition' :: Text -> [VariableDefinition] -> [TimerDefinition] -> DetectorStateDefinition

-- | Create a value of <a>DetectorStateDefinition</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:stateName:DetectorStateDefinition'</a>,
--   <a>detectorStateDefinition_stateName</a> - The name of the new state
--   of the detector (instance).
--   
--   <a>$sel:variables:DetectorStateDefinition'</a>,
--   <a>detectorStateDefinition_variables</a> - The new values of the
--   detector's variables. Any variable whose value isn't specified is
--   cleared.
--   
--   <a>$sel:timers:DetectorStateDefinition'</a>,
--   <a>detectorStateDefinition_timers</a> - The new values of the
--   detector's timers. Any timer whose value isn't specified is cleared,
--   and its timeout event won't occur.
newDetectorStateDefinition :: Text -> DetectorStateDefinition

-- | Information about the detector state.
--   
--   <i>See:</i> <a>newDetectorStateSummary</a> smart constructor.
data DetectorStateSummary
DetectorStateSummary' :: Maybe Text -> DetectorStateSummary

-- | Create a value of <a>DetectorStateSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:stateName:DetectorStateSummary'</a>,
--   <a>detectorStateSummary_stateName</a> - The name of the state.
newDetectorStateSummary :: DetectorStateSummary

-- | Information about the detector (instance).
--   
--   <i>See:</i> <a>newDetectorSummary</a> smart constructor.
data DetectorSummary
DetectorSummary' :: Maybe Text -> Maybe POSIX -> Maybe DetectorStateSummary -> Maybe Text -> Maybe Text -> Maybe POSIX -> DetectorSummary

-- | Create a value of <a>DetectorSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:keyValue:DetectorSummary'</a>, <a>detectorSummary_keyValue</a>
--   - The value of the key (identifying the device or system) that caused
--   the creation of this detector (instance).
--   
--   <a>$sel:creationTime:DetectorSummary'</a>,
--   <a>detectorSummary_creationTime</a> - The time the detector (instance)
--   was created.
--   
--   <a>$sel:state:DetectorSummary'</a>, <a>detectorSummary_state</a> - The
--   current state of the detector (instance).
--   
--   <a>$sel:detectorModelName:DetectorSummary'</a>,
--   <a>detectorSummary_detectorModelName</a> - The name of the detector
--   model that created this detector (instance).
--   
--   <a>$sel:detectorModelVersion:DetectorSummary'</a>,
--   <a>detectorSummary_detectorModelVersion</a> - The version of the
--   detector model that created this detector (instance).
--   
--   <a>$sel:lastUpdateTime:DetectorSummary'</a>,
--   <a>detectorSummary_lastUpdateTime</a> - The time the detector
--   (instance) was last updated.
newDetectorSummary :: DetectorSummary

-- | Contains the configuration information of a disable action.
--   
--   <i>See:</i> <a>newDisableActionConfiguration</a> smart constructor.
data DisableActionConfiguration
DisableActionConfiguration' :: Maybe Text -> DisableActionConfiguration

-- | Create a value of <a>DisableActionConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:note:DisableActionConfiguration'</a>,
--   <a>disableActionConfiguration_note</a> - The note that you can leave
--   when you disable the alarm.
newDisableActionConfiguration :: DisableActionConfiguration

-- | Information used to disable the alarm.
--   
--   <i>See:</i> <a>newDisableAlarmActionRequest</a> smart constructor.
data DisableAlarmActionRequest
DisableAlarmActionRequest' :: Maybe Text -> Maybe Text -> Text -> Text -> DisableAlarmActionRequest

-- | Create a value of <a>DisableAlarmActionRequest</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:keyValue:DisableAlarmActionRequest'</a>,
--   <a>disableAlarmActionRequest_keyValue</a> - The value of the key used
--   as a filter to select only the alarms associated with the <a>key</a>.
--   
--   <a>$sel:note:DisableAlarmActionRequest'</a>,
--   <a>disableAlarmActionRequest_note</a> - The note that you can leave
--   when you disable the alarm.
--   
--   <a>$sel:requestId:DisableAlarmActionRequest'</a>,
--   <a>disableAlarmActionRequest_requestId</a> - The request ID. Each ID
--   must be unique within each batch.
--   
--   <a>$sel:alarmModelName:DisableAlarmActionRequest'</a>,
--   <a>disableAlarmActionRequest_alarmModelName</a> - The name of the
--   alarm model.
newDisableAlarmActionRequest :: Text -> Text -> DisableAlarmActionRequest

-- | Contains the configuration information of an enable action.
--   
--   <i>See:</i> <a>newEnableActionConfiguration</a> smart constructor.
data EnableActionConfiguration
EnableActionConfiguration' :: Maybe Text -> EnableActionConfiguration

-- | Create a value of <a>EnableActionConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:note:EnableActionConfiguration'</a>,
--   <a>enableActionConfiguration_note</a> - The note that you can leave
--   when you enable the alarm.
newEnableActionConfiguration :: EnableActionConfiguration

-- | Information needed to enable the alarm.
--   
--   <i>See:</i> <a>newEnableAlarmActionRequest</a> smart constructor.
data EnableAlarmActionRequest
EnableAlarmActionRequest' :: Maybe Text -> Maybe Text -> Text -> Text -> EnableAlarmActionRequest

-- | Create a value of <a>EnableAlarmActionRequest</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:keyValue:EnableAlarmActionRequest'</a>,
--   <a>enableAlarmActionRequest_keyValue</a> - The value of the key used
--   as a filter to select only the alarms associated with the <a>key</a>.
--   
--   <a>$sel:note:EnableAlarmActionRequest'</a>,
--   <a>enableAlarmActionRequest_note</a> - The note that you can leave
--   when you enable the alarm.
--   
--   <a>$sel:requestId:EnableAlarmActionRequest'</a>,
--   <a>enableAlarmActionRequest_requestId</a> - The request ID. Each ID
--   must be unique within each batch.
--   
--   <a>$sel:alarmModelName:EnableAlarmActionRequest'</a>,
--   <a>enableAlarmActionRequest_alarmModelName</a> - The name of the alarm
--   model.
newEnableAlarmActionRequest :: Text -> Text -> EnableAlarmActionRequest

-- | Information about a message.
--   
--   <i>See:</i> <a>newMessage</a> smart constructor.
data Message
Message' :: Maybe TimestampValue -> Text -> Text -> Base64 -> Message

-- | Create a value of <a>Message</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:timestamp:Message'</a>, <a>message_timestamp</a> - The
--   timestamp associated with the message.
--   
--   <a>$sel:messageId:Message'</a>, <a>message_messageId</a> - The ID to
--   assign to the message. Within each batch sent, each
--   <tt>"messageId"</tt> must be unique.
--   
--   <a>$sel:inputName:Message'</a>, <a>message_inputName</a> - The name of
--   the input into which the message payload is transformed.
--   
--   <a>$sel:payload:Message'</a>, <a>message_payload</a> - The payload of
--   the message. This can be a JSON string or a Base-64-encoded string
--   representing binary data (in which case you must decode it).-- --
--   <i>Note:</i> This <tt>Lens</tt> automatically encodes and decodes
--   Base64 data. -- The underlying isomorphism will encode to Base64
--   representation during -- serialisation, and decode from Base64
--   representation during deserialisation. -- This <tt>Lens</tt> accepts
--   and returns only raw unencoded data.
newMessage :: Text -> Text -> ByteString -> Message

-- | Contains the configuration information of a reset action.
--   
--   <i>See:</i> <a>newResetActionConfiguration</a> smart constructor.
data ResetActionConfiguration
ResetActionConfiguration' :: Maybe Text -> ResetActionConfiguration

-- | Create a value of <a>ResetActionConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:note:ResetActionConfiguration'</a>,
--   <a>resetActionConfiguration_note</a> - The note that you can leave
--   when you reset the alarm.
newResetActionConfiguration :: ResetActionConfiguration

-- | Information needed to reset the alarm.
--   
--   <i>See:</i> <a>newResetAlarmActionRequest</a> smart constructor.
data ResetAlarmActionRequest
ResetAlarmActionRequest' :: Maybe Text -> Maybe Text -> Text -> Text -> ResetAlarmActionRequest

-- | Create a value of <a>ResetAlarmActionRequest</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:keyValue:ResetAlarmActionRequest'</a>,
--   <a>resetAlarmActionRequest_keyValue</a> - The value of the key used as
--   a filter to select only the alarms associated with the <a>key</a>.
--   
--   <a>$sel:note:ResetAlarmActionRequest'</a>,
--   <a>resetAlarmActionRequest_note</a> - The note that you can leave when
--   you reset the alarm.
--   
--   <a>$sel:requestId:ResetAlarmActionRequest'</a>,
--   <a>resetAlarmActionRequest_requestId</a> - The request ID. Each ID
--   must be unique within each batch.
--   
--   <a>$sel:alarmModelName:ResetAlarmActionRequest'</a>,
--   <a>resetAlarmActionRequest_alarmModelName</a> - The name of the alarm
--   model.
newResetAlarmActionRequest :: Text -> Text -> ResetAlarmActionRequest

-- | Information needed to evaluate data.
--   
--   <i>See:</i> <a>newRuleEvaluation</a> smart constructor.
data RuleEvaluation
RuleEvaluation' :: Maybe SimpleRuleEvaluation -> RuleEvaluation

-- | Create a value of <a>RuleEvaluation</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:simpleRuleEvaluation:RuleEvaluation'</a>,
--   <a>ruleEvaluation_simpleRuleEvaluation</a> - Information needed to
--   compare two values with a comparison operator.
newRuleEvaluation :: RuleEvaluation

-- | Information needed to compare two values with a comparison operator.
--   
--   <i>See:</i> <a>newSimpleRuleEvaluation</a> smart constructor.
data SimpleRuleEvaluation
SimpleRuleEvaluation' :: Maybe Text -> Maybe Text -> Maybe ComparisonOperator -> SimpleRuleEvaluation

-- | Create a value of <a>SimpleRuleEvaluation</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:thresholdValue:SimpleRuleEvaluation'</a>,
--   <a>simpleRuleEvaluation_thresholdValue</a> - The threshold value, on
--   the right side of the comparison operator.
--   
--   <a>$sel:inputPropertyValue:SimpleRuleEvaluation'</a>,
--   <a>simpleRuleEvaluation_inputPropertyValue</a> - The value of the
--   input property, on the left side of the comparison operator.
--   
--   <a>$sel:operator:SimpleRuleEvaluation'</a>,
--   <a>simpleRuleEvaluation_operator</a> - The comparison operator.
newSimpleRuleEvaluation :: SimpleRuleEvaluation

-- | Contains the configuration information of a snooze action.
--   
--   <i>See:</i> <a>newSnoozeActionConfiguration</a> smart constructor.
data SnoozeActionConfiguration
SnoozeActionConfiguration' :: Maybe Text -> Maybe Int -> SnoozeActionConfiguration

-- | Create a value of <a>SnoozeActionConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:note:SnoozeActionConfiguration'</a>,
--   <a>snoozeActionConfiguration_note</a> - The note that you can leave
--   when you snooze the alarm.
--   
--   <a>$sel:snoozeDuration:SnoozeActionConfiguration'</a>,
--   <a>snoozeActionConfiguration_snoozeDuration</a> - The snooze time in
--   seconds. The alarm automatically changes to the <tt>NORMAL</tt> state
--   after this duration.
newSnoozeActionConfiguration :: SnoozeActionConfiguration

-- | Information needed to snooze the alarm.
--   
--   <i>See:</i> <a>newSnoozeAlarmActionRequest</a> smart constructor.
data SnoozeAlarmActionRequest
SnoozeAlarmActionRequest' :: Maybe Text -> Maybe Text -> Text -> Text -> Int -> SnoozeAlarmActionRequest

-- | Create a value of <a>SnoozeAlarmActionRequest</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:keyValue:SnoozeAlarmActionRequest'</a>,
--   <a>snoozeAlarmActionRequest_keyValue</a> - The value of the key used
--   as a filter to select only the alarms associated with the <a>key</a>.
--   
--   <a>$sel:note:SnoozeAlarmActionRequest'</a>,
--   <a>snoozeAlarmActionRequest_note</a> - The note that you can leave
--   when you snooze the alarm.
--   
--   <a>$sel:requestId:SnoozeAlarmActionRequest'</a>,
--   <a>snoozeAlarmActionRequest_requestId</a> - The request ID. Each ID
--   must be unique within each batch.
--   
--   <a>$sel:alarmModelName:SnoozeAlarmActionRequest'</a>,
--   <a>snoozeAlarmActionRequest_alarmModelName</a> - The name of the alarm
--   model.
--   
--   <a>$sel:snoozeDuration:SnoozeAlarmActionRequest'</a>,
--   <a>snoozeAlarmActionRequest_snoozeDuration</a> - The snooze time in
--   seconds. The alarm automatically changes to the <tt>NORMAL</tt> state
--   after this duration.
newSnoozeAlarmActionRequest :: Text -> Text -> Int -> SnoozeAlarmActionRequest

-- | Contains the configuration information of alarm state changes.
--   
--   <i>See:</i> <a>newStateChangeConfiguration</a> smart constructor.
data StateChangeConfiguration
StateChangeConfiguration' :: Maybe TriggerType -> StateChangeConfiguration

-- | Create a value of <a>StateChangeConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:triggerType:StateChangeConfiguration'</a>,
--   <a>stateChangeConfiguration_triggerType</a> - The trigger type. If the
--   value is <tt>SNOOZE_TIMEOUT</tt>, the snooze duration ends and the
--   alarm automatically changes to the <tt>NORMAL</tt> state.
newStateChangeConfiguration :: StateChangeConfiguration

-- | Contains information about alarm state changes.
--   
--   <i>See:</i> <a>newSystemEvent</a> smart constructor.
data SystemEvent
SystemEvent' :: Maybe EventType -> Maybe StateChangeConfiguration -> SystemEvent

-- | Create a value of <a>SystemEvent</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:eventType:SystemEvent'</a>, <a>systemEvent_eventType</a> - The
--   event type. If the value is <tt>STATE_CHANGE</tt>, the event contains
--   information about alarm state changes.
--   
--   <a>$sel:stateChangeConfiguration:SystemEvent'</a>,
--   <a>systemEvent_stateChangeConfiguration</a> - Contains the
--   configuration information of alarm state changes.
newSystemEvent :: SystemEvent

-- | The current state of a timer.
--   
--   <i>See:</i> <a>newTimer</a> smart constructor.
data Timer
Timer' :: Text -> POSIX -> Timer

-- | Create a value of <a>Timer</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:Timer'</a>, <a>timer_name</a> - The name of the timer.
--   
--   <a>$sel:timestamp:Timer'</a>, <a>timer_timestamp</a> - The number of
--   seconds which have elapsed on the timer.
newTimer :: Text -> UTCTime -> Timer

-- | The new setting of a timer.
--   
--   <i>See:</i> <a>newTimerDefinition</a> smart constructor.
data TimerDefinition
TimerDefinition' :: Text -> Int -> TimerDefinition

-- | Create a value of <a>TimerDefinition</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:TimerDefinition'</a>, <a>timerDefinition_name</a> - The
--   name of the timer.
--   
--   <a>$sel:seconds:TimerDefinition'</a>, <a>timerDefinition_seconds</a> -
--   The new setting of the timer (the number of seconds before the timer
--   elapses).
newTimerDefinition :: Text -> Int -> TimerDefinition

-- | Contains information about a timestamp.
--   
--   <i>See:</i> <a>newTimestampValue</a> smart constructor.
data TimestampValue
TimestampValue' :: Maybe Natural -> TimestampValue

-- | Create a value of <a>TimestampValue</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:timeInMillis:TimestampValue'</a>,
--   <a>timestampValue_timeInMillis</a> - The value of the timestamp, in
--   the Unix epoch format.
newTimestampValue :: TimestampValue

-- | Information used to update the detector (instance).
--   
--   <i>See:</i> <a>newUpdateDetectorRequest</a> smart constructor.
data UpdateDetectorRequest
UpdateDetectorRequest' :: Maybe Text -> Text -> Text -> DetectorStateDefinition -> UpdateDetectorRequest

-- | Create a value of <a>UpdateDetectorRequest</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:keyValue:UpdateDetectorRequest'</a>,
--   <a>updateDetectorRequest_keyValue</a> - The value of the input key
--   attribute (identifying the device or system) that caused the creation
--   of this detector (instance).
--   
--   <a>$sel:messageId:UpdateDetectorRequest'</a>,
--   <a>updateDetectorRequest_messageId</a> - The ID to assign to the
--   detector update <tt>"message"</tt>. Each <tt>"messageId"</tt> must be
--   unique within each batch sent.
--   
--   <a>$sel:detectorModelName:UpdateDetectorRequest'</a>,
--   <a>updateDetectorRequest_detectorModelName</a> - The name of the
--   detector model that created the detectors (instances).
--   
--   <a>$sel:state:UpdateDetectorRequest'</a>,
--   <a>updateDetectorRequest_state</a> - The new state, variable values,
--   and timer settings of the detector (instance).
newUpdateDetectorRequest :: Text -> Text -> DetectorStateDefinition -> UpdateDetectorRequest

-- | The current state of the variable.
--   
--   <i>See:</i> <a>newVariable</a> smart constructor.
data Variable
Variable' :: Text -> Text -> Variable

-- | Create a value of <a>Variable</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:Variable'</a>, <a>variable_name</a> - The name of the
--   variable.
--   
--   <a>$sel:value:Variable'</a>, <a>variable_value</a> - The current value
--   of the variable.
newVariable :: Text -> Text -> Variable

-- | The new value of the variable.
--   
--   <i>See:</i> <a>newVariableDefinition</a> smart constructor.
data VariableDefinition
VariableDefinition' :: Text -> Text -> VariableDefinition

-- | Create a value of <a>VariableDefinition</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:VariableDefinition'</a>, <a>variableDefinition_name</a> -
--   The name of the variable.
--   
--   <a>$sel:value:VariableDefinition'</a>, <a>variableDefinition_value</a>
--   - The new value of the variable.
newVariableDefinition :: Text -> Text -> VariableDefinition
