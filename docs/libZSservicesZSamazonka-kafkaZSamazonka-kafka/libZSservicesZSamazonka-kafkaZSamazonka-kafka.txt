-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/

@package libZSservicesZSamazonka-kafkaZSamazonka-kafka
@version 2.0


module Amazonka.Kafka.Types.BrokerAZDistribution

-- | The distribution of broker nodes across Availability Zones. This is an
--   optional parameter. If you don't specify it, Amazon MSK gives it the
--   value DEFAULT. You can also explicitly set this parameter to the value
--   DEFAULT. No other values are currently allowed.
--   
--   Amazon MSK distributes the broker nodes evenly across the Availability
--   Zones that correspond to the subnets you provide when you create the
--   cluster.
newtype BrokerAZDistribution
BrokerAZDistribution' :: Text -> BrokerAZDistribution
[fromBrokerAZDistribution] :: BrokerAZDistribution -> Text
pattern BrokerAZDistribution_DEFAULT :: BrokerAZDistribution
instance Amazonka.Data.XML.ToXML Amazonka.Kafka.Types.BrokerAZDistribution.BrokerAZDistribution
instance Amazonka.Data.XML.FromXML Amazonka.Kafka.Types.BrokerAZDistribution.BrokerAZDistribution
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.Kafka.Types.BrokerAZDistribution.BrokerAZDistribution
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Kafka.Types.BrokerAZDistribution.BrokerAZDistribution
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.Kafka.Types.BrokerAZDistribution.BrokerAZDistribution
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Kafka.Types.BrokerAZDistribution.BrokerAZDistribution
instance Amazonka.Data.Query.ToQuery Amazonka.Kafka.Types.BrokerAZDistribution.BrokerAZDistribution
instance Amazonka.Data.Headers.ToHeader Amazonka.Kafka.Types.BrokerAZDistribution.BrokerAZDistribution
instance Amazonka.Data.Log.ToLog Amazonka.Kafka.Types.BrokerAZDistribution.BrokerAZDistribution
instance Amazonka.Data.ByteString.ToByteString Amazonka.Kafka.Types.BrokerAZDistribution.BrokerAZDistribution
instance Amazonka.Data.Text.ToText Amazonka.Kafka.Types.BrokerAZDistribution.BrokerAZDistribution
instance Amazonka.Data.Text.FromText Amazonka.Kafka.Types.BrokerAZDistribution.BrokerAZDistribution
instance Control.DeepSeq.NFData Amazonka.Kafka.Types.BrokerAZDistribution.BrokerAZDistribution
instance Data.Hashable.Class.Hashable Amazonka.Kafka.Types.BrokerAZDistribution.BrokerAZDistribution
instance GHC.Generics.Generic Amazonka.Kafka.Types.BrokerAZDistribution.BrokerAZDistribution
instance GHC.Classes.Ord Amazonka.Kafka.Types.BrokerAZDistribution.BrokerAZDistribution
instance GHC.Classes.Eq Amazonka.Kafka.Types.BrokerAZDistribution.BrokerAZDistribution
instance GHC.Read.Read Amazonka.Kafka.Types.BrokerAZDistribution.BrokerAZDistribution
instance GHC.Show.Show Amazonka.Kafka.Types.BrokerAZDistribution.BrokerAZDistribution


module Amazonka.Kafka.Types.BrokerEBSVolumeInfo

-- | Specifies the EBS volume upgrade information. The broker identifier
--   must be set to the keyword ALL. This means the changes apply to all
--   the brokers in the cluster.
--   
--   <i>See:</i> <a>newBrokerEBSVolumeInfo</a> smart constructor.
data BrokerEBSVolumeInfo
BrokerEBSVolumeInfo' :: Int -> Text -> BrokerEBSVolumeInfo

-- | Size of the EBS volume to update.
[$sel:volumeSizeGB:BrokerEBSVolumeInfo'] :: BrokerEBSVolumeInfo -> Int

-- | The ID of the broker to update.
[$sel:kafkaBrokerNodeId:BrokerEBSVolumeInfo'] :: BrokerEBSVolumeInfo -> Text

-- | Create a value of <a>BrokerEBSVolumeInfo</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:volumeSizeGB:BrokerEBSVolumeInfo'</a>,
--   <a>brokerEBSVolumeInfo_volumeSizeGB</a> - Size of the EBS volume to
--   update.
--   
--   <a>$sel:kafkaBrokerNodeId:BrokerEBSVolumeInfo'</a>,
--   <a>brokerEBSVolumeInfo_kafkaBrokerNodeId</a> - The ID of the broker to
--   update.
newBrokerEBSVolumeInfo :: Int -> Text -> BrokerEBSVolumeInfo

-- | Size of the EBS volume to update.
brokerEBSVolumeInfo_volumeSizeGB :: Lens' BrokerEBSVolumeInfo Int

-- | The ID of the broker to update.
brokerEBSVolumeInfo_kafkaBrokerNodeId :: Lens' BrokerEBSVolumeInfo Text
instance GHC.Generics.Generic Amazonka.Kafka.Types.BrokerEBSVolumeInfo.BrokerEBSVolumeInfo
instance GHC.Show.Show Amazonka.Kafka.Types.BrokerEBSVolumeInfo.BrokerEBSVolumeInfo
instance GHC.Read.Read Amazonka.Kafka.Types.BrokerEBSVolumeInfo.BrokerEBSVolumeInfo
instance GHC.Classes.Eq Amazonka.Kafka.Types.BrokerEBSVolumeInfo.BrokerEBSVolumeInfo
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Kafka.Types.BrokerEBSVolumeInfo.BrokerEBSVolumeInfo
instance Data.Hashable.Class.Hashable Amazonka.Kafka.Types.BrokerEBSVolumeInfo.BrokerEBSVolumeInfo
instance Control.DeepSeq.NFData Amazonka.Kafka.Types.BrokerEBSVolumeInfo.BrokerEBSVolumeInfo
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Kafka.Types.BrokerEBSVolumeInfo.BrokerEBSVolumeInfo


module Amazonka.Kafka.Types.BrokerSoftwareInfo

-- | Information about the current software installed on the cluster.
--   
--   <i>See:</i> <a>newBrokerSoftwareInfo</a> smart constructor.
data BrokerSoftwareInfo
BrokerSoftwareInfo' :: Maybe Integer -> Maybe Text -> Maybe Text -> BrokerSoftwareInfo

-- | The revision of the configuration to use. This field isn't visible in
--   this preview release.
[$sel:configurationRevision:BrokerSoftwareInfo'] :: BrokerSoftwareInfo -> Maybe Integer

-- | The version of Apache Kafka.
[$sel:kafkaVersion:BrokerSoftwareInfo'] :: BrokerSoftwareInfo -> Maybe Text

-- | The Amazon Resource Name (ARN) of the configuration used for the
--   cluster. This field isn't visible in this preview release.
[$sel:configurationArn:BrokerSoftwareInfo'] :: BrokerSoftwareInfo -> Maybe Text

-- | Create a value of <a>BrokerSoftwareInfo</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:configurationRevision:BrokerSoftwareInfo'</a>,
--   <a>brokerSoftwareInfo_configurationRevision</a> - The revision of the
--   configuration to use. This field isn't visible in this preview
--   release.
--   
--   <a>$sel:kafkaVersion:BrokerSoftwareInfo'</a>,
--   <a>brokerSoftwareInfo_kafkaVersion</a> - The version of Apache Kafka.
--   
--   <a>$sel:configurationArn:BrokerSoftwareInfo'</a>,
--   <a>brokerSoftwareInfo_configurationArn</a> - The Amazon Resource Name
--   (ARN) of the configuration used for the cluster. This field isn't
--   visible in this preview release.
newBrokerSoftwareInfo :: BrokerSoftwareInfo

-- | The revision of the configuration to use. This field isn't visible in
--   this preview release.
brokerSoftwareInfo_configurationRevision :: Lens' BrokerSoftwareInfo (Maybe Integer)

-- | The version of Apache Kafka.
brokerSoftwareInfo_kafkaVersion :: Lens' BrokerSoftwareInfo (Maybe Text)

-- | The Amazon Resource Name (ARN) of the configuration used for the
--   cluster. This field isn't visible in this preview release.
brokerSoftwareInfo_configurationArn :: Lens' BrokerSoftwareInfo (Maybe Text)
instance GHC.Generics.Generic Amazonka.Kafka.Types.BrokerSoftwareInfo.BrokerSoftwareInfo
instance GHC.Show.Show Amazonka.Kafka.Types.BrokerSoftwareInfo.BrokerSoftwareInfo
instance GHC.Read.Read Amazonka.Kafka.Types.BrokerSoftwareInfo.BrokerSoftwareInfo
instance GHC.Classes.Eq Amazonka.Kafka.Types.BrokerSoftwareInfo.BrokerSoftwareInfo
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Kafka.Types.BrokerSoftwareInfo.BrokerSoftwareInfo
instance Data.Hashable.Class.Hashable Amazonka.Kafka.Types.BrokerSoftwareInfo.BrokerSoftwareInfo
instance Control.DeepSeq.NFData Amazonka.Kafka.Types.BrokerSoftwareInfo.BrokerSoftwareInfo


module Amazonka.Kafka.Types.BrokerNodeInfo

-- | BrokerNodeInfo
--   
--   <i>See:</i> <a>newBrokerNodeInfo</a> smart constructor.
data BrokerNodeInfo
BrokerNodeInfo' :: Maybe BrokerSoftwareInfo -> Maybe Text -> Maybe Text -> Maybe [Text] -> Maybe Text -> Maybe Double -> BrokerNodeInfo

-- | Information about the version of software currently deployed on the
--   Kafka brokers in the cluster.
[$sel:currentBrokerSoftwareInfo:BrokerNodeInfo'] :: BrokerNodeInfo -> Maybe BrokerSoftwareInfo

-- | The client subnet to which this broker node belongs.
[$sel:clientSubnet:BrokerNodeInfo'] :: BrokerNodeInfo -> Maybe Text

-- | The attached elastic network interface of the broker.
[$sel:attachedENIId:BrokerNodeInfo'] :: BrokerNodeInfo -> Maybe Text

-- | Endpoints for accessing the broker.
[$sel:endpoints:BrokerNodeInfo'] :: BrokerNodeInfo -> Maybe [Text]

-- | The virtual private cloud (VPC) of the client.
[$sel:clientVpcIpAddress:BrokerNodeInfo'] :: BrokerNodeInfo -> Maybe Text

-- | The ID of the broker.
[$sel:brokerId:BrokerNodeInfo'] :: BrokerNodeInfo -> Maybe Double

-- | Create a value of <a>BrokerNodeInfo</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:currentBrokerSoftwareInfo:BrokerNodeInfo'</a>,
--   <a>brokerNodeInfo_currentBrokerSoftwareInfo</a> - Information about
--   the version of software currently deployed on the Kafka brokers in the
--   cluster.
--   
--   <a>$sel:clientSubnet:BrokerNodeInfo'</a>,
--   <a>brokerNodeInfo_clientSubnet</a> - The client subnet to which this
--   broker node belongs.
--   
--   <a>$sel:attachedENIId:BrokerNodeInfo'</a>,
--   <a>brokerNodeInfo_attachedENIId</a> - The attached elastic network
--   interface of the broker.
--   
--   <a>$sel:endpoints:BrokerNodeInfo'</a>, <a>brokerNodeInfo_endpoints</a>
--   - Endpoints for accessing the broker.
--   
--   <a>$sel:clientVpcIpAddress:BrokerNodeInfo'</a>,
--   <a>brokerNodeInfo_clientVpcIpAddress</a> - The virtual private cloud
--   (VPC) of the client.
--   
--   <a>$sel:brokerId:BrokerNodeInfo'</a>, <a>brokerNodeInfo_brokerId</a> -
--   The ID of the broker.
newBrokerNodeInfo :: BrokerNodeInfo

-- | Information about the version of software currently deployed on the
--   Kafka brokers in the cluster.
brokerNodeInfo_currentBrokerSoftwareInfo :: Lens' BrokerNodeInfo (Maybe BrokerSoftwareInfo)

-- | The client subnet to which this broker node belongs.
brokerNodeInfo_clientSubnet :: Lens' BrokerNodeInfo (Maybe Text)

-- | The attached elastic network interface of the broker.
brokerNodeInfo_attachedENIId :: Lens' BrokerNodeInfo (Maybe Text)

-- | Endpoints for accessing the broker.
brokerNodeInfo_endpoints :: Lens' BrokerNodeInfo (Maybe [Text])

-- | The virtual private cloud (VPC) of the client.
brokerNodeInfo_clientVpcIpAddress :: Lens' BrokerNodeInfo (Maybe Text)

-- | The ID of the broker.
brokerNodeInfo_brokerId :: Lens' BrokerNodeInfo (Maybe Double)
instance GHC.Generics.Generic Amazonka.Kafka.Types.BrokerNodeInfo.BrokerNodeInfo
instance GHC.Show.Show Amazonka.Kafka.Types.BrokerNodeInfo.BrokerNodeInfo
instance GHC.Read.Read Amazonka.Kafka.Types.BrokerNodeInfo.BrokerNodeInfo
instance GHC.Classes.Eq Amazonka.Kafka.Types.BrokerNodeInfo.BrokerNodeInfo
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Kafka.Types.BrokerNodeInfo.BrokerNodeInfo
instance Data.Hashable.Class.Hashable Amazonka.Kafka.Types.BrokerNodeInfo.BrokerNodeInfo
instance Control.DeepSeq.NFData Amazonka.Kafka.Types.BrokerNodeInfo.BrokerNodeInfo


module Amazonka.Kafka.Types.ClientBroker

-- | Client-broker encryption in transit setting.
newtype ClientBroker
ClientBroker' :: Text -> ClientBroker
[fromClientBroker] :: ClientBroker -> Text
pattern ClientBroker_PLAINTEXT :: ClientBroker
pattern ClientBroker_TLS :: ClientBroker
pattern ClientBroker_TLS_PLAINTEXT :: ClientBroker
instance Amazonka.Data.XML.ToXML Amazonka.Kafka.Types.ClientBroker.ClientBroker
instance Amazonka.Data.XML.FromXML Amazonka.Kafka.Types.ClientBroker.ClientBroker
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.Kafka.Types.ClientBroker.ClientBroker
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Kafka.Types.ClientBroker.ClientBroker
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.Kafka.Types.ClientBroker.ClientBroker
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Kafka.Types.ClientBroker.ClientBroker
instance Amazonka.Data.Query.ToQuery Amazonka.Kafka.Types.ClientBroker.ClientBroker
instance Amazonka.Data.Headers.ToHeader Amazonka.Kafka.Types.ClientBroker.ClientBroker
instance Amazonka.Data.Log.ToLog Amazonka.Kafka.Types.ClientBroker.ClientBroker
instance Amazonka.Data.ByteString.ToByteString Amazonka.Kafka.Types.ClientBroker.ClientBroker
instance Amazonka.Data.Text.ToText Amazonka.Kafka.Types.ClientBroker.ClientBroker
instance Amazonka.Data.Text.FromText Amazonka.Kafka.Types.ClientBroker.ClientBroker
instance Control.DeepSeq.NFData Amazonka.Kafka.Types.ClientBroker.ClientBroker
instance Data.Hashable.Class.Hashable Amazonka.Kafka.Types.ClientBroker.ClientBroker
instance GHC.Generics.Generic Amazonka.Kafka.Types.ClientBroker.ClientBroker
instance GHC.Classes.Ord Amazonka.Kafka.Types.ClientBroker.ClientBroker
instance GHC.Classes.Eq Amazonka.Kafka.Types.ClientBroker.ClientBroker
instance GHC.Read.Read Amazonka.Kafka.Types.ClientBroker.ClientBroker
instance GHC.Show.Show Amazonka.Kafka.Types.ClientBroker.ClientBroker


module Amazonka.Kafka.Types.CloudWatchLogs

-- | <i>See:</i> <a>newCloudWatchLogs</a> smart constructor.
data CloudWatchLogs
CloudWatchLogs' :: Maybe Text -> Bool -> CloudWatchLogs
[$sel:logGroup:CloudWatchLogs'] :: CloudWatchLogs -> Maybe Text
[$sel:enabled:CloudWatchLogs'] :: CloudWatchLogs -> Bool

-- | Create a value of <a>CloudWatchLogs</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:logGroup:CloudWatchLogs'</a>, <a>cloudWatchLogs_logGroup</a> -
--   Undocumented member.
--   
--   <a>$sel:enabled:CloudWatchLogs'</a>, <a>cloudWatchLogs_enabled</a> -
--   Undocumented member.
newCloudWatchLogs :: Bool -> CloudWatchLogs

-- | Undocumented member.
cloudWatchLogs_logGroup :: Lens' CloudWatchLogs (Maybe Text)

-- | Undocumented member.
cloudWatchLogs_enabled :: Lens' CloudWatchLogs Bool
instance GHC.Generics.Generic Amazonka.Kafka.Types.CloudWatchLogs.CloudWatchLogs
instance GHC.Show.Show Amazonka.Kafka.Types.CloudWatchLogs.CloudWatchLogs
instance GHC.Read.Read Amazonka.Kafka.Types.CloudWatchLogs.CloudWatchLogs
instance GHC.Classes.Eq Amazonka.Kafka.Types.CloudWatchLogs.CloudWatchLogs
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Kafka.Types.CloudWatchLogs.CloudWatchLogs
instance Data.Hashable.Class.Hashable Amazonka.Kafka.Types.CloudWatchLogs.CloudWatchLogs
instance Control.DeepSeq.NFData Amazonka.Kafka.Types.CloudWatchLogs.CloudWatchLogs
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Kafka.Types.CloudWatchLogs.CloudWatchLogs


module Amazonka.Kafka.Types.ClusterOperationStepInfo

-- | State information about the operation step.
--   
--   <i>See:</i> <a>newClusterOperationStepInfo</a> smart constructor.
data ClusterOperationStepInfo
ClusterOperationStepInfo' :: Maybe Text -> ClusterOperationStepInfo

-- | The steps current status.
[$sel:stepStatus:ClusterOperationStepInfo'] :: ClusterOperationStepInfo -> Maybe Text

-- | Create a value of <a>ClusterOperationStepInfo</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:stepStatus:ClusterOperationStepInfo'</a>,
--   <a>clusterOperationStepInfo_stepStatus</a> - The steps current status.
newClusterOperationStepInfo :: ClusterOperationStepInfo

-- | The steps current status.
clusterOperationStepInfo_stepStatus :: Lens' ClusterOperationStepInfo (Maybe Text)
instance GHC.Generics.Generic Amazonka.Kafka.Types.ClusterOperationStepInfo.ClusterOperationStepInfo
instance GHC.Show.Show Amazonka.Kafka.Types.ClusterOperationStepInfo.ClusterOperationStepInfo
instance GHC.Read.Read Amazonka.Kafka.Types.ClusterOperationStepInfo.ClusterOperationStepInfo
instance GHC.Classes.Eq Amazonka.Kafka.Types.ClusterOperationStepInfo.ClusterOperationStepInfo
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Kafka.Types.ClusterOperationStepInfo.ClusterOperationStepInfo
instance Data.Hashable.Class.Hashable Amazonka.Kafka.Types.ClusterOperationStepInfo.ClusterOperationStepInfo
instance Control.DeepSeq.NFData Amazonka.Kafka.Types.ClusterOperationStepInfo.ClusterOperationStepInfo


module Amazonka.Kafka.Types.ClusterOperationStep

-- | Step taken during a cluster operation.
--   
--   <i>See:</i> <a>newClusterOperationStep</a> smart constructor.
data ClusterOperationStep
ClusterOperationStep' :: Maybe Text -> Maybe ClusterOperationStepInfo -> ClusterOperationStep

-- | The name of the step.
[$sel:stepName:ClusterOperationStep'] :: ClusterOperationStep -> Maybe Text

-- | Information about the step and its status.
[$sel:stepInfo:ClusterOperationStep'] :: ClusterOperationStep -> Maybe ClusterOperationStepInfo

-- | Create a value of <a>ClusterOperationStep</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:stepName:ClusterOperationStep'</a>,
--   <a>clusterOperationStep_stepName</a> - The name of the step.
--   
--   <a>$sel:stepInfo:ClusterOperationStep'</a>,
--   <a>clusterOperationStep_stepInfo</a> - Information about the step and
--   its status.
newClusterOperationStep :: ClusterOperationStep

-- | The name of the step.
clusterOperationStep_stepName :: Lens' ClusterOperationStep (Maybe Text)

-- | Information about the step and its status.
clusterOperationStep_stepInfo :: Lens' ClusterOperationStep (Maybe ClusterOperationStepInfo)
instance GHC.Generics.Generic Amazonka.Kafka.Types.ClusterOperationStep.ClusterOperationStep
instance GHC.Show.Show Amazonka.Kafka.Types.ClusterOperationStep.ClusterOperationStep
instance GHC.Read.Read Amazonka.Kafka.Types.ClusterOperationStep.ClusterOperationStep
instance GHC.Classes.Eq Amazonka.Kafka.Types.ClusterOperationStep.ClusterOperationStep
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Kafka.Types.ClusterOperationStep.ClusterOperationStep
instance Data.Hashable.Class.Hashable Amazonka.Kafka.Types.ClusterOperationStep.ClusterOperationStep
instance Control.DeepSeq.NFData Amazonka.Kafka.Types.ClusterOperationStep.ClusterOperationStep


module Amazonka.Kafka.Types.ClusterState

-- | The state of a Kafka cluster.
newtype ClusterState
ClusterState' :: Text -> ClusterState
[fromClusterState] :: ClusterState -> Text
pattern ClusterState_ACTIVE :: ClusterState
pattern ClusterState_CREATING :: ClusterState
pattern ClusterState_DELETING :: ClusterState
pattern ClusterState_FAILED :: ClusterState
pattern ClusterState_HEALING :: ClusterState
pattern ClusterState_MAINTENANCE :: ClusterState
pattern ClusterState_REBOOTING_BROKER :: ClusterState
pattern ClusterState_UPDATING :: ClusterState
instance Amazonka.Data.XML.ToXML Amazonka.Kafka.Types.ClusterState.ClusterState
instance Amazonka.Data.XML.FromXML Amazonka.Kafka.Types.ClusterState.ClusterState
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.Kafka.Types.ClusterState.ClusterState
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Kafka.Types.ClusterState.ClusterState
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.Kafka.Types.ClusterState.ClusterState
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Kafka.Types.ClusterState.ClusterState
instance Amazonka.Data.Query.ToQuery Amazonka.Kafka.Types.ClusterState.ClusterState
instance Amazonka.Data.Headers.ToHeader Amazonka.Kafka.Types.ClusterState.ClusterState
instance Amazonka.Data.Log.ToLog Amazonka.Kafka.Types.ClusterState.ClusterState
instance Amazonka.Data.ByteString.ToByteString Amazonka.Kafka.Types.ClusterState.ClusterState
instance Amazonka.Data.Text.ToText Amazonka.Kafka.Types.ClusterState.ClusterState
instance Amazonka.Data.Text.FromText Amazonka.Kafka.Types.ClusterState.ClusterState
instance Control.DeepSeq.NFData Amazonka.Kafka.Types.ClusterState.ClusterState
instance Data.Hashable.Class.Hashable Amazonka.Kafka.Types.ClusterState.ClusterState
instance GHC.Generics.Generic Amazonka.Kafka.Types.ClusterState.ClusterState
instance GHC.Classes.Ord Amazonka.Kafka.Types.ClusterState.ClusterState
instance GHC.Classes.Eq Amazonka.Kafka.Types.ClusterState.ClusterState
instance GHC.Read.Read Amazonka.Kafka.Types.ClusterState.ClusterState
instance GHC.Show.Show Amazonka.Kafka.Types.ClusterState.ClusterState


module Amazonka.Kafka.Types.CompatibleKafkaVersion

-- | Contains source Kafka versions and compatible target Kafka versions.
--   
--   <i>See:</i> <a>newCompatibleKafkaVersion</a> smart constructor.
data CompatibleKafkaVersion
CompatibleKafkaVersion' :: Maybe Text -> Maybe [Text] -> CompatibleKafkaVersion

-- | A Kafka version.
[$sel:sourceVersion:CompatibleKafkaVersion'] :: CompatibleKafkaVersion -> Maybe Text

-- | A list of Kafka versions.
[$sel:targetVersions:CompatibleKafkaVersion'] :: CompatibleKafkaVersion -> Maybe [Text]

-- | Create a value of <a>CompatibleKafkaVersion</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sourceVersion:CompatibleKafkaVersion'</a>,
--   <a>compatibleKafkaVersion_sourceVersion</a> - A Kafka version.
--   
--   <a>$sel:targetVersions:CompatibleKafkaVersion'</a>,
--   <a>compatibleKafkaVersion_targetVersions</a> - A list of Kafka
--   versions.
newCompatibleKafkaVersion :: CompatibleKafkaVersion

-- | A Kafka version.
compatibleKafkaVersion_sourceVersion :: Lens' CompatibleKafkaVersion (Maybe Text)

-- | A list of Kafka versions.
compatibleKafkaVersion_targetVersions :: Lens' CompatibleKafkaVersion (Maybe [Text])
instance GHC.Generics.Generic Amazonka.Kafka.Types.CompatibleKafkaVersion.CompatibleKafkaVersion
instance GHC.Show.Show Amazonka.Kafka.Types.CompatibleKafkaVersion.CompatibleKafkaVersion
instance GHC.Read.Read Amazonka.Kafka.Types.CompatibleKafkaVersion.CompatibleKafkaVersion
instance GHC.Classes.Eq Amazonka.Kafka.Types.CompatibleKafkaVersion.CompatibleKafkaVersion
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Kafka.Types.CompatibleKafkaVersion.CompatibleKafkaVersion
instance Data.Hashable.Class.Hashable Amazonka.Kafka.Types.CompatibleKafkaVersion.CompatibleKafkaVersion
instance Control.DeepSeq.NFData Amazonka.Kafka.Types.CompatibleKafkaVersion.CompatibleKafkaVersion


module Amazonka.Kafka.Types.ConfigurationInfo

-- | Specifies the configuration to use for the brokers.
--   
--   <i>See:</i> <a>newConfigurationInfo</a> smart constructor.
data ConfigurationInfo
ConfigurationInfo' :: Integer -> Text -> ConfigurationInfo

-- | The revision of the configuration to use.
[$sel:revision:ConfigurationInfo'] :: ConfigurationInfo -> Integer

-- | ARN of the configuration to use.
[$sel:arn:ConfigurationInfo'] :: ConfigurationInfo -> Text

-- | Create a value of <a>ConfigurationInfo</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:revision:ConfigurationInfo'</a>,
--   <a>configurationInfo_revision</a> - The revision of the configuration
--   to use.
--   
--   <a>$sel:arn:ConfigurationInfo'</a>, <a>configurationInfo_arn</a> - ARN
--   of the configuration to use.
newConfigurationInfo :: Integer -> Text -> ConfigurationInfo

-- | The revision of the configuration to use.
configurationInfo_revision :: Lens' ConfigurationInfo Integer

-- | ARN of the configuration to use.
configurationInfo_arn :: Lens' ConfigurationInfo Text
instance GHC.Generics.Generic Amazonka.Kafka.Types.ConfigurationInfo.ConfigurationInfo
instance GHC.Show.Show Amazonka.Kafka.Types.ConfigurationInfo.ConfigurationInfo
instance GHC.Read.Read Amazonka.Kafka.Types.ConfigurationInfo.ConfigurationInfo
instance GHC.Classes.Eq Amazonka.Kafka.Types.ConfigurationInfo.ConfigurationInfo
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Kafka.Types.ConfigurationInfo.ConfigurationInfo
instance Data.Hashable.Class.Hashable Amazonka.Kafka.Types.ConfigurationInfo.ConfigurationInfo
instance Control.DeepSeq.NFData Amazonka.Kafka.Types.ConfigurationInfo.ConfigurationInfo
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Kafka.Types.ConfigurationInfo.ConfigurationInfo


module Amazonka.Kafka.Types.ConfigurationRevision

-- | Describes a configuration revision.
--   
--   <i>See:</i> <a>newConfigurationRevision</a> smart constructor.
data ConfigurationRevision
ConfigurationRevision' :: Maybe Text -> Integer -> POSIX -> ConfigurationRevision

-- | The description of the configuration revision.
[$sel:description:ConfigurationRevision'] :: ConfigurationRevision -> Maybe Text

-- | The revision number.
[$sel:revision:ConfigurationRevision'] :: ConfigurationRevision -> Integer

-- | The time when the configuration revision was created.
[$sel:creationTime:ConfigurationRevision'] :: ConfigurationRevision -> POSIX

-- | Create a value of <a>ConfigurationRevision</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:description:ConfigurationRevision'</a>,
--   <a>configurationRevision_description</a> - The description of the
--   configuration revision.
--   
--   <a>$sel:revision:ConfigurationRevision'</a>,
--   <a>configurationRevision_revision</a> - The revision number.
--   
--   <a>$sel:creationTime:ConfigurationRevision'</a>,
--   <a>configurationRevision_creationTime</a> - The time when the
--   configuration revision was created.
newConfigurationRevision :: Integer -> UTCTime -> ConfigurationRevision

-- | The description of the configuration revision.
configurationRevision_description :: Lens' ConfigurationRevision (Maybe Text)

-- | The revision number.
configurationRevision_revision :: Lens' ConfigurationRevision Integer

-- | The time when the configuration revision was created.
configurationRevision_creationTime :: Lens' ConfigurationRevision UTCTime
instance GHC.Generics.Generic Amazonka.Kafka.Types.ConfigurationRevision.ConfigurationRevision
instance GHC.Show.Show Amazonka.Kafka.Types.ConfigurationRevision.ConfigurationRevision
instance GHC.Read.Read Amazonka.Kafka.Types.ConfigurationRevision.ConfigurationRevision
instance GHC.Classes.Eq Amazonka.Kafka.Types.ConfigurationRevision.ConfigurationRevision
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Kafka.Types.ConfigurationRevision.ConfigurationRevision
instance Data.Hashable.Class.Hashable Amazonka.Kafka.Types.ConfigurationRevision.ConfigurationRevision
instance Control.DeepSeq.NFData Amazonka.Kafka.Types.ConfigurationRevision.ConfigurationRevision


module Amazonka.Kafka.Types.ConfigurationState

-- | The state of a configuration.
newtype ConfigurationState
ConfigurationState' :: Text -> ConfigurationState
[fromConfigurationState] :: ConfigurationState -> Text
pattern ConfigurationState_ACTIVE :: ConfigurationState
pattern ConfigurationState_DELETE_FAILED :: ConfigurationState
pattern ConfigurationState_DELETING :: ConfigurationState
instance Amazonka.Data.XML.ToXML Amazonka.Kafka.Types.ConfigurationState.ConfigurationState
instance Amazonka.Data.XML.FromXML Amazonka.Kafka.Types.ConfigurationState.ConfigurationState
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.Kafka.Types.ConfigurationState.ConfigurationState
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Kafka.Types.ConfigurationState.ConfigurationState
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.Kafka.Types.ConfigurationState.ConfigurationState
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Kafka.Types.ConfigurationState.ConfigurationState
instance Amazonka.Data.Query.ToQuery Amazonka.Kafka.Types.ConfigurationState.ConfigurationState
instance Amazonka.Data.Headers.ToHeader Amazonka.Kafka.Types.ConfigurationState.ConfigurationState
instance Amazonka.Data.Log.ToLog Amazonka.Kafka.Types.ConfigurationState.ConfigurationState
instance Amazonka.Data.ByteString.ToByteString Amazonka.Kafka.Types.ConfigurationState.ConfigurationState
instance Amazonka.Data.Text.ToText Amazonka.Kafka.Types.ConfigurationState.ConfigurationState
instance Amazonka.Data.Text.FromText Amazonka.Kafka.Types.ConfigurationState.ConfigurationState
instance Control.DeepSeq.NFData Amazonka.Kafka.Types.ConfigurationState.ConfigurationState
instance Data.Hashable.Class.Hashable Amazonka.Kafka.Types.ConfigurationState.ConfigurationState
instance GHC.Generics.Generic Amazonka.Kafka.Types.ConfigurationState.ConfigurationState
instance GHC.Classes.Ord Amazonka.Kafka.Types.ConfigurationState.ConfigurationState
instance GHC.Classes.Eq Amazonka.Kafka.Types.ConfigurationState.ConfigurationState
instance GHC.Read.Read Amazonka.Kafka.Types.ConfigurationState.ConfigurationState
instance GHC.Show.Show Amazonka.Kafka.Types.ConfigurationState.ConfigurationState


module Amazonka.Kafka.Types.Configuration

-- | Represents an MSK Configuration.
--   
--   <i>See:</i> <a>newConfiguration</a> smart constructor.
data Configuration
Configuration' :: Text -> ConfigurationRevision -> POSIX -> [Text] -> Text -> Text -> ConfigurationState -> Configuration

-- | The description of the configuration.
[$sel:description:Configuration'] :: Configuration -> Text

-- | Latest revision of the configuration.
[$sel:latestRevision:Configuration'] :: Configuration -> ConfigurationRevision

-- | The time when the configuration was created.
[$sel:creationTime:Configuration'] :: Configuration -> POSIX

-- | An array of the versions of Apache Kafka with which you can use this
--   MSK configuration. You can use this configuration for an MSK cluster
--   only if the Apache Kafka version specified for the cluster appears in
--   this array.
[$sel:kafkaVersions:Configuration'] :: Configuration -> [Text]

-- | The Amazon Resource Name (ARN) of the configuration.
[$sel:arn:Configuration'] :: Configuration -> Text

-- | The name of the configuration.
[$sel:name:Configuration'] :: Configuration -> Text

-- | The state of the configuration. The possible states are ACTIVE,
--   DELETING, and DELETE_FAILED.
[$sel:state:Configuration'] :: Configuration -> ConfigurationState

-- | Create a value of <a>Configuration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:description:Configuration'</a>,
--   <a>configuration_description</a> - The description of the
--   configuration.
--   
--   <a>$sel:latestRevision:Configuration'</a>,
--   <a>configuration_latestRevision</a> - Latest revision of the
--   configuration.
--   
--   <a>$sel:creationTime:Configuration'</a>,
--   <a>configuration_creationTime</a> - The time when the configuration
--   was created.
--   
--   <a>$sel:kafkaVersions:Configuration'</a>,
--   <a>configuration_kafkaVersions</a> - An array of the versions of
--   Apache Kafka with which you can use this MSK configuration. You can
--   use this configuration for an MSK cluster only if the Apache Kafka
--   version specified for the cluster appears in this array.
--   
--   <a>$sel:arn:Configuration'</a>, <a>configuration_arn</a> - The Amazon
--   Resource Name (ARN) of the configuration.
--   
--   <a>$sel:name:Configuration'</a>, <a>configuration_name</a> - The name
--   of the configuration.
--   
--   <a>$sel:state:Configuration'</a>, <a>configuration_state</a> - The
--   state of the configuration. The possible states are ACTIVE, DELETING,
--   and DELETE_FAILED.
newConfiguration :: Text -> ConfigurationRevision -> UTCTime -> Text -> Text -> ConfigurationState -> Configuration

-- | The description of the configuration.
configuration_description :: Lens' Configuration Text

-- | Latest revision of the configuration.
configuration_latestRevision :: Lens' Configuration ConfigurationRevision

-- | The time when the configuration was created.
configuration_creationTime :: Lens' Configuration UTCTime

-- | An array of the versions of Apache Kafka with which you can use this
--   MSK configuration. You can use this configuration for an MSK cluster
--   only if the Apache Kafka version specified for the cluster appears in
--   this array.
configuration_kafkaVersions :: Lens' Configuration [Text]

-- | The Amazon Resource Name (ARN) of the configuration.
configuration_arn :: Lens' Configuration Text

-- | The name of the configuration.
configuration_name :: Lens' Configuration Text

-- | The state of the configuration. The possible states are ACTIVE,
--   DELETING, and DELETE_FAILED.
configuration_state :: Lens' Configuration ConfigurationState
instance GHC.Generics.Generic Amazonka.Kafka.Types.Configuration.Configuration
instance GHC.Show.Show Amazonka.Kafka.Types.Configuration.Configuration
instance GHC.Read.Read Amazonka.Kafka.Types.Configuration.Configuration
instance GHC.Classes.Eq Amazonka.Kafka.Types.Configuration.Configuration
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Kafka.Types.Configuration.Configuration
instance Data.Hashable.Class.Hashable Amazonka.Kafka.Types.Configuration.Configuration
instance Control.DeepSeq.NFData Amazonka.Kafka.Types.Configuration.Configuration


module Amazonka.Kafka.Types.EBSStorageInfo

-- | Contains information about the EBS storage volumes attached to Kafka
--   broker nodes.
--   
--   <i>See:</i> <a>newEBSStorageInfo</a> smart constructor.
data EBSStorageInfo
EBSStorageInfo' :: Maybe Natural -> EBSStorageInfo

-- | The size in GiB of the EBS volume for the data drive on each broker
--   node.
[$sel:volumeSize:EBSStorageInfo'] :: EBSStorageInfo -> Maybe Natural

-- | Create a value of <a>EBSStorageInfo</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:volumeSize:EBSStorageInfo'</a>,
--   <a>eBSStorageInfo_volumeSize</a> - The size in GiB of the EBS volume
--   for the data drive on each broker node.
newEBSStorageInfo :: EBSStorageInfo

-- | The size in GiB of the EBS volume for the data drive on each broker
--   node.
eBSStorageInfo_volumeSize :: Lens' EBSStorageInfo (Maybe Natural)
instance GHC.Generics.Generic Amazonka.Kafka.Types.EBSStorageInfo.EBSStorageInfo
instance GHC.Show.Show Amazonka.Kafka.Types.EBSStorageInfo.EBSStorageInfo
instance GHC.Read.Read Amazonka.Kafka.Types.EBSStorageInfo.EBSStorageInfo
instance GHC.Classes.Eq Amazonka.Kafka.Types.EBSStorageInfo.EBSStorageInfo
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Kafka.Types.EBSStorageInfo.EBSStorageInfo
instance Data.Hashable.Class.Hashable Amazonka.Kafka.Types.EBSStorageInfo.EBSStorageInfo
instance Control.DeepSeq.NFData Amazonka.Kafka.Types.EBSStorageInfo.EBSStorageInfo
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Kafka.Types.EBSStorageInfo.EBSStorageInfo


module Amazonka.Kafka.Types.EncryptionAtRest

-- | The data-volume encryption details.
--   
--   <i>See:</i> <a>newEncryptionAtRest</a> smart constructor.
data EncryptionAtRest
EncryptionAtRest' :: Text -> EncryptionAtRest

-- | The ARN of the AWS KMS key for encrypting data at rest. If you don't
--   specify a KMS key, MSK creates one for you and uses it.
[$sel:dataVolumeKMSKeyId:EncryptionAtRest'] :: EncryptionAtRest -> Text

-- | Create a value of <a>EncryptionAtRest</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dataVolumeKMSKeyId:EncryptionAtRest'</a>,
--   <a>encryptionAtRest_dataVolumeKMSKeyId</a> - The ARN of the AWS KMS
--   key for encrypting data at rest. If you don't specify a KMS key, MSK
--   creates one for you and uses it.
newEncryptionAtRest :: Text -> EncryptionAtRest

-- | The ARN of the AWS KMS key for encrypting data at rest. If you don't
--   specify a KMS key, MSK creates one for you and uses it.
encryptionAtRest_dataVolumeKMSKeyId :: Lens' EncryptionAtRest Text
instance GHC.Generics.Generic Amazonka.Kafka.Types.EncryptionAtRest.EncryptionAtRest
instance GHC.Show.Show Amazonka.Kafka.Types.EncryptionAtRest.EncryptionAtRest
instance GHC.Read.Read Amazonka.Kafka.Types.EncryptionAtRest.EncryptionAtRest
instance GHC.Classes.Eq Amazonka.Kafka.Types.EncryptionAtRest.EncryptionAtRest
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Kafka.Types.EncryptionAtRest.EncryptionAtRest
instance Data.Hashable.Class.Hashable Amazonka.Kafka.Types.EncryptionAtRest.EncryptionAtRest
instance Control.DeepSeq.NFData Amazonka.Kafka.Types.EncryptionAtRest.EncryptionAtRest
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Kafka.Types.EncryptionAtRest.EncryptionAtRest


module Amazonka.Kafka.Types.EncryptionInTransit

-- | The settings for encrypting data in transit.
--   
--   <i>See:</i> <a>newEncryptionInTransit</a> smart constructor.
data EncryptionInTransit
EncryptionInTransit' :: Maybe ClientBroker -> Maybe Bool -> EncryptionInTransit

-- | Indicates the encryption setting for data in transit between clients
--   and brokers. The following are the possible values.
--   
--   TLS means that client-broker communication is enabled with TLS only.
--   
--   TLS_PLAINTEXT means that client-broker communication is enabled for
--   both TLS-encrypted, as well as plaintext data.
--   
--   PLAINTEXT means that client-broker communication is enabled in
--   plaintext only.
--   
--   The default value is TLS_PLAINTEXT.
[$sel:clientBroker:EncryptionInTransit'] :: EncryptionInTransit -> Maybe ClientBroker

-- | When set to true, it indicates that data communication among the
--   broker nodes of the cluster is encrypted. When set to false, the
--   communication happens in plaintext.
--   
--   The default value is true.
[$sel:inCluster:EncryptionInTransit'] :: EncryptionInTransit -> Maybe Bool

-- | Create a value of <a>EncryptionInTransit</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientBroker:EncryptionInTransit'</a>,
--   <a>encryptionInTransit_clientBroker</a> - Indicates the encryption
--   setting for data in transit between clients and brokers. The following
--   are the possible values.
--   
--   TLS means that client-broker communication is enabled with TLS only.
--   
--   TLS_PLAINTEXT means that client-broker communication is enabled for
--   both TLS-encrypted, as well as plaintext data.
--   
--   PLAINTEXT means that client-broker communication is enabled in
--   plaintext only.
--   
--   The default value is TLS_PLAINTEXT.
--   
--   <a>$sel:inCluster:EncryptionInTransit'</a>,
--   <a>encryptionInTransit_inCluster</a> - When set to true, it indicates
--   that data communication among the broker nodes of the cluster is
--   encrypted. When set to false, the communication happens in plaintext.
--   
--   The default value is true.
newEncryptionInTransit :: EncryptionInTransit

-- | Indicates the encryption setting for data in transit between clients
--   and brokers. The following are the possible values.
--   
--   TLS means that client-broker communication is enabled with TLS only.
--   
--   TLS_PLAINTEXT means that client-broker communication is enabled for
--   both TLS-encrypted, as well as plaintext data.
--   
--   PLAINTEXT means that client-broker communication is enabled in
--   plaintext only.
--   
--   The default value is TLS_PLAINTEXT.
encryptionInTransit_clientBroker :: Lens' EncryptionInTransit (Maybe ClientBroker)

-- | When set to true, it indicates that data communication among the
--   broker nodes of the cluster is encrypted. When set to false, the
--   communication happens in plaintext.
--   
--   The default value is true.
encryptionInTransit_inCluster :: Lens' EncryptionInTransit (Maybe Bool)
instance GHC.Generics.Generic Amazonka.Kafka.Types.EncryptionInTransit.EncryptionInTransit
instance GHC.Show.Show Amazonka.Kafka.Types.EncryptionInTransit.EncryptionInTransit
instance GHC.Read.Read Amazonka.Kafka.Types.EncryptionInTransit.EncryptionInTransit
instance GHC.Classes.Eq Amazonka.Kafka.Types.EncryptionInTransit.EncryptionInTransit
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Kafka.Types.EncryptionInTransit.EncryptionInTransit
instance Data.Hashable.Class.Hashable Amazonka.Kafka.Types.EncryptionInTransit.EncryptionInTransit
instance Control.DeepSeq.NFData Amazonka.Kafka.Types.EncryptionInTransit.EncryptionInTransit
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Kafka.Types.EncryptionInTransit.EncryptionInTransit


module Amazonka.Kafka.Types.EncryptionInfo

-- | Includes encryption-related information, such as the AWS KMS key used
--   for encrypting data at rest and whether you want MSK to encrypt your
--   data in transit.
--   
--   <i>See:</i> <a>newEncryptionInfo</a> smart constructor.
data EncryptionInfo
EncryptionInfo' :: Maybe EncryptionAtRest -> Maybe EncryptionInTransit -> EncryptionInfo

-- | The data-volume encryption details.
[$sel:encryptionAtRest:EncryptionInfo'] :: EncryptionInfo -> Maybe EncryptionAtRest

-- | The details for encryption in transit.
[$sel:encryptionInTransit:EncryptionInfo'] :: EncryptionInfo -> Maybe EncryptionInTransit

-- | Create a value of <a>EncryptionInfo</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:encryptionAtRest:EncryptionInfo'</a>,
--   <a>encryptionInfo_encryptionAtRest</a> - The data-volume encryption
--   details.
--   
--   <a>$sel:encryptionInTransit:EncryptionInfo'</a>,
--   <a>encryptionInfo_encryptionInTransit</a> - The details for encryption
--   in transit.
newEncryptionInfo :: EncryptionInfo

-- | The data-volume encryption details.
encryptionInfo_encryptionAtRest :: Lens' EncryptionInfo (Maybe EncryptionAtRest)

-- | The details for encryption in transit.
encryptionInfo_encryptionInTransit :: Lens' EncryptionInfo (Maybe EncryptionInTransit)
instance GHC.Generics.Generic Amazonka.Kafka.Types.EncryptionInfo.EncryptionInfo
instance GHC.Show.Show Amazonka.Kafka.Types.EncryptionInfo.EncryptionInfo
instance GHC.Read.Read Amazonka.Kafka.Types.EncryptionInfo.EncryptionInfo
instance GHC.Classes.Eq Amazonka.Kafka.Types.EncryptionInfo.EncryptionInfo
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Kafka.Types.EncryptionInfo.EncryptionInfo
instance Data.Hashable.Class.Hashable Amazonka.Kafka.Types.EncryptionInfo.EncryptionInfo
instance Control.DeepSeq.NFData Amazonka.Kafka.Types.EncryptionInfo.EncryptionInfo
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Kafka.Types.EncryptionInfo.EncryptionInfo


module Amazonka.Kafka.Types.EnhancedMonitoring

-- | Specifies which metrics are gathered for the MSK cluster. This
--   property has the following possible values: DEFAULT, PER_BROKER,
--   PER_TOPIC_PER_BROKER, and PER_TOPIC_PER_PARTITION. For a list of the
--   metrics associated with each of these levels of monitoring, see
--   <a>Monitoring</a>.
newtype EnhancedMonitoring
EnhancedMonitoring' :: Text -> EnhancedMonitoring
[fromEnhancedMonitoring] :: EnhancedMonitoring -> Text
pattern EnhancedMonitoring_DEFAULT :: EnhancedMonitoring
pattern EnhancedMonitoring_PER_BROKER :: EnhancedMonitoring
pattern EnhancedMonitoring_PER_TOPIC_PER_BROKER :: EnhancedMonitoring
pattern EnhancedMonitoring_PER_TOPIC_PER_PARTITION :: EnhancedMonitoring
instance Amazonka.Data.XML.ToXML Amazonka.Kafka.Types.EnhancedMonitoring.EnhancedMonitoring
instance Amazonka.Data.XML.FromXML Amazonka.Kafka.Types.EnhancedMonitoring.EnhancedMonitoring
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.Kafka.Types.EnhancedMonitoring.EnhancedMonitoring
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Kafka.Types.EnhancedMonitoring.EnhancedMonitoring
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.Kafka.Types.EnhancedMonitoring.EnhancedMonitoring
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Kafka.Types.EnhancedMonitoring.EnhancedMonitoring
instance Amazonka.Data.Query.ToQuery Amazonka.Kafka.Types.EnhancedMonitoring.EnhancedMonitoring
instance Amazonka.Data.Headers.ToHeader Amazonka.Kafka.Types.EnhancedMonitoring.EnhancedMonitoring
instance Amazonka.Data.Log.ToLog Amazonka.Kafka.Types.EnhancedMonitoring.EnhancedMonitoring
instance Amazonka.Data.ByteString.ToByteString Amazonka.Kafka.Types.EnhancedMonitoring.EnhancedMonitoring
instance Amazonka.Data.Text.ToText Amazonka.Kafka.Types.EnhancedMonitoring.EnhancedMonitoring
instance Amazonka.Data.Text.FromText Amazonka.Kafka.Types.EnhancedMonitoring.EnhancedMonitoring
instance Control.DeepSeq.NFData Amazonka.Kafka.Types.EnhancedMonitoring.EnhancedMonitoring
instance Data.Hashable.Class.Hashable Amazonka.Kafka.Types.EnhancedMonitoring.EnhancedMonitoring
instance GHC.Generics.Generic Amazonka.Kafka.Types.EnhancedMonitoring.EnhancedMonitoring
instance GHC.Classes.Ord Amazonka.Kafka.Types.EnhancedMonitoring.EnhancedMonitoring
instance GHC.Classes.Eq Amazonka.Kafka.Types.EnhancedMonitoring.EnhancedMonitoring
instance GHC.Read.Read Amazonka.Kafka.Types.EnhancedMonitoring.EnhancedMonitoring
instance GHC.Show.Show Amazonka.Kafka.Types.EnhancedMonitoring.EnhancedMonitoring


module Amazonka.Kafka.Types.ErrorInfo

-- | Returns information about an error state of the cluster.
--   
--   <i>See:</i> <a>newErrorInfo</a> smart constructor.
data ErrorInfo
ErrorInfo' :: Maybe Text -> Maybe Text -> ErrorInfo

-- | An optional field to provide more details about the error.
[$sel:errorString:ErrorInfo'] :: ErrorInfo -> Maybe Text

-- | A number describing the error programmatically.
[$sel:errorCode:ErrorInfo'] :: ErrorInfo -> Maybe Text

-- | Create a value of <a>ErrorInfo</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:errorString:ErrorInfo'</a>, <a>errorInfo_errorString</a> - An
--   optional field to provide more details about the error.
--   
--   <a>$sel:errorCode:ErrorInfo'</a>, <a>errorInfo_errorCode</a> - A
--   number describing the error programmatically.
newErrorInfo :: ErrorInfo

-- | An optional field to provide more details about the error.
errorInfo_errorString :: Lens' ErrorInfo (Maybe Text)

-- | A number describing the error programmatically.
errorInfo_errorCode :: Lens' ErrorInfo (Maybe Text)
instance GHC.Generics.Generic Amazonka.Kafka.Types.ErrorInfo.ErrorInfo
instance GHC.Show.Show Amazonka.Kafka.Types.ErrorInfo.ErrorInfo
instance GHC.Read.Read Amazonka.Kafka.Types.ErrorInfo.ErrorInfo
instance GHC.Classes.Eq Amazonka.Kafka.Types.ErrorInfo.ErrorInfo
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Kafka.Types.ErrorInfo.ErrorInfo
instance Data.Hashable.Class.Hashable Amazonka.Kafka.Types.ErrorInfo.ErrorInfo
instance Control.DeepSeq.NFData Amazonka.Kafka.Types.ErrorInfo.ErrorInfo


module Amazonka.Kafka.Types.Firehose

-- | <i>See:</i> <a>newFirehose</a> smart constructor.
data Firehose
Firehose' :: Maybe Text -> Bool -> Firehose
[$sel:deliveryStream:Firehose'] :: Firehose -> Maybe Text
[$sel:enabled:Firehose'] :: Firehose -> Bool

-- | Create a value of <a>Firehose</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deliveryStream:Firehose'</a>, <a>firehose_deliveryStream</a> -
--   Undocumented member.
--   
--   <a>$sel:enabled:Firehose'</a>, <a>firehose_enabled</a> - Undocumented
--   member.
newFirehose :: Bool -> Firehose

-- | Undocumented member.
firehose_deliveryStream :: Lens' Firehose (Maybe Text)

-- | Undocumented member.
firehose_enabled :: Lens' Firehose Bool
instance GHC.Generics.Generic Amazonka.Kafka.Types.Firehose.Firehose
instance GHC.Show.Show Amazonka.Kafka.Types.Firehose.Firehose
instance GHC.Read.Read Amazonka.Kafka.Types.Firehose.Firehose
instance GHC.Classes.Eq Amazonka.Kafka.Types.Firehose.Firehose
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Kafka.Types.Firehose.Firehose
instance Data.Hashable.Class.Hashable Amazonka.Kafka.Types.Firehose.Firehose
instance Control.DeepSeq.NFData Amazonka.Kafka.Types.Firehose.Firehose
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Kafka.Types.Firehose.Firehose


module Amazonka.Kafka.Types.Iam

-- | Details for IAM access control.
--   
--   <i>See:</i> <a>newIam</a> smart constructor.
data Iam
Iam' :: Maybe Bool -> Iam

-- | Indicates whether IAM access control is enabled.
[$sel:enabled:Iam'] :: Iam -> Maybe Bool

-- | Create a value of <a>Iam</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:enabled:Iam'</a>, <a>iam_enabled</a> - Indicates whether IAM
--   access control is enabled.
newIam :: Iam

-- | Indicates whether IAM access control is enabled.
iam_enabled :: Lens' Iam (Maybe Bool)
instance GHC.Generics.Generic Amazonka.Kafka.Types.Iam.Iam
instance GHC.Show.Show Amazonka.Kafka.Types.Iam.Iam
instance GHC.Read.Read Amazonka.Kafka.Types.Iam.Iam
instance GHC.Classes.Eq Amazonka.Kafka.Types.Iam.Iam
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Kafka.Types.Iam.Iam
instance Data.Hashable.Class.Hashable Amazonka.Kafka.Types.Iam.Iam
instance Control.DeepSeq.NFData Amazonka.Kafka.Types.Iam.Iam
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Kafka.Types.Iam.Iam


module Amazonka.Kafka.Types.JmxExporter

-- | Indicates whether you want to enable or disable the JMX Exporter.
--   
--   <i>See:</i> <a>newJmxExporter</a> smart constructor.
data JmxExporter
JmxExporter' :: Bool -> JmxExporter

-- | Indicates whether you want to enable or disable the JMX Exporter.
[$sel:enabledInBroker:JmxExporter'] :: JmxExporter -> Bool

-- | Create a value of <a>JmxExporter</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:enabledInBroker:JmxExporter'</a>,
--   <a>jmxExporter_enabledInBroker</a> - Indicates whether you want to
--   enable or disable the JMX Exporter.
newJmxExporter :: Bool -> JmxExporter

-- | Indicates whether you want to enable or disable the JMX Exporter.
jmxExporter_enabledInBroker :: Lens' JmxExporter Bool
instance GHC.Generics.Generic Amazonka.Kafka.Types.JmxExporter.JmxExporter
instance GHC.Show.Show Amazonka.Kafka.Types.JmxExporter.JmxExporter
instance GHC.Read.Read Amazonka.Kafka.Types.JmxExporter.JmxExporter
instance GHC.Classes.Eq Amazonka.Kafka.Types.JmxExporter.JmxExporter
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Kafka.Types.JmxExporter.JmxExporter
instance Data.Hashable.Class.Hashable Amazonka.Kafka.Types.JmxExporter.JmxExporter
instance Control.DeepSeq.NFData Amazonka.Kafka.Types.JmxExporter.JmxExporter


module Amazonka.Kafka.Types.JmxExporterInfo

-- | Indicates whether you want to enable or disable the JMX Exporter.
--   
--   <i>See:</i> <a>newJmxExporterInfo</a> smart constructor.
data JmxExporterInfo
JmxExporterInfo' :: Bool -> JmxExporterInfo

-- | Indicates whether you want to enable or disable the JMX Exporter.
[$sel:enabledInBroker:JmxExporterInfo'] :: JmxExporterInfo -> Bool

-- | Create a value of <a>JmxExporterInfo</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:enabledInBroker:JmxExporterInfo'</a>,
--   <a>jmxExporterInfo_enabledInBroker</a> - Indicates whether you want to
--   enable or disable the JMX Exporter.
newJmxExporterInfo :: Bool -> JmxExporterInfo

-- | Indicates whether you want to enable or disable the JMX Exporter.
jmxExporterInfo_enabledInBroker :: Lens' JmxExporterInfo Bool
instance GHC.Generics.Generic Amazonka.Kafka.Types.JmxExporterInfo.JmxExporterInfo
instance GHC.Show.Show Amazonka.Kafka.Types.JmxExporterInfo.JmxExporterInfo
instance GHC.Read.Read Amazonka.Kafka.Types.JmxExporterInfo.JmxExporterInfo
instance GHC.Classes.Eq Amazonka.Kafka.Types.JmxExporterInfo.JmxExporterInfo
instance Data.Hashable.Class.Hashable Amazonka.Kafka.Types.JmxExporterInfo.JmxExporterInfo
instance Control.DeepSeq.NFData Amazonka.Kafka.Types.JmxExporterInfo.JmxExporterInfo
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Kafka.Types.JmxExporterInfo.JmxExporterInfo


module Amazonka.Kafka.Types.KafkaVersionStatus
newtype KafkaVersionStatus
KafkaVersionStatus' :: Text -> KafkaVersionStatus
[fromKafkaVersionStatus] :: KafkaVersionStatus -> Text
pattern KafkaVersionStatus_ACTIVE :: KafkaVersionStatus
pattern KafkaVersionStatus_DEPRECATED :: KafkaVersionStatus
instance Amazonka.Data.XML.ToXML Amazonka.Kafka.Types.KafkaVersionStatus.KafkaVersionStatus
instance Amazonka.Data.XML.FromXML Amazonka.Kafka.Types.KafkaVersionStatus.KafkaVersionStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.Kafka.Types.KafkaVersionStatus.KafkaVersionStatus
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Kafka.Types.KafkaVersionStatus.KafkaVersionStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.Kafka.Types.KafkaVersionStatus.KafkaVersionStatus
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Kafka.Types.KafkaVersionStatus.KafkaVersionStatus
instance Amazonka.Data.Query.ToQuery Amazonka.Kafka.Types.KafkaVersionStatus.KafkaVersionStatus
instance Amazonka.Data.Headers.ToHeader Amazonka.Kafka.Types.KafkaVersionStatus.KafkaVersionStatus
instance Amazonka.Data.Log.ToLog Amazonka.Kafka.Types.KafkaVersionStatus.KafkaVersionStatus
instance Amazonka.Data.ByteString.ToByteString Amazonka.Kafka.Types.KafkaVersionStatus.KafkaVersionStatus
instance Amazonka.Data.Text.ToText Amazonka.Kafka.Types.KafkaVersionStatus.KafkaVersionStatus
instance Amazonka.Data.Text.FromText Amazonka.Kafka.Types.KafkaVersionStatus.KafkaVersionStatus
instance Control.DeepSeq.NFData Amazonka.Kafka.Types.KafkaVersionStatus.KafkaVersionStatus
instance Data.Hashable.Class.Hashable Amazonka.Kafka.Types.KafkaVersionStatus.KafkaVersionStatus
instance GHC.Generics.Generic Amazonka.Kafka.Types.KafkaVersionStatus.KafkaVersionStatus
instance GHC.Classes.Ord Amazonka.Kafka.Types.KafkaVersionStatus.KafkaVersionStatus
instance GHC.Classes.Eq Amazonka.Kafka.Types.KafkaVersionStatus.KafkaVersionStatus
instance GHC.Read.Read Amazonka.Kafka.Types.KafkaVersionStatus.KafkaVersionStatus
instance GHC.Show.Show Amazonka.Kafka.Types.KafkaVersionStatus.KafkaVersionStatus


module Amazonka.Kafka.Types.KafkaVersion

-- | <i>See:</i> <a>newKafkaVersion</a> smart constructor.
data KafkaVersion
KafkaVersion' :: Maybe KafkaVersionStatus -> Maybe Text -> KafkaVersion
[$sel:status:KafkaVersion'] :: KafkaVersion -> Maybe KafkaVersionStatus
[$sel:version:KafkaVersion'] :: KafkaVersion -> Maybe Text

-- | Create a value of <a>KafkaVersion</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:KafkaVersion'</a>, <a>kafkaVersion_status</a> -
--   Undocumented member.
--   
--   <a>$sel:version:KafkaVersion'</a>, <a>kafkaVersion_version</a> -
--   Undocumented member.
newKafkaVersion :: KafkaVersion

-- | Undocumented member.
kafkaVersion_status :: Lens' KafkaVersion (Maybe KafkaVersionStatus)

-- | Undocumented member.
kafkaVersion_version :: Lens' KafkaVersion (Maybe Text)
instance GHC.Generics.Generic Amazonka.Kafka.Types.KafkaVersion.KafkaVersion
instance GHC.Show.Show Amazonka.Kafka.Types.KafkaVersion.KafkaVersion
instance GHC.Read.Read Amazonka.Kafka.Types.KafkaVersion.KafkaVersion
instance GHC.Classes.Eq Amazonka.Kafka.Types.KafkaVersion.KafkaVersion
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Kafka.Types.KafkaVersion.KafkaVersion
instance Data.Hashable.Class.Hashable Amazonka.Kafka.Types.KafkaVersion.KafkaVersion
instance Control.DeepSeq.NFData Amazonka.Kafka.Types.KafkaVersion.KafkaVersion


module Amazonka.Kafka.Types.NodeExporter

-- | Indicates whether you want to enable or disable the Node Exporter.
--   
--   <i>See:</i> <a>newNodeExporter</a> smart constructor.
data NodeExporter
NodeExporter' :: Bool -> NodeExporter

-- | Indicates whether you want to enable or disable the Node Exporter.
[$sel:enabledInBroker:NodeExporter'] :: NodeExporter -> Bool

-- | Create a value of <a>NodeExporter</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:enabledInBroker:NodeExporter'</a>,
--   <a>nodeExporter_enabledInBroker</a> - Indicates whether you want to
--   enable or disable the Node Exporter.
newNodeExporter :: Bool -> NodeExporter

-- | Indicates whether you want to enable or disable the Node Exporter.
nodeExporter_enabledInBroker :: Lens' NodeExporter Bool
instance GHC.Generics.Generic Amazonka.Kafka.Types.NodeExporter.NodeExporter
instance GHC.Show.Show Amazonka.Kafka.Types.NodeExporter.NodeExporter
instance GHC.Read.Read Amazonka.Kafka.Types.NodeExporter.NodeExporter
instance GHC.Classes.Eq Amazonka.Kafka.Types.NodeExporter.NodeExporter
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Kafka.Types.NodeExporter.NodeExporter
instance Data.Hashable.Class.Hashable Amazonka.Kafka.Types.NodeExporter.NodeExporter
instance Control.DeepSeq.NFData Amazonka.Kafka.Types.NodeExporter.NodeExporter


module Amazonka.Kafka.Types.NodeExporterInfo

-- | Indicates whether you want to enable or disable the Node Exporter.
--   
--   <i>See:</i> <a>newNodeExporterInfo</a> smart constructor.
data NodeExporterInfo
NodeExporterInfo' :: Bool -> NodeExporterInfo

-- | Indicates whether you want to enable or disable the Node Exporter.
[$sel:enabledInBroker:NodeExporterInfo'] :: NodeExporterInfo -> Bool

-- | Create a value of <a>NodeExporterInfo</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:enabledInBroker:NodeExporterInfo'</a>,
--   <a>nodeExporterInfo_enabledInBroker</a> - Indicates whether you want
--   to enable or disable the Node Exporter.
newNodeExporterInfo :: Bool -> NodeExporterInfo

-- | Indicates whether you want to enable or disable the Node Exporter.
nodeExporterInfo_enabledInBroker :: Lens' NodeExporterInfo Bool
instance GHC.Generics.Generic Amazonka.Kafka.Types.NodeExporterInfo.NodeExporterInfo
instance GHC.Show.Show Amazonka.Kafka.Types.NodeExporterInfo.NodeExporterInfo
instance GHC.Read.Read Amazonka.Kafka.Types.NodeExporterInfo.NodeExporterInfo
instance GHC.Classes.Eq Amazonka.Kafka.Types.NodeExporterInfo.NodeExporterInfo
instance Data.Hashable.Class.Hashable Amazonka.Kafka.Types.NodeExporterInfo.NodeExporterInfo
instance Control.DeepSeq.NFData Amazonka.Kafka.Types.NodeExporterInfo.NodeExporterInfo
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Kafka.Types.NodeExporterInfo.NodeExporterInfo


module Amazonka.Kafka.Types.NodeType

-- | The broker or Zookeeper node.
newtype NodeType
NodeType' :: Text -> NodeType
[fromNodeType] :: NodeType -> Text
pattern NodeType_BROKER :: NodeType
instance Amazonka.Data.XML.ToXML Amazonka.Kafka.Types.NodeType.NodeType
instance Amazonka.Data.XML.FromXML Amazonka.Kafka.Types.NodeType.NodeType
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.Kafka.Types.NodeType.NodeType
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Kafka.Types.NodeType.NodeType
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.Kafka.Types.NodeType.NodeType
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Kafka.Types.NodeType.NodeType
instance Amazonka.Data.Query.ToQuery Amazonka.Kafka.Types.NodeType.NodeType
instance Amazonka.Data.Headers.ToHeader Amazonka.Kafka.Types.NodeType.NodeType
instance Amazonka.Data.Log.ToLog Amazonka.Kafka.Types.NodeType.NodeType
instance Amazonka.Data.ByteString.ToByteString Amazonka.Kafka.Types.NodeType.NodeType
instance Amazonka.Data.Text.ToText Amazonka.Kafka.Types.NodeType.NodeType
instance Amazonka.Data.Text.FromText Amazonka.Kafka.Types.NodeType.NodeType
instance Control.DeepSeq.NFData Amazonka.Kafka.Types.NodeType.NodeType
instance Data.Hashable.Class.Hashable Amazonka.Kafka.Types.NodeType.NodeType
instance GHC.Generics.Generic Amazonka.Kafka.Types.NodeType.NodeType
instance GHC.Classes.Ord Amazonka.Kafka.Types.NodeType.NodeType
instance GHC.Classes.Eq Amazonka.Kafka.Types.NodeType.NodeType
instance GHC.Read.Read Amazonka.Kafka.Types.NodeType.NodeType
instance GHC.Show.Show Amazonka.Kafka.Types.NodeType.NodeType


module Amazonka.Kafka.Types.Prometheus

-- | Prometheus settings.
--   
--   <i>See:</i> <a>newPrometheus</a> smart constructor.
data Prometheus
Prometheus' :: Maybe JmxExporter -> Maybe NodeExporter -> Prometheus

-- | Indicates whether you want to enable or disable the JMX Exporter.
[$sel:jmxExporter:Prometheus'] :: Prometheus -> Maybe JmxExporter

-- | Indicates whether you want to enable or disable the Node Exporter.
[$sel:nodeExporter:Prometheus'] :: Prometheus -> Maybe NodeExporter

-- | Create a value of <a>Prometheus</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jmxExporter:Prometheus'</a>, <a>prometheus_jmxExporter</a> -
--   Indicates whether you want to enable or disable the JMX Exporter.
--   
--   <a>$sel:nodeExporter:Prometheus'</a>, <a>prometheus_nodeExporter</a> -
--   Indicates whether you want to enable or disable the Node Exporter.
newPrometheus :: Prometheus

-- | Indicates whether you want to enable or disable the JMX Exporter.
prometheus_jmxExporter :: Lens' Prometheus (Maybe JmxExporter)

-- | Indicates whether you want to enable or disable the Node Exporter.
prometheus_nodeExporter :: Lens' Prometheus (Maybe NodeExporter)
instance GHC.Generics.Generic Amazonka.Kafka.Types.Prometheus.Prometheus
instance GHC.Show.Show Amazonka.Kafka.Types.Prometheus.Prometheus
instance GHC.Read.Read Amazonka.Kafka.Types.Prometheus.Prometheus
instance GHC.Classes.Eq Amazonka.Kafka.Types.Prometheus.Prometheus
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Kafka.Types.Prometheus.Prometheus
instance Data.Hashable.Class.Hashable Amazonka.Kafka.Types.Prometheus.Prometheus
instance Control.DeepSeq.NFData Amazonka.Kafka.Types.Prometheus.Prometheus


module Amazonka.Kafka.Types.OpenMonitoring

-- | JMX and Node monitoring for the MSK cluster.
--   
--   <i>See:</i> <a>newOpenMonitoring</a> smart constructor.
data OpenMonitoring
OpenMonitoring' :: Prometheus -> OpenMonitoring

-- | Prometheus settings.
[$sel:prometheus:OpenMonitoring'] :: OpenMonitoring -> Prometheus

-- | Create a value of <a>OpenMonitoring</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:prometheus:OpenMonitoring'</a>,
--   <a>openMonitoring_prometheus</a> - Prometheus settings.
newOpenMonitoring :: Prometheus -> OpenMonitoring

-- | Prometheus settings.
openMonitoring_prometheus :: Lens' OpenMonitoring Prometheus
instance GHC.Generics.Generic Amazonka.Kafka.Types.OpenMonitoring.OpenMonitoring
instance GHC.Show.Show Amazonka.Kafka.Types.OpenMonitoring.OpenMonitoring
instance GHC.Read.Read Amazonka.Kafka.Types.OpenMonitoring.OpenMonitoring
instance GHC.Classes.Eq Amazonka.Kafka.Types.OpenMonitoring.OpenMonitoring
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Kafka.Types.OpenMonitoring.OpenMonitoring
instance Data.Hashable.Class.Hashable Amazonka.Kafka.Types.OpenMonitoring.OpenMonitoring
instance Control.DeepSeq.NFData Amazonka.Kafka.Types.OpenMonitoring.OpenMonitoring


module Amazonka.Kafka.Types.PrometheusInfo

-- | Prometheus settings.
--   
--   <i>See:</i> <a>newPrometheusInfo</a> smart constructor.
data PrometheusInfo
PrometheusInfo' :: Maybe JmxExporterInfo -> Maybe NodeExporterInfo -> PrometheusInfo

-- | Indicates whether you want to enable or disable the JMX Exporter.
[$sel:jmxExporter:PrometheusInfo'] :: PrometheusInfo -> Maybe JmxExporterInfo

-- | Indicates whether you want to enable or disable the Node Exporter.
[$sel:nodeExporter:PrometheusInfo'] :: PrometheusInfo -> Maybe NodeExporterInfo

-- | Create a value of <a>PrometheusInfo</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jmxExporter:PrometheusInfo'</a>,
--   <a>prometheusInfo_jmxExporter</a> - Indicates whether you want to
--   enable or disable the JMX Exporter.
--   
--   <a>$sel:nodeExporter:PrometheusInfo'</a>,
--   <a>prometheusInfo_nodeExporter</a> - Indicates whether you want to
--   enable or disable the Node Exporter.
newPrometheusInfo :: PrometheusInfo

-- | Indicates whether you want to enable or disable the JMX Exporter.
prometheusInfo_jmxExporter :: Lens' PrometheusInfo (Maybe JmxExporterInfo)

-- | Indicates whether you want to enable or disable the Node Exporter.
prometheusInfo_nodeExporter :: Lens' PrometheusInfo (Maybe NodeExporterInfo)
instance GHC.Generics.Generic Amazonka.Kafka.Types.PrometheusInfo.PrometheusInfo
instance GHC.Show.Show Amazonka.Kafka.Types.PrometheusInfo.PrometheusInfo
instance GHC.Read.Read Amazonka.Kafka.Types.PrometheusInfo.PrometheusInfo
instance GHC.Classes.Eq Amazonka.Kafka.Types.PrometheusInfo.PrometheusInfo
instance Data.Hashable.Class.Hashable Amazonka.Kafka.Types.PrometheusInfo.PrometheusInfo
instance Control.DeepSeq.NFData Amazonka.Kafka.Types.PrometheusInfo.PrometheusInfo
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Kafka.Types.PrometheusInfo.PrometheusInfo


module Amazonka.Kafka.Types.OpenMonitoringInfo

-- | JMX and Node monitoring for the MSK cluster.
--   
--   <i>See:</i> <a>newOpenMonitoringInfo</a> smart constructor.
data OpenMonitoringInfo
OpenMonitoringInfo' :: PrometheusInfo -> OpenMonitoringInfo

-- | Prometheus settings.
[$sel:prometheus:OpenMonitoringInfo'] :: OpenMonitoringInfo -> PrometheusInfo

-- | Create a value of <a>OpenMonitoringInfo</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:prometheus:OpenMonitoringInfo'</a>,
--   <a>openMonitoringInfo_prometheus</a> - Prometheus settings.
newOpenMonitoringInfo :: PrometheusInfo -> OpenMonitoringInfo

-- | Prometheus settings.
openMonitoringInfo_prometheus :: Lens' OpenMonitoringInfo PrometheusInfo
instance GHC.Generics.Generic Amazonka.Kafka.Types.OpenMonitoringInfo.OpenMonitoringInfo
instance GHC.Show.Show Amazonka.Kafka.Types.OpenMonitoringInfo.OpenMonitoringInfo
instance GHC.Read.Read Amazonka.Kafka.Types.OpenMonitoringInfo.OpenMonitoringInfo
instance GHC.Classes.Eq Amazonka.Kafka.Types.OpenMonitoringInfo.OpenMonitoringInfo
instance Data.Hashable.Class.Hashable Amazonka.Kafka.Types.OpenMonitoringInfo.OpenMonitoringInfo
instance Control.DeepSeq.NFData Amazonka.Kafka.Types.OpenMonitoringInfo.OpenMonitoringInfo
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Kafka.Types.OpenMonitoringInfo.OpenMonitoringInfo


module Amazonka.Kafka.Types.S3

-- | <i>See:</i> <a>newS3</a> smart constructor.
data S3
S3' :: Maybe Text -> Maybe Text -> Bool -> S3
[$sel:prefix:S3'] :: S3 -> Maybe Text
[$sel:bucket:S3'] :: S3 -> Maybe Text
[$sel:enabled:S3'] :: S3 -> Bool

-- | Create a value of <a>S3</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:prefix:S3'</a>, <a>s3_prefix</a> - Undocumented member.
--   
--   <a>$sel:bucket:S3'</a>, <a>s3_bucket</a> - Undocumented member.
--   
--   <a>$sel:enabled:S3'</a>, <a>s3_enabled</a> - Undocumented member.
newS3 :: Bool -> S3

-- | Undocumented member.
s3_prefix :: Lens' S3 (Maybe Text)

-- | Undocumented member.
s3_bucket :: Lens' S3 (Maybe Text)

-- | Undocumented member.
s3_enabled :: Lens' S3 Bool
instance GHC.Generics.Generic Amazonka.Kafka.Types.S3.S3
instance GHC.Show.Show Amazonka.Kafka.Types.S3.S3
instance GHC.Read.Read Amazonka.Kafka.Types.S3.S3
instance GHC.Classes.Eq Amazonka.Kafka.Types.S3.S3
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Kafka.Types.S3.S3
instance Data.Hashable.Class.Hashable Amazonka.Kafka.Types.S3.S3
instance Control.DeepSeq.NFData Amazonka.Kafka.Types.S3.S3
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Kafka.Types.S3.S3


module Amazonka.Kafka.Types.BrokerLogs

-- | <i>See:</i> <a>newBrokerLogs</a> smart constructor.
data BrokerLogs
BrokerLogs' :: Maybe CloudWatchLogs -> Maybe Firehose -> Maybe S3 -> BrokerLogs
[$sel:cloudWatchLogs:BrokerLogs'] :: BrokerLogs -> Maybe CloudWatchLogs
[$sel:firehose:BrokerLogs'] :: BrokerLogs -> Maybe Firehose
[$sel:s3:BrokerLogs'] :: BrokerLogs -> Maybe S3

-- | Create a value of <a>BrokerLogs</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cloudWatchLogs:BrokerLogs'</a>,
--   <a>brokerLogs_cloudWatchLogs</a> - Undocumented member.
--   
--   <a>$sel:firehose:BrokerLogs'</a>, <a>brokerLogs_firehose</a> -
--   Undocumented member.
--   
--   <a>$sel:s3:BrokerLogs'</a>, <a>brokerLogs_s3</a> - Undocumented
--   member.
newBrokerLogs :: BrokerLogs

-- | Undocumented member.
brokerLogs_cloudWatchLogs :: Lens' BrokerLogs (Maybe CloudWatchLogs)

-- | Undocumented member.
brokerLogs_firehose :: Lens' BrokerLogs (Maybe Firehose)

-- | Undocumented member.
brokerLogs_s3 :: Lens' BrokerLogs (Maybe S3)
instance GHC.Generics.Generic Amazonka.Kafka.Types.BrokerLogs.BrokerLogs
instance GHC.Show.Show Amazonka.Kafka.Types.BrokerLogs.BrokerLogs
instance GHC.Read.Read Amazonka.Kafka.Types.BrokerLogs.BrokerLogs
instance GHC.Classes.Eq Amazonka.Kafka.Types.BrokerLogs.BrokerLogs
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Kafka.Types.BrokerLogs.BrokerLogs
instance Data.Hashable.Class.Hashable Amazonka.Kafka.Types.BrokerLogs.BrokerLogs
instance Control.DeepSeq.NFData Amazonka.Kafka.Types.BrokerLogs.BrokerLogs
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Kafka.Types.BrokerLogs.BrokerLogs


module Amazonka.Kafka.Types.LoggingInfo

-- | <i>See:</i> <a>newLoggingInfo</a> smart constructor.
data LoggingInfo
LoggingInfo' :: BrokerLogs -> LoggingInfo
[$sel:brokerLogs:LoggingInfo'] :: LoggingInfo -> BrokerLogs

-- | Create a value of <a>LoggingInfo</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:brokerLogs:LoggingInfo'</a>, <a>loggingInfo_brokerLogs</a> -
--   Undocumented member.
newLoggingInfo :: BrokerLogs -> LoggingInfo

-- | Undocumented member.
loggingInfo_brokerLogs :: Lens' LoggingInfo BrokerLogs
instance GHC.Generics.Generic Amazonka.Kafka.Types.LoggingInfo.LoggingInfo
instance GHC.Show.Show Amazonka.Kafka.Types.LoggingInfo.LoggingInfo
instance GHC.Read.Read Amazonka.Kafka.Types.LoggingInfo.LoggingInfo
instance GHC.Classes.Eq Amazonka.Kafka.Types.LoggingInfo.LoggingInfo
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Kafka.Types.LoggingInfo.LoggingInfo
instance Data.Hashable.Class.Hashable Amazonka.Kafka.Types.LoggingInfo.LoggingInfo
instance Control.DeepSeq.NFData Amazonka.Kafka.Types.LoggingInfo.LoggingInfo
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Kafka.Types.LoggingInfo.LoggingInfo


module Amazonka.Kafka.Types.Scram

-- | Details for SASL/SCRAM client authentication.
--   
--   <i>See:</i> <a>newScram</a> smart constructor.
data Scram
Scram' :: Maybe Bool -> Scram

-- | SASL/SCRAM authentication is enabled or not.
[$sel:enabled:Scram'] :: Scram -> Maybe Bool

-- | Create a value of <a>Scram</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:enabled:Scram'</a>, <a>scram_enabled</a> - SASL/SCRAM
--   authentication is enabled or not.
newScram :: Scram

-- | SASL/SCRAM authentication is enabled or not.
scram_enabled :: Lens' Scram (Maybe Bool)
instance GHC.Generics.Generic Amazonka.Kafka.Types.Scram.Scram
instance GHC.Show.Show Amazonka.Kafka.Types.Scram.Scram
instance GHC.Read.Read Amazonka.Kafka.Types.Scram.Scram
instance GHC.Classes.Eq Amazonka.Kafka.Types.Scram.Scram
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Kafka.Types.Scram.Scram
instance Data.Hashable.Class.Hashable Amazonka.Kafka.Types.Scram.Scram
instance Control.DeepSeq.NFData Amazonka.Kafka.Types.Scram.Scram
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Kafka.Types.Scram.Scram


module Amazonka.Kafka.Types.Sasl

-- | Details for client authentication using SASL.
--   
--   <i>See:</i> <a>newSasl</a> smart constructor.
data Sasl
Sasl' :: Maybe Iam -> Maybe Scram -> Sasl

-- | Indicates whether IAM access control is enabled.
[$sel:iam:Sasl'] :: Sasl -> Maybe Iam

-- | Details for SASL/SCRAM client authentication.
[$sel:scram:Sasl'] :: Sasl -> Maybe Scram

-- | Create a value of <a>Sasl</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:iam:Sasl'</a>, <a>sasl_iam</a> - Indicates whether IAM access
--   control is enabled.
--   
--   <a>$sel:scram:Sasl'</a>, <a>sasl_scram</a> - Details for SASL/SCRAM
--   client authentication.
newSasl :: Sasl

-- | Indicates whether IAM access control is enabled.
sasl_iam :: Lens' Sasl (Maybe Iam)

-- | Details for SASL/SCRAM client authentication.
sasl_scram :: Lens' Sasl (Maybe Scram)
instance GHC.Generics.Generic Amazonka.Kafka.Types.Sasl.Sasl
instance GHC.Show.Show Amazonka.Kafka.Types.Sasl.Sasl
instance GHC.Read.Read Amazonka.Kafka.Types.Sasl.Sasl
instance GHC.Classes.Eq Amazonka.Kafka.Types.Sasl.Sasl
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Kafka.Types.Sasl.Sasl
instance Data.Hashable.Class.Hashable Amazonka.Kafka.Types.Sasl.Sasl
instance Control.DeepSeq.NFData Amazonka.Kafka.Types.Sasl.Sasl
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Kafka.Types.Sasl.Sasl


module Amazonka.Kafka.Types.StateInfo

-- | <i>See:</i> <a>newStateInfo</a> smart constructor.
data StateInfo
StateInfo' :: Maybe Text -> Maybe Text -> StateInfo
[$sel:code:StateInfo'] :: StateInfo -> Maybe Text
[$sel:message:StateInfo'] :: StateInfo -> Maybe Text

-- | Create a value of <a>StateInfo</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:code:StateInfo'</a>, <a>stateInfo_code</a> - Undocumented
--   member.
--   
--   <a>$sel:message:StateInfo'</a>, <a>stateInfo_message</a> -
--   Undocumented member.
newStateInfo :: StateInfo

-- | Undocumented member.
stateInfo_code :: Lens' StateInfo (Maybe Text)

-- | Undocumented member.
stateInfo_message :: Lens' StateInfo (Maybe Text)
instance GHC.Generics.Generic Amazonka.Kafka.Types.StateInfo.StateInfo
instance GHC.Show.Show Amazonka.Kafka.Types.StateInfo.StateInfo
instance GHC.Read.Read Amazonka.Kafka.Types.StateInfo.StateInfo
instance GHC.Classes.Eq Amazonka.Kafka.Types.StateInfo.StateInfo
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Kafka.Types.StateInfo.StateInfo
instance Data.Hashable.Class.Hashable Amazonka.Kafka.Types.StateInfo.StateInfo
instance Control.DeepSeq.NFData Amazonka.Kafka.Types.StateInfo.StateInfo


module Amazonka.Kafka.Types.StorageInfo

-- | Contains information about storage volumes attached to MSK broker
--   nodes.
--   
--   <i>See:</i> <a>newStorageInfo</a> smart constructor.
data StorageInfo
StorageInfo' :: Maybe EBSStorageInfo -> StorageInfo

-- | EBS volume information.
[$sel:ebsStorageInfo:StorageInfo'] :: StorageInfo -> Maybe EBSStorageInfo

-- | Create a value of <a>StorageInfo</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ebsStorageInfo:StorageInfo'</a>,
--   <a>storageInfo_ebsStorageInfo</a> - EBS volume information.
newStorageInfo :: StorageInfo

-- | EBS volume information.
storageInfo_ebsStorageInfo :: Lens' StorageInfo (Maybe EBSStorageInfo)
instance GHC.Generics.Generic Amazonka.Kafka.Types.StorageInfo.StorageInfo
instance GHC.Show.Show Amazonka.Kafka.Types.StorageInfo.StorageInfo
instance GHC.Read.Read Amazonka.Kafka.Types.StorageInfo.StorageInfo
instance GHC.Classes.Eq Amazonka.Kafka.Types.StorageInfo.StorageInfo
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Kafka.Types.StorageInfo.StorageInfo
instance Data.Hashable.Class.Hashable Amazonka.Kafka.Types.StorageInfo.StorageInfo
instance Control.DeepSeq.NFData Amazonka.Kafka.Types.StorageInfo.StorageInfo
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Kafka.Types.StorageInfo.StorageInfo


module Amazonka.Kafka.Types.BrokerNodeGroupInfo

-- | Describes the setup to be used for Kafka broker nodes in the cluster.
--   
--   <i>See:</i> <a>newBrokerNodeGroupInfo</a> smart constructor.
data BrokerNodeGroupInfo
BrokerNodeGroupInfo' :: Maybe StorageInfo -> Maybe BrokerAZDistribution -> Maybe [Text] -> [Text] -> Text -> BrokerNodeGroupInfo

-- | Contains information about storage volumes attached to MSK broker
--   nodes.
[$sel:storageInfo:BrokerNodeGroupInfo'] :: BrokerNodeGroupInfo -> Maybe StorageInfo

-- | The distribution of broker nodes across Availability Zones. This is an
--   optional parameter. If you don't specify it, Amazon MSK gives it the
--   value DEFAULT. You can also explicitly set this parameter to the value
--   DEFAULT. No other values are currently allowed.
--   
--   Amazon MSK distributes the broker nodes evenly across the Availability
--   Zones that correspond to the subnets you provide when you create the
--   cluster.
[$sel:brokerAZDistribution:BrokerNodeGroupInfo'] :: BrokerNodeGroupInfo -> Maybe BrokerAZDistribution

-- | The AWS security groups to associate with the elastic network
--   interfaces in order to specify who can connect to and communicate with
--   the Amazon MSK cluster. If you don't specify a security group, Amazon
--   MSK uses the default security group associated with the VPC.
[$sel:securityGroups:BrokerNodeGroupInfo'] :: BrokerNodeGroupInfo -> Maybe [Text]

-- | The list of subnets to connect to in the client virtual private cloud
--   (VPC). AWS creates elastic network interfaces inside these subnets.
--   Client applications use elastic network interfaces to produce and
--   consume data. Client subnets can't be in Availability Zone us-east-1e.
[$sel:clientSubnets:BrokerNodeGroupInfo'] :: BrokerNodeGroupInfo -> [Text]

-- | The type of Amazon EC2 instances to use for Kafka brokers. The
--   following instance types are allowed: kafka.m5.large, kafka.m5.xlarge,
--   kafka.m5.2xlarge, kafka.m5.4xlarge, kafka.m5.12xlarge, and
--   kafka.m5.24xlarge.
[$sel:instanceType:BrokerNodeGroupInfo'] :: BrokerNodeGroupInfo -> Text

-- | Create a value of <a>BrokerNodeGroupInfo</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:storageInfo:BrokerNodeGroupInfo'</a>,
--   <a>brokerNodeGroupInfo_storageInfo</a> - Contains information about
--   storage volumes attached to MSK broker nodes.
--   
--   <a>$sel:brokerAZDistribution:BrokerNodeGroupInfo'</a>,
--   <a>brokerNodeGroupInfo_brokerAZDistribution</a> - The distribution of
--   broker nodes across Availability Zones. This is an optional parameter.
--   If you don't specify it, Amazon MSK gives it the value DEFAULT. You
--   can also explicitly set this parameter to the value DEFAULT. No other
--   values are currently allowed.
--   
--   Amazon MSK distributes the broker nodes evenly across the Availability
--   Zones that correspond to the subnets you provide when you create the
--   cluster.
--   
--   <a>$sel:securityGroups:BrokerNodeGroupInfo'</a>,
--   <a>brokerNodeGroupInfo_securityGroups</a> - The AWS security groups to
--   associate with the elastic network interfaces in order to specify who
--   can connect to and communicate with the Amazon MSK cluster. If you
--   don't specify a security group, Amazon MSK uses the default security
--   group associated with the VPC.
--   
--   <a>$sel:clientSubnets:BrokerNodeGroupInfo'</a>,
--   <a>brokerNodeGroupInfo_clientSubnets</a> - The list of subnets to
--   connect to in the client virtual private cloud (VPC). AWS creates
--   elastic network interfaces inside these subnets. Client applications
--   use elastic network interfaces to produce and consume data. Client
--   subnets can't be in Availability Zone us-east-1e.
--   
--   <a>$sel:instanceType:BrokerNodeGroupInfo'</a>,
--   <a>brokerNodeGroupInfo_instanceType</a> - The type of Amazon EC2
--   instances to use for Kafka brokers. The following instance types are
--   allowed: kafka.m5.large, kafka.m5.xlarge, kafka.m5.2xlarge,
--   kafka.m5.4xlarge, kafka.m5.12xlarge, and kafka.m5.24xlarge.
newBrokerNodeGroupInfo :: Text -> BrokerNodeGroupInfo

-- | Contains information about storage volumes attached to MSK broker
--   nodes.
brokerNodeGroupInfo_storageInfo :: Lens' BrokerNodeGroupInfo (Maybe StorageInfo)

-- | The distribution of broker nodes across Availability Zones. This is an
--   optional parameter. If you don't specify it, Amazon MSK gives it the
--   value DEFAULT. You can also explicitly set this parameter to the value
--   DEFAULT. No other values are currently allowed.
--   
--   Amazon MSK distributes the broker nodes evenly across the Availability
--   Zones that correspond to the subnets you provide when you create the
--   cluster.
brokerNodeGroupInfo_brokerAZDistribution :: Lens' BrokerNodeGroupInfo (Maybe BrokerAZDistribution)

-- | The AWS security groups to associate with the elastic network
--   interfaces in order to specify who can connect to and communicate with
--   the Amazon MSK cluster. If you don't specify a security group, Amazon
--   MSK uses the default security group associated with the VPC.
brokerNodeGroupInfo_securityGroups :: Lens' BrokerNodeGroupInfo (Maybe [Text])

-- | The list of subnets to connect to in the client virtual private cloud
--   (VPC). AWS creates elastic network interfaces inside these subnets.
--   Client applications use elastic network interfaces to produce and
--   consume data. Client subnets can't be in Availability Zone us-east-1e.
brokerNodeGroupInfo_clientSubnets :: Lens' BrokerNodeGroupInfo [Text]

-- | The type of Amazon EC2 instances to use for Kafka brokers. The
--   following instance types are allowed: kafka.m5.large, kafka.m5.xlarge,
--   kafka.m5.2xlarge, kafka.m5.4xlarge, kafka.m5.12xlarge, and
--   kafka.m5.24xlarge.
brokerNodeGroupInfo_instanceType :: Lens' BrokerNodeGroupInfo Text
instance GHC.Generics.Generic Amazonka.Kafka.Types.BrokerNodeGroupInfo.BrokerNodeGroupInfo
instance GHC.Show.Show Amazonka.Kafka.Types.BrokerNodeGroupInfo.BrokerNodeGroupInfo
instance GHC.Read.Read Amazonka.Kafka.Types.BrokerNodeGroupInfo.BrokerNodeGroupInfo
instance GHC.Classes.Eq Amazonka.Kafka.Types.BrokerNodeGroupInfo.BrokerNodeGroupInfo
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Kafka.Types.BrokerNodeGroupInfo.BrokerNodeGroupInfo
instance Data.Hashable.Class.Hashable Amazonka.Kafka.Types.BrokerNodeGroupInfo.BrokerNodeGroupInfo
instance Control.DeepSeq.NFData Amazonka.Kafka.Types.BrokerNodeGroupInfo.BrokerNodeGroupInfo
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Kafka.Types.BrokerNodeGroupInfo.BrokerNodeGroupInfo


module Amazonka.Kafka.Types.Tls

-- | Details for client authentication using TLS.
--   
--   <i>See:</i> <a>newTls</a> smart constructor.
data Tls
Tls' :: Maybe Bool -> Maybe [Text] -> Tls

-- | Specifies whether you want to enable or disable TLS authentication.
[$sel:enabled:Tls'] :: Tls -> Maybe Bool

-- | List of ACM Certificate Authority ARNs.
[$sel:certificateAuthorityArnList:Tls'] :: Tls -> Maybe [Text]

-- | Create a value of <a>Tls</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:enabled:Tls'</a>, <a>tls_enabled</a> - Specifies whether you
--   want to enable or disable TLS authentication.
--   
--   <a>$sel:certificateAuthorityArnList:Tls'</a>,
--   <a>tls_certificateAuthorityArnList</a> - List of ACM Certificate
--   Authority ARNs.
newTls :: Tls

-- | Specifies whether you want to enable or disable TLS authentication.
tls_enabled :: Lens' Tls (Maybe Bool)

-- | List of ACM Certificate Authority ARNs.
tls_certificateAuthorityArnList :: Lens' Tls (Maybe [Text])
instance GHC.Generics.Generic Amazonka.Kafka.Types.Tls.Tls
instance GHC.Show.Show Amazonka.Kafka.Types.Tls.Tls
instance GHC.Read.Read Amazonka.Kafka.Types.Tls.Tls
instance GHC.Classes.Eq Amazonka.Kafka.Types.Tls.Tls
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Kafka.Types.Tls.Tls
instance Data.Hashable.Class.Hashable Amazonka.Kafka.Types.Tls.Tls
instance Control.DeepSeq.NFData Amazonka.Kafka.Types.Tls.Tls
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Kafka.Types.Tls.Tls


module Amazonka.Kafka.Types.Unauthenticated

-- | <i>See:</i> <a>newUnauthenticated</a> smart constructor.
data Unauthenticated
Unauthenticated' :: Maybe Bool -> Unauthenticated

-- | Specifies whether you want to enable or disable unauthenticated
--   traffic to your cluster.
[$sel:enabled:Unauthenticated'] :: Unauthenticated -> Maybe Bool

-- | Create a value of <a>Unauthenticated</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:enabled:Unauthenticated'</a>, <a>unauthenticated_enabled</a> -
--   Specifies whether you want to enable or disable unauthenticated
--   traffic to your cluster.
newUnauthenticated :: Unauthenticated

-- | Specifies whether you want to enable or disable unauthenticated
--   traffic to your cluster.
unauthenticated_enabled :: Lens' Unauthenticated (Maybe Bool)
instance GHC.Generics.Generic Amazonka.Kafka.Types.Unauthenticated.Unauthenticated
instance GHC.Show.Show Amazonka.Kafka.Types.Unauthenticated.Unauthenticated
instance GHC.Read.Read Amazonka.Kafka.Types.Unauthenticated.Unauthenticated
instance GHC.Classes.Eq Amazonka.Kafka.Types.Unauthenticated.Unauthenticated
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Kafka.Types.Unauthenticated.Unauthenticated
instance Data.Hashable.Class.Hashable Amazonka.Kafka.Types.Unauthenticated.Unauthenticated
instance Control.DeepSeq.NFData Amazonka.Kafka.Types.Unauthenticated.Unauthenticated
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Kafka.Types.Unauthenticated.Unauthenticated


module Amazonka.Kafka.Types.ClientAuthentication

-- | Includes all client authentication information.
--   
--   <i>See:</i> <a>newClientAuthentication</a> smart constructor.
data ClientAuthentication
ClientAuthentication' :: Maybe Sasl -> Maybe Tls -> Maybe Unauthenticated -> ClientAuthentication

-- | Details for ClientAuthentication using SASL.
[$sel:sasl:ClientAuthentication'] :: ClientAuthentication -> Maybe Sasl

-- | Details for ClientAuthentication using TLS.
[$sel:tls:ClientAuthentication'] :: ClientAuthentication -> Maybe Tls

-- | Contains information about unauthenticated traffic to the cluster.
[$sel:unauthenticated:ClientAuthentication'] :: ClientAuthentication -> Maybe Unauthenticated

-- | Create a value of <a>ClientAuthentication</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sasl:ClientAuthentication'</a>,
--   <a>clientAuthentication_sasl</a> - Details for ClientAuthentication
--   using SASL.
--   
--   <a>$sel:tls:ClientAuthentication'</a>, <a>clientAuthentication_tls</a>
--   - Details for ClientAuthentication using TLS.
--   
--   <a>$sel:unauthenticated:ClientAuthentication'</a>,
--   <a>clientAuthentication_unauthenticated</a> - Contains information
--   about unauthenticated traffic to the cluster.
newClientAuthentication :: ClientAuthentication

-- | Details for ClientAuthentication using SASL.
clientAuthentication_sasl :: Lens' ClientAuthentication (Maybe Sasl)

-- | Details for ClientAuthentication using TLS.
clientAuthentication_tls :: Lens' ClientAuthentication (Maybe Tls)

-- | Contains information about unauthenticated traffic to the cluster.
clientAuthentication_unauthenticated :: Lens' ClientAuthentication (Maybe Unauthenticated)
instance GHC.Generics.Generic Amazonka.Kafka.Types.ClientAuthentication.ClientAuthentication
instance GHC.Show.Show Amazonka.Kafka.Types.ClientAuthentication.ClientAuthentication
instance GHC.Read.Read Amazonka.Kafka.Types.ClientAuthentication.ClientAuthentication
instance GHC.Classes.Eq Amazonka.Kafka.Types.ClientAuthentication.ClientAuthentication
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Kafka.Types.ClientAuthentication.ClientAuthentication
instance Data.Hashable.Class.Hashable Amazonka.Kafka.Types.ClientAuthentication.ClientAuthentication
instance Control.DeepSeq.NFData Amazonka.Kafka.Types.ClientAuthentication.ClientAuthentication
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Kafka.Types.ClientAuthentication.ClientAuthentication


module Amazonka.Kafka.Types.MutableClusterInfo

-- | Information about cluster attributes that can be updated via update
--   APIs.
--   
--   <i>See:</i> <a>newMutableClusterInfo</a> smart constructor.
data MutableClusterInfo
MutableClusterInfo' :: Maybe Int -> Maybe EnhancedMonitoring -> Maybe OpenMonitoring -> Maybe ConfigurationInfo -> Maybe Text -> Maybe Text -> Maybe LoggingInfo -> Maybe ClientAuthentication -> Maybe [BrokerEBSVolumeInfo] -> Maybe EncryptionInfo -> MutableClusterInfo

-- | The number of broker nodes in the cluster.
[$sel:numberOfBrokerNodes:MutableClusterInfo'] :: MutableClusterInfo -> Maybe Int

-- | Specifies which Apache Kafka metrics Amazon MSK gathers and sends to
--   Amazon CloudWatch for this cluster.
[$sel:enhancedMonitoring:MutableClusterInfo'] :: MutableClusterInfo -> Maybe EnhancedMonitoring

-- | The settings for open monitoring.
[$sel:openMonitoring:MutableClusterInfo'] :: MutableClusterInfo -> Maybe OpenMonitoring

-- | Information about the changes in the configuration of the brokers.
[$sel:configurationInfo:MutableClusterInfo'] :: MutableClusterInfo -> Maybe ConfigurationInfo

-- | Information about the Amazon MSK broker type.
[$sel:instanceType:MutableClusterInfo'] :: MutableClusterInfo -> Maybe Text

-- | The Kafka version.
[$sel:kafkaVersion:MutableClusterInfo'] :: MutableClusterInfo -> Maybe Text

-- | You can configure your MSK cluster to send broker logs to different
--   destination types. This is a container for the configuration details
--   related to broker logs.
[$sel:loggingInfo:MutableClusterInfo'] :: MutableClusterInfo -> Maybe LoggingInfo

-- | Includes all client authentication information.
[$sel:clientAuthentication:MutableClusterInfo'] :: MutableClusterInfo -> Maybe ClientAuthentication

-- | Specifies the size of the EBS volume and the ID of the associated
--   broker.
[$sel:brokerEBSVolumeInfo:MutableClusterInfo'] :: MutableClusterInfo -> Maybe [BrokerEBSVolumeInfo]

-- | Includes all encryption-related information.
[$sel:encryptionInfo:MutableClusterInfo'] :: MutableClusterInfo -> Maybe EncryptionInfo

-- | Create a value of <a>MutableClusterInfo</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:numberOfBrokerNodes:MutableClusterInfo'</a>,
--   <a>mutableClusterInfo_numberOfBrokerNodes</a> - The number of broker
--   nodes in the cluster.
--   
--   <a>$sel:enhancedMonitoring:MutableClusterInfo'</a>,
--   <a>mutableClusterInfo_enhancedMonitoring</a> - Specifies which Apache
--   Kafka metrics Amazon MSK gathers and sends to Amazon CloudWatch for
--   this cluster.
--   
--   <a>$sel:openMonitoring:MutableClusterInfo'</a>,
--   <a>mutableClusterInfo_openMonitoring</a> - The settings for open
--   monitoring.
--   
--   <a>$sel:configurationInfo:MutableClusterInfo'</a>,
--   <a>mutableClusterInfo_configurationInfo</a> - Information about the
--   changes in the configuration of the brokers.
--   
--   <a>$sel:instanceType:MutableClusterInfo'</a>,
--   <a>mutableClusterInfo_instanceType</a> - Information about the Amazon
--   MSK broker type.
--   
--   <a>$sel:kafkaVersion:MutableClusterInfo'</a>,
--   <a>mutableClusterInfo_kafkaVersion</a> - The Kafka version.
--   
--   <a>$sel:loggingInfo:MutableClusterInfo'</a>,
--   <a>mutableClusterInfo_loggingInfo</a> - You can configure your MSK
--   cluster to send broker logs to different destination types. This is a
--   container for the configuration details related to broker logs.
--   
--   <a>$sel:clientAuthentication:MutableClusterInfo'</a>,
--   <a>mutableClusterInfo_clientAuthentication</a> - Includes all client
--   authentication information.
--   
--   <a>$sel:brokerEBSVolumeInfo:MutableClusterInfo'</a>,
--   <a>mutableClusterInfo_brokerEBSVolumeInfo</a> - Specifies the size of
--   the EBS volume and the ID of the associated broker.
--   
--   <a>$sel:encryptionInfo:MutableClusterInfo'</a>,
--   <a>mutableClusterInfo_encryptionInfo</a> - Includes all
--   encryption-related information.
newMutableClusterInfo :: MutableClusterInfo

-- | The number of broker nodes in the cluster.
mutableClusterInfo_numberOfBrokerNodes :: Lens' MutableClusterInfo (Maybe Int)

-- | Specifies which Apache Kafka metrics Amazon MSK gathers and sends to
--   Amazon CloudWatch for this cluster.
mutableClusterInfo_enhancedMonitoring :: Lens' MutableClusterInfo (Maybe EnhancedMonitoring)

-- | The settings for open monitoring.
mutableClusterInfo_openMonitoring :: Lens' MutableClusterInfo (Maybe OpenMonitoring)

-- | Information about the changes in the configuration of the brokers.
mutableClusterInfo_configurationInfo :: Lens' MutableClusterInfo (Maybe ConfigurationInfo)

-- | Information about the Amazon MSK broker type.
mutableClusterInfo_instanceType :: Lens' MutableClusterInfo (Maybe Text)

-- | The Kafka version.
mutableClusterInfo_kafkaVersion :: Lens' MutableClusterInfo (Maybe Text)

-- | You can configure your MSK cluster to send broker logs to different
--   destination types. This is a container for the configuration details
--   related to broker logs.
mutableClusterInfo_loggingInfo :: Lens' MutableClusterInfo (Maybe LoggingInfo)

-- | Includes all client authentication information.
mutableClusterInfo_clientAuthentication :: Lens' MutableClusterInfo (Maybe ClientAuthentication)

-- | Specifies the size of the EBS volume and the ID of the associated
--   broker.
mutableClusterInfo_brokerEBSVolumeInfo :: Lens' MutableClusterInfo (Maybe [BrokerEBSVolumeInfo])

-- | Includes all encryption-related information.
mutableClusterInfo_encryptionInfo :: Lens' MutableClusterInfo (Maybe EncryptionInfo)
instance GHC.Generics.Generic Amazonka.Kafka.Types.MutableClusterInfo.MutableClusterInfo
instance GHC.Show.Show Amazonka.Kafka.Types.MutableClusterInfo.MutableClusterInfo
instance GHC.Read.Read Amazonka.Kafka.Types.MutableClusterInfo.MutableClusterInfo
instance GHC.Classes.Eq Amazonka.Kafka.Types.MutableClusterInfo.MutableClusterInfo
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Kafka.Types.MutableClusterInfo.MutableClusterInfo
instance Data.Hashable.Class.Hashable Amazonka.Kafka.Types.MutableClusterInfo.MutableClusterInfo
instance Control.DeepSeq.NFData Amazonka.Kafka.Types.MutableClusterInfo.MutableClusterInfo


module Amazonka.Kafka.Types.ClusterOperationInfo

-- | Returns information about a cluster operation.
--   
--   <i>See:</i> <a>newClusterOperationInfo</a> smart constructor.
data ClusterOperationInfo
ClusterOperationInfo' :: Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe MutableClusterInfo -> Maybe MutableClusterInfo -> Maybe [ClusterOperationStep] -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe ErrorInfo -> ClusterOperationInfo

-- | The time that the operation was created.
[$sel:creationTime:ClusterOperationInfo'] :: ClusterOperationInfo -> Maybe POSIX

-- | ARN of the cluster.
[$sel:clusterArn:ClusterOperationInfo'] :: ClusterOperationInfo -> Maybe Text

-- | The ID of the API request that triggered this operation.
[$sel:clientRequestId:ClusterOperationInfo'] :: ClusterOperationInfo -> Maybe Text

-- | Information about cluster attributes after a cluster is updated.
[$sel:targetClusterInfo:ClusterOperationInfo'] :: ClusterOperationInfo -> Maybe MutableClusterInfo

-- | Information about cluster attributes before a cluster is updated.
[$sel:sourceClusterInfo:ClusterOperationInfo'] :: ClusterOperationInfo -> Maybe MutableClusterInfo

-- | Steps completed during the operation.
[$sel:operationSteps:ClusterOperationInfo'] :: ClusterOperationInfo -> Maybe [ClusterOperationStep]

-- | State of the cluster operation.
[$sel:operationState:ClusterOperationInfo'] :: ClusterOperationInfo -> Maybe Text

-- | The time at which the operation finished.
[$sel:endTime:ClusterOperationInfo'] :: ClusterOperationInfo -> Maybe POSIX

-- | Type of the cluster operation.
[$sel:operationType:ClusterOperationInfo'] :: ClusterOperationInfo -> Maybe Text

-- | ARN of the cluster operation.
[$sel:operationArn:ClusterOperationInfo'] :: ClusterOperationInfo -> Maybe Text

-- | Describes the error if the operation fails.
[$sel:errorInfo:ClusterOperationInfo'] :: ClusterOperationInfo -> Maybe ErrorInfo

-- | Create a value of <a>ClusterOperationInfo</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:ClusterOperationInfo'</a>,
--   <a>clusterOperationInfo_creationTime</a> - The time that the operation
--   was created.
--   
--   <a>$sel:clusterArn:ClusterOperationInfo'</a>,
--   <a>clusterOperationInfo_clusterArn</a> - ARN of the cluster.
--   
--   <a>$sel:clientRequestId:ClusterOperationInfo'</a>,
--   <a>clusterOperationInfo_clientRequestId</a> - The ID of the API
--   request that triggered this operation.
--   
--   <a>$sel:targetClusterInfo:ClusterOperationInfo'</a>,
--   <a>clusterOperationInfo_targetClusterInfo</a> - Information about
--   cluster attributes after a cluster is updated.
--   
--   <a>$sel:sourceClusterInfo:ClusterOperationInfo'</a>,
--   <a>clusterOperationInfo_sourceClusterInfo</a> - Information about
--   cluster attributes before a cluster is updated.
--   
--   <a>$sel:operationSteps:ClusterOperationInfo'</a>,
--   <a>clusterOperationInfo_operationSteps</a> - Steps completed during
--   the operation.
--   
--   <a>$sel:operationState:ClusterOperationInfo'</a>,
--   <a>clusterOperationInfo_operationState</a> - State of the cluster
--   operation.
--   
--   <a>$sel:endTime:ClusterOperationInfo'</a>,
--   <a>clusterOperationInfo_endTime</a> - The time at which the operation
--   finished.
--   
--   <a>$sel:operationType:ClusterOperationInfo'</a>,
--   <a>clusterOperationInfo_operationType</a> - Type of the cluster
--   operation.
--   
--   <a>$sel:operationArn:ClusterOperationInfo'</a>,
--   <a>clusterOperationInfo_operationArn</a> - ARN of the cluster
--   operation.
--   
--   <a>$sel:errorInfo:ClusterOperationInfo'</a>,
--   <a>clusterOperationInfo_errorInfo</a> - Describes the error if the
--   operation fails.
newClusterOperationInfo :: ClusterOperationInfo

-- | The time that the operation was created.
clusterOperationInfo_creationTime :: Lens' ClusterOperationInfo (Maybe UTCTime)

-- | ARN of the cluster.
clusterOperationInfo_clusterArn :: Lens' ClusterOperationInfo (Maybe Text)

-- | The ID of the API request that triggered this operation.
clusterOperationInfo_clientRequestId :: Lens' ClusterOperationInfo (Maybe Text)

-- | Information about cluster attributes after a cluster is updated.
clusterOperationInfo_targetClusterInfo :: Lens' ClusterOperationInfo (Maybe MutableClusterInfo)

-- | Information about cluster attributes before a cluster is updated.
clusterOperationInfo_sourceClusterInfo :: Lens' ClusterOperationInfo (Maybe MutableClusterInfo)

-- | Steps completed during the operation.
clusterOperationInfo_operationSteps :: Lens' ClusterOperationInfo (Maybe [ClusterOperationStep])

-- | State of the cluster operation.
clusterOperationInfo_operationState :: Lens' ClusterOperationInfo (Maybe Text)

-- | The time at which the operation finished.
clusterOperationInfo_endTime :: Lens' ClusterOperationInfo (Maybe UTCTime)

-- | Type of the cluster operation.
clusterOperationInfo_operationType :: Lens' ClusterOperationInfo (Maybe Text)

-- | ARN of the cluster operation.
clusterOperationInfo_operationArn :: Lens' ClusterOperationInfo (Maybe Text)

-- | Describes the error if the operation fails.
clusterOperationInfo_errorInfo :: Lens' ClusterOperationInfo (Maybe ErrorInfo)
instance GHC.Generics.Generic Amazonka.Kafka.Types.ClusterOperationInfo.ClusterOperationInfo
instance GHC.Show.Show Amazonka.Kafka.Types.ClusterOperationInfo.ClusterOperationInfo
instance GHC.Read.Read Amazonka.Kafka.Types.ClusterOperationInfo.ClusterOperationInfo
instance GHC.Classes.Eq Amazonka.Kafka.Types.ClusterOperationInfo.ClusterOperationInfo
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Kafka.Types.ClusterOperationInfo.ClusterOperationInfo
instance Data.Hashable.Class.Hashable Amazonka.Kafka.Types.ClusterOperationInfo.ClusterOperationInfo
instance Control.DeepSeq.NFData Amazonka.Kafka.Types.ClusterOperationInfo.ClusterOperationInfo


module Amazonka.Kafka.Types.ClusterInfo

-- | Returns information about a cluster.
--   
--   <i>See:</i> <a>newClusterInfo</a> smart constructor.
data ClusterInfo
ClusterInfo' :: Maybe POSIX -> Maybe Text -> Maybe ClusterState -> Maybe Text -> Maybe Int -> Maybe EnhancedMonitoring -> Maybe BrokerNodeGroupInfo -> Maybe OpenMonitoring -> Maybe BrokerSoftwareInfo -> Maybe Text -> Maybe StateInfo -> Maybe LoggingInfo -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe ClientAuthentication -> Maybe (HashMap Text Text) -> Maybe EncryptionInfo -> ClusterInfo

-- | The time when the cluster was created.
[$sel:creationTime:ClusterInfo'] :: ClusterInfo -> Maybe POSIX

-- | Arn of active cluster operation.
[$sel:activeOperationArn:ClusterInfo'] :: ClusterInfo -> Maybe Text

-- | The state of the cluster. The possible states are ACTIVE, CREATING,
--   DELETING, FAILED, HEALING, MAINTENANCE, REBOOTING_BROKER, and
--   UPDATING.
[$sel:state:ClusterInfo'] :: ClusterInfo -> Maybe ClusterState

-- | The Amazon Resource Name (ARN) that uniquely identifies the cluster.
[$sel:clusterArn:ClusterInfo'] :: ClusterInfo -> Maybe Text

-- | The number of broker nodes in the cluster.
[$sel:numberOfBrokerNodes:ClusterInfo'] :: ClusterInfo -> Maybe Int

-- | Specifies which metrics are gathered for the MSK cluster. This
--   property has the following possible values: DEFAULT, PER_BROKER,
--   PER_TOPIC_PER_BROKER, and PER_TOPIC_PER_PARTITION. For a list of the
--   metrics associated with each of these levels of monitoring, see
--   <a>Monitoring</a>.
[$sel:enhancedMonitoring:ClusterInfo'] :: ClusterInfo -> Maybe EnhancedMonitoring

-- | Information about the broker nodes.
[$sel:brokerNodeGroupInfo:ClusterInfo'] :: ClusterInfo -> Maybe BrokerNodeGroupInfo

-- | Settings for open monitoring using Prometheus.
[$sel:openMonitoring:ClusterInfo'] :: ClusterInfo -> Maybe OpenMonitoring

-- | Information about the version of software currently deployed on the
--   Kafka brokers in the cluster.
[$sel:currentBrokerSoftwareInfo:ClusterInfo'] :: ClusterInfo -> Maybe BrokerSoftwareInfo

-- | The current version of the MSK cluster.
[$sel:currentVersion:ClusterInfo'] :: ClusterInfo -> Maybe Text
[$sel:stateInfo:ClusterInfo'] :: ClusterInfo -> Maybe StateInfo
[$sel:loggingInfo:ClusterInfo'] :: ClusterInfo -> Maybe LoggingInfo

-- | The connection string to use to connect to the Apache ZooKeeper
--   cluster.
[$sel:zookeeperConnectString:ClusterInfo'] :: ClusterInfo -> Maybe Text

-- | The name of the cluster.
[$sel:clusterName:ClusterInfo'] :: ClusterInfo -> Maybe Text

-- | The connection string to use to connect to zookeeper cluster on Tls
--   port.
[$sel:zookeeperConnectStringTls:ClusterInfo'] :: ClusterInfo -> Maybe Text

-- | Includes all client authentication information.
[$sel:clientAuthentication:ClusterInfo'] :: ClusterInfo -> Maybe ClientAuthentication

-- | Tags attached to the cluster.
[$sel:tags:ClusterInfo'] :: ClusterInfo -> Maybe (HashMap Text Text)

-- | Includes all encryption-related information.
[$sel:encryptionInfo:ClusterInfo'] :: ClusterInfo -> Maybe EncryptionInfo

-- | Create a value of <a>ClusterInfo</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:ClusterInfo'</a>, <a>clusterInfo_creationTime</a>
--   - The time when the cluster was created.
--   
--   <a>$sel:activeOperationArn:ClusterInfo'</a>,
--   <a>clusterInfo_activeOperationArn</a> - Arn of active cluster
--   operation.
--   
--   <a>$sel:state:ClusterInfo'</a>, <a>clusterInfo_state</a> - The state
--   of the cluster. The possible states are ACTIVE, CREATING, DELETING,
--   FAILED, HEALING, MAINTENANCE, REBOOTING_BROKER, and UPDATING.
--   
--   <a>$sel:clusterArn:ClusterInfo'</a>, <a>clusterInfo_clusterArn</a> -
--   The Amazon Resource Name (ARN) that uniquely identifies the cluster.
--   
--   <a>$sel:numberOfBrokerNodes:ClusterInfo'</a>,
--   <a>clusterInfo_numberOfBrokerNodes</a> - The number of broker nodes in
--   the cluster.
--   
--   <a>$sel:enhancedMonitoring:ClusterInfo'</a>,
--   <a>clusterInfo_enhancedMonitoring</a> - Specifies which metrics are
--   gathered for the MSK cluster. This property has the following possible
--   values: DEFAULT, PER_BROKER, PER_TOPIC_PER_BROKER, and
--   PER_TOPIC_PER_PARTITION. For a list of the metrics associated with
--   each of these levels of monitoring, see <a>Monitoring</a>.
--   
--   <a>$sel:brokerNodeGroupInfo:ClusterInfo'</a>,
--   <a>clusterInfo_brokerNodeGroupInfo</a> - Information about the broker
--   nodes.
--   
--   <a>$sel:openMonitoring:ClusterInfo'</a>,
--   <a>clusterInfo_openMonitoring</a> - Settings for open monitoring using
--   Prometheus.
--   
--   <a>$sel:currentBrokerSoftwareInfo:ClusterInfo'</a>,
--   <a>clusterInfo_currentBrokerSoftwareInfo</a> - Information about the
--   version of software currently deployed on the Kafka brokers in the
--   cluster.
--   
--   <a>$sel:currentVersion:ClusterInfo'</a>,
--   <a>clusterInfo_currentVersion</a> - The current version of the MSK
--   cluster.
--   
--   <a>$sel:stateInfo:ClusterInfo'</a>, <a>clusterInfo_stateInfo</a> -
--   Undocumented member.
--   
--   <a>$sel:loggingInfo:ClusterInfo'</a>, <a>clusterInfo_loggingInfo</a> -
--   Undocumented member.
--   
--   <a>$sel:zookeeperConnectString:ClusterInfo'</a>,
--   <a>clusterInfo_zookeeperConnectString</a> - The connection string to
--   use to connect to the Apache ZooKeeper cluster.
--   
--   <a>$sel:clusterName:ClusterInfo'</a>, <a>clusterInfo_clusterName</a> -
--   The name of the cluster.
--   
--   <a>$sel:zookeeperConnectStringTls:ClusterInfo'</a>,
--   <a>clusterInfo_zookeeperConnectStringTls</a> - The connection string
--   to use to connect to zookeeper cluster on Tls port.
--   
--   <a>$sel:clientAuthentication:ClusterInfo'</a>,
--   <a>clusterInfo_clientAuthentication</a> - Includes all client
--   authentication information.
--   
--   <a>$sel:tags:ClusterInfo'</a>, <a>clusterInfo_tags</a> - Tags attached
--   to the cluster.
--   
--   <a>$sel:encryptionInfo:ClusterInfo'</a>,
--   <a>clusterInfo_encryptionInfo</a> - Includes all encryption-related
--   information.
newClusterInfo :: ClusterInfo

-- | The time when the cluster was created.
clusterInfo_creationTime :: Lens' ClusterInfo (Maybe UTCTime)

-- | Arn of active cluster operation.
clusterInfo_activeOperationArn :: Lens' ClusterInfo (Maybe Text)

-- | The state of the cluster. The possible states are ACTIVE, CREATING,
--   DELETING, FAILED, HEALING, MAINTENANCE, REBOOTING_BROKER, and
--   UPDATING.
clusterInfo_state :: Lens' ClusterInfo (Maybe ClusterState)

-- | The Amazon Resource Name (ARN) that uniquely identifies the cluster.
clusterInfo_clusterArn :: Lens' ClusterInfo (Maybe Text)

-- | The number of broker nodes in the cluster.
clusterInfo_numberOfBrokerNodes :: Lens' ClusterInfo (Maybe Int)

-- | Specifies which metrics are gathered for the MSK cluster. This
--   property has the following possible values: DEFAULT, PER_BROKER,
--   PER_TOPIC_PER_BROKER, and PER_TOPIC_PER_PARTITION. For a list of the
--   metrics associated with each of these levels of monitoring, see
--   <a>Monitoring</a>.
clusterInfo_enhancedMonitoring :: Lens' ClusterInfo (Maybe EnhancedMonitoring)

-- | Information about the broker nodes.
clusterInfo_brokerNodeGroupInfo :: Lens' ClusterInfo (Maybe BrokerNodeGroupInfo)

-- | Settings for open monitoring using Prometheus.
clusterInfo_openMonitoring :: Lens' ClusterInfo (Maybe OpenMonitoring)

-- | Information about the version of software currently deployed on the
--   Kafka brokers in the cluster.
clusterInfo_currentBrokerSoftwareInfo :: Lens' ClusterInfo (Maybe BrokerSoftwareInfo)

-- | The current version of the MSK cluster.
clusterInfo_currentVersion :: Lens' ClusterInfo (Maybe Text)

-- | Undocumented member.
clusterInfo_stateInfo :: Lens' ClusterInfo (Maybe StateInfo)

-- | Undocumented member.
clusterInfo_loggingInfo :: Lens' ClusterInfo (Maybe LoggingInfo)

-- | The connection string to use to connect to the Apache ZooKeeper
--   cluster.
clusterInfo_zookeeperConnectString :: Lens' ClusterInfo (Maybe Text)

-- | The name of the cluster.
clusterInfo_clusterName :: Lens' ClusterInfo (Maybe Text)

-- | The connection string to use to connect to zookeeper cluster on Tls
--   port.
clusterInfo_zookeeperConnectStringTls :: Lens' ClusterInfo (Maybe Text)

-- | Includes all client authentication information.
clusterInfo_clientAuthentication :: Lens' ClusterInfo (Maybe ClientAuthentication)

-- | Tags attached to the cluster.
clusterInfo_tags :: Lens' ClusterInfo (Maybe (HashMap Text Text))

-- | Includes all encryption-related information.
clusterInfo_encryptionInfo :: Lens' ClusterInfo (Maybe EncryptionInfo)
instance GHC.Generics.Generic Amazonka.Kafka.Types.ClusterInfo.ClusterInfo
instance GHC.Show.Show Amazonka.Kafka.Types.ClusterInfo.ClusterInfo
instance GHC.Read.Read Amazonka.Kafka.Types.ClusterInfo.ClusterInfo
instance GHC.Classes.Eq Amazonka.Kafka.Types.ClusterInfo.ClusterInfo
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Kafka.Types.ClusterInfo.ClusterInfo
instance Data.Hashable.Class.Hashable Amazonka.Kafka.Types.ClusterInfo.ClusterInfo
instance Control.DeepSeq.NFData Amazonka.Kafka.Types.ClusterInfo.ClusterInfo


module Amazonka.Kafka.Types.UnprocessedScramSecret

-- | Error info for scram secret associate/disassociate failure.
--   
--   <i>See:</i> <a>newUnprocessedScramSecret</a> smart constructor.
data UnprocessedScramSecret
UnprocessedScramSecret' :: Maybe Text -> Maybe Text -> Maybe Text -> UnprocessedScramSecret

-- | Error code for associate/disassociate failure.
[$sel:errorCode:UnprocessedScramSecret'] :: UnprocessedScramSecret -> Maybe Text

-- | Error message for associate/disassociate failure.
[$sel:errorMessage:UnprocessedScramSecret'] :: UnprocessedScramSecret -> Maybe Text

-- | AWS Secrets Manager secret ARN.
[$sel:secretArn:UnprocessedScramSecret'] :: UnprocessedScramSecret -> Maybe Text

-- | Create a value of <a>UnprocessedScramSecret</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:errorCode:UnprocessedScramSecret'</a>,
--   <a>unprocessedScramSecret_errorCode</a> - Error code for
--   associate/disassociate failure.
--   
--   <a>$sel:errorMessage:UnprocessedScramSecret'</a>,
--   <a>unprocessedScramSecret_errorMessage</a> - Error message for
--   associate/disassociate failure.
--   
--   <a>$sel:secretArn:UnprocessedScramSecret'</a>,
--   <a>unprocessedScramSecret_secretArn</a> - AWS Secrets Manager secret
--   ARN.
newUnprocessedScramSecret :: UnprocessedScramSecret

-- | Error code for associate/disassociate failure.
unprocessedScramSecret_errorCode :: Lens' UnprocessedScramSecret (Maybe Text)

-- | Error message for associate/disassociate failure.
unprocessedScramSecret_errorMessage :: Lens' UnprocessedScramSecret (Maybe Text)

-- | AWS Secrets Manager secret ARN.
unprocessedScramSecret_secretArn :: Lens' UnprocessedScramSecret (Maybe Text)
instance GHC.Generics.Generic Amazonka.Kafka.Types.UnprocessedScramSecret.UnprocessedScramSecret
instance GHC.Show.Show Amazonka.Kafka.Types.UnprocessedScramSecret.UnprocessedScramSecret
instance GHC.Read.Read Amazonka.Kafka.Types.UnprocessedScramSecret.UnprocessedScramSecret
instance GHC.Classes.Eq Amazonka.Kafka.Types.UnprocessedScramSecret.UnprocessedScramSecret
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Kafka.Types.UnprocessedScramSecret.UnprocessedScramSecret
instance Data.Hashable.Class.Hashable Amazonka.Kafka.Types.UnprocessedScramSecret.UnprocessedScramSecret
instance Control.DeepSeq.NFData Amazonka.Kafka.Types.UnprocessedScramSecret.UnprocessedScramSecret


module Amazonka.Kafka.Types.ZookeeperNodeInfo

-- | Zookeeper node information.
--   
--   <i>See:</i> <a>newZookeeperNodeInfo</a> smart constructor.
data ZookeeperNodeInfo
ZookeeperNodeInfo' :: Maybe Text -> Maybe Text -> Maybe [Text] -> Maybe Text -> Maybe Double -> ZookeeperNodeInfo

-- | The version of Zookeeper.
[$sel:zookeeperVersion:ZookeeperNodeInfo'] :: ZookeeperNodeInfo -> Maybe Text

-- | The attached elastic network interface of the broker.
[$sel:attachedENIId:ZookeeperNodeInfo'] :: ZookeeperNodeInfo -> Maybe Text

-- | Endpoints for accessing the ZooKeeper.
[$sel:endpoints:ZookeeperNodeInfo'] :: ZookeeperNodeInfo -> Maybe [Text]

-- | The virtual private cloud (VPC) IP address of the client.
[$sel:clientVpcIpAddress:ZookeeperNodeInfo'] :: ZookeeperNodeInfo -> Maybe Text

-- | The role-specific ID for Zookeeper.
[$sel:zookeeperId:ZookeeperNodeInfo'] :: ZookeeperNodeInfo -> Maybe Double

-- | Create a value of <a>ZookeeperNodeInfo</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:zookeeperVersion:ZookeeperNodeInfo'</a>,
--   <a>zookeeperNodeInfo_zookeeperVersion</a> - The version of Zookeeper.
--   
--   <a>$sel:attachedENIId:ZookeeperNodeInfo'</a>,
--   <a>zookeeperNodeInfo_attachedENIId</a> - The attached elastic network
--   interface of the broker.
--   
--   <a>$sel:endpoints:ZookeeperNodeInfo'</a>,
--   <a>zookeeperNodeInfo_endpoints</a> - Endpoints for accessing the
--   ZooKeeper.
--   
--   <a>$sel:clientVpcIpAddress:ZookeeperNodeInfo'</a>,
--   <a>zookeeperNodeInfo_clientVpcIpAddress</a> - The virtual private
--   cloud (VPC) IP address of the client.
--   
--   <a>$sel:zookeeperId:ZookeeperNodeInfo'</a>,
--   <a>zookeeperNodeInfo_zookeeperId</a> - The role-specific ID for
--   Zookeeper.
newZookeeperNodeInfo :: ZookeeperNodeInfo

-- | The version of Zookeeper.
zookeeperNodeInfo_zookeeperVersion :: Lens' ZookeeperNodeInfo (Maybe Text)

-- | The attached elastic network interface of the broker.
zookeeperNodeInfo_attachedENIId :: Lens' ZookeeperNodeInfo (Maybe Text)

-- | Endpoints for accessing the ZooKeeper.
zookeeperNodeInfo_endpoints :: Lens' ZookeeperNodeInfo (Maybe [Text])

-- | The virtual private cloud (VPC) IP address of the client.
zookeeperNodeInfo_clientVpcIpAddress :: Lens' ZookeeperNodeInfo (Maybe Text)

-- | The role-specific ID for Zookeeper.
zookeeperNodeInfo_zookeeperId :: Lens' ZookeeperNodeInfo (Maybe Double)
instance GHC.Generics.Generic Amazonka.Kafka.Types.ZookeeperNodeInfo.ZookeeperNodeInfo
instance GHC.Show.Show Amazonka.Kafka.Types.ZookeeperNodeInfo.ZookeeperNodeInfo
instance GHC.Read.Read Amazonka.Kafka.Types.ZookeeperNodeInfo.ZookeeperNodeInfo
instance GHC.Classes.Eq Amazonka.Kafka.Types.ZookeeperNodeInfo.ZookeeperNodeInfo
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Kafka.Types.ZookeeperNodeInfo.ZookeeperNodeInfo
instance Data.Hashable.Class.Hashable Amazonka.Kafka.Types.ZookeeperNodeInfo.ZookeeperNodeInfo
instance Control.DeepSeq.NFData Amazonka.Kafka.Types.ZookeeperNodeInfo.ZookeeperNodeInfo


module Amazonka.Kafka.Types.NodeInfo

-- | The node information object.
--   
--   <i>See:</i> <a>newNodeInfo</a> smart constructor.
data NodeInfo
NodeInfo' :: Maybe Text -> Maybe Text -> Maybe ZookeeperNodeInfo -> Maybe Text -> Maybe BrokerNodeInfo -> Maybe NodeType -> NodeInfo

-- | The start time.
[$sel:addedToClusterTime:NodeInfo'] :: NodeInfo -> Maybe Text

-- | The Amazon Resource Name (ARN) of the node.
[$sel:nodeARN:NodeInfo'] :: NodeInfo -> Maybe Text

-- | The ZookeeperNodeInfo.
[$sel:zookeeperNodeInfo:NodeInfo'] :: NodeInfo -> Maybe ZookeeperNodeInfo

-- | The instance type.
[$sel:instanceType:NodeInfo'] :: NodeInfo -> Maybe Text

-- | The broker node info.
[$sel:brokerNodeInfo:NodeInfo'] :: NodeInfo -> Maybe BrokerNodeInfo

-- | The node type.
[$sel:nodeType:NodeInfo'] :: NodeInfo -> Maybe NodeType

-- | Create a value of <a>NodeInfo</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:addedToClusterTime:NodeInfo'</a>,
--   <a>nodeInfo_addedToClusterTime</a> - The start time.
--   
--   <a>$sel:nodeARN:NodeInfo'</a>, <a>nodeInfo_nodeARN</a> - The Amazon
--   Resource Name (ARN) of the node.
--   
--   <a>$sel:zookeeperNodeInfo:NodeInfo'</a>,
--   <a>nodeInfo_zookeeperNodeInfo</a> - The ZookeeperNodeInfo.
--   
--   <a>$sel:instanceType:NodeInfo'</a>, <a>nodeInfo_instanceType</a> - The
--   instance type.
--   
--   <a>$sel:brokerNodeInfo:NodeInfo'</a>, <a>nodeInfo_brokerNodeInfo</a> -
--   The broker node info.
--   
--   <a>$sel:nodeType:NodeInfo'</a>, <a>nodeInfo_nodeType</a> - The node
--   type.
newNodeInfo :: NodeInfo

-- | The start time.
nodeInfo_addedToClusterTime :: Lens' NodeInfo (Maybe Text)

-- | The Amazon Resource Name (ARN) of the node.
nodeInfo_nodeARN :: Lens' NodeInfo (Maybe Text)

-- | The ZookeeperNodeInfo.
nodeInfo_zookeeperNodeInfo :: Lens' NodeInfo (Maybe ZookeeperNodeInfo)

-- | The instance type.
nodeInfo_instanceType :: Lens' NodeInfo (Maybe Text)

-- | The broker node info.
nodeInfo_brokerNodeInfo :: Lens' NodeInfo (Maybe BrokerNodeInfo)

-- | The node type.
nodeInfo_nodeType :: Lens' NodeInfo (Maybe NodeType)
instance GHC.Generics.Generic Amazonka.Kafka.Types.NodeInfo.NodeInfo
instance GHC.Show.Show Amazonka.Kafka.Types.NodeInfo.NodeInfo
instance GHC.Read.Read Amazonka.Kafka.Types.NodeInfo.NodeInfo
instance GHC.Classes.Eq Amazonka.Kafka.Types.NodeInfo.NodeInfo
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Kafka.Types.NodeInfo.NodeInfo
instance Data.Hashable.Class.Hashable Amazonka.Kafka.Types.NodeInfo.NodeInfo
instance Control.DeepSeq.NFData Amazonka.Kafka.Types.NodeInfo.NodeInfo


module Amazonka.Kafka.Types

-- | API version <tt>2018-11-14</tt> of the Amazon Managed Streaming for
--   Kafka SDK configuration.
defaultService :: Service

-- | Returns information about an error.
_ConflictException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Returns information about an error.
_ForbiddenException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Returns information about an error.
_NotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Returns information about an error.
_TooManyRequestsException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Returns information about an error.
_InternalServerErrorException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Returns information about an error.
_ServiceUnavailableException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Returns information about an error.
_UnauthorizedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Returns information about an error.
_BadRequestException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The distribution of broker nodes across Availability Zones. This is an
--   optional parameter. If you don't specify it, Amazon MSK gives it the
--   value DEFAULT. You can also explicitly set this parameter to the value
--   DEFAULT. No other values are currently allowed.
--   
--   Amazon MSK distributes the broker nodes evenly across the Availability
--   Zones that correspond to the subnets you provide when you create the
--   cluster.
newtype BrokerAZDistribution
BrokerAZDistribution' :: Text -> BrokerAZDistribution
[fromBrokerAZDistribution] :: BrokerAZDistribution -> Text
pattern BrokerAZDistribution_DEFAULT :: BrokerAZDistribution

-- | Client-broker encryption in transit setting.
newtype ClientBroker
ClientBroker' :: Text -> ClientBroker
[fromClientBroker] :: ClientBroker -> Text
pattern ClientBroker_PLAINTEXT :: ClientBroker
pattern ClientBroker_TLS :: ClientBroker
pattern ClientBroker_TLS_PLAINTEXT :: ClientBroker

-- | The state of a Kafka cluster.
newtype ClusterState
ClusterState' :: Text -> ClusterState
[fromClusterState] :: ClusterState -> Text
pattern ClusterState_ACTIVE :: ClusterState
pattern ClusterState_CREATING :: ClusterState
pattern ClusterState_DELETING :: ClusterState
pattern ClusterState_FAILED :: ClusterState
pattern ClusterState_HEALING :: ClusterState
pattern ClusterState_MAINTENANCE :: ClusterState
pattern ClusterState_REBOOTING_BROKER :: ClusterState
pattern ClusterState_UPDATING :: ClusterState

-- | The state of a configuration.
newtype ConfigurationState
ConfigurationState' :: Text -> ConfigurationState
[fromConfigurationState] :: ConfigurationState -> Text
pattern ConfigurationState_ACTIVE :: ConfigurationState
pattern ConfigurationState_DELETE_FAILED :: ConfigurationState
pattern ConfigurationState_DELETING :: ConfigurationState

-- | Specifies which metrics are gathered for the MSK cluster. This
--   property has the following possible values: DEFAULT, PER_BROKER,
--   PER_TOPIC_PER_BROKER, and PER_TOPIC_PER_PARTITION. For a list of the
--   metrics associated with each of these levels of monitoring, see
--   <a>Monitoring</a>.
newtype EnhancedMonitoring
EnhancedMonitoring' :: Text -> EnhancedMonitoring
[fromEnhancedMonitoring] :: EnhancedMonitoring -> Text
pattern EnhancedMonitoring_DEFAULT :: EnhancedMonitoring
pattern EnhancedMonitoring_PER_BROKER :: EnhancedMonitoring
pattern EnhancedMonitoring_PER_TOPIC_PER_BROKER :: EnhancedMonitoring
pattern EnhancedMonitoring_PER_TOPIC_PER_PARTITION :: EnhancedMonitoring
newtype KafkaVersionStatus
KafkaVersionStatus' :: Text -> KafkaVersionStatus
[fromKafkaVersionStatus] :: KafkaVersionStatus -> Text
pattern KafkaVersionStatus_ACTIVE :: KafkaVersionStatus
pattern KafkaVersionStatus_DEPRECATED :: KafkaVersionStatus

-- | The broker or Zookeeper node.
newtype NodeType
NodeType' :: Text -> NodeType
[fromNodeType] :: NodeType -> Text
pattern NodeType_BROKER :: NodeType

-- | Specifies the EBS volume upgrade information. The broker identifier
--   must be set to the keyword ALL. This means the changes apply to all
--   the brokers in the cluster.
--   
--   <i>See:</i> <a>newBrokerEBSVolumeInfo</a> smart constructor.
data BrokerEBSVolumeInfo
BrokerEBSVolumeInfo' :: Int -> Text -> BrokerEBSVolumeInfo

-- | Size of the EBS volume to update.
[$sel:volumeSizeGB:BrokerEBSVolumeInfo'] :: BrokerEBSVolumeInfo -> Int

-- | The ID of the broker to update.
[$sel:kafkaBrokerNodeId:BrokerEBSVolumeInfo'] :: BrokerEBSVolumeInfo -> Text

-- | Create a value of <a>BrokerEBSVolumeInfo</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:volumeSizeGB:BrokerEBSVolumeInfo'</a>,
--   <a>brokerEBSVolumeInfo_volumeSizeGB</a> - Size of the EBS volume to
--   update.
--   
--   <a>$sel:kafkaBrokerNodeId:BrokerEBSVolumeInfo'</a>,
--   <a>brokerEBSVolumeInfo_kafkaBrokerNodeId</a> - The ID of the broker to
--   update.
newBrokerEBSVolumeInfo :: Int -> Text -> BrokerEBSVolumeInfo

-- | Size of the EBS volume to update.
brokerEBSVolumeInfo_volumeSizeGB :: Lens' BrokerEBSVolumeInfo Int

-- | The ID of the broker to update.
brokerEBSVolumeInfo_kafkaBrokerNodeId :: Lens' BrokerEBSVolumeInfo Text

-- | <i>See:</i> <a>newBrokerLogs</a> smart constructor.
data BrokerLogs
BrokerLogs' :: Maybe CloudWatchLogs -> Maybe Firehose -> Maybe S3 -> BrokerLogs
[$sel:cloudWatchLogs:BrokerLogs'] :: BrokerLogs -> Maybe CloudWatchLogs
[$sel:firehose:BrokerLogs'] :: BrokerLogs -> Maybe Firehose
[$sel:s3:BrokerLogs'] :: BrokerLogs -> Maybe S3

-- | Create a value of <a>BrokerLogs</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cloudWatchLogs:BrokerLogs'</a>,
--   <a>brokerLogs_cloudWatchLogs</a> - Undocumented member.
--   
--   <a>$sel:firehose:BrokerLogs'</a>, <a>brokerLogs_firehose</a> -
--   Undocumented member.
--   
--   <a>$sel:s3:BrokerLogs'</a>, <a>brokerLogs_s3</a> - Undocumented
--   member.
newBrokerLogs :: BrokerLogs

-- | Undocumented member.
brokerLogs_cloudWatchLogs :: Lens' BrokerLogs (Maybe CloudWatchLogs)

-- | Undocumented member.
brokerLogs_firehose :: Lens' BrokerLogs (Maybe Firehose)

-- | Undocumented member.
brokerLogs_s3 :: Lens' BrokerLogs (Maybe S3)

-- | Describes the setup to be used for Kafka broker nodes in the cluster.
--   
--   <i>See:</i> <a>newBrokerNodeGroupInfo</a> smart constructor.
data BrokerNodeGroupInfo
BrokerNodeGroupInfo' :: Maybe StorageInfo -> Maybe BrokerAZDistribution -> Maybe [Text] -> [Text] -> Text -> BrokerNodeGroupInfo

-- | Contains information about storage volumes attached to MSK broker
--   nodes.
[$sel:storageInfo:BrokerNodeGroupInfo'] :: BrokerNodeGroupInfo -> Maybe StorageInfo

-- | The distribution of broker nodes across Availability Zones. This is an
--   optional parameter. If you don't specify it, Amazon MSK gives it the
--   value DEFAULT. You can also explicitly set this parameter to the value
--   DEFAULT. No other values are currently allowed.
--   
--   Amazon MSK distributes the broker nodes evenly across the Availability
--   Zones that correspond to the subnets you provide when you create the
--   cluster.
[$sel:brokerAZDistribution:BrokerNodeGroupInfo'] :: BrokerNodeGroupInfo -> Maybe BrokerAZDistribution

-- | The AWS security groups to associate with the elastic network
--   interfaces in order to specify who can connect to and communicate with
--   the Amazon MSK cluster. If you don't specify a security group, Amazon
--   MSK uses the default security group associated with the VPC.
[$sel:securityGroups:BrokerNodeGroupInfo'] :: BrokerNodeGroupInfo -> Maybe [Text]

-- | The list of subnets to connect to in the client virtual private cloud
--   (VPC). AWS creates elastic network interfaces inside these subnets.
--   Client applications use elastic network interfaces to produce and
--   consume data. Client subnets can't be in Availability Zone us-east-1e.
[$sel:clientSubnets:BrokerNodeGroupInfo'] :: BrokerNodeGroupInfo -> [Text]

-- | The type of Amazon EC2 instances to use for Kafka brokers. The
--   following instance types are allowed: kafka.m5.large, kafka.m5.xlarge,
--   kafka.m5.2xlarge, kafka.m5.4xlarge, kafka.m5.12xlarge, and
--   kafka.m5.24xlarge.
[$sel:instanceType:BrokerNodeGroupInfo'] :: BrokerNodeGroupInfo -> Text

-- | Create a value of <a>BrokerNodeGroupInfo</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:storageInfo:BrokerNodeGroupInfo'</a>,
--   <a>brokerNodeGroupInfo_storageInfo</a> - Contains information about
--   storage volumes attached to MSK broker nodes.
--   
--   <a>$sel:brokerAZDistribution:BrokerNodeGroupInfo'</a>,
--   <a>brokerNodeGroupInfo_brokerAZDistribution</a> - The distribution of
--   broker nodes across Availability Zones. This is an optional parameter.
--   If you don't specify it, Amazon MSK gives it the value DEFAULT. You
--   can also explicitly set this parameter to the value DEFAULT. No other
--   values are currently allowed.
--   
--   Amazon MSK distributes the broker nodes evenly across the Availability
--   Zones that correspond to the subnets you provide when you create the
--   cluster.
--   
--   <a>$sel:securityGroups:BrokerNodeGroupInfo'</a>,
--   <a>brokerNodeGroupInfo_securityGroups</a> - The AWS security groups to
--   associate with the elastic network interfaces in order to specify who
--   can connect to and communicate with the Amazon MSK cluster. If you
--   don't specify a security group, Amazon MSK uses the default security
--   group associated with the VPC.
--   
--   <a>$sel:clientSubnets:BrokerNodeGroupInfo'</a>,
--   <a>brokerNodeGroupInfo_clientSubnets</a> - The list of subnets to
--   connect to in the client virtual private cloud (VPC). AWS creates
--   elastic network interfaces inside these subnets. Client applications
--   use elastic network interfaces to produce and consume data. Client
--   subnets can't be in Availability Zone us-east-1e.
--   
--   <a>$sel:instanceType:BrokerNodeGroupInfo'</a>,
--   <a>brokerNodeGroupInfo_instanceType</a> - The type of Amazon EC2
--   instances to use for Kafka brokers. The following instance types are
--   allowed: kafka.m5.large, kafka.m5.xlarge, kafka.m5.2xlarge,
--   kafka.m5.4xlarge, kafka.m5.12xlarge, and kafka.m5.24xlarge.
newBrokerNodeGroupInfo :: Text -> BrokerNodeGroupInfo

-- | Contains information about storage volumes attached to MSK broker
--   nodes.
brokerNodeGroupInfo_storageInfo :: Lens' BrokerNodeGroupInfo (Maybe StorageInfo)

-- | The distribution of broker nodes across Availability Zones. This is an
--   optional parameter. If you don't specify it, Amazon MSK gives it the
--   value DEFAULT. You can also explicitly set this parameter to the value
--   DEFAULT. No other values are currently allowed.
--   
--   Amazon MSK distributes the broker nodes evenly across the Availability
--   Zones that correspond to the subnets you provide when you create the
--   cluster.
brokerNodeGroupInfo_brokerAZDistribution :: Lens' BrokerNodeGroupInfo (Maybe BrokerAZDistribution)

-- | The AWS security groups to associate with the elastic network
--   interfaces in order to specify who can connect to and communicate with
--   the Amazon MSK cluster. If you don't specify a security group, Amazon
--   MSK uses the default security group associated with the VPC.
brokerNodeGroupInfo_securityGroups :: Lens' BrokerNodeGroupInfo (Maybe [Text])

-- | The list of subnets to connect to in the client virtual private cloud
--   (VPC). AWS creates elastic network interfaces inside these subnets.
--   Client applications use elastic network interfaces to produce and
--   consume data. Client subnets can't be in Availability Zone us-east-1e.
brokerNodeGroupInfo_clientSubnets :: Lens' BrokerNodeGroupInfo [Text]

-- | The type of Amazon EC2 instances to use for Kafka brokers. The
--   following instance types are allowed: kafka.m5.large, kafka.m5.xlarge,
--   kafka.m5.2xlarge, kafka.m5.4xlarge, kafka.m5.12xlarge, and
--   kafka.m5.24xlarge.
brokerNodeGroupInfo_instanceType :: Lens' BrokerNodeGroupInfo Text

-- | BrokerNodeInfo
--   
--   <i>See:</i> <a>newBrokerNodeInfo</a> smart constructor.
data BrokerNodeInfo
BrokerNodeInfo' :: Maybe BrokerSoftwareInfo -> Maybe Text -> Maybe Text -> Maybe [Text] -> Maybe Text -> Maybe Double -> BrokerNodeInfo

-- | Information about the version of software currently deployed on the
--   Kafka brokers in the cluster.
[$sel:currentBrokerSoftwareInfo:BrokerNodeInfo'] :: BrokerNodeInfo -> Maybe BrokerSoftwareInfo

-- | The client subnet to which this broker node belongs.
[$sel:clientSubnet:BrokerNodeInfo'] :: BrokerNodeInfo -> Maybe Text

-- | The attached elastic network interface of the broker.
[$sel:attachedENIId:BrokerNodeInfo'] :: BrokerNodeInfo -> Maybe Text

-- | Endpoints for accessing the broker.
[$sel:endpoints:BrokerNodeInfo'] :: BrokerNodeInfo -> Maybe [Text]

-- | The virtual private cloud (VPC) of the client.
[$sel:clientVpcIpAddress:BrokerNodeInfo'] :: BrokerNodeInfo -> Maybe Text

-- | The ID of the broker.
[$sel:brokerId:BrokerNodeInfo'] :: BrokerNodeInfo -> Maybe Double

-- | Create a value of <a>BrokerNodeInfo</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:currentBrokerSoftwareInfo:BrokerNodeInfo'</a>,
--   <a>brokerNodeInfo_currentBrokerSoftwareInfo</a> - Information about
--   the version of software currently deployed on the Kafka brokers in the
--   cluster.
--   
--   <a>$sel:clientSubnet:BrokerNodeInfo'</a>,
--   <a>brokerNodeInfo_clientSubnet</a> - The client subnet to which this
--   broker node belongs.
--   
--   <a>$sel:attachedENIId:BrokerNodeInfo'</a>,
--   <a>brokerNodeInfo_attachedENIId</a> - The attached elastic network
--   interface of the broker.
--   
--   <a>$sel:endpoints:BrokerNodeInfo'</a>, <a>brokerNodeInfo_endpoints</a>
--   - Endpoints for accessing the broker.
--   
--   <a>$sel:clientVpcIpAddress:BrokerNodeInfo'</a>,
--   <a>brokerNodeInfo_clientVpcIpAddress</a> - The virtual private cloud
--   (VPC) of the client.
--   
--   <a>$sel:brokerId:BrokerNodeInfo'</a>, <a>brokerNodeInfo_brokerId</a> -
--   The ID of the broker.
newBrokerNodeInfo :: BrokerNodeInfo

-- | Information about the version of software currently deployed on the
--   Kafka brokers in the cluster.
brokerNodeInfo_currentBrokerSoftwareInfo :: Lens' BrokerNodeInfo (Maybe BrokerSoftwareInfo)

-- | The client subnet to which this broker node belongs.
brokerNodeInfo_clientSubnet :: Lens' BrokerNodeInfo (Maybe Text)

-- | The attached elastic network interface of the broker.
brokerNodeInfo_attachedENIId :: Lens' BrokerNodeInfo (Maybe Text)

-- | Endpoints for accessing the broker.
brokerNodeInfo_endpoints :: Lens' BrokerNodeInfo (Maybe [Text])

-- | The virtual private cloud (VPC) of the client.
brokerNodeInfo_clientVpcIpAddress :: Lens' BrokerNodeInfo (Maybe Text)

-- | The ID of the broker.
brokerNodeInfo_brokerId :: Lens' BrokerNodeInfo (Maybe Double)

-- | Information about the current software installed on the cluster.
--   
--   <i>See:</i> <a>newBrokerSoftwareInfo</a> smart constructor.
data BrokerSoftwareInfo
BrokerSoftwareInfo' :: Maybe Integer -> Maybe Text -> Maybe Text -> BrokerSoftwareInfo

-- | The revision of the configuration to use. This field isn't visible in
--   this preview release.
[$sel:configurationRevision:BrokerSoftwareInfo'] :: BrokerSoftwareInfo -> Maybe Integer

-- | The version of Apache Kafka.
[$sel:kafkaVersion:BrokerSoftwareInfo'] :: BrokerSoftwareInfo -> Maybe Text

-- | The Amazon Resource Name (ARN) of the configuration used for the
--   cluster. This field isn't visible in this preview release.
[$sel:configurationArn:BrokerSoftwareInfo'] :: BrokerSoftwareInfo -> Maybe Text

-- | Create a value of <a>BrokerSoftwareInfo</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:configurationRevision:BrokerSoftwareInfo'</a>,
--   <a>brokerSoftwareInfo_configurationRevision</a> - The revision of the
--   configuration to use. This field isn't visible in this preview
--   release.
--   
--   <a>$sel:kafkaVersion:BrokerSoftwareInfo'</a>,
--   <a>brokerSoftwareInfo_kafkaVersion</a> - The version of Apache Kafka.
--   
--   <a>$sel:configurationArn:BrokerSoftwareInfo'</a>,
--   <a>brokerSoftwareInfo_configurationArn</a> - The Amazon Resource Name
--   (ARN) of the configuration used for the cluster. This field isn't
--   visible in this preview release.
newBrokerSoftwareInfo :: BrokerSoftwareInfo

-- | The revision of the configuration to use. This field isn't visible in
--   this preview release.
brokerSoftwareInfo_configurationRevision :: Lens' BrokerSoftwareInfo (Maybe Integer)

-- | The version of Apache Kafka.
brokerSoftwareInfo_kafkaVersion :: Lens' BrokerSoftwareInfo (Maybe Text)

-- | The Amazon Resource Name (ARN) of the configuration used for the
--   cluster. This field isn't visible in this preview release.
brokerSoftwareInfo_configurationArn :: Lens' BrokerSoftwareInfo (Maybe Text)

-- | Includes all client authentication information.
--   
--   <i>See:</i> <a>newClientAuthentication</a> smart constructor.
data ClientAuthentication
ClientAuthentication' :: Maybe Sasl -> Maybe Tls -> Maybe Unauthenticated -> ClientAuthentication

-- | Details for ClientAuthentication using SASL.
[$sel:sasl:ClientAuthentication'] :: ClientAuthentication -> Maybe Sasl

-- | Details for ClientAuthentication using TLS.
[$sel:tls:ClientAuthentication'] :: ClientAuthentication -> Maybe Tls

-- | Contains information about unauthenticated traffic to the cluster.
[$sel:unauthenticated:ClientAuthentication'] :: ClientAuthentication -> Maybe Unauthenticated

-- | Create a value of <a>ClientAuthentication</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sasl:ClientAuthentication'</a>,
--   <a>clientAuthentication_sasl</a> - Details for ClientAuthentication
--   using SASL.
--   
--   <a>$sel:tls:ClientAuthentication'</a>, <a>clientAuthentication_tls</a>
--   - Details for ClientAuthentication using TLS.
--   
--   <a>$sel:unauthenticated:ClientAuthentication'</a>,
--   <a>clientAuthentication_unauthenticated</a> - Contains information
--   about unauthenticated traffic to the cluster.
newClientAuthentication :: ClientAuthentication

-- | Details for ClientAuthentication using SASL.
clientAuthentication_sasl :: Lens' ClientAuthentication (Maybe Sasl)

-- | Details for ClientAuthentication using TLS.
clientAuthentication_tls :: Lens' ClientAuthentication (Maybe Tls)

-- | Contains information about unauthenticated traffic to the cluster.
clientAuthentication_unauthenticated :: Lens' ClientAuthentication (Maybe Unauthenticated)

-- | <i>See:</i> <a>newCloudWatchLogs</a> smart constructor.
data CloudWatchLogs
CloudWatchLogs' :: Maybe Text -> Bool -> CloudWatchLogs
[$sel:logGroup:CloudWatchLogs'] :: CloudWatchLogs -> Maybe Text
[$sel:enabled:CloudWatchLogs'] :: CloudWatchLogs -> Bool

-- | Create a value of <a>CloudWatchLogs</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:logGroup:CloudWatchLogs'</a>, <a>cloudWatchLogs_logGroup</a> -
--   Undocumented member.
--   
--   <a>$sel:enabled:CloudWatchLogs'</a>, <a>cloudWatchLogs_enabled</a> -
--   Undocumented member.
newCloudWatchLogs :: Bool -> CloudWatchLogs

-- | Undocumented member.
cloudWatchLogs_logGroup :: Lens' CloudWatchLogs (Maybe Text)

-- | Undocumented member.
cloudWatchLogs_enabled :: Lens' CloudWatchLogs Bool

-- | Returns information about a cluster.
--   
--   <i>See:</i> <a>newClusterInfo</a> smart constructor.
data ClusterInfo
ClusterInfo' :: Maybe POSIX -> Maybe Text -> Maybe ClusterState -> Maybe Text -> Maybe Int -> Maybe EnhancedMonitoring -> Maybe BrokerNodeGroupInfo -> Maybe OpenMonitoring -> Maybe BrokerSoftwareInfo -> Maybe Text -> Maybe StateInfo -> Maybe LoggingInfo -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe ClientAuthentication -> Maybe (HashMap Text Text) -> Maybe EncryptionInfo -> ClusterInfo

-- | The time when the cluster was created.
[$sel:creationTime:ClusterInfo'] :: ClusterInfo -> Maybe POSIX

-- | Arn of active cluster operation.
[$sel:activeOperationArn:ClusterInfo'] :: ClusterInfo -> Maybe Text

-- | The state of the cluster. The possible states are ACTIVE, CREATING,
--   DELETING, FAILED, HEALING, MAINTENANCE, REBOOTING_BROKER, and
--   UPDATING.
[$sel:state:ClusterInfo'] :: ClusterInfo -> Maybe ClusterState

-- | The Amazon Resource Name (ARN) that uniquely identifies the cluster.
[$sel:clusterArn:ClusterInfo'] :: ClusterInfo -> Maybe Text

-- | The number of broker nodes in the cluster.
[$sel:numberOfBrokerNodes:ClusterInfo'] :: ClusterInfo -> Maybe Int

-- | Specifies which metrics are gathered for the MSK cluster. This
--   property has the following possible values: DEFAULT, PER_BROKER,
--   PER_TOPIC_PER_BROKER, and PER_TOPIC_PER_PARTITION. For a list of the
--   metrics associated with each of these levels of monitoring, see
--   <a>Monitoring</a>.
[$sel:enhancedMonitoring:ClusterInfo'] :: ClusterInfo -> Maybe EnhancedMonitoring

-- | Information about the broker nodes.
[$sel:brokerNodeGroupInfo:ClusterInfo'] :: ClusterInfo -> Maybe BrokerNodeGroupInfo

-- | Settings for open monitoring using Prometheus.
[$sel:openMonitoring:ClusterInfo'] :: ClusterInfo -> Maybe OpenMonitoring

-- | Information about the version of software currently deployed on the
--   Kafka brokers in the cluster.
[$sel:currentBrokerSoftwareInfo:ClusterInfo'] :: ClusterInfo -> Maybe BrokerSoftwareInfo

-- | The current version of the MSK cluster.
[$sel:currentVersion:ClusterInfo'] :: ClusterInfo -> Maybe Text
[$sel:stateInfo:ClusterInfo'] :: ClusterInfo -> Maybe StateInfo
[$sel:loggingInfo:ClusterInfo'] :: ClusterInfo -> Maybe LoggingInfo

-- | The connection string to use to connect to the Apache ZooKeeper
--   cluster.
[$sel:zookeeperConnectString:ClusterInfo'] :: ClusterInfo -> Maybe Text

-- | The name of the cluster.
[$sel:clusterName:ClusterInfo'] :: ClusterInfo -> Maybe Text

-- | The connection string to use to connect to zookeeper cluster on Tls
--   port.
[$sel:zookeeperConnectStringTls:ClusterInfo'] :: ClusterInfo -> Maybe Text

-- | Includes all client authentication information.
[$sel:clientAuthentication:ClusterInfo'] :: ClusterInfo -> Maybe ClientAuthentication

-- | Tags attached to the cluster.
[$sel:tags:ClusterInfo'] :: ClusterInfo -> Maybe (HashMap Text Text)

-- | Includes all encryption-related information.
[$sel:encryptionInfo:ClusterInfo'] :: ClusterInfo -> Maybe EncryptionInfo

-- | Create a value of <a>ClusterInfo</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:ClusterInfo'</a>, <a>clusterInfo_creationTime</a>
--   - The time when the cluster was created.
--   
--   <a>$sel:activeOperationArn:ClusterInfo'</a>,
--   <a>clusterInfo_activeOperationArn</a> - Arn of active cluster
--   operation.
--   
--   <a>$sel:state:ClusterInfo'</a>, <a>clusterInfo_state</a> - The state
--   of the cluster. The possible states are ACTIVE, CREATING, DELETING,
--   FAILED, HEALING, MAINTENANCE, REBOOTING_BROKER, and UPDATING.
--   
--   <a>$sel:clusterArn:ClusterInfo'</a>, <a>clusterInfo_clusterArn</a> -
--   The Amazon Resource Name (ARN) that uniquely identifies the cluster.
--   
--   <a>$sel:numberOfBrokerNodes:ClusterInfo'</a>,
--   <a>clusterInfo_numberOfBrokerNodes</a> - The number of broker nodes in
--   the cluster.
--   
--   <a>$sel:enhancedMonitoring:ClusterInfo'</a>,
--   <a>clusterInfo_enhancedMonitoring</a> - Specifies which metrics are
--   gathered for the MSK cluster. This property has the following possible
--   values: DEFAULT, PER_BROKER, PER_TOPIC_PER_BROKER, and
--   PER_TOPIC_PER_PARTITION. For a list of the metrics associated with
--   each of these levels of monitoring, see <a>Monitoring</a>.
--   
--   <a>$sel:brokerNodeGroupInfo:ClusterInfo'</a>,
--   <a>clusterInfo_brokerNodeGroupInfo</a> - Information about the broker
--   nodes.
--   
--   <a>$sel:openMonitoring:ClusterInfo'</a>,
--   <a>clusterInfo_openMonitoring</a> - Settings for open monitoring using
--   Prometheus.
--   
--   <a>$sel:currentBrokerSoftwareInfo:ClusterInfo'</a>,
--   <a>clusterInfo_currentBrokerSoftwareInfo</a> - Information about the
--   version of software currently deployed on the Kafka brokers in the
--   cluster.
--   
--   <a>$sel:currentVersion:ClusterInfo'</a>,
--   <a>clusterInfo_currentVersion</a> - The current version of the MSK
--   cluster.
--   
--   <a>$sel:stateInfo:ClusterInfo'</a>, <a>clusterInfo_stateInfo</a> -
--   Undocumented member.
--   
--   <a>$sel:loggingInfo:ClusterInfo'</a>, <a>clusterInfo_loggingInfo</a> -
--   Undocumented member.
--   
--   <a>$sel:zookeeperConnectString:ClusterInfo'</a>,
--   <a>clusterInfo_zookeeperConnectString</a> - The connection string to
--   use to connect to the Apache ZooKeeper cluster.
--   
--   <a>$sel:clusterName:ClusterInfo'</a>, <a>clusterInfo_clusterName</a> -
--   The name of the cluster.
--   
--   <a>$sel:zookeeperConnectStringTls:ClusterInfo'</a>,
--   <a>clusterInfo_zookeeperConnectStringTls</a> - The connection string
--   to use to connect to zookeeper cluster on Tls port.
--   
--   <a>$sel:clientAuthentication:ClusterInfo'</a>,
--   <a>clusterInfo_clientAuthentication</a> - Includes all client
--   authentication information.
--   
--   <a>$sel:tags:ClusterInfo'</a>, <a>clusterInfo_tags</a> - Tags attached
--   to the cluster.
--   
--   <a>$sel:encryptionInfo:ClusterInfo'</a>,
--   <a>clusterInfo_encryptionInfo</a> - Includes all encryption-related
--   information.
newClusterInfo :: ClusterInfo

-- | The time when the cluster was created.
clusterInfo_creationTime :: Lens' ClusterInfo (Maybe UTCTime)

-- | Arn of active cluster operation.
clusterInfo_activeOperationArn :: Lens' ClusterInfo (Maybe Text)

-- | The state of the cluster. The possible states are ACTIVE, CREATING,
--   DELETING, FAILED, HEALING, MAINTENANCE, REBOOTING_BROKER, and
--   UPDATING.
clusterInfo_state :: Lens' ClusterInfo (Maybe ClusterState)

-- | The Amazon Resource Name (ARN) that uniquely identifies the cluster.
clusterInfo_clusterArn :: Lens' ClusterInfo (Maybe Text)

-- | The number of broker nodes in the cluster.
clusterInfo_numberOfBrokerNodes :: Lens' ClusterInfo (Maybe Int)

-- | Specifies which metrics are gathered for the MSK cluster. This
--   property has the following possible values: DEFAULT, PER_BROKER,
--   PER_TOPIC_PER_BROKER, and PER_TOPIC_PER_PARTITION. For a list of the
--   metrics associated with each of these levels of monitoring, see
--   <a>Monitoring</a>.
clusterInfo_enhancedMonitoring :: Lens' ClusterInfo (Maybe EnhancedMonitoring)

-- | Information about the broker nodes.
clusterInfo_brokerNodeGroupInfo :: Lens' ClusterInfo (Maybe BrokerNodeGroupInfo)

-- | Settings for open monitoring using Prometheus.
clusterInfo_openMonitoring :: Lens' ClusterInfo (Maybe OpenMonitoring)

-- | Information about the version of software currently deployed on the
--   Kafka brokers in the cluster.
clusterInfo_currentBrokerSoftwareInfo :: Lens' ClusterInfo (Maybe BrokerSoftwareInfo)

-- | The current version of the MSK cluster.
clusterInfo_currentVersion :: Lens' ClusterInfo (Maybe Text)

-- | Undocumented member.
clusterInfo_stateInfo :: Lens' ClusterInfo (Maybe StateInfo)

-- | Undocumented member.
clusterInfo_loggingInfo :: Lens' ClusterInfo (Maybe LoggingInfo)

-- | The connection string to use to connect to the Apache ZooKeeper
--   cluster.
clusterInfo_zookeeperConnectString :: Lens' ClusterInfo (Maybe Text)

-- | The name of the cluster.
clusterInfo_clusterName :: Lens' ClusterInfo (Maybe Text)

-- | The connection string to use to connect to zookeeper cluster on Tls
--   port.
clusterInfo_zookeeperConnectStringTls :: Lens' ClusterInfo (Maybe Text)

-- | Includes all client authentication information.
clusterInfo_clientAuthentication :: Lens' ClusterInfo (Maybe ClientAuthentication)

-- | Tags attached to the cluster.
clusterInfo_tags :: Lens' ClusterInfo (Maybe (HashMap Text Text))

-- | Includes all encryption-related information.
clusterInfo_encryptionInfo :: Lens' ClusterInfo (Maybe EncryptionInfo)

-- | Returns information about a cluster operation.
--   
--   <i>See:</i> <a>newClusterOperationInfo</a> smart constructor.
data ClusterOperationInfo
ClusterOperationInfo' :: Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe MutableClusterInfo -> Maybe MutableClusterInfo -> Maybe [ClusterOperationStep] -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe ErrorInfo -> ClusterOperationInfo

-- | The time that the operation was created.
[$sel:creationTime:ClusterOperationInfo'] :: ClusterOperationInfo -> Maybe POSIX

-- | ARN of the cluster.
[$sel:clusterArn:ClusterOperationInfo'] :: ClusterOperationInfo -> Maybe Text

-- | The ID of the API request that triggered this operation.
[$sel:clientRequestId:ClusterOperationInfo'] :: ClusterOperationInfo -> Maybe Text

-- | Information about cluster attributes after a cluster is updated.
[$sel:targetClusterInfo:ClusterOperationInfo'] :: ClusterOperationInfo -> Maybe MutableClusterInfo

-- | Information about cluster attributes before a cluster is updated.
[$sel:sourceClusterInfo:ClusterOperationInfo'] :: ClusterOperationInfo -> Maybe MutableClusterInfo

-- | Steps completed during the operation.
[$sel:operationSteps:ClusterOperationInfo'] :: ClusterOperationInfo -> Maybe [ClusterOperationStep]

-- | State of the cluster operation.
[$sel:operationState:ClusterOperationInfo'] :: ClusterOperationInfo -> Maybe Text

-- | The time at which the operation finished.
[$sel:endTime:ClusterOperationInfo'] :: ClusterOperationInfo -> Maybe POSIX

-- | Type of the cluster operation.
[$sel:operationType:ClusterOperationInfo'] :: ClusterOperationInfo -> Maybe Text

-- | ARN of the cluster operation.
[$sel:operationArn:ClusterOperationInfo'] :: ClusterOperationInfo -> Maybe Text

-- | Describes the error if the operation fails.
[$sel:errorInfo:ClusterOperationInfo'] :: ClusterOperationInfo -> Maybe ErrorInfo

-- | Create a value of <a>ClusterOperationInfo</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:ClusterOperationInfo'</a>,
--   <a>clusterOperationInfo_creationTime</a> - The time that the operation
--   was created.
--   
--   <a>$sel:clusterArn:ClusterOperationInfo'</a>,
--   <a>clusterOperationInfo_clusterArn</a> - ARN of the cluster.
--   
--   <a>$sel:clientRequestId:ClusterOperationInfo'</a>,
--   <a>clusterOperationInfo_clientRequestId</a> - The ID of the API
--   request that triggered this operation.
--   
--   <a>$sel:targetClusterInfo:ClusterOperationInfo'</a>,
--   <a>clusterOperationInfo_targetClusterInfo</a> - Information about
--   cluster attributes after a cluster is updated.
--   
--   <a>$sel:sourceClusterInfo:ClusterOperationInfo'</a>,
--   <a>clusterOperationInfo_sourceClusterInfo</a> - Information about
--   cluster attributes before a cluster is updated.
--   
--   <a>$sel:operationSteps:ClusterOperationInfo'</a>,
--   <a>clusterOperationInfo_operationSteps</a> - Steps completed during
--   the operation.
--   
--   <a>$sel:operationState:ClusterOperationInfo'</a>,
--   <a>clusterOperationInfo_operationState</a> - State of the cluster
--   operation.
--   
--   <a>$sel:endTime:ClusterOperationInfo'</a>,
--   <a>clusterOperationInfo_endTime</a> - The time at which the operation
--   finished.
--   
--   <a>$sel:operationType:ClusterOperationInfo'</a>,
--   <a>clusterOperationInfo_operationType</a> - Type of the cluster
--   operation.
--   
--   <a>$sel:operationArn:ClusterOperationInfo'</a>,
--   <a>clusterOperationInfo_operationArn</a> - ARN of the cluster
--   operation.
--   
--   <a>$sel:errorInfo:ClusterOperationInfo'</a>,
--   <a>clusterOperationInfo_errorInfo</a> - Describes the error if the
--   operation fails.
newClusterOperationInfo :: ClusterOperationInfo

-- | The time that the operation was created.
clusterOperationInfo_creationTime :: Lens' ClusterOperationInfo (Maybe UTCTime)

-- | ARN of the cluster.
clusterOperationInfo_clusterArn :: Lens' ClusterOperationInfo (Maybe Text)

-- | The ID of the API request that triggered this operation.
clusterOperationInfo_clientRequestId :: Lens' ClusterOperationInfo (Maybe Text)

-- | Information about cluster attributes after a cluster is updated.
clusterOperationInfo_targetClusterInfo :: Lens' ClusterOperationInfo (Maybe MutableClusterInfo)

-- | Information about cluster attributes before a cluster is updated.
clusterOperationInfo_sourceClusterInfo :: Lens' ClusterOperationInfo (Maybe MutableClusterInfo)

-- | Steps completed during the operation.
clusterOperationInfo_operationSteps :: Lens' ClusterOperationInfo (Maybe [ClusterOperationStep])

-- | State of the cluster operation.
clusterOperationInfo_operationState :: Lens' ClusterOperationInfo (Maybe Text)

-- | The time at which the operation finished.
clusterOperationInfo_endTime :: Lens' ClusterOperationInfo (Maybe UTCTime)

-- | Type of the cluster operation.
clusterOperationInfo_operationType :: Lens' ClusterOperationInfo (Maybe Text)

-- | ARN of the cluster operation.
clusterOperationInfo_operationArn :: Lens' ClusterOperationInfo (Maybe Text)

-- | Describes the error if the operation fails.
clusterOperationInfo_errorInfo :: Lens' ClusterOperationInfo (Maybe ErrorInfo)

-- | Step taken during a cluster operation.
--   
--   <i>See:</i> <a>newClusterOperationStep</a> smart constructor.
data ClusterOperationStep
ClusterOperationStep' :: Maybe Text -> Maybe ClusterOperationStepInfo -> ClusterOperationStep

-- | The name of the step.
[$sel:stepName:ClusterOperationStep'] :: ClusterOperationStep -> Maybe Text

-- | Information about the step and its status.
[$sel:stepInfo:ClusterOperationStep'] :: ClusterOperationStep -> Maybe ClusterOperationStepInfo

-- | Create a value of <a>ClusterOperationStep</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:stepName:ClusterOperationStep'</a>,
--   <a>clusterOperationStep_stepName</a> - The name of the step.
--   
--   <a>$sel:stepInfo:ClusterOperationStep'</a>,
--   <a>clusterOperationStep_stepInfo</a> - Information about the step and
--   its status.
newClusterOperationStep :: ClusterOperationStep

-- | The name of the step.
clusterOperationStep_stepName :: Lens' ClusterOperationStep (Maybe Text)

-- | Information about the step and its status.
clusterOperationStep_stepInfo :: Lens' ClusterOperationStep (Maybe ClusterOperationStepInfo)

-- | State information about the operation step.
--   
--   <i>See:</i> <a>newClusterOperationStepInfo</a> smart constructor.
data ClusterOperationStepInfo
ClusterOperationStepInfo' :: Maybe Text -> ClusterOperationStepInfo

-- | The steps current status.
[$sel:stepStatus:ClusterOperationStepInfo'] :: ClusterOperationStepInfo -> Maybe Text

-- | Create a value of <a>ClusterOperationStepInfo</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:stepStatus:ClusterOperationStepInfo'</a>,
--   <a>clusterOperationStepInfo_stepStatus</a> - The steps current status.
newClusterOperationStepInfo :: ClusterOperationStepInfo

-- | The steps current status.
clusterOperationStepInfo_stepStatus :: Lens' ClusterOperationStepInfo (Maybe Text)

-- | Contains source Kafka versions and compatible target Kafka versions.
--   
--   <i>See:</i> <a>newCompatibleKafkaVersion</a> smart constructor.
data CompatibleKafkaVersion
CompatibleKafkaVersion' :: Maybe Text -> Maybe [Text] -> CompatibleKafkaVersion

-- | A Kafka version.
[$sel:sourceVersion:CompatibleKafkaVersion'] :: CompatibleKafkaVersion -> Maybe Text

-- | A list of Kafka versions.
[$sel:targetVersions:CompatibleKafkaVersion'] :: CompatibleKafkaVersion -> Maybe [Text]

-- | Create a value of <a>CompatibleKafkaVersion</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sourceVersion:CompatibleKafkaVersion'</a>,
--   <a>compatibleKafkaVersion_sourceVersion</a> - A Kafka version.
--   
--   <a>$sel:targetVersions:CompatibleKafkaVersion'</a>,
--   <a>compatibleKafkaVersion_targetVersions</a> - A list of Kafka
--   versions.
newCompatibleKafkaVersion :: CompatibleKafkaVersion

-- | A Kafka version.
compatibleKafkaVersion_sourceVersion :: Lens' CompatibleKafkaVersion (Maybe Text)

-- | A list of Kafka versions.
compatibleKafkaVersion_targetVersions :: Lens' CompatibleKafkaVersion (Maybe [Text])

-- | Represents an MSK Configuration.
--   
--   <i>See:</i> <a>newConfiguration</a> smart constructor.
data Configuration
Configuration' :: Text -> ConfigurationRevision -> POSIX -> [Text] -> Text -> Text -> ConfigurationState -> Configuration

-- | The description of the configuration.
[$sel:description:Configuration'] :: Configuration -> Text

-- | Latest revision of the configuration.
[$sel:latestRevision:Configuration'] :: Configuration -> ConfigurationRevision

-- | The time when the configuration was created.
[$sel:creationTime:Configuration'] :: Configuration -> POSIX

-- | An array of the versions of Apache Kafka with which you can use this
--   MSK configuration. You can use this configuration for an MSK cluster
--   only if the Apache Kafka version specified for the cluster appears in
--   this array.
[$sel:kafkaVersions:Configuration'] :: Configuration -> [Text]

-- | The Amazon Resource Name (ARN) of the configuration.
[$sel:arn:Configuration'] :: Configuration -> Text

-- | The name of the configuration.
[$sel:name:Configuration'] :: Configuration -> Text

-- | The state of the configuration. The possible states are ACTIVE,
--   DELETING, and DELETE_FAILED.
[$sel:state:Configuration'] :: Configuration -> ConfigurationState

-- | Create a value of <a>Configuration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:description:Configuration'</a>,
--   <a>configuration_description</a> - The description of the
--   configuration.
--   
--   <a>$sel:latestRevision:Configuration'</a>,
--   <a>configuration_latestRevision</a> - Latest revision of the
--   configuration.
--   
--   <a>$sel:creationTime:Configuration'</a>,
--   <a>configuration_creationTime</a> - The time when the configuration
--   was created.
--   
--   <a>$sel:kafkaVersions:Configuration'</a>,
--   <a>configuration_kafkaVersions</a> - An array of the versions of
--   Apache Kafka with which you can use this MSK configuration. You can
--   use this configuration for an MSK cluster only if the Apache Kafka
--   version specified for the cluster appears in this array.
--   
--   <a>$sel:arn:Configuration'</a>, <a>configuration_arn</a> - The Amazon
--   Resource Name (ARN) of the configuration.
--   
--   <a>$sel:name:Configuration'</a>, <a>configuration_name</a> - The name
--   of the configuration.
--   
--   <a>$sel:state:Configuration'</a>, <a>configuration_state</a> - The
--   state of the configuration. The possible states are ACTIVE, DELETING,
--   and DELETE_FAILED.
newConfiguration :: Text -> ConfigurationRevision -> UTCTime -> Text -> Text -> ConfigurationState -> Configuration

-- | The description of the configuration.
configuration_description :: Lens' Configuration Text

-- | Latest revision of the configuration.
configuration_latestRevision :: Lens' Configuration ConfigurationRevision

-- | The time when the configuration was created.
configuration_creationTime :: Lens' Configuration UTCTime

-- | An array of the versions of Apache Kafka with which you can use this
--   MSK configuration. You can use this configuration for an MSK cluster
--   only if the Apache Kafka version specified for the cluster appears in
--   this array.
configuration_kafkaVersions :: Lens' Configuration [Text]

-- | The Amazon Resource Name (ARN) of the configuration.
configuration_arn :: Lens' Configuration Text

-- | The name of the configuration.
configuration_name :: Lens' Configuration Text

-- | The state of the configuration. The possible states are ACTIVE,
--   DELETING, and DELETE_FAILED.
configuration_state :: Lens' Configuration ConfigurationState

-- | Specifies the configuration to use for the brokers.
--   
--   <i>See:</i> <a>newConfigurationInfo</a> smart constructor.
data ConfigurationInfo
ConfigurationInfo' :: Integer -> Text -> ConfigurationInfo

-- | The revision of the configuration to use.
[$sel:revision:ConfigurationInfo'] :: ConfigurationInfo -> Integer

-- | ARN of the configuration to use.
[$sel:arn:ConfigurationInfo'] :: ConfigurationInfo -> Text

-- | Create a value of <a>ConfigurationInfo</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:revision:ConfigurationInfo'</a>,
--   <a>configurationInfo_revision</a> - The revision of the configuration
--   to use.
--   
--   <a>$sel:arn:ConfigurationInfo'</a>, <a>configurationInfo_arn</a> - ARN
--   of the configuration to use.
newConfigurationInfo :: Integer -> Text -> ConfigurationInfo

-- | The revision of the configuration to use.
configurationInfo_revision :: Lens' ConfigurationInfo Integer

-- | ARN of the configuration to use.
configurationInfo_arn :: Lens' ConfigurationInfo Text

-- | Describes a configuration revision.
--   
--   <i>See:</i> <a>newConfigurationRevision</a> smart constructor.
data ConfigurationRevision
ConfigurationRevision' :: Maybe Text -> Integer -> POSIX -> ConfigurationRevision

-- | The description of the configuration revision.
[$sel:description:ConfigurationRevision'] :: ConfigurationRevision -> Maybe Text

-- | The revision number.
[$sel:revision:ConfigurationRevision'] :: ConfigurationRevision -> Integer

-- | The time when the configuration revision was created.
[$sel:creationTime:ConfigurationRevision'] :: ConfigurationRevision -> POSIX

-- | Create a value of <a>ConfigurationRevision</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:description:ConfigurationRevision'</a>,
--   <a>configurationRevision_description</a> - The description of the
--   configuration revision.
--   
--   <a>$sel:revision:ConfigurationRevision'</a>,
--   <a>configurationRevision_revision</a> - The revision number.
--   
--   <a>$sel:creationTime:ConfigurationRevision'</a>,
--   <a>configurationRevision_creationTime</a> - The time when the
--   configuration revision was created.
newConfigurationRevision :: Integer -> UTCTime -> ConfigurationRevision

-- | The description of the configuration revision.
configurationRevision_description :: Lens' ConfigurationRevision (Maybe Text)

-- | The revision number.
configurationRevision_revision :: Lens' ConfigurationRevision Integer

-- | The time when the configuration revision was created.
configurationRevision_creationTime :: Lens' ConfigurationRevision UTCTime

-- | Contains information about the EBS storage volumes attached to Kafka
--   broker nodes.
--   
--   <i>See:</i> <a>newEBSStorageInfo</a> smart constructor.
data EBSStorageInfo
EBSStorageInfo' :: Maybe Natural -> EBSStorageInfo

-- | The size in GiB of the EBS volume for the data drive on each broker
--   node.
[$sel:volumeSize:EBSStorageInfo'] :: EBSStorageInfo -> Maybe Natural

-- | Create a value of <a>EBSStorageInfo</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:volumeSize:EBSStorageInfo'</a>,
--   <a>eBSStorageInfo_volumeSize</a> - The size in GiB of the EBS volume
--   for the data drive on each broker node.
newEBSStorageInfo :: EBSStorageInfo

-- | The size in GiB of the EBS volume for the data drive on each broker
--   node.
eBSStorageInfo_volumeSize :: Lens' EBSStorageInfo (Maybe Natural)

-- | The data-volume encryption details.
--   
--   <i>See:</i> <a>newEncryptionAtRest</a> smart constructor.
data EncryptionAtRest
EncryptionAtRest' :: Text -> EncryptionAtRest

-- | The ARN of the AWS KMS key for encrypting data at rest. If you don't
--   specify a KMS key, MSK creates one for you and uses it.
[$sel:dataVolumeKMSKeyId:EncryptionAtRest'] :: EncryptionAtRest -> Text

-- | Create a value of <a>EncryptionAtRest</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dataVolumeKMSKeyId:EncryptionAtRest'</a>,
--   <a>encryptionAtRest_dataVolumeKMSKeyId</a> - The ARN of the AWS KMS
--   key for encrypting data at rest. If you don't specify a KMS key, MSK
--   creates one for you and uses it.
newEncryptionAtRest :: Text -> EncryptionAtRest

-- | The ARN of the AWS KMS key for encrypting data at rest. If you don't
--   specify a KMS key, MSK creates one for you and uses it.
encryptionAtRest_dataVolumeKMSKeyId :: Lens' EncryptionAtRest Text

-- | The settings for encrypting data in transit.
--   
--   <i>See:</i> <a>newEncryptionInTransit</a> smart constructor.
data EncryptionInTransit
EncryptionInTransit' :: Maybe ClientBroker -> Maybe Bool -> EncryptionInTransit

-- | Indicates the encryption setting for data in transit between clients
--   and brokers. The following are the possible values.
--   
--   TLS means that client-broker communication is enabled with TLS only.
--   
--   TLS_PLAINTEXT means that client-broker communication is enabled for
--   both TLS-encrypted, as well as plaintext data.
--   
--   PLAINTEXT means that client-broker communication is enabled in
--   plaintext only.
--   
--   The default value is TLS_PLAINTEXT.
[$sel:clientBroker:EncryptionInTransit'] :: EncryptionInTransit -> Maybe ClientBroker

-- | When set to true, it indicates that data communication among the
--   broker nodes of the cluster is encrypted. When set to false, the
--   communication happens in plaintext.
--   
--   The default value is true.
[$sel:inCluster:EncryptionInTransit'] :: EncryptionInTransit -> Maybe Bool

-- | Create a value of <a>EncryptionInTransit</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientBroker:EncryptionInTransit'</a>,
--   <a>encryptionInTransit_clientBroker</a> - Indicates the encryption
--   setting for data in transit between clients and brokers. The following
--   are the possible values.
--   
--   TLS means that client-broker communication is enabled with TLS only.
--   
--   TLS_PLAINTEXT means that client-broker communication is enabled for
--   both TLS-encrypted, as well as plaintext data.
--   
--   PLAINTEXT means that client-broker communication is enabled in
--   plaintext only.
--   
--   The default value is TLS_PLAINTEXT.
--   
--   <a>$sel:inCluster:EncryptionInTransit'</a>,
--   <a>encryptionInTransit_inCluster</a> - When set to true, it indicates
--   that data communication among the broker nodes of the cluster is
--   encrypted. When set to false, the communication happens in plaintext.
--   
--   The default value is true.
newEncryptionInTransit :: EncryptionInTransit

-- | Indicates the encryption setting for data in transit between clients
--   and brokers. The following are the possible values.
--   
--   TLS means that client-broker communication is enabled with TLS only.
--   
--   TLS_PLAINTEXT means that client-broker communication is enabled for
--   both TLS-encrypted, as well as plaintext data.
--   
--   PLAINTEXT means that client-broker communication is enabled in
--   plaintext only.
--   
--   The default value is TLS_PLAINTEXT.
encryptionInTransit_clientBroker :: Lens' EncryptionInTransit (Maybe ClientBroker)

-- | When set to true, it indicates that data communication among the
--   broker nodes of the cluster is encrypted. When set to false, the
--   communication happens in plaintext.
--   
--   The default value is true.
encryptionInTransit_inCluster :: Lens' EncryptionInTransit (Maybe Bool)

-- | Includes encryption-related information, such as the AWS KMS key used
--   for encrypting data at rest and whether you want MSK to encrypt your
--   data in transit.
--   
--   <i>See:</i> <a>newEncryptionInfo</a> smart constructor.
data EncryptionInfo
EncryptionInfo' :: Maybe EncryptionAtRest -> Maybe EncryptionInTransit -> EncryptionInfo

-- | The data-volume encryption details.
[$sel:encryptionAtRest:EncryptionInfo'] :: EncryptionInfo -> Maybe EncryptionAtRest

-- | The details for encryption in transit.
[$sel:encryptionInTransit:EncryptionInfo'] :: EncryptionInfo -> Maybe EncryptionInTransit

-- | Create a value of <a>EncryptionInfo</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:encryptionAtRest:EncryptionInfo'</a>,
--   <a>encryptionInfo_encryptionAtRest</a> - The data-volume encryption
--   details.
--   
--   <a>$sel:encryptionInTransit:EncryptionInfo'</a>,
--   <a>encryptionInfo_encryptionInTransit</a> - The details for encryption
--   in transit.
newEncryptionInfo :: EncryptionInfo

-- | The data-volume encryption details.
encryptionInfo_encryptionAtRest :: Lens' EncryptionInfo (Maybe EncryptionAtRest)

-- | The details for encryption in transit.
encryptionInfo_encryptionInTransit :: Lens' EncryptionInfo (Maybe EncryptionInTransit)

-- | Returns information about an error state of the cluster.
--   
--   <i>See:</i> <a>newErrorInfo</a> smart constructor.
data ErrorInfo
ErrorInfo' :: Maybe Text -> Maybe Text -> ErrorInfo

-- | An optional field to provide more details about the error.
[$sel:errorString:ErrorInfo'] :: ErrorInfo -> Maybe Text

-- | A number describing the error programmatically.
[$sel:errorCode:ErrorInfo'] :: ErrorInfo -> Maybe Text

-- | Create a value of <a>ErrorInfo</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:errorString:ErrorInfo'</a>, <a>errorInfo_errorString</a> - An
--   optional field to provide more details about the error.
--   
--   <a>$sel:errorCode:ErrorInfo'</a>, <a>errorInfo_errorCode</a> - A
--   number describing the error programmatically.
newErrorInfo :: ErrorInfo

-- | An optional field to provide more details about the error.
errorInfo_errorString :: Lens' ErrorInfo (Maybe Text)

-- | A number describing the error programmatically.
errorInfo_errorCode :: Lens' ErrorInfo (Maybe Text)

-- | <i>See:</i> <a>newFirehose</a> smart constructor.
data Firehose
Firehose' :: Maybe Text -> Bool -> Firehose
[$sel:deliveryStream:Firehose'] :: Firehose -> Maybe Text
[$sel:enabled:Firehose'] :: Firehose -> Bool

-- | Create a value of <a>Firehose</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deliveryStream:Firehose'</a>, <a>firehose_deliveryStream</a> -
--   Undocumented member.
--   
--   <a>$sel:enabled:Firehose'</a>, <a>firehose_enabled</a> - Undocumented
--   member.
newFirehose :: Bool -> Firehose

-- | Undocumented member.
firehose_deliveryStream :: Lens' Firehose (Maybe Text)

-- | Undocumented member.
firehose_enabled :: Lens' Firehose Bool

-- | Details for IAM access control.
--   
--   <i>See:</i> <a>newIam</a> smart constructor.
data Iam
Iam' :: Maybe Bool -> Iam

-- | Indicates whether IAM access control is enabled.
[$sel:enabled:Iam'] :: Iam -> Maybe Bool

-- | Create a value of <a>Iam</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:enabled:Iam'</a>, <a>iam_enabled</a> - Indicates whether IAM
--   access control is enabled.
newIam :: Iam

-- | Indicates whether IAM access control is enabled.
iam_enabled :: Lens' Iam (Maybe Bool)

-- | Indicates whether you want to enable or disable the JMX Exporter.
--   
--   <i>See:</i> <a>newJmxExporter</a> smart constructor.
data JmxExporter
JmxExporter' :: Bool -> JmxExporter

-- | Indicates whether you want to enable or disable the JMX Exporter.
[$sel:enabledInBroker:JmxExporter'] :: JmxExporter -> Bool

-- | Create a value of <a>JmxExporter</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:enabledInBroker:JmxExporter'</a>,
--   <a>jmxExporter_enabledInBroker</a> - Indicates whether you want to
--   enable or disable the JMX Exporter.
newJmxExporter :: Bool -> JmxExporter

-- | Indicates whether you want to enable or disable the JMX Exporter.
jmxExporter_enabledInBroker :: Lens' JmxExporter Bool

-- | Indicates whether you want to enable or disable the JMX Exporter.
--   
--   <i>See:</i> <a>newJmxExporterInfo</a> smart constructor.
data JmxExporterInfo
JmxExporterInfo' :: Bool -> JmxExporterInfo

-- | Indicates whether you want to enable or disable the JMX Exporter.
[$sel:enabledInBroker:JmxExporterInfo'] :: JmxExporterInfo -> Bool

-- | Create a value of <a>JmxExporterInfo</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:enabledInBroker:JmxExporterInfo'</a>,
--   <a>jmxExporterInfo_enabledInBroker</a> - Indicates whether you want to
--   enable or disable the JMX Exporter.
newJmxExporterInfo :: Bool -> JmxExporterInfo

-- | Indicates whether you want to enable or disable the JMX Exporter.
jmxExporterInfo_enabledInBroker :: Lens' JmxExporterInfo Bool

-- | <i>See:</i> <a>newKafkaVersion</a> smart constructor.
data KafkaVersion
KafkaVersion' :: Maybe KafkaVersionStatus -> Maybe Text -> KafkaVersion
[$sel:status:KafkaVersion'] :: KafkaVersion -> Maybe KafkaVersionStatus
[$sel:version:KafkaVersion'] :: KafkaVersion -> Maybe Text

-- | Create a value of <a>KafkaVersion</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:KafkaVersion'</a>, <a>kafkaVersion_status</a> -
--   Undocumented member.
--   
--   <a>$sel:version:KafkaVersion'</a>, <a>kafkaVersion_version</a> -
--   Undocumented member.
newKafkaVersion :: KafkaVersion

-- | Undocumented member.
kafkaVersion_status :: Lens' KafkaVersion (Maybe KafkaVersionStatus)

-- | Undocumented member.
kafkaVersion_version :: Lens' KafkaVersion (Maybe Text)

-- | <i>See:</i> <a>newLoggingInfo</a> smart constructor.
data LoggingInfo
LoggingInfo' :: BrokerLogs -> LoggingInfo
[$sel:brokerLogs:LoggingInfo'] :: LoggingInfo -> BrokerLogs

-- | Create a value of <a>LoggingInfo</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:brokerLogs:LoggingInfo'</a>, <a>loggingInfo_brokerLogs</a> -
--   Undocumented member.
newLoggingInfo :: BrokerLogs -> LoggingInfo

-- | Undocumented member.
loggingInfo_brokerLogs :: Lens' LoggingInfo BrokerLogs

-- | Information about cluster attributes that can be updated via update
--   APIs.
--   
--   <i>See:</i> <a>newMutableClusterInfo</a> smart constructor.
data MutableClusterInfo
MutableClusterInfo' :: Maybe Int -> Maybe EnhancedMonitoring -> Maybe OpenMonitoring -> Maybe ConfigurationInfo -> Maybe Text -> Maybe Text -> Maybe LoggingInfo -> Maybe ClientAuthentication -> Maybe [BrokerEBSVolumeInfo] -> Maybe EncryptionInfo -> MutableClusterInfo

-- | The number of broker nodes in the cluster.
[$sel:numberOfBrokerNodes:MutableClusterInfo'] :: MutableClusterInfo -> Maybe Int

-- | Specifies which Apache Kafka metrics Amazon MSK gathers and sends to
--   Amazon CloudWatch for this cluster.
[$sel:enhancedMonitoring:MutableClusterInfo'] :: MutableClusterInfo -> Maybe EnhancedMonitoring

-- | The settings for open monitoring.
[$sel:openMonitoring:MutableClusterInfo'] :: MutableClusterInfo -> Maybe OpenMonitoring

-- | Information about the changes in the configuration of the brokers.
[$sel:configurationInfo:MutableClusterInfo'] :: MutableClusterInfo -> Maybe ConfigurationInfo

-- | Information about the Amazon MSK broker type.
[$sel:instanceType:MutableClusterInfo'] :: MutableClusterInfo -> Maybe Text

-- | The Kafka version.
[$sel:kafkaVersion:MutableClusterInfo'] :: MutableClusterInfo -> Maybe Text

-- | You can configure your MSK cluster to send broker logs to different
--   destination types. This is a container for the configuration details
--   related to broker logs.
[$sel:loggingInfo:MutableClusterInfo'] :: MutableClusterInfo -> Maybe LoggingInfo

-- | Includes all client authentication information.
[$sel:clientAuthentication:MutableClusterInfo'] :: MutableClusterInfo -> Maybe ClientAuthentication

-- | Specifies the size of the EBS volume and the ID of the associated
--   broker.
[$sel:brokerEBSVolumeInfo:MutableClusterInfo'] :: MutableClusterInfo -> Maybe [BrokerEBSVolumeInfo]

-- | Includes all encryption-related information.
[$sel:encryptionInfo:MutableClusterInfo'] :: MutableClusterInfo -> Maybe EncryptionInfo

-- | Create a value of <a>MutableClusterInfo</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:numberOfBrokerNodes:MutableClusterInfo'</a>,
--   <a>mutableClusterInfo_numberOfBrokerNodes</a> - The number of broker
--   nodes in the cluster.
--   
--   <a>$sel:enhancedMonitoring:MutableClusterInfo'</a>,
--   <a>mutableClusterInfo_enhancedMonitoring</a> - Specifies which Apache
--   Kafka metrics Amazon MSK gathers and sends to Amazon CloudWatch for
--   this cluster.
--   
--   <a>$sel:openMonitoring:MutableClusterInfo'</a>,
--   <a>mutableClusterInfo_openMonitoring</a> - The settings for open
--   monitoring.
--   
--   <a>$sel:configurationInfo:MutableClusterInfo'</a>,
--   <a>mutableClusterInfo_configurationInfo</a> - Information about the
--   changes in the configuration of the brokers.
--   
--   <a>$sel:instanceType:MutableClusterInfo'</a>,
--   <a>mutableClusterInfo_instanceType</a> - Information about the Amazon
--   MSK broker type.
--   
--   <a>$sel:kafkaVersion:MutableClusterInfo'</a>,
--   <a>mutableClusterInfo_kafkaVersion</a> - The Kafka version.
--   
--   <a>$sel:loggingInfo:MutableClusterInfo'</a>,
--   <a>mutableClusterInfo_loggingInfo</a> - You can configure your MSK
--   cluster to send broker logs to different destination types. This is a
--   container for the configuration details related to broker logs.
--   
--   <a>$sel:clientAuthentication:MutableClusterInfo'</a>,
--   <a>mutableClusterInfo_clientAuthentication</a> - Includes all client
--   authentication information.
--   
--   <a>$sel:brokerEBSVolumeInfo:MutableClusterInfo'</a>,
--   <a>mutableClusterInfo_brokerEBSVolumeInfo</a> - Specifies the size of
--   the EBS volume and the ID of the associated broker.
--   
--   <a>$sel:encryptionInfo:MutableClusterInfo'</a>,
--   <a>mutableClusterInfo_encryptionInfo</a> - Includes all
--   encryption-related information.
newMutableClusterInfo :: MutableClusterInfo

-- | The number of broker nodes in the cluster.
mutableClusterInfo_numberOfBrokerNodes :: Lens' MutableClusterInfo (Maybe Int)

-- | Specifies which Apache Kafka metrics Amazon MSK gathers and sends to
--   Amazon CloudWatch for this cluster.
mutableClusterInfo_enhancedMonitoring :: Lens' MutableClusterInfo (Maybe EnhancedMonitoring)

-- | The settings for open monitoring.
mutableClusterInfo_openMonitoring :: Lens' MutableClusterInfo (Maybe OpenMonitoring)

-- | Information about the changes in the configuration of the brokers.
mutableClusterInfo_configurationInfo :: Lens' MutableClusterInfo (Maybe ConfigurationInfo)

-- | Information about the Amazon MSK broker type.
mutableClusterInfo_instanceType :: Lens' MutableClusterInfo (Maybe Text)

-- | The Kafka version.
mutableClusterInfo_kafkaVersion :: Lens' MutableClusterInfo (Maybe Text)

-- | You can configure your MSK cluster to send broker logs to different
--   destination types. This is a container for the configuration details
--   related to broker logs.
mutableClusterInfo_loggingInfo :: Lens' MutableClusterInfo (Maybe LoggingInfo)

-- | Includes all client authentication information.
mutableClusterInfo_clientAuthentication :: Lens' MutableClusterInfo (Maybe ClientAuthentication)

-- | Specifies the size of the EBS volume and the ID of the associated
--   broker.
mutableClusterInfo_brokerEBSVolumeInfo :: Lens' MutableClusterInfo (Maybe [BrokerEBSVolumeInfo])

-- | Includes all encryption-related information.
mutableClusterInfo_encryptionInfo :: Lens' MutableClusterInfo (Maybe EncryptionInfo)

-- | Indicates whether you want to enable or disable the Node Exporter.
--   
--   <i>See:</i> <a>newNodeExporter</a> smart constructor.
data NodeExporter
NodeExporter' :: Bool -> NodeExporter

-- | Indicates whether you want to enable or disable the Node Exporter.
[$sel:enabledInBroker:NodeExporter'] :: NodeExporter -> Bool

-- | Create a value of <a>NodeExporter</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:enabledInBroker:NodeExporter'</a>,
--   <a>nodeExporter_enabledInBroker</a> - Indicates whether you want to
--   enable or disable the Node Exporter.
newNodeExporter :: Bool -> NodeExporter

-- | Indicates whether you want to enable or disable the Node Exporter.
nodeExporter_enabledInBroker :: Lens' NodeExporter Bool

-- | Indicates whether you want to enable or disable the Node Exporter.
--   
--   <i>See:</i> <a>newNodeExporterInfo</a> smart constructor.
data NodeExporterInfo
NodeExporterInfo' :: Bool -> NodeExporterInfo

-- | Indicates whether you want to enable or disable the Node Exporter.
[$sel:enabledInBroker:NodeExporterInfo'] :: NodeExporterInfo -> Bool

-- | Create a value of <a>NodeExporterInfo</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:enabledInBroker:NodeExporterInfo'</a>,
--   <a>nodeExporterInfo_enabledInBroker</a> - Indicates whether you want
--   to enable or disable the Node Exporter.
newNodeExporterInfo :: Bool -> NodeExporterInfo

-- | Indicates whether you want to enable or disable the Node Exporter.
nodeExporterInfo_enabledInBroker :: Lens' NodeExporterInfo Bool

-- | The node information object.
--   
--   <i>See:</i> <a>newNodeInfo</a> smart constructor.
data NodeInfo
NodeInfo' :: Maybe Text -> Maybe Text -> Maybe ZookeeperNodeInfo -> Maybe Text -> Maybe BrokerNodeInfo -> Maybe NodeType -> NodeInfo

-- | The start time.
[$sel:addedToClusterTime:NodeInfo'] :: NodeInfo -> Maybe Text

-- | The Amazon Resource Name (ARN) of the node.
[$sel:nodeARN:NodeInfo'] :: NodeInfo -> Maybe Text

-- | The ZookeeperNodeInfo.
[$sel:zookeeperNodeInfo:NodeInfo'] :: NodeInfo -> Maybe ZookeeperNodeInfo

-- | The instance type.
[$sel:instanceType:NodeInfo'] :: NodeInfo -> Maybe Text

-- | The broker node info.
[$sel:brokerNodeInfo:NodeInfo'] :: NodeInfo -> Maybe BrokerNodeInfo

-- | The node type.
[$sel:nodeType:NodeInfo'] :: NodeInfo -> Maybe NodeType

-- | Create a value of <a>NodeInfo</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:addedToClusterTime:NodeInfo'</a>,
--   <a>nodeInfo_addedToClusterTime</a> - The start time.
--   
--   <a>$sel:nodeARN:NodeInfo'</a>, <a>nodeInfo_nodeARN</a> - The Amazon
--   Resource Name (ARN) of the node.
--   
--   <a>$sel:zookeeperNodeInfo:NodeInfo'</a>,
--   <a>nodeInfo_zookeeperNodeInfo</a> - The ZookeeperNodeInfo.
--   
--   <a>$sel:instanceType:NodeInfo'</a>, <a>nodeInfo_instanceType</a> - The
--   instance type.
--   
--   <a>$sel:brokerNodeInfo:NodeInfo'</a>, <a>nodeInfo_brokerNodeInfo</a> -
--   The broker node info.
--   
--   <a>$sel:nodeType:NodeInfo'</a>, <a>nodeInfo_nodeType</a> - The node
--   type.
newNodeInfo :: NodeInfo

-- | The start time.
nodeInfo_addedToClusterTime :: Lens' NodeInfo (Maybe Text)

-- | The Amazon Resource Name (ARN) of the node.
nodeInfo_nodeARN :: Lens' NodeInfo (Maybe Text)

-- | The ZookeeperNodeInfo.
nodeInfo_zookeeperNodeInfo :: Lens' NodeInfo (Maybe ZookeeperNodeInfo)

-- | The instance type.
nodeInfo_instanceType :: Lens' NodeInfo (Maybe Text)

-- | The broker node info.
nodeInfo_brokerNodeInfo :: Lens' NodeInfo (Maybe BrokerNodeInfo)

-- | The node type.
nodeInfo_nodeType :: Lens' NodeInfo (Maybe NodeType)

-- | JMX and Node monitoring for the MSK cluster.
--   
--   <i>See:</i> <a>newOpenMonitoring</a> smart constructor.
data OpenMonitoring
OpenMonitoring' :: Prometheus -> OpenMonitoring

-- | Prometheus settings.
[$sel:prometheus:OpenMonitoring'] :: OpenMonitoring -> Prometheus

-- | Create a value of <a>OpenMonitoring</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:prometheus:OpenMonitoring'</a>,
--   <a>openMonitoring_prometheus</a> - Prometheus settings.
newOpenMonitoring :: Prometheus -> OpenMonitoring

-- | Prometheus settings.
openMonitoring_prometheus :: Lens' OpenMonitoring Prometheus

-- | JMX and Node monitoring for the MSK cluster.
--   
--   <i>See:</i> <a>newOpenMonitoringInfo</a> smart constructor.
data OpenMonitoringInfo
OpenMonitoringInfo' :: PrometheusInfo -> OpenMonitoringInfo

-- | Prometheus settings.
[$sel:prometheus:OpenMonitoringInfo'] :: OpenMonitoringInfo -> PrometheusInfo

-- | Create a value of <a>OpenMonitoringInfo</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:prometheus:OpenMonitoringInfo'</a>,
--   <a>openMonitoringInfo_prometheus</a> - Prometheus settings.
newOpenMonitoringInfo :: PrometheusInfo -> OpenMonitoringInfo

-- | Prometheus settings.
openMonitoringInfo_prometheus :: Lens' OpenMonitoringInfo PrometheusInfo

-- | Prometheus settings.
--   
--   <i>See:</i> <a>newPrometheus</a> smart constructor.
data Prometheus
Prometheus' :: Maybe JmxExporter -> Maybe NodeExporter -> Prometheus

-- | Indicates whether you want to enable or disable the JMX Exporter.
[$sel:jmxExporter:Prometheus'] :: Prometheus -> Maybe JmxExporter

-- | Indicates whether you want to enable or disable the Node Exporter.
[$sel:nodeExporter:Prometheus'] :: Prometheus -> Maybe NodeExporter

-- | Create a value of <a>Prometheus</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jmxExporter:Prometheus'</a>, <a>prometheus_jmxExporter</a> -
--   Indicates whether you want to enable or disable the JMX Exporter.
--   
--   <a>$sel:nodeExporter:Prometheus'</a>, <a>prometheus_nodeExporter</a> -
--   Indicates whether you want to enable or disable the Node Exporter.
newPrometheus :: Prometheus

-- | Indicates whether you want to enable or disable the JMX Exporter.
prometheus_jmxExporter :: Lens' Prometheus (Maybe JmxExporter)

-- | Indicates whether you want to enable or disable the Node Exporter.
prometheus_nodeExporter :: Lens' Prometheus (Maybe NodeExporter)

-- | Prometheus settings.
--   
--   <i>See:</i> <a>newPrometheusInfo</a> smart constructor.
data PrometheusInfo
PrometheusInfo' :: Maybe JmxExporterInfo -> Maybe NodeExporterInfo -> PrometheusInfo

-- | Indicates whether you want to enable or disable the JMX Exporter.
[$sel:jmxExporter:PrometheusInfo'] :: PrometheusInfo -> Maybe JmxExporterInfo

-- | Indicates whether you want to enable or disable the Node Exporter.
[$sel:nodeExporter:PrometheusInfo'] :: PrometheusInfo -> Maybe NodeExporterInfo

-- | Create a value of <a>PrometheusInfo</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jmxExporter:PrometheusInfo'</a>,
--   <a>prometheusInfo_jmxExporter</a> - Indicates whether you want to
--   enable or disable the JMX Exporter.
--   
--   <a>$sel:nodeExporter:PrometheusInfo'</a>,
--   <a>prometheusInfo_nodeExporter</a> - Indicates whether you want to
--   enable or disable the Node Exporter.
newPrometheusInfo :: PrometheusInfo

-- | Indicates whether you want to enable or disable the JMX Exporter.
prometheusInfo_jmxExporter :: Lens' PrometheusInfo (Maybe JmxExporterInfo)

-- | Indicates whether you want to enable or disable the Node Exporter.
prometheusInfo_nodeExporter :: Lens' PrometheusInfo (Maybe NodeExporterInfo)

-- | <i>See:</i> <a>newS3</a> smart constructor.
data S3
S3' :: Maybe Text -> Maybe Text -> Bool -> S3
[$sel:prefix:S3'] :: S3 -> Maybe Text
[$sel:bucket:S3'] :: S3 -> Maybe Text
[$sel:enabled:S3'] :: S3 -> Bool

-- | Create a value of <a>S3</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:prefix:S3'</a>, <a>s3_prefix</a> - Undocumented member.
--   
--   <a>$sel:bucket:S3'</a>, <a>s3_bucket</a> - Undocumented member.
--   
--   <a>$sel:enabled:S3'</a>, <a>s3_enabled</a> - Undocumented member.
newS3 :: Bool -> S3

-- | Undocumented member.
s3_prefix :: Lens' S3 (Maybe Text)

-- | Undocumented member.
s3_bucket :: Lens' S3 (Maybe Text)

-- | Undocumented member.
s3_enabled :: Lens' S3 Bool

-- | Details for client authentication using SASL.
--   
--   <i>See:</i> <a>newSasl</a> smart constructor.
data Sasl
Sasl' :: Maybe Iam -> Maybe Scram -> Sasl

-- | Indicates whether IAM access control is enabled.
[$sel:iam:Sasl'] :: Sasl -> Maybe Iam

-- | Details for SASL/SCRAM client authentication.
[$sel:scram:Sasl'] :: Sasl -> Maybe Scram

-- | Create a value of <a>Sasl</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:iam:Sasl'</a>, <a>sasl_iam</a> - Indicates whether IAM access
--   control is enabled.
--   
--   <a>$sel:scram:Sasl'</a>, <a>sasl_scram</a> - Details for SASL/SCRAM
--   client authentication.
newSasl :: Sasl

-- | Indicates whether IAM access control is enabled.
sasl_iam :: Lens' Sasl (Maybe Iam)

-- | Details for SASL/SCRAM client authentication.
sasl_scram :: Lens' Sasl (Maybe Scram)

-- | Details for SASL/SCRAM client authentication.
--   
--   <i>See:</i> <a>newScram</a> smart constructor.
data Scram
Scram' :: Maybe Bool -> Scram

-- | SASL/SCRAM authentication is enabled or not.
[$sel:enabled:Scram'] :: Scram -> Maybe Bool

-- | Create a value of <a>Scram</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:enabled:Scram'</a>, <a>scram_enabled</a> - SASL/SCRAM
--   authentication is enabled or not.
newScram :: Scram

-- | SASL/SCRAM authentication is enabled or not.
scram_enabled :: Lens' Scram (Maybe Bool)

-- | <i>See:</i> <a>newStateInfo</a> smart constructor.
data StateInfo
StateInfo' :: Maybe Text -> Maybe Text -> StateInfo
[$sel:code:StateInfo'] :: StateInfo -> Maybe Text
[$sel:message:StateInfo'] :: StateInfo -> Maybe Text

-- | Create a value of <a>StateInfo</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:code:StateInfo'</a>, <a>stateInfo_code</a> - Undocumented
--   member.
--   
--   <a>$sel:message:StateInfo'</a>, <a>stateInfo_message</a> -
--   Undocumented member.
newStateInfo :: StateInfo

-- | Undocumented member.
stateInfo_code :: Lens' StateInfo (Maybe Text)

-- | Undocumented member.
stateInfo_message :: Lens' StateInfo (Maybe Text)

-- | Contains information about storage volumes attached to MSK broker
--   nodes.
--   
--   <i>See:</i> <a>newStorageInfo</a> smart constructor.
data StorageInfo
StorageInfo' :: Maybe EBSStorageInfo -> StorageInfo

-- | EBS volume information.
[$sel:ebsStorageInfo:StorageInfo'] :: StorageInfo -> Maybe EBSStorageInfo

-- | Create a value of <a>StorageInfo</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ebsStorageInfo:StorageInfo'</a>,
--   <a>storageInfo_ebsStorageInfo</a> - EBS volume information.
newStorageInfo :: StorageInfo

-- | EBS volume information.
storageInfo_ebsStorageInfo :: Lens' StorageInfo (Maybe EBSStorageInfo)

-- | Details for client authentication using TLS.
--   
--   <i>See:</i> <a>newTls</a> smart constructor.
data Tls
Tls' :: Maybe Bool -> Maybe [Text] -> Tls

-- | Specifies whether you want to enable or disable TLS authentication.
[$sel:enabled:Tls'] :: Tls -> Maybe Bool

-- | List of ACM Certificate Authority ARNs.
[$sel:certificateAuthorityArnList:Tls'] :: Tls -> Maybe [Text]

-- | Create a value of <a>Tls</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:enabled:Tls'</a>, <a>tls_enabled</a> - Specifies whether you
--   want to enable or disable TLS authentication.
--   
--   <a>$sel:certificateAuthorityArnList:Tls'</a>,
--   <a>tls_certificateAuthorityArnList</a> - List of ACM Certificate
--   Authority ARNs.
newTls :: Tls

-- | Specifies whether you want to enable or disable TLS authentication.
tls_enabled :: Lens' Tls (Maybe Bool)

-- | List of ACM Certificate Authority ARNs.
tls_certificateAuthorityArnList :: Lens' Tls (Maybe [Text])

-- | <i>See:</i> <a>newUnauthenticated</a> smart constructor.
data Unauthenticated
Unauthenticated' :: Maybe Bool -> Unauthenticated

-- | Specifies whether you want to enable or disable unauthenticated
--   traffic to your cluster.
[$sel:enabled:Unauthenticated'] :: Unauthenticated -> Maybe Bool

-- | Create a value of <a>Unauthenticated</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:enabled:Unauthenticated'</a>, <a>unauthenticated_enabled</a> -
--   Specifies whether you want to enable or disable unauthenticated
--   traffic to your cluster.
newUnauthenticated :: Unauthenticated

-- | Specifies whether you want to enable or disable unauthenticated
--   traffic to your cluster.
unauthenticated_enabled :: Lens' Unauthenticated (Maybe Bool)

-- | Error info for scram secret associate/disassociate failure.
--   
--   <i>See:</i> <a>newUnprocessedScramSecret</a> smart constructor.
data UnprocessedScramSecret
UnprocessedScramSecret' :: Maybe Text -> Maybe Text -> Maybe Text -> UnprocessedScramSecret

-- | Error code for associate/disassociate failure.
[$sel:errorCode:UnprocessedScramSecret'] :: UnprocessedScramSecret -> Maybe Text

-- | Error message for associate/disassociate failure.
[$sel:errorMessage:UnprocessedScramSecret'] :: UnprocessedScramSecret -> Maybe Text

-- | AWS Secrets Manager secret ARN.
[$sel:secretArn:UnprocessedScramSecret'] :: UnprocessedScramSecret -> Maybe Text

-- | Create a value of <a>UnprocessedScramSecret</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:errorCode:UnprocessedScramSecret'</a>,
--   <a>unprocessedScramSecret_errorCode</a> - Error code for
--   associate/disassociate failure.
--   
--   <a>$sel:errorMessage:UnprocessedScramSecret'</a>,
--   <a>unprocessedScramSecret_errorMessage</a> - Error message for
--   associate/disassociate failure.
--   
--   <a>$sel:secretArn:UnprocessedScramSecret'</a>,
--   <a>unprocessedScramSecret_secretArn</a> - AWS Secrets Manager secret
--   ARN.
newUnprocessedScramSecret :: UnprocessedScramSecret

-- | Error code for associate/disassociate failure.
unprocessedScramSecret_errorCode :: Lens' UnprocessedScramSecret (Maybe Text)

-- | Error message for associate/disassociate failure.
unprocessedScramSecret_errorMessage :: Lens' UnprocessedScramSecret (Maybe Text)

-- | AWS Secrets Manager secret ARN.
unprocessedScramSecret_secretArn :: Lens' UnprocessedScramSecret (Maybe Text)

-- | Zookeeper node information.
--   
--   <i>See:</i> <a>newZookeeperNodeInfo</a> smart constructor.
data ZookeeperNodeInfo
ZookeeperNodeInfo' :: Maybe Text -> Maybe Text -> Maybe [Text] -> Maybe Text -> Maybe Double -> ZookeeperNodeInfo

-- | The version of Zookeeper.
[$sel:zookeeperVersion:ZookeeperNodeInfo'] :: ZookeeperNodeInfo -> Maybe Text

-- | The attached elastic network interface of the broker.
[$sel:attachedENIId:ZookeeperNodeInfo'] :: ZookeeperNodeInfo -> Maybe Text

-- | Endpoints for accessing the ZooKeeper.
[$sel:endpoints:ZookeeperNodeInfo'] :: ZookeeperNodeInfo -> Maybe [Text]

-- | The virtual private cloud (VPC) IP address of the client.
[$sel:clientVpcIpAddress:ZookeeperNodeInfo'] :: ZookeeperNodeInfo -> Maybe Text

-- | The role-specific ID for Zookeeper.
[$sel:zookeeperId:ZookeeperNodeInfo'] :: ZookeeperNodeInfo -> Maybe Double

-- | Create a value of <a>ZookeeperNodeInfo</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:zookeeperVersion:ZookeeperNodeInfo'</a>,
--   <a>zookeeperNodeInfo_zookeeperVersion</a> - The version of Zookeeper.
--   
--   <a>$sel:attachedENIId:ZookeeperNodeInfo'</a>,
--   <a>zookeeperNodeInfo_attachedENIId</a> - The attached elastic network
--   interface of the broker.
--   
--   <a>$sel:endpoints:ZookeeperNodeInfo'</a>,
--   <a>zookeeperNodeInfo_endpoints</a> - Endpoints for accessing the
--   ZooKeeper.
--   
--   <a>$sel:clientVpcIpAddress:ZookeeperNodeInfo'</a>,
--   <a>zookeeperNodeInfo_clientVpcIpAddress</a> - The virtual private
--   cloud (VPC) IP address of the client.
--   
--   <a>$sel:zookeeperId:ZookeeperNodeInfo'</a>,
--   <a>zookeeperNodeInfo_zookeeperId</a> - The role-specific ID for
--   Zookeeper.
newZookeeperNodeInfo :: ZookeeperNodeInfo

-- | The version of Zookeeper.
zookeeperNodeInfo_zookeeperVersion :: Lens' ZookeeperNodeInfo (Maybe Text)

-- | The attached elastic network interface of the broker.
zookeeperNodeInfo_attachedENIId :: Lens' ZookeeperNodeInfo (Maybe Text)

-- | Endpoints for accessing the ZooKeeper.
zookeeperNodeInfo_endpoints :: Lens' ZookeeperNodeInfo (Maybe [Text])

-- | The virtual private cloud (VPC) IP address of the client.
zookeeperNodeInfo_clientVpcIpAddress :: Lens' ZookeeperNodeInfo (Maybe Text)

-- | The role-specific ID for Zookeeper.
zookeeperNodeInfo_zookeeperId :: Lens' ZookeeperNodeInfo (Maybe Double)


-- | Adds tags to the specified MSK resource.
module Amazonka.Kafka.TagResource

-- | <i>See:</i> <a>newTagResource</a> smart constructor.
data TagResource
TagResource' :: Text -> HashMap Text Text -> TagResource

-- | The Amazon Resource Name (ARN) that uniquely identifies the resource
--   that's associated with the tags.
[$sel:resourceArn:TagResource'] :: TagResource -> Text

-- | The key-value pair for the resource tag.
[$sel:tags:TagResource'] :: TagResource -> HashMap Text Text

-- | Create a value of <a>TagResource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:TagResource'</a>, <a>tagResource_resourceArn</a> -
--   The Amazon Resource Name (ARN) that uniquely identifies the resource
--   that's associated with the tags.
--   
--   <a>$sel:tags:TagResource'</a>, <a>tagResource_tags</a> - The key-value
--   pair for the resource tag.
newTagResource :: Text -> TagResource

-- | The Amazon Resource Name (ARN) that uniquely identifies the resource
--   that's associated with the tags.
tagResource_resourceArn :: Lens' TagResource Text

-- | The key-value pair for the resource tag.
tagResource_tags :: Lens' TagResource (HashMap Text Text)

-- | <i>See:</i> <a>newTagResourceResponse</a> smart constructor.
data TagResourceResponse
TagResourceResponse' :: TagResourceResponse

-- | Create a value of <a>TagResourceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newTagResourceResponse :: TagResourceResponse
instance GHC.Generics.Generic Amazonka.Kafka.TagResource.TagResource
instance GHC.Show.Show Amazonka.Kafka.TagResource.TagResource
instance GHC.Read.Read Amazonka.Kafka.TagResource.TagResource
instance GHC.Classes.Eq Amazonka.Kafka.TagResource.TagResource
instance GHC.Generics.Generic Amazonka.Kafka.TagResource.TagResourceResponse
instance GHC.Show.Show Amazonka.Kafka.TagResource.TagResourceResponse
instance GHC.Read.Read Amazonka.Kafka.TagResource.TagResourceResponse
instance GHC.Classes.Eq Amazonka.Kafka.TagResource.TagResourceResponse
instance Amazonka.Types.AWSRequest Amazonka.Kafka.TagResource.TagResource
instance Control.DeepSeq.NFData Amazonka.Kafka.TagResource.TagResourceResponse
instance Data.Hashable.Class.Hashable Amazonka.Kafka.TagResource.TagResource
instance Control.DeepSeq.NFData Amazonka.Kafka.TagResource.TagResource
instance Amazonka.Data.Headers.ToHeaders Amazonka.Kafka.TagResource.TagResource
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Kafka.TagResource.TagResource
instance Amazonka.Data.Path.ToPath Amazonka.Kafka.TagResource.TagResource
instance Amazonka.Data.Query.ToQuery Amazonka.Kafka.TagResource.TagResource


-- | Reboots brokers.
module Amazonka.Kafka.RebootBroker

-- | Reboots a node.
--   
--   <i>See:</i> <a>newRebootBroker</a> smart constructor.
data RebootBroker
RebootBroker' :: Text -> [Text] -> RebootBroker

-- | The Amazon Resource Name (ARN) of the cluster to be updated.
[$sel:clusterArn:RebootBroker'] :: RebootBroker -> Text

-- | The list of broker IDs to be rebooted. The reboot-broker operation
--   supports rebooting one broker at a time.
[$sel:brokerIds:RebootBroker'] :: RebootBroker -> [Text]

-- | Create a value of <a>RebootBroker</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clusterArn:RebootBroker'</a>, <a>rebootBroker_clusterArn</a> -
--   The Amazon Resource Name (ARN) of the cluster to be updated.
--   
--   <a>$sel:brokerIds:RebootBroker'</a>, <a>rebootBroker_brokerIds</a> -
--   The list of broker IDs to be rebooted. The reboot-broker operation
--   supports rebooting one broker at a time.
newRebootBroker :: Text -> RebootBroker

-- | The Amazon Resource Name (ARN) of the cluster to be updated.
rebootBroker_clusterArn :: Lens' RebootBroker Text

-- | The list of broker IDs to be rebooted. The reboot-broker operation
--   supports rebooting one broker at a time.
rebootBroker_brokerIds :: Lens' RebootBroker [Text]

-- | <i>See:</i> <a>newRebootBrokerResponse</a> smart constructor.
data RebootBrokerResponse
RebootBrokerResponse' :: Maybe Text -> Maybe Text -> Int -> RebootBrokerResponse

-- | The Amazon Resource Name (ARN) of the cluster.
[$sel:clusterArn:RebootBrokerResponse'] :: RebootBrokerResponse -> Maybe Text

-- | The Amazon Resource Name (ARN) of the cluster operation.
[$sel:clusterOperationArn:RebootBrokerResponse'] :: RebootBrokerResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:RebootBrokerResponse'] :: RebootBrokerResponse -> Int

-- | Create a value of <a>RebootBrokerResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clusterArn:RebootBroker'</a>,
--   <a>rebootBrokerResponse_clusterArn</a> - The Amazon Resource Name
--   (ARN) of the cluster.
--   
--   <a>$sel:clusterOperationArn:RebootBrokerResponse'</a>,
--   <a>rebootBrokerResponse_clusterOperationArn</a> - The Amazon Resource
--   Name (ARN) of the cluster operation.
--   
--   <a>$sel:httpStatus:RebootBrokerResponse'</a>,
--   <a>rebootBrokerResponse_httpStatus</a> - The response's http status
--   code.
newRebootBrokerResponse :: Int -> RebootBrokerResponse

-- | The Amazon Resource Name (ARN) of the cluster.
rebootBrokerResponse_clusterArn :: Lens' RebootBrokerResponse (Maybe Text)

-- | The Amazon Resource Name (ARN) of the cluster operation.
rebootBrokerResponse_clusterOperationArn :: Lens' RebootBrokerResponse (Maybe Text)

-- | The response's http status code.
rebootBrokerResponse_httpStatus :: Lens' RebootBrokerResponse Int
instance GHC.Generics.Generic Amazonka.Kafka.RebootBroker.RebootBroker
instance GHC.Show.Show Amazonka.Kafka.RebootBroker.RebootBroker
instance GHC.Read.Read Amazonka.Kafka.RebootBroker.RebootBroker
instance GHC.Classes.Eq Amazonka.Kafka.RebootBroker.RebootBroker
instance GHC.Generics.Generic Amazonka.Kafka.RebootBroker.RebootBrokerResponse
instance GHC.Show.Show Amazonka.Kafka.RebootBroker.RebootBrokerResponse
instance GHC.Read.Read Amazonka.Kafka.RebootBroker.RebootBrokerResponse
instance GHC.Classes.Eq Amazonka.Kafka.RebootBroker.RebootBrokerResponse
instance Amazonka.Types.AWSRequest Amazonka.Kafka.RebootBroker.RebootBroker
instance Control.DeepSeq.NFData Amazonka.Kafka.RebootBroker.RebootBrokerResponse
instance Data.Hashable.Class.Hashable Amazonka.Kafka.RebootBroker.RebootBroker
instance Control.DeepSeq.NFData Amazonka.Kafka.RebootBroker.RebootBroker
instance Amazonka.Data.Headers.ToHeaders Amazonka.Kafka.RebootBroker.RebootBroker
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Kafka.RebootBroker.RebootBroker
instance Amazonka.Data.Path.ToPath Amazonka.Kafka.RebootBroker.RebootBroker
instance Amazonka.Data.Query.ToQuery Amazonka.Kafka.RebootBroker.RebootBroker


-- | Returns a list of the tags associated with the specified resource.
module Amazonka.Kafka.ListTagsForResource

-- | <i>See:</i> <a>newListTagsForResource</a> smart constructor.
data ListTagsForResource
ListTagsForResource' :: Text -> ListTagsForResource

-- | The Amazon Resource Name (ARN) that uniquely identifies the resource
--   that's associated with the tags.
[$sel:resourceArn:ListTagsForResource'] :: ListTagsForResource -> Text

-- | Create a value of <a>ListTagsForResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:ListTagsForResource'</a>,
--   <a>listTagsForResource_resourceArn</a> - The Amazon Resource Name
--   (ARN) that uniquely identifies the resource that's associated with the
--   tags.
newListTagsForResource :: Text -> ListTagsForResource

-- | The Amazon Resource Name (ARN) that uniquely identifies the resource
--   that's associated with the tags.
listTagsForResource_resourceArn :: Lens' ListTagsForResource Text

-- | <i>See:</i> <a>newListTagsForResourceResponse</a> smart constructor.
data ListTagsForResourceResponse
ListTagsForResourceResponse' :: Maybe (HashMap Text Text) -> Int -> ListTagsForResourceResponse

-- | The key-value pair for the resource tag.
[$sel:tags:ListTagsForResourceResponse'] :: ListTagsForResourceResponse -> Maybe (HashMap Text Text)

-- | The response's http status code.
[$sel:httpStatus:ListTagsForResourceResponse'] :: ListTagsForResourceResponse -> Int

-- | Create a value of <a>ListTagsForResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_tags</a> - The key-value pair for the
--   resource tag.
--   
--   <a>$sel:httpStatus:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_httpStatus</a> - The response's http
--   status code.
newListTagsForResourceResponse :: Int -> ListTagsForResourceResponse

-- | The key-value pair for the resource tag.
listTagsForResourceResponse_tags :: Lens' ListTagsForResourceResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
listTagsForResourceResponse_httpStatus :: Lens' ListTagsForResourceResponse Int
instance GHC.Generics.Generic Amazonka.Kafka.ListTagsForResource.ListTagsForResource
instance GHC.Show.Show Amazonka.Kafka.ListTagsForResource.ListTagsForResource
instance GHC.Read.Read Amazonka.Kafka.ListTagsForResource.ListTagsForResource
instance GHC.Classes.Eq Amazonka.Kafka.ListTagsForResource.ListTagsForResource
instance GHC.Generics.Generic Amazonka.Kafka.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Show.Show Amazonka.Kafka.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Read.Read Amazonka.Kafka.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Classes.Eq Amazonka.Kafka.ListTagsForResource.ListTagsForResourceResponse
instance Amazonka.Types.AWSRequest Amazonka.Kafka.ListTagsForResource.ListTagsForResource
instance Control.DeepSeq.NFData Amazonka.Kafka.ListTagsForResource.ListTagsForResourceResponse
instance Data.Hashable.Class.Hashable Amazonka.Kafka.ListTagsForResource.ListTagsForResource
instance Control.DeepSeq.NFData Amazonka.Kafka.ListTagsForResource.ListTagsForResource
instance Amazonka.Data.Headers.ToHeaders Amazonka.Kafka.ListTagsForResource.ListTagsForResource
instance Amazonka.Data.Path.ToPath Amazonka.Kafka.ListTagsForResource.ListTagsForResource
instance Amazonka.Data.Query.ToQuery Amazonka.Kafka.ListTagsForResource.ListTagsForResource


-- | Returns a list of the Scram Secrets associated with an Amazon MSK
--   cluster.
--   
--   This operation returns paginated results.
module Amazonka.Kafka.ListScramSecrets

-- | <i>See:</i> <a>newListScramSecrets</a> smart constructor.
data ListScramSecrets
ListScramSecrets' :: Maybe Text -> Maybe Natural -> Text -> ListScramSecrets

-- | The nextToken of the query.
[$sel:nextToken:ListScramSecrets'] :: ListScramSecrets -> Maybe Text

-- | The maxResults of the query.
[$sel:maxResults:ListScramSecrets'] :: ListScramSecrets -> Maybe Natural

-- | The arn of the cluster.
[$sel:clusterArn:ListScramSecrets'] :: ListScramSecrets -> Text

-- | Create a value of <a>ListScramSecrets</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListScramSecrets'</a>,
--   <a>listScramSecrets_nextToken</a> - The nextToken of the query.
--   
--   <a>$sel:maxResults:ListScramSecrets'</a>,
--   <a>listScramSecrets_maxResults</a> - The maxResults of the query.
--   
--   <a>$sel:clusterArn:ListScramSecrets'</a>,
--   <a>listScramSecrets_clusterArn</a> - The arn of the cluster.
newListScramSecrets :: Text -> ListScramSecrets

-- | The nextToken of the query.
listScramSecrets_nextToken :: Lens' ListScramSecrets (Maybe Text)

-- | The maxResults of the query.
listScramSecrets_maxResults :: Lens' ListScramSecrets (Maybe Natural)

-- | The arn of the cluster.
listScramSecrets_clusterArn :: Lens' ListScramSecrets Text

-- | <i>See:</i> <a>newListScramSecretsResponse</a> smart constructor.
data ListScramSecretsResponse
ListScramSecretsResponse' :: Maybe Text -> Maybe [Text] -> Int -> ListScramSecretsResponse

-- | Paginated results marker.
[$sel:nextToken:ListScramSecretsResponse'] :: ListScramSecretsResponse -> Maybe Text

-- | The list of scram secrets associated with the cluster.
[$sel:secretArnList:ListScramSecretsResponse'] :: ListScramSecretsResponse -> Maybe [Text]

-- | The response's http status code.
[$sel:httpStatus:ListScramSecretsResponse'] :: ListScramSecretsResponse -> Int

-- | Create a value of <a>ListScramSecretsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListScramSecrets'</a>,
--   <a>listScramSecretsResponse_nextToken</a> - Paginated results marker.
--   
--   <a>$sel:secretArnList:ListScramSecretsResponse'</a>,
--   <a>listScramSecretsResponse_secretArnList</a> - The list of scram
--   secrets associated with the cluster.
--   
--   <a>$sel:httpStatus:ListScramSecretsResponse'</a>,
--   <a>listScramSecretsResponse_httpStatus</a> - The response's http
--   status code.
newListScramSecretsResponse :: Int -> ListScramSecretsResponse

-- | Paginated results marker.
listScramSecretsResponse_nextToken :: Lens' ListScramSecretsResponse (Maybe Text)

-- | The list of scram secrets associated with the cluster.
listScramSecretsResponse_secretArnList :: Lens' ListScramSecretsResponse (Maybe [Text])

-- | The response's http status code.
listScramSecretsResponse_httpStatus :: Lens' ListScramSecretsResponse Int
instance GHC.Generics.Generic Amazonka.Kafka.ListScramSecrets.ListScramSecrets
instance GHC.Show.Show Amazonka.Kafka.ListScramSecrets.ListScramSecrets
instance GHC.Read.Read Amazonka.Kafka.ListScramSecrets.ListScramSecrets
instance GHC.Classes.Eq Amazonka.Kafka.ListScramSecrets.ListScramSecrets
instance GHC.Generics.Generic Amazonka.Kafka.ListScramSecrets.ListScramSecretsResponse
instance GHC.Show.Show Amazonka.Kafka.ListScramSecrets.ListScramSecretsResponse
instance GHC.Read.Read Amazonka.Kafka.ListScramSecrets.ListScramSecretsResponse
instance GHC.Classes.Eq Amazonka.Kafka.ListScramSecrets.ListScramSecretsResponse
instance Amazonka.Types.AWSRequest Amazonka.Kafka.ListScramSecrets.ListScramSecrets
instance Control.DeepSeq.NFData Amazonka.Kafka.ListScramSecrets.ListScramSecretsResponse
instance Amazonka.Pager.AWSPager Amazonka.Kafka.ListScramSecrets.ListScramSecrets
instance Data.Hashable.Class.Hashable Amazonka.Kafka.ListScramSecrets.ListScramSecrets
instance Control.DeepSeq.NFData Amazonka.Kafka.ListScramSecrets.ListScramSecrets
instance Amazonka.Data.Headers.ToHeaders Amazonka.Kafka.ListScramSecrets.ListScramSecrets
instance Amazonka.Data.Path.ToPath Amazonka.Kafka.ListScramSecrets.ListScramSecrets
instance Amazonka.Data.Query.ToQuery Amazonka.Kafka.ListScramSecrets.ListScramSecrets


-- | Returns a list of the broker nodes in the cluster.
--   
--   This operation returns paginated results.
module Amazonka.Kafka.ListNodes

-- | <i>See:</i> <a>newListNodes</a> smart constructor.
data ListNodes
ListNodes' :: Maybe Text -> Maybe Natural -> Text -> ListNodes

-- | The paginated results marker. When the result of the operation is
--   truncated, the call returns NextToken in the response. To get the next
--   batch, provide this token in your next request.
[$sel:nextToken:ListNodes'] :: ListNodes -> Maybe Text

-- | The maximum number of results to return in the response. If there are
--   more results, the response includes a NextToken parameter.
[$sel:maxResults:ListNodes'] :: ListNodes -> Maybe Natural

-- | The Amazon Resource Name (ARN) that uniquely identifies the cluster.
[$sel:clusterArn:ListNodes'] :: ListNodes -> Text

-- | Create a value of <a>ListNodes</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListNodes'</a>, <a>listNodes_nextToken</a> - The
--   paginated results marker. When the result of the operation is
--   truncated, the call returns NextToken in the response. To get the next
--   batch, provide this token in your next request.
--   
--   <a>$sel:maxResults:ListNodes'</a>, <a>listNodes_maxResults</a> - The
--   maximum number of results to return in the response. If there are more
--   results, the response includes a NextToken parameter.
--   
--   <a>$sel:clusterArn:ListNodes'</a>, <a>listNodes_clusterArn</a> - The
--   Amazon Resource Name (ARN) that uniquely identifies the cluster.
newListNodes :: Text -> ListNodes

-- | The paginated results marker. When the result of the operation is
--   truncated, the call returns NextToken in the response. To get the next
--   batch, provide this token in your next request.
listNodes_nextToken :: Lens' ListNodes (Maybe Text)

-- | The maximum number of results to return in the response. If there are
--   more results, the response includes a NextToken parameter.
listNodes_maxResults :: Lens' ListNodes (Maybe Natural)

-- | The Amazon Resource Name (ARN) that uniquely identifies the cluster.
listNodes_clusterArn :: Lens' ListNodes Text

-- | <i>See:</i> <a>newListNodesResponse</a> smart constructor.
data ListNodesResponse
ListNodesResponse' :: Maybe [NodeInfo] -> Maybe Text -> Int -> ListNodesResponse

-- | List containing a NodeInfo object.
[$sel:nodeInfoList:ListNodesResponse'] :: ListNodesResponse -> Maybe [NodeInfo]

-- | The paginated results marker. When the result of a ListNodes operation
--   is truncated, the call returns NextToken in the response. To get
--   another batch of nodes, provide this token in your next request.
[$sel:nextToken:ListNodesResponse'] :: ListNodesResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListNodesResponse'] :: ListNodesResponse -> Int

-- | Create a value of <a>ListNodesResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nodeInfoList:ListNodesResponse'</a>,
--   <a>listNodesResponse_nodeInfoList</a> - List containing a NodeInfo
--   object.
--   
--   <a>$sel:nextToken:ListNodes'</a>, <a>listNodesResponse_nextToken</a> -
--   The paginated results marker. When the result of a ListNodes operation
--   is truncated, the call returns NextToken in the response. To get
--   another batch of nodes, provide this token in your next request.
--   
--   <a>$sel:httpStatus:ListNodesResponse'</a>,
--   <a>listNodesResponse_httpStatus</a> - The response's http status code.
newListNodesResponse :: Int -> ListNodesResponse

-- | List containing a NodeInfo object.
listNodesResponse_nodeInfoList :: Lens' ListNodesResponse (Maybe [NodeInfo])

-- | The paginated results marker. When the result of a ListNodes operation
--   is truncated, the call returns NextToken in the response. To get
--   another batch of nodes, provide this token in your next request.
listNodesResponse_nextToken :: Lens' ListNodesResponse (Maybe Text)

-- | The response's http status code.
listNodesResponse_httpStatus :: Lens' ListNodesResponse Int
instance GHC.Generics.Generic Amazonka.Kafka.ListNodes.ListNodes
instance GHC.Show.Show Amazonka.Kafka.ListNodes.ListNodes
instance GHC.Read.Read Amazonka.Kafka.ListNodes.ListNodes
instance GHC.Classes.Eq Amazonka.Kafka.ListNodes.ListNodes
instance GHC.Generics.Generic Amazonka.Kafka.ListNodes.ListNodesResponse
instance GHC.Show.Show Amazonka.Kafka.ListNodes.ListNodesResponse
instance GHC.Read.Read Amazonka.Kafka.ListNodes.ListNodesResponse
instance GHC.Classes.Eq Amazonka.Kafka.ListNodes.ListNodesResponse
instance Amazonka.Types.AWSRequest Amazonka.Kafka.ListNodes.ListNodes
instance Control.DeepSeq.NFData Amazonka.Kafka.ListNodes.ListNodesResponse
instance Amazonka.Pager.AWSPager Amazonka.Kafka.ListNodes.ListNodes
instance Data.Hashable.Class.Hashable Amazonka.Kafka.ListNodes.ListNodes
instance Control.DeepSeq.NFData Amazonka.Kafka.ListNodes.ListNodes
instance Amazonka.Data.Headers.ToHeaders Amazonka.Kafka.ListNodes.ListNodes
instance Amazonka.Data.Path.ToPath Amazonka.Kafka.ListNodes.ListNodes
instance Amazonka.Data.Query.ToQuery Amazonka.Kafka.ListNodes.ListNodes


-- | Returns a list of Kafka versions.
--   
--   This operation returns paginated results.
module Amazonka.Kafka.ListKafkaVersions

-- | <i>See:</i> <a>newListKafkaVersions</a> smart constructor.
data ListKafkaVersions
ListKafkaVersions' :: Maybe Text -> Maybe Natural -> ListKafkaVersions

-- | The paginated results marker. When the result of the operation is
--   truncated, the call returns NextToken in the response. To get the next
--   batch, provide this token in your next request.
[$sel:nextToken:ListKafkaVersions'] :: ListKafkaVersions -> Maybe Text

-- | The maximum number of results to return in the response. If there are
--   more results, the response includes a NextToken parameter.
[$sel:maxResults:ListKafkaVersions'] :: ListKafkaVersions -> Maybe Natural

-- | Create a value of <a>ListKafkaVersions</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListKafkaVersions'</a>,
--   <a>listKafkaVersions_nextToken</a> - The paginated results marker.
--   When the result of the operation is truncated, the call returns
--   NextToken in the response. To get the next batch, provide this token
--   in your next request.
--   
--   <a>$sel:maxResults:ListKafkaVersions'</a>,
--   <a>listKafkaVersions_maxResults</a> - The maximum number of results to
--   return in the response. If there are more results, the response
--   includes a NextToken parameter.
newListKafkaVersions :: ListKafkaVersions

-- | The paginated results marker. When the result of the operation is
--   truncated, the call returns NextToken in the response. To get the next
--   batch, provide this token in your next request.
listKafkaVersions_nextToken :: Lens' ListKafkaVersions (Maybe Text)

-- | The maximum number of results to return in the response. If there are
--   more results, the response includes a NextToken parameter.
listKafkaVersions_maxResults :: Lens' ListKafkaVersions (Maybe Natural)

-- | <i>See:</i> <a>newListKafkaVersionsResponse</a> smart constructor.
data ListKafkaVersionsResponse
ListKafkaVersionsResponse' :: Maybe [KafkaVersion] -> Maybe Text -> Int -> ListKafkaVersionsResponse
[$sel:kafkaVersions:ListKafkaVersionsResponse'] :: ListKafkaVersionsResponse -> Maybe [KafkaVersion]
[$sel:nextToken:ListKafkaVersionsResponse'] :: ListKafkaVersionsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListKafkaVersionsResponse'] :: ListKafkaVersionsResponse -> Int

-- | Create a value of <a>ListKafkaVersionsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:kafkaVersions:ListKafkaVersionsResponse'</a>,
--   <a>listKafkaVersionsResponse_kafkaVersions</a> - Undocumented member.
--   
--   <a>$sel:nextToken:ListKafkaVersions'</a>,
--   <a>listKafkaVersionsResponse_nextToken</a> - Undocumented member.
--   
--   <a>$sel:httpStatus:ListKafkaVersionsResponse'</a>,
--   <a>listKafkaVersionsResponse_httpStatus</a> - The response's http
--   status code.
newListKafkaVersionsResponse :: Int -> ListKafkaVersionsResponse

-- | Undocumented member.
listKafkaVersionsResponse_kafkaVersions :: Lens' ListKafkaVersionsResponse (Maybe [KafkaVersion])

-- | Undocumented member.
listKafkaVersionsResponse_nextToken :: Lens' ListKafkaVersionsResponse (Maybe Text)

-- | The response's http status code.
listKafkaVersionsResponse_httpStatus :: Lens' ListKafkaVersionsResponse Int
instance GHC.Generics.Generic Amazonka.Kafka.ListKafkaVersions.ListKafkaVersions
instance GHC.Show.Show Amazonka.Kafka.ListKafkaVersions.ListKafkaVersions
instance GHC.Read.Read Amazonka.Kafka.ListKafkaVersions.ListKafkaVersions
instance GHC.Classes.Eq Amazonka.Kafka.ListKafkaVersions.ListKafkaVersions
instance GHC.Generics.Generic Amazonka.Kafka.ListKafkaVersions.ListKafkaVersionsResponse
instance GHC.Show.Show Amazonka.Kafka.ListKafkaVersions.ListKafkaVersionsResponse
instance GHC.Read.Read Amazonka.Kafka.ListKafkaVersions.ListKafkaVersionsResponse
instance GHC.Classes.Eq Amazonka.Kafka.ListKafkaVersions.ListKafkaVersionsResponse
instance Amazonka.Types.AWSRequest Amazonka.Kafka.ListKafkaVersions.ListKafkaVersions
instance Control.DeepSeq.NFData Amazonka.Kafka.ListKafkaVersions.ListKafkaVersionsResponse
instance Amazonka.Pager.AWSPager Amazonka.Kafka.ListKafkaVersions.ListKafkaVersions
instance Data.Hashable.Class.Hashable Amazonka.Kafka.ListKafkaVersions.ListKafkaVersions
instance Control.DeepSeq.NFData Amazonka.Kafka.ListKafkaVersions.ListKafkaVersions
instance Amazonka.Data.Headers.ToHeaders Amazonka.Kafka.ListKafkaVersions.ListKafkaVersions
instance Amazonka.Data.Path.ToPath Amazonka.Kafka.ListKafkaVersions.ListKafkaVersions
instance Amazonka.Data.Query.ToQuery Amazonka.Kafka.ListKafkaVersions.ListKafkaVersions


-- | Returns a list of all the MSK configurations in this Region.
--   
--   This operation returns paginated results.
module Amazonka.Kafka.ListConfigurations

-- | <i>See:</i> <a>newListConfigurations</a> smart constructor.
data ListConfigurations
ListConfigurations' :: Maybe Text -> Maybe Natural -> ListConfigurations

-- | The paginated results marker. When the result of the operation is
--   truncated, the call returns NextToken in the response. To get the next
--   batch, provide this token in your next request.
[$sel:nextToken:ListConfigurations'] :: ListConfigurations -> Maybe Text

-- | The maximum number of results to return in the response. If there are
--   more results, the response includes a NextToken parameter.
[$sel:maxResults:ListConfigurations'] :: ListConfigurations -> Maybe Natural

-- | Create a value of <a>ListConfigurations</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListConfigurations'</a>,
--   <a>listConfigurations_nextToken</a> - The paginated results marker.
--   When the result of the operation is truncated, the call returns
--   NextToken in the response. To get the next batch, provide this token
--   in your next request.
--   
--   <a>$sel:maxResults:ListConfigurations'</a>,
--   <a>listConfigurations_maxResults</a> - The maximum number of results
--   to return in the response. If there are more results, the response
--   includes a NextToken parameter.
newListConfigurations :: ListConfigurations

-- | The paginated results marker. When the result of the operation is
--   truncated, the call returns NextToken in the response. To get the next
--   batch, provide this token in your next request.
listConfigurations_nextToken :: Lens' ListConfigurations (Maybe Text)

-- | The maximum number of results to return in the response. If there are
--   more results, the response includes a NextToken parameter.
listConfigurations_maxResults :: Lens' ListConfigurations (Maybe Natural)

-- | <i>See:</i> <a>newListConfigurationsResponse</a> smart constructor.
data ListConfigurationsResponse
ListConfigurationsResponse' :: Maybe [Configuration] -> Maybe Text -> Int -> ListConfigurationsResponse

-- | An array of MSK configurations.
[$sel:configurations:ListConfigurationsResponse'] :: ListConfigurationsResponse -> Maybe [Configuration]

-- | The paginated results marker. When the result of a ListConfigurations
--   operation is truncated, the call returns NextToken in the response. To
--   get another batch of configurations, provide this token in your next
--   request.
[$sel:nextToken:ListConfigurationsResponse'] :: ListConfigurationsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListConfigurationsResponse'] :: ListConfigurationsResponse -> Int

-- | Create a value of <a>ListConfigurationsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:configurations:ListConfigurationsResponse'</a>,
--   <a>listConfigurationsResponse_configurations</a> - An array of MSK
--   configurations.
--   
--   <a>$sel:nextToken:ListConfigurations'</a>,
--   <a>listConfigurationsResponse_nextToken</a> - The paginated results
--   marker. When the result of a ListConfigurations operation is
--   truncated, the call returns NextToken in the response. To get another
--   batch of configurations, provide this token in your next request.
--   
--   <a>$sel:httpStatus:ListConfigurationsResponse'</a>,
--   <a>listConfigurationsResponse_httpStatus</a> - The response's http
--   status code.
newListConfigurationsResponse :: Int -> ListConfigurationsResponse

-- | An array of MSK configurations.
listConfigurationsResponse_configurations :: Lens' ListConfigurationsResponse (Maybe [Configuration])

-- | The paginated results marker. When the result of a ListConfigurations
--   operation is truncated, the call returns NextToken in the response. To
--   get another batch of configurations, provide this token in your next
--   request.
listConfigurationsResponse_nextToken :: Lens' ListConfigurationsResponse (Maybe Text)

-- | The response's http status code.
listConfigurationsResponse_httpStatus :: Lens' ListConfigurationsResponse Int
instance GHC.Generics.Generic Amazonka.Kafka.ListConfigurations.ListConfigurations
instance GHC.Show.Show Amazonka.Kafka.ListConfigurations.ListConfigurations
instance GHC.Read.Read Amazonka.Kafka.ListConfigurations.ListConfigurations
instance GHC.Classes.Eq Amazonka.Kafka.ListConfigurations.ListConfigurations
instance GHC.Generics.Generic Amazonka.Kafka.ListConfigurations.ListConfigurationsResponse
instance GHC.Show.Show Amazonka.Kafka.ListConfigurations.ListConfigurationsResponse
instance GHC.Read.Read Amazonka.Kafka.ListConfigurations.ListConfigurationsResponse
instance GHC.Classes.Eq Amazonka.Kafka.ListConfigurations.ListConfigurationsResponse
instance Amazonka.Types.AWSRequest Amazonka.Kafka.ListConfigurations.ListConfigurations
instance Control.DeepSeq.NFData Amazonka.Kafka.ListConfigurations.ListConfigurationsResponse
instance Amazonka.Pager.AWSPager Amazonka.Kafka.ListConfigurations.ListConfigurations
instance Data.Hashable.Class.Hashable Amazonka.Kafka.ListConfigurations.ListConfigurations
instance Control.DeepSeq.NFData Amazonka.Kafka.ListConfigurations.ListConfigurations
instance Amazonka.Data.Headers.ToHeaders Amazonka.Kafka.ListConfigurations.ListConfigurations
instance Amazonka.Data.Path.ToPath Amazonka.Kafka.ListConfigurations.ListConfigurations
instance Amazonka.Data.Query.ToQuery Amazonka.Kafka.ListConfigurations.ListConfigurations


-- | Returns a list of all the MSK configurations in this Region.
--   
--   This operation returns paginated results.
module Amazonka.Kafka.ListConfigurationRevisions

-- | <i>See:</i> <a>newListConfigurationRevisions</a> smart constructor.
data ListConfigurationRevisions
ListConfigurationRevisions' :: Maybe Text -> Maybe Natural -> Text -> ListConfigurationRevisions

-- | The paginated results marker. When the result of the operation is
--   truncated, the call returns NextToken in the response. To get the next
--   batch, provide this token in your next request.
[$sel:nextToken:ListConfigurationRevisions'] :: ListConfigurationRevisions -> Maybe Text

-- | The maximum number of results to return in the response. If there are
--   more results, the response includes a NextToken parameter.
[$sel:maxResults:ListConfigurationRevisions'] :: ListConfigurationRevisions -> Maybe Natural

-- | The Amazon Resource Name (ARN) that uniquely identifies an MSK
--   configuration and all of its revisions.
[$sel:arn:ListConfigurationRevisions'] :: ListConfigurationRevisions -> Text

-- | Create a value of <a>ListConfigurationRevisions</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListConfigurationRevisions'</a>,
--   <a>listConfigurationRevisions_nextToken</a> - The paginated results
--   marker. When the result of the operation is truncated, the call
--   returns NextToken in the response. To get the next batch, provide this
--   token in your next request.
--   
--   <a>$sel:maxResults:ListConfigurationRevisions'</a>,
--   <a>listConfigurationRevisions_maxResults</a> - The maximum number of
--   results to return in the response. If there are more results, the
--   response includes a NextToken parameter.
--   
--   <a>$sel:arn:ListConfigurationRevisions'</a>,
--   <a>listConfigurationRevisions_arn</a> - The Amazon Resource Name (ARN)
--   that uniquely identifies an MSK configuration and all of its
--   revisions.
newListConfigurationRevisions :: Text -> ListConfigurationRevisions

-- | The paginated results marker. When the result of the operation is
--   truncated, the call returns NextToken in the response. To get the next
--   batch, provide this token in your next request.
listConfigurationRevisions_nextToken :: Lens' ListConfigurationRevisions (Maybe Text)

-- | The maximum number of results to return in the response. If there are
--   more results, the response includes a NextToken parameter.
listConfigurationRevisions_maxResults :: Lens' ListConfigurationRevisions (Maybe Natural)

-- | The Amazon Resource Name (ARN) that uniquely identifies an MSK
--   configuration and all of its revisions.
listConfigurationRevisions_arn :: Lens' ListConfigurationRevisions Text

-- | <i>See:</i> <a>newListConfigurationRevisionsResponse</a> smart
--   constructor.
data ListConfigurationRevisionsResponse
ListConfigurationRevisionsResponse' :: Maybe Text -> Maybe [ConfigurationRevision] -> Int -> ListConfigurationRevisionsResponse

-- | Paginated results marker.
[$sel:nextToken:ListConfigurationRevisionsResponse'] :: ListConfigurationRevisionsResponse -> Maybe Text

-- | List of ConfigurationRevision objects.
[$sel:revisions:ListConfigurationRevisionsResponse'] :: ListConfigurationRevisionsResponse -> Maybe [ConfigurationRevision]

-- | The response's http status code.
[$sel:httpStatus:ListConfigurationRevisionsResponse'] :: ListConfigurationRevisionsResponse -> Int

-- | Create a value of <a>ListConfigurationRevisionsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListConfigurationRevisions'</a>,
--   <a>listConfigurationRevisionsResponse_nextToken</a> - Paginated
--   results marker.
--   
--   <a>$sel:revisions:ListConfigurationRevisionsResponse'</a>,
--   <a>listConfigurationRevisionsResponse_revisions</a> - List of
--   ConfigurationRevision objects.
--   
--   <a>$sel:httpStatus:ListConfigurationRevisionsResponse'</a>,
--   <a>listConfigurationRevisionsResponse_httpStatus</a> - The response's
--   http status code.
newListConfigurationRevisionsResponse :: Int -> ListConfigurationRevisionsResponse

-- | Paginated results marker.
listConfigurationRevisionsResponse_nextToken :: Lens' ListConfigurationRevisionsResponse (Maybe Text)

-- | List of ConfigurationRevision objects.
listConfigurationRevisionsResponse_revisions :: Lens' ListConfigurationRevisionsResponse (Maybe [ConfigurationRevision])

-- | The response's http status code.
listConfigurationRevisionsResponse_httpStatus :: Lens' ListConfigurationRevisionsResponse Int
instance GHC.Generics.Generic Amazonka.Kafka.ListConfigurationRevisions.ListConfigurationRevisions
instance GHC.Show.Show Amazonka.Kafka.ListConfigurationRevisions.ListConfigurationRevisions
instance GHC.Read.Read Amazonka.Kafka.ListConfigurationRevisions.ListConfigurationRevisions
instance GHC.Classes.Eq Amazonka.Kafka.ListConfigurationRevisions.ListConfigurationRevisions
instance GHC.Generics.Generic Amazonka.Kafka.ListConfigurationRevisions.ListConfigurationRevisionsResponse
instance GHC.Show.Show Amazonka.Kafka.ListConfigurationRevisions.ListConfigurationRevisionsResponse
instance GHC.Read.Read Amazonka.Kafka.ListConfigurationRevisions.ListConfigurationRevisionsResponse
instance GHC.Classes.Eq Amazonka.Kafka.ListConfigurationRevisions.ListConfigurationRevisionsResponse
instance Amazonka.Types.AWSRequest Amazonka.Kafka.ListConfigurationRevisions.ListConfigurationRevisions
instance Control.DeepSeq.NFData Amazonka.Kafka.ListConfigurationRevisions.ListConfigurationRevisionsResponse
instance Amazonka.Pager.AWSPager Amazonka.Kafka.ListConfigurationRevisions.ListConfigurationRevisions
instance Data.Hashable.Class.Hashable Amazonka.Kafka.ListConfigurationRevisions.ListConfigurationRevisions
instance Control.DeepSeq.NFData Amazonka.Kafka.ListConfigurationRevisions.ListConfigurationRevisions
instance Amazonka.Data.Headers.ToHeaders Amazonka.Kafka.ListConfigurationRevisions.ListConfigurationRevisions
instance Amazonka.Data.Path.ToPath Amazonka.Kafka.ListConfigurationRevisions.ListConfigurationRevisions
instance Amazonka.Data.Query.ToQuery Amazonka.Kafka.ListConfigurationRevisions.ListConfigurationRevisions


-- | Returns a list of all the MSK clusters in the current Region.
--   
--   This operation returns paginated results.
module Amazonka.Kafka.ListClusters

-- | <i>See:</i> <a>newListClusters</a> smart constructor.
data ListClusters
ListClusters' :: Maybe Text -> Maybe Text -> Maybe Natural -> ListClusters

-- | Specify a prefix of the name of the clusters that you want to list.
--   The service lists all the clusters whose names start with this prefix.
[$sel:clusterNameFilter:ListClusters'] :: ListClusters -> Maybe Text

-- | The paginated results marker. When the result of the operation is
--   truncated, the call returns NextToken in the response. To get the next
--   batch, provide this token in your next request.
[$sel:nextToken:ListClusters'] :: ListClusters -> Maybe Text

-- | The maximum number of results to return in the response. If there are
--   more results, the response includes a NextToken parameter.
[$sel:maxResults:ListClusters'] :: ListClusters -> Maybe Natural

-- | Create a value of <a>ListClusters</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clusterNameFilter:ListClusters'</a>,
--   <a>listClusters_clusterNameFilter</a> - Specify a prefix of the name
--   of the clusters that you want to list. The service lists all the
--   clusters whose names start with this prefix.
--   
--   <a>$sel:nextToken:ListClusters'</a>, <a>listClusters_nextToken</a> -
--   The paginated results marker. When the result of the operation is
--   truncated, the call returns NextToken in the response. To get the next
--   batch, provide this token in your next request.
--   
--   <a>$sel:maxResults:ListClusters'</a>, <a>listClusters_maxResults</a> -
--   The maximum number of results to return in the response. If there are
--   more results, the response includes a NextToken parameter.
newListClusters :: ListClusters

-- | Specify a prefix of the name of the clusters that you want to list.
--   The service lists all the clusters whose names start with this prefix.
listClusters_clusterNameFilter :: Lens' ListClusters (Maybe Text)

-- | The paginated results marker. When the result of the operation is
--   truncated, the call returns NextToken in the response. To get the next
--   batch, provide this token in your next request.
listClusters_nextToken :: Lens' ListClusters (Maybe Text)

-- | The maximum number of results to return in the response. If there are
--   more results, the response includes a NextToken parameter.
listClusters_maxResults :: Lens' ListClusters (Maybe Natural)

-- | <i>See:</i> <a>newListClustersResponse</a> smart constructor.
data ListClustersResponse
ListClustersResponse' :: Maybe Text -> Maybe [ClusterInfo] -> Int -> ListClustersResponse

-- | The paginated results marker. When the result of a ListClusters
--   operation is truncated, the call returns NextToken in the response. To
--   get another batch of clusters, provide this token in your next
--   request.
[$sel:nextToken:ListClustersResponse'] :: ListClustersResponse -> Maybe Text

-- | Information on each of the MSK clusters in the response.
[$sel:clusterInfoList:ListClustersResponse'] :: ListClustersResponse -> Maybe [ClusterInfo]

-- | The response's http status code.
[$sel:httpStatus:ListClustersResponse'] :: ListClustersResponse -> Int

-- | Create a value of <a>ListClustersResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListClusters'</a>,
--   <a>listClustersResponse_nextToken</a> - The paginated results marker.
--   When the result of a ListClusters operation is truncated, the call
--   returns NextToken in the response. To get another batch of clusters,
--   provide this token in your next request.
--   
--   <a>$sel:clusterInfoList:ListClustersResponse'</a>,
--   <a>listClustersResponse_clusterInfoList</a> - Information on each of
--   the MSK clusters in the response.
--   
--   <a>$sel:httpStatus:ListClustersResponse'</a>,
--   <a>listClustersResponse_httpStatus</a> - The response's http status
--   code.
newListClustersResponse :: Int -> ListClustersResponse

-- | The paginated results marker. When the result of a ListClusters
--   operation is truncated, the call returns NextToken in the response. To
--   get another batch of clusters, provide this token in your next
--   request.
listClustersResponse_nextToken :: Lens' ListClustersResponse (Maybe Text)

-- | Information on each of the MSK clusters in the response.
listClustersResponse_clusterInfoList :: Lens' ListClustersResponse (Maybe [ClusterInfo])

-- | The response's http status code.
listClustersResponse_httpStatus :: Lens' ListClustersResponse Int
instance GHC.Generics.Generic Amazonka.Kafka.ListClusters.ListClusters
instance GHC.Show.Show Amazonka.Kafka.ListClusters.ListClusters
instance GHC.Read.Read Amazonka.Kafka.ListClusters.ListClusters
instance GHC.Classes.Eq Amazonka.Kafka.ListClusters.ListClusters
instance GHC.Generics.Generic Amazonka.Kafka.ListClusters.ListClustersResponse
instance GHC.Show.Show Amazonka.Kafka.ListClusters.ListClustersResponse
instance GHC.Read.Read Amazonka.Kafka.ListClusters.ListClustersResponse
instance GHC.Classes.Eq Amazonka.Kafka.ListClusters.ListClustersResponse
instance Amazonka.Types.AWSRequest Amazonka.Kafka.ListClusters.ListClusters
instance Control.DeepSeq.NFData Amazonka.Kafka.ListClusters.ListClustersResponse
instance Amazonka.Pager.AWSPager Amazonka.Kafka.ListClusters.ListClusters
instance Data.Hashable.Class.Hashable Amazonka.Kafka.ListClusters.ListClusters
instance Control.DeepSeq.NFData Amazonka.Kafka.ListClusters.ListClusters
instance Amazonka.Data.Headers.ToHeaders Amazonka.Kafka.ListClusters.ListClusters
instance Amazonka.Data.Path.ToPath Amazonka.Kafka.ListClusters.ListClusters
instance Amazonka.Data.Query.ToQuery Amazonka.Kafka.ListClusters.ListClusters


-- | Returns a list of all the operations that have been performed on the
--   specified MSK cluster.
--   
--   This operation returns paginated results.
module Amazonka.Kafka.ListClusterOperations

-- | <i>See:</i> <a>newListClusterOperations</a> smart constructor.
data ListClusterOperations
ListClusterOperations' :: Maybe Text -> Maybe Natural -> Text -> ListClusterOperations

-- | The paginated results marker. When the result of the operation is
--   truncated, the call returns NextToken in the response. To get the next
--   batch, provide this token in your next request.
[$sel:nextToken:ListClusterOperations'] :: ListClusterOperations -> Maybe Text

-- | The maximum number of results to return in the response. If there are
--   more results, the response includes a NextToken parameter.
[$sel:maxResults:ListClusterOperations'] :: ListClusterOperations -> Maybe Natural

-- | The Amazon Resource Name (ARN) that uniquely identifies the cluster.
[$sel:clusterArn:ListClusterOperations'] :: ListClusterOperations -> Text

-- | Create a value of <a>ListClusterOperations</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListClusterOperations'</a>,
--   <a>listClusterOperations_nextToken</a> - The paginated results marker.
--   When the result of the operation is truncated, the call returns
--   NextToken in the response. To get the next batch, provide this token
--   in your next request.
--   
--   <a>$sel:maxResults:ListClusterOperations'</a>,
--   <a>listClusterOperations_maxResults</a> - The maximum number of
--   results to return in the response. If there are more results, the
--   response includes a NextToken parameter.
--   
--   <a>$sel:clusterArn:ListClusterOperations'</a>,
--   <a>listClusterOperations_clusterArn</a> - The Amazon Resource Name
--   (ARN) that uniquely identifies the cluster.
newListClusterOperations :: Text -> ListClusterOperations

-- | The paginated results marker. When the result of the operation is
--   truncated, the call returns NextToken in the response. To get the next
--   batch, provide this token in your next request.
listClusterOperations_nextToken :: Lens' ListClusterOperations (Maybe Text)

-- | The maximum number of results to return in the response. If there are
--   more results, the response includes a NextToken parameter.
listClusterOperations_maxResults :: Lens' ListClusterOperations (Maybe Natural)

-- | The Amazon Resource Name (ARN) that uniquely identifies the cluster.
listClusterOperations_clusterArn :: Lens' ListClusterOperations Text

-- | <i>See:</i> <a>newListClusterOperationsResponse</a> smart constructor.
data ListClusterOperationsResponse
ListClusterOperationsResponse' :: Maybe [ClusterOperationInfo] -> Maybe Text -> Int -> ListClusterOperationsResponse

-- | An array of cluster operation information objects.
[$sel:clusterOperationInfoList:ListClusterOperationsResponse'] :: ListClusterOperationsResponse -> Maybe [ClusterOperationInfo]

-- | If the response of ListClusterOperations is truncated, it returns a
--   NextToken in the response. This Nexttoken should be sent in the
--   subsequent request to ListClusterOperations.
[$sel:nextToken:ListClusterOperationsResponse'] :: ListClusterOperationsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListClusterOperationsResponse'] :: ListClusterOperationsResponse -> Int

-- | Create a value of <a>ListClusterOperationsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clusterOperationInfoList:ListClusterOperationsResponse'</a>,
--   <a>listClusterOperationsResponse_clusterOperationInfoList</a> - An
--   array of cluster operation information objects.
--   
--   <a>$sel:nextToken:ListClusterOperations'</a>,
--   <a>listClusterOperationsResponse_nextToken</a> - If the response of
--   ListClusterOperations is truncated, it returns a NextToken in the
--   response. This Nexttoken should be sent in the subsequent request to
--   ListClusterOperations.
--   
--   <a>$sel:httpStatus:ListClusterOperationsResponse'</a>,
--   <a>listClusterOperationsResponse_httpStatus</a> - The response's http
--   status code.
newListClusterOperationsResponse :: Int -> ListClusterOperationsResponse

-- | An array of cluster operation information objects.
listClusterOperationsResponse_clusterOperationInfoList :: Lens' ListClusterOperationsResponse (Maybe [ClusterOperationInfo])

-- | If the response of ListClusterOperations is truncated, it returns a
--   NextToken in the response. This Nexttoken should be sent in the
--   subsequent request to ListClusterOperations.
listClusterOperationsResponse_nextToken :: Lens' ListClusterOperationsResponse (Maybe Text)

-- | The response's http status code.
listClusterOperationsResponse_httpStatus :: Lens' ListClusterOperationsResponse Int
instance GHC.Generics.Generic Amazonka.Kafka.ListClusterOperations.ListClusterOperations
instance GHC.Show.Show Amazonka.Kafka.ListClusterOperations.ListClusterOperations
instance GHC.Read.Read Amazonka.Kafka.ListClusterOperations.ListClusterOperations
instance GHC.Classes.Eq Amazonka.Kafka.ListClusterOperations.ListClusterOperations
instance GHC.Generics.Generic Amazonka.Kafka.ListClusterOperations.ListClusterOperationsResponse
instance GHC.Show.Show Amazonka.Kafka.ListClusterOperations.ListClusterOperationsResponse
instance GHC.Read.Read Amazonka.Kafka.ListClusterOperations.ListClusterOperationsResponse
instance GHC.Classes.Eq Amazonka.Kafka.ListClusterOperations.ListClusterOperationsResponse
instance Amazonka.Types.AWSRequest Amazonka.Kafka.ListClusterOperations.ListClusterOperations
instance Control.DeepSeq.NFData Amazonka.Kafka.ListClusterOperations.ListClusterOperationsResponse
instance Amazonka.Pager.AWSPager Amazonka.Kafka.ListClusterOperations.ListClusterOperations
instance Data.Hashable.Class.Hashable Amazonka.Kafka.ListClusterOperations.ListClusterOperations
instance Control.DeepSeq.NFData Amazonka.Kafka.ListClusterOperations.ListClusterOperations
instance Amazonka.Data.Headers.ToHeaders Amazonka.Kafka.ListClusterOperations.ListClusterOperations
instance Amazonka.Data.Path.ToPath Amazonka.Kafka.ListClusterOperations.ListClusterOperations
instance Amazonka.Data.Query.ToQuery Amazonka.Kafka.ListClusterOperations.ListClusterOperations


-- | Gets the Apache Kafka versions to which you can update the MSK
--   cluster.
module Amazonka.Kafka.GetCompatibleKafkaVersions

-- | <i>See:</i> <a>newGetCompatibleKafkaVersions</a> smart constructor.
data GetCompatibleKafkaVersions
GetCompatibleKafkaVersions' :: Maybe Text -> GetCompatibleKafkaVersions

-- | The Amazon Resource Name (ARN) of the cluster check.
[$sel:clusterArn:GetCompatibleKafkaVersions'] :: GetCompatibleKafkaVersions -> Maybe Text

-- | Create a value of <a>GetCompatibleKafkaVersions</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clusterArn:GetCompatibleKafkaVersions'</a>,
--   <a>getCompatibleKafkaVersions_clusterArn</a> - The Amazon Resource
--   Name (ARN) of the cluster check.
newGetCompatibleKafkaVersions :: GetCompatibleKafkaVersions

-- | The Amazon Resource Name (ARN) of the cluster check.
getCompatibleKafkaVersions_clusterArn :: Lens' GetCompatibleKafkaVersions (Maybe Text)

-- | <i>See:</i> <a>newGetCompatibleKafkaVersionsResponse</a> smart
--   constructor.
data GetCompatibleKafkaVersionsResponse
GetCompatibleKafkaVersionsResponse' :: Maybe [CompatibleKafkaVersion] -> Int -> GetCompatibleKafkaVersionsResponse

-- | A list of CompatibleKafkaVersion objects.
[$sel:compatibleKafkaVersions:GetCompatibleKafkaVersionsResponse'] :: GetCompatibleKafkaVersionsResponse -> Maybe [CompatibleKafkaVersion]

-- | The response's http status code.
[$sel:httpStatus:GetCompatibleKafkaVersionsResponse'] :: GetCompatibleKafkaVersionsResponse -> Int

-- | Create a value of <a>GetCompatibleKafkaVersionsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:compatibleKafkaVersions:GetCompatibleKafkaVersionsResponse'</a>,
--   <a>getCompatibleKafkaVersionsResponse_compatibleKafkaVersions</a> - A
--   list of CompatibleKafkaVersion objects.
--   
--   <a>$sel:httpStatus:GetCompatibleKafkaVersionsResponse'</a>,
--   <a>getCompatibleKafkaVersionsResponse_httpStatus</a> - The response's
--   http status code.
newGetCompatibleKafkaVersionsResponse :: Int -> GetCompatibleKafkaVersionsResponse

-- | A list of CompatibleKafkaVersion objects.
getCompatibleKafkaVersionsResponse_compatibleKafkaVersions :: Lens' GetCompatibleKafkaVersionsResponse (Maybe [CompatibleKafkaVersion])

-- | The response's http status code.
getCompatibleKafkaVersionsResponse_httpStatus :: Lens' GetCompatibleKafkaVersionsResponse Int
instance GHC.Generics.Generic Amazonka.Kafka.GetCompatibleKafkaVersions.GetCompatibleKafkaVersions
instance GHC.Show.Show Amazonka.Kafka.GetCompatibleKafkaVersions.GetCompatibleKafkaVersions
instance GHC.Read.Read Amazonka.Kafka.GetCompatibleKafkaVersions.GetCompatibleKafkaVersions
instance GHC.Classes.Eq Amazonka.Kafka.GetCompatibleKafkaVersions.GetCompatibleKafkaVersions
instance GHC.Generics.Generic Amazonka.Kafka.GetCompatibleKafkaVersions.GetCompatibleKafkaVersionsResponse
instance GHC.Show.Show Amazonka.Kafka.GetCompatibleKafkaVersions.GetCompatibleKafkaVersionsResponse
instance GHC.Read.Read Amazonka.Kafka.GetCompatibleKafkaVersions.GetCompatibleKafkaVersionsResponse
instance GHC.Classes.Eq Amazonka.Kafka.GetCompatibleKafkaVersions.GetCompatibleKafkaVersionsResponse
instance Amazonka.Types.AWSRequest Amazonka.Kafka.GetCompatibleKafkaVersions.GetCompatibleKafkaVersions
instance Control.DeepSeq.NFData Amazonka.Kafka.GetCompatibleKafkaVersions.GetCompatibleKafkaVersionsResponse
instance Data.Hashable.Class.Hashable Amazonka.Kafka.GetCompatibleKafkaVersions.GetCompatibleKafkaVersions
instance Control.DeepSeq.NFData Amazonka.Kafka.GetCompatibleKafkaVersions.GetCompatibleKafkaVersions
instance Amazonka.Data.Headers.ToHeaders Amazonka.Kafka.GetCompatibleKafkaVersions.GetCompatibleKafkaVersions
instance Amazonka.Data.Path.ToPath Amazonka.Kafka.GetCompatibleKafkaVersions.GetCompatibleKafkaVersions
instance Amazonka.Data.Query.ToQuery Amazonka.Kafka.GetCompatibleKafkaVersions.GetCompatibleKafkaVersions


-- | A list of brokers that a client application can use to bootstrap.
module Amazonka.Kafka.GetBootstrapBrokers

-- | <i>See:</i> <a>newGetBootstrapBrokers</a> smart constructor.
data GetBootstrapBrokers
GetBootstrapBrokers' :: Text -> GetBootstrapBrokers

-- | The Amazon Resource Name (ARN) that uniquely identifies the cluster.
[$sel:clusterArn:GetBootstrapBrokers'] :: GetBootstrapBrokers -> Text

-- | Create a value of <a>GetBootstrapBrokers</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clusterArn:GetBootstrapBrokers'</a>,
--   <a>getBootstrapBrokers_clusterArn</a> - The Amazon Resource Name (ARN)
--   that uniquely identifies the cluster.
newGetBootstrapBrokers :: Text -> GetBootstrapBrokers

-- | The Amazon Resource Name (ARN) that uniquely identifies the cluster.
getBootstrapBrokers_clusterArn :: Lens' GetBootstrapBrokers Text

-- | <i>See:</i> <a>newGetBootstrapBrokersResponse</a> smart constructor.
data GetBootstrapBrokersResponse
GetBootstrapBrokersResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Int -> GetBootstrapBrokersResponse

-- | A string containing one or more hostname:port pairs.
[$sel:bootstrapBrokerString:GetBootstrapBrokersResponse'] :: GetBootstrapBrokersResponse -> Maybe Text

-- | A string containing one or more DNS names (or IP) and Sasl Scram port
--   pairs.
[$sel:bootstrapBrokerStringSaslScram:GetBootstrapBrokersResponse'] :: GetBootstrapBrokersResponse -> Maybe Text

-- | A string containing one or more DNS names (or IP) and TLS port pairs.
[$sel:bootstrapBrokerStringTls:GetBootstrapBrokersResponse'] :: GetBootstrapBrokersResponse -> Maybe Text

-- | A string that contains one or more DNS names (or IP addresses) and
--   SASL IAM port pairs.
[$sel:bootstrapBrokerStringSaslIam:GetBootstrapBrokersResponse'] :: GetBootstrapBrokersResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetBootstrapBrokersResponse'] :: GetBootstrapBrokersResponse -> Int

-- | Create a value of <a>GetBootstrapBrokersResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:bootstrapBrokerString:GetBootstrapBrokersResponse'</a>,
--   <a>getBootstrapBrokersResponse_bootstrapBrokerString</a> - A string
--   containing one or more hostname:port pairs.
--   
--   
--   <a>$sel:bootstrapBrokerStringSaslScram:GetBootstrapBrokersResponse'</a>,
--   <a>getBootstrapBrokersResponse_bootstrapBrokerStringSaslScram</a> - A
--   string containing one or more DNS names (or IP) and Sasl Scram port
--   pairs.
--   
--   <a>$sel:bootstrapBrokerStringTls:GetBootstrapBrokersResponse'</a>,
--   <a>getBootstrapBrokersResponse_bootstrapBrokerStringTls</a> - A string
--   containing one or more DNS names (or IP) and TLS port pairs.
--   
--   <a>$sel:bootstrapBrokerStringSaslIam:GetBootstrapBrokersResponse'</a>,
--   <a>getBootstrapBrokersResponse_bootstrapBrokerStringSaslIam</a> - A
--   string that contains one or more DNS names (or IP addresses) and SASL
--   IAM port pairs.
--   
--   <a>$sel:httpStatus:GetBootstrapBrokersResponse'</a>,
--   <a>getBootstrapBrokersResponse_httpStatus</a> - The response's http
--   status code.
newGetBootstrapBrokersResponse :: Int -> GetBootstrapBrokersResponse

-- | A string containing one or more hostname:port pairs.
getBootstrapBrokersResponse_bootstrapBrokerString :: Lens' GetBootstrapBrokersResponse (Maybe Text)

-- | A string containing one or more DNS names (or IP) and Sasl Scram port
--   pairs.
getBootstrapBrokersResponse_bootstrapBrokerStringSaslScram :: Lens' GetBootstrapBrokersResponse (Maybe Text)

-- | A string containing one or more DNS names (or IP) and TLS port pairs.
getBootstrapBrokersResponse_bootstrapBrokerStringTls :: Lens' GetBootstrapBrokersResponse (Maybe Text)

-- | A string that contains one or more DNS names (or IP addresses) and
--   SASL IAM port pairs.
getBootstrapBrokersResponse_bootstrapBrokerStringSaslIam :: Lens' GetBootstrapBrokersResponse (Maybe Text)

-- | The response's http status code.
getBootstrapBrokersResponse_httpStatus :: Lens' GetBootstrapBrokersResponse Int
instance GHC.Generics.Generic Amazonka.Kafka.GetBootstrapBrokers.GetBootstrapBrokers
instance GHC.Show.Show Amazonka.Kafka.GetBootstrapBrokers.GetBootstrapBrokers
instance GHC.Read.Read Amazonka.Kafka.GetBootstrapBrokers.GetBootstrapBrokers
instance GHC.Classes.Eq Amazonka.Kafka.GetBootstrapBrokers.GetBootstrapBrokers
instance GHC.Generics.Generic Amazonka.Kafka.GetBootstrapBrokers.GetBootstrapBrokersResponse
instance GHC.Show.Show Amazonka.Kafka.GetBootstrapBrokers.GetBootstrapBrokersResponse
instance GHC.Read.Read Amazonka.Kafka.GetBootstrapBrokers.GetBootstrapBrokersResponse
instance GHC.Classes.Eq Amazonka.Kafka.GetBootstrapBrokers.GetBootstrapBrokersResponse
instance Amazonka.Types.AWSRequest Amazonka.Kafka.GetBootstrapBrokers.GetBootstrapBrokers
instance Control.DeepSeq.NFData Amazonka.Kafka.GetBootstrapBrokers.GetBootstrapBrokersResponse
instance Data.Hashable.Class.Hashable Amazonka.Kafka.GetBootstrapBrokers.GetBootstrapBrokers
instance Control.DeepSeq.NFData Amazonka.Kafka.GetBootstrapBrokers.GetBootstrapBrokers
instance Amazonka.Data.Headers.ToHeaders Amazonka.Kafka.GetBootstrapBrokers.GetBootstrapBrokers
instance Amazonka.Data.Path.ToPath Amazonka.Kafka.GetBootstrapBrokers.GetBootstrapBrokers
instance Amazonka.Data.Query.ToQuery Amazonka.Kafka.GetBootstrapBrokers.GetBootstrapBrokers


-- | Returns a description of this revision of the configuration.
module Amazonka.Kafka.DescribeConfigurationRevision

-- | <i>See:</i> <a>newDescribeConfigurationRevision</a> smart constructor.
data DescribeConfigurationRevision
DescribeConfigurationRevision' :: Integer -> Text -> DescribeConfigurationRevision

-- | A string that uniquely identifies a revision of an MSK configuration.
[$sel:revision:DescribeConfigurationRevision'] :: DescribeConfigurationRevision -> Integer

-- | The Amazon Resource Name (ARN) that uniquely identifies an MSK
--   configuration and all of its revisions.
[$sel:arn:DescribeConfigurationRevision'] :: DescribeConfigurationRevision -> Text

-- | Create a value of <a>DescribeConfigurationRevision</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:revision:DescribeConfigurationRevision'</a>,
--   <a>describeConfigurationRevision_revision</a> - A string that uniquely
--   identifies a revision of an MSK configuration.
--   
--   <a>$sel:arn:DescribeConfigurationRevision'</a>,
--   <a>describeConfigurationRevision_arn</a> - The Amazon Resource Name
--   (ARN) that uniquely identifies an MSK configuration and all of its
--   revisions.
newDescribeConfigurationRevision :: Integer -> Text -> DescribeConfigurationRevision

-- | A string that uniquely identifies a revision of an MSK configuration.
describeConfigurationRevision_revision :: Lens' DescribeConfigurationRevision Integer

-- | The Amazon Resource Name (ARN) that uniquely identifies an MSK
--   configuration and all of its revisions.
describeConfigurationRevision_arn :: Lens' DescribeConfigurationRevision Text

-- | <i>See:</i> <a>newDescribeConfigurationRevisionResponse</a> smart
--   constructor.
data DescribeConfigurationRevisionResponse
DescribeConfigurationRevisionResponse' :: Maybe POSIX -> Maybe Base64 -> Maybe Text -> Maybe Integer -> Maybe Text -> Int -> DescribeConfigurationRevisionResponse

-- | The time when the configuration was created.
[$sel:creationTime:DescribeConfigurationRevisionResponse'] :: DescribeConfigurationRevisionResponse -> Maybe POSIX

-- | Contents of the server.properties file. When using the API, you must
--   ensure that the contents of the file are base64 encoded. When using
--   the AWS Management Console, the SDK, or the AWS CLI, the contents of
--   server.properties can be in plaintext.
[$sel:serverProperties:DescribeConfigurationRevisionResponse'] :: DescribeConfigurationRevisionResponse -> Maybe Base64

-- | The Amazon Resource Name (ARN) of the configuration.
[$sel:arn:DescribeConfigurationRevisionResponse'] :: DescribeConfigurationRevisionResponse -> Maybe Text

-- | The revision number.
[$sel:revision:DescribeConfigurationRevisionResponse'] :: DescribeConfigurationRevisionResponse -> Maybe Integer

-- | The description of the configuration.
[$sel:description:DescribeConfigurationRevisionResponse'] :: DescribeConfigurationRevisionResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:DescribeConfigurationRevisionResponse'] :: DescribeConfigurationRevisionResponse -> Int

-- | Create a value of <a>DescribeConfigurationRevisionResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:DescribeConfigurationRevisionResponse'</a>,
--   <a>describeConfigurationRevisionResponse_creationTime</a> - The time
--   when the configuration was created.
--   
--   <a>$sel:serverProperties:DescribeConfigurationRevisionResponse'</a>,
--   <a>describeConfigurationRevisionResponse_serverProperties</a> -
--   Contents of the server.properties file. When using the API, you must
--   ensure that the contents of the file are base64 encoded. When using
--   the AWS Management Console, the SDK, or the AWS CLI, the contents of
--   server.properties can be in plaintext.-- -- <i>Note:</i> This
--   <tt>Lens</tt> automatically encodes and decodes Base64 data. -- The
--   underlying isomorphism will encode to Base64 representation during --
--   serialisation, and decode from Base64 representation during
--   deserialisation. -- This <tt>Lens</tt> accepts and returns only raw
--   unencoded data.
--   
--   <a>$sel:arn:DescribeConfigurationRevision'</a>,
--   <a>describeConfigurationRevisionResponse_arn</a> - The Amazon Resource
--   Name (ARN) of the configuration.
--   
--   <a>$sel:revision:DescribeConfigurationRevision'</a>,
--   <a>describeConfigurationRevisionResponse_revision</a> - The revision
--   number.
--   
--   <a>$sel:description:DescribeConfigurationRevisionResponse'</a>,
--   <a>describeConfigurationRevisionResponse_description</a> - The
--   description of the configuration.
--   
--   <a>$sel:httpStatus:DescribeConfigurationRevisionResponse'</a>,
--   <a>describeConfigurationRevisionResponse_httpStatus</a> - The
--   response's http status code.
newDescribeConfigurationRevisionResponse :: Int -> DescribeConfigurationRevisionResponse

-- | The time when the configuration was created.
describeConfigurationRevisionResponse_creationTime :: Lens' DescribeConfigurationRevisionResponse (Maybe UTCTime)

-- | Contents of the server.properties file. When using the API, you must
--   ensure that the contents of the file are base64 encoded. When using
--   the AWS Management Console, the SDK, or the AWS CLI, the contents of
--   server.properties can be in plaintext.-- -- <i>Note:</i> This
--   <tt>Lens</tt> automatically encodes and decodes Base64 data. -- The
--   underlying isomorphism will encode to Base64 representation during --
--   serialisation, and decode from Base64 representation during
--   deserialisation. -- This <tt>Lens</tt> accepts and returns only raw
--   unencoded data.
describeConfigurationRevisionResponse_serverProperties :: Lens' DescribeConfigurationRevisionResponse (Maybe ByteString)

-- | The Amazon Resource Name (ARN) of the configuration.
describeConfigurationRevisionResponse_arn :: Lens' DescribeConfigurationRevisionResponse (Maybe Text)

-- | The revision number.
describeConfigurationRevisionResponse_revision :: Lens' DescribeConfigurationRevisionResponse (Maybe Integer)

-- | The description of the configuration.
describeConfigurationRevisionResponse_description :: Lens' DescribeConfigurationRevisionResponse (Maybe Text)

-- | The response's http status code.
describeConfigurationRevisionResponse_httpStatus :: Lens' DescribeConfigurationRevisionResponse Int
instance GHC.Generics.Generic Amazonka.Kafka.DescribeConfigurationRevision.DescribeConfigurationRevision
instance GHC.Show.Show Amazonka.Kafka.DescribeConfigurationRevision.DescribeConfigurationRevision
instance GHC.Read.Read Amazonka.Kafka.DescribeConfigurationRevision.DescribeConfigurationRevision
instance GHC.Classes.Eq Amazonka.Kafka.DescribeConfigurationRevision.DescribeConfigurationRevision
instance GHC.Generics.Generic Amazonka.Kafka.DescribeConfigurationRevision.DescribeConfigurationRevisionResponse
instance GHC.Show.Show Amazonka.Kafka.DescribeConfigurationRevision.DescribeConfigurationRevisionResponse
instance GHC.Read.Read Amazonka.Kafka.DescribeConfigurationRevision.DescribeConfigurationRevisionResponse
instance GHC.Classes.Eq Amazonka.Kafka.DescribeConfigurationRevision.DescribeConfigurationRevisionResponse
instance Amazonka.Types.AWSRequest Amazonka.Kafka.DescribeConfigurationRevision.DescribeConfigurationRevision
instance Control.DeepSeq.NFData Amazonka.Kafka.DescribeConfigurationRevision.DescribeConfigurationRevisionResponse
instance Data.Hashable.Class.Hashable Amazonka.Kafka.DescribeConfigurationRevision.DescribeConfigurationRevision
instance Control.DeepSeq.NFData Amazonka.Kafka.DescribeConfigurationRevision.DescribeConfigurationRevision
instance Amazonka.Data.Headers.ToHeaders Amazonka.Kafka.DescribeConfigurationRevision.DescribeConfigurationRevision
instance Amazonka.Data.Path.ToPath Amazonka.Kafka.DescribeConfigurationRevision.DescribeConfigurationRevision
instance Amazonka.Data.Query.ToQuery Amazonka.Kafka.DescribeConfigurationRevision.DescribeConfigurationRevision


-- | Returns a description of this MSK configuration.
module Amazonka.Kafka.DescribeConfiguration

-- | <i>See:</i> <a>newDescribeConfiguration</a> smart constructor.
data DescribeConfiguration
DescribeConfiguration' :: Text -> DescribeConfiguration

-- | The Amazon Resource Name (ARN) that uniquely identifies an MSK
--   configuration and all of its revisions.
[$sel:arn:DescribeConfiguration'] :: DescribeConfiguration -> Text

-- | Create a value of <a>DescribeConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:DescribeConfiguration'</a>,
--   <a>describeConfiguration_arn</a> - The Amazon Resource Name (ARN) that
--   uniquely identifies an MSK configuration and all of its revisions.
newDescribeConfiguration :: Text -> DescribeConfiguration

-- | The Amazon Resource Name (ARN) that uniquely identifies an MSK
--   configuration and all of its revisions.
describeConfiguration_arn :: Lens' DescribeConfiguration Text

-- | <i>See:</i> <a>newDescribeConfigurationResponse</a> smart constructor.
data DescribeConfigurationResponse
DescribeConfigurationResponse' :: Maybe POSIX -> Maybe ConfigurationState -> Maybe [Text] -> Maybe Text -> Maybe ConfigurationRevision -> Maybe Text -> Maybe Text -> Int -> DescribeConfigurationResponse

-- | The time when the configuration was created.
[$sel:creationTime:DescribeConfigurationResponse'] :: DescribeConfigurationResponse -> Maybe POSIX

-- | The state of the configuration. The possible states are ACTIVE,
--   DELETING, and DELETE_FAILED.
[$sel:state:DescribeConfigurationResponse'] :: DescribeConfigurationResponse -> Maybe ConfigurationState

-- | The versions of Apache Kafka with which you can use this MSK
--   configuration.
[$sel:kafkaVersions:DescribeConfigurationResponse'] :: DescribeConfigurationResponse -> Maybe [Text]

-- | The Amazon Resource Name (ARN) of the configuration.
[$sel:arn:DescribeConfigurationResponse'] :: DescribeConfigurationResponse -> Maybe Text

-- | Latest revision of the configuration.
[$sel:latestRevision:DescribeConfigurationResponse'] :: DescribeConfigurationResponse -> Maybe ConfigurationRevision

-- | The name of the configuration.
[$sel:name:DescribeConfigurationResponse'] :: DescribeConfigurationResponse -> Maybe Text

-- | The description of the configuration.
[$sel:description:DescribeConfigurationResponse'] :: DescribeConfigurationResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:DescribeConfigurationResponse'] :: DescribeConfigurationResponse -> Int

-- | Create a value of <a>DescribeConfigurationResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:DescribeConfigurationResponse'</a>,
--   <a>describeConfigurationResponse_creationTime</a> - The time when the
--   configuration was created.
--   
--   <a>$sel:state:DescribeConfigurationResponse'</a>,
--   <a>describeConfigurationResponse_state</a> - The state of the
--   configuration. The possible states are ACTIVE, DELETING, and
--   DELETE_FAILED.
--   
--   <a>$sel:kafkaVersions:DescribeConfigurationResponse'</a>,
--   <a>describeConfigurationResponse_kafkaVersions</a> - The versions of
--   Apache Kafka with which you can use this MSK configuration.
--   
--   <a>$sel:arn:DescribeConfiguration'</a>,
--   <a>describeConfigurationResponse_arn</a> - The Amazon Resource Name
--   (ARN) of the configuration.
--   
--   <a>$sel:latestRevision:DescribeConfigurationResponse'</a>,
--   <a>describeConfigurationResponse_latestRevision</a> - Latest revision
--   of the configuration.
--   
--   <a>$sel:name:DescribeConfigurationResponse'</a>,
--   <a>describeConfigurationResponse_name</a> - The name of the
--   configuration.
--   
--   <a>$sel:description:DescribeConfigurationResponse'</a>,
--   <a>describeConfigurationResponse_description</a> - The description of
--   the configuration.
--   
--   <a>$sel:httpStatus:DescribeConfigurationResponse'</a>,
--   <a>describeConfigurationResponse_httpStatus</a> - The response's http
--   status code.
newDescribeConfigurationResponse :: Int -> DescribeConfigurationResponse

-- | The time when the configuration was created.
describeConfigurationResponse_creationTime :: Lens' DescribeConfigurationResponse (Maybe UTCTime)

-- | The state of the configuration. The possible states are ACTIVE,
--   DELETING, and DELETE_FAILED.
describeConfigurationResponse_state :: Lens' DescribeConfigurationResponse (Maybe ConfigurationState)

-- | The versions of Apache Kafka with which you can use this MSK
--   configuration.
describeConfigurationResponse_kafkaVersions :: Lens' DescribeConfigurationResponse (Maybe [Text])

-- | The Amazon Resource Name (ARN) of the configuration.
describeConfigurationResponse_arn :: Lens' DescribeConfigurationResponse (Maybe Text)

-- | Latest revision of the configuration.
describeConfigurationResponse_latestRevision :: Lens' DescribeConfigurationResponse (Maybe ConfigurationRevision)

-- | The name of the configuration.
describeConfigurationResponse_name :: Lens' DescribeConfigurationResponse (Maybe Text)

-- | The description of the configuration.
describeConfigurationResponse_description :: Lens' DescribeConfigurationResponse (Maybe Text)

-- | The response's http status code.
describeConfigurationResponse_httpStatus :: Lens' DescribeConfigurationResponse Int
instance GHC.Generics.Generic Amazonka.Kafka.DescribeConfiguration.DescribeConfiguration
instance GHC.Show.Show Amazonka.Kafka.DescribeConfiguration.DescribeConfiguration
instance GHC.Read.Read Amazonka.Kafka.DescribeConfiguration.DescribeConfiguration
instance GHC.Classes.Eq Amazonka.Kafka.DescribeConfiguration.DescribeConfiguration
instance GHC.Generics.Generic Amazonka.Kafka.DescribeConfiguration.DescribeConfigurationResponse
instance GHC.Show.Show Amazonka.Kafka.DescribeConfiguration.DescribeConfigurationResponse
instance GHC.Read.Read Amazonka.Kafka.DescribeConfiguration.DescribeConfigurationResponse
instance GHC.Classes.Eq Amazonka.Kafka.DescribeConfiguration.DescribeConfigurationResponse
instance Amazonka.Types.AWSRequest Amazonka.Kafka.DescribeConfiguration.DescribeConfiguration
instance Control.DeepSeq.NFData Amazonka.Kafka.DescribeConfiguration.DescribeConfigurationResponse
instance Data.Hashable.Class.Hashable Amazonka.Kafka.DescribeConfiguration.DescribeConfiguration
instance Control.DeepSeq.NFData Amazonka.Kafka.DescribeConfiguration.DescribeConfiguration
instance Amazonka.Data.Headers.ToHeaders Amazonka.Kafka.DescribeConfiguration.DescribeConfiguration
instance Amazonka.Data.Path.ToPath Amazonka.Kafka.DescribeConfiguration.DescribeConfiguration
instance Amazonka.Data.Query.ToQuery Amazonka.Kafka.DescribeConfiguration.DescribeConfiguration


-- | Returns a description of the cluster operation specified by the ARN.
module Amazonka.Kafka.DescribeClusterOperation

-- | <i>See:</i> <a>newDescribeClusterOperation</a> smart constructor.
data DescribeClusterOperation
DescribeClusterOperation' :: Text -> DescribeClusterOperation

-- | The Amazon Resource Name (ARN) that uniquely identifies the MSK
--   cluster operation.
[$sel:clusterOperationArn:DescribeClusterOperation'] :: DescribeClusterOperation -> Text

-- | Create a value of <a>DescribeClusterOperation</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clusterOperationArn:DescribeClusterOperation'</a>,
--   <a>describeClusterOperation_clusterOperationArn</a> - The Amazon
--   Resource Name (ARN) that uniquely identifies the MSK cluster
--   operation.
newDescribeClusterOperation :: Text -> DescribeClusterOperation

-- | The Amazon Resource Name (ARN) that uniquely identifies the MSK
--   cluster operation.
describeClusterOperation_clusterOperationArn :: Lens' DescribeClusterOperation Text

-- | <i>See:</i> <a>newDescribeClusterOperationResponse</a> smart
--   constructor.
data DescribeClusterOperationResponse
DescribeClusterOperationResponse' :: Maybe ClusterOperationInfo -> Int -> DescribeClusterOperationResponse

-- | Cluster operation information
[$sel:clusterOperationInfo:DescribeClusterOperationResponse'] :: DescribeClusterOperationResponse -> Maybe ClusterOperationInfo

-- | The response's http status code.
[$sel:httpStatus:DescribeClusterOperationResponse'] :: DescribeClusterOperationResponse -> Int

-- | Create a value of <a>DescribeClusterOperationResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clusterOperationInfo:DescribeClusterOperationResponse'</a>,
--   <a>describeClusterOperationResponse_clusterOperationInfo</a> - Cluster
--   operation information
--   
--   <a>$sel:httpStatus:DescribeClusterOperationResponse'</a>,
--   <a>describeClusterOperationResponse_httpStatus</a> - The response's
--   http status code.
newDescribeClusterOperationResponse :: Int -> DescribeClusterOperationResponse

-- | Cluster operation information
describeClusterOperationResponse_clusterOperationInfo :: Lens' DescribeClusterOperationResponse (Maybe ClusterOperationInfo)

-- | The response's http status code.
describeClusterOperationResponse_httpStatus :: Lens' DescribeClusterOperationResponse Int
instance GHC.Generics.Generic Amazonka.Kafka.DescribeClusterOperation.DescribeClusterOperation
instance GHC.Show.Show Amazonka.Kafka.DescribeClusterOperation.DescribeClusterOperation
instance GHC.Read.Read Amazonka.Kafka.DescribeClusterOperation.DescribeClusterOperation
instance GHC.Classes.Eq Amazonka.Kafka.DescribeClusterOperation.DescribeClusterOperation
instance GHC.Generics.Generic Amazonka.Kafka.DescribeClusterOperation.DescribeClusterOperationResponse
instance GHC.Show.Show Amazonka.Kafka.DescribeClusterOperation.DescribeClusterOperationResponse
instance GHC.Read.Read Amazonka.Kafka.DescribeClusterOperation.DescribeClusterOperationResponse
instance GHC.Classes.Eq Amazonka.Kafka.DescribeClusterOperation.DescribeClusterOperationResponse
instance Amazonka.Types.AWSRequest Amazonka.Kafka.DescribeClusterOperation.DescribeClusterOperation
instance Control.DeepSeq.NFData Amazonka.Kafka.DescribeClusterOperation.DescribeClusterOperationResponse
instance Data.Hashable.Class.Hashable Amazonka.Kafka.DescribeClusterOperation.DescribeClusterOperation
instance Control.DeepSeq.NFData Amazonka.Kafka.DescribeClusterOperation.DescribeClusterOperation
instance Amazonka.Data.Headers.ToHeaders Amazonka.Kafka.DescribeClusterOperation.DescribeClusterOperation
instance Amazonka.Data.Path.ToPath Amazonka.Kafka.DescribeClusterOperation.DescribeClusterOperation
instance Amazonka.Data.Query.ToQuery Amazonka.Kafka.DescribeClusterOperation.DescribeClusterOperation


-- | Returns a description of the MSK cluster whose Amazon Resource Name
--   (ARN) is specified in the request.
module Amazonka.Kafka.DescribeCluster

-- | <i>See:</i> <a>newDescribeCluster</a> smart constructor.
data DescribeCluster
DescribeCluster' :: Text -> DescribeCluster

-- | The Amazon Resource Name (ARN) that uniquely identifies the cluster.
[$sel:clusterArn:DescribeCluster'] :: DescribeCluster -> Text

-- | Create a value of <a>DescribeCluster</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clusterArn:DescribeCluster'</a>,
--   <a>describeCluster_clusterArn</a> - The Amazon Resource Name (ARN)
--   that uniquely identifies the cluster.
newDescribeCluster :: Text -> DescribeCluster

-- | The Amazon Resource Name (ARN) that uniquely identifies the cluster.
describeCluster_clusterArn :: Lens' DescribeCluster Text

-- | <i>See:</i> <a>newDescribeClusterResponse</a> smart constructor.
data DescribeClusterResponse
DescribeClusterResponse' :: Maybe ClusterInfo -> Int -> DescribeClusterResponse

-- | The cluster information.
[$sel:clusterInfo:DescribeClusterResponse'] :: DescribeClusterResponse -> Maybe ClusterInfo

-- | The response's http status code.
[$sel:httpStatus:DescribeClusterResponse'] :: DescribeClusterResponse -> Int

-- | Create a value of <a>DescribeClusterResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clusterInfo:DescribeClusterResponse'</a>,
--   <a>describeClusterResponse_clusterInfo</a> - The cluster information.
--   
--   <a>$sel:httpStatus:DescribeClusterResponse'</a>,
--   <a>describeClusterResponse_httpStatus</a> - The response's http status
--   code.
newDescribeClusterResponse :: Int -> DescribeClusterResponse

-- | The cluster information.
describeClusterResponse_clusterInfo :: Lens' DescribeClusterResponse (Maybe ClusterInfo)

-- | The response's http status code.
describeClusterResponse_httpStatus :: Lens' DescribeClusterResponse Int
instance GHC.Generics.Generic Amazonka.Kafka.DescribeCluster.DescribeCluster
instance GHC.Show.Show Amazonka.Kafka.DescribeCluster.DescribeCluster
instance GHC.Read.Read Amazonka.Kafka.DescribeCluster.DescribeCluster
instance GHC.Classes.Eq Amazonka.Kafka.DescribeCluster.DescribeCluster
instance GHC.Generics.Generic Amazonka.Kafka.DescribeCluster.DescribeClusterResponse
instance GHC.Show.Show Amazonka.Kafka.DescribeCluster.DescribeClusterResponse
instance GHC.Read.Read Amazonka.Kafka.DescribeCluster.DescribeClusterResponse
instance GHC.Classes.Eq Amazonka.Kafka.DescribeCluster.DescribeClusterResponse
instance Amazonka.Types.AWSRequest Amazonka.Kafka.DescribeCluster.DescribeCluster
instance Control.DeepSeq.NFData Amazonka.Kafka.DescribeCluster.DescribeClusterResponse
instance Data.Hashable.Class.Hashable Amazonka.Kafka.DescribeCluster.DescribeCluster
instance Control.DeepSeq.NFData Amazonka.Kafka.DescribeCluster.DescribeCluster
instance Amazonka.Data.Headers.ToHeaders Amazonka.Kafka.DescribeCluster.DescribeCluster
instance Amazonka.Data.Path.ToPath Amazonka.Kafka.DescribeCluster.DescribeCluster
instance Amazonka.Data.Query.ToQuery Amazonka.Kafka.DescribeCluster.DescribeCluster


-- | Deletes an MSK Configuration.
module Amazonka.Kafka.DeleteConfiguration

-- | <i>See:</i> <a>newDeleteConfiguration</a> smart constructor.
data DeleteConfiguration
DeleteConfiguration' :: Text -> DeleteConfiguration

-- | The Amazon Resource Name (ARN) that uniquely identifies an MSK
--   configuration.
[$sel:arn:DeleteConfiguration'] :: DeleteConfiguration -> Text

-- | Create a value of <a>DeleteConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:DeleteConfiguration'</a>, <a>deleteConfiguration_arn</a> -
--   The Amazon Resource Name (ARN) that uniquely identifies an MSK
--   configuration.
newDeleteConfiguration :: Text -> DeleteConfiguration

-- | The Amazon Resource Name (ARN) that uniquely identifies an MSK
--   configuration.
deleteConfiguration_arn :: Lens' DeleteConfiguration Text

-- | <i>See:</i> <a>newDeleteConfigurationResponse</a> smart constructor.
data DeleteConfigurationResponse
DeleteConfigurationResponse' :: Maybe ConfigurationState -> Maybe Text -> Int -> DeleteConfigurationResponse

-- | The state of the configuration. The possible states are ACTIVE,
--   DELETING, and DELETE_FAILED.
[$sel:state:DeleteConfigurationResponse'] :: DeleteConfigurationResponse -> Maybe ConfigurationState

-- | The Amazon Resource Name (ARN) that uniquely identifies an MSK
--   configuration.
[$sel:arn:DeleteConfigurationResponse'] :: DeleteConfigurationResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:DeleteConfigurationResponse'] :: DeleteConfigurationResponse -> Int

-- | Create a value of <a>DeleteConfigurationResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:state:DeleteConfigurationResponse'</a>,
--   <a>deleteConfigurationResponse_state</a> - The state of the
--   configuration. The possible states are ACTIVE, DELETING, and
--   DELETE_FAILED.
--   
--   <a>$sel:arn:DeleteConfiguration'</a>,
--   <a>deleteConfigurationResponse_arn</a> - The Amazon Resource Name
--   (ARN) that uniquely identifies an MSK configuration.
--   
--   <a>$sel:httpStatus:DeleteConfigurationResponse'</a>,
--   <a>deleteConfigurationResponse_httpStatus</a> - The response's http
--   status code.
newDeleteConfigurationResponse :: Int -> DeleteConfigurationResponse

-- | The state of the configuration. The possible states are ACTIVE,
--   DELETING, and DELETE_FAILED.
deleteConfigurationResponse_state :: Lens' DeleteConfigurationResponse (Maybe ConfigurationState)

-- | The Amazon Resource Name (ARN) that uniquely identifies an MSK
--   configuration.
deleteConfigurationResponse_arn :: Lens' DeleteConfigurationResponse (Maybe Text)

-- | The response's http status code.
deleteConfigurationResponse_httpStatus :: Lens' DeleteConfigurationResponse Int
instance GHC.Generics.Generic Amazonka.Kafka.DeleteConfiguration.DeleteConfiguration
instance GHC.Show.Show Amazonka.Kafka.DeleteConfiguration.DeleteConfiguration
instance GHC.Read.Read Amazonka.Kafka.DeleteConfiguration.DeleteConfiguration
instance GHC.Classes.Eq Amazonka.Kafka.DeleteConfiguration.DeleteConfiguration
instance GHC.Generics.Generic Amazonka.Kafka.DeleteConfiguration.DeleteConfigurationResponse
instance GHC.Show.Show Amazonka.Kafka.DeleteConfiguration.DeleteConfigurationResponse
instance GHC.Read.Read Amazonka.Kafka.DeleteConfiguration.DeleteConfigurationResponse
instance GHC.Classes.Eq Amazonka.Kafka.DeleteConfiguration.DeleteConfigurationResponse
instance Amazonka.Types.AWSRequest Amazonka.Kafka.DeleteConfiguration.DeleteConfiguration
instance Control.DeepSeq.NFData Amazonka.Kafka.DeleteConfiguration.DeleteConfigurationResponse
instance Data.Hashable.Class.Hashable Amazonka.Kafka.DeleteConfiguration.DeleteConfiguration
instance Control.DeepSeq.NFData Amazonka.Kafka.DeleteConfiguration.DeleteConfiguration
instance Amazonka.Data.Headers.ToHeaders Amazonka.Kafka.DeleteConfiguration.DeleteConfiguration
instance Amazonka.Data.Path.ToPath Amazonka.Kafka.DeleteConfiguration.DeleteConfiguration
instance Amazonka.Data.Query.ToQuery Amazonka.Kafka.DeleteConfiguration.DeleteConfiguration


-- | Deletes the MSK cluster specified by the Amazon Resource Name (ARN) in
--   the request.
module Amazonka.Kafka.DeleteCluster

-- | <i>See:</i> <a>newDeleteCluster</a> smart constructor.
data DeleteCluster
DeleteCluster' :: Maybe Text -> Text -> DeleteCluster

-- | The current version of the MSK cluster.
[$sel:currentVersion:DeleteCluster'] :: DeleteCluster -> Maybe Text

-- | The Amazon Resource Name (ARN) that uniquely identifies the cluster.
[$sel:clusterArn:DeleteCluster'] :: DeleteCluster -> Text

-- | Create a value of <a>DeleteCluster</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:currentVersion:DeleteCluster'</a>,
--   <a>deleteCluster_currentVersion</a> - The current version of the MSK
--   cluster.
--   
--   <a>$sel:clusterArn:DeleteCluster'</a>, <a>deleteCluster_clusterArn</a>
--   - The Amazon Resource Name (ARN) that uniquely identifies the cluster.
newDeleteCluster :: Text -> DeleteCluster

-- | The current version of the MSK cluster.
deleteCluster_currentVersion :: Lens' DeleteCluster (Maybe Text)

-- | The Amazon Resource Name (ARN) that uniquely identifies the cluster.
deleteCluster_clusterArn :: Lens' DeleteCluster Text

-- | <i>See:</i> <a>newDeleteClusterResponse</a> smart constructor.
data DeleteClusterResponse
DeleteClusterResponse' :: Maybe ClusterState -> Maybe Text -> Int -> DeleteClusterResponse

-- | The state of the cluster. The possible states are ACTIVE, CREATING,
--   DELETING, FAILED, HEALING, MAINTENANCE, REBOOTING_BROKER, and
--   UPDATING.
[$sel:state:DeleteClusterResponse'] :: DeleteClusterResponse -> Maybe ClusterState

-- | The Amazon Resource Name (ARN) of the cluster.
[$sel:clusterArn:DeleteClusterResponse'] :: DeleteClusterResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:DeleteClusterResponse'] :: DeleteClusterResponse -> Int

-- | Create a value of <a>DeleteClusterResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:state:DeleteClusterResponse'</a>,
--   <a>deleteClusterResponse_state</a> - The state of the cluster. The
--   possible states are ACTIVE, CREATING, DELETING, FAILED, HEALING,
--   MAINTENANCE, REBOOTING_BROKER, and UPDATING.
--   
--   <a>$sel:clusterArn:DeleteCluster'</a>,
--   <a>deleteClusterResponse_clusterArn</a> - The Amazon Resource Name
--   (ARN) of the cluster.
--   
--   <a>$sel:httpStatus:DeleteClusterResponse'</a>,
--   <a>deleteClusterResponse_httpStatus</a> - The response's http status
--   code.
newDeleteClusterResponse :: Int -> DeleteClusterResponse

-- | The state of the cluster. The possible states are ACTIVE, CREATING,
--   DELETING, FAILED, HEALING, MAINTENANCE, REBOOTING_BROKER, and
--   UPDATING.
deleteClusterResponse_state :: Lens' DeleteClusterResponse (Maybe ClusterState)

-- | The Amazon Resource Name (ARN) of the cluster.
deleteClusterResponse_clusterArn :: Lens' DeleteClusterResponse (Maybe Text)

-- | The response's http status code.
deleteClusterResponse_httpStatus :: Lens' DeleteClusterResponse Int
instance GHC.Generics.Generic Amazonka.Kafka.DeleteCluster.DeleteCluster
instance GHC.Show.Show Amazonka.Kafka.DeleteCluster.DeleteCluster
instance GHC.Read.Read Amazonka.Kafka.DeleteCluster.DeleteCluster
instance GHC.Classes.Eq Amazonka.Kafka.DeleteCluster.DeleteCluster
instance GHC.Generics.Generic Amazonka.Kafka.DeleteCluster.DeleteClusterResponse
instance GHC.Show.Show Amazonka.Kafka.DeleteCluster.DeleteClusterResponse
instance GHC.Read.Read Amazonka.Kafka.DeleteCluster.DeleteClusterResponse
instance GHC.Classes.Eq Amazonka.Kafka.DeleteCluster.DeleteClusterResponse
instance Amazonka.Types.AWSRequest Amazonka.Kafka.DeleteCluster.DeleteCluster
instance Control.DeepSeq.NFData Amazonka.Kafka.DeleteCluster.DeleteClusterResponse
instance Data.Hashable.Class.Hashable Amazonka.Kafka.DeleteCluster.DeleteCluster
instance Control.DeepSeq.NFData Amazonka.Kafka.DeleteCluster.DeleteCluster
instance Amazonka.Data.Headers.ToHeaders Amazonka.Kafka.DeleteCluster.DeleteCluster
instance Amazonka.Data.Path.ToPath Amazonka.Kafka.DeleteCluster.DeleteCluster
instance Amazonka.Data.Query.ToQuery Amazonka.Kafka.DeleteCluster.DeleteCluster


-- | Creates a new MSK configuration.
module Amazonka.Kafka.CreateConfiguration

-- | <i>See:</i> <a>newCreateConfiguration</a> smart constructor.
data CreateConfiguration
CreateConfiguration' :: Maybe [Text] -> Maybe Text -> Base64 -> Text -> CreateConfiguration

-- | The versions of Apache Kafka with which you can use this MSK
--   configuration.
[$sel:kafkaVersions:CreateConfiguration'] :: CreateConfiguration -> Maybe [Text]

-- | The description of the configuration.
[$sel:description:CreateConfiguration'] :: CreateConfiguration -> Maybe Text

-- | Contents of the server.properties file. When using the API, you must
--   ensure that the contents of the file are base64 encoded. When using
--   the AWS Management Console, the SDK, or the AWS CLI, the contents of
--   server.properties can be in plaintext.
[$sel:serverProperties:CreateConfiguration'] :: CreateConfiguration -> Base64

-- | The name of the configuration.
[$sel:name:CreateConfiguration'] :: CreateConfiguration -> Text

-- | Create a value of <a>CreateConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:kafkaVersions:CreateConfiguration'</a>,
--   <a>createConfiguration_kafkaVersions</a> - The versions of Apache
--   Kafka with which you can use this MSK configuration.
--   
--   <a>$sel:description:CreateConfiguration'</a>,
--   <a>createConfiguration_description</a> - The description of the
--   configuration.
--   
--   <a>$sel:serverProperties:CreateConfiguration'</a>,
--   <a>createConfiguration_serverProperties</a> - Contents of the
--   server.properties file. When using the API, you must ensure that the
--   contents of the file are base64 encoded. When using the AWS Management
--   Console, the SDK, or the AWS CLI, the contents of server.properties
--   can be in plaintext.-- -- <i>Note:</i> This <tt>Lens</tt>
--   automatically encodes and decodes Base64 data. -- The underlying
--   isomorphism will encode to Base64 representation during --
--   serialisation, and decode from Base64 representation during
--   deserialisation. -- This <tt>Lens</tt> accepts and returns only raw
--   unencoded data.
--   
--   <a>$sel:name:CreateConfiguration'</a>, <a>createConfiguration_name</a>
--   - The name of the configuration.
newCreateConfiguration :: ByteString -> Text -> CreateConfiguration

-- | The versions of Apache Kafka with which you can use this MSK
--   configuration.
createConfiguration_kafkaVersions :: Lens' CreateConfiguration (Maybe [Text])

-- | The description of the configuration.
createConfiguration_description :: Lens' CreateConfiguration (Maybe Text)

-- | Contents of the server.properties file. When using the API, you must
--   ensure that the contents of the file are base64 encoded. When using
--   the AWS Management Console, the SDK, or the AWS CLI, the contents of
--   server.properties can be in plaintext.-- -- <i>Note:</i> This
--   <tt>Lens</tt> automatically encodes and decodes Base64 data. -- The
--   underlying isomorphism will encode to Base64 representation during --
--   serialisation, and decode from Base64 representation during
--   deserialisation. -- This <tt>Lens</tt> accepts and returns only raw
--   unencoded data.
createConfiguration_serverProperties :: Lens' CreateConfiguration ByteString

-- | The name of the configuration.
createConfiguration_name :: Lens' CreateConfiguration Text

-- | <i>See:</i> <a>newCreateConfigurationResponse</a> smart constructor.
data CreateConfigurationResponse
CreateConfigurationResponse' :: Maybe POSIX -> Maybe ConfigurationState -> Maybe Text -> Maybe ConfigurationRevision -> Maybe Text -> Int -> CreateConfigurationResponse

-- | The time when the configuration was created.
[$sel:creationTime:CreateConfigurationResponse'] :: CreateConfigurationResponse -> Maybe POSIX

-- | The state of the configuration. The possible states are ACTIVE,
--   DELETING, and DELETE_FAILED.
[$sel:state:CreateConfigurationResponse'] :: CreateConfigurationResponse -> Maybe ConfigurationState

-- | The Amazon Resource Name (ARN) of the configuration.
[$sel:arn:CreateConfigurationResponse'] :: CreateConfigurationResponse -> Maybe Text

-- | Latest revision of the configuration.
[$sel:latestRevision:CreateConfigurationResponse'] :: CreateConfigurationResponse -> Maybe ConfigurationRevision

-- | The name of the configuration.
[$sel:name:CreateConfigurationResponse'] :: CreateConfigurationResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:CreateConfigurationResponse'] :: CreateConfigurationResponse -> Int

-- | Create a value of <a>CreateConfigurationResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:CreateConfigurationResponse'</a>,
--   <a>createConfigurationResponse_creationTime</a> - The time when the
--   configuration was created.
--   
--   <a>$sel:state:CreateConfigurationResponse'</a>,
--   <a>createConfigurationResponse_state</a> - The state of the
--   configuration. The possible states are ACTIVE, DELETING, and
--   DELETE_FAILED.
--   
--   <a>$sel:arn:CreateConfigurationResponse'</a>,
--   <a>createConfigurationResponse_arn</a> - The Amazon Resource Name
--   (ARN) of the configuration.
--   
--   <a>$sel:latestRevision:CreateConfigurationResponse'</a>,
--   <a>createConfigurationResponse_latestRevision</a> - Latest revision of
--   the configuration.
--   
--   <a>$sel:name:CreateConfiguration'</a>,
--   <a>createConfigurationResponse_name</a> - The name of the
--   configuration.
--   
--   <a>$sel:httpStatus:CreateConfigurationResponse'</a>,
--   <a>createConfigurationResponse_httpStatus</a> - The response's http
--   status code.
newCreateConfigurationResponse :: Int -> CreateConfigurationResponse

-- | The time when the configuration was created.
createConfigurationResponse_creationTime :: Lens' CreateConfigurationResponse (Maybe UTCTime)

-- | The state of the configuration. The possible states are ACTIVE,
--   DELETING, and DELETE_FAILED.
createConfigurationResponse_state :: Lens' CreateConfigurationResponse (Maybe ConfigurationState)

-- | The Amazon Resource Name (ARN) of the configuration.
createConfigurationResponse_arn :: Lens' CreateConfigurationResponse (Maybe Text)

-- | Latest revision of the configuration.
createConfigurationResponse_latestRevision :: Lens' CreateConfigurationResponse (Maybe ConfigurationRevision)

-- | The name of the configuration.
createConfigurationResponse_name :: Lens' CreateConfigurationResponse (Maybe Text)

-- | The response's http status code.
createConfigurationResponse_httpStatus :: Lens' CreateConfigurationResponse Int
instance GHC.Generics.Generic Amazonka.Kafka.CreateConfiguration.CreateConfiguration
instance GHC.Show.Show Amazonka.Kafka.CreateConfiguration.CreateConfiguration
instance GHC.Read.Read Amazonka.Kafka.CreateConfiguration.CreateConfiguration
instance GHC.Classes.Eq Amazonka.Kafka.CreateConfiguration.CreateConfiguration
instance GHC.Generics.Generic Amazonka.Kafka.CreateConfiguration.CreateConfigurationResponse
instance GHC.Show.Show Amazonka.Kafka.CreateConfiguration.CreateConfigurationResponse
instance GHC.Read.Read Amazonka.Kafka.CreateConfiguration.CreateConfigurationResponse
instance GHC.Classes.Eq Amazonka.Kafka.CreateConfiguration.CreateConfigurationResponse
instance Amazonka.Types.AWSRequest Amazonka.Kafka.CreateConfiguration.CreateConfiguration
instance Control.DeepSeq.NFData Amazonka.Kafka.CreateConfiguration.CreateConfigurationResponse
instance Data.Hashable.Class.Hashable Amazonka.Kafka.CreateConfiguration.CreateConfiguration
instance Control.DeepSeq.NFData Amazonka.Kafka.CreateConfiguration.CreateConfiguration
instance Amazonka.Data.Headers.ToHeaders Amazonka.Kafka.CreateConfiguration.CreateConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Kafka.CreateConfiguration.CreateConfiguration
instance Amazonka.Data.Path.ToPath Amazonka.Kafka.CreateConfiguration.CreateConfiguration
instance Amazonka.Data.Query.ToQuery Amazonka.Kafka.CreateConfiguration.CreateConfiguration


-- | Creates a new MSK cluster.
module Amazonka.Kafka.CreateCluster

-- | <i>See:</i> <a>newCreateCluster</a> smart constructor.
data CreateCluster
CreateCluster' :: Maybe EnhancedMonitoring -> Maybe OpenMonitoringInfo -> Maybe ConfigurationInfo -> Maybe LoggingInfo -> Maybe ClientAuthentication -> Maybe (HashMap Text Text) -> Maybe EncryptionInfo -> BrokerNodeGroupInfo -> Text -> Natural -> Text -> CreateCluster

-- | Specifies the level of monitoring for the MSK cluster. The possible
--   values are DEFAULT, PER_BROKER, PER_TOPIC_PER_BROKER, and
--   PER_TOPIC_PER_PARTITION.
[$sel:enhancedMonitoring:CreateCluster'] :: CreateCluster -> Maybe EnhancedMonitoring

-- | The settings for open monitoring.
[$sel:openMonitoring:CreateCluster'] :: CreateCluster -> Maybe OpenMonitoringInfo

-- | Represents the configuration that you want MSK to use for the brokers
--   in a cluster.
[$sel:configurationInfo:CreateCluster'] :: CreateCluster -> Maybe ConfigurationInfo
[$sel:loggingInfo:CreateCluster'] :: CreateCluster -> Maybe LoggingInfo

-- | Includes all client authentication related information.
[$sel:clientAuthentication:CreateCluster'] :: CreateCluster -> Maybe ClientAuthentication

-- | Create tags when creating the cluster.
[$sel:tags:CreateCluster'] :: CreateCluster -> Maybe (HashMap Text Text)

-- | Includes all encryption-related information.
[$sel:encryptionInfo:CreateCluster'] :: CreateCluster -> Maybe EncryptionInfo

-- | Information about the broker nodes in the cluster.
[$sel:brokerNodeGroupInfo:CreateCluster'] :: CreateCluster -> BrokerNodeGroupInfo

-- | The version of Apache Kafka.
[$sel:kafkaVersion:CreateCluster'] :: CreateCluster -> Text

-- | The number of broker nodes in the cluster.
[$sel:numberOfBrokerNodes:CreateCluster'] :: CreateCluster -> Natural

-- | The name of the cluster.
[$sel:clusterName:CreateCluster'] :: CreateCluster -> Text

-- | Create a value of <a>CreateCluster</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:enhancedMonitoring:CreateCluster'</a>,
--   <a>createCluster_enhancedMonitoring</a> - Specifies the level of
--   monitoring for the MSK cluster. The possible values are DEFAULT,
--   PER_BROKER, PER_TOPIC_PER_BROKER, and PER_TOPIC_PER_PARTITION.
--   
--   <a>$sel:openMonitoring:CreateCluster'</a>,
--   <a>createCluster_openMonitoring</a> - The settings for open
--   monitoring.
--   
--   <a>$sel:configurationInfo:CreateCluster'</a>,
--   <a>createCluster_configurationInfo</a> - Represents the configuration
--   that you want MSK to use for the brokers in a cluster.
--   
--   <a>$sel:loggingInfo:CreateCluster'</a>,
--   <a>createCluster_loggingInfo</a> - Undocumented member.
--   
--   <a>$sel:clientAuthentication:CreateCluster'</a>,
--   <a>createCluster_clientAuthentication</a> - Includes all client
--   authentication related information.
--   
--   <a>$sel:tags:CreateCluster'</a>, <a>createCluster_tags</a> - Create
--   tags when creating the cluster.
--   
--   <a>$sel:encryptionInfo:CreateCluster'</a>,
--   <a>createCluster_encryptionInfo</a> - Includes all encryption-related
--   information.
--   
--   <a>$sel:brokerNodeGroupInfo:CreateCluster'</a>,
--   <a>createCluster_brokerNodeGroupInfo</a> - Information about the
--   broker nodes in the cluster.
--   
--   <a>$sel:kafkaVersion:CreateCluster'</a>,
--   <a>createCluster_kafkaVersion</a> - The version of Apache Kafka.
--   
--   <a>$sel:numberOfBrokerNodes:CreateCluster'</a>,
--   <a>createCluster_numberOfBrokerNodes</a> - The number of broker nodes
--   in the cluster.
--   
--   <a>$sel:clusterName:CreateCluster'</a>,
--   <a>createCluster_clusterName</a> - The name of the cluster.
newCreateCluster :: BrokerNodeGroupInfo -> Text -> Natural -> Text -> CreateCluster

-- | Specifies the level of monitoring for the MSK cluster. The possible
--   values are DEFAULT, PER_BROKER, PER_TOPIC_PER_BROKER, and
--   PER_TOPIC_PER_PARTITION.
createCluster_enhancedMonitoring :: Lens' CreateCluster (Maybe EnhancedMonitoring)

-- | The settings for open monitoring.
createCluster_openMonitoring :: Lens' CreateCluster (Maybe OpenMonitoringInfo)

-- | Represents the configuration that you want MSK to use for the brokers
--   in a cluster.
createCluster_configurationInfo :: Lens' CreateCluster (Maybe ConfigurationInfo)

-- | Undocumented member.
createCluster_loggingInfo :: Lens' CreateCluster (Maybe LoggingInfo)

-- | Includes all client authentication related information.
createCluster_clientAuthentication :: Lens' CreateCluster (Maybe ClientAuthentication)

-- | Create tags when creating the cluster.
createCluster_tags :: Lens' CreateCluster (Maybe (HashMap Text Text))

-- | Includes all encryption-related information.
createCluster_encryptionInfo :: Lens' CreateCluster (Maybe EncryptionInfo)

-- | Information about the broker nodes in the cluster.
createCluster_brokerNodeGroupInfo :: Lens' CreateCluster BrokerNodeGroupInfo

-- | The version of Apache Kafka.
createCluster_kafkaVersion :: Lens' CreateCluster Text

-- | The number of broker nodes in the cluster.
createCluster_numberOfBrokerNodes :: Lens' CreateCluster Natural

-- | The name of the cluster.
createCluster_clusterName :: Lens' CreateCluster Text

-- | <i>See:</i> <a>newCreateClusterResponse</a> smart constructor.
data CreateClusterResponse
CreateClusterResponse' :: Maybe ClusterState -> Maybe Text -> Maybe Text -> Int -> CreateClusterResponse

-- | The state of the cluster. The possible states are ACTIVE, CREATING,
--   DELETING, FAILED, HEALING, MAINTENANCE, REBOOTING_BROKER, and
--   UPDATING.
[$sel:state:CreateClusterResponse'] :: CreateClusterResponse -> Maybe ClusterState

-- | The Amazon Resource Name (ARN) of the cluster.
[$sel:clusterArn:CreateClusterResponse'] :: CreateClusterResponse -> Maybe Text

-- | The name of the MSK cluster.
[$sel:clusterName:CreateClusterResponse'] :: CreateClusterResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:CreateClusterResponse'] :: CreateClusterResponse -> Int

-- | Create a value of <a>CreateClusterResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:state:CreateClusterResponse'</a>,
--   <a>createClusterResponse_state</a> - The state of the cluster. The
--   possible states are ACTIVE, CREATING, DELETING, FAILED, HEALING,
--   MAINTENANCE, REBOOTING_BROKER, and UPDATING.
--   
--   <a>$sel:clusterArn:CreateClusterResponse'</a>,
--   <a>createClusterResponse_clusterArn</a> - The Amazon Resource Name
--   (ARN) of the cluster.
--   
--   <a>$sel:clusterName:CreateCluster'</a>,
--   <a>createClusterResponse_clusterName</a> - The name of the MSK
--   cluster.
--   
--   <a>$sel:httpStatus:CreateClusterResponse'</a>,
--   <a>createClusterResponse_httpStatus</a> - The response's http status
--   code.
newCreateClusterResponse :: Int -> CreateClusterResponse

-- | The state of the cluster. The possible states are ACTIVE, CREATING,
--   DELETING, FAILED, HEALING, MAINTENANCE, REBOOTING_BROKER, and
--   UPDATING.
createClusterResponse_state :: Lens' CreateClusterResponse (Maybe ClusterState)

-- | The Amazon Resource Name (ARN) of the cluster.
createClusterResponse_clusterArn :: Lens' CreateClusterResponse (Maybe Text)

-- | The name of the MSK cluster.
createClusterResponse_clusterName :: Lens' CreateClusterResponse (Maybe Text)

-- | The response's http status code.
createClusterResponse_httpStatus :: Lens' CreateClusterResponse Int
instance GHC.Generics.Generic Amazonka.Kafka.CreateCluster.CreateCluster
instance GHC.Show.Show Amazonka.Kafka.CreateCluster.CreateCluster
instance GHC.Read.Read Amazonka.Kafka.CreateCluster.CreateCluster
instance GHC.Classes.Eq Amazonka.Kafka.CreateCluster.CreateCluster
instance GHC.Generics.Generic Amazonka.Kafka.CreateCluster.CreateClusterResponse
instance GHC.Show.Show Amazonka.Kafka.CreateCluster.CreateClusterResponse
instance GHC.Read.Read Amazonka.Kafka.CreateCluster.CreateClusterResponse
instance GHC.Classes.Eq Amazonka.Kafka.CreateCluster.CreateClusterResponse
instance Amazonka.Types.AWSRequest Amazonka.Kafka.CreateCluster.CreateCluster
instance Control.DeepSeq.NFData Amazonka.Kafka.CreateCluster.CreateClusterResponse
instance Data.Hashable.Class.Hashable Amazonka.Kafka.CreateCluster.CreateCluster
instance Control.DeepSeq.NFData Amazonka.Kafka.CreateCluster.CreateCluster
instance Amazonka.Data.Headers.ToHeaders Amazonka.Kafka.CreateCluster.CreateCluster
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Kafka.CreateCluster.CreateCluster
instance Amazonka.Data.Path.ToPath Amazonka.Kafka.CreateCluster.CreateCluster
instance Amazonka.Data.Query.ToQuery Amazonka.Kafka.CreateCluster.CreateCluster


-- | Disassociates one or more Scram Secrets from an Amazon MSK cluster.
module Amazonka.Kafka.BatchDisassociateScramSecret

-- | Disassociates sasl scram secrets to cluster.
--   
--   <i>See:</i> <a>newBatchDisassociateScramSecret</a> smart constructor.
data BatchDisassociateScramSecret
BatchDisassociateScramSecret' :: Text -> [Text] -> BatchDisassociateScramSecret

-- | The Amazon Resource Name (ARN) of the cluster to be updated.
[$sel:clusterArn:BatchDisassociateScramSecret'] :: BatchDisassociateScramSecret -> Text

-- | List of AWS Secrets Manager secret ARNs.
[$sel:secretArnList:BatchDisassociateScramSecret'] :: BatchDisassociateScramSecret -> [Text]

-- | Create a value of <a>BatchDisassociateScramSecret</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clusterArn:BatchDisassociateScramSecret'</a>,
--   <a>batchDisassociateScramSecret_clusterArn</a> - The Amazon Resource
--   Name (ARN) of the cluster to be updated.
--   
--   <a>$sel:secretArnList:BatchDisassociateScramSecret'</a>,
--   <a>batchDisassociateScramSecret_secretArnList</a> - List of AWS
--   Secrets Manager secret ARNs.
newBatchDisassociateScramSecret :: Text -> BatchDisassociateScramSecret

-- | The Amazon Resource Name (ARN) of the cluster to be updated.
batchDisassociateScramSecret_clusterArn :: Lens' BatchDisassociateScramSecret Text

-- | List of AWS Secrets Manager secret ARNs.
batchDisassociateScramSecret_secretArnList :: Lens' BatchDisassociateScramSecret [Text]

-- | <i>See:</i> <a>newBatchDisassociateScramSecretResponse</a> smart
--   constructor.
data BatchDisassociateScramSecretResponse
BatchDisassociateScramSecretResponse' :: Maybe Text -> Maybe [UnprocessedScramSecret] -> Int -> BatchDisassociateScramSecretResponse

-- | The Amazon Resource Name (ARN) of the cluster.
[$sel:clusterArn:BatchDisassociateScramSecretResponse'] :: BatchDisassociateScramSecretResponse -> Maybe Text

-- | List of errors when disassociating secrets to cluster.
[$sel:unprocessedScramSecrets:BatchDisassociateScramSecretResponse'] :: BatchDisassociateScramSecretResponse -> Maybe [UnprocessedScramSecret]

-- | The response's http status code.
[$sel:httpStatus:BatchDisassociateScramSecretResponse'] :: BatchDisassociateScramSecretResponse -> Int

-- | Create a value of <a>BatchDisassociateScramSecretResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clusterArn:BatchDisassociateScramSecret'</a>,
--   <a>batchDisassociateScramSecretResponse_clusterArn</a> - The Amazon
--   Resource Name (ARN) of the cluster.
--   
--   
--   <a>$sel:unprocessedScramSecrets:BatchDisassociateScramSecretResponse'</a>,
--   <a>batchDisassociateScramSecretResponse_unprocessedScramSecrets</a> -
--   List of errors when disassociating secrets to cluster.
--   
--   <a>$sel:httpStatus:BatchDisassociateScramSecretResponse'</a>,
--   <a>batchDisassociateScramSecretResponse_httpStatus</a> - The
--   response's http status code.
newBatchDisassociateScramSecretResponse :: Int -> BatchDisassociateScramSecretResponse

-- | The Amazon Resource Name (ARN) of the cluster.
batchDisassociateScramSecretResponse_clusterArn :: Lens' BatchDisassociateScramSecretResponse (Maybe Text)

-- | List of errors when disassociating secrets to cluster.
batchDisassociateScramSecretResponse_unprocessedScramSecrets :: Lens' BatchDisassociateScramSecretResponse (Maybe [UnprocessedScramSecret])

-- | The response's http status code.
batchDisassociateScramSecretResponse_httpStatus :: Lens' BatchDisassociateScramSecretResponse Int
instance GHC.Generics.Generic Amazonka.Kafka.BatchDisassociateScramSecret.BatchDisassociateScramSecret
instance GHC.Show.Show Amazonka.Kafka.BatchDisassociateScramSecret.BatchDisassociateScramSecret
instance GHC.Read.Read Amazonka.Kafka.BatchDisassociateScramSecret.BatchDisassociateScramSecret
instance GHC.Classes.Eq Amazonka.Kafka.BatchDisassociateScramSecret.BatchDisassociateScramSecret
instance GHC.Generics.Generic Amazonka.Kafka.BatchDisassociateScramSecret.BatchDisassociateScramSecretResponse
instance GHC.Show.Show Amazonka.Kafka.BatchDisassociateScramSecret.BatchDisassociateScramSecretResponse
instance GHC.Read.Read Amazonka.Kafka.BatchDisassociateScramSecret.BatchDisassociateScramSecretResponse
instance GHC.Classes.Eq Amazonka.Kafka.BatchDisassociateScramSecret.BatchDisassociateScramSecretResponse
instance Amazonka.Types.AWSRequest Amazonka.Kafka.BatchDisassociateScramSecret.BatchDisassociateScramSecret
instance Control.DeepSeq.NFData Amazonka.Kafka.BatchDisassociateScramSecret.BatchDisassociateScramSecretResponse
instance Data.Hashable.Class.Hashable Amazonka.Kafka.BatchDisassociateScramSecret.BatchDisassociateScramSecret
instance Control.DeepSeq.NFData Amazonka.Kafka.BatchDisassociateScramSecret.BatchDisassociateScramSecret
instance Amazonka.Data.Headers.ToHeaders Amazonka.Kafka.BatchDisassociateScramSecret.BatchDisassociateScramSecret
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Kafka.BatchDisassociateScramSecret.BatchDisassociateScramSecret
instance Amazonka.Data.Path.ToPath Amazonka.Kafka.BatchDisassociateScramSecret.BatchDisassociateScramSecret
instance Amazonka.Data.Query.ToQuery Amazonka.Kafka.BatchDisassociateScramSecret.BatchDisassociateScramSecret


-- | Associates one or more Scram Secrets with an Amazon MSK cluster.
module Amazonka.Kafka.BatchAssociateScramSecret

-- | Associates sasl scram secrets to cluster.
--   
--   <i>See:</i> <a>newBatchAssociateScramSecret</a> smart constructor.
data BatchAssociateScramSecret
BatchAssociateScramSecret' :: Text -> [Text] -> BatchAssociateScramSecret

-- | The Amazon Resource Name (ARN) of the cluster to be updated.
[$sel:clusterArn:BatchAssociateScramSecret'] :: BatchAssociateScramSecret -> Text

-- | List of AWS Secrets Manager secret ARNs.
[$sel:secretArnList:BatchAssociateScramSecret'] :: BatchAssociateScramSecret -> [Text]

-- | Create a value of <a>BatchAssociateScramSecret</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clusterArn:BatchAssociateScramSecret'</a>,
--   <a>batchAssociateScramSecret_clusterArn</a> - The Amazon Resource Name
--   (ARN) of the cluster to be updated.
--   
--   <a>$sel:secretArnList:BatchAssociateScramSecret'</a>,
--   <a>batchAssociateScramSecret_secretArnList</a> - List of AWS Secrets
--   Manager secret ARNs.
newBatchAssociateScramSecret :: Text -> BatchAssociateScramSecret

-- | The Amazon Resource Name (ARN) of the cluster to be updated.
batchAssociateScramSecret_clusterArn :: Lens' BatchAssociateScramSecret Text

-- | List of AWS Secrets Manager secret ARNs.
batchAssociateScramSecret_secretArnList :: Lens' BatchAssociateScramSecret [Text]

-- | <i>See:</i> <a>newBatchAssociateScramSecretResponse</a> smart
--   constructor.
data BatchAssociateScramSecretResponse
BatchAssociateScramSecretResponse' :: Maybe Text -> Maybe [UnprocessedScramSecret] -> Int -> BatchAssociateScramSecretResponse

-- | The Amazon Resource Name (ARN) of the cluster.
[$sel:clusterArn:BatchAssociateScramSecretResponse'] :: BatchAssociateScramSecretResponse -> Maybe Text

-- | List of errors when associating secrets to cluster.
[$sel:unprocessedScramSecrets:BatchAssociateScramSecretResponse'] :: BatchAssociateScramSecretResponse -> Maybe [UnprocessedScramSecret]

-- | The response's http status code.
[$sel:httpStatus:BatchAssociateScramSecretResponse'] :: BatchAssociateScramSecretResponse -> Int

-- | Create a value of <a>BatchAssociateScramSecretResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clusterArn:BatchAssociateScramSecret'</a>,
--   <a>batchAssociateScramSecretResponse_clusterArn</a> - The Amazon
--   Resource Name (ARN) of the cluster.
--   
--   
--   <a>$sel:unprocessedScramSecrets:BatchAssociateScramSecretResponse'</a>,
--   <a>batchAssociateScramSecretResponse_unprocessedScramSecrets</a> -
--   List of errors when associating secrets to cluster.
--   
--   <a>$sel:httpStatus:BatchAssociateScramSecretResponse'</a>,
--   <a>batchAssociateScramSecretResponse_httpStatus</a> - The response's
--   http status code.
newBatchAssociateScramSecretResponse :: Int -> BatchAssociateScramSecretResponse

-- | The Amazon Resource Name (ARN) of the cluster.
batchAssociateScramSecretResponse_clusterArn :: Lens' BatchAssociateScramSecretResponse (Maybe Text)

-- | List of errors when associating secrets to cluster.
batchAssociateScramSecretResponse_unprocessedScramSecrets :: Lens' BatchAssociateScramSecretResponse (Maybe [UnprocessedScramSecret])

-- | The response's http status code.
batchAssociateScramSecretResponse_httpStatus :: Lens' BatchAssociateScramSecretResponse Int
instance GHC.Generics.Generic Amazonka.Kafka.BatchAssociateScramSecret.BatchAssociateScramSecret
instance GHC.Show.Show Amazonka.Kafka.BatchAssociateScramSecret.BatchAssociateScramSecret
instance GHC.Read.Read Amazonka.Kafka.BatchAssociateScramSecret.BatchAssociateScramSecret
instance GHC.Classes.Eq Amazonka.Kafka.BatchAssociateScramSecret.BatchAssociateScramSecret
instance GHC.Generics.Generic Amazonka.Kafka.BatchAssociateScramSecret.BatchAssociateScramSecretResponse
instance GHC.Show.Show Amazonka.Kafka.BatchAssociateScramSecret.BatchAssociateScramSecretResponse
instance GHC.Read.Read Amazonka.Kafka.BatchAssociateScramSecret.BatchAssociateScramSecretResponse
instance GHC.Classes.Eq Amazonka.Kafka.BatchAssociateScramSecret.BatchAssociateScramSecretResponse
instance Amazonka.Types.AWSRequest Amazonka.Kafka.BatchAssociateScramSecret.BatchAssociateScramSecret
instance Control.DeepSeq.NFData Amazonka.Kafka.BatchAssociateScramSecret.BatchAssociateScramSecretResponse
instance Data.Hashable.Class.Hashable Amazonka.Kafka.BatchAssociateScramSecret.BatchAssociateScramSecret
instance Control.DeepSeq.NFData Amazonka.Kafka.BatchAssociateScramSecret.BatchAssociateScramSecret
instance Amazonka.Data.Headers.ToHeaders Amazonka.Kafka.BatchAssociateScramSecret.BatchAssociateScramSecret
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Kafka.BatchAssociateScramSecret.BatchAssociateScramSecret
instance Amazonka.Data.Path.ToPath Amazonka.Kafka.BatchAssociateScramSecret.BatchAssociateScramSecret
instance Amazonka.Data.Query.ToQuery Amazonka.Kafka.BatchAssociateScramSecret.BatchAssociateScramSecret


-- | Removes the tags associated with the keys that are provided in the
--   query.
module Amazonka.Kafka.UntagResource

-- | <i>See:</i> <a>newUntagResource</a> smart constructor.
data UntagResource
UntagResource' :: [Text] -> Text -> UntagResource

-- | Tag keys must be unique for a given cluster. In addition, the
--   following restrictions apply:
--   
--   <ul>
--   <li>Each tag key must be unique. If you add a tag with a key that's
--   already in use, your new tag overwrites the existing key-value
--   pair.</li>
--   <li>You can't start a tag key with aws: because this prefix is
--   reserved for use by AWS. AWS creates tags that begin with this prefix
--   on your behalf, but you can't edit or delete them.</li>
--   <li>Tag keys must be between 1 and 128 Unicode characters in
--   length.</li>
--   <li>Tag keys must consist of the following characters: Unicode
--   letters, digits, white space, and the following special characters: _
--   . / = + - @.</li>
--   </ul>
[$sel:tagKeys:UntagResource'] :: UntagResource -> [Text]

-- | The Amazon Resource Name (ARN) that uniquely identifies the resource
--   that's associated with the tags.
[$sel:resourceArn:UntagResource'] :: UntagResource -> Text

-- | Create a value of <a>UntagResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tagKeys:UntagResource'</a>, <a>untagResource_tagKeys</a> - Tag
--   keys must be unique for a given cluster. In addition, the following
--   restrictions apply:
--   
--   <ul>
--   <li>Each tag key must be unique. If you add a tag with a key that's
--   already in use, your new tag overwrites the existing key-value
--   pair.</li>
--   <li>You can't start a tag key with aws: because this prefix is
--   reserved for use by AWS. AWS creates tags that begin with this prefix
--   on your behalf, but you can't edit or delete them.</li>
--   <li>Tag keys must be between 1 and 128 Unicode characters in
--   length.</li>
--   <li>Tag keys must consist of the following characters: Unicode
--   letters, digits, white space, and the following special characters: _
--   . / = + - @.</li>
--   </ul>
--   
--   <a>$sel:resourceArn:UntagResource'</a>,
--   <a>untagResource_resourceArn</a> - The Amazon Resource Name (ARN) that
--   uniquely identifies the resource that's associated with the tags.
newUntagResource :: Text -> UntagResource

-- | Tag keys must be unique for a given cluster. In addition, the
--   following restrictions apply:
--   
--   <ul>
--   <li>Each tag key must be unique. If you add a tag with a key that's
--   already in use, your new tag overwrites the existing key-value
--   pair.</li>
--   <li>You can't start a tag key with aws: because this prefix is
--   reserved for use by AWS. AWS creates tags that begin with this prefix
--   on your behalf, but you can't edit or delete them.</li>
--   <li>Tag keys must be between 1 and 128 Unicode characters in
--   length.</li>
--   <li>Tag keys must consist of the following characters: Unicode
--   letters, digits, white space, and the following special characters: _
--   . / = + - @.</li>
--   </ul>
untagResource_tagKeys :: Lens' UntagResource [Text]

-- | The Amazon Resource Name (ARN) that uniquely identifies the resource
--   that's associated with the tags.
untagResource_resourceArn :: Lens' UntagResource Text

-- | <i>See:</i> <a>newUntagResourceResponse</a> smart constructor.
data UntagResourceResponse
UntagResourceResponse' :: UntagResourceResponse

-- | Create a value of <a>UntagResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newUntagResourceResponse :: UntagResourceResponse
instance GHC.Generics.Generic Amazonka.Kafka.UntagResource.UntagResource
instance GHC.Show.Show Amazonka.Kafka.UntagResource.UntagResource
instance GHC.Read.Read Amazonka.Kafka.UntagResource.UntagResource
instance GHC.Classes.Eq Amazonka.Kafka.UntagResource.UntagResource
instance GHC.Generics.Generic Amazonka.Kafka.UntagResource.UntagResourceResponse
instance GHC.Show.Show Amazonka.Kafka.UntagResource.UntagResourceResponse
instance GHC.Read.Read Amazonka.Kafka.UntagResource.UntagResourceResponse
instance GHC.Classes.Eq Amazonka.Kafka.UntagResource.UntagResourceResponse
instance Amazonka.Types.AWSRequest Amazonka.Kafka.UntagResource.UntagResource
instance Control.DeepSeq.NFData Amazonka.Kafka.UntagResource.UntagResourceResponse
instance Data.Hashable.Class.Hashable Amazonka.Kafka.UntagResource.UntagResource
instance Control.DeepSeq.NFData Amazonka.Kafka.UntagResource.UntagResource
instance Amazonka.Data.Headers.ToHeaders Amazonka.Kafka.UntagResource.UntagResource
instance Amazonka.Data.Path.ToPath Amazonka.Kafka.UntagResource.UntagResource
instance Amazonka.Data.Query.ToQuery Amazonka.Kafka.UntagResource.UntagResource


-- | Updates the number of broker nodes in the cluster.
module Amazonka.Kafka.UpdateBrokerCount

-- | <i>See:</i> <a>newUpdateBrokerCount</a> smart constructor.
data UpdateBrokerCount
UpdateBrokerCount' :: Text -> Text -> Natural -> UpdateBrokerCount

-- | The Amazon Resource Name (ARN) that uniquely identifies the cluster.
[$sel:clusterArn:UpdateBrokerCount'] :: UpdateBrokerCount -> Text

-- | The version of cluster to update from. A successful operation will
--   then generate a new version.
[$sel:currentVersion:UpdateBrokerCount'] :: UpdateBrokerCount -> Text

-- | The number of broker nodes that you want the cluster to have after
--   this operation completes successfully.
[$sel:targetNumberOfBrokerNodes:UpdateBrokerCount'] :: UpdateBrokerCount -> Natural

-- | Create a value of <a>UpdateBrokerCount</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clusterArn:UpdateBrokerCount'</a>,
--   <a>updateBrokerCount_clusterArn</a> - The Amazon Resource Name (ARN)
--   that uniquely identifies the cluster.
--   
--   <a>$sel:currentVersion:UpdateBrokerCount'</a>,
--   <a>updateBrokerCount_currentVersion</a> - The version of cluster to
--   update from. A successful operation will then generate a new version.
--   
--   <a>$sel:targetNumberOfBrokerNodes:UpdateBrokerCount'</a>,
--   <a>updateBrokerCount_targetNumberOfBrokerNodes</a> - The number of
--   broker nodes that you want the cluster to have after this operation
--   completes successfully.
newUpdateBrokerCount :: Text -> Text -> Natural -> UpdateBrokerCount

-- | The Amazon Resource Name (ARN) that uniquely identifies the cluster.
updateBrokerCount_clusterArn :: Lens' UpdateBrokerCount Text

-- | The version of cluster to update from. A successful operation will
--   then generate a new version.
updateBrokerCount_currentVersion :: Lens' UpdateBrokerCount Text

-- | The number of broker nodes that you want the cluster to have after
--   this operation completes successfully.
updateBrokerCount_targetNumberOfBrokerNodes :: Lens' UpdateBrokerCount Natural

-- | <i>See:</i> <a>newUpdateBrokerCountResponse</a> smart constructor.
data UpdateBrokerCountResponse
UpdateBrokerCountResponse' :: Maybe Text -> Maybe Text -> Int -> UpdateBrokerCountResponse

-- | The Amazon Resource Name (ARN) of the cluster.
[$sel:clusterArn:UpdateBrokerCountResponse'] :: UpdateBrokerCountResponse -> Maybe Text

-- | The Amazon Resource Name (ARN) of the cluster operation.
[$sel:clusterOperationArn:UpdateBrokerCountResponse'] :: UpdateBrokerCountResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:UpdateBrokerCountResponse'] :: UpdateBrokerCountResponse -> Int

-- | Create a value of <a>UpdateBrokerCountResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clusterArn:UpdateBrokerCount'</a>,
--   <a>updateBrokerCountResponse_clusterArn</a> - The Amazon Resource Name
--   (ARN) of the cluster.
--   
--   <a>$sel:clusterOperationArn:UpdateBrokerCountResponse'</a>,
--   <a>updateBrokerCountResponse_clusterOperationArn</a> - The Amazon
--   Resource Name (ARN) of the cluster operation.
--   
--   <a>$sel:httpStatus:UpdateBrokerCountResponse'</a>,
--   <a>updateBrokerCountResponse_httpStatus</a> - The response's http
--   status code.
newUpdateBrokerCountResponse :: Int -> UpdateBrokerCountResponse

-- | The Amazon Resource Name (ARN) of the cluster.
updateBrokerCountResponse_clusterArn :: Lens' UpdateBrokerCountResponse (Maybe Text)

-- | The Amazon Resource Name (ARN) of the cluster operation.
updateBrokerCountResponse_clusterOperationArn :: Lens' UpdateBrokerCountResponse (Maybe Text)

-- | The response's http status code.
updateBrokerCountResponse_httpStatus :: Lens' UpdateBrokerCountResponse Int
instance GHC.Generics.Generic Amazonka.Kafka.UpdateBrokerCount.UpdateBrokerCount
instance GHC.Show.Show Amazonka.Kafka.UpdateBrokerCount.UpdateBrokerCount
instance GHC.Read.Read Amazonka.Kafka.UpdateBrokerCount.UpdateBrokerCount
instance GHC.Classes.Eq Amazonka.Kafka.UpdateBrokerCount.UpdateBrokerCount
instance GHC.Generics.Generic Amazonka.Kafka.UpdateBrokerCount.UpdateBrokerCountResponse
instance GHC.Show.Show Amazonka.Kafka.UpdateBrokerCount.UpdateBrokerCountResponse
instance GHC.Read.Read Amazonka.Kafka.UpdateBrokerCount.UpdateBrokerCountResponse
instance GHC.Classes.Eq Amazonka.Kafka.UpdateBrokerCount.UpdateBrokerCountResponse
instance Amazonka.Types.AWSRequest Amazonka.Kafka.UpdateBrokerCount.UpdateBrokerCount
instance Control.DeepSeq.NFData Amazonka.Kafka.UpdateBrokerCount.UpdateBrokerCountResponse
instance Data.Hashable.Class.Hashable Amazonka.Kafka.UpdateBrokerCount.UpdateBrokerCount
instance Control.DeepSeq.NFData Amazonka.Kafka.UpdateBrokerCount.UpdateBrokerCount
instance Amazonka.Data.Headers.ToHeaders Amazonka.Kafka.UpdateBrokerCount.UpdateBrokerCount
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Kafka.UpdateBrokerCount.UpdateBrokerCount
instance Amazonka.Data.Path.ToPath Amazonka.Kafka.UpdateBrokerCount.UpdateBrokerCount
instance Amazonka.Data.Query.ToQuery Amazonka.Kafka.UpdateBrokerCount.UpdateBrokerCount


-- | Updates the EBS storage associated with MSK brokers.
module Amazonka.Kafka.UpdateBrokerStorage

-- | <i>See:</i> <a>newUpdateBrokerStorage</a> smart constructor.
data UpdateBrokerStorage
UpdateBrokerStorage' :: Text -> [BrokerEBSVolumeInfo] -> Text -> UpdateBrokerStorage

-- | The Amazon Resource Name (ARN) that uniquely identifies the cluster.
[$sel:clusterArn:UpdateBrokerStorage'] :: UpdateBrokerStorage -> Text

-- | Describes the target volume size and the ID of the broker to apply the
--   update to.
[$sel:targetBrokerEBSVolumeInfo:UpdateBrokerStorage'] :: UpdateBrokerStorage -> [BrokerEBSVolumeInfo]

-- | The version of cluster to update from. A successful operation will
--   then generate a new version.
[$sel:currentVersion:UpdateBrokerStorage'] :: UpdateBrokerStorage -> Text

-- | Create a value of <a>UpdateBrokerStorage</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clusterArn:UpdateBrokerStorage'</a>,
--   <a>updateBrokerStorage_clusterArn</a> - The Amazon Resource Name (ARN)
--   that uniquely identifies the cluster.
--   
--   <a>$sel:targetBrokerEBSVolumeInfo:UpdateBrokerStorage'</a>,
--   <a>updateBrokerStorage_targetBrokerEBSVolumeInfo</a> - Describes the
--   target volume size and the ID of the broker to apply the update to.
--   
--   <a>$sel:currentVersion:UpdateBrokerStorage'</a>,
--   <a>updateBrokerStorage_currentVersion</a> - The version of cluster to
--   update from. A successful operation will then generate a new version.
newUpdateBrokerStorage :: Text -> Text -> UpdateBrokerStorage

-- | The Amazon Resource Name (ARN) that uniquely identifies the cluster.
updateBrokerStorage_clusterArn :: Lens' UpdateBrokerStorage Text

-- | Describes the target volume size and the ID of the broker to apply the
--   update to.
updateBrokerStorage_targetBrokerEBSVolumeInfo :: Lens' UpdateBrokerStorage [BrokerEBSVolumeInfo]

-- | The version of cluster to update from. A successful operation will
--   then generate a new version.
updateBrokerStorage_currentVersion :: Lens' UpdateBrokerStorage Text

-- | <i>See:</i> <a>newUpdateBrokerStorageResponse</a> smart constructor.
data UpdateBrokerStorageResponse
UpdateBrokerStorageResponse' :: Maybe Text -> Maybe Text -> Int -> UpdateBrokerStorageResponse

-- | The Amazon Resource Name (ARN) of the cluster.
[$sel:clusterArn:UpdateBrokerStorageResponse'] :: UpdateBrokerStorageResponse -> Maybe Text

-- | The Amazon Resource Name (ARN) of the cluster operation.
[$sel:clusterOperationArn:UpdateBrokerStorageResponse'] :: UpdateBrokerStorageResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:UpdateBrokerStorageResponse'] :: UpdateBrokerStorageResponse -> Int

-- | Create a value of <a>UpdateBrokerStorageResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clusterArn:UpdateBrokerStorage'</a>,
--   <a>updateBrokerStorageResponse_clusterArn</a> - The Amazon Resource
--   Name (ARN) of the cluster.
--   
--   <a>$sel:clusterOperationArn:UpdateBrokerStorageResponse'</a>,
--   <a>updateBrokerStorageResponse_clusterOperationArn</a> - The Amazon
--   Resource Name (ARN) of the cluster operation.
--   
--   <a>$sel:httpStatus:UpdateBrokerStorageResponse'</a>,
--   <a>updateBrokerStorageResponse_httpStatus</a> - The response's http
--   status code.
newUpdateBrokerStorageResponse :: Int -> UpdateBrokerStorageResponse

-- | The Amazon Resource Name (ARN) of the cluster.
updateBrokerStorageResponse_clusterArn :: Lens' UpdateBrokerStorageResponse (Maybe Text)

-- | The Amazon Resource Name (ARN) of the cluster operation.
updateBrokerStorageResponse_clusterOperationArn :: Lens' UpdateBrokerStorageResponse (Maybe Text)

-- | The response's http status code.
updateBrokerStorageResponse_httpStatus :: Lens' UpdateBrokerStorageResponse Int
instance GHC.Generics.Generic Amazonka.Kafka.UpdateBrokerStorage.UpdateBrokerStorage
instance GHC.Show.Show Amazonka.Kafka.UpdateBrokerStorage.UpdateBrokerStorage
instance GHC.Read.Read Amazonka.Kafka.UpdateBrokerStorage.UpdateBrokerStorage
instance GHC.Classes.Eq Amazonka.Kafka.UpdateBrokerStorage.UpdateBrokerStorage
instance GHC.Generics.Generic Amazonka.Kafka.UpdateBrokerStorage.UpdateBrokerStorageResponse
instance GHC.Show.Show Amazonka.Kafka.UpdateBrokerStorage.UpdateBrokerStorageResponse
instance GHC.Read.Read Amazonka.Kafka.UpdateBrokerStorage.UpdateBrokerStorageResponse
instance GHC.Classes.Eq Amazonka.Kafka.UpdateBrokerStorage.UpdateBrokerStorageResponse
instance Amazonka.Types.AWSRequest Amazonka.Kafka.UpdateBrokerStorage.UpdateBrokerStorage
instance Control.DeepSeq.NFData Amazonka.Kafka.UpdateBrokerStorage.UpdateBrokerStorageResponse
instance Data.Hashable.Class.Hashable Amazonka.Kafka.UpdateBrokerStorage.UpdateBrokerStorage
instance Control.DeepSeq.NFData Amazonka.Kafka.UpdateBrokerStorage.UpdateBrokerStorage
instance Amazonka.Data.Headers.ToHeaders Amazonka.Kafka.UpdateBrokerStorage.UpdateBrokerStorage
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Kafka.UpdateBrokerStorage.UpdateBrokerStorage
instance Amazonka.Data.Path.ToPath Amazonka.Kafka.UpdateBrokerStorage.UpdateBrokerStorage
instance Amazonka.Data.Query.ToQuery Amazonka.Kafka.UpdateBrokerStorage.UpdateBrokerStorage


-- | Updates EC2 instance type.
module Amazonka.Kafka.UpdateBrokerType

-- | <i>See:</i> <a>newUpdateBrokerType</a> smart constructor.
data UpdateBrokerType
UpdateBrokerType' :: Text -> Text -> Text -> UpdateBrokerType

-- | The Amazon Resource Name (ARN) that uniquely identifies the cluster.
[$sel:clusterArn:UpdateBrokerType'] :: UpdateBrokerType -> Text

-- | The cluster version that you want to change. After this operation
--   completes successfully, the cluster will have a new version.
[$sel:currentVersion:UpdateBrokerType'] :: UpdateBrokerType -> Text

-- | The Amazon MSK broker type that you want all of the brokers in this
--   cluster to be.
[$sel:targetInstanceType:UpdateBrokerType'] :: UpdateBrokerType -> Text

-- | Create a value of <a>UpdateBrokerType</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clusterArn:UpdateBrokerType'</a>,
--   <a>updateBrokerType_clusterArn</a> - The Amazon Resource Name (ARN)
--   that uniquely identifies the cluster.
--   
--   <a>$sel:currentVersion:UpdateBrokerType'</a>,
--   <a>updateBrokerType_currentVersion</a> - The cluster version that you
--   want to change. After this operation completes successfully, the
--   cluster will have a new version.
--   
--   <a>$sel:targetInstanceType:UpdateBrokerType'</a>,
--   <a>updateBrokerType_targetInstanceType</a> - The Amazon MSK broker
--   type that you want all of the brokers in this cluster to be.
newUpdateBrokerType :: Text -> Text -> Text -> UpdateBrokerType

-- | The Amazon Resource Name (ARN) that uniquely identifies the cluster.
updateBrokerType_clusterArn :: Lens' UpdateBrokerType Text

-- | The cluster version that you want to change. After this operation
--   completes successfully, the cluster will have a new version.
updateBrokerType_currentVersion :: Lens' UpdateBrokerType Text

-- | The Amazon MSK broker type that you want all of the brokers in this
--   cluster to be.
updateBrokerType_targetInstanceType :: Lens' UpdateBrokerType Text

-- | <i>See:</i> <a>newUpdateBrokerTypeResponse</a> smart constructor.
data UpdateBrokerTypeResponse
UpdateBrokerTypeResponse' :: Maybe Text -> Maybe Text -> Int -> UpdateBrokerTypeResponse

-- | The Amazon Resource Name (ARN) of the cluster.
[$sel:clusterArn:UpdateBrokerTypeResponse'] :: UpdateBrokerTypeResponse -> Maybe Text

-- | The Amazon Resource Name (ARN) of the cluster operation.
[$sel:clusterOperationArn:UpdateBrokerTypeResponse'] :: UpdateBrokerTypeResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:UpdateBrokerTypeResponse'] :: UpdateBrokerTypeResponse -> Int

-- | Create a value of <a>UpdateBrokerTypeResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clusterArn:UpdateBrokerType'</a>,
--   <a>updateBrokerTypeResponse_clusterArn</a> - The Amazon Resource Name
--   (ARN) of the cluster.
--   
--   <a>$sel:clusterOperationArn:UpdateBrokerTypeResponse'</a>,
--   <a>updateBrokerTypeResponse_clusterOperationArn</a> - The Amazon
--   Resource Name (ARN) of the cluster operation.
--   
--   <a>$sel:httpStatus:UpdateBrokerTypeResponse'</a>,
--   <a>updateBrokerTypeResponse_httpStatus</a> - The response's http
--   status code.
newUpdateBrokerTypeResponse :: Int -> UpdateBrokerTypeResponse

-- | The Amazon Resource Name (ARN) of the cluster.
updateBrokerTypeResponse_clusterArn :: Lens' UpdateBrokerTypeResponse (Maybe Text)

-- | The Amazon Resource Name (ARN) of the cluster operation.
updateBrokerTypeResponse_clusterOperationArn :: Lens' UpdateBrokerTypeResponse (Maybe Text)

-- | The response's http status code.
updateBrokerTypeResponse_httpStatus :: Lens' UpdateBrokerTypeResponse Int
instance GHC.Generics.Generic Amazonka.Kafka.UpdateBrokerType.UpdateBrokerType
instance GHC.Show.Show Amazonka.Kafka.UpdateBrokerType.UpdateBrokerType
instance GHC.Read.Read Amazonka.Kafka.UpdateBrokerType.UpdateBrokerType
instance GHC.Classes.Eq Amazonka.Kafka.UpdateBrokerType.UpdateBrokerType
instance GHC.Generics.Generic Amazonka.Kafka.UpdateBrokerType.UpdateBrokerTypeResponse
instance GHC.Show.Show Amazonka.Kafka.UpdateBrokerType.UpdateBrokerTypeResponse
instance GHC.Read.Read Amazonka.Kafka.UpdateBrokerType.UpdateBrokerTypeResponse
instance GHC.Classes.Eq Amazonka.Kafka.UpdateBrokerType.UpdateBrokerTypeResponse
instance Amazonka.Types.AWSRequest Amazonka.Kafka.UpdateBrokerType.UpdateBrokerType
instance Control.DeepSeq.NFData Amazonka.Kafka.UpdateBrokerType.UpdateBrokerTypeResponse
instance Data.Hashable.Class.Hashable Amazonka.Kafka.UpdateBrokerType.UpdateBrokerType
instance Control.DeepSeq.NFData Amazonka.Kafka.UpdateBrokerType.UpdateBrokerType
instance Amazonka.Data.Headers.ToHeaders Amazonka.Kafka.UpdateBrokerType.UpdateBrokerType
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Kafka.UpdateBrokerType.UpdateBrokerType
instance Amazonka.Data.Path.ToPath Amazonka.Kafka.UpdateBrokerType.UpdateBrokerType
instance Amazonka.Data.Query.ToQuery Amazonka.Kafka.UpdateBrokerType.UpdateBrokerType


-- | Updates the cluster with the configuration that is specified in the
--   request body.
module Amazonka.Kafka.UpdateClusterConfiguration

-- | <i>See:</i> <a>newUpdateClusterConfiguration</a> smart constructor.
data UpdateClusterConfiguration
UpdateClusterConfiguration' :: Text -> Text -> ConfigurationInfo -> UpdateClusterConfiguration

-- | The Amazon Resource Name (ARN) that uniquely identifies the cluster.
[$sel:clusterArn:UpdateClusterConfiguration'] :: UpdateClusterConfiguration -> Text

-- | The version of the cluster that needs to be updated.
[$sel:currentVersion:UpdateClusterConfiguration'] :: UpdateClusterConfiguration -> Text

-- | Represents the configuration that you want MSK to use for the brokers
--   in a cluster.
[$sel:configurationInfo:UpdateClusterConfiguration'] :: UpdateClusterConfiguration -> ConfigurationInfo

-- | Create a value of <a>UpdateClusterConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clusterArn:UpdateClusterConfiguration'</a>,
--   <a>updateClusterConfiguration_clusterArn</a> - The Amazon Resource
--   Name (ARN) that uniquely identifies the cluster.
--   
--   <a>$sel:currentVersion:UpdateClusterConfiguration'</a>,
--   <a>updateClusterConfiguration_currentVersion</a> - The version of the
--   cluster that needs to be updated.
--   
--   <a>$sel:configurationInfo:UpdateClusterConfiguration'</a>,
--   <a>updateClusterConfiguration_configurationInfo</a> - Represents the
--   configuration that you want MSK to use for the brokers in a cluster.
newUpdateClusterConfiguration :: Text -> Text -> ConfigurationInfo -> UpdateClusterConfiguration

-- | The Amazon Resource Name (ARN) that uniquely identifies the cluster.
updateClusterConfiguration_clusterArn :: Lens' UpdateClusterConfiguration Text

-- | The version of the cluster that needs to be updated.
updateClusterConfiguration_currentVersion :: Lens' UpdateClusterConfiguration Text

-- | Represents the configuration that you want MSK to use for the brokers
--   in a cluster.
updateClusterConfiguration_configurationInfo :: Lens' UpdateClusterConfiguration ConfigurationInfo

-- | <i>See:</i> <a>newUpdateClusterConfigurationResponse</a> smart
--   constructor.
data UpdateClusterConfigurationResponse
UpdateClusterConfigurationResponse' :: Maybe Text -> Maybe Text -> Int -> UpdateClusterConfigurationResponse

-- | The Amazon Resource Name (ARN) of the cluster.
[$sel:clusterArn:UpdateClusterConfigurationResponse'] :: UpdateClusterConfigurationResponse -> Maybe Text

-- | The Amazon Resource Name (ARN) of the cluster operation.
[$sel:clusterOperationArn:UpdateClusterConfigurationResponse'] :: UpdateClusterConfigurationResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:UpdateClusterConfigurationResponse'] :: UpdateClusterConfigurationResponse -> Int

-- | Create a value of <a>UpdateClusterConfigurationResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clusterArn:UpdateClusterConfiguration'</a>,
--   <a>updateClusterConfigurationResponse_clusterArn</a> - The Amazon
--   Resource Name (ARN) of the cluster.
--   
--   <a>$sel:clusterOperationArn:UpdateClusterConfigurationResponse'</a>,
--   <a>updateClusterConfigurationResponse_clusterOperationArn</a> - The
--   Amazon Resource Name (ARN) of the cluster operation.
--   
--   <a>$sel:httpStatus:UpdateClusterConfigurationResponse'</a>,
--   <a>updateClusterConfigurationResponse_httpStatus</a> - The response's
--   http status code.
newUpdateClusterConfigurationResponse :: Int -> UpdateClusterConfigurationResponse

-- | The Amazon Resource Name (ARN) of the cluster.
updateClusterConfigurationResponse_clusterArn :: Lens' UpdateClusterConfigurationResponse (Maybe Text)

-- | The Amazon Resource Name (ARN) of the cluster operation.
updateClusterConfigurationResponse_clusterOperationArn :: Lens' UpdateClusterConfigurationResponse (Maybe Text)

-- | The response's http status code.
updateClusterConfigurationResponse_httpStatus :: Lens' UpdateClusterConfigurationResponse Int
instance GHC.Generics.Generic Amazonka.Kafka.UpdateClusterConfiguration.UpdateClusterConfiguration
instance GHC.Show.Show Amazonka.Kafka.UpdateClusterConfiguration.UpdateClusterConfiguration
instance GHC.Read.Read Amazonka.Kafka.UpdateClusterConfiguration.UpdateClusterConfiguration
instance GHC.Classes.Eq Amazonka.Kafka.UpdateClusterConfiguration.UpdateClusterConfiguration
instance GHC.Generics.Generic Amazonka.Kafka.UpdateClusterConfiguration.UpdateClusterConfigurationResponse
instance GHC.Show.Show Amazonka.Kafka.UpdateClusterConfiguration.UpdateClusterConfigurationResponse
instance GHC.Read.Read Amazonka.Kafka.UpdateClusterConfiguration.UpdateClusterConfigurationResponse
instance GHC.Classes.Eq Amazonka.Kafka.UpdateClusterConfiguration.UpdateClusterConfigurationResponse
instance Amazonka.Types.AWSRequest Amazonka.Kafka.UpdateClusterConfiguration.UpdateClusterConfiguration
instance Control.DeepSeq.NFData Amazonka.Kafka.UpdateClusterConfiguration.UpdateClusterConfigurationResponse
instance Data.Hashable.Class.Hashable Amazonka.Kafka.UpdateClusterConfiguration.UpdateClusterConfiguration
instance Control.DeepSeq.NFData Amazonka.Kafka.UpdateClusterConfiguration.UpdateClusterConfiguration
instance Amazonka.Data.Headers.ToHeaders Amazonka.Kafka.UpdateClusterConfiguration.UpdateClusterConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Kafka.UpdateClusterConfiguration.UpdateClusterConfiguration
instance Amazonka.Data.Path.ToPath Amazonka.Kafka.UpdateClusterConfiguration.UpdateClusterConfiguration
instance Amazonka.Data.Query.ToQuery Amazonka.Kafka.UpdateClusterConfiguration.UpdateClusterConfiguration


-- | Updates the Apache Kafka version for the cluster.
module Amazonka.Kafka.UpdateClusterKafkaVersion

-- | <i>See:</i> <a>newUpdateClusterKafkaVersion</a> smart constructor.
data UpdateClusterKafkaVersion
UpdateClusterKafkaVersion' :: Maybe ConfigurationInfo -> Text -> Text -> Text -> UpdateClusterKafkaVersion

-- | The custom configuration that should be applied on the new version of
--   cluster.
[$sel:configurationInfo:UpdateClusterKafkaVersion'] :: UpdateClusterKafkaVersion -> Maybe ConfigurationInfo

-- | The Amazon Resource Name (ARN) of the cluster to be updated.
[$sel:clusterArn:UpdateClusterKafkaVersion'] :: UpdateClusterKafkaVersion -> Text

-- | Target Kafka version.
[$sel:targetKafkaVersion:UpdateClusterKafkaVersion'] :: UpdateClusterKafkaVersion -> Text

-- | Current cluster version.
[$sel:currentVersion:UpdateClusterKafkaVersion'] :: UpdateClusterKafkaVersion -> Text

-- | Create a value of <a>UpdateClusterKafkaVersion</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:configurationInfo:UpdateClusterKafkaVersion'</a>,
--   <a>updateClusterKafkaVersion_configurationInfo</a> - The custom
--   configuration that should be applied on the new version of cluster.
--   
--   <a>$sel:clusterArn:UpdateClusterKafkaVersion'</a>,
--   <a>updateClusterKafkaVersion_clusterArn</a> - The Amazon Resource Name
--   (ARN) of the cluster to be updated.
--   
--   <a>$sel:targetKafkaVersion:UpdateClusterKafkaVersion'</a>,
--   <a>updateClusterKafkaVersion_targetKafkaVersion</a> - Target Kafka
--   version.
--   
--   <a>$sel:currentVersion:UpdateClusterKafkaVersion'</a>,
--   <a>updateClusterKafkaVersion_currentVersion</a> - Current cluster
--   version.
newUpdateClusterKafkaVersion :: Text -> Text -> Text -> UpdateClusterKafkaVersion

-- | The custom configuration that should be applied on the new version of
--   cluster.
updateClusterKafkaVersion_configurationInfo :: Lens' UpdateClusterKafkaVersion (Maybe ConfigurationInfo)

-- | The Amazon Resource Name (ARN) of the cluster to be updated.
updateClusterKafkaVersion_clusterArn :: Lens' UpdateClusterKafkaVersion Text

-- | Target Kafka version.
updateClusterKafkaVersion_targetKafkaVersion :: Lens' UpdateClusterKafkaVersion Text

-- | Current cluster version.
updateClusterKafkaVersion_currentVersion :: Lens' UpdateClusterKafkaVersion Text

-- | <i>See:</i> <a>newUpdateClusterKafkaVersionResponse</a> smart
--   constructor.
data UpdateClusterKafkaVersionResponse
UpdateClusterKafkaVersionResponse' :: Maybe Text -> Maybe Text -> Int -> UpdateClusterKafkaVersionResponse

-- | The Amazon Resource Name (ARN) of the cluster.
[$sel:clusterArn:UpdateClusterKafkaVersionResponse'] :: UpdateClusterKafkaVersionResponse -> Maybe Text

-- | The Amazon Resource Name (ARN) of the cluster operation.
[$sel:clusterOperationArn:UpdateClusterKafkaVersionResponse'] :: UpdateClusterKafkaVersionResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:UpdateClusterKafkaVersionResponse'] :: UpdateClusterKafkaVersionResponse -> Int

-- | Create a value of <a>UpdateClusterKafkaVersionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clusterArn:UpdateClusterKafkaVersion'</a>,
--   <a>updateClusterKafkaVersionResponse_clusterArn</a> - The Amazon
--   Resource Name (ARN) of the cluster.
--   
--   <a>$sel:clusterOperationArn:UpdateClusterKafkaVersionResponse'</a>,
--   <a>updateClusterKafkaVersionResponse_clusterOperationArn</a> - The
--   Amazon Resource Name (ARN) of the cluster operation.
--   
--   <a>$sel:httpStatus:UpdateClusterKafkaVersionResponse'</a>,
--   <a>updateClusterKafkaVersionResponse_httpStatus</a> - The response's
--   http status code.
newUpdateClusterKafkaVersionResponse :: Int -> UpdateClusterKafkaVersionResponse

-- | The Amazon Resource Name (ARN) of the cluster.
updateClusterKafkaVersionResponse_clusterArn :: Lens' UpdateClusterKafkaVersionResponse (Maybe Text)

-- | The Amazon Resource Name (ARN) of the cluster operation.
updateClusterKafkaVersionResponse_clusterOperationArn :: Lens' UpdateClusterKafkaVersionResponse (Maybe Text)

-- | The response's http status code.
updateClusterKafkaVersionResponse_httpStatus :: Lens' UpdateClusterKafkaVersionResponse Int
instance GHC.Generics.Generic Amazonka.Kafka.UpdateClusterKafkaVersion.UpdateClusterKafkaVersion
instance GHC.Show.Show Amazonka.Kafka.UpdateClusterKafkaVersion.UpdateClusterKafkaVersion
instance GHC.Read.Read Amazonka.Kafka.UpdateClusterKafkaVersion.UpdateClusterKafkaVersion
instance GHC.Classes.Eq Amazonka.Kafka.UpdateClusterKafkaVersion.UpdateClusterKafkaVersion
instance GHC.Generics.Generic Amazonka.Kafka.UpdateClusterKafkaVersion.UpdateClusterKafkaVersionResponse
instance GHC.Show.Show Amazonka.Kafka.UpdateClusterKafkaVersion.UpdateClusterKafkaVersionResponse
instance GHC.Read.Read Amazonka.Kafka.UpdateClusterKafkaVersion.UpdateClusterKafkaVersionResponse
instance GHC.Classes.Eq Amazonka.Kafka.UpdateClusterKafkaVersion.UpdateClusterKafkaVersionResponse
instance Amazonka.Types.AWSRequest Amazonka.Kafka.UpdateClusterKafkaVersion.UpdateClusterKafkaVersion
instance Control.DeepSeq.NFData Amazonka.Kafka.UpdateClusterKafkaVersion.UpdateClusterKafkaVersionResponse
instance Data.Hashable.Class.Hashable Amazonka.Kafka.UpdateClusterKafkaVersion.UpdateClusterKafkaVersion
instance Control.DeepSeq.NFData Amazonka.Kafka.UpdateClusterKafkaVersion.UpdateClusterKafkaVersion
instance Amazonka.Data.Headers.ToHeaders Amazonka.Kafka.UpdateClusterKafkaVersion.UpdateClusterKafkaVersion
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Kafka.UpdateClusterKafkaVersion.UpdateClusterKafkaVersion
instance Amazonka.Data.Path.ToPath Amazonka.Kafka.UpdateClusterKafkaVersion.UpdateClusterKafkaVersion
instance Amazonka.Data.Query.ToQuery Amazonka.Kafka.UpdateClusterKafkaVersion.UpdateClusterKafkaVersion


-- | Updates an MSK configuration.
module Amazonka.Kafka.UpdateConfiguration

-- | <i>See:</i> <a>newUpdateConfiguration</a> smart constructor.
data UpdateConfiguration
UpdateConfiguration' :: Maybe Text -> Text -> Base64 -> UpdateConfiguration

-- | The description of the configuration revision.
[$sel:description:UpdateConfiguration'] :: UpdateConfiguration -> Maybe Text

-- | The Amazon Resource Name (ARN) of the configuration.
[$sel:arn:UpdateConfiguration'] :: UpdateConfiguration -> Text

-- | Contents of the server.properties file. When using the API, you must
--   ensure that the contents of the file are base64 encoded. When using
--   the AWS Management Console, the SDK, or the AWS CLI, the contents of
--   server.properties can be in plaintext.
[$sel:serverProperties:UpdateConfiguration'] :: UpdateConfiguration -> Base64

-- | Create a value of <a>UpdateConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:description:UpdateConfiguration'</a>,
--   <a>updateConfiguration_description</a> - The description of the
--   configuration revision.
--   
--   <a>$sel:arn:UpdateConfiguration'</a>, <a>updateConfiguration_arn</a> -
--   The Amazon Resource Name (ARN) of the configuration.
--   
--   <a>$sel:serverProperties:UpdateConfiguration'</a>,
--   <a>updateConfiguration_serverProperties</a> - Contents of the
--   server.properties file. When using the API, you must ensure that the
--   contents of the file are base64 encoded. When using the AWS Management
--   Console, the SDK, or the AWS CLI, the contents of server.properties
--   can be in plaintext.-- -- <i>Note:</i> This <tt>Lens</tt>
--   automatically encodes and decodes Base64 data. -- The underlying
--   isomorphism will encode to Base64 representation during --
--   serialisation, and decode from Base64 representation during
--   deserialisation. -- This <tt>Lens</tt> accepts and returns only raw
--   unencoded data.
newUpdateConfiguration :: Text -> ByteString -> UpdateConfiguration

-- | The description of the configuration revision.
updateConfiguration_description :: Lens' UpdateConfiguration (Maybe Text)

-- | The Amazon Resource Name (ARN) of the configuration.
updateConfiguration_arn :: Lens' UpdateConfiguration Text

-- | Contents of the server.properties file. When using the API, you must
--   ensure that the contents of the file are base64 encoded. When using
--   the AWS Management Console, the SDK, or the AWS CLI, the contents of
--   server.properties can be in plaintext.-- -- <i>Note:</i> This
--   <tt>Lens</tt> automatically encodes and decodes Base64 data. -- The
--   underlying isomorphism will encode to Base64 representation during --
--   serialisation, and decode from Base64 representation during
--   deserialisation. -- This <tt>Lens</tt> accepts and returns only raw
--   unencoded data.
updateConfiguration_serverProperties :: Lens' UpdateConfiguration ByteString

-- | <i>See:</i> <a>newUpdateConfigurationResponse</a> smart constructor.
data UpdateConfigurationResponse
UpdateConfigurationResponse' :: Maybe Text -> Maybe ConfigurationRevision -> Int -> UpdateConfigurationResponse

-- | The Amazon Resource Name (ARN) of the configuration.
[$sel:arn:UpdateConfigurationResponse'] :: UpdateConfigurationResponse -> Maybe Text

-- | Latest revision of the configuration.
[$sel:latestRevision:UpdateConfigurationResponse'] :: UpdateConfigurationResponse -> Maybe ConfigurationRevision

-- | The response's http status code.
[$sel:httpStatus:UpdateConfigurationResponse'] :: UpdateConfigurationResponse -> Int

-- | Create a value of <a>UpdateConfigurationResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:UpdateConfiguration'</a>,
--   <a>updateConfigurationResponse_arn</a> - The Amazon Resource Name
--   (ARN) of the configuration.
--   
--   <a>$sel:latestRevision:UpdateConfigurationResponse'</a>,
--   <a>updateConfigurationResponse_latestRevision</a> - Latest revision of
--   the configuration.
--   
--   <a>$sel:httpStatus:UpdateConfigurationResponse'</a>,
--   <a>updateConfigurationResponse_httpStatus</a> - The response's http
--   status code.
newUpdateConfigurationResponse :: Int -> UpdateConfigurationResponse

-- | The Amazon Resource Name (ARN) of the configuration.
updateConfigurationResponse_arn :: Lens' UpdateConfigurationResponse (Maybe Text)

-- | Latest revision of the configuration.
updateConfigurationResponse_latestRevision :: Lens' UpdateConfigurationResponse (Maybe ConfigurationRevision)

-- | The response's http status code.
updateConfigurationResponse_httpStatus :: Lens' UpdateConfigurationResponse Int
instance GHC.Generics.Generic Amazonka.Kafka.UpdateConfiguration.UpdateConfiguration
instance GHC.Show.Show Amazonka.Kafka.UpdateConfiguration.UpdateConfiguration
instance GHC.Read.Read Amazonka.Kafka.UpdateConfiguration.UpdateConfiguration
instance GHC.Classes.Eq Amazonka.Kafka.UpdateConfiguration.UpdateConfiguration
instance GHC.Generics.Generic Amazonka.Kafka.UpdateConfiguration.UpdateConfigurationResponse
instance GHC.Show.Show Amazonka.Kafka.UpdateConfiguration.UpdateConfigurationResponse
instance GHC.Read.Read Amazonka.Kafka.UpdateConfiguration.UpdateConfigurationResponse
instance GHC.Classes.Eq Amazonka.Kafka.UpdateConfiguration.UpdateConfigurationResponse
instance Amazonka.Types.AWSRequest Amazonka.Kafka.UpdateConfiguration.UpdateConfiguration
instance Control.DeepSeq.NFData Amazonka.Kafka.UpdateConfiguration.UpdateConfigurationResponse
instance Data.Hashable.Class.Hashable Amazonka.Kafka.UpdateConfiguration.UpdateConfiguration
instance Control.DeepSeq.NFData Amazonka.Kafka.UpdateConfiguration.UpdateConfiguration
instance Amazonka.Data.Headers.ToHeaders Amazonka.Kafka.UpdateConfiguration.UpdateConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Kafka.UpdateConfiguration.UpdateConfiguration
instance Amazonka.Data.Path.ToPath Amazonka.Kafka.UpdateConfiguration.UpdateConfiguration
instance Amazonka.Data.Query.ToQuery Amazonka.Kafka.UpdateConfiguration.UpdateConfiguration


-- | Updates the monitoring settings for the cluster. You can use this
--   operation to specify which Apache Kafka metrics you want Amazon MSK to
--   send to Amazon CloudWatch. You can also specify settings for open
--   monitoring with Prometheus.
module Amazonka.Kafka.UpdateMonitoring

-- | Request body for UpdateMonitoring.
--   
--   <i>See:</i> <a>newUpdateMonitoring</a> smart constructor.
data UpdateMonitoring
UpdateMonitoring' :: Maybe EnhancedMonitoring -> Maybe OpenMonitoringInfo -> Maybe LoggingInfo -> Text -> Text -> UpdateMonitoring

-- | Specifies which Apache Kafka metrics Amazon MSK gathers and sends to
--   Amazon CloudWatch for this cluster.
[$sel:enhancedMonitoring:UpdateMonitoring'] :: UpdateMonitoring -> Maybe EnhancedMonitoring

-- | The settings for open monitoring.
[$sel:openMonitoring:UpdateMonitoring'] :: UpdateMonitoring -> Maybe OpenMonitoringInfo
[$sel:loggingInfo:UpdateMonitoring'] :: UpdateMonitoring -> Maybe LoggingInfo

-- | The Amazon Resource Name (ARN) that uniquely identifies the cluster.
[$sel:clusterArn:UpdateMonitoring'] :: UpdateMonitoring -> Text

-- | The version of the MSK cluster to update. Cluster versions aren't
--   simple numbers. You can describe an MSK cluster to find its version.
--   When this update operation is successful, it generates a new cluster
--   version.
[$sel:currentVersion:UpdateMonitoring'] :: UpdateMonitoring -> Text

-- | Create a value of <a>UpdateMonitoring</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:enhancedMonitoring:UpdateMonitoring'</a>,
--   <a>updateMonitoring_enhancedMonitoring</a> - Specifies which Apache
--   Kafka metrics Amazon MSK gathers and sends to Amazon CloudWatch for
--   this cluster.
--   
--   <a>$sel:openMonitoring:UpdateMonitoring'</a>,
--   <a>updateMonitoring_openMonitoring</a> - The settings for open
--   monitoring.
--   
--   <a>$sel:loggingInfo:UpdateMonitoring'</a>,
--   <a>updateMonitoring_loggingInfo</a> - Undocumented member.
--   
--   <a>$sel:clusterArn:UpdateMonitoring'</a>,
--   <a>updateMonitoring_clusterArn</a> - The Amazon Resource Name (ARN)
--   that uniquely identifies the cluster.
--   
--   <a>$sel:currentVersion:UpdateMonitoring'</a>,
--   <a>updateMonitoring_currentVersion</a> - The version of the MSK
--   cluster to update. Cluster versions aren't simple numbers. You can
--   describe an MSK cluster to find its version. When this update
--   operation is successful, it generates a new cluster version.
newUpdateMonitoring :: Text -> Text -> UpdateMonitoring

-- | Specifies which Apache Kafka metrics Amazon MSK gathers and sends to
--   Amazon CloudWatch for this cluster.
updateMonitoring_enhancedMonitoring :: Lens' UpdateMonitoring (Maybe EnhancedMonitoring)

-- | The settings for open monitoring.
updateMonitoring_openMonitoring :: Lens' UpdateMonitoring (Maybe OpenMonitoringInfo)

-- | Undocumented member.
updateMonitoring_loggingInfo :: Lens' UpdateMonitoring (Maybe LoggingInfo)

-- | The Amazon Resource Name (ARN) that uniquely identifies the cluster.
updateMonitoring_clusterArn :: Lens' UpdateMonitoring Text

-- | The version of the MSK cluster to update. Cluster versions aren't
--   simple numbers. You can describe an MSK cluster to find its version.
--   When this update operation is successful, it generates a new cluster
--   version.
updateMonitoring_currentVersion :: Lens' UpdateMonitoring Text

-- | <i>See:</i> <a>newUpdateMonitoringResponse</a> smart constructor.
data UpdateMonitoringResponse
UpdateMonitoringResponse' :: Maybe Text -> Maybe Text -> Int -> UpdateMonitoringResponse

-- | The Amazon Resource Name (ARN) of the cluster.
[$sel:clusterArn:UpdateMonitoringResponse'] :: UpdateMonitoringResponse -> Maybe Text

-- | The Amazon Resource Name (ARN) of the cluster operation.
[$sel:clusterOperationArn:UpdateMonitoringResponse'] :: UpdateMonitoringResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:UpdateMonitoringResponse'] :: UpdateMonitoringResponse -> Int

-- | Create a value of <a>UpdateMonitoringResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clusterArn:UpdateMonitoring'</a>,
--   <a>updateMonitoringResponse_clusterArn</a> - The Amazon Resource Name
--   (ARN) of the cluster.
--   
--   <a>$sel:clusterOperationArn:UpdateMonitoringResponse'</a>,
--   <a>updateMonitoringResponse_clusterOperationArn</a> - The Amazon
--   Resource Name (ARN) of the cluster operation.
--   
--   <a>$sel:httpStatus:UpdateMonitoringResponse'</a>,
--   <a>updateMonitoringResponse_httpStatus</a> - The response's http
--   status code.
newUpdateMonitoringResponse :: Int -> UpdateMonitoringResponse

-- | The Amazon Resource Name (ARN) of the cluster.
updateMonitoringResponse_clusterArn :: Lens' UpdateMonitoringResponse (Maybe Text)

-- | The Amazon Resource Name (ARN) of the cluster operation.
updateMonitoringResponse_clusterOperationArn :: Lens' UpdateMonitoringResponse (Maybe Text)

-- | The response's http status code.
updateMonitoringResponse_httpStatus :: Lens' UpdateMonitoringResponse Int
instance GHC.Generics.Generic Amazonka.Kafka.UpdateMonitoring.UpdateMonitoring
instance GHC.Show.Show Amazonka.Kafka.UpdateMonitoring.UpdateMonitoring
instance GHC.Read.Read Amazonka.Kafka.UpdateMonitoring.UpdateMonitoring
instance GHC.Classes.Eq Amazonka.Kafka.UpdateMonitoring.UpdateMonitoring
instance GHC.Generics.Generic Amazonka.Kafka.UpdateMonitoring.UpdateMonitoringResponse
instance GHC.Show.Show Amazonka.Kafka.UpdateMonitoring.UpdateMonitoringResponse
instance GHC.Read.Read Amazonka.Kafka.UpdateMonitoring.UpdateMonitoringResponse
instance GHC.Classes.Eq Amazonka.Kafka.UpdateMonitoring.UpdateMonitoringResponse
instance Amazonka.Types.AWSRequest Amazonka.Kafka.UpdateMonitoring.UpdateMonitoring
instance Control.DeepSeq.NFData Amazonka.Kafka.UpdateMonitoring.UpdateMonitoringResponse
instance Data.Hashable.Class.Hashable Amazonka.Kafka.UpdateMonitoring.UpdateMonitoring
instance Control.DeepSeq.NFData Amazonka.Kafka.UpdateMonitoring.UpdateMonitoring
instance Amazonka.Data.Headers.ToHeaders Amazonka.Kafka.UpdateMonitoring.UpdateMonitoring
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Kafka.UpdateMonitoring.UpdateMonitoring
instance Amazonka.Data.Path.ToPath Amazonka.Kafka.UpdateMonitoring.UpdateMonitoring
instance Amazonka.Data.Query.ToQuery Amazonka.Kafka.UpdateMonitoring.UpdateMonitoring


-- | Updates the security settings for the cluster. You can use this
--   operation to specify encryption and authentication on existing
--   clusters.
module Amazonka.Kafka.UpdateSecurity

-- | <i>See:</i> <a>newUpdateSecurity</a> smart constructor.
data UpdateSecurity
UpdateSecurity' :: Maybe ClientAuthentication -> Maybe EncryptionInfo -> Text -> Text -> UpdateSecurity

-- | Includes all client authentication related information.
[$sel:clientAuthentication:UpdateSecurity'] :: UpdateSecurity -> Maybe ClientAuthentication

-- | Includes all encryption-related information.
[$sel:encryptionInfo:UpdateSecurity'] :: UpdateSecurity -> Maybe EncryptionInfo

-- | The Amazon Resource Name (ARN) that uniquely identifies the cluster.
[$sel:clusterArn:UpdateSecurity'] :: UpdateSecurity -> Text

-- | The version of the MSK cluster to update. Cluster versions aren't
--   simple numbers. You can describe an MSK cluster to find its version.
--   When this update operation is successful, it generates a new cluster
--   version.
[$sel:currentVersion:UpdateSecurity'] :: UpdateSecurity -> Text

-- | Create a value of <a>UpdateSecurity</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientAuthentication:UpdateSecurity'</a>,
--   <a>updateSecurity_clientAuthentication</a> - Includes all client
--   authentication related information.
--   
--   <a>$sel:encryptionInfo:UpdateSecurity'</a>,
--   <a>updateSecurity_encryptionInfo</a> - Includes all encryption-related
--   information.
--   
--   <a>$sel:clusterArn:UpdateSecurity'</a>,
--   <a>updateSecurity_clusterArn</a> - The Amazon Resource Name (ARN) that
--   uniquely identifies the cluster.
--   
--   <a>$sel:currentVersion:UpdateSecurity'</a>,
--   <a>updateSecurity_currentVersion</a> - The version of the MSK cluster
--   to update. Cluster versions aren't simple numbers. You can describe an
--   MSK cluster to find its version. When this update operation is
--   successful, it generates a new cluster version.
newUpdateSecurity :: Text -> Text -> UpdateSecurity

-- | Includes all client authentication related information.
updateSecurity_clientAuthentication :: Lens' UpdateSecurity (Maybe ClientAuthentication)

-- | Includes all encryption-related information.
updateSecurity_encryptionInfo :: Lens' UpdateSecurity (Maybe EncryptionInfo)

-- | The Amazon Resource Name (ARN) that uniquely identifies the cluster.
updateSecurity_clusterArn :: Lens' UpdateSecurity Text

-- | The version of the MSK cluster to update. Cluster versions aren't
--   simple numbers. You can describe an MSK cluster to find its version.
--   When this update operation is successful, it generates a new cluster
--   version.
updateSecurity_currentVersion :: Lens' UpdateSecurity Text

-- | <i>See:</i> <a>newUpdateSecurityResponse</a> smart constructor.
data UpdateSecurityResponse
UpdateSecurityResponse' :: Maybe Text -> Maybe Text -> Int -> UpdateSecurityResponse

-- | The Amazon Resource Name (ARN) of the cluster.
[$sel:clusterArn:UpdateSecurityResponse'] :: UpdateSecurityResponse -> Maybe Text

-- | The Amazon Resource Name (ARN) of the cluster operation.
[$sel:clusterOperationArn:UpdateSecurityResponse'] :: UpdateSecurityResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:UpdateSecurityResponse'] :: UpdateSecurityResponse -> Int

-- | Create a value of <a>UpdateSecurityResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clusterArn:UpdateSecurity'</a>,
--   <a>updateSecurityResponse_clusterArn</a> - The Amazon Resource Name
--   (ARN) of the cluster.
--   
--   <a>$sel:clusterOperationArn:UpdateSecurityResponse'</a>,
--   <a>updateSecurityResponse_clusterOperationArn</a> - The Amazon
--   Resource Name (ARN) of the cluster operation.
--   
--   <a>$sel:httpStatus:UpdateSecurityResponse'</a>,
--   <a>updateSecurityResponse_httpStatus</a> - The response's http status
--   code.
newUpdateSecurityResponse :: Int -> UpdateSecurityResponse

-- | The Amazon Resource Name (ARN) of the cluster.
updateSecurityResponse_clusterArn :: Lens' UpdateSecurityResponse (Maybe Text)

-- | The Amazon Resource Name (ARN) of the cluster operation.
updateSecurityResponse_clusterOperationArn :: Lens' UpdateSecurityResponse (Maybe Text)

-- | The response's http status code.
updateSecurityResponse_httpStatus :: Lens' UpdateSecurityResponse Int
instance GHC.Generics.Generic Amazonka.Kafka.UpdateSecurity.UpdateSecurity
instance GHC.Show.Show Amazonka.Kafka.UpdateSecurity.UpdateSecurity
instance GHC.Read.Read Amazonka.Kafka.UpdateSecurity.UpdateSecurity
instance GHC.Classes.Eq Amazonka.Kafka.UpdateSecurity.UpdateSecurity
instance GHC.Generics.Generic Amazonka.Kafka.UpdateSecurity.UpdateSecurityResponse
instance GHC.Show.Show Amazonka.Kafka.UpdateSecurity.UpdateSecurityResponse
instance GHC.Read.Read Amazonka.Kafka.UpdateSecurity.UpdateSecurityResponse
instance GHC.Classes.Eq Amazonka.Kafka.UpdateSecurity.UpdateSecurityResponse
instance Amazonka.Types.AWSRequest Amazonka.Kafka.UpdateSecurity.UpdateSecurity
instance Control.DeepSeq.NFData Amazonka.Kafka.UpdateSecurity.UpdateSecurityResponse
instance Data.Hashable.Class.Hashable Amazonka.Kafka.UpdateSecurity.UpdateSecurity
instance Control.DeepSeq.NFData Amazonka.Kafka.UpdateSecurity.UpdateSecurity
instance Amazonka.Data.Headers.ToHeaders Amazonka.Kafka.UpdateSecurity.UpdateSecurity
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Kafka.UpdateSecurity.UpdateSecurity
instance Amazonka.Data.Path.ToPath Amazonka.Kafka.UpdateSecurity.UpdateSecurity
instance Amazonka.Data.Query.ToQuery Amazonka.Kafka.UpdateSecurity.UpdateSecurity


module Amazonka.Kafka.Lens

-- | The versions of Apache Kafka with which you can use this MSK
--   configuration.
createConfiguration_kafkaVersions :: Lens' CreateConfiguration (Maybe [Text])

-- | The description of the configuration.
createConfiguration_description :: Lens' CreateConfiguration (Maybe Text)

-- | Contents of the server.properties file. When using the API, you must
--   ensure that the contents of the file are base64 encoded. When using
--   the AWS Management Console, the SDK, or the AWS CLI, the contents of
--   server.properties can be in plaintext.-- -- <i>Note:</i> This
--   <tt>Lens</tt> automatically encodes and decodes Base64 data. -- The
--   underlying isomorphism will encode to Base64 representation during --
--   serialisation, and decode from Base64 representation during
--   deserialisation. -- This <tt>Lens</tt> accepts and returns only raw
--   unencoded data.
createConfiguration_serverProperties :: Lens' CreateConfiguration ByteString

-- | The name of the configuration.
createConfiguration_name :: Lens' CreateConfiguration Text

-- | The time when the configuration was created.
createConfigurationResponse_creationTime :: Lens' CreateConfigurationResponse (Maybe UTCTime)

-- | The state of the configuration. The possible states are ACTIVE,
--   DELETING, and DELETE_FAILED.
createConfigurationResponse_state :: Lens' CreateConfigurationResponse (Maybe ConfigurationState)

-- | The Amazon Resource Name (ARN) of the configuration.
createConfigurationResponse_arn :: Lens' CreateConfigurationResponse (Maybe Text)

-- | Latest revision of the configuration.
createConfigurationResponse_latestRevision :: Lens' CreateConfigurationResponse (Maybe ConfigurationRevision)

-- | The name of the configuration.
createConfigurationResponse_name :: Lens' CreateConfigurationResponse (Maybe Text)

-- | The response's http status code.
createConfigurationResponse_httpStatus :: Lens' CreateConfigurationResponse Int

-- | The Amazon Resource Name (ARN) that uniquely identifies the cluster.
describeCluster_clusterArn :: Lens' DescribeCluster Text

-- | The cluster information.
describeClusterResponse_clusterInfo :: Lens' DescribeClusterResponse (Maybe ClusterInfo)

-- | The response's http status code.
describeClusterResponse_httpStatus :: Lens' DescribeClusterResponse Int

-- | The Amazon Resource Name (ARN) of the cluster to be updated.
rebootBroker_clusterArn :: Lens' RebootBroker Text

-- | The list of broker IDs to be rebooted. The reboot-broker operation
--   supports rebooting one broker at a time.
rebootBroker_brokerIds :: Lens' RebootBroker [Text]

-- | The Amazon Resource Name (ARN) of the cluster.
rebootBrokerResponse_clusterArn :: Lens' RebootBrokerResponse (Maybe Text)

-- | The Amazon Resource Name (ARN) of the cluster operation.
rebootBrokerResponse_clusterOperationArn :: Lens' RebootBrokerResponse (Maybe Text)

-- | The response's http status code.
rebootBrokerResponse_httpStatus :: Lens' RebootBrokerResponse Int

-- | The paginated results marker. When the result of the operation is
--   truncated, the call returns NextToken in the response. To get the next
--   batch, provide this token in your next request.
listConfigurationRevisions_nextToken :: Lens' ListConfigurationRevisions (Maybe Text)

-- | The maximum number of results to return in the response. If there are
--   more results, the response includes a NextToken parameter.
listConfigurationRevisions_maxResults :: Lens' ListConfigurationRevisions (Maybe Natural)

-- | The Amazon Resource Name (ARN) that uniquely identifies an MSK
--   configuration and all of its revisions.
listConfigurationRevisions_arn :: Lens' ListConfigurationRevisions Text

-- | Paginated results marker.
listConfigurationRevisionsResponse_nextToken :: Lens' ListConfigurationRevisionsResponse (Maybe Text)

-- | List of ConfigurationRevision objects.
listConfigurationRevisionsResponse_revisions :: Lens' ListConfigurationRevisionsResponse (Maybe [ConfigurationRevision])

-- | The response's http status code.
listConfigurationRevisionsResponse_httpStatus :: Lens' ListConfigurationRevisionsResponse Int

-- | The Amazon Resource Name (ARN) that uniquely identifies the resource
--   that's associated with the tags.
listTagsForResource_resourceArn :: Lens' ListTagsForResource Text

-- | The key-value pair for the resource tag.
listTagsForResourceResponse_tags :: Lens' ListTagsForResourceResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
listTagsForResourceResponse_httpStatus :: Lens' ListTagsForResourceResponse Int

-- | The paginated results marker. When the result of the operation is
--   truncated, the call returns NextToken in the response. To get the next
--   batch, provide this token in your next request.
listKafkaVersions_nextToken :: Lens' ListKafkaVersions (Maybe Text)

-- | The maximum number of results to return in the response. If there are
--   more results, the response includes a NextToken parameter.
listKafkaVersions_maxResults :: Lens' ListKafkaVersions (Maybe Natural)

-- | Undocumented member.
listKafkaVersionsResponse_kafkaVersions :: Lens' ListKafkaVersionsResponse (Maybe [KafkaVersion])

-- | Undocumented member.
listKafkaVersionsResponse_nextToken :: Lens' ListKafkaVersionsResponse (Maybe Text)

-- | The response's http status code.
listKafkaVersionsResponse_httpStatus :: Lens' ListKafkaVersionsResponse Int

-- | Specifies which Apache Kafka metrics Amazon MSK gathers and sends to
--   Amazon CloudWatch for this cluster.
updateMonitoring_enhancedMonitoring :: Lens' UpdateMonitoring (Maybe EnhancedMonitoring)

-- | The settings for open monitoring.
updateMonitoring_openMonitoring :: Lens' UpdateMonitoring (Maybe OpenMonitoringInfo)

-- | Undocumented member.
updateMonitoring_loggingInfo :: Lens' UpdateMonitoring (Maybe LoggingInfo)

-- | The Amazon Resource Name (ARN) that uniquely identifies the cluster.
updateMonitoring_clusterArn :: Lens' UpdateMonitoring Text

-- | The version of the MSK cluster to update. Cluster versions aren't
--   simple numbers. You can describe an MSK cluster to find its version.
--   When this update operation is successful, it generates a new cluster
--   version.
updateMonitoring_currentVersion :: Lens' UpdateMonitoring Text

-- | The Amazon Resource Name (ARN) of the cluster.
updateMonitoringResponse_clusterArn :: Lens' UpdateMonitoringResponse (Maybe Text)

-- | The Amazon Resource Name (ARN) of the cluster operation.
updateMonitoringResponse_clusterOperationArn :: Lens' UpdateMonitoringResponse (Maybe Text)

-- | The response's http status code.
updateMonitoringResponse_httpStatus :: Lens' UpdateMonitoringResponse Int

-- | The Amazon Resource Name (ARN) of the cluster to be updated.
batchAssociateScramSecret_clusterArn :: Lens' BatchAssociateScramSecret Text

-- | List of AWS Secrets Manager secret ARNs.
batchAssociateScramSecret_secretArnList :: Lens' BatchAssociateScramSecret [Text]

-- | The Amazon Resource Name (ARN) of the cluster.
batchAssociateScramSecretResponse_clusterArn :: Lens' BatchAssociateScramSecretResponse (Maybe Text)

-- | List of errors when associating secrets to cluster.
batchAssociateScramSecretResponse_unprocessedScramSecrets :: Lens' BatchAssociateScramSecretResponse (Maybe [UnprocessedScramSecret])

-- | The response's http status code.
batchAssociateScramSecretResponse_httpStatus :: Lens' BatchAssociateScramSecretResponse Int

-- | The Amazon Resource Name (ARN) that uniquely identifies the cluster.
updateBrokerStorage_clusterArn :: Lens' UpdateBrokerStorage Text

-- | Describes the target volume size and the ID of the broker to apply the
--   update to.
updateBrokerStorage_targetBrokerEBSVolumeInfo :: Lens' UpdateBrokerStorage [BrokerEBSVolumeInfo]

-- | The version of cluster to update from. A successful operation will
--   then generate a new version.
updateBrokerStorage_currentVersion :: Lens' UpdateBrokerStorage Text

-- | The Amazon Resource Name (ARN) of the cluster.
updateBrokerStorageResponse_clusterArn :: Lens' UpdateBrokerStorageResponse (Maybe Text)

-- | The Amazon Resource Name (ARN) of the cluster operation.
updateBrokerStorageResponse_clusterOperationArn :: Lens' UpdateBrokerStorageResponse (Maybe Text)

-- | The response's http status code.
updateBrokerStorageResponse_httpStatus :: Lens' UpdateBrokerStorageResponse Int

-- | The current version of the MSK cluster.
deleteCluster_currentVersion :: Lens' DeleteCluster (Maybe Text)

-- | The Amazon Resource Name (ARN) that uniquely identifies the cluster.
deleteCluster_clusterArn :: Lens' DeleteCluster Text

-- | The state of the cluster. The possible states are ACTIVE, CREATING,
--   DELETING, FAILED, HEALING, MAINTENANCE, REBOOTING_BROKER, and
--   UPDATING.
deleteClusterResponse_state :: Lens' DeleteClusterResponse (Maybe ClusterState)

-- | The Amazon Resource Name (ARN) of the cluster.
deleteClusterResponse_clusterArn :: Lens' DeleteClusterResponse (Maybe Text)

-- | The response's http status code.
deleteClusterResponse_httpStatus :: Lens' DeleteClusterResponse Int

-- | The Amazon Resource Name (ARN) that uniquely identifies the cluster.
updateClusterConfiguration_clusterArn :: Lens' UpdateClusterConfiguration Text

-- | The version of the cluster that needs to be updated.
updateClusterConfiguration_currentVersion :: Lens' UpdateClusterConfiguration Text

-- | Represents the configuration that you want MSK to use for the brokers
--   in a cluster.
updateClusterConfiguration_configurationInfo :: Lens' UpdateClusterConfiguration ConfigurationInfo

-- | The Amazon Resource Name (ARN) of the cluster.
updateClusterConfigurationResponse_clusterArn :: Lens' UpdateClusterConfigurationResponse (Maybe Text)

-- | The Amazon Resource Name (ARN) of the cluster operation.
updateClusterConfigurationResponse_clusterOperationArn :: Lens' UpdateClusterConfigurationResponse (Maybe Text)

-- | The response's http status code.
updateClusterConfigurationResponse_httpStatus :: Lens' UpdateClusterConfigurationResponse Int

-- | Specifies the level of monitoring for the MSK cluster. The possible
--   values are DEFAULT, PER_BROKER, PER_TOPIC_PER_BROKER, and
--   PER_TOPIC_PER_PARTITION.
createCluster_enhancedMonitoring :: Lens' CreateCluster (Maybe EnhancedMonitoring)

-- | The settings for open monitoring.
createCluster_openMonitoring :: Lens' CreateCluster (Maybe OpenMonitoringInfo)

-- | Represents the configuration that you want MSK to use for the brokers
--   in a cluster.
createCluster_configurationInfo :: Lens' CreateCluster (Maybe ConfigurationInfo)

-- | Undocumented member.
createCluster_loggingInfo :: Lens' CreateCluster (Maybe LoggingInfo)

-- | Includes all client authentication related information.
createCluster_clientAuthentication :: Lens' CreateCluster (Maybe ClientAuthentication)

-- | Create tags when creating the cluster.
createCluster_tags :: Lens' CreateCluster (Maybe (HashMap Text Text))

-- | Includes all encryption-related information.
createCluster_encryptionInfo :: Lens' CreateCluster (Maybe EncryptionInfo)

-- | Information about the broker nodes in the cluster.
createCluster_brokerNodeGroupInfo :: Lens' CreateCluster BrokerNodeGroupInfo

-- | The version of Apache Kafka.
createCluster_kafkaVersion :: Lens' CreateCluster Text

-- | The number of broker nodes in the cluster.
createCluster_numberOfBrokerNodes :: Lens' CreateCluster Natural

-- | The name of the cluster.
createCluster_clusterName :: Lens' CreateCluster Text

-- | The state of the cluster. The possible states are ACTIVE, CREATING,
--   DELETING, FAILED, HEALING, MAINTENANCE, REBOOTING_BROKER, and
--   UPDATING.
createClusterResponse_state :: Lens' CreateClusterResponse (Maybe ClusterState)

-- | The Amazon Resource Name (ARN) of the cluster.
createClusterResponse_clusterArn :: Lens' CreateClusterResponse (Maybe Text)

-- | The name of the MSK cluster.
createClusterResponse_clusterName :: Lens' CreateClusterResponse (Maybe Text)

-- | The response's http status code.
createClusterResponse_httpStatus :: Lens' CreateClusterResponse Int

-- | The Amazon Resource Name (ARN) that uniquely identifies the cluster.
updateBrokerCount_clusterArn :: Lens' UpdateBrokerCount Text

-- | The version of cluster to update from. A successful operation will
--   then generate a new version.
updateBrokerCount_currentVersion :: Lens' UpdateBrokerCount Text

-- | The number of broker nodes that you want the cluster to have after
--   this operation completes successfully.
updateBrokerCount_targetNumberOfBrokerNodes :: Lens' UpdateBrokerCount Natural

-- | The Amazon Resource Name (ARN) of the cluster.
updateBrokerCountResponse_clusterArn :: Lens' UpdateBrokerCountResponse (Maybe Text)

-- | The Amazon Resource Name (ARN) of the cluster operation.
updateBrokerCountResponse_clusterOperationArn :: Lens' UpdateBrokerCountResponse (Maybe Text)

-- | The response's http status code.
updateBrokerCountResponse_httpStatus :: Lens' UpdateBrokerCountResponse Int

-- | The paginated results marker. When the result of the operation is
--   truncated, the call returns NextToken in the response. To get the next
--   batch, provide this token in your next request.
listConfigurations_nextToken :: Lens' ListConfigurations (Maybe Text)

-- | The maximum number of results to return in the response. If there are
--   more results, the response includes a NextToken parameter.
listConfigurations_maxResults :: Lens' ListConfigurations (Maybe Natural)

-- | An array of MSK configurations.
listConfigurationsResponse_configurations :: Lens' ListConfigurationsResponse (Maybe [Configuration])

-- | The paginated results marker. When the result of a ListConfigurations
--   operation is truncated, the call returns NextToken in the response. To
--   get another batch of configurations, provide this token in your next
--   request.
listConfigurationsResponse_nextToken :: Lens' ListConfigurationsResponse (Maybe Text)

-- | The response's http status code.
listConfigurationsResponse_httpStatus :: Lens' ListConfigurationsResponse Int

-- | The Amazon Resource Name (ARN) that uniquely identifies the cluster.
getBootstrapBrokers_clusterArn :: Lens' GetBootstrapBrokers Text

-- | A string containing one or more hostname:port pairs.
getBootstrapBrokersResponse_bootstrapBrokerString :: Lens' GetBootstrapBrokersResponse (Maybe Text)

-- | A string containing one or more DNS names (or IP) and Sasl Scram port
--   pairs.
getBootstrapBrokersResponse_bootstrapBrokerStringSaslScram :: Lens' GetBootstrapBrokersResponse (Maybe Text)

-- | A string containing one or more DNS names (or IP) and TLS port pairs.
getBootstrapBrokersResponse_bootstrapBrokerStringTls :: Lens' GetBootstrapBrokersResponse (Maybe Text)

-- | A string that contains one or more DNS names (or IP addresses) and
--   SASL IAM port pairs.
getBootstrapBrokersResponse_bootstrapBrokerStringSaslIam :: Lens' GetBootstrapBrokersResponse (Maybe Text)

-- | The response's http status code.
getBootstrapBrokersResponse_httpStatus :: Lens' GetBootstrapBrokersResponse Int

-- | The custom configuration that should be applied on the new version of
--   cluster.
updateClusterKafkaVersion_configurationInfo :: Lens' UpdateClusterKafkaVersion (Maybe ConfigurationInfo)

-- | The Amazon Resource Name (ARN) of the cluster to be updated.
updateClusterKafkaVersion_clusterArn :: Lens' UpdateClusterKafkaVersion Text

-- | Target Kafka version.
updateClusterKafkaVersion_targetKafkaVersion :: Lens' UpdateClusterKafkaVersion Text

-- | Current cluster version.
updateClusterKafkaVersion_currentVersion :: Lens' UpdateClusterKafkaVersion Text

-- | The Amazon Resource Name (ARN) of the cluster.
updateClusterKafkaVersionResponse_clusterArn :: Lens' UpdateClusterKafkaVersionResponse (Maybe Text)

-- | The Amazon Resource Name (ARN) of the cluster operation.
updateClusterKafkaVersionResponse_clusterOperationArn :: Lens' UpdateClusterKafkaVersionResponse (Maybe Text)

-- | The response's http status code.
updateClusterKafkaVersionResponse_httpStatus :: Lens' UpdateClusterKafkaVersionResponse Int

-- | Includes all client authentication related information.
updateSecurity_clientAuthentication :: Lens' UpdateSecurity (Maybe ClientAuthentication)

-- | Includes all encryption-related information.
updateSecurity_encryptionInfo :: Lens' UpdateSecurity (Maybe EncryptionInfo)

-- | The Amazon Resource Name (ARN) that uniquely identifies the cluster.
updateSecurity_clusterArn :: Lens' UpdateSecurity Text

-- | The version of the MSK cluster to update. Cluster versions aren't
--   simple numbers. You can describe an MSK cluster to find its version.
--   When this update operation is successful, it generates a new cluster
--   version.
updateSecurity_currentVersion :: Lens' UpdateSecurity Text

-- | The Amazon Resource Name (ARN) of the cluster.
updateSecurityResponse_clusterArn :: Lens' UpdateSecurityResponse (Maybe Text)

-- | The Amazon Resource Name (ARN) of the cluster operation.
updateSecurityResponse_clusterOperationArn :: Lens' UpdateSecurityResponse (Maybe Text)

-- | The response's http status code.
updateSecurityResponse_httpStatus :: Lens' UpdateSecurityResponse Int

-- | The Amazon Resource Name (ARN) of the cluster check.
getCompatibleKafkaVersions_clusterArn :: Lens' GetCompatibleKafkaVersions (Maybe Text)

-- | A list of CompatibleKafkaVersion objects.
getCompatibleKafkaVersionsResponse_compatibleKafkaVersions :: Lens' GetCompatibleKafkaVersionsResponse (Maybe [CompatibleKafkaVersion])

-- | The response's http status code.
getCompatibleKafkaVersionsResponse_httpStatus :: Lens' GetCompatibleKafkaVersionsResponse Int

-- | The Amazon Resource Name (ARN) that uniquely identifies the MSK
--   cluster operation.
describeClusterOperation_clusterOperationArn :: Lens' DescribeClusterOperation Text

-- | Cluster operation information
describeClusterOperationResponse_clusterOperationInfo :: Lens' DescribeClusterOperationResponse (Maybe ClusterOperationInfo)

-- | The response's http status code.
describeClusterOperationResponse_httpStatus :: Lens' DescribeClusterOperationResponse Int

-- | The Amazon Resource Name (ARN) that uniquely identifies the cluster.
updateBrokerType_clusterArn :: Lens' UpdateBrokerType Text

-- | The cluster version that you want to change. After this operation
--   completes successfully, the cluster will have a new version.
updateBrokerType_currentVersion :: Lens' UpdateBrokerType Text

-- | The Amazon MSK broker type that you want all of the brokers in this
--   cluster to be.
updateBrokerType_targetInstanceType :: Lens' UpdateBrokerType Text

-- | The Amazon Resource Name (ARN) of the cluster.
updateBrokerTypeResponse_clusterArn :: Lens' UpdateBrokerTypeResponse (Maybe Text)

-- | The Amazon Resource Name (ARN) of the cluster operation.
updateBrokerTypeResponse_clusterOperationArn :: Lens' UpdateBrokerTypeResponse (Maybe Text)

-- | The response's http status code.
updateBrokerTypeResponse_httpStatus :: Lens' UpdateBrokerTypeResponse Int

-- | The Amazon Resource Name (ARN) that uniquely identifies an MSK
--   configuration and all of its revisions.
describeConfiguration_arn :: Lens' DescribeConfiguration Text

-- | The time when the configuration was created.
describeConfigurationResponse_creationTime :: Lens' DescribeConfigurationResponse (Maybe UTCTime)

-- | The state of the configuration. The possible states are ACTIVE,
--   DELETING, and DELETE_FAILED.
describeConfigurationResponse_state :: Lens' DescribeConfigurationResponse (Maybe ConfigurationState)

-- | The versions of Apache Kafka with which you can use this MSK
--   configuration.
describeConfigurationResponse_kafkaVersions :: Lens' DescribeConfigurationResponse (Maybe [Text])

-- | The Amazon Resource Name (ARN) of the configuration.
describeConfigurationResponse_arn :: Lens' DescribeConfigurationResponse (Maybe Text)

-- | Latest revision of the configuration.
describeConfigurationResponse_latestRevision :: Lens' DescribeConfigurationResponse (Maybe ConfigurationRevision)

-- | The name of the configuration.
describeConfigurationResponse_name :: Lens' DescribeConfigurationResponse (Maybe Text)

-- | The description of the configuration.
describeConfigurationResponse_description :: Lens' DescribeConfigurationResponse (Maybe Text)

-- | The response's http status code.
describeConfigurationResponse_httpStatus :: Lens' DescribeConfigurationResponse Int

-- | The Amazon Resource Name (ARN) that uniquely identifies the resource
--   that's associated with the tags.
tagResource_resourceArn :: Lens' TagResource Text

-- | The key-value pair for the resource tag.
tagResource_tags :: Lens' TagResource (HashMap Text Text)

-- | Specify a prefix of the name of the clusters that you want to list.
--   The service lists all the clusters whose names start with this prefix.
listClusters_clusterNameFilter :: Lens' ListClusters (Maybe Text)

-- | The paginated results marker. When the result of the operation is
--   truncated, the call returns NextToken in the response. To get the next
--   batch, provide this token in your next request.
listClusters_nextToken :: Lens' ListClusters (Maybe Text)

-- | The maximum number of results to return in the response. If there are
--   more results, the response includes a NextToken parameter.
listClusters_maxResults :: Lens' ListClusters (Maybe Natural)

-- | The paginated results marker. When the result of a ListClusters
--   operation is truncated, the call returns NextToken in the response. To
--   get another batch of clusters, provide this token in your next
--   request.
listClustersResponse_nextToken :: Lens' ListClustersResponse (Maybe Text)

-- | Information on each of the MSK clusters in the response.
listClustersResponse_clusterInfoList :: Lens' ListClustersResponse (Maybe [ClusterInfo])

-- | The response's http status code.
listClustersResponse_httpStatus :: Lens' ListClustersResponse Int

-- | Tag keys must be unique for a given cluster. In addition, the
--   following restrictions apply:
--   
--   <ul>
--   <li>Each tag key must be unique. If you add a tag with a key that's
--   already in use, your new tag overwrites the existing key-value
--   pair.</li>
--   <li>You can't start a tag key with aws: because this prefix is
--   reserved for use by AWS. AWS creates tags that begin with this prefix
--   on your behalf, but you can't edit or delete them.</li>
--   <li>Tag keys must be between 1 and 128 Unicode characters in
--   length.</li>
--   <li>Tag keys must consist of the following characters: Unicode
--   letters, digits, white space, and the following special characters: _
--   . / = + - @.</li>
--   </ul>
untagResource_tagKeys :: Lens' UntagResource [Text]

-- | The Amazon Resource Name (ARN) that uniquely identifies the resource
--   that's associated with the tags.
untagResource_resourceArn :: Lens' UntagResource Text

-- | The paginated results marker. When the result of the operation is
--   truncated, the call returns NextToken in the response. To get the next
--   batch, provide this token in your next request.
listClusterOperations_nextToken :: Lens' ListClusterOperations (Maybe Text)

-- | The maximum number of results to return in the response. If there are
--   more results, the response includes a NextToken parameter.
listClusterOperations_maxResults :: Lens' ListClusterOperations (Maybe Natural)

-- | The Amazon Resource Name (ARN) that uniquely identifies the cluster.
listClusterOperations_clusterArn :: Lens' ListClusterOperations Text

-- | An array of cluster operation information objects.
listClusterOperationsResponse_clusterOperationInfoList :: Lens' ListClusterOperationsResponse (Maybe [ClusterOperationInfo])

-- | If the response of ListClusterOperations is truncated, it returns a
--   NextToken in the response. This Nexttoken should be sent in the
--   subsequent request to ListClusterOperations.
listClusterOperationsResponse_nextToken :: Lens' ListClusterOperationsResponse (Maybe Text)

-- | The response's http status code.
listClusterOperationsResponse_httpStatus :: Lens' ListClusterOperationsResponse Int

-- | The Amazon Resource Name (ARN) of the cluster to be updated.
batchDisassociateScramSecret_clusterArn :: Lens' BatchDisassociateScramSecret Text

-- | List of AWS Secrets Manager secret ARNs.
batchDisassociateScramSecret_secretArnList :: Lens' BatchDisassociateScramSecret [Text]

-- | The Amazon Resource Name (ARN) of the cluster.
batchDisassociateScramSecretResponse_clusterArn :: Lens' BatchDisassociateScramSecretResponse (Maybe Text)

-- | List of errors when disassociating secrets to cluster.
batchDisassociateScramSecretResponse_unprocessedScramSecrets :: Lens' BatchDisassociateScramSecretResponse (Maybe [UnprocessedScramSecret])

-- | The response's http status code.
batchDisassociateScramSecretResponse_httpStatus :: Lens' BatchDisassociateScramSecretResponse Int

-- | A string that uniquely identifies a revision of an MSK configuration.
describeConfigurationRevision_revision :: Lens' DescribeConfigurationRevision Integer

-- | The Amazon Resource Name (ARN) that uniquely identifies an MSK
--   configuration and all of its revisions.
describeConfigurationRevision_arn :: Lens' DescribeConfigurationRevision Text

-- | The time when the configuration was created.
describeConfigurationRevisionResponse_creationTime :: Lens' DescribeConfigurationRevisionResponse (Maybe UTCTime)

-- | Contents of the server.properties file. When using the API, you must
--   ensure that the contents of the file are base64 encoded. When using
--   the AWS Management Console, the SDK, or the AWS CLI, the contents of
--   server.properties can be in plaintext.-- -- <i>Note:</i> This
--   <tt>Lens</tt> automatically encodes and decodes Base64 data. -- The
--   underlying isomorphism will encode to Base64 representation during --
--   serialisation, and decode from Base64 representation during
--   deserialisation. -- This <tt>Lens</tt> accepts and returns only raw
--   unencoded data.
describeConfigurationRevisionResponse_serverProperties :: Lens' DescribeConfigurationRevisionResponse (Maybe ByteString)

-- | The Amazon Resource Name (ARN) of the configuration.
describeConfigurationRevisionResponse_arn :: Lens' DescribeConfigurationRevisionResponse (Maybe Text)

-- | The revision number.
describeConfigurationRevisionResponse_revision :: Lens' DescribeConfigurationRevisionResponse (Maybe Integer)

-- | The description of the configuration.
describeConfigurationRevisionResponse_description :: Lens' DescribeConfigurationRevisionResponse (Maybe Text)

-- | The response's http status code.
describeConfigurationRevisionResponse_httpStatus :: Lens' DescribeConfigurationRevisionResponse Int

-- | The Amazon Resource Name (ARN) that uniquely identifies an MSK
--   configuration.
deleteConfiguration_arn :: Lens' DeleteConfiguration Text

-- | The state of the configuration. The possible states are ACTIVE,
--   DELETING, and DELETE_FAILED.
deleteConfigurationResponse_state :: Lens' DeleteConfigurationResponse (Maybe ConfigurationState)

-- | The Amazon Resource Name (ARN) that uniquely identifies an MSK
--   configuration.
deleteConfigurationResponse_arn :: Lens' DeleteConfigurationResponse (Maybe Text)

-- | The response's http status code.
deleteConfigurationResponse_httpStatus :: Lens' DeleteConfigurationResponse Int

-- | The description of the configuration revision.
updateConfiguration_description :: Lens' UpdateConfiguration (Maybe Text)

-- | The Amazon Resource Name (ARN) of the configuration.
updateConfiguration_arn :: Lens' UpdateConfiguration Text

-- | Contents of the server.properties file. When using the API, you must
--   ensure that the contents of the file are base64 encoded. When using
--   the AWS Management Console, the SDK, or the AWS CLI, the contents of
--   server.properties can be in plaintext.-- -- <i>Note:</i> This
--   <tt>Lens</tt> automatically encodes and decodes Base64 data. -- The
--   underlying isomorphism will encode to Base64 representation during --
--   serialisation, and decode from Base64 representation during
--   deserialisation. -- This <tt>Lens</tt> accepts and returns only raw
--   unencoded data.
updateConfiguration_serverProperties :: Lens' UpdateConfiguration ByteString

-- | The Amazon Resource Name (ARN) of the configuration.
updateConfigurationResponse_arn :: Lens' UpdateConfigurationResponse (Maybe Text)

-- | Latest revision of the configuration.
updateConfigurationResponse_latestRevision :: Lens' UpdateConfigurationResponse (Maybe ConfigurationRevision)

-- | The response's http status code.
updateConfigurationResponse_httpStatus :: Lens' UpdateConfigurationResponse Int

-- | The paginated results marker. When the result of the operation is
--   truncated, the call returns NextToken in the response. To get the next
--   batch, provide this token in your next request.
listNodes_nextToken :: Lens' ListNodes (Maybe Text)

-- | The maximum number of results to return in the response. If there are
--   more results, the response includes a NextToken parameter.
listNodes_maxResults :: Lens' ListNodes (Maybe Natural)

-- | The Amazon Resource Name (ARN) that uniquely identifies the cluster.
listNodes_clusterArn :: Lens' ListNodes Text

-- | List containing a NodeInfo object.
listNodesResponse_nodeInfoList :: Lens' ListNodesResponse (Maybe [NodeInfo])

-- | The paginated results marker. When the result of a ListNodes operation
--   is truncated, the call returns NextToken in the response. To get
--   another batch of nodes, provide this token in your next request.
listNodesResponse_nextToken :: Lens' ListNodesResponse (Maybe Text)

-- | The response's http status code.
listNodesResponse_httpStatus :: Lens' ListNodesResponse Int

-- | The nextToken of the query.
listScramSecrets_nextToken :: Lens' ListScramSecrets (Maybe Text)

-- | The maxResults of the query.
listScramSecrets_maxResults :: Lens' ListScramSecrets (Maybe Natural)

-- | The arn of the cluster.
listScramSecrets_clusterArn :: Lens' ListScramSecrets Text

-- | Paginated results marker.
listScramSecretsResponse_nextToken :: Lens' ListScramSecretsResponse (Maybe Text)

-- | The list of scram secrets associated with the cluster.
listScramSecretsResponse_secretArnList :: Lens' ListScramSecretsResponse (Maybe [Text])

-- | The response's http status code.
listScramSecretsResponse_httpStatus :: Lens' ListScramSecretsResponse Int

-- | Size of the EBS volume to update.
brokerEBSVolumeInfo_volumeSizeGB :: Lens' BrokerEBSVolumeInfo Int

-- | The ID of the broker to update.
brokerEBSVolumeInfo_kafkaBrokerNodeId :: Lens' BrokerEBSVolumeInfo Text

-- | Undocumented member.
brokerLogs_cloudWatchLogs :: Lens' BrokerLogs (Maybe CloudWatchLogs)

-- | Undocumented member.
brokerLogs_firehose :: Lens' BrokerLogs (Maybe Firehose)

-- | Undocumented member.
brokerLogs_s3 :: Lens' BrokerLogs (Maybe S3)

-- | Contains information about storage volumes attached to MSK broker
--   nodes.
brokerNodeGroupInfo_storageInfo :: Lens' BrokerNodeGroupInfo (Maybe StorageInfo)

-- | The distribution of broker nodes across Availability Zones. This is an
--   optional parameter. If you don't specify it, Amazon MSK gives it the
--   value DEFAULT. You can also explicitly set this parameter to the value
--   DEFAULT. No other values are currently allowed.
--   
--   Amazon MSK distributes the broker nodes evenly across the Availability
--   Zones that correspond to the subnets you provide when you create the
--   cluster.
brokerNodeGroupInfo_brokerAZDistribution :: Lens' BrokerNodeGroupInfo (Maybe BrokerAZDistribution)

-- | The AWS security groups to associate with the elastic network
--   interfaces in order to specify who can connect to and communicate with
--   the Amazon MSK cluster. If you don't specify a security group, Amazon
--   MSK uses the default security group associated with the VPC.
brokerNodeGroupInfo_securityGroups :: Lens' BrokerNodeGroupInfo (Maybe [Text])

-- | The list of subnets to connect to in the client virtual private cloud
--   (VPC). AWS creates elastic network interfaces inside these subnets.
--   Client applications use elastic network interfaces to produce and
--   consume data. Client subnets can't be in Availability Zone us-east-1e.
brokerNodeGroupInfo_clientSubnets :: Lens' BrokerNodeGroupInfo [Text]

-- | The type of Amazon EC2 instances to use for Kafka brokers. The
--   following instance types are allowed: kafka.m5.large, kafka.m5.xlarge,
--   kafka.m5.2xlarge, kafka.m5.4xlarge, kafka.m5.12xlarge, and
--   kafka.m5.24xlarge.
brokerNodeGroupInfo_instanceType :: Lens' BrokerNodeGroupInfo Text

-- | Information about the version of software currently deployed on the
--   Kafka brokers in the cluster.
brokerNodeInfo_currentBrokerSoftwareInfo :: Lens' BrokerNodeInfo (Maybe BrokerSoftwareInfo)

-- | The client subnet to which this broker node belongs.
brokerNodeInfo_clientSubnet :: Lens' BrokerNodeInfo (Maybe Text)

-- | The attached elastic network interface of the broker.
brokerNodeInfo_attachedENIId :: Lens' BrokerNodeInfo (Maybe Text)

-- | Endpoints for accessing the broker.
brokerNodeInfo_endpoints :: Lens' BrokerNodeInfo (Maybe [Text])

-- | The virtual private cloud (VPC) of the client.
brokerNodeInfo_clientVpcIpAddress :: Lens' BrokerNodeInfo (Maybe Text)

-- | The ID of the broker.
brokerNodeInfo_brokerId :: Lens' BrokerNodeInfo (Maybe Double)

-- | The revision of the configuration to use. This field isn't visible in
--   this preview release.
brokerSoftwareInfo_configurationRevision :: Lens' BrokerSoftwareInfo (Maybe Integer)

-- | The version of Apache Kafka.
brokerSoftwareInfo_kafkaVersion :: Lens' BrokerSoftwareInfo (Maybe Text)

-- | The Amazon Resource Name (ARN) of the configuration used for the
--   cluster. This field isn't visible in this preview release.
brokerSoftwareInfo_configurationArn :: Lens' BrokerSoftwareInfo (Maybe Text)

-- | Details for ClientAuthentication using SASL.
clientAuthentication_sasl :: Lens' ClientAuthentication (Maybe Sasl)

-- | Details for ClientAuthentication using TLS.
clientAuthentication_tls :: Lens' ClientAuthentication (Maybe Tls)

-- | Contains information about unauthenticated traffic to the cluster.
clientAuthentication_unauthenticated :: Lens' ClientAuthentication (Maybe Unauthenticated)

-- | Undocumented member.
cloudWatchLogs_logGroup :: Lens' CloudWatchLogs (Maybe Text)

-- | Undocumented member.
cloudWatchLogs_enabled :: Lens' CloudWatchLogs Bool

-- | The time when the cluster was created.
clusterInfo_creationTime :: Lens' ClusterInfo (Maybe UTCTime)

-- | Arn of active cluster operation.
clusterInfo_activeOperationArn :: Lens' ClusterInfo (Maybe Text)

-- | The state of the cluster. The possible states are ACTIVE, CREATING,
--   DELETING, FAILED, HEALING, MAINTENANCE, REBOOTING_BROKER, and
--   UPDATING.
clusterInfo_state :: Lens' ClusterInfo (Maybe ClusterState)

-- | The Amazon Resource Name (ARN) that uniquely identifies the cluster.
clusterInfo_clusterArn :: Lens' ClusterInfo (Maybe Text)

-- | The number of broker nodes in the cluster.
clusterInfo_numberOfBrokerNodes :: Lens' ClusterInfo (Maybe Int)

-- | Specifies which metrics are gathered for the MSK cluster. This
--   property has the following possible values: DEFAULT, PER_BROKER,
--   PER_TOPIC_PER_BROKER, and PER_TOPIC_PER_PARTITION. For a list of the
--   metrics associated with each of these levels of monitoring, see
--   <a>Monitoring</a>.
clusterInfo_enhancedMonitoring :: Lens' ClusterInfo (Maybe EnhancedMonitoring)

-- | Information about the broker nodes.
clusterInfo_brokerNodeGroupInfo :: Lens' ClusterInfo (Maybe BrokerNodeGroupInfo)

-- | Settings for open monitoring using Prometheus.
clusterInfo_openMonitoring :: Lens' ClusterInfo (Maybe OpenMonitoring)

-- | Information about the version of software currently deployed on the
--   Kafka brokers in the cluster.
clusterInfo_currentBrokerSoftwareInfo :: Lens' ClusterInfo (Maybe BrokerSoftwareInfo)

-- | The current version of the MSK cluster.
clusterInfo_currentVersion :: Lens' ClusterInfo (Maybe Text)

-- | Undocumented member.
clusterInfo_stateInfo :: Lens' ClusterInfo (Maybe StateInfo)

-- | Undocumented member.
clusterInfo_loggingInfo :: Lens' ClusterInfo (Maybe LoggingInfo)

-- | The connection string to use to connect to the Apache ZooKeeper
--   cluster.
clusterInfo_zookeeperConnectString :: Lens' ClusterInfo (Maybe Text)

-- | The name of the cluster.
clusterInfo_clusterName :: Lens' ClusterInfo (Maybe Text)

-- | The connection string to use to connect to zookeeper cluster on Tls
--   port.
clusterInfo_zookeeperConnectStringTls :: Lens' ClusterInfo (Maybe Text)

-- | Includes all client authentication information.
clusterInfo_clientAuthentication :: Lens' ClusterInfo (Maybe ClientAuthentication)

-- | Tags attached to the cluster.
clusterInfo_tags :: Lens' ClusterInfo (Maybe (HashMap Text Text))

-- | Includes all encryption-related information.
clusterInfo_encryptionInfo :: Lens' ClusterInfo (Maybe EncryptionInfo)

-- | The time that the operation was created.
clusterOperationInfo_creationTime :: Lens' ClusterOperationInfo (Maybe UTCTime)

-- | ARN of the cluster.
clusterOperationInfo_clusterArn :: Lens' ClusterOperationInfo (Maybe Text)

-- | The ID of the API request that triggered this operation.
clusterOperationInfo_clientRequestId :: Lens' ClusterOperationInfo (Maybe Text)

-- | Information about cluster attributes after a cluster is updated.
clusterOperationInfo_targetClusterInfo :: Lens' ClusterOperationInfo (Maybe MutableClusterInfo)

-- | Information about cluster attributes before a cluster is updated.
clusterOperationInfo_sourceClusterInfo :: Lens' ClusterOperationInfo (Maybe MutableClusterInfo)

-- | Steps completed during the operation.
clusterOperationInfo_operationSteps :: Lens' ClusterOperationInfo (Maybe [ClusterOperationStep])

-- | State of the cluster operation.
clusterOperationInfo_operationState :: Lens' ClusterOperationInfo (Maybe Text)

-- | The time at which the operation finished.
clusterOperationInfo_endTime :: Lens' ClusterOperationInfo (Maybe UTCTime)

-- | Type of the cluster operation.
clusterOperationInfo_operationType :: Lens' ClusterOperationInfo (Maybe Text)

-- | ARN of the cluster operation.
clusterOperationInfo_operationArn :: Lens' ClusterOperationInfo (Maybe Text)

-- | Describes the error if the operation fails.
clusterOperationInfo_errorInfo :: Lens' ClusterOperationInfo (Maybe ErrorInfo)

-- | The name of the step.
clusterOperationStep_stepName :: Lens' ClusterOperationStep (Maybe Text)

-- | Information about the step and its status.
clusterOperationStep_stepInfo :: Lens' ClusterOperationStep (Maybe ClusterOperationStepInfo)

-- | The steps current status.
clusterOperationStepInfo_stepStatus :: Lens' ClusterOperationStepInfo (Maybe Text)

-- | A Kafka version.
compatibleKafkaVersion_sourceVersion :: Lens' CompatibleKafkaVersion (Maybe Text)

-- | A list of Kafka versions.
compatibleKafkaVersion_targetVersions :: Lens' CompatibleKafkaVersion (Maybe [Text])

-- | The description of the configuration.
configuration_description :: Lens' Configuration Text

-- | Latest revision of the configuration.
configuration_latestRevision :: Lens' Configuration ConfigurationRevision

-- | The time when the configuration was created.
configuration_creationTime :: Lens' Configuration UTCTime

-- | An array of the versions of Apache Kafka with which you can use this
--   MSK configuration. You can use this configuration for an MSK cluster
--   only if the Apache Kafka version specified for the cluster appears in
--   this array.
configuration_kafkaVersions :: Lens' Configuration [Text]

-- | The Amazon Resource Name (ARN) of the configuration.
configuration_arn :: Lens' Configuration Text

-- | The name of the configuration.
configuration_name :: Lens' Configuration Text

-- | The state of the configuration. The possible states are ACTIVE,
--   DELETING, and DELETE_FAILED.
configuration_state :: Lens' Configuration ConfigurationState

-- | The revision of the configuration to use.
configurationInfo_revision :: Lens' ConfigurationInfo Integer

-- | ARN of the configuration to use.
configurationInfo_arn :: Lens' ConfigurationInfo Text

-- | The description of the configuration revision.
configurationRevision_description :: Lens' ConfigurationRevision (Maybe Text)

-- | The revision number.
configurationRevision_revision :: Lens' ConfigurationRevision Integer

-- | The time when the configuration revision was created.
configurationRevision_creationTime :: Lens' ConfigurationRevision UTCTime

-- | The size in GiB of the EBS volume for the data drive on each broker
--   node.
eBSStorageInfo_volumeSize :: Lens' EBSStorageInfo (Maybe Natural)

-- | The ARN of the AWS KMS key for encrypting data at rest. If you don't
--   specify a KMS key, MSK creates one for you and uses it.
encryptionAtRest_dataVolumeKMSKeyId :: Lens' EncryptionAtRest Text

-- | Indicates the encryption setting for data in transit between clients
--   and brokers. The following are the possible values.
--   
--   TLS means that client-broker communication is enabled with TLS only.
--   
--   TLS_PLAINTEXT means that client-broker communication is enabled for
--   both TLS-encrypted, as well as plaintext data.
--   
--   PLAINTEXT means that client-broker communication is enabled in
--   plaintext only.
--   
--   The default value is TLS_PLAINTEXT.
encryptionInTransit_clientBroker :: Lens' EncryptionInTransit (Maybe ClientBroker)

-- | When set to true, it indicates that data communication among the
--   broker nodes of the cluster is encrypted. When set to false, the
--   communication happens in plaintext.
--   
--   The default value is true.
encryptionInTransit_inCluster :: Lens' EncryptionInTransit (Maybe Bool)

-- | The data-volume encryption details.
encryptionInfo_encryptionAtRest :: Lens' EncryptionInfo (Maybe EncryptionAtRest)

-- | The details for encryption in transit.
encryptionInfo_encryptionInTransit :: Lens' EncryptionInfo (Maybe EncryptionInTransit)

-- | An optional field to provide more details about the error.
errorInfo_errorString :: Lens' ErrorInfo (Maybe Text)

-- | A number describing the error programmatically.
errorInfo_errorCode :: Lens' ErrorInfo (Maybe Text)

-- | Undocumented member.
firehose_deliveryStream :: Lens' Firehose (Maybe Text)

-- | Undocumented member.
firehose_enabled :: Lens' Firehose Bool

-- | Indicates whether IAM access control is enabled.
iam_enabled :: Lens' Iam (Maybe Bool)

-- | Indicates whether you want to enable or disable the JMX Exporter.
jmxExporter_enabledInBroker :: Lens' JmxExporter Bool

-- | Indicates whether you want to enable or disable the JMX Exporter.
jmxExporterInfo_enabledInBroker :: Lens' JmxExporterInfo Bool

-- | Undocumented member.
kafkaVersion_status :: Lens' KafkaVersion (Maybe KafkaVersionStatus)

-- | Undocumented member.
kafkaVersion_version :: Lens' KafkaVersion (Maybe Text)

-- | Undocumented member.
loggingInfo_brokerLogs :: Lens' LoggingInfo BrokerLogs

-- | The number of broker nodes in the cluster.
mutableClusterInfo_numberOfBrokerNodes :: Lens' MutableClusterInfo (Maybe Int)

-- | Specifies which Apache Kafka metrics Amazon MSK gathers and sends to
--   Amazon CloudWatch for this cluster.
mutableClusterInfo_enhancedMonitoring :: Lens' MutableClusterInfo (Maybe EnhancedMonitoring)

-- | The settings for open monitoring.
mutableClusterInfo_openMonitoring :: Lens' MutableClusterInfo (Maybe OpenMonitoring)

-- | Information about the changes in the configuration of the brokers.
mutableClusterInfo_configurationInfo :: Lens' MutableClusterInfo (Maybe ConfigurationInfo)

-- | Information about the Amazon MSK broker type.
mutableClusterInfo_instanceType :: Lens' MutableClusterInfo (Maybe Text)

-- | The Kafka version.
mutableClusterInfo_kafkaVersion :: Lens' MutableClusterInfo (Maybe Text)

-- | You can configure your MSK cluster to send broker logs to different
--   destination types. This is a container for the configuration details
--   related to broker logs.
mutableClusterInfo_loggingInfo :: Lens' MutableClusterInfo (Maybe LoggingInfo)

-- | Includes all client authentication information.
mutableClusterInfo_clientAuthentication :: Lens' MutableClusterInfo (Maybe ClientAuthentication)

-- | Specifies the size of the EBS volume and the ID of the associated
--   broker.
mutableClusterInfo_brokerEBSVolumeInfo :: Lens' MutableClusterInfo (Maybe [BrokerEBSVolumeInfo])

-- | Includes all encryption-related information.
mutableClusterInfo_encryptionInfo :: Lens' MutableClusterInfo (Maybe EncryptionInfo)

-- | Indicates whether you want to enable or disable the Node Exporter.
nodeExporter_enabledInBroker :: Lens' NodeExporter Bool

-- | Indicates whether you want to enable or disable the Node Exporter.
nodeExporterInfo_enabledInBroker :: Lens' NodeExporterInfo Bool

-- | The start time.
nodeInfo_addedToClusterTime :: Lens' NodeInfo (Maybe Text)

-- | The Amazon Resource Name (ARN) of the node.
nodeInfo_nodeARN :: Lens' NodeInfo (Maybe Text)

-- | The ZookeeperNodeInfo.
nodeInfo_zookeeperNodeInfo :: Lens' NodeInfo (Maybe ZookeeperNodeInfo)

-- | The instance type.
nodeInfo_instanceType :: Lens' NodeInfo (Maybe Text)

-- | The broker node info.
nodeInfo_brokerNodeInfo :: Lens' NodeInfo (Maybe BrokerNodeInfo)

-- | The node type.
nodeInfo_nodeType :: Lens' NodeInfo (Maybe NodeType)

-- | Prometheus settings.
openMonitoring_prometheus :: Lens' OpenMonitoring Prometheus

-- | Prometheus settings.
openMonitoringInfo_prometheus :: Lens' OpenMonitoringInfo PrometheusInfo

-- | Indicates whether you want to enable or disable the JMX Exporter.
prometheus_jmxExporter :: Lens' Prometheus (Maybe JmxExporter)

-- | Indicates whether you want to enable or disable the Node Exporter.
prometheus_nodeExporter :: Lens' Prometheus (Maybe NodeExporter)

-- | Indicates whether you want to enable or disable the JMX Exporter.
prometheusInfo_jmxExporter :: Lens' PrometheusInfo (Maybe JmxExporterInfo)

-- | Indicates whether you want to enable or disable the Node Exporter.
prometheusInfo_nodeExporter :: Lens' PrometheusInfo (Maybe NodeExporterInfo)

-- | Undocumented member.
s3_prefix :: Lens' S3 (Maybe Text)

-- | Undocumented member.
s3_bucket :: Lens' S3 (Maybe Text)

-- | Undocumented member.
s3_enabled :: Lens' S3 Bool

-- | Indicates whether IAM access control is enabled.
sasl_iam :: Lens' Sasl (Maybe Iam)

-- | Details for SASL/SCRAM client authentication.
sasl_scram :: Lens' Sasl (Maybe Scram)

-- | SASL/SCRAM authentication is enabled or not.
scram_enabled :: Lens' Scram (Maybe Bool)

-- | Undocumented member.
stateInfo_code :: Lens' StateInfo (Maybe Text)

-- | Undocumented member.
stateInfo_message :: Lens' StateInfo (Maybe Text)

-- | EBS volume information.
storageInfo_ebsStorageInfo :: Lens' StorageInfo (Maybe EBSStorageInfo)

-- | Specifies whether you want to enable or disable TLS authentication.
tls_enabled :: Lens' Tls (Maybe Bool)

-- | List of ACM Certificate Authority ARNs.
tls_certificateAuthorityArnList :: Lens' Tls (Maybe [Text])

-- | Specifies whether you want to enable or disable unauthenticated
--   traffic to your cluster.
unauthenticated_enabled :: Lens' Unauthenticated (Maybe Bool)

-- | Error code for associate/disassociate failure.
unprocessedScramSecret_errorCode :: Lens' UnprocessedScramSecret (Maybe Text)

-- | Error message for associate/disassociate failure.
unprocessedScramSecret_errorMessage :: Lens' UnprocessedScramSecret (Maybe Text)

-- | AWS Secrets Manager secret ARN.
unprocessedScramSecret_secretArn :: Lens' UnprocessedScramSecret (Maybe Text)

-- | The version of Zookeeper.
zookeeperNodeInfo_zookeeperVersion :: Lens' ZookeeperNodeInfo (Maybe Text)

-- | The attached elastic network interface of the broker.
zookeeperNodeInfo_attachedENIId :: Lens' ZookeeperNodeInfo (Maybe Text)

-- | Endpoints for accessing the ZooKeeper.
zookeeperNodeInfo_endpoints :: Lens' ZookeeperNodeInfo (Maybe [Text])

-- | The virtual private cloud (VPC) IP address of the client.
zookeeperNodeInfo_clientVpcIpAddress :: Lens' ZookeeperNodeInfo (Maybe Text)

-- | The role-specific ID for Zookeeper.
zookeeperNodeInfo_zookeeperId :: Lens' ZookeeperNodeInfo (Maybe Double)


module Amazonka.Kafka.Waiters


-- | Derived from API version <tt>2018-11-14</tt> of the AWS service
--   descriptions, licensed under Apache 2.0.
--   
--   The operations for managing an Amazon MSK cluster.
module Amazonka.Kafka

-- | API version <tt>2018-11-14</tt> of the Amazon Managed Streaming for
--   Kafka SDK configuration.
defaultService :: Service

-- | Returns information about an error.
_ConflictException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Returns information about an error.
_ForbiddenException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Returns information about an error.
_NotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Returns information about an error.
_TooManyRequestsException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Returns information about an error.
_InternalServerErrorException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Returns information about an error.
_ServiceUnavailableException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Returns information about an error.
_UnauthorizedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Returns information about an error.
_BadRequestException :: AsError a => Getting (First ServiceError) a ServiceError

-- | <i>See:</i> <a>newCreateConfiguration</a> smart constructor.
data CreateConfiguration
CreateConfiguration' :: Maybe [Text] -> Maybe Text -> Base64 -> Text -> CreateConfiguration

-- | Create a value of <a>CreateConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:kafkaVersions:CreateConfiguration'</a>,
--   <a>createConfiguration_kafkaVersions</a> - The versions of Apache
--   Kafka with which you can use this MSK configuration.
--   
--   <a>$sel:description:CreateConfiguration'</a>,
--   <a>createConfiguration_description</a> - The description of the
--   configuration.
--   
--   <a>$sel:serverProperties:CreateConfiguration'</a>,
--   <a>createConfiguration_serverProperties</a> - Contents of the
--   server.properties file. When using the API, you must ensure that the
--   contents of the file are base64 encoded. When using the AWS Management
--   Console, the SDK, or the AWS CLI, the contents of server.properties
--   can be in plaintext.-- -- <i>Note:</i> This <tt>Lens</tt>
--   automatically encodes and decodes Base64 data. -- The underlying
--   isomorphism will encode to Base64 representation during --
--   serialisation, and decode from Base64 representation during
--   deserialisation. -- This <tt>Lens</tt> accepts and returns only raw
--   unencoded data.
--   
--   <a>$sel:name:CreateConfiguration'</a>, <a>createConfiguration_name</a>
--   - The name of the configuration.
newCreateConfiguration :: ByteString -> Text -> CreateConfiguration

-- | <i>See:</i> <a>newCreateConfigurationResponse</a> smart constructor.
data CreateConfigurationResponse
CreateConfigurationResponse' :: Maybe POSIX -> Maybe ConfigurationState -> Maybe Text -> Maybe ConfigurationRevision -> Maybe Text -> Int -> CreateConfigurationResponse

-- | Create a value of <a>CreateConfigurationResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:CreateConfigurationResponse'</a>,
--   <a>createConfigurationResponse_creationTime</a> - The time when the
--   configuration was created.
--   
--   <a>$sel:state:CreateConfigurationResponse'</a>,
--   <a>createConfigurationResponse_state</a> - The state of the
--   configuration. The possible states are ACTIVE, DELETING, and
--   DELETE_FAILED.
--   
--   <a>$sel:arn:CreateConfigurationResponse'</a>,
--   <a>createConfigurationResponse_arn</a> - The Amazon Resource Name
--   (ARN) of the configuration.
--   
--   <a>$sel:latestRevision:CreateConfigurationResponse'</a>,
--   <a>createConfigurationResponse_latestRevision</a> - Latest revision of
--   the configuration.
--   
--   <a>$sel:name:CreateConfiguration'</a>,
--   <a>createConfigurationResponse_name</a> - The name of the
--   configuration.
--   
--   <a>$sel:httpStatus:CreateConfigurationResponse'</a>,
--   <a>createConfigurationResponse_httpStatus</a> - The response's http
--   status code.
newCreateConfigurationResponse :: Int -> CreateConfigurationResponse

-- | <i>See:</i> <a>newDescribeCluster</a> smart constructor.
data DescribeCluster
DescribeCluster' :: Text -> DescribeCluster

-- | Create a value of <a>DescribeCluster</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clusterArn:DescribeCluster'</a>,
--   <a>describeCluster_clusterArn</a> - The Amazon Resource Name (ARN)
--   that uniquely identifies the cluster.
newDescribeCluster :: Text -> DescribeCluster

-- | <i>See:</i> <a>newDescribeClusterResponse</a> smart constructor.
data DescribeClusterResponse
DescribeClusterResponse' :: Maybe ClusterInfo -> Int -> DescribeClusterResponse

-- | Create a value of <a>DescribeClusterResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clusterInfo:DescribeClusterResponse'</a>,
--   <a>describeClusterResponse_clusterInfo</a> - The cluster information.
--   
--   <a>$sel:httpStatus:DescribeClusterResponse'</a>,
--   <a>describeClusterResponse_httpStatus</a> - The response's http status
--   code.
newDescribeClusterResponse :: Int -> DescribeClusterResponse

-- | Reboots a node.
--   
--   <i>See:</i> <a>newRebootBroker</a> smart constructor.
data RebootBroker
RebootBroker' :: Text -> [Text] -> RebootBroker

-- | Create a value of <a>RebootBroker</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clusterArn:RebootBroker'</a>, <a>rebootBroker_clusterArn</a> -
--   The Amazon Resource Name (ARN) of the cluster to be updated.
--   
--   <a>$sel:brokerIds:RebootBroker'</a>, <a>rebootBroker_brokerIds</a> -
--   The list of broker IDs to be rebooted. The reboot-broker operation
--   supports rebooting one broker at a time.
newRebootBroker :: Text -> RebootBroker

-- | <i>See:</i> <a>newRebootBrokerResponse</a> smart constructor.
data RebootBrokerResponse
RebootBrokerResponse' :: Maybe Text -> Maybe Text -> Int -> RebootBrokerResponse

-- | Create a value of <a>RebootBrokerResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clusterArn:RebootBroker'</a>,
--   <a>rebootBrokerResponse_clusterArn</a> - The Amazon Resource Name
--   (ARN) of the cluster.
--   
--   <a>$sel:clusterOperationArn:RebootBrokerResponse'</a>,
--   <a>rebootBrokerResponse_clusterOperationArn</a> - The Amazon Resource
--   Name (ARN) of the cluster operation.
--   
--   <a>$sel:httpStatus:RebootBrokerResponse'</a>,
--   <a>rebootBrokerResponse_httpStatus</a> - The response's http status
--   code.
newRebootBrokerResponse :: Int -> RebootBrokerResponse

-- | <i>See:</i> <a>newListConfigurationRevisions</a> smart constructor.
data ListConfigurationRevisions
ListConfigurationRevisions' :: Maybe Text -> Maybe Natural -> Text -> ListConfigurationRevisions

-- | Create a value of <a>ListConfigurationRevisions</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListConfigurationRevisions'</a>,
--   <a>listConfigurationRevisions_nextToken</a> - The paginated results
--   marker. When the result of the operation is truncated, the call
--   returns NextToken in the response. To get the next batch, provide this
--   token in your next request.
--   
--   <a>$sel:maxResults:ListConfigurationRevisions'</a>,
--   <a>listConfigurationRevisions_maxResults</a> - The maximum number of
--   results to return in the response. If there are more results, the
--   response includes a NextToken parameter.
--   
--   <a>$sel:arn:ListConfigurationRevisions'</a>,
--   <a>listConfigurationRevisions_arn</a> - The Amazon Resource Name (ARN)
--   that uniquely identifies an MSK configuration and all of its
--   revisions.
newListConfigurationRevisions :: Text -> ListConfigurationRevisions

-- | <i>See:</i> <a>newListConfigurationRevisionsResponse</a> smart
--   constructor.
data ListConfigurationRevisionsResponse
ListConfigurationRevisionsResponse' :: Maybe Text -> Maybe [ConfigurationRevision] -> Int -> ListConfigurationRevisionsResponse

-- | Create a value of <a>ListConfigurationRevisionsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListConfigurationRevisions'</a>,
--   <a>listConfigurationRevisionsResponse_nextToken</a> - Paginated
--   results marker.
--   
--   <a>$sel:revisions:ListConfigurationRevisionsResponse'</a>,
--   <a>listConfigurationRevisionsResponse_revisions</a> - List of
--   ConfigurationRevision objects.
--   
--   <a>$sel:httpStatus:ListConfigurationRevisionsResponse'</a>,
--   <a>listConfigurationRevisionsResponse_httpStatus</a> - The response's
--   http status code.
newListConfigurationRevisionsResponse :: Int -> ListConfigurationRevisionsResponse

-- | <i>See:</i> <a>newListTagsForResource</a> smart constructor.
data ListTagsForResource
ListTagsForResource' :: Text -> ListTagsForResource

-- | Create a value of <a>ListTagsForResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:ListTagsForResource'</a>,
--   <a>listTagsForResource_resourceArn</a> - The Amazon Resource Name
--   (ARN) that uniquely identifies the resource that's associated with the
--   tags.
newListTagsForResource :: Text -> ListTagsForResource

-- | <i>See:</i> <a>newListTagsForResourceResponse</a> smart constructor.
data ListTagsForResourceResponse
ListTagsForResourceResponse' :: Maybe (HashMap Text Text) -> Int -> ListTagsForResourceResponse

-- | Create a value of <a>ListTagsForResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_tags</a> - The key-value pair for the
--   resource tag.
--   
--   <a>$sel:httpStatus:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_httpStatus</a> - The response's http
--   status code.
newListTagsForResourceResponse :: Int -> ListTagsForResourceResponse

-- | <i>See:</i> <a>newListKafkaVersions</a> smart constructor.
data ListKafkaVersions
ListKafkaVersions' :: Maybe Text -> Maybe Natural -> ListKafkaVersions

-- | Create a value of <a>ListKafkaVersions</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListKafkaVersions'</a>,
--   <a>listKafkaVersions_nextToken</a> - The paginated results marker.
--   When the result of the operation is truncated, the call returns
--   NextToken in the response. To get the next batch, provide this token
--   in your next request.
--   
--   <a>$sel:maxResults:ListKafkaVersions'</a>,
--   <a>listKafkaVersions_maxResults</a> - The maximum number of results to
--   return in the response. If there are more results, the response
--   includes a NextToken parameter.
newListKafkaVersions :: ListKafkaVersions

-- | <i>See:</i> <a>newListKafkaVersionsResponse</a> smart constructor.
data ListKafkaVersionsResponse
ListKafkaVersionsResponse' :: Maybe [KafkaVersion] -> Maybe Text -> Int -> ListKafkaVersionsResponse

-- | Create a value of <a>ListKafkaVersionsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:kafkaVersions:ListKafkaVersionsResponse'</a>,
--   <a>listKafkaVersionsResponse_kafkaVersions</a> - Undocumented member.
--   
--   <a>$sel:nextToken:ListKafkaVersions'</a>,
--   <a>listKafkaVersionsResponse_nextToken</a> - Undocumented member.
--   
--   <a>$sel:httpStatus:ListKafkaVersionsResponse'</a>,
--   <a>listKafkaVersionsResponse_httpStatus</a> - The response's http
--   status code.
newListKafkaVersionsResponse :: Int -> ListKafkaVersionsResponse

-- | Request body for UpdateMonitoring.
--   
--   <i>See:</i> <a>newUpdateMonitoring</a> smart constructor.
data UpdateMonitoring
UpdateMonitoring' :: Maybe EnhancedMonitoring -> Maybe OpenMonitoringInfo -> Maybe LoggingInfo -> Text -> Text -> UpdateMonitoring

-- | Create a value of <a>UpdateMonitoring</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:enhancedMonitoring:UpdateMonitoring'</a>,
--   <a>updateMonitoring_enhancedMonitoring</a> - Specifies which Apache
--   Kafka metrics Amazon MSK gathers and sends to Amazon CloudWatch for
--   this cluster.
--   
--   <a>$sel:openMonitoring:UpdateMonitoring'</a>,
--   <a>updateMonitoring_openMonitoring</a> - The settings for open
--   monitoring.
--   
--   <a>$sel:loggingInfo:UpdateMonitoring'</a>,
--   <a>updateMonitoring_loggingInfo</a> - Undocumented member.
--   
--   <a>$sel:clusterArn:UpdateMonitoring'</a>,
--   <a>updateMonitoring_clusterArn</a> - The Amazon Resource Name (ARN)
--   that uniquely identifies the cluster.
--   
--   <a>$sel:currentVersion:UpdateMonitoring'</a>,
--   <a>updateMonitoring_currentVersion</a> - The version of the MSK
--   cluster to update. Cluster versions aren't simple numbers. You can
--   describe an MSK cluster to find its version. When this update
--   operation is successful, it generates a new cluster version.
newUpdateMonitoring :: Text -> Text -> UpdateMonitoring

-- | <i>See:</i> <a>newUpdateMonitoringResponse</a> smart constructor.
data UpdateMonitoringResponse
UpdateMonitoringResponse' :: Maybe Text -> Maybe Text -> Int -> UpdateMonitoringResponse

-- | Create a value of <a>UpdateMonitoringResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clusterArn:UpdateMonitoring'</a>,
--   <a>updateMonitoringResponse_clusterArn</a> - The Amazon Resource Name
--   (ARN) of the cluster.
--   
--   <a>$sel:clusterOperationArn:UpdateMonitoringResponse'</a>,
--   <a>updateMonitoringResponse_clusterOperationArn</a> - The Amazon
--   Resource Name (ARN) of the cluster operation.
--   
--   <a>$sel:httpStatus:UpdateMonitoringResponse'</a>,
--   <a>updateMonitoringResponse_httpStatus</a> - The response's http
--   status code.
newUpdateMonitoringResponse :: Int -> UpdateMonitoringResponse

-- | Associates sasl scram secrets to cluster.
--   
--   <i>See:</i> <a>newBatchAssociateScramSecret</a> smart constructor.
data BatchAssociateScramSecret
BatchAssociateScramSecret' :: Text -> [Text] -> BatchAssociateScramSecret

-- | Create a value of <a>BatchAssociateScramSecret</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clusterArn:BatchAssociateScramSecret'</a>,
--   <a>batchAssociateScramSecret_clusterArn</a> - The Amazon Resource Name
--   (ARN) of the cluster to be updated.
--   
--   <a>$sel:secretArnList:BatchAssociateScramSecret'</a>,
--   <a>batchAssociateScramSecret_secretArnList</a> - List of AWS Secrets
--   Manager secret ARNs.
newBatchAssociateScramSecret :: Text -> BatchAssociateScramSecret

-- | <i>See:</i> <a>newBatchAssociateScramSecretResponse</a> smart
--   constructor.
data BatchAssociateScramSecretResponse
BatchAssociateScramSecretResponse' :: Maybe Text -> Maybe [UnprocessedScramSecret] -> Int -> BatchAssociateScramSecretResponse

-- | Create a value of <a>BatchAssociateScramSecretResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clusterArn:BatchAssociateScramSecret'</a>,
--   <a>batchAssociateScramSecretResponse_clusterArn</a> - The Amazon
--   Resource Name (ARN) of the cluster.
--   
--   
--   <a>$sel:unprocessedScramSecrets:BatchAssociateScramSecretResponse'</a>,
--   <a>batchAssociateScramSecretResponse_unprocessedScramSecrets</a> -
--   List of errors when associating secrets to cluster.
--   
--   <a>$sel:httpStatus:BatchAssociateScramSecretResponse'</a>,
--   <a>batchAssociateScramSecretResponse_httpStatus</a> - The response's
--   http status code.
newBatchAssociateScramSecretResponse :: Int -> BatchAssociateScramSecretResponse

-- | <i>See:</i> <a>newUpdateBrokerStorage</a> smart constructor.
data UpdateBrokerStorage
UpdateBrokerStorage' :: Text -> [BrokerEBSVolumeInfo] -> Text -> UpdateBrokerStorage

-- | Create a value of <a>UpdateBrokerStorage</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clusterArn:UpdateBrokerStorage'</a>,
--   <a>updateBrokerStorage_clusterArn</a> - The Amazon Resource Name (ARN)
--   that uniquely identifies the cluster.
--   
--   <a>$sel:targetBrokerEBSVolumeInfo:UpdateBrokerStorage'</a>,
--   <a>updateBrokerStorage_targetBrokerEBSVolumeInfo</a> - Describes the
--   target volume size and the ID of the broker to apply the update to.
--   
--   <a>$sel:currentVersion:UpdateBrokerStorage'</a>,
--   <a>updateBrokerStorage_currentVersion</a> - The version of cluster to
--   update from. A successful operation will then generate a new version.
newUpdateBrokerStorage :: Text -> Text -> UpdateBrokerStorage

-- | <i>See:</i> <a>newUpdateBrokerStorageResponse</a> smart constructor.
data UpdateBrokerStorageResponse
UpdateBrokerStorageResponse' :: Maybe Text -> Maybe Text -> Int -> UpdateBrokerStorageResponse

-- | Create a value of <a>UpdateBrokerStorageResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clusterArn:UpdateBrokerStorage'</a>,
--   <a>updateBrokerStorageResponse_clusterArn</a> - The Amazon Resource
--   Name (ARN) of the cluster.
--   
--   <a>$sel:clusterOperationArn:UpdateBrokerStorageResponse'</a>,
--   <a>updateBrokerStorageResponse_clusterOperationArn</a> - The Amazon
--   Resource Name (ARN) of the cluster operation.
--   
--   <a>$sel:httpStatus:UpdateBrokerStorageResponse'</a>,
--   <a>updateBrokerStorageResponse_httpStatus</a> - The response's http
--   status code.
newUpdateBrokerStorageResponse :: Int -> UpdateBrokerStorageResponse

-- | <i>See:</i> <a>newDeleteCluster</a> smart constructor.
data DeleteCluster
DeleteCluster' :: Maybe Text -> Text -> DeleteCluster

-- | Create a value of <a>DeleteCluster</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:currentVersion:DeleteCluster'</a>,
--   <a>deleteCluster_currentVersion</a> - The current version of the MSK
--   cluster.
--   
--   <a>$sel:clusterArn:DeleteCluster'</a>, <a>deleteCluster_clusterArn</a>
--   - The Amazon Resource Name (ARN) that uniquely identifies the cluster.
newDeleteCluster :: Text -> DeleteCluster

-- | <i>See:</i> <a>newDeleteClusterResponse</a> smart constructor.
data DeleteClusterResponse
DeleteClusterResponse' :: Maybe ClusterState -> Maybe Text -> Int -> DeleteClusterResponse

-- | Create a value of <a>DeleteClusterResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:state:DeleteClusterResponse'</a>,
--   <a>deleteClusterResponse_state</a> - The state of the cluster. The
--   possible states are ACTIVE, CREATING, DELETING, FAILED, HEALING,
--   MAINTENANCE, REBOOTING_BROKER, and UPDATING.
--   
--   <a>$sel:clusterArn:DeleteCluster'</a>,
--   <a>deleteClusterResponse_clusterArn</a> - The Amazon Resource Name
--   (ARN) of the cluster.
--   
--   <a>$sel:httpStatus:DeleteClusterResponse'</a>,
--   <a>deleteClusterResponse_httpStatus</a> - The response's http status
--   code.
newDeleteClusterResponse :: Int -> DeleteClusterResponse

-- | <i>See:</i> <a>newUpdateClusterConfiguration</a> smart constructor.
data UpdateClusterConfiguration
UpdateClusterConfiguration' :: Text -> Text -> ConfigurationInfo -> UpdateClusterConfiguration

-- | Create a value of <a>UpdateClusterConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clusterArn:UpdateClusterConfiguration'</a>,
--   <a>updateClusterConfiguration_clusterArn</a> - The Amazon Resource
--   Name (ARN) that uniquely identifies the cluster.
--   
--   <a>$sel:currentVersion:UpdateClusterConfiguration'</a>,
--   <a>updateClusterConfiguration_currentVersion</a> - The version of the
--   cluster that needs to be updated.
--   
--   <a>$sel:configurationInfo:UpdateClusterConfiguration'</a>,
--   <a>updateClusterConfiguration_configurationInfo</a> - Represents the
--   configuration that you want MSK to use for the brokers in a cluster.
newUpdateClusterConfiguration :: Text -> Text -> ConfigurationInfo -> UpdateClusterConfiguration

-- | <i>See:</i> <a>newUpdateClusterConfigurationResponse</a> smart
--   constructor.
data UpdateClusterConfigurationResponse
UpdateClusterConfigurationResponse' :: Maybe Text -> Maybe Text -> Int -> UpdateClusterConfigurationResponse

-- | Create a value of <a>UpdateClusterConfigurationResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clusterArn:UpdateClusterConfiguration'</a>,
--   <a>updateClusterConfigurationResponse_clusterArn</a> - The Amazon
--   Resource Name (ARN) of the cluster.
--   
--   <a>$sel:clusterOperationArn:UpdateClusterConfigurationResponse'</a>,
--   <a>updateClusterConfigurationResponse_clusterOperationArn</a> - The
--   Amazon Resource Name (ARN) of the cluster operation.
--   
--   <a>$sel:httpStatus:UpdateClusterConfigurationResponse'</a>,
--   <a>updateClusterConfigurationResponse_httpStatus</a> - The response's
--   http status code.
newUpdateClusterConfigurationResponse :: Int -> UpdateClusterConfigurationResponse

-- | <i>See:</i> <a>newCreateCluster</a> smart constructor.
data CreateCluster
CreateCluster' :: Maybe EnhancedMonitoring -> Maybe OpenMonitoringInfo -> Maybe ConfigurationInfo -> Maybe LoggingInfo -> Maybe ClientAuthentication -> Maybe (HashMap Text Text) -> Maybe EncryptionInfo -> BrokerNodeGroupInfo -> Text -> Natural -> Text -> CreateCluster

-- | Create a value of <a>CreateCluster</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:enhancedMonitoring:CreateCluster'</a>,
--   <a>createCluster_enhancedMonitoring</a> - Specifies the level of
--   monitoring for the MSK cluster. The possible values are DEFAULT,
--   PER_BROKER, PER_TOPIC_PER_BROKER, and PER_TOPIC_PER_PARTITION.
--   
--   <a>$sel:openMonitoring:CreateCluster'</a>,
--   <a>createCluster_openMonitoring</a> - The settings for open
--   monitoring.
--   
--   <a>$sel:configurationInfo:CreateCluster'</a>,
--   <a>createCluster_configurationInfo</a> - Represents the configuration
--   that you want MSK to use for the brokers in a cluster.
--   
--   <a>$sel:loggingInfo:CreateCluster'</a>,
--   <a>createCluster_loggingInfo</a> - Undocumented member.
--   
--   <a>$sel:clientAuthentication:CreateCluster'</a>,
--   <a>createCluster_clientAuthentication</a> - Includes all client
--   authentication related information.
--   
--   <a>$sel:tags:CreateCluster'</a>, <a>createCluster_tags</a> - Create
--   tags when creating the cluster.
--   
--   <a>$sel:encryptionInfo:CreateCluster'</a>,
--   <a>createCluster_encryptionInfo</a> - Includes all encryption-related
--   information.
--   
--   <a>$sel:brokerNodeGroupInfo:CreateCluster'</a>,
--   <a>createCluster_brokerNodeGroupInfo</a> - Information about the
--   broker nodes in the cluster.
--   
--   <a>$sel:kafkaVersion:CreateCluster'</a>,
--   <a>createCluster_kafkaVersion</a> - The version of Apache Kafka.
--   
--   <a>$sel:numberOfBrokerNodes:CreateCluster'</a>,
--   <a>createCluster_numberOfBrokerNodes</a> - The number of broker nodes
--   in the cluster.
--   
--   <a>$sel:clusterName:CreateCluster'</a>,
--   <a>createCluster_clusterName</a> - The name of the cluster.
newCreateCluster :: BrokerNodeGroupInfo -> Text -> Natural -> Text -> CreateCluster

-- | <i>See:</i> <a>newCreateClusterResponse</a> smart constructor.
data CreateClusterResponse
CreateClusterResponse' :: Maybe ClusterState -> Maybe Text -> Maybe Text -> Int -> CreateClusterResponse

-- | Create a value of <a>CreateClusterResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:state:CreateClusterResponse'</a>,
--   <a>createClusterResponse_state</a> - The state of the cluster. The
--   possible states are ACTIVE, CREATING, DELETING, FAILED, HEALING,
--   MAINTENANCE, REBOOTING_BROKER, and UPDATING.
--   
--   <a>$sel:clusterArn:CreateClusterResponse'</a>,
--   <a>createClusterResponse_clusterArn</a> - The Amazon Resource Name
--   (ARN) of the cluster.
--   
--   <a>$sel:clusterName:CreateCluster'</a>,
--   <a>createClusterResponse_clusterName</a> - The name of the MSK
--   cluster.
--   
--   <a>$sel:httpStatus:CreateClusterResponse'</a>,
--   <a>createClusterResponse_httpStatus</a> - The response's http status
--   code.
newCreateClusterResponse :: Int -> CreateClusterResponse

-- | <i>See:</i> <a>newUpdateBrokerCount</a> smart constructor.
data UpdateBrokerCount
UpdateBrokerCount' :: Text -> Text -> Natural -> UpdateBrokerCount

-- | Create a value of <a>UpdateBrokerCount</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clusterArn:UpdateBrokerCount'</a>,
--   <a>updateBrokerCount_clusterArn</a> - The Amazon Resource Name (ARN)
--   that uniquely identifies the cluster.
--   
--   <a>$sel:currentVersion:UpdateBrokerCount'</a>,
--   <a>updateBrokerCount_currentVersion</a> - The version of cluster to
--   update from. A successful operation will then generate a new version.
--   
--   <a>$sel:targetNumberOfBrokerNodes:UpdateBrokerCount'</a>,
--   <a>updateBrokerCount_targetNumberOfBrokerNodes</a> - The number of
--   broker nodes that you want the cluster to have after this operation
--   completes successfully.
newUpdateBrokerCount :: Text -> Text -> Natural -> UpdateBrokerCount

-- | <i>See:</i> <a>newUpdateBrokerCountResponse</a> smart constructor.
data UpdateBrokerCountResponse
UpdateBrokerCountResponse' :: Maybe Text -> Maybe Text -> Int -> UpdateBrokerCountResponse

-- | Create a value of <a>UpdateBrokerCountResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clusterArn:UpdateBrokerCount'</a>,
--   <a>updateBrokerCountResponse_clusterArn</a> - The Amazon Resource Name
--   (ARN) of the cluster.
--   
--   <a>$sel:clusterOperationArn:UpdateBrokerCountResponse'</a>,
--   <a>updateBrokerCountResponse_clusterOperationArn</a> - The Amazon
--   Resource Name (ARN) of the cluster operation.
--   
--   <a>$sel:httpStatus:UpdateBrokerCountResponse'</a>,
--   <a>updateBrokerCountResponse_httpStatus</a> - The response's http
--   status code.
newUpdateBrokerCountResponse :: Int -> UpdateBrokerCountResponse

-- | <i>See:</i> <a>newListConfigurations</a> smart constructor.
data ListConfigurations
ListConfigurations' :: Maybe Text -> Maybe Natural -> ListConfigurations

-- | Create a value of <a>ListConfigurations</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListConfigurations'</a>,
--   <a>listConfigurations_nextToken</a> - The paginated results marker.
--   When the result of the operation is truncated, the call returns
--   NextToken in the response. To get the next batch, provide this token
--   in your next request.
--   
--   <a>$sel:maxResults:ListConfigurations'</a>,
--   <a>listConfigurations_maxResults</a> - The maximum number of results
--   to return in the response. If there are more results, the response
--   includes a NextToken parameter.
newListConfigurations :: ListConfigurations

-- | <i>See:</i> <a>newListConfigurationsResponse</a> smart constructor.
data ListConfigurationsResponse
ListConfigurationsResponse' :: Maybe [Configuration] -> Maybe Text -> Int -> ListConfigurationsResponse

-- | Create a value of <a>ListConfigurationsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:configurations:ListConfigurationsResponse'</a>,
--   <a>listConfigurationsResponse_configurations</a> - An array of MSK
--   configurations.
--   
--   <a>$sel:nextToken:ListConfigurations'</a>,
--   <a>listConfigurationsResponse_nextToken</a> - The paginated results
--   marker. When the result of a ListConfigurations operation is
--   truncated, the call returns NextToken in the response. To get another
--   batch of configurations, provide this token in your next request.
--   
--   <a>$sel:httpStatus:ListConfigurationsResponse'</a>,
--   <a>listConfigurationsResponse_httpStatus</a> - The response's http
--   status code.
newListConfigurationsResponse :: Int -> ListConfigurationsResponse

-- | <i>See:</i> <a>newGetBootstrapBrokers</a> smart constructor.
data GetBootstrapBrokers
GetBootstrapBrokers' :: Text -> GetBootstrapBrokers

-- | Create a value of <a>GetBootstrapBrokers</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clusterArn:GetBootstrapBrokers'</a>,
--   <a>getBootstrapBrokers_clusterArn</a> - The Amazon Resource Name (ARN)
--   that uniquely identifies the cluster.
newGetBootstrapBrokers :: Text -> GetBootstrapBrokers

-- | <i>See:</i> <a>newGetBootstrapBrokersResponse</a> smart constructor.
data GetBootstrapBrokersResponse
GetBootstrapBrokersResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Int -> GetBootstrapBrokersResponse

-- | Create a value of <a>GetBootstrapBrokersResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:bootstrapBrokerString:GetBootstrapBrokersResponse'</a>,
--   <a>getBootstrapBrokersResponse_bootstrapBrokerString</a> - A string
--   containing one or more hostname:port pairs.
--   
--   
--   <a>$sel:bootstrapBrokerStringSaslScram:GetBootstrapBrokersResponse'</a>,
--   <a>getBootstrapBrokersResponse_bootstrapBrokerStringSaslScram</a> - A
--   string containing one or more DNS names (or IP) and Sasl Scram port
--   pairs.
--   
--   <a>$sel:bootstrapBrokerStringTls:GetBootstrapBrokersResponse'</a>,
--   <a>getBootstrapBrokersResponse_bootstrapBrokerStringTls</a> - A string
--   containing one or more DNS names (or IP) and TLS port pairs.
--   
--   <a>$sel:bootstrapBrokerStringSaslIam:GetBootstrapBrokersResponse'</a>,
--   <a>getBootstrapBrokersResponse_bootstrapBrokerStringSaslIam</a> - A
--   string that contains one or more DNS names (or IP addresses) and SASL
--   IAM port pairs.
--   
--   <a>$sel:httpStatus:GetBootstrapBrokersResponse'</a>,
--   <a>getBootstrapBrokersResponse_httpStatus</a> - The response's http
--   status code.
newGetBootstrapBrokersResponse :: Int -> GetBootstrapBrokersResponse

-- | <i>See:</i> <a>newUpdateClusterKafkaVersion</a> smart constructor.
data UpdateClusterKafkaVersion
UpdateClusterKafkaVersion' :: Maybe ConfigurationInfo -> Text -> Text -> Text -> UpdateClusterKafkaVersion

-- | Create a value of <a>UpdateClusterKafkaVersion</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:configurationInfo:UpdateClusterKafkaVersion'</a>,
--   <a>updateClusterKafkaVersion_configurationInfo</a> - The custom
--   configuration that should be applied on the new version of cluster.
--   
--   <a>$sel:clusterArn:UpdateClusterKafkaVersion'</a>,
--   <a>updateClusterKafkaVersion_clusterArn</a> - The Amazon Resource Name
--   (ARN) of the cluster to be updated.
--   
--   <a>$sel:targetKafkaVersion:UpdateClusterKafkaVersion'</a>,
--   <a>updateClusterKafkaVersion_targetKafkaVersion</a> - Target Kafka
--   version.
--   
--   <a>$sel:currentVersion:UpdateClusterKafkaVersion'</a>,
--   <a>updateClusterKafkaVersion_currentVersion</a> - Current cluster
--   version.
newUpdateClusterKafkaVersion :: Text -> Text -> Text -> UpdateClusterKafkaVersion

-- | <i>See:</i> <a>newUpdateClusterKafkaVersionResponse</a> smart
--   constructor.
data UpdateClusterKafkaVersionResponse
UpdateClusterKafkaVersionResponse' :: Maybe Text -> Maybe Text -> Int -> UpdateClusterKafkaVersionResponse

-- | Create a value of <a>UpdateClusterKafkaVersionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clusterArn:UpdateClusterKafkaVersion'</a>,
--   <a>updateClusterKafkaVersionResponse_clusterArn</a> - The Amazon
--   Resource Name (ARN) of the cluster.
--   
--   <a>$sel:clusterOperationArn:UpdateClusterKafkaVersionResponse'</a>,
--   <a>updateClusterKafkaVersionResponse_clusterOperationArn</a> - The
--   Amazon Resource Name (ARN) of the cluster operation.
--   
--   <a>$sel:httpStatus:UpdateClusterKafkaVersionResponse'</a>,
--   <a>updateClusterKafkaVersionResponse_httpStatus</a> - The response's
--   http status code.
newUpdateClusterKafkaVersionResponse :: Int -> UpdateClusterKafkaVersionResponse

-- | <i>See:</i> <a>newUpdateSecurity</a> smart constructor.
data UpdateSecurity
UpdateSecurity' :: Maybe ClientAuthentication -> Maybe EncryptionInfo -> Text -> Text -> UpdateSecurity

-- | Create a value of <a>UpdateSecurity</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientAuthentication:UpdateSecurity'</a>,
--   <a>updateSecurity_clientAuthentication</a> - Includes all client
--   authentication related information.
--   
--   <a>$sel:encryptionInfo:UpdateSecurity'</a>,
--   <a>updateSecurity_encryptionInfo</a> - Includes all encryption-related
--   information.
--   
--   <a>$sel:clusterArn:UpdateSecurity'</a>,
--   <a>updateSecurity_clusterArn</a> - The Amazon Resource Name (ARN) that
--   uniquely identifies the cluster.
--   
--   <a>$sel:currentVersion:UpdateSecurity'</a>,
--   <a>updateSecurity_currentVersion</a> - The version of the MSK cluster
--   to update. Cluster versions aren't simple numbers. You can describe an
--   MSK cluster to find its version. When this update operation is
--   successful, it generates a new cluster version.
newUpdateSecurity :: Text -> Text -> UpdateSecurity

-- | <i>See:</i> <a>newUpdateSecurityResponse</a> smart constructor.
data UpdateSecurityResponse
UpdateSecurityResponse' :: Maybe Text -> Maybe Text -> Int -> UpdateSecurityResponse

-- | Create a value of <a>UpdateSecurityResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clusterArn:UpdateSecurity'</a>,
--   <a>updateSecurityResponse_clusterArn</a> - The Amazon Resource Name
--   (ARN) of the cluster.
--   
--   <a>$sel:clusterOperationArn:UpdateSecurityResponse'</a>,
--   <a>updateSecurityResponse_clusterOperationArn</a> - The Amazon
--   Resource Name (ARN) of the cluster operation.
--   
--   <a>$sel:httpStatus:UpdateSecurityResponse'</a>,
--   <a>updateSecurityResponse_httpStatus</a> - The response's http status
--   code.
newUpdateSecurityResponse :: Int -> UpdateSecurityResponse

-- | <i>See:</i> <a>newGetCompatibleKafkaVersions</a> smart constructor.
data GetCompatibleKafkaVersions
GetCompatibleKafkaVersions' :: Maybe Text -> GetCompatibleKafkaVersions

-- | Create a value of <a>GetCompatibleKafkaVersions</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clusterArn:GetCompatibleKafkaVersions'</a>,
--   <a>getCompatibleKafkaVersions_clusterArn</a> - The Amazon Resource
--   Name (ARN) of the cluster check.
newGetCompatibleKafkaVersions :: GetCompatibleKafkaVersions

-- | <i>See:</i> <a>newGetCompatibleKafkaVersionsResponse</a> smart
--   constructor.
data GetCompatibleKafkaVersionsResponse
GetCompatibleKafkaVersionsResponse' :: Maybe [CompatibleKafkaVersion] -> Int -> GetCompatibleKafkaVersionsResponse

-- | Create a value of <a>GetCompatibleKafkaVersionsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:compatibleKafkaVersions:GetCompatibleKafkaVersionsResponse'</a>,
--   <a>getCompatibleKafkaVersionsResponse_compatibleKafkaVersions</a> - A
--   list of CompatibleKafkaVersion objects.
--   
--   <a>$sel:httpStatus:GetCompatibleKafkaVersionsResponse'</a>,
--   <a>getCompatibleKafkaVersionsResponse_httpStatus</a> - The response's
--   http status code.
newGetCompatibleKafkaVersionsResponse :: Int -> GetCompatibleKafkaVersionsResponse

-- | <i>See:</i> <a>newDescribeClusterOperation</a> smart constructor.
data DescribeClusterOperation
DescribeClusterOperation' :: Text -> DescribeClusterOperation

-- | Create a value of <a>DescribeClusterOperation</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clusterOperationArn:DescribeClusterOperation'</a>,
--   <a>describeClusterOperation_clusterOperationArn</a> - The Amazon
--   Resource Name (ARN) that uniquely identifies the MSK cluster
--   operation.
newDescribeClusterOperation :: Text -> DescribeClusterOperation

-- | <i>See:</i> <a>newDescribeClusterOperationResponse</a> smart
--   constructor.
data DescribeClusterOperationResponse
DescribeClusterOperationResponse' :: Maybe ClusterOperationInfo -> Int -> DescribeClusterOperationResponse

-- | Create a value of <a>DescribeClusterOperationResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clusterOperationInfo:DescribeClusterOperationResponse'</a>,
--   <a>describeClusterOperationResponse_clusterOperationInfo</a> - Cluster
--   operation information
--   
--   <a>$sel:httpStatus:DescribeClusterOperationResponse'</a>,
--   <a>describeClusterOperationResponse_httpStatus</a> - The response's
--   http status code.
newDescribeClusterOperationResponse :: Int -> DescribeClusterOperationResponse

-- | <i>See:</i> <a>newUpdateBrokerType</a> smart constructor.
data UpdateBrokerType
UpdateBrokerType' :: Text -> Text -> Text -> UpdateBrokerType

-- | Create a value of <a>UpdateBrokerType</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clusterArn:UpdateBrokerType'</a>,
--   <a>updateBrokerType_clusterArn</a> - The Amazon Resource Name (ARN)
--   that uniquely identifies the cluster.
--   
--   <a>$sel:currentVersion:UpdateBrokerType'</a>,
--   <a>updateBrokerType_currentVersion</a> - The cluster version that you
--   want to change. After this operation completes successfully, the
--   cluster will have a new version.
--   
--   <a>$sel:targetInstanceType:UpdateBrokerType'</a>,
--   <a>updateBrokerType_targetInstanceType</a> - The Amazon MSK broker
--   type that you want all of the brokers in this cluster to be.
newUpdateBrokerType :: Text -> Text -> Text -> UpdateBrokerType

-- | <i>See:</i> <a>newUpdateBrokerTypeResponse</a> smart constructor.
data UpdateBrokerTypeResponse
UpdateBrokerTypeResponse' :: Maybe Text -> Maybe Text -> Int -> UpdateBrokerTypeResponse

-- | Create a value of <a>UpdateBrokerTypeResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clusterArn:UpdateBrokerType'</a>,
--   <a>updateBrokerTypeResponse_clusterArn</a> - The Amazon Resource Name
--   (ARN) of the cluster.
--   
--   <a>$sel:clusterOperationArn:UpdateBrokerTypeResponse'</a>,
--   <a>updateBrokerTypeResponse_clusterOperationArn</a> - The Amazon
--   Resource Name (ARN) of the cluster operation.
--   
--   <a>$sel:httpStatus:UpdateBrokerTypeResponse'</a>,
--   <a>updateBrokerTypeResponse_httpStatus</a> - The response's http
--   status code.
newUpdateBrokerTypeResponse :: Int -> UpdateBrokerTypeResponse

-- | <i>See:</i> <a>newDescribeConfiguration</a> smart constructor.
data DescribeConfiguration
DescribeConfiguration' :: Text -> DescribeConfiguration

-- | Create a value of <a>DescribeConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:DescribeConfiguration'</a>,
--   <a>describeConfiguration_arn</a> - The Amazon Resource Name (ARN) that
--   uniquely identifies an MSK configuration and all of its revisions.
newDescribeConfiguration :: Text -> DescribeConfiguration

-- | <i>See:</i> <a>newDescribeConfigurationResponse</a> smart constructor.
data DescribeConfigurationResponse
DescribeConfigurationResponse' :: Maybe POSIX -> Maybe ConfigurationState -> Maybe [Text] -> Maybe Text -> Maybe ConfigurationRevision -> Maybe Text -> Maybe Text -> Int -> DescribeConfigurationResponse

-- | Create a value of <a>DescribeConfigurationResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:DescribeConfigurationResponse'</a>,
--   <a>describeConfigurationResponse_creationTime</a> - The time when the
--   configuration was created.
--   
--   <a>$sel:state:DescribeConfigurationResponse'</a>,
--   <a>describeConfigurationResponse_state</a> - The state of the
--   configuration. The possible states are ACTIVE, DELETING, and
--   DELETE_FAILED.
--   
--   <a>$sel:kafkaVersions:DescribeConfigurationResponse'</a>,
--   <a>describeConfigurationResponse_kafkaVersions</a> - The versions of
--   Apache Kafka with which you can use this MSK configuration.
--   
--   <a>$sel:arn:DescribeConfiguration'</a>,
--   <a>describeConfigurationResponse_arn</a> - The Amazon Resource Name
--   (ARN) of the configuration.
--   
--   <a>$sel:latestRevision:DescribeConfigurationResponse'</a>,
--   <a>describeConfigurationResponse_latestRevision</a> - Latest revision
--   of the configuration.
--   
--   <a>$sel:name:DescribeConfigurationResponse'</a>,
--   <a>describeConfigurationResponse_name</a> - The name of the
--   configuration.
--   
--   <a>$sel:description:DescribeConfigurationResponse'</a>,
--   <a>describeConfigurationResponse_description</a> - The description of
--   the configuration.
--   
--   <a>$sel:httpStatus:DescribeConfigurationResponse'</a>,
--   <a>describeConfigurationResponse_httpStatus</a> - The response's http
--   status code.
newDescribeConfigurationResponse :: Int -> DescribeConfigurationResponse

-- | <i>See:</i> <a>newTagResource</a> smart constructor.
data TagResource
TagResource' :: Text -> HashMap Text Text -> TagResource

-- | Create a value of <a>TagResource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:TagResource'</a>, <a>tagResource_resourceArn</a> -
--   The Amazon Resource Name (ARN) that uniquely identifies the resource
--   that's associated with the tags.
--   
--   <a>$sel:tags:TagResource'</a>, <a>tagResource_tags</a> - The key-value
--   pair for the resource tag.
newTagResource :: Text -> TagResource

-- | <i>See:</i> <a>newTagResourceResponse</a> smart constructor.
data TagResourceResponse
TagResourceResponse' :: TagResourceResponse

-- | Create a value of <a>TagResourceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newTagResourceResponse :: TagResourceResponse

-- | <i>See:</i> <a>newListClusters</a> smart constructor.
data ListClusters
ListClusters' :: Maybe Text -> Maybe Text -> Maybe Natural -> ListClusters

-- | Create a value of <a>ListClusters</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clusterNameFilter:ListClusters'</a>,
--   <a>listClusters_clusterNameFilter</a> - Specify a prefix of the name
--   of the clusters that you want to list. The service lists all the
--   clusters whose names start with this prefix.
--   
--   <a>$sel:nextToken:ListClusters'</a>, <a>listClusters_nextToken</a> -
--   The paginated results marker. When the result of the operation is
--   truncated, the call returns NextToken in the response. To get the next
--   batch, provide this token in your next request.
--   
--   <a>$sel:maxResults:ListClusters'</a>, <a>listClusters_maxResults</a> -
--   The maximum number of results to return in the response. If there are
--   more results, the response includes a NextToken parameter.
newListClusters :: ListClusters

-- | <i>See:</i> <a>newListClustersResponse</a> smart constructor.
data ListClustersResponse
ListClustersResponse' :: Maybe Text -> Maybe [ClusterInfo] -> Int -> ListClustersResponse

-- | Create a value of <a>ListClustersResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListClusters'</a>,
--   <a>listClustersResponse_nextToken</a> - The paginated results marker.
--   When the result of a ListClusters operation is truncated, the call
--   returns NextToken in the response. To get another batch of clusters,
--   provide this token in your next request.
--   
--   <a>$sel:clusterInfoList:ListClustersResponse'</a>,
--   <a>listClustersResponse_clusterInfoList</a> - Information on each of
--   the MSK clusters in the response.
--   
--   <a>$sel:httpStatus:ListClustersResponse'</a>,
--   <a>listClustersResponse_httpStatus</a> - The response's http status
--   code.
newListClustersResponse :: Int -> ListClustersResponse

-- | <i>See:</i> <a>newUntagResource</a> smart constructor.
data UntagResource
UntagResource' :: [Text] -> Text -> UntagResource

-- | Create a value of <a>UntagResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tagKeys:UntagResource'</a>, <a>untagResource_tagKeys</a> - Tag
--   keys must be unique for a given cluster. In addition, the following
--   restrictions apply:
--   
--   <ul>
--   <li>Each tag key must be unique. If you add a tag with a key that's
--   already in use, your new tag overwrites the existing key-value
--   pair.</li>
--   <li>You can't start a tag key with aws: because this prefix is
--   reserved for use by AWS. AWS creates tags that begin with this prefix
--   on your behalf, but you can't edit or delete them.</li>
--   <li>Tag keys must be between 1 and 128 Unicode characters in
--   length.</li>
--   <li>Tag keys must consist of the following characters: Unicode
--   letters, digits, white space, and the following special characters: _
--   . / = + - @.</li>
--   </ul>
--   
--   <a>$sel:resourceArn:UntagResource'</a>,
--   <a>untagResource_resourceArn</a> - The Amazon Resource Name (ARN) that
--   uniquely identifies the resource that's associated with the tags.
newUntagResource :: Text -> UntagResource

-- | <i>See:</i> <a>newUntagResourceResponse</a> smart constructor.
data UntagResourceResponse
UntagResourceResponse' :: UntagResourceResponse

-- | Create a value of <a>UntagResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newUntagResourceResponse :: UntagResourceResponse

-- | <i>See:</i> <a>newListClusterOperations</a> smart constructor.
data ListClusterOperations
ListClusterOperations' :: Maybe Text -> Maybe Natural -> Text -> ListClusterOperations

-- | Create a value of <a>ListClusterOperations</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListClusterOperations'</a>,
--   <a>listClusterOperations_nextToken</a> - The paginated results marker.
--   When the result of the operation is truncated, the call returns
--   NextToken in the response. To get the next batch, provide this token
--   in your next request.
--   
--   <a>$sel:maxResults:ListClusterOperations'</a>,
--   <a>listClusterOperations_maxResults</a> - The maximum number of
--   results to return in the response. If there are more results, the
--   response includes a NextToken parameter.
--   
--   <a>$sel:clusterArn:ListClusterOperations'</a>,
--   <a>listClusterOperations_clusterArn</a> - The Amazon Resource Name
--   (ARN) that uniquely identifies the cluster.
newListClusterOperations :: Text -> ListClusterOperations

-- | <i>See:</i> <a>newListClusterOperationsResponse</a> smart constructor.
data ListClusterOperationsResponse
ListClusterOperationsResponse' :: Maybe [ClusterOperationInfo] -> Maybe Text -> Int -> ListClusterOperationsResponse

-- | Create a value of <a>ListClusterOperationsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clusterOperationInfoList:ListClusterOperationsResponse'</a>,
--   <a>listClusterOperationsResponse_clusterOperationInfoList</a> - An
--   array of cluster operation information objects.
--   
--   <a>$sel:nextToken:ListClusterOperations'</a>,
--   <a>listClusterOperationsResponse_nextToken</a> - If the response of
--   ListClusterOperations is truncated, it returns a NextToken in the
--   response. This Nexttoken should be sent in the subsequent request to
--   ListClusterOperations.
--   
--   <a>$sel:httpStatus:ListClusterOperationsResponse'</a>,
--   <a>listClusterOperationsResponse_httpStatus</a> - The response's http
--   status code.
newListClusterOperationsResponse :: Int -> ListClusterOperationsResponse

-- | Disassociates sasl scram secrets to cluster.
--   
--   <i>See:</i> <a>newBatchDisassociateScramSecret</a> smart constructor.
data BatchDisassociateScramSecret
BatchDisassociateScramSecret' :: Text -> [Text] -> BatchDisassociateScramSecret

-- | Create a value of <a>BatchDisassociateScramSecret</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clusterArn:BatchDisassociateScramSecret'</a>,
--   <a>batchDisassociateScramSecret_clusterArn</a> - The Amazon Resource
--   Name (ARN) of the cluster to be updated.
--   
--   <a>$sel:secretArnList:BatchDisassociateScramSecret'</a>,
--   <a>batchDisassociateScramSecret_secretArnList</a> - List of AWS
--   Secrets Manager secret ARNs.
newBatchDisassociateScramSecret :: Text -> BatchDisassociateScramSecret

-- | <i>See:</i> <a>newBatchDisassociateScramSecretResponse</a> smart
--   constructor.
data BatchDisassociateScramSecretResponse
BatchDisassociateScramSecretResponse' :: Maybe Text -> Maybe [UnprocessedScramSecret] -> Int -> BatchDisassociateScramSecretResponse

-- | Create a value of <a>BatchDisassociateScramSecretResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clusterArn:BatchDisassociateScramSecret'</a>,
--   <a>batchDisassociateScramSecretResponse_clusterArn</a> - The Amazon
--   Resource Name (ARN) of the cluster.
--   
--   
--   <a>$sel:unprocessedScramSecrets:BatchDisassociateScramSecretResponse'</a>,
--   <a>batchDisassociateScramSecretResponse_unprocessedScramSecrets</a> -
--   List of errors when disassociating secrets to cluster.
--   
--   <a>$sel:httpStatus:BatchDisassociateScramSecretResponse'</a>,
--   <a>batchDisassociateScramSecretResponse_httpStatus</a> - The
--   response's http status code.
newBatchDisassociateScramSecretResponse :: Int -> BatchDisassociateScramSecretResponse

-- | <i>See:</i> <a>newDescribeConfigurationRevision</a> smart constructor.
data DescribeConfigurationRevision
DescribeConfigurationRevision' :: Integer -> Text -> DescribeConfigurationRevision

-- | Create a value of <a>DescribeConfigurationRevision</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:revision:DescribeConfigurationRevision'</a>,
--   <a>describeConfigurationRevision_revision</a> - A string that uniquely
--   identifies a revision of an MSK configuration.
--   
--   <a>$sel:arn:DescribeConfigurationRevision'</a>,
--   <a>describeConfigurationRevision_arn</a> - The Amazon Resource Name
--   (ARN) that uniquely identifies an MSK configuration and all of its
--   revisions.
newDescribeConfigurationRevision :: Integer -> Text -> DescribeConfigurationRevision

-- | <i>See:</i> <a>newDescribeConfigurationRevisionResponse</a> smart
--   constructor.
data DescribeConfigurationRevisionResponse
DescribeConfigurationRevisionResponse' :: Maybe POSIX -> Maybe Base64 -> Maybe Text -> Maybe Integer -> Maybe Text -> Int -> DescribeConfigurationRevisionResponse

-- | Create a value of <a>DescribeConfigurationRevisionResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:DescribeConfigurationRevisionResponse'</a>,
--   <a>describeConfigurationRevisionResponse_creationTime</a> - The time
--   when the configuration was created.
--   
--   <a>$sel:serverProperties:DescribeConfigurationRevisionResponse'</a>,
--   <a>describeConfigurationRevisionResponse_serverProperties</a> -
--   Contents of the server.properties file. When using the API, you must
--   ensure that the contents of the file are base64 encoded. When using
--   the AWS Management Console, the SDK, or the AWS CLI, the contents of
--   server.properties can be in plaintext.-- -- <i>Note:</i> This
--   <tt>Lens</tt> automatically encodes and decodes Base64 data. -- The
--   underlying isomorphism will encode to Base64 representation during --
--   serialisation, and decode from Base64 representation during
--   deserialisation. -- This <tt>Lens</tt> accepts and returns only raw
--   unencoded data.
--   
--   <a>$sel:arn:DescribeConfigurationRevision'</a>,
--   <a>describeConfigurationRevisionResponse_arn</a> - The Amazon Resource
--   Name (ARN) of the configuration.
--   
--   <a>$sel:revision:DescribeConfigurationRevision'</a>,
--   <a>describeConfigurationRevisionResponse_revision</a> - The revision
--   number.
--   
--   <a>$sel:description:DescribeConfigurationRevisionResponse'</a>,
--   <a>describeConfigurationRevisionResponse_description</a> - The
--   description of the configuration.
--   
--   <a>$sel:httpStatus:DescribeConfigurationRevisionResponse'</a>,
--   <a>describeConfigurationRevisionResponse_httpStatus</a> - The
--   response's http status code.
newDescribeConfigurationRevisionResponse :: Int -> DescribeConfigurationRevisionResponse

-- | <i>See:</i> <a>newDeleteConfiguration</a> smart constructor.
data DeleteConfiguration
DeleteConfiguration' :: Text -> DeleteConfiguration

-- | Create a value of <a>DeleteConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:DeleteConfiguration'</a>, <a>deleteConfiguration_arn</a> -
--   The Amazon Resource Name (ARN) that uniquely identifies an MSK
--   configuration.
newDeleteConfiguration :: Text -> DeleteConfiguration

-- | <i>See:</i> <a>newDeleteConfigurationResponse</a> smart constructor.
data DeleteConfigurationResponse
DeleteConfigurationResponse' :: Maybe ConfigurationState -> Maybe Text -> Int -> DeleteConfigurationResponse

-- | Create a value of <a>DeleteConfigurationResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:state:DeleteConfigurationResponse'</a>,
--   <a>deleteConfigurationResponse_state</a> - The state of the
--   configuration. The possible states are ACTIVE, DELETING, and
--   DELETE_FAILED.
--   
--   <a>$sel:arn:DeleteConfiguration'</a>,
--   <a>deleteConfigurationResponse_arn</a> - The Amazon Resource Name
--   (ARN) that uniquely identifies an MSK configuration.
--   
--   <a>$sel:httpStatus:DeleteConfigurationResponse'</a>,
--   <a>deleteConfigurationResponse_httpStatus</a> - The response's http
--   status code.
newDeleteConfigurationResponse :: Int -> DeleteConfigurationResponse

-- | <i>See:</i> <a>newUpdateConfiguration</a> smart constructor.
data UpdateConfiguration
UpdateConfiguration' :: Maybe Text -> Text -> Base64 -> UpdateConfiguration

-- | Create a value of <a>UpdateConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:description:UpdateConfiguration'</a>,
--   <a>updateConfiguration_description</a> - The description of the
--   configuration revision.
--   
--   <a>$sel:arn:UpdateConfiguration'</a>, <a>updateConfiguration_arn</a> -
--   The Amazon Resource Name (ARN) of the configuration.
--   
--   <a>$sel:serverProperties:UpdateConfiguration'</a>,
--   <a>updateConfiguration_serverProperties</a> - Contents of the
--   server.properties file. When using the API, you must ensure that the
--   contents of the file are base64 encoded. When using the AWS Management
--   Console, the SDK, or the AWS CLI, the contents of server.properties
--   can be in plaintext.-- -- <i>Note:</i> This <tt>Lens</tt>
--   automatically encodes and decodes Base64 data. -- The underlying
--   isomorphism will encode to Base64 representation during --
--   serialisation, and decode from Base64 representation during
--   deserialisation. -- This <tt>Lens</tt> accepts and returns only raw
--   unencoded data.
newUpdateConfiguration :: Text -> ByteString -> UpdateConfiguration

-- | <i>See:</i> <a>newUpdateConfigurationResponse</a> smart constructor.
data UpdateConfigurationResponse
UpdateConfigurationResponse' :: Maybe Text -> Maybe ConfigurationRevision -> Int -> UpdateConfigurationResponse

-- | Create a value of <a>UpdateConfigurationResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:UpdateConfiguration'</a>,
--   <a>updateConfigurationResponse_arn</a> - The Amazon Resource Name
--   (ARN) of the configuration.
--   
--   <a>$sel:latestRevision:UpdateConfigurationResponse'</a>,
--   <a>updateConfigurationResponse_latestRevision</a> - Latest revision of
--   the configuration.
--   
--   <a>$sel:httpStatus:UpdateConfigurationResponse'</a>,
--   <a>updateConfigurationResponse_httpStatus</a> - The response's http
--   status code.
newUpdateConfigurationResponse :: Int -> UpdateConfigurationResponse

-- | <i>See:</i> <a>newListNodes</a> smart constructor.
data ListNodes
ListNodes' :: Maybe Text -> Maybe Natural -> Text -> ListNodes

-- | Create a value of <a>ListNodes</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListNodes'</a>, <a>listNodes_nextToken</a> - The
--   paginated results marker. When the result of the operation is
--   truncated, the call returns NextToken in the response. To get the next
--   batch, provide this token in your next request.
--   
--   <a>$sel:maxResults:ListNodes'</a>, <a>listNodes_maxResults</a> - The
--   maximum number of results to return in the response. If there are more
--   results, the response includes a NextToken parameter.
--   
--   <a>$sel:clusterArn:ListNodes'</a>, <a>listNodes_clusterArn</a> - The
--   Amazon Resource Name (ARN) that uniquely identifies the cluster.
newListNodes :: Text -> ListNodes

-- | <i>See:</i> <a>newListNodesResponse</a> smart constructor.
data ListNodesResponse
ListNodesResponse' :: Maybe [NodeInfo] -> Maybe Text -> Int -> ListNodesResponse

-- | Create a value of <a>ListNodesResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nodeInfoList:ListNodesResponse'</a>,
--   <a>listNodesResponse_nodeInfoList</a> - List containing a NodeInfo
--   object.
--   
--   <a>$sel:nextToken:ListNodes'</a>, <a>listNodesResponse_nextToken</a> -
--   The paginated results marker. When the result of a ListNodes operation
--   is truncated, the call returns NextToken in the response. To get
--   another batch of nodes, provide this token in your next request.
--   
--   <a>$sel:httpStatus:ListNodesResponse'</a>,
--   <a>listNodesResponse_httpStatus</a> - The response's http status code.
newListNodesResponse :: Int -> ListNodesResponse

-- | <i>See:</i> <a>newListScramSecrets</a> smart constructor.
data ListScramSecrets
ListScramSecrets' :: Maybe Text -> Maybe Natural -> Text -> ListScramSecrets

-- | Create a value of <a>ListScramSecrets</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListScramSecrets'</a>,
--   <a>listScramSecrets_nextToken</a> - The nextToken of the query.
--   
--   <a>$sel:maxResults:ListScramSecrets'</a>,
--   <a>listScramSecrets_maxResults</a> - The maxResults of the query.
--   
--   <a>$sel:clusterArn:ListScramSecrets'</a>,
--   <a>listScramSecrets_clusterArn</a> - The arn of the cluster.
newListScramSecrets :: Text -> ListScramSecrets

-- | <i>See:</i> <a>newListScramSecretsResponse</a> smart constructor.
data ListScramSecretsResponse
ListScramSecretsResponse' :: Maybe Text -> Maybe [Text] -> Int -> ListScramSecretsResponse

-- | Create a value of <a>ListScramSecretsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListScramSecrets'</a>,
--   <a>listScramSecretsResponse_nextToken</a> - Paginated results marker.
--   
--   <a>$sel:secretArnList:ListScramSecretsResponse'</a>,
--   <a>listScramSecretsResponse_secretArnList</a> - The list of scram
--   secrets associated with the cluster.
--   
--   <a>$sel:httpStatus:ListScramSecretsResponse'</a>,
--   <a>listScramSecretsResponse_httpStatus</a> - The response's http
--   status code.
newListScramSecretsResponse :: Int -> ListScramSecretsResponse

-- | The distribution of broker nodes across Availability Zones. This is an
--   optional parameter. If you don't specify it, Amazon MSK gives it the
--   value DEFAULT. You can also explicitly set this parameter to the value
--   DEFAULT. No other values are currently allowed.
--   
--   Amazon MSK distributes the broker nodes evenly across the Availability
--   Zones that correspond to the subnets you provide when you create the
--   cluster.
newtype BrokerAZDistribution
BrokerAZDistribution' :: Text -> BrokerAZDistribution
[fromBrokerAZDistribution] :: BrokerAZDistribution -> Text
pattern BrokerAZDistribution_DEFAULT :: BrokerAZDistribution

-- | Client-broker encryption in transit setting.
newtype ClientBroker
ClientBroker' :: Text -> ClientBroker
[fromClientBroker] :: ClientBroker -> Text
pattern ClientBroker_PLAINTEXT :: ClientBroker
pattern ClientBroker_TLS :: ClientBroker
pattern ClientBroker_TLS_PLAINTEXT :: ClientBroker

-- | The state of a Kafka cluster.
newtype ClusterState
ClusterState' :: Text -> ClusterState
[fromClusterState] :: ClusterState -> Text
pattern ClusterState_ACTIVE :: ClusterState
pattern ClusterState_CREATING :: ClusterState
pattern ClusterState_DELETING :: ClusterState
pattern ClusterState_FAILED :: ClusterState
pattern ClusterState_HEALING :: ClusterState
pattern ClusterState_MAINTENANCE :: ClusterState
pattern ClusterState_REBOOTING_BROKER :: ClusterState
pattern ClusterState_UPDATING :: ClusterState

-- | The state of a configuration.
newtype ConfigurationState
ConfigurationState' :: Text -> ConfigurationState
[fromConfigurationState] :: ConfigurationState -> Text
pattern ConfigurationState_ACTIVE :: ConfigurationState
pattern ConfigurationState_DELETE_FAILED :: ConfigurationState
pattern ConfigurationState_DELETING :: ConfigurationState

-- | Specifies which metrics are gathered for the MSK cluster. This
--   property has the following possible values: DEFAULT, PER_BROKER,
--   PER_TOPIC_PER_BROKER, and PER_TOPIC_PER_PARTITION. For a list of the
--   metrics associated with each of these levels of monitoring, see
--   <a>Monitoring</a>.
newtype EnhancedMonitoring
EnhancedMonitoring' :: Text -> EnhancedMonitoring
[fromEnhancedMonitoring] :: EnhancedMonitoring -> Text
pattern EnhancedMonitoring_DEFAULT :: EnhancedMonitoring
pattern EnhancedMonitoring_PER_BROKER :: EnhancedMonitoring
pattern EnhancedMonitoring_PER_TOPIC_PER_BROKER :: EnhancedMonitoring
pattern EnhancedMonitoring_PER_TOPIC_PER_PARTITION :: EnhancedMonitoring
newtype KafkaVersionStatus
KafkaVersionStatus' :: Text -> KafkaVersionStatus
[fromKafkaVersionStatus] :: KafkaVersionStatus -> Text
pattern KafkaVersionStatus_ACTIVE :: KafkaVersionStatus
pattern KafkaVersionStatus_DEPRECATED :: KafkaVersionStatus

-- | The broker or Zookeeper node.
newtype NodeType
NodeType' :: Text -> NodeType
[fromNodeType] :: NodeType -> Text
pattern NodeType_BROKER :: NodeType

-- | Specifies the EBS volume upgrade information. The broker identifier
--   must be set to the keyword ALL. This means the changes apply to all
--   the brokers in the cluster.
--   
--   <i>See:</i> <a>newBrokerEBSVolumeInfo</a> smart constructor.
data BrokerEBSVolumeInfo
BrokerEBSVolumeInfo' :: Int -> Text -> BrokerEBSVolumeInfo

-- | Create a value of <a>BrokerEBSVolumeInfo</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:volumeSizeGB:BrokerEBSVolumeInfo'</a>,
--   <a>brokerEBSVolumeInfo_volumeSizeGB</a> - Size of the EBS volume to
--   update.
--   
--   <a>$sel:kafkaBrokerNodeId:BrokerEBSVolumeInfo'</a>,
--   <a>brokerEBSVolumeInfo_kafkaBrokerNodeId</a> - The ID of the broker to
--   update.
newBrokerEBSVolumeInfo :: Int -> Text -> BrokerEBSVolumeInfo

-- | <i>See:</i> <a>newBrokerLogs</a> smart constructor.
data BrokerLogs
BrokerLogs' :: Maybe CloudWatchLogs -> Maybe Firehose -> Maybe S3 -> BrokerLogs

-- | Create a value of <a>BrokerLogs</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cloudWatchLogs:BrokerLogs'</a>,
--   <a>brokerLogs_cloudWatchLogs</a> - Undocumented member.
--   
--   <a>$sel:firehose:BrokerLogs'</a>, <a>brokerLogs_firehose</a> -
--   Undocumented member.
--   
--   <a>$sel:s3:BrokerLogs'</a>, <a>brokerLogs_s3</a> - Undocumented
--   member.
newBrokerLogs :: BrokerLogs

-- | Describes the setup to be used for Kafka broker nodes in the cluster.
--   
--   <i>See:</i> <a>newBrokerNodeGroupInfo</a> smart constructor.
data BrokerNodeGroupInfo
BrokerNodeGroupInfo' :: Maybe StorageInfo -> Maybe BrokerAZDistribution -> Maybe [Text] -> [Text] -> Text -> BrokerNodeGroupInfo

-- | Create a value of <a>BrokerNodeGroupInfo</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:storageInfo:BrokerNodeGroupInfo'</a>,
--   <a>brokerNodeGroupInfo_storageInfo</a> - Contains information about
--   storage volumes attached to MSK broker nodes.
--   
--   <a>$sel:brokerAZDistribution:BrokerNodeGroupInfo'</a>,
--   <a>brokerNodeGroupInfo_brokerAZDistribution</a> - The distribution of
--   broker nodes across Availability Zones. This is an optional parameter.
--   If you don't specify it, Amazon MSK gives it the value DEFAULT. You
--   can also explicitly set this parameter to the value DEFAULT. No other
--   values are currently allowed.
--   
--   Amazon MSK distributes the broker nodes evenly across the Availability
--   Zones that correspond to the subnets you provide when you create the
--   cluster.
--   
--   <a>$sel:securityGroups:BrokerNodeGroupInfo'</a>,
--   <a>brokerNodeGroupInfo_securityGroups</a> - The AWS security groups to
--   associate with the elastic network interfaces in order to specify who
--   can connect to and communicate with the Amazon MSK cluster. If you
--   don't specify a security group, Amazon MSK uses the default security
--   group associated with the VPC.
--   
--   <a>$sel:clientSubnets:BrokerNodeGroupInfo'</a>,
--   <a>brokerNodeGroupInfo_clientSubnets</a> - The list of subnets to
--   connect to in the client virtual private cloud (VPC). AWS creates
--   elastic network interfaces inside these subnets. Client applications
--   use elastic network interfaces to produce and consume data. Client
--   subnets can't be in Availability Zone us-east-1e.
--   
--   <a>$sel:instanceType:BrokerNodeGroupInfo'</a>,
--   <a>brokerNodeGroupInfo_instanceType</a> - The type of Amazon EC2
--   instances to use for Kafka brokers. The following instance types are
--   allowed: kafka.m5.large, kafka.m5.xlarge, kafka.m5.2xlarge,
--   kafka.m5.4xlarge, kafka.m5.12xlarge, and kafka.m5.24xlarge.
newBrokerNodeGroupInfo :: Text -> BrokerNodeGroupInfo

-- | BrokerNodeInfo
--   
--   <i>See:</i> <a>newBrokerNodeInfo</a> smart constructor.
data BrokerNodeInfo
BrokerNodeInfo' :: Maybe BrokerSoftwareInfo -> Maybe Text -> Maybe Text -> Maybe [Text] -> Maybe Text -> Maybe Double -> BrokerNodeInfo

-- | Create a value of <a>BrokerNodeInfo</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:currentBrokerSoftwareInfo:BrokerNodeInfo'</a>,
--   <a>brokerNodeInfo_currentBrokerSoftwareInfo</a> - Information about
--   the version of software currently deployed on the Kafka brokers in the
--   cluster.
--   
--   <a>$sel:clientSubnet:BrokerNodeInfo'</a>,
--   <a>brokerNodeInfo_clientSubnet</a> - The client subnet to which this
--   broker node belongs.
--   
--   <a>$sel:attachedENIId:BrokerNodeInfo'</a>,
--   <a>brokerNodeInfo_attachedENIId</a> - The attached elastic network
--   interface of the broker.
--   
--   <a>$sel:endpoints:BrokerNodeInfo'</a>, <a>brokerNodeInfo_endpoints</a>
--   - Endpoints for accessing the broker.
--   
--   <a>$sel:clientVpcIpAddress:BrokerNodeInfo'</a>,
--   <a>brokerNodeInfo_clientVpcIpAddress</a> - The virtual private cloud
--   (VPC) of the client.
--   
--   <a>$sel:brokerId:BrokerNodeInfo'</a>, <a>brokerNodeInfo_brokerId</a> -
--   The ID of the broker.
newBrokerNodeInfo :: BrokerNodeInfo

-- | Information about the current software installed on the cluster.
--   
--   <i>See:</i> <a>newBrokerSoftwareInfo</a> smart constructor.
data BrokerSoftwareInfo
BrokerSoftwareInfo' :: Maybe Integer -> Maybe Text -> Maybe Text -> BrokerSoftwareInfo

-- | Create a value of <a>BrokerSoftwareInfo</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:configurationRevision:BrokerSoftwareInfo'</a>,
--   <a>brokerSoftwareInfo_configurationRevision</a> - The revision of the
--   configuration to use. This field isn't visible in this preview
--   release.
--   
--   <a>$sel:kafkaVersion:BrokerSoftwareInfo'</a>,
--   <a>brokerSoftwareInfo_kafkaVersion</a> - The version of Apache Kafka.
--   
--   <a>$sel:configurationArn:BrokerSoftwareInfo'</a>,
--   <a>brokerSoftwareInfo_configurationArn</a> - The Amazon Resource Name
--   (ARN) of the configuration used for the cluster. This field isn't
--   visible in this preview release.
newBrokerSoftwareInfo :: BrokerSoftwareInfo

-- | Includes all client authentication information.
--   
--   <i>See:</i> <a>newClientAuthentication</a> smart constructor.
data ClientAuthentication
ClientAuthentication' :: Maybe Sasl -> Maybe Tls -> Maybe Unauthenticated -> ClientAuthentication

-- | Create a value of <a>ClientAuthentication</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sasl:ClientAuthentication'</a>,
--   <a>clientAuthentication_sasl</a> - Details for ClientAuthentication
--   using SASL.
--   
--   <a>$sel:tls:ClientAuthentication'</a>, <a>clientAuthentication_tls</a>
--   - Details for ClientAuthentication using TLS.
--   
--   <a>$sel:unauthenticated:ClientAuthentication'</a>,
--   <a>clientAuthentication_unauthenticated</a> - Contains information
--   about unauthenticated traffic to the cluster.
newClientAuthentication :: ClientAuthentication

-- | <i>See:</i> <a>newCloudWatchLogs</a> smart constructor.
data CloudWatchLogs
CloudWatchLogs' :: Maybe Text -> Bool -> CloudWatchLogs

-- | Create a value of <a>CloudWatchLogs</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:logGroup:CloudWatchLogs'</a>, <a>cloudWatchLogs_logGroup</a> -
--   Undocumented member.
--   
--   <a>$sel:enabled:CloudWatchLogs'</a>, <a>cloudWatchLogs_enabled</a> -
--   Undocumented member.
newCloudWatchLogs :: Bool -> CloudWatchLogs

-- | Returns information about a cluster.
--   
--   <i>See:</i> <a>newClusterInfo</a> smart constructor.
data ClusterInfo
ClusterInfo' :: Maybe POSIX -> Maybe Text -> Maybe ClusterState -> Maybe Text -> Maybe Int -> Maybe EnhancedMonitoring -> Maybe BrokerNodeGroupInfo -> Maybe OpenMonitoring -> Maybe BrokerSoftwareInfo -> Maybe Text -> Maybe StateInfo -> Maybe LoggingInfo -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe ClientAuthentication -> Maybe (HashMap Text Text) -> Maybe EncryptionInfo -> ClusterInfo

-- | Create a value of <a>ClusterInfo</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:ClusterInfo'</a>, <a>clusterInfo_creationTime</a>
--   - The time when the cluster was created.
--   
--   <a>$sel:activeOperationArn:ClusterInfo'</a>,
--   <a>clusterInfo_activeOperationArn</a> - Arn of active cluster
--   operation.
--   
--   <a>$sel:state:ClusterInfo'</a>, <a>clusterInfo_state</a> - The state
--   of the cluster. The possible states are ACTIVE, CREATING, DELETING,
--   FAILED, HEALING, MAINTENANCE, REBOOTING_BROKER, and UPDATING.
--   
--   <a>$sel:clusterArn:ClusterInfo'</a>, <a>clusterInfo_clusterArn</a> -
--   The Amazon Resource Name (ARN) that uniquely identifies the cluster.
--   
--   <a>$sel:numberOfBrokerNodes:ClusterInfo'</a>,
--   <a>clusterInfo_numberOfBrokerNodes</a> - The number of broker nodes in
--   the cluster.
--   
--   <a>$sel:enhancedMonitoring:ClusterInfo'</a>,
--   <a>clusterInfo_enhancedMonitoring</a> - Specifies which metrics are
--   gathered for the MSK cluster. This property has the following possible
--   values: DEFAULT, PER_BROKER, PER_TOPIC_PER_BROKER, and
--   PER_TOPIC_PER_PARTITION. For a list of the metrics associated with
--   each of these levels of monitoring, see <a>Monitoring</a>.
--   
--   <a>$sel:brokerNodeGroupInfo:ClusterInfo'</a>,
--   <a>clusterInfo_brokerNodeGroupInfo</a> - Information about the broker
--   nodes.
--   
--   <a>$sel:openMonitoring:ClusterInfo'</a>,
--   <a>clusterInfo_openMonitoring</a> - Settings for open monitoring using
--   Prometheus.
--   
--   <a>$sel:currentBrokerSoftwareInfo:ClusterInfo'</a>,
--   <a>clusterInfo_currentBrokerSoftwareInfo</a> - Information about the
--   version of software currently deployed on the Kafka brokers in the
--   cluster.
--   
--   <a>$sel:currentVersion:ClusterInfo'</a>,
--   <a>clusterInfo_currentVersion</a> - The current version of the MSK
--   cluster.
--   
--   <a>$sel:stateInfo:ClusterInfo'</a>, <a>clusterInfo_stateInfo</a> -
--   Undocumented member.
--   
--   <a>$sel:loggingInfo:ClusterInfo'</a>, <a>clusterInfo_loggingInfo</a> -
--   Undocumented member.
--   
--   <a>$sel:zookeeperConnectString:ClusterInfo'</a>,
--   <a>clusterInfo_zookeeperConnectString</a> - The connection string to
--   use to connect to the Apache ZooKeeper cluster.
--   
--   <a>$sel:clusterName:ClusterInfo'</a>, <a>clusterInfo_clusterName</a> -
--   The name of the cluster.
--   
--   <a>$sel:zookeeperConnectStringTls:ClusterInfo'</a>,
--   <a>clusterInfo_zookeeperConnectStringTls</a> - The connection string
--   to use to connect to zookeeper cluster on Tls port.
--   
--   <a>$sel:clientAuthentication:ClusterInfo'</a>,
--   <a>clusterInfo_clientAuthentication</a> - Includes all client
--   authentication information.
--   
--   <a>$sel:tags:ClusterInfo'</a>, <a>clusterInfo_tags</a> - Tags attached
--   to the cluster.
--   
--   <a>$sel:encryptionInfo:ClusterInfo'</a>,
--   <a>clusterInfo_encryptionInfo</a> - Includes all encryption-related
--   information.
newClusterInfo :: ClusterInfo

-- | Returns information about a cluster operation.
--   
--   <i>See:</i> <a>newClusterOperationInfo</a> smart constructor.
data ClusterOperationInfo
ClusterOperationInfo' :: Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe MutableClusterInfo -> Maybe MutableClusterInfo -> Maybe [ClusterOperationStep] -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe ErrorInfo -> ClusterOperationInfo

-- | Create a value of <a>ClusterOperationInfo</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:ClusterOperationInfo'</a>,
--   <a>clusterOperationInfo_creationTime</a> - The time that the operation
--   was created.
--   
--   <a>$sel:clusterArn:ClusterOperationInfo'</a>,
--   <a>clusterOperationInfo_clusterArn</a> - ARN of the cluster.
--   
--   <a>$sel:clientRequestId:ClusterOperationInfo'</a>,
--   <a>clusterOperationInfo_clientRequestId</a> - The ID of the API
--   request that triggered this operation.
--   
--   <a>$sel:targetClusterInfo:ClusterOperationInfo'</a>,
--   <a>clusterOperationInfo_targetClusterInfo</a> - Information about
--   cluster attributes after a cluster is updated.
--   
--   <a>$sel:sourceClusterInfo:ClusterOperationInfo'</a>,
--   <a>clusterOperationInfo_sourceClusterInfo</a> - Information about
--   cluster attributes before a cluster is updated.
--   
--   <a>$sel:operationSteps:ClusterOperationInfo'</a>,
--   <a>clusterOperationInfo_operationSteps</a> - Steps completed during
--   the operation.
--   
--   <a>$sel:operationState:ClusterOperationInfo'</a>,
--   <a>clusterOperationInfo_operationState</a> - State of the cluster
--   operation.
--   
--   <a>$sel:endTime:ClusterOperationInfo'</a>,
--   <a>clusterOperationInfo_endTime</a> - The time at which the operation
--   finished.
--   
--   <a>$sel:operationType:ClusterOperationInfo'</a>,
--   <a>clusterOperationInfo_operationType</a> - Type of the cluster
--   operation.
--   
--   <a>$sel:operationArn:ClusterOperationInfo'</a>,
--   <a>clusterOperationInfo_operationArn</a> - ARN of the cluster
--   operation.
--   
--   <a>$sel:errorInfo:ClusterOperationInfo'</a>,
--   <a>clusterOperationInfo_errorInfo</a> - Describes the error if the
--   operation fails.
newClusterOperationInfo :: ClusterOperationInfo

-- | Step taken during a cluster operation.
--   
--   <i>See:</i> <a>newClusterOperationStep</a> smart constructor.
data ClusterOperationStep
ClusterOperationStep' :: Maybe Text -> Maybe ClusterOperationStepInfo -> ClusterOperationStep

-- | Create a value of <a>ClusterOperationStep</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:stepName:ClusterOperationStep'</a>,
--   <a>clusterOperationStep_stepName</a> - The name of the step.
--   
--   <a>$sel:stepInfo:ClusterOperationStep'</a>,
--   <a>clusterOperationStep_stepInfo</a> - Information about the step and
--   its status.
newClusterOperationStep :: ClusterOperationStep

-- | State information about the operation step.
--   
--   <i>See:</i> <a>newClusterOperationStepInfo</a> smart constructor.
data ClusterOperationStepInfo
ClusterOperationStepInfo' :: Maybe Text -> ClusterOperationStepInfo

-- | Create a value of <a>ClusterOperationStepInfo</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:stepStatus:ClusterOperationStepInfo'</a>,
--   <a>clusterOperationStepInfo_stepStatus</a> - The steps current status.
newClusterOperationStepInfo :: ClusterOperationStepInfo

-- | Contains source Kafka versions and compatible target Kafka versions.
--   
--   <i>See:</i> <a>newCompatibleKafkaVersion</a> smart constructor.
data CompatibleKafkaVersion
CompatibleKafkaVersion' :: Maybe Text -> Maybe [Text] -> CompatibleKafkaVersion

-- | Create a value of <a>CompatibleKafkaVersion</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sourceVersion:CompatibleKafkaVersion'</a>,
--   <a>compatibleKafkaVersion_sourceVersion</a> - A Kafka version.
--   
--   <a>$sel:targetVersions:CompatibleKafkaVersion'</a>,
--   <a>compatibleKafkaVersion_targetVersions</a> - A list of Kafka
--   versions.
newCompatibleKafkaVersion :: CompatibleKafkaVersion

-- | Represents an MSK Configuration.
--   
--   <i>See:</i> <a>newConfiguration</a> smart constructor.
data Configuration
Configuration' :: Text -> ConfigurationRevision -> POSIX -> [Text] -> Text -> Text -> ConfigurationState -> Configuration

-- | Create a value of <a>Configuration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:description:Configuration'</a>,
--   <a>configuration_description</a> - The description of the
--   configuration.
--   
--   <a>$sel:latestRevision:Configuration'</a>,
--   <a>configuration_latestRevision</a> - Latest revision of the
--   configuration.
--   
--   <a>$sel:creationTime:Configuration'</a>,
--   <a>configuration_creationTime</a> - The time when the configuration
--   was created.
--   
--   <a>$sel:kafkaVersions:Configuration'</a>,
--   <a>configuration_kafkaVersions</a> - An array of the versions of
--   Apache Kafka with which you can use this MSK configuration. You can
--   use this configuration for an MSK cluster only if the Apache Kafka
--   version specified for the cluster appears in this array.
--   
--   <a>$sel:arn:Configuration'</a>, <a>configuration_arn</a> - The Amazon
--   Resource Name (ARN) of the configuration.
--   
--   <a>$sel:name:Configuration'</a>, <a>configuration_name</a> - The name
--   of the configuration.
--   
--   <a>$sel:state:Configuration'</a>, <a>configuration_state</a> - The
--   state of the configuration. The possible states are ACTIVE, DELETING,
--   and DELETE_FAILED.
newConfiguration :: Text -> ConfigurationRevision -> UTCTime -> Text -> Text -> ConfigurationState -> Configuration

-- | Specifies the configuration to use for the brokers.
--   
--   <i>See:</i> <a>newConfigurationInfo</a> smart constructor.
data ConfigurationInfo
ConfigurationInfo' :: Integer -> Text -> ConfigurationInfo

-- | Create a value of <a>ConfigurationInfo</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:revision:ConfigurationInfo'</a>,
--   <a>configurationInfo_revision</a> - The revision of the configuration
--   to use.
--   
--   <a>$sel:arn:ConfigurationInfo'</a>, <a>configurationInfo_arn</a> - ARN
--   of the configuration to use.
newConfigurationInfo :: Integer -> Text -> ConfigurationInfo

-- | Describes a configuration revision.
--   
--   <i>See:</i> <a>newConfigurationRevision</a> smart constructor.
data ConfigurationRevision
ConfigurationRevision' :: Maybe Text -> Integer -> POSIX -> ConfigurationRevision

-- | Create a value of <a>ConfigurationRevision</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:description:ConfigurationRevision'</a>,
--   <a>configurationRevision_description</a> - The description of the
--   configuration revision.
--   
--   <a>$sel:revision:ConfigurationRevision'</a>,
--   <a>configurationRevision_revision</a> - The revision number.
--   
--   <a>$sel:creationTime:ConfigurationRevision'</a>,
--   <a>configurationRevision_creationTime</a> - The time when the
--   configuration revision was created.
newConfigurationRevision :: Integer -> UTCTime -> ConfigurationRevision

-- | Contains information about the EBS storage volumes attached to Kafka
--   broker nodes.
--   
--   <i>See:</i> <a>newEBSStorageInfo</a> smart constructor.
data EBSStorageInfo
EBSStorageInfo' :: Maybe Natural -> EBSStorageInfo

-- | Create a value of <a>EBSStorageInfo</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:volumeSize:EBSStorageInfo'</a>,
--   <a>eBSStorageInfo_volumeSize</a> - The size in GiB of the EBS volume
--   for the data drive on each broker node.
newEBSStorageInfo :: EBSStorageInfo

-- | The data-volume encryption details.
--   
--   <i>See:</i> <a>newEncryptionAtRest</a> smart constructor.
data EncryptionAtRest
EncryptionAtRest' :: Text -> EncryptionAtRest

-- | Create a value of <a>EncryptionAtRest</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dataVolumeKMSKeyId:EncryptionAtRest'</a>,
--   <a>encryptionAtRest_dataVolumeKMSKeyId</a> - The ARN of the AWS KMS
--   key for encrypting data at rest. If you don't specify a KMS key, MSK
--   creates one for you and uses it.
newEncryptionAtRest :: Text -> EncryptionAtRest

-- | The settings for encrypting data in transit.
--   
--   <i>See:</i> <a>newEncryptionInTransit</a> smart constructor.
data EncryptionInTransit
EncryptionInTransit' :: Maybe ClientBroker -> Maybe Bool -> EncryptionInTransit

-- | Create a value of <a>EncryptionInTransit</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientBroker:EncryptionInTransit'</a>,
--   <a>encryptionInTransit_clientBroker</a> - Indicates the encryption
--   setting for data in transit between clients and brokers. The following
--   are the possible values.
--   
--   TLS means that client-broker communication is enabled with TLS only.
--   
--   TLS_PLAINTEXT means that client-broker communication is enabled for
--   both TLS-encrypted, as well as plaintext data.
--   
--   PLAINTEXT means that client-broker communication is enabled in
--   plaintext only.
--   
--   The default value is TLS_PLAINTEXT.
--   
--   <a>$sel:inCluster:EncryptionInTransit'</a>,
--   <a>encryptionInTransit_inCluster</a> - When set to true, it indicates
--   that data communication among the broker nodes of the cluster is
--   encrypted. When set to false, the communication happens in plaintext.
--   
--   The default value is true.
newEncryptionInTransit :: EncryptionInTransit

-- | Includes encryption-related information, such as the AWS KMS key used
--   for encrypting data at rest and whether you want MSK to encrypt your
--   data in transit.
--   
--   <i>See:</i> <a>newEncryptionInfo</a> smart constructor.
data EncryptionInfo
EncryptionInfo' :: Maybe EncryptionAtRest -> Maybe EncryptionInTransit -> EncryptionInfo

-- | Create a value of <a>EncryptionInfo</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:encryptionAtRest:EncryptionInfo'</a>,
--   <a>encryptionInfo_encryptionAtRest</a> - The data-volume encryption
--   details.
--   
--   <a>$sel:encryptionInTransit:EncryptionInfo'</a>,
--   <a>encryptionInfo_encryptionInTransit</a> - The details for encryption
--   in transit.
newEncryptionInfo :: EncryptionInfo

-- | Returns information about an error state of the cluster.
--   
--   <i>See:</i> <a>newErrorInfo</a> smart constructor.
data ErrorInfo
ErrorInfo' :: Maybe Text -> Maybe Text -> ErrorInfo

-- | Create a value of <a>ErrorInfo</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:errorString:ErrorInfo'</a>, <a>errorInfo_errorString</a> - An
--   optional field to provide more details about the error.
--   
--   <a>$sel:errorCode:ErrorInfo'</a>, <a>errorInfo_errorCode</a> - A
--   number describing the error programmatically.
newErrorInfo :: ErrorInfo

-- | <i>See:</i> <a>newFirehose</a> smart constructor.
data Firehose
Firehose' :: Maybe Text -> Bool -> Firehose

-- | Create a value of <a>Firehose</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deliveryStream:Firehose'</a>, <a>firehose_deliveryStream</a> -
--   Undocumented member.
--   
--   <a>$sel:enabled:Firehose'</a>, <a>firehose_enabled</a> - Undocumented
--   member.
newFirehose :: Bool -> Firehose

-- | Details for IAM access control.
--   
--   <i>See:</i> <a>newIam</a> smart constructor.
data Iam
Iam' :: Maybe Bool -> Iam

-- | Create a value of <a>Iam</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:enabled:Iam'</a>, <a>iam_enabled</a> - Indicates whether IAM
--   access control is enabled.
newIam :: Iam

-- | Indicates whether you want to enable or disable the JMX Exporter.
--   
--   <i>See:</i> <a>newJmxExporter</a> smart constructor.
data JmxExporter
JmxExporter' :: Bool -> JmxExporter

-- | Create a value of <a>JmxExporter</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:enabledInBroker:JmxExporter'</a>,
--   <a>jmxExporter_enabledInBroker</a> - Indicates whether you want to
--   enable or disable the JMX Exporter.
newJmxExporter :: Bool -> JmxExporter

-- | Indicates whether you want to enable or disable the JMX Exporter.
--   
--   <i>See:</i> <a>newJmxExporterInfo</a> smart constructor.
data JmxExporterInfo
JmxExporterInfo' :: Bool -> JmxExporterInfo

-- | Create a value of <a>JmxExporterInfo</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:enabledInBroker:JmxExporterInfo'</a>,
--   <a>jmxExporterInfo_enabledInBroker</a> - Indicates whether you want to
--   enable or disable the JMX Exporter.
newJmxExporterInfo :: Bool -> JmxExporterInfo

-- | <i>See:</i> <a>newKafkaVersion</a> smart constructor.
data KafkaVersion
KafkaVersion' :: Maybe KafkaVersionStatus -> Maybe Text -> KafkaVersion

-- | Create a value of <a>KafkaVersion</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:KafkaVersion'</a>, <a>kafkaVersion_status</a> -
--   Undocumented member.
--   
--   <a>$sel:version:KafkaVersion'</a>, <a>kafkaVersion_version</a> -
--   Undocumented member.
newKafkaVersion :: KafkaVersion

-- | <i>See:</i> <a>newLoggingInfo</a> smart constructor.
data LoggingInfo
LoggingInfo' :: BrokerLogs -> LoggingInfo

-- | Create a value of <a>LoggingInfo</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:brokerLogs:LoggingInfo'</a>, <a>loggingInfo_brokerLogs</a> -
--   Undocumented member.
newLoggingInfo :: BrokerLogs -> LoggingInfo

-- | Information about cluster attributes that can be updated via update
--   APIs.
--   
--   <i>See:</i> <a>newMutableClusterInfo</a> smart constructor.
data MutableClusterInfo
MutableClusterInfo' :: Maybe Int -> Maybe EnhancedMonitoring -> Maybe OpenMonitoring -> Maybe ConfigurationInfo -> Maybe Text -> Maybe Text -> Maybe LoggingInfo -> Maybe ClientAuthentication -> Maybe [BrokerEBSVolumeInfo] -> Maybe EncryptionInfo -> MutableClusterInfo

-- | Create a value of <a>MutableClusterInfo</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:numberOfBrokerNodes:MutableClusterInfo'</a>,
--   <a>mutableClusterInfo_numberOfBrokerNodes</a> - The number of broker
--   nodes in the cluster.
--   
--   <a>$sel:enhancedMonitoring:MutableClusterInfo'</a>,
--   <a>mutableClusterInfo_enhancedMonitoring</a> - Specifies which Apache
--   Kafka metrics Amazon MSK gathers and sends to Amazon CloudWatch for
--   this cluster.
--   
--   <a>$sel:openMonitoring:MutableClusterInfo'</a>,
--   <a>mutableClusterInfo_openMonitoring</a> - The settings for open
--   monitoring.
--   
--   <a>$sel:configurationInfo:MutableClusterInfo'</a>,
--   <a>mutableClusterInfo_configurationInfo</a> - Information about the
--   changes in the configuration of the brokers.
--   
--   <a>$sel:instanceType:MutableClusterInfo'</a>,
--   <a>mutableClusterInfo_instanceType</a> - Information about the Amazon
--   MSK broker type.
--   
--   <a>$sel:kafkaVersion:MutableClusterInfo'</a>,
--   <a>mutableClusterInfo_kafkaVersion</a> - The Kafka version.
--   
--   <a>$sel:loggingInfo:MutableClusterInfo'</a>,
--   <a>mutableClusterInfo_loggingInfo</a> - You can configure your MSK
--   cluster to send broker logs to different destination types. This is a
--   container for the configuration details related to broker logs.
--   
--   <a>$sel:clientAuthentication:MutableClusterInfo'</a>,
--   <a>mutableClusterInfo_clientAuthentication</a> - Includes all client
--   authentication information.
--   
--   <a>$sel:brokerEBSVolumeInfo:MutableClusterInfo'</a>,
--   <a>mutableClusterInfo_brokerEBSVolumeInfo</a> - Specifies the size of
--   the EBS volume and the ID of the associated broker.
--   
--   <a>$sel:encryptionInfo:MutableClusterInfo'</a>,
--   <a>mutableClusterInfo_encryptionInfo</a> - Includes all
--   encryption-related information.
newMutableClusterInfo :: MutableClusterInfo

-- | Indicates whether you want to enable or disable the Node Exporter.
--   
--   <i>See:</i> <a>newNodeExporter</a> smart constructor.
data NodeExporter
NodeExporter' :: Bool -> NodeExporter

-- | Create a value of <a>NodeExporter</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:enabledInBroker:NodeExporter'</a>,
--   <a>nodeExporter_enabledInBroker</a> - Indicates whether you want to
--   enable or disable the Node Exporter.
newNodeExporter :: Bool -> NodeExporter

-- | Indicates whether you want to enable or disable the Node Exporter.
--   
--   <i>See:</i> <a>newNodeExporterInfo</a> smart constructor.
data NodeExporterInfo
NodeExporterInfo' :: Bool -> NodeExporterInfo

-- | Create a value of <a>NodeExporterInfo</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:enabledInBroker:NodeExporterInfo'</a>,
--   <a>nodeExporterInfo_enabledInBroker</a> - Indicates whether you want
--   to enable or disable the Node Exporter.
newNodeExporterInfo :: Bool -> NodeExporterInfo

-- | The node information object.
--   
--   <i>See:</i> <a>newNodeInfo</a> smart constructor.
data NodeInfo
NodeInfo' :: Maybe Text -> Maybe Text -> Maybe ZookeeperNodeInfo -> Maybe Text -> Maybe BrokerNodeInfo -> Maybe NodeType -> NodeInfo

-- | Create a value of <a>NodeInfo</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:addedToClusterTime:NodeInfo'</a>,
--   <a>nodeInfo_addedToClusterTime</a> - The start time.
--   
--   <a>$sel:nodeARN:NodeInfo'</a>, <a>nodeInfo_nodeARN</a> - The Amazon
--   Resource Name (ARN) of the node.
--   
--   <a>$sel:zookeeperNodeInfo:NodeInfo'</a>,
--   <a>nodeInfo_zookeeperNodeInfo</a> - The ZookeeperNodeInfo.
--   
--   <a>$sel:instanceType:NodeInfo'</a>, <a>nodeInfo_instanceType</a> - The
--   instance type.
--   
--   <a>$sel:brokerNodeInfo:NodeInfo'</a>, <a>nodeInfo_brokerNodeInfo</a> -
--   The broker node info.
--   
--   <a>$sel:nodeType:NodeInfo'</a>, <a>nodeInfo_nodeType</a> - The node
--   type.
newNodeInfo :: NodeInfo

-- | JMX and Node monitoring for the MSK cluster.
--   
--   <i>See:</i> <a>newOpenMonitoring</a> smart constructor.
data OpenMonitoring
OpenMonitoring' :: Prometheus -> OpenMonitoring

-- | Create a value of <a>OpenMonitoring</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:prometheus:OpenMonitoring'</a>,
--   <a>openMonitoring_prometheus</a> - Prometheus settings.
newOpenMonitoring :: Prometheus -> OpenMonitoring

-- | JMX and Node monitoring for the MSK cluster.
--   
--   <i>See:</i> <a>newOpenMonitoringInfo</a> smart constructor.
data OpenMonitoringInfo
OpenMonitoringInfo' :: PrometheusInfo -> OpenMonitoringInfo

-- | Create a value of <a>OpenMonitoringInfo</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:prometheus:OpenMonitoringInfo'</a>,
--   <a>openMonitoringInfo_prometheus</a> - Prometheus settings.
newOpenMonitoringInfo :: PrometheusInfo -> OpenMonitoringInfo

-- | Prometheus settings.
--   
--   <i>See:</i> <a>newPrometheus</a> smart constructor.
data Prometheus
Prometheus' :: Maybe JmxExporter -> Maybe NodeExporter -> Prometheus

-- | Create a value of <a>Prometheus</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jmxExporter:Prometheus'</a>, <a>prometheus_jmxExporter</a> -
--   Indicates whether you want to enable or disable the JMX Exporter.
--   
--   <a>$sel:nodeExporter:Prometheus'</a>, <a>prometheus_nodeExporter</a> -
--   Indicates whether you want to enable or disable the Node Exporter.
newPrometheus :: Prometheus

-- | Prometheus settings.
--   
--   <i>See:</i> <a>newPrometheusInfo</a> smart constructor.
data PrometheusInfo
PrometheusInfo' :: Maybe JmxExporterInfo -> Maybe NodeExporterInfo -> PrometheusInfo

-- | Create a value of <a>PrometheusInfo</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jmxExporter:PrometheusInfo'</a>,
--   <a>prometheusInfo_jmxExporter</a> - Indicates whether you want to
--   enable or disable the JMX Exporter.
--   
--   <a>$sel:nodeExporter:PrometheusInfo'</a>,
--   <a>prometheusInfo_nodeExporter</a> - Indicates whether you want to
--   enable or disable the Node Exporter.
newPrometheusInfo :: PrometheusInfo

-- | <i>See:</i> <a>newS3</a> smart constructor.
data S3
S3' :: Maybe Text -> Maybe Text -> Bool -> S3

-- | Create a value of <a>S3</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:prefix:S3'</a>, <a>s3_prefix</a> - Undocumented member.
--   
--   <a>$sel:bucket:S3'</a>, <a>s3_bucket</a> - Undocumented member.
--   
--   <a>$sel:enabled:S3'</a>, <a>s3_enabled</a> - Undocumented member.
newS3 :: Bool -> S3

-- | Details for client authentication using SASL.
--   
--   <i>See:</i> <a>newSasl</a> smart constructor.
data Sasl
Sasl' :: Maybe Iam -> Maybe Scram -> Sasl

-- | Create a value of <a>Sasl</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:iam:Sasl'</a>, <a>sasl_iam</a> - Indicates whether IAM access
--   control is enabled.
--   
--   <a>$sel:scram:Sasl'</a>, <a>sasl_scram</a> - Details for SASL/SCRAM
--   client authentication.
newSasl :: Sasl

-- | Details for SASL/SCRAM client authentication.
--   
--   <i>See:</i> <a>newScram</a> smart constructor.
data Scram
Scram' :: Maybe Bool -> Scram

-- | Create a value of <a>Scram</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:enabled:Scram'</a>, <a>scram_enabled</a> - SASL/SCRAM
--   authentication is enabled or not.
newScram :: Scram

-- | <i>See:</i> <a>newStateInfo</a> smart constructor.
data StateInfo
StateInfo' :: Maybe Text -> Maybe Text -> StateInfo

-- | Create a value of <a>StateInfo</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:code:StateInfo'</a>, <a>stateInfo_code</a> - Undocumented
--   member.
--   
--   <a>$sel:message:StateInfo'</a>, <a>stateInfo_message</a> -
--   Undocumented member.
newStateInfo :: StateInfo

-- | Contains information about storage volumes attached to MSK broker
--   nodes.
--   
--   <i>See:</i> <a>newStorageInfo</a> smart constructor.
data StorageInfo
StorageInfo' :: Maybe EBSStorageInfo -> StorageInfo

-- | Create a value of <a>StorageInfo</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ebsStorageInfo:StorageInfo'</a>,
--   <a>storageInfo_ebsStorageInfo</a> - EBS volume information.
newStorageInfo :: StorageInfo

-- | Details for client authentication using TLS.
--   
--   <i>See:</i> <a>newTls</a> smart constructor.
data Tls
Tls' :: Maybe Bool -> Maybe [Text] -> Tls

-- | Create a value of <a>Tls</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:enabled:Tls'</a>, <a>tls_enabled</a> - Specifies whether you
--   want to enable or disable TLS authentication.
--   
--   <a>$sel:certificateAuthorityArnList:Tls'</a>,
--   <a>tls_certificateAuthorityArnList</a> - List of ACM Certificate
--   Authority ARNs.
newTls :: Tls

-- | <i>See:</i> <a>newUnauthenticated</a> smart constructor.
data Unauthenticated
Unauthenticated' :: Maybe Bool -> Unauthenticated

-- | Create a value of <a>Unauthenticated</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:enabled:Unauthenticated'</a>, <a>unauthenticated_enabled</a> -
--   Specifies whether you want to enable or disable unauthenticated
--   traffic to your cluster.
newUnauthenticated :: Unauthenticated

-- | Error info for scram secret associate/disassociate failure.
--   
--   <i>See:</i> <a>newUnprocessedScramSecret</a> smart constructor.
data UnprocessedScramSecret
UnprocessedScramSecret' :: Maybe Text -> Maybe Text -> Maybe Text -> UnprocessedScramSecret

-- | Create a value of <a>UnprocessedScramSecret</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:errorCode:UnprocessedScramSecret'</a>,
--   <a>unprocessedScramSecret_errorCode</a> - Error code for
--   associate/disassociate failure.
--   
--   <a>$sel:errorMessage:UnprocessedScramSecret'</a>,
--   <a>unprocessedScramSecret_errorMessage</a> - Error message for
--   associate/disassociate failure.
--   
--   <a>$sel:secretArn:UnprocessedScramSecret'</a>,
--   <a>unprocessedScramSecret_secretArn</a> - AWS Secrets Manager secret
--   ARN.
newUnprocessedScramSecret :: UnprocessedScramSecret

-- | Zookeeper node information.
--   
--   <i>See:</i> <a>newZookeeperNodeInfo</a> smart constructor.
data ZookeeperNodeInfo
ZookeeperNodeInfo' :: Maybe Text -> Maybe Text -> Maybe [Text] -> Maybe Text -> Maybe Double -> ZookeeperNodeInfo

-- | Create a value of <a>ZookeeperNodeInfo</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:zookeeperVersion:ZookeeperNodeInfo'</a>,
--   <a>zookeeperNodeInfo_zookeeperVersion</a> - The version of Zookeeper.
--   
--   <a>$sel:attachedENIId:ZookeeperNodeInfo'</a>,
--   <a>zookeeperNodeInfo_attachedENIId</a> - The attached elastic network
--   interface of the broker.
--   
--   <a>$sel:endpoints:ZookeeperNodeInfo'</a>,
--   <a>zookeeperNodeInfo_endpoints</a> - Endpoints for accessing the
--   ZooKeeper.
--   
--   <a>$sel:clientVpcIpAddress:ZookeeperNodeInfo'</a>,
--   <a>zookeeperNodeInfo_clientVpcIpAddress</a> - The virtual private
--   cloud (VPC) IP address of the client.
--   
--   <a>$sel:zookeeperId:ZookeeperNodeInfo'</a>,
--   <a>zookeeperNodeInfo_zookeeperId</a> - The role-specific ID for
--   Zookeeper.
newZookeeperNodeInfo :: ZookeeperNodeInfo
