-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/

@package libZSservicesZSamazonka-route53resolverZSamazonka-route53resolver
@version 2.0


module Network.AWS.Route53Resolver.Types.Action
newtype Action
Action' :: Text -> Action
[fromAction] :: Action -> Text
pattern Action_ALERT :: Action
pattern Action_ALLOW :: Action
pattern Action_BLOCK :: Action
instance Network.AWS.Data.XML.ToXML Network.AWS.Route53Resolver.Types.Action.Action
instance Network.AWS.Data.XML.FromXML Network.AWS.Route53Resolver.Types.Action.Action
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Route53Resolver.Types.Action.Action
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53Resolver.Types.Action.Action
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Route53Resolver.Types.Action.Action
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Route53Resolver.Types.Action.Action
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53Resolver.Types.Action.Action
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Route53Resolver.Types.Action.Action
instance Network.AWS.Data.Log.ToLog Network.AWS.Route53Resolver.Types.Action.Action
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Route53Resolver.Types.Action.Action
instance Network.AWS.Data.Text.ToText Network.AWS.Route53Resolver.Types.Action.Action
instance Network.AWS.Data.Text.FromText Network.AWS.Route53Resolver.Types.Action.Action
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.Types.Action.Action
instance Data.Hashable.Class.Hashable Network.AWS.Route53Resolver.Types.Action.Action
instance GHC.Generics.Generic Network.AWS.Route53Resolver.Types.Action.Action
instance GHC.Classes.Ord Network.AWS.Route53Resolver.Types.Action.Action
instance GHC.Classes.Eq Network.AWS.Route53Resolver.Types.Action.Action
instance GHC.Read.Read Network.AWS.Route53Resolver.Types.Action.Action
instance GHC.Show.Show Network.AWS.Route53Resolver.Types.Action.Action


module Network.AWS.Route53Resolver.Types.BlockOverrideDnsType
newtype BlockOverrideDnsType
BlockOverrideDnsType' :: Text -> BlockOverrideDnsType
[fromBlockOverrideDnsType] :: BlockOverrideDnsType -> Text
pattern BlockOverrideDnsType_CNAME :: BlockOverrideDnsType
instance Network.AWS.Data.XML.ToXML Network.AWS.Route53Resolver.Types.BlockOverrideDnsType.BlockOverrideDnsType
instance Network.AWS.Data.XML.FromXML Network.AWS.Route53Resolver.Types.BlockOverrideDnsType.BlockOverrideDnsType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Route53Resolver.Types.BlockOverrideDnsType.BlockOverrideDnsType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53Resolver.Types.BlockOverrideDnsType.BlockOverrideDnsType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Route53Resolver.Types.BlockOverrideDnsType.BlockOverrideDnsType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Route53Resolver.Types.BlockOverrideDnsType.BlockOverrideDnsType
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53Resolver.Types.BlockOverrideDnsType.BlockOverrideDnsType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Route53Resolver.Types.BlockOverrideDnsType.BlockOverrideDnsType
instance Network.AWS.Data.Log.ToLog Network.AWS.Route53Resolver.Types.BlockOverrideDnsType.BlockOverrideDnsType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Route53Resolver.Types.BlockOverrideDnsType.BlockOverrideDnsType
instance Network.AWS.Data.Text.ToText Network.AWS.Route53Resolver.Types.BlockOverrideDnsType.BlockOverrideDnsType
instance Network.AWS.Data.Text.FromText Network.AWS.Route53Resolver.Types.BlockOverrideDnsType.BlockOverrideDnsType
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.Types.BlockOverrideDnsType.BlockOverrideDnsType
instance Data.Hashable.Class.Hashable Network.AWS.Route53Resolver.Types.BlockOverrideDnsType.BlockOverrideDnsType
instance GHC.Generics.Generic Network.AWS.Route53Resolver.Types.BlockOverrideDnsType.BlockOverrideDnsType
instance GHC.Classes.Ord Network.AWS.Route53Resolver.Types.BlockOverrideDnsType.BlockOverrideDnsType
instance GHC.Classes.Eq Network.AWS.Route53Resolver.Types.BlockOverrideDnsType.BlockOverrideDnsType
instance GHC.Read.Read Network.AWS.Route53Resolver.Types.BlockOverrideDnsType.BlockOverrideDnsType
instance GHC.Show.Show Network.AWS.Route53Resolver.Types.BlockOverrideDnsType.BlockOverrideDnsType


module Network.AWS.Route53Resolver.Types.BlockResponse
newtype BlockResponse
BlockResponse' :: Text -> BlockResponse
[fromBlockResponse] :: BlockResponse -> Text
pattern BlockResponse_NODATA :: BlockResponse
pattern BlockResponse_NXDOMAIN :: BlockResponse
pattern BlockResponse_OVERRIDE :: BlockResponse
instance Network.AWS.Data.XML.ToXML Network.AWS.Route53Resolver.Types.BlockResponse.BlockResponse
instance Network.AWS.Data.XML.FromXML Network.AWS.Route53Resolver.Types.BlockResponse.BlockResponse
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Route53Resolver.Types.BlockResponse.BlockResponse
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53Resolver.Types.BlockResponse.BlockResponse
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Route53Resolver.Types.BlockResponse.BlockResponse
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Route53Resolver.Types.BlockResponse.BlockResponse
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53Resolver.Types.BlockResponse.BlockResponse
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Route53Resolver.Types.BlockResponse.BlockResponse
instance Network.AWS.Data.Log.ToLog Network.AWS.Route53Resolver.Types.BlockResponse.BlockResponse
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Route53Resolver.Types.BlockResponse.BlockResponse
instance Network.AWS.Data.Text.ToText Network.AWS.Route53Resolver.Types.BlockResponse.BlockResponse
instance Network.AWS.Data.Text.FromText Network.AWS.Route53Resolver.Types.BlockResponse.BlockResponse
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.Types.BlockResponse.BlockResponse
instance Data.Hashable.Class.Hashable Network.AWS.Route53Resolver.Types.BlockResponse.BlockResponse
instance GHC.Generics.Generic Network.AWS.Route53Resolver.Types.BlockResponse.BlockResponse
instance GHC.Classes.Ord Network.AWS.Route53Resolver.Types.BlockResponse.BlockResponse
instance GHC.Classes.Eq Network.AWS.Route53Resolver.Types.BlockResponse.BlockResponse
instance GHC.Read.Read Network.AWS.Route53Resolver.Types.BlockResponse.BlockResponse
instance GHC.Show.Show Network.AWS.Route53Resolver.Types.BlockResponse.BlockResponse


module Network.AWS.Route53Resolver.Types.Filter

-- | For Resolver list operations (<a>ListResolverEndpoints</a>,
--   <a>ListResolverRules</a>, <a>ListResolverRuleAssociations</a>,
--   <a>ListResolverQueryLogConfigs</a>,
--   <a>ListResolverQueryLogConfigAssociations</a>), and
--   <a>ListResolverDnssecConfigs</a>), an optional specification to return
--   a subset of objects.
--   
--   To filter objects, such as Resolver endpoints or Resolver rules, you
--   specify <tt>Name</tt> and <tt>Values</tt>. For example, to list only
--   inbound Resolver endpoints, specify <tt>Direction</tt> for
--   <tt>Name</tt> and specify <tt>INBOUND</tt> for <tt>Values</tt>.
--   
--   <i>See:</i> <a>newFilter</a> smart constructor.
data Filter
Filter' :: Maybe [Text] -> Maybe Text -> Filter

-- | When you're using a <tt>List</tt> operation and you want the operation
--   to return a subset of objects, such as Resolver endpoints or Resolver
--   rules, the value of the parameter that you want to use to filter
--   objects. For example, to list only inbound Resolver endpoints, specify
--   <tt>Direction</tt> for <tt>Name</tt> and specify <tt>INBOUND</tt> for
--   <tt>Values</tt>.
[$sel:values:Filter'] :: Filter -> Maybe [Text]

-- | The name of the parameter that you want to use to filter objects.
--   
--   The valid values for <tt>Name</tt> depend on the action that you're
--   including the filter in, <a>ListResolverEndpoints</a>,
--   <a>ListResolverRules</a>, <a>ListResolverRuleAssociations</a>,
--   <a>ListResolverQueryLogConfigs</a>, or
--   <a>ListResolverQueryLogConfigAssociations</a>.
--   
--   In early versions of Resolver, values for <tt>Name</tt> were listed as
--   uppercase, with underscore (_) delimiters. For example,
--   <tt>CreatorRequestId</tt> was originally listed as
--   <tt>CREATOR_REQUEST_ID</tt>. Uppercase values for <tt>Name</tt> are
--   still supported.
--   
--   <b>ListResolverEndpoints</b>
--   
--   Valid values for <tt>Name</tt> include the following:
--   
--   <ul>
--   <li><tt>CreatorRequestId</tt>: The value that you specified when you
--   created the Resolver endpoint.</li>
--   <li><tt>Direction</tt>: Whether you want to return inbound or outbound
--   Resolver endpoints. If you specify <tt>DIRECTION</tt> for
--   <tt>Name</tt>, specify <tt>INBOUND</tt> or <tt>OUTBOUND</tt> for
--   <tt>Values</tt>.</li>
--   <li><tt>HostVPCId</tt>: The ID of the VPC that inbound DNS queries
--   pass through on the way from your network to your VPCs in a region, or
--   the VPC that outbound queries pass through on the way from your VPCs
--   to your network. In a <a>CreateResolverEndpoint</a> request,
--   <tt>SubnetId</tt> indirectly identifies the VPC. In a
--   <a>GetResolverEndpoint</a> request, the VPC ID for a Resolver endpoint
--   is returned in the <tt>HostVPCId</tt> element.</li>
--   <li><tt>IpAddressCount</tt>: The number of IP addresses that you have
--   associated with the Resolver endpoint.</li>
--   <li><tt>Name</tt>: The name of the Resolver endpoint.</li>
--   <li><tt>SecurityGroupIds</tt>: The IDs of the VPC security groups that
--   you specified when you created the Resolver endpoint.</li>
--   <li><tt>Status</tt>: The status of the Resolver endpoint. If you
--   specify <tt>Status</tt> for <tt>Name</tt>, specify one of the
--   following status codes for <tt>Values</tt>: <tt>CREATING</tt>,
--   <tt>OPERATIONAL</tt>, <tt>UPDATING</tt>, <tt>AUTO_RECOVERING</tt>,
--   <tt>ACTION_NEEDED</tt>, or <tt>DELETING</tt>. For more information,
--   see <tt>Status</tt> in <a>ResolverEndpoint</a>.</li>
--   </ul>
--   
--   <b>ListResolverRules</b>
--   
--   Valid values for <tt>Name</tt> include the following:
--   
--   <ul>
--   <li><tt>CreatorRequestId</tt>: The value that you specified when you
--   created the Resolver rule.</li>
--   <li><tt>DomainName</tt>: The domain name for which Resolver is
--   forwarding DNS queries to your network. In the value that you specify
--   for <tt>Values</tt>, include a trailing dot (.) after the domain name.
--   For example, if the domain name is example.com, specify the following
--   value. Note the "." after <tt>com</tt>:<pre>example.com.</pre></li>
--   <li><tt>Name</tt>: The name of the Resolver rule.</li>
--   <li><tt>ResolverEndpointId</tt>: The ID of the Resolver endpoint that
--   the Resolver rule is associated with.You can filter on the Resolver
--   endpoint only for rules that have a value of <tt>FORWARD</tt> for
--   <tt>RuleType</tt>.</li>
--   <li><tt>Status</tt>: The status of the Resolver rule. If you specify
--   <tt>Status</tt> for <tt>Name</tt>, specify one of the following status
--   codes for <tt>Values</tt>: <tt>COMPLETE</tt>, <tt>DELETING</tt>,
--   <tt>UPDATING</tt>, or <tt>FAILED</tt>.</li>
--   <li><tt>Type</tt>: The type of the Resolver rule. If you specify
--   <tt>TYPE</tt> for <tt>Name</tt>, specify <tt>FORWARD</tt> or
--   <tt>SYSTEM</tt> for <tt>Values</tt>.</li>
--   </ul>
--   
--   <b>ListResolverRuleAssociations</b>
--   
--   Valid values for <tt>Name</tt> include the following:
--   
--   <ul>
--   <li><tt>Name</tt>: The name of the Resolver rule association.</li>
--   <li><tt>ResolverRuleId</tt>: The ID of the Resolver rule that is
--   associated with one or more VPCs.</li>
--   <li><tt>Status</tt>: The status of the Resolver rule association. If
--   you specify <tt>Status</tt> for <tt>Name</tt>, specify one of the
--   following status codes for <tt>Values</tt>: <tt>CREATING</tt>,
--   <tt>COMPLETE</tt>, <tt>DELETING</tt>, or <tt>FAILED</tt>.</li>
--   <li><tt>VPCId</tt>: The ID of the VPC that the Resolver rule is
--   associated with.</li>
--   </ul>
--   
--   <b>ListResolverQueryLogConfigs</b>
--   
--   Valid values for <tt>Name</tt> include the following:
--   
--   <ul>
--   <li><tt>Arn</tt>: The ARN for the query logging configuration.</li>
--   <li><tt>AssociationCount</tt>: The number of VPCs that are associated
--   with the query logging configuration.</li>
--   <li><tt>CreationTime</tt>: The date and time that the query logging
--   configuration was created, in Unix time format and Coordinated
--   Universal Time (UTC).</li>
--   <li><tt>CreatorRequestId</tt>: A unique string that identifies the
--   request that created the query logging configuration.</li>
--   <li><tt>Destination</tt>: The Amazon Web Services service that you
--   want to forward query logs to. Valid values include the
--   following:<ul><li><pre>S3</pre></li><li><pre>CloudWatchLogs</pre></li><li><pre>KinesisFirehose</pre></li></ul></li>
--   <li><tt>DestinationArn</tt>: The ARN of the location that Resolver is
--   sending query logs to. This value can be the ARN for an S3 bucket, a
--   CloudWatch Logs log group, or a Kinesis Data Firehose delivery
--   stream.</li>
--   <li><tt>Id</tt>: The ID of the query logging configuration</li>
--   <li><tt>Name</tt>: The name of the query logging configuration</li>
--   <li><tt>OwnerId</tt>: The Amazon Web Services account ID for the
--   account that created the query logging configuration.</li>
--   <li><tt>ShareStatus</tt>: An indication of whether the query logging
--   configuration is shared with other Amazon Web Services accounts, or
--   was shared with the current account by another Amazon Web Services
--   account. Valid values include: <tt>NOT_SHARED</tt>,
--   <tt>SHARED_WITH_ME</tt>, or <tt>SHARED_BY_ME</tt>.</li>
--   <li><tt>Status</tt>: The status of the query logging configuration. If
--   you specify <tt>Status</tt> for <tt>Name</tt>, specify the applicable
--   status code for <tt>Values</tt>: <tt>CREATING</tt>, <tt>CREATED</tt>,
--   <tt>DELETING</tt>, or <tt>FAILED</tt>. For more information, see
--   <a>Status</a>.</li>
--   </ul>
--   
--   <b>ListResolverQueryLogConfigAssociations</b>
--   
--   Valid values for <tt>Name</tt> include the following:
--   
--   <ul>
--   <li><tt>CreationTime</tt>: The date and time that the VPC was
--   associated with the query logging configuration, in Unix time format
--   and Coordinated Universal Time (UTC).</li>
--   <li><tt>Error</tt>: If the value of <tt>Status</tt> is
--   <tt>FAILED</tt>, specify the cause: <tt>DESTINATION_NOT_FOUND</tt> or
--   <tt>ACCESS_DENIED</tt>.</li>
--   <li><tt>Id</tt>: The ID of the query logging association.</li>
--   <li><tt>ResolverQueryLogConfigId</tt>: The ID of the query logging
--   configuration that a VPC is associated with.</li>
--   <li><tt>ResourceId</tt>: The ID of the Amazon VPC that is associated
--   with the query logging configuration.</li>
--   <li><tt>Status</tt>: The status of the query logging association. If
--   you specify <tt>Status</tt> for <tt>Name</tt>, specify the applicable
--   status code for <tt>Values</tt>: <tt>CREATING</tt>, <tt>CREATED</tt>,
--   <tt>DELETING</tt>, or <tt>FAILED</tt>. For more information, see
--   <a>Status</a>.</li>
--   </ul>
[$sel:name:Filter'] :: Filter -> Maybe Text

-- | Create a value of <a>Filter</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:values:Filter'</a>, <a>filter_values</a> - When you're using a
--   <tt>List</tt> operation and you want the operation to return a subset
--   of objects, such as Resolver endpoints or Resolver rules, the value of
--   the parameter that you want to use to filter objects. For example, to
--   list only inbound Resolver endpoints, specify <tt>Direction</tt> for
--   <tt>Name</tt> and specify <tt>INBOUND</tt> for <tt>Values</tt>.
--   
--   <a>$sel:name:Filter'</a>, <a>filter_name</a> - The name of the
--   parameter that you want to use to filter objects.
--   
--   The valid values for <tt>Name</tt> depend on the action that you're
--   including the filter in, <a>ListResolverEndpoints</a>,
--   <a>ListResolverRules</a>, <a>ListResolverRuleAssociations</a>,
--   <a>ListResolverQueryLogConfigs</a>, or
--   <a>ListResolverQueryLogConfigAssociations</a>.
--   
--   In early versions of Resolver, values for <tt>Name</tt> were listed as
--   uppercase, with underscore (_) delimiters. For example,
--   <tt>CreatorRequestId</tt> was originally listed as
--   <tt>CREATOR_REQUEST_ID</tt>. Uppercase values for <tt>Name</tt> are
--   still supported.
--   
--   <b>ListResolverEndpoints</b>
--   
--   Valid values for <tt>Name</tt> include the following:
--   
--   <ul>
--   <li><tt>CreatorRequestId</tt>: The value that you specified when you
--   created the Resolver endpoint.</li>
--   <li><tt>Direction</tt>: Whether you want to return inbound or outbound
--   Resolver endpoints. If you specify <tt>DIRECTION</tt> for
--   <tt>Name</tt>, specify <tt>INBOUND</tt> or <tt>OUTBOUND</tt> for
--   <tt>Values</tt>.</li>
--   <li><tt>HostVPCId</tt>: The ID of the VPC that inbound DNS queries
--   pass through on the way from your network to your VPCs in a region, or
--   the VPC that outbound queries pass through on the way from your VPCs
--   to your network. In a <a>CreateResolverEndpoint</a> request,
--   <tt>SubnetId</tt> indirectly identifies the VPC. In a
--   <a>GetResolverEndpoint</a> request, the VPC ID for a Resolver endpoint
--   is returned in the <tt>HostVPCId</tt> element.</li>
--   <li><tt>IpAddressCount</tt>: The number of IP addresses that you have
--   associated with the Resolver endpoint.</li>
--   <li><tt>Name</tt>: The name of the Resolver endpoint.</li>
--   <li><tt>SecurityGroupIds</tt>: The IDs of the VPC security groups that
--   you specified when you created the Resolver endpoint.</li>
--   <li><tt>Status</tt>: The status of the Resolver endpoint. If you
--   specify <tt>Status</tt> for <tt>Name</tt>, specify one of the
--   following status codes for <tt>Values</tt>: <tt>CREATING</tt>,
--   <tt>OPERATIONAL</tt>, <tt>UPDATING</tt>, <tt>AUTO_RECOVERING</tt>,
--   <tt>ACTION_NEEDED</tt>, or <tt>DELETING</tt>. For more information,
--   see <tt>Status</tt> in <a>ResolverEndpoint</a>.</li>
--   </ul>
--   
--   <b>ListResolverRules</b>
--   
--   Valid values for <tt>Name</tt> include the following:
--   
--   <ul>
--   <li><tt>CreatorRequestId</tt>: The value that you specified when you
--   created the Resolver rule.</li>
--   <li><tt>DomainName</tt>: The domain name for which Resolver is
--   forwarding DNS queries to your network. In the value that you specify
--   for <tt>Values</tt>, include a trailing dot (.) after the domain name.
--   For example, if the domain name is example.com, specify the following
--   value. Note the "." after <tt>com</tt>:<pre>example.com.</pre></li>
--   <li><tt>Name</tt>: The name of the Resolver rule.</li>
--   <li><tt>ResolverEndpointId</tt>: The ID of the Resolver endpoint that
--   the Resolver rule is associated with.You can filter on the Resolver
--   endpoint only for rules that have a value of <tt>FORWARD</tt> for
--   <tt>RuleType</tt>.</li>
--   <li><tt>Status</tt>: The status of the Resolver rule. If you specify
--   <tt>Status</tt> for <tt>Name</tt>, specify one of the following status
--   codes for <tt>Values</tt>: <tt>COMPLETE</tt>, <tt>DELETING</tt>,
--   <tt>UPDATING</tt>, or <tt>FAILED</tt>.</li>
--   <li><tt>Type</tt>: The type of the Resolver rule. If you specify
--   <tt>TYPE</tt> for <tt>Name</tt>, specify <tt>FORWARD</tt> or
--   <tt>SYSTEM</tt> for <tt>Values</tt>.</li>
--   </ul>
--   
--   <b>ListResolverRuleAssociations</b>
--   
--   Valid values for <tt>Name</tt> include the following:
--   
--   <ul>
--   <li><tt>Name</tt>: The name of the Resolver rule association.</li>
--   <li><tt>ResolverRuleId</tt>: The ID of the Resolver rule that is
--   associated with one or more VPCs.</li>
--   <li><tt>Status</tt>: The status of the Resolver rule association. If
--   you specify <tt>Status</tt> for <tt>Name</tt>, specify one of the
--   following status codes for <tt>Values</tt>: <tt>CREATING</tt>,
--   <tt>COMPLETE</tt>, <tt>DELETING</tt>, or <tt>FAILED</tt>.</li>
--   <li><tt>VPCId</tt>: The ID of the VPC that the Resolver rule is
--   associated with.</li>
--   </ul>
--   
--   <b>ListResolverQueryLogConfigs</b>
--   
--   Valid values for <tt>Name</tt> include the following:
--   
--   <ul>
--   <li><tt>Arn</tt>: The ARN for the query logging configuration.</li>
--   <li><tt>AssociationCount</tt>: The number of VPCs that are associated
--   with the query logging configuration.</li>
--   <li><tt>CreationTime</tt>: The date and time that the query logging
--   configuration was created, in Unix time format and Coordinated
--   Universal Time (UTC).</li>
--   <li><tt>CreatorRequestId</tt>: A unique string that identifies the
--   request that created the query logging configuration.</li>
--   <li><tt>Destination</tt>: The Amazon Web Services service that you
--   want to forward query logs to. Valid values include the
--   following:<ul><li><pre>S3</pre></li><li><pre>CloudWatchLogs</pre></li><li><pre>KinesisFirehose</pre></li></ul></li>
--   <li><tt>DestinationArn</tt>: The ARN of the location that Resolver is
--   sending query logs to. This value can be the ARN for an S3 bucket, a
--   CloudWatch Logs log group, or a Kinesis Data Firehose delivery
--   stream.</li>
--   <li><tt>Id</tt>: The ID of the query logging configuration</li>
--   <li><tt>Name</tt>: The name of the query logging configuration</li>
--   <li><tt>OwnerId</tt>: The Amazon Web Services account ID for the
--   account that created the query logging configuration.</li>
--   <li><tt>ShareStatus</tt>: An indication of whether the query logging
--   configuration is shared with other Amazon Web Services accounts, or
--   was shared with the current account by another Amazon Web Services
--   account. Valid values include: <tt>NOT_SHARED</tt>,
--   <tt>SHARED_WITH_ME</tt>, or <tt>SHARED_BY_ME</tt>.</li>
--   <li><tt>Status</tt>: The status of the query logging configuration. If
--   you specify <tt>Status</tt> for <tt>Name</tt>, specify the applicable
--   status code for <tt>Values</tt>: <tt>CREATING</tt>, <tt>CREATED</tt>,
--   <tt>DELETING</tt>, or <tt>FAILED</tt>. For more information, see
--   <a>Status</a>.</li>
--   </ul>
--   
--   <b>ListResolverQueryLogConfigAssociations</b>
--   
--   Valid values for <tt>Name</tt> include the following:
--   
--   <ul>
--   <li><tt>CreationTime</tt>: The date and time that the VPC was
--   associated with the query logging configuration, in Unix time format
--   and Coordinated Universal Time (UTC).</li>
--   <li><tt>Error</tt>: If the value of <tt>Status</tt> is
--   <tt>FAILED</tt>, specify the cause: <tt>DESTINATION_NOT_FOUND</tt> or
--   <tt>ACCESS_DENIED</tt>.</li>
--   <li><tt>Id</tt>: The ID of the query logging association.</li>
--   <li><tt>ResolverQueryLogConfigId</tt>: The ID of the query logging
--   configuration that a VPC is associated with.</li>
--   <li><tt>ResourceId</tt>: The ID of the Amazon VPC that is associated
--   with the query logging configuration.</li>
--   <li><tt>Status</tt>: The status of the query logging association. If
--   you specify <tt>Status</tt> for <tt>Name</tt>, specify the applicable
--   status code for <tt>Values</tt>: <tt>CREATING</tt>, <tt>CREATED</tt>,
--   <tt>DELETING</tt>, or <tt>FAILED</tt>. For more information, see
--   <a>Status</a>.</li>
--   </ul>
newFilter :: Filter

-- | When you're using a <tt>List</tt> operation and you want the operation
--   to return a subset of objects, such as Resolver endpoints or Resolver
--   rules, the value of the parameter that you want to use to filter
--   objects. For example, to list only inbound Resolver endpoints, specify
--   <tt>Direction</tt> for <tt>Name</tt> and specify <tt>INBOUND</tt> for
--   <tt>Values</tt>.
filter_values :: Lens' Filter (Maybe [Text])

-- | The name of the parameter that you want to use to filter objects.
--   
--   The valid values for <tt>Name</tt> depend on the action that you're
--   including the filter in, <a>ListResolverEndpoints</a>,
--   <a>ListResolverRules</a>, <a>ListResolverRuleAssociations</a>,
--   <a>ListResolverQueryLogConfigs</a>, or
--   <a>ListResolverQueryLogConfigAssociations</a>.
--   
--   In early versions of Resolver, values for <tt>Name</tt> were listed as
--   uppercase, with underscore (_) delimiters. For example,
--   <tt>CreatorRequestId</tt> was originally listed as
--   <tt>CREATOR_REQUEST_ID</tt>. Uppercase values for <tt>Name</tt> are
--   still supported.
--   
--   <b>ListResolverEndpoints</b>
--   
--   Valid values for <tt>Name</tt> include the following:
--   
--   <ul>
--   <li><tt>CreatorRequestId</tt>: The value that you specified when you
--   created the Resolver endpoint.</li>
--   <li><tt>Direction</tt>: Whether you want to return inbound or outbound
--   Resolver endpoints. If you specify <tt>DIRECTION</tt> for
--   <tt>Name</tt>, specify <tt>INBOUND</tt> or <tt>OUTBOUND</tt> for
--   <tt>Values</tt>.</li>
--   <li><tt>HostVPCId</tt>: The ID of the VPC that inbound DNS queries
--   pass through on the way from your network to your VPCs in a region, or
--   the VPC that outbound queries pass through on the way from your VPCs
--   to your network. In a <a>CreateResolverEndpoint</a> request,
--   <tt>SubnetId</tt> indirectly identifies the VPC. In a
--   <a>GetResolverEndpoint</a> request, the VPC ID for a Resolver endpoint
--   is returned in the <tt>HostVPCId</tt> element.</li>
--   <li><tt>IpAddressCount</tt>: The number of IP addresses that you have
--   associated with the Resolver endpoint.</li>
--   <li><tt>Name</tt>: The name of the Resolver endpoint.</li>
--   <li><tt>SecurityGroupIds</tt>: The IDs of the VPC security groups that
--   you specified when you created the Resolver endpoint.</li>
--   <li><tt>Status</tt>: The status of the Resolver endpoint. If you
--   specify <tt>Status</tt> for <tt>Name</tt>, specify one of the
--   following status codes for <tt>Values</tt>: <tt>CREATING</tt>,
--   <tt>OPERATIONAL</tt>, <tt>UPDATING</tt>, <tt>AUTO_RECOVERING</tt>,
--   <tt>ACTION_NEEDED</tt>, or <tt>DELETING</tt>. For more information,
--   see <tt>Status</tt> in <a>ResolverEndpoint</a>.</li>
--   </ul>
--   
--   <b>ListResolverRules</b>
--   
--   Valid values for <tt>Name</tt> include the following:
--   
--   <ul>
--   <li><tt>CreatorRequestId</tt>: The value that you specified when you
--   created the Resolver rule.</li>
--   <li><tt>DomainName</tt>: The domain name for which Resolver is
--   forwarding DNS queries to your network. In the value that you specify
--   for <tt>Values</tt>, include a trailing dot (.) after the domain name.
--   For example, if the domain name is example.com, specify the following
--   value. Note the "." after <tt>com</tt>:<pre>example.com.</pre></li>
--   <li><tt>Name</tt>: The name of the Resolver rule.</li>
--   <li><tt>ResolverEndpointId</tt>: The ID of the Resolver endpoint that
--   the Resolver rule is associated with.You can filter on the Resolver
--   endpoint only for rules that have a value of <tt>FORWARD</tt> for
--   <tt>RuleType</tt>.</li>
--   <li><tt>Status</tt>: The status of the Resolver rule. If you specify
--   <tt>Status</tt> for <tt>Name</tt>, specify one of the following status
--   codes for <tt>Values</tt>: <tt>COMPLETE</tt>, <tt>DELETING</tt>,
--   <tt>UPDATING</tt>, or <tt>FAILED</tt>.</li>
--   <li><tt>Type</tt>: The type of the Resolver rule. If you specify
--   <tt>TYPE</tt> for <tt>Name</tt>, specify <tt>FORWARD</tt> or
--   <tt>SYSTEM</tt> for <tt>Values</tt>.</li>
--   </ul>
--   
--   <b>ListResolverRuleAssociations</b>
--   
--   Valid values for <tt>Name</tt> include the following:
--   
--   <ul>
--   <li><tt>Name</tt>: The name of the Resolver rule association.</li>
--   <li><tt>ResolverRuleId</tt>: The ID of the Resolver rule that is
--   associated with one or more VPCs.</li>
--   <li><tt>Status</tt>: The status of the Resolver rule association. If
--   you specify <tt>Status</tt> for <tt>Name</tt>, specify one of the
--   following status codes for <tt>Values</tt>: <tt>CREATING</tt>,
--   <tt>COMPLETE</tt>, <tt>DELETING</tt>, or <tt>FAILED</tt>.</li>
--   <li><tt>VPCId</tt>: The ID of the VPC that the Resolver rule is
--   associated with.</li>
--   </ul>
--   
--   <b>ListResolverQueryLogConfigs</b>
--   
--   Valid values for <tt>Name</tt> include the following:
--   
--   <ul>
--   <li><tt>Arn</tt>: The ARN for the query logging configuration.</li>
--   <li><tt>AssociationCount</tt>: The number of VPCs that are associated
--   with the query logging configuration.</li>
--   <li><tt>CreationTime</tt>: The date and time that the query logging
--   configuration was created, in Unix time format and Coordinated
--   Universal Time (UTC).</li>
--   <li><tt>CreatorRequestId</tt>: A unique string that identifies the
--   request that created the query logging configuration.</li>
--   <li><tt>Destination</tt>: The Amazon Web Services service that you
--   want to forward query logs to. Valid values include the
--   following:<ul><li><pre>S3</pre></li><li><pre>CloudWatchLogs</pre></li><li><pre>KinesisFirehose</pre></li></ul></li>
--   <li><tt>DestinationArn</tt>: The ARN of the location that Resolver is
--   sending query logs to. This value can be the ARN for an S3 bucket, a
--   CloudWatch Logs log group, or a Kinesis Data Firehose delivery
--   stream.</li>
--   <li><tt>Id</tt>: The ID of the query logging configuration</li>
--   <li><tt>Name</tt>: The name of the query logging configuration</li>
--   <li><tt>OwnerId</tt>: The Amazon Web Services account ID for the
--   account that created the query logging configuration.</li>
--   <li><tt>ShareStatus</tt>: An indication of whether the query logging
--   configuration is shared with other Amazon Web Services accounts, or
--   was shared with the current account by another Amazon Web Services
--   account. Valid values include: <tt>NOT_SHARED</tt>,
--   <tt>SHARED_WITH_ME</tt>, or <tt>SHARED_BY_ME</tt>.</li>
--   <li><tt>Status</tt>: The status of the query logging configuration. If
--   you specify <tt>Status</tt> for <tt>Name</tt>, specify the applicable
--   status code for <tt>Values</tt>: <tt>CREATING</tt>, <tt>CREATED</tt>,
--   <tt>DELETING</tt>, or <tt>FAILED</tt>. For more information, see
--   <a>Status</a>.</li>
--   </ul>
--   
--   <b>ListResolverQueryLogConfigAssociations</b>
--   
--   Valid values for <tt>Name</tt> include the following:
--   
--   <ul>
--   <li><tt>CreationTime</tt>: The date and time that the VPC was
--   associated with the query logging configuration, in Unix time format
--   and Coordinated Universal Time (UTC).</li>
--   <li><tt>Error</tt>: If the value of <tt>Status</tt> is
--   <tt>FAILED</tt>, specify the cause: <tt>DESTINATION_NOT_FOUND</tt> or
--   <tt>ACCESS_DENIED</tt>.</li>
--   <li><tt>Id</tt>: The ID of the query logging association.</li>
--   <li><tt>ResolverQueryLogConfigId</tt>: The ID of the query logging
--   configuration that a VPC is associated with.</li>
--   <li><tt>ResourceId</tt>: The ID of the Amazon VPC that is associated
--   with the query logging configuration.</li>
--   <li><tt>Status</tt>: The status of the query logging association. If
--   you specify <tt>Status</tt> for <tt>Name</tt>, specify the applicable
--   status code for <tt>Values</tt>: <tt>CREATING</tt>, <tt>CREATED</tt>,
--   <tt>DELETING</tt>, or <tt>FAILED</tt>. For more information, see
--   <a>Status</a>.</li>
--   </ul>
filter_name :: Lens' Filter (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Route53Resolver.Types.Filter.Filter
instance GHC.Show.Show Network.AWS.Route53Resolver.Types.Filter.Filter
instance GHC.Read.Read Network.AWS.Route53Resolver.Types.Filter.Filter
instance GHC.Classes.Eq Network.AWS.Route53Resolver.Types.Filter.Filter
instance Data.Hashable.Class.Hashable Network.AWS.Route53Resolver.Types.Filter.Filter
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.Types.Filter.Filter
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53Resolver.Types.Filter.Filter


module Network.AWS.Route53Resolver.Types.FirewallDomainImportOperation
newtype FirewallDomainImportOperation
FirewallDomainImportOperation' :: Text -> FirewallDomainImportOperation
[fromFirewallDomainImportOperation] :: FirewallDomainImportOperation -> Text
pattern FirewallDomainImportOperation_REPLACE :: FirewallDomainImportOperation
instance Network.AWS.Data.XML.ToXML Network.AWS.Route53Resolver.Types.FirewallDomainImportOperation.FirewallDomainImportOperation
instance Network.AWS.Data.XML.FromXML Network.AWS.Route53Resolver.Types.FirewallDomainImportOperation.FirewallDomainImportOperation
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Route53Resolver.Types.FirewallDomainImportOperation.FirewallDomainImportOperation
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53Resolver.Types.FirewallDomainImportOperation.FirewallDomainImportOperation
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Route53Resolver.Types.FirewallDomainImportOperation.FirewallDomainImportOperation
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Route53Resolver.Types.FirewallDomainImportOperation.FirewallDomainImportOperation
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53Resolver.Types.FirewallDomainImportOperation.FirewallDomainImportOperation
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Route53Resolver.Types.FirewallDomainImportOperation.FirewallDomainImportOperation
instance Network.AWS.Data.Log.ToLog Network.AWS.Route53Resolver.Types.FirewallDomainImportOperation.FirewallDomainImportOperation
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Route53Resolver.Types.FirewallDomainImportOperation.FirewallDomainImportOperation
instance Network.AWS.Data.Text.ToText Network.AWS.Route53Resolver.Types.FirewallDomainImportOperation.FirewallDomainImportOperation
instance Network.AWS.Data.Text.FromText Network.AWS.Route53Resolver.Types.FirewallDomainImportOperation.FirewallDomainImportOperation
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.Types.FirewallDomainImportOperation.FirewallDomainImportOperation
instance Data.Hashable.Class.Hashable Network.AWS.Route53Resolver.Types.FirewallDomainImportOperation.FirewallDomainImportOperation
instance GHC.Generics.Generic Network.AWS.Route53Resolver.Types.FirewallDomainImportOperation.FirewallDomainImportOperation
instance GHC.Classes.Ord Network.AWS.Route53Resolver.Types.FirewallDomainImportOperation.FirewallDomainImportOperation
instance GHC.Classes.Eq Network.AWS.Route53Resolver.Types.FirewallDomainImportOperation.FirewallDomainImportOperation
instance GHC.Read.Read Network.AWS.Route53Resolver.Types.FirewallDomainImportOperation.FirewallDomainImportOperation
instance GHC.Show.Show Network.AWS.Route53Resolver.Types.FirewallDomainImportOperation.FirewallDomainImportOperation


module Network.AWS.Route53Resolver.Types.FirewallDomainListMetadata

-- | Minimal high-level information for a firewall domain list. The action
--   ListFirewallDomainLists returns an array of these objects.
--   
--   To retrieve full information for a firewall domain list, call
--   GetFirewallDomainList and ListFirewallDomains.
--   
--   <i>See:</i> <a>newFirewallDomainListMetadata</a> smart constructor.
data FirewallDomainListMetadata
FirewallDomainListMetadata' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> FirewallDomainListMetadata

-- | The Amazon Resource Name (ARN) of the firewall domain list metadata.
[$sel:arn:FirewallDomainListMetadata'] :: FirewallDomainListMetadata -> Maybe Text

-- | A unique string defined by you to identify the request. This allows
--   you to retry failed requests without the risk of running the operation
--   twice. This can be any unique string, for example, a timestamp.
[$sel:creatorRequestId:FirewallDomainListMetadata'] :: FirewallDomainListMetadata -> Maybe Text

-- | The owner of the list, used only for lists that are not managed by
--   you. For example, the managed domain list
--   <tt>AWSManagedDomainsMalwareDomainList</tt> has the managed owner name
--   <tt>Route 53 Resolver DNS Firewall</tt>.
[$sel:managedOwnerName:FirewallDomainListMetadata'] :: FirewallDomainListMetadata -> Maybe Text

-- | The name of the domain list.
[$sel:name:FirewallDomainListMetadata'] :: FirewallDomainListMetadata -> Maybe Text

-- | The ID of the domain list.
[$sel:id:FirewallDomainListMetadata'] :: FirewallDomainListMetadata -> Maybe Text

-- | Create a value of <a>FirewallDomainListMetadata</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:FirewallDomainListMetadata'</a>,
--   <a>firewallDomainListMetadata_arn</a> - The Amazon Resource Name (ARN)
--   of the firewall domain list metadata.
--   
--   <a>$sel:creatorRequestId:FirewallDomainListMetadata'</a>,
--   <a>firewallDomainListMetadata_creatorRequestId</a> - A unique string
--   defined by you to identify the request. This allows you to retry
--   failed requests without the risk of running the operation twice. This
--   can be any unique string, for example, a timestamp.
--   
--   <a>$sel:managedOwnerName:FirewallDomainListMetadata'</a>,
--   <a>firewallDomainListMetadata_managedOwnerName</a> - The owner of the
--   list, used only for lists that are not managed by you. For example,
--   the managed domain list <tt>AWSManagedDomainsMalwareDomainList</tt>
--   has the managed owner name <tt>Route 53 Resolver DNS Firewall</tt>.
--   
--   <a>$sel:name:FirewallDomainListMetadata'</a>,
--   <a>firewallDomainListMetadata_name</a> - The name of the domain list.
--   
--   <a>$sel:id:FirewallDomainListMetadata'</a>,
--   <a>firewallDomainListMetadata_id</a> - The ID of the domain list.
newFirewallDomainListMetadata :: FirewallDomainListMetadata

-- | The Amazon Resource Name (ARN) of the firewall domain list metadata.
firewallDomainListMetadata_arn :: Lens' FirewallDomainListMetadata (Maybe Text)

-- | A unique string defined by you to identify the request. This allows
--   you to retry failed requests without the risk of running the operation
--   twice. This can be any unique string, for example, a timestamp.
firewallDomainListMetadata_creatorRequestId :: Lens' FirewallDomainListMetadata (Maybe Text)

-- | The owner of the list, used only for lists that are not managed by
--   you. For example, the managed domain list
--   <tt>AWSManagedDomainsMalwareDomainList</tt> has the managed owner name
--   <tt>Route 53 Resolver DNS Firewall</tt>.
firewallDomainListMetadata_managedOwnerName :: Lens' FirewallDomainListMetadata (Maybe Text)

-- | The name of the domain list.
firewallDomainListMetadata_name :: Lens' FirewallDomainListMetadata (Maybe Text)

-- | The ID of the domain list.
firewallDomainListMetadata_id :: Lens' FirewallDomainListMetadata (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Route53Resolver.Types.FirewallDomainListMetadata.FirewallDomainListMetadata
instance GHC.Show.Show Network.AWS.Route53Resolver.Types.FirewallDomainListMetadata.FirewallDomainListMetadata
instance GHC.Read.Read Network.AWS.Route53Resolver.Types.FirewallDomainListMetadata.FirewallDomainListMetadata
instance GHC.Classes.Eq Network.AWS.Route53Resolver.Types.FirewallDomainListMetadata.FirewallDomainListMetadata
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Route53Resolver.Types.FirewallDomainListMetadata.FirewallDomainListMetadata
instance Data.Hashable.Class.Hashable Network.AWS.Route53Resolver.Types.FirewallDomainListMetadata.FirewallDomainListMetadata
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.Types.FirewallDomainListMetadata.FirewallDomainListMetadata


module Network.AWS.Route53Resolver.Types.FirewallDomainListStatus
newtype FirewallDomainListStatus
FirewallDomainListStatus' :: Text -> FirewallDomainListStatus
[fromFirewallDomainListStatus] :: FirewallDomainListStatus -> Text
pattern FirewallDomainListStatus_COMPLETE :: FirewallDomainListStatus
pattern FirewallDomainListStatus_COMPLETE_IMPORT_FAILED :: FirewallDomainListStatus
pattern FirewallDomainListStatus_DELETING :: FirewallDomainListStatus
pattern FirewallDomainListStatus_IMPORTING :: FirewallDomainListStatus
pattern FirewallDomainListStatus_UPDATING :: FirewallDomainListStatus
instance Network.AWS.Data.XML.ToXML Network.AWS.Route53Resolver.Types.FirewallDomainListStatus.FirewallDomainListStatus
instance Network.AWS.Data.XML.FromXML Network.AWS.Route53Resolver.Types.FirewallDomainListStatus.FirewallDomainListStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Route53Resolver.Types.FirewallDomainListStatus.FirewallDomainListStatus
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53Resolver.Types.FirewallDomainListStatus.FirewallDomainListStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Route53Resolver.Types.FirewallDomainListStatus.FirewallDomainListStatus
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Route53Resolver.Types.FirewallDomainListStatus.FirewallDomainListStatus
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53Resolver.Types.FirewallDomainListStatus.FirewallDomainListStatus
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Route53Resolver.Types.FirewallDomainListStatus.FirewallDomainListStatus
instance Network.AWS.Data.Log.ToLog Network.AWS.Route53Resolver.Types.FirewallDomainListStatus.FirewallDomainListStatus
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Route53Resolver.Types.FirewallDomainListStatus.FirewallDomainListStatus
instance Network.AWS.Data.Text.ToText Network.AWS.Route53Resolver.Types.FirewallDomainListStatus.FirewallDomainListStatus
instance Network.AWS.Data.Text.FromText Network.AWS.Route53Resolver.Types.FirewallDomainListStatus.FirewallDomainListStatus
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.Types.FirewallDomainListStatus.FirewallDomainListStatus
instance Data.Hashable.Class.Hashable Network.AWS.Route53Resolver.Types.FirewallDomainListStatus.FirewallDomainListStatus
instance GHC.Generics.Generic Network.AWS.Route53Resolver.Types.FirewallDomainListStatus.FirewallDomainListStatus
instance GHC.Classes.Ord Network.AWS.Route53Resolver.Types.FirewallDomainListStatus.FirewallDomainListStatus
instance GHC.Classes.Eq Network.AWS.Route53Resolver.Types.FirewallDomainListStatus.FirewallDomainListStatus
instance GHC.Read.Read Network.AWS.Route53Resolver.Types.FirewallDomainListStatus.FirewallDomainListStatus
instance GHC.Show.Show Network.AWS.Route53Resolver.Types.FirewallDomainListStatus.FirewallDomainListStatus


module Network.AWS.Route53Resolver.Types.FirewallDomainList

-- | High-level information about a list of firewall domains for use in a
--   FirewallRule. This is returned by GetFirewallDomainList.
--   
--   To retrieve the domains that are defined for this domain list, call
--   ListFirewallDomains.
--   
--   <i>See:</i> <a>newFirewallDomainList</a> smart constructor.
data FirewallDomainList
FirewallDomainList' :: Maybe Text -> Maybe FirewallDomainListStatus -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> FirewallDomainList

-- | The date and time that the domain list was created, in Unix time
--   format and Coordinated Universal Time (UTC).
[$sel:creationTime:FirewallDomainList'] :: FirewallDomainList -> Maybe Text

-- | The status of the domain list.
[$sel:status:FirewallDomainList'] :: FirewallDomainList -> Maybe FirewallDomainListStatus

-- | The Amazon Resource Name (ARN) of the firewall domain list.
[$sel:arn:FirewallDomainList'] :: FirewallDomainList -> Maybe Text

-- | A unique string defined by you to identify the request. This allows
--   you to retry failed requests without the risk of running the operation
--   twice. This can be any unique string, for example, a timestamp.
[$sel:creatorRequestId:FirewallDomainList'] :: FirewallDomainList -> Maybe Text

-- | The owner of the list, used only for lists that are not managed by
--   you. For example, the managed domain list
--   <tt>AWSManagedDomainsMalwareDomainList</tt> has the managed owner name
--   <tt>Route 53 Resolver DNS Firewall</tt>.
[$sel:managedOwnerName:FirewallDomainList'] :: FirewallDomainList -> Maybe Text

-- | The number of domain names that are specified in the domain list.
[$sel:domainCount:FirewallDomainList'] :: FirewallDomainList -> Maybe Int

-- | The date and time that the domain list was last modified, in Unix time
--   format and Coordinated Universal Time (UTC).
[$sel:modificationTime:FirewallDomainList'] :: FirewallDomainList -> Maybe Text

-- | Additional information about the status of the list, if available.
[$sel:statusMessage:FirewallDomainList'] :: FirewallDomainList -> Maybe Text

-- | The name of the domain list.
[$sel:name:FirewallDomainList'] :: FirewallDomainList -> Maybe Text

-- | The ID of the domain list.
[$sel:id:FirewallDomainList'] :: FirewallDomainList -> Maybe Text

-- | Create a value of <a>FirewallDomainList</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:FirewallDomainList'</a>,
--   <a>firewallDomainList_creationTime</a> - The date and time that the
--   domain list was created, in Unix time format and Coordinated Universal
--   Time (UTC).
--   
--   <a>$sel:status:FirewallDomainList'</a>,
--   <a>firewallDomainList_status</a> - The status of the domain list.
--   
--   <a>$sel:arn:FirewallDomainList'</a>, <a>firewallDomainList_arn</a> -
--   The Amazon Resource Name (ARN) of the firewall domain list.
--   
--   <a>$sel:creatorRequestId:FirewallDomainList'</a>,
--   <a>firewallDomainList_creatorRequestId</a> - A unique string defined
--   by you to identify the request. This allows you to retry failed
--   requests without the risk of running the operation twice. This can be
--   any unique string, for example, a timestamp.
--   
--   <a>$sel:managedOwnerName:FirewallDomainList'</a>,
--   <a>firewallDomainList_managedOwnerName</a> - The owner of the list,
--   used only for lists that are not managed by you. For example, the
--   managed domain list <tt>AWSManagedDomainsMalwareDomainList</tt> has
--   the managed owner name <tt>Route 53 Resolver DNS Firewall</tt>.
--   
--   <a>$sel:domainCount:FirewallDomainList'</a>,
--   <a>firewallDomainList_domainCount</a> - The number of domain names
--   that are specified in the domain list.
--   
--   <a>$sel:modificationTime:FirewallDomainList'</a>,
--   <a>firewallDomainList_modificationTime</a> - The date and time that
--   the domain list was last modified, in Unix time format and Coordinated
--   Universal Time (UTC).
--   
--   <a>$sel:statusMessage:FirewallDomainList'</a>,
--   <a>firewallDomainList_statusMessage</a> - Additional information about
--   the status of the list, if available.
--   
--   <a>$sel:name:FirewallDomainList'</a>, <a>firewallDomainList_name</a> -
--   The name of the domain list.
--   
--   <a>$sel:id:FirewallDomainList'</a>, <a>firewallDomainList_id</a> - The
--   ID of the domain list.
newFirewallDomainList :: FirewallDomainList

-- | The date and time that the domain list was created, in Unix time
--   format and Coordinated Universal Time (UTC).
firewallDomainList_creationTime :: Lens' FirewallDomainList (Maybe Text)

-- | The status of the domain list.
firewallDomainList_status :: Lens' FirewallDomainList (Maybe FirewallDomainListStatus)

-- | The Amazon Resource Name (ARN) of the firewall domain list.
firewallDomainList_arn :: Lens' FirewallDomainList (Maybe Text)

-- | A unique string defined by you to identify the request. This allows
--   you to retry failed requests without the risk of running the operation
--   twice. This can be any unique string, for example, a timestamp.
firewallDomainList_creatorRequestId :: Lens' FirewallDomainList (Maybe Text)

-- | The owner of the list, used only for lists that are not managed by
--   you. For example, the managed domain list
--   <tt>AWSManagedDomainsMalwareDomainList</tt> has the managed owner name
--   <tt>Route 53 Resolver DNS Firewall</tt>.
firewallDomainList_managedOwnerName :: Lens' FirewallDomainList (Maybe Text)

-- | The number of domain names that are specified in the domain list.
firewallDomainList_domainCount :: Lens' FirewallDomainList (Maybe Int)

-- | The date and time that the domain list was last modified, in Unix time
--   format and Coordinated Universal Time (UTC).
firewallDomainList_modificationTime :: Lens' FirewallDomainList (Maybe Text)

-- | Additional information about the status of the list, if available.
firewallDomainList_statusMessage :: Lens' FirewallDomainList (Maybe Text)

-- | The name of the domain list.
firewallDomainList_name :: Lens' FirewallDomainList (Maybe Text)

-- | The ID of the domain list.
firewallDomainList_id :: Lens' FirewallDomainList (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Route53Resolver.Types.FirewallDomainList.FirewallDomainList
instance GHC.Show.Show Network.AWS.Route53Resolver.Types.FirewallDomainList.FirewallDomainList
instance GHC.Read.Read Network.AWS.Route53Resolver.Types.FirewallDomainList.FirewallDomainList
instance GHC.Classes.Eq Network.AWS.Route53Resolver.Types.FirewallDomainList.FirewallDomainList
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Route53Resolver.Types.FirewallDomainList.FirewallDomainList
instance Data.Hashable.Class.Hashable Network.AWS.Route53Resolver.Types.FirewallDomainList.FirewallDomainList
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.Types.FirewallDomainList.FirewallDomainList


module Network.AWS.Route53Resolver.Types.FirewallDomainUpdateOperation
newtype FirewallDomainUpdateOperation
FirewallDomainUpdateOperation' :: Text -> FirewallDomainUpdateOperation
[fromFirewallDomainUpdateOperation] :: FirewallDomainUpdateOperation -> Text
pattern FirewallDomainUpdateOperation_ADD :: FirewallDomainUpdateOperation
pattern FirewallDomainUpdateOperation_REMOVE :: FirewallDomainUpdateOperation
pattern FirewallDomainUpdateOperation_REPLACE :: FirewallDomainUpdateOperation
instance Network.AWS.Data.XML.ToXML Network.AWS.Route53Resolver.Types.FirewallDomainUpdateOperation.FirewallDomainUpdateOperation
instance Network.AWS.Data.XML.FromXML Network.AWS.Route53Resolver.Types.FirewallDomainUpdateOperation.FirewallDomainUpdateOperation
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Route53Resolver.Types.FirewallDomainUpdateOperation.FirewallDomainUpdateOperation
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53Resolver.Types.FirewallDomainUpdateOperation.FirewallDomainUpdateOperation
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Route53Resolver.Types.FirewallDomainUpdateOperation.FirewallDomainUpdateOperation
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Route53Resolver.Types.FirewallDomainUpdateOperation.FirewallDomainUpdateOperation
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53Resolver.Types.FirewallDomainUpdateOperation.FirewallDomainUpdateOperation
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Route53Resolver.Types.FirewallDomainUpdateOperation.FirewallDomainUpdateOperation
instance Network.AWS.Data.Log.ToLog Network.AWS.Route53Resolver.Types.FirewallDomainUpdateOperation.FirewallDomainUpdateOperation
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Route53Resolver.Types.FirewallDomainUpdateOperation.FirewallDomainUpdateOperation
instance Network.AWS.Data.Text.ToText Network.AWS.Route53Resolver.Types.FirewallDomainUpdateOperation.FirewallDomainUpdateOperation
instance Network.AWS.Data.Text.FromText Network.AWS.Route53Resolver.Types.FirewallDomainUpdateOperation.FirewallDomainUpdateOperation
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.Types.FirewallDomainUpdateOperation.FirewallDomainUpdateOperation
instance Data.Hashable.Class.Hashable Network.AWS.Route53Resolver.Types.FirewallDomainUpdateOperation.FirewallDomainUpdateOperation
instance GHC.Generics.Generic Network.AWS.Route53Resolver.Types.FirewallDomainUpdateOperation.FirewallDomainUpdateOperation
instance GHC.Classes.Ord Network.AWS.Route53Resolver.Types.FirewallDomainUpdateOperation.FirewallDomainUpdateOperation
instance GHC.Classes.Eq Network.AWS.Route53Resolver.Types.FirewallDomainUpdateOperation.FirewallDomainUpdateOperation
instance GHC.Read.Read Network.AWS.Route53Resolver.Types.FirewallDomainUpdateOperation.FirewallDomainUpdateOperation
instance GHC.Show.Show Network.AWS.Route53Resolver.Types.FirewallDomainUpdateOperation.FirewallDomainUpdateOperation


module Network.AWS.Route53Resolver.Types.FirewallFailOpenStatus
newtype FirewallFailOpenStatus
FirewallFailOpenStatus' :: Text -> FirewallFailOpenStatus
[fromFirewallFailOpenStatus] :: FirewallFailOpenStatus -> Text
pattern FirewallFailOpenStatus_DISABLED :: FirewallFailOpenStatus
pattern FirewallFailOpenStatus_ENABLED :: FirewallFailOpenStatus
instance Network.AWS.Data.XML.ToXML Network.AWS.Route53Resolver.Types.FirewallFailOpenStatus.FirewallFailOpenStatus
instance Network.AWS.Data.XML.FromXML Network.AWS.Route53Resolver.Types.FirewallFailOpenStatus.FirewallFailOpenStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Route53Resolver.Types.FirewallFailOpenStatus.FirewallFailOpenStatus
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53Resolver.Types.FirewallFailOpenStatus.FirewallFailOpenStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Route53Resolver.Types.FirewallFailOpenStatus.FirewallFailOpenStatus
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Route53Resolver.Types.FirewallFailOpenStatus.FirewallFailOpenStatus
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53Resolver.Types.FirewallFailOpenStatus.FirewallFailOpenStatus
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Route53Resolver.Types.FirewallFailOpenStatus.FirewallFailOpenStatus
instance Network.AWS.Data.Log.ToLog Network.AWS.Route53Resolver.Types.FirewallFailOpenStatus.FirewallFailOpenStatus
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Route53Resolver.Types.FirewallFailOpenStatus.FirewallFailOpenStatus
instance Network.AWS.Data.Text.ToText Network.AWS.Route53Resolver.Types.FirewallFailOpenStatus.FirewallFailOpenStatus
instance Network.AWS.Data.Text.FromText Network.AWS.Route53Resolver.Types.FirewallFailOpenStatus.FirewallFailOpenStatus
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.Types.FirewallFailOpenStatus.FirewallFailOpenStatus
instance Data.Hashable.Class.Hashable Network.AWS.Route53Resolver.Types.FirewallFailOpenStatus.FirewallFailOpenStatus
instance GHC.Generics.Generic Network.AWS.Route53Resolver.Types.FirewallFailOpenStatus.FirewallFailOpenStatus
instance GHC.Classes.Ord Network.AWS.Route53Resolver.Types.FirewallFailOpenStatus.FirewallFailOpenStatus
instance GHC.Classes.Eq Network.AWS.Route53Resolver.Types.FirewallFailOpenStatus.FirewallFailOpenStatus
instance GHC.Read.Read Network.AWS.Route53Resolver.Types.FirewallFailOpenStatus.FirewallFailOpenStatus
instance GHC.Show.Show Network.AWS.Route53Resolver.Types.FirewallFailOpenStatus.FirewallFailOpenStatus


module Network.AWS.Route53Resolver.Types.FirewallConfig

-- | Configuration of the firewall behavior provided by DNS Firewall for a
--   single VPC from Amazon Virtual Private Cloud (Amazon VPC).
--   
--   <i>See:</i> <a>newFirewallConfig</a> smart constructor.
data FirewallConfig
FirewallConfig' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe FirewallFailOpenStatus -> FirewallConfig

-- | The ID of the VPC that this firewall configuration applies to.
[$sel:resourceId:FirewallConfig'] :: FirewallConfig -> Maybe Text

-- | The Amazon Web Services account ID of the owner of the VPC that this
--   firewall configuration applies to.
[$sel:ownerId:FirewallConfig'] :: FirewallConfig -> Maybe Text

-- | The ID of the firewall configuration.
[$sel:id:FirewallConfig'] :: FirewallConfig -> Maybe Text

-- | Determines how DNS Firewall operates during failures, for example when
--   all traffic that is sent to DNS Firewall fails to receive a reply.
--   
--   <ul>
--   <li>By default, fail open is disabled, which means the failure mode is
--   closed. This approach favors security over availability. DNS Firewall
--   returns a failure error when it is unable to properly evaluate a
--   query.</li>
--   <li>If you enable this option, the failure mode is open. This approach
--   favors availability over security. DNS Firewall allows queries to
--   proceed if it is unable to properly evaluate them.</li>
--   </ul>
--   
--   This behavior is only enforced for VPCs that have at least one DNS
--   Firewall rule group association.
[$sel:firewallFailOpen:FirewallConfig'] :: FirewallConfig -> Maybe FirewallFailOpenStatus

-- | Create a value of <a>FirewallConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceId:FirewallConfig'</a>,
--   <a>firewallConfig_resourceId</a> - The ID of the VPC that this
--   firewall configuration applies to.
--   
--   <a>$sel:ownerId:FirewallConfig'</a>, <a>firewallConfig_ownerId</a> -
--   The Amazon Web Services account ID of the owner of the VPC that this
--   firewall configuration applies to.
--   
--   <a>$sel:id:FirewallConfig'</a>, <a>firewallConfig_id</a> - The ID of
--   the firewall configuration.
--   
--   <a>$sel:firewallFailOpen:FirewallConfig'</a>,
--   <a>firewallConfig_firewallFailOpen</a> - Determines how DNS Firewall
--   operates during failures, for example when all traffic that is sent to
--   DNS Firewall fails to receive a reply.
--   
--   <ul>
--   <li>By default, fail open is disabled, which means the failure mode is
--   closed. This approach favors security over availability. DNS Firewall
--   returns a failure error when it is unable to properly evaluate a
--   query.</li>
--   <li>If you enable this option, the failure mode is open. This approach
--   favors availability over security. DNS Firewall allows queries to
--   proceed if it is unable to properly evaluate them.</li>
--   </ul>
--   
--   This behavior is only enforced for VPCs that have at least one DNS
--   Firewall rule group association.
newFirewallConfig :: FirewallConfig

-- | The ID of the VPC that this firewall configuration applies to.
firewallConfig_resourceId :: Lens' FirewallConfig (Maybe Text)

-- | The Amazon Web Services account ID of the owner of the VPC that this
--   firewall configuration applies to.
firewallConfig_ownerId :: Lens' FirewallConfig (Maybe Text)

-- | The ID of the firewall configuration.
firewallConfig_id :: Lens' FirewallConfig (Maybe Text)

-- | Determines how DNS Firewall operates during failures, for example when
--   all traffic that is sent to DNS Firewall fails to receive a reply.
--   
--   <ul>
--   <li>By default, fail open is disabled, which means the failure mode is
--   closed. This approach favors security over availability. DNS Firewall
--   returns a failure error when it is unable to properly evaluate a
--   query.</li>
--   <li>If you enable this option, the failure mode is open. This approach
--   favors availability over security. DNS Firewall allows queries to
--   proceed if it is unable to properly evaluate them.</li>
--   </ul>
--   
--   This behavior is only enforced for VPCs that have at least one DNS
--   Firewall rule group association.
firewallConfig_firewallFailOpen :: Lens' FirewallConfig (Maybe FirewallFailOpenStatus)
instance GHC.Generics.Generic Network.AWS.Route53Resolver.Types.FirewallConfig.FirewallConfig
instance GHC.Show.Show Network.AWS.Route53Resolver.Types.FirewallConfig.FirewallConfig
instance GHC.Read.Read Network.AWS.Route53Resolver.Types.FirewallConfig.FirewallConfig
instance GHC.Classes.Eq Network.AWS.Route53Resolver.Types.FirewallConfig.FirewallConfig
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Route53Resolver.Types.FirewallConfig.FirewallConfig
instance Data.Hashable.Class.Hashable Network.AWS.Route53Resolver.Types.FirewallConfig.FirewallConfig
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.Types.FirewallConfig.FirewallConfig


module Network.AWS.Route53Resolver.Types.FirewallRule

-- | A single firewall rule in a rule group.
--   
--   <i>See:</i> <a>newFirewallRule</a> smart constructor.
data FirewallRule
FirewallRule' :: Maybe Text -> Maybe BlockOverrideDnsType -> Maybe Text -> Maybe Int -> Maybe BlockResponse -> Maybe Text -> Maybe Text -> Maybe Action -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe Text -> FirewallRule

-- | The date and time that the rule was created, in Unix time format and
--   Coordinated Universal Time (UTC).
[$sel:creationTime:FirewallRule'] :: FirewallRule -> Maybe Text

-- | The DNS record's type. This determines the format of the record value
--   that you provided in <tt>BlockOverrideDomain</tt>. Used for the rule
--   action <tt>BLOCK</tt> with a <tt>BlockResponse</tt> setting of
--   <tt>OVERRIDE</tt>.
[$sel:blockOverrideDnsType:FirewallRule'] :: FirewallRule -> Maybe BlockOverrideDnsType

-- | The unique identifier of the firewall rule group of the rule.
[$sel:firewallRuleGroupId:FirewallRule'] :: FirewallRule -> Maybe Text

-- | The priority of the rule in the rule group. This value must be unique
--   within the rule group. DNS Firewall processes the rules in a rule
--   group by order of priority, starting from the lowest setting.
[$sel:priority:FirewallRule'] :: FirewallRule -> Maybe Int

-- | The way that you want DNS Firewall to block the request. Used for the
--   rule action setting <tt>BLOCK</tt>.
--   
--   <ul>
--   <li><tt>NODATA</tt> - Respond indicating that the query was
--   successful, but no response is available for it.</li>
--   <li><tt>NXDOMAIN</tt> - Respond indicating that the domain name that's
--   in the query doesn't exist.</li>
--   <li><tt>OVERRIDE</tt> - Provide a custom override in the response.
--   This option requires custom handling details in the rule's
--   <tt>BlockOverride*</tt> settings.</li>
--   </ul>
[$sel:blockResponse:FirewallRule'] :: FirewallRule -> Maybe BlockResponse

-- | A unique string defined by you to identify the request. This allows
--   you to retry failed requests without the risk of executing the
--   operation twice. This can be any unique string, for example, a
--   timestamp.
[$sel:creatorRequestId:FirewallRule'] :: FirewallRule -> Maybe Text

-- | The date and time that the rule was last modified, in Unix time format
--   and Coordinated Universal Time (UTC).
[$sel:modificationTime:FirewallRule'] :: FirewallRule -> Maybe Text

-- | The action that DNS Firewall should take on a DNS query when it
--   matches one of the domains in the rule's domain list:
--   
--   <ul>
--   <li><tt>ALLOW</tt> - Permit the request to go through.</li>
--   <li><tt>ALERT</tt> - Permit the request to go through but send an
--   alert to the logs.</li>
--   <li><tt>BLOCK</tt> - Disallow the request. If this is specified,
--   additional handling details are provided in the rule's
--   <tt>BlockResponse</tt> setting.</li>
--   </ul>
[$sel:action:FirewallRule'] :: FirewallRule -> Maybe Action

-- | The recommended amount of time, in seconds, for the DNS resolver or
--   web browser to cache the provided override record. Used for the rule
--   action <tt>BLOCK</tt> with a <tt>BlockResponse</tt> setting of
--   <tt>OVERRIDE</tt>.
[$sel:blockOverrideTtl:FirewallRule'] :: FirewallRule -> Maybe Int

-- | The name of the rule.
[$sel:name:FirewallRule'] :: FirewallRule -> Maybe Text

-- | The custom DNS record to send back in response to the query. Used for
--   the rule action <tt>BLOCK</tt> with a <tt>BlockResponse</tt> setting
--   of <tt>OVERRIDE</tt>.
[$sel:blockOverrideDomain:FirewallRule'] :: FirewallRule -> Maybe Text

-- | The ID of the domain list that's used in the rule.
[$sel:firewallDomainListId:FirewallRule'] :: FirewallRule -> Maybe Text

-- | Create a value of <a>FirewallRule</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:FirewallRule'</a>,
--   <a>firewallRule_creationTime</a> - The date and time that the rule was
--   created, in Unix time format and Coordinated Universal Time (UTC).
--   
--   <a>$sel:blockOverrideDnsType:FirewallRule'</a>,
--   <a>firewallRule_blockOverrideDnsType</a> - The DNS record's type. This
--   determines the format of the record value that you provided in
--   <tt>BlockOverrideDomain</tt>. Used for the rule action <tt>BLOCK</tt>
--   with a <tt>BlockResponse</tt> setting of <tt>OVERRIDE</tt>.
--   
--   <a>$sel:firewallRuleGroupId:FirewallRule'</a>,
--   <a>firewallRule_firewallRuleGroupId</a> - The unique identifier of the
--   firewall rule group of the rule.
--   
--   <a>$sel:priority:FirewallRule'</a>, <a>firewallRule_priority</a> - The
--   priority of the rule in the rule group. This value must be unique
--   within the rule group. DNS Firewall processes the rules in a rule
--   group by order of priority, starting from the lowest setting.
--   
--   <a>$sel:blockResponse:FirewallRule'</a>,
--   <a>firewallRule_blockResponse</a> - The way that you want DNS Firewall
--   to block the request. Used for the rule action setting <tt>BLOCK</tt>.
--   
--   <ul>
--   <li><tt>NODATA</tt> - Respond indicating that the query was
--   successful, but no response is available for it.</li>
--   <li><tt>NXDOMAIN</tt> - Respond indicating that the domain name that's
--   in the query doesn't exist.</li>
--   <li><tt>OVERRIDE</tt> - Provide a custom override in the response.
--   This option requires custom handling details in the rule's
--   <tt>BlockOverride*</tt> settings.</li>
--   </ul>
--   
--   <a>$sel:creatorRequestId:FirewallRule'</a>,
--   <a>firewallRule_creatorRequestId</a> - A unique string defined by you
--   to identify the request. This allows you to retry failed requests
--   without the risk of executing the operation twice. This can be any
--   unique string, for example, a timestamp.
--   
--   <a>$sel:modificationTime:FirewallRule'</a>,
--   <a>firewallRule_modificationTime</a> - The date and time that the rule
--   was last modified, in Unix time format and Coordinated Universal Time
--   (UTC).
--   
--   <a>$sel:action:FirewallRule'</a>, <a>firewallRule_action</a> - The
--   action that DNS Firewall should take on a DNS query when it matches
--   one of the domains in the rule's domain list:
--   
--   <ul>
--   <li><tt>ALLOW</tt> - Permit the request to go through.</li>
--   <li><tt>ALERT</tt> - Permit the request to go through but send an
--   alert to the logs.</li>
--   <li><tt>BLOCK</tt> - Disallow the request. If this is specified,
--   additional handling details are provided in the rule's
--   <tt>BlockResponse</tt> setting.</li>
--   </ul>
--   
--   <a>$sel:blockOverrideTtl:FirewallRule'</a>,
--   <a>firewallRule_blockOverrideTtl</a> - The recommended amount of time,
--   in seconds, for the DNS resolver or web browser to cache the provided
--   override record. Used for the rule action <tt>BLOCK</tt> with a
--   <tt>BlockResponse</tt> setting of <tt>OVERRIDE</tt>.
--   
--   <a>$sel:name:FirewallRule'</a>, <a>firewallRule_name</a> - The name of
--   the rule.
--   
--   <a>$sel:blockOverrideDomain:FirewallRule'</a>,
--   <a>firewallRule_blockOverrideDomain</a> - The custom DNS record to
--   send back in response to the query. Used for the rule action
--   <tt>BLOCK</tt> with a <tt>BlockResponse</tt> setting of
--   <tt>OVERRIDE</tt>.
--   
--   <a>$sel:firewallDomainListId:FirewallRule'</a>,
--   <a>firewallRule_firewallDomainListId</a> - The ID of the domain list
--   that's used in the rule.
newFirewallRule :: FirewallRule

-- | The date and time that the rule was created, in Unix time format and
--   Coordinated Universal Time (UTC).
firewallRule_creationTime :: Lens' FirewallRule (Maybe Text)

-- | The DNS record's type. This determines the format of the record value
--   that you provided in <tt>BlockOverrideDomain</tt>. Used for the rule
--   action <tt>BLOCK</tt> with a <tt>BlockResponse</tt> setting of
--   <tt>OVERRIDE</tt>.
firewallRule_blockOverrideDnsType :: Lens' FirewallRule (Maybe BlockOverrideDnsType)

-- | The unique identifier of the firewall rule group of the rule.
firewallRule_firewallRuleGroupId :: Lens' FirewallRule (Maybe Text)

-- | The priority of the rule in the rule group. This value must be unique
--   within the rule group. DNS Firewall processes the rules in a rule
--   group by order of priority, starting from the lowest setting.
firewallRule_priority :: Lens' FirewallRule (Maybe Int)

-- | The way that you want DNS Firewall to block the request. Used for the
--   rule action setting <tt>BLOCK</tt>.
--   
--   <ul>
--   <li><tt>NODATA</tt> - Respond indicating that the query was
--   successful, but no response is available for it.</li>
--   <li><tt>NXDOMAIN</tt> - Respond indicating that the domain name that's
--   in the query doesn't exist.</li>
--   <li><tt>OVERRIDE</tt> - Provide a custom override in the response.
--   This option requires custom handling details in the rule's
--   <tt>BlockOverride*</tt> settings.</li>
--   </ul>
firewallRule_blockResponse :: Lens' FirewallRule (Maybe BlockResponse)

-- | A unique string defined by you to identify the request. This allows
--   you to retry failed requests without the risk of executing the
--   operation twice. This can be any unique string, for example, a
--   timestamp.
firewallRule_creatorRequestId :: Lens' FirewallRule (Maybe Text)

-- | The date and time that the rule was last modified, in Unix time format
--   and Coordinated Universal Time (UTC).
firewallRule_modificationTime :: Lens' FirewallRule (Maybe Text)

-- | The action that DNS Firewall should take on a DNS query when it
--   matches one of the domains in the rule's domain list:
--   
--   <ul>
--   <li><tt>ALLOW</tt> - Permit the request to go through.</li>
--   <li><tt>ALERT</tt> - Permit the request to go through but send an
--   alert to the logs.</li>
--   <li><tt>BLOCK</tt> - Disallow the request. If this is specified,
--   additional handling details are provided in the rule's
--   <tt>BlockResponse</tt> setting.</li>
--   </ul>
firewallRule_action :: Lens' FirewallRule (Maybe Action)

-- | The recommended amount of time, in seconds, for the DNS resolver or
--   web browser to cache the provided override record. Used for the rule
--   action <tt>BLOCK</tt> with a <tt>BlockResponse</tt> setting of
--   <tt>OVERRIDE</tt>.
firewallRule_blockOverrideTtl :: Lens' FirewallRule (Maybe Int)

-- | The name of the rule.
firewallRule_name :: Lens' FirewallRule (Maybe Text)

-- | The custom DNS record to send back in response to the query. Used for
--   the rule action <tt>BLOCK</tt> with a <tt>BlockResponse</tt> setting
--   of <tt>OVERRIDE</tt>.
firewallRule_blockOverrideDomain :: Lens' FirewallRule (Maybe Text)

-- | The ID of the domain list that's used in the rule.
firewallRule_firewallDomainListId :: Lens' FirewallRule (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Route53Resolver.Types.FirewallRule.FirewallRule
instance GHC.Show.Show Network.AWS.Route53Resolver.Types.FirewallRule.FirewallRule
instance GHC.Read.Read Network.AWS.Route53Resolver.Types.FirewallRule.FirewallRule
instance GHC.Classes.Eq Network.AWS.Route53Resolver.Types.FirewallRule.FirewallRule
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Route53Resolver.Types.FirewallRule.FirewallRule
instance Data.Hashable.Class.Hashable Network.AWS.Route53Resolver.Types.FirewallRule.FirewallRule
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.Types.FirewallRule.FirewallRule


module Network.AWS.Route53Resolver.Types.FirewallRuleGroupAssociationStatus
newtype FirewallRuleGroupAssociationStatus
FirewallRuleGroupAssociationStatus' :: Text -> FirewallRuleGroupAssociationStatus
[fromFirewallRuleGroupAssociationStatus] :: FirewallRuleGroupAssociationStatus -> Text
pattern FirewallRuleGroupAssociationStatus_COMPLETE :: FirewallRuleGroupAssociationStatus
pattern FirewallRuleGroupAssociationStatus_DELETING :: FirewallRuleGroupAssociationStatus
pattern FirewallRuleGroupAssociationStatus_UPDATING :: FirewallRuleGroupAssociationStatus
instance Network.AWS.Data.XML.ToXML Network.AWS.Route53Resolver.Types.FirewallRuleGroupAssociationStatus.FirewallRuleGroupAssociationStatus
instance Network.AWS.Data.XML.FromXML Network.AWS.Route53Resolver.Types.FirewallRuleGroupAssociationStatus.FirewallRuleGroupAssociationStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Route53Resolver.Types.FirewallRuleGroupAssociationStatus.FirewallRuleGroupAssociationStatus
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53Resolver.Types.FirewallRuleGroupAssociationStatus.FirewallRuleGroupAssociationStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Route53Resolver.Types.FirewallRuleGroupAssociationStatus.FirewallRuleGroupAssociationStatus
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Route53Resolver.Types.FirewallRuleGroupAssociationStatus.FirewallRuleGroupAssociationStatus
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53Resolver.Types.FirewallRuleGroupAssociationStatus.FirewallRuleGroupAssociationStatus
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Route53Resolver.Types.FirewallRuleGroupAssociationStatus.FirewallRuleGroupAssociationStatus
instance Network.AWS.Data.Log.ToLog Network.AWS.Route53Resolver.Types.FirewallRuleGroupAssociationStatus.FirewallRuleGroupAssociationStatus
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Route53Resolver.Types.FirewallRuleGroupAssociationStatus.FirewallRuleGroupAssociationStatus
instance Network.AWS.Data.Text.ToText Network.AWS.Route53Resolver.Types.FirewallRuleGroupAssociationStatus.FirewallRuleGroupAssociationStatus
instance Network.AWS.Data.Text.FromText Network.AWS.Route53Resolver.Types.FirewallRuleGroupAssociationStatus.FirewallRuleGroupAssociationStatus
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.Types.FirewallRuleGroupAssociationStatus.FirewallRuleGroupAssociationStatus
instance Data.Hashable.Class.Hashable Network.AWS.Route53Resolver.Types.FirewallRuleGroupAssociationStatus.FirewallRuleGroupAssociationStatus
instance GHC.Generics.Generic Network.AWS.Route53Resolver.Types.FirewallRuleGroupAssociationStatus.FirewallRuleGroupAssociationStatus
instance GHC.Classes.Ord Network.AWS.Route53Resolver.Types.FirewallRuleGroupAssociationStatus.FirewallRuleGroupAssociationStatus
instance GHC.Classes.Eq Network.AWS.Route53Resolver.Types.FirewallRuleGroupAssociationStatus.FirewallRuleGroupAssociationStatus
instance GHC.Read.Read Network.AWS.Route53Resolver.Types.FirewallRuleGroupAssociationStatus.FirewallRuleGroupAssociationStatus
instance GHC.Show.Show Network.AWS.Route53Resolver.Types.FirewallRuleGroupAssociationStatus.FirewallRuleGroupAssociationStatus


module Network.AWS.Route53Resolver.Types.FirewallRuleGroupStatus
newtype FirewallRuleGroupStatus
FirewallRuleGroupStatus' :: Text -> FirewallRuleGroupStatus
[fromFirewallRuleGroupStatus] :: FirewallRuleGroupStatus -> Text
pattern FirewallRuleGroupStatus_COMPLETE :: FirewallRuleGroupStatus
pattern FirewallRuleGroupStatus_DELETING :: FirewallRuleGroupStatus
pattern FirewallRuleGroupStatus_UPDATING :: FirewallRuleGroupStatus
instance Network.AWS.Data.XML.ToXML Network.AWS.Route53Resolver.Types.FirewallRuleGroupStatus.FirewallRuleGroupStatus
instance Network.AWS.Data.XML.FromXML Network.AWS.Route53Resolver.Types.FirewallRuleGroupStatus.FirewallRuleGroupStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Route53Resolver.Types.FirewallRuleGroupStatus.FirewallRuleGroupStatus
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53Resolver.Types.FirewallRuleGroupStatus.FirewallRuleGroupStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Route53Resolver.Types.FirewallRuleGroupStatus.FirewallRuleGroupStatus
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Route53Resolver.Types.FirewallRuleGroupStatus.FirewallRuleGroupStatus
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53Resolver.Types.FirewallRuleGroupStatus.FirewallRuleGroupStatus
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Route53Resolver.Types.FirewallRuleGroupStatus.FirewallRuleGroupStatus
instance Network.AWS.Data.Log.ToLog Network.AWS.Route53Resolver.Types.FirewallRuleGroupStatus.FirewallRuleGroupStatus
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Route53Resolver.Types.FirewallRuleGroupStatus.FirewallRuleGroupStatus
instance Network.AWS.Data.Text.ToText Network.AWS.Route53Resolver.Types.FirewallRuleGroupStatus.FirewallRuleGroupStatus
instance Network.AWS.Data.Text.FromText Network.AWS.Route53Resolver.Types.FirewallRuleGroupStatus.FirewallRuleGroupStatus
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.Types.FirewallRuleGroupStatus.FirewallRuleGroupStatus
instance Data.Hashable.Class.Hashable Network.AWS.Route53Resolver.Types.FirewallRuleGroupStatus.FirewallRuleGroupStatus
instance GHC.Generics.Generic Network.AWS.Route53Resolver.Types.FirewallRuleGroupStatus.FirewallRuleGroupStatus
instance GHC.Classes.Ord Network.AWS.Route53Resolver.Types.FirewallRuleGroupStatus.FirewallRuleGroupStatus
instance GHC.Classes.Eq Network.AWS.Route53Resolver.Types.FirewallRuleGroupStatus.FirewallRuleGroupStatus
instance GHC.Read.Read Network.AWS.Route53Resolver.Types.FirewallRuleGroupStatus.FirewallRuleGroupStatus
instance GHC.Show.Show Network.AWS.Route53Resolver.Types.FirewallRuleGroupStatus.FirewallRuleGroupStatus


module Network.AWS.Route53Resolver.Types.IpAddressRequest

-- | In a <a>CreateResolverEndpoint</a> request, the IP address that DNS
--   queries originate from (for outbound endpoints) or that you forward
--   DNS queries to (for inbound endpoints). <tt>IpAddressRequest</tt> also
--   includes the ID of the subnet that contains the IP address.
--   
--   <i>See:</i> <a>newIpAddressRequest</a> smart constructor.
data IpAddressRequest
IpAddressRequest' :: Maybe Text -> Text -> IpAddressRequest

-- | The IP address that you want to use for DNS queries.
[$sel:ip:IpAddressRequest'] :: IpAddressRequest -> Maybe Text

-- | The ID of the subnet that contains the IP address.
[$sel:subnetId:IpAddressRequest'] :: IpAddressRequest -> Text

-- | Create a value of <a>IpAddressRequest</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ip:IpAddressRequest'</a>, <a>ipAddressRequest_ip</a> - The IP
--   address that you want to use for DNS queries.
--   
--   <a>$sel:subnetId:IpAddressRequest'</a>,
--   <a>ipAddressRequest_subnetId</a> - The ID of the subnet that contains
--   the IP address.
newIpAddressRequest :: Text -> IpAddressRequest

-- | The IP address that you want to use for DNS queries.
ipAddressRequest_ip :: Lens' IpAddressRequest (Maybe Text)

-- | The ID of the subnet that contains the IP address.
ipAddressRequest_subnetId :: Lens' IpAddressRequest Text
instance GHC.Generics.Generic Network.AWS.Route53Resolver.Types.IpAddressRequest.IpAddressRequest
instance GHC.Show.Show Network.AWS.Route53Resolver.Types.IpAddressRequest.IpAddressRequest
instance GHC.Read.Read Network.AWS.Route53Resolver.Types.IpAddressRequest.IpAddressRequest
instance GHC.Classes.Eq Network.AWS.Route53Resolver.Types.IpAddressRequest.IpAddressRequest
instance Data.Hashable.Class.Hashable Network.AWS.Route53Resolver.Types.IpAddressRequest.IpAddressRequest
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.Types.IpAddressRequest.IpAddressRequest
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53Resolver.Types.IpAddressRequest.IpAddressRequest


module Network.AWS.Route53Resolver.Types.IpAddressStatus
newtype IpAddressStatus
IpAddressStatus' :: Text -> IpAddressStatus
[fromIpAddressStatus] :: IpAddressStatus -> Text
pattern IpAddressStatus_ATTACHED :: IpAddressStatus
pattern IpAddressStatus_ATTACHING :: IpAddressStatus
pattern IpAddressStatus_CREATING :: IpAddressStatus
pattern IpAddressStatus_DELETE_FAILED_FAS_EXPIRED :: IpAddressStatus
pattern IpAddressStatus_DELETING :: IpAddressStatus
pattern IpAddressStatus_DETACHING :: IpAddressStatus
pattern IpAddressStatus_FAILED_CREATION :: IpAddressStatus
pattern IpAddressStatus_FAILED_RESOURCE_GONE :: IpAddressStatus
pattern IpAddressStatus_REMAP_ATTACHING :: IpAddressStatus
pattern IpAddressStatus_REMAP_DETACHING :: IpAddressStatus
instance Network.AWS.Data.XML.ToXML Network.AWS.Route53Resolver.Types.IpAddressStatus.IpAddressStatus
instance Network.AWS.Data.XML.FromXML Network.AWS.Route53Resolver.Types.IpAddressStatus.IpAddressStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Route53Resolver.Types.IpAddressStatus.IpAddressStatus
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53Resolver.Types.IpAddressStatus.IpAddressStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Route53Resolver.Types.IpAddressStatus.IpAddressStatus
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Route53Resolver.Types.IpAddressStatus.IpAddressStatus
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53Resolver.Types.IpAddressStatus.IpAddressStatus
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Route53Resolver.Types.IpAddressStatus.IpAddressStatus
instance Network.AWS.Data.Log.ToLog Network.AWS.Route53Resolver.Types.IpAddressStatus.IpAddressStatus
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Route53Resolver.Types.IpAddressStatus.IpAddressStatus
instance Network.AWS.Data.Text.ToText Network.AWS.Route53Resolver.Types.IpAddressStatus.IpAddressStatus
instance Network.AWS.Data.Text.FromText Network.AWS.Route53Resolver.Types.IpAddressStatus.IpAddressStatus
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.Types.IpAddressStatus.IpAddressStatus
instance Data.Hashable.Class.Hashable Network.AWS.Route53Resolver.Types.IpAddressStatus.IpAddressStatus
instance GHC.Generics.Generic Network.AWS.Route53Resolver.Types.IpAddressStatus.IpAddressStatus
instance GHC.Classes.Ord Network.AWS.Route53Resolver.Types.IpAddressStatus.IpAddressStatus
instance GHC.Classes.Eq Network.AWS.Route53Resolver.Types.IpAddressStatus.IpAddressStatus
instance GHC.Read.Read Network.AWS.Route53Resolver.Types.IpAddressStatus.IpAddressStatus
instance GHC.Show.Show Network.AWS.Route53Resolver.Types.IpAddressStatus.IpAddressStatus


module Network.AWS.Route53Resolver.Types.IpAddressResponse

-- | In the response to a <a>GetResolverEndpoint</a> request, information
--   about the IP addresses that the Resolver endpoint uses for DNS
--   queries.
--   
--   <i>See:</i> <a>newIpAddressResponse</a> smart constructor.
data IpAddressResponse
IpAddressResponse' :: Maybe Text -> Maybe IpAddressStatus -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> IpAddressResponse

-- | The date and time that the IP address was created, in Unix time format
--   and Coordinated Universal Time (UTC).
[$sel:creationTime:IpAddressResponse'] :: IpAddressResponse -> Maybe Text

-- | A status code that gives the current status of the request.
[$sel:status:IpAddressResponse'] :: IpAddressResponse -> Maybe IpAddressStatus

-- | The date and time that the IP address was last modified, in Unix time
--   format and Coordinated Universal Time (UTC).
[$sel:modificationTime:IpAddressResponse'] :: IpAddressResponse -> Maybe Text

-- | The ID of one subnet.
[$sel:subnetId:IpAddressResponse'] :: IpAddressResponse -> Maybe Text

-- | One IP address that the Resolver endpoint uses for DNS queries.
[$sel:ip:IpAddressResponse'] :: IpAddressResponse -> Maybe Text

-- | The ID of one IP address.
[$sel:ipId:IpAddressResponse'] :: IpAddressResponse -> Maybe Text

-- | A message that provides additional information about the status of the
--   request.
[$sel:statusMessage:IpAddressResponse'] :: IpAddressResponse -> Maybe Text

-- | Create a value of <a>IpAddressResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:IpAddressResponse'</a>,
--   <a>ipAddressResponse_creationTime</a> - The date and time that the IP
--   address was created, in Unix time format and Coordinated Universal
--   Time (UTC).
--   
--   <a>$sel:status:IpAddressResponse'</a>, <a>ipAddressResponse_status</a>
--   - A status code that gives the current status of the request.
--   
--   <a>$sel:modificationTime:IpAddressResponse'</a>,
--   <a>ipAddressResponse_modificationTime</a> - The date and time that the
--   IP address was last modified, in Unix time format and Coordinated
--   Universal Time (UTC).
--   
--   <a>$sel:subnetId:IpAddressResponse'</a>,
--   <a>ipAddressResponse_subnetId</a> - The ID of one subnet.
--   
--   <a>$sel:ip:IpAddressResponse'</a>, <a>ipAddressResponse_ip</a> - One
--   IP address that the Resolver endpoint uses for DNS queries.
--   
--   <a>$sel:ipId:IpAddressResponse'</a>, <a>ipAddressResponse_ipId</a> -
--   The ID of one IP address.
--   
--   <a>$sel:statusMessage:IpAddressResponse'</a>,
--   <a>ipAddressResponse_statusMessage</a> - A message that provides
--   additional information about the status of the request.
newIpAddressResponse :: IpAddressResponse

-- | The date and time that the IP address was created, in Unix time format
--   and Coordinated Universal Time (UTC).
ipAddressResponse_creationTime :: Lens' IpAddressResponse (Maybe Text)

-- | A status code that gives the current status of the request.
ipAddressResponse_status :: Lens' IpAddressResponse (Maybe IpAddressStatus)

-- | The date and time that the IP address was last modified, in Unix time
--   format and Coordinated Universal Time (UTC).
ipAddressResponse_modificationTime :: Lens' IpAddressResponse (Maybe Text)

-- | The ID of one subnet.
ipAddressResponse_subnetId :: Lens' IpAddressResponse (Maybe Text)

-- | One IP address that the Resolver endpoint uses for DNS queries.
ipAddressResponse_ip :: Lens' IpAddressResponse (Maybe Text)

-- | The ID of one IP address.
ipAddressResponse_ipId :: Lens' IpAddressResponse (Maybe Text)

-- | A message that provides additional information about the status of the
--   request.
ipAddressResponse_statusMessage :: Lens' IpAddressResponse (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Route53Resolver.Types.IpAddressResponse.IpAddressResponse
instance GHC.Show.Show Network.AWS.Route53Resolver.Types.IpAddressResponse.IpAddressResponse
instance GHC.Read.Read Network.AWS.Route53Resolver.Types.IpAddressResponse.IpAddressResponse
instance GHC.Classes.Eq Network.AWS.Route53Resolver.Types.IpAddressResponse.IpAddressResponse
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Route53Resolver.Types.IpAddressResponse.IpAddressResponse
instance Data.Hashable.Class.Hashable Network.AWS.Route53Resolver.Types.IpAddressResponse.IpAddressResponse
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.Types.IpAddressResponse.IpAddressResponse


module Network.AWS.Route53Resolver.Types.IpAddressUpdate

-- | In an <a>UpdateResolverEndpoint</a> request, information about an IP
--   address to update.
--   
--   <i>See:</i> <a>newIpAddressUpdate</a> smart constructor.
data IpAddressUpdate
IpAddressUpdate' :: Maybe Text -> Maybe Text -> Maybe Text -> IpAddressUpdate

-- | The ID of the subnet that includes the IP address that you want to
--   update. To get this ID, use <a>GetResolverEndpoint</a>.
[$sel:subnetId:IpAddressUpdate'] :: IpAddressUpdate -> Maybe Text

-- | The new IP address.
[$sel:ip:IpAddressUpdate'] :: IpAddressUpdate -> Maybe Text

-- | <i>Only when removing an IP address from a Resolver endpoint</i>: The
--   ID of the IP address that you want to remove. To get this ID, use
--   <a>GetResolverEndpoint</a>.
[$sel:ipId:IpAddressUpdate'] :: IpAddressUpdate -> Maybe Text

-- | Create a value of <a>IpAddressUpdate</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:subnetId:IpAddressUpdate'</a>, <a>ipAddressUpdate_subnetId</a>
--   - The ID of the subnet that includes the IP address that you want to
--   update. To get this ID, use <a>GetResolverEndpoint</a>.
--   
--   <a>$sel:ip:IpAddressUpdate'</a>, <a>ipAddressUpdate_ip</a> - The new
--   IP address.
--   
--   <a>$sel:ipId:IpAddressUpdate'</a>, <a>ipAddressUpdate_ipId</a> -
--   <i>Only when removing an IP address from a Resolver endpoint</i>: The
--   ID of the IP address that you want to remove. To get this ID, use
--   <a>GetResolverEndpoint</a>.
newIpAddressUpdate :: IpAddressUpdate

-- | The ID of the subnet that includes the IP address that you want to
--   update. To get this ID, use <a>GetResolverEndpoint</a>.
ipAddressUpdate_subnetId :: Lens' IpAddressUpdate (Maybe Text)

-- | The new IP address.
ipAddressUpdate_ip :: Lens' IpAddressUpdate (Maybe Text)

-- | <i>Only when removing an IP address from a Resolver endpoint</i>: The
--   ID of the IP address that you want to remove. To get this ID, use
--   <a>GetResolverEndpoint</a>.
ipAddressUpdate_ipId :: Lens' IpAddressUpdate (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Route53Resolver.Types.IpAddressUpdate.IpAddressUpdate
instance GHC.Show.Show Network.AWS.Route53Resolver.Types.IpAddressUpdate.IpAddressUpdate
instance GHC.Read.Read Network.AWS.Route53Resolver.Types.IpAddressUpdate.IpAddressUpdate
instance GHC.Classes.Eq Network.AWS.Route53Resolver.Types.IpAddressUpdate.IpAddressUpdate
instance Data.Hashable.Class.Hashable Network.AWS.Route53Resolver.Types.IpAddressUpdate.IpAddressUpdate
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.Types.IpAddressUpdate.IpAddressUpdate
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53Resolver.Types.IpAddressUpdate.IpAddressUpdate


module Network.AWS.Route53Resolver.Types.MutationProtectionStatus
newtype MutationProtectionStatus
MutationProtectionStatus' :: Text -> MutationProtectionStatus
[fromMutationProtectionStatus] :: MutationProtectionStatus -> Text
pattern MutationProtectionStatus_DISABLED :: MutationProtectionStatus
pattern MutationProtectionStatus_ENABLED :: MutationProtectionStatus
instance Network.AWS.Data.XML.ToXML Network.AWS.Route53Resolver.Types.MutationProtectionStatus.MutationProtectionStatus
instance Network.AWS.Data.XML.FromXML Network.AWS.Route53Resolver.Types.MutationProtectionStatus.MutationProtectionStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Route53Resolver.Types.MutationProtectionStatus.MutationProtectionStatus
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53Resolver.Types.MutationProtectionStatus.MutationProtectionStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Route53Resolver.Types.MutationProtectionStatus.MutationProtectionStatus
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Route53Resolver.Types.MutationProtectionStatus.MutationProtectionStatus
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53Resolver.Types.MutationProtectionStatus.MutationProtectionStatus
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Route53Resolver.Types.MutationProtectionStatus.MutationProtectionStatus
instance Network.AWS.Data.Log.ToLog Network.AWS.Route53Resolver.Types.MutationProtectionStatus.MutationProtectionStatus
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Route53Resolver.Types.MutationProtectionStatus.MutationProtectionStatus
instance Network.AWS.Data.Text.ToText Network.AWS.Route53Resolver.Types.MutationProtectionStatus.MutationProtectionStatus
instance Network.AWS.Data.Text.FromText Network.AWS.Route53Resolver.Types.MutationProtectionStatus.MutationProtectionStatus
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.Types.MutationProtectionStatus.MutationProtectionStatus
instance Data.Hashable.Class.Hashable Network.AWS.Route53Resolver.Types.MutationProtectionStatus.MutationProtectionStatus
instance GHC.Generics.Generic Network.AWS.Route53Resolver.Types.MutationProtectionStatus.MutationProtectionStatus
instance GHC.Classes.Ord Network.AWS.Route53Resolver.Types.MutationProtectionStatus.MutationProtectionStatus
instance GHC.Classes.Eq Network.AWS.Route53Resolver.Types.MutationProtectionStatus.MutationProtectionStatus
instance GHC.Read.Read Network.AWS.Route53Resolver.Types.MutationProtectionStatus.MutationProtectionStatus
instance GHC.Show.Show Network.AWS.Route53Resolver.Types.MutationProtectionStatus.MutationProtectionStatus


module Network.AWS.Route53Resolver.Types.FirewallRuleGroupAssociation

-- | An association between a firewall rule group and a VPC, which enables
--   DNS filtering for the VPC.
--   
--   <i>See:</i> <a>newFirewallRuleGroupAssociation</a> smart constructor.
data FirewallRuleGroupAssociation
FirewallRuleGroupAssociation' :: Maybe Text -> Maybe FirewallRuleGroupAssociationStatus -> Maybe MutationProtectionStatus -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> FirewallRuleGroupAssociation

-- | The date and time that the association was created, in Unix time
--   format and Coordinated Universal Time (UTC).
[$sel:creationTime:FirewallRuleGroupAssociation'] :: FirewallRuleGroupAssociation -> Maybe Text

-- | The current status of the association.
[$sel:status:FirewallRuleGroupAssociation'] :: FirewallRuleGroupAssociation -> Maybe FirewallRuleGroupAssociationStatus

-- | If enabled, this setting disallows modification or removal of the
--   association, to help prevent against accidentally altering DNS
--   firewall protections.
[$sel:mutationProtection:FirewallRuleGroupAssociation'] :: FirewallRuleGroupAssociation -> Maybe MutationProtectionStatus

-- | The unique identifier of the firewall rule group.
[$sel:firewallRuleGroupId:FirewallRuleGroupAssociation'] :: FirewallRuleGroupAssociation -> Maybe Text

-- | The setting that determines the processing order of the rule group
--   among the rule groups that are associated with a single VPC. DNS
--   Firewall filters VPC traffic starting from rule group with the lowest
--   numeric priority setting.
[$sel:priority:FirewallRuleGroupAssociation'] :: FirewallRuleGroupAssociation -> Maybe Int

-- | The Amazon Resource Name (ARN) of the firewall rule group association.
[$sel:arn:FirewallRuleGroupAssociation'] :: FirewallRuleGroupAssociation -> Maybe Text

-- | The unique identifier of the VPC that is associated with the rule
--   group.
[$sel:vpcId:FirewallRuleGroupAssociation'] :: FirewallRuleGroupAssociation -> Maybe Text

-- | A unique string defined by you to identify the request. This allows
--   you to retry failed requests without the risk of running the operation
--   twice. This can be any unique string, for example, a timestamp.
[$sel:creatorRequestId:FirewallRuleGroupAssociation'] :: FirewallRuleGroupAssociation -> Maybe Text

-- | The owner of the association, used only for associations that are not
--   managed by you. If you use Firewall Manager to manage your DNS
--   Firewalls, then this reports Firewall Manager as the managed owner.
[$sel:managedOwnerName:FirewallRuleGroupAssociation'] :: FirewallRuleGroupAssociation -> Maybe Text

-- | The date and time that the association was last modified, in Unix time
--   format and Coordinated Universal Time (UTC).
[$sel:modificationTime:FirewallRuleGroupAssociation'] :: FirewallRuleGroupAssociation -> Maybe Text

-- | Additional information about the status of the response, if available.
[$sel:statusMessage:FirewallRuleGroupAssociation'] :: FirewallRuleGroupAssociation -> Maybe Text

-- | The name of the association.
[$sel:name:FirewallRuleGroupAssociation'] :: FirewallRuleGroupAssociation -> Maybe Text

-- | The identifier for the association.
[$sel:id:FirewallRuleGroupAssociation'] :: FirewallRuleGroupAssociation -> Maybe Text

-- | Create a value of <a>FirewallRuleGroupAssociation</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:FirewallRuleGroupAssociation'</a>,
--   <a>firewallRuleGroupAssociation_creationTime</a> - The date and time
--   that the association was created, in Unix time format and Coordinated
--   Universal Time (UTC).
--   
--   <a>$sel:status:FirewallRuleGroupAssociation'</a>,
--   <a>firewallRuleGroupAssociation_status</a> - The current status of the
--   association.
--   
--   <a>$sel:mutationProtection:FirewallRuleGroupAssociation'</a>,
--   <a>firewallRuleGroupAssociation_mutationProtection</a> - If enabled,
--   this setting disallows modification or removal of the association, to
--   help prevent against accidentally altering DNS firewall protections.
--   
--   <a>$sel:firewallRuleGroupId:FirewallRuleGroupAssociation'</a>,
--   <a>firewallRuleGroupAssociation_firewallRuleGroupId</a> - The unique
--   identifier of the firewall rule group.
--   
--   <a>$sel:priority:FirewallRuleGroupAssociation'</a>,
--   <a>firewallRuleGroupAssociation_priority</a> - The setting that
--   determines the processing order of the rule group among the rule
--   groups that are associated with a single VPC. DNS Firewall filters VPC
--   traffic starting from rule group with the lowest numeric priority
--   setting.
--   
--   <a>$sel:arn:FirewallRuleGroupAssociation'</a>,
--   <a>firewallRuleGroupAssociation_arn</a> - The Amazon Resource Name
--   (ARN) of the firewall rule group association.
--   
--   <a>$sel:vpcId:FirewallRuleGroupAssociation'</a>,
--   <a>firewallRuleGroupAssociation_vpcId</a> - The unique identifier of
--   the VPC that is associated with the rule group.
--   
--   <a>$sel:creatorRequestId:FirewallRuleGroupAssociation'</a>,
--   <a>firewallRuleGroupAssociation_creatorRequestId</a> - A unique string
--   defined by you to identify the request. This allows you to retry
--   failed requests without the risk of running the operation twice. This
--   can be any unique string, for example, a timestamp.
--   
--   <a>$sel:managedOwnerName:FirewallRuleGroupAssociation'</a>,
--   <a>firewallRuleGroupAssociation_managedOwnerName</a> - The owner of
--   the association, used only for associations that are not managed by
--   you. If you use Firewall Manager to manage your DNS Firewalls, then
--   this reports Firewall Manager as the managed owner.
--   
--   <a>$sel:modificationTime:FirewallRuleGroupAssociation'</a>,
--   <a>firewallRuleGroupAssociation_modificationTime</a> - The date and
--   time that the association was last modified, in Unix time format and
--   Coordinated Universal Time (UTC).
--   
--   <a>$sel:statusMessage:FirewallRuleGroupAssociation'</a>,
--   <a>firewallRuleGroupAssociation_statusMessage</a> - Additional
--   information about the status of the response, if available.
--   
--   <a>$sel:name:FirewallRuleGroupAssociation'</a>,
--   <a>firewallRuleGroupAssociation_name</a> - The name of the
--   association.
--   
--   <a>$sel:id:FirewallRuleGroupAssociation'</a>,
--   <a>firewallRuleGroupAssociation_id</a> - The identifier for the
--   association.
newFirewallRuleGroupAssociation :: FirewallRuleGroupAssociation

-- | The date and time that the association was created, in Unix time
--   format and Coordinated Universal Time (UTC).
firewallRuleGroupAssociation_creationTime :: Lens' FirewallRuleGroupAssociation (Maybe Text)

-- | The current status of the association.
firewallRuleGroupAssociation_status :: Lens' FirewallRuleGroupAssociation (Maybe FirewallRuleGroupAssociationStatus)

-- | If enabled, this setting disallows modification or removal of the
--   association, to help prevent against accidentally altering DNS
--   firewall protections.
firewallRuleGroupAssociation_mutationProtection :: Lens' FirewallRuleGroupAssociation (Maybe MutationProtectionStatus)

-- | The unique identifier of the firewall rule group.
firewallRuleGroupAssociation_firewallRuleGroupId :: Lens' FirewallRuleGroupAssociation (Maybe Text)

-- | The setting that determines the processing order of the rule group
--   among the rule groups that are associated with a single VPC. DNS
--   Firewall filters VPC traffic starting from rule group with the lowest
--   numeric priority setting.
firewallRuleGroupAssociation_priority :: Lens' FirewallRuleGroupAssociation (Maybe Int)

-- | The Amazon Resource Name (ARN) of the firewall rule group association.
firewallRuleGroupAssociation_arn :: Lens' FirewallRuleGroupAssociation (Maybe Text)

-- | The unique identifier of the VPC that is associated with the rule
--   group.
firewallRuleGroupAssociation_vpcId :: Lens' FirewallRuleGroupAssociation (Maybe Text)

-- | A unique string defined by you to identify the request. This allows
--   you to retry failed requests without the risk of running the operation
--   twice. This can be any unique string, for example, a timestamp.
firewallRuleGroupAssociation_creatorRequestId :: Lens' FirewallRuleGroupAssociation (Maybe Text)

-- | The owner of the association, used only for associations that are not
--   managed by you. If you use Firewall Manager to manage your DNS
--   Firewalls, then this reports Firewall Manager as the managed owner.
firewallRuleGroupAssociation_managedOwnerName :: Lens' FirewallRuleGroupAssociation (Maybe Text)

-- | The date and time that the association was last modified, in Unix time
--   format and Coordinated Universal Time (UTC).
firewallRuleGroupAssociation_modificationTime :: Lens' FirewallRuleGroupAssociation (Maybe Text)

-- | Additional information about the status of the response, if available.
firewallRuleGroupAssociation_statusMessage :: Lens' FirewallRuleGroupAssociation (Maybe Text)

-- | The name of the association.
firewallRuleGroupAssociation_name :: Lens' FirewallRuleGroupAssociation (Maybe Text)

-- | The identifier for the association.
firewallRuleGroupAssociation_id :: Lens' FirewallRuleGroupAssociation (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Route53Resolver.Types.FirewallRuleGroupAssociation.FirewallRuleGroupAssociation
instance GHC.Show.Show Network.AWS.Route53Resolver.Types.FirewallRuleGroupAssociation.FirewallRuleGroupAssociation
instance GHC.Read.Read Network.AWS.Route53Resolver.Types.FirewallRuleGroupAssociation.FirewallRuleGroupAssociation
instance GHC.Classes.Eq Network.AWS.Route53Resolver.Types.FirewallRuleGroupAssociation.FirewallRuleGroupAssociation
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Route53Resolver.Types.FirewallRuleGroupAssociation.FirewallRuleGroupAssociation
instance Data.Hashable.Class.Hashable Network.AWS.Route53Resolver.Types.FirewallRuleGroupAssociation.FirewallRuleGroupAssociation
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.Types.FirewallRuleGroupAssociation.FirewallRuleGroupAssociation


module Network.AWS.Route53Resolver.Types.ResolverDNSSECValidationStatus
newtype ResolverDNSSECValidationStatus
ResolverDNSSECValidationStatus' :: Text -> ResolverDNSSECValidationStatus
[fromResolverDNSSECValidationStatus] :: ResolverDNSSECValidationStatus -> Text
pattern ResolverDNSSECValidationStatus_DISABLED :: ResolverDNSSECValidationStatus
pattern ResolverDNSSECValidationStatus_DISABLING :: ResolverDNSSECValidationStatus
pattern ResolverDNSSECValidationStatus_ENABLED :: ResolverDNSSECValidationStatus
pattern ResolverDNSSECValidationStatus_ENABLING :: ResolverDNSSECValidationStatus
instance Network.AWS.Data.XML.ToXML Network.AWS.Route53Resolver.Types.ResolverDNSSECValidationStatus.ResolverDNSSECValidationStatus
instance Network.AWS.Data.XML.FromXML Network.AWS.Route53Resolver.Types.ResolverDNSSECValidationStatus.ResolverDNSSECValidationStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Route53Resolver.Types.ResolverDNSSECValidationStatus.ResolverDNSSECValidationStatus
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53Resolver.Types.ResolverDNSSECValidationStatus.ResolverDNSSECValidationStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Route53Resolver.Types.ResolverDNSSECValidationStatus.ResolverDNSSECValidationStatus
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Route53Resolver.Types.ResolverDNSSECValidationStatus.ResolverDNSSECValidationStatus
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53Resolver.Types.ResolverDNSSECValidationStatus.ResolverDNSSECValidationStatus
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Route53Resolver.Types.ResolverDNSSECValidationStatus.ResolverDNSSECValidationStatus
instance Network.AWS.Data.Log.ToLog Network.AWS.Route53Resolver.Types.ResolverDNSSECValidationStatus.ResolverDNSSECValidationStatus
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Route53Resolver.Types.ResolverDNSSECValidationStatus.ResolverDNSSECValidationStatus
instance Network.AWS.Data.Text.ToText Network.AWS.Route53Resolver.Types.ResolverDNSSECValidationStatus.ResolverDNSSECValidationStatus
instance Network.AWS.Data.Text.FromText Network.AWS.Route53Resolver.Types.ResolverDNSSECValidationStatus.ResolverDNSSECValidationStatus
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.Types.ResolverDNSSECValidationStatus.ResolverDNSSECValidationStatus
instance Data.Hashable.Class.Hashable Network.AWS.Route53Resolver.Types.ResolverDNSSECValidationStatus.ResolverDNSSECValidationStatus
instance GHC.Generics.Generic Network.AWS.Route53Resolver.Types.ResolverDNSSECValidationStatus.ResolverDNSSECValidationStatus
instance GHC.Classes.Ord Network.AWS.Route53Resolver.Types.ResolverDNSSECValidationStatus.ResolverDNSSECValidationStatus
instance GHC.Classes.Eq Network.AWS.Route53Resolver.Types.ResolverDNSSECValidationStatus.ResolverDNSSECValidationStatus
instance GHC.Read.Read Network.AWS.Route53Resolver.Types.ResolverDNSSECValidationStatus.ResolverDNSSECValidationStatus
instance GHC.Show.Show Network.AWS.Route53Resolver.Types.ResolverDNSSECValidationStatus.ResolverDNSSECValidationStatus


module Network.AWS.Route53Resolver.Types.ResolverDnssecConfig

-- | A complex type that contains information about a configuration for
--   DNSSEC validation.
--   
--   <i>See:</i> <a>newResolverDnssecConfig</a> smart constructor.
data ResolverDnssecConfig
ResolverDnssecConfig' :: Maybe Text -> Maybe Text -> Maybe ResolverDNSSECValidationStatus -> Maybe Text -> ResolverDnssecConfig

-- | The ID of the virtual private cloud (VPC) that you're configuring the
--   DNSSEC validation status for.
[$sel:resourceId:ResolverDnssecConfig'] :: ResolverDnssecConfig -> Maybe Text

-- | The owner account ID of the virtual private cloud (VPC) for a
--   configuration for DNSSEC validation.
[$sel:ownerId:ResolverDnssecConfig'] :: ResolverDnssecConfig -> Maybe Text

-- | The validation status for a DNSSEC configuration. The status can be
--   one of the following:
--   
--   <ul>
--   <li><b>ENABLING:</b> DNSSEC validation is being enabled but is not
--   complete.</li>
--   <li><b>ENABLED:</b> DNSSEC validation is enabled.</li>
--   <li><b>DISABLING:</b> DNSSEC validation is being disabled but is not
--   complete.</li>
--   <li><b>DISABLED</b> DNSSEC validation is disabled.</li>
--   </ul>
[$sel:validationStatus:ResolverDnssecConfig'] :: ResolverDnssecConfig -> Maybe ResolverDNSSECValidationStatus

-- | The ID for a configuration for DNSSEC validation.
[$sel:id:ResolverDnssecConfig'] :: ResolverDnssecConfig -> Maybe Text

-- | Create a value of <a>ResolverDnssecConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceId:ResolverDnssecConfig'</a>,
--   <a>resolverDnssecConfig_resourceId</a> - The ID of the virtual private
--   cloud (VPC) that you're configuring the DNSSEC validation status for.
--   
--   <a>$sel:ownerId:ResolverDnssecConfig'</a>,
--   <a>resolverDnssecConfig_ownerId</a> - The owner account ID of the
--   virtual private cloud (VPC) for a configuration for DNSSEC validation.
--   
--   <a>$sel:validationStatus:ResolverDnssecConfig'</a>,
--   <a>resolverDnssecConfig_validationStatus</a> - The validation status
--   for a DNSSEC configuration. The status can be one of the following:
--   
--   <ul>
--   <li><b>ENABLING:</b> DNSSEC validation is being enabled but is not
--   complete.</li>
--   <li><b>ENABLED:</b> DNSSEC validation is enabled.</li>
--   <li><b>DISABLING:</b> DNSSEC validation is being disabled but is not
--   complete.</li>
--   <li><b>DISABLED</b> DNSSEC validation is disabled.</li>
--   </ul>
--   
--   <a>$sel:id:ResolverDnssecConfig'</a>, <a>resolverDnssecConfig_id</a> -
--   The ID for a configuration for DNSSEC validation.
newResolverDnssecConfig :: ResolverDnssecConfig

-- | The ID of the virtual private cloud (VPC) that you're configuring the
--   DNSSEC validation status for.
resolverDnssecConfig_resourceId :: Lens' ResolverDnssecConfig (Maybe Text)

-- | The owner account ID of the virtual private cloud (VPC) for a
--   configuration for DNSSEC validation.
resolverDnssecConfig_ownerId :: Lens' ResolverDnssecConfig (Maybe Text)

-- | The validation status for a DNSSEC configuration. The status can be
--   one of the following:
--   
--   <ul>
--   <li><b>ENABLING:</b> DNSSEC validation is being enabled but is not
--   complete.</li>
--   <li><b>ENABLED:</b> DNSSEC validation is enabled.</li>
--   <li><b>DISABLING:</b> DNSSEC validation is being disabled but is not
--   complete.</li>
--   <li><b>DISABLED</b> DNSSEC validation is disabled.</li>
--   </ul>
resolverDnssecConfig_validationStatus :: Lens' ResolverDnssecConfig (Maybe ResolverDNSSECValidationStatus)

-- | The ID for a configuration for DNSSEC validation.
resolverDnssecConfig_id :: Lens' ResolverDnssecConfig (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Route53Resolver.Types.ResolverDnssecConfig.ResolverDnssecConfig
instance GHC.Show.Show Network.AWS.Route53Resolver.Types.ResolverDnssecConfig.ResolverDnssecConfig
instance GHC.Read.Read Network.AWS.Route53Resolver.Types.ResolverDnssecConfig.ResolverDnssecConfig
instance GHC.Classes.Eq Network.AWS.Route53Resolver.Types.ResolverDnssecConfig.ResolverDnssecConfig
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Route53Resolver.Types.ResolverDnssecConfig.ResolverDnssecConfig
instance Data.Hashable.Class.Hashable Network.AWS.Route53Resolver.Types.ResolverDnssecConfig.ResolverDnssecConfig
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.Types.ResolverDnssecConfig.ResolverDnssecConfig


module Network.AWS.Route53Resolver.Types.ResolverEndpointDirection
newtype ResolverEndpointDirection
ResolverEndpointDirection' :: Text -> ResolverEndpointDirection
[fromResolverEndpointDirection] :: ResolverEndpointDirection -> Text
pattern ResolverEndpointDirection_INBOUND :: ResolverEndpointDirection
pattern ResolverEndpointDirection_OUTBOUND :: ResolverEndpointDirection
instance Network.AWS.Data.XML.ToXML Network.AWS.Route53Resolver.Types.ResolverEndpointDirection.ResolverEndpointDirection
instance Network.AWS.Data.XML.FromXML Network.AWS.Route53Resolver.Types.ResolverEndpointDirection.ResolverEndpointDirection
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Route53Resolver.Types.ResolverEndpointDirection.ResolverEndpointDirection
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53Resolver.Types.ResolverEndpointDirection.ResolverEndpointDirection
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Route53Resolver.Types.ResolverEndpointDirection.ResolverEndpointDirection
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Route53Resolver.Types.ResolverEndpointDirection.ResolverEndpointDirection
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53Resolver.Types.ResolverEndpointDirection.ResolverEndpointDirection
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Route53Resolver.Types.ResolverEndpointDirection.ResolverEndpointDirection
instance Network.AWS.Data.Log.ToLog Network.AWS.Route53Resolver.Types.ResolverEndpointDirection.ResolverEndpointDirection
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Route53Resolver.Types.ResolverEndpointDirection.ResolverEndpointDirection
instance Network.AWS.Data.Text.ToText Network.AWS.Route53Resolver.Types.ResolverEndpointDirection.ResolverEndpointDirection
instance Network.AWS.Data.Text.FromText Network.AWS.Route53Resolver.Types.ResolverEndpointDirection.ResolverEndpointDirection
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.Types.ResolverEndpointDirection.ResolverEndpointDirection
instance Data.Hashable.Class.Hashable Network.AWS.Route53Resolver.Types.ResolverEndpointDirection.ResolverEndpointDirection
instance GHC.Generics.Generic Network.AWS.Route53Resolver.Types.ResolverEndpointDirection.ResolverEndpointDirection
instance GHC.Classes.Ord Network.AWS.Route53Resolver.Types.ResolverEndpointDirection.ResolverEndpointDirection
instance GHC.Classes.Eq Network.AWS.Route53Resolver.Types.ResolverEndpointDirection.ResolverEndpointDirection
instance GHC.Read.Read Network.AWS.Route53Resolver.Types.ResolverEndpointDirection.ResolverEndpointDirection
instance GHC.Show.Show Network.AWS.Route53Resolver.Types.ResolverEndpointDirection.ResolverEndpointDirection


module Network.AWS.Route53Resolver.Types.ResolverEndpointStatus
newtype ResolverEndpointStatus
ResolverEndpointStatus' :: Text -> ResolverEndpointStatus
[fromResolverEndpointStatus] :: ResolverEndpointStatus -> Text
pattern ResolverEndpointStatus_ACTION_NEEDED :: ResolverEndpointStatus
pattern ResolverEndpointStatus_AUTO_RECOVERING :: ResolverEndpointStatus
pattern ResolverEndpointStatus_CREATING :: ResolverEndpointStatus
pattern ResolverEndpointStatus_DELETING :: ResolverEndpointStatus
pattern ResolverEndpointStatus_OPERATIONAL :: ResolverEndpointStatus
pattern ResolverEndpointStatus_UPDATING :: ResolverEndpointStatus
instance Network.AWS.Data.XML.ToXML Network.AWS.Route53Resolver.Types.ResolverEndpointStatus.ResolverEndpointStatus
instance Network.AWS.Data.XML.FromXML Network.AWS.Route53Resolver.Types.ResolverEndpointStatus.ResolverEndpointStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Route53Resolver.Types.ResolverEndpointStatus.ResolverEndpointStatus
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53Resolver.Types.ResolverEndpointStatus.ResolverEndpointStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Route53Resolver.Types.ResolverEndpointStatus.ResolverEndpointStatus
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Route53Resolver.Types.ResolverEndpointStatus.ResolverEndpointStatus
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53Resolver.Types.ResolverEndpointStatus.ResolverEndpointStatus
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Route53Resolver.Types.ResolverEndpointStatus.ResolverEndpointStatus
instance Network.AWS.Data.Log.ToLog Network.AWS.Route53Resolver.Types.ResolverEndpointStatus.ResolverEndpointStatus
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Route53Resolver.Types.ResolverEndpointStatus.ResolverEndpointStatus
instance Network.AWS.Data.Text.ToText Network.AWS.Route53Resolver.Types.ResolverEndpointStatus.ResolverEndpointStatus
instance Network.AWS.Data.Text.FromText Network.AWS.Route53Resolver.Types.ResolverEndpointStatus.ResolverEndpointStatus
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.Types.ResolverEndpointStatus.ResolverEndpointStatus
instance Data.Hashable.Class.Hashable Network.AWS.Route53Resolver.Types.ResolverEndpointStatus.ResolverEndpointStatus
instance GHC.Generics.Generic Network.AWS.Route53Resolver.Types.ResolverEndpointStatus.ResolverEndpointStatus
instance GHC.Classes.Ord Network.AWS.Route53Resolver.Types.ResolverEndpointStatus.ResolverEndpointStatus
instance GHC.Classes.Eq Network.AWS.Route53Resolver.Types.ResolverEndpointStatus.ResolverEndpointStatus
instance GHC.Read.Read Network.AWS.Route53Resolver.Types.ResolverEndpointStatus.ResolverEndpointStatus
instance GHC.Show.Show Network.AWS.Route53Resolver.Types.ResolverEndpointStatus.ResolverEndpointStatus


module Network.AWS.Route53Resolver.Types.ResolverEndpoint

-- | In the response to a <a>CreateResolverEndpoint</a>,
--   <a>DeleteResolverEndpoint</a>, <a>GetResolverEndpoint</a>,
--   <a>ListResolverEndpoints</a>, or <a>UpdateResolverEndpoint</a>
--   request, a complex type that contains settings for an existing inbound
--   or outbound Resolver endpoint.
--   
--   <i>See:</i> <a>newResolverEndpoint</a> smart constructor.
data ResolverEndpoint
ResolverEndpoint' :: Maybe Text -> Maybe ResolverEndpointStatus -> Maybe [Text] -> Maybe ResolverEndpointDirection -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> ResolverEndpoint

-- | The date and time that the endpoint was created, in Unix time format
--   and Coordinated Universal Time (UTC).
[$sel:creationTime:ResolverEndpoint'] :: ResolverEndpoint -> Maybe Text

-- | A code that specifies the current status of the Resolver endpoint.
--   Valid values include the following:
--   
--   <ul>
--   <li><tt>CREATING</tt>: Resolver is creating and configuring one or
--   more Amazon VPC network interfaces for this endpoint.</li>
--   <li><tt>OPERATIONAL</tt>: The Amazon VPC network interfaces for this
--   endpoint are correctly configured and able to pass inbound or outbound
--   DNS queries between your network and Resolver.</li>
--   <li><tt>UPDATING</tt>: Resolver is associating or disassociating one
--   or more network interfaces with this endpoint.</li>
--   <li><tt>AUTO_RECOVERING</tt>: Resolver is trying to recover one or
--   more of the network interfaces that are associated with this endpoint.
--   During the recovery process, the endpoint functions with limited
--   capacity because of the limit on the number of DNS queries per IP
--   address (per network interface). For the current limit, see <a>Limits
--   on Route 53 Resolver</a>.</li>
--   <li><tt>ACTION_NEEDED</tt>: This endpoint is unhealthy, and Resolver
--   can't automatically recover it. To resolve the problem, we recommend
--   that you check each IP address that you associated with the endpoint.
--   For each IP address that isn't available, add another IP address and
--   then delete the IP address that isn't available. (An endpoint must
--   always include at least two IP addresses.) A status of
--   <tt>ACTION_NEEDED</tt> can have a variety of causes. Here are two
--   common causes:<ul><li>One or more of the network interfaces that are
--   associated with the endpoint were deleted using Amazon
--   VPC.</li><li>The network interface couldn't be created for some reason
--   that's outside the control of Resolver.</li></ul></li>
--   <li><tt>DELETING</tt>: Resolver is deleting this endpoint and the
--   associated network interfaces.</li>
--   </ul>
[$sel:status:ResolverEndpoint'] :: ResolverEndpoint -> Maybe ResolverEndpointStatus

-- | The ID of one or more security groups that control access to this VPC.
--   The security group must include one or more inbound rules (for inbound
--   endpoints) or outbound rules (for outbound endpoints). Inbound and
--   outbound rules must allow TCP and UDP access. For inbound access, open
--   port 53. For outbound access, open the port that you're using for DNS
--   queries on your network.
[$sel:securityGroupIds:ResolverEndpoint'] :: ResolverEndpoint -> Maybe [Text]

-- | Indicates whether the Resolver endpoint allows inbound or outbound DNS
--   queries:
--   
--   <ul>
--   <li><tt>INBOUND</tt>: allows DNS queries to your VPC from your
--   network</li>
--   <li><tt>OUTBOUND</tt>: allows DNS queries from your VPC to your
--   network</li>
--   </ul>
[$sel:direction:ResolverEndpoint'] :: ResolverEndpoint -> Maybe ResolverEndpointDirection

-- | The ARN (Amazon Resource Name) for the Resolver endpoint.
[$sel:arn:ResolverEndpoint'] :: ResolverEndpoint -> Maybe Text

-- | A unique string that identifies the request that created the Resolver
--   endpoint. The <tt>CreatorRequestId</tt> allows failed requests to be
--   retried without the risk of running the operation twice.
[$sel:creatorRequestId:ResolverEndpoint'] :: ResolverEndpoint -> Maybe Text

-- | The date and time that the endpoint was last modified, in Unix time
--   format and Coordinated Universal Time (UTC).
[$sel:modificationTime:ResolverEndpoint'] :: ResolverEndpoint -> Maybe Text

-- | The number of IP addresses that the Resolver endpoint can use for DNS
--   queries.
[$sel:ipAddressCount:ResolverEndpoint'] :: ResolverEndpoint -> Maybe Int

-- | A detailed description of the status of the Resolver endpoint.
[$sel:statusMessage:ResolverEndpoint'] :: ResolverEndpoint -> Maybe Text

-- | The name that you assigned to the Resolver endpoint when you submitted
--   a <a>CreateResolverEndpoint</a> request.
[$sel:name:ResolverEndpoint'] :: ResolverEndpoint -> Maybe Text

-- | The ID of the Resolver endpoint.
[$sel:id:ResolverEndpoint'] :: ResolverEndpoint -> Maybe Text

-- | The ID of the VPC that you want to create the Resolver endpoint in.
[$sel:hostVPCId:ResolverEndpoint'] :: ResolverEndpoint -> Maybe Text

-- | Create a value of <a>ResolverEndpoint</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:ResolverEndpoint'</a>,
--   <a>resolverEndpoint_creationTime</a> - The date and time that the
--   endpoint was created, in Unix time format and Coordinated Universal
--   Time (UTC).
--   
--   <a>$sel:status:ResolverEndpoint'</a>, <a>resolverEndpoint_status</a> -
--   A code that specifies the current status of the Resolver endpoint.
--   Valid values include the following:
--   
--   <ul>
--   <li><tt>CREATING</tt>: Resolver is creating and configuring one or
--   more Amazon VPC network interfaces for this endpoint.</li>
--   <li><tt>OPERATIONAL</tt>: The Amazon VPC network interfaces for this
--   endpoint are correctly configured and able to pass inbound or outbound
--   DNS queries between your network and Resolver.</li>
--   <li><tt>UPDATING</tt>: Resolver is associating or disassociating one
--   or more network interfaces with this endpoint.</li>
--   <li><tt>AUTO_RECOVERING</tt>: Resolver is trying to recover one or
--   more of the network interfaces that are associated with this endpoint.
--   During the recovery process, the endpoint functions with limited
--   capacity because of the limit on the number of DNS queries per IP
--   address (per network interface). For the current limit, see <a>Limits
--   on Route 53 Resolver</a>.</li>
--   <li><tt>ACTION_NEEDED</tt>: This endpoint is unhealthy, and Resolver
--   can't automatically recover it. To resolve the problem, we recommend
--   that you check each IP address that you associated with the endpoint.
--   For each IP address that isn't available, add another IP address and
--   then delete the IP address that isn't available. (An endpoint must
--   always include at least two IP addresses.) A status of
--   <tt>ACTION_NEEDED</tt> can have a variety of causes. Here are two
--   common causes:<ul><li>One or more of the network interfaces that are
--   associated with the endpoint were deleted using Amazon
--   VPC.</li><li>The network interface couldn't be created for some reason
--   that's outside the control of Resolver.</li></ul></li>
--   <li><tt>DELETING</tt>: Resolver is deleting this endpoint and the
--   associated network interfaces.</li>
--   </ul>
--   
--   <a>$sel:securityGroupIds:ResolverEndpoint'</a>,
--   <a>resolverEndpoint_securityGroupIds</a> - The ID of one or more
--   security groups that control access to this VPC. The security group
--   must include one or more inbound rules (for inbound endpoints) or
--   outbound rules (for outbound endpoints). Inbound and outbound rules
--   must allow TCP and UDP access. For inbound access, open port 53. For
--   outbound access, open the port that you're using for DNS queries on
--   your network.
--   
--   <a>$sel:direction:ResolverEndpoint'</a>,
--   <a>resolverEndpoint_direction</a> - Indicates whether the Resolver
--   endpoint allows inbound or outbound DNS queries:
--   
--   <ul>
--   <li><tt>INBOUND</tt>: allows DNS queries to your VPC from your
--   network</li>
--   <li><tt>OUTBOUND</tt>: allows DNS queries from your VPC to your
--   network</li>
--   </ul>
--   
--   <a>$sel:arn:ResolverEndpoint'</a>, <a>resolverEndpoint_arn</a> - The
--   ARN (Amazon Resource Name) for the Resolver endpoint.
--   
--   <a>$sel:creatorRequestId:ResolverEndpoint'</a>,
--   <a>resolverEndpoint_creatorRequestId</a> - A unique string that
--   identifies the request that created the Resolver endpoint. The
--   <tt>CreatorRequestId</tt> allows failed requests to be retried without
--   the risk of running the operation twice.
--   
--   <a>$sel:modificationTime:ResolverEndpoint'</a>,
--   <a>resolverEndpoint_modificationTime</a> - The date and time that the
--   endpoint was last modified, in Unix time format and Coordinated
--   Universal Time (UTC).
--   
--   <a>$sel:ipAddressCount:ResolverEndpoint'</a>,
--   <a>resolverEndpoint_ipAddressCount</a> - The number of IP addresses
--   that the Resolver endpoint can use for DNS queries.
--   
--   <a>$sel:statusMessage:ResolverEndpoint'</a>,
--   <a>resolverEndpoint_statusMessage</a> - A detailed description of the
--   status of the Resolver endpoint.
--   
--   <a>$sel:name:ResolverEndpoint'</a>, <a>resolverEndpoint_name</a> - The
--   name that you assigned to the Resolver endpoint when you submitted a
--   <a>CreateResolverEndpoint</a> request.
--   
--   <a>$sel:id:ResolverEndpoint'</a>, <a>resolverEndpoint_id</a> - The ID
--   of the Resolver endpoint.
--   
--   <a>$sel:hostVPCId:ResolverEndpoint'</a>,
--   <a>resolverEndpoint_hostVPCId</a> - The ID of the VPC that you want to
--   create the Resolver endpoint in.
newResolverEndpoint :: ResolverEndpoint

-- | The date and time that the endpoint was created, in Unix time format
--   and Coordinated Universal Time (UTC).
resolverEndpoint_creationTime :: Lens' ResolverEndpoint (Maybe Text)

-- | A code that specifies the current status of the Resolver endpoint.
--   Valid values include the following:
--   
--   <ul>
--   <li><tt>CREATING</tt>: Resolver is creating and configuring one or
--   more Amazon VPC network interfaces for this endpoint.</li>
--   <li><tt>OPERATIONAL</tt>: The Amazon VPC network interfaces for this
--   endpoint are correctly configured and able to pass inbound or outbound
--   DNS queries between your network and Resolver.</li>
--   <li><tt>UPDATING</tt>: Resolver is associating or disassociating one
--   or more network interfaces with this endpoint.</li>
--   <li><tt>AUTO_RECOVERING</tt>: Resolver is trying to recover one or
--   more of the network interfaces that are associated with this endpoint.
--   During the recovery process, the endpoint functions with limited
--   capacity because of the limit on the number of DNS queries per IP
--   address (per network interface). For the current limit, see <a>Limits
--   on Route 53 Resolver</a>.</li>
--   <li><tt>ACTION_NEEDED</tt>: This endpoint is unhealthy, and Resolver
--   can't automatically recover it. To resolve the problem, we recommend
--   that you check each IP address that you associated with the endpoint.
--   For each IP address that isn't available, add another IP address and
--   then delete the IP address that isn't available. (An endpoint must
--   always include at least two IP addresses.) A status of
--   <tt>ACTION_NEEDED</tt> can have a variety of causes. Here are two
--   common causes:<ul><li>One or more of the network interfaces that are
--   associated with the endpoint were deleted using Amazon
--   VPC.</li><li>The network interface couldn't be created for some reason
--   that's outside the control of Resolver.</li></ul></li>
--   <li><tt>DELETING</tt>: Resolver is deleting this endpoint and the
--   associated network interfaces.</li>
--   </ul>
resolverEndpoint_status :: Lens' ResolverEndpoint (Maybe ResolverEndpointStatus)

-- | The ID of one or more security groups that control access to this VPC.
--   The security group must include one or more inbound rules (for inbound
--   endpoints) or outbound rules (for outbound endpoints). Inbound and
--   outbound rules must allow TCP and UDP access. For inbound access, open
--   port 53. For outbound access, open the port that you're using for DNS
--   queries on your network.
resolverEndpoint_securityGroupIds :: Lens' ResolverEndpoint (Maybe [Text])

-- | Indicates whether the Resolver endpoint allows inbound or outbound DNS
--   queries:
--   
--   <ul>
--   <li><tt>INBOUND</tt>: allows DNS queries to your VPC from your
--   network</li>
--   <li><tt>OUTBOUND</tt>: allows DNS queries from your VPC to your
--   network</li>
--   </ul>
resolverEndpoint_direction :: Lens' ResolverEndpoint (Maybe ResolverEndpointDirection)

-- | The ARN (Amazon Resource Name) for the Resolver endpoint.
resolverEndpoint_arn :: Lens' ResolverEndpoint (Maybe Text)

-- | A unique string that identifies the request that created the Resolver
--   endpoint. The <tt>CreatorRequestId</tt> allows failed requests to be
--   retried without the risk of running the operation twice.
resolverEndpoint_creatorRequestId :: Lens' ResolverEndpoint (Maybe Text)

-- | The date and time that the endpoint was last modified, in Unix time
--   format and Coordinated Universal Time (UTC).
resolverEndpoint_modificationTime :: Lens' ResolverEndpoint (Maybe Text)

-- | The number of IP addresses that the Resolver endpoint can use for DNS
--   queries.
resolverEndpoint_ipAddressCount :: Lens' ResolverEndpoint (Maybe Int)

-- | A detailed description of the status of the Resolver endpoint.
resolverEndpoint_statusMessage :: Lens' ResolverEndpoint (Maybe Text)

-- | The name that you assigned to the Resolver endpoint when you submitted
--   a <a>CreateResolverEndpoint</a> request.
resolverEndpoint_name :: Lens' ResolverEndpoint (Maybe Text)

-- | The ID of the Resolver endpoint.
resolverEndpoint_id :: Lens' ResolverEndpoint (Maybe Text)

-- | The ID of the VPC that you want to create the Resolver endpoint in.
resolverEndpoint_hostVPCId :: Lens' ResolverEndpoint (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Route53Resolver.Types.ResolverEndpoint.ResolverEndpoint
instance GHC.Show.Show Network.AWS.Route53Resolver.Types.ResolverEndpoint.ResolverEndpoint
instance GHC.Read.Read Network.AWS.Route53Resolver.Types.ResolverEndpoint.ResolverEndpoint
instance GHC.Classes.Eq Network.AWS.Route53Resolver.Types.ResolverEndpoint.ResolverEndpoint
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Route53Resolver.Types.ResolverEndpoint.ResolverEndpoint
instance Data.Hashable.Class.Hashable Network.AWS.Route53Resolver.Types.ResolverEndpoint.ResolverEndpoint
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.Types.ResolverEndpoint.ResolverEndpoint


module Network.AWS.Route53Resolver.Types.ResolverQueryLogConfigAssociationError
newtype ResolverQueryLogConfigAssociationError
ResolverQueryLogConfigAssociationError' :: Text -> ResolverQueryLogConfigAssociationError
[fromResolverQueryLogConfigAssociationError] :: ResolverQueryLogConfigAssociationError -> Text
pattern ResolverQueryLogConfigAssociationError_ACCESS_DENIED :: ResolverQueryLogConfigAssociationError
pattern ResolverQueryLogConfigAssociationError_DESTINATION_NOT_FOUND :: ResolverQueryLogConfigAssociationError
pattern ResolverQueryLogConfigAssociationError_INTERNAL_SERVICE_ERROR :: ResolverQueryLogConfigAssociationError
pattern ResolverQueryLogConfigAssociationError_NONE :: ResolverQueryLogConfigAssociationError
instance Network.AWS.Data.XML.ToXML Network.AWS.Route53Resolver.Types.ResolverQueryLogConfigAssociationError.ResolverQueryLogConfigAssociationError
instance Network.AWS.Data.XML.FromXML Network.AWS.Route53Resolver.Types.ResolverQueryLogConfigAssociationError.ResolverQueryLogConfigAssociationError
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Route53Resolver.Types.ResolverQueryLogConfigAssociationError.ResolverQueryLogConfigAssociationError
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53Resolver.Types.ResolverQueryLogConfigAssociationError.ResolverQueryLogConfigAssociationError
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Route53Resolver.Types.ResolverQueryLogConfigAssociationError.ResolverQueryLogConfigAssociationError
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Route53Resolver.Types.ResolverQueryLogConfigAssociationError.ResolverQueryLogConfigAssociationError
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53Resolver.Types.ResolverQueryLogConfigAssociationError.ResolverQueryLogConfigAssociationError
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Route53Resolver.Types.ResolverQueryLogConfigAssociationError.ResolverQueryLogConfigAssociationError
instance Network.AWS.Data.Log.ToLog Network.AWS.Route53Resolver.Types.ResolverQueryLogConfigAssociationError.ResolverQueryLogConfigAssociationError
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Route53Resolver.Types.ResolverQueryLogConfigAssociationError.ResolverQueryLogConfigAssociationError
instance Network.AWS.Data.Text.ToText Network.AWS.Route53Resolver.Types.ResolverQueryLogConfigAssociationError.ResolverQueryLogConfigAssociationError
instance Network.AWS.Data.Text.FromText Network.AWS.Route53Resolver.Types.ResolverQueryLogConfigAssociationError.ResolverQueryLogConfigAssociationError
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.Types.ResolverQueryLogConfigAssociationError.ResolverQueryLogConfigAssociationError
instance Data.Hashable.Class.Hashable Network.AWS.Route53Resolver.Types.ResolverQueryLogConfigAssociationError.ResolverQueryLogConfigAssociationError
instance GHC.Generics.Generic Network.AWS.Route53Resolver.Types.ResolverQueryLogConfigAssociationError.ResolverQueryLogConfigAssociationError
instance GHC.Classes.Ord Network.AWS.Route53Resolver.Types.ResolverQueryLogConfigAssociationError.ResolverQueryLogConfigAssociationError
instance GHC.Classes.Eq Network.AWS.Route53Resolver.Types.ResolverQueryLogConfigAssociationError.ResolverQueryLogConfigAssociationError
instance GHC.Read.Read Network.AWS.Route53Resolver.Types.ResolverQueryLogConfigAssociationError.ResolverQueryLogConfigAssociationError
instance GHC.Show.Show Network.AWS.Route53Resolver.Types.ResolverQueryLogConfigAssociationError.ResolverQueryLogConfigAssociationError


module Network.AWS.Route53Resolver.Types.ResolverQueryLogConfigAssociationStatus
newtype ResolverQueryLogConfigAssociationStatus
ResolverQueryLogConfigAssociationStatus' :: Text -> ResolverQueryLogConfigAssociationStatus
[fromResolverQueryLogConfigAssociationStatus] :: ResolverQueryLogConfigAssociationStatus -> Text
pattern ResolverQueryLogConfigAssociationStatus_ACTION_NEEDED :: ResolverQueryLogConfigAssociationStatus
pattern ResolverQueryLogConfigAssociationStatus_ACTIVE :: ResolverQueryLogConfigAssociationStatus
pattern ResolverQueryLogConfigAssociationStatus_CREATING :: ResolverQueryLogConfigAssociationStatus
pattern ResolverQueryLogConfigAssociationStatus_DELETING :: ResolverQueryLogConfigAssociationStatus
pattern ResolverQueryLogConfigAssociationStatus_FAILED :: ResolverQueryLogConfigAssociationStatus
instance Network.AWS.Data.XML.ToXML Network.AWS.Route53Resolver.Types.ResolverQueryLogConfigAssociationStatus.ResolverQueryLogConfigAssociationStatus
instance Network.AWS.Data.XML.FromXML Network.AWS.Route53Resolver.Types.ResolverQueryLogConfigAssociationStatus.ResolverQueryLogConfigAssociationStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Route53Resolver.Types.ResolverQueryLogConfigAssociationStatus.ResolverQueryLogConfigAssociationStatus
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53Resolver.Types.ResolverQueryLogConfigAssociationStatus.ResolverQueryLogConfigAssociationStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Route53Resolver.Types.ResolverQueryLogConfigAssociationStatus.ResolverQueryLogConfigAssociationStatus
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Route53Resolver.Types.ResolverQueryLogConfigAssociationStatus.ResolverQueryLogConfigAssociationStatus
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53Resolver.Types.ResolverQueryLogConfigAssociationStatus.ResolverQueryLogConfigAssociationStatus
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Route53Resolver.Types.ResolverQueryLogConfigAssociationStatus.ResolverQueryLogConfigAssociationStatus
instance Network.AWS.Data.Log.ToLog Network.AWS.Route53Resolver.Types.ResolverQueryLogConfigAssociationStatus.ResolverQueryLogConfigAssociationStatus
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Route53Resolver.Types.ResolverQueryLogConfigAssociationStatus.ResolverQueryLogConfigAssociationStatus
instance Network.AWS.Data.Text.ToText Network.AWS.Route53Resolver.Types.ResolverQueryLogConfigAssociationStatus.ResolverQueryLogConfigAssociationStatus
instance Network.AWS.Data.Text.FromText Network.AWS.Route53Resolver.Types.ResolverQueryLogConfigAssociationStatus.ResolverQueryLogConfigAssociationStatus
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.Types.ResolverQueryLogConfigAssociationStatus.ResolverQueryLogConfigAssociationStatus
instance Data.Hashable.Class.Hashable Network.AWS.Route53Resolver.Types.ResolverQueryLogConfigAssociationStatus.ResolverQueryLogConfigAssociationStatus
instance GHC.Generics.Generic Network.AWS.Route53Resolver.Types.ResolverQueryLogConfigAssociationStatus.ResolverQueryLogConfigAssociationStatus
instance GHC.Classes.Ord Network.AWS.Route53Resolver.Types.ResolverQueryLogConfigAssociationStatus.ResolverQueryLogConfigAssociationStatus
instance GHC.Classes.Eq Network.AWS.Route53Resolver.Types.ResolverQueryLogConfigAssociationStatus.ResolverQueryLogConfigAssociationStatus
instance GHC.Read.Read Network.AWS.Route53Resolver.Types.ResolverQueryLogConfigAssociationStatus.ResolverQueryLogConfigAssociationStatus
instance GHC.Show.Show Network.AWS.Route53Resolver.Types.ResolverQueryLogConfigAssociationStatus.ResolverQueryLogConfigAssociationStatus


module Network.AWS.Route53Resolver.Types.ResolverQueryLogConfigAssociation

-- | In the response to an <a>AssociateResolverQueryLogConfig</a>,
--   <a>DisassociateResolverQueryLogConfig</a>,
--   <a>GetResolverQueryLogConfigAssociation</a>, or
--   <a>ListResolverQueryLogConfigAssociations</a>, request, a complex type
--   that contains settings for a specified association between an Amazon
--   VPC and a query logging configuration.
--   
--   <i>See:</i> <a>newResolverQueryLogConfigAssociation</a> smart
--   constructor.
data ResolverQueryLogConfigAssociation
ResolverQueryLogConfigAssociation' :: Maybe Text -> Maybe ResolverQueryLogConfigAssociationStatus -> Maybe Text -> Maybe Text -> Maybe ResolverQueryLogConfigAssociationError -> Maybe Text -> Maybe Text -> ResolverQueryLogConfigAssociation

-- | The date and time that the VPC was associated with the query logging
--   configuration, in Unix time format and Coordinated Universal Time
--   (UTC).
[$sel:creationTime:ResolverQueryLogConfigAssociation'] :: ResolverQueryLogConfigAssociation -> Maybe Text

-- | The status of the specified query logging association. Valid values
--   include the following:
--   
--   <ul>
--   <li><tt>CREATING</tt>: Resolver is creating an association between an
--   Amazon VPC and a query logging configuration.</li>
--   <li><tt>CREATED</tt>: The association between an Amazon VPC and a
--   query logging configuration was successfully created. Resolver is
--   logging queries that originate in the specified VPC.</li>
--   <li><tt>DELETING</tt>: Resolver is deleting this query logging
--   association.</li>
--   <li><tt>FAILED</tt>: Resolver either couldn't create or couldn't
--   delete the query logging association.</li>
--   </ul>
[$sel:status:ResolverQueryLogConfigAssociation'] :: ResolverQueryLogConfigAssociation -> Maybe ResolverQueryLogConfigAssociationStatus

-- | The ID of the query logging configuration that a VPC is associated
--   with.
[$sel:resolverQueryLogConfigId:ResolverQueryLogConfigAssociation'] :: ResolverQueryLogConfigAssociation -> Maybe Text

-- | The ID of the Amazon VPC that is associated with the query logging
--   configuration.
[$sel:resourceId:ResolverQueryLogConfigAssociation'] :: ResolverQueryLogConfigAssociation -> Maybe Text

-- | If the value of <tt>Status</tt> is <tt>FAILED</tt>, the value of
--   <tt>Error</tt> indicates the cause:
--   
--   <ul>
--   <li><tt>DESTINATION_NOT_FOUND</tt>: The specified destination (for
--   example, an Amazon S3 bucket) was deleted.</li>
--   <li><tt>ACCESS_DENIED</tt>: Permissions don't allow sending logs to
--   the destination.</li>
--   </ul>
--   
--   If the value of <tt>Status</tt> is a value other than <tt>FAILED</tt>,
--   <tt>Error</tt> is null.
[$sel:error:ResolverQueryLogConfigAssociation'] :: ResolverQueryLogConfigAssociation -> Maybe ResolverQueryLogConfigAssociationError

-- | The ID of the query logging association.
[$sel:id:ResolverQueryLogConfigAssociation'] :: ResolverQueryLogConfigAssociation -> Maybe Text

-- | Contains additional information about the error. If the value or
--   <tt>Error</tt> is null, the value of <tt>ErrorMessage</tt> also is
--   null.
[$sel:errorMessage:ResolverQueryLogConfigAssociation'] :: ResolverQueryLogConfigAssociation -> Maybe Text

-- | Create a value of <a>ResolverQueryLogConfigAssociation</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:ResolverQueryLogConfigAssociation'</a>,
--   <a>resolverQueryLogConfigAssociation_creationTime</a> - The date and
--   time that the VPC was associated with the query logging configuration,
--   in Unix time format and Coordinated Universal Time (UTC).
--   
--   <a>$sel:status:ResolverQueryLogConfigAssociation'</a>,
--   <a>resolverQueryLogConfigAssociation_status</a> - The status of the
--   specified query logging association. Valid values include the
--   following:
--   
--   <ul>
--   <li><tt>CREATING</tt>: Resolver is creating an association between an
--   Amazon VPC and a query logging configuration.</li>
--   <li><tt>CREATED</tt>: The association between an Amazon VPC and a
--   query logging configuration was successfully created. Resolver is
--   logging queries that originate in the specified VPC.</li>
--   <li><tt>DELETING</tt>: Resolver is deleting this query logging
--   association.</li>
--   <li><tt>FAILED</tt>: Resolver either couldn't create or couldn't
--   delete the query logging association.</li>
--   </ul>
--   
--   
--   <a>$sel:resolverQueryLogConfigId:ResolverQueryLogConfigAssociation'</a>,
--   <a>resolverQueryLogConfigAssociation_resolverQueryLogConfigId</a> -
--   The ID of the query logging configuration that a VPC is associated
--   with.
--   
--   <a>$sel:resourceId:ResolverQueryLogConfigAssociation'</a>,
--   <a>resolverQueryLogConfigAssociation_resourceId</a> - The ID of the
--   Amazon VPC that is associated with the query logging configuration.
--   
--   <a>$sel:error:ResolverQueryLogConfigAssociation'</a>,
--   <a>resolverQueryLogConfigAssociation_error</a> - If the value of
--   <tt>Status</tt> is <tt>FAILED</tt>, the value of <tt>Error</tt>
--   indicates the cause:
--   
--   <ul>
--   <li><tt>DESTINATION_NOT_FOUND</tt>: The specified destination (for
--   example, an Amazon S3 bucket) was deleted.</li>
--   <li><tt>ACCESS_DENIED</tt>: Permissions don't allow sending logs to
--   the destination.</li>
--   </ul>
--   
--   If the value of <tt>Status</tt> is a value other than <tt>FAILED</tt>,
--   <tt>Error</tt> is null.
--   
--   <a>$sel:id:ResolverQueryLogConfigAssociation'</a>,
--   <a>resolverQueryLogConfigAssociation_id</a> - The ID of the query
--   logging association.
--   
--   <a>$sel:errorMessage:ResolverQueryLogConfigAssociation'</a>,
--   <a>resolverQueryLogConfigAssociation_errorMessage</a> - Contains
--   additional information about the error. If the value or <tt>Error</tt>
--   is null, the value of <tt>ErrorMessage</tt> also is null.
newResolverQueryLogConfigAssociation :: ResolverQueryLogConfigAssociation

-- | The date and time that the VPC was associated with the query logging
--   configuration, in Unix time format and Coordinated Universal Time
--   (UTC).
resolverQueryLogConfigAssociation_creationTime :: Lens' ResolverQueryLogConfigAssociation (Maybe Text)

-- | The status of the specified query logging association. Valid values
--   include the following:
--   
--   <ul>
--   <li><tt>CREATING</tt>: Resolver is creating an association between an
--   Amazon VPC and a query logging configuration.</li>
--   <li><tt>CREATED</tt>: The association between an Amazon VPC and a
--   query logging configuration was successfully created. Resolver is
--   logging queries that originate in the specified VPC.</li>
--   <li><tt>DELETING</tt>: Resolver is deleting this query logging
--   association.</li>
--   <li><tt>FAILED</tt>: Resolver either couldn't create or couldn't
--   delete the query logging association.</li>
--   </ul>
resolverQueryLogConfigAssociation_status :: Lens' ResolverQueryLogConfigAssociation (Maybe ResolverQueryLogConfigAssociationStatus)

-- | The ID of the query logging configuration that a VPC is associated
--   with.
resolverQueryLogConfigAssociation_resolverQueryLogConfigId :: Lens' ResolverQueryLogConfigAssociation (Maybe Text)

-- | The ID of the Amazon VPC that is associated with the query logging
--   configuration.
resolverQueryLogConfigAssociation_resourceId :: Lens' ResolverQueryLogConfigAssociation (Maybe Text)

-- | If the value of <tt>Status</tt> is <tt>FAILED</tt>, the value of
--   <tt>Error</tt> indicates the cause:
--   
--   <ul>
--   <li><tt>DESTINATION_NOT_FOUND</tt>: The specified destination (for
--   example, an Amazon S3 bucket) was deleted.</li>
--   <li><tt>ACCESS_DENIED</tt>: Permissions don't allow sending logs to
--   the destination.</li>
--   </ul>
--   
--   If the value of <tt>Status</tt> is a value other than <tt>FAILED</tt>,
--   <tt>Error</tt> is null.
resolverQueryLogConfigAssociation_error :: Lens' ResolverQueryLogConfigAssociation (Maybe ResolverQueryLogConfigAssociationError)

-- | The ID of the query logging association.
resolverQueryLogConfigAssociation_id :: Lens' ResolverQueryLogConfigAssociation (Maybe Text)

-- | Contains additional information about the error. If the value or
--   <tt>Error</tt> is null, the value of <tt>ErrorMessage</tt> also is
--   null.
resolverQueryLogConfigAssociation_errorMessage :: Lens' ResolverQueryLogConfigAssociation (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Route53Resolver.Types.ResolverQueryLogConfigAssociation.ResolverQueryLogConfigAssociation
instance GHC.Show.Show Network.AWS.Route53Resolver.Types.ResolverQueryLogConfigAssociation.ResolverQueryLogConfigAssociation
instance GHC.Read.Read Network.AWS.Route53Resolver.Types.ResolverQueryLogConfigAssociation.ResolverQueryLogConfigAssociation
instance GHC.Classes.Eq Network.AWS.Route53Resolver.Types.ResolverQueryLogConfigAssociation.ResolverQueryLogConfigAssociation
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Route53Resolver.Types.ResolverQueryLogConfigAssociation.ResolverQueryLogConfigAssociation
instance Data.Hashable.Class.Hashable Network.AWS.Route53Resolver.Types.ResolverQueryLogConfigAssociation.ResolverQueryLogConfigAssociation
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.Types.ResolverQueryLogConfigAssociation.ResolverQueryLogConfigAssociation


module Network.AWS.Route53Resolver.Types.ResolverQueryLogConfigStatus
newtype ResolverQueryLogConfigStatus
ResolverQueryLogConfigStatus' :: Text -> ResolverQueryLogConfigStatus
[fromResolverQueryLogConfigStatus] :: ResolverQueryLogConfigStatus -> Text
pattern ResolverQueryLogConfigStatus_CREATED :: ResolverQueryLogConfigStatus
pattern ResolverQueryLogConfigStatus_CREATING :: ResolverQueryLogConfigStatus
pattern ResolverQueryLogConfigStatus_DELETING :: ResolverQueryLogConfigStatus
pattern ResolverQueryLogConfigStatus_FAILED :: ResolverQueryLogConfigStatus
instance Network.AWS.Data.XML.ToXML Network.AWS.Route53Resolver.Types.ResolverQueryLogConfigStatus.ResolverQueryLogConfigStatus
instance Network.AWS.Data.XML.FromXML Network.AWS.Route53Resolver.Types.ResolverQueryLogConfigStatus.ResolverQueryLogConfigStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Route53Resolver.Types.ResolverQueryLogConfigStatus.ResolverQueryLogConfigStatus
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53Resolver.Types.ResolverQueryLogConfigStatus.ResolverQueryLogConfigStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Route53Resolver.Types.ResolverQueryLogConfigStatus.ResolverQueryLogConfigStatus
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Route53Resolver.Types.ResolverQueryLogConfigStatus.ResolverQueryLogConfigStatus
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53Resolver.Types.ResolverQueryLogConfigStatus.ResolverQueryLogConfigStatus
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Route53Resolver.Types.ResolverQueryLogConfigStatus.ResolverQueryLogConfigStatus
instance Network.AWS.Data.Log.ToLog Network.AWS.Route53Resolver.Types.ResolverQueryLogConfigStatus.ResolverQueryLogConfigStatus
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Route53Resolver.Types.ResolverQueryLogConfigStatus.ResolverQueryLogConfigStatus
instance Network.AWS.Data.Text.ToText Network.AWS.Route53Resolver.Types.ResolverQueryLogConfigStatus.ResolverQueryLogConfigStatus
instance Network.AWS.Data.Text.FromText Network.AWS.Route53Resolver.Types.ResolverQueryLogConfigStatus.ResolverQueryLogConfigStatus
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.Types.ResolverQueryLogConfigStatus.ResolverQueryLogConfigStatus
instance Data.Hashable.Class.Hashable Network.AWS.Route53Resolver.Types.ResolverQueryLogConfigStatus.ResolverQueryLogConfigStatus
instance GHC.Generics.Generic Network.AWS.Route53Resolver.Types.ResolverQueryLogConfigStatus.ResolverQueryLogConfigStatus
instance GHC.Classes.Ord Network.AWS.Route53Resolver.Types.ResolverQueryLogConfigStatus.ResolverQueryLogConfigStatus
instance GHC.Classes.Eq Network.AWS.Route53Resolver.Types.ResolverQueryLogConfigStatus.ResolverQueryLogConfigStatus
instance GHC.Read.Read Network.AWS.Route53Resolver.Types.ResolverQueryLogConfigStatus.ResolverQueryLogConfigStatus
instance GHC.Show.Show Network.AWS.Route53Resolver.Types.ResolverQueryLogConfigStatus.ResolverQueryLogConfigStatus


module Network.AWS.Route53Resolver.Types.ResolverRuleAssociationStatus
newtype ResolverRuleAssociationStatus
ResolverRuleAssociationStatus' :: Text -> ResolverRuleAssociationStatus
[fromResolverRuleAssociationStatus] :: ResolverRuleAssociationStatus -> Text
pattern ResolverRuleAssociationStatus_COMPLETE :: ResolverRuleAssociationStatus
pattern ResolverRuleAssociationStatus_CREATING :: ResolverRuleAssociationStatus
pattern ResolverRuleAssociationStatus_DELETING :: ResolverRuleAssociationStatus
pattern ResolverRuleAssociationStatus_FAILED :: ResolverRuleAssociationStatus
pattern ResolverRuleAssociationStatus_OVERRIDDEN :: ResolverRuleAssociationStatus
instance Network.AWS.Data.XML.ToXML Network.AWS.Route53Resolver.Types.ResolverRuleAssociationStatus.ResolverRuleAssociationStatus
instance Network.AWS.Data.XML.FromXML Network.AWS.Route53Resolver.Types.ResolverRuleAssociationStatus.ResolverRuleAssociationStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Route53Resolver.Types.ResolverRuleAssociationStatus.ResolverRuleAssociationStatus
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53Resolver.Types.ResolverRuleAssociationStatus.ResolverRuleAssociationStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Route53Resolver.Types.ResolverRuleAssociationStatus.ResolverRuleAssociationStatus
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Route53Resolver.Types.ResolverRuleAssociationStatus.ResolverRuleAssociationStatus
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53Resolver.Types.ResolverRuleAssociationStatus.ResolverRuleAssociationStatus
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Route53Resolver.Types.ResolverRuleAssociationStatus.ResolverRuleAssociationStatus
instance Network.AWS.Data.Log.ToLog Network.AWS.Route53Resolver.Types.ResolverRuleAssociationStatus.ResolverRuleAssociationStatus
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Route53Resolver.Types.ResolverRuleAssociationStatus.ResolverRuleAssociationStatus
instance Network.AWS.Data.Text.ToText Network.AWS.Route53Resolver.Types.ResolverRuleAssociationStatus.ResolverRuleAssociationStatus
instance Network.AWS.Data.Text.FromText Network.AWS.Route53Resolver.Types.ResolverRuleAssociationStatus.ResolverRuleAssociationStatus
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.Types.ResolverRuleAssociationStatus.ResolverRuleAssociationStatus
instance Data.Hashable.Class.Hashable Network.AWS.Route53Resolver.Types.ResolverRuleAssociationStatus.ResolverRuleAssociationStatus
instance GHC.Generics.Generic Network.AWS.Route53Resolver.Types.ResolverRuleAssociationStatus.ResolverRuleAssociationStatus
instance GHC.Classes.Ord Network.AWS.Route53Resolver.Types.ResolverRuleAssociationStatus.ResolverRuleAssociationStatus
instance GHC.Classes.Eq Network.AWS.Route53Resolver.Types.ResolverRuleAssociationStatus.ResolverRuleAssociationStatus
instance GHC.Read.Read Network.AWS.Route53Resolver.Types.ResolverRuleAssociationStatus.ResolverRuleAssociationStatus
instance GHC.Show.Show Network.AWS.Route53Resolver.Types.ResolverRuleAssociationStatus.ResolverRuleAssociationStatus


module Network.AWS.Route53Resolver.Types.ResolverRuleAssociation

-- | In the response to an <a>AssociateResolverRule</a>,
--   <a>DisassociateResolverRule</a>, or
--   <a>ListResolverRuleAssociations</a> request, provides information
--   about an association between a Resolver rule and a VPC. The
--   association determines which DNS queries that originate in the VPC are
--   forwarded to your network.
--   
--   <i>See:</i> <a>newResolverRuleAssociation</a> smart constructor.
data ResolverRuleAssociation
ResolverRuleAssociation' :: Maybe ResolverRuleAssociationStatus -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> ResolverRuleAssociation

-- | A code that specifies the current status of the association between a
--   Resolver rule and a VPC.
[$sel:status:ResolverRuleAssociation'] :: ResolverRuleAssociation -> Maybe ResolverRuleAssociationStatus

-- | The ID of the Resolver rule that you associated with the VPC that is
--   specified by <tt>VPCId</tt>.
[$sel:resolverRuleId:ResolverRuleAssociation'] :: ResolverRuleAssociation -> Maybe Text

-- | The ID of the VPC that you associated the Resolver rule with.
[$sel:vPCId:ResolverRuleAssociation'] :: ResolverRuleAssociation -> Maybe Text

-- | A detailed description of the status of the association between a
--   Resolver rule and a VPC.
[$sel:statusMessage:ResolverRuleAssociation'] :: ResolverRuleAssociation -> Maybe Text

-- | The name of an association between a Resolver rule and a VPC.
[$sel:name:ResolverRuleAssociation'] :: ResolverRuleAssociation -> Maybe Text

-- | The ID of the association between a Resolver rule and a VPC. Resolver
--   assigns this value when you submit an <a>AssociateResolverRule</a>
--   request.
[$sel:id:ResolverRuleAssociation'] :: ResolverRuleAssociation -> Maybe Text

-- | Create a value of <a>ResolverRuleAssociation</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:ResolverRuleAssociation'</a>,
--   <a>resolverRuleAssociation_status</a> - A code that specifies the
--   current status of the association between a Resolver rule and a VPC.
--   
--   <a>$sel:resolverRuleId:ResolverRuleAssociation'</a>,
--   <a>resolverRuleAssociation_resolverRuleId</a> - The ID of the Resolver
--   rule that you associated with the VPC that is specified by
--   <tt>VPCId</tt>.
--   
--   <a>$sel:vPCId:ResolverRuleAssociation'</a>,
--   <a>resolverRuleAssociation_vPCId</a> - The ID of the VPC that you
--   associated the Resolver rule with.
--   
--   <a>$sel:statusMessage:ResolverRuleAssociation'</a>,
--   <a>resolverRuleAssociation_statusMessage</a> - A detailed description
--   of the status of the association between a Resolver rule and a VPC.
--   
--   <a>$sel:name:ResolverRuleAssociation'</a>,
--   <a>resolverRuleAssociation_name</a> - The name of an association
--   between a Resolver rule and a VPC.
--   
--   <a>$sel:id:ResolverRuleAssociation'</a>,
--   <a>resolverRuleAssociation_id</a> - The ID of the association between
--   a Resolver rule and a VPC. Resolver assigns this value when you submit
--   an <a>AssociateResolverRule</a> request.
newResolverRuleAssociation :: ResolverRuleAssociation

-- | A code that specifies the current status of the association between a
--   Resolver rule and a VPC.
resolverRuleAssociation_status :: Lens' ResolverRuleAssociation (Maybe ResolverRuleAssociationStatus)

-- | The ID of the Resolver rule that you associated with the VPC that is
--   specified by <tt>VPCId</tt>.
resolverRuleAssociation_resolverRuleId :: Lens' ResolverRuleAssociation (Maybe Text)

-- | The ID of the VPC that you associated the Resolver rule with.
resolverRuleAssociation_vPCId :: Lens' ResolverRuleAssociation (Maybe Text)

-- | A detailed description of the status of the association between a
--   Resolver rule and a VPC.
resolverRuleAssociation_statusMessage :: Lens' ResolverRuleAssociation (Maybe Text)

-- | The name of an association between a Resolver rule and a VPC.
resolverRuleAssociation_name :: Lens' ResolverRuleAssociation (Maybe Text)

-- | The ID of the association between a Resolver rule and a VPC. Resolver
--   assigns this value when you submit an <a>AssociateResolverRule</a>
--   request.
resolverRuleAssociation_id :: Lens' ResolverRuleAssociation (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Route53Resolver.Types.ResolverRuleAssociation.ResolverRuleAssociation
instance GHC.Show.Show Network.AWS.Route53Resolver.Types.ResolverRuleAssociation.ResolverRuleAssociation
instance GHC.Read.Read Network.AWS.Route53Resolver.Types.ResolverRuleAssociation.ResolverRuleAssociation
instance GHC.Classes.Eq Network.AWS.Route53Resolver.Types.ResolverRuleAssociation.ResolverRuleAssociation
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Route53Resolver.Types.ResolverRuleAssociation.ResolverRuleAssociation
instance Data.Hashable.Class.Hashable Network.AWS.Route53Resolver.Types.ResolverRuleAssociation.ResolverRuleAssociation
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.Types.ResolverRuleAssociation.ResolverRuleAssociation


module Network.AWS.Route53Resolver.Types.ResolverRuleStatus
newtype ResolverRuleStatus
ResolverRuleStatus' :: Text -> ResolverRuleStatus
[fromResolverRuleStatus] :: ResolverRuleStatus -> Text
pattern ResolverRuleStatus_COMPLETE :: ResolverRuleStatus
pattern ResolverRuleStatus_DELETING :: ResolverRuleStatus
pattern ResolverRuleStatus_FAILED :: ResolverRuleStatus
pattern ResolverRuleStatus_UPDATING :: ResolverRuleStatus
instance Network.AWS.Data.XML.ToXML Network.AWS.Route53Resolver.Types.ResolverRuleStatus.ResolverRuleStatus
instance Network.AWS.Data.XML.FromXML Network.AWS.Route53Resolver.Types.ResolverRuleStatus.ResolverRuleStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Route53Resolver.Types.ResolverRuleStatus.ResolverRuleStatus
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53Resolver.Types.ResolverRuleStatus.ResolverRuleStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Route53Resolver.Types.ResolverRuleStatus.ResolverRuleStatus
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Route53Resolver.Types.ResolverRuleStatus.ResolverRuleStatus
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53Resolver.Types.ResolverRuleStatus.ResolverRuleStatus
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Route53Resolver.Types.ResolverRuleStatus.ResolverRuleStatus
instance Network.AWS.Data.Log.ToLog Network.AWS.Route53Resolver.Types.ResolverRuleStatus.ResolverRuleStatus
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Route53Resolver.Types.ResolverRuleStatus.ResolverRuleStatus
instance Network.AWS.Data.Text.ToText Network.AWS.Route53Resolver.Types.ResolverRuleStatus.ResolverRuleStatus
instance Network.AWS.Data.Text.FromText Network.AWS.Route53Resolver.Types.ResolverRuleStatus.ResolverRuleStatus
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.Types.ResolverRuleStatus.ResolverRuleStatus
instance Data.Hashable.Class.Hashable Network.AWS.Route53Resolver.Types.ResolverRuleStatus.ResolverRuleStatus
instance GHC.Generics.Generic Network.AWS.Route53Resolver.Types.ResolverRuleStatus.ResolverRuleStatus
instance GHC.Classes.Ord Network.AWS.Route53Resolver.Types.ResolverRuleStatus.ResolverRuleStatus
instance GHC.Classes.Eq Network.AWS.Route53Resolver.Types.ResolverRuleStatus.ResolverRuleStatus
instance GHC.Read.Read Network.AWS.Route53Resolver.Types.ResolverRuleStatus.ResolverRuleStatus
instance GHC.Show.Show Network.AWS.Route53Resolver.Types.ResolverRuleStatus.ResolverRuleStatus


module Network.AWS.Route53Resolver.Types.RuleTypeOption
newtype RuleTypeOption
RuleTypeOption' :: Text -> RuleTypeOption
[fromRuleTypeOption] :: RuleTypeOption -> Text
pattern RuleTypeOption_FORWARD :: RuleTypeOption
pattern RuleTypeOption_RECURSIVE :: RuleTypeOption
pattern RuleTypeOption_SYSTEM :: RuleTypeOption
instance Network.AWS.Data.XML.ToXML Network.AWS.Route53Resolver.Types.RuleTypeOption.RuleTypeOption
instance Network.AWS.Data.XML.FromXML Network.AWS.Route53Resolver.Types.RuleTypeOption.RuleTypeOption
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Route53Resolver.Types.RuleTypeOption.RuleTypeOption
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53Resolver.Types.RuleTypeOption.RuleTypeOption
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Route53Resolver.Types.RuleTypeOption.RuleTypeOption
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Route53Resolver.Types.RuleTypeOption.RuleTypeOption
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53Resolver.Types.RuleTypeOption.RuleTypeOption
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Route53Resolver.Types.RuleTypeOption.RuleTypeOption
instance Network.AWS.Data.Log.ToLog Network.AWS.Route53Resolver.Types.RuleTypeOption.RuleTypeOption
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Route53Resolver.Types.RuleTypeOption.RuleTypeOption
instance Network.AWS.Data.Text.ToText Network.AWS.Route53Resolver.Types.RuleTypeOption.RuleTypeOption
instance Network.AWS.Data.Text.FromText Network.AWS.Route53Resolver.Types.RuleTypeOption.RuleTypeOption
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.Types.RuleTypeOption.RuleTypeOption
instance Data.Hashable.Class.Hashable Network.AWS.Route53Resolver.Types.RuleTypeOption.RuleTypeOption
instance GHC.Generics.Generic Network.AWS.Route53Resolver.Types.RuleTypeOption.RuleTypeOption
instance GHC.Classes.Ord Network.AWS.Route53Resolver.Types.RuleTypeOption.RuleTypeOption
instance GHC.Classes.Eq Network.AWS.Route53Resolver.Types.RuleTypeOption.RuleTypeOption
instance GHC.Read.Read Network.AWS.Route53Resolver.Types.RuleTypeOption.RuleTypeOption
instance GHC.Show.Show Network.AWS.Route53Resolver.Types.RuleTypeOption.RuleTypeOption


module Network.AWS.Route53Resolver.Types.ShareStatus
newtype ShareStatus
ShareStatus' :: Text -> ShareStatus
[fromShareStatus] :: ShareStatus -> Text
pattern ShareStatus_NOT_SHARED :: ShareStatus
pattern ShareStatus_SHARED_BY_ME :: ShareStatus
pattern ShareStatus_SHARED_WITH_ME :: ShareStatus
instance Network.AWS.Data.XML.ToXML Network.AWS.Route53Resolver.Types.ShareStatus.ShareStatus
instance Network.AWS.Data.XML.FromXML Network.AWS.Route53Resolver.Types.ShareStatus.ShareStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Route53Resolver.Types.ShareStatus.ShareStatus
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53Resolver.Types.ShareStatus.ShareStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Route53Resolver.Types.ShareStatus.ShareStatus
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Route53Resolver.Types.ShareStatus.ShareStatus
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53Resolver.Types.ShareStatus.ShareStatus
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Route53Resolver.Types.ShareStatus.ShareStatus
instance Network.AWS.Data.Log.ToLog Network.AWS.Route53Resolver.Types.ShareStatus.ShareStatus
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Route53Resolver.Types.ShareStatus.ShareStatus
instance Network.AWS.Data.Text.ToText Network.AWS.Route53Resolver.Types.ShareStatus.ShareStatus
instance Network.AWS.Data.Text.FromText Network.AWS.Route53Resolver.Types.ShareStatus.ShareStatus
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.Types.ShareStatus.ShareStatus
instance Data.Hashable.Class.Hashable Network.AWS.Route53Resolver.Types.ShareStatus.ShareStatus
instance GHC.Generics.Generic Network.AWS.Route53Resolver.Types.ShareStatus.ShareStatus
instance GHC.Classes.Ord Network.AWS.Route53Resolver.Types.ShareStatus.ShareStatus
instance GHC.Classes.Eq Network.AWS.Route53Resolver.Types.ShareStatus.ShareStatus
instance GHC.Read.Read Network.AWS.Route53Resolver.Types.ShareStatus.ShareStatus
instance GHC.Show.Show Network.AWS.Route53Resolver.Types.ShareStatus.ShareStatus


module Network.AWS.Route53Resolver.Types.ResolverQueryLogConfig

-- | In the response to a <a>CreateResolverQueryLogConfig</a>,
--   <a>DeleteResolverQueryLogConfig</a>, <a>GetResolverQueryLogConfig</a>,
--   or <a>ListResolverQueryLogConfigs</a> request, a complex type that
--   contains settings for one query logging configuration.
--   
--   <i>See:</i> <a>newResolverQueryLogConfig</a> smart constructor.
data ResolverQueryLogConfig
ResolverQueryLogConfig' :: Maybe Text -> Maybe ResolverQueryLogConfigStatus -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe ShareStatus -> Maybe Text -> Maybe Text -> Maybe Text -> ResolverQueryLogConfig

-- | The date and time that the query logging configuration was created, in
--   Unix time format and Coordinated Universal Time (UTC).
[$sel:creationTime:ResolverQueryLogConfig'] :: ResolverQueryLogConfig -> Maybe Text

-- | The status of the specified query logging configuration. Valid values
--   include the following:
--   
--   <ul>
--   <li><tt>CREATING</tt>: Resolver is creating the query logging
--   configuration.</li>
--   <li><tt>CREATED</tt>: The query logging configuration was successfully
--   created. Resolver is logging queries that originate in the specified
--   VPC.</li>
--   <li><tt>DELETING</tt>: Resolver is deleting this query logging
--   configuration.</li>
--   <li><tt>FAILED</tt>: Resolver can't deliver logs to the location that
--   is specified in the query logging configuration. Here are two common
--   causes:<ul><li>The specified destination (for example, an Amazon S3
--   bucket) was deleted.</li><li>Permissions don't allow sending logs to
--   the destination.</li></ul></li>
--   </ul>
[$sel:status:ResolverQueryLogConfig'] :: ResolverQueryLogConfig -> Maybe ResolverQueryLogConfigStatus

-- | The number of VPCs that are associated with the query logging
--   configuration.
[$sel:associationCount:ResolverQueryLogConfig'] :: ResolverQueryLogConfig -> Maybe Int

-- | The ARN for the query logging configuration.
[$sel:arn:ResolverQueryLogConfig'] :: ResolverQueryLogConfig -> Maybe Text

-- | A unique string that identifies the request that created the query
--   logging configuration. The <tt>CreatorRequestId</tt> allows failed
--   requests to be retried without the risk of running the operation
--   twice.
[$sel:creatorRequestId:ResolverQueryLogConfig'] :: ResolverQueryLogConfig -> Maybe Text

-- | The ARN of the resource that you want Resolver to send query logs: an
--   Amazon S3 bucket, a CloudWatch Logs log group, or a Kinesis Data
--   Firehose delivery stream.
[$sel:destinationArn:ResolverQueryLogConfig'] :: ResolverQueryLogConfig -> Maybe Text

-- | An indication of whether the query logging configuration is shared
--   with other Amazon Web Services accounts, or was shared with the
--   current account by another Amazon Web Services account. Sharing is
--   configured through Resource Access Manager (RAM).
[$sel:shareStatus:ResolverQueryLogConfig'] :: ResolverQueryLogConfig -> Maybe ShareStatus

-- | The Amazon Web Services account ID for the account that created the
--   query logging configuration.
[$sel:ownerId:ResolverQueryLogConfig'] :: ResolverQueryLogConfig -> Maybe Text

-- | The name of the query logging configuration.
[$sel:name:ResolverQueryLogConfig'] :: ResolverQueryLogConfig -> Maybe Text

-- | The ID for the query logging configuration.
[$sel:id:ResolverQueryLogConfig'] :: ResolverQueryLogConfig -> Maybe Text

-- | Create a value of <a>ResolverQueryLogConfig</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:ResolverQueryLogConfig'</a>,
--   <a>resolverQueryLogConfig_creationTime</a> - The date and time that
--   the query logging configuration was created, in Unix time format and
--   Coordinated Universal Time (UTC).
--   
--   <a>$sel:status:ResolverQueryLogConfig'</a>,
--   <a>resolverQueryLogConfig_status</a> - The status of the specified
--   query logging configuration. Valid values include the following:
--   
--   <ul>
--   <li><tt>CREATING</tt>: Resolver is creating the query logging
--   configuration.</li>
--   <li><tt>CREATED</tt>: The query logging configuration was successfully
--   created. Resolver is logging queries that originate in the specified
--   VPC.</li>
--   <li><tt>DELETING</tt>: Resolver is deleting this query logging
--   configuration.</li>
--   <li><tt>FAILED</tt>: Resolver can't deliver logs to the location that
--   is specified in the query logging configuration. Here are two common
--   causes:<ul><li>The specified destination (for example, an Amazon S3
--   bucket) was deleted.</li><li>Permissions don't allow sending logs to
--   the destination.</li></ul></li>
--   </ul>
--   
--   <a>$sel:associationCount:ResolverQueryLogConfig'</a>,
--   <a>resolverQueryLogConfig_associationCount</a> - The number of VPCs
--   that are associated with the query logging configuration.
--   
--   <a>$sel:arn:ResolverQueryLogConfig'</a>,
--   <a>resolverQueryLogConfig_arn</a> - The ARN for the query logging
--   configuration.
--   
--   <a>$sel:creatorRequestId:ResolverQueryLogConfig'</a>,
--   <a>resolverQueryLogConfig_creatorRequestId</a> - A unique string that
--   identifies the request that created the query logging configuration.
--   The <tt>CreatorRequestId</tt> allows failed requests to be retried
--   without the risk of running the operation twice.
--   
--   <a>$sel:destinationArn:ResolverQueryLogConfig'</a>,
--   <a>resolverQueryLogConfig_destinationArn</a> - The ARN of the resource
--   that you want Resolver to send query logs: an Amazon S3 bucket, a
--   CloudWatch Logs log group, or a Kinesis Data Firehose delivery stream.
--   
--   <a>$sel:shareStatus:ResolverQueryLogConfig'</a>,
--   <a>resolverQueryLogConfig_shareStatus</a> - An indication of whether
--   the query logging configuration is shared with other Amazon Web
--   Services accounts, or was shared with the current account by another
--   Amazon Web Services account. Sharing is configured through Resource
--   Access Manager (RAM).
--   
--   <a>$sel:ownerId:ResolverQueryLogConfig'</a>,
--   <a>resolverQueryLogConfig_ownerId</a> - The Amazon Web Services
--   account ID for the account that created the query logging
--   configuration.
--   
--   <a>$sel:name:ResolverQueryLogConfig'</a>,
--   <a>resolverQueryLogConfig_name</a> - The name of the query logging
--   configuration.
--   
--   <a>$sel:id:ResolverQueryLogConfig'</a>,
--   <a>resolverQueryLogConfig_id</a> - The ID for the query logging
--   configuration.
newResolverQueryLogConfig :: ResolverQueryLogConfig

-- | The date and time that the query logging configuration was created, in
--   Unix time format and Coordinated Universal Time (UTC).
resolverQueryLogConfig_creationTime :: Lens' ResolverQueryLogConfig (Maybe Text)

-- | The status of the specified query logging configuration. Valid values
--   include the following:
--   
--   <ul>
--   <li><tt>CREATING</tt>: Resolver is creating the query logging
--   configuration.</li>
--   <li><tt>CREATED</tt>: The query logging configuration was successfully
--   created. Resolver is logging queries that originate in the specified
--   VPC.</li>
--   <li><tt>DELETING</tt>: Resolver is deleting this query logging
--   configuration.</li>
--   <li><tt>FAILED</tt>: Resolver can't deliver logs to the location that
--   is specified in the query logging configuration. Here are two common
--   causes:<ul><li>The specified destination (for example, an Amazon S3
--   bucket) was deleted.</li><li>Permissions don't allow sending logs to
--   the destination.</li></ul></li>
--   </ul>
resolverQueryLogConfig_status :: Lens' ResolverQueryLogConfig (Maybe ResolverQueryLogConfigStatus)

-- | The number of VPCs that are associated with the query logging
--   configuration.
resolverQueryLogConfig_associationCount :: Lens' ResolverQueryLogConfig (Maybe Int)

-- | The ARN for the query logging configuration.
resolverQueryLogConfig_arn :: Lens' ResolverQueryLogConfig (Maybe Text)

-- | A unique string that identifies the request that created the query
--   logging configuration. The <tt>CreatorRequestId</tt> allows failed
--   requests to be retried without the risk of running the operation
--   twice.
resolverQueryLogConfig_creatorRequestId :: Lens' ResolverQueryLogConfig (Maybe Text)

-- | The ARN of the resource that you want Resolver to send query logs: an
--   Amazon S3 bucket, a CloudWatch Logs log group, or a Kinesis Data
--   Firehose delivery stream.
resolverQueryLogConfig_destinationArn :: Lens' ResolverQueryLogConfig (Maybe Text)

-- | An indication of whether the query logging configuration is shared
--   with other Amazon Web Services accounts, or was shared with the
--   current account by another Amazon Web Services account. Sharing is
--   configured through Resource Access Manager (RAM).
resolverQueryLogConfig_shareStatus :: Lens' ResolverQueryLogConfig (Maybe ShareStatus)

-- | The Amazon Web Services account ID for the account that created the
--   query logging configuration.
resolverQueryLogConfig_ownerId :: Lens' ResolverQueryLogConfig (Maybe Text)

-- | The name of the query logging configuration.
resolverQueryLogConfig_name :: Lens' ResolverQueryLogConfig (Maybe Text)

-- | The ID for the query logging configuration.
resolverQueryLogConfig_id :: Lens' ResolverQueryLogConfig (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Route53Resolver.Types.ResolverQueryLogConfig.ResolverQueryLogConfig
instance GHC.Show.Show Network.AWS.Route53Resolver.Types.ResolverQueryLogConfig.ResolverQueryLogConfig
instance GHC.Read.Read Network.AWS.Route53Resolver.Types.ResolverQueryLogConfig.ResolverQueryLogConfig
instance GHC.Classes.Eq Network.AWS.Route53Resolver.Types.ResolverQueryLogConfig.ResolverQueryLogConfig
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Route53Resolver.Types.ResolverQueryLogConfig.ResolverQueryLogConfig
instance Data.Hashable.Class.Hashable Network.AWS.Route53Resolver.Types.ResolverQueryLogConfig.ResolverQueryLogConfig
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.Types.ResolverQueryLogConfig.ResolverQueryLogConfig


module Network.AWS.Route53Resolver.Types.FirewallRuleGroupMetadata

-- | Minimal high-level information for a firewall rule group. The action
--   ListFirewallRuleGroups returns an array of these objects.
--   
--   To retrieve full information for a firewall rule group, call
--   GetFirewallRuleGroup and ListFirewallRules.
--   
--   <i>See:</i> <a>newFirewallRuleGroupMetadata</a> smart constructor.
data FirewallRuleGroupMetadata
FirewallRuleGroupMetadata' :: Maybe Text -> Maybe Text -> Maybe ShareStatus -> Maybe Text -> Maybe Text -> Maybe Text -> FirewallRuleGroupMetadata

-- | The ARN (Amazon Resource Name) of the rule group.
[$sel:arn:FirewallRuleGroupMetadata'] :: FirewallRuleGroupMetadata -> Maybe Text

-- | A unique string defined by you to identify the request. This allows
--   you to retry failed requests without the risk of running the operation
--   twice. This can be any unique string, for example, a timestamp.
[$sel:creatorRequestId:FirewallRuleGroupMetadata'] :: FirewallRuleGroupMetadata -> Maybe Text

-- | Whether the rule group is shared with other Amazon Web Services
--   accounts, or was shared with the current account by another Amazon Web
--   Services account. Sharing is configured through Resource Access
--   Manager (RAM).
[$sel:shareStatus:FirewallRuleGroupMetadata'] :: FirewallRuleGroupMetadata -> Maybe ShareStatus

-- | The Amazon Web Services account ID for the account that created the
--   rule group. When a rule group is shared with your account, this is the
--   account that has shared the rule group with you.
[$sel:ownerId:FirewallRuleGroupMetadata'] :: FirewallRuleGroupMetadata -> Maybe Text

-- | The name of the rule group.
[$sel:name:FirewallRuleGroupMetadata'] :: FirewallRuleGroupMetadata -> Maybe Text

-- | The ID of the rule group.
[$sel:id:FirewallRuleGroupMetadata'] :: FirewallRuleGroupMetadata -> Maybe Text

-- | Create a value of <a>FirewallRuleGroupMetadata</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:FirewallRuleGroupMetadata'</a>,
--   <a>firewallRuleGroupMetadata_arn</a> - The ARN (Amazon Resource Name)
--   of the rule group.
--   
--   <a>$sel:creatorRequestId:FirewallRuleGroupMetadata'</a>,
--   <a>firewallRuleGroupMetadata_creatorRequestId</a> - A unique string
--   defined by you to identify the request. This allows you to retry
--   failed requests without the risk of running the operation twice. This
--   can be any unique string, for example, a timestamp.
--   
--   <a>$sel:shareStatus:FirewallRuleGroupMetadata'</a>,
--   <a>firewallRuleGroupMetadata_shareStatus</a> - Whether the rule group
--   is shared with other Amazon Web Services accounts, or was shared with
--   the current account by another Amazon Web Services account. Sharing is
--   configured through Resource Access Manager (RAM).
--   
--   <a>$sel:ownerId:FirewallRuleGroupMetadata'</a>,
--   <a>firewallRuleGroupMetadata_ownerId</a> - The Amazon Web Services
--   account ID for the account that created the rule group. When a rule
--   group is shared with your account, this is the account that has shared
--   the rule group with you.
--   
--   <a>$sel:name:FirewallRuleGroupMetadata'</a>,
--   <a>firewallRuleGroupMetadata_name</a> - The name of the rule group.
--   
--   <a>$sel:id:FirewallRuleGroupMetadata'</a>,
--   <a>firewallRuleGroupMetadata_id</a> - The ID of the rule group.
newFirewallRuleGroupMetadata :: FirewallRuleGroupMetadata

-- | The ARN (Amazon Resource Name) of the rule group.
firewallRuleGroupMetadata_arn :: Lens' FirewallRuleGroupMetadata (Maybe Text)

-- | A unique string defined by you to identify the request. This allows
--   you to retry failed requests without the risk of running the operation
--   twice. This can be any unique string, for example, a timestamp.
firewallRuleGroupMetadata_creatorRequestId :: Lens' FirewallRuleGroupMetadata (Maybe Text)

-- | Whether the rule group is shared with other Amazon Web Services
--   accounts, or was shared with the current account by another Amazon Web
--   Services account. Sharing is configured through Resource Access
--   Manager (RAM).
firewallRuleGroupMetadata_shareStatus :: Lens' FirewallRuleGroupMetadata (Maybe ShareStatus)

-- | The Amazon Web Services account ID for the account that created the
--   rule group. When a rule group is shared with your account, this is the
--   account that has shared the rule group with you.
firewallRuleGroupMetadata_ownerId :: Lens' FirewallRuleGroupMetadata (Maybe Text)

-- | The name of the rule group.
firewallRuleGroupMetadata_name :: Lens' FirewallRuleGroupMetadata (Maybe Text)

-- | The ID of the rule group.
firewallRuleGroupMetadata_id :: Lens' FirewallRuleGroupMetadata (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Route53Resolver.Types.FirewallRuleGroupMetadata.FirewallRuleGroupMetadata
instance GHC.Show.Show Network.AWS.Route53Resolver.Types.FirewallRuleGroupMetadata.FirewallRuleGroupMetadata
instance GHC.Read.Read Network.AWS.Route53Resolver.Types.FirewallRuleGroupMetadata.FirewallRuleGroupMetadata
instance GHC.Classes.Eq Network.AWS.Route53Resolver.Types.FirewallRuleGroupMetadata.FirewallRuleGroupMetadata
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Route53Resolver.Types.FirewallRuleGroupMetadata.FirewallRuleGroupMetadata
instance Data.Hashable.Class.Hashable Network.AWS.Route53Resolver.Types.FirewallRuleGroupMetadata.FirewallRuleGroupMetadata
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.Types.FirewallRuleGroupMetadata.FirewallRuleGroupMetadata


module Network.AWS.Route53Resolver.Types.FirewallRuleGroup

-- | High-level information for a firewall rule group. A firewall rule
--   group is a collection of rules that DNS Firewall uses to filter DNS
--   network traffic for a VPC. To retrieve the rules for the rule group,
--   call ListFirewallRules.
--   
--   <i>See:</i> <a>newFirewallRuleGroup</a> smart constructor.
data FirewallRuleGroup
FirewallRuleGroup' :: Maybe Text -> Maybe FirewallRuleGroupStatus -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe ShareStatus -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Int -> FirewallRuleGroup

-- | The date and time that the rule group was created, in Unix time format
--   and Coordinated Universal Time (UTC).
[$sel:creationTime:FirewallRuleGroup'] :: FirewallRuleGroup -> Maybe Text

-- | The status of the domain list.
[$sel:status:FirewallRuleGroup'] :: FirewallRuleGroup -> Maybe FirewallRuleGroupStatus

-- | The ARN (Amazon Resource Name) of the rule group.
[$sel:arn:FirewallRuleGroup'] :: FirewallRuleGroup -> Maybe Text

-- | A unique string defined by you to identify the request. This allows
--   you to retry failed requests without the risk of running the operation
--   twice. This can be any unique string, for example, a timestamp.
[$sel:creatorRequestId:FirewallRuleGroup'] :: FirewallRuleGroup -> Maybe Text

-- | The date and time that the rule group was last modified, in Unix time
--   format and Coordinated Universal Time (UTC).
[$sel:modificationTime:FirewallRuleGroup'] :: FirewallRuleGroup -> Maybe Text

-- | Whether the rule group is shared with other Amazon Web Services
--   accounts, or was shared with the current account by another Amazon Web
--   Services account. Sharing is configured through Resource Access
--   Manager (RAM).
[$sel:shareStatus:FirewallRuleGroup'] :: FirewallRuleGroup -> Maybe ShareStatus

-- | The Amazon Web Services account ID for the account that created the
--   rule group. When a rule group is shared with your account, this is the
--   account that has shared the rule group with you.
[$sel:ownerId:FirewallRuleGroup'] :: FirewallRuleGroup -> Maybe Text

-- | Additional information about the status of the rule group, if
--   available.
[$sel:statusMessage:FirewallRuleGroup'] :: FirewallRuleGroup -> Maybe Text

-- | The name of the rule group.
[$sel:name:FirewallRuleGroup'] :: FirewallRuleGroup -> Maybe Text

-- | The ID of the rule group.
[$sel:id:FirewallRuleGroup'] :: FirewallRuleGroup -> Maybe Text

-- | The number of rules in the rule group.
[$sel:ruleCount:FirewallRuleGroup'] :: FirewallRuleGroup -> Maybe Int

-- | Create a value of <a>FirewallRuleGroup</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:FirewallRuleGroup'</a>,
--   <a>firewallRuleGroup_creationTime</a> - The date and time that the
--   rule group was created, in Unix time format and Coordinated Universal
--   Time (UTC).
--   
--   <a>$sel:status:FirewallRuleGroup'</a>, <a>firewallRuleGroup_status</a>
--   - The status of the domain list.
--   
--   <a>$sel:arn:FirewallRuleGroup'</a>, <a>firewallRuleGroup_arn</a> - The
--   ARN (Amazon Resource Name) of the rule group.
--   
--   <a>$sel:creatorRequestId:FirewallRuleGroup'</a>,
--   <a>firewallRuleGroup_creatorRequestId</a> - A unique string defined by
--   you to identify the request. This allows you to retry failed requests
--   without the risk of running the operation twice. This can be any
--   unique string, for example, a timestamp.
--   
--   <a>$sel:modificationTime:FirewallRuleGroup'</a>,
--   <a>firewallRuleGroup_modificationTime</a> - The date and time that the
--   rule group was last modified, in Unix time format and Coordinated
--   Universal Time (UTC).
--   
--   <a>$sel:shareStatus:FirewallRuleGroup'</a>,
--   <a>firewallRuleGroup_shareStatus</a> - Whether the rule group is
--   shared with other Amazon Web Services accounts, or was shared with the
--   current account by another Amazon Web Services account. Sharing is
--   configured through Resource Access Manager (RAM).
--   
--   <a>$sel:ownerId:FirewallRuleGroup'</a>,
--   <a>firewallRuleGroup_ownerId</a> - The Amazon Web Services account ID
--   for the account that created the rule group. When a rule group is
--   shared with your account, this is the account that has shared the rule
--   group with you.
--   
--   <a>$sel:statusMessage:FirewallRuleGroup'</a>,
--   <a>firewallRuleGroup_statusMessage</a> - Additional information about
--   the status of the rule group, if available.
--   
--   <a>$sel:name:FirewallRuleGroup'</a>, <a>firewallRuleGroup_name</a> -
--   The name of the rule group.
--   
--   <a>$sel:id:FirewallRuleGroup'</a>, <a>firewallRuleGroup_id</a> - The
--   ID of the rule group.
--   
--   <a>$sel:ruleCount:FirewallRuleGroup'</a>,
--   <a>firewallRuleGroup_ruleCount</a> - The number of rules in the rule
--   group.
newFirewallRuleGroup :: FirewallRuleGroup

-- | The date and time that the rule group was created, in Unix time format
--   and Coordinated Universal Time (UTC).
firewallRuleGroup_creationTime :: Lens' FirewallRuleGroup (Maybe Text)

-- | The status of the domain list.
firewallRuleGroup_status :: Lens' FirewallRuleGroup (Maybe FirewallRuleGroupStatus)

-- | The ARN (Amazon Resource Name) of the rule group.
firewallRuleGroup_arn :: Lens' FirewallRuleGroup (Maybe Text)

-- | A unique string defined by you to identify the request. This allows
--   you to retry failed requests without the risk of running the operation
--   twice. This can be any unique string, for example, a timestamp.
firewallRuleGroup_creatorRequestId :: Lens' FirewallRuleGroup (Maybe Text)

-- | The date and time that the rule group was last modified, in Unix time
--   format and Coordinated Universal Time (UTC).
firewallRuleGroup_modificationTime :: Lens' FirewallRuleGroup (Maybe Text)

-- | Whether the rule group is shared with other Amazon Web Services
--   accounts, or was shared with the current account by another Amazon Web
--   Services account. Sharing is configured through Resource Access
--   Manager (RAM).
firewallRuleGroup_shareStatus :: Lens' FirewallRuleGroup (Maybe ShareStatus)

-- | The Amazon Web Services account ID for the account that created the
--   rule group. When a rule group is shared with your account, this is the
--   account that has shared the rule group with you.
firewallRuleGroup_ownerId :: Lens' FirewallRuleGroup (Maybe Text)

-- | Additional information about the status of the rule group, if
--   available.
firewallRuleGroup_statusMessage :: Lens' FirewallRuleGroup (Maybe Text)

-- | The name of the rule group.
firewallRuleGroup_name :: Lens' FirewallRuleGroup (Maybe Text)

-- | The ID of the rule group.
firewallRuleGroup_id :: Lens' FirewallRuleGroup (Maybe Text)

-- | The number of rules in the rule group.
firewallRuleGroup_ruleCount :: Lens' FirewallRuleGroup (Maybe Int)
instance GHC.Generics.Generic Network.AWS.Route53Resolver.Types.FirewallRuleGroup.FirewallRuleGroup
instance GHC.Show.Show Network.AWS.Route53Resolver.Types.FirewallRuleGroup.FirewallRuleGroup
instance GHC.Read.Read Network.AWS.Route53Resolver.Types.FirewallRuleGroup.FirewallRuleGroup
instance GHC.Classes.Eq Network.AWS.Route53Resolver.Types.FirewallRuleGroup.FirewallRuleGroup
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Route53Resolver.Types.FirewallRuleGroup.FirewallRuleGroup
instance Data.Hashable.Class.Hashable Network.AWS.Route53Resolver.Types.FirewallRuleGroup.FirewallRuleGroup
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.Types.FirewallRuleGroup.FirewallRuleGroup


module Network.AWS.Route53Resolver.Types.SortOrder
newtype SortOrder
SortOrder' :: Text -> SortOrder
[fromSortOrder] :: SortOrder -> Text
pattern SortOrder_ASCENDING :: SortOrder
pattern SortOrder_DESCENDING :: SortOrder
instance Network.AWS.Data.XML.ToXML Network.AWS.Route53Resolver.Types.SortOrder.SortOrder
instance Network.AWS.Data.XML.FromXML Network.AWS.Route53Resolver.Types.SortOrder.SortOrder
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Route53Resolver.Types.SortOrder.SortOrder
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53Resolver.Types.SortOrder.SortOrder
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Route53Resolver.Types.SortOrder.SortOrder
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Route53Resolver.Types.SortOrder.SortOrder
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53Resolver.Types.SortOrder.SortOrder
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Route53Resolver.Types.SortOrder.SortOrder
instance Network.AWS.Data.Log.ToLog Network.AWS.Route53Resolver.Types.SortOrder.SortOrder
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Route53Resolver.Types.SortOrder.SortOrder
instance Network.AWS.Data.Text.ToText Network.AWS.Route53Resolver.Types.SortOrder.SortOrder
instance Network.AWS.Data.Text.FromText Network.AWS.Route53Resolver.Types.SortOrder.SortOrder
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.Types.SortOrder.SortOrder
instance Data.Hashable.Class.Hashable Network.AWS.Route53Resolver.Types.SortOrder.SortOrder
instance GHC.Generics.Generic Network.AWS.Route53Resolver.Types.SortOrder.SortOrder
instance GHC.Classes.Ord Network.AWS.Route53Resolver.Types.SortOrder.SortOrder
instance GHC.Classes.Eq Network.AWS.Route53Resolver.Types.SortOrder.SortOrder
instance GHC.Read.Read Network.AWS.Route53Resolver.Types.SortOrder.SortOrder
instance GHC.Show.Show Network.AWS.Route53Resolver.Types.SortOrder.SortOrder


module Network.AWS.Route53Resolver.Types.Tag

-- | One tag that you want to add to the specified resource. A tag consists
--   of a <tt>Key</tt> (a name for the tag) and a <tt>Value</tt>.
--   
--   <i>See:</i> <a>newTag</a> smart constructor.
data Tag
Tag' :: Text -> Text -> Tag

-- | The name for the tag. For example, if you want to associate Resolver
--   resources with the account IDs of your customers for billing purposes,
--   the value of <tt>Key</tt> might be <tt>account-id</tt>.
[$sel:key:Tag'] :: Tag -> Text

-- | The value for the tag. For example, if <tt>Key</tt> is
--   <tt>account-id</tt>, then <tt>Value</tt> might be the ID of the
--   customer account that you're creating the resource for.
[$sel:value:Tag'] :: Tag -> Text

-- | Create a value of <a>Tag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:Tag'</a>, <a>tag_key</a> - The name for the tag. For
--   example, if you want to associate Resolver resources with the account
--   IDs of your customers for billing purposes, the value of <tt>Key</tt>
--   might be <tt>account-id</tt>.
--   
--   <a>$sel:value:Tag'</a>, <a>tag_value</a> - The value for the tag. For
--   example, if <tt>Key</tt> is <tt>account-id</tt>, then <tt>Value</tt>
--   might be the ID of the customer account that you're creating the
--   resource for.
newTag :: Text -> Text -> Tag

-- | The name for the tag. For example, if you want to associate Resolver
--   resources with the account IDs of your customers for billing purposes,
--   the value of <tt>Key</tt> might be <tt>account-id</tt>.
tag_key :: Lens' Tag Text

-- | The value for the tag. For example, if <tt>Key</tt> is
--   <tt>account-id</tt>, then <tt>Value</tt> might be the ID of the
--   customer account that you're creating the resource for.
tag_value :: Lens' Tag Text
instance GHC.Generics.Generic Network.AWS.Route53Resolver.Types.Tag.Tag
instance GHC.Show.Show Network.AWS.Route53Resolver.Types.Tag.Tag
instance GHC.Read.Read Network.AWS.Route53Resolver.Types.Tag.Tag
instance GHC.Classes.Eq Network.AWS.Route53Resolver.Types.Tag.Tag
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Route53Resolver.Types.Tag.Tag
instance Data.Hashable.Class.Hashable Network.AWS.Route53Resolver.Types.Tag.Tag
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.Types.Tag.Tag
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53Resolver.Types.Tag.Tag


module Network.AWS.Route53Resolver.Types.TargetAddress

-- | In a <a>CreateResolverRule</a> request, an array of the IPs that you
--   want to forward DNS queries to.
--   
--   <i>See:</i> <a>newTargetAddress</a> smart constructor.
data TargetAddress
TargetAddress' :: Maybe Natural -> Text -> TargetAddress

-- | The port at <tt>Ip</tt> that you want to forward DNS queries to.
[$sel:port:TargetAddress'] :: TargetAddress -> Maybe Natural

-- | One IP address that you want to forward DNS queries to. You can
--   specify only IPv4 addresses.
[$sel:ip:TargetAddress'] :: TargetAddress -> Text

-- | Create a value of <a>TargetAddress</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:port:TargetAddress'</a>, <a>targetAddress_port</a> - The port
--   at <tt>Ip</tt> that you want to forward DNS queries to.
--   
--   <a>$sel:ip:TargetAddress'</a>, <a>targetAddress_ip</a> - One IP
--   address that you want to forward DNS queries to. You can specify only
--   IPv4 addresses.
newTargetAddress :: Text -> TargetAddress

-- | The port at <tt>Ip</tt> that you want to forward DNS queries to.
targetAddress_port :: Lens' TargetAddress (Maybe Natural)

-- | One IP address that you want to forward DNS queries to. You can
--   specify only IPv4 addresses.
targetAddress_ip :: Lens' TargetAddress Text
instance GHC.Generics.Generic Network.AWS.Route53Resolver.Types.TargetAddress.TargetAddress
instance GHC.Show.Show Network.AWS.Route53Resolver.Types.TargetAddress.TargetAddress
instance GHC.Read.Read Network.AWS.Route53Resolver.Types.TargetAddress.TargetAddress
instance GHC.Classes.Eq Network.AWS.Route53Resolver.Types.TargetAddress.TargetAddress
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Route53Resolver.Types.TargetAddress.TargetAddress
instance Data.Hashable.Class.Hashable Network.AWS.Route53Resolver.Types.TargetAddress.TargetAddress
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.Types.TargetAddress.TargetAddress
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53Resolver.Types.TargetAddress.TargetAddress


module Network.AWS.Route53Resolver.Types.ResolverRuleConfig

-- | In an <a>UpdateResolverRule</a> request, information about the changes
--   that you want to make.
--   
--   <i>See:</i> <a>newResolverRuleConfig</a> smart constructor.
data ResolverRuleConfig
ResolverRuleConfig' :: Maybe Text -> Maybe (NonEmpty TargetAddress) -> Maybe Text -> ResolverRuleConfig

-- | The ID of the new outbound Resolver endpoint that you want to use to
--   route DNS queries to the IP addresses that you specify in
--   <tt>TargetIps</tt>.
[$sel:resolverEndpointId:ResolverRuleConfig'] :: ResolverRuleConfig -> Maybe Text

-- | For DNS queries that originate in your VPC, the new IP addresses that
--   you want to route outbound DNS queries to.
[$sel:targetIps:ResolverRuleConfig'] :: ResolverRuleConfig -> Maybe (NonEmpty TargetAddress)

-- | The new name for the Resolver rule. The name that you specify appears
--   in the Resolver dashboard in the Route 53 console.
[$sel:name:ResolverRuleConfig'] :: ResolverRuleConfig -> Maybe Text

-- | Create a value of <a>ResolverRuleConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resolverEndpointId:ResolverRuleConfig'</a>,
--   <a>resolverRuleConfig_resolverEndpointId</a> - The ID of the new
--   outbound Resolver endpoint that you want to use to route DNS queries
--   to the IP addresses that you specify in <tt>TargetIps</tt>.
--   
--   <a>$sel:targetIps:ResolverRuleConfig'</a>,
--   <a>resolverRuleConfig_targetIps</a> - For DNS queries that originate
--   in your VPC, the new IP addresses that you want to route outbound DNS
--   queries to.
--   
--   <a>$sel:name:ResolverRuleConfig'</a>, <a>resolverRuleConfig_name</a> -
--   The new name for the Resolver rule. The name that you specify appears
--   in the Resolver dashboard in the Route 53 console.
newResolverRuleConfig :: ResolverRuleConfig

-- | The ID of the new outbound Resolver endpoint that you want to use to
--   route DNS queries to the IP addresses that you specify in
--   <tt>TargetIps</tt>.
resolverRuleConfig_resolverEndpointId :: Lens' ResolverRuleConfig (Maybe Text)

-- | For DNS queries that originate in your VPC, the new IP addresses that
--   you want to route outbound DNS queries to.
resolverRuleConfig_targetIps :: Lens' ResolverRuleConfig (Maybe (NonEmpty TargetAddress))

-- | The new name for the Resolver rule. The name that you specify appears
--   in the Resolver dashboard in the Route 53 console.
resolverRuleConfig_name :: Lens' ResolverRuleConfig (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Route53Resolver.Types.ResolverRuleConfig.ResolverRuleConfig
instance GHC.Show.Show Network.AWS.Route53Resolver.Types.ResolverRuleConfig.ResolverRuleConfig
instance GHC.Read.Read Network.AWS.Route53Resolver.Types.ResolverRuleConfig.ResolverRuleConfig
instance GHC.Classes.Eq Network.AWS.Route53Resolver.Types.ResolverRuleConfig.ResolverRuleConfig
instance Data.Hashable.Class.Hashable Network.AWS.Route53Resolver.Types.ResolverRuleConfig.ResolverRuleConfig
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.Types.ResolverRuleConfig.ResolverRuleConfig
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53Resolver.Types.ResolverRuleConfig.ResolverRuleConfig


module Network.AWS.Route53Resolver.Types.ResolverRule

-- | For queries that originate in your VPC, detailed information about a
--   Resolver rule, which specifies how to route DNS queries out of the
--   VPC. The <tt>ResolverRule</tt> parameter appears in the response to a
--   <a>CreateResolverRule</a>, <a>DeleteResolverRule</a>,
--   <a>GetResolverRule</a>, <a>ListResolverRules</a>, or
--   <a>UpdateResolverRule</a> request.
--   
--   <i>See:</i> <a>newResolverRule</a> smart constructor.
data ResolverRule
ResolverRule' :: Maybe Text -> Maybe ResolverRuleStatus -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe (NonEmpty TargetAddress) -> Maybe Text -> Maybe ShareStatus -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe RuleTypeOption -> ResolverRule

-- | The date and time that the Resolver rule was created, in Unix time
--   format and Coordinated Universal Time (UTC).
[$sel:creationTime:ResolverRule'] :: ResolverRule -> Maybe Text

-- | A code that specifies the current status of the Resolver rule.
[$sel:status:ResolverRule'] :: ResolverRule -> Maybe ResolverRuleStatus

-- | The ARN (Amazon Resource Name) for the Resolver rule specified by
--   <tt>Id</tt>.
[$sel:arn:ResolverRule'] :: ResolverRule -> Maybe Text

-- | The ID of the endpoint that the rule is associated with.
[$sel:resolverEndpointId:ResolverRule'] :: ResolverRule -> Maybe Text

-- | A unique string that you specified when you created the Resolver rule.
--   <tt>CreatorRequestId</tt> identifies the request and allows failed
--   requests to be retried without the risk of running the operation
--   twice.
[$sel:creatorRequestId:ResolverRule'] :: ResolverRule -> Maybe Text

-- | An array that contains the IP addresses and ports that an outbound
--   endpoint forwards DNS queries to. Typically, these are the IP
--   addresses of DNS resolvers on your network. Specify IPv4 addresses.
--   IPv6 is not supported.
[$sel:targetIps:ResolverRule'] :: ResolverRule -> Maybe (NonEmpty TargetAddress)

-- | The date and time that the Resolver rule was last updated, in Unix
--   time format and Coordinated Universal Time (UTC).
[$sel:modificationTime:ResolverRule'] :: ResolverRule -> Maybe Text

-- | Whether the rule is shared and, if so, whether the current account is
--   sharing the rule with another account, or another account is sharing
--   the rule with the current account.
[$sel:shareStatus:ResolverRule'] :: ResolverRule -> Maybe ShareStatus

-- | When a rule is shared with another Amazon Web Services account, the
--   account ID of the account that the rule is shared with.
[$sel:ownerId:ResolverRule'] :: ResolverRule -> Maybe Text

-- | DNS queries for this domain name are forwarded to the IP addresses
--   that are specified in <tt>TargetIps</tt>. If a query matches multiple
--   Resolver rules (example.com and www.example.com), the query is routed
--   using the Resolver rule that contains the most specific domain name
--   (www.example.com).
[$sel:domainName:ResolverRule'] :: ResolverRule -> Maybe Text

-- | A detailed description of the status of a Resolver rule.
[$sel:statusMessage:ResolverRule'] :: ResolverRule -> Maybe Text

-- | The name for the Resolver rule, which you specified when you created
--   the Resolver rule.
[$sel:name:ResolverRule'] :: ResolverRule -> Maybe Text

-- | The ID that Resolver assigned to the Resolver rule when you created
--   it.
[$sel:id:ResolverRule'] :: ResolverRule -> Maybe Text

-- | When you want to forward DNS queries for specified domain name to
--   resolvers on your network, specify <tt>FORWARD</tt>.
--   
--   When you have a forwarding rule to forward DNS queries for a domain to
--   your network and you want Resolver to process queries for a subdomain
--   of that domain, specify <tt>SYSTEM</tt>.
--   
--   For example, to forward DNS queries for example.com to resolvers on
--   your network, you create a rule and specify <tt>FORWARD</tt> for
--   <tt>RuleType</tt>. To then have Resolver process queries for
--   apex.example.com, you create a rule and specify <tt>SYSTEM</tt> for
--   <tt>RuleType</tt>.
--   
--   Currently, only Resolver can create rules that have a value of
--   <tt>RECURSIVE</tt> for <tt>RuleType</tt>.
[$sel:ruleType:ResolverRule'] :: ResolverRule -> Maybe RuleTypeOption

-- | Create a value of <a>ResolverRule</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:ResolverRule'</a>,
--   <a>resolverRule_creationTime</a> - The date and time that the Resolver
--   rule was created, in Unix time format and Coordinated Universal Time
--   (UTC).
--   
--   <a>$sel:status:ResolverRule'</a>, <a>resolverRule_status</a> - A code
--   that specifies the current status of the Resolver rule.
--   
--   <a>$sel:arn:ResolverRule'</a>, <a>resolverRule_arn</a> - The ARN
--   (Amazon Resource Name) for the Resolver rule specified by <tt>Id</tt>.
--   
--   <a>$sel:resolverEndpointId:ResolverRule'</a>,
--   <a>resolverRule_resolverEndpointId</a> - The ID of the endpoint that
--   the rule is associated with.
--   
--   <a>$sel:creatorRequestId:ResolverRule'</a>,
--   <a>resolverRule_creatorRequestId</a> - A unique string that you
--   specified when you created the Resolver rule.
--   <tt>CreatorRequestId</tt> identifies the request and allows failed
--   requests to be retried without the risk of running the operation
--   twice.
--   
--   <a>$sel:targetIps:ResolverRule'</a>, <a>resolverRule_targetIps</a> -
--   An array that contains the IP addresses and ports that an outbound
--   endpoint forwards DNS queries to. Typically, these are the IP
--   addresses of DNS resolvers on your network. Specify IPv4 addresses.
--   IPv6 is not supported.
--   
--   <a>$sel:modificationTime:ResolverRule'</a>,
--   <a>resolverRule_modificationTime</a> - The date and time that the
--   Resolver rule was last updated, in Unix time format and Coordinated
--   Universal Time (UTC).
--   
--   <a>$sel:shareStatus:ResolverRule'</a>, <a>resolverRule_shareStatus</a>
--   - Whether the rule is shared and, if so, whether the current account
--   is sharing the rule with another account, or another account is
--   sharing the rule with the current account.
--   
--   <a>$sel:ownerId:ResolverRule'</a>, <a>resolverRule_ownerId</a> - When
--   a rule is shared with another Amazon Web Services account, the account
--   ID of the account that the rule is shared with.
--   
--   <a>$sel:domainName:ResolverRule'</a>, <a>resolverRule_domainName</a> -
--   DNS queries for this domain name are forwarded to the IP addresses
--   that are specified in <tt>TargetIps</tt>. If a query matches multiple
--   Resolver rules (example.com and www.example.com), the query is routed
--   using the Resolver rule that contains the most specific domain name
--   (www.example.com).
--   
--   <a>$sel:statusMessage:ResolverRule'</a>,
--   <a>resolverRule_statusMessage</a> - A detailed description of the
--   status of a Resolver rule.
--   
--   <a>$sel:name:ResolverRule'</a>, <a>resolverRule_name</a> - The name
--   for the Resolver rule, which you specified when you created the
--   Resolver rule.
--   
--   <a>$sel:id:ResolverRule'</a>, <a>resolverRule_id</a> - The ID that
--   Resolver assigned to the Resolver rule when you created it.
--   
--   <a>$sel:ruleType:ResolverRule'</a>, <a>resolverRule_ruleType</a> -
--   When you want to forward DNS queries for specified domain name to
--   resolvers on your network, specify <tt>FORWARD</tt>.
--   
--   When you have a forwarding rule to forward DNS queries for a domain to
--   your network and you want Resolver to process queries for a subdomain
--   of that domain, specify <tt>SYSTEM</tt>.
--   
--   For example, to forward DNS queries for example.com to resolvers on
--   your network, you create a rule and specify <tt>FORWARD</tt> for
--   <tt>RuleType</tt>. To then have Resolver process queries for
--   apex.example.com, you create a rule and specify <tt>SYSTEM</tt> for
--   <tt>RuleType</tt>.
--   
--   Currently, only Resolver can create rules that have a value of
--   <tt>RECURSIVE</tt> for <tt>RuleType</tt>.
newResolverRule :: ResolverRule

-- | The date and time that the Resolver rule was created, in Unix time
--   format and Coordinated Universal Time (UTC).
resolverRule_creationTime :: Lens' ResolverRule (Maybe Text)

-- | A code that specifies the current status of the Resolver rule.
resolverRule_status :: Lens' ResolverRule (Maybe ResolverRuleStatus)

-- | The ARN (Amazon Resource Name) for the Resolver rule specified by
--   <tt>Id</tt>.
resolverRule_arn :: Lens' ResolverRule (Maybe Text)

-- | The ID of the endpoint that the rule is associated with.
resolverRule_resolverEndpointId :: Lens' ResolverRule (Maybe Text)

-- | A unique string that you specified when you created the Resolver rule.
--   <tt>CreatorRequestId</tt> identifies the request and allows failed
--   requests to be retried without the risk of running the operation
--   twice.
resolverRule_creatorRequestId :: Lens' ResolverRule (Maybe Text)

-- | An array that contains the IP addresses and ports that an outbound
--   endpoint forwards DNS queries to. Typically, these are the IP
--   addresses of DNS resolvers on your network. Specify IPv4 addresses.
--   IPv6 is not supported.
resolverRule_targetIps :: Lens' ResolverRule (Maybe (NonEmpty TargetAddress))

-- | The date and time that the Resolver rule was last updated, in Unix
--   time format and Coordinated Universal Time (UTC).
resolverRule_modificationTime :: Lens' ResolverRule (Maybe Text)

-- | Whether the rule is shared and, if so, whether the current account is
--   sharing the rule with another account, or another account is sharing
--   the rule with the current account.
resolverRule_shareStatus :: Lens' ResolverRule (Maybe ShareStatus)

-- | When a rule is shared with another Amazon Web Services account, the
--   account ID of the account that the rule is shared with.
resolverRule_ownerId :: Lens' ResolverRule (Maybe Text)

-- | DNS queries for this domain name are forwarded to the IP addresses
--   that are specified in <tt>TargetIps</tt>. If a query matches multiple
--   Resolver rules (example.com and www.example.com), the query is routed
--   using the Resolver rule that contains the most specific domain name
--   (www.example.com).
resolverRule_domainName :: Lens' ResolverRule (Maybe Text)

-- | A detailed description of the status of a Resolver rule.
resolverRule_statusMessage :: Lens' ResolverRule (Maybe Text)

-- | The name for the Resolver rule, which you specified when you created
--   the Resolver rule.
resolverRule_name :: Lens' ResolverRule (Maybe Text)

-- | The ID that Resolver assigned to the Resolver rule when you created
--   it.
resolverRule_id :: Lens' ResolverRule (Maybe Text)

-- | When you want to forward DNS queries for specified domain name to
--   resolvers on your network, specify <tt>FORWARD</tt>.
--   
--   When you have a forwarding rule to forward DNS queries for a domain to
--   your network and you want Resolver to process queries for a subdomain
--   of that domain, specify <tt>SYSTEM</tt>.
--   
--   For example, to forward DNS queries for example.com to resolvers on
--   your network, you create a rule and specify <tt>FORWARD</tt> for
--   <tt>RuleType</tt>. To then have Resolver process queries for
--   apex.example.com, you create a rule and specify <tt>SYSTEM</tt> for
--   <tt>RuleType</tt>.
--   
--   Currently, only Resolver can create rules that have a value of
--   <tt>RECURSIVE</tt> for <tt>RuleType</tt>.
resolverRule_ruleType :: Lens' ResolverRule (Maybe RuleTypeOption)
instance GHC.Generics.Generic Network.AWS.Route53Resolver.Types.ResolverRule.ResolverRule
instance GHC.Show.Show Network.AWS.Route53Resolver.Types.ResolverRule.ResolverRule
instance GHC.Read.Read Network.AWS.Route53Resolver.Types.ResolverRule.ResolverRule
instance GHC.Classes.Eq Network.AWS.Route53Resolver.Types.ResolverRule.ResolverRule
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Route53Resolver.Types.ResolverRule.ResolverRule
instance Data.Hashable.Class.Hashable Network.AWS.Route53Resolver.Types.ResolverRule.ResolverRule
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.Types.ResolverRule.ResolverRule


module Network.AWS.Route53Resolver.Types.Validation
newtype Validation
Validation' :: Text -> Validation
[fromValidation] :: Validation -> Text
pattern Validation_DISABLE :: Validation
pattern Validation_ENABLE :: Validation
instance Network.AWS.Data.XML.ToXML Network.AWS.Route53Resolver.Types.Validation.Validation
instance Network.AWS.Data.XML.FromXML Network.AWS.Route53Resolver.Types.Validation.Validation
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Route53Resolver.Types.Validation.Validation
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53Resolver.Types.Validation.Validation
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Route53Resolver.Types.Validation.Validation
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Route53Resolver.Types.Validation.Validation
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53Resolver.Types.Validation.Validation
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Route53Resolver.Types.Validation.Validation
instance Network.AWS.Data.Log.ToLog Network.AWS.Route53Resolver.Types.Validation.Validation
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Route53Resolver.Types.Validation.Validation
instance Network.AWS.Data.Text.ToText Network.AWS.Route53Resolver.Types.Validation.Validation
instance Network.AWS.Data.Text.FromText Network.AWS.Route53Resolver.Types.Validation.Validation
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.Types.Validation.Validation
instance Data.Hashable.Class.Hashable Network.AWS.Route53Resolver.Types.Validation.Validation
instance GHC.Generics.Generic Network.AWS.Route53Resolver.Types.Validation.Validation
instance GHC.Classes.Ord Network.AWS.Route53Resolver.Types.Validation.Validation
instance GHC.Classes.Eq Network.AWS.Route53Resolver.Types.Validation.Validation
instance GHC.Read.Read Network.AWS.Route53Resolver.Types.Validation.Validation
instance GHC.Show.Show Network.AWS.Route53Resolver.Types.Validation.Validation


module Network.AWS.Route53Resolver.Types

-- | API version <tt>2018-04-01</tt> of the Amazon Route 53 Resolver SDK
--   configuration.
defaultService :: Service

-- | The specified tag is invalid.
_InvalidTagException :: AsError a => Getting (First ServiceError) a ServiceError

_ValidationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The current account doesn't have the IAM permissions required to
--   perform the specified Resolver operation.
_AccessDeniedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified resource isn't available.
_ResourceUnavailableException :: AsError a => Getting (First ServiceError) a ServiceError

-- | One or more parameters in this request are not valid.
_InvalidParameterException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request is invalid.
_InvalidRequestException :: AsError a => Getting (First ServiceError) a ServiceError

_ConflictException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request was throttled. Try again in a few minutes.
_ThrottlingException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The value that you specified for <tt>NextToken</tt> in a <tt>List</tt>
--   request isn't valid.
_InvalidNextTokenException :: AsError a => Getting (First ServiceError) a ServiceError

-- | We encountered an unknown error. Try again in a few minutes.
_InternalServiceErrorException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The resource that you tried to create already exists.
_ResourceExistsException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified resource doesn't exist.
_UnknownResourceException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified Resolver rule policy is invalid.
_InvalidPolicyDocument :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified resource doesn't exist.
_ResourceNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request caused one or more limits to be exceeded.
_LimitExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The resource that you tried to update or delete is currently in use.
_ResourceInUseException :: AsError a => Getting (First ServiceError) a ServiceError
newtype Action
Action' :: Text -> Action
[fromAction] :: Action -> Text
pattern Action_ALERT :: Action
pattern Action_ALLOW :: Action
pattern Action_BLOCK :: Action
newtype BlockOverrideDnsType
BlockOverrideDnsType' :: Text -> BlockOverrideDnsType
[fromBlockOverrideDnsType] :: BlockOverrideDnsType -> Text
pattern BlockOverrideDnsType_CNAME :: BlockOverrideDnsType
newtype BlockResponse
BlockResponse' :: Text -> BlockResponse
[fromBlockResponse] :: BlockResponse -> Text
pattern BlockResponse_NODATA :: BlockResponse
pattern BlockResponse_NXDOMAIN :: BlockResponse
pattern BlockResponse_OVERRIDE :: BlockResponse
newtype FirewallDomainImportOperation
FirewallDomainImportOperation' :: Text -> FirewallDomainImportOperation
[fromFirewallDomainImportOperation] :: FirewallDomainImportOperation -> Text
pattern FirewallDomainImportOperation_REPLACE :: FirewallDomainImportOperation
newtype FirewallDomainListStatus
FirewallDomainListStatus' :: Text -> FirewallDomainListStatus
[fromFirewallDomainListStatus] :: FirewallDomainListStatus -> Text
pattern FirewallDomainListStatus_COMPLETE :: FirewallDomainListStatus
pattern FirewallDomainListStatus_COMPLETE_IMPORT_FAILED :: FirewallDomainListStatus
pattern FirewallDomainListStatus_DELETING :: FirewallDomainListStatus
pattern FirewallDomainListStatus_IMPORTING :: FirewallDomainListStatus
pattern FirewallDomainListStatus_UPDATING :: FirewallDomainListStatus
newtype FirewallDomainUpdateOperation
FirewallDomainUpdateOperation' :: Text -> FirewallDomainUpdateOperation
[fromFirewallDomainUpdateOperation] :: FirewallDomainUpdateOperation -> Text
pattern FirewallDomainUpdateOperation_ADD :: FirewallDomainUpdateOperation
pattern FirewallDomainUpdateOperation_REMOVE :: FirewallDomainUpdateOperation
pattern FirewallDomainUpdateOperation_REPLACE :: FirewallDomainUpdateOperation
newtype FirewallFailOpenStatus
FirewallFailOpenStatus' :: Text -> FirewallFailOpenStatus
[fromFirewallFailOpenStatus] :: FirewallFailOpenStatus -> Text
pattern FirewallFailOpenStatus_DISABLED :: FirewallFailOpenStatus
pattern FirewallFailOpenStatus_ENABLED :: FirewallFailOpenStatus
newtype FirewallRuleGroupAssociationStatus
FirewallRuleGroupAssociationStatus' :: Text -> FirewallRuleGroupAssociationStatus
[fromFirewallRuleGroupAssociationStatus] :: FirewallRuleGroupAssociationStatus -> Text
pattern FirewallRuleGroupAssociationStatus_COMPLETE :: FirewallRuleGroupAssociationStatus
pattern FirewallRuleGroupAssociationStatus_DELETING :: FirewallRuleGroupAssociationStatus
pattern FirewallRuleGroupAssociationStatus_UPDATING :: FirewallRuleGroupAssociationStatus
newtype FirewallRuleGroupStatus
FirewallRuleGroupStatus' :: Text -> FirewallRuleGroupStatus
[fromFirewallRuleGroupStatus] :: FirewallRuleGroupStatus -> Text
pattern FirewallRuleGroupStatus_COMPLETE :: FirewallRuleGroupStatus
pattern FirewallRuleGroupStatus_DELETING :: FirewallRuleGroupStatus
pattern FirewallRuleGroupStatus_UPDATING :: FirewallRuleGroupStatus
newtype IpAddressStatus
IpAddressStatus' :: Text -> IpAddressStatus
[fromIpAddressStatus] :: IpAddressStatus -> Text
pattern IpAddressStatus_ATTACHED :: IpAddressStatus
pattern IpAddressStatus_ATTACHING :: IpAddressStatus
pattern IpAddressStatus_CREATING :: IpAddressStatus
pattern IpAddressStatus_DELETE_FAILED_FAS_EXPIRED :: IpAddressStatus
pattern IpAddressStatus_DELETING :: IpAddressStatus
pattern IpAddressStatus_DETACHING :: IpAddressStatus
pattern IpAddressStatus_FAILED_CREATION :: IpAddressStatus
pattern IpAddressStatus_FAILED_RESOURCE_GONE :: IpAddressStatus
pattern IpAddressStatus_REMAP_ATTACHING :: IpAddressStatus
pattern IpAddressStatus_REMAP_DETACHING :: IpAddressStatus
newtype MutationProtectionStatus
MutationProtectionStatus' :: Text -> MutationProtectionStatus
[fromMutationProtectionStatus] :: MutationProtectionStatus -> Text
pattern MutationProtectionStatus_DISABLED :: MutationProtectionStatus
pattern MutationProtectionStatus_ENABLED :: MutationProtectionStatus
newtype ResolverDNSSECValidationStatus
ResolverDNSSECValidationStatus' :: Text -> ResolverDNSSECValidationStatus
[fromResolverDNSSECValidationStatus] :: ResolverDNSSECValidationStatus -> Text
pattern ResolverDNSSECValidationStatus_DISABLED :: ResolverDNSSECValidationStatus
pattern ResolverDNSSECValidationStatus_DISABLING :: ResolverDNSSECValidationStatus
pattern ResolverDNSSECValidationStatus_ENABLED :: ResolverDNSSECValidationStatus
pattern ResolverDNSSECValidationStatus_ENABLING :: ResolverDNSSECValidationStatus
newtype ResolverEndpointDirection
ResolverEndpointDirection' :: Text -> ResolverEndpointDirection
[fromResolverEndpointDirection] :: ResolverEndpointDirection -> Text
pattern ResolverEndpointDirection_INBOUND :: ResolverEndpointDirection
pattern ResolverEndpointDirection_OUTBOUND :: ResolverEndpointDirection
newtype ResolverEndpointStatus
ResolverEndpointStatus' :: Text -> ResolverEndpointStatus
[fromResolverEndpointStatus] :: ResolverEndpointStatus -> Text
pattern ResolverEndpointStatus_ACTION_NEEDED :: ResolverEndpointStatus
pattern ResolverEndpointStatus_AUTO_RECOVERING :: ResolverEndpointStatus
pattern ResolverEndpointStatus_CREATING :: ResolverEndpointStatus
pattern ResolverEndpointStatus_DELETING :: ResolverEndpointStatus
pattern ResolverEndpointStatus_OPERATIONAL :: ResolverEndpointStatus
pattern ResolverEndpointStatus_UPDATING :: ResolverEndpointStatus
newtype ResolverQueryLogConfigAssociationError
ResolverQueryLogConfigAssociationError' :: Text -> ResolverQueryLogConfigAssociationError
[fromResolverQueryLogConfigAssociationError] :: ResolverQueryLogConfigAssociationError -> Text
pattern ResolverQueryLogConfigAssociationError_ACCESS_DENIED :: ResolverQueryLogConfigAssociationError
pattern ResolverQueryLogConfigAssociationError_DESTINATION_NOT_FOUND :: ResolverQueryLogConfigAssociationError
pattern ResolverQueryLogConfigAssociationError_INTERNAL_SERVICE_ERROR :: ResolverQueryLogConfigAssociationError
pattern ResolverQueryLogConfigAssociationError_NONE :: ResolverQueryLogConfigAssociationError
newtype ResolverQueryLogConfigAssociationStatus
ResolverQueryLogConfigAssociationStatus' :: Text -> ResolverQueryLogConfigAssociationStatus
[fromResolverQueryLogConfigAssociationStatus] :: ResolverQueryLogConfigAssociationStatus -> Text
pattern ResolverQueryLogConfigAssociationStatus_ACTION_NEEDED :: ResolverQueryLogConfigAssociationStatus
pattern ResolverQueryLogConfigAssociationStatus_ACTIVE :: ResolverQueryLogConfigAssociationStatus
pattern ResolverQueryLogConfigAssociationStatus_CREATING :: ResolverQueryLogConfigAssociationStatus
pattern ResolverQueryLogConfigAssociationStatus_DELETING :: ResolverQueryLogConfigAssociationStatus
pattern ResolverQueryLogConfigAssociationStatus_FAILED :: ResolverQueryLogConfigAssociationStatus
newtype ResolverQueryLogConfigStatus
ResolverQueryLogConfigStatus' :: Text -> ResolverQueryLogConfigStatus
[fromResolverQueryLogConfigStatus] :: ResolverQueryLogConfigStatus -> Text
pattern ResolverQueryLogConfigStatus_CREATED :: ResolverQueryLogConfigStatus
pattern ResolverQueryLogConfigStatus_CREATING :: ResolverQueryLogConfigStatus
pattern ResolverQueryLogConfigStatus_DELETING :: ResolverQueryLogConfigStatus
pattern ResolverQueryLogConfigStatus_FAILED :: ResolverQueryLogConfigStatus
newtype ResolverRuleAssociationStatus
ResolverRuleAssociationStatus' :: Text -> ResolverRuleAssociationStatus
[fromResolverRuleAssociationStatus] :: ResolverRuleAssociationStatus -> Text
pattern ResolverRuleAssociationStatus_COMPLETE :: ResolverRuleAssociationStatus
pattern ResolverRuleAssociationStatus_CREATING :: ResolverRuleAssociationStatus
pattern ResolverRuleAssociationStatus_DELETING :: ResolverRuleAssociationStatus
pattern ResolverRuleAssociationStatus_FAILED :: ResolverRuleAssociationStatus
pattern ResolverRuleAssociationStatus_OVERRIDDEN :: ResolverRuleAssociationStatus
newtype ResolverRuleStatus
ResolverRuleStatus' :: Text -> ResolverRuleStatus
[fromResolverRuleStatus] :: ResolverRuleStatus -> Text
pattern ResolverRuleStatus_COMPLETE :: ResolverRuleStatus
pattern ResolverRuleStatus_DELETING :: ResolverRuleStatus
pattern ResolverRuleStatus_FAILED :: ResolverRuleStatus
pattern ResolverRuleStatus_UPDATING :: ResolverRuleStatus
newtype RuleTypeOption
RuleTypeOption' :: Text -> RuleTypeOption
[fromRuleTypeOption] :: RuleTypeOption -> Text
pattern RuleTypeOption_FORWARD :: RuleTypeOption
pattern RuleTypeOption_RECURSIVE :: RuleTypeOption
pattern RuleTypeOption_SYSTEM :: RuleTypeOption
newtype ShareStatus
ShareStatus' :: Text -> ShareStatus
[fromShareStatus] :: ShareStatus -> Text
pattern ShareStatus_NOT_SHARED :: ShareStatus
pattern ShareStatus_SHARED_BY_ME :: ShareStatus
pattern ShareStatus_SHARED_WITH_ME :: ShareStatus
newtype SortOrder
SortOrder' :: Text -> SortOrder
[fromSortOrder] :: SortOrder -> Text
pattern SortOrder_ASCENDING :: SortOrder
pattern SortOrder_DESCENDING :: SortOrder
newtype Validation
Validation' :: Text -> Validation
[fromValidation] :: Validation -> Text
pattern Validation_DISABLE :: Validation
pattern Validation_ENABLE :: Validation

-- | For Resolver list operations (<a>ListResolverEndpoints</a>,
--   <a>ListResolverRules</a>, <a>ListResolverRuleAssociations</a>,
--   <a>ListResolverQueryLogConfigs</a>,
--   <a>ListResolverQueryLogConfigAssociations</a>), and
--   <a>ListResolverDnssecConfigs</a>), an optional specification to return
--   a subset of objects.
--   
--   To filter objects, such as Resolver endpoints or Resolver rules, you
--   specify <tt>Name</tt> and <tt>Values</tt>. For example, to list only
--   inbound Resolver endpoints, specify <tt>Direction</tt> for
--   <tt>Name</tt> and specify <tt>INBOUND</tt> for <tt>Values</tt>.
--   
--   <i>See:</i> <a>newFilter</a> smart constructor.
data Filter
Filter' :: Maybe [Text] -> Maybe Text -> Filter

-- | When you're using a <tt>List</tt> operation and you want the operation
--   to return a subset of objects, such as Resolver endpoints or Resolver
--   rules, the value of the parameter that you want to use to filter
--   objects. For example, to list only inbound Resolver endpoints, specify
--   <tt>Direction</tt> for <tt>Name</tt> and specify <tt>INBOUND</tt> for
--   <tt>Values</tt>.
[$sel:values:Filter'] :: Filter -> Maybe [Text]

-- | The name of the parameter that you want to use to filter objects.
--   
--   The valid values for <tt>Name</tt> depend on the action that you're
--   including the filter in, <a>ListResolverEndpoints</a>,
--   <a>ListResolverRules</a>, <a>ListResolverRuleAssociations</a>,
--   <a>ListResolverQueryLogConfigs</a>, or
--   <a>ListResolverQueryLogConfigAssociations</a>.
--   
--   In early versions of Resolver, values for <tt>Name</tt> were listed as
--   uppercase, with underscore (_) delimiters. For example,
--   <tt>CreatorRequestId</tt> was originally listed as
--   <tt>CREATOR_REQUEST_ID</tt>. Uppercase values for <tt>Name</tt> are
--   still supported.
--   
--   <b>ListResolverEndpoints</b>
--   
--   Valid values for <tt>Name</tt> include the following:
--   
--   <ul>
--   <li><tt>CreatorRequestId</tt>: The value that you specified when you
--   created the Resolver endpoint.</li>
--   <li><tt>Direction</tt>: Whether you want to return inbound or outbound
--   Resolver endpoints. If you specify <tt>DIRECTION</tt> for
--   <tt>Name</tt>, specify <tt>INBOUND</tt> or <tt>OUTBOUND</tt> for
--   <tt>Values</tt>.</li>
--   <li><tt>HostVPCId</tt>: The ID of the VPC that inbound DNS queries
--   pass through on the way from your network to your VPCs in a region, or
--   the VPC that outbound queries pass through on the way from your VPCs
--   to your network. In a <a>CreateResolverEndpoint</a> request,
--   <tt>SubnetId</tt> indirectly identifies the VPC. In a
--   <a>GetResolverEndpoint</a> request, the VPC ID for a Resolver endpoint
--   is returned in the <tt>HostVPCId</tt> element.</li>
--   <li><tt>IpAddressCount</tt>: The number of IP addresses that you have
--   associated with the Resolver endpoint.</li>
--   <li><tt>Name</tt>: The name of the Resolver endpoint.</li>
--   <li><tt>SecurityGroupIds</tt>: The IDs of the VPC security groups that
--   you specified when you created the Resolver endpoint.</li>
--   <li><tt>Status</tt>: The status of the Resolver endpoint. If you
--   specify <tt>Status</tt> for <tt>Name</tt>, specify one of the
--   following status codes for <tt>Values</tt>: <tt>CREATING</tt>,
--   <tt>OPERATIONAL</tt>, <tt>UPDATING</tt>, <tt>AUTO_RECOVERING</tt>,
--   <tt>ACTION_NEEDED</tt>, or <tt>DELETING</tt>. For more information,
--   see <tt>Status</tt> in <a>ResolverEndpoint</a>.</li>
--   </ul>
--   
--   <b>ListResolverRules</b>
--   
--   Valid values for <tt>Name</tt> include the following:
--   
--   <ul>
--   <li><tt>CreatorRequestId</tt>: The value that you specified when you
--   created the Resolver rule.</li>
--   <li><tt>DomainName</tt>: The domain name for which Resolver is
--   forwarding DNS queries to your network. In the value that you specify
--   for <tt>Values</tt>, include a trailing dot (.) after the domain name.
--   For example, if the domain name is example.com, specify the following
--   value. Note the "." after <tt>com</tt>:<pre>example.com.</pre></li>
--   <li><tt>Name</tt>: The name of the Resolver rule.</li>
--   <li><tt>ResolverEndpointId</tt>: The ID of the Resolver endpoint that
--   the Resolver rule is associated with.You can filter on the Resolver
--   endpoint only for rules that have a value of <tt>FORWARD</tt> for
--   <tt>RuleType</tt>.</li>
--   <li><tt>Status</tt>: The status of the Resolver rule. If you specify
--   <tt>Status</tt> for <tt>Name</tt>, specify one of the following status
--   codes for <tt>Values</tt>: <tt>COMPLETE</tt>, <tt>DELETING</tt>,
--   <tt>UPDATING</tt>, or <tt>FAILED</tt>.</li>
--   <li><tt>Type</tt>: The type of the Resolver rule. If you specify
--   <tt>TYPE</tt> for <tt>Name</tt>, specify <tt>FORWARD</tt> or
--   <tt>SYSTEM</tt> for <tt>Values</tt>.</li>
--   </ul>
--   
--   <b>ListResolverRuleAssociations</b>
--   
--   Valid values for <tt>Name</tt> include the following:
--   
--   <ul>
--   <li><tt>Name</tt>: The name of the Resolver rule association.</li>
--   <li><tt>ResolverRuleId</tt>: The ID of the Resolver rule that is
--   associated with one or more VPCs.</li>
--   <li><tt>Status</tt>: The status of the Resolver rule association. If
--   you specify <tt>Status</tt> for <tt>Name</tt>, specify one of the
--   following status codes for <tt>Values</tt>: <tt>CREATING</tt>,
--   <tt>COMPLETE</tt>, <tt>DELETING</tt>, or <tt>FAILED</tt>.</li>
--   <li><tt>VPCId</tt>: The ID of the VPC that the Resolver rule is
--   associated with.</li>
--   </ul>
--   
--   <b>ListResolverQueryLogConfigs</b>
--   
--   Valid values for <tt>Name</tt> include the following:
--   
--   <ul>
--   <li><tt>Arn</tt>: The ARN for the query logging configuration.</li>
--   <li><tt>AssociationCount</tt>: The number of VPCs that are associated
--   with the query logging configuration.</li>
--   <li><tt>CreationTime</tt>: The date and time that the query logging
--   configuration was created, in Unix time format and Coordinated
--   Universal Time (UTC).</li>
--   <li><tt>CreatorRequestId</tt>: A unique string that identifies the
--   request that created the query logging configuration.</li>
--   <li><tt>Destination</tt>: The Amazon Web Services service that you
--   want to forward query logs to. Valid values include the
--   following:<ul><li><pre>S3</pre></li><li><pre>CloudWatchLogs</pre></li><li><pre>KinesisFirehose</pre></li></ul></li>
--   <li><tt>DestinationArn</tt>: The ARN of the location that Resolver is
--   sending query logs to. This value can be the ARN for an S3 bucket, a
--   CloudWatch Logs log group, or a Kinesis Data Firehose delivery
--   stream.</li>
--   <li><tt>Id</tt>: The ID of the query logging configuration</li>
--   <li><tt>Name</tt>: The name of the query logging configuration</li>
--   <li><tt>OwnerId</tt>: The Amazon Web Services account ID for the
--   account that created the query logging configuration.</li>
--   <li><tt>ShareStatus</tt>: An indication of whether the query logging
--   configuration is shared with other Amazon Web Services accounts, or
--   was shared with the current account by another Amazon Web Services
--   account. Valid values include: <tt>NOT_SHARED</tt>,
--   <tt>SHARED_WITH_ME</tt>, or <tt>SHARED_BY_ME</tt>.</li>
--   <li><tt>Status</tt>: The status of the query logging configuration. If
--   you specify <tt>Status</tt> for <tt>Name</tt>, specify the applicable
--   status code for <tt>Values</tt>: <tt>CREATING</tt>, <tt>CREATED</tt>,
--   <tt>DELETING</tt>, or <tt>FAILED</tt>. For more information, see
--   <a>Status</a>.</li>
--   </ul>
--   
--   <b>ListResolverQueryLogConfigAssociations</b>
--   
--   Valid values for <tt>Name</tt> include the following:
--   
--   <ul>
--   <li><tt>CreationTime</tt>: The date and time that the VPC was
--   associated with the query logging configuration, in Unix time format
--   and Coordinated Universal Time (UTC).</li>
--   <li><tt>Error</tt>: If the value of <tt>Status</tt> is
--   <tt>FAILED</tt>, specify the cause: <tt>DESTINATION_NOT_FOUND</tt> or
--   <tt>ACCESS_DENIED</tt>.</li>
--   <li><tt>Id</tt>: The ID of the query logging association.</li>
--   <li><tt>ResolverQueryLogConfigId</tt>: The ID of the query logging
--   configuration that a VPC is associated with.</li>
--   <li><tt>ResourceId</tt>: The ID of the Amazon VPC that is associated
--   with the query logging configuration.</li>
--   <li><tt>Status</tt>: The status of the query logging association. If
--   you specify <tt>Status</tt> for <tt>Name</tt>, specify the applicable
--   status code for <tt>Values</tt>: <tt>CREATING</tt>, <tt>CREATED</tt>,
--   <tt>DELETING</tt>, or <tt>FAILED</tt>. For more information, see
--   <a>Status</a>.</li>
--   </ul>
[$sel:name:Filter'] :: Filter -> Maybe Text

-- | Create a value of <a>Filter</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:values:Filter'</a>, <a>filter_values</a> - When you're using a
--   <tt>List</tt> operation and you want the operation to return a subset
--   of objects, such as Resolver endpoints or Resolver rules, the value of
--   the parameter that you want to use to filter objects. For example, to
--   list only inbound Resolver endpoints, specify <tt>Direction</tt> for
--   <tt>Name</tt> and specify <tt>INBOUND</tt> for <tt>Values</tt>.
--   
--   <a>$sel:name:Filter'</a>, <a>filter_name</a> - The name of the
--   parameter that you want to use to filter objects.
--   
--   The valid values for <tt>Name</tt> depend on the action that you're
--   including the filter in, <a>ListResolverEndpoints</a>,
--   <a>ListResolverRules</a>, <a>ListResolverRuleAssociations</a>,
--   <a>ListResolverQueryLogConfigs</a>, or
--   <a>ListResolverQueryLogConfigAssociations</a>.
--   
--   In early versions of Resolver, values for <tt>Name</tt> were listed as
--   uppercase, with underscore (_) delimiters. For example,
--   <tt>CreatorRequestId</tt> was originally listed as
--   <tt>CREATOR_REQUEST_ID</tt>. Uppercase values for <tt>Name</tt> are
--   still supported.
--   
--   <b>ListResolverEndpoints</b>
--   
--   Valid values for <tt>Name</tt> include the following:
--   
--   <ul>
--   <li><tt>CreatorRequestId</tt>: The value that you specified when you
--   created the Resolver endpoint.</li>
--   <li><tt>Direction</tt>: Whether you want to return inbound or outbound
--   Resolver endpoints. If you specify <tt>DIRECTION</tt> for
--   <tt>Name</tt>, specify <tt>INBOUND</tt> or <tt>OUTBOUND</tt> for
--   <tt>Values</tt>.</li>
--   <li><tt>HostVPCId</tt>: The ID of the VPC that inbound DNS queries
--   pass through on the way from your network to your VPCs in a region, or
--   the VPC that outbound queries pass through on the way from your VPCs
--   to your network. In a <a>CreateResolverEndpoint</a> request,
--   <tt>SubnetId</tt> indirectly identifies the VPC. In a
--   <a>GetResolverEndpoint</a> request, the VPC ID for a Resolver endpoint
--   is returned in the <tt>HostVPCId</tt> element.</li>
--   <li><tt>IpAddressCount</tt>: The number of IP addresses that you have
--   associated with the Resolver endpoint.</li>
--   <li><tt>Name</tt>: The name of the Resolver endpoint.</li>
--   <li><tt>SecurityGroupIds</tt>: The IDs of the VPC security groups that
--   you specified when you created the Resolver endpoint.</li>
--   <li><tt>Status</tt>: The status of the Resolver endpoint. If you
--   specify <tt>Status</tt> for <tt>Name</tt>, specify one of the
--   following status codes for <tt>Values</tt>: <tt>CREATING</tt>,
--   <tt>OPERATIONAL</tt>, <tt>UPDATING</tt>, <tt>AUTO_RECOVERING</tt>,
--   <tt>ACTION_NEEDED</tt>, or <tt>DELETING</tt>. For more information,
--   see <tt>Status</tt> in <a>ResolverEndpoint</a>.</li>
--   </ul>
--   
--   <b>ListResolverRules</b>
--   
--   Valid values for <tt>Name</tt> include the following:
--   
--   <ul>
--   <li><tt>CreatorRequestId</tt>: The value that you specified when you
--   created the Resolver rule.</li>
--   <li><tt>DomainName</tt>: The domain name for which Resolver is
--   forwarding DNS queries to your network. In the value that you specify
--   for <tt>Values</tt>, include a trailing dot (.) after the domain name.
--   For example, if the domain name is example.com, specify the following
--   value. Note the "." after <tt>com</tt>:<pre>example.com.</pre></li>
--   <li><tt>Name</tt>: The name of the Resolver rule.</li>
--   <li><tt>ResolverEndpointId</tt>: The ID of the Resolver endpoint that
--   the Resolver rule is associated with.You can filter on the Resolver
--   endpoint only for rules that have a value of <tt>FORWARD</tt> for
--   <tt>RuleType</tt>.</li>
--   <li><tt>Status</tt>: The status of the Resolver rule. If you specify
--   <tt>Status</tt> for <tt>Name</tt>, specify one of the following status
--   codes for <tt>Values</tt>: <tt>COMPLETE</tt>, <tt>DELETING</tt>,
--   <tt>UPDATING</tt>, or <tt>FAILED</tt>.</li>
--   <li><tt>Type</tt>: The type of the Resolver rule. If you specify
--   <tt>TYPE</tt> for <tt>Name</tt>, specify <tt>FORWARD</tt> or
--   <tt>SYSTEM</tt> for <tt>Values</tt>.</li>
--   </ul>
--   
--   <b>ListResolverRuleAssociations</b>
--   
--   Valid values for <tt>Name</tt> include the following:
--   
--   <ul>
--   <li><tt>Name</tt>: The name of the Resolver rule association.</li>
--   <li><tt>ResolverRuleId</tt>: The ID of the Resolver rule that is
--   associated with one or more VPCs.</li>
--   <li><tt>Status</tt>: The status of the Resolver rule association. If
--   you specify <tt>Status</tt> for <tt>Name</tt>, specify one of the
--   following status codes for <tt>Values</tt>: <tt>CREATING</tt>,
--   <tt>COMPLETE</tt>, <tt>DELETING</tt>, or <tt>FAILED</tt>.</li>
--   <li><tt>VPCId</tt>: The ID of the VPC that the Resolver rule is
--   associated with.</li>
--   </ul>
--   
--   <b>ListResolverQueryLogConfigs</b>
--   
--   Valid values for <tt>Name</tt> include the following:
--   
--   <ul>
--   <li><tt>Arn</tt>: The ARN for the query logging configuration.</li>
--   <li><tt>AssociationCount</tt>: The number of VPCs that are associated
--   with the query logging configuration.</li>
--   <li><tt>CreationTime</tt>: The date and time that the query logging
--   configuration was created, in Unix time format and Coordinated
--   Universal Time (UTC).</li>
--   <li><tt>CreatorRequestId</tt>: A unique string that identifies the
--   request that created the query logging configuration.</li>
--   <li><tt>Destination</tt>: The Amazon Web Services service that you
--   want to forward query logs to. Valid values include the
--   following:<ul><li><pre>S3</pre></li><li><pre>CloudWatchLogs</pre></li><li><pre>KinesisFirehose</pre></li></ul></li>
--   <li><tt>DestinationArn</tt>: The ARN of the location that Resolver is
--   sending query logs to. This value can be the ARN for an S3 bucket, a
--   CloudWatch Logs log group, or a Kinesis Data Firehose delivery
--   stream.</li>
--   <li><tt>Id</tt>: The ID of the query logging configuration</li>
--   <li><tt>Name</tt>: The name of the query logging configuration</li>
--   <li><tt>OwnerId</tt>: The Amazon Web Services account ID for the
--   account that created the query logging configuration.</li>
--   <li><tt>ShareStatus</tt>: An indication of whether the query logging
--   configuration is shared with other Amazon Web Services accounts, or
--   was shared with the current account by another Amazon Web Services
--   account. Valid values include: <tt>NOT_SHARED</tt>,
--   <tt>SHARED_WITH_ME</tt>, or <tt>SHARED_BY_ME</tt>.</li>
--   <li><tt>Status</tt>: The status of the query logging configuration. If
--   you specify <tt>Status</tt> for <tt>Name</tt>, specify the applicable
--   status code for <tt>Values</tt>: <tt>CREATING</tt>, <tt>CREATED</tt>,
--   <tt>DELETING</tt>, or <tt>FAILED</tt>. For more information, see
--   <a>Status</a>.</li>
--   </ul>
--   
--   <b>ListResolverQueryLogConfigAssociations</b>
--   
--   Valid values for <tt>Name</tt> include the following:
--   
--   <ul>
--   <li><tt>CreationTime</tt>: The date and time that the VPC was
--   associated with the query logging configuration, in Unix time format
--   and Coordinated Universal Time (UTC).</li>
--   <li><tt>Error</tt>: If the value of <tt>Status</tt> is
--   <tt>FAILED</tt>, specify the cause: <tt>DESTINATION_NOT_FOUND</tt> or
--   <tt>ACCESS_DENIED</tt>.</li>
--   <li><tt>Id</tt>: The ID of the query logging association.</li>
--   <li><tt>ResolverQueryLogConfigId</tt>: The ID of the query logging
--   configuration that a VPC is associated with.</li>
--   <li><tt>ResourceId</tt>: The ID of the Amazon VPC that is associated
--   with the query logging configuration.</li>
--   <li><tt>Status</tt>: The status of the query logging association. If
--   you specify <tt>Status</tt> for <tt>Name</tt>, specify the applicable
--   status code for <tt>Values</tt>: <tt>CREATING</tt>, <tt>CREATED</tt>,
--   <tt>DELETING</tt>, or <tt>FAILED</tt>. For more information, see
--   <a>Status</a>.</li>
--   </ul>
newFilter :: Filter

-- | When you're using a <tt>List</tt> operation and you want the operation
--   to return a subset of objects, such as Resolver endpoints or Resolver
--   rules, the value of the parameter that you want to use to filter
--   objects. For example, to list only inbound Resolver endpoints, specify
--   <tt>Direction</tt> for <tt>Name</tt> and specify <tt>INBOUND</tt> for
--   <tt>Values</tt>.
filter_values :: Lens' Filter (Maybe [Text])

-- | The name of the parameter that you want to use to filter objects.
--   
--   The valid values for <tt>Name</tt> depend on the action that you're
--   including the filter in, <a>ListResolverEndpoints</a>,
--   <a>ListResolverRules</a>, <a>ListResolverRuleAssociations</a>,
--   <a>ListResolverQueryLogConfigs</a>, or
--   <a>ListResolverQueryLogConfigAssociations</a>.
--   
--   In early versions of Resolver, values for <tt>Name</tt> were listed as
--   uppercase, with underscore (_) delimiters. For example,
--   <tt>CreatorRequestId</tt> was originally listed as
--   <tt>CREATOR_REQUEST_ID</tt>. Uppercase values for <tt>Name</tt> are
--   still supported.
--   
--   <b>ListResolverEndpoints</b>
--   
--   Valid values for <tt>Name</tt> include the following:
--   
--   <ul>
--   <li><tt>CreatorRequestId</tt>: The value that you specified when you
--   created the Resolver endpoint.</li>
--   <li><tt>Direction</tt>: Whether you want to return inbound or outbound
--   Resolver endpoints. If you specify <tt>DIRECTION</tt> for
--   <tt>Name</tt>, specify <tt>INBOUND</tt> or <tt>OUTBOUND</tt> for
--   <tt>Values</tt>.</li>
--   <li><tt>HostVPCId</tt>: The ID of the VPC that inbound DNS queries
--   pass through on the way from your network to your VPCs in a region, or
--   the VPC that outbound queries pass through on the way from your VPCs
--   to your network. In a <a>CreateResolverEndpoint</a> request,
--   <tt>SubnetId</tt> indirectly identifies the VPC. In a
--   <a>GetResolverEndpoint</a> request, the VPC ID for a Resolver endpoint
--   is returned in the <tt>HostVPCId</tt> element.</li>
--   <li><tt>IpAddressCount</tt>: The number of IP addresses that you have
--   associated with the Resolver endpoint.</li>
--   <li><tt>Name</tt>: The name of the Resolver endpoint.</li>
--   <li><tt>SecurityGroupIds</tt>: The IDs of the VPC security groups that
--   you specified when you created the Resolver endpoint.</li>
--   <li><tt>Status</tt>: The status of the Resolver endpoint. If you
--   specify <tt>Status</tt> for <tt>Name</tt>, specify one of the
--   following status codes for <tt>Values</tt>: <tt>CREATING</tt>,
--   <tt>OPERATIONAL</tt>, <tt>UPDATING</tt>, <tt>AUTO_RECOVERING</tt>,
--   <tt>ACTION_NEEDED</tt>, or <tt>DELETING</tt>. For more information,
--   see <tt>Status</tt> in <a>ResolverEndpoint</a>.</li>
--   </ul>
--   
--   <b>ListResolverRules</b>
--   
--   Valid values for <tt>Name</tt> include the following:
--   
--   <ul>
--   <li><tt>CreatorRequestId</tt>: The value that you specified when you
--   created the Resolver rule.</li>
--   <li><tt>DomainName</tt>: The domain name for which Resolver is
--   forwarding DNS queries to your network. In the value that you specify
--   for <tt>Values</tt>, include a trailing dot (.) after the domain name.
--   For example, if the domain name is example.com, specify the following
--   value. Note the "." after <tt>com</tt>:<pre>example.com.</pre></li>
--   <li><tt>Name</tt>: The name of the Resolver rule.</li>
--   <li><tt>ResolverEndpointId</tt>: The ID of the Resolver endpoint that
--   the Resolver rule is associated with.You can filter on the Resolver
--   endpoint only for rules that have a value of <tt>FORWARD</tt> for
--   <tt>RuleType</tt>.</li>
--   <li><tt>Status</tt>: The status of the Resolver rule. If you specify
--   <tt>Status</tt> for <tt>Name</tt>, specify one of the following status
--   codes for <tt>Values</tt>: <tt>COMPLETE</tt>, <tt>DELETING</tt>,
--   <tt>UPDATING</tt>, or <tt>FAILED</tt>.</li>
--   <li><tt>Type</tt>: The type of the Resolver rule. If you specify
--   <tt>TYPE</tt> for <tt>Name</tt>, specify <tt>FORWARD</tt> or
--   <tt>SYSTEM</tt> for <tt>Values</tt>.</li>
--   </ul>
--   
--   <b>ListResolverRuleAssociations</b>
--   
--   Valid values for <tt>Name</tt> include the following:
--   
--   <ul>
--   <li><tt>Name</tt>: The name of the Resolver rule association.</li>
--   <li><tt>ResolverRuleId</tt>: The ID of the Resolver rule that is
--   associated with one or more VPCs.</li>
--   <li><tt>Status</tt>: The status of the Resolver rule association. If
--   you specify <tt>Status</tt> for <tt>Name</tt>, specify one of the
--   following status codes for <tt>Values</tt>: <tt>CREATING</tt>,
--   <tt>COMPLETE</tt>, <tt>DELETING</tt>, or <tt>FAILED</tt>.</li>
--   <li><tt>VPCId</tt>: The ID of the VPC that the Resolver rule is
--   associated with.</li>
--   </ul>
--   
--   <b>ListResolverQueryLogConfigs</b>
--   
--   Valid values for <tt>Name</tt> include the following:
--   
--   <ul>
--   <li><tt>Arn</tt>: The ARN for the query logging configuration.</li>
--   <li><tt>AssociationCount</tt>: The number of VPCs that are associated
--   with the query logging configuration.</li>
--   <li><tt>CreationTime</tt>: The date and time that the query logging
--   configuration was created, in Unix time format and Coordinated
--   Universal Time (UTC).</li>
--   <li><tt>CreatorRequestId</tt>: A unique string that identifies the
--   request that created the query logging configuration.</li>
--   <li><tt>Destination</tt>: The Amazon Web Services service that you
--   want to forward query logs to. Valid values include the
--   following:<ul><li><pre>S3</pre></li><li><pre>CloudWatchLogs</pre></li><li><pre>KinesisFirehose</pre></li></ul></li>
--   <li><tt>DestinationArn</tt>: The ARN of the location that Resolver is
--   sending query logs to. This value can be the ARN for an S3 bucket, a
--   CloudWatch Logs log group, or a Kinesis Data Firehose delivery
--   stream.</li>
--   <li><tt>Id</tt>: The ID of the query logging configuration</li>
--   <li><tt>Name</tt>: The name of the query logging configuration</li>
--   <li><tt>OwnerId</tt>: The Amazon Web Services account ID for the
--   account that created the query logging configuration.</li>
--   <li><tt>ShareStatus</tt>: An indication of whether the query logging
--   configuration is shared with other Amazon Web Services accounts, or
--   was shared with the current account by another Amazon Web Services
--   account. Valid values include: <tt>NOT_SHARED</tt>,
--   <tt>SHARED_WITH_ME</tt>, or <tt>SHARED_BY_ME</tt>.</li>
--   <li><tt>Status</tt>: The status of the query logging configuration. If
--   you specify <tt>Status</tt> for <tt>Name</tt>, specify the applicable
--   status code for <tt>Values</tt>: <tt>CREATING</tt>, <tt>CREATED</tt>,
--   <tt>DELETING</tt>, or <tt>FAILED</tt>. For more information, see
--   <a>Status</a>.</li>
--   </ul>
--   
--   <b>ListResolverQueryLogConfigAssociations</b>
--   
--   Valid values for <tt>Name</tt> include the following:
--   
--   <ul>
--   <li><tt>CreationTime</tt>: The date and time that the VPC was
--   associated with the query logging configuration, in Unix time format
--   and Coordinated Universal Time (UTC).</li>
--   <li><tt>Error</tt>: If the value of <tt>Status</tt> is
--   <tt>FAILED</tt>, specify the cause: <tt>DESTINATION_NOT_FOUND</tt> or
--   <tt>ACCESS_DENIED</tt>.</li>
--   <li><tt>Id</tt>: The ID of the query logging association.</li>
--   <li><tt>ResolverQueryLogConfigId</tt>: The ID of the query logging
--   configuration that a VPC is associated with.</li>
--   <li><tt>ResourceId</tt>: The ID of the Amazon VPC that is associated
--   with the query logging configuration.</li>
--   <li><tt>Status</tt>: The status of the query logging association. If
--   you specify <tt>Status</tt> for <tt>Name</tt>, specify the applicable
--   status code for <tt>Values</tt>: <tt>CREATING</tt>, <tt>CREATED</tt>,
--   <tt>DELETING</tt>, or <tt>FAILED</tt>. For more information, see
--   <a>Status</a>.</li>
--   </ul>
filter_name :: Lens' Filter (Maybe Text)

-- | Configuration of the firewall behavior provided by DNS Firewall for a
--   single VPC from Amazon Virtual Private Cloud (Amazon VPC).
--   
--   <i>See:</i> <a>newFirewallConfig</a> smart constructor.
data FirewallConfig
FirewallConfig' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe FirewallFailOpenStatus -> FirewallConfig

-- | The ID of the VPC that this firewall configuration applies to.
[$sel:resourceId:FirewallConfig'] :: FirewallConfig -> Maybe Text

-- | The Amazon Web Services account ID of the owner of the VPC that this
--   firewall configuration applies to.
[$sel:ownerId:FirewallConfig'] :: FirewallConfig -> Maybe Text

-- | The ID of the firewall configuration.
[$sel:id:FirewallConfig'] :: FirewallConfig -> Maybe Text

-- | Determines how DNS Firewall operates during failures, for example when
--   all traffic that is sent to DNS Firewall fails to receive a reply.
--   
--   <ul>
--   <li>By default, fail open is disabled, which means the failure mode is
--   closed. This approach favors security over availability. DNS Firewall
--   returns a failure error when it is unable to properly evaluate a
--   query.</li>
--   <li>If you enable this option, the failure mode is open. This approach
--   favors availability over security. DNS Firewall allows queries to
--   proceed if it is unable to properly evaluate them.</li>
--   </ul>
--   
--   This behavior is only enforced for VPCs that have at least one DNS
--   Firewall rule group association.
[$sel:firewallFailOpen:FirewallConfig'] :: FirewallConfig -> Maybe FirewallFailOpenStatus

-- | Create a value of <a>FirewallConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceId:FirewallConfig'</a>,
--   <a>firewallConfig_resourceId</a> - The ID of the VPC that this
--   firewall configuration applies to.
--   
--   <a>$sel:ownerId:FirewallConfig'</a>, <a>firewallConfig_ownerId</a> -
--   The Amazon Web Services account ID of the owner of the VPC that this
--   firewall configuration applies to.
--   
--   <a>$sel:id:FirewallConfig'</a>, <a>firewallConfig_id</a> - The ID of
--   the firewall configuration.
--   
--   <a>$sel:firewallFailOpen:FirewallConfig'</a>,
--   <a>firewallConfig_firewallFailOpen</a> - Determines how DNS Firewall
--   operates during failures, for example when all traffic that is sent to
--   DNS Firewall fails to receive a reply.
--   
--   <ul>
--   <li>By default, fail open is disabled, which means the failure mode is
--   closed. This approach favors security over availability. DNS Firewall
--   returns a failure error when it is unable to properly evaluate a
--   query.</li>
--   <li>If you enable this option, the failure mode is open. This approach
--   favors availability over security. DNS Firewall allows queries to
--   proceed if it is unable to properly evaluate them.</li>
--   </ul>
--   
--   This behavior is only enforced for VPCs that have at least one DNS
--   Firewall rule group association.
newFirewallConfig :: FirewallConfig

-- | The ID of the VPC that this firewall configuration applies to.
firewallConfig_resourceId :: Lens' FirewallConfig (Maybe Text)

-- | The Amazon Web Services account ID of the owner of the VPC that this
--   firewall configuration applies to.
firewallConfig_ownerId :: Lens' FirewallConfig (Maybe Text)

-- | The ID of the firewall configuration.
firewallConfig_id :: Lens' FirewallConfig (Maybe Text)

-- | Determines how DNS Firewall operates during failures, for example when
--   all traffic that is sent to DNS Firewall fails to receive a reply.
--   
--   <ul>
--   <li>By default, fail open is disabled, which means the failure mode is
--   closed. This approach favors security over availability. DNS Firewall
--   returns a failure error when it is unable to properly evaluate a
--   query.</li>
--   <li>If you enable this option, the failure mode is open. This approach
--   favors availability over security. DNS Firewall allows queries to
--   proceed if it is unable to properly evaluate them.</li>
--   </ul>
--   
--   This behavior is only enforced for VPCs that have at least one DNS
--   Firewall rule group association.
firewallConfig_firewallFailOpen :: Lens' FirewallConfig (Maybe FirewallFailOpenStatus)

-- | High-level information about a list of firewall domains for use in a
--   FirewallRule. This is returned by GetFirewallDomainList.
--   
--   To retrieve the domains that are defined for this domain list, call
--   ListFirewallDomains.
--   
--   <i>See:</i> <a>newFirewallDomainList</a> smart constructor.
data FirewallDomainList
FirewallDomainList' :: Maybe Text -> Maybe FirewallDomainListStatus -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> FirewallDomainList

-- | The date and time that the domain list was created, in Unix time
--   format and Coordinated Universal Time (UTC).
[$sel:creationTime:FirewallDomainList'] :: FirewallDomainList -> Maybe Text

-- | The status of the domain list.
[$sel:status:FirewallDomainList'] :: FirewallDomainList -> Maybe FirewallDomainListStatus

-- | The Amazon Resource Name (ARN) of the firewall domain list.
[$sel:arn:FirewallDomainList'] :: FirewallDomainList -> Maybe Text

-- | A unique string defined by you to identify the request. This allows
--   you to retry failed requests without the risk of running the operation
--   twice. This can be any unique string, for example, a timestamp.
[$sel:creatorRequestId:FirewallDomainList'] :: FirewallDomainList -> Maybe Text

-- | The owner of the list, used only for lists that are not managed by
--   you. For example, the managed domain list
--   <tt>AWSManagedDomainsMalwareDomainList</tt> has the managed owner name
--   <tt>Route 53 Resolver DNS Firewall</tt>.
[$sel:managedOwnerName:FirewallDomainList'] :: FirewallDomainList -> Maybe Text

-- | The number of domain names that are specified in the domain list.
[$sel:domainCount:FirewallDomainList'] :: FirewallDomainList -> Maybe Int

-- | The date and time that the domain list was last modified, in Unix time
--   format and Coordinated Universal Time (UTC).
[$sel:modificationTime:FirewallDomainList'] :: FirewallDomainList -> Maybe Text

-- | Additional information about the status of the list, if available.
[$sel:statusMessage:FirewallDomainList'] :: FirewallDomainList -> Maybe Text

-- | The name of the domain list.
[$sel:name:FirewallDomainList'] :: FirewallDomainList -> Maybe Text

-- | The ID of the domain list.
[$sel:id:FirewallDomainList'] :: FirewallDomainList -> Maybe Text

-- | Create a value of <a>FirewallDomainList</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:FirewallDomainList'</a>,
--   <a>firewallDomainList_creationTime</a> - The date and time that the
--   domain list was created, in Unix time format and Coordinated Universal
--   Time (UTC).
--   
--   <a>$sel:status:FirewallDomainList'</a>,
--   <a>firewallDomainList_status</a> - The status of the domain list.
--   
--   <a>$sel:arn:FirewallDomainList'</a>, <a>firewallDomainList_arn</a> -
--   The Amazon Resource Name (ARN) of the firewall domain list.
--   
--   <a>$sel:creatorRequestId:FirewallDomainList'</a>,
--   <a>firewallDomainList_creatorRequestId</a> - A unique string defined
--   by you to identify the request. This allows you to retry failed
--   requests without the risk of running the operation twice. This can be
--   any unique string, for example, a timestamp.
--   
--   <a>$sel:managedOwnerName:FirewallDomainList'</a>,
--   <a>firewallDomainList_managedOwnerName</a> - The owner of the list,
--   used only for lists that are not managed by you. For example, the
--   managed domain list <tt>AWSManagedDomainsMalwareDomainList</tt> has
--   the managed owner name <tt>Route 53 Resolver DNS Firewall</tt>.
--   
--   <a>$sel:domainCount:FirewallDomainList'</a>,
--   <a>firewallDomainList_domainCount</a> - The number of domain names
--   that are specified in the domain list.
--   
--   <a>$sel:modificationTime:FirewallDomainList'</a>,
--   <a>firewallDomainList_modificationTime</a> - The date and time that
--   the domain list was last modified, in Unix time format and Coordinated
--   Universal Time (UTC).
--   
--   <a>$sel:statusMessage:FirewallDomainList'</a>,
--   <a>firewallDomainList_statusMessage</a> - Additional information about
--   the status of the list, if available.
--   
--   <a>$sel:name:FirewallDomainList'</a>, <a>firewallDomainList_name</a> -
--   The name of the domain list.
--   
--   <a>$sel:id:FirewallDomainList'</a>, <a>firewallDomainList_id</a> - The
--   ID of the domain list.
newFirewallDomainList :: FirewallDomainList

-- | The date and time that the domain list was created, in Unix time
--   format and Coordinated Universal Time (UTC).
firewallDomainList_creationTime :: Lens' FirewallDomainList (Maybe Text)

-- | The status of the domain list.
firewallDomainList_status :: Lens' FirewallDomainList (Maybe FirewallDomainListStatus)

-- | The Amazon Resource Name (ARN) of the firewall domain list.
firewallDomainList_arn :: Lens' FirewallDomainList (Maybe Text)

-- | A unique string defined by you to identify the request. This allows
--   you to retry failed requests without the risk of running the operation
--   twice. This can be any unique string, for example, a timestamp.
firewallDomainList_creatorRequestId :: Lens' FirewallDomainList (Maybe Text)

-- | The owner of the list, used only for lists that are not managed by
--   you. For example, the managed domain list
--   <tt>AWSManagedDomainsMalwareDomainList</tt> has the managed owner name
--   <tt>Route 53 Resolver DNS Firewall</tt>.
firewallDomainList_managedOwnerName :: Lens' FirewallDomainList (Maybe Text)

-- | The number of domain names that are specified in the domain list.
firewallDomainList_domainCount :: Lens' FirewallDomainList (Maybe Int)

-- | The date and time that the domain list was last modified, in Unix time
--   format and Coordinated Universal Time (UTC).
firewallDomainList_modificationTime :: Lens' FirewallDomainList (Maybe Text)

-- | Additional information about the status of the list, if available.
firewallDomainList_statusMessage :: Lens' FirewallDomainList (Maybe Text)

-- | The name of the domain list.
firewallDomainList_name :: Lens' FirewallDomainList (Maybe Text)

-- | The ID of the domain list.
firewallDomainList_id :: Lens' FirewallDomainList (Maybe Text)

-- | Minimal high-level information for a firewall domain list. The action
--   ListFirewallDomainLists returns an array of these objects.
--   
--   To retrieve full information for a firewall domain list, call
--   GetFirewallDomainList and ListFirewallDomains.
--   
--   <i>See:</i> <a>newFirewallDomainListMetadata</a> smart constructor.
data FirewallDomainListMetadata
FirewallDomainListMetadata' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> FirewallDomainListMetadata

-- | The Amazon Resource Name (ARN) of the firewall domain list metadata.
[$sel:arn:FirewallDomainListMetadata'] :: FirewallDomainListMetadata -> Maybe Text

-- | A unique string defined by you to identify the request. This allows
--   you to retry failed requests without the risk of running the operation
--   twice. This can be any unique string, for example, a timestamp.
[$sel:creatorRequestId:FirewallDomainListMetadata'] :: FirewallDomainListMetadata -> Maybe Text

-- | The owner of the list, used only for lists that are not managed by
--   you. For example, the managed domain list
--   <tt>AWSManagedDomainsMalwareDomainList</tt> has the managed owner name
--   <tt>Route 53 Resolver DNS Firewall</tt>.
[$sel:managedOwnerName:FirewallDomainListMetadata'] :: FirewallDomainListMetadata -> Maybe Text

-- | The name of the domain list.
[$sel:name:FirewallDomainListMetadata'] :: FirewallDomainListMetadata -> Maybe Text

-- | The ID of the domain list.
[$sel:id:FirewallDomainListMetadata'] :: FirewallDomainListMetadata -> Maybe Text

-- | Create a value of <a>FirewallDomainListMetadata</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:FirewallDomainListMetadata'</a>,
--   <a>firewallDomainListMetadata_arn</a> - The Amazon Resource Name (ARN)
--   of the firewall domain list metadata.
--   
--   <a>$sel:creatorRequestId:FirewallDomainListMetadata'</a>,
--   <a>firewallDomainListMetadata_creatorRequestId</a> - A unique string
--   defined by you to identify the request. This allows you to retry
--   failed requests without the risk of running the operation twice. This
--   can be any unique string, for example, a timestamp.
--   
--   <a>$sel:managedOwnerName:FirewallDomainListMetadata'</a>,
--   <a>firewallDomainListMetadata_managedOwnerName</a> - The owner of the
--   list, used only for lists that are not managed by you. For example,
--   the managed domain list <tt>AWSManagedDomainsMalwareDomainList</tt>
--   has the managed owner name <tt>Route 53 Resolver DNS Firewall</tt>.
--   
--   <a>$sel:name:FirewallDomainListMetadata'</a>,
--   <a>firewallDomainListMetadata_name</a> - The name of the domain list.
--   
--   <a>$sel:id:FirewallDomainListMetadata'</a>,
--   <a>firewallDomainListMetadata_id</a> - The ID of the domain list.
newFirewallDomainListMetadata :: FirewallDomainListMetadata

-- | The Amazon Resource Name (ARN) of the firewall domain list metadata.
firewallDomainListMetadata_arn :: Lens' FirewallDomainListMetadata (Maybe Text)

-- | A unique string defined by you to identify the request. This allows
--   you to retry failed requests without the risk of running the operation
--   twice. This can be any unique string, for example, a timestamp.
firewallDomainListMetadata_creatorRequestId :: Lens' FirewallDomainListMetadata (Maybe Text)

-- | The owner of the list, used only for lists that are not managed by
--   you. For example, the managed domain list
--   <tt>AWSManagedDomainsMalwareDomainList</tt> has the managed owner name
--   <tt>Route 53 Resolver DNS Firewall</tt>.
firewallDomainListMetadata_managedOwnerName :: Lens' FirewallDomainListMetadata (Maybe Text)

-- | The name of the domain list.
firewallDomainListMetadata_name :: Lens' FirewallDomainListMetadata (Maybe Text)

-- | The ID of the domain list.
firewallDomainListMetadata_id :: Lens' FirewallDomainListMetadata (Maybe Text)

-- | A single firewall rule in a rule group.
--   
--   <i>See:</i> <a>newFirewallRule</a> smart constructor.
data FirewallRule
FirewallRule' :: Maybe Text -> Maybe BlockOverrideDnsType -> Maybe Text -> Maybe Int -> Maybe BlockResponse -> Maybe Text -> Maybe Text -> Maybe Action -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe Text -> FirewallRule

-- | The date and time that the rule was created, in Unix time format and
--   Coordinated Universal Time (UTC).
[$sel:creationTime:FirewallRule'] :: FirewallRule -> Maybe Text

-- | The DNS record's type. This determines the format of the record value
--   that you provided in <tt>BlockOverrideDomain</tt>. Used for the rule
--   action <tt>BLOCK</tt> with a <tt>BlockResponse</tt> setting of
--   <tt>OVERRIDE</tt>.
[$sel:blockOverrideDnsType:FirewallRule'] :: FirewallRule -> Maybe BlockOverrideDnsType

-- | The unique identifier of the firewall rule group of the rule.
[$sel:firewallRuleGroupId:FirewallRule'] :: FirewallRule -> Maybe Text

-- | The priority of the rule in the rule group. This value must be unique
--   within the rule group. DNS Firewall processes the rules in a rule
--   group by order of priority, starting from the lowest setting.
[$sel:priority:FirewallRule'] :: FirewallRule -> Maybe Int

-- | The way that you want DNS Firewall to block the request. Used for the
--   rule action setting <tt>BLOCK</tt>.
--   
--   <ul>
--   <li><tt>NODATA</tt> - Respond indicating that the query was
--   successful, but no response is available for it.</li>
--   <li><tt>NXDOMAIN</tt> - Respond indicating that the domain name that's
--   in the query doesn't exist.</li>
--   <li><tt>OVERRIDE</tt> - Provide a custom override in the response.
--   This option requires custom handling details in the rule's
--   <tt>BlockOverride*</tt> settings.</li>
--   </ul>
[$sel:blockResponse:FirewallRule'] :: FirewallRule -> Maybe BlockResponse

-- | A unique string defined by you to identify the request. This allows
--   you to retry failed requests without the risk of executing the
--   operation twice. This can be any unique string, for example, a
--   timestamp.
[$sel:creatorRequestId:FirewallRule'] :: FirewallRule -> Maybe Text

-- | The date and time that the rule was last modified, in Unix time format
--   and Coordinated Universal Time (UTC).
[$sel:modificationTime:FirewallRule'] :: FirewallRule -> Maybe Text

-- | The action that DNS Firewall should take on a DNS query when it
--   matches one of the domains in the rule's domain list:
--   
--   <ul>
--   <li><tt>ALLOW</tt> - Permit the request to go through.</li>
--   <li><tt>ALERT</tt> - Permit the request to go through but send an
--   alert to the logs.</li>
--   <li><tt>BLOCK</tt> - Disallow the request. If this is specified,
--   additional handling details are provided in the rule's
--   <tt>BlockResponse</tt> setting.</li>
--   </ul>
[$sel:action:FirewallRule'] :: FirewallRule -> Maybe Action

-- | The recommended amount of time, in seconds, for the DNS resolver or
--   web browser to cache the provided override record. Used for the rule
--   action <tt>BLOCK</tt> with a <tt>BlockResponse</tt> setting of
--   <tt>OVERRIDE</tt>.
[$sel:blockOverrideTtl:FirewallRule'] :: FirewallRule -> Maybe Int

-- | The name of the rule.
[$sel:name:FirewallRule'] :: FirewallRule -> Maybe Text

-- | The custom DNS record to send back in response to the query. Used for
--   the rule action <tt>BLOCK</tt> with a <tt>BlockResponse</tt> setting
--   of <tt>OVERRIDE</tt>.
[$sel:blockOverrideDomain:FirewallRule'] :: FirewallRule -> Maybe Text

-- | The ID of the domain list that's used in the rule.
[$sel:firewallDomainListId:FirewallRule'] :: FirewallRule -> Maybe Text

-- | Create a value of <a>FirewallRule</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:FirewallRule'</a>,
--   <a>firewallRule_creationTime</a> - The date and time that the rule was
--   created, in Unix time format and Coordinated Universal Time (UTC).
--   
--   <a>$sel:blockOverrideDnsType:FirewallRule'</a>,
--   <a>firewallRule_blockOverrideDnsType</a> - The DNS record's type. This
--   determines the format of the record value that you provided in
--   <tt>BlockOverrideDomain</tt>. Used for the rule action <tt>BLOCK</tt>
--   with a <tt>BlockResponse</tt> setting of <tt>OVERRIDE</tt>.
--   
--   <a>$sel:firewallRuleGroupId:FirewallRule'</a>,
--   <a>firewallRule_firewallRuleGroupId</a> - The unique identifier of the
--   firewall rule group of the rule.
--   
--   <a>$sel:priority:FirewallRule'</a>, <a>firewallRule_priority</a> - The
--   priority of the rule in the rule group. This value must be unique
--   within the rule group. DNS Firewall processes the rules in a rule
--   group by order of priority, starting from the lowest setting.
--   
--   <a>$sel:blockResponse:FirewallRule'</a>,
--   <a>firewallRule_blockResponse</a> - The way that you want DNS Firewall
--   to block the request. Used for the rule action setting <tt>BLOCK</tt>.
--   
--   <ul>
--   <li><tt>NODATA</tt> - Respond indicating that the query was
--   successful, but no response is available for it.</li>
--   <li><tt>NXDOMAIN</tt> - Respond indicating that the domain name that's
--   in the query doesn't exist.</li>
--   <li><tt>OVERRIDE</tt> - Provide a custom override in the response.
--   This option requires custom handling details in the rule's
--   <tt>BlockOverride*</tt> settings.</li>
--   </ul>
--   
--   <a>$sel:creatorRequestId:FirewallRule'</a>,
--   <a>firewallRule_creatorRequestId</a> - A unique string defined by you
--   to identify the request. This allows you to retry failed requests
--   without the risk of executing the operation twice. This can be any
--   unique string, for example, a timestamp.
--   
--   <a>$sel:modificationTime:FirewallRule'</a>,
--   <a>firewallRule_modificationTime</a> - The date and time that the rule
--   was last modified, in Unix time format and Coordinated Universal Time
--   (UTC).
--   
--   <a>$sel:action:FirewallRule'</a>, <a>firewallRule_action</a> - The
--   action that DNS Firewall should take on a DNS query when it matches
--   one of the domains in the rule's domain list:
--   
--   <ul>
--   <li><tt>ALLOW</tt> - Permit the request to go through.</li>
--   <li><tt>ALERT</tt> - Permit the request to go through but send an
--   alert to the logs.</li>
--   <li><tt>BLOCK</tt> - Disallow the request. If this is specified,
--   additional handling details are provided in the rule's
--   <tt>BlockResponse</tt> setting.</li>
--   </ul>
--   
--   <a>$sel:blockOverrideTtl:FirewallRule'</a>,
--   <a>firewallRule_blockOverrideTtl</a> - The recommended amount of time,
--   in seconds, for the DNS resolver or web browser to cache the provided
--   override record. Used for the rule action <tt>BLOCK</tt> with a
--   <tt>BlockResponse</tt> setting of <tt>OVERRIDE</tt>.
--   
--   <a>$sel:name:FirewallRule'</a>, <a>firewallRule_name</a> - The name of
--   the rule.
--   
--   <a>$sel:blockOverrideDomain:FirewallRule'</a>,
--   <a>firewallRule_blockOverrideDomain</a> - The custom DNS record to
--   send back in response to the query. Used for the rule action
--   <tt>BLOCK</tt> with a <tt>BlockResponse</tt> setting of
--   <tt>OVERRIDE</tt>.
--   
--   <a>$sel:firewallDomainListId:FirewallRule'</a>,
--   <a>firewallRule_firewallDomainListId</a> - The ID of the domain list
--   that's used in the rule.
newFirewallRule :: FirewallRule

-- | The date and time that the rule was created, in Unix time format and
--   Coordinated Universal Time (UTC).
firewallRule_creationTime :: Lens' FirewallRule (Maybe Text)

-- | The DNS record's type. This determines the format of the record value
--   that you provided in <tt>BlockOverrideDomain</tt>. Used for the rule
--   action <tt>BLOCK</tt> with a <tt>BlockResponse</tt> setting of
--   <tt>OVERRIDE</tt>.
firewallRule_blockOverrideDnsType :: Lens' FirewallRule (Maybe BlockOverrideDnsType)

-- | The unique identifier of the firewall rule group of the rule.
firewallRule_firewallRuleGroupId :: Lens' FirewallRule (Maybe Text)

-- | The priority of the rule in the rule group. This value must be unique
--   within the rule group. DNS Firewall processes the rules in a rule
--   group by order of priority, starting from the lowest setting.
firewallRule_priority :: Lens' FirewallRule (Maybe Int)

-- | The way that you want DNS Firewall to block the request. Used for the
--   rule action setting <tt>BLOCK</tt>.
--   
--   <ul>
--   <li><tt>NODATA</tt> - Respond indicating that the query was
--   successful, but no response is available for it.</li>
--   <li><tt>NXDOMAIN</tt> - Respond indicating that the domain name that's
--   in the query doesn't exist.</li>
--   <li><tt>OVERRIDE</tt> - Provide a custom override in the response.
--   This option requires custom handling details in the rule's
--   <tt>BlockOverride*</tt> settings.</li>
--   </ul>
firewallRule_blockResponse :: Lens' FirewallRule (Maybe BlockResponse)

-- | A unique string defined by you to identify the request. This allows
--   you to retry failed requests without the risk of executing the
--   operation twice. This can be any unique string, for example, a
--   timestamp.
firewallRule_creatorRequestId :: Lens' FirewallRule (Maybe Text)

-- | The date and time that the rule was last modified, in Unix time format
--   and Coordinated Universal Time (UTC).
firewallRule_modificationTime :: Lens' FirewallRule (Maybe Text)

-- | The action that DNS Firewall should take on a DNS query when it
--   matches one of the domains in the rule's domain list:
--   
--   <ul>
--   <li><tt>ALLOW</tt> - Permit the request to go through.</li>
--   <li><tt>ALERT</tt> - Permit the request to go through but send an
--   alert to the logs.</li>
--   <li><tt>BLOCK</tt> - Disallow the request. If this is specified,
--   additional handling details are provided in the rule's
--   <tt>BlockResponse</tt> setting.</li>
--   </ul>
firewallRule_action :: Lens' FirewallRule (Maybe Action)

-- | The recommended amount of time, in seconds, for the DNS resolver or
--   web browser to cache the provided override record. Used for the rule
--   action <tt>BLOCK</tt> with a <tt>BlockResponse</tt> setting of
--   <tt>OVERRIDE</tt>.
firewallRule_blockOverrideTtl :: Lens' FirewallRule (Maybe Int)

-- | The name of the rule.
firewallRule_name :: Lens' FirewallRule (Maybe Text)

-- | The custom DNS record to send back in response to the query. Used for
--   the rule action <tt>BLOCK</tt> with a <tt>BlockResponse</tt> setting
--   of <tt>OVERRIDE</tt>.
firewallRule_blockOverrideDomain :: Lens' FirewallRule (Maybe Text)

-- | The ID of the domain list that's used in the rule.
firewallRule_firewallDomainListId :: Lens' FirewallRule (Maybe Text)

-- | High-level information for a firewall rule group. A firewall rule
--   group is a collection of rules that DNS Firewall uses to filter DNS
--   network traffic for a VPC. To retrieve the rules for the rule group,
--   call ListFirewallRules.
--   
--   <i>See:</i> <a>newFirewallRuleGroup</a> smart constructor.
data FirewallRuleGroup
FirewallRuleGroup' :: Maybe Text -> Maybe FirewallRuleGroupStatus -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe ShareStatus -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Int -> FirewallRuleGroup

-- | The date and time that the rule group was created, in Unix time format
--   and Coordinated Universal Time (UTC).
[$sel:creationTime:FirewallRuleGroup'] :: FirewallRuleGroup -> Maybe Text

-- | The status of the domain list.
[$sel:status:FirewallRuleGroup'] :: FirewallRuleGroup -> Maybe FirewallRuleGroupStatus

-- | The ARN (Amazon Resource Name) of the rule group.
[$sel:arn:FirewallRuleGroup'] :: FirewallRuleGroup -> Maybe Text

-- | A unique string defined by you to identify the request. This allows
--   you to retry failed requests without the risk of running the operation
--   twice. This can be any unique string, for example, a timestamp.
[$sel:creatorRequestId:FirewallRuleGroup'] :: FirewallRuleGroup -> Maybe Text

-- | The date and time that the rule group was last modified, in Unix time
--   format and Coordinated Universal Time (UTC).
[$sel:modificationTime:FirewallRuleGroup'] :: FirewallRuleGroup -> Maybe Text

-- | Whether the rule group is shared with other Amazon Web Services
--   accounts, or was shared with the current account by another Amazon Web
--   Services account. Sharing is configured through Resource Access
--   Manager (RAM).
[$sel:shareStatus:FirewallRuleGroup'] :: FirewallRuleGroup -> Maybe ShareStatus

-- | The Amazon Web Services account ID for the account that created the
--   rule group. When a rule group is shared with your account, this is the
--   account that has shared the rule group with you.
[$sel:ownerId:FirewallRuleGroup'] :: FirewallRuleGroup -> Maybe Text

-- | Additional information about the status of the rule group, if
--   available.
[$sel:statusMessage:FirewallRuleGroup'] :: FirewallRuleGroup -> Maybe Text

-- | The name of the rule group.
[$sel:name:FirewallRuleGroup'] :: FirewallRuleGroup -> Maybe Text

-- | The ID of the rule group.
[$sel:id:FirewallRuleGroup'] :: FirewallRuleGroup -> Maybe Text

-- | The number of rules in the rule group.
[$sel:ruleCount:FirewallRuleGroup'] :: FirewallRuleGroup -> Maybe Int

-- | Create a value of <a>FirewallRuleGroup</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:FirewallRuleGroup'</a>,
--   <a>firewallRuleGroup_creationTime</a> - The date and time that the
--   rule group was created, in Unix time format and Coordinated Universal
--   Time (UTC).
--   
--   <a>$sel:status:FirewallRuleGroup'</a>, <a>firewallRuleGroup_status</a>
--   - The status of the domain list.
--   
--   <a>$sel:arn:FirewallRuleGroup'</a>, <a>firewallRuleGroup_arn</a> - The
--   ARN (Amazon Resource Name) of the rule group.
--   
--   <a>$sel:creatorRequestId:FirewallRuleGroup'</a>,
--   <a>firewallRuleGroup_creatorRequestId</a> - A unique string defined by
--   you to identify the request. This allows you to retry failed requests
--   without the risk of running the operation twice. This can be any
--   unique string, for example, a timestamp.
--   
--   <a>$sel:modificationTime:FirewallRuleGroup'</a>,
--   <a>firewallRuleGroup_modificationTime</a> - The date and time that the
--   rule group was last modified, in Unix time format and Coordinated
--   Universal Time (UTC).
--   
--   <a>$sel:shareStatus:FirewallRuleGroup'</a>,
--   <a>firewallRuleGroup_shareStatus</a> - Whether the rule group is
--   shared with other Amazon Web Services accounts, or was shared with the
--   current account by another Amazon Web Services account. Sharing is
--   configured through Resource Access Manager (RAM).
--   
--   <a>$sel:ownerId:FirewallRuleGroup'</a>,
--   <a>firewallRuleGroup_ownerId</a> - The Amazon Web Services account ID
--   for the account that created the rule group. When a rule group is
--   shared with your account, this is the account that has shared the rule
--   group with you.
--   
--   <a>$sel:statusMessage:FirewallRuleGroup'</a>,
--   <a>firewallRuleGroup_statusMessage</a> - Additional information about
--   the status of the rule group, if available.
--   
--   <a>$sel:name:FirewallRuleGroup'</a>, <a>firewallRuleGroup_name</a> -
--   The name of the rule group.
--   
--   <a>$sel:id:FirewallRuleGroup'</a>, <a>firewallRuleGroup_id</a> - The
--   ID of the rule group.
--   
--   <a>$sel:ruleCount:FirewallRuleGroup'</a>,
--   <a>firewallRuleGroup_ruleCount</a> - The number of rules in the rule
--   group.
newFirewallRuleGroup :: FirewallRuleGroup

-- | The date and time that the rule group was created, in Unix time format
--   and Coordinated Universal Time (UTC).
firewallRuleGroup_creationTime :: Lens' FirewallRuleGroup (Maybe Text)

-- | The status of the domain list.
firewallRuleGroup_status :: Lens' FirewallRuleGroup (Maybe FirewallRuleGroupStatus)

-- | The ARN (Amazon Resource Name) of the rule group.
firewallRuleGroup_arn :: Lens' FirewallRuleGroup (Maybe Text)

-- | A unique string defined by you to identify the request. This allows
--   you to retry failed requests without the risk of running the operation
--   twice. This can be any unique string, for example, a timestamp.
firewallRuleGroup_creatorRequestId :: Lens' FirewallRuleGroup (Maybe Text)

-- | The date and time that the rule group was last modified, in Unix time
--   format and Coordinated Universal Time (UTC).
firewallRuleGroup_modificationTime :: Lens' FirewallRuleGroup (Maybe Text)

-- | Whether the rule group is shared with other Amazon Web Services
--   accounts, or was shared with the current account by another Amazon Web
--   Services account. Sharing is configured through Resource Access
--   Manager (RAM).
firewallRuleGroup_shareStatus :: Lens' FirewallRuleGroup (Maybe ShareStatus)

-- | The Amazon Web Services account ID for the account that created the
--   rule group. When a rule group is shared with your account, this is the
--   account that has shared the rule group with you.
firewallRuleGroup_ownerId :: Lens' FirewallRuleGroup (Maybe Text)

-- | Additional information about the status of the rule group, if
--   available.
firewallRuleGroup_statusMessage :: Lens' FirewallRuleGroup (Maybe Text)

-- | The name of the rule group.
firewallRuleGroup_name :: Lens' FirewallRuleGroup (Maybe Text)

-- | The ID of the rule group.
firewallRuleGroup_id :: Lens' FirewallRuleGroup (Maybe Text)

-- | The number of rules in the rule group.
firewallRuleGroup_ruleCount :: Lens' FirewallRuleGroup (Maybe Int)

-- | An association between a firewall rule group and a VPC, which enables
--   DNS filtering for the VPC.
--   
--   <i>See:</i> <a>newFirewallRuleGroupAssociation</a> smart constructor.
data FirewallRuleGroupAssociation
FirewallRuleGroupAssociation' :: Maybe Text -> Maybe FirewallRuleGroupAssociationStatus -> Maybe MutationProtectionStatus -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> FirewallRuleGroupAssociation

-- | The date and time that the association was created, in Unix time
--   format and Coordinated Universal Time (UTC).
[$sel:creationTime:FirewallRuleGroupAssociation'] :: FirewallRuleGroupAssociation -> Maybe Text

-- | The current status of the association.
[$sel:status:FirewallRuleGroupAssociation'] :: FirewallRuleGroupAssociation -> Maybe FirewallRuleGroupAssociationStatus

-- | If enabled, this setting disallows modification or removal of the
--   association, to help prevent against accidentally altering DNS
--   firewall protections.
[$sel:mutationProtection:FirewallRuleGroupAssociation'] :: FirewallRuleGroupAssociation -> Maybe MutationProtectionStatus

-- | The unique identifier of the firewall rule group.
[$sel:firewallRuleGroupId:FirewallRuleGroupAssociation'] :: FirewallRuleGroupAssociation -> Maybe Text

-- | The setting that determines the processing order of the rule group
--   among the rule groups that are associated with a single VPC. DNS
--   Firewall filters VPC traffic starting from rule group with the lowest
--   numeric priority setting.
[$sel:priority:FirewallRuleGroupAssociation'] :: FirewallRuleGroupAssociation -> Maybe Int

-- | The Amazon Resource Name (ARN) of the firewall rule group association.
[$sel:arn:FirewallRuleGroupAssociation'] :: FirewallRuleGroupAssociation -> Maybe Text

-- | The unique identifier of the VPC that is associated with the rule
--   group.
[$sel:vpcId:FirewallRuleGroupAssociation'] :: FirewallRuleGroupAssociation -> Maybe Text

-- | A unique string defined by you to identify the request. This allows
--   you to retry failed requests without the risk of running the operation
--   twice. This can be any unique string, for example, a timestamp.
[$sel:creatorRequestId:FirewallRuleGroupAssociation'] :: FirewallRuleGroupAssociation -> Maybe Text

-- | The owner of the association, used only for associations that are not
--   managed by you. If you use Firewall Manager to manage your DNS
--   Firewalls, then this reports Firewall Manager as the managed owner.
[$sel:managedOwnerName:FirewallRuleGroupAssociation'] :: FirewallRuleGroupAssociation -> Maybe Text

-- | The date and time that the association was last modified, in Unix time
--   format and Coordinated Universal Time (UTC).
[$sel:modificationTime:FirewallRuleGroupAssociation'] :: FirewallRuleGroupAssociation -> Maybe Text

-- | Additional information about the status of the response, if available.
[$sel:statusMessage:FirewallRuleGroupAssociation'] :: FirewallRuleGroupAssociation -> Maybe Text

-- | The name of the association.
[$sel:name:FirewallRuleGroupAssociation'] :: FirewallRuleGroupAssociation -> Maybe Text

-- | The identifier for the association.
[$sel:id:FirewallRuleGroupAssociation'] :: FirewallRuleGroupAssociation -> Maybe Text

-- | Create a value of <a>FirewallRuleGroupAssociation</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:FirewallRuleGroupAssociation'</a>,
--   <a>firewallRuleGroupAssociation_creationTime</a> - The date and time
--   that the association was created, in Unix time format and Coordinated
--   Universal Time (UTC).
--   
--   <a>$sel:status:FirewallRuleGroupAssociation'</a>,
--   <a>firewallRuleGroupAssociation_status</a> - The current status of the
--   association.
--   
--   <a>$sel:mutationProtection:FirewallRuleGroupAssociation'</a>,
--   <a>firewallRuleGroupAssociation_mutationProtection</a> - If enabled,
--   this setting disallows modification or removal of the association, to
--   help prevent against accidentally altering DNS firewall protections.
--   
--   <a>$sel:firewallRuleGroupId:FirewallRuleGroupAssociation'</a>,
--   <a>firewallRuleGroupAssociation_firewallRuleGroupId</a> - The unique
--   identifier of the firewall rule group.
--   
--   <a>$sel:priority:FirewallRuleGroupAssociation'</a>,
--   <a>firewallRuleGroupAssociation_priority</a> - The setting that
--   determines the processing order of the rule group among the rule
--   groups that are associated with a single VPC. DNS Firewall filters VPC
--   traffic starting from rule group with the lowest numeric priority
--   setting.
--   
--   <a>$sel:arn:FirewallRuleGroupAssociation'</a>,
--   <a>firewallRuleGroupAssociation_arn</a> - The Amazon Resource Name
--   (ARN) of the firewall rule group association.
--   
--   <a>$sel:vpcId:FirewallRuleGroupAssociation'</a>,
--   <a>firewallRuleGroupAssociation_vpcId</a> - The unique identifier of
--   the VPC that is associated with the rule group.
--   
--   <a>$sel:creatorRequestId:FirewallRuleGroupAssociation'</a>,
--   <a>firewallRuleGroupAssociation_creatorRequestId</a> - A unique string
--   defined by you to identify the request. This allows you to retry
--   failed requests without the risk of running the operation twice. This
--   can be any unique string, for example, a timestamp.
--   
--   <a>$sel:managedOwnerName:FirewallRuleGroupAssociation'</a>,
--   <a>firewallRuleGroupAssociation_managedOwnerName</a> - The owner of
--   the association, used only for associations that are not managed by
--   you. If you use Firewall Manager to manage your DNS Firewalls, then
--   this reports Firewall Manager as the managed owner.
--   
--   <a>$sel:modificationTime:FirewallRuleGroupAssociation'</a>,
--   <a>firewallRuleGroupAssociation_modificationTime</a> - The date and
--   time that the association was last modified, in Unix time format and
--   Coordinated Universal Time (UTC).
--   
--   <a>$sel:statusMessage:FirewallRuleGroupAssociation'</a>,
--   <a>firewallRuleGroupAssociation_statusMessage</a> - Additional
--   information about the status of the response, if available.
--   
--   <a>$sel:name:FirewallRuleGroupAssociation'</a>,
--   <a>firewallRuleGroupAssociation_name</a> - The name of the
--   association.
--   
--   <a>$sel:id:FirewallRuleGroupAssociation'</a>,
--   <a>firewallRuleGroupAssociation_id</a> - The identifier for the
--   association.
newFirewallRuleGroupAssociation :: FirewallRuleGroupAssociation

-- | The date and time that the association was created, in Unix time
--   format and Coordinated Universal Time (UTC).
firewallRuleGroupAssociation_creationTime :: Lens' FirewallRuleGroupAssociation (Maybe Text)

-- | The current status of the association.
firewallRuleGroupAssociation_status :: Lens' FirewallRuleGroupAssociation (Maybe FirewallRuleGroupAssociationStatus)

-- | If enabled, this setting disallows modification or removal of the
--   association, to help prevent against accidentally altering DNS
--   firewall protections.
firewallRuleGroupAssociation_mutationProtection :: Lens' FirewallRuleGroupAssociation (Maybe MutationProtectionStatus)

-- | The unique identifier of the firewall rule group.
firewallRuleGroupAssociation_firewallRuleGroupId :: Lens' FirewallRuleGroupAssociation (Maybe Text)

-- | The setting that determines the processing order of the rule group
--   among the rule groups that are associated with a single VPC. DNS
--   Firewall filters VPC traffic starting from rule group with the lowest
--   numeric priority setting.
firewallRuleGroupAssociation_priority :: Lens' FirewallRuleGroupAssociation (Maybe Int)

-- | The Amazon Resource Name (ARN) of the firewall rule group association.
firewallRuleGroupAssociation_arn :: Lens' FirewallRuleGroupAssociation (Maybe Text)

-- | The unique identifier of the VPC that is associated with the rule
--   group.
firewallRuleGroupAssociation_vpcId :: Lens' FirewallRuleGroupAssociation (Maybe Text)

-- | A unique string defined by you to identify the request. This allows
--   you to retry failed requests without the risk of running the operation
--   twice. This can be any unique string, for example, a timestamp.
firewallRuleGroupAssociation_creatorRequestId :: Lens' FirewallRuleGroupAssociation (Maybe Text)

-- | The owner of the association, used only for associations that are not
--   managed by you. If you use Firewall Manager to manage your DNS
--   Firewalls, then this reports Firewall Manager as the managed owner.
firewallRuleGroupAssociation_managedOwnerName :: Lens' FirewallRuleGroupAssociation (Maybe Text)

-- | The date and time that the association was last modified, in Unix time
--   format and Coordinated Universal Time (UTC).
firewallRuleGroupAssociation_modificationTime :: Lens' FirewallRuleGroupAssociation (Maybe Text)

-- | Additional information about the status of the response, if available.
firewallRuleGroupAssociation_statusMessage :: Lens' FirewallRuleGroupAssociation (Maybe Text)

-- | The name of the association.
firewallRuleGroupAssociation_name :: Lens' FirewallRuleGroupAssociation (Maybe Text)

-- | The identifier for the association.
firewallRuleGroupAssociation_id :: Lens' FirewallRuleGroupAssociation (Maybe Text)

-- | Minimal high-level information for a firewall rule group. The action
--   ListFirewallRuleGroups returns an array of these objects.
--   
--   To retrieve full information for a firewall rule group, call
--   GetFirewallRuleGroup and ListFirewallRules.
--   
--   <i>See:</i> <a>newFirewallRuleGroupMetadata</a> smart constructor.
data FirewallRuleGroupMetadata
FirewallRuleGroupMetadata' :: Maybe Text -> Maybe Text -> Maybe ShareStatus -> Maybe Text -> Maybe Text -> Maybe Text -> FirewallRuleGroupMetadata

-- | The ARN (Amazon Resource Name) of the rule group.
[$sel:arn:FirewallRuleGroupMetadata'] :: FirewallRuleGroupMetadata -> Maybe Text

-- | A unique string defined by you to identify the request. This allows
--   you to retry failed requests without the risk of running the operation
--   twice. This can be any unique string, for example, a timestamp.
[$sel:creatorRequestId:FirewallRuleGroupMetadata'] :: FirewallRuleGroupMetadata -> Maybe Text

-- | Whether the rule group is shared with other Amazon Web Services
--   accounts, or was shared with the current account by another Amazon Web
--   Services account. Sharing is configured through Resource Access
--   Manager (RAM).
[$sel:shareStatus:FirewallRuleGroupMetadata'] :: FirewallRuleGroupMetadata -> Maybe ShareStatus

-- | The Amazon Web Services account ID for the account that created the
--   rule group. When a rule group is shared with your account, this is the
--   account that has shared the rule group with you.
[$sel:ownerId:FirewallRuleGroupMetadata'] :: FirewallRuleGroupMetadata -> Maybe Text

-- | The name of the rule group.
[$sel:name:FirewallRuleGroupMetadata'] :: FirewallRuleGroupMetadata -> Maybe Text

-- | The ID of the rule group.
[$sel:id:FirewallRuleGroupMetadata'] :: FirewallRuleGroupMetadata -> Maybe Text

-- | Create a value of <a>FirewallRuleGroupMetadata</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:FirewallRuleGroupMetadata'</a>,
--   <a>firewallRuleGroupMetadata_arn</a> - The ARN (Amazon Resource Name)
--   of the rule group.
--   
--   <a>$sel:creatorRequestId:FirewallRuleGroupMetadata'</a>,
--   <a>firewallRuleGroupMetadata_creatorRequestId</a> - A unique string
--   defined by you to identify the request. This allows you to retry
--   failed requests without the risk of running the operation twice. This
--   can be any unique string, for example, a timestamp.
--   
--   <a>$sel:shareStatus:FirewallRuleGroupMetadata'</a>,
--   <a>firewallRuleGroupMetadata_shareStatus</a> - Whether the rule group
--   is shared with other Amazon Web Services accounts, or was shared with
--   the current account by another Amazon Web Services account. Sharing is
--   configured through Resource Access Manager (RAM).
--   
--   <a>$sel:ownerId:FirewallRuleGroupMetadata'</a>,
--   <a>firewallRuleGroupMetadata_ownerId</a> - The Amazon Web Services
--   account ID for the account that created the rule group. When a rule
--   group is shared with your account, this is the account that has shared
--   the rule group with you.
--   
--   <a>$sel:name:FirewallRuleGroupMetadata'</a>,
--   <a>firewallRuleGroupMetadata_name</a> - The name of the rule group.
--   
--   <a>$sel:id:FirewallRuleGroupMetadata'</a>,
--   <a>firewallRuleGroupMetadata_id</a> - The ID of the rule group.
newFirewallRuleGroupMetadata :: FirewallRuleGroupMetadata

-- | The ARN (Amazon Resource Name) of the rule group.
firewallRuleGroupMetadata_arn :: Lens' FirewallRuleGroupMetadata (Maybe Text)

-- | A unique string defined by you to identify the request. This allows
--   you to retry failed requests without the risk of running the operation
--   twice. This can be any unique string, for example, a timestamp.
firewallRuleGroupMetadata_creatorRequestId :: Lens' FirewallRuleGroupMetadata (Maybe Text)

-- | Whether the rule group is shared with other Amazon Web Services
--   accounts, or was shared with the current account by another Amazon Web
--   Services account. Sharing is configured through Resource Access
--   Manager (RAM).
firewallRuleGroupMetadata_shareStatus :: Lens' FirewallRuleGroupMetadata (Maybe ShareStatus)

-- | The Amazon Web Services account ID for the account that created the
--   rule group. When a rule group is shared with your account, this is the
--   account that has shared the rule group with you.
firewallRuleGroupMetadata_ownerId :: Lens' FirewallRuleGroupMetadata (Maybe Text)

-- | The name of the rule group.
firewallRuleGroupMetadata_name :: Lens' FirewallRuleGroupMetadata (Maybe Text)

-- | The ID of the rule group.
firewallRuleGroupMetadata_id :: Lens' FirewallRuleGroupMetadata (Maybe Text)

-- | In a <a>CreateResolverEndpoint</a> request, the IP address that DNS
--   queries originate from (for outbound endpoints) or that you forward
--   DNS queries to (for inbound endpoints). <tt>IpAddressRequest</tt> also
--   includes the ID of the subnet that contains the IP address.
--   
--   <i>See:</i> <a>newIpAddressRequest</a> smart constructor.
data IpAddressRequest
IpAddressRequest' :: Maybe Text -> Text -> IpAddressRequest

-- | The IP address that you want to use for DNS queries.
[$sel:ip:IpAddressRequest'] :: IpAddressRequest -> Maybe Text

-- | The ID of the subnet that contains the IP address.
[$sel:subnetId:IpAddressRequest'] :: IpAddressRequest -> Text

-- | Create a value of <a>IpAddressRequest</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ip:IpAddressRequest'</a>, <a>ipAddressRequest_ip</a> - The IP
--   address that you want to use for DNS queries.
--   
--   <a>$sel:subnetId:IpAddressRequest'</a>,
--   <a>ipAddressRequest_subnetId</a> - The ID of the subnet that contains
--   the IP address.
newIpAddressRequest :: Text -> IpAddressRequest

-- | The IP address that you want to use for DNS queries.
ipAddressRequest_ip :: Lens' IpAddressRequest (Maybe Text)

-- | The ID of the subnet that contains the IP address.
ipAddressRequest_subnetId :: Lens' IpAddressRequest Text

-- | In the response to a <a>GetResolverEndpoint</a> request, information
--   about the IP addresses that the Resolver endpoint uses for DNS
--   queries.
--   
--   <i>See:</i> <a>newIpAddressResponse</a> smart constructor.
data IpAddressResponse
IpAddressResponse' :: Maybe Text -> Maybe IpAddressStatus -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> IpAddressResponse

-- | The date and time that the IP address was created, in Unix time format
--   and Coordinated Universal Time (UTC).
[$sel:creationTime:IpAddressResponse'] :: IpAddressResponse -> Maybe Text

-- | A status code that gives the current status of the request.
[$sel:status:IpAddressResponse'] :: IpAddressResponse -> Maybe IpAddressStatus

-- | The date and time that the IP address was last modified, in Unix time
--   format and Coordinated Universal Time (UTC).
[$sel:modificationTime:IpAddressResponse'] :: IpAddressResponse -> Maybe Text

-- | The ID of one subnet.
[$sel:subnetId:IpAddressResponse'] :: IpAddressResponse -> Maybe Text

-- | One IP address that the Resolver endpoint uses for DNS queries.
[$sel:ip:IpAddressResponse'] :: IpAddressResponse -> Maybe Text

-- | The ID of one IP address.
[$sel:ipId:IpAddressResponse'] :: IpAddressResponse -> Maybe Text

-- | A message that provides additional information about the status of the
--   request.
[$sel:statusMessage:IpAddressResponse'] :: IpAddressResponse -> Maybe Text

-- | Create a value of <a>IpAddressResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:IpAddressResponse'</a>,
--   <a>ipAddressResponse_creationTime</a> - The date and time that the IP
--   address was created, in Unix time format and Coordinated Universal
--   Time (UTC).
--   
--   <a>$sel:status:IpAddressResponse'</a>, <a>ipAddressResponse_status</a>
--   - A status code that gives the current status of the request.
--   
--   <a>$sel:modificationTime:IpAddressResponse'</a>,
--   <a>ipAddressResponse_modificationTime</a> - The date and time that the
--   IP address was last modified, in Unix time format and Coordinated
--   Universal Time (UTC).
--   
--   <a>$sel:subnetId:IpAddressResponse'</a>,
--   <a>ipAddressResponse_subnetId</a> - The ID of one subnet.
--   
--   <a>$sel:ip:IpAddressResponse'</a>, <a>ipAddressResponse_ip</a> - One
--   IP address that the Resolver endpoint uses for DNS queries.
--   
--   <a>$sel:ipId:IpAddressResponse'</a>, <a>ipAddressResponse_ipId</a> -
--   The ID of one IP address.
--   
--   <a>$sel:statusMessage:IpAddressResponse'</a>,
--   <a>ipAddressResponse_statusMessage</a> - A message that provides
--   additional information about the status of the request.
newIpAddressResponse :: IpAddressResponse

-- | The date and time that the IP address was created, in Unix time format
--   and Coordinated Universal Time (UTC).
ipAddressResponse_creationTime :: Lens' IpAddressResponse (Maybe Text)

-- | A status code that gives the current status of the request.
ipAddressResponse_status :: Lens' IpAddressResponse (Maybe IpAddressStatus)

-- | The date and time that the IP address was last modified, in Unix time
--   format and Coordinated Universal Time (UTC).
ipAddressResponse_modificationTime :: Lens' IpAddressResponse (Maybe Text)

-- | The ID of one subnet.
ipAddressResponse_subnetId :: Lens' IpAddressResponse (Maybe Text)

-- | One IP address that the Resolver endpoint uses for DNS queries.
ipAddressResponse_ip :: Lens' IpAddressResponse (Maybe Text)

-- | The ID of one IP address.
ipAddressResponse_ipId :: Lens' IpAddressResponse (Maybe Text)

-- | A message that provides additional information about the status of the
--   request.
ipAddressResponse_statusMessage :: Lens' IpAddressResponse (Maybe Text)

-- | In an <a>UpdateResolverEndpoint</a> request, information about an IP
--   address to update.
--   
--   <i>See:</i> <a>newIpAddressUpdate</a> smart constructor.
data IpAddressUpdate
IpAddressUpdate' :: Maybe Text -> Maybe Text -> Maybe Text -> IpAddressUpdate

-- | The ID of the subnet that includes the IP address that you want to
--   update. To get this ID, use <a>GetResolverEndpoint</a>.
[$sel:subnetId:IpAddressUpdate'] :: IpAddressUpdate -> Maybe Text

-- | The new IP address.
[$sel:ip:IpAddressUpdate'] :: IpAddressUpdate -> Maybe Text

-- | <i>Only when removing an IP address from a Resolver endpoint</i>: The
--   ID of the IP address that you want to remove. To get this ID, use
--   <a>GetResolverEndpoint</a>.
[$sel:ipId:IpAddressUpdate'] :: IpAddressUpdate -> Maybe Text

-- | Create a value of <a>IpAddressUpdate</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:subnetId:IpAddressUpdate'</a>, <a>ipAddressUpdate_subnetId</a>
--   - The ID of the subnet that includes the IP address that you want to
--   update. To get this ID, use <a>GetResolverEndpoint</a>.
--   
--   <a>$sel:ip:IpAddressUpdate'</a>, <a>ipAddressUpdate_ip</a> - The new
--   IP address.
--   
--   <a>$sel:ipId:IpAddressUpdate'</a>, <a>ipAddressUpdate_ipId</a> -
--   <i>Only when removing an IP address from a Resolver endpoint</i>: The
--   ID of the IP address that you want to remove. To get this ID, use
--   <a>GetResolverEndpoint</a>.
newIpAddressUpdate :: IpAddressUpdate

-- | The ID of the subnet that includes the IP address that you want to
--   update. To get this ID, use <a>GetResolverEndpoint</a>.
ipAddressUpdate_subnetId :: Lens' IpAddressUpdate (Maybe Text)

-- | The new IP address.
ipAddressUpdate_ip :: Lens' IpAddressUpdate (Maybe Text)

-- | <i>Only when removing an IP address from a Resolver endpoint</i>: The
--   ID of the IP address that you want to remove. To get this ID, use
--   <a>GetResolverEndpoint</a>.
ipAddressUpdate_ipId :: Lens' IpAddressUpdate (Maybe Text)

-- | A complex type that contains information about a configuration for
--   DNSSEC validation.
--   
--   <i>See:</i> <a>newResolverDnssecConfig</a> smart constructor.
data ResolverDnssecConfig
ResolverDnssecConfig' :: Maybe Text -> Maybe Text -> Maybe ResolverDNSSECValidationStatus -> Maybe Text -> ResolverDnssecConfig

-- | The ID of the virtual private cloud (VPC) that you're configuring the
--   DNSSEC validation status for.
[$sel:resourceId:ResolverDnssecConfig'] :: ResolverDnssecConfig -> Maybe Text

-- | The owner account ID of the virtual private cloud (VPC) for a
--   configuration for DNSSEC validation.
[$sel:ownerId:ResolverDnssecConfig'] :: ResolverDnssecConfig -> Maybe Text

-- | The validation status for a DNSSEC configuration. The status can be
--   one of the following:
--   
--   <ul>
--   <li><b>ENABLING:</b> DNSSEC validation is being enabled but is not
--   complete.</li>
--   <li><b>ENABLED:</b> DNSSEC validation is enabled.</li>
--   <li><b>DISABLING:</b> DNSSEC validation is being disabled but is not
--   complete.</li>
--   <li><b>DISABLED</b> DNSSEC validation is disabled.</li>
--   </ul>
[$sel:validationStatus:ResolverDnssecConfig'] :: ResolverDnssecConfig -> Maybe ResolverDNSSECValidationStatus

-- | The ID for a configuration for DNSSEC validation.
[$sel:id:ResolverDnssecConfig'] :: ResolverDnssecConfig -> Maybe Text

-- | Create a value of <a>ResolverDnssecConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceId:ResolverDnssecConfig'</a>,
--   <a>resolverDnssecConfig_resourceId</a> - The ID of the virtual private
--   cloud (VPC) that you're configuring the DNSSEC validation status for.
--   
--   <a>$sel:ownerId:ResolverDnssecConfig'</a>,
--   <a>resolverDnssecConfig_ownerId</a> - The owner account ID of the
--   virtual private cloud (VPC) for a configuration for DNSSEC validation.
--   
--   <a>$sel:validationStatus:ResolverDnssecConfig'</a>,
--   <a>resolverDnssecConfig_validationStatus</a> - The validation status
--   for a DNSSEC configuration. The status can be one of the following:
--   
--   <ul>
--   <li><b>ENABLING:</b> DNSSEC validation is being enabled but is not
--   complete.</li>
--   <li><b>ENABLED:</b> DNSSEC validation is enabled.</li>
--   <li><b>DISABLING:</b> DNSSEC validation is being disabled but is not
--   complete.</li>
--   <li><b>DISABLED</b> DNSSEC validation is disabled.</li>
--   </ul>
--   
--   <a>$sel:id:ResolverDnssecConfig'</a>, <a>resolverDnssecConfig_id</a> -
--   The ID for a configuration for DNSSEC validation.
newResolverDnssecConfig :: ResolverDnssecConfig

-- | The ID of the virtual private cloud (VPC) that you're configuring the
--   DNSSEC validation status for.
resolverDnssecConfig_resourceId :: Lens' ResolverDnssecConfig (Maybe Text)

-- | The owner account ID of the virtual private cloud (VPC) for a
--   configuration for DNSSEC validation.
resolverDnssecConfig_ownerId :: Lens' ResolverDnssecConfig (Maybe Text)

-- | The validation status for a DNSSEC configuration. The status can be
--   one of the following:
--   
--   <ul>
--   <li><b>ENABLING:</b> DNSSEC validation is being enabled but is not
--   complete.</li>
--   <li><b>ENABLED:</b> DNSSEC validation is enabled.</li>
--   <li><b>DISABLING:</b> DNSSEC validation is being disabled but is not
--   complete.</li>
--   <li><b>DISABLED</b> DNSSEC validation is disabled.</li>
--   </ul>
resolverDnssecConfig_validationStatus :: Lens' ResolverDnssecConfig (Maybe ResolverDNSSECValidationStatus)

-- | The ID for a configuration for DNSSEC validation.
resolverDnssecConfig_id :: Lens' ResolverDnssecConfig (Maybe Text)

-- | In the response to a <a>CreateResolverEndpoint</a>,
--   <a>DeleteResolverEndpoint</a>, <a>GetResolverEndpoint</a>,
--   <a>ListResolverEndpoints</a>, or <a>UpdateResolverEndpoint</a>
--   request, a complex type that contains settings for an existing inbound
--   or outbound Resolver endpoint.
--   
--   <i>See:</i> <a>newResolverEndpoint</a> smart constructor.
data ResolverEndpoint
ResolverEndpoint' :: Maybe Text -> Maybe ResolverEndpointStatus -> Maybe [Text] -> Maybe ResolverEndpointDirection -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> ResolverEndpoint

-- | The date and time that the endpoint was created, in Unix time format
--   and Coordinated Universal Time (UTC).
[$sel:creationTime:ResolverEndpoint'] :: ResolverEndpoint -> Maybe Text

-- | A code that specifies the current status of the Resolver endpoint.
--   Valid values include the following:
--   
--   <ul>
--   <li><tt>CREATING</tt>: Resolver is creating and configuring one or
--   more Amazon VPC network interfaces for this endpoint.</li>
--   <li><tt>OPERATIONAL</tt>: The Amazon VPC network interfaces for this
--   endpoint are correctly configured and able to pass inbound or outbound
--   DNS queries between your network and Resolver.</li>
--   <li><tt>UPDATING</tt>: Resolver is associating or disassociating one
--   or more network interfaces with this endpoint.</li>
--   <li><tt>AUTO_RECOVERING</tt>: Resolver is trying to recover one or
--   more of the network interfaces that are associated with this endpoint.
--   During the recovery process, the endpoint functions with limited
--   capacity because of the limit on the number of DNS queries per IP
--   address (per network interface). For the current limit, see <a>Limits
--   on Route 53 Resolver</a>.</li>
--   <li><tt>ACTION_NEEDED</tt>: This endpoint is unhealthy, and Resolver
--   can't automatically recover it. To resolve the problem, we recommend
--   that you check each IP address that you associated with the endpoint.
--   For each IP address that isn't available, add another IP address and
--   then delete the IP address that isn't available. (An endpoint must
--   always include at least two IP addresses.) A status of
--   <tt>ACTION_NEEDED</tt> can have a variety of causes. Here are two
--   common causes:<ul><li>One or more of the network interfaces that are
--   associated with the endpoint were deleted using Amazon
--   VPC.</li><li>The network interface couldn't be created for some reason
--   that's outside the control of Resolver.</li></ul></li>
--   <li><tt>DELETING</tt>: Resolver is deleting this endpoint and the
--   associated network interfaces.</li>
--   </ul>
[$sel:status:ResolverEndpoint'] :: ResolverEndpoint -> Maybe ResolverEndpointStatus

-- | The ID of one or more security groups that control access to this VPC.
--   The security group must include one or more inbound rules (for inbound
--   endpoints) or outbound rules (for outbound endpoints). Inbound and
--   outbound rules must allow TCP and UDP access. For inbound access, open
--   port 53. For outbound access, open the port that you're using for DNS
--   queries on your network.
[$sel:securityGroupIds:ResolverEndpoint'] :: ResolverEndpoint -> Maybe [Text]

-- | Indicates whether the Resolver endpoint allows inbound or outbound DNS
--   queries:
--   
--   <ul>
--   <li><tt>INBOUND</tt>: allows DNS queries to your VPC from your
--   network</li>
--   <li><tt>OUTBOUND</tt>: allows DNS queries from your VPC to your
--   network</li>
--   </ul>
[$sel:direction:ResolverEndpoint'] :: ResolverEndpoint -> Maybe ResolverEndpointDirection

-- | The ARN (Amazon Resource Name) for the Resolver endpoint.
[$sel:arn:ResolverEndpoint'] :: ResolverEndpoint -> Maybe Text

-- | A unique string that identifies the request that created the Resolver
--   endpoint. The <tt>CreatorRequestId</tt> allows failed requests to be
--   retried without the risk of running the operation twice.
[$sel:creatorRequestId:ResolverEndpoint'] :: ResolverEndpoint -> Maybe Text

-- | The date and time that the endpoint was last modified, in Unix time
--   format and Coordinated Universal Time (UTC).
[$sel:modificationTime:ResolverEndpoint'] :: ResolverEndpoint -> Maybe Text

-- | The number of IP addresses that the Resolver endpoint can use for DNS
--   queries.
[$sel:ipAddressCount:ResolverEndpoint'] :: ResolverEndpoint -> Maybe Int

-- | A detailed description of the status of the Resolver endpoint.
[$sel:statusMessage:ResolverEndpoint'] :: ResolverEndpoint -> Maybe Text

-- | The name that you assigned to the Resolver endpoint when you submitted
--   a <a>CreateResolverEndpoint</a> request.
[$sel:name:ResolverEndpoint'] :: ResolverEndpoint -> Maybe Text

-- | The ID of the Resolver endpoint.
[$sel:id:ResolverEndpoint'] :: ResolverEndpoint -> Maybe Text

-- | The ID of the VPC that you want to create the Resolver endpoint in.
[$sel:hostVPCId:ResolverEndpoint'] :: ResolverEndpoint -> Maybe Text

-- | Create a value of <a>ResolverEndpoint</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:ResolverEndpoint'</a>,
--   <a>resolverEndpoint_creationTime</a> - The date and time that the
--   endpoint was created, in Unix time format and Coordinated Universal
--   Time (UTC).
--   
--   <a>$sel:status:ResolverEndpoint'</a>, <a>resolverEndpoint_status</a> -
--   A code that specifies the current status of the Resolver endpoint.
--   Valid values include the following:
--   
--   <ul>
--   <li><tt>CREATING</tt>: Resolver is creating and configuring one or
--   more Amazon VPC network interfaces for this endpoint.</li>
--   <li><tt>OPERATIONAL</tt>: The Amazon VPC network interfaces for this
--   endpoint are correctly configured and able to pass inbound or outbound
--   DNS queries between your network and Resolver.</li>
--   <li><tt>UPDATING</tt>: Resolver is associating or disassociating one
--   or more network interfaces with this endpoint.</li>
--   <li><tt>AUTO_RECOVERING</tt>: Resolver is trying to recover one or
--   more of the network interfaces that are associated with this endpoint.
--   During the recovery process, the endpoint functions with limited
--   capacity because of the limit on the number of DNS queries per IP
--   address (per network interface). For the current limit, see <a>Limits
--   on Route 53 Resolver</a>.</li>
--   <li><tt>ACTION_NEEDED</tt>: This endpoint is unhealthy, and Resolver
--   can't automatically recover it. To resolve the problem, we recommend
--   that you check each IP address that you associated with the endpoint.
--   For each IP address that isn't available, add another IP address and
--   then delete the IP address that isn't available. (An endpoint must
--   always include at least two IP addresses.) A status of
--   <tt>ACTION_NEEDED</tt> can have a variety of causes. Here are two
--   common causes:<ul><li>One or more of the network interfaces that are
--   associated with the endpoint were deleted using Amazon
--   VPC.</li><li>The network interface couldn't be created for some reason
--   that's outside the control of Resolver.</li></ul></li>
--   <li><tt>DELETING</tt>: Resolver is deleting this endpoint and the
--   associated network interfaces.</li>
--   </ul>
--   
--   <a>$sel:securityGroupIds:ResolverEndpoint'</a>,
--   <a>resolverEndpoint_securityGroupIds</a> - The ID of one or more
--   security groups that control access to this VPC. The security group
--   must include one or more inbound rules (for inbound endpoints) or
--   outbound rules (for outbound endpoints). Inbound and outbound rules
--   must allow TCP and UDP access. For inbound access, open port 53. For
--   outbound access, open the port that you're using for DNS queries on
--   your network.
--   
--   <a>$sel:direction:ResolverEndpoint'</a>,
--   <a>resolverEndpoint_direction</a> - Indicates whether the Resolver
--   endpoint allows inbound or outbound DNS queries:
--   
--   <ul>
--   <li><tt>INBOUND</tt>: allows DNS queries to your VPC from your
--   network</li>
--   <li><tt>OUTBOUND</tt>: allows DNS queries from your VPC to your
--   network</li>
--   </ul>
--   
--   <a>$sel:arn:ResolverEndpoint'</a>, <a>resolverEndpoint_arn</a> - The
--   ARN (Amazon Resource Name) for the Resolver endpoint.
--   
--   <a>$sel:creatorRequestId:ResolverEndpoint'</a>,
--   <a>resolverEndpoint_creatorRequestId</a> - A unique string that
--   identifies the request that created the Resolver endpoint. The
--   <tt>CreatorRequestId</tt> allows failed requests to be retried without
--   the risk of running the operation twice.
--   
--   <a>$sel:modificationTime:ResolverEndpoint'</a>,
--   <a>resolverEndpoint_modificationTime</a> - The date and time that the
--   endpoint was last modified, in Unix time format and Coordinated
--   Universal Time (UTC).
--   
--   <a>$sel:ipAddressCount:ResolverEndpoint'</a>,
--   <a>resolverEndpoint_ipAddressCount</a> - The number of IP addresses
--   that the Resolver endpoint can use for DNS queries.
--   
--   <a>$sel:statusMessage:ResolverEndpoint'</a>,
--   <a>resolverEndpoint_statusMessage</a> - A detailed description of the
--   status of the Resolver endpoint.
--   
--   <a>$sel:name:ResolverEndpoint'</a>, <a>resolverEndpoint_name</a> - The
--   name that you assigned to the Resolver endpoint when you submitted a
--   <a>CreateResolverEndpoint</a> request.
--   
--   <a>$sel:id:ResolverEndpoint'</a>, <a>resolverEndpoint_id</a> - The ID
--   of the Resolver endpoint.
--   
--   <a>$sel:hostVPCId:ResolverEndpoint'</a>,
--   <a>resolverEndpoint_hostVPCId</a> - The ID of the VPC that you want to
--   create the Resolver endpoint in.
newResolverEndpoint :: ResolverEndpoint

-- | The date and time that the endpoint was created, in Unix time format
--   and Coordinated Universal Time (UTC).
resolverEndpoint_creationTime :: Lens' ResolverEndpoint (Maybe Text)

-- | A code that specifies the current status of the Resolver endpoint.
--   Valid values include the following:
--   
--   <ul>
--   <li><tt>CREATING</tt>: Resolver is creating and configuring one or
--   more Amazon VPC network interfaces for this endpoint.</li>
--   <li><tt>OPERATIONAL</tt>: The Amazon VPC network interfaces for this
--   endpoint are correctly configured and able to pass inbound or outbound
--   DNS queries between your network and Resolver.</li>
--   <li><tt>UPDATING</tt>: Resolver is associating or disassociating one
--   or more network interfaces with this endpoint.</li>
--   <li><tt>AUTO_RECOVERING</tt>: Resolver is trying to recover one or
--   more of the network interfaces that are associated with this endpoint.
--   During the recovery process, the endpoint functions with limited
--   capacity because of the limit on the number of DNS queries per IP
--   address (per network interface). For the current limit, see <a>Limits
--   on Route 53 Resolver</a>.</li>
--   <li><tt>ACTION_NEEDED</tt>: This endpoint is unhealthy, and Resolver
--   can't automatically recover it. To resolve the problem, we recommend
--   that you check each IP address that you associated with the endpoint.
--   For each IP address that isn't available, add another IP address and
--   then delete the IP address that isn't available. (An endpoint must
--   always include at least two IP addresses.) A status of
--   <tt>ACTION_NEEDED</tt> can have a variety of causes. Here are two
--   common causes:<ul><li>One or more of the network interfaces that are
--   associated with the endpoint were deleted using Amazon
--   VPC.</li><li>The network interface couldn't be created for some reason
--   that's outside the control of Resolver.</li></ul></li>
--   <li><tt>DELETING</tt>: Resolver is deleting this endpoint and the
--   associated network interfaces.</li>
--   </ul>
resolverEndpoint_status :: Lens' ResolverEndpoint (Maybe ResolverEndpointStatus)

-- | The ID of one or more security groups that control access to this VPC.
--   The security group must include one or more inbound rules (for inbound
--   endpoints) or outbound rules (for outbound endpoints). Inbound and
--   outbound rules must allow TCP and UDP access. For inbound access, open
--   port 53. For outbound access, open the port that you're using for DNS
--   queries on your network.
resolverEndpoint_securityGroupIds :: Lens' ResolverEndpoint (Maybe [Text])

-- | Indicates whether the Resolver endpoint allows inbound or outbound DNS
--   queries:
--   
--   <ul>
--   <li><tt>INBOUND</tt>: allows DNS queries to your VPC from your
--   network</li>
--   <li><tt>OUTBOUND</tt>: allows DNS queries from your VPC to your
--   network</li>
--   </ul>
resolverEndpoint_direction :: Lens' ResolverEndpoint (Maybe ResolverEndpointDirection)

-- | The ARN (Amazon Resource Name) for the Resolver endpoint.
resolverEndpoint_arn :: Lens' ResolverEndpoint (Maybe Text)

-- | A unique string that identifies the request that created the Resolver
--   endpoint. The <tt>CreatorRequestId</tt> allows failed requests to be
--   retried without the risk of running the operation twice.
resolverEndpoint_creatorRequestId :: Lens' ResolverEndpoint (Maybe Text)

-- | The date and time that the endpoint was last modified, in Unix time
--   format and Coordinated Universal Time (UTC).
resolverEndpoint_modificationTime :: Lens' ResolverEndpoint (Maybe Text)

-- | The number of IP addresses that the Resolver endpoint can use for DNS
--   queries.
resolverEndpoint_ipAddressCount :: Lens' ResolverEndpoint (Maybe Int)

-- | A detailed description of the status of the Resolver endpoint.
resolverEndpoint_statusMessage :: Lens' ResolverEndpoint (Maybe Text)

-- | The name that you assigned to the Resolver endpoint when you submitted
--   a <a>CreateResolverEndpoint</a> request.
resolverEndpoint_name :: Lens' ResolverEndpoint (Maybe Text)

-- | The ID of the Resolver endpoint.
resolverEndpoint_id :: Lens' ResolverEndpoint (Maybe Text)

-- | The ID of the VPC that you want to create the Resolver endpoint in.
resolverEndpoint_hostVPCId :: Lens' ResolverEndpoint (Maybe Text)

-- | In the response to a <a>CreateResolverQueryLogConfig</a>,
--   <a>DeleteResolverQueryLogConfig</a>, <a>GetResolverQueryLogConfig</a>,
--   or <a>ListResolverQueryLogConfigs</a> request, a complex type that
--   contains settings for one query logging configuration.
--   
--   <i>See:</i> <a>newResolverQueryLogConfig</a> smart constructor.
data ResolverQueryLogConfig
ResolverQueryLogConfig' :: Maybe Text -> Maybe ResolverQueryLogConfigStatus -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe ShareStatus -> Maybe Text -> Maybe Text -> Maybe Text -> ResolverQueryLogConfig

-- | The date and time that the query logging configuration was created, in
--   Unix time format and Coordinated Universal Time (UTC).
[$sel:creationTime:ResolverQueryLogConfig'] :: ResolverQueryLogConfig -> Maybe Text

-- | The status of the specified query logging configuration. Valid values
--   include the following:
--   
--   <ul>
--   <li><tt>CREATING</tt>: Resolver is creating the query logging
--   configuration.</li>
--   <li><tt>CREATED</tt>: The query logging configuration was successfully
--   created. Resolver is logging queries that originate in the specified
--   VPC.</li>
--   <li><tt>DELETING</tt>: Resolver is deleting this query logging
--   configuration.</li>
--   <li><tt>FAILED</tt>: Resolver can't deliver logs to the location that
--   is specified in the query logging configuration. Here are two common
--   causes:<ul><li>The specified destination (for example, an Amazon S3
--   bucket) was deleted.</li><li>Permissions don't allow sending logs to
--   the destination.</li></ul></li>
--   </ul>
[$sel:status:ResolverQueryLogConfig'] :: ResolverQueryLogConfig -> Maybe ResolverQueryLogConfigStatus

-- | The number of VPCs that are associated with the query logging
--   configuration.
[$sel:associationCount:ResolverQueryLogConfig'] :: ResolverQueryLogConfig -> Maybe Int

-- | The ARN for the query logging configuration.
[$sel:arn:ResolverQueryLogConfig'] :: ResolverQueryLogConfig -> Maybe Text

-- | A unique string that identifies the request that created the query
--   logging configuration. The <tt>CreatorRequestId</tt> allows failed
--   requests to be retried without the risk of running the operation
--   twice.
[$sel:creatorRequestId:ResolverQueryLogConfig'] :: ResolverQueryLogConfig -> Maybe Text

-- | The ARN of the resource that you want Resolver to send query logs: an
--   Amazon S3 bucket, a CloudWatch Logs log group, or a Kinesis Data
--   Firehose delivery stream.
[$sel:destinationArn:ResolverQueryLogConfig'] :: ResolverQueryLogConfig -> Maybe Text

-- | An indication of whether the query logging configuration is shared
--   with other Amazon Web Services accounts, or was shared with the
--   current account by another Amazon Web Services account. Sharing is
--   configured through Resource Access Manager (RAM).
[$sel:shareStatus:ResolverQueryLogConfig'] :: ResolverQueryLogConfig -> Maybe ShareStatus

-- | The Amazon Web Services account ID for the account that created the
--   query logging configuration.
[$sel:ownerId:ResolverQueryLogConfig'] :: ResolverQueryLogConfig -> Maybe Text

-- | The name of the query logging configuration.
[$sel:name:ResolverQueryLogConfig'] :: ResolverQueryLogConfig -> Maybe Text

-- | The ID for the query logging configuration.
[$sel:id:ResolverQueryLogConfig'] :: ResolverQueryLogConfig -> Maybe Text

-- | Create a value of <a>ResolverQueryLogConfig</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:ResolverQueryLogConfig'</a>,
--   <a>resolverQueryLogConfig_creationTime</a> - The date and time that
--   the query logging configuration was created, in Unix time format and
--   Coordinated Universal Time (UTC).
--   
--   <a>$sel:status:ResolverQueryLogConfig'</a>,
--   <a>resolverQueryLogConfig_status</a> - The status of the specified
--   query logging configuration. Valid values include the following:
--   
--   <ul>
--   <li><tt>CREATING</tt>: Resolver is creating the query logging
--   configuration.</li>
--   <li><tt>CREATED</tt>: The query logging configuration was successfully
--   created. Resolver is logging queries that originate in the specified
--   VPC.</li>
--   <li><tt>DELETING</tt>: Resolver is deleting this query logging
--   configuration.</li>
--   <li><tt>FAILED</tt>: Resolver can't deliver logs to the location that
--   is specified in the query logging configuration. Here are two common
--   causes:<ul><li>The specified destination (for example, an Amazon S3
--   bucket) was deleted.</li><li>Permissions don't allow sending logs to
--   the destination.</li></ul></li>
--   </ul>
--   
--   <a>$sel:associationCount:ResolverQueryLogConfig'</a>,
--   <a>resolverQueryLogConfig_associationCount</a> - The number of VPCs
--   that are associated with the query logging configuration.
--   
--   <a>$sel:arn:ResolverQueryLogConfig'</a>,
--   <a>resolverQueryLogConfig_arn</a> - The ARN for the query logging
--   configuration.
--   
--   <a>$sel:creatorRequestId:ResolverQueryLogConfig'</a>,
--   <a>resolverQueryLogConfig_creatorRequestId</a> - A unique string that
--   identifies the request that created the query logging configuration.
--   The <tt>CreatorRequestId</tt> allows failed requests to be retried
--   without the risk of running the operation twice.
--   
--   <a>$sel:destinationArn:ResolverQueryLogConfig'</a>,
--   <a>resolverQueryLogConfig_destinationArn</a> - The ARN of the resource
--   that you want Resolver to send query logs: an Amazon S3 bucket, a
--   CloudWatch Logs log group, or a Kinesis Data Firehose delivery stream.
--   
--   <a>$sel:shareStatus:ResolverQueryLogConfig'</a>,
--   <a>resolverQueryLogConfig_shareStatus</a> - An indication of whether
--   the query logging configuration is shared with other Amazon Web
--   Services accounts, or was shared with the current account by another
--   Amazon Web Services account. Sharing is configured through Resource
--   Access Manager (RAM).
--   
--   <a>$sel:ownerId:ResolverQueryLogConfig'</a>,
--   <a>resolverQueryLogConfig_ownerId</a> - The Amazon Web Services
--   account ID for the account that created the query logging
--   configuration.
--   
--   <a>$sel:name:ResolverQueryLogConfig'</a>,
--   <a>resolverQueryLogConfig_name</a> - The name of the query logging
--   configuration.
--   
--   <a>$sel:id:ResolverQueryLogConfig'</a>,
--   <a>resolverQueryLogConfig_id</a> - The ID for the query logging
--   configuration.
newResolverQueryLogConfig :: ResolverQueryLogConfig

-- | The date and time that the query logging configuration was created, in
--   Unix time format and Coordinated Universal Time (UTC).
resolverQueryLogConfig_creationTime :: Lens' ResolverQueryLogConfig (Maybe Text)

-- | The status of the specified query logging configuration. Valid values
--   include the following:
--   
--   <ul>
--   <li><tt>CREATING</tt>: Resolver is creating the query logging
--   configuration.</li>
--   <li><tt>CREATED</tt>: The query logging configuration was successfully
--   created. Resolver is logging queries that originate in the specified
--   VPC.</li>
--   <li><tt>DELETING</tt>: Resolver is deleting this query logging
--   configuration.</li>
--   <li><tt>FAILED</tt>: Resolver can't deliver logs to the location that
--   is specified in the query logging configuration. Here are two common
--   causes:<ul><li>The specified destination (for example, an Amazon S3
--   bucket) was deleted.</li><li>Permissions don't allow sending logs to
--   the destination.</li></ul></li>
--   </ul>
resolverQueryLogConfig_status :: Lens' ResolverQueryLogConfig (Maybe ResolverQueryLogConfigStatus)

-- | The number of VPCs that are associated with the query logging
--   configuration.
resolverQueryLogConfig_associationCount :: Lens' ResolverQueryLogConfig (Maybe Int)

-- | The ARN for the query logging configuration.
resolverQueryLogConfig_arn :: Lens' ResolverQueryLogConfig (Maybe Text)

-- | A unique string that identifies the request that created the query
--   logging configuration. The <tt>CreatorRequestId</tt> allows failed
--   requests to be retried without the risk of running the operation
--   twice.
resolverQueryLogConfig_creatorRequestId :: Lens' ResolverQueryLogConfig (Maybe Text)

-- | The ARN of the resource that you want Resolver to send query logs: an
--   Amazon S3 bucket, a CloudWatch Logs log group, or a Kinesis Data
--   Firehose delivery stream.
resolverQueryLogConfig_destinationArn :: Lens' ResolverQueryLogConfig (Maybe Text)

-- | An indication of whether the query logging configuration is shared
--   with other Amazon Web Services accounts, or was shared with the
--   current account by another Amazon Web Services account. Sharing is
--   configured through Resource Access Manager (RAM).
resolverQueryLogConfig_shareStatus :: Lens' ResolverQueryLogConfig (Maybe ShareStatus)

-- | The Amazon Web Services account ID for the account that created the
--   query logging configuration.
resolverQueryLogConfig_ownerId :: Lens' ResolverQueryLogConfig (Maybe Text)

-- | The name of the query logging configuration.
resolverQueryLogConfig_name :: Lens' ResolverQueryLogConfig (Maybe Text)

-- | The ID for the query logging configuration.
resolverQueryLogConfig_id :: Lens' ResolverQueryLogConfig (Maybe Text)

-- | In the response to an <a>AssociateResolverQueryLogConfig</a>,
--   <a>DisassociateResolverQueryLogConfig</a>,
--   <a>GetResolverQueryLogConfigAssociation</a>, or
--   <a>ListResolverQueryLogConfigAssociations</a>, request, a complex type
--   that contains settings for a specified association between an Amazon
--   VPC and a query logging configuration.
--   
--   <i>See:</i> <a>newResolverQueryLogConfigAssociation</a> smart
--   constructor.
data ResolverQueryLogConfigAssociation
ResolverQueryLogConfigAssociation' :: Maybe Text -> Maybe ResolverQueryLogConfigAssociationStatus -> Maybe Text -> Maybe Text -> Maybe ResolverQueryLogConfigAssociationError -> Maybe Text -> Maybe Text -> ResolverQueryLogConfigAssociation

-- | The date and time that the VPC was associated with the query logging
--   configuration, in Unix time format and Coordinated Universal Time
--   (UTC).
[$sel:creationTime:ResolverQueryLogConfigAssociation'] :: ResolverQueryLogConfigAssociation -> Maybe Text

-- | The status of the specified query logging association. Valid values
--   include the following:
--   
--   <ul>
--   <li><tt>CREATING</tt>: Resolver is creating an association between an
--   Amazon VPC and a query logging configuration.</li>
--   <li><tt>CREATED</tt>: The association between an Amazon VPC and a
--   query logging configuration was successfully created. Resolver is
--   logging queries that originate in the specified VPC.</li>
--   <li><tt>DELETING</tt>: Resolver is deleting this query logging
--   association.</li>
--   <li><tt>FAILED</tt>: Resolver either couldn't create or couldn't
--   delete the query logging association.</li>
--   </ul>
[$sel:status:ResolverQueryLogConfigAssociation'] :: ResolverQueryLogConfigAssociation -> Maybe ResolverQueryLogConfigAssociationStatus

-- | The ID of the query logging configuration that a VPC is associated
--   with.
[$sel:resolverQueryLogConfigId:ResolverQueryLogConfigAssociation'] :: ResolverQueryLogConfigAssociation -> Maybe Text

-- | The ID of the Amazon VPC that is associated with the query logging
--   configuration.
[$sel:resourceId:ResolverQueryLogConfigAssociation'] :: ResolverQueryLogConfigAssociation -> Maybe Text

-- | If the value of <tt>Status</tt> is <tt>FAILED</tt>, the value of
--   <tt>Error</tt> indicates the cause:
--   
--   <ul>
--   <li><tt>DESTINATION_NOT_FOUND</tt>: The specified destination (for
--   example, an Amazon S3 bucket) was deleted.</li>
--   <li><tt>ACCESS_DENIED</tt>: Permissions don't allow sending logs to
--   the destination.</li>
--   </ul>
--   
--   If the value of <tt>Status</tt> is a value other than <tt>FAILED</tt>,
--   <tt>Error</tt> is null.
[$sel:error:ResolverQueryLogConfigAssociation'] :: ResolverQueryLogConfigAssociation -> Maybe ResolverQueryLogConfigAssociationError

-- | The ID of the query logging association.
[$sel:id:ResolverQueryLogConfigAssociation'] :: ResolverQueryLogConfigAssociation -> Maybe Text

-- | Contains additional information about the error. If the value or
--   <tt>Error</tt> is null, the value of <tt>ErrorMessage</tt> also is
--   null.
[$sel:errorMessage:ResolverQueryLogConfigAssociation'] :: ResolverQueryLogConfigAssociation -> Maybe Text

-- | Create a value of <a>ResolverQueryLogConfigAssociation</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:ResolverQueryLogConfigAssociation'</a>,
--   <a>resolverQueryLogConfigAssociation_creationTime</a> - The date and
--   time that the VPC was associated with the query logging configuration,
--   in Unix time format and Coordinated Universal Time (UTC).
--   
--   <a>$sel:status:ResolverQueryLogConfigAssociation'</a>,
--   <a>resolverQueryLogConfigAssociation_status</a> - The status of the
--   specified query logging association. Valid values include the
--   following:
--   
--   <ul>
--   <li><tt>CREATING</tt>: Resolver is creating an association between an
--   Amazon VPC and a query logging configuration.</li>
--   <li><tt>CREATED</tt>: The association between an Amazon VPC and a
--   query logging configuration was successfully created. Resolver is
--   logging queries that originate in the specified VPC.</li>
--   <li><tt>DELETING</tt>: Resolver is deleting this query logging
--   association.</li>
--   <li><tt>FAILED</tt>: Resolver either couldn't create or couldn't
--   delete the query logging association.</li>
--   </ul>
--   
--   
--   <a>$sel:resolverQueryLogConfigId:ResolverQueryLogConfigAssociation'</a>,
--   <a>resolverQueryLogConfigAssociation_resolverQueryLogConfigId</a> -
--   The ID of the query logging configuration that a VPC is associated
--   with.
--   
--   <a>$sel:resourceId:ResolverQueryLogConfigAssociation'</a>,
--   <a>resolverQueryLogConfigAssociation_resourceId</a> - The ID of the
--   Amazon VPC that is associated with the query logging configuration.
--   
--   <a>$sel:error:ResolverQueryLogConfigAssociation'</a>,
--   <a>resolverQueryLogConfigAssociation_error</a> - If the value of
--   <tt>Status</tt> is <tt>FAILED</tt>, the value of <tt>Error</tt>
--   indicates the cause:
--   
--   <ul>
--   <li><tt>DESTINATION_NOT_FOUND</tt>: The specified destination (for
--   example, an Amazon S3 bucket) was deleted.</li>
--   <li><tt>ACCESS_DENIED</tt>: Permissions don't allow sending logs to
--   the destination.</li>
--   </ul>
--   
--   If the value of <tt>Status</tt> is a value other than <tt>FAILED</tt>,
--   <tt>Error</tt> is null.
--   
--   <a>$sel:id:ResolverQueryLogConfigAssociation'</a>,
--   <a>resolverQueryLogConfigAssociation_id</a> - The ID of the query
--   logging association.
--   
--   <a>$sel:errorMessage:ResolverQueryLogConfigAssociation'</a>,
--   <a>resolverQueryLogConfigAssociation_errorMessage</a> - Contains
--   additional information about the error. If the value or <tt>Error</tt>
--   is null, the value of <tt>ErrorMessage</tt> also is null.
newResolverQueryLogConfigAssociation :: ResolverQueryLogConfigAssociation

-- | The date and time that the VPC was associated with the query logging
--   configuration, in Unix time format and Coordinated Universal Time
--   (UTC).
resolverQueryLogConfigAssociation_creationTime :: Lens' ResolverQueryLogConfigAssociation (Maybe Text)

-- | The status of the specified query logging association. Valid values
--   include the following:
--   
--   <ul>
--   <li><tt>CREATING</tt>: Resolver is creating an association between an
--   Amazon VPC and a query logging configuration.</li>
--   <li><tt>CREATED</tt>: The association between an Amazon VPC and a
--   query logging configuration was successfully created. Resolver is
--   logging queries that originate in the specified VPC.</li>
--   <li><tt>DELETING</tt>: Resolver is deleting this query logging
--   association.</li>
--   <li><tt>FAILED</tt>: Resolver either couldn't create or couldn't
--   delete the query logging association.</li>
--   </ul>
resolverQueryLogConfigAssociation_status :: Lens' ResolverQueryLogConfigAssociation (Maybe ResolverQueryLogConfigAssociationStatus)

-- | The ID of the query logging configuration that a VPC is associated
--   with.
resolverQueryLogConfigAssociation_resolverQueryLogConfigId :: Lens' ResolverQueryLogConfigAssociation (Maybe Text)

-- | The ID of the Amazon VPC that is associated with the query logging
--   configuration.
resolverQueryLogConfigAssociation_resourceId :: Lens' ResolverQueryLogConfigAssociation (Maybe Text)

-- | If the value of <tt>Status</tt> is <tt>FAILED</tt>, the value of
--   <tt>Error</tt> indicates the cause:
--   
--   <ul>
--   <li><tt>DESTINATION_NOT_FOUND</tt>: The specified destination (for
--   example, an Amazon S3 bucket) was deleted.</li>
--   <li><tt>ACCESS_DENIED</tt>: Permissions don't allow sending logs to
--   the destination.</li>
--   </ul>
--   
--   If the value of <tt>Status</tt> is a value other than <tt>FAILED</tt>,
--   <tt>Error</tt> is null.
resolverQueryLogConfigAssociation_error :: Lens' ResolverQueryLogConfigAssociation (Maybe ResolverQueryLogConfigAssociationError)

-- | The ID of the query logging association.
resolverQueryLogConfigAssociation_id :: Lens' ResolverQueryLogConfigAssociation (Maybe Text)

-- | Contains additional information about the error. If the value or
--   <tt>Error</tt> is null, the value of <tt>ErrorMessage</tt> also is
--   null.
resolverQueryLogConfigAssociation_errorMessage :: Lens' ResolverQueryLogConfigAssociation (Maybe Text)

-- | For queries that originate in your VPC, detailed information about a
--   Resolver rule, which specifies how to route DNS queries out of the
--   VPC. The <tt>ResolverRule</tt> parameter appears in the response to a
--   <a>CreateResolverRule</a>, <a>DeleteResolverRule</a>,
--   <a>GetResolverRule</a>, <a>ListResolverRules</a>, or
--   <a>UpdateResolverRule</a> request.
--   
--   <i>See:</i> <a>newResolverRule</a> smart constructor.
data ResolverRule
ResolverRule' :: Maybe Text -> Maybe ResolverRuleStatus -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe (NonEmpty TargetAddress) -> Maybe Text -> Maybe ShareStatus -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe RuleTypeOption -> ResolverRule

-- | The date and time that the Resolver rule was created, in Unix time
--   format and Coordinated Universal Time (UTC).
[$sel:creationTime:ResolverRule'] :: ResolverRule -> Maybe Text

-- | A code that specifies the current status of the Resolver rule.
[$sel:status:ResolverRule'] :: ResolverRule -> Maybe ResolverRuleStatus

-- | The ARN (Amazon Resource Name) for the Resolver rule specified by
--   <tt>Id</tt>.
[$sel:arn:ResolverRule'] :: ResolverRule -> Maybe Text

-- | The ID of the endpoint that the rule is associated with.
[$sel:resolverEndpointId:ResolverRule'] :: ResolverRule -> Maybe Text

-- | A unique string that you specified when you created the Resolver rule.
--   <tt>CreatorRequestId</tt> identifies the request and allows failed
--   requests to be retried without the risk of running the operation
--   twice.
[$sel:creatorRequestId:ResolverRule'] :: ResolverRule -> Maybe Text

-- | An array that contains the IP addresses and ports that an outbound
--   endpoint forwards DNS queries to. Typically, these are the IP
--   addresses of DNS resolvers on your network. Specify IPv4 addresses.
--   IPv6 is not supported.
[$sel:targetIps:ResolverRule'] :: ResolverRule -> Maybe (NonEmpty TargetAddress)

-- | The date and time that the Resolver rule was last updated, in Unix
--   time format and Coordinated Universal Time (UTC).
[$sel:modificationTime:ResolverRule'] :: ResolverRule -> Maybe Text

-- | Whether the rule is shared and, if so, whether the current account is
--   sharing the rule with another account, or another account is sharing
--   the rule with the current account.
[$sel:shareStatus:ResolverRule'] :: ResolverRule -> Maybe ShareStatus

-- | When a rule is shared with another Amazon Web Services account, the
--   account ID of the account that the rule is shared with.
[$sel:ownerId:ResolverRule'] :: ResolverRule -> Maybe Text

-- | DNS queries for this domain name are forwarded to the IP addresses
--   that are specified in <tt>TargetIps</tt>. If a query matches multiple
--   Resolver rules (example.com and www.example.com), the query is routed
--   using the Resolver rule that contains the most specific domain name
--   (www.example.com).
[$sel:domainName:ResolverRule'] :: ResolverRule -> Maybe Text

-- | A detailed description of the status of a Resolver rule.
[$sel:statusMessage:ResolverRule'] :: ResolverRule -> Maybe Text

-- | The name for the Resolver rule, which you specified when you created
--   the Resolver rule.
[$sel:name:ResolverRule'] :: ResolverRule -> Maybe Text

-- | The ID that Resolver assigned to the Resolver rule when you created
--   it.
[$sel:id:ResolverRule'] :: ResolverRule -> Maybe Text

-- | When you want to forward DNS queries for specified domain name to
--   resolvers on your network, specify <tt>FORWARD</tt>.
--   
--   When you have a forwarding rule to forward DNS queries for a domain to
--   your network and you want Resolver to process queries for a subdomain
--   of that domain, specify <tt>SYSTEM</tt>.
--   
--   For example, to forward DNS queries for example.com to resolvers on
--   your network, you create a rule and specify <tt>FORWARD</tt> for
--   <tt>RuleType</tt>. To then have Resolver process queries for
--   apex.example.com, you create a rule and specify <tt>SYSTEM</tt> for
--   <tt>RuleType</tt>.
--   
--   Currently, only Resolver can create rules that have a value of
--   <tt>RECURSIVE</tt> for <tt>RuleType</tt>.
[$sel:ruleType:ResolverRule'] :: ResolverRule -> Maybe RuleTypeOption

-- | Create a value of <a>ResolverRule</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:ResolverRule'</a>,
--   <a>resolverRule_creationTime</a> - The date and time that the Resolver
--   rule was created, in Unix time format and Coordinated Universal Time
--   (UTC).
--   
--   <a>$sel:status:ResolverRule'</a>, <a>resolverRule_status</a> - A code
--   that specifies the current status of the Resolver rule.
--   
--   <a>$sel:arn:ResolverRule'</a>, <a>resolverRule_arn</a> - The ARN
--   (Amazon Resource Name) for the Resolver rule specified by <tt>Id</tt>.
--   
--   <a>$sel:resolverEndpointId:ResolverRule'</a>,
--   <a>resolverRule_resolverEndpointId</a> - The ID of the endpoint that
--   the rule is associated with.
--   
--   <a>$sel:creatorRequestId:ResolverRule'</a>,
--   <a>resolverRule_creatorRequestId</a> - A unique string that you
--   specified when you created the Resolver rule.
--   <tt>CreatorRequestId</tt> identifies the request and allows failed
--   requests to be retried without the risk of running the operation
--   twice.
--   
--   <a>$sel:targetIps:ResolverRule'</a>, <a>resolverRule_targetIps</a> -
--   An array that contains the IP addresses and ports that an outbound
--   endpoint forwards DNS queries to. Typically, these are the IP
--   addresses of DNS resolvers on your network. Specify IPv4 addresses.
--   IPv6 is not supported.
--   
--   <a>$sel:modificationTime:ResolverRule'</a>,
--   <a>resolverRule_modificationTime</a> - The date and time that the
--   Resolver rule was last updated, in Unix time format and Coordinated
--   Universal Time (UTC).
--   
--   <a>$sel:shareStatus:ResolverRule'</a>, <a>resolverRule_shareStatus</a>
--   - Whether the rule is shared and, if so, whether the current account
--   is sharing the rule with another account, or another account is
--   sharing the rule with the current account.
--   
--   <a>$sel:ownerId:ResolverRule'</a>, <a>resolverRule_ownerId</a> - When
--   a rule is shared with another Amazon Web Services account, the account
--   ID of the account that the rule is shared with.
--   
--   <a>$sel:domainName:ResolverRule'</a>, <a>resolverRule_domainName</a> -
--   DNS queries for this domain name are forwarded to the IP addresses
--   that are specified in <tt>TargetIps</tt>. If a query matches multiple
--   Resolver rules (example.com and www.example.com), the query is routed
--   using the Resolver rule that contains the most specific domain name
--   (www.example.com).
--   
--   <a>$sel:statusMessage:ResolverRule'</a>,
--   <a>resolverRule_statusMessage</a> - A detailed description of the
--   status of a Resolver rule.
--   
--   <a>$sel:name:ResolverRule'</a>, <a>resolverRule_name</a> - The name
--   for the Resolver rule, which you specified when you created the
--   Resolver rule.
--   
--   <a>$sel:id:ResolverRule'</a>, <a>resolverRule_id</a> - The ID that
--   Resolver assigned to the Resolver rule when you created it.
--   
--   <a>$sel:ruleType:ResolverRule'</a>, <a>resolverRule_ruleType</a> -
--   When you want to forward DNS queries for specified domain name to
--   resolvers on your network, specify <tt>FORWARD</tt>.
--   
--   When you have a forwarding rule to forward DNS queries for a domain to
--   your network and you want Resolver to process queries for a subdomain
--   of that domain, specify <tt>SYSTEM</tt>.
--   
--   For example, to forward DNS queries for example.com to resolvers on
--   your network, you create a rule and specify <tt>FORWARD</tt> for
--   <tt>RuleType</tt>. To then have Resolver process queries for
--   apex.example.com, you create a rule and specify <tt>SYSTEM</tt> for
--   <tt>RuleType</tt>.
--   
--   Currently, only Resolver can create rules that have a value of
--   <tt>RECURSIVE</tt> for <tt>RuleType</tt>.
newResolverRule :: ResolverRule

-- | The date and time that the Resolver rule was created, in Unix time
--   format and Coordinated Universal Time (UTC).
resolverRule_creationTime :: Lens' ResolverRule (Maybe Text)

-- | A code that specifies the current status of the Resolver rule.
resolverRule_status :: Lens' ResolverRule (Maybe ResolverRuleStatus)

-- | The ARN (Amazon Resource Name) for the Resolver rule specified by
--   <tt>Id</tt>.
resolverRule_arn :: Lens' ResolverRule (Maybe Text)

-- | The ID of the endpoint that the rule is associated with.
resolverRule_resolverEndpointId :: Lens' ResolverRule (Maybe Text)

-- | A unique string that you specified when you created the Resolver rule.
--   <tt>CreatorRequestId</tt> identifies the request and allows failed
--   requests to be retried without the risk of running the operation
--   twice.
resolverRule_creatorRequestId :: Lens' ResolverRule (Maybe Text)

-- | An array that contains the IP addresses and ports that an outbound
--   endpoint forwards DNS queries to. Typically, these are the IP
--   addresses of DNS resolvers on your network. Specify IPv4 addresses.
--   IPv6 is not supported.
resolverRule_targetIps :: Lens' ResolverRule (Maybe (NonEmpty TargetAddress))

-- | The date and time that the Resolver rule was last updated, in Unix
--   time format and Coordinated Universal Time (UTC).
resolverRule_modificationTime :: Lens' ResolverRule (Maybe Text)

-- | Whether the rule is shared and, if so, whether the current account is
--   sharing the rule with another account, or another account is sharing
--   the rule with the current account.
resolverRule_shareStatus :: Lens' ResolverRule (Maybe ShareStatus)

-- | When a rule is shared with another Amazon Web Services account, the
--   account ID of the account that the rule is shared with.
resolverRule_ownerId :: Lens' ResolverRule (Maybe Text)

-- | DNS queries for this domain name are forwarded to the IP addresses
--   that are specified in <tt>TargetIps</tt>. If a query matches multiple
--   Resolver rules (example.com and www.example.com), the query is routed
--   using the Resolver rule that contains the most specific domain name
--   (www.example.com).
resolverRule_domainName :: Lens' ResolverRule (Maybe Text)

-- | A detailed description of the status of a Resolver rule.
resolverRule_statusMessage :: Lens' ResolverRule (Maybe Text)

-- | The name for the Resolver rule, which you specified when you created
--   the Resolver rule.
resolverRule_name :: Lens' ResolverRule (Maybe Text)

-- | The ID that Resolver assigned to the Resolver rule when you created
--   it.
resolverRule_id :: Lens' ResolverRule (Maybe Text)

-- | When you want to forward DNS queries for specified domain name to
--   resolvers on your network, specify <tt>FORWARD</tt>.
--   
--   When you have a forwarding rule to forward DNS queries for a domain to
--   your network and you want Resolver to process queries for a subdomain
--   of that domain, specify <tt>SYSTEM</tt>.
--   
--   For example, to forward DNS queries for example.com to resolvers on
--   your network, you create a rule and specify <tt>FORWARD</tt> for
--   <tt>RuleType</tt>. To then have Resolver process queries for
--   apex.example.com, you create a rule and specify <tt>SYSTEM</tt> for
--   <tt>RuleType</tt>.
--   
--   Currently, only Resolver can create rules that have a value of
--   <tt>RECURSIVE</tt> for <tt>RuleType</tt>.
resolverRule_ruleType :: Lens' ResolverRule (Maybe RuleTypeOption)

-- | In the response to an <a>AssociateResolverRule</a>,
--   <a>DisassociateResolverRule</a>, or
--   <a>ListResolverRuleAssociations</a> request, provides information
--   about an association between a Resolver rule and a VPC. The
--   association determines which DNS queries that originate in the VPC are
--   forwarded to your network.
--   
--   <i>See:</i> <a>newResolverRuleAssociation</a> smart constructor.
data ResolverRuleAssociation
ResolverRuleAssociation' :: Maybe ResolverRuleAssociationStatus -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> ResolverRuleAssociation

-- | A code that specifies the current status of the association between a
--   Resolver rule and a VPC.
[$sel:status:ResolverRuleAssociation'] :: ResolverRuleAssociation -> Maybe ResolverRuleAssociationStatus

-- | The ID of the Resolver rule that you associated with the VPC that is
--   specified by <tt>VPCId</tt>.
[$sel:resolverRuleId:ResolverRuleAssociation'] :: ResolverRuleAssociation -> Maybe Text

-- | The ID of the VPC that you associated the Resolver rule with.
[$sel:vPCId:ResolverRuleAssociation'] :: ResolverRuleAssociation -> Maybe Text

-- | A detailed description of the status of the association between a
--   Resolver rule and a VPC.
[$sel:statusMessage:ResolverRuleAssociation'] :: ResolverRuleAssociation -> Maybe Text

-- | The name of an association between a Resolver rule and a VPC.
[$sel:name:ResolverRuleAssociation'] :: ResolverRuleAssociation -> Maybe Text

-- | The ID of the association between a Resolver rule and a VPC. Resolver
--   assigns this value when you submit an <a>AssociateResolverRule</a>
--   request.
[$sel:id:ResolverRuleAssociation'] :: ResolverRuleAssociation -> Maybe Text

-- | Create a value of <a>ResolverRuleAssociation</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:ResolverRuleAssociation'</a>,
--   <a>resolverRuleAssociation_status</a> - A code that specifies the
--   current status of the association between a Resolver rule and a VPC.
--   
--   <a>$sel:resolverRuleId:ResolverRuleAssociation'</a>,
--   <a>resolverRuleAssociation_resolverRuleId</a> - The ID of the Resolver
--   rule that you associated with the VPC that is specified by
--   <tt>VPCId</tt>.
--   
--   <a>$sel:vPCId:ResolverRuleAssociation'</a>,
--   <a>resolverRuleAssociation_vPCId</a> - The ID of the VPC that you
--   associated the Resolver rule with.
--   
--   <a>$sel:statusMessage:ResolverRuleAssociation'</a>,
--   <a>resolverRuleAssociation_statusMessage</a> - A detailed description
--   of the status of the association between a Resolver rule and a VPC.
--   
--   <a>$sel:name:ResolverRuleAssociation'</a>,
--   <a>resolverRuleAssociation_name</a> - The name of an association
--   between a Resolver rule and a VPC.
--   
--   <a>$sel:id:ResolverRuleAssociation'</a>,
--   <a>resolverRuleAssociation_id</a> - The ID of the association between
--   a Resolver rule and a VPC. Resolver assigns this value when you submit
--   an <a>AssociateResolverRule</a> request.
newResolverRuleAssociation :: ResolverRuleAssociation

-- | A code that specifies the current status of the association between a
--   Resolver rule and a VPC.
resolverRuleAssociation_status :: Lens' ResolverRuleAssociation (Maybe ResolverRuleAssociationStatus)

-- | The ID of the Resolver rule that you associated with the VPC that is
--   specified by <tt>VPCId</tt>.
resolverRuleAssociation_resolverRuleId :: Lens' ResolverRuleAssociation (Maybe Text)

-- | The ID of the VPC that you associated the Resolver rule with.
resolverRuleAssociation_vPCId :: Lens' ResolverRuleAssociation (Maybe Text)

-- | A detailed description of the status of the association between a
--   Resolver rule and a VPC.
resolverRuleAssociation_statusMessage :: Lens' ResolverRuleAssociation (Maybe Text)

-- | The name of an association between a Resolver rule and a VPC.
resolverRuleAssociation_name :: Lens' ResolverRuleAssociation (Maybe Text)

-- | The ID of the association between a Resolver rule and a VPC. Resolver
--   assigns this value when you submit an <a>AssociateResolverRule</a>
--   request.
resolverRuleAssociation_id :: Lens' ResolverRuleAssociation (Maybe Text)

-- | In an <a>UpdateResolverRule</a> request, information about the changes
--   that you want to make.
--   
--   <i>See:</i> <a>newResolverRuleConfig</a> smart constructor.
data ResolverRuleConfig
ResolverRuleConfig' :: Maybe Text -> Maybe (NonEmpty TargetAddress) -> Maybe Text -> ResolverRuleConfig

-- | The ID of the new outbound Resolver endpoint that you want to use to
--   route DNS queries to the IP addresses that you specify in
--   <tt>TargetIps</tt>.
[$sel:resolverEndpointId:ResolverRuleConfig'] :: ResolverRuleConfig -> Maybe Text

-- | For DNS queries that originate in your VPC, the new IP addresses that
--   you want to route outbound DNS queries to.
[$sel:targetIps:ResolverRuleConfig'] :: ResolverRuleConfig -> Maybe (NonEmpty TargetAddress)

-- | The new name for the Resolver rule. The name that you specify appears
--   in the Resolver dashboard in the Route 53 console.
[$sel:name:ResolverRuleConfig'] :: ResolverRuleConfig -> Maybe Text

-- | Create a value of <a>ResolverRuleConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resolverEndpointId:ResolverRuleConfig'</a>,
--   <a>resolverRuleConfig_resolverEndpointId</a> - The ID of the new
--   outbound Resolver endpoint that you want to use to route DNS queries
--   to the IP addresses that you specify in <tt>TargetIps</tt>.
--   
--   <a>$sel:targetIps:ResolverRuleConfig'</a>,
--   <a>resolverRuleConfig_targetIps</a> - For DNS queries that originate
--   in your VPC, the new IP addresses that you want to route outbound DNS
--   queries to.
--   
--   <a>$sel:name:ResolverRuleConfig'</a>, <a>resolverRuleConfig_name</a> -
--   The new name for the Resolver rule. The name that you specify appears
--   in the Resolver dashboard in the Route 53 console.
newResolverRuleConfig :: ResolverRuleConfig

-- | The ID of the new outbound Resolver endpoint that you want to use to
--   route DNS queries to the IP addresses that you specify in
--   <tt>TargetIps</tt>.
resolverRuleConfig_resolverEndpointId :: Lens' ResolverRuleConfig (Maybe Text)

-- | For DNS queries that originate in your VPC, the new IP addresses that
--   you want to route outbound DNS queries to.
resolverRuleConfig_targetIps :: Lens' ResolverRuleConfig (Maybe (NonEmpty TargetAddress))

-- | The new name for the Resolver rule. The name that you specify appears
--   in the Resolver dashboard in the Route 53 console.
resolverRuleConfig_name :: Lens' ResolverRuleConfig (Maybe Text)

-- | One tag that you want to add to the specified resource. A tag consists
--   of a <tt>Key</tt> (a name for the tag) and a <tt>Value</tt>.
--   
--   <i>See:</i> <a>newTag</a> smart constructor.
data Tag
Tag' :: Text -> Text -> Tag

-- | The name for the tag. For example, if you want to associate Resolver
--   resources with the account IDs of your customers for billing purposes,
--   the value of <tt>Key</tt> might be <tt>account-id</tt>.
[$sel:key:Tag'] :: Tag -> Text

-- | The value for the tag. For example, if <tt>Key</tt> is
--   <tt>account-id</tt>, then <tt>Value</tt> might be the ID of the
--   customer account that you're creating the resource for.
[$sel:value:Tag'] :: Tag -> Text

-- | Create a value of <a>Tag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:Tag'</a>, <a>tag_key</a> - The name for the tag. For
--   example, if you want to associate Resolver resources with the account
--   IDs of your customers for billing purposes, the value of <tt>Key</tt>
--   might be <tt>account-id</tt>.
--   
--   <a>$sel:value:Tag'</a>, <a>tag_value</a> - The value for the tag. For
--   example, if <tt>Key</tt> is <tt>account-id</tt>, then <tt>Value</tt>
--   might be the ID of the customer account that you're creating the
--   resource for.
newTag :: Text -> Text -> Tag

-- | The name for the tag. For example, if you want to associate Resolver
--   resources with the account IDs of your customers for billing purposes,
--   the value of <tt>Key</tt> might be <tt>account-id</tt>.
tag_key :: Lens' Tag Text

-- | The value for the tag. For example, if <tt>Key</tt> is
--   <tt>account-id</tt>, then <tt>Value</tt> might be the ID of the
--   customer account that you're creating the resource for.
tag_value :: Lens' Tag Text

-- | In a <a>CreateResolverRule</a> request, an array of the IPs that you
--   want to forward DNS queries to.
--   
--   <i>See:</i> <a>newTargetAddress</a> smart constructor.
data TargetAddress
TargetAddress' :: Maybe Natural -> Text -> TargetAddress

-- | The port at <tt>Ip</tt> that you want to forward DNS queries to.
[$sel:port:TargetAddress'] :: TargetAddress -> Maybe Natural

-- | One IP address that you want to forward DNS queries to. You can
--   specify only IPv4 addresses.
[$sel:ip:TargetAddress'] :: TargetAddress -> Text

-- | Create a value of <a>TargetAddress</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:port:TargetAddress'</a>, <a>targetAddress_port</a> - The port
--   at <tt>Ip</tt> that you want to forward DNS queries to.
--   
--   <a>$sel:ip:TargetAddress'</a>, <a>targetAddress_ip</a> - One IP
--   address that you want to forward DNS queries to. You can specify only
--   IPv4 addresses.
newTargetAddress :: Text -> TargetAddress

-- | The port at <tt>Ip</tt> that you want to forward DNS queries to.
targetAddress_port :: Lens' TargetAddress (Maybe Natural)

-- | One IP address that you want to forward DNS queries to. You can
--   specify only IPv4 addresses.
targetAddress_ip :: Lens' TargetAddress Text


-- | Adds one or more tags to a specified resource.
module Network.AWS.Route53Resolver.TagResource

-- | <i>See:</i> <a>newTagResource</a> smart constructor.
data TagResource
TagResource' :: Text -> [Tag] -> TagResource

-- | The Amazon Resource Name (ARN) for the resource that you want to add
--   tags to. To get the ARN for a resource, use the applicable
--   <tt>Get</tt> or <tt>List</tt> command:
--   
--   <ul>
--   <li><a>GetResolverEndpoint</a></li>
--   <li><a>GetResolverRule</a></li>
--   <li><a>GetResolverRuleAssociation</a></li>
--   <li><a>ListResolverEndpoints</a></li>
--   <li><a>ListResolverRuleAssociations</a></li>
--   <li><a>ListResolverRules</a></li>
--   </ul>
[$sel:resourceArn:TagResource'] :: TagResource -> Text

-- | The tags that you want to add to the specified resource.
[$sel:tags:TagResource'] :: TagResource -> [Tag]

-- | Create a value of <a>TagResource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:TagResource'</a>, <a>tagResource_resourceArn</a> -
--   The Amazon Resource Name (ARN) for the resource that you want to add
--   tags to. To get the ARN for a resource, use the applicable
--   <tt>Get</tt> or <tt>List</tt> command:
--   
--   <ul>
--   <li><a>GetResolverEndpoint</a></li>
--   <li><a>GetResolverRule</a></li>
--   <li><a>GetResolverRuleAssociation</a></li>
--   <li><a>ListResolverEndpoints</a></li>
--   <li><a>ListResolverRuleAssociations</a></li>
--   <li><a>ListResolverRules</a></li>
--   </ul>
--   
--   <a>$sel:tags:TagResource'</a>, <a>tagResource_tags</a> - The tags that
--   you want to add to the specified resource.
newTagResource :: Text -> TagResource

-- | The Amazon Resource Name (ARN) for the resource that you want to add
--   tags to. To get the ARN for a resource, use the applicable
--   <tt>Get</tt> or <tt>List</tt> command:
--   
--   <ul>
--   <li><a>GetResolverEndpoint</a></li>
--   <li><a>GetResolverRule</a></li>
--   <li><a>GetResolverRuleAssociation</a></li>
--   <li><a>ListResolverEndpoints</a></li>
--   <li><a>ListResolverRuleAssociations</a></li>
--   <li><a>ListResolverRules</a></li>
--   </ul>
tagResource_resourceArn :: Lens' TagResource Text

-- | The tags that you want to add to the specified resource.
tagResource_tags :: Lens' TagResource [Tag]

-- | <i>See:</i> <a>newTagResourceResponse</a> smart constructor.
data TagResourceResponse
TagResourceResponse' :: Int -> TagResourceResponse

-- | The response's http status code.
[$sel:httpStatus:TagResourceResponse'] :: TagResourceResponse -> Int

-- | Create a value of <a>TagResourceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:TagResourceResponse'</a>,
--   <a>tagResourceResponse_httpStatus</a> - The response's http status
--   code.
newTagResourceResponse :: Int -> TagResourceResponse

-- | The response's http status code.
tagResourceResponse_httpStatus :: Lens' TagResourceResponse Int
instance GHC.Generics.Generic Network.AWS.Route53Resolver.TagResource.TagResource
instance GHC.Show.Show Network.AWS.Route53Resolver.TagResource.TagResource
instance GHC.Read.Read Network.AWS.Route53Resolver.TagResource.TagResource
instance GHC.Classes.Eq Network.AWS.Route53Resolver.TagResource.TagResource
instance GHC.Generics.Generic Network.AWS.Route53Resolver.TagResource.TagResourceResponse
instance GHC.Show.Show Network.AWS.Route53Resolver.TagResource.TagResourceResponse
instance GHC.Read.Read Network.AWS.Route53Resolver.TagResource.TagResourceResponse
instance GHC.Classes.Eq Network.AWS.Route53Resolver.TagResource.TagResourceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53Resolver.TagResource.TagResource
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.TagResource.TagResourceResponse
instance Data.Hashable.Class.Hashable Network.AWS.Route53Resolver.TagResource.TagResource
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.TagResource.TagResource
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53Resolver.TagResource.TagResource
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53Resolver.TagResource.TagResource
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53Resolver.TagResource.TagResource
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53Resolver.TagResource.TagResource


-- | Specifies an Amazon Web Services rule that you want to share with
--   another account, the account that you want to share the rule with, and
--   the operations that you want the account to be able to perform on the
--   rule.
module Network.AWS.Route53Resolver.PutResolverRulePolicy

-- | <i>See:</i> <a>newPutResolverRulePolicy</a> smart constructor.
data PutResolverRulePolicy
PutResolverRulePolicy' :: Text -> Text -> PutResolverRulePolicy

-- | The Amazon Resource Name (ARN) of the rule that you want to share with
--   another account.
[$sel:arn:PutResolverRulePolicy'] :: PutResolverRulePolicy -> Text

-- | An Identity and Access Management policy statement that lists the
--   rules that you want to share with another Amazon Web Services account
--   and the operations that you want the account to be able to perform.
--   You can specify the following operations in the <tt>Action</tt>
--   section of the statement:
--   
--   <ul>
--   <li><pre>route53resolver:GetResolverRule</pre></li>
--   <li><pre>route53resolver:AssociateResolverRule</pre></li>
--   <li><pre>route53resolver:DisassociateResolverRule</pre></li>
--   <li><pre>route53resolver:ListResolverRules</pre></li>
--   <li><pre>route53resolver:ListResolverRuleAssociations</pre></li>
--   </ul>
--   
--   In the <tt>Resource</tt> section of the statement, specify the ARN for
--   the rule that you want to share with another account. Specify the same
--   ARN that you specified in <tt>Arn</tt>.
[$sel:resolverRulePolicy:PutResolverRulePolicy'] :: PutResolverRulePolicy -> Text

-- | Create a value of <a>PutResolverRulePolicy</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:PutResolverRulePolicy'</a>,
--   <a>putResolverRulePolicy_arn</a> - The Amazon Resource Name (ARN) of
--   the rule that you want to share with another account.
--   
--   <a>$sel:resolverRulePolicy:PutResolverRulePolicy'</a>,
--   <a>putResolverRulePolicy_resolverRulePolicy</a> - An Identity and
--   Access Management policy statement that lists the rules that you want
--   to share with another Amazon Web Services account and the operations
--   that you want the account to be able to perform. You can specify the
--   following operations in the <tt>Action</tt> section of the statement:
--   
--   <ul>
--   <li><pre>route53resolver:GetResolverRule</pre></li>
--   <li><pre>route53resolver:AssociateResolverRule</pre></li>
--   <li><pre>route53resolver:DisassociateResolverRule</pre></li>
--   <li><pre>route53resolver:ListResolverRules</pre></li>
--   <li><pre>route53resolver:ListResolverRuleAssociations</pre></li>
--   </ul>
--   
--   In the <tt>Resource</tt> section of the statement, specify the ARN for
--   the rule that you want to share with another account. Specify the same
--   ARN that you specified in <tt>Arn</tt>.
newPutResolverRulePolicy :: Text -> Text -> PutResolverRulePolicy

-- | The Amazon Resource Name (ARN) of the rule that you want to share with
--   another account.
putResolverRulePolicy_arn :: Lens' PutResolverRulePolicy Text

-- | An Identity and Access Management policy statement that lists the
--   rules that you want to share with another Amazon Web Services account
--   and the operations that you want the account to be able to perform.
--   You can specify the following operations in the <tt>Action</tt>
--   section of the statement:
--   
--   <ul>
--   <li><pre>route53resolver:GetResolverRule</pre></li>
--   <li><pre>route53resolver:AssociateResolverRule</pre></li>
--   <li><pre>route53resolver:DisassociateResolverRule</pre></li>
--   <li><pre>route53resolver:ListResolverRules</pre></li>
--   <li><pre>route53resolver:ListResolverRuleAssociations</pre></li>
--   </ul>
--   
--   In the <tt>Resource</tt> section of the statement, specify the ARN for
--   the rule that you want to share with another account. Specify the same
--   ARN that you specified in <tt>Arn</tt>.
putResolverRulePolicy_resolverRulePolicy :: Lens' PutResolverRulePolicy Text

-- | The response to a <tt>PutResolverRulePolicy</tt> request.
--   
--   <i>See:</i> <a>newPutResolverRulePolicyResponse</a> smart constructor.
data PutResolverRulePolicyResponse
PutResolverRulePolicyResponse' :: Maybe Bool -> Int -> PutResolverRulePolicyResponse

-- | Whether the <tt>PutResolverRulePolicy</tt> request was successful.
[$sel:returnValue:PutResolverRulePolicyResponse'] :: PutResolverRulePolicyResponse -> Maybe Bool

-- | The response's http status code.
[$sel:httpStatus:PutResolverRulePolicyResponse'] :: PutResolverRulePolicyResponse -> Int

-- | Create a value of <a>PutResolverRulePolicyResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:returnValue:PutResolverRulePolicyResponse'</a>,
--   <a>putResolverRulePolicyResponse_returnValue</a> - Whether the
--   <tt>PutResolverRulePolicy</tt> request was successful.
--   
--   <a>$sel:httpStatus:PutResolverRulePolicyResponse'</a>,
--   <a>putResolverRulePolicyResponse_httpStatus</a> - The response's http
--   status code.
newPutResolverRulePolicyResponse :: Int -> PutResolverRulePolicyResponse

-- | Whether the <tt>PutResolverRulePolicy</tt> request was successful.
putResolverRulePolicyResponse_returnValue :: Lens' PutResolverRulePolicyResponse (Maybe Bool)

-- | The response's http status code.
putResolverRulePolicyResponse_httpStatus :: Lens' PutResolverRulePolicyResponse Int
instance GHC.Generics.Generic Network.AWS.Route53Resolver.PutResolverRulePolicy.PutResolverRulePolicy
instance GHC.Show.Show Network.AWS.Route53Resolver.PutResolverRulePolicy.PutResolverRulePolicy
instance GHC.Read.Read Network.AWS.Route53Resolver.PutResolverRulePolicy.PutResolverRulePolicy
instance GHC.Classes.Eq Network.AWS.Route53Resolver.PutResolverRulePolicy.PutResolverRulePolicy
instance GHC.Generics.Generic Network.AWS.Route53Resolver.PutResolverRulePolicy.PutResolverRulePolicyResponse
instance GHC.Show.Show Network.AWS.Route53Resolver.PutResolverRulePolicy.PutResolverRulePolicyResponse
instance GHC.Read.Read Network.AWS.Route53Resolver.PutResolverRulePolicy.PutResolverRulePolicyResponse
instance GHC.Classes.Eq Network.AWS.Route53Resolver.PutResolverRulePolicy.PutResolverRulePolicyResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53Resolver.PutResolverRulePolicy.PutResolverRulePolicy
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.PutResolverRulePolicy.PutResolverRulePolicyResponse
instance Data.Hashable.Class.Hashable Network.AWS.Route53Resolver.PutResolverRulePolicy.PutResolverRulePolicy
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.PutResolverRulePolicy.PutResolverRulePolicy
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53Resolver.PutResolverRulePolicy.PutResolverRulePolicy
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53Resolver.PutResolverRulePolicy.PutResolverRulePolicy
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53Resolver.PutResolverRulePolicy.PutResolverRulePolicy
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53Resolver.PutResolverRulePolicy.PutResolverRulePolicy


-- | Specifies an Amazon Web Services account that you want to share a
--   query logging configuration with, the query logging configuration that
--   you want to share, and the operations that you want the account to be
--   able to perform on the configuration.
module Network.AWS.Route53Resolver.PutResolverQueryLogConfigPolicy

-- | <i>See:</i> <a>newPutResolverQueryLogConfigPolicy</a> smart
--   constructor.
data PutResolverQueryLogConfigPolicy
PutResolverQueryLogConfigPolicy' :: Text -> Text -> PutResolverQueryLogConfigPolicy

-- | The Amazon Resource Name (ARN) of the account that you want to share
--   rules with.
[$sel:arn:PutResolverQueryLogConfigPolicy'] :: PutResolverQueryLogConfigPolicy -> Text

-- | An Identity and Access Management policy statement that lists the
--   query logging configurations that you want to share with another
--   Amazon Web Services account and the operations that you want the
--   account to be able to perform. You can specify the following
--   operations in the <tt>Actions</tt> section of the statement:
--   
--   <ul>
--   <li><pre>route53resolver:AssociateResolverQueryLogConfig</pre></li>
--   <li><pre>route53resolver:DisassociateResolverQueryLogConfig</pre></li>
--   
--   <li><pre>route53resolver:ListResolverQueryLogConfigAssociations</pre></li>
--   <li><pre>route53resolver:ListResolverQueryLogConfigs</pre></li>
--   </ul>
--   
--   In the <tt>Resource</tt> section of the statement, you specify the
--   ARNs for the query logging configurations that you want to share with
--   the account that you specified in <tt>Arn</tt>.
[$sel:resolverQueryLogConfigPolicy:PutResolverQueryLogConfigPolicy'] :: PutResolverQueryLogConfigPolicy -> Text

-- | Create a value of <a>PutResolverQueryLogConfigPolicy</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:PutResolverQueryLogConfigPolicy'</a>,
--   <a>putResolverQueryLogConfigPolicy_arn</a> - The Amazon Resource Name
--   (ARN) of the account that you want to share rules with.
--   
--   
--   <a>$sel:resolverQueryLogConfigPolicy:PutResolverQueryLogConfigPolicy'</a>,
--   <a>putResolverQueryLogConfigPolicy_resolverQueryLogConfigPolicy</a> -
--   An Identity and Access Management policy statement that lists the
--   query logging configurations that you want to share with another
--   Amazon Web Services account and the operations that you want the
--   account to be able to perform. You can specify the following
--   operations in the <tt>Actions</tt> section of the statement:
--   
--   <ul>
--   <li><pre>route53resolver:AssociateResolverQueryLogConfig</pre></li>
--   <li><pre>route53resolver:DisassociateResolverQueryLogConfig</pre></li>
--   
--   <li><pre>route53resolver:ListResolverQueryLogConfigAssociations</pre></li>
--   <li><pre>route53resolver:ListResolverQueryLogConfigs</pre></li>
--   </ul>
--   
--   In the <tt>Resource</tt> section of the statement, you specify the
--   ARNs for the query logging configurations that you want to share with
--   the account that you specified in <tt>Arn</tt>.
newPutResolverQueryLogConfigPolicy :: Text -> Text -> PutResolverQueryLogConfigPolicy

-- | The Amazon Resource Name (ARN) of the account that you want to share
--   rules with.
putResolverQueryLogConfigPolicy_arn :: Lens' PutResolverQueryLogConfigPolicy Text

-- | An Identity and Access Management policy statement that lists the
--   query logging configurations that you want to share with another
--   Amazon Web Services account and the operations that you want the
--   account to be able to perform. You can specify the following
--   operations in the <tt>Actions</tt> section of the statement:
--   
--   <ul>
--   <li><pre>route53resolver:AssociateResolverQueryLogConfig</pre></li>
--   <li><pre>route53resolver:DisassociateResolverQueryLogConfig</pre></li>
--   
--   <li><pre>route53resolver:ListResolverQueryLogConfigAssociations</pre></li>
--   <li><pre>route53resolver:ListResolverQueryLogConfigs</pre></li>
--   </ul>
--   
--   In the <tt>Resource</tt> section of the statement, you specify the
--   ARNs for the query logging configurations that you want to share with
--   the account that you specified in <tt>Arn</tt>.
putResolverQueryLogConfigPolicy_resolverQueryLogConfigPolicy :: Lens' PutResolverQueryLogConfigPolicy Text

-- | The response to a <tt>PutResolverQueryLogConfigPolicy</tt> request.
--   
--   <i>See:</i> <a>newPutResolverQueryLogConfigPolicyResponse</a> smart
--   constructor.
data PutResolverQueryLogConfigPolicyResponse
PutResolverQueryLogConfigPolicyResponse' :: Maybe Bool -> Int -> PutResolverQueryLogConfigPolicyResponse

-- | Whether the <tt>PutResolverQueryLogConfigPolicy</tt> request was
--   successful.
[$sel:returnValue:PutResolverQueryLogConfigPolicyResponse'] :: PutResolverQueryLogConfigPolicyResponse -> Maybe Bool

-- | The response's http status code.
[$sel:httpStatus:PutResolverQueryLogConfigPolicyResponse'] :: PutResolverQueryLogConfigPolicyResponse -> Int

-- | Create a value of <a>PutResolverQueryLogConfigPolicyResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:returnValue:PutResolverQueryLogConfigPolicyResponse'</a>,
--   <a>putResolverQueryLogConfigPolicyResponse_returnValue</a> - Whether
--   the <tt>PutResolverQueryLogConfigPolicy</tt> request was successful.
--   
--   <a>$sel:httpStatus:PutResolverQueryLogConfigPolicyResponse'</a>,
--   <a>putResolverQueryLogConfigPolicyResponse_httpStatus</a> - The
--   response's http status code.
newPutResolverQueryLogConfigPolicyResponse :: Int -> PutResolverQueryLogConfigPolicyResponse

-- | Whether the <tt>PutResolverQueryLogConfigPolicy</tt> request was
--   successful.
putResolverQueryLogConfigPolicyResponse_returnValue :: Lens' PutResolverQueryLogConfigPolicyResponse (Maybe Bool)

-- | The response's http status code.
putResolverQueryLogConfigPolicyResponse_httpStatus :: Lens' PutResolverQueryLogConfigPolicyResponse Int
instance GHC.Generics.Generic Network.AWS.Route53Resolver.PutResolverQueryLogConfigPolicy.PutResolverQueryLogConfigPolicy
instance GHC.Show.Show Network.AWS.Route53Resolver.PutResolverQueryLogConfigPolicy.PutResolverQueryLogConfigPolicy
instance GHC.Read.Read Network.AWS.Route53Resolver.PutResolverQueryLogConfigPolicy.PutResolverQueryLogConfigPolicy
instance GHC.Classes.Eq Network.AWS.Route53Resolver.PutResolverQueryLogConfigPolicy.PutResolverQueryLogConfigPolicy
instance GHC.Generics.Generic Network.AWS.Route53Resolver.PutResolverQueryLogConfigPolicy.PutResolverQueryLogConfigPolicyResponse
instance GHC.Show.Show Network.AWS.Route53Resolver.PutResolverQueryLogConfigPolicy.PutResolverQueryLogConfigPolicyResponse
instance GHC.Read.Read Network.AWS.Route53Resolver.PutResolverQueryLogConfigPolicy.PutResolverQueryLogConfigPolicyResponse
instance GHC.Classes.Eq Network.AWS.Route53Resolver.PutResolverQueryLogConfigPolicy.PutResolverQueryLogConfigPolicyResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53Resolver.PutResolverQueryLogConfigPolicy.PutResolverQueryLogConfigPolicy
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.PutResolverQueryLogConfigPolicy.PutResolverQueryLogConfigPolicyResponse
instance Data.Hashable.Class.Hashable Network.AWS.Route53Resolver.PutResolverQueryLogConfigPolicy.PutResolverQueryLogConfigPolicy
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.PutResolverQueryLogConfigPolicy.PutResolverQueryLogConfigPolicy
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53Resolver.PutResolverQueryLogConfigPolicy.PutResolverQueryLogConfigPolicy
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53Resolver.PutResolverQueryLogConfigPolicy.PutResolverQueryLogConfigPolicy
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53Resolver.PutResolverQueryLogConfigPolicy.PutResolverQueryLogConfigPolicy
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53Resolver.PutResolverQueryLogConfigPolicy.PutResolverQueryLogConfigPolicy


-- | Attaches an Identity and Access Management (Amazon Web Services IAM)
--   policy for sharing the rule group. You can use the policy to share the
--   rule group using Resource Access Manager (RAM).
module Network.AWS.Route53Resolver.PutFirewallRuleGroupPolicy

-- | <i>See:</i> <a>newPutFirewallRuleGroupPolicy</a> smart constructor.
data PutFirewallRuleGroupPolicy
PutFirewallRuleGroupPolicy' :: Text -> Text -> PutFirewallRuleGroupPolicy

-- | The ARN (Amazon Resource Name) for the rule group that you want to
--   share.
[$sel:arn:PutFirewallRuleGroupPolicy'] :: PutFirewallRuleGroupPolicy -> Text

-- | The Identity and Access Management (Amazon Web Services IAM) policy to
--   attach to the rule group.
[$sel:firewallRuleGroupPolicy:PutFirewallRuleGroupPolicy'] :: PutFirewallRuleGroupPolicy -> Text

-- | Create a value of <a>PutFirewallRuleGroupPolicy</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:PutFirewallRuleGroupPolicy'</a>,
--   <a>putFirewallRuleGroupPolicy_arn</a> - The ARN (Amazon Resource Name)
--   for the rule group that you want to share.
--   
--   <a>$sel:firewallRuleGroupPolicy:PutFirewallRuleGroupPolicy'</a>,
--   <a>putFirewallRuleGroupPolicy_firewallRuleGroupPolicy</a> - The
--   Identity and Access Management (Amazon Web Services IAM) policy to
--   attach to the rule group.
newPutFirewallRuleGroupPolicy :: Text -> Text -> PutFirewallRuleGroupPolicy

-- | The ARN (Amazon Resource Name) for the rule group that you want to
--   share.
putFirewallRuleGroupPolicy_arn :: Lens' PutFirewallRuleGroupPolicy Text

-- | The Identity and Access Management (Amazon Web Services IAM) policy to
--   attach to the rule group.
putFirewallRuleGroupPolicy_firewallRuleGroupPolicy :: Lens' PutFirewallRuleGroupPolicy Text

-- | <i>See:</i> <a>newPutFirewallRuleGroupPolicyResponse</a> smart
--   constructor.
data PutFirewallRuleGroupPolicyResponse
PutFirewallRuleGroupPolicyResponse' :: Maybe Bool -> Int -> PutFirewallRuleGroupPolicyResponse
[$sel:returnValue:PutFirewallRuleGroupPolicyResponse'] :: PutFirewallRuleGroupPolicyResponse -> Maybe Bool

-- | The response's http status code.
[$sel:httpStatus:PutFirewallRuleGroupPolicyResponse'] :: PutFirewallRuleGroupPolicyResponse -> Int

-- | Create a value of <a>PutFirewallRuleGroupPolicyResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:returnValue:PutFirewallRuleGroupPolicyResponse'</a>,
--   <a>putFirewallRuleGroupPolicyResponse_returnValue</a> -
--   
--   <a>$sel:httpStatus:PutFirewallRuleGroupPolicyResponse'</a>,
--   <a>putFirewallRuleGroupPolicyResponse_httpStatus</a> - The response's
--   http status code.
newPutFirewallRuleGroupPolicyResponse :: Int -> PutFirewallRuleGroupPolicyResponse

putFirewallRuleGroupPolicyResponse_returnValue :: Lens' PutFirewallRuleGroupPolicyResponse (Maybe Bool)

-- | The response's http status code.
putFirewallRuleGroupPolicyResponse_httpStatus :: Lens' PutFirewallRuleGroupPolicyResponse Int
instance GHC.Generics.Generic Network.AWS.Route53Resolver.PutFirewallRuleGroupPolicy.PutFirewallRuleGroupPolicy
instance GHC.Show.Show Network.AWS.Route53Resolver.PutFirewallRuleGroupPolicy.PutFirewallRuleGroupPolicy
instance GHC.Read.Read Network.AWS.Route53Resolver.PutFirewallRuleGroupPolicy.PutFirewallRuleGroupPolicy
instance GHC.Classes.Eq Network.AWS.Route53Resolver.PutFirewallRuleGroupPolicy.PutFirewallRuleGroupPolicy
instance GHC.Generics.Generic Network.AWS.Route53Resolver.PutFirewallRuleGroupPolicy.PutFirewallRuleGroupPolicyResponse
instance GHC.Show.Show Network.AWS.Route53Resolver.PutFirewallRuleGroupPolicy.PutFirewallRuleGroupPolicyResponse
instance GHC.Read.Read Network.AWS.Route53Resolver.PutFirewallRuleGroupPolicy.PutFirewallRuleGroupPolicyResponse
instance GHC.Classes.Eq Network.AWS.Route53Resolver.PutFirewallRuleGroupPolicy.PutFirewallRuleGroupPolicyResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53Resolver.PutFirewallRuleGroupPolicy.PutFirewallRuleGroupPolicy
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.PutFirewallRuleGroupPolicy.PutFirewallRuleGroupPolicyResponse
instance Data.Hashable.Class.Hashable Network.AWS.Route53Resolver.PutFirewallRuleGroupPolicy.PutFirewallRuleGroupPolicy
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.PutFirewallRuleGroupPolicy.PutFirewallRuleGroupPolicy
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53Resolver.PutFirewallRuleGroupPolicy.PutFirewallRuleGroupPolicy
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53Resolver.PutFirewallRuleGroupPolicy.PutFirewallRuleGroupPolicy
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53Resolver.PutFirewallRuleGroupPolicy.PutFirewallRuleGroupPolicy
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53Resolver.PutFirewallRuleGroupPolicy.PutFirewallRuleGroupPolicy


-- | Lists the tags that you associated with the specified resource.
--   
--   This operation returns paginated results.
module Network.AWS.Route53Resolver.ListTagsForResource

-- | <i>See:</i> <a>newListTagsForResource</a> smart constructor.
data ListTagsForResource
ListTagsForResource' :: Maybe Text -> Maybe Natural -> Text -> ListTagsForResource

-- | For the first <tt>ListTagsForResource</tt> request, omit this value.
--   
--   If you have more than <tt>MaxResults</tt> tags, you can submit another
--   <tt>ListTagsForResource</tt> request to get the next group of tags for
--   the resource. In the next request, specify the value of
--   <tt>NextToken</tt> from the previous response.
[$sel:nextToken:ListTagsForResource'] :: ListTagsForResource -> Maybe Text

-- | The maximum number of tags that you want to return in the response to
--   a <tt>ListTagsForResource</tt> request. If you don't specify a value
--   for <tt>MaxResults</tt>, Resolver returns up to 100 tags.
[$sel:maxResults:ListTagsForResource'] :: ListTagsForResource -> Maybe Natural

-- | The Amazon Resource Name (ARN) for the resource that you want to list
--   tags for.
[$sel:resourceArn:ListTagsForResource'] :: ListTagsForResource -> Text

-- | Create a value of <a>ListTagsForResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListTagsForResource'</a>,
--   <a>listTagsForResource_nextToken</a> - For the first
--   <tt>ListTagsForResource</tt> request, omit this value.
--   
--   If you have more than <tt>MaxResults</tt> tags, you can submit another
--   <tt>ListTagsForResource</tt> request to get the next group of tags for
--   the resource. In the next request, specify the value of
--   <tt>NextToken</tt> from the previous response.
--   
--   <a>$sel:maxResults:ListTagsForResource'</a>,
--   <a>listTagsForResource_maxResults</a> - The maximum number of tags
--   that you want to return in the response to a
--   <tt>ListTagsForResource</tt> request. If you don't specify a value for
--   <tt>MaxResults</tt>, Resolver returns up to 100 tags.
--   
--   <a>$sel:resourceArn:ListTagsForResource'</a>,
--   <a>listTagsForResource_resourceArn</a> - The Amazon Resource Name
--   (ARN) for the resource that you want to list tags for.
newListTagsForResource :: Text -> ListTagsForResource

-- | For the first <tt>ListTagsForResource</tt> request, omit this value.
--   
--   If you have more than <tt>MaxResults</tt> tags, you can submit another
--   <tt>ListTagsForResource</tt> request to get the next group of tags for
--   the resource. In the next request, specify the value of
--   <tt>NextToken</tt> from the previous response.
listTagsForResource_nextToken :: Lens' ListTagsForResource (Maybe Text)

-- | The maximum number of tags that you want to return in the response to
--   a <tt>ListTagsForResource</tt> request. If you don't specify a value
--   for <tt>MaxResults</tt>, Resolver returns up to 100 tags.
listTagsForResource_maxResults :: Lens' ListTagsForResource (Maybe Natural)

-- | The Amazon Resource Name (ARN) for the resource that you want to list
--   tags for.
listTagsForResource_resourceArn :: Lens' ListTagsForResource Text

-- | <i>See:</i> <a>newListTagsForResourceResponse</a> smart constructor.
data ListTagsForResourceResponse
ListTagsForResourceResponse' :: Maybe Text -> Maybe [Tag] -> Int -> ListTagsForResourceResponse

-- | If more than <tt>MaxResults</tt> tags match the specified criteria,
--   you can submit another <tt>ListTagsForResource</tt> request to get the
--   next group of results. In the next request, specify the value of
--   <tt>NextToken</tt> from the previous response.
[$sel:nextToken:ListTagsForResourceResponse'] :: ListTagsForResourceResponse -> Maybe Text

-- | The tags that are associated with the resource that you specified in
--   the <tt>ListTagsForResource</tt> request.
[$sel:tags:ListTagsForResourceResponse'] :: ListTagsForResourceResponse -> Maybe [Tag]

-- | The response's http status code.
[$sel:httpStatus:ListTagsForResourceResponse'] :: ListTagsForResourceResponse -> Int

-- | Create a value of <a>ListTagsForResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListTagsForResource'</a>,
--   <a>listTagsForResourceResponse_nextToken</a> - If more than
--   <tt>MaxResults</tt> tags match the specified criteria, you can submit
--   another <tt>ListTagsForResource</tt> request to get the next group of
--   results. In the next request, specify the value of <tt>NextToken</tt>
--   from the previous response.
--   
--   <a>$sel:tags:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_tags</a> - The tags that are associated
--   with the resource that you specified in the
--   <tt>ListTagsForResource</tt> request.
--   
--   <a>$sel:httpStatus:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_httpStatus</a> - The response's http
--   status code.
newListTagsForResourceResponse :: Int -> ListTagsForResourceResponse

-- | If more than <tt>MaxResults</tt> tags match the specified criteria,
--   you can submit another <tt>ListTagsForResource</tt> request to get the
--   next group of results. In the next request, specify the value of
--   <tt>NextToken</tt> from the previous response.
listTagsForResourceResponse_nextToken :: Lens' ListTagsForResourceResponse (Maybe Text)

-- | The tags that are associated with the resource that you specified in
--   the <tt>ListTagsForResource</tt> request.
listTagsForResourceResponse_tags :: Lens' ListTagsForResourceResponse (Maybe [Tag])

-- | The response's http status code.
listTagsForResourceResponse_httpStatus :: Lens' ListTagsForResourceResponse Int
instance GHC.Generics.Generic Network.AWS.Route53Resolver.ListTagsForResource.ListTagsForResource
instance GHC.Show.Show Network.AWS.Route53Resolver.ListTagsForResource.ListTagsForResource
instance GHC.Read.Read Network.AWS.Route53Resolver.ListTagsForResource.ListTagsForResource
instance GHC.Classes.Eq Network.AWS.Route53Resolver.ListTagsForResource.ListTagsForResource
instance GHC.Generics.Generic Network.AWS.Route53Resolver.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Show.Show Network.AWS.Route53Resolver.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Read.Read Network.AWS.Route53Resolver.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Classes.Eq Network.AWS.Route53Resolver.ListTagsForResource.ListTagsForResourceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53Resolver.ListTagsForResource.ListTagsForResource
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.ListTagsForResource.ListTagsForResourceResponse
instance Network.AWS.Pager.AWSPager Network.AWS.Route53Resolver.ListTagsForResource.ListTagsForResource
instance Data.Hashable.Class.Hashable Network.AWS.Route53Resolver.ListTagsForResource.ListTagsForResource
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.ListTagsForResource.ListTagsForResource
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53Resolver.ListTagsForResource.ListTagsForResource
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53Resolver.ListTagsForResource.ListTagsForResource
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53Resolver.ListTagsForResource.ListTagsForResource
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53Resolver.ListTagsForResource.ListTagsForResource


-- | Lists the Resolver rules that were created using the current Amazon
--   Web Services account.
--   
--   This operation returns paginated results.
module Network.AWS.Route53Resolver.ListResolverRules

-- | <i>See:</i> <a>newListResolverRules</a> smart constructor.
data ListResolverRules
ListResolverRules' :: Maybe [Filter] -> Maybe Text -> Maybe Natural -> ListResolverRules

-- | An optional specification to return a subset of Resolver rules, such
--   as all Resolver rules that are associated with the same Resolver
--   endpoint.
--   
--   If you submit a second or subsequent <tt>ListResolverRules</tt>
--   request and specify the <tt>NextToken</tt> parameter, you must use the
--   same values for <tt>Filters</tt>, if any, as in the previous request.
[$sel:filters:ListResolverRules'] :: ListResolverRules -> Maybe [Filter]

-- | For the first <tt>ListResolverRules</tt> request, omit this value.
--   
--   If you have more than <tt>MaxResults</tt> Resolver rules, you can
--   submit another <tt>ListResolverRules</tt> request to get the next
--   group of Resolver rules. In the next request, specify the value of
--   <tt>NextToken</tt> from the previous response.
[$sel:nextToken:ListResolverRules'] :: ListResolverRules -> Maybe Text

-- | The maximum number of Resolver rules that you want to return in the
--   response to a <tt>ListResolverRules</tt> request. If you don't specify
--   a value for <tt>MaxResults</tt>, Resolver returns up to 100 Resolver
--   rules.
[$sel:maxResults:ListResolverRules'] :: ListResolverRules -> Maybe Natural

-- | Create a value of <a>ListResolverRules</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:filters:ListResolverRules'</a>,
--   <a>listResolverRules_filters</a> - An optional specification to return
--   a subset of Resolver rules, such as all Resolver rules that are
--   associated with the same Resolver endpoint.
--   
--   If you submit a second or subsequent <tt>ListResolverRules</tt>
--   request and specify the <tt>NextToken</tt> parameter, you must use the
--   same values for <tt>Filters</tt>, if any, as in the previous request.
--   
--   <a>$sel:nextToken:ListResolverRules'</a>,
--   <a>listResolverRules_nextToken</a> - For the first
--   <tt>ListResolverRules</tt> request, omit this value.
--   
--   If you have more than <tt>MaxResults</tt> Resolver rules, you can
--   submit another <tt>ListResolverRules</tt> request to get the next
--   group of Resolver rules. In the next request, specify the value of
--   <tt>NextToken</tt> from the previous response.
--   
--   <a>$sel:maxResults:ListResolverRules'</a>,
--   <a>listResolverRules_maxResults</a> - The maximum number of Resolver
--   rules that you want to return in the response to a
--   <tt>ListResolverRules</tt> request. If you don't specify a value for
--   <tt>MaxResults</tt>, Resolver returns up to 100 Resolver rules.
newListResolverRules :: ListResolverRules

-- | An optional specification to return a subset of Resolver rules, such
--   as all Resolver rules that are associated with the same Resolver
--   endpoint.
--   
--   If you submit a second or subsequent <tt>ListResolverRules</tt>
--   request and specify the <tt>NextToken</tt> parameter, you must use the
--   same values for <tt>Filters</tt>, if any, as in the previous request.
listResolverRules_filters :: Lens' ListResolverRules (Maybe [Filter])

-- | For the first <tt>ListResolverRules</tt> request, omit this value.
--   
--   If you have more than <tt>MaxResults</tt> Resolver rules, you can
--   submit another <tt>ListResolverRules</tt> request to get the next
--   group of Resolver rules. In the next request, specify the value of
--   <tt>NextToken</tt> from the previous response.
listResolverRules_nextToken :: Lens' ListResolverRules (Maybe Text)

-- | The maximum number of Resolver rules that you want to return in the
--   response to a <tt>ListResolverRules</tt> request. If you don't specify
--   a value for <tt>MaxResults</tt>, Resolver returns up to 100 Resolver
--   rules.
listResolverRules_maxResults :: Lens' ListResolverRules (Maybe Natural)

-- | <i>See:</i> <a>newListResolverRulesResponse</a> smart constructor.
data ListResolverRulesResponse
ListResolverRulesResponse' :: Maybe [ResolverRule] -> Maybe Text -> Maybe Natural -> Int -> ListResolverRulesResponse

-- | The Resolver rules that were created using the current Amazon Web
--   Services account and that match the specified filters, if any.
[$sel:resolverRules:ListResolverRulesResponse'] :: ListResolverRulesResponse -> Maybe [ResolverRule]

-- | If more than <tt>MaxResults</tt> Resolver rules match the specified
--   criteria, you can submit another <tt>ListResolverRules</tt> request to
--   get the next group of results. In the next request, specify the value
--   of <tt>NextToken</tt> from the previous response.
[$sel:nextToken:ListResolverRulesResponse'] :: ListResolverRulesResponse -> Maybe Text

-- | The value that you specified for <tt>MaxResults</tt> in the request.
[$sel:maxResults:ListResolverRulesResponse'] :: ListResolverRulesResponse -> Maybe Natural

-- | The response's http status code.
[$sel:httpStatus:ListResolverRulesResponse'] :: ListResolverRulesResponse -> Int

-- | Create a value of <a>ListResolverRulesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resolverRules:ListResolverRulesResponse'</a>,
--   <a>listResolverRulesResponse_resolverRules</a> - The Resolver rules
--   that were created using the current Amazon Web Services account and
--   that match the specified filters, if any.
--   
--   <a>$sel:nextToken:ListResolverRules'</a>,
--   <a>listResolverRulesResponse_nextToken</a> - If more than
--   <tt>MaxResults</tt> Resolver rules match the specified criteria, you
--   can submit another <tt>ListResolverRules</tt> request to get the next
--   group of results. In the next request, specify the value of
--   <tt>NextToken</tt> from the previous response.
--   
--   <a>$sel:maxResults:ListResolverRules'</a>,
--   <a>listResolverRulesResponse_maxResults</a> - The value that you
--   specified for <tt>MaxResults</tt> in the request.
--   
--   <a>$sel:httpStatus:ListResolverRulesResponse'</a>,
--   <a>listResolverRulesResponse_httpStatus</a> - The response's http
--   status code.
newListResolverRulesResponse :: Int -> ListResolverRulesResponse

-- | The Resolver rules that were created using the current Amazon Web
--   Services account and that match the specified filters, if any.
listResolverRulesResponse_resolverRules :: Lens' ListResolverRulesResponse (Maybe [ResolverRule])

-- | If more than <tt>MaxResults</tt> Resolver rules match the specified
--   criteria, you can submit another <tt>ListResolverRules</tt> request to
--   get the next group of results. In the next request, specify the value
--   of <tt>NextToken</tt> from the previous response.
listResolverRulesResponse_nextToken :: Lens' ListResolverRulesResponse (Maybe Text)

-- | The value that you specified for <tt>MaxResults</tt> in the request.
listResolverRulesResponse_maxResults :: Lens' ListResolverRulesResponse (Maybe Natural)

-- | The response's http status code.
listResolverRulesResponse_httpStatus :: Lens' ListResolverRulesResponse Int
instance GHC.Generics.Generic Network.AWS.Route53Resolver.ListResolverRules.ListResolverRules
instance GHC.Show.Show Network.AWS.Route53Resolver.ListResolverRules.ListResolverRules
instance GHC.Read.Read Network.AWS.Route53Resolver.ListResolverRules.ListResolverRules
instance GHC.Classes.Eq Network.AWS.Route53Resolver.ListResolverRules.ListResolverRules
instance GHC.Generics.Generic Network.AWS.Route53Resolver.ListResolverRules.ListResolverRulesResponse
instance GHC.Show.Show Network.AWS.Route53Resolver.ListResolverRules.ListResolverRulesResponse
instance GHC.Read.Read Network.AWS.Route53Resolver.ListResolverRules.ListResolverRulesResponse
instance GHC.Classes.Eq Network.AWS.Route53Resolver.ListResolverRules.ListResolverRulesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53Resolver.ListResolverRules.ListResolverRules
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.ListResolverRules.ListResolverRulesResponse
instance Network.AWS.Pager.AWSPager Network.AWS.Route53Resolver.ListResolverRules.ListResolverRules
instance Data.Hashable.Class.Hashable Network.AWS.Route53Resolver.ListResolverRules.ListResolverRules
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.ListResolverRules.ListResolverRules
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53Resolver.ListResolverRules.ListResolverRules
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53Resolver.ListResolverRules.ListResolverRules
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53Resolver.ListResolverRules.ListResolverRules
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53Resolver.ListResolverRules.ListResolverRules


-- | Lists the associations that were created between Resolver rules and
--   VPCs using the current Amazon Web Services account.
--   
--   This operation returns paginated results.
module Network.AWS.Route53Resolver.ListResolverRuleAssociations

-- | <i>See:</i> <a>newListResolverRuleAssociations</a> smart constructor.
data ListResolverRuleAssociations
ListResolverRuleAssociations' :: Maybe [Filter] -> Maybe Text -> Maybe Natural -> ListResolverRuleAssociations

-- | An optional specification to return a subset of Resolver rules, such
--   as Resolver rules that are associated with the same VPC ID.
--   
--   If you submit a second or subsequent
--   <tt>ListResolverRuleAssociations</tt> request and specify the
--   <tt>NextToken</tt> parameter, you must use the same values for
--   <tt>Filters</tt>, if any, as in the previous request.
[$sel:filters:ListResolverRuleAssociations'] :: ListResolverRuleAssociations -> Maybe [Filter]

-- | For the first <tt>ListResolverRuleAssociation</tt> request, omit this
--   value.
--   
--   If you have more than <tt>MaxResults</tt> rule associations, you can
--   submit another <tt>ListResolverRuleAssociation</tt> request to get the
--   next group of rule associations. In the next request, specify the
--   value of <tt>NextToken</tt> from the previous response.
[$sel:nextToken:ListResolverRuleAssociations'] :: ListResolverRuleAssociations -> Maybe Text

-- | The maximum number of rule associations that you want to return in the
--   response to a <tt>ListResolverRuleAssociations</tt> request. If you
--   don't specify a value for <tt>MaxResults</tt>, Resolver returns up to
--   100 rule associations.
[$sel:maxResults:ListResolverRuleAssociations'] :: ListResolverRuleAssociations -> Maybe Natural

-- | Create a value of <a>ListResolverRuleAssociations</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:filters:ListResolverRuleAssociations'</a>,
--   <a>listResolverRuleAssociations_filters</a> - An optional
--   specification to return a subset of Resolver rules, such as Resolver
--   rules that are associated with the same VPC ID.
--   
--   If you submit a second or subsequent
--   <tt>ListResolverRuleAssociations</tt> request and specify the
--   <tt>NextToken</tt> parameter, you must use the same values for
--   <tt>Filters</tt>, if any, as in the previous request.
--   
--   <a>$sel:nextToken:ListResolverRuleAssociations'</a>,
--   <a>listResolverRuleAssociations_nextToken</a> - For the first
--   <tt>ListResolverRuleAssociation</tt> request, omit this value.
--   
--   If you have more than <tt>MaxResults</tt> rule associations, you can
--   submit another <tt>ListResolverRuleAssociation</tt> request to get the
--   next group of rule associations. In the next request, specify the
--   value of <tt>NextToken</tt> from the previous response.
--   
--   <a>$sel:maxResults:ListResolverRuleAssociations'</a>,
--   <a>listResolverRuleAssociations_maxResults</a> - The maximum number of
--   rule associations that you want to return in the response to a
--   <tt>ListResolverRuleAssociations</tt> request. If you don't specify a
--   value for <tt>MaxResults</tt>, Resolver returns up to 100 rule
--   associations.
newListResolverRuleAssociations :: ListResolverRuleAssociations

-- | An optional specification to return a subset of Resolver rules, such
--   as Resolver rules that are associated with the same VPC ID.
--   
--   If you submit a second or subsequent
--   <tt>ListResolverRuleAssociations</tt> request and specify the
--   <tt>NextToken</tt> parameter, you must use the same values for
--   <tt>Filters</tt>, if any, as in the previous request.
listResolverRuleAssociations_filters :: Lens' ListResolverRuleAssociations (Maybe [Filter])

-- | For the first <tt>ListResolverRuleAssociation</tt> request, omit this
--   value.
--   
--   If you have more than <tt>MaxResults</tt> rule associations, you can
--   submit another <tt>ListResolverRuleAssociation</tt> request to get the
--   next group of rule associations. In the next request, specify the
--   value of <tt>NextToken</tt> from the previous response.
listResolverRuleAssociations_nextToken :: Lens' ListResolverRuleAssociations (Maybe Text)

-- | The maximum number of rule associations that you want to return in the
--   response to a <tt>ListResolverRuleAssociations</tt> request. If you
--   don't specify a value for <tt>MaxResults</tt>, Resolver returns up to
--   100 rule associations.
listResolverRuleAssociations_maxResults :: Lens' ListResolverRuleAssociations (Maybe Natural)

-- | <i>See:</i> <a>newListResolverRuleAssociationsResponse</a> smart
--   constructor.
data ListResolverRuleAssociationsResponse
ListResolverRuleAssociationsResponse' :: Maybe [ResolverRuleAssociation] -> Maybe Text -> Maybe Natural -> Int -> ListResolverRuleAssociationsResponse

-- | The associations that were created between Resolver rules and VPCs
--   using the current Amazon Web Services account, and that match the
--   specified filters, if any.
[$sel:resolverRuleAssociations:ListResolverRuleAssociationsResponse'] :: ListResolverRuleAssociationsResponse -> Maybe [ResolverRuleAssociation]

-- | If more than <tt>MaxResults</tt> rule associations match the specified
--   criteria, you can submit another <tt>ListResolverRuleAssociation</tt>
--   request to get the next group of results. In the next request, specify
--   the value of <tt>NextToken</tt> from the previous response.
[$sel:nextToken:ListResolverRuleAssociationsResponse'] :: ListResolverRuleAssociationsResponse -> Maybe Text

-- | The value that you specified for <tt>MaxResults</tt> in the request.
[$sel:maxResults:ListResolverRuleAssociationsResponse'] :: ListResolverRuleAssociationsResponse -> Maybe Natural

-- | The response's http status code.
[$sel:httpStatus:ListResolverRuleAssociationsResponse'] :: ListResolverRuleAssociationsResponse -> Int

-- | Create a value of <a>ListResolverRuleAssociationsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:resolverRuleAssociations:ListResolverRuleAssociationsResponse'</a>,
--   <a>listResolverRuleAssociationsResponse_resolverRuleAssociations</a> -
--   The associations that were created between Resolver rules and VPCs
--   using the current Amazon Web Services account, and that match the
--   specified filters, if any.
--   
--   <a>$sel:nextToken:ListResolverRuleAssociations'</a>,
--   <a>listResolverRuleAssociationsResponse_nextToken</a> - If more than
--   <tt>MaxResults</tt> rule associations match the specified criteria,
--   you can submit another <tt>ListResolverRuleAssociation</tt> request to
--   get the next group of results. In the next request, specify the value
--   of <tt>NextToken</tt> from the previous response.
--   
--   <a>$sel:maxResults:ListResolverRuleAssociations'</a>,
--   <a>listResolverRuleAssociationsResponse_maxResults</a> - The value
--   that you specified for <tt>MaxResults</tt> in the request.
--   
--   <a>$sel:httpStatus:ListResolverRuleAssociationsResponse'</a>,
--   <a>listResolverRuleAssociationsResponse_httpStatus</a> - The
--   response's http status code.
newListResolverRuleAssociationsResponse :: Int -> ListResolverRuleAssociationsResponse

-- | The associations that were created between Resolver rules and VPCs
--   using the current Amazon Web Services account, and that match the
--   specified filters, if any.
listResolverRuleAssociationsResponse_resolverRuleAssociations :: Lens' ListResolverRuleAssociationsResponse (Maybe [ResolverRuleAssociation])

-- | If more than <tt>MaxResults</tt> rule associations match the specified
--   criteria, you can submit another <tt>ListResolverRuleAssociation</tt>
--   request to get the next group of results. In the next request, specify
--   the value of <tt>NextToken</tt> from the previous response.
listResolverRuleAssociationsResponse_nextToken :: Lens' ListResolverRuleAssociationsResponse (Maybe Text)

-- | The value that you specified for <tt>MaxResults</tt> in the request.
listResolverRuleAssociationsResponse_maxResults :: Lens' ListResolverRuleAssociationsResponse (Maybe Natural)

-- | The response's http status code.
listResolverRuleAssociationsResponse_httpStatus :: Lens' ListResolverRuleAssociationsResponse Int
instance GHC.Generics.Generic Network.AWS.Route53Resolver.ListResolverRuleAssociations.ListResolverRuleAssociations
instance GHC.Show.Show Network.AWS.Route53Resolver.ListResolverRuleAssociations.ListResolverRuleAssociations
instance GHC.Read.Read Network.AWS.Route53Resolver.ListResolverRuleAssociations.ListResolverRuleAssociations
instance GHC.Classes.Eq Network.AWS.Route53Resolver.ListResolverRuleAssociations.ListResolverRuleAssociations
instance GHC.Generics.Generic Network.AWS.Route53Resolver.ListResolverRuleAssociations.ListResolverRuleAssociationsResponse
instance GHC.Show.Show Network.AWS.Route53Resolver.ListResolverRuleAssociations.ListResolverRuleAssociationsResponse
instance GHC.Read.Read Network.AWS.Route53Resolver.ListResolverRuleAssociations.ListResolverRuleAssociationsResponse
instance GHC.Classes.Eq Network.AWS.Route53Resolver.ListResolverRuleAssociations.ListResolverRuleAssociationsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53Resolver.ListResolverRuleAssociations.ListResolverRuleAssociations
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.ListResolverRuleAssociations.ListResolverRuleAssociationsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.Route53Resolver.ListResolverRuleAssociations.ListResolverRuleAssociations
instance Data.Hashable.Class.Hashable Network.AWS.Route53Resolver.ListResolverRuleAssociations.ListResolverRuleAssociations
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.ListResolverRuleAssociations.ListResolverRuleAssociations
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53Resolver.ListResolverRuleAssociations.ListResolverRuleAssociations
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53Resolver.ListResolverRuleAssociations.ListResolverRuleAssociations
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53Resolver.ListResolverRuleAssociations.ListResolverRuleAssociations
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53Resolver.ListResolverRuleAssociations.ListResolverRuleAssociations


-- | Lists information about the specified query logging configurations.
--   Each configuration defines where you want Resolver to save DNS query
--   logs and specifies the VPCs that you want to log queries for.
--   
--   This operation returns paginated results.
module Network.AWS.Route53Resolver.ListResolverQueryLogConfigs

-- | <i>See:</i> <a>newListResolverQueryLogConfigs</a> smart constructor.
data ListResolverQueryLogConfigs
ListResolverQueryLogConfigs' :: Maybe [Filter] -> Maybe Text -> Maybe SortOrder -> Maybe Natural -> Maybe Text -> ListResolverQueryLogConfigs

-- | An optional specification to return a subset of query logging
--   configurations.
--   
--   If you submit a second or subsequent
--   <tt>ListResolverQueryLogConfigs</tt> request and specify the
--   <tt>NextToken</tt> parameter, you must use the same values for
--   <tt>Filters</tt>, if any, as in the previous request.
[$sel:filters:ListResolverQueryLogConfigs'] :: ListResolverQueryLogConfigs -> Maybe [Filter]

-- | For the first <tt>ListResolverQueryLogConfigs</tt> request, omit this
--   value.
--   
--   If there are more than <tt>MaxResults</tt> query logging
--   configurations that match the values that you specify for
--   <tt>Filters</tt>, you can submit another
--   <tt>ListResolverQueryLogConfigs</tt> request to get the next group of
--   configurations. In the next request, specify the value of
--   <tt>NextToken</tt> from the previous response.
[$sel:nextToken:ListResolverQueryLogConfigs'] :: ListResolverQueryLogConfigs -> Maybe Text

-- | If you specified a value for <tt>SortBy</tt>, the order that you want
--   query logging configurations to be listed in, <tt>ASCENDING</tt> or
--   <tt>DESCENDING</tt>.
--   
--   If you submit a second or subsequent
--   <tt>ListResolverQueryLogConfigs</tt> request and specify the
--   <tt>NextToken</tt> parameter, you must use the same value for
--   <tt>SortOrder</tt>, if any, as in the previous request.
[$sel:sortOrder:ListResolverQueryLogConfigs'] :: ListResolverQueryLogConfigs -> Maybe SortOrder

-- | The maximum number of query logging configurations that you want to
--   return in the response to a <tt>ListResolverQueryLogConfigs</tt>
--   request. If you don't specify a value for <tt>MaxResults</tt>,
--   Resolver returns up to 100 query logging configurations.
[$sel:maxResults:ListResolverQueryLogConfigs'] :: ListResolverQueryLogConfigs -> Maybe Natural

-- | The element that you want Resolver to sort query logging
--   configurations by.
--   
--   If you submit a second or subsequent
--   <tt>ListResolverQueryLogConfigs</tt> request and specify the
--   <tt>NextToken</tt> parameter, you must use the same value for
--   <tt>SortBy</tt>, if any, as in the previous request.
--   
--   Valid values include the following elements:
--   
--   <ul>
--   <li><tt>Arn</tt>: The ARN of the query logging configuration</li>
--   <li><tt>AssociationCount</tt>: The number of VPCs that are associated
--   with the specified configuration</li>
--   <li><tt>CreationTime</tt>: The date and time that Resolver returned
--   when the configuration was created</li>
--   <li><tt>CreatorRequestId</tt>: The value that was specified for
--   <tt>CreatorRequestId</tt> when the configuration was created</li>
--   <li><tt>DestinationArn</tt>: The location that logs are sent to</li>
--   <li><tt>Id</tt>: The ID of the configuration</li>
--   <li><tt>Name</tt>: The name of the configuration</li>
--   <li><tt>OwnerId</tt>: The Amazon Web Services account number of the
--   account that created the configuration</li>
--   <li><tt>ShareStatus</tt>: Whether the configuration is shared with
--   other Amazon Web Services accounts or shared with the current account
--   by another Amazon Web Services account. Sharing is configured through
--   Resource Access Manager (RAM).</li>
--   <li><tt>Status</tt>: The current status of the configuration. Valid
--   values include the following:<ul><li><tt>CREATING</tt>: Resolver is
--   creating the query logging configuration.</li><li><tt>CREATED</tt>:
--   The query logging configuration was successfully created. Resolver is
--   logging queries that originate in the specified
--   VPC.</li><li><tt>DELETING</tt>: Resolver is deleting this query
--   logging configuration.</li><li><tt>FAILED</tt>: Resolver either
--   couldn't create or couldn't delete the query logging configuration.
--   Here are two common causes:<ul><li>The specified destination (for
--   example, an Amazon S3 bucket) was deleted.</li><li>Permissions don't
--   allow sending logs to the destination.</li></ul></li></ul></li>
--   </ul>
[$sel:sortBy:ListResolverQueryLogConfigs'] :: ListResolverQueryLogConfigs -> Maybe Text

-- | Create a value of <a>ListResolverQueryLogConfigs</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:filters:ListResolverQueryLogConfigs'</a>,
--   <a>listResolverQueryLogConfigs_filters</a> - An optional specification
--   to return a subset of query logging configurations.
--   
--   If you submit a second or subsequent
--   <tt>ListResolverQueryLogConfigs</tt> request and specify the
--   <tt>NextToken</tt> parameter, you must use the same values for
--   <tt>Filters</tt>, if any, as in the previous request.
--   
--   <a>$sel:nextToken:ListResolverQueryLogConfigs'</a>,
--   <a>listResolverQueryLogConfigs_nextToken</a> - For the first
--   <tt>ListResolverQueryLogConfigs</tt> request, omit this value.
--   
--   If there are more than <tt>MaxResults</tt> query logging
--   configurations that match the values that you specify for
--   <tt>Filters</tt>, you can submit another
--   <tt>ListResolverQueryLogConfigs</tt> request to get the next group of
--   configurations. In the next request, specify the value of
--   <tt>NextToken</tt> from the previous response.
--   
--   <a>$sel:sortOrder:ListResolverQueryLogConfigs'</a>,
--   <a>listResolverQueryLogConfigs_sortOrder</a> - If you specified a
--   value for <tt>SortBy</tt>, the order that you want query logging
--   configurations to be listed in, <tt>ASCENDING</tt> or
--   <tt>DESCENDING</tt>.
--   
--   If you submit a second or subsequent
--   <tt>ListResolverQueryLogConfigs</tt> request and specify the
--   <tt>NextToken</tt> parameter, you must use the same value for
--   <tt>SortOrder</tt>, if any, as in the previous request.
--   
--   <a>$sel:maxResults:ListResolverQueryLogConfigs'</a>,
--   <a>listResolverQueryLogConfigs_maxResults</a> - The maximum number of
--   query logging configurations that you want to return in the response
--   to a <tt>ListResolverQueryLogConfigs</tt> request. If you don't
--   specify a value for <tt>MaxResults</tt>, Resolver returns up to 100
--   query logging configurations.
--   
--   <a>$sel:sortBy:ListResolverQueryLogConfigs'</a>,
--   <a>listResolverQueryLogConfigs_sortBy</a> - The element that you want
--   Resolver to sort query logging configurations by.
--   
--   If you submit a second or subsequent
--   <tt>ListResolverQueryLogConfigs</tt> request and specify the
--   <tt>NextToken</tt> parameter, you must use the same value for
--   <tt>SortBy</tt>, if any, as in the previous request.
--   
--   Valid values include the following elements:
--   
--   <ul>
--   <li><tt>Arn</tt>: The ARN of the query logging configuration</li>
--   <li><tt>AssociationCount</tt>: The number of VPCs that are associated
--   with the specified configuration</li>
--   <li><tt>CreationTime</tt>: The date and time that Resolver returned
--   when the configuration was created</li>
--   <li><tt>CreatorRequestId</tt>: The value that was specified for
--   <tt>CreatorRequestId</tt> when the configuration was created</li>
--   <li><tt>DestinationArn</tt>: The location that logs are sent to</li>
--   <li><tt>Id</tt>: The ID of the configuration</li>
--   <li><tt>Name</tt>: The name of the configuration</li>
--   <li><tt>OwnerId</tt>: The Amazon Web Services account number of the
--   account that created the configuration</li>
--   <li><tt>ShareStatus</tt>: Whether the configuration is shared with
--   other Amazon Web Services accounts or shared with the current account
--   by another Amazon Web Services account. Sharing is configured through
--   Resource Access Manager (RAM).</li>
--   <li><tt>Status</tt>: The current status of the configuration. Valid
--   values include the following:<ul><li><tt>CREATING</tt>: Resolver is
--   creating the query logging configuration.</li><li><tt>CREATED</tt>:
--   The query logging configuration was successfully created. Resolver is
--   logging queries that originate in the specified
--   VPC.</li><li><tt>DELETING</tt>: Resolver is deleting this query
--   logging configuration.</li><li><tt>FAILED</tt>: Resolver either
--   couldn't create or couldn't delete the query logging configuration.
--   Here are two common causes:<ul><li>The specified destination (for
--   example, an Amazon S3 bucket) was deleted.</li><li>Permissions don't
--   allow sending logs to the destination.</li></ul></li></ul></li>
--   </ul>
newListResolverQueryLogConfigs :: ListResolverQueryLogConfigs

-- | An optional specification to return a subset of query logging
--   configurations.
--   
--   If you submit a second or subsequent
--   <tt>ListResolverQueryLogConfigs</tt> request and specify the
--   <tt>NextToken</tt> parameter, you must use the same values for
--   <tt>Filters</tt>, if any, as in the previous request.
listResolverQueryLogConfigs_filters :: Lens' ListResolverQueryLogConfigs (Maybe [Filter])

-- | For the first <tt>ListResolverQueryLogConfigs</tt> request, omit this
--   value.
--   
--   If there are more than <tt>MaxResults</tt> query logging
--   configurations that match the values that you specify for
--   <tt>Filters</tt>, you can submit another
--   <tt>ListResolverQueryLogConfigs</tt> request to get the next group of
--   configurations. In the next request, specify the value of
--   <tt>NextToken</tt> from the previous response.
listResolverQueryLogConfigs_nextToken :: Lens' ListResolverQueryLogConfigs (Maybe Text)

-- | If you specified a value for <tt>SortBy</tt>, the order that you want
--   query logging configurations to be listed in, <tt>ASCENDING</tt> or
--   <tt>DESCENDING</tt>.
--   
--   If you submit a second or subsequent
--   <tt>ListResolverQueryLogConfigs</tt> request and specify the
--   <tt>NextToken</tt> parameter, you must use the same value for
--   <tt>SortOrder</tt>, if any, as in the previous request.
listResolverQueryLogConfigs_sortOrder :: Lens' ListResolverQueryLogConfigs (Maybe SortOrder)

-- | The maximum number of query logging configurations that you want to
--   return in the response to a <tt>ListResolverQueryLogConfigs</tt>
--   request. If you don't specify a value for <tt>MaxResults</tt>,
--   Resolver returns up to 100 query logging configurations.
listResolverQueryLogConfigs_maxResults :: Lens' ListResolverQueryLogConfigs (Maybe Natural)

-- | The element that you want Resolver to sort query logging
--   configurations by.
--   
--   If you submit a second or subsequent
--   <tt>ListResolverQueryLogConfigs</tt> request and specify the
--   <tt>NextToken</tt> parameter, you must use the same value for
--   <tt>SortBy</tt>, if any, as in the previous request.
--   
--   Valid values include the following elements:
--   
--   <ul>
--   <li><tt>Arn</tt>: The ARN of the query logging configuration</li>
--   <li><tt>AssociationCount</tt>: The number of VPCs that are associated
--   with the specified configuration</li>
--   <li><tt>CreationTime</tt>: The date and time that Resolver returned
--   when the configuration was created</li>
--   <li><tt>CreatorRequestId</tt>: The value that was specified for
--   <tt>CreatorRequestId</tt> when the configuration was created</li>
--   <li><tt>DestinationArn</tt>: The location that logs are sent to</li>
--   <li><tt>Id</tt>: The ID of the configuration</li>
--   <li><tt>Name</tt>: The name of the configuration</li>
--   <li><tt>OwnerId</tt>: The Amazon Web Services account number of the
--   account that created the configuration</li>
--   <li><tt>ShareStatus</tt>: Whether the configuration is shared with
--   other Amazon Web Services accounts or shared with the current account
--   by another Amazon Web Services account. Sharing is configured through
--   Resource Access Manager (RAM).</li>
--   <li><tt>Status</tt>: The current status of the configuration. Valid
--   values include the following:<ul><li><tt>CREATING</tt>: Resolver is
--   creating the query logging configuration.</li><li><tt>CREATED</tt>:
--   The query logging configuration was successfully created. Resolver is
--   logging queries that originate in the specified
--   VPC.</li><li><tt>DELETING</tt>: Resolver is deleting this query
--   logging configuration.</li><li><tt>FAILED</tt>: Resolver either
--   couldn't create or couldn't delete the query logging configuration.
--   Here are two common causes:<ul><li>The specified destination (for
--   example, an Amazon S3 bucket) was deleted.</li><li>Permissions don't
--   allow sending logs to the destination.</li></ul></li></ul></li>
--   </ul>
listResolverQueryLogConfigs_sortBy :: Lens' ListResolverQueryLogConfigs (Maybe Text)

-- | <i>See:</i> <a>newListResolverQueryLogConfigsResponse</a> smart
--   constructor.
data ListResolverQueryLogConfigsResponse
ListResolverQueryLogConfigsResponse' :: Maybe Int -> Maybe [ResolverQueryLogConfig] -> Maybe Text -> Maybe Int -> Int -> ListResolverQueryLogConfigsResponse

-- | The total number of query logging configurations that were created by
--   the current account in the specified Region and that match the filters
--   that were specified in the <tt>ListResolverQueryLogConfigs</tt>
--   request. For the total number of query logging configurations that
--   were created by the current account in the specified Region, see
--   <tt>TotalCount</tt>.
[$sel:totalFilteredCount:ListResolverQueryLogConfigsResponse'] :: ListResolverQueryLogConfigsResponse -> Maybe Int

-- | A list that contains one <tt>ResolverQueryLogConfig</tt> element for
--   each query logging configuration that matches the values that you
--   specified for <tt>Filter</tt>.
[$sel:resolverQueryLogConfigs:ListResolverQueryLogConfigsResponse'] :: ListResolverQueryLogConfigsResponse -> Maybe [ResolverQueryLogConfig]

-- | If there are more than <tt>MaxResults</tt> query logging
--   configurations, you can submit another
--   <tt>ListResolverQueryLogConfigs</tt> request to get the next group of
--   configurations. In the next request, specify the value of
--   <tt>NextToken</tt> from the previous response.
[$sel:nextToken:ListResolverQueryLogConfigsResponse'] :: ListResolverQueryLogConfigsResponse -> Maybe Text

-- | The total number of query logging configurations that were created by
--   the current account in the specified Region. This count can differ
--   from the number of query logging configurations that are returned in a
--   <tt>ListResolverQueryLogConfigs</tt> response, depending on the values
--   that you specify in the request.
[$sel:totalCount:ListResolverQueryLogConfigsResponse'] :: ListResolverQueryLogConfigsResponse -> Maybe Int

-- | The response's http status code.
[$sel:httpStatus:ListResolverQueryLogConfigsResponse'] :: ListResolverQueryLogConfigsResponse -> Int

-- | Create a value of <a>ListResolverQueryLogConfigsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:totalFilteredCount:ListResolverQueryLogConfigsResponse'</a>,
--   <a>listResolverQueryLogConfigsResponse_totalFilteredCount</a> - The
--   total number of query logging configurations that were created by the
--   current account in the specified Region and that match the filters
--   that were specified in the <tt>ListResolverQueryLogConfigs</tt>
--   request. For the total number of query logging configurations that
--   were created by the current account in the specified Region, see
--   <tt>TotalCount</tt>.
--   
--   
--   <a>$sel:resolverQueryLogConfigs:ListResolverQueryLogConfigsResponse'</a>,
--   <a>listResolverQueryLogConfigsResponse_resolverQueryLogConfigs</a> - A
--   list that contains one <tt>ResolverQueryLogConfig</tt> element for
--   each query logging configuration that matches the values that you
--   specified for <tt>Filter</tt>.
--   
--   <a>$sel:nextToken:ListResolverQueryLogConfigs'</a>,
--   <a>listResolverQueryLogConfigsResponse_nextToken</a> - If there are
--   more than <tt>MaxResults</tt> query logging configurations, you can
--   submit another <tt>ListResolverQueryLogConfigs</tt> request to get the
--   next group of configurations. In the next request, specify the value
--   of <tt>NextToken</tt> from the previous response.
--   
--   <a>$sel:totalCount:ListResolverQueryLogConfigsResponse'</a>,
--   <a>listResolverQueryLogConfigsResponse_totalCount</a> - The total
--   number of query logging configurations that were created by the
--   current account in the specified Region. This count can differ from
--   the number of query logging configurations that are returned in a
--   <tt>ListResolverQueryLogConfigs</tt> response, depending on the values
--   that you specify in the request.
--   
--   <a>$sel:httpStatus:ListResolverQueryLogConfigsResponse'</a>,
--   <a>listResolverQueryLogConfigsResponse_httpStatus</a> - The response's
--   http status code.
newListResolverQueryLogConfigsResponse :: Int -> ListResolverQueryLogConfigsResponse

-- | The total number of query logging configurations that were created by
--   the current account in the specified Region and that match the filters
--   that were specified in the <tt>ListResolverQueryLogConfigs</tt>
--   request. For the total number of query logging configurations that
--   were created by the current account in the specified Region, see
--   <tt>TotalCount</tt>.
listResolverQueryLogConfigsResponse_totalFilteredCount :: Lens' ListResolverQueryLogConfigsResponse (Maybe Int)

-- | A list that contains one <tt>ResolverQueryLogConfig</tt> element for
--   each query logging configuration that matches the values that you
--   specified for <tt>Filter</tt>.
listResolverQueryLogConfigsResponse_resolverQueryLogConfigs :: Lens' ListResolverQueryLogConfigsResponse (Maybe [ResolverQueryLogConfig])

-- | If there are more than <tt>MaxResults</tt> query logging
--   configurations, you can submit another
--   <tt>ListResolverQueryLogConfigs</tt> request to get the next group of
--   configurations. In the next request, specify the value of
--   <tt>NextToken</tt> from the previous response.
listResolverQueryLogConfigsResponse_nextToken :: Lens' ListResolverQueryLogConfigsResponse (Maybe Text)

-- | The total number of query logging configurations that were created by
--   the current account in the specified Region. This count can differ
--   from the number of query logging configurations that are returned in a
--   <tt>ListResolverQueryLogConfigs</tt> response, depending on the values
--   that you specify in the request.
listResolverQueryLogConfigsResponse_totalCount :: Lens' ListResolverQueryLogConfigsResponse (Maybe Int)

-- | The response's http status code.
listResolverQueryLogConfigsResponse_httpStatus :: Lens' ListResolverQueryLogConfigsResponse Int
instance GHC.Generics.Generic Network.AWS.Route53Resolver.ListResolverQueryLogConfigs.ListResolverQueryLogConfigs
instance GHC.Show.Show Network.AWS.Route53Resolver.ListResolverQueryLogConfigs.ListResolverQueryLogConfigs
instance GHC.Read.Read Network.AWS.Route53Resolver.ListResolverQueryLogConfigs.ListResolverQueryLogConfigs
instance GHC.Classes.Eq Network.AWS.Route53Resolver.ListResolverQueryLogConfigs.ListResolverQueryLogConfigs
instance GHC.Generics.Generic Network.AWS.Route53Resolver.ListResolverQueryLogConfigs.ListResolverQueryLogConfigsResponse
instance GHC.Show.Show Network.AWS.Route53Resolver.ListResolverQueryLogConfigs.ListResolverQueryLogConfigsResponse
instance GHC.Read.Read Network.AWS.Route53Resolver.ListResolverQueryLogConfigs.ListResolverQueryLogConfigsResponse
instance GHC.Classes.Eq Network.AWS.Route53Resolver.ListResolverQueryLogConfigs.ListResolverQueryLogConfigsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53Resolver.ListResolverQueryLogConfigs.ListResolverQueryLogConfigs
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.ListResolverQueryLogConfigs.ListResolverQueryLogConfigsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.Route53Resolver.ListResolverQueryLogConfigs.ListResolverQueryLogConfigs
instance Data.Hashable.Class.Hashable Network.AWS.Route53Resolver.ListResolverQueryLogConfigs.ListResolverQueryLogConfigs
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.ListResolverQueryLogConfigs.ListResolverQueryLogConfigs
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53Resolver.ListResolverQueryLogConfigs.ListResolverQueryLogConfigs
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53Resolver.ListResolverQueryLogConfigs.ListResolverQueryLogConfigs
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53Resolver.ListResolverQueryLogConfigs.ListResolverQueryLogConfigs
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53Resolver.ListResolverQueryLogConfigs.ListResolverQueryLogConfigs


-- | Lists information about associations between Amazon VPCs and query
--   logging configurations.
--   
--   This operation returns paginated results.
module Network.AWS.Route53Resolver.ListResolverQueryLogConfigAssociations

-- | <i>See:</i> <a>newListResolverQueryLogConfigAssociations</a> smart
--   constructor.
data ListResolverQueryLogConfigAssociations
ListResolverQueryLogConfigAssociations' :: Maybe [Filter] -> Maybe Text -> Maybe SortOrder -> Maybe Natural -> Maybe Text -> ListResolverQueryLogConfigAssociations

-- | An optional specification to return a subset of query logging
--   associations.
--   
--   If you submit a second or subsequent
--   <tt>ListResolverQueryLogConfigAssociations</tt> request and specify
--   the <tt>NextToken</tt> parameter, you must use the same values for
--   <tt>Filters</tt>, if any, as in the previous request.
[$sel:filters:ListResolverQueryLogConfigAssociations'] :: ListResolverQueryLogConfigAssociations -> Maybe [Filter]

-- | For the first <tt>ListResolverQueryLogConfigAssociations</tt> request,
--   omit this value.
--   
--   If there are more than <tt>MaxResults</tt> query logging associations
--   that match the values that you specify for <tt>Filters</tt>, you can
--   submit another <tt>ListResolverQueryLogConfigAssociations</tt> request
--   to get the next group of associations. In the next request, specify
--   the value of <tt>NextToken</tt> from the previous response.
[$sel:nextToken:ListResolverQueryLogConfigAssociations'] :: ListResolverQueryLogConfigAssociations -> Maybe Text

-- | If you specified a value for <tt>SortBy</tt>, the order that you want
--   query logging associations to be listed in, <tt>ASCENDING</tt> or
--   <tt>DESCENDING</tt>.
--   
--   If you submit a second or subsequent
--   <tt>ListResolverQueryLogConfigAssociations</tt> request and specify
--   the <tt>NextToken</tt> parameter, you must use the same value for
--   <tt>SortOrder</tt>, if any, as in the previous request.
[$sel:sortOrder:ListResolverQueryLogConfigAssociations'] :: ListResolverQueryLogConfigAssociations -> Maybe SortOrder

-- | The maximum number of query logging associations that you want to
--   return in the response to a
--   <tt>ListResolverQueryLogConfigAssociations</tt> request. If you don't
--   specify a value for <tt>MaxResults</tt>, Resolver returns up to 100
--   query logging associations.
[$sel:maxResults:ListResolverQueryLogConfigAssociations'] :: ListResolverQueryLogConfigAssociations -> Maybe Natural

-- | The element that you want Resolver to sort query logging associations
--   by.
--   
--   If you submit a second or subsequent
--   <tt>ListResolverQueryLogConfigAssociations</tt> request and specify
--   the <tt>NextToken</tt> parameter, you must use the same value for
--   <tt>SortBy</tt>, if any, as in the previous request.
--   
--   Valid values include the following elements:
--   
--   <ul>
--   <li><tt>CreationTime</tt>: The ID of the query logging
--   association.</li>
--   <li><tt>Error</tt>: If the value of <tt>Status</tt> is
--   <tt>FAILED</tt>, the value of <tt>Error</tt> indicates the
--   cause:<ul><li><tt>DESTINATION_NOT_FOUND</tt>: The specified
--   destination (for example, an Amazon S3 bucket) was
--   deleted.</li><li><tt>ACCESS_DENIED</tt>: Permissions don't allow
--   sending logs to the destination.</li></ul>If <tt>Status</tt> is a
--   value other than <tt>FAILED</tt>, <tt>ERROR</tt> is null.</li>
--   <li><tt>Id</tt>: The ID of the query logging association</li>
--   <li><tt>ResolverQueryLogConfigId</tt>: The ID of the query logging
--   configuration</li>
--   <li><tt>ResourceId</tt>: The ID of the VPC that is associated with the
--   query logging configuration</li>
--   <li><tt>Status</tt>: The current status of the configuration. Valid
--   values include the following:<ul><li><tt>CREATING</tt>: Resolver is
--   creating an association between an Amazon VPC and a query logging
--   configuration.</li><li><tt>CREATED</tt>: The association between an
--   Amazon VPC and a query logging configuration was successfully created.
--   Resolver is logging queries that originate in the specified
--   VPC.</li><li><tt>DELETING</tt>: Resolver is deleting this query
--   logging association.</li><li><tt>FAILED</tt>: Resolver either couldn't
--   create or couldn't delete the query logging association. Here are two
--   common causes:<ul><li>The specified destination (for example, an
--   Amazon S3 bucket) was deleted.</li><li>Permissions don't allow sending
--   logs to the destination.</li></ul></li></ul></li>
--   </ul>
[$sel:sortBy:ListResolverQueryLogConfigAssociations'] :: ListResolverQueryLogConfigAssociations -> Maybe Text

-- | Create a value of <a>ListResolverQueryLogConfigAssociations</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:filters:ListResolverQueryLogConfigAssociations'</a>,
--   <a>listResolverQueryLogConfigAssociations_filters</a> - An optional
--   specification to return a subset of query logging associations.
--   
--   If you submit a second or subsequent
--   <tt>ListResolverQueryLogConfigAssociations</tt> request and specify
--   the <tt>NextToken</tt> parameter, you must use the same values for
--   <tt>Filters</tt>, if any, as in the previous request.
--   
--   <a>$sel:nextToken:ListResolverQueryLogConfigAssociations'</a>,
--   <a>listResolverQueryLogConfigAssociations_nextToken</a> - For the
--   first <tt>ListResolverQueryLogConfigAssociations</tt> request, omit
--   this value.
--   
--   If there are more than <tt>MaxResults</tt> query logging associations
--   that match the values that you specify for <tt>Filters</tt>, you can
--   submit another <tt>ListResolverQueryLogConfigAssociations</tt> request
--   to get the next group of associations. In the next request, specify
--   the value of <tt>NextToken</tt> from the previous response.
--   
--   <a>$sel:sortOrder:ListResolverQueryLogConfigAssociations'</a>,
--   <a>listResolverQueryLogConfigAssociations_sortOrder</a> - If you
--   specified a value for <tt>SortBy</tt>, the order that you want query
--   logging associations to be listed in, <tt>ASCENDING</tt> or
--   <tt>DESCENDING</tt>.
--   
--   If you submit a second or subsequent
--   <tt>ListResolverQueryLogConfigAssociations</tt> request and specify
--   the <tt>NextToken</tt> parameter, you must use the same value for
--   <tt>SortOrder</tt>, if any, as in the previous request.
--   
--   <a>$sel:maxResults:ListResolverQueryLogConfigAssociations'</a>,
--   <a>listResolverQueryLogConfigAssociations_maxResults</a> - The maximum
--   number of query logging associations that you want to return in the
--   response to a <tt>ListResolverQueryLogConfigAssociations</tt> request.
--   If you don't specify a value for <tt>MaxResults</tt>, Resolver returns
--   up to 100 query logging associations.
--   
--   <a>$sel:sortBy:ListResolverQueryLogConfigAssociations'</a>,
--   <a>listResolverQueryLogConfigAssociations_sortBy</a> - The element
--   that you want Resolver to sort query logging associations by.
--   
--   If you submit a second or subsequent
--   <tt>ListResolverQueryLogConfigAssociations</tt> request and specify
--   the <tt>NextToken</tt> parameter, you must use the same value for
--   <tt>SortBy</tt>, if any, as in the previous request.
--   
--   Valid values include the following elements:
--   
--   <ul>
--   <li><tt>CreationTime</tt>: The ID of the query logging
--   association.</li>
--   <li><tt>Error</tt>: If the value of <tt>Status</tt> is
--   <tt>FAILED</tt>, the value of <tt>Error</tt> indicates the
--   cause:<ul><li><tt>DESTINATION_NOT_FOUND</tt>: The specified
--   destination (for example, an Amazon S3 bucket) was
--   deleted.</li><li><tt>ACCESS_DENIED</tt>: Permissions don't allow
--   sending logs to the destination.</li></ul>If <tt>Status</tt> is a
--   value other than <tt>FAILED</tt>, <tt>ERROR</tt> is null.</li>
--   <li><tt>Id</tt>: The ID of the query logging association</li>
--   <li><tt>ResolverQueryLogConfigId</tt>: The ID of the query logging
--   configuration</li>
--   <li><tt>ResourceId</tt>: The ID of the VPC that is associated with the
--   query logging configuration</li>
--   <li><tt>Status</tt>: The current status of the configuration. Valid
--   values include the following:<ul><li><tt>CREATING</tt>: Resolver is
--   creating an association between an Amazon VPC and a query logging
--   configuration.</li><li><tt>CREATED</tt>: The association between an
--   Amazon VPC and a query logging configuration was successfully created.
--   Resolver is logging queries that originate in the specified
--   VPC.</li><li><tt>DELETING</tt>: Resolver is deleting this query
--   logging association.</li><li><tt>FAILED</tt>: Resolver either couldn't
--   create or couldn't delete the query logging association. Here are two
--   common causes:<ul><li>The specified destination (for example, an
--   Amazon S3 bucket) was deleted.</li><li>Permissions don't allow sending
--   logs to the destination.</li></ul></li></ul></li>
--   </ul>
newListResolverQueryLogConfigAssociations :: ListResolverQueryLogConfigAssociations

-- | An optional specification to return a subset of query logging
--   associations.
--   
--   If you submit a second or subsequent
--   <tt>ListResolverQueryLogConfigAssociations</tt> request and specify
--   the <tt>NextToken</tt> parameter, you must use the same values for
--   <tt>Filters</tt>, if any, as in the previous request.
listResolverQueryLogConfigAssociations_filters :: Lens' ListResolverQueryLogConfigAssociations (Maybe [Filter])

-- | For the first <tt>ListResolverQueryLogConfigAssociations</tt> request,
--   omit this value.
--   
--   If there are more than <tt>MaxResults</tt> query logging associations
--   that match the values that you specify for <tt>Filters</tt>, you can
--   submit another <tt>ListResolverQueryLogConfigAssociations</tt> request
--   to get the next group of associations. In the next request, specify
--   the value of <tt>NextToken</tt> from the previous response.
listResolverQueryLogConfigAssociations_nextToken :: Lens' ListResolverQueryLogConfigAssociations (Maybe Text)

-- | If you specified a value for <tt>SortBy</tt>, the order that you want
--   query logging associations to be listed in, <tt>ASCENDING</tt> or
--   <tt>DESCENDING</tt>.
--   
--   If you submit a second or subsequent
--   <tt>ListResolverQueryLogConfigAssociations</tt> request and specify
--   the <tt>NextToken</tt> parameter, you must use the same value for
--   <tt>SortOrder</tt>, if any, as in the previous request.
listResolverQueryLogConfigAssociations_sortOrder :: Lens' ListResolverQueryLogConfigAssociations (Maybe SortOrder)

-- | The maximum number of query logging associations that you want to
--   return in the response to a
--   <tt>ListResolverQueryLogConfigAssociations</tt> request. If you don't
--   specify a value for <tt>MaxResults</tt>, Resolver returns up to 100
--   query logging associations.
listResolverQueryLogConfigAssociations_maxResults :: Lens' ListResolverQueryLogConfigAssociations (Maybe Natural)

-- | The element that you want Resolver to sort query logging associations
--   by.
--   
--   If you submit a second or subsequent
--   <tt>ListResolverQueryLogConfigAssociations</tt> request and specify
--   the <tt>NextToken</tt> parameter, you must use the same value for
--   <tt>SortBy</tt>, if any, as in the previous request.
--   
--   Valid values include the following elements:
--   
--   <ul>
--   <li><tt>CreationTime</tt>: The ID of the query logging
--   association.</li>
--   <li><tt>Error</tt>: If the value of <tt>Status</tt> is
--   <tt>FAILED</tt>, the value of <tt>Error</tt> indicates the
--   cause:<ul><li><tt>DESTINATION_NOT_FOUND</tt>: The specified
--   destination (for example, an Amazon S3 bucket) was
--   deleted.</li><li><tt>ACCESS_DENIED</tt>: Permissions don't allow
--   sending logs to the destination.</li></ul>If <tt>Status</tt> is a
--   value other than <tt>FAILED</tt>, <tt>ERROR</tt> is null.</li>
--   <li><tt>Id</tt>: The ID of the query logging association</li>
--   <li><tt>ResolverQueryLogConfigId</tt>: The ID of the query logging
--   configuration</li>
--   <li><tt>ResourceId</tt>: The ID of the VPC that is associated with the
--   query logging configuration</li>
--   <li><tt>Status</tt>: The current status of the configuration. Valid
--   values include the following:<ul><li><tt>CREATING</tt>: Resolver is
--   creating an association between an Amazon VPC and a query logging
--   configuration.</li><li><tt>CREATED</tt>: The association between an
--   Amazon VPC and a query logging configuration was successfully created.
--   Resolver is logging queries that originate in the specified
--   VPC.</li><li><tt>DELETING</tt>: Resolver is deleting this query
--   logging association.</li><li><tt>FAILED</tt>: Resolver either couldn't
--   create or couldn't delete the query logging association. Here are two
--   common causes:<ul><li>The specified destination (for example, an
--   Amazon S3 bucket) was deleted.</li><li>Permissions don't allow sending
--   logs to the destination.</li></ul></li></ul></li>
--   </ul>
listResolverQueryLogConfigAssociations_sortBy :: Lens' ListResolverQueryLogConfigAssociations (Maybe Text)

-- | <i>See:</i> <a>newListResolverQueryLogConfigAssociationsResponse</a>
--   smart constructor.
data ListResolverQueryLogConfigAssociationsResponse
ListResolverQueryLogConfigAssociationsResponse' :: Maybe Int -> Maybe [ResolverQueryLogConfigAssociation] -> Maybe Text -> Maybe Int -> Int -> ListResolverQueryLogConfigAssociationsResponse

-- | The total number of query logging associations that were created by
--   the current account in the specified Region and that match the filters
--   that were specified in the
--   <tt>ListResolverQueryLogConfigAssociations</tt> request. For the total
--   number of associations that were created by the current account in the
--   specified Region, see <tt>TotalCount</tt>.
[$sel:totalFilteredCount:ListResolverQueryLogConfigAssociationsResponse'] :: ListResolverQueryLogConfigAssociationsResponse -> Maybe Int

-- | A list that contains one <tt>ResolverQueryLogConfigAssociations</tt>
--   element for each query logging association that matches the values
--   that you specified for <tt>Filter</tt>.
[$sel:resolverQueryLogConfigAssociations:ListResolverQueryLogConfigAssociationsResponse'] :: ListResolverQueryLogConfigAssociationsResponse -> Maybe [ResolverQueryLogConfigAssociation]

-- | If there are more than <tt>MaxResults</tt> query logging associations,
--   you can submit another <tt>ListResolverQueryLogConfigAssociations</tt>
--   request to get the next group of associations. In the next request,
--   specify the value of <tt>NextToken</tt> from the previous response.
[$sel:nextToken:ListResolverQueryLogConfigAssociationsResponse'] :: ListResolverQueryLogConfigAssociationsResponse -> Maybe Text

-- | The total number of query logging associations that were created by
--   the current account in the specified Region. This count can differ
--   from the number of associations that are returned in a
--   <tt>ListResolverQueryLogConfigAssociations</tt> response, depending on
--   the values that you specify in the request.
[$sel:totalCount:ListResolverQueryLogConfigAssociationsResponse'] :: ListResolverQueryLogConfigAssociationsResponse -> Maybe Int

-- | The response's http status code.
[$sel:httpStatus:ListResolverQueryLogConfigAssociationsResponse'] :: ListResolverQueryLogConfigAssociationsResponse -> Int

-- | Create a value of
--   <a>ListResolverQueryLogConfigAssociationsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:totalFilteredCount:ListResolverQueryLogConfigAssociationsResponse'</a>,
--   <a>listResolverQueryLogConfigAssociationsResponse_totalFilteredCount</a>
--   - The total number of query logging associations that were created by
--   the current account in the specified Region and that match the filters
--   that were specified in the
--   <tt>ListResolverQueryLogConfigAssociations</tt> request. For the total
--   number of associations that were created by the current account in the
--   specified Region, see <tt>TotalCount</tt>.
--   
--   
--   <a>$sel:resolverQueryLogConfigAssociations:ListResolverQueryLogConfigAssociationsResponse'</a>,
--   <a>listResolverQueryLogConfigAssociationsResponse_resolverQueryLogConfigAssociations</a>
--   - A list that contains one <tt>ResolverQueryLogConfigAssociations</tt>
--   element for each query logging association that matches the values
--   that you specified for <tt>Filter</tt>.
--   
--   <a>$sel:nextToken:ListResolverQueryLogConfigAssociations'</a>,
--   <a>listResolverQueryLogConfigAssociationsResponse_nextToken</a> - If
--   there are more than <tt>MaxResults</tt> query logging associations,
--   you can submit another <tt>ListResolverQueryLogConfigAssociations</tt>
--   request to get the next group of associations. In the next request,
--   specify the value of <tt>NextToken</tt> from the previous response.
--   
--   
--   <a>$sel:totalCount:ListResolverQueryLogConfigAssociationsResponse'</a>,
--   <a>listResolverQueryLogConfigAssociationsResponse_totalCount</a> - The
--   total number of query logging associations that were created by the
--   current account in the specified Region. This count can differ from
--   the number of associations that are returned in a
--   <tt>ListResolverQueryLogConfigAssociations</tt> response, depending on
--   the values that you specify in the request.
--   
--   
--   <a>$sel:httpStatus:ListResolverQueryLogConfigAssociationsResponse'</a>,
--   <a>listResolverQueryLogConfigAssociationsResponse_httpStatus</a> - The
--   response's http status code.
newListResolverQueryLogConfigAssociationsResponse :: Int -> ListResolverQueryLogConfigAssociationsResponse

-- | The total number of query logging associations that were created by
--   the current account in the specified Region and that match the filters
--   that were specified in the
--   <tt>ListResolverQueryLogConfigAssociations</tt> request. For the total
--   number of associations that were created by the current account in the
--   specified Region, see <tt>TotalCount</tt>.
listResolverQueryLogConfigAssociationsResponse_totalFilteredCount :: Lens' ListResolverQueryLogConfigAssociationsResponse (Maybe Int)

-- | A list that contains one <tt>ResolverQueryLogConfigAssociations</tt>
--   element for each query logging association that matches the values
--   that you specified for <tt>Filter</tt>.
listResolverQueryLogConfigAssociationsResponse_resolverQueryLogConfigAssociations :: Lens' ListResolverQueryLogConfigAssociationsResponse (Maybe [ResolverQueryLogConfigAssociation])

-- | If there are more than <tt>MaxResults</tt> query logging associations,
--   you can submit another <tt>ListResolverQueryLogConfigAssociations</tt>
--   request to get the next group of associations. In the next request,
--   specify the value of <tt>NextToken</tt> from the previous response.
listResolverQueryLogConfigAssociationsResponse_nextToken :: Lens' ListResolverQueryLogConfigAssociationsResponse (Maybe Text)

-- | The total number of query logging associations that were created by
--   the current account in the specified Region. This count can differ
--   from the number of associations that are returned in a
--   <tt>ListResolverQueryLogConfigAssociations</tt> response, depending on
--   the values that you specify in the request.
listResolverQueryLogConfigAssociationsResponse_totalCount :: Lens' ListResolverQueryLogConfigAssociationsResponse (Maybe Int)

-- | The response's http status code.
listResolverQueryLogConfigAssociationsResponse_httpStatus :: Lens' ListResolverQueryLogConfigAssociationsResponse Int
instance GHC.Generics.Generic Network.AWS.Route53Resolver.ListResolverQueryLogConfigAssociations.ListResolverQueryLogConfigAssociations
instance GHC.Show.Show Network.AWS.Route53Resolver.ListResolverQueryLogConfigAssociations.ListResolverQueryLogConfigAssociations
instance GHC.Read.Read Network.AWS.Route53Resolver.ListResolverQueryLogConfigAssociations.ListResolverQueryLogConfigAssociations
instance GHC.Classes.Eq Network.AWS.Route53Resolver.ListResolverQueryLogConfigAssociations.ListResolverQueryLogConfigAssociations
instance GHC.Generics.Generic Network.AWS.Route53Resolver.ListResolverQueryLogConfigAssociations.ListResolverQueryLogConfigAssociationsResponse
instance GHC.Show.Show Network.AWS.Route53Resolver.ListResolverQueryLogConfigAssociations.ListResolverQueryLogConfigAssociationsResponse
instance GHC.Read.Read Network.AWS.Route53Resolver.ListResolverQueryLogConfigAssociations.ListResolverQueryLogConfigAssociationsResponse
instance GHC.Classes.Eq Network.AWS.Route53Resolver.ListResolverQueryLogConfigAssociations.ListResolverQueryLogConfigAssociationsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53Resolver.ListResolverQueryLogConfigAssociations.ListResolverQueryLogConfigAssociations
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.ListResolverQueryLogConfigAssociations.ListResolverQueryLogConfigAssociationsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.Route53Resolver.ListResolverQueryLogConfigAssociations.ListResolverQueryLogConfigAssociations
instance Data.Hashable.Class.Hashable Network.AWS.Route53Resolver.ListResolverQueryLogConfigAssociations.ListResolverQueryLogConfigAssociations
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.ListResolverQueryLogConfigAssociations.ListResolverQueryLogConfigAssociations
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53Resolver.ListResolverQueryLogConfigAssociations.ListResolverQueryLogConfigAssociations
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53Resolver.ListResolverQueryLogConfigAssociations.ListResolverQueryLogConfigAssociations
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53Resolver.ListResolverQueryLogConfigAssociations.ListResolverQueryLogConfigAssociations
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53Resolver.ListResolverQueryLogConfigAssociations.ListResolverQueryLogConfigAssociations


-- | Lists all the Resolver endpoints that were created using the current
--   Amazon Web Services account.
--   
--   This operation returns paginated results.
module Network.AWS.Route53Resolver.ListResolverEndpoints

-- | <i>See:</i> <a>newListResolverEndpoints</a> smart constructor.
data ListResolverEndpoints
ListResolverEndpoints' :: Maybe [Filter] -> Maybe Text -> Maybe Natural -> ListResolverEndpoints

-- | An optional specification to return a subset of Resolver endpoints,
--   such as all inbound Resolver endpoints.
--   
--   If you submit a second or subsequent <tt>ListResolverEndpoints</tt>
--   request and specify the <tt>NextToken</tt> parameter, you must use the
--   same values for <tt>Filters</tt>, if any, as in the previous request.
[$sel:filters:ListResolverEndpoints'] :: ListResolverEndpoints -> Maybe [Filter]

-- | For the first <tt>ListResolverEndpoints</tt> request, omit this value.
--   
--   If you have more than <tt>MaxResults</tt> Resolver endpoints, you can
--   submit another <tt>ListResolverEndpoints</tt> request to get the next
--   group of Resolver endpoints. In the next request, specify the value of
--   <tt>NextToken</tt> from the previous response.
[$sel:nextToken:ListResolverEndpoints'] :: ListResolverEndpoints -> Maybe Text

-- | The maximum number of Resolver endpoints that you want to return in
--   the response to a <tt>ListResolverEndpoints</tt> request. If you don't
--   specify a value for <tt>MaxResults</tt>, Resolver returns up to 100
--   Resolver endpoints.
[$sel:maxResults:ListResolverEndpoints'] :: ListResolverEndpoints -> Maybe Natural

-- | Create a value of <a>ListResolverEndpoints</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:filters:ListResolverEndpoints'</a>,
--   <a>listResolverEndpoints_filters</a> - An optional specification to
--   return a subset of Resolver endpoints, such as all inbound Resolver
--   endpoints.
--   
--   If you submit a second or subsequent <tt>ListResolverEndpoints</tt>
--   request and specify the <tt>NextToken</tt> parameter, you must use the
--   same values for <tt>Filters</tt>, if any, as in the previous request.
--   
--   <a>$sel:nextToken:ListResolverEndpoints'</a>,
--   <a>listResolverEndpoints_nextToken</a> - For the first
--   <tt>ListResolverEndpoints</tt> request, omit this value.
--   
--   If you have more than <tt>MaxResults</tt> Resolver endpoints, you can
--   submit another <tt>ListResolverEndpoints</tt> request to get the next
--   group of Resolver endpoints. In the next request, specify the value of
--   <tt>NextToken</tt> from the previous response.
--   
--   <a>$sel:maxResults:ListResolverEndpoints'</a>,
--   <a>listResolverEndpoints_maxResults</a> - The maximum number of
--   Resolver endpoints that you want to return in the response to a
--   <tt>ListResolverEndpoints</tt> request. If you don't specify a value
--   for <tt>MaxResults</tt>, Resolver returns up to 100 Resolver
--   endpoints.
newListResolverEndpoints :: ListResolverEndpoints

-- | An optional specification to return a subset of Resolver endpoints,
--   such as all inbound Resolver endpoints.
--   
--   If you submit a second or subsequent <tt>ListResolverEndpoints</tt>
--   request and specify the <tt>NextToken</tt> parameter, you must use the
--   same values for <tt>Filters</tt>, if any, as in the previous request.
listResolverEndpoints_filters :: Lens' ListResolverEndpoints (Maybe [Filter])

-- | For the first <tt>ListResolverEndpoints</tt> request, omit this value.
--   
--   If you have more than <tt>MaxResults</tt> Resolver endpoints, you can
--   submit another <tt>ListResolverEndpoints</tt> request to get the next
--   group of Resolver endpoints. In the next request, specify the value of
--   <tt>NextToken</tt> from the previous response.
listResolverEndpoints_nextToken :: Lens' ListResolverEndpoints (Maybe Text)

-- | The maximum number of Resolver endpoints that you want to return in
--   the response to a <tt>ListResolverEndpoints</tt> request. If you don't
--   specify a value for <tt>MaxResults</tt>, Resolver returns up to 100
--   Resolver endpoints.
listResolverEndpoints_maxResults :: Lens' ListResolverEndpoints (Maybe Natural)

-- | <i>See:</i> <a>newListResolverEndpointsResponse</a> smart constructor.
data ListResolverEndpointsResponse
ListResolverEndpointsResponse' :: Maybe [ResolverEndpoint] -> Maybe Text -> Maybe Natural -> Int -> ListResolverEndpointsResponse

-- | The Resolver endpoints that were created by using the current Amazon
--   Web Services account, and that match the specified filters, if any.
[$sel:resolverEndpoints:ListResolverEndpointsResponse'] :: ListResolverEndpointsResponse -> Maybe [ResolverEndpoint]

-- | If more than <tt>MaxResults</tt> IP addresses match the specified
--   criteria, you can submit another <tt>ListResolverEndpoint</tt> request
--   to get the next group of results. In the next request, specify the
--   value of <tt>NextToken</tt> from the previous response.
[$sel:nextToken:ListResolverEndpointsResponse'] :: ListResolverEndpointsResponse -> Maybe Text

-- | The value that you specified for <tt>MaxResults</tt> in the request.
[$sel:maxResults:ListResolverEndpointsResponse'] :: ListResolverEndpointsResponse -> Maybe Natural

-- | The response's http status code.
[$sel:httpStatus:ListResolverEndpointsResponse'] :: ListResolverEndpointsResponse -> Int

-- | Create a value of <a>ListResolverEndpointsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resolverEndpoints:ListResolverEndpointsResponse'</a>,
--   <a>listResolverEndpointsResponse_resolverEndpoints</a> - The Resolver
--   endpoints that were created by using the current Amazon Web Services
--   account, and that match the specified filters, if any.
--   
--   <a>$sel:nextToken:ListResolverEndpoints'</a>,
--   <a>listResolverEndpointsResponse_nextToken</a> - If more than
--   <tt>MaxResults</tt> IP addresses match the specified criteria, you can
--   submit another <tt>ListResolverEndpoint</tt> request to get the next
--   group of results. In the next request, specify the value of
--   <tt>NextToken</tt> from the previous response.
--   
--   <a>$sel:maxResults:ListResolverEndpoints'</a>,
--   <a>listResolverEndpointsResponse_maxResults</a> - The value that you
--   specified for <tt>MaxResults</tt> in the request.
--   
--   <a>$sel:httpStatus:ListResolverEndpointsResponse'</a>,
--   <a>listResolverEndpointsResponse_httpStatus</a> - The response's http
--   status code.
newListResolverEndpointsResponse :: Int -> ListResolverEndpointsResponse

-- | The Resolver endpoints that were created by using the current Amazon
--   Web Services account, and that match the specified filters, if any.
listResolverEndpointsResponse_resolverEndpoints :: Lens' ListResolverEndpointsResponse (Maybe [ResolverEndpoint])

-- | If more than <tt>MaxResults</tt> IP addresses match the specified
--   criteria, you can submit another <tt>ListResolverEndpoint</tt> request
--   to get the next group of results. In the next request, specify the
--   value of <tt>NextToken</tt> from the previous response.
listResolverEndpointsResponse_nextToken :: Lens' ListResolverEndpointsResponse (Maybe Text)

-- | The value that you specified for <tt>MaxResults</tt> in the request.
listResolverEndpointsResponse_maxResults :: Lens' ListResolverEndpointsResponse (Maybe Natural)

-- | The response's http status code.
listResolverEndpointsResponse_httpStatus :: Lens' ListResolverEndpointsResponse Int
instance GHC.Generics.Generic Network.AWS.Route53Resolver.ListResolverEndpoints.ListResolverEndpoints
instance GHC.Show.Show Network.AWS.Route53Resolver.ListResolverEndpoints.ListResolverEndpoints
instance GHC.Read.Read Network.AWS.Route53Resolver.ListResolverEndpoints.ListResolverEndpoints
instance GHC.Classes.Eq Network.AWS.Route53Resolver.ListResolverEndpoints.ListResolverEndpoints
instance GHC.Generics.Generic Network.AWS.Route53Resolver.ListResolverEndpoints.ListResolverEndpointsResponse
instance GHC.Show.Show Network.AWS.Route53Resolver.ListResolverEndpoints.ListResolverEndpointsResponse
instance GHC.Read.Read Network.AWS.Route53Resolver.ListResolverEndpoints.ListResolverEndpointsResponse
instance GHC.Classes.Eq Network.AWS.Route53Resolver.ListResolverEndpoints.ListResolverEndpointsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53Resolver.ListResolverEndpoints.ListResolverEndpoints
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.ListResolverEndpoints.ListResolverEndpointsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.Route53Resolver.ListResolverEndpoints.ListResolverEndpoints
instance Data.Hashable.Class.Hashable Network.AWS.Route53Resolver.ListResolverEndpoints.ListResolverEndpoints
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.ListResolverEndpoints.ListResolverEndpoints
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53Resolver.ListResolverEndpoints.ListResolverEndpoints
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53Resolver.ListResolverEndpoints.ListResolverEndpoints
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53Resolver.ListResolverEndpoints.ListResolverEndpoints
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53Resolver.ListResolverEndpoints.ListResolverEndpoints


-- | Gets the IP addresses for a specified Resolver endpoint.
--   
--   This operation returns paginated results.
module Network.AWS.Route53Resolver.ListResolverEndpointIpAddresses

-- | <i>See:</i> <a>newListResolverEndpointIpAddresses</a> smart
--   constructor.
data ListResolverEndpointIpAddresses
ListResolverEndpointIpAddresses' :: Maybe Text -> Maybe Natural -> Text -> ListResolverEndpointIpAddresses

-- | For the first <tt>ListResolverEndpointIpAddresses</tt> request, omit
--   this value.
--   
--   If the specified Resolver endpoint has more than <tt>MaxResults</tt>
--   IP addresses, you can submit another
--   <tt>ListResolverEndpointIpAddresses</tt> request to get the next group
--   of IP addresses. In the next request, specify the value of
--   <tt>NextToken</tt> from the previous response.
[$sel:nextToken:ListResolverEndpointIpAddresses'] :: ListResolverEndpointIpAddresses -> Maybe Text

-- | The maximum number of IP addresses that you want to return in the
--   response to a <tt>ListResolverEndpointIpAddresses</tt> request. If you
--   don't specify a value for <tt>MaxResults</tt>, Resolver returns up to
--   100 IP addresses.
[$sel:maxResults:ListResolverEndpointIpAddresses'] :: ListResolverEndpointIpAddresses -> Maybe Natural

-- | The ID of the Resolver endpoint that you want to get IP addresses for.
[$sel:resolverEndpointId:ListResolverEndpointIpAddresses'] :: ListResolverEndpointIpAddresses -> Text

-- | Create a value of <a>ListResolverEndpointIpAddresses</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListResolverEndpointIpAddresses'</a>,
--   <a>listResolverEndpointIpAddresses_nextToken</a> - For the first
--   <tt>ListResolverEndpointIpAddresses</tt> request, omit this value.
--   
--   If the specified Resolver endpoint has more than <tt>MaxResults</tt>
--   IP addresses, you can submit another
--   <tt>ListResolverEndpointIpAddresses</tt> request to get the next group
--   of IP addresses. In the next request, specify the value of
--   <tt>NextToken</tt> from the previous response.
--   
--   <a>$sel:maxResults:ListResolverEndpointIpAddresses'</a>,
--   <a>listResolverEndpointIpAddresses_maxResults</a> - The maximum number
--   of IP addresses that you want to return in the response to a
--   <tt>ListResolverEndpointIpAddresses</tt> request. If you don't specify
--   a value for <tt>MaxResults</tt>, Resolver returns up to 100 IP
--   addresses.
--   
--   <a>$sel:resolverEndpointId:ListResolverEndpointIpAddresses'</a>,
--   <a>listResolverEndpointIpAddresses_resolverEndpointId</a> - The ID of
--   the Resolver endpoint that you want to get IP addresses for.
newListResolverEndpointIpAddresses :: Text -> ListResolverEndpointIpAddresses

-- | For the first <tt>ListResolverEndpointIpAddresses</tt> request, omit
--   this value.
--   
--   If the specified Resolver endpoint has more than <tt>MaxResults</tt>
--   IP addresses, you can submit another
--   <tt>ListResolverEndpointIpAddresses</tt> request to get the next group
--   of IP addresses. In the next request, specify the value of
--   <tt>NextToken</tt> from the previous response.
listResolverEndpointIpAddresses_nextToken :: Lens' ListResolverEndpointIpAddresses (Maybe Text)

-- | The maximum number of IP addresses that you want to return in the
--   response to a <tt>ListResolverEndpointIpAddresses</tt> request. If you
--   don't specify a value for <tt>MaxResults</tt>, Resolver returns up to
--   100 IP addresses.
listResolverEndpointIpAddresses_maxResults :: Lens' ListResolverEndpointIpAddresses (Maybe Natural)

-- | The ID of the Resolver endpoint that you want to get IP addresses for.
listResolverEndpointIpAddresses_resolverEndpointId :: Lens' ListResolverEndpointIpAddresses Text

-- | <i>See:</i> <a>newListResolverEndpointIpAddressesResponse</a> smart
--   constructor.
data ListResolverEndpointIpAddressesResponse
ListResolverEndpointIpAddressesResponse' :: Maybe Text -> Maybe Natural -> Maybe [IpAddressResponse] -> Int -> ListResolverEndpointIpAddressesResponse

-- | If the specified endpoint has more than <tt>MaxResults</tt> IP
--   addresses, you can submit another
--   <tt>ListResolverEndpointIpAddresses</tt> request to get the next group
--   of IP addresses. In the next request, specify the value of
--   <tt>NextToken</tt> from the previous response.
[$sel:nextToken:ListResolverEndpointIpAddressesResponse'] :: ListResolverEndpointIpAddressesResponse -> Maybe Text

-- | The value that you specified for <tt>MaxResults</tt> in the request.
[$sel:maxResults:ListResolverEndpointIpAddressesResponse'] :: ListResolverEndpointIpAddressesResponse -> Maybe Natural

-- | Information about the IP addresses in your VPC that DNS queries
--   originate from (for outbound endpoints) or that you forward DNS
--   queries to (for inbound endpoints).
[$sel:ipAddresses:ListResolverEndpointIpAddressesResponse'] :: ListResolverEndpointIpAddressesResponse -> Maybe [IpAddressResponse]

-- | The response's http status code.
[$sel:httpStatus:ListResolverEndpointIpAddressesResponse'] :: ListResolverEndpointIpAddressesResponse -> Int

-- | Create a value of <a>ListResolverEndpointIpAddressesResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListResolverEndpointIpAddresses'</a>,
--   <a>listResolverEndpointIpAddressesResponse_nextToken</a> - If the
--   specified endpoint has more than <tt>MaxResults</tt> IP addresses, you
--   can submit another <tt>ListResolverEndpointIpAddresses</tt> request to
--   get the next group of IP addresses. In the next request, specify the
--   value of <tt>NextToken</tt> from the previous response.
--   
--   <a>$sel:maxResults:ListResolverEndpointIpAddresses'</a>,
--   <a>listResolverEndpointIpAddressesResponse_maxResults</a> - The value
--   that you specified for <tt>MaxResults</tt> in the request.
--   
--   <a>$sel:ipAddresses:ListResolverEndpointIpAddressesResponse'</a>,
--   <a>listResolverEndpointIpAddressesResponse_ipAddresses</a> -
--   Information about the IP addresses in your VPC that DNS queries
--   originate from (for outbound endpoints) or that you forward DNS
--   queries to (for inbound endpoints).
--   
--   <a>$sel:httpStatus:ListResolverEndpointIpAddressesResponse'</a>,
--   <a>listResolverEndpointIpAddressesResponse_httpStatus</a> - The
--   response's http status code.
newListResolverEndpointIpAddressesResponse :: Int -> ListResolverEndpointIpAddressesResponse

-- | If the specified endpoint has more than <tt>MaxResults</tt> IP
--   addresses, you can submit another
--   <tt>ListResolverEndpointIpAddresses</tt> request to get the next group
--   of IP addresses. In the next request, specify the value of
--   <tt>NextToken</tt> from the previous response.
listResolverEndpointIpAddressesResponse_nextToken :: Lens' ListResolverEndpointIpAddressesResponse (Maybe Text)

-- | The value that you specified for <tt>MaxResults</tt> in the request.
listResolverEndpointIpAddressesResponse_maxResults :: Lens' ListResolverEndpointIpAddressesResponse (Maybe Natural)

-- | Information about the IP addresses in your VPC that DNS queries
--   originate from (for outbound endpoints) or that you forward DNS
--   queries to (for inbound endpoints).
listResolverEndpointIpAddressesResponse_ipAddresses :: Lens' ListResolverEndpointIpAddressesResponse (Maybe [IpAddressResponse])

-- | The response's http status code.
listResolverEndpointIpAddressesResponse_httpStatus :: Lens' ListResolverEndpointIpAddressesResponse Int
instance GHC.Generics.Generic Network.AWS.Route53Resolver.ListResolverEndpointIpAddresses.ListResolverEndpointIpAddresses
instance GHC.Show.Show Network.AWS.Route53Resolver.ListResolverEndpointIpAddresses.ListResolverEndpointIpAddresses
instance GHC.Read.Read Network.AWS.Route53Resolver.ListResolverEndpointIpAddresses.ListResolverEndpointIpAddresses
instance GHC.Classes.Eq Network.AWS.Route53Resolver.ListResolverEndpointIpAddresses.ListResolverEndpointIpAddresses
instance GHC.Generics.Generic Network.AWS.Route53Resolver.ListResolverEndpointIpAddresses.ListResolverEndpointIpAddressesResponse
instance GHC.Show.Show Network.AWS.Route53Resolver.ListResolverEndpointIpAddresses.ListResolverEndpointIpAddressesResponse
instance GHC.Read.Read Network.AWS.Route53Resolver.ListResolverEndpointIpAddresses.ListResolverEndpointIpAddressesResponse
instance GHC.Classes.Eq Network.AWS.Route53Resolver.ListResolverEndpointIpAddresses.ListResolverEndpointIpAddressesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53Resolver.ListResolverEndpointIpAddresses.ListResolverEndpointIpAddresses
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.ListResolverEndpointIpAddresses.ListResolverEndpointIpAddressesResponse
instance Network.AWS.Pager.AWSPager Network.AWS.Route53Resolver.ListResolverEndpointIpAddresses.ListResolverEndpointIpAddresses
instance Data.Hashable.Class.Hashable Network.AWS.Route53Resolver.ListResolverEndpointIpAddresses.ListResolverEndpointIpAddresses
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.ListResolverEndpointIpAddresses.ListResolverEndpointIpAddresses
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53Resolver.ListResolverEndpointIpAddresses.ListResolverEndpointIpAddresses
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53Resolver.ListResolverEndpointIpAddresses.ListResolverEndpointIpAddresses
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53Resolver.ListResolverEndpointIpAddresses.ListResolverEndpointIpAddresses
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53Resolver.ListResolverEndpointIpAddresses.ListResolverEndpointIpAddresses


-- | Lists the configurations for DNSSEC validation that are associated
--   with the current Amazon Web Services account.
--   
--   This operation returns paginated results.
module Network.AWS.Route53Resolver.ListResolverDnssecConfigs

-- | <i>See:</i> <a>newListResolverDnssecConfigs</a> smart constructor.
data ListResolverDnssecConfigs
ListResolverDnssecConfigs' :: Maybe [Filter] -> Maybe Text -> Maybe Natural -> ListResolverDnssecConfigs

-- | An optional specification to return a subset of objects.
[$sel:filters:ListResolverDnssecConfigs'] :: ListResolverDnssecConfigs -> Maybe [Filter]

-- | (Optional) If the current Amazon Web Services account has more than
--   <tt>MaxResults</tt> DNSSEC configurations, use <tt>NextToken</tt> to
--   get the second and subsequent pages of results.
--   
--   For the first <tt>ListResolverDnssecConfigs</tt> request, omit this
--   value.
--   
--   For the second and subsequent requests, get the value of
--   <tt>NextToken</tt> from the previous response and specify that value
--   for <tt>NextToken</tt> in the request.
[$sel:nextToken:ListResolverDnssecConfigs'] :: ListResolverDnssecConfigs -> Maybe Text

-- | <i>Optional</i>: An integer that specifies the maximum number of
--   DNSSEC configuration results that you want Amazon Route 53 to return.
--   If you don't specify a value for <tt>MaxResults</tt>, Route 53 returns
--   up to 100 configuration per page.
[$sel:maxResults:ListResolverDnssecConfigs'] :: ListResolverDnssecConfigs -> Maybe Natural

-- | Create a value of <a>ListResolverDnssecConfigs</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:filters:ListResolverDnssecConfigs'</a>,
--   <a>listResolverDnssecConfigs_filters</a> - An optional specification
--   to return a subset of objects.
--   
--   <a>$sel:nextToken:ListResolverDnssecConfigs'</a>,
--   <a>listResolverDnssecConfigs_nextToken</a> - (Optional) If the current
--   Amazon Web Services account has more than <tt>MaxResults</tt> DNSSEC
--   configurations, use <tt>NextToken</tt> to get the second and
--   subsequent pages of results.
--   
--   For the first <tt>ListResolverDnssecConfigs</tt> request, omit this
--   value.
--   
--   For the second and subsequent requests, get the value of
--   <tt>NextToken</tt> from the previous response and specify that value
--   for <tt>NextToken</tt> in the request.
--   
--   <a>$sel:maxResults:ListResolverDnssecConfigs'</a>,
--   <a>listResolverDnssecConfigs_maxResults</a> - <i>Optional</i>: An
--   integer that specifies the maximum number of DNSSEC configuration
--   results that you want Amazon Route 53 to return. If you don't specify
--   a value for <tt>MaxResults</tt>, Route 53 returns up to 100
--   configuration per page.
newListResolverDnssecConfigs :: ListResolverDnssecConfigs

-- | An optional specification to return a subset of objects.
listResolverDnssecConfigs_filters :: Lens' ListResolverDnssecConfigs (Maybe [Filter])

-- | (Optional) If the current Amazon Web Services account has more than
--   <tt>MaxResults</tt> DNSSEC configurations, use <tt>NextToken</tt> to
--   get the second and subsequent pages of results.
--   
--   For the first <tt>ListResolverDnssecConfigs</tt> request, omit this
--   value.
--   
--   For the second and subsequent requests, get the value of
--   <tt>NextToken</tt> from the previous response and specify that value
--   for <tt>NextToken</tt> in the request.
listResolverDnssecConfigs_nextToken :: Lens' ListResolverDnssecConfigs (Maybe Text)

-- | <i>Optional</i>: An integer that specifies the maximum number of
--   DNSSEC configuration results that you want Amazon Route 53 to return.
--   If you don't specify a value for <tt>MaxResults</tt>, Route 53 returns
--   up to 100 configuration per page.
listResolverDnssecConfigs_maxResults :: Lens' ListResolverDnssecConfigs (Maybe Natural)

-- | <i>See:</i> <a>newListResolverDnssecConfigsResponse</a> smart
--   constructor.
data ListResolverDnssecConfigsResponse
ListResolverDnssecConfigsResponse' :: Maybe Text -> Maybe [ResolverDnssecConfig] -> Int -> ListResolverDnssecConfigsResponse

-- | If a response includes the last of the DNSSEC configurations that are
--   associated with the current Amazon Web Services account,
--   <tt>NextToken</tt> doesn't appear in the response.
--   
--   If a response doesn't include the last of the configurations, you can
--   get more configurations by submitting another
--   <a>ListResolverDnssecConfigs</a> request. Get the value of
--   <tt>NextToken</tt> that Amazon Route 53 returned in the previous
--   response and include it in <tt>NextToken</tt> in the next request.
[$sel:nextToken:ListResolverDnssecConfigsResponse'] :: ListResolverDnssecConfigsResponse -> Maybe Text

-- | An array that contains one <a>ResolverDnssecConfig</a> element for
--   each configuration for DNSSEC validation that is associated with the
--   current Amazon Web Services account.
[$sel:resolverDnssecConfigs:ListResolverDnssecConfigsResponse'] :: ListResolverDnssecConfigsResponse -> Maybe [ResolverDnssecConfig]

-- | The response's http status code.
[$sel:httpStatus:ListResolverDnssecConfigsResponse'] :: ListResolverDnssecConfigsResponse -> Int

-- | Create a value of <a>ListResolverDnssecConfigsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListResolverDnssecConfigs'</a>,
--   <a>listResolverDnssecConfigsResponse_nextToken</a> - If a response
--   includes the last of the DNSSEC configurations that are associated
--   with the current Amazon Web Services account, <tt>NextToken</tt>
--   doesn't appear in the response.
--   
--   If a response doesn't include the last of the configurations, you can
--   get more configurations by submitting another
--   <a>ListResolverDnssecConfigs</a> request. Get the value of
--   <tt>NextToken</tt> that Amazon Route 53 returned in the previous
--   response and include it in <tt>NextToken</tt> in the next request.
--   
--   <a>$sel:resolverDnssecConfigs:ListResolverDnssecConfigsResponse'</a>,
--   <a>listResolverDnssecConfigsResponse_resolverDnssecConfigs</a> - An
--   array that contains one <a>ResolverDnssecConfig</a> element for each
--   configuration for DNSSEC validation that is associated with the
--   current Amazon Web Services account.
--   
--   <a>$sel:httpStatus:ListResolverDnssecConfigsResponse'</a>,
--   <a>listResolverDnssecConfigsResponse_httpStatus</a> - The response's
--   http status code.
newListResolverDnssecConfigsResponse :: Int -> ListResolverDnssecConfigsResponse

-- | If a response includes the last of the DNSSEC configurations that are
--   associated with the current Amazon Web Services account,
--   <tt>NextToken</tt> doesn't appear in the response.
--   
--   If a response doesn't include the last of the configurations, you can
--   get more configurations by submitting another
--   <a>ListResolverDnssecConfigs</a> request. Get the value of
--   <tt>NextToken</tt> that Amazon Route 53 returned in the previous
--   response and include it in <tt>NextToken</tt> in the next request.
listResolverDnssecConfigsResponse_nextToken :: Lens' ListResolverDnssecConfigsResponse (Maybe Text)

-- | An array that contains one <a>ResolverDnssecConfig</a> element for
--   each configuration for DNSSEC validation that is associated with the
--   current Amazon Web Services account.
listResolverDnssecConfigsResponse_resolverDnssecConfigs :: Lens' ListResolverDnssecConfigsResponse (Maybe [ResolverDnssecConfig])

-- | The response's http status code.
listResolverDnssecConfigsResponse_httpStatus :: Lens' ListResolverDnssecConfigsResponse Int
instance GHC.Generics.Generic Network.AWS.Route53Resolver.ListResolverDnssecConfigs.ListResolverDnssecConfigs
instance GHC.Show.Show Network.AWS.Route53Resolver.ListResolverDnssecConfigs.ListResolverDnssecConfigs
instance GHC.Read.Read Network.AWS.Route53Resolver.ListResolverDnssecConfigs.ListResolverDnssecConfigs
instance GHC.Classes.Eq Network.AWS.Route53Resolver.ListResolverDnssecConfigs.ListResolverDnssecConfigs
instance GHC.Generics.Generic Network.AWS.Route53Resolver.ListResolverDnssecConfigs.ListResolverDnssecConfigsResponse
instance GHC.Show.Show Network.AWS.Route53Resolver.ListResolverDnssecConfigs.ListResolverDnssecConfigsResponse
instance GHC.Read.Read Network.AWS.Route53Resolver.ListResolverDnssecConfigs.ListResolverDnssecConfigsResponse
instance GHC.Classes.Eq Network.AWS.Route53Resolver.ListResolverDnssecConfigs.ListResolverDnssecConfigsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53Resolver.ListResolverDnssecConfigs.ListResolverDnssecConfigs
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.ListResolverDnssecConfigs.ListResolverDnssecConfigsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.Route53Resolver.ListResolverDnssecConfigs.ListResolverDnssecConfigs
instance Data.Hashable.Class.Hashable Network.AWS.Route53Resolver.ListResolverDnssecConfigs.ListResolverDnssecConfigs
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.ListResolverDnssecConfigs.ListResolverDnssecConfigs
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53Resolver.ListResolverDnssecConfigs.ListResolverDnssecConfigs
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53Resolver.ListResolverDnssecConfigs.ListResolverDnssecConfigs
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53Resolver.ListResolverDnssecConfigs.ListResolverDnssecConfigs
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53Resolver.ListResolverDnssecConfigs.ListResolverDnssecConfigs


-- | Retrieves the firewall rules that you have defined for the specified
--   firewall rule group. DNS Firewall uses the rules in a rule group to
--   filter DNS network traffic for a VPC.
--   
--   A single call might return only a partial list of the rules. For
--   information, see <tt>MaxResults</tt>.
--   
--   This operation returns paginated results.
module Network.AWS.Route53Resolver.ListFirewallRules

-- | <i>See:</i> <a>newListFirewallRules</a> smart constructor.
data ListFirewallRules
ListFirewallRules' :: Maybe Int -> Maybe Action -> Maybe Text -> Maybe Natural -> Text -> ListFirewallRules

-- | Optional additional filter for the rules to retrieve.
--   
--   The setting that determines the processing order of the rules in a
--   rule group. DNS Firewall processes the rules in a rule group by order
--   of priority, starting from the lowest setting.
[$sel:priority:ListFirewallRules'] :: ListFirewallRules -> Maybe Int

-- | Optional additional filter for the rules to retrieve.
--   
--   The action that DNS Firewall should take on a DNS query when it
--   matches one of the domains in the rule's domain list:
--   
--   <ul>
--   <li><tt>ALLOW</tt> - Permit the request to go through.</li>
--   <li><tt>ALERT</tt> - Permit the request to go through but send an
--   alert to the logs.</li>
--   <li><tt>BLOCK</tt> - Disallow the request. If this is specified,
--   additional handling details are provided in the rule's
--   <tt>BlockResponse</tt> setting.</li>
--   </ul>
[$sel:action:ListFirewallRules'] :: ListFirewallRules -> Maybe Action

-- | For the first call to this list request, omit this value.
--   
--   When you request a list of objects, Resolver returns at most the
--   number of objects specified in <tt>MaxResults</tt>. If more objects
--   are available for retrieval, Resolver returns a <tt>NextToken</tt>
--   value in the response. To retrieve the next batch of objects, use the
--   token that was returned for the prior request in your next request.
[$sel:nextToken:ListFirewallRules'] :: ListFirewallRules -> Maybe Text

-- | The maximum number of objects that you want Resolver to return for
--   this request. If more objects are available, in the response, Resolver
--   provides a <tt>NextToken</tt> value that you can use in a subsequent
--   call to get the next batch of objects.
--   
--   If you don't specify a value for <tt>MaxResults</tt>, Resolver returns
--   up to 100 objects.
[$sel:maxResults:ListFirewallRules'] :: ListFirewallRules -> Maybe Natural

-- | The unique identifier of the firewall rule group that you want to
--   retrieve the rules for.
[$sel:firewallRuleGroupId:ListFirewallRules'] :: ListFirewallRules -> Text

-- | Create a value of <a>ListFirewallRules</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:priority:ListFirewallRules'</a>,
--   <a>listFirewallRules_priority</a> - Optional additional filter for the
--   rules to retrieve.
--   
--   The setting that determines the processing order of the rules in a
--   rule group. DNS Firewall processes the rules in a rule group by order
--   of priority, starting from the lowest setting.
--   
--   <a>$sel:action:ListFirewallRules'</a>, <a>listFirewallRules_action</a>
--   - Optional additional filter for the rules to retrieve.
--   
--   The action that DNS Firewall should take on a DNS query when it
--   matches one of the domains in the rule's domain list:
--   
--   <ul>
--   <li><tt>ALLOW</tt> - Permit the request to go through.</li>
--   <li><tt>ALERT</tt> - Permit the request to go through but send an
--   alert to the logs.</li>
--   <li><tt>BLOCK</tt> - Disallow the request. If this is specified,
--   additional handling details are provided in the rule's
--   <tt>BlockResponse</tt> setting.</li>
--   </ul>
--   
--   <a>$sel:nextToken:ListFirewallRules'</a>,
--   <a>listFirewallRules_nextToken</a> - For the first call to this list
--   request, omit this value.
--   
--   When you request a list of objects, Resolver returns at most the
--   number of objects specified in <tt>MaxResults</tt>. If more objects
--   are available for retrieval, Resolver returns a <tt>NextToken</tt>
--   value in the response. To retrieve the next batch of objects, use the
--   token that was returned for the prior request in your next request.
--   
--   <a>$sel:maxResults:ListFirewallRules'</a>,
--   <a>listFirewallRules_maxResults</a> - The maximum number of objects
--   that you want Resolver to return for this request. If more objects are
--   available, in the response, Resolver provides a <tt>NextToken</tt>
--   value that you can use in a subsequent call to get the next batch of
--   objects.
--   
--   If you don't specify a value for <tt>MaxResults</tt>, Resolver returns
--   up to 100 objects.
--   
--   <a>$sel:firewallRuleGroupId:ListFirewallRules'</a>,
--   <a>listFirewallRules_firewallRuleGroupId</a> - The unique identifier
--   of the firewall rule group that you want to retrieve the rules for.
newListFirewallRules :: Text -> ListFirewallRules

-- | Optional additional filter for the rules to retrieve.
--   
--   The setting that determines the processing order of the rules in a
--   rule group. DNS Firewall processes the rules in a rule group by order
--   of priority, starting from the lowest setting.
listFirewallRules_priority :: Lens' ListFirewallRules (Maybe Int)

-- | Optional additional filter for the rules to retrieve.
--   
--   The action that DNS Firewall should take on a DNS query when it
--   matches one of the domains in the rule's domain list:
--   
--   <ul>
--   <li><tt>ALLOW</tt> - Permit the request to go through.</li>
--   <li><tt>ALERT</tt> - Permit the request to go through but send an
--   alert to the logs.</li>
--   <li><tt>BLOCK</tt> - Disallow the request. If this is specified,
--   additional handling details are provided in the rule's
--   <tt>BlockResponse</tt> setting.</li>
--   </ul>
listFirewallRules_action :: Lens' ListFirewallRules (Maybe Action)

-- | For the first call to this list request, omit this value.
--   
--   When you request a list of objects, Resolver returns at most the
--   number of objects specified in <tt>MaxResults</tt>. If more objects
--   are available for retrieval, Resolver returns a <tt>NextToken</tt>
--   value in the response. To retrieve the next batch of objects, use the
--   token that was returned for the prior request in your next request.
listFirewallRules_nextToken :: Lens' ListFirewallRules (Maybe Text)

-- | The maximum number of objects that you want Resolver to return for
--   this request. If more objects are available, in the response, Resolver
--   provides a <tt>NextToken</tt> value that you can use in a subsequent
--   call to get the next batch of objects.
--   
--   If you don't specify a value for <tt>MaxResults</tt>, Resolver returns
--   up to 100 objects.
listFirewallRules_maxResults :: Lens' ListFirewallRules (Maybe Natural)

-- | The unique identifier of the firewall rule group that you want to
--   retrieve the rules for.
listFirewallRules_firewallRuleGroupId :: Lens' ListFirewallRules Text

-- | <i>See:</i> <a>newListFirewallRulesResponse</a> smart constructor.
data ListFirewallRulesResponse
ListFirewallRulesResponse' :: Maybe [FirewallRule] -> Maybe Text -> Int -> ListFirewallRulesResponse

-- | A list of the rules that you have defined.
--   
--   This might be a partial list of the firewall rules that you've
--   defined. For information, see <tt>MaxResults</tt>.
[$sel:firewallRules:ListFirewallRulesResponse'] :: ListFirewallRulesResponse -> Maybe [FirewallRule]

-- | If objects are still available for retrieval, Resolver returns this
--   token in the response. To retrieve the next batch of objects, provide
--   this token in your next request.
[$sel:nextToken:ListFirewallRulesResponse'] :: ListFirewallRulesResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListFirewallRulesResponse'] :: ListFirewallRulesResponse -> Int

-- | Create a value of <a>ListFirewallRulesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:firewallRules:ListFirewallRulesResponse'</a>,
--   <a>listFirewallRulesResponse_firewallRules</a> - A list of the rules
--   that you have defined.
--   
--   This might be a partial list of the firewall rules that you've
--   defined. For information, see <tt>MaxResults</tt>.
--   
--   <a>$sel:nextToken:ListFirewallRules'</a>,
--   <a>listFirewallRulesResponse_nextToken</a> - If objects are still
--   available for retrieval, Resolver returns this token in the response.
--   To retrieve the next batch of objects, provide this token in your next
--   request.
--   
--   <a>$sel:httpStatus:ListFirewallRulesResponse'</a>,
--   <a>listFirewallRulesResponse_httpStatus</a> - The response's http
--   status code.
newListFirewallRulesResponse :: Int -> ListFirewallRulesResponse

-- | A list of the rules that you have defined.
--   
--   This might be a partial list of the firewall rules that you've
--   defined. For information, see <tt>MaxResults</tt>.
listFirewallRulesResponse_firewallRules :: Lens' ListFirewallRulesResponse (Maybe [FirewallRule])

-- | If objects are still available for retrieval, Resolver returns this
--   token in the response. To retrieve the next batch of objects, provide
--   this token in your next request.
listFirewallRulesResponse_nextToken :: Lens' ListFirewallRulesResponse (Maybe Text)

-- | The response's http status code.
listFirewallRulesResponse_httpStatus :: Lens' ListFirewallRulesResponse Int
instance GHC.Generics.Generic Network.AWS.Route53Resolver.ListFirewallRules.ListFirewallRules
instance GHC.Show.Show Network.AWS.Route53Resolver.ListFirewallRules.ListFirewallRules
instance GHC.Read.Read Network.AWS.Route53Resolver.ListFirewallRules.ListFirewallRules
instance GHC.Classes.Eq Network.AWS.Route53Resolver.ListFirewallRules.ListFirewallRules
instance GHC.Generics.Generic Network.AWS.Route53Resolver.ListFirewallRules.ListFirewallRulesResponse
instance GHC.Show.Show Network.AWS.Route53Resolver.ListFirewallRules.ListFirewallRulesResponse
instance GHC.Read.Read Network.AWS.Route53Resolver.ListFirewallRules.ListFirewallRulesResponse
instance GHC.Classes.Eq Network.AWS.Route53Resolver.ListFirewallRules.ListFirewallRulesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53Resolver.ListFirewallRules.ListFirewallRules
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.ListFirewallRules.ListFirewallRulesResponse
instance Network.AWS.Pager.AWSPager Network.AWS.Route53Resolver.ListFirewallRules.ListFirewallRules
instance Data.Hashable.Class.Hashable Network.AWS.Route53Resolver.ListFirewallRules.ListFirewallRules
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.ListFirewallRules.ListFirewallRules
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53Resolver.ListFirewallRules.ListFirewallRules
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53Resolver.ListFirewallRules.ListFirewallRules
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53Resolver.ListFirewallRules.ListFirewallRules
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53Resolver.ListFirewallRules.ListFirewallRules


-- | Retrieves the minimal high-level information for the rule groups that
--   you have defined.
--   
--   A single call might return only a partial list of the rule groups. For
--   information, see <tt>MaxResults</tt>.
--   
--   This operation returns paginated results.
module Network.AWS.Route53Resolver.ListFirewallRuleGroups

-- | <i>See:</i> <a>newListFirewallRuleGroups</a> smart constructor.
data ListFirewallRuleGroups
ListFirewallRuleGroups' :: Maybe Text -> Maybe Natural -> ListFirewallRuleGroups

-- | For the first call to this list request, omit this value.
--   
--   When you request a list of objects, Resolver returns at most the
--   number of objects specified in <tt>MaxResults</tt>. If more objects
--   are available for retrieval, Resolver returns a <tt>NextToken</tt>
--   value in the response. To retrieve the next batch of objects, use the
--   token that was returned for the prior request in your next request.
[$sel:nextToken:ListFirewallRuleGroups'] :: ListFirewallRuleGroups -> Maybe Text

-- | The maximum number of objects that you want Resolver to return for
--   this request. If more objects are available, in the response, Resolver
--   provides a <tt>NextToken</tt> value that you can use in a subsequent
--   call to get the next batch of objects.
--   
--   If you don't specify a value for <tt>MaxResults</tt>, Resolver returns
--   up to 100 objects.
[$sel:maxResults:ListFirewallRuleGroups'] :: ListFirewallRuleGroups -> Maybe Natural

-- | Create a value of <a>ListFirewallRuleGroups</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListFirewallRuleGroups'</a>,
--   <a>listFirewallRuleGroups_nextToken</a> - For the first call to this
--   list request, omit this value.
--   
--   When you request a list of objects, Resolver returns at most the
--   number of objects specified in <tt>MaxResults</tt>. If more objects
--   are available for retrieval, Resolver returns a <tt>NextToken</tt>
--   value in the response. To retrieve the next batch of objects, use the
--   token that was returned for the prior request in your next request.
--   
--   <a>$sel:maxResults:ListFirewallRuleGroups'</a>,
--   <a>listFirewallRuleGroups_maxResults</a> - The maximum number of
--   objects that you want Resolver to return for this request. If more
--   objects are available, in the response, Resolver provides a
--   <tt>NextToken</tt> value that you can use in a subsequent call to get
--   the next batch of objects.
--   
--   If you don't specify a value for <tt>MaxResults</tt>, Resolver returns
--   up to 100 objects.
newListFirewallRuleGroups :: ListFirewallRuleGroups

-- | For the first call to this list request, omit this value.
--   
--   When you request a list of objects, Resolver returns at most the
--   number of objects specified in <tt>MaxResults</tt>. If more objects
--   are available for retrieval, Resolver returns a <tt>NextToken</tt>
--   value in the response. To retrieve the next batch of objects, use the
--   token that was returned for the prior request in your next request.
listFirewallRuleGroups_nextToken :: Lens' ListFirewallRuleGroups (Maybe Text)

-- | The maximum number of objects that you want Resolver to return for
--   this request. If more objects are available, in the response, Resolver
--   provides a <tt>NextToken</tt> value that you can use in a subsequent
--   call to get the next batch of objects.
--   
--   If you don't specify a value for <tt>MaxResults</tt>, Resolver returns
--   up to 100 objects.
listFirewallRuleGroups_maxResults :: Lens' ListFirewallRuleGroups (Maybe Natural)

-- | <i>See:</i> <a>newListFirewallRuleGroupsResponse</a> smart
--   constructor.
data ListFirewallRuleGroupsResponse
ListFirewallRuleGroupsResponse' :: Maybe Text -> Maybe [FirewallRuleGroupMetadata] -> Int -> ListFirewallRuleGroupsResponse

-- | If objects are still available for retrieval, Resolver returns this
--   token in the response. To retrieve the next batch of objects, provide
--   this token in your next request.
[$sel:nextToken:ListFirewallRuleGroupsResponse'] :: ListFirewallRuleGroupsResponse -> Maybe Text

-- | A list of your firewall rule groups.
--   
--   This might be a partial list of the rule groups that you have defined.
--   For information, see <tt>MaxResults</tt>.
[$sel:firewallRuleGroups:ListFirewallRuleGroupsResponse'] :: ListFirewallRuleGroupsResponse -> Maybe [FirewallRuleGroupMetadata]

-- | The response's http status code.
[$sel:httpStatus:ListFirewallRuleGroupsResponse'] :: ListFirewallRuleGroupsResponse -> Int

-- | Create a value of <a>ListFirewallRuleGroupsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListFirewallRuleGroups'</a>,
--   <a>listFirewallRuleGroupsResponse_nextToken</a> - If objects are still
--   available for retrieval, Resolver returns this token in the response.
--   To retrieve the next batch of objects, provide this token in your next
--   request.
--   
--   <a>$sel:firewallRuleGroups:ListFirewallRuleGroupsResponse'</a>,
--   <a>listFirewallRuleGroupsResponse_firewallRuleGroups</a> - A list of
--   your firewall rule groups.
--   
--   This might be a partial list of the rule groups that you have defined.
--   For information, see <tt>MaxResults</tt>.
--   
--   <a>$sel:httpStatus:ListFirewallRuleGroupsResponse'</a>,
--   <a>listFirewallRuleGroupsResponse_httpStatus</a> - The response's http
--   status code.
newListFirewallRuleGroupsResponse :: Int -> ListFirewallRuleGroupsResponse

-- | If objects are still available for retrieval, Resolver returns this
--   token in the response. To retrieve the next batch of objects, provide
--   this token in your next request.
listFirewallRuleGroupsResponse_nextToken :: Lens' ListFirewallRuleGroupsResponse (Maybe Text)

-- | A list of your firewall rule groups.
--   
--   This might be a partial list of the rule groups that you have defined.
--   For information, see <tt>MaxResults</tt>.
listFirewallRuleGroupsResponse_firewallRuleGroups :: Lens' ListFirewallRuleGroupsResponse (Maybe [FirewallRuleGroupMetadata])

-- | The response's http status code.
listFirewallRuleGroupsResponse_httpStatus :: Lens' ListFirewallRuleGroupsResponse Int
instance GHC.Generics.Generic Network.AWS.Route53Resolver.ListFirewallRuleGroups.ListFirewallRuleGroups
instance GHC.Show.Show Network.AWS.Route53Resolver.ListFirewallRuleGroups.ListFirewallRuleGroups
instance GHC.Read.Read Network.AWS.Route53Resolver.ListFirewallRuleGroups.ListFirewallRuleGroups
instance GHC.Classes.Eq Network.AWS.Route53Resolver.ListFirewallRuleGroups.ListFirewallRuleGroups
instance GHC.Generics.Generic Network.AWS.Route53Resolver.ListFirewallRuleGroups.ListFirewallRuleGroupsResponse
instance GHC.Show.Show Network.AWS.Route53Resolver.ListFirewallRuleGroups.ListFirewallRuleGroupsResponse
instance GHC.Read.Read Network.AWS.Route53Resolver.ListFirewallRuleGroups.ListFirewallRuleGroupsResponse
instance GHC.Classes.Eq Network.AWS.Route53Resolver.ListFirewallRuleGroups.ListFirewallRuleGroupsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53Resolver.ListFirewallRuleGroups.ListFirewallRuleGroups
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.ListFirewallRuleGroups.ListFirewallRuleGroupsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.Route53Resolver.ListFirewallRuleGroups.ListFirewallRuleGroups
instance Data.Hashable.Class.Hashable Network.AWS.Route53Resolver.ListFirewallRuleGroups.ListFirewallRuleGroups
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.ListFirewallRuleGroups.ListFirewallRuleGroups
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53Resolver.ListFirewallRuleGroups.ListFirewallRuleGroups
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53Resolver.ListFirewallRuleGroups.ListFirewallRuleGroups
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53Resolver.ListFirewallRuleGroups.ListFirewallRuleGroups
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53Resolver.ListFirewallRuleGroups.ListFirewallRuleGroups


-- | Retrieves the firewall rule group associations that you have defined.
--   Each association enables DNS filtering for a VPC with one rule group.
--   
--   A single call might return only a partial list of the associations.
--   For information, see <tt>MaxResults</tt>.
--   
--   This operation returns paginated results.
module Network.AWS.Route53Resolver.ListFirewallRuleGroupAssociations

-- | <i>See:</i> <a>newListFirewallRuleGroupAssociations</a> smart
--   constructor.
data ListFirewallRuleGroupAssociations
ListFirewallRuleGroupAssociations' :: Maybe FirewallRuleGroupAssociationStatus -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe Natural -> ListFirewallRuleGroupAssociations

-- | The association <tt>Status</tt> setting that you want DNS Firewall to
--   filter on for the list. If you don't specify this, then DNS Firewall
--   returns all associations, regardless of status.
[$sel:status:ListFirewallRuleGroupAssociations'] :: ListFirewallRuleGroupAssociations -> Maybe FirewallRuleGroupAssociationStatus

-- | The unique identifier of the firewall rule group that you want to
--   retrieve the associations for. Leave this blank to retrieve
--   associations for any rule group.
[$sel:firewallRuleGroupId:ListFirewallRuleGroupAssociations'] :: ListFirewallRuleGroupAssociations -> Maybe Text

-- | The setting that determines the processing order of the rule group
--   among the rule groups that are associated with a single VPC. DNS
--   Firewall filters VPC traffic starting from the rule group with the
--   lowest numeric priority setting.
[$sel:priority:ListFirewallRuleGroupAssociations'] :: ListFirewallRuleGroupAssociations -> Maybe Int

-- | The unique identifier of the VPC that you want to retrieve the
--   associations for. Leave this blank to retrieve associations for any
--   VPC.
[$sel:vpcId:ListFirewallRuleGroupAssociations'] :: ListFirewallRuleGroupAssociations -> Maybe Text

-- | For the first call to this list request, omit this value.
--   
--   When you request a list of objects, Resolver returns at most the
--   number of objects specified in <tt>MaxResults</tt>. If more objects
--   are available for retrieval, Resolver returns a <tt>NextToken</tt>
--   value in the response. To retrieve the next batch of objects, use the
--   token that was returned for the prior request in your next request.
[$sel:nextToken:ListFirewallRuleGroupAssociations'] :: ListFirewallRuleGroupAssociations -> Maybe Text

-- | The maximum number of objects that you want Resolver to return for
--   this request. If more objects are available, in the response, Resolver
--   provides a <tt>NextToken</tt> value that you can use in a subsequent
--   call to get the next batch of objects.
--   
--   If you don't specify a value for <tt>MaxResults</tt>, Resolver returns
--   up to 100 objects.
[$sel:maxResults:ListFirewallRuleGroupAssociations'] :: ListFirewallRuleGroupAssociations -> Maybe Natural

-- | Create a value of <a>ListFirewallRuleGroupAssociations</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:ListFirewallRuleGroupAssociations'</a>,
--   <a>listFirewallRuleGroupAssociations_status</a> - The association
--   <tt>Status</tt> setting that you want DNS Firewall to filter on for
--   the list. If you don't specify this, then DNS Firewall returns all
--   associations, regardless of status.
--   
--   <a>$sel:firewallRuleGroupId:ListFirewallRuleGroupAssociations'</a>,
--   <a>listFirewallRuleGroupAssociations_firewallRuleGroupId</a> - The
--   unique identifier of the firewall rule group that you want to retrieve
--   the associations for. Leave this blank to retrieve associations for
--   any rule group.
--   
--   <a>$sel:priority:ListFirewallRuleGroupAssociations'</a>,
--   <a>listFirewallRuleGroupAssociations_priority</a> - The setting that
--   determines the processing order of the rule group among the rule
--   groups that are associated with a single VPC. DNS Firewall filters VPC
--   traffic starting from the rule group with the lowest numeric priority
--   setting.
--   
--   <a>$sel:vpcId:ListFirewallRuleGroupAssociations'</a>,
--   <a>listFirewallRuleGroupAssociations_vpcId</a> - The unique identifier
--   of the VPC that you want to retrieve the associations for. Leave this
--   blank to retrieve associations for any VPC.
--   
--   <a>$sel:nextToken:ListFirewallRuleGroupAssociations'</a>,
--   <a>listFirewallRuleGroupAssociations_nextToken</a> - For the first
--   call to this list request, omit this value.
--   
--   When you request a list of objects, Resolver returns at most the
--   number of objects specified in <tt>MaxResults</tt>. If more objects
--   are available for retrieval, Resolver returns a <tt>NextToken</tt>
--   value in the response. To retrieve the next batch of objects, use the
--   token that was returned for the prior request in your next request.
--   
--   <a>$sel:maxResults:ListFirewallRuleGroupAssociations'</a>,
--   <a>listFirewallRuleGroupAssociations_maxResults</a> - The maximum
--   number of objects that you want Resolver to return for this request.
--   If more objects are available, in the response, Resolver provides a
--   <tt>NextToken</tt> value that you can use in a subsequent call to get
--   the next batch of objects.
--   
--   If you don't specify a value for <tt>MaxResults</tt>, Resolver returns
--   up to 100 objects.
newListFirewallRuleGroupAssociations :: ListFirewallRuleGroupAssociations

-- | The association <tt>Status</tt> setting that you want DNS Firewall to
--   filter on for the list. If you don't specify this, then DNS Firewall
--   returns all associations, regardless of status.
listFirewallRuleGroupAssociations_status :: Lens' ListFirewallRuleGroupAssociations (Maybe FirewallRuleGroupAssociationStatus)

-- | The unique identifier of the firewall rule group that you want to
--   retrieve the associations for. Leave this blank to retrieve
--   associations for any rule group.
listFirewallRuleGroupAssociations_firewallRuleGroupId :: Lens' ListFirewallRuleGroupAssociations (Maybe Text)

-- | The setting that determines the processing order of the rule group
--   among the rule groups that are associated with a single VPC. DNS
--   Firewall filters VPC traffic starting from the rule group with the
--   lowest numeric priority setting.
listFirewallRuleGroupAssociations_priority :: Lens' ListFirewallRuleGroupAssociations (Maybe Int)

-- | The unique identifier of the VPC that you want to retrieve the
--   associations for. Leave this blank to retrieve associations for any
--   VPC.
listFirewallRuleGroupAssociations_vpcId :: Lens' ListFirewallRuleGroupAssociations (Maybe Text)

-- | For the first call to this list request, omit this value.
--   
--   When you request a list of objects, Resolver returns at most the
--   number of objects specified in <tt>MaxResults</tt>. If more objects
--   are available for retrieval, Resolver returns a <tt>NextToken</tt>
--   value in the response. To retrieve the next batch of objects, use the
--   token that was returned for the prior request in your next request.
listFirewallRuleGroupAssociations_nextToken :: Lens' ListFirewallRuleGroupAssociations (Maybe Text)

-- | The maximum number of objects that you want Resolver to return for
--   this request. If more objects are available, in the response, Resolver
--   provides a <tt>NextToken</tt> value that you can use in a subsequent
--   call to get the next batch of objects.
--   
--   If you don't specify a value for <tt>MaxResults</tt>, Resolver returns
--   up to 100 objects.
listFirewallRuleGroupAssociations_maxResults :: Lens' ListFirewallRuleGroupAssociations (Maybe Natural)

-- | <i>See:</i> <a>newListFirewallRuleGroupAssociationsResponse</a> smart
--   constructor.
data ListFirewallRuleGroupAssociationsResponse
ListFirewallRuleGroupAssociationsResponse' :: Maybe [FirewallRuleGroupAssociation] -> Maybe Text -> Int -> ListFirewallRuleGroupAssociationsResponse

-- | A list of your firewall rule group associations.
--   
--   This might be a partial list of the associations that you have
--   defined. For information, see <tt>MaxResults</tt>.
[$sel:firewallRuleGroupAssociations:ListFirewallRuleGroupAssociationsResponse'] :: ListFirewallRuleGroupAssociationsResponse -> Maybe [FirewallRuleGroupAssociation]

-- | If objects are still available for retrieval, Resolver returns this
--   token in the response. To retrieve the next batch of objects, provide
--   this token in your next request.
[$sel:nextToken:ListFirewallRuleGroupAssociationsResponse'] :: ListFirewallRuleGroupAssociationsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListFirewallRuleGroupAssociationsResponse'] :: ListFirewallRuleGroupAssociationsResponse -> Int

-- | Create a value of <a>ListFirewallRuleGroupAssociationsResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:firewallRuleGroupAssociations:ListFirewallRuleGroupAssociationsResponse'</a>,
--   <a>listFirewallRuleGroupAssociationsResponse_firewallRuleGroupAssociations</a>
--   - A list of your firewall rule group associations.
--   
--   This might be a partial list of the associations that you have
--   defined. For information, see <tt>MaxResults</tt>.
--   
--   <a>$sel:nextToken:ListFirewallRuleGroupAssociations'</a>,
--   <a>listFirewallRuleGroupAssociationsResponse_nextToken</a> - If
--   objects are still available for retrieval, Resolver returns this token
--   in the response. To retrieve the next batch of objects, provide this
--   token in your next request.
--   
--   <a>$sel:httpStatus:ListFirewallRuleGroupAssociationsResponse'</a>,
--   <a>listFirewallRuleGroupAssociationsResponse_httpStatus</a> - The
--   response's http status code.
newListFirewallRuleGroupAssociationsResponse :: Int -> ListFirewallRuleGroupAssociationsResponse

-- | A list of your firewall rule group associations.
--   
--   This might be a partial list of the associations that you have
--   defined. For information, see <tt>MaxResults</tt>.
listFirewallRuleGroupAssociationsResponse_firewallRuleGroupAssociations :: Lens' ListFirewallRuleGroupAssociationsResponse (Maybe [FirewallRuleGroupAssociation])

-- | If objects are still available for retrieval, Resolver returns this
--   token in the response. To retrieve the next batch of objects, provide
--   this token in your next request.
listFirewallRuleGroupAssociationsResponse_nextToken :: Lens' ListFirewallRuleGroupAssociationsResponse (Maybe Text)

-- | The response's http status code.
listFirewallRuleGroupAssociationsResponse_httpStatus :: Lens' ListFirewallRuleGroupAssociationsResponse Int
instance GHC.Generics.Generic Network.AWS.Route53Resolver.ListFirewallRuleGroupAssociations.ListFirewallRuleGroupAssociations
instance GHC.Show.Show Network.AWS.Route53Resolver.ListFirewallRuleGroupAssociations.ListFirewallRuleGroupAssociations
instance GHC.Read.Read Network.AWS.Route53Resolver.ListFirewallRuleGroupAssociations.ListFirewallRuleGroupAssociations
instance GHC.Classes.Eq Network.AWS.Route53Resolver.ListFirewallRuleGroupAssociations.ListFirewallRuleGroupAssociations
instance GHC.Generics.Generic Network.AWS.Route53Resolver.ListFirewallRuleGroupAssociations.ListFirewallRuleGroupAssociationsResponse
instance GHC.Show.Show Network.AWS.Route53Resolver.ListFirewallRuleGroupAssociations.ListFirewallRuleGroupAssociationsResponse
instance GHC.Read.Read Network.AWS.Route53Resolver.ListFirewallRuleGroupAssociations.ListFirewallRuleGroupAssociationsResponse
instance GHC.Classes.Eq Network.AWS.Route53Resolver.ListFirewallRuleGroupAssociations.ListFirewallRuleGroupAssociationsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53Resolver.ListFirewallRuleGroupAssociations.ListFirewallRuleGroupAssociations
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.ListFirewallRuleGroupAssociations.ListFirewallRuleGroupAssociationsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.Route53Resolver.ListFirewallRuleGroupAssociations.ListFirewallRuleGroupAssociations
instance Data.Hashable.Class.Hashable Network.AWS.Route53Resolver.ListFirewallRuleGroupAssociations.ListFirewallRuleGroupAssociations
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.ListFirewallRuleGroupAssociations.ListFirewallRuleGroupAssociations
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53Resolver.ListFirewallRuleGroupAssociations.ListFirewallRuleGroupAssociations
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53Resolver.ListFirewallRuleGroupAssociations.ListFirewallRuleGroupAssociations
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53Resolver.ListFirewallRuleGroupAssociations.ListFirewallRuleGroupAssociations
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53Resolver.ListFirewallRuleGroupAssociations.ListFirewallRuleGroupAssociations


-- | Retrieves the domains that you have defined for the specified firewall
--   domain list.
--   
--   A single call might return only a partial list of the domains. For
--   information, see <tt>MaxResults</tt>.
--   
--   This operation returns paginated results.
module Network.AWS.Route53Resolver.ListFirewallDomains

-- | <i>See:</i> <a>newListFirewallDomains</a> smart constructor.
data ListFirewallDomains
ListFirewallDomains' :: Maybe Text -> Maybe Natural -> Text -> ListFirewallDomains

-- | For the first call to this list request, omit this value.
--   
--   When you request a list of objects, Resolver returns at most the
--   number of objects specified in <tt>MaxResults</tt>. If more objects
--   are available for retrieval, Resolver returns a <tt>NextToken</tt>
--   value in the response. To retrieve the next batch of objects, use the
--   token that was returned for the prior request in your next request.
[$sel:nextToken:ListFirewallDomains'] :: ListFirewallDomains -> Maybe Text

-- | The maximum number of objects that you want Resolver to return for
--   this request. If more objects are available, in the response, Resolver
--   provides a <tt>NextToken</tt> value that you can use in a subsequent
--   call to get the next batch of objects.
--   
--   If you don't specify a value for <tt>MaxResults</tt>, Resolver returns
--   up to 100 objects.
[$sel:maxResults:ListFirewallDomains'] :: ListFirewallDomains -> Maybe Natural

-- | The ID of the domain list whose domains you want to retrieve.
[$sel:firewallDomainListId:ListFirewallDomains'] :: ListFirewallDomains -> Text

-- | Create a value of <a>ListFirewallDomains</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListFirewallDomains'</a>,
--   <a>listFirewallDomains_nextToken</a> - For the first call to this list
--   request, omit this value.
--   
--   When you request a list of objects, Resolver returns at most the
--   number of objects specified in <tt>MaxResults</tt>. If more objects
--   are available for retrieval, Resolver returns a <tt>NextToken</tt>
--   value in the response. To retrieve the next batch of objects, use the
--   token that was returned for the prior request in your next request.
--   
--   <a>$sel:maxResults:ListFirewallDomains'</a>,
--   <a>listFirewallDomains_maxResults</a> - The maximum number of objects
--   that you want Resolver to return for this request. If more objects are
--   available, in the response, Resolver provides a <tt>NextToken</tt>
--   value that you can use in a subsequent call to get the next batch of
--   objects.
--   
--   If you don't specify a value for <tt>MaxResults</tt>, Resolver returns
--   up to 100 objects.
--   
--   <a>$sel:firewallDomainListId:ListFirewallDomains'</a>,
--   <a>listFirewallDomains_firewallDomainListId</a> - The ID of the domain
--   list whose domains you want to retrieve.
newListFirewallDomains :: Text -> ListFirewallDomains

-- | For the first call to this list request, omit this value.
--   
--   When you request a list of objects, Resolver returns at most the
--   number of objects specified in <tt>MaxResults</tt>. If more objects
--   are available for retrieval, Resolver returns a <tt>NextToken</tt>
--   value in the response. To retrieve the next batch of objects, use the
--   token that was returned for the prior request in your next request.
listFirewallDomains_nextToken :: Lens' ListFirewallDomains (Maybe Text)

-- | The maximum number of objects that you want Resolver to return for
--   this request. If more objects are available, in the response, Resolver
--   provides a <tt>NextToken</tt> value that you can use in a subsequent
--   call to get the next batch of objects.
--   
--   If you don't specify a value for <tt>MaxResults</tt>, Resolver returns
--   up to 100 objects.
listFirewallDomains_maxResults :: Lens' ListFirewallDomains (Maybe Natural)

-- | The ID of the domain list whose domains you want to retrieve.
listFirewallDomains_firewallDomainListId :: Lens' ListFirewallDomains Text

-- | <i>See:</i> <a>newListFirewallDomainsResponse</a> smart constructor.
data ListFirewallDomainsResponse
ListFirewallDomainsResponse' :: Maybe Text -> Maybe [Text] -> Int -> ListFirewallDomainsResponse

-- | If objects are still available for retrieval, Resolver returns this
--   token in the response. To retrieve the next batch of objects, provide
--   this token in your next request.
[$sel:nextToken:ListFirewallDomainsResponse'] :: ListFirewallDomainsResponse -> Maybe Text

-- | A list of the domains in the firewall domain list.
--   
--   This might be a partial list of the domains that you've defined in the
--   domain list. For information, see <tt>MaxResults</tt>.
[$sel:domains:ListFirewallDomainsResponse'] :: ListFirewallDomainsResponse -> Maybe [Text]

-- | The response's http status code.
[$sel:httpStatus:ListFirewallDomainsResponse'] :: ListFirewallDomainsResponse -> Int

-- | Create a value of <a>ListFirewallDomainsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListFirewallDomains'</a>,
--   <a>listFirewallDomainsResponse_nextToken</a> - If objects are still
--   available for retrieval, Resolver returns this token in the response.
--   To retrieve the next batch of objects, provide this token in your next
--   request.
--   
--   <a>$sel:domains:ListFirewallDomainsResponse'</a>,
--   <a>listFirewallDomainsResponse_domains</a> - A list of the domains in
--   the firewall domain list.
--   
--   This might be a partial list of the domains that you've defined in the
--   domain list. For information, see <tt>MaxResults</tt>.
--   
--   <a>$sel:httpStatus:ListFirewallDomainsResponse'</a>,
--   <a>listFirewallDomainsResponse_httpStatus</a> - The response's http
--   status code.
newListFirewallDomainsResponse :: Int -> ListFirewallDomainsResponse

-- | If objects are still available for retrieval, Resolver returns this
--   token in the response. To retrieve the next batch of objects, provide
--   this token in your next request.
listFirewallDomainsResponse_nextToken :: Lens' ListFirewallDomainsResponse (Maybe Text)

-- | A list of the domains in the firewall domain list.
--   
--   This might be a partial list of the domains that you've defined in the
--   domain list. For information, see <tt>MaxResults</tt>.
listFirewallDomainsResponse_domains :: Lens' ListFirewallDomainsResponse (Maybe [Text])

-- | The response's http status code.
listFirewallDomainsResponse_httpStatus :: Lens' ListFirewallDomainsResponse Int
instance GHC.Generics.Generic Network.AWS.Route53Resolver.ListFirewallDomains.ListFirewallDomains
instance GHC.Show.Show Network.AWS.Route53Resolver.ListFirewallDomains.ListFirewallDomains
instance GHC.Read.Read Network.AWS.Route53Resolver.ListFirewallDomains.ListFirewallDomains
instance GHC.Classes.Eq Network.AWS.Route53Resolver.ListFirewallDomains.ListFirewallDomains
instance GHC.Generics.Generic Network.AWS.Route53Resolver.ListFirewallDomains.ListFirewallDomainsResponse
instance GHC.Show.Show Network.AWS.Route53Resolver.ListFirewallDomains.ListFirewallDomainsResponse
instance GHC.Read.Read Network.AWS.Route53Resolver.ListFirewallDomains.ListFirewallDomainsResponse
instance GHC.Classes.Eq Network.AWS.Route53Resolver.ListFirewallDomains.ListFirewallDomainsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53Resolver.ListFirewallDomains.ListFirewallDomains
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.ListFirewallDomains.ListFirewallDomainsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.Route53Resolver.ListFirewallDomains.ListFirewallDomains
instance Data.Hashable.Class.Hashable Network.AWS.Route53Resolver.ListFirewallDomains.ListFirewallDomains
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.ListFirewallDomains.ListFirewallDomains
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53Resolver.ListFirewallDomains.ListFirewallDomains
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53Resolver.ListFirewallDomains.ListFirewallDomains
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53Resolver.ListFirewallDomains.ListFirewallDomains
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53Resolver.ListFirewallDomains.ListFirewallDomains


-- | Retrieves the firewall domain lists that you have defined. For each
--   firewall domain list, you can retrieve the domains that are defined
--   for a list by calling ListFirewallDomains.
--   
--   A single call to this list operation might return only a partial list
--   of the domain lists. For information, see <tt>MaxResults</tt>.
--   
--   This operation returns paginated results.
module Network.AWS.Route53Resolver.ListFirewallDomainLists

-- | <i>See:</i> <a>newListFirewallDomainLists</a> smart constructor.
data ListFirewallDomainLists
ListFirewallDomainLists' :: Maybe Text -> Maybe Natural -> ListFirewallDomainLists

-- | For the first call to this list request, omit this value.
--   
--   When you request a list of objects, Resolver returns at most the
--   number of objects specified in <tt>MaxResults</tt>. If more objects
--   are available for retrieval, Resolver returns a <tt>NextToken</tt>
--   value in the response. To retrieve the next batch of objects, use the
--   token that was returned for the prior request in your next request.
[$sel:nextToken:ListFirewallDomainLists'] :: ListFirewallDomainLists -> Maybe Text

-- | The maximum number of objects that you want Resolver to return for
--   this request. If more objects are available, in the response, Resolver
--   provides a <tt>NextToken</tt> value that you can use in a subsequent
--   call to get the next batch of objects.
--   
--   If you don't specify a value for <tt>MaxResults</tt>, Resolver returns
--   up to 100 objects.
[$sel:maxResults:ListFirewallDomainLists'] :: ListFirewallDomainLists -> Maybe Natural

-- | Create a value of <a>ListFirewallDomainLists</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListFirewallDomainLists'</a>,
--   <a>listFirewallDomainLists_nextToken</a> - For the first call to this
--   list request, omit this value.
--   
--   When you request a list of objects, Resolver returns at most the
--   number of objects specified in <tt>MaxResults</tt>. If more objects
--   are available for retrieval, Resolver returns a <tt>NextToken</tt>
--   value in the response. To retrieve the next batch of objects, use the
--   token that was returned for the prior request in your next request.
--   
--   <a>$sel:maxResults:ListFirewallDomainLists'</a>,
--   <a>listFirewallDomainLists_maxResults</a> - The maximum number of
--   objects that you want Resolver to return for this request. If more
--   objects are available, in the response, Resolver provides a
--   <tt>NextToken</tt> value that you can use in a subsequent call to get
--   the next batch of objects.
--   
--   If you don't specify a value for <tt>MaxResults</tt>, Resolver returns
--   up to 100 objects.
newListFirewallDomainLists :: ListFirewallDomainLists

-- | For the first call to this list request, omit this value.
--   
--   When you request a list of objects, Resolver returns at most the
--   number of objects specified in <tt>MaxResults</tt>. If more objects
--   are available for retrieval, Resolver returns a <tt>NextToken</tt>
--   value in the response. To retrieve the next batch of objects, use the
--   token that was returned for the prior request in your next request.
listFirewallDomainLists_nextToken :: Lens' ListFirewallDomainLists (Maybe Text)

-- | The maximum number of objects that you want Resolver to return for
--   this request. If more objects are available, in the response, Resolver
--   provides a <tt>NextToken</tt> value that you can use in a subsequent
--   call to get the next batch of objects.
--   
--   If you don't specify a value for <tt>MaxResults</tt>, Resolver returns
--   up to 100 objects.
listFirewallDomainLists_maxResults :: Lens' ListFirewallDomainLists (Maybe Natural)

-- | <i>See:</i> <a>newListFirewallDomainListsResponse</a> smart
--   constructor.
data ListFirewallDomainListsResponse
ListFirewallDomainListsResponse' :: Maybe Text -> Maybe [FirewallDomainListMetadata] -> Int -> ListFirewallDomainListsResponse

-- | If objects are still available for retrieval, Resolver returns this
--   token in the response. To retrieve the next batch of objects, provide
--   this token in your next request.
[$sel:nextToken:ListFirewallDomainListsResponse'] :: ListFirewallDomainListsResponse -> Maybe Text

-- | A list of the domain lists that you have defined.
--   
--   This might be a partial list of the domain lists that you've defined.
--   For information, see <tt>MaxResults</tt>.
[$sel:firewallDomainLists:ListFirewallDomainListsResponse'] :: ListFirewallDomainListsResponse -> Maybe [FirewallDomainListMetadata]

-- | The response's http status code.
[$sel:httpStatus:ListFirewallDomainListsResponse'] :: ListFirewallDomainListsResponse -> Int

-- | Create a value of <a>ListFirewallDomainListsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListFirewallDomainLists'</a>,
--   <a>listFirewallDomainListsResponse_nextToken</a> - If objects are
--   still available for retrieval, Resolver returns this token in the
--   response. To retrieve the next batch of objects, provide this token in
--   your next request.
--   
--   <a>$sel:firewallDomainLists:ListFirewallDomainListsResponse'</a>,
--   <a>listFirewallDomainListsResponse_firewallDomainLists</a> - A list of
--   the domain lists that you have defined.
--   
--   This might be a partial list of the domain lists that you've defined.
--   For information, see <tt>MaxResults</tt>.
--   
--   <a>$sel:httpStatus:ListFirewallDomainListsResponse'</a>,
--   <a>listFirewallDomainListsResponse_httpStatus</a> - The response's
--   http status code.
newListFirewallDomainListsResponse :: Int -> ListFirewallDomainListsResponse

-- | If objects are still available for retrieval, Resolver returns this
--   token in the response. To retrieve the next batch of objects, provide
--   this token in your next request.
listFirewallDomainListsResponse_nextToken :: Lens' ListFirewallDomainListsResponse (Maybe Text)

-- | A list of the domain lists that you have defined.
--   
--   This might be a partial list of the domain lists that you've defined.
--   For information, see <tt>MaxResults</tt>.
listFirewallDomainListsResponse_firewallDomainLists :: Lens' ListFirewallDomainListsResponse (Maybe [FirewallDomainListMetadata])

-- | The response's http status code.
listFirewallDomainListsResponse_httpStatus :: Lens' ListFirewallDomainListsResponse Int
instance GHC.Generics.Generic Network.AWS.Route53Resolver.ListFirewallDomainLists.ListFirewallDomainLists
instance GHC.Show.Show Network.AWS.Route53Resolver.ListFirewallDomainLists.ListFirewallDomainLists
instance GHC.Read.Read Network.AWS.Route53Resolver.ListFirewallDomainLists.ListFirewallDomainLists
instance GHC.Classes.Eq Network.AWS.Route53Resolver.ListFirewallDomainLists.ListFirewallDomainLists
instance GHC.Generics.Generic Network.AWS.Route53Resolver.ListFirewallDomainLists.ListFirewallDomainListsResponse
instance GHC.Show.Show Network.AWS.Route53Resolver.ListFirewallDomainLists.ListFirewallDomainListsResponse
instance GHC.Read.Read Network.AWS.Route53Resolver.ListFirewallDomainLists.ListFirewallDomainListsResponse
instance GHC.Classes.Eq Network.AWS.Route53Resolver.ListFirewallDomainLists.ListFirewallDomainListsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53Resolver.ListFirewallDomainLists.ListFirewallDomainLists
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.ListFirewallDomainLists.ListFirewallDomainListsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.Route53Resolver.ListFirewallDomainLists.ListFirewallDomainLists
instance Data.Hashable.Class.Hashable Network.AWS.Route53Resolver.ListFirewallDomainLists.ListFirewallDomainLists
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.ListFirewallDomainLists.ListFirewallDomainLists
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53Resolver.ListFirewallDomainLists.ListFirewallDomainLists
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53Resolver.ListFirewallDomainLists.ListFirewallDomainLists
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53Resolver.ListFirewallDomainLists.ListFirewallDomainLists
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53Resolver.ListFirewallDomainLists.ListFirewallDomainLists


-- | Retrieves the firewall configurations that you have defined. DNS
--   Firewall uses the configurations to manage firewall behavior for your
--   VPCs.
--   
--   A single call might return only a partial list of the configurations.
--   For information, see <tt>MaxResults</tt>.
--   
--   This operation returns paginated results.
module Network.AWS.Route53Resolver.ListFirewallConfigs

-- | <i>See:</i> <a>newListFirewallConfigs</a> smart constructor.
data ListFirewallConfigs
ListFirewallConfigs' :: Maybe Text -> Maybe Natural -> ListFirewallConfigs

-- | For the first call to this list request, omit this value.
--   
--   When you request a list of objects, Resolver returns at most the
--   number of objects specified in <tt>MaxResults</tt>. If more objects
--   are available for retrieval, Resolver returns a <tt>NextToken</tt>
--   value in the response. To retrieve the next batch of objects, use the
--   token that was returned for the prior request in your next request.
[$sel:nextToken:ListFirewallConfigs'] :: ListFirewallConfigs -> Maybe Text

-- | The maximum number of objects that you want Resolver to return for
--   this request. If more objects are available, in the response, Resolver
--   provides a <tt>NextToken</tt> value that you can use in a subsequent
--   call to get the next batch of objects.
--   
--   If you don't specify a value for <tt>MaxResults</tt>, Resolver returns
--   up to 100 objects.
[$sel:maxResults:ListFirewallConfigs'] :: ListFirewallConfigs -> Maybe Natural

-- | Create a value of <a>ListFirewallConfigs</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListFirewallConfigs'</a>,
--   <a>listFirewallConfigs_nextToken</a> - For the first call to this list
--   request, omit this value.
--   
--   When you request a list of objects, Resolver returns at most the
--   number of objects specified in <tt>MaxResults</tt>. If more objects
--   are available for retrieval, Resolver returns a <tt>NextToken</tt>
--   value in the response. To retrieve the next batch of objects, use the
--   token that was returned for the prior request in your next request.
--   
--   <a>$sel:maxResults:ListFirewallConfigs'</a>,
--   <a>listFirewallConfigs_maxResults</a> - The maximum number of objects
--   that you want Resolver to return for this request. If more objects are
--   available, in the response, Resolver provides a <tt>NextToken</tt>
--   value that you can use in a subsequent call to get the next batch of
--   objects.
--   
--   If you don't specify a value for <tt>MaxResults</tt>, Resolver returns
--   up to 100 objects.
newListFirewallConfigs :: ListFirewallConfigs

-- | For the first call to this list request, omit this value.
--   
--   When you request a list of objects, Resolver returns at most the
--   number of objects specified in <tt>MaxResults</tt>. If more objects
--   are available for retrieval, Resolver returns a <tt>NextToken</tt>
--   value in the response. To retrieve the next batch of objects, use the
--   token that was returned for the prior request in your next request.
listFirewallConfigs_nextToken :: Lens' ListFirewallConfigs (Maybe Text)

-- | The maximum number of objects that you want Resolver to return for
--   this request. If more objects are available, in the response, Resolver
--   provides a <tt>NextToken</tt> value that you can use in a subsequent
--   call to get the next batch of objects.
--   
--   If you don't specify a value for <tt>MaxResults</tt>, Resolver returns
--   up to 100 objects.
listFirewallConfigs_maxResults :: Lens' ListFirewallConfigs (Maybe Natural)

-- | <i>See:</i> <a>newListFirewallConfigsResponse</a> smart constructor.
data ListFirewallConfigsResponse
ListFirewallConfigsResponse' :: Maybe Text -> Maybe [FirewallConfig] -> Int -> ListFirewallConfigsResponse

-- | If objects are still available for retrieval, Resolver returns this
--   token in the response. To retrieve the next batch of objects, provide
--   this token in your next request.
[$sel:nextToken:ListFirewallConfigsResponse'] :: ListFirewallConfigsResponse -> Maybe Text

-- | The configurations for the firewall behavior provided by DNS Firewall
--   for VPCs from Amazon Virtual Private Cloud (Amazon VPC).
[$sel:firewallConfigs:ListFirewallConfigsResponse'] :: ListFirewallConfigsResponse -> Maybe [FirewallConfig]

-- | The response's http status code.
[$sel:httpStatus:ListFirewallConfigsResponse'] :: ListFirewallConfigsResponse -> Int

-- | Create a value of <a>ListFirewallConfigsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListFirewallConfigs'</a>,
--   <a>listFirewallConfigsResponse_nextToken</a> - If objects are still
--   available for retrieval, Resolver returns this token in the response.
--   To retrieve the next batch of objects, provide this token in your next
--   request.
--   
--   <a>$sel:firewallConfigs:ListFirewallConfigsResponse'</a>,
--   <a>listFirewallConfigsResponse_firewallConfigs</a> - The
--   configurations for the firewall behavior provided by DNS Firewall for
--   VPCs from Amazon Virtual Private Cloud (Amazon VPC).
--   
--   <a>$sel:httpStatus:ListFirewallConfigsResponse'</a>,
--   <a>listFirewallConfigsResponse_httpStatus</a> - The response's http
--   status code.
newListFirewallConfigsResponse :: Int -> ListFirewallConfigsResponse

-- | If objects are still available for retrieval, Resolver returns this
--   token in the response. To retrieve the next batch of objects, provide
--   this token in your next request.
listFirewallConfigsResponse_nextToken :: Lens' ListFirewallConfigsResponse (Maybe Text)

-- | The configurations for the firewall behavior provided by DNS Firewall
--   for VPCs from Amazon Virtual Private Cloud (Amazon VPC).
listFirewallConfigsResponse_firewallConfigs :: Lens' ListFirewallConfigsResponse (Maybe [FirewallConfig])

-- | The response's http status code.
listFirewallConfigsResponse_httpStatus :: Lens' ListFirewallConfigsResponse Int
instance GHC.Generics.Generic Network.AWS.Route53Resolver.ListFirewallConfigs.ListFirewallConfigs
instance GHC.Show.Show Network.AWS.Route53Resolver.ListFirewallConfigs.ListFirewallConfigs
instance GHC.Read.Read Network.AWS.Route53Resolver.ListFirewallConfigs.ListFirewallConfigs
instance GHC.Classes.Eq Network.AWS.Route53Resolver.ListFirewallConfigs.ListFirewallConfigs
instance GHC.Generics.Generic Network.AWS.Route53Resolver.ListFirewallConfigs.ListFirewallConfigsResponse
instance GHC.Show.Show Network.AWS.Route53Resolver.ListFirewallConfigs.ListFirewallConfigsResponse
instance GHC.Read.Read Network.AWS.Route53Resolver.ListFirewallConfigs.ListFirewallConfigsResponse
instance GHC.Classes.Eq Network.AWS.Route53Resolver.ListFirewallConfigs.ListFirewallConfigsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53Resolver.ListFirewallConfigs.ListFirewallConfigs
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.ListFirewallConfigs.ListFirewallConfigsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.Route53Resolver.ListFirewallConfigs.ListFirewallConfigs
instance Data.Hashable.Class.Hashable Network.AWS.Route53Resolver.ListFirewallConfigs.ListFirewallConfigs
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.ListFirewallConfigs.ListFirewallConfigs
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53Resolver.ListFirewallConfigs.ListFirewallConfigs
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53Resolver.ListFirewallConfigs.ListFirewallConfigs
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53Resolver.ListFirewallConfigs.ListFirewallConfigs
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53Resolver.ListFirewallConfigs.ListFirewallConfigs


-- | Imports domain names from a file into a domain list, for use in a DNS
--   firewall rule group.
--   
--   Each domain specification in your domain list must satisfy the
--   following requirements:
--   
--   <ul>
--   <li>It can optionally start with <tt>*</tt> (asterisk).</li>
--   <li>With the exception of the optional starting asterisk, it must only
--   contain the following characters: <tt>A-Z</tt>, <tt>a-z</tt>,
--   <tt>0-9</tt>, <tt>-</tt> (hyphen).</li>
--   <li>It must be from 1-255 characters in length.</li>
--   </ul>
module Network.AWS.Route53Resolver.ImportFirewallDomains

-- | <i>See:</i> <a>newImportFirewallDomains</a> smart constructor.
data ImportFirewallDomains
ImportFirewallDomains' :: Text -> FirewallDomainImportOperation -> Text -> ImportFirewallDomains

-- | The ID of the domain list that you want to modify with the import
--   operation.
[$sel:firewallDomainListId:ImportFirewallDomains'] :: ImportFirewallDomains -> Text

-- | What you want DNS Firewall to do with the domains that are listed in
--   the file. This must be set to <tt>REPLACE</tt>, which updates the
--   domain list to exactly match the list in the file.
[$sel:operation:ImportFirewallDomains'] :: ImportFirewallDomains -> FirewallDomainImportOperation

-- | The fully qualified URL or URI of the file stored in Amazon Simple
--   Storage Service (Amazon S3) that contains the list of domains to
--   import.
--   
--   The file must be in an S3 bucket that's in the same Region as your DNS
--   Firewall. The file must be a text file and must contain a single
--   domain per line.
[$sel:domainFileUrl:ImportFirewallDomains'] :: ImportFirewallDomains -> Text

-- | Create a value of <a>ImportFirewallDomains</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:firewallDomainListId:ImportFirewallDomains'</a>,
--   <a>importFirewallDomains_firewallDomainListId</a> - The ID of the
--   domain list that you want to modify with the import operation.
--   
--   <a>$sel:operation:ImportFirewallDomains'</a>,
--   <a>importFirewallDomains_operation</a> - What you want DNS Firewall to
--   do with the domains that are listed in the file. This must be set to
--   <tt>REPLACE</tt>, which updates the domain list to exactly match the
--   list in the file.
--   
--   <a>$sel:domainFileUrl:ImportFirewallDomains'</a>,
--   <a>importFirewallDomains_domainFileUrl</a> - The fully qualified URL
--   or URI of the file stored in Amazon Simple Storage Service (Amazon S3)
--   that contains the list of domains to import.
--   
--   The file must be in an S3 bucket that's in the same Region as your DNS
--   Firewall. The file must be a text file and must contain a single
--   domain per line.
newImportFirewallDomains :: Text -> FirewallDomainImportOperation -> Text -> ImportFirewallDomains

-- | The ID of the domain list that you want to modify with the import
--   operation.
importFirewallDomains_firewallDomainListId :: Lens' ImportFirewallDomains Text

-- | What you want DNS Firewall to do with the domains that are listed in
--   the file. This must be set to <tt>REPLACE</tt>, which updates the
--   domain list to exactly match the list in the file.
importFirewallDomains_operation :: Lens' ImportFirewallDomains FirewallDomainImportOperation

-- | The fully qualified URL or URI of the file stored in Amazon Simple
--   Storage Service (Amazon S3) that contains the list of domains to
--   import.
--   
--   The file must be in an S3 bucket that's in the same Region as your DNS
--   Firewall. The file must be a text file and must contain a single
--   domain per line.
importFirewallDomains_domainFileUrl :: Lens' ImportFirewallDomains Text

-- | <i>See:</i> <a>newImportFirewallDomainsResponse</a> smart constructor.
data ImportFirewallDomainsResponse
ImportFirewallDomainsResponse' :: Maybe FirewallDomainListStatus -> Maybe Text -> Maybe Text -> Maybe Text -> Int -> ImportFirewallDomainsResponse
[$sel:status:ImportFirewallDomainsResponse'] :: ImportFirewallDomainsResponse -> Maybe FirewallDomainListStatus

-- | Additional information about the status of the list, if available.
[$sel:statusMessage:ImportFirewallDomainsResponse'] :: ImportFirewallDomainsResponse -> Maybe Text

-- | The name of the domain list.
[$sel:name:ImportFirewallDomainsResponse'] :: ImportFirewallDomainsResponse -> Maybe Text

-- | The Id of the firewall domain list that DNS Firewall just updated.
[$sel:id:ImportFirewallDomainsResponse'] :: ImportFirewallDomainsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ImportFirewallDomainsResponse'] :: ImportFirewallDomainsResponse -> Int

-- | Create a value of <a>ImportFirewallDomainsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:ImportFirewallDomainsResponse'</a>,
--   <a>importFirewallDomainsResponse_status</a> -
--   
--   <a>$sel:statusMessage:ImportFirewallDomainsResponse'</a>,
--   <a>importFirewallDomainsResponse_statusMessage</a> - Additional
--   information about the status of the list, if available.
--   
--   <a>$sel:name:ImportFirewallDomainsResponse'</a>,
--   <a>importFirewallDomainsResponse_name</a> - The name of the domain
--   list.
--   
--   <a>$sel:id:ImportFirewallDomainsResponse'</a>,
--   <a>importFirewallDomainsResponse_id</a> - The Id of the firewall
--   domain list that DNS Firewall just updated.
--   
--   <a>$sel:httpStatus:ImportFirewallDomainsResponse'</a>,
--   <a>importFirewallDomainsResponse_httpStatus</a> - The response's http
--   status code.
newImportFirewallDomainsResponse :: Int -> ImportFirewallDomainsResponse

importFirewallDomainsResponse_status :: Lens' ImportFirewallDomainsResponse (Maybe FirewallDomainListStatus)

-- | Additional information about the status of the list, if available.
importFirewallDomainsResponse_statusMessage :: Lens' ImportFirewallDomainsResponse (Maybe Text)

-- | The name of the domain list.
importFirewallDomainsResponse_name :: Lens' ImportFirewallDomainsResponse (Maybe Text)

-- | The Id of the firewall domain list that DNS Firewall just updated.
importFirewallDomainsResponse_id :: Lens' ImportFirewallDomainsResponse (Maybe Text)

-- | The response's http status code.
importFirewallDomainsResponse_httpStatus :: Lens' ImportFirewallDomainsResponse Int
instance GHC.Generics.Generic Network.AWS.Route53Resolver.ImportFirewallDomains.ImportFirewallDomains
instance GHC.Show.Show Network.AWS.Route53Resolver.ImportFirewallDomains.ImportFirewallDomains
instance GHC.Read.Read Network.AWS.Route53Resolver.ImportFirewallDomains.ImportFirewallDomains
instance GHC.Classes.Eq Network.AWS.Route53Resolver.ImportFirewallDomains.ImportFirewallDomains
instance GHC.Generics.Generic Network.AWS.Route53Resolver.ImportFirewallDomains.ImportFirewallDomainsResponse
instance GHC.Show.Show Network.AWS.Route53Resolver.ImportFirewallDomains.ImportFirewallDomainsResponse
instance GHC.Read.Read Network.AWS.Route53Resolver.ImportFirewallDomains.ImportFirewallDomainsResponse
instance GHC.Classes.Eq Network.AWS.Route53Resolver.ImportFirewallDomains.ImportFirewallDomainsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53Resolver.ImportFirewallDomains.ImportFirewallDomains
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.ImportFirewallDomains.ImportFirewallDomainsResponse
instance Data.Hashable.Class.Hashable Network.AWS.Route53Resolver.ImportFirewallDomains.ImportFirewallDomains
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.ImportFirewallDomains.ImportFirewallDomains
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53Resolver.ImportFirewallDomains.ImportFirewallDomains
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53Resolver.ImportFirewallDomains.ImportFirewallDomains
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53Resolver.ImportFirewallDomains.ImportFirewallDomains
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53Resolver.ImportFirewallDomains.ImportFirewallDomains


-- | Gets information about the Resolver rule policy for a specified rule.
--   A Resolver rule policy includes the rule that you want to share with
--   another account, the account that you want to share the rule with, and
--   the Resolver operations that you want to allow the account to use.
module Network.AWS.Route53Resolver.GetResolverRulePolicy

-- | <i>See:</i> <a>newGetResolverRulePolicy</a> smart constructor.
data GetResolverRulePolicy
GetResolverRulePolicy' :: Text -> GetResolverRulePolicy

-- | The ID of the Resolver rule that you want to get the Resolver rule
--   policy for.
[$sel:arn:GetResolverRulePolicy'] :: GetResolverRulePolicy -> Text

-- | Create a value of <a>GetResolverRulePolicy</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:GetResolverRulePolicy'</a>,
--   <a>getResolverRulePolicy_arn</a> - The ID of the Resolver rule that
--   you want to get the Resolver rule policy for.
newGetResolverRulePolicy :: Text -> GetResolverRulePolicy

-- | The ID of the Resolver rule that you want to get the Resolver rule
--   policy for.
getResolverRulePolicy_arn :: Lens' GetResolverRulePolicy Text

-- | <i>See:</i> <a>newGetResolverRulePolicyResponse</a> smart constructor.
data GetResolverRulePolicyResponse
GetResolverRulePolicyResponse' :: Maybe Text -> Int -> GetResolverRulePolicyResponse

-- | The Resolver rule policy for the rule that you specified in a
--   <tt>GetResolverRulePolicy</tt> request.
[$sel:resolverRulePolicy:GetResolverRulePolicyResponse'] :: GetResolverRulePolicyResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetResolverRulePolicyResponse'] :: GetResolverRulePolicyResponse -> Int

-- | Create a value of <a>GetResolverRulePolicyResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resolverRulePolicy:GetResolverRulePolicyResponse'</a>,
--   <a>getResolverRulePolicyResponse_resolverRulePolicy</a> - The Resolver
--   rule policy for the rule that you specified in a
--   <tt>GetResolverRulePolicy</tt> request.
--   
--   <a>$sel:httpStatus:GetResolverRulePolicyResponse'</a>,
--   <a>getResolverRulePolicyResponse_httpStatus</a> - The response's http
--   status code.
newGetResolverRulePolicyResponse :: Int -> GetResolverRulePolicyResponse

-- | The Resolver rule policy for the rule that you specified in a
--   <tt>GetResolverRulePolicy</tt> request.
getResolverRulePolicyResponse_resolverRulePolicy :: Lens' GetResolverRulePolicyResponse (Maybe Text)

-- | The response's http status code.
getResolverRulePolicyResponse_httpStatus :: Lens' GetResolverRulePolicyResponse Int
instance GHC.Generics.Generic Network.AWS.Route53Resolver.GetResolverRulePolicy.GetResolverRulePolicy
instance GHC.Show.Show Network.AWS.Route53Resolver.GetResolverRulePolicy.GetResolverRulePolicy
instance GHC.Read.Read Network.AWS.Route53Resolver.GetResolverRulePolicy.GetResolverRulePolicy
instance GHC.Classes.Eq Network.AWS.Route53Resolver.GetResolverRulePolicy.GetResolverRulePolicy
instance GHC.Generics.Generic Network.AWS.Route53Resolver.GetResolverRulePolicy.GetResolverRulePolicyResponse
instance GHC.Show.Show Network.AWS.Route53Resolver.GetResolverRulePolicy.GetResolverRulePolicyResponse
instance GHC.Read.Read Network.AWS.Route53Resolver.GetResolverRulePolicy.GetResolverRulePolicyResponse
instance GHC.Classes.Eq Network.AWS.Route53Resolver.GetResolverRulePolicy.GetResolverRulePolicyResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53Resolver.GetResolverRulePolicy.GetResolverRulePolicy
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.GetResolverRulePolicy.GetResolverRulePolicyResponse
instance Data.Hashable.Class.Hashable Network.AWS.Route53Resolver.GetResolverRulePolicy.GetResolverRulePolicy
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.GetResolverRulePolicy.GetResolverRulePolicy
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53Resolver.GetResolverRulePolicy.GetResolverRulePolicy
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53Resolver.GetResolverRulePolicy.GetResolverRulePolicy
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53Resolver.GetResolverRulePolicy.GetResolverRulePolicy
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53Resolver.GetResolverRulePolicy.GetResolverRulePolicy


-- | Gets information about an association between a specified Resolver
--   rule and a VPC. You associate a Resolver rule and a VPC using
--   <a>AssociateResolverRule</a>.
module Network.AWS.Route53Resolver.GetResolverRuleAssociation

-- | <i>See:</i> <a>newGetResolverRuleAssociation</a> smart constructor.
data GetResolverRuleAssociation
GetResolverRuleAssociation' :: Text -> GetResolverRuleAssociation

-- | The ID of the Resolver rule association that you want to get
--   information about.
[$sel:resolverRuleAssociationId:GetResolverRuleAssociation'] :: GetResolverRuleAssociation -> Text

-- | Create a value of <a>GetResolverRuleAssociation</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resolverRuleAssociationId:GetResolverRuleAssociation'</a>,
--   <a>getResolverRuleAssociation_resolverRuleAssociationId</a> - The ID
--   of the Resolver rule association that you want to get information
--   about.
newGetResolverRuleAssociation :: Text -> GetResolverRuleAssociation

-- | The ID of the Resolver rule association that you want to get
--   information about.
getResolverRuleAssociation_resolverRuleAssociationId :: Lens' GetResolverRuleAssociation Text

-- | <i>See:</i> <a>newGetResolverRuleAssociationResponse</a> smart
--   constructor.
data GetResolverRuleAssociationResponse
GetResolverRuleAssociationResponse' :: Maybe ResolverRuleAssociation -> Int -> GetResolverRuleAssociationResponse

-- | Information about the Resolver rule association that you specified in
--   a <tt>GetResolverRuleAssociation</tt> request.
[$sel:resolverRuleAssociation:GetResolverRuleAssociationResponse'] :: GetResolverRuleAssociationResponse -> Maybe ResolverRuleAssociation

-- | The response's http status code.
[$sel:httpStatus:GetResolverRuleAssociationResponse'] :: GetResolverRuleAssociationResponse -> Int

-- | Create a value of <a>GetResolverRuleAssociationResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:resolverRuleAssociation:GetResolverRuleAssociationResponse'</a>,
--   <a>getResolverRuleAssociationResponse_resolverRuleAssociation</a> -
--   Information about the Resolver rule association that you specified in
--   a <tt>GetResolverRuleAssociation</tt> request.
--   
--   <a>$sel:httpStatus:GetResolverRuleAssociationResponse'</a>,
--   <a>getResolverRuleAssociationResponse_httpStatus</a> - The response's
--   http status code.
newGetResolverRuleAssociationResponse :: Int -> GetResolverRuleAssociationResponse

-- | Information about the Resolver rule association that you specified in
--   a <tt>GetResolverRuleAssociation</tt> request.
getResolverRuleAssociationResponse_resolverRuleAssociation :: Lens' GetResolverRuleAssociationResponse (Maybe ResolverRuleAssociation)

-- | The response's http status code.
getResolverRuleAssociationResponse_httpStatus :: Lens' GetResolverRuleAssociationResponse Int
instance GHC.Generics.Generic Network.AWS.Route53Resolver.GetResolverRuleAssociation.GetResolverRuleAssociation
instance GHC.Show.Show Network.AWS.Route53Resolver.GetResolverRuleAssociation.GetResolverRuleAssociation
instance GHC.Read.Read Network.AWS.Route53Resolver.GetResolverRuleAssociation.GetResolverRuleAssociation
instance GHC.Classes.Eq Network.AWS.Route53Resolver.GetResolverRuleAssociation.GetResolverRuleAssociation
instance GHC.Generics.Generic Network.AWS.Route53Resolver.GetResolverRuleAssociation.GetResolverRuleAssociationResponse
instance GHC.Show.Show Network.AWS.Route53Resolver.GetResolverRuleAssociation.GetResolverRuleAssociationResponse
instance GHC.Read.Read Network.AWS.Route53Resolver.GetResolverRuleAssociation.GetResolverRuleAssociationResponse
instance GHC.Classes.Eq Network.AWS.Route53Resolver.GetResolverRuleAssociation.GetResolverRuleAssociationResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53Resolver.GetResolverRuleAssociation.GetResolverRuleAssociation
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.GetResolverRuleAssociation.GetResolverRuleAssociationResponse
instance Data.Hashable.Class.Hashable Network.AWS.Route53Resolver.GetResolverRuleAssociation.GetResolverRuleAssociation
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.GetResolverRuleAssociation.GetResolverRuleAssociation
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53Resolver.GetResolverRuleAssociation.GetResolverRuleAssociation
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53Resolver.GetResolverRuleAssociation.GetResolverRuleAssociation
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53Resolver.GetResolverRuleAssociation.GetResolverRuleAssociation
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53Resolver.GetResolverRuleAssociation.GetResolverRuleAssociation


-- | Gets information about a specified Resolver rule, such as the domain
--   name that the rule forwards DNS queries for and the ID of the outbound
--   Resolver endpoint that the rule is associated with.
module Network.AWS.Route53Resolver.GetResolverRule

-- | <i>See:</i> <a>newGetResolverRule</a> smart constructor.
data GetResolverRule
GetResolverRule' :: Text -> GetResolverRule

-- | The ID of the Resolver rule that you want to get information about.
[$sel:resolverRuleId:GetResolverRule'] :: GetResolverRule -> Text

-- | Create a value of <a>GetResolverRule</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resolverRuleId:GetResolverRule'</a>,
--   <a>getResolverRule_resolverRuleId</a> - The ID of the Resolver rule
--   that you want to get information about.
newGetResolverRule :: Text -> GetResolverRule

-- | The ID of the Resolver rule that you want to get information about.
getResolverRule_resolverRuleId :: Lens' GetResolverRule Text

-- | <i>See:</i> <a>newGetResolverRuleResponse</a> smart constructor.
data GetResolverRuleResponse
GetResolverRuleResponse' :: Maybe ResolverRule -> Int -> GetResolverRuleResponse

-- | Information about the Resolver rule that you specified in a
--   <tt>GetResolverRule</tt> request.
[$sel:resolverRule:GetResolverRuleResponse'] :: GetResolverRuleResponse -> Maybe ResolverRule

-- | The response's http status code.
[$sel:httpStatus:GetResolverRuleResponse'] :: GetResolverRuleResponse -> Int

-- | Create a value of <a>GetResolverRuleResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resolverRule:GetResolverRuleResponse'</a>,
--   <a>getResolverRuleResponse_resolverRule</a> - Information about the
--   Resolver rule that you specified in a <tt>GetResolverRule</tt>
--   request.
--   
--   <a>$sel:httpStatus:GetResolverRuleResponse'</a>,
--   <a>getResolverRuleResponse_httpStatus</a> - The response's http status
--   code.
newGetResolverRuleResponse :: Int -> GetResolverRuleResponse

-- | Information about the Resolver rule that you specified in a
--   <tt>GetResolverRule</tt> request.
getResolverRuleResponse_resolverRule :: Lens' GetResolverRuleResponse (Maybe ResolverRule)

-- | The response's http status code.
getResolverRuleResponse_httpStatus :: Lens' GetResolverRuleResponse Int
instance GHC.Generics.Generic Network.AWS.Route53Resolver.GetResolverRule.GetResolverRule
instance GHC.Show.Show Network.AWS.Route53Resolver.GetResolverRule.GetResolverRule
instance GHC.Read.Read Network.AWS.Route53Resolver.GetResolverRule.GetResolverRule
instance GHC.Classes.Eq Network.AWS.Route53Resolver.GetResolverRule.GetResolverRule
instance GHC.Generics.Generic Network.AWS.Route53Resolver.GetResolverRule.GetResolverRuleResponse
instance GHC.Show.Show Network.AWS.Route53Resolver.GetResolverRule.GetResolverRuleResponse
instance GHC.Read.Read Network.AWS.Route53Resolver.GetResolverRule.GetResolverRuleResponse
instance GHC.Classes.Eq Network.AWS.Route53Resolver.GetResolverRule.GetResolverRuleResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53Resolver.GetResolverRule.GetResolverRule
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.GetResolverRule.GetResolverRuleResponse
instance Data.Hashable.Class.Hashable Network.AWS.Route53Resolver.GetResolverRule.GetResolverRule
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.GetResolverRule.GetResolverRule
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53Resolver.GetResolverRule.GetResolverRule
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53Resolver.GetResolverRule.GetResolverRule
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53Resolver.GetResolverRule.GetResolverRule
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53Resolver.GetResolverRule.GetResolverRule


-- | Gets information about a query logging policy. A query logging policy
--   specifies the Resolver query logging operations and resources that you
--   want to allow another Amazon Web Services account to be able to use.
module Network.AWS.Route53Resolver.GetResolverQueryLogConfigPolicy

-- | <i>See:</i> <a>newGetResolverQueryLogConfigPolicy</a> smart
--   constructor.
data GetResolverQueryLogConfigPolicy
GetResolverQueryLogConfigPolicy' :: Text -> GetResolverQueryLogConfigPolicy

-- | The ARN of the query logging configuration that you want to get the
--   query logging policy for.
[$sel:arn:GetResolverQueryLogConfigPolicy'] :: GetResolverQueryLogConfigPolicy -> Text

-- | Create a value of <a>GetResolverQueryLogConfigPolicy</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:GetResolverQueryLogConfigPolicy'</a>,
--   <a>getResolverQueryLogConfigPolicy_arn</a> - The ARN of the query
--   logging configuration that you want to get the query logging policy
--   for.
newGetResolverQueryLogConfigPolicy :: Text -> GetResolverQueryLogConfigPolicy

-- | The ARN of the query logging configuration that you want to get the
--   query logging policy for.
getResolverQueryLogConfigPolicy_arn :: Lens' GetResolverQueryLogConfigPolicy Text

-- | <i>See:</i> <a>newGetResolverQueryLogConfigPolicyResponse</a> smart
--   constructor.
data GetResolverQueryLogConfigPolicyResponse
GetResolverQueryLogConfigPolicyResponse' :: Maybe Text -> Int -> GetResolverQueryLogConfigPolicyResponse

-- | Information about the query logging policy for the query logging
--   configuration that you specified in a
--   <tt>GetResolverQueryLogConfigPolicy</tt> request.
[$sel:resolverQueryLogConfigPolicy:GetResolverQueryLogConfigPolicyResponse'] :: GetResolverQueryLogConfigPolicyResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetResolverQueryLogConfigPolicyResponse'] :: GetResolverQueryLogConfigPolicyResponse -> Int

-- | Create a value of <a>GetResolverQueryLogConfigPolicyResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:resolverQueryLogConfigPolicy:GetResolverQueryLogConfigPolicyResponse'</a>,
--   <a>getResolverQueryLogConfigPolicyResponse_resolverQueryLogConfigPolicy</a>
--   - Information about the query logging policy for the query logging
--   configuration that you specified in a
--   <tt>GetResolverQueryLogConfigPolicy</tt> request.
--   
--   <a>$sel:httpStatus:GetResolverQueryLogConfigPolicyResponse'</a>,
--   <a>getResolverQueryLogConfigPolicyResponse_httpStatus</a> - The
--   response's http status code.
newGetResolverQueryLogConfigPolicyResponse :: Int -> GetResolverQueryLogConfigPolicyResponse

-- | Information about the query logging policy for the query logging
--   configuration that you specified in a
--   <tt>GetResolverQueryLogConfigPolicy</tt> request.
getResolverQueryLogConfigPolicyResponse_resolverQueryLogConfigPolicy :: Lens' GetResolverQueryLogConfigPolicyResponse (Maybe Text)

-- | The response's http status code.
getResolverQueryLogConfigPolicyResponse_httpStatus :: Lens' GetResolverQueryLogConfigPolicyResponse Int
instance GHC.Generics.Generic Network.AWS.Route53Resolver.GetResolverQueryLogConfigPolicy.GetResolverQueryLogConfigPolicy
instance GHC.Show.Show Network.AWS.Route53Resolver.GetResolverQueryLogConfigPolicy.GetResolverQueryLogConfigPolicy
instance GHC.Read.Read Network.AWS.Route53Resolver.GetResolverQueryLogConfigPolicy.GetResolverQueryLogConfigPolicy
instance GHC.Classes.Eq Network.AWS.Route53Resolver.GetResolverQueryLogConfigPolicy.GetResolverQueryLogConfigPolicy
instance GHC.Generics.Generic Network.AWS.Route53Resolver.GetResolverQueryLogConfigPolicy.GetResolverQueryLogConfigPolicyResponse
instance GHC.Show.Show Network.AWS.Route53Resolver.GetResolverQueryLogConfigPolicy.GetResolverQueryLogConfigPolicyResponse
instance GHC.Read.Read Network.AWS.Route53Resolver.GetResolverQueryLogConfigPolicy.GetResolverQueryLogConfigPolicyResponse
instance GHC.Classes.Eq Network.AWS.Route53Resolver.GetResolverQueryLogConfigPolicy.GetResolverQueryLogConfigPolicyResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53Resolver.GetResolverQueryLogConfigPolicy.GetResolverQueryLogConfigPolicy
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.GetResolverQueryLogConfigPolicy.GetResolverQueryLogConfigPolicyResponse
instance Data.Hashable.Class.Hashable Network.AWS.Route53Resolver.GetResolverQueryLogConfigPolicy.GetResolverQueryLogConfigPolicy
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.GetResolverQueryLogConfigPolicy.GetResolverQueryLogConfigPolicy
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53Resolver.GetResolverQueryLogConfigPolicy.GetResolverQueryLogConfigPolicy
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53Resolver.GetResolverQueryLogConfigPolicy.GetResolverQueryLogConfigPolicy
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53Resolver.GetResolverQueryLogConfigPolicy.GetResolverQueryLogConfigPolicy
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53Resolver.GetResolverQueryLogConfigPolicy.GetResolverQueryLogConfigPolicy


-- | Gets information about a specified association between a Resolver
--   query logging configuration and an Amazon VPC. When you associate a
--   VPC with a query logging configuration, Resolver logs DNS queries that
--   originate in that VPC.
module Network.AWS.Route53Resolver.GetResolverQueryLogConfigAssociation

-- | <i>See:</i> <a>newGetResolverQueryLogConfigAssociation</a> smart
--   constructor.
data GetResolverQueryLogConfigAssociation
GetResolverQueryLogConfigAssociation' :: Text -> GetResolverQueryLogConfigAssociation

-- | The ID of the Resolver query logging configuration association that
--   you want to get information about.
[$sel:resolverQueryLogConfigAssociationId:GetResolverQueryLogConfigAssociation'] :: GetResolverQueryLogConfigAssociation -> Text

-- | Create a value of <a>GetResolverQueryLogConfigAssociation</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:resolverQueryLogConfigAssociationId:GetResolverQueryLogConfigAssociation'</a>,
--   <a>getResolverQueryLogConfigAssociation_resolverQueryLogConfigAssociationId</a>
--   - The ID of the Resolver query logging configuration association that
--   you want to get information about.
newGetResolverQueryLogConfigAssociation :: Text -> GetResolverQueryLogConfigAssociation

-- | The ID of the Resolver query logging configuration association that
--   you want to get information about.
getResolverQueryLogConfigAssociation_resolverQueryLogConfigAssociationId :: Lens' GetResolverQueryLogConfigAssociation Text

-- | <i>See:</i> <a>newGetResolverQueryLogConfigAssociationResponse</a>
--   smart constructor.
data GetResolverQueryLogConfigAssociationResponse
GetResolverQueryLogConfigAssociationResponse' :: Maybe ResolverQueryLogConfigAssociation -> Int -> GetResolverQueryLogConfigAssociationResponse

-- | Information about the Resolver query logging configuration association
--   that you specified in a <tt>GetQueryLogConfigAssociation</tt> request.
[$sel:resolverQueryLogConfigAssociation:GetResolverQueryLogConfigAssociationResponse'] :: GetResolverQueryLogConfigAssociationResponse -> Maybe ResolverQueryLogConfigAssociation

-- | The response's http status code.
[$sel:httpStatus:GetResolverQueryLogConfigAssociationResponse'] :: GetResolverQueryLogConfigAssociationResponse -> Int

-- | Create a value of <a>GetResolverQueryLogConfigAssociationResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:resolverQueryLogConfigAssociation:GetResolverQueryLogConfigAssociationResponse'</a>,
--   <a>getResolverQueryLogConfigAssociationResponse_resolverQueryLogConfigAssociation</a>
--   - Information about the Resolver query logging configuration
--   association that you specified in a
--   <tt>GetQueryLogConfigAssociation</tt> request.
--   
--   <a>$sel:httpStatus:GetResolverQueryLogConfigAssociationResponse'</a>,
--   <a>getResolverQueryLogConfigAssociationResponse_httpStatus</a> - The
--   response's http status code.
newGetResolverQueryLogConfigAssociationResponse :: Int -> GetResolverQueryLogConfigAssociationResponse

-- | Information about the Resolver query logging configuration association
--   that you specified in a <tt>GetQueryLogConfigAssociation</tt> request.
getResolverQueryLogConfigAssociationResponse_resolverQueryLogConfigAssociation :: Lens' GetResolverQueryLogConfigAssociationResponse (Maybe ResolverQueryLogConfigAssociation)

-- | The response's http status code.
getResolverQueryLogConfigAssociationResponse_httpStatus :: Lens' GetResolverQueryLogConfigAssociationResponse Int
instance GHC.Generics.Generic Network.AWS.Route53Resolver.GetResolverQueryLogConfigAssociation.GetResolverQueryLogConfigAssociation
instance GHC.Show.Show Network.AWS.Route53Resolver.GetResolverQueryLogConfigAssociation.GetResolverQueryLogConfigAssociation
instance GHC.Read.Read Network.AWS.Route53Resolver.GetResolverQueryLogConfigAssociation.GetResolverQueryLogConfigAssociation
instance GHC.Classes.Eq Network.AWS.Route53Resolver.GetResolverQueryLogConfigAssociation.GetResolverQueryLogConfigAssociation
instance GHC.Generics.Generic Network.AWS.Route53Resolver.GetResolverQueryLogConfigAssociation.GetResolverQueryLogConfigAssociationResponse
instance GHC.Show.Show Network.AWS.Route53Resolver.GetResolverQueryLogConfigAssociation.GetResolverQueryLogConfigAssociationResponse
instance GHC.Read.Read Network.AWS.Route53Resolver.GetResolverQueryLogConfigAssociation.GetResolverQueryLogConfigAssociationResponse
instance GHC.Classes.Eq Network.AWS.Route53Resolver.GetResolverQueryLogConfigAssociation.GetResolverQueryLogConfigAssociationResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53Resolver.GetResolverQueryLogConfigAssociation.GetResolverQueryLogConfigAssociation
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.GetResolverQueryLogConfigAssociation.GetResolverQueryLogConfigAssociationResponse
instance Data.Hashable.Class.Hashable Network.AWS.Route53Resolver.GetResolverQueryLogConfigAssociation.GetResolverQueryLogConfigAssociation
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.GetResolverQueryLogConfigAssociation.GetResolverQueryLogConfigAssociation
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53Resolver.GetResolverQueryLogConfigAssociation.GetResolverQueryLogConfigAssociation
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53Resolver.GetResolverQueryLogConfigAssociation.GetResolverQueryLogConfigAssociation
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53Resolver.GetResolverQueryLogConfigAssociation.GetResolverQueryLogConfigAssociation
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53Resolver.GetResolverQueryLogConfigAssociation.GetResolverQueryLogConfigAssociation


-- | Gets information about a specified Resolver query logging
--   configuration, such as the number of VPCs that the configuration is
--   logging queries for and the location that logs are sent to.
module Network.AWS.Route53Resolver.GetResolverQueryLogConfig

-- | <i>See:</i> <a>newGetResolverQueryLogConfig</a> smart constructor.
data GetResolverQueryLogConfig
GetResolverQueryLogConfig' :: Text -> GetResolverQueryLogConfig

-- | The ID of the Resolver query logging configuration that you want to
--   get information about.
[$sel:resolverQueryLogConfigId:GetResolverQueryLogConfig'] :: GetResolverQueryLogConfig -> Text

-- | Create a value of <a>GetResolverQueryLogConfig</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resolverQueryLogConfigId:GetResolverQueryLogConfig'</a>,
--   <a>getResolverQueryLogConfig_resolverQueryLogConfigId</a> - The ID of
--   the Resolver query logging configuration that you want to get
--   information about.
newGetResolverQueryLogConfig :: Text -> GetResolverQueryLogConfig

-- | The ID of the Resolver query logging configuration that you want to
--   get information about.
getResolverQueryLogConfig_resolverQueryLogConfigId :: Lens' GetResolverQueryLogConfig Text

-- | <i>See:</i> <a>newGetResolverQueryLogConfigResponse</a> smart
--   constructor.
data GetResolverQueryLogConfigResponse
GetResolverQueryLogConfigResponse' :: Maybe ResolverQueryLogConfig -> Int -> GetResolverQueryLogConfigResponse

-- | Information about the Resolver query logging configuration that you
--   specified in a <tt>GetQueryLogConfig</tt> request.
[$sel:resolverQueryLogConfig:GetResolverQueryLogConfigResponse'] :: GetResolverQueryLogConfigResponse -> Maybe ResolverQueryLogConfig

-- | The response's http status code.
[$sel:httpStatus:GetResolverQueryLogConfigResponse'] :: GetResolverQueryLogConfigResponse -> Int

-- | Create a value of <a>GetResolverQueryLogConfigResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resolverQueryLogConfig:GetResolverQueryLogConfigResponse'</a>,
--   <a>getResolverQueryLogConfigResponse_resolverQueryLogConfig</a> -
--   Information about the Resolver query logging configuration that you
--   specified in a <tt>GetQueryLogConfig</tt> request.
--   
--   <a>$sel:httpStatus:GetResolverQueryLogConfigResponse'</a>,
--   <a>getResolverQueryLogConfigResponse_httpStatus</a> - The response's
--   http status code.
newGetResolverQueryLogConfigResponse :: Int -> GetResolverQueryLogConfigResponse

-- | Information about the Resolver query logging configuration that you
--   specified in a <tt>GetQueryLogConfig</tt> request.
getResolverQueryLogConfigResponse_resolverQueryLogConfig :: Lens' GetResolverQueryLogConfigResponse (Maybe ResolverQueryLogConfig)

-- | The response's http status code.
getResolverQueryLogConfigResponse_httpStatus :: Lens' GetResolverQueryLogConfigResponse Int
instance GHC.Generics.Generic Network.AWS.Route53Resolver.GetResolverQueryLogConfig.GetResolverQueryLogConfig
instance GHC.Show.Show Network.AWS.Route53Resolver.GetResolverQueryLogConfig.GetResolverQueryLogConfig
instance GHC.Read.Read Network.AWS.Route53Resolver.GetResolverQueryLogConfig.GetResolverQueryLogConfig
instance GHC.Classes.Eq Network.AWS.Route53Resolver.GetResolverQueryLogConfig.GetResolverQueryLogConfig
instance GHC.Generics.Generic Network.AWS.Route53Resolver.GetResolverQueryLogConfig.GetResolverQueryLogConfigResponse
instance GHC.Show.Show Network.AWS.Route53Resolver.GetResolverQueryLogConfig.GetResolverQueryLogConfigResponse
instance GHC.Read.Read Network.AWS.Route53Resolver.GetResolverQueryLogConfig.GetResolverQueryLogConfigResponse
instance GHC.Classes.Eq Network.AWS.Route53Resolver.GetResolverQueryLogConfig.GetResolverQueryLogConfigResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53Resolver.GetResolverQueryLogConfig.GetResolverQueryLogConfig
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.GetResolverQueryLogConfig.GetResolverQueryLogConfigResponse
instance Data.Hashable.Class.Hashable Network.AWS.Route53Resolver.GetResolverQueryLogConfig.GetResolverQueryLogConfig
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.GetResolverQueryLogConfig.GetResolverQueryLogConfig
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53Resolver.GetResolverQueryLogConfig.GetResolverQueryLogConfig
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53Resolver.GetResolverQueryLogConfig.GetResolverQueryLogConfig
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53Resolver.GetResolverQueryLogConfig.GetResolverQueryLogConfig
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53Resolver.GetResolverQueryLogConfig.GetResolverQueryLogConfig


-- | Gets information about a specified Resolver endpoint, such as whether
--   it's an inbound or an outbound Resolver endpoint, and the current
--   status of the endpoint.
module Network.AWS.Route53Resolver.GetResolverEndpoint

-- | <i>See:</i> <a>newGetResolverEndpoint</a> smart constructor.
data GetResolverEndpoint
GetResolverEndpoint' :: Text -> GetResolverEndpoint

-- | The ID of the Resolver endpoint that you want to get information
--   about.
[$sel:resolverEndpointId:GetResolverEndpoint'] :: GetResolverEndpoint -> Text

-- | Create a value of <a>GetResolverEndpoint</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resolverEndpointId:GetResolverEndpoint'</a>,
--   <a>getResolverEndpoint_resolverEndpointId</a> - The ID of the Resolver
--   endpoint that you want to get information about.
newGetResolverEndpoint :: Text -> GetResolverEndpoint

-- | The ID of the Resolver endpoint that you want to get information
--   about.
getResolverEndpoint_resolverEndpointId :: Lens' GetResolverEndpoint Text

-- | <i>See:</i> <a>newGetResolverEndpointResponse</a> smart constructor.
data GetResolverEndpointResponse
GetResolverEndpointResponse' :: Maybe ResolverEndpoint -> Int -> GetResolverEndpointResponse

-- | Information about the Resolver endpoint that you specified in a
--   <tt>GetResolverEndpoint</tt> request.
[$sel:resolverEndpoint:GetResolverEndpointResponse'] :: GetResolverEndpointResponse -> Maybe ResolverEndpoint

-- | The response's http status code.
[$sel:httpStatus:GetResolverEndpointResponse'] :: GetResolverEndpointResponse -> Int

-- | Create a value of <a>GetResolverEndpointResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resolverEndpoint:GetResolverEndpointResponse'</a>,
--   <a>getResolverEndpointResponse_resolverEndpoint</a> - Information
--   about the Resolver endpoint that you specified in a
--   <tt>GetResolverEndpoint</tt> request.
--   
--   <a>$sel:httpStatus:GetResolverEndpointResponse'</a>,
--   <a>getResolverEndpointResponse_httpStatus</a> - The response's http
--   status code.
newGetResolverEndpointResponse :: Int -> GetResolverEndpointResponse

-- | Information about the Resolver endpoint that you specified in a
--   <tt>GetResolverEndpoint</tt> request.
getResolverEndpointResponse_resolverEndpoint :: Lens' GetResolverEndpointResponse (Maybe ResolverEndpoint)

-- | The response's http status code.
getResolverEndpointResponse_httpStatus :: Lens' GetResolverEndpointResponse Int
instance GHC.Generics.Generic Network.AWS.Route53Resolver.GetResolverEndpoint.GetResolverEndpoint
instance GHC.Show.Show Network.AWS.Route53Resolver.GetResolverEndpoint.GetResolverEndpoint
instance GHC.Read.Read Network.AWS.Route53Resolver.GetResolverEndpoint.GetResolverEndpoint
instance GHC.Classes.Eq Network.AWS.Route53Resolver.GetResolverEndpoint.GetResolverEndpoint
instance GHC.Generics.Generic Network.AWS.Route53Resolver.GetResolverEndpoint.GetResolverEndpointResponse
instance GHC.Show.Show Network.AWS.Route53Resolver.GetResolverEndpoint.GetResolverEndpointResponse
instance GHC.Read.Read Network.AWS.Route53Resolver.GetResolverEndpoint.GetResolverEndpointResponse
instance GHC.Classes.Eq Network.AWS.Route53Resolver.GetResolverEndpoint.GetResolverEndpointResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53Resolver.GetResolverEndpoint.GetResolverEndpoint
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.GetResolverEndpoint.GetResolverEndpointResponse
instance Data.Hashable.Class.Hashable Network.AWS.Route53Resolver.GetResolverEndpoint.GetResolverEndpoint
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.GetResolverEndpoint.GetResolverEndpoint
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53Resolver.GetResolverEndpoint.GetResolverEndpoint
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53Resolver.GetResolverEndpoint.GetResolverEndpoint
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53Resolver.GetResolverEndpoint.GetResolverEndpoint
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53Resolver.GetResolverEndpoint.GetResolverEndpoint


-- | Gets DNSSEC validation information for a specified resource.
module Network.AWS.Route53Resolver.GetResolverDnssecConfig

-- | <i>See:</i> <a>newGetResolverDnssecConfig</a> smart constructor.
data GetResolverDnssecConfig
GetResolverDnssecConfig' :: Text -> GetResolverDnssecConfig

-- | The ID of the virtual private cloud (VPC) for the DNSSEC validation
--   status.
[$sel:resourceId:GetResolverDnssecConfig'] :: GetResolverDnssecConfig -> Text

-- | Create a value of <a>GetResolverDnssecConfig</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceId:GetResolverDnssecConfig'</a>,
--   <a>getResolverDnssecConfig_resourceId</a> - The ID of the virtual
--   private cloud (VPC) for the DNSSEC validation status.
newGetResolverDnssecConfig :: Text -> GetResolverDnssecConfig

-- | The ID of the virtual private cloud (VPC) for the DNSSEC validation
--   status.
getResolverDnssecConfig_resourceId :: Lens' GetResolverDnssecConfig Text

-- | <i>See:</i> <a>newGetResolverDnssecConfigResponse</a> smart
--   constructor.
data GetResolverDnssecConfigResponse
GetResolverDnssecConfigResponse' :: Maybe ResolverDnssecConfig -> Int -> GetResolverDnssecConfigResponse

-- | The information about a configuration for DNSSEC validation.
[$sel:resolverDNSSECConfig:GetResolverDnssecConfigResponse'] :: GetResolverDnssecConfigResponse -> Maybe ResolverDnssecConfig

-- | The response's http status code.
[$sel:httpStatus:GetResolverDnssecConfigResponse'] :: GetResolverDnssecConfigResponse -> Int

-- | Create a value of <a>GetResolverDnssecConfigResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resolverDNSSECConfig:GetResolverDnssecConfigResponse'</a>,
--   <a>getResolverDnssecConfigResponse_resolverDNSSECConfig</a> - The
--   information about a configuration for DNSSEC validation.
--   
--   <a>$sel:httpStatus:GetResolverDnssecConfigResponse'</a>,
--   <a>getResolverDnssecConfigResponse_httpStatus</a> - The response's
--   http status code.
newGetResolverDnssecConfigResponse :: Int -> GetResolverDnssecConfigResponse

-- | The information about a configuration for DNSSEC validation.
getResolverDnssecConfigResponse_resolverDNSSECConfig :: Lens' GetResolverDnssecConfigResponse (Maybe ResolverDnssecConfig)

-- | The response's http status code.
getResolverDnssecConfigResponse_httpStatus :: Lens' GetResolverDnssecConfigResponse Int
instance GHC.Generics.Generic Network.AWS.Route53Resolver.GetResolverDnssecConfig.GetResolverDnssecConfig
instance GHC.Show.Show Network.AWS.Route53Resolver.GetResolverDnssecConfig.GetResolverDnssecConfig
instance GHC.Read.Read Network.AWS.Route53Resolver.GetResolverDnssecConfig.GetResolverDnssecConfig
instance GHC.Classes.Eq Network.AWS.Route53Resolver.GetResolverDnssecConfig.GetResolverDnssecConfig
instance GHC.Generics.Generic Network.AWS.Route53Resolver.GetResolverDnssecConfig.GetResolverDnssecConfigResponse
instance GHC.Show.Show Network.AWS.Route53Resolver.GetResolverDnssecConfig.GetResolverDnssecConfigResponse
instance GHC.Read.Read Network.AWS.Route53Resolver.GetResolverDnssecConfig.GetResolverDnssecConfigResponse
instance GHC.Classes.Eq Network.AWS.Route53Resolver.GetResolverDnssecConfig.GetResolverDnssecConfigResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53Resolver.GetResolverDnssecConfig.GetResolverDnssecConfig
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.GetResolverDnssecConfig.GetResolverDnssecConfigResponse
instance Data.Hashable.Class.Hashable Network.AWS.Route53Resolver.GetResolverDnssecConfig.GetResolverDnssecConfig
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.GetResolverDnssecConfig.GetResolverDnssecConfig
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53Resolver.GetResolverDnssecConfig.GetResolverDnssecConfig
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53Resolver.GetResolverDnssecConfig.GetResolverDnssecConfig
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53Resolver.GetResolverDnssecConfig.GetResolverDnssecConfig
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53Resolver.GetResolverDnssecConfig.GetResolverDnssecConfig


-- | Returns the Identity and Access Management (Amazon Web Services IAM)
--   policy for sharing the specified rule group. You can use the policy to
--   share the rule group using Resource Access Manager (RAM).
module Network.AWS.Route53Resolver.GetFirewallRuleGroupPolicy

-- | <i>See:</i> <a>newGetFirewallRuleGroupPolicy</a> smart constructor.
data GetFirewallRuleGroupPolicy
GetFirewallRuleGroupPolicy' :: Text -> GetFirewallRuleGroupPolicy

-- | The ARN (Amazon Resource Name) for the rule group.
[$sel:arn:GetFirewallRuleGroupPolicy'] :: GetFirewallRuleGroupPolicy -> Text

-- | Create a value of <a>GetFirewallRuleGroupPolicy</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:GetFirewallRuleGroupPolicy'</a>,
--   <a>getFirewallRuleGroupPolicy_arn</a> - The ARN (Amazon Resource Name)
--   for the rule group.
newGetFirewallRuleGroupPolicy :: Text -> GetFirewallRuleGroupPolicy

-- | The ARN (Amazon Resource Name) for the rule group.
getFirewallRuleGroupPolicy_arn :: Lens' GetFirewallRuleGroupPolicy Text

-- | <i>See:</i> <a>newGetFirewallRuleGroupPolicyResponse</a> smart
--   constructor.
data GetFirewallRuleGroupPolicyResponse
GetFirewallRuleGroupPolicyResponse' :: Maybe Text -> Int -> GetFirewallRuleGroupPolicyResponse

-- | The Identity and Access Management (Amazon Web Services IAM) policy
--   for sharing the specified rule group. You can use the policy to share
--   the rule group using Resource Access Manager (RAM).
[$sel:firewallRuleGroupPolicy:GetFirewallRuleGroupPolicyResponse'] :: GetFirewallRuleGroupPolicyResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetFirewallRuleGroupPolicyResponse'] :: GetFirewallRuleGroupPolicyResponse -> Int

-- | Create a value of <a>GetFirewallRuleGroupPolicyResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:firewallRuleGroupPolicy:GetFirewallRuleGroupPolicyResponse'</a>,
--   <a>getFirewallRuleGroupPolicyResponse_firewallRuleGroupPolicy</a> -
--   The Identity and Access Management (Amazon Web Services IAM) policy
--   for sharing the specified rule group. You can use the policy to share
--   the rule group using Resource Access Manager (RAM).
--   
--   <a>$sel:httpStatus:GetFirewallRuleGroupPolicyResponse'</a>,
--   <a>getFirewallRuleGroupPolicyResponse_httpStatus</a> - The response's
--   http status code.
newGetFirewallRuleGroupPolicyResponse :: Int -> GetFirewallRuleGroupPolicyResponse

-- | The Identity and Access Management (Amazon Web Services IAM) policy
--   for sharing the specified rule group. You can use the policy to share
--   the rule group using Resource Access Manager (RAM).
getFirewallRuleGroupPolicyResponse_firewallRuleGroupPolicy :: Lens' GetFirewallRuleGroupPolicyResponse (Maybe Text)

-- | The response's http status code.
getFirewallRuleGroupPolicyResponse_httpStatus :: Lens' GetFirewallRuleGroupPolicyResponse Int
instance GHC.Generics.Generic Network.AWS.Route53Resolver.GetFirewallRuleGroupPolicy.GetFirewallRuleGroupPolicy
instance GHC.Show.Show Network.AWS.Route53Resolver.GetFirewallRuleGroupPolicy.GetFirewallRuleGroupPolicy
instance GHC.Read.Read Network.AWS.Route53Resolver.GetFirewallRuleGroupPolicy.GetFirewallRuleGroupPolicy
instance GHC.Classes.Eq Network.AWS.Route53Resolver.GetFirewallRuleGroupPolicy.GetFirewallRuleGroupPolicy
instance GHC.Generics.Generic Network.AWS.Route53Resolver.GetFirewallRuleGroupPolicy.GetFirewallRuleGroupPolicyResponse
instance GHC.Show.Show Network.AWS.Route53Resolver.GetFirewallRuleGroupPolicy.GetFirewallRuleGroupPolicyResponse
instance GHC.Read.Read Network.AWS.Route53Resolver.GetFirewallRuleGroupPolicy.GetFirewallRuleGroupPolicyResponse
instance GHC.Classes.Eq Network.AWS.Route53Resolver.GetFirewallRuleGroupPolicy.GetFirewallRuleGroupPolicyResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53Resolver.GetFirewallRuleGroupPolicy.GetFirewallRuleGroupPolicy
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.GetFirewallRuleGroupPolicy.GetFirewallRuleGroupPolicyResponse
instance Data.Hashable.Class.Hashable Network.AWS.Route53Resolver.GetFirewallRuleGroupPolicy.GetFirewallRuleGroupPolicy
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.GetFirewallRuleGroupPolicy.GetFirewallRuleGroupPolicy
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53Resolver.GetFirewallRuleGroupPolicy.GetFirewallRuleGroupPolicy
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53Resolver.GetFirewallRuleGroupPolicy.GetFirewallRuleGroupPolicy
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53Resolver.GetFirewallRuleGroupPolicy.GetFirewallRuleGroupPolicy
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53Resolver.GetFirewallRuleGroupPolicy.GetFirewallRuleGroupPolicy


-- | Retrieves a firewall rule group association, which enables DNS
--   filtering for a VPC with one rule group. A VPC can have more than one
--   firewall rule group association, and a rule group can be associated
--   with more than one VPC.
module Network.AWS.Route53Resolver.GetFirewallRuleGroupAssociation

-- | <i>See:</i> <a>newGetFirewallRuleGroupAssociation</a> smart
--   constructor.
data GetFirewallRuleGroupAssociation
GetFirewallRuleGroupAssociation' :: Text -> GetFirewallRuleGroupAssociation

-- | The identifier of the FirewallRuleGroupAssociation.
[$sel:firewallRuleGroupAssociationId:GetFirewallRuleGroupAssociation'] :: GetFirewallRuleGroupAssociation -> Text

-- | Create a value of <a>GetFirewallRuleGroupAssociation</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:firewallRuleGroupAssociationId:GetFirewallRuleGroupAssociation'</a>,
--   <a>getFirewallRuleGroupAssociation_firewallRuleGroupAssociationId</a>
--   - The identifier of the FirewallRuleGroupAssociation.
newGetFirewallRuleGroupAssociation :: Text -> GetFirewallRuleGroupAssociation

-- | The identifier of the FirewallRuleGroupAssociation.
getFirewallRuleGroupAssociation_firewallRuleGroupAssociationId :: Lens' GetFirewallRuleGroupAssociation Text

-- | <i>See:</i> <a>newGetFirewallRuleGroupAssociationResponse</a> smart
--   constructor.
data GetFirewallRuleGroupAssociationResponse
GetFirewallRuleGroupAssociationResponse' :: Maybe FirewallRuleGroupAssociation -> Int -> GetFirewallRuleGroupAssociationResponse

-- | The association that you requested.
[$sel:firewallRuleGroupAssociation:GetFirewallRuleGroupAssociationResponse'] :: GetFirewallRuleGroupAssociationResponse -> Maybe FirewallRuleGroupAssociation

-- | The response's http status code.
[$sel:httpStatus:GetFirewallRuleGroupAssociationResponse'] :: GetFirewallRuleGroupAssociationResponse -> Int

-- | Create a value of <a>GetFirewallRuleGroupAssociationResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:firewallRuleGroupAssociation:GetFirewallRuleGroupAssociationResponse'</a>,
--   <a>getFirewallRuleGroupAssociationResponse_firewallRuleGroupAssociation</a>
--   - The association that you requested.
--   
--   <a>$sel:httpStatus:GetFirewallRuleGroupAssociationResponse'</a>,
--   <a>getFirewallRuleGroupAssociationResponse_httpStatus</a> - The
--   response's http status code.
newGetFirewallRuleGroupAssociationResponse :: Int -> GetFirewallRuleGroupAssociationResponse

-- | The association that you requested.
getFirewallRuleGroupAssociationResponse_firewallRuleGroupAssociation :: Lens' GetFirewallRuleGroupAssociationResponse (Maybe FirewallRuleGroupAssociation)

-- | The response's http status code.
getFirewallRuleGroupAssociationResponse_httpStatus :: Lens' GetFirewallRuleGroupAssociationResponse Int
instance GHC.Generics.Generic Network.AWS.Route53Resolver.GetFirewallRuleGroupAssociation.GetFirewallRuleGroupAssociation
instance GHC.Show.Show Network.AWS.Route53Resolver.GetFirewallRuleGroupAssociation.GetFirewallRuleGroupAssociation
instance GHC.Read.Read Network.AWS.Route53Resolver.GetFirewallRuleGroupAssociation.GetFirewallRuleGroupAssociation
instance GHC.Classes.Eq Network.AWS.Route53Resolver.GetFirewallRuleGroupAssociation.GetFirewallRuleGroupAssociation
instance GHC.Generics.Generic Network.AWS.Route53Resolver.GetFirewallRuleGroupAssociation.GetFirewallRuleGroupAssociationResponse
instance GHC.Show.Show Network.AWS.Route53Resolver.GetFirewallRuleGroupAssociation.GetFirewallRuleGroupAssociationResponse
instance GHC.Read.Read Network.AWS.Route53Resolver.GetFirewallRuleGroupAssociation.GetFirewallRuleGroupAssociationResponse
instance GHC.Classes.Eq Network.AWS.Route53Resolver.GetFirewallRuleGroupAssociation.GetFirewallRuleGroupAssociationResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53Resolver.GetFirewallRuleGroupAssociation.GetFirewallRuleGroupAssociation
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.GetFirewallRuleGroupAssociation.GetFirewallRuleGroupAssociationResponse
instance Data.Hashable.Class.Hashable Network.AWS.Route53Resolver.GetFirewallRuleGroupAssociation.GetFirewallRuleGroupAssociation
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.GetFirewallRuleGroupAssociation.GetFirewallRuleGroupAssociation
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53Resolver.GetFirewallRuleGroupAssociation.GetFirewallRuleGroupAssociation
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53Resolver.GetFirewallRuleGroupAssociation.GetFirewallRuleGroupAssociation
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53Resolver.GetFirewallRuleGroupAssociation.GetFirewallRuleGroupAssociation
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53Resolver.GetFirewallRuleGroupAssociation.GetFirewallRuleGroupAssociation


-- | Retrieves the specified firewall rule group.
module Network.AWS.Route53Resolver.GetFirewallRuleGroup

-- | <i>See:</i> <a>newGetFirewallRuleGroup</a> smart constructor.
data GetFirewallRuleGroup
GetFirewallRuleGroup' :: Text -> GetFirewallRuleGroup

-- | The unique identifier of the firewall rule group.
[$sel:firewallRuleGroupId:GetFirewallRuleGroup'] :: GetFirewallRuleGroup -> Text

-- | Create a value of <a>GetFirewallRuleGroup</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:firewallRuleGroupId:GetFirewallRuleGroup'</a>,
--   <a>getFirewallRuleGroup_firewallRuleGroupId</a> - The unique
--   identifier of the firewall rule group.
newGetFirewallRuleGroup :: Text -> GetFirewallRuleGroup

-- | The unique identifier of the firewall rule group.
getFirewallRuleGroup_firewallRuleGroupId :: Lens' GetFirewallRuleGroup Text

-- | <i>See:</i> <a>newGetFirewallRuleGroupResponse</a> smart constructor.
data GetFirewallRuleGroupResponse
GetFirewallRuleGroupResponse' :: Maybe FirewallRuleGroup -> Int -> GetFirewallRuleGroupResponse

-- | A collection of rules used to filter DNS network traffic.
[$sel:firewallRuleGroup:GetFirewallRuleGroupResponse'] :: GetFirewallRuleGroupResponse -> Maybe FirewallRuleGroup

-- | The response's http status code.
[$sel:httpStatus:GetFirewallRuleGroupResponse'] :: GetFirewallRuleGroupResponse -> Int

-- | Create a value of <a>GetFirewallRuleGroupResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:firewallRuleGroup:GetFirewallRuleGroupResponse'</a>,
--   <a>getFirewallRuleGroupResponse_firewallRuleGroup</a> - A collection
--   of rules used to filter DNS network traffic.
--   
--   <a>$sel:httpStatus:GetFirewallRuleGroupResponse'</a>,
--   <a>getFirewallRuleGroupResponse_httpStatus</a> - The response's http
--   status code.
newGetFirewallRuleGroupResponse :: Int -> GetFirewallRuleGroupResponse

-- | A collection of rules used to filter DNS network traffic.
getFirewallRuleGroupResponse_firewallRuleGroup :: Lens' GetFirewallRuleGroupResponse (Maybe FirewallRuleGroup)

-- | The response's http status code.
getFirewallRuleGroupResponse_httpStatus :: Lens' GetFirewallRuleGroupResponse Int
instance GHC.Generics.Generic Network.AWS.Route53Resolver.GetFirewallRuleGroup.GetFirewallRuleGroup
instance GHC.Show.Show Network.AWS.Route53Resolver.GetFirewallRuleGroup.GetFirewallRuleGroup
instance GHC.Read.Read Network.AWS.Route53Resolver.GetFirewallRuleGroup.GetFirewallRuleGroup
instance GHC.Classes.Eq Network.AWS.Route53Resolver.GetFirewallRuleGroup.GetFirewallRuleGroup
instance GHC.Generics.Generic Network.AWS.Route53Resolver.GetFirewallRuleGroup.GetFirewallRuleGroupResponse
instance GHC.Show.Show Network.AWS.Route53Resolver.GetFirewallRuleGroup.GetFirewallRuleGroupResponse
instance GHC.Read.Read Network.AWS.Route53Resolver.GetFirewallRuleGroup.GetFirewallRuleGroupResponse
instance GHC.Classes.Eq Network.AWS.Route53Resolver.GetFirewallRuleGroup.GetFirewallRuleGroupResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53Resolver.GetFirewallRuleGroup.GetFirewallRuleGroup
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.GetFirewallRuleGroup.GetFirewallRuleGroupResponse
instance Data.Hashable.Class.Hashable Network.AWS.Route53Resolver.GetFirewallRuleGroup.GetFirewallRuleGroup
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.GetFirewallRuleGroup.GetFirewallRuleGroup
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53Resolver.GetFirewallRuleGroup.GetFirewallRuleGroup
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53Resolver.GetFirewallRuleGroup.GetFirewallRuleGroup
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53Resolver.GetFirewallRuleGroup.GetFirewallRuleGroup
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53Resolver.GetFirewallRuleGroup.GetFirewallRuleGroup


-- | Retrieves the specified firewall domain list.
module Network.AWS.Route53Resolver.GetFirewallDomainList

-- | <i>See:</i> <a>newGetFirewallDomainList</a> smart constructor.
data GetFirewallDomainList
GetFirewallDomainList' :: Text -> GetFirewallDomainList

-- | The ID of the domain list.
[$sel:firewallDomainListId:GetFirewallDomainList'] :: GetFirewallDomainList -> Text

-- | Create a value of <a>GetFirewallDomainList</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:firewallDomainListId:GetFirewallDomainList'</a>,
--   <a>getFirewallDomainList_firewallDomainListId</a> - The ID of the
--   domain list.
newGetFirewallDomainList :: Text -> GetFirewallDomainList

-- | The ID of the domain list.
getFirewallDomainList_firewallDomainListId :: Lens' GetFirewallDomainList Text

-- | <i>See:</i> <a>newGetFirewallDomainListResponse</a> smart constructor.
data GetFirewallDomainListResponse
GetFirewallDomainListResponse' :: Maybe FirewallDomainList -> Int -> GetFirewallDomainListResponse

-- | The domain list that you requested.
[$sel:firewallDomainList:GetFirewallDomainListResponse'] :: GetFirewallDomainListResponse -> Maybe FirewallDomainList

-- | The response's http status code.
[$sel:httpStatus:GetFirewallDomainListResponse'] :: GetFirewallDomainListResponse -> Int

-- | Create a value of <a>GetFirewallDomainListResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:firewallDomainList:GetFirewallDomainListResponse'</a>,
--   <a>getFirewallDomainListResponse_firewallDomainList</a> - The domain
--   list that you requested.
--   
--   <a>$sel:httpStatus:GetFirewallDomainListResponse'</a>,
--   <a>getFirewallDomainListResponse_httpStatus</a> - The response's http
--   status code.
newGetFirewallDomainListResponse :: Int -> GetFirewallDomainListResponse

-- | The domain list that you requested.
getFirewallDomainListResponse_firewallDomainList :: Lens' GetFirewallDomainListResponse (Maybe FirewallDomainList)

-- | The response's http status code.
getFirewallDomainListResponse_httpStatus :: Lens' GetFirewallDomainListResponse Int
instance GHC.Generics.Generic Network.AWS.Route53Resolver.GetFirewallDomainList.GetFirewallDomainList
instance GHC.Show.Show Network.AWS.Route53Resolver.GetFirewallDomainList.GetFirewallDomainList
instance GHC.Read.Read Network.AWS.Route53Resolver.GetFirewallDomainList.GetFirewallDomainList
instance GHC.Classes.Eq Network.AWS.Route53Resolver.GetFirewallDomainList.GetFirewallDomainList
instance GHC.Generics.Generic Network.AWS.Route53Resolver.GetFirewallDomainList.GetFirewallDomainListResponse
instance GHC.Show.Show Network.AWS.Route53Resolver.GetFirewallDomainList.GetFirewallDomainListResponse
instance GHC.Read.Read Network.AWS.Route53Resolver.GetFirewallDomainList.GetFirewallDomainListResponse
instance GHC.Classes.Eq Network.AWS.Route53Resolver.GetFirewallDomainList.GetFirewallDomainListResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53Resolver.GetFirewallDomainList.GetFirewallDomainList
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.GetFirewallDomainList.GetFirewallDomainListResponse
instance Data.Hashable.Class.Hashable Network.AWS.Route53Resolver.GetFirewallDomainList.GetFirewallDomainList
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.GetFirewallDomainList.GetFirewallDomainList
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53Resolver.GetFirewallDomainList.GetFirewallDomainList
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53Resolver.GetFirewallDomainList.GetFirewallDomainList
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53Resolver.GetFirewallDomainList.GetFirewallDomainList
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53Resolver.GetFirewallDomainList.GetFirewallDomainList


-- | Retrieves the configuration of the firewall behavior provided by DNS
--   Firewall for a single VPC from Amazon Virtual Private Cloud (Amazon
--   VPC).
module Network.AWS.Route53Resolver.GetFirewallConfig

-- | <i>See:</i> <a>newGetFirewallConfig</a> smart constructor.
data GetFirewallConfig
GetFirewallConfig' :: Text -> GetFirewallConfig

-- | The ID of the VPC from Amazon VPC that the configuration is for.
[$sel:resourceId:GetFirewallConfig'] :: GetFirewallConfig -> Text

-- | Create a value of <a>GetFirewallConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceId:GetFirewallConfig'</a>,
--   <a>getFirewallConfig_resourceId</a> - The ID of the VPC from Amazon
--   VPC that the configuration is for.
newGetFirewallConfig :: Text -> GetFirewallConfig

-- | The ID of the VPC from Amazon VPC that the configuration is for.
getFirewallConfig_resourceId :: Lens' GetFirewallConfig Text

-- | <i>See:</i> <a>newGetFirewallConfigResponse</a> smart constructor.
data GetFirewallConfigResponse
GetFirewallConfigResponse' :: Maybe FirewallConfig -> Int -> GetFirewallConfigResponse

-- | Configuration of the firewall behavior provided by DNS Firewall for a
--   single VPC from AmazonVPC.
[$sel:firewallConfig:GetFirewallConfigResponse'] :: GetFirewallConfigResponse -> Maybe FirewallConfig

-- | The response's http status code.
[$sel:httpStatus:GetFirewallConfigResponse'] :: GetFirewallConfigResponse -> Int

-- | Create a value of <a>GetFirewallConfigResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:firewallConfig:GetFirewallConfigResponse'</a>,
--   <a>getFirewallConfigResponse_firewallConfig</a> - Configuration of the
--   firewall behavior provided by DNS Firewall for a single VPC from
--   AmazonVPC.
--   
--   <a>$sel:httpStatus:GetFirewallConfigResponse'</a>,
--   <a>getFirewallConfigResponse_httpStatus</a> - The response's http
--   status code.
newGetFirewallConfigResponse :: Int -> GetFirewallConfigResponse

-- | Configuration of the firewall behavior provided by DNS Firewall for a
--   single VPC from AmazonVPC.
getFirewallConfigResponse_firewallConfig :: Lens' GetFirewallConfigResponse (Maybe FirewallConfig)

-- | The response's http status code.
getFirewallConfigResponse_httpStatus :: Lens' GetFirewallConfigResponse Int
instance GHC.Generics.Generic Network.AWS.Route53Resolver.GetFirewallConfig.GetFirewallConfig
instance GHC.Show.Show Network.AWS.Route53Resolver.GetFirewallConfig.GetFirewallConfig
instance GHC.Read.Read Network.AWS.Route53Resolver.GetFirewallConfig.GetFirewallConfig
instance GHC.Classes.Eq Network.AWS.Route53Resolver.GetFirewallConfig.GetFirewallConfig
instance GHC.Generics.Generic Network.AWS.Route53Resolver.GetFirewallConfig.GetFirewallConfigResponse
instance GHC.Show.Show Network.AWS.Route53Resolver.GetFirewallConfig.GetFirewallConfigResponse
instance GHC.Read.Read Network.AWS.Route53Resolver.GetFirewallConfig.GetFirewallConfigResponse
instance GHC.Classes.Eq Network.AWS.Route53Resolver.GetFirewallConfig.GetFirewallConfigResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53Resolver.GetFirewallConfig.GetFirewallConfig
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.GetFirewallConfig.GetFirewallConfigResponse
instance Data.Hashable.Class.Hashable Network.AWS.Route53Resolver.GetFirewallConfig.GetFirewallConfig
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.GetFirewallConfig.GetFirewallConfig
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53Resolver.GetFirewallConfig.GetFirewallConfig
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53Resolver.GetFirewallConfig.GetFirewallConfig
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53Resolver.GetFirewallConfig.GetFirewallConfig
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53Resolver.GetFirewallConfig.GetFirewallConfig


-- | Removes the association between a specified Resolver rule and a
--   specified VPC.
--   
--   If you disassociate a Resolver rule from a VPC, Resolver stops
--   forwarding DNS queries for the domain name that you specified in the
--   Resolver rule.
module Network.AWS.Route53Resolver.DisassociateResolverRule

-- | <i>See:</i> <a>newDisassociateResolverRule</a> smart constructor.
data DisassociateResolverRule
DisassociateResolverRule' :: Text -> Text -> DisassociateResolverRule

-- | The ID of the VPC that you want to disassociate the Resolver rule
--   from.
[$sel:vPCId:DisassociateResolverRule'] :: DisassociateResolverRule -> Text

-- | The ID of the Resolver rule that you want to disassociate from the
--   specified VPC.
[$sel:resolverRuleId:DisassociateResolverRule'] :: DisassociateResolverRule -> Text

-- | Create a value of <a>DisassociateResolverRule</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:vPCId:DisassociateResolverRule'</a>,
--   <a>disassociateResolverRule_vPCId</a> - The ID of the VPC that you
--   want to disassociate the Resolver rule from.
--   
--   <a>$sel:resolverRuleId:DisassociateResolverRule'</a>,
--   <a>disassociateResolverRule_resolverRuleId</a> - The ID of the
--   Resolver rule that you want to disassociate from the specified VPC.
newDisassociateResolverRule :: Text -> Text -> DisassociateResolverRule

-- | The ID of the VPC that you want to disassociate the Resolver rule
--   from.
disassociateResolverRule_vPCId :: Lens' DisassociateResolverRule Text

-- | The ID of the Resolver rule that you want to disassociate from the
--   specified VPC.
disassociateResolverRule_resolverRuleId :: Lens' DisassociateResolverRule Text

-- | <i>See:</i> <a>newDisassociateResolverRuleResponse</a> smart
--   constructor.
data DisassociateResolverRuleResponse
DisassociateResolverRuleResponse' :: Maybe ResolverRuleAssociation -> Int -> DisassociateResolverRuleResponse

-- | Information about the <tt>DisassociateResolverRule</tt> request,
--   including the status of the request.
[$sel:resolverRuleAssociation:DisassociateResolverRuleResponse'] :: DisassociateResolverRuleResponse -> Maybe ResolverRuleAssociation

-- | The response's http status code.
[$sel:httpStatus:DisassociateResolverRuleResponse'] :: DisassociateResolverRuleResponse -> Int

-- | Create a value of <a>DisassociateResolverRuleResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resolverRuleAssociation:DisassociateResolverRuleResponse'</a>,
--   <a>disassociateResolverRuleResponse_resolverRuleAssociation</a> -
--   Information about the <tt>DisassociateResolverRule</tt> request,
--   including the status of the request.
--   
--   <a>$sel:httpStatus:DisassociateResolverRuleResponse'</a>,
--   <a>disassociateResolverRuleResponse_httpStatus</a> - The response's
--   http status code.
newDisassociateResolverRuleResponse :: Int -> DisassociateResolverRuleResponse

-- | Information about the <tt>DisassociateResolverRule</tt> request,
--   including the status of the request.
disassociateResolverRuleResponse_resolverRuleAssociation :: Lens' DisassociateResolverRuleResponse (Maybe ResolverRuleAssociation)

-- | The response's http status code.
disassociateResolverRuleResponse_httpStatus :: Lens' DisassociateResolverRuleResponse Int
instance GHC.Generics.Generic Network.AWS.Route53Resolver.DisassociateResolverRule.DisassociateResolverRule
instance GHC.Show.Show Network.AWS.Route53Resolver.DisassociateResolverRule.DisassociateResolverRule
instance GHC.Read.Read Network.AWS.Route53Resolver.DisassociateResolverRule.DisassociateResolverRule
instance GHC.Classes.Eq Network.AWS.Route53Resolver.DisassociateResolverRule.DisassociateResolverRule
instance GHC.Generics.Generic Network.AWS.Route53Resolver.DisassociateResolverRule.DisassociateResolverRuleResponse
instance GHC.Show.Show Network.AWS.Route53Resolver.DisassociateResolverRule.DisassociateResolverRuleResponse
instance GHC.Read.Read Network.AWS.Route53Resolver.DisassociateResolverRule.DisassociateResolverRuleResponse
instance GHC.Classes.Eq Network.AWS.Route53Resolver.DisassociateResolverRule.DisassociateResolverRuleResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53Resolver.DisassociateResolverRule.DisassociateResolverRule
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.DisassociateResolverRule.DisassociateResolverRuleResponse
instance Data.Hashable.Class.Hashable Network.AWS.Route53Resolver.DisassociateResolverRule.DisassociateResolverRule
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.DisassociateResolverRule.DisassociateResolverRule
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53Resolver.DisassociateResolverRule.DisassociateResolverRule
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53Resolver.DisassociateResolverRule.DisassociateResolverRule
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53Resolver.DisassociateResolverRule.DisassociateResolverRule
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53Resolver.DisassociateResolverRule.DisassociateResolverRule


-- | Disassociates a VPC from a query logging configuration.
--   
--   Before you can delete a query logging configuration, you must first
--   disassociate all VPCs from the configuration. If you used Resource
--   Access Manager (RAM) to share a query logging configuration with other
--   accounts, VPCs can be disassociated from the configuration in the
--   following ways:
--   
--   <ul>
--   <li>The accounts that you shared the configuration with can
--   disassociate VPCs from the configuration.</li>
--   <li>You can stop sharing the configuration.</li>
--   </ul>
module Network.AWS.Route53Resolver.DisassociateResolverQueryLogConfig

-- | <i>See:</i> <a>newDisassociateResolverQueryLogConfig</a> smart
--   constructor.
data DisassociateResolverQueryLogConfig
DisassociateResolverQueryLogConfig' :: Text -> Text -> DisassociateResolverQueryLogConfig

-- | The ID of the query logging configuration that you want to
--   disassociate a specified VPC from.
[$sel:resolverQueryLogConfigId:DisassociateResolverQueryLogConfig'] :: DisassociateResolverQueryLogConfig -> Text

-- | The ID of the Amazon VPC that you want to disassociate from a
--   specified query logging configuration.
[$sel:resourceId:DisassociateResolverQueryLogConfig'] :: DisassociateResolverQueryLogConfig -> Text

-- | Create a value of <a>DisassociateResolverQueryLogConfig</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:resolverQueryLogConfigId:DisassociateResolverQueryLogConfig'</a>,
--   <a>disassociateResolverQueryLogConfig_resolverQueryLogConfigId</a> -
--   The ID of the query logging configuration that you want to
--   disassociate a specified VPC from.
--   
--   <a>$sel:resourceId:DisassociateResolverQueryLogConfig'</a>,
--   <a>disassociateResolverQueryLogConfig_resourceId</a> - The ID of the
--   Amazon VPC that you want to disassociate from a specified query
--   logging configuration.
newDisassociateResolverQueryLogConfig :: Text -> Text -> DisassociateResolverQueryLogConfig

-- | The ID of the query logging configuration that you want to
--   disassociate a specified VPC from.
disassociateResolverQueryLogConfig_resolverQueryLogConfigId :: Lens' DisassociateResolverQueryLogConfig Text

-- | The ID of the Amazon VPC that you want to disassociate from a
--   specified query logging configuration.
disassociateResolverQueryLogConfig_resourceId :: Lens' DisassociateResolverQueryLogConfig Text

-- | <i>See:</i> <a>newDisassociateResolverQueryLogConfigResponse</a> smart
--   constructor.
data DisassociateResolverQueryLogConfigResponse
DisassociateResolverQueryLogConfigResponse' :: Maybe ResolverQueryLogConfigAssociation -> Int -> DisassociateResolverQueryLogConfigResponse

-- | A complex type that contains settings for the association that you
--   deleted between an Amazon VPC and a query logging configuration.
[$sel:resolverQueryLogConfigAssociation:DisassociateResolverQueryLogConfigResponse'] :: DisassociateResolverQueryLogConfigResponse -> Maybe ResolverQueryLogConfigAssociation

-- | The response's http status code.
[$sel:httpStatus:DisassociateResolverQueryLogConfigResponse'] :: DisassociateResolverQueryLogConfigResponse -> Int

-- | Create a value of <a>DisassociateResolverQueryLogConfigResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:resolverQueryLogConfigAssociation:DisassociateResolverQueryLogConfigResponse'</a>,
--   <a>disassociateResolverQueryLogConfigResponse_resolverQueryLogConfigAssociation</a>
--   - A complex type that contains settings for the association that you
--   deleted between an Amazon VPC and a query logging configuration.
--   
--   <a>$sel:httpStatus:DisassociateResolverQueryLogConfigResponse'</a>,
--   <a>disassociateResolverQueryLogConfigResponse_httpStatus</a> - The
--   response's http status code.
newDisassociateResolverQueryLogConfigResponse :: Int -> DisassociateResolverQueryLogConfigResponse

-- | A complex type that contains settings for the association that you
--   deleted between an Amazon VPC and a query logging configuration.
disassociateResolverQueryLogConfigResponse_resolverQueryLogConfigAssociation :: Lens' DisassociateResolverQueryLogConfigResponse (Maybe ResolverQueryLogConfigAssociation)

-- | The response's http status code.
disassociateResolverQueryLogConfigResponse_httpStatus :: Lens' DisassociateResolverQueryLogConfigResponse Int
instance GHC.Generics.Generic Network.AWS.Route53Resolver.DisassociateResolverQueryLogConfig.DisassociateResolverQueryLogConfig
instance GHC.Show.Show Network.AWS.Route53Resolver.DisassociateResolverQueryLogConfig.DisassociateResolverQueryLogConfig
instance GHC.Read.Read Network.AWS.Route53Resolver.DisassociateResolverQueryLogConfig.DisassociateResolverQueryLogConfig
instance GHC.Classes.Eq Network.AWS.Route53Resolver.DisassociateResolverQueryLogConfig.DisassociateResolverQueryLogConfig
instance GHC.Generics.Generic Network.AWS.Route53Resolver.DisassociateResolverQueryLogConfig.DisassociateResolverQueryLogConfigResponse
instance GHC.Show.Show Network.AWS.Route53Resolver.DisassociateResolverQueryLogConfig.DisassociateResolverQueryLogConfigResponse
instance GHC.Read.Read Network.AWS.Route53Resolver.DisassociateResolverQueryLogConfig.DisassociateResolverQueryLogConfigResponse
instance GHC.Classes.Eq Network.AWS.Route53Resolver.DisassociateResolverQueryLogConfig.DisassociateResolverQueryLogConfigResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53Resolver.DisassociateResolverQueryLogConfig.DisassociateResolverQueryLogConfig
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.DisassociateResolverQueryLogConfig.DisassociateResolverQueryLogConfigResponse
instance Data.Hashable.Class.Hashable Network.AWS.Route53Resolver.DisassociateResolverQueryLogConfig.DisassociateResolverQueryLogConfig
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.DisassociateResolverQueryLogConfig.DisassociateResolverQueryLogConfig
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53Resolver.DisassociateResolverQueryLogConfig.DisassociateResolverQueryLogConfig
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53Resolver.DisassociateResolverQueryLogConfig.DisassociateResolverQueryLogConfig
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53Resolver.DisassociateResolverQueryLogConfig.DisassociateResolverQueryLogConfig
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53Resolver.DisassociateResolverQueryLogConfig.DisassociateResolverQueryLogConfig


-- | Removes IP addresses from an inbound or an outbound Resolver endpoint.
--   If you want to remove more than one IP address, submit one
--   <tt>DisassociateResolverEndpointIpAddress</tt> request for each IP
--   address.
--   
--   To add an IP address to an endpoint, see
--   <a>AssociateResolverEndpointIpAddress</a>.
module Network.AWS.Route53Resolver.DisassociateResolverEndpointIpAddress

-- | <i>See:</i> <a>newDisassociateResolverEndpointIpAddress</a> smart
--   constructor.
data DisassociateResolverEndpointIpAddress
DisassociateResolverEndpointIpAddress' :: Text -> IpAddressUpdate -> DisassociateResolverEndpointIpAddress

-- | The ID of the Resolver endpoint that you want to disassociate an IP
--   address from.
[$sel:resolverEndpointId:DisassociateResolverEndpointIpAddress'] :: DisassociateResolverEndpointIpAddress -> Text

-- | The IPv4 address that you want to remove from a Resolver endpoint.
[$sel:ipAddress:DisassociateResolverEndpointIpAddress'] :: DisassociateResolverEndpointIpAddress -> IpAddressUpdate

-- | Create a value of <a>DisassociateResolverEndpointIpAddress</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resolverEndpointId:DisassociateResolverEndpointIpAddress'</a>,
--   <a>disassociateResolverEndpointIpAddress_resolverEndpointId</a> - The
--   ID of the Resolver endpoint that you want to disassociate an IP
--   address from.
--   
--   <a>$sel:ipAddress:DisassociateResolverEndpointIpAddress'</a>,
--   <a>disassociateResolverEndpointIpAddress_ipAddress</a> - The IPv4
--   address that you want to remove from a Resolver endpoint.
newDisassociateResolverEndpointIpAddress :: Text -> IpAddressUpdate -> DisassociateResolverEndpointIpAddress

-- | The ID of the Resolver endpoint that you want to disassociate an IP
--   address from.
disassociateResolverEndpointIpAddress_resolverEndpointId :: Lens' DisassociateResolverEndpointIpAddress Text

-- | The IPv4 address that you want to remove from a Resolver endpoint.
disassociateResolverEndpointIpAddress_ipAddress :: Lens' DisassociateResolverEndpointIpAddress IpAddressUpdate

-- | <i>See:</i> <a>newDisassociateResolverEndpointIpAddressResponse</a>
--   smart constructor.
data DisassociateResolverEndpointIpAddressResponse
DisassociateResolverEndpointIpAddressResponse' :: Maybe ResolverEndpoint -> Int -> DisassociateResolverEndpointIpAddressResponse

-- | The response to an <tt>DisassociateResolverEndpointIpAddress</tt>
--   request.
[$sel:resolverEndpoint:DisassociateResolverEndpointIpAddressResponse'] :: DisassociateResolverEndpointIpAddressResponse -> Maybe ResolverEndpoint

-- | The response's http status code.
[$sel:httpStatus:DisassociateResolverEndpointIpAddressResponse'] :: DisassociateResolverEndpointIpAddressResponse -> Int

-- | Create a value of <a>DisassociateResolverEndpointIpAddressResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:resolverEndpoint:DisassociateResolverEndpointIpAddressResponse'</a>,
--   <a>disassociateResolverEndpointIpAddressResponse_resolverEndpoint</a>
--   - The response to an <tt>DisassociateResolverEndpointIpAddress</tt>
--   request.
--   
--   <a>$sel:httpStatus:DisassociateResolverEndpointIpAddressResponse'</a>,
--   <a>disassociateResolverEndpointIpAddressResponse_httpStatus</a> - The
--   response's http status code.
newDisassociateResolverEndpointIpAddressResponse :: Int -> DisassociateResolverEndpointIpAddressResponse

-- | The response to an <tt>DisassociateResolverEndpointIpAddress</tt>
--   request.
disassociateResolverEndpointIpAddressResponse_resolverEndpoint :: Lens' DisassociateResolverEndpointIpAddressResponse (Maybe ResolverEndpoint)

-- | The response's http status code.
disassociateResolverEndpointIpAddressResponse_httpStatus :: Lens' DisassociateResolverEndpointIpAddressResponse Int
instance GHC.Generics.Generic Network.AWS.Route53Resolver.DisassociateResolverEndpointIpAddress.DisassociateResolverEndpointIpAddress
instance GHC.Show.Show Network.AWS.Route53Resolver.DisassociateResolverEndpointIpAddress.DisassociateResolverEndpointIpAddress
instance GHC.Read.Read Network.AWS.Route53Resolver.DisassociateResolverEndpointIpAddress.DisassociateResolverEndpointIpAddress
instance GHC.Classes.Eq Network.AWS.Route53Resolver.DisassociateResolverEndpointIpAddress.DisassociateResolverEndpointIpAddress
instance GHC.Generics.Generic Network.AWS.Route53Resolver.DisassociateResolverEndpointIpAddress.DisassociateResolverEndpointIpAddressResponse
instance GHC.Show.Show Network.AWS.Route53Resolver.DisassociateResolverEndpointIpAddress.DisassociateResolverEndpointIpAddressResponse
instance GHC.Read.Read Network.AWS.Route53Resolver.DisassociateResolverEndpointIpAddress.DisassociateResolverEndpointIpAddressResponse
instance GHC.Classes.Eq Network.AWS.Route53Resolver.DisassociateResolverEndpointIpAddress.DisassociateResolverEndpointIpAddressResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53Resolver.DisassociateResolverEndpointIpAddress.DisassociateResolverEndpointIpAddress
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.DisassociateResolverEndpointIpAddress.DisassociateResolverEndpointIpAddressResponse
instance Data.Hashable.Class.Hashable Network.AWS.Route53Resolver.DisassociateResolverEndpointIpAddress.DisassociateResolverEndpointIpAddress
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.DisassociateResolverEndpointIpAddress.DisassociateResolverEndpointIpAddress
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53Resolver.DisassociateResolverEndpointIpAddress.DisassociateResolverEndpointIpAddress
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53Resolver.DisassociateResolverEndpointIpAddress.DisassociateResolverEndpointIpAddress
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53Resolver.DisassociateResolverEndpointIpAddress.DisassociateResolverEndpointIpAddress
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53Resolver.DisassociateResolverEndpointIpAddress.DisassociateResolverEndpointIpAddress


-- | Disassociates a FirewallRuleGroup from a VPC, to remove DNS filtering
--   from the VPC.
module Network.AWS.Route53Resolver.DisassociateFirewallRuleGroup

-- | <i>See:</i> <a>newDisassociateFirewallRuleGroup</a> smart constructor.
data DisassociateFirewallRuleGroup
DisassociateFirewallRuleGroup' :: Text -> DisassociateFirewallRuleGroup

-- | The identifier of the FirewallRuleGroupAssociation.
[$sel:firewallRuleGroupAssociationId:DisassociateFirewallRuleGroup'] :: DisassociateFirewallRuleGroup -> Text

-- | Create a value of <a>DisassociateFirewallRuleGroup</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:firewallRuleGroupAssociationId:DisassociateFirewallRuleGroup'</a>,
--   <a>disassociateFirewallRuleGroup_firewallRuleGroupAssociationId</a> -
--   The identifier of the FirewallRuleGroupAssociation.
newDisassociateFirewallRuleGroup :: Text -> DisassociateFirewallRuleGroup

-- | The identifier of the FirewallRuleGroupAssociation.
disassociateFirewallRuleGroup_firewallRuleGroupAssociationId :: Lens' DisassociateFirewallRuleGroup Text

-- | <i>See:</i> <a>newDisassociateFirewallRuleGroupResponse</a> smart
--   constructor.
data DisassociateFirewallRuleGroupResponse
DisassociateFirewallRuleGroupResponse' :: Maybe FirewallRuleGroupAssociation -> Int -> DisassociateFirewallRuleGroupResponse

-- | The firewall rule group association that you just removed.
[$sel:firewallRuleGroupAssociation:DisassociateFirewallRuleGroupResponse'] :: DisassociateFirewallRuleGroupResponse -> Maybe FirewallRuleGroupAssociation

-- | The response's http status code.
[$sel:httpStatus:DisassociateFirewallRuleGroupResponse'] :: DisassociateFirewallRuleGroupResponse -> Int

-- | Create a value of <a>DisassociateFirewallRuleGroupResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:firewallRuleGroupAssociation:DisassociateFirewallRuleGroupResponse'</a>,
--   <a>disassociateFirewallRuleGroupResponse_firewallRuleGroupAssociation</a>
--   - The firewall rule group association that you just removed.
--   
--   <a>$sel:httpStatus:DisassociateFirewallRuleGroupResponse'</a>,
--   <a>disassociateFirewallRuleGroupResponse_httpStatus</a> - The
--   response's http status code.
newDisassociateFirewallRuleGroupResponse :: Int -> DisassociateFirewallRuleGroupResponse

-- | The firewall rule group association that you just removed.
disassociateFirewallRuleGroupResponse_firewallRuleGroupAssociation :: Lens' DisassociateFirewallRuleGroupResponse (Maybe FirewallRuleGroupAssociation)

-- | The response's http status code.
disassociateFirewallRuleGroupResponse_httpStatus :: Lens' DisassociateFirewallRuleGroupResponse Int
instance GHC.Generics.Generic Network.AWS.Route53Resolver.DisassociateFirewallRuleGroup.DisassociateFirewallRuleGroup
instance GHC.Show.Show Network.AWS.Route53Resolver.DisassociateFirewallRuleGroup.DisassociateFirewallRuleGroup
instance GHC.Read.Read Network.AWS.Route53Resolver.DisassociateFirewallRuleGroup.DisassociateFirewallRuleGroup
instance GHC.Classes.Eq Network.AWS.Route53Resolver.DisassociateFirewallRuleGroup.DisassociateFirewallRuleGroup
instance GHC.Generics.Generic Network.AWS.Route53Resolver.DisassociateFirewallRuleGroup.DisassociateFirewallRuleGroupResponse
instance GHC.Show.Show Network.AWS.Route53Resolver.DisassociateFirewallRuleGroup.DisassociateFirewallRuleGroupResponse
instance GHC.Read.Read Network.AWS.Route53Resolver.DisassociateFirewallRuleGroup.DisassociateFirewallRuleGroupResponse
instance GHC.Classes.Eq Network.AWS.Route53Resolver.DisassociateFirewallRuleGroup.DisassociateFirewallRuleGroupResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53Resolver.DisassociateFirewallRuleGroup.DisassociateFirewallRuleGroup
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.DisassociateFirewallRuleGroup.DisassociateFirewallRuleGroupResponse
instance Data.Hashable.Class.Hashable Network.AWS.Route53Resolver.DisassociateFirewallRuleGroup.DisassociateFirewallRuleGroup
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.DisassociateFirewallRuleGroup.DisassociateFirewallRuleGroup
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53Resolver.DisassociateFirewallRuleGroup.DisassociateFirewallRuleGroup
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53Resolver.DisassociateFirewallRuleGroup.DisassociateFirewallRuleGroup
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53Resolver.DisassociateFirewallRuleGroup.DisassociateFirewallRuleGroup
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53Resolver.DisassociateFirewallRuleGroup.DisassociateFirewallRuleGroup


-- | Deletes a Resolver rule. Before you can delete a Resolver rule, you
--   must disassociate it from all the VPCs that you associated the
--   Resolver rule with. For more information, see
--   <a>DisassociateResolverRule</a>.
module Network.AWS.Route53Resolver.DeleteResolverRule

-- | <i>See:</i> <a>newDeleteResolverRule</a> smart constructor.
data DeleteResolverRule
DeleteResolverRule' :: Text -> DeleteResolverRule

-- | The ID of the Resolver rule that you want to delete.
[$sel:resolverRuleId:DeleteResolverRule'] :: DeleteResolverRule -> Text

-- | Create a value of <a>DeleteResolverRule</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resolverRuleId:DeleteResolverRule'</a>,
--   <a>deleteResolverRule_resolverRuleId</a> - The ID of the Resolver rule
--   that you want to delete.
newDeleteResolverRule :: Text -> DeleteResolverRule

-- | The ID of the Resolver rule that you want to delete.
deleteResolverRule_resolverRuleId :: Lens' DeleteResolverRule Text

-- | <i>See:</i> <a>newDeleteResolverRuleResponse</a> smart constructor.
data DeleteResolverRuleResponse
DeleteResolverRuleResponse' :: Maybe ResolverRule -> Int -> DeleteResolverRuleResponse

-- | Information about the <tt>DeleteResolverRule</tt> request, including
--   the status of the request.
[$sel:resolverRule:DeleteResolverRuleResponse'] :: DeleteResolverRuleResponse -> Maybe ResolverRule

-- | The response's http status code.
[$sel:httpStatus:DeleteResolverRuleResponse'] :: DeleteResolverRuleResponse -> Int

-- | Create a value of <a>DeleteResolverRuleResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resolverRule:DeleteResolverRuleResponse'</a>,
--   <a>deleteResolverRuleResponse_resolverRule</a> - Information about the
--   <tt>DeleteResolverRule</tt> request, including the status of the
--   request.
--   
--   <a>$sel:httpStatus:DeleteResolverRuleResponse'</a>,
--   <a>deleteResolverRuleResponse_httpStatus</a> - The response's http
--   status code.
newDeleteResolverRuleResponse :: Int -> DeleteResolverRuleResponse

-- | Information about the <tt>DeleteResolverRule</tt> request, including
--   the status of the request.
deleteResolverRuleResponse_resolverRule :: Lens' DeleteResolverRuleResponse (Maybe ResolverRule)

-- | The response's http status code.
deleteResolverRuleResponse_httpStatus :: Lens' DeleteResolverRuleResponse Int
instance GHC.Generics.Generic Network.AWS.Route53Resolver.DeleteResolverRule.DeleteResolverRule
instance GHC.Show.Show Network.AWS.Route53Resolver.DeleteResolverRule.DeleteResolverRule
instance GHC.Read.Read Network.AWS.Route53Resolver.DeleteResolverRule.DeleteResolverRule
instance GHC.Classes.Eq Network.AWS.Route53Resolver.DeleteResolverRule.DeleteResolverRule
instance GHC.Generics.Generic Network.AWS.Route53Resolver.DeleteResolverRule.DeleteResolverRuleResponse
instance GHC.Show.Show Network.AWS.Route53Resolver.DeleteResolverRule.DeleteResolverRuleResponse
instance GHC.Read.Read Network.AWS.Route53Resolver.DeleteResolverRule.DeleteResolverRuleResponse
instance GHC.Classes.Eq Network.AWS.Route53Resolver.DeleteResolverRule.DeleteResolverRuleResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53Resolver.DeleteResolverRule.DeleteResolverRule
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.DeleteResolverRule.DeleteResolverRuleResponse
instance Data.Hashable.Class.Hashable Network.AWS.Route53Resolver.DeleteResolverRule.DeleteResolverRule
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.DeleteResolverRule.DeleteResolverRule
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53Resolver.DeleteResolverRule.DeleteResolverRule
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53Resolver.DeleteResolverRule.DeleteResolverRule
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53Resolver.DeleteResolverRule.DeleteResolverRule
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53Resolver.DeleteResolverRule.DeleteResolverRule


-- | Deletes a query logging configuration. When you delete a
--   configuration, Resolver stops logging DNS queries for all of the
--   Amazon VPCs that are associated with the configuration. This also
--   applies if the query logging configuration is shared with other Amazon
--   Web Services accounts, and the other accounts have associated VPCs
--   with the shared configuration.
--   
--   Before you can delete a query logging configuration, you must first
--   disassociate all VPCs from the configuration. See
--   <a>DisassociateResolverQueryLogConfig</a>.
--   
--   If you used Resource Access Manager (RAM) to share a query logging
--   configuration with other accounts, you must stop sharing the
--   configuration before you can delete a configuration. The accounts that
--   you shared the configuration with can first disassociate VPCs that
--   they associated with the configuration, but that's not necessary. If
--   you stop sharing the configuration, those VPCs are automatically
--   disassociated from the configuration.
module Network.AWS.Route53Resolver.DeleteResolverQueryLogConfig

-- | <i>See:</i> <a>newDeleteResolverQueryLogConfig</a> smart constructor.
data DeleteResolverQueryLogConfig
DeleteResolverQueryLogConfig' :: Text -> DeleteResolverQueryLogConfig

-- | The ID of the query logging configuration that you want to delete.
[$sel:resolverQueryLogConfigId:DeleteResolverQueryLogConfig'] :: DeleteResolverQueryLogConfig -> Text

-- | Create a value of <a>DeleteResolverQueryLogConfig</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resolverQueryLogConfigId:DeleteResolverQueryLogConfig'</a>,
--   <a>deleteResolverQueryLogConfig_resolverQueryLogConfigId</a> - The ID
--   of the query logging configuration that you want to delete.
newDeleteResolverQueryLogConfig :: Text -> DeleteResolverQueryLogConfig

-- | The ID of the query logging configuration that you want to delete.
deleteResolverQueryLogConfig_resolverQueryLogConfigId :: Lens' DeleteResolverQueryLogConfig Text

-- | <i>See:</i> <a>newDeleteResolverQueryLogConfigResponse</a> smart
--   constructor.
data DeleteResolverQueryLogConfigResponse
DeleteResolverQueryLogConfigResponse' :: Maybe ResolverQueryLogConfig -> Int -> DeleteResolverQueryLogConfigResponse

-- | Information about the query logging configuration that you deleted,
--   including the status of the request.
[$sel:resolverQueryLogConfig:DeleteResolverQueryLogConfigResponse'] :: DeleteResolverQueryLogConfigResponse -> Maybe ResolverQueryLogConfig

-- | The response's http status code.
[$sel:httpStatus:DeleteResolverQueryLogConfigResponse'] :: DeleteResolverQueryLogConfigResponse -> Int

-- | Create a value of <a>DeleteResolverQueryLogConfigResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:resolverQueryLogConfig:DeleteResolverQueryLogConfigResponse'</a>,
--   <a>deleteResolverQueryLogConfigResponse_resolverQueryLogConfig</a> -
--   Information about the query logging configuration that you deleted,
--   including the status of the request.
--   
--   <a>$sel:httpStatus:DeleteResolverQueryLogConfigResponse'</a>,
--   <a>deleteResolverQueryLogConfigResponse_httpStatus</a> - The
--   response's http status code.
newDeleteResolverQueryLogConfigResponse :: Int -> DeleteResolverQueryLogConfigResponse

-- | Information about the query logging configuration that you deleted,
--   including the status of the request.
deleteResolverQueryLogConfigResponse_resolverQueryLogConfig :: Lens' DeleteResolverQueryLogConfigResponse (Maybe ResolverQueryLogConfig)

-- | The response's http status code.
deleteResolverQueryLogConfigResponse_httpStatus :: Lens' DeleteResolverQueryLogConfigResponse Int
instance GHC.Generics.Generic Network.AWS.Route53Resolver.DeleteResolverQueryLogConfig.DeleteResolverQueryLogConfig
instance GHC.Show.Show Network.AWS.Route53Resolver.DeleteResolverQueryLogConfig.DeleteResolverQueryLogConfig
instance GHC.Read.Read Network.AWS.Route53Resolver.DeleteResolverQueryLogConfig.DeleteResolverQueryLogConfig
instance GHC.Classes.Eq Network.AWS.Route53Resolver.DeleteResolverQueryLogConfig.DeleteResolverQueryLogConfig
instance GHC.Generics.Generic Network.AWS.Route53Resolver.DeleteResolverQueryLogConfig.DeleteResolverQueryLogConfigResponse
instance GHC.Show.Show Network.AWS.Route53Resolver.DeleteResolverQueryLogConfig.DeleteResolverQueryLogConfigResponse
instance GHC.Read.Read Network.AWS.Route53Resolver.DeleteResolverQueryLogConfig.DeleteResolverQueryLogConfigResponse
instance GHC.Classes.Eq Network.AWS.Route53Resolver.DeleteResolverQueryLogConfig.DeleteResolverQueryLogConfigResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53Resolver.DeleteResolverQueryLogConfig.DeleteResolverQueryLogConfig
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.DeleteResolverQueryLogConfig.DeleteResolverQueryLogConfigResponse
instance Data.Hashable.Class.Hashable Network.AWS.Route53Resolver.DeleteResolverQueryLogConfig.DeleteResolverQueryLogConfig
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.DeleteResolverQueryLogConfig.DeleteResolverQueryLogConfig
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53Resolver.DeleteResolverQueryLogConfig.DeleteResolverQueryLogConfig
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53Resolver.DeleteResolverQueryLogConfig.DeleteResolverQueryLogConfig
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53Resolver.DeleteResolverQueryLogConfig.DeleteResolverQueryLogConfig
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53Resolver.DeleteResolverQueryLogConfig.DeleteResolverQueryLogConfig


-- | Deletes a Resolver endpoint. The effect of deleting a Resolver
--   endpoint depends on whether it's an inbound or an outbound Resolver
--   endpoint:
--   
--   <ul>
--   <li><b>Inbound</b>: DNS queries from your network are no longer routed
--   to the DNS service for the specified VPC.</li>
--   <li><b>Outbound</b>: DNS queries from a VPC are no longer routed to
--   your network.</li>
--   </ul>
module Network.AWS.Route53Resolver.DeleteResolverEndpoint

-- | <i>See:</i> <a>newDeleteResolverEndpoint</a> smart constructor.
data DeleteResolverEndpoint
DeleteResolverEndpoint' :: Text -> DeleteResolverEndpoint

-- | The ID of the Resolver endpoint that you want to delete.
[$sel:resolverEndpointId:DeleteResolverEndpoint'] :: DeleteResolverEndpoint -> Text

-- | Create a value of <a>DeleteResolverEndpoint</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resolverEndpointId:DeleteResolverEndpoint'</a>,
--   <a>deleteResolverEndpoint_resolverEndpointId</a> - The ID of the
--   Resolver endpoint that you want to delete.
newDeleteResolverEndpoint :: Text -> DeleteResolverEndpoint

-- | The ID of the Resolver endpoint that you want to delete.
deleteResolverEndpoint_resolverEndpointId :: Lens' DeleteResolverEndpoint Text

-- | <i>See:</i> <a>newDeleteResolverEndpointResponse</a> smart
--   constructor.
data DeleteResolverEndpointResponse
DeleteResolverEndpointResponse' :: Maybe ResolverEndpoint -> Int -> DeleteResolverEndpointResponse

-- | Information about the <tt>DeleteResolverEndpoint</tt> request,
--   including the status of the request.
[$sel:resolverEndpoint:DeleteResolverEndpointResponse'] :: DeleteResolverEndpointResponse -> Maybe ResolverEndpoint

-- | The response's http status code.
[$sel:httpStatus:DeleteResolverEndpointResponse'] :: DeleteResolverEndpointResponse -> Int

-- | Create a value of <a>DeleteResolverEndpointResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resolverEndpoint:DeleteResolverEndpointResponse'</a>,
--   <a>deleteResolverEndpointResponse_resolverEndpoint</a> - Information
--   about the <tt>DeleteResolverEndpoint</tt> request, including the
--   status of the request.
--   
--   <a>$sel:httpStatus:DeleteResolverEndpointResponse'</a>,
--   <a>deleteResolverEndpointResponse_httpStatus</a> - The response's http
--   status code.
newDeleteResolverEndpointResponse :: Int -> DeleteResolverEndpointResponse

-- | Information about the <tt>DeleteResolverEndpoint</tt> request,
--   including the status of the request.
deleteResolverEndpointResponse_resolverEndpoint :: Lens' DeleteResolverEndpointResponse (Maybe ResolverEndpoint)

-- | The response's http status code.
deleteResolverEndpointResponse_httpStatus :: Lens' DeleteResolverEndpointResponse Int
instance GHC.Generics.Generic Network.AWS.Route53Resolver.DeleteResolverEndpoint.DeleteResolverEndpoint
instance GHC.Show.Show Network.AWS.Route53Resolver.DeleteResolverEndpoint.DeleteResolverEndpoint
instance GHC.Read.Read Network.AWS.Route53Resolver.DeleteResolverEndpoint.DeleteResolverEndpoint
instance GHC.Classes.Eq Network.AWS.Route53Resolver.DeleteResolverEndpoint.DeleteResolverEndpoint
instance GHC.Generics.Generic Network.AWS.Route53Resolver.DeleteResolverEndpoint.DeleteResolverEndpointResponse
instance GHC.Show.Show Network.AWS.Route53Resolver.DeleteResolverEndpoint.DeleteResolverEndpointResponse
instance GHC.Read.Read Network.AWS.Route53Resolver.DeleteResolverEndpoint.DeleteResolverEndpointResponse
instance GHC.Classes.Eq Network.AWS.Route53Resolver.DeleteResolverEndpoint.DeleteResolverEndpointResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53Resolver.DeleteResolverEndpoint.DeleteResolverEndpoint
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.DeleteResolverEndpoint.DeleteResolverEndpointResponse
instance Data.Hashable.Class.Hashable Network.AWS.Route53Resolver.DeleteResolverEndpoint.DeleteResolverEndpoint
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.DeleteResolverEndpoint.DeleteResolverEndpoint
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53Resolver.DeleteResolverEndpoint.DeleteResolverEndpoint
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53Resolver.DeleteResolverEndpoint.DeleteResolverEndpoint
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53Resolver.DeleteResolverEndpoint.DeleteResolverEndpoint
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53Resolver.DeleteResolverEndpoint.DeleteResolverEndpoint


-- | Deletes the specified firewall rule group.
module Network.AWS.Route53Resolver.DeleteFirewallRuleGroup

-- | <i>See:</i> <a>newDeleteFirewallRuleGroup</a> smart constructor.
data DeleteFirewallRuleGroup
DeleteFirewallRuleGroup' :: Text -> DeleteFirewallRuleGroup

-- | The unique identifier of the firewall rule group that you want to
--   delete.
[$sel:firewallRuleGroupId:DeleteFirewallRuleGroup'] :: DeleteFirewallRuleGroup -> Text

-- | Create a value of <a>DeleteFirewallRuleGroup</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:firewallRuleGroupId:DeleteFirewallRuleGroup'</a>,
--   <a>deleteFirewallRuleGroup_firewallRuleGroupId</a> - The unique
--   identifier of the firewall rule group that you want to delete.
newDeleteFirewallRuleGroup :: Text -> DeleteFirewallRuleGroup

-- | The unique identifier of the firewall rule group that you want to
--   delete.
deleteFirewallRuleGroup_firewallRuleGroupId :: Lens' DeleteFirewallRuleGroup Text

-- | <i>See:</i> <a>newDeleteFirewallRuleGroupResponse</a> smart
--   constructor.
data DeleteFirewallRuleGroupResponse
DeleteFirewallRuleGroupResponse' :: Maybe FirewallRuleGroup -> Int -> DeleteFirewallRuleGroupResponse

-- | A collection of rules used to filter DNS network traffic.
[$sel:firewallRuleGroup:DeleteFirewallRuleGroupResponse'] :: DeleteFirewallRuleGroupResponse -> Maybe FirewallRuleGroup

-- | The response's http status code.
[$sel:httpStatus:DeleteFirewallRuleGroupResponse'] :: DeleteFirewallRuleGroupResponse -> Int

-- | Create a value of <a>DeleteFirewallRuleGroupResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:firewallRuleGroup:DeleteFirewallRuleGroupResponse'</a>,
--   <a>deleteFirewallRuleGroupResponse_firewallRuleGroup</a> - A
--   collection of rules used to filter DNS network traffic.
--   
--   <a>$sel:httpStatus:DeleteFirewallRuleGroupResponse'</a>,
--   <a>deleteFirewallRuleGroupResponse_httpStatus</a> - The response's
--   http status code.
newDeleteFirewallRuleGroupResponse :: Int -> DeleteFirewallRuleGroupResponse

-- | A collection of rules used to filter DNS network traffic.
deleteFirewallRuleGroupResponse_firewallRuleGroup :: Lens' DeleteFirewallRuleGroupResponse (Maybe FirewallRuleGroup)

-- | The response's http status code.
deleteFirewallRuleGroupResponse_httpStatus :: Lens' DeleteFirewallRuleGroupResponse Int
instance GHC.Generics.Generic Network.AWS.Route53Resolver.DeleteFirewallRuleGroup.DeleteFirewallRuleGroup
instance GHC.Show.Show Network.AWS.Route53Resolver.DeleteFirewallRuleGroup.DeleteFirewallRuleGroup
instance GHC.Read.Read Network.AWS.Route53Resolver.DeleteFirewallRuleGroup.DeleteFirewallRuleGroup
instance GHC.Classes.Eq Network.AWS.Route53Resolver.DeleteFirewallRuleGroup.DeleteFirewallRuleGroup
instance GHC.Generics.Generic Network.AWS.Route53Resolver.DeleteFirewallRuleGroup.DeleteFirewallRuleGroupResponse
instance GHC.Show.Show Network.AWS.Route53Resolver.DeleteFirewallRuleGroup.DeleteFirewallRuleGroupResponse
instance GHC.Read.Read Network.AWS.Route53Resolver.DeleteFirewallRuleGroup.DeleteFirewallRuleGroupResponse
instance GHC.Classes.Eq Network.AWS.Route53Resolver.DeleteFirewallRuleGroup.DeleteFirewallRuleGroupResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53Resolver.DeleteFirewallRuleGroup.DeleteFirewallRuleGroup
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.DeleteFirewallRuleGroup.DeleteFirewallRuleGroupResponse
instance Data.Hashable.Class.Hashable Network.AWS.Route53Resolver.DeleteFirewallRuleGroup.DeleteFirewallRuleGroup
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.DeleteFirewallRuleGroup.DeleteFirewallRuleGroup
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53Resolver.DeleteFirewallRuleGroup.DeleteFirewallRuleGroup
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53Resolver.DeleteFirewallRuleGroup.DeleteFirewallRuleGroup
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53Resolver.DeleteFirewallRuleGroup.DeleteFirewallRuleGroup
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53Resolver.DeleteFirewallRuleGroup.DeleteFirewallRuleGroup


-- | Deletes the specified firewall rule.
module Network.AWS.Route53Resolver.DeleteFirewallRule

-- | <i>See:</i> <a>newDeleteFirewallRule</a> smart constructor.
data DeleteFirewallRule
DeleteFirewallRule' :: Text -> Text -> DeleteFirewallRule

-- | The unique identifier of the firewall rule group that you want to
--   delete the rule from.
[$sel:firewallRuleGroupId:DeleteFirewallRule'] :: DeleteFirewallRule -> Text

-- | The ID of the domain list that's used in the rule.
[$sel:firewallDomainListId:DeleteFirewallRule'] :: DeleteFirewallRule -> Text

-- | Create a value of <a>DeleteFirewallRule</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:firewallRuleGroupId:DeleteFirewallRule'</a>,
--   <a>deleteFirewallRule_firewallRuleGroupId</a> - The unique identifier
--   of the firewall rule group that you want to delete the rule from.
--   
--   <a>$sel:firewallDomainListId:DeleteFirewallRule'</a>,
--   <a>deleteFirewallRule_firewallDomainListId</a> - The ID of the domain
--   list that's used in the rule.
newDeleteFirewallRule :: Text -> Text -> DeleteFirewallRule

-- | The unique identifier of the firewall rule group that you want to
--   delete the rule from.
deleteFirewallRule_firewallRuleGroupId :: Lens' DeleteFirewallRule Text

-- | The ID of the domain list that's used in the rule.
deleteFirewallRule_firewallDomainListId :: Lens' DeleteFirewallRule Text

-- | <i>See:</i> <a>newDeleteFirewallRuleResponse</a> smart constructor.
data DeleteFirewallRuleResponse
DeleteFirewallRuleResponse' :: Maybe FirewallRule -> Int -> DeleteFirewallRuleResponse

-- | The specification for the firewall rule that you just deleted.
[$sel:firewallRule:DeleteFirewallRuleResponse'] :: DeleteFirewallRuleResponse -> Maybe FirewallRule

-- | The response's http status code.
[$sel:httpStatus:DeleteFirewallRuleResponse'] :: DeleteFirewallRuleResponse -> Int

-- | Create a value of <a>DeleteFirewallRuleResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:firewallRule:DeleteFirewallRuleResponse'</a>,
--   <a>deleteFirewallRuleResponse_firewallRule</a> - The specification for
--   the firewall rule that you just deleted.
--   
--   <a>$sel:httpStatus:DeleteFirewallRuleResponse'</a>,
--   <a>deleteFirewallRuleResponse_httpStatus</a> - The response's http
--   status code.
newDeleteFirewallRuleResponse :: Int -> DeleteFirewallRuleResponse

-- | The specification for the firewall rule that you just deleted.
deleteFirewallRuleResponse_firewallRule :: Lens' DeleteFirewallRuleResponse (Maybe FirewallRule)

-- | The response's http status code.
deleteFirewallRuleResponse_httpStatus :: Lens' DeleteFirewallRuleResponse Int
instance GHC.Generics.Generic Network.AWS.Route53Resolver.DeleteFirewallRule.DeleteFirewallRule
instance GHC.Show.Show Network.AWS.Route53Resolver.DeleteFirewallRule.DeleteFirewallRule
instance GHC.Read.Read Network.AWS.Route53Resolver.DeleteFirewallRule.DeleteFirewallRule
instance GHC.Classes.Eq Network.AWS.Route53Resolver.DeleteFirewallRule.DeleteFirewallRule
instance GHC.Generics.Generic Network.AWS.Route53Resolver.DeleteFirewallRule.DeleteFirewallRuleResponse
instance GHC.Show.Show Network.AWS.Route53Resolver.DeleteFirewallRule.DeleteFirewallRuleResponse
instance GHC.Read.Read Network.AWS.Route53Resolver.DeleteFirewallRule.DeleteFirewallRuleResponse
instance GHC.Classes.Eq Network.AWS.Route53Resolver.DeleteFirewallRule.DeleteFirewallRuleResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53Resolver.DeleteFirewallRule.DeleteFirewallRule
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.DeleteFirewallRule.DeleteFirewallRuleResponse
instance Data.Hashable.Class.Hashable Network.AWS.Route53Resolver.DeleteFirewallRule.DeleteFirewallRule
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.DeleteFirewallRule.DeleteFirewallRule
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53Resolver.DeleteFirewallRule.DeleteFirewallRule
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53Resolver.DeleteFirewallRule.DeleteFirewallRule
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53Resolver.DeleteFirewallRule.DeleteFirewallRule
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53Resolver.DeleteFirewallRule.DeleteFirewallRule


-- | Deletes the specified domain list.
module Network.AWS.Route53Resolver.DeleteFirewallDomainList

-- | <i>See:</i> <a>newDeleteFirewallDomainList</a> smart constructor.
data DeleteFirewallDomainList
DeleteFirewallDomainList' :: Text -> DeleteFirewallDomainList

-- | The ID of the domain list that you want to delete.
[$sel:firewallDomainListId:DeleteFirewallDomainList'] :: DeleteFirewallDomainList -> Text

-- | Create a value of <a>DeleteFirewallDomainList</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:firewallDomainListId:DeleteFirewallDomainList'</a>,
--   <a>deleteFirewallDomainList_firewallDomainListId</a> - The ID of the
--   domain list that you want to delete.
newDeleteFirewallDomainList :: Text -> DeleteFirewallDomainList

-- | The ID of the domain list that you want to delete.
deleteFirewallDomainList_firewallDomainListId :: Lens' DeleteFirewallDomainList Text

-- | <i>See:</i> <a>newDeleteFirewallDomainListResponse</a> smart
--   constructor.
data DeleteFirewallDomainListResponse
DeleteFirewallDomainListResponse' :: Maybe FirewallDomainList -> Int -> DeleteFirewallDomainListResponse

-- | The domain list that you just deleted.
[$sel:firewallDomainList:DeleteFirewallDomainListResponse'] :: DeleteFirewallDomainListResponse -> Maybe FirewallDomainList

-- | The response's http status code.
[$sel:httpStatus:DeleteFirewallDomainListResponse'] :: DeleteFirewallDomainListResponse -> Int

-- | Create a value of <a>DeleteFirewallDomainListResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:firewallDomainList:DeleteFirewallDomainListResponse'</a>,
--   <a>deleteFirewallDomainListResponse_firewallDomainList</a> - The
--   domain list that you just deleted.
--   
--   <a>$sel:httpStatus:DeleteFirewallDomainListResponse'</a>,
--   <a>deleteFirewallDomainListResponse_httpStatus</a> - The response's
--   http status code.
newDeleteFirewallDomainListResponse :: Int -> DeleteFirewallDomainListResponse

-- | The domain list that you just deleted.
deleteFirewallDomainListResponse_firewallDomainList :: Lens' DeleteFirewallDomainListResponse (Maybe FirewallDomainList)

-- | The response's http status code.
deleteFirewallDomainListResponse_httpStatus :: Lens' DeleteFirewallDomainListResponse Int
instance GHC.Generics.Generic Network.AWS.Route53Resolver.DeleteFirewallDomainList.DeleteFirewallDomainList
instance GHC.Show.Show Network.AWS.Route53Resolver.DeleteFirewallDomainList.DeleteFirewallDomainList
instance GHC.Read.Read Network.AWS.Route53Resolver.DeleteFirewallDomainList.DeleteFirewallDomainList
instance GHC.Classes.Eq Network.AWS.Route53Resolver.DeleteFirewallDomainList.DeleteFirewallDomainList
instance GHC.Generics.Generic Network.AWS.Route53Resolver.DeleteFirewallDomainList.DeleteFirewallDomainListResponse
instance GHC.Show.Show Network.AWS.Route53Resolver.DeleteFirewallDomainList.DeleteFirewallDomainListResponse
instance GHC.Read.Read Network.AWS.Route53Resolver.DeleteFirewallDomainList.DeleteFirewallDomainListResponse
instance GHC.Classes.Eq Network.AWS.Route53Resolver.DeleteFirewallDomainList.DeleteFirewallDomainListResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53Resolver.DeleteFirewallDomainList.DeleteFirewallDomainList
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.DeleteFirewallDomainList.DeleteFirewallDomainListResponse
instance Data.Hashable.Class.Hashable Network.AWS.Route53Resolver.DeleteFirewallDomainList.DeleteFirewallDomainList
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.DeleteFirewallDomainList.DeleteFirewallDomainList
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53Resolver.DeleteFirewallDomainList.DeleteFirewallDomainList
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53Resolver.DeleteFirewallDomainList.DeleteFirewallDomainList
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53Resolver.DeleteFirewallDomainList.DeleteFirewallDomainList
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53Resolver.DeleteFirewallDomainList.DeleteFirewallDomainList


-- | For DNS queries that originate in your VPCs, specifies which Resolver
--   endpoint the queries pass through, one domain name that you want to
--   forward to your network, and the IP addresses of the DNS resolvers in
--   your network.
module Network.AWS.Route53Resolver.CreateResolverRule

-- | <i>See:</i> <a>newCreateResolverRule</a> smart constructor.
data CreateResolverRule
CreateResolverRule' :: Maybe Text -> Maybe (NonEmpty TargetAddress) -> Maybe Text -> Maybe [Tag] -> Text -> RuleTypeOption -> Text -> CreateResolverRule

-- | The ID of the outbound Resolver endpoint that you want to use to route
--   DNS queries to the IP addresses that you specify in
--   <tt>TargetIps</tt>.
[$sel:resolverEndpointId:CreateResolverRule'] :: CreateResolverRule -> Maybe Text

-- | The IPs that you want Resolver to forward DNS queries to. You can
--   specify only IPv4 addresses. Separate IP addresses with a space.
--   
--   <tt>TargetIps</tt> is available only when the value of <tt>Rule
--   type</tt> is <tt>FORWARD</tt>.
[$sel:targetIps:CreateResolverRule'] :: CreateResolverRule -> Maybe (NonEmpty TargetAddress)

-- | A friendly name that lets you easily find a rule in the Resolver
--   dashboard in the Route 53 console.
[$sel:name:CreateResolverRule'] :: CreateResolverRule -> Maybe Text

-- | A list of the tag keys and values that you want to associate with the
--   endpoint.
[$sel:tags:CreateResolverRule'] :: CreateResolverRule -> Maybe [Tag]

-- | A unique string that identifies the request and that allows failed
--   requests to be retried without the risk of running the operation
--   twice. <tt>CreatorRequestId</tt> can be any unique string, for
--   example, a date/time stamp.
[$sel:creatorRequestId:CreateResolverRule'] :: CreateResolverRule -> Text

-- | When you want to forward DNS queries for specified domain name to
--   resolvers on your network, specify <tt>FORWARD</tt>.
--   
--   When you have a forwarding rule to forward DNS queries for a domain to
--   your network and you want Resolver to process queries for a subdomain
--   of that domain, specify <tt>SYSTEM</tt>.
--   
--   For example, to forward DNS queries for example.com to resolvers on
--   your network, you create a rule and specify <tt>FORWARD</tt> for
--   <tt>RuleType</tt>. To then have Resolver process queries for
--   apex.example.com, you create a rule and specify <tt>SYSTEM</tt> for
--   <tt>RuleType</tt>.
--   
--   Currently, only Resolver can create rules that have a value of
--   <tt>RECURSIVE</tt> for <tt>RuleType</tt>.
[$sel:ruleType:CreateResolverRule'] :: CreateResolverRule -> RuleTypeOption

-- | DNS queries for this domain name are forwarded to the IP addresses
--   that you specify in <tt>TargetIps</tt>. If a query matches multiple
--   Resolver rules (example.com and www.example.com), outbound DNS queries
--   are routed using the Resolver rule that contains the most specific
--   domain name (www.example.com).
[$sel:domainName:CreateResolverRule'] :: CreateResolverRule -> Text

-- | Create a value of <a>CreateResolverRule</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resolverEndpointId:CreateResolverRule'</a>,
--   <a>createResolverRule_resolverEndpointId</a> - The ID of the outbound
--   Resolver endpoint that you want to use to route DNS queries to the IP
--   addresses that you specify in <tt>TargetIps</tt>.
--   
--   <a>$sel:targetIps:CreateResolverRule'</a>,
--   <a>createResolverRule_targetIps</a> - The IPs that you want Resolver
--   to forward DNS queries to. You can specify only IPv4 addresses.
--   Separate IP addresses with a space.
--   
--   <tt>TargetIps</tt> is available only when the value of <tt>Rule
--   type</tt> is <tt>FORWARD</tt>.
--   
--   <a>$sel:name:CreateResolverRule'</a>, <a>createResolverRule_name</a> -
--   A friendly name that lets you easily find a rule in the Resolver
--   dashboard in the Route 53 console.
--   
--   <a>$sel:tags:CreateResolverRule'</a>, <a>createResolverRule_tags</a> -
--   A list of the tag keys and values that you want to associate with the
--   endpoint.
--   
--   <a>$sel:creatorRequestId:CreateResolverRule'</a>,
--   <a>createResolverRule_creatorRequestId</a> - A unique string that
--   identifies the request and that allows failed requests to be retried
--   without the risk of running the operation twice.
--   <tt>CreatorRequestId</tt> can be any unique string, for example, a
--   date/time stamp.
--   
--   <a>$sel:ruleType:CreateResolverRule'</a>,
--   <a>createResolverRule_ruleType</a> - When you want to forward DNS
--   queries for specified domain name to resolvers on your network,
--   specify <tt>FORWARD</tt>.
--   
--   When you have a forwarding rule to forward DNS queries for a domain to
--   your network and you want Resolver to process queries for a subdomain
--   of that domain, specify <tt>SYSTEM</tt>.
--   
--   For example, to forward DNS queries for example.com to resolvers on
--   your network, you create a rule and specify <tt>FORWARD</tt> for
--   <tt>RuleType</tt>. To then have Resolver process queries for
--   apex.example.com, you create a rule and specify <tt>SYSTEM</tt> for
--   <tt>RuleType</tt>.
--   
--   Currently, only Resolver can create rules that have a value of
--   <tt>RECURSIVE</tt> for <tt>RuleType</tt>.
--   
--   <a>$sel:domainName:CreateResolverRule'</a>,
--   <a>createResolverRule_domainName</a> - DNS queries for this domain
--   name are forwarded to the IP addresses that you specify in
--   <tt>TargetIps</tt>. If a query matches multiple Resolver rules
--   (example.com and www.example.com), outbound DNS queries are routed
--   using the Resolver rule that contains the most specific domain name
--   (www.example.com).
newCreateResolverRule :: Text -> RuleTypeOption -> Text -> CreateResolverRule

-- | The ID of the outbound Resolver endpoint that you want to use to route
--   DNS queries to the IP addresses that you specify in
--   <tt>TargetIps</tt>.
createResolverRule_resolverEndpointId :: Lens' CreateResolverRule (Maybe Text)

-- | The IPs that you want Resolver to forward DNS queries to. You can
--   specify only IPv4 addresses. Separate IP addresses with a space.
--   
--   <tt>TargetIps</tt> is available only when the value of <tt>Rule
--   type</tt> is <tt>FORWARD</tt>.
createResolverRule_targetIps :: Lens' CreateResolverRule (Maybe (NonEmpty TargetAddress))

-- | A friendly name that lets you easily find a rule in the Resolver
--   dashboard in the Route 53 console.
createResolverRule_name :: Lens' CreateResolverRule (Maybe Text)

-- | A list of the tag keys and values that you want to associate with the
--   endpoint.
createResolverRule_tags :: Lens' CreateResolverRule (Maybe [Tag])

-- | A unique string that identifies the request and that allows failed
--   requests to be retried without the risk of running the operation
--   twice. <tt>CreatorRequestId</tt> can be any unique string, for
--   example, a date/time stamp.
createResolverRule_creatorRequestId :: Lens' CreateResolverRule Text

-- | When you want to forward DNS queries for specified domain name to
--   resolvers on your network, specify <tt>FORWARD</tt>.
--   
--   When you have a forwarding rule to forward DNS queries for a domain to
--   your network and you want Resolver to process queries for a subdomain
--   of that domain, specify <tt>SYSTEM</tt>.
--   
--   For example, to forward DNS queries for example.com to resolvers on
--   your network, you create a rule and specify <tt>FORWARD</tt> for
--   <tt>RuleType</tt>. To then have Resolver process queries for
--   apex.example.com, you create a rule and specify <tt>SYSTEM</tt> for
--   <tt>RuleType</tt>.
--   
--   Currently, only Resolver can create rules that have a value of
--   <tt>RECURSIVE</tt> for <tt>RuleType</tt>.
createResolverRule_ruleType :: Lens' CreateResolverRule RuleTypeOption

-- | DNS queries for this domain name are forwarded to the IP addresses
--   that you specify in <tt>TargetIps</tt>. If a query matches multiple
--   Resolver rules (example.com and www.example.com), outbound DNS queries
--   are routed using the Resolver rule that contains the most specific
--   domain name (www.example.com).
createResolverRule_domainName :: Lens' CreateResolverRule Text

-- | <i>See:</i> <a>newCreateResolverRuleResponse</a> smart constructor.
data CreateResolverRuleResponse
CreateResolverRuleResponse' :: Maybe ResolverRule -> Int -> CreateResolverRuleResponse

-- | Information about the <tt>CreateResolverRule</tt> request, including
--   the status of the request.
[$sel:resolverRule:CreateResolverRuleResponse'] :: CreateResolverRuleResponse -> Maybe ResolverRule

-- | The response's http status code.
[$sel:httpStatus:CreateResolverRuleResponse'] :: CreateResolverRuleResponse -> Int

-- | Create a value of <a>CreateResolverRuleResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resolverRule:CreateResolverRuleResponse'</a>,
--   <a>createResolverRuleResponse_resolverRule</a> - Information about the
--   <tt>CreateResolverRule</tt> request, including the status of the
--   request.
--   
--   <a>$sel:httpStatus:CreateResolverRuleResponse'</a>,
--   <a>createResolverRuleResponse_httpStatus</a> - The response's http
--   status code.
newCreateResolverRuleResponse :: Int -> CreateResolverRuleResponse

-- | Information about the <tt>CreateResolverRule</tt> request, including
--   the status of the request.
createResolverRuleResponse_resolverRule :: Lens' CreateResolverRuleResponse (Maybe ResolverRule)

-- | The response's http status code.
createResolverRuleResponse_httpStatus :: Lens' CreateResolverRuleResponse Int
instance GHC.Generics.Generic Network.AWS.Route53Resolver.CreateResolverRule.CreateResolverRule
instance GHC.Show.Show Network.AWS.Route53Resolver.CreateResolverRule.CreateResolverRule
instance GHC.Read.Read Network.AWS.Route53Resolver.CreateResolverRule.CreateResolverRule
instance GHC.Classes.Eq Network.AWS.Route53Resolver.CreateResolverRule.CreateResolverRule
instance GHC.Generics.Generic Network.AWS.Route53Resolver.CreateResolverRule.CreateResolverRuleResponse
instance GHC.Show.Show Network.AWS.Route53Resolver.CreateResolverRule.CreateResolverRuleResponse
instance GHC.Read.Read Network.AWS.Route53Resolver.CreateResolverRule.CreateResolverRuleResponse
instance GHC.Classes.Eq Network.AWS.Route53Resolver.CreateResolverRule.CreateResolverRuleResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53Resolver.CreateResolverRule.CreateResolverRule
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.CreateResolverRule.CreateResolverRuleResponse
instance Data.Hashable.Class.Hashable Network.AWS.Route53Resolver.CreateResolverRule.CreateResolverRule
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.CreateResolverRule.CreateResolverRule
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53Resolver.CreateResolverRule.CreateResolverRule
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53Resolver.CreateResolverRule.CreateResolverRule
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53Resolver.CreateResolverRule.CreateResolverRule
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53Resolver.CreateResolverRule.CreateResolverRule


-- | Creates a Resolver query logging configuration, which defines where
--   you want Resolver to save DNS query logs that originate in your VPCs.
--   Resolver can log queries only for VPCs that are in the same Region as
--   the query logging configuration.
--   
--   To specify which VPCs you want to log queries for, you use
--   <tt>AssociateResolverQueryLogConfig</tt>. For more information, see
--   <a>AssociateResolverQueryLogConfig</a>.
--   
--   You can optionally use Resource Access Manager (RAM) to share a query
--   logging configuration with other Amazon Web Services accounts. The
--   other accounts can then associate VPCs with the configuration. The
--   query logs that Resolver creates for a configuration include all DNS
--   queries that originate in all VPCs that are associated with the
--   configuration.
module Network.AWS.Route53Resolver.CreateResolverQueryLogConfig

-- | <i>See:</i> <a>newCreateResolverQueryLogConfig</a> smart constructor.
data CreateResolverQueryLogConfig
CreateResolverQueryLogConfig' :: Maybe [Tag] -> Text -> Text -> Text -> CreateResolverQueryLogConfig

-- | A list of the tag keys and values that you want to associate with the
--   query logging configuration.
[$sel:tags:CreateResolverQueryLogConfig'] :: CreateResolverQueryLogConfig -> Maybe [Tag]

-- | The name that you want to give the query logging configuration.
[$sel:name:CreateResolverQueryLogConfig'] :: CreateResolverQueryLogConfig -> Text

-- | The ARN of the resource that you want Resolver to send query logs. You
--   can send query logs to an S3 bucket, a CloudWatch Logs log group, or a
--   Kinesis Data Firehose delivery stream. Examples of valid values
--   include the following:
--   
--   <ul>
--   <li><b>S3 bucket</b>:<pre>arn:aws:s3:::examplebucket</pre>You can
--   optionally append a file prefix to the end of the
--   ARN.<pre>arn:aws:s3:::examplebucket/development/</pre></li>
--   <li><b>CloudWatch Logs log
--   group</b>:<pre>arn:aws:logs:us-west-1:123456789012:log-group:/mystack-testgroup-12ABC1AB12A1:*</pre></li>
--   <li><b>Kinesis Data Firehose delivery
--   stream</b>:<pre>arn:aws:kinesis:us-east-2:0123456789:stream/my_stream_name</pre></li>
--   </ul>
[$sel:destinationArn:CreateResolverQueryLogConfig'] :: CreateResolverQueryLogConfig -> Text

-- | A unique string that identifies the request and that allows failed
--   requests to be retried without the risk of running the operation
--   twice. <tt>CreatorRequestId</tt> can be any unique string, for
--   example, a date/time stamp.
[$sel:creatorRequestId:CreateResolverQueryLogConfig'] :: CreateResolverQueryLogConfig -> Text

-- | Create a value of <a>CreateResolverQueryLogConfig</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:CreateResolverQueryLogConfig'</a>,
--   <a>createResolverQueryLogConfig_tags</a> - A list of the tag keys and
--   values that you want to associate with the query logging
--   configuration.
--   
--   <a>$sel:name:CreateResolverQueryLogConfig'</a>,
--   <a>createResolverQueryLogConfig_name</a> - The name that you want to
--   give the query logging configuration.
--   
--   <a>$sel:destinationArn:CreateResolverQueryLogConfig'</a>,
--   <a>createResolverQueryLogConfig_destinationArn</a> - The ARN of the
--   resource that you want Resolver to send query logs. You can send query
--   logs to an S3 bucket, a CloudWatch Logs log group, or a Kinesis Data
--   Firehose delivery stream. Examples of valid values include the
--   following:
--   
--   <ul>
--   <li><b>S3 bucket</b>:<pre>arn:aws:s3:::examplebucket</pre>You can
--   optionally append a file prefix to the end of the
--   ARN.<pre>arn:aws:s3:::examplebucket/development/</pre></li>
--   <li><b>CloudWatch Logs log
--   group</b>:<pre>arn:aws:logs:us-west-1:123456789012:log-group:/mystack-testgroup-12ABC1AB12A1:*</pre></li>
--   <li><b>Kinesis Data Firehose delivery
--   stream</b>:<pre>arn:aws:kinesis:us-east-2:0123456789:stream/my_stream_name</pre></li>
--   </ul>
--   
--   <a>$sel:creatorRequestId:CreateResolverQueryLogConfig'</a>,
--   <a>createResolverQueryLogConfig_creatorRequestId</a> - A unique string
--   that identifies the request and that allows failed requests to be
--   retried without the risk of running the operation twice.
--   <tt>CreatorRequestId</tt> can be any unique string, for example, a
--   date/time stamp.
newCreateResolverQueryLogConfig :: Text -> Text -> Text -> CreateResolverQueryLogConfig

-- | A list of the tag keys and values that you want to associate with the
--   query logging configuration.
createResolverQueryLogConfig_tags :: Lens' CreateResolverQueryLogConfig (Maybe [Tag])

-- | The name that you want to give the query logging configuration.
createResolverQueryLogConfig_name :: Lens' CreateResolverQueryLogConfig Text

-- | The ARN of the resource that you want Resolver to send query logs. You
--   can send query logs to an S3 bucket, a CloudWatch Logs log group, or a
--   Kinesis Data Firehose delivery stream. Examples of valid values
--   include the following:
--   
--   <ul>
--   <li><b>S3 bucket</b>:<pre>arn:aws:s3:::examplebucket</pre>You can
--   optionally append a file prefix to the end of the
--   ARN.<pre>arn:aws:s3:::examplebucket/development/</pre></li>
--   <li><b>CloudWatch Logs log
--   group</b>:<pre>arn:aws:logs:us-west-1:123456789012:log-group:/mystack-testgroup-12ABC1AB12A1:*</pre></li>
--   <li><b>Kinesis Data Firehose delivery
--   stream</b>:<pre>arn:aws:kinesis:us-east-2:0123456789:stream/my_stream_name</pre></li>
--   </ul>
createResolverQueryLogConfig_destinationArn :: Lens' CreateResolverQueryLogConfig Text

-- | A unique string that identifies the request and that allows failed
--   requests to be retried without the risk of running the operation
--   twice. <tt>CreatorRequestId</tt> can be any unique string, for
--   example, a date/time stamp.
createResolverQueryLogConfig_creatorRequestId :: Lens' CreateResolverQueryLogConfig Text

-- | <i>See:</i> <a>newCreateResolverQueryLogConfigResponse</a> smart
--   constructor.
data CreateResolverQueryLogConfigResponse
CreateResolverQueryLogConfigResponse' :: Maybe ResolverQueryLogConfig -> Int -> CreateResolverQueryLogConfigResponse

-- | Information about the <tt>CreateResolverQueryLogConfig</tt> request,
--   including the status of the request.
[$sel:resolverQueryLogConfig:CreateResolverQueryLogConfigResponse'] :: CreateResolverQueryLogConfigResponse -> Maybe ResolverQueryLogConfig

-- | The response's http status code.
[$sel:httpStatus:CreateResolverQueryLogConfigResponse'] :: CreateResolverQueryLogConfigResponse -> Int

-- | Create a value of <a>CreateResolverQueryLogConfigResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:resolverQueryLogConfig:CreateResolverQueryLogConfigResponse'</a>,
--   <a>createResolverQueryLogConfigResponse_resolverQueryLogConfig</a> -
--   Information about the <tt>CreateResolverQueryLogConfig</tt> request,
--   including the status of the request.
--   
--   <a>$sel:httpStatus:CreateResolverQueryLogConfigResponse'</a>,
--   <a>createResolverQueryLogConfigResponse_httpStatus</a> - The
--   response's http status code.
newCreateResolverQueryLogConfigResponse :: Int -> CreateResolverQueryLogConfigResponse

-- | Information about the <tt>CreateResolverQueryLogConfig</tt> request,
--   including the status of the request.
createResolverQueryLogConfigResponse_resolverQueryLogConfig :: Lens' CreateResolverQueryLogConfigResponse (Maybe ResolverQueryLogConfig)

-- | The response's http status code.
createResolverQueryLogConfigResponse_httpStatus :: Lens' CreateResolverQueryLogConfigResponse Int
instance GHC.Generics.Generic Network.AWS.Route53Resolver.CreateResolverQueryLogConfig.CreateResolverQueryLogConfig
instance GHC.Show.Show Network.AWS.Route53Resolver.CreateResolverQueryLogConfig.CreateResolverQueryLogConfig
instance GHC.Read.Read Network.AWS.Route53Resolver.CreateResolverQueryLogConfig.CreateResolverQueryLogConfig
instance GHC.Classes.Eq Network.AWS.Route53Resolver.CreateResolverQueryLogConfig.CreateResolverQueryLogConfig
instance GHC.Generics.Generic Network.AWS.Route53Resolver.CreateResolverQueryLogConfig.CreateResolverQueryLogConfigResponse
instance GHC.Show.Show Network.AWS.Route53Resolver.CreateResolverQueryLogConfig.CreateResolverQueryLogConfigResponse
instance GHC.Read.Read Network.AWS.Route53Resolver.CreateResolverQueryLogConfig.CreateResolverQueryLogConfigResponse
instance GHC.Classes.Eq Network.AWS.Route53Resolver.CreateResolverQueryLogConfig.CreateResolverQueryLogConfigResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53Resolver.CreateResolverQueryLogConfig.CreateResolverQueryLogConfig
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.CreateResolverQueryLogConfig.CreateResolverQueryLogConfigResponse
instance Data.Hashable.Class.Hashable Network.AWS.Route53Resolver.CreateResolverQueryLogConfig.CreateResolverQueryLogConfig
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.CreateResolverQueryLogConfig.CreateResolverQueryLogConfig
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53Resolver.CreateResolverQueryLogConfig.CreateResolverQueryLogConfig
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53Resolver.CreateResolverQueryLogConfig.CreateResolverQueryLogConfig
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53Resolver.CreateResolverQueryLogConfig.CreateResolverQueryLogConfig
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53Resolver.CreateResolverQueryLogConfig.CreateResolverQueryLogConfig


-- | Creates a Resolver endpoint. There are two types of Resolver
--   endpoints, inbound and outbound:
--   
--   <ul>
--   <li>An <i>inbound Resolver endpoint</i> forwards DNS queries to the
--   DNS service for a VPC from your network.</li>
--   <li>An <i>outbound Resolver endpoint</i> forwards DNS queries from the
--   DNS service for a VPC to your network.</li>
--   </ul>
module Network.AWS.Route53Resolver.CreateResolverEndpoint

-- | <i>See:</i> <a>newCreateResolverEndpoint</a> smart constructor.
data CreateResolverEndpoint
CreateResolverEndpoint' :: Maybe Text -> Maybe [Tag] -> Text -> [Text] -> ResolverEndpointDirection -> NonEmpty IpAddressRequest -> CreateResolverEndpoint

-- | A friendly name that lets you easily find a configuration in the
--   Resolver dashboard in the Route 53 console.
[$sel:name:CreateResolverEndpoint'] :: CreateResolverEndpoint -> Maybe Text

-- | A list of the tag keys and values that you want to associate with the
--   endpoint.
[$sel:tags:CreateResolverEndpoint'] :: CreateResolverEndpoint -> Maybe [Tag]

-- | A unique string that identifies the request and that allows failed
--   requests to be retried without the risk of running the operation
--   twice. <tt>CreatorRequestId</tt> can be any unique string, for
--   example, a date/time stamp.
[$sel:creatorRequestId:CreateResolverEndpoint'] :: CreateResolverEndpoint -> Text

-- | The ID of one or more security groups that you want to use to control
--   access to this VPC. The security group that you specify must include
--   one or more inbound rules (for inbound Resolver endpoints) or outbound
--   rules (for outbound Resolver endpoints). Inbound and outbound rules
--   must allow TCP and UDP access. For inbound access, open port 53. For
--   outbound access, open the port that you're using for DNS queries on
--   your network.
[$sel:securityGroupIds:CreateResolverEndpoint'] :: CreateResolverEndpoint -> [Text]

-- | Specify the applicable value:
--   
--   <ul>
--   <li><tt>INBOUND</tt>: Resolver forwards DNS queries to the DNS service
--   for a VPC from your network</li>
--   <li><tt>OUTBOUND</tt>: Resolver forwards DNS queries from the DNS
--   service for a VPC to your network</li>
--   </ul>
[$sel:direction:CreateResolverEndpoint'] :: CreateResolverEndpoint -> ResolverEndpointDirection

-- | The subnets and IP addresses in your VPC that DNS queries originate
--   from (for outbound endpoints) or that you forward DNS queries to (for
--   inbound endpoints). The subnet ID uniquely identifies a VPC.
[$sel:ipAddresses:CreateResolverEndpoint'] :: CreateResolverEndpoint -> NonEmpty IpAddressRequest

-- | Create a value of <a>CreateResolverEndpoint</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:CreateResolverEndpoint'</a>,
--   <a>createResolverEndpoint_name</a> - A friendly name that lets you
--   easily find a configuration in the Resolver dashboard in the Route 53
--   console.
--   
--   <a>$sel:tags:CreateResolverEndpoint'</a>,
--   <a>createResolverEndpoint_tags</a> - A list of the tag keys and values
--   that you want to associate with the endpoint.
--   
--   <a>$sel:creatorRequestId:CreateResolverEndpoint'</a>,
--   <a>createResolverEndpoint_creatorRequestId</a> - A unique string that
--   identifies the request and that allows failed requests to be retried
--   without the risk of running the operation twice.
--   <tt>CreatorRequestId</tt> can be any unique string, for example, a
--   date/time stamp.
--   
--   <a>$sel:securityGroupIds:CreateResolverEndpoint'</a>,
--   <a>createResolverEndpoint_securityGroupIds</a> - The ID of one or more
--   security groups that you want to use to control access to this VPC.
--   The security group that you specify must include one or more inbound
--   rules (for inbound Resolver endpoints) or outbound rules (for outbound
--   Resolver endpoints). Inbound and outbound rules must allow TCP and UDP
--   access. For inbound access, open port 53. For outbound access, open
--   the port that you're using for DNS queries on your network.
--   
--   <a>$sel:direction:CreateResolverEndpoint'</a>,
--   <a>createResolverEndpoint_direction</a> - Specify the applicable
--   value:
--   
--   <ul>
--   <li><tt>INBOUND</tt>: Resolver forwards DNS queries to the DNS service
--   for a VPC from your network</li>
--   <li><tt>OUTBOUND</tt>: Resolver forwards DNS queries from the DNS
--   service for a VPC to your network</li>
--   </ul>
--   
--   <a>$sel:ipAddresses:CreateResolverEndpoint'</a>,
--   <a>createResolverEndpoint_ipAddresses</a> - The subnets and IP
--   addresses in your VPC that DNS queries originate from (for outbound
--   endpoints) or that you forward DNS queries to (for inbound endpoints).
--   The subnet ID uniquely identifies a VPC.
newCreateResolverEndpoint :: Text -> ResolverEndpointDirection -> NonEmpty IpAddressRequest -> CreateResolverEndpoint

-- | A friendly name that lets you easily find a configuration in the
--   Resolver dashboard in the Route 53 console.
createResolverEndpoint_name :: Lens' CreateResolverEndpoint (Maybe Text)

-- | A list of the tag keys and values that you want to associate with the
--   endpoint.
createResolverEndpoint_tags :: Lens' CreateResolverEndpoint (Maybe [Tag])

-- | A unique string that identifies the request and that allows failed
--   requests to be retried without the risk of running the operation
--   twice. <tt>CreatorRequestId</tt> can be any unique string, for
--   example, a date/time stamp.
createResolverEndpoint_creatorRequestId :: Lens' CreateResolverEndpoint Text

-- | The ID of one or more security groups that you want to use to control
--   access to this VPC. The security group that you specify must include
--   one or more inbound rules (for inbound Resolver endpoints) or outbound
--   rules (for outbound Resolver endpoints). Inbound and outbound rules
--   must allow TCP and UDP access. For inbound access, open port 53. For
--   outbound access, open the port that you're using for DNS queries on
--   your network.
createResolverEndpoint_securityGroupIds :: Lens' CreateResolverEndpoint [Text]

-- | Specify the applicable value:
--   
--   <ul>
--   <li><tt>INBOUND</tt>: Resolver forwards DNS queries to the DNS service
--   for a VPC from your network</li>
--   <li><tt>OUTBOUND</tt>: Resolver forwards DNS queries from the DNS
--   service for a VPC to your network</li>
--   </ul>
createResolverEndpoint_direction :: Lens' CreateResolverEndpoint ResolverEndpointDirection

-- | The subnets and IP addresses in your VPC that DNS queries originate
--   from (for outbound endpoints) or that you forward DNS queries to (for
--   inbound endpoints). The subnet ID uniquely identifies a VPC.
createResolverEndpoint_ipAddresses :: Lens' CreateResolverEndpoint (NonEmpty IpAddressRequest)

-- | <i>See:</i> <a>newCreateResolverEndpointResponse</a> smart
--   constructor.
data CreateResolverEndpointResponse
CreateResolverEndpointResponse' :: Maybe ResolverEndpoint -> Int -> CreateResolverEndpointResponse

-- | Information about the <tt>CreateResolverEndpoint</tt> request,
--   including the status of the request.
[$sel:resolverEndpoint:CreateResolverEndpointResponse'] :: CreateResolverEndpointResponse -> Maybe ResolverEndpoint

-- | The response's http status code.
[$sel:httpStatus:CreateResolverEndpointResponse'] :: CreateResolverEndpointResponse -> Int

-- | Create a value of <a>CreateResolverEndpointResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resolverEndpoint:CreateResolverEndpointResponse'</a>,
--   <a>createResolverEndpointResponse_resolverEndpoint</a> - Information
--   about the <tt>CreateResolverEndpoint</tt> request, including the
--   status of the request.
--   
--   <a>$sel:httpStatus:CreateResolverEndpointResponse'</a>,
--   <a>createResolverEndpointResponse_httpStatus</a> - The response's http
--   status code.
newCreateResolverEndpointResponse :: Int -> CreateResolverEndpointResponse

-- | Information about the <tt>CreateResolverEndpoint</tt> request,
--   including the status of the request.
createResolverEndpointResponse_resolverEndpoint :: Lens' CreateResolverEndpointResponse (Maybe ResolverEndpoint)

-- | The response's http status code.
createResolverEndpointResponse_httpStatus :: Lens' CreateResolverEndpointResponse Int
instance GHC.Generics.Generic Network.AWS.Route53Resolver.CreateResolverEndpoint.CreateResolverEndpoint
instance GHC.Show.Show Network.AWS.Route53Resolver.CreateResolverEndpoint.CreateResolverEndpoint
instance GHC.Read.Read Network.AWS.Route53Resolver.CreateResolverEndpoint.CreateResolverEndpoint
instance GHC.Classes.Eq Network.AWS.Route53Resolver.CreateResolverEndpoint.CreateResolverEndpoint
instance GHC.Generics.Generic Network.AWS.Route53Resolver.CreateResolverEndpoint.CreateResolverEndpointResponse
instance GHC.Show.Show Network.AWS.Route53Resolver.CreateResolverEndpoint.CreateResolverEndpointResponse
instance GHC.Read.Read Network.AWS.Route53Resolver.CreateResolverEndpoint.CreateResolverEndpointResponse
instance GHC.Classes.Eq Network.AWS.Route53Resolver.CreateResolverEndpoint.CreateResolverEndpointResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53Resolver.CreateResolverEndpoint.CreateResolverEndpoint
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.CreateResolverEndpoint.CreateResolverEndpointResponse
instance Data.Hashable.Class.Hashable Network.AWS.Route53Resolver.CreateResolverEndpoint.CreateResolverEndpoint
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.CreateResolverEndpoint.CreateResolverEndpoint
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53Resolver.CreateResolverEndpoint.CreateResolverEndpoint
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53Resolver.CreateResolverEndpoint.CreateResolverEndpoint
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53Resolver.CreateResolverEndpoint.CreateResolverEndpoint
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53Resolver.CreateResolverEndpoint.CreateResolverEndpoint


-- | Creates an empty DNS Firewall rule group for filtering DNS network
--   traffic in a VPC. You can add rules to the new rule group by calling
--   CreateFirewallRule.
module Network.AWS.Route53Resolver.CreateFirewallRuleGroup

-- | <i>See:</i> <a>newCreateFirewallRuleGroup</a> smart constructor.
data CreateFirewallRuleGroup
CreateFirewallRuleGroup' :: Maybe [Tag] -> Text -> Text -> CreateFirewallRuleGroup

-- | A list of the tag keys and values that you want to associate with the
--   rule group.
[$sel:tags:CreateFirewallRuleGroup'] :: CreateFirewallRuleGroup -> Maybe [Tag]

-- | A unique string defined by you to identify the request. This allows
--   you to retry failed requests without the risk of running the operation
--   twice. This can be any unique string, for example, a timestamp.
[$sel:creatorRequestId:CreateFirewallRuleGroup'] :: CreateFirewallRuleGroup -> Text

-- | A name that lets you identify the rule group, to manage and use it.
[$sel:name:CreateFirewallRuleGroup'] :: CreateFirewallRuleGroup -> Text

-- | Create a value of <a>CreateFirewallRuleGroup</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:CreateFirewallRuleGroup'</a>,
--   <a>createFirewallRuleGroup_tags</a> - A list of the tag keys and
--   values that you want to associate with the rule group.
--   
--   <a>$sel:creatorRequestId:CreateFirewallRuleGroup'</a>,
--   <a>createFirewallRuleGroup_creatorRequestId</a> - A unique string
--   defined by you to identify the request. This allows you to retry
--   failed requests without the risk of running the operation twice. This
--   can be any unique string, for example, a timestamp.
--   
--   <a>$sel:name:CreateFirewallRuleGroup'</a>,
--   <a>createFirewallRuleGroup_name</a> - A name that lets you identify
--   the rule group, to manage and use it.
newCreateFirewallRuleGroup :: Text -> Text -> CreateFirewallRuleGroup

-- | A list of the tag keys and values that you want to associate with the
--   rule group.
createFirewallRuleGroup_tags :: Lens' CreateFirewallRuleGroup (Maybe [Tag])

-- | A unique string defined by you to identify the request. This allows
--   you to retry failed requests without the risk of running the operation
--   twice. This can be any unique string, for example, a timestamp.
createFirewallRuleGroup_creatorRequestId :: Lens' CreateFirewallRuleGroup Text

-- | A name that lets you identify the rule group, to manage and use it.
createFirewallRuleGroup_name :: Lens' CreateFirewallRuleGroup Text

-- | <i>See:</i> <a>newCreateFirewallRuleGroupResponse</a> smart
--   constructor.
data CreateFirewallRuleGroupResponse
CreateFirewallRuleGroupResponse' :: Maybe FirewallRuleGroup -> Int -> CreateFirewallRuleGroupResponse

-- | A collection of rules used to filter DNS network traffic.
[$sel:firewallRuleGroup:CreateFirewallRuleGroupResponse'] :: CreateFirewallRuleGroupResponse -> Maybe FirewallRuleGroup

-- | The response's http status code.
[$sel:httpStatus:CreateFirewallRuleGroupResponse'] :: CreateFirewallRuleGroupResponse -> Int

-- | Create a value of <a>CreateFirewallRuleGroupResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:firewallRuleGroup:CreateFirewallRuleGroupResponse'</a>,
--   <a>createFirewallRuleGroupResponse_firewallRuleGroup</a> - A
--   collection of rules used to filter DNS network traffic.
--   
--   <a>$sel:httpStatus:CreateFirewallRuleGroupResponse'</a>,
--   <a>createFirewallRuleGroupResponse_httpStatus</a> - The response's
--   http status code.
newCreateFirewallRuleGroupResponse :: Int -> CreateFirewallRuleGroupResponse

-- | A collection of rules used to filter DNS network traffic.
createFirewallRuleGroupResponse_firewallRuleGroup :: Lens' CreateFirewallRuleGroupResponse (Maybe FirewallRuleGroup)

-- | The response's http status code.
createFirewallRuleGroupResponse_httpStatus :: Lens' CreateFirewallRuleGroupResponse Int
instance GHC.Generics.Generic Network.AWS.Route53Resolver.CreateFirewallRuleGroup.CreateFirewallRuleGroup
instance GHC.Show.Show Network.AWS.Route53Resolver.CreateFirewallRuleGroup.CreateFirewallRuleGroup
instance GHC.Read.Read Network.AWS.Route53Resolver.CreateFirewallRuleGroup.CreateFirewallRuleGroup
instance GHC.Classes.Eq Network.AWS.Route53Resolver.CreateFirewallRuleGroup.CreateFirewallRuleGroup
instance GHC.Generics.Generic Network.AWS.Route53Resolver.CreateFirewallRuleGroup.CreateFirewallRuleGroupResponse
instance GHC.Show.Show Network.AWS.Route53Resolver.CreateFirewallRuleGroup.CreateFirewallRuleGroupResponse
instance GHC.Read.Read Network.AWS.Route53Resolver.CreateFirewallRuleGroup.CreateFirewallRuleGroupResponse
instance GHC.Classes.Eq Network.AWS.Route53Resolver.CreateFirewallRuleGroup.CreateFirewallRuleGroupResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53Resolver.CreateFirewallRuleGroup.CreateFirewallRuleGroup
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.CreateFirewallRuleGroup.CreateFirewallRuleGroupResponse
instance Data.Hashable.Class.Hashable Network.AWS.Route53Resolver.CreateFirewallRuleGroup.CreateFirewallRuleGroup
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.CreateFirewallRuleGroup.CreateFirewallRuleGroup
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53Resolver.CreateFirewallRuleGroup.CreateFirewallRuleGroup
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53Resolver.CreateFirewallRuleGroup.CreateFirewallRuleGroup
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53Resolver.CreateFirewallRuleGroup.CreateFirewallRuleGroup
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53Resolver.CreateFirewallRuleGroup.CreateFirewallRuleGroup


-- | Creates a single DNS Firewall rule in the specified rule group, using
--   the specified domain list.
module Network.AWS.Route53Resolver.CreateFirewallRule

-- | <i>See:</i> <a>newCreateFirewallRule</a> smart constructor.
data CreateFirewallRule
CreateFirewallRule' :: Maybe BlockOverrideDnsType -> Maybe BlockResponse -> Maybe Natural -> Maybe Text -> Text -> Text -> Text -> Int -> Action -> Text -> CreateFirewallRule

-- | The DNS record's type. This determines the format of the record value
--   that you provided in <tt>BlockOverrideDomain</tt>. Used for the rule
--   action <tt>BLOCK</tt> with a <tt>BlockResponse</tt> setting of
--   <tt>OVERRIDE</tt>.
--   
--   This setting is required if the <tt>BlockResponse</tt> setting is
--   <tt>OVERRIDE</tt>.
[$sel:blockOverrideDnsType:CreateFirewallRule'] :: CreateFirewallRule -> Maybe BlockOverrideDnsType

-- | The way that you want DNS Firewall to block the request, used with the
--   rule action setting <tt>BLOCK</tt>.
--   
--   <ul>
--   <li><tt>NODATA</tt> - Respond indicating that the query was
--   successful, but no response is available for it.</li>
--   <li><tt>NXDOMAIN</tt> - Respond indicating that the domain name that's
--   in the query doesn't exist.</li>
--   <li><tt>OVERRIDE</tt> - Provide a custom override in the response.
--   This option requires custom handling details in the rule's
--   <tt>BlockOverride*</tt> settings.</li>
--   </ul>
--   
--   This setting is required if the rule action setting is <tt>BLOCK</tt>.
[$sel:blockResponse:CreateFirewallRule'] :: CreateFirewallRule -> Maybe BlockResponse

-- | The recommended amount of time, in seconds, for the DNS resolver or
--   web browser to cache the provided override record. Used for the rule
--   action <tt>BLOCK</tt> with a <tt>BlockResponse</tt> setting of
--   <tt>OVERRIDE</tt>.
--   
--   This setting is required if the <tt>BlockResponse</tt> setting is
--   <tt>OVERRIDE</tt>.
[$sel:blockOverrideTtl:CreateFirewallRule'] :: CreateFirewallRule -> Maybe Natural

-- | The custom DNS record to send back in response to the query. Used for
--   the rule action <tt>BLOCK</tt> with a <tt>BlockResponse</tt> setting
--   of <tt>OVERRIDE</tt>.
--   
--   This setting is required if the <tt>BlockResponse</tt> setting is
--   <tt>OVERRIDE</tt>.
[$sel:blockOverrideDomain:CreateFirewallRule'] :: CreateFirewallRule -> Maybe Text

-- | A unique string that identifies the request and that allows you to
--   retry failed requests without the risk of running the operation twice.
--   <tt>CreatorRequestId</tt> can be any unique string, for example, a
--   date/time stamp.
[$sel:creatorRequestId:CreateFirewallRule'] :: CreateFirewallRule -> Text

-- | The unique identifier of the firewall rule group where you want to
--   create the rule.
[$sel:firewallRuleGroupId:CreateFirewallRule'] :: CreateFirewallRule -> Text

-- | The ID of the domain list that you want to use in the rule.
[$sel:firewallDomainListId:CreateFirewallRule'] :: CreateFirewallRule -> Text

-- | The setting that determines the processing order of the rule in the
--   rule group. DNS Firewall processes the rules in a rule group by order
--   of priority, starting from the lowest setting.
--   
--   You must specify a unique priority for each rule in a rule group. To
--   make it easier to insert rules later, leave space between the numbers,
--   for example, use 100, 200, and so on. You can change the priority
--   setting for the rules in a rule group at any time.
[$sel:priority:CreateFirewallRule'] :: CreateFirewallRule -> Int

-- | The action that DNS Firewall should take on a DNS query when it
--   matches one of the domains in the rule's domain list:
--   
--   <ul>
--   <li><tt>ALLOW</tt> - Permit the request to go through.</li>
--   <li><tt>ALERT</tt> - Permit the request and send metrics and logs to
--   Cloud Watch.</li>
--   <li><tt>BLOCK</tt> - Disallow the request. This option requires
--   additional details in the rule's <tt>BlockResponse</tt>.</li>
--   </ul>
[$sel:action:CreateFirewallRule'] :: CreateFirewallRule -> Action

-- | A name that lets you identify the rule in the rule group.
[$sel:name:CreateFirewallRule'] :: CreateFirewallRule -> Text

-- | Create a value of <a>CreateFirewallRule</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:blockOverrideDnsType:CreateFirewallRule'</a>,
--   <a>createFirewallRule_blockOverrideDnsType</a> - The DNS record's
--   type. This determines the format of the record value that you provided
--   in <tt>BlockOverrideDomain</tt>. Used for the rule action
--   <tt>BLOCK</tt> with a <tt>BlockResponse</tt> setting of
--   <tt>OVERRIDE</tt>.
--   
--   This setting is required if the <tt>BlockResponse</tt> setting is
--   <tt>OVERRIDE</tt>.
--   
--   <a>$sel:blockResponse:CreateFirewallRule'</a>,
--   <a>createFirewallRule_blockResponse</a> - The way that you want DNS
--   Firewall to block the request, used with the rule action setting
--   <tt>BLOCK</tt>.
--   
--   <ul>
--   <li><tt>NODATA</tt> - Respond indicating that the query was
--   successful, but no response is available for it.</li>
--   <li><tt>NXDOMAIN</tt> - Respond indicating that the domain name that's
--   in the query doesn't exist.</li>
--   <li><tt>OVERRIDE</tt> - Provide a custom override in the response.
--   This option requires custom handling details in the rule's
--   <tt>BlockOverride*</tt> settings.</li>
--   </ul>
--   
--   This setting is required if the rule action setting is <tt>BLOCK</tt>.
--   
--   <a>$sel:blockOverrideTtl:CreateFirewallRule'</a>,
--   <a>createFirewallRule_blockOverrideTtl</a> - The recommended amount of
--   time, in seconds, for the DNS resolver or web browser to cache the
--   provided override record. Used for the rule action <tt>BLOCK</tt> with
--   a <tt>BlockResponse</tt> setting of <tt>OVERRIDE</tt>.
--   
--   This setting is required if the <tt>BlockResponse</tt> setting is
--   <tt>OVERRIDE</tt>.
--   
--   <a>$sel:blockOverrideDomain:CreateFirewallRule'</a>,
--   <a>createFirewallRule_blockOverrideDomain</a> - The custom DNS record
--   to send back in response to the query. Used for the rule action
--   <tt>BLOCK</tt> with a <tt>BlockResponse</tt> setting of
--   <tt>OVERRIDE</tt>.
--   
--   This setting is required if the <tt>BlockResponse</tt> setting is
--   <tt>OVERRIDE</tt>.
--   
--   <a>$sel:creatorRequestId:CreateFirewallRule'</a>,
--   <a>createFirewallRule_creatorRequestId</a> - A unique string that
--   identifies the request and that allows you to retry failed requests
--   without the risk of running the operation twice.
--   <tt>CreatorRequestId</tt> can be any unique string, for example, a
--   date/time stamp.
--   
--   <a>$sel:firewallRuleGroupId:CreateFirewallRule'</a>,
--   <a>createFirewallRule_firewallRuleGroupId</a> - The unique identifier
--   of the firewall rule group where you want to create the rule.
--   
--   <a>$sel:firewallDomainListId:CreateFirewallRule'</a>,
--   <a>createFirewallRule_firewallDomainListId</a> - The ID of the domain
--   list that you want to use in the rule.
--   
--   <a>$sel:priority:CreateFirewallRule'</a>,
--   <a>createFirewallRule_priority</a> - The setting that determines the
--   processing order of the rule in the rule group. DNS Firewall processes
--   the rules in a rule group by order of priority, starting from the
--   lowest setting.
--   
--   You must specify a unique priority for each rule in a rule group. To
--   make it easier to insert rules later, leave space between the numbers,
--   for example, use 100, 200, and so on. You can change the priority
--   setting for the rules in a rule group at any time.
--   
--   <a>$sel:action:CreateFirewallRule'</a>,
--   <a>createFirewallRule_action</a> - The action that DNS Firewall should
--   take on a DNS query when it matches one of the domains in the rule's
--   domain list:
--   
--   <ul>
--   <li><tt>ALLOW</tt> - Permit the request to go through.</li>
--   <li><tt>ALERT</tt> - Permit the request and send metrics and logs to
--   Cloud Watch.</li>
--   <li><tt>BLOCK</tt> - Disallow the request. This option requires
--   additional details in the rule's <tt>BlockResponse</tt>.</li>
--   </ul>
--   
--   <a>$sel:name:CreateFirewallRule'</a>, <a>createFirewallRule_name</a> -
--   A name that lets you identify the rule in the rule group.
newCreateFirewallRule :: Text -> Text -> Text -> Int -> Action -> Text -> CreateFirewallRule

-- | The DNS record's type. This determines the format of the record value
--   that you provided in <tt>BlockOverrideDomain</tt>. Used for the rule
--   action <tt>BLOCK</tt> with a <tt>BlockResponse</tt> setting of
--   <tt>OVERRIDE</tt>.
--   
--   This setting is required if the <tt>BlockResponse</tt> setting is
--   <tt>OVERRIDE</tt>.
createFirewallRule_blockOverrideDnsType :: Lens' CreateFirewallRule (Maybe BlockOverrideDnsType)

-- | The way that you want DNS Firewall to block the request, used with the
--   rule action setting <tt>BLOCK</tt>.
--   
--   <ul>
--   <li><tt>NODATA</tt> - Respond indicating that the query was
--   successful, but no response is available for it.</li>
--   <li><tt>NXDOMAIN</tt> - Respond indicating that the domain name that's
--   in the query doesn't exist.</li>
--   <li><tt>OVERRIDE</tt> - Provide a custom override in the response.
--   This option requires custom handling details in the rule's
--   <tt>BlockOverride*</tt> settings.</li>
--   </ul>
--   
--   This setting is required if the rule action setting is <tt>BLOCK</tt>.
createFirewallRule_blockResponse :: Lens' CreateFirewallRule (Maybe BlockResponse)

-- | The recommended amount of time, in seconds, for the DNS resolver or
--   web browser to cache the provided override record. Used for the rule
--   action <tt>BLOCK</tt> with a <tt>BlockResponse</tt> setting of
--   <tt>OVERRIDE</tt>.
--   
--   This setting is required if the <tt>BlockResponse</tt> setting is
--   <tt>OVERRIDE</tt>.
createFirewallRule_blockOverrideTtl :: Lens' CreateFirewallRule (Maybe Natural)

-- | The custom DNS record to send back in response to the query. Used for
--   the rule action <tt>BLOCK</tt> with a <tt>BlockResponse</tt> setting
--   of <tt>OVERRIDE</tt>.
--   
--   This setting is required if the <tt>BlockResponse</tt> setting is
--   <tt>OVERRIDE</tt>.
createFirewallRule_blockOverrideDomain :: Lens' CreateFirewallRule (Maybe Text)

-- | A unique string that identifies the request and that allows you to
--   retry failed requests without the risk of running the operation twice.
--   <tt>CreatorRequestId</tt> can be any unique string, for example, a
--   date/time stamp.
createFirewallRule_creatorRequestId :: Lens' CreateFirewallRule Text

-- | The unique identifier of the firewall rule group where you want to
--   create the rule.
createFirewallRule_firewallRuleGroupId :: Lens' CreateFirewallRule Text

-- | The ID of the domain list that you want to use in the rule.
createFirewallRule_firewallDomainListId :: Lens' CreateFirewallRule Text

-- | The setting that determines the processing order of the rule in the
--   rule group. DNS Firewall processes the rules in a rule group by order
--   of priority, starting from the lowest setting.
--   
--   You must specify a unique priority for each rule in a rule group. To
--   make it easier to insert rules later, leave space between the numbers,
--   for example, use 100, 200, and so on. You can change the priority
--   setting for the rules in a rule group at any time.
createFirewallRule_priority :: Lens' CreateFirewallRule Int

-- | The action that DNS Firewall should take on a DNS query when it
--   matches one of the domains in the rule's domain list:
--   
--   <ul>
--   <li><tt>ALLOW</tt> - Permit the request to go through.</li>
--   <li><tt>ALERT</tt> - Permit the request and send metrics and logs to
--   Cloud Watch.</li>
--   <li><tt>BLOCK</tt> - Disallow the request. This option requires
--   additional details in the rule's <tt>BlockResponse</tt>.</li>
--   </ul>
createFirewallRule_action :: Lens' CreateFirewallRule Action

-- | A name that lets you identify the rule in the rule group.
createFirewallRule_name :: Lens' CreateFirewallRule Text

-- | <i>See:</i> <a>newCreateFirewallRuleResponse</a> smart constructor.
data CreateFirewallRuleResponse
CreateFirewallRuleResponse' :: Maybe FirewallRule -> Int -> CreateFirewallRuleResponse

-- | The firewall rule that you just created.
[$sel:firewallRule:CreateFirewallRuleResponse'] :: CreateFirewallRuleResponse -> Maybe FirewallRule

-- | The response's http status code.
[$sel:httpStatus:CreateFirewallRuleResponse'] :: CreateFirewallRuleResponse -> Int

-- | Create a value of <a>CreateFirewallRuleResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:firewallRule:CreateFirewallRuleResponse'</a>,
--   <a>createFirewallRuleResponse_firewallRule</a> - The firewall rule
--   that you just created.
--   
--   <a>$sel:httpStatus:CreateFirewallRuleResponse'</a>,
--   <a>createFirewallRuleResponse_httpStatus</a> - The response's http
--   status code.
newCreateFirewallRuleResponse :: Int -> CreateFirewallRuleResponse

-- | The firewall rule that you just created.
createFirewallRuleResponse_firewallRule :: Lens' CreateFirewallRuleResponse (Maybe FirewallRule)

-- | The response's http status code.
createFirewallRuleResponse_httpStatus :: Lens' CreateFirewallRuleResponse Int
instance GHC.Generics.Generic Network.AWS.Route53Resolver.CreateFirewallRule.CreateFirewallRule
instance GHC.Show.Show Network.AWS.Route53Resolver.CreateFirewallRule.CreateFirewallRule
instance GHC.Read.Read Network.AWS.Route53Resolver.CreateFirewallRule.CreateFirewallRule
instance GHC.Classes.Eq Network.AWS.Route53Resolver.CreateFirewallRule.CreateFirewallRule
instance GHC.Generics.Generic Network.AWS.Route53Resolver.CreateFirewallRule.CreateFirewallRuleResponse
instance GHC.Show.Show Network.AWS.Route53Resolver.CreateFirewallRule.CreateFirewallRuleResponse
instance GHC.Read.Read Network.AWS.Route53Resolver.CreateFirewallRule.CreateFirewallRuleResponse
instance GHC.Classes.Eq Network.AWS.Route53Resolver.CreateFirewallRule.CreateFirewallRuleResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53Resolver.CreateFirewallRule.CreateFirewallRule
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.CreateFirewallRule.CreateFirewallRuleResponse
instance Data.Hashable.Class.Hashable Network.AWS.Route53Resolver.CreateFirewallRule.CreateFirewallRule
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.CreateFirewallRule.CreateFirewallRule
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53Resolver.CreateFirewallRule.CreateFirewallRule
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53Resolver.CreateFirewallRule.CreateFirewallRule
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53Resolver.CreateFirewallRule.CreateFirewallRule
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53Resolver.CreateFirewallRule.CreateFirewallRule


-- | Creates an empty firewall domain list for use in DNS Firewall rules.
--   You can populate the domains for the new list with a file, using
--   ImportFirewallDomains, or with domain strings, using
--   UpdateFirewallDomains.
module Network.AWS.Route53Resolver.CreateFirewallDomainList

-- | <i>See:</i> <a>newCreateFirewallDomainList</a> smart constructor.
data CreateFirewallDomainList
CreateFirewallDomainList' :: Maybe [Tag] -> Text -> Text -> CreateFirewallDomainList

-- | A list of the tag keys and values that you want to associate with the
--   domain list.
[$sel:tags:CreateFirewallDomainList'] :: CreateFirewallDomainList -> Maybe [Tag]

-- | A unique string that identifies the request and that allows you to
--   retry failed requests without the risk of running the operation twice.
--   <tt>CreatorRequestId</tt> can be any unique string, for example, a
--   date/time stamp.
[$sel:creatorRequestId:CreateFirewallDomainList'] :: CreateFirewallDomainList -> Text

-- | A name that lets you identify the domain list to manage and use it.
[$sel:name:CreateFirewallDomainList'] :: CreateFirewallDomainList -> Text

-- | Create a value of <a>CreateFirewallDomainList</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:CreateFirewallDomainList'</a>,
--   <a>createFirewallDomainList_tags</a> - A list of the tag keys and
--   values that you want to associate with the domain list.
--   
--   <a>$sel:creatorRequestId:CreateFirewallDomainList'</a>,
--   <a>createFirewallDomainList_creatorRequestId</a> - A unique string
--   that identifies the request and that allows you to retry failed
--   requests without the risk of running the operation twice.
--   <tt>CreatorRequestId</tt> can be any unique string, for example, a
--   date/time stamp.
--   
--   <a>$sel:name:CreateFirewallDomainList'</a>,
--   <a>createFirewallDomainList_name</a> - A name that lets you identify
--   the domain list to manage and use it.
newCreateFirewallDomainList :: Text -> Text -> CreateFirewallDomainList

-- | A list of the tag keys and values that you want to associate with the
--   domain list.
createFirewallDomainList_tags :: Lens' CreateFirewallDomainList (Maybe [Tag])

-- | A unique string that identifies the request and that allows you to
--   retry failed requests without the risk of running the operation twice.
--   <tt>CreatorRequestId</tt> can be any unique string, for example, a
--   date/time stamp.
createFirewallDomainList_creatorRequestId :: Lens' CreateFirewallDomainList Text

-- | A name that lets you identify the domain list to manage and use it.
createFirewallDomainList_name :: Lens' CreateFirewallDomainList Text

-- | <i>See:</i> <a>newCreateFirewallDomainListResponse</a> smart
--   constructor.
data CreateFirewallDomainListResponse
CreateFirewallDomainListResponse' :: Maybe FirewallDomainList -> Int -> CreateFirewallDomainListResponse

-- | The domain list that you just created.
[$sel:firewallDomainList:CreateFirewallDomainListResponse'] :: CreateFirewallDomainListResponse -> Maybe FirewallDomainList

-- | The response's http status code.
[$sel:httpStatus:CreateFirewallDomainListResponse'] :: CreateFirewallDomainListResponse -> Int

-- | Create a value of <a>CreateFirewallDomainListResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:firewallDomainList:CreateFirewallDomainListResponse'</a>,
--   <a>createFirewallDomainListResponse_firewallDomainList</a> - The
--   domain list that you just created.
--   
--   <a>$sel:httpStatus:CreateFirewallDomainListResponse'</a>,
--   <a>createFirewallDomainListResponse_httpStatus</a> - The response's
--   http status code.
newCreateFirewallDomainListResponse :: Int -> CreateFirewallDomainListResponse

-- | The domain list that you just created.
createFirewallDomainListResponse_firewallDomainList :: Lens' CreateFirewallDomainListResponse (Maybe FirewallDomainList)

-- | The response's http status code.
createFirewallDomainListResponse_httpStatus :: Lens' CreateFirewallDomainListResponse Int
instance GHC.Generics.Generic Network.AWS.Route53Resolver.CreateFirewallDomainList.CreateFirewallDomainList
instance GHC.Show.Show Network.AWS.Route53Resolver.CreateFirewallDomainList.CreateFirewallDomainList
instance GHC.Read.Read Network.AWS.Route53Resolver.CreateFirewallDomainList.CreateFirewallDomainList
instance GHC.Classes.Eq Network.AWS.Route53Resolver.CreateFirewallDomainList.CreateFirewallDomainList
instance GHC.Generics.Generic Network.AWS.Route53Resolver.CreateFirewallDomainList.CreateFirewallDomainListResponse
instance GHC.Show.Show Network.AWS.Route53Resolver.CreateFirewallDomainList.CreateFirewallDomainListResponse
instance GHC.Read.Read Network.AWS.Route53Resolver.CreateFirewallDomainList.CreateFirewallDomainListResponse
instance GHC.Classes.Eq Network.AWS.Route53Resolver.CreateFirewallDomainList.CreateFirewallDomainListResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53Resolver.CreateFirewallDomainList.CreateFirewallDomainList
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.CreateFirewallDomainList.CreateFirewallDomainListResponse
instance Data.Hashable.Class.Hashable Network.AWS.Route53Resolver.CreateFirewallDomainList.CreateFirewallDomainList
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.CreateFirewallDomainList.CreateFirewallDomainList
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53Resolver.CreateFirewallDomainList.CreateFirewallDomainList
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53Resolver.CreateFirewallDomainList.CreateFirewallDomainList
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53Resolver.CreateFirewallDomainList.CreateFirewallDomainList
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53Resolver.CreateFirewallDomainList.CreateFirewallDomainList


-- | Associates a Resolver rule with a VPC. When you associate a rule with
--   a VPC, Resolver forwards all DNS queries for the domain name that is
--   specified in the rule and that originate in the VPC. The queries are
--   forwarded to the IP addresses for the DNS resolvers that are specified
--   in the rule. For more information about rules, see
--   <a>CreateResolverRule</a>.
module Network.AWS.Route53Resolver.AssociateResolverRule

-- | <i>See:</i> <a>newAssociateResolverRule</a> smart constructor.
data AssociateResolverRule
AssociateResolverRule' :: Maybe Text -> Text -> Text -> AssociateResolverRule

-- | A name for the association that you're creating between a Resolver
--   rule and a VPC.
[$sel:name:AssociateResolverRule'] :: AssociateResolverRule -> Maybe Text

-- | The ID of the Resolver rule that you want to associate with the VPC.
--   To list the existing Resolver rules, use <a>ListResolverRules</a>.
[$sel:resolverRuleId:AssociateResolverRule'] :: AssociateResolverRule -> Text

-- | The ID of the VPC that you want to associate the Resolver rule with.
[$sel:vPCId:AssociateResolverRule'] :: AssociateResolverRule -> Text

-- | Create a value of <a>AssociateResolverRule</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:AssociateResolverRule'</a>,
--   <a>associateResolverRule_name</a> - A name for the association that
--   you're creating between a Resolver rule and a VPC.
--   
--   <a>$sel:resolverRuleId:AssociateResolverRule'</a>,
--   <a>associateResolverRule_resolverRuleId</a> - The ID of the Resolver
--   rule that you want to associate with the VPC. To list the existing
--   Resolver rules, use <a>ListResolverRules</a>.
--   
--   <a>$sel:vPCId:AssociateResolverRule'</a>,
--   <a>associateResolverRule_vPCId</a> - The ID of the VPC that you want
--   to associate the Resolver rule with.
newAssociateResolverRule :: Text -> Text -> AssociateResolverRule

-- | A name for the association that you're creating between a Resolver
--   rule and a VPC.
associateResolverRule_name :: Lens' AssociateResolverRule (Maybe Text)

-- | The ID of the Resolver rule that you want to associate with the VPC.
--   To list the existing Resolver rules, use <a>ListResolverRules</a>.
associateResolverRule_resolverRuleId :: Lens' AssociateResolverRule Text

-- | The ID of the VPC that you want to associate the Resolver rule with.
associateResolverRule_vPCId :: Lens' AssociateResolverRule Text

-- | <i>See:</i> <a>newAssociateResolverRuleResponse</a> smart constructor.
data AssociateResolverRuleResponse
AssociateResolverRuleResponse' :: Maybe ResolverRuleAssociation -> Int -> AssociateResolverRuleResponse

-- | Information about the <tt>AssociateResolverRule</tt> request,
--   including the status of the request.
[$sel:resolverRuleAssociation:AssociateResolverRuleResponse'] :: AssociateResolverRuleResponse -> Maybe ResolverRuleAssociation

-- | The response's http status code.
[$sel:httpStatus:AssociateResolverRuleResponse'] :: AssociateResolverRuleResponse -> Int

-- | Create a value of <a>AssociateResolverRuleResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resolverRuleAssociation:AssociateResolverRuleResponse'</a>,
--   <a>associateResolverRuleResponse_resolverRuleAssociation</a> -
--   Information about the <tt>AssociateResolverRule</tt> request,
--   including the status of the request.
--   
--   <a>$sel:httpStatus:AssociateResolverRuleResponse'</a>,
--   <a>associateResolverRuleResponse_httpStatus</a> - The response's http
--   status code.
newAssociateResolverRuleResponse :: Int -> AssociateResolverRuleResponse

-- | Information about the <tt>AssociateResolverRule</tt> request,
--   including the status of the request.
associateResolverRuleResponse_resolverRuleAssociation :: Lens' AssociateResolverRuleResponse (Maybe ResolverRuleAssociation)

-- | The response's http status code.
associateResolverRuleResponse_httpStatus :: Lens' AssociateResolverRuleResponse Int
instance GHC.Generics.Generic Network.AWS.Route53Resolver.AssociateResolverRule.AssociateResolverRule
instance GHC.Show.Show Network.AWS.Route53Resolver.AssociateResolverRule.AssociateResolverRule
instance GHC.Read.Read Network.AWS.Route53Resolver.AssociateResolverRule.AssociateResolverRule
instance GHC.Classes.Eq Network.AWS.Route53Resolver.AssociateResolverRule.AssociateResolverRule
instance GHC.Generics.Generic Network.AWS.Route53Resolver.AssociateResolverRule.AssociateResolverRuleResponse
instance GHC.Show.Show Network.AWS.Route53Resolver.AssociateResolverRule.AssociateResolverRuleResponse
instance GHC.Read.Read Network.AWS.Route53Resolver.AssociateResolverRule.AssociateResolverRuleResponse
instance GHC.Classes.Eq Network.AWS.Route53Resolver.AssociateResolverRule.AssociateResolverRuleResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53Resolver.AssociateResolverRule.AssociateResolverRule
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.AssociateResolverRule.AssociateResolverRuleResponse
instance Data.Hashable.Class.Hashable Network.AWS.Route53Resolver.AssociateResolverRule.AssociateResolverRule
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.AssociateResolverRule.AssociateResolverRule
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53Resolver.AssociateResolverRule.AssociateResolverRule
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53Resolver.AssociateResolverRule.AssociateResolverRule
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53Resolver.AssociateResolverRule.AssociateResolverRule
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53Resolver.AssociateResolverRule.AssociateResolverRule


-- | Associates an Amazon VPC with a specified query logging configuration.
--   Route 53 Resolver logs DNS queries that originate in all of the Amazon
--   VPCs that are associated with a specified query logging configuration.
--   To associate more than one VPC with a configuration, submit one
--   <tt>AssociateResolverQueryLogConfig</tt> request for each VPC.
--   
--   The VPCs that you associate with a query logging configuration must be
--   in the same Region as the configuration.
--   
--   To remove a VPC from a query logging configuration, see
--   <a>DisassociateResolverQueryLogConfig</a>.
module Network.AWS.Route53Resolver.AssociateResolverQueryLogConfig

-- | <i>See:</i> <a>newAssociateResolverQueryLogConfig</a> smart
--   constructor.
data AssociateResolverQueryLogConfig
AssociateResolverQueryLogConfig' :: Text -> Text -> AssociateResolverQueryLogConfig

-- | The ID of the query logging configuration that you want to associate a
--   VPC with.
[$sel:resolverQueryLogConfigId:AssociateResolverQueryLogConfig'] :: AssociateResolverQueryLogConfig -> Text

-- | The ID of an Amazon VPC that you want this query logging configuration
--   to log queries for.
--   
--   The VPCs and the query logging configuration must be in the same
--   Region.
[$sel:resourceId:AssociateResolverQueryLogConfig'] :: AssociateResolverQueryLogConfig -> Text

-- | Create a value of <a>AssociateResolverQueryLogConfig</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resolverQueryLogConfigId:AssociateResolverQueryLogConfig'</a>,
--   <a>associateResolverQueryLogConfig_resolverQueryLogConfigId</a> - The
--   ID of the query logging configuration that you want to associate a VPC
--   with.
--   
--   <a>$sel:resourceId:AssociateResolverQueryLogConfig'</a>,
--   <a>associateResolverQueryLogConfig_resourceId</a> - The ID of an
--   Amazon VPC that you want this query logging configuration to log
--   queries for.
--   
--   The VPCs and the query logging configuration must be in the same
--   Region.
newAssociateResolverQueryLogConfig :: Text -> Text -> AssociateResolverQueryLogConfig

-- | The ID of the query logging configuration that you want to associate a
--   VPC with.
associateResolverQueryLogConfig_resolverQueryLogConfigId :: Lens' AssociateResolverQueryLogConfig Text

-- | The ID of an Amazon VPC that you want this query logging configuration
--   to log queries for.
--   
--   The VPCs and the query logging configuration must be in the same
--   Region.
associateResolverQueryLogConfig_resourceId :: Lens' AssociateResolverQueryLogConfig Text

-- | <i>See:</i> <a>newAssociateResolverQueryLogConfigResponse</a> smart
--   constructor.
data AssociateResolverQueryLogConfigResponse
AssociateResolverQueryLogConfigResponse' :: Maybe ResolverQueryLogConfigAssociation -> Int -> AssociateResolverQueryLogConfigResponse

-- | A complex type that contains settings for a specified association
--   between an Amazon VPC and a query logging configuration.
[$sel:resolverQueryLogConfigAssociation:AssociateResolverQueryLogConfigResponse'] :: AssociateResolverQueryLogConfigResponse -> Maybe ResolverQueryLogConfigAssociation

-- | The response's http status code.
[$sel:httpStatus:AssociateResolverQueryLogConfigResponse'] :: AssociateResolverQueryLogConfigResponse -> Int

-- | Create a value of <a>AssociateResolverQueryLogConfigResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:resolverQueryLogConfigAssociation:AssociateResolverQueryLogConfigResponse'</a>,
--   <a>associateResolverQueryLogConfigResponse_resolverQueryLogConfigAssociation</a>
--   - A complex type that contains settings for a specified association
--   between an Amazon VPC and a query logging configuration.
--   
--   <a>$sel:httpStatus:AssociateResolverQueryLogConfigResponse'</a>,
--   <a>associateResolverQueryLogConfigResponse_httpStatus</a> - The
--   response's http status code.
newAssociateResolverQueryLogConfigResponse :: Int -> AssociateResolverQueryLogConfigResponse

-- | A complex type that contains settings for a specified association
--   between an Amazon VPC and a query logging configuration.
associateResolverQueryLogConfigResponse_resolverQueryLogConfigAssociation :: Lens' AssociateResolverQueryLogConfigResponse (Maybe ResolverQueryLogConfigAssociation)

-- | The response's http status code.
associateResolverQueryLogConfigResponse_httpStatus :: Lens' AssociateResolverQueryLogConfigResponse Int
instance GHC.Generics.Generic Network.AWS.Route53Resolver.AssociateResolverQueryLogConfig.AssociateResolverQueryLogConfig
instance GHC.Show.Show Network.AWS.Route53Resolver.AssociateResolverQueryLogConfig.AssociateResolverQueryLogConfig
instance GHC.Read.Read Network.AWS.Route53Resolver.AssociateResolverQueryLogConfig.AssociateResolverQueryLogConfig
instance GHC.Classes.Eq Network.AWS.Route53Resolver.AssociateResolverQueryLogConfig.AssociateResolverQueryLogConfig
instance GHC.Generics.Generic Network.AWS.Route53Resolver.AssociateResolverQueryLogConfig.AssociateResolverQueryLogConfigResponse
instance GHC.Show.Show Network.AWS.Route53Resolver.AssociateResolverQueryLogConfig.AssociateResolverQueryLogConfigResponse
instance GHC.Read.Read Network.AWS.Route53Resolver.AssociateResolverQueryLogConfig.AssociateResolverQueryLogConfigResponse
instance GHC.Classes.Eq Network.AWS.Route53Resolver.AssociateResolverQueryLogConfig.AssociateResolverQueryLogConfigResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53Resolver.AssociateResolverQueryLogConfig.AssociateResolverQueryLogConfig
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.AssociateResolverQueryLogConfig.AssociateResolverQueryLogConfigResponse
instance Data.Hashable.Class.Hashable Network.AWS.Route53Resolver.AssociateResolverQueryLogConfig.AssociateResolverQueryLogConfig
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.AssociateResolverQueryLogConfig.AssociateResolverQueryLogConfig
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53Resolver.AssociateResolverQueryLogConfig.AssociateResolverQueryLogConfig
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53Resolver.AssociateResolverQueryLogConfig.AssociateResolverQueryLogConfig
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53Resolver.AssociateResolverQueryLogConfig.AssociateResolverQueryLogConfig
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53Resolver.AssociateResolverQueryLogConfig.AssociateResolverQueryLogConfig


-- | Adds IP addresses to an inbound or an outbound Resolver endpoint. If
--   you want to add more than one IP address, submit one
--   <tt>AssociateResolverEndpointIpAddress</tt> request for each IP
--   address.
--   
--   To remove an IP address from an endpoint, see
--   <a>DisassociateResolverEndpointIpAddress</a>.
module Network.AWS.Route53Resolver.AssociateResolverEndpointIpAddress

-- | <i>See:</i> <a>newAssociateResolverEndpointIpAddress</a> smart
--   constructor.
data AssociateResolverEndpointIpAddress
AssociateResolverEndpointIpAddress' :: Text -> IpAddressUpdate -> AssociateResolverEndpointIpAddress

-- | The ID of the Resolver endpoint that you want to associate IP
--   addresses with.
[$sel:resolverEndpointId:AssociateResolverEndpointIpAddress'] :: AssociateResolverEndpointIpAddress -> Text

-- | Either the IPv4 address that you want to add to a Resolver endpoint or
--   a subnet ID. If you specify a subnet ID, Resolver chooses an IP
--   address for you from the available IPs in the specified subnet.
[$sel:ipAddress:AssociateResolverEndpointIpAddress'] :: AssociateResolverEndpointIpAddress -> IpAddressUpdate

-- | Create a value of <a>AssociateResolverEndpointIpAddress</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resolverEndpointId:AssociateResolverEndpointIpAddress'</a>,
--   <a>associateResolverEndpointIpAddress_resolverEndpointId</a> - The ID
--   of the Resolver endpoint that you want to associate IP addresses with.
--   
--   <a>$sel:ipAddress:AssociateResolverEndpointIpAddress'</a>,
--   <a>associateResolverEndpointIpAddress_ipAddress</a> - Either the IPv4
--   address that you want to add to a Resolver endpoint or a subnet ID. If
--   you specify a subnet ID, Resolver chooses an IP address for you from
--   the available IPs in the specified subnet.
newAssociateResolverEndpointIpAddress :: Text -> IpAddressUpdate -> AssociateResolverEndpointIpAddress

-- | The ID of the Resolver endpoint that you want to associate IP
--   addresses with.
associateResolverEndpointIpAddress_resolverEndpointId :: Lens' AssociateResolverEndpointIpAddress Text

-- | Either the IPv4 address that you want to add to a Resolver endpoint or
--   a subnet ID. If you specify a subnet ID, Resolver chooses an IP
--   address for you from the available IPs in the specified subnet.
associateResolverEndpointIpAddress_ipAddress :: Lens' AssociateResolverEndpointIpAddress IpAddressUpdate

-- | <i>See:</i> <a>newAssociateResolverEndpointIpAddressResponse</a> smart
--   constructor.
data AssociateResolverEndpointIpAddressResponse
AssociateResolverEndpointIpAddressResponse' :: Maybe ResolverEndpoint -> Int -> AssociateResolverEndpointIpAddressResponse

-- | The response to an <tt>AssociateResolverEndpointIpAddress</tt>
--   request.
[$sel:resolverEndpoint:AssociateResolverEndpointIpAddressResponse'] :: AssociateResolverEndpointIpAddressResponse -> Maybe ResolverEndpoint

-- | The response's http status code.
[$sel:httpStatus:AssociateResolverEndpointIpAddressResponse'] :: AssociateResolverEndpointIpAddressResponse -> Int

-- | Create a value of <a>AssociateResolverEndpointIpAddressResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:resolverEndpoint:AssociateResolverEndpointIpAddressResponse'</a>,
--   <a>associateResolverEndpointIpAddressResponse_resolverEndpoint</a> -
--   The response to an <tt>AssociateResolverEndpointIpAddress</tt>
--   request.
--   
--   <a>$sel:httpStatus:AssociateResolverEndpointIpAddressResponse'</a>,
--   <a>associateResolverEndpointIpAddressResponse_httpStatus</a> - The
--   response's http status code.
newAssociateResolverEndpointIpAddressResponse :: Int -> AssociateResolverEndpointIpAddressResponse

-- | The response to an <tt>AssociateResolverEndpointIpAddress</tt>
--   request.
associateResolverEndpointIpAddressResponse_resolverEndpoint :: Lens' AssociateResolverEndpointIpAddressResponse (Maybe ResolverEndpoint)

-- | The response's http status code.
associateResolverEndpointIpAddressResponse_httpStatus :: Lens' AssociateResolverEndpointIpAddressResponse Int
instance GHC.Generics.Generic Network.AWS.Route53Resolver.AssociateResolverEndpointIpAddress.AssociateResolverEndpointIpAddress
instance GHC.Show.Show Network.AWS.Route53Resolver.AssociateResolverEndpointIpAddress.AssociateResolverEndpointIpAddress
instance GHC.Read.Read Network.AWS.Route53Resolver.AssociateResolverEndpointIpAddress.AssociateResolverEndpointIpAddress
instance GHC.Classes.Eq Network.AWS.Route53Resolver.AssociateResolverEndpointIpAddress.AssociateResolverEndpointIpAddress
instance GHC.Generics.Generic Network.AWS.Route53Resolver.AssociateResolverEndpointIpAddress.AssociateResolverEndpointIpAddressResponse
instance GHC.Show.Show Network.AWS.Route53Resolver.AssociateResolverEndpointIpAddress.AssociateResolverEndpointIpAddressResponse
instance GHC.Read.Read Network.AWS.Route53Resolver.AssociateResolverEndpointIpAddress.AssociateResolverEndpointIpAddressResponse
instance GHC.Classes.Eq Network.AWS.Route53Resolver.AssociateResolverEndpointIpAddress.AssociateResolverEndpointIpAddressResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53Resolver.AssociateResolverEndpointIpAddress.AssociateResolverEndpointIpAddress
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.AssociateResolverEndpointIpAddress.AssociateResolverEndpointIpAddressResponse
instance Data.Hashable.Class.Hashable Network.AWS.Route53Resolver.AssociateResolverEndpointIpAddress.AssociateResolverEndpointIpAddress
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.AssociateResolverEndpointIpAddress.AssociateResolverEndpointIpAddress
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53Resolver.AssociateResolverEndpointIpAddress.AssociateResolverEndpointIpAddress
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53Resolver.AssociateResolverEndpointIpAddress.AssociateResolverEndpointIpAddress
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53Resolver.AssociateResolverEndpointIpAddress.AssociateResolverEndpointIpAddress
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53Resolver.AssociateResolverEndpointIpAddress.AssociateResolverEndpointIpAddress


-- | Associates a FirewallRuleGroup with a VPC, to provide DNS filtering
--   for the VPC.
module Network.AWS.Route53Resolver.AssociateFirewallRuleGroup

-- | <i>See:</i> <a>newAssociateFirewallRuleGroup</a> smart constructor.
data AssociateFirewallRuleGroup
AssociateFirewallRuleGroup' :: Maybe MutationProtectionStatus -> Maybe [Tag] -> Text -> Text -> Text -> Int -> Text -> AssociateFirewallRuleGroup

-- | If enabled, this setting disallows modification or removal of the
--   association, to help prevent against accidentally altering DNS
--   firewall protections. When you create the association, the default
--   setting is <tt>DISABLED</tt>.
[$sel:mutationProtection:AssociateFirewallRuleGroup'] :: AssociateFirewallRuleGroup -> Maybe MutationProtectionStatus

-- | A list of the tag keys and values that you want to associate with the
--   rule group association.
[$sel:tags:AssociateFirewallRuleGroup'] :: AssociateFirewallRuleGroup -> Maybe [Tag]

-- | A unique string that identifies the request and that allows failed
--   requests to be retried without the risk of running the operation
--   twice. <tt>CreatorRequestId</tt> can be any unique string, for
--   example, a date/time stamp.
[$sel:creatorRequestId:AssociateFirewallRuleGroup'] :: AssociateFirewallRuleGroup -> Text

-- | The unique identifier of the firewall rule group.
[$sel:firewallRuleGroupId:AssociateFirewallRuleGroup'] :: AssociateFirewallRuleGroup -> Text

-- | The unique identifier of the VPC that you want to associate with the
--   rule group.
[$sel:vpcId:AssociateFirewallRuleGroup'] :: AssociateFirewallRuleGroup -> Text

-- | The setting that determines the processing order of the rule group
--   among the rule groups that you associate with the specified VPC. DNS
--   Firewall filters VPC traffic starting from the rule group with the
--   lowest numeric priority setting.
--   
--   You must specify a unique priority for each rule group that you
--   associate with a single VPC. To make it easier to insert rule groups
--   later, leave space between the numbers, for example, use 101, 200, and
--   so on. You can change the priority setting for a rule group
--   association after you create it.
--   
--   The allowed values for <tt>Priority</tt> are between 100 and 9900.
[$sel:priority:AssociateFirewallRuleGroup'] :: AssociateFirewallRuleGroup -> Int

-- | A name that lets you identify the association, to manage and use it.
[$sel:name:AssociateFirewallRuleGroup'] :: AssociateFirewallRuleGroup -> Text

-- | Create a value of <a>AssociateFirewallRuleGroup</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:mutationProtection:AssociateFirewallRuleGroup'</a>,
--   <a>associateFirewallRuleGroup_mutationProtection</a> - If enabled,
--   this setting disallows modification or removal of the association, to
--   help prevent against accidentally altering DNS firewall protections.
--   When you create the association, the default setting is
--   <tt>DISABLED</tt>.
--   
--   <a>$sel:tags:AssociateFirewallRuleGroup'</a>,
--   <a>associateFirewallRuleGroup_tags</a> - A list of the tag keys and
--   values that you want to associate with the rule group association.
--   
--   <a>$sel:creatorRequestId:AssociateFirewallRuleGroup'</a>,
--   <a>associateFirewallRuleGroup_creatorRequestId</a> - A unique string
--   that identifies the request and that allows failed requests to be
--   retried without the risk of running the operation twice.
--   <tt>CreatorRequestId</tt> can be any unique string, for example, a
--   date/time stamp.
--   
--   <a>$sel:firewallRuleGroupId:AssociateFirewallRuleGroup'</a>,
--   <a>associateFirewallRuleGroup_firewallRuleGroupId</a> - The unique
--   identifier of the firewall rule group.
--   
--   <a>$sel:vpcId:AssociateFirewallRuleGroup'</a>,
--   <a>associateFirewallRuleGroup_vpcId</a> - The unique identifier of the
--   VPC that you want to associate with the rule group.
--   
--   <a>$sel:priority:AssociateFirewallRuleGroup'</a>,
--   <a>associateFirewallRuleGroup_priority</a> - The setting that
--   determines the processing order of the rule group among the rule
--   groups that you associate with the specified VPC. DNS Firewall filters
--   VPC traffic starting from the rule group with the lowest numeric
--   priority setting.
--   
--   You must specify a unique priority for each rule group that you
--   associate with a single VPC. To make it easier to insert rule groups
--   later, leave space between the numbers, for example, use 101, 200, and
--   so on. You can change the priority setting for a rule group
--   association after you create it.
--   
--   The allowed values for <tt>Priority</tt> are between 100 and 9900.
--   
--   <a>$sel:name:AssociateFirewallRuleGroup'</a>,
--   <a>associateFirewallRuleGroup_name</a> - A name that lets you identify
--   the association, to manage and use it.
newAssociateFirewallRuleGroup :: Text -> Text -> Text -> Int -> Text -> AssociateFirewallRuleGroup

-- | If enabled, this setting disallows modification or removal of the
--   association, to help prevent against accidentally altering DNS
--   firewall protections. When you create the association, the default
--   setting is <tt>DISABLED</tt>.
associateFirewallRuleGroup_mutationProtection :: Lens' AssociateFirewallRuleGroup (Maybe MutationProtectionStatus)

-- | A list of the tag keys and values that you want to associate with the
--   rule group association.
associateFirewallRuleGroup_tags :: Lens' AssociateFirewallRuleGroup (Maybe [Tag])

-- | A unique string that identifies the request and that allows failed
--   requests to be retried without the risk of running the operation
--   twice. <tt>CreatorRequestId</tt> can be any unique string, for
--   example, a date/time stamp.
associateFirewallRuleGroup_creatorRequestId :: Lens' AssociateFirewallRuleGroup Text

-- | The unique identifier of the firewall rule group.
associateFirewallRuleGroup_firewallRuleGroupId :: Lens' AssociateFirewallRuleGroup Text

-- | The unique identifier of the VPC that you want to associate with the
--   rule group.
associateFirewallRuleGroup_vpcId :: Lens' AssociateFirewallRuleGroup Text

-- | The setting that determines the processing order of the rule group
--   among the rule groups that you associate with the specified VPC. DNS
--   Firewall filters VPC traffic starting from the rule group with the
--   lowest numeric priority setting.
--   
--   You must specify a unique priority for each rule group that you
--   associate with a single VPC. To make it easier to insert rule groups
--   later, leave space between the numbers, for example, use 101, 200, and
--   so on. You can change the priority setting for a rule group
--   association after you create it.
--   
--   The allowed values for <tt>Priority</tt> are between 100 and 9900.
associateFirewallRuleGroup_priority :: Lens' AssociateFirewallRuleGroup Int

-- | A name that lets you identify the association, to manage and use it.
associateFirewallRuleGroup_name :: Lens' AssociateFirewallRuleGroup Text

-- | <i>See:</i> <a>newAssociateFirewallRuleGroupResponse</a> smart
--   constructor.
data AssociateFirewallRuleGroupResponse
AssociateFirewallRuleGroupResponse' :: Maybe FirewallRuleGroupAssociation -> Int -> AssociateFirewallRuleGroupResponse

-- | The association that you just created. The association has an ID that
--   you can use to identify it in other requests, like update and delete.
[$sel:firewallRuleGroupAssociation:AssociateFirewallRuleGroupResponse'] :: AssociateFirewallRuleGroupResponse -> Maybe FirewallRuleGroupAssociation

-- | The response's http status code.
[$sel:httpStatus:AssociateFirewallRuleGroupResponse'] :: AssociateFirewallRuleGroupResponse -> Int

-- | Create a value of <a>AssociateFirewallRuleGroupResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:firewallRuleGroupAssociation:AssociateFirewallRuleGroupResponse'</a>,
--   <a>associateFirewallRuleGroupResponse_firewallRuleGroupAssociation</a>
--   - The association that you just created. The association has an ID
--   that you can use to identify it in other requests, like update and
--   delete.
--   
--   <a>$sel:httpStatus:AssociateFirewallRuleGroupResponse'</a>,
--   <a>associateFirewallRuleGroupResponse_httpStatus</a> - The response's
--   http status code.
newAssociateFirewallRuleGroupResponse :: Int -> AssociateFirewallRuleGroupResponse

-- | The association that you just created. The association has an ID that
--   you can use to identify it in other requests, like update and delete.
associateFirewallRuleGroupResponse_firewallRuleGroupAssociation :: Lens' AssociateFirewallRuleGroupResponse (Maybe FirewallRuleGroupAssociation)

-- | The response's http status code.
associateFirewallRuleGroupResponse_httpStatus :: Lens' AssociateFirewallRuleGroupResponse Int
instance GHC.Generics.Generic Network.AWS.Route53Resolver.AssociateFirewallRuleGroup.AssociateFirewallRuleGroup
instance GHC.Show.Show Network.AWS.Route53Resolver.AssociateFirewallRuleGroup.AssociateFirewallRuleGroup
instance GHC.Read.Read Network.AWS.Route53Resolver.AssociateFirewallRuleGroup.AssociateFirewallRuleGroup
instance GHC.Classes.Eq Network.AWS.Route53Resolver.AssociateFirewallRuleGroup.AssociateFirewallRuleGroup
instance GHC.Generics.Generic Network.AWS.Route53Resolver.AssociateFirewallRuleGroup.AssociateFirewallRuleGroupResponse
instance GHC.Show.Show Network.AWS.Route53Resolver.AssociateFirewallRuleGroup.AssociateFirewallRuleGroupResponse
instance GHC.Read.Read Network.AWS.Route53Resolver.AssociateFirewallRuleGroup.AssociateFirewallRuleGroupResponse
instance GHC.Classes.Eq Network.AWS.Route53Resolver.AssociateFirewallRuleGroup.AssociateFirewallRuleGroupResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53Resolver.AssociateFirewallRuleGroup.AssociateFirewallRuleGroup
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.AssociateFirewallRuleGroup.AssociateFirewallRuleGroupResponse
instance Data.Hashable.Class.Hashable Network.AWS.Route53Resolver.AssociateFirewallRuleGroup.AssociateFirewallRuleGroup
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.AssociateFirewallRuleGroup.AssociateFirewallRuleGroup
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53Resolver.AssociateFirewallRuleGroup.AssociateFirewallRuleGroup
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53Resolver.AssociateFirewallRuleGroup.AssociateFirewallRuleGroup
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53Resolver.AssociateFirewallRuleGroup.AssociateFirewallRuleGroup
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53Resolver.AssociateFirewallRuleGroup.AssociateFirewallRuleGroup


-- | Removes one or more tags from a specified resource.
module Network.AWS.Route53Resolver.UntagResource

-- | <i>See:</i> <a>newUntagResource</a> smart constructor.
data UntagResource
UntagResource' :: Text -> [Text] -> UntagResource

-- | The Amazon Resource Name (ARN) for the resource that you want to
--   remove tags from. To get the ARN for a resource, use the applicable
--   <tt>Get</tt> or <tt>List</tt> command:
--   
--   <ul>
--   <li><a>GetResolverEndpoint</a></li>
--   <li><a>GetResolverRule</a></li>
--   <li><a>GetResolverRuleAssociation</a></li>
--   <li><a>ListResolverEndpoints</a></li>
--   <li><a>ListResolverRuleAssociations</a></li>
--   <li><a>ListResolverRules</a></li>
--   </ul>
[$sel:resourceArn:UntagResource'] :: UntagResource -> Text

-- | The tags that you want to remove to the specified resource.
[$sel:tagKeys:UntagResource'] :: UntagResource -> [Text]

-- | Create a value of <a>UntagResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:UntagResource'</a>,
--   <a>untagResource_resourceArn</a> - The Amazon Resource Name (ARN) for
--   the resource that you want to remove tags from. To get the ARN for a
--   resource, use the applicable <tt>Get</tt> or <tt>List</tt> command:
--   
--   <ul>
--   <li><a>GetResolverEndpoint</a></li>
--   <li><a>GetResolverRule</a></li>
--   <li><a>GetResolverRuleAssociation</a></li>
--   <li><a>ListResolverEndpoints</a></li>
--   <li><a>ListResolverRuleAssociations</a></li>
--   <li><a>ListResolverRules</a></li>
--   </ul>
--   
--   <a>$sel:tagKeys:UntagResource'</a>, <a>untagResource_tagKeys</a> - The
--   tags that you want to remove to the specified resource.
newUntagResource :: Text -> UntagResource

-- | The Amazon Resource Name (ARN) for the resource that you want to
--   remove tags from. To get the ARN for a resource, use the applicable
--   <tt>Get</tt> or <tt>List</tt> command:
--   
--   <ul>
--   <li><a>GetResolverEndpoint</a></li>
--   <li><a>GetResolverRule</a></li>
--   <li><a>GetResolverRuleAssociation</a></li>
--   <li><a>ListResolverEndpoints</a></li>
--   <li><a>ListResolverRuleAssociations</a></li>
--   <li><a>ListResolverRules</a></li>
--   </ul>
untagResource_resourceArn :: Lens' UntagResource Text

-- | The tags that you want to remove to the specified resource.
untagResource_tagKeys :: Lens' UntagResource [Text]

-- | <i>See:</i> <a>newUntagResourceResponse</a> smart constructor.
data UntagResourceResponse
UntagResourceResponse' :: Int -> UntagResourceResponse

-- | The response's http status code.
[$sel:httpStatus:UntagResourceResponse'] :: UntagResourceResponse -> Int

-- | Create a value of <a>UntagResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UntagResourceResponse'</a>,
--   <a>untagResourceResponse_httpStatus</a> - The response's http status
--   code.
newUntagResourceResponse :: Int -> UntagResourceResponse

-- | The response's http status code.
untagResourceResponse_httpStatus :: Lens' UntagResourceResponse Int
instance GHC.Generics.Generic Network.AWS.Route53Resolver.UntagResource.UntagResource
instance GHC.Show.Show Network.AWS.Route53Resolver.UntagResource.UntagResource
instance GHC.Read.Read Network.AWS.Route53Resolver.UntagResource.UntagResource
instance GHC.Classes.Eq Network.AWS.Route53Resolver.UntagResource.UntagResource
instance GHC.Generics.Generic Network.AWS.Route53Resolver.UntagResource.UntagResourceResponse
instance GHC.Show.Show Network.AWS.Route53Resolver.UntagResource.UntagResourceResponse
instance GHC.Read.Read Network.AWS.Route53Resolver.UntagResource.UntagResourceResponse
instance GHC.Classes.Eq Network.AWS.Route53Resolver.UntagResource.UntagResourceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53Resolver.UntagResource.UntagResource
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.UntagResource.UntagResourceResponse
instance Data.Hashable.Class.Hashable Network.AWS.Route53Resolver.UntagResource.UntagResource
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.UntagResource.UntagResource
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53Resolver.UntagResource.UntagResource
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53Resolver.UntagResource.UntagResource
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53Resolver.UntagResource.UntagResource
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53Resolver.UntagResource.UntagResource


-- | Updates the configuration of the firewall behavior provided by DNS
--   Firewall for a single VPC from Amazon Virtual Private Cloud (Amazon
--   VPC).
module Network.AWS.Route53Resolver.UpdateFirewallConfig

-- | <i>See:</i> <a>newUpdateFirewallConfig</a> smart constructor.
data UpdateFirewallConfig
UpdateFirewallConfig' :: Text -> FirewallFailOpenStatus -> UpdateFirewallConfig

-- | The ID of the VPC that the configuration is for.
[$sel:resourceId:UpdateFirewallConfig'] :: UpdateFirewallConfig -> Text

-- | Determines how Route 53 Resolver handles queries during failures, for
--   example when all traffic that is sent to DNS Firewall fails to receive
--   a reply.
--   
--   <ul>
--   <li>By default, fail open is disabled, which means the failure mode is
--   closed. This approach favors security over availability. DNS Firewall
--   blocks queries that it is unable to evaluate properly.</li>
--   <li>If you enable this option, the failure mode is open. This approach
--   favors availability over security. DNS Firewall allows queries to
--   proceed if it is unable to properly evaluate them.</li>
--   </ul>
--   
--   This behavior is only enforced for VPCs that have at least one DNS
--   Firewall rule group association.
[$sel:firewallFailOpen:UpdateFirewallConfig'] :: UpdateFirewallConfig -> FirewallFailOpenStatus

-- | Create a value of <a>UpdateFirewallConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceId:UpdateFirewallConfig'</a>,
--   <a>updateFirewallConfig_resourceId</a> - The ID of the VPC that the
--   configuration is for.
--   
--   <a>$sel:firewallFailOpen:UpdateFirewallConfig'</a>,
--   <a>updateFirewallConfig_firewallFailOpen</a> - Determines how Route 53
--   Resolver handles queries during failures, for example when all traffic
--   that is sent to DNS Firewall fails to receive a reply.
--   
--   <ul>
--   <li>By default, fail open is disabled, which means the failure mode is
--   closed. This approach favors security over availability. DNS Firewall
--   blocks queries that it is unable to evaluate properly.</li>
--   <li>If you enable this option, the failure mode is open. This approach
--   favors availability over security. DNS Firewall allows queries to
--   proceed if it is unable to properly evaluate them.</li>
--   </ul>
--   
--   This behavior is only enforced for VPCs that have at least one DNS
--   Firewall rule group association.
newUpdateFirewallConfig :: Text -> FirewallFailOpenStatus -> UpdateFirewallConfig

-- | The ID of the VPC that the configuration is for.
updateFirewallConfig_resourceId :: Lens' UpdateFirewallConfig Text

-- | Determines how Route 53 Resolver handles queries during failures, for
--   example when all traffic that is sent to DNS Firewall fails to receive
--   a reply.
--   
--   <ul>
--   <li>By default, fail open is disabled, which means the failure mode is
--   closed. This approach favors security over availability. DNS Firewall
--   blocks queries that it is unable to evaluate properly.</li>
--   <li>If you enable this option, the failure mode is open. This approach
--   favors availability over security. DNS Firewall allows queries to
--   proceed if it is unable to properly evaluate them.</li>
--   </ul>
--   
--   This behavior is only enforced for VPCs that have at least one DNS
--   Firewall rule group association.
updateFirewallConfig_firewallFailOpen :: Lens' UpdateFirewallConfig FirewallFailOpenStatus

-- | <i>See:</i> <a>newUpdateFirewallConfigResponse</a> smart constructor.
data UpdateFirewallConfigResponse
UpdateFirewallConfigResponse' :: Maybe FirewallConfig -> Int -> UpdateFirewallConfigResponse

-- | Configuration of the firewall behavior provided by DNS Firewall for a
--   single VPC.
[$sel:firewallConfig:UpdateFirewallConfigResponse'] :: UpdateFirewallConfigResponse -> Maybe FirewallConfig

-- | The response's http status code.
[$sel:httpStatus:UpdateFirewallConfigResponse'] :: UpdateFirewallConfigResponse -> Int

-- | Create a value of <a>UpdateFirewallConfigResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:firewallConfig:UpdateFirewallConfigResponse'</a>,
--   <a>updateFirewallConfigResponse_firewallConfig</a> - Configuration of
--   the firewall behavior provided by DNS Firewall for a single VPC.
--   
--   <a>$sel:httpStatus:UpdateFirewallConfigResponse'</a>,
--   <a>updateFirewallConfigResponse_httpStatus</a> - The response's http
--   status code.
newUpdateFirewallConfigResponse :: Int -> UpdateFirewallConfigResponse

-- | Configuration of the firewall behavior provided by DNS Firewall for a
--   single VPC.
updateFirewallConfigResponse_firewallConfig :: Lens' UpdateFirewallConfigResponse (Maybe FirewallConfig)

-- | The response's http status code.
updateFirewallConfigResponse_httpStatus :: Lens' UpdateFirewallConfigResponse Int
instance GHC.Generics.Generic Network.AWS.Route53Resolver.UpdateFirewallConfig.UpdateFirewallConfig
instance GHC.Show.Show Network.AWS.Route53Resolver.UpdateFirewallConfig.UpdateFirewallConfig
instance GHC.Read.Read Network.AWS.Route53Resolver.UpdateFirewallConfig.UpdateFirewallConfig
instance GHC.Classes.Eq Network.AWS.Route53Resolver.UpdateFirewallConfig.UpdateFirewallConfig
instance GHC.Generics.Generic Network.AWS.Route53Resolver.UpdateFirewallConfig.UpdateFirewallConfigResponse
instance GHC.Show.Show Network.AWS.Route53Resolver.UpdateFirewallConfig.UpdateFirewallConfigResponse
instance GHC.Read.Read Network.AWS.Route53Resolver.UpdateFirewallConfig.UpdateFirewallConfigResponse
instance GHC.Classes.Eq Network.AWS.Route53Resolver.UpdateFirewallConfig.UpdateFirewallConfigResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53Resolver.UpdateFirewallConfig.UpdateFirewallConfig
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.UpdateFirewallConfig.UpdateFirewallConfigResponse
instance Data.Hashable.Class.Hashable Network.AWS.Route53Resolver.UpdateFirewallConfig.UpdateFirewallConfig
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.UpdateFirewallConfig.UpdateFirewallConfig
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53Resolver.UpdateFirewallConfig.UpdateFirewallConfig
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53Resolver.UpdateFirewallConfig.UpdateFirewallConfig
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53Resolver.UpdateFirewallConfig.UpdateFirewallConfig
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53Resolver.UpdateFirewallConfig.UpdateFirewallConfig


-- | Updates the firewall domain list from an array of domain
--   specifications.
module Network.AWS.Route53Resolver.UpdateFirewallDomains

-- | <i>See:</i> <a>newUpdateFirewallDomains</a> smart constructor.
data UpdateFirewallDomains
UpdateFirewallDomains' :: Text -> FirewallDomainUpdateOperation -> [Text] -> UpdateFirewallDomains

-- | The ID of the domain list whose domains you want to update.
[$sel:firewallDomainListId:UpdateFirewallDomains'] :: UpdateFirewallDomains -> Text

-- | What you want DNS Firewall to do with the domains that you are
--   providing:
--   
--   <ul>
--   <li><tt>ADD</tt> - Add the domains to the ones that are already in the
--   domain list.</li>
--   <li><tt>REMOVE</tt> - Search the domain list for the domains and
--   remove them from the list.</li>
--   <li><tt>REPLACE</tt> - Update the domain list to exactly match the
--   list that you are providing.</li>
--   </ul>
[$sel:operation:UpdateFirewallDomains'] :: UpdateFirewallDomains -> FirewallDomainUpdateOperation

-- | A list of domains to use in the update operation.
--   
--   Each domain specification in your domain list must satisfy the
--   following requirements:
--   
--   <ul>
--   <li>It can optionally start with <tt>*</tt> (asterisk).</li>
--   <li>With the exception of the optional starting asterisk, it must only
--   contain the following characters: <tt>A-Z</tt>, <tt>a-z</tt>,
--   <tt>0-9</tt>, <tt>-</tt> (hyphen).</li>
--   <li>It must be from 1-255 characters in length.</li>
--   </ul>
[$sel:domains:UpdateFirewallDomains'] :: UpdateFirewallDomains -> [Text]

-- | Create a value of <a>UpdateFirewallDomains</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:firewallDomainListId:UpdateFirewallDomains'</a>,
--   <a>updateFirewallDomains_firewallDomainListId</a> - The ID of the
--   domain list whose domains you want to update.
--   
--   <a>$sel:operation:UpdateFirewallDomains'</a>,
--   <a>updateFirewallDomains_operation</a> - What you want DNS Firewall to
--   do with the domains that you are providing:
--   
--   <ul>
--   <li><tt>ADD</tt> - Add the domains to the ones that are already in the
--   domain list.</li>
--   <li><tt>REMOVE</tt> - Search the domain list for the domains and
--   remove them from the list.</li>
--   <li><tt>REPLACE</tt> - Update the domain list to exactly match the
--   list that you are providing.</li>
--   </ul>
--   
--   <a>$sel:domains:UpdateFirewallDomains'</a>,
--   <a>updateFirewallDomains_domains</a> - A list of domains to use in the
--   update operation.
--   
--   Each domain specification in your domain list must satisfy the
--   following requirements:
--   
--   <ul>
--   <li>It can optionally start with <tt>*</tt> (asterisk).</li>
--   <li>With the exception of the optional starting asterisk, it must only
--   contain the following characters: <tt>A-Z</tt>, <tt>a-z</tt>,
--   <tt>0-9</tt>, <tt>-</tt> (hyphen).</li>
--   <li>It must be from 1-255 characters in length.</li>
--   </ul>
newUpdateFirewallDomains :: Text -> FirewallDomainUpdateOperation -> UpdateFirewallDomains

-- | The ID of the domain list whose domains you want to update.
updateFirewallDomains_firewallDomainListId :: Lens' UpdateFirewallDomains Text

-- | What you want DNS Firewall to do with the domains that you are
--   providing:
--   
--   <ul>
--   <li><tt>ADD</tt> - Add the domains to the ones that are already in the
--   domain list.</li>
--   <li><tt>REMOVE</tt> - Search the domain list for the domains and
--   remove them from the list.</li>
--   <li><tt>REPLACE</tt> - Update the domain list to exactly match the
--   list that you are providing.</li>
--   </ul>
updateFirewallDomains_operation :: Lens' UpdateFirewallDomains FirewallDomainUpdateOperation

-- | A list of domains to use in the update operation.
--   
--   Each domain specification in your domain list must satisfy the
--   following requirements:
--   
--   <ul>
--   <li>It can optionally start with <tt>*</tt> (asterisk).</li>
--   <li>With the exception of the optional starting asterisk, it must only
--   contain the following characters: <tt>A-Z</tt>, <tt>a-z</tt>,
--   <tt>0-9</tt>, <tt>-</tt> (hyphen).</li>
--   <li>It must be from 1-255 characters in length.</li>
--   </ul>
updateFirewallDomains_domains :: Lens' UpdateFirewallDomains [Text]

-- | <i>See:</i> <a>newUpdateFirewallDomainsResponse</a> smart constructor.
data UpdateFirewallDomainsResponse
UpdateFirewallDomainsResponse' :: Maybe FirewallDomainListStatus -> Maybe Text -> Maybe Text -> Maybe Text -> Int -> UpdateFirewallDomainsResponse
[$sel:status:UpdateFirewallDomainsResponse'] :: UpdateFirewallDomainsResponse -> Maybe FirewallDomainListStatus

-- | Additional information about the status of the list, if available.
[$sel:statusMessage:UpdateFirewallDomainsResponse'] :: UpdateFirewallDomainsResponse -> Maybe Text

-- | The name of the domain list.
[$sel:name:UpdateFirewallDomainsResponse'] :: UpdateFirewallDomainsResponse -> Maybe Text

-- | The ID of the firewall domain list that DNS Firewall just updated.
[$sel:id:UpdateFirewallDomainsResponse'] :: UpdateFirewallDomainsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:UpdateFirewallDomainsResponse'] :: UpdateFirewallDomainsResponse -> Int

-- | Create a value of <a>UpdateFirewallDomainsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:UpdateFirewallDomainsResponse'</a>,
--   <a>updateFirewallDomainsResponse_status</a> -
--   
--   <a>$sel:statusMessage:UpdateFirewallDomainsResponse'</a>,
--   <a>updateFirewallDomainsResponse_statusMessage</a> - Additional
--   information about the status of the list, if available.
--   
--   <a>$sel:name:UpdateFirewallDomainsResponse'</a>,
--   <a>updateFirewallDomainsResponse_name</a> - The name of the domain
--   list.
--   
--   <a>$sel:id:UpdateFirewallDomainsResponse'</a>,
--   <a>updateFirewallDomainsResponse_id</a> - The ID of the firewall
--   domain list that DNS Firewall just updated.
--   
--   <a>$sel:httpStatus:UpdateFirewallDomainsResponse'</a>,
--   <a>updateFirewallDomainsResponse_httpStatus</a> - The response's http
--   status code.
newUpdateFirewallDomainsResponse :: Int -> UpdateFirewallDomainsResponse

updateFirewallDomainsResponse_status :: Lens' UpdateFirewallDomainsResponse (Maybe FirewallDomainListStatus)

-- | Additional information about the status of the list, if available.
updateFirewallDomainsResponse_statusMessage :: Lens' UpdateFirewallDomainsResponse (Maybe Text)

-- | The name of the domain list.
updateFirewallDomainsResponse_name :: Lens' UpdateFirewallDomainsResponse (Maybe Text)

-- | The ID of the firewall domain list that DNS Firewall just updated.
updateFirewallDomainsResponse_id :: Lens' UpdateFirewallDomainsResponse (Maybe Text)

-- | The response's http status code.
updateFirewallDomainsResponse_httpStatus :: Lens' UpdateFirewallDomainsResponse Int
instance GHC.Generics.Generic Network.AWS.Route53Resolver.UpdateFirewallDomains.UpdateFirewallDomains
instance GHC.Show.Show Network.AWS.Route53Resolver.UpdateFirewallDomains.UpdateFirewallDomains
instance GHC.Read.Read Network.AWS.Route53Resolver.UpdateFirewallDomains.UpdateFirewallDomains
instance GHC.Classes.Eq Network.AWS.Route53Resolver.UpdateFirewallDomains.UpdateFirewallDomains
instance GHC.Generics.Generic Network.AWS.Route53Resolver.UpdateFirewallDomains.UpdateFirewallDomainsResponse
instance GHC.Show.Show Network.AWS.Route53Resolver.UpdateFirewallDomains.UpdateFirewallDomainsResponse
instance GHC.Read.Read Network.AWS.Route53Resolver.UpdateFirewallDomains.UpdateFirewallDomainsResponse
instance GHC.Classes.Eq Network.AWS.Route53Resolver.UpdateFirewallDomains.UpdateFirewallDomainsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53Resolver.UpdateFirewallDomains.UpdateFirewallDomains
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.UpdateFirewallDomains.UpdateFirewallDomainsResponse
instance Data.Hashable.Class.Hashable Network.AWS.Route53Resolver.UpdateFirewallDomains.UpdateFirewallDomains
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.UpdateFirewallDomains.UpdateFirewallDomains
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53Resolver.UpdateFirewallDomains.UpdateFirewallDomains
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53Resolver.UpdateFirewallDomains.UpdateFirewallDomains
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53Resolver.UpdateFirewallDomains.UpdateFirewallDomains
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53Resolver.UpdateFirewallDomains.UpdateFirewallDomains


-- | Updates the specified firewall rule.
module Network.AWS.Route53Resolver.UpdateFirewallRule

-- | <i>See:</i> <a>newUpdateFirewallRule</a> smart constructor.
data UpdateFirewallRule
UpdateFirewallRule' :: Maybe BlockOverrideDnsType -> Maybe Int -> Maybe BlockResponse -> Maybe Action -> Maybe Natural -> Maybe Text -> Maybe Text -> Text -> Text -> UpdateFirewallRule

-- | The DNS record's type. This determines the format of the record value
--   that you provided in <tt>BlockOverrideDomain</tt>. Used for the rule
--   action <tt>BLOCK</tt> with a <tt>BlockResponse</tt> setting of
--   <tt>OVERRIDE</tt>.
[$sel:blockOverrideDnsType:UpdateFirewallRule'] :: UpdateFirewallRule -> Maybe BlockOverrideDnsType

-- | The setting that determines the processing order of the rule in the
--   rule group. DNS Firewall processes the rules in a rule group by order
--   of priority, starting from the lowest setting.
--   
--   You must specify a unique priority for each rule in a rule group. To
--   make it easier to insert rules later, leave space between the numbers,
--   for example, use 100, 200, and so on. You can change the priority
--   setting for the rules in a rule group at any time.
[$sel:priority:UpdateFirewallRule'] :: UpdateFirewallRule -> Maybe Int

-- | The way that you want DNS Firewall to block the request. Used for the
--   rule action setting <tt>BLOCK</tt>.
--   
--   <ul>
--   <li><tt>NODATA</tt> - Respond indicating that the query was
--   successful, but no response is available for it.</li>
--   <li><tt>NXDOMAIN</tt> - Respond indicating that the domain name that's
--   in the query doesn't exist.</li>
--   <li><tt>OVERRIDE</tt> - Provide a custom override in the response.
--   This option requires custom handling details in the rule's
--   <tt>BlockOverride*</tt> settings.</li>
--   </ul>
[$sel:blockResponse:UpdateFirewallRule'] :: UpdateFirewallRule -> Maybe BlockResponse

-- | The action that DNS Firewall should take on a DNS query when it
--   matches one of the domains in the rule's domain list:
--   
--   <ul>
--   <li><tt>ALLOW</tt> - Permit the request to go through.</li>
--   <li><tt>ALERT</tt> - Permit the request to go through but send an
--   alert to the logs.</li>
--   <li><tt>BLOCK</tt> - Disallow the request. This option requires
--   additional details in the rule's <tt>BlockResponse</tt>.</li>
--   </ul>
[$sel:action:UpdateFirewallRule'] :: UpdateFirewallRule -> Maybe Action

-- | The recommended amount of time, in seconds, for the DNS resolver or
--   web browser to cache the provided override record. Used for the rule
--   action <tt>BLOCK</tt> with a <tt>BlockResponse</tt> setting of
--   <tt>OVERRIDE</tt>.
[$sel:blockOverrideTtl:UpdateFirewallRule'] :: UpdateFirewallRule -> Maybe Natural

-- | The name of the rule.
[$sel:name:UpdateFirewallRule'] :: UpdateFirewallRule -> Maybe Text

-- | The custom DNS record to send back in response to the query. Used for
--   the rule action <tt>BLOCK</tt> with a <tt>BlockResponse</tt> setting
--   of <tt>OVERRIDE</tt>.
[$sel:blockOverrideDomain:UpdateFirewallRule'] :: UpdateFirewallRule -> Maybe Text

-- | The unique identifier of the firewall rule group for the rule.
[$sel:firewallRuleGroupId:UpdateFirewallRule'] :: UpdateFirewallRule -> Text

-- | The ID of the domain list to use in the rule.
[$sel:firewallDomainListId:UpdateFirewallRule'] :: UpdateFirewallRule -> Text

-- | Create a value of <a>UpdateFirewallRule</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:blockOverrideDnsType:UpdateFirewallRule'</a>,
--   <a>updateFirewallRule_blockOverrideDnsType</a> - The DNS record's
--   type. This determines the format of the record value that you provided
--   in <tt>BlockOverrideDomain</tt>. Used for the rule action
--   <tt>BLOCK</tt> with a <tt>BlockResponse</tt> setting of
--   <tt>OVERRIDE</tt>.
--   
--   <a>$sel:priority:UpdateFirewallRule'</a>,
--   <a>updateFirewallRule_priority</a> - The setting that determines the
--   processing order of the rule in the rule group. DNS Firewall processes
--   the rules in a rule group by order of priority, starting from the
--   lowest setting.
--   
--   You must specify a unique priority for each rule in a rule group. To
--   make it easier to insert rules later, leave space between the numbers,
--   for example, use 100, 200, and so on. You can change the priority
--   setting for the rules in a rule group at any time.
--   
--   <a>$sel:blockResponse:UpdateFirewallRule'</a>,
--   <a>updateFirewallRule_blockResponse</a> - The way that you want DNS
--   Firewall to block the request. Used for the rule action setting
--   <tt>BLOCK</tt>.
--   
--   <ul>
--   <li><tt>NODATA</tt> - Respond indicating that the query was
--   successful, but no response is available for it.</li>
--   <li><tt>NXDOMAIN</tt> - Respond indicating that the domain name that's
--   in the query doesn't exist.</li>
--   <li><tt>OVERRIDE</tt> - Provide a custom override in the response.
--   This option requires custom handling details in the rule's
--   <tt>BlockOverride*</tt> settings.</li>
--   </ul>
--   
--   <a>$sel:action:UpdateFirewallRule'</a>,
--   <a>updateFirewallRule_action</a> - The action that DNS Firewall should
--   take on a DNS query when it matches one of the domains in the rule's
--   domain list:
--   
--   <ul>
--   <li><tt>ALLOW</tt> - Permit the request to go through.</li>
--   <li><tt>ALERT</tt> - Permit the request to go through but send an
--   alert to the logs.</li>
--   <li><tt>BLOCK</tt> - Disallow the request. This option requires
--   additional details in the rule's <tt>BlockResponse</tt>.</li>
--   </ul>
--   
--   <a>$sel:blockOverrideTtl:UpdateFirewallRule'</a>,
--   <a>updateFirewallRule_blockOverrideTtl</a> - The recommended amount of
--   time, in seconds, for the DNS resolver or web browser to cache the
--   provided override record. Used for the rule action <tt>BLOCK</tt> with
--   a <tt>BlockResponse</tt> setting of <tt>OVERRIDE</tt>.
--   
--   <a>$sel:name:UpdateFirewallRule'</a>, <a>updateFirewallRule_name</a> -
--   The name of the rule.
--   
--   <a>$sel:blockOverrideDomain:UpdateFirewallRule'</a>,
--   <a>updateFirewallRule_blockOverrideDomain</a> - The custom DNS record
--   to send back in response to the query. Used for the rule action
--   <tt>BLOCK</tt> with a <tt>BlockResponse</tt> setting of
--   <tt>OVERRIDE</tt>.
--   
--   <a>$sel:firewallRuleGroupId:UpdateFirewallRule'</a>,
--   <a>updateFirewallRule_firewallRuleGroupId</a> - The unique identifier
--   of the firewall rule group for the rule.
--   
--   <a>$sel:firewallDomainListId:UpdateFirewallRule'</a>,
--   <a>updateFirewallRule_firewallDomainListId</a> - The ID of the domain
--   list to use in the rule.
newUpdateFirewallRule :: Text -> Text -> UpdateFirewallRule

-- | The DNS record's type. This determines the format of the record value
--   that you provided in <tt>BlockOverrideDomain</tt>. Used for the rule
--   action <tt>BLOCK</tt> with a <tt>BlockResponse</tt> setting of
--   <tt>OVERRIDE</tt>.
updateFirewallRule_blockOverrideDnsType :: Lens' UpdateFirewallRule (Maybe BlockOverrideDnsType)

-- | The setting that determines the processing order of the rule in the
--   rule group. DNS Firewall processes the rules in a rule group by order
--   of priority, starting from the lowest setting.
--   
--   You must specify a unique priority for each rule in a rule group. To
--   make it easier to insert rules later, leave space between the numbers,
--   for example, use 100, 200, and so on. You can change the priority
--   setting for the rules in a rule group at any time.
updateFirewallRule_priority :: Lens' UpdateFirewallRule (Maybe Int)

-- | The way that you want DNS Firewall to block the request. Used for the
--   rule action setting <tt>BLOCK</tt>.
--   
--   <ul>
--   <li><tt>NODATA</tt> - Respond indicating that the query was
--   successful, but no response is available for it.</li>
--   <li><tt>NXDOMAIN</tt> - Respond indicating that the domain name that's
--   in the query doesn't exist.</li>
--   <li><tt>OVERRIDE</tt> - Provide a custom override in the response.
--   This option requires custom handling details in the rule's
--   <tt>BlockOverride*</tt> settings.</li>
--   </ul>
updateFirewallRule_blockResponse :: Lens' UpdateFirewallRule (Maybe BlockResponse)

-- | The action that DNS Firewall should take on a DNS query when it
--   matches one of the domains in the rule's domain list:
--   
--   <ul>
--   <li><tt>ALLOW</tt> - Permit the request to go through.</li>
--   <li><tt>ALERT</tt> - Permit the request to go through but send an
--   alert to the logs.</li>
--   <li><tt>BLOCK</tt> - Disallow the request. This option requires
--   additional details in the rule's <tt>BlockResponse</tt>.</li>
--   </ul>
updateFirewallRule_action :: Lens' UpdateFirewallRule (Maybe Action)

-- | The recommended amount of time, in seconds, for the DNS resolver or
--   web browser to cache the provided override record. Used for the rule
--   action <tt>BLOCK</tt> with a <tt>BlockResponse</tt> setting of
--   <tt>OVERRIDE</tt>.
updateFirewallRule_blockOverrideTtl :: Lens' UpdateFirewallRule (Maybe Natural)

-- | The name of the rule.
updateFirewallRule_name :: Lens' UpdateFirewallRule (Maybe Text)

-- | The custom DNS record to send back in response to the query. Used for
--   the rule action <tt>BLOCK</tt> with a <tt>BlockResponse</tt> setting
--   of <tt>OVERRIDE</tt>.
updateFirewallRule_blockOverrideDomain :: Lens' UpdateFirewallRule (Maybe Text)

-- | The unique identifier of the firewall rule group for the rule.
updateFirewallRule_firewallRuleGroupId :: Lens' UpdateFirewallRule Text

-- | The ID of the domain list to use in the rule.
updateFirewallRule_firewallDomainListId :: Lens' UpdateFirewallRule Text

-- | <i>See:</i> <a>newUpdateFirewallRuleResponse</a> smart constructor.
data UpdateFirewallRuleResponse
UpdateFirewallRuleResponse' :: Maybe FirewallRule -> Int -> UpdateFirewallRuleResponse

-- | The firewall rule that you just updated.
[$sel:firewallRule:UpdateFirewallRuleResponse'] :: UpdateFirewallRuleResponse -> Maybe FirewallRule

-- | The response's http status code.
[$sel:httpStatus:UpdateFirewallRuleResponse'] :: UpdateFirewallRuleResponse -> Int

-- | Create a value of <a>UpdateFirewallRuleResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:firewallRule:UpdateFirewallRuleResponse'</a>,
--   <a>updateFirewallRuleResponse_firewallRule</a> - The firewall rule
--   that you just updated.
--   
--   <a>$sel:httpStatus:UpdateFirewallRuleResponse'</a>,
--   <a>updateFirewallRuleResponse_httpStatus</a> - The response's http
--   status code.
newUpdateFirewallRuleResponse :: Int -> UpdateFirewallRuleResponse

-- | The firewall rule that you just updated.
updateFirewallRuleResponse_firewallRule :: Lens' UpdateFirewallRuleResponse (Maybe FirewallRule)

-- | The response's http status code.
updateFirewallRuleResponse_httpStatus :: Lens' UpdateFirewallRuleResponse Int
instance GHC.Generics.Generic Network.AWS.Route53Resolver.UpdateFirewallRule.UpdateFirewallRule
instance GHC.Show.Show Network.AWS.Route53Resolver.UpdateFirewallRule.UpdateFirewallRule
instance GHC.Read.Read Network.AWS.Route53Resolver.UpdateFirewallRule.UpdateFirewallRule
instance GHC.Classes.Eq Network.AWS.Route53Resolver.UpdateFirewallRule.UpdateFirewallRule
instance GHC.Generics.Generic Network.AWS.Route53Resolver.UpdateFirewallRule.UpdateFirewallRuleResponse
instance GHC.Show.Show Network.AWS.Route53Resolver.UpdateFirewallRule.UpdateFirewallRuleResponse
instance GHC.Read.Read Network.AWS.Route53Resolver.UpdateFirewallRule.UpdateFirewallRuleResponse
instance GHC.Classes.Eq Network.AWS.Route53Resolver.UpdateFirewallRule.UpdateFirewallRuleResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53Resolver.UpdateFirewallRule.UpdateFirewallRule
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.UpdateFirewallRule.UpdateFirewallRuleResponse
instance Data.Hashable.Class.Hashable Network.AWS.Route53Resolver.UpdateFirewallRule.UpdateFirewallRule
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.UpdateFirewallRule.UpdateFirewallRule
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53Resolver.UpdateFirewallRule.UpdateFirewallRule
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53Resolver.UpdateFirewallRule.UpdateFirewallRule
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53Resolver.UpdateFirewallRule.UpdateFirewallRule
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53Resolver.UpdateFirewallRule.UpdateFirewallRule


-- | Changes the association of a FirewallRuleGroup with a VPC. The
--   association enables DNS filtering for the VPC.
module Network.AWS.Route53Resolver.UpdateFirewallRuleGroupAssociation

-- | <i>See:</i> <a>newUpdateFirewallRuleGroupAssociation</a> smart
--   constructor.
data UpdateFirewallRuleGroupAssociation
UpdateFirewallRuleGroupAssociation' :: Maybe MutationProtectionStatus -> Maybe Int -> Maybe Text -> Text -> UpdateFirewallRuleGroupAssociation

-- | If enabled, this setting disallows modification or removal of the
--   association, to help prevent against accidentally altering DNS
--   firewall protections.
[$sel:mutationProtection:UpdateFirewallRuleGroupAssociation'] :: UpdateFirewallRuleGroupAssociation -> Maybe MutationProtectionStatus

-- | The setting that determines the processing order of the rule group
--   among the rule groups that you associate with the specified VPC. DNS
--   Firewall filters VPC traffic starting from the rule group with the
--   lowest numeric priority setting.
--   
--   You must specify a unique priority for each rule group that you
--   associate with a single VPC. To make it easier to insert rule groups
--   later, leave space between the numbers, for example, use 100, 200, and
--   so on. You can change the priority setting for a rule group
--   association after you create it.
[$sel:priority:UpdateFirewallRuleGroupAssociation'] :: UpdateFirewallRuleGroupAssociation -> Maybe Int

-- | The name of the rule group association.
[$sel:name:UpdateFirewallRuleGroupAssociation'] :: UpdateFirewallRuleGroupAssociation -> Maybe Text

-- | The identifier of the FirewallRuleGroupAssociation.
[$sel:firewallRuleGroupAssociationId:UpdateFirewallRuleGroupAssociation'] :: UpdateFirewallRuleGroupAssociation -> Text

-- | Create a value of <a>UpdateFirewallRuleGroupAssociation</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:mutationProtection:UpdateFirewallRuleGroupAssociation'</a>,
--   <a>updateFirewallRuleGroupAssociation_mutationProtection</a> - If
--   enabled, this setting disallows modification or removal of the
--   association, to help prevent against accidentally altering DNS
--   firewall protections.
--   
--   <a>$sel:priority:UpdateFirewallRuleGroupAssociation'</a>,
--   <a>updateFirewallRuleGroupAssociation_priority</a> - The setting that
--   determines the processing order of the rule group among the rule
--   groups that you associate with the specified VPC. DNS Firewall filters
--   VPC traffic starting from the rule group with the lowest numeric
--   priority setting.
--   
--   You must specify a unique priority for each rule group that you
--   associate with a single VPC. To make it easier to insert rule groups
--   later, leave space between the numbers, for example, use 100, 200, and
--   so on. You can change the priority setting for a rule group
--   association after you create it.
--   
--   <a>$sel:name:UpdateFirewallRuleGroupAssociation'</a>,
--   <a>updateFirewallRuleGroupAssociation_name</a> - The name of the rule
--   group association.
--   
--   
--   <a>$sel:firewallRuleGroupAssociationId:UpdateFirewallRuleGroupAssociation'</a>,
--   <a>updateFirewallRuleGroupAssociation_firewallRuleGroupAssociationId</a>
--   - The identifier of the FirewallRuleGroupAssociation.
newUpdateFirewallRuleGroupAssociation :: Text -> UpdateFirewallRuleGroupAssociation

-- | If enabled, this setting disallows modification or removal of the
--   association, to help prevent against accidentally altering DNS
--   firewall protections.
updateFirewallRuleGroupAssociation_mutationProtection :: Lens' UpdateFirewallRuleGroupAssociation (Maybe MutationProtectionStatus)

-- | The setting that determines the processing order of the rule group
--   among the rule groups that you associate with the specified VPC. DNS
--   Firewall filters VPC traffic starting from the rule group with the
--   lowest numeric priority setting.
--   
--   You must specify a unique priority for each rule group that you
--   associate with a single VPC. To make it easier to insert rule groups
--   later, leave space between the numbers, for example, use 100, 200, and
--   so on. You can change the priority setting for a rule group
--   association after you create it.
updateFirewallRuleGroupAssociation_priority :: Lens' UpdateFirewallRuleGroupAssociation (Maybe Int)

-- | The name of the rule group association.
updateFirewallRuleGroupAssociation_name :: Lens' UpdateFirewallRuleGroupAssociation (Maybe Text)

-- | The identifier of the FirewallRuleGroupAssociation.
updateFirewallRuleGroupAssociation_firewallRuleGroupAssociationId :: Lens' UpdateFirewallRuleGroupAssociation Text

-- | <i>See:</i> <a>newUpdateFirewallRuleGroupAssociationResponse</a> smart
--   constructor.
data UpdateFirewallRuleGroupAssociationResponse
UpdateFirewallRuleGroupAssociationResponse' :: Maybe FirewallRuleGroupAssociation -> Int -> UpdateFirewallRuleGroupAssociationResponse

-- | The association that you just updated.
[$sel:firewallRuleGroupAssociation:UpdateFirewallRuleGroupAssociationResponse'] :: UpdateFirewallRuleGroupAssociationResponse -> Maybe FirewallRuleGroupAssociation

-- | The response's http status code.
[$sel:httpStatus:UpdateFirewallRuleGroupAssociationResponse'] :: UpdateFirewallRuleGroupAssociationResponse -> Int

-- | Create a value of <a>UpdateFirewallRuleGroupAssociationResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:firewallRuleGroupAssociation:UpdateFirewallRuleGroupAssociationResponse'</a>,
--   <a>updateFirewallRuleGroupAssociationResponse_firewallRuleGroupAssociation</a>
--   - The association that you just updated.
--   
--   <a>$sel:httpStatus:UpdateFirewallRuleGroupAssociationResponse'</a>,
--   <a>updateFirewallRuleGroupAssociationResponse_httpStatus</a> - The
--   response's http status code.
newUpdateFirewallRuleGroupAssociationResponse :: Int -> UpdateFirewallRuleGroupAssociationResponse

-- | The association that you just updated.
updateFirewallRuleGroupAssociationResponse_firewallRuleGroupAssociation :: Lens' UpdateFirewallRuleGroupAssociationResponse (Maybe FirewallRuleGroupAssociation)

-- | The response's http status code.
updateFirewallRuleGroupAssociationResponse_httpStatus :: Lens' UpdateFirewallRuleGroupAssociationResponse Int
instance GHC.Generics.Generic Network.AWS.Route53Resolver.UpdateFirewallRuleGroupAssociation.UpdateFirewallRuleGroupAssociation
instance GHC.Show.Show Network.AWS.Route53Resolver.UpdateFirewallRuleGroupAssociation.UpdateFirewallRuleGroupAssociation
instance GHC.Read.Read Network.AWS.Route53Resolver.UpdateFirewallRuleGroupAssociation.UpdateFirewallRuleGroupAssociation
instance GHC.Classes.Eq Network.AWS.Route53Resolver.UpdateFirewallRuleGroupAssociation.UpdateFirewallRuleGroupAssociation
instance GHC.Generics.Generic Network.AWS.Route53Resolver.UpdateFirewallRuleGroupAssociation.UpdateFirewallRuleGroupAssociationResponse
instance GHC.Show.Show Network.AWS.Route53Resolver.UpdateFirewallRuleGroupAssociation.UpdateFirewallRuleGroupAssociationResponse
instance GHC.Read.Read Network.AWS.Route53Resolver.UpdateFirewallRuleGroupAssociation.UpdateFirewallRuleGroupAssociationResponse
instance GHC.Classes.Eq Network.AWS.Route53Resolver.UpdateFirewallRuleGroupAssociation.UpdateFirewallRuleGroupAssociationResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53Resolver.UpdateFirewallRuleGroupAssociation.UpdateFirewallRuleGroupAssociation
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.UpdateFirewallRuleGroupAssociation.UpdateFirewallRuleGroupAssociationResponse
instance Data.Hashable.Class.Hashable Network.AWS.Route53Resolver.UpdateFirewallRuleGroupAssociation.UpdateFirewallRuleGroupAssociation
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.UpdateFirewallRuleGroupAssociation.UpdateFirewallRuleGroupAssociation
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53Resolver.UpdateFirewallRuleGroupAssociation.UpdateFirewallRuleGroupAssociation
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53Resolver.UpdateFirewallRuleGroupAssociation.UpdateFirewallRuleGroupAssociation
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53Resolver.UpdateFirewallRuleGroupAssociation.UpdateFirewallRuleGroupAssociation
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53Resolver.UpdateFirewallRuleGroupAssociation.UpdateFirewallRuleGroupAssociation


-- | Updates an existing DNSSEC validation configuration. If there is no
--   existing DNSSEC validation configuration, one is created.
module Network.AWS.Route53Resolver.UpdateResolverDnssecConfig

-- | <i>See:</i> <a>newUpdateResolverDnssecConfig</a> smart constructor.
data UpdateResolverDnssecConfig
UpdateResolverDnssecConfig' :: Text -> Validation -> UpdateResolverDnssecConfig

-- | The ID of the virtual private cloud (VPC) that you're updating the
--   DNSSEC validation status for.
[$sel:resourceId:UpdateResolverDnssecConfig'] :: UpdateResolverDnssecConfig -> Text

-- | The new value that you are specifying for DNSSEC validation for the
--   VPC. The value can be <tt>ENABLE</tt> or <tt>DISABLE</tt>. Be aware
--   that it can take time for a validation status change to be completed.
[$sel:validation:UpdateResolverDnssecConfig'] :: UpdateResolverDnssecConfig -> Validation

-- | Create a value of <a>UpdateResolverDnssecConfig</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceId:UpdateResolverDnssecConfig'</a>,
--   <a>updateResolverDnssecConfig_resourceId</a> - The ID of the virtual
--   private cloud (VPC) that you're updating the DNSSEC validation status
--   for.
--   
--   <a>$sel:validation:UpdateResolverDnssecConfig'</a>,
--   <a>updateResolverDnssecConfig_validation</a> - The new value that you
--   are specifying for DNSSEC validation for the VPC. The value can be
--   <tt>ENABLE</tt> or <tt>DISABLE</tt>. Be aware that it can take time
--   for a validation status change to be completed.
newUpdateResolverDnssecConfig :: Text -> Validation -> UpdateResolverDnssecConfig

-- | The ID of the virtual private cloud (VPC) that you're updating the
--   DNSSEC validation status for.
updateResolverDnssecConfig_resourceId :: Lens' UpdateResolverDnssecConfig Text

-- | The new value that you are specifying for DNSSEC validation for the
--   VPC. The value can be <tt>ENABLE</tt> or <tt>DISABLE</tt>. Be aware
--   that it can take time for a validation status change to be completed.
updateResolverDnssecConfig_validation :: Lens' UpdateResolverDnssecConfig Validation

-- | <i>See:</i> <a>newUpdateResolverDnssecConfigResponse</a> smart
--   constructor.
data UpdateResolverDnssecConfigResponse
UpdateResolverDnssecConfigResponse' :: Maybe ResolverDnssecConfig -> Int -> UpdateResolverDnssecConfigResponse

-- | A complex type that contains settings for the specified DNSSEC
--   configuration.
[$sel:resolverDNSSECConfig:UpdateResolverDnssecConfigResponse'] :: UpdateResolverDnssecConfigResponse -> Maybe ResolverDnssecConfig

-- | The response's http status code.
[$sel:httpStatus:UpdateResolverDnssecConfigResponse'] :: UpdateResolverDnssecConfigResponse -> Int

-- | Create a value of <a>UpdateResolverDnssecConfigResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resolverDNSSECConfig:UpdateResolverDnssecConfigResponse'</a>,
--   <a>updateResolverDnssecConfigResponse_resolverDNSSECConfig</a> - A
--   complex type that contains settings for the specified DNSSEC
--   configuration.
--   
--   <a>$sel:httpStatus:UpdateResolverDnssecConfigResponse'</a>,
--   <a>updateResolverDnssecConfigResponse_httpStatus</a> - The response's
--   http status code.
newUpdateResolverDnssecConfigResponse :: Int -> UpdateResolverDnssecConfigResponse

-- | A complex type that contains settings for the specified DNSSEC
--   configuration.
updateResolverDnssecConfigResponse_resolverDNSSECConfig :: Lens' UpdateResolverDnssecConfigResponse (Maybe ResolverDnssecConfig)

-- | The response's http status code.
updateResolverDnssecConfigResponse_httpStatus :: Lens' UpdateResolverDnssecConfigResponse Int
instance GHC.Generics.Generic Network.AWS.Route53Resolver.UpdateResolverDnssecConfig.UpdateResolverDnssecConfig
instance GHC.Show.Show Network.AWS.Route53Resolver.UpdateResolverDnssecConfig.UpdateResolverDnssecConfig
instance GHC.Read.Read Network.AWS.Route53Resolver.UpdateResolverDnssecConfig.UpdateResolverDnssecConfig
instance GHC.Classes.Eq Network.AWS.Route53Resolver.UpdateResolverDnssecConfig.UpdateResolverDnssecConfig
instance GHC.Generics.Generic Network.AWS.Route53Resolver.UpdateResolverDnssecConfig.UpdateResolverDnssecConfigResponse
instance GHC.Show.Show Network.AWS.Route53Resolver.UpdateResolverDnssecConfig.UpdateResolverDnssecConfigResponse
instance GHC.Read.Read Network.AWS.Route53Resolver.UpdateResolverDnssecConfig.UpdateResolverDnssecConfigResponse
instance GHC.Classes.Eq Network.AWS.Route53Resolver.UpdateResolverDnssecConfig.UpdateResolverDnssecConfigResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53Resolver.UpdateResolverDnssecConfig.UpdateResolverDnssecConfig
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.UpdateResolverDnssecConfig.UpdateResolverDnssecConfigResponse
instance Data.Hashable.Class.Hashable Network.AWS.Route53Resolver.UpdateResolverDnssecConfig.UpdateResolverDnssecConfig
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.UpdateResolverDnssecConfig.UpdateResolverDnssecConfig
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53Resolver.UpdateResolverDnssecConfig.UpdateResolverDnssecConfig
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53Resolver.UpdateResolverDnssecConfig.UpdateResolverDnssecConfig
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53Resolver.UpdateResolverDnssecConfig.UpdateResolverDnssecConfig
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53Resolver.UpdateResolverDnssecConfig.UpdateResolverDnssecConfig


-- | Updates the name of an inbound or an outbound Resolver endpoint.
module Network.AWS.Route53Resolver.UpdateResolverEndpoint

-- | <i>See:</i> <a>newUpdateResolverEndpoint</a> smart constructor.
data UpdateResolverEndpoint
UpdateResolverEndpoint' :: Maybe Text -> Text -> UpdateResolverEndpoint

-- | The name of the Resolver endpoint that you want to update.
[$sel:name:UpdateResolverEndpoint'] :: UpdateResolverEndpoint -> Maybe Text

-- | The ID of the Resolver endpoint that you want to update.
[$sel:resolverEndpointId:UpdateResolverEndpoint'] :: UpdateResolverEndpoint -> Text

-- | Create a value of <a>UpdateResolverEndpoint</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:UpdateResolverEndpoint'</a>,
--   <a>updateResolverEndpoint_name</a> - The name of the Resolver endpoint
--   that you want to update.
--   
--   <a>$sel:resolverEndpointId:UpdateResolverEndpoint'</a>,
--   <a>updateResolverEndpoint_resolverEndpointId</a> - The ID of the
--   Resolver endpoint that you want to update.
newUpdateResolverEndpoint :: Text -> UpdateResolverEndpoint

-- | The name of the Resolver endpoint that you want to update.
updateResolverEndpoint_name :: Lens' UpdateResolverEndpoint (Maybe Text)

-- | The ID of the Resolver endpoint that you want to update.
updateResolverEndpoint_resolverEndpointId :: Lens' UpdateResolverEndpoint Text

-- | <i>See:</i> <a>newUpdateResolverEndpointResponse</a> smart
--   constructor.
data UpdateResolverEndpointResponse
UpdateResolverEndpointResponse' :: Maybe ResolverEndpoint -> Int -> UpdateResolverEndpointResponse

-- | The response to an <tt>UpdateResolverEndpoint</tt> request.
[$sel:resolverEndpoint:UpdateResolverEndpointResponse'] :: UpdateResolverEndpointResponse -> Maybe ResolverEndpoint

-- | The response's http status code.
[$sel:httpStatus:UpdateResolverEndpointResponse'] :: UpdateResolverEndpointResponse -> Int

-- | Create a value of <a>UpdateResolverEndpointResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resolverEndpoint:UpdateResolverEndpointResponse'</a>,
--   <a>updateResolverEndpointResponse_resolverEndpoint</a> - The response
--   to an <tt>UpdateResolverEndpoint</tt> request.
--   
--   <a>$sel:httpStatus:UpdateResolverEndpointResponse'</a>,
--   <a>updateResolverEndpointResponse_httpStatus</a> - The response's http
--   status code.
newUpdateResolverEndpointResponse :: Int -> UpdateResolverEndpointResponse

-- | The response to an <tt>UpdateResolverEndpoint</tt> request.
updateResolverEndpointResponse_resolverEndpoint :: Lens' UpdateResolverEndpointResponse (Maybe ResolverEndpoint)

-- | The response's http status code.
updateResolverEndpointResponse_httpStatus :: Lens' UpdateResolverEndpointResponse Int
instance GHC.Generics.Generic Network.AWS.Route53Resolver.UpdateResolverEndpoint.UpdateResolverEndpoint
instance GHC.Show.Show Network.AWS.Route53Resolver.UpdateResolverEndpoint.UpdateResolverEndpoint
instance GHC.Read.Read Network.AWS.Route53Resolver.UpdateResolverEndpoint.UpdateResolverEndpoint
instance GHC.Classes.Eq Network.AWS.Route53Resolver.UpdateResolverEndpoint.UpdateResolverEndpoint
instance GHC.Generics.Generic Network.AWS.Route53Resolver.UpdateResolverEndpoint.UpdateResolverEndpointResponse
instance GHC.Show.Show Network.AWS.Route53Resolver.UpdateResolverEndpoint.UpdateResolverEndpointResponse
instance GHC.Read.Read Network.AWS.Route53Resolver.UpdateResolverEndpoint.UpdateResolverEndpointResponse
instance GHC.Classes.Eq Network.AWS.Route53Resolver.UpdateResolverEndpoint.UpdateResolverEndpointResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53Resolver.UpdateResolverEndpoint.UpdateResolverEndpoint
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.UpdateResolverEndpoint.UpdateResolverEndpointResponse
instance Data.Hashable.Class.Hashable Network.AWS.Route53Resolver.UpdateResolverEndpoint.UpdateResolverEndpoint
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.UpdateResolverEndpoint.UpdateResolverEndpoint
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53Resolver.UpdateResolverEndpoint.UpdateResolverEndpoint
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53Resolver.UpdateResolverEndpoint.UpdateResolverEndpoint
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53Resolver.UpdateResolverEndpoint.UpdateResolverEndpoint
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53Resolver.UpdateResolverEndpoint.UpdateResolverEndpoint


-- | Updates settings for a specified Resolver rule.
--   <tt>ResolverRuleId</tt> is required, and all other parameters are
--   optional. If you don't specify a parameter, it retains its current
--   value.
module Network.AWS.Route53Resolver.UpdateResolverRule

-- | <i>See:</i> <a>newUpdateResolverRule</a> smart constructor.
data UpdateResolverRule
UpdateResolverRule' :: Text -> ResolverRuleConfig -> UpdateResolverRule

-- | The ID of the Resolver rule that you want to update.
[$sel:resolverRuleId:UpdateResolverRule'] :: UpdateResolverRule -> Text

-- | The new settings for the Resolver rule.
[$sel:config:UpdateResolverRule'] :: UpdateResolverRule -> ResolverRuleConfig

-- | Create a value of <a>UpdateResolverRule</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resolverRuleId:UpdateResolverRule'</a>,
--   <a>updateResolverRule_resolverRuleId</a> - The ID of the Resolver rule
--   that you want to update.
--   
--   <a>$sel:config:UpdateResolverRule'</a>,
--   <a>updateResolverRule_config</a> - The new settings for the Resolver
--   rule.
newUpdateResolverRule :: Text -> ResolverRuleConfig -> UpdateResolverRule

-- | The ID of the Resolver rule that you want to update.
updateResolverRule_resolverRuleId :: Lens' UpdateResolverRule Text

-- | The new settings for the Resolver rule.
updateResolverRule_config :: Lens' UpdateResolverRule ResolverRuleConfig

-- | <i>See:</i> <a>newUpdateResolverRuleResponse</a> smart constructor.
data UpdateResolverRuleResponse
UpdateResolverRuleResponse' :: Maybe ResolverRule -> Int -> UpdateResolverRuleResponse

-- | The response to an <tt>UpdateResolverRule</tt> request.
[$sel:resolverRule:UpdateResolverRuleResponse'] :: UpdateResolverRuleResponse -> Maybe ResolverRule

-- | The response's http status code.
[$sel:httpStatus:UpdateResolverRuleResponse'] :: UpdateResolverRuleResponse -> Int

-- | Create a value of <a>UpdateResolverRuleResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resolverRule:UpdateResolverRuleResponse'</a>,
--   <a>updateResolverRuleResponse_resolverRule</a> - The response to an
--   <tt>UpdateResolverRule</tt> request.
--   
--   <a>$sel:httpStatus:UpdateResolverRuleResponse'</a>,
--   <a>updateResolverRuleResponse_httpStatus</a> - The response's http
--   status code.
newUpdateResolverRuleResponse :: Int -> UpdateResolverRuleResponse

-- | The response to an <tt>UpdateResolverRule</tt> request.
updateResolverRuleResponse_resolverRule :: Lens' UpdateResolverRuleResponse (Maybe ResolverRule)

-- | The response's http status code.
updateResolverRuleResponse_httpStatus :: Lens' UpdateResolverRuleResponse Int
instance GHC.Generics.Generic Network.AWS.Route53Resolver.UpdateResolverRule.UpdateResolverRule
instance GHC.Show.Show Network.AWS.Route53Resolver.UpdateResolverRule.UpdateResolverRule
instance GHC.Read.Read Network.AWS.Route53Resolver.UpdateResolverRule.UpdateResolverRule
instance GHC.Classes.Eq Network.AWS.Route53Resolver.UpdateResolverRule.UpdateResolverRule
instance GHC.Generics.Generic Network.AWS.Route53Resolver.UpdateResolverRule.UpdateResolverRuleResponse
instance GHC.Show.Show Network.AWS.Route53Resolver.UpdateResolverRule.UpdateResolverRuleResponse
instance GHC.Read.Read Network.AWS.Route53Resolver.UpdateResolverRule.UpdateResolverRuleResponse
instance GHC.Classes.Eq Network.AWS.Route53Resolver.UpdateResolverRule.UpdateResolverRuleResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53Resolver.UpdateResolverRule.UpdateResolverRule
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.UpdateResolverRule.UpdateResolverRuleResponse
instance Data.Hashable.Class.Hashable Network.AWS.Route53Resolver.UpdateResolverRule.UpdateResolverRule
instance Control.DeepSeq.NFData Network.AWS.Route53Resolver.UpdateResolverRule.UpdateResolverRule
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53Resolver.UpdateResolverRule.UpdateResolverRule
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53Resolver.UpdateResolverRule.UpdateResolverRule
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53Resolver.UpdateResolverRule.UpdateResolverRule
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53Resolver.UpdateResolverRule.UpdateResolverRule


module Network.AWS.Route53Resolver.Lens

-- | The name of the Resolver endpoint that you want to update.
updateResolverEndpoint_name :: Lens' UpdateResolverEndpoint (Maybe Text)

-- | The ID of the Resolver endpoint that you want to update.
updateResolverEndpoint_resolverEndpointId :: Lens' UpdateResolverEndpoint Text

-- | The response to an <tt>UpdateResolverEndpoint</tt> request.
updateResolverEndpointResponse_resolverEndpoint :: Lens' UpdateResolverEndpointResponse (Maybe ResolverEndpoint)

-- | The response's http status code.
updateResolverEndpointResponse_httpStatus :: Lens' UpdateResolverEndpointResponse Int

-- | The ID of the Resolver endpoint that you want to delete.
deleteResolverEndpoint_resolverEndpointId :: Lens' DeleteResolverEndpoint Text

-- | Information about the <tt>DeleteResolverEndpoint</tt> request,
--   including the status of the request.
deleteResolverEndpointResponse_resolverEndpoint :: Lens' DeleteResolverEndpointResponse (Maybe ResolverEndpoint)

-- | The response's http status code.
deleteResolverEndpointResponse_httpStatus :: Lens' DeleteResolverEndpointResponse Int

-- | The ID of the outbound Resolver endpoint that you want to use to route
--   DNS queries to the IP addresses that you specify in
--   <tt>TargetIps</tt>.
createResolverRule_resolverEndpointId :: Lens' CreateResolverRule (Maybe Text)

-- | The IPs that you want Resolver to forward DNS queries to. You can
--   specify only IPv4 addresses. Separate IP addresses with a space.
--   
--   <tt>TargetIps</tt> is available only when the value of <tt>Rule
--   type</tt> is <tt>FORWARD</tt>.
createResolverRule_targetIps :: Lens' CreateResolverRule (Maybe (NonEmpty TargetAddress))

-- | A friendly name that lets you easily find a rule in the Resolver
--   dashboard in the Route 53 console.
createResolverRule_name :: Lens' CreateResolverRule (Maybe Text)

-- | A list of the tag keys and values that you want to associate with the
--   endpoint.
createResolverRule_tags :: Lens' CreateResolverRule (Maybe [Tag])

-- | A unique string that identifies the request and that allows failed
--   requests to be retried without the risk of running the operation
--   twice. <tt>CreatorRequestId</tt> can be any unique string, for
--   example, a date/time stamp.
createResolverRule_creatorRequestId :: Lens' CreateResolverRule Text

-- | When you want to forward DNS queries for specified domain name to
--   resolvers on your network, specify <tt>FORWARD</tt>.
--   
--   When you have a forwarding rule to forward DNS queries for a domain to
--   your network and you want Resolver to process queries for a subdomain
--   of that domain, specify <tt>SYSTEM</tt>.
--   
--   For example, to forward DNS queries for example.com to resolvers on
--   your network, you create a rule and specify <tt>FORWARD</tt> for
--   <tt>RuleType</tt>. To then have Resolver process queries for
--   apex.example.com, you create a rule and specify <tt>SYSTEM</tt> for
--   <tt>RuleType</tt>.
--   
--   Currently, only Resolver can create rules that have a value of
--   <tt>RECURSIVE</tt> for <tt>RuleType</tt>.
createResolverRule_ruleType :: Lens' CreateResolverRule RuleTypeOption

-- | DNS queries for this domain name are forwarded to the IP addresses
--   that you specify in <tt>TargetIps</tt>. If a query matches multiple
--   Resolver rules (example.com and www.example.com), outbound DNS queries
--   are routed using the Resolver rule that contains the most specific
--   domain name (www.example.com).
createResolverRule_domainName :: Lens' CreateResolverRule Text

-- | Information about the <tt>CreateResolverRule</tt> request, including
--   the status of the request.
createResolverRuleResponse_resolverRule :: Lens' CreateResolverRuleResponse (Maybe ResolverRule)

-- | The response's http status code.
createResolverRuleResponse_httpStatus :: Lens' CreateResolverRuleResponse Int

-- | The ID of the Resolver query logging configuration that you want to
--   get information about.
getResolverQueryLogConfig_resolverQueryLogConfigId :: Lens' GetResolverQueryLogConfig Text

-- | Information about the Resolver query logging configuration that you
--   specified in a <tt>GetQueryLogConfig</tt> request.
getResolverQueryLogConfigResponse_resolverQueryLogConfig :: Lens' GetResolverQueryLogConfigResponse (Maybe ResolverQueryLogConfig)

-- | The response's http status code.
getResolverQueryLogConfigResponse_httpStatus :: Lens' GetResolverQueryLogConfigResponse Int

-- | The DNS record's type. This determines the format of the record value
--   that you provided in <tt>BlockOverrideDomain</tt>. Used for the rule
--   action <tt>BLOCK</tt> with a <tt>BlockResponse</tt> setting of
--   <tt>OVERRIDE</tt>.
--   
--   This setting is required if the <tt>BlockResponse</tt> setting is
--   <tt>OVERRIDE</tt>.
createFirewallRule_blockOverrideDnsType :: Lens' CreateFirewallRule (Maybe BlockOverrideDnsType)

-- | The way that you want DNS Firewall to block the request, used with the
--   rule action setting <tt>BLOCK</tt>.
--   
--   <ul>
--   <li><tt>NODATA</tt> - Respond indicating that the query was
--   successful, but no response is available for it.</li>
--   <li><tt>NXDOMAIN</tt> - Respond indicating that the domain name that's
--   in the query doesn't exist.</li>
--   <li><tt>OVERRIDE</tt> - Provide a custom override in the response.
--   This option requires custom handling details in the rule's
--   <tt>BlockOverride*</tt> settings.</li>
--   </ul>
--   
--   This setting is required if the rule action setting is <tt>BLOCK</tt>.
createFirewallRule_blockResponse :: Lens' CreateFirewallRule (Maybe BlockResponse)

-- | The recommended amount of time, in seconds, for the DNS resolver or
--   web browser to cache the provided override record. Used for the rule
--   action <tt>BLOCK</tt> with a <tt>BlockResponse</tt> setting of
--   <tt>OVERRIDE</tt>.
--   
--   This setting is required if the <tt>BlockResponse</tt> setting is
--   <tt>OVERRIDE</tt>.
createFirewallRule_blockOverrideTtl :: Lens' CreateFirewallRule (Maybe Natural)

-- | The custom DNS record to send back in response to the query. Used for
--   the rule action <tt>BLOCK</tt> with a <tt>BlockResponse</tt> setting
--   of <tt>OVERRIDE</tt>.
--   
--   This setting is required if the <tt>BlockResponse</tt> setting is
--   <tt>OVERRIDE</tt>.
createFirewallRule_blockOverrideDomain :: Lens' CreateFirewallRule (Maybe Text)

-- | A unique string that identifies the request and that allows you to
--   retry failed requests without the risk of running the operation twice.
--   <tt>CreatorRequestId</tt> can be any unique string, for example, a
--   date/time stamp.
createFirewallRule_creatorRequestId :: Lens' CreateFirewallRule Text

-- | The unique identifier of the firewall rule group where you want to
--   create the rule.
createFirewallRule_firewallRuleGroupId :: Lens' CreateFirewallRule Text

-- | The ID of the domain list that you want to use in the rule.
createFirewallRule_firewallDomainListId :: Lens' CreateFirewallRule Text

-- | The setting that determines the processing order of the rule in the
--   rule group. DNS Firewall processes the rules in a rule group by order
--   of priority, starting from the lowest setting.
--   
--   You must specify a unique priority for each rule in a rule group. To
--   make it easier to insert rules later, leave space between the numbers,
--   for example, use 100, 200, and so on. You can change the priority
--   setting for the rules in a rule group at any time.
createFirewallRule_priority :: Lens' CreateFirewallRule Int

-- | The action that DNS Firewall should take on a DNS query when it
--   matches one of the domains in the rule's domain list:
--   
--   <ul>
--   <li><tt>ALLOW</tt> - Permit the request to go through.</li>
--   <li><tt>ALERT</tt> - Permit the request and send metrics and logs to
--   Cloud Watch.</li>
--   <li><tt>BLOCK</tt> - Disallow the request. This option requires
--   additional details in the rule's <tt>BlockResponse</tt>.</li>
--   </ul>
createFirewallRule_action :: Lens' CreateFirewallRule Action

-- | A name that lets you identify the rule in the rule group.
createFirewallRule_name :: Lens' CreateFirewallRule Text

-- | The firewall rule that you just created.
createFirewallRuleResponse_firewallRule :: Lens' CreateFirewallRuleResponse (Maybe FirewallRule)

-- | The response's http status code.
createFirewallRuleResponse_httpStatus :: Lens' CreateFirewallRuleResponse Int

-- | If enabled, this setting disallows modification or removal of the
--   association, to help prevent against accidentally altering DNS
--   firewall protections.
updateFirewallRuleGroupAssociation_mutationProtection :: Lens' UpdateFirewallRuleGroupAssociation (Maybe MutationProtectionStatus)

-- | The setting that determines the processing order of the rule group
--   among the rule groups that you associate with the specified VPC. DNS
--   Firewall filters VPC traffic starting from the rule group with the
--   lowest numeric priority setting.
--   
--   You must specify a unique priority for each rule group that you
--   associate with a single VPC. To make it easier to insert rule groups
--   later, leave space between the numbers, for example, use 100, 200, and
--   so on. You can change the priority setting for a rule group
--   association after you create it.
updateFirewallRuleGroupAssociation_priority :: Lens' UpdateFirewallRuleGroupAssociation (Maybe Int)

-- | The name of the rule group association.
updateFirewallRuleGroupAssociation_name :: Lens' UpdateFirewallRuleGroupAssociation (Maybe Text)

-- | The identifier of the FirewallRuleGroupAssociation.
updateFirewallRuleGroupAssociation_firewallRuleGroupAssociationId :: Lens' UpdateFirewallRuleGroupAssociation Text

-- | The association that you just updated.
updateFirewallRuleGroupAssociationResponse_firewallRuleGroupAssociation :: Lens' UpdateFirewallRuleGroupAssociationResponse (Maybe FirewallRuleGroupAssociation)

-- | The response's http status code.
updateFirewallRuleGroupAssociationResponse_httpStatus :: Lens' UpdateFirewallRuleGroupAssociationResponse Int

-- | The association <tt>Status</tt> setting that you want DNS Firewall to
--   filter on for the list. If you don't specify this, then DNS Firewall
--   returns all associations, regardless of status.
listFirewallRuleGroupAssociations_status :: Lens' ListFirewallRuleGroupAssociations (Maybe FirewallRuleGroupAssociationStatus)

-- | The unique identifier of the firewall rule group that you want to
--   retrieve the associations for. Leave this blank to retrieve
--   associations for any rule group.
listFirewallRuleGroupAssociations_firewallRuleGroupId :: Lens' ListFirewallRuleGroupAssociations (Maybe Text)

-- | The setting that determines the processing order of the rule group
--   among the rule groups that are associated with a single VPC. DNS
--   Firewall filters VPC traffic starting from the rule group with the
--   lowest numeric priority setting.
listFirewallRuleGroupAssociations_priority :: Lens' ListFirewallRuleGroupAssociations (Maybe Int)

-- | The unique identifier of the VPC that you want to retrieve the
--   associations for. Leave this blank to retrieve associations for any
--   VPC.
listFirewallRuleGroupAssociations_vpcId :: Lens' ListFirewallRuleGroupAssociations (Maybe Text)

-- | For the first call to this list request, omit this value.
--   
--   When you request a list of objects, Resolver returns at most the
--   number of objects specified in <tt>MaxResults</tt>. If more objects
--   are available for retrieval, Resolver returns a <tt>NextToken</tt>
--   value in the response. To retrieve the next batch of objects, use the
--   token that was returned for the prior request in your next request.
listFirewallRuleGroupAssociations_nextToken :: Lens' ListFirewallRuleGroupAssociations (Maybe Text)

-- | The maximum number of objects that you want Resolver to return for
--   this request. If more objects are available, in the response, Resolver
--   provides a <tt>NextToken</tt> value that you can use in a subsequent
--   call to get the next batch of objects.
--   
--   If you don't specify a value for <tt>MaxResults</tt>, Resolver returns
--   up to 100 objects.
listFirewallRuleGroupAssociations_maxResults :: Lens' ListFirewallRuleGroupAssociations (Maybe Natural)

-- | A list of your firewall rule group associations.
--   
--   This might be a partial list of the associations that you have
--   defined. For information, see <tt>MaxResults</tt>.
listFirewallRuleGroupAssociationsResponse_firewallRuleGroupAssociations :: Lens' ListFirewallRuleGroupAssociationsResponse (Maybe [FirewallRuleGroupAssociation])

-- | If objects are still available for retrieval, Resolver returns this
--   token in the response. To retrieve the next batch of objects, provide
--   this token in your next request.
listFirewallRuleGroupAssociationsResponse_nextToken :: Lens' ListFirewallRuleGroupAssociationsResponse (Maybe Text)

-- | The response's http status code.
listFirewallRuleGroupAssociationsResponse_httpStatus :: Lens' ListFirewallRuleGroupAssociationsResponse Int

-- | An optional specification to return a subset of query logging
--   associations.
--   
--   If you submit a second or subsequent
--   <tt>ListResolverQueryLogConfigAssociations</tt> request and specify
--   the <tt>NextToken</tt> parameter, you must use the same values for
--   <tt>Filters</tt>, if any, as in the previous request.
listResolverQueryLogConfigAssociations_filters :: Lens' ListResolverQueryLogConfigAssociations (Maybe [Filter])

-- | For the first <tt>ListResolverQueryLogConfigAssociations</tt> request,
--   omit this value.
--   
--   If there are more than <tt>MaxResults</tt> query logging associations
--   that match the values that you specify for <tt>Filters</tt>, you can
--   submit another <tt>ListResolverQueryLogConfigAssociations</tt> request
--   to get the next group of associations. In the next request, specify
--   the value of <tt>NextToken</tt> from the previous response.
listResolverQueryLogConfigAssociations_nextToken :: Lens' ListResolverQueryLogConfigAssociations (Maybe Text)

-- | If you specified a value for <tt>SortBy</tt>, the order that you want
--   query logging associations to be listed in, <tt>ASCENDING</tt> or
--   <tt>DESCENDING</tt>.
--   
--   If you submit a second or subsequent
--   <tt>ListResolverQueryLogConfigAssociations</tt> request and specify
--   the <tt>NextToken</tt> parameter, you must use the same value for
--   <tt>SortOrder</tt>, if any, as in the previous request.
listResolverQueryLogConfigAssociations_sortOrder :: Lens' ListResolverQueryLogConfigAssociations (Maybe SortOrder)

-- | The maximum number of query logging associations that you want to
--   return in the response to a
--   <tt>ListResolverQueryLogConfigAssociations</tt> request. If you don't
--   specify a value for <tt>MaxResults</tt>, Resolver returns up to 100
--   query logging associations.
listResolverQueryLogConfigAssociations_maxResults :: Lens' ListResolverQueryLogConfigAssociations (Maybe Natural)

-- | The element that you want Resolver to sort query logging associations
--   by.
--   
--   If you submit a second or subsequent
--   <tt>ListResolverQueryLogConfigAssociations</tt> request and specify
--   the <tt>NextToken</tt> parameter, you must use the same value for
--   <tt>SortBy</tt>, if any, as in the previous request.
--   
--   Valid values include the following elements:
--   
--   <ul>
--   <li><tt>CreationTime</tt>: The ID of the query logging
--   association.</li>
--   <li><tt>Error</tt>: If the value of <tt>Status</tt> is
--   <tt>FAILED</tt>, the value of <tt>Error</tt> indicates the
--   cause:<ul><li><tt>DESTINATION_NOT_FOUND</tt>: The specified
--   destination (for example, an Amazon S3 bucket) was
--   deleted.</li><li><tt>ACCESS_DENIED</tt>: Permissions don't allow
--   sending logs to the destination.</li></ul>If <tt>Status</tt> is a
--   value other than <tt>FAILED</tt>, <tt>ERROR</tt> is null.</li>
--   <li><tt>Id</tt>: The ID of the query logging association</li>
--   <li><tt>ResolverQueryLogConfigId</tt>: The ID of the query logging
--   configuration</li>
--   <li><tt>ResourceId</tt>: The ID of the VPC that is associated with the
--   query logging configuration</li>
--   <li><tt>Status</tt>: The current status of the configuration. Valid
--   values include the following:<ul><li><tt>CREATING</tt>: Resolver is
--   creating an association between an Amazon VPC and a query logging
--   configuration.</li><li><tt>CREATED</tt>: The association between an
--   Amazon VPC and a query logging configuration was successfully created.
--   Resolver is logging queries that originate in the specified
--   VPC.</li><li><tt>DELETING</tt>: Resolver is deleting this query
--   logging association.</li><li><tt>FAILED</tt>: Resolver either couldn't
--   create or couldn't delete the query logging association. Here are two
--   common causes:<ul><li>The specified destination (for example, an
--   Amazon S3 bucket) was deleted.</li><li>Permissions don't allow sending
--   logs to the destination.</li></ul></li></ul></li>
--   </ul>
listResolverQueryLogConfigAssociations_sortBy :: Lens' ListResolverQueryLogConfigAssociations (Maybe Text)

-- | The total number of query logging associations that were created by
--   the current account in the specified Region and that match the filters
--   that were specified in the
--   <tt>ListResolverQueryLogConfigAssociations</tt> request. For the total
--   number of associations that were created by the current account in the
--   specified Region, see <tt>TotalCount</tt>.
listResolverQueryLogConfigAssociationsResponse_totalFilteredCount :: Lens' ListResolverQueryLogConfigAssociationsResponse (Maybe Int)

-- | A list that contains one <tt>ResolverQueryLogConfigAssociations</tt>
--   element for each query logging association that matches the values
--   that you specified for <tt>Filter</tt>.
listResolverQueryLogConfigAssociationsResponse_resolverQueryLogConfigAssociations :: Lens' ListResolverQueryLogConfigAssociationsResponse (Maybe [ResolverQueryLogConfigAssociation])

-- | If there are more than <tt>MaxResults</tt> query logging associations,
--   you can submit another <tt>ListResolverQueryLogConfigAssociations</tt>
--   request to get the next group of associations. In the next request,
--   specify the value of <tt>NextToken</tt> from the previous response.
listResolverQueryLogConfigAssociationsResponse_nextToken :: Lens' ListResolverQueryLogConfigAssociationsResponse (Maybe Text)

-- | The total number of query logging associations that were created by
--   the current account in the specified Region. This count can differ
--   from the number of associations that are returned in a
--   <tt>ListResolverQueryLogConfigAssociations</tt> response, depending on
--   the values that you specify in the request.
listResolverQueryLogConfigAssociationsResponse_totalCount :: Lens' ListResolverQueryLogConfigAssociationsResponse (Maybe Int)

-- | The response's http status code.
listResolverQueryLogConfigAssociationsResponse_httpStatus :: Lens' ListResolverQueryLogConfigAssociationsResponse Int

-- | For the first <tt>ListTagsForResource</tt> request, omit this value.
--   
--   If you have more than <tt>MaxResults</tt> tags, you can submit another
--   <tt>ListTagsForResource</tt> request to get the next group of tags for
--   the resource. In the next request, specify the value of
--   <tt>NextToken</tt> from the previous response.
listTagsForResource_nextToken :: Lens' ListTagsForResource (Maybe Text)

-- | The maximum number of tags that you want to return in the response to
--   a <tt>ListTagsForResource</tt> request. If you don't specify a value
--   for <tt>MaxResults</tt>, Resolver returns up to 100 tags.
listTagsForResource_maxResults :: Lens' ListTagsForResource (Maybe Natural)

-- | The Amazon Resource Name (ARN) for the resource that you want to list
--   tags for.
listTagsForResource_resourceArn :: Lens' ListTagsForResource Text

-- | If more than <tt>MaxResults</tt> tags match the specified criteria,
--   you can submit another <tt>ListTagsForResource</tt> request to get the
--   next group of results. In the next request, specify the value of
--   <tt>NextToken</tt> from the previous response.
listTagsForResourceResponse_nextToken :: Lens' ListTagsForResourceResponse (Maybe Text)

-- | The tags that are associated with the resource that you specified in
--   the <tt>ListTagsForResource</tt> request.
listTagsForResourceResponse_tags :: Lens' ListTagsForResourceResponse (Maybe [Tag])

-- | The response's http status code.
listTagsForResourceResponse_httpStatus :: Lens' ListTagsForResourceResponse Int

-- | The identifier of the FirewallRuleGroupAssociation.
getFirewallRuleGroupAssociation_firewallRuleGroupAssociationId :: Lens' GetFirewallRuleGroupAssociation Text

-- | The association that you requested.
getFirewallRuleGroupAssociationResponse_firewallRuleGroupAssociation :: Lens' GetFirewallRuleGroupAssociationResponse (Maybe FirewallRuleGroupAssociation)

-- | The response's http status code.
getFirewallRuleGroupAssociationResponse_httpStatus :: Lens' GetFirewallRuleGroupAssociationResponse Int

-- | The ID of the Resolver endpoint that you want to disassociate an IP
--   address from.
disassociateResolverEndpointIpAddress_resolverEndpointId :: Lens' DisassociateResolverEndpointIpAddress Text

-- | The IPv4 address that you want to remove from a Resolver endpoint.
disassociateResolverEndpointIpAddress_ipAddress :: Lens' DisassociateResolverEndpointIpAddress IpAddressUpdate

-- | The response to an <tt>DisassociateResolverEndpointIpAddress</tt>
--   request.
disassociateResolverEndpointIpAddressResponse_resolverEndpoint :: Lens' DisassociateResolverEndpointIpAddressResponse (Maybe ResolverEndpoint)

-- | The response's http status code.
disassociateResolverEndpointIpAddressResponse_httpStatus :: Lens' DisassociateResolverEndpointIpAddressResponse Int

-- | An optional specification to return a subset of Resolver rules, such
--   as Resolver rules that are associated with the same VPC ID.
--   
--   If you submit a second or subsequent
--   <tt>ListResolverRuleAssociations</tt> request and specify the
--   <tt>NextToken</tt> parameter, you must use the same values for
--   <tt>Filters</tt>, if any, as in the previous request.
listResolverRuleAssociations_filters :: Lens' ListResolverRuleAssociations (Maybe [Filter])

-- | For the first <tt>ListResolverRuleAssociation</tt> request, omit this
--   value.
--   
--   If you have more than <tt>MaxResults</tt> rule associations, you can
--   submit another <tt>ListResolverRuleAssociation</tt> request to get the
--   next group of rule associations. In the next request, specify the
--   value of <tt>NextToken</tt> from the previous response.
listResolverRuleAssociations_nextToken :: Lens' ListResolverRuleAssociations (Maybe Text)

-- | The maximum number of rule associations that you want to return in the
--   response to a <tt>ListResolverRuleAssociations</tt> request. If you
--   don't specify a value for <tt>MaxResults</tt>, Resolver returns up to
--   100 rule associations.
listResolverRuleAssociations_maxResults :: Lens' ListResolverRuleAssociations (Maybe Natural)

-- | The associations that were created between Resolver rules and VPCs
--   using the current Amazon Web Services account, and that match the
--   specified filters, if any.
listResolverRuleAssociationsResponse_resolverRuleAssociations :: Lens' ListResolverRuleAssociationsResponse (Maybe [ResolverRuleAssociation])

-- | If more than <tt>MaxResults</tt> rule associations match the specified
--   criteria, you can submit another <tt>ListResolverRuleAssociation</tt>
--   request to get the next group of results. In the next request, specify
--   the value of <tt>NextToken</tt> from the previous response.
listResolverRuleAssociationsResponse_nextToken :: Lens' ListResolverRuleAssociationsResponse (Maybe Text)

-- | The value that you specified for <tt>MaxResults</tt> in the request.
listResolverRuleAssociationsResponse_maxResults :: Lens' ListResolverRuleAssociationsResponse (Maybe Natural)

-- | The response's http status code.
listResolverRuleAssociationsResponse_httpStatus :: Lens' ListResolverRuleAssociationsResponse Int

-- | The ID of the query logging configuration that you want to delete.
deleteResolverQueryLogConfig_resolverQueryLogConfigId :: Lens' DeleteResolverQueryLogConfig Text

-- | Information about the query logging configuration that you deleted,
--   including the status of the request.
deleteResolverQueryLogConfigResponse_resolverQueryLogConfig :: Lens' DeleteResolverQueryLogConfigResponse (Maybe ResolverQueryLogConfig)

-- | The response's http status code.
deleteResolverQueryLogConfigResponse_httpStatus :: Lens' DeleteResolverQueryLogConfigResponse Int

-- | A list of the tag keys and values that you want to associate with the
--   rule group.
createFirewallRuleGroup_tags :: Lens' CreateFirewallRuleGroup (Maybe [Tag])

-- | A unique string defined by you to identify the request. This allows
--   you to retry failed requests without the risk of running the operation
--   twice. This can be any unique string, for example, a timestamp.
createFirewallRuleGroup_creatorRequestId :: Lens' CreateFirewallRuleGroup Text

-- | A name that lets you identify the rule group, to manage and use it.
createFirewallRuleGroup_name :: Lens' CreateFirewallRuleGroup Text

-- | A collection of rules used to filter DNS network traffic.
createFirewallRuleGroupResponse_firewallRuleGroup :: Lens' CreateFirewallRuleGroupResponse (Maybe FirewallRuleGroup)

-- | The response's http status code.
createFirewallRuleGroupResponse_httpStatus :: Lens' CreateFirewallRuleGroupResponse Int

-- | The ID of the Resolver endpoint that you want to get information
--   about.
getResolverEndpoint_resolverEndpointId :: Lens' GetResolverEndpoint Text

-- | Information about the Resolver endpoint that you specified in a
--   <tt>GetResolverEndpoint</tt> request.
getResolverEndpointResponse_resolverEndpoint :: Lens' GetResolverEndpointResponse (Maybe ResolverEndpoint)

-- | The response's http status code.
getResolverEndpointResponse_httpStatus :: Lens' GetResolverEndpointResponse Int

-- | An optional specification to return a subset of query logging
--   configurations.
--   
--   If you submit a second or subsequent
--   <tt>ListResolverQueryLogConfigs</tt> request and specify the
--   <tt>NextToken</tt> parameter, you must use the same values for
--   <tt>Filters</tt>, if any, as in the previous request.
listResolverQueryLogConfigs_filters :: Lens' ListResolverQueryLogConfigs (Maybe [Filter])

-- | For the first <tt>ListResolverQueryLogConfigs</tt> request, omit this
--   value.
--   
--   If there are more than <tt>MaxResults</tt> query logging
--   configurations that match the values that you specify for
--   <tt>Filters</tt>, you can submit another
--   <tt>ListResolverQueryLogConfigs</tt> request to get the next group of
--   configurations. In the next request, specify the value of
--   <tt>NextToken</tt> from the previous response.
listResolverQueryLogConfigs_nextToken :: Lens' ListResolverQueryLogConfigs (Maybe Text)

-- | If you specified a value for <tt>SortBy</tt>, the order that you want
--   query logging configurations to be listed in, <tt>ASCENDING</tt> or
--   <tt>DESCENDING</tt>.
--   
--   If you submit a second or subsequent
--   <tt>ListResolverQueryLogConfigs</tt> request and specify the
--   <tt>NextToken</tt> parameter, you must use the same value for
--   <tt>SortOrder</tt>, if any, as in the previous request.
listResolverQueryLogConfigs_sortOrder :: Lens' ListResolverQueryLogConfigs (Maybe SortOrder)

-- | The maximum number of query logging configurations that you want to
--   return in the response to a <tt>ListResolverQueryLogConfigs</tt>
--   request. If you don't specify a value for <tt>MaxResults</tt>,
--   Resolver returns up to 100 query logging configurations.
listResolverQueryLogConfigs_maxResults :: Lens' ListResolverQueryLogConfigs (Maybe Natural)

-- | The element that you want Resolver to sort query logging
--   configurations by.
--   
--   If you submit a second or subsequent
--   <tt>ListResolverQueryLogConfigs</tt> request and specify the
--   <tt>NextToken</tt> parameter, you must use the same value for
--   <tt>SortBy</tt>, if any, as in the previous request.
--   
--   Valid values include the following elements:
--   
--   <ul>
--   <li><tt>Arn</tt>: The ARN of the query logging configuration</li>
--   <li><tt>AssociationCount</tt>: The number of VPCs that are associated
--   with the specified configuration</li>
--   <li><tt>CreationTime</tt>: The date and time that Resolver returned
--   when the configuration was created</li>
--   <li><tt>CreatorRequestId</tt>: The value that was specified for
--   <tt>CreatorRequestId</tt> when the configuration was created</li>
--   <li><tt>DestinationArn</tt>: The location that logs are sent to</li>
--   <li><tt>Id</tt>: The ID of the configuration</li>
--   <li><tt>Name</tt>: The name of the configuration</li>
--   <li><tt>OwnerId</tt>: The Amazon Web Services account number of the
--   account that created the configuration</li>
--   <li><tt>ShareStatus</tt>: Whether the configuration is shared with
--   other Amazon Web Services accounts or shared with the current account
--   by another Amazon Web Services account. Sharing is configured through
--   Resource Access Manager (RAM).</li>
--   <li><tt>Status</tt>: The current status of the configuration. Valid
--   values include the following:<ul><li><tt>CREATING</tt>: Resolver is
--   creating the query logging configuration.</li><li><tt>CREATED</tt>:
--   The query logging configuration was successfully created. Resolver is
--   logging queries that originate in the specified
--   VPC.</li><li><tt>DELETING</tt>: Resolver is deleting this query
--   logging configuration.</li><li><tt>FAILED</tt>: Resolver either
--   couldn't create or couldn't delete the query logging configuration.
--   Here are two common causes:<ul><li>The specified destination (for
--   example, an Amazon S3 bucket) was deleted.</li><li>Permissions don't
--   allow sending logs to the destination.</li></ul></li></ul></li>
--   </ul>
listResolverQueryLogConfigs_sortBy :: Lens' ListResolverQueryLogConfigs (Maybe Text)

-- | The total number of query logging configurations that were created by
--   the current account in the specified Region and that match the filters
--   that were specified in the <tt>ListResolverQueryLogConfigs</tt>
--   request. For the total number of query logging configurations that
--   were created by the current account in the specified Region, see
--   <tt>TotalCount</tt>.
listResolverQueryLogConfigsResponse_totalFilteredCount :: Lens' ListResolverQueryLogConfigsResponse (Maybe Int)

-- | A list that contains one <tt>ResolverQueryLogConfig</tt> element for
--   each query logging configuration that matches the values that you
--   specified for <tt>Filter</tt>.
listResolverQueryLogConfigsResponse_resolverQueryLogConfigs :: Lens' ListResolverQueryLogConfigsResponse (Maybe [ResolverQueryLogConfig])

-- | If there are more than <tt>MaxResults</tt> query logging
--   configurations, you can submit another
--   <tt>ListResolverQueryLogConfigs</tt> request to get the next group of
--   configurations. In the next request, specify the value of
--   <tt>NextToken</tt> from the previous response.
listResolverQueryLogConfigsResponse_nextToken :: Lens' ListResolverQueryLogConfigsResponse (Maybe Text)

-- | The total number of query logging configurations that were created by
--   the current account in the specified Region. This count can differ
--   from the number of query logging configurations that are returned in a
--   <tt>ListResolverQueryLogConfigs</tt> response, depending on the values
--   that you specify in the request.
listResolverQueryLogConfigsResponse_totalCount :: Lens' ListResolverQueryLogConfigsResponse (Maybe Int)

-- | The response's http status code.
listResolverQueryLogConfigsResponse_httpStatus :: Lens' ListResolverQueryLogConfigsResponse Int

-- | The unique identifier of the firewall rule group that you want to
--   delete.
deleteFirewallRuleGroup_firewallRuleGroupId :: Lens' DeleteFirewallRuleGroup Text

-- | A collection of rules used to filter DNS network traffic.
deleteFirewallRuleGroupResponse_firewallRuleGroup :: Lens' DeleteFirewallRuleGroupResponse (Maybe FirewallRuleGroup)

-- | The response's http status code.
deleteFirewallRuleGroupResponse_httpStatus :: Lens' DeleteFirewallRuleGroupResponse Int

-- | For the first <tt>ListResolverEndpointIpAddresses</tt> request, omit
--   this value.
--   
--   If the specified Resolver endpoint has more than <tt>MaxResults</tt>
--   IP addresses, you can submit another
--   <tt>ListResolverEndpointIpAddresses</tt> request to get the next group
--   of IP addresses. In the next request, specify the value of
--   <tt>NextToken</tt> from the previous response.
listResolverEndpointIpAddresses_nextToken :: Lens' ListResolverEndpointIpAddresses (Maybe Text)

-- | The maximum number of IP addresses that you want to return in the
--   response to a <tt>ListResolverEndpointIpAddresses</tt> request. If you
--   don't specify a value for <tt>MaxResults</tt>, Resolver returns up to
--   100 IP addresses.
listResolverEndpointIpAddresses_maxResults :: Lens' ListResolverEndpointIpAddresses (Maybe Natural)

-- | The ID of the Resolver endpoint that you want to get IP addresses for.
listResolverEndpointIpAddresses_resolverEndpointId :: Lens' ListResolverEndpointIpAddresses Text

-- | If the specified endpoint has more than <tt>MaxResults</tt> IP
--   addresses, you can submit another
--   <tt>ListResolverEndpointIpAddresses</tt> request to get the next group
--   of IP addresses. In the next request, specify the value of
--   <tt>NextToken</tt> from the previous response.
listResolverEndpointIpAddressesResponse_nextToken :: Lens' ListResolverEndpointIpAddressesResponse (Maybe Text)

-- | The value that you specified for <tt>MaxResults</tt> in the request.
listResolverEndpointIpAddressesResponse_maxResults :: Lens' ListResolverEndpointIpAddressesResponse (Maybe Natural)

-- | Information about the IP addresses in your VPC that DNS queries
--   originate from (for outbound endpoints) or that you forward DNS
--   queries to (for inbound endpoints).
listResolverEndpointIpAddressesResponse_ipAddresses :: Lens' ListResolverEndpointIpAddressesResponse (Maybe [IpAddressResponse])

-- | The response's http status code.
listResolverEndpointIpAddressesResponse_httpStatus :: Lens' ListResolverEndpointIpAddressesResponse Int

-- | The ID of the query logging configuration that you want to associate a
--   VPC with.
associateResolverQueryLogConfig_resolverQueryLogConfigId :: Lens' AssociateResolverQueryLogConfig Text

-- | The ID of an Amazon VPC that you want this query logging configuration
--   to log queries for.
--   
--   The VPCs and the query logging configuration must be in the same
--   Region.
associateResolverQueryLogConfig_resourceId :: Lens' AssociateResolverQueryLogConfig Text

-- | A complex type that contains settings for a specified association
--   between an Amazon VPC and a query logging configuration.
associateResolverQueryLogConfigResponse_resolverQueryLogConfigAssociation :: Lens' AssociateResolverQueryLogConfigResponse (Maybe ResolverQueryLogConfigAssociation)

-- | The response's http status code.
associateResolverQueryLogConfigResponse_httpStatus :: Lens' AssociateResolverQueryLogConfigResponse Int

-- | The ID of the Resolver rule that you want to get the Resolver rule
--   policy for.
getResolverRulePolicy_arn :: Lens' GetResolverRulePolicy Text

-- | The Resolver rule policy for the rule that you specified in a
--   <tt>GetResolverRulePolicy</tt> request.
getResolverRulePolicyResponse_resolverRulePolicy :: Lens' GetResolverRulePolicyResponse (Maybe Text)

-- | The response's http status code.
getResolverRulePolicyResponse_httpStatus :: Lens' GetResolverRulePolicyResponse Int

-- | The ID of the virtual private cloud (VPC) for the DNSSEC validation
--   status.
getResolverDnssecConfig_resourceId :: Lens' GetResolverDnssecConfig Text

-- | The information about a configuration for DNSSEC validation.
getResolverDnssecConfigResponse_resolverDNSSECConfig :: Lens' GetResolverDnssecConfigResponse (Maybe ResolverDnssecConfig)

-- | The response's http status code.
getResolverDnssecConfigResponse_httpStatus :: Lens' GetResolverDnssecConfigResponse Int

-- | For the first call to this list request, omit this value.
--   
--   When you request a list of objects, Resolver returns at most the
--   number of objects specified in <tt>MaxResults</tt>. If more objects
--   are available for retrieval, Resolver returns a <tt>NextToken</tt>
--   value in the response. To retrieve the next batch of objects, use the
--   token that was returned for the prior request in your next request.
listFirewallRuleGroups_nextToken :: Lens' ListFirewallRuleGroups (Maybe Text)

-- | The maximum number of objects that you want Resolver to return for
--   this request. If more objects are available, in the response, Resolver
--   provides a <tt>NextToken</tt> value that you can use in a subsequent
--   call to get the next batch of objects.
--   
--   If you don't specify a value for <tt>MaxResults</tt>, Resolver returns
--   up to 100 objects.
listFirewallRuleGroups_maxResults :: Lens' ListFirewallRuleGroups (Maybe Natural)

-- | If objects are still available for retrieval, Resolver returns this
--   token in the response. To retrieve the next batch of objects, provide
--   this token in your next request.
listFirewallRuleGroupsResponse_nextToken :: Lens' ListFirewallRuleGroupsResponse (Maybe Text)

-- | A list of your firewall rule groups.
--   
--   This might be a partial list of the rule groups that you have defined.
--   For information, see <tt>MaxResults</tt>.
listFirewallRuleGroupsResponse_firewallRuleGroups :: Lens' ListFirewallRuleGroupsResponse (Maybe [FirewallRuleGroupMetadata])

-- | The response's http status code.
listFirewallRuleGroupsResponse_httpStatus :: Lens' ListFirewallRuleGroupsResponse Int

-- | The ID of the Resolver rule that you want to update.
updateResolverRule_resolverRuleId :: Lens' UpdateResolverRule Text

-- | The new settings for the Resolver rule.
updateResolverRule_config :: Lens' UpdateResolverRule ResolverRuleConfig

-- | The response to an <tt>UpdateResolverRule</tt> request.
updateResolverRuleResponse_resolverRule :: Lens' UpdateResolverRuleResponse (Maybe ResolverRule)

-- | The response's http status code.
updateResolverRuleResponse_httpStatus :: Lens' UpdateResolverRuleResponse Int

-- | The ID of the Resolver rule that you want to delete.
deleteResolverRule_resolverRuleId :: Lens' DeleteResolverRule Text

-- | Information about the <tt>DeleteResolverRule</tt> request, including
--   the status of the request.
deleteResolverRuleResponse_resolverRule :: Lens' DeleteResolverRuleResponse (Maybe ResolverRule)

-- | The response's http status code.
deleteResolverRuleResponse_httpStatus :: Lens' DeleteResolverRuleResponse Int

-- | The unique identifier of the firewall rule group that you want to
--   delete the rule from.
deleteFirewallRule_firewallRuleGroupId :: Lens' DeleteFirewallRule Text

-- | The ID of the domain list that's used in the rule.
deleteFirewallRule_firewallDomainListId :: Lens' DeleteFirewallRule Text

-- | The specification for the firewall rule that you just deleted.
deleteFirewallRuleResponse_firewallRule :: Lens' DeleteFirewallRuleResponse (Maybe FirewallRule)

-- | The response's http status code.
deleteFirewallRuleResponse_httpStatus :: Lens' DeleteFirewallRuleResponse Int

-- | The DNS record's type. This determines the format of the record value
--   that you provided in <tt>BlockOverrideDomain</tt>. Used for the rule
--   action <tt>BLOCK</tt> with a <tt>BlockResponse</tt> setting of
--   <tt>OVERRIDE</tt>.
updateFirewallRule_blockOverrideDnsType :: Lens' UpdateFirewallRule (Maybe BlockOverrideDnsType)

-- | The setting that determines the processing order of the rule in the
--   rule group. DNS Firewall processes the rules in a rule group by order
--   of priority, starting from the lowest setting.
--   
--   You must specify a unique priority for each rule in a rule group. To
--   make it easier to insert rules later, leave space between the numbers,
--   for example, use 100, 200, and so on. You can change the priority
--   setting for the rules in a rule group at any time.
updateFirewallRule_priority :: Lens' UpdateFirewallRule (Maybe Int)

-- | The way that you want DNS Firewall to block the request. Used for the
--   rule action setting <tt>BLOCK</tt>.
--   
--   <ul>
--   <li><tt>NODATA</tt> - Respond indicating that the query was
--   successful, but no response is available for it.</li>
--   <li><tt>NXDOMAIN</tt> - Respond indicating that the domain name that's
--   in the query doesn't exist.</li>
--   <li><tt>OVERRIDE</tt> - Provide a custom override in the response.
--   This option requires custom handling details in the rule's
--   <tt>BlockOverride*</tt> settings.</li>
--   </ul>
updateFirewallRule_blockResponse :: Lens' UpdateFirewallRule (Maybe BlockResponse)

-- | The action that DNS Firewall should take on a DNS query when it
--   matches one of the domains in the rule's domain list:
--   
--   <ul>
--   <li><tt>ALLOW</tt> - Permit the request to go through.</li>
--   <li><tt>ALERT</tt> - Permit the request to go through but send an
--   alert to the logs.</li>
--   <li><tt>BLOCK</tt> - Disallow the request. This option requires
--   additional details in the rule's <tt>BlockResponse</tt>.</li>
--   </ul>
updateFirewallRule_action :: Lens' UpdateFirewallRule (Maybe Action)

-- | The recommended amount of time, in seconds, for the DNS resolver or
--   web browser to cache the provided override record. Used for the rule
--   action <tt>BLOCK</tt> with a <tt>BlockResponse</tt> setting of
--   <tt>OVERRIDE</tt>.
updateFirewallRule_blockOverrideTtl :: Lens' UpdateFirewallRule (Maybe Natural)

-- | The name of the rule.
updateFirewallRule_name :: Lens' UpdateFirewallRule (Maybe Text)

-- | The custom DNS record to send back in response to the query. Used for
--   the rule action <tt>BLOCK</tt> with a <tt>BlockResponse</tt> setting
--   of <tt>OVERRIDE</tt>.
updateFirewallRule_blockOverrideDomain :: Lens' UpdateFirewallRule (Maybe Text)

-- | The unique identifier of the firewall rule group for the rule.
updateFirewallRule_firewallRuleGroupId :: Lens' UpdateFirewallRule Text

-- | The ID of the domain list to use in the rule.
updateFirewallRule_firewallDomainListId :: Lens' UpdateFirewallRule Text

-- | The firewall rule that you just updated.
updateFirewallRuleResponse_firewallRule :: Lens' UpdateFirewallRuleResponse (Maybe FirewallRule)

-- | The response's http status code.
updateFirewallRuleResponse_httpStatus :: Lens' UpdateFirewallRuleResponse Int

-- | Optional additional filter for the rules to retrieve.
--   
--   The setting that determines the processing order of the rules in a
--   rule group. DNS Firewall processes the rules in a rule group by order
--   of priority, starting from the lowest setting.
listFirewallRules_priority :: Lens' ListFirewallRules (Maybe Int)

-- | Optional additional filter for the rules to retrieve.
--   
--   The action that DNS Firewall should take on a DNS query when it
--   matches one of the domains in the rule's domain list:
--   
--   <ul>
--   <li><tt>ALLOW</tt> - Permit the request to go through.</li>
--   <li><tt>ALERT</tt> - Permit the request to go through but send an
--   alert to the logs.</li>
--   <li><tt>BLOCK</tt> - Disallow the request. If this is specified,
--   additional handling details are provided in the rule's
--   <tt>BlockResponse</tt> setting.</li>
--   </ul>
listFirewallRules_action :: Lens' ListFirewallRules (Maybe Action)

-- | For the first call to this list request, omit this value.
--   
--   When you request a list of objects, Resolver returns at most the
--   number of objects specified in <tt>MaxResults</tt>. If more objects
--   are available for retrieval, Resolver returns a <tt>NextToken</tt>
--   value in the response. To retrieve the next batch of objects, use the
--   token that was returned for the prior request in your next request.
listFirewallRules_nextToken :: Lens' ListFirewallRules (Maybe Text)

-- | The maximum number of objects that you want Resolver to return for
--   this request. If more objects are available, in the response, Resolver
--   provides a <tt>NextToken</tt> value that you can use in a subsequent
--   call to get the next batch of objects.
--   
--   If you don't specify a value for <tt>MaxResults</tt>, Resolver returns
--   up to 100 objects.
listFirewallRules_maxResults :: Lens' ListFirewallRules (Maybe Natural)

-- | The unique identifier of the firewall rule group that you want to
--   retrieve the rules for.
listFirewallRules_firewallRuleGroupId :: Lens' ListFirewallRules Text

-- | A list of the rules that you have defined.
--   
--   This might be a partial list of the firewall rules that you've
--   defined. For information, see <tt>MaxResults</tt>.
listFirewallRulesResponse_firewallRules :: Lens' ListFirewallRulesResponse (Maybe [FirewallRule])

-- | If objects are still available for retrieval, Resolver returns this
--   token in the response. To retrieve the next batch of objects, provide
--   this token in your next request.
listFirewallRulesResponse_nextToken :: Lens' ListFirewallRulesResponse (Maybe Text)

-- | The response's http status code.
listFirewallRulesResponse_httpStatus :: Lens' ListFirewallRulesResponse Int

-- | The unique identifier of the firewall rule group.
getFirewallRuleGroup_firewallRuleGroupId :: Lens' GetFirewallRuleGroup Text

-- | A collection of rules used to filter DNS network traffic.
getFirewallRuleGroupResponse_firewallRuleGroup :: Lens' GetFirewallRuleGroupResponse (Maybe FirewallRuleGroup)

-- | The response's http status code.
getFirewallRuleGroupResponse_httpStatus :: Lens' GetFirewallRuleGroupResponse Int

-- | An optional specification to return a subset of Resolver rules, such
--   as all Resolver rules that are associated with the same Resolver
--   endpoint.
--   
--   If you submit a second or subsequent <tt>ListResolverRules</tt>
--   request and specify the <tt>NextToken</tt> parameter, you must use the
--   same values for <tt>Filters</tt>, if any, as in the previous request.
listResolverRules_filters :: Lens' ListResolverRules (Maybe [Filter])

-- | For the first <tt>ListResolverRules</tt> request, omit this value.
--   
--   If you have more than <tt>MaxResults</tt> Resolver rules, you can
--   submit another <tt>ListResolverRules</tt> request to get the next
--   group of Resolver rules. In the next request, specify the value of
--   <tt>NextToken</tt> from the previous response.
listResolverRules_nextToken :: Lens' ListResolverRules (Maybe Text)

-- | The maximum number of Resolver rules that you want to return in the
--   response to a <tt>ListResolverRules</tt> request. If you don't specify
--   a value for <tt>MaxResults</tt>, Resolver returns up to 100 Resolver
--   rules.
listResolverRules_maxResults :: Lens' ListResolverRules (Maybe Natural)

-- | The Resolver rules that were created using the current Amazon Web
--   Services account and that match the specified filters, if any.
listResolverRulesResponse_resolverRules :: Lens' ListResolverRulesResponse (Maybe [ResolverRule])

-- | If more than <tt>MaxResults</tt> Resolver rules match the specified
--   criteria, you can submit another <tt>ListResolverRules</tt> request to
--   get the next group of results. In the next request, specify the value
--   of <tt>NextToken</tt> from the previous response.
listResolverRulesResponse_nextToken :: Lens' ListResolverRulesResponse (Maybe Text)

-- | The value that you specified for <tt>MaxResults</tt> in the request.
listResolverRulesResponse_maxResults :: Lens' ListResolverRulesResponse (Maybe Natural)

-- | The response's http status code.
listResolverRulesResponse_httpStatus :: Lens' ListResolverRulesResponse Int

-- | A friendly name that lets you easily find a configuration in the
--   Resolver dashboard in the Route 53 console.
createResolverEndpoint_name :: Lens' CreateResolverEndpoint (Maybe Text)

-- | A list of the tag keys and values that you want to associate with the
--   endpoint.
createResolverEndpoint_tags :: Lens' CreateResolverEndpoint (Maybe [Tag])

-- | A unique string that identifies the request and that allows failed
--   requests to be retried without the risk of running the operation
--   twice. <tt>CreatorRequestId</tt> can be any unique string, for
--   example, a date/time stamp.
createResolverEndpoint_creatorRequestId :: Lens' CreateResolverEndpoint Text

-- | The ID of one or more security groups that you want to use to control
--   access to this VPC. The security group that you specify must include
--   one or more inbound rules (for inbound Resolver endpoints) or outbound
--   rules (for outbound Resolver endpoints). Inbound and outbound rules
--   must allow TCP and UDP access. For inbound access, open port 53. For
--   outbound access, open the port that you're using for DNS queries on
--   your network.
createResolverEndpoint_securityGroupIds :: Lens' CreateResolverEndpoint [Text]

-- | Specify the applicable value:
--   
--   <ul>
--   <li><tt>INBOUND</tt>: Resolver forwards DNS queries to the DNS service
--   for a VPC from your network</li>
--   <li><tt>OUTBOUND</tt>: Resolver forwards DNS queries from the DNS
--   service for a VPC to your network</li>
--   </ul>
createResolverEndpoint_direction :: Lens' CreateResolverEndpoint ResolverEndpointDirection

-- | The subnets and IP addresses in your VPC that DNS queries originate
--   from (for outbound endpoints) or that you forward DNS queries to (for
--   inbound endpoints). The subnet ID uniquely identifies a VPC.
createResolverEndpoint_ipAddresses :: Lens' CreateResolverEndpoint (NonEmpty IpAddressRequest)

-- | Information about the <tt>CreateResolverEndpoint</tt> request,
--   including the status of the request.
createResolverEndpointResponse_resolverEndpoint :: Lens' CreateResolverEndpointResponse (Maybe ResolverEndpoint)

-- | The response's http status code.
createResolverEndpointResponse_httpStatus :: Lens' CreateResolverEndpointResponse Int

-- | A name for the association that you're creating between a Resolver
--   rule and a VPC.
associateResolverRule_name :: Lens' AssociateResolverRule (Maybe Text)

-- | The ID of the Resolver rule that you want to associate with the VPC.
--   To list the existing Resolver rules, use <a>ListResolverRules</a>.
associateResolverRule_resolverRuleId :: Lens' AssociateResolverRule Text

-- | The ID of the VPC that you want to associate the Resolver rule with.
associateResolverRule_vPCId :: Lens' AssociateResolverRule Text

-- | Information about the <tt>AssociateResolverRule</tt> request,
--   including the status of the request.
associateResolverRuleResponse_resolverRuleAssociation :: Lens' AssociateResolverRuleResponse (Maybe ResolverRuleAssociation)

-- | The response's http status code.
associateResolverRuleResponse_httpStatus :: Lens' AssociateResolverRuleResponse Int

-- | The ARN of the query logging configuration that you want to get the
--   query logging policy for.
getResolverQueryLogConfigPolicy_arn :: Lens' GetResolverQueryLogConfigPolicy Text

-- | Information about the query logging policy for the query logging
--   configuration that you specified in a
--   <tt>GetResolverQueryLogConfigPolicy</tt> request.
getResolverQueryLogConfigPolicyResponse_resolverQueryLogConfigPolicy :: Lens' GetResolverQueryLogConfigPolicyResponse (Maybe Text)

-- | The response's http status code.
getResolverQueryLogConfigPolicyResponse_httpStatus :: Lens' GetResolverQueryLogConfigPolicyResponse Int

-- | The ID of the domain list whose domains you want to update.
updateFirewallDomains_firewallDomainListId :: Lens' UpdateFirewallDomains Text

-- | What you want DNS Firewall to do with the domains that you are
--   providing:
--   
--   <ul>
--   <li><tt>ADD</tt> - Add the domains to the ones that are already in the
--   domain list.</li>
--   <li><tt>REMOVE</tt> - Search the domain list for the domains and
--   remove them from the list.</li>
--   <li><tt>REPLACE</tt> - Update the domain list to exactly match the
--   list that you are providing.</li>
--   </ul>
updateFirewallDomains_operation :: Lens' UpdateFirewallDomains FirewallDomainUpdateOperation

-- | A list of domains to use in the update operation.
--   
--   Each domain specification in your domain list must satisfy the
--   following requirements:
--   
--   <ul>
--   <li>It can optionally start with <tt>*</tt> (asterisk).</li>
--   <li>With the exception of the optional starting asterisk, it must only
--   contain the following characters: <tt>A-Z</tt>, <tt>a-z</tt>,
--   <tt>0-9</tt>, <tt>-</tt> (hyphen).</li>
--   <li>It must be from 1-255 characters in length.</li>
--   </ul>
updateFirewallDomains_domains :: Lens' UpdateFirewallDomains [Text]

updateFirewallDomainsResponse_status :: Lens' UpdateFirewallDomainsResponse (Maybe FirewallDomainListStatus)

-- | Additional information about the status of the list, if available.
updateFirewallDomainsResponse_statusMessage :: Lens' UpdateFirewallDomainsResponse (Maybe Text)

-- | The name of the domain list.
updateFirewallDomainsResponse_name :: Lens' UpdateFirewallDomainsResponse (Maybe Text)

-- | The ID of the firewall domain list that DNS Firewall just updated.
updateFirewallDomainsResponse_id :: Lens' UpdateFirewallDomainsResponse (Maybe Text)

-- | The response's http status code.
updateFirewallDomainsResponse_httpStatus :: Lens' UpdateFirewallDomainsResponse Int

-- | An optional specification to return a subset of Resolver endpoints,
--   such as all inbound Resolver endpoints.
--   
--   If you submit a second or subsequent <tt>ListResolverEndpoints</tt>
--   request and specify the <tt>NextToken</tt> parameter, you must use the
--   same values for <tt>Filters</tt>, if any, as in the previous request.
listResolverEndpoints_filters :: Lens' ListResolverEndpoints (Maybe [Filter])

-- | For the first <tt>ListResolverEndpoints</tt> request, omit this value.
--   
--   If you have more than <tt>MaxResults</tt> Resolver endpoints, you can
--   submit another <tt>ListResolverEndpoints</tt> request to get the next
--   group of Resolver endpoints. In the next request, specify the value of
--   <tt>NextToken</tt> from the previous response.
listResolverEndpoints_nextToken :: Lens' ListResolverEndpoints (Maybe Text)

-- | The maximum number of Resolver endpoints that you want to return in
--   the response to a <tt>ListResolverEndpoints</tt> request. If you don't
--   specify a value for <tt>MaxResults</tt>, Resolver returns up to 100
--   Resolver endpoints.
listResolverEndpoints_maxResults :: Lens' ListResolverEndpoints (Maybe Natural)

-- | The Resolver endpoints that were created by using the current Amazon
--   Web Services account, and that match the specified filters, if any.
listResolverEndpointsResponse_resolverEndpoints :: Lens' ListResolverEndpointsResponse (Maybe [ResolverEndpoint])

-- | If more than <tt>MaxResults</tt> IP addresses match the specified
--   criteria, you can submit another <tt>ListResolverEndpoint</tt> request
--   to get the next group of results. In the next request, specify the
--   value of <tt>NextToken</tt> from the previous response.
listResolverEndpointsResponse_nextToken :: Lens' ListResolverEndpointsResponse (Maybe Text)

-- | The value that you specified for <tt>MaxResults</tt> in the request.
listResolverEndpointsResponse_maxResults :: Lens' ListResolverEndpointsResponse (Maybe Natural)

-- | The response's http status code.
listResolverEndpointsResponse_httpStatus :: Lens' ListResolverEndpointsResponse Int

-- | For the first call to this list request, omit this value.
--   
--   When you request a list of objects, Resolver returns at most the
--   number of objects specified in <tt>MaxResults</tt>. If more objects
--   are available for retrieval, Resolver returns a <tt>NextToken</tt>
--   value in the response. To retrieve the next batch of objects, use the
--   token that was returned for the prior request in your next request.
listFirewallDomains_nextToken :: Lens' ListFirewallDomains (Maybe Text)

-- | The maximum number of objects that you want Resolver to return for
--   this request. If more objects are available, in the response, Resolver
--   provides a <tt>NextToken</tt> value that you can use in a subsequent
--   call to get the next batch of objects.
--   
--   If you don't specify a value for <tt>MaxResults</tt>, Resolver returns
--   up to 100 objects.
listFirewallDomains_maxResults :: Lens' ListFirewallDomains (Maybe Natural)

-- | The ID of the domain list whose domains you want to retrieve.
listFirewallDomains_firewallDomainListId :: Lens' ListFirewallDomains Text

-- | If objects are still available for retrieval, Resolver returns this
--   token in the response. To retrieve the next batch of objects, provide
--   this token in your next request.
listFirewallDomainsResponse_nextToken :: Lens' ListFirewallDomainsResponse (Maybe Text)

-- | A list of the domains in the firewall domain list.
--   
--   This might be a partial list of the domains that you've defined in the
--   domain list. For information, see <tt>MaxResults</tt>.
listFirewallDomainsResponse_domains :: Lens' ListFirewallDomainsResponse (Maybe [Text])

-- | The response's http status code.
listFirewallDomainsResponse_httpStatus :: Lens' ListFirewallDomainsResponse Int

-- | The ID of the Resolver rule association that you want to get
--   information about.
getResolverRuleAssociation_resolverRuleAssociationId :: Lens' GetResolverRuleAssociation Text

-- | Information about the Resolver rule association that you specified in
--   a <tt>GetResolverRuleAssociation</tt> request.
getResolverRuleAssociationResponse_resolverRuleAssociation :: Lens' GetResolverRuleAssociationResponse (Maybe ResolverRuleAssociation)

-- | The response's http status code.
getResolverRuleAssociationResponse_httpStatus :: Lens' GetResolverRuleAssociationResponse Int

-- | The ID of the VPC from Amazon VPC that the configuration is for.
getFirewallConfig_resourceId :: Lens' GetFirewallConfig Text

-- | Configuration of the firewall behavior provided by DNS Firewall for a
--   single VPC from AmazonVPC.
getFirewallConfigResponse_firewallConfig :: Lens' GetFirewallConfigResponse (Maybe FirewallConfig)

-- | The response's http status code.
getFirewallConfigResponse_httpStatus :: Lens' GetFirewallConfigResponse Int

-- | The ID of the domain list.
getFirewallDomainList_firewallDomainListId :: Lens' GetFirewallDomainList Text

-- | The domain list that you requested.
getFirewallDomainListResponse_firewallDomainList :: Lens' GetFirewallDomainListResponse (Maybe FirewallDomainList)

-- | The response's http status code.
getFirewallDomainListResponse_httpStatus :: Lens' GetFirewallDomainListResponse Int

-- | The ID of the VPC that you want to disassociate the Resolver rule
--   from.
disassociateResolverRule_vPCId :: Lens' DisassociateResolverRule Text

-- | The ID of the Resolver rule that you want to disassociate from the
--   specified VPC.
disassociateResolverRule_resolverRuleId :: Lens' DisassociateResolverRule Text

-- | Information about the <tt>DisassociateResolverRule</tt> request,
--   including the status of the request.
disassociateResolverRuleResponse_resolverRuleAssociation :: Lens' DisassociateResolverRuleResponse (Maybe ResolverRuleAssociation)

-- | The response's http status code.
disassociateResolverRuleResponse_httpStatus :: Lens' DisassociateResolverRuleResponse Int

-- | The ID of the Resolver query logging configuration association that
--   you want to get information about.
getResolverQueryLogConfigAssociation_resolverQueryLogConfigAssociationId :: Lens' GetResolverQueryLogConfigAssociation Text

-- | Information about the Resolver query logging configuration association
--   that you specified in a <tt>GetQueryLogConfigAssociation</tt> request.
getResolverQueryLogConfigAssociationResponse_resolverQueryLogConfigAssociation :: Lens' GetResolverQueryLogConfigAssociationResponse (Maybe ResolverQueryLogConfigAssociation)

-- | The response's http status code.
getResolverQueryLogConfigAssociationResponse_httpStatus :: Lens' GetResolverQueryLogConfigAssociationResponse Int

-- | For the first call to this list request, omit this value.
--   
--   When you request a list of objects, Resolver returns at most the
--   number of objects specified in <tt>MaxResults</tt>. If more objects
--   are available for retrieval, Resolver returns a <tt>NextToken</tt>
--   value in the response. To retrieve the next batch of objects, use the
--   token that was returned for the prior request in your next request.
listFirewallDomainLists_nextToken :: Lens' ListFirewallDomainLists (Maybe Text)

-- | The maximum number of objects that you want Resolver to return for
--   this request. If more objects are available, in the response, Resolver
--   provides a <tt>NextToken</tt> value that you can use in a subsequent
--   call to get the next batch of objects.
--   
--   If you don't specify a value for <tt>MaxResults</tt>, Resolver returns
--   up to 100 objects.
listFirewallDomainLists_maxResults :: Lens' ListFirewallDomainLists (Maybe Natural)

-- | If objects are still available for retrieval, Resolver returns this
--   token in the response. To retrieve the next batch of objects, provide
--   this token in your next request.
listFirewallDomainListsResponse_nextToken :: Lens' ListFirewallDomainListsResponse (Maybe Text)

-- | A list of the domain lists that you have defined.
--   
--   This might be a partial list of the domain lists that you've defined.
--   For information, see <tt>MaxResults</tt>.
listFirewallDomainListsResponse_firewallDomainLists :: Lens' ListFirewallDomainListsResponse (Maybe [FirewallDomainListMetadata])

-- | The response's http status code.
listFirewallDomainListsResponse_httpStatus :: Lens' ListFirewallDomainListsResponse Int

-- | The identifier of the FirewallRuleGroupAssociation.
disassociateFirewallRuleGroup_firewallRuleGroupAssociationId :: Lens' DisassociateFirewallRuleGroup Text

-- | The firewall rule group association that you just removed.
disassociateFirewallRuleGroupResponse_firewallRuleGroupAssociation :: Lens' DisassociateFirewallRuleGroupResponse (Maybe FirewallRuleGroupAssociation)

-- | The response's http status code.
disassociateFirewallRuleGroupResponse_httpStatus :: Lens' DisassociateFirewallRuleGroupResponse Int

-- | The ID of the VPC that the configuration is for.
updateFirewallConfig_resourceId :: Lens' UpdateFirewallConfig Text

-- | Determines how Route 53 Resolver handles queries during failures, for
--   example when all traffic that is sent to DNS Firewall fails to receive
--   a reply.
--   
--   <ul>
--   <li>By default, fail open is disabled, which means the failure mode is
--   closed. This approach favors security over availability. DNS Firewall
--   blocks queries that it is unable to evaluate properly.</li>
--   <li>If you enable this option, the failure mode is open. This approach
--   favors availability over security. DNS Firewall allows queries to
--   proceed if it is unable to properly evaluate them.</li>
--   </ul>
--   
--   This behavior is only enforced for VPCs that have at least one DNS
--   Firewall rule group association.
updateFirewallConfig_firewallFailOpen :: Lens' UpdateFirewallConfig FirewallFailOpenStatus

-- | Configuration of the firewall behavior provided by DNS Firewall for a
--   single VPC.
updateFirewallConfigResponse_firewallConfig :: Lens' UpdateFirewallConfigResponse (Maybe FirewallConfig)

-- | The response's http status code.
updateFirewallConfigResponse_httpStatus :: Lens' UpdateFirewallConfigResponse Int

-- | The ID of the domain list that you want to delete.
deleteFirewallDomainList_firewallDomainListId :: Lens' DeleteFirewallDomainList Text

-- | The domain list that you just deleted.
deleteFirewallDomainListResponse_firewallDomainList :: Lens' DeleteFirewallDomainListResponse (Maybe FirewallDomainList)

-- | The response's http status code.
deleteFirewallDomainListResponse_httpStatus :: Lens' DeleteFirewallDomainListResponse Int

-- | For the first call to this list request, omit this value.
--   
--   When you request a list of objects, Resolver returns at most the
--   number of objects specified in <tt>MaxResults</tt>. If more objects
--   are available for retrieval, Resolver returns a <tt>NextToken</tt>
--   value in the response. To retrieve the next batch of objects, use the
--   token that was returned for the prior request in your next request.
listFirewallConfigs_nextToken :: Lens' ListFirewallConfigs (Maybe Text)

-- | The maximum number of objects that you want Resolver to return for
--   this request. If more objects are available, in the response, Resolver
--   provides a <tt>NextToken</tt> value that you can use in a subsequent
--   call to get the next batch of objects.
--   
--   If you don't specify a value for <tt>MaxResults</tt>, Resolver returns
--   up to 100 objects.
listFirewallConfigs_maxResults :: Lens' ListFirewallConfigs (Maybe Natural)

-- | If objects are still available for retrieval, Resolver returns this
--   token in the response. To retrieve the next batch of objects, provide
--   this token in your next request.
listFirewallConfigsResponse_nextToken :: Lens' ListFirewallConfigsResponse (Maybe Text)

-- | The configurations for the firewall behavior provided by DNS Firewall
--   for VPCs from Amazon Virtual Private Cloud (Amazon VPC).
listFirewallConfigsResponse_firewallConfigs :: Lens' ListFirewallConfigsResponse (Maybe [FirewallConfig])

-- | The response's http status code.
listFirewallConfigsResponse_httpStatus :: Lens' ListFirewallConfigsResponse Int

-- | A list of the tag keys and values that you want to associate with the
--   domain list.
createFirewallDomainList_tags :: Lens' CreateFirewallDomainList (Maybe [Tag])

-- | A unique string that identifies the request and that allows you to
--   retry failed requests without the risk of running the operation twice.
--   <tt>CreatorRequestId</tt> can be any unique string, for example, a
--   date/time stamp.
createFirewallDomainList_creatorRequestId :: Lens' CreateFirewallDomainList Text

-- | A name that lets you identify the domain list to manage and use it.
createFirewallDomainList_name :: Lens' CreateFirewallDomainList Text

-- | The domain list that you just created.
createFirewallDomainListResponse_firewallDomainList :: Lens' CreateFirewallDomainListResponse (Maybe FirewallDomainList)

-- | The response's http status code.
createFirewallDomainListResponse_httpStatus :: Lens' CreateFirewallDomainListResponse Int

-- | The ID of the domain list that you want to modify with the import
--   operation.
importFirewallDomains_firewallDomainListId :: Lens' ImportFirewallDomains Text

-- | What you want DNS Firewall to do with the domains that are listed in
--   the file. This must be set to <tt>REPLACE</tt>, which updates the
--   domain list to exactly match the list in the file.
importFirewallDomains_operation :: Lens' ImportFirewallDomains FirewallDomainImportOperation

-- | The fully qualified URL or URI of the file stored in Amazon Simple
--   Storage Service (Amazon S3) that contains the list of domains to
--   import.
--   
--   The file must be in an S3 bucket that's in the same Region as your DNS
--   Firewall. The file must be a text file and must contain a single
--   domain per line.
importFirewallDomains_domainFileUrl :: Lens' ImportFirewallDomains Text

importFirewallDomainsResponse_status :: Lens' ImportFirewallDomainsResponse (Maybe FirewallDomainListStatus)

-- | Additional information about the status of the list, if available.
importFirewallDomainsResponse_statusMessage :: Lens' ImportFirewallDomainsResponse (Maybe Text)

-- | The name of the domain list.
importFirewallDomainsResponse_name :: Lens' ImportFirewallDomainsResponse (Maybe Text)

-- | The Id of the firewall domain list that DNS Firewall just updated.
importFirewallDomainsResponse_id :: Lens' ImportFirewallDomainsResponse (Maybe Text)

-- | The response's http status code.
importFirewallDomainsResponse_httpStatus :: Lens' ImportFirewallDomainsResponse Int

-- | The ID of the query logging configuration that you want to
--   disassociate a specified VPC from.
disassociateResolverQueryLogConfig_resolverQueryLogConfigId :: Lens' DisassociateResolverQueryLogConfig Text

-- | The ID of the Amazon VPC that you want to disassociate from a
--   specified query logging configuration.
disassociateResolverQueryLogConfig_resourceId :: Lens' DisassociateResolverQueryLogConfig Text

-- | A complex type that contains settings for the association that you
--   deleted between an Amazon VPC and a query logging configuration.
disassociateResolverQueryLogConfigResponse_resolverQueryLogConfigAssociation :: Lens' DisassociateResolverQueryLogConfigResponse (Maybe ResolverQueryLogConfigAssociation)

-- | The response's http status code.
disassociateResolverQueryLogConfigResponse_httpStatus :: Lens' DisassociateResolverQueryLogConfigResponse Int

-- | The Amazon Resource Name (ARN) for the resource that you want to add
--   tags to. To get the ARN for a resource, use the applicable
--   <tt>Get</tt> or <tt>List</tt> command:
--   
--   <ul>
--   <li><a>GetResolverEndpoint</a></li>
--   <li><a>GetResolverRule</a></li>
--   <li><a>GetResolverRuleAssociation</a></li>
--   <li><a>ListResolverEndpoints</a></li>
--   <li><a>ListResolverRuleAssociations</a></li>
--   <li><a>ListResolverRules</a></li>
--   </ul>
tagResource_resourceArn :: Lens' TagResource Text

-- | The tags that you want to add to the specified resource.
tagResource_tags :: Lens' TagResource [Tag]

-- | The response's http status code.
tagResourceResponse_httpStatus :: Lens' TagResourceResponse Int

-- | If enabled, this setting disallows modification or removal of the
--   association, to help prevent against accidentally altering DNS
--   firewall protections. When you create the association, the default
--   setting is <tt>DISABLED</tt>.
associateFirewallRuleGroup_mutationProtection :: Lens' AssociateFirewallRuleGroup (Maybe MutationProtectionStatus)

-- | A list of the tag keys and values that you want to associate with the
--   rule group association.
associateFirewallRuleGroup_tags :: Lens' AssociateFirewallRuleGroup (Maybe [Tag])

-- | A unique string that identifies the request and that allows failed
--   requests to be retried without the risk of running the operation
--   twice. <tt>CreatorRequestId</tt> can be any unique string, for
--   example, a date/time stamp.
associateFirewallRuleGroup_creatorRequestId :: Lens' AssociateFirewallRuleGroup Text

-- | The unique identifier of the firewall rule group.
associateFirewallRuleGroup_firewallRuleGroupId :: Lens' AssociateFirewallRuleGroup Text

-- | The unique identifier of the VPC that you want to associate with the
--   rule group.
associateFirewallRuleGroup_vpcId :: Lens' AssociateFirewallRuleGroup Text

-- | The setting that determines the processing order of the rule group
--   among the rule groups that you associate with the specified VPC. DNS
--   Firewall filters VPC traffic starting from the rule group with the
--   lowest numeric priority setting.
--   
--   You must specify a unique priority for each rule group that you
--   associate with a single VPC. To make it easier to insert rule groups
--   later, leave space between the numbers, for example, use 101, 200, and
--   so on. You can change the priority setting for a rule group
--   association after you create it.
--   
--   The allowed values for <tt>Priority</tt> are between 100 and 9900.
associateFirewallRuleGroup_priority :: Lens' AssociateFirewallRuleGroup Int

-- | A name that lets you identify the association, to manage and use it.
associateFirewallRuleGroup_name :: Lens' AssociateFirewallRuleGroup Text

-- | The association that you just created. The association has an ID that
--   you can use to identify it in other requests, like update and delete.
associateFirewallRuleGroupResponse_firewallRuleGroupAssociation :: Lens' AssociateFirewallRuleGroupResponse (Maybe FirewallRuleGroupAssociation)

-- | The response's http status code.
associateFirewallRuleGroupResponse_httpStatus :: Lens' AssociateFirewallRuleGroupResponse Int

-- | The Amazon Resource Name (ARN) for the resource that you want to
--   remove tags from. To get the ARN for a resource, use the applicable
--   <tt>Get</tt> or <tt>List</tt> command:
--   
--   <ul>
--   <li><a>GetResolverEndpoint</a></li>
--   <li><a>GetResolverRule</a></li>
--   <li><a>GetResolverRuleAssociation</a></li>
--   <li><a>ListResolverEndpoints</a></li>
--   <li><a>ListResolverRuleAssociations</a></li>
--   <li><a>ListResolverRules</a></li>
--   </ul>
untagResource_resourceArn :: Lens' UntagResource Text

-- | The tags that you want to remove to the specified resource.
untagResource_tagKeys :: Lens' UntagResource [Text]

-- | The response's http status code.
untagResourceResponse_httpStatus :: Lens' UntagResourceResponse Int

-- | The Amazon Resource Name (ARN) of the account that you want to share
--   rules with.
putResolverQueryLogConfigPolicy_arn :: Lens' PutResolverQueryLogConfigPolicy Text

-- | An Identity and Access Management policy statement that lists the
--   query logging configurations that you want to share with another
--   Amazon Web Services account and the operations that you want the
--   account to be able to perform. You can specify the following
--   operations in the <tt>Actions</tt> section of the statement:
--   
--   <ul>
--   <li><pre>route53resolver:AssociateResolverQueryLogConfig</pre></li>
--   <li><pre>route53resolver:DisassociateResolverQueryLogConfig</pre></li>
--   
--   <li><pre>route53resolver:ListResolverQueryLogConfigAssociations</pre></li>
--   <li><pre>route53resolver:ListResolverQueryLogConfigs</pre></li>
--   </ul>
--   
--   In the <tt>Resource</tt> section of the statement, you specify the
--   ARNs for the query logging configurations that you want to share with
--   the account that you specified in <tt>Arn</tt>.
putResolverQueryLogConfigPolicy_resolverQueryLogConfigPolicy :: Lens' PutResolverQueryLogConfigPolicy Text

-- | Whether the <tt>PutResolverQueryLogConfigPolicy</tt> request was
--   successful.
putResolverQueryLogConfigPolicyResponse_returnValue :: Lens' PutResolverQueryLogConfigPolicyResponse (Maybe Bool)

-- | The response's http status code.
putResolverQueryLogConfigPolicyResponse_httpStatus :: Lens' PutResolverQueryLogConfigPolicyResponse Int

-- | The ID of the Resolver endpoint that you want to associate IP
--   addresses with.
associateResolverEndpointIpAddress_resolverEndpointId :: Lens' AssociateResolverEndpointIpAddress Text

-- | Either the IPv4 address that you want to add to a Resolver endpoint or
--   a subnet ID. If you specify a subnet ID, Resolver chooses an IP
--   address for you from the available IPs in the specified subnet.
associateResolverEndpointIpAddress_ipAddress :: Lens' AssociateResolverEndpointIpAddress IpAddressUpdate

-- | The response to an <tt>AssociateResolverEndpointIpAddress</tt>
--   request.
associateResolverEndpointIpAddressResponse_resolverEndpoint :: Lens' AssociateResolverEndpointIpAddressResponse (Maybe ResolverEndpoint)

-- | The response's http status code.
associateResolverEndpointIpAddressResponse_httpStatus :: Lens' AssociateResolverEndpointIpAddressResponse Int

-- | A list of the tag keys and values that you want to associate with the
--   query logging configuration.
createResolverQueryLogConfig_tags :: Lens' CreateResolverQueryLogConfig (Maybe [Tag])

-- | The name that you want to give the query logging configuration.
createResolverQueryLogConfig_name :: Lens' CreateResolverQueryLogConfig Text

-- | The ARN of the resource that you want Resolver to send query logs. You
--   can send query logs to an S3 bucket, a CloudWatch Logs log group, or a
--   Kinesis Data Firehose delivery stream. Examples of valid values
--   include the following:
--   
--   <ul>
--   <li><b>S3 bucket</b>:<pre>arn:aws:s3:::examplebucket</pre>You can
--   optionally append a file prefix to the end of the
--   ARN.<pre>arn:aws:s3:::examplebucket/development/</pre></li>
--   <li><b>CloudWatch Logs log
--   group</b>:<pre>arn:aws:logs:us-west-1:123456789012:log-group:/mystack-testgroup-12ABC1AB12A1:*</pre></li>
--   <li><b>Kinesis Data Firehose delivery
--   stream</b>:<pre>arn:aws:kinesis:us-east-2:0123456789:stream/my_stream_name</pre></li>
--   </ul>
createResolverQueryLogConfig_destinationArn :: Lens' CreateResolverQueryLogConfig Text

-- | A unique string that identifies the request and that allows failed
--   requests to be retried without the risk of running the operation
--   twice. <tt>CreatorRequestId</tt> can be any unique string, for
--   example, a date/time stamp.
createResolverQueryLogConfig_creatorRequestId :: Lens' CreateResolverQueryLogConfig Text

-- | Information about the <tt>CreateResolverQueryLogConfig</tt> request,
--   including the status of the request.
createResolverQueryLogConfigResponse_resolverQueryLogConfig :: Lens' CreateResolverQueryLogConfigResponse (Maybe ResolverQueryLogConfig)

-- | The response's http status code.
createResolverQueryLogConfigResponse_httpStatus :: Lens' CreateResolverQueryLogConfigResponse Int

-- | The ID of the Resolver rule that you want to get information about.
getResolverRule_resolverRuleId :: Lens' GetResolverRule Text

-- | Information about the Resolver rule that you specified in a
--   <tt>GetResolverRule</tt> request.
getResolverRuleResponse_resolverRule :: Lens' GetResolverRuleResponse (Maybe ResolverRule)

-- | The response's http status code.
getResolverRuleResponse_httpStatus :: Lens' GetResolverRuleResponse Int

-- | The ARN (Amazon Resource Name) for the rule group that you want to
--   share.
putFirewallRuleGroupPolicy_arn :: Lens' PutFirewallRuleGroupPolicy Text

-- | The Identity and Access Management (Amazon Web Services IAM) policy to
--   attach to the rule group.
putFirewallRuleGroupPolicy_firewallRuleGroupPolicy :: Lens' PutFirewallRuleGroupPolicy Text

putFirewallRuleGroupPolicyResponse_returnValue :: Lens' PutFirewallRuleGroupPolicyResponse (Maybe Bool)

-- | The response's http status code.
putFirewallRuleGroupPolicyResponse_httpStatus :: Lens' PutFirewallRuleGroupPolicyResponse Int

-- | The Amazon Resource Name (ARN) of the rule that you want to share with
--   another account.
putResolverRulePolicy_arn :: Lens' PutResolverRulePolicy Text

-- | An Identity and Access Management policy statement that lists the
--   rules that you want to share with another Amazon Web Services account
--   and the operations that you want the account to be able to perform.
--   You can specify the following operations in the <tt>Action</tt>
--   section of the statement:
--   
--   <ul>
--   <li><pre>route53resolver:GetResolverRule</pre></li>
--   <li><pre>route53resolver:AssociateResolverRule</pre></li>
--   <li><pre>route53resolver:DisassociateResolverRule</pre></li>
--   <li><pre>route53resolver:ListResolverRules</pre></li>
--   <li><pre>route53resolver:ListResolverRuleAssociations</pre></li>
--   </ul>
--   
--   In the <tt>Resource</tt> section of the statement, specify the ARN for
--   the rule that you want to share with another account. Specify the same
--   ARN that you specified in <tt>Arn</tt>.
putResolverRulePolicy_resolverRulePolicy :: Lens' PutResolverRulePolicy Text

-- | Whether the <tt>PutResolverRulePolicy</tt> request was successful.
putResolverRulePolicyResponse_returnValue :: Lens' PutResolverRulePolicyResponse (Maybe Bool)

-- | The response's http status code.
putResolverRulePolicyResponse_httpStatus :: Lens' PutResolverRulePolicyResponse Int

-- | An optional specification to return a subset of objects.
listResolverDnssecConfigs_filters :: Lens' ListResolverDnssecConfigs (Maybe [Filter])

-- | (Optional) If the current Amazon Web Services account has more than
--   <tt>MaxResults</tt> DNSSEC configurations, use <tt>NextToken</tt> to
--   get the second and subsequent pages of results.
--   
--   For the first <tt>ListResolverDnssecConfigs</tt> request, omit this
--   value.
--   
--   For the second and subsequent requests, get the value of
--   <tt>NextToken</tt> from the previous response and specify that value
--   for <tt>NextToken</tt> in the request.
listResolverDnssecConfigs_nextToken :: Lens' ListResolverDnssecConfigs (Maybe Text)

-- | <i>Optional</i>: An integer that specifies the maximum number of
--   DNSSEC configuration results that you want Amazon Route 53 to return.
--   If you don't specify a value for <tt>MaxResults</tt>, Route 53 returns
--   up to 100 configuration per page.
listResolverDnssecConfigs_maxResults :: Lens' ListResolverDnssecConfigs (Maybe Natural)

-- | If a response includes the last of the DNSSEC configurations that are
--   associated with the current Amazon Web Services account,
--   <tt>NextToken</tt> doesn't appear in the response.
--   
--   If a response doesn't include the last of the configurations, you can
--   get more configurations by submitting another
--   <a>ListResolverDnssecConfigs</a> request. Get the value of
--   <tt>NextToken</tt> that Amazon Route 53 returned in the previous
--   response and include it in <tt>NextToken</tt> in the next request.
listResolverDnssecConfigsResponse_nextToken :: Lens' ListResolverDnssecConfigsResponse (Maybe Text)

-- | An array that contains one <a>ResolverDnssecConfig</a> element for
--   each configuration for DNSSEC validation that is associated with the
--   current Amazon Web Services account.
listResolverDnssecConfigsResponse_resolverDnssecConfigs :: Lens' ListResolverDnssecConfigsResponse (Maybe [ResolverDnssecConfig])

-- | The response's http status code.
listResolverDnssecConfigsResponse_httpStatus :: Lens' ListResolverDnssecConfigsResponse Int

-- | The ID of the virtual private cloud (VPC) that you're updating the
--   DNSSEC validation status for.
updateResolverDnssecConfig_resourceId :: Lens' UpdateResolverDnssecConfig Text

-- | The new value that you are specifying for DNSSEC validation for the
--   VPC. The value can be <tt>ENABLE</tt> or <tt>DISABLE</tt>. Be aware
--   that it can take time for a validation status change to be completed.
updateResolverDnssecConfig_validation :: Lens' UpdateResolverDnssecConfig Validation

-- | A complex type that contains settings for the specified DNSSEC
--   configuration.
updateResolverDnssecConfigResponse_resolverDNSSECConfig :: Lens' UpdateResolverDnssecConfigResponse (Maybe ResolverDnssecConfig)

-- | The response's http status code.
updateResolverDnssecConfigResponse_httpStatus :: Lens' UpdateResolverDnssecConfigResponse Int

-- | The ARN (Amazon Resource Name) for the rule group.
getFirewallRuleGroupPolicy_arn :: Lens' GetFirewallRuleGroupPolicy Text

-- | The Identity and Access Management (Amazon Web Services IAM) policy
--   for sharing the specified rule group. You can use the policy to share
--   the rule group using Resource Access Manager (RAM).
getFirewallRuleGroupPolicyResponse_firewallRuleGroupPolicy :: Lens' GetFirewallRuleGroupPolicyResponse (Maybe Text)

-- | The response's http status code.
getFirewallRuleGroupPolicyResponse_httpStatus :: Lens' GetFirewallRuleGroupPolicyResponse Int

-- | When you're using a <tt>List</tt> operation and you want the operation
--   to return a subset of objects, such as Resolver endpoints or Resolver
--   rules, the value of the parameter that you want to use to filter
--   objects. For example, to list only inbound Resolver endpoints, specify
--   <tt>Direction</tt> for <tt>Name</tt> and specify <tt>INBOUND</tt> for
--   <tt>Values</tt>.
filter_values :: Lens' Filter (Maybe [Text])

-- | The name of the parameter that you want to use to filter objects.
--   
--   The valid values for <tt>Name</tt> depend on the action that you're
--   including the filter in, <a>ListResolverEndpoints</a>,
--   <a>ListResolverRules</a>, <a>ListResolverRuleAssociations</a>,
--   <a>ListResolverQueryLogConfigs</a>, or
--   <a>ListResolverQueryLogConfigAssociations</a>.
--   
--   In early versions of Resolver, values for <tt>Name</tt> were listed as
--   uppercase, with underscore (_) delimiters. For example,
--   <tt>CreatorRequestId</tt> was originally listed as
--   <tt>CREATOR_REQUEST_ID</tt>. Uppercase values for <tt>Name</tt> are
--   still supported.
--   
--   <b>ListResolverEndpoints</b>
--   
--   Valid values for <tt>Name</tt> include the following:
--   
--   <ul>
--   <li><tt>CreatorRequestId</tt>: The value that you specified when you
--   created the Resolver endpoint.</li>
--   <li><tt>Direction</tt>: Whether you want to return inbound or outbound
--   Resolver endpoints. If you specify <tt>DIRECTION</tt> for
--   <tt>Name</tt>, specify <tt>INBOUND</tt> or <tt>OUTBOUND</tt> for
--   <tt>Values</tt>.</li>
--   <li><tt>HostVPCId</tt>: The ID of the VPC that inbound DNS queries
--   pass through on the way from your network to your VPCs in a region, or
--   the VPC that outbound queries pass through on the way from your VPCs
--   to your network. In a <a>CreateResolverEndpoint</a> request,
--   <tt>SubnetId</tt> indirectly identifies the VPC. In a
--   <a>GetResolverEndpoint</a> request, the VPC ID for a Resolver endpoint
--   is returned in the <tt>HostVPCId</tt> element.</li>
--   <li><tt>IpAddressCount</tt>: The number of IP addresses that you have
--   associated with the Resolver endpoint.</li>
--   <li><tt>Name</tt>: The name of the Resolver endpoint.</li>
--   <li><tt>SecurityGroupIds</tt>: The IDs of the VPC security groups that
--   you specified when you created the Resolver endpoint.</li>
--   <li><tt>Status</tt>: The status of the Resolver endpoint. If you
--   specify <tt>Status</tt> for <tt>Name</tt>, specify one of the
--   following status codes for <tt>Values</tt>: <tt>CREATING</tt>,
--   <tt>OPERATIONAL</tt>, <tt>UPDATING</tt>, <tt>AUTO_RECOVERING</tt>,
--   <tt>ACTION_NEEDED</tt>, or <tt>DELETING</tt>. For more information,
--   see <tt>Status</tt> in <a>ResolverEndpoint</a>.</li>
--   </ul>
--   
--   <b>ListResolverRules</b>
--   
--   Valid values for <tt>Name</tt> include the following:
--   
--   <ul>
--   <li><tt>CreatorRequestId</tt>: The value that you specified when you
--   created the Resolver rule.</li>
--   <li><tt>DomainName</tt>: The domain name for which Resolver is
--   forwarding DNS queries to your network. In the value that you specify
--   for <tt>Values</tt>, include a trailing dot (.) after the domain name.
--   For example, if the domain name is example.com, specify the following
--   value. Note the "." after <tt>com</tt>:<pre>example.com.</pre></li>
--   <li><tt>Name</tt>: The name of the Resolver rule.</li>
--   <li><tt>ResolverEndpointId</tt>: The ID of the Resolver endpoint that
--   the Resolver rule is associated with.You can filter on the Resolver
--   endpoint only for rules that have a value of <tt>FORWARD</tt> for
--   <tt>RuleType</tt>.</li>
--   <li><tt>Status</tt>: The status of the Resolver rule. If you specify
--   <tt>Status</tt> for <tt>Name</tt>, specify one of the following status
--   codes for <tt>Values</tt>: <tt>COMPLETE</tt>, <tt>DELETING</tt>,
--   <tt>UPDATING</tt>, or <tt>FAILED</tt>.</li>
--   <li><tt>Type</tt>: The type of the Resolver rule. If you specify
--   <tt>TYPE</tt> for <tt>Name</tt>, specify <tt>FORWARD</tt> or
--   <tt>SYSTEM</tt> for <tt>Values</tt>.</li>
--   </ul>
--   
--   <b>ListResolverRuleAssociations</b>
--   
--   Valid values for <tt>Name</tt> include the following:
--   
--   <ul>
--   <li><tt>Name</tt>: The name of the Resolver rule association.</li>
--   <li><tt>ResolverRuleId</tt>: The ID of the Resolver rule that is
--   associated with one or more VPCs.</li>
--   <li><tt>Status</tt>: The status of the Resolver rule association. If
--   you specify <tt>Status</tt> for <tt>Name</tt>, specify one of the
--   following status codes for <tt>Values</tt>: <tt>CREATING</tt>,
--   <tt>COMPLETE</tt>, <tt>DELETING</tt>, or <tt>FAILED</tt>.</li>
--   <li><tt>VPCId</tt>: The ID of the VPC that the Resolver rule is
--   associated with.</li>
--   </ul>
--   
--   <b>ListResolverQueryLogConfigs</b>
--   
--   Valid values for <tt>Name</tt> include the following:
--   
--   <ul>
--   <li><tt>Arn</tt>: The ARN for the query logging configuration.</li>
--   <li><tt>AssociationCount</tt>: The number of VPCs that are associated
--   with the query logging configuration.</li>
--   <li><tt>CreationTime</tt>: The date and time that the query logging
--   configuration was created, in Unix time format and Coordinated
--   Universal Time (UTC).</li>
--   <li><tt>CreatorRequestId</tt>: A unique string that identifies the
--   request that created the query logging configuration.</li>
--   <li><tt>Destination</tt>: The Amazon Web Services service that you
--   want to forward query logs to. Valid values include the
--   following:<ul><li><pre>S3</pre></li><li><pre>CloudWatchLogs</pre></li><li><pre>KinesisFirehose</pre></li></ul></li>
--   <li><tt>DestinationArn</tt>: The ARN of the location that Resolver is
--   sending query logs to. This value can be the ARN for an S3 bucket, a
--   CloudWatch Logs log group, or a Kinesis Data Firehose delivery
--   stream.</li>
--   <li><tt>Id</tt>: The ID of the query logging configuration</li>
--   <li><tt>Name</tt>: The name of the query logging configuration</li>
--   <li><tt>OwnerId</tt>: The Amazon Web Services account ID for the
--   account that created the query logging configuration.</li>
--   <li><tt>ShareStatus</tt>: An indication of whether the query logging
--   configuration is shared with other Amazon Web Services accounts, or
--   was shared with the current account by another Amazon Web Services
--   account. Valid values include: <tt>NOT_SHARED</tt>,
--   <tt>SHARED_WITH_ME</tt>, or <tt>SHARED_BY_ME</tt>.</li>
--   <li><tt>Status</tt>: The status of the query logging configuration. If
--   you specify <tt>Status</tt> for <tt>Name</tt>, specify the applicable
--   status code for <tt>Values</tt>: <tt>CREATING</tt>, <tt>CREATED</tt>,
--   <tt>DELETING</tt>, or <tt>FAILED</tt>. For more information, see
--   <a>Status</a>.</li>
--   </ul>
--   
--   <b>ListResolverQueryLogConfigAssociations</b>
--   
--   Valid values for <tt>Name</tt> include the following:
--   
--   <ul>
--   <li><tt>CreationTime</tt>: The date and time that the VPC was
--   associated with the query logging configuration, in Unix time format
--   and Coordinated Universal Time (UTC).</li>
--   <li><tt>Error</tt>: If the value of <tt>Status</tt> is
--   <tt>FAILED</tt>, specify the cause: <tt>DESTINATION_NOT_FOUND</tt> or
--   <tt>ACCESS_DENIED</tt>.</li>
--   <li><tt>Id</tt>: The ID of the query logging association.</li>
--   <li><tt>ResolverQueryLogConfigId</tt>: The ID of the query logging
--   configuration that a VPC is associated with.</li>
--   <li><tt>ResourceId</tt>: The ID of the Amazon VPC that is associated
--   with the query logging configuration.</li>
--   <li><tt>Status</tt>: The status of the query logging association. If
--   you specify <tt>Status</tt> for <tt>Name</tt>, specify the applicable
--   status code for <tt>Values</tt>: <tt>CREATING</tt>, <tt>CREATED</tt>,
--   <tt>DELETING</tt>, or <tt>FAILED</tt>. For more information, see
--   <a>Status</a>.</li>
--   </ul>
filter_name :: Lens' Filter (Maybe Text)

-- | The ID of the VPC that this firewall configuration applies to.
firewallConfig_resourceId :: Lens' FirewallConfig (Maybe Text)

-- | The Amazon Web Services account ID of the owner of the VPC that this
--   firewall configuration applies to.
firewallConfig_ownerId :: Lens' FirewallConfig (Maybe Text)

-- | The ID of the firewall configuration.
firewallConfig_id :: Lens' FirewallConfig (Maybe Text)

-- | Determines how DNS Firewall operates during failures, for example when
--   all traffic that is sent to DNS Firewall fails to receive a reply.
--   
--   <ul>
--   <li>By default, fail open is disabled, which means the failure mode is
--   closed. This approach favors security over availability. DNS Firewall
--   returns a failure error when it is unable to properly evaluate a
--   query.</li>
--   <li>If you enable this option, the failure mode is open. This approach
--   favors availability over security. DNS Firewall allows queries to
--   proceed if it is unable to properly evaluate them.</li>
--   </ul>
--   
--   This behavior is only enforced for VPCs that have at least one DNS
--   Firewall rule group association.
firewallConfig_firewallFailOpen :: Lens' FirewallConfig (Maybe FirewallFailOpenStatus)

-- | The date and time that the domain list was created, in Unix time
--   format and Coordinated Universal Time (UTC).
firewallDomainList_creationTime :: Lens' FirewallDomainList (Maybe Text)

-- | The status of the domain list.
firewallDomainList_status :: Lens' FirewallDomainList (Maybe FirewallDomainListStatus)

-- | The Amazon Resource Name (ARN) of the firewall domain list.
firewallDomainList_arn :: Lens' FirewallDomainList (Maybe Text)

-- | A unique string defined by you to identify the request. This allows
--   you to retry failed requests without the risk of running the operation
--   twice. This can be any unique string, for example, a timestamp.
firewallDomainList_creatorRequestId :: Lens' FirewallDomainList (Maybe Text)

-- | The owner of the list, used only for lists that are not managed by
--   you. For example, the managed domain list
--   <tt>AWSManagedDomainsMalwareDomainList</tt> has the managed owner name
--   <tt>Route 53 Resolver DNS Firewall</tt>.
firewallDomainList_managedOwnerName :: Lens' FirewallDomainList (Maybe Text)

-- | The number of domain names that are specified in the domain list.
firewallDomainList_domainCount :: Lens' FirewallDomainList (Maybe Int)

-- | The date and time that the domain list was last modified, in Unix time
--   format and Coordinated Universal Time (UTC).
firewallDomainList_modificationTime :: Lens' FirewallDomainList (Maybe Text)

-- | Additional information about the status of the list, if available.
firewallDomainList_statusMessage :: Lens' FirewallDomainList (Maybe Text)

-- | The name of the domain list.
firewallDomainList_name :: Lens' FirewallDomainList (Maybe Text)

-- | The ID of the domain list.
firewallDomainList_id :: Lens' FirewallDomainList (Maybe Text)

-- | The Amazon Resource Name (ARN) of the firewall domain list metadata.
firewallDomainListMetadata_arn :: Lens' FirewallDomainListMetadata (Maybe Text)

-- | A unique string defined by you to identify the request. This allows
--   you to retry failed requests without the risk of running the operation
--   twice. This can be any unique string, for example, a timestamp.
firewallDomainListMetadata_creatorRequestId :: Lens' FirewallDomainListMetadata (Maybe Text)

-- | The owner of the list, used only for lists that are not managed by
--   you. For example, the managed domain list
--   <tt>AWSManagedDomainsMalwareDomainList</tt> has the managed owner name
--   <tt>Route 53 Resolver DNS Firewall</tt>.
firewallDomainListMetadata_managedOwnerName :: Lens' FirewallDomainListMetadata (Maybe Text)

-- | The name of the domain list.
firewallDomainListMetadata_name :: Lens' FirewallDomainListMetadata (Maybe Text)

-- | The ID of the domain list.
firewallDomainListMetadata_id :: Lens' FirewallDomainListMetadata (Maybe Text)

-- | The date and time that the rule was created, in Unix time format and
--   Coordinated Universal Time (UTC).
firewallRule_creationTime :: Lens' FirewallRule (Maybe Text)

-- | The DNS record's type. This determines the format of the record value
--   that you provided in <tt>BlockOverrideDomain</tt>. Used for the rule
--   action <tt>BLOCK</tt> with a <tt>BlockResponse</tt> setting of
--   <tt>OVERRIDE</tt>.
firewallRule_blockOverrideDnsType :: Lens' FirewallRule (Maybe BlockOverrideDnsType)

-- | The unique identifier of the firewall rule group of the rule.
firewallRule_firewallRuleGroupId :: Lens' FirewallRule (Maybe Text)

-- | The priority of the rule in the rule group. This value must be unique
--   within the rule group. DNS Firewall processes the rules in a rule
--   group by order of priority, starting from the lowest setting.
firewallRule_priority :: Lens' FirewallRule (Maybe Int)

-- | The way that you want DNS Firewall to block the request. Used for the
--   rule action setting <tt>BLOCK</tt>.
--   
--   <ul>
--   <li><tt>NODATA</tt> - Respond indicating that the query was
--   successful, but no response is available for it.</li>
--   <li><tt>NXDOMAIN</tt> - Respond indicating that the domain name that's
--   in the query doesn't exist.</li>
--   <li><tt>OVERRIDE</tt> - Provide a custom override in the response.
--   This option requires custom handling details in the rule's
--   <tt>BlockOverride*</tt> settings.</li>
--   </ul>
firewallRule_blockResponse :: Lens' FirewallRule (Maybe BlockResponse)

-- | A unique string defined by you to identify the request. This allows
--   you to retry failed requests without the risk of executing the
--   operation twice. This can be any unique string, for example, a
--   timestamp.
firewallRule_creatorRequestId :: Lens' FirewallRule (Maybe Text)

-- | The date and time that the rule was last modified, in Unix time format
--   and Coordinated Universal Time (UTC).
firewallRule_modificationTime :: Lens' FirewallRule (Maybe Text)

-- | The action that DNS Firewall should take on a DNS query when it
--   matches one of the domains in the rule's domain list:
--   
--   <ul>
--   <li><tt>ALLOW</tt> - Permit the request to go through.</li>
--   <li><tt>ALERT</tt> - Permit the request to go through but send an
--   alert to the logs.</li>
--   <li><tt>BLOCK</tt> - Disallow the request. If this is specified,
--   additional handling details are provided in the rule's
--   <tt>BlockResponse</tt> setting.</li>
--   </ul>
firewallRule_action :: Lens' FirewallRule (Maybe Action)

-- | The recommended amount of time, in seconds, for the DNS resolver or
--   web browser to cache the provided override record. Used for the rule
--   action <tt>BLOCK</tt> with a <tt>BlockResponse</tt> setting of
--   <tt>OVERRIDE</tt>.
firewallRule_blockOverrideTtl :: Lens' FirewallRule (Maybe Int)

-- | The name of the rule.
firewallRule_name :: Lens' FirewallRule (Maybe Text)

-- | The custom DNS record to send back in response to the query. Used for
--   the rule action <tt>BLOCK</tt> with a <tt>BlockResponse</tt> setting
--   of <tt>OVERRIDE</tt>.
firewallRule_blockOverrideDomain :: Lens' FirewallRule (Maybe Text)

-- | The ID of the domain list that's used in the rule.
firewallRule_firewallDomainListId :: Lens' FirewallRule (Maybe Text)

-- | The date and time that the rule group was created, in Unix time format
--   and Coordinated Universal Time (UTC).
firewallRuleGroup_creationTime :: Lens' FirewallRuleGroup (Maybe Text)

-- | The status of the domain list.
firewallRuleGroup_status :: Lens' FirewallRuleGroup (Maybe FirewallRuleGroupStatus)

-- | The ARN (Amazon Resource Name) of the rule group.
firewallRuleGroup_arn :: Lens' FirewallRuleGroup (Maybe Text)

-- | A unique string defined by you to identify the request. This allows
--   you to retry failed requests without the risk of running the operation
--   twice. This can be any unique string, for example, a timestamp.
firewallRuleGroup_creatorRequestId :: Lens' FirewallRuleGroup (Maybe Text)

-- | The date and time that the rule group was last modified, in Unix time
--   format and Coordinated Universal Time (UTC).
firewallRuleGroup_modificationTime :: Lens' FirewallRuleGroup (Maybe Text)

-- | Whether the rule group is shared with other Amazon Web Services
--   accounts, or was shared with the current account by another Amazon Web
--   Services account. Sharing is configured through Resource Access
--   Manager (RAM).
firewallRuleGroup_shareStatus :: Lens' FirewallRuleGroup (Maybe ShareStatus)

-- | The Amazon Web Services account ID for the account that created the
--   rule group. When a rule group is shared with your account, this is the
--   account that has shared the rule group with you.
firewallRuleGroup_ownerId :: Lens' FirewallRuleGroup (Maybe Text)

-- | Additional information about the status of the rule group, if
--   available.
firewallRuleGroup_statusMessage :: Lens' FirewallRuleGroup (Maybe Text)

-- | The name of the rule group.
firewallRuleGroup_name :: Lens' FirewallRuleGroup (Maybe Text)

-- | The ID of the rule group.
firewallRuleGroup_id :: Lens' FirewallRuleGroup (Maybe Text)

-- | The number of rules in the rule group.
firewallRuleGroup_ruleCount :: Lens' FirewallRuleGroup (Maybe Int)

-- | The date and time that the association was created, in Unix time
--   format and Coordinated Universal Time (UTC).
firewallRuleGroupAssociation_creationTime :: Lens' FirewallRuleGroupAssociation (Maybe Text)

-- | The current status of the association.
firewallRuleGroupAssociation_status :: Lens' FirewallRuleGroupAssociation (Maybe FirewallRuleGroupAssociationStatus)

-- | If enabled, this setting disallows modification or removal of the
--   association, to help prevent against accidentally altering DNS
--   firewall protections.
firewallRuleGroupAssociation_mutationProtection :: Lens' FirewallRuleGroupAssociation (Maybe MutationProtectionStatus)

-- | The unique identifier of the firewall rule group.
firewallRuleGroupAssociation_firewallRuleGroupId :: Lens' FirewallRuleGroupAssociation (Maybe Text)

-- | The setting that determines the processing order of the rule group
--   among the rule groups that are associated with a single VPC. DNS
--   Firewall filters VPC traffic starting from rule group with the lowest
--   numeric priority setting.
firewallRuleGroupAssociation_priority :: Lens' FirewallRuleGroupAssociation (Maybe Int)

-- | The Amazon Resource Name (ARN) of the firewall rule group association.
firewallRuleGroupAssociation_arn :: Lens' FirewallRuleGroupAssociation (Maybe Text)

-- | The unique identifier of the VPC that is associated with the rule
--   group.
firewallRuleGroupAssociation_vpcId :: Lens' FirewallRuleGroupAssociation (Maybe Text)

-- | A unique string defined by you to identify the request. This allows
--   you to retry failed requests without the risk of running the operation
--   twice. This can be any unique string, for example, a timestamp.
firewallRuleGroupAssociation_creatorRequestId :: Lens' FirewallRuleGroupAssociation (Maybe Text)

-- | The owner of the association, used only for associations that are not
--   managed by you. If you use Firewall Manager to manage your DNS
--   Firewalls, then this reports Firewall Manager as the managed owner.
firewallRuleGroupAssociation_managedOwnerName :: Lens' FirewallRuleGroupAssociation (Maybe Text)

-- | The date and time that the association was last modified, in Unix time
--   format and Coordinated Universal Time (UTC).
firewallRuleGroupAssociation_modificationTime :: Lens' FirewallRuleGroupAssociation (Maybe Text)

-- | Additional information about the status of the response, if available.
firewallRuleGroupAssociation_statusMessage :: Lens' FirewallRuleGroupAssociation (Maybe Text)

-- | The name of the association.
firewallRuleGroupAssociation_name :: Lens' FirewallRuleGroupAssociation (Maybe Text)

-- | The identifier for the association.
firewallRuleGroupAssociation_id :: Lens' FirewallRuleGroupAssociation (Maybe Text)

-- | The ARN (Amazon Resource Name) of the rule group.
firewallRuleGroupMetadata_arn :: Lens' FirewallRuleGroupMetadata (Maybe Text)

-- | A unique string defined by you to identify the request. This allows
--   you to retry failed requests without the risk of running the operation
--   twice. This can be any unique string, for example, a timestamp.
firewallRuleGroupMetadata_creatorRequestId :: Lens' FirewallRuleGroupMetadata (Maybe Text)

-- | Whether the rule group is shared with other Amazon Web Services
--   accounts, or was shared with the current account by another Amazon Web
--   Services account. Sharing is configured through Resource Access
--   Manager (RAM).
firewallRuleGroupMetadata_shareStatus :: Lens' FirewallRuleGroupMetadata (Maybe ShareStatus)

-- | The Amazon Web Services account ID for the account that created the
--   rule group. When a rule group is shared with your account, this is the
--   account that has shared the rule group with you.
firewallRuleGroupMetadata_ownerId :: Lens' FirewallRuleGroupMetadata (Maybe Text)

-- | The name of the rule group.
firewallRuleGroupMetadata_name :: Lens' FirewallRuleGroupMetadata (Maybe Text)

-- | The ID of the rule group.
firewallRuleGroupMetadata_id :: Lens' FirewallRuleGroupMetadata (Maybe Text)

-- | The IP address that you want to use for DNS queries.
ipAddressRequest_ip :: Lens' IpAddressRequest (Maybe Text)

-- | The ID of the subnet that contains the IP address.
ipAddressRequest_subnetId :: Lens' IpAddressRequest Text

-- | The date and time that the IP address was created, in Unix time format
--   and Coordinated Universal Time (UTC).
ipAddressResponse_creationTime :: Lens' IpAddressResponse (Maybe Text)

-- | A status code that gives the current status of the request.
ipAddressResponse_status :: Lens' IpAddressResponse (Maybe IpAddressStatus)

-- | The date and time that the IP address was last modified, in Unix time
--   format and Coordinated Universal Time (UTC).
ipAddressResponse_modificationTime :: Lens' IpAddressResponse (Maybe Text)

-- | The ID of one subnet.
ipAddressResponse_subnetId :: Lens' IpAddressResponse (Maybe Text)

-- | One IP address that the Resolver endpoint uses for DNS queries.
ipAddressResponse_ip :: Lens' IpAddressResponse (Maybe Text)

-- | The ID of one IP address.
ipAddressResponse_ipId :: Lens' IpAddressResponse (Maybe Text)

-- | A message that provides additional information about the status of the
--   request.
ipAddressResponse_statusMessage :: Lens' IpAddressResponse (Maybe Text)

-- | The ID of the subnet that includes the IP address that you want to
--   update. To get this ID, use <a>GetResolverEndpoint</a>.
ipAddressUpdate_subnetId :: Lens' IpAddressUpdate (Maybe Text)

-- | The new IP address.
ipAddressUpdate_ip :: Lens' IpAddressUpdate (Maybe Text)

-- | <i>Only when removing an IP address from a Resolver endpoint</i>: The
--   ID of the IP address that you want to remove. To get this ID, use
--   <a>GetResolverEndpoint</a>.
ipAddressUpdate_ipId :: Lens' IpAddressUpdate (Maybe Text)

-- | The ID of the virtual private cloud (VPC) that you're configuring the
--   DNSSEC validation status for.
resolverDnssecConfig_resourceId :: Lens' ResolverDnssecConfig (Maybe Text)

-- | The owner account ID of the virtual private cloud (VPC) for a
--   configuration for DNSSEC validation.
resolverDnssecConfig_ownerId :: Lens' ResolverDnssecConfig (Maybe Text)

-- | The validation status for a DNSSEC configuration. The status can be
--   one of the following:
--   
--   <ul>
--   <li><b>ENABLING:</b> DNSSEC validation is being enabled but is not
--   complete.</li>
--   <li><b>ENABLED:</b> DNSSEC validation is enabled.</li>
--   <li><b>DISABLING:</b> DNSSEC validation is being disabled but is not
--   complete.</li>
--   <li><b>DISABLED</b> DNSSEC validation is disabled.</li>
--   </ul>
resolverDnssecConfig_validationStatus :: Lens' ResolverDnssecConfig (Maybe ResolverDNSSECValidationStatus)

-- | The ID for a configuration for DNSSEC validation.
resolverDnssecConfig_id :: Lens' ResolverDnssecConfig (Maybe Text)

-- | The date and time that the endpoint was created, in Unix time format
--   and Coordinated Universal Time (UTC).
resolverEndpoint_creationTime :: Lens' ResolverEndpoint (Maybe Text)

-- | A code that specifies the current status of the Resolver endpoint.
--   Valid values include the following:
--   
--   <ul>
--   <li><tt>CREATING</tt>: Resolver is creating and configuring one or
--   more Amazon VPC network interfaces for this endpoint.</li>
--   <li><tt>OPERATIONAL</tt>: The Amazon VPC network interfaces for this
--   endpoint are correctly configured and able to pass inbound or outbound
--   DNS queries between your network and Resolver.</li>
--   <li><tt>UPDATING</tt>: Resolver is associating or disassociating one
--   or more network interfaces with this endpoint.</li>
--   <li><tt>AUTO_RECOVERING</tt>: Resolver is trying to recover one or
--   more of the network interfaces that are associated with this endpoint.
--   During the recovery process, the endpoint functions with limited
--   capacity because of the limit on the number of DNS queries per IP
--   address (per network interface). For the current limit, see <a>Limits
--   on Route 53 Resolver</a>.</li>
--   <li><tt>ACTION_NEEDED</tt>: This endpoint is unhealthy, and Resolver
--   can't automatically recover it. To resolve the problem, we recommend
--   that you check each IP address that you associated with the endpoint.
--   For each IP address that isn't available, add another IP address and
--   then delete the IP address that isn't available. (An endpoint must
--   always include at least two IP addresses.) A status of
--   <tt>ACTION_NEEDED</tt> can have a variety of causes. Here are two
--   common causes:<ul><li>One or more of the network interfaces that are
--   associated with the endpoint were deleted using Amazon
--   VPC.</li><li>The network interface couldn't be created for some reason
--   that's outside the control of Resolver.</li></ul></li>
--   <li><tt>DELETING</tt>: Resolver is deleting this endpoint and the
--   associated network interfaces.</li>
--   </ul>
resolverEndpoint_status :: Lens' ResolverEndpoint (Maybe ResolverEndpointStatus)

-- | The ID of one or more security groups that control access to this VPC.
--   The security group must include one or more inbound rules (for inbound
--   endpoints) or outbound rules (for outbound endpoints). Inbound and
--   outbound rules must allow TCP and UDP access. For inbound access, open
--   port 53. For outbound access, open the port that you're using for DNS
--   queries on your network.
resolverEndpoint_securityGroupIds :: Lens' ResolverEndpoint (Maybe [Text])

-- | Indicates whether the Resolver endpoint allows inbound or outbound DNS
--   queries:
--   
--   <ul>
--   <li><tt>INBOUND</tt>: allows DNS queries to your VPC from your
--   network</li>
--   <li><tt>OUTBOUND</tt>: allows DNS queries from your VPC to your
--   network</li>
--   </ul>
resolverEndpoint_direction :: Lens' ResolverEndpoint (Maybe ResolverEndpointDirection)

-- | The ARN (Amazon Resource Name) for the Resolver endpoint.
resolverEndpoint_arn :: Lens' ResolverEndpoint (Maybe Text)

-- | A unique string that identifies the request that created the Resolver
--   endpoint. The <tt>CreatorRequestId</tt> allows failed requests to be
--   retried without the risk of running the operation twice.
resolverEndpoint_creatorRequestId :: Lens' ResolverEndpoint (Maybe Text)

-- | The date and time that the endpoint was last modified, in Unix time
--   format and Coordinated Universal Time (UTC).
resolverEndpoint_modificationTime :: Lens' ResolverEndpoint (Maybe Text)

-- | The number of IP addresses that the Resolver endpoint can use for DNS
--   queries.
resolverEndpoint_ipAddressCount :: Lens' ResolverEndpoint (Maybe Int)

-- | A detailed description of the status of the Resolver endpoint.
resolverEndpoint_statusMessage :: Lens' ResolverEndpoint (Maybe Text)

-- | The name that you assigned to the Resolver endpoint when you submitted
--   a <a>CreateResolverEndpoint</a> request.
resolverEndpoint_name :: Lens' ResolverEndpoint (Maybe Text)

-- | The ID of the Resolver endpoint.
resolverEndpoint_id :: Lens' ResolverEndpoint (Maybe Text)

-- | The ID of the VPC that you want to create the Resolver endpoint in.
resolverEndpoint_hostVPCId :: Lens' ResolverEndpoint (Maybe Text)

-- | The date and time that the query logging configuration was created, in
--   Unix time format and Coordinated Universal Time (UTC).
resolverQueryLogConfig_creationTime :: Lens' ResolverQueryLogConfig (Maybe Text)

-- | The status of the specified query logging configuration. Valid values
--   include the following:
--   
--   <ul>
--   <li><tt>CREATING</tt>: Resolver is creating the query logging
--   configuration.</li>
--   <li><tt>CREATED</tt>: The query logging configuration was successfully
--   created. Resolver is logging queries that originate in the specified
--   VPC.</li>
--   <li><tt>DELETING</tt>: Resolver is deleting this query logging
--   configuration.</li>
--   <li><tt>FAILED</tt>: Resolver can't deliver logs to the location that
--   is specified in the query logging configuration. Here are two common
--   causes:<ul><li>The specified destination (for example, an Amazon S3
--   bucket) was deleted.</li><li>Permissions don't allow sending logs to
--   the destination.</li></ul></li>
--   </ul>
resolverQueryLogConfig_status :: Lens' ResolverQueryLogConfig (Maybe ResolverQueryLogConfigStatus)

-- | The number of VPCs that are associated with the query logging
--   configuration.
resolverQueryLogConfig_associationCount :: Lens' ResolverQueryLogConfig (Maybe Int)

-- | The ARN for the query logging configuration.
resolverQueryLogConfig_arn :: Lens' ResolverQueryLogConfig (Maybe Text)

-- | A unique string that identifies the request that created the query
--   logging configuration. The <tt>CreatorRequestId</tt> allows failed
--   requests to be retried without the risk of running the operation
--   twice.
resolverQueryLogConfig_creatorRequestId :: Lens' ResolverQueryLogConfig (Maybe Text)

-- | The ARN of the resource that you want Resolver to send query logs: an
--   Amazon S3 bucket, a CloudWatch Logs log group, or a Kinesis Data
--   Firehose delivery stream.
resolverQueryLogConfig_destinationArn :: Lens' ResolverQueryLogConfig (Maybe Text)

-- | An indication of whether the query logging configuration is shared
--   with other Amazon Web Services accounts, or was shared with the
--   current account by another Amazon Web Services account. Sharing is
--   configured through Resource Access Manager (RAM).
resolverQueryLogConfig_shareStatus :: Lens' ResolverQueryLogConfig (Maybe ShareStatus)

-- | The Amazon Web Services account ID for the account that created the
--   query logging configuration.
resolverQueryLogConfig_ownerId :: Lens' ResolverQueryLogConfig (Maybe Text)

-- | The name of the query logging configuration.
resolverQueryLogConfig_name :: Lens' ResolverQueryLogConfig (Maybe Text)

-- | The ID for the query logging configuration.
resolverQueryLogConfig_id :: Lens' ResolverQueryLogConfig (Maybe Text)

-- | The date and time that the VPC was associated with the query logging
--   configuration, in Unix time format and Coordinated Universal Time
--   (UTC).
resolverQueryLogConfigAssociation_creationTime :: Lens' ResolverQueryLogConfigAssociation (Maybe Text)

-- | The status of the specified query logging association. Valid values
--   include the following:
--   
--   <ul>
--   <li><tt>CREATING</tt>: Resolver is creating an association between an
--   Amazon VPC and a query logging configuration.</li>
--   <li><tt>CREATED</tt>: The association between an Amazon VPC and a
--   query logging configuration was successfully created. Resolver is
--   logging queries that originate in the specified VPC.</li>
--   <li><tt>DELETING</tt>: Resolver is deleting this query logging
--   association.</li>
--   <li><tt>FAILED</tt>: Resolver either couldn't create or couldn't
--   delete the query logging association.</li>
--   </ul>
resolverQueryLogConfigAssociation_status :: Lens' ResolverQueryLogConfigAssociation (Maybe ResolverQueryLogConfigAssociationStatus)

-- | The ID of the query logging configuration that a VPC is associated
--   with.
resolverQueryLogConfigAssociation_resolverQueryLogConfigId :: Lens' ResolverQueryLogConfigAssociation (Maybe Text)

-- | The ID of the Amazon VPC that is associated with the query logging
--   configuration.
resolverQueryLogConfigAssociation_resourceId :: Lens' ResolverQueryLogConfigAssociation (Maybe Text)

-- | If the value of <tt>Status</tt> is <tt>FAILED</tt>, the value of
--   <tt>Error</tt> indicates the cause:
--   
--   <ul>
--   <li><tt>DESTINATION_NOT_FOUND</tt>: The specified destination (for
--   example, an Amazon S3 bucket) was deleted.</li>
--   <li><tt>ACCESS_DENIED</tt>: Permissions don't allow sending logs to
--   the destination.</li>
--   </ul>
--   
--   If the value of <tt>Status</tt> is a value other than <tt>FAILED</tt>,
--   <tt>Error</tt> is null.
resolverQueryLogConfigAssociation_error :: Lens' ResolverQueryLogConfigAssociation (Maybe ResolverQueryLogConfigAssociationError)

-- | The ID of the query logging association.
resolverQueryLogConfigAssociation_id :: Lens' ResolverQueryLogConfigAssociation (Maybe Text)

-- | Contains additional information about the error. If the value or
--   <tt>Error</tt> is null, the value of <tt>ErrorMessage</tt> also is
--   null.
resolverQueryLogConfigAssociation_errorMessage :: Lens' ResolverQueryLogConfigAssociation (Maybe Text)

-- | The date and time that the Resolver rule was created, in Unix time
--   format and Coordinated Universal Time (UTC).
resolverRule_creationTime :: Lens' ResolverRule (Maybe Text)

-- | A code that specifies the current status of the Resolver rule.
resolverRule_status :: Lens' ResolverRule (Maybe ResolverRuleStatus)

-- | The ARN (Amazon Resource Name) for the Resolver rule specified by
--   <tt>Id</tt>.
resolverRule_arn :: Lens' ResolverRule (Maybe Text)

-- | The ID of the endpoint that the rule is associated with.
resolverRule_resolverEndpointId :: Lens' ResolverRule (Maybe Text)

-- | A unique string that you specified when you created the Resolver rule.
--   <tt>CreatorRequestId</tt> identifies the request and allows failed
--   requests to be retried without the risk of running the operation
--   twice.
resolverRule_creatorRequestId :: Lens' ResolverRule (Maybe Text)

-- | An array that contains the IP addresses and ports that an outbound
--   endpoint forwards DNS queries to. Typically, these are the IP
--   addresses of DNS resolvers on your network. Specify IPv4 addresses.
--   IPv6 is not supported.
resolverRule_targetIps :: Lens' ResolverRule (Maybe (NonEmpty TargetAddress))

-- | The date and time that the Resolver rule was last updated, in Unix
--   time format and Coordinated Universal Time (UTC).
resolverRule_modificationTime :: Lens' ResolverRule (Maybe Text)

-- | Whether the rule is shared and, if so, whether the current account is
--   sharing the rule with another account, or another account is sharing
--   the rule with the current account.
resolverRule_shareStatus :: Lens' ResolverRule (Maybe ShareStatus)

-- | When a rule is shared with another Amazon Web Services account, the
--   account ID of the account that the rule is shared with.
resolverRule_ownerId :: Lens' ResolverRule (Maybe Text)

-- | DNS queries for this domain name are forwarded to the IP addresses
--   that are specified in <tt>TargetIps</tt>. If a query matches multiple
--   Resolver rules (example.com and www.example.com), the query is routed
--   using the Resolver rule that contains the most specific domain name
--   (www.example.com).
resolverRule_domainName :: Lens' ResolverRule (Maybe Text)

-- | A detailed description of the status of a Resolver rule.
resolverRule_statusMessage :: Lens' ResolverRule (Maybe Text)

-- | The name for the Resolver rule, which you specified when you created
--   the Resolver rule.
resolverRule_name :: Lens' ResolverRule (Maybe Text)

-- | The ID that Resolver assigned to the Resolver rule when you created
--   it.
resolverRule_id :: Lens' ResolverRule (Maybe Text)

-- | When you want to forward DNS queries for specified domain name to
--   resolvers on your network, specify <tt>FORWARD</tt>.
--   
--   When you have a forwarding rule to forward DNS queries for a domain to
--   your network and you want Resolver to process queries for a subdomain
--   of that domain, specify <tt>SYSTEM</tt>.
--   
--   For example, to forward DNS queries for example.com to resolvers on
--   your network, you create a rule and specify <tt>FORWARD</tt> for
--   <tt>RuleType</tt>. To then have Resolver process queries for
--   apex.example.com, you create a rule and specify <tt>SYSTEM</tt> for
--   <tt>RuleType</tt>.
--   
--   Currently, only Resolver can create rules that have a value of
--   <tt>RECURSIVE</tt> for <tt>RuleType</tt>.
resolverRule_ruleType :: Lens' ResolverRule (Maybe RuleTypeOption)

-- | A code that specifies the current status of the association between a
--   Resolver rule and a VPC.
resolverRuleAssociation_status :: Lens' ResolverRuleAssociation (Maybe ResolverRuleAssociationStatus)

-- | The ID of the Resolver rule that you associated with the VPC that is
--   specified by <tt>VPCId</tt>.
resolverRuleAssociation_resolverRuleId :: Lens' ResolverRuleAssociation (Maybe Text)

-- | The ID of the VPC that you associated the Resolver rule with.
resolverRuleAssociation_vPCId :: Lens' ResolverRuleAssociation (Maybe Text)

-- | A detailed description of the status of the association between a
--   Resolver rule and a VPC.
resolverRuleAssociation_statusMessage :: Lens' ResolverRuleAssociation (Maybe Text)

-- | The name of an association between a Resolver rule and a VPC.
resolverRuleAssociation_name :: Lens' ResolverRuleAssociation (Maybe Text)

-- | The ID of the association between a Resolver rule and a VPC. Resolver
--   assigns this value when you submit an <a>AssociateResolverRule</a>
--   request.
resolverRuleAssociation_id :: Lens' ResolverRuleAssociation (Maybe Text)

-- | The ID of the new outbound Resolver endpoint that you want to use to
--   route DNS queries to the IP addresses that you specify in
--   <tt>TargetIps</tt>.
resolverRuleConfig_resolverEndpointId :: Lens' ResolverRuleConfig (Maybe Text)

-- | For DNS queries that originate in your VPC, the new IP addresses that
--   you want to route outbound DNS queries to.
resolverRuleConfig_targetIps :: Lens' ResolverRuleConfig (Maybe (NonEmpty TargetAddress))

-- | The new name for the Resolver rule. The name that you specify appears
--   in the Resolver dashboard in the Route 53 console.
resolverRuleConfig_name :: Lens' ResolverRuleConfig (Maybe Text)

-- | The name for the tag. For example, if you want to associate Resolver
--   resources with the account IDs of your customers for billing purposes,
--   the value of <tt>Key</tt> might be <tt>account-id</tt>.
tag_key :: Lens' Tag Text

-- | The value for the tag. For example, if <tt>Key</tt> is
--   <tt>account-id</tt>, then <tt>Value</tt> might be the ID of the
--   customer account that you're creating the resource for.
tag_value :: Lens' Tag Text

-- | The port at <tt>Ip</tt> that you want to forward DNS queries to.
targetAddress_port :: Lens' TargetAddress (Maybe Natural)

-- | One IP address that you want to forward DNS queries to. You can
--   specify only IPv4 addresses.
targetAddress_ip :: Lens' TargetAddress Text


module Network.AWS.Route53Resolver.Waiters


-- | Derived from API version <tt>2018-04-01</tt> of the AWS service
--   descriptions, licensed under Apache 2.0.
--   
--   When you create a VPC using Amazon VPC, you automatically get DNS
--   resolution within the VPC from Route 53 Resolver. By default, Resolver
--   answers DNS queries for VPC domain names such as domain names for EC2
--   instances or Elastic Load Balancing load balancers. Resolver performs
--   recursive lookups against public name servers for all other domain
--   names.
--   
--   You can also configure DNS resolution between your VPC and your
--   network over a Direct Connect or VPN connection:
--   
--   __Forward DNS queries from resolvers on your network to Route 53
--   Resolver__
--   
--   DNS resolvers on your network can forward DNS queries to Resolver in a
--   specified VPC. This allows your DNS resolvers to easily resolve domain
--   names for Amazon Web Services resources such as EC2 instances or
--   records in a Route 53 private hosted zone. For more information, see
--   <a>How DNS Resolvers on Your Network Forward DNS Queries to Route 53
--   Resolver</a> in the <i>Amazon Route 53 Developer Guide</i>.
--   
--   __Conditionally forward queries from a VPC to resolvers on your
--   network__
--   
--   You can configure Resolver to forward queries that it receives from
--   EC2 instances in your VPCs to DNS resolvers on your network. To
--   forward selected queries, you create Resolver rules that specify the
--   domain names for the DNS queries that you want to forward (such as
--   example.com), and the IP addresses of the DNS resolvers on your
--   network that you want to forward the queries to. If a query matches
--   multiple rules (example.com, acme.example.com), Resolver chooses the
--   rule with the most specific match (acme.example.com) and forwards the
--   query to the IP addresses that you specified in that rule. For more
--   information, see <a>How Route 53 Resolver Forwards DNS Queries from
--   Your VPCs to Your Network</a> in the <i>Amazon Route 53 Developer
--   Guide</i>.
--   
--   Like Amazon VPC, Resolver is Regional. In each Region where you have
--   VPCs, you can choose whether to forward queries from your VPCs to your
--   network (outbound queries), from your network to your VPCs (inbound
--   queries), or both.
module Network.AWS.Route53Resolver

-- | API version <tt>2018-04-01</tt> of the Amazon Route 53 Resolver SDK
--   configuration.
defaultService :: Service

-- | The specified tag is invalid.
_InvalidTagException :: AsError a => Getting (First ServiceError) a ServiceError

_ValidationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The current account doesn't have the IAM permissions required to
--   perform the specified Resolver operation.
_AccessDeniedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified resource isn't available.
_ResourceUnavailableException :: AsError a => Getting (First ServiceError) a ServiceError

-- | One or more parameters in this request are not valid.
_InvalidParameterException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request is invalid.
_InvalidRequestException :: AsError a => Getting (First ServiceError) a ServiceError

_ConflictException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request was throttled. Try again in a few minutes.
_ThrottlingException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The value that you specified for <tt>NextToken</tt> in a <tt>List</tt>
--   request isn't valid.
_InvalidNextTokenException :: AsError a => Getting (First ServiceError) a ServiceError

-- | We encountered an unknown error. Try again in a few minutes.
_InternalServiceErrorException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The resource that you tried to create already exists.
_ResourceExistsException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified resource doesn't exist.
_UnknownResourceException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified Resolver rule policy is invalid.
_InvalidPolicyDocument :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified resource doesn't exist.
_ResourceNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request caused one or more limits to be exceeded.
_LimitExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The resource that you tried to update or delete is currently in use.
_ResourceInUseException :: AsError a => Getting (First ServiceError) a ServiceError

-- | <i>See:</i> <a>newUpdateResolverEndpoint</a> smart constructor.
data UpdateResolverEndpoint
UpdateResolverEndpoint' :: Maybe Text -> Text -> UpdateResolverEndpoint

-- | Create a value of <a>UpdateResolverEndpoint</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:UpdateResolverEndpoint'</a>,
--   <a>updateResolverEndpoint_name</a> - The name of the Resolver endpoint
--   that you want to update.
--   
--   <a>$sel:resolverEndpointId:UpdateResolverEndpoint'</a>,
--   <a>updateResolverEndpoint_resolverEndpointId</a> - The ID of the
--   Resolver endpoint that you want to update.
newUpdateResolverEndpoint :: Text -> UpdateResolverEndpoint

-- | <i>See:</i> <a>newUpdateResolverEndpointResponse</a> smart
--   constructor.
data UpdateResolverEndpointResponse
UpdateResolverEndpointResponse' :: Maybe ResolverEndpoint -> Int -> UpdateResolverEndpointResponse

-- | Create a value of <a>UpdateResolverEndpointResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resolverEndpoint:UpdateResolverEndpointResponse'</a>,
--   <a>updateResolverEndpointResponse_resolverEndpoint</a> - The response
--   to an <tt>UpdateResolverEndpoint</tt> request.
--   
--   <a>$sel:httpStatus:UpdateResolverEndpointResponse'</a>,
--   <a>updateResolverEndpointResponse_httpStatus</a> - The response's http
--   status code.
newUpdateResolverEndpointResponse :: Int -> UpdateResolverEndpointResponse

-- | <i>See:</i> <a>newDeleteResolverEndpoint</a> smart constructor.
data DeleteResolverEndpoint
DeleteResolverEndpoint' :: Text -> DeleteResolverEndpoint

-- | Create a value of <a>DeleteResolverEndpoint</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resolverEndpointId:DeleteResolverEndpoint'</a>,
--   <a>deleteResolverEndpoint_resolverEndpointId</a> - The ID of the
--   Resolver endpoint that you want to delete.
newDeleteResolverEndpoint :: Text -> DeleteResolverEndpoint

-- | <i>See:</i> <a>newDeleteResolverEndpointResponse</a> smart
--   constructor.
data DeleteResolverEndpointResponse
DeleteResolverEndpointResponse' :: Maybe ResolverEndpoint -> Int -> DeleteResolverEndpointResponse

-- | Create a value of <a>DeleteResolverEndpointResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resolverEndpoint:DeleteResolverEndpointResponse'</a>,
--   <a>deleteResolverEndpointResponse_resolverEndpoint</a> - Information
--   about the <tt>DeleteResolverEndpoint</tt> request, including the
--   status of the request.
--   
--   <a>$sel:httpStatus:DeleteResolverEndpointResponse'</a>,
--   <a>deleteResolverEndpointResponse_httpStatus</a> - The response's http
--   status code.
newDeleteResolverEndpointResponse :: Int -> DeleteResolverEndpointResponse

-- | <i>See:</i> <a>newCreateResolverRule</a> smart constructor.
data CreateResolverRule
CreateResolverRule' :: Maybe Text -> Maybe (NonEmpty TargetAddress) -> Maybe Text -> Maybe [Tag] -> Text -> RuleTypeOption -> Text -> CreateResolverRule

-- | Create a value of <a>CreateResolverRule</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resolverEndpointId:CreateResolverRule'</a>,
--   <a>createResolverRule_resolverEndpointId</a> - The ID of the outbound
--   Resolver endpoint that you want to use to route DNS queries to the IP
--   addresses that you specify in <tt>TargetIps</tt>.
--   
--   <a>$sel:targetIps:CreateResolverRule'</a>,
--   <a>createResolverRule_targetIps</a> - The IPs that you want Resolver
--   to forward DNS queries to. You can specify only IPv4 addresses.
--   Separate IP addresses with a space.
--   
--   <tt>TargetIps</tt> is available only when the value of <tt>Rule
--   type</tt> is <tt>FORWARD</tt>.
--   
--   <a>$sel:name:CreateResolverRule'</a>, <a>createResolverRule_name</a> -
--   A friendly name that lets you easily find a rule in the Resolver
--   dashboard in the Route 53 console.
--   
--   <a>$sel:tags:CreateResolverRule'</a>, <a>createResolverRule_tags</a> -
--   A list of the tag keys and values that you want to associate with the
--   endpoint.
--   
--   <a>$sel:creatorRequestId:CreateResolverRule'</a>,
--   <a>createResolverRule_creatorRequestId</a> - A unique string that
--   identifies the request and that allows failed requests to be retried
--   without the risk of running the operation twice.
--   <tt>CreatorRequestId</tt> can be any unique string, for example, a
--   date/time stamp.
--   
--   <a>$sel:ruleType:CreateResolverRule'</a>,
--   <a>createResolverRule_ruleType</a> - When you want to forward DNS
--   queries for specified domain name to resolvers on your network,
--   specify <tt>FORWARD</tt>.
--   
--   When you have a forwarding rule to forward DNS queries for a domain to
--   your network and you want Resolver to process queries for a subdomain
--   of that domain, specify <tt>SYSTEM</tt>.
--   
--   For example, to forward DNS queries for example.com to resolvers on
--   your network, you create a rule and specify <tt>FORWARD</tt> for
--   <tt>RuleType</tt>. To then have Resolver process queries for
--   apex.example.com, you create a rule and specify <tt>SYSTEM</tt> for
--   <tt>RuleType</tt>.
--   
--   Currently, only Resolver can create rules that have a value of
--   <tt>RECURSIVE</tt> for <tt>RuleType</tt>.
--   
--   <a>$sel:domainName:CreateResolverRule'</a>,
--   <a>createResolverRule_domainName</a> - DNS queries for this domain
--   name are forwarded to the IP addresses that you specify in
--   <tt>TargetIps</tt>. If a query matches multiple Resolver rules
--   (example.com and www.example.com), outbound DNS queries are routed
--   using the Resolver rule that contains the most specific domain name
--   (www.example.com).
newCreateResolverRule :: Text -> RuleTypeOption -> Text -> CreateResolverRule

-- | <i>See:</i> <a>newCreateResolverRuleResponse</a> smart constructor.
data CreateResolverRuleResponse
CreateResolverRuleResponse' :: Maybe ResolverRule -> Int -> CreateResolverRuleResponse

-- | Create a value of <a>CreateResolverRuleResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resolverRule:CreateResolverRuleResponse'</a>,
--   <a>createResolverRuleResponse_resolverRule</a> - Information about the
--   <tt>CreateResolverRule</tt> request, including the status of the
--   request.
--   
--   <a>$sel:httpStatus:CreateResolverRuleResponse'</a>,
--   <a>createResolverRuleResponse_httpStatus</a> - The response's http
--   status code.
newCreateResolverRuleResponse :: Int -> CreateResolverRuleResponse

-- | <i>See:</i> <a>newGetResolverQueryLogConfig</a> smart constructor.
data GetResolverQueryLogConfig
GetResolverQueryLogConfig' :: Text -> GetResolverQueryLogConfig

-- | Create a value of <a>GetResolverQueryLogConfig</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resolverQueryLogConfigId:GetResolverQueryLogConfig'</a>,
--   <a>getResolverQueryLogConfig_resolverQueryLogConfigId</a> - The ID of
--   the Resolver query logging configuration that you want to get
--   information about.
newGetResolverQueryLogConfig :: Text -> GetResolverQueryLogConfig

-- | <i>See:</i> <a>newGetResolverQueryLogConfigResponse</a> smart
--   constructor.
data GetResolverQueryLogConfigResponse
GetResolverQueryLogConfigResponse' :: Maybe ResolverQueryLogConfig -> Int -> GetResolverQueryLogConfigResponse

-- | Create a value of <a>GetResolverQueryLogConfigResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resolverQueryLogConfig:GetResolverQueryLogConfigResponse'</a>,
--   <a>getResolverQueryLogConfigResponse_resolverQueryLogConfig</a> -
--   Information about the Resolver query logging configuration that you
--   specified in a <tt>GetQueryLogConfig</tt> request.
--   
--   <a>$sel:httpStatus:GetResolverQueryLogConfigResponse'</a>,
--   <a>getResolverQueryLogConfigResponse_httpStatus</a> - The response's
--   http status code.
newGetResolverQueryLogConfigResponse :: Int -> GetResolverQueryLogConfigResponse

-- | <i>See:</i> <a>newCreateFirewallRule</a> smart constructor.
data CreateFirewallRule
CreateFirewallRule' :: Maybe BlockOverrideDnsType -> Maybe BlockResponse -> Maybe Natural -> Maybe Text -> Text -> Text -> Text -> Int -> Action -> Text -> CreateFirewallRule

-- | Create a value of <a>CreateFirewallRule</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:blockOverrideDnsType:CreateFirewallRule'</a>,
--   <a>createFirewallRule_blockOverrideDnsType</a> - The DNS record's
--   type. This determines the format of the record value that you provided
--   in <tt>BlockOverrideDomain</tt>. Used for the rule action
--   <tt>BLOCK</tt> with a <tt>BlockResponse</tt> setting of
--   <tt>OVERRIDE</tt>.
--   
--   This setting is required if the <tt>BlockResponse</tt> setting is
--   <tt>OVERRIDE</tt>.
--   
--   <a>$sel:blockResponse:CreateFirewallRule'</a>,
--   <a>createFirewallRule_blockResponse</a> - The way that you want DNS
--   Firewall to block the request, used with the rule action setting
--   <tt>BLOCK</tt>.
--   
--   <ul>
--   <li><tt>NODATA</tt> - Respond indicating that the query was
--   successful, but no response is available for it.</li>
--   <li><tt>NXDOMAIN</tt> - Respond indicating that the domain name that's
--   in the query doesn't exist.</li>
--   <li><tt>OVERRIDE</tt> - Provide a custom override in the response.
--   This option requires custom handling details in the rule's
--   <tt>BlockOverride*</tt> settings.</li>
--   </ul>
--   
--   This setting is required if the rule action setting is <tt>BLOCK</tt>.
--   
--   <a>$sel:blockOverrideTtl:CreateFirewallRule'</a>,
--   <a>createFirewallRule_blockOverrideTtl</a> - The recommended amount of
--   time, in seconds, for the DNS resolver or web browser to cache the
--   provided override record. Used for the rule action <tt>BLOCK</tt> with
--   a <tt>BlockResponse</tt> setting of <tt>OVERRIDE</tt>.
--   
--   This setting is required if the <tt>BlockResponse</tt> setting is
--   <tt>OVERRIDE</tt>.
--   
--   <a>$sel:blockOverrideDomain:CreateFirewallRule'</a>,
--   <a>createFirewallRule_blockOverrideDomain</a> - The custom DNS record
--   to send back in response to the query. Used for the rule action
--   <tt>BLOCK</tt> with a <tt>BlockResponse</tt> setting of
--   <tt>OVERRIDE</tt>.
--   
--   This setting is required if the <tt>BlockResponse</tt> setting is
--   <tt>OVERRIDE</tt>.
--   
--   <a>$sel:creatorRequestId:CreateFirewallRule'</a>,
--   <a>createFirewallRule_creatorRequestId</a> - A unique string that
--   identifies the request and that allows you to retry failed requests
--   without the risk of running the operation twice.
--   <tt>CreatorRequestId</tt> can be any unique string, for example, a
--   date/time stamp.
--   
--   <a>$sel:firewallRuleGroupId:CreateFirewallRule'</a>,
--   <a>createFirewallRule_firewallRuleGroupId</a> - The unique identifier
--   of the firewall rule group where you want to create the rule.
--   
--   <a>$sel:firewallDomainListId:CreateFirewallRule'</a>,
--   <a>createFirewallRule_firewallDomainListId</a> - The ID of the domain
--   list that you want to use in the rule.
--   
--   <a>$sel:priority:CreateFirewallRule'</a>,
--   <a>createFirewallRule_priority</a> - The setting that determines the
--   processing order of the rule in the rule group. DNS Firewall processes
--   the rules in a rule group by order of priority, starting from the
--   lowest setting.
--   
--   You must specify a unique priority for each rule in a rule group. To
--   make it easier to insert rules later, leave space between the numbers,
--   for example, use 100, 200, and so on. You can change the priority
--   setting for the rules in a rule group at any time.
--   
--   <a>$sel:action:CreateFirewallRule'</a>,
--   <a>createFirewallRule_action</a> - The action that DNS Firewall should
--   take on a DNS query when it matches one of the domains in the rule's
--   domain list:
--   
--   <ul>
--   <li><tt>ALLOW</tt> - Permit the request to go through.</li>
--   <li><tt>ALERT</tt> - Permit the request and send metrics and logs to
--   Cloud Watch.</li>
--   <li><tt>BLOCK</tt> - Disallow the request. This option requires
--   additional details in the rule's <tt>BlockResponse</tt>.</li>
--   </ul>
--   
--   <a>$sel:name:CreateFirewallRule'</a>, <a>createFirewallRule_name</a> -
--   A name that lets you identify the rule in the rule group.
newCreateFirewallRule :: Text -> Text -> Text -> Int -> Action -> Text -> CreateFirewallRule

-- | <i>See:</i> <a>newCreateFirewallRuleResponse</a> smart constructor.
data CreateFirewallRuleResponse
CreateFirewallRuleResponse' :: Maybe FirewallRule -> Int -> CreateFirewallRuleResponse

-- | Create a value of <a>CreateFirewallRuleResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:firewallRule:CreateFirewallRuleResponse'</a>,
--   <a>createFirewallRuleResponse_firewallRule</a> - The firewall rule
--   that you just created.
--   
--   <a>$sel:httpStatus:CreateFirewallRuleResponse'</a>,
--   <a>createFirewallRuleResponse_httpStatus</a> - The response's http
--   status code.
newCreateFirewallRuleResponse :: Int -> CreateFirewallRuleResponse

-- | <i>See:</i> <a>newUpdateFirewallRuleGroupAssociation</a> smart
--   constructor.
data UpdateFirewallRuleGroupAssociation
UpdateFirewallRuleGroupAssociation' :: Maybe MutationProtectionStatus -> Maybe Int -> Maybe Text -> Text -> UpdateFirewallRuleGroupAssociation

-- | Create a value of <a>UpdateFirewallRuleGroupAssociation</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:mutationProtection:UpdateFirewallRuleGroupAssociation'</a>,
--   <a>updateFirewallRuleGroupAssociation_mutationProtection</a> - If
--   enabled, this setting disallows modification or removal of the
--   association, to help prevent against accidentally altering DNS
--   firewall protections.
--   
--   <a>$sel:priority:UpdateFirewallRuleGroupAssociation'</a>,
--   <a>updateFirewallRuleGroupAssociation_priority</a> - The setting that
--   determines the processing order of the rule group among the rule
--   groups that you associate with the specified VPC. DNS Firewall filters
--   VPC traffic starting from the rule group with the lowest numeric
--   priority setting.
--   
--   You must specify a unique priority for each rule group that you
--   associate with a single VPC. To make it easier to insert rule groups
--   later, leave space between the numbers, for example, use 100, 200, and
--   so on. You can change the priority setting for a rule group
--   association after you create it.
--   
--   <a>$sel:name:UpdateFirewallRuleGroupAssociation'</a>,
--   <a>updateFirewallRuleGroupAssociation_name</a> - The name of the rule
--   group association.
--   
--   
--   <a>$sel:firewallRuleGroupAssociationId:UpdateFirewallRuleGroupAssociation'</a>,
--   <a>updateFirewallRuleGroupAssociation_firewallRuleGroupAssociationId</a>
--   - The identifier of the FirewallRuleGroupAssociation.
newUpdateFirewallRuleGroupAssociation :: Text -> UpdateFirewallRuleGroupAssociation

-- | <i>See:</i> <a>newUpdateFirewallRuleGroupAssociationResponse</a> smart
--   constructor.
data UpdateFirewallRuleGroupAssociationResponse
UpdateFirewallRuleGroupAssociationResponse' :: Maybe FirewallRuleGroupAssociation -> Int -> UpdateFirewallRuleGroupAssociationResponse

-- | Create a value of <a>UpdateFirewallRuleGroupAssociationResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:firewallRuleGroupAssociation:UpdateFirewallRuleGroupAssociationResponse'</a>,
--   <a>updateFirewallRuleGroupAssociationResponse_firewallRuleGroupAssociation</a>
--   - The association that you just updated.
--   
--   <a>$sel:httpStatus:UpdateFirewallRuleGroupAssociationResponse'</a>,
--   <a>updateFirewallRuleGroupAssociationResponse_httpStatus</a> - The
--   response's http status code.
newUpdateFirewallRuleGroupAssociationResponse :: Int -> UpdateFirewallRuleGroupAssociationResponse

-- | <i>See:</i> <a>newListFirewallRuleGroupAssociations</a> smart
--   constructor.
data ListFirewallRuleGroupAssociations
ListFirewallRuleGroupAssociations' :: Maybe FirewallRuleGroupAssociationStatus -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe Natural -> ListFirewallRuleGroupAssociations

-- | Create a value of <a>ListFirewallRuleGroupAssociations</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:ListFirewallRuleGroupAssociations'</a>,
--   <a>listFirewallRuleGroupAssociations_status</a> - The association
--   <tt>Status</tt> setting that you want DNS Firewall to filter on for
--   the list. If you don't specify this, then DNS Firewall returns all
--   associations, regardless of status.
--   
--   <a>$sel:firewallRuleGroupId:ListFirewallRuleGroupAssociations'</a>,
--   <a>listFirewallRuleGroupAssociations_firewallRuleGroupId</a> - The
--   unique identifier of the firewall rule group that you want to retrieve
--   the associations for. Leave this blank to retrieve associations for
--   any rule group.
--   
--   <a>$sel:priority:ListFirewallRuleGroupAssociations'</a>,
--   <a>listFirewallRuleGroupAssociations_priority</a> - The setting that
--   determines the processing order of the rule group among the rule
--   groups that are associated with a single VPC. DNS Firewall filters VPC
--   traffic starting from the rule group with the lowest numeric priority
--   setting.
--   
--   <a>$sel:vpcId:ListFirewallRuleGroupAssociations'</a>,
--   <a>listFirewallRuleGroupAssociations_vpcId</a> - The unique identifier
--   of the VPC that you want to retrieve the associations for. Leave this
--   blank to retrieve associations for any VPC.
--   
--   <a>$sel:nextToken:ListFirewallRuleGroupAssociations'</a>,
--   <a>listFirewallRuleGroupAssociations_nextToken</a> - For the first
--   call to this list request, omit this value.
--   
--   When you request a list of objects, Resolver returns at most the
--   number of objects specified in <tt>MaxResults</tt>. If more objects
--   are available for retrieval, Resolver returns a <tt>NextToken</tt>
--   value in the response. To retrieve the next batch of objects, use the
--   token that was returned for the prior request in your next request.
--   
--   <a>$sel:maxResults:ListFirewallRuleGroupAssociations'</a>,
--   <a>listFirewallRuleGroupAssociations_maxResults</a> - The maximum
--   number of objects that you want Resolver to return for this request.
--   If more objects are available, in the response, Resolver provides a
--   <tt>NextToken</tt> value that you can use in a subsequent call to get
--   the next batch of objects.
--   
--   If you don't specify a value for <tt>MaxResults</tt>, Resolver returns
--   up to 100 objects.
newListFirewallRuleGroupAssociations :: ListFirewallRuleGroupAssociations

-- | <i>See:</i> <a>newListFirewallRuleGroupAssociationsResponse</a> smart
--   constructor.
data ListFirewallRuleGroupAssociationsResponse
ListFirewallRuleGroupAssociationsResponse' :: Maybe [FirewallRuleGroupAssociation] -> Maybe Text -> Int -> ListFirewallRuleGroupAssociationsResponse

-- | Create a value of <a>ListFirewallRuleGroupAssociationsResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:firewallRuleGroupAssociations:ListFirewallRuleGroupAssociationsResponse'</a>,
--   <a>listFirewallRuleGroupAssociationsResponse_firewallRuleGroupAssociations</a>
--   - A list of your firewall rule group associations.
--   
--   This might be a partial list of the associations that you have
--   defined. For information, see <tt>MaxResults</tt>.
--   
--   <a>$sel:nextToken:ListFirewallRuleGroupAssociations'</a>,
--   <a>listFirewallRuleGroupAssociationsResponse_nextToken</a> - If
--   objects are still available for retrieval, Resolver returns this token
--   in the response. To retrieve the next batch of objects, provide this
--   token in your next request.
--   
--   <a>$sel:httpStatus:ListFirewallRuleGroupAssociationsResponse'</a>,
--   <a>listFirewallRuleGroupAssociationsResponse_httpStatus</a> - The
--   response's http status code.
newListFirewallRuleGroupAssociationsResponse :: Int -> ListFirewallRuleGroupAssociationsResponse

-- | <i>See:</i> <a>newListResolverQueryLogConfigAssociations</a> smart
--   constructor.
data ListResolverQueryLogConfigAssociations
ListResolverQueryLogConfigAssociations' :: Maybe [Filter] -> Maybe Text -> Maybe SortOrder -> Maybe Natural -> Maybe Text -> ListResolverQueryLogConfigAssociations

-- | Create a value of <a>ListResolverQueryLogConfigAssociations</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:filters:ListResolverQueryLogConfigAssociations'</a>,
--   <a>listResolverQueryLogConfigAssociations_filters</a> - An optional
--   specification to return a subset of query logging associations.
--   
--   If you submit a second or subsequent
--   <tt>ListResolverQueryLogConfigAssociations</tt> request and specify
--   the <tt>NextToken</tt> parameter, you must use the same values for
--   <tt>Filters</tt>, if any, as in the previous request.
--   
--   <a>$sel:nextToken:ListResolverQueryLogConfigAssociations'</a>,
--   <a>listResolverQueryLogConfigAssociations_nextToken</a> - For the
--   first <tt>ListResolverQueryLogConfigAssociations</tt> request, omit
--   this value.
--   
--   If there are more than <tt>MaxResults</tt> query logging associations
--   that match the values that you specify for <tt>Filters</tt>, you can
--   submit another <tt>ListResolverQueryLogConfigAssociations</tt> request
--   to get the next group of associations. In the next request, specify
--   the value of <tt>NextToken</tt> from the previous response.
--   
--   <a>$sel:sortOrder:ListResolverQueryLogConfigAssociations'</a>,
--   <a>listResolverQueryLogConfigAssociations_sortOrder</a> - If you
--   specified a value for <tt>SortBy</tt>, the order that you want query
--   logging associations to be listed in, <tt>ASCENDING</tt> or
--   <tt>DESCENDING</tt>.
--   
--   If you submit a second or subsequent
--   <tt>ListResolverQueryLogConfigAssociations</tt> request and specify
--   the <tt>NextToken</tt> parameter, you must use the same value for
--   <tt>SortOrder</tt>, if any, as in the previous request.
--   
--   <a>$sel:maxResults:ListResolverQueryLogConfigAssociations'</a>,
--   <a>listResolverQueryLogConfigAssociations_maxResults</a> - The maximum
--   number of query logging associations that you want to return in the
--   response to a <tt>ListResolverQueryLogConfigAssociations</tt> request.
--   If you don't specify a value for <tt>MaxResults</tt>, Resolver returns
--   up to 100 query logging associations.
--   
--   <a>$sel:sortBy:ListResolverQueryLogConfigAssociations'</a>,
--   <a>listResolverQueryLogConfigAssociations_sortBy</a> - The element
--   that you want Resolver to sort query logging associations by.
--   
--   If you submit a second or subsequent
--   <tt>ListResolverQueryLogConfigAssociations</tt> request and specify
--   the <tt>NextToken</tt> parameter, you must use the same value for
--   <tt>SortBy</tt>, if any, as in the previous request.
--   
--   Valid values include the following elements:
--   
--   <ul>
--   <li><tt>CreationTime</tt>: The ID of the query logging
--   association.</li>
--   <li><tt>Error</tt>: If the value of <tt>Status</tt> is
--   <tt>FAILED</tt>, the value of <tt>Error</tt> indicates the
--   cause:<ul><li><tt>DESTINATION_NOT_FOUND</tt>: The specified
--   destination (for example, an Amazon S3 bucket) was
--   deleted.</li><li><tt>ACCESS_DENIED</tt>: Permissions don't allow
--   sending logs to the destination.</li></ul>If <tt>Status</tt> is a
--   value other than <tt>FAILED</tt>, <tt>ERROR</tt> is null.</li>
--   <li><tt>Id</tt>: The ID of the query logging association</li>
--   <li><tt>ResolverQueryLogConfigId</tt>: The ID of the query logging
--   configuration</li>
--   <li><tt>ResourceId</tt>: The ID of the VPC that is associated with the
--   query logging configuration</li>
--   <li><tt>Status</tt>: The current status of the configuration. Valid
--   values include the following:<ul><li><tt>CREATING</tt>: Resolver is
--   creating an association between an Amazon VPC and a query logging
--   configuration.</li><li><tt>CREATED</tt>: The association between an
--   Amazon VPC and a query logging configuration was successfully created.
--   Resolver is logging queries that originate in the specified
--   VPC.</li><li><tt>DELETING</tt>: Resolver is deleting this query
--   logging association.</li><li><tt>FAILED</tt>: Resolver either couldn't
--   create or couldn't delete the query logging association. Here are two
--   common causes:<ul><li>The specified destination (for example, an
--   Amazon S3 bucket) was deleted.</li><li>Permissions don't allow sending
--   logs to the destination.</li></ul></li></ul></li>
--   </ul>
newListResolverQueryLogConfigAssociations :: ListResolverQueryLogConfigAssociations

-- | <i>See:</i> <a>newListResolverQueryLogConfigAssociationsResponse</a>
--   smart constructor.
data ListResolverQueryLogConfigAssociationsResponse
ListResolverQueryLogConfigAssociationsResponse' :: Maybe Int -> Maybe [ResolverQueryLogConfigAssociation] -> Maybe Text -> Maybe Int -> Int -> ListResolverQueryLogConfigAssociationsResponse

-- | Create a value of
--   <a>ListResolverQueryLogConfigAssociationsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:totalFilteredCount:ListResolverQueryLogConfigAssociationsResponse'</a>,
--   <a>listResolverQueryLogConfigAssociationsResponse_totalFilteredCount</a>
--   - The total number of query logging associations that were created by
--   the current account in the specified Region and that match the filters
--   that were specified in the
--   <tt>ListResolverQueryLogConfigAssociations</tt> request. For the total
--   number of associations that were created by the current account in the
--   specified Region, see <tt>TotalCount</tt>.
--   
--   
--   <a>$sel:resolverQueryLogConfigAssociations:ListResolverQueryLogConfigAssociationsResponse'</a>,
--   <a>listResolverQueryLogConfigAssociationsResponse_resolverQueryLogConfigAssociations</a>
--   - A list that contains one <tt>ResolverQueryLogConfigAssociations</tt>
--   element for each query logging association that matches the values
--   that you specified for <tt>Filter</tt>.
--   
--   <a>$sel:nextToken:ListResolverQueryLogConfigAssociations'</a>,
--   <a>listResolverQueryLogConfigAssociationsResponse_nextToken</a> - If
--   there are more than <tt>MaxResults</tt> query logging associations,
--   you can submit another <tt>ListResolverQueryLogConfigAssociations</tt>
--   request to get the next group of associations. In the next request,
--   specify the value of <tt>NextToken</tt> from the previous response.
--   
--   
--   <a>$sel:totalCount:ListResolverQueryLogConfigAssociationsResponse'</a>,
--   <a>listResolverQueryLogConfigAssociationsResponse_totalCount</a> - The
--   total number of query logging associations that were created by the
--   current account in the specified Region. This count can differ from
--   the number of associations that are returned in a
--   <tt>ListResolverQueryLogConfigAssociations</tt> response, depending on
--   the values that you specify in the request.
--   
--   
--   <a>$sel:httpStatus:ListResolverQueryLogConfigAssociationsResponse'</a>,
--   <a>listResolverQueryLogConfigAssociationsResponse_httpStatus</a> - The
--   response's http status code.
newListResolverQueryLogConfigAssociationsResponse :: Int -> ListResolverQueryLogConfigAssociationsResponse

-- | <i>See:</i> <a>newListTagsForResource</a> smart constructor.
data ListTagsForResource
ListTagsForResource' :: Maybe Text -> Maybe Natural -> Text -> ListTagsForResource

-- | Create a value of <a>ListTagsForResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListTagsForResource'</a>,
--   <a>listTagsForResource_nextToken</a> - For the first
--   <tt>ListTagsForResource</tt> request, omit this value.
--   
--   If you have more than <tt>MaxResults</tt> tags, you can submit another
--   <tt>ListTagsForResource</tt> request to get the next group of tags for
--   the resource. In the next request, specify the value of
--   <tt>NextToken</tt> from the previous response.
--   
--   <a>$sel:maxResults:ListTagsForResource'</a>,
--   <a>listTagsForResource_maxResults</a> - The maximum number of tags
--   that you want to return in the response to a
--   <tt>ListTagsForResource</tt> request. If you don't specify a value for
--   <tt>MaxResults</tt>, Resolver returns up to 100 tags.
--   
--   <a>$sel:resourceArn:ListTagsForResource'</a>,
--   <a>listTagsForResource_resourceArn</a> - The Amazon Resource Name
--   (ARN) for the resource that you want to list tags for.
newListTagsForResource :: Text -> ListTagsForResource

-- | <i>See:</i> <a>newListTagsForResourceResponse</a> smart constructor.
data ListTagsForResourceResponse
ListTagsForResourceResponse' :: Maybe Text -> Maybe [Tag] -> Int -> ListTagsForResourceResponse

-- | Create a value of <a>ListTagsForResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListTagsForResource'</a>,
--   <a>listTagsForResourceResponse_nextToken</a> - If more than
--   <tt>MaxResults</tt> tags match the specified criteria, you can submit
--   another <tt>ListTagsForResource</tt> request to get the next group of
--   results. In the next request, specify the value of <tt>NextToken</tt>
--   from the previous response.
--   
--   <a>$sel:tags:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_tags</a> - The tags that are associated
--   with the resource that you specified in the
--   <tt>ListTagsForResource</tt> request.
--   
--   <a>$sel:httpStatus:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_httpStatus</a> - The response's http
--   status code.
newListTagsForResourceResponse :: Int -> ListTagsForResourceResponse

-- | <i>See:</i> <a>newGetFirewallRuleGroupAssociation</a> smart
--   constructor.
data GetFirewallRuleGroupAssociation
GetFirewallRuleGroupAssociation' :: Text -> GetFirewallRuleGroupAssociation

-- | Create a value of <a>GetFirewallRuleGroupAssociation</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:firewallRuleGroupAssociationId:GetFirewallRuleGroupAssociation'</a>,
--   <a>getFirewallRuleGroupAssociation_firewallRuleGroupAssociationId</a>
--   - The identifier of the FirewallRuleGroupAssociation.
newGetFirewallRuleGroupAssociation :: Text -> GetFirewallRuleGroupAssociation

-- | <i>See:</i> <a>newGetFirewallRuleGroupAssociationResponse</a> smart
--   constructor.
data GetFirewallRuleGroupAssociationResponse
GetFirewallRuleGroupAssociationResponse' :: Maybe FirewallRuleGroupAssociation -> Int -> GetFirewallRuleGroupAssociationResponse

-- | Create a value of <a>GetFirewallRuleGroupAssociationResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:firewallRuleGroupAssociation:GetFirewallRuleGroupAssociationResponse'</a>,
--   <a>getFirewallRuleGroupAssociationResponse_firewallRuleGroupAssociation</a>
--   - The association that you requested.
--   
--   <a>$sel:httpStatus:GetFirewallRuleGroupAssociationResponse'</a>,
--   <a>getFirewallRuleGroupAssociationResponse_httpStatus</a> - The
--   response's http status code.
newGetFirewallRuleGroupAssociationResponse :: Int -> GetFirewallRuleGroupAssociationResponse

-- | <i>See:</i> <a>newDisassociateResolverEndpointIpAddress</a> smart
--   constructor.
data DisassociateResolverEndpointIpAddress
DisassociateResolverEndpointIpAddress' :: Text -> IpAddressUpdate -> DisassociateResolverEndpointIpAddress

-- | Create a value of <a>DisassociateResolverEndpointIpAddress</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resolverEndpointId:DisassociateResolverEndpointIpAddress'</a>,
--   <a>disassociateResolverEndpointIpAddress_resolverEndpointId</a> - The
--   ID of the Resolver endpoint that you want to disassociate an IP
--   address from.
--   
--   <a>$sel:ipAddress:DisassociateResolverEndpointIpAddress'</a>,
--   <a>disassociateResolverEndpointIpAddress_ipAddress</a> - The IPv4
--   address that you want to remove from a Resolver endpoint.
newDisassociateResolverEndpointIpAddress :: Text -> IpAddressUpdate -> DisassociateResolverEndpointIpAddress

-- | <i>See:</i> <a>newDisassociateResolverEndpointIpAddressResponse</a>
--   smart constructor.
data DisassociateResolverEndpointIpAddressResponse
DisassociateResolverEndpointIpAddressResponse' :: Maybe ResolverEndpoint -> Int -> DisassociateResolverEndpointIpAddressResponse

-- | Create a value of <a>DisassociateResolverEndpointIpAddressResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:resolverEndpoint:DisassociateResolverEndpointIpAddressResponse'</a>,
--   <a>disassociateResolverEndpointIpAddressResponse_resolverEndpoint</a>
--   - The response to an <tt>DisassociateResolverEndpointIpAddress</tt>
--   request.
--   
--   <a>$sel:httpStatus:DisassociateResolverEndpointIpAddressResponse'</a>,
--   <a>disassociateResolverEndpointIpAddressResponse_httpStatus</a> - The
--   response's http status code.
newDisassociateResolverEndpointIpAddressResponse :: Int -> DisassociateResolverEndpointIpAddressResponse

-- | <i>See:</i> <a>newListResolverRuleAssociations</a> smart constructor.
data ListResolverRuleAssociations
ListResolverRuleAssociations' :: Maybe [Filter] -> Maybe Text -> Maybe Natural -> ListResolverRuleAssociations

-- | Create a value of <a>ListResolverRuleAssociations</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:filters:ListResolverRuleAssociations'</a>,
--   <a>listResolverRuleAssociations_filters</a> - An optional
--   specification to return a subset of Resolver rules, such as Resolver
--   rules that are associated with the same VPC ID.
--   
--   If you submit a second or subsequent
--   <tt>ListResolverRuleAssociations</tt> request and specify the
--   <tt>NextToken</tt> parameter, you must use the same values for
--   <tt>Filters</tt>, if any, as in the previous request.
--   
--   <a>$sel:nextToken:ListResolverRuleAssociations'</a>,
--   <a>listResolverRuleAssociations_nextToken</a> - For the first
--   <tt>ListResolverRuleAssociation</tt> request, omit this value.
--   
--   If you have more than <tt>MaxResults</tt> rule associations, you can
--   submit another <tt>ListResolverRuleAssociation</tt> request to get the
--   next group of rule associations. In the next request, specify the
--   value of <tt>NextToken</tt> from the previous response.
--   
--   <a>$sel:maxResults:ListResolverRuleAssociations'</a>,
--   <a>listResolverRuleAssociations_maxResults</a> - The maximum number of
--   rule associations that you want to return in the response to a
--   <tt>ListResolverRuleAssociations</tt> request. If you don't specify a
--   value for <tt>MaxResults</tt>, Resolver returns up to 100 rule
--   associations.
newListResolverRuleAssociations :: ListResolverRuleAssociations

-- | <i>See:</i> <a>newListResolverRuleAssociationsResponse</a> smart
--   constructor.
data ListResolverRuleAssociationsResponse
ListResolverRuleAssociationsResponse' :: Maybe [ResolverRuleAssociation] -> Maybe Text -> Maybe Natural -> Int -> ListResolverRuleAssociationsResponse

-- | Create a value of <a>ListResolverRuleAssociationsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:resolverRuleAssociations:ListResolverRuleAssociationsResponse'</a>,
--   <a>listResolverRuleAssociationsResponse_resolverRuleAssociations</a> -
--   The associations that were created between Resolver rules and VPCs
--   using the current Amazon Web Services account, and that match the
--   specified filters, if any.
--   
--   <a>$sel:nextToken:ListResolverRuleAssociations'</a>,
--   <a>listResolverRuleAssociationsResponse_nextToken</a> - If more than
--   <tt>MaxResults</tt> rule associations match the specified criteria,
--   you can submit another <tt>ListResolverRuleAssociation</tt> request to
--   get the next group of results. In the next request, specify the value
--   of <tt>NextToken</tt> from the previous response.
--   
--   <a>$sel:maxResults:ListResolverRuleAssociations'</a>,
--   <a>listResolverRuleAssociationsResponse_maxResults</a> - The value
--   that you specified for <tt>MaxResults</tt> in the request.
--   
--   <a>$sel:httpStatus:ListResolverRuleAssociationsResponse'</a>,
--   <a>listResolverRuleAssociationsResponse_httpStatus</a> - The
--   response's http status code.
newListResolverRuleAssociationsResponse :: Int -> ListResolverRuleAssociationsResponse

-- | <i>See:</i> <a>newDeleteResolverQueryLogConfig</a> smart constructor.
data DeleteResolverQueryLogConfig
DeleteResolverQueryLogConfig' :: Text -> DeleteResolverQueryLogConfig

-- | Create a value of <a>DeleteResolverQueryLogConfig</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resolverQueryLogConfigId:DeleteResolverQueryLogConfig'</a>,
--   <a>deleteResolverQueryLogConfig_resolverQueryLogConfigId</a> - The ID
--   of the query logging configuration that you want to delete.
newDeleteResolverQueryLogConfig :: Text -> DeleteResolverQueryLogConfig

-- | <i>See:</i> <a>newDeleteResolverQueryLogConfigResponse</a> smart
--   constructor.
data DeleteResolverQueryLogConfigResponse
DeleteResolverQueryLogConfigResponse' :: Maybe ResolverQueryLogConfig -> Int -> DeleteResolverQueryLogConfigResponse

-- | Create a value of <a>DeleteResolverQueryLogConfigResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:resolverQueryLogConfig:DeleteResolverQueryLogConfigResponse'</a>,
--   <a>deleteResolverQueryLogConfigResponse_resolverQueryLogConfig</a> -
--   Information about the query logging configuration that you deleted,
--   including the status of the request.
--   
--   <a>$sel:httpStatus:DeleteResolverQueryLogConfigResponse'</a>,
--   <a>deleteResolverQueryLogConfigResponse_httpStatus</a> - The
--   response's http status code.
newDeleteResolverQueryLogConfigResponse :: Int -> DeleteResolverQueryLogConfigResponse

-- | <i>See:</i> <a>newCreateFirewallRuleGroup</a> smart constructor.
data CreateFirewallRuleGroup
CreateFirewallRuleGroup' :: Maybe [Tag] -> Text -> Text -> CreateFirewallRuleGroup

-- | Create a value of <a>CreateFirewallRuleGroup</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:CreateFirewallRuleGroup'</a>,
--   <a>createFirewallRuleGroup_tags</a> - A list of the tag keys and
--   values that you want to associate with the rule group.
--   
--   <a>$sel:creatorRequestId:CreateFirewallRuleGroup'</a>,
--   <a>createFirewallRuleGroup_creatorRequestId</a> - A unique string
--   defined by you to identify the request. This allows you to retry
--   failed requests without the risk of running the operation twice. This
--   can be any unique string, for example, a timestamp.
--   
--   <a>$sel:name:CreateFirewallRuleGroup'</a>,
--   <a>createFirewallRuleGroup_name</a> - A name that lets you identify
--   the rule group, to manage and use it.
newCreateFirewallRuleGroup :: Text -> Text -> CreateFirewallRuleGroup

-- | <i>See:</i> <a>newCreateFirewallRuleGroupResponse</a> smart
--   constructor.
data CreateFirewallRuleGroupResponse
CreateFirewallRuleGroupResponse' :: Maybe FirewallRuleGroup -> Int -> CreateFirewallRuleGroupResponse

-- | Create a value of <a>CreateFirewallRuleGroupResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:firewallRuleGroup:CreateFirewallRuleGroupResponse'</a>,
--   <a>createFirewallRuleGroupResponse_firewallRuleGroup</a> - A
--   collection of rules used to filter DNS network traffic.
--   
--   <a>$sel:httpStatus:CreateFirewallRuleGroupResponse'</a>,
--   <a>createFirewallRuleGroupResponse_httpStatus</a> - The response's
--   http status code.
newCreateFirewallRuleGroupResponse :: Int -> CreateFirewallRuleGroupResponse

-- | <i>See:</i> <a>newGetResolverEndpoint</a> smart constructor.
data GetResolverEndpoint
GetResolverEndpoint' :: Text -> GetResolverEndpoint

-- | Create a value of <a>GetResolverEndpoint</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resolverEndpointId:GetResolverEndpoint'</a>,
--   <a>getResolverEndpoint_resolverEndpointId</a> - The ID of the Resolver
--   endpoint that you want to get information about.
newGetResolverEndpoint :: Text -> GetResolverEndpoint

-- | <i>See:</i> <a>newGetResolverEndpointResponse</a> smart constructor.
data GetResolverEndpointResponse
GetResolverEndpointResponse' :: Maybe ResolverEndpoint -> Int -> GetResolverEndpointResponse

-- | Create a value of <a>GetResolverEndpointResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resolverEndpoint:GetResolverEndpointResponse'</a>,
--   <a>getResolverEndpointResponse_resolverEndpoint</a> - Information
--   about the Resolver endpoint that you specified in a
--   <tt>GetResolverEndpoint</tt> request.
--   
--   <a>$sel:httpStatus:GetResolverEndpointResponse'</a>,
--   <a>getResolverEndpointResponse_httpStatus</a> - The response's http
--   status code.
newGetResolverEndpointResponse :: Int -> GetResolverEndpointResponse

-- | <i>See:</i> <a>newListResolverQueryLogConfigs</a> smart constructor.
data ListResolverQueryLogConfigs
ListResolverQueryLogConfigs' :: Maybe [Filter] -> Maybe Text -> Maybe SortOrder -> Maybe Natural -> Maybe Text -> ListResolverQueryLogConfigs

-- | Create a value of <a>ListResolverQueryLogConfigs</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:filters:ListResolverQueryLogConfigs'</a>,
--   <a>listResolverQueryLogConfigs_filters</a> - An optional specification
--   to return a subset of query logging configurations.
--   
--   If you submit a second or subsequent
--   <tt>ListResolverQueryLogConfigs</tt> request and specify the
--   <tt>NextToken</tt> parameter, you must use the same values for
--   <tt>Filters</tt>, if any, as in the previous request.
--   
--   <a>$sel:nextToken:ListResolverQueryLogConfigs'</a>,
--   <a>listResolverQueryLogConfigs_nextToken</a> - For the first
--   <tt>ListResolverQueryLogConfigs</tt> request, omit this value.
--   
--   If there are more than <tt>MaxResults</tt> query logging
--   configurations that match the values that you specify for
--   <tt>Filters</tt>, you can submit another
--   <tt>ListResolverQueryLogConfigs</tt> request to get the next group of
--   configurations. In the next request, specify the value of
--   <tt>NextToken</tt> from the previous response.
--   
--   <a>$sel:sortOrder:ListResolverQueryLogConfigs'</a>,
--   <a>listResolverQueryLogConfigs_sortOrder</a> - If you specified a
--   value for <tt>SortBy</tt>, the order that you want query logging
--   configurations to be listed in, <tt>ASCENDING</tt> or
--   <tt>DESCENDING</tt>.
--   
--   If you submit a second or subsequent
--   <tt>ListResolverQueryLogConfigs</tt> request and specify the
--   <tt>NextToken</tt> parameter, you must use the same value for
--   <tt>SortOrder</tt>, if any, as in the previous request.
--   
--   <a>$sel:maxResults:ListResolverQueryLogConfigs'</a>,
--   <a>listResolverQueryLogConfigs_maxResults</a> - The maximum number of
--   query logging configurations that you want to return in the response
--   to a <tt>ListResolverQueryLogConfigs</tt> request. If you don't
--   specify a value for <tt>MaxResults</tt>, Resolver returns up to 100
--   query logging configurations.
--   
--   <a>$sel:sortBy:ListResolverQueryLogConfigs'</a>,
--   <a>listResolverQueryLogConfigs_sortBy</a> - The element that you want
--   Resolver to sort query logging configurations by.
--   
--   If you submit a second or subsequent
--   <tt>ListResolverQueryLogConfigs</tt> request and specify the
--   <tt>NextToken</tt> parameter, you must use the same value for
--   <tt>SortBy</tt>, if any, as in the previous request.
--   
--   Valid values include the following elements:
--   
--   <ul>
--   <li><tt>Arn</tt>: The ARN of the query logging configuration</li>
--   <li><tt>AssociationCount</tt>: The number of VPCs that are associated
--   with the specified configuration</li>
--   <li><tt>CreationTime</tt>: The date and time that Resolver returned
--   when the configuration was created</li>
--   <li><tt>CreatorRequestId</tt>: The value that was specified for
--   <tt>CreatorRequestId</tt> when the configuration was created</li>
--   <li><tt>DestinationArn</tt>: The location that logs are sent to</li>
--   <li><tt>Id</tt>: The ID of the configuration</li>
--   <li><tt>Name</tt>: The name of the configuration</li>
--   <li><tt>OwnerId</tt>: The Amazon Web Services account number of the
--   account that created the configuration</li>
--   <li><tt>ShareStatus</tt>: Whether the configuration is shared with
--   other Amazon Web Services accounts or shared with the current account
--   by another Amazon Web Services account. Sharing is configured through
--   Resource Access Manager (RAM).</li>
--   <li><tt>Status</tt>: The current status of the configuration. Valid
--   values include the following:<ul><li><tt>CREATING</tt>: Resolver is
--   creating the query logging configuration.</li><li><tt>CREATED</tt>:
--   The query logging configuration was successfully created. Resolver is
--   logging queries that originate in the specified
--   VPC.</li><li><tt>DELETING</tt>: Resolver is deleting this query
--   logging configuration.</li><li><tt>FAILED</tt>: Resolver either
--   couldn't create or couldn't delete the query logging configuration.
--   Here are two common causes:<ul><li>The specified destination (for
--   example, an Amazon S3 bucket) was deleted.</li><li>Permissions don't
--   allow sending logs to the destination.</li></ul></li></ul></li>
--   </ul>
newListResolverQueryLogConfigs :: ListResolverQueryLogConfigs

-- | <i>See:</i> <a>newListResolverQueryLogConfigsResponse</a> smart
--   constructor.
data ListResolverQueryLogConfigsResponse
ListResolverQueryLogConfigsResponse' :: Maybe Int -> Maybe [ResolverQueryLogConfig] -> Maybe Text -> Maybe Int -> Int -> ListResolverQueryLogConfigsResponse

-- | Create a value of <a>ListResolverQueryLogConfigsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:totalFilteredCount:ListResolverQueryLogConfigsResponse'</a>,
--   <a>listResolverQueryLogConfigsResponse_totalFilteredCount</a> - The
--   total number of query logging configurations that were created by the
--   current account in the specified Region and that match the filters
--   that were specified in the <tt>ListResolverQueryLogConfigs</tt>
--   request. For the total number of query logging configurations that
--   were created by the current account in the specified Region, see
--   <tt>TotalCount</tt>.
--   
--   
--   <a>$sel:resolverQueryLogConfigs:ListResolverQueryLogConfigsResponse'</a>,
--   <a>listResolverQueryLogConfigsResponse_resolverQueryLogConfigs</a> - A
--   list that contains one <tt>ResolverQueryLogConfig</tt> element for
--   each query logging configuration that matches the values that you
--   specified for <tt>Filter</tt>.
--   
--   <a>$sel:nextToken:ListResolverQueryLogConfigs'</a>,
--   <a>listResolverQueryLogConfigsResponse_nextToken</a> - If there are
--   more than <tt>MaxResults</tt> query logging configurations, you can
--   submit another <tt>ListResolverQueryLogConfigs</tt> request to get the
--   next group of configurations. In the next request, specify the value
--   of <tt>NextToken</tt> from the previous response.
--   
--   <a>$sel:totalCount:ListResolverQueryLogConfigsResponse'</a>,
--   <a>listResolverQueryLogConfigsResponse_totalCount</a> - The total
--   number of query logging configurations that were created by the
--   current account in the specified Region. This count can differ from
--   the number of query logging configurations that are returned in a
--   <tt>ListResolverQueryLogConfigs</tt> response, depending on the values
--   that you specify in the request.
--   
--   <a>$sel:httpStatus:ListResolverQueryLogConfigsResponse'</a>,
--   <a>listResolverQueryLogConfigsResponse_httpStatus</a> - The response's
--   http status code.
newListResolverQueryLogConfigsResponse :: Int -> ListResolverQueryLogConfigsResponse

-- | <i>See:</i> <a>newDeleteFirewallRuleGroup</a> smart constructor.
data DeleteFirewallRuleGroup
DeleteFirewallRuleGroup' :: Text -> DeleteFirewallRuleGroup

-- | Create a value of <a>DeleteFirewallRuleGroup</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:firewallRuleGroupId:DeleteFirewallRuleGroup'</a>,
--   <a>deleteFirewallRuleGroup_firewallRuleGroupId</a> - The unique
--   identifier of the firewall rule group that you want to delete.
newDeleteFirewallRuleGroup :: Text -> DeleteFirewallRuleGroup

-- | <i>See:</i> <a>newDeleteFirewallRuleGroupResponse</a> smart
--   constructor.
data DeleteFirewallRuleGroupResponse
DeleteFirewallRuleGroupResponse' :: Maybe FirewallRuleGroup -> Int -> DeleteFirewallRuleGroupResponse

-- | Create a value of <a>DeleteFirewallRuleGroupResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:firewallRuleGroup:DeleteFirewallRuleGroupResponse'</a>,
--   <a>deleteFirewallRuleGroupResponse_firewallRuleGroup</a> - A
--   collection of rules used to filter DNS network traffic.
--   
--   <a>$sel:httpStatus:DeleteFirewallRuleGroupResponse'</a>,
--   <a>deleteFirewallRuleGroupResponse_httpStatus</a> - The response's
--   http status code.
newDeleteFirewallRuleGroupResponse :: Int -> DeleteFirewallRuleGroupResponse

-- | <i>See:</i> <a>newListResolverEndpointIpAddresses</a> smart
--   constructor.
data ListResolverEndpointIpAddresses
ListResolverEndpointIpAddresses' :: Maybe Text -> Maybe Natural -> Text -> ListResolverEndpointIpAddresses

-- | Create a value of <a>ListResolverEndpointIpAddresses</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListResolverEndpointIpAddresses'</a>,
--   <a>listResolverEndpointIpAddresses_nextToken</a> - For the first
--   <tt>ListResolverEndpointIpAddresses</tt> request, omit this value.
--   
--   If the specified Resolver endpoint has more than <tt>MaxResults</tt>
--   IP addresses, you can submit another
--   <tt>ListResolverEndpointIpAddresses</tt> request to get the next group
--   of IP addresses. In the next request, specify the value of
--   <tt>NextToken</tt> from the previous response.
--   
--   <a>$sel:maxResults:ListResolverEndpointIpAddresses'</a>,
--   <a>listResolverEndpointIpAddresses_maxResults</a> - The maximum number
--   of IP addresses that you want to return in the response to a
--   <tt>ListResolverEndpointIpAddresses</tt> request. If you don't specify
--   a value for <tt>MaxResults</tt>, Resolver returns up to 100 IP
--   addresses.
--   
--   <a>$sel:resolverEndpointId:ListResolverEndpointIpAddresses'</a>,
--   <a>listResolverEndpointIpAddresses_resolverEndpointId</a> - The ID of
--   the Resolver endpoint that you want to get IP addresses for.
newListResolverEndpointIpAddresses :: Text -> ListResolverEndpointIpAddresses

-- | <i>See:</i> <a>newListResolverEndpointIpAddressesResponse</a> smart
--   constructor.
data ListResolverEndpointIpAddressesResponse
ListResolverEndpointIpAddressesResponse' :: Maybe Text -> Maybe Natural -> Maybe [IpAddressResponse] -> Int -> ListResolverEndpointIpAddressesResponse

-- | Create a value of <a>ListResolverEndpointIpAddressesResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListResolverEndpointIpAddresses'</a>,
--   <a>listResolverEndpointIpAddressesResponse_nextToken</a> - If the
--   specified endpoint has more than <tt>MaxResults</tt> IP addresses, you
--   can submit another <tt>ListResolverEndpointIpAddresses</tt> request to
--   get the next group of IP addresses. In the next request, specify the
--   value of <tt>NextToken</tt> from the previous response.
--   
--   <a>$sel:maxResults:ListResolverEndpointIpAddresses'</a>,
--   <a>listResolverEndpointIpAddressesResponse_maxResults</a> - The value
--   that you specified for <tt>MaxResults</tt> in the request.
--   
--   <a>$sel:ipAddresses:ListResolverEndpointIpAddressesResponse'</a>,
--   <a>listResolverEndpointIpAddressesResponse_ipAddresses</a> -
--   Information about the IP addresses in your VPC that DNS queries
--   originate from (for outbound endpoints) or that you forward DNS
--   queries to (for inbound endpoints).
--   
--   <a>$sel:httpStatus:ListResolverEndpointIpAddressesResponse'</a>,
--   <a>listResolverEndpointIpAddressesResponse_httpStatus</a> - The
--   response's http status code.
newListResolverEndpointIpAddressesResponse :: Int -> ListResolverEndpointIpAddressesResponse

-- | <i>See:</i> <a>newAssociateResolverQueryLogConfig</a> smart
--   constructor.
data AssociateResolverQueryLogConfig
AssociateResolverQueryLogConfig' :: Text -> Text -> AssociateResolverQueryLogConfig

-- | Create a value of <a>AssociateResolverQueryLogConfig</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resolverQueryLogConfigId:AssociateResolverQueryLogConfig'</a>,
--   <a>associateResolverQueryLogConfig_resolverQueryLogConfigId</a> - The
--   ID of the query logging configuration that you want to associate a VPC
--   with.
--   
--   <a>$sel:resourceId:AssociateResolverQueryLogConfig'</a>,
--   <a>associateResolverQueryLogConfig_resourceId</a> - The ID of an
--   Amazon VPC that you want this query logging configuration to log
--   queries for.
--   
--   The VPCs and the query logging configuration must be in the same
--   Region.
newAssociateResolverQueryLogConfig :: Text -> Text -> AssociateResolverQueryLogConfig

-- | <i>See:</i> <a>newAssociateResolverQueryLogConfigResponse</a> smart
--   constructor.
data AssociateResolverQueryLogConfigResponse
AssociateResolverQueryLogConfigResponse' :: Maybe ResolverQueryLogConfigAssociation -> Int -> AssociateResolverQueryLogConfigResponse

-- | Create a value of <a>AssociateResolverQueryLogConfigResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:resolverQueryLogConfigAssociation:AssociateResolverQueryLogConfigResponse'</a>,
--   <a>associateResolverQueryLogConfigResponse_resolverQueryLogConfigAssociation</a>
--   - A complex type that contains settings for a specified association
--   between an Amazon VPC and a query logging configuration.
--   
--   <a>$sel:httpStatus:AssociateResolverQueryLogConfigResponse'</a>,
--   <a>associateResolverQueryLogConfigResponse_httpStatus</a> - The
--   response's http status code.
newAssociateResolverQueryLogConfigResponse :: Int -> AssociateResolverQueryLogConfigResponse

-- | <i>See:</i> <a>newGetResolverRulePolicy</a> smart constructor.
data GetResolverRulePolicy
GetResolverRulePolicy' :: Text -> GetResolverRulePolicy

-- | Create a value of <a>GetResolverRulePolicy</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:GetResolverRulePolicy'</a>,
--   <a>getResolverRulePolicy_arn</a> - The ID of the Resolver rule that
--   you want to get the Resolver rule policy for.
newGetResolverRulePolicy :: Text -> GetResolverRulePolicy

-- | <i>See:</i> <a>newGetResolverRulePolicyResponse</a> smart constructor.
data GetResolverRulePolicyResponse
GetResolverRulePolicyResponse' :: Maybe Text -> Int -> GetResolverRulePolicyResponse

-- | Create a value of <a>GetResolverRulePolicyResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resolverRulePolicy:GetResolverRulePolicyResponse'</a>,
--   <a>getResolverRulePolicyResponse_resolverRulePolicy</a> - The Resolver
--   rule policy for the rule that you specified in a
--   <tt>GetResolverRulePolicy</tt> request.
--   
--   <a>$sel:httpStatus:GetResolverRulePolicyResponse'</a>,
--   <a>getResolverRulePolicyResponse_httpStatus</a> - The response's http
--   status code.
newGetResolverRulePolicyResponse :: Int -> GetResolverRulePolicyResponse

-- | <i>See:</i> <a>newGetResolverDnssecConfig</a> smart constructor.
data GetResolverDnssecConfig
GetResolverDnssecConfig' :: Text -> GetResolverDnssecConfig

-- | Create a value of <a>GetResolverDnssecConfig</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceId:GetResolverDnssecConfig'</a>,
--   <a>getResolverDnssecConfig_resourceId</a> - The ID of the virtual
--   private cloud (VPC) for the DNSSEC validation status.
newGetResolverDnssecConfig :: Text -> GetResolverDnssecConfig

-- | <i>See:</i> <a>newGetResolverDnssecConfigResponse</a> smart
--   constructor.
data GetResolverDnssecConfigResponse
GetResolverDnssecConfigResponse' :: Maybe ResolverDnssecConfig -> Int -> GetResolverDnssecConfigResponse

-- | Create a value of <a>GetResolverDnssecConfigResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resolverDNSSECConfig:GetResolverDnssecConfigResponse'</a>,
--   <a>getResolverDnssecConfigResponse_resolverDNSSECConfig</a> - The
--   information about a configuration for DNSSEC validation.
--   
--   <a>$sel:httpStatus:GetResolverDnssecConfigResponse'</a>,
--   <a>getResolverDnssecConfigResponse_httpStatus</a> - The response's
--   http status code.
newGetResolverDnssecConfigResponse :: Int -> GetResolverDnssecConfigResponse

-- | <i>See:</i> <a>newListFirewallRuleGroups</a> smart constructor.
data ListFirewallRuleGroups
ListFirewallRuleGroups' :: Maybe Text -> Maybe Natural -> ListFirewallRuleGroups

-- | Create a value of <a>ListFirewallRuleGroups</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListFirewallRuleGroups'</a>,
--   <a>listFirewallRuleGroups_nextToken</a> - For the first call to this
--   list request, omit this value.
--   
--   When you request a list of objects, Resolver returns at most the
--   number of objects specified in <tt>MaxResults</tt>. If more objects
--   are available for retrieval, Resolver returns a <tt>NextToken</tt>
--   value in the response. To retrieve the next batch of objects, use the
--   token that was returned for the prior request in your next request.
--   
--   <a>$sel:maxResults:ListFirewallRuleGroups'</a>,
--   <a>listFirewallRuleGroups_maxResults</a> - The maximum number of
--   objects that you want Resolver to return for this request. If more
--   objects are available, in the response, Resolver provides a
--   <tt>NextToken</tt> value that you can use in a subsequent call to get
--   the next batch of objects.
--   
--   If you don't specify a value for <tt>MaxResults</tt>, Resolver returns
--   up to 100 objects.
newListFirewallRuleGroups :: ListFirewallRuleGroups

-- | <i>See:</i> <a>newListFirewallRuleGroupsResponse</a> smart
--   constructor.
data ListFirewallRuleGroupsResponse
ListFirewallRuleGroupsResponse' :: Maybe Text -> Maybe [FirewallRuleGroupMetadata] -> Int -> ListFirewallRuleGroupsResponse

-- | Create a value of <a>ListFirewallRuleGroupsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListFirewallRuleGroups'</a>,
--   <a>listFirewallRuleGroupsResponse_nextToken</a> - If objects are still
--   available for retrieval, Resolver returns this token in the response.
--   To retrieve the next batch of objects, provide this token in your next
--   request.
--   
--   <a>$sel:firewallRuleGroups:ListFirewallRuleGroupsResponse'</a>,
--   <a>listFirewallRuleGroupsResponse_firewallRuleGroups</a> - A list of
--   your firewall rule groups.
--   
--   This might be a partial list of the rule groups that you have defined.
--   For information, see <tt>MaxResults</tt>.
--   
--   <a>$sel:httpStatus:ListFirewallRuleGroupsResponse'</a>,
--   <a>listFirewallRuleGroupsResponse_httpStatus</a> - The response's http
--   status code.
newListFirewallRuleGroupsResponse :: Int -> ListFirewallRuleGroupsResponse

-- | <i>See:</i> <a>newUpdateResolverRule</a> smart constructor.
data UpdateResolverRule
UpdateResolverRule' :: Text -> ResolverRuleConfig -> UpdateResolverRule

-- | Create a value of <a>UpdateResolverRule</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resolverRuleId:UpdateResolverRule'</a>,
--   <a>updateResolverRule_resolverRuleId</a> - The ID of the Resolver rule
--   that you want to update.
--   
--   <a>$sel:config:UpdateResolverRule'</a>,
--   <a>updateResolverRule_config</a> - The new settings for the Resolver
--   rule.
newUpdateResolverRule :: Text -> ResolverRuleConfig -> UpdateResolverRule

-- | <i>See:</i> <a>newUpdateResolverRuleResponse</a> smart constructor.
data UpdateResolverRuleResponse
UpdateResolverRuleResponse' :: Maybe ResolverRule -> Int -> UpdateResolverRuleResponse

-- | Create a value of <a>UpdateResolverRuleResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resolverRule:UpdateResolverRuleResponse'</a>,
--   <a>updateResolverRuleResponse_resolverRule</a> - The response to an
--   <tt>UpdateResolverRule</tt> request.
--   
--   <a>$sel:httpStatus:UpdateResolverRuleResponse'</a>,
--   <a>updateResolverRuleResponse_httpStatus</a> - The response's http
--   status code.
newUpdateResolverRuleResponse :: Int -> UpdateResolverRuleResponse

-- | <i>See:</i> <a>newDeleteResolverRule</a> smart constructor.
data DeleteResolverRule
DeleteResolverRule' :: Text -> DeleteResolverRule

-- | Create a value of <a>DeleteResolverRule</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resolverRuleId:DeleteResolverRule'</a>,
--   <a>deleteResolverRule_resolverRuleId</a> - The ID of the Resolver rule
--   that you want to delete.
newDeleteResolverRule :: Text -> DeleteResolverRule

-- | <i>See:</i> <a>newDeleteResolverRuleResponse</a> smart constructor.
data DeleteResolverRuleResponse
DeleteResolverRuleResponse' :: Maybe ResolverRule -> Int -> DeleteResolverRuleResponse

-- | Create a value of <a>DeleteResolverRuleResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resolverRule:DeleteResolverRuleResponse'</a>,
--   <a>deleteResolverRuleResponse_resolverRule</a> - Information about the
--   <tt>DeleteResolverRule</tt> request, including the status of the
--   request.
--   
--   <a>$sel:httpStatus:DeleteResolverRuleResponse'</a>,
--   <a>deleteResolverRuleResponse_httpStatus</a> - The response's http
--   status code.
newDeleteResolverRuleResponse :: Int -> DeleteResolverRuleResponse

-- | <i>See:</i> <a>newDeleteFirewallRule</a> smart constructor.
data DeleteFirewallRule
DeleteFirewallRule' :: Text -> Text -> DeleteFirewallRule

-- | Create a value of <a>DeleteFirewallRule</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:firewallRuleGroupId:DeleteFirewallRule'</a>,
--   <a>deleteFirewallRule_firewallRuleGroupId</a> - The unique identifier
--   of the firewall rule group that you want to delete the rule from.
--   
--   <a>$sel:firewallDomainListId:DeleteFirewallRule'</a>,
--   <a>deleteFirewallRule_firewallDomainListId</a> - The ID of the domain
--   list that's used in the rule.
newDeleteFirewallRule :: Text -> Text -> DeleteFirewallRule

-- | <i>See:</i> <a>newDeleteFirewallRuleResponse</a> smart constructor.
data DeleteFirewallRuleResponse
DeleteFirewallRuleResponse' :: Maybe FirewallRule -> Int -> DeleteFirewallRuleResponse

-- | Create a value of <a>DeleteFirewallRuleResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:firewallRule:DeleteFirewallRuleResponse'</a>,
--   <a>deleteFirewallRuleResponse_firewallRule</a> - The specification for
--   the firewall rule that you just deleted.
--   
--   <a>$sel:httpStatus:DeleteFirewallRuleResponse'</a>,
--   <a>deleteFirewallRuleResponse_httpStatus</a> - The response's http
--   status code.
newDeleteFirewallRuleResponse :: Int -> DeleteFirewallRuleResponse

-- | <i>See:</i> <a>newUpdateFirewallRule</a> smart constructor.
data UpdateFirewallRule
UpdateFirewallRule' :: Maybe BlockOverrideDnsType -> Maybe Int -> Maybe BlockResponse -> Maybe Action -> Maybe Natural -> Maybe Text -> Maybe Text -> Text -> Text -> UpdateFirewallRule

-- | Create a value of <a>UpdateFirewallRule</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:blockOverrideDnsType:UpdateFirewallRule'</a>,
--   <a>updateFirewallRule_blockOverrideDnsType</a> - The DNS record's
--   type. This determines the format of the record value that you provided
--   in <tt>BlockOverrideDomain</tt>. Used for the rule action
--   <tt>BLOCK</tt> with a <tt>BlockResponse</tt> setting of
--   <tt>OVERRIDE</tt>.
--   
--   <a>$sel:priority:UpdateFirewallRule'</a>,
--   <a>updateFirewallRule_priority</a> - The setting that determines the
--   processing order of the rule in the rule group. DNS Firewall processes
--   the rules in a rule group by order of priority, starting from the
--   lowest setting.
--   
--   You must specify a unique priority for each rule in a rule group. To
--   make it easier to insert rules later, leave space between the numbers,
--   for example, use 100, 200, and so on. You can change the priority
--   setting for the rules in a rule group at any time.
--   
--   <a>$sel:blockResponse:UpdateFirewallRule'</a>,
--   <a>updateFirewallRule_blockResponse</a> - The way that you want DNS
--   Firewall to block the request. Used for the rule action setting
--   <tt>BLOCK</tt>.
--   
--   <ul>
--   <li><tt>NODATA</tt> - Respond indicating that the query was
--   successful, but no response is available for it.</li>
--   <li><tt>NXDOMAIN</tt> - Respond indicating that the domain name that's
--   in the query doesn't exist.</li>
--   <li><tt>OVERRIDE</tt> - Provide a custom override in the response.
--   This option requires custom handling details in the rule's
--   <tt>BlockOverride*</tt> settings.</li>
--   </ul>
--   
--   <a>$sel:action:UpdateFirewallRule'</a>,
--   <a>updateFirewallRule_action</a> - The action that DNS Firewall should
--   take on a DNS query when it matches one of the domains in the rule's
--   domain list:
--   
--   <ul>
--   <li><tt>ALLOW</tt> - Permit the request to go through.</li>
--   <li><tt>ALERT</tt> - Permit the request to go through but send an
--   alert to the logs.</li>
--   <li><tt>BLOCK</tt> - Disallow the request. This option requires
--   additional details in the rule's <tt>BlockResponse</tt>.</li>
--   </ul>
--   
--   <a>$sel:blockOverrideTtl:UpdateFirewallRule'</a>,
--   <a>updateFirewallRule_blockOverrideTtl</a> - The recommended amount of
--   time, in seconds, for the DNS resolver or web browser to cache the
--   provided override record. Used for the rule action <tt>BLOCK</tt> with
--   a <tt>BlockResponse</tt> setting of <tt>OVERRIDE</tt>.
--   
--   <a>$sel:name:UpdateFirewallRule'</a>, <a>updateFirewallRule_name</a> -
--   The name of the rule.
--   
--   <a>$sel:blockOverrideDomain:UpdateFirewallRule'</a>,
--   <a>updateFirewallRule_blockOverrideDomain</a> - The custom DNS record
--   to send back in response to the query. Used for the rule action
--   <tt>BLOCK</tt> with a <tt>BlockResponse</tt> setting of
--   <tt>OVERRIDE</tt>.
--   
--   <a>$sel:firewallRuleGroupId:UpdateFirewallRule'</a>,
--   <a>updateFirewallRule_firewallRuleGroupId</a> - The unique identifier
--   of the firewall rule group for the rule.
--   
--   <a>$sel:firewallDomainListId:UpdateFirewallRule'</a>,
--   <a>updateFirewallRule_firewallDomainListId</a> - The ID of the domain
--   list to use in the rule.
newUpdateFirewallRule :: Text -> Text -> UpdateFirewallRule

-- | <i>See:</i> <a>newUpdateFirewallRuleResponse</a> smart constructor.
data UpdateFirewallRuleResponse
UpdateFirewallRuleResponse' :: Maybe FirewallRule -> Int -> UpdateFirewallRuleResponse

-- | Create a value of <a>UpdateFirewallRuleResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:firewallRule:UpdateFirewallRuleResponse'</a>,
--   <a>updateFirewallRuleResponse_firewallRule</a> - The firewall rule
--   that you just updated.
--   
--   <a>$sel:httpStatus:UpdateFirewallRuleResponse'</a>,
--   <a>updateFirewallRuleResponse_httpStatus</a> - The response's http
--   status code.
newUpdateFirewallRuleResponse :: Int -> UpdateFirewallRuleResponse

-- | <i>See:</i> <a>newListFirewallRules</a> smart constructor.
data ListFirewallRules
ListFirewallRules' :: Maybe Int -> Maybe Action -> Maybe Text -> Maybe Natural -> Text -> ListFirewallRules

-- | Create a value of <a>ListFirewallRules</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:priority:ListFirewallRules'</a>,
--   <a>listFirewallRules_priority</a> - Optional additional filter for the
--   rules to retrieve.
--   
--   The setting that determines the processing order of the rules in a
--   rule group. DNS Firewall processes the rules in a rule group by order
--   of priority, starting from the lowest setting.
--   
--   <a>$sel:action:ListFirewallRules'</a>, <a>listFirewallRules_action</a>
--   - Optional additional filter for the rules to retrieve.
--   
--   The action that DNS Firewall should take on a DNS query when it
--   matches one of the domains in the rule's domain list:
--   
--   <ul>
--   <li><tt>ALLOW</tt> - Permit the request to go through.</li>
--   <li><tt>ALERT</tt> - Permit the request to go through but send an
--   alert to the logs.</li>
--   <li><tt>BLOCK</tt> - Disallow the request. If this is specified,
--   additional handling details are provided in the rule's
--   <tt>BlockResponse</tt> setting.</li>
--   </ul>
--   
--   <a>$sel:nextToken:ListFirewallRules'</a>,
--   <a>listFirewallRules_nextToken</a> - For the first call to this list
--   request, omit this value.
--   
--   When you request a list of objects, Resolver returns at most the
--   number of objects specified in <tt>MaxResults</tt>. If more objects
--   are available for retrieval, Resolver returns a <tt>NextToken</tt>
--   value in the response. To retrieve the next batch of objects, use the
--   token that was returned for the prior request in your next request.
--   
--   <a>$sel:maxResults:ListFirewallRules'</a>,
--   <a>listFirewallRules_maxResults</a> - The maximum number of objects
--   that you want Resolver to return for this request. If more objects are
--   available, in the response, Resolver provides a <tt>NextToken</tt>
--   value that you can use in a subsequent call to get the next batch of
--   objects.
--   
--   If you don't specify a value for <tt>MaxResults</tt>, Resolver returns
--   up to 100 objects.
--   
--   <a>$sel:firewallRuleGroupId:ListFirewallRules'</a>,
--   <a>listFirewallRules_firewallRuleGroupId</a> - The unique identifier
--   of the firewall rule group that you want to retrieve the rules for.
newListFirewallRules :: Text -> ListFirewallRules

-- | <i>See:</i> <a>newListFirewallRulesResponse</a> smart constructor.
data ListFirewallRulesResponse
ListFirewallRulesResponse' :: Maybe [FirewallRule] -> Maybe Text -> Int -> ListFirewallRulesResponse

-- | Create a value of <a>ListFirewallRulesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:firewallRules:ListFirewallRulesResponse'</a>,
--   <a>listFirewallRulesResponse_firewallRules</a> - A list of the rules
--   that you have defined.
--   
--   This might be a partial list of the firewall rules that you've
--   defined. For information, see <tt>MaxResults</tt>.
--   
--   <a>$sel:nextToken:ListFirewallRules'</a>,
--   <a>listFirewallRulesResponse_nextToken</a> - If objects are still
--   available for retrieval, Resolver returns this token in the response.
--   To retrieve the next batch of objects, provide this token in your next
--   request.
--   
--   <a>$sel:httpStatus:ListFirewallRulesResponse'</a>,
--   <a>listFirewallRulesResponse_httpStatus</a> - The response's http
--   status code.
newListFirewallRulesResponse :: Int -> ListFirewallRulesResponse

-- | <i>See:</i> <a>newGetFirewallRuleGroup</a> smart constructor.
data GetFirewallRuleGroup
GetFirewallRuleGroup' :: Text -> GetFirewallRuleGroup

-- | Create a value of <a>GetFirewallRuleGroup</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:firewallRuleGroupId:GetFirewallRuleGroup'</a>,
--   <a>getFirewallRuleGroup_firewallRuleGroupId</a> - The unique
--   identifier of the firewall rule group.
newGetFirewallRuleGroup :: Text -> GetFirewallRuleGroup

-- | <i>See:</i> <a>newGetFirewallRuleGroupResponse</a> smart constructor.
data GetFirewallRuleGroupResponse
GetFirewallRuleGroupResponse' :: Maybe FirewallRuleGroup -> Int -> GetFirewallRuleGroupResponse

-- | Create a value of <a>GetFirewallRuleGroupResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:firewallRuleGroup:GetFirewallRuleGroupResponse'</a>,
--   <a>getFirewallRuleGroupResponse_firewallRuleGroup</a> - A collection
--   of rules used to filter DNS network traffic.
--   
--   <a>$sel:httpStatus:GetFirewallRuleGroupResponse'</a>,
--   <a>getFirewallRuleGroupResponse_httpStatus</a> - The response's http
--   status code.
newGetFirewallRuleGroupResponse :: Int -> GetFirewallRuleGroupResponse

-- | <i>See:</i> <a>newListResolverRules</a> smart constructor.
data ListResolverRules
ListResolverRules' :: Maybe [Filter] -> Maybe Text -> Maybe Natural -> ListResolverRules

-- | Create a value of <a>ListResolverRules</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:filters:ListResolverRules'</a>,
--   <a>listResolverRules_filters</a> - An optional specification to return
--   a subset of Resolver rules, such as all Resolver rules that are
--   associated with the same Resolver endpoint.
--   
--   If you submit a second or subsequent <tt>ListResolverRules</tt>
--   request and specify the <tt>NextToken</tt> parameter, you must use the
--   same values for <tt>Filters</tt>, if any, as in the previous request.
--   
--   <a>$sel:nextToken:ListResolverRules'</a>,
--   <a>listResolverRules_nextToken</a> - For the first
--   <tt>ListResolverRules</tt> request, omit this value.
--   
--   If you have more than <tt>MaxResults</tt> Resolver rules, you can
--   submit another <tt>ListResolverRules</tt> request to get the next
--   group of Resolver rules. In the next request, specify the value of
--   <tt>NextToken</tt> from the previous response.
--   
--   <a>$sel:maxResults:ListResolverRules'</a>,
--   <a>listResolverRules_maxResults</a> - The maximum number of Resolver
--   rules that you want to return in the response to a
--   <tt>ListResolverRules</tt> request. If you don't specify a value for
--   <tt>MaxResults</tt>, Resolver returns up to 100 Resolver rules.
newListResolverRules :: ListResolverRules

-- | <i>See:</i> <a>newListResolverRulesResponse</a> smart constructor.
data ListResolverRulesResponse
ListResolverRulesResponse' :: Maybe [ResolverRule] -> Maybe Text -> Maybe Natural -> Int -> ListResolverRulesResponse

-- | Create a value of <a>ListResolverRulesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resolverRules:ListResolverRulesResponse'</a>,
--   <a>listResolverRulesResponse_resolverRules</a> - The Resolver rules
--   that were created using the current Amazon Web Services account and
--   that match the specified filters, if any.
--   
--   <a>$sel:nextToken:ListResolverRules'</a>,
--   <a>listResolverRulesResponse_nextToken</a> - If more than
--   <tt>MaxResults</tt> Resolver rules match the specified criteria, you
--   can submit another <tt>ListResolverRules</tt> request to get the next
--   group of results. In the next request, specify the value of
--   <tt>NextToken</tt> from the previous response.
--   
--   <a>$sel:maxResults:ListResolverRules'</a>,
--   <a>listResolverRulesResponse_maxResults</a> - The value that you
--   specified for <tt>MaxResults</tt> in the request.
--   
--   <a>$sel:httpStatus:ListResolverRulesResponse'</a>,
--   <a>listResolverRulesResponse_httpStatus</a> - The response's http
--   status code.
newListResolverRulesResponse :: Int -> ListResolverRulesResponse

-- | <i>See:</i> <a>newCreateResolverEndpoint</a> smart constructor.
data CreateResolverEndpoint
CreateResolverEndpoint' :: Maybe Text -> Maybe [Tag] -> Text -> [Text] -> ResolverEndpointDirection -> NonEmpty IpAddressRequest -> CreateResolverEndpoint

-- | Create a value of <a>CreateResolverEndpoint</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:CreateResolverEndpoint'</a>,
--   <a>createResolverEndpoint_name</a> - A friendly name that lets you
--   easily find a configuration in the Resolver dashboard in the Route 53
--   console.
--   
--   <a>$sel:tags:CreateResolverEndpoint'</a>,
--   <a>createResolverEndpoint_tags</a> - A list of the tag keys and values
--   that you want to associate with the endpoint.
--   
--   <a>$sel:creatorRequestId:CreateResolverEndpoint'</a>,
--   <a>createResolverEndpoint_creatorRequestId</a> - A unique string that
--   identifies the request and that allows failed requests to be retried
--   without the risk of running the operation twice.
--   <tt>CreatorRequestId</tt> can be any unique string, for example, a
--   date/time stamp.
--   
--   <a>$sel:securityGroupIds:CreateResolverEndpoint'</a>,
--   <a>createResolverEndpoint_securityGroupIds</a> - The ID of one or more
--   security groups that you want to use to control access to this VPC.
--   The security group that you specify must include one or more inbound
--   rules (for inbound Resolver endpoints) or outbound rules (for outbound
--   Resolver endpoints). Inbound and outbound rules must allow TCP and UDP
--   access. For inbound access, open port 53. For outbound access, open
--   the port that you're using for DNS queries on your network.
--   
--   <a>$sel:direction:CreateResolverEndpoint'</a>,
--   <a>createResolverEndpoint_direction</a> - Specify the applicable
--   value:
--   
--   <ul>
--   <li><tt>INBOUND</tt>: Resolver forwards DNS queries to the DNS service
--   for a VPC from your network</li>
--   <li><tt>OUTBOUND</tt>: Resolver forwards DNS queries from the DNS
--   service for a VPC to your network</li>
--   </ul>
--   
--   <a>$sel:ipAddresses:CreateResolverEndpoint'</a>,
--   <a>createResolverEndpoint_ipAddresses</a> - The subnets and IP
--   addresses in your VPC that DNS queries originate from (for outbound
--   endpoints) or that you forward DNS queries to (for inbound endpoints).
--   The subnet ID uniquely identifies a VPC.
newCreateResolverEndpoint :: Text -> ResolverEndpointDirection -> NonEmpty IpAddressRequest -> CreateResolverEndpoint

-- | <i>See:</i> <a>newCreateResolverEndpointResponse</a> smart
--   constructor.
data CreateResolverEndpointResponse
CreateResolverEndpointResponse' :: Maybe ResolverEndpoint -> Int -> CreateResolverEndpointResponse

-- | Create a value of <a>CreateResolverEndpointResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resolverEndpoint:CreateResolverEndpointResponse'</a>,
--   <a>createResolverEndpointResponse_resolverEndpoint</a> - Information
--   about the <tt>CreateResolverEndpoint</tt> request, including the
--   status of the request.
--   
--   <a>$sel:httpStatus:CreateResolverEndpointResponse'</a>,
--   <a>createResolverEndpointResponse_httpStatus</a> - The response's http
--   status code.
newCreateResolverEndpointResponse :: Int -> CreateResolverEndpointResponse

-- | <i>See:</i> <a>newAssociateResolverRule</a> smart constructor.
data AssociateResolverRule
AssociateResolverRule' :: Maybe Text -> Text -> Text -> AssociateResolverRule

-- | Create a value of <a>AssociateResolverRule</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:AssociateResolverRule'</a>,
--   <a>associateResolverRule_name</a> - A name for the association that
--   you're creating between a Resolver rule and a VPC.
--   
--   <a>$sel:resolverRuleId:AssociateResolverRule'</a>,
--   <a>associateResolverRule_resolverRuleId</a> - The ID of the Resolver
--   rule that you want to associate with the VPC. To list the existing
--   Resolver rules, use <a>ListResolverRules</a>.
--   
--   <a>$sel:vPCId:AssociateResolverRule'</a>,
--   <a>associateResolverRule_vPCId</a> - The ID of the VPC that you want
--   to associate the Resolver rule with.
newAssociateResolverRule :: Text -> Text -> AssociateResolverRule

-- | <i>See:</i> <a>newAssociateResolverRuleResponse</a> smart constructor.
data AssociateResolverRuleResponse
AssociateResolverRuleResponse' :: Maybe ResolverRuleAssociation -> Int -> AssociateResolverRuleResponse

-- | Create a value of <a>AssociateResolverRuleResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resolverRuleAssociation:AssociateResolverRuleResponse'</a>,
--   <a>associateResolverRuleResponse_resolverRuleAssociation</a> -
--   Information about the <tt>AssociateResolverRule</tt> request,
--   including the status of the request.
--   
--   <a>$sel:httpStatus:AssociateResolverRuleResponse'</a>,
--   <a>associateResolverRuleResponse_httpStatus</a> - The response's http
--   status code.
newAssociateResolverRuleResponse :: Int -> AssociateResolverRuleResponse

-- | <i>See:</i> <a>newGetResolverQueryLogConfigPolicy</a> smart
--   constructor.
data GetResolverQueryLogConfigPolicy
GetResolverQueryLogConfigPolicy' :: Text -> GetResolverQueryLogConfigPolicy

-- | Create a value of <a>GetResolverQueryLogConfigPolicy</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:GetResolverQueryLogConfigPolicy'</a>,
--   <a>getResolverQueryLogConfigPolicy_arn</a> - The ARN of the query
--   logging configuration that you want to get the query logging policy
--   for.
newGetResolverQueryLogConfigPolicy :: Text -> GetResolverQueryLogConfigPolicy

-- | <i>See:</i> <a>newGetResolverQueryLogConfigPolicyResponse</a> smart
--   constructor.
data GetResolverQueryLogConfigPolicyResponse
GetResolverQueryLogConfigPolicyResponse' :: Maybe Text -> Int -> GetResolverQueryLogConfigPolicyResponse

-- | Create a value of <a>GetResolverQueryLogConfigPolicyResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:resolverQueryLogConfigPolicy:GetResolverQueryLogConfigPolicyResponse'</a>,
--   <a>getResolverQueryLogConfigPolicyResponse_resolverQueryLogConfigPolicy</a>
--   - Information about the query logging policy for the query logging
--   configuration that you specified in a
--   <tt>GetResolverQueryLogConfigPolicy</tt> request.
--   
--   <a>$sel:httpStatus:GetResolverQueryLogConfigPolicyResponse'</a>,
--   <a>getResolverQueryLogConfigPolicyResponse_httpStatus</a> - The
--   response's http status code.
newGetResolverQueryLogConfigPolicyResponse :: Int -> GetResolverQueryLogConfigPolicyResponse

-- | <i>See:</i> <a>newUpdateFirewallDomains</a> smart constructor.
data UpdateFirewallDomains
UpdateFirewallDomains' :: Text -> FirewallDomainUpdateOperation -> [Text] -> UpdateFirewallDomains

-- | Create a value of <a>UpdateFirewallDomains</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:firewallDomainListId:UpdateFirewallDomains'</a>,
--   <a>updateFirewallDomains_firewallDomainListId</a> - The ID of the
--   domain list whose domains you want to update.
--   
--   <a>$sel:operation:UpdateFirewallDomains'</a>,
--   <a>updateFirewallDomains_operation</a> - What you want DNS Firewall to
--   do with the domains that you are providing:
--   
--   <ul>
--   <li><tt>ADD</tt> - Add the domains to the ones that are already in the
--   domain list.</li>
--   <li><tt>REMOVE</tt> - Search the domain list for the domains and
--   remove them from the list.</li>
--   <li><tt>REPLACE</tt> - Update the domain list to exactly match the
--   list that you are providing.</li>
--   </ul>
--   
--   <a>$sel:domains:UpdateFirewallDomains'</a>,
--   <a>updateFirewallDomains_domains</a> - A list of domains to use in the
--   update operation.
--   
--   Each domain specification in your domain list must satisfy the
--   following requirements:
--   
--   <ul>
--   <li>It can optionally start with <tt>*</tt> (asterisk).</li>
--   <li>With the exception of the optional starting asterisk, it must only
--   contain the following characters: <tt>A-Z</tt>, <tt>a-z</tt>,
--   <tt>0-9</tt>, <tt>-</tt> (hyphen).</li>
--   <li>It must be from 1-255 characters in length.</li>
--   </ul>
newUpdateFirewallDomains :: Text -> FirewallDomainUpdateOperation -> UpdateFirewallDomains

-- | <i>See:</i> <a>newUpdateFirewallDomainsResponse</a> smart constructor.
data UpdateFirewallDomainsResponse
UpdateFirewallDomainsResponse' :: Maybe FirewallDomainListStatus -> Maybe Text -> Maybe Text -> Maybe Text -> Int -> UpdateFirewallDomainsResponse

-- | Create a value of <a>UpdateFirewallDomainsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:UpdateFirewallDomainsResponse'</a>,
--   <a>updateFirewallDomainsResponse_status</a> -
--   
--   <a>$sel:statusMessage:UpdateFirewallDomainsResponse'</a>,
--   <a>updateFirewallDomainsResponse_statusMessage</a> - Additional
--   information about the status of the list, if available.
--   
--   <a>$sel:name:UpdateFirewallDomainsResponse'</a>,
--   <a>updateFirewallDomainsResponse_name</a> - The name of the domain
--   list.
--   
--   <a>$sel:id:UpdateFirewallDomainsResponse'</a>,
--   <a>updateFirewallDomainsResponse_id</a> - The ID of the firewall
--   domain list that DNS Firewall just updated.
--   
--   <a>$sel:httpStatus:UpdateFirewallDomainsResponse'</a>,
--   <a>updateFirewallDomainsResponse_httpStatus</a> - The response's http
--   status code.
newUpdateFirewallDomainsResponse :: Int -> UpdateFirewallDomainsResponse

-- | <i>See:</i> <a>newListResolverEndpoints</a> smart constructor.
data ListResolverEndpoints
ListResolverEndpoints' :: Maybe [Filter] -> Maybe Text -> Maybe Natural -> ListResolverEndpoints

-- | Create a value of <a>ListResolverEndpoints</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:filters:ListResolverEndpoints'</a>,
--   <a>listResolverEndpoints_filters</a> - An optional specification to
--   return a subset of Resolver endpoints, such as all inbound Resolver
--   endpoints.
--   
--   If you submit a second or subsequent <tt>ListResolverEndpoints</tt>
--   request and specify the <tt>NextToken</tt> parameter, you must use the
--   same values for <tt>Filters</tt>, if any, as in the previous request.
--   
--   <a>$sel:nextToken:ListResolverEndpoints'</a>,
--   <a>listResolverEndpoints_nextToken</a> - For the first
--   <tt>ListResolverEndpoints</tt> request, omit this value.
--   
--   If you have more than <tt>MaxResults</tt> Resolver endpoints, you can
--   submit another <tt>ListResolverEndpoints</tt> request to get the next
--   group of Resolver endpoints. In the next request, specify the value of
--   <tt>NextToken</tt> from the previous response.
--   
--   <a>$sel:maxResults:ListResolverEndpoints'</a>,
--   <a>listResolverEndpoints_maxResults</a> - The maximum number of
--   Resolver endpoints that you want to return in the response to a
--   <tt>ListResolverEndpoints</tt> request. If you don't specify a value
--   for <tt>MaxResults</tt>, Resolver returns up to 100 Resolver
--   endpoints.
newListResolverEndpoints :: ListResolverEndpoints

-- | <i>See:</i> <a>newListResolverEndpointsResponse</a> smart constructor.
data ListResolverEndpointsResponse
ListResolverEndpointsResponse' :: Maybe [ResolverEndpoint] -> Maybe Text -> Maybe Natural -> Int -> ListResolverEndpointsResponse

-- | Create a value of <a>ListResolverEndpointsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resolverEndpoints:ListResolverEndpointsResponse'</a>,
--   <a>listResolverEndpointsResponse_resolverEndpoints</a> - The Resolver
--   endpoints that were created by using the current Amazon Web Services
--   account, and that match the specified filters, if any.
--   
--   <a>$sel:nextToken:ListResolverEndpoints'</a>,
--   <a>listResolverEndpointsResponse_nextToken</a> - If more than
--   <tt>MaxResults</tt> IP addresses match the specified criteria, you can
--   submit another <tt>ListResolverEndpoint</tt> request to get the next
--   group of results. In the next request, specify the value of
--   <tt>NextToken</tt> from the previous response.
--   
--   <a>$sel:maxResults:ListResolverEndpoints'</a>,
--   <a>listResolverEndpointsResponse_maxResults</a> - The value that you
--   specified for <tt>MaxResults</tt> in the request.
--   
--   <a>$sel:httpStatus:ListResolverEndpointsResponse'</a>,
--   <a>listResolverEndpointsResponse_httpStatus</a> - The response's http
--   status code.
newListResolverEndpointsResponse :: Int -> ListResolverEndpointsResponse

-- | <i>See:</i> <a>newListFirewallDomains</a> smart constructor.
data ListFirewallDomains
ListFirewallDomains' :: Maybe Text -> Maybe Natural -> Text -> ListFirewallDomains

-- | Create a value of <a>ListFirewallDomains</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListFirewallDomains'</a>,
--   <a>listFirewallDomains_nextToken</a> - For the first call to this list
--   request, omit this value.
--   
--   When you request a list of objects, Resolver returns at most the
--   number of objects specified in <tt>MaxResults</tt>. If more objects
--   are available for retrieval, Resolver returns a <tt>NextToken</tt>
--   value in the response. To retrieve the next batch of objects, use the
--   token that was returned for the prior request in your next request.
--   
--   <a>$sel:maxResults:ListFirewallDomains'</a>,
--   <a>listFirewallDomains_maxResults</a> - The maximum number of objects
--   that you want Resolver to return for this request. If more objects are
--   available, in the response, Resolver provides a <tt>NextToken</tt>
--   value that you can use in a subsequent call to get the next batch of
--   objects.
--   
--   If you don't specify a value for <tt>MaxResults</tt>, Resolver returns
--   up to 100 objects.
--   
--   <a>$sel:firewallDomainListId:ListFirewallDomains'</a>,
--   <a>listFirewallDomains_firewallDomainListId</a> - The ID of the domain
--   list whose domains you want to retrieve.
newListFirewallDomains :: Text -> ListFirewallDomains

-- | <i>See:</i> <a>newListFirewallDomainsResponse</a> smart constructor.
data ListFirewallDomainsResponse
ListFirewallDomainsResponse' :: Maybe Text -> Maybe [Text] -> Int -> ListFirewallDomainsResponse

-- | Create a value of <a>ListFirewallDomainsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListFirewallDomains'</a>,
--   <a>listFirewallDomainsResponse_nextToken</a> - If objects are still
--   available for retrieval, Resolver returns this token in the response.
--   To retrieve the next batch of objects, provide this token in your next
--   request.
--   
--   <a>$sel:domains:ListFirewallDomainsResponse'</a>,
--   <a>listFirewallDomainsResponse_domains</a> - A list of the domains in
--   the firewall domain list.
--   
--   This might be a partial list of the domains that you've defined in the
--   domain list. For information, see <tt>MaxResults</tt>.
--   
--   <a>$sel:httpStatus:ListFirewallDomainsResponse'</a>,
--   <a>listFirewallDomainsResponse_httpStatus</a> - The response's http
--   status code.
newListFirewallDomainsResponse :: Int -> ListFirewallDomainsResponse

-- | <i>See:</i> <a>newGetResolverRuleAssociation</a> smart constructor.
data GetResolverRuleAssociation
GetResolverRuleAssociation' :: Text -> GetResolverRuleAssociation

-- | Create a value of <a>GetResolverRuleAssociation</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resolverRuleAssociationId:GetResolverRuleAssociation'</a>,
--   <a>getResolverRuleAssociation_resolverRuleAssociationId</a> - The ID
--   of the Resolver rule association that you want to get information
--   about.
newGetResolverRuleAssociation :: Text -> GetResolverRuleAssociation

-- | <i>See:</i> <a>newGetResolverRuleAssociationResponse</a> smart
--   constructor.
data GetResolverRuleAssociationResponse
GetResolverRuleAssociationResponse' :: Maybe ResolverRuleAssociation -> Int -> GetResolverRuleAssociationResponse

-- | Create a value of <a>GetResolverRuleAssociationResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:resolverRuleAssociation:GetResolverRuleAssociationResponse'</a>,
--   <a>getResolverRuleAssociationResponse_resolverRuleAssociation</a> -
--   Information about the Resolver rule association that you specified in
--   a <tt>GetResolverRuleAssociation</tt> request.
--   
--   <a>$sel:httpStatus:GetResolverRuleAssociationResponse'</a>,
--   <a>getResolverRuleAssociationResponse_httpStatus</a> - The response's
--   http status code.
newGetResolverRuleAssociationResponse :: Int -> GetResolverRuleAssociationResponse

-- | <i>See:</i> <a>newGetFirewallConfig</a> smart constructor.
data GetFirewallConfig
GetFirewallConfig' :: Text -> GetFirewallConfig

-- | Create a value of <a>GetFirewallConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceId:GetFirewallConfig'</a>,
--   <a>getFirewallConfig_resourceId</a> - The ID of the VPC from Amazon
--   VPC that the configuration is for.
newGetFirewallConfig :: Text -> GetFirewallConfig

-- | <i>See:</i> <a>newGetFirewallConfigResponse</a> smart constructor.
data GetFirewallConfigResponse
GetFirewallConfigResponse' :: Maybe FirewallConfig -> Int -> GetFirewallConfigResponse

-- | Create a value of <a>GetFirewallConfigResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:firewallConfig:GetFirewallConfigResponse'</a>,
--   <a>getFirewallConfigResponse_firewallConfig</a> - Configuration of the
--   firewall behavior provided by DNS Firewall for a single VPC from
--   AmazonVPC.
--   
--   <a>$sel:httpStatus:GetFirewallConfigResponse'</a>,
--   <a>getFirewallConfigResponse_httpStatus</a> - The response's http
--   status code.
newGetFirewallConfigResponse :: Int -> GetFirewallConfigResponse

-- | <i>See:</i> <a>newGetFirewallDomainList</a> smart constructor.
data GetFirewallDomainList
GetFirewallDomainList' :: Text -> GetFirewallDomainList

-- | Create a value of <a>GetFirewallDomainList</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:firewallDomainListId:GetFirewallDomainList'</a>,
--   <a>getFirewallDomainList_firewallDomainListId</a> - The ID of the
--   domain list.
newGetFirewallDomainList :: Text -> GetFirewallDomainList

-- | <i>See:</i> <a>newGetFirewallDomainListResponse</a> smart constructor.
data GetFirewallDomainListResponse
GetFirewallDomainListResponse' :: Maybe FirewallDomainList -> Int -> GetFirewallDomainListResponse

-- | Create a value of <a>GetFirewallDomainListResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:firewallDomainList:GetFirewallDomainListResponse'</a>,
--   <a>getFirewallDomainListResponse_firewallDomainList</a> - The domain
--   list that you requested.
--   
--   <a>$sel:httpStatus:GetFirewallDomainListResponse'</a>,
--   <a>getFirewallDomainListResponse_httpStatus</a> - The response's http
--   status code.
newGetFirewallDomainListResponse :: Int -> GetFirewallDomainListResponse

-- | <i>See:</i> <a>newDisassociateResolverRule</a> smart constructor.
data DisassociateResolverRule
DisassociateResolverRule' :: Text -> Text -> DisassociateResolverRule

-- | Create a value of <a>DisassociateResolverRule</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:vPCId:DisassociateResolverRule'</a>,
--   <a>disassociateResolverRule_vPCId</a> - The ID of the VPC that you
--   want to disassociate the Resolver rule from.
--   
--   <a>$sel:resolverRuleId:DisassociateResolverRule'</a>,
--   <a>disassociateResolverRule_resolverRuleId</a> - The ID of the
--   Resolver rule that you want to disassociate from the specified VPC.
newDisassociateResolverRule :: Text -> Text -> DisassociateResolverRule

-- | <i>See:</i> <a>newDisassociateResolverRuleResponse</a> smart
--   constructor.
data DisassociateResolverRuleResponse
DisassociateResolverRuleResponse' :: Maybe ResolverRuleAssociation -> Int -> DisassociateResolverRuleResponse

-- | Create a value of <a>DisassociateResolverRuleResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resolverRuleAssociation:DisassociateResolverRuleResponse'</a>,
--   <a>disassociateResolverRuleResponse_resolverRuleAssociation</a> -
--   Information about the <tt>DisassociateResolverRule</tt> request,
--   including the status of the request.
--   
--   <a>$sel:httpStatus:DisassociateResolverRuleResponse'</a>,
--   <a>disassociateResolverRuleResponse_httpStatus</a> - The response's
--   http status code.
newDisassociateResolverRuleResponse :: Int -> DisassociateResolverRuleResponse

-- | <i>See:</i> <a>newGetResolverQueryLogConfigAssociation</a> smart
--   constructor.
data GetResolverQueryLogConfigAssociation
GetResolverQueryLogConfigAssociation' :: Text -> GetResolverQueryLogConfigAssociation

-- | Create a value of <a>GetResolverQueryLogConfigAssociation</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:resolverQueryLogConfigAssociationId:GetResolverQueryLogConfigAssociation'</a>,
--   <a>getResolverQueryLogConfigAssociation_resolverQueryLogConfigAssociationId</a>
--   - The ID of the Resolver query logging configuration association that
--   you want to get information about.
newGetResolverQueryLogConfigAssociation :: Text -> GetResolverQueryLogConfigAssociation

-- | <i>See:</i> <a>newGetResolverQueryLogConfigAssociationResponse</a>
--   smart constructor.
data GetResolverQueryLogConfigAssociationResponse
GetResolverQueryLogConfigAssociationResponse' :: Maybe ResolverQueryLogConfigAssociation -> Int -> GetResolverQueryLogConfigAssociationResponse

-- | Create a value of <a>GetResolverQueryLogConfigAssociationResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:resolverQueryLogConfigAssociation:GetResolverQueryLogConfigAssociationResponse'</a>,
--   <a>getResolverQueryLogConfigAssociationResponse_resolverQueryLogConfigAssociation</a>
--   - Information about the Resolver query logging configuration
--   association that you specified in a
--   <tt>GetQueryLogConfigAssociation</tt> request.
--   
--   <a>$sel:httpStatus:GetResolverQueryLogConfigAssociationResponse'</a>,
--   <a>getResolverQueryLogConfigAssociationResponse_httpStatus</a> - The
--   response's http status code.
newGetResolverQueryLogConfigAssociationResponse :: Int -> GetResolverQueryLogConfigAssociationResponse

-- | <i>See:</i> <a>newListFirewallDomainLists</a> smart constructor.
data ListFirewallDomainLists
ListFirewallDomainLists' :: Maybe Text -> Maybe Natural -> ListFirewallDomainLists

-- | Create a value of <a>ListFirewallDomainLists</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListFirewallDomainLists'</a>,
--   <a>listFirewallDomainLists_nextToken</a> - For the first call to this
--   list request, omit this value.
--   
--   When you request a list of objects, Resolver returns at most the
--   number of objects specified in <tt>MaxResults</tt>. If more objects
--   are available for retrieval, Resolver returns a <tt>NextToken</tt>
--   value in the response. To retrieve the next batch of objects, use the
--   token that was returned for the prior request in your next request.
--   
--   <a>$sel:maxResults:ListFirewallDomainLists'</a>,
--   <a>listFirewallDomainLists_maxResults</a> - The maximum number of
--   objects that you want Resolver to return for this request. If more
--   objects are available, in the response, Resolver provides a
--   <tt>NextToken</tt> value that you can use in a subsequent call to get
--   the next batch of objects.
--   
--   If you don't specify a value for <tt>MaxResults</tt>, Resolver returns
--   up to 100 objects.
newListFirewallDomainLists :: ListFirewallDomainLists

-- | <i>See:</i> <a>newListFirewallDomainListsResponse</a> smart
--   constructor.
data ListFirewallDomainListsResponse
ListFirewallDomainListsResponse' :: Maybe Text -> Maybe [FirewallDomainListMetadata] -> Int -> ListFirewallDomainListsResponse

-- | Create a value of <a>ListFirewallDomainListsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListFirewallDomainLists'</a>,
--   <a>listFirewallDomainListsResponse_nextToken</a> - If objects are
--   still available for retrieval, Resolver returns this token in the
--   response. To retrieve the next batch of objects, provide this token in
--   your next request.
--   
--   <a>$sel:firewallDomainLists:ListFirewallDomainListsResponse'</a>,
--   <a>listFirewallDomainListsResponse_firewallDomainLists</a> - A list of
--   the domain lists that you have defined.
--   
--   This might be a partial list of the domain lists that you've defined.
--   For information, see <tt>MaxResults</tt>.
--   
--   <a>$sel:httpStatus:ListFirewallDomainListsResponse'</a>,
--   <a>listFirewallDomainListsResponse_httpStatus</a> - The response's
--   http status code.
newListFirewallDomainListsResponse :: Int -> ListFirewallDomainListsResponse

-- | <i>See:</i> <a>newDisassociateFirewallRuleGroup</a> smart constructor.
data DisassociateFirewallRuleGroup
DisassociateFirewallRuleGroup' :: Text -> DisassociateFirewallRuleGroup

-- | Create a value of <a>DisassociateFirewallRuleGroup</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:firewallRuleGroupAssociationId:DisassociateFirewallRuleGroup'</a>,
--   <a>disassociateFirewallRuleGroup_firewallRuleGroupAssociationId</a> -
--   The identifier of the FirewallRuleGroupAssociation.
newDisassociateFirewallRuleGroup :: Text -> DisassociateFirewallRuleGroup

-- | <i>See:</i> <a>newDisassociateFirewallRuleGroupResponse</a> smart
--   constructor.
data DisassociateFirewallRuleGroupResponse
DisassociateFirewallRuleGroupResponse' :: Maybe FirewallRuleGroupAssociation -> Int -> DisassociateFirewallRuleGroupResponse

-- | Create a value of <a>DisassociateFirewallRuleGroupResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:firewallRuleGroupAssociation:DisassociateFirewallRuleGroupResponse'</a>,
--   <a>disassociateFirewallRuleGroupResponse_firewallRuleGroupAssociation</a>
--   - The firewall rule group association that you just removed.
--   
--   <a>$sel:httpStatus:DisassociateFirewallRuleGroupResponse'</a>,
--   <a>disassociateFirewallRuleGroupResponse_httpStatus</a> - The
--   response's http status code.
newDisassociateFirewallRuleGroupResponse :: Int -> DisassociateFirewallRuleGroupResponse

-- | <i>See:</i> <a>newUpdateFirewallConfig</a> smart constructor.
data UpdateFirewallConfig
UpdateFirewallConfig' :: Text -> FirewallFailOpenStatus -> UpdateFirewallConfig

-- | Create a value of <a>UpdateFirewallConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceId:UpdateFirewallConfig'</a>,
--   <a>updateFirewallConfig_resourceId</a> - The ID of the VPC that the
--   configuration is for.
--   
--   <a>$sel:firewallFailOpen:UpdateFirewallConfig'</a>,
--   <a>updateFirewallConfig_firewallFailOpen</a> - Determines how Route 53
--   Resolver handles queries during failures, for example when all traffic
--   that is sent to DNS Firewall fails to receive a reply.
--   
--   <ul>
--   <li>By default, fail open is disabled, which means the failure mode is
--   closed. This approach favors security over availability. DNS Firewall
--   blocks queries that it is unable to evaluate properly.</li>
--   <li>If you enable this option, the failure mode is open. This approach
--   favors availability over security. DNS Firewall allows queries to
--   proceed if it is unable to properly evaluate them.</li>
--   </ul>
--   
--   This behavior is only enforced for VPCs that have at least one DNS
--   Firewall rule group association.
newUpdateFirewallConfig :: Text -> FirewallFailOpenStatus -> UpdateFirewallConfig

-- | <i>See:</i> <a>newUpdateFirewallConfigResponse</a> smart constructor.
data UpdateFirewallConfigResponse
UpdateFirewallConfigResponse' :: Maybe FirewallConfig -> Int -> UpdateFirewallConfigResponse

-- | Create a value of <a>UpdateFirewallConfigResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:firewallConfig:UpdateFirewallConfigResponse'</a>,
--   <a>updateFirewallConfigResponse_firewallConfig</a> - Configuration of
--   the firewall behavior provided by DNS Firewall for a single VPC.
--   
--   <a>$sel:httpStatus:UpdateFirewallConfigResponse'</a>,
--   <a>updateFirewallConfigResponse_httpStatus</a> - The response's http
--   status code.
newUpdateFirewallConfigResponse :: Int -> UpdateFirewallConfigResponse

-- | <i>See:</i> <a>newDeleteFirewallDomainList</a> smart constructor.
data DeleteFirewallDomainList
DeleteFirewallDomainList' :: Text -> DeleteFirewallDomainList

-- | Create a value of <a>DeleteFirewallDomainList</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:firewallDomainListId:DeleteFirewallDomainList'</a>,
--   <a>deleteFirewallDomainList_firewallDomainListId</a> - The ID of the
--   domain list that you want to delete.
newDeleteFirewallDomainList :: Text -> DeleteFirewallDomainList

-- | <i>See:</i> <a>newDeleteFirewallDomainListResponse</a> smart
--   constructor.
data DeleteFirewallDomainListResponse
DeleteFirewallDomainListResponse' :: Maybe FirewallDomainList -> Int -> DeleteFirewallDomainListResponse

-- | Create a value of <a>DeleteFirewallDomainListResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:firewallDomainList:DeleteFirewallDomainListResponse'</a>,
--   <a>deleteFirewallDomainListResponse_firewallDomainList</a> - The
--   domain list that you just deleted.
--   
--   <a>$sel:httpStatus:DeleteFirewallDomainListResponse'</a>,
--   <a>deleteFirewallDomainListResponse_httpStatus</a> - The response's
--   http status code.
newDeleteFirewallDomainListResponse :: Int -> DeleteFirewallDomainListResponse

-- | <i>See:</i> <a>newListFirewallConfigs</a> smart constructor.
data ListFirewallConfigs
ListFirewallConfigs' :: Maybe Text -> Maybe Natural -> ListFirewallConfigs

-- | Create a value of <a>ListFirewallConfigs</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListFirewallConfigs'</a>,
--   <a>listFirewallConfigs_nextToken</a> - For the first call to this list
--   request, omit this value.
--   
--   When you request a list of objects, Resolver returns at most the
--   number of objects specified in <tt>MaxResults</tt>. If more objects
--   are available for retrieval, Resolver returns a <tt>NextToken</tt>
--   value in the response. To retrieve the next batch of objects, use the
--   token that was returned for the prior request in your next request.
--   
--   <a>$sel:maxResults:ListFirewallConfigs'</a>,
--   <a>listFirewallConfigs_maxResults</a> - The maximum number of objects
--   that you want Resolver to return for this request. If more objects are
--   available, in the response, Resolver provides a <tt>NextToken</tt>
--   value that you can use in a subsequent call to get the next batch of
--   objects.
--   
--   If you don't specify a value for <tt>MaxResults</tt>, Resolver returns
--   up to 100 objects.
newListFirewallConfigs :: ListFirewallConfigs

-- | <i>See:</i> <a>newListFirewallConfigsResponse</a> smart constructor.
data ListFirewallConfigsResponse
ListFirewallConfigsResponse' :: Maybe Text -> Maybe [FirewallConfig] -> Int -> ListFirewallConfigsResponse

-- | Create a value of <a>ListFirewallConfigsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListFirewallConfigs'</a>,
--   <a>listFirewallConfigsResponse_nextToken</a> - If objects are still
--   available for retrieval, Resolver returns this token in the response.
--   To retrieve the next batch of objects, provide this token in your next
--   request.
--   
--   <a>$sel:firewallConfigs:ListFirewallConfigsResponse'</a>,
--   <a>listFirewallConfigsResponse_firewallConfigs</a> - The
--   configurations for the firewall behavior provided by DNS Firewall for
--   VPCs from Amazon Virtual Private Cloud (Amazon VPC).
--   
--   <a>$sel:httpStatus:ListFirewallConfigsResponse'</a>,
--   <a>listFirewallConfigsResponse_httpStatus</a> - The response's http
--   status code.
newListFirewallConfigsResponse :: Int -> ListFirewallConfigsResponse

-- | <i>See:</i> <a>newCreateFirewallDomainList</a> smart constructor.
data CreateFirewallDomainList
CreateFirewallDomainList' :: Maybe [Tag] -> Text -> Text -> CreateFirewallDomainList

-- | Create a value of <a>CreateFirewallDomainList</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:CreateFirewallDomainList'</a>,
--   <a>createFirewallDomainList_tags</a> - A list of the tag keys and
--   values that you want to associate with the domain list.
--   
--   <a>$sel:creatorRequestId:CreateFirewallDomainList'</a>,
--   <a>createFirewallDomainList_creatorRequestId</a> - A unique string
--   that identifies the request and that allows you to retry failed
--   requests without the risk of running the operation twice.
--   <tt>CreatorRequestId</tt> can be any unique string, for example, a
--   date/time stamp.
--   
--   <a>$sel:name:CreateFirewallDomainList'</a>,
--   <a>createFirewallDomainList_name</a> - A name that lets you identify
--   the domain list to manage and use it.
newCreateFirewallDomainList :: Text -> Text -> CreateFirewallDomainList

-- | <i>See:</i> <a>newCreateFirewallDomainListResponse</a> smart
--   constructor.
data CreateFirewallDomainListResponse
CreateFirewallDomainListResponse' :: Maybe FirewallDomainList -> Int -> CreateFirewallDomainListResponse

-- | Create a value of <a>CreateFirewallDomainListResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:firewallDomainList:CreateFirewallDomainListResponse'</a>,
--   <a>createFirewallDomainListResponse_firewallDomainList</a> - The
--   domain list that you just created.
--   
--   <a>$sel:httpStatus:CreateFirewallDomainListResponse'</a>,
--   <a>createFirewallDomainListResponse_httpStatus</a> - The response's
--   http status code.
newCreateFirewallDomainListResponse :: Int -> CreateFirewallDomainListResponse

-- | <i>See:</i> <a>newImportFirewallDomains</a> smart constructor.
data ImportFirewallDomains
ImportFirewallDomains' :: Text -> FirewallDomainImportOperation -> Text -> ImportFirewallDomains

-- | Create a value of <a>ImportFirewallDomains</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:firewallDomainListId:ImportFirewallDomains'</a>,
--   <a>importFirewallDomains_firewallDomainListId</a> - The ID of the
--   domain list that you want to modify with the import operation.
--   
--   <a>$sel:operation:ImportFirewallDomains'</a>,
--   <a>importFirewallDomains_operation</a> - What you want DNS Firewall to
--   do with the domains that are listed in the file. This must be set to
--   <tt>REPLACE</tt>, which updates the domain list to exactly match the
--   list in the file.
--   
--   <a>$sel:domainFileUrl:ImportFirewallDomains'</a>,
--   <a>importFirewallDomains_domainFileUrl</a> - The fully qualified URL
--   or URI of the file stored in Amazon Simple Storage Service (Amazon S3)
--   that contains the list of domains to import.
--   
--   The file must be in an S3 bucket that's in the same Region as your DNS
--   Firewall. The file must be a text file and must contain a single
--   domain per line.
newImportFirewallDomains :: Text -> FirewallDomainImportOperation -> Text -> ImportFirewallDomains

-- | <i>See:</i> <a>newImportFirewallDomainsResponse</a> smart constructor.
data ImportFirewallDomainsResponse
ImportFirewallDomainsResponse' :: Maybe FirewallDomainListStatus -> Maybe Text -> Maybe Text -> Maybe Text -> Int -> ImportFirewallDomainsResponse

-- | Create a value of <a>ImportFirewallDomainsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:ImportFirewallDomainsResponse'</a>,
--   <a>importFirewallDomainsResponse_status</a> -
--   
--   <a>$sel:statusMessage:ImportFirewallDomainsResponse'</a>,
--   <a>importFirewallDomainsResponse_statusMessage</a> - Additional
--   information about the status of the list, if available.
--   
--   <a>$sel:name:ImportFirewallDomainsResponse'</a>,
--   <a>importFirewallDomainsResponse_name</a> - The name of the domain
--   list.
--   
--   <a>$sel:id:ImportFirewallDomainsResponse'</a>,
--   <a>importFirewallDomainsResponse_id</a> - The Id of the firewall
--   domain list that DNS Firewall just updated.
--   
--   <a>$sel:httpStatus:ImportFirewallDomainsResponse'</a>,
--   <a>importFirewallDomainsResponse_httpStatus</a> - The response's http
--   status code.
newImportFirewallDomainsResponse :: Int -> ImportFirewallDomainsResponse

-- | <i>See:</i> <a>newDisassociateResolverQueryLogConfig</a> smart
--   constructor.
data DisassociateResolverQueryLogConfig
DisassociateResolverQueryLogConfig' :: Text -> Text -> DisassociateResolverQueryLogConfig

-- | Create a value of <a>DisassociateResolverQueryLogConfig</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:resolverQueryLogConfigId:DisassociateResolverQueryLogConfig'</a>,
--   <a>disassociateResolverQueryLogConfig_resolverQueryLogConfigId</a> -
--   The ID of the query logging configuration that you want to
--   disassociate a specified VPC from.
--   
--   <a>$sel:resourceId:DisassociateResolverQueryLogConfig'</a>,
--   <a>disassociateResolverQueryLogConfig_resourceId</a> - The ID of the
--   Amazon VPC that you want to disassociate from a specified query
--   logging configuration.
newDisassociateResolverQueryLogConfig :: Text -> Text -> DisassociateResolverQueryLogConfig

-- | <i>See:</i> <a>newDisassociateResolverQueryLogConfigResponse</a> smart
--   constructor.
data DisassociateResolverQueryLogConfigResponse
DisassociateResolverQueryLogConfigResponse' :: Maybe ResolverQueryLogConfigAssociation -> Int -> DisassociateResolverQueryLogConfigResponse

-- | Create a value of <a>DisassociateResolverQueryLogConfigResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:resolverQueryLogConfigAssociation:DisassociateResolverQueryLogConfigResponse'</a>,
--   <a>disassociateResolverQueryLogConfigResponse_resolverQueryLogConfigAssociation</a>
--   - A complex type that contains settings for the association that you
--   deleted between an Amazon VPC and a query logging configuration.
--   
--   <a>$sel:httpStatus:DisassociateResolverQueryLogConfigResponse'</a>,
--   <a>disassociateResolverQueryLogConfigResponse_httpStatus</a> - The
--   response's http status code.
newDisassociateResolverQueryLogConfigResponse :: Int -> DisassociateResolverQueryLogConfigResponse

-- | <i>See:</i> <a>newTagResource</a> smart constructor.
data TagResource
TagResource' :: Text -> [Tag] -> TagResource

-- | Create a value of <a>TagResource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:TagResource'</a>, <a>tagResource_resourceArn</a> -
--   The Amazon Resource Name (ARN) for the resource that you want to add
--   tags to. To get the ARN for a resource, use the applicable
--   <tt>Get</tt> or <tt>List</tt> command:
--   
--   <ul>
--   <li><a>GetResolverEndpoint</a></li>
--   <li><a>GetResolverRule</a></li>
--   <li><a>GetResolverRuleAssociation</a></li>
--   <li><a>ListResolverEndpoints</a></li>
--   <li><a>ListResolverRuleAssociations</a></li>
--   <li><a>ListResolverRules</a></li>
--   </ul>
--   
--   <a>$sel:tags:TagResource'</a>, <a>tagResource_tags</a> - The tags that
--   you want to add to the specified resource.
newTagResource :: Text -> TagResource

-- | <i>See:</i> <a>newTagResourceResponse</a> smart constructor.
data TagResourceResponse
TagResourceResponse' :: Int -> TagResourceResponse

-- | Create a value of <a>TagResourceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:TagResourceResponse'</a>,
--   <a>tagResourceResponse_httpStatus</a> - The response's http status
--   code.
newTagResourceResponse :: Int -> TagResourceResponse

-- | <i>See:</i> <a>newAssociateFirewallRuleGroup</a> smart constructor.
data AssociateFirewallRuleGroup
AssociateFirewallRuleGroup' :: Maybe MutationProtectionStatus -> Maybe [Tag] -> Text -> Text -> Text -> Int -> Text -> AssociateFirewallRuleGroup

-- | Create a value of <a>AssociateFirewallRuleGroup</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:mutationProtection:AssociateFirewallRuleGroup'</a>,
--   <a>associateFirewallRuleGroup_mutationProtection</a> - If enabled,
--   this setting disallows modification or removal of the association, to
--   help prevent against accidentally altering DNS firewall protections.
--   When you create the association, the default setting is
--   <tt>DISABLED</tt>.
--   
--   <a>$sel:tags:AssociateFirewallRuleGroup'</a>,
--   <a>associateFirewallRuleGroup_tags</a> - A list of the tag keys and
--   values that you want to associate with the rule group association.
--   
--   <a>$sel:creatorRequestId:AssociateFirewallRuleGroup'</a>,
--   <a>associateFirewallRuleGroup_creatorRequestId</a> - A unique string
--   that identifies the request and that allows failed requests to be
--   retried without the risk of running the operation twice.
--   <tt>CreatorRequestId</tt> can be any unique string, for example, a
--   date/time stamp.
--   
--   <a>$sel:firewallRuleGroupId:AssociateFirewallRuleGroup'</a>,
--   <a>associateFirewallRuleGroup_firewallRuleGroupId</a> - The unique
--   identifier of the firewall rule group.
--   
--   <a>$sel:vpcId:AssociateFirewallRuleGroup'</a>,
--   <a>associateFirewallRuleGroup_vpcId</a> - The unique identifier of the
--   VPC that you want to associate with the rule group.
--   
--   <a>$sel:priority:AssociateFirewallRuleGroup'</a>,
--   <a>associateFirewallRuleGroup_priority</a> - The setting that
--   determines the processing order of the rule group among the rule
--   groups that you associate with the specified VPC. DNS Firewall filters
--   VPC traffic starting from the rule group with the lowest numeric
--   priority setting.
--   
--   You must specify a unique priority for each rule group that you
--   associate with a single VPC. To make it easier to insert rule groups
--   later, leave space between the numbers, for example, use 101, 200, and
--   so on. You can change the priority setting for a rule group
--   association after you create it.
--   
--   The allowed values for <tt>Priority</tt> are between 100 and 9900.
--   
--   <a>$sel:name:AssociateFirewallRuleGroup'</a>,
--   <a>associateFirewallRuleGroup_name</a> - A name that lets you identify
--   the association, to manage and use it.
newAssociateFirewallRuleGroup :: Text -> Text -> Text -> Int -> Text -> AssociateFirewallRuleGroup

-- | <i>See:</i> <a>newAssociateFirewallRuleGroupResponse</a> smart
--   constructor.
data AssociateFirewallRuleGroupResponse
AssociateFirewallRuleGroupResponse' :: Maybe FirewallRuleGroupAssociation -> Int -> AssociateFirewallRuleGroupResponse

-- | Create a value of <a>AssociateFirewallRuleGroupResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:firewallRuleGroupAssociation:AssociateFirewallRuleGroupResponse'</a>,
--   <a>associateFirewallRuleGroupResponse_firewallRuleGroupAssociation</a>
--   - The association that you just created. The association has an ID
--   that you can use to identify it in other requests, like update and
--   delete.
--   
--   <a>$sel:httpStatus:AssociateFirewallRuleGroupResponse'</a>,
--   <a>associateFirewallRuleGroupResponse_httpStatus</a> - The response's
--   http status code.
newAssociateFirewallRuleGroupResponse :: Int -> AssociateFirewallRuleGroupResponse

-- | <i>See:</i> <a>newUntagResource</a> smart constructor.
data UntagResource
UntagResource' :: Text -> [Text] -> UntagResource

-- | Create a value of <a>UntagResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:UntagResource'</a>,
--   <a>untagResource_resourceArn</a> - The Amazon Resource Name (ARN) for
--   the resource that you want to remove tags from. To get the ARN for a
--   resource, use the applicable <tt>Get</tt> or <tt>List</tt> command:
--   
--   <ul>
--   <li><a>GetResolverEndpoint</a></li>
--   <li><a>GetResolverRule</a></li>
--   <li><a>GetResolverRuleAssociation</a></li>
--   <li><a>ListResolverEndpoints</a></li>
--   <li><a>ListResolverRuleAssociations</a></li>
--   <li><a>ListResolverRules</a></li>
--   </ul>
--   
--   <a>$sel:tagKeys:UntagResource'</a>, <a>untagResource_tagKeys</a> - The
--   tags that you want to remove to the specified resource.
newUntagResource :: Text -> UntagResource

-- | <i>See:</i> <a>newUntagResourceResponse</a> smart constructor.
data UntagResourceResponse
UntagResourceResponse' :: Int -> UntagResourceResponse

-- | Create a value of <a>UntagResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UntagResourceResponse'</a>,
--   <a>untagResourceResponse_httpStatus</a> - The response's http status
--   code.
newUntagResourceResponse :: Int -> UntagResourceResponse

-- | <i>See:</i> <a>newPutResolverQueryLogConfigPolicy</a> smart
--   constructor.
data PutResolverQueryLogConfigPolicy
PutResolverQueryLogConfigPolicy' :: Text -> Text -> PutResolverQueryLogConfigPolicy

-- | Create a value of <a>PutResolverQueryLogConfigPolicy</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:PutResolverQueryLogConfigPolicy'</a>,
--   <a>putResolverQueryLogConfigPolicy_arn</a> - The Amazon Resource Name
--   (ARN) of the account that you want to share rules with.
--   
--   
--   <a>$sel:resolverQueryLogConfigPolicy:PutResolverQueryLogConfigPolicy'</a>,
--   <a>putResolverQueryLogConfigPolicy_resolverQueryLogConfigPolicy</a> -
--   An Identity and Access Management policy statement that lists the
--   query logging configurations that you want to share with another
--   Amazon Web Services account and the operations that you want the
--   account to be able to perform. You can specify the following
--   operations in the <tt>Actions</tt> section of the statement:
--   
--   <ul>
--   <li><pre>route53resolver:AssociateResolverQueryLogConfig</pre></li>
--   <li><pre>route53resolver:DisassociateResolverQueryLogConfig</pre></li>
--   
--   <li><pre>route53resolver:ListResolverQueryLogConfigAssociations</pre></li>
--   <li><pre>route53resolver:ListResolverQueryLogConfigs</pre></li>
--   </ul>
--   
--   In the <tt>Resource</tt> section of the statement, you specify the
--   ARNs for the query logging configurations that you want to share with
--   the account that you specified in <tt>Arn</tt>.
newPutResolverQueryLogConfigPolicy :: Text -> Text -> PutResolverQueryLogConfigPolicy

-- | The response to a <tt>PutResolverQueryLogConfigPolicy</tt> request.
--   
--   <i>See:</i> <a>newPutResolverQueryLogConfigPolicyResponse</a> smart
--   constructor.
data PutResolverQueryLogConfigPolicyResponse
PutResolverQueryLogConfigPolicyResponse' :: Maybe Bool -> Int -> PutResolverQueryLogConfigPolicyResponse

-- | Create a value of <a>PutResolverQueryLogConfigPolicyResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:returnValue:PutResolverQueryLogConfigPolicyResponse'</a>,
--   <a>putResolverQueryLogConfigPolicyResponse_returnValue</a> - Whether
--   the <tt>PutResolverQueryLogConfigPolicy</tt> request was successful.
--   
--   <a>$sel:httpStatus:PutResolverQueryLogConfigPolicyResponse'</a>,
--   <a>putResolverQueryLogConfigPolicyResponse_httpStatus</a> - The
--   response's http status code.
newPutResolverQueryLogConfigPolicyResponse :: Int -> PutResolverQueryLogConfigPolicyResponse

-- | <i>See:</i> <a>newAssociateResolverEndpointIpAddress</a> smart
--   constructor.
data AssociateResolverEndpointIpAddress
AssociateResolverEndpointIpAddress' :: Text -> IpAddressUpdate -> AssociateResolverEndpointIpAddress

-- | Create a value of <a>AssociateResolverEndpointIpAddress</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resolverEndpointId:AssociateResolverEndpointIpAddress'</a>,
--   <a>associateResolverEndpointIpAddress_resolverEndpointId</a> - The ID
--   of the Resolver endpoint that you want to associate IP addresses with.
--   
--   <a>$sel:ipAddress:AssociateResolverEndpointIpAddress'</a>,
--   <a>associateResolverEndpointIpAddress_ipAddress</a> - Either the IPv4
--   address that you want to add to a Resolver endpoint or a subnet ID. If
--   you specify a subnet ID, Resolver chooses an IP address for you from
--   the available IPs in the specified subnet.
newAssociateResolverEndpointIpAddress :: Text -> IpAddressUpdate -> AssociateResolverEndpointIpAddress

-- | <i>See:</i> <a>newAssociateResolverEndpointIpAddressResponse</a> smart
--   constructor.
data AssociateResolverEndpointIpAddressResponse
AssociateResolverEndpointIpAddressResponse' :: Maybe ResolverEndpoint -> Int -> AssociateResolverEndpointIpAddressResponse

-- | Create a value of <a>AssociateResolverEndpointIpAddressResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:resolverEndpoint:AssociateResolverEndpointIpAddressResponse'</a>,
--   <a>associateResolverEndpointIpAddressResponse_resolverEndpoint</a> -
--   The response to an <tt>AssociateResolverEndpointIpAddress</tt>
--   request.
--   
--   <a>$sel:httpStatus:AssociateResolverEndpointIpAddressResponse'</a>,
--   <a>associateResolverEndpointIpAddressResponse_httpStatus</a> - The
--   response's http status code.
newAssociateResolverEndpointIpAddressResponse :: Int -> AssociateResolverEndpointIpAddressResponse

-- | <i>See:</i> <a>newCreateResolverQueryLogConfig</a> smart constructor.
data CreateResolverQueryLogConfig
CreateResolverQueryLogConfig' :: Maybe [Tag] -> Text -> Text -> Text -> CreateResolverQueryLogConfig

-- | Create a value of <a>CreateResolverQueryLogConfig</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:CreateResolverQueryLogConfig'</a>,
--   <a>createResolverQueryLogConfig_tags</a> - A list of the tag keys and
--   values that you want to associate with the query logging
--   configuration.
--   
--   <a>$sel:name:CreateResolverQueryLogConfig'</a>,
--   <a>createResolverQueryLogConfig_name</a> - The name that you want to
--   give the query logging configuration.
--   
--   <a>$sel:destinationArn:CreateResolverQueryLogConfig'</a>,
--   <a>createResolverQueryLogConfig_destinationArn</a> - The ARN of the
--   resource that you want Resolver to send query logs. You can send query
--   logs to an S3 bucket, a CloudWatch Logs log group, or a Kinesis Data
--   Firehose delivery stream. Examples of valid values include the
--   following:
--   
--   <ul>
--   <li><b>S3 bucket</b>:<pre>arn:aws:s3:::examplebucket</pre>You can
--   optionally append a file prefix to the end of the
--   ARN.<pre>arn:aws:s3:::examplebucket/development/</pre></li>
--   <li><b>CloudWatch Logs log
--   group</b>:<pre>arn:aws:logs:us-west-1:123456789012:log-group:/mystack-testgroup-12ABC1AB12A1:*</pre></li>
--   <li><b>Kinesis Data Firehose delivery
--   stream</b>:<pre>arn:aws:kinesis:us-east-2:0123456789:stream/my_stream_name</pre></li>
--   </ul>
--   
--   <a>$sel:creatorRequestId:CreateResolverQueryLogConfig'</a>,
--   <a>createResolverQueryLogConfig_creatorRequestId</a> - A unique string
--   that identifies the request and that allows failed requests to be
--   retried without the risk of running the operation twice.
--   <tt>CreatorRequestId</tt> can be any unique string, for example, a
--   date/time stamp.
newCreateResolverQueryLogConfig :: Text -> Text -> Text -> CreateResolverQueryLogConfig

-- | <i>See:</i> <a>newCreateResolverQueryLogConfigResponse</a> smart
--   constructor.
data CreateResolverQueryLogConfigResponse
CreateResolverQueryLogConfigResponse' :: Maybe ResolverQueryLogConfig -> Int -> CreateResolverQueryLogConfigResponse

-- | Create a value of <a>CreateResolverQueryLogConfigResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:resolverQueryLogConfig:CreateResolverQueryLogConfigResponse'</a>,
--   <a>createResolverQueryLogConfigResponse_resolverQueryLogConfig</a> -
--   Information about the <tt>CreateResolverQueryLogConfig</tt> request,
--   including the status of the request.
--   
--   <a>$sel:httpStatus:CreateResolverQueryLogConfigResponse'</a>,
--   <a>createResolverQueryLogConfigResponse_httpStatus</a> - The
--   response's http status code.
newCreateResolverQueryLogConfigResponse :: Int -> CreateResolverQueryLogConfigResponse

-- | <i>See:</i> <a>newGetResolverRule</a> smart constructor.
data GetResolverRule
GetResolverRule' :: Text -> GetResolverRule

-- | Create a value of <a>GetResolverRule</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resolverRuleId:GetResolverRule'</a>,
--   <a>getResolverRule_resolverRuleId</a> - The ID of the Resolver rule
--   that you want to get information about.
newGetResolverRule :: Text -> GetResolverRule

-- | <i>See:</i> <a>newGetResolverRuleResponse</a> smart constructor.
data GetResolverRuleResponse
GetResolverRuleResponse' :: Maybe ResolverRule -> Int -> GetResolverRuleResponse

-- | Create a value of <a>GetResolverRuleResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resolverRule:GetResolverRuleResponse'</a>,
--   <a>getResolverRuleResponse_resolverRule</a> - Information about the
--   Resolver rule that you specified in a <tt>GetResolverRule</tt>
--   request.
--   
--   <a>$sel:httpStatus:GetResolverRuleResponse'</a>,
--   <a>getResolverRuleResponse_httpStatus</a> - The response's http status
--   code.
newGetResolverRuleResponse :: Int -> GetResolverRuleResponse

-- | <i>See:</i> <a>newPutFirewallRuleGroupPolicy</a> smart constructor.
data PutFirewallRuleGroupPolicy
PutFirewallRuleGroupPolicy' :: Text -> Text -> PutFirewallRuleGroupPolicy

-- | Create a value of <a>PutFirewallRuleGroupPolicy</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:PutFirewallRuleGroupPolicy'</a>,
--   <a>putFirewallRuleGroupPolicy_arn</a> - The ARN (Amazon Resource Name)
--   for the rule group that you want to share.
--   
--   <a>$sel:firewallRuleGroupPolicy:PutFirewallRuleGroupPolicy'</a>,
--   <a>putFirewallRuleGroupPolicy_firewallRuleGroupPolicy</a> - The
--   Identity and Access Management (Amazon Web Services IAM) policy to
--   attach to the rule group.
newPutFirewallRuleGroupPolicy :: Text -> Text -> PutFirewallRuleGroupPolicy

-- | <i>See:</i> <a>newPutFirewallRuleGroupPolicyResponse</a> smart
--   constructor.
data PutFirewallRuleGroupPolicyResponse
PutFirewallRuleGroupPolicyResponse' :: Maybe Bool -> Int -> PutFirewallRuleGroupPolicyResponse

-- | Create a value of <a>PutFirewallRuleGroupPolicyResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:returnValue:PutFirewallRuleGroupPolicyResponse'</a>,
--   <a>putFirewallRuleGroupPolicyResponse_returnValue</a> -
--   
--   <a>$sel:httpStatus:PutFirewallRuleGroupPolicyResponse'</a>,
--   <a>putFirewallRuleGroupPolicyResponse_httpStatus</a> - The response's
--   http status code.
newPutFirewallRuleGroupPolicyResponse :: Int -> PutFirewallRuleGroupPolicyResponse

-- | <i>See:</i> <a>newPutResolverRulePolicy</a> smart constructor.
data PutResolverRulePolicy
PutResolverRulePolicy' :: Text -> Text -> PutResolverRulePolicy

-- | Create a value of <a>PutResolverRulePolicy</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:PutResolverRulePolicy'</a>,
--   <a>putResolverRulePolicy_arn</a> - The Amazon Resource Name (ARN) of
--   the rule that you want to share with another account.
--   
--   <a>$sel:resolverRulePolicy:PutResolverRulePolicy'</a>,
--   <a>putResolverRulePolicy_resolverRulePolicy</a> - An Identity and
--   Access Management policy statement that lists the rules that you want
--   to share with another Amazon Web Services account and the operations
--   that you want the account to be able to perform. You can specify the
--   following operations in the <tt>Action</tt> section of the statement:
--   
--   <ul>
--   <li><pre>route53resolver:GetResolverRule</pre></li>
--   <li><pre>route53resolver:AssociateResolverRule</pre></li>
--   <li><pre>route53resolver:DisassociateResolverRule</pre></li>
--   <li><pre>route53resolver:ListResolverRules</pre></li>
--   <li><pre>route53resolver:ListResolverRuleAssociations</pre></li>
--   </ul>
--   
--   In the <tt>Resource</tt> section of the statement, specify the ARN for
--   the rule that you want to share with another account. Specify the same
--   ARN that you specified in <tt>Arn</tt>.
newPutResolverRulePolicy :: Text -> Text -> PutResolverRulePolicy

-- | The response to a <tt>PutResolverRulePolicy</tt> request.
--   
--   <i>See:</i> <a>newPutResolverRulePolicyResponse</a> smart constructor.
data PutResolverRulePolicyResponse
PutResolverRulePolicyResponse' :: Maybe Bool -> Int -> PutResolverRulePolicyResponse

-- | Create a value of <a>PutResolverRulePolicyResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:returnValue:PutResolverRulePolicyResponse'</a>,
--   <a>putResolverRulePolicyResponse_returnValue</a> - Whether the
--   <tt>PutResolverRulePolicy</tt> request was successful.
--   
--   <a>$sel:httpStatus:PutResolverRulePolicyResponse'</a>,
--   <a>putResolverRulePolicyResponse_httpStatus</a> - The response's http
--   status code.
newPutResolverRulePolicyResponse :: Int -> PutResolverRulePolicyResponse

-- | <i>See:</i> <a>newListResolverDnssecConfigs</a> smart constructor.
data ListResolverDnssecConfigs
ListResolverDnssecConfigs' :: Maybe [Filter] -> Maybe Text -> Maybe Natural -> ListResolverDnssecConfigs

-- | Create a value of <a>ListResolverDnssecConfigs</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:filters:ListResolverDnssecConfigs'</a>,
--   <a>listResolverDnssecConfigs_filters</a> - An optional specification
--   to return a subset of objects.
--   
--   <a>$sel:nextToken:ListResolverDnssecConfigs'</a>,
--   <a>listResolverDnssecConfigs_nextToken</a> - (Optional) If the current
--   Amazon Web Services account has more than <tt>MaxResults</tt> DNSSEC
--   configurations, use <tt>NextToken</tt> to get the second and
--   subsequent pages of results.
--   
--   For the first <tt>ListResolverDnssecConfigs</tt> request, omit this
--   value.
--   
--   For the second and subsequent requests, get the value of
--   <tt>NextToken</tt> from the previous response and specify that value
--   for <tt>NextToken</tt> in the request.
--   
--   <a>$sel:maxResults:ListResolverDnssecConfigs'</a>,
--   <a>listResolverDnssecConfigs_maxResults</a> - <i>Optional</i>: An
--   integer that specifies the maximum number of DNSSEC configuration
--   results that you want Amazon Route 53 to return. If you don't specify
--   a value for <tt>MaxResults</tt>, Route 53 returns up to 100
--   configuration per page.
newListResolverDnssecConfigs :: ListResolverDnssecConfigs

-- | <i>See:</i> <a>newListResolverDnssecConfigsResponse</a> smart
--   constructor.
data ListResolverDnssecConfigsResponse
ListResolverDnssecConfigsResponse' :: Maybe Text -> Maybe [ResolverDnssecConfig] -> Int -> ListResolverDnssecConfigsResponse

-- | Create a value of <a>ListResolverDnssecConfigsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListResolverDnssecConfigs'</a>,
--   <a>listResolverDnssecConfigsResponse_nextToken</a> - If a response
--   includes the last of the DNSSEC configurations that are associated
--   with the current Amazon Web Services account, <tt>NextToken</tt>
--   doesn't appear in the response.
--   
--   If a response doesn't include the last of the configurations, you can
--   get more configurations by submitting another
--   <a>ListResolverDnssecConfigs</a> request. Get the value of
--   <tt>NextToken</tt> that Amazon Route 53 returned in the previous
--   response and include it in <tt>NextToken</tt> in the next request.
--   
--   <a>$sel:resolverDnssecConfigs:ListResolverDnssecConfigsResponse'</a>,
--   <a>listResolverDnssecConfigsResponse_resolverDnssecConfigs</a> - An
--   array that contains one <a>ResolverDnssecConfig</a> element for each
--   configuration for DNSSEC validation that is associated with the
--   current Amazon Web Services account.
--   
--   <a>$sel:httpStatus:ListResolverDnssecConfigsResponse'</a>,
--   <a>listResolverDnssecConfigsResponse_httpStatus</a> - The response's
--   http status code.
newListResolverDnssecConfigsResponse :: Int -> ListResolverDnssecConfigsResponse

-- | <i>See:</i> <a>newUpdateResolverDnssecConfig</a> smart constructor.
data UpdateResolverDnssecConfig
UpdateResolverDnssecConfig' :: Text -> Validation -> UpdateResolverDnssecConfig

-- | Create a value of <a>UpdateResolverDnssecConfig</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceId:UpdateResolverDnssecConfig'</a>,
--   <a>updateResolverDnssecConfig_resourceId</a> - The ID of the virtual
--   private cloud (VPC) that you're updating the DNSSEC validation status
--   for.
--   
--   <a>$sel:validation:UpdateResolverDnssecConfig'</a>,
--   <a>updateResolverDnssecConfig_validation</a> - The new value that you
--   are specifying for DNSSEC validation for the VPC. The value can be
--   <tt>ENABLE</tt> or <tt>DISABLE</tt>. Be aware that it can take time
--   for a validation status change to be completed.
newUpdateResolverDnssecConfig :: Text -> Validation -> UpdateResolverDnssecConfig

-- | <i>See:</i> <a>newUpdateResolverDnssecConfigResponse</a> smart
--   constructor.
data UpdateResolverDnssecConfigResponse
UpdateResolverDnssecConfigResponse' :: Maybe ResolverDnssecConfig -> Int -> UpdateResolverDnssecConfigResponse

-- | Create a value of <a>UpdateResolverDnssecConfigResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resolverDNSSECConfig:UpdateResolverDnssecConfigResponse'</a>,
--   <a>updateResolverDnssecConfigResponse_resolverDNSSECConfig</a> - A
--   complex type that contains settings for the specified DNSSEC
--   configuration.
--   
--   <a>$sel:httpStatus:UpdateResolverDnssecConfigResponse'</a>,
--   <a>updateResolverDnssecConfigResponse_httpStatus</a> - The response's
--   http status code.
newUpdateResolverDnssecConfigResponse :: Int -> UpdateResolverDnssecConfigResponse

-- | <i>See:</i> <a>newGetFirewallRuleGroupPolicy</a> smart constructor.
data GetFirewallRuleGroupPolicy
GetFirewallRuleGroupPolicy' :: Text -> GetFirewallRuleGroupPolicy

-- | Create a value of <a>GetFirewallRuleGroupPolicy</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:GetFirewallRuleGroupPolicy'</a>,
--   <a>getFirewallRuleGroupPolicy_arn</a> - The ARN (Amazon Resource Name)
--   for the rule group.
newGetFirewallRuleGroupPolicy :: Text -> GetFirewallRuleGroupPolicy

-- | <i>See:</i> <a>newGetFirewallRuleGroupPolicyResponse</a> smart
--   constructor.
data GetFirewallRuleGroupPolicyResponse
GetFirewallRuleGroupPolicyResponse' :: Maybe Text -> Int -> GetFirewallRuleGroupPolicyResponse

-- | Create a value of <a>GetFirewallRuleGroupPolicyResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:firewallRuleGroupPolicy:GetFirewallRuleGroupPolicyResponse'</a>,
--   <a>getFirewallRuleGroupPolicyResponse_firewallRuleGroupPolicy</a> -
--   The Identity and Access Management (Amazon Web Services IAM) policy
--   for sharing the specified rule group. You can use the policy to share
--   the rule group using Resource Access Manager (RAM).
--   
--   <a>$sel:httpStatus:GetFirewallRuleGroupPolicyResponse'</a>,
--   <a>getFirewallRuleGroupPolicyResponse_httpStatus</a> - The response's
--   http status code.
newGetFirewallRuleGroupPolicyResponse :: Int -> GetFirewallRuleGroupPolicyResponse
newtype Action
Action' :: Text -> Action
[fromAction] :: Action -> Text
pattern Action_ALERT :: Action
pattern Action_ALLOW :: Action
pattern Action_BLOCK :: Action
newtype BlockOverrideDnsType
BlockOverrideDnsType' :: Text -> BlockOverrideDnsType
[fromBlockOverrideDnsType] :: BlockOverrideDnsType -> Text
pattern BlockOverrideDnsType_CNAME :: BlockOverrideDnsType
newtype BlockResponse
BlockResponse' :: Text -> BlockResponse
[fromBlockResponse] :: BlockResponse -> Text
pattern BlockResponse_NODATA :: BlockResponse
pattern BlockResponse_NXDOMAIN :: BlockResponse
pattern BlockResponse_OVERRIDE :: BlockResponse
newtype FirewallDomainImportOperation
FirewallDomainImportOperation' :: Text -> FirewallDomainImportOperation
[fromFirewallDomainImportOperation] :: FirewallDomainImportOperation -> Text
pattern FirewallDomainImportOperation_REPLACE :: FirewallDomainImportOperation
newtype FirewallDomainListStatus
FirewallDomainListStatus' :: Text -> FirewallDomainListStatus
[fromFirewallDomainListStatus] :: FirewallDomainListStatus -> Text
pattern FirewallDomainListStatus_COMPLETE :: FirewallDomainListStatus
pattern FirewallDomainListStatus_COMPLETE_IMPORT_FAILED :: FirewallDomainListStatus
pattern FirewallDomainListStatus_DELETING :: FirewallDomainListStatus
pattern FirewallDomainListStatus_IMPORTING :: FirewallDomainListStatus
pattern FirewallDomainListStatus_UPDATING :: FirewallDomainListStatus
newtype FirewallDomainUpdateOperation
FirewallDomainUpdateOperation' :: Text -> FirewallDomainUpdateOperation
[fromFirewallDomainUpdateOperation] :: FirewallDomainUpdateOperation -> Text
pattern FirewallDomainUpdateOperation_ADD :: FirewallDomainUpdateOperation
pattern FirewallDomainUpdateOperation_REMOVE :: FirewallDomainUpdateOperation
pattern FirewallDomainUpdateOperation_REPLACE :: FirewallDomainUpdateOperation
newtype FirewallFailOpenStatus
FirewallFailOpenStatus' :: Text -> FirewallFailOpenStatus
[fromFirewallFailOpenStatus] :: FirewallFailOpenStatus -> Text
pattern FirewallFailOpenStatus_DISABLED :: FirewallFailOpenStatus
pattern FirewallFailOpenStatus_ENABLED :: FirewallFailOpenStatus
newtype FirewallRuleGroupAssociationStatus
FirewallRuleGroupAssociationStatus' :: Text -> FirewallRuleGroupAssociationStatus
[fromFirewallRuleGroupAssociationStatus] :: FirewallRuleGroupAssociationStatus -> Text
pattern FirewallRuleGroupAssociationStatus_COMPLETE :: FirewallRuleGroupAssociationStatus
pattern FirewallRuleGroupAssociationStatus_DELETING :: FirewallRuleGroupAssociationStatus
pattern FirewallRuleGroupAssociationStatus_UPDATING :: FirewallRuleGroupAssociationStatus
newtype FirewallRuleGroupStatus
FirewallRuleGroupStatus' :: Text -> FirewallRuleGroupStatus
[fromFirewallRuleGroupStatus] :: FirewallRuleGroupStatus -> Text
pattern FirewallRuleGroupStatus_COMPLETE :: FirewallRuleGroupStatus
pattern FirewallRuleGroupStatus_DELETING :: FirewallRuleGroupStatus
pattern FirewallRuleGroupStatus_UPDATING :: FirewallRuleGroupStatus
newtype IpAddressStatus
IpAddressStatus' :: Text -> IpAddressStatus
[fromIpAddressStatus] :: IpAddressStatus -> Text
pattern IpAddressStatus_ATTACHED :: IpAddressStatus
pattern IpAddressStatus_ATTACHING :: IpAddressStatus
pattern IpAddressStatus_CREATING :: IpAddressStatus
pattern IpAddressStatus_DELETE_FAILED_FAS_EXPIRED :: IpAddressStatus
pattern IpAddressStatus_DELETING :: IpAddressStatus
pattern IpAddressStatus_DETACHING :: IpAddressStatus
pattern IpAddressStatus_FAILED_CREATION :: IpAddressStatus
pattern IpAddressStatus_FAILED_RESOURCE_GONE :: IpAddressStatus
pattern IpAddressStatus_REMAP_ATTACHING :: IpAddressStatus
pattern IpAddressStatus_REMAP_DETACHING :: IpAddressStatus
newtype MutationProtectionStatus
MutationProtectionStatus' :: Text -> MutationProtectionStatus
[fromMutationProtectionStatus] :: MutationProtectionStatus -> Text
pattern MutationProtectionStatus_DISABLED :: MutationProtectionStatus
pattern MutationProtectionStatus_ENABLED :: MutationProtectionStatus
newtype ResolverDNSSECValidationStatus
ResolverDNSSECValidationStatus' :: Text -> ResolverDNSSECValidationStatus
[fromResolverDNSSECValidationStatus] :: ResolverDNSSECValidationStatus -> Text
pattern ResolverDNSSECValidationStatus_DISABLED :: ResolverDNSSECValidationStatus
pattern ResolverDNSSECValidationStatus_DISABLING :: ResolverDNSSECValidationStatus
pattern ResolverDNSSECValidationStatus_ENABLED :: ResolverDNSSECValidationStatus
pattern ResolverDNSSECValidationStatus_ENABLING :: ResolverDNSSECValidationStatus
newtype ResolverEndpointDirection
ResolverEndpointDirection' :: Text -> ResolverEndpointDirection
[fromResolverEndpointDirection] :: ResolverEndpointDirection -> Text
pattern ResolverEndpointDirection_INBOUND :: ResolverEndpointDirection
pattern ResolverEndpointDirection_OUTBOUND :: ResolverEndpointDirection
newtype ResolverEndpointStatus
ResolverEndpointStatus' :: Text -> ResolverEndpointStatus
[fromResolverEndpointStatus] :: ResolverEndpointStatus -> Text
pattern ResolverEndpointStatus_ACTION_NEEDED :: ResolverEndpointStatus
pattern ResolverEndpointStatus_AUTO_RECOVERING :: ResolverEndpointStatus
pattern ResolverEndpointStatus_CREATING :: ResolverEndpointStatus
pattern ResolverEndpointStatus_DELETING :: ResolverEndpointStatus
pattern ResolverEndpointStatus_OPERATIONAL :: ResolverEndpointStatus
pattern ResolverEndpointStatus_UPDATING :: ResolverEndpointStatus
newtype ResolverQueryLogConfigAssociationError
ResolverQueryLogConfigAssociationError' :: Text -> ResolverQueryLogConfigAssociationError
[fromResolverQueryLogConfigAssociationError] :: ResolverQueryLogConfigAssociationError -> Text
pattern ResolverQueryLogConfigAssociationError_ACCESS_DENIED :: ResolverQueryLogConfigAssociationError
pattern ResolverQueryLogConfigAssociationError_DESTINATION_NOT_FOUND :: ResolverQueryLogConfigAssociationError
pattern ResolverQueryLogConfigAssociationError_INTERNAL_SERVICE_ERROR :: ResolverQueryLogConfigAssociationError
pattern ResolverQueryLogConfigAssociationError_NONE :: ResolverQueryLogConfigAssociationError
newtype ResolverQueryLogConfigAssociationStatus
ResolverQueryLogConfigAssociationStatus' :: Text -> ResolverQueryLogConfigAssociationStatus
[fromResolverQueryLogConfigAssociationStatus] :: ResolverQueryLogConfigAssociationStatus -> Text
pattern ResolverQueryLogConfigAssociationStatus_ACTION_NEEDED :: ResolverQueryLogConfigAssociationStatus
pattern ResolverQueryLogConfigAssociationStatus_ACTIVE :: ResolverQueryLogConfigAssociationStatus
pattern ResolverQueryLogConfigAssociationStatus_CREATING :: ResolverQueryLogConfigAssociationStatus
pattern ResolverQueryLogConfigAssociationStatus_DELETING :: ResolverQueryLogConfigAssociationStatus
pattern ResolverQueryLogConfigAssociationStatus_FAILED :: ResolverQueryLogConfigAssociationStatus
newtype ResolverQueryLogConfigStatus
ResolverQueryLogConfigStatus' :: Text -> ResolverQueryLogConfigStatus
[fromResolverQueryLogConfigStatus] :: ResolverQueryLogConfigStatus -> Text
pattern ResolverQueryLogConfigStatus_CREATED :: ResolverQueryLogConfigStatus
pattern ResolverQueryLogConfigStatus_CREATING :: ResolverQueryLogConfigStatus
pattern ResolverQueryLogConfigStatus_DELETING :: ResolverQueryLogConfigStatus
pattern ResolverQueryLogConfigStatus_FAILED :: ResolverQueryLogConfigStatus
newtype ResolverRuleAssociationStatus
ResolverRuleAssociationStatus' :: Text -> ResolverRuleAssociationStatus
[fromResolverRuleAssociationStatus] :: ResolverRuleAssociationStatus -> Text
pattern ResolverRuleAssociationStatus_COMPLETE :: ResolverRuleAssociationStatus
pattern ResolverRuleAssociationStatus_CREATING :: ResolverRuleAssociationStatus
pattern ResolverRuleAssociationStatus_DELETING :: ResolverRuleAssociationStatus
pattern ResolverRuleAssociationStatus_FAILED :: ResolverRuleAssociationStatus
pattern ResolverRuleAssociationStatus_OVERRIDDEN :: ResolverRuleAssociationStatus
newtype ResolverRuleStatus
ResolverRuleStatus' :: Text -> ResolverRuleStatus
[fromResolverRuleStatus] :: ResolverRuleStatus -> Text
pattern ResolverRuleStatus_COMPLETE :: ResolverRuleStatus
pattern ResolverRuleStatus_DELETING :: ResolverRuleStatus
pattern ResolverRuleStatus_FAILED :: ResolverRuleStatus
pattern ResolverRuleStatus_UPDATING :: ResolverRuleStatus
newtype RuleTypeOption
RuleTypeOption' :: Text -> RuleTypeOption
[fromRuleTypeOption] :: RuleTypeOption -> Text
pattern RuleTypeOption_FORWARD :: RuleTypeOption
pattern RuleTypeOption_RECURSIVE :: RuleTypeOption
pattern RuleTypeOption_SYSTEM :: RuleTypeOption
newtype ShareStatus
ShareStatus' :: Text -> ShareStatus
[fromShareStatus] :: ShareStatus -> Text
pattern ShareStatus_NOT_SHARED :: ShareStatus
pattern ShareStatus_SHARED_BY_ME :: ShareStatus
pattern ShareStatus_SHARED_WITH_ME :: ShareStatus
newtype SortOrder
SortOrder' :: Text -> SortOrder
[fromSortOrder] :: SortOrder -> Text
pattern SortOrder_ASCENDING :: SortOrder
pattern SortOrder_DESCENDING :: SortOrder
newtype Validation
Validation' :: Text -> Validation
[fromValidation] :: Validation -> Text
pattern Validation_DISABLE :: Validation
pattern Validation_ENABLE :: Validation

-- | For Resolver list operations (<a>ListResolverEndpoints</a>,
--   <a>ListResolverRules</a>, <a>ListResolverRuleAssociations</a>,
--   <a>ListResolverQueryLogConfigs</a>,
--   <a>ListResolverQueryLogConfigAssociations</a>), and
--   <a>ListResolverDnssecConfigs</a>), an optional specification to return
--   a subset of objects.
--   
--   To filter objects, such as Resolver endpoints or Resolver rules, you
--   specify <tt>Name</tt> and <tt>Values</tt>. For example, to list only
--   inbound Resolver endpoints, specify <tt>Direction</tt> for
--   <tt>Name</tt> and specify <tt>INBOUND</tt> for <tt>Values</tt>.
--   
--   <i>See:</i> <a>newFilter</a> smart constructor.
data Filter
Filter' :: Maybe [Text] -> Maybe Text -> Filter

-- | Create a value of <a>Filter</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:values:Filter'</a>, <a>filter_values</a> - When you're using a
--   <tt>List</tt> operation and you want the operation to return a subset
--   of objects, such as Resolver endpoints or Resolver rules, the value of
--   the parameter that you want to use to filter objects. For example, to
--   list only inbound Resolver endpoints, specify <tt>Direction</tt> for
--   <tt>Name</tt> and specify <tt>INBOUND</tt> for <tt>Values</tt>.
--   
--   <a>$sel:name:Filter'</a>, <a>filter_name</a> - The name of the
--   parameter that you want to use to filter objects.
--   
--   The valid values for <tt>Name</tt> depend on the action that you're
--   including the filter in, <a>ListResolverEndpoints</a>,
--   <a>ListResolverRules</a>, <a>ListResolverRuleAssociations</a>,
--   <a>ListResolverQueryLogConfigs</a>, or
--   <a>ListResolverQueryLogConfigAssociations</a>.
--   
--   In early versions of Resolver, values for <tt>Name</tt> were listed as
--   uppercase, with underscore (_) delimiters. For example,
--   <tt>CreatorRequestId</tt> was originally listed as
--   <tt>CREATOR_REQUEST_ID</tt>. Uppercase values for <tt>Name</tt> are
--   still supported.
--   
--   <b>ListResolverEndpoints</b>
--   
--   Valid values for <tt>Name</tt> include the following:
--   
--   <ul>
--   <li><tt>CreatorRequestId</tt>: The value that you specified when you
--   created the Resolver endpoint.</li>
--   <li><tt>Direction</tt>: Whether you want to return inbound or outbound
--   Resolver endpoints. If you specify <tt>DIRECTION</tt> for
--   <tt>Name</tt>, specify <tt>INBOUND</tt> or <tt>OUTBOUND</tt> for
--   <tt>Values</tt>.</li>
--   <li><tt>HostVPCId</tt>: The ID of the VPC that inbound DNS queries
--   pass through on the way from your network to your VPCs in a region, or
--   the VPC that outbound queries pass through on the way from your VPCs
--   to your network. In a <a>CreateResolverEndpoint</a> request,
--   <tt>SubnetId</tt> indirectly identifies the VPC. In a
--   <a>GetResolverEndpoint</a> request, the VPC ID for a Resolver endpoint
--   is returned in the <tt>HostVPCId</tt> element.</li>
--   <li><tt>IpAddressCount</tt>: The number of IP addresses that you have
--   associated with the Resolver endpoint.</li>
--   <li><tt>Name</tt>: The name of the Resolver endpoint.</li>
--   <li><tt>SecurityGroupIds</tt>: The IDs of the VPC security groups that
--   you specified when you created the Resolver endpoint.</li>
--   <li><tt>Status</tt>: The status of the Resolver endpoint. If you
--   specify <tt>Status</tt> for <tt>Name</tt>, specify one of the
--   following status codes for <tt>Values</tt>: <tt>CREATING</tt>,
--   <tt>OPERATIONAL</tt>, <tt>UPDATING</tt>, <tt>AUTO_RECOVERING</tt>,
--   <tt>ACTION_NEEDED</tt>, or <tt>DELETING</tt>. For more information,
--   see <tt>Status</tt> in <a>ResolverEndpoint</a>.</li>
--   </ul>
--   
--   <b>ListResolverRules</b>
--   
--   Valid values for <tt>Name</tt> include the following:
--   
--   <ul>
--   <li><tt>CreatorRequestId</tt>: The value that you specified when you
--   created the Resolver rule.</li>
--   <li><tt>DomainName</tt>: The domain name for which Resolver is
--   forwarding DNS queries to your network. In the value that you specify
--   for <tt>Values</tt>, include a trailing dot (.) after the domain name.
--   For example, if the domain name is example.com, specify the following
--   value. Note the "." after <tt>com</tt>:<pre>example.com.</pre></li>
--   <li><tt>Name</tt>: The name of the Resolver rule.</li>
--   <li><tt>ResolverEndpointId</tt>: The ID of the Resolver endpoint that
--   the Resolver rule is associated with.You can filter on the Resolver
--   endpoint only for rules that have a value of <tt>FORWARD</tt> for
--   <tt>RuleType</tt>.</li>
--   <li><tt>Status</tt>: The status of the Resolver rule. If you specify
--   <tt>Status</tt> for <tt>Name</tt>, specify one of the following status
--   codes for <tt>Values</tt>: <tt>COMPLETE</tt>, <tt>DELETING</tt>,
--   <tt>UPDATING</tt>, or <tt>FAILED</tt>.</li>
--   <li><tt>Type</tt>: The type of the Resolver rule. If you specify
--   <tt>TYPE</tt> for <tt>Name</tt>, specify <tt>FORWARD</tt> or
--   <tt>SYSTEM</tt> for <tt>Values</tt>.</li>
--   </ul>
--   
--   <b>ListResolverRuleAssociations</b>
--   
--   Valid values for <tt>Name</tt> include the following:
--   
--   <ul>
--   <li><tt>Name</tt>: The name of the Resolver rule association.</li>
--   <li><tt>ResolverRuleId</tt>: The ID of the Resolver rule that is
--   associated with one or more VPCs.</li>
--   <li><tt>Status</tt>: The status of the Resolver rule association. If
--   you specify <tt>Status</tt> for <tt>Name</tt>, specify one of the
--   following status codes for <tt>Values</tt>: <tt>CREATING</tt>,
--   <tt>COMPLETE</tt>, <tt>DELETING</tt>, or <tt>FAILED</tt>.</li>
--   <li><tt>VPCId</tt>: The ID of the VPC that the Resolver rule is
--   associated with.</li>
--   </ul>
--   
--   <b>ListResolverQueryLogConfigs</b>
--   
--   Valid values for <tt>Name</tt> include the following:
--   
--   <ul>
--   <li><tt>Arn</tt>: The ARN for the query logging configuration.</li>
--   <li><tt>AssociationCount</tt>: The number of VPCs that are associated
--   with the query logging configuration.</li>
--   <li><tt>CreationTime</tt>: The date and time that the query logging
--   configuration was created, in Unix time format and Coordinated
--   Universal Time (UTC).</li>
--   <li><tt>CreatorRequestId</tt>: A unique string that identifies the
--   request that created the query logging configuration.</li>
--   <li><tt>Destination</tt>: The Amazon Web Services service that you
--   want to forward query logs to. Valid values include the
--   following:<ul><li><pre>S3</pre></li><li><pre>CloudWatchLogs</pre></li><li><pre>KinesisFirehose</pre></li></ul></li>
--   <li><tt>DestinationArn</tt>: The ARN of the location that Resolver is
--   sending query logs to. This value can be the ARN for an S3 bucket, a
--   CloudWatch Logs log group, or a Kinesis Data Firehose delivery
--   stream.</li>
--   <li><tt>Id</tt>: The ID of the query logging configuration</li>
--   <li><tt>Name</tt>: The name of the query logging configuration</li>
--   <li><tt>OwnerId</tt>: The Amazon Web Services account ID for the
--   account that created the query logging configuration.</li>
--   <li><tt>ShareStatus</tt>: An indication of whether the query logging
--   configuration is shared with other Amazon Web Services accounts, or
--   was shared with the current account by another Amazon Web Services
--   account. Valid values include: <tt>NOT_SHARED</tt>,
--   <tt>SHARED_WITH_ME</tt>, or <tt>SHARED_BY_ME</tt>.</li>
--   <li><tt>Status</tt>: The status of the query logging configuration. If
--   you specify <tt>Status</tt> for <tt>Name</tt>, specify the applicable
--   status code for <tt>Values</tt>: <tt>CREATING</tt>, <tt>CREATED</tt>,
--   <tt>DELETING</tt>, or <tt>FAILED</tt>. For more information, see
--   <a>Status</a>.</li>
--   </ul>
--   
--   <b>ListResolverQueryLogConfigAssociations</b>
--   
--   Valid values for <tt>Name</tt> include the following:
--   
--   <ul>
--   <li><tt>CreationTime</tt>: The date and time that the VPC was
--   associated with the query logging configuration, in Unix time format
--   and Coordinated Universal Time (UTC).</li>
--   <li><tt>Error</tt>: If the value of <tt>Status</tt> is
--   <tt>FAILED</tt>, specify the cause: <tt>DESTINATION_NOT_FOUND</tt> or
--   <tt>ACCESS_DENIED</tt>.</li>
--   <li><tt>Id</tt>: The ID of the query logging association.</li>
--   <li><tt>ResolverQueryLogConfigId</tt>: The ID of the query logging
--   configuration that a VPC is associated with.</li>
--   <li><tt>ResourceId</tt>: The ID of the Amazon VPC that is associated
--   with the query logging configuration.</li>
--   <li><tt>Status</tt>: The status of the query logging association. If
--   you specify <tt>Status</tt> for <tt>Name</tt>, specify the applicable
--   status code for <tt>Values</tt>: <tt>CREATING</tt>, <tt>CREATED</tt>,
--   <tt>DELETING</tt>, or <tt>FAILED</tt>. For more information, see
--   <a>Status</a>.</li>
--   </ul>
newFilter :: Filter

-- | Configuration of the firewall behavior provided by DNS Firewall for a
--   single VPC from Amazon Virtual Private Cloud (Amazon VPC).
--   
--   <i>See:</i> <a>newFirewallConfig</a> smart constructor.
data FirewallConfig
FirewallConfig' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe FirewallFailOpenStatus -> FirewallConfig

-- | Create a value of <a>FirewallConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceId:FirewallConfig'</a>,
--   <a>firewallConfig_resourceId</a> - The ID of the VPC that this
--   firewall configuration applies to.
--   
--   <a>$sel:ownerId:FirewallConfig'</a>, <a>firewallConfig_ownerId</a> -
--   The Amazon Web Services account ID of the owner of the VPC that this
--   firewall configuration applies to.
--   
--   <a>$sel:id:FirewallConfig'</a>, <a>firewallConfig_id</a> - The ID of
--   the firewall configuration.
--   
--   <a>$sel:firewallFailOpen:FirewallConfig'</a>,
--   <a>firewallConfig_firewallFailOpen</a> - Determines how DNS Firewall
--   operates during failures, for example when all traffic that is sent to
--   DNS Firewall fails to receive a reply.
--   
--   <ul>
--   <li>By default, fail open is disabled, which means the failure mode is
--   closed. This approach favors security over availability. DNS Firewall
--   returns a failure error when it is unable to properly evaluate a
--   query.</li>
--   <li>If you enable this option, the failure mode is open. This approach
--   favors availability over security. DNS Firewall allows queries to
--   proceed if it is unable to properly evaluate them.</li>
--   </ul>
--   
--   This behavior is only enforced for VPCs that have at least one DNS
--   Firewall rule group association.
newFirewallConfig :: FirewallConfig

-- | High-level information about a list of firewall domains for use in a
--   FirewallRule. This is returned by GetFirewallDomainList.
--   
--   To retrieve the domains that are defined for this domain list, call
--   ListFirewallDomains.
--   
--   <i>See:</i> <a>newFirewallDomainList</a> smart constructor.
data FirewallDomainList
FirewallDomainList' :: Maybe Text -> Maybe FirewallDomainListStatus -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> FirewallDomainList

-- | Create a value of <a>FirewallDomainList</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:FirewallDomainList'</a>,
--   <a>firewallDomainList_creationTime</a> - The date and time that the
--   domain list was created, in Unix time format and Coordinated Universal
--   Time (UTC).
--   
--   <a>$sel:status:FirewallDomainList'</a>,
--   <a>firewallDomainList_status</a> - The status of the domain list.
--   
--   <a>$sel:arn:FirewallDomainList'</a>, <a>firewallDomainList_arn</a> -
--   The Amazon Resource Name (ARN) of the firewall domain list.
--   
--   <a>$sel:creatorRequestId:FirewallDomainList'</a>,
--   <a>firewallDomainList_creatorRequestId</a> - A unique string defined
--   by you to identify the request. This allows you to retry failed
--   requests without the risk of running the operation twice. This can be
--   any unique string, for example, a timestamp.
--   
--   <a>$sel:managedOwnerName:FirewallDomainList'</a>,
--   <a>firewallDomainList_managedOwnerName</a> - The owner of the list,
--   used only for lists that are not managed by you. For example, the
--   managed domain list <tt>AWSManagedDomainsMalwareDomainList</tt> has
--   the managed owner name <tt>Route 53 Resolver DNS Firewall</tt>.
--   
--   <a>$sel:domainCount:FirewallDomainList'</a>,
--   <a>firewallDomainList_domainCount</a> - The number of domain names
--   that are specified in the domain list.
--   
--   <a>$sel:modificationTime:FirewallDomainList'</a>,
--   <a>firewallDomainList_modificationTime</a> - The date and time that
--   the domain list was last modified, in Unix time format and Coordinated
--   Universal Time (UTC).
--   
--   <a>$sel:statusMessage:FirewallDomainList'</a>,
--   <a>firewallDomainList_statusMessage</a> - Additional information about
--   the status of the list, if available.
--   
--   <a>$sel:name:FirewallDomainList'</a>, <a>firewallDomainList_name</a> -
--   The name of the domain list.
--   
--   <a>$sel:id:FirewallDomainList'</a>, <a>firewallDomainList_id</a> - The
--   ID of the domain list.
newFirewallDomainList :: FirewallDomainList

-- | Minimal high-level information for a firewall domain list. The action
--   ListFirewallDomainLists returns an array of these objects.
--   
--   To retrieve full information for a firewall domain list, call
--   GetFirewallDomainList and ListFirewallDomains.
--   
--   <i>See:</i> <a>newFirewallDomainListMetadata</a> smart constructor.
data FirewallDomainListMetadata
FirewallDomainListMetadata' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> FirewallDomainListMetadata

-- | Create a value of <a>FirewallDomainListMetadata</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:FirewallDomainListMetadata'</a>,
--   <a>firewallDomainListMetadata_arn</a> - The Amazon Resource Name (ARN)
--   of the firewall domain list metadata.
--   
--   <a>$sel:creatorRequestId:FirewallDomainListMetadata'</a>,
--   <a>firewallDomainListMetadata_creatorRequestId</a> - A unique string
--   defined by you to identify the request. This allows you to retry
--   failed requests without the risk of running the operation twice. This
--   can be any unique string, for example, a timestamp.
--   
--   <a>$sel:managedOwnerName:FirewallDomainListMetadata'</a>,
--   <a>firewallDomainListMetadata_managedOwnerName</a> - The owner of the
--   list, used only for lists that are not managed by you. For example,
--   the managed domain list <tt>AWSManagedDomainsMalwareDomainList</tt>
--   has the managed owner name <tt>Route 53 Resolver DNS Firewall</tt>.
--   
--   <a>$sel:name:FirewallDomainListMetadata'</a>,
--   <a>firewallDomainListMetadata_name</a> - The name of the domain list.
--   
--   <a>$sel:id:FirewallDomainListMetadata'</a>,
--   <a>firewallDomainListMetadata_id</a> - The ID of the domain list.
newFirewallDomainListMetadata :: FirewallDomainListMetadata

-- | A single firewall rule in a rule group.
--   
--   <i>See:</i> <a>newFirewallRule</a> smart constructor.
data FirewallRule
FirewallRule' :: Maybe Text -> Maybe BlockOverrideDnsType -> Maybe Text -> Maybe Int -> Maybe BlockResponse -> Maybe Text -> Maybe Text -> Maybe Action -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe Text -> FirewallRule

-- | Create a value of <a>FirewallRule</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:FirewallRule'</a>,
--   <a>firewallRule_creationTime</a> - The date and time that the rule was
--   created, in Unix time format and Coordinated Universal Time (UTC).
--   
--   <a>$sel:blockOverrideDnsType:FirewallRule'</a>,
--   <a>firewallRule_blockOverrideDnsType</a> - The DNS record's type. This
--   determines the format of the record value that you provided in
--   <tt>BlockOverrideDomain</tt>. Used for the rule action <tt>BLOCK</tt>
--   with a <tt>BlockResponse</tt> setting of <tt>OVERRIDE</tt>.
--   
--   <a>$sel:firewallRuleGroupId:FirewallRule'</a>,
--   <a>firewallRule_firewallRuleGroupId</a> - The unique identifier of the
--   firewall rule group of the rule.
--   
--   <a>$sel:priority:FirewallRule'</a>, <a>firewallRule_priority</a> - The
--   priority of the rule in the rule group. This value must be unique
--   within the rule group. DNS Firewall processes the rules in a rule
--   group by order of priority, starting from the lowest setting.
--   
--   <a>$sel:blockResponse:FirewallRule'</a>,
--   <a>firewallRule_blockResponse</a> - The way that you want DNS Firewall
--   to block the request. Used for the rule action setting <tt>BLOCK</tt>.
--   
--   <ul>
--   <li><tt>NODATA</tt> - Respond indicating that the query was
--   successful, but no response is available for it.</li>
--   <li><tt>NXDOMAIN</tt> - Respond indicating that the domain name that's
--   in the query doesn't exist.</li>
--   <li><tt>OVERRIDE</tt> - Provide a custom override in the response.
--   This option requires custom handling details in the rule's
--   <tt>BlockOverride*</tt> settings.</li>
--   </ul>
--   
--   <a>$sel:creatorRequestId:FirewallRule'</a>,
--   <a>firewallRule_creatorRequestId</a> - A unique string defined by you
--   to identify the request. This allows you to retry failed requests
--   without the risk of executing the operation twice. This can be any
--   unique string, for example, a timestamp.
--   
--   <a>$sel:modificationTime:FirewallRule'</a>,
--   <a>firewallRule_modificationTime</a> - The date and time that the rule
--   was last modified, in Unix time format and Coordinated Universal Time
--   (UTC).
--   
--   <a>$sel:action:FirewallRule'</a>, <a>firewallRule_action</a> - The
--   action that DNS Firewall should take on a DNS query when it matches
--   one of the domains in the rule's domain list:
--   
--   <ul>
--   <li><tt>ALLOW</tt> - Permit the request to go through.</li>
--   <li><tt>ALERT</tt> - Permit the request to go through but send an
--   alert to the logs.</li>
--   <li><tt>BLOCK</tt> - Disallow the request. If this is specified,
--   additional handling details are provided in the rule's
--   <tt>BlockResponse</tt> setting.</li>
--   </ul>
--   
--   <a>$sel:blockOverrideTtl:FirewallRule'</a>,
--   <a>firewallRule_blockOverrideTtl</a> - The recommended amount of time,
--   in seconds, for the DNS resolver or web browser to cache the provided
--   override record. Used for the rule action <tt>BLOCK</tt> with a
--   <tt>BlockResponse</tt> setting of <tt>OVERRIDE</tt>.
--   
--   <a>$sel:name:FirewallRule'</a>, <a>firewallRule_name</a> - The name of
--   the rule.
--   
--   <a>$sel:blockOverrideDomain:FirewallRule'</a>,
--   <a>firewallRule_blockOverrideDomain</a> - The custom DNS record to
--   send back in response to the query. Used for the rule action
--   <tt>BLOCK</tt> with a <tt>BlockResponse</tt> setting of
--   <tt>OVERRIDE</tt>.
--   
--   <a>$sel:firewallDomainListId:FirewallRule'</a>,
--   <a>firewallRule_firewallDomainListId</a> - The ID of the domain list
--   that's used in the rule.
newFirewallRule :: FirewallRule

-- | High-level information for a firewall rule group. A firewall rule
--   group is a collection of rules that DNS Firewall uses to filter DNS
--   network traffic for a VPC. To retrieve the rules for the rule group,
--   call ListFirewallRules.
--   
--   <i>See:</i> <a>newFirewallRuleGroup</a> smart constructor.
data FirewallRuleGroup
FirewallRuleGroup' :: Maybe Text -> Maybe FirewallRuleGroupStatus -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe ShareStatus -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Int -> FirewallRuleGroup

-- | Create a value of <a>FirewallRuleGroup</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:FirewallRuleGroup'</a>,
--   <a>firewallRuleGroup_creationTime</a> - The date and time that the
--   rule group was created, in Unix time format and Coordinated Universal
--   Time (UTC).
--   
--   <a>$sel:status:FirewallRuleGroup'</a>, <a>firewallRuleGroup_status</a>
--   - The status of the domain list.
--   
--   <a>$sel:arn:FirewallRuleGroup'</a>, <a>firewallRuleGroup_arn</a> - The
--   ARN (Amazon Resource Name) of the rule group.
--   
--   <a>$sel:creatorRequestId:FirewallRuleGroup'</a>,
--   <a>firewallRuleGroup_creatorRequestId</a> - A unique string defined by
--   you to identify the request. This allows you to retry failed requests
--   without the risk of running the operation twice. This can be any
--   unique string, for example, a timestamp.
--   
--   <a>$sel:modificationTime:FirewallRuleGroup'</a>,
--   <a>firewallRuleGroup_modificationTime</a> - The date and time that the
--   rule group was last modified, in Unix time format and Coordinated
--   Universal Time (UTC).
--   
--   <a>$sel:shareStatus:FirewallRuleGroup'</a>,
--   <a>firewallRuleGroup_shareStatus</a> - Whether the rule group is
--   shared with other Amazon Web Services accounts, or was shared with the
--   current account by another Amazon Web Services account. Sharing is
--   configured through Resource Access Manager (RAM).
--   
--   <a>$sel:ownerId:FirewallRuleGroup'</a>,
--   <a>firewallRuleGroup_ownerId</a> - The Amazon Web Services account ID
--   for the account that created the rule group. When a rule group is
--   shared with your account, this is the account that has shared the rule
--   group with you.
--   
--   <a>$sel:statusMessage:FirewallRuleGroup'</a>,
--   <a>firewallRuleGroup_statusMessage</a> - Additional information about
--   the status of the rule group, if available.
--   
--   <a>$sel:name:FirewallRuleGroup'</a>, <a>firewallRuleGroup_name</a> -
--   The name of the rule group.
--   
--   <a>$sel:id:FirewallRuleGroup'</a>, <a>firewallRuleGroup_id</a> - The
--   ID of the rule group.
--   
--   <a>$sel:ruleCount:FirewallRuleGroup'</a>,
--   <a>firewallRuleGroup_ruleCount</a> - The number of rules in the rule
--   group.
newFirewallRuleGroup :: FirewallRuleGroup

-- | An association between a firewall rule group and a VPC, which enables
--   DNS filtering for the VPC.
--   
--   <i>See:</i> <a>newFirewallRuleGroupAssociation</a> smart constructor.
data FirewallRuleGroupAssociation
FirewallRuleGroupAssociation' :: Maybe Text -> Maybe FirewallRuleGroupAssociationStatus -> Maybe MutationProtectionStatus -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> FirewallRuleGroupAssociation

-- | Create a value of <a>FirewallRuleGroupAssociation</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:FirewallRuleGroupAssociation'</a>,
--   <a>firewallRuleGroupAssociation_creationTime</a> - The date and time
--   that the association was created, in Unix time format and Coordinated
--   Universal Time (UTC).
--   
--   <a>$sel:status:FirewallRuleGroupAssociation'</a>,
--   <a>firewallRuleGroupAssociation_status</a> - The current status of the
--   association.
--   
--   <a>$sel:mutationProtection:FirewallRuleGroupAssociation'</a>,
--   <a>firewallRuleGroupAssociation_mutationProtection</a> - If enabled,
--   this setting disallows modification or removal of the association, to
--   help prevent against accidentally altering DNS firewall protections.
--   
--   <a>$sel:firewallRuleGroupId:FirewallRuleGroupAssociation'</a>,
--   <a>firewallRuleGroupAssociation_firewallRuleGroupId</a> - The unique
--   identifier of the firewall rule group.
--   
--   <a>$sel:priority:FirewallRuleGroupAssociation'</a>,
--   <a>firewallRuleGroupAssociation_priority</a> - The setting that
--   determines the processing order of the rule group among the rule
--   groups that are associated with a single VPC. DNS Firewall filters VPC
--   traffic starting from rule group with the lowest numeric priority
--   setting.
--   
--   <a>$sel:arn:FirewallRuleGroupAssociation'</a>,
--   <a>firewallRuleGroupAssociation_arn</a> - The Amazon Resource Name
--   (ARN) of the firewall rule group association.
--   
--   <a>$sel:vpcId:FirewallRuleGroupAssociation'</a>,
--   <a>firewallRuleGroupAssociation_vpcId</a> - The unique identifier of
--   the VPC that is associated with the rule group.
--   
--   <a>$sel:creatorRequestId:FirewallRuleGroupAssociation'</a>,
--   <a>firewallRuleGroupAssociation_creatorRequestId</a> - A unique string
--   defined by you to identify the request. This allows you to retry
--   failed requests without the risk of running the operation twice. This
--   can be any unique string, for example, a timestamp.
--   
--   <a>$sel:managedOwnerName:FirewallRuleGroupAssociation'</a>,
--   <a>firewallRuleGroupAssociation_managedOwnerName</a> - The owner of
--   the association, used only for associations that are not managed by
--   you. If you use Firewall Manager to manage your DNS Firewalls, then
--   this reports Firewall Manager as the managed owner.
--   
--   <a>$sel:modificationTime:FirewallRuleGroupAssociation'</a>,
--   <a>firewallRuleGroupAssociation_modificationTime</a> - The date and
--   time that the association was last modified, in Unix time format and
--   Coordinated Universal Time (UTC).
--   
--   <a>$sel:statusMessage:FirewallRuleGroupAssociation'</a>,
--   <a>firewallRuleGroupAssociation_statusMessage</a> - Additional
--   information about the status of the response, if available.
--   
--   <a>$sel:name:FirewallRuleGroupAssociation'</a>,
--   <a>firewallRuleGroupAssociation_name</a> - The name of the
--   association.
--   
--   <a>$sel:id:FirewallRuleGroupAssociation'</a>,
--   <a>firewallRuleGroupAssociation_id</a> - The identifier for the
--   association.
newFirewallRuleGroupAssociation :: FirewallRuleGroupAssociation

-- | Minimal high-level information for a firewall rule group. The action
--   ListFirewallRuleGroups returns an array of these objects.
--   
--   To retrieve full information for a firewall rule group, call
--   GetFirewallRuleGroup and ListFirewallRules.
--   
--   <i>See:</i> <a>newFirewallRuleGroupMetadata</a> smart constructor.
data FirewallRuleGroupMetadata
FirewallRuleGroupMetadata' :: Maybe Text -> Maybe Text -> Maybe ShareStatus -> Maybe Text -> Maybe Text -> Maybe Text -> FirewallRuleGroupMetadata

-- | Create a value of <a>FirewallRuleGroupMetadata</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:FirewallRuleGroupMetadata'</a>,
--   <a>firewallRuleGroupMetadata_arn</a> - The ARN (Amazon Resource Name)
--   of the rule group.
--   
--   <a>$sel:creatorRequestId:FirewallRuleGroupMetadata'</a>,
--   <a>firewallRuleGroupMetadata_creatorRequestId</a> - A unique string
--   defined by you to identify the request. This allows you to retry
--   failed requests without the risk of running the operation twice. This
--   can be any unique string, for example, a timestamp.
--   
--   <a>$sel:shareStatus:FirewallRuleGroupMetadata'</a>,
--   <a>firewallRuleGroupMetadata_shareStatus</a> - Whether the rule group
--   is shared with other Amazon Web Services accounts, or was shared with
--   the current account by another Amazon Web Services account. Sharing is
--   configured through Resource Access Manager (RAM).
--   
--   <a>$sel:ownerId:FirewallRuleGroupMetadata'</a>,
--   <a>firewallRuleGroupMetadata_ownerId</a> - The Amazon Web Services
--   account ID for the account that created the rule group. When a rule
--   group is shared with your account, this is the account that has shared
--   the rule group with you.
--   
--   <a>$sel:name:FirewallRuleGroupMetadata'</a>,
--   <a>firewallRuleGroupMetadata_name</a> - The name of the rule group.
--   
--   <a>$sel:id:FirewallRuleGroupMetadata'</a>,
--   <a>firewallRuleGroupMetadata_id</a> - The ID of the rule group.
newFirewallRuleGroupMetadata :: FirewallRuleGroupMetadata

-- | In a <a>CreateResolverEndpoint</a> request, the IP address that DNS
--   queries originate from (for outbound endpoints) or that you forward
--   DNS queries to (for inbound endpoints). <tt>IpAddressRequest</tt> also
--   includes the ID of the subnet that contains the IP address.
--   
--   <i>See:</i> <a>newIpAddressRequest</a> smart constructor.
data IpAddressRequest
IpAddressRequest' :: Maybe Text -> Text -> IpAddressRequest

-- | Create a value of <a>IpAddressRequest</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ip:IpAddressRequest'</a>, <a>ipAddressRequest_ip</a> - The IP
--   address that you want to use for DNS queries.
--   
--   <a>$sel:subnetId:IpAddressRequest'</a>,
--   <a>ipAddressRequest_subnetId</a> - The ID of the subnet that contains
--   the IP address.
newIpAddressRequest :: Text -> IpAddressRequest

-- | In the response to a <a>GetResolverEndpoint</a> request, information
--   about the IP addresses that the Resolver endpoint uses for DNS
--   queries.
--   
--   <i>See:</i> <a>newIpAddressResponse</a> smart constructor.
data IpAddressResponse
IpAddressResponse' :: Maybe Text -> Maybe IpAddressStatus -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> IpAddressResponse

-- | Create a value of <a>IpAddressResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:IpAddressResponse'</a>,
--   <a>ipAddressResponse_creationTime</a> - The date and time that the IP
--   address was created, in Unix time format and Coordinated Universal
--   Time (UTC).
--   
--   <a>$sel:status:IpAddressResponse'</a>, <a>ipAddressResponse_status</a>
--   - A status code that gives the current status of the request.
--   
--   <a>$sel:modificationTime:IpAddressResponse'</a>,
--   <a>ipAddressResponse_modificationTime</a> - The date and time that the
--   IP address was last modified, in Unix time format and Coordinated
--   Universal Time (UTC).
--   
--   <a>$sel:subnetId:IpAddressResponse'</a>,
--   <a>ipAddressResponse_subnetId</a> - The ID of one subnet.
--   
--   <a>$sel:ip:IpAddressResponse'</a>, <a>ipAddressResponse_ip</a> - One
--   IP address that the Resolver endpoint uses for DNS queries.
--   
--   <a>$sel:ipId:IpAddressResponse'</a>, <a>ipAddressResponse_ipId</a> -
--   The ID of one IP address.
--   
--   <a>$sel:statusMessage:IpAddressResponse'</a>,
--   <a>ipAddressResponse_statusMessage</a> - A message that provides
--   additional information about the status of the request.
newIpAddressResponse :: IpAddressResponse

-- | In an <a>UpdateResolverEndpoint</a> request, information about an IP
--   address to update.
--   
--   <i>See:</i> <a>newIpAddressUpdate</a> smart constructor.
data IpAddressUpdate
IpAddressUpdate' :: Maybe Text -> Maybe Text -> Maybe Text -> IpAddressUpdate

-- | Create a value of <a>IpAddressUpdate</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:subnetId:IpAddressUpdate'</a>, <a>ipAddressUpdate_subnetId</a>
--   - The ID of the subnet that includes the IP address that you want to
--   update. To get this ID, use <a>GetResolverEndpoint</a>.
--   
--   <a>$sel:ip:IpAddressUpdate'</a>, <a>ipAddressUpdate_ip</a> - The new
--   IP address.
--   
--   <a>$sel:ipId:IpAddressUpdate'</a>, <a>ipAddressUpdate_ipId</a> -
--   <i>Only when removing an IP address from a Resolver endpoint</i>: The
--   ID of the IP address that you want to remove. To get this ID, use
--   <a>GetResolverEndpoint</a>.
newIpAddressUpdate :: IpAddressUpdate

-- | A complex type that contains information about a configuration for
--   DNSSEC validation.
--   
--   <i>See:</i> <a>newResolverDnssecConfig</a> smart constructor.
data ResolverDnssecConfig
ResolverDnssecConfig' :: Maybe Text -> Maybe Text -> Maybe ResolverDNSSECValidationStatus -> Maybe Text -> ResolverDnssecConfig

-- | Create a value of <a>ResolverDnssecConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceId:ResolverDnssecConfig'</a>,
--   <a>resolverDnssecConfig_resourceId</a> - The ID of the virtual private
--   cloud (VPC) that you're configuring the DNSSEC validation status for.
--   
--   <a>$sel:ownerId:ResolverDnssecConfig'</a>,
--   <a>resolverDnssecConfig_ownerId</a> - The owner account ID of the
--   virtual private cloud (VPC) for a configuration for DNSSEC validation.
--   
--   <a>$sel:validationStatus:ResolverDnssecConfig'</a>,
--   <a>resolverDnssecConfig_validationStatus</a> - The validation status
--   for a DNSSEC configuration. The status can be one of the following:
--   
--   <ul>
--   <li><b>ENABLING:</b> DNSSEC validation is being enabled but is not
--   complete.</li>
--   <li><b>ENABLED:</b> DNSSEC validation is enabled.</li>
--   <li><b>DISABLING:</b> DNSSEC validation is being disabled but is not
--   complete.</li>
--   <li><b>DISABLED</b> DNSSEC validation is disabled.</li>
--   </ul>
--   
--   <a>$sel:id:ResolverDnssecConfig'</a>, <a>resolverDnssecConfig_id</a> -
--   The ID for a configuration for DNSSEC validation.
newResolverDnssecConfig :: ResolverDnssecConfig

-- | In the response to a <a>CreateResolverEndpoint</a>,
--   <a>DeleteResolverEndpoint</a>, <a>GetResolverEndpoint</a>,
--   <a>ListResolverEndpoints</a>, or <a>UpdateResolverEndpoint</a>
--   request, a complex type that contains settings for an existing inbound
--   or outbound Resolver endpoint.
--   
--   <i>See:</i> <a>newResolverEndpoint</a> smart constructor.
data ResolverEndpoint
ResolverEndpoint' :: Maybe Text -> Maybe ResolverEndpointStatus -> Maybe [Text] -> Maybe ResolverEndpointDirection -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> ResolverEndpoint

-- | Create a value of <a>ResolverEndpoint</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:ResolverEndpoint'</a>,
--   <a>resolverEndpoint_creationTime</a> - The date and time that the
--   endpoint was created, in Unix time format and Coordinated Universal
--   Time (UTC).
--   
--   <a>$sel:status:ResolverEndpoint'</a>, <a>resolverEndpoint_status</a> -
--   A code that specifies the current status of the Resolver endpoint.
--   Valid values include the following:
--   
--   <ul>
--   <li><tt>CREATING</tt>: Resolver is creating and configuring one or
--   more Amazon VPC network interfaces for this endpoint.</li>
--   <li><tt>OPERATIONAL</tt>: The Amazon VPC network interfaces for this
--   endpoint are correctly configured and able to pass inbound or outbound
--   DNS queries between your network and Resolver.</li>
--   <li><tt>UPDATING</tt>: Resolver is associating or disassociating one
--   or more network interfaces with this endpoint.</li>
--   <li><tt>AUTO_RECOVERING</tt>: Resolver is trying to recover one or
--   more of the network interfaces that are associated with this endpoint.
--   During the recovery process, the endpoint functions with limited
--   capacity because of the limit on the number of DNS queries per IP
--   address (per network interface). For the current limit, see <a>Limits
--   on Route 53 Resolver</a>.</li>
--   <li><tt>ACTION_NEEDED</tt>: This endpoint is unhealthy, and Resolver
--   can't automatically recover it. To resolve the problem, we recommend
--   that you check each IP address that you associated with the endpoint.
--   For each IP address that isn't available, add another IP address and
--   then delete the IP address that isn't available. (An endpoint must
--   always include at least two IP addresses.) A status of
--   <tt>ACTION_NEEDED</tt> can have a variety of causes. Here are two
--   common causes:<ul><li>One or more of the network interfaces that are
--   associated with the endpoint were deleted using Amazon
--   VPC.</li><li>The network interface couldn't be created for some reason
--   that's outside the control of Resolver.</li></ul></li>
--   <li><tt>DELETING</tt>: Resolver is deleting this endpoint and the
--   associated network interfaces.</li>
--   </ul>
--   
--   <a>$sel:securityGroupIds:ResolverEndpoint'</a>,
--   <a>resolverEndpoint_securityGroupIds</a> - The ID of one or more
--   security groups that control access to this VPC. The security group
--   must include one or more inbound rules (for inbound endpoints) or
--   outbound rules (for outbound endpoints). Inbound and outbound rules
--   must allow TCP and UDP access. For inbound access, open port 53. For
--   outbound access, open the port that you're using for DNS queries on
--   your network.
--   
--   <a>$sel:direction:ResolverEndpoint'</a>,
--   <a>resolverEndpoint_direction</a> - Indicates whether the Resolver
--   endpoint allows inbound or outbound DNS queries:
--   
--   <ul>
--   <li><tt>INBOUND</tt>: allows DNS queries to your VPC from your
--   network</li>
--   <li><tt>OUTBOUND</tt>: allows DNS queries from your VPC to your
--   network</li>
--   </ul>
--   
--   <a>$sel:arn:ResolverEndpoint'</a>, <a>resolverEndpoint_arn</a> - The
--   ARN (Amazon Resource Name) for the Resolver endpoint.
--   
--   <a>$sel:creatorRequestId:ResolverEndpoint'</a>,
--   <a>resolverEndpoint_creatorRequestId</a> - A unique string that
--   identifies the request that created the Resolver endpoint. The
--   <tt>CreatorRequestId</tt> allows failed requests to be retried without
--   the risk of running the operation twice.
--   
--   <a>$sel:modificationTime:ResolverEndpoint'</a>,
--   <a>resolverEndpoint_modificationTime</a> - The date and time that the
--   endpoint was last modified, in Unix time format and Coordinated
--   Universal Time (UTC).
--   
--   <a>$sel:ipAddressCount:ResolverEndpoint'</a>,
--   <a>resolverEndpoint_ipAddressCount</a> - The number of IP addresses
--   that the Resolver endpoint can use for DNS queries.
--   
--   <a>$sel:statusMessage:ResolverEndpoint'</a>,
--   <a>resolverEndpoint_statusMessage</a> - A detailed description of the
--   status of the Resolver endpoint.
--   
--   <a>$sel:name:ResolverEndpoint'</a>, <a>resolverEndpoint_name</a> - The
--   name that you assigned to the Resolver endpoint when you submitted a
--   <a>CreateResolverEndpoint</a> request.
--   
--   <a>$sel:id:ResolverEndpoint'</a>, <a>resolverEndpoint_id</a> - The ID
--   of the Resolver endpoint.
--   
--   <a>$sel:hostVPCId:ResolverEndpoint'</a>,
--   <a>resolverEndpoint_hostVPCId</a> - The ID of the VPC that you want to
--   create the Resolver endpoint in.
newResolverEndpoint :: ResolverEndpoint

-- | In the response to a <a>CreateResolverQueryLogConfig</a>,
--   <a>DeleteResolverQueryLogConfig</a>, <a>GetResolverQueryLogConfig</a>,
--   or <a>ListResolverQueryLogConfigs</a> request, a complex type that
--   contains settings for one query logging configuration.
--   
--   <i>See:</i> <a>newResolverQueryLogConfig</a> smart constructor.
data ResolverQueryLogConfig
ResolverQueryLogConfig' :: Maybe Text -> Maybe ResolverQueryLogConfigStatus -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe ShareStatus -> Maybe Text -> Maybe Text -> Maybe Text -> ResolverQueryLogConfig

-- | Create a value of <a>ResolverQueryLogConfig</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:ResolverQueryLogConfig'</a>,
--   <a>resolverQueryLogConfig_creationTime</a> - The date and time that
--   the query logging configuration was created, in Unix time format and
--   Coordinated Universal Time (UTC).
--   
--   <a>$sel:status:ResolverQueryLogConfig'</a>,
--   <a>resolverQueryLogConfig_status</a> - The status of the specified
--   query logging configuration. Valid values include the following:
--   
--   <ul>
--   <li><tt>CREATING</tt>: Resolver is creating the query logging
--   configuration.</li>
--   <li><tt>CREATED</tt>: The query logging configuration was successfully
--   created. Resolver is logging queries that originate in the specified
--   VPC.</li>
--   <li><tt>DELETING</tt>: Resolver is deleting this query logging
--   configuration.</li>
--   <li><tt>FAILED</tt>: Resolver can't deliver logs to the location that
--   is specified in the query logging configuration. Here are two common
--   causes:<ul><li>The specified destination (for example, an Amazon S3
--   bucket) was deleted.</li><li>Permissions don't allow sending logs to
--   the destination.</li></ul></li>
--   </ul>
--   
--   <a>$sel:associationCount:ResolverQueryLogConfig'</a>,
--   <a>resolverQueryLogConfig_associationCount</a> - The number of VPCs
--   that are associated with the query logging configuration.
--   
--   <a>$sel:arn:ResolverQueryLogConfig'</a>,
--   <a>resolverQueryLogConfig_arn</a> - The ARN for the query logging
--   configuration.
--   
--   <a>$sel:creatorRequestId:ResolverQueryLogConfig'</a>,
--   <a>resolverQueryLogConfig_creatorRequestId</a> - A unique string that
--   identifies the request that created the query logging configuration.
--   The <tt>CreatorRequestId</tt> allows failed requests to be retried
--   without the risk of running the operation twice.
--   
--   <a>$sel:destinationArn:ResolverQueryLogConfig'</a>,
--   <a>resolverQueryLogConfig_destinationArn</a> - The ARN of the resource
--   that you want Resolver to send query logs: an Amazon S3 bucket, a
--   CloudWatch Logs log group, or a Kinesis Data Firehose delivery stream.
--   
--   <a>$sel:shareStatus:ResolverQueryLogConfig'</a>,
--   <a>resolverQueryLogConfig_shareStatus</a> - An indication of whether
--   the query logging configuration is shared with other Amazon Web
--   Services accounts, or was shared with the current account by another
--   Amazon Web Services account. Sharing is configured through Resource
--   Access Manager (RAM).
--   
--   <a>$sel:ownerId:ResolverQueryLogConfig'</a>,
--   <a>resolverQueryLogConfig_ownerId</a> - The Amazon Web Services
--   account ID for the account that created the query logging
--   configuration.
--   
--   <a>$sel:name:ResolverQueryLogConfig'</a>,
--   <a>resolverQueryLogConfig_name</a> - The name of the query logging
--   configuration.
--   
--   <a>$sel:id:ResolverQueryLogConfig'</a>,
--   <a>resolverQueryLogConfig_id</a> - The ID for the query logging
--   configuration.
newResolverQueryLogConfig :: ResolverQueryLogConfig

-- | In the response to an <a>AssociateResolverQueryLogConfig</a>,
--   <a>DisassociateResolverQueryLogConfig</a>,
--   <a>GetResolverQueryLogConfigAssociation</a>, or
--   <a>ListResolverQueryLogConfigAssociations</a>, request, a complex type
--   that contains settings for a specified association between an Amazon
--   VPC and a query logging configuration.
--   
--   <i>See:</i> <a>newResolverQueryLogConfigAssociation</a> smart
--   constructor.
data ResolverQueryLogConfigAssociation
ResolverQueryLogConfigAssociation' :: Maybe Text -> Maybe ResolverQueryLogConfigAssociationStatus -> Maybe Text -> Maybe Text -> Maybe ResolverQueryLogConfigAssociationError -> Maybe Text -> Maybe Text -> ResolverQueryLogConfigAssociation

-- | Create a value of <a>ResolverQueryLogConfigAssociation</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:ResolverQueryLogConfigAssociation'</a>,
--   <a>resolverQueryLogConfigAssociation_creationTime</a> - The date and
--   time that the VPC was associated with the query logging configuration,
--   in Unix time format and Coordinated Universal Time (UTC).
--   
--   <a>$sel:status:ResolverQueryLogConfigAssociation'</a>,
--   <a>resolverQueryLogConfigAssociation_status</a> - The status of the
--   specified query logging association. Valid values include the
--   following:
--   
--   <ul>
--   <li><tt>CREATING</tt>: Resolver is creating an association between an
--   Amazon VPC and a query logging configuration.</li>
--   <li><tt>CREATED</tt>: The association between an Amazon VPC and a
--   query logging configuration was successfully created. Resolver is
--   logging queries that originate in the specified VPC.</li>
--   <li><tt>DELETING</tt>: Resolver is deleting this query logging
--   association.</li>
--   <li><tt>FAILED</tt>: Resolver either couldn't create or couldn't
--   delete the query logging association.</li>
--   </ul>
--   
--   
--   <a>$sel:resolverQueryLogConfigId:ResolverQueryLogConfigAssociation'</a>,
--   <a>resolverQueryLogConfigAssociation_resolverQueryLogConfigId</a> -
--   The ID of the query logging configuration that a VPC is associated
--   with.
--   
--   <a>$sel:resourceId:ResolverQueryLogConfigAssociation'</a>,
--   <a>resolverQueryLogConfigAssociation_resourceId</a> - The ID of the
--   Amazon VPC that is associated with the query logging configuration.
--   
--   <a>$sel:error:ResolverQueryLogConfigAssociation'</a>,
--   <a>resolverQueryLogConfigAssociation_error</a> - If the value of
--   <tt>Status</tt> is <tt>FAILED</tt>, the value of <tt>Error</tt>
--   indicates the cause:
--   
--   <ul>
--   <li><tt>DESTINATION_NOT_FOUND</tt>: The specified destination (for
--   example, an Amazon S3 bucket) was deleted.</li>
--   <li><tt>ACCESS_DENIED</tt>: Permissions don't allow sending logs to
--   the destination.</li>
--   </ul>
--   
--   If the value of <tt>Status</tt> is a value other than <tt>FAILED</tt>,
--   <tt>Error</tt> is null.
--   
--   <a>$sel:id:ResolverQueryLogConfigAssociation'</a>,
--   <a>resolverQueryLogConfigAssociation_id</a> - The ID of the query
--   logging association.
--   
--   <a>$sel:errorMessage:ResolverQueryLogConfigAssociation'</a>,
--   <a>resolverQueryLogConfigAssociation_errorMessage</a> - Contains
--   additional information about the error. If the value or <tt>Error</tt>
--   is null, the value of <tt>ErrorMessage</tt> also is null.
newResolverQueryLogConfigAssociation :: ResolverQueryLogConfigAssociation

-- | For queries that originate in your VPC, detailed information about a
--   Resolver rule, which specifies how to route DNS queries out of the
--   VPC. The <tt>ResolverRule</tt> parameter appears in the response to a
--   <a>CreateResolverRule</a>, <a>DeleteResolverRule</a>,
--   <a>GetResolverRule</a>, <a>ListResolverRules</a>, or
--   <a>UpdateResolverRule</a> request.
--   
--   <i>See:</i> <a>newResolverRule</a> smart constructor.
data ResolverRule
ResolverRule' :: Maybe Text -> Maybe ResolverRuleStatus -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe (NonEmpty TargetAddress) -> Maybe Text -> Maybe ShareStatus -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe RuleTypeOption -> ResolverRule

-- | Create a value of <a>ResolverRule</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:ResolverRule'</a>,
--   <a>resolverRule_creationTime</a> - The date and time that the Resolver
--   rule was created, in Unix time format and Coordinated Universal Time
--   (UTC).
--   
--   <a>$sel:status:ResolverRule'</a>, <a>resolverRule_status</a> - A code
--   that specifies the current status of the Resolver rule.
--   
--   <a>$sel:arn:ResolverRule'</a>, <a>resolverRule_arn</a> - The ARN
--   (Amazon Resource Name) for the Resolver rule specified by <tt>Id</tt>.
--   
--   <a>$sel:resolverEndpointId:ResolverRule'</a>,
--   <a>resolverRule_resolverEndpointId</a> - The ID of the endpoint that
--   the rule is associated with.
--   
--   <a>$sel:creatorRequestId:ResolverRule'</a>,
--   <a>resolverRule_creatorRequestId</a> - A unique string that you
--   specified when you created the Resolver rule.
--   <tt>CreatorRequestId</tt> identifies the request and allows failed
--   requests to be retried without the risk of running the operation
--   twice.
--   
--   <a>$sel:targetIps:ResolverRule'</a>, <a>resolverRule_targetIps</a> -
--   An array that contains the IP addresses and ports that an outbound
--   endpoint forwards DNS queries to. Typically, these are the IP
--   addresses of DNS resolvers on your network. Specify IPv4 addresses.
--   IPv6 is not supported.
--   
--   <a>$sel:modificationTime:ResolverRule'</a>,
--   <a>resolverRule_modificationTime</a> - The date and time that the
--   Resolver rule was last updated, in Unix time format and Coordinated
--   Universal Time (UTC).
--   
--   <a>$sel:shareStatus:ResolverRule'</a>, <a>resolverRule_shareStatus</a>
--   - Whether the rule is shared and, if so, whether the current account
--   is sharing the rule with another account, or another account is
--   sharing the rule with the current account.
--   
--   <a>$sel:ownerId:ResolverRule'</a>, <a>resolverRule_ownerId</a> - When
--   a rule is shared with another Amazon Web Services account, the account
--   ID of the account that the rule is shared with.
--   
--   <a>$sel:domainName:ResolverRule'</a>, <a>resolverRule_domainName</a> -
--   DNS queries for this domain name are forwarded to the IP addresses
--   that are specified in <tt>TargetIps</tt>. If a query matches multiple
--   Resolver rules (example.com and www.example.com), the query is routed
--   using the Resolver rule that contains the most specific domain name
--   (www.example.com).
--   
--   <a>$sel:statusMessage:ResolverRule'</a>,
--   <a>resolverRule_statusMessage</a> - A detailed description of the
--   status of a Resolver rule.
--   
--   <a>$sel:name:ResolverRule'</a>, <a>resolverRule_name</a> - The name
--   for the Resolver rule, which you specified when you created the
--   Resolver rule.
--   
--   <a>$sel:id:ResolverRule'</a>, <a>resolverRule_id</a> - The ID that
--   Resolver assigned to the Resolver rule when you created it.
--   
--   <a>$sel:ruleType:ResolverRule'</a>, <a>resolverRule_ruleType</a> -
--   When you want to forward DNS queries for specified domain name to
--   resolvers on your network, specify <tt>FORWARD</tt>.
--   
--   When you have a forwarding rule to forward DNS queries for a domain to
--   your network and you want Resolver to process queries for a subdomain
--   of that domain, specify <tt>SYSTEM</tt>.
--   
--   For example, to forward DNS queries for example.com to resolvers on
--   your network, you create a rule and specify <tt>FORWARD</tt> for
--   <tt>RuleType</tt>. To then have Resolver process queries for
--   apex.example.com, you create a rule and specify <tt>SYSTEM</tt> for
--   <tt>RuleType</tt>.
--   
--   Currently, only Resolver can create rules that have a value of
--   <tt>RECURSIVE</tt> for <tt>RuleType</tt>.
newResolverRule :: ResolverRule

-- | In the response to an <a>AssociateResolverRule</a>,
--   <a>DisassociateResolverRule</a>, or
--   <a>ListResolverRuleAssociations</a> request, provides information
--   about an association between a Resolver rule and a VPC. The
--   association determines which DNS queries that originate in the VPC are
--   forwarded to your network.
--   
--   <i>See:</i> <a>newResolverRuleAssociation</a> smart constructor.
data ResolverRuleAssociation
ResolverRuleAssociation' :: Maybe ResolverRuleAssociationStatus -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> ResolverRuleAssociation

-- | Create a value of <a>ResolverRuleAssociation</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:ResolverRuleAssociation'</a>,
--   <a>resolverRuleAssociation_status</a> - A code that specifies the
--   current status of the association between a Resolver rule and a VPC.
--   
--   <a>$sel:resolverRuleId:ResolverRuleAssociation'</a>,
--   <a>resolverRuleAssociation_resolverRuleId</a> - The ID of the Resolver
--   rule that you associated with the VPC that is specified by
--   <tt>VPCId</tt>.
--   
--   <a>$sel:vPCId:ResolverRuleAssociation'</a>,
--   <a>resolverRuleAssociation_vPCId</a> - The ID of the VPC that you
--   associated the Resolver rule with.
--   
--   <a>$sel:statusMessage:ResolverRuleAssociation'</a>,
--   <a>resolverRuleAssociation_statusMessage</a> - A detailed description
--   of the status of the association between a Resolver rule and a VPC.
--   
--   <a>$sel:name:ResolverRuleAssociation'</a>,
--   <a>resolverRuleAssociation_name</a> - The name of an association
--   between a Resolver rule and a VPC.
--   
--   <a>$sel:id:ResolverRuleAssociation'</a>,
--   <a>resolverRuleAssociation_id</a> - The ID of the association between
--   a Resolver rule and a VPC. Resolver assigns this value when you submit
--   an <a>AssociateResolverRule</a> request.
newResolverRuleAssociation :: ResolverRuleAssociation

-- | In an <a>UpdateResolverRule</a> request, information about the changes
--   that you want to make.
--   
--   <i>See:</i> <a>newResolverRuleConfig</a> smart constructor.
data ResolverRuleConfig
ResolverRuleConfig' :: Maybe Text -> Maybe (NonEmpty TargetAddress) -> Maybe Text -> ResolverRuleConfig

-- | Create a value of <a>ResolverRuleConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resolverEndpointId:ResolverRuleConfig'</a>,
--   <a>resolverRuleConfig_resolverEndpointId</a> - The ID of the new
--   outbound Resolver endpoint that you want to use to route DNS queries
--   to the IP addresses that you specify in <tt>TargetIps</tt>.
--   
--   <a>$sel:targetIps:ResolverRuleConfig'</a>,
--   <a>resolverRuleConfig_targetIps</a> - For DNS queries that originate
--   in your VPC, the new IP addresses that you want to route outbound DNS
--   queries to.
--   
--   <a>$sel:name:ResolverRuleConfig'</a>, <a>resolverRuleConfig_name</a> -
--   The new name for the Resolver rule. The name that you specify appears
--   in the Resolver dashboard in the Route 53 console.
newResolverRuleConfig :: ResolverRuleConfig

-- | One tag that you want to add to the specified resource. A tag consists
--   of a <tt>Key</tt> (a name for the tag) and a <tt>Value</tt>.
--   
--   <i>See:</i> <a>newTag</a> smart constructor.
data Tag
Tag' :: Text -> Text -> Tag

-- | Create a value of <a>Tag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:Tag'</a>, <a>tag_key</a> - The name for the tag. For
--   example, if you want to associate Resolver resources with the account
--   IDs of your customers for billing purposes, the value of <tt>Key</tt>
--   might be <tt>account-id</tt>.
--   
--   <a>$sel:value:Tag'</a>, <a>tag_value</a> - The value for the tag. For
--   example, if <tt>Key</tt> is <tt>account-id</tt>, then <tt>Value</tt>
--   might be the ID of the customer account that you're creating the
--   resource for.
newTag :: Text -> Text -> Tag

-- | In a <a>CreateResolverRule</a> request, an array of the IPs that you
--   want to forward DNS queries to.
--   
--   <i>See:</i> <a>newTargetAddress</a> smart constructor.
data TargetAddress
TargetAddress' :: Maybe Natural -> Text -> TargetAddress

-- | Create a value of <a>TargetAddress</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:port:TargetAddress'</a>, <a>targetAddress_port</a> - The port
--   at <tt>Ip</tt> that you want to forward DNS queries to.
--   
--   <a>$sel:ip:TargetAddress'</a>, <a>targetAddress_ip</a> - One IP
--   address that you want to forward DNS queries to. You can specify only
--   IPv4 addresses.
newTargetAddress :: Text -> TargetAddress
