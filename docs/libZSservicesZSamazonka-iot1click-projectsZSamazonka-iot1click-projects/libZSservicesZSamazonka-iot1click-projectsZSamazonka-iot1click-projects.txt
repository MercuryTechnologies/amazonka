-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/

@package libZSservicesZSamazonka-iot1click-projectsZSamazonka-iot1click-projects
@version 2.0


module Amazonka.IoT1ClickProjects.Types.DeviceTemplate

-- | An object representing a device for a placement template (see
--   PlacementTemplate).
--   
--   <i>See:</i> <a>newDeviceTemplate</a> smart constructor.
data DeviceTemplate
DeviceTemplate' :: Maybe Text -> Maybe (HashMap Text Text) -> DeviceTemplate

-- | The device type, which currently must be <tt>"button"</tt>.
[$sel:deviceType:DeviceTemplate'] :: DeviceTemplate -> Maybe Text

-- | An optional Lambda function to invoke instead of the default Lambda
--   function provided by the placement template.
[$sel:callbackOverrides:DeviceTemplate'] :: DeviceTemplate -> Maybe (HashMap Text Text)

-- | Create a value of <a>DeviceTemplate</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deviceType:DeviceTemplate'</a>,
--   <a>deviceTemplate_deviceType</a> - The device type, which currently
--   must be <tt>"button"</tt>.
--   
--   <a>$sel:callbackOverrides:DeviceTemplate'</a>,
--   <a>deviceTemplate_callbackOverrides</a> - An optional Lambda function
--   to invoke instead of the default Lambda function provided by the
--   placement template.
newDeviceTemplate :: DeviceTemplate

-- | The device type, which currently must be <tt>"button"</tt>.
deviceTemplate_deviceType :: Lens' DeviceTemplate (Maybe Text)

-- | An optional Lambda function to invoke instead of the default Lambda
--   function provided by the placement template.
deviceTemplate_callbackOverrides :: Lens' DeviceTemplate (Maybe (HashMap Text Text))
instance GHC.Generics.Generic Amazonka.IoT1ClickProjects.Types.DeviceTemplate.DeviceTemplate
instance GHC.Show.Show Amazonka.IoT1ClickProjects.Types.DeviceTemplate.DeviceTemplate
instance GHC.Read.Read Amazonka.IoT1ClickProjects.Types.DeviceTemplate.DeviceTemplate
instance GHC.Classes.Eq Amazonka.IoT1ClickProjects.Types.DeviceTemplate.DeviceTemplate
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoT1ClickProjects.Types.DeviceTemplate.DeviceTemplate
instance Data.Hashable.Class.Hashable Amazonka.IoT1ClickProjects.Types.DeviceTemplate.DeviceTemplate
instance Control.DeepSeq.NFData Amazonka.IoT1ClickProjects.Types.DeviceTemplate.DeviceTemplate
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoT1ClickProjects.Types.DeviceTemplate.DeviceTemplate


module Amazonka.IoT1ClickProjects.Types.PlacementDescription

-- | An object describing a project's placement.
--   
--   <i>See:</i> <a>newPlacementDescription</a> smart constructor.
data PlacementDescription
PlacementDescription' :: Text -> Text -> HashMap Text Text -> POSIX -> POSIX -> PlacementDescription

-- | The name of the project containing the placement.
[$sel:projectName:PlacementDescription'] :: PlacementDescription -> Text

-- | The name of the placement.
[$sel:placementName:PlacementDescription'] :: PlacementDescription -> Text

-- | The user-defined attributes associated with the placement.
[$sel:attributes:PlacementDescription'] :: PlacementDescription -> HashMap Text Text

-- | The date when the placement was initially created, in UNIX epoch time
--   format.
[$sel:createdDate:PlacementDescription'] :: PlacementDescription -> POSIX

-- | The date when the placement was last updated, in UNIX epoch time
--   format. If the placement was not updated, then <tt>createdDate</tt>
--   and <tt>updatedDate</tt> are the same.
[$sel:updatedDate:PlacementDescription'] :: PlacementDescription -> POSIX

-- | Create a value of <a>PlacementDescription</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:projectName:PlacementDescription'</a>,
--   <a>placementDescription_projectName</a> - The name of the project
--   containing the placement.
--   
--   <a>$sel:placementName:PlacementDescription'</a>,
--   <a>placementDescription_placementName</a> - The name of the placement.
--   
--   <a>$sel:attributes:PlacementDescription'</a>,
--   <a>placementDescription_attributes</a> - The user-defined attributes
--   associated with the placement.
--   
--   <a>$sel:createdDate:PlacementDescription'</a>,
--   <a>placementDescription_createdDate</a> - The date when the placement
--   was initially created, in UNIX epoch time format.
--   
--   <a>$sel:updatedDate:PlacementDescription'</a>,
--   <a>placementDescription_updatedDate</a> - The date when the placement
--   was last updated, in UNIX epoch time format. If the placement was not
--   updated, then <tt>createdDate</tt> and <tt>updatedDate</tt> are the
--   same.
newPlacementDescription :: Text -> Text -> UTCTime -> UTCTime -> PlacementDescription

-- | The name of the project containing the placement.
placementDescription_projectName :: Lens' PlacementDescription Text

-- | The name of the placement.
placementDescription_placementName :: Lens' PlacementDescription Text

-- | The user-defined attributes associated with the placement.
placementDescription_attributes :: Lens' PlacementDescription (HashMap Text Text)

-- | The date when the placement was initially created, in UNIX epoch time
--   format.
placementDescription_createdDate :: Lens' PlacementDescription UTCTime

-- | The date when the placement was last updated, in UNIX epoch time
--   format. If the placement was not updated, then <tt>createdDate</tt>
--   and <tt>updatedDate</tt> are the same.
placementDescription_updatedDate :: Lens' PlacementDescription UTCTime
instance GHC.Generics.Generic Amazonka.IoT1ClickProjects.Types.PlacementDescription.PlacementDescription
instance GHC.Show.Show Amazonka.IoT1ClickProjects.Types.PlacementDescription.PlacementDescription
instance GHC.Read.Read Amazonka.IoT1ClickProjects.Types.PlacementDescription.PlacementDescription
instance GHC.Classes.Eq Amazonka.IoT1ClickProjects.Types.PlacementDescription.PlacementDescription
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoT1ClickProjects.Types.PlacementDescription.PlacementDescription
instance Data.Hashable.Class.Hashable Amazonka.IoT1ClickProjects.Types.PlacementDescription.PlacementDescription
instance Control.DeepSeq.NFData Amazonka.IoT1ClickProjects.Types.PlacementDescription.PlacementDescription


module Amazonka.IoT1ClickProjects.Types.PlacementSummary

-- | An object providing summary information for a particular placement.
--   
--   <i>See:</i> <a>newPlacementSummary</a> smart constructor.
data PlacementSummary
PlacementSummary' :: Text -> Text -> POSIX -> POSIX -> PlacementSummary

-- | The name of the project containing the placement.
[$sel:projectName:PlacementSummary'] :: PlacementSummary -> Text

-- | The name of the placement being summarized.
[$sel:placementName:PlacementSummary'] :: PlacementSummary -> Text

-- | The date when the placement was originally created, in UNIX epoch time
--   format.
[$sel:createdDate:PlacementSummary'] :: PlacementSummary -> POSIX

-- | The date when the placement was last updated, in UNIX epoch time
--   format. If the placement was not updated, then <tt>createdDate</tt>
--   and <tt>updatedDate</tt> are the same.
[$sel:updatedDate:PlacementSummary'] :: PlacementSummary -> POSIX

-- | Create a value of <a>PlacementSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:projectName:PlacementSummary'</a>,
--   <a>placementSummary_projectName</a> - The name of the project
--   containing the placement.
--   
--   <a>$sel:placementName:PlacementSummary'</a>,
--   <a>placementSummary_placementName</a> - The name of the placement
--   being summarized.
--   
--   <a>$sel:createdDate:PlacementSummary'</a>,
--   <a>placementSummary_createdDate</a> - The date when the placement was
--   originally created, in UNIX epoch time format.
--   
--   <a>$sel:updatedDate:PlacementSummary'</a>,
--   <a>placementSummary_updatedDate</a> - The date when the placement was
--   last updated, in UNIX epoch time format. If the placement was not
--   updated, then <tt>createdDate</tt> and <tt>updatedDate</tt> are the
--   same.
newPlacementSummary :: Text -> Text -> UTCTime -> UTCTime -> PlacementSummary

-- | The name of the project containing the placement.
placementSummary_projectName :: Lens' PlacementSummary Text

-- | The name of the placement being summarized.
placementSummary_placementName :: Lens' PlacementSummary Text

-- | The date when the placement was originally created, in UNIX epoch time
--   format.
placementSummary_createdDate :: Lens' PlacementSummary UTCTime

-- | The date when the placement was last updated, in UNIX epoch time
--   format. If the placement was not updated, then <tt>createdDate</tt>
--   and <tt>updatedDate</tt> are the same.
placementSummary_updatedDate :: Lens' PlacementSummary UTCTime
instance GHC.Generics.Generic Amazonka.IoT1ClickProjects.Types.PlacementSummary.PlacementSummary
instance GHC.Show.Show Amazonka.IoT1ClickProjects.Types.PlacementSummary.PlacementSummary
instance GHC.Read.Read Amazonka.IoT1ClickProjects.Types.PlacementSummary.PlacementSummary
instance GHC.Classes.Eq Amazonka.IoT1ClickProjects.Types.PlacementSummary.PlacementSummary
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoT1ClickProjects.Types.PlacementSummary.PlacementSummary
instance Data.Hashable.Class.Hashable Amazonka.IoT1ClickProjects.Types.PlacementSummary.PlacementSummary
instance Control.DeepSeq.NFData Amazonka.IoT1ClickProjects.Types.PlacementSummary.PlacementSummary


module Amazonka.IoT1ClickProjects.Types.PlacementTemplate

-- | An object defining the template for a placement.
--   
--   <i>See:</i> <a>newPlacementTemplate</a> smart constructor.
data PlacementTemplate
PlacementTemplate' :: Maybe (HashMap Text DeviceTemplate) -> Maybe (HashMap Text Text) -> PlacementTemplate

-- | An object specifying the DeviceTemplate for all placements using this
--   (PlacementTemplate) template.
[$sel:deviceTemplates:PlacementTemplate'] :: PlacementTemplate -> Maybe (HashMap Text DeviceTemplate)

-- | The default attributes (key/value pairs) to be applied to all
--   placements using this template.
[$sel:defaultAttributes:PlacementTemplate'] :: PlacementTemplate -> Maybe (HashMap Text Text)

-- | Create a value of <a>PlacementTemplate</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deviceTemplates:PlacementTemplate'</a>,
--   <a>placementTemplate_deviceTemplates</a> - An object specifying the
--   DeviceTemplate for all placements using this (PlacementTemplate)
--   template.
--   
--   <a>$sel:defaultAttributes:PlacementTemplate'</a>,
--   <a>placementTemplate_defaultAttributes</a> - The default attributes
--   (key/value pairs) to be applied to all placements using this template.
newPlacementTemplate :: PlacementTemplate

-- | An object specifying the DeviceTemplate for all placements using this
--   (PlacementTemplate) template.
placementTemplate_deviceTemplates :: Lens' PlacementTemplate (Maybe (HashMap Text DeviceTemplate))

-- | The default attributes (key/value pairs) to be applied to all
--   placements using this template.
placementTemplate_defaultAttributes :: Lens' PlacementTemplate (Maybe (HashMap Text Text))
instance GHC.Generics.Generic Amazonka.IoT1ClickProjects.Types.PlacementTemplate.PlacementTemplate
instance GHC.Show.Show Amazonka.IoT1ClickProjects.Types.PlacementTemplate.PlacementTemplate
instance GHC.Read.Read Amazonka.IoT1ClickProjects.Types.PlacementTemplate.PlacementTemplate
instance GHC.Classes.Eq Amazonka.IoT1ClickProjects.Types.PlacementTemplate.PlacementTemplate
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoT1ClickProjects.Types.PlacementTemplate.PlacementTemplate
instance Data.Hashable.Class.Hashable Amazonka.IoT1ClickProjects.Types.PlacementTemplate.PlacementTemplate
instance Control.DeepSeq.NFData Amazonka.IoT1ClickProjects.Types.PlacementTemplate.PlacementTemplate
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoT1ClickProjects.Types.PlacementTemplate.PlacementTemplate


module Amazonka.IoT1ClickProjects.Types.ProjectDescription

-- | An object providing detailed information for a particular project
--   associated with an AWS account and region.
--   
--   <i>See:</i> <a>newProjectDescription</a> smart constructor.
data ProjectDescription
ProjectDescription' :: Maybe Text -> Maybe PlacementTemplate -> Maybe Text -> Maybe (HashMap Text Text) -> Text -> POSIX -> POSIX -> ProjectDescription

-- | The ARN of the project.
[$sel:arn:ProjectDescription'] :: ProjectDescription -> Maybe Text

-- | An object describing the project's placement specifications.
[$sel:placementTemplate:ProjectDescription'] :: ProjectDescription -> Maybe PlacementTemplate

-- | The description of the project.
[$sel:description:ProjectDescription'] :: ProjectDescription -> Maybe Text

-- | The tags (metadata key/value pairs) associated with the project.
[$sel:tags:ProjectDescription'] :: ProjectDescription -> Maybe (HashMap Text Text)

-- | The name of the project for which to obtain information from.
[$sel:projectName:ProjectDescription'] :: ProjectDescription -> Text

-- | The date when the project was originally created, in UNIX epoch time
--   format.
[$sel:createdDate:ProjectDescription'] :: ProjectDescription -> POSIX

-- | The date when the project was last updated, in UNIX epoch time format.
--   If the project was not updated, then <tt>createdDate</tt> and
--   <tt>updatedDate</tt> are the same.
[$sel:updatedDate:ProjectDescription'] :: ProjectDescription -> POSIX

-- | Create a value of <a>ProjectDescription</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:ProjectDescription'</a>, <a>projectDescription_arn</a> -
--   The ARN of the project.
--   
--   <a>$sel:placementTemplate:ProjectDescription'</a>,
--   <a>projectDescription_placementTemplate</a> - An object describing the
--   project's placement specifications.
--   
--   <a>$sel:description:ProjectDescription'</a>,
--   <a>projectDescription_description</a> - The description of the
--   project.
--   
--   <a>$sel:tags:ProjectDescription'</a>, <a>projectDescription_tags</a> -
--   The tags (metadata key/value pairs) associated with the project.
--   
--   <a>$sel:projectName:ProjectDescription'</a>,
--   <a>projectDescription_projectName</a> - The name of the project for
--   which to obtain information from.
--   
--   <a>$sel:createdDate:ProjectDescription'</a>,
--   <a>projectDescription_createdDate</a> - The date when the project was
--   originally created, in UNIX epoch time format.
--   
--   <a>$sel:updatedDate:ProjectDescription'</a>,
--   <a>projectDescription_updatedDate</a> - The date when the project was
--   last updated, in UNIX epoch time format. If the project was not
--   updated, then <tt>createdDate</tt> and <tt>updatedDate</tt> are the
--   same.
newProjectDescription :: Text -> UTCTime -> UTCTime -> ProjectDescription

-- | The ARN of the project.
projectDescription_arn :: Lens' ProjectDescription (Maybe Text)

-- | An object describing the project's placement specifications.
projectDescription_placementTemplate :: Lens' ProjectDescription (Maybe PlacementTemplate)

-- | The description of the project.
projectDescription_description :: Lens' ProjectDescription (Maybe Text)

-- | The tags (metadata key/value pairs) associated with the project.
projectDescription_tags :: Lens' ProjectDescription (Maybe (HashMap Text Text))

-- | The name of the project for which to obtain information from.
projectDescription_projectName :: Lens' ProjectDescription Text

-- | The date when the project was originally created, in UNIX epoch time
--   format.
projectDescription_createdDate :: Lens' ProjectDescription UTCTime

-- | The date when the project was last updated, in UNIX epoch time format.
--   If the project was not updated, then <tt>createdDate</tt> and
--   <tt>updatedDate</tt> are the same.
projectDescription_updatedDate :: Lens' ProjectDescription UTCTime
instance GHC.Generics.Generic Amazonka.IoT1ClickProjects.Types.ProjectDescription.ProjectDescription
instance GHC.Show.Show Amazonka.IoT1ClickProjects.Types.ProjectDescription.ProjectDescription
instance GHC.Read.Read Amazonka.IoT1ClickProjects.Types.ProjectDescription.ProjectDescription
instance GHC.Classes.Eq Amazonka.IoT1ClickProjects.Types.ProjectDescription.ProjectDescription
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoT1ClickProjects.Types.ProjectDescription.ProjectDescription
instance Data.Hashable.Class.Hashable Amazonka.IoT1ClickProjects.Types.ProjectDescription.ProjectDescription
instance Control.DeepSeq.NFData Amazonka.IoT1ClickProjects.Types.ProjectDescription.ProjectDescription


module Amazonka.IoT1ClickProjects.Types.ProjectSummary

-- | An object providing summary information for a particular project for
--   an associated AWS account and region.
--   
--   <i>See:</i> <a>newProjectSummary</a> smart constructor.
data ProjectSummary
ProjectSummary' :: Maybe Text -> Maybe (HashMap Text Text) -> Text -> POSIX -> POSIX -> ProjectSummary

-- | The ARN of the project.
[$sel:arn:ProjectSummary'] :: ProjectSummary -> Maybe Text

-- | The tags (metadata key/value pairs) associated with the project.
[$sel:tags:ProjectSummary'] :: ProjectSummary -> Maybe (HashMap Text Text)

-- | The name of the project being summarized.
[$sel:projectName:ProjectSummary'] :: ProjectSummary -> Text

-- | The date when the project was originally created, in UNIX epoch time
--   format.
[$sel:createdDate:ProjectSummary'] :: ProjectSummary -> POSIX

-- | The date when the project was last updated, in UNIX epoch time format.
--   If the project was not updated, then <tt>createdDate</tt> and
--   <tt>updatedDate</tt> are the same.
[$sel:updatedDate:ProjectSummary'] :: ProjectSummary -> POSIX

-- | Create a value of <a>ProjectSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:ProjectSummary'</a>, <a>projectSummary_arn</a> - The ARN
--   of the project.
--   
--   <a>$sel:tags:ProjectSummary'</a>, <a>projectSummary_tags</a> - The
--   tags (metadata key/value pairs) associated with the project.
--   
--   <a>$sel:projectName:ProjectSummary'</a>,
--   <a>projectSummary_projectName</a> - The name of the project being
--   summarized.
--   
--   <a>$sel:createdDate:ProjectSummary'</a>,
--   <a>projectSummary_createdDate</a> - The date when the project was
--   originally created, in UNIX epoch time format.
--   
--   <a>$sel:updatedDate:ProjectSummary'</a>,
--   <a>projectSummary_updatedDate</a> - The date when the project was last
--   updated, in UNIX epoch time format. If the project was not updated,
--   then <tt>createdDate</tt> and <tt>updatedDate</tt> are the same.
newProjectSummary :: Text -> UTCTime -> UTCTime -> ProjectSummary

-- | The ARN of the project.
projectSummary_arn :: Lens' ProjectSummary (Maybe Text)

-- | The tags (metadata key/value pairs) associated with the project.
projectSummary_tags :: Lens' ProjectSummary (Maybe (HashMap Text Text))

-- | The name of the project being summarized.
projectSummary_projectName :: Lens' ProjectSummary Text

-- | The date when the project was originally created, in UNIX epoch time
--   format.
projectSummary_createdDate :: Lens' ProjectSummary UTCTime

-- | The date when the project was last updated, in UNIX epoch time format.
--   If the project was not updated, then <tt>createdDate</tt> and
--   <tt>updatedDate</tt> are the same.
projectSummary_updatedDate :: Lens' ProjectSummary UTCTime
instance GHC.Generics.Generic Amazonka.IoT1ClickProjects.Types.ProjectSummary.ProjectSummary
instance GHC.Show.Show Amazonka.IoT1ClickProjects.Types.ProjectSummary.ProjectSummary
instance GHC.Read.Read Amazonka.IoT1ClickProjects.Types.ProjectSummary.ProjectSummary
instance GHC.Classes.Eq Amazonka.IoT1ClickProjects.Types.ProjectSummary.ProjectSummary
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoT1ClickProjects.Types.ProjectSummary.ProjectSummary
instance Data.Hashable.Class.Hashable Amazonka.IoT1ClickProjects.Types.ProjectSummary.ProjectSummary
instance Control.DeepSeq.NFData Amazonka.IoT1ClickProjects.Types.ProjectSummary.ProjectSummary


module Amazonka.IoT1ClickProjects.Types

-- | API version <tt>2018-05-14</tt> of the Amazon IoT 1-Click Projects
--   Service SDK configuration.
defaultService :: Service

_InvalidRequestException :: AsError a => Getting (First ServiceError) a ServiceError

_TooManyRequestsException :: AsError a => Getting (First ServiceError) a ServiceError

_InternalFailureException :: AsError a => Getting (First ServiceError) a ServiceError

_ResourceConflictException :: AsError a => Getting (First ServiceError) a ServiceError

_ResourceNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | An object representing a device for a placement template (see
--   PlacementTemplate).
--   
--   <i>See:</i> <a>newDeviceTemplate</a> smart constructor.
data DeviceTemplate
DeviceTemplate' :: Maybe Text -> Maybe (HashMap Text Text) -> DeviceTemplate

-- | The device type, which currently must be <tt>"button"</tt>.
[$sel:deviceType:DeviceTemplate'] :: DeviceTemplate -> Maybe Text

-- | An optional Lambda function to invoke instead of the default Lambda
--   function provided by the placement template.
[$sel:callbackOverrides:DeviceTemplate'] :: DeviceTemplate -> Maybe (HashMap Text Text)

-- | Create a value of <a>DeviceTemplate</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deviceType:DeviceTemplate'</a>,
--   <a>deviceTemplate_deviceType</a> - The device type, which currently
--   must be <tt>"button"</tt>.
--   
--   <a>$sel:callbackOverrides:DeviceTemplate'</a>,
--   <a>deviceTemplate_callbackOverrides</a> - An optional Lambda function
--   to invoke instead of the default Lambda function provided by the
--   placement template.
newDeviceTemplate :: DeviceTemplate

-- | The device type, which currently must be <tt>"button"</tt>.
deviceTemplate_deviceType :: Lens' DeviceTemplate (Maybe Text)

-- | An optional Lambda function to invoke instead of the default Lambda
--   function provided by the placement template.
deviceTemplate_callbackOverrides :: Lens' DeviceTemplate (Maybe (HashMap Text Text))

-- | An object describing a project's placement.
--   
--   <i>See:</i> <a>newPlacementDescription</a> smart constructor.
data PlacementDescription
PlacementDescription' :: Text -> Text -> HashMap Text Text -> POSIX -> POSIX -> PlacementDescription

-- | The name of the project containing the placement.
[$sel:projectName:PlacementDescription'] :: PlacementDescription -> Text

-- | The name of the placement.
[$sel:placementName:PlacementDescription'] :: PlacementDescription -> Text

-- | The user-defined attributes associated with the placement.
[$sel:attributes:PlacementDescription'] :: PlacementDescription -> HashMap Text Text

-- | The date when the placement was initially created, in UNIX epoch time
--   format.
[$sel:createdDate:PlacementDescription'] :: PlacementDescription -> POSIX

-- | The date when the placement was last updated, in UNIX epoch time
--   format. If the placement was not updated, then <tt>createdDate</tt>
--   and <tt>updatedDate</tt> are the same.
[$sel:updatedDate:PlacementDescription'] :: PlacementDescription -> POSIX

-- | Create a value of <a>PlacementDescription</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:projectName:PlacementDescription'</a>,
--   <a>placementDescription_projectName</a> - The name of the project
--   containing the placement.
--   
--   <a>$sel:placementName:PlacementDescription'</a>,
--   <a>placementDescription_placementName</a> - The name of the placement.
--   
--   <a>$sel:attributes:PlacementDescription'</a>,
--   <a>placementDescription_attributes</a> - The user-defined attributes
--   associated with the placement.
--   
--   <a>$sel:createdDate:PlacementDescription'</a>,
--   <a>placementDescription_createdDate</a> - The date when the placement
--   was initially created, in UNIX epoch time format.
--   
--   <a>$sel:updatedDate:PlacementDescription'</a>,
--   <a>placementDescription_updatedDate</a> - The date when the placement
--   was last updated, in UNIX epoch time format. If the placement was not
--   updated, then <tt>createdDate</tt> and <tt>updatedDate</tt> are the
--   same.
newPlacementDescription :: Text -> Text -> UTCTime -> UTCTime -> PlacementDescription

-- | The name of the project containing the placement.
placementDescription_projectName :: Lens' PlacementDescription Text

-- | The name of the placement.
placementDescription_placementName :: Lens' PlacementDescription Text

-- | The user-defined attributes associated with the placement.
placementDescription_attributes :: Lens' PlacementDescription (HashMap Text Text)

-- | The date when the placement was initially created, in UNIX epoch time
--   format.
placementDescription_createdDate :: Lens' PlacementDescription UTCTime

-- | The date when the placement was last updated, in UNIX epoch time
--   format. If the placement was not updated, then <tt>createdDate</tt>
--   and <tt>updatedDate</tt> are the same.
placementDescription_updatedDate :: Lens' PlacementDescription UTCTime

-- | An object providing summary information for a particular placement.
--   
--   <i>See:</i> <a>newPlacementSummary</a> smart constructor.
data PlacementSummary
PlacementSummary' :: Text -> Text -> POSIX -> POSIX -> PlacementSummary

-- | The name of the project containing the placement.
[$sel:projectName:PlacementSummary'] :: PlacementSummary -> Text

-- | The name of the placement being summarized.
[$sel:placementName:PlacementSummary'] :: PlacementSummary -> Text

-- | The date when the placement was originally created, in UNIX epoch time
--   format.
[$sel:createdDate:PlacementSummary'] :: PlacementSummary -> POSIX

-- | The date when the placement was last updated, in UNIX epoch time
--   format. If the placement was not updated, then <tt>createdDate</tt>
--   and <tt>updatedDate</tt> are the same.
[$sel:updatedDate:PlacementSummary'] :: PlacementSummary -> POSIX

-- | Create a value of <a>PlacementSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:projectName:PlacementSummary'</a>,
--   <a>placementSummary_projectName</a> - The name of the project
--   containing the placement.
--   
--   <a>$sel:placementName:PlacementSummary'</a>,
--   <a>placementSummary_placementName</a> - The name of the placement
--   being summarized.
--   
--   <a>$sel:createdDate:PlacementSummary'</a>,
--   <a>placementSummary_createdDate</a> - The date when the placement was
--   originally created, in UNIX epoch time format.
--   
--   <a>$sel:updatedDate:PlacementSummary'</a>,
--   <a>placementSummary_updatedDate</a> - The date when the placement was
--   last updated, in UNIX epoch time format. If the placement was not
--   updated, then <tt>createdDate</tt> and <tt>updatedDate</tt> are the
--   same.
newPlacementSummary :: Text -> Text -> UTCTime -> UTCTime -> PlacementSummary

-- | The name of the project containing the placement.
placementSummary_projectName :: Lens' PlacementSummary Text

-- | The name of the placement being summarized.
placementSummary_placementName :: Lens' PlacementSummary Text

-- | The date when the placement was originally created, in UNIX epoch time
--   format.
placementSummary_createdDate :: Lens' PlacementSummary UTCTime

-- | The date when the placement was last updated, in UNIX epoch time
--   format. If the placement was not updated, then <tt>createdDate</tt>
--   and <tt>updatedDate</tt> are the same.
placementSummary_updatedDate :: Lens' PlacementSummary UTCTime

-- | An object defining the template for a placement.
--   
--   <i>See:</i> <a>newPlacementTemplate</a> smart constructor.
data PlacementTemplate
PlacementTemplate' :: Maybe (HashMap Text DeviceTemplate) -> Maybe (HashMap Text Text) -> PlacementTemplate

-- | An object specifying the DeviceTemplate for all placements using this
--   (PlacementTemplate) template.
[$sel:deviceTemplates:PlacementTemplate'] :: PlacementTemplate -> Maybe (HashMap Text DeviceTemplate)

-- | The default attributes (key/value pairs) to be applied to all
--   placements using this template.
[$sel:defaultAttributes:PlacementTemplate'] :: PlacementTemplate -> Maybe (HashMap Text Text)

-- | Create a value of <a>PlacementTemplate</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deviceTemplates:PlacementTemplate'</a>,
--   <a>placementTemplate_deviceTemplates</a> - An object specifying the
--   DeviceTemplate for all placements using this (PlacementTemplate)
--   template.
--   
--   <a>$sel:defaultAttributes:PlacementTemplate'</a>,
--   <a>placementTemplate_defaultAttributes</a> - The default attributes
--   (key/value pairs) to be applied to all placements using this template.
newPlacementTemplate :: PlacementTemplate

-- | An object specifying the DeviceTemplate for all placements using this
--   (PlacementTemplate) template.
placementTemplate_deviceTemplates :: Lens' PlacementTemplate (Maybe (HashMap Text DeviceTemplate))

-- | The default attributes (key/value pairs) to be applied to all
--   placements using this template.
placementTemplate_defaultAttributes :: Lens' PlacementTemplate (Maybe (HashMap Text Text))

-- | An object providing detailed information for a particular project
--   associated with an AWS account and region.
--   
--   <i>See:</i> <a>newProjectDescription</a> smart constructor.
data ProjectDescription
ProjectDescription' :: Maybe Text -> Maybe PlacementTemplate -> Maybe Text -> Maybe (HashMap Text Text) -> Text -> POSIX -> POSIX -> ProjectDescription

-- | The ARN of the project.
[$sel:arn:ProjectDescription'] :: ProjectDescription -> Maybe Text

-- | An object describing the project's placement specifications.
[$sel:placementTemplate:ProjectDescription'] :: ProjectDescription -> Maybe PlacementTemplate

-- | The description of the project.
[$sel:description:ProjectDescription'] :: ProjectDescription -> Maybe Text

-- | The tags (metadata key/value pairs) associated with the project.
[$sel:tags:ProjectDescription'] :: ProjectDescription -> Maybe (HashMap Text Text)

-- | The name of the project for which to obtain information from.
[$sel:projectName:ProjectDescription'] :: ProjectDescription -> Text

-- | The date when the project was originally created, in UNIX epoch time
--   format.
[$sel:createdDate:ProjectDescription'] :: ProjectDescription -> POSIX

-- | The date when the project was last updated, in UNIX epoch time format.
--   If the project was not updated, then <tt>createdDate</tt> and
--   <tt>updatedDate</tt> are the same.
[$sel:updatedDate:ProjectDescription'] :: ProjectDescription -> POSIX

-- | Create a value of <a>ProjectDescription</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:ProjectDescription'</a>, <a>projectDescription_arn</a> -
--   The ARN of the project.
--   
--   <a>$sel:placementTemplate:ProjectDescription'</a>,
--   <a>projectDescription_placementTemplate</a> - An object describing the
--   project's placement specifications.
--   
--   <a>$sel:description:ProjectDescription'</a>,
--   <a>projectDescription_description</a> - The description of the
--   project.
--   
--   <a>$sel:tags:ProjectDescription'</a>, <a>projectDescription_tags</a> -
--   The tags (metadata key/value pairs) associated with the project.
--   
--   <a>$sel:projectName:ProjectDescription'</a>,
--   <a>projectDescription_projectName</a> - The name of the project for
--   which to obtain information from.
--   
--   <a>$sel:createdDate:ProjectDescription'</a>,
--   <a>projectDescription_createdDate</a> - The date when the project was
--   originally created, in UNIX epoch time format.
--   
--   <a>$sel:updatedDate:ProjectDescription'</a>,
--   <a>projectDescription_updatedDate</a> - The date when the project was
--   last updated, in UNIX epoch time format. If the project was not
--   updated, then <tt>createdDate</tt> and <tt>updatedDate</tt> are the
--   same.
newProjectDescription :: Text -> UTCTime -> UTCTime -> ProjectDescription

-- | The ARN of the project.
projectDescription_arn :: Lens' ProjectDescription (Maybe Text)

-- | An object describing the project's placement specifications.
projectDescription_placementTemplate :: Lens' ProjectDescription (Maybe PlacementTemplate)

-- | The description of the project.
projectDescription_description :: Lens' ProjectDescription (Maybe Text)

-- | The tags (metadata key/value pairs) associated with the project.
projectDescription_tags :: Lens' ProjectDescription (Maybe (HashMap Text Text))

-- | The name of the project for which to obtain information from.
projectDescription_projectName :: Lens' ProjectDescription Text

-- | The date when the project was originally created, in UNIX epoch time
--   format.
projectDescription_createdDate :: Lens' ProjectDescription UTCTime

-- | The date when the project was last updated, in UNIX epoch time format.
--   If the project was not updated, then <tt>createdDate</tt> and
--   <tt>updatedDate</tt> are the same.
projectDescription_updatedDate :: Lens' ProjectDescription UTCTime

-- | An object providing summary information for a particular project for
--   an associated AWS account and region.
--   
--   <i>See:</i> <a>newProjectSummary</a> smart constructor.
data ProjectSummary
ProjectSummary' :: Maybe Text -> Maybe (HashMap Text Text) -> Text -> POSIX -> POSIX -> ProjectSummary

-- | The ARN of the project.
[$sel:arn:ProjectSummary'] :: ProjectSummary -> Maybe Text

-- | The tags (metadata key/value pairs) associated with the project.
[$sel:tags:ProjectSummary'] :: ProjectSummary -> Maybe (HashMap Text Text)

-- | The name of the project being summarized.
[$sel:projectName:ProjectSummary'] :: ProjectSummary -> Text

-- | The date when the project was originally created, in UNIX epoch time
--   format.
[$sel:createdDate:ProjectSummary'] :: ProjectSummary -> POSIX

-- | The date when the project was last updated, in UNIX epoch time format.
--   If the project was not updated, then <tt>createdDate</tt> and
--   <tt>updatedDate</tt> are the same.
[$sel:updatedDate:ProjectSummary'] :: ProjectSummary -> POSIX

-- | Create a value of <a>ProjectSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:ProjectSummary'</a>, <a>projectSummary_arn</a> - The ARN
--   of the project.
--   
--   <a>$sel:tags:ProjectSummary'</a>, <a>projectSummary_tags</a> - The
--   tags (metadata key/value pairs) associated with the project.
--   
--   <a>$sel:projectName:ProjectSummary'</a>,
--   <a>projectSummary_projectName</a> - The name of the project being
--   summarized.
--   
--   <a>$sel:createdDate:ProjectSummary'</a>,
--   <a>projectSummary_createdDate</a> - The date when the project was
--   originally created, in UNIX epoch time format.
--   
--   <a>$sel:updatedDate:ProjectSummary'</a>,
--   <a>projectSummary_updatedDate</a> - The date when the project was last
--   updated, in UNIX epoch time format. If the project was not updated,
--   then <tt>createdDate</tt> and <tt>updatedDate</tt> are the same.
newProjectSummary :: Text -> UTCTime -> UTCTime -> ProjectSummary

-- | The ARN of the project.
projectSummary_arn :: Lens' ProjectSummary (Maybe Text)

-- | The tags (metadata key/value pairs) associated with the project.
projectSummary_tags :: Lens' ProjectSummary (Maybe (HashMap Text Text))

-- | The name of the project being summarized.
projectSummary_projectName :: Lens' ProjectSummary Text

-- | The date when the project was originally created, in UNIX epoch time
--   format.
projectSummary_createdDate :: Lens' ProjectSummary UTCTime

-- | The date when the project was last updated, in UNIX epoch time format.
--   If the project was not updated, then <tt>createdDate</tt> and
--   <tt>updatedDate</tt> are the same.
projectSummary_updatedDate :: Lens' ProjectSummary UTCTime


-- | Creates or modifies tags for a resource. Tags are key/value pairs
--   (metadata) that can be used to manage a resource. For more
--   information, see <a>AWS Tagging Strategies</a>.
module Amazonka.IoT1ClickProjects.TagResource

-- | <i>See:</i> <a>newTagResource</a> smart constructor.
data TagResource
TagResource' :: Text -> HashMap Text Text -> TagResource

-- | The ARN of the resouce for which tag(s) should be added or modified.
[$sel:resourceArn:TagResource'] :: TagResource -> Text

-- | The new or modifying tag(s) for the resource. See <a>AWS IoT 1-Click
--   Service Limits</a> for the maximum number of tags allowed per
--   resource.
[$sel:tags:TagResource'] :: TagResource -> HashMap Text Text

-- | Create a value of <a>TagResource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:TagResource'</a>, <a>tagResource_resourceArn</a> -
--   The ARN of the resouce for which tag(s) should be added or modified.
--   
--   <a>$sel:tags:TagResource'</a>, <a>tagResource_tags</a> - The new or
--   modifying tag(s) for the resource. See <a>AWS IoT 1-Click Service
--   Limits</a> for the maximum number of tags allowed per resource.
newTagResource :: Text -> TagResource

-- | The ARN of the resouce for which tag(s) should be added or modified.
tagResource_resourceArn :: Lens' TagResource Text

-- | The new or modifying tag(s) for the resource. See <a>AWS IoT 1-Click
--   Service Limits</a> for the maximum number of tags allowed per
--   resource.
tagResource_tags :: Lens' TagResource (HashMap Text Text)

-- | <i>See:</i> <a>newTagResourceResponse</a> smart constructor.
data TagResourceResponse
TagResourceResponse' :: Int -> TagResourceResponse

-- | The response's http status code.
[$sel:httpStatus:TagResourceResponse'] :: TagResourceResponse -> Int

-- | Create a value of <a>TagResourceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:TagResourceResponse'</a>,
--   <a>tagResourceResponse_httpStatus</a> - The response's http status
--   code.
newTagResourceResponse :: Int -> TagResourceResponse

-- | The response's http status code.
tagResourceResponse_httpStatus :: Lens' TagResourceResponse Int
instance GHC.Generics.Generic Amazonka.IoT1ClickProjects.TagResource.TagResource
instance GHC.Show.Show Amazonka.IoT1ClickProjects.TagResource.TagResource
instance GHC.Read.Read Amazonka.IoT1ClickProjects.TagResource.TagResource
instance GHC.Classes.Eq Amazonka.IoT1ClickProjects.TagResource.TagResource
instance GHC.Generics.Generic Amazonka.IoT1ClickProjects.TagResource.TagResourceResponse
instance GHC.Show.Show Amazonka.IoT1ClickProjects.TagResource.TagResourceResponse
instance GHC.Read.Read Amazonka.IoT1ClickProjects.TagResource.TagResourceResponse
instance GHC.Classes.Eq Amazonka.IoT1ClickProjects.TagResource.TagResourceResponse
instance Amazonka.Types.AWSRequest Amazonka.IoT1ClickProjects.TagResource.TagResource
instance Control.DeepSeq.NFData Amazonka.IoT1ClickProjects.TagResource.TagResourceResponse
instance Data.Hashable.Class.Hashable Amazonka.IoT1ClickProjects.TagResource.TagResource
instance Control.DeepSeq.NFData Amazonka.IoT1ClickProjects.TagResource.TagResource
instance Amazonka.Data.Headers.ToHeaders Amazonka.IoT1ClickProjects.TagResource.TagResource
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoT1ClickProjects.TagResource.TagResource
instance Amazonka.Data.Path.ToPath Amazonka.IoT1ClickProjects.TagResource.TagResource
instance Amazonka.Data.Query.ToQuery Amazonka.IoT1ClickProjects.TagResource.TagResource


-- | Lists the tags (metadata key/value pairs) which you have assigned to
--   the resource.
module Amazonka.IoT1ClickProjects.ListTagsForResource

-- | <i>See:</i> <a>newListTagsForResource</a> smart constructor.
data ListTagsForResource
ListTagsForResource' :: Text -> ListTagsForResource

-- | The ARN of the resource whose tags you want to list.
[$sel:resourceArn:ListTagsForResource'] :: ListTagsForResource -> Text

-- | Create a value of <a>ListTagsForResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:ListTagsForResource'</a>,
--   <a>listTagsForResource_resourceArn</a> - The ARN of the resource whose
--   tags you want to list.
newListTagsForResource :: Text -> ListTagsForResource

-- | The ARN of the resource whose tags you want to list.
listTagsForResource_resourceArn :: Lens' ListTagsForResource Text

-- | <i>See:</i> <a>newListTagsForResourceResponse</a> smart constructor.
data ListTagsForResourceResponse
ListTagsForResourceResponse' :: Maybe (HashMap Text Text) -> Int -> ListTagsForResourceResponse

-- | The tags (metadata key/value pairs) which you have assigned to the
--   resource.
[$sel:tags:ListTagsForResourceResponse'] :: ListTagsForResourceResponse -> Maybe (HashMap Text Text)

-- | The response's http status code.
[$sel:httpStatus:ListTagsForResourceResponse'] :: ListTagsForResourceResponse -> Int

-- | Create a value of <a>ListTagsForResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_tags</a> - The tags (metadata key/value
--   pairs) which you have assigned to the resource.
--   
--   <a>$sel:httpStatus:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_httpStatus</a> - The response's http
--   status code.
newListTagsForResourceResponse :: Int -> ListTagsForResourceResponse

-- | The tags (metadata key/value pairs) which you have assigned to the
--   resource.
listTagsForResourceResponse_tags :: Lens' ListTagsForResourceResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
listTagsForResourceResponse_httpStatus :: Lens' ListTagsForResourceResponse Int
instance GHC.Generics.Generic Amazonka.IoT1ClickProjects.ListTagsForResource.ListTagsForResource
instance GHC.Show.Show Amazonka.IoT1ClickProjects.ListTagsForResource.ListTagsForResource
instance GHC.Read.Read Amazonka.IoT1ClickProjects.ListTagsForResource.ListTagsForResource
instance GHC.Classes.Eq Amazonka.IoT1ClickProjects.ListTagsForResource.ListTagsForResource
instance GHC.Generics.Generic Amazonka.IoT1ClickProjects.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Show.Show Amazonka.IoT1ClickProjects.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Read.Read Amazonka.IoT1ClickProjects.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Classes.Eq Amazonka.IoT1ClickProjects.ListTagsForResource.ListTagsForResourceResponse
instance Amazonka.Types.AWSRequest Amazonka.IoT1ClickProjects.ListTagsForResource.ListTagsForResource
instance Control.DeepSeq.NFData Amazonka.IoT1ClickProjects.ListTagsForResource.ListTagsForResourceResponse
instance Data.Hashable.Class.Hashable Amazonka.IoT1ClickProjects.ListTagsForResource.ListTagsForResource
instance Control.DeepSeq.NFData Amazonka.IoT1ClickProjects.ListTagsForResource.ListTagsForResource
instance Amazonka.Data.Headers.ToHeaders Amazonka.IoT1ClickProjects.ListTagsForResource.ListTagsForResource
instance Amazonka.Data.Path.ToPath Amazonka.IoT1ClickProjects.ListTagsForResource.ListTagsForResource
instance Amazonka.Data.Query.ToQuery Amazonka.IoT1ClickProjects.ListTagsForResource.ListTagsForResource


-- | Lists the AWS IoT 1-Click project(s) associated with your AWS account
--   and region.
--   
--   This operation returns paginated results.
module Amazonka.IoT1ClickProjects.ListProjects

-- | <i>See:</i> <a>newListProjects</a> smart constructor.
data ListProjects
ListProjects' :: Maybe Text -> Maybe Natural -> ListProjects

-- | The token to retrieve the next set of results.
[$sel:nextToken:ListProjects'] :: ListProjects -> Maybe Text

-- | The maximum number of results to return per request. If not set, a
--   default value of 100 is used.
[$sel:maxResults:ListProjects'] :: ListProjects -> Maybe Natural

-- | Create a value of <a>ListProjects</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListProjects'</a>, <a>listProjects_nextToken</a> -
--   The token to retrieve the next set of results.
--   
--   <a>$sel:maxResults:ListProjects'</a>, <a>listProjects_maxResults</a> -
--   The maximum number of results to return per request. If not set, a
--   default value of 100 is used.
newListProjects :: ListProjects

-- | The token to retrieve the next set of results.
listProjects_nextToken :: Lens' ListProjects (Maybe Text)

-- | The maximum number of results to return per request. If not set, a
--   default value of 100 is used.
listProjects_maxResults :: Lens' ListProjects (Maybe Natural)

-- | <i>See:</i> <a>newListProjectsResponse</a> smart constructor.
data ListProjectsResponse
ListProjectsResponse' :: Maybe Text -> Int -> [ProjectSummary] -> ListProjectsResponse

-- | The token used to retrieve the next set of results - will be
--   effectively empty if there are no further results.
[$sel:nextToken:ListProjectsResponse'] :: ListProjectsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListProjectsResponse'] :: ListProjectsResponse -> Int

-- | An object containing the list of projects.
[$sel:projects:ListProjectsResponse'] :: ListProjectsResponse -> [ProjectSummary]

-- | Create a value of <a>ListProjectsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListProjects'</a>,
--   <a>listProjectsResponse_nextToken</a> - The token used to retrieve the
--   next set of results - will be effectively empty if there are no
--   further results.
--   
--   <a>$sel:httpStatus:ListProjectsResponse'</a>,
--   <a>listProjectsResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:projects:ListProjectsResponse'</a>,
--   <a>listProjectsResponse_projects</a> - An object containing the list
--   of projects.
newListProjectsResponse :: Int -> ListProjectsResponse

-- | The token used to retrieve the next set of results - will be
--   effectively empty if there are no further results.
listProjectsResponse_nextToken :: Lens' ListProjectsResponse (Maybe Text)

-- | The response's http status code.
listProjectsResponse_httpStatus :: Lens' ListProjectsResponse Int

-- | An object containing the list of projects.
listProjectsResponse_projects :: Lens' ListProjectsResponse [ProjectSummary]
instance GHC.Generics.Generic Amazonka.IoT1ClickProjects.ListProjects.ListProjects
instance GHC.Show.Show Amazonka.IoT1ClickProjects.ListProjects.ListProjects
instance GHC.Read.Read Amazonka.IoT1ClickProjects.ListProjects.ListProjects
instance GHC.Classes.Eq Amazonka.IoT1ClickProjects.ListProjects.ListProjects
instance GHC.Generics.Generic Amazonka.IoT1ClickProjects.ListProjects.ListProjectsResponse
instance GHC.Show.Show Amazonka.IoT1ClickProjects.ListProjects.ListProjectsResponse
instance GHC.Read.Read Amazonka.IoT1ClickProjects.ListProjects.ListProjectsResponse
instance GHC.Classes.Eq Amazonka.IoT1ClickProjects.ListProjects.ListProjectsResponse
instance Amazonka.Types.AWSRequest Amazonka.IoT1ClickProjects.ListProjects.ListProjects
instance Control.DeepSeq.NFData Amazonka.IoT1ClickProjects.ListProjects.ListProjectsResponse
instance Amazonka.Pager.AWSPager Amazonka.IoT1ClickProjects.ListProjects.ListProjects
instance Data.Hashable.Class.Hashable Amazonka.IoT1ClickProjects.ListProjects.ListProjects
instance Control.DeepSeq.NFData Amazonka.IoT1ClickProjects.ListProjects.ListProjects
instance Amazonka.Data.Headers.ToHeaders Amazonka.IoT1ClickProjects.ListProjects.ListProjects
instance Amazonka.Data.Path.ToPath Amazonka.IoT1ClickProjects.ListProjects.ListProjects
instance Amazonka.Data.Query.ToQuery Amazonka.IoT1ClickProjects.ListProjects.ListProjects


-- | Lists the placement(s) of a project.
--   
--   This operation returns paginated results.
module Amazonka.IoT1ClickProjects.ListPlacements

-- | <i>See:</i> <a>newListPlacements</a> smart constructor.
data ListPlacements
ListPlacements' :: Maybe Text -> Maybe Natural -> Text -> ListPlacements

-- | The token to retrieve the next set of results.
[$sel:nextToken:ListPlacements'] :: ListPlacements -> Maybe Text

-- | The maximum number of results to return per request. If not set, a
--   default value of 100 is used.
[$sel:maxResults:ListPlacements'] :: ListPlacements -> Maybe Natural

-- | The project containing the placements to be listed.
[$sel:projectName:ListPlacements'] :: ListPlacements -> Text

-- | Create a value of <a>ListPlacements</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListPlacements'</a>, <a>listPlacements_nextToken</a>
--   - The token to retrieve the next set of results.
--   
--   <a>$sel:maxResults:ListPlacements'</a>,
--   <a>listPlacements_maxResults</a> - The maximum number of results to
--   return per request. If not set, a default value of 100 is used.
--   
--   <a>$sel:projectName:ListPlacements'</a>,
--   <a>listPlacements_projectName</a> - The project containing the
--   placements to be listed.
newListPlacements :: Text -> ListPlacements

-- | The token to retrieve the next set of results.
listPlacements_nextToken :: Lens' ListPlacements (Maybe Text)

-- | The maximum number of results to return per request. If not set, a
--   default value of 100 is used.
listPlacements_maxResults :: Lens' ListPlacements (Maybe Natural)

-- | The project containing the placements to be listed.
listPlacements_projectName :: Lens' ListPlacements Text

-- | <i>See:</i> <a>newListPlacementsResponse</a> smart constructor.
data ListPlacementsResponse
ListPlacementsResponse' :: Maybe Text -> Int -> [PlacementSummary] -> ListPlacementsResponse

-- | The token used to retrieve the next set of results - will be
--   effectively empty if there are no further results.
[$sel:nextToken:ListPlacementsResponse'] :: ListPlacementsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListPlacementsResponse'] :: ListPlacementsResponse -> Int

-- | An object listing the requested placements.
[$sel:placements:ListPlacementsResponse'] :: ListPlacementsResponse -> [PlacementSummary]

-- | Create a value of <a>ListPlacementsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListPlacements'</a>,
--   <a>listPlacementsResponse_nextToken</a> - The token used to retrieve
--   the next set of results - will be effectively empty if there are no
--   further results.
--   
--   <a>$sel:httpStatus:ListPlacementsResponse'</a>,
--   <a>listPlacementsResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:placements:ListPlacementsResponse'</a>,
--   <a>listPlacementsResponse_placements</a> - An object listing the
--   requested placements.
newListPlacementsResponse :: Int -> ListPlacementsResponse

-- | The token used to retrieve the next set of results - will be
--   effectively empty if there are no further results.
listPlacementsResponse_nextToken :: Lens' ListPlacementsResponse (Maybe Text)

-- | The response's http status code.
listPlacementsResponse_httpStatus :: Lens' ListPlacementsResponse Int

-- | An object listing the requested placements.
listPlacementsResponse_placements :: Lens' ListPlacementsResponse [PlacementSummary]
instance GHC.Generics.Generic Amazonka.IoT1ClickProjects.ListPlacements.ListPlacements
instance GHC.Show.Show Amazonka.IoT1ClickProjects.ListPlacements.ListPlacements
instance GHC.Read.Read Amazonka.IoT1ClickProjects.ListPlacements.ListPlacements
instance GHC.Classes.Eq Amazonka.IoT1ClickProjects.ListPlacements.ListPlacements
instance GHC.Generics.Generic Amazonka.IoT1ClickProjects.ListPlacements.ListPlacementsResponse
instance GHC.Show.Show Amazonka.IoT1ClickProjects.ListPlacements.ListPlacementsResponse
instance GHC.Read.Read Amazonka.IoT1ClickProjects.ListPlacements.ListPlacementsResponse
instance GHC.Classes.Eq Amazonka.IoT1ClickProjects.ListPlacements.ListPlacementsResponse
instance Amazonka.Types.AWSRequest Amazonka.IoT1ClickProjects.ListPlacements.ListPlacements
instance Control.DeepSeq.NFData Amazonka.IoT1ClickProjects.ListPlacements.ListPlacementsResponse
instance Amazonka.Pager.AWSPager Amazonka.IoT1ClickProjects.ListPlacements.ListPlacements
instance Data.Hashable.Class.Hashable Amazonka.IoT1ClickProjects.ListPlacements.ListPlacements
instance Control.DeepSeq.NFData Amazonka.IoT1ClickProjects.ListPlacements.ListPlacements
instance Amazonka.Data.Headers.ToHeaders Amazonka.IoT1ClickProjects.ListPlacements.ListPlacements
instance Amazonka.Data.Path.ToPath Amazonka.IoT1ClickProjects.ListPlacements.ListPlacements
instance Amazonka.Data.Query.ToQuery Amazonka.IoT1ClickProjects.ListPlacements.ListPlacements


-- | Returns an object enumerating the devices in a placement.
module Amazonka.IoT1ClickProjects.GetDevicesInPlacement

-- | <i>See:</i> <a>newGetDevicesInPlacement</a> smart constructor.
data GetDevicesInPlacement
GetDevicesInPlacement' :: Text -> Text -> GetDevicesInPlacement

-- | The name of the project containing the placement.
[$sel:projectName:GetDevicesInPlacement'] :: GetDevicesInPlacement -> Text

-- | The name of the placement to get the devices from.
[$sel:placementName:GetDevicesInPlacement'] :: GetDevicesInPlacement -> Text

-- | Create a value of <a>GetDevicesInPlacement</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:projectName:GetDevicesInPlacement'</a>,
--   <a>getDevicesInPlacement_projectName</a> - The name of the project
--   containing the placement.
--   
--   <a>$sel:placementName:GetDevicesInPlacement'</a>,
--   <a>getDevicesInPlacement_placementName</a> - The name of the placement
--   to get the devices from.
newGetDevicesInPlacement :: Text -> Text -> GetDevicesInPlacement

-- | The name of the project containing the placement.
getDevicesInPlacement_projectName :: Lens' GetDevicesInPlacement Text

-- | The name of the placement to get the devices from.
getDevicesInPlacement_placementName :: Lens' GetDevicesInPlacement Text

-- | <i>See:</i> <a>newGetDevicesInPlacementResponse</a> smart constructor.
data GetDevicesInPlacementResponse
GetDevicesInPlacementResponse' :: Int -> HashMap Text Text -> GetDevicesInPlacementResponse

-- | The response's http status code.
[$sel:httpStatus:GetDevicesInPlacementResponse'] :: GetDevicesInPlacementResponse -> Int

-- | An object containing the devices (zero or more) within the placement.
[$sel:devices:GetDevicesInPlacementResponse'] :: GetDevicesInPlacementResponse -> HashMap Text Text

-- | Create a value of <a>GetDevicesInPlacementResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:GetDevicesInPlacementResponse'</a>,
--   <a>getDevicesInPlacementResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:devices:GetDevicesInPlacementResponse'</a>,
--   <a>getDevicesInPlacementResponse_devices</a> - An object containing
--   the devices (zero or more) within the placement.
newGetDevicesInPlacementResponse :: Int -> GetDevicesInPlacementResponse

-- | The response's http status code.
getDevicesInPlacementResponse_httpStatus :: Lens' GetDevicesInPlacementResponse Int

-- | An object containing the devices (zero or more) within the placement.
getDevicesInPlacementResponse_devices :: Lens' GetDevicesInPlacementResponse (HashMap Text Text)
instance GHC.Generics.Generic Amazonka.IoT1ClickProjects.GetDevicesInPlacement.GetDevicesInPlacement
instance GHC.Show.Show Amazonka.IoT1ClickProjects.GetDevicesInPlacement.GetDevicesInPlacement
instance GHC.Read.Read Amazonka.IoT1ClickProjects.GetDevicesInPlacement.GetDevicesInPlacement
instance GHC.Classes.Eq Amazonka.IoT1ClickProjects.GetDevicesInPlacement.GetDevicesInPlacement
instance GHC.Generics.Generic Amazonka.IoT1ClickProjects.GetDevicesInPlacement.GetDevicesInPlacementResponse
instance GHC.Show.Show Amazonka.IoT1ClickProjects.GetDevicesInPlacement.GetDevicesInPlacementResponse
instance GHC.Read.Read Amazonka.IoT1ClickProjects.GetDevicesInPlacement.GetDevicesInPlacementResponse
instance GHC.Classes.Eq Amazonka.IoT1ClickProjects.GetDevicesInPlacement.GetDevicesInPlacementResponse
instance Amazonka.Types.AWSRequest Amazonka.IoT1ClickProjects.GetDevicesInPlacement.GetDevicesInPlacement
instance Control.DeepSeq.NFData Amazonka.IoT1ClickProjects.GetDevicesInPlacement.GetDevicesInPlacementResponse
instance Data.Hashable.Class.Hashable Amazonka.IoT1ClickProjects.GetDevicesInPlacement.GetDevicesInPlacement
instance Control.DeepSeq.NFData Amazonka.IoT1ClickProjects.GetDevicesInPlacement.GetDevicesInPlacement
instance Amazonka.Data.Headers.ToHeaders Amazonka.IoT1ClickProjects.GetDevicesInPlacement.GetDevicesInPlacement
instance Amazonka.Data.Path.ToPath Amazonka.IoT1ClickProjects.GetDevicesInPlacement.GetDevicesInPlacement
instance Amazonka.Data.Query.ToQuery Amazonka.IoT1ClickProjects.GetDevicesInPlacement.GetDevicesInPlacement


-- | Removes a physical device from a placement.
module Amazonka.IoT1ClickProjects.DisassociateDeviceFromPlacement

-- | <i>See:</i> <a>newDisassociateDeviceFromPlacement</a> smart
--   constructor.
data DisassociateDeviceFromPlacement
DisassociateDeviceFromPlacement' :: Text -> Text -> Text -> DisassociateDeviceFromPlacement

-- | The name of the project that contains the placement.
[$sel:projectName:DisassociateDeviceFromPlacement'] :: DisassociateDeviceFromPlacement -> Text

-- | The name of the placement that the device should be removed from.
[$sel:placementName:DisassociateDeviceFromPlacement'] :: DisassociateDeviceFromPlacement -> Text

-- | The device ID that should be removed from the placement.
[$sel:deviceTemplateName:DisassociateDeviceFromPlacement'] :: DisassociateDeviceFromPlacement -> Text

-- | Create a value of <a>DisassociateDeviceFromPlacement</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:projectName:DisassociateDeviceFromPlacement'</a>,
--   <a>disassociateDeviceFromPlacement_projectName</a> - The name of the
--   project that contains the placement.
--   
--   <a>$sel:placementName:DisassociateDeviceFromPlacement'</a>,
--   <a>disassociateDeviceFromPlacement_placementName</a> - The name of the
--   placement that the device should be removed from.
--   
--   <a>$sel:deviceTemplateName:DisassociateDeviceFromPlacement'</a>,
--   <a>disassociateDeviceFromPlacement_deviceTemplateName</a> - The device
--   ID that should be removed from the placement.
newDisassociateDeviceFromPlacement :: Text -> Text -> Text -> DisassociateDeviceFromPlacement

-- | The name of the project that contains the placement.
disassociateDeviceFromPlacement_projectName :: Lens' DisassociateDeviceFromPlacement Text

-- | The name of the placement that the device should be removed from.
disassociateDeviceFromPlacement_placementName :: Lens' DisassociateDeviceFromPlacement Text

-- | The device ID that should be removed from the placement.
disassociateDeviceFromPlacement_deviceTemplateName :: Lens' DisassociateDeviceFromPlacement Text

-- | <i>See:</i> <a>newDisassociateDeviceFromPlacementResponse</a> smart
--   constructor.
data DisassociateDeviceFromPlacementResponse
DisassociateDeviceFromPlacementResponse' :: Int -> DisassociateDeviceFromPlacementResponse

-- | The response's http status code.
[$sel:httpStatus:DisassociateDeviceFromPlacementResponse'] :: DisassociateDeviceFromPlacementResponse -> Int

-- | Create a value of <a>DisassociateDeviceFromPlacementResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DisassociateDeviceFromPlacementResponse'</a>,
--   <a>disassociateDeviceFromPlacementResponse_httpStatus</a> - The
--   response's http status code.
newDisassociateDeviceFromPlacementResponse :: Int -> DisassociateDeviceFromPlacementResponse

-- | The response's http status code.
disassociateDeviceFromPlacementResponse_httpStatus :: Lens' DisassociateDeviceFromPlacementResponse Int
instance GHC.Generics.Generic Amazonka.IoT1ClickProjects.DisassociateDeviceFromPlacement.DisassociateDeviceFromPlacement
instance GHC.Show.Show Amazonka.IoT1ClickProjects.DisassociateDeviceFromPlacement.DisassociateDeviceFromPlacement
instance GHC.Read.Read Amazonka.IoT1ClickProjects.DisassociateDeviceFromPlacement.DisassociateDeviceFromPlacement
instance GHC.Classes.Eq Amazonka.IoT1ClickProjects.DisassociateDeviceFromPlacement.DisassociateDeviceFromPlacement
instance GHC.Generics.Generic Amazonka.IoT1ClickProjects.DisassociateDeviceFromPlacement.DisassociateDeviceFromPlacementResponse
instance GHC.Show.Show Amazonka.IoT1ClickProjects.DisassociateDeviceFromPlacement.DisassociateDeviceFromPlacementResponse
instance GHC.Read.Read Amazonka.IoT1ClickProjects.DisassociateDeviceFromPlacement.DisassociateDeviceFromPlacementResponse
instance GHC.Classes.Eq Amazonka.IoT1ClickProjects.DisassociateDeviceFromPlacement.DisassociateDeviceFromPlacementResponse
instance Amazonka.Types.AWSRequest Amazonka.IoT1ClickProjects.DisassociateDeviceFromPlacement.DisassociateDeviceFromPlacement
instance Control.DeepSeq.NFData Amazonka.IoT1ClickProjects.DisassociateDeviceFromPlacement.DisassociateDeviceFromPlacementResponse
instance Data.Hashable.Class.Hashable Amazonka.IoT1ClickProjects.DisassociateDeviceFromPlacement.DisassociateDeviceFromPlacement
instance Control.DeepSeq.NFData Amazonka.IoT1ClickProjects.DisassociateDeviceFromPlacement.DisassociateDeviceFromPlacement
instance Amazonka.Data.Headers.ToHeaders Amazonka.IoT1ClickProjects.DisassociateDeviceFromPlacement.DisassociateDeviceFromPlacement
instance Amazonka.Data.Path.ToPath Amazonka.IoT1ClickProjects.DisassociateDeviceFromPlacement.DisassociateDeviceFromPlacement
instance Amazonka.Data.Query.ToQuery Amazonka.IoT1ClickProjects.DisassociateDeviceFromPlacement.DisassociateDeviceFromPlacement


-- | Returns an object describing a project.
module Amazonka.IoT1ClickProjects.DescribeProject

-- | <i>See:</i> <a>newDescribeProject</a> smart constructor.
data DescribeProject
DescribeProject' :: Text -> DescribeProject

-- | The name of the project to be described.
[$sel:projectName:DescribeProject'] :: DescribeProject -> Text

-- | Create a value of <a>DescribeProject</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:projectName:DescribeProject'</a>,
--   <a>describeProject_projectName</a> - The name of the project to be
--   described.
newDescribeProject :: Text -> DescribeProject

-- | The name of the project to be described.
describeProject_projectName :: Lens' DescribeProject Text

-- | <i>See:</i> <a>newDescribeProjectResponse</a> smart constructor.
data DescribeProjectResponse
DescribeProjectResponse' :: Int -> ProjectDescription -> DescribeProjectResponse

-- | The response's http status code.
[$sel:httpStatus:DescribeProjectResponse'] :: DescribeProjectResponse -> Int

-- | An object describing the project.
[$sel:project:DescribeProjectResponse'] :: DescribeProjectResponse -> ProjectDescription

-- | Create a value of <a>DescribeProjectResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DescribeProjectResponse'</a>,
--   <a>describeProjectResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:project:DescribeProjectResponse'</a>,
--   <a>describeProjectResponse_project</a> - An object describing the
--   project.
newDescribeProjectResponse :: Int -> ProjectDescription -> DescribeProjectResponse

-- | The response's http status code.
describeProjectResponse_httpStatus :: Lens' DescribeProjectResponse Int

-- | An object describing the project.
describeProjectResponse_project :: Lens' DescribeProjectResponse ProjectDescription
instance GHC.Generics.Generic Amazonka.IoT1ClickProjects.DescribeProject.DescribeProject
instance GHC.Show.Show Amazonka.IoT1ClickProjects.DescribeProject.DescribeProject
instance GHC.Read.Read Amazonka.IoT1ClickProjects.DescribeProject.DescribeProject
instance GHC.Classes.Eq Amazonka.IoT1ClickProjects.DescribeProject.DescribeProject
instance GHC.Generics.Generic Amazonka.IoT1ClickProjects.DescribeProject.DescribeProjectResponse
instance GHC.Show.Show Amazonka.IoT1ClickProjects.DescribeProject.DescribeProjectResponse
instance GHC.Read.Read Amazonka.IoT1ClickProjects.DescribeProject.DescribeProjectResponse
instance GHC.Classes.Eq Amazonka.IoT1ClickProjects.DescribeProject.DescribeProjectResponse
instance Amazonka.Types.AWSRequest Amazonka.IoT1ClickProjects.DescribeProject.DescribeProject
instance Control.DeepSeq.NFData Amazonka.IoT1ClickProjects.DescribeProject.DescribeProjectResponse
instance Data.Hashable.Class.Hashable Amazonka.IoT1ClickProjects.DescribeProject.DescribeProject
instance Control.DeepSeq.NFData Amazonka.IoT1ClickProjects.DescribeProject.DescribeProject
instance Amazonka.Data.Headers.ToHeaders Amazonka.IoT1ClickProjects.DescribeProject.DescribeProject
instance Amazonka.Data.Path.ToPath Amazonka.IoT1ClickProjects.DescribeProject.DescribeProject
instance Amazonka.Data.Query.ToQuery Amazonka.IoT1ClickProjects.DescribeProject.DescribeProject


-- | Describes a placement in a project.
module Amazonka.IoT1ClickProjects.DescribePlacement

-- | <i>See:</i> <a>newDescribePlacement</a> smart constructor.
data DescribePlacement
DescribePlacement' :: Text -> Text -> DescribePlacement

-- | The name of the placement within a project.
[$sel:placementName:DescribePlacement'] :: DescribePlacement -> Text

-- | The project containing the placement to be described.
[$sel:projectName:DescribePlacement'] :: DescribePlacement -> Text

-- | Create a value of <a>DescribePlacement</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:placementName:DescribePlacement'</a>,
--   <a>describePlacement_placementName</a> - The name of the placement
--   within a project.
--   
--   <a>$sel:projectName:DescribePlacement'</a>,
--   <a>describePlacement_projectName</a> - The project containing the
--   placement to be described.
newDescribePlacement :: Text -> Text -> DescribePlacement

-- | The name of the placement within a project.
describePlacement_placementName :: Lens' DescribePlacement Text

-- | The project containing the placement to be described.
describePlacement_projectName :: Lens' DescribePlacement Text

-- | <i>See:</i> <a>newDescribePlacementResponse</a> smart constructor.
data DescribePlacementResponse
DescribePlacementResponse' :: Int -> PlacementDescription -> DescribePlacementResponse

-- | The response's http status code.
[$sel:httpStatus:DescribePlacementResponse'] :: DescribePlacementResponse -> Int

-- | An object describing the placement.
[$sel:placement:DescribePlacementResponse'] :: DescribePlacementResponse -> PlacementDescription

-- | Create a value of <a>DescribePlacementResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DescribePlacementResponse'</a>,
--   <a>describePlacementResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:placement:DescribePlacementResponse'</a>,
--   <a>describePlacementResponse_placement</a> - An object describing the
--   placement.
newDescribePlacementResponse :: Int -> PlacementDescription -> DescribePlacementResponse

-- | The response's http status code.
describePlacementResponse_httpStatus :: Lens' DescribePlacementResponse Int

-- | An object describing the placement.
describePlacementResponse_placement :: Lens' DescribePlacementResponse PlacementDescription
instance GHC.Generics.Generic Amazonka.IoT1ClickProjects.DescribePlacement.DescribePlacement
instance GHC.Show.Show Amazonka.IoT1ClickProjects.DescribePlacement.DescribePlacement
instance GHC.Read.Read Amazonka.IoT1ClickProjects.DescribePlacement.DescribePlacement
instance GHC.Classes.Eq Amazonka.IoT1ClickProjects.DescribePlacement.DescribePlacement
instance GHC.Generics.Generic Amazonka.IoT1ClickProjects.DescribePlacement.DescribePlacementResponse
instance GHC.Show.Show Amazonka.IoT1ClickProjects.DescribePlacement.DescribePlacementResponse
instance GHC.Read.Read Amazonka.IoT1ClickProjects.DescribePlacement.DescribePlacementResponse
instance GHC.Classes.Eq Amazonka.IoT1ClickProjects.DescribePlacement.DescribePlacementResponse
instance Amazonka.Types.AWSRequest Amazonka.IoT1ClickProjects.DescribePlacement.DescribePlacement
instance Control.DeepSeq.NFData Amazonka.IoT1ClickProjects.DescribePlacement.DescribePlacementResponse
instance Data.Hashable.Class.Hashable Amazonka.IoT1ClickProjects.DescribePlacement.DescribePlacement
instance Control.DeepSeq.NFData Amazonka.IoT1ClickProjects.DescribePlacement.DescribePlacement
instance Amazonka.Data.Headers.ToHeaders Amazonka.IoT1ClickProjects.DescribePlacement.DescribePlacement
instance Amazonka.Data.Path.ToPath Amazonka.IoT1ClickProjects.DescribePlacement.DescribePlacement
instance Amazonka.Data.Query.ToQuery Amazonka.IoT1ClickProjects.DescribePlacement.DescribePlacement


-- | Deletes a project. To delete a project, it must not have any
--   placements associated with it.
--   
--   When you delete a project, all associated data becomes irretrievable.
module Amazonka.IoT1ClickProjects.DeleteProject

-- | <i>See:</i> <a>newDeleteProject</a> smart constructor.
data DeleteProject
DeleteProject' :: Text -> DeleteProject

-- | The name of the empty project to delete.
[$sel:projectName:DeleteProject'] :: DeleteProject -> Text

-- | Create a value of <a>DeleteProject</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:projectName:DeleteProject'</a>,
--   <a>deleteProject_projectName</a> - The name of the empty project to
--   delete.
newDeleteProject :: Text -> DeleteProject

-- | The name of the empty project to delete.
deleteProject_projectName :: Lens' DeleteProject Text

-- | <i>See:</i> <a>newDeleteProjectResponse</a> smart constructor.
data DeleteProjectResponse
DeleteProjectResponse' :: Int -> DeleteProjectResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteProjectResponse'] :: DeleteProjectResponse -> Int

-- | Create a value of <a>DeleteProjectResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteProjectResponse'</a>,
--   <a>deleteProjectResponse_httpStatus</a> - The response's http status
--   code.
newDeleteProjectResponse :: Int -> DeleteProjectResponse

-- | The response's http status code.
deleteProjectResponse_httpStatus :: Lens' DeleteProjectResponse Int
instance GHC.Generics.Generic Amazonka.IoT1ClickProjects.DeleteProject.DeleteProject
instance GHC.Show.Show Amazonka.IoT1ClickProjects.DeleteProject.DeleteProject
instance GHC.Read.Read Amazonka.IoT1ClickProjects.DeleteProject.DeleteProject
instance GHC.Classes.Eq Amazonka.IoT1ClickProjects.DeleteProject.DeleteProject
instance GHC.Generics.Generic Amazonka.IoT1ClickProjects.DeleteProject.DeleteProjectResponse
instance GHC.Show.Show Amazonka.IoT1ClickProjects.DeleteProject.DeleteProjectResponse
instance GHC.Read.Read Amazonka.IoT1ClickProjects.DeleteProject.DeleteProjectResponse
instance GHC.Classes.Eq Amazonka.IoT1ClickProjects.DeleteProject.DeleteProjectResponse
instance Amazonka.Types.AWSRequest Amazonka.IoT1ClickProjects.DeleteProject.DeleteProject
instance Control.DeepSeq.NFData Amazonka.IoT1ClickProjects.DeleteProject.DeleteProjectResponse
instance Data.Hashable.Class.Hashable Amazonka.IoT1ClickProjects.DeleteProject.DeleteProject
instance Control.DeepSeq.NFData Amazonka.IoT1ClickProjects.DeleteProject.DeleteProject
instance Amazonka.Data.Headers.ToHeaders Amazonka.IoT1ClickProjects.DeleteProject.DeleteProject
instance Amazonka.Data.Path.ToPath Amazonka.IoT1ClickProjects.DeleteProject.DeleteProject
instance Amazonka.Data.Query.ToQuery Amazonka.IoT1ClickProjects.DeleteProject.DeleteProject


-- | Deletes a placement. To delete a placement, it must not have any
--   devices associated with it.
--   
--   When you delete a placement, all associated data becomes
--   irretrievable.
module Amazonka.IoT1ClickProjects.DeletePlacement

-- | <i>See:</i> <a>newDeletePlacement</a> smart constructor.
data DeletePlacement
DeletePlacement' :: Text -> Text -> DeletePlacement

-- | The name of the empty placement to delete.
[$sel:placementName:DeletePlacement'] :: DeletePlacement -> Text

-- | The project containing the empty placement to delete.
[$sel:projectName:DeletePlacement'] :: DeletePlacement -> Text

-- | Create a value of <a>DeletePlacement</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:placementName:DeletePlacement'</a>,
--   <a>deletePlacement_placementName</a> - The name of the empty placement
--   to delete.
--   
--   <a>$sel:projectName:DeletePlacement'</a>,
--   <a>deletePlacement_projectName</a> - The project containing the empty
--   placement to delete.
newDeletePlacement :: Text -> Text -> DeletePlacement

-- | The name of the empty placement to delete.
deletePlacement_placementName :: Lens' DeletePlacement Text

-- | The project containing the empty placement to delete.
deletePlacement_projectName :: Lens' DeletePlacement Text

-- | <i>See:</i> <a>newDeletePlacementResponse</a> smart constructor.
data DeletePlacementResponse
DeletePlacementResponse' :: Int -> DeletePlacementResponse

-- | The response's http status code.
[$sel:httpStatus:DeletePlacementResponse'] :: DeletePlacementResponse -> Int

-- | Create a value of <a>DeletePlacementResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeletePlacementResponse'</a>,
--   <a>deletePlacementResponse_httpStatus</a> - The response's http status
--   code.
newDeletePlacementResponse :: Int -> DeletePlacementResponse

-- | The response's http status code.
deletePlacementResponse_httpStatus :: Lens' DeletePlacementResponse Int
instance GHC.Generics.Generic Amazonka.IoT1ClickProjects.DeletePlacement.DeletePlacement
instance GHC.Show.Show Amazonka.IoT1ClickProjects.DeletePlacement.DeletePlacement
instance GHC.Read.Read Amazonka.IoT1ClickProjects.DeletePlacement.DeletePlacement
instance GHC.Classes.Eq Amazonka.IoT1ClickProjects.DeletePlacement.DeletePlacement
instance GHC.Generics.Generic Amazonka.IoT1ClickProjects.DeletePlacement.DeletePlacementResponse
instance GHC.Show.Show Amazonka.IoT1ClickProjects.DeletePlacement.DeletePlacementResponse
instance GHC.Read.Read Amazonka.IoT1ClickProjects.DeletePlacement.DeletePlacementResponse
instance GHC.Classes.Eq Amazonka.IoT1ClickProjects.DeletePlacement.DeletePlacementResponse
instance Amazonka.Types.AWSRequest Amazonka.IoT1ClickProjects.DeletePlacement.DeletePlacement
instance Control.DeepSeq.NFData Amazonka.IoT1ClickProjects.DeletePlacement.DeletePlacementResponse
instance Data.Hashable.Class.Hashable Amazonka.IoT1ClickProjects.DeletePlacement.DeletePlacement
instance Control.DeepSeq.NFData Amazonka.IoT1ClickProjects.DeletePlacement.DeletePlacement
instance Amazonka.Data.Headers.ToHeaders Amazonka.IoT1ClickProjects.DeletePlacement.DeletePlacement
instance Amazonka.Data.Path.ToPath Amazonka.IoT1ClickProjects.DeletePlacement.DeletePlacement
instance Amazonka.Data.Query.ToQuery Amazonka.IoT1ClickProjects.DeletePlacement.DeletePlacement


-- | Creates an empty project with a placement template. A project contains
--   zero or more placements that adhere to the placement template defined
--   in the project.
module Amazonka.IoT1ClickProjects.CreateProject

-- | <i>See:</i> <a>newCreateProject</a> smart constructor.
data CreateProject
CreateProject' :: Maybe PlacementTemplate -> Maybe Text -> Maybe (HashMap Text Text) -> Text -> CreateProject

-- | The schema defining the placement to be created. A placement template
--   defines placement default attributes and device templates. You cannot
--   add or remove device templates after the project has been created.
--   However, you can update <tt>callbackOverrides</tt> for the device
--   templates using the <tt>UpdateProject</tt> API.
[$sel:placementTemplate:CreateProject'] :: CreateProject -> Maybe PlacementTemplate

-- | An optional description for the project.
[$sel:description:CreateProject'] :: CreateProject -> Maybe Text

-- | Optional tags (metadata key/value pairs) to be associated with the
--   project. For example, <tt>{ {"key1": "value1", "key2": "value2"}
--   }</tt>. For more information, see <a>AWS Tagging Strategies</a>.
[$sel:tags:CreateProject'] :: CreateProject -> Maybe (HashMap Text Text)

-- | The name of the project to create.
[$sel:projectName:CreateProject'] :: CreateProject -> Text

-- | Create a value of <a>CreateProject</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:placementTemplate:CreateProject'</a>,
--   <a>createProject_placementTemplate</a> - The schema defining the
--   placement to be created. A placement template defines placement
--   default attributes and device templates. You cannot add or remove
--   device templates after the project has been created. However, you can
--   update <tt>callbackOverrides</tt> for the device templates using the
--   <tt>UpdateProject</tt> API.
--   
--   <a>$sel:description:CreateProject'</a>,
--   <a>createProject_description</a> - An optional description for the
--   project.
--   
--   <a>$sel:tags:CreateProject'</a>, <a>createProject_tags</a> - Optional
--   tags (metadata key/value pairs) to be associated with the project. For
--   example, <tt>{ {"key1": "value1", "key2": "value2"} }</tt>. For more
--   information, see <a>AWS Tagging Strategies</a>.
--   
--   <a>$sel:projectName:CreateProject'</a>,
--   <a>createProject_projectName</a> - The name of the project to create.
newCreateProject :: Text -> CreateProject

-- | The schema defining the placement to be created. A placement template
--   defines placement default attributes and device templates. You cannot
--   add or remove device templates after the project has been created.
--   However, you can update <tt>callbackOverrides</tt> for the device
--   templates using the <tt>UpdateProject</tt> API.
createProject_placementTemplate :: Lens' CreateProject (Maybe PlacementTemplate)

-- | An optional description for the project.
createProject_description :: Lens' CreateProject (Maybe Text)

-- | Optional tags (metadata key/value pairs) to be associated with the
--   project. For example, <tt>{ {"key1": "value1", "key2": "value2"}
--   }</tt>. For more information, see <a>AWS Tagging Strategies</a>.
createProject_tags :: Lens' CreateProject (Maybe (HashMap Text Text))

-- | The name of the project to create.
createProject_projectName :: Lens' CreateProject Text

-- | <i>See:</i> <a>newCreateProjectResponse</a> smart constructor.
data CreateProjectResponse
CreateProjectResponse' :: Int -> CreateProjectResponse

-- | The response's http status code.
[$sel:httpStatus:CreateProjectResponse'] :: CreateProjectResponse -> Int

-- | Create a value of <a>CreateProjectResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreateProjectResponse'</a>,
--   <a>createProjectResponse_httpStatus</a> - The response's http status
--   code.
newCreateProjectResponse :: Int -> CreateProjectResponse

-- | The response's http status code.
createProjectResponse_httpStatus :: Lens' CreateProjectResponse Int
instance GHC.Generics.Generic Amazonka.IoT1ClickProjects.CreateProject.CreateProject
instance GHC.Show.Show Amazonka.IoT1ClickProjects.CreateProject.CreateProject
instance GHC.Read.Read Amazonka.IoT1ClickProjects.CreateProject.CreateProject
instance GHC.Classes.Eq Amazonka.IoT1ClickProjects.CreateProject.CreateProject
instance GHC.Generics.Generic Amazonka.IoT1ClickProjects.CreateProject.CreateProjectResponse
instance GHC.Show.Show Amazonka.IoT1ClickProjects.CreateProject.CreateProjectResponse
instance GHC.Read.Read Amazonka.IoT1ClickProjects.CreateProject.CreateProjectResponse
instance GHC.Classes.Eq Amazonka.IoT1ClickProjects.CreateProject.CreateProjectResponse
instance Amazonka.Types.AWSRequest Amazonka.IoT1ClickProjects.CreateProject.CreateProject
instance Control.DeepSeq.NFData Amazonka.IoT1ClickProjects.CreateProject.CreateProjectResponse
instance Data.Hashable.Class.Hashable Amazonka.IoT1ClickProjects.CreateProject.CreateProject
instance Control.DeepSeq.NFData Amazonka.IoT1ClickProjects.CreateProject.CreateProject
instance Amazonka.Data.Headers.ToHeaders Amazonka.IoT1ClickProjects.CreateProject.CreateProject
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoT1ClickProjects.CreateProject.CreateProject
instance Amazonka.Data.Path.ToPath Amazonka.IoT1ClickProjects.CreateProject.CreateProject
instance Amazonka.Data.Query.ToQuery Amazonka.IoT1ClickProjects.CreateProject.CreateProject


-- | Creates an empty placement.
module Amazonka.IoT1ClickProjects.CreatePlacement

-- | <i>See:</i> <a>newCreatePlacement</a> smart constructor.
data CreatePlacement
CreatePlacement' :: Maybe (HashMap Text Text) -> Text -> Text -> CreatePlacement

-- | Optional user-defined key/value pairs providing contextual data (such
--   as location or function) for the placement.
[$sel:attributes:CreatePlacement'] :: CreatePlacement -> Maybe (HashMap Text Text)

-- | The name of the placement to be created.
[$sel:placementName:CreatePlacement'] :: CreatePlacement -> Text

-- | The name of the project in which to create the placement.
[$sel:projectName:CreatePlacement'] :: CreatePlacement -> Text

-- | Create a value of <a>CreatePlacement</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:attributes:CreatePlacement'</a>,
--   <a>createPlacement_attributes</a> - Optional user-defined key/value
--   pairs providing contextual data (such as location or function) for the
--   placement.
--   
--   <a>$sel:placementName:CreatePlacement'</a>,
--   <a>createPlacement_placementName</a> - The name of the placement to be
--   created.
--   
--   <a>$sel:projectName:CreatePlacement'</a>,
--   <a>createPlacement_projectName</a> - The name of the project in which
--   to create the placement.
newCreatePlacement :: Text -> Text -> CreatePlacement

-- | Optional user-defined key/value pairs providing contextual data (such
--   as location or function) for the placement.
createPlacement_attributes :: Lens' CreatePlacement (Maybe (HashMap Text Text))

-- | The name of the placement to be created.
createPlacement_placementName :: Lens' CreatePlacement Text

-- | The name of the project in which to create the placement.
createPlacement_projectName :: Lens' CreatePlacement Text

-- | <i>See:</i> <a>newCreatePlacementResponse</a> smart constructor.
data CreatePlacementResponse
CreatePlacementResponse' :: Int -> CreatePlacementResponse

-- | The response's http status code.
[$sel:httpStatus:CreatePlacementResponse'] :: CreatePlacementResponse -> Int

-- | Create a value of <a>CreatePlacementResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreatePlacementResponse'</a>,
--   <a>createPlacementResponse_httpStatus</a> - The response's http status
--   code.
newCreatePlacementResponse :: Int -> CreatePlacementResponse

-- | The response's http status code.
createPlacementResponse_httpStatus :: Lens' CreatePlacementResponse Int
instance GHC.Generics.Generic Amazonka.IoT1ClickProjects.CreatePlacement.CreatePlacement
instance GHC.Show.Show Amazonka.IoT1ClickProjects.CreatePlacement.CreatePlacement
instance GHC.Read.Read Amazonka.IoT1ClickProjects.CreatePlacement.CreatePlacement
instance GHC.Classes.Eq Amazonka.IoT1ClickProjects.CreatePlacement.CreatePlacement
instance GHC.Generics.Generic Amazonka.IoT1ClickProjects.CreatePlacement.CreatePlacementResponse
instance GHC.Show.Show Amazonka.IoT1ClickProjects.CreatePlacement.CreatePlacementResponse
instance GHC.Read.Read Amazonka.IoT1ClickProjects.CreatePlacement.CreatePlacementResponse
instance GHC.Classes.Eq Amazonka.IoT1ClickProjects.CreatePlacement.CreatePlacementResponse
instance Amazonka.Types.AWSRequest Amazonka.IoT1ClickProjects.CreatePlacement.CreatePlacement
instance Control.DeepSeq.NFData Amazonka.IoT1ClickProjects.CreatePlacement.CreatePlacementResponse
instance Data.Hashable.Class.Hashable Amazonka.IoT1ClickProjects.CreatePlacement.CreatePlacement
instance Control.DeepSeq.NFData Amazonka.IoT1ClickProjects.CreatePlacement.CreatePlacement
instance Amazonka.Data.Headers.ToHeaders Amazonka.IoT1ClickProjects.CreatePlacement.CreatePlacement
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoT1ClickProjects.CreatePlacement.CreatePlacement
instance Amazonka.Data.Path.ToPath Amazonka.IoT1ClickProjects.CreatePlacement.CreatePlacement
instance Amazonka.Data.Query.ToQuery Amazonka.IoT1ClickProjects.CreatePlacement.CreatePlacement


-- | Associates a physical device with a placement.
module Amazonka.IoT1ClickProjects.AssociateDeviceWithPlacement

-- | <i>See:</i> <a>newAssociateDeviceWithPlacement</a> smart constructor.
data AssociateDeviceWithPlacement
AssociateDeviceWithPlacement' :: Text -> Text -> Text -> Text -> AssociateDeviceWithPlacement

-- | The name of the project containing the placement in which to associate
--   the device.
[$sel:projectName:AssociateDeviceWithPlacement'] :: AssociateDeviceWithPlacement -> Text

-- | The name of the placement in which to associate the device.
[$sel:placementName:AssociateDeviceWithPlacement'] :: AssociateDeviceWithPlacement -> Text

-- | The ID of the physical device to be associated with the given
--   placement in the project. Note that a mandatory 4 character prefix is
--   required for all <tt>deviceId</tt> values.
[$sel:deviceId:AssociateDeviceWithPlacement'] :: AssociateDeviceWithPlacement -> Text

-- | The device template name to associate with the device ID.
[$sel:deviceTemplateName:AssociateDeviceWithPlacement'] :: AssociateDeviceWithPlacement -> Text

-- | Create a value of <a>AssociateDeviceWithPlacement</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:projectName:AssociateDeviceWithPlacement'</a>,
--   <a>associateDeviceWithPlacement_projectName</a> - The name of the
--   project containing the placement in which to associate the device.
--   
--   <a>$sel:placementName:AssociateDeviceWithPlacement'</a>,
--   <a>associateDeviceWithPlacement_placementName</a> - The name of the
--   placement in which to associate the device.
--   
--   <a>$sel:deviceId:AssociateDeviceWithPlacement'</a>,
--   <a>associateDeviceWithPlacement_deviceId</a> - The ID of the physical
--   device to be associated with the given placement in the project. Note
--   that a mandatory 4 character prefix is required for all
--   <tt>deviceId</tt> values.
--   
--   <a>$sel:deviceTemplateName:AssociateDeviceWithPlacement'</a>,
--   <a>associateDeviceWithPlacement_deviceTemplateName</a> - The device
--   template name to associate with the device ID.
newAssociateDeviceWithPlacement :: Text -> Text -> Text -> Text -> AssociateDeviceWithPlacement

-- | The name of the project containing the placement in which to associate
--   the device.
associateDeviceWithPlacement_projectName :: Lens' AssociateDeviceWithPlacement Text

-- | The name of the placement in which to associate the device.
associateDeviceWithPlacement_placementName :: Lens' AssociateDeviceWithPlacement Text

-- | The ID of the physical device to be associated with the given
--   placement in the project. Note that a mandatory 4 character prefix is
--   required for all <tt>deviceId</tt> values.
associateDeviceWithPlacement_deviceId :: Lens' AssociateDeviceWithPlacement Text

-- | The device template name to associate with the device ID.
associateDeviceWithPlacement_deviceTemplateName :: Lens' AssociateDeviceWithPlacement Text

-- | <i>See:</i> <a>newAssociateDeviceWithPlacementResponse</a> smart
--   constructor.
data AssociateDeviceWithPlacementResponse
AssociateDeviceWithPlacementResponse' :: Int -> AssociateDeviceWithPlacementResponse

-- | The response's http status code.
[$sel:httpStatus:AssociateDeviceWithPlacementResponse'] :: AssociateDeviceWithPlacementResponse -> Int

-- | Create a value of <a>AssociateDeviceWithPlacementResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:AssociateDeviceWithPlacementResponse'</a>,
--   <a>associateDeviceWithPlacementResponse_httpStatus</a> - The
--   response's http status code.
newAssociateDeviceWithPlacementResponse :: Int -> AssociateDeviceWithPlacementResponse

-- | The response's http status code.
associateDeviceWithPlacementResponse_httpStatus :: Lens' AssociateDeviceWithPlacementResponse Int
instance GHC.Generics.Generic Amazonka.IoT1ClickProjects.AssociateDeviceWithPlacement.AssociateDeviceWithPlacement
instance GHC.Show.Show Amazonka.IoT1ClickProjects.AssociateDeviceWithPlacement.AssociateDeviceWithPlacement
instance GHC.Read.Read Amazonka.IoT1ClickProjects.AssociateDeviceWithPlacement.AssociateDeviceWithPlacement
instance GHC.Classes.Eq Amazonka.IoT1ClickProjects.AssociateDeviceWithPlacement.AssociateDeviceWithPlacement
instance GHC.Generics.Generic Amazonka.IoT1ClickProjects.AssociateDeviceWithPlacement.AssociateDeviceWithPlacementResponse
instance GHC.Show.Show Amazonka.IoT1ClickProjects.AssociateDeviceWithPlacement.AssociateDeviceWithPlacementResponse
instance GHC.Read.Read Amazonka.IoT1ClickProjects.AssociateDeviceWithPlacement.AssociateDeviceWithPlacementResponse
instance GHC.Classes.Eq Amazonka.IoT1ClickProjects.AssociateDeviceWithPlacement.AssociateDeviceWithPlacementResponse
instance Amazonka.Types.AWSRequest Amazonka.IoT1ClickProjects.AssociateDeviceWithPlacement.AssociateDeviceWithPlacement
instance Control.DeepSeq.NFData Amazonka.IoT1ClickProjects.AssociateDeviceWithPlacement.AssociateDeviceWithPlacementResponse
instance Data.Hashable.Class.Hashable Amazonka.IoT1ClickProjects.AssociateDeviceWithPlacement.AssociateDeviceWithPlacement
instance Control.DeepSeq.NFData Amazonka.IoT1ClickProjects.AssociateDeviceWithPlacement.AssociateDeviceWithPlacement
instance Amazonka.Data.Headers.ToHeaders Amazonka.IoT1ClickProjects.AssociateDeviceWithPlacement.AssociateDeviceWithPlacement
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoT1ClickProjects.AssociateDeviceWithPlacement.AssociateDeviceWithPlacement
instance Amazonka.Data.Path.ToPath Amazonka.IoT1ClickProjects.AssociateDeviceWithPlacement.AssociateDeviceWithPlacement
instance Amazonka.Data.Query.ToQuery Amazonka.IoT1ClickProjects.AssociateDeviceWithPlacement.AssociateDeviceWithPlacement


-- | Removes one or more tags (metadata key/value pairs) from a resource.
module Amazonka.IoT1ClickProjects.UntagResource

-- | <i>See:</i> <a>newUntagResource</a> smart constructor.
data UntagResource
UntagResource' :: Text -> NonEmpty Text -> UntagResource

-- | The ARN of the resource whose tag you want to remove.
[$sel:resourceArn:UntagResource'] :: UntagResource -> Text

-- | The keys of those tags which you want to remove.
[$sel:tagKeys:UntagResource'] :: UntagResource -> NonEmpty Text

-- | Create a value of <a>UntagResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:UntagResource'</a>,
--   <a>untagResource_resourceArn</a> - The ARN of the resource whose tag
--   you want to remove.
--   
--   <a>$sel:tagKeys:UntagResource'</a>, <a>untagResource_tagKeys</a> - The
--   keys of those tags which you want to remove.
newUntagResource :: Text -> NonEmpty Text -> UntagResource

-- | The ARN of the resource whose tag you want to remove.
untagResource_resourceArn :: Lens' UntagResource Text

-- | The keys of those tags which you want to remove.
untagResource_tagKeys :: Lens' UntagResource (NonEmpty Text)

-- | <i>See:</i> <a>newUntagResourceResponse</a> smart constructor.
data UntagResourceResponse
UntagResourceResponse' :: Int -> UntagResourceResponse

-- | The response's http status code.
[$sel:httpStatus:UntagResourceResponse'] :: UntagResourceResponse -> Int

-- | Create a value of <a>UntagResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UntagResourceResponse'</a>,
--   <a>untagResourceResponse_httpStatus</a> - The response's http status
--   code.
newUntagResourceResponse :: Int -> UntagResourceResponse

-- | The response's http status code.
untagResourceResponse_httpStatus :: Lens' UntagResourceResponse Int
instance GHC.Generics.Generic Amazonka.IoT1ClickProjects.UntagResource.UntagResource
instance GHC.Show.Show Amazonka.IoT1ClickProjects.UntagResource.UntagResource
instance GHC.Read.Read Amazonka.IoT1ClickProjects.UntagResource.UntagResource
instance GHC.Classes.Eq Amazonka.IoT1ClickProjects.UntagResource.UntagResource
instance GHC.Generics.Generic Amazonka.IoT1ClickProjects.UntagResource.UntagResourceResponse
instance GHC.Show.Show Amazonka.IoT1ClickProjects.UntagResource.UntagResourceResponse
instance GHC.Read.Read Amazonka.IoT1ClickProjects.UntagResource.UntagResourceResponse
instance GHC.Classes.Eq Amazonka.IoT1ClickProjects.UntagResource.UntagResourceResponse
instance Amazonka.Types.AWSRequest Amazonka.IoT1ClickProjects.UntagResource.UntagResource
instance Control.DeepSeq.NFData Amazonka.IoT1ClickProjects.UntagResource.UntagResourceResponse
instance Data.Hashable.Class.Hashable Amazonka.IoT1ClickProjects.UntagResource.UntagResource
instance Control.DeepSeq.NFData Amazonka.IoT1ClickProjects.UntagResource.UntagResource
instance Amazonka.Data.Headers.ToHeaders Amazonka.IoT1ClickProjects.UntagResource.UntagResource
instance Amazonka.Data.Path.ToPath Amazonka.IoT1ClickProjects.UntagResource.UntagResource
instance Amazonka.Data.Query.ToQuery Amazonka.IoT1ClickProjects.UntagResource.UntagResource


-- | Updates a placement with the given attributes. To clear an attribute,
--   pass an empty value (i.e., "").
module Amazonka.IoT1ClickProjects.UpdatePlacement

-- | <i>See:</i> <a>newUpdatePlacement</a> smart constructor.
data UpdatePlacement
UpdatePlacement' :: Maybe (HashMap Text Text) -> Text -> Text -> UpdatePlacement

-- | The user-defined object of attributes used to update the placement.
--   The maximum number of key/value pairs is 50.
[$sel:attributes:UpdatePlacement'] :: UpdatePlacement -> Maybe (HashMap Text Text)

-- | The name of the placement to update.
[$sel:placementName:UpdatePlacement'] :: UpdatePlacement -> Text

-- | The name of the project containing the placement to be updated.
[$sel:projectName:UpdatePlacement'] :: UpdatePlacement -> Text

-- | Create a value of <a>UpdatePlacement</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:attributes:UpdatePlacement'</a>,
--   <a>updatePlacement_attributes</a> - The user-defined object of
--   attributes used to update the placement. The maximum number of
--   key/value pairs is 50.
--   
--   <a>$sel:placementName:UpdatePlacement'</a>,
--   <a>updatePlacement_placementName</a> - The name of the placement to
--   update.
--   
--   <a>$sel:projectName:UpdatePlacement'</a>,
--   <a>updatePlacement_projectName</a> - The name of the project
--   containing the placement to be updated.
newUpdatePlacement :: Text -> Text -> UpdatePlacement

-- | The user-defined object of attributes used to update the placement.
--   The maximum number of key/value pairs is 50.
updatePlacement_attributes :: Lens' UpdatePlacement (Maybe (HashMap Text Text))

-- | The name of the placement to update.
updatePlacement_placementName :: Lens' UpdatePlacement Text

-- | The name of the project containing the placement to be updated.
updatePlacement_projectName :: Lens' UpdatePlacement Text

-- | <i>See:</i> <a>newUpdatePlacementResponse</a> smart constructor.
data UpdatePlacementResponse
UpdatePlacementResponse' :: Int -> UpdatePlacementResponse

-- | The response's http status code.
[$sel:httpStatus:UpdatePlacementResponse'] :: UpdatePlacementResponse -> Int

-- | Create a value of <a>UpdatePlacementResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdatePlacementResponse'</a>,
--   <a>updatePlacementResponse_httpStatus</a> - The response's http status
--   code.
newUpdatePlacementResponse :: Int -> UpdatePlacementResponse

-- | The response's http status code.
updatePlacementResponse_httpStatus :: Lens' UpdatePlacementResponse Int
instance GHC.Generics.Generic Amazonka.IoT1ClickProjects.UpdatePlacement.UpdatePlacement
instance GHC.Show.Show Amazonka.IoT1ClickProjects.UpdatePlacement.UpdatePlacement
instance GHC.Read.Read Amazonka.IoT1ClickProjects.UpdatePlacement.UpdatePlacement
instance GHC.Classes.Eq Amazonka.IoT1ClickProjects.UpdatePlacement.UpdatePlacement
instance GHC.Generics.Generic Amazonka.IoT1ClickProjects.UpdatePlacement.UpdatePlacementResponse
instance GHC.Show.Show Amazonka.IoT1ClickProjects.UpdatePlacement.UpdatePlacementResponse
instance GHC.Read.Read Amazonka.IoT1ClickProjects.UpdatePlacement.UpdatePlacementResponse
instance GHC.Classes.Eq Amazonka.IoT1ClickProjects.UpdatePlacement.UpdatePlacementResponse
instance Amazonka.Types.AWSRequest Amazonka.IoT1ClickProjects.UpdatePlacement.UpdatePlacement
instance Control.DeepSeq.NFData Amazonka.IoT1ClickProjects.UpdatePlacement.UpdatePlacementResponse
instance Data.Hashable.Class.Hashable Amazonka.IoT1ClickProjects.UpdatePlacement.UpdatePlacement
instance Control.DeepSeq.NFData Amazonka.IoT1ClickProjects.UpdatePlacement.UpdatePlacement
instance Amazonka.Data.Headers.ToHeaders Amazonka.IoT1ClickProjects.UpdatePlacement.UpdatePlacement
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoT1ClickProjects.UpdatePlacement.UpdatePlacement
instance Amazonka.Data.Path.ToPath Amazonka.IoT1ClickProjects.UpdatePlacement.UpdatePlacement
instance Amazonka.Data.Query.ToQuery Amazonka.IoT1ClickProjects.UpdatePlacement.UpdatePlacement


-- | Updates a project associated with your AWS account and region. With
--   the exception of device template names, you can pass just the values
--   that need to be updated because the update request will change only
--   the values that are provided. To clear a value, pass the empty string
--   (i.e., <tt>""</tt>).
module Amazonka.IoT1ClickProjects.UpdateProject

-- | <i>See:</i> <a>newUpdateProject</a> smart constructor.
data UpdateProject
UpdateProject' :: Maybe PlacementTemplate -> Maybe Text -> Text -> UpdateProject

-- | An object defining the project update. Once a project has been
--   created, you cannot add device template names to the project. However,
--   for a given <tt>placementTemplate</tt>, you can update the associated
--   <tt>callbackOverrides</tt> for the device definition using this API.
[$sel:placementTemplate:UpdateProject'] :: UpdateProject -> Maybe PlacementTemplate

-- | An optional user-defined description for the project.
[$sel:description:UpdateProject'] :: UpdateProject -> Maybe Text

-- | The name of the project to be updated.
[$sel:projectName:UpdateProject'] :: UpdateProject -> Text

-- | Create a value of <a>UpdateProject</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:placementTemplate:UpdateProject'</a>,
--   <a>updateProject_placementTemplate</a> - An object defining the
--   project update. Once a project has been created, you cannot add device
--   template names to the project. However, for a given
--   <tt>placementTemplate</tt>, you can update the associated
--   <tt>callbackOverrides</tt> for the device definition using this API.
--   
--   <a>$sel:description:UpdateProject'</a>,
--   <a>updateProject_description</a> - An optional user-defined
--   description for the project.
--   
--   <a>$sel:projectName:UpdateProject'</a>,
--   <a>updateProject_projectName</a> - The name of the project to be
--   updated.
newUpdateProject :: Text -> UpdateProject

-- | An object defining the project update. Once a project has been
--   created, you cannot add device template names to the project. However,
--   for a given <tt>placementTemplate</tt>, you can update the associated
--   <tt>callbackOverrides</tt> for the device definition using this API.
updateProject_placementTemplate :: Lens' UpdateProject (Maybe PlacementTemplate)

-- | An optional user-defined description for the project.
updateProject_description :: Lens' UpdateProject (Maybe Text)

-- | The name of the project to be updated.
updateProject_projectName :: Lens' UpdateProject Text

-- | <i>See:</i> <a>newUpdateProjectResponse</a> smart constructor.
data UpdateProjectResponse
UpdateProjectResponse' :: Int -> UpdateProjectResponse

-- | The response's http status code.
[$sel:httpStatus:UpdateProjectResponse'] :: UpdateProjectResponse -> Int

-- | Create a value of <a>UpdateProjectResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateProjectResponse'</a>,
--   <a>updateProjectResponse_httpStatus</a> - The response's http status
--   code.
newUpdateProjectResponse :: Int -> UpdateProjectResponse

-- | The response's http status code.
updateProjectResponse_httpStatus :: Lens' UpdateProjectResponse Int
instance GHC.Generics.Generic Amazonka.IoT1ClickProjects.UpdateProject.UpdateProject
instance GHC.Show.Show Amazonka.IoT1ClickProjects.UpdateProject.UpdateProject
instance GHC.Read.Read Amazonka.IoT1ClickProjects.UpdateProject.UpdateProject
instance GHC.Classes.Eq Amazonka.IoT1ClickProjects.UpdateProject.UpdateProject
instance GHC.Generics.Generic Amazonka.IoT1ClickProjects.UpdateProject.UpdateProjectResponse
instance GHC.Show.Show Amazonka.IoT1ClickProjects.UpdateProject.UpdateProjectResponse
instance GHC.Read.Read Amazonka.IoT1ClickProjects.UpdateProject.UpdateProjectResponse
instance GHC.Classes.Eq Amazonka.IoT1ClickProjects.UpdateProject.UpdateProjectResponse
instance Amazonka.Types.AWSRequest Amazonka.IoT1ClickProjects.UpdateProject.UpdateProject
instance Control.DeepSeq.NFData Amazonka.IoT1ClickProjects.UpdateProject.UpdateProjectResponse
instance Data.Hashable.Class.Hashable Amazonka.IoT1ClickProjects.UpdateProject.UpdateProject
instance Control.DeepSeq.NFData Amazonka.IoT1ClickProjects.UpdateProject.UpdateProject
instance Amazonka.Data.Headers.ToHeaders Amazonka.IoT1ClickProjects.UpdateProject.UpdateProject
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoT1ClickProjects.UpdateProject.UpdateProject
instance Amazonka.Data.Path.ToPath Amazonka.IoT1ClickProjects.UpdateProject.UpdateProject
instance Amazonka.Data.Query.ToQuery Amazonka.IoT1ClickProjects.UpdateProject.UpdateProject


module Amazonka.IoT1ClickProjects.Lens

-- | The token to retrieve the next set of results.
listProjects_nextToken :: Lens' ListProjects (Maybe Text)

-- | The maximum number of results to return per request. If not set, a
--   default value of 100 is used.
listProjects_maxResults :: Lens' ListProjects (Maybe Natural)

-- | The token used to retrieve the next set of results - will be
--   effectively empty if there are no further results.
listProjectsResponse_nextToken :: Lens' ListProjectsResponse (Maybe Text)

-- | The response's http status code.
listProjectsResponse_httpStatus :: Lens' ListProjectsResponse Int

-- | An object containing the list of projects.
listProjectsResponse_projects :: Lens' ListProjectsResponse [ProjectSummary]

-- | The name of the empty project to delete.
deleteProject_projectName :: Lens' DeleteProject Text

-- | The response's http status code.
deleteProjectResponse_httpStatus :: Lens' DeleteProjectResponse Int

-- | An object defining the project update. Once a project has been
--   created, you cannot add device template names to the project. However,
--   for a given <tt>placementTemplate</tt>, you can update the associated
--   <tt>callbackOverrides</tt> for the device definition using this API.
updateProject_placementTemplate :: Lens' UpdateProject (Maybe PlacementTemplate)

-- | An optional user-defined description for the project.
updateProject_description :: Lens' UpdateProject (Maybe Text)

-- | The name of the project to be updated.
updateProject_projectName :: Lens' UpdateProject Text

-- | The response's http status code.
updateProjectResponse_httpStatus :: Lens' UpdateProjectResponse Int

-- | The ARN of the resource whose tags you want to list.
listTagsForResource_resourceArn :: Lens' ListTagsForResource Text

-- | The tags (metadata key/value pairs) which you have assigned to the
--   resource.
listTagsForResourceResponse_tags :: Lens' ListTagsForResourceResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
listTagsForResourceResponse_httpStatus :: Lens' ListTagsForResourceResponse Int

-- | The name of the project that contains the placement.
disassociateDeviceFromPlacement_projectName :: Lens' DisassociateDeviceFromPlacement Text

-- | The name of the placement that the device should be removed from.
disassociateDeviceFromPlacement_placementName :: Lens' DisassociateDeviceFromPlacement Text

-- | The device ID that should be removed from the placement.
disassociateDeviceFromPlacement_deviceTemplateName :: Lens' DisassociateDeviceFromPlacement Text

-- | The response's http status code.
disassociateDeviceFromPlacementResponse_httpStatus :: Lens' DisassociateDeviceFromPlacementResponse Int

-- | Optional user-defined key/value pairs providing contextual data (such
--   as location or function) for the placement.
createPlacement_attributes :: Lens' CreatePlacement (Maybe (HashMap Text Text))

-- | The name of the placement to be created.
createPlacement_placementName :: Lens' CreatePlacement Text

-- | The name of the project in which to create the placement.
createPlacement_projectName :: Lens' CreatePlacement Text

-- | The response's http status code.
createPlacementResponse_httpStatus :: Lens' CreatePlacementResponse Int

-- | The name of the project to be described.
describeProject_projectName :: Lens' DescribeProject Text

-- | The response's http status code.
describeProjectResponse_httpStatus :: Lens' DescribeProjectResponse Int

-- | An object describing the project.
describeProjectResponse_project :: Lens' DescribeProjectResponse ProjectDescription

-- | The name of the project containing the placement.
getDevicesInPlacement_projectName :: Lens' GetDevicesInPlacement Text

-- | The name of the placement to get the devices from.
getDevicesInPlacement_placementName :: Lens' GetDevicesInPlacement Text

-- | The response's http status code.
getDevicesInPlacementResponse_httpStatus :: Lens' GetDevicesInPlacementResponse Int

-- | An object containing the devices (zero or more) within the placement.
getDevicesInPlacementResponse_devices :: Lens' GetDevicesInPlacementResponse (HashMap Text Text)

-- | The name of the placement within a project.
describePlacement_placementName :: Lens' DescribePlacement Text

-- | The project containing the placement to be described.
describePlacement_projectName :: Lens' DescribePlacement Text

-- | The response's http status code.
describePlacementResponse_httpStatus :: Lens' DescribePlacementResponse Int

-- | An object describing the placement.
describePlacementResponse_placement :: Lens' DescribePlacementResponse PlacementDescription

-- | The name of the project containing the placement in which to associate
--   the device.
associateDeviceWithPlacement_projectName :: Lens' AssociateDeviceWithPlacement Text

-- | The name of the placement in which to associate the device.
associateDeviceWithPlacement_placementName :: Lens' AssociateDeviceWithPlacement Text

-- | The ID of the physical device to be associated with the given
--   placement in the project. Note that a mandatory 4 character prefix is
--   required for all <tt>deviceId</tt> values.
associateDeviceWithPlacement_deviceId :: Lens' AssociateDeviceWithPlacement Text

-- | The device template name to associate with the device ID.
associateDeviceWithPlacement_deviceTemplateName :: Lens' AssociateDeviceWithPlacement Text

-- | The response's http status code.
associateDeviceWithPlacementResponse_httpStatus :: Lens' AssociateDeviceWithPlacementResponse Int

-- | The name of the empty placement to delete.
deletePlacement_placementName :: Lens' DeletePlacement Text

-- | The project containing the empty placement to delete.
deletePlacement_projectName :: Lens' DeletePlacement Text

-- | The response's http status code.
deletePlacementResponse_httpStatus :: Lens' DeletePlacementResponse Int

-- | The user-defined object of attributes used to update the placement.
--   The maximum number of key/value pairs is 50.
updatePlacement_attributes :: Lens' UpdatePlacement (Maybe (HashMap Text Text))

-- | The name of the placement to update.
updatePlacement_placementName :: Lens' UpdatePlacement Text

-- | The name of the project containing the placement to be updated.
updatePlacement_projectName :: Lens' UpdatePlacement Text

-- | The response's http status code.
updatePlacementResponse_httpStatus :: Lens' UpdatePlacementResponse Int

-- | The ARN of the resouce for which tag(s) should be added or modified.
tagResource_resourceArn :: Lens' TagResource Text

-- | The new or modifying tag(s) for the resource. See <a>AWS IoT 1-Click
--   Service Limits</a> for the maximum number of tags allowed per
--   resource.
tagResource_tags :: Lens' TagResource (HashMap Text Text)

-- | The response's http status code.
tagResourceResponse_httpStatus :: Lens' TagResourceResponse Int

-- | The token to retrieve the next set of results.
listPlacements_nextToken :: Lens' ListPlacements (Maybe Text)

-- | The maximum number of results to return per request. If not set, a
--   default value of 100 is used.
listPlacements_maxResults :: Lens' ListPlacements (Maybe Natural)

-- | The project containing the placements to be listed.
listPlacements_projectName :: Lens' ListPlacements Text

-- | The token used to retrieve the next set of results - will be
--   effectively empty if there are no further results.
listPlacementsResponse_nextToken :: Lens' ListPlacementsResponse (Maybe Text)

-- | The response's http status code.
listPlacementsResponse_httpStatus :: Lens' ListPlacementsResponse Int

-- | An object listing the requested placements.
listPlacementsResponse_placements :: Lens' ListPlacementsResponse [PlacementSummary]

-- | The ARN of the resource whose tag you want to remove.
untagResource_resourceArn :: Lens' UntagResource Text

-- | The keys of those tags which you want to remove.
untagResource_tagKeys :: Lens' UntagResource (NonEmpty Text)

-- | The response's http status code.
untagResourceResponse_httpStatus :: Lens' UntagResourceResponse Int

-- | The schema defining the placement to be created. A placement template
--   defines placement default attributes and device templates. You cannot
--   add or remove device templates after the project has been created.
--   However, you can update <tt>callbackOverrides</tt> for the device
--   templates using the <tt>UpdateProject</tt> API.
createProject_placementTemplate :: Lens' CreateProject (Maybe PlacementTemplate)

-- | An optional description for the project.
createProject_description :: Lens' CreateProject (Maybe Text)

-- | Optional tags (metadata key/value pairs) to be associated with the
--   project. For example, <tt>{ {"key1": "value1", "key2": "value2"}
--   }</tt>. For more information, see <a>AWS Tagging Strategies</a>.
createProject_tags :: Lens' CreateProject (Maybe (HashMap Text Text))

-- | The name of the project to create.
createProject_projectName :: Lens' CreateProject Text

-- | The response's http status code.
createProjectResponse_httpStatus :: Lens' CreateProjectResponse Int

-- | The device type, which currently must be <tt>"button"</tt>.
deviceTemplate_deviceType :: Lens' DeviceTemplate (Maybe Text)

-- | An optional Lambda function to invoke instead of the default Lambda
--   function provided by the placement template.
deviceTemplate_callbackOverrides :: Lens' DeviceTemplate (Maybe (HashMap Text Text))

-- | The name of the project containing the placement.
placementDescription_projectName :: Lens' PlacementDescription Text

-- | The name of the placement.
placementDescription_placementName :: Lens' PlacementDescription Text

-- | The user-defined attributes associated with the placement.
placementDescription_attributes :: Lens' PlacementDescription (HashMap Text Text)

-- | The date when the placement was initially created, in UNIX epoch time
--   format.
placementDescription_createdDate :: Lens' PlacementDescription UTCTime

-- | The date when the placement was last updated, in UNIX epoch time
--   format. If the placement was not updated, then <tt>createdDate</tt>
--   and <tt>updatedDate</tt> are the same.
placementDescription_updatedDate :: Lens' PlacementDescription UTCTime

-- | The name of the project containing the placement.
placementSummary_projectName :: Lens' PlacementSummary Text

-- | The name of the placement being summarized.
placementSummary_placementName :: Lens' PlacementSummary Text

-- | The date when the placement was originally created, in UNIX epoch time
--   format.
placementSummary_createdDate :: Lens' PlacementSummary UTCTime

-- | The date when the placement was last updated, in UNIX epoch time
--   format. If the placement was not updated, then <tt>createdDate</tt>
--   and <tt>updatedDate</tt> are the same.
placementSummary_updatedDate :: Lens' PlacementSummary UTCTime

-- | An object specifying the DeviceTemplate for all placements using this
--   (PlacementTemplate) template.
placementTemplate_deviceTemplates :: Lens' PlacementTemplate (Maybe (HashMap Text DeviceTemplate))

-- | The default attributes (key/value pairs) to be applied to all
--   placements using this template.
placementTemplate_defaultAttributes :: Lens' PlacementTemplate (Maybe (HashMap Text Text))

-- | The ARN of the project.
projectDescription_arn :: Lens' ProjectDescription (Maybe Text)

-- | An object describing the project's placement specifications.
projectDescription_placementTemplate :: Lens' ProjectDescription (Maybe PlacementTemplate)

-- | The description of the project.
projectDescription_description :: Lens' ProjectDescription (Maybe Text)

-- | The tags (metadata key/value pairs) associated with the project.
projectDescription_tags :: Lens' ProjectDescription (Maybe (HashMap Text Text))

-- | The name of the project for which to obtain information from.
projectDescription_projectName :: Lens' ProjectDescription Text

-- | The date when the project was originally created, in UNIX epoch time
--   format.
projectDescription_createdDate :: Lens' ProjectDescription UTCTime

-- | The date when the project was last updated, in UNIX epoch time format.
--   If the project was not updated, then <tt>createdDate</tt> and
--   <tt>updatedDate</tt> are the same.
projectDescription_updatedDate :: Lens' ProjectDescription UTCTime

-- | The ARN of the project.
projectSummary_arn :: Lens' ProjectSummary (Maybe Text)

-- | The tags (metadata key/value pairs) associated with the project.
projectSummary_tags :: Lens' ProjectSummary (Maybe (HashMap Text Text))

-- | The name of the project being summarized.
projectSummary_projectName :: Lens' ProjectSummary Text

-- | The date when the project was originally created, in UNIX epoch time
--   format.
projectSummary_createdDate :: Lens' ProjectSummary UTCTime

-- | The date when the project was last updated, in UNIX epoch time format.
--   If the project was not updated, then <tt>createdDate</tt> and
--   <tt>updatedDate</tt> are the same.
projectSummary_updatedDate :: Lens' ProjectSummary UTCTime


module Amazonka.IoT1ClickProjects.Waiters


-- | Derived from API version <tt>2018-05-14</tt> of the AWS service
--   descriptions, licensed under Apache 2.0.
--   
--   The AWS IoT 1-Click Projects API Reference
module Amazonka.IoT1ClickProjects

-- | API version <tt>2018-05-14</tt> of the Amazon IoT 1-Click Projects
--   Service SDK configuration.
defaultService :: Service

_InvalidRequestException :: AsError a => Getting (First ServiceError) a ServiceError

_TooManyRequestsException :: AsError a => Getting (First ServiceError) a ServiceError

_InternalFailureException :: AsError a => Getting (First ServiceError) a ServiceError

_ResourceConflictException :: AsError a => Getting (First ServiceError) a ServiceError

_ResourceNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | <i>See:</i> <a>newListProjects</a> smart constructor.
data ListProjects
ListProjects' :: Maybe Text -> Maybe Natural -> ListProjects

-- | Create a value of <a>ListProjects</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListProjects'</a>, <a>listProjects_nextToken</a> -
--   The token to retrieve the next set of results.
--   
--   <a>$sel:maxResults:ListProjects'</a>, <a>listProjects_maxResults</a> -
--   The maximum number of results to return per request. If not set, a
--   default value of 100 is used.
newListProjects :: ListProjects

-- | <i>See:</i> <a>newListProjectsResponse</a> smart constructor.
data ListProjectsResponse
ListProjectsResponse' :: Maybe Text -> Int -> [ProjectSummary] -> ListProjectsResponse

-- | Create a value of <a>ListProjectsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListProjects'</a>,
--   <a>listProjectsResponse_nextToken</a> - The token used to retrieve the
--   next set of results - will be effectively empty if there are no
--   further results.
--   
--   <a>$sel:httpStatus:ListProjectsResponse'</a>,
--   <a>listProjectsResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:projects:ListProjectsResponse'</a>,
--   <a>listProjectsResponse_projects</a> - An object containing the list
--   of projects.
newListProjectsResponse :: Int -> ListProjectsResponse

-- | <i>See:</i> <a>newDeleteProject</a> smart constructor.
data DeleteProject
DeleteProject' :: Text -> DeleteProject

-- | Create a value of <a>DeleteProject</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:projectName:DeleteProject'</a>,
--   <a>deleteProject_projectName</a> - The name of the empty project to
--   delete.
newDeleteProject :: Text -> DeleteProject

-- | <i>See:</i> <a>newDeleteProjectResponse</a> smart constructor.
data DeleteProjectResponse
DeleteProjectResponse' :: Int -> DeleteProjectResponse

-- | Create a value of <a>DeleteProjectResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteProjectResponse'</a>,
--   <a>deleteProjectResponse_httpStatus</a> - The response's http status
--   code.
newDeleteProjectResponse :: Int -> DeleteProjectResponse

-- | <i>See:</i> <a>newUpdateProject</a> smart constructor.
data UpdateProject
UpdateProject' :: Maybe PlacementTemplate -> Maybe Text -> Text -> UpdateProject

-- | Create a value of <a>UpdateProject</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:placementTemplate:UpdateProject'</a>,
--   <a>updateProject_placementTemplate</a> - An object defining the
--   project update. Once a project has been created, you cannot add device
--   template names to the project. However, for a given
--   <tt>placementTemplate</tt>, you can update the associated
--   <tt>callbackOverrides</tt> for the device definition using this API.
--   
--   <a>$sel:description:UpdateProject'</a>,
--   <a>updateProject_description</a> - An optional user-defined
--   description for the project.
--   
--   <a>$sel:projectName:UpdateProject'</a>,
--   <a>updateProject_projectName</a> - The name of the project to be
--   updated.
newUpdateProject :: Text -> UpdateProject

-- | <i>See:</i> <a>newUpdateProjectResponse</a> smart constructor.
data UpdateProjectResponse
UpdateProjectResponse' :: Int -> UpdateProjectResponse

-- | Create a value of <a>UpdateProjectResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateProjectResponse'</a>,
--   <a>updateProjectResponse_httpStatus</a> - The response's http status
--   code.
newUpdateProjectResponse :: Int -> UpdateProjectResponse

-- | <i>See:</i> <a>newListTagsForResource</a> smart constructor.
data ListTagsForResource
ListTagsForResource' :: Text -> ListTagsForResource

-- | Create a value of <a>ListTagsForResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:ListTagsForResource'</a>,
--   <a>listTagsForResource_resourceArn</a> - The ARN of the resource whose
--   tags you want to list.
newListTagsForResource :: Text -> ListTagsForResource

-- | <i>See:</i> <a>newListTagsForResourceResponse</a> smart constructor.
data ListTagsForResourceResponse
ListTagsForResourceResponse' :: Maybe (HashMap Text Text) -> Int -> ListTagsForResourceResponse

-- | Create a value of <a>ListTagsForResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_tags</a> - The tags (metadata key/value
--   pairs) which you have assigned to the resource.
--   
--   <a>$sel:httpStatus:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_httpStatus</a> - The response's http
--   status code.
newListTagsForResourceResponse :: Int -> ListTagsForResourceResponse

-- | <i>See:</i> <a>newDisassociateDeviceFromPlacement</a> smart
--   constructor.
data DisassociateDeviceFromPlacement
DisassociateDeviceFromPlacement' :: Text -> Text -> Text -> DisassociateDeviceFromPlacement

-- | Create a value of <a>DisassociateDeviceFromPlacement</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:projectName:DisassociateDeviceFromPlacement'</a>,
--   <a>disassociateDeviceFromPlacement_projectName</a> - The name of the
--   project that contains the placement.
--   
--   <a>$sel:placementName:DisassociateDeviceFromPlacement'</a>,
--   <a>disassociateDeviceFromPlacement_placementName</a> - The name of the
--   placement that the device should be removed from.
--   
--   <a>$sel:deviceTemplateName:DisassociateDeviceFromPlacement'</a>,
--   <a>disassociateDeviceFromPlacement_deviceTemplateName</a> - The device
--   ID that should be removed from the placement.
newDisassociateDeviceFromPlacement :: Text -> Text -> Text -> DisassociateDeviceFromPlacement

-- | <i>See:</i> <a>newDisassociateDeviceFromPlacementResponse</a> smart
--   constructor.
data DisassociateDeviceFromPlacementResponse
DisassociateDeviceFromPlacementResponse' :: Int -> DisassociateDeviceFromPlacementResponse

-- | Create a value of <a>DisassociateDeviceFromPlacementResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DisassociateDeviceFromPlacementResponse'</a>,
--   <a>disassociateDeviceFromPlacementResponse_httpStatus</a> - The
--   response's http status code.
newDisassociateDeviceFromPlacementResponse :: Int -> DisassociateDeviceFromPlacementResponse

-- | <i>See:</i> <a>newCreatePlacement</a> smart constructor.
data CreatePlacement
CreatePlacement' :: Maybe (HashMap Text Text) -> Text -> Text -> CreatePlacement

-- | Create a value of <a>CreatePlacement</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:attributes:CreatePlacement'</a>,
--   <a>createPlacement_attributes</a> - Optional user-defined key/value
--   pairs providing contextual data (such as location or function) for the
--   placement.
--   
--   <a>$sel:placementName:CreatePlacement'</a>,
--   <a>createPlacement_placementName</a> - The name of the placement to be
--   created.
--   
--   <a>$sel:projectName:CreatePlacement'</a>,
--   <a>createPlacement_projectName</a> - The name of the project in which
--   to create the placement.
newCreatePlacement :: Text -> Text -> CreatePlacement

-- | <i>See:</i> <a>newCreatePlacementResponse</a> smart constructor.
data CreatePlacementResponse
CreatePlacementResponse' :: Int -> CreatePlacementResponse

-- | Create a value of <a>CreatePlacementResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreatePlacementResponse'</a>,
--   <a>createPlacementResponse_httpStatus</a> - The response's http status
--   code.
newCreatePlacementResponse :: Int -> CreatePlacementResponse

-- | <i>See:</i> <a>newDescribeProject</a> smart constructor.
data DescribeProject
DescribeProject' :: Text -> DescribeProject

-- | Create a value of <a>DescribeProject</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:projectName:DescribeProject'</a>,
--   <a>describeProject_projectName</a> - The name of the project to be
--   described.
newDescribeProject :: Text -> DescribeProject

-- | <i>See:</i> <a>newDescribeProjectResponse</a> smart constructor.
data DescribeProjectResponse
DescribeProjectResponse' :: Int -> ProjectDescription -> DescribeProjectResponse

-- | Create a value of <a>DescribeProjectResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DescribeProjectResponse'</a>,
--   <a>describeProjectResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:project:DescribeProjectResponse'</a>,
--   <a>describeProjectResponse_project</a> - An object describing the
--   project.
newDescribeProjectResponse :: Int -> ProjectDescription -> DescribeProjectResponse

-- | <i>See:</i> <a>newGetDevicesInPlacement</a> smart constructor.
data GetDevicesInPlacement
GetDevicesInPlacement' :: Text -> Text -> GetDevicesInPlacement

-- | Create a value of <a>GetDevicesInPlacement</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:projectName:GetDevicesInPlacement'</a>,
--   <a>getDevicesInPlacement_projectName</a> - The name of the project
--   containing the placement.
--   
--   <a>$sel:placementName:GetDevicesInPlacement'</a>,
--   <a>getDevicesInPlacement_placementName</a> - The name of the placement
--   to get the devices from.
newGetDevicesInPlacement :: Text -> Text -> GetDevicesInPlacement

-- | <i>See:</i> <a>newGetDevicesInPlacementResponse</a> smart constructor.
data GetDevicesInPlacementResponse
GetDevicesInPlacementResponse' :: Int -> HashMap Text Text -> GetDevicesInPlacementResponse

-- | Create a value of <a>GetDevicesInPlacementResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:GetDevicesInPlacementResponse'</a>,
--   <a>getDevicesInPlacementResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:devices:GetDevicesInPlacementResponse'</a>,
--   <a>getDevicesInPlacementResponse_devices</a> - An object containing
--   the devices (zero or more) within the placement.
newGetDevicesInPlacementResponse :: Int -> GetDevicesInPlacementResponse

-- | <i>See:</i> <a>newDescribePlacement</a> smart constructor.
data DescribePlacement
DescribePlacement' :: Text -> Text -> DescribePlacement

-- | Create a value of <a>DescribePlacement</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:placementName:DescribePlacement'</a>,
--   <a>describePlacement_placementName</a> - The name of the placement
--   within a project.
--   
--   <a>$sel:projectName:DescribePlacement'</a>,
--   <a>describePlacement_projectName</a> - The project containing the
--   placement to be described.
newDescribePlacement :: Text -> Text -> DescribePlacement

-- | <i>See:</i> <a>newDescribePlacementResponse</a> smart constructor.
data DescribePlacementResponse
DescribePlacementResponse' :: Int -> PlacementDescription -> DescribePlacementResponse

-- | Create a value of <a>DescribePlacementResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DescribePlacementResponse'</a>,
--   <a>describePlacementResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:placement:DescribePlacementResponse'</a>,
--   <a>describePlacementResponse_placement</a> - An object describing the
--   placement.
newDescribePlacementResponse :: Int -> PlacementDescription -> DescribePlacementResponse

-- | <i>See:</i> <a>newAssociateDeviceWithPlacement</a> smart constructor.
data AssociateDeviceWithPlacement
AssociateDeviceWithPlacement' :: Text -> Text -> Text -> Text -> AssociateDeviceWithPlacement

-- | Create a value of <a>AssociateDeviceWithPlacement</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:projectName:AssociateDeviceWithPlacement'</a>,
--   <a>associateDeviceWithPlacement_projectName</a> - The name of the
--   project containing the placement in which to associate the device.
--   
--   <a>$sel:placementName:AssociateDeviceWithPlacement'</a>,
--   <a>associateDeviceWithPlacement_placementName</a> - The name of the
--   placement in which to associate the device.
--   
--   <a>$sel:deviceId:AssociateDeviceWithPlacement'</a>,
--   <a>associateDeviceWithPlacement_deviceId</a> - The ID of the physical
--   device to be associated with the given placement in the project. Note
--   that a mandatory 4 character prefix is required for all
--   <tt>deviceId</tt> values.
--   
--   <a>$sel:deviceTemplateName:AssociateDeviceWithPlacement'</a>,
--   <a>associateDeviceWithPlacement_deviceTemplateName</a> - The device
--   template name to associate with the device ID.
newAssociateDeviceWithPlacement :: Text -> Text -> Text -> Text -> AssociateDeviceWithPlacement

-- | <i>See:</i> <a>newAssociateDeviceWithPlacementResponse</a> smart
--   constructor.
data AssociateDeviceWithPlacementResponse
AssociateDeviceWithPlacementResponse' :: Int -> AssociateDeviceWithPlacementResponse

-- | Create a value of <a>AssociateDeviceWithPlacementResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:AssociateDeviceWithPlacementResponse'</a>,
--   <a>associateDeviceWithPlacementResponse_httpStatus</a> - The
--   response's http status code.
newAssociateDeviceWithPlacementResponse :: Int -> AssociateDeviceWithPlacementResponse

-- | <i>See:</i> <a>newDeletePlacement</a> smart constructor.
data DeletePlacement
DeletePlacement' :: Text -> Text -> DeletePlacement

-- | Create a value of <a>DeletePlacement</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:placementName:DeletePlacement'</a>,
--   <a>deletePlacement_placementName</a> - The name of the empty placement
--   to delete.
--   
--   <a>$sel:projectName:DeletePlacement'</a>,
--   <a>deletePlacement_projectName</a> - The project containing the empty
--   placement to delete.
newDeletePlacement :: Text -> Text -> DeletePlacement

-- | <i>See:</i> <a>newDeletePlacementResponse</a> smart constructor.
data DeletePlacementResponse
DeletePlacementResponse' :: Int -> DeletePlacementResponse

-- | Create a value of <a>DeletePlacementResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeletePlacementResponse'</a>,
--   <a>deletePlacementResponse_httpStatus</a> - The response's http status
--   code.
newDeletePlacementResponse :: Int -> DeletePlacementResponse

-- | <i>See:</i> <a>newUpdatePlacement</a> smart constructor.
data UpdatePlacement
UpdatePlacement' :: Maybe (HashMap Text Text) -> Text -> Text -> UpdatePlacement

-- | Create a value of <a>UpdatePlacement</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:attributes:UpdatePlacement'</a>,
--   <a>updatePlacement_attributes</a> - The user-defined object of
--   attributes used to update the placement. The maximum number of
--   key/value pairs is 50.
--   
--   <a>$sel:placementName:UpdatePlacement'</a>,
--   <a>updatePlacement_placementName</a> - The name of the placement to
--   update.
--   
--   <a>$sel:projectName:UpdatePlacement'</a>,
--   <a>updatePlacement_projectName</a> - The name of the project
--   containing the placement to be updated.
newUpdatePlacement :: Text -> Text -> UpdatePlacement

-- | <i>See:</i> <a>newUpdatePlacementResponse</a> smart constructor.
data UpdatePlacementResponse
UpdatePlacementResponse' :: Int -> UpdatePlacementResponse

-- | Create a value of <a>UpdatePlacementResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdatePlacementResponse'</a>,
--   <a>updatePlacementResponse_httpStatus</a> - The response's http status
--   code.
newUpdatePlacementResponse :: Int -> UpdatePlacementResponse

-- | <i>See:</i> <a>newTagResource</a> smart constructor.
data TagResource
TagResource' :: Text -> HashMap Text Text -> TagResource

-- | Create a value of <a>TagResource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:TagResource'</a>, <a>tagResource_resourceArn</a> -
--   The ARN of the resouce for which tag(s) should be added or modified.
--   
--   <a>$sel:tags:TagResource'</a>, <a>tagResource_tags</a> - The new or
--   modifying tag(s) for the resource. See <a>AWS IoT 1-Click Service
--   Limits</a> for the maximum number of tags allowed per resource.
newTagResource :: Text -> TagResource

-- | <i>See:</i> <a>newTagResourceResponse</a> smart constructor.
data TagResourceResponse
TagResourceResponse' :: Int -> TagResourceResponse

-- | Create a value of <a>TagResourceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:TagResourceResponse'</a>,
--   <a>tagResourceResponse_httpStatus</a> - The response's http status
--   code.
newTagResourceResponse :: Int -> TagResourceResponse

-- | <i>See:</i> <a>newListPlacements</a> smart constructor.
data ListPlacements
ListPlacements' :: Maybe Text -> Maybe Natural -> Text -> ListPlacements

-- | Create a value of <a>ListPlacements</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListPlacements'</a>, <a>listPlacements_nextToken</a>
--   - The token to retrieve the next set of results.
--   
--   <a>$sel:maxResults:ListPlacements'</a>,
--   <a>listPlacements_maxResults</a> - The maximum number of results to
--   return per request. If not set, a default value of 100 is used.
--   
--   <a>$sel:projectName:ListPlacements'</a>,
--   <a>listPlacements_projectName</a> - The project containing the
--   placements to be listed.
newListPlacements :: Text -> ListPlacements

-- | <i>See:</i> <a>newListPlacementsResponse</a> smart constructor.
data ListPlacementsResponse
ListPlacementsResponse' :: Maybe Text -> Int -> [PlacementSummary] -> ListPlacementsResponse

-- | Create a value of <a>ListPlacementsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListPlacements'</a>,
--   <a>listPlacementsResponse_nextToken</a> - The token used to retrieve
--   the next set of results - will be effectively empty if there are no
--   further results.
--   
--   <a>$sel:httpStatus:ListPlacementsResponse'</a>,
--   <a>listPlacementsResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:placements:ListPlacementsResponse'</a>,
--   <a>listPlacementsResponse_placements</a> - An object listing the
--   requested placements.
newListPlacementsResponse :: Int -> ListPlacementsResponse

-- | <i>See:</i> <a>newUntagResource</a> smart constructor.
data UntagResource
UntagResource' :: Text -> NonEmpty Text -> UntagResource

-- | Create a value of <a>UntagResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:UntagResource'</a>,
--   <a>untagResource_resourceArn</a> - The ARN of the resource whose tag
--   you want to remove.
--   
--   <a>$sel:tagKeys:UntagResource'</a>, <a>untagResource_tagKeys</a> - The
--   keys of those tags which you want to remove.
newUntagResource :: Text -> NonEmpty Text -> UntagResource

-- | <i>See:</i> <a>newUntagResourceResponse</a> smart constructor.
data UntagResourceResponse
UntagResourceResponse' :: Int -> UntagResourceResponse

-- | Create a value of <a>UntagResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UntagResourceResponse'</a>,
--   <a>untagResourceResponse_httpStatus</a> - The response's http status
--   code.
newUntagResourceResponse :: Int -> UntagResourceResponse

-- | <i>See:</i> <a>newCreateProject</a> smart constructor.
data CreateProject
CreateProject' :: Maybe PlacementTemplate -> Maybe Text -> Maybe (HashMap Text Text) -> Text -> CreateProject

-- | Create a value of <a>CreateProject</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:placementTemplate:CreateProject'</a>,
--   <a>createProject_placementTemplate</a> - The schema defining the
--   placement to be created. A placement template defines placement
--   default attributes and device templates. You cannot add or remove
--   device templates after the project has been created. However, you can
--   update <tt>callbackOverrides</tt> for the device templates using the
--   <tt>UpdateProject</tt> API.
--   
--   <a>$sel:description:CreateProject'</a>,
--   <a>createProject_description</a> - An optional description for the
--   project.
--   
--   <a>$sel:tags:CreateProject'</a>, <a>createProject_tags</a> - Optional
--   tags (metadata key/value pairs) to be associated with the project. For
--   example, <tt>{ {"key1": "value1", "key2": "value2"} }</tt>. For more
--   information, see <a>AWS Tagging Strategies</a>.
--   
--   <a>$sel:projectName:CreateProject'</a>,
--   <a>createProject_projectName</a> - The name of the project to create.
newCreateProject :: Text -> CreateProject

-- | <i>See:</i> <a>newCreateProjectResponse</a> smart constructor.
data CreateProjectResponse
CreateProjectResponse' :: Int -> CreateProjectResponse

-- | Create a value of <a>CreateProjectResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreateProjectResponse'</a>,
--   <a>createProjectResponse_httpStatus</a> - The response's http status
--   code.
newCreateProjectResponse :: Int -> CreateProjectResponse

-- | An object representing a device for a placement template (see
--   PlacementTemplate).
--   
--   <i>See:</i> <a>newDeviceTemplate</a> smart constructor.
data DeviceTemplate
DeviceTemplate' :: Maybe Text -> Maybe (HashMap Text Text) -> DeviceTemplate

-- | Create a value of <a>DeviceTemplate</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deviceType:DeviceTemplate'</a>,
--   <a>deviceTemplate_deviceType</a> - The device type, which currently
--   must be <tt>"button"</tt>.
--   
--   <a>$sel:callbackOverrides:DeviceTemplate'</a>,
--   <a>deviceTemplate_callbackOverrides</a> - An optional Lambda function
--   to invoke instead of the default Lambda function provided by the
--   placement template.
newDeviceTemplate :: DeviceTemplate

-- | An object describing a project's placement.
--   
--   <i>See:</i> <a>newPlacementDescription</a> smart constructor.
data PlacementDescription
PlacementDescription' :: Text -> Text -> HashMap Text Text -> POSIX -> POSIX -> PlacementDescription

-- | Create a value of <a>PlacementDescription</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:projectName:PlacementDescription'</a>,
--   <a>placementDescription_projectName</a> - The name of the project
--   containing the placement.
--   
--   <a>$sel:placementName:PlacementDescription'</a>,
--   <a>placementDescription_placementName</a> - The name of the placement.
--   
--   <a>$sel:attributes:PlacementDescription'</a>,
--   <a>placementDescription_attributes</a> - The user-defined attributes
--   associated with the placement.
--   
--   <a>$sel:createdDate:PlacementDescription'</a>,
--   <a>placementDescription_createdDate</a> - The date when the placement
--   was initially created, in UNIX epoch time format.
--   
--   <a>$sel:updatedDate:PlacementDescription'</a>,
--   <a>placementDescription_updatedDate</a> - The date when the placement
--   was last updated, in UNIX epoch time format. If the placement was not
--   updated, then <tt>createdDate</tt> and <tt>updatedDate</tt> are the
--   same.
newPlacementDescription :: Text -> Text -> UTCTime -> UTCTime -> PlacementDescription

-- | An object providing summary information for a particular placement.
--   
--   <i>See:</i> <a>newPlacementSummary</a> smart constructor.
data PlacementSummary
PlacementSummary' :: Text -> Text -> POSIX -> POSIX -> PlacementSummary

-- | Create a value of <a>PlacementSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:projectName:PlacementSummary'</a>,
--   <a>placementSummary_projectName</a> - The name of the project
--   containing the placement.
--   
--   <a>$sel:placementName:PlacementSummary'</a>,
--   <a>placementSummary_placementName</a> - The name of the placement
--   being summarized.
--   
--   <a>$sel:createdDate:PlacementSummary'</a>,
--   <a>placementSummary_createdDate</a> - The date when the placement was
--   originally created, in UNIX epoch time format.
--   
--   <a>$sel:updatedDate:PlacementSummary'</a>,
--   <a>placementSummary_updatedDate</a> - The date when the placement was
--   last updated, in UNIX epoch time format. If the placement was not
--   updated, then <tt>createdDate</tt> and <tt>updatedDate</tt> are the
--   same.
newPlacementSummary :: Text -> Text -> UTCTime -> UTCTime -> PlacementSummary

-- | An object defining the template for a placement.
--   
--   <i>See:</i> <a>newPlacementTemplate</a> smart constructor.
data PlacementTemplate
PlacementTemplate' :: Maybe (HashMap Text DeviceTemplate) -> Maybe (HashMap Text Text) -> PlacementTemplate

-- | Create a value of <a>PlacementTemplate</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deviceTemplates:PlacementTemplate'</a>,
--   <a>placementTemplate_deviceTemplates</a> - An object specifying the
--   DeviceTemplate for all placements using this (PlacementTemplate)
--   template.
--   
--   <a>$sel:defaultAttributes:PlacementTemplate'</a>,
--   <a>placementTemplate_defaultAttributes</a> - The default attributes
--   (key/value pairs) to be applied to all placements using this template.
newPlacementTemplate :: PlacementTemplate

-- | An object providing detailed information for a particular project
--   associated with an AWS account and region.
--   
--   <i>See:</i> <a>newProjectDescription</a> smart constructor.
data ProjectDescription
ProjectDescription' :: Maybe Text -> Maybe PlacementTemplate -> Maybe Text -> Maybe (HashMap Text Text) -> Text -> POSIX -> POSIX -> ProjectDescription

-- | Create a value of <a>ProjectDescription</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:ProjectDescription'</a>, <a>projectDescription_arn</a> -
--   The ARN of the project.
--   
--   <a>$sel:placementTemplate:ProjectDescription'</a>,
--   <a>projectDescription_placementTemplate</a> - An object describing the
--   project's placement specifications.
--   
--   <a>$sel:description:ProjectDescription'</a>,
--   <a>projectDescription_description</a> - The description of the
--   project.
--   
--   <a>$sel:tags:ProjectDescription'</a>, <a>projectDescription_tags</a> -
--   The tags (metadata key/value pairs) associated with the project.
--   
--   <a>$sel:projectName:ProjectDescription'</a>,
--   <a>projectDescription_projectName</a> - The name of the project for
--   which to obtain information from.
--   
--   <a>$sel:createdDate:ProjectDescription'</a>,
--   <a>projectDescription_createdDate</a> - The date when the project was
--   originally created, in UNIX epoch time format.
--   
--   <a>$sel:updatedDate:ProjectDescription'</a>,
--   <a>projectDescription_updatedDate</a> - The date when the project was
--   last updated, in UNIX epoch time format. If the project was not
--   updated, then <tt>createdDate</tt> and <tt>updatedDate</tt> are the
--   same.
newProjectDescription :: Text -> UTCTime -> UTCTime -> ProjectDescription

-- | An object providing summary information for a particular project for
--   an associated AWS account and region.
--   
--   <i>See:</i> <a>newProjectSummary</a> smart constructor.
data ProjectSummary
ProjectSummary' :: Maybe Text -> Maybe (HashMap Text Text) -> Text -> POSIX -> POSIX -> ProjectSummary

-- | Create a value of <a>ProjectSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:ProjectSummary'</a>, <a>projectSummary_arn</a> - The ARN
--   of the project.
--   
--   <a>$sel:tags:ProjectSummary'</a>, <a>projectSummary_tags</a> - The
--   tags (metadata key/value pairs) associated with the project.
--   
--   <a>$sel:projectName:ProjectSummary'</a>,
--   <a>projectSummary_projectName</a> - The name of the project being
--   summarized.
--   
--   <a>$sel:createdDate:ProjectSummary'</a>,
--   <a>projectSummary_createdDate</a> - The date when the project was
--   originally created, in UNIX epoch time format.
--   
--   <a>$sel:updatedDate:ProjectSummary'</a>,
--   <a>projectSummary_updatedDate</a> - The date when the project was last
--   updated, in UNIX epoch time format. If the project was not updated,
--   then <tt>createdDate</tt> and <tt>updatedDate</tt> are the same.
newProjectSummary :: Text -> UTCTime -> UTCTime -> ProjectSummary
